address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|161-16-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x4134; SHT file offset|52-65-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x3984; File offset|132-57-0-0
60|data|DCD unk_3984; Virtual address|132-57-0-0
64|data|DCD 0x3984; Physical address|132-57-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x3990; Size in file image|144-57-0-0
168|data|DCD 0x3990; Size in memory image|144-57-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x3DC0; File offset|192-61-0-0
188|data|DCD off_13DC0; Virtual address|192-61-1-0
192|data|DCD 0x13DC0; Physical address|192-61-1-0
196|data|DCD 0x24C; Size in file image|76-2-0-0
200|data|DCD 0x25C; Size in memory image|92-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x3DCC; File offset|204-61-0-0
220|data|DCD stru_13DCC; Virtual address|204-61-1-0
224|data|DCD 0x13DCC; Physical address|204-61-1-0
228|data|DCD 0x150; Size in file image|80-1-0-0
232|data|DCD 0x150; Size in memory image|80-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x3DC0; File offset|192-61-0-0
316|data|DCD off_13DC0; Virtual address|192-61-1-0
320|data|DCD 0x13DC0; Physical address|192-61-1-0
324|data|DCD 0x240; Size in file image|64-2-0-0
328|data|DCD 0x240; Size in memory image|64-2-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x48, 0x79, 0x4F, 0x87, 0x3B, 0x21, 0x17, 0x52, 0xC4; Desc|72-121-79-135-59-33-23-82-196-84-221-45-227-215-40-240-99-11-28-182
436|data|DCD 3|3-0-0-0
440|data|DCD 0x33|51-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x33, 0x37, 0x3C|51-0-0-0-55-0-0-0-60-0-0-0
480|data|DCD 0xD643096A, 0xE834AF00, 0x7C92E3BA, 0xECD54543, 0x9EE3CDDA|106-9-67-214-0-175-52-232-186-227-146-124-67-69-213-236-218-205-227-158-190-218-87-27-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-234-211-239-14-118-84-60-148-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_614 - byte_614, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_614 - byte_614, dword_13DC8, 0, 3, 0, 0x14>|0-0-0-0-200-61-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aAbort - byte_614, dword_0, 0, 0x12, 0, 0>; "abort"|231-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aClPerror - byte_614, dword_0, 0, 0x12, 0, 0>; "cl_perror"|218-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aLibcStartMain - byte_614, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|95-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aGStrHash - byte_614, dword_0, 0, 0x12, 0, 0>; "g_str_hash"|15-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aGMainLoopQuit - byte_614, dword_0, 0, 0x12, 0, 0>; "g_main_loop_quit"|219-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aGmonStart - byte_614, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|26-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
676|data|Elf32_Sym <aJvRegisterclas - byte_614, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|41-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
692|data|Elf32_Sym <aGHashTableInse - byte_614, dword_0, 0, 0x12, 0, 0>; "g_hash_table_insert"|61-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aMemset - byte_614, dword_0, 0, 0x12, 0, 0>; "memset"|251-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aClLogEnableStd - byte_614, dword_0, 0, 0x12, 0, 0>; "cl_log_enable_stderr"|78-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aWait - byte_614, dword_0, 0, 0x12, 0, 0>; "wait"|204-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aGMainLoopNew - byte_614, dword_0, 0, 0x12, 0, 0>; "g_main_loop_new"|252-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aIpcChannelPair - byte_614, dword_0, 0, 0x12, 0, 0>; "ipc_channel_pair"|99-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aItmDeregistert - byte_614, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
804|data|Elf32_Sym <aClPollIgnore - byte_614, dword_0, 0, 0x12, 0, 0>; "cl_poll_ignore"|203-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aFree - byte_614, dword_0, 0, 0x12, 0, 0>; "free"|113-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aItmRegistertmc - byte_614, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|109-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
852|data|Elf32_Sym <aGHashTableNew - byte_614, dword_0, 0, 0x12, 0, 0>; "g_hash_table_new"|135-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aIpcSetPollfunc - byte_614, dword_0, 0, 0x12, 0, 0>; "ipc_set_pollfunc"|254-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aGetopt - byte_614, dword_0, 0, 0x12, 0, 0>; "getopt"|19-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aIpcChannelCons - byte_614, dword_0, 0, 0x12, 0, 0>; "ipc_channel_constructor"|54-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aXpgBasename - byte_614, dword_0, 0, 0x12, 0, 0>; "__xpg_basename"|176-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aDumpIpcInfo - byte_614, dword_0, 0, 0x12, 0, 0>; "dump_ipc_info"|15-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aStrtol - byte_614, dword_0, 0, 0x12, 0, 0>; "strtol"|244-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aStackChkGuard - byte_614, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|138-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
980|data|Elf32_Sym <aSnprintfChk - byte_614, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|59-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aGSourceRemove - byte_614, dword_0, 0, 0x12, 0, 0>; "g_source_remove"|152-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aClLogSetEntity - byte_614, dword_0, 0, 0x12, 0, 0>; "cl_log_set_entity"|36-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aMalloc - byte_614, dword_0, 0, 0x12, 0, 0>; "malloc"|45-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aStackChkFail - byte_614, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|214-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aFprintfChk - byte_614, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|31-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aPoll - byte_614, dword_0, 0, 0x12, 0, 0>; "poll"|26-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aGMainAddIpcCha - byte_614, dword_0, 0, 0x12, 0, 0>; "G_main_add_IPC_Channel"|180-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aSleep - byte_614, dword_0, 0, 0x12, 0, 0>; "sleep"|74-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aGMainLoopUnref - byte_614, dword_0, 0, 0x12, 0, 0>; "g_main_loop_unref"|12-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1140|data|Elf32_Sym <aGetpid - byte_614, dword_0, 0, 0x12, 0, 0>; "getpid"|237-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1156|data|Elf32_Sym <aGIdleAdd - byte_614, dword_0, 0, 0x12, 0, 0>; "g_idle_add"|208-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1172|data|Elf32_Sym <aFork - byte_614, dword_0, 0, 0x12, 0, 0>; "fork"|209-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1188|data|Elf32_Sym <aIpcWaitConnCon - byte_614, dword_0, 0, 0x12, 0, 0>; "ipc_wait_conn_constructor"|228-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1204|data|Elf32_Sym <aClLogEnableStd+0xE - byte_614, dword_0, 0, 0x11, 0, 0>; "stderr"|92-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1220|data|Elf32_Sym <aOptarg - byte_614, dword_0, 0, 0x11, 0, 0>; "optarg"|52-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1236|data|Elf32_Sym <aStrncmp - byte_614, dword_0, 0, 0x12, 0, 0>; "strncmp"|196-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1252|data|Elf32_Sym <aClLog - byte_614, dword_0, 0, 0x12, 0, 0>; "cl_log"|29-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1268|data|Elf32_Sym <aGMainLoopRun - byte_614, dword_0, 0, 0x12, 0, 0>; "g_main_loop_run"|236-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1284|data|Elf32_Sym <aGStrEqual - byte_614, dword_0, 0, 0x12, 0, 0>; "g_str_equal"|168-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1300|data|Elf32_Sym <aExit - byte_614, dword_0, 0, 0x12, 0, 0>; "exit"|191-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1316|data|Elf32_Sym <aErrnoLocation - byte_614, dword_0, 0, 0x12, 0, 0>; "__errno_location"|2-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1332|data|Elf32_Sym <aCxaFinalize - byte_614, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|80-2-0-0-0-0-0-0-0-0-0-0-34-0-0-0
1348|data|Elf32_Sym <aDataStart - byte_614, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|43-3-0-0-0-64-1-0-0-0-0-0-16-0-23-0
1364|data|Elf32_Sym <aBssEnd+1 - byte_614, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|90-3-0-0-28-64-1-0-0-0-0-0-16-0-24-0
1380|data|Elf32_Sym <aEnd_0 - byte_614, _end, 0, 0x10, 0, 0x18>; "_end"|109-3-0-0-28-64-1-0-0-0-0-0-16-0-24-0
1396|data|Elf32_Sym <aEdata - byte_614, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|56-3-0-0-12-64-1-0-0-0-0-0-16-0-23-0
1412|data|Elf32_Sym <aLibcCsuInit - byte_614, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|130-3-0-0-113-43-0-0-64-0-0-0-18-0-13-0
1428|data|Elf32_Sym <aBssEnd - byte_614, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|89-3-0-0-28-64-1-0-0-0-0-0-16-0-24-0
1444|data|Elf32_Sym <aBssStart - byte_614, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|63-3-0-0-12-64-1-0-0-0-0-0-16-0-24-0
1460|data|Elf32_Sym <aLibcStartMain+0xD - byte_614, main+1, 0x260, 0x12, 0, 0xD>; "main"|108-2-0-0-65-14-0-0-96-2-0-0-18-0-13-0
1476|data|Elf32_Sym <aLibcCsuInit+0xA - byte_614, .init_proc, 0, 0x12, 0, 0xB>; "_init"|140-3-0-0-56-12-0-0-0-0-0-0-18-0-11-0
1492|data|Elf32_Sym <aLibcCsuFini - byte_614, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|114-3-0-0-177-43-0-0-2-0-0-0-18-0-13-0
1508|data|Elf32_Sym <aLibcCsuFini+0xA - byte_614, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|124-3-0-0-180-43-0-0-0-0-0-0-18-0-14-0
1524|data|Elf32_Sym <aBssStart_0 - byte_614, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|75-3-0-0-12-64-1-0-0-0-0-0-16-0-24-0
1540|data|Elf32_Sym <aEnd - byte_614, _end, 0, 0x10, 0, 0x18>; "__end__"|101-3-0-0-28-64-1-0-0-0-0-0-16-0-24-0
1556|data|DCB 0|0
1557|data|DCB "libplumb.so.2",0|108-105-98-112-108-117-109-98-46-115-111-46-50-0
1571|data|DCB "g_str_hash",0|103-95-115-116-114-95-104-97-115-104-0
1582|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1597|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1617|data|DCB "g_hash_table_insert",0|103-95-104-97-115-104-95-116-97-98-108-101-95-105-110-115-101-114-116-0
1637|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1665|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1691|data|DCB "g_hash_table_new",0|103-95-104-97-115-104-95-116-97-98-108-101-95-110-101-119-0
1708|data|DCB "g_source_remove",0|103-95-115-111-117-114-99-101-95-114-101-109-111-118-101-0
1724|data|DCB "g_str_equal",0|103-95-115-116-114-95-101-113-117-97-108-0
1736|data|DCB "G_main_add_IPC_Channel",0|71-95-109-97-105-110-95-97-100-100-95-73-80-67-95-67-104-97-110-110-101-108-0
1759|data|DCB "cl_poll_ignore",0|99-108-95-112-111-108-108-95-105-103-110-111-114-101-0
1774|data|DCB "cl_perror",0|99-108-95-112-101-114-114-111-114-0
1784|data|DCB "ipc_wait_conn_constructor",0|105-112-99-95-119-97-105-116-95-99-111-110-110-95-99-111-110-115-116-114-117-99-116-111-114-0
1810|data|DCB "ipc_set_pollfunc",0|105-112-99-95-115-101-116-95-112-111-108-108-102-117-110-99-0
1827|data|DCB "dump_ipc_info",0|100-117-109-112-95-105-112-99-95-105-110-102-111-0
1841|data|DCB "cl_log",0|99-108-95-108-111-103-0
1848|data|DCB "cl_log_set_entity",0|99-108-95-108-111-103-95-115-101-116-95-101-110-116-105-116-121-0
1866|data|DCB "ipc_channel_constructor",0|105-112-99-95-99-104-97-110-110-101-108-95-99-111-110-115-116-114-117-99-116-111-114-0
1890|data|DCB "cl_log_enable_stderr",0|99-108-95-108-111-103-95-101-110-97-98-108-101-95-115-116-100-101-114-114-0
1911|data|DCB "ipc_channel_pair",0|105-112-99-95-99-104-97-110-110-101-108-95-112-97-105-114-0
1928|data|DCB "libpils.so.2",0|108-105-98-112-105-108-115-46-115-111-46-50-0
1941|data|DCB "libbz2.so.1.0",0|108-105-98-98-122-50-46-115-111-46-49-46-48-0
1955|data|DCB "libz.so.1",0|108-105-98-122-46-115-111-46-49-0
1965|data|DCB "libxml2.so.2",0|108-105-98-120-109-108-50-46-115-111-46-50-0
1978|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1988|data|DCB "__xpg_basename",0|95-95-120-112-103-95-98-97-115-101-110-97-109-101-0
2003|data|DCB "exit",0|101-120-105-116-0
2008|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
2016|data|DCB "wait",0|119-97-105-116-0
2021|data|DCB "fork",0|102-111-114-107-0
2026|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
2043|data|DCB "abort",0|97-98-111-114-116-0
2049|data|DCB "getpid",0|103-101-116-112-105-100-0
2056|data|DCB "strtol",0|115-116-114-116-111-108-0
2063|data|DCB "memset",0|109-101-109-115-101-116-0
2070|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
2087|data|DCB "getopt",0|103-101-116-111-112-116-0
2094|data|DCB "poll",0|112-111-108-108-0
2099|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
2113|data|DCB "malloc",0|109-97-108-108-111-99-0
2120|data|DCB "optarg",0|111-112-116-97-114-103-0
2127|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
2142|data|DCB "sleep",0|115-108-101-101-112-0
2148|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
2163|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
2181|data|DCB "free",0|102-114-101-101-0
2186|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
2206|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
2224|data|DCB "libuuid.so.1",0|108-105-98-117-117-105-100-46-115-111-46-49-0
2237|data|DCB "librt.so.1",0|108-105-98-114-116-46-115-111-46-49-0
2248|data|DCB "libdl.so.2",0|108-105-98-100-108-46-115-111-46-50-0
2259|data|DCB "libglib-2.0.so.0",0|108-105-98-103-108-105-98-45-50-46-48-46-115-111-46-48-0
2276|data|DCB "g_idle_add",0|103-95-105-100-108-101-95-97-100-100-0
2287|data|DCB "g_main_loop_quit",0|103-95-109-97-105-110-95-108-111-111-112-95-113-117-105-116-0
2304|data|DCB "g_main_loop_run",0|103-95-109-97-105-110-95-108-111-111-112-95-114-117-110-0
2320|data|DCB "g_main_loop_new",0|103-95-109-97-105-110-95-108-111-111-112-95-110-101-119-0
2336|data|DCB "g_main_loop_unref",0|103-95-109-97-105-110-95-108-111-111-112-95-117-110-114-101-102-0
2354|data|DCB "libltdl.so.7",0|108-105-98-108-116-100-108-46-115-111-46-55-0
2367|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
2380|data|DCB "_edata",0|95-101-100-97-116-97-0
2387|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2399|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2413|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2425|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2433|data|DCB "_end",0|95-101-110-100-0
2438|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2454|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2470|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2480|data|DCW 0|0-0
2482|data|DCW 0|0-0
2484|data|DCW 0|0-0
2486|data|DCW 2; abort@@GLIBC_2.4|2-0
2488|data|DCW 0; local  symbol: cl_perror|0-0
2490|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2492|data|DCW 0; local  symbol: g_str_hash|0-0
2494|data|DCW 0; local  symbol: g_main_loop_quit|0-0
2496|data|DCW 0; local  symbol: __gmon_start__|0-0
2498|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2500|data|DCW 0; local  symbol: g_hash_table_insert|0-0
2502|data|DCW 2; memset@@GLIBC_2.4|2-0
2504|data|DCW 0; local  symbol: cl_log_enable_stderr|0-0
2506|data|DCW 2; wait@@GLIBC_2.4|2-0
2508|data|DCW 0; local  symbol: g_main_loop_new|0-0
2510|data|DCW 0; local  symbol: ipc_channel_pair|0-0
2512|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2514|data|DCW 0; local  symbol: cl_poll_ignore|0-0
2516|data|DCW 2; free@@GLIBC_2.4|2-0
2518|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2520|data|DCW 0; local  symbol: g_hash_table_new|0-0
2522|data|DCW 0; local  symbol: ipc_set_pollfunc|0-0
2524|data|DCW 2; getopt@@GLIBC_2.4|2-0
2526|data|DCW 0; local  symbol: ipc_channel_constructor|0-0
2528|data|DCW 2; __xpg_basename@@GLIBC_2.4|2-0
2530|data|DCW 0; local  symbol: dump_ipc_info|0-0
2532|data|DCW 2; strtol@@GLIBC_2.4|2-0
2534|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
2536|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
2538|data|DCW 0; local  symbol: g_source_remove|0-0
2540|data|DCW 0; local  symbol: cl_log_set_entity|0-0
2542|data|DCW 2; malloc@@GLIBC_2.4|2-0
2544|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2546|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
2548|data|DCW 2; poll@@GLIBC_2.4|2-0
2550|data|DCW 0; local  symbol: G_main_add_IPC_Channel|0-0
2552|data|DCW 2; sleep@@GLIBC_2.4|2-0
2554|data|DCW 0; local  symbol: g_main_loop_unref|0-0
2556|data|DCW 2; getpid@@GLIBC_2.4|2-0
2558|data|DCW 0; local  symbol: g_idle_add|0-0
2560|data|DCW 2; fork@@GLIBC_2.4|2-0
2562|data|DCW 0; local  symbol: ipc_wait_conn_constructor|0-0
2564|data|DCW 2; stderr@@GLIBC_2.4|2-0
2566|data|DCW 2; optarg@@GLIBC_2.4|2-0
2568|data|DCW 2; strncmp@@GLIBC_2.4|2-0
2570|data|DCW 0; local  symbol: cl_log|0-0
2572|data|DCW 0; local  symbol: g_main_loop_run|0-0
2574|data|DCW 0; local  symbol: g_str_equal|0-0
2576|data|DCW 2; exit@@GLIBC_2.4|2-0
2578|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
2580|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2582|data|DCW 1; global symbol: __data_start|1-0
2584|data|DCW 1; global symbol: _bss_end__|1-0
2586|data|DCW 1; global symbol: _end|1-0
2588|data|DCW 1; global symbol: _edata|1-0
2590|data|DCW 1; global symbol: __libc_csu_init|1-0
2592|data|DCW 1; global symbol: __bss_end__|1-0
2594|data|DCW 1; global symbol: __bss_start|1-0
2596|data|DCW 1; global symbol: main|1-0
2598|data|DCW 1; global symbol: _init|1-0
2600|data|DCW 1; global symbol: __libc_csu_fini|1-0
2602|data|DCW 1; global symbol: _fini|1-0
2604|data|DCW 1; global symbol: __bss_start__|1-0
2606|data|DCW 1; global symbol: __end__|1-0
2608|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_614, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-118-2-0-0-16-0-0-0-32-0-0-0
2624|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_614, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-146-3-0-0-0-0-0-0
2640|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_614, 0x10, 0>; "libc.so.6"|1-0-1-0-166-1-0-0-16-0-0-0-0-0-0-0
2656|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_614, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-146-3-0-0-0-0-0-0
2672|data|Elf32_Rel <0x13DC0, 0x17>; R_ARM_RELATIVE|192-61-1-0-23-0-0-0
2680|data|Elf32_Rel <0x13DC4, 0x17>; R_ARM_RELATIVE|196-61-1-0-23-0-0-0
2688|data|Elf32_Rel <0x13FC8, 0x17>; R_ARM_RELATIVE|200-63-1-0-23-0-0-0
2696|data|Elf32_Rel <0x13FE0, 0x17>; R_ARM_RELATIVE|224-63-1-0-23-0-0-0
2704|data|Elf32_Rel <0x13FFC, 0x17>; R_ARM_RELATIVE|252-63-1-0-23-0-0-0
2712|data|Elf32_Rel <0x14004, 0x17>; R_ARM_RELATIVE|4-64-1-0-23-0-0-0
2720|data|Elf32_Rel <0x13FCC, 0x615>; R_ARM_GLOB_DAT g_str_hash|204-63-1-0-21-6-0-0
2728|data|Elf32_Rel <0x13FD0, 0x815>; R_ARM_GLOB_DAT __gmon_start__|208-63-1-0-21-8-0-0
2736|data|Elf32_Rel <0x13FD4, 0x915>; R_ARM_GLOB_DAT _Jv_RegisterClasses|212-63-1-0-21-9-0-0
2744|data|Elf32_Rel <0x13FD8, 0x1015>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-63-1-0-21-16-0-0
2752|data|Elf32_Rel <0x13FDC, 0x1315>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|220-63-1-0-21-19-0-0
2760|data|Elf32_Rel <0x13FE4, 0x1B15>; R_ARM_GLOB_DAT __stack_chk_guard|228-63-1-0-21-27-0-0
2768|data|Elf32_Rel <0x13FE8, 0x2215>; R_ARM_GLOB_DAT poll|232-63-1-0-21-34-0-0
2776|data|Elf32_Rel <0x13FEC, 0x2A15>; R_ARM_GLOB_DAT stderr|236-63-1-0-21-42-0-0
2784|data|Elf32_Rel <0x13FF0, 0x2B15>; R_ARM_GLOB_DAT optarg|240-63-1-0-21-43-0-0
2792|data|Elf32_Rel <0x13FF4, 0x2F15>; R_ARM_GLOB_DAT g_str_equal|244-63-1-0-21-47-0-0
2800|data|Elf32_Rel <0x13FF8, 0x3215>; R_ARM_GLOB_DAT __cxa_finalize|248-63-1-0-21-50-0-0
2808|data|Elf32_Rel <0x13F28, 0x316>; R_ARM_JUMP_SLOT abort|40-63-1-0-22-3-0-0
2816|data|Elf32_Rel <0x13F2C, 0x416>; R_ARM_JUMP_SLOT cl_perror|44-63-1-0-22-4-0-0
2824|data|Elf32_Rel <0x13F30, 0x516>; R_ARM_JUMP_SLOT __libc_start_main|48-63-1-0-22-5-0-0
2832|data|Elf32_Rel <0x13F34, 0x716>; R_ARM_JUMP_SLOT g_main_loop_quit|52-63-1-0-22-7-0-0
2840|data|Elf32_Rel <0x13F38, 0x816>; R_ARM_JUMP_SLOT __gmon_start__|56-63-1-0-22-8-0-0
2848|data|Elf32_Rel <0x13F3C, 0xA16>; R_ARM_JUMP_SLOT g_hash_table_insert|60-63-1-0-22-10-0-0
2856|data|Elf32_Rel <0x13F40, 0xB16>; R_ARM_JUMP_SLOT memset|64-63-1-0-22-11-0-0
2864|data|Elf32_Rel <0x13F44, 0xC16>; R_ARM_JUMP_SLOT cl_log_enable_stderr|68-63-1-0-22-12-0-0
2872|data|Elf32_Rel <0x13F48, 0xD16>; R_ARM_JUMP_SLOT wait|72-63-1-0-22-13-0-0
2880|data|Elf32_Rel <0x13F4C, 0xE16>; R_ARM_JUMP_SLOT g_main_loop_new|76-63-1-0-22-14-0-0
2888|data|Elf32_Rel <0x13F50, 0xF16>; R_ARM_JUMP_SLOT ipc_channel_pair|80-63-1-0-22-15-0-0
2896|data|Elf32_Rel <0x13F54, 0x1116>; R_ARM_JUMP_SLOT cl_poll_ignore|84-63-1-0-22-17-0-0
2904|data|Elf32_Rel <0x13F58, 0x1216>; R_ARM_JUMP_SLOT free|88-63-1-0-22-18-0-0
2912|data|Elf32_Rel <0x13F5C, 0x1416>; R_ARM_JUMP_SLOT g_hash_table_new|92-63-1-0-22-20-0-0
2920|data|Elf32_Rel <0x13F60, 0x1516>; R_ARM_JUMP_SLOT ipc_set_pollfunc|96-63-1-0-22-21-0-0
2928|data|Elf32_Rel <0x13F64, 0x1616>; R_ARM_JUMP_SLOT getopt|100-63-1-0-22-22-0-0
2936|data|Elf32_Rel <0x13F68, 0x1716>; R_ARM_JUMP_SLOT ipc_channel_constructor|104-63-1-0-22-23-0-0
2944|data|Elf32_Rel <0x13F6C, 0x1816>; R_ARM_JUMP_SLOT __xpg_basename|108-63-1-0-22-24-0-0
2952|data|Elf32_Rel <0x13F70, 0x1916>; R_ARM_JUMP_SLOT dump_ipc_info|112-63-1-0-22-25-0-0
2960|data|Elf32_Rel <0x13F74, 0x1A16>; R_ARM_JUMP_SLOT strtol|116-63-1-0-22-26-0-0
2968|data|Elf32_Rel <0x13F78, 0x1C16>; R_ARM_JUMP_SLOT __snprintf_chk|120-63-1-0-22-28-0-0
2976|data|Elf32_Rel <0x13F7C, 0x1D16>; R_ARM_JUMP_SLOT g_source_remove|124-63-1-0-22-29-0-0
2984|data|Elf32_Rel <0x13F80, 0x1E16>; R_ARM_JUMP_SLOT cl_log_set_entity|128-63-1-0-22-30-0-0
2992|data|Elf32_Rel <0x13F84, 0x1F16>; R_ARM_JUMP_SLOT malloc|132-63-1-0-22-31-0-0
3000|data|Elf32_Rel <0x13F88, 0x2016>; R_ARM_JUMP_SLOT __stack_chk_fail|136-63-1-0-22-32-0-0
3008|data|Elf32_Rel <0x13F8C, 0x2116>; R_ARM_JUMP_SLOT __fprintf_chk|140-63-1-0-22-33-0-0
3016|data|Elf32_Rel <0x13F90, 0x2216>; R_ARM_JUMP_SLOT poll|144-63-1-0-22-34-0-0
3024|data|Elf32_Rel <0x13F94, 0x2316>; R_ARM_JUMP_SLOT G_main_add_IPC_Channel|148-63-1-0-22-35-0-0
3032|data|Elf32_Rel <0x13F98, 0x2416>; R_ARM_JUMP_SLOT sleep|152-63-1-0-22-36-0-0
3040|data|Elf32_Rel <0x13F9C, 0x2516>; R_ARM_JUMP_SLOT g_main_loop_unref|156-63-1-0-22-37-0-0
3048|data|Elf32_Rel <0x13FA0, 0x2616>; R_ARM_JUMP_SLOT getpid|160-63-1-0-22-38-0-0
3056|data|Elf32_Rel <0x13FA4, 0x2716>; R_ARM_JUMP_SLOT g_idle_add|164-63-1-0-22-39-0-0
3064|data|Elf32_Rel <0x13FA8, 0x2816>; R_ARM_JUMP_SLOT fork|168-63-1-0-22-40-0-0
3072|data|Elf32_Rel <0x13FAC, 0x2916>; R_ARM_JUMP_SLOT ipc_wait_conn_constructor|172-63-1-0-22-41-0-0
3080|data|Elf32_Rel <0x13FB0, 0x2C16>; R_ARM_JUMP_SLOT strncmp|176-63-1-0-22-44-0-0
3088|data|Elf32_Rel <0x13FB4, 0x2D16>; R_ARM_JUMP_SLOT cl_log|180-63-1-0-22-45-0-0
3096|data|Elf32_Rel <0x13FB8, 0x2E16>; R_ARM_JUMP_SLOT g_main_loop_run|184-63-1-0-22-46-0-0
3104|data|Elf32_Rel <0x13FBC, 0x3016>; R_ARM_JUMP_SLOT exit|188-63-1-0-22-48-0-0
3112|data|Elf32_Rel <0x13FC0, 0x3116>; R_ARM_JUMP_SLOT __errno_location|192-63-1-0-22-49-0-0
3120|data|Elf32_Rel <0x13FC4, 0x3216>; R_ARM_JUMP_SLOT __cxa_finalize|196-63-1-0-22-50-0-0
3128|code|PUSH            {R3,LR}; _init|8-64-45-233
3132|code|BL              sub_10E8|41-1-0-235
3136|code|POP             {R3,PC}|8-128-189-232
3140|code|PUSH            {LR}|4-224-45-229
3144|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xC54)|4-224-159-229
3148|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
3152|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
3156|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC54|200-50-1-0
3160|code|ADR             R12, 0xC60|0-198-143-226
3164|code|ADD             R12, R12, #0x13000|19-202-140-226
3168|code|LDR             PC, [R12,#(abort_ptr - 0x13C60)]!; __imp_abort|200-242-188-229
3172|code|ADR             R12, 0xC6C|0-198-143-226
3176|code|ADD             R12, R12, #0x13000|19-202-140-226
3180|code|LDR             PC, [R12,#(cl_perror_ptr - 0x13C6C)]!; __imp_cl_perror|192-242-188-229
3184|code|ADR             R12, 0xC78|0-198-143-226
3188|code|ADD             R12, R12, #0x13000|19-202-140-226
3192|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x13C78)]!; __imp___libc_start_main|184-242-188-229
3196|code|ADR             R12, 0xC84|0-198-143-226
3200|code|ADD             R12, R12, #0x13000|19-202-140-226
3204|code|LDR             PC, [R12,#(g_main_loop_quit_ptr - 0x13C84)]!; __imp_g_main_loop_quit|176-242-188-229
3208|code|ADR             R12, 0xC90|0-198-143-226
3212|code|ADD             R12, R12, #0x13000|19-202-140-226
3216|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x13C90)]!; __imp___gmon_start__|168-242-188-229
3220|code|ADR             R12, 0xC9C|0-198-143-226
3224|code|ADD             R12, R12, #0x13000|19-202-140-226
3228|code|LDR             PC, [R12,#(g_hash_table_insert_ptr - 0x13C9C)]!; __imp_g_hash_table_insert|160-242-188-229
3232|code|ADR             R12, 0xCA8|0-198-143-226
3236|code|ADD             R12, R12, #0x13000|19-202-140-226
3240|code|LDR             PC, [R12,#(memset_ptr - 0x13CA8)]!; __imp_memset|152-242-188-229
3244|code|ADR             R12, 0xCB4|0-198-143-226
3248|code|ADD             R12, R12, #0x13000|19-202-140-226
3252|code|LDR             PC, [R12,#(cl_log_enable_stderr_ptr - 0x13CB4)]!; __imp_cl_log_enable_stderr|144-242-188-229
3256|code|ADR             R12, 0xCC0|0-198-143-226
3260|code|ADD             R12, R12, #0x13000|19-202-140-226
3264|code|LDR             PC, [R12,#(wait_ptr - 0x13CC0)]!; __imp_wait|136-242-188-229
3268|code|ADR             R12, 0xCCC|0-198-143-226
3272|code|ADD             R12, R12, #0x13000|19-202-140-226
3276|code|LDR             PC, [R12,#(g_main_loop_new_ptr - 0x13CCC)]!; __imp_g_main_loop_new|128-242-188-229
3280|code|ADR             R12, 0xCD8|0-198-143-226
3284|code|ADD             R12, R12, #0x13000|19-202-140-226
3288|code|LDR             PC, [R12,#(ipc_channel_pair_ptr - 0x13CD8)]!; __imp_ipc_channel_pair|120-242-188-229
3292|code|ADR             R12, 0xCE4|0-198-143-226
3296|code|ADD             R12, R12, #0x13000|19-202-140-226
3300|code|LDR             PC, [R12,#(cl_poll_ignore_ptr - 0x13CE4)]!; __imp_cl_poll_ignore|112-242-188-229
3304|code|ADR             R12, 0xCF0|0-198-143-226
3308|code|ADD             R12, R12, #0x13000|19-202-140-226
3312|code|LDR             PC, [R12,#(free_ptr - 0x13CF0)]!; __imp_free|104-242-188-229
3316|code|ADR             R12, 0xCFC|0-198-143-226
3320|code|ADD             R12, R12, #0x13000|19-202-140-226
3324|code|LDR             PC, [R12,#(g_hash_table_new_ptr - 0x13CFC)]!; __imp_g_hash_table_new|96-242-188-229
3328|code|ADR             R12, 0xD08|0-198-143-226
3332|code|ADD             R12, R12, #0x13000|19-202-140-226
3336|code|LDR             PC, [R12,#(ipc_set_pollfunc_ptr - 0x13D08)]!; __imp_ipc_set_pollfunc|88-242-188-229
3340|code|ADR             R12, 0xD14|0-198-143-226
3344|code|ADD             R12, R12, #0x13000|19-202-140-226
3348|code|LDR             PC, [R12,#(getopt_ptr - 0x13D14)]!; __imp_getopt|80-242-188-229
3352|code|ADR             R12, 0xD20|0-198-143-226
3356|code|ADD             R12, R12, #0x13000|19-202-140-226
3360|code|LDR             PC, [R12,#(ipc_channel_constructor_ptr - 0x13D20)]!; __imp_ipc_channel_constructor|72-242-188-229
3364|code|ADR             R12, 0xD2C|0-198-143-226
3368|code|ADD             R12, R12, #0x13000|19-202-140-226
3372|code|LDR             PC, [R12,#(__xpg_basename_ptr - 0x13D2C)]!; __imp___xpg_basename|64-242-188-229
3376|code|ADR             R12, 0xD38|0-198-143-226
3380|code|ADD             R12, R12, #0x13000|19-202-140-226
3384|code|LDR             PC, [R12,#(dump_ipc_info_ptr - 0x13D38)]!; __imp_dump_ipc_info|56-242-188-229
3388|code|ADR             R12, 0xD44|0-198-143-226
3392|code|ADD             R12, R12, #0x13000|19-202-140-226
3396|code|LDR             PC, [R12,#(strtol_ptr - 0x13D44)]!; __imp_strtol|48-242-188-229
3400|code|ADR             R12, 0xD50|0-198-143-226
3404|code|ADD             R12, R12, #0x13000|19-202-140-226
3408|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x13D50)]!; __imp___snprintf_chk|40-242-188-229
3412|code|ADR             R12, 0xD5C|0-198-143-226
3416|code|ADD             R12, R12, #0x13000|19-202-140-226
3420|code|LDR             PC, [R12,#(g_source_remove_ptr - 0x13D5C)]!; __imp_g_source_remove|32-242-188-229
3424|code|ADR             R12, 0xD68|0-198-143-226
3428|code|ADD             R12, R12, #0x13000|19-202-140-226
3432|code|LDR             PC, [R12,#(cl_log_set_entity_ptr - 0x13D68)]!; __imp_cl_log_set_entity|24-242-188-229
3436|code|ADR             R12, 0xD74|0-198-143-226
3440|code|ADD             R12, R12, #0x13000|19-202-140-226
3444|code|LDR             PC, [R12,#(malloc_ptr - 0x13D74)]!; __imp_malloc|16-242-188-229
3448|code|ADR             R12, 0xD80|0-198-143-226
3452|code|ADD             R12, R12, #0x13000|19-202-140-226
3456|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x13D80)]!; __imp___stack_chk_fail|8-242-188-229
3460|code|ADR             R12, 0xD8C|0-198-143-226
3464|code|ADD             R12, R12, #0x13000|19-202-140-226
3468|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x13D8C)]!; __imp___fprintf_chk|0-242-188-229
3472|code|ADR             R12, 0xD98|0-198-143-226
3476|code|ADD             R12, R12, #0x13000|19-202-140-226
3480|code|LDR             PC, [R12,#(poll_ptr - 0x13D98)]!; __imp_poll|248-241-188-229
3484|code|ADR             R12, 0xDA4|0-198-143-226
3488|code|ADD             R12, R12, #0x13000|19-202-140-226
3492|code|LDR             PC, [R12,#(G_main_add_IPC_Channel_ptr - 0x13DA4)]!; __imp_G_main_add_IPC_Channel|240-241-188-229
3496|code|ADR             R12, 0xDB0|0-198-143-226
3500|code|ADD             R12, R12, #0x13000|19-202-140-226
3504|code|LDR             PC, [R12,#(sleep_ptr - 0x13DB0)]!; __imp_sleep|232-241-188-229
3508|code|ADR             R12, 0xDBC|0-198-143-226
3512|code|ADD             R12, R12, #0x13000|19-202-140-226
3516|code|LDR             PC, [R12,#(g_main_loop_unref_ptr - 0x13DBC)]!; __imp_g_main_loop_unref|224-241-188-229
3520|code|ADRL            R12, 0x13DC8|0-198-143-226-19-202-140-226
3528|code|LDR             PC, [R12,#(getpid_ptr - 0x13DC8)]!; __imp_getpid|216-241-188-229
3532|code|BX              PC|120-71
3534|data|ALIGN 0x10|192-70
3536|code|ADRL            R12, 0x13DD8|0-198-143-226-19-202-140-226
3544|code|LDR             PC, [R12,#(g_idle_add_ptr - 0x13DD8)]!; __imp_g_idle_add|204-241-188-229
3548|code|ADRL            R12, 0x13DE4|0-198-143-226-19-202-140-226
3556|code|LDR             PC, [R12,#(fork_ptr - 0x13DE4)]!; __imp_fork|196-241-188-229
3560|code|ADRL            R12, 0x13DF0|0-198-143-226-19-202-140-226
3568|code|LDR             PC, [R12,#(ipc_wait_conn_constructor_ptr - 0x13DF0)]!; __imp_ipc_wait_conn_constructor|188-241-188-229
3572|code|ADRL            R12, 0x13DFC|0-198-143-226-19-202-140-226
3580|code|LDR             PC, [R12,#(strncmp_ptr - 0x13DFC)]!; __imp_strncmp|180-241-188-229
3584|code|BX              PC|120-71
3586|data|ALIGN 4|192-70
3588|code|ADRL            R12, 0x13E0C|0-198-143-226-19-202-140-226
3596|code|LDR             PC, [R12,#(cl_log_ptr - 0x13E0C)]!; __imp_cl_log|168-241-188-229
3600|code|ADRL            R12, 0x13E18|0-198-143-226-19-202-140-226
3608|code|LDR             PC, [R12,#(g_main_loop_run_ptr - 0x13E18)]!; __imp_g_main_loop_run|160-241-188-229
3612|code|ADRL            R12, 0x13E24|0-198-143-226-19-202-140-226
3620|code|LDR             PC, [R12,#(exit_ptr - 0x13E24)]!; __imp_exit|152-241-188-229
3624|code|ADRL            R12, 0x13E30|0-198-143-226-19-202-140-226
3632|code|LDR             PC, [R12,#(__errno_location_ptr - 0x13E30)]!; __imp___errno_location|144-241-188-229
3636|code|ADRL            R12, 0x13E3C|0-198-143-226-19-202-140-226
3644|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x13E3C)]!; __imp___cxa_finalize|136-241-188-229
3648|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3652|code|SUB             SP, SP, #0x2C|139-176
3654|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0xE52)|123-79
3656|code|MOV             R6, R0|6-70
3658|code|LDR             R3, =(__stack_chk_guard_ptr - 0x13F1C)|123-75
3660|code|MOV             R4, R1|12-70
3662|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
3664|code|LDR             R2, =(dword_14008 - 0xE5E)|122-74
3666|code|LDR             R0, [R1]; path|8-104
3668|code|MOV.W           R9, #0|79-240-0-9
3672|code|LDR             R3, [R7,R3]; __stack_chk_guard|251-88
3674|code|ADD             R2, PC; dword_14008|122-68
3676|code|STR             R2, [SP,#0x50+var_44]|3-146
3678|code|MOV             R8, R9|200-70
3680|code|LDR             R2, =(aMaximumDataSiz - 0xE6E); "maximum data size is %d\n"|119-74
3682|code|MOVW            R10, #0x2710|66-242-16-122
3686|code|STR             R3, [SP,#0x50+var_3C]|5-147
3688|code|LDR             R3, [R3]|27-104
3690|code|ADD             R2, PC; "maximum data size is %d\n"|122-68
3692|code|STR             R2, [SP,#0x50+var_38]|6-146
3694|code|LDR             R2, =(aDataSizeMustBe - 0xE76); "data size must be >=0\n"|117-74
3696|code|STR             R3, [SP,#0x50+var_2C]|9-147
3698|code|ADD             R2, PC; "data size must be >=0\n"|122-68
3700|code|STR             R2, [SP,#0x50+var_34]|7-146
3702|code|BLX             __xpg_basename|255-247-86-239
3706|code|LDR             R5, =(aIVucS - 0xE86); "i:vuc:s:"|115-77
3708|code|LDR             R3, =(dword_14010 - 0xE88)|115-75
3710|code|LDR.W           R11, =(dword_14010 - 0xE8C)|223-248-208-177
3714|code|ADD             R5, PC; "i:vuc:s:"|125-68
3716|code|ADD             R3, PC; dword_14010|123-68
3718|code|LDR             R2, =(aNumberOfClient - 0xE8E); "number of clients out of range(1 to %d)"...|115-74
3720|code|ADD             R11, PC; dword_14010|251-68
3722|code|ADD             R2, PC; "number of clients out of range(1 to %d)"...|122-68
3724|code|STR             R2, [SP,#0x50+var_40]|4-146
3726|code|STR             R0, [R3,#(dword_14018 - 0x14010)]|152-96
3728|code|MOV             R0, R6; argc|48-70
3730|code|MOV             R1, R4; argv|33-70
3732|code|MOV             R2, R5; shortopts|42-70
3734|code|BLX             getopt|255-247-58-239
3738|code|ADDS            R3, R0, #1|67-28
3740|code|BEQ             loc_ED6|27-208
3742|code|SUBS            R0, #0x63 ; 'c'; switch 20 cases|99-56
3744|code|CMP             R0, #0x13|19-40
3746|code|BHI.W           def_EA6; jumptable 00000EA6 default case, cases 100-104,106-114,116,117|0-242-139-128
3750|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
3754|data|DCB 0x74; jump table for switch statement|116
3755|data|DCB 0x89|137
3756|data|DCB 0x89|137
3757|data|DCB 0x89|137
3758|data|DCB 0x89|137
3759|data|DCB 0x89|137
3760|data|DCB 0x6B|107
3761|data|DCB 0x89|137
3762|data|DCB 0x89|137
3763|data|DCB 0x89|137
3764|data|DCB 0x89|137
3765|data|DCB 0x89|137
3766|data|DCB 0x89|137
3767|data|DCB 0x89|137
3768|data|DCB 0x89|137
3769|data|DCB 0x89|137
3770|data|DCB 0x52|82
3771|data|DCB 0x89|137
3772|data|DCB 0x89|137
3773|data|DCB 0xA|10
3774|code|LDR.W           R3, [R11,#(dword_14014 - 0x14010)]; jumptable 00000EA6 case 118|219-248-4-48
3778|code|MOV             R0, R6; argc|48-70
3780|code|MOV             R1, R4; argv|33-70
3782|code|MOV             R2, R5; shortopts|42-70
3784|code|ADDS            R3, #1|1-51
3786|code|STR.W           R3, [R11,#(dword_14014 - 0x14010)]|203-248-4-48
3790|code|BLX             getopt|255-247-30-239
3794|code|ADDS            R3, R0, #1|67-28
3796|code|BNE             loc_E9E|227-209
3798|code|CMP.W           R8, #0|184-241-0-15
3802|code|BNE.W           loc_1008|64-240-149-128
3806|code|LDR             R3, =(dword_14010 - 0xEE4)|94-75
3808|code|ADD             R3, PC; dword_14010|123-68
3810|code|LDR             R0, [R3,#(dword_14018 - 0x14010)]|152-104
3812|code|BLX             cl_log_set_entity|255-247-60-239
3816|code|MOVS            R0, #1|1-32
3818|code|BLX             cl_log_enable_stderr|255-247-224-238
3822|code|CMP.W           R9, #0|185-241-0-15
3826|code|BLE             loc_FC2|102-221
3828|code|LDR             R0, =(loc_18BC+1 - 0xF00)|89-72
3830|code|MOV             R2, R10|82-70
3832|code|LDR             R1, =(loc_230C+1 - 0xF02)|89-73
3834|code|MOV             R3, R9|75-70
3836|code|ADD             R0, PC; loc_18BC|120-68
3838|code|ADD             R1, PC; loc_230C|121-68
3840|code|BL              sub_1CC4|0-240-224-254
3844|code|LDR             R1, =(loc_27D0+1 - 0xF0E)|87-73
3846|code|MOV             R2, R10|82-70
3848|code|MOV             R3, R9|75-70
3850|code|ADD             R1, PC; loc_27D0|121-68
3852|code|MOV             R4, R0|4-70
3854|code|LDR             R0, =(sub_1460+1 - 0xF14)|86-72
3856|code|ADD             R0, PC; sub_1460|120-68
3858|code|BL              sub_1CC4|0-240-215-254
3862|code|LDR             R1, =(loc_2224+1 - 0xF20)|85-73
3864|code|MOV             R2, R10|82-70
3866|code|MOV             R3, R9|75-70
3868|code|ADD             R1, PC; loc_2224|121-68
3870|code|ADD             R4, R0|4-68
3872|code|LDR             R0, =(sub_2178+1 - 0xF26)|83-72
3874|code|ADD             R0, PC; sub_2178|120-68
3876|code|BL              sub_1CC4|0-240-206-254
3880|code|ADD             R4, R0|4-68
3882|code|LDR             R1, =(aTotalErrorsD - 0xF34); "TOTAL errors: %d"|82-73
3884|code|MOVS            R0, #6|6-32
3886|code|MOV             R2, R4|34-70
3888|code|ADD             R1, PC; "TOTAL errors: %d"|121-68
3890|code|BLX             cl_log|255-247-104-239
3894|code|LDR             R3, [SP,#0x50+var_3C]|5-155
3896|code|LDR             R2, [SP,#0x50+var_2C]|9-154
3898|code|CMP             R4, #0x7F|127-44
3900|code|MOV             R0, R4|32-70
3902|code|LDR             R3, [R3]|27-104
3904|code|IT GE|168-191
3906|code|MOVGE           R0, #0x7F|127-32
3908|code|CMP             R2, R3|154-66
3910|code|BNE             loc_102E|114-209
3912|code|ADD             SP, SP, #0x2C ; ','|11-176
3914|code|POP.W           {R4-R11,PC}|189-232-240-143
3918|code|LDR             R3, =(optarg_ptr - 0x13F1C); jumptable 00000EA6 case 115|74-75
3920|code|MOVS            R1, #0; endptr|0-33
3922|code|MOVS            R2, #0xA; base|10-34
3924|code|LDR             R3, [R7,R3]; optarg|251-88
3926|code|LDR             R0, [R3]; nptr|24-104
3928|code|BLX             strtol|255-247-240-238
3932|code|LDR             R3, [SP,#0x50+var_44]|3-155
3934|code|CMP             R0, #0|0-40
3936|code|STR             R0, [R3]|24-96
3938|code|BLT             loc_FF2|70-219
3940|code|CMP.W           R0, #0x40000|176-245-128-47
3944|code|BLE             loc_E90|146-221
3946|code|LDR             R0, =(stderr_ptr - 0x13F1C)|68-72
3948|code|MOVS            R1, #1|1-33
3950|code|LDR             R2, [SP,#0x50+var_38]|6-154
3952|code|MOV.W           R3, #0x40000|79-244-128-35
3956|code|ADD             R8, R1|136-68
3958|code|LDR             R0, [R7,R0]; stderr|56-88
3960|code|LDR             R0, [R0]|0-104
3962|code|BLX             __fprintf_chk|255-247-4-239
3966|code|B               loc_E90|135-231
3968|code|LDR             R3, =(optarg_ptr - 0x13F1C); jumptable 00000EA6 case 105|61-75
3970|code|MOVS            R1, #0; endptr|0-33
3972|code|MOVS            R2, #0xA; base|10-34
3974|code|LDR             R3, [R7,R3]; optarg|251-88
3976|code|LDR             R0, [R3]; nptr|24-104
3978|code|BLX             strtol|255-247-216-238
3982|code|MOV             R10, R0|130-70
3984|code|B               loc_E90|126-231
3986|code|LDR             R3, =(optarg_ptr - 0x13F1C); jumptable 00000EA6 case 99|57-75
3988|code|MOVS            R1, #0; endptr|0-33
3990|code|MOVS            R2, #0xA; base|10-34
3992|code|LDR             R3, [R7,R3]; optarg|251-88
3994|code|LDR             R0, [R3]; nptr|24-104
3996|code|BLX             strtol|255-247-206-238
4000|code|CMP             R0, #1|1-40
4002|code|MOV             R9, R0|129-70
4004|code|BEQ.W           loc_E90|63-244-116-175
4008|code|LDR             R0, =(stderr_ptr - 0x13F1C)|52-72
4010|code|MOVS            R1, #1|1-33
4012|code|MOV             R3, R1|11-70
4014|code|LDR             R2, [SP,#0x50+var_40]|4-154
4016|code|ADD             R8, R1|136-68
4018|code|LDR             R0, [R7,R0]; stderr|56-88
4020|code|LDR             R0, [R0]|0-104
4022|code|BLX             __fprintf_chk|255-247-230-238
4026|code|B               loc_E90|105-231
4028|code|ADD.W           R8, R8, #1; jumptable 00000EA6 default case, cases 100-104,106-114,116,117|8-241-1-8
4032|code|B               loc_E90|102-231
4034|code|LDR             R0, =(loc_18BC+1 - 0xFCC)|47-72
4036|code|MOV             R2, R10|82-70
4038|code|LDR             R1, =(loc_230C+1 - 0xFCE)|47-73
4040|code|ADD             R0, PC; loc_18BC|120-68
4042|code|ADD             R1, PC; loc_230C|121-68
4044|code|BL              sub_1A7C|0-240-86-253
4048|code|LDR             R1, =(loc_27D0+1 - 0xFD8)|45-73
4050|code|MOV             R2, R10|82-70
4052|code|ADD             R1, PC; loc_27D0|121-68
4054|code|MOV             R4, R0|4-70
4056|code|LDR             R0, =(sub_1460+1 - 0xFDE)|44-72
4058|code|ADD             R0, PC; sub_1460|120-68
4060|code|BL              sub_1A7C|0-240-78-253
4064|code|LDR             R1, =(loc_2224+1 - 0xFE8)|43-73
4066|code|MOV             R2, R10|82-70
4068|code|ADD             R1, PC; loc_2224|121-68
4070|code|ADD             R4, R0|4-68
4072|code|LDR             R0, =(sub_2178+1 - 0xFEE)|42-72
4074|code|ADD             R0, PC; sub_2178|120-68
4076|code|BL              sub_1A7C|0-240-70-253
4080|code|B               loc_F28|154-231
4082|code|LDR             R3, =(stderr_ptr - 0x13F1C)|34-75
4084|code|MOVS            R1, #1|1-33
4086|code|LDR             R2, [SP,#0x50+var_34]|7-154
4088|code|ADD             R8, R1|136-68
4090|code|LDR             R3, [R7,R3]; stderr|251-88
4092|code|LDR             R0, [R3]|24-104
4094|code|BLX             __fprintf_chk|255-247-194-238
4098|code|LDR             R3, [SP,#0x50+var_44]|3-155
4100|code|LDR             R0, [R3]|24-104
4102|code|B               loc_F64|173-231
4104|code|LDR             R0, =(stderr_ptr - 0x13F1C)|28-72
4106|code|MOVW            R5, #0x2710|66-242-16-117
4110|code|LDR             R3, =(dword_14010 - 0x101C)|34-75
4112|code|MOVS            R4, #0|0-36
4114|code|LDR             R2, =(aUsageSVIIterat - 0x101E); "Usage: %s [-v] [-i iterations] [-c clie"...|34-74
4116|code|MOVS            R1, #1|1-33
4118|code|LDR             R0, [R7,R0]; stderr|56-88
4120|code|ADD             R3, PC; dword_14010|123-68
4122|code|ADD             R2, PC; "Usage: %s [-v] [-i iterations] [-c clie"...|122-68
4124|code|LDR             R3, [R3,#(dword_14018 - 0x14010)]|155-104
4126|code|STR             R5, [SP,#0x50+var_50]|0-149
4128|code|LDR             R0, [R0]|0-104
4130|code|STR             R4, [SP,#0x50+var_4C]|1-148
4132|code|BLX             __fprintf_chk|255-247-174-238
4136|code|MOVS            R0, #1; status|1-32
4138|code|BLX             exit|255-247-248-238
4142|code|BLX             __stack_chk_fail|255-247-164-238
4146|data|ALIGN 4|0-191
4148|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE52|202-48-1-0
4152|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
4156|data|DCD dword_14008 - 0xE5E|170-49-1-0
4160|data|DCD aMaximumDataSiz - 0xE6E; "maximum data size is %d\n"|14-42-0-0
4164|data|DCD aDataSizeMustBe - 0xE76; "data size must be >=0\n"|238-41-0-0
4168|data|DCD aIVucS - 0xE86; "i:vuc:s:"|18-42-0-0
4172|data|DCD dword_14010 - 0xE88|136-49-1-0
4176|data|DCD dword_14010 - 0xE8C|132-49-1-0
4180|data|DCD aNumberOfClient - 0xE8E; "number of clients out of range(1 to %d)"...|170-41-0-0
4184|data|DCD dword_14010 - 0xEE4|44-49-1-0
4188|data|DCD loc_18BC+1 - 0xF00|189-9-0-0
4192|data|DCD loc_230C+1 - 0xF02|11-20-0-0
4196|data|DCD loc_27D0+1 - 0xF0E|195-24-0-0
4200|data|DCD sub_1460+1 - 0xF14|77-5-0-0
4204|data|DCD loc_2224+1 - 0xF20|5-19-0-0
4208|data|DCD sub_2178+1 - 0xF26|83-18-0-0
4212|data|DCD aTotalErrorsD - 0xF34; "TOTAL errors: %d"|60-42-0-0
4216|data|DCD optarg_ptr - 0x13F1C|212-0-0-0
4220|data|DCD stderr_ptr - 0x13F1C|208-0-0-0
4224|data|DCD loc_18BC+1 - 0xFCC|241-8-0-0
4228|data|DCD loc_230C+1 - 0xFCE|63-19-0-0
4232|data|DCD loc_27D0+1 - 0xFD8|249-23-0-0
4236|data|DCD sub_1460+1 - 0xFDE|131-4-0-0
4240|data|DCD loc_2224+1 - 0xFE8|61-18-0-0
4244|data|DCD sub_2178+1 - 0xFEE|139-17-0-0
4248|data|DCD dword_14010 - 0x101C|244-47-1-0
4252|data|DCD aUsageSVIIterat - 0x101E; "Usage: %s [-v] [-i iterations] [-c clie"...|134-40-0-0
4256|code|MOV.W           R11, #0|79-240-0-11
4260|code|MOV.W           LR, #0|79-240-0-14
4264|code|POP             {R1}; argc|2-188
4266|code|MOV             R2, SP; ubp_av|106-70
4268|code|PUSH            {R2}; stack_end|4-180
4270|code|PUSH            {R0}; rtld_fini|1-180
4272|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x10D8)|223-248-36-160
4276|code|ADR             R3, off_10D8|8-163
4278|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4280|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x13F1C)|223-248-32-192
4284|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4288|code|PUSH.W          {R12}; fini|77-248-4-205
4292|code|LDR             R3, =(__libc_csu_init_ptr - 0x13F1C)|6-75
4294|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4298|code|LDR             R0, =(main_ptr - 0x13F1C)|6-72
4300|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4304|code|BLX             __libc_start_main|255-247-206-237
4308|code|BLX             abort|255-247-192-237
4312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10D8|68-46-1-0
4316|data|DCD __libc_csu_fini_ptr - 0x13F1C|172-0-0-0
4320|data|DCD __libc_csu_init_ptr - 0x13F1C|196-0-0-0
4324|data|DCD main_ptr - 0x13F1C|224-0-0-0
4328|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x10F8)|20-48-159-229
4332|code|LDR             R2, =(__gmon_start___ptr_0 - 0x13F1C)|20-32-159-229
4336|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4340|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4344|code|CMP             R2, #0|0-0-82-227
4348|code|BXEQ            LR|30-255-47-1
4352|code|B               __gmon_start__|224-254-255-234
4356|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10F8|36-46-1-0
4360|data|DCD __gmon_start___ptr_0 - 0x13F1C|180-0-0-0
4364|code|LDR             R3, =(__bss_start__ - 0x1114)|7-75
4366|code|LDR             R0, =(__bss_start__ - 0x1118)|8-72
4368|code|ADD             R3, PC; __bss_start__|123-68
4370|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x111E)|8-74
4372|code|ADD             R0, PC; __bss_start__|120-68
4374|code|ADDS            R3, #3|3-51
4376|code|SUBS            R3, R3, R0|27-26
4378|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4380|code|CMP             R3, #6|6-43
4382|code|BLS             locret_1128|3-217
4384|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x13F1C)|5-75
4386|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4388|code|CBZ             R3, locret_1128|3-177
4390|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4392|code|BX              LR|112-71
4394|data|ALIGN 4|0-191
4396|data|DCD __bss_start__ - 0x1114|248-46-1-0
4400|data|DCD __bss_start__ - 0x1118|244-46-1-0
4404|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x111E|254-45-1-0
4408|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x13F1C|188-0-0-0
4412|code|LDR             R1, =(__bss_start__ - 0x1144)|8-73
4414|code|LDR             R0, =(__bss_start__ - 0x1148)|9-72
4416|code|ADD             R1, PC; __bss_start__|121-68
4418|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x114C)|9-75
4420|code|ADD             R0, PC; __bss_start__|120-68
4422|code|SUBS            R1, R1, R0|9-26
4424|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4426|code|ASRS            R1, R1, #2|137-16
4428|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4432|code|ASRS            R1, R1, #1|73-16
4434|code|BEQ             locret_115C|3-208
4436|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x13F1C)|5-74
4438|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4440|code|CBZ             R3, locret_115C|3-177
4442|code|BX              R3; _ITM_registerTMCloneTable|24-71
4444|code|BX              LR|112-71
4446|data|ALIGN 0x10|0-191
4448|data|DCD __bss_start__ - 0x1144|200-46-1-0
4452|data|DCD __bss_start__ - 0x1148|196-46-1-0
4456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x114C|208-45-1-0
4460|data|DCD _ITM_registerTMCloneTable_ptr - 0x13F1C|192-0-0-0
4464|code|PUSH            {R3,LR}|8-181
4466|code|LDR             R3, =(__bss_start__ - 0x117A)|10-75
4468|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x117C)|10-74
4470|code|ADD             R3, PC; __bss_start__|123-68
4472|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4474|code|LDRB            R3, [R3]|27-120
4476|code|CBNZ            R3, locret_119A|107-185
4478|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x13F1C)|9-75
4480|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
4482|code|CBZ             R3, loc_118E|35-177
4484|code|LDR             R3, =(off_14004 - 0x118A)|8-75
4486|code|ADD             R3, PC; off_14004|123-68
4488|code|LDR             R0, [R3]; off_14004 ; void *|24-104
4490|code|BLX             __cxa_finalize|255-247-84-238
4494|code|BL              sub_110C|255-247-189-255
4498|code|LDR             R3, =(__bss_start__ - 0x119A)|6-75
4500|code|MOVS            R2, #1|1-34
4502|code|ADD             R3, PC; __bss_start__|123-68
4504|code|STRB            R2, [R3]|26-112
4506|code|POP             {R3,PC}|8-189
4508|data|DCD __bss_start__ - 0x117A|146-46-1-0
4512|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x117C|160-45-1-0
4516|data|DCD __cxa_finalize_ptr_0 - 0x13F1C|220-0-0-0
4520|data|DCD off_14004 - 0x118A|122-46-1-0
4524|data|DCD __bss_start__ - 0x119A|114-46-1-0
4528|code|LDR             R0, =(dword_13DC8 - 0x11B8)|7-72
4530|code|PUSH            {R3,LR}|8-181
4532|code|ADD             R0, PC; dword_13DC8|120-68
4534|code|LDR             R2, [R0]|2-104
4536|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x11BE)|6-75
4538|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4540|code|CBNZ            R2, loc_11C4|18-185
4542|code|POP.W           {R3,LR}|189-232-8-64
4546|code|B               sub_113C|187-231
4548|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x13F1C)|4-74
4550|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
4552|code|CMP             R3, #0|0-43
4554|code|BEQ             loc_11BE|248-208
4556|code|BLX             R3; _Jv_RegisterClasses|152-71
4558|code|B               loc_11BE|246-231
4560|data|DCD dword_13DC8 - 0x11B8|16-44-1-0
4564|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11BE|94-45-1-0
4568|data|DCD _Jv_RegisterClasses_ptr - 0x13F1C|184-0-0-0
4572|code|PUSH.W          {R4-R9,LR}|45-233-240-67
4576|code|SUB             SP, SP, #0x14|133-176
4578|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x11F2)|23-76
4580|code|ADD.W           R9, R1, #0xFFFFFFFF|1-241-255-57
4584|code|LDR.W           LR, =(__stack_chk_guard_ptr - 0x13F1C)|223-248-88-224
4588|code|MOV             R5, R1|13-70
4590|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
4592|code|LDR             R6, =(aStringD - 0x11FE); "String-%d"|21-78
4594|code|MOV             R7, R3|31-70
4596|code|MOV             R1, R9|73-70
4598|code|LDR.W           R8, [R4,LR]; __stack_chk_guard|84-248-14-128
4602|code|ADD             R6, PC; "String-%d"|126-68
4604|code|STR             R2, [SP,#0x30+var_2C]|1-146
4606|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
4610|code|STR             R6, [SP,#0x30+var_30]|0-150
4612|code|MOVS            R2, #1|1-34
4614|code|LDR.W           R6, [R8]|216-248-0-96
4618|code|MOV             R4, R0|4-70
4620|code|STR             R6, [SP,#0x30+var_24]|3-150
4622|code|BLX             __snprintf_chk|255-247-156-237
4626|code|CMP             R9, R0|129-69
4628|code|BLE             loc_1222|5-221
4630|code|MVNS            R2, R0|194-67
4632|code|MOVS            R1, #0x61 ; 'a'; c|97-33
4634|code|ADD             R0, R4; s|32-68
4636|code|ADD             R2, R5; n|42-68
4638|code|BLX             memset|255-247-64-237
4642|code|ADD             R4, R5|44-68
4644|code|MOVS            R3, #0|0-35
4646|code|LDR             R2, [SP,#0x30+var_24]|3-154
4648|code|STRB.W          R3, [R4,#-1]|4-248-1-60
4652|code|LDR.W           R3, [R8]|216-248-0-48
4656|code|STR             R5, [R7]|61-96
4658|code|CMP             R2, R3|154-66
4660|code|BNE             loc_123C|2-209
4662|code|ADD             SP, SP, #0x14|5-176
4664|code|POP.W           {R4-R9,PC}|189-232-240-131
4668|code|BLX             __stack_chk_fail|255-247-156-237
4672|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11F2|42-45-1-0
4676|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
4680|data|DCD aStringD - 0x11FE; "String-%d"|194-25-0-0
4684|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1256)|46-74
4686|code|MOVS            R1, #0|0-33
4688|code|PUSH            {R4-R7,LR}|240-181
4690|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4692|code|LDR             R6, =(__stack_chk_guard_ptr - 0x13F1C)|45-78
4694|code|MOV             R4, R0|4-70
4696|code|LDR             R0, [R0,#0xC]|192-104
4698|code|SUB             SP, SP, #0xC|131-176
4700|code|LDR             R5, =(dword_14008 - 0x1268)|44-77
4702|code|MOV             R3, R1|11-70
4704|code|LDR             R7, [R2,R6]; __stack_chk_guard|151-89
4706|code|LDR             R6, [R0,#0x10]|6-105
4708|code|ADD             R5, PC; dword_14008|125-68
4710|code|LDR             R2, [R4]|34-104
4712|code|LDR.W           LR, [R7]|215-248-0-224
4716|code|LDR             R6, [R6,#0x44]|118-108
4718|code|ADDS            R2, #1|1-50
4720|code|STR             R2, [R4]|34-96
4722|code|LDR             R2, [R5]|42-104
4724|code|STR.W           LR, [SP,#4]|205-248-4-224
4728|code|BLX             R6|176-71
4730|code|LDR             R1, [R5]|41-104
4732|code|LDR             R2, [R4]|34-104
4734|code|MOV             R3, R0|3-70
4736|code|MOV             R6, R0|6-70
4738|code|LDR             R0, [R0,#8]|128-104
4740|code|BL              sub_11DC|255-247-170-255
4744|code|LDR             R0, [R4,#0xC]|224-104
4746|code|MOV             R1, R6|49-70
4748|code|LDR             R3, [R0,#0x10]|3-105
4750|code|LDR             R3, [R3,#0x10]|27-105
4752|code|BLX             R3|152-71
4754|code|CBNZ            R0, loc_12B4|120-185
4756|code|LDR             R3, [R4,#0x14]|99-105
4758|code|MOVS            R0, #0|0-32
4760|code|CBZ             R3, loc_12A6|43-177
4762|code|LDR             R2, [SP,#4]|1-154
4764|code|LDR             R3, [R7]|59-104
4766|code|CMP             R2, R3|154-66
4768|code|BNE             loc_1304|48-209
4770|code|ADD             SP, SP, #0xC|3-176
4772|code|POP             {R4-R7,PC}|240-189
4774|code|LDR             R0, [R4,#0x10]|32-105
4776|code|LDR             R3, [R4]|35-104
4778|code|CMP             R3, R0|131-66
4780|code|ITE GE|172-191
4782|code|MOVGE           R0, #0|0-32
4784|code|MOVLT           R0, #1|1-32
4786|code|B               loc_129A|242-231
4788|code|LDR             R1, =(aSSendMsgSendFa - 0x12C0); "s_send_msg: send failed %d rc iter %d"|23-73
4790|code|MOV             R2, R0|2-70
4792|code|LDR             R3, [R4]|35-104
4794|code|MOVS            R0, #3|3-32
4796|code|ADD             R1, PC; "s_send_msg: send failed %d rc iter %d"|121-68
4798|code|BLX             cl_log|255-247-162-237
4802|code|LDR             R3, [R4,#0xC]|227-104
4804|code|LDR             R1, =(aSSendMsgChanne - 0x12CE); "s_send_msg: channel status: %d qlen: %l"...|20-73
4806|code|MOVS            R0, #3|3-32
4808|code|LDR             R5, [R3,#0x24]|93-106
4810|code|ADD             R1, PC; "s_send_msg: channel status: %d qlen: %l"...|121-68
4812|code|LDR             R2, [R3]|26-104
4814|code|LDR             R3, [R5]|43-104
4816|code|BLX             cl_log|255-247-152-237
4820|code|LDR             R2, [R4,#0xC]|226-104
4822|code|LDR             R3, [R4,#8]|163-104
4824|code|LDR             R2, [R2]|18-104
4826|code|ADDS            R3, #1|1-51
4828|code|STR             R3, [R4,#8]|163-96
4830|code|CMP             R2, #1|1-42
4832|code|BNE             loc_12F6|9-209
4834|code|CMP.W           R3, #0x3E8|179-245-122-127
4838|code|BLT             loc_1294|213-219
4840|code|LDR             R3, =(dword_14010 - 0x12EE)|12-75
4842|code|ADD             R3, PC; dword_14010|123-68
4844|code|LDR             R0, [R3]|24-104
4846|code|BLX             g_main_loop_quit|255-247-198-236
4850|code|MOVS            R0, #0|0-32
4852|code|B               loc_129A|209-231
4854|code|LDR             R1, =(aSSendMsgExitin - 0x12FE); "s_send_msg: Exiting."|10-73
4856|code|MOVS            R0, #3|3-32
4858|code|ADD             R1, PC; "s_send_msg: Exiting."|121-68
4860|code|BLX             cl_log|255-247-130-237
4864|code|MOVS            R0, #0|0-32
4866|code|B               loc_129A|202-231
4868|code|BLX             __stack_chk_fail|255-247-56-237
4872|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1256|198-44-1-0
4876|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
4880|data|DCD dword_14008 - 0x1268|160-45-1-0
4884|data|DCD aSSendMsgSendFa - 0x12C0; "s_send_msg: send failed %d rc iter %d"|12-25-0-0
4888|data|DCD aSSendMsgChanne - 0x12CE; "s_send_msg: channel status: %d qlen: %l"...|38-25-0-0
4892|data|DCD dword_14010 - 0x12EE|34-45-1-0
4896|data|DCD aSSendMsgExitin - 0x12FE; "s_send_msg: Exiting."|34-25-0-0
4900|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x132C)|67-75
4902|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|68-74
4904|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4906|code|LDR             R1, [R0,#0x10]|1-105
4908|code|PUSH            {R4-R6,LR}|112-181
4910|code|SUB             SP, SP, #0x18|134-176
4912|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
4914|code|MOV             R5, R0|5-70
4916|code|LDR             R3, [R1,#0x30]|11-107
4918|code|LDR             R2, [R6]|50-104
4920|code|STR             R2, [SP,#0x28+var_14]|5-146
4922|code|BLX             R3|152-71
4924|code|LDR             R1, =(aChannelStateD - 0x1344); "channel state: %d"|63-73
4926|code|LDR             R2, [R5]|42-104
4928|code|ADD             R1, PC; "channel state: %d"|121-68
4930|code|MOV             R4, R0|4-70
4932|code|MOVS            R0, #6|6-32
4934|code|BLX             cl_log|255-247-94-237
4938|code|LDR             R3, [R5,#0x28]|171-106
4940|code|LDR             R2, [R3]|26-104
4942|code|CMP             R2, #0|0-42
4944|code|BNE             loc_13CC|60-209
4946|code|CMP             R4, #0|0-44
4948|code|BLE             loc_13DA|65-221
4950|code|ADD             R3, SP, #0x28+var_1C|3-171
4952|code|STR             R3, [SP,#0x28+fds]|1-147
4954|code|MOVS            R3, #0|0-35
4956|code|MOVS            R1, #1; nfds|1-33
4958|code|MOV             R2, R3; timeout|26-70
4960|code|LDR             R0, [SP,#0x28+fds]; fds|1-152
4962|code|STRH.W          R3, [SP,#0x28+var_16]|173-248-18-48
4966|code|MOVS            R3, #0x11|17-35
4968|code|STR             R4, [SP,#0x28+var_1C]|3-148
4970|code|STRH.W          R3, [SP,#0x28+var_18]|173-248-16-48
4974|code|BLX             poll|255-247-16-237
4978|code|CMP             R0, #0|0-40
4980|code|BLT             loc_141A|81-219
4982|code|LDRH.W          R2, [SP,#0x28+var_16]|189-248-18-32
4986|code|LSLS            R1, R2, #0x1F|209-7
4988|code|BMI             loc_13F6|59-212
4990|code|BIC.W           R3, R2, #0x11|34-240-17-3
4994|code|SXTH            R3, R3|27-178
4996|code|CBNZ            R3, loc_13E8|131-187
4998|code|MOVS            R3, #0|0-35
5000|code|LDR             R0, [SP,#0x28+fds]; fds|1-152
5002|code|MOV             R2, R3; timeout|26-70
5004|code|MOVS            R1, #1; nfds|1-33
5006|code|STR             R4, [SP,#0x28+var_1C]|3-148
5008|code|MOVS            R5, #0x11|17-37
5010|code|STRH.W          R3, [SP,#0x28+var_16]|173-248-18-48
5014|code|STRH.W          R5, [SP,#0x28+var_18]|173-248-16-80
5018|code|BLX             poll|255-247-250-236
5022|code|CMP             R0, #0|0-40
5024|code|BLT             loc_1424|64-219
5026|code|LDRH.W          R2, [SP,#0x28+var_16]|189-248-18-32
5030|code|LSLS            R3, R2, #0x1F|211-7
5032|code|BMI             loc_1408|46-212
5034|code|BIC.W           R3, R2, #0x11|34-240-17-3
5038|code|SXTH            R3, R3|27-178
5040|code|CBNZ            R3, loc_13BE|43-185
5042|code|LDR             R2, [SP,#0x28+var_14]|5-154
5044|code|LDR             R3, [R6]|51-104
5046|code|CMP             R2, R3|154-66
5048|code|BNE             loc_142E|57-209
5050|code|ADD             SP, SP, #0x18|6-176
5052|code|POP             {R4-R6,PC}|112-189
5054|code|LDR             R1, =(aEofcheckPollfu - 0x13C8); "EOFcheck PollFunc() bits: 0x%lx"|32-73
5056|code|SXTH            R2, R2|18-178
5058|code|MOVS            R0, #6|6-32
5060|code|ADD             R1, PC; "EOFcheck PollFunc() bits: 0x%lx"|121-68
5062|code|BLX             cl_log|255-247-30-237
5066|code|B               loc_13B2|242-231
5068|code|LDR             R1, =(aEofReceiveQueu - 0x13D4); "EOF Receive queue has %ld messages in i"...|29-73
5070|code|MOVS            R0, #6|6-32
5072|code|ADD             R1, PC; "EOF Receive queue has %ld messages in i"...|121-68
5074|code|BLX             cl_log|255-247-24-237
5078|code|CMP             R4, #0|0-44
5080|code|BGT             loc_1356|189-220
5082|code|LDR             R1, =(aEofReceiveFdD - 0x13E4); "EOF receive fd: %d"|27-73
5084|code|MOVS            R0, #6|6-32
5086|code|MOV             R2, R4|34-70
5088|code|ADD             R1, PC; "EOF receive fd: %d"|121-68
5090|code|BLX             cl_log|255-247-16-237
5094|code|B               loc_1356|182-231
5096|code|LDR             R1, =(aEofcheckPoll2B - 0x13F2); "EOFcheck poll(2) bits: 0x%lx"|24-73
5098|code|SXTH            R2, R2|18-178
5100|code|MOVS            R0, #6|6-32
5102|code|ADD             R1, PC; "EOFcheck poll(2) bits: 0x%lx"|121-68
5104|code|BLX             cl_log|255-247-8-237
5108|code|B               loc_1386|199-231
5110|code|LDR             R1, =(aEofSocketDStil - 0x1400); "EOF socket %d (still) has input ready ("...|22-73
5112|code|MOV             R2, R4|34-70
5114|code|MOVS            R0, #6|6-32
5116|code|ADD             R1, PC; "EOF socket %d (still) has input ready ("...|121-68
5118|code|BLX             cl_log|255-247-2-237
5122|code|LDRH.W          R2, [SP,#0x28+var_16]|189-248-18-32
5126|code|B               loc_137E|186-231
5128|code|LDR             R1, =(aEofSocketDStil_0 - 0x1412); "EOF socket %d (still) has input ready ("...|18-73
5130|code|MOV             R2, R4|34-70
5132|code|MOVS            R0, #6|6-32
5134|code|ADD             R1, PC; "EOF socket %d (still) has input ready ("...|121-68
5136|code|BLX             cl_log|255-247-248-236
5140|code|LDRH.W          R2, [SP,#0x28+var_16]|189-248-18-32
5144|code|B               loc_13AA|199-231
5146|code|LDR             R0, =(aFailedPoll2Cal - 0x1420); "failed poll(2) call in EOFcheck"|15-72
5148|code|ADD             R0, PC; "failed poll(2) call in EOFcheck"|120-68
5150|code|BLX             cl_perror|255-247-34-236
5154|code|B               loc_13B2|198-231
5156|code|LDR             R0, =(aFailedPollfunc - 0x142A); "failed PollFunc() call in EOFcheck"|13-72
5158|code|ADD             R0, PC; "failed PollFunc() call in EOFcheck"|120-68
5160|code|BLX             cl_perror|255-247-28-236
5164|code|B               loc_13B2|193-231
5166|code|BLX             __stack_chk_fail|255-247-164-236
5170|data|ALIGN 4|0-191
5172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x132C|240-43-1-0
5176|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
5180|data|DCD aChannelStateD - 0x1344; "channel state: %d"|244-24-0-0
5184|data|DCD aEofcheckPollfu - 0x13C8; "EOFcheck PollFunc() bits: 0x%lx"|144-25-0-0
5188|data|DCD aEofReceiveQueu - 0x13D4; "EOF Receive queue has %ld messages in i"...|120-24-0-0
5192|data|DCD aEofReceiveFdD - 0x13E4; "EOF receive fd: %d"|148-24-0-0
5196|data|DCD aEofcheckPoll2B - 0x13F2; "EOFcheck poll(2) bits: 0x%lx"|238-24-0-0
5200|data|DCD aEofSocketDStil - 0x1400; "EOF socket %d (still) has input ready ("...|172-24-0-0
5204|data|DCD aEofSocketDStil_0 - 0x1412; "EOF socket %d (still) has input ready ("...|18-25-0-0
5208|data|DCD aFailedPoll2Cal - 0x1420; "failed poll(2) call in EOFcheck"|108-24-0-0
5212|data|DCD aFailedPollfunc - 0x142A; "failed PollFunc() call in EOFcheck"|214-24-0-0
5216|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5220|code|SUB             SP, SP, #0x4C|147-176
5222|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x1472)|180-79
5224|code|MOV             R6, R1|14-70
5226|code|LDR             R3, =(__stack_chk_guard_ptr - 0x13F1C)|180-75
5228|code|MOV             R11, R0|131-70
5230|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
5232|code|LDR             R2, [R0,#0x10]|2-105
5234|code|MOVS            R4, #0|0-36
5236|code|LDR             R3, [R7,R3]; __stack_chk_guard|251-88
5238|code|MOV             R5, R4|37-70
5240|code|MOV             R1, R3|25-70
5242|code|STR             R3, [SP,#0x70+var_64]|3-147
5244|code|LDR             R3, [R2,#0x30]|19-107
5246|code|LDR             R2, =(aSend - 0x1484); "send"|176-74
5248|code|ADD             R2, PC; "send"|122-68
5250|code|STR             R2, [SP,#0x70+var_58]|6-146
5252|code|LDR             R2, [R1]|10-104
5254|code|LDR             R1, =(aAsyncEchoclien - 0x148E); "Async echoclient: send failed rc %d, it"...|175-73
5256|code|STR             R2, [SP,#0x70+var_2C]|17-146
5258|code|ADD             R1, PC; "Async echoclient: send failed rc %d, it"...|121-68
5260|code|STR             R1, [SP,#0x70+var_54]|7-145
5262|code|BLX             R3|152-71
5264|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
5268|code|LDR             R3, [R3,#0x2C]|219-106
5270|code|MOV             R8, R0|128-70
5272|code|MOV             R0, R11|88-70
5274|code|BLX             R3|152-71
5276|code|MOV             R9, R8|193-70
5278|code|MOV             R10, R0|130-70
5280|code|BLX             getpid|255-247-142-236
5284|code|LDR             R1, =(aAsyncEchoClien - 0x14AC); "Async Echo client: %d reps pid %d."|168-73
5286|code|MOV             R2, R6|50-70
5288|code|ADD             R1, PC; "Async Echo client: %d reps pid %d."|121-68
5290|code|MOV             R3, R0|3-70
5292|code|MOVS            R0, #6|6-32
5294|code|BLX             cl_log|255-247-170-236
5298|code|LDR             R2, =(aMessageBeingSe - 0x14BA); "Message being sent: %s"|166-74
5300|code|LDR             R3, =(poll_ptr_0 - 0x13F1C)|166-75
5302|code|ADD             R2, PC; "Message being sent: %s"|122-68
5304|code|STR             R2, [SP,#0x70+var_50]|8-146
5306|code|LDR             R2, =(aAsyncEchoclien_0 - 0x14C0); "Async echoclient: recv failed %d rc ite"...|166-74
5308|code|ADD             R2, PC; "Async echoclient: recv failed %d rc ite"...|122-68
5310|code|STR             R2, [SP,#0x70+var_4C]|9-146
5312|code|LDR             R0, [R7,R3]; __imp_poll|248-88
5314|code|BLX             ipc_set_pollfunc|255-247-30-236
5318|code|MOV             R3, R11|91-70
5320|code|MOV             R8, R3|152-70
5322|code|MOV             R11, R10|211-70
5324|code|MOV             R10, R4|162-70
5326|code|CMP             R4, R6|180-66
5328|code|IT LT|184-191
5330|code|CMPLT           R5, R6|181-66
5332|code|BGE.W           loc_16CC|128-242-250-128
5336|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
5340|code|MOVS            R2, #0x11|17-34
5342|code|STR.W           R9, [SP,#0x70+fds]|205-248-52-144
5346|code|MOV             R0, R8|64-70
5348|code|STRH.W          R2, [SP,#0x70+fds.events]|173-248-56-32
5352|code|LDR             R3, [R3,#0x24]|91-106
5354|code|BLX             R3|152-71
5356|code|CMP             R0, #0|0-40
5358|code|BEQ.W           loc_1618|0-240-147-128
5362|code|CMP             R9, R11|217-69
5364|code|ITETE NE|21-191
5366|code|STRNE.W         R11, [SP,#0x70+var_34]|205-248-60-176
5370|code|LDRHEQ.W        R3, [SP,#0x70+fds.events]|189-248-56-48
5374|code|MOVNE           R3, #0x14|20-35
5376|code|MOVEQ           R2, #1|1-34
5378|code|ITETE NE|21-191
5380|code|STRHNE.W        R3, [SP,#0x70+var_30]|173-248-64-48
5384|code|ORREQ.W         R3, R3, #4|67-240-4-3
5388|code|MOVNE           R3, #2|2-35
5390|code|STREQ           R2, [SP,#0x70+nfds]|11-146
5392|code|ITE EQ|12-191
5394|code|STRHEQ.W        R3, [SP,#0x70+fds.events]|173-248-56-48
5398|code|STRNE           R3, [SP,#0x70+nfds]|11-147
5400|code|LDR             R3, =(aRecv - 0x151E); "recv"|143-75
5402|code|ADD             R3, PC; "recv"|123-68
5404|code|STR             R3, [SP,#0x70+var_60]|4-147
5406|code|LDR             R3, =(aSleep1 - 0x1524); "sleep(1)"|143-75
5408|code|ADD             R3, PC; "sleep(1)"|123-68
5410|code|STR             R3, [SP,#0x70+var_5C]|5-147
5412|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
5416|code|MOV             R0, R8|64-70
5418|code|LDR             R3, [R3,#0x20]|27-106
5420|code|BLX             R3|152-71
5422|code|CMP             R0, #0|0-40
5424|code|IT NE|24-191
5426|code|CMPNE           R5, R6|181-66
5428|code|BGE             loc_1634|126-218
5430|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
5434|code|MOV             R0, R8|64-70
5436|code|ADD             R1, SP, #0x70+var_40|12-169
5438|code|LDR             R3, [R3,#0x14]|91-105
5440|code|BLX             R3|152-71
5442|code|MOV             R7, R0|7-70
5444|code|CBZ             R0, loc_157C|208-177
5446|code|LDR.W           R3, [R8]|216-248-0-48
5450|code|CMP             R3, #4|4-43
5452|code|IT NE|24-191
5454|code|CMPNE           R3, #1|1-43
5456|code|ITE NE|20-191
5458|code|MOVNE.W         R12, #1|79-240-1-12
5462|code|MOVEQ.W         R12, #0|79-240-0-12
5466|code|BEQ             loc_15DC|63-208
5468|code|LDR             R1, =(aAsyncEchoclien_1 - 0x1566); "Async echoclient: disconnect iter %d"|128-73
5470|code|MOVS            R0, #3|3-32
5472|code|ADDS            R2, R5, #1|106-28
5474|code|ADD             R1, PC; "Async echoclient: disconnect iter %d"|121-68
5476|code|BLX             cl_log|255-247-78-236
5480|code|ADDS            R0, R4, #1|96-28
5482|code|LDR             R3, [SP,#0x70+var_64]|3-155
5484|code|LDR             R2, [SP,#0x70+var_2C]|17-154
5486|code|LDR             R3, [R3]|27-104
5488|code|CMP             R2, R3|154-66
5490|code|BNE.W           loc_1732|64-240-222-128
5494|code|ADD             SP, SP, #0x4C ; 'L'|19-176
5496|code|POP.W           {R4-R11,PC}|189-232-240-143
5500|code|ADDS            R7, R5, #1|111-28
5502|code|B               loc_1588|3-224
5504|code|LDR.W           R3, [R8]|216-248-0-48
5508|code|CMP             R3, #1|1-43
5510|code|BNE             loc_1614|69-209
5512|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
5516|code|MOV             R0, R8|64-70
5518|code|LDR             R1, [SP,#0x70+var_40]|12-153
5520|code|LDR             R3, [R3,#0x10]|27-105
5522|code|BLX             R3|152-71
5524|code|CMP             R0, #0|0-40
5526|code|BNE             loc_1580|243-209
5528|code|LDR.W           R3, [R8]|216-248-0-48
5532|code|MOV             R2, R0|2-70
5534|code|CMP             R3, #1|1-43
5536|code|ITT EQ|4-191
5538|code|ADDEQ.W         R10, R10, #1|10-241-1-10
5542|code|MOVEQ           R5, R7|61-70
5544|code|BEQ             loc_1524|188-208
5546|code|LDR             R0, [SP,#0x70+var_58]|6-152
5548|code|ADDS            R4, #1|1-52
5550|code|STR             R2, [SP,#0x70+var_48]|10-146
5552|code|BLX             cl_perror|255-247-88-235
5556|code|LDR             R2, [SP,#0x70+var_48]|10-154
5558|code|MOVS            R0, #3|3-32
5560|code|LDR             R1, [SP,#0x70+var_54]|7-153
5562|code|MOV             R3, R7|59-70
5564|code|BLX             cl_log|255-247-34-236
5568|code|LDR             R3, [SP,#0x70+var_40]|12-155
5570|code|MOVS            R0, #6|6-32
5572|code|LDR             R1, [SP,#0x70+var_50]|8-153
5574|code|LDR             R2, [R3,#8]|154-104
5576|code|BLX             cl_log|255-247-28-236
5580|code|LDR.W           R3, [R8]|216-248-0-48
5584|code|CMP             R3, #4|4-43
5586|code|IT NE|24-191
5588|code|CMPNE           R3, #1|1-43
5590|code|BNE             loc_161E|34-209
5592|code|MOV             R5, R7|61-70
5594|code|B               loc_1524|163-231
5596|code|STR.W           R12, [SP,#0x70+var_48]|205-248-40-192
5600|code|BLX             __errno_location|255-247-34-236
5604|code|MOV             R2, R7|58-70
5606|code|LDR             R1, [SP,#0x70+var_4C]|9-153
5608|code|ADDS            R3, R5, #1|107-28
5610|code|ADDS            R4, #1|1-52
5612|code|LDR             R7, [R0]|7-104
5614|code|MOVS            R0, #3|3-32
5616|code|STR             R7, [SP,#0x70+var_70]|0-151
5618|code|BLX             cl_log|255-247-8-236
5622|code|LDR             R0, [SP,#0x70+var_60]|4-152
5624|code|BLX             cl_perror|255-247-52-235
5628|code|LDR.W           R12, [SP,#0x70+var_48]|221-248-40-192
5632|code|MOVS            R0, #6|6-32
5634|code|LDR             R1, [SP,#0x70+var_5C]|5-153
5636|code|STR.W           R12, [SP,#0x70+var_40]|205-248-48-192
5640|code|BLX             cl_log|255-247-252-235
5644|code|MOVS            R0, #1; seconds|1-32
5646|code|BLX             sleep|255-247-204-235
5650|code|B               loc_1524|135-231
5652|code|MOV             R2, R0|2-70
5654|code|B               loc_15AA|200-231
5656|code|MOVS            R3, #1|1-35
5658|code|STR             R3, [SP,#0x70+nfds]|11-147
5660|code|B               loc_1518|124-231
5662|code|LDR             R1, =(aAsyncEchoclien_2 - 0x1628); "Async echoclient: EOF(2) iter %d"|81-73
5664|code|ADDS            R2, R5, #2|170-28
5666|code|MOVS            R0, #3|3-32
5668|code|ADD             R1, PC; "Async echoclient: EOF(2) iter %d"|121-68
5670|code|BLX             cl_log|255-247-238-235
5674|code|MOV             R0, R8|64-70
5676|code|BL              sub_1324|255-247-122-254
5680|code|MOV             R0, R4|32-70
5682|code|B               loc_156A|154-231
5684|code|CMP             R6, R5|174-66
5686|code|MOV             R7, R4|39-70
5688|code|BLE             loc_16CC|72-221
5690|code|LDR             R1, [SP,#0x70+nfds]; nfds|11-153
5692|code|ADD             R0, SP, #0x70+fds; fds|13-168
5694|code|MOV.W           R2, #0xFFFFFFFF; timeout|79-240-255-50
5698|code|BLX             poll|255-247-166-235
5702|code|SUBS            R1, R0, #0|1-30
5704|code|BLE             loc_170C|96-221
5706|code|LDRH.W          R2, [SP,#0x70+fds.revents]|189-248-58-32
5710|code|UXTH            R1, R2|145-178
5712|code|TST.W           R1, #0x28|17-240-40-15
5716|code|BNE             loc_16BA|49-209
5718|code|AND.W           R3, R1, #0x11|1-240-17-3
5722|code|CMP             R3, #0x10|16-43
5724|code|BEQ             loc_171A|93-208
5726|code|LDR             R3, [SP,#0x70+nfds]|11-155
5728|code|CMP             R3, #2|2-43
5730|code|BNE             loc_166E|4-209
5732|code|LDRH.W          R3, [SP,#0x70+var_2E]|189-248-66-48
5736|code|TST.W           R3, #0x28|19-240-40-15
5740|code|BNE             loc_1694|18-209
5742|code|LDR             R3, [SP,#0x70+nfds]|11-155
5744|code|ADD             R0, SP, #0x70+var_28|18-168
5746|code|ADD.W           R3, R0, R3,LSL#3|0-235-195-3
5750|code|LDRH.W          R3, [R3,#-0x16]|51-248-22-60
5754|code|LSLS            R0, R3, #0x1D|88-7
5756|code|BMI             loc_1686|3-212
5758|code|LSLS            R3, R1, #0x1F|203-7
5760|code|BPL             loc_16A6|17-213
5762|code|MOV             R4, R7|60-70
5764|code|B               loc_14CE|35-231
5766|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
5770|code|MOV             R0, R8|64-70
5772|code|MOV             R4, R7|60-70
5774|code|LDR             R3, [R3,#0x28]|155-106
5776|code|BLX             R3|152-71
5778|code|B               loc_14CE|28-231
5780|code|LDR             R1, =(aAsyncEchoclien_3 - 0x16A0); "Async echoclient: bad poll revents[1]. "...|52-73
5782|code|SXTH            R2, R3|26-178
5784|code|MOVS            R0, #3|3-32
5786|code|MOV             R3, R5|43-70
5788|code|ADD             R1, PC; "Async echoclient: bad poll revents[1]. "...|121-68
5790|code|ADDS            R4, #1|1-52
5792|code|BLX             cl_log|255-247-176-235
5796|code|B               loc_14CE|19-231
5798|code|LDR             R1, =(aAsyncEchoclien_4 - 0x16B2); "Async echoclient: bad events. revents: "...|49-73
5800|code|ADDS            R7, R4, #1|103-28
5802|code|SXTH            R2, R2|18-178
5804|code|MOVS            R0, #3|3-32
5806|code|ADD             R1, PC; "Async echoclient: bad events. revents: "...|121-68
5808|code|MOV             R3, R5|43-70
5810|code|BLX             cl_log|255-247-168-235
5814|code|MOV             R4, R7|60-70
5816|code|B               loc_14CE|9-231
5818|code|LDR             R1, =(aAsyncEchoclien_5 - 0x16C6); "Async echoclient: bad poll revents. rev"...|45-73
5820|code|SXTH            R2, R2|18-178
5822|code|MOVS            R0, #3|3-32
5824|code|MOV             R3, R5|43-70
5826|code|ADD             R1, PC; "Async echoclient: bad poll revents. rev"...|121-68
5828|code|ADDS            R4, #1|1-52
5830|code|BLX             cl_log|255-247-158-235
5834|code|B               loc_14CE|0-231
5836|code|MOV             R3, R8|67-70
5838|code|MOV             R8, R9|200-70
5840|code|MOV             R0, R8|64-70
5842|code|MOV             R9, R10|209-70
5844|code|MOV             R10, R11|218-70
5846|code|MOV             R11, R3|155-70
5848|code|BLX             cl_poll_ignore|255-247-0-235
5852|code|MOV             R0, R10|80-70
5854|code|BLX             cl_poll_ignore|255-247-254-234
5858|code|LDR             R1, =(aAsyncEchoclien_6 - 0x16EC); "Async echoclient: %d errors, %d reads, "...|36-73
5860|code|MOV             R2, R4|34-70
5862|code|MOV             R3, R5|43-70
5864|code|ADD             R1, PC; "Async echoclient: %d errors, %d reads, "...|121-68
5866|code|MOVS            R0, #6|6-32
5868|code|STR.W           R9, [SP,#0x70+var_70]|205-248-0-144
5872|code|BLX             cl_log|255-247-136-235
5876|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
5880|code|MOV             R0, R11|88-70
5882|code|LDR             R3, [R3,#0x1C]|219-105
5884|code|BLX             R3|152-71
5886|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
5890|code|MOV             R0, R11|88-70
5892|code|LDR             R3, [R3]|27-104
5894|code|BLX             R3|152-71
5896|code|MOV             R0, R4|32-70
5898|code|B               loc_156A|46-231
5900|code|LDR             R0, =(aAsyncEchoclien_7 - 0x1716); "Async echoclient: bad poll rc. %d rc it"...|26-72
5902|code|MOV             R2, R5|42-70
5904|code|ADDS            R4, #1|1-52
5906|code|ADD             R0, PC; "Async echoclient: bad poll rc. %d rc it"...|120-68
5908|code|BLX             cl_perror|255-247-166-234
5912|code|B               loc_14CE|217-230
5914|code|LDR             R1, =(aAsyncEchoclien_8 - 0x1726); "Async echoclient: premature pollhup. re"...|24-73
5916|code|SXTH            R2, R2|18-178
5918|code|MOVS            R0, #3|3-32
5920|code|MOV             R3, R5|43-70
5922|code|ADD             R1, PC; "Async echoclient: premature pollhup. re"...|121-68
5924|code|ADDS            R4, #1|1-52
5926|code|BLX             cl_log|255-247-110-235
5930|code|MOV             R0, R8|64-70
5932|code|BL              sub_1324|255-247-250-253
5936|code|B               loc_14CE|205-230
5938|code|BLX             __stack_chk_fail|255-247-34-235
5942|data|ALIGN 4|0-191
5944|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1472|170-42-1-0
5948|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
5952|data|DCD aSend - 0x1484; "send"|140-25-0-0
5956|data|DCD aAsyncEchoclien - 0x148E; "Async echoclient: send failed rc %d, it"...|138-25-0-0
5960|data|DCD aAsyncEchoClien - 0x14AC; "Async Echo client: %d reps pid %d."|204-24-0-0
5964|data|DCD aMessageBeingSe - 0x14BA; "Message being sent: %s"|142-25-0-0
5968|data|DCD poll_ptr_0 - 0x13F1C|204-0-0-0
5972|data|DCD aAsyncEchoclien_0 - 0x14C0; "Async echoclient: recv failed %d rc ite"...|4-25-0-0
5976|data|DCD aRecv - 0x151E; "recv"|222-24-0-0
5980|data|DCD aSleep1 - 0x1524; "sleep(1)"|224-24-0-0
5984|data|DCD aAsyncEchoclien_1 - 0x1566; "Async echoclient: disconnect iter %d"|54-24-0-0
5988|data|DCD aAsyncEchoclien_2 - 0x1628; "Async echoclient: EOF(2) iter %d"|56-24-0-0
5992|data|DCD aAsyncEchoclien_3 - 0x16A0; "Async echoclient: bad poll revents[1]. "...|140-24-0-0
5996|data|DCD aAsyncEchoclien_4 - 0x16B2; "Async echoclient: bad events. revents: "...|186-24-0-0
6000|data|DCD aAsyncEchoclien_5 - 0x16C6; "Async echoclient: bad poll revents. rev"...|238-23-0-0
6004|data|DCD aAsyncEchoclien_6 - 0x16EC; "Async echoclient: %d errors, %d reads, "...|180-24-0-0
6008|data|DCD aAsyncEchoclien_7 - 0x1716; "Async echoclient: bad poll rc. %d rc it"...|110-23-0-0
6012|data|DCD aAsyncEchoclien_8 - 0x1726; "Async echoclient: premature pollhup. re"...|202-23-0-0
6016|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1788)|15-75
6018|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|16-74
6020|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6022|code|PUSH            {LR}|0-181
6024|code|SUB             SP, SP, #0xC|131-176
6026|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
6028|code|LDR             R2, [R3]|26-104
6030|code|STR             R2, [SP,#4]|1-146
6032|code|LDR             R2, [SP,#4]|1-154
6034|code|CBZ             R1, loc_17A4|57-177
6036|code|LDR             R3, [R3]|27-104
6038|code|MOVS            R0, #1|1-32
6040|code|STR             R0, [R1,#0x14]|72-97
6042|code|CMP             R2, R3|154-66
6044|code|BNE             loc_17BA|13-209
6046|code|ADD             SP, SP, #0xC|3-176
6048|code|POP.W           {PC}|93-248-4-251
6052|code|LDR             R3, [R3]|27-104
6054|code|CMP             R2, R3|154-66
6056|code|BNE             loc_17BA|7-209
6058|code|LDR             R1, =(aUserdataIsNull - 0x17B2); "userdata is NULL"|7-73
6060|code|MOVS            R0, #3|3-32
6062|code|ADD             R1, PC; "userdata is NULL"|121-68
6064|code|ADD             SP, SP, #0xC|3-176
6066|code|POP.W           {LR}|93-248-4-235
6070|code|B.W             j_cl_log|255-247-35-187
6074|code|BLX             __stack_chk_fail|255-247-222-234
6078|data|ALIGN 0x10|0-191
6080|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1788|148-39-1-0
6084|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
6088|data|DCD aUserdataIsNull - 0x17B2; "userdata is NULL"|34-24-0-0
6092|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x17D4)|15-75
6094|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|16-74
6096|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6098|code|PUSH            {LR}|0-181
6100|code|SUB             SP, SP, #0xC|131-176
6102|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
6104|code|LDR             R2, [R3]|26-104
6106|code|STR             R2, [SP,#4]|1-146
6108|code|LDR             R2, [SP,#4]|1-154
6110|code|CBZ             R1, loc_17F0|57-177
6112|code|LDR             R3, [R3]|27-104
6114|code|MOVS            R0, #0|0-32
6116|code|STR             R0, [R1]|8-96
6118|code|CMP             R2, R3|154-66
6120|code|BNE             loc_1806|13-209
6122|code|ADD             SP, SP, #0xC|3-176
6124|code|POP.W           {PC}|93-248-4-251
6128|code|LDR             R3, [R3]|27-104
6130|code|CMP             R2, R3|154-66
6132|code|BNE             loc_1806|7-209
6134|code|LDR             R1, =(aUserdataIsNull - 0x17FE); "userdata is NULL"|7-73
6136|code|MOVS            R0, #3|3-32
6138|code|ADD             R1, PC; "userdata is NULL"|121-68
6140|code|ADD             SP, SP, #0xC|3-176
6142|code|POP.W           {LR}|93-248-4-235
6146|code|B.W             j_cl_log|255-247-253-186
6150|code|BLX             __stack_chk_fail|255-247-184-234
6154|data|ALIGN 4|0-191
6156|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x17D4|72-39-1-0
6160|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
6164|data|DCD aUserdataIsNull - 0x17FE; "userdata is NULL"|214-23-0-0
6168|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1820)|15-75
6170|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|16-74
6172|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6174|code|PUSH            {LR}|0-181
6176|code|SUB             SP, SP, #0xC|131-176
6178|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
6180|code|LDR             R2, [R3]|26-104
6182|code|STR             R2, [SP,#4]|1-146
6184|code|LDR             R2, [SP,#4]|1-154
6186|code|CBZ             R1, loc_183C|57-177
6188|code|LDR             R3, [R3]|27-104
6190|code|MOVS            R0, #1|1-32
6192|code|STR             R0, [R1]|8-96
6194|code|CMP             R2, R3|154-66
6196|code|BNE             loc_1852|13-209
6198|code|ADD             SP, SP, #0xC|3-176
6200|code|POP.W           {PC}|93-248-4-251
6204|code|LDR             R3, [R3]|27-104
6206|code|CMP             R2, R3|154-66
6208|code|BNE             loc_1852|7-209
6210|code|LDR             R1, =(aUserdataIsNull - 0x184A); "userdata is NULL"|7-73
6212|code|MOVS            R0, #3|3-32
6214|code|ADD             R1, PC; "userdata is NULL"|121-68
6216|code|ADD             SP, SP, #0xC|3-176
6218|code|POP.W           {LR}|93-248-4-235
6222|code|B.W             j_cl_log|255-247-215-186
6226|code|BLX             __stack_chk_fail|255-247-146-234
6230|data|ALIGN 4|0-191
6232|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1820|252-38-1-0
6236|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
6240|data|DCD aUserdataIsNull - 0x184A; "userdata is NULL"|138-23-0-0
6244|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x186C)|18-75
6246|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|19-74
6248|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6250|code|LDR             R1, [R0,#0x10]|1-105
6252|code|PUSH            {R4,R5,LR}|48-181
6254|code|SUB             SP, SP, #0xC|131-176
6256|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
6258|code|MOV             R5, R0|5-70
6260|code|LDR             R3, [R1,#0x24]|75-106
6262|code|LDR             R2, [R4]|34-104
6264|code|STR             R2, [SP,#0x18+var_14]|1-146
6266|code|BLX             R3|152-71
6268|code|CBNZ            R0, loc_188A|40-185
6270|code|LDR             R2, [SP,#0x18+var_14]|1-154
6272|code|LDR             R3, [R4]|35-104
6274|code|CMP             R2, R3|154-66
6276|code|BNE             loc_18AA|17-209
6278|code|ADD             SP, SP, #0xC|3-176
6280|code|POP             {R4,R5,PC}|48-189
6282|code|LDR             R1, =(aSendingIsBlock - 0x1892); "Sending is blocked."|11-73
6284|code|MOVS            R0, #6|6-32
6286|code|ADD             R1, PC; "Sending is blocked."|121-68
6288|code|BLX             cl_log|255-247-184-234
6292|code|LDR             R2, [SP,#0x18+var_14]|1-154
6294|code|LDR             R3, [R4]|35-104
6296|code|CMP             R2, R3|154-66
6298|code|BNE             loc_18AA|6-209
6300|code|LDR             R3, [R5,#0x10]|43-105
6302|code|MOV             R0, R5|40-70
6304|code|LDR             R3, [R3,#0x28]|155-106
6306|code|ADD             SP, SP, #0xC|3-176
6308|code|POP.W           {R4,R5,LR}|189-232-48-64
6312|code|BX              R3|24-71
6314|code|BLX             __stack_chk_fail|255-247-102-234
6318|data|ALIGN 0x10|0-191
6320|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x186C|176-38-1-0
6324|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
6328|data|DCD aSendingIsBlock - 0x1892; "Sending is blocked."|86-23-0-0
6332|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x18C4)|77-75
6334|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|78-74
6336|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6338|code|PUSH.W          {R4-R11,LR}|45-233-240-79
6342|code|SUB             SP, SP, #0x24 ; '$'|137-176
6344|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
6346|code|MOV             R7, R1|15-70
6348|code|MOV             R4, R0|4-70
6350|code|STR             R3, [SP,#0x14]|5-147
6352|code|LDR             R3, [R3]|27-104
6354|code|STR             R3, [SP,#0x1C]|7-147
6356|code|BLX             getpid|255-247-116-234
6360|code|LDR             R1, =(aEchoClientDRep - 0x18E0); "Echo client: %d reps pid %d."|72-73
6362|code|MOV             R2, R7|58-70
6364|code|ADD             R1, PC; "Echo client: %d reps pid %d."|121-68
6366|code|MOV             R3, R0|3-70
6368|code|MOVS            R0, #6|6-32
6370|code|BLX             cl_log|255-247-144-234
6374|code|CMP             R7, #0|0-47
6376|code|BLE             loc_19B4|100-221
6378|code|LDR             R3, =(aEchoclientSend - 0x18FA); "echoclient: send failed %d rc iter %d"|69-75
6380|code|ADD.W           R8, SP, #0x18|13-241-24-8
6384|code|LDR.W           R10, =(aEchoclientRecv - 0x1900); "echoclient: recv failed %d rc iter %d e"...|223-248-16-161
6388|code|MOVS            R6, #0|0-38
6390|code|ADD             R3, PC; "echoclient: send failed %d rc iter %d"|123-68
6392|code|STR             R3, [SP,#0xC]|3-147
6394|code|LDR             R3, =(aMessageBeingSe - 0x1904); "Message being sent: %s"|67-75
6396|code|ADD             R10, PC; "echoclient: recv failed %d rc iter %d e"...|250-68
6398|code|MOVS            R5, #1|1-37
6400|code|ADD             R3, PC; "Message being sent: %s"|123-68
6402|code|STR             R3, [SP,#0x10]|4-147
6404|code|LDR             R3, =(aRecv - 0x190A); "recv"|65-75
6406|code|ADD             R3, PC; "recv"|123-68
6408|code|STR             R3, [SP,#8]|2-147
6410|code|LDR             R3, [R4,#0x10]|35-105
6412|code|MOV             R0, R4|32-70
6414|code|LDR             R3, [R3,#0x18]|155-105
6416|code|BLX             R3|152-71
6418|code|CMP             R0, #3|3-40
6420|code|MOV             R11, R0|131-70
6422|code|BEQ             loc_190A|248-208
6424|code|CMP             R0, #0|0-40
6426|code|BNE             loc_19B8|77-209
6428|code|LDR             R3, [R4,#0x10]|35-105
6430|code|MOV             R0, R4|32-70
6432|code|MOV             R1, R8|65-70
6434|code|LDR             R3, [R3,#0x14]|91-105
6436|code|BLX             R3|152-71
6438|code|MOV             R9, R0|129-70
6440|code|CBZ             R0, loc_197C|64-179
6442|code|BLX             __errno_location|255-247-126-234
6446|code|MOV             R2, R9|74-70
6448|code|MOV             R1, R10|81-70
6450|code|MOV             R3, R5|43-70
6452|code|ADDS            R6, #1|1-54
6454|code|LDR             R0, [R0]|0-104
6456|code|STR             R0, [SP]|0-144
6458|code|MOVS            R0, #3|3-32
6460|code|BLX             cl_log|255-247-98-234
6464|code|LDR             R0, [SP,#8]|2-152
6466|code|BLX             cl_perror|255-247-144-233
6470|code|CMP             R6, #0xA|10-46
6472|code|BGT             loc_19E0|74-220
6474|code|SUBS            R5, #1|1-61
6476|code|STR.W           R11, [SP,#0x18]|205-248-24-176
6480|code|ADDS            R5, #1|1-53
6482|code|CMP             R7, R5|175-66
6484|code|BGE             loc_190A|217-218
6486|code|LDR             R1, =(aEchoclientDErr - 0x1960); "echoclient: %d errors"|46-73
6488|code|MOV             R2, R6|50-70
6490|code|MOVS            R0, #6|6-32
6492|code|ADD             R1, PC; "echoclient: %d errors"|121-68
6494|code|BLX             cl_log|255-247-82-234
6498|code|LDR             R3, [R4,#0x10]|35-105
6500|code|MOV             R0, R4|32-70
6502|code|LDR             R3, [R3]|27-104
6504|code|BLX             R3|152-71
6506|code|LDR             R3, [SP,#0x14]|5-155
6508|code|LDR             R2, [SP,#0x1C]|7-154
6510|code|MOV             R0, R6|48-70
6512|code|LDR             R3, [R3]|27-104
6514|code|CMP             R2, R3|154-66
6516|code|BNE             loc_19DC|50-209
6518|code|ADD             SP, SP, #0x24 ; '$'|9-176
6520|code|POP.W           {R4-R11,PC}|189-232-240-143
6524|code|LDR             R3, [R4,#0x10]|35-105
6526|code|MOV             R0, R4|32-70
6528|code|LDR             R1, [SP,#0x18]|6-153
6530|code|LDR             R3, [R3,#0x10]|27-105
6532|code|BLX             R3|152-71
6534|code|CBZ             R0, loc_19A4|104-177
6536|code|MOV             R2, R0|2-70
6538|code|LDR             R1, [SP,#0xC]|3-153
6540|code|MOV             R3, R5|43-70
6542|code|MOVS            R0, #3|3-32
6544|code|BLX             cl_log|255-247-56-234
6548|code|LDR             R3, [SP,#0x18]|6-155
6550|code|MOVS            R0, #6|6-32
6552|code|LDR             R1, [SP,#0x10]|4-153
6554|code|ADDS            R6, #1|1-54
6556|code|LDR             R2, [R3,#8]|154-104
6558|code|BLX             cl_log|255-247-50-234
6562|code|B               loc_1950|213-231
6564|code|LDR             R3, [R4,#0x10]|35-105
6566|code|MOV             R0, R4|32-70
6568|code|LDR             R3, [R3,#0x1C]|219-105
6570|code|BLX             R3|152-71
6572|code|MOV             R0, R4|32-70
6574|code|BL              sub_1864|255-247-89-255
6578|code|B               loc_1950|205-231
6580|code|MOVS            R6, #0|0-38
6582|code|B               loc_1956|206-231
6584|code|BLX             __errno_location|255-247-54-234
6588|code|LDR             R1, =(aEchotestClient - 0x19C6); "echotest client: waitin failed %d rc it"...|21-73
6590|code|MOV             R2, R11|90-70
6592|code|MOV             R3, R5|43-70
6594|code|ADD             R1, PC; "echotest client: waitin failed %d rc it"...|121-68
6596|code|LDR             R4, [R0]|4-104
6598|code|MOVS            R0, #3|3-32
6600|code|STR             R4, [SP]|0-148
6602|code|BLX             cl_log|255-247-28-234
6606|code|LDR             R0, =(aWaitin - 0x19D4); "waitin"|18-72
6608|code|ADD             R0, PC; "waitin"|120-68
6610|code|BLX             cl_perror|255-247-72-233
6614|code|MOVS            R0, #1|1-32
6616|code|BLX             exit|255-247-32-234
6620|code|BLX             __stack_chk_fail|255-247-204-233
6624|code|LDR             R1, =(aEchoclientErrc - 0x19EA); "echoclient: errcount excessive: %d: aba"...|14-73
6626|code|MOVS            R0, #3|3-32
6628|code|MOV             R2, R6|50-70
6630|code|ADD             R1, PC; "echoclient: errcount excessive: %d: aba"...|121-68
6632|code|BLX             cl_log|255-247-12-234
6636|code|MOVS            R0, #1|1-32
6638|code|BLX             exit|255-247-22-234
6642|data|ALIGN 4|0-191
6644|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18C4|88-38-1-0
6648|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
6652|data|DCD aEchoClientDRep - 0x18E0; "Echo client: %d reps pid %d."|28-23-0-0
6656|data|DCD aEchoclientSend - 0x18FA; "echoclient: send failed %d rc iter %d"|194-23-0-0
6660|data|DCD aEchoclientRecv - 0x1900; "echoclient: recv failed %d rc iter %d e"...|92-23-0-0
6664|data|DCD aMessageBeingSe - 0x1904; "Message being sent: %s"|68-21-0-0
6668|data|DCD aRecv - 0x190A; "recv"|242-20-0-0
6672|data|DCD aEchoclientDErr - 0x1960; "echoclient: %d errors"|132-23-0-0
6676|data|DCD aEchotestClient - 0x19C6; "echotest client: waitin failed %d rc it"...|86-22-0-0
6680|data|DCD aWaitin - 0x19D4; "waitin"|128-22-0-0
6684|data|DCD aEchoclientErrc - 0x19EA; "echoclient: errcount excessive: %d: aba"...|162-22-0-0
6688|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A28)|18-75
6690|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|19-74
6692|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6694|code|PUSH            {R4,LR}|16-181
6696|code|SUB             SP, SP, #8|130-176
6698|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
6700|code|LDR             R3, [R4]|35-104
6702|code|STR             R3, [SP,#0x10+var_C]|1-147
6704|code|CBZ             R0, loc_1A5A|152-177
6706|code|LDR             R2, [R0]|2-104
6708|code|CMP             R2, #4|4-42
6710|code|IT NE|24-191
6712|code|CMPNE           R2, #1|1-42
6714|code|ITE NE|20-191
6716|code|MOVNE           R0, #1|1-32
6718|code|MOVEQ           R0, #0|0-32
6720|code|BEQ             loc_1A4E|5-208
6722|code|LDR             R1, =(aChannelStatusI - 0x1A4A); "Channel status is %d, not IPC_CONNECT"|12-73
6724|code|MOVS            R0, #3|3-32
6726|code|ADD             R1, PC; "Channel status is %d, not IPC_CONNECT"|121-68
6728|code|BLX             cl_log|255-247-220-233
6732|code|MOVS            R0, #1|1-32
6734|code|LDR             R2, [SP,#0x10+var_C]|1-154
6736|code|LDR             R3, [R4]|35-104
6738|code|CMP             R2, R3|154-66
6740|code|BNE             loc_1A68|8-209
6742|code|ADD             SP, SP, #8|2-176
6744|code|POP             {R4,PC}|16-189
6746|code|LDR             R1, =(aChannelNull - 0x1A62); "Channel null"|7-73
6748|code|MOVS            R0, #3|3-32
6750|code|ADD             R1, PC; "Channel null"|121-68
6752|code|BLX             cl_log|255-247-208-233
6756|code|MOVS            R0, #1|1-32
6758|code|B               loc_1A4E|242-231
6760|code|BLX             __stack_chk_fail|255-247-134-233
6764|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A28|244-36-1-0
6768|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
6772|data|DCD aChannelStatusI - 0x1A4A; "Channel status is %d, not IPC_CONNECT"|194-22-0-0
6776|data|DCD aChannelNull - 0x1A62; "Channel null"|154-22-0-0
6780|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1A86)|126-75
6782|code|PUSH.W          {R4-R9,LR}|45-233-240-67
6786|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6788|code|LDR             R4, =(__stack_chk_guard_ptr - 0x13F1C)|125-76
6790|code|MOV             R6, R1|14-70
6792|code|LDR             R1, =(dword_14010 - 0x1A96)|125-73
6794|code|SUB             SP, SP, #0x1C|135-176
6796|code|MOV             R5, R2|21-70
6798|code|MOVS            R2, #0|0-34
6800|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
6802|code|ADD             R1, PC; dword_14010|121-68
6804|code|STR             R2, [SP,#0x38+stat_loc]|2-146
6806|code|MOV             R7, R0|7-70
6808|code|LDR             R3, [R1,#(dword_14014 - 0x14010)]|75-104
6810|code|LDR             R2, [R4]|34-104
6812|code|CMP             R3, #0|0-43
6814|code|STR             R2, [SP,#0x38+var_24]|5-146
6816|code|BLE             loc_1ABC|12-221
6818|code|LDR.W           R8, [R1,#(dword_14018 - 0x14010)]|209-248-8-128
6822|code|BLX             getpid|255-247-140-233
6826|code|MOVS            R1, #0x56 ; 'V'|86-33
6828|code|STR             R1, [SP,#0x38+var_38]|0-145
6830|code|LDR             R1, =(aSDDMainProcess - 0x1AB6); "%s[%d]%d: main process"|117-73
6832|code|MOV             R2, R8|66-70
6834|code|ADD             R1, PC; "%s[%d]%d: main process"|121-68
6836|code|MOV             R3, R0|3-70
6838|code|MOVS            R0, #7|7-32
6840|code|BLX             cl_log|255-247-164-233
6844|code|BLX             fork|255-247-142-233
6848|code|ADDS            R3, R0, #1|67-28
6850|code|BEQ.W           loc_1BE4|0-240-143-128
6854|code|CMP             R0, #0|0-40
6856|code|BNE             loc_1B74|84-209
6858|code|ADD             R0, SP, #0x38+var_2C|3-168
6860|code|BLX             ipc_channel_pair|255-247-0-233
6864|code|MOV             R9, R0|129-70
6866|code|CMP             R0, #0|0-40
6868|code|BNE.W           loc_1C6A|64-240-201-128
6872|code|LDR             R0, [SP,#0x38+var_2C]|3-152
6874|code|BL              sub_1A20|255-247-161-255
6878|code|LDR             R0, [SP,#0x38+var_28]|4-152
6880|code|BL              sub_1A20|255-247-158-255
6884|code|BLX             fork|255-247-122-233
6888|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
6892|code|MOV             R8, R0|128-70
6894|code|BEQ.W           loc_1C58|0-240-179-128
6898|code|CMP             R0, #0|0-40
6900|code|BEQ             loc_1BF2|125-208
6902|code|LDR             R0, [SP,#0x38+var_2C]|3-152
6904|code|LDR             R3, [R0,#0x10]|3-105
6906|code|LDR             R3, [R3]|27-104
6908|code|BLX             R3|152-71
6910|code|LDR             R3, =(dword_14010 - 0x1B08)|98-75
6912|code|STR.W           R9, [SP,#0x38+var_2C]|205-248-12-144
6916|code|ADD             R3, PC; dword_14010|123-68
6918|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
6920|code|CMP             R2, #0|0-42
6922|code|BLE             loc_1B24|11-221
6924|code|LDR             R7, [R3,#(dword_14018 - 0x14010)]|159-104
6926|code|BLX             getpid|255-247-88-233
6930|code|MOVS            R1, #0x98|152-33
6932|code|STR             R1, [SP,#0x38+var_38]|0-145
6934|code|LDR             R1, =(aSDDServerStart - 0x1B1E); "%s[%d]%d: server starting..."|93-73
6936|code|MOV             R2, R7|58-70
6938|code|ADD             R1, PC; "%s[%d]%d: server starting..."|121-68
6940|code|MOV             R3, R0|3-70
6942|code|MOVS            R0, #7|7-32
6944|code|BLX             cl_log|255-247-112-233
6948|code|MOV             R1, R5|41-70
6950|code|LDR             R0, [SP,#0x38+var_28]|4-152
6952|code|BLX             R6|176-71
6954|code|MOV             R5, R0|5-70
6956|code|ADD             R0, SP, #0x38+stat_loc; stat_loc|2-168
6958|code|BLX             wait|255-247-196-232
6962|code|LDR             R3, [SP,#0x38+stat_loc]|2-155
6964|code|LSLS            R2, R3, #0x19|90-6
6966|code|ITET EQ|10-191
6968|code|UBFXEQ.W        R3, R3, #8, #8|195-243-7-35
6972|code|ADDNE           R5, #1|1-53
6974|code|ADDEQ           R5, R5, R3|237-24
6976|code|LDR             R3, =(dword_14010 - 0x1B46)|83-75
6978|code|ADD             R3, PC; dword_14010|123-68
6980|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
6982|code|CMP             R2, #0|0-42
6984|code|BLE             loc_1B64|12-221
6986|code|LDR             R6, [R3,#(dword_14018 - 0x14010)]|158-104
6988|code|BLX             getpid|255-247-56-233
6992|code|LDR             R1, =(aSDDServerEnded - 0x1B5A); "%s[%d]%d: server ended rc:%d"|80-73
6994|code|STR             R5, [SP,#0x38+var_34]|1-149
6996|code|MOV             R2, R6|50-70
6998|code|ADD             R1, PC; "%s[%d]%d: server ended rc:%d"|121-68
7000|code|MOVS            R6, #0xA3|163-38
7002|code|STR             R6, [SP,#0x38+var_38]|0-150
7004|code|MOV             R3, R0|3-70
7006|code|MOVS            R0, #7|7-32
7008|code|BLX             cl_log|255-247-80-233
7012|code|LDR             R2, [SP,#0x38+var_24]|5-154
7014|code|MOV             R0, R5|40-70
7016|code|LDR             R3, [R4]|35-104
7018|code|CMP             R2, R3|154-66
7020|code|BNE             loc_1C66|123-209
7022|code|ADD             SP, SP, #0x1C|7-176
7024|code|POP.W           {R4-R9,PC}|189-232-240-131
7028|code|LDR             R3, =(dword_14010 - 0x1B7A)|72-75
7030|code|ADD             R3, PC; dword_14010|123-68
7032|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7034|code|CMP             R2, #0|0-42
7036|code|BLE             loc_1B96|11-221
7038|code|LDR             R4, [R3,#(dword_14018 - 0x14010)]|156-104
7040|code|BLX             getpid|255-247-30-233
7044|code|MOVS            R1, #0x60 ; '`'|96-33
7046|code|STR             R1, [SP,#0x38+var_38]|0-145
7048|code|LDR             R1, =(aSDDMainWaiting - 0x1B90); "%s[%d]%d: main waiting..."|68-73
7050|code|MOV             R2, R4|34-70
7052|code|ADD             R1, PC; "%s[%d]%d: main waiting..."|121-68
7054|code|MOV             R3, R0|3-70
7056|code|MOVS            R0, #7|7-32
7058|code|BLX             cl_log|255-247-56-233
7062|code|MOVS            R4, #0|0-36
7064|code|ADD             R5, SP, #0x38+stat_loc|2-173
7066|code|B               loc_1BAA|6-224
7068|code|LDR             R3, [SP,#0x38+stat_loc]|2-155
7070|code|LSLS            R1, R3, #0x19|89-6
7072|code|ITET EQ|10-191
7074|code|UBFXEQ.W        R3, R3, #8, #8|195-243-7-35
7078|code|ADDNE           R4, #1|1-52
7080|code|ADDEQ           R4, R4, R3|228-24
7082|code|MOV             R0, R5; stat_loc|40-70
7084|code|BLX             wait|255-247-132-232
7088|code|CMP             R0, #0|0-40
7090|code|BGT             loc_1B9C|243-220
7092|code|LDR             R3, =(dword_14010 - 0x1BBA)|58-75
7094|code|ADD             R3, PC; dword_14010|123-68
7096|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7098|code|CMP             R2, #0|0-42
7100|code|BLE             loc_1BD8|12-221
7102|code|LDR             R5, [R3,#(dword_14018 - 0x14010)]|157-104
7104|code|BLX             getpid|255-247-254-232
7108|code|LDR             R1, =(aSDDMainEndedRc - 0x1BCE); "%s[%d]%d: main ended rc: %d"|55-73
7110|code|STR             R4, [SP,#0x38+var_34]|1-148
7112|code|MOV             R2, R5|42-70
7114|code|ADD             R1, PC; "%s[%d]%d: main ended rc: %d"|121-68
7116|code|MOVS            R5, #0x6B ; 'k'|107-37
7118|code|STR             R5, [SP,#0x38+var_38]|0-149
7120|code|MOV             R3, R0|3-70
7122|code|MOVS            R0, #7|7-32
7124|code|BLX             cl_log|255-247-22-233
7128|code|CMP             R4, #0x80|128-44
7130|code|ITE LT|180-191
7132|code|MOVLT           R0, R4|32-70
7134|code|MOVGE           R0, #0x7F; status|127-32
7136|code|BLX             exit|255-247-28-233
7140|code|LDR             R0, =(aCanTFork - 0x1BEA); "can't fork"|48-72
7142|code|ADD             R0, PC; "can't fork"|120-68
7144|code|BLX             cl_perror|255-247-60-232
7148|code|MOVS            R0, #1; status|1-32
7150|code|BLX             exit|255-247-22-233
7154|code|LDR             R0, [SP,#0x38+var_28]|4-152
7156|code|LDR             R3, [R0,#0x10]|3-105
7158|code|LDR             R3, [R3]|27-104
7160|code|BLX             R3|152-71
7162|code|LDR             R3, =(dword_14010 - 0x1C04)|44-75
7164|code|STR.W           R8, [SP,#0x38+var_28]|205-248-16-128
7168|code|ADD             R3, PC; dword_14010|123-68
7170|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7172|code|CMP             R2, #0|0-42
7174|code|BLE             loc_1C20|11-221
7176|code|LDR             R4, [R3,#(dword_14018 - 0x14010)]|156-104
7178|code|BLX             getpid|255-247-218-232
7182|code|MOVS            R1, #0x87|135-33
7184|code|STR             R1, [SP,#0x38+var_38]|0-145
7186|code|LDR             R1, =(aSDDClientStart - 0x1C1A); "%s[%d]%d: client starting..."|39-73
7188|code|MOV             R2, R4|34-70
7190|code|ADD             R1, PC; "%s[%d]%d: client starting..."|121-68
7192|code|MOV             R3, R0|3-70
7194|code|MOVS            R0, #7|7-32
7196|code|BLX             cl_log|255-247-242-232
7200|code|MOV             R1, R5|41-70
7202|code|LDR             R0, [SP,#0x38+var_2C]|3-152
7204|code|BLX             R7|184-71
7206|code|LDR             R3, =(dword_14010 - 0x1C2C)|35-75
7208|code|ADD             R3, PC; dword_14010|123-68
7210|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7212|code|CMP             R2, #0|0-42
7214|code|MOV             R4, R0|4-70
7216|code|BLE             loc_1C4C|12-221
7218|code|LDR             R5, [R3,#(dword_14018 - 0x14010)]|157-104
7220|code|BLX             getpid|255-247-196-232
7224|code|LDR             R1, =(aSDDClientEnded - 0x1C42); "%s[%d]%d: client ended rc:%d"|31-73
7226|code|STR             R4, [SP,#0x38+var_34]|1-148
7228|code|MOV             R2, R5|42-70
7230|code|ADD             R1, PC; "%s[%d]%d: client ended rc:%d"|121-68
7232|code|MOVS            R5, #0x8C|140-37
7234|code|STR             R5, [SP,#0x38+var_38]|0-149
7236|code|MOV             R3, R0|3-70
7238|code|MOVS            R0, #7|7-32
7240|code|BLX             cl_log|255-247-220-232
7244|code|CMP             R4, #0x7F|127-44
7246|code|MOV             R0, R4|32-70
7248|code|IT GE|168-191
7250|code|MOVGE           R0, #0x7F; status|127-32
7252|code|BLX             exit|255-247-226-232
7256|code|LDR             R0, =(aCanTFork - 0x1C5E); "can't fork"|24-72
7258|code|ADD             R0, PC; "can't fork"|120-68
7260|code|BLX             cl_perror|255-247-2-232
7264|code|MOVS            R0, #1; status|1-32
7266|code|BLX             exit|255-247-220-232
7270|code|BLX             __stack_chk_fail|255-247-136-232
7274|code|LDR             R0, =(aCanTCreateIpcC - 0x1C70); "Can't create ipc channel pair"|21-72
7276|code|ADD             R0, PC; "Can't create ipc channel pair"|120-68
7278|code|BLX             cl_perror|254-247-250-239
7282|code|MOVS            R0, #1; status|1-32
7284|code|BLX             exit|255-247-210-232
7288|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1A86|150-36-1-0
7292|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
7296|data|DCD dword_14010 - 0x1A96|122-37-1-0
7300|data|DCD aSDDMainProcess - 0x1AB6; "%s[%d]%d: main process"|126-22-0-0
7304|data|DCD dword_14010 - 0x1B08|8-37-1-0
7308|data|DCD aSDDServerStart - 0x1B1E; "%s[%d]%d: server starting..."|210-22-0-0
7312|data|DCD dword_14010 - 0x1B46|202-36-1-0
7316|data|DCD aSDDServerEnded - 0x1B5A; "%s[%d]%d: server ended rc:%d"|182-22-0-0
7320|data|DCD dword_14010 - 0x1B7A|150-36-1-0
7324|data|DCD aSDDMainWaiting - 0x1B90; "%s[%d]%d: main waiting..."|200-21-0-0
7328|data|DCD dword_14010 - 0x1BBA|86-36-1-0
7332|data|DCD aSDDMainEndedRc - 0x1BCE; "%s[%d]%d: main ended rc: %d"|166-21-0-0
7336|data|DCD aCanTFork - 0x1BEA; "can't fork"|98-21-0-0
7340|data|DCD dword_14010 - 0x1C04|12-36-1-0
7344|data|DCD aSDDClientStart - 0x1C1A; "%s[%d]%d: client starting..."|150-21-0-0
7348|data|DCD dword_14010 - 0x1C2C|228-35-1-0
7352|data|DCD aSDDClientEnded - 0x1C42; "%s[%d]%d: client ended rc:%d"|142-21-0-0
7356|data|DCD aCanTFork - 0x1C5E; "can't fork"|238-20-0-0
7360|data|DCD aCanTCreateIpcC - 0x1C70; "Can't create ipc channel pair"|32-21-0-0
7364|code|PUSH.W          {R4-R11,LR}|45-233-240-79
7368|code|MOV             R7, R0|7-70
7370|code|LDR             R4, =(aPath - 0x1CDC); "path"|234-76
7372|code|MOV             R8, R1|136-70
7374|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0x1CDE)|223-248-168-147
7378|code|SUB             SP, SP, #0x44|145-176
7380|code|LDR.W           LR, =(__stack_chk_guard_ptr - 0x13F1C)|223-248-164-227
7384|code|ADD             R4, PC; "path"|124-68
7386|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
7388|code|MOV             R6, R2|22-70
7390|code|LDM.W           R4, {R0,R1}; "path"|148-232-3-0
7394|code|MOV             R4, R3|28-70
7396|code|LDR.W           R3, [R9,LR]; __stack_chk_guard|89-248-14-48
7400|code|MOV.W           R12, #0|79-240-0-12
7404|code|LDR             R2, =(aTmpFoobar - 0x1CFA); "/tmp/foobar"|228-74
7406|code|ADD             R5, SP, #0x68+var_38|12-173
7408|code|LDR.W           LR, =(dword_14010 - 0x1CFE)|223-248-144-227
7412|code|STR             R3, [SP,#0x68+var_54]|5-147
7414|code|ADD             R2, PC; "/tmp/foobar"|122-68
7416|code|LDR             R3, [SP,#0x68+var_54]|5-155
7418|code|ADD             LR, PC; dword_14010|254-68
7420|code|STR             R0, [SP,#0x68+var_40]|10-144
7422|code|STRB.W          R1, [SP,#0x68+var_3C]|141-248-44-16
7426|code|LDR             R3, [R3]|27-104
7428|code|LDM             R2, {R0-R2}; "/tmp/foobar"|7-202
7430|code|STR             R3, [SP,#0x68+var_2C]|15-147
7432|code|LDR.W           R3, [LR,#(dword_14014 - 0x14010)]|222-248-4-48
7436|code|STR.W           R12, [SP,#0x68+stat_loc]|205-248-36-192
7440|code|CMP             R3, R12|99-69
7442|code|STM.W           R5, {R0-R2}|133-232-7-0
7446|code|BLE             loc_1D32|12-221
7448|code|LDR.W           R10, [LR,#(dword_14018 - 0x14010)]|222-248-8-160
7452|code|BLX             getpid|255-247-80-232
7456|code|MOVS            R1, #0xB8|184-33
7458|code|STR             R1, [SP,#0x68+var_68]|0-145
7460|code|LDR             R1, =(aSDDMainProcess - 0x1D2C); "%s[%d]%d: main process"|216-73
7462|code|MOV             R2, R10|82-70
7464|code|ADD             R1, PC; "%s[%d]%d: main process"|121-68
7466|code|MOV             R3, R0|3-70
7468|code|MOVS            R0, #7|7-32
7470|code|BLX             cl_log|255-247-106-232
7474|code|BLX             fork|255-247-84-232
7478|code|ADDS            R3, R0, #1|67-28
7480|code|BEQ.W           loc_1EE4|0-240-212-128
7484|code|CMP             R0, #0|0-40
7486|code|BNE.W           loc_1E74|64-240-153-128
7490|code|LDR             R3, =(dword_14010 - 0x1D48)|210-75
7492|code|ADD             R3, PC; dword_14010|123-68
7494|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7496|code|CMP             R2, #0|0-42
7498|code|BLE             loc_1D66|12-221
7500|code|LDR.W           R10, [R3,#(dword_14018 - 0x14010)]|211-248-8-160
7504|code|BLX             getpid|255-247-54-232
7508|code|MOVS            R1, #0xDB|219-33
7510|code|STR             R1, [SP,#0x68+var_68]|0-145
7512|code|LDR             R1, =(aSDD - 0x1D60); "%s[%d]%d:"|205-73
7514|code|MOV             R2, R10|82-70
7516|code|ADD             R1, PC; "%s[%d]%d:"|121-68
7518|code|MOV             R3, R0|3-70
7520|code|MOVS            R0, #7|7-32
7522|code|BLX             cl_log|255-247-80-232
7526|code|LDR             R2, =(g_str_hash_ptr - 0x13F1C)|203-74
7528|code|LDR             R3, =(g_str_equal_ptr - 0x13F1C)|203-75
7530|code|LDR.W           R0, [R9,R2]; g_str_hash|89-248-2-0
7534|code|LDR.W           R1, [R9,R3]; g_str_equal|89-248-3-16
7538|code|BLX             g_hash_table_new|254-247-192-239
7542|code|MOV             R9, R0|129-70
7544|code|CMP             R0, #0|0-40
7546|code|BEQ.W           loc_2052|0-240-106-129
7550|code|MOV             R2, R5|42-70
7552|code|ADD             R1, SP, #0x68+var_40|10-169
7554|code|BLX             g_hash_table_insert|254-247-136-239
7558|code|LDR             R3, =(dword_14010 - 0x1D8C)|197-75
7560|code|ADD             R3, PC; dword_14010|123-68
7562|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7564|code|CMP             R2, #0|0-42
7566|code|BLE             loc_1DA8|11-221
7568|code|LDR             R5, [R3,#(dword_14018 - 0x14010)]|157-104
7570|code|BLX             getpid|255-247-22-232
7574|code|MOVS            R1, #0xE8|232-33
7576|code|STR             R1, [SP,#0x68+var_68]|0-145
7578|code|LDR             R1, =(aSDD - 0x1DA2); "%s[%d]%d:"|193-73
7580|code|MOV             R2, R5|42-70
7582|code|ADD             R1, PC; "%s[%d]%d:"|121-68
7584|code|MOV             R3, R0|3-70
7586|code|MOVS            R0, #7|7-32
7588|code|BLX             cl_log|255-247-46-232
7592|code|LDR             R0, =(aUdsC - 0x1DB0); "uds_c"|190-72
7594|code|MOV             R1, R9|73-70
7596|code|ADD             R0, PC; "uds_c"|120-68
7598|code|BLX             ipc_wait_conn_constructor|255-247-28-232
7602|code|MOV             R10, R0|130-70
7604|code|CMP             R0, #0|0-40
7606|code|BEQ.W           loc_2060|0-240-83-129
7610|code|LDR             R3, =(dword_14010 - 0x1DC0)|187-75
7612|code|ADD             R3, PC; dword_14010|123-68
7614|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7616|code|CMP             R2, #0|0-42
7618|code|BLE             loc_1DDC|11-221
7620|code|LDR             R5, [R3,#(dword_14018 - 0x14010)]|157-104
7622|code|BLX             getpid|254-247-252-239
7626|code|MOVS            R1, #0xF3|243-33
7628|code|STR             R1, [SP,#0x68+var_68]|0-145
7630|code|LDR             R1, =(aSDD - 0x1DD6); "%s[%d]%d:"|183-73
7632|code|MOV             R2, R5|42-70
7634|code|ADD             R1, PC; "%s[%d]%d:"|121-68
7636|code|MOV             R3, R0|3-70
7638|code|MOVS            R0, #7|7-32
7640|code|BLX             cl_log|255-247-20-232
7644|code|LDR.W           R11, =(dword_14010 - 0x1DE8)|223-248-208-178
7648|code|MOVS            R5, #1|1-37
7650|code|LDR             R3, =(aSDDForkClientD - 0x1DEE); "%s[%d]%d: fork client %d of %d"|180-75
7652|code|ADD             R11, PC; dword_14010|251-68
7654|code|STR.W           R8, [SP,#0x68+var_4C]|205-248-28-128
7658|code|ADD             R3, PC; "%s[%d]%d: fork client %d of %d"|123-68
7660|code|STR             R3, [SP,#0x68+var_50]|6-147
7662|code|CMP             R5, R4|165-66
7664|code|BGT.W           loc_1F46|0-243-169-128
7668|code|LDR.W           R3, [R11,#(dword_14014 - 0x14010)]|219-248-4-48
7672|code|CMP             R3, #0|0-43
7674|code|BLE             loc_1E18|13-221
7676|code|LDR.W           R8, [R11,#(dword_14018 - 0x14010)]|219-248-8-128
7680|code|BLX             getpid|254-247-222-239
7684|code|MOVS            R2, #0xFA|250-34
7686|code|STR             R5, [SP,#0x68+var_64]|1-149
7688|code|STR             R2, [SP,#0x68+var_68]|0-146
7690|code|STR             R4, [SP,#0x68+var_60]|2-148
7692|code|MOV             R2, R8|66-70
7694|code|LDR             R1, [SP,#0x68+var_50]|6-153
7696|code|MOV             R3, R0|3-70
7698|code|MOVS            R0, #7|7-32
7700|code|BLX             cl_log|254-247-246-239
7704|code|BLX             fork|254-247-224-239
7708|code|ADDS            R1, R0, #1|65-28
7710|code|BEQ             loc_1EF6|106-208
7712|code|CMP             R0, #0|0-40
7714|code|BNE             loc_1EF2|102-209
7716|code|LDR             R3, =(dword_14010 - 0x1E2A)|164-75
7718|code|ADD             R3, PC; dword_14010|123-68
7720|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7722|code|CMP             R2, #0|0-42
7724|code|BLE             loc_1E4A|13-221
7726|code|LDR             R4, [R3,#(dword_14018 - 0x14010)]|156-104
7728|code|BLX             getpid|254-247-198-239
7732|code|LDR             R1, =(aSDDClientDStar - 0x1E3E); "%s[%d]%d: client %d starting..."|161-73
7734|code|STR             R5, [SP,#0x68+var_64]|1-149
7736|code|MOV             R2, R4|34-70
7738|code|ADD             R1, PC; "%s[%d]%d: client %d starting..."|121-68
7740|code|MOVW            R4, #0x105|64-242-5-20
7744|code|STR             R4, [SP,#0x68+var_68]|0-148
7746|code|MOV             R3, R0|3-70
7748|code|MOVS            R0, #7|7-32
7750|code|BLX             cl_log|254-247-222-239
7754|code|LDR             R0, =(aUdsC - 0x1E52); "uds_c"|157-72
7756|code|MOV             R1, R9|73-70
7758|code|ADD             R0, PC; "uds_c"|120-68
7760|code|BLX             ipc_channel_constructor|254-247-98-239
7764|code|MOV             R4, R0|4-70
7766|code|CMP             R0, #0|0-40
7768|code|BEQ.W           loc_2044|0-240-244-128
7772|code|LDR             R3, [R0,#0x10]|3-105
7774|code|LDR             R3, [R3,#4]|91-104
7776|code|BLX             R3|152-71
7778|code|CMP             R0, #0|0-40
7780|code|BEQ             loc_1F04|78-208
7782|code|LDR             R0, =(aChannel1Failed - 0x1E6C); "channel[1] failed to connect"|151-72
7784|code|ADD             R0, PC; "channel[1] failed to connect"|120-68
7786|code|BLX             cl_perror|254-247-252-238
7790|code|MOVS            R0, #1; status|1-32
7792|code|BLX             exit|254-247-212-239
7796|code|LDR             R3, =(dword_14010 - 0x1E7A)|148-75
7798|code|ADD             R3, PC; dword_14010|123-68
7800|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7802|code|CMP             R2, #0|0-42
7804|code|BLE             loc_1E96|11-221
7806|code|LDR             R4, [R3,#(dword_14018 - 0x14010)]|156-104
7808|code|BLX             getpid|254-247-158-239
7812|code|MOVS            R1, #0xC3|195-33
7814|code|STR             R1, [SP,#0x68+var_68]|0-145
7816|code|LDR             R1, =(aSDDMainWaiting - 0x1E90); "%s[%d]%d: main waiting..."|144-73
7818|code|MOV             R2, R4|34-70
7820|code|ADD             R1, PC; "%s[%d]%d: main waiting..."|121-68
7822|code|MOV             R3, R0|3-70
7824|code|MOVS            R0, #7|7-32
7826|code|BLX             cl_log|254-247-184-239
7830|code|MOVS            R4, #0|0-36
7832|code|ADD             R5, SP, #0x68+stat_loc|9-173
7834|code|B               loc_1EAA|6-224
7836|code|LDR             R3, [SP,#0x68+stat_loc]|9-155
7838|code|LSLS            R0, R3, #0x19|88-6
7840|code|ITET EQ|10-191
7842|code|UBFXEQ.W        R3, R3, #8, #8|195-243-7-35
7846|code|ADDNE           R4, #1|1-52
7848|code|ADDEQ           R4, R4, R3|228-24
7850|code|MOV             R0, R5; stat_loc|40-70
7852|code|BLX             wait|254-247-4-239
7856|code|CMP             R0, #0|0-40
7858|code|BGT             loc_1E9C|243-220
7860|code|LDR             R3, =(dword_14010 - 0x1EBA)|134-75
7862|code|ADD             R3, PC; dword_14010|123-68
7864|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7866|code|CMP             R2, #0|0-42
7868|code|BLE             loc_1ED8|12-221
7870|code|LDR             R5, [R3,#(dword_14018 - 0x14010)]|157-104
7872|code|BLX             getpid|254-247-126-239
7876|code|LDR             R1, =(aSDDMainEndedRc - 0x1ECE); "%s[%d]%d: main ended rc: %d"|131-73
7878|code|STR             R4, [SP,#0x68+var_64]|1-148
7880|code|MOV             R2, R5|42-70
7882|code|ADD             R1, PC; "%s[%d]%d: main ended rc: %d"|121-68
7884|code|MOVS            R5, #0xCE|206-37
7886|code|STR             R5, [SP,#0x68+var_68]|0-149
7888|code|MOV             R3, R0|3-70
7890|code|MOVS            R0, #7|7-32
7892|code|BLX             cl_log|254-247-150-239
7896|code|CMP             R4, #0x80|128-44
7898|code|ITE LT|180-191
7900|code|MOVLT           R0, R4|32-70
7902|code|MOVGE           R0, #0x7F; status|127-32
7904|code|BLX             exit|254-247-156-239
7908|code|LDR             R0, =(aCanTFork - 0x1EEA); "can't fork"|124-72
7910|code|ADD             R0, PC; "can't fork"|120-68
7912|code|BLX             cl_perror|254-247-188-238
7916|code|MOVS            R0, #1; status|1-32
7918|code|BLX             exit|254-247-150-239
7922|code|ADDS            R5, #1|1-53
7924|code|B               loc_1DEE|123-231
7926|code|LDR             R0, =(aCanTFork - 0x1EFC); "can't fork"|121-72
7928|code|ADD             R0, PC; "can't fork"|120-68
7930|code|BLX             cl_perror|254-247-180-238
7934|code|MOVS            R0, #1; status|1-32
7936|code|BLX             exit|254-247-140-239
7940|code|MOV             R0, R4|32-70
7942|code|BL              sub_1A20|255-247-139-253
7946|code|MOV             R0, R4|32-70
7948|code|MOV             R1, R6|49-70
7950|code|BLX             R7|184-71
7952|code|LDR             R3, =(dword_14010 - 0x1F16)|115-75
7954|code|ADD             R3, PC; dword_14010|123-68
7956|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
7958|code|CMP             R2, #0|0-42
7960|code|MOV             R4, R0|4-70
7962|code|BLE             loc_1F3A|14-221
7964|code|LDR             R6, [R3,#(dword_14018 - 0x14010)]|158-104
7966|code|BLX             getpid|254-247-80-239
7970|code|LDR             R1, =(aSDDClientDEnde - 0x1F32); "%s[%d]%d: client %d ended rc:%d"|112-73
7972|code|STR             R5, [SP,#0x68+var_60]|2-149
7974|code|MOV.W           R5, #0x116|79-244-139-117
7978|code|STR             R4, [SP,#0x68+var_64]|1-148
7980|code|MOV             R2, R6|50-70
7982|code|ADD             R1, PC; "%s[%d]%d: client %d ended rc:%d"|121-68
7984|code|STR             R5, [SP,#0x68+var_68]|0-149
7986|code|MOV             R3, R0|3-70
7988|code|MOVS            R0, #7|7-32
7990|code|BLX             cl_log|254-247-102-239
7994|code|CMP             R4, #0x7F|127-44
7996|code|MOV             R0, R4|32-70
7998|code|IT GE|168-191
8000|code|MOVGE           R0, #0x7F; status|127-32
8002|code|BLX             exit|254-247-108-239
8006|code|LDR             R3, =(dword_14010 - 0x1F50)|104-75
8008|code|LDR.W           R8, [SP,#0x68+var_4C]|221-248-28-128
8012|code|ADD             R3, PC; dword_14010|123-68
8014|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
8016|code|CMP             R2, #0|0-42
8018|code|BLE             loc_1F6E|12-221
8020|code|LDR             R5, [R3,#(dword_14018 - 0x14010)]|157-104
8022|code|BLX             getpid|254-247-52-239
8026|code|MOV.W           R1, #0x122|79-244-145-113
8030|code|STR             R1, [SP,#0x68+var_68]|0-145
8032|code|LDR             R1, =(aSDDServerStart - 0x1F68); "%s[%d]%d: server starting..."|98-73
8034|code|MOV             R2, R5|42-70
8036|code|ADD             R1, PC; "%s[%d]%d: server starting..."|121-68
8038|code|MOV             R3, R0|3-70
8040|code|MOVS            R0, #7|7-32
8042|code|BLX             cl_log|254-247-76-239
8046|code|MOVS            R0, #1; seconds|1-32
8048|code|BLX             sleep|254-247-26-239
8052|code|LDR.W           R3, [R10,#8]|218-248-8-48
8056|code|MOV             R0, R10|80-70
8058|code|MOVS            R1, #0|0-33
8060|code|LDR             R3, [R3,#8]|155-104
8062|code|BLX             R3|152-71
8064|code|MOV             R5, R0|5-70
8066|code|CMP             R0, #0|0-40
8068|code|BEQ             loc_203A|89-208
8070|code|MOV             R0, R5|40-70
8072|code|BL              sub_1A20|255-247-74-253
8076|code|MOV             R0, R5|40-70
8078|code|MOV             R1, R6|49-70
8080|code|BLX             R8|192-71
8082|code|LDR.W           R3, [R10,#8]|218-248-8-48
8086|code|LDR             R3, [R3]|27-104
8088|code|MOV             R5, R0|5-70
8090|code|MOV             R0, R10|80-70
8092|code|BLX             R3|152-71
8094|code|LDR             R3, =(dword_14010 - 0x1FA4)|84-75
8096|code|ADD             R3, PC; dword_14010|123-68
8098|code|LDR             R2, [R3,#(dword_14014 - 0x14010)]|90-104
8100|code|CMP             R2, #0|0-42
8102|code|BLE             loc_1FC4|13-221
8104|code|LDR             R6, [R3,#(dword_14018 - 0x14010)]|158-104
8106|code|BLX             getpid|254-247-10-239
8110|code|LDR             R1, =(aSDDServerEnded - 0x1FB8); "%s[%d]%d: server ended rc:%d"|81-73
8112|code|STR             R5, [SP,#0x68+var_64]|1-149
8114|code|MOV             R2, R6|50-70
8116|code|ADD             R1, PC; "%s[%d]%d: server ended rc:%d"|121-68
8118|code|MOV.W           R6, #0x13E|79-244-159-118
8122|code|STR             R6, [SP,#0x68+var_68]|0-150
8124|code|MOV             R3, R0|3-70
8126|code|MOVS            R0, #7|7-32
8128|code|BLX             cl_log|254-247-32-239
8132|code|LDR             R6, =(dword_14010 - 0x1FD4)|76-78
8134|code|MOV.W           R9, #1|79-240-1-9
8138|code|LDR.W           R8, =(aSDDClientDReap - 0x1FD6); "%s[%d]%d: client %d reaped:%d"|223-248-48-129
8142|code|ADD             R7, SP, #0x68+stat_loc|9-175
8144|code|ADD             R6, PC; dword_14010|126-68
8146|code|ADD             R8, PC; "%s[%d]%d: client %d reaped:%d"|248-68
8148|code|B               loc_2024|38-224
8150|code|MOV             R0, R7; stat_loc|56-70
8152|code|BLX             wait|254-247-110-238
8156|code|LDR             R3, [R6,#(dword_14014 - 0x14010)]|115-104
8158|code|CMP             R3, #0|0-43
8160|code|MOV             R10, R0|130-70
8162|code|BLE             loc_2012|22-221
8164|code|LDR.W           R11, [R6,#(dword_14018 - 0x14010)]|214-248-8-176
8168|code|BLX             getpid|254-247-234-238
8172|code|LDR             R1, [SP,#0x68+stat_loc]|9-153
8174|code|MOV.W           LR, #0x148|79-244-164-126
8178|code|STR.W           R10, [SP,#0x68+var_64]|205-248-4-160
8182|code|TST.W           R1, #0x7F|17-240-127-15
8186|code|MOV             R2, R11|90-70
8188|code|STR.W           LR, [SP,#0x68+var_68]|205-248-0-224
8192|code|ITE EQ|12-191
8194|code|MOVEQ           R1, #1|1-33
8196|code|MOVNE           R1, #0|0-33
8198|code|STR             R1, [SP,#0x68+var_60]|2-145
8200|code|MOV             R1, R8|65-70
8202|code|MOV             R3, R0|3-70
8204|code|MOVS            R0, #7|7-32
8206|code|BLX             cl_log|254-247-250-238
8210|code|LDR             R3, [SP,#0x68+stat_loc]|9-155
8212|code|ADD.W           R9, R9, #1|9-241-1-9
8216|code|LSLS            R2, R3, #0x19|90-6
8218|code|ITET EQ|10-191
8220|code|UBFXEQ.W        R3, R3, #8, #8|195-243-7-35
8224|code|ADDNE           R5, #1|1-53
8226|code|ADDEQ           R5, R5, R3|237-24
8228|code|CMP             R9, R4|161-69
8230|code|BLE             loc_1FD6|214-221
8232|code|LDR             R3, [SP,#0x68+var_54]|5-155
8234|code|MOV             R0, R5|40-70
8236|code|LDR             R2, [SP,#0x68+var_2C]|15-154
8238|code|LDR             R3, [R3]|27-104
8240|code|CMP             R2, R3|154-66
8242|code|BNE             loc_206E|28-209
8244|code|ADD             SP, SP, #0x44 ; 'D'|17-176
8246|code|POP.W           {R4-R11,PC}|189-232-240-143
8250|code|LDR             R0, =(aServerAcceptan - 0x2040); "server: acceptance failed"|49-72
8252|code|ADD             R0, PC; "server: acceptance failed"|120-68
8254|code|BLX             cl_perror|254-247-18-238
8258|code|B               loc_1F86|160-231
8260|code|LDR             R0, =(aClientChannelC - 0x204A); "client: channel creation failed"|47-72
8262|code|ADD             R0, PC; "client: channel creation failed"|120-68
8264|code|BLX             cl_perror|254-247-12-238
8268|code|MOVS            R0, #1; status|1-32
8270|code|BLX             exit|254-247-230-238
8274|code|LDR             R0, =(aGHashTableNewF - 0x2058); "g_hash_table_new() failed"|45-72
8276|code|ADD             R0, PC; "g_hash_table_new() failed"|120-68
8278|code|BLX             cl_perror|254-247-6-238
8282|code|MOVS            R0, #1; status|1-32
8284|code|BLX             exit|254-247-222-238
8288|code|LDR             R0, =(aCouldNotEstabl - 0x2066); "could not establish server"|42-72
8290|code|ADD             R0, PC; "could not establish server"|120-68
8292|code|BLX             cl_perror|254-247-254-237
8296|code|MOVS            R0, #1; status|1-32
8298|code|BLX             exit|254-247-216-238
8302|code|BLX             __stack_chk_fail|254-247-132-238
8306|data|ALIGN 4|0-191
8308|data|DCD aPath - 0x1CDC; "path"|124-22-0-0
8312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1CDE|62-34-1-0
8316|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
8320|data|DCD aTmpFoobar - 0x1CFA; "/tmp/foobar"|102-22-0-0
8324|data|DCD dword_14010 - 0x1CFE|18-35-1-0
8328|data|DCD aSDDMainProcess - 0x1D2C; "%s[%d]%d: main process"|8-20-0-0
8332|data|DCD dword_14010 - 0x1D48|200-34-1-0
8336|data|DCD aSDD - 0x1D60; "%s[%d]%d:"|208-20-0-0
8340|data|DCD g_str_hash_ptr - 0x13F1C|176-0-0-0
8344|data|DCD g_str_equal_ptr - 0x13F1C|216-0-0-0
8348|data|DCD dword_14010 - 0x1D8C|132-34-1-0
8352|data|DCD aSDD - 0x1DA2; "%s[%d]%d:"|142-20-0-0
8356|data|DCD aUdsC - 0x1DB0; "uds_c"|168-20-0-0
8360|data|DCD dword_14010 - 0x1DC0|80-34-1-0
8364|data|DCD aSDD - 0x1DD6; "%s[%d]%d:"|90-20-0-0
8368|data|DCD dword_14010 - 0x1DE8|40-34-1-0
8372|data|DCD aSDDForkClientD - 0x1DEE; "%s[%d]%d: fork client %d of %d"|142-20-0-0
8376|data|DCD dword_14010 - 0x1E2A|230-33-1-0
8380|data|DCD aSDDClientDStar - 0x1E3E; "%s[%d]%d: client %d starting..."|94-20-0-0
8384|data|DCD aUdsC - 0x1E52; "uds_c"|6-20-0-0
8388|data|DCD aChannel1Failed - 0x1E6C; "channel[1] failed to connect"|112-20-0-0
8392|data|DCD dword_14010 - 0x1E7A|150-33-1-0
8396|data|DCD aSDDMainWaiting - 0x1E90; "%s[%d]%d: main waiting..."|200-18-0-0
8400|data|DCD dword_14010 - 0x1EBA|86-33-1-0
8404|data|DCD aSDDMainEndedRc - 0x1ECE; "%s[%d]%d: main ended rc: %d"|166-18-0-0
8408|data|DCD aCanTFork - 0x1EEA; "can't fork"|98-18-0-0
8412|data|DCD aCanTFork - 0x1EFC; "can't fork"|80-18-0-0
8416|data|DCD dword_14010 - 0x1F16|250-32-1-0
8420|data|DCD aSDDClientDEnde - 0x1F32; "%s[%d]%d: client %d ended rc:%d"|202-19-0-0
8424|data|DCD dword_14010 - 0x1F50|192-32-1-0
8428|data|DCD aSDDServerStart - 0x1F68; "%s[%d]%d: server starting..."|136-18-0-0
8432|data|DCD dword_14010 - 0x1FA4|108-32-1-0
8436|data|DCD aSDDServerEnded - 0x1FB8; "%s[%d]%d: server ended rc:%d"|88-18-0-0
8440|data|DCD dword_14010 - 0x1FD4|60-32-1-0
8444|data|DCD aSDDClientDReap - 0x1FD6; "%s[%d]%d: client %d reaped:%d"|98-19-0-0
8448|data|DCD aServerAcceptan - 0x2040; "server: acceptance failed"|220-18-0-0
8452|data|DCD aClientChannelC - 0x204A; "client: channel creation failed"|114-18-0-0
8456|data|DCD aGHashTableNewF - 0x2058; "g_hash_table_new() failed"|228-17-0-0
8460|data|DCD aCouldNotEstabl - 0x2066; "could not establish server"|250-17-0-0
8464|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2118)|21-75
8466|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|22-74
8468|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
8470|code|PUSH            {R4,LR}|16-181
8472|code|SUB             SP, SP, #8|130-176
8474|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
8476|code|LDR             R2, [R3]|26-104
8478|code|STR             R2, [SP,#4]|1-146
8480|code|CBZ             R1, loc_214C|161-177
8482|code|LDR             R2, [R1,#0x14]|74-105
8484|code|CBNZ            R2, loc_2132|42-185
8486|code|LDR             R2, [SP,#4]|1-154
8488|code|LDR             R3, [R3]|27-104
8490|code|CMP             R2, R3|154-66
8492|code|BNE             loc_2164|26-209
8494|code|ADD             SP, SP, #8|2-176
8496|code|POP             {R4,PC}|16-189
8498|code|LDR             R2, [SP,#4]|1-154
8500|code|MOVS            R4, #0|0-36
8502|code|LDR             R3, [R3]|27-104
8504|code|STR             R4, [R1,#0x14]|76-97
8506|code|CMP             R2, R3|154-66
8508|code|BNE             loc_2164|18-209
8510|code|LDR             R0, =(loc_124C+1 - 0x2144)|12-72
8512|code|ADD             R0, PC; loc_124C|120-68
8514|code|ADD             SP, SP, #8|2-176
8516|code|POP.W           {R4,LR}|189-232-16-64
8520|code|B.W             sub_DCC|254-247-64-190
8524|code|LDR             R2, [SP,#4]|1-154
8526|code|LDR             R3, [R3]|27-104
8528|code|CMP             R2, R3|154-66
8530|code|BNE             loc_2164|7-209
8532|code|LDR             R1, =(aUserdataIsNull - 0x215C); "userdata is NULL"|7-73
8534|code|MOVS            R0, #3|3-32
8536|code|ADD             R1, PC; "userdata is NULL"|121-68
8538|code|ADD             SP, SP, #8|2-176
8540|code|POP.W           {R4,LR}|189-232-16-64
8544|code|B.W             j_cl_log|254-247-78-190
8548|code|BLX             __stack_chk_fail|254-247-8-238
8552|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2118|4-30-1-0
8556|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
8560|data|DCD loc_124C+1 - 0x2144|9-241-255-255
8564|data|DCD aUserdataIsNull - 0x215C; "userdata is NULL"|120-14-0-0
8568|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2182)|36-75
8570|code|PUSH.W          {R4-R9,LR}|45-233-240-67
8574|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
8576|code|LDR             R6, =(__stack_chk_guard_ptr - 0x13F1C)|35-78
8578|code|SUB             SP, SP, #0x2C|139-176
8580|code|MOV             R8, R0|128-70
8582|code|MOVS            R0, #0|0-32
8584|code|MOV             R7, R1|15-70
8586|code|MOV             R1, R0|1-70
8588|code|LDR.W           R9, [R3,R6]; __stack_chk_guard|83-248-6-144
8592|code|MOV             R4, R0|4-70
8594|code|LDR             R5, =(dword_14010 - 0x219E)|32-77
8596|code|ADD             R6, SP, #0x48+var_3C|3-174
8598|code|LDR.W           R3, [R9]|217-248-0-48
8602|code|ADD             R5, PC; dword_14010|125-68
8604|code|STR             R3, [SP,#0x48+var_24]|9-147
8606|code|BLX             g_main_loop_new|254-247-146-237
8610|code|LDR             R3, =(loc_2A34+1 - 0x21AE)|29-75
8612|code|MOV             R1, R8|65-70
8614|code|MOV             R2, R4|34-70
8616|code|STR             R6, [SP,#0x48+var_48]|0-150
8618|code|ADD             R3, PC; loc_2A34|123-68
8620|code|STR             R4, [SP,#0x48+var_44]|1-148
8622|code|STR.W           R8, [SP,#0x48+var_30]|205-248-24-128
8626|code|STR             R7, [SP,#0x48+var_2C]|7-151
8628|code|STR             R4, [SP,#0x48+var_3C]|3-148
8630|code|STR             R4, [SP,#0x48+var_38]|4-148
8632|code|STR             R4, [SP,#0x48+var_34]|5-148
8634|code|STR             R4, [SP,#0x48+var_28]|8-148
8636|code|STR             R0, [R5]|40-96
8638|code|MOV             R0, R4|32-70
8640|code|BLX             G_main_add_IPC_Channel|254-247-236-237
8644|code|BLX             getpid|254-247-252-237
8648|code|LDR             R1, =(aMainloopEchoCl - 0x21D0); "Mainloop echo client: %d reps pid %d."|20-73
8650|code|MOV             R2, R7|58-70
8652|code|ADD             R1, PC; "Mainloop echo client: %d reps pid %d."|121-68
8654|code|MOV             R3, R0|3-70
8656|code|MOVS            R0, #6|6-32
8658|code|BLX             cl_log|254-247-24-238
8662|code|LDR             R0, [R5]|40-104
8664|code|BLX             g_main_loop_run|254-247-26-238
8668|code|LDR             R0, [R5]|40-104
8670|code|BLX             g_main_loop_unref|254-247-234-237
8674|code|LDR             R6, [SP,#0x48+var_3C]|3-158
8676|code|LDR             R1, =(aMainloopEchoCl_0 - 0x21F0); "Mainloop echo client: %d errors, %d rea"...|14-73
8678|code|MOVS            R0, #6|6-32
8680|code|LDR             R2, [SP,#0x48+var_34]|5-154
8682|code|LDR             R3, [SP,#0x48+var_38]|4-155
8684|code|ADD             R1, PC; "Mainloop echo client: %d errors, %d rea"...|121-68
8686|code|STR             R4, [R5]|44-96
8688|code|STR             R6, [SP,#0x48+var_48]|0-150
8690|code|BLX             cl_log|254-247-8-238
8694|code|LDR             R2, [SP,#0x48+var_24]|9-154
8696|code|LDR.W           R3, [R9]|217-248-0-48
8700|code|LDR             R0, [SP,#0x48+var_34]|5-152
8702|code|CMP             R2, R3|154-66
8704|code|BNE             loc_2208|2-209
8706|code|ADD             SP, SP, #0x2C ; ','|11-176
8708|code|POP.W           {R4-R9,PC}|189-232-240-131
8712|code|BLX             __stack_chk_fail|254-247-182-237
8716|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2182|154-29-1-0
8720|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
8724|data|DCD dword_14010 - 0x219E|114-30-1-0
8728|data|DCD loc_2A34+1 - 0x21AE|135-8-0-0
8732|data|DCD aMainloopEchoCl - 0x21D0; "Mainloop echo client: %d reps pid %d."|156-17-0-0
8736|data|DCD aMainloopEchoCl_0 - 0x21F0; "Mainloop echo client: %d errors, %d rea"...|164-17-0-0
8740|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x222C)|48-75
8742|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|49-74
8744|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
8746|code|PUSH.W          {R4-R10,LR}|45-233-240-71
8750|code|MOV             R5, R0|5-70
8752|code|LDR.W           R9, [R3,R2]; __stack_chk_guard|83-248-2-144
8756|code|SUB             SP, SP, #0x28 ; '('|138-176
8758|code|MOVS            R0, #0|0-32
8760|code|MOV             R8, R1|136-70
8762|code|MOV             R1, R0|1-70
8764|code|MOV             R4, R0|4-70
8766|code|LDR.W           R3, [R9]|217-248-0-48
8770|code|ADD             R7, SP, #0xC|3-175
8772|code|LDR             R6, =(dword_14010 - 0x2252)|42-78
8774|code|STR             R3, [SP,#0x24]|9-147
8776|code|BLX             g_main_loop_new|254-247-60-237
8780|code|LDR             R3, [R5,#0x10]|43-105
8782|code|ADD             R6, PC; dword_14010|126-68
8784|code|LDR             R1, =(loc_1780+1 - 0x225C)|40-73
8786|code|MOV             R2, R7|58-70
8788|code|STR             R5, [SP,#0x18]|6-149
8790|code|LDR             R3, [R3,#0x3C]|219-107
8792|code|ADD             R1, PC; loc_1780|121-68
8794|code|STR.W           R8, [SP,#0x1C]|205-248-28-128
8798|code|STR             R4, [SP,#0xC]|3-148
8800|code|STR             R4, [SP,#0x10]|4-148
8802|code|STR             R4, [SP,#0x14]|5-148
8804|code|STR             R4, [SP,#0x20]|8-148
8806|code|STR             R0, [R6]|48-96
8808|code|MOV             R0, R5|40-70
8810|code|BLX             R3|152-71
8812|code|LDR             R3, [R5,#0x10]|43-105
8814|code|LDR             R1, =(loc_2110+1 - 0x2278)|34-73
8816|code|MOV             R0, R5|40-70
8818|code|MOV             R2, R7|58-70
8820|code|ADD             R1, PC; loc_2110|121-68
8822|code|LDR             R3, [R3,#0x40]|27-108
8824|code|BLX             R3|152-71
8826|code|LDR             R0, =(loc_124C+1 - 0x228A)|32-72
8828|code|MOVS            R2, #0x14|20-34
8830|code|MOVS            R3, #2|2-35
8832|code|STR             R2, [R5,#0x30]|42-99
8834|code|MOV             R1, R7|57-70
8836|code|STR             R3, [R5,#0x34]|107-99
8838|code|ADD             R0, PC; loc_124C|120-68
8840|code|BLX             g_idle_add|254-247-162-237
8844|code|LDR             R3, =(sub_274C+1 - 0x2296)|28-75
8846|code|MOV             R1, R5|41-70
8848|code|MOV             R2, R4|34-70
8850|code|ADD             R3, PC; sub_274C|123-68
8852|code|STR             R7, [SP]|0-151
8854|code|STR             R4, [SP,#4]|1-148
8856|code|MOV             R10, R0|130-70
8858|code|MOV             R0, R4|32-70
8860|code|BLX             G_main_add_IPC_Channel|254-247-126-237
8864|code|BLX             getpid|254-247-142-237
8868|code|LDR             R1, =(aMainloopEchoSe - 0x22AC); "Mainloop echo server: %d reps pid %d."|23-73
8870|code|MOV             R2, R8|66-70
8872|code|ADD             R1, PC; "Mainloop echo server: %d reps pid %d."|121-68
8874|code|MOV             R3, R0|3-70
8876|code|MOVS            R0, #6|6-32
8878|code|BLX             cl_log|254-247-170-237
8882|code|LDR             R0, [R6]|48-104
8884|code|BLX             g_main_loop_run|254-247-172-237
8888|code|LDR             R0, [R6]|48-104
8890|code|BLX             g_main_loop_unref|254-247-124-237
8894|code|MOV             R0, R10|80-70
8896|code|BLX             g_source_remove|254-247-72-237
8900|code|LDR             R1, =(aMainloopEchoSe_0 - 0x22CE); "Mainloop echo server: %d errors"|16-73
8902|code|MOVS            R0, #6|6-32
8904|code|LDR             R2, [SP,#0x14]|5-154
8906|code|ADD             R1, PC; "Mainloop echo server: %d errors"|121-68
8908|code|STR             R4, [R6]|52-96
8910|code|BLX             cl_log|254-247-154-237
8914|code|LDR             R2, [SP,#0x24]|9-154
8916|code|LDR.W           R3, [R9]|217-248-0-48
8920|code|LDR             R0, [SP,#0x14]|5-152
8922|code|CMP             R2, R3|154-66
8924|code|BNE             loc_22E4|2-209
8926|code|ADD             SP, SP, #0x28 ; '('|10-176
8928|code|POP.W           {R4-R10,PC}|189-232-240-135
8932|code|BLX             __stack_chk_fail|254-247-72-237
8936|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x222C|240-28-1-0
8940|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
8944|data|DCD dword_14010 - 0x2252|190-29-1-0
8948|data|DCD loc_1780+1 - 0x225C|37-245-255-255
8952|data|DCD loc_2110+1 - 0x2278|153-254-255-255
8956|data|DCD loc_124C+1 - 0x228A|195-239-255-255
8960|data|DCD sub_274C+1 - 0x2296|183-4-0-0
8964|data|DCD aMainloopEchoSe - 0x22AC; "Mainloop echo server: %d reps pid %d."|28-17-0-0
8968|data|DCD aMainloopEchoSe_0 - 0x22CE; "Mainloop echo server: %d errors"|34-17-0-0
8972|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2314)|109-75
8974|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|110-74
8976|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
8978|code|PUSH.W          {R4-R11,LR}|45-233-240-79
8982|code|SUB             SP, SP, #0x4C ; 'L'|147-176
8984|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
8986|code|MOV             R4, R0|4-70
8988|code|LDR.W           R10, =(dword_14008 - 0x232C)|223-248-172-161
8992|code|MOV             R8, R1|136-70
8994|code|MOVS            R6, #0|0-38
8996|code|STR             R6, [SP,#0x28]|10-150
8998|code|STR             R3, [SP,#0x24]|9-147
9000|code|ADD             R10, PC; dword_14008|250-68
9002|code|LDR             R3, [R3]|27-104
9004|code|LDR.W           R0, [R10]|218-248-0-0
9008|code|STR             R3, [SP,#0x44]|17-147
9010|code|BLX             malloc|254-247-28-237
9014|code|MOV             R9, R0|129-70
9016|code|CMP             R0, #0|0-40
9018|code|BEQ.W           loc_2482|0-240-162-128
9022|code|STR             R6, [SP,#0x2C]|11-150
9024|code|STR             R6, [SP,#0x30]|12-150
9026|code|STR             R6, [SP,#0x38]|14-150
9028|code|STR             R6, [SP,#0x3C]|15-150
9030|code|STR             R0, [SP,#0x34]|13-144
9032|code|STR             R4, [SP,#0x40]|16-148
9034|code|BLX             getpid|254-247-58-237
9038|code|LDR             R1, =(aEchoServerDRep - 0x2356); "Echo server: %d reps pid %d."|96-73
9040|code|MOV             R2, R8|66-70
9042|code|ADD             R1, PC; "Echo server: %d reps pid %d."|121-68
9044|code|MOV             R3, R0|3-70
9046|code|MOVS            R0, #6|6-32
9048|code|BLX             cl_log|254-247-84-237
9052|code|CMP.W           R8, #0|184-241-0-15
9056|code|BLE             loc_2446|113-221
9058|code|LDR             R3, =(aEchotestDataMi - 0x236C); "echotest: data mismatch. iteration %d"|92-75
9060|code|ADD             R7, SP, #0x2C ; ','|11-175
9062|code|MOVS            R5, #1|1-37
9064|code|ADD             R3, PC; "echotest: data mismatch. iteration %d"|123-68
9066|code|STR             R3, [SP,#0x20]|8-147
9068|code|LDR             R3, =(aEchotestLength - 0x2372); "echotest: length mismatch [%lu,%lu] ite"...|90-75
9070|code|ADD             R3, PC; "echotest: length mismatch [%lu,%lu] ite"...|123-68
9072|code|STR             R3, [SP,#0x14]|5-147
9074|code|LDR             R3, =(aEchotestServer - 0x2378); "echotest server: recv failed %d rc iter"...|90-75
9076|code|ADD             R3, PC; "echotest server: recv failed %d rc iter"...|123-68
9078|code|STR             R3, [SP,#0x18]|6-147
9080|code|LDR             R3, =(aRecv - 0x237E); "recv"|89-75
9082|code|ADD             R3, PC; "recv"|123-68
9084|code|STR             R3, [SP,#0x1C]|7-147
9086|code|LDR             R3, =(aEchotestSendFa - 0x2384); "echotest: send failed %d rc iter %d"|89-75
9088|code|ADD             R3, PC; "echotest: send failed %d rc iter %d"|123-68
9090|code|STR             R3, [SP,#0xC]|3-147
9092|code|B               loc_23A4|14-224
9094|code|MOV             R2, R0|2-70
9096|code|MOV             R3, R5|43-70
9098|code|MOVS            R0, #3|3-32
9100|code|LDR             R1, [SP,#0xC]|3-153
9102|code|BLX             cl_log|254-247-58-237
9106|code|LDR             R3, [SP,#0x28]|10-155
9108|code|ADDS            R6, #1|1-54
9110|code|ADDS            R5, #1|1-53
9112|code|CBZ             R3, loc_23A0|19-177
9114|code|LDR             R2, [R3,#0xC]|218-104
9116|code|MOV             R0, R3|24-70
9118|code|BLX             R2|144-71
9120|code|CMP             R8, R5|168-69
9122|code|BLT             loc_2446|80-219
9124|code|MOV             R0, R9|72-70
9126|code|LDR.W           R1, [R10]|218-248-0-16
9130|code|MOV             R3, R7|59-70
9132|code|MOV             R2, R5|42-70
9134|code|BL              sub_11DC|254-247-21-255
9138|code|LDR             R3, [R4,#0x10]|35-105
9140|code|MOV             R0, R4|32-70
9142|code|MOV             R1, R7|57-70
9144|code|LDR             R3, [R3,#0x10]|27-105
9146|code|BLX             R3|152-71
9148|code|CMP             R0, #0|0-40
9150|code|BNE             loc_2386|226-209
9152|code|LDR             R3, [R4,#0x10]|35-105
9154|code|MOV             R0, R4|32-70
9156|code|LDR             R3, [R3,#0x1C]|219-105
9158|code|BLX             R3|152-71
9160|code|MOV             R0, R4|32-70
9162|code|BL              sub_1864|255-247-75-250
9166|code|CMP             R8, R5|168-69
9168|code|BEQ             loc_24BA|115-208
9170|code|LDR             R3, [R4,#0x10]|35-105
9172|code|MOV             R0, R4|32-70
9174|code|LDR             R3, [R3,#0x18]|155-105
9176|code|BLX             R3|152-71
9178|code|CMP             R0, #3|3-40
9180|code|BEQ             loc_23D2|249-208
9182|code|MOV             R11, R0|131-70
9184|code|CMP             R0, #0|0-40
9186|code|BNE             loc_2496|88-209
9188|code|LDR             R3, [R4,#0x10]|35-105
9190|code|MOV             R0, R4|32-70
9192|code|ADD             R1, SP, #0x28 ; '('|10-169
9194|code|LDR             R3, [R3,#0x14]|91-105
9196|code|BLX             R3|152-71
9198|code|CBNZ            R0, loc_241E|176-185
9200|code|LDR             R3, [SP,#0x28]|10-155
9202|code|LDR             R1, [SP,#0x2C]|11-153
9204|code|LDR             R2, [R3]|26-104
9206|code|CMP             R2, R1|138-66
9208|code|BEQ             loc_240C|8-208
9210|code|MOV             R3, R1|11-70
9212|code|STR             R5, [SP]|0-149
9214|code|MOVS            R0, #3|3-32
9216|code|LDR             R1, [SP,#0x14]|5-153
9218|code|BLX             cl_log|254-247-0-237
9222|code|ADDS            R6, #1|1-54
9224|code|LDR             R3, [SP,#0x28]|10-155
9226|code|B               loc_2396|196-231
9228|code|LDR             R0, [R3,#8]|152-104
9230|code|LDR             R1, [SP,#0x34]|13-153
9232|code|STR             R3, [SP,#0x10]|4-147
9234|code|BLX             strncmp|254-247-240-236
9238|code|LDR             R3, [SP,#0x10]|4-155
9240|code|CBNZ            R0, loc_2472|88-187
9242|code|ADDS            R5, #1|1-53
9244|code|B               loc_239A|189-231
9246|code|STR             R0, [SP,#0x10]|4-144
9248|code|BLX             __errno_location|254-247-2-237
9252|code|MOV             R3, R5|43-70
9254|code|LDR             R2, [SP,#0x10]|4-154
9256|code|LDR             R1, [SP,#0x18]|6-153
9258|code|ADDS            R5, #1|1-53
9260|code|ADDS            R6, #1|1-54
9262|code|LDR             R0, [R0]|0-104
9264|code|STR             R0, [SP]|0-144
9266|code|MOVS            R0, #3|3-32
9268|code|BLX             cl_log|254-247-230-236
9272|code|LDR             R0, [SP,#0x1C]|7-152
9274|code|BLX             cl_perror|254-247-20-236
9278|code|CMP             R8, R5|168-69
9280|code|STR.W           R11, [SP,#0x28]|205-248-40-176
9284|code|BGE             loc_23A4|174-218
9286|code|LDR             R1, =(aEchoserverDErr - 0x2450); "echoserver: %d errors"|40-73
9288|code|MOV             R2, R6|50-70
9290|code|MOVS            R0, #6|6-32
9292|code|ADD             R1, PC; "echoserver: %d errors"|121-68
9294|code|BLX             cl_log|254-247-218-236
9298|code|LDR             R3, [R4,#0x10]|35-105
9300|code|MOV             R0, R4|32-70
9302|code|LDR             R3, [R3]|27-104
9304|code|BLX             R3|152-71
9306|code|MOV             R0, R9|72-70
9308|code|BLX             free|254-247-68-236
9312|code|LDR             R3, [SP,#0x24]|9-155
9314|code|LDR             R2, [SP,#0x44]|17-154
9316|code|MOV             R0, R6|48-70
9318|code|LDR             R3, [R3]|27-104
9320|code|CMP             R2, R3|154-66
9322|code|BNE             loc_2492|18-209
9324|code|ADD             SP, SP, #0x4C ; 'L'|19-176
9326|code|POP.W           {R4-R11,PC}|189-232-240-143
9330|code|MOVS            R0, #3|3-32
9332|code|LDR             R1, [SP,#0x20]|8-153
9334|code|MOV             R2, R5|42-70
9336|code|ADDS            R6, #1|1-54
9338|code|BLX             cl_log|254-247-196-236
9342|code|LDR             R3, [SP,#0x28]|10-155
9344|code|B               loc_2396|137-231
9346|code|LDR             R1, =(aOutOfMemory - 0x248A); "Out of memory"|26-73
9348|code|MOVS            R0, #3|3-32
9350|code|ADD             R1, PC; "Out of memory"|121-68
9352|code|BLX             cl_log|254-247-188-236
9356|code|MOVS            R0, #1|1-32
9358|code|BLX             exit|254-247-198-236
9362|code|BLX             __stack_chk_fail|254-247-114-236
9366|code|BLX             __errno_location|254-247-200-236
9370|code|LDR             R1, =(aEchotestServer_0 - 0x24A4); "echotest server: waitin failed %d rc it"...|21-73
9372|code|MOV             R2, R11|90-70
9374|code|MOV             R3, R5|43-70
9376|code|ADD             R1, PC; "echotest server: waitin failed %d rc it"...|121-68
9378|code|LDR             R4, [R0]|4-104
9380|code|MOVS            R0, #3|3-32
9382|code|STR             R4, [SP]|0-148
9384|code|BLX             cl_log|254-247-172-236
9388|code|LDR             R0, =(aWaitin - 0x24B2); "waitin"|17-72
9390|code|ADD             R0, PC; "waitin"|120-68
9392|code|BLX             cl_perror|254-247-216-235
9396|code|MOVS            R0, #1|1-32
9398|code|BLX             exit|254-247-178-236
9402|code|MOVS            R0, #1|1-32
9404|code|BLX             sleep|254-247-116-236
9408|code|B               loc_23D2|135-231
9410|data|ALIGN 4|0-191
9412|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2314|8-28-1-0
9416|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
9420|data|DCD dword_14008 - 0x232C|220-28-1-0
9424|data|DCD aEchoServerDRep - 0x2356; "Echo server: %d reps pid %d."|202-16-0-0
9428|data|DCD aEchotestDataMi - 0x236C; "echotest: data mismatch. iteration %d"|144-17-0-0
9432|data|DCD aEchotestLength - 0x2372; "echotest: length mismatch [%lu,%lu] ite"...|94-17-0-0
9436|data|DCD aEchotestServer - 0x2378; "echotest server: recv failed %d rc iter"...|36-17-0-0
9440|data|DCD aRecv - 0x237E; "recv"|126-10-0-0
9444|data|DCD aEchotestSendFa - 0x2384; "echotest: send failed %d rc iter %d"|188-16-0-0
9448|data|DCD aEchoserverDErr - 0x2450; "echoserver: %d errors"|212-16-0-0
9452|data|DCD aOutOfMemory - 0x248A; "Out of memory"|134-15-0-0
9456|data|DCD aEchotestServer_0 - 0x24A4; "echotest server: waitin failed %d rc it"...|192-15-0-0
9460|data|DCD aWaitin - 0x24B2; "waitin"|162-11-0-0
9464|code|PUSH.W          {R4-R10,LR}|45-233-240-71
9468|code|MOV             R9, R0|129-70
9470|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x250A)|52-76
9472|code|MOV             R7, R3|31-70
9474|code|LDR             R0, =(__stack_chk_guard_ptr - 0x13F1C)|52-72
9476|code|SUB             SP, SP, #0x10|132-176
9478|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
9480|code|LDR             R5, =(dword_14008 - 0x2514)|51-77
9482|code|MOV             R8, R1|136-70
9484|code|MOV             R6, R2|22-70
9486|code|LDR             R4, [R4,R0]; __stack_chk_guard|36-88
9488|code|ADD             R5, PC; dword_14008|125-68
9490|code|LDR             R5, [R5]|45-104
9492|code|LDR             R3, [R4]|35-104
9494|code|MOV             R0, R5; size|40-70
9496|code|STR             R3, [SP,#0x30+var_24]|3-147
9498|code|BLX             malloc|254-247-40-236
9502|code|CMP             R0, #0|0-40
9504|code|BEQ             loc_25C0|78-208
9506|code|MOV             R2, R7|58-70
9508|code|ADD             R3, SP, #0x30+var_28|2-171
9510|code|MOV             R1, R5|41-70
9512|code|MOV             R10, R0|130-70
9514|code|BL              sub_11DC|254-247-87-254
9518|code|LDR.W           R2, [R9]; n|217-248-0-32
9522|code|LDR             R3, [SP,#0x30+var_28]|2-155
9524|code|CMP             R2, R3|154-66
9526|code|BNE             loc_258A|40-209
9528|code|LDR.W           R0, [R8]; s1|216-248-0-0
9532|code|MOV             R1, R10; s2|81-70
9534|code|BLX             strncmp|254-247-90-236
9538|code|CBNZ            R0, loc_255A|80-185
9540|code|MOV             R0, R10; ptr|80-70
9542|code|BLX             free|254-247-208-235
9546|code|MOVS            R0, #1|1-32
9548|code|LDR             R2, [SP,#0x30+var_24]|3-154
9550|code|LDR             R3, [R4]|35-104
9552|code|CMP             R2, R3|154-66
9554|code|BNE             loc_25BC|51-209
9556|code|ADD             SP, SP, #0x10|4-176
9558|code|POP.W           {R4-R10,PC}|189-232-240-135
9562|code|LDR             R1, =(aCheckmsgSDataM - 0x2566); "checkmsg[%s]: data mismatch. input iter"...|32-73
9564|code|MOV             R3, R7|59-70
9566|code|MOVS            R0, #3|3-32
9568|code|MOV             R2, R6|50-70
9570|code|ADD             R1, PC; "checkmsg[%s]: data mismatch. input iter"...|121-68
9572|code|BLX             cl_log|254-247-78-236
9576|code|LDR             R1, =(aCheckmsgSExpec - 0x2572); "checkmsg[%s]: expecting [%s]"|29-73
9578|code|MOV             R3, R10|83-70
9580|code|MOVS            R0, #3|3-32
9582|code|ADD             R1, PC; "checkmsg[%s]: expecting [%s]"|121-68
9584|code|MOV             R2, R6|50-70
9586|code|BLX             cl_log|254-247-72-236
9590|code|LDR             R1, =(aCheckmsgSGotSI - 0x2584); "checkmsg[%s]: got [%s] instead"|27-73
9592|code|MOVS            R0, #3|3-32
9594|code|MOV             R2, R6|50-70
9596|code|LDR.W           R3, [R8]|216-248-0-48
9600|code|ADD             R1, PC; "checkmsg[%s]: got [%s] instead"|121-68
9602|code|BLX             cl_log|254-247-64-236
9606|code|MOVS            R0, #0|0-32
9608|code|B               loc_254C|224-231
9610|code|LDR             R1, =(aCheckmsgSLengt - 0x2598); "checkmsg[%s]: length mismatch [expected"...|23-73
9612|code|MOVS            R0, #3|3-32
9614|code|STMEA.W         SP, {R2,R7}|141-232-132-0
9618|code|MOV             R2, R6|50-70
9620|code|ADD             R1, PC; "checkmsg[%s]: length mismatch [expected"...|121-68
9622|code|BLX             cl_log|254-247-54-236
9626|code|LDR             R1, =(aCheckmsgSExpec - 0x25A4); "checkmsg[%s]: expecting [%s]"|20-73
9628|code|MOV             R3, R10|83-70
9630|code|MOVS            R0, #3|3-32
9632|code|ADD             R1, PC; "checkmsg[%s]: expecting [%s]"|121-68
9634|code|MOV             R2, R6|50-70
9636|code|BLX             cl_log|254-247-46-236
9640|code|LDR             R1, =(aCheckmsgSGotSI - 0x25B6); "checkmsg[%s]: got [%s] instead"|17-73
9642|code|MOVS            R0, #3|3-32
9644|code|MOV             R2, R6|50-70
9646|code|LDR.W           R3, [R8]|216-248-0-48
9650|code|ADD             R1, PC; "checkmsg[%s]: got [%s] instead"|121-68
9652|code|BLX             cl_log|254-247-38-236
9656|code|MOVS            R0, #0|0-32
9658|code|B               loc_254C|199-231
9660|code|BLX             __stack_chk_fail|254-247-220-235
9664|code|LDR             R1, =(aOutOfMemory - 0x25C8); "Out of memory"|12-73
9666|code|MOVS            R0, #3|3-32
9668|code|ADD             R1, PC; "Out of memory"|121-68
9670|code|BLX             cl_log|254-247-30-236
9674|code|MOVS            R0, #1; status|1-32
9676|code|BLX             exit|254-247-38-236
9680|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x250A|18-26-1-0
9684|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
9688|data|DCD dword_14008 - 0x2514|244-26-1-0
9692|data|DCD aCheckmsgSDataM - 0x2566; "checkmsg[%s]: data mismatch. input iter"...|90-16-0-0
9696|data|DCD aCheckmsgSExpec - 0x2572; "checkmsg[%s]: expecting [%s]"|14-16-0-0
9700|data|DCD aCheckmsgSGotSI - 0x2584; "checkmsg[%s]: got [%s] instead"|28-16-0-0
9704|data|DCD aCheckmsgSLengt - 0x2598; "checkmsg[%s]: length mismatch [expected"...|164-15-0-0
9708|data|DCD aCheckmsgSExpec - 0x25A4; "checkmsg[%s]: expecting [%s]"|220-15-0-0
9712|data|DCD aCheckmsgSGotSI - 0x25B6; "checkmsg[%s]: got [%s] instead"|234-15-0-0
9716|data|DCD aOutOfMemory - 0x25C8; "Out of memory"|72-14-0-0
9720|code|PUSH.W          {R4-R11,LR}|45-233-240-79
9724|code|MOV             R5, R2|21-70
9726|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x260C)|76-79
9728|code|SUB             SP, SP, #0x24|137-176
9730|code|LDR.W           R9, =(__stack_chk_guard_ptr - 0x13F1C)|223-248-48-145
9734|code|MOV             R6, R3|30-70
9736|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
9738|code|LDR.W           R10, =(aCheckinputSRec - 0x2620); "checkinput[%s]: recv failed: rc %d  rdc"...|223-248-44-161
9742|code|MOV.W           LR, #0|79-240-0-14
9746|code|MOV             R11, R0|131-70
9748|code|LDR.W           R2, [R7,R9]; __stack_chk_guard|87-248-9-32
9752|code|MOV             R3, R7|59-70
9754|code|LDR             R3, =(aCheckinput10xL - 0x2626); "checkinput1[0x%lx %s]: EOF in iter %d"|72-75
9756|code|ADD             R10, PC; "checkinput[%s]: recv failed: rc %d  rdc"...|250-68
9758|code|MOV             R4, LR|116-70
9760|code|MOV             R8, R1|136-70
9762|code|ADD             R3, PC; "checkinput1[0x%lx %s]: EOF in iter %d"|123-68
9764|code|STR             R3, [SP,#0x48+var_38]|4-147
9766|code|LDR             R3, [R2]|19-104
9768|code|STR             R2, [SP,#0x48+var_3C]|3-146
9770|code|LDR             R2, =(aCheckinput30xL - 0x2634); "checkinput3[0x%lx %s]: EOF in iter %d"|69-74
9772|code|STR             R3, [SP,#0x48+var_2C]|7-147
9774|code|LDR             R3, =(aRecv - 0x263A); "recv"|69-75
9776|code|ADD             R2, PC; "checkinput3[0x%lx %s]: EOF in iter %d"|122-68
9778|code|STR.W           LR, [SP,#0x48+var_30]|205-248-24-224
9782|code|ADD             R3, PC; "recv"|123-68
9784|code|STR             R2, [SP,#0x48+var_34]|5-146
9786|code|STR             R3, [SP,#0x48+var_40]|2-147
9788|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
9792|code|MOV             R0, R11|88-70
9794|code|LDR             R3, [R3,#0x20]|27-106
9796|code|BLX             R3|152-71
9798|code|MOVS            R3, R0|3-28
9800|code|IT NE|24-191
9802|code|MOVNE           R3, #1|1-35
9804|code|CMP             R4, #9|9-44
9806|code|IT GT|200-191
9808|code|MOVGT           R3, #0|0-35
9810|code|CMP             R3, #0|0-43
9812|code|BEQ             loc_26FA|81-208
9814|code|LDR             R3, [R5]|43-104
9816|code|CMP             R3, R6|179-66
9818|code|BGE             loc_26FA|78-218
9820|code|LDR.W           R0, [R11]|219-248-0-0
9824|code|CMP             R0, #3|3-40
9826|code|BEQ             loc_2716|88-208
9828|code|LDR             R0, [SP,#0x48+var_30]|6-152
9830|code|CBZ             R0, loc_2670|24-177
9832|code|LDR             R3, [R0,#0xC]|195-104
9834|code|BLX             R3|152-71
9836|code|MOVS            R3, #0|0-35
9838|code|STR             R3, [SP,#0x48+var_30]|6-147
9840|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
9844|code|MOV             R0, R11|88-70
9846|code|ADD             R1, SP, #0x48+var_30|6-169
9848|code|LDR             R3, [R3,#0x14]|91-105
9850|code|BLX             R3|152-71
9852|code|MOV             R9, R0|129-70
9854|code|CBZ             R0, loc_26AE|176-177
9856|code|LDR.W           R0, [R11]|219-248-0-0
9860|code|CMP             R0, #3|3-40
9862|code|BEQ             loc_26E4|45-208
9864|code|BLX             __errno_location|254-247-206-235
9868|code|LDR             R7, [R5]|47-104
9870|code|MOV             R3, R9|75-70
9872|code|MOV             R1, R10|81-70
9874|code|MOV             R2, R8|66-70
9876|code|ADDS            R4, #1|1-52
9878|code|STR             R7, [SP,#0x48+var_48]|0-151
9880|code|LDR             R0, [R0]|0-104
9882|code|STR             R0, [SP,#0x48+var_44]|1-144
9884|code|MOVS            R0, #3|3-32
9886|code|BLX             cl_log|254-247-178-235
9890|code|LDR             R0, [SP,#0x48+var_40]|2-152
9892|code|BLX             cl_perror|254-247-222-234
9896|code|MOVS            R3, #0|0-35
9898|code|STR             R3, [SP,#0x48+var_30]|6-147
9900|code|B               loc_263C|198-231
9902|code|LDR             R3, [R5]|43-104
9904|code|MOV             R2, R8|66-70
9906|code|LDR             R0, [SP,#0x48+var_30]|6-152
9908|code|ADDS            R3, #1|1-51
9910|code|STR             R3, [R5]|43-96
9912|code|ADD.W           R1, R0, #8|0-241-8-1
9916|code|BL              sub_24F8|255-247-28-255
9920|code|CBZ             R0, loc_270C|32-179
9922|code|LDR             R3, [R5]|43-104
9924|code|CMP             R6, R3|158-66
9926|code|BLE             loc_263C|185-221
9928|code|LDR.W           R0, [R11]|219-248-0-0
9932|code|CMP             R0, #3|3-40
9934|code|BNE             loc_263C|181-209
9936|code|STR             R3, [SP,#0x48+var_48]|0-147
9938|code|MOV             R2, R11|90-70
9940|code|LDR             R1, [SP,#0x48+var_34]|5-153
9942|code|MOV             R3, R8|67-70
9944|code|BLX             cl_log|254-247-148-235
9948|code|MOV             R0, R11|88-70
9950|code|BL              sub_1324|254-247-33-254
9954|code|B               loc_263C|171-231
9956|code|LDR             R5, [R5]|45-104
9958|code|MOV             R3, R8|67-70
9960|code|LDR             R1, =(aCheckinput20xL - 0x26F0); "checkinput2[0x%lx %s]: EOF in iter %d"|23-73
9962|code|MOV             R2, R11|90-70
9964|code|ADD             R1, PC; "checkinput2[0x%lx %s]: EOF in iter %d"|121-68
9966|code|STR             R5, [SP,#0x48+var_48]|0-149
9968|code|BLX             cl_log|254-247-136-235
9972|code|MOV             R0, R11|88-70
9974|code|BL              sub_1324|254-247-21-254
9978|code|LDR             R3, [SP,#0x48+var_3C]|3-155
9980|code|MOV             R0, R4|32-70
9982|code|LDR             R2, [SP,#0x48+var_2C]|7-154
9984|code|LDR             R3, [R3]|27-104
9986|code|CMP             R2, R3|154-66
9988|code|BNE             loc_272A|17-209
9990|code|ADD             SP, SP, #0x24 ; '$'|9-176
9992|code|POP.W           {R4-R11,PC}|189-232-240-143
9996|code|MOV             R0, R11|88-70
9998|code|ADDS            R4, #1|1-52
10000|code|BLX             dump_ipc_info|254-247-14-235
10004|code|B               loc_26C2|213-231
10006|code|STR             R3, [SP,#0x48+var_48]|0-147
10008|code|MOV             R2, R11|90-70
10010|code|LDR             R1, [SP,#0x48+var_38]|4-153
10012|code|MOV             R3, R8|67-70
10014|code|BLX             cl_log|254-247-114-235
10018|code|MOV             R0, R11|88-70
10020|code|BL              sub_1324|254-247-254-253
10024|code|B               loc_2664|156-231
10026|code|BLX             __stack_chk_fail|254-247-38-235
10030|data|ALIGN 0x10|0-191
10032|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x260C|16-25-1-0
10036|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
10040|data|DCD aCheckinputSRec - 0x2620; "checkinput[%s]: recv failed: rc %d  rdc"...|32-16-0-0
10044|data|DCD aCheckinput10xL - 0x2626; "checkinput1[0x%lx %s]: EOF in iter %d"|202-15-0-0
10048|data|DCD aCheckinput30xL - 0x2634; "checkinput3[0x%lx %s]: EOF in iter %d"|68-16-0-0
10052|data|DCD aRecv - 0x263A; "recv"|194-7-0-0
10056|data|DCD aCheckinput20xL - 0x26F0; "checkinput2[0x%lx %s]: EOF in iter %d"|40-15-0-0
10060|code|PUSH            {R4-R7,LR}|240-181
10062|code|ADDS            R2, R1, #4|10-29
10064|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x275C)|26-77
10066|code|MOV             R4, R1|12-70
10068|code|LDR             R6, =(__stack_chk_guard_ptr - 0x13F1C)|26-78
10070|code|SUB             SP, SP, #0xC|131-176
10072|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
10074|code|LDR             R3, [R1,#0x10]|11-105
10076|code|LDR             R1, =(aSRcvMsg - 0x2766); "s_rcv_msg"|25-73
10078|code|MOV             R7, R0|7-70
10080|code|LDR             R5, [R5,R6]; __stack_chk_guard|173-89
10082|code|ADD             R1, PC; "s_rcv_msg"|121-68
10084|code|LDR             R6, [R5]|46-104
10086|code|STR             R6, [SP,#0x20+var_1C]|1-150
10088|code|BL              sub_25F8|255-247-70-255
10092|code|LDR             R2, [R7]|58-104
10094|code|LDR             R3, [R4,#8]|163-104
10096|code|CMP             R2, #3|3-42
10098|code|LDR             R2, [R4,#4]|98-104
10100|code|ADD             R0, R3|24-68
10102|code|LDR             R3, [R4,#0x10]|35-105
10104|code|STR             R0, [R4,#8]|160-96
10106|code|BEQ             loc_278A|6-208
10108|code|CMP.W           R0, #0x3E8|176-245-122-127
10112|code|IT LE|216-191
10114|code|CMPLE           R2, R3|154-66
10116|code|IT LT|184-191
10118|code|MOVLT           R0, #1|1-32
10120|code|BLT             loc_279A|7-219
10122|code|CMP             R2, R3|154-66
10124|code|BLT             loc_27A6|11-219
10126|code|LDR             R3, =(dword_14010 - 0x2794)|14-75
10128|code|ADD             R3, PC; dword_14010|123-68
10130|code|LDR             R0, [R3]|24-104
10132|code|BLX             g_main_loop_quit|254-247-114-234
10136|code|MOVS            R0, #0|0-32
10138|code|LDR             R2, [SP,#0x20+var_1C]|1-154
10140|code|LDR             R3, [R5]|43-104
10142|code|CMP             R2, R3|154-66
10144|code|BNE             loc_27B6|9-209
10146|code|ADD             SP, SP, #0xC|3-176
10148|code|POP             {R4-R7,PC}|240-189
10150|code|LDR             R1, =(unk_36A0 - 0x27B2)|9-73
10152|code|ADDS            R3, R0, #1|67-28
10154|code|MOVS            R0, #6|6-32
10156|code|STR             R3, [R4,#8]|163-96
10158|code|ADD             R1, PC; unk_36A0|121-68
10160|code|BLX             cl_log|254-247-40-235
10164|code|B               loc_278E|235-231
10166|code|BLX             __stack_chk_fail|254-247-224-234
10170|data|ALIGN 4|0-191
10172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x275C|192-23-1-0
10176|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
10180|data|DCD aSRcvMsg - 0x2766; "s_rcv_msg"|74-15-0-0
10184|data|DCD dword_14010 - 0x2794|124-24-1-0
10188|data|DCD unk_36A0 - 0x27B2|238-14-0-0
10192|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x27DC)|137-75
10194|code|MOVS            R2, #0|0-34
10196|code|PUSH.W          {R4-R11,LR}|45-233-240-79
10200|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
10202|code|LDR             R5, =(__stack_chk_guard_ptr - 0x13F1C)|136-77
10204|code|SUB             SP, SP, #0x34 ; '4'|141-176
10206|code|MOV             R4, R1|12-70
10208|code|LDR             R1, =(aAsynEchoserver - 0x27EA); "asyn_echoserver"|135-73
10210|code|ADD             R6, SP, #0x30 ; '0'|12-174
10212|code|MOV             R8, R2|144-70
10214|code|ADD             R1, PC; "asyn_echoserver"|121-68
10216|code|STR             R1, [SP,#0x10]|4-145
10218|code|LDR             R3, [R3,R5]; __stack_chk_guard|91-89
10220|code|MOV             R5, R2|21-70
10222|code|STR.W           R2, [R6,#-8]!|70-248-8-45
10226|code|MOV             R11, R0|131-70
10228|code|STR             R2, [SP,#0x24]|9-146
10230|code|STR             R3, [SP,#0x1C]|7-147
10232|code|LDR             R3, [R3]|27-104
10234|code|LDR             R2, =(aChannelSstatus - 0x2804); "channel sstatus in echo server is %d"|130-74
10236|code|LDR.W           R10, =(dword_14008 - 0x2812)|223-248-8-162
10240|code|ADD             R2, PC; "channel sstatus in echo server is %d"|122-68
10242|code|STR             R3, [SP,#0x2C]|11-147
10244|code|STR             R2, [SP,#0x14]|5-146
10246|code|BLX             getpid|254-247-220-234
10250|code|LDR             R1, =(aAsynEchoServer - 0x2814); "Asyn echo server: %d reps pid %d."|128-73
10252|code|MOV             R2, R4|34-70
10254|code|ADD             R10, PC; dword_14008|250-68
10256|code|ADD             R1, PC; "Asyn echo server: %d reps pid %d."|121-68
10258|code|MOV             R3, R0|3-70
10260|code|MOVS            R0, #6|6-32
10262|code|BLX             cl_log|254-247-246-234
10266|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10270|code|LDR             R1, =(loc_1818+1 - 0x2828)|124-73
10272|code|MOV             R2, R6|50-70
10274|code|MOV             R0, R11|88-70
10276|code|ADD             R1, PC; loc_1818|121-68
10278|code|LDR             R3, [R3,#0x3C]|219-107
10280|code|BLX             R3|152-71
10282|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10286|code|LDR             R1, =(loc_17CC+1 - 0x283A)|121-73
10288|code|MOV             R2, R6|50-70
10290|code|MOV             R0, R11|88-70
10292|code|LDR             R3, [R3,#0x40]|27-108
10294|code|ADD             R1, PC; loc_17CC|121-68
10296|code|BLX             R3|152-71
10298|code|MOVS            R2, #2|2-34
10300|code|STR.W           R2, [R11,#0x34]|203-248-52-32
10304|code|LDR             R2, [SP,#0x24]|9-154
10306|code|LDR             R3, =(aAsynEchoserver_0 - 0x2848); "asyn_echoserver: send failed %d rc iter"...|117-75
10308|code|ADD             R3, PC; "asyn_echoserver: send failed %d rc iter"...|123-68
10310|code|STR             R3, [SP,#0x18]|6-147
10312|code|MOVS            R3, #0x14|20-35
10314|code|STR.W           R3, [R11,#0x30]|203-248-48-48
10318|code|CMP             R4, R2|148-66
10320|code|BLE             loc_291E|101-221
10322|code|MOV.W           R9, #0|79-240-0-9
10326|code|ADD             R3, SP, #0x24 ; '$'|9-171
10328|code|STR             R3, [SP,#0xC]|3-147
10330|code|CMP.W           R9, #9|185-241-9-15
10334|code|IT LE|216-191
10336|code|CMPLE           R5, R4|165-66
10338|code|BGE             loc_28DC|59-218
10340|code|LDR.W           R3, [R11]|219-248-0-48
10344|code|CMP             R3, #3|3-43
10346|code|BEQ             loc_28DC|55-208
10348|code|LDR             R1, [SP,#0x28]|10-153
10350|code|CMP             R1, #0|0-41
10352|code|BNE             loc_295A|115-209
10354|code|ADDS            R6, R5, #1|110-28
10356|code|CMP             R4, R6|180-66
10358|code|BLT.W           loc_2996|192-242-142-128
10362|code|LDR.W           R7, [R11,#0x10]|219-248-16-112
10366|code|MOV             R3, R1|11-70
10368|code|LDR.W           R2, [R10]|218-248-0-32
10372|code|MOV             R0, R11|88-70
10374|code|LDR             R7, [R7,#0x44]|127-108
10376|code|BLX             R7|184-71
10378|code|LDR.W           R1, [R10]|218-248-0-16
10382|code|MOV             R2, R6|50-70
10384|code|MOV             R7, R0|7-70
10386|code|LDR             R0, [R0,#8]|128-104
10388|code|MOV             R3, R7|59-70
10390|code|BL              sub_11DC|254-247-161-252
10394|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10398|code|MOV             R1, R7|57-70
10400|code|MOV             R0, R11|88-70
10402|code|LDR             R3, [R3,#0x10]|27-105
10404|code|BLX             R3|152-71
10406|code|MOV             R7, R0|7-70
10408|code|CMP             R0, #0|0-40
10410|code|BEQ             loc_2946|76-208
10412|code|MOVS            R0, #6|6-32
10414|code|LDR             R1, [SP,#0x14]|5-153
10416|code|LDR.W           R2, [R11]|219-248-0-32
10420|code|BLX             cl_log|254-247-166-234
10424|code|LDR.W           R3, [R11]|219-248-0-48
10428|code|CMP             R3, #1|1-43
10430|code|BEQ             loc_2948|67-208
10432|code|MOV             R2, R7|58-70
10434|code|MOVS            R0, #3|3-32
10436|code|LDR             R1, [SP,#0x18]|6-153
10438|code|MOV             R3, R6|51-70
10440|code|BLX             cl_log|254-247-156-234
10444|code|MOV             R5, R6|53-70
10446|code|CMP.W           R9, #9|185-241-9-15
10450|code|IT LE|216-191
10452|code|CMPLE           R5, R4|165-66
10454|code|ADD.W           R8, R8, #1|8-241-1-8
10458|code|BLT             loc_2864|195-219
10460|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10464|code|MOV             R0, R11|88-70
10466|code|MOV             R6, R5|46-70
10468|code|LDR             R3, [R3,#0x1C]|219-105
10470|code|BLX             R3|152-71
10472|code|LDR             R1, =(aAsynEchoserver - 0x28F2); "asyn_echoserver"|76-73
10474|code|MOV             R0, R11|88-70
10476|code|LDR             R2, [SP,#0xC]|3-154
10478|code|ADD             R1, PC; "asyn_echoserver"|121-68
10480|code|MOV             R3, R4|35-70
10482|code|BL              sub_25F8|255-247-129-254
10486|code|CMP             R5, R4|165-66
10488|code|ADD             R8, R0|128-68
10490|code|BGE             loc_29B0|89-218
10492|code|LDR.W           R0, [R11]|219-248-0-0
10496|code|LDR             R2, [SP,#0x24]|9-154
10498|code|CMP             R0, #3|3-40
10500|code|BNE             loc_284E|163-209
10502|code|CMP             R4, R2|148-66
10504|code|BLE             loc_284E|161-221
10506|code|LDR             R1, =(aAsynEchoserver_1 - 0x2916); "asyn_echoserver: EOF in iter %d (wrcoun"...|69-73
10508|code|MOV             R3, R5|43-70
10510|code|ADD.W           R8, R8, #1|8-241-1-8
10514|code|ADD             R1, PC; "asyn_echoserver: EOF in iter %d (wrcoun"...|121-68
10516|code|BLX             cl_log|254-247-118-234
10520|code|MOV             R0, R11|88-70
10522|code|BL              sub_1324|254-247-3-253
10526|code|LDR             R1, =(aAsynEchoserver_2 - 0x2928); "asyn_echoserver: %d errors"|65-73
10528|code|MOV             R2, R8|66-70
10530|code|MOVS            R0, #6|6-32
10532|code|ADD             R1, PC; "asyn_echoserver: %d errors"|121-68
10534|code|BLX             cl_log|254-247-110-234
10538|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10542|code|MOV             R0, R11|88-70
10544|code|LDR             R3, [R3]|27-104
10546|code|BLX             R3|152-71
10548|code|LDR             R3, [SP,#0x1C]|7-155
10550|code|LDR             R2, [SP,#0x2C]|11-154
10552|code|MOV             R0, R8|64-70
10554|code|LDR             R3, [R3]|27-104
10556|code|CMP             R2, R3|154-66
10558|code|BNE             loc_29CE|70-209
10560|code|ADD             SP, SP, #0x34 ; '4'|13-176
10562|code|POP.W           {R4-R11,PC}|189-232-240-143
10566|code|MOV             R5, R6|53-70
10568|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10572|code|MOV             R0, R11|88-70
10574|code|ADD.W           R9, R9, #1|9-241-1-9
10578|code|LDR             R3, [R3,#0x24]|91-106
10580|code|BLX             R3|152-71
10582|code|CBNZ            R0, loc_295A|0-185
10584|code|MOV             R9, R0|129-70
10586|code|MOV             R0, R11|88-70
10588|code|LDR             R1, [SP,#0x10]|4-153
10590|code|LDR             R2, [SP,#0xC]|3-154
10592|code|MOV             R3, R4|35-70
10594|code|BL              sub_25F8|255-247-73-254
10598|code|CMP             R5, R4|165-66
10600|code|ADD             R8, R0|128-68
10602|code|BGE.W           loc_285A|191-246-118-175
10606|code|LDR.W           R3, [R11]|219-248-0-48
10610|code|CMP             R3, #3|3-43
10612|code|BNE.W           loc_285A|127-244-113-175
10616|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10620|code|MOV             R0, R11|88-70
10622|code|ADD.W           R8, R8, #1|8-241-1-8
10626|code|LDR             R3, [R3,#0x1C]|219-105
10628|code|BLX             R3|152-71
10630|code|MOV             R0, R11|88-70
10632|code|LDR             R1, [SP,#0x10]|4-153
10634|code|MOV             R3, R4|35-70
10636|code|LDR             R2, [SP,#0xC]|3-154
10638|code|BL              sub_25F8|255-247-51-254
10642|code|ADD             R8, R0|128-68
10644|code|B               loc_28FC|178-231
10646|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10650|code|MOV             R0, R11|88-70
10652|code|LDR             R3, [R3,#0x1C]|219-105
10654|code|BLX             R3|152-71
10656|code|LDR             R1, =(aAsynEchoserver - 0x29AA); "asyn_echoserver"|33-73
10658|code|MOV             R0, R11|88-70
10660|code|LDR             R2, [SP,#0xC]|3-154
10662|code|ADD             R1, PC; "asyn_echoserver"|121-68
10664|code|MOV             R3, R4|35-70
10666|code|BL              sub_25F8|255-247-37-254
10670|code|ADD             R8, R0|128-68
10672|code|LDR             R2, [SP,#0x24]|9-154
10674|code|CMP             R4, R2|148-66
10676|code|BGT             loc_29BA|1-220
10678|code|MOV             R5, R6|53-70
10680|code|B               loc_284E|73-231
10682|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
10686|code|MOV             R0, R11|88-70
10688|code|LDR             R3, [R3,#0x18]|155-105
10690|code|BLX             R3|152-71
10692|code|CMP             R0, #3|3-40
10694|code|BEQ             loc_29BA|248-208
10696|code|CBNZ            R0, loc_29D2|24-185
10698|code|MOV             R5, R6|53-70
10700|code|B               loc_28FC|150-231
10702|code|BLX             __stack_chk_fail|254-247-212-233
10706|code|MOV             R5, R0|5-70
10708|code|BLX             __errno_location|254-247-40-234
10712|code|LDR             R1, =(aAsynEchoserver_3 - 0x29E2); "asyn_echoserver: waitin() failed %d rc "...|20-73
10714|code|MOV             R2, R5|42-70
10716|code|LDR             R3, [SP,#0x24]|9-155
10718|code|ADD             R1, PC; "asyn_echoserver: waitin() failed %d rc "...|121-68
10720|code|LDR             R4, [R0]|4-104
10722|code|MOVS            R0, #3|3-32
10724|code|STR             R4, [SP]|0-148
10726|code|BLX             cl_log|254-247-14-234
10730|code|LDR             R0, =(aWaitin - 0x29F0); "waitin"|17-72
10732|code|ADD             R0, PC; "waitin"|120-68
10734|code|BLX             cl_perror|254-247-58-233
10738|code|MOVS            R0, #1|1-32
10740|code|BLX             exit|254-247-18-234
10744|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x27DC|64-23-1-0
10748|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
10752|data|DCD aAsynEchoserver - 0x27EA; "asyn_echoserver"|74-15-0-0
10756|data|DCD aChannelSstatus - 0x2804; "channel sstatus in echo server is %d"|220-14-0-0
10760|data|DCD dword_14008 - 0x2812|246-23-1-0
10764|data|DCD aAsynEchoServer - 0x2814; "Asyn echo server: %d reps pid %d."|168-14-0-0
10768|data|DCD loc_1818+1 - 0x2828|241-239-255-255
10772|data|DCD loc_17CC+1 - 0x283A|147-239-255-255
10776|data|DCD aAsynEchoserver_0 - 0x2848; "asyn_echoserver: send failed %d rc iter"...|192-14-0-0
10780|data|DCD aAsynEchoserver - 0x28F2; "asyn_echoserver"|66-14-0-0
10784|data|DCD aAsynEchoserver_1 - 0x2916; "asyn_echoserver: EOF in iter %d (wrcoun"...|106-14-0-0
10788|data|DCD aAsynEchoserver_2 - 0x2928; "asyn_echoserver: %d errors"|136-14-0-0
10792|data|DCD aAsynEchoserver - 0x29AA; "asyn_echoserver"|138-13-0-0
10796|data|DCD aAsynEchoserver_3 - 0x29E2; "asyn_echoserver: waitin() failed %d rc "...|98-13-0-0
10800|data|DCD aWaitin - 0x29F0; "waitin"|100-6-0-0
10804|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2A3C)|70-75
10806|code|LDR             R2, =(__stack_chk_guard_ptr - 0x13F1C)|71-74
10808|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
10810|code|PUSH.W          {R4-R10,LR}|45-233-240-71
10814|code|SUB             SP, SP, #0x10|132-176
10816|code|LDR.W           R10, [R3,R2]; __stack_chk_guard|83-248-2-160
10820|code|MOV             R4, R0|4-70
10822|code|LDR             R6, =(aSEchoMsg - 0x2A58); "s_echo_msg"|68-78
10824|code|MOV             R0, R4|32-70
10826|code|LDR.W           R9, =(aSEchoMsgSendFa - 0x2A5E); "s_echo_msg: send failed %d rc iter %d q"...|223-248-16-145
10830|code|MOV             R5, R1|13-70
10832|code|LDR.W           R3, [R10]|218-248-0-48
10836|code|ADD             R6, PC; "s_echo_msg"|126-68
10838|code|LDR.W           R8, =(aSend - 0x2A62); "send"|223-248-8-129
10842|code|ADD             R9, PC; "s_echo_msg: send failed %d rc iter %d q"...|249-68
10844|code|STR             R3, [SP,#0xC]|3-147
10846|code|ADD             R8, PC; "send"|248-68
10848|code|LDR             R3, [R4,#0x10]|35-105
10850|code|LDR             R3, [R3,#0x20]|27-106
10852|code|BLX             R3|152-71
10854|code|CMP             R0, #0|0-40
10856|code|BEQ             loc_2AC6|45-208
10858|code|LDR             R3, [R4]|35-104
10860|code|CMP             R3, #3|3-43
10862|code|BEQ             loc_2ADC|53-208
10864|code|LDR             R3, [R4,#0x10]|35-105
10866|code|MOV             R0, R4|32-70
10868|code|ADD             R1, SP, #8|2-169
10870|code|LDR             R3, [R3,#0x14]|91-105
10872|code|BLX             R3|152-71
10874|code|MOV             R7, R0|7-70
10876|code|CMP             R0, #0|0-40
10878|code|BNE             loc_2B24|81-209
10880|code|LDR             R3, [R5,#4]|107-104
10882|code|MOV             R2, R6|50-70
10884|code|LDR             R0, [SP,#8]|2-152
10886|code|ADDS            R3, #1|1-51
10888|code|STR             R3, [R5,#4]|107-96
10890|code|ADD.W           R1, R0, #8|0-241-8-1
10894|code|BL              sub_24F8|255-247-51-253
10898|code|CBNZ            R0, loc_2AA0|40-185
10900|code|LDR             R3, [R5,#8]|171-104
10902|code|ADDS            R3, #1|1-51
10904|code|STR             R3, [R5,#8]|171-96
10906|code|B               loc_2AA0|1-224
10908|code|CMP             R3, #1|1-43
10910|code|BNE             loc_2B00|47-209
10912|code|LDR             R3, [R4,#0x10]|35-105
10914|code|MOV             R0, R4|32-70
10916|code|LDR             R1, [SP,#8]|2-153
10918|code|LDR             R3, [R3,#0x10]|27-105
10920|code|BLX             R3|152-71
10922|code|LDR             R3, [R4]|35-104
10924|code|CMP             R0, #0|0-40
10926|code|BNE             loc_2A9C|245-209
10928|code|CMP             R3, #1|1-43
10930|code|BNE             loc_2B00|37-209
10932|code|LDR             R3, [R5]|43-104
10934|code|MOV             R0, R4|32-70
10936|code|ADDS            R3, #1|1-51
10938|code|STR             R3, [R5]|43-96
10940|code|LDR             R3, [R4,#0x10]|35-105
10942|code|LDR             R3, [R3,#0x20]|27-106
10944|code|BLX             R3|152-71
10946|code|CMP             R0, #0|0-40
10948|code|BNE             loc_2A6A|209-209
10950|code|LDR             R2, [R5,#4]|106-104
10952|code|LDR             R3, [R5,#0x10]|43-105
10954|code|CMP             R2, R3|154-66
10956|code|BGE             loc_2ADC|6-218
10958|code|LDR             R3, [R4]|35-104
10960|code|CMP             R3, #3|3-43
10962|code|BEQ             loc_2ADC|3-208
10964|code|LDR             R3, [R5,#8]|171-104
10966|code|CMP.W           R3, #0x3E8|179-245-122-127
10970|code|BLE             loc_2B20|33-221
10972|code|LDR             R3, [R4,#0x10]|35-105
10974|code|MOV             R0, R4|32-70
10976|code|LDR             R3, [R3,#0x1C]|219-105
10978|code|BLX             R3|152-71
10980|code|LDR             R3, =(dword_14010 - 0x2AEA)|31-75
10982|code|ADD             R3, PC; dword_14010|123-68
10984|code|LDR             R0, [R3]|24-104
10986|code|BLX             g_main_loop_quit|254-247-200-232
10990|code|MOVS            R0, #0|0-32
10992|code|LDR             R2, [SP,#0xC]|3-154
10994|code|LDR.W           R3, [R10]|218-248-0-48
10998|code|CMP             R2, R3|154-66
11000|code|BNE             loc_2B4C|40-209
11002|code|ADD             SP, SP, #0x10|4-176
11004|code|POP.W           {R4-R10,PC}|189-232-240-135
11008|code|LDR             R7, [R4,#0x24]|103-106
11010|code|MOV             R2, R0|2-70
11012|code|LDR             R3, [R5,#4]|107-104
11014|code|MOVS            R0, #3|3-32
11016|code|MOV             R1, R9|73-70
11018|code|LDR             R7, [R7]|63-104
11020|code|STR             R7, [SP]|0-151
11022|code|BLX             cl_log|254-247-122-233
11026|code|MOV             R0, R8|64-70
11028|code|BLX             cl_perror|254-247-166-232
11032|code|LDR             R3, [R5,#8]|171-104
11034|code|ADDS            R3, #1|1-51
11036|code|STR             R3, [R5,#8]|171-96
11038|code|B               loc_2AB4|201-231
11040|code|MOVS            R0, #1|1-32
11042|code|B               loc_2AF0|229-231
11044|code|BLX             __errno_location|254-247-128-233
11048|code|LDR             R3, [R5,#4]|107-104
11050|code|LDR             R1, =(aSEchoMsgRecvFa - 0x2B34); "s_echo_msg: recv failed %d rc iter %d e"...|15-73
11052|code|MOV             R2, R7|58-70
11054|code|ADDS            R3, #1|1-51
11056|code|ADD             R1, PC; "s_echo_msg: recv failed %d rc iter %d e"...|121-68
11058|code|LDR             R6, [R0]|6-104
11060|code|MOVS            R0, #3|3-32
11062|code|STR             R6, [SP]|0-150
11064|code|BLX             cl_log|254-247-100-233
11068|code|LDR             R0, =(aRecv - 0x2B42); "recv"|11-72
11070|code|ADD             R0, PC; "recv"|120-68
11072|code|BLX             cl_perror|254-247-144-232
11076|code|LDR             R3, [R5,#8]|171-104
11078|code|ADDS            R3, #1|1-51
11080|code|STR             R3, [R5,#8]|171-96
11082|code|B               loc_2AC6|188-231
11084|code|BLX             __stack_chk_fail|254-247-20-233
11088|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2A3C|224-20-1-0
11092|data|DCD __stack_chk_guard_ptr - 0x13F1C|200-0-0-0
11096|data|DCD aSEchoMsg - 0x2A58; "s_echo_msg"|164-13-0-0
11100|data|DCD aSEchoMsgSendFa - 0x2A5E; "s_echo_msg: send failed %d rc iter %d q"...|170-13-0-0
11104|data|DCD aSend - 0x2A62; "send"|174-3-0-0
11108|data|DCD dword_14010 - 0x2AEA|38-21-1-0
11112|data|DCD aSEchoMsgRecvFa - 0x2B34; "s_echo_msg: recv failed %d rc iter %d e"...|152-12-0-0
11116|data|DCD aRecv - 0x2B42; "recv"|186-2-0-0
11120|code|PUSH.W          {R3-R9,LR}|45-233-248-67
11124|code|MOV             R7, R0|7-70
11126|code|LDR             R6, =(off_13DC4 - 0x2B82)|12-78
11128|code|MOV             R8, R1|136-70
11130|code|LDR             R5, =(off_13DC0 - 0x2B88)|12-77
11132|code|MOV             R9, R2|145-70
11134|code|ADD             R6, PC; off_13DC4|126-68
11136|code|BLX             .init_proc|254-247-90-232
11140|code|ADD             R5, PC; off_13DC0|125-68
11142|code|SUBS            R6, R6, R5|118-27
11144|code|ASRS            R6, R6, #2|182-16
11146|code|BEQ             locret_2BA2|10-208
11148|code|SUBS            R5, #4|4-61
11150|code|MOVS            R4, #0|0-36
11152|code|ADDS            R4, #1|1-52
11154|code|LDR.W           R3, [R5,#4]!|85-248-4-63
11158|code|MOV             R0, R7|56-70
11160|code|MOV             R1, R8|65-70
11162|code|MOV             R2, R9|74-70
11164|code|BLX             R3|152-71
11166|code|CMP             R4, R6|180-66
11168|code|BNE             loc_2B90|246-209
11170|code|POP.W           {R3-R9,PC}|189-232-248-131
11174|data|ALIGN 4|0-191
11176|data|DCD off_13DC4 - 0x2B82|66-18-1-0
11180|data|DCD off_13DC0 - 0x2B88|56-18-1-0
11184|code|BX              LR|112-71
11186|data|ALIGN 4|0-191
11188|code|PUSH            {R3,LR}; _fini|8-64-45-233
11192|code|POP             {R3,PC}|8-128-189-232
14732|data|ALIGN 0x10|0-0-0-0
81344|data|DCD sub_11B0+1|177-17-0-0
81348|data|DCD sub_1170+1|113-17-0-0
81352|data|DCD 0|0-0-0-0
81356|data|Elf32_Dyn <1, <1>>; DT_NEEDED libplumb.so.2|1-0-0-0-1-0-0-0
81364|data|Elf32_Dyn <1, <0x174>>; DT_NEEDED libpils.so.2|1-0-0-0-116-1-0-0
81372|data|Elf32_Dyn <1, <0x181>>; DT_NEEDED libbz2.so.1.0|1-0-0-0-129-1-0-0
81380|data|Elf32_Dyn <1, <0x18F>>; DT_NEEDED libz.so.1|1-0-0-0-143-1-0-0
81388|data|Elf32_Dyn <1, <0x199>>; DT_NEEDED libxml2.so.2|1-0-0-0-153-1-0-0
81396|data|Elf32_Dyn <1, <0x1A6>>; DT_NEEDED libc.so.6|1-0-0-0-166-1-0-0
81404|data|Elf32_Dyn <1, <0x276>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-118-2-0-0
81412|data|Elf32_Dyn <1, <0x29C>>; DT_NEEDED libuuid.so.1|1-0-0-0-156-2-0-0
81420|data|Elf32_Dyn <1, <0x2A9>>; DT_NEEDED librt.so.1|1-0-0-0-169-2-0-0
81428|data|Elf32_Dyn <1, <0x2B4>>; DT_NEEDED libdl.so.2|1-0-0-0-180-2-0-0
81436|data|Elf32_Dyn <1, <0x2BF>>; DT_NEEDED libglib-2.0.so.0|1-0-0-0-191-2-0-0
81444|data|Elf32_Dyn <1, <0x31E>>; DT_NEEDED libltdl.so.7|1-0-0-0-30-3-0-0
81452|data|Elf32_Dyn <0xC, <0xC38>>; DT_INIT|12-0-0-0-56-12-0-0
81460|data|Elf32_Dyn <0xD, <0x2BB4>>; DT_FINI|13-0-0-0-180-43-0-0
81468|data|Elf32_Dyn <0x19, <0x13DC0>>; DT_INIT_ARRAY|25-0-0-0-192-61-1-0
81476|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
81484|data|Elf32_Dyn <0x1A, <0x13DC4>>; DT_FINI_ARRAY|26-0-0-0-196-61-1-0
81492|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
81500|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
81508|data|Elf32_Dyn <5, <0x614>>; DT_STRTAB|5-0-0-0-20-6-0-0
81516|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
81524|data|Elf32_Dyn <0xA, <0x39C>>; DT_STRSZ|10-0-0-0-156-3-0-0
81532|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
81540|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
81548|data|Elf32_Dyn <3, <0x13F1C>>; DT_PLTGOT|3-0-0-0-28-63-1-0
81556|data|Elf32_Dyn <2, <0x140>>; DT_PLTRELSZ|2-0-0-0-64-1-0-0
81564|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
81572|data|Elf32_Dyn <0x17, <0xAF8>>; DT_JMPREL|23-0-0-0-248-10-0-0
81580|data|Elf32_Dyn <0x11, <0xA70>>; DT_REL|17-0-0-0-112-10-0-0
81588|data|Elf32_Dyn <0x12, <0x88>>; DT_RELSZ|18-0-0-0-136-0-0-0
81596|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
81604|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
81612|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
81620|data|Elf32_Dyn <0x6FFFFFFE, <0xA30>>; DT_VERNEED|254-255-255-111-48-10-0-0
81628|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
81636|data|Elf32_Dyn <0x6FFFFFF0, <0x9B0>>; DT_VERSYM|240-255-255-111-176-9-0-0
81644|data|Elf32_Dyn <0x6FFFFFFA, <6>>; DT_RELCOUNT|250-255-255-111-6-0-0-0
81652|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
81660|data|ALIGN 0x10|0-0-0-0
81692|data|DCD stru_13DCC|204-61-1-0
81696|data|DCD 0|0-0-0-0
81700|data|DCD dword_0|0-0-0-0
81704|data|DCD __imp_abort|32-64-1-0
81708|data|DCD __imp_cl_perror|36-64-1-0
81712|data|DCD __imp___libc_start_main|40-64-1-0
81716|data|DCD __imp_g_main_loop_quit|48-64-1-0
81720|data|DCD __imp___gmon_start__|208-64-1-0
81724|data|DCD __imp_g_hash_table_insert|52-64-1-0
81728|data|DCD __imp_memset|56-64-1-0
81732|data|DCD __imp_cl_log_enable_stderr|60-64-1-0
81736|data|DCD __imp_wait|64-64-1-0
81740|data|DCD __imp_g_main_loop_new|68-64-1-0
81744|data|DCD __imp_ipc_channel_pair|72-64-1-0
81748|data|DCD __imp_cl_poll_ignore|76-64-1-0
81752|data|DCD __imp_free|80-64-1-0
81756|data|DCD __imp_g_hash_table_new|84-64-1-0
81760|data|DCD __imp_ipc_set_pollfunc|88-64-1-0
81764|data|DCD __imp_getopt|92-64-1-0
81768|data|DCD __imp_ipc_channel_constructor|96-64-1-0
81772|data|DCD __imp___xpg_basename|100-64-1-0
81776|data|DCD __imp_dump_ipc_info|104-64-1-0
81780|data|DCD __imp_strtol|108-64-1-0
81784|data|DCD __imp___snprintf_chk|116-64-1-0
81788|data|DCD __imp_g_source_remove|120-64-1-0
81792|data|DCD __imp_cl_log_set_entity|124-64-1-0
81796|data|DCD __imp_malloc|128-64-1-0
81800|data|DCD __imp___stack_chk_fail|132-64-1-0
81804|data|DCD __imp___fprintf_chk|136-64-1-0
81808|data|DCD __imp_poll|140-64-1-0
81812|data|DCD __imp_G_main_add_IPC_Channel|144-64-1-0
81816|data|DCD __imp_sleep|148-64-1-0
81820|data|DCD __imp_g_main_loop_unref|152-64-1-0
81824|data|DCD __imp_getpid|156-64-1-0
81828|data|DCD __imp_g_idle_add|160-64-1-0
81832|data|DCD __imp_fork|164-64-1-0
81836|data|DCD __imp_ipc_wait_conn_constructor|168-64-1-0
81840|data|DCD __imp_strncmp|180-64-1-0
81844|data|DCD __imp_cl_log|184-64-1-0
81848|data|DCD __imp_g_main_loop_run|188-64-1-0
81852|data|DCD __imp_exit|196-64-1-0
81856|data|DCD __imp___errno_location|200-64-1-0
81860|data|DCD __imp___cxa_finalize|204-64-1-0
81864|data|DCD __libc_csu_fini+1|177-43-0-0
81868|data|DCD g_str_hash|44-64-1-0
81872|data|DCD __imp___gmon_start__|208-64-1-0
81876|data|DCD _Jv_RegisterClasses|212-64-1-0
81880|data|DCD _ITM_deregisterTMCloneTable|216-64-1-0
81884|data|DCD _ITM_registerTMCloneTable|220-64-1-0
81888|data|DCD __libc_csu_init+1|113-43-0-0
81892|data|DCD __stack_chk_guard|112-64-1-0
81896|data|DCD __imp_poll|140-64-1-0
81900|data|DCD stderr|172-64-1-0
81904|data|DCD optarg|176-64-1-0
81908|data|DCD g_str_equal|192-64-1-0
81912|data|DCD __imp___cxa_finalize|204-64-1-0
81916|data|DCD main+1|65-14-0-0
81932|data|% 1; Alternative name is '__bss_start'|255
81933|data|ALIGN 0x10|255-255-255
81936|data|% 4|255-255-255-255
81940|data|% 4|255-255-255-255
