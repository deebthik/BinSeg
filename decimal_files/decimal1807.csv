address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|25-14-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x21A0; SHT file offset|160-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1448; File offset|72-20-0-0
60|data|DCD unk_1448; Virtual address|72-20-0-0
64|data|DCD 0x1448; Physical address|72-20-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1454; Size in file image|84-20-0-0
168|data|DCD 0x1454; Size in memory image|84-20-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E64; File offset|100-30-0-0
188|data|DCD off_11E64; Virtual address|100-30-1-0
192|data|DCD 0x11E64; Physical address|100-30-1-0
196|data|DCD 0x214; Size in file image|20-2-0-0
200|data|DCD 0x218; Size in memory image|24-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E70; File offset|112-30-0-0
220|data|DCD stru_11E70; Virtual address|112-30-1-0
224|data|DCD 0x11E70; Physical address|112-30-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E64; File offset|100-30-0-0
316|data|DCD off_11E64; Virtual address|100-30-1-0
320|data|DCD 0x11E64; Physical address|100-30-1-0
324|data|DCD 0x19C; Size in file image|156-1-0-0
328|data|DCD 0x19C; Size in memory image|156-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xC4, 0x8D, 0xC5, 0x97, 0xC4, 0xF1, 0x92, 0x40, 0x92; Desc|196-141-197-151-196-241-146-64-146-245-181-107-44-46-53-63-77-158-50-87
436|data|DCD 3|3-0-0-0
440|data|DCD 0x1D|29-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x1D, 0x21, 0x26|29-0-0-0-33-0-0-0-38-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_4B4 - byte_4B4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_4B4 - byte_4B4, dword_11E6C, 0, 3, 0, 0x14>|0-0-0-0-108-30-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_4B4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|142-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aItmDeregistert - byte_4B4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
612|data|Elf32_Sym <aConstructScsiP - byte_4B4, dword_0, 0, 0x12, 0, 0>; "construct_scsi_pt_obj"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aStackChkGuard - byte_4B4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|195-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
644|data|Elf32_Sym <aSgCmdsCloseDev - byte_4B4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|13-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aOptind - byte_4B4, dword_0, 0, 0x11, 0, 0>; "optind"|64-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
676|data|Elf32_Sym <aStackChkFail - byte_4B4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|71-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aStderr - byte_4B4, dword_0, 0, 0x11, 0, 0>; "stderr"|101-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
708|data|Elf32_Sym <aFwrite - byte_4B4, dword_0, 0, 0x12, 0, 0>; "fwrite"|120-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aLibcStartMain - byte_4B4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|157-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aVfprintfChk - byte_4B4, dword_0, 0, 0x12, 0, 0>; "__vfprintf_chk"|127-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aGmonStart - byte_4B4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
772|data|Elf32_Sym <aGetoptLong - byte_4B4, dword_0, 0, 0x12, 0, 0>; "getopt_long"|108-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aDoScsiPt - byte_4B4, dword_0, 0, 0x12, 0, 0>; "do_scsi_pt"|2-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aDestructScsiPt - byte_4B4, dword_0, 0, 0x12, 0, 0>; "destruct_scsi_pt_obj"|145-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aSgGetLlnum - byte_4B4, dword_0, 0, 0x12, 0, 0>; "sg_get_llnum"|245-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aSetScsiPtSense - byte_4B4, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_sense"|180-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aSafeStrerror - byte_4B4, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|166-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aJvRegisterclas - byte_4B4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
884|data|Elf32_Sym <aSgCmdsProcessR - byte_4B4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_process_resp"|224-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aSgGetCategoryS - byte_4B4, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|198-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aItmRegistertmc - byte_4B4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
932|data|Elf32_Sym <aSgCmdsOpenDevi - byte_4B4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|34-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aOptarg - byte_4B4, dword_0, 0, 0x11, 0, 0>; "optarg"|94-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
964|data|Elf32_Sym <aAbort - byte_4B4, dword_0, 0, 0x12, 0, 0>; "abort"|88-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aSetScsiPtCdb - byte_4B4, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_cdb"|129-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aBssEnd+1 - byte_4B4, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|4-2-0-0-124-32-1-0-0-0-0-0-16-0-24-0
1012|data|Elf32_Sym <aEdata - byte_4B4, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|226-1-0-0-120-32-1-0-0-0-0-0-16-0-23-0
1028|data|Elf32_Sym <aDataStart - byte_4B4, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|213-1-0-0-0-32-1-0-0-0-0-0-16-0-23-0
1044|data|Elf32_Sym <aEnd_0 - byte_4B4, _end, 0, 0x10, 0, 0x18>; "_end"|23-2-0-0-124-32-1-0-0-0-0-0-16-0-24-0
1060|data|Elf32_Sym <aBssEnd - byte_4B4, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|3-2-0-0-124-32-1-0-0-0-0-0-16-0-24-0
1076|data|Elf32_Sym <aLibcCsuInit - byte_4B4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|44-2-0-0-157-15-0-0-64-0-0-0-18-0-13-0
1092|data|Elf32_Sym <aBssStart - byte_4B4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|233-1-0-0-120-32-1-0-0-0-0-0-16-0-24-0
1108|data|Elf32_Sym <aLibcStartMain+0xD - byte_4B4, main+1, 0x444, 0x12, 0, 0xD>; "main"|170-1-0-0-213-9-0-0-68-4-0-0-18-0-13-0
1124|data|Elf32_Sym <aLibcCsuInit+0xA - byte_4B4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|54-2-0-0-208-8-0-0-0-0-0-0-18-0-11-0
1140|data|Elf32_Sym <aLibcCsuFini - byte_4B4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|28-2-0-0-221-15-0-0-2-0-0-0-18-0-13-0
1156|data|Elf32_Sym <aBssStart_0 - byte_4B4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|245-1-0-0-120-32-1-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aLibcCsuFini+0xA - byte_4B4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|38-2-0-0-224-15-0-0-0-0-0-0-18-0-14-0
1188|data|Elf32_Sym <aEnd - byte_4B4, _end, 0, 0x10, 0, 0x18>; "__end__"|15-2-0-0-124-32-1-0-0-0-0-0-16-0-24-0
1204|data|DCB 0|0
1205|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1222|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1250|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1265|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1285|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1311|data|DCB "construct_scsi_pt_obj",0|99-111-110-115-116-114-117-99-116-95-115-99-115-105-95-112-116-95-111-98-106-0
1333|data|DCB "set_scsi_pt_cdb",0|115-101-116-95-115-99-115-105-95-112-116-95-99-100-98-0
1349|data|DCB "destruct_scsi_pt_obj",0|100-101-115-116-114-117-99-116-95-115-99-115-105-95-112-116-95-111-98-106-0
1370|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1384|data|DCB "set_scsi_pt_sense",0|115-101-116-95-115-99-115-105-95-112-116-95-115-101-110-115-101-0
1402|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1428|data|DCB "sg_cmds_process_resp",0|115-103-95-99-109-100-115-95-112-114-111-99-101-115-115-95-114-101-115-112-0
1449|data|DCB "sg_get_llnum",0|115-103-95-103-101-116-95-108-108-110-117-109-0
1462|data|DCB "do_scsi_pt",0|100-111-95-115-99-115-105-95-112-116-0
1473|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1494|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1514|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1524|data|DCB "optind",0|111-112-116-105-110-100-0
1531|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1548|data|DCB "abort",0|97-98-111-114-116-0
1554|data|DCB "optarg",0|111-112-116-97-114-103-0
1561|data|DCB "stderr",0|115-116-100-101-114-114-0
1568|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1580|data|DCB "fwrite",0|102-119-114-105-116-101-0
1587|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
1602|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1617|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1635|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1655|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1673|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1686|data|DCB "_edata",0|95-101-100-97-116-97-0
1693|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1705|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1719|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1731|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1739|data|DCB "_end",0|95-101-110-100-0
1744|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1760|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1776|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1786|data|DCW 0|0-0
1788|data|DCW 0|0-0
1790|data|DCW 0|0-0
1792|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1794|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1796|data|DCW 0; local  symbol: construct_scsi_pt_obj|0-0
1798|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1800|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
1802|data|DCW 2; optind@@GLIBC_2.4|2-0
1804|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1806|data|DCW 2; stderr@@GLIBC_2.4|2-0
1808|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1810|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1812|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
1814|data|DCW 0; local  symbol: __gmon_start__|0-0
1816|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1818|data|DCW 0; local  symbol: do_scsi_pt|0-0
1820|data|DCW 0; local  symbol: destruct_scsi_pt_obj|0-0
1822|data|DCW 0; local  symbol: sg_get_llnum|0-0
1824|data|DCW 0; local  symbol: set_scsi_pt_sense|0-0
1826|data|DCW 0; local  symbol: safe_strerror|0-0
1828|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1830|data|DCW 0; local  symbol: sg_cmds_process_resp|0-0
1832|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
1834|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1836|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
1838|data|DCW 2; optarg@@GLIBC_2.4|2-0
1840|data|DCW 2; abort@@GLIBC_2.4|2-0
1842|data|DCW 0; local  symbol: set_scsi_pt_cdb|0-0
1844|data|DCW 1; global symbol: _bss_end__|1-0
1846|data|DCW 1; global symbol: _edata|1-0
1848|data|DCW 1; global symbol: __data_start|1-0
1850|data|DCW 1; global symbol: _end|1-0
1852|data|DCW 1; global symbol: __bss_end__|1-0
1854|data|DCW 1; global symbol: __libc_csu_init|1-0
1856|data|DCW 1; global symbol: __bss_start|1-0
1858|data|DCW 1; global symbol: main|1-0
1860|data|DCW 1; global symbol: _init|1-0
1862|data|DCW 1; global symbol: __libc_csu_fini|1-0
1864|data|DCW 1; global symbol: __bss_start__|1-0
1866|data|DCW 1; global symbol: _fini|1-0
1868|data|DCW 1; global symbol: __end__|1-0
1870|data|DCW 0|0-0
1872|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_4B4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-175-1-0-0-16-0-0-0-32-0-0-0
1888|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_4B4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-60-2-0-0-0-0-0-0
1904|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_4B4, 0x10, 0>; "libc.so.6"|1-0-1-0-54-1-0-0-16-0-0-0-0-0-0-0
1920|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_4B4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-60-2-0-0-0-0-0-0
1936|data|Elf32_Rel <0x11E64, 0x17>; R_ARM_RELATIVE|100-30-1-0-23-0-0-0
1944|data|Elf32_Rel <0x11E68, 0x17>; R_ARM_RELATIVE|104-30-1-0-23-0-0-0
1952|data|Elf32_Rel <0x11FD0, 0x17>; R_ARM_RELATIVE|208-31-1-0-23-0-0-0
1960|data|Elf32_Rel <0x11FEC, 0x17>; R_ARM_RELATIVE|236-31-1-0-23-0-0-0
1968|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
1976|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
1984|data|Elf32_Rel <0x12008, 0x17>; R_ARM_RELATIVE|8-32-1-0-23-0-0-0
1992|data|Elf32_Rel <0x12018, 0x17>; R_ARM_RELATIVE|24-32-1-0-23-0-0-0
2000|data|Elf32_Rel <0x12028, 0x17>; R_ARM_RELATIVE|40-32-1-0-23-0-0-0
2008|data|Elf32_Rel <0x12038, 0x17>; R_ARM_RELATIVE|56-32-1-0-23-0-0-0
2016|data|Elf32_Rel <0x12048, 0x17>; R_ARM_RELATIVE|72-32-1-0-23-0-0-0
2024|data|Elf32_Rel <0x12058, 0x17>; R_ARM_RELATIVE|88-32-1-0-23-0-0-0
2032|data|Elf32_Rel <0x11FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-31-1-0-21-3-0-0
2040|data|Elf32_Rel <0x11FD8, 0x415>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-31-1-0-21-4-0-0
2048|data|Elf32_Rel <0x11FDC, 0x615>; R_ARM_GLOB_DAT __stack_chk_guard|220-31-1-0-21-6-0-0
2056|data|Elf32_Rel <0x11FE0, 0x815>; R_ARM_GLOB_DAT optind|224-31-1-0-21-8-0-0
2064|data|Elf32_Rel <0x11FE4, 0xA15>; R_ARM_GLOB_DAT stderr|228-31-1-0-21-10-0-0
2072|data|Elf32_Rel <0x11FE8, 0xE15>; R_ARM_GLOB_DAT __gmon_start__|232-31-1-0-21-14-0-0
2080|data|Elf32_Rel <0x11FF4, 0x1515>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-31-1-0-21-21-0-0
2088|data|Elf32_Rel <0x11FF8, 0x1815>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-31-1-0-21-24-0-0
2096|data|Elf32_Rel <0x11FFC, 0x1A15>; R_ARM_GLOB_DAT optarg|252-31-1-0-21-26-0-0
2104|data|Elf32_Rel <0x11F84, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|132-31-1-0-22-3-0-0
2112|data|Elf32_Rel <0x11F88, 0x516>; R_ARM_JUMP_SLOT construct_scsi_pt_obj|136-31-1-0-22-5-0-0
2120|data|Elf32_Rel <0x11F8C, 0x716>; R_ARM_JUMP_SLOT sg_cmds_close_device|140-31-1-0-22-7-0-0
2128|data|Elf32_Rel <0x11F90, 0x916>; R_ARM_JUMP_SLOT __stack_chk_fail|144-31-1-0-22-9-0-0
2136|data|Elf32_Rel <0x11F94, 0xB16>; R_ARM_JUMP_SLOT fwrite|148-31-1-0-22-11-0-0
2144|data|Elf32_Rel <0x11F98, 0xC16>; R_ARM_JUMP_SLOT __libc_start_main|152-31-1-0-22-12-0-0
2152|data|Elf32_Rel <0x11F9C, 0xD16>; R_ARM_JUMP_SLOT __vfprintf_chk|156-31-1-0-22-13-0-0
2160|data|Elf32_Rel <0x11FA0, 0xE16>; R_ARM_JUMP_SLOT __gmon_start__|160-31-1-0-22-14-0-0
2168|data|Elf32_Rel <0x11FA4, 0xF16>; R_ARM_JUMP_SLOT getopt_long|164-31-1-0-22-15-0-0
2176|data|Elf32_Rel <0x11FA8, 0x1016>; R_ARM_JUMP_SLOT do_scsi_pt|168-31-1-0-22-16-0-0
2184|data|Elf32_Rel <0x11FAC, 0x1116>; R_ARM_JUMP_SLOT destruct_scsi_pt_obj|172-31-1-0-22-17-0-0
2192|data|Elf32_Rel <0x11FB0, 0x1216>; R_ARM_JUMP_SLOT sg_get_llnum|176-31-1-0-22-18-0-0
2200|data|Elf32_Rel <0x11FB4, 0x1316>; R_ARM_JUMP_SLOT set_scsi_pt_sense|180-31-1-0-22-19-0-0
2208|data|Elf32_Rel <0x11FB8, 0x1416>; R_ARM_JUMP_SLOT safe_strerror|184-31-1-0-22-20-0-0
2216|data|Elf32_Rel <0x11FBC, 0x1616>; R_ARM_JUMP_SLOT sg_cmds_process_resp|188-31-1-0-22-22-0-0
2224|data|Elf32_Rel <0x11FC0, 0x1716>; R_ARM_JUMP_SLOT sg_get_category_sense_str|192-31-1-0-22-23-0-0
2232|data|Elf32_Rel <0x11FC4, 0x1916>; R_ARM_JUMP_SLOT sg_cmds_open_device|196-31-1-0-22-25-0-0
2240|data|Elf32_Rel <0x11FC8, 0x1B16>; R_ARM_JUMP_SLOT abort|200-31-1-0-22-27-0-0
2248|data|Elf32_Rel <0x11FCC, 0x1C16>; R_ARM_JUMP_SLOT set_scsi_pt_cdb|204-31-1-0-22-28-0-0
2256|code|PUSH            {R3,LR}; _init|8-64-45-233
2260|code|BL              sub_E60|97-1-0-235
2264|code|POP             {R3,PC}|8-128-189-232
2268|code|PUSH            {LR}|4-224-45-229
2272|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8EC)|4-224-159-229
2276|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2280|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2284|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8EC|140-22-1-0
2288|code|ADR             R12, 0x8F8|0-198-143-226
2292|code|ADD             R12, R12, #0x11000|17-202-140-226
2296|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x118F8)]!; __imp___cxa_finalize|140-246-188-229
2300|code|ADR             R12, 0x904|0-198-143-226
2304|code|ADD             R12, R12, #0x11000|17-202-140-226
2308|code|LDR             PC, [R12,#(construct_scsi_pt_obj_ptr - 0x11904)]!; __imp_construct_scsi_pt_obj|132-246-188-229
2312|code|ADR             R12, 0x910|0-198-143-226
2316|code|ADD             R12, R12, #0x11000|17-202-140-226
2320|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x11910)]!; __imp_sg_cmds_close_device|124-246-188-229
2324|code|ADR             R12, 0x91C|0-198-143-226
2328|code|ADD             R12, R12, #0x11000|17-202-140-226
2332|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x1191C)]!; __imp___stack_chk_fail|116-246-188-229
2336|code|ADR             R12, 0x928|0-198-143-226
2340|code|ADD             R12, R12, #0x11000|17-202-140-226
2344|code|LDR             PC, [R12,#(fwrite_ptr - 0x11928)]!; __imp_fwrite|108-246-188-229
2348|code|ADR             R12, 0x934|0-198-143-226
2352|code|ADD             R12, R12, #0x11000|17-202-140-226
2356|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x11934)]!; __imp___libc_start_main|100-246-188-229
2360|code|ADR             R12, 0x940|0-198-143-226
2364|code|ADD             R12, R12, #0x11000|17-202-140-226
2368|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x11940)]!; __imp___vfprintf_chk|92-246-188-229
2372|code|ADR             R12, 0x94C|0-198-143-226
2376|code|ADD             R12, R12, #0x11000|17-202-140-226
2380|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x1194C)]!; __imp___gmon_start__|84-246-188-229
2384|code|ADR             R12, 0x958|0-198-143-226
2388|code|ADD             R12, R12, #0x11000|17-202-140-226
2392|code|LDR             PC, [R12,#(getopt_long_ptr - 0x11958)]!; __imp_getopt_long|76-246-188-229
2396|code|ADR             R12, 0x964|0-198-143-226
2400|code|ADD             R12, R12, #0x11000|17-202-140-226
2404|code|LDR             PC, [R12,#(do_scsi_pt_ptr - 0x11964)]!; __imp_do_scsi_pt|68-246-188-229
2408|code|ADR             R12, 0x970|0-198-143-226
2412|code|ADD             R12, R12, #0x11000|17-202-140-226
2416|code|LDR             PC, [R12,#(destruct_scsi_pt_obj_ptr - 0x11970)]!; __imp_destruct_scsi_pt_obj|60-246-188-229
2420|code|ADR             R12, 0x97C|0-198-143-226
2424|code|ADD             R12, R12, #0x11000|17-202-140-226
2428|code|LDR             PC, [R12,#(sg_get_llnum_ptr - 0x1197C)]!; __imp_sg_get_llnum|52-246-188-229
2432|code|ADR             R12, 0x988|0-198-143-226
2436|code|ADD             R12, R12, #0x11000|17-202-140-226
2440|code|LDR             PC, [R12,#(set_scsi_pt_sense_ptr - 0x11988)]!; __imp_set_scsi_pt_sense|44-246-188-229
2444|code|ADR             R12, 0x994|0-198-143-226
2448|code|ADD             R12, R12, #0x11000|17-202-140-226
2452|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x11994)]!; __imp_safe_strerror|36-246-188-229
2456|code|ADR             R12, 0x9A0|0-198-143-226
2460|code|ADD             R12, R12, #0x11000|17-202-140-226
2464|code|LDR             PC, [R12,#(sg_cmds_process_resp_ptr - 0x119A0)]!; __imp_sg_cmds_process_resp|28-246-188-229
2468|code|ADR             R12, 0x9AC|0-198-143-226
2472|code|ADD             R12, R12, #0x11000|17-202-140-226
2476|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x119AC)]!; __imp_sg_get_category_sense_str|20-246-188-229
2480|code|ADR             R12, 0x9B8|0-198-143-226
2484|code|ADD             R12, R12, #0x11000|17-202-140-226
2488|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x119B8)]!; __imp_sg_cmds_open_device|12-246-188-229
2492|code|ADR             R12, 0x9C4|0-198-143-226
2496|code|ADD             R12, R12, #0x11000|17-202-140-226
2500|code|LDR             PC, [R12,#(abort_ptr - 0x119C4)]!; __imp_abort|4-246-188-229
2504|code|ADR             R12, 0x9D0|0-198-143-226
2508|code|ADD             R12, R12, #0x11000|17-202-140-226
2512|code|LDR             PC, [R12,#(set_scsi_pt_cdb_ptr - 0x119D0)]!; __imp_set_scsi_pt_cdb|252-245-188-229
2516|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2520|code|SUB             SP, SP, #0x94|165-176
2522|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x9E8)|234-76
2524|code|MOV.W           R11, #0|79-240-0-11
2528|code|LDR             R3, =(__stack_chk_guard_ptr - 0x11F78)|233-75
2530|code|ADD             R7, SP, #0x28|10-175
2532|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
2534|code|LDR.W           R10, =(aHrvvz - 0x9F6); "hRvVz:"|223-248-164-163
2538|code|LDR.W           R9, =(off_12008 - 0x9F8); "help"|223-248-164-147
2542|code|MOV             R5, R0|5-70
2544|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
2546|code|ADD             R10, PC; "hRvVz:"|250-68
2548|code|ADD             R9, PC; off_12008|249-68
2550|code|MOV             R6, R1|14-70
2552|code|MOV             R8, R11|216-70
2554|code|STR.W           R11, [SP,#0x94+var_70]|205-248-36-176
2558|code|STR             R3, [SP,#0x94+var_80]|5-147
2560|code|LDR             R3, [R3]|27-104
2562|code|STR.W           R11, [SP,#0x94+var_74]|205-248-32-176
2566|code|STR.W           R11, [SP,#0x94+verbose]|205-248-28-176
2570|code|STR.W           R11, [SP,#0x94+var_7C]|205-248-24-176
2574|code|STR             R3, [SP,#0x94+var_8]|35-147
2576|code|MOV             R1, R6; argv|49-70
2578|code|STR             R7, [SP,#0x94+longind]; longind|0-151
2580|code|MOV             R0, R5; argc|40-70
2582|code|MOV             R2, R10; shortopts|82-70
2584|code|MOV             R3, R9; longopts|75-70
2586|code|STR.W           R8, [SP,#0x94+var_6C]|205-248-40-128
2590|code|BLX             getopt_long|255-247-152-239
2594|code|ADDS            R1, R0, #1|65-28
2596|code|BEQ             loc_AF4|102-208
2598|code|SUB.W           R3, R0, #0x3F ; '?'; switch 60 cases|160-241-63-3
2602|code|CMP             R3, #0x3B|59-43
2604|code|BHI             def_A2E; jumptable 00000A2E default case, cases 64-81,83-85,87-103,105-117,119-121|83-216
2606|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
2610|data|DCB 0x48; jump table for switch statement|72
2611|data|DCB 0x52|82
2612|data|DCB 0x52|82
2613|data|DCB 0x52|82
2614|data|DCB 0x52|82
2615|data|DCB 0x52|82
2616|data|DCB 0x52|82
2617|data|DCB 0x52|82
2618|data|DCB 0x52|82
2619|data|DCB 0x52|82
2620|data|DCB 0x52|82
2621|data|DCB 0x52|82
2622|data|DCB 0x52|82
2623|data|DCB 0x52|82
2624|data|DCB 0x52|82
2625|data|DCB 0x52|82
2626|data|DCB 0x52|82
2627|data|DCB 0x52|82
2628|data|DCB 0x52|82
2629|data|DCB 0x44|68
2630|data|DCB 0x52|82
2631|data|DCB 0x52|82
2632|data|DCB 0x52|82
2633|data|DCB 0x33|51
2634|data|DCB 0x52|82
2635|data|DCB 0x52|82
2636|data|DCB 0x52|82
2637|data|DCB 0x52|82
2638|data|DCB 0x52|82
2639|data|DCB 0x52|82
2640|data|DCB 0x52|82
2641|data|DCB 0x52|82
2642|data|DCB 0x52|82
2643|data|DCB 0x52|82
2644|data|DCB 0x52|82
2645|data|DCB 0x52|82
2646|data|DCB 0x52|82
2647|data|DCB 0x52|82
2648|data|DCB 0x52|82
2649|data|DCB 0x52|82
2650|data|DCB 0x52|82
2651|data|DCB 0x48|72
2652|data|DCB 0x52|82
2653|data|DCB 0x52|82
2654|data|DCB 0x52|82
2655|data|DCB 0x52|82
2656|data|DCB 0x52|82
2657|data|DCB 0x52|82
2658|data|DCB 0x52|82
2659|data|DCB 0x52|82
2660|data|DCB 0x52|82
2661|data|DCB 0x52|82
2662|data|DCB 0x52|82
2663|data|DCB 0x52|82
2664|data|DCB 0x52|82
2665|data|DCB 0x2F|47
2666|data|DCB 0x52|82
2667|data|DCB 0x52|82
2668|data|DCB 0x52|82
2669|data|DCB 0x1E|30
2670|code|LDR             R3, =(optarg_ptr - 0x11F78); jumptable 00000A2E case 122|201-75
2672|code|LDR             R3, [R4,R3]; optarg|227-88
2674|code|LDR             R0, [R3]; buf|24-104
2676|code|BLX             sg_get_llnum|255-247-126-239
2680|code|ADDS            R2, R1, #1|74-28
2682|code|IT EQ|8-191
2684|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
2688|code|BEQ.W           loc_C7C|0-240-252-128
2692|code|LDR             R3, [SP,#0x94+var_74]|8-155
2694|code|MOV             R11, R0|131-70
2696|code|STR             R1, [SP,#0x94+var_70]|9-145
2698|code|ADDS            R3, #1|1-51
2700|code|STR             R3, [SP,#0x94+var_74]|8-147
2702|code|B               loc_A10|191-231
2704|code|LDR             R3, [SP,#0x94+verbose]; jumptable 00000A2E case 118|7-155
2706|code|ADDS            R3, #1|1-51
2708|code|STR             R3, [SP,#0x94+verbose]|7-147
2710|code|B               loc_A10|187-231
2712|code|LDR             R0, =(aVersionS - 0xAA2); jumptable 00000A2E case 86|191-72
2714|code|MOVS            R6, #0|0-38
2716|code|LDR             R1, =(a10120140604 - 0xAA4); "1.01 20140604"|191-73
2718|code|ADD             R0, PC; "version: %s\n"|120-68
2720|code|ADD             R1, PC; "1.01 20140604"|121-68
2722|code|BL              sub_F54|0-240-87-250
2726|code|LDR             R3, [SP,#0x94+var_80]|5-155
2728|code|MOV             R0, R6|48-70
2730|code|LDR             R2, [SP,#0x94+var_8]|35-154
2732|code|LDR             R3, [R3]|27-104
2734|code|CMP             R2, R3|154-66
2736|code|BNE.W           loc_D38|64-240-66-129
2740|code|ADD             SP, SP, #0x94|37-176
2742|code|POP.W           {R4-R11,PC}|189-232-240-143
2746|code|LDR             R3, [SP,#0x94+var_7C]; jumptable 00000A2E case 82|6-155
2748|code|ADDS            R3, #1|1-51
2750|code|STR             R3, [SP,#0x94+var_7C]|6-147
2752|code|B               loc_A10|166-231
2754|code|LDR             R0, =(aUsageSgResetWp - 0xACA); jumptable 00000A2E cases 63,104|183-72
2756|code|MOVS            R6, #0|0-38
2758|code|ADD             R0, PC; "Usage: sg_reset_wp  [--help] [--reset-a"...|120-68
2760|code|BL              sub_F54|0-240-68-250
2764|code|LDR             R0, =(aWhereHelpHPrin - 0xAD2); "  where:\n    --help|-h          print "...|181-72
2766|code|ADD             R0, PC; "  where:\n    --help|-h          print "...|120-68
2768|code|BL              sub_F54|0-240-64-250
2772|code|B               loc_AA6|231-231
2774|code|MOV             R1, R0; jumptable 00000A2E default case, cases 64-81,83-85,87-103,105-117,119-121|1-70
2776|code|LDR             R0, =(aUnrecognisedOp - 0xAE0); "unrecognised option code 0x%x ??\n"|179-72
2778|code|MOVS            R6, #1|1-38
2780|code|ADD             R0, PC; "unrecognised option code 0x%x ??\n"|120-68
2782|code|BL              sub_F54|0-240-57-250
2786|code|LDR             R0, =(aUsageSgResetWp - 0xAE8); "Usage: sg_reset_wp  [--help] [--reset-a"...|178-72
2788|code|ADD             R0, PC; "Usage: sg_reset_wp  [--help] [--reset-a"...|120-68
2790|code|BL              sub_F54|0-240-53-250
2794|code|LDR             R0, =(aWhereHelpHPrin - 0xAF0); "  where:\n    --help|-h          print "...|177-72
2796|code|ADD             R0, PC; "  where:\n    --help|-h          print "...|120-68
2798|code|BL              sub_F54|0-240-49-250
2802|code|B               loc_AA6|216-231
2804|code|LDR             R3, =(optind_ptr - 0x11F78)|175-75
2806|code|LDR             R4, [R4,R3]; optind|228-88
2808|code|LDR             R3, [R4]|35-104
2810|code|CMP             R5, R3|157-66
2812|code|BLE.W           loc_C26|64-243-147-128
2816|code|ADDS            R2, R3, #1|90-28
2818|code|LDR.W           R8, [R6,R3,LSL#2]|86-248-35-128
2822|code|CMP             R5, R2|149-66
2824|code|STR             R2, [R4]|34-96
2826|code|BLE             loc_B42|26-221
2828|code|LDR             R7, =(aUnexpectedExtr - 0xB14); "Unexpected extra argument: %s\n"|170-79
2830|code|MOV             R8, R4|160-70
2832|code|ADD             R7, PC; "Unexpected extra argument: %s\n"|127-68
2834|code|B               loc_B28|9-224
2836|code|LDR.W           R1, [R6,R3,LSL#2]|86-248-35-16
2840|code|MOV             R0, R7|56-70
2842|code|BL              sub_F54|0-240-27-250
2846|code|LDR.W           R3, [R8]|216-248-0-48
2850|code|ADDS            R3, #1|1-51
2852|code|STR.W           R3, [R8]|200-248-0-48
2856|code|LDR             R3, [R4]|35-104
2858|code|CMP             R5, R3|157-66
2860|code|BGT             loc_B14|242-220
2862|code|LDR             R0, =(aUsageSgResetWp - 0xB36); "Usage: sg_reset_wp  [--help] [--reset-a"...|163-72
2864|code|MOVS            R6, #1|1-38
2866|code|ADD             R0, PC; "Usage: sg_reset_wp  [--help] [--reset-a"...|120-68
2868|code|BL              sub_F54|0-240-14-250
2872|code|LDR             R0, =(aWhereHelpHPrin - 0xB3E); "  where:\n    --help|-h          print "...|161-72
2874|code|ADD             R0, PC; "  where:\n    --help|-h          print "...|120-68
2876|code|BL              sub_F54|0-240-10-250
2880|code|B               loc_AA6|177-231
2882|code|LDR             R3, [SP,#0x94+var_74]|8-155
2884|code|LDR             R2, [SP,#0x94+var_7C]|6-154
2886|code|ORRS            R3, R2|19-67
2888|code|BEQ             loc_C4A|127-208
2890|code|CMP.W           R8, #0|184-241-0-15
2894|code|BEQ             loc_C2E|110-208
2896|code|MOV             R0, R8; device_name|64-70
2898|code|MOVS            R1, #0; read_only|0-33
2900|code|LDR             R2, [SP,#0x94+verbose]; verbose|7-154
2902|code|BLX             sg_cmds_open_device|255-247-44-239
2906|code|SUBS            R5, R0, #0|5-30
2908|code|BLT.W           loc_C66|192-242-131-128
2912|code|LDR             R3, =(dword_FEC - 0xB6A)|152-75
2914|code|ADD             R4, SP, #0x94+var_68|11-172
2916|code|LDR             R6, [SP,#0x94+var_70]|9-158
2918|code|ADD             R3, PC; dword_FEC|123-68
2920|code|MOV             R12, R4|164-70
2922|code|LDR             R1, [R3,#(dword_FF0 - 0xFEC)]|89-104
2924|code|MOV.W           LR, R6,LSR#24|79-234-22-110
2928|code|LDR             R2, [R3,#(dword_FF4 - 0xFEC)]|154-104
2930|code|MOV.W           R8, R6,LSR#16|79-234-22-72
2934|code|LDR             R0, [R3]|24-104
2936|code|LDR             R3, [R3,#(dword_FF8 - 0xFEC)]|219-104
2938|code|STM.W           R12!, {R0-R3}|172-232-15-0
2942|code|MOV.W           R3, R11,LSR#16|79-234-27-67
2946|code|STRB.W          R3, [SP,#0x94+var_61]|141-248-51-48
2950|code|LSRS            R1, R6, #8|49-10
2952|code|LDR             R3, [SP,#0x94+var_7C]|6-155
2954|code|MOV.W           R2, R11,LSR#24|79-234-27-98
2958|code|MOV.W           R12, R11,LSR#8|79-234-27-44
2962|code|STRB.W          R6, [SP,#0x94+var_63]|141-248-49-96
2966|code|STRB.W          R11, [SP,#0x94+var_5F]|141-248-53-176
2970|code|STRB.W          LR, [SP,#0x94+var_66]|141-248-46-224
2974|code|STRB.W          R8, [SP,#0x94+var_65]|141-248-47-128
2978|code|STRB.W          R1, [SP,#0x94+var_64]|141-248-48-16
2982|code|STRB.W          R2, [SP,#0x94+var_62]|141-248-50-32
2986|code|STRB.W          R12, [SP,#0x94+var_60]|141-248-52-192
2990|code|CBZ             R3, loc_BB6|19-177
2992|code|MOVS            R3, #1|1-35
2994|code|STRB.W          R3, [SP,#0x94+var_5A]|141-248-58-48
2998|code|LDR             R3, [SP,#0x94+verbose]|7-155
3000|code|CMP             R3, #0|0-43
3002|code|BNE             loc_C92|106-209
3004|code|BLX             construct_scsi_pt_obj|255-247-158-238
3008|code|MOV             R9, R0|129-70
3010|code|CMP             R0, #0|0-40
3012|code|BEQ.W           loc_D50|0-240-196-128
3016|code|ADD.W           R8, SP, #0x94+var_58|13-241-60-8
3020|code|MOV             R1, R4; cdb|33-70
3022|code|MOVS            R2, #0x10; cdb_len|16-34
3024|code|BLX             set_scsi_pt_cdb|255-247-250-238
3028|code|MOV             R1, R8; sense|65-70
3030|code|MOV             R0, R9; scsi_pt_obj|72-70
3032|code|MOVS            R2, #0x40 ; '@'; max_sense_len|64-34
3034|code|BLX             set_scsi_pt_sense|255-247-210-238
3038|code|LDR             R4, [SP,#0x94+verbose]|7-156
3040|code|MOV             R1, R5; fd|41-70
3042|code|MOVS            R2, #0x3C ; '<'; timeout_secs|60-34
3044|code|MOV             R0, R9; scsi_pt_obj|72-70
3046|code|MOV             R3, R4; verbose|35-70
3048|code|BLX             do_scsi_pt|255-247-184-238
3052|code|LDR             R1, =(aResetWritePoin - 0xBFA); "reset write pointer"|118-73
3054|code|MOVS            R3, #1|1-35
3056|code|STR.W           R8, [SP,#0x94+longind]|205-248-0-128
3060|code|STR             R3, [SP,#0x94+var_90]|1-147
3062|code|ADD             R1, PC; "reset write pointer"|121-68
3064|code|MOVS            R3, #0|0-35
3066|code|STR             R4, [SP,#0x94+var_8C]|2-148
3068|code|STR             R7, [SP,#0x94+var_88]|3-151
3070|code|MOV             R2, R0|2-70
3072|code|MOV             R0, R9|72-70
3074|code|BLX             sg_cmds_process_resp|255-247-202-238
3078|code|MOV             R6, R0|6-70
3080|code|ADDS            R3, R6, #1|115-28
3082|code|MOV             R0, R9; scsi_pt_obj|72-70
3084|code|BEQ             loc_CBA|85-208
3086|code|ADDS            R6, #2|2-54
3088|code|BEQ             loc_CE6|105-208
3090|code|BLX             destruct_scsi_pt_obj|255-247-170-238
3094|code|MOV             R0, R5; device_fd|40-70
3096|code|BLX             sg_cmds_close_device|255-247-118-238
3100|code|CMP             R0, #0|0-40
3102|code|BLT.W           loc_D3C|192-242-141-128
3106|code|MOVS            R6, #0|0-38
3108|code|B               loc_AA6|63-231
3110|code|LDR             R3, [SP,#0x94+var_74]|8-155
3112|code|LDR             R2, [SP,#0x94+var_7C]|6-154
3114|code|ORRS            R3, R2|19-67
3116|code|BEQ             loc_C4A|13-208
3118|code|LDR             R0, =(aMissingDeviceN - 0xC36); "missing device name!\n"|103-72
3120|code|MOVS            R6, #1|1-38
3122|code|ADD             R0, PC; "missing device name!\n"|120-68
3124|code|BL              sub_F54|0-240-142-249
3128|code|LDR             R0, =(aUsageSgResetWp - 0xC3E); "Usage: sg_reset_wp  [--help] [--reset-a"...|101-72
3130|code|ADD             R0, PC; "Usage: sg_reset_wp  [--help] [--reset-a"...|120-68
3132|code|BL              sub_F54|0-240-138-249
3136|code|LDR             R0, =(aWhereHelpHPrin - 0xC46); "  where:\n    --help|-h          print "...|100-72
3138|code|ADD             R0, PC; "  where:\n    --help|-h          print "...|120-68
3140|code|BL              sub_F54|0-240-134-249
3144|code|B               loc_AA6|45-231
3146|code|LDR             R0, =(aEitherTheZoneI - 0xC52); "either the --zone=ID or --reset-all opt"...|99-72
3148|code|MOVS            R6, #1|1-38
3150|code|ADD             R0, PC; "either the --zone=ID or --reset-all opt"...|120-68
3152|code|BL              sub_F54|0-240-128-249
3156|code|LDR             R0, =(aUsageSgResetWp - 0xC5A); "Usage: sg_reset_wp  [--help] [--reset-a"...|97-72
3158|code|ADD             R0, PC; "Usage: sg_reset_wp  [--help] [--reset-a"...|120-68
3160|code|BL              sub_F54|0-240-124-249
3164|code|LDR             R0, =(aWhereHelpHPrin - 0xC62); "  where:\n    --help|-h          print "...|96-72
3166|code|ADD             R0, PC; "  where:\n    --help|-h          print "...|120-68
3168|code|BL              sub_F54|0-240-120-249
3172|code|B               loc_AA6|31-231
3174|code|NEGS            R0, R5; errnum|104-66
3176|code|MOVS            R6, #0xF|15-38
3178|code|BLX             safe_strerror|255-247-144-238
3182|code|MOV             R1, R8|65-70
3184|code|MOV             R2, R0|2-70
3186|code|LDR             R0, =(aOpenErrorSS - 0xC78); "open error: %s: %s\n"|92-72
3188|code|ADD             R0, PC; "open error: %s: %s\n"|120-68
3190|code|BL              sub_F54|0-240-109-249
3194|code|B               loc_AA6|20-231
3196|code|LDR             R3, =(stderr_ptr - 0x11F78)|90-75
3198|code|MOVS            R1, #1; size|1-33
3200|code|LDR             R0, =(aBadArgumentToZ - 0xC8C); "bad argument to '--zone=ID'\n"|90-72
3202|code|MOVS            R2, #0x1C; n|28-34
3204|code|MOV             R6, R1|14-70
3206|code|LDR             R3, [R4,R3]; stderr|227-88
3208|code|ADD             R0, PC; "bad argument to '--zone=ID'\n"|120-68
3210|code|LDR             R3, [R3]; s|27-104
3212|code|BLX             fwrite|255-247-72-238
3216|code|B               loc_AA6|9-231
3218|code|LDR             R0, =(aResetWritePoin_0 - 0xC9E); "    Reset write pointer cdb: "|87-72
3220|code|MOVS            R6, #0|0-38
3222|code|LDR.W           R8, =(a02x - 0xCA4); "%02x "|223-248-92-129
3226|code|ADD             R0, PC; "    Reset write pointer cdb: "|120-68
3228|code|BL              sub_F54|0-240-90-249
3232|code|ADD             R8, PC; "%02x "|248-68
3234|code|LDRB            R1, [R4,R6]|161-93
3236|code|MOV             R0, R8|64-70
3238|code|ADDS            R6, #1|1-54
3240|code|BL              sub_F54|0-240-84-249
3244|code|CMP             R6, #0x10|16-46
3246|code|BNE             loc_CA2|248-209
3248|code|LDR             R0, =(aMissingDeviceN+0x14 - 0xCB6); "\n"|81-72
3250|code|ADD             R0, PC; "\n"|120-68
3252|code|BL              sub_F54|0-240-78-249
3256|code|B               loc_BBC|128-231
3258|code|BLX             destruct_scsi_pt_obj|255-247-86-238
3262|code|LDR             R3, [SP,#0x94+verbose]|7-155
3264|code|MOV             R2, R8|66-70
3266|code|MOVS            R1, #0x50 ; 'P'|80-33
3268|code|MOV             R0, R6|48-70
3270|code|BLX             sg_get_category_sense_str|255-247-110-238
3274|code|LDR             R0, =(aResetWritePoin_1 - 0xCD2); "Reset write pointer command: %s\n"|76-72
3276|code|MOV             R1, R8|65-70
3278|code|ADD             R0, PC; "Reset write pointer command: %s\n"|120-68
3280|code|BL              sub_F54|0-240-64-249
3284|code|MOV             R0, R5; device_fd|40-70
3286|code|BLX             sg_cmds_close_device|255-247-24-238
3290|code|CMP             R0, #0|0-40
3292|code|BLT             loc_D20|32-219
3294|code|CMP             R6, #0|0-46
3296|code|IT LT|184-191
3298|code|MOVLT           R6, #0x63 ; 'c'|99-38
3300|code|B               loc_AA6|223-230
3302|code|LDR             R6, [SP,#0x94+var_6C]|10-158
3304|code|SUB.W           R3, R6, #0x14|166-241-20-3
3308|code|CMP             R3, #1|1-43
3310|code|BLS             loc_C12|144-217
3312|code|BLX             destruct_scsi_pt_obj|255-247-58-238
3316|code|CBZ             R6, loc_D62|174-179
3318|code|CMP             R6, #9|9-46
3320|code|BNE             loc_CBE|225-209
3322|code|LDR             R0, =(aResetWritePoin_2 - 0xD00); "Reset write pointer command not support"...|65-72
3324|code|ADD             R0, PC; "Reset write pointer command not support"...|120-68
3326|code|BL              sub_F54|0-240-41-249
3330|code|MOV             R0, R5; device_fd|40-70
3332|code|BLX             sg_cmds_close_device|255-247-0-238
3336|code|CMP             R0, #0|0-40
3338|code|BGE.W           loc_AA6|191-246-204-174
3342|code|NEGS            R0, R0; errnum|64-66
3344|code|BLX             safe_strerror|255-247-60-238
3348|code|MOV             R1, R0|1-70
3350|code|LDR             R0, =(aCloseErrorS - 0xD1C); "close error: %s\n"|59-72
3352|code|ADD             R0, PC; "close error: %s\n"|120-68
3354|code|BL              sub_F54|0-240-27-249
3358|code|B               loc_AA6|194-230
3360|code|NEGS            R0, R0; errnum|64-66
3362|code|BLX             safe_strerror|255-247-52-238
3366|code|MOV             R1, R0|1-70
3368|code|LDR             R0, =(aCloseErrorS - 0xD2E); "close error: %s\n"|55-72
3370|code|ADD             R0, PC; "close error: %s\n"|120-68
3372|code|BL              sub_F54|0-240-18-249
3376|code|CMP             R6, #0|0-46
3378|code|BNE             loc_CDE|212-209
3380|code|MOVS            R6, #0xF|15-38
3382|code|B               loc_AA6|182-230
3384|code|BLX             __stack_chk_fail|255-247-236-237
3388|code|NEGS            R0, R0; errnum|64-66
3390|code|MOVS            R6, #0xF|15-38
3392|code|BLX             safe_strerror|255-247-36-238
3396|code|MOV             R1, R0|1-70
3398|code|LDR             R0, =(aCloseErrorS - 0xD4C); "close error: %s\n"|49-72
3400|code|ADD             R0, PC; "close error: %s\n"|120-68
3402|code|BL              sub_F54|0-240-3-249
3406|code|B               loc_AA6|170-230
3408|code|LDR             R0, =(aResetWritePoin_3 - 0xD5E); "Reset write pointer: out of memory\n"|47-72
3410|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
3414|code|ADD.W           R8, SP, #0x94+var_58|13-241-60-8
3418|code|ADD             R0, PC; "Reset write pointer: out of memory\n"|120-68
3420|code|BL              sub_F54|0-240-250-248
3424|code|B               loc_CBE|173-231
3426|code|MOV             R0, R5; device_fd|40-70
3428|code|BLX             sg_cmds_close_device|255-247-208-237
3432|code|CMP             R0, #0|0-40
3434|code|BGE.W           loc_AA6|191-246-156-174
3438|code|NEGS            R0, R0; errnum|64-66
3440|code|MOVS            R6, #0xF|15-38
3442|code|BLX             safe_strerror|255-247-12-238
3446|code|MOV             R1, R0|1-70
3448|code|LDR             R0, =(aCloseErrorS - 0xD7E); "close error: %s\n"|38-72
3450|code|ADD             R0, PC; "close error: %s\n"|120-68
3452|code|BL              sub_F54|0-240-234-248
3456|code|B               loc_AA6|145-230
3458|data|ALIGN 4|0-191
3460|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9E8|144-21-1-0
3464|data|DCD __stack_chk_guard_ptr - 0x11F78|100-0-0-0
3468|data|DCD aHrvvz - 0x9F6; "hRvVz:"|6-6-0-0
3472|data|DCD off_12008 - 0x9F8; "help"|16-22-1-0
3476|data|DCD optarg_ptr - 0x11F78|132-0-0-0
3480|data|DCD aVersionS - 0xAA2; "version: %s\n"|194-7-0-0
3484|data|DCD a10120140604 - 0xAA4; "1.01 20140604"|208-7-0-0
3488|data|DCD aUsageSgResetWp - 0xACA; "Usage: sg_reset_wp  [--help] [--reset-a"...|58-5-0-0
3492|data|DCD aWhereHelpHPrin - 0xAD2; "  where:\n    --help|-h          print "...|158-5-0-0
3496|data|DCD aUnrecognisedOp - 0xAE0; "unrecognised option code 0x%x ??\n"|196-7-0-0
3500|data|DCD aUsageSgResetWp - 0xAE8; "Usage: sg_reset_wp  [--help] [--reset-a"...|28-5-0-0
3504|data|DCD aWhereHelpHPrin - 0xAF0; "  where:\n    --help|-h          print "...|128-5-0-0
3508|data|DCD optind_ptr - 0x11F78|104-0-0-0
3512|data|DCD aUnexpectedExtr - 0xB14; "Unexpected extra argument: %s\n"|180-7-0-0
3516|data|DCD aUsageSgResetWp - 0xB36; "Usage: sg_reset_wp  [--help] [--reset-a"...|206-4-0-0
3520|data|DCD aWhereHelpHPrin - 0xB3E; "  where:\n    --help|-h          print "...|50-5-0-0
3524|data|DCD dword_FEC - 0xB6A|130-4-0-0
3528|data|DCD aResetWritePoin - 0xBFA; "reset write pointer"|158-7-0-0
3532|data|DCD aMissingDeviceN - 0xC36; "missing device name!\n"|234-6-0-0
3536|data|DCD aUsageSgResetWp - 0xC3E; "Usage: sg_reset_wp  [--help] [--reset-a"...|198-3-0-0
3540|data|DCD aWhereHelpHPrin - 0xC46; "  where:\n    --help|-h          print "...|42-4-0-0
3544|data|DCD aEitherTheZoneI - 0xC52; "either the --zone=ID or --reset-all opt"...|150-6-0-0
3548|data|DCD aUsageSgResetWp - 0xC5A; "Usage: sg_reset_wp  [--help] [--reset-a"...|170-3-0-0
3552|data|DCD aWhereHelpHPrin - 0xC62; "  where:\n    --help|-h          print "...|14-4-0-0
3556|data|DCD aOpenErrorSS - 0xC78; "open error: %s: %s\n"|192-6-0-0
3560|data|DCD stderr_ptr - 0x11F78|108-0-0-0
3564|data|DCD aBadArgumentToZ - 0xC8C; "bad argument to '--zone=ID'\n"|248-5-0-0
3568|data|DCD aResetWritePoin_0 - 0xC9E; "    Reset write pointer cdb: "|174-6-0-0
3572|data|DCD a02x - 0xCA4; "%02x "|200-6-0-0
3576|data|DCD aMissingDeviceN+0x14 - 0xCB6; "\n"|126-6-0-0
3580|data|DCD aResetWritePoin_1 - 0xCD2; "Reset write pointer command: %s\n"|6-7-0-0
3584|data|DCD aResetWritePoin_2 - 0xD00; "Reset write pointer command not support"...|172-6-0-0
3588|data|DCD aCloseErrorS - 0xD1C; "close error: %s\n"|224-6-0-0
3592|data|DCD aCloseErrorS - 0xD2E; "close error: %s\n"|206-6-0-0
3596|data|DCD aCloseErrorS - 0xD4C; "close error: %s\n"|176-6-0-0
3600|data|DCD aResetWritePoin_3 - 0xD5E; "Reset write pointer: out of memory\n"|22-6-0-0
3604|data|DCD aCloseErrorS - 0xD7E; "close error: %s\n"|126-6-0-0
3608|code|MOV.W           R11, #0|79-240-0-11
3612|code|MOV.W           LR, #0|79-240-0-14
3616|code|POP             {R1}; argc|2-188
3618|code|MOV             R2, SP; ubp_av|106-70
3620|code|PUSH            {R2}; stack_end|4-180
3622|code|PUSH            {R0}; rtld_fini|1-180
3624|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xE50)|223-248-36-160
3628|code|ADR             R3, off_E50|8-163
3630|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
3632|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F78)|223-248-32-192
3636|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
3640|code|PUSH.W          {R12}; fini|77-248-4-205
3644|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F78)|6-75
3646|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
3650|code|LDR             R0, =(main_ptr - 0x11F78)|6-72
3652|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
3656|code|BLX             __libc_start_main|255-247-112-237
3660|code|BLX             abort|255-247-182-237
3664|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE50|40-17-1-0
3668|data|DCD __libc_csu_fini_ptr - 0x11F78|88-0-0-0
3672|data|DCD __libc_csu_init_ptr - 0x11F78|116-0-0-0
3676|data|DCD main_ptr - 0x11F78|120-0-0-0
3680|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE70)|20-48-159-229
3684|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F78)|20-32-159-229
3688|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
3692|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
3696|code|CMP             R2, #0|0-0-82-227
3700|code|BXEQ            LR|30-255-47-1
3704|code|B               __gmon_start__|177-254-255-234
3708|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE70|8-17-1-0
3712|data|DCD __gmon_start___ptr_0 - 0x11F78|112-0-0-0
3716|code|LDR             R3, =(__bss_start__ - 0xE8C)|7-75
3718|code|LDR             R0, =(__bss_start__ - 0xE90)|8-72
3720|code|ADD             R3, PC; __bss_start__|123-68
3722|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xE96)|8-74
3724|code|ADD             R0, PC; __bss_start__|120-68
3726|code|ADDS            R3, #3|3-51
3728|code|SUBS            R3, R3, R0|27-26
3730|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3732|code|CMP             R3, #6|6-43
3734|code|BLS             locret_EA0|3-217
3736|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F78)|5-75
3738|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
3740|code|CBZ             R3, locret_EA0|3-177
3742|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
3744|code|BX              LR|112-71
3746|data|ALIGN 4|0-191
3748|data|DCD __bss_start__ - 0xE8C|236-17-1-0
3752|data|DCD __bss_start__ - 0xE90|232-17-1-0
3756|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE96|226-16-1-0
3760|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F78|96-0-0-0
3764|code|LDR             R1, =(__bss_start__ - 0xEBC)|8-73
3766|code|LDR             R0, =(__bss_start__ - 0xEC0)|9-72
3768|code|ADD             R1, PC; __bss_start__|121-68
3770|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xEC4)|9-75
3772|code|ADD             R0, PC; __bss_start__|120-68
3774|code|SUBS            R1, R1, R0|9-26
3776|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3778|code|ASRS            R1, R1, #2|137-16
3780|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
3784|code|ASRS            R1, R1, #1|73-16
3786|code|BEQ             locret_ED4|3-208
3788|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F78)|5-74
3790|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
3792|code|CBZ             R3, locret_ED4|3-177
3794|code|BX              R3; _ITM_registerTMCloneTable|24-71
3796|code|BX              LR|112-71
3798|data|ALIGN 4|0-191
3800|data|DCD __bss_start__ - 0xEBC|188-17-1-0
3804|data|DCD __bss_start__ - 0xEC0|184-17-1-0
3808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEC4|180-16-1-0
3812|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F78|128-0-0-0
3816|code|PUSH            {R3,LR}|8-181
3818|code|LDR             R3, =(__bss_start__ - 0xEF2)|10-75
3820|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xEF4)|10-74
3822|code|ADD             R3, PC; __bss_start__|123-68
3824|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3826|code|LDRB            R3, [R3]|27-120
3828|code|CBNZ            R3, locret_F12|107-185
3830|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F78)|9-75
3832|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
3834|code|CBZ             R3, loc_F06|35-177
3836|code|LDR             R3, =(off_12004 - 0xF02)|8-75
3838|code|ADD             R3, PC; off_12004|123-68
3840|code|LDR             R0, [R3]; off_12004 ; void *|24-104
3842|code|BLX             __cxa_finalize|255-247-246-236
3846|code|BL              sub_E84|255-247-189-255
3850|code|LDR             R3, =(__bss_start__ - 0xF12)|6-75
3852|code|MOVS            R2, #1|1-34
3854|code|ADD             R3, PC; __bss_start__|123-68
3856|code|STRB            R2, [R3]|26-112
3858|code|POP             {R3,PC}|8-189
3860|data|DCD __bss_start__ - 0xEF2|134-17-1-0
3864|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEF4|132-16-1-0
3868|data|DCD __cxa_finalize_ptr_0 - 0x11F78|92-0-0-0
3872|data|DCD off_12004 - 0xF02|2-17-1-0
3876|data|DCD __bss_start__ - 0xF12|102-17-1-0
3880|code|LDR             R0, =(dword_11E6C - 0xF30)|7-72
3882|code|PUSH            {R3,LR}|8-181
3884|code|ADD             R0, PC; dword_11E6C|120-68
3886|code|LDR             R2, [R0]|2-104
3888|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF36)|6-75
3890|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3892|code|CBNZ            R2, loc_F3C|18-185
3894|code|POP.W           {R3,LR}|189-232-8-64
3898|code|B               sub_EB4|187-231
3900|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F78)|4-74
3902|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
3904|code|CMP             R3, #0|0-43
3906|code|BEQ             loc_F36|248-208
3908|code|BLX             R3; _Jv_RegisterClasses|152-71
3910|code|B               loc_F36|246-231
3912|data|DCD dword_11E6C - 0xF30|60-15-1-0
3916|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF36|66-16-1-0
3920|data|DCD _Jv_RegisterClasses_ptr - 0x11F78|124-0-0-0
3924|code|PUSH            {R0-R3}|15-180
3926|code|MOVS            R1, #1|1-33
3928|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0xF60)|13-72
3930|code|PUSH            {R4-R6,LR}|112-181
3932|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
3934|code|LDR             R5, =(__stack_chk_guard_ptr - 0x11F78)|13-77
3936|code|SUB             SP, SP, #8|130-176
3938|code|ADD             R3, SP, #0x28+varg_r0|6-171
3940|code|LDR             R4, =(stderr_ptr - 0x11F78)|12-76
3942|code|LDR             R5, [R0,R5]; __stack_chk_guard|69-89
3944|code|LDR.W           R2, [R3],#4|83-248-4-43
3948|code|LDR             R6, [R5]|46-104
3950|code|STR             R3, [SP,#0x28+var_28]|0-147
3952|code|STR             R6, [SP,#0x28+var_24]|1-150
3954|code|LDR             R0, [R0,R4]; stderr|0-89
3956|code|LDR             R0, [R0]|0-104
3958|code|BLX             __vfprintf_chk|255-247-224-236
3962|code|LDR             R2, [SP,#0x28+var_24]|1-154
3964|code|LDR             R3, [R5]|43-104
3966|code|CMP             R2, R3|154-66
3968|code|BNE             loc_F8C|4-209
3970|code|ADD             SP, SP, #8|2-176
3972|code|POP.W           {R4-R6,LR}|189-232-112-64
3976|code|ADD             SP, SP, #0x10|4-176
3978|code|BX              LR|112-71
3980|code|BLX             __stack_chk_fail|255-247-194-236
3984|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF60|24-16-1-0
3988|data|DCD __stack_chk_guard_ptr - 0x11F78|100-0-0-0
3992|data|DCD stderr_ptr - 0x11F78|108-0-0-0
3996|code|PUSH.W          {R3-R9,LR}|45-233-248-67
4000|code|MOV             R7, R0|7-70
4002|code|LDR             R6, =(off_11E68 - 0xFAE)|12-78
4004|code|MOV             R8, R1|136-70
4006|code|LDR             R5, =(off_11E64 - 0xFB4)|12-77
4008|code|MOV             R9, R2|145-70
4010|code|ADD             R6, PC; off_11E68|126-68
4012|code|BLX             .init_proc|255-247-144-236
4016|code|ADD             R5, PC; off_11E64|125-68
4018|code|SUBS            R6, R6, R5|118-27
4020|code|ASRS            R6, R6, #2|182-16
4022|code|BEQ             locret_FCE|10-208
4024|code|SUBS            R5, #4|4-61
4026|code|MOVS            R4, #0|0-36
4028|code|ADDS            R4, #1|1-52
4030|code|LDR.W           R3, [R5,#4]!|85-248-4-63
4034|code|MOV             R0, R7|56-70
4036|code|MOV             R1, R8|65-70
4038|code|MOV             R2, R9|74-70
4040|code|BLX             R3|152-71
4042|code|CMP             R4, R6|180-66
4044|code|BNE             loc_FBC|246-209
4046|code|POP.W           {R3-R9,PC}|189-232-248-131
4050|data|ALIGN 4|0-191
4052|data|DCD off_11E68 - 0xFAE|186-14-1-0
4056|data|DCD off_11E64 - 0xFB4|176-14-1-0
4060|code|BX              LR|112-71
4062|data|ALIGN 0x10|0-191
4064|code|PUSH            {R3,LR}; _fini|8-64-45-233
4068|code|POP             {R3,PC}|8-128-189-232
73316|data|DCD sub_F28+1|41-15-0-0
73320|data|DCD sub_EE8+1|233-14-0-0
73324|data|DCD 0|0-0-0-0
73328|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
73336|data|Elf32_Dyn <1, <0x136>>; DT_NEEDED libc.so.6|1-0-0-0-54-1-0-0
73344|data|Elf32_Dyn <1, <0x1AF>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-175-1-0-0
73352|data|Elf32_Dyn <0xC, <0x8D0>>; DT_INIT|12-0-0-0-208-8-0-0
73360|data|Elf32_Dyn <0xD, <0xFE0>>; DT_FINI|13-0-0-0-224-15-0-0
73368|data|Elf32_Dyn <0x19, <0x11E64>>; DT_INIT_ARRAY|25-0-0-0-100-30-1-0
73376|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73384|data|Elf32_Dyn <0x1A, <0x11E68>>; DT_FINI_ARRAY|26-0-0-0-104-30-1-0
73392|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73400|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73408|data|Elf32_Dyn <5, <0x4B4>>; DT_STRTAB|5-0-0-0-180-4-0-0
73416|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
73424|data|Elf32_Dyn <0xA, <0x246>>; DT_STRSZ|10-0-0-0-70-2-0-0
73432|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73440|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73448|data|Elf32_Dyn <3, <0x11F78>>; DT_PLTGOT|3-0-0-0-120-31-1-0
73456|data|Elf32_Dyn <2, <0x98>>; DT_PLTRELSZ|2-0-0-0-152-0-0-0
73464|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73472|data|Elf32_Dyn <0x17, <0x838>>; DT_JMPREL|23-0-0-0-56-8-0-0
73480|data|Elf32_Dyn <0x11, <0x790>>; DT_REL|17-0-0-0-144-7-0-0
73488|data|Elf32_Dyn <0x12, <0xA8>>; DT_RELSZ|18-0-0-0-168-0-0-0
73496|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73504|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73512|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73520|data|Elf32_Dyn <0x6FFFFFFE, <0x750>>; DT_VERNEED|254-255-255-111-80-7-0-0
73528|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73536|data|Elf32_Dyn <0x6FFFFFF0, <0x6FA>>; DT_VERSYM|240-255-255-111-250-6-0-0
73544|data|Elf32_Dyn <0x6FFFFFFA, <0xC>>; DT_RELCOUNT|250-255-255-111-12-0-0-0
73552|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73592|data|DCD stru_11E70|112-30-1-0
73596|data|DCD 0|0-0-0-0
73600|data|DCD dword_0|0-0-0-0
73604|data|DCD __imp___cxa_finalize|128-32-1-0
73608|data|DCD __imp_construct_scsi_pt_obj|132-32-1-0
73612|data|DCD __imp_sg_cmds_close_device|140-32-1-0
73616|data|DCD __imp___stack_chk_fail|148-32-1-0
73620|data|DCD __imp_fwrite|156-32-1-0
73624|data|DCD __imp___libc_start_main|160-32-1-0
73628|data|DCD __imp___vfprintf_chk|164-32-1-0
73632|data|DCD __imp___gmon_start__|220-32-1-0
73636|data|DCD __imp_getopt_long|168-32-1-0
73640|data|DCD __imp_do_scsi_pt|172-32-1-0
73644|data|DCD __imp_destruct_scsi_pt_obj|176-32-1-0
73648|data|DCD __imp_sg_get_llnum|180-32-1-0
73652|data|DCD __imp_set_scsi_pt_sense|184-32-1-0
73656|data|DCD __imp_safe_strerror|188-32-1-0
73660|data|DCD __imp_sg_cmds_process_resp|192-32-1-0
73664|data|DCD __imp_sg_get_category_sense_str|196-32-1-0
73668|data|DCD __imp_sg_cmds_open_device|200-32-1-0
73672|data|DCD __imp_abort|208-32-1-0
73676|data|DCD __imp_set_scsi_pt_cdb|212-32-1-0
73680|data|DCD __libc_csu_fini+1|221-15-0-0
73684|data|DCD __imp___cxa_finalize|128-32-1-0
73688|data|DCD _ITM_deregisterTMCloneTable|216-32-1-0
73692|data|DCD __stack_chk_guard|136-32-1-0
73696|data|DCD optind|144-32-1-0
73700|data|DCD stderr|152-32-1-0
73704|data|DCD __imp___gmon_start__|220-32-1-0
73708|data|DCD __libc_csu_init+1|157-15-0-0
73712|data|DCD main+1|213-9-0-0
73716|data|DCD _Jv_RegisterClasses|224-32-1-0
73720|data|DCD _ITM_registerTMCloneTable|228-32-1-0
73724|data|DCD optarg|204-32-1-0
73848|data|% 1; Alternative name is '__bss_start'|255
