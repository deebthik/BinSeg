address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|9-24-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x31F0; SHT file offset|240-49-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x2568; File offset|104-37-0-0
60|data|DCD unk_2568; Virtual address|104-37-0-0
64|data|DCD 0x2568; Physical address|104-37-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x2574; Size in file image|116-37-0-0
168|data|DCD 0x2574; Size in memory image|116-37-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E28; File offset|40-46-0-0
188|data|DCD off_12E28; Virtual address|40-46-1-0
192|data|DCD 0x12E28; Physical address|40-46-1-0
196|data|DCD 0x2A0; Size in file image|160-2-0-0
200|data|DCD 0x2A4; Size in memory image|164-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E34; File offset|52-46-0-0
220|data|DCD stru_12E34; Virtual address|52-46-1-0
224|data|DCD 0x12E34; Physical address|52-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E28; File offset|40-46-0-0
316|data|DCD off_12E28; Virtual address|40-46-1-0
320|data|DCD 0x12E28; Physical address|40-46-1-0
324|data|DCD 0x1D8; Size in file image|216-1-0-0
328|data|DCD 0x1D8; Size in memory image|216-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x3A, 0x22, 4, 0xAD, 0xDF, 8, 0x8B, 0xA2, 0xE0, 0x3F; Desc|58-34-4-173-223-8-139-162-224-63-0-190-218-201-142-171-246-37-231-94
436|data|DCD 3|3-0-0-0
440|data|DCD 0x2C|44-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x2C, 0x30, 0x35|44-0-0-0-48-0-0-0-53-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_5A4 - byte_5A4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_5A4 - byte_5A4, dword_12E30, 0, 3, 0, 0x14>|0-0-0-0-48-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_5A4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|235-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aSmpInitiatorCl - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_initiator_close"|235-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_5A4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|19-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aDstrhex - byte_5A4, dword_0, 0, 0x12, 0, 0>; "dStrHex"|208-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aFgets - byte_5A4, dword_0, 0, 0x12, 0, 0>; "fgets"|110-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aStackChkGuard - byte_5A4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|40-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
676|data|Elf32_Sym <aSmpGetFuncDefR - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_get_func_def_resp_len"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aOptind - byte_5A4, dword_0, 0, 0x11, 0, 0>; "optind"|35-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
708|data|Elf32_Sym <aStackChkFail - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|66-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aSmpIsNaa5 - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_is_naa5"|255-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aStderr - byte_5A4, dword_0, 0, 0x11, 0, 0>; "stderr"|202-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
756|data|Elf32_Sym <aFwrite - byte_5A4, dword_0, 0, 0x12, 0, 0>; "fwrite"|221-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aGetenv - byte_5A4, dword_0, 0, 0x12, 0, 0>; "getenv"|188-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aLibcStartMain - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|2-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aGmonStart - byte_5A4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|47-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
820|data|Elf32_Sym <aGetoptLong - byte_5A4, dword_0, 0, 0x12, 0, 0>; "getopt_long"|209-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aCtypeBLoc - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__ctype_b_loc"|174-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aStrlen - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strlen"|116-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aStrchr - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strchr"|228-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aStdin - byte_5A4, dword_0, 0, 0x11, 0, 0>; "stdin"|97-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
900|data|Elf32_Sym <aSmpSendReq - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_send_req"|181-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aErrnoLocation - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__errno_location"|130-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aIsoc99Sscanf - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|42-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aMemset - byte_5A4, dword_0, 0, 0x12, 0, 0>; "memset"|123-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aPutchar - byte_5A4, dword_0, 0, 0x12, 0, 0>; "putchar"|83-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aStrncpy - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strncpy"|58-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aSmpGetDhnum - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_get_dhnum"|11-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aFprintfChk - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|147-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aFclose - byte_5A4, dword_0, 0, 0x12, 0, 0>; "fclose"|167-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aFputc - byte_5A4, dword_0, 0, 0x12, 0, 0>; "fputc"|161-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aSafeStrerror - byte_5A4, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|194-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aJvRegisterclas - byte_5A4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|62-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1092|data|Elf32_Sym <aFopen64 - byte_5A4, dword_0, 0, 0x12, 0, 0>; "fopen64"|250-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aSmpGetLlnum - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_get_llnum"|146-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aItmRegistertmc - byte_5A4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|82-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1140|data|Elf32_Sym <aSmpGetFuncResS - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_get_func_res_str"|160-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1156|data|Elf32_Sym <aSmpGetNum - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_get_num"|134-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1172|data|Elf32_Sym <aSmpInitiatorOp - byte_5A4, dword_0, 0, 0x12, 0, 0>; "smp_initiator_open"|216-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1188|data|Elf32_Sym <aOptarg - byte_5A4, dword_0, 0, 0x11, 0, 0>; "optarg"|195-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1204|data|Elf32_Sym <aAbort - byte_5A4, dword_0, 0, 0x12, 0, 0>; "abort"|91-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1220|data|Elf32_Sym <aStrspn - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strspn"|103-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1236|data|Elf32_Sym <aBssEnd+1 - byte_5A4, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|105-2-0-0-204-48-1-0-0-0-0-0-16-0-24-0
1252|data|Elf32_Sym <aEdata - byte_5A4, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|71-2-0-0-200-48-1-0-0-0-0-0-16-0-23-0
1268|data|Elf32_Sym <aDataStart - byte_5A4, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|58-2-0-0-0-48-1-0-0-0-0-0-16-0-23-0
1284|data|Elf32_Sym <aEnd_0 - byte_5A4, _end, 0, 0x10, 0, 0x18>; "_end"|124-2-0-0-204-48-1-0-0-0-0-0-16-0-24-0
1300|data|Elf32_Sym <aBssEnd - byte_5A4, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|104-2-0-0-204-48-1-0-0-0-0-0-16-0-24-0
1316|data|Elf32_Sym <aLibcCsuInit - byte_5A4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|145-2-0-0-69-25-0-0-64-0-0-0-18-0-13-0
1332|data|Elf32_Sym <aBssStart - byte_5A4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|78-2-0-0-200-48-1-0-0-0-0-0-16-0-24-0
1348|data|Elf32_Sym <aLibcStartMain+0xD - byte_5A4, main+1, 0xB60, 0x12, 0, 0xD>; "main"|15-2-0-0-169-12-0-0-96-11-0-0-18-0-13-0
1364|data|Elf32_Sym <aLibcCsuInit+0xA - byte_5A4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|155-2-0-0-252-10-0-0-0-0-0-0-18-0-11-0
1380|data|Elf32_Sym <aLibcCsuFini - byte_5A4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|129-2-0-0-133-25-0-0-2-0-0-0-18-0-13-0
1396|data|Elf32_Sym <aBssStart_0 - byte_5A4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|90-2-0-0-200-48-1-0-0-0-0-0-16-0-24-0
1412|data|Elf32_Sym <aLibcCsuFini+0xA - byte_5A4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|139-2-0-0-136-25-0-0-0-0-0-0-18-0-14-0
1428|data|Elf32_Sym <aEnd - byte_5A4, _end, 0, 0x10, 0, 0x18>; "__end__"|116-2-0-0-204-48-1-0-0-0-0-0-16-0-24-0
1444|data|DCB 0|0
1445|data|DCB "libsmputils1.so.1",0|108-105-98-115-109-112-117-116-105-108-115-49-46-115-111-46-49-0
1463|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1491|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1506|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1526|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1552|data|DCB "smp_get_func_def_resp_len",0|115-109-112-95-103-101-116-95-102-117-110-99-95-100-101-102-95-114-101-115-112-95-108-101-110-0
1578|data|DCB "smp_get_num",0|115-109-112-95-103-101-116-95-110-117-109-0
1590|data|DCB "smp_get_llnum",0|115-109-112-95-103-101-116-95-108-108-110-117-109-0
1604|data|DCB "smp_get_func_res_str",0|115-109-112-95-103-101-116-95-102-117-110-99-95-114-101-115-95-115-116-114-0
1625|data|DCB "smp_send_req",0|115-109-112-95-115-101-110-100-95-114-101-113-0
1638|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1652|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1660|data|DCB "smp_initiator_open",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-111-112-101-110-0
1679|data|DCB "smp_initiator_close",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-99-108-111-115-101-0
1699|data|DCB "smp_is_naa5",0|115-109-112-95-105-115-95-110-97-97-53-0
1711|data|DCB "smp_get_dhnum",0|115-109-112-95-103-101-116-95-100-104-110-117-109-0
1725|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1735|data|DCB "optind",0|111-112-116-105-110-100-0
1742|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1758|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1766|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1783|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1791|data|DCB "abort",0|97-98-111-114-116-0
1797|data|DCB "stdin",0|115-116-100-105-110-0
1803|data|DCB "strspn",0|115-116-114-115-112-110-0
1810|data|DCB "fgets",0|102-103-101-116-115-0
1816|data|DCB "strlen",0|115-116-114-108-101-110-0
1823|data|DCB "memset",0|109-101-109-115-101-116-0
1830|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1847|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1861|data|DCB "fputc",0|102-112-117-116-99-0
1867|data|DCB "fclose",0|102-99-108-111-115-101-0
1874|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
1888|data|DCB "getenv",0|103-101-116-101-110-118-0
1895|data|DCB "optarg",0|111-112-116-97-114-103-0
1902|data|DCB "stderr",0|115-116-100-101-114-114-0
1909|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1921|data|DCB "fwrite",0|102-119-114-105-116-101-0
1928|data|DCB "strchr",0|115-116-114-99-104-114-0
1935|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1950|data|DCB "fopen64",0|102-111-112-101-110-54-52-0
1958|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1976|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1996|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
2014|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
2027|data|DCB "_edata",0|95-101-100-97-116-97-0
2034|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2046|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2060|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2072|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2080|data|DCB "_end",0|95-101-110-100-0
2085|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2101|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2117|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2127|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
2137|data|DCB 0|0
2138|data|DCW 0|0-0
2140|data|DCW 0|0-0
2142|data|DCW 0|0-0
2144|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2146|data|DCW 0; local  symbol: smp_initiator_close|0-0
2148|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2150|data|DCW 0; local  symbol: dStrHex|0-0
2152|data|DCW 2; fgets@@GLIBC_2.4|2-0
2154|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
2156|data|DCW 0; local  symbol: smp_get_func_def_resp_len|0-0
2158|data|DCW 2; optind@@GLIBC_2.4|2-0
2160|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2162|data|DCW 0; local  symbol: smp_is_naa5|0-0
2164|data|DCW 2; stderr@@GLIBC_2.4|2-0
2166|data|DCW 2; fwrite@@GLIBC_2.4|2-0
2168|data|DCW 2; getenv@@GLIBC_2.4|2-0
2170|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2172|data|DCW 0; local  symbol: __gmon_start__|0-0
2174|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
2176|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
2178|data|DCW 2; strlen@@GLIBC_2.4|2-0
2180|data|DCW 2; strchr@@GLIBC_2.4|2-0
2182|data|DCW 2; stdin@@GLIBC_2.4|2-0
2184|data|DCW 0; local  symbol: smp_send_req|0-0
2186|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
2188|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
2190|data|DCW 2; memset@@GLIBC_2.4|2-0
2192|data|DCW 2; putchar@@GLIBC_2.4|2-0
2194|data|DCW 2; strncpy@@GLIBC_2.4|2-0
2196|data|DCW 0; local  symbol: smp_get_dhnum|0-0
2198|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
2200|data|DCW 2; fclose@@GLIBC_2.4|2-0
2202|data|DCW 2; fputc@@GLIBC_2.4|2-0
2204|data|DCW 0; local  symbol: safe_strerror|0-0
2206|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2208|data|DCW 2; fopen64@@GLIBC_2.4|2-0
2210|data|DCW 0; local  symbol: smp_get_llnum|0-0
2212|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2214|data|DCW 0; local  symbol: smp_get_func_res_str|0-0
2216|data|DCW 0; local  symbol: smp_get_num|0-0
2218|data|DCW 0; local  symbol: smp_initiator_open|0-0
2220|data|DCW 2; optarg@@GLIBC_2.4|2-0
2222|data|DCW 2; abort@@GLIBC_2.4|2-0
2224|data|DCW 2; strspn@@GLIBC_2.4|2-0
2226|data|DCW 1; global symbol: _bss_end__|1-0
2228|data|DCW 1; global symbol: _edata|1-0
2230|data|DCW 1; global symbol: __data_start|1-0
2232|data|DCW 1; global symbol: _end|1-0
2234|data|DCW 1; global symbol: __bss_end__|1-0
2236|data|DCW 1; global symbol: __libc_csu_init|1-0
2238|data|DCW 1; global symbol: __bss_start|1-0
2240|data|DCW 1; global symbol: main|1-0
2242|data|DCW 1; global symbol: _init|1-0
2244|data|DCW 1; global symbol: __libc_csu_fini|1-0
2246|data|DCW 1; global symbol: __bss_start__|1-0
2248|data|DCW 1; global symbol: _fini|1-0
2250|data|DCW 1; global symbol: __end__|1-0
2252|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_5A4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-20-2-0-0-16-0-0-0-32-0-0-0
2268|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_5A4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-161-2-0-0-0-0-0-0
2284|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_5A4, 0x10, 0>; "libc.so.6"|1-0-2-0-25-1-0-0-16-0-0-0-0-0-0-0
2300|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_5A4, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-171-2-0-0-16-0-0-0
2316|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_5A4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-161-2-0-0-0-0-0-0
2332|data|Elf32_Rel <0x12E28, 0x17>; R_ARM_RELATIVE|40-46-1-0-23-0-0-0
2340|data|Elf32_Rel <0x12E2C, 0x17>; R_ARM_RELATIVE|44-46-1-0-23-0-0-0
2348|data|Elf32_Rel <0x12FCC, 0x17>; R_ARM_RELATIVE|204-47-1-0-23-0-0-0
2356|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2364|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2372|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2380|data|Elf32_Rel <0x13008, 0x17>; R_ARM_RELATIVE|8-48-1-0-23-0-0-0
2388|data|Elf32_Rel <0x13018, 0x17>; R_ARM_RELATIVE|24-48-1-0-23-0-0-0
2396|data|Elf32_Rel <0x13028, 0x17>; R_ARM_RELATIVE|40-48-1-0-23-0-0-0
2404|data|Elf32_Rel <0x13038, 0x17>; R_ARM_RELATIVE|56-48-1-0-23-0-0-0
2412|data|Elf32_Rel <0x13048, 0x17>; R_ARM_RELATIVE|72-48-1-0-23-0-0-0
2420|data|Elf32_Rel <0x13058, 0x17>; R_ARM_RELATIVE|88-48-1-0-23-0-0-0
2428|data|Elf32_Rel <0x13068, 0x17>; R_ARM_RELATIVE|104-48-1-0-23-0-0-0
2436|data|Elf32_Rel <0x13078, 0x17>; R_ARM_RELATIVE|120-48-1-0-23-0-0-0
2444|data|Elf32_Rel <0x13088, 0x17>; R_ARM_RELATIVE|136-48-1-0-23-0-0-0
2452|data|Elf32_Rel <0x13098, 0x17>; R_ARM_RELATIVE|152-48-1-0-23-0-0-0
2460|data|Elf32_Rel <0x130A8, 0x17>; R_ARM_RELATIVE|168-48-1-0-23-0-0-0
2468|data|Elf32_Rel <0x12FD0, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|208-47-1-0-21-3-0-0
2476|data|Elf32_Rel <0x12FD4, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|212-47-1-0-21-5-0-0
2484|data|Elf32_Rel <0x12FD8, 0x815>; R_ARM_GLOB_DAT __stack_chk_guard|216-47-1-0-21-8-0-0
2492|data|Elf32_Rel <0x12FDC, 0xA15>; R_ARM_GLOB_DAT optind|220-47-1-0-21-10-0-0
2500|data|Elf32_Rel <0x12FE0, 0xD15>; R_ARM_GLOB_DAT stderr|224-47-1-0-21-13-0-0
2508|data|Elf32_Rel <0x12FE4, 0x1115>; R_ARM_GLOB_DAT __gmon_start__|228-47-1-0-21-17-0-0
2516|data|Elf32_Rel <0x12FE8, 0x1615>; R_ARM_GLOB_DAT stdin|232-47-1-0-21-22-0-0
2524|data|Elf32_Rel <0x12FF4, 0x2215>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-34-0-0
2532|data|Elf32_Rel <0x12FF8, 0x2515>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-37-0-0
2540|data|Elf32_Rel <0x12FFC, 0x2915>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-41-0-0
2548|data|Elf32_Rel <0x12F48, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|72-47-1-0-22-3-0-0
2556|data|Elf32_Rel <0x12F4C, 0x416>; R_ARM_JUMP_SLOT smp_initiator_close|76-47-1-0-22-4-0-0
2564|data|Elf32_Rel <0x12F50, 0x616>; R_ARM_JUMP_SLOT dStrHex|80-47-1-0-22-6-0-0
2572|data|Elf32_Rel <0x12F54, 0x716>; R_ARM_JUMP_SLOT fgets|84-47-1-0-22-7-0-0
2580|data|Elf32_Rel <0x12F58, 0x916>; R_ARM_JUMP_SLOT smp_get_func_def_resp_len|88-47-1-0-22-9-0-0
2588|data|Elf32_Rel <0x12F5C, 0xB16>; R_ARM_JUMP_SLOT __stack_chk_fail|92-47-1-0-22-11-0-0
2596|data|Elf32_Rel <0x12F60, 0xC16>; R_ARM_JUMP_SLOT smp_is_naa5|96-47-1-0-22-12-0-0
2604|data|Elf32_Rel <0x12F64, 0xE16>; R_ARM_JUMP_SLOT fwrite|100-47-1-0-22-14-0-0
2612|data|Elf32_Rel <0x12F68, 0xF16>; R_ARM_JUMP_SLOT getenv|104-47-1-0-22-15-0-0
2620|data|Elf32_Rel <0x12F6C, 0x1016>; R_ARM_JUMP_SLOT __libc_start_main|108-47-1-0-22-16-0-0
2628|data|Elf32_Rel <0x12F70, 0x1116>; R_ARM_JUMP_SLOT __gmon_start__|112-47-1-0-22-17-0-0
2636|data|Elf32_Rel <0x12F74, 0x1216>; R_ARM_JUMP_SLOT getopt_long|116-47-1-0-22-18-0-0
2644|data|Elf32_Rel <0x12F78, 0x1316>; R_ARM_JUMP_SLOT __ctype_b_loc|120-47-1-0-22-19-0-0
2652|data|Elf32_Rel <0x12F7C, 0x1416>; R_ARM_JUMP_SLOT strlen|124-47-1-0-22-20-0-0
2660|data|Elf32_Rel <0x12F80, 0x1516>; R_ARM_JUMP_SLOT strchr|128-47-1-0-22-21-0-0
2668|data|Elf32_Rel <0x12F84, 0x1716>; R_ARM_JUMP_SLOT smp_send_req|132-47-1-0-22-23-0-0
2676|data|Elf32_Rel <0x12F88, 0x1816>; R_ARM_JUMP_SLOT __errno_location|136-47-1-0-22-24-0-0
2684|data|Elf32_Rel <0x12F8C, 0x1916>; R_ARM_JUMP_SLOT __isoc99_sscanf|140-47-1-0-22-25-0-0
2692|data|Elf32_Rel <0x12F90, 0x1A16>; R_ARM_JUMP_SLOT memset|144-47-1-0-22-26-0-0
2700|data|Elf32_Rel <0x12F94, 0x1B16>; R_ARM_JUMP_SLOT putchar|148-47-1-0-22-27-0-0
2708|data|Elf32_Rel <0x12F98, 0x1C16>; R_ARM_JUMP_SLOT strncpy|152-47-1-0-22-28-0-0
2716|data|Elf32_Rel <0x12F9C, 0x1D16>; R_ARM_JUMP_SLOT smp_get_dhnum|156-47-1-0-22-29-0-0
2724|data|Elf32_Rel <0x12FA0, 0x1E16>; R_ARM_JUMP_SLOT __fprintf_chk|160-47-1-0-22-30-0-0
2732|data|Elf32_Rel <0x12FA4, 0x1F16>; R_ARM_JUMP_SLOT fclose|164-47-1-0-22-31-0-0
2740|data|Elf32_Rel <0x12FA8, 0x2016>; R_ARM_JUMP_SLOT fputc|168-47-1-0-22-32-0-0
2748|data|Elf32_Rel <0x12FAC, 0x2116>; R_ARM_JUMP_SLOT safe_strerror|172-47-1-0-22-33-0-0
2756|data|Elf32_Rel <0x12FB0, 0x2316>; R_ARM_JUMP_SLOT fopen64|176-47-1-0-22-35-0-0
2764|data|Elf32_Rel <0x12FB4, 0x2416>; R_ARM_JUMP_SLOT smp_get_llnum|180-47-1-0-22-36-0-0
2772|data|Elf32_Rel <0x12FB8, 0x2616>; R_ARM_JUMP_SLOT smp_get_func_res_str|184-47-1-0-22-38-0-0
2780|data|Elf32_Rel <0x12FBC, 0x2716>; R_ARM_JUMP_SLOT smp_get_num|188-47-1-0-22-39-0-0
2788|data|Elf32_Rel <0x12FC0, 0x2816>; R_ARM_JUMP_SLOT smp_initiator_open|192-47-1-0-22-40-0-0
2796|data|Elf32_Rel <0x12FC4, 0x2A16>; R_ARM_JUMP_SLOT abort|196-47-1-0-22-42-0-0
2804|data|Elf32_Rel <0x12FC8, 0x2B16>; R_ARM_JUMP_SLOT strspn|200-47-1-0-22-43-0-0
2812|code|PUSH            {R3,LR}; _init|8-64-45-233
2816|code|BL              sub_1850|82-3-0-235
2820|code|POP             {R3,PC}|8-128-189-232
2824|code|PUSH            {LR}|4-224-45-229
2828|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xB18)|4-224-159-229
2832|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2836|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2840|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB18|36-36-1-0
2844|code|ADR             R12, 0xB24|0-198-143-226
2848|code|ADD             R12, R12, #0x12000|18-202-140-226
2852|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12B24)]!; __imp___cxa_finalize|36-244-188-229
2856|code|ADR             R12, 0xB30|0-198-143-226
2860|code|ADD             R12, R12, #0x12000|18-202-140-226
2864|code|LDR             PC, [R12,#(smp_initiator_close_ptr - 0x12B30)]!; __imp_smp_initiator_close|28-244-188-229
2868|code|ADR             R12, 0xB3C|0-198-143-226
2872|code|ADD             R12, R12, #0x12000|18-202-140-226
2876|code|LDR             PC, [R12,#(dStrHex_ptr - 0x12B3C)]!; __imp_dStrHex|20-244-188-229
2880|code|ADR             R12, 0xB48|0-198-143-226
2884|code|ADD             R12, R12, #0x12000|18-202-140-226
2888|code|LDR             PC, [R12,#(fgets_ptr - 0x12B48)]!; __imp_fgets|12-244-188-229
2892|code|ADR             R12, 0xB54|0-198-143-226
2896|code|ADD             R12, R12, #0x12000|18-202-140-226
2900|code|LDR             PC, [R12,#(smp_get_func_def_resp_len_ptr - 0x12B54)]!; __imp_smp_get_func_def_resp_len|4-244-188-229
2904|code|ADR             R12, 0xB60|0-198-143-226
2908|code|ADD             R12, R12, #0x12000|18-202-140-226
2912|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x12B60)]!; __imp___stack_chk_fail|252-243-188-229
2916|code|ADR             R12, 0xB6C|0-198-143-226
2920|code|ADD             R12, R12, #0x12000|18-202-140-226
2924|code|LDR             PC, [R12,#(smp_is_naa5_ptr - 0x12B6C)]!; __imp_smp_is_naa5|244-243-188-229
2928|code|ADR             R12, 0xB78|0-198-143-226
2932|code|ADD             R12, R12, #0x12000|18-202-140-226
2936|code|LDR             PC, [R12,#(fwrite_ptr - 0x12B78)]!; __imp_fwrite|236-243-188-229
2940|code|ADR             R12, 0xB84|0-198-143-226
2944|code|ADD             R12, R12, #0x12000|18-202-140-226
2948|code|LDR             PC, [R12,#(getenv_ptr - 0x12B84)]!; __imp_getenv|228-243-188-229
2952|code|ADR             R12, 0xB90|0-198-143-226
2956|code|ADD             R12, R12, #0x12000|18-202-140-226
2960|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12B90)]!; __imp___libc_start_main|220-243-188-229
2964|code|ADR             R12, 0xB9C|0-198-143-226
2968|code|ADD             R12, R12, #0x12000|18-202-140-226
2972|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12B9C)]!; __imp___gmon_start__|212-243-188-229
2976|code|ADR             R12, 0xBA8|0-198-143-226
2980|code|ADD             R12, R12, #0x12000|18-202-140-226
2984|code|LDR             PC, [R12,#(getopt_long_ptr - 0x12BA8)]!; __imp_getopt_long|204-243-188-229
2988|code|ADR             R12, 0xBB4|0-198-143-226
2992|code|ADD             R12, R12, #0x12000|18-202-140-226
2996|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x12BB4)]!; __imp___ctype_b_loc|196-243-188-229
3000|code|ADR             R12, 0xBC0|0-198-143-226
3004|code|ADD             R12, R12, #0x12000|18-202-140-226
3008|code|LDR             PC, [R12,#(strlen_ptr - 0x12BC0)]!; __imp_strlen|188-243-188-229
3012|code|ADR             R12, 0xBCC|0-198-143-226
3016|code|ADD             R12, R12, #0x12000|18-202-140-226
3020|code|LDR             PC, [R12,#(strchr_ptr - 0x12BCC)]!; __imp_strchr|180-243-188-229
3024|code|ADR             R12, 0xBD8|0-198-143-226
3028|code|ADD             R12, R12, #0x12000|18-202-140-226
3032|code|LDR             PC, [R12,#(smp_send_req_ptr - 0x12BD8)]!; __imp_smp_send_req|172-243-188-229
3036|code|ADR             R12, 0xBE4|0-198-143-226
3040|code|ADD             R12, R12, #0x12000|18-202-140-226
3044|code|LDR             PC, [R12,#(__errno_location_ptr - 0x12BE4)]!; __imp___errno_location|164-243-188-229
3048|code|ADR             R12, 0xBF0|0-198-143-226
3052|code|ADD             R12, R12, #0x12000|18-202-140-226
3056|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x12BF0)]!; __imp___isoc99_sscanf|156-243-188-229
3060|code|ADR             R12, 0xBFC|0-198-143-226
3064|code|ADD             R12, R12, #0x12000|18-202-140-226
3068|code|LDR             PC, [R12,#(memset_ptr - 0x12BFC)]!; __imp_memset|148-243-188-229
3072|code|ADR             R12, 0xC08|0-198-143-226
3076|code|ADD             R12, R12, #0x12000|18-202-140-226
3080|code|LDR             PC, [R12,#(putchar_ptr - 0x12C08)]!; __imp_putchar|140-243-188-229
3084|code|ADR             R12, 0xC14|0-198-143-226
3088|code|ADD             R12, R12, #0x12000|18-202-140-226
3092|code|LDR             PC, [R12,#(strncpy_ptr - 0x12C14)]!; __imp_strncpy|132-243-188-229
3096|code|ADR             R12, 0xC20|0-198-143-226
3100|code|ADD             R12, R12, #0x12000|18-202-140-226
3104|code|LDR             PC, [R12,#(smp_get_dhnum_ptr - 0x12C20)]!; __imp_smp_get_dhnum|124-243-188-229
3108|code|ADR             R12, 0xC2C|0-198-143-226
3112|code|ADD             R12, R12, #0x12000|18-202-140-226
3116|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x12C2C)]!; __imp___fprintf_chk|116-243-188-229
3120|code|ADR             R12, 0xC38|0-198-143-226
3124|code|ADD             R12, R12, #0x12000|18-202-140-226
3128|code|LDR             PC, [R12,#(fclose_ptr - 0x12C38)]!; __imp_fclose|108-243-188-229
3132|code|ADR             R12, 0xC44|0-198-143-226
3136|code|ADD             R12, R12, #0x12000|18-202-140-226
3140|code|LDR             PC, [R12,#(fputc_ptr - 0x12C44)]!; __imp_fputc|100-243-188-229
3144|code|ADR             R12, 0xC50|0-198-143-226
3148|code|ADD             R12, R12, #0x12000|18-202-140-226
3152|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x12C50)]!; __imp_safe_strerror|92-243-188-229
3156|code|ADR             R12, 0xC5C|0-198-143-226
3160|code|ADD             R12, R12, #0x12000|18-202-140-226
3164|code|LDR             PC, [R12,#(fopen64_ptr - 0x12C5C)]!; __imp_fopen64|84-243-188-229
3168|code|ADR             R12, 0xC68|0-198-143-226
3172|code|ADD             R12, R12, #0x12000|18-202-140-226
3176|code|LDR             PC, [R12,#(smp_get_llnum_ptr - 0x12C68)]!; __imp_smp_get_llnum|76-243-188-229
3180|code|ADR             R12, 0xC74|0-198-143-226
3184|code|ADD             R12, R12, #0x12000|18-202-140-226
3188|code|LDR             PC, [R12,#(smp_get_func_res_str_ptr - 0x12C74)]!; __imp_smp_get_func_res_str|68-243-188-229
3192|code|ADR             R12, 0xC80|0-198-143-226
3196|code|ADD             R12, R12, #0x12000|18-202-140-226
3200|code|LDR             PC, [R12,#(smp_get_num_ptr - 0x12C80)]!; __imp_smp_get_num|60-243-188-229
3204|code|ADR             R12, 0xC8C|0-198-143-226
3208|code|ADD             R12, R12, #0x12000|18-202-140-226
3212|code|LDR             PC, [R12,#(smp_initiator_open_ptr - 0x12C8C)]!; __imp_smp_initiator_open|52-243-188-229
3216|code|ADR             R12, 0xC98|0-198-143-226
3220|code|ADD             R12, R12, #0x12000|18-202-140-226
3224|code|LDR             PC, [R12,#(abort_ptr - 0x12C98)]!; __imp_abort|44-243-188-229
3228|code|ADR             R12, 0xCA4|0-198-143-226
3232|code|ADD             R12, R12, #0x12000|18-202-140-226
3236|code|LDR             PC, [R12,#(strspn_ptr - 0x12CA4)]!; __imp_strspn|36-243-188-229
3240|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3244|code|SUBW            SP, SP, #0xA94|173-246-148-45
3248|code|ADD.W           R3, SP, #0xAB8+s|13-245-209-99
3252|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xCC6)|223-248-104-106
3256|code|STR             R3, [SP,#0xAB8+var_A7C]|15-147
3258|code|ADD             R4, SP, #0xAB8+var_A70|18-172
3260|code|MOV             R2, R3|26-70
3262|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x12F3C)|223-248-100-58
3266|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
3268|code|STR             R4, [SP,#0xAB8+var_A78]|16-148
3270|code|ADD             R5, SP, #0xAB8+var_830|162-173
3272|code|STR             R5, [SP,#0xAB8+var_AA4]|5-149
3274|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
3276|code|MOV.W           R8, #0|79-240-0-8
3280|code|MOV.W           R10, #0|79-240-0-10
3284|code|MOV.W           R11, #0|79-240-0-11
3288|code|MOV             R7, R0|7-70
3290|code|STRD.W          R10, R11, [SP,#0xAB8+var_A90]|205-233-10-171
3294|code|STR             R3, [SP,#0xAB8+var_AA0]|6-147
3296|code|MOV             R0, R2; s|16-70
3298|code|LDR             R3, [R3]|27-104
3300|code|MOVW            R2, #0x404; n|64-242-4-66
3304|code|MOV             R9, R1|137-70
3306|code|LDR.W           R11, =(aBEFHhiRsSVv - 0xD02); "b:E:F:hHI:rs:S:vV"|223-248-60-186
3310|code|MOV             R1, R8; c|65-70
3312|code|LDR.W           R10, =(off_13008 - 0xD1E); "broadcast"|223-248-56-170
3316|code|STR.W           R3, [SP,#0xAB8+var_2C]|205-248-140-58
3320|code|MOV             R4, R8|68-70
3322|code|STR.W           R8, [SP,#0xAB8+var_A70]|205-248-72-128
3326|code|ADD             R11, PC; "b:E:F:hHI:rs:S:vV"|251-68
3328|code|STR.W           R8, [SP,#0xAB8+var_A98]|205-248-32-128
3332|code|BLX             memset|255-247-118-239
3336|code|MOV             R1, R8; c|65-70
3338|code|LDR             R0, [SP,#0xAB8+var_AA4]; s|5-152
3340|code|MOV.W           R2, #0x200; n|79-244-0-114
3344|code|STR.W           R8, [SP,#0xAB8+var_A80]|205-248-56-128
3348|code|ADD             R5, SP, #0xAB8+var_A6C|19-173
3350|code|BLX             memset|255-247-110-239
3354|code|ADD             R10, PC; off_13008|250-68
3356|code|STR.W           R8, [SP,#0xAB8+var_A9C]|205-248-28-128
3360|code|STR.W           R8, [SP,#0xAB8+stream]|205-248-48-128
3364|code|STR.W           R8, [SP,#0xAB8+accept]|205-248-36-128
3368|code|STR.W           R8, [SP,#0xAB8+var_A84]|205-248-52-128
3372|code|STR             R5, [SP,#0xAB8+longind]; longind|0-149
3374|code|MOV             R2, R11; shortopts|90-70
3376|code|MOV             R0, R7; argc|56-70
3378|code|MOV             R1, R9; argv|73-70
3380|code|MOV             R3, R10; longopts|83-70
3382|code|STR.W           R8, [R5]|197-248-0-128
3386|code|BLX             getopt_long|255-247-50-239
3390|code|ADDS            R2, R0, #1|66-28
3392|code|BEQ.W           loc_EC8|0-240-194-128
3396|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
3400|code|CMP             R3, #0x37|55-43
3402|code|BHI.W           def_D4E; jumptable 00000D4E default case, cases 64-68,71,74-82,84,85,87-97,99-103,105-113,116,117|0-242-167-128
3406|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3410|data|DCB 0x97; jump table for switch statement|151
3411|data|DCB 0xA5|165
3412|data|DCB 0xA5|165
3413|data|DCB 0xA5|165
3414|data|DCB 0xA5|165
3415|data|DCB 0xA5|165
3416|data|DCB 0x7F|127
3417|data|DCB 0x79|121
3418|data|DCB 0xA5|165
3419|data|DCB 0x75|117
3420|data|DCB 0x66|102
3421|data|DCB 0xA5|165
3422|data|DCB 0xA5|165
3423|data|DCB 0xA5|165
3424|data|DCB 0xA5|165
3425|data|DCB 0xA5|165
3426|data|DCB 0xA5|165
3427|data|DCB 0xA5|165
3428|data|DCB 0xA5|165
3429|data|DCB 0xA5|165
3430|data|DCB 0x60|96
3431|data|DCB 0xA5|165
3432|data|DCB 0xA5|165
3433|data|DCB 0x47|71
3434|data|DCB 0xA5|165
3435|data|DCB 0xA5|165
3436|data|DCB 0xA5|165
3437|data|DCB 0xA5|165
3438|data|DCB 0xA5|165
3439|data|DCB 0xA5|165
3440|data|DCB 0xA5|165
3441|data|DCB 0xA5|165
3442|data|DCB 0xA5|165
3443|data|DCB 0xA5|165
3444|data|DCB 0xA5|165
3445|data|DCB 0x31|49
3446|data|DCB 0xA5|165
3447|data|DCB 0xA5|165
3448|data|DCB 0xA5|165
3449|data|DCB 0xA5|165
3450|data|DCB 0xA5|165
3451|data|DCB 0x97|151
3452|data|DCB 0xA5|165
3453|data|DCB 0xA5|165
3454|data|DCB 0xA5|165
3455|data|DCB 0xA5|165
3456|data|DCB 0xA5|165
3457|data|DCB 0xA5|165
3458|data|DCB 0xA5|165
3459|data|DCB 0xA5|165
3460|data|DCB 0xA5|165
3461|data|DCB 0x2D|45
3462|data|DCB 0x1E|30
3463|data|DCB 0xA5|165
3464|data|DCB 0xA5|165
3465|data|DCB 0x1C|28
3466|code|ADDS            R4, #1; jumptable 00000D4E case 118|1-52
3468|code|B               loc_D2C|206-231
3470|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000D4E case 115|223-248-160-57
3474|code|LDR             R3, [R6,R3]; optarg|243-88
3476|code|LDR             R0, [R3]|24-104
3478|code|BLX             smp_get_llnum|255-247-100-239
3482|code|ADDS            R3, R1, #1|75-28
3484|code|IT EQ|8-191
3486|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3490|code|BEQ.W           loc_101C|0-240-59-129
3494|code|STRD.W          R0, R1, [SP,#0xAB8+var_A90]|205-233-10-1
3498|code|B               loc_D2C|191-231
3500|code|LDR             R3, [SP,#0xAB8+var_A98]; jumptable 00000D4E case 114|8-155
3502|code|ADDS            R3, #1|1-51
3504|code|STR             R3, [SP,#0xAB8+var_A98]|8-147
3506|code|B               loc_D2C|187-231
3508|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000D4E case 98|223-248-120-57
3512|code|LDR             R3, [R6,R3]; optarg|243-88
3514|code|LDR             R0, [R3]|24-104
3516|code|BLX             smp_get_dhnum|255-247-44-239
3520|code|CMP             R0, #0xF|15-40
3522|code|STR             R0, [SP,#0xAB8+var_A80]|14-144
3524|code|BLS             loc_D2C|178-217
3526|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-108-57
3530|code|MOVS            R1, #1; size|1-33
3532|code|LDR.W           R0, =(aBadArgumentToB - 0xDD8); "bad argument to '--broadcast'\n"|223-248-104-9
3536|code|MOVS            R2, #0x1E; n|30-34
3538|code|LDR             R3, [R6,R3]; stderr|243-88
3540|code|ADD             R0, PC; "bad argument to '--broadcast'\n"|120-68
3542|code|LDR             R3, [R3]; s|27-104
3544|code|BLX             fwrite|255-247-202-238
3548|code|MOVS            R0, #0x5B ; '['|91-32
3550|code|B               loc_DFC|13-224
3552|code|LDR.W           R0, =(stderr_ptr - 0x12F3C); jumptable 00000D4E case 86|223-248-80-9
3556|code|MOVS            R1, #1|1-33
3558|code|LDR.W           R2, =(aVersionS - 0xDF4); "version: %s\n"|223-248-84-41
3562|code|LDR.W           R3, =(a10320130604 - 0xDF6); "1.03 20130604"|223-248-84-57
3566|code|LDR             R0, [R6,R0]; stderr|48-88
3568|code|ADD             R2, PC; "version: %s\n"|122-68
3570|code|ADD             R3, PC; "1.03 20130604"|123-68
3572|code|LDR             R0, [R0]|0-104
3574|code|BLX             __fprintf_chk|255-247-22-239
3578|code|MOVS            R0, #0|0-32
3580|code|LDR             R3, [SP,#0xAB8+var_AA0]|6-155
3582|code|LDR.W           R2, [SP,#0xAB8+var_2C]|221-248-140-42
3586|code|LDR             R3, [R3]|27-104
3588|code|CMP             R2, R3|154-66
3590|code|BNE.W           loc_13F6|64-240-246-130
3594|code|ADDW            SP, SP, #0xA94|13-246-148-45
3598|code|POP.W           {R4-R11,PC}|189-232-240-143
3602|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000D4E case 83|223-248-28-57
3606|code|LDR             R3, [R6,R3]; optarg|243-88
3608|code|LDR             R3, [R3]|27-104
3610|code|STR             R3, [SP,#0xAB8+stream]|12-147
3612|code|B               loc_D2C|134-231
3614|code|LDR.W           R1, =(optarg_ptr - 0x12F3C); jumptable 00000D4E case 73|223-248-16-25
3618|code|ADD             R3, SP, #0xAB8+dest|98-171
3620|code|STR             R3, [SP,#0xAB8+var_A74]|17-147
3622|code|MOV.W           R2, #0x100; n|79-244-128-114
3626|code|MOV             R0, R3; dest|24-70
3628|code|LDR             R1, [R6,R1]; optarg|113-88
3630|code|LDR             R1, [R1]; src|9-104
3632|code|BLX             strncpy|255-247-236-238
3636|code|LDR             R3, [SP,#0xAB8+var_A74]|17-155
3638|code|STRB.W          R8, [R3,#0xFF]|131-248-255-128
3642|code|B               loc_D2C|119-231
3644|code|LDR             R3, [SP,#0xAB8+var_A9C]; jumptable 00000D4E case 72|7-155
3646|code|ADDS            R3, #1|1-51
3648|code|STR             R3, [SP,#0xAB8+var_A9C]|7-147
3650|code|B               loc_D2C|115-231
3652|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000D4E case 70|223-248-232-56
3656|code|LDR             R3, [R6,R3]; optarg|243-88
3658|code|LDR             R3, [R3]|27-104
3660|code|STR             R3, [SP,#0xAB8+accept]|9-147
3662|code|B               loc_D2C|109-231
3664|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000D4E case 69|223-248-220-56
3668|code|LDR             R3, [R6,R3]; optarg|243-88
3670|code|LDR             R0, [R3]|24-104
3672|code|BLX             smp_get_num|255-247-14-239
3676|code|CMP.W           R0, #0x10000|176-245-128-63
3680|code|STR             R0, [SP,#0xAB8+var_A84]|13-144
3682|code|BCC.W           loc_D2C|255-244-99-175
3686|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-204-56
3690|code|MOVS            R1, #1; size|1-33
3692|code|LDR.W           R0, =(aBadArgumentToE - 0xE78); "bad argument to '--expected'\n"|223-248-212-8
3696|code|MOVS            R2, #0x1D; n|29-34
3698|code|LDR             R3, [R6,R3]; stderr|243-88
3700|code|ADD             R0, PC; "bad argument to '--expected'\n"|120-68
3702|code|LDR             R3, [R3]; s|27-104
3704|code|BLX             fwrite|255-247-122-238
3708|code|MOVS            R0, #0x5B ; '['|91-32
3710|code|B               loc_DFC|189-231
3712|code|LDR.W           R3, =(stderr_ptr - 0x12F3C); jumptable 00000D4E cases 63,104|223-248-176-56
3716|code|MOVS            R1, #1; size|1-33
3718|code|LDR.W           R0, =(aUsageSmpZonedB - 0xE94); "Usage: smp_zoned_broadcast [--broadcast"...|223-248-192-8
3722|code|MOVW            R2, #0x586; n|64-242-134-82
3726|code|LDR             R3, [R6,R3]; stderr|243-88
3728|code|ADD             R0, PC; "Usage: smp_zoned_broadcast [--broadcast"...|120-68
3730|code|LDR             R3, [R3]; s|27-104
3732|code|BLX             fwrite|255-247-108-238
3736|code|MOVS            R0, #0|0-32
3738|code|B               loc_DFC|175-231
3740|code|LDR.W           R4, =(stderr_ptr - 0x12F3C); jumptable 00000D4E default case, cases 64-68,71,74-82,84,85,87-97,99-103,105-113,116,117|223-248-148-72
3744|code|MOV             R3, R0|3-70
3746|code|LDR.W           R2, =(aUnrecognisedSw - 0xEAE); "unrecognised switch code 0x%x ??\n"|223-248-168-40
3750|code|MOVS            R1, #1|1-33
3752|code|LDR             R4, [R6,R4]; stderr|52-89
3754|code|ADD             R2, PC; "unrecognised switch code 0x%x ??\n"|122-68
3756|code|LDR             R0, [R4]|32-104
3758|code|BLX             __fprintf_chk|255-247-186-238
3762|code|LDR.W           R0, =(aUsageSmpZonedB - 0xEBE); "Usage: smp_zoned_broadcast [--broadcast"...|223-248-156-8
3766|code|LDR             R3, [R4]; s|35-104
3768|code|MOVS            R1, #1; size|1-33
3770|code|ADD             R0, PC; "Usage: smp_zoned_broadcast [--broadcast"...|120-68
3772|code|MOVW            R2, #0x586; n|64-242-134-82
3776|code|BLX             fwrite|255-247-86-238
3780|code|MOVS            R0, #0x5B ; '['|91-32
3782|code|B               loc_DFC|153-231
3784|code|LDR.W           R3, =(optind_ptr - 0x12F3C)|223-248-136-56
3788|code|LDR.W           R8, [R6,R3]; optind|86-248-3-128
3792|code|LDR.W           R3, [R8]|216-248-0-48
3796|code|CMP             R7, R3|159-66
3798|code|BLE             loc_F50|59-221
3800|code|LDR             R2, [SP,#0xAB8+var_AA4]|5-154
3802|code|LDRB.W          R10, [R2]|146-248-0-160
3806|code|CMP.W           R10, #0|186-241-0-15
3810|code|BEQ             loc_F2C|35-208
3812|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-76-56
3816|code|MOV             R5, R8|69-70
3818|code|LDR.W           R4, =(aUnexpectedExtr - 0xEF6); "Unexpected extra argument: %s\n"|223-248-108-72
3822|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
3826|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3828|code|B               loc_F0C|10-224
3830|code|LDR.W           R3, [R9,R3,LSL#2]|89-248-35-48
3834|code|MOVS            R1, #1|1-33
3836|code|LDR.W           R0, [R10]|218-248-0-0
3840|code|MOV             R2, R4|34-70
3842|code|BLX             __fprintf_chk|255-247-144-238
3846|code|LDR             R3, [R5]|43-104
3848|code|ADDS            R3, #1|1-51
3850|code|STR             R3, [R5]|43-96
3852|code|LDR.W           R3, [R8]|216-248-0-48
3856|code|CMP             R7, R3|159-66
3858|code|BGT             loc_EF6|240-220
3860|code|LDR.W           R0, =(aUsageSmpZonedB - 0xF26); "Usage: smp_zoned_broadcast [--broadcast"...|223-248-68-8
3864|code|MOVS            R1, #1; size|1-33
3866|code|LDR.W           R3, [R10]; s|218-248-0-48
3870|code|MOVW            R2, #0x586; n|64-242-134-82
3874|code|ADD             R0, PC; "Usage: smp_zoned_broadcast [--broadcast"...|120-68
3876|code|BLX             fwrite|255-247-36-238
3880|code|MOVS            R0, #0x5B ; '['|91-32
3882|code|B               loc_DFC|103-231
3884|code|LDR.W           R11, [SP,#0xAB8+var_AA4]|221-248-20-176
3888|code|MOVW            R2, #0x1FF; n|64-242-255-18
3892|code|LDR.W           R1, [R9,R3,LSL#2]; src|89-248-35-16
3896|code|STR             R3, [SP,#0xAB8+var_A74]|17-147
3898|code|MOV             R0, R11; dest|88-70
3900|code|BLX             strncpy|255-247-102-238
3904|code|LDR             R3, [SP,#0xAB8+var_A74]|17-155
3906|code|STRB.W          R10, [R11,#0x1FF]|139-248-255-161
3910|code|ADDS            R3, #1|1-51
3912|code|STR.W           R3, [R8]|200-248-0-48
3916|code|CMP             R7, R3|159-66
3918|code|BGT             loc_EE4|201-220
3920|code|LDR             R3, [SP,#0xAB8+var_AA4]|5-155
3922|code|LDRB            R3, [R3]|27-120
3924|code|CMP             R3, #0|0-43
3926|code|BEQ             loc_FD0|59-208
3928|code|LDR             R0, [SP,#0xAB8+var_AA4]; s|5-152
3930|code|MOVS            R1, #0x2C ; ','; c|44-33
3932|code|BLX             strchr|255-247-50-238
3936|code|CBZ             R0, loc_F92|184-177
3938|code|LDR.W           R1, =(aD - 0xF6E); "%d"|223-248-252-23
3942|code|MOVS            R3, #0|0-35
3944|code|LDR             R2, [SP,#0xAB8+var_A78]|16-154
3946|code|ADD             R1, PC; "%d"|121-68
3948|code|STRB.W          R3, [R0],#1|0-248-1-59
3952|code|BLX             __isoc99_sscanf|255-247-58-238
3956|code|CMP             R0, #1|1-40
3958|code|BEQ             loc_F92|12-208
3960|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-184-55
3964|code|MOVS            R1, #1; size|1-33
3966|code|LDR.W           R0, =(aExpectedNumber - 0xF8A); "expected number after separator in SMP_"...|223-248-228-7
3970|code|MOVS            R2, #0x33 ; '3'; n|51-34
3972|code|LDR             R3, [R6,R3]; stderr|243-88
3974|code|ADD             R0, PC; "expected number after separator in SMP_"...|120-68
3976|code|LDR             R3, [R3]; s|27-104
3978|code|BLX             fwrite|255-247-242-237
3982|code|MOVS            R0, #0x5B ; '['|91-32
3984|code|B               loc_DFC|52-231
3986|code|LDRD.W          R2, R3, [SP,#0xAB8+var_A90]|221-233-10-35
3990|code|ORRS            R3, R2|19-67
3992|code|BEQ             loc_FEA|39-208
3994|code|LDRD.W          R0, R1, [SP,#0xAB8+var_A90]|221-233-10-1
3998|code|BLX             smp_is_naa5|255-247-226-237
4002|code|CMP             R0, #0|0-40
4004|code|BEQ.W           loc_10B8|0-240-136-128
4008|code|LDR             R3, [SP,#0xAB8+accept]|9-155
4010|code|CMP             R3, #0|0-43
4012|code|BEQ             loc_1062|89-208
4014|code|LDR             R3, [SP,#0xAB8+stream]|12-155
4016|code|CMP             R3, #0|0-43
4018|code|BEQ.W           loc_1226|0-240-56-129
4022|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-124-55
4026|code|MOVS            R1, #1; size|1-33
4028|code|LDR.W           R0, =(aCanTHaveBothFs - 0xFC8); "can't have both --fszg and --szg option"...|223-248-168-7
4032|code|MOVS            R2, #0x29 ; ')'; n|41-34
4034|code|LDR             R3, [R6,R3]; stderr|243-88
4036|code|ADD             R0, PC; "can't have both --fszg and --szg option"...|120-68
4038|code|LDR             R3, [R3]; s|27-104
4040|code|BLX             fwrite|255-247-210-237
4044|code|MOVS            R0, #0x5B ; '['|91-32
4046|code|B               loc_DFC|21-231
4048|code|LDR.W           R0, =(aSmpUtilsDevice - 0xFD8); "SMP_UTILS_DEVICE"|223-248-152-7
4052|code|ADD             R0, PC; "SMP_UTILS_DEVICE"|120-68
4054|code|BLX             getenv|255-247-210-237
4058|code|CBZ             R0, loc_1036|96-179
4060|code|MOV             R1, R0; src|1-70
4062|code|MOVW            R2, #0x1FF; n|64-242-255-18
4066|code|LDR             R0, [SP,#0xAB8+var_AA4]; dest|5-152
4068|code|BLX             strncpy|255-247-18-238
4072|code|B               loc_F58|182-231
4074|code|LDR.W           R0, =(aSmpUtilsSasAdd - 0xFF2); "SMP_UTILS_SAS_ADDR"|223-248-132-7
4078|code|ADD             R0, PC; "SMP_UTILS_SAS_ADDR"|120-68
4080|code|BLX             getenv|255-247-196-237
4084|code|CBZ             R0, loc_1012|104-177
4086|code|BLX             smp_get_llnum|255-247-52-238
4090|code|ADDS            R7, R1, #1|79-28
4092|code|IT EQ|8-191
4094|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
4098|code|BEQ.W           loc_13CE|0-240-228-129
4102|code|MOV             R2, R0|2-70
4104|code|MOV             R3, R1|11-70
4106|code|STRD.W          R2, R3, [SP,#0xAB8+var_A90]|205-233-10-35
4110|code|ORRS            R3, R2|19-67
4112|code|BNE             loc_F9A|195-209
4114|code|MOVS            R2, #0|0-34
4116|code|MOVS            R3, #0|0-35
4118|code|STRD.W          R2, R3, [SP,#0xAB8+var_A90]|205-233-10-35
4122|code|B               loc_FA8|197-231
4124|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-20-55
4128|code|MOVS            R1, #1; size|1-33
4130|code|LDR.W           R0, =(aBadArgumentToS - 0x102E); "bad argument to '--sa'\n"|223-248-80-7
4134|code|MOVS            R2, #0x17; n|23-34
4136|code|LDR             R3, [R6,R3]; stderr|243-88
4138|code|ADD             R0, PC; "bad argument to '--sa'\n"|120-68
4140|code|LDR             R3, [R3]; s|27-104
4142|code|BLX             fwrite|255-247-160-237
4146|code|MOVS            R0, #0x5B ; '['|91-32
4148|code|B               loc_DFC|226-230
4150|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-252-54
4154|code|MOVS            R1, #1; size|1-33
4156|code|LDR.W           R0, =(aMissingDeviceN - 0x1048); "missing device name on command line\n  "...|223-248-56-7
4160|code|MOVS            R2, #0x62 ; 'b'; n|98-34
4162|code|LDR             R4, [R6,R3]; stderr|244-88
4164|code|ADD             R0, PC; "missing device name on command line\n  "...|120-68
4166|code|LDR             R3, [R4]; s|35-104
4168|code|BLX             fwrite|255-247-146-237
4172|code|LDR.W           R0, =(aUsageSmpZonedB - 0x1058); "Usage: smp_zoned_broadcast [--broadcast"...|223-248-44-7
4176|code|LDR             R3, [R4]; s|35-104
4178|code|MOVS            R1, #1; size|1-33
4180|code|ADD             R0, PC; "Usage: smp_zoned_broadcast [--broadcast"...|120-68
4182|code|MOVW            R2, #0x586; n|64-242-134-82
4186|code|BLX             fwrite|255-247-138-237
4190|code|MOVS            R0, #0x5B ; '['|91-32
4192|code|B               loc_DFC|204-230
4194|code|LDR             R3, [SP,#0xAB8+stream]|12-155
4196|code|CMP             R3, #0|0-43
4198|code|BEQ.W           loc_133C|0-240-105-129
4202|code|LDR             R7, [SP,#0xAB8+accept]|9-159
4204|code|MOV             R8, R3|152-70
4206|code|LDR.W           R9, [SP,#0xAB8+var_A7C]|221-248-60-144
4210|code|B               loc_1092|14-224
4212|code|ADD.W           R3, R9, R7|9-235-7-3
4216|code|MOV             R0, R8; s|64-70
4218|code|MOVS            R1, #0x2C ; ','; c|44-33
4220|code|STRB            R2, [R3,#8]|26-114
4222|code|BLX             strchr|255-247-162-237
4226|code|CBZ             R0, loc_10EC|152-179
4228|code|ADDS            R7, #1|1-55
4230|code|ADD.W           R8, R0, #1|0-241-1-8
4234|code|CMP.W           R7, #0x100|183-245-128-127
4238|code|BEQ.W           loc_1442|0-240-216-129
4242|code|MOV             R0, R8|64-70
4244|code|BLX             smp_get_dhnum|255-247-192-237
4248|code|CMP             R0, #0xFF|255-40
4250|code|MOV             R2, R0|2-70
4252|code|BLS             loc_1074|234-217
4254|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-148-54
4258|code|MOVS            R1, #1; size|1-33
4260|code|LDR.W           R0, =(aFailedDecoding - 0x10B0); "failed decoding --szg=ZGL option\n"|223-248-216-6
4264|code|MOVS            R2, #0x21 ; '!'; n|33-34
4266|code|LDR             R3, [R6,R3]; stderr|243-88
4268|code|ADD             R0, PC; "failed decoding --szg=ZGL option\n"|120-68
4270|code|LDR             R3, [R3]; s|27-104
4272|code|BLX             fwrite|255-247-94-237
4276|code|MOVS            R0, #0x5B ; '['|91-32
4278|code|B               loc_DFC|161-230
4280|code|LDR.W           R3, =(stderr_ptr - 0x12F3C)|223-248-120-54
4284|code|MOVS            R1, #1; size|1-33
4286|code|LDR.W           R0, =(aSasTargetAddre - 0x10CA); "SAS (target) address not in naa-5 forma"...|223-248-196-6
4290|code|MOVS            R2, #0x41 ; 'A'; n|65-34
4292|code|LDR             R7, [R6,R3]; stderr|247-88
4294|code|ADD             R0, PC; "SAS (target) address not in naa-5 forma"...|120-68
4296|code|LDR             R3, [R7]; s|59-104
4298|code|BLX             fwrite|255-247-82-237
4302|code|LDRB.W          R3, [SP,#0xAB8+dest]|157-248-136-49
4306|code|CMP             R3, #0|0-43
4308|code|BNE.W           loc_FA8|127-244-104-175
4312|code|LDR.W           R0, =(aUseInterfaceTo - 0x10E6); "    use '--interface=' to override\n"|223-248-172-6
4316|code|MOVS            R1, #1; size|1-33
4318|code|LDR             R3, [R7]; s|59-104
4320|code|MOVS            R2, #0x23 ; '#'; n|35-34
4322|code|ADD             R0, PC; "    use '--interface=' to override\n"|120-68
4324|code|BLX             fwrite|255-247-68-237
4328|code|MOVS            R0, #0x5B ; '['|91-32
4330|code|B               loc_DFC|135-230
4332|code|ADD.W           R11, R7, #1|7-241-1-11
4336|code|LDRD.W          R2, R3, [SP,#0xAB8+var_A90]|221-233-10-35
4340|code|ADD.W           R8, SP, #0xAB8+var_A54|13-241-100-8
4344|code|STR             R4, [SP,#0xAB8+var_AAC]|3-148
4346|code|LDR             R0, [SP,#0xAB8+var_AA4]|5-152
4348|code|STRD.W          R2, R3, [SP,#0xAB8+longind]|205-233-0-35
4352|code|ADD             R2, SP, #0xAB8+dest|98-170
4354|code|LDR             R3, [SP,#0xAB8+var_A78]|16-155
4356|code|LDR             R1, [R3]|25-104
4358|code|STR.W           R8, [SP,#0xAB8+var_AB0]|205-248-8-128
4362|code|BLX             smp_initiator_open|255-247-188-237
4366|code|CMP             R0, #0|0-40
4368|code|BLT.W           loc_143E|192-242-149-129
4372|code|LDR             R1, [SP,#0xAB8+var_A7C]|15-153
4374|code|TST.W           R11, #3|27-240-3-15
4378|code|LDR             R7, [SP,#0xAB8+var_A84]|13-159
4380|code|LDR             R3, [SP,#0xAB8+var_A80]|14-155
4382|code|MOV             R2, R1|10-70
4384|code|STRB.W          R11, [R1,#7]|129-248-7-176
4388|code|AND.W           R3, R3, #0xF|3-240-15-3
4392|code|STRB            R7, [R2,#5]|87-113
4394|code|STRB            R3, [R1,#6]|139-113
4396|code|MOV.W           R3, R7,ASR#8|79-234-39-35
4400|code|IT NE|24-191
4402|code|BICNE.W         R7, R11, #3|43-240-3-7
4406|code|MOV.W           R2, #0x40 ; '@'|79-240-64-2
4410|code|IT NE|24-191
4412|code|ADDNE.W         R11, R7, #4|7-241-4-11
4416|code|STRB            R3, [R1,#4]|11-113
4418|code|CMP.W           R11, #0|187-241-0-15
4422|code|MOV.W           R3, #0x85|79-240-133-3
4426|code|STRB            R2, [R1]|10-112
4428|code|ADD.W           R9, R11, #0xC|11-241-12-9
4432|code|STRB            R3, [R1,#1]|75-112
4434|code|MOV             R3, R11|91-70
4436|code|LDR             R2, [SP,#0xAB8+var_A7C]|15-154
4438|code|IT LT|184-191
4440|code|ADDLT.W         R3, R11, #3|11-241-3-3
4444|code|ASRS            R3, R3, #2|155-16
4446|code|ADDS            R3, #1|1-51
4448|code|STRB            R3, [R2,#3]|211-112
4450|code|CMP             R4, #0|0-44
4452|code|BNE.W           loc_1476|64-240-135-129
4456|code|MOV             R1, R4; c|33-70
4458|code|MOVS            R2, #0x18; n|24-34
4460|code|MOV             R0, R5; s|40-70
4462|code|ADD             R7, SP, #0xAB8+var_938|96-175
4464|code|BLX             memset|255-247-64-237
4468|code|LDR             R3, [SP,#0xAB8+var_A7C]|15-155
4470|code|MOV             R0, R8|64-70
4472|code|MOV             R1, R5|41-70
4474|code|MOV             R2, R4|34-70
4476|code|MOV.W           LR, #8|79-240-8-14
4480|code|STR             R3, [R5,#4]|107-96
4482|code|STR.W           R9, [R5]|197-248-0-144
4486|code|STR.W           LR, [R5,#8]|197-248-8-224
4490|code|STR             R7, [R5,#0xC]|239-96
4492|code|BLX             smp_send_req|255-247-32-237
4496|code|MOV             R3, R0|3-70
4498|code|CMP             R0, #0|0-40
4500|code|BNE.W           loc_1552|64-240-221-129
4504|code|LDR             R3, [R5,#0x14]|107-105
4506|code|CMP             R3, #0|0-43
4508|code|BNE.W           loc_153C|64-240-206-129
4512|code|LDR.W           R9, [R5,#0x10]|213-248-16-144
4516|code|CMP.W           R9, #3|185-241-3-15
4520|code|BLS.W           loc_1578|64-242-230-129
4524|code|LDRB            R5, [R7,#3]|253-120
4526|code|CBNZ            R5, loc_11B8|29-185
4528|code|LDRB            R3, [R7,#2]|187-120
4530|code|CMP             R3, #0|0-43
4532|code|BEQ.W           loc_15B8|0-240-0-130
4536|code|ADDS            R0, R5, #1|104-28
4538|code|LSLS            R0, R0, #2|128-0
4540|code|CMP             R9, R0|129-69
4542|code|BGE.W           loc_1538|128-242-187-129
4546|code|CMP.W           R9, #0|185-241-0-15
4550|code|BLT.W           loc_1538|192-242-183-129
4554|code|CBZ             R4, loc_11E8|108-177
4556|code|LDR.W           R5, =(stderr_ptr - 0x12F3C)|223-248-100-85
4560|code|MOVS            R1, #1|1-33
4562|code|LDR.W           R2, =(aActualResponse - 0x11E0); "actual response length [%d] less than d"...|223-248-184-37
4566|code|MOV             R3, R9|75-70
4568|code|LDR.W           R10, [R6,R5]; stderr|86-248-5-160
4572|code|ADD             R2, PC; "actual response length [%d] less than d"...|122-68
4574|code|STR             R0, [SP,#0xAB8+longind]|0-144
4576|code|LDR.W           R0, [R10]|218-248-0-0
4580|code|BLX             __fprintf_chk|255-247-30-237
4584|code|LDR             R3, [SP,#0xAB8+var_A9C]|7-155
4586|code|LDR             R2, [SP,#0xAB8+var_A98]|8-154
4588|code|ORRS            R3, R2|19-67
4590|code|BEQ.W           loc_16B8|0-240-99-130
4594|code|LDR             R3, [SP,#0xAB8+var_A9C]|7-155
4596|code|CMP             R3, #0|0-43
4598|code|BEQ.W           loc_16A8|0-240-87-130
4602|code|MOV             R1, R9; len|73-70
4604|code|MOV             R0, R7; str|56-70
4606|code|MOVS            R2, #1; no_ascii|1-34
4608|code|BLX             dStrHex|255-247-152-236
4612|code|LDRB            R3, [R7]|59-120
4614|code|CMP             R3, #0x41 ; 'A'|65-43
4616|code|BEQ.W           loc_1632|0-240-19-130
4620|code|MOV             R0, R8|64-70
4622|code|BLX             smp_initiator_close|255-247-140-236
4626|code|CMP             R0, #0|0-40
4628|code|BLT.W           loc_1628|192-242-8-130
4632|code|MOVS            R5, #0x61 ; 'a'|97-37
4634|code|CBZ             R5, loc_1222|21-177
4636|code|CMP             R4, #0|0-44
4638|code|BNE.W           loc_1460|64-240-31-129
4642|code|MOV             R0, R5|40-70
4644|code|B               loc_DFC|234-229
4646|code|LDR             R0, [SP,#0xAB8+accept]; s|9-152
4648|code|BLX             strlen|255-247-198-236
4652|code|CMP             R0, #0|0-40
4654|code|BEQ.W           loc_1458|0-240-19-129
4658|code|CMP             R0, #1|1-40
4660|code|BNE             loc_1240|4-209
4662|code|LDR             R3, [SP,#0xAB8+accept]|9-155
4664|code|LDRB            R3, [R3]|27-120
4666|code|CMP             R3, #0x2D ; '-'|45-43
4668|code|BEQ.W           loc_15C6|0-240-195-129
4672|code|LDR.W           R1, =(aR - 0x124A); "r"|223-248-76-21
4676|code|LDR             R0, [SP,#0xAB8+accept]|9-152
4678|code|ADD             R1, PC; "r"|121-68
4680|code|BLX             fopen64|255-247-4-237
4684|code|STR             R0, [SP,#0xAB8+stream]|12-144
4686|code|CMP             R0, #0|0-40
4688|code|BEQ.W           loc_15EE|0-240-205-129
4692|code|LDR.W           R3, =(a0123456789aabb - 0x1266); "0123456789aAbBcCdDeEfFxXhH ,\t"|223-248-60-53
4696|code|MOV.W           R11, #0|79-240-0-11
4700|code|ADD.W           R10, SP, #0xAB8+var_630|13-245-145-106
4704|code|MOV             R9, R11|217-70
4706|code|ADD             R3, PC; "0123456789aAbBcCdDeEfFxXhH ,\t"|123-68
4708|code|STR             R3, [SP,#0xAB8+accept]|9-147
4710|code|MOV             R0, R10; s|80-70
4712|code|MOV.W           R1, #0x200; n|79-244-0-113
4716|code|LDR             R2, [SP,#0xAB8+stream]; stream|12-154
4718|code|BLX             fgets|255-247-104-236
4722|code|CMP             R0, #0|0-40
4724|code|BEQ             loc_132E|91-208
4726|code|MOV             R0, R10; s|80-70
4728|code|BLX             strlen|255-247-158-236
4732|code|CMP             R0, #0|0-40
4734|code|BLE.W           loc_1388|64-243-131-128
4738|code|SUBS            R3, R0, #1|67-30
4740|code|LDRB.W          R2, [R10,R3]|26-248-3-32
4744|code|CMP             R2, #0xA|10-42
4746|code|BEQ             loc_1380|121-208
4748|code|MOV.W           R8, #0|79-240-0-8
4752|code|B               loc_1296|1-224
4754|code|ADD.W           R8, R8, #1|8-241-1-8
4758|code|LDRB.W          R3, [R10,R8]|26-248-8-48
4762|code|ADD.W           R7, R10, R8|10-235-8-7
4766|code|CMP             R3, #0x20 ; ' '|32-43
4768|code|BEQ             loc_1292|247-208
4770|code|CMP             R3, #9|9-43
4772|code|BEQ             loc_1292|245-208
4774|code|CMP             R0, R8|64-69
4776|code|BEQ             loc_1324|60-208
4778|code|CMP             R3, #0x23 ; '#'|35-43
4780|code|RSB.W           R2, R8, R0|200-235-0-2
4784|code|STR             R2, [SP,#0xAB8+var_A74]|17-146
4786|code|BEQ             loc_1324|55-208
4788|code|MOV             R0, R7; s|56-70
4790|code|LDR             R1, [SP,#0xAB8+accept]; accept|9-153
4792|code|BLX             strspn|255-247-240-236
4796|code|LDR             R2, [SP,#0xAB8+var_A74]|17-154
4798|code|CMP             R2, R0|130-66
4800|code|BGT             loc_138E|101-220
4802|code|MOV.W           R8, #0|79-240-0-8
4806|code|MOV             R0, R7|56-70
4808|code|BLX             smp_get_dhnum|255-247-166-236
4812|code|CMP             R0, #0xFF|255-40
4814|code|BHI.W           loc_1412|0-242-160-128
4818|code|ADD.W           R3, R8, R11|8-235-11-3
4822|code|CMP             R3, #0xFE|254-43
4824|code|BGT.W           loc_13FA|0-243-143-128
4828|code|LDR             R2, [SP,#0xAB8+var_A7C]|15-154
4830|code|ADD             R3, R2|19-68
4832|code|STRB            R0, [R3,#8]|24-114
4834|code|BLX             __ctype_b_loc|255-247-100-236
4838|code|LDRB            R2, [R7]|58-120
4840|code|LDR             R3, [R0]|3-104
4842|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
4846|code|LSLS            R0, R3, #0x13|216-4
4848|code|BMI             loc_1314|16-212
4850|code|MOV             R2, R7|58-70
4852|code|MOV             R7, R2|23-70
4854|code|ADDS            R2, #1|1-50
4856|code|LDRB            R3, [R7]|59-120
4858|code|CMP             R3, #0x2C ; ','|44-43
4860|code|IT NE|24-191
4862|code|CMPNE           R3, #0x20 ; ' '|32-43
4864|code|BEQ             loc_12F4|248-208
4866|code|CMP             R3, #9|9-43
4868|code|BEQ             loc_12F4|246-208
4870|code|B               loc_1314|5-224
4872|code|CMP             R3, #0x20 ; ' '|32-43
4874|code|IT NE|24-191
4876|code|CMPNE           R3, #0x2C ; ','|44-43
4878|code|BEQ             loc_1364|41-208
4880|code|CMP             R3, #9|9-43
4882|code|BEQ             loc_1364|39-208
4884|code|MOV             R2, R7|58-70
4886|code|LDRB.W          R3, [R7],#1|23-248-1-59
4890|code|CMP             R3, #0|0-43
4892|code|BNE             loc_1308|244-209
4894|code|ADD.W           R8, R8, #1|8-241-1-8
4898|code|ADD             R11, R8|195-68
4900|code|ADD.W           R9, R9, #1|9-241-1-9
4904|code|CMP.W           R9, #0x200|185-245-0-127
4908|code|BNE             loc_1266|155-209
4910|code|LDR             R0, [SP,#0xAB8+stream]; stream|12-152
4912|code|BLX             fclose|255-247-126-236
4916|code|CMP.W           R11, #0|187-241-0-15
4920|code|BNE.W           loc_10F0|127-244-218-174
4924|code|LDR             R3, =(stderr_ptr - 0x12F3C)|253-75
4926|code|MOVS            R1, #1; size|1-33
4928|code|LDR.W           R0, =(aDidnTDetectAny - 0x134C); "didn't detect any source zone group num"...|223-248-84-4
4932|code|MOVS            R2, #0x3A ; ':'; n|58-34
4934|code|LDR             R4, [R6,R3]; stderr|244-88
4936|code|ADD             R0, PC; "didn't detect any source zone group num"...|120-68
4938|code|LDR             R3, [R4]; s|35-104
4940|code|BLX             fwrite|255-247-16-236
4944|code|LDR.W           R0, =(aGiveSzgZglOrFs - 0x135C); "Give --szg=ZGL or --fszg=FS option (e.g"...|223-248-72-4
4948|code|LDR             R3, [R4]; s|35-104
4950|code|MOVS            R1, #1; size|1-33
4952|code|ADD             R0, PC; "Give --szg=ZGL or --fszg=FS option (e.g"...|120-68
4954|code|MOVS            R2, #0x34 ; '4'; n|52-34
4956|code|BLX             fwrite|255-247-8-236
4960|code|MOVS            R0, #0x5B ; '['|91-32
4962|code|B               loc_DFC|75-229
4964|code|LDRB            R3, [R2]|19-120
4966|code|MOV             R7, R2|23-70
4968|code|ADDS            R2, #1|1-50
4970|code|CMP             R3, #0x2C ; ','|44-43
4972|code|IT NE|24-191
4974|code|CMPNE           R3, #0x20 ; ' '|32-43
4976|code|BEQ             loc_1364|248-208
4978|code|CMP             R3, #9|9-43
4980|code|BEQ             loc_1364|246-208
4982|code|CMP             R3, #0|0-43
4984|code|BEQ             loc_131E|209-208
4986|code|ADD.W           R8, R8, #1|8-241-1-8
4990|code|B               loc_12C6|162-231
4992|code|MOV             R0, R3|24-70
4994|code|MOVS            R2, #0|0-34
4996|code|STRB.W          R2, [R10,R3]|10-248-3-32
5000|code|CMP             R0, #0|0-40
5002|code|BEQ             loc_1324|203-208
5004|code|B               loc_128C|126-231
5006|code|LDRB            R3, [R7,R0]|59-92
5008|code|CMP             R3, #0x23 ; '#'|35-43
5010|code|BEQ             loc_12C2|150-208
5012|code|LDR             R4, =(stderr_ptr - 0x12F3C)|231-76
5014|code|ADD             R0, R8|64-68
5016|code|LDR.W           R2, =(aFd2hexArrSynta - 0x13AC); "fd2hex_arr: syntax error at line %d, po"...|223-248-4-36
5020|code|ADDS            R0, #1|1-48
5022|code|ADD.W           R3, R9, #1|9-241-1-3
5026|code|MOVS            R1, #1|1-33
5028|code|LDR.W           R10, [R6,R4]; stderr|86-248-4-160
5032|code|ADD             R2, PC; "fd2hex_arr: syntax error at line %d, po"...|122-68
5034|code|STR             R0, [SP,#0xAB8+longind]|0-144
5036|code|LDR.W           R0, [R10]|218-248-0-0
5040|code|BLX             __fprintf_chk|255-247-56-236
5044|code|LDR             R0, [SP,#0xAB8+stream]; stream|12-152
5046|code|BLX             fclose|255-247-60-236
5050|code|LDR             R0, =(aFailedDecoding_0 - 0x13C8); "failed decoding --fszg=FS option\n"|250-72
5052|code|MOVS            R1, #1; size|1-33
5054|code|LDR.W           R3, [R10]; s|218-248-0-48
5058|code|MOVS            R2, #0x21 ; '!'; n|33-34
5060|code|ADD             R0, PC; "failed decoding --fszg=FS option\n"|120-68
5062|code|BLX             fwrite|255-247-212-235
5066|code|MOVS            R0, #0x5B ; '['|91-32
5068|code|B               loc_DFC|22-229
5070|code|LDR             R3, =(stderr_ptr - 0x12F3C)|217-75
5072|code|MOVS            R1, #1; size|1-33
5074|code|LDR             R0, =(aBadValueInEnvi - 0x13DE); "bad value in environment variable SMP_U"...|245-72
5076|code|MOVS            R2, #0x35 ; '5'; n|53-34
5078|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
5082|code|ADD             R0, PC; "bad value in environment variable SMP_U"...|120-68
5084|code|LDR.W           R3, [R10]; s|218-248-0-48
5088|code|BLX             fwrite|255-247-198-235
5092|code|LDR             R0, =(aUse0 - 0x13F2); "    use 0\n"|241-72
5094|code|LDR.W           R3, [R10]; s|218-248-0-48
5098|code|MOVS            R1, #1; size|1-33
5100|code|MOVS            R2, #0xA; n|10-34
5102|code|ADD             R0, PC; "    use 0\n"|120-68
5104|code|BLX             fwrite|255-247-190-235
5108|code|B               loc_FA8|216-229
5110|code|BLX             __stack_chk_fail|255-247-176-235
5114|code|LDR             R3, =(stderr_ptr - 0x12F3C)|206-75
5116|code|MOVS            R1, #1; size|1-33
5118|code|LDR             R0, =(aFd2hexArrArray - 0x140A); "fd2hex_arr: array length exceeded\n"|236-72
5120|code|MOVS            R2, #0x22 ; '"'; n|34-34
5122|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
5126|code|ADD             R0, PC; "fd2hex_arr: array length exceeded\n"|120-68
5128|code|LDR.W           R3, [R10]; s|218-248-0-48
5132|code|BLX             fwrite|255-247-176-235
5136|code|B               loc_13B4|208-231
5138|code|LDRB            R3, [R7]|59-120
5140|code|CMP             R3, #0x23 ; '#'|35-43
5142|code|BNE.W           loc_1606|64-240-246-128
5146|code|ADD.W           R8, R8, #0xFFFFFFFF|8-241-255-56
5150|code|B               loc_131E|126-231
5152|code|LDR             R3, =(stderr_ptr - 0x12F3C)|196-75
5154|code|LDR             R3, [R6,R3]; stderr|243-88
5156|code|LDR             R4, [R3]|28-104
5158|code|BLX             __errno_location|255-247-218-235
5162|code|LDR             R0, [R0]; errnum|0-104
5164|code|BLX             safe_strerror|255-247-12-236
5168|code|LDR             R2, =(aCloseErrorS - 0x1438); "close error: %s\n"|224-74
5170|code|MOVS            R1, #1|1-33
5172|code|ADD             R2, PC; "close error: %s\n"|122-68
5174|code|MOV             R3, R0|3-70
5176|code|MOV             R0, R4|32-70
5178|code|BLX             __fprintf_chk|255-247-244-235
5182|code|MOVS            R0, #0x5C ; '\'|92-32
5184|code|B               loc_DFC|220-228
5186|code|LDR             R3, =(stderr_ptr - 0x12F3C)|188-75
5188|code|MOVS            R1, #1; size|1-33
5190|code|LDR             R0, =(aFailedDecoding_1 - 0x1450); "failed decoding --szg option, max 255 s"...|220-72
5192|code|MOVS            R2, #0x39 ; '9'; n|57-34
5194|code|LDR             R3, [R6,R3]; stderr|243-88
5196|code|ADD             R0, PC; "failed decoding --szg option, max 255 s"...|120-68
5198|code|LDR             R3, [R3]; s|27-104
5200|code|BLX             fwrite|255-247-142-235
5204|code|MOVS            R0, #0x5B ; '['|91-32
5206|code|B               loc_DFC|209-228
5208|code|LDR             R3, =(stderr_ptr - 0x12F3C)|182-75
5210|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
5214|code|B               loc_13BA|172-231
5216|code|LDR             R0, =(stderr_ptr - 0x12F3C)|180-72
5218|code|MOVS            R1, #1|1-33
5220|code|LDR             R2, =(aExitStatusDInd - 0x146E); "Exit status %d indicates error detected"...|213-74
5222|code|MOV             R3, R5|43-70
5224|code|LDR             R0, [R6,R0]; stderr|48-88
5226|code|ADD             R2, PC; "Exit status %d indicates error detected"...|122-68
5228|code|LDR             R0, [R0]|0-104
5230|code|BLX             __fprintf_chk|255-247-218-235
5234|code|MOV             R0, R5|40-70
5236|code|B               loc_DFC|194-228
5238|code|LDR             R3, =(stderr_ptr - 0x12F3C)|175-75
5240|code|MOVS            R1, #1; size|1-33
5242|code|LDR             R0, =(aZonedBroadcast - 0x148C); "    Zoned broadcast request:"|209-72
5244|code|MOVS            R2, #0x1C; n|28-34
5246|code|LDR             R7, =(a02x - 0x1490); "%02x "|209-79
5248|code|MOV.W           R11, #0|79-240-0-11
5252|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
5256|code|ADD             R0, PC; "    Zoned broadcast request:"|120-68
5258|code|LDR             R3, =(asc_2304 - 0x1492); "\n      "|207-75
5260|code|ADD             R7, PC; "%02x "|127-68
5262|code|ADD             R3, PC; "\n      "|123-68
5264|code|STR             R3, [SP,#0xAB8+var_AA4]|5-147
5266|code|LDR.W           R3, [R10]; s|218-248-0-48
5270|code|BLX             fwrite|255-247-108-235
5274|code|MOV             R3, R8|67-70
5276|code|MOV             R8, R5|168-70
5278|code|MOV             R5, R4|37-70
5280|code|MOV             R4, R11|92-70
5282|code|MOV             R11, R3|155-70
5284|code|B               loc_14BC|10-224
5286|code|LSLS            R2, R4, #0x1D|98-7
5288|code|BEQ             loc_14D4|20-208
5290|code|LDR             R3, [SP,#0xAB8+var_A7C]|15-155
5292|code|MOVS            R1, #1|1-33
5294|code|LDR.W           R0, [R10]|218-248-0-0
5298|code|MOV             R2, R7|58-70
5300|code|LDRB            R3, [R3,R4]|27-93
5302|code|ADDS            R4, #1|1-52
5304|code|BLX             __fprintf_chk|255-247-180-235
5308|code|CMP             R4, R9|76-69
5310|code|BGE             loc_14E0|15-218
5312|code|LSLS            R1, R4, #0x1C|33-7
5314|code|BNE             loc_14A6|240-209
5316|code|LDR             R0, [SP,#0xAB8+var_AA4]; ptr|5-152
5318|code|MOVS            R1, #1; size|1-33
5320|code|MOVS            R2, #7; n|7-34
5322|code|LDR.W           R3, [R10]; s|218-248-0-48
5326|code|BLX             fwrite|255-247-80-235
5330|code|B               loc_14AA|234-231
5332|code|LDR.W           R1, [R10]; stream|218-248-0-16
5336|code|MOVS            R0, #0x20 ; ' '; c|32-32
5338|code|BLX             fputc|255-247-176-235
5342|code|B               loc_14AA|228-231
5344|code|MOV             R4, R5|44-70
5346|code|LDR.W           R1, [R10]; stream|218-248-0-16
5350|code|MOV             R5, R8|69-70
5352|code|MOVS            R0, #0xA; c|10-32
5354|code|BLX             fputc|255-247-168-235
5358|code|MOVS            R1, #0; c|0-33
5360|code|MOVS            R2, #0x18; n|24-34
5362|code|MOV             R0, R5; s|40-70
5364|code|BLX             memset|255-247-126-235
5368|code|LDR             R7, [SP,#0xAB8+var_A7C]|15-159
5370|code|MOV             R0, R11|88-70
5372|code|MOV             R1, R5|41-70
5374|code|MOV             R2, R4|34-70
5376|code|MOVS            R3, #8|8-35
5378|code|STR             R7, [R5,#4]|111-96
5380|code|ADD             R7, SP, #0xAB8+var_938|96-175
5382|code|STR             R3, [R5,#8]|171-96
5384|code|MOV             R8, R11|216-70
5386|code|STR.W           R9, [R5]|197-248-0-144
5390|code|STR             R7, [R5,#0xC]|239-96
5392|code|BLX             smp_send_req|255-247-94-235
5396|code|MOV             R3, R0|3-70
5398|code|CMP             R0, #0|0-40
5400|code|BEQ.W           loc_1198|63-244-62-174
5404|code|LDR             R2, =(aSmpSendReqFail - 0x1528); "smp_send_req failed, res=%d\n"|171-74
5406|code|MOVS            R1, #1|1-33
5408|code|LDR.W           R0, [R10]|218-248-0-0
5412|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
5414|code|BLX             __fprintf_chk|255-247-126-235
5418|code|MOV             R0, R8|64-70
5420|code|BLX             smp_initiator_close|255-247-252-234
5424|code|CMP             R0, #0|0-40
5426|code|BLT             loc_1590|45-219
5428|code|MOVS            R5, #0x63 ; 'c'|99-37
5430|code|B               loc_121A|112-230
5432|code|MOV             R9, R0|129-70
5434|code|B               loc_11E8|85-230
5436|code|LDR             R0, =(stderr_ptr - 0x12F3C)|125-72
5438|code|MOVS            R1, #1|1-33
5440|code|LDR             R2, =(aSmpSendReqTran - 0x154A); "smp_send_req transport_error=%d\n"|163-74
5442|code|LDR.W           R10, [R6,R0]; stderr|86-248-0-160
5446|code|ADD             R2, PC; "smp_send_req transport_error=%d\n"|122-68
5448|code|LDR.W           R0, [R10]|218-248-0-0
5452|code|BLX             __fprintf_chk|255-247-106-235
5456|code|B               loc_152A|235-231
5458|code|LDR             R5, =(stderr_ptr - 0x12F3C)|120-77
5460|code|MOVS            R1, #1|1-33
5462|code|LDR             R2, =(aSmpSendReqFail - 0x1560); "smp_send_req failed, res=%d\n"|159-74
5464|code|LDR.W           R10, [R6,R5]; stderr|86-248-5-160
5468|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
5470|code|LDR.W           R0, [R10]|218-248-0-0
5474|code|BLX             __fprintf_chk|255-247-96-235
5478|code|LDR             R0, =(aTryAddingVOpti - 0x1574); "    try adding '-v' option for more deb"...|156-72
5480|code|LDR.W           R3, [R10]; s|218-248-0-48
5484|code|MOVS            R1, #1; size|1-33
5486|code|MOVS            R2, #0x2A ; '*'; n|42-34
5488|code|ADD             R0, PC; "    try adding '-v' option for more deb"...|120-68
5490|code|BLX             fwrite|255-247-254-234
5494|code|B               loc_152A|216-231
5496|code|LDR             R0, =(stderr_ptr - 0x12F3C)|110-72
5498|code|MOV             R3, R9|75-70
5500|code|LDR             R2, =(aResponseTooSho - 0x1588); "response too short, len=%d\n"|151-74
5502|code|MOVS            R1, #1|1-33
5504|code|LDR.W           R10, [R6,R0]; stderr|86-248-0-160
5508|code|ADD             R2, PC; "response too short, len=%d\n"|122-68
5510|code|LDR.W           R0, [R10]|218-248-0-0
5514|code|BLX             __fprintf_chk|255-247-76-235
5518|code|B               loc_120C|61-230
5520|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
5524|code|BLX             __errno_location|255-247-34-235
5528|code|LDR.W           R7, [R10]|218-248-0-112
5532|code|LDR             R0, [R0]; errnum|0-104
5534|code|BLX             safe_strerror|255-247-84-235
5538|code|LDR             R2, =(aCloseErrorS - 0x15AA); "close error: %s\n"|143-74
5540|code|MOVS            R1, #1|1-33
5542|code|ADD             R2, PC; "close error: %s\n"|122-68
5544|code|MOV             R3, R0|3-70
5546|code|MOV             R0, R7|56-70
5548|code|BLX             __fprintf_chk|255-247-58-235
5552|code|ADDS            R3, R5, #1|107-28
5554|code|BNE.W           loc_121A|127-244-50-174
5558|code|B               loc_1534|189-231
5560|code|LDRB            R0, [R7,#1]|120-120
5562|code|BLX             smp_get_func_def_resp_len|255-247-200-234
5566|code|CMP             R0, #0|0-40
5568|code|BLT             loc_15D0|6-219
5570|code|MOV             R5, R0|5-70
5572|code|B               loc_11B8|248-229
5574|code|LDR             R3, =(stdin_ptr - 0x12F3C)|135-75
5576|code|LDR             R3, [R6,R3]; stdin|243-88
5578|code|LDR             R3, [R3]|27-104
5580|code|STR             R3, [SP,#0xAB8+stream]|12-147
5582|code|B               loc_1254|65-230
5584|code|CMP             R4, #0|0-44
5586|code|BEQ.W           loc_11B8|63-244-241-173
5590|code|LDR             R3, =(stderr_ptr - 0x12F3C)|87-75
5592|code|MOVS            R1, #1; size|1-33
5594|code|LDR             R0, =(aUnableToDeterm - 0x15E6); "unable to determine response length\n"|131-72
5596|code|MOVS            R2, #0x24 ; '$'; n|36-34
5598|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
5602|code|ADD             R0, PC; "unable to determine response length\n"|120-68
5604|code|LDR.W           R3, [R10]; s|218-248-0-48
5608|code|BLX             fwrite|255-247-194-234
5612|code|B               loc_11B8|228-229
5614|code|LDR             R0, =(stderr_ptr - 0x12F3C)|81-72
5616|code|MOVS            R1, #1|1-33
5618|code|LDR             R2, =(aUnableToOpenSF - 0x15FE); "Unable to open %s for reading\n"|126-74
5620|code|LDR             R3, [SP,#0xAB8+accept]|9-155
5622|code|LDR.W           R10, [R6,R0]; stderr|86-248-0-160
5626|code|ADD             R2, PC; "Unable to open %s for reading\n"|122-68
5628|code|LDR.W           R0, [R10]|218-248-0-0
5632|code|BLX             __fprintf_chk|255-247-16-235
5636|code|B               loc_13BA|217-230
5638|code|LDR             R4, =(stderr_ptr - 0x12F3C)|75-76
5640|code|RSB.W           R0, R10, R7|202-235-7-0
5644|code|LDR             R2, =(aFd2hexArrError - 0x161E); "fd2hex_arr: error in line %d, at pos %d"...|120-74
5646|code|ADDS            R0, #1|1-48
5648|code|ADD.W           R3, R9, #1|9-241-1-3
5652|code|MOVS            R1, #1|1-33
5654|code|LDR.W           R10, [R6,R4]; stderr|86-248-4-160
5658|code|ADD             R2, PC; "fd2hex_arr: error in line %d, at pos %d"...|122-68
5660|code|STR             R0, [SP,#0xAB8+longind]|0-144
5662|code|LDR.W           R0, [R10]|218-248-0-0
5666|code|BLX             __fprintf_chk|255-247-0-235
5670|code|B               loc_13B4|197-230
5672|code|LDR             R3, =(stderr_ptr - 0x12F3C)|66-75
5674|code|MOVS            R5, #0x61 ; 'a'|97-37
5676|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
5680|code|B               loc_1594|176-231
5682|code|LDR             R3, [SP,#0xAB8+var_A7C]|15-155
5684|code|LDRB            R2, [R7,#1]|122-120
5686|code|LDRB            R3, [R3,#1]|91-120
5688|code|CMP             R2, R3|154-66
5690|code|BNE.W           loc_120C|127-244-231-173
5694|code|LDRB            R0, [R7,#2]|184-120
5696|code|CBZ             R0, loc_1698|80-179
5698|code|CBZ             R4, loc_1664|124-177
5700|code|LDR             R3, =(stderr_ptr - 0x12F3C)|59-75
5702|code|MOV.W           R1, #0x100|79-244-128-113
5706|code|ADD.W           R2, SP, #0xAB8+var_630|13-245-145-98
5710|code|LDR             R3, [R6,R3]; stderr|243-88
5712|code|LDR             R5, [R3]|29-104
5714|code|BLX             smp_get_func_res_str|255-247-12-235
5718|code|LDR             R2, =(aZonedBroadcast_0 - 0x165E); "Zoned broadcast result: %s\n"|103-74
5720|code|MOVS            R1, #1|1-33
5722|code|ADD             R2, PC; "Zoned broadcast result: %s\n"|122-68
5724|code|MOV             R3, R0|3-70
5726|code|MOV             R0, R5|40-70
5728|code|BLX             __fprintf_chk|255-247-224-234
5732|code|LDRB            R5, [R7,#2]|189-120
5734|code|MOV             R0, R8|64-70
5736|code|BLX             smp_initiator_close|255-247-94-234
5740|code|CMP             R0, #0|0-40
5742|code|BGE.W           loc_121A|191-246-212-173
5746|code|LDR             R3, =(stderr_ptr - 0x12F3C)|48-75
5748|code|LDR             R3, [R6,R3]; stderr|243-88
5750|code|LDR             R7, [R3]|31-104
5752|code|BLX             __errno_location|255-247-176-234
5756|code|LDR             R0, [R0]; errnum|0-104
5758|code|BLX             safe_strerror|255-247-228-234
5762|code|LDR             R2, =(aCloseErrorS - 0x168A); "close error: %s\n"|93-74
5764|code|MOVS            R1, #1|1-33
5766|code|ADD             R2, PC; "close error: %s\n"|122-68
5768|code|MOV             R3, R0|3-70
5770|code|MOV             R0, R7|56-70
5772|code|BLX             __fprintf_chk|255-247-202-234
5776|code|CMP             R5, #0|0-45
5778|code|BEQ.W           loc_143E|63-244-212-174
5782|code|B               loc_121A|192-229
5784|code|MOV             R0, R8|64-70
5786|code|BLX             smp_initiator_close|255-247-70-234
5790|code|CMP             R0, #0|0-40
5792|code|BLT.W           loc_1420|255-246-190-174
5796|code|MOVS            R5, #0|0-37
5798|code|B               loc_121A|184-229
5800|code|LDR             R5, [SP,#0xAB8+var_A9C]|7-157
5802|code|LDRB            R0, [R7,R5]; c|120-93
5804|code|ADDS            R5, #1|1-53
5806|code|BLX             putchar|255-247-168-234
5810|code|CMP             R5, R9|77-69
5812|code|BNE             loc_16AA|249-209
5814|code|B               loc_1204|165-229
5816|code|LDRB            R3, [R7]|59-120
5818|code|CMP             R3, #0x41 ; 'A'|65-43
5820|code|BEQ             loc_16D4|10-208
5822|code|LDR             R0, =(stderr_ptr - 0x12F3C)|29-72
5824|code|MOVS            R1, #1|1-33
5826|code|LDR             R2, =(aExpectedSmpFra - 0x16CC); "expected SMP frame response type, got=0"...|78-74
5828|code|LDR.W           R10, [R6,R0]; stderr|86-248-0-160
5832|code|ADD             R2, PC; "expected SMP frame response type, got=0"...|122-68
5834|code|LDR.W           R0, [R10]|218-248-0-0
5838|code|BLX             __fprintf_chk|255-247-170-234
5842|code|B               loc_120C|155-229
5844|code|LDR             R3, [SP,#0xAB8+var_A7C]|15-155
5846|code|LDRB            R5, [R7,#1]|125-120
5848|code|LDRB            R3, [R3,#1]|91-120
5850|code|CMP             R5, R3|157-66
5852|code|BEQ             loc_16F6|11-208
5854|code|LDR             R0, =(stderr_ptr - 0x12F3C)|21-72
5856|code|MOVS            R1, #1|1-33
5858|code|LDR             R2, =(aExpectedFuncti - 0x16EC); "Expected function code=0x%x, got=0x%x\n"|71-74
5860|code|LDR.W           R10, [R6,R0]; stderr|86-248-0-160
5864|code|ADD             R2, PC; "Expected function code=0x%x, got=0x%x\n"|122-68
5866|code|STR             R5, [SP,#0xAB8+longind]|0-149
5868|code|LDR.W           R0, [R10]|218-248-0-0
5872|code|BLX             __fprintf_chk|255-247-152-234
5876|code|B               loc_120C|138-229
5878|code|LDRB            R0, [R7,#2]|184-120
5880|code|CMP             R0, #0|0-40
5882|code|BEQ             loc_1698|205-208
5884|code|MOV.W           R1, #0x100|79-244-128-113
5888|code|ADD.W           R2, SP, #0xAB8+var_630|13-245-145-98
5892|code|BLX             smp_get_func_res_str|255-247-178-234
5896|code|LDR             R5, =(stderr_ptr - 0x12F3C)|10-77
5898|code|LDR             R2, =(aZonedBroadcast_0 - 0x1712); "Zoned broadcast result: %s\n"|62-74
5900|code|MOVS            R1, #1|1-33
5902|code|ADD             R2, PC; "Zoned broadcast result: %s\n"|122-68
5904|code|MOV             R3, R0|3-70
5906|code|LDR             R0, [R6,R5]; stderr|112-89
5908|code|LDR             R0, [R0]|0-104
5910|code|BLX             __fprintf_chk|255-247-134-234
5914|code|LDRB            R5, [R7,#2]|189-120
5916|code|B               loc_1666|163-231
5918|data|ALIGN 0x10|0-191
5920|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xCC6|118-34-1-0
5924|data|DCD __stack_chk_guard_ptr - 0x12F3C|156-0-0-0
5928|data|DCD aBEFHhiRsSVv - 0xD02; "b:E:F:hHI:rs:S:vV"|146-12-0-0
5932|data|DCD off_13008 - 0xD1E; "broadcast"|234-34-1-0
5936|data|DCD optarg_ptr - 0x12F3C|192-0-0-0
5940|data|DCD stderr_ptr - 0x12F3C|164-0-0-0
5944|data|DCD aBadArgumentToB - 0xDD8; "bad argument to '--broadcast'\n"|208-11-0-0
5948|data|DCD aVersionS - 0xDF4; "version: %s\n"|148-17-0-0
5952|data|DCD a10320130604 - 0xDF6; "1.03 20130604"|162-17-0-0
5956|data|DCD aBadArgumentToE - 0xE78; "bad argument to '--expected'\n"|80-11-0-0
5960|data|DCD aUsageSmpZonedB - 0xE94; "Usage: smp_zoned_broadcast [--broadcast"...|84-11-0-0
5964|data|DCD aUnrecognisedSw - 0xEAE; "unrecognised switch code 0x%x ??\n"|250-16-0-0
5968|data|DCD aUsageSmpZonedB - 0xEBE; "Usage: smp_zoned_broadcast [--broadcast"...|42-11-0-0
5972|data|DCD optind_ptr - 0x12F3C|160-0-0-0
5976|data|DCD aUnexpectedExtr - 0xEF6; "Unexpected extra argument: %s\n"|214-16-0-0
5980|data|DCD aUsageSmpZonedB - 0xF26; "Usage: smp_zoned_broadcast [--broadcast"...|194-10-0-0
5984|data|DCD aD - 0xF6E; "%d"|246-16-0-0
5988|data|DCD aExpectedNumber - 0xF8A; "expected number after separator in SMP_"...|222-16-0-0
5992|data|DCD aCanTHaveBothFs - 0xFC8; "can't have both --fszg and --szg option"...|148-17-0-0
5996|data|DCD aSmpUtilsDevice - 0xFD8; "SMP_UTILS_DEVICE"|20-16-0-0
6000|data|DCD aSmpUtilsSasAdd - 0xFF2; "SMP_UTILS_SAS_ADDR"|170-16-0-0
6004|data|DCD aBadArgumentToS - 0x102E; "bad argument to '--sa'\n"|66-15-0-0
6008|data|DCD aMissingDeviceN - 0x1048; "missing device name on command line\n  "...|184-15-0-0
6012|data|DCD aUsageSmpZonedB - 0x1058; "Usage: smp_zoned_broadcast [--broadcast"...|144-9-0-0
6016|data|DCD aFailedDecoding - 0x10B0; "failed decoding --szg=ZGL option\n"|156-17-0-0
6020|data|DCD aSasTargetAddre - 0x10CA; "SAS (target) address not in naa-5 forma"...|42-16-0-0
6024|data|DCD aUseInterfaceTo - 0x10E6; "    use '--interface=' to override\n"|82-16-0-0
6028|data|DCD aActualResponse - 0x11E0; "actual response length [%d] less than d"...|188-17-0-0
6032|data|DCD aR - 0x124A; "r"|62-15-0-0
6036|data|DCD a0123456789aabb - 0x1266; "0123456789aAbBcCdDeEfFxXhH ,\t"|70-15-0-0
6040|data|DCD aDidnTDetectAny - 0x134C; "didn't detect any source zone group num"...|36-15-0-0
6044|data|DCD aGiveSzgZglOrFs - 0x135C; "Give --szg=ZGL or --fszg=FS option (e.g"...|80-15-0-0
6048|data|DCD aFd2hexArrSynta - 0x13AC; "fd2hex_arr: syntax error at line %d, po"...|32-14-0-0
6052|data|DCD aFailedDecoding_0 - 0x13C8; "failed decoding --fszg=FS option\n"|192-16-0-0
6056|data|DCD aBadValueInEnvi - 0x13DE; "bad value in environment variable SMP_U"...|210-12-0-0
6060|data|DCD aUse0 - 0x13F2; "    use 0\n"|246-12-0-0
6064|data|DCD aFd2hexArrArray - 0x140A; "fd2hex_arr: array length exceeded\n"|242-13-0-0
6068|data|DCD aCloseErrorS - 0x1438; "close error: %s\n"|16-16-0-0
6072|data|DCD aFailedDecoding_1 - 0x1450; "failed decoding --szg option, max 255 s"...|92-16-0-0
6076|data|DCD aExitStatusDInd - 0x146E; "Exit status %d indicates error detected"...|238-15-0-0
6080|data|DCD aZonedBroadcast - 0x148C; "    Zoned broadcast request:"|88-14-0-0
6084|data|DCD a02x - 0x1490; "%02x "|124-14-0-0
6088|data|DCD asc_2304 - 0x1492; "\n      "|114-14-0-0
6092|data|DCD aSmpSendReqFail - 0x1528; "smp_send_req failed, res=%d\n"|236-13-0-0
6096|data|DCD aSmpSendReqTran - 0x154A; "smp_send_req transport_error=%d\n"|234-13-0-0
6100|data|DCD aSmpSendReqFail - 0x1560; "smp_send_req failed, res=%d\n"|180-13-0-0
6104|data|DCD aTryAddingVOpti - 0x1574; "    try adding '-v' option for more deb"...|116-15-0-0
6108|data|DCD aResponseTooSho - 0x1588; "response too short, len=%d\n"|208-13-0-0
6112|data|DCD aCloseErrorS - 0x15AA; "close error: %s\n"|158-14-0-0
6116|data|DCD stdin_ptr - 0x12F3C|172-0-0-0
6120|data|DCD aUnableToDeterm - 0x15E6; "unable to determine response length\n"|142-13-0-0
6124|data|DCD aUnableToOpenSF - 0x15FE; "Unable to open %s for reading\n"|142-11-0-0
6128|data|DCD aFd2hexArrError - 0x161E; "fd2hex_arr: error in line %d, at pos %d"...|2-12-0-0
6132|data|DCD aZonedBroadcast_0 - 0x165E; "Zoned broadcast result: %s\n"|122-13-0-0
6136|data|DCD aCloseErrorS - 0x168A; "close error: %s\n"|190-13-0-0
6140|data|DCD aExpectedSmpFra - 0x16CC; "expected SMP frame response type, got=0"...|40-13-0-0
6144|data|DCD aExpectedFuncti - 0x16EC; "Expected function code=0x%x, got=0x%x\n"|52-13-0-0
6148|data|DCD aZonedBroadcast_0 - 0x1712; "Zoned broadcast result: %s\n"|198-12-0-0
6152|code|MOV.W           R11, #0|79-240-0-11
6156|code|MOV.W           LR, #0|79-240-0-14
6160|code|POP             {R1}; argc|2-188
6162|code|MOV             R2, SP; ubp_av|106-70
6164|code|PUSH            {R2}; stack_end|4-180
6166|code|PUSH            {R0}; rtld_fini|1-180
6168|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1840)|223-248-36-160
6172|code|ADR             R3, off_1840|8-163
6174|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
6176|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F3C)|223-248-32-192
6180|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
6184|code|PUSH.W          {R12}; fini|77-248-4-205
6188|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F3C)|6-75
6190|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
6194|code|LDR             R0, =(main_ptr - 0x12F3C)|6-72
6196|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
6200|code|BLX             __libc_start_main|255-247-166-233
6204|code|BLX             abort|255-247-40-234
6208|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1840|252-22-1-0
6212|data|DCD __libc_csu_fini_ptr - 0x12F3C|144-0-0-0
6216|data|DCD __libc_csu_init_ptr - 0x12F3C|176-0-0-0
6220|data|DCD main_ptr - 0x12F3C|180-0-0-0
6224|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1860)|20-48-159-229
6228|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F3C)|20-32-159-229
6232|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
6236|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
6240|code|CMP             R2, #0|0-0-82-227
6244|code|BXEQ            LR|30-255-47-1
6248|code|B               __gmon_start__|201-252-255-234
6252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1860|220-22-1-0
6256|data|DCD __gmon_start___ptr_0 - 0x12F3C|168-0-0-0
6260|code|LDR             R3, =(__bss_start__ - 0x187C)|7-75
6262|code|LDR             R0, =(__bss_start__ - 0x1880)|8-72
6264|code|ADD             R3, PC; __bss_start__|123-68
6266|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1886)|8-74
6268|code|ADD             R0, PC; __bss_start__|120-68
6270|code|ADDS            R3, #3|3-51
6272|code|SUBS            R3, R3, R0|27-26
6274|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
6276|code|CMP             R3, #6|6-43
6278|code|BLS             locret_1890|3-217
6280|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F3C)|5-75
6282|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
6284|code|CBZ             R3, locret_1890|3-177
6286|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
6288|code|BX              LR|112-71
6290|data|ALIGN 4|0-191
6292|data|DCD __bss_start__ - 0x187C|76-24-1-0
6296|data|DCD __bss_start__ - 0x1880|72-24-1-0
6300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1886|182-22-1-0
6304|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F3C|152-0-0-0
6308|code|LDR             R1, =(__bss_start__ - 0x18AC)|8-73
6310|code|LDR             R0, =(__bss_start__ - 0x18B0)|9-72
6312|code|ADD             R1, PC; __bss_start__|121-68
6314|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x18B4)|9-75
6316|code|ADD             R0, PC; __bss_start__|120-68
6318|code|SUBS            R1, R1, R0|9-26
6320|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6322|code|ASRS            R1, R1, #2|137-16
6324|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
6328|code|ASRS            R1, R1, #1|73-16
6330|code|BEQ             locret_18C4|3-208
6332|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F3C)|5-74
6334|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
6336|code|CBZ             R3, locret_18C4|3-177
6338|code|BX              R3; _ITM_registerTMCloneTable|24-71
6340|code|BX              LR|112-71
6342|data|ALIGN 4|0-191
6344|data|DCD __bss_start__ - 0x18AC|28-24-1-0
6348|data|DCD __bss_start__ - 0x18B0|24-24-1-0
6352|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18B4|136-22-1-0
6356|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F3C|188-0-0-0
6360|code|PUSH            {R3,LR}|8-181
6362|code|LDR             R3, =(__bss_start__ - 0x18E2)|10-75
6364|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x18E4)|10-74
6366|code|ADD             R3, PC; __bss_start__|123-68
6368|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
6370|code|LDRB            R3, [R3]|27-120
6372|code|CBNZ            R3, locret_1902|107-185
6374|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F3C)|9-75
6376|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
6378|code|CBZ             R3, loc_18F6|35-177
6380|code|LDR             R3, =(off_13004 - 0x18F2)|8-75
6382|code|ADD             R3, PC; off_13004|123-68
6384|code|LDR             R0, [R3]; off_13004 ; void *|24-104
6386|code|BLX             __cxa_finalize|255-247-20-233
6390|code|BL              sub_1874|255-247-189-255
6394|code|LDR             R3, =(__bss_start__ - 0x1902)|6-75
6396|code|MOVS            R2, #1|1-34
6398|code|ADD             R3, PC; __bss_start__|123-68
6400|code|STRB            R2, [R3]|26-112
6402|code|POP             {R3,PC}|8-189
6404|data|DCD __bss_start__ - 0x18E2|230-23-1-0
6408|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x18E4|88-22-1-0
6412|data|DCD __cxa_finalize_ptr_0 - 0x12F3C|148-0-0-0
6416|data|DCD off_13004 - 0x18F2|18-23-1-0
6420|data|DCD __bss_start__ - 0x1902|198-23-1-0
6424|code|LDR             R0, =(dword_12E30 - 0x1920)|7-72
6426|code|PUSH            {R3,LR}|8-181
6428|code|ADD             R0, PC; dword_12E30|120-68
6430|code|LDR             R2, [R0]|2-104
6432|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1926)|6-75
6434|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
6436|code|CBNZ            R2, loc_192C|18-185
6438|code|POP.W           {R3,LR}|189-232-8-64
6442|code|B               sub_18A4|187-231
6444|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F3C)|4-74
6446|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
6448|code|CMP             R3, #0|0-43
6450|code|BEQ             loc_1926|248-208
6452|code|BLX             R3; _Jv_RegisterClasses|152-71
6454|code|B               loc_1926|246-231
6456|data|DCD dword_12E30 - 0x1920|16-21-1-0
6460|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1926|22-22-1-0
6464|data|DCD _Jv_RegisterClasses_ptr - 0x12F3C|184-0-0-0
6468|code|PUSH.W          {R3-R9,LR}|45-233-248-67
6472|code|MOV             R7, R0|7-70
6474|code|LDR             R6, =(off_12E2C - 0x1956)|12-78
6476|code|MOV             R8, R1|136-70
6478|code|LDR             R5, =(off_12E28 - 0x195C)|12-77
6480|code|MOV             R9, R2|145-70
6482|code|ADD             R6, PC; off_12E2C|126-68
6484|code|BLX             .init_proc|255-247-210-232
6488|code|ADD             R5, PC; off_12E28|125-68
6490|code|SUBS            R6, R6, R5|118-27
6492|code|ASRS            R6, R6, #2|182-16
6494|code|BEQ             locret_1976|10-208
6496|code|SUBS            R5, #4|4-61
6498|code|MOVS            R4, #0|0-36
6500|code|ADDS            R4, #1|1-52
6502|code|LDR.W           R3, [R5,#4]!|85-248-4-63
6506|code|MOV             R0, R7|56-70
6508|code|MOV             R1, R8|65-70
6510|code|MOV             R2, R9|74-70
6512|code|BLX             R3|152-71
6514|code|CMP             R4, R6|180-66
6516|code|BNE             loc_1964|246-209
6518|code|POP.W           {R3-R9,PC}|189-232-248-131
6522|data|ALIGN 4|0-191
6524|data|DCD off_12E2C - 0x1956|214-20-1-0
6528|data|DCD off_12E28 - 0x195C|204-20-1-0
6532|code|BX              LR|112-71
6534|data|ALIGN 4|0-191
6536|code|PUSH            {R3,LR}; _fini|8-64-45-233
6540|code|POP             {R3,PC}|8-128-189-232
77352|data|DCD sub_1918+1|25-25-0-0
77356|data|DCD sub_18D8+1|217-24-0-0
77360|data|DCD 0|0-0-0-0
77364|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsmputils1.so.1|1-0-0-0-1-0-0-0
77372|data|Elf32_Dyn <1, <0x119>>; DT_NEEDED libc.so.6|1-0-0-0-25-1-0-0
77380|data|Elf32_Dyn <1, <0x214>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-20-2-0-0
77388|data|Elf32_Dyn <0xC, <0xAFC>>; DT_INIT|12-0-0-0-252-10-0-0
77396|data|Elf32_Dyn <0xD, <0x1988>>; DT_FINI|13-0-0-0-136-25-0-0
77404|data|Elf32_Dyn <0x19, <0x12E28>>; DT_INIT_ARRAY|25-0-0-0-40-46-1-0
77412|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77420|data|Elf32_Dyn <0x1A, <0x12E2C>>; DT_FINI_ARRAY|26-0-0-0-44-46-1-0
77428|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77436|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77444|data|Elf32_Dyn <5, <0x5A4>>; DT_STRTAB|5-0-0-0-164-5-0-0
77452|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77460|data|Elf32_Dyn <0xA, <0x2B5>>; DT_STRSZ|10-0-0-0-181-2-0-0
77468|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77476|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77484|data|Elf32_Dyn <3, <0x12F3C>>; DT_PLTGOT|3-0-0-0-60-47-1-0
77492|data|Elf32_Dyn <2, <0x108>>; DT_PLTRELSZ|2-0-0-0-8-1-0-0
77500|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77508|data|Elf32_Dyn <0x17, <0x9F4>>; DT_JMPREL|23-0-0-0-244-9-0-0
77516|data|Elf32_Dyn <0x11, <0x91C>>; DT_REL|17-0-0-0-28-9-0-0
77524|data|Elf32_Dyn <0x12, <0xD8>>; DT_RELSZ|18-0-0-0-216-0-0-0
77532|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77540|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77548|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77556|data|Elf32_Dyn <0x6FFFFFFE, <0x8CC>>; DT_VERNEED|254-255-255-111-204-8-0-0
77564|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77572|data|Elf32_Dyn <0x6FFFFFF0, <0x85A>>; DT_VERSYM|240-255-255-111-90-8-0-0
77580|data|Elf32_Dyn <0x6FFFFFFA, <0x11>>; DT_RELCOUNT|250-255-255-111-17-0-0-0
77588|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77596|data|ALIGN 0x10|0-0-0-0
77628|data|DCD stru_12E34|52-46-1-0
77632|data|DCD 0|0-0-0-0
77636|data|DCD dword_0|0-0-0-0
77640|data|DCD __imp___cxa_finalize|208-48-1-0
77644|data|DCD __imp_smp_initiator_close|212-48-1-0
77648|data|DCD __imp_dStrHex|216-48-1-0
77652|data|DCD __imp_fgets|220-48-1-0
77656|data|DCD __imp_smp_get_func_def_resp_len|228-48-1-0
77660|data|DCD __imp___stack_chk_fail|236-48-1-0
77664|data|DCD __imp_smp_is_naa5|240-48-1-0
77668|data|DCD __imp_fwrite|248-48-1-0
77672|data|DCD __imp_getenv|252-48-1-0
77676|data|DCD __imp___libc_start_main|0-49-1-0
77680|data|DCD __imp___gmon_start__|104-49-1-0
77684|data|DCD __imp_getopt_long|4-49-1-0
77688|data|DCD __imp___ctype_b_loc|8-49-1-0
77692|data|DCD __imp_strlen|12-49-1-0
77696|data|DCD __imp_strchr|16-49-1-0
77700|data|DCD __imp_smp_send_req|24-49-1-0
77704|data|DCD __imp___errno_location|28-49-1-0
77708|data|DCD __imp___isoc99_sscanf|32-49-1-0
77712|data|DCD __imp_memset|36-49-1-0
77716|data|DCD __imp_putchar|40-49-1-0
77720|data|DCD __imp_strncpy|44-49-1-0
77724|data|DCD __imp_smp_get_dhnum|48-49-1-0
77728|data|DCD __imp___fprintf_chk|52-49-1-0
77732|data|DCD __imp_fclose|56-49-1-0
77736|data|DCD __imp_fputc|60-49-1-0
77740|data|DCD __imp_safe_strerror|64-49-1-0
77744|data|DCD __imp_fopen64|68-49-1-0
77748|data|DCD __imp_smp_get_llnum|72-49-1-0
77752|data|DCD __imp_smp_get_func_res_str|76-49-1-0
77756|data|DCD __imp_smp_get_num|80-49-1-0
77760|data|DCD __imp_smp_initiator_open|84-49-1-0
77764|data|DCD __imp_abort|92-49-1-0
77768|data|DCD __imp_strspn|96-49-1-0
77772|data|DCD __libc_csu_fini+1|133-25-0-0
77776|data|DCD __imp___cxa_finalize|208-48-1-0
77780|data|DCD _ITM_deregisterTMCloneTable|100-49-1-0
77784|data|DCD __stack_chk_guard|224-48-1-0
77788|data|DCD optind|232-48-1-0
77792|data|DCD stderr|244-48-1-0
77796|data|DCD __imp___gmon_start__|104-49-1-0
77800|data|DCD stdin|20-49-1-0
77804|data|DCD __libc_csu_init+1|69-25-0-0
77808|data|DCD main+1|169-12-0-0
77812|data|DCD _Jv_RegisterClasses|108-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|112-49-1-0
77820|data|DCD optarg|88-49-1-0
78024|data|% 1; Alternative name is '__bss_start'|255
