address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|129-19-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x3194; SHT file offset|148-49-0-0
36|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1C; Number of entries in SHT|28-0
50|data|DCW 0x1B; SHT entry index for string table|27-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x2844; File offset|68-40-0-0
60|data|DCD unk_2844; Virtual address|68-40-0-0
64|data|DCD 0x2844; Physical address|68-40-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x2850; Size in file image|80-40-0-0
168|data|DCD 0x2850; Size in memory image|80-40-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x8000; Alignment|0-128-0-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E24; File offset|36-46-0-0
188|data|DCD off_AE24; Virtual address|36-174-0-0
192|data|DCD 0xAE24; Physical address|36-174-0-0
196|data|DCD 0x248; Size in file image|72-2-0-0
200|data|DCD 0x2264; Size in memory image|100-34-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x8000; Alignment|0-128-0-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E30; File offset|48-46-0-0
220|data|DCD stru_AE30; Virtual address|48-174-0-0
224|data|DCD 0xAE30; Physical address|48-174-0-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 4; Alignment|4-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E24; File offset|36-46-0-0
316|data|DCD off_AE24; Virtual address|36-174-0-0
320|data|DCD 0xAE24; Physical address|36-174-0-0
324|data|DCD 0x1DC; Size in file image|220-1-0-0
328|data|DCD 0x1DC; Size in memory image|220-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x2E, 0xA0, 0x41, 0x99, 0xED, 9, 0x3B, 0xAE, 0x75; Desc|46-160-65-153-237-9-59-174-117-76-19-201-126-124-188-57-126-220-10-139
436|data|DCD 0x25|37-0-0-0
440|data|DCD 0x38|56-0-0-0
444|data|DCD 0x2B, 0x22, 0, 0x13, 0x21, 0, 0, 0x2E, 0x18, 0xF, 0x30|43-0-0-0-34-0-0-0-0-0-0-0-19-0-0-0-33-0-0-0-0-0-0-0-0-0-0-0-46-0-0-0-24-0-0-0-15-0-0-0-48-0-0-0-9-0-0-0-0-0-0-0-30-0-0-0-50-0-0-0-32-0-0-0-31-0-0-0-0-0-0-0-20-0-0-0-26-0-0-0-0-0-0-0-18-0-0-0-22-0-0-0-0-0-0-0-0-0-0-0-38-0-0-0-3-0-0-0-0-0-0-0-28-0-0-0-25-0-0-0-13-0-0-0-42-0-0-0-53-0-0-0-36-0-0-0-52-0-0-0-41-0-0-0-35-0-0-0
592|data|DCD 0, 0, 0, 0, 0, 0, 0, 6, 0, 0x2F, 7, 0, 0x25, 5, 0xA|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-6-0-0-0-0-0-0-0-47-0-0-0-7-0-0-0-0-0-0-0-37-0-0-0-5-0-0-0-10-0-0-0-0-0-0-0-14-0-0-0-49-0-0-0-0-0-0-0-0-0-0-0-45-0-0-0-12-0-0-0-17-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-11-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-39-0-0-0-0-0-0-0-51-0-0-0-0-0-0-0-8-0-0-0-0-0-0-0-23-0-0-0-4-0-0-0-29-0-0-0-55-0-0-0-44-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-21-0-0-0-0-0-0-0-0-0-0-0-27-0-0-0-40-0-0-0-54-0-0-0
816|data|DCD 0x11|17-0-0-0
820|data|DCD 0x25|37-0-0-0
824|data|DCD 4|4-0-0-0
828|data|DCD 7|7-0-0-0
832|data|DCD 0xC9401141, 0x882100A2, 0x4D02042A, 0x40440530|65-17-64-201-162-0-33-136-42-4-2-77-48-5-68-64
848|data|DCD 0x25, 0x26, 0x28, 0x29, 0x2A, 0x2C, 0, 0x2D, 0x2E|37-0-0-0-38-0-0-0-40-0-0-0-41-0-0-0-42-0-0-0-44-0-0-0-0-0-0-0-45-0-0-0-46-0-0-0-47-0-0-0-49-0-0-0-51-0-0-0-53-0-0-0-54-0-0-0-0-0-0-0-0-0-0-0-55-0-0-0
916|data|DCD 0xE834AF01, 0x7C9D7AB0, 0x7C9A7F6B, 0x943C5477, 0x1C5871D9|1-175-52-232-176-122-157-124-107-127-154-124-119-84-60-148-217-113-88-28-186-227-146-124-89-239-151-121-107-9-67-214-67-69-213-236-13-20-226-158-26-147-147-28-219-205-227-158-164-176-163-16-151-63-149-124-196-208-199-2-229-162-174-246-223-136-214-1-191-218-87-27-7-236-226-92
992|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
1008|data|Elf32_Sym <byte_760 - byte_760, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
1024|data|Elf32_Sym <byte_760 - byte_760, dword_AE2C, 0, 3, 0, 0x15>|0-0-0-0-44-174-0-0-0-0-0-0-3-0-21-0
1040|data|Elf32_Sym <aCalloc - byte_760, dword_0, 0, 0x12, 0, 0>; "calloc"|152-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1056|data|Elf32_Sym <aRaise - byte_760, dword_0, 0, 0x12, 0, 0>; "raise"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1072|data|Elf32_Sym <aCxaFinalize - byte_760, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|28-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
1088|data|Elf32_Sym <aStrtol - byte_760, dword_0, 0, 0x12, 0, 0>; "strtol"|145-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1104|data|Elf32_Sym <aIsoc99Fscanf - byte_760, dword_0, 0, 0x12, 0, 0>; "__isoc99_fscanf"|187-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1120|data|Elf32_Sym <aFopen - byte_760, dword_0, 0, 0x12, 0, 0>; "fopen"|71-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1136|data|Elf32_Sym <aStackChkGuard - byte_760, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|81-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1152|data|Elf32_Sym <aMemsetChk - byte_760, dword_0, 0, 0x12, 0, 0>; "__memset_chk"|236-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1168|data|Elf32_Sym <aStrftime+4 - byte_760, dword_0, 0, 0x12, 0, 0>; "time"|140-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1184|data|Elf32_Sym <aSleep - byte_760, dword_0, 0, 0x12, 0, 0>; "sleep"|22-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1200|data|Elf32_Sym <aStackChkFail - byte_760, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|105-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1216|data|Elf32_Sym <aPerror - byte_760, dword_0, 0, 0x12, 0, 0>; "perror"|85-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1232|data|Elf32_Sym <aStderr - byte_760, dword_0, 0, 0x11, 0, 0>; "stderr"|223-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1248|data|Elf32_Sym <aFwrite - byte_760, dword_0, 0, 0x12, 0, 0>; "fwrite"|5-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1264|data|Elf32_Sym <aIoctl - byte_760, dword_0, 0, 0x12, 0, 0>; "ioctl"|230-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1280|data|Elf32_Sym <aStrcpy - byte_760, dword_0, 0, 0x12, 0, 0>; "strcpy"|46-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1296|data|Elf32_Sym <aGethostname - byte_760, dword_0, 0, 0x12, 0, 0>; "gethostname"|249-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1312|data|Elf32_Sym <aPuts - byte_760, dword_0, 0, 0x12, 0, 0>; "puts"|100-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1328|data|Elf32_Sym <aLibcStartMain - byte_760, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|43-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1344|data|Elf32_Sym <aStrftime - byte_760, dword_0, 0, 0x12, 0, 0>; "strftime"|136-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1360|data|Elf32_Sym <aLocaltime - byte_760, dword_0, 0, 0x12, 0, 0>; "localtime"|12-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1376|data|Elf32_Sym <aGmonStart - byte_760, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|1-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1392|data|Elf32_Sym <aExit - byte_760, dword_0, 0, 0x12, 0, 0>; "exit"|66-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1408|data|Elf32_Sym <aGetopt - byte_760, dword_0, 0, 0x12, 0, 0>; "getopt"|166-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1424|data|Elf32_Sym <aMemset - byte_760, dword_0, 0, 0x12, 0, 0>; "memset"|159-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1440|data|Elf32_Sym <aPutchar - byte_760, dword_0, 0, 0x12, 0, 0>; "putchar"|122-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1456|data|Elf32_Sym <aStrncpy - byte_760, dword_0, 0, 0x12, 0, 0>; "strncpy"|92-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1472|data|Elf32_Sym <aPrintfChk - byte_760, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|53-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1488|data|Elf32_Sym <aFprintfChk - byte_760, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|173-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1504|data|Elf32_Sym <aFclose - byte_760, dword_0, 0, 0x12, 0, 0>; "fclose"|203-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1520|data|Elf32_Sym <aStrrchr - byte_760, dword_0, 0, 0x12, 0, 0>; "strrchr"|77-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1536|data|Elf32_Sym <aJvRegisterclas - byte_760, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|16-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1552|data|Elf32_Sym <aOptarg - byte_760, dword_0, 0, 0x11, 0, 0>; "optarg"|216-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1568|data|Elf32_Sym <aAbort - byte_760, dword_0, 0, 0x12, 0, 0>; "abort"|130-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1584|data|Elf32_Sym <aBssEnd+1 - byte_760, _end_0, 0, 0x10, 0, 0xFFF1>; "_bss_end__"|146-1-0-0-136-208-0-0-0-0-0-0-16-0-241-255
1600|data|Elf32_Sym <aRows - byte_760, rows, 4, 0x11, 0, 0x18>; "rows"|193-1-0-0-20-176-0-0-4-0-0-0-17-0-24-0
1616|data|Elf32_Sym <aLibcStartMain+0xD - byte_760, main+1, 0x588, 0x12, 0, 0xE>; "main"|56-1-0-0-249-13-0-0-136-5-0-0-18-0-14-0
1632|data|Elf32_Sym <aBssStart_0 - byte_760, unk_B06C, 0, 0x10, 0, 0xFFF1>; "__bss_start__"|131-1-0-0-108-176-0-0-0-0-0-0-16-0-241-255
1648|data|Elf32_Sym <aBssStart - byte_760, unk_B06C, 0, 0x10, 0, 0xFFF1>; "__bss_start"|119-1-0-0-108-176-0-0-0-0-0-0-16-0-241-255
1664|data|Elf32_Sym <aEnd_0 - byte_760, _end_0, 0, 0x10, 0, 0xFFF1>; "_end"|165-1-0-0-136-208-0-0-0-0-0-0-16-0-241-255
1680|data|Elf32_Sym <aEnd - byte_760, _end_0, 0, 0x10, 0, 0xFFF1>; "__end__"|157-1-0-0-136-208-0-0-0-0-0-0-16-0-241-255
1696|data|Elf32_Sym <aDataStart - byte_760, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|99-1-0-0-0-176-0-0-0-0-0-0-16-0-24-0
1712|data|Elf32_Sym <aEdata - byte_760, unk_B06C, 0, 0x10, 0, 0xFFF1>; "_edata"|112-1-0-0-108-176-0-0-0-0-0-0-16-0-241-255
1728|data|Elf32_Sym <aLibcCsuFini - byte_760, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|170-1-0-0-69-32-0-0-2-0-0-0-18-0-14-0
1744|data|Elf32_Sym <aStrbuf - byte_760, strbuf, 0x2000, 0x11, 0, 0x19>; "strbuf"|186-1-0-0-116-176-0-0-0-32-0-0-17-0-25-0
1760|data|Elf32_Sym <aLibcCsuInit - byte_760, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|223-1-0-0-5-32-0-0-64-0-0-0-18-0-14-0
1776|data|Elf32_Sym <aWidth - byte_760, width, 4, 0x11, 0, 0x19>; "width"|198-1-0-0-116-208-0-0-4-0-0-0-17-0-25-0
1792|data|Elf32_Sym <aCols - byte_760, cols, 4, 0x11, 0, 0x18>; "cols"|246-1-0-0-12-176-0-0-4-0-0-0-17-0-24-0
1808|data|Elf32_Sym <aTheclocks - byte_760, theclocks, 4, 0x11, 0, 0x19>; "theclocks"|204-1-0-0-120-208-0-0-4-0-0-0-17-0-25-0
1824|data|Elf32_Sym <aTheclocks+3 - byte_760, clocks, 4, 0x11, 0, 0x19>; "clocks"|207-1-0-0-128-208-0-0-4-0-0-0-17-0-25-0
1840|data|Elf32_Sym <aHeight - byte_760, height, 4, 0x11, 0, 0x19>; "height"|239-1-0-0-132-208-0-0-4-0-0-0-17-0-25-0
1856|data|Elf32_Sym <aBssEnd - byte_760, _end_0, 0, 0x10, 0, 0xFFF1>; "__bss_end__"|145-1-0-0-136-208-0-0-0-0-0-0-16-0-241-255
1872|data|Elf32_Sym <aClockpad - byte_760, clockpad, 4, 0x11, 0, 0x19>; "clockpad"|214-1-0-0-124-208-0-0-4-0-0-0-17-0-25-0
1888|data|DCB 0|0
1889|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1904|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1924|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1934|data|DCB "strcpy",0|115-116-114-99-112-121-0
1941|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1954|data|DCB "exit",0|101-120-105-116-0
1959|data|DCB "fopen",0|102-111-112-101-110-0
1965|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
1973|data|DCB "perror",0|112-101-114-114-111-114-0
1980|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1988|data|DCB "puts",0|112-117-116-115-0
1993|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
2010|data|DCB "putchar",0|112-117-116-99-104-97-114-0
2018|data|DCB "abort",0|97-98-111-114-116-0
2024|data|DCB "strftime",0|115-116-114-102-116-105-109-101-0
2033|data|DCB "strtol",0|115-116-114-116-111-108-0
2040|data|DCB "calloc",0|99-97-108-108-111-99-0
2047|data|DCB "memset",0|109-101-109-115-101-116-0
2054|data|DCB "getopt",0|103-101-116-111-112-116-0
2061|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
2075|data|DCB "__isoc99_fscanf",0|95-95-105-115-111-99-57-57-95-102-115-99-97-110-102-0
2091|data|DCB "fclose",0|102-99-108-111-115-101-0
2098|data|DCB "raise",0|114-97-105-115-101-0
2104|data|DCB "optarg",0|111-112-116-97-114-103-0
2111|data|DCB "stderr",0|115-116-100-101-114-114-0
2118|data|DCB "ioctl",0|105-111-99-116-108-0
2124|data|DCB "__memset_chk",0|95-95-109-101-109-115-101-116-95-99-104-107-0
2137|data|DCB "gethostname",0|103-101-116-104-111-115-116-110-97-109-101-0
2149|data|DCB "fwrite",0|102-119-114-105-116-101-0
2156|data|DCB "localtime",0|108-111-99-97-108-116-105-109-101-0
2166|data|DCB "sleep",0|115-108-101-101-112-0
2172|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
2187|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
2205|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
2225|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
2243|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
2256|data|DCB "_edata",0|95-101-100-97-116-97-0
2263|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2275|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2289|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2301|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2309|data|DCB "_end",0|95-101-110-100-0
2314|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2330|data|DCB "strbuf",0|115-116-114-98-117-102-0
2337|data|DCB "rows",0|114-111-119-115-0
2342|data|DCB "width",0|119-105-100-116-104-0
2348|data|DCB "theclocks",0|116-104-101-99-108-111-99-107-115-0
2358|data|DCB "clockpad",0|99-108-111-99-107-112-97-100-0
2367|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2383|data|DCB "height",0|104-101-105-103-104-116-0
2390|data|DCB "cols",0|99-111-108-115-0
2395|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2405|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
2415|data|DCB 0|0
2416|data|DCW 0|0-0
2418|data|DCW 0|0-0
2420|data|DCW 0|0-0
2422|data|DCW 2; calloc@@GLIBC_2.4|2-0
2424|data|DCW 2; raise@@GLIBC_2.4|2-0
2426|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2428|data|DCW 2; strtol@@GLIBC_2.4|2-0
2430|data|DCW 3; __isoc99_fscanf@@GLIBC_2.7|3-0
2432|data|DCW 2; fopen@@GLIBC_2.4|2-0
2434|data|DCW 4; __stack_chk_guard@@GLIBC_2.4|4-0
2436|data|DCW 2; __memset_chk@@GLIBC_2.4|2-0
2438|data|DCW 2; time@@GLIBC_2.4|2-0
2440|data|DCW 2; sleep@@GLIBC_2.4|2-0
2442|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2444|data|DCW 2; perror@@GLIBC_2.4|2-0
2446|data|DCW 2; stderr@@GLIBC_2.4|2-0
2448|data|DCW 2; fwrite@@GLIBC_2.4|2-0
2450|data|DCW 2; ioctl@@GLIBC_2.4|2-0
2452|data|DCW 2; strcpy@@GLIBC_2.4|2-0
2454|data|DCW 2; gethostname@@GLIBC_2.4|2-0
2456|data|DCW 2; puts@@GLIBC_2.4|2-0
2458|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2460|data|DCW 2; strftime@@GLIBC_2.4|2-0
2462|data|DCW 2; localtime@@GLIBC_2.4|2-0
2464|data|DCW 0; local  symbol: __gmon_start__|0-0
2466|data|DCW 2; exit@@GLIBC_2.4|2-0
2468|data|DCW 2; getopt@@GLIBC_2.4|2-0
2470|data|DCW 2; memset@@GLIBC_2.4|2-0
2472|data|DCW 2; putchar@@GLIBC_2.4|2-0
2474|data|DCW 2; strncpy@@GLIBC_2.4|2-0
2476|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
2478|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
2480|data|DCW 2; fclose@@GLIBC_2.4|2-0
2482|data|DCW 2; strrchr@@GLIBC_2.4|2-0
2484|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2486|data|DCW 2; optarg@@GLIBC_2.4|2-0
2488|data|DCW 2; abort@@GLIBC_2.4|2-0
2490|data|DCW 1; global symbol: _bss_end__|1-0
2492|data|DCW 1; global symbol: rows|1-0
2494|data|DCW 1; global symbol: main|1-0
2496|data|DCW 1; global symbol: __bss_start__|1-0
2498|data|DCW 1; global symbol: __bss_start|1-0
2500|data|DCW 1; global symbol: _end|1-0
2502|data|DCW 1; global symbol: __end__|1-0
2504|data|DCW 1; global symbol: __data_start|1-0
2506|data|DCW 1; global symbol: _edata|1-0
2508|data|DCW 1; global symbol: __libc_csu_fini|1-0
2510|data|DCW 1; global symbol: strbuf|1-0
2512|data|DCW 1; global symbol: __libc_csu_init|1-0
2514|data|DCW 1; global symbol: width|1-0
2516|data|DCW 1; global symbol: cols|1-0
2518|data|DCW 1; global symbol: theclocks|1-0
2520|data|DCW 1; global symbol: clocks|1-0
2522|data|DCW 1; global symbol: height|1-0
2524|data|DCW 1; global symbol: __bss_end__|1-0
2526|data|DCW 1; global symbol: clockpad|1-0
2528|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_760, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-61-1-0-0-16-0-0-0-32-0-0-0
2544|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_760, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-251-1-0-0-0-0-0-0
2560|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_760, 0x10, 0>; "libc.so.6"|1-0-2-0-36-0-0-0-16-0-0-0-0-0-0-0
2576|data|Elf32_Vernaux <0xD696917, 0, 3, aGlibc27 - byte_760, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-3-0-5-2-0-0-16-0-0-0
2592|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_760, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-251-1-0-0-0-0-0-0
2608|data|Elf32_Rel <0xAE24, 0x17>; R_ARM_RELATIVE|36-174-0-0-23-0-0-0
2616|data|Elf32_Rel <0xAE28, 0x17>; R_ARM_RELATIVE|40-174-0-0-23-0-0-0
2624|data|Elf32_Rel <0xAFBC, 0x17>; R_ARM_RELATIVE|188-175-0-0-23-0-0-0
2632|data|Elf32_Rel <0xAFC4, 0x17>; R_ARM_RELATIVE|196-175-0-0-23-0-0-0
2640|data|Elf32_Rel <0xAFCC, 0x17>; R_ARM_RELATIVE|204-175-0-0-23-0-0-0
2648|data|Elf32_Rel <0xAFD0, 0x17>; R_ARM_RELATIVE|208-175-0-0-23-0-0-0
2656|data|Elf32_Rel <0xAFD8, 0x17>; R_ARM_RELATIVE|216-175-0-0-23-0-0-0
2664|data|Elf32_Rel <0xAFE0, 0x17>; R_ARM_RELATIVE|224-175-0-0-23-0-0-0
2672|data|Elf32_Rel <0xAFE4, 0x17>; R_ARM_RELATIVE|228-175-0-0-23-0-0-0
2680|data|Elf32_Rel <0xAFE8, 0x17>; R_ARM_RELATIVE|232-175-0-0-23-0-0-0
2688|data|Elf32_Rel <0xAFEC, 0x17>; R_ARM_RELATIVE|236-175-0-0-23-0-0-0
2696|data|Elf32_Rel <0xAFF0, 0x17>; R_ARM_RELATIVE|240-175-0-0-23-0-0-0
2704|data|Elf32_Rel <0xAFFC, 0x17>; R_ARM_RELATIVE|252-175-0-0-23-0-0-0
2712|data|Elf32_Rel <0xB004, 0x17>; R_ARM_RELATIVE|4-176-0-0-23-0-0-0
2720|data|Elf32_Rel <0xB018, 0x17>; R_ARM_RELATIVE|24-176-0-0-23-0-0-0
2728|data|Elf32_Rel <0xB01C, 0x17>; R_ARM_RELATIVE|28-176-0-0-23-0-0-0
2736|data|Elf32_Rel <0xB020, 0x17>; R_ARM_RELATIVE|32-176-0-0-23-0-0-0
2744|data|Elf32_Rel <0xB024, 0x17>; R_ARM_RELATIVE|36-176-0-0-23-0-0-0
2752|data|Elf32_Rel <0xB028, 0x17>; R_ARM_RELATIVE|40-176-0-0-23-0-0-0
2760|data|Elf32_Rel <0xB02C, 0x17>; R_ARM_RELATIVE|44-176-0-0-23-0-0-0
2768|data|Elf32_Rel <0xB030, 0x17>; R_ARM_RELATIVE|48-176-0-0-23-0-0-0
2776|data|Elf32_Rel <0xB034, 0x17>; R_ARM_RELATIVE|52-176-0-0-23-0-0-0
2784|data|Elf32_Rel <0xB038, 0x17>; R_ARM_RELATIVE|56-176-0-0-23-0-0-0
2792|data|Elf32_Rel <0xB03C, 0x17>; R_ARM_RELATIVE|60-176-0-0-23-0-0-0
2800|data|Elf32_Rel <0xB040, 0x17>; R_ARM_RELATIVE|64-176-0-0-23-0-0-0
2808|data|Elf32_Rel <0xB044, 0x17>; R_ARM_RELATIVE|68-176-0-0-23-0-0-0
2816|data|Elf32_Rel <0xB048, 0x17>; R_ARM_RELATIVE|72-176-0-0-23-0-0-0
2824|data|Elf32_Rel <0xB04C, 0x17>; R_ARM_RELATIVE|76-176-0-0-23-0-0-0
2832|data|Elf32_Rel <0xB050, 0x17>; R_ARM_RELATIVE|80-176-0-0-23-0-0-0
2840|data|Elf32_Rel <0xB054, 0x17>; R_ARM_RELATIVE|84-176-0-0-23-0-0-0
2848|data|Elf32_Rel <0xB058, 0x17>; R_ARM_RELATIVE|88-176-0-0-23-0-0-0
2856|data|Elf32_Rel <0xB05C, 0x17>; R_ARM_RELATIVE|92-176-0-0-23-0-0-0
2864|data|Elf32_Rel <0xB060, 0x17>; R_ARM_RELATIVE|96-176-0-0-23-0-0-0
2872|data|Elf32_Rel <0xB064, 0x17>; R_ARM_RELATIVE|100-176-0-0-23-0-0-0
2880|data|Elf32_Rel <0xB068, 0x17>; R_ARM_RELATIVE|104-176-0-0-23-0-0-0
2888|data|Elf32_Rel <0xAFC0, 0x515>; R_ARM_GLOB_DAT __cxa_finalize|192-175-0-0-21-5-0-0
2896|data|Elf32_Rel <0xAFC8, 0x915>; R_ARM_GLOB_DAT __stack_chk_guard|200-175-0-0-21-9-0-0
2904|data|Elf32_Rel <0xAFD4, 0xF15>; R_ARM_GLOB_DAT stderr|212-175-0-0-21-15-0-0
2912|data|Elf32_Rel <0xAFDC, 0x1815>; R_ARM_GLOB_DAT __gmon_start__|220-175-0-0-21-24-0-0
2920|data|Elf32_Rel <0xAFF4, 0x2215>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-175-0-0-21-34-0-0
2928|data|Elf32_Rel <0xAFF8, 0x2315>; R_ARM_GLOB_DAT optarg|248-175-0-0-21-35-0-0
2936|data|Elf32_Rel <0xAF44, 0x316>; R_ARM_JUMP_SLOT calloc|68-175-0-0-22-3-0-0
2944|data|Elf32_Rel <0xAF48, 0x416>; R_ARM_JUMP_SLOT raise|72-175-0-0-22-4-0-0
2952|data|Elf32_Rel <0xAF4C, 0x516>; R_ARM_JUMP_SLOT __cxa_finalize|76-175-0-0-22-5-0-0
2960|data|Elf32_Rel <0xAF50, 0x616>; R_ARM_JUMP_SLOT strtol|80-175-0-0-22-6-0-0
2968|data|Elf32_Rel <0xAF54, 0x716>; R_ARM_JUMP_SLOT __isoc99_fscanf|84-175-0-0-22-7-0-0
2976|data|Elf32_Rel <0xAF58, 0x816>; R_ARM_JUMP_SLOT fopen|88-175-0-0-22-8-0-0
2984|data|Elf32_Rel <0xAF5C, 0xA16>; R_ARM_JUMP_SLOT __memset_chk|92-175-0-0-22-10-0-0
2992|data|Elf32_Rel <0xAF60, 0xB16>; R_ARM_JUMP_SLOT time|96-175-0-0-22-11-0-0
3000|data|Elf32_Rel <0xAF64, 0xC16>; R_ARM_JUMP_SLOT sleep|100-175-0-0-22-12-0-0
3008|data|Elf32_Rel <0xAF68, 0xD16>; R_ARM_JUMP_SLOT __stack_chk_fail|104-175-0-0-22-13-0-0
3016|data|Elf32_Rel <0xAF6C, 0xE16>; R_ARM_JUMP_SLOT perror|108-175-0-0-22-14-0-0
3024|data|Elf32_Rel <0xAF70, 0x1016>; R_ARM_JUMP_SLOT fwrite|112-175-0-0-22-16-0-0
3032|data|Elf32_Rel <0xAF74, 0x1116>; R_ARM_JUMP_SLOT ioctl|116-175-0-0-22-17-0-0
3040|data|Elf32_Rel <0xAF78, 0x1216>; R_ARM_JUMP_SLOT strcpy|120-175-0-0-22-18-0-0
3048|data|Elf32_Rel <0xAF7C, 0x1316>; R_ARM_JUMP_SLOT gethostname|124-175-0-0-22-19-0-0
3056|data|Elf32_Rel <0xAF80, 0x1416>; R_ARM_JUMP_SLOT puts|128-175-0-0-22-20-0-0
3064|data|Elf32_Rel <0xAF84, 0x1516>; R_ARM_JUMP_SLOT __libc_start_main|132-175-0-0-22-21-0-0
3072|data|Elf32_Rel <0xAF88, 0x1616>; R_ARM_JUMP_SLOT strftime|136-175-0-0-22-22-0-0
3080|data|Elf32_Rel <0xAF8C, 0x1716>; R_ARM_JUMP_SLOT localtime|140-175-0-0-22-23-0-0
3088|data|Elf32_Rel <0xAF90, 0x1816>; R_ARM_JUMP_SLOT __gmon_start__|144-175-0-0-22-24-0-0
3096|data|Elf32_Rel <0xAF94, 0x1916>; R_ARM_JUMP_SLOT exit|148-175-0-0-22-25-0-0
3104|data|Elf32_Rel <0xAF98, 0x1A16>; R_ARM_JUMP_SLOT getopt|152-175-0-0-22-26-0-0
3112|data|Elf32_Rel <0xAF9C, 0x1B16>; R_ARM_JUMP_SLOT memset|156-175-0-0-22-27-0-0
3120|data|Elf32_Rel <0xAFA0, 0x1C16>; R_ARM_JUMP_SLOT putchar|160-175-0-0-22-28-0-0
3128|data|Elf32_Rel <0xAFA4, 0x1D16>; R_ARM_JUMP_SLOT strncpy|164-175-0-0-22-29-0-0
3136|data|Elf32_Rel <0xAFA8, 0x1E16>; R_ARM_JUMP_SLOT __printf_chk|168-175-0-0-22-30-0-0
3144|data|Elf32_Rel <0xAFAC, 0x1F16>; R_ARM_JUMP_SLOT __fprintf_chk|172-175-0-0-22-31-0-0
3152|data|Elf32_Rel <0xAFB0, 0x2016>; R_ARM_JUMP_SLOT fclose|176-175-0-0-22-32-0-0
3160|data|Elf32_Rel <0xAFB4, 0x2116>; R_ARM_JUMP_SLOT strrchr|180-175-0-0-22-33-0-0
3168|data|Elf32_Rel <0xAFB8, 0x2416>; R_ARM_JUMP_SLOT abort|184-175-0-0-22-36-0-0
3176|code|PUSH            {R3,LR}|8-64-45-233
3180|code|BL              sub_13D0|215-1-0-235
3184|code|POP             {R3,PC}|8-128-189-232
3188|code|PUSH            {LR}|4-224-45-229
3192|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xC84)|4-224-159-229
3196|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
3200|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
3204|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC84|180-162-0-0
3208|code|ADR             R12, 0xC90|0-198-143-226
3212|code|ADD             R12, R12, #0xA000|10-202-140-226
3216|code|LDR             PC, [R12,#(calloc_ptr - 0xAC90)]!; __imp_calloc|180-242-188-229
3220|code|ADR             R12, 0xC9C|0-198-143-226
3224|code|ADD             R12, R12, #0xA000|10-202-140-226
3228|code|LDR             PC, [R12,#(raise_ptr - 0xAC9C)]!; __imp_raise|172-242-188-229
3232|code|ADR             R12, 0xCA8|0-198-143-226
3236|code|ADD             R12, R12, #0xA000|10-202-140-226
3240|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0xACA8)]!; __imp___cxa_finalize|164-242-188-229
3244|code|ADR             R12, 0xCB4|0-198-143-226
3248|code|ADD             R12, R12, #0xA000|10-202-140-226
3252|code|LDR             PC, [R12,#(strtol_ptr - 0xACB4)]!; __imp_strtol|156-242-188-229
3256|code|ADR             R12, 0xCC0|0-198-143-226
3260|code|ADD             R12, R12, #0xA000|10-202-140-226
3264|code|LDR             PC, [R12,#(__isoc99_fscanf_ptr - 0xACC0)]!; __imp___isoc99_fscanf|148-242-188-229
3268|code|ADR             R12, 0xCCC|0-198-143-226
3272|code|ADD             R12, R12, #0xA000|10-202-140-226
3276|code|LDR             PC, [R12,#(fopen_ptr - 0xACCC)]!; __imp_fopen|140-242-188-229
3280|code|ADR             R12, 0xCD8|0-198-143-226
3284|code|ADD             R12, R12, #0xA000|10-202-140-226
3288|code|LDR             PC, [R12,#(__memset_chk_ptr - 0xACD8)]!; __imp___memset_chk|132-242-188-229
3292|code|ADR             R12, 0xCE4|0-198-143-226
3296|code|ADD             R12, R12, #0xA000|10-202-140-226
3300|code|LDR             PC, [R12,#(time_ptr - 0xACE4)]!; __imp_time|124-242-188-229
3304|code|ADR             R12, 0xCF0|0-198-143-226
3308|code|ADD             R12, R12, #0xA000|10-202-140-226
3312|code|LDR             PC, [R12,#(sleep_ptr - 0xACF0)]!; __imp_sleep|116-242-188-229
3316|code|ADR             R12, 0xCFC|0-198-143-226
3320|code|ADD             R12, R12, #0xA000|10-202-140-226
3324|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0xACFC)]!; __imp___stack_chk_fail|108-242-188-229
3328|code|ADR             R12, 0xD08|0-198-143-226
3332|code|ADD             R12, R12, #0xA000|10-202-140-226
3336|code|LDR             PC, [R12,#(perror_ptr - 0xAD08)]!; __imp_perror|100-242-188-229
3340|code|ADR             R12, 0xD14|0-198-143-226
3344|code|ADD             R12, R12, #0xA000|10-202-140-226
3348|code|LDR             PC, [R12,#(fwrite_ptr - 0xAD14)]!; __imp_fwrite|92-242-188-229
3352|code|ADR             R12, 0xD20|0-198-143-226
3356|code|ADD             R12, R12, #0xA000|10-202-140-226
3360|code|LDR             PC, [R12,#(ioctl_ptr - 0xAD20)]!; __imp_ioctl|84-242-188-229
3364|code|ADR             R12, 0xD2C|0-198-143-226
3368|code|ADD             R12, R12, #0xA000|10-202-140-226
3372|code|LDR             PC, [R12,#(strcpy_ptr - 0xAD2C)]!; __imp_strcpy|76-242-188-229
3376|code|ADR             R12, 0xD38|0-198-143-226
3380|code|ADD             R12, R12, #0xA000|10-202-140-226
3384|code|LDR             PC, [R12,#(gethostname_ptr - 0xAD38)]!; __imp_gethostname|68-242-188-229
3388|code|ADR             R12, 0xD44|0-198-143-226
3392|code|ADD             R12, R12, #0xA000|10-202-140-226
3396|code|LDR             PC, [R12,#(puts_ptr - 0xAD44)]!; __imp_puts|60-242-188-229
3400|code|ADR             R12, 0xD50|0-198-143-226
3404|code|ADD             R12, R12, #0xA000|10-202-140-226
3408|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0xAD50)]!; __imp___libc_start_main|52-242-188-229
3412|code|ADR             R12, 0xD5C|0-198-143-226
3416|code|ADD             R12, R12, #0xA000|10-202-140-226
3420|code|LDR             PC, [R12,#(strftime_ptr - 0xAD5C)]!; __imp_strftime|44-242-188-229
3424|code|ADR             R12, 0xD68|0-198-143-226
3428|code|ADD             R12, R12, #0xA000|10-202-140-226
3432|code|LDR             PC, [R12,#(localtime_ptr - 0xAD68)]!; __imp_localtime|36-242-188-229
3436|code|ADR             R12, 0xD74|0-198-143-226
3440|code|ADD             R12, R12, #0xA000|10-202-140-226
3444|code|LDR             PC, [R12,#(__gmon_start___ptr - 0xAD74)]!; __imp___gmon_start__|28-242-188-229
3448|code|ADR             R12, 0xD80|0-198-143-226
3452|code|ADD             R12, R12, #0xA000|10-202-140-226
3456|code|LDR             PC, [R12,#(exit_ptr - 0xAD80)]!; __imp_exit|20-242-188-229
3460|code|ADR             R12, 0xD8C|0-198-143-226
3464|code|ADD             R12, R12, #0xA000|10-202-140-226
3468|code|LDR             PC, [R12,#(getopt_ptr - 0xAD8C)]!; __imp_getopt|12-242-188-229
3472|code|ADR             R12, 0xD98|0-198-143-226
3476|code|ADD             R12, R12, #0xA000|10-202-140-226
3480|code|LDR             PC, [R12,#(memset_ptr - 0xAD98)]!; __imp_memset|4-242-188-229
3484|code|ADR             R12, 0xDA4|0-198-143-226
3488|code|ADD             R12, R12, #0xA000|10-202-140-226
3492|code|LDR             PC, [R12,#(putchar_ptr - 0xADA4)]!; __imp_putchar|252-241-188-229
3496|code|ADR             R12, 0xDB0|0-198-143-226
3500|code|ADD             R12, R12, #0xA000|10-202-140-226
3504|code|LDR             PC, [R12,#(strncpy_ptr - 0xADB0)]!; __imp_strncpy|244-241-188-229
3508|code|BX              PC|120-71
3510|data|ALIGN 4|192-70
3512|code|ADR             R12, 0xDC0|0-198-143-226
3516|code|ADD             R12, R12, #0xA000|10-202-140-226
3520|code|LDR             PC, [R12,#(__printf_chk_ptr - 0xADC0)]!; __imp___printf_chk|232-241-188-229
3524|code|ADR             R12, 0xDCC|0-198-143-226
3528|code|ADD             R12, R12, #0xA000|10-202-140-226
3532|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0xADCC)]!; __imp___fprintf_chk|224-241-188-229
3536|code|ADR             R12, 0xDD8|0-198-143-226
3540|code|ADD             R12, R12, #0xA000|10-202-140-226
3544|code|LDR             PC, [R12,#(fclose_ptr - 0xADD8)]!; __imp_fclose|216-241-188-229
3548|code|ADR             R12, 0xDE4|0-198-143-226
3552|code|ADD             R12, R12, #0xA000|10-202-140-226
3556|code|LDR             PC, [R12,#(strrchr_ptr - 0xADE4)]!; __imp_strrchr|208-241-188-229
3560|code|ADR             R12, 0xDF0|0-198-143-226
3564|code|ADD             R12, R12, #0xA000|10-202-140-226
3568|code|LDR             PC, [R12,#(abort_ptr - 0xADF0)]!; __imp_abort|200-241-188-229
3572|data|ALIGN 8|0-0-0-0
3576|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3580|code|VPUSH           {D8}|45-237-2-139
3584|code|SUB             SP, SP, #0x8C|163-176
3586|code|LDR.W           R4, =(_GLOBAL_OFFSET_TABLE_ - 0xE12)|223-248-132-68
3590|code|MOV             R6, R1|14-70
3592|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0xAF38)|223-248-128-52
3596|code|MOV             R8, R0|128-70
3598|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
3600|code|STR             R4, [SP,#0xB8+var_80]|14-148
3602|code|LDR.W           R9, [R1]|209-248-0-144
3606|code|MOVS            R1, #0x2F ; '/'; c|47-33
3608|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
3610|code|MOV             R0, R9; s|72-70
3612|code|STR             R3, [SP,#0xB8+var_7C]|15-147
3614|code|LDR             R3, [R3]|27-104
3616|code|STR             R3, [SP,#0xB8+var_34]|33-147
3618|code|BLX             strrchr|255-247-220-239
3622|code|CBZ             R0, loc_E2C|8-177
3624|code|ADD.W           R9, R0, #1|0-241-1-9
3628|code|BL              sub_1584|0-240-170-251
3632|code|LDR.W           R7, =(off_B018 - 0xE42); " "|223-248-92-116
3636|code|LDR.W           R10, =(dword_B008 - 0xE44)|223-248-92-164
3640|code|MOVS            R4, #0|0-36
3642|code|LDR.W           R11, =(dword_B008 - 0xE48)|223-248-92-180
3646|code|ADD             R7, PC; off_B018|127-68
3648|code|ADD             R10, PC; dword_B008|250-68
3650|code|MOV             R5, R4|37-70
3652|code|ADD             R11, PC; dword_B008|251-68
3654|code|LDR             R2, [R7,#(off_B038 - 0xB018)]; "i:hvmr:c:"|58-106
3656|code|MOV             R0, R8; argc|64-70
3658|code|MOV             R1, R6; argv|49-70
3660|code|BLX             getopt|255-247-154-239
3664|code|ADDS            R3, R0, #1|67-28
3666|code|BEQ             loc_E98|33-208
3668|code|SUBS            R0, #0x63 ; 'c'; switch 20 cases|99-56
3670|code|CMP             R0, #0x13|19-40
3672|code|BHI.W           def_E5C; jumptable 00000E5C default case, cases 100-104,106-108,110-113,115-117|0-242-114-129
3676|code|TBH.W           [PC,R0,LSL#1]; switch jump|223-232-16-240
3680|data|DCW 0x165; jump table for switch statement|101-1
3682|data|DCW 0x170|112-1
3684|data|DCW 0x170|112-1
3686|data|DCW 0x170|112-1
3688|data|DCW 0x170|112-1
3690|data|DCW 0x170|112-1
3692|data|DCW 0x159|89-1
3694|data|DCW 0x170|112-1
3696|data|DCW 0x170|112-1
3698|data|DCW 0x170|112-1
3700|data|DCW 0x153|83-1
3702|data|DCW 0x170|112-1
3704|data|DCW 0x170|112-1
3706|data|DCW 0x170|112-1
3708|data|DCW 0x170|112-1
3710|data|DCW 0x148|72-1
3712|data|DCW 0x170|112-1
3714|data|DCW 0x170|112-1
3716|data|DCW 0x170|112-1
3718|data|DCW 0x14|20-0
3720|code|LDR             R2, [R7,#(off_B038 - 0xB018)]; jumptable 00000E5C case 118|58-106
3722|code|MOV             R0, R8; argc|64-70
3724|code|MOV             R1, R6; argv|49-70
3726|code|ADDS            R4, #1|1-52
3728|code|BLX             getopt|255-247-120-239
3732|code|ADDS            R3, R0, #1|67-28
3734|code|BNE             loc_E54|221-209
3736|code|CMP             R4, #0|0-44
3738|code|BNE.W           loc_11F2|64-240-170-129
3742|code|CMP             R5, #0|0-45
3744|code|BNE.W           loc_1210|64-240-182-129
3748|code|ORRS            R4, R5|44-67
3750|code|BNE.W           loc_132C|64-240-65-130
3754|code|MOVS            R1, #0x1E; len|30-33
3756|code|ADD             R0, SP, #0xB8+name; name|25-168
3758|code|BLX             gethostname|255-247-64-239
3762|code|CMP             R0, #0|0-40
3764|code|BNE.W           loc_1228|64-240-184-129
3768|code|ADD             R3, SP, #0xB8+name|25-171
3770|code|MOVS            R1, #0|0-33
3772|code|MOVS            R0, #0x20 ; ' '|32-32
3774|code|LDRB.W          R2, [R3],#1|19-248-1-43
3778|code|ADDS            R1, #1|1-49
3780|code|CBNZ            R2, loc_ECE|26-185
3782|code|ADD             R4, SP, #0xB8+name|25-172
3784|code|STRB.W          R0, [R3,#-1]|3-248-1-12
3788|code|STRB            R2, [R4,R1]|98-84
3790|code|CMP             R1, #0x14|20-41
3792|code|BNE             loc_EBE|245-209
3794|code|LDR             R3, =(dword_B008 - 0xED8)|242-75
3796|code|ADD             R3, PC; dword_B008|123-68
3798|code|LDR             R2, [R3,#(rows - 0xB008)]|218-104
3800|code|CMP             R2, #0xC|12-42
3802|code|BLE.W           loc_1314|64-243-27-130
3806|code|LDR             R4, [R3,#(cols - 0xB008)]|92-104
3808|code|CMP             R4, #0x13|19-44
3810|code|BLE.W           loc_134E|64-243-52-130
3814|code|LDR             R1, [R3,#(dword_B010 - 0xB008)]|153-104
3816|code|SUBS            R2, #8|8-58
3818|code|LDR             R6, [SP,#0xB8+var_80]|14-158
3820|code|SUB.W           R5, R4, #0xE|164-241-14-5
3824|code|CMP             R1, #1|1-41
3826|code|IT LT|184-191
3828|code|MOVLT           R1, #1|1-33
3830|code|STR             R1, [R3,#(dword_B010 - 0xB008)]|153-96
3832|code|LDR             R3, =dword_B8|233-75
3834|code|MOV             R0, R5|40-70
3836|code|SUBS            R4, #0xF|15-60
3838|code|LDR             R3, [R6,R3]|243-88
3840|code|STR             R2, [R3]|26-96
3842|code|LDR             R3, =dword_98|232-75
3844|code|LDR.W           R10, [R6,R3]|86-248-3-160
3848|code|STR.W           R5, [R10]|202-248-0-80
3852|code|BL              sub_1D48|0-240-28-255
3856|code|MOV             R3, #0x92492493|66-242-147-67-201-242-73-35
3864|code|LDR             R1, =dword_B4|227-73
3866|code|ASRS            R2, R5, #0x1F|234-23
3868|code|LDR             R1, [R6,R1]|113-88
3870|code|STR             R1, [SP,#0xB8+var_8C]|11-145
3872|code|MOV             R7, R0|7-70
3874|code|SMULL.W         R0, R3, R3, R5|131-251-5-3
3878|code|MOV             R0, R5|40-70
3880|code|ADDS            R3, R3, R5|91-25
3882|code|RSB.W           R3, R2, R3,ASR#2|194-235-163-3
3886|code|CMP             R7, R3|159-66
3888|code|IT LT|184-191
3890|code|MOVLT           R7, R3|31-70
3892|code|LDR             R3, =dword_A8|221-75
3894|code|STR             R7, [R1]|15-96
3896|code|LDR             R1, [SP,#0xB8+var_80]|14-153
3898|code|LDR             R6, [R1,R3]|206-88
3900|code|MOV             R1, R7|57-70
3902|code|BL              sub_1D48|0-240-3-255
3906|code|MOVS            R1, #0x1C; size|28-33
3908|code|MOV             R3, R0|3-70
3910|code|MOV             R0, R5; nmemb|40-70
3912|code|SUBS            R3, #7|7-59
3914|code|STR             R3, [R6]|51-96
3916|code|BLX             calloc|255-247-156-238
3920|code|MOVS            R1, #0xC; size|12-33
3922|code|MOV             R6, R0|6-70
3924|code|MOV             R0, R7; nmemb|56-70
3926|code|BLX             calloc|255-247-152-238
3930|code|LDR             R1, =dword_A0|213-73
3932|code|LDR             R5, [SP,#0xB8+var_80]|14-157
3934|code|RSB.W           R3, R4, R4,LSL#3|196-235-196-3
3938|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
3942|code|ADD.W           R3, R6, R3,LSL#2|6-235-131-3
3946|code|LDR             R1, [R5,R1]|105-88
3948|code|ADDS            R3, #8|8-51
3950|code|STR             R1, [SP,#0xB8+var_88]|12-145
3952|code|STR             R0, [R1]|8-96
3954|code|SUBS            R4, #1|1-60
3956|code|STR.W           R2, [R3,#-8]|67-248-8-44
3960|code|ADDS            R1, R4, #1|97-28
3962|code|STR.W           R2, [R3,#-4]|67-248-4-44
3966|code|STR.W           R2, [R3],#-0x1C|67-248-28-41
3970|code|BNE             loc_F72|246-209
3972|code|CMP             R6, #0|0-46
3974|code|BEQ.W           loc_1340|0-240-219-129
3978|code|CMP             R0, #0|0-40
3980|code|BEQ.W           loc_1332|0-240-209-129
3984|code|MOV             R0, R6|48-70
3986|code|BL              sub_1454|0-240-95-250
3990|code|LDR             R5, [SP,#0xB8+var_8C]|11-157
3992|code|LDR             R1, [R5]|41-104
3994|code|CMP             R1, #0|0-41
3996|code|BLE             loc_FB0|8-221
3998|code|LDR             R5, [SP,#0xB8+var_88]|12-157
4000|code|MOVS            R3, #0|0-35
4002|code|MOV             R2, R3|26-70
4004|code|LDR             R0, [R5]|40-104
4006|code|ADDS            R2, #1|1-50
4008|code|STR             R4, [R0,R3]|196-80
4010|code|ADDS            R3, #0xC|12-51
4012|code|CMP             R2, R1|138-66
4014|code|BNE             loc_FA6|250-209
4016|code|BL              sub_1C50|0-240-78-254
4020|code|LDR.W           R3, [R10]|218-248-0-48
4024|code|CMP             R3, #0|0-43
4026|code|BLE.W           loc_11CC|64-243-7-129
4030|code|LDR             R5, =(aHM - 0xFCA); "^%H:%M"|189-77
4032|code|VLDR            D8, =0.0009765625|159-237-175-139
4036|code|LDR             R3, =dword_8C|188-75
4038|code|ADD             R5, PC; "^%H:%M"|125-68
4040|code|STR             R5, [SP,#0xB8+format]|13-149
4042|code|LDR             R5, [SP,#0xB8+var_80]|14-157
4044|code|LDR             R4, =(dword_B008 - 0xFD2)|187-76
4046|code|ADD             R4, PC; dword_B008|124-68
4048|code|STR             R4, [SP,#0xB8+var_90]|10-148
4050|code|LDR.W           R9, [R5,R3]|85-248-3-144
4054|code|MOVS            R4, #0|0-36
4056|code|ADD             R0, SP, #0xB8+timer; timer|24-168
4058|code|RSB.W           R7, R4, R4,LSL#3|196-235-196-7
4062|code|BLX             time|255-247-126-238
4066|code|ADD             R0, SP, #0xB8+timer; timer|24-168
4068|code|BLX             localtime|255-247-188-238
4072|code|ADD.W           R5, R6, R7,LSL#2|6-235-135-5
4076|code|MOV             R8, R0|128-70
4078|code|MOV             R0, R5|40-70
4080|code|BL              sub_1454|0-240-48-250
4084|code|LDR             R2, [SP,#0xB8+var_90]|10-154
4086|code|LDR.W           R0, [R8]|216-248-0-0
4090|code|LDR             R1, [R2,#8]|145-104
4092|code|BL              sub_1D48|0-240-164-254
4096|code|CBNZ            R0, loc_1058|80-187
4098|code|MOV             R0, R9; s|72-70
4100|code|MOVS            R1, #7; maxsize|7-33
4102|code|LDR             R2, [SP,#0xB8+format]; format|13-154
4104|code|MOV             R3, R8; tp|67-70
4106|code|BLX             strftime|255-247-164-238
4110|code|CMP             R0, #0|0-40
4112|code|BEQ.W           loc_126C|0-240-44-129
4116|code|LDR.W           R11, =(dword_B070 - 0x1020)|223-248-168-178
4120|code|MOV             R1, R9; src|73-70
4122|code|LDR             R0, [SP,#0xB8+var_88]|12-152
4124|code|ADD             R11, PC; dword_B070|251-68
4126|code|LDR.W           R2, [R11]|219-248-0-32
4130|code|LDR             R3, [R0]|3-104
4132|code|ADD.W           R2, R2, R2,LSL#1|2-235-66-2
4136|code|ADD.W           R0, R3, R2,LSL#2|3-235-130-0
4140|code|STR.W           R4, [R3,R2,LSL#2]|67-248-34-64
4144|code|ADDS            R0, #4; dest|4-48
4146|code|BLX             strcpy|255-247-120-238
4150|code|LDR             R1, [SP,#0xB8+var_8C]|11-153
4152|code|LDR.W           R0, [R11]|219-248-0-0
4156|code|LDR             R3, [R1]|11-104
4158|code|ADDS            R0, #1|1-48
4160|code|MOV             R1, R3|25-70
4162|code|STR             R3, [SP,#0xB8+var_94]|9-147
4164|code|BL              sub_1FDC|0-240-202-255
4168|code|LDR             R3, [SP,#0xB8+var_94]|9-155
4170|code|CMP             R3, R1|139-66
4172|code|STR.W           R1, [R11]|203-248-0-16
4176|code|BLE.W           loc_1252|64-243-255-128
4180|code|BL              sub_1C50|0-240-252-253
4184|code|LDR             R2, =(aHMS - 0x1064); "%H:%M:%S"|154-74
4186|code|MOV             R0, R9; s|72-70
4188|code|MOVS            R1, #9; maxsize|9-33
4190|code|MOV             R3, R8; tp|67-70
4192|code|ADD             R2, PC; "%H:%M:%S"|122-68
4194|code|BLX             strftime|255-247-120-238
4198|code|CMP             R0, #0|0-40
4200|code|BEQ.W           loc_1244|0-240-236-128
4204|code|BL              sub_1C60|0-240-248-253
4208|code|LDR.W           R1, [R6,R7,LSL#2]|86-248-39-16
4212|code|VMOV            S9, R1|4-238-144-26
4216|code|VCVT.F64.S32    D7, S9|184-238-228-123
4220|code|MOVS            R0, #1|1-32
4222|code|LDR             R1, =(aS2f2f2fSTtyloa - 0x108E); "%s   %.2f, %.2f, %.2f   %s       ttyloa"...|146-73
4224|code|ADD.W           R3, R9, R0|9-235-0-3
4228|code|STR             R3, [SP,#0xB8+var_A0]|6-147
4230|code|LDR             R3, =(off_B018 - 0x1090); " "|145-75
4232|code|ADD             R2, SP, #0xB8+name|25-170
4234|code|ADD             R1, PC; "%s   %.2f, %.2f, %.2f   %s       ttyloa"...|121-68
4236|code|ADD             R3, PC; off_B018|123-68
4238|code|VMUL.F64        D7, D7, D8|39-238-8-123
4242|code|LDR             R3, [R3,#(off_B03C - 0xB018)]; "0.5"|91-106
4244|code|STR             R3, [SP,#0xB8+var_9C]|7-147
4246|code|VLDR            S9, [R5,#4]|213-237-1-74
4250|code|VCVT.F64.S32    D6, S9|184-238-228-107
4254|code|VLDR            S9, [R5,#8]|213-237-2-74
4258|code|VSTR            D7, [SP,#0xB8+var_B8]|141-237-0-123
4262|code|VCVT.F64.S32    D5, S9|184-238-228-91
4266|code|VMUL.F64        D6, D6, D8|38-238-8-107
4270|code|VMUL.F64        D7, D5, D8|37-238-8-123
4274|code|VSTR            D6, [SP,#0xB8+var_B0]|141-237-2-107
4278|code|VSTR            D7, [SP,#0xB8+var_A8]|141-237-4-123
4282|code|BLX             __printf_chk|255-247-126-238
4286|code|LDR             R3, =(dword_B008 - 0x10C4)|132-75
4288|code|ADD             R3, PC; dword_B008|123-68
4290|code|LDR             R3, [R3]|27-104
4292|code|CMP             R3, #3|3-43
4294|code|BGT             loc_1144|61-220
4296|code|MOV             R0, R6|48-70
4298|code|BL              sub_15C8|0-240-125-250
4302|code|LDR.W           R7, [R10]|218-248-0-112
4306|code|SUBS            R3, R7, #1|123-30
4308|code|CMP             R3, R4|163-66
4310|code|BEQ             loc_1196|94-208
4312|code|ADDS            R4, #1|1-52
4314|code|CMP             R7, R4|167-66
4316|code|BLE             loc_11CC|118-221
4318|code|CMP             R4, #0|0-44
4320|code|BEQ.W           loc_FD8|63-244-122-175
4324|code|LDR             R3, =(dword_B008 - 0x10EA)|123-75
4326|code|ADD             R3, PC; dword_B008|123-68
4328|code|LDR             R0, [R3,#(dword_B010 - 0xB008)]; seconds|152-104
4330|code|BLX             sleep|255-247-254-237
4334|code|B               loc_FD8|115-231
4336|code|LDR             R0, [SP,#0xB8+var_80]; jumptable 00000E5C case 114|14-152
4338|code|MOVS            R1, #0; endptr|0-33
4340|code|LDR             R3, =dword_C0|120-75
4342|code|MOVS            R2, #0xA; base|10-34
4344|code|LDR             R3, [R0,R3]|195-88
4346|code|LDR             R0, [R3]; nptr|24-104
4348|code|BLX             strtol|255-247-214-237
4352|code|STR.W           R0, [R11,#(rows - 0xB008)]|203-248-12-0
4356|code|B               loc_E46|159-230
4358|code|LDR             R3, =(off_B068 - 0x110E); jumptable 00000E5C case 109|117-75
4360|code|LDR             R2, =(off_B018 - 0x1110); " "|117-74
4362|code|ADD             R3, PC; off_B068|123-68
4364|code|ADD             R2, PC; off_B018|122-68
4366|code|STR             R2, [R3]; off_B044|26-96
4368|code|B               loc_E46|153-230
4370|code|LDR             R0, [SP,#0xB8+var_80]; jumptable 00000E5C case 105|14-152
4372|code|MOVS            R1, #0; endptr|0-33
4374|code|LDR             R3, =dword_C0|112-75
4376|code|MOVS            R2, #0xA; base|10-34
4378|code|LDR             R3, [R0,R3]|195-88
4380|code|LDR             R0, [R3]; nptr|24-104
4382|code|BLX             strtol|255-247-198-237
4386|code|LDR             R3, =(dword_B008 - 0x1128)|112-75
4388|code|ADD             R3, PC; dword_B008|123-68
4390|code|STR             R0, [R3,#(dword_B010 - 0xB008)]|152-96
4392|code|B               loc_E46|141-230
4394|code|LDR             R0, [SP,#0xB8+var_80]; jumptable 00000E5C case 99|14-152
4396|code|MOVS            R1, #0; endptr|0-33
4398|code|LDR             R3, =dword_C0|106-75
4400|code|MOVS            R2, #0xA; base|10-34
4402|code|LDR             R3, [R0,R3]|195-88
4404|code|LDR             R0, [R3]; nptr|24-104
4406|code|BLX             strtol|255-247-186-237
4410|code|STR.W           R0, [R10,#(cols - 0xB008)]|202-248-4-0
4414|code|B               loc_E46|130-230
4416|code|ADDS            R5, #1; jumptable 00000E5C default case, cases 100-104,106-108,110-113,115-117|1-53
4418|code|B               loc_E46|128-230
4420|code|LDR.W           R1, [R6,R7,LSL#2]|86-248-39-16
4424|code|VMOV            S11, R1|5-238-144-26
4428|code|VCVT.F64.S32    D7, S11|184-238-229-123
4432|code|LDR             R2, [R5,#4]|106-104
4434|code|LDR             R3, [R5,#8]|171-104
4436|code|VMOV            S9, R2|4-238-144-42
4440|code|VMOV            S11, R3|5-238-144-58
4444|code|LDR             R1, =(aLoadAveragesFF - 0x1164); "Load averages: %f, %f, %f\n"|98-73
4446|code|MOVS            R0, #1|1-32
4448|code|ADD             R1, PC; "Load averages: %f, %f, %f\n"|121-68
4450|code|VCVT.F64.S32    D6, S9|184-238-228-107
4454|code|VCVT.F64.S32    D4, S11|184-238-229-75
4458|code|VMUL.F64        D5, D7, D8|39-238-8-91
4462|code|VMUL.F64        D7, D6, D8|38-238-8-123
4466|code|VMOV            R2, R3, D5|83-236-21-43
4470|code|VMUL.F64        D6, D4, D8|36-238-8-107
4474|code|VSTR            D7, [SP,#0xB8+var_B8]|141-237-0-123
4478|code|VSTR            D6, [SP,#0xB8+var_B0]|141-237-2-107
4482|code|BLX             __printf_chk|255-247-26-238
4486|code|MOV             R0, R6|48-70
4488|code|BL              sub_15C8|0-240-30-250
4492|code|LDR.W           R7, [R10]|218-248-0-112
4496|code|SUBS            R3, R7, #1|123-30
4498|code|CMP             R3, R4|163-66
4500|code|BNE             loc_10D8|160-209
4502|code|LDR             R3, =(dword_B008 - 0x119C)|85-75
4504|code|ADD             R3, PC; dword_B008|123-68
4506|code|LDR             R3, [R3]|27-104
4508|code|CMP             R3, #4|4-43
4510|code|BGT             loc_11E2|32-220
4512|code|ADD             R5, SP, #0xB8+var_74|17-173
4514|code|SUBS            R4, R7, #2|188-30
4516|code|ADDS            R4, #1|1-52
4518|code|MOV             R0, R5|40-70
4520|code|BL              sub_1454|0-240-84-249
4524|code|ADD             R3, SP, #0xB8+var_68|20-171
4526|code|LDR.W           R7, [R10]|218-248-0-112
4530|code|LDM             R3, {R0-R3}|15-203
4532|code|STR             R7, [SP,#0xB8+var_A8]|4-151
4534|code|STMEA.W         SP, {R0-R3}|141-232-15-0
4538|code|MOV             R0, R6|48-70
4540|code|LDM.W           R5, {R1-R3}|149-232-14-0
4544|code|BL              sub_1C70|0-240-86-253
4548|code|LDR.W           R7, [R10]|218-248-0-112
4552|code|CMP             R7, R4|167-66
4554|code|BGT             loc_10DE|136-220
4556|code|LDR             R4, [SP,#0xB8+var_7C]|15-156
4558|code|MOVS            R0, #0|0-32
4560|code|LDR             R2, [SP,#0xB8+var_34]|33-154
4562|code|LDR             R3, [R4]|35-104
4564|code|CMP             R2, R3|154-66
4566|code|BNE             loc_127A|80-209
4568|code|ADD             SP, SP, #0x8C|35-176
4570|code|VPOP            {D8}|189-236-2-139
4574|code|POP.W           {R4-R11,PC}|189-232-240-143
4578|code|LDR             R0, =(aCyclingLoadLis - 0x11E8); "CYCLING LOAD LIST..."|67-72
4580|code|ADD             R0, PC; "CYCLING LOAD LIST..."|120-68
4582|code|BLX             puts|255-247-170-237
4586|code|MOVS            R0, #3; seconds|3-32
4588|code|BLX             sleep|255-247-124-237
4592|code|B               loc_11A0|214-231
4594|code|LDR             R3, =dword_9C|64-75
4596|code|MOVS            R1, #1|1-33
4598|code|LDR             R6, [SP,#0xB8+var_80]|14-158
4600|code|LDR             R2, [R7,#(off_B03C - 0xB018)]; "0.5"|122-106
4602|code|LDR             R3, [R6,R3]|243-88
4604|code|STR             R2, [SP,#0xB8+var_B8]|0-146
4606|code|LDR             R2, =(aSVersionS - 0x1208); "%s version %s\n"|62-74
4608|code|LDR             R0, [R3]|24-104
4610|code|MOV             R3, R9|75-70
4612|code|ADD             R2, PC; "%s version %s\n"|122-68
4614|code|BLX             __fprintf_chk|255-247-222-237
4618|code|CMP             R5, #0|0-45
4620|code|BEQ.W           loc_EA4|63-244-74-174
4624|code|LDR             R6, [SP,#0xB8+var_80]|14-158
4626|code|MOVS            R1, #1|1-33
4628|code|LDR             R3, =dword_9C|55-75
4630|code|LDR             R3, [R6,R3]|243-88
4632|code|LDR             R0, [R3]|24-104
4634|code|LDR             R3, =(off_B018 - 0x1220); " "|56-75
4636|code|ADD             R3, PC; off_B018|123-68
4638|code|LDR             R2, [R3,#(off_B040 - 0xB018)]; "Usage: %s [<options>]\n\n Available opt"...|154-106
4640|code|MOV             R3, R9|75-70
4642|code|BLX             __fprintf_chk|255-247-208-237
4646|code|B               loc_EA4|61-230
4648|code|LDR             R0, =(aNoticeCouldnTD - 0x122E); "NOTICE: couldn't determine hostname"|53-72
4650|code|ADD             R0, PC; "NOTICE: couldn't determine hostname"|120-68
4652|code|BLX             perror|255-247-104-237
4656|code|LDR             R2, =(aLocalhost - 0x1238); "localhost"|52-74
4658|code|ADD             R3, SP, #0xB8+name|25-171
4660|code|ADD             R2, PC; "localhost"|122-68
4662|code|LDM             R2, {R0-R2}; "localhost"|7-202
4664|code|STM             R3!, {R0,R1}|3-195
4666|code|MOVS            R0, #2; seconds|2-32
4668|code|STRH            R2, [R3]|26-128
4670|code|BLX             sleep|255-247-84-237
4674|code|B               loc_EB8|57-230
4676|code|LDR             R0, =(aStrftimeFailed - 0x124A); "strftime failed"|48-72
4678|code|ADD             R0, PC; "strftime failed"|120-68
4680|code|BLX             perror|255-247-90-237
4684|code|MOVS            R0, #1; status|1-32
4686|code|BLX             exit|255-247-148-237
4690|code|LDR             R4, [SP,#0xB8+var_80]|14-156
4692|code|MOVS            R1, #1; size|1-33
4694|code|LDR             R3, =dword_9C|39-75
4696|code|MOVS            R2, #0x20 ; ' '; n|32-34
4698|code|LDR             R0, =(aInternalErrorT - 0x1262); "Internal error: too many clocks!"|44-72
4700|code|LDR             R3, [R4,R3]|227-88
4702|code|ADD             R0, PC; "Internal error: too many clocks!"|120-68
4704|code|LDR             R3, [R3]; s|27-104
4706|code|BLX             fwrite|255-247-84-237
4710|code|MOVS            R0, #1; status|1-32
4712|code|BLX             exit|255-247-134-237
4716|code|LDR             R0, =(aStrftimeFailed - 0x1272); "strftime failed"|40-72
4718|code|ADD             R0, PC; "strftime failed"|120-68
4720|code|BLX             perror|255-247-70-237
4724|code|MOVS            R0, #1; status|1-32
4726|code|BLX             exit|255-247-128-237
4730|code|BLX             __stack_chk_fail|255-247-60-237
4734|data|ALIGN 0x10|0-191
4736|data|DCFD 0.0009765625|0-0-0-0-0-0-80-63
4744|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE12|38-161-0-0
4748|data|DCD __stack_chk_guard_ptr - 0xAF38|144-0-0-0
4752|data|DCD off_B018 - 0xE42; " "|214-161-0-0
4756|data|DCD dword_B008 - 0xE44|196-161-0-0
4760|data|DCD dword_B008 - 0xE48|192-161-0-0
4764|data|DCD dword_B008 - 0xED8|48-161-0-0
4768|data|DCD dword_B8|184-0-0-0
4772|data|DCD dword_98|152-0-0-0
4776|data|DCD dword_B4|180-0-0-0
4780|data|DCD dword_A8|168-0-0-0
4784|data|DCD dword_A0|160-0-0-0
4788|data|DCD aHM - 0xFCA; "^%H:%M"|194-20-0-0
4792|data|DCD dword_8C|140-0-0-0
4796|data|DCD dword_B008 - 0xFD2|54-160-0-0
4800|data|DCD dword_B070 - 0x1020|80-160-0-0
4804|data|DCD aHMS - 0x1064; "%H:%M:%S"|100-20-0-0
4808|data|DCD aS2f2f2fSTtyloa - 0x108E; "%s   %.2f, %.2f, %.2f   %s       ttyloa"...|70-20-0-0
4812|data|DCD off_B018 - 0x1090; " "|136-159-0-0
4816|data|DCD dword_B008 - 0x10C4|68-159-0-0
4820|data|DCD dword_B008 - 0x10EA|30-159-0-0
4824|data|DCD dword_C0|192-0-0-0
4828|data|DCD off_B068 - 0x110E|90-159-0-0
4832|data|DCD off_B018 - 0x1110; " "|8-159-0-0
4836|data|DCD dword_B008 - 0x1128|224-158-0-0
4840|data|DCD aLoadAveragesFF - 0x1164; "Load averages: %f, %f, %f\n"|12-17-0-0
4844|data|DCD dword_B008 - 0x119C|108-158-0-0
4848|data|DCD aCyclingLoadLis - 0x11E8; "CYCLING LOAD LIST..."|28-19-0-0
4852|data|DCD dword_9C|156-0-0-0
4856|data|DCD aSVersionS - 0x1208; "%s version %s\n"|172-17-0-0
4860|data|DCD off_B018 - 0x1220; " "|248-157-0-0
4864|data|DCD aNoticeCouldnTD - 0x122E; "NOTICE: couldn't determine hostname"|150-17-0-0
4868|data|DCD aLocalhost - 0x1238; "localhost"|176-17-0-0
4872|data|DCD aStrftimeFailed - 0x124A; "strftime failed"|74-18-0-0
4876|data|DCD aInternalErrorT - 0x1262; "Internal error: too many clocks!"|66-18-0-0
4880|data|DCD aStrftimeFailed - 0x1272; "strftime failed"|34-18-0-0
4884|code|LDR             R3, =dword_9C|21-75
4886|code|MOVS            R2, #0xD|13-34
4888|code|LDR             R5, [SP,#0xB8+var_80]|14-157
4890|code|MOVS            R1, #1|1-33
4892|code|LDR             R3, [R5,R3]|235-88
4894|code|STR             R2, [SP,#0xB8+var_B8]|0-146
4896|code|LDR             R2, =(aSorrySRequires - 0x132A); "Sorry, %s requires at least %d rows to "...|19-74
4898|code|LDR             R0, [R3]|24-104
4900|code|MOV             R3, R9|75-70
4902|code|ADD             R2, PC; "Sorry, %s requires at least %d rows to "...|122-68
4904|code|BLX             __fprintf_chk|255-247-76-237
4908|code|MOVS            R0, #1; status|1-32
4910|code|BLX             exit|255-247-36-237
4914|code|LDR             R0, =(aCallocForClock - 0x1338); "calloc for clocks failed"|16-72
4916|code|ADD             R0, PC; "calloc for clocks failed"|120-68
4918|code|BLX             perror|255-247-228-236
4922|code|MOVS            R0, #1; status|1-32
4924|code|BLX             exit|255-247-28-237
4928|code|LDR             R0, =(aCallocForLoada - 0x1346); "calloc for loadavgs failed"|13-72
4930|code|ADD             R0, PC; "calloc for loadavgs failed"|120-68
4932|code|BLX             perror|255-247-220-236
4936|code|MOVS            R0, #1; status|1-32
4938|code|BLX             exit|255-247-22-237
4942|code|LDR             R6, [SP,#0xB8+var_80]|14-158
4944|code|LDR             R3, =dword_9C|6-75
4946|code|LDR             R2, =(aSorrySRequires_0 - 0x135A); "Sorry, %s requires at least %d cols to "...|10-74
4948|code|LDR             R3, [R6,R3]|243-88
4950|code|ADD             R2, PC; "Sorry, %s requires at least %d cols to "...|122-68
4952|code|STR             R1, [SP,#0xB8+var_B8]|0-145
4954|code|MOVS            R1, #1|1-33
4956|code|LDR             R0, [R3]|24-104
4958|code|MOV             R3, R9|75-70
4960|code|BLX             __fprintf_chk|255-247-48-237
4964|code|MOVS            R0, #1; status|1-32
4966|code|BLX             exit|255-247-8-237
4970|data|ALIGN 4|0-191
4972|data|DCD dword_9C|156-0-0-0
4976|data|DCD aSorrySRequires - 0x132A; "Sorry, %s requires at least %d rows to "...|202-16-0-0
4980|data|DCD aCallocForClock - 0x1338; "calloc for clocks failed"|56-17-0-0
4984|data|DCD aCallocForLoada - 0x1346; "calloc for loadavgs failed"|14-17-0-0
4988|data|DCD aSorrySRequires_0 - 0x135A; "Sorry, %s requires at least %d cols to "...|202-16-0-0
4992|code|MOV.W           R11, #0|79-240-0-11
4996|code|MOV.W           LR, #0|79-240-0-14
5000|code|POP.W           {R1}; argc|93-248-4-27
5004|code|MOV             R2, SP; ubp_av|106-70
5006|code|PUSH.W          {R2}; stack_end|77-248-4-45
5010|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
5014|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x13C0)|223-248-40-160
5018|code|ADR             R3, off_13C0|9-163
5020|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
5022|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0xAF38)|223-248-36-192
5026|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
5030|code|PUSH.W          {R12}; fini|77-248-4-205
5034|code|LDR             R3, =(__libc_csu_init_ptr - 0xAF38)|7-75
5036|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
5040|code|LDR             R0, =(main_ptr - 0xAF38)|6-72
5042|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
5046|code|BLX             __libc_start_main|255-247-200-236
5050|code|BLX             abort|255-247-22-237
5054|data|ALIGN 0x10|0-191
5056|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13C0|120-155-0-0
5060|data|DCD __libc_csu_fini_ptr - 0xAF38|132-0-0-0
5064|data|DCD __libc_csu_init_ptr - 0xAF38|172-0-0-0
5068|data|DCD main_ptr - 0xAF38|176-0-0-0
5072|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13E0)|20-48-159-229
5076|code|LDR             R2, =(__gmon_start___ptr_0 - 0xAF38)|20-32-159-229
5080|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
5084|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
5088|code|CMP             R2, #0|0-0-82-227
5092|code|BXEQ            LR|30-255-47-1
5096|code|B               __gmon_start__|95-254-255-234
5100|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13E0|88-155-0-0
5104|data|DCD __gmon_start___ptr_0 - 0xAF38|164-0-0-0
5108|data|DCB 9|9
5109|data|DCB 0x4A, 8, 0xB5|74-8-181
5112|data|DCD 0x4B09447A, 0x447B7812, 0x4A08B95A, 0xB123589B, 0x447B4B07|122-68-9-75-18-120-123-68-90-185-8-74-155-88-35-177-7-75-123-68-24-104-255-247-72-236-6-75-1-34-123-68-26-112-8-189-112-156-0-0-54-155-0-0-136-0-0-0-246-155-0-0-82-156-0-0
5168|code|LDR             R0, =(dword_AE2C - 0x1438)|5-72
5170|code|PUSH            {R3,LR}|8-181
5172|code|ADD             R0, PC; dword_AE2C|120-68
5174|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x143E)|5-75
5176|code|LDR             R2, [R0]|2-104
5178|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5180|code|CBZ             R2, locret_1446|26-177
5182|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0xAF38)|4-74
5184|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5186|code|CBZ             R3, locret_1446|3-177
5188|code|BLX             R3; _Jv_RegisterClasses|152-71
5190|code|POP             {R3,PC}|8-189
5192|data|DCD dword_AE2C - 0x1438|244-153-0-0
5196|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x143E|250-154-0-0
5200|data|DCD _Jv_RegisterClasses_ptr - 0xAF38|188-0-0-0
5204|code|PUSH            {R4-R7,LR}|240-181
5206|code|MOV             R4, R0|4-70
5208|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1460)|63-78
5210|code|SUB             SP, SP, #0x1C|135-176
5212|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
5214|code|CMP             R0, #0|0-40
5216|code|BEQ             loc_153A|107-208
5218|code|LDR             R0, =(aProcLoadavg - 0x146A); "/proc/loadavg"|62-72
5220|code|LDR             R1, =(aR - 0x146C); "r"|62-73
5222|code|ADD             R0, PC; "/proc/loadavg"|120-68
5224|code|ADD             R1, PC; "r"|121-68
5226|code|BLX             fopen|255-247-44-236
5230|code|MOV             R5, R0|5-70
5232|code|CMP             R0, #0|0-40
5234|code|BEQ             loc_152C|91-208
5236|code|LDR             R1, =(aFFF - 0x1480); "%f %f %f "|59-73
5238|code|ADD             R2, SP, #0x30+var_24|3-170
5240|code|ADD             R3, SP, #0x30+var_20|4-171
5242|code|ADD             R7, SP, #0x30+var_1C|5-175
5244|code|ADD             R1, PC; "%f %f %f "|121-68
5246|code|STR             R7, [SP,#0x30+var_30]|0-151
5248|code|BLX             __isoc99_fscanf|255-247-26-236
5252|code|MOV             R7, R0|7-70
5254|code|MOV             R0, R5; stream|40-70
5256|code|BLX             fclose|255-247-162-236
5260|code|CMP             R0, #0|0-40
5262|code|BNE             loc_151E|70-209
5264|code|VLDR            S15, =1024.0|223-237-48-122
5268|code|VLDR            S14, [SP,#0x30+var_24]|157-237-3-122
5272|code|VLDR            S12, [SP,#0x30+var_1C]|157-237-5-106
5276|code|VMUL.F32        S13, S14, S15|103-238-39-106
5280|code|VLDR            S14, [SP,#0x30+var_20]|157-237-4-122
5284|code|CMP             R7, #1|1-47
5286|code|STR             R7, [R4,#0x18]|167-97
5288|code|VMUL.F32        S14, S14, S15|39-238-39-122
5292|code|VMUL.F32        S15, S12, S15|102-238-39-122
5296|code|VCVT.S32.F32    S13, S13|253-238-230-106
5300|code|VCVT.S32.F32    S14, S14|189-238-199-122
5304|code|VSTR            S13, [R4]|196-237-0-106
5308|code|VCVT.S32.F32    S15, S15|253-238-231-122
5312|code|VSTR            S14, [R4,#4]|132-237-1-122
5316|code|VSTR            S15, [R4,#8]|196-237-2-122
5320|code|BEQ             loc_1504|28-208
5322|code|CMP             R7, #2|2-47
5324|code|BEQ             loc_14E8|12-208
5326|code|CBNZ            R7, loc_1500|191-185
5328|code|LDR             R3, =(stderr_ptr - 0xAF38)|37-75
5330|code|MOVS            R1, #1; size|1-33
5332|code|LDR             R0, =(aSorryCouldnTGe - 0x14DE); "Sorry, couldn't get any load averages. "...|37-72
5334|code|MOVS            R2, #0x48 ; 'H'; n|72-34
5336|code|LDR             R3, [R6,R3]; stderr|243-88
5338|code|ADD             R0, PC; "Sorry, couldn't get any load averages. "...|120-68
5340|code|LDR             R3, [R3]; s|27-104
5342|code|BLX             fwrite|255-247-22-236
5346|code|MOVS            R0, #1; status|1-32
5348|code|BLX             exit|255-247-72-236
5352|code|LDR             R3, =(stderr_ptr - 0xAF38)|31-75
5354|code|MOVS            R1, #1; size|1-33
5356|code|LDR             R0, =(a15MinuteLoadAv - 0x14F6); "15 minute Load average is unreliable.\n"|32-72
5358|code|MOVS            R2, #0x26 ; '&'; n|38-34
5360|code|LDR             R3, [R6,R3]; stderr|243-88
5362|code|ADD             R0, PC; "15 minute Load average is unreliable.\n"|120-68
5364|code|LDR             R3, [R3]; s|27-104
5366|code|BLX             fwrite|255-247-10-236
5370|code|MOVS            R0, #5; seconds|5-32
5372|code|BLX             sleep|255-247-244-235
5376|code|ADD             SP, SP, #0x1C|7-176
5378|code|POP             {R4-R7,PC}|240-189
5380|code|LDR             R3, =(stderr_ptr - 0xAF38)|24-75
5382|code|MOV             R1, R7; size|57-70
5384|code|LDR             R0, =(a5And15MinuteLo - 0x1512); "5 and 15 minute load averages are unrel"...|26-72
5386|code|MOVS            R2, #0x2E ; '.'; n|46-34
5388|code|LDR             R3, [R6,R3]; stderr|243-88
5390|code|ADD             R0, PC; "5 and 15 minute load averages are unrel"...|120-68
5392|code|LDR             R3, [R3]; s|27-104
5394|code|BLX             fwrite|255-247-252-235
5398|code|MOVS            R0, #5; seconds|5-32
5400|code|BLX             sleep|255-247-230-235
5404|code|B               loc_1500|240-231
5406|code|LDR             R0, =(aCloseOfProcLoa - 0x1524); "Close of /proc/loadavg failed?!"|22-72
5408|code|ADD             R0, PC; "Close of /proc/loadavg failed?!"|120-68
5410|code|BLX             perror|255-247-238-235
5414|code|MOVS            R0, #1; status|1-32
5416|code|BLX             exit|255-247-38-236
5420|code|LDR             R0, =(aOpenOfProcLoad - 0x1532); "Open of /proc/loadavg failed"|19-72
5422|code|ADD             R0, PC; "Open of /proc/loadavg failed"|120-68
5424|code|BLX             perror|255-247-230-235
5428|code|MOVS            R0, #1; status|1-32
5430|code|BLX             exit|255-247-32-236
5434|code|LDR             R3, =(stderr_ptr - 0xAF38)|11-75
5436|code|MOVS            R1, #1; size|1-33
5438|code|LDR             R0, =(aGetloadCalledW - 0x1548); "getload called without loadavgs pointer"...|16-72
5440|code|MOVS            R2, #0x29 ; ')'; n|41-34
5442|code|LDR             R3, [R6,R3]; stderr|243-88
5444|code|ADD             R0, PC; "getload called without loadavgs pointer"...|120-68
5446|code|LDR             R3, [R3]; s|27-104
5448|code|BLX             fwrite|255-247-224-235
5452|code|MOVS            R0, #2; status|2-32
5454|code|BLX             exit|255-247-20-236
5458|data|ALIGN 4|0-191
5460|data|DCFS 1024.0|0-0-128-68
5464|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1460|216-154-0-0
5468|data|DCD aProcLoadavg - 0x146A; "/proc/loadavg"|22-12-0-0
5472|data|DCD aR - 0x146C; "r"|36-12-0-0
5476|data|DCD aFFF - 0x1480; "%f %f %f "|52-12-0-0
5480|data|DCD stderr_ptr - 0xAF38|156-0-0-0
5484|data|DCD aSorryCouldnTGe - 0x14DE; "Sorry, couldn't get any load averages. "...|90-12-0-0
5488|data|DCD a15MinuteLoadAv - 0x14F6; "15 minute Load average is unreliable.\n"|234-11-0-0
5492|data|DCD a5And15MinuteLo - 0x1512; "5 and 15 minute load averages are unrel"...|246-11-0-0
5496|data|DCD aCloseOfProcLoa - 0x1524; "Close of /proc/loadavg failed?!"|156-11-0-0
5500|data|DCD aOpenOfProcLoad - 0x1532; "Open of /proc/loadavg failed"|98-11-0-0
5504|data|DCD aGetloadCalledW - 0x1548; "getload called without loadavgs pointer"...|12-11-0-0
5508|code|PUSH            {R4,LR}|16-181
5510|code|SUB             SP, SP, #8|130-176
5512|code|MOVS            R0, #1; fd|1-32
5514|code|MOVW            R1, #0x5413; request|69-242-19-65
5518|code|MOV             R2, SP|106-70
5520|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x159A)|9-76
5522|code|BLX             ioctl|255-247-194-235
5526|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
5528|code|ADDS            R0, #1|1-48
5530|code|BEQ             loc_15B4|11-208
5532|code|LDRH.W          R3, [SP,#0x10+var_E]|189-248-2-48
5536|code|CBZ             R3, loc_15A8|19-177
5538|code|LDR             R2, =(cols_ptr - 0xAF38)|6-74
5540|code|LDR             R2, [R4,R2]; cols|162-88
5542|code|STR             R3, [R2]|19-96
5544|code|LDRH.W          R3, [SP,#0x10+var_10]|189-248-0-48
5548|code|CBZ             R3, loc_15B4|19-177
5550|code|LDR             R2, =(rows_ptr - 0xAF38)|4-74
5552|code|LDR             R2, [R4,R2]; rows|162-88
5554|code|STR             R3, [R2]|19-96
5556|code|ADD             SP, SP, #8|2-176
5558|code|POP             {R4,PC}|16-189
5560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x159A|158-153-0-0
5564|data|DCD cols_ptr - 0xAF38|196-0-0-0
5568|data|DCD rows_ptr - 0xAF38|148-0-0-0
5572|data|ALIGN 8|0-0-0-0
5576|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5580|code|VPUSH           {D8-D9}|45-237-4-139
5584|code|MOVS            R3, #0|0-35
5586|code|LDR             R4, =(dword_B008 - 0x15DC)|237-76
5588|code|SUB             SP, SP, #0x4C|147-176
5590|code|LDR             R1, =(_GLOBAL_OFFSET_TABLE_ - 0x15E0)|237-73
5592|code|ADD             R4, PC; dword_B008|124-68
5594|code|STR             R0, [SP,#0x80+var_64]|7-144
5596|code|ADD             R1, PC; _GLOBAL_OFFSET_TABLE_|121-68
5598|code|STR             R3, [SP,#0x80+var_54]|11-147
5600|code|LDR             R2, [R4]|34-104
5602|code|STR             R1, [SP,#0x80+var_60]|8-145
5604|code|CMP             R2, #3|3-42
5606|code|STR             R3, [SP,#0x80+var_50]|12-147
5608|code|STR             R3, [SP,#0x80+var_4C]|13-147
5610|code|STR             R3, [SP,#0x80+var_48]|14-147
5612|code|STR             R3, [SP,#0x80+var_44]|15-147
5614|code|STR             R3, [SP,#0x80+var_40]|16-147
5616|code|STR             R3, [SP,#0x80+var_3C]|17-147
5618|code|BGT.W           loc_1B80|0-243-197-130
5622|code|LDR             R3, =dword_98|230-75
5624|code|LDR             R0, [SP,#0x80+var_60]|8-152
5626|code|LDR             R4, [R0,R3]|196-88
5628|code|LDR             R3, [R4]|35-104
5630|code|CMP             R3, #0|0-43
5632|code|BLE.W           loc_1BC0|64-243-222-130
5636|code|MOVW            R7, #0xFFFE|79-246-254-119
5640|code|LDR             R1, =(aCheckingForMin - 0x161A); "Checking for min/max at %d...\n"|226-73
5642|code|MOVT.W          R7, #0x7FFF|199-246-255-119
5646|code|LDR.W           R11, =(aComparingForEx - 0x161C); "Comparing, for example, %ld <=> %ld\n"|223-248-136-179
5650|code|LDR.W           R10, =(dword_B008 - 0x1620)|223-248-136-163
5654|code|ADD             R1, PC; "Checking for min/max at %d...\n"|121-68
5656|code|ADD             R11, PC; "Comparing, for example, %ld <=> %ld\n"|251-68
5658|code|STR             R1, [SP,#0x80+var_5C]|9-145
5660|code|ADD             R10, PC; dword_B008|250-68
5662|code|LDR             R5, [SP,#0x80+var_64]|7-157
5664|code|MOV             R9, R7|185-70
5666|code|MOV             R8, R7|184-70
5668|code|MOVS            R6, #0|0-38
5670|code|MOV             LR, R2|150-70
5672|code|B               loc_166E|33-224
5674|code|LDR             R2, [R5]|42-104
5676|code|ADDS            R6, #1|1-54
5678|code|LDR             R1, [R5,#4]|105-104
5680|code|LDR.W           R12, [SP,#0x80+var_50]|221-248-48-192
5684|code|CMP             R8, R2|144-69
5686|code|IT GE|168-191
5688|code|MOVGE           R8, R2|144-70
5690|code|LDR             R0, [SP,#0x80+var_54]|11-152
5692|code|CMP             R9, R1|137-69
5694|code|IT GE|168-191
5696|code|MOVGE           R9, R1|137-70
5698|code|LDR             R3, [R5,#8]|171-104
5700|code|CMP             R1, R12|97-69
5702|code|IT LT|184-191
5704|code|MOVLT           R1, R12|97-70
5706|code|CMP             R2, R0|130-66
5708|code|IT GE|168-191
5710|code|MOVGE           R0, R2|16-70
5712|code|LDR.W           R12, [SP,#0x80+var_4C]|221-248-52-192
5716|code|LDR             R2, [R4]|34-104
5718|code|CMP             R7, R3|159-66
5720|code|IT GE|168-191
5722|code|MOVGE           R7, R3|31-70
5724|code|ADDS            R5, #0x1C|28-53
5726|code|CMP             R3, R12|99-69
5728|code|IT LT|184-191
5730|code|MOVLT           R3, R12|99-70
5732|code|CMP             R2, R6|178-66
5734|code|STR             R0, [SP,#0x80+var_54]|11-144
5736|code|STR             R1, [SP,#0x80+var_50]|12-145
5738|code|STR             R3, [SP,#0x80+var_4C]|13-147
5740|code|BLE             loc_1690|16-221
5742|code|CMP.W           LR, #9|190-241-9-15
5746|code|BLE             loc_162A|218-221
5748|code|MOV             R2, R6|50-70
5750|code|LDR             R1, [SP,#0x80+var_5C]|9-153
5752|code|MOVS            R0, #1|1-32
5754|code|BLX             __printf_chk|255-247-158-235
5758|code|LDR             R3, [R5]|43-104
5760|code|MOV             R2, R8|66-70
5762|code|MOVS            R0, #1|1-32
5764|code|MOV             R1, R11|89-70
5766|code|BLX             __printf_chk|255-247-152-235
5770|code|LDR.W           LR, [R10]|218-248-0-224
5774|code|B               loc_162A|204-231
5776|code|CMP             R9, R7|185-69
5778|code|ITE LT|180-191
5780|code|MOVLT           R5, R9|77-70
5782|code|MOVGE           R5, R7|61-70
5784|code|CMP             R1, R3|153-66
5786|code|ITE GE|172-191
5788|code|MOVGE           R6, R1|14-70
5790|code|MOVLT           R6, R3|30-70
5792|code|CMP             R5, R8|69-69
5794|code|IT GE|168-191
5796|code|MOVGE           R5, R8|69-70
5798|code|CMP             R6, R0|134-66
5800|code|IT LT|184-191
5802|code|MOVLT           R6, R0|6-70
5804|code|MOV             R10, R0|130-70
5806|code|MOV             R11, R1|139-70
5808|code|MOV             R2, LR|114-70
5810|code|MOV             R12, R3|156-70
5812|code|CMP             R2, #3|3-42
5814|code|BGT.W           loc_1A90|0-243-235-129
5818|code|VMOV            S9, R6|4-238-144-106
5822|code|VCVT.F64.S32    D8, S9|184-238-228-139
5826|code|VLDR            D7, =0.0009765625|159-237-175-123
5830|code|VMUL.F64        D7, D8, D7|40-238-7-123
5834|code|VMOV.F64        D6, #0.25|181-238-0-107
5838|code|VCMPE.F64       D7, D6|180-238-198-123
5842|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
5846|code|ITT MI|68-191
5848|code|MOVMI.W         R6, #0x100|79-244-128-118
5852|code|VMOVMI.F32      S16, #0.25|181-238-0-138
5856|code|BMI             loc_16FC|12-212
5858|code|VMOV.F64        D6, #0.5|182-238-0-107
5862|code|VCMPE.F64       D7, D6|180-238-198-123
5866|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
5870|code|ITT MI|68-191
5872|code|VMOVMI.F32      S16, #0.5|182-238-0-138
5876|code|MOVMI.W         R6, #0x200|79-244-0-118
5880|code|BPL.W           loc_19DC|64-241-112-129
5884|code|CMP             R2, #3|3-42
5886|code|BGT.W           loc_1A0C|0-243-133-129
5890|code|LDR             R3, [R4]|35-104
5892|code|CMP             R3, #0|0-43
5894|code|BLE.W           loc_1A62|64-243-172-129
5898|code|LDR             R1, [SP,#0x80+var_60]|8-153
5900|code|MOVS            R7, #0|0-39
5902|code|LDR             R3, =dword_B8|164-75
5904|code|VLDR            D9, =0.0009765625|159-237-155-155
5908|code|LDR.W           R8, =(dword_B008 - 0x1724)|223-248-140-130
5912|code|LDR.W           R9, =(aLoadAveragesFF_0 - 0x1728); "Load averages: %f, %f, %f  -- "|223-248-140-146
5916|code|LDR.W           R10, [R1,R3]|81-248-3-160
5920|code|ADD             R8, PC; dword_B008|248-68
5922|code|LDR             R5, [SP,#0x80+var_64]|7-157
5924|code|ADD             R9, PC; "Load averages: %f, %f, %f  -- "|249-68
5926|code|LDR.W           R1, [R10]|218-248-0-16
5930|code|B               loc_1738|5-224
5932|code|LDR             R3, [R4]|35-104
5934|code|ADDS            R7, #1|1-55
5936|code|ADDS            R5, #0x1C|28-53
5938|code|CMP             R3, R7|187-66
5940|code|BLE.W           loc_184A|64-243-137-128
5944|code|LDR             R0, [R5]|40-104
5946|code|ADDS            R3, R1, #1|75-28
5948|code|CMP             R0, #0|0-40
5950|code|BLT             loc_176A|20-219
5952|code|SUBS            R3, R6, R0|51-26
5954|code|VMOV            S9, R6|4-238-144-106
5958|code|VMOV            S11, R3|5-238-144-58
5962|code|VCVT.F32.S32    S15, S9|248-238-228-122
5966|code|VMOV            S13, R1|6-238-144-26
5970|code|VCVT.F32.S32    S14, S11|184-238-229-122
5974|code|VDIV.F32        S15, S14, S15|199-238-39-122
5978|code|VCVT.F32.S32    S14, S13|184-238-230-122
5982|code|VMUL.F32        S15, S14, S15|103-238-39-122
5986|code|VCVT.S32.F32    S15, S15|253-238-231-122
5990|code|VMOV            R3, S15|23-238-144-58
5994|code|LDR             R2, [R5,#4]|106-104
5996|code|STR             R3, [R5,#0xC]|235-96
5998|code|CMP             R2, #0|0-42
6000|code|IT LT|184-191
6002|code|ADDLT.W         LR, R1, #1|1-241-1-14
6006|code|BLT             loc_17A2|20-219
6008|code|VMOV            S14, R6|7-238-16-106
6012|code|SUBS            R3, R6, R2|179-26
6014|code|VCVT.F32.S32    S15, S14|248-238-199-122
6018|code|VMOV            S9, R3|4-238-144-58
6022|code|VMOV            S11, R1|5-238-144-26
6026|code|VCVT.F32.S32    S14, S9|184-238-228-122
6030|code|VDIV.F32        S15, S14, S15|199-238-39-122
6034|code|VCVT.F32.S32    S14, S11|184-238-229-122
6038|code|VMUL.F32        S15, S14, S15|103-238-39-122
6042|code|VCVT.S32.F32    S15, S15|253-238-231-122
6046|code|VMOV            LR, S15|23-238-144-234
6050|code|LDR             R3, [R5,#8]|171-104
6052|code|STR.W           LR, [R5,#0x10]|197-248-16-224
6056|code|CMP             R3, #0|0-43
6058|code|IT LT|184-191
6060|code|ADDLT.W         R12, R1, #1|1-241-1-12
6064|code|BLT             loc_17DE|21-219
6066|code|RSB.W           LR, R3, R6|195-235-6-14
6070|code|VMOV            S13, R6|6-238-144-106
6074|code|VMOV            S9, LR|4-238-144-234
6078|code|VCVT.F32.S32    S15, S13|248-238-230-122
6082|code|VMOV            S11, R1|5-238-144-26
6086|code|VCVT.F32.S32    S14, S9|184-238-228-122
6090|code|VDIV.F32        S15, S14, S15|199-238-39-122
6094|code|VCVT.F32.S32    S14, S11|184-238-229-122
6098|code|VMUL.F32        S15, S14, S15|103-238-39-122
6102|code|VCVT.S32.F32    S15, S15|253-238-231-122
6106|code|VMOV            R12, S15|23-238-144-202
6110|code|LDR.W           LR, [R8]|216-248-0-224
6114|code|STR.W           R12, [R5,#0x14]|197-248-20-192
6118|code|CMP.W           LR, #3|190-241-3-15
6122|code|BLE             loc_172C|159-221
6124|code|VMOV            S13, R0|6-238-144-10
6128|code|VCVT.F64.S32    D7, S13|184-238-230-123
6132|code|VMOV            S9, R2|4-238-144-42
6136|code|MOV             R1, R9|73-70
6138|code|MOVS            R0, #1|1-32
6140|code|ADDS            R7, #1|1-55
6142|code|VMUL.F64        D7, D7, D9|39-238-9-123
6146|code|VCVT.F64.S32    D6, S9|184-238-228-107
6150|code|VMOV            S9, R3|4-238-144-58
6154|code|VMOV            R2, R3, D7|83-236-23-43
6158|code|VCVT.F64.S32    D5, S9|184-238-228-91
6162|code|VMUL.F64        D6, D6, D9|38-238-9-107
6166|code|VMUL.F64        D7, D5, D9|37-238-9-123
6170|code|VSTR            D6, [SP,#0x80+var_80]|141-237-0-107
6174|code|VSTR            D7, [SP,#0x80+var_78]|141-237-2-123
6178|code|BLX             __printf_chk|255-247-202-234
6182|code|LDR.W           LR, [R5,#0x14]|213-248-20-224
6186|code|MOVS            R0, #1|1-32
6188|code|LDR             R1, =(aHeightsDDD - 0x1836); "Heights: %d, %d, %d\n"|95-73
6190|code|LDR             R3, [R5,#0x10]|43-105
6192|code|LDR             R2, [R5,#0xC]|234-104
6194|code|ADD             R1, PC; "Heights: %d, %d, %d\n"|121-68
6196|code|STR.W           LR, [SP,#0x80+var_80]|205-248-0-224
6200|code|BLX             __printf_chk|255-247-190-234
6204|code|LDR             R3, [R4]|35-104
6206|code|ADDS            R5, #0x1C|28-53
6208|code|LDR.W           R1, [R10]|218-248-0-16
6212|code|CMP             R3, R7|187-66
6214|code|BGT.W           loc_1738|63-247-119-175
6218|code|CMP             R1, #0|0-41
6220|code|BLT.W           loc_1A74|192-242-18-129
6224|code|LDR.W           R11, =(a62f - 0x185E); "%6.2f   "|223-248-92-177
6228|code|MOVS            R5, #0|0-37
6230|code|LDR             R7, =(aS - 0x1860); "%s"|87-79
6232|code|LDR             R6, =(off_B068 - 0x1862)|87-78
6234|code|ADD             R11, PC; "%6.2f   "|251-68
6236|code|ADD             R7, PC; "%s"|127-68
6238|code|ADD             R6, PC; off_B068|126-68
6240|code|SUBS            R3, R1, R5|75-27
6242|code|VMOV            S13, R3|6-238-144-58
6246|code|VCVT.F32.S32    S14, S13|184-238-230-122
6250|code|VMOV            S11, R1|5-238-144-26
6254|code|MOVS            R0, #1|1-32
6256|code|MOV             R1, R11|89-70
6258|code|VMUL.F32        S14, S14, S16|39-238-8-122
6262|code|VCVT.F32.S32    S15, S11|248-238-229-122
6266|code|VDIV.F32        S14, S14, S15|135-238-39-122
6270|code|VCVT.F64.F32    D7, S14|183-238-199-122
6274|code|VMOV            R2, R3, D7|83-236-23-43
6278|code|BLX             __printf_chk|255-247-152-234
6282|code|LDR             R3, [R4]|35-104
6284|code|CMP             R3, #0|0-43
6286|code|BLE             loc_18D6|34-221
6288|code|LDR.W           R8, [SP,#0x80+var_64]|221-248-28-128
6292|code|MOV.W           R9, #0|79-240-0-9
6296|code|LDR.W           R3, [R8,#0xC]|216-248-12-48
6300|code|MOVS            R0, #1|1-32
6302|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
6306|code|MOV             R1, R7|57-70
6308|code|RSB.W           LR, R3, R5|195-235-5-14
6312|code|ADD             R9, R0|129-68
6314|code|RSBS.W          R3, LR, #0|222-241-0-3
6318|code|ADC.W           R3, R3, LR|67-235-14-3
6322|code|CMP             R2, R5|170-66
6324|code|LDR.W           R2, [R8,#0x14]|216-248-20-32
6328|code|IT EQ|8-191
6330|code|ADDEQ           R3, #2|2-51
6332|code|ADD.W           R8, R8, #0x1C|8-241-28-8
6336|code|CMP             R2, R5|170-66
6338|code|LDR             R2, [R6]; off_B044|50-104
6340|code|IT EQ|8-191
6342|code|ADDEQ           R3, #4|4-51
6344|code|LDR.W           R2, [R2,R3,LSL#2]|82-248-35-32
6348|code|BLX             __printf_chk|255-247-116-234
6352|code|LDR             R3, [R4]|35-104
6354|code|CMP             R3, R9|75-69
6356|code|BGT             loc_1898|224-220
6358|code|MOVS            R0, #0xA; c|10-32
6360|code|ADDS            R5, #1|1-53
6362|code|BLX             putchar|255-247-96-234
6366|code|LDR.W           R1, [R10]|218-248-0-16
6370|code|CMP             R1, R5|169-66
6372|code|BGE             loc_1860|188-218
6374|code|LDR             R3, =dword_8C|53-75
6376|code|MOV.W           R2, #0x2000; n|79-244-0-82
6380|code|LDR             R0, [SP,#0x80+var_60]|8-152
6382|code|MOVS            R1, #0; c|0-33
6384|code|LDR             R4, [R0,R3]|196-88
6386|code|MOV             R0, R4; s|32-70
6388|code|BLX             memset|255-247-76-234
6392|code|LDR             R3, =(dword_B008 - 0x18FE)|49-75
6394|code|ADD             R3, PC; dword_B008|123-68
6396|code|LDR             R2, [R3,#(cols - 0xB008)]|90-104
6398|code|SUBS            R2, #1|1-58
6400|code|MOVS            R1, #0x20 ; ' '|32-33
6402|code|MOV.W           R3, #0x2000|79-244-0-83
6406|code|MOV             R0, R4|32-70
6408|code|BLX             __memset_chk|255-247-226-233
6412|code|LDR             R3, =dword_B4|45-75
6414|code|LDR             R1, [SP,#0x80+var_60]|8-153
6416|code|LDR             R3, [R1,R3]|203-88
6418|code|LDR             R7, [R3]|31-104
6420|code|CMP             R7, #0|0-47
6422|code|BLE             loc_193C|17-221
6424|code|LDR             R3, =dword_A0|43-75
6426|code|MOVS            R6, #0|0-38
6428|code|LDR             R3, [R1,R3]|203-88
6430|code|LDR             R5, [R3]|29-104
6432|code|LDR             R3, [R5]|43-104
6434|code|ADDS            R1, R5, #4; src|41-29
6436|code|ADDS            R6, #1|1-54
6438|code|ADDS            R5, #0xC|12-53
6440|code|CMP             R3, #0|0-43
6442|code|ADD.W           R0, R3, #9|3-241-9-0
6446|code|ADD             R0, R4; dest|32-68
6448|code|BLE             loc_1938|2-221
6450|code|MOVS            R2, #6; n|6-34
6452|code|BLX             strncpy|255-247-56-234
6456|code|CMP             R6, R7|190-66
6458|code|BNE             loc_1920|241-209
6460|code|LDR             R3, =(dword_B008 - 0x1948)|35-75
6462|code|MOVS            R1, #0|0-33
6464|code|LDR             R2, =(off_B068 - 0x194A)|35-74
6466|code|MOVS            R0, #1|1-32
6468|code|ADD             R3, PC; dword_B008|123-68
6470|code|ADD             R2, PC; off_B068|122-68
6472|code|LDR             R3, [R3,#(cols - 0xB008)]|91-104
6474|code|LDR             R2, [R2]; off_B044|18-104
6476|code|ADDS            R3, R4, R3|227-24
6478|code|STRB.W          R1, [R3,#-1]|3-248-1-28
6482|code|LDR             R1, [R2,#(off_B04C - 0xB044)]; "\x1B[32m*\x1B[m"|145-104
6484|code|LDR             R3, [R2,#(off_B048 - 0xB044)]; "\x1B[31m*\x1B[m"|83-104
6486|code|STR             R1, [SP,#0x80+var_80]|0-145
6488|code|LDR             R1, [R2,#(off_B054 - 0xB044)]; "\x1B[34m*\x1B[m"|17-105
6490|code|STR             R1, [SP,#0x80+var_80+4]|1-145
6492|code|LDR             R1, [R2,#(off_B050 - 0xB044)]; "\x1B[33m*\x1B[m"|209-104
6494|code|STR             R1, [SP,#0x80+var_78]|2-145
6496|code|LDR             R1, [R2,#(off_B058 - 0xB044)]; "\x1B[35m*\x1B[m"|81-105
6498|code|STR             R1, [SP,#0x80+var_78+4]|3-145
6500|code|LDR             R1, [R2,#(off_B05C - 0xB044)]; "\x1B[36m*\x1B[m"|145-105
6502|code|STR             R1, [SP,#0x80+var_70]|4-145
6504|code|LDR             R2, [R2,#(off_B060 - 0xB044)]; "\x1B[37m*\x1B[m"|210-105
6506|code|LDR             R1, =(aSLegend1MinS5M - 0x1972); "%s\n  Legend:\n     1 min: %s, 5 min: %"...|26-73
6508|code|STR             R2, [SP,#0x80+var_6C]|5-146
6510|code|ADD             R1, PC; "%s\n  Legend:\n     1 min: %s, 5 min: %"...|121-68
6512|code|MOV             R2, R4|34-70
6514|code|BLX             __printf_chk|255-247-34-234
6518|code|ADD             SP, SP, #0x4C ; 'L'|19-176
6520|code|VPOP            {D8-D9}|189-236-4-139
6524|code|POP.W           {R4-R11,PC}|189-232-240-143
6528|data|DCFD 0.0009765625|0-0-0-0-0-0-80-63
6536|data|DCD dword_B008 - 0x15DC|44-154-0-0
6540|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15E0|88-153-0-0
6544|data|DCD dword_98|152-0-0-0
6548|data|DCD aCheckingForMin - 0x161A; "Checking for min/max at %d...\n"|186-11-0-0
6552|data|DCD aComparingForEx - 0x161C; "Comparing, for example, %ld <=> %ld\n"|216-11-0-0
6556|data|DCD dword_B008 - 0x1620|232-153-0-0
6560|data|DCD dword_B8|184-0-0-0
6564|data|DCD dword_B008 - 0x1724|228-152-0-0
6568|data|DCD aLoadAveragesFF_0 - 0x1728; "Load averages: %f, %f, %f  -- "|212-11-0-0
6572|data|DCD aHeightsDDD - 0x1836; "Heights: %d, %d, %d\n"|230-10-0-0
6576|data|DCD a62f - 0x185E; "%6.2f   "|214-10-0-0
6580|data|DCD aS - 0x1860; "%s"|224-10-0-0
6584|data|DCD off_B068 - 0x1862|6-152-0-0
6588|data|DCD dword_8C|140-0-0-0
6592|data|DCD dword_B008 - 0x18FE|10-151-0-0
6596|data|DCD dword_B4|180-0-0-0
6600|data|DCD dword_A0|160-0-0-0
6604|data|DCD dword_B008 - 0x1948|192-150-0-0
6608|data|DCD off_B068 - 0x194A|30-151-0-0
6612|data|DCD aSLegend1MinS5M - 0x1972; "%s\n  Legend:\n     1 min: %s, 5 min: %"...|210-9-0-0
6616|data|DCFS 1024.0|0-0-128-68
6620|code|ADD.W           R3, R6, #0x3F8|6-245-126-115
6624|code|VLDR            S15, =1024.0|95-237-3-122
6628|code|ADDS            R3, #7|7-51
6630|code|ANDS.W          R3, R3, R6,ASR#32|19-234-38-3
6634|code|IT CC|56-191
6636|code|MOVCC           R3, R6|51-70
6638|code|ASRS            R3, R3, #0xA|155-18
6640|code|ADDS            R3, #1|1-51
6642|code|VMOV            S9, R3|4-238-144-58
6646|code|VCVT.F32.S32    S16, S9|184-238-228-138
6650|code|CMP             R2, #3|3-42
6652|code|VMUL.F32        S15, S16, S15|104-238-39-122
6656|code|VCVT.S32.F32    S15, S15|253-238-231-122
6660|code|VMOV            R6, S15|23-238-144-106
6664|code|BLE.W           loc_1702|127-247-123-174
6668|code|ADD.W           R3, R5, #0x3F8|5-245-126-115
6672|code|VCVT.F64.F32    D7, S16|183-238-200-122
6676|code|ADDS            R3, #7|7-51
6678|code|LDR             R1, =(aBoundariesGG - 0x1A26); "Boundaries: %g, %g...  "|115-73
6680|code|BICS.W          R5, R5, R5,ASR#32|53-234-37-5
6684|code|IT CS|40-191
6686|code|MOVCS           R5, R3|29-70
6688|code|MOVS            R0, #1|1-32
6690|code|ADD             R1, PC; "Boundaries: %g, %g...  "|121-68
6692|code|ASRS            R3, R5, #0xA|171-18
6694|code|VMOV            S11, R3|5-238-144-58
6698|code|VCVT.F32.S32    S17, S11|248-238-229-138
6702|code|VSTR            D7, [SP,#0x80+var_80]|141-237-0-123
6706|code|VCVT.F64.F32    D7, S17|183-238-232-122
6710|code|VMOV            R2, R3, D7|83-236-23-43
6714|code|BLX             __printf_chk|255-247-190-233
6718|code|VLDR            S15, =1024.0|223-237-104-122
6722|code|VMUL.F32        S15, S17, S15|104-238-167-122
6726|code|LDR             R1, =(aLongBoundaries - 0x1A50); "Long Boundaries: %ld, %ld\n"|104-73
6728|code|MOVS            R0, #1|1-32
6730|code|MOV             R3, R6|51-70
6732|code|ADD             R1, PC; "Long Boundaries: %ld, %ld\n"|121-68
6734|code|VCVT.S32.F32    S15, S15|253-238-231-122
6738|code|VMOV            R2, S15|23-238-144-42
6742|code|BLX             __printf_chk|255-247-176-233
6746|code|LDR             R3, [R4]|35-104
6748|code|CMP             R3, #0|0-43
6750|code|BGT.W           loc_170A|63-247-84-174
6754|code|LDR             R3, =dword_B8|98-75
6756|code|LDR             R0, [SP,#0x80+var_60]|8-152
6758|code|LDR.W           R10, [R0,R3]|80-248-3-160
6762|code|LDR.W           R1, [R10]|218-248-0-16
6766|code|CMP             R1, #0|0-41
6768|code|BGE.W           loc_1850|191-246-238-174
6772|code|LDR             R3, =dword_8C|94-75
6774|code|MOV.W           R2, #0x2000; n|79-244-0-82
6778|code|LDR             R0, [SP,#0x80+var_60]|8-152
6780|code|MOVS            R1, #0; c|0-33
6782|code|LDR             R4, [R0,R3]|196-88
6784|code|MOV             R0, R4; s|32-70
6786|code|BLX             memset|255-247-134-233
6790|code|LDR             R3, =(dword_B008 - 0x1A8C)|91-75
6792|code|ADD             R3, PC; dword_B008|123-68
6794|code|LDR             R2, [R3,#(cols - 0xB008)]|90-104
6796|code|SUBS            R2, #1|1-58
6798|code|B               loc_1900|55-231
6800|code|LDR             R1, =(aContinuingWith - 0x1A9C); "Continuing with min set: %ld,%ld,%ld\n"|89-73
6802|code|MOV             R2, R8|66-70
6804|code|MOV             R3, R9|75-70
6806|code|MOVS            R0, #1|1-32
6808|code|ADD             R1, PC; "Continuing with min set: %ld,%ld,%ld\n"|121-68
6810|code|STR.W           R12, [SP,#0x80+var_68]|205-248-24-192
6814|code|STR             R7, [SP,#0x80+var_80]|0-151
6816|code|BLX             __printf_chk|255-247-138-233
6820|code|LDR             R1, [SP,#0x80+var_64]|7-153
6822|code|VLDR            D9, =0.0009765625|159-237-76-155
6826|code|LDR             R0, [SP,#0x80+var_64]|7-152
6828|code|LDR.W           LR, [R1,#8]|209-248-8-224
6832|code|LDR             R1, =(dword_B008 - 0x1ABC)|82-73
6834|code|LDM.W           R0, {R2,R3}|144-232-12-0
6838|code|MOVS            R0, #1|1-32
6840|code|ADD             R1, PC; dword_B008|121-68
6842|code|STR             R1, [SP,#0x80+var_5C]|9-145
6844|code|LDR             R1, =(aContinuingWith_0 - 0x1AC6); "Continuing with first set: %ld,%ld,%ld"...|80-73
6846|code|STR.W           LR, [SP,#0x80+var_80]|205-248-0-224
6850|code|ADD             R1, PC; "Continuing with first set: %ld,%ld,%ld"...|121-68
6852|code|BLX             __printf_chk|255-247-120-233
6856|code|MOVS            R0, #1; seconds|1-32
6858|code|BLX             sleep|255-247-14-233
6862|code|VMOV            S9, R8|4-238-144-138
6866|code|VCVT.F64.S32    D7, S9|184-238-228-123
6870|code|VMOV            S11, R9|5-238-144-154
6874|code|VMOV            S9, R7|4-238-144-122
6878|code|LDR             R1, =(unk_226C - 0x1AE6)|73-73
6880|code|MOVS            R0, #1|1-32
6882|code|ADD             R1, PC; unk_226C|121-68
6884|code|VMUL.F64        D7, D7, D9|39-238-9-123
6888|code|VCVT.F64.S32    D6, S11|184-238-229-107
6892|code|VMOV            R2, R3, D7|83-236-23-43
6896|code|VCVT.F64.S32    D5, S9|184-238-228-91
6900|code|VMUL.F64        D6, D6, D9|38-238-9-107
6904|code|VMUL.F64        D7, D5, D9|37-238-9-123
6908|code|VSTR            D6, [SP,#0x80+var_80]|141-237-0-107
6912|code|VSTR            D7, [SP,#0x80+var_78]|141-237-2-123
6916|code|BLX             __printf_chk|255-247-88-233
6920|code|VMOV            S11, R10|5-238-144-170
6924|code|VCVT.F64.S32    D7, S11|184-238-229-123
6928|code|VMOV            S9, R11|4-238-144-186
6932|code|LDR.W           R12, [SP,#0x80+var_68]|221-248-24-192
6936|code|LDR             R1, =(aMaxLoadAverage - 0x1B20); "MAX Load averages: %f, %f, %f\n"|59-73
6938|code|MOVS            R0, #1|1-32
6940|code|ADD             R1, PC; "MAX Load averages: %f, %f, %f\n"|121-68
6942|code|VMUL.F64        D7, D7, D9|39-238-9-123
6946|code|VCVT.F64.S32    D6, S9|184-238-228-107
6950|code|VMOV            S9, R12|4-238-144-202
6954|code|VMOV            R2, R3, D7|83-236-23-43
6958|code|VCVT.F64.S32    D5, S9|184-238-228-91
6962|code|VMUL.F64        D6, D6, D9|38-238-9-107
6966|code|VMUL.F64        D7, D5, D9|37-238-9-123
6970|code|VSTR            D6, [SP,#0x80+var_80]|141-237-0-107
6974|code|VSTR            D7, [SP,#0x80+var_78]|141-237-2-123
6978|code|BLX             __printf_chk|255-247-58-233
6982|code|LDR             R0, [SP,#0x80+var_5C]|9-152
6984|code|LDR             R2, [R0]|2-104
6986|code|CMP             R2, #3|3-42
6988|code|BLE.W           loc_16BA|127-247-181-173
6992|code|VMOV            S11, R5|5-238-144-90
6996|code|VCVT.F64.S32    D7, S11|184-238-229-123
7000|code|VMOV            S13, R6|6-238-144-106
7004|code|LDR             R1, =(aOverallMinMaxF - 0x1B64); "Overall MIN, MAX: %f, %f\n"|43-73
7006|code|MOVS            R0, #1|1-32
7008|code|ADD             R1, PC; "Overall MIN, MAX: %f, %f\n"|121-68
7010|code|VCVT.F64.S32    D8, S13|184-238-230-139
7014|code|VMUL.F64        D7, D7, D9|39-238-9-123
7018|code|VMUL.F64        D6, D8, D9|40-238-9-107
7022|code|VMOV            R2, R3, D7|83-236-23-43
7026|code|VSTR            D6, [SP,#0x80+var_80]|141-237-0-107
7030|code|BLX             __printf_chk|255-247-32-233
7034|code|LDR             R0, [SP,#0x80+var_5C]|9-152
7036|code|LDR             R2, [R0]|2-104
7038|code|B               loc_16C2|160-229
7040|code|MOVW            R2, #0xFFFE|79-246-254-114
7044|code|LDR             R1, =(aStartingWithMi - 0x1B90); "Starting with min set: %ld, %ld, %ld\n"|34-73
7046|code|MOVT.W          R2, #0x7FFF|199-246-255-114
7050|code|MOVS            R0, #1|1-32
7052|code|ADD             R1, PC; "Starting with min set: %ld, %ld, %ld\n"|121-68
7054|code|STR             R2, [SP,#0x80+var_80]|0-146
7056|code|MOV             R3, R2|19-70
7058|code|BLX             __printf_chk|255-247-18-233
7062|code|LDR             R1, [SP,#0x80+var_64]|7-153
7064|code|LDR             R3, [SP,#0x80+var_64]|7-155
7066|code|MOVS            R0, #1|1-32
7068|code|LDR             R5, [R1,#8]|141-104
7070|code|LDR             R1, =(aStartingWithFi - 0x1BA6); "Starting with first set: %ld, %ld, %ld"...|29-73
7072|code|LDM             R3, {R2,R3}|12-203
7074|code|ADD             R1, PC; "Starting with first set: %ld, %ld, %ld"...|121-68
7076|code|STR             R5, [SP,#0x80+var_80]|0-149
7078|code|BLX             __printf_chk|255-247-8-233
7082|code|MOVS            R0, #1; seconds|1-32
7084|code|BLX             sleep|255-247-156-232
7088|code|LDR             R3, =dword_98|25-75
7090|code|LDR             R0, [SP,#0x80+var_60]|8-152
7092|code|LDR             R2, [R4]|34-104
7094|code|LDR             R4, [R0,R3]|196-88
7096|code|LDR             R3, [R4]|35-104
7098|code|CMP             R3, #0|0-43
7100|code|BGT.W           loc_1604|63-247-34-173
7104|code|MOVS            R6, #0|0-38
7106|code|MOV             R5, #0x7FFFFFFE|79-246-254-117-199-246-255-117
7114|code|MOV             R12, R6|180-70
7116|code|MOV             R11, R6|179-70
7118|code|MOV             R10, R6|178-70
7120|code|MOV             R7, R5|47-70
7122|code|MOV             R9, R5|169-70
7124|code|MOV             R8, R5|168-70
7126|code|B               loc_16B4|109-229
7128|data|DCFD 0.0009765625|0-0-0-0-0-0-80-63
7136|data|DCFS 1024.0|0-0-128-68
7140|data|DCD aBoundariesGG - 0x1A26; "Boundaries: %g, %g...  "|162-8-0-0
7144|data|DCD aLongBoundaries - 0x1A50; "Long Boundaries: %ld, %ld\n"|144-8-0-0
7148|data|DCD dword_B8|184-0-0-0
7152|data|DCD dword_8C|140-0-0-0
7156|data|DCD dword_B008 - 0x1A8C|124-149-0-0
7160|data|DCD aContinuingWith - 0x1A9C; "Continuing with min set: %ld,%ld,%ld\n"|128-7-0-0
7164|data|DCD dword_B008 - 0x1ABC|76-149-0-0
7168|data|DCD aContinuingWith_0 - 0x1AC6; "Continuing with first set: %ld,%ld,%ld"...|126-7-0-0
7172|data|DCD unk_226C - 0x1AE6|134-7-0-0
7176|data|DCD aMaxLoadAverage - 0x1B20; "MAX Load averages: %f, %f, %f\n"|108-7-0-0
7180|data|DCD aOverallMinMaxF - 0x1B64; "Overall MIN, MAX: %f, %f\n"|72-7-0-0
7184|data|DCD aStartingWithMi - 0x1B90; "Starting with min set: %ld, %ld, %ld\n"|244-5-0-0
7188|data|DCD aStartingWithFi - 0x1BA6; "Starting with first set: %ld, %ld, %ld"...|6-6-0-0
7192|data|DCD dword_98|152-0-0-0
7196|code|CMP             R0, #0|0-40
7198|code|BLT             loc_1C4C|21-219
7200|code|SUBS            R0, R1, R0|8-26
7202|code|VMOV            S13, R1|6-238-144-26
7206|code|VCVT.F32.S32    S15, S13|248-238-230-122
7210|code|VMOV            S13, R0|6-238-144-10
7214|code|VCVT.F32.S32    S14, S13|184-238-230-122
7218|code|VMOV            S13, R2|6-238-144-42
7222|code|VDIV.F32        S15, S14, S15|199-238-39-122
7226|code|VCVT.F32.S32    S14, S13|184-238-230-122
7230|code|VMUL.F32        S15, S14, S15|103-238-39-122
7234|code|VCVT.S32.F32    S15, S15|253-238-231-122
7238|code|VMOV            R0, S15|23-238-144-10
7242|code|BX              LR|112-71
7244|code|ADDS            R0, R2, #1|80-28
7246|code|BX              LR|112-71
7248|code|LDR             R1, =(aH2j - 0x1C58); "\x1B[H\x1B[2J"|2-73
7250|code|MOVS            R0, #1|1-32
7252|code|ADD             R1, PC; "\x1B[H\x1B[2J"|121-68
7254|code|B.W             j___printf_chk|255-247-173-184
7258|data|ALIGN 4|0-191
7260|data|DCD aH2j - 0x1C58; "\x1B[H\x1B[2J"|80-7-0-0
7264|code|LDR             R1, =(aH - 0x1C68); "\x1B[H"|2-73
7266|code|MOVS            R0, #1|1-32
7268|code|ADD             R1, PC; "\x1B[H"|121-68
7270|code|B.W             j___printf_chk|255-247-165-184
7274|data|ALIGN 4|0-191
7276|data|DCD aH - 0x1C68; "\x1B[H"|72-7-0-0
7280|code|SUB             SP, SP, #0x10|132-176
7282|code|PUSH.W          {R4-R10}|45-233-240-7
7286|code|MOV             R8, R0|128-70
7288|code|LDR             R0, [SP,#0x2C+arg_10]|15-152
7290|code|ADD.W           R9, SP, #0x2C+var_C|13-241-32-9
7294|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1C8E)|223-248-128-160
7298|code|ADD.W           R12, R0, #0xFFFFFFFF|0-241-255-60
7302|code|CMP.W           R12, #0|188-241-0-15
7306|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
7308|code|STM.W           R9, {R1-R3}|137-232-14-0
7312|code|IT LE|216-191
7314|code|MOVLE.W         R12, #0|79-240-0-12
7318|code|BLE             loc_1CBE|18-221
7320|code|MOVS            R7, #0|0-39
7322|code|MOV             R6, R8|70-70
7324|code|ADD.W           R5, R6, #0x1C|6-241-28-5
7328|code|MOV             R4, R6|52-70
7330|code|ADDS            R7, #1|1-55
7332|code|MOV             R6, R5|46-70
7334|code|CMP             R7, R12|103-69
7336|code|LDM             R5!, {R0-R3}|15-205
7338|code|STM             R4!, {R0-R3}|15-196
7340|code|LDM.W           R5, {R0-R2}|149-232-7-0
7344|code|STM.W           R4, {R0-R2}|132-232-7-0
7348|code|BLT             loc_1C9C|242-219
7350|code|RSB.W           R12, R12, R12,LSL#3|204-235-204-12
7354|code|MOV.W           R12, R12,LSL#2|79-234-140-12
7358|code|LDM.W           R9!, {R0-R3}|185-232-15-0
7362|code|ADD             R8, R12|224-68
7364|code|STM.W           R8!, {R0-R3}|168-232-15-0
7368|code|LDM.W           R9, {R0-R2}|153-232-7-0
7372|code|LDR             R3, =(clocks_ptr - 0xAF38)|13-75
7374|code|STM.W           R8, {R0-R2}|136-232-7-0
7378|code|LDR.W           R3, [R10,R3]; clocks|90-248-3-48
7382|code|LDR             R4, [R3]|28-104
7384|code|CMP             R4, #0|0-44
7386|code|BLE             loc_1CF6|12-221
7388|code|LDR             R1, =(theclocks_ptr - 0xAF38)|10-73
7390|code|MOVS            R3, #0|0-35
7392|code|MOV             R2, R3|26-70
7394|code|LDR.W           R1, [R10,R1]; theclocks|90-248-1-16
7398|code|LDR             R1, [R1]|9-104
7400|code|LDR             R0, [R1,R3]|200-88
7402|code|ADDS            R2, #1|1-50
7404|code|SUBS            R0, #1|1-56
7406|code|STR             R0, [R1,R3]|200-80
7408|code|ADDS            R3, #0xC|12-51
7410|code|CMP             R2, R4|162-66
7412|code|BNE             loc_1CE8|248-209
7414|code|POP.W           {R4-R10}|189-232-240-7
7418|code|ADD             SP, SP, #0x10|4-176
7420|code|BX              LR|112-71
7422|data|ALIGN 0x10|0-191
7424|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1C8E|170-146-0-0
7428|data|DCD clocks_ptr - 0xAF38|180-0-0-0
7432|data|DCD theclocks_ptr - 0xAF38|160-0-0-0
7436|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1D14)|11-75
7438|code|LDR             R2, =(width_ptr - 0xAF38)|12-74
7440|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
7442|code|LDR             R3, [R3,R2]; width|155-88
7444|code|LDR             R2, [R3]|26-104
7446|code|CBZ             R2, locret_1D3A|130-177
7448|code|RSB.W           R1, R2, R2,LSL#3|194-235-194-1
7452|code|SUBS            R2, #1|1-58
7454|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
7458|code|ADD.W           R0, R0, R1,LSL#2|0-235-129-0
7462|code|SUBS            R2, #1|1-58
7464|code|STR.W           R3, [R0,#-0x1C]|64-248-28-60
7468|code|STR.W           R3, [R0,#-0x18]|64-248-24-60
7472|code|STR.W           R3, [R0,#-0x14]|64-248-20-60
7476|code|SUBS            R0, #0x1C|28-56
7478|code|ADDS            R1, R2, #1|81-28
7480|code|BNE             loc_1D26|245-209
7482|code|BX              LR|112-71
7484|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D14|36-146-0-0
7488|data|DCD width_ptr - 0xAF38|152-0-0-0
7492|code|NOP.W|175-243-0-128
7496|code|CMP             R1, #0|0-41
7498|code|BEQ.W           loc_1FCA|0-240-62-129
7502|code|EOR.W           R12, R0, R1|128-234-1-12
7506|code|IT MI|72-191
7508|code|NEGMI           R1, R1|73-66
7510|code|SUBS            R2, R1, #1|74-30
7512|code|BEQ.W           loc_1F9A|0-240-31-129
7516|code|MOVS            R3, R0|3-0
7518|code|IT MI|72-191
7520|code|NEGMI           R3, R0|67-66
7522|code|CMP             R3, R1|139-66
7524|code|BLS.W           loc_1FA4|64-242-30-129
7528|code|TST             R1, R2|17-66
7530|code|BEQ.W           loc_1FB4|0-240-35-129
7534|code|CLZ.W           R2, R3|179-250-131-242
7538|code|CLZ.W           R0, R1|177-250-129-240
7542|code|SUB.W           R2, R0, R2|160-235-2-2
7546|code|RSB.W           R2, R2, #0x1F|194-241-31-2
7550|code|ADR             R0, loc_1D90|4-160
7552|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
7556|code|MOV.W           R0, #0|79-240-0-0
7560|code|MOV             PC, R2|151-70
7562|data|ALIGN 4|0-191
7564|code|NOP.W|175-243-0-128
7568|code|CMP.W           R3, R1,LSL#31|179-235-193-127
7572|code|NOP|0-191
7574|code|ADC.W           R0, R0, R0|64-235-0-0
7578|code|IT CS|40-191
7580|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
7584|code|CMP.W           R3, R1,LSL#30|179-235-129-127
7588|code|NOP|0-191
7590|code|ADC.W           R0, R0, R0|64-235-0-0
7594|code|IT CS|40-191
7596|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
7600|code|CMP.W           R3, R1,LSL#29|179-235-65-127
7604|code|NOP|0-191
7606|code|ADC.W           R0, R0, R0|64-235-0-0
7610|code|IT CS|40-191
7612|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
7616|code|CMP.W           R3, R1,LSL#28|179-235-1-127
7620|code|NOP|0-191
7622|code|ADC.W           R0, R0, R0|64-235-0-0
7626|code|IT CS|40-191
7628|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
7632|code|CMP.W           R3, R1,LSL#27|179-235-193-111
7636|code|NOP|0-191
7638|code|ADC.W           R0, R0, R0|64-235-0-0
7642|code|IT CS|40-191
7644|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
7648|code|CMP.W           R3, R1,LSL#26|179-235-129-111
7652|code|NOP|0-191
7654|code|ADC.W           R0, R0, R0|64-235-0-0
7658|code|IT CS|40-191
7660|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
7664|code|CMP.W           R3, R1,LSL#25|179-235-65-111
7668|code|NOP|0-191
7670|code|ADC.W           R0, R0, R0|64-235-0-0
7674|code|IT CS|40-191
7676|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
7680|code|CMP.W           R3, R1,LSL#24|179-235-1-111
7684|code|NOP|0-191
7686|code|ADC.W           R0, R0, R0|64-235-0-0
7690|code|IT CS|40-191
7692|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
7696|code|CMP.W           R3, R1,LSL#23|179-235-193-95
7700|code|NOP|0-191
7702|code|ADC.W           R0, R0, R0|64-235-0-0
7706|code|IT CS|40-191
7708|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
7712|code|CMP.W           R3, R1,LSL#22|179-235-129-95
7716|code|NOP|0-191
7718|code|ADC.W           R0, R0, R0|64-235-0-0
7722|code|IT CS|40-191
7724|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
7728|code|CMP.W           R3, R1,LSL#21|179-235-65-95
7732|code|NOP|0-191
7734|code|ADC.W           R0, R0, R0|64-235-0-0
7738|code|IT CS|40-191
7740|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
7744|code|CMP.W           R3, R1,LSL#20|179-235-1-95
7748|code|NOP|0-191
7750|code|ADC.W           R0, R0, R0|64-235-0-0
7754|code|IT CS|40-191
7756|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
7760|code|CMP.W           R3, R1,LSL#19|179-235-193-79
7764|code|NOP|0-191
7766|code|ADC.W           R0, R0, R0|64-235-0-0
7770|code|IT CS|40-191
7772|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
7776|code|CMP.W           R3, R1,LSL#18|179-235-129-79
7780|code|NOP|0-191
7782|code|ADC.W           R0, R0, R0|64-235-0-0
7786|code|IT CS|40-191
7788|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
7792|code|CMP.W           R3, R1,LSL#17|179-235-65-79
7796|code|NOP|0-191
7798|code|ADC.W           R0, R0, R0|64-235-0-0
7802|code|IT CS|40-191
7804|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
7808|code|CMP.W           R3, R1,LSL#16|179-235-1-79
7812|code|NOP|0-191
7814|code|ADC.W           R0, R0, R0|64-235-0-0
7818|code|IT CS|40-191
7820|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
7824|code|CMP.W           R3, R1,LSL#15|179-235-193-63
7828|code|NOP|0-191
7830|code|ADC.W           R0, R0, R0|64-235-0-0
7834|code|IT CS|40-191
7836|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
7840|code|CMP.W           R3, R1,LSL#14|179-235-129-63
7844|code|NOP|0-191
7846|code|ADC.W           R0, R0, R0|64-235-0-0
7850|code|IT CS|40-191
7852|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
7856|code|CMP.W           R3, R1,LSL#13|179-235-65-63
7860|code|NOP|0-191
7862|code|ADC.W           R0, R0, R0|64-235-0-0
7866|code|IT CS|40-191
7868|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
7872|code|CMP.W           R3, R1,LSL#12|179-235-1-63
7876|code|NOP|0-191
7878|code|ADC.W           R0, R0, R0|64-235-0-0
7882|code|IT CS|40-191
7884|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
7888|code|CMP.W           R3, R1,LSL#11|179-235-193-47
7892|code|NOP|0-191
7894|code|ADC.W           R0, R0, R0|64-235-0-0
7898|code|IT CS|40-191
7900|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
7904|code|CMP.W           R3, R1,LSL#10|179-235-129-47
7908|code|NOP|0-191
7910|code|ADC.W           R0, R0, R0|64-235-0-0
7914|code|IT CS|40-191
7916|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
7920|code|CMP.W           R3, R1,LSL#9|179-235-65-47
7924|code|NOP|0-191
7926|code|ADC.W           R0, R0, R0|64-235-0-0
7930|code|IT CS|40-191
7932|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
7936|code|CMP.W           R3, R1,LSL#8|179-235-1-47
7940|code|NOP|0-191
7942|code|ADC.W           R0, R0, R0|64-235-0-0
7946|code|IT CS|40-191
7948|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
7952|code|CMP.W           R3, R1,LSL#7|179-235-193-31
7956|code|NOP|0-191
7958|code|ADC.W           R0, R0, R0|64-235-0-0
7962|code|IT CS|40-191
7964|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
7968|code|CMP.W           R3, R1,LSL#6|179-235-129-31
7972|code|NOP|0-191
7974|code|ADC.W           R0, R0, R0|64-235-0-0
7978|code|IT CS|40-191
7980|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
7984|code|CMP.W           R3, R1,LSL#5|179-235-65-31
7988|code|NOP|0-191
7990|code|ADC.W           R0, R0, R0|64-235-0-0
7994|code|IT CS|40-191
7996|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
8000|code|CMP.W           R3, R1,LSL#4|179-235-1-31
8004|code|NOP|0-191
8006|code|ADC.W           R0, R0, R0|64-235-0-0
8010|code|IT CS|40-191
8012|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
8016|code|CMP.W           R3, R1,LSL#3|179-235-193-15
8020|code|NOP|0-191
8022|code|ADC.W           R0, R0, R0|64-235-0-0
8026|code|IT CS|40-191
8028|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
8032|code|CMP.W           R3, R1,LSL#2|179-235-129-15
8036|code|NOP|0-191
8038|code|ADC.W           R0, R0, R0|64-235-0-0
8042|code|IT CS|40-191
8044|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
8048|code|CMP.W           R3, R1,LSL#1|179-235-65-15
8052|code|NOP|0-191
8054|code|ADC.W           R0, R0, R0|64-235-0-0
8058|code|IT CS|40-191
8060|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
8064|code|CMP.W           R3, R1|179-235-1-15
8068|code|NOP|0-191
8070|code|ADC.W           R0, R0, R0|64-235-0-0
8074|code|IT CS|40-191
8076|code|SUBCS.W         R3, R3, R1|163-235-1-3
8080|code|CMP.W           R12, #0|188-241-0-15
8084|code|IT MI|72-191
8086|code|NEGMI           R0, R0|64-66
8088|code|BX              LR|112-71
8090|code|TEQ.W           R12, R0|156-234-0-15
8094|code|IT MI|72-191
8096|code|NEGMI           R0, R0|64-66
8098|code|BX              LR|112-71
8100|code|IT CC|56-191
8102|code|MOVCC           R0, #0|0-32
8104|code|ITT EQ|4-191
8106|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
8110|code|ORREQ.W         R0, R0, #1|64-240-1-0
8114|code|BX              LR|112-71
8116|code|CLZ.W           R2, R1|177-250-129-242
8120|code|RSB.W           R2, R2, #0x1F|194-241-31-2
8124|code|CMP.W           R12, #0|188-241-0-15
8128|code|LSR.W           R0, R3, R2|35-250-2-240
8132|code|IT MI|72-191
8134|code|NEGMI           R0, R0|64-66
8136|code|BX              LR|112-71
8138|code|CMP             R0, #0|0-40
8140|code|IT GT|200-191
8142|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
8146|code|IT LT|184-191
8148|code|MOVLT.W         R0, #0x80000000|79-240-0-64
8152|code|B.W             sub_1FF8|0-240-14-184
8156|code|CMP             R1, #0|0-41
8158|code|BEQ             loc_1FCA|244-208
8160|code|PUSH.W          {R0,R1,LR}|45-233-3-64
8164|code|BL              sub_1D4E|255-247-179-254
8168|code|POP.W           {R1,R2,LR}|189-232-6-64
8172|code|MUL.W           R3, R2, R0|2-251-0-243
8176|code|SUB.W           R1, R1, R3|161-235-3-1
8180|code|BX              LR|112-71
8182|data|ALIGN 4|0-191
8184|code|PUSH            {R1,LR}|2-181
8186|code|MOV.W           R0, #8; sig|79-240-8-0
8190|code|BLX             raise|254-247-74-238
8194|code|POP             {R1,PC}|2-189
8196|code|PUSH.W          {R3-R9,LR}|45-233-248-67
8200|code|MOV             R7, R0|7-70
8202|code|LDR             R5, =(off_AE24 - 0x2016)|12-77
8204|code|MOV             R8, R1|136-70
8206|code|LDR             R6, =(off_AE28 - 0x201C)|12-78
8208|code|MOV             R9, R2|145-70
8210|code|ADD             R5, PC; off_AE24|125-68
8212|code|BLX             .init_proc|254-247-40-238
8216|code|ADD             R6, PC; off_AE28|126-68
8218|code|SUBS            R6, R6, R5|118-27
8220|code|ASRS            R6, R6, #2|182-16
8222|code|BEQ             locret_2036|10-208
8224|code|SUBS            R5, #4|4-61
8226|code|MOVS            R4, #0|0-36
8228|code|LDR.W           R3, [R5,#4]!|85-248-4-63
8232|code|MOV             R0, R7|56-70
8234|code|MOV             R1, R8|65-70
8236|code|MOV             R2, R9|74-70
8238|code|ADDS            R4, #1|1-52
8240|code|BLX             R3; sub_1430|152-71
8242|code|CMP             R4, R6|180-66
8244|code|BNE             loc_2024|246-209
8246|code|POP.W           {R3-R9,PC}|189-232-248-131
8250|data|ALIGN 4|0-191
8252|data|DCD off_AE24 - 0x2016|14-142-0-0
8256|data|DCD off_AE28 - 0x201C|12-142-0-0
8260|code|BX              LR|112-71
8262|data|ALIGN 4|0-191
8264|code|PUSH            {R3,LR}|8-64-45-233
8268|code|POP             {R3,PC}|8-128-189-232
10316|data|ALIGN 0x10|0-0-0-0
44580|data|DCD sub_1430+1|49-20-0-0
44584|data|DCD byte_13F5|245-19-0-0
44588|data|DCD 0|0-0-0-0
44592|data|Elf32_Dyn <1, <0x24>>; DT_NEEDED libc.so.6|1-0-0-0-36-0-0-0
44600|data|Elf32_Dyn <1, <0x13D>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-61-1-0-0
44608|data|Elf32_Dyn <0xC, <0xC68>>; DT_INIT|12-0-0-0-104-12-0-0
44616|data|Elf32_Dyn <0xD, <0x2048>>; DT_FINI|13-0-0-0-72-32-0-0
44624|data|Elf32_Dyn <0x19, <0xAE24>>; DT_INIT_ARRAY|25-0-0-0-36-174-0-0
44632|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
44640|data|Elf32_Dyn <0x1A, <0xAE28>>; DT_FINI_ARRAY|26-0-0-0-40-174-0-0
44648|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
44656|data|Elf32_Dyn <4, <0x1B4>>; DT_HASH|4-0-0-0-180-1-0-0
44664|data|Elf32_Dyn <0x6FFFFEF5, <0x330>>; DT_GNU_HASH|245-254-255-111-48-3-0-0
44672|data|Elf32_Dyn <5, <0x760>>; DT_STRTAB|5-0-0-0-96-7-0-0
44680|data|Elf32_Dyn <6, <0x3E0>>; DT_SYMTAB|6-0-0-0-224-3-0-0
44688|data|Elf32_Dyn <0xA, <0x20F>>; DT_STRSZ|10-0-0-0-15-2-0-0
44696|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
44704|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
44712|data|Elf32_Dyn <3, <0xAF38>>; DT_PLTGOT|3-0-0-0-56-175-0-0
44720|data|Elf32_Dyn <2, <0xF0>>; DT_PLTRELSZ|2-0-0-0-240-0-0-0
44728|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
44736|data|Elf32_Dyn <0x17, <0xB78>>; DT_JMPREL|23-0-0-0-120-11-0-0
44744|data|Elf32_Dyn <0x11, <0xA30>>; DT_REL|17-0-0-0-48-10-0-0
44752|data|Elf32_Dyn <0x12, <0x148>>; DT_RELSZ|18-0-0-0-72-1-0-0
44760|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
44768|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
44776|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
44784|data|Elf32_Dyn <0x6FFFFFFE, <0x9E0>>; DT_VERNEED|254-255-255-111-224-9-0-0
44792|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
44800|data|Elf32_Dyn <0x6FFFFFF0, <0x970>>; DT_VERSYM|240-255-255-111-112-9-0-0
44808|data|Elf32_Dyn <0x6FFFFFFA, <0x23>>; DT_RELCOUNT|250-255-255-111-35-0-0-0
44816|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
44856|data|DCD stru_AE30|48-174-0-0
44860|data|DCD 0|0-0-0-0
44864|data|DCD dword_0|0-0-0-0
44868|data|DCD __imp_calloc|140-208-0-0
44872|data|DCD __imp_raise|144-208-0-0
44876|data|DCD __imp___cxa_finalize|148-208-0-0
44880|data|DCD __imp_strtol|152-208-0-0
44884|data|DCD __imp___isoc99_fscanf|156-208-0-0
44888|data|DCD __imp_fopen|160-208-0-0
44892|data|DCD __imp___memset_chk|168-208-0-0
44896|data|DCD __imp_time|172-208-0-0
44900|data|DCD __imp_sleep|176-208-0-0
44904|data|DCD __imp___stack_chk_fail|180-208-0-0
44908|data|DCD __imp_perror|184-208-0-0
44912|data|DCD __imp_fwrite|192-208-0-0
44916|data|DCD __imp_ioctl|196-208-0-0
44920|data|DCD __imp_strcpy|200-208-0-0
44924|data|DCD __imp_gethostname|204-208-0-0
44928|data|DCD __imp_puts|208-208-0-0
44932|data|DCD __imp___libc_start_main|212-208-0-0
44936|data|DCD __imp_strftime|216-208-0-0
44940|data|DCD __imp_localtime|220-208-0-0
44944|data|DCD __imp___gmon_start__|12-209-0-0
44948|data|DCD __imp_exit|224-208-0-0
44952|data|DCD __imp_getopt|228-208-0-0
44956|data|DCD __imp_memset|232-208-0-0
44960|data|DCD __imp_putchar|236-208-0-0
44964|data|DCD __imp_strncpy|240-208-0-0
44968|data|DCD __imp___printf_chk|244-208-0-0
44972|data|DCD __imp___fprintf_chk|248-208-0-0
44976|data|DCD __imp_fclose|252-208-0-0
44980|data|DCD __imp_strrchr|0-209-0-0
44984|data|DCD __imp_abort|8-209-0-0
44988|data|DCD __libc_csu_fini+1|69-32-0-0
44992|data|DCD __imp___cxa_finalize|148-208-0-0
44996|data|DCD strbuf|116-176-0-0
45000|data|DCD __stack_chk_guard|164-208-0-0
45004|data|DCD rows|20-176-0-0
45008|data|DCD width|116-208-0-0
45012|data|DCD stderr|188-208-0-0
45016|data|DCD theclocks|120-208-0-0
45020|data|DCD __imp___gmon_start__|12-209-0-0
45024|data|DCD clockpad|124-208-0-0
45028|data|DCD __libc_csu_init+1|5-32-0-0
45032|data|DCD main+1|249-13-0-0
45036|data|DCD clocks|128-208-0-0
45040|data|DCD height|132-208-0-0
45044|data|DCD _Jv_RegisterClasses|16-209-0-0
45048|data|DCD optarg|4-209-0-0
45052|data|DCD cols|12-176-0-0
53388|code|IMPORT __imp_calloc|0-0-0-0
53392|code|IMPORT __imp_raise|0-0-0-0
53396|code|IMPORT __imp___cxa_finalize, WEAK|0-0-0-0
53400|code|IMPORT __imp_strtol|0-0-0-0
53404|code|IMPORT __imp___isoc99_fscanf|0-0-0-0
53408|code|IMPORT __imp_fopen|0-0-0-0
53412|data|IMPORT __stack_chk_guard|0-0-0-0
53416|code|IMPORT __imp___memset_chk|0-0-0-0
53420|code|IMPORT __imp_time|0-0-0-0
53424|code|IMPORT __imp_sleep|0-0-0-0
53428|code|IMPORT __imp___stack_chk_fail|0-0-0-0
53432|code|IMPORT __imp_perror|0-0-0-0
53436|data|IMPORT stderr|0-0-0-0
53440|code|IMPORT __imp_fwrite|0-0-0-0
53444|code|IMPORT __imp_ioctl|0-0-0-0
53448|code|IMPORT __imp_strcpy|0-0-0-0
53452|code|IMPORT __imp_gethostname|0-0-0-0
53456|code|IMPORT __imp_puts|0-0-0-0
53460|code|IMPORT __imp___libc_start_main|0-0-0-0
53464|code|IMPORT __imp_strftime|0-0-0-0
53468|code|IMPORT __imp_localtime|0-0-0-0
53472|code|IMPORT __imp_exit|0-0-0-0
53476|code|IMPORT __imp_getopt|0-0-0-0
53480|code|IMPORT __imp_memset|0-0-0-0
53484|code|IMPORT __imp_putchar|0-0-0-0
53488|code|IMPORT __imp_strncpy|0-0-0-0
53492|code|IMPORT __imp___printf_chk|0-0-0-0
53496|code|IMPORT __imp___fprintf_chk|0-0-0-0
53500|code|IMPORT __imp_fclose|0-0-0-0
53504|code|IMPORT __imp_strrchr|0-0-0-0
53508|data|IMPORT optarg|0-0-0-0
53512|code|IMPORT __imp_abort|0-0-0-0
53516|code|IMPORT __imp___gmon_start__, WEAK|0-0-0-0
