address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|25-16-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x21F4; SHT file offset|244-33-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 9; Number of entries in PHT|9-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1B; Number of entries in SHT|27-0
65586|data|DCW 0x1A; SHT entry index for string table|26-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x1B4C; File offset|76-27-0-0
65596|data|DCD unk_11B4C; Virtual address|76-27-1-0
65600|data|DCD 0x11B4C; Physical address|76-27-1-0
65604|data|DCD 8; Size in file image|8-0-0-0
65608|data|DCD 8; Size in memory image|8-0-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x120; Size in file image|32-1-0-0
65640|data|DCD 0x120; Size in memory image|32-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x154; File offset|84-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|84-1-1-0
65664|data|DCD 0x10154; Physical address|84-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x1B58; Size in file image|88-27-0-0
65704|data|DCD 0x1B58; Size in memory image|88-27-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x1F04; File offset|4-31-0-0
65724|data|DCD off_21F04; Virtual address|4-31-2-0
65728|data|DCD 0x21F04; Physical address|4-31-2-0
65732|data|DCD 0x1C8; Size in file image|200-1-0-0
65736|data|DCD 0x1F4; Size in memory image|244-1-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x1F10; File offset|16-31-0-0
65756|data|DCD stru_21F10; Virtual address|16-31-2-0
65760|data|DCD 0x21F10; Physical address|16-31-2-0
65764|data|DCD 0xF0; Size in file image|240-0-0-0
65768|data|DCD 0xF0; Size in memory image|240-0-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x170; File offset|112-1-0-0
65788|data|DCD dword_10170; Virtual address|112-1-1-0
65792|data|DCD 0x10170; Physical address|112-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
65848|data|DCD 0x1F04; File offset|4-31-0-0
65852|data|DCD off_21F04; Virtual address|4-31-2-0
65856|data|DCD 0x21F04; Physical address|4-31-2-0
65860|data|DCD 0xFC; Size in file image|252-0-0-0
65864|data|DCD 0xFC; Size in memory image|252-0-0-0
65868|data|DCD 4; Flags|4-0-0-0
65872|data|DCD 1; Alignment|1-0-0-0
65876|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65901|data|DCB 0, 0, 0|0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x10; Desc Size|16-0-0-0
65912|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65936|data|DCD 4; Name Size|4-0-0-0
65940|data|DCD 0x14; Desc Size|20-0-0-0
65944|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65948|data|DCB "GNU",0; Name|71-78-85-0
65952|data|DCB 0x87, 0xA9, 0x81, 0xD6, 0x47, 0x7A, 0x7B, 0x46, 0x32; Desc|135-169-129-214-71-122-123-70-50-151-206-58-193-5-221-133-206-109-185-113
65972|data|DCD 0x25|37-0-0-0
65976|data|DCD 2|2-0-0-0
65980|data|DCD 0x10|16-0-0-0
65984|data|DCD 9|9-0-0-0
65988|data|DCD 0x824882, 0x820A4085, 0xEC822000, 0x201012, 0x3200080|130-72-130-0-133-64-10-130-0-32-130-236-18-16-32-0-128-0-32-3-42-73-39-80-132-12-0-0-32-18-2-0-146-4-130-1-130-65-194-32-6-10-193-78-64-0-196-33-0-0-0-32-0-64-128-0-32-130-1-24-0-32-16-0
66052|data|DCD 2, 0, 5, 6, 0, 9, 0xC, 0xD, 0xF, 0x10, 0x11, 0x13|2-0-0-0-0-0-0-0-5-0-0-0-6-0-0-0-0-0-0-0-9-0-0-0-12-0-0-0-13-0-0-0-15-0-0-0-16-0-0-0-17-0-0-0-19-0-0-0-22-0-0-0-24-0-0-0-26-0-0-0-29-0-0-0-30-0-0-0-0-0-0-0-34-0-0-0-37-0-0-0-38-0-0-0-0-0-0-0-39-0-0-0-40-0-0-0-42-0-0-0-44-0-0-0-0-0-0-0-0-0-0-0-47-0-0-0-50-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-51-0-0-0-0-0-0-0-0-0-0-0
66200|data|DCD 0x9E7650BC, 0xD39AD3C, 0x615D8AA1, 0xF663357, 0x7C998910|188-80-118-158-60-173-57-13-161-138-93-97-87-51-102-15-16-137-153-124-0-35-249-164-23-47-116-15-32-98-100-7-116-136-159-16-149-178-184-236-87-211-3-182-134-240-150-124-191-134-239-14-181-86-49-253-47-78-61-246-92-252-159-124-229-98-65-245-66-119-41-145-56-242-139-28-97-152-239-18-10-113-87-163-95-87-115-240-40-29-140-28-125-237-17-15-236-146-115-240-80-238-17-227-91-154-59-15-157-187-147-28-50-196-247-18-48-239-233-188-6-174-213-39-237-233-67-43-218-139-16-59-194-142-135-255-63-126-150-124-15-66-21-179-209-159-44-252-65-181-90-43-202-150-147-28-179-162-247-18-118-229-150-124-7-47-116-15-174-96-135-255-80-181-168-16-33-207-9-253-200-57-64-31-174-111-136-11-95-116-59-197-11-226-235-180-121-77-242-15
66400|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66416|data|Elf32_Sym <aGmonStart - byte_106A0, 0, 0, 0x20, 0, 0>; "__gmon_start__"|210-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66432|data|Elf32_Sym <aProgname - byte_106A0, program_invocation_short_name, 4, \; "__progname"|148-1-0-0-208-32-2-0-4-0-0-0-17-0-24-0
66448|data|Elf32_Sym <aMalloc - byte_106A0, 0, 0, 0x12, 0, 0>; "malloc"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66464|data|Elf32_Sym <aSetlocale - byte_106A0, 0, 0, 0x12, 0, 0>; "setlocale"|37-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66480|data|Elf32_Sym <aExecl - byte_106A0, 0, 0, 0x12, 0, 0>; "execl"|31-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66496|data|Elf32_Sym <aKill - byte_106A0, 0, 0, 0x12, 0, 0>; "kill"|121-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66512|data|Elf32_Sym <aErrnoLocation - byte_106A0, 0, 0, 0x12, 0, 0>; "__errno_location"|146-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66528|data|Elf32_Sym <aFputs - byte_106A0, 0, 0, 0x12, 0, 0>; "fputs"|197-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66544|data|Elf32_Sym <aStackChkGuard - byte_106A0, __stack_chk_guard, 4, 0x11, 0,\; "__stack_chk_guard"|192-1-0-0-216-32-2-0-4-0-0-0-17-0-24-0
66560|data|Elf32_Sym <aWarnx - byte_106A0, 0, 0, 0x12, 0, 0>; "warnx"|79-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66576|data|Elf32_Sym <aVasprintfChk - byte_106A0, 0, 0, 0x12, 0, 0>; "__vasprintf_chk"|66-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66592|data|Elf32_Sym <aWaitpid - byte_106A0, 0, 0, 0x12, 0, 0>; "waitpid"|17-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66608|data|Elf32_Sym <aFree - byte_106A0, 0, 0, 0x12, 0, 0>; "free"|143-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66624|data|Elf32_Sym <aExit - byte_106A0, 0, 0, 0x12, 0, 0>; "_exit"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66640|data|Elf32_Sym <aFerror - byte_106A0, 0, 0, 0x12, 0, 0>; "ferror"|121-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66656|data|Elf32_Sym <aLibcStartMain - byte_106A0, 0, 0, 0x12, 0, 0>; "__libc_start_main"|103-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66672|data|Elf32_Sym <aWarn - byte_106A0, 0, 0, 0x12, 0, 0>; "warn"|141-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66688|data|Elf32_Sym <aProgramInvocat - byte_106A0, \; "program_invocation_short_name"|36-1-0-0-208-32-2-0-4-0-0-0-33-0-24-0
66704|data|Elf32_Sym <aBindtextdomain+4 - byte_106A0, 0, 0, 0x12, 0, 0>; "textdomain"|92-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66720|data|Elf32_Sym <aStderr - byte_106A0, stderr, 4, 0x11, 0, 0x18>; "stderr"|231-0-0-0-232-32-2-0-4-0-0-0-17-0-24-0
66736|data|Elf32_Sym <aOpen64 - byte_106A0, 0, 0, 0x12, 0, 0>; "open64"|163-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66752|data|Elf32_Sym <aNanosleep - byte_106A0, 0, 0, 0x12, 0, 0>; "nanosleep"|64-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66768|data|Elf32_Sym <aGetegid - byte_106A0, 0, 0, 0x12, 0, 0>; "getegid"|238-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66784|data|Elf32_Sym <aStdout - byte_106A0, stdout, 4, 0x11, 0, 0x18>; "stdout"|184-0-0-0-236-32-2-0-4-0-0-0-17-0-24-0
66800|data|Elf32_Sym <aAbort - byte_106A0, 0, 0, 0x12, 0, 0>; "abort"|102-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66816|data|Elf32_Sym <aGeteuid - byte_106A0, 0, 0, 0x12, 0, 0>; "geteuid"|9-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66832|data|Elf32_Sym <aFprintfChk - byte_106A0, 0, 0, 0x12, 0, 0>; "__fprintf_chk"|170-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66848|data|Elf32_Sym <aFclose+1 - byte_106A0, 0, 0, 0x12, 0, 0>; "close"|204-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66864|data|Elf32_Sym <aStrlen - byte_106A0, 0, 0, 0x12, 0, 0>; "strlen"|126-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66880|data|Elf32_Sym <aOptind - byte_106A0, optind, 4, 0x11, 0, 0x18>; "optind"|47-0-0-0-224-32-2-0-4-0-0-0-17-0-24-0
66896|data|Elf32_Sym <aDcgettext - byte_106A0, 0, 0, 0x12, 0, 0>; "dcgettext"|54-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66912|data|Elf32_Sym <aGetoptLong - byte_106A0, 0, 0, 0x12, 0, 0>; "getopt_long"|246-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66928|data|Elf32_Sym <aCxaAtexit - byte_106A0, 0, 0, 0x12, 0, 0>; "__cxa_atexit"|159-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66944|data|Elf32_Sym <aUnshare - byte_106A0, 0, 0, 0x12, 0, 0>; "unshare"|133-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66960|data|Elf32_Sym <aGetpid - byte_106A0, 0, 0, 0x12, 0, 0>; "getpid"|114-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66976|data|Elf32_Sym <aExit+1 - byte_106A0, 0, 0, 0x12, 0, 0>; "exit"|109-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66992|data|Elf32_Sym <aFpending - byte_106A0, 0, 0, 0x12, 0, 0>; "__fpending"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67008|data|Elf32_Sym <aExecvp - byte_106A0, 0, 0, 0x12, 0, 0>; "execvp"|2-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67024|data|Elf32_Sym <aBasename - byte_106A0, 0, 0, 0x12, 0, 0>; "basename"|134-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67040|data|Elf32_Sym <aStrcpy - byte_106A0, 0, 0, 0x12, 0, 0>; "strcpy"|11-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67056|data|Elf32_Sym <aOptarg - byte_106A0, optarg, 4, 0x11, 0, 0x18>; "optarg"|224-0-0-0-240-32-2-0-4-0-0-0-17-0-24-0
67072|data|Elf32_Sym <aFork - byte_106A0, 0, 0, 0x12, 0, 0>; "fork"|74-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67088|data|Elf32_Sym <aFputc - byte_106A0, 0, 0, 0x12, 0, 0>; "fputc"|191-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67104|data|Elf32_Sym <aGetenv - byte_106A0, 0, 0, 0x12, 0, 0>; "getenv"|217-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67120|data|Elf32_Sym <aWrite - byte_106A0, 0, 0, 0x12, 0, 0>; "write"|128-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67136|data|Elf32_Sym <aFclose - byte_106A0, 0, 0, 0x12, 0, 0>; "fclose"|203-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67152|data|Elf32_Sym <aStackChkFail - byte_106A0, 0, 0, 0x12, 0, 0>; "__stack_chk_fail"|85-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67168|data|Elf32_Sym <aStderr+3 - byte_106A0, 0, 0, 0x12, 0, 0>; "err"|234-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67184|data|Elf32_Sym <aBindtextdomain - byte_106A0, 0, 0, 0x12, 0, 0>; "bindtextdomain"|88-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67200|data|Elf32_Sym <aPrintfChk - byte_106A0, 0, 0, 0x12, 0, 0>; "__printf_chk"|18-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67216|data|Elf32_Sym <aMount - byte_106A0, 0, 0, 0x12, 0, 0>; "mount"|82-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67232|data|DCB 0|0
67233|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
67243|data|DCB "strcpy",0|115-116-114-99-112-121-0
67250|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
67263|data|DCB "execl",0|101-120-101-99-108-0
67269|data|DCB "setlocale",0|115-101-116-108-111-99-97-108-101-0
67279|data|DCB "optind",0|111-112-116-105-110-100-0
67286|data|DCB "dcgettext",0|100-99-103-101-116-116-101-120-116-0
67296|data|DCB "nanosleep",0|110-97-110-111-115-108-101-101-112-0
67306|data|DCB "fork",0|102-111-114-107-0
67311|data|DCB "warnx",0|119-97-114-110-120-0
67317|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
67334|data|DCB "abort",0|97-98-111-114-116-0
67340|data|DCB "_exit",0|95-101-120-105-116-0
67346|data|DCB "getpid",0|103-101-116-112-105-100-0
67353|data|DCB "kill",0|107-105-108-108-0
67358|data|DCB "strlen",0|115-116-114-108-101-110-0
67365|data|DCB "unshare",0|117-110-115-104-97-114-101-0
67373|data|DCB "warn",0|119-97-114-110-0
67378|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
67395|data|DCB "open64",0|111-112-101-110-54-52-0
67402|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
67416|data|DCB "stdout",0|115-116-100-111-117-116-0
67423|data|DCB "fputc",0|102-112-117-116-99-0
67429|data|DCB "fputs",0|102-112-117-116-115-0
67435|data|DCB "fclose",0|102-99-108-111-115-101-0
67442|data|DCB "malloc",0|109-97-108-108-111-99-0
67449|data|DCB "getenv",0|103-101-116-101-110-118-0
67456|data|DCB "optarg",0|111-112-116-97-114-103-0
67463|data|DCB "stderr",0|115-116-100-101-114-114-0
67470|data|DCB "getegid",0|103-101-116-101-103-105-100-0
67478|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
67490|data|DCB "execvp",0|101-120-101-99-118-112-0
67497|data|DCB "geteuid",0|103-101-116-101-117-105-100-0
67505|data|DCB "waitpid",0|119-97-105-116-112-105-100-0
67513|data|DCB "__fpending",0|95-95-102-112-101-110-100-105-110-103-0
67524|data|DCB "program_invocation_short_name",0|112-114-111-103-114-97-109-95-105-110-118-111-99-97-116-105-111-110-95-115-104-111-114-116-95-110-97-109-101-0
67554|data|DCB "__vasprintf_chk",0|95-95-118-97-115-112-114-105-110-116-102-95-99-104-107-0
67570|data|DCB "mount",0|109-111-117-110-116-0
67576|data|DCB "bindtextdomain",0|98-105-110-100-116-101-120-116-100-111-109-97-105-110-0
67591|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
67609|data|DCB "ferror",0|102-101-114-114-111-114-0
67616|data|DCB "write",0|119-114-105-116-101-0
67622|data|DCB "basename",0|98-97-115-101-110-97-109-101-0
67631|data|DCB "free",0|102-114-101-101-0
67636|data|DCB "__progname",0|95-95-112-114-111-103-110-97-109-101-0
67647|data|DCB "__cxa_atexit",0|95-95-99-120-97-95-97-116-101-120-105-116-0
67660|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
67680|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
67698|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
67713|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
67723|data|DCB "GLIBC_2.8",0|71-76-73-66-67-95-50-46-56-0
67733|data|DCB 0|0
67734|data|DCW 0|0-0
67736|data|DCW 0; local  symbol: __gmon_start__|0-0
67738|data|DCW 2; __progname@@GLIBC_2.4|2-0
67740|data|DCW 2; malloc@@GLIBC_2.4|2-0
67742|data|DCW 2; setlocale@@GLIBC_2.4|2-0
67744|data|DCW 2; execl@@GLIBC_2.4|2-0
67746|data|DCW 2; kill@@GLIBC_2.4|2-0
67748|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
67750|data|DCW 2; fputs@@GLIBC_2.4|2-0
67752|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
67754|data|DCW 2; warnx@@GLIBC_2.4|2-0
67756|data|DCW 4; __vasprintf_chk@@GLIBC_2.8|4-0
67758|data|DCW 2; waitpid@@GLIBC_2.4|2-0
67760|data|DCW 2; free@@GLIBC_2.4|2-0
67762|data|DCW 2; _exit@@GLIBC_2.4|2-0
67764|data|DCW 2; ferror@@GLIBC_2.4|2-0
67766|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
67768|data|DCW 2; warn@@GLIBC_2.4|2-0
67770|data|DCW 2; program_invocation_short_name@@GLIBC_2.4|2-0
67772|data|DCW 2; textdomain@@GLIBC_2.4|2-0
67774|data|DCW 2; stderr@@GLIBC_2.4|2-0
67776|data|DCW 2; open64@@GLIBC_2.4|2-0
67778|data|DCW 2; nanosleep@@GLIBC_2.4|2-0
67780|data|DCW 2; getegid@@GLIBC_2.4|2-0
67782|data|DCW 2; stdout@@GLIBC_2.4|2-0
67784|data|DCW 2; abort@@GLIBC_2.4|2-0
67786|data|DCW 2; geteuid@@GLIBC_2.4|2-0
67788|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
67790|data|DCW 2; close@@GLIBC_2.4|2-0
67792|data|DCW 2; strlen@@GLIBC_2.4|2-0
67794|data|DCW 2; optind@@GLIBC_2.4|2-0
67796|data|DCW 2; dcgettext@@GLIBC_2.4|2-0
67798|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
67800|data|DCW 2; __cxa_atexit@@GLIBC_2.4|2-0
67802|data|DCW 2; unshare@@GLIBC_2.4|2-0
67804|data|DCW 2; getpid@@GLIBC_2.4|2-0
67806|data|DCW 2; exit@@GLIBC_2.4|2-0
67808|data|DCW 2; __fpending@@GLIBC_2.4|2-0
67810|data|DCW 2; execvp@@GLIBC_2.4|2-0
67812|data|DCW 2; basename@@GLIBC_2.4|2-0
67814|data|DCW 2; strcpy@@GLIBC_2.4|2-0
67816|data|DCW 2; optarg@@GLIBC_2.4|2-0
67818|data|DCW 2; fork@@GLIBC_2.4|2-0
67820|data|DCW 2; fputc@@GLIBC_2.4|2-0
67822|data|DCW 2; getenv@@GLIBC_2.4|2-0
67824|data|DCW 2; write@@GLIBC_2.4|2-0
67826|data|DCW 2; fclose@@GLIBC_2.4|2-0
67828|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
67830|data|DCW 2; err@@GLIBC_2.4|2-0
67832|data|DCW 2; bindtextdomain@@GLIBC_2.4|2-0
67834|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
67836|data|DCW 2; mount@@GLIBC_2.4|2-0
67838|data|DCW 0|0-0
67840|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_106A0, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-172-1-0-0-16-0-0-0-32-0-0-0
67856|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_106A0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-225-1-0-0-0-0-0-0
67872|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_106A0, 0x10, 0>; "libc.so.6"|1-0-2-0-1-0-0-0-16-0-0-0-0-0-0-0
67888|data|Elf32_Vernaux <0xD696918, 0, 4, aGlibc28 - byte_106A0, 0x10>; "GLIBC_2.8"|24-105-105-13-0-0-4-0-235-1-0-0-16-0-0-0
67904|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_106A0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-225-1-0-0-0-0-0-0
67920|data|Elf32_Rel <0x220BC, 0x115>; R_ARM_GLOB_DAT __gmon_start__|188-32-2-0-21-1-0-0
67928|data|Elf32_Rel <0x220D0, 0x214>; R_ARM_COPY __progname|208-32-2-0-20-2-0-0
67936|data|Elf32_Rel <0x220D8, 0x914>; R_ARM_COPY __stack_chk_guard|216-32-2-0-20-9-0-0
67944|data|Elf32_Rel <0x220E0, 0x1E14>; R_ARM_COPY optind|224-32-2-0-20-30-0-0
67952|data|Elf32_Rel <0x220E8, 0x1414>; R_ARM_COPY stderr|232-32-2-0-20-20-0-0
67960|data|Elf32_Rel <0x220EC, 0x1814>; R_ARM_COPY stdout|236-32-2-0-20-24-0-0
67968|data|Elf32_Rel <0x220F0, 0x2914>; R_ARM_COPY optarg|240-32-2-0-20-41-0-0
67976|data|Elf32_Rel <0x2200C, 0x2716>; R_ARM_JUMP_SLOT basename|12-32-2-0-22-39-0-0
67984|data|Elf32_Rel <0x22010, 0xD16>; R_ARM_JUMP_SLOT free|16-32-2-0-22-13-0-0
67992|data|Elf32_Rel <0x22014, 0x2216>; R_ARM_JUMP_SLOT unshare|20-32-2-0-22-34-0-0
68000|data|Elf32_Rel <0x22018, 0x1616>; R_ARM_JUMP_SLOT nanosleep|24-32-2-0-22-22-0-0
68008|data|Elf32_Rel <0x2201C, 0xF16>; R_ARM_JUMP_SLOT ferror|28-32-2-0-22-15-0-0
68016|data|Elf32_Rel <0x22020, 0xE16>; R_ARM_JUMP_SLOT _exit|32-32-2-0-22-14-0-0
68024|data|Elf32_Rel <0x22024, 0x2616>; R_ARM_JUMP_SLOT execvp|36-32-2-0-22-38-0-0
68032|data|Elf32_Rel <0x22028, 0x1F16>; R_ARM_JUMP_SLOT dcgettext|40-32-2-0-22-31-0-0
68040|data|Elf32_Rel <0x2202C, 0x2F16>; R_ARM_JUMP_SLOT __stack_chk_fail|44-32-2-0-22-47-0-0
68048|data|Elf32_Rel <0x22030, 0x1316>; R_ARM_JUMP_SLOT textdomain|48-32-2-0-22-19-0-0
68056|data|Elf32_Rel <0x22034, 0x3016>; R_ARM_JUMP_SLOT err|52-32-2-0-22-48-0-0
68064|data|Elf32_Rel <0x22038, 0x1A16>; R_ARM_JUMP_SLOT geteuid|56-32-2-0-22-26-0-0
68072|data|Elf32_Rel <0x2203C, 0x1716>; R_ARM_JUMP_SLOT getegid|60-32-2-0-22-23-0-0
68080|data|Elf32_Rel <0x22040, 0xC16>; R_ARM_JUMP_SLOT waitpid|64-32-2-0-22-12-0-0
68088|data|Elf32_Rel <0x22044, 0x2816>; R_ARM_JUMP_SLOT strcpy|68-32-2-0-22-40-0-0
68096|data|Elf32_Rel <0x22048, 0x2516>; R_ARM_JUMP_SLOT __fpending|72-32-2-0-22-37-0-0
68104|data|Elf32_Rel <0x2204C, 0x1516>; R_ARM_JUMP_SLOT open64|76-32-2-0-22-21-0-0
68112|data|Elf32_Rel <0x22050, 0x2C16>; R_ARM_JUMP_SLOT getenv|80-32-2-0-22-44-0-0
68120|data|Elf32_Rel <0x22054, 0x316>; R_ARM_JUMP_SLOT malloc|84-32-2-0-22-3-0-0
68128|data|Elf32_Rel <0x22058, 0x1016>; R_ARM_JUMP_SLOT __libc_start_main|88-32-2-0-22-16-0-0
68136|data|Elf32_Rel <0x2205C, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|92-32-2-0-22-1-0-0
68144|data|Elf32_Rel <0x22060, 0x2016>; R_ARM_JUMP_SLOT getopt_long|96-32-2-0-22-32-0-0
68152|data|Elf32_Rel <0x22064, 0x616>; R_ARM_JUMP_SLOT kill|100-32-2-0-22-6-0-0
68160|data|Elf32_Rel <0x22068, 0x2316>; R_ARM_JUMP_SLOT getpid|104-32-2-0-22-35-0-0
68168|data|Elf32_Rel <0x2206C, 0x2416>; R_ARM_JUMP_SLOT exit|108-32-2-0-22-36-0-0
68176|data|Elf32_Rel <0x22070, 0x1D16>; R_ARM_JUMP_SLOT strlen|112-32-2-0-22-29-0-0
68184|data|Elf32_Rel <0x22074, 0xA16>; R_ARM_JUMP_SLOT warnx|116-32-2-0-22-10-0-0
68192|data|Elf32_Rel <0x22078, 0x716>; R_ARM_JUMP_SLOT __errno_location|120-32-2-0-22-7-0-0
68200|data|Elf32_Rel <0x2207C, 0x2116>; R_ARM_JUMP_SLOT __cxa_atexit|124-32-2-0-22-33-0-0
68208|data|Elf32_Rel <0x22080, 0xB16>; R_ARM_JUMP_SLOT __vasprintf_chk|128-32-2-0-22-11-0-0
68216|data|Elf32_Rel <0x22084, 0x3216>; R_ARM_JUMP_SLOT __printf_chk|132-32-2-0-22-50-0-0
68224|data|Elf32_Rel <0x22088, 0x2D16>; R_ARM_JUMP_SLOT write|136-32-2-0-22-45-0-0
68232|data|Elf32_Rel <0x2208C, 0x1B16>; R_ARM_JUMP_SLOT __fprintf_chk|140-32-2-0-22-27-0-0
68240|data|Elf32_Rel <0x22090, 0x2E16>; R_ARM_JUMP_SLOT fclose|144-32-2-0-22-46-0-0
68248|data|Elf32_Rel <0x22094, 0x416>; R_ARM_JUMP_SLOT setlocale|148-32-2-0-22-4-0-0
68256|data|Elf32_Rel <0x22098, 0x2A16>; R_ARM_JUMP_SLOT fork|152-32-2-0-22-42-0-0
68264|data|Elf32_Rel <0x2209C, 0x516>; R_ARM_JUMP_SLOT execl|156-32-2-0-22-5-0-0
68272|data|Elf32_Rel <0x220A0, 0x1116>; R_ARM_JUMP_SLOT warn|160-32-2-0-22-17-0-0
68280|data|Elf32_Rel <0x220A4, 0x2B16>; R_ARM_JUMP_SLOT fputc|164-32-2-0-22-43-0-0
68288|data|Elf32_Rel <0x220A8, 0x3116>; R_ARM_JUMP_SLOT bindtextdomain|168-32-2-0-22-49-0-0
68296|data|Elf32_Rel <0x220AC, 0x816>; R_ARM_JUMP_SLOT fputs|172-32-2-0-22-8-0-0
68304|data|Elf32_Rel <0x220B0, 0x1916>; R_ARM_JUMP_SLOT abort|176-32-2-0-22-25-0-0
68312|data|Elf32_Rel <0x220B4, 0x1C16>; R_ARM_JUMP_SLOT close|180-32-2-0-22-28-0-0
68320|data|Elf32_Rel <0x220B8, 0x3316>; R_ARM_JUMP_SLOT mount|184-32-2-0-22-51-0-0
68328|code|PUSH            {R3,LR}|8-64-45-233
68332|code|BL              sub_11048|85-1-0-235
68336|code|POP             {R3,PC}|8-128-189-232
68340|code|PUSH            {LR}|4-224-45-229
68344|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x10B04)|4-224-159-229
68348|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
68352|code|LDR             PC, [LR,#8]!|8-240-190-229
68356|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10B04|252-20-1-0
68360|code|ADR             R12, 0x10B10|0-198-143-226
68364|code|ADD             R12, R12, #0x11000|17-202-140-226
68368|code|LDR             PC, [R12,#(basename_ptr - 0x21B10)]!; __imp_basename|252-244-188-229
68372|code|ADR             R12, 0x10B1C|0-198-143-226
68376|code|ADD             R12, R12, #0x11000|17-202-140-226
68380|code|LDR             PC, [R12,#(free_ptr - 0x21B1C)]!; __imp_free|244-244-188-229
68384|code|ADR             R12, 0x10B28|0-198-143-226
68388|code|ADD             R12, R12, #0x11000|17-202-140-226
68392|code|LDR             PC, [R12,#(unshare_ptr - 0x21B28)]!; __imp_unshare|236-244-188-229
68396|code|ADR             R12, 0x10B34|0-198-143-226
68400|code|ADD             R12, R12, #0x11000|17-202-140-226
68404|code|LDR             PC, [R12,#(nanosleep_ptr - 0x21B34)]!; __imp_nanosleep|228-244-188-229
68408|code|ADR             R12, 0x10B40|0-198-143-226
68412|code|ADD             R12, R12, #0x11000|17-202-140-226
68416|code|LDR             PC, [R12,#(ferror_ptr - 0x21B40)]!; __imp_ferror|220-244-188-229
68420|code|ADR             R12, 0x10B4C|0-198-143-226
68424|code|ADD             R12, R12, #0x11000|17-202-140-226
68428|code|LDR             PC, [R12,#(_exit_ptr - 0x21B4C)]!; __imp__exit|212-244-188-229
68432|code|ADR             R12, 0x10B58|0-198-143-226
68436|code|ADD             R12, R12, #0x11000|17-202-140-226
68440|code|LDR             PC, [R12,#(execvp_ptr - 0x21B58)]!; __imp_execvp|204-244-188-229
68444|code|ADR             R12, 0x10B64|0-198-143-226
68448|code|ADD             R12, R12, #0x11000|17-202-140-226
68452|code|LDR             PC, [R12,#(dcgettext_ptr - 0x21B64)]!; __imp_dcgettext|196-244-188-229
68456|code|ADR             R12, 0x10B70|0-198-143-226
68460|code|ADD             R12, R12, #0x11000|17-202-140-226
68464|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x21B70)]!; __imp___stack_chk_fail|188-244-188-229
68468|code|ADR             R12, 0x10B7C|0-198-143-226
68472|code|ADD             R12, R12, #0x11000|17-202-140-226
68476|code|LDR             PC, [R12,#(textdomain_ptr - 0x21B7C)]!; __imp_textdomain|180-244-188-229
68480|code|ADR             R12, 0x10B88|0-198-143-226
68484|code|ADD             R12, R12, #0x11000|17-202-140-226
68488|code|LDR             PC, [R12,#(err_ptr - 0x21B88)]!; __imp_err|172-244-188-229
68492|code|ADR             R12, 0x10B94|0-198-143-226
68496|code|ADD             R12, R12, #0x11000|17-202-140-226
68500|code|LDR             PC, [R12,#(geteuid_ptr - 0x21B94)]!; __imp_geteuid|164-244-188-229
68504|code|ADR             R12, 0x10BA0|0-198-143-226
68508|code|ADD             R12, R12, #0x11000|17-202-140-226
68512|code|LDR             PC, [R12,#(getegid_ptr - 0x21BA0)]!; __imp_getegid|156-244-188-229
68516|code|ADR             R12, 0x10BAC|0-198-143-226
68520|code|ADD             R12, R12, #0x11000|17-202-140-226
68524|code|LDR             PC, [R12,#(waitpid_ptr - 0x21BAC)]!; __imp_waitpid|148-244-188-229
68528|code|ADR             R12, 0x10BB8|0-198-143-226
68532|code|ADD             R12, R12, #0x11000|17-202-140-226
68536|code|LDR             PC, [R12,#(strcpy_ptr - 0x21BB8)]!; __imp_strcpy|140-244-188-229
68540|code|ADR             R12, 0x10BC4|0-198-143-226
68544|code|ADD             R12, R12, #0x11000|17-202-140-226
68548|code|LDR             PC, [R12,#(__fpending_ptr - 0x21BC4)]!; __imp___fpending|132-244-188-229
68552|code|ADR             R12, 0x10BD0|0-198-143-226
68556|code|ADD             R12, R12, #0x11000|17-202-140-226
68560|code|LDR             PC, [R12,#(open64_ptr - 0x21BD0)]!; __imp_open64|124-244-188-229
68564|code|ADR             R12, 0x10BDC|0-198-143-226
68568|code|ADD             R12, R12, #0x11000|17-202-140-226
68572|code|LDR             PC, [R12,#(getenv_ptr - 0x21BDC)]!; __imp_getenv|116-244-188-229
68576|code|ADR             R12, 0x10BE8|0-198-143-226
68580|code|ADD             R12, R12, #0x11000|17-202-140-226
68584|code|LDR             PC, [R12,#(malloc_ptr - 0x21BE8)]!; __imp_malloc|108-244-188-229
68588|code|ADR             R12, 0x10BF4|0-198-143-226
68592|code|ADD             R12, R12, #0x11000|17-202-140-226
68596|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x21BF4)]!; __imp___libc_start_main|100-244-188-229
68600|code|ADR             R12, 0x10C00|0-198-143-226
68604|code|ADD             R12, R12, #0x11000|17-202-140-226
68608|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x21C00)]!; __imp___gmon_start__|92-244-188-229
68612|code|ADR             R12, 0x10C0C|0-198-143-226
68616|code|ADD             R12, R12, #0x11000|17-202-140-226
68620|code|LDR             PC, [R12,#(getopt_long_ptr - 0x21C0C)]!; __imp_getopt_long|84-244-188-229
68624|code|ADR             R12, 0x10C18|0-198-143-226
68628|code|ADD             R12, R12, #0x11000|17-202-140-226
68632|code|LDR             PC, [R12,#(kill_ptr - 0x21C18)]!; __imp_kill|76-244-188-229
68636|code|ADR             R12, 0x10C24|0-198-143-226
68640|code|ADD             R12, R12, #0x11000|17-202-140-226
68644|code|LDR             PC, [R12,#(getpid_ptr - 0x21C24)]!; __imp_getpid|68-244-188-229
68648|code|ADR             R12, 0x10C30|0-198-143-226
68652|code|ADD             R12, R12, #0x11000|17-202-140-226
68656|code|LDR             PC, [R12,#(exit_ptr - 0x21C30)]!; __imp_exit|60-244-188-229
68660|code|ADR             R12, 0x10C3C|0-198-143-226
68664|code|ADD             R12, R12, #0x11000|17-202-140-226
68668|code|LDR             PC, [R12,#(strlen_ptr - 0x21C3C)]!; __imp_strlen|52-244-188-229
68672|code|ADR             R12, 0x10C48|0-198-143-226
68676|code|ADD             R12, R12, #0x11000|17-202-140-226
68680|code|LDR             PC, [R12,#(warnx_ptr - 0x21C48)]!; __imp_warnx|44-244-188-229
68684|code|ADR             R12, 0x10C54|0-198-143-226
68688|code|ADD             R12, R12, #0x11000|17-202-140-226
68692|code|LDR             PC, [R12,#(__errno_location_ptr - 0x21C54)]!; __imp___errno_location|36-244-188-229
68696|code|BX              PC|120-71
68698|data|ALIGN 4|192-70
68700|code|ADR             R12, 0x10C64|0-198-143-226
68704|code|ADD             R12, R12, #0x11000|17-202-140-226
68708|code|LDR             PC, [R12,#(__cxa_atexit_ptr - 0x21C64)]!; __imp___cxa_atexit|24-244-188-229
68712|code|ADR             R12, 0x10C70|0-198-143-226
68716|code|ADD             R12, R12, #0x11000|17-202-140-226
68720|code|LDR             PC, [R12,#(__vasprintf_chk_ptr - 0x21C70)]!; __imp___vasprintf_chk|16-244-188-229
68736|code|ADR             R12, 0x10C88|0-198-143-226
68740|code|ADD             R12, R12, #0x11000|17-202-140-226
68744|code|LDR             PC, [R12,#(write_ptr - 0x21C88)]!; __imp_write|0-244-188-229
68748|code|ADR             R12, 0x10C94|0-198-143-226
68752|code|ADD             R12, R12, #0x11000|17-202-140-226
68756|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x21C94)]!; __imp___fprintf_chk|248-243-188-229
68760|code|ADR             R12, 0x10CA0|0-198-143-226
68764|code|ADD             R12, R12, #0x11000|17-202-140-226
68768|code|LDR             PC, [R12,#(fclose_ptr - 0x21CA0)]!; __imp_fclose|240-243-188-229
68796|code|ADR             R12, 0x10CC4|0-198-143-226
68800|code|ADD             R12, R12, #0x11000|17-202-140-226
68804|code|LDR             PC, [R12,#(execl_ptr - 0x21CC4)]!; __imp_execl|216-243-188-229
68808|code|ADR             R12, 0x10CD0|0-198-143-226
68812|code|ADD             R12, R12, #0x11000|17-202-140-226
68816|code|LDR             PC, [R12,#(warn_ptr - 0x21CD0)]!; __imp_warn|208-243-188-229
68820|code|ADR             R12, 0x10CDC|0-198-143-226
68824|code|ADD             R12, R12, #0x11000|17-202-140-226
68828|code|LDR             PC, [R12,#(fputc_ptr - 0x21CDC)]!; __imp_fputc|200-243-188-229
68844|code|ADR             R12, 0x10CF4|0-198-143-226
68848|code|ADD             R12, R12, #0x11000|17-202-140-226
68852|code|LDR             PC, [R12,#(fputs_ptr - 0x21CF4)]!; __imp_fputs|184-243-188-229
68856|code|ADR             R12, 0x10D00|0-198-143-226
68860|code|ADD             R12, R12, #0x11000|17-202-140-226
68864|code|LDR             PC, [R12,#(abort_ptr - 0x21D00)]!; __imp_abort|176-243-188-229
68868|code|ADR             R12, 0x10D0C|0-198-143-226
68872|code|ADD             R12, R12, #0x11000|17-202-140-226
68876|code|LDR             PC, [R12,#(close_ptr - 0x21D0C)]!; __imp_close|168-243-188-229
68880|code|ADR             R12, 0x10D18|0-198-143-226
68884|code|ADD             R12, R12, #0x11000|17-202-140-226
68888|code|LDR             PC, [R12,#(mount_ptr - 0x21D18)]!; __imp_mount|160-243-188-229
68892|code|SVCMI           0xF0E92D|45-233-240-79
68896|code|LDMIBEQ         R8, {R1,R6,R9,R12-PC}^|66-242-216-9
68900|code|STMDBEQ         R2, {R6,R7,R9,R12-PC}|192-242-2-9
68904|data|DCD 0xF8D9B089, 0x460F3000, 0x46802600, 0xF2429603, 0x93070AF0|137-176-217-248-0-48-15-70-0-38-128-70-3-150-66-242-240-10-7-147-255-247-38-239-179-70-53-70-192-242-2-10-4-144-255-247-38-239-65-242-48-113-192-242-1-1-5-144-6-32-255-247-164-239-65-246-192-16-65-246-204-17-192-242-1-0-192-242-1-1-255-247-184-239-65-246-192-16-192-242-1-0-255-247-252-238-65-242-245-48-192-242-1-0-0-240-3-252-65-246-0-34-65-242-188-83-57-70-192-242-1-2-192-242-1-3-0-36-64-70-0-148-255-247-48-239-65-28-101-208-85-56-43-40-95-216-223-232-0-240-56-25-94-94-94-94-94-94-94-94-94-94-94-94-94-94-94-22-94-91-88-94-94-94-85-82-94-79-94-74-94-94-71-94-94-94-94-94-94-94-94-94-94-59-79-240-1-11-209-231-65-246-224-17-5-34-192-242-1-1-0-32-255-247-180-238-66-242-208-2-65-246-236-19-192-242-2-2-18-104-192-242-1-3-1-70-1-32-255-247-50-239-0-32-7-154-217-248-0-48-154-66-64-240-214-128-9-176-189-232-240-143-69-240-128-85-175-231-218-248-0-96-65-246-184-19-192-242-1-3-69-244-0-53-0-46-8-191-30-70-163-231-69-240-128-101-160-231-1-35-69-240-128-85-3-147-155-231-69-240-0-85-152-231-69-240-128-69-149-231-69-244-0-53-146-231-69-240-0-101-143-231-0-32-0-240-68-249-1-32-0-240-65-249-40-70-255-247-82-238-1-48-0-240-172-128-187-241-0-15-108-209-3-155-0-43-67-209-38-179-65-246-148-32-0-34-79-244-136-35-0-146-192-242-1-0-49-70-255-247-54-239-3-70-80-185-65-246-172-32-0-147-192-242-1-0-49-70-2-70-14-35-255-247-42-239-96-177-65-246-156-33-5-34-192-242-1-1-0-32-255-247-70-238-50-70-1-70-1-32-255-247-84-238-66-242-224-4-192-242-2-4-33-104-136-69-20-221-87-248-33-0-7-235-129-1-255-247-46-238-65-246-180-33-192-242-1-1-5-34-0-32-255-247-44-238-35-104-87-248-35-32-1-70-1-32-255-247-56-238-0-240-219-250-65-246-76-32-1-33-192-242-1-0-255-247-82-238-4-30-47-219-65-246-100-33-4-34-192-242-1-1-0-240-211-249-0-40-85-209-32-70-255-247-226-238-65-246-108-32-4-153-192-242-1-0-0-240-15-250-65-246-128-32-5-153-192-242-1-0-0-240-8-250-0-46-151-209-187-231-255-247-166-238-66-28-35-208-0-40-140-208-6-169-34-70-255-247-24-238-1-48-41-208-6-152-16-240-127-3-55-209-192-243-7-32-68-231-255-247-96-238-3-104-2-43-214-208-65-246-140-17-0-32-192-242-1-1-5-34-255-247-222-237-65-246-76-34-192-242-1-2-1-70-1-32-255-247-232-237-65-246-28-33-32-70-192-242-1-1-5-34-255-247-206-237-1-70-1-32-255-247-220-237-255-247-206-237-65-246-40-33-32-70-192-242-1-1-240-231-65-246-12-33-32-70-192-242-1-1-234-231-65-246-156-17-0-32-192-242-1-1-212-231-1-51-67-243-70-3-0-43-6-221-255-247-14-238-6-153-1-240-127-1-255-247-4-238-65-246-56-33-0-32-192-242-1-1-210-231-0-191
69656|code|MOV.W           R11, #0|79-240-0-11
69660|code|MOV.W           LR, #0|79-240-0-14
69664|code|POP             {R1}; argc|2-188
69666|code|MOV             R2, SP; ubp_av|106-70
69668|code|PUSH            {R2}; stack_end|4-180
69670|code|PUSH            {R0}; rtld_fini|1-180
69672|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
69676|code|PUSH.W          {R12}; fini|77-248-4-205
69680|code|LDR             R0, =(loc_10D1C+1); main|3-72
69682|code|LDR             R3, =(sub_1154C+1); init|4-75
69684|code|BLX             __libc_start_main|255-247-218-237
69688|code|BLX             abort|255-247-94-238
69692|data|DCD nullsub_1+1|141-21-1-0
69696|data|DCD loc_10D1C+1|29-13-1-0
69700|data|DCD sub_1154C+1|77-21-1-0
69704|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x11058)|20-48-159-229
69708|code|LDR             R2, =(__gmon_start___ptr_0 - 0x22000)|20-32-159-229
69712|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
69716|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
69720|code|CMP             R2, #0|0-0-82-227
69724|code|BXEQ            LR|30-255-47-1
69728|code|B               __gmon_start__|228-254-255-234
69732|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11058|168-15-1-0
69736|data|DCD __gmon_start___ptr_0 - 0x22000|188-0-0-0
69740|code|LDR             R3, =unk_220CF|7-75
69742|code|MOV             R0, #0x220CC|66-242-204-0-192-242-2-0
69750|code|SUBS            R3, R3, R0|27-26
69752|code|CMP             R3, #6|6-43
69754|code|BLS             locret_11088|5-217
69756|code|MOV             R3, #0|64-242-0-3-192-242-0-3
69764|code|CBZ             R3, locret_11088|3-177
69766|code|BX              R3|24-71
69768|code|BX              LR|112-71
69770|data|ALIGN 4|0-191
69772|data|DCD unk_220CF|207-32-2-0
69776|code|MOVW            R3, #0x20CC|66-242-204-3
69780|code|MOVW            R0, #0x20CC|66-242-204-0
69784|code|MOVT.W          R3, #2|192-242-2-3
69788|code|MOVT.W          R0, #2|192-242-2-0
69792|code|SUBS            R1, R3, R0|25-26
69794|code|ASRS            R1, R1, #2|137-16
69796|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
69800|code|ASRS            R1, R1, #1|73-16
69802|code|BEQ             locret_110B8|5-208
69804|code|MOV             R3, #0|64-242-0-3-192-242-0-3
69812|code|CBZ             R3, locret_110B8|3-177
69814|code|BX              R3|24-71
69816|code|BX              LR|112-71
69818|data|ALIGN 4|0-191
69820|code|PUSH            {R4,LR}|16-181
69822|code|MOV             R4, #0x220F4|66-242-244-4-192-242-2-4
69830|code|LDRB            R3, [R4]|35-120
69832|code|CBNZ            R3, locret_110D2|27-185
69834|code|BL              sub_1106C|255-247-207-255
69838|code|MOVS            R3, #1|1-35
69840|code|STRB            R3, [R4]|35-112
69842|code|POP             {R4,PC}|16-189
69844|code|MOVW            R0, #0x1F0C|65-246-12-112
69848|code|PUSH            {R3,LR}|8-181
69850|code|MOVT.W          R0, #2|192-242-2-0
69854|code|LDR             R3, [R0]|3-104
69856|code|CBNZ            R3, loc_110E8|19-185
69858|code|POP.W           {R3,LR}|189-232-8-64
69862|code|B               sub_11090|211-231
69864|code|MOV             R3, #0|64-242-0-3-192-242-0-3
69872|code|CMP             R3, #0|0-43
69874|code|BEQ             loc_110E2|246-208
69876|code|BLX             R3|152-71
69878|code|B               loc_110E2|244-231
69880|code|PUSH            {R3-R5,LR}|56-181
69882|code|MOV             R5, R0|5-70
69884|code|CMP             R0, #0|0-40
69886|code|BNE.W           loc_1127E|64-240-190-128
69890|code|MOV             R3, #0x220EC|66-242-236-3-192-242-2-3
69898|code|LDR             R4, [R3]|28-104
69900|code|MOVW            R1, #0x167C|65-242-124-97
69904|code|MOVS            R2, #5|5-34
69906|code|MOVT.W          R1, #1|192-242-1-1
69910|code|MOVS            R0, #0|0-32
69912|code|BLX             dcgettext|255-247-32-237
69916|code|MOV             R1, R4|33-70
69918|code|BLX             fputs|255-247-230-237
69922|code|MOV             R1, #0x11688|65-242-136-97-192-242-1-1
69930|code|MOVS            R2, #5|5-34
69932|code|MOVS            R0, #0|0-32
69934|code|BLX             dcgettext|255-247-22-237
69938|code|MOV             R3, #0x220D0|66-242-208-3-192-242-2-3
69946|code|MOVS            R1, #1|1-33
69948|code|LDR             R3, [R3]|27-104
69950|code|MOV             R2, R0|2-70
69952|code|MOV             R0, R4|32-70
69954|code|BLX             __fprintf_chk|255-247-164-237
69958|code|MOVW            R1, #0x16AC|65-242-172-97
69962|code|MOVS            R2, #5|5-34
69964|code|MOVT.W          R1, #1|192-242-1-1
69968|code|MOVS            R0, #0|0-32
69970|code|BLX             dcgettext|255-247-4-237
69974|code|MOV             R1, R4|33-70
69976|code|BLX             fputs|255-247-200-237
69980|code|MOVW            R1, #0x16B8|65-242-184-97
69984|code|MOVS            R2, #5|5-34
69986|code|MOVT.W          R1, #1|192-242-1-1
69990|code|MOVS            R0, #0|0-32
69992|code|BLX             dcgettext|255-247-248-236
69996|code|MOV             R1, R4|33-70
69998|code|BLX             fputs|255-247-190-237
70002|code|MOVW            R1, #0x16F0|65-242-240-97
70006|code|MOVS            R2, #5|5-34
70008|code|MOVT.W          R1, #1|192-242-1-1
70012|code|MOVS            R0, #0|0-32
70014|code|BLX             dcgettext|255-247-238-236
70018|code|MOV             R1, R4|33-70
70020|code|BLX             fputs|255-247-178-237
70024|code|MOVW            R1, #0x1734|65-242-52-113
70028|code|MOVS            R2, #5|5-34
70030|code|MOVT.W          R1, #1|192-242-1-1
70034|code|MOVS            R0, #0|0-32
70036|code|BLX             dcgettext|255-247-226-236
70040|code|MOV             R1, R4|33-70
70042|code|BLX             fputs|255-247-168-237
70046|code|MOVW            R1, #0x1770|65-242-112-113
70050|code|MOVS            R2, #5|5-34
70052|code|MOVT.W          R1, #1|192-242-1-1
70056|code|MOVS            R0, #0|0-32
70058|code|BLX             dcgettext|255-247-216-236
70062|code|MOV             R1, R4|33-70
70064|code|BLX             fputs|255-247-156-237
70068|code|MOVW            R1, #0x17A8|65-242-168-113
70072|code|MOVS            R2, #5|5-34
70074|code|MOVT.W          R1, #1|192-242-1-1
70078|code|MOVS            R0, #0|0-32
70080|code|BLX             dcgettext|255-247-204-236
70084|code|MOV             R1, R4|33-70
70086|code|BLX             fputs|255-247-146-237
70090|code|MOVW            R1, #0x17DC|65-242-220-113
70094|code|MOVS            R2, #5|5-34
70096|code|MOVT.W          R1, #1|192-242-1-1
70100|code|MOVS            R0, #0|0-32
70102|code|BLX             dcgettext|255-247-194-236
70106|code|MOV             R1, R4|33-70
70108|code|BLX             fputs|255-247-134-237
70112|code|MOVW            R1, #0x1810|65-246-16-1
70116|code|MOVS            R2, #5|5-34
70118|code|MOVT.W          R1, #1|192-242-1-1
70122|code|MOVS            R0, #0|0-32
70124|code|BLX             dcgettext|255-247-182-236
70128|code|MOV             R1, R4|33-70
70130|code|BLX             fputs|255-247-124-237
70134|code|MOVW            R1, #0x184C|65-246-76-1
70138|code|MOVS            R2, #5|5-34
70140|code|MOVT.W          R1, #1|192-242-1-1
70144|code|MOVS            R0, #0|0-32
70146|code|BLX             dcgettext|255-247-172-236
70150|code|MOV             R1, R4|33-70
70152|code|BLX             fputs|255-247-112-237
70156|code|MOVW            R1, #0x1898|65-246-152-1
70160|code|MOVS            R2, #5|5-34
70162|code|MOVT.W          R1, #1|192-242-1-1
70166|code|MOVS            R0, #0|0-32
70168|code|BLX             dcgettext|255-247-160-236
70172|code|MOV             R1, R4|33-70
70174|code|BLX             fputs|255-247-102-237
70178|code|MOV             R1, R4|33-70
70180|code|MOVS            R0, #0xA|10-32
70182|code|BLX             fputc|255-247-86-237
70186|code|MOVW            R1, #0x18E0|65-246-224-1
70190|code|MOVS            R2, #5|5-34
70192|code|MOVT.W          R1, #1|192-242-1-1
70196|code|MOVS            R0, #0|0-32
70198|code|BLX             dcgettext|255-247-146-236
70202|code|MOV             R1, R4|33-70
70204|code|BLX             fputs|255-247-86-237
70208|code|MOVW            R1, #0x190C|65-246-12-17
70212|code|MOVS            R2, #5|5-34
70214|code|MOVT.W          R1, #1|192-242-1-1
70218|code|MOVS            R0, #0|0-32
70220|code|BLX             dcgettext|255-247-134-236
70224|code|MOV             R1, R4|33-70
70226|code|BLX             fputs|255-247-76-237
70230|code|MOV             R1, #0x11944|65-246-68-17-192-242-1-1
70238|code|MOVS            R2, #5|5-34
70240|code|MOVS            R0, #0|0-32
70242|code|BLX             dcgettext|255-247-124-236
70246|code|MOV             R3, #0x11960|65-246-96-19-192-242-1-3
70254|code|MOVS            R1, #1|1-33
70256|code|MOV             R2, R0|2-70
70258|code|MOV             R0, R4|32-70
70260|code|BLX             __fprintf_chk|255-247-10-237
70264|code|MOV             R0, R5|40-70
70266|code|BLX             exit|255-247-214-236
70270|code|MOV             R3, #0x220E8|66-242-232-3-192-242-2-3
70278|code|LDR             R4, [R3]|28-104
70280|code|B               loc_1110C|64-231
70282|data|ALIGN 4|0-191
70284|code|PUSH            {R1-R3}|14-180
70286|code|MOVW            R2, #0x196C|65-246-108-18
70290|code|PUSH            {R4-R6,LR}|112-181
70292|code|MOVW            R4, #0x20D8|66-242-216-4
70296|code|SUB             SP, SP, #0xC|131-176
70298|code|MOVT.W          R4, #2|192-242-2-4
70302|code|ADD             R5, SP, #0x28+varg_r2|8-173
70304|code|LDR             R6, [R4]|38-104
70306|code|MOVT.W          R2, #1|192-242-1-2
70310|code|MOVS            R1, #1|1-33
70312|code|MOV             R3, R5|43-70
70314|code|STR             R5, [SP,#0x28+var_28]|0-149
70316|code|STR             R6, [SP,#0x28+var_24]|1-150
70318|code|BLX             __vasprintf_chk|255-247-220-236
70322|code|CMP             R0, #0|0-40
70324|code|BLT             loc_112C8|8-219
70326|code|LDR             R2, [SP,#0x28+var_24]|1-154
70328|code|LDR             R3, [R4]|35-104
70330|code|CMP             R2, R3|154-66
70332|code|BNE             loc_112D6|11-209
70334|code|ADD             SP, SP, #0xC|3-176
70336|code|POP.W           {R4-R6,LR}|189-232-112-64
70340|code|ADD             SP, SP, #0xC|3-176
70342|code|BX              LR|112-71
70344|code|MOVW            R1, #0x1974|65-246-116-17
70348|code|MOVS            R0, #1; status|1-32
70350|code|MOVT.W          R1, #1; format|192-242-1-1
70354|code|BLX             err|255-247-86-236
70358|code|BLX             __stack_chk_fail|255-247-72-236
70362|data|ALIGN 4|0-191
70364|code|PUSH.W          {R4-R10,LR}|45-233-240-71
70368|code|MOV             R9, #0x220D8|66-242-216-9-192-242-2-9
70376|code|SUB             SP, SP, #0x10|132-176
70378|code|LDR.W           R3, [R9]|217-248-0-48
70382|code|MOV             R4, R2|20-70
70384|code|STR             R3, [SP,#0x30+var_24]|3-147
70386|code|CBZ             R2, loc_11336|2-179
70388|code|MOV             R8, R0|128-70
70390|code|MOV             R6, R1|14-70
70392|code|BLX             __errno_location|255-247-168-236
70396|code|MOV             R10, #0xEE6B280|75-242-128-42-192-246-230-106
70404|code|MOVS            R7, #0|0-39
70406|code|MOV             R5, R0|5-70
70408|code|STR             R7, [R5]|47-96
70410|code|MOV             R0, R8; fd|64-70
70412|code|MOV             R1, R6; buf|49-70
70414|code|MOV             R2, R4; n|34-70
70416|code|BLX             write|255-247-182-236
70420|code|CMP             R0, #0|0-40
70422|code|BLE             loc_11350|27-221
70424|code|SUBS            R4, R4, R0|36-26
70426|code|BEQ             loc_11348|21-208
70428|code|LDR             R2, [R5]|42-104
70430|code|ADD             R6, R0|6-68
70432|code|CMP             R2, #0xB|11-42
70434|code|BNE             loc_11308|241-209
70436|code|ADD             R0, SP, #0x30+requested_time; requested_time|1-168
70438|code|MOVS            R1, #0; remaining|0-33
70440|code|STR             R7, [SP,#0x30+requested_time]|1-151
70442|code|STR.W           R10, [SP,#0x30+requested_time.tv_nsec]|205-248-8-160
70446|code|BLX             nanosleep|255-247-254-235
70450|code|CMP             R4, #0|0-44
70452|code|BNE             loc_11308|232-209
70454|code|MOVS            R0, #0|0-32
70456|code|LDR             R2, [SP,#0x30+var_24]|3-154
70458|code|LDR.W           R3, [R9]|217-248-0-48
70462|code|CMP             R2, R3|154-66
70464|code|BNE             loc_11366|17-209
70466|code|ADD             SP, SP, #0x10|4-176
70468|code|POP.W           {R4-R10,PC}|189-232-240-135
70472|code|LDR             R3, [R5]|43-104
70474|code|CMP             R3, #0xB|11-43
70476|code|BNE             loc_11336|243-209
70478|code|B               loc_11324|233-231
70480|code|LDR             R3, [R5]|43-104
70482|code|CMP             R3, #0xB|11-43
70484|code|IT NE|24-191
70486|code|CMPNE           R3, #4|4-43
70488|code|BNE             loc_11360|2-209
70490|code|CMP             R3, #0xB|11-43
70492|code|BNE             loc_11308|212-209
70494|code|B               loc_11324|225-231
70496|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
70500|code|B               loc_11338|232-231
70502|code|BLX             __stack_chk_fail|255-247-0-236
70506|data|ALIGN 4|0-191
70508|code|PUSH            {R4-R7,LR}|240-181
70510|code|MOV             R4, #0x220D8|66-242-216-4-192-242-2-4
70518|code|SUB             SP, SP, #0xC|131-176
70520|code|LDR             R5, [R4]|37-104
70522|code|MOV             R6, R1|14-70
70524|code|MOVS            R1, #1|1-33
70526|code|MOV             R7, R0|7-70
70528|code|STR             R5, [SP,#4]|1-149
70530|code|BLX             open64|255-247-34-236
70534|code|SUBS            R5, R0, #0|5-30
70536|code|ITTT LT|190-191
70538|code|MOVLTW          R1, #0x198C|65-246-140-17
70542|code|MOVLT           R0, #0|0-32
70544|code|MOVTLT.W        R1, #1|192-242-1-1
70548|code|BLT             loc_113DE|35-219
70550|code|MOVW            R1, #0x196C|65-246-108-17
70554|code|MOV             R3, R6|51-70
70556|code|MOVT.W          R1, #1|192-242-1-1
70560|code|MOVS            R2, #0|0-34
70562|code|MOV             R0, SP|104-70
70564|code|BL              sub_1128C|255-247-114-255
70568|code|LDR             R6, [SP]|0-158
70570|code|MOV             R0, R6|48-70
70572|code|BLX             strlen|255-247-66-236
70576|code|MOV             R1, R6|49-70
70578|code|MOV             R2, R0|2-70
70580|code|MOV             R0, R5|40-70
70582|code|BL              sub_112DC|255-247-145-255
70586|code|CBNZ            R0, loc_113D4|88-185
70588|code|LDR             R0, [SP]|0-152
70590|code|BLX             free|255-247-170-235
70594|code|MOV             R0, R5|40-70
70596|code|BLX             close|255-247-158-236
70600|code|LDR             R2, [SP,#4]|1-154
70602|code|LDR             R3, [R4]|35-104
70604|code|CMP             R2, R3|154-66
70606|code|BNE             loc_113EE|14-209
70608|code|ADD             SP, SP, #0xC|3-176
70610|code|POP             {R4-R7,PC}|240-189
70612|code|MOVW            R1, #0x199C|65-246-156-17
70616|code|MOVS            R0, #0|0-32
70618|code|MOVT.W          R1, #1|192-242-1-1
70622|code|MOVS            R2, #5|5-34
70624|code|BLX             dcgettext|255-247-188-235
70628|code|MOV             R2, R7|58-70
70630|code|MOV             R1, R0|1-70
70632|code|MOVS            R0, #1|1-32
70634|code|BLX             err|255-247-202-235
70638|code|BLX             __stack_chk_fail|255-247-188-235
70642|data|ALIGN 4|0-191
70644|code|MOV             R3, #0x220EC|66-242-236-3-192-242-2-3
70652|code|PUSH            {R4-R6,LR}|112-181
70654|code|LDR             R4, [R3]|28-104
70656|code|MOV             R0, R4|32-70
70658|code|BLX             __fpending|255-247-220-235
70662|code|MOV             R6, R0|6-70
70664|code|MOV             R0, R4|32-70
70666|code|BLX             ferror|255-247-150-235
70670|code|MOV             R5, R0|5-70
70672|code|MOV             R0, R4|32-70
70674|code|BLX             fclose|255-247-66-236
70678|code|MOVS            R4, R0|4-28
70680|code|IT NE|24-191
70682|code|MOVNE           R4, #1|1-36
70684|code|CBNZ            R5, loc_1146A|45-187
70686|code|CBZ             R4, loc_11432|68-177
70688|code|CMP             R6, #0|0-46
70690|code|BNE             loc_114A8|65-209
70692|code|BLX             __errno_location|255-247-18-236
70696|code|LDR             R3, [R0]|3-104
70698|code|CMP             R3, #9|9-43
70700|code|BEQ             loc_11432|1-208
70702|code|CMP             R3, #0x20 ; ' '|32-43
70704|code|BNE             loc_114B0|62-209
70706|code|MOV             R3, #0x220E8|66-242-232-3-192-242-2-3
70714|code|LDR             R4, [R3]|28-104
70716|code|MOV             R0, R4|32-70
70718|code|BLX             __fpending|255-247-190-235
70722|code|MOV             R6, R0|6-70
70724|code|MOV             R0, R4|32-70
70726|code|BLX             ferror|255-247-120-235
70730|code|MOV             R5, R0|5-70
70732|code|MOV             R0, R4|32-70
70734|code|BLX             fclose|255-247-36-236
70738|code|MOVS            R4, R0|4-28
70740|code|IT NE|24-191
70742|code|MOVNE           R4, #1|1-36
70744|code|CBZ             R5, loc_11494|229-177
70746|code|CBNZ            R4, loc_1148E|196-185
70748|code|BLX             __errno_location|255-247-246-235
70752|code|LDR             R3, [R0]|3-104
70754|code|CMP             R3, #0x20 ; ' '|32-43
70756|code|IT NE|24-191
70758|code|STRNE           R4, [R0]|4-96
70760|code|B               loc_1148E|17-224
70762|code|CBNZ            R4, loc_114A8|236-185
70764|code|BLX             __errno_location|255-247-238-235
70768|code|LDR             R3, [R0]|3-104
70770|code|CMP             R3, #0x20 ; ' '|32-43
70772|code|IT NE|24-191
70774|code|STRNE           R4, [R0]|4-96
70776|code|BEQ             loc_11432|219-208
70778|code|MOVW            R1, #0x19AC|65-246-172-17
70782|code|MOVS            R2, #5|5-34
70784|code|MOVT.W          R1, #1|192-242-1-1
70788|code|MOVS            R0, #0|0-32
70790|code|BLX             dcgettext|255-247-106-235
70794|code|BLX             warnx|255-247-218-235
70798|code|MOVS            R0, #1|1-32
70800|code|BLX             _exit|255-247-88-235
70804|code|CBZ             R4, locret_114A6|60-177
70806|code|CMP             R6, #0|0-46
70808|code|BNE             loc_1148E|249-209
70810|code|BLX             __errno_location|255-247-216-235
70814|code|LDR             R3, [R0]|3-104
70816|code|CMP             R3, #9|9-43
70818|code|BNE             loc_1148E|244-209
70820|code|POP             {R4-R6,PC}|112-189
70822|code|POP             {R4-R6,PC}|112-189
70824|code|BLX             __errno_location|255-247-208-235
70828|code|LDR             R3, [R0]|3-104
70830|code|B               loc_1142E|190-231
70832|code|CMP             R3, #0|0-43
70834|code|BEQ             loc_1147A|226-208
70836|code|MOVW            R1, #0x19AC|65-246-172-17
70840|code|MOVS            R2, #5|5-34
70842|code|MOVT.W          R1, #1|192-242-1-1
70846|code|MOVS            R0, #0|0-32
70848|code|BLX             dcgettext|255-247-76-235
70852|code|BLX             warn|255-247-0-236
70856|code|B               loc_1148E|225-231
70858|data|ALIGN 4|0-191
70860|code|LDR             R0, =(aShell - 0x114D4); "SHELL"|27-72
70862|code|PUSH            {R7,LR}|128-181
70864|code|ADD             R0, PC; "SHELL"|120-68
70866|code|BLX             getenv|255-247-128-235
70870|code|MOV             R4, R0|4-70
70872|code|CBZ             R0, loc_1152A|56-179
70874|code|MOV             R0, R4|32-70
70876|code|BLX             basename|255-247-20-235
70880|code|MOV             R8, R0|128-70
70882|code|BLX             strlen|255-247-168-235
70886|code|ADDS            R7, R0, #2|135-28
70888|code|MOV             R0, R7|56-70
70890|code|BLX             malloc|255-247-122-235
70894|code|MOVS            R5, R7|61-28
70896|code|IT NE|24-191
70898|code|MOVNE           R5, #1|1-37
70900|code|CMP             R0, #0|0-40
70902|code|MOV             R6, R0|6-70
70904|code|IT NE|24-191
70906|code|MOVNE           R5, #0|0-37
70908|code|CBNZ            R5, loc_11530|197-185
70910|code|MOVS            R3, #0x2D ; '-'|45-35
70912|code|MOV             R1, R8|65-70
70914|code|STRB.W          R3, [R0],#1|0-248-1-59
70918|code|BLX             strcpy|255-247-84-235
70922|code|MOV             R1, R6|49-70
70924|code|MOV             R2, R5|42-70
70926|code|MOV             R0, R4|32-70
70928|code|BLX             execl|255-247-212-235
70932|code|LDR             R1, =(aFailedToExecut - 0x1151E); "failed to execute %s"|10-73
70934|code|MOVS            R2, #5|5-34
70936|code|MOV             R0, R5|40-70
70938|code|ADD             R1, PC; "failed to execute %s"|121-68
70940|code|BLX             dcgettext|255-247-30-235
70944|code|MOV             R2, R4|34-70
70946|code|MOV             R1, R0|1-70
70948|code|MOVS            R0, #1|1-32
70950|code|BLX             err|255-247-44-235
70954|code|LDR             R4, =(aBinSh - 0x11530); "/bin/sh"|6-76
70956|code|ADD             R4, PC; "/bin/sh"|124-68
70958|code|B               loc_114DA|212-231
70960|code|LDR             R1, =(aCannotAllocate - 0x1153A); "cannot allocate %zu bytes"|5-73
70962|code|MOV             R2, R7|58-70
70964|code|MOVS            R0, #1|1-32
70966|code|ADD             R1, PC; "cannot allocate %zu bytes"|121-68
70968|code|BLX             err|255-247-34-235
70972|data|DCD aShell - 0x114D4; "SHELL"|84-6-0-0
70976|data|DCD aFailedToExecut - 0x1151E; "failed to execute %s"|150-5-0-0
70980|data|DCD aBinSh - 0x11530; "/bin/sh"|240-5-0-0
70984|data|DCD aCannotAllocate - 0x1153A; "cannot allocate %zu bytes"|246-5-0-0
70988|code|PUSH.W          {R3-R9,LR}|45-233-248-67
70992|code|MOV             R7, R0|7-70
70994|code|LDR             R6, =(off_21F08 - 0x1155E)|12-78
70996|code|MOV             R8, R1|136-70
70998|code|LDR             R5, =(off_21F04 - 0x11564)|12-77
71000|code|MOV             R9, R2|145-70
71002|code|ADD             R6, PC; off_21F08|126-68
71004|code|BLX             .init_proc|255-247-196-234
71008|code|ADD             R5, PC; off_21F04|125-68
71010|code|SUBS            R6, R6, R5|118-27
71012|code|ASRS            R6, R6, #2|182-16
71014|code|BEQ             locret_1157E|10-208
71016|code|SUBS            R5, #4|4-61
71018|code|MOVS            R4, #0|0-36
71020|code|ADDS            R4, #1|1-52
71022|code|LDR.W           R3, [R5,#4]!|85-248-4-63
71026|code|MOV             R0, R7|56-70
71028|code|MOV             R1, R8|65-70
71030|code|MOV             R2, R9|74-70
71032|code|BLX             R3|152-71
71034|code|CMP             R4, R6|180-66
71036|code|BNE             loc_1156C|246-209
71038|code|POP.W           {R3-R9,PC}|189-232-248-131
71042|data|ALIGN 4|0-191
71044|data|DCD off_21F08 - 0x1155E|170-9-1-0
71048|data|DCD off_21F04 - 0x11564|160-9-1-0
71052|code|BX              LR|112-71
71054|data|ALIGN 0x10|0-191
71056|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x11598)|5-75
71058|code|LDR             R2, =(off_220C0 - 0x22000)|6-74
71060|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
71062|code|LDR             R3, [R3,R2]; dword_220C8|155-88
71064|code|CBZ             R3, loc_115A2|27-177
71066|code|LDR             R2, [R3]|26-104
71068|code|MOVS            R1, #0|0-33
71070|code|B.W             j___cxa_atexit|255-247-91-187
71074|code|MOV             R2, R3|26-70
71076|code|B               loc_1159C|250-231
71078|data|ALIGN 4|0-191
71080|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11598|104-10-1-0
71084|data|DCD off_220C0 - 0x22000|192-0-0-0
71088|code|PUSH            {R3,LR}|8-64-45-233
71092|code|POP             {R3,PC}|8-128-189-232
72532|data|ALIGN 8|0-0-0-0
139012|data|DCD sub_110D4+1|213-16-1-0
139016|data|DCD sub_110BC+1|189-16-1-0
139020|data|DCD 0|0-0-0-0
139024|data|Elf32_Dyn <1, <1>>; DT_NEEDED libc.so.6|1-0-0-0-1-0-0-0
139032|data|Elf32_Dyn <1, <0x1AC>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-172-1-0-0
139040|data|Elf32_Dyn <0xC, <0x10AE8>>; DT_INIT|12-0-0-0-232-10-1-0
139048|data|Elf32_Dyn <0xD, <0x115B0>>; DT_FINI|13-0-0-0-176-21-1-0
139056|data|Elf32_Dyn <0x19, <0x21F04>>; DT_INIT_ARRAY|25-0-0-0-4-31-2-0
139064|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
139072|data|Elf32_Dyn <0x1A, <0x21F08>>; DT_FINI_ARRAY|26-0-0-0-8-31-2-0
139080|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
139088|data|Elf32_Dyn <0x6FFFFEF5, <0x101B4>>; DT_GNU_HASH|245-254-255-111-180-1-1-0
139096|data|Elf32_Dyn <5, <0x106A0>>; DT_STRTAB|5-0-0-0-160-6-1-0
139104|data|Elf32_Dyn <6, <0x10360>>; DT_SYMTAB|6-0-0-0-96-3-1-0
139112|data|Elf32_Dyn <0xA, <0x1F5>>; DT_STRSZ|10-0-0-0-245-1-0-0
139120|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
139128|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
139136|data|Elf32_Dyn <3, <0x22000>>; DT_PLTGOT|3-0-0-0-0-32-2-0
139144|data|Elf32_Dyn <2, <0x160>>; DT_PLTRELSZ|2-0-0-0-96-1-0-0
139152|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
139160|data|Elf32_Dyn <0x17, <0x10988>>; DT_JMPREL|23-0-0-0-136-9-1-0
139168|data|Elf32_Dyn <0x11, <0x10950>>; DT_REL|17-0-0-0-80-9-1-0
139176|data|Elf32_Dyn <0x12, <0x38>>; DT_RELSZ|18-0-0-0-56-0-0-0
139184|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
139192|data|Elf32_Dyn <0x6FFFFFFE, <0x10900>>; DT_VERNEED|254-255-255-111-0-9-1-0
139200|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
139208|data|Elf32_Dyn <0x6FFFFFF0, <0x10896>>; DT_VERSYM|240-255-255-111-150-8-1-0
139216|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
139224|data|ALIGN 0x40|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
139264|data|DCD stru_21F10|16-31-2-0
139268|data|DCD 0|0-0-0-0
139272|data|DCD 0|0-0-0-0
139276|data|DCD __imp_basename|116-33-2-0
139280|data|DCD __imp_free|28-33-2-0
139284|data|DCD __imp_unshare|96-33-2-0
139288|data|DCD __imp_nanosleep|56-33-2-0
139292|data|DCD __imp_ferror|36-33-2-0
139296|data|DCD __imp__exit|32-33-2-0
139300|data|DCD __imp_execvp|112-33-2-0
139304|data|DCD __imp_dcgettext|84-33-2-0
139308|data|DCD __imp___stack_chk_fail|144-33-2-0
139312|data|DCD __imp_textdomain|48-33-2-0
139316|data|DCD __imp_err|148-33-2-0
139320|data|DCD __imp_geteuid|68-33-2-0
139324|data|DCD __imp_getegid|60-33-2-0
139328|data|DCD __imp_waitpid|24-33-2-0
139332|data|DCD __imp_strcpy|120-33-2-0
139336|data|DCD __imp___fpending|108-33-2-0
139340|data|DCD __imp_open64|52-33-2-0
139344|data|DCD __imp_getenv|132-33-2-0
139348|data|DCD __imp_malloc|248-32-2-0
139352|data|DCD __imp___libc_start_main|40-33-2-0
139356|data|DCD __imp___gmon_start__|164-33-2-0
139360|data|DCD __imp_getopt_long|88-33-2-0
139364|data|DCD __imp_kill|4-33-2-0
139368|data|DCD __imp_getpid|100-33-2-0
139372|data|DCD __imp_exit|104-33-2-0
139376|data|DCD __imp_strlen|80-33-2-0
139380|data|DCD __imp_warnx|16-33-2-0
139384|data|DCD __imp___errno_location|8-33-2-0
139388|data|DCD __imp___cxa_atexit|92-33-2-0
139392|data|DCD __imp___vasprintf_chk|20-33-2-0
139396|data|DCD __printf_chk|156-33-2-0
139400|data|DCD __imp_write|136-33-2-0
139404|data|DCD __imp___fprintf_chk|72-33-2-0
139408|data|DCD __imp_fclose|140-33-2-0
139412|data|DCD setlocale|252-32-2-0
139416|data|DCD fork|124-33-2-0
139420|data|DCD __imp_execl|0-33-2-0
139424|data|DCD __imp_warn|44-33-2-0
139428|data|DCD __imp_fputc|128-33-2-0
139432|data|DCD bindtextdomain|152-33-2-0
139436|data|DCD __imp_fputs|12-33-2-0
139440|data|DCD __imp_abort|64-33-2-0
139444|data|DCD __imp_close|76-33-2-0
139448|data|DCD __imp_mount|160-33-2-0
139452|data|DCD __imp___gmon_start__|164-33-2-0
139456|data|DCD dword_220C8|200-32-2-0
139460|data|ALIGN 8|0-0-0-0
139464|data|DCD 0|0-0-0-0
139472|data|% 4; Copy of shared data|255-255-255-255
139476|data|ALIGN 8|255-255-255-255
139480|data|% 4; Copy of shared data|255-255-255-255
139484|data|ALIGN 0x10|255-255-255-255
139496|data|% 4; Copy of shared data|255-255-255-255
139500|data|% 4; Copy of shared data|255-255-255-255
139508|data|% 1|255
