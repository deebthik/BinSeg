address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|73-154-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x7E38; SHT file offset|56-126-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x7A88; File offset|136-122-0-0
32828|data|DCD unk_FA88; Virtual address|136-250-0-0
32832|data|DCD 0xFA88; Physical address|136-250-0-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibArmLinuxGnu; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x27; Size in file image|39-0-0-0
32904|data|DCD 0x27; Size in memory image|39-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x7A94; Size in file image|148-122-0-0
32936|data|DCD 0x7A94; Size in memory image|148-122-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x7A94; File offset|148-122-0-0
32956|data|DCD off_17A94; Virtual address|148-122-1-0
32960|data|DCD 0x17A94; Physical address|148-122-1-0
32964|data|DCD 0x280; Size in file image|128-2-0-0
32968|data|DCD 0x304; Size in memory image|4-3-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x7AA0; File offset|160-122-0-0
32988|data|DCD stru_17AA0; Virtual address|160-122-1-0
32992|data|DCD 0x17AA0; Physical address|160-122-1-0
32996|data|DCD 0x100; Size in file image|0-1-0-0
33000|data|DCD 0x100; Size in memory image|0-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x15C; File offset|92-1-0-0
33020|data|DCD dword_815C; Virtual address|92-129-0-0
33024|data|DCD 0x815C; Physical address|92-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/arm-linux-gnueabihf/ld-linux.so.3",0|47-108-105-98-47-97-114-109-45-108-105-110-117-120-45-103-110-117-101-97-98-105-104-102-47-108-100-45-108-105-110-117-120-46-115-111-46-51-0
33115|data|DCB 0|0
33116|data|DCD 4; Name Size|4-0-0-0
33120|data|DCD 0x10; Desc Size|16-0-0-0
33124|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33128|data|DCB "GNU",0; Name|71-78-85-0
33132|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33148|data|DCD 4; Name Size|4-0-0-0
33152|data|DCD 0x14; Desc Size|20-0-0-0
33156|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33160|data|DCB "GNU",0; Name|71-78-85-0
33164|data|DCB 0x9F, 0xB1, 0x36, 0x92, 0x24, 0x1C, 0xD8, 0xA9, 0xFA; Desc|159-177-54-146-36-28-216-169-250-94-237-75-154-136-11-203-222-15-71-134
33184|data|DCD 0x43|67-0-0-0
33188|data|DCD 0x48|72-0-0-0
33192|data|DCD 0, 2, 0, 0x22, 0x41, 0x43, 0x15, 0x12, 0, 0x11, 0x1A|0-0-0-0-2-0-0-0-0-0-0-0-34-0-0-0-65-0-0-0-67-0-0-0-21-0-0-0-18-0-0-0-0-0-0-0-17-0-0-0-26-0-0-0-33-0-0-0-0-0-0-0-0-0-0-0-9-0-0-0-31-0-0-0-0-0-0-0-0-0-0-0-63-0-0-0-27-0-0-0-0-0-0-0-20-0-0-0-25-0-0-0-64-0-0-0-0-0-0-0-55-0-0-0-40-0-0-0-0-0-0-0-22-0-0-0-35-0-0-0-70-0-0-0-0-0-0-0-19-0-0-0-0-0-0-0-38-0-0-0-1-0-0-0-0-0-0-0-11-0-0-0-58-0-0-0-56-0-0-0-0-0-0-0-29-0-0-0-0-0-0-0-61-0-0-0-0-0-0-0-12-0-0-0-0-0-0-0-0-0-0-0-5-0-0-0-0-0-0-0-0-0-0-0-24-0-0-0-4-0-0-0-0-0-0-0-0-0-0-0-71-0-0-0-30-0-0-0-54-0-0-0-14-0-0-0-49-0-0-0-39-0-0-0-42-0-0-0-62-0-0-0-0-0-0-0-57-0-0-0-0-0-0-0-53-0-0-0
33460|data|DCD 0, 0x2E, 0x2D, 0, 0, 0, 0, 0x3C, 3, 6, 0, 0, 0x2F|0-0-0-0-46-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-60-0-0-0-3-0-0-0-6-0-0-0-0-0-0-0-0-0-0-0-47-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-48-0-0-0-36-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-41-0-0-0-0-0-0-0-59-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-37-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-51-0-0-0-0-0-0-0-8-0-0-0-69-0-0-0-0-0-0-0-32-0-0-0-0-0-0-0-66-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-44-0-0-0-43-0-0-0-28-0-0-0-50-0-0-0-10-0-0-0-0-0-0-0-0-0-0-0-52-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-13-0-0-0-15-0-0-0-0-0-0-0-0-0-0-0-7-0-0-0-0-0-0-0-68-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-23-0-0-0
33748|data|DCD 0x43|67-0-0-0
33752|data|DCD 3|3-0-0-0
33756|data|DCD 0x10|16-0-0-0
33760|data|DCD 9|9-0-0-0
33764|data|DCD 0xE081A4, 0x970B6085, 0x59083840, 0x90410008, 0x15100082|164-129-224-0-133-96-11-151-64-56-8-89-8-0-65-144-130-0-16-21-32-32-7-1-128-12-64-0-16-33-68-194-130-136-130-40-17-65-64-117-66-34-129-4-208-12-192-32-160-0-1-100-0-68-160-9-98-2-128-16-8-0-24-65
33828|data|DCD 0, 0, 3, 0, 0, 0, 5, 6, 9, 0xA, 0xF, 0, 0x11, 0x13|0-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-5-0-0-0-6-0-0-0-9-0-0-0-10-0-0-0-15-0-0-0-0-0-0-0-17-0-0-0-19-0-0-0-20-0-0-0-21-0-0-0-0-0-0-0-0-0-0-0-23-0-0-0-25-0-0-0-0-0-0-0-27-0-0-0-31-0-0-0-33-0-0-0-34-0-0-0-0-0-0-0-0-0-0-0-36-0-0-0-38-0-0-0-0-0-0-0-39-0-0-0-0-0-0-0-41-0-0-0-42-0-0-0-0-0-0-0-43-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-44-0-0-0-0-0-0-0-0-0-0-0-45-0-0-0-46-0-0-0-0-0-0-0-49-0-0-0-52-0-0-0-53-0-0-0-54-0-0-0-56-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-57-0-0-0-0-0-0-0-58-0-0-0-60-0-0-0-62-0-0-0-64-0-0-0-66-0-0-0-67-0-0-0-68-0-0-0-69-0-0-0-70-0-0-0-0-0-0-0
34096|data|DCD 0x3E48FCE8, 0x21288C53, 0xF11ED7D, 0x1C8BF238, 0xFE76EA16|232-252-72-62-83-140-40-33-125-237-17-15-56-242-139-28-22-234-118-254-177-176-168-148-87-211-166-4-44-50-64-253-102-85-97-16-4-108-178-205-98-62-180-100-243-190-71-62-60-173-57-13-41-29-140-28-0-35-249-164-173-112-14-175-81-181-168-16-149-120-158-124-22-227-63-15-47-78-61-246-128-116-130-13-179-162-247-18-50-196-247-18-35-190-15-175-32-98-100-7-144-117-130-13-118-215-155-124-175-111-136-11-94-150-147-28-135-240-150-124-177-74-69-75-26-159-214-189-9-172-249-143-184-43-107-21-199-195-238-28-17-123-156-124-102-73-73-34-255-199-60-16-215-148-147-28-135-75-133-230-65-77-157-124-99-172-97-160-71-88-55-15-198-14-224-61-156-187-147-28-93-240-108-15-62-126-150-124-62-249-255-188-249-44-88-190-245-231-223-15-37-117-130-13-236-136-101-7-91-154-59-15-57-64-12-175-201-57-64-31-124-96-156-124-33-49-231-75-86-219-147-28-245-241-171-186-6-174-213-39-49-184-130-13-246-228-16-209-187-149-147-28-197-111-73-62-45-180-56-82-203-150-147-28-159-251-110-15-10-15-181-165-15-132-29-230
34372|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34388|data|Elf32_Sym <aGmonStart - byte_8AC4, 0, 0, 0x20, 0, 0>; "__gmon_start__"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34404|data|Elf32_Sym <aJvRegisterclas - byte_8AC4, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|29-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34420|data|Elf32_Sym <aRegexec - byte_8AC4, regexec, 0, 0x12, 0, 0>; "regexec"|124-0-0-0-100-145-0-0-0-0-0-0-18-0-0-0
34436|data|Elf32_Sym <aUsleep - byte_8AC4, usleep, 0, 0x12, 0, 0>; "usleep"|195-1-0-0-172-145-0-0-0-0-0-0-18-0-0-0
34452|data|Elf32_Sym <aAbort - byte_8AC4, abort, 0, 0x12, 0, 0>; "abort"|213-0-0-0-96-147-0-0-0-0-0-0-18-0-0-0
34468|data|Elf32_Sym <aStderr - byte_8AC4, stderr, 4, 0x11, 0, 0x19>; "stderr"|176-1-0-0-32-125-1-0-4-0-0-0-17-0-25-0
34484|data|Elf32_Sym <aFwrite - byte_8AC4, fwrite, 0, 0x12, 0, 0>; "fwrite"|202-1-0-0-136-145-0-0-0-0-0-0-18-0-0-0
34500|data|Elf32_Sym <aCtypeTolowerLo - byte_8AC4, __ctype_tolower_loc, 0, 0x12, \; "__ctype_tolower_loc"|18-2-0-0-12-146-0-0-0-0-0-0-18-0-0-0
34516|data|Elf32_Sym <aTcgetattr - byte_8AC4, tcgetattr, 0, 0x12, 0, 0>; "tcgetattr"|8-2-0-0-144-147-0-0-0-0-0-0-18-0-0-0
34532|data|Elf32_Sym <aFflush - byte_8AC4, fflush, 0, 0x12, 0, 0>; "fflush"|82-0-0-0-232-144-0-0-0-0-0-0-18-0-0-0
34548|data|Elf32_Sym <aStdin - byte_8AC4, stdin, 4, 0x11, 0, 0x19>; "stdin"|219-0-0-0-40-125-1-0-4-0-0-0-17-0-25-0
34564|data|Elf32_Sym <aStrdup - byte_8AC4, __strdup, 0, 0x12, 0, 0>; "__strdup"|132-0-0-0-184-146-0-0-0-0-0-0-18-0-0-0
34580|data|Elf32_Sym <aSigemptyset - byte_8AC4, sigemptyset, 0, 0x12, 0, 0>; "sigemptyset"|16-1-0-0-12-147-0-0-0-0-0-0-18-0-0-0
34596|data|Elf32_Sym <aRegcomp - byte_8AC4, regcomp, 0, 0x12, 0, 0>; "regcomp"|161-1-0-0-60-147-0-0-0-0-0-0-18-0-0-0
34612|data|Elf32_Sym <aMalloc - byte_8AC4, malloc, 0, 0x12, 0, 0>; "malloc"|133-1-0-0-232-145-0-0-0-0-0-0-18-0-0-0
34628|data|Elf32_Sym <aStdout - byte_8AC4, stdout, 4, 0x11, 0, 0x19>; "stdout"|102-1-0-0-44-125-1-0-4-0-0-0-17-0-25-0
34644|data|Elf32_Sym <aErrnoLocation - byte_8AC4, __errno_location, 0, 0x12, 0, \; "__errno_location"|42-1-0-0-148-146-0-0-0-0-0-0-18-0-0-0
34660|data|Elf32_Sym <aStrrchr - byte_8AC4, strrchr, 0, 0x12, 0, 0>; "strrchr"|116-0-0-0-24-147-0-0-0-0-0-0-18-0-0-0
34676|data|Elf32_Sym <aFwrite+1 - byte_8AC4, write, 0, 0x12, 0, 0>; "write"|203-1-0-0-244-146-0-0-0-0-0-0-18-0-0-0
34692|data|Elf32_Sym <aCtime+1 - byte_8AC4, time, 0, 0x12, 0, 0>; "time"|97-1-0-0-40-145-0-0-0-0-0-0-18-0-0-0
34708|data|Elf32_Sym <aCtime - byte_8AC4, ctime, 0, 0x12, 0, 0>; "ctime"|96-1-0-0-64-145-0-0-0-0-0-0-18-0-0-0
34724|data|Elf32_Sym <aLibcStartMain - byte_8AC4, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|68-2-0-0-244-145-0-0-0-0-0-0-18-0-0-0
34740|data|Elf32_Sym <aMemchr - byte_8AC4, memchr, 0, 0x12, 0, 0>; "memchr"|225-0-0-0-0-147-0-0-0-0-0-0-18-0-0-0
34756|data|Elf32_Sym <aOptarg - byte_8AC4, optarg, 4, 0x11, 0, 0x19>; "optarg"|169-1-0-0-48-125-1-0-4-0-0-0-17-0-25-0
34772|data|Elf32_Sym <aOptind - byte_8AC4, optind, 4, 0x11, 0, 0x19>; "optind"|109-0-0-0-28-125-1-0-4-0-0-0-17-0-25-0
34788|data|Elf32_Sym <aStrtoul - byte_8AC4, strtoul, 0, 0x12, 0, 0>; "strtoul"|125-1-0-0-88-146-0-0-0-0-0-0-18-0-0-0
34804|data|Elf32_Sym <aStackChkGuard - byte_8AC4, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|100-2-0-0-24-125-1-0-4-0-0-0-17-0-25-0
34820|data|Elf32_Sym <aMemcpy - byte_8AC4, memcpy, 0, 0x12, 0, 0>; "memcpy"|118-1-0-0-28-145-0-0-0-0-0-0-18-0-0-0
34836|data|Elf32_Sym <aOpen - byte_8AC4, open, 0, 0x12, 0, 0>; "open"|238-1-0-0-40-146-0-0-0-0-0-0-18-0-0-0
34852|data|Elf32_Sym <aStderr+3 - byte_8AC4, err+1, 0x1C, 0x12, 0, 0xE>; "err"|179-1-0-0-201-161-0-0-28-0-0-0-18-0-14-0
34868|data|Elf32_Sym <aStrcmp - byte_8AC4, strcmp, 0, 0x12, 0, 0>; "strcmp"|52-2-0-0-184-144-0-0-0-0-0-0-18-0-0-0
34884|data|Elf32_Sym <aRegfree+3 - byte_8AC4, free, 0, 0x12, 0, 0>; "free"|183-0-0-0-4-145-0-0-0-0-0-0-18-0-0-0
34900|data|Elf32_Sym <aAssertFail - byte_8AC4, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|232-0-0-0-132-147-0-0-0-0-0-0-18-0-0-0
34916|data|Elf32_Sym <aMemmove - byte_8AC4, memmove, 0, 0x12, 0, 0>; "memmove"|44-2-0-0-244-144-0-0-0-0-0-0-18-0-0-0
34932|data|Elf32_Sym <aStrerror - byte_8AC4, strerror, 0, 0x12, 0, 0>; "strerror"|59-2-0-0-0-146-0-0-0-0-0-0-18-0-0-0
34948|data|Elf32_Sym <aFprintf+1 - byte_8AC4, printf, 0, 0x12, 0, 0>; "printf"|251-1-0-0-196-144-0-0-0-0-0-0-18-0-0-0
34964|data|Elf32_Sym <aSyslog - byte_8AC4, syslog, 0, 0x12, 0, 0>; "syslog"|246-0-0-0-36-147-0-0-0-0-0-0-18-0-0-0
34980|data|Elf32_Sym <aPuts - byte_8AC4, puts, 0, 0x12, 0, 0>; "puts"|175-0-0-0-220-145-0-0-0-0-0-0-18-0-0-0
34996|data|Elf32_Sym <aCtypeBLoc - byte_8AC4, __ctype_b_loc, 0, 0x12, 0, 0>; "__ctype_b_loc"|147-1-0-0-64-146-0-0-0-0-0-0-18-0-0-0
35012|data|Elf32_Sym <aQsort - byte_8AC4, qsort, 0, 0x12, 0, 0>; "qsort"|2-2-0-0-84-147-0-0-0-0-0-0-18-0-0-0
35028|data|Elf32_Sym <aStrcat - byte_8AC4, strcat, 0, 0x12, 0, 0>; "strcat"|140-1-0-0-148-145-0-0-0-0-0-0-18-0-0-0
35044|data|Elf32_Sym <aGettimeofday - byte_8AC4, gettimeofday, 0, 0x12, 0, 0>; "gettimeofday"|209-1-0-0-208-145-0-0-0-0-0-0-18-0-0-0
35060|data|Elf32_Sym <aRead - byte_8AC4, read, 0, 0x12, 0, 0>; "read"|69-1-0-0-220-144-0-0-0-0-0-0-18-0-0-0
35076|data|Elf32_Sym <aTcsetattr - byte_8AC4, tcsetattr, 0, 0x12, 0, 0>; "tcsetattr"|59-1-0-0-184-145-0-0-0-0-0-0-18-0-0-0
35092|data|Elf32_Sym <aSigaction - byte_8AC4, sigaction, 0, 0x12, 0, 0>; "sigaction"|222-1-0-0-124-145-0-0-0-0-0-0-18-0-0-0
35108|data|Elf32_Sym <aRealloc - byte_8AC4, realloc, 0, 0x12, 0, 0>; "realloc"|205-0-0-0-88-145-0-0-0-0-0-0-18-0-0-0
35124|data|Elf32_Sym <aStrlen - byte_8AC4, strlen, 0, 0x12, 0, 0>; "strlen"|3-1-0-0-100-146-0-0-0-0-0-0-18-0-0-0
35140|data|Elf32_Sym <aFcntl - byte_8AC4, fcntl, 0, 0x12, 0, 0>; "fcntl"|38-2-0-0-136-146-0-0-0-0-0-0-18-0-0-0
35156|data|Elf32_Sym <aExit - byte_8AC4, exit, 0, 0x12, 0, 0>; "exit"|96-0-0-0-76-146-0-0-0-0-0-0-18-0-0-0
35172|data|Elf32_Sym <aFprintf - byte_8AC4, fprintf, 0, 0x12, 0, 0>; "fprintf"|250-1-0-0-124-146-0-0-0-0-0-0-18-0-0-0
35188|data|Elf32_Sym <aVsnprintf+1 - byte_8AC4, snprintf, 0, 0x12, 0, 0>; "snprintf"|82-1-0-0-160-146-0-0-0-0-0-0-18-0-0-0
35204|data|Elf32_Sym <aLockf - byte_8AC4, lockf, 0, 0x12, 0, 0>; "lockf"|10-1-0-0-196-146-0-0-0-0-0-0-18-0-0-0
35220|data|Elf32_Sym <aMemcmp - byte_8AC4, memcmp, 0, 0x12, 0, 0>; "memcmp"|74-1-0-0-52-145-0-0-0-0-0-0-18-0-0-0
35236|data|Elf32_Sym <aRegerror - byte_8AC4, regerror, 0, 0x12, 0, 0>; "regerror"|109-1-0-0-208-144-0-0-0-0-0-0-18-0-0-0
35252|data|Elf32_Sym <aClose - byte_8AC4, close, 0, 0x12, 0, 0>; "close"|232-1-0-0-108-147-0-0-0-0-0-0-18-0-0-0
35268|data|Elf32_Sym <aStrncpy - byte_8AC4, strncpy, 0, 0x12, 0, 0>; "strncpy"|167-0-0-0-220-146-0-0-0-0-0-0-18-0-0-0
35284|data|Elf32_Sym <aStackChkFail - byte_8AC4, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|188-0-0-0-76-145-0-0-0-0-0-0-18-0-0-0
35300|data|Elf32_Sym <aPoll - byte_8AC4, poll, 0, 0x12, 0, 0>; "poll"|91-1-0-0-112-145-0-0-0-0-0-0-18-0-0-0
35316|data|Elf32_Sym <aIsoc99Sscanf - byte_8AC4, __isoc99_sscanf, 0, 0x12, 0, 0>; "__isoc99_sscanf"|151-0-0-0-172-146-0-0-0-0-0-0-18-0-0-0
35332|data|Elf32_Sym <aStrstr - byte_8AC4, strstr, 0, 0x12, 0, 0>; "strstr"|35-1-0-0-160-144-0-0-0-0-0-0-18-0-0-0
35348|data|Elf32_Sym <aForkpty - byte_8AC4, forkpty, 0, 0x12, 0, 0>; "forkpty"|49-0-0-0-120-147-0-0-0-0-0-0-18-0-0-0
35364|data|Elf32_Sym <aGetoptLong - byte_8AC4, getopt_long, 0, 0x12, 0, 0>; "getopt_long"|183-1-0-0-52-146-0-0-0-0-0-0-18-0-0-0
35380|data|Elf32_Sym <aMemset - byte_8AC4, memset, 0, 0x12, 0, 0>; "memset"|28-1-0-0-208-146-0-0-0-0-0-0-18-0-0-0
35396|data|Elf32_Sym <aCfmakeraw - byte_8AC4, cfmakeraw, 0, 0x12, 0, 0>; "cfmakeraw"|141-0-0-0-172-144-0-0-0-0-0-0-18-0-0-0
35412|data|Elf32_Sym <aStrchr - byte_8AC4, strchr, 0, 0x12, 0, 0>; "strchr"|243-1-0-0-112-146-0-0-0-0-0-0-18-0-0-0
35428|data|Elf32_Sym <aRegfree - byte_8AC4, regfree, 0, 0x12, 0, 0>; "regfree"|180-0-0-0-160-145-0-0-0-0-0-0-18-0-0-0
35444|data|Elf32_Sym <aXpgBasename - byte_8AC4, __xpg_basename, 0, 0x12, 0, 0>; "__xpg_basename"|67-0-0-0-232-146-0-0-0-0-0-0-18-0-0-0
35460|data|Elf32_Sym <aStrcpy - byte_8AC4, strcpy, 0, 0x12, 0, 0>; "strcpy"|89-0-0-0-196-145-0-0-0-0-0-0-18-0-0-0
35476|data|Elf32_Sym <aFgets - byte_8AC4, fgets, 0, 0x12, 0, 0>; "fgets"|253-0-0-0-16-145-0-0-0-0-0-0-18-0-0-0
35492|data|Elf32_Sym <aSprintf - byte_8AC4, sprintf, 0, 0x12, 0, 0>; "sprintf"|101-0-0-0-48-147-0-0-0-0-0-0-18-0-0-0
35508|data|Elf32_Sym <aVsnprintf - byte_8AC4, vsnprintf, 0, 0x12, 0, 0>; "vsnprintf"|81-1-0-0-72-147-0-0-0-0-0-0-18-0-0-0
35524|data|DCB 0|0
35525|data|DCB "libutil.so.1",0|108-105-98-117-116-105-108-46-115-111-46-49-0
35538|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
35553|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
35573|data|DCB "forkpty",0|102-111-114-107-112-116-121-0
35581|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
35591|data|DCB "__xpg_basename",0|95-95-120-112-103-95-98-97-115-101-110-97-109-101-0
35606|data|DCB "fflush",0|102-102-108-117-115-104-0
35613|data|DCB "strcpy",0|115-116-114-99-112-121-0
35620|data|DCB "exit",0|101-120-105-116-0
35625|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
35633|data|DCB "optind",0|111-112-116-105-110-100-0
35640|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
35648|data|DCB "regexec",0|114-101-103-101-120-101-99-0
35656|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
35665|data|DCB "cfmakeraw",0|99-102-109-97-107-101-114-97-119-0
35675|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
35691|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
35699|data|DCB "puts",0|112-117-116-115-0
35704|data|DCB "regfree",0|114-101-103-102-114-101-101-0
35712|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
35729|data|DCB "realloc",0|114-101-97-108-108-111-99-0
35737|data|DCB "abort",0|97-98-111-114-116-0
35743|data|DCB "stdin",0|115-116-100-105-110-0
35749|data|DCB "memchr",0|109-101-109-99-104-114-0
35756|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
35770|data|DCB "syslog",0|115-121-115-108-111-103-0
35777|data|DCB "fgets",0|102-103-101-116-115-0
35783|data|DCB "strlen",0|115-116-114-108-101-110-0
35790|data|DCB "lockf",0|108-111-99-107-102-0
35796|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
35808|data|DCB "memset",0|109-101-109-115-101-116-0
35815|data|DCB "strstr",0|115-116-114-115-116-114-0
35822|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
35839|data|DCB "tcsetattr",0|116-99-115-101-116-97-116-116-114-0
35849|data|DCB "read",0|114-101-97-100-0
35854|data|DCB "memcmp",0|109-101-109-99-109-112-0
35861|data|DCB "vsnprintf",0|118-115-110-112-114-105-110-116-102-0
35871|data|DCB "poll",0|112-111-108-108-0
35876|data|DCB "ctime",0|99-116-105-109-101-0
35882|data|DCB "stdout",0|115-116-100-111-117-116-0
35889|data|DCB "regerror",0|114-101-103-101-114-114-111-114-0
35898|data|DCB "memcpy",0|109-101-109-99-112-121-0
35905|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
35913|data|DCB "malloc",0|109-97-108-108-111-99-0
35920|data|DCB "strcat",0|115-116-114-99-97-116-0
35927|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
35941|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
35949|data|DCB "optarg",0|111-112-116-97-114-103-0
35956|data|DCB "stderr",0|115-116-100-101-114-114-0
35963|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
35975|data|DCB "usleep",0|117-115-108-101-101-112-0
35982|data|DCB "fwrite",0|102-119-114-105-116-101-0
35989|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
36002|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
36012|data|DCB "close",0|99-108-111-115-101-0
36018|data|DCB "open",0|111-112-101-110-0
36023|data|DCB "strchr",0|115-116-114-99-104-114-0
36030|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
36038|data|DCB "qsort",0|113-115-111-114-116-0
36044|data|DCB "tcgetattr",0|116-99-103-101-116-97-116-116-114-0
36054|data|DCB "__ctype_tolower_loc",0|95-95-99-116-121-112-101-95-116-111-108-111-119-101-114-95-108-111-99-0
36074|data|DCB "fcntl",0|102-99-110-116-108-0
36080|data|DCB "memmove",0|109-101-109-109-111-118-101-0
36088|data|DCB "strcmp",0|115-116-114-99-109-112-0
36095|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
36104|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
36122|data|DCB "ld-linux.so.3",0|108-100-45-108-105-110-117-120-46-115-111-46-51-0
36136|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
36154|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
36164|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
36174|data|DCW 0|0-0
36176|data|DCW 0; local  symbol: __gmon_start__|0-0
36178|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
36180|data|DCW 2; regexec@@GLIBC_2.4|2-0
36182|data|DCW 2; usleep@@GLIBC_2.4|2-0
36184|data|DCW 2; abort@@GLIBC_2.4|2-0
36186|data|DCW 2; stderr@@GLIBC_2.4|2-0
36188|data|DCW 2; fwrite@@GLIBC_2.4|2-0
36190|data|DCW 2; __ctype_tolower_loc@@GLIBC_2.4|2-0
36192|data|DCW 2; tcgetattr@@GLIBC_2.4|2-0
36194|data|DCW 2; fflush@@GLIBC_2.4|2-0
36196|data|DCW 2; stdin@@GLIBC_2.4|2-0
36198|data|DCW 2; __strdup@@GLIBC_2.4|2-0
36200|data|DCW 2; sigemptyset@@GLIBC_2.4|2-0
36202|data|DCW 2; regcomp@@GLIBC_2.4|2-0
36204|data|DCW 2; malloc@@GLIBC_2.4|2-0
36206|data|DCW 2; stdout@@GLIBC_2.4|2-0
36208|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
36210|data|DCW 2; strrchr@@GLIBC_2.4|2-0
36212|data|DCW 2; write@@GLIBC_2.4|2-0
36214|data|DCW 2; time@@GLIBC_2.4|2-0
36216|data|DCW 2; ctime@@GLIBC_2.4|2-0
36218|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
36220|data|DCW 2; memchr@@GLIBC_2.4|2-0
36222|data|DCW 2; optarg@@GLIBC_2.4|2-0
36224|data|DCW 2; optind@@GLIBC_2.4|2-0
36226|data|DCW 2; strtoul@@GLIBC_2.4|2-0
36228|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
36230|data|DCW 2; memcpy@@GLIBC_2.4|2-0
36232|data|DCW 2; open@@GLIBC_2.4|2-0
36234|data|DCW 1; global symbol: err|1-0
36236|data|DCW 2; strcmp@@GLIBC_2.4|2-0
36238|data|DCW 2; free@@GLIBC_2.4|2-0
36240|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
36242|data|DCW 2; memmove@@GLIBC_2.4|2-0
36244|data|DCW 2; strerror@@GLIBC_2.4|2-0
36246|data|DCW 2; printf@@GLIBC_2.4|2-0
36248|data|DCW 2; syslog@@GLIBC_2.4|2-0
36250|data|DCW 2; puts@@GLIBC_2.4|2-0
36252|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
36254|data|DCW 2; qsort@@GLIBC_2.4|2-0
36256|data|DCW 2; strcat@@GLIBC_2.4|2-0
36258|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
36260|data|DCW 2; read@@GLIBC_2.4|2-0
36262|data|DCW 2; tcsetattr@@GLIBC_2.4|2-0
36264|data|DCW 2; sigaction@@GLIBC_2.4|2-0
36266|data|DCW 2; realloc@@GLIBC_2.4|2-0
36268|data|DCW 2; strlen@@GLIBC_2.4|2-0
36270|data|DCW 2; fcntl@@GLIBC_2.4|2-0
36272|data|DCW 2; exit@@GLIBC_2.4|2-0
36274|data|DCW 2; fprintf@@GLIBC_2.4|2-0
36276|data|DCW 2; snprintf@@GLIBC_2.4|2-0
36278|data|DCW 2; lockf@@GLIBC_2.4|2-0
36280|data|DCW 2; memcmp@@GLIBC_2.4|2-0
36282|data|DCW 2; regerror@@GLIBC_2.4|2-0
36284|data|DCW 2; close@@GLIBC_2.4|2-0
36286|data|DCW 2; strncpy@@GLIBC_2.4|2-0
36288|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
36290|data|DCW 2; poll@@GLIBC_2.4|2-0
36292|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
36294|data|DCW 2; strstr@@GLIBC_2.4|2-0
36296|data|DCW 5; forkpty@@GLIBC_2.4|5-0
36298|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
36300|data|DCW 2; memset@@GLIBC_2.4|2-0
36302|data|DCW 2; cfmakeraw@@GLIBC_2.4|2-0
36304|data|DCW 2; strchr@@GLIBC_2.4|2-0
36306|data|DCW 2; regfree@@GLIBC_2.4|2-0
36308|data|DCW 2; __xpg_basename@@GLIBC_2.4|2-0
36310|data|DCW 2; strcpy@@GLIBC_2.4|2-0
36312|data|DCW 2; fgets@@GLIBC_2.4|2-0
36314|data|DCW 2; sprintf@@GLIBC_2.4|2-0
36316|data|DCW 2; vsnprintf@@GLIBC_2.4|2-0
36318|data|DCW 0|0-0
36320|data|Elf32_Verneed <1, 1, aLibutilSo1 - byte_8AC4, 0x10, 0x20>; "libutil.so.1"|1-0-1-0-1-0-0-0-16-0-0-0-32-0-0-0
36336|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_8AC4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-118-2-0-0-0-0-0-0
36352|data|Elf32_Verneed <1, 1, aLdLinuxSo3 - byte_8AC4, 0x10, 0x20>; "ld-linux.so.3"|1-0-1-0-86-2-0-0-16-0-0-0-32-0-0-0
36368|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_8AC4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-118-2-0-0-0-0-0-0
36384|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_8AC4, 0x10, 0>; "libc.so.6"|1-0-2-0-57-0-0-0-16-0-0-0-0-0-0-0
36400|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_8AC4, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-128-2-0-0-16-0-0-0
36416|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_8AC4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-118-2-0-0-0-0-0-0
36432|data|Elf32_Rel <0x17CA8, 0x115>; R_ARM_GLOB_DAT __gmon_start__|168-124-1-0-21-1-0-0
36440|data|Elf32_Rel <0x17D18, 0x1B14>; R_ARM_COPY __stack_chk_guard|24-125-1-0-20-27-0-0
36448|data|Elf32_Rel <0x17D1C, 0x1914>; R_ARM_COPY optind|28-125-1-0-20-25-0-0
36456|data|Elf32_Rel <0x17D20, 0x614>; R_ARM_COPY stderr|32-125-1-0-20-6-0-0
36464|data|Elf32_Rel <0x17D28, 0xB14>; R_ARM_COPY stdin|40-125-1-0-20-11-0-0
36472|data|Elf32_Rel <0x17D2C, 0x1014>; R_ARM_COPY stdout|44-125-1-0-20-16-0-0
36480|data|Elf32_Rel <0x17D30, 0x1814>; R_ARM_COPY optarg|48-125-1-0-20-24-0-0
36488|data|Elf32_Rel <0x17BAC, 0x3C16>; R_ARM_JUMP_SLOT strstr|172-123-1-0-22-60-0-0
36496|data|Elf32_Rel <0x17BB0, 0x4016>; R_ARM_JUMP_SLOT cfmakeraw|176-123-1-0-22-64-0-0
36504|data|Elf32_Rel <0x17BB4, 0x1F16>; R_ARM_JUMP_SLOT strcmp|180-123-1-0-22-31-0-0
36512|data|Elf32_Rel <0x17BB8, 0x2416>; R_ARM_JUMP_SLOT printf|184-123-1-0-22-36-0-0
36520|data|Elf32_Rel <0x17BBC, 0x3616>; R_ARM_JUMP_SLOT regerror|188-123-1-0-22-54-0-0
36528|data|Elf32_Rel <0x17BC0, 0x2B16>; R_ARM_JUMP_SLOT read|192-123-1-0-22-43-0-0
36536|data|Elf32_Rel <0x17BC4, 0xA16>; R_ARM_JUMP_SLOT fflush|196-123-1-0-22-10-0-0
36544|data|Elf32_Rel <0x17BC8, 0x2216>; R_ARM_JUMP_SLOT memmove|200-123-1-0-22-34-0-0
36552|data|Elf32_Rel <0x17BCC, 0x2016>; R_ARM_JUMP_SLOT free|204-123-1-0-22-32-0-0
36560|data|Elf32_Rel <0x17BD0, 0x4516>; R_ARM_JUMP_SLOT fgets|208-123-1-0-22-69-0-0
36568|data|Elf32_Rel <0x17BD4, 0x1C16>; R_ARM_JUMP_SLOT memcpy|212-123-1-0-22-28-0-0
36576|data|Elf32_Rel <0x17BD8, 0x1416>; R_ARM_JUMP_SLOT time|216-123-1-0-22-20-0-0
36584|data|Elf32_Rel <0x17BDC, 0x3516>; R_ARM_JUMP_SLOT memcmp|220-123-1-0-22-53-0-0
36592|data|Elf32_Rel <0x17BE0, 0x1516>; R_ARM_JUMP_SLOT ctime|224-123-1-0-22-21-0-0
36600|data|Elf32_Rel <0x17BE4, 0x3916>; R_ARM_JUMP_SLOT __stack_chk_fail|228-123-1-0-22-57-0-0
36608|data|Elf32_Rel <0x17BE8, 0x2E16>; R_ARM_JUMP_SLOT realloc|232-123-1-0-22-46-0-0
36616|data|Elf32_Rel <0x17BEC, 0x316>; R_ARM_JUMP_SLOT regexec|236-123-1-0-22-3-0-0
36624|data|Elf32_Rel <0x17BF0, 0x3A16>; R_ARM_JUMP_SLOT poll|240-123-1-0-22-58-0-0
36632|data|Elf32_Rel <0x17BF4, 0x2D16>; R_ARM_JUMP_SLOT sigaction|244-123-1-0-22-45-0-0
36640|data|Elf32_Rel <0x17BF8, 0x716>; R_ARM_JUMP_SLOT fwrite|248-123-1-0-22-7-0-0
36648|data|Elf32_Rel <0x17BFC, 0x2916>; R_ARM_JUMP_SLOT strcat|252-123-1-0-22-41-0-0
36656|data|Elf32_Rel <0x17C00, 0x4216>; R_ARM_JUMP_SLOT regfree|0-124-1-0-22-66-0-0
36664|data|Elf32_Rel <0x17C04, 0x416>; R_ARM_JUMP_SLOT usleep|4-124-1-0-22-4-0-0
36672|data|Elf32_Rel <0x17C08, 0x2C16>; R_ARM_JUMP_SLOT tcsetattr|8-124-1-0-22-44-0-0
36680|data|Elf32_Rel <0x17C0C, 0x4416>; R_ARM_JUMP_SLOT strcpy|12-124-1-0-22-68-0-0
36688|data|Elf32_Rel <0x17C10, 0x2A16>; R_ARM_JUMP_SLOT gettimeofday|16-124-1-0-22-42-0-0
36696|data|Elf32_Rel <0x17C14, 0x2616>; R_ARM_JUMP_SLOT puts|20-124-1-0-22-38-0-0
36704|data|Elf32_Rel <0x17C18, 0xF16>; R_ARM_JUMP_SLOT malloc|24-124-1-0-22-15-0-0
36712|data|Elf32_Rel <0x17C1C, 0x1616>; R_ARM_JUMP_SLOT __libc_start_main|28-124-1-0-22-22-0-0
36720|data|Elf32_Rel <0x17C20, 0x2316>; R_ARM_JUMP_SLOT strerror|32-124-1-0-22-35-0-0
36728|data|Elf32_Rel <0x17C24, 0x816>; R_ARM_JUMP_SLOT __ctype_tolower_loc|36-124-1-0-22-8-0-0
36736|data|Elf32_Rel <0x17C28, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|40-124-1-0-22-1-0-0
36744|data|Elf32_Rel <0x17C2C, 0x1D16>; R_ARM_JUMP_SLOT open|44-124-1-0-22-29-0-0
36752|data|Elf32_Rel <0x17C30, 0x3E16>; R_ARM_JUMP_SLOT getopt_long|48-124-1-0-22-62-0-0
36760|data|Elf32_Rel <0x17C34, 0x2716>; R_ARM_JUMP_SLOT __ctype_b_loc|52-124-1-0-22-39-0-0
36768|data|Elf32_Rel <0x17C38, 0x3116>; R_ARM_JUMP_SLOT exit|56-124-1-0-22-49-0-0
36776|data|Elf32_Rel <0x17C3C, 0x1A16>; R_ARM_JUMP_SLOT strtoul|60-124-1-0-22-26-0-0
36784|data|Elf32_Rel <0x17C40, 0x2F16>; R_ARM_JUMP_SLOT strlen|64-124-1-0-22-47-0-0
36792|data|Elf32_Rel <0x17C44, 0x4116>; R_ARM_JUMP_SLOT strchr|68-124-1-0-22-65-0-0
36800|data|Elf32_Rel <0x17C48, 0x3216>; R_ARM_JUMP_SLOT fprintf|72-124-1-0-22-50-0-0
36808|data|Elf32_Rel <0x17C4C, 0x3016>; R_ARM_JUMP_SLOT fcntl|76-124-1-0-22-48-0-0
36816|data|Elf32_Rel <0x17C50, 0x1116>; R_ARM_JUMP_SLOT __errno_location|80-124-1-0-22-17-0-0
36824|data|Elf32_Rel <0x17C54, 0x3316>; R_ARM_JUMP_SLOT snprintf|84-124-1-0-22-51-0-0
36832|data|Elf32_Rel <0x17C58, 0x3B16>; R_ARM_JUMP_SLOT __isoc99_sscanf|88-124-1-0-22-59-0-0
36840|data|Elf32_Rel <0x17C5C, 0xC16>; R_ARM_JUMP_SLOT __strdup|92-124-1-0-22-12-0-0
36848|data|Elf32_Rel <0x17C60, 0x3416>; R_ARM_JUMP_SLOT lockf|96-124-1-0-22-52-0-0
36856|data|Elf32_Rel <0x17C64, 0x3F16>; R_ARM_JUMP_SLOT memset|100-124-1-0-22-63-0-0
36864|data|Elf32_Rel <0x17C68, 0x3816>; R_ARM_JUMP_SLOT strncpy|104-124-1-0-22-56-0-0
36872|data|Elf32_Rel <0x17C6C, 0x4316>; R_ARM_JUMP_SLOT __xpg_basename|108-124-1-0-22-67-0-0
36880|data|Elf32_Rel <0x17C70, 0x1316>; R_ARM_JUMP_SLOT write|112-124-1-0-22-19-0-0
36888|data|Elf32_Rel <0x17C74, 0x1716>; R_ARM_JUMP_SLOT memchr|116-124-1-0-22-23-0-0
36896|data|Elf32_Rel <0x17C78, 0xD16>; R_ARM_JUMP_SLOT sigemptyset|120-124-1-0-22-13-0-0
36904|data|Elf32_Rel <0x17C7C, 0x1216>; R_ARM_JUMP_SLOT strrchr|124-124-1-0-22-18-0-0
36912|data|Elf32_Rel <0x17C80, 0x2516>; R_ARM_JUMP_SLOT syslog|128-124-1-0-22-37-0-0
36920|data|Elf32_Rel <0x17C84, 0x4616>; R_ARM_JUMP_SLOT sprintf|132-124-1-0-22-70-0-0
36928|data|Elf32_Rel <0x17C88, 0xE16>; R_ARM_JUMP_SLOT regcomp|136-124-1-0-22-14-0-0
36936|data|Elf32_Rel <0x17C8C, 0x4716>; R_ARM_JUMP_SLOT vsnprintf|140-124-1-0-22-71-0-0
36944|data|Elf32_Rel <0x17C90, 0x2816>; R_ARM_JUMP_SLOT qsort|144-124-1-0-22-40-0-0
36952|data|Elf32_Rel <0x17C94, 0x516>; R_ARM_JUMP_SLOT abort|148-124-1-0-22-5-0-0
36960|data|Elf32_Rel <0x17C98, 0x3716>; R_ARM_JUMP_SLOT close|152-124-1-0-22-55-0-0
36968|data|Elf32_Rel <0x17C9C, 0x3D16>; R_ARM_JUMP_SLOT forkpty|156-124-1-0-22-61-0-0
36976|data|Elf32_Rel <0x17CA0, 0x2116>; R_ARM_JUMP_SLOT __assert_fail|160-124-1-0-22-33-0-0
36984|data|Elf32_Rel <0x17CA4, 0x916>; R_ARM_JUMP_SLOT tcgetattr|164-124-1-0-22-9-0-0
36992|code|PUSH            {R3,LR}|8-181
36994|code|BL              sub_9A80|0-240-253-252
36998|code|NOP|0-191
37000|code|POP             {R3,PC}|8-189
37002|data|DCW 0|0-0
37004|code|PUSH            {LR}|4-224-45-229
37008|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x909C)|4-224-159-229
37012|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
37016|code|LDR             PC, [LR,#8]!|8-240-190-229
37020|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x909C|4-235-0-0
37024|code|ADR             R12, 0x90A8|0-198-143-226
37028|code|ADD             R12, R12, #0xE000|14-202-140-226
37032|code|LDR             PC, [R12,#(strstr_ptr - 0x170A8)]!; __imp_strstr|4-251-188-229
37036|code|ADR             R12, 0x90B4|0-198-143-226
37040|code|ADD             R12, R12, #0xE000|14-202-140-226
37044|code|LDR             PC, [R12,#(cfmakeraw_ptr - 0x170B4)]!; __imp_cfmakeraw|252-250-188-229
37048|code|ADR             R12, 0x90C0|0-198-143-226
37052|code|ADD             R12, R12, #0xE000|14-202-140-226
37056|code|LDR             PC, [R12,#(strcmp_ptr - 0x170C0)]!; __imp_strcmp|244-250-188-229
37060|code|ADR             R12, 0x90CC|0-198-143-226
37064|code|ADD             R12, R12, #0xE000|14-202-140-226
37068|code|LDR             PC, [R12,#(printf_ptr - 0x170CC)]!; __imp_printf|236-250-188-229
37072|code|ADR             R12, 0x90D8|0-198-143-226
37076|code|ADD             R12, R12, #0xE000|14-202-140-226
37080|code|LDR             PC, [R12,#(regerror_ptr - 0x170D8)]!; __imp_regerror|228-250-188-229
37084|code|ADR             R12, 0x90E4|0-198-143-226
37088|code|ADD             R12, R12, #0xE000|14-202-140-226
37092|code|LDR             PC, [R12,#(read_ptr - 0x170E4)]!; __imp_read|220-250-188-229
37096|code|ADR             R12, 0x90F0|0-198-143-226
37100|code|ADD             R12, R12, #0xE000|14-202-140-226
37104|code|LDR             PC, [R12,#(fflush_ptr - 0x170F0)]!; __imp_fflush|212-250-188-229
37108|code|ADR             R12, 0x90FC|0-198-143-226
37112|code|ADD             R12, R12, #0xE000|14-202-140-226
37116|code|LDR             PC, [R12,#(memmove_ptr - 0x170FC)]!; __imp_memmove|204-250-188-229
37120|code|BX              PC|120-71
37122|data|ALIGN 4|192-70
37124|code|ADR             R12, 0x910C|0-198-143-226
37128|code|ADD             R12, R12, #0xE000|14-202-140-226
37132|code|LDR             PC, [R12,#(free_ptr - 0x1710C)]!; __imp_free|192-250-188-229
37136|code|ADR             R12, 0x9118|0-198-143-226
37140|code|ADD             R12, R12, #0xE000|14-202-140-226
37144|code|LDR             PC, [R12,#(fgets_ptr - 0x17118)]!; __imp_fgets|184-250-188-229
37148|code|ADR             R12, 0x9124|0-198-143-226
37152|code|ADD             R12, R12, #0xE000|14-202-140-226
37156|code|LDR             PC, [R12,#(memcpy_ptr - 0x17124)]!; __imp_memcpy|176-250-188-229
37160|code|ADR             R12, 0x9130|0-198-143-226
37164|code|ADD             R12, R12, #0xE000|14-202-140-226
37168|code|LDR             PC, [R12,#(time_ptr - 0x17130)]!; __imp_time|168-250-188-229
37172|code|ADR             R12, 0x913C|0-198-143-226
37176|code|ADD             R12, R12, #0xE000|14-202-140-226
37180|code|LDR             PC, [R12,#(memcmp_ptr - 0x1713C)]!; __imp_memcmp|160-250-188-229
37184|code|ADR             R12, 0x9148|0-198-143-226
37188|code|ADD             R12, R12, #0xE000|14-202-140-226
37192|code|LDR             PC, [R12,#(ctime_ptr - 0x17148)]!; __imp_ctime|152-250-188-229
37196|code|ADR             R12, 0x9154|0-198-143-226
37200|code|ADD             R12, R12, #0xE000|14-202-140-226
37204|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x17154)]!; __imp___stack_chk_fail|144-250-188-229
37208|code|ADR             R12, 0x9160|0-198-143-226
37212|code|ADD             R12, R12, #0xE000|14-202-140-226
37216|code|LDR             PC, [R12,#(realloc_ptr - 0x17160)]!; __imp_realloc|136-250-188-229
37220|code|ADR             R12, 0x916C|0-198-143-226
37224|code|ADD             R12, R12, #0xE000|14-202-140-226
37228|code|LDR             PC, [R12,#(regexec_ptr - 0x1716C)]!; __imp_regexec|128-250-188-229
37232|code|ADR             R12, 0x9178|0-198-143-226
37236|code|ADD             R12, R12, #0xE000|14-202-140-226
37240|code|LDR             PC, [R12,#(poll_ptr - 0x17178)]!; __imp_poll|120-250-188-229
37244|code|ADR             R12, 0x9184|0-198-143-226
37248|code|ADD             R12, R12, #0xE000|14-202-140-226
37252|code|LDR             PC, [R12,#(sigaction_ptr - 0x17184)]!; __imp_sigaction|112-250-188-229
37256|code|ADR             R12, 0x9190|0-198-143-226
37260|code|ADD             R12, R12, #0xE000|14-202-140-226
37264|code|LDR             PC, [R12,#(fwrite_ptr - 0x17190)]!; __imp_fwrite|104-250-188-229
37268|code|ADR             R12, 0x919C|0-198-143-226
37272|code|ADD             R12, R12, #0xE000|14-202-140-226
37276|code|LDR             PC, [R12,#(strcat_ptr - 0x1719C)]!; __imp_strcat|96-250-188-229
37280|code|ADR             R12, 0x91A8|0-198-143-226
37284|code|ADD             R12, R12, #0xE000|14-202-140-226
37288|code|LDR             PC, [R12,#(regfree_ptr - 0x171A8)]!; __imp_regfree|88-250-188-229
37292|code|ADR             R12, 0x91B4|0-198-143-226
37296|code|ADD             R12, R12, #0xE000|14-202-140-226
37300|code|LDR             PC, [R12,#(usleep_ptr - 0x171B4)]!; __imp_usleep|80-250-188-229
37304|code|ADR             R12, 0x91C0|0-198-143-226
37308|code|ADD             R12, R12, #0xE000|14-202-140-226
37312|code|LDR             PC, [R12,#(tcsetattr_ptr - 0x171C0)]!; __imp_tcsetattr|72-250-188-229
37316|code|ADR             R12, 0x91CC|0-198-143-226
37320|code|ADD             R12, R12, #0xE000|14-202-140-226
37324|code|LDR             PC, [R12,#(strcpy_ptr - 0x171CC)]!; __imp_strcpy|64-250-188-229
37328|code|ADR             R12, 0x91D8|0-198-143-226
37332|code|ADD             R12, R12, #0xE000|14-202-140-226
37336|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x171D8)]!; __imp_gettimeofday|56-250-188-229
37340|code|ADR             R12, 0x91E4|0-198-143-226
37344|code|ADD             R12, R12, #0xE000|14-202-140-226
37348|code|LDR             PC, [R12,#(puts_ptr - 0x171E4)]!; __imp_puts|48-250-188-229
37352|code|ADR             R12, 0x91F0|0-198-143-226
37356|code|ADD             R12, R12, #0xE000|14-202-140-226
37360|code|LDR             PC, [R12,#(malloc_ptr - 0x171F0)]!; __imp_malloc|40-250-188-229
37364|code|ADR             R12, 0x91FC|0-198-143-226
37368|code|ADD             R12, R12, #0xE000|14-202-140-226
37372|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x171FC)]!; __imp___libc_start_main|32-250-188-229
37376|code|ADR             R12, 0x9208|0-198-143-226
37380|code|ADD             R12, R12, #0xE000|14-202-140-226
37384|code|LDR             PC, [R12,#(strerror_ptr - 0x17208)]!; __imp_strerror|24-250-188-229
37388|code|ADR             R12, 0x9214|0-198-143-226
37392|code|ADD             R12, R12, #0xE000|14-202-140-226
37396|code|LDR             PC, [R12,#(__ctype_tolower_loc_ptr - 0x17214)]!; __imp___ctype_tolower_loc|16-250-188-229
37400|code|BX              PC|120-71
37402|data|ALIGN 4|192-70
37404|code|ADR             R12, 0x9224|0-198-143-226
37408|code|ADD             R12, R12, #0xE000|14-202-140-226
37412|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x17224)]!; __imp___gmon_start__|4-250-188-229
37416|code|ADR             R12, 0x9230|0-198-143-226
37420|code|ADD             R12, R12, #0xE000|14-202-140-226
37424|code|LDR             PC, [R12,#(open_ptr - 0x17230)]!; __imp_open|252-249-188-229
37428|code|ADR             R12, 0x923C|0-198-143-226
37432|code|ADD             R12, R12, #0xE000|14-202-140-226
37436|code|LDR             PC, [R12,#(getopt_long_ptr - 0x1723C)]!; __imp_getopt_long|244-249-188-229
37440|code|ADR             R12, 0x9248|0-198-143-226
37444|code|ADD             R12, R12, #0xE000|14-202-140-226
37448|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x17248)]!; __imp___ctype_b_loc|236-249-188-229
37452|code|ADR             R12, 0x9254|0-198-143-226
37456|code|ADD             R12, R12, #0xE000|14-202-140-226
37460|code|LDR             PC, [R12,#(exit_ptr - 0x17254)]!; __imp_exit|228-249-188-229
37464|code|ADR             R12, 0x9260|0-198-143-226
37468|code|ADD             R12, R12, #0xE000|14-202-140-226
37472|code|LDR             PC, [R12,#(strtoul_ptr - 0x17260)]!; __imp_strtoul|220-249-188-229
37476|code|ADR             R12, 0x926C|0-198-143-226
37480|code|ADD             R12, R12, #0xE000|14-202-140-226
37484|code|LDR             PC, [R12,#(strlen_ptr - 0x1726C)]!; __imp_strlen|212-249-188-229
37488|code|ADR             R12, 0x9278|0-198-143-226
37492|code|ADD             R12, R12, #0xE000|14-202-140-226
37496|code|LDR             PC, [R12,#(strchr_ptr - 0x17278)]!; __imp_strchr|204-249-188-229
37500|code|ADR             R12, 0x9284|0-198-143-226
37504|code|ADD             R12, R12, #0xE000|14-202-140-226
37508|code|LDR             PC, [R12,#(fprintf_ptr - 0x17284)]!; __imp_fprintf|196-249-188-229
37512|code|ADR             R12, 0x9290|0-198-143-226
37516|code|ADD             R12, R12, #0xE000|14-202-140-226
37520|code|LDR             PC, [R12,#(fcntl_ptr - 0x17290)]!; __imp_fcntl|188-249-188-229
37524|code|ADR             R12, 0x929C|0-198-143-226
37528|code|ADD             R12, R12, #0xE000|14-202-140-226
37532|code|LDR             PC, [R12,#(__errno_location_ptr - 0x1729C)]!; __imp___errno_location|180-249-188-229
37536|code|ADR             R12, 0x92A8|0-198-143-226
37540|code|ADD             R12, R12, #0xE000|14-202-140-226
37544|code|LDR             PC, [R12,#(snprintf_ptr - 0x172A8)]!; __imp_snprintf|172-249-188-229
37548|code|ADR             R12, 0x92B4|0-198-143-226
37552|code|ADD             R12, R12, #0xE000|14-202-140-226
37556|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x172B4)]!; __imp___isoc99_sscanf|164-249-188-229
37560|code|ADR             R12, 0x92C0|0-198-143-226
37564|code|ADD             R12, R12, #0xE000|14-202-140-226
37568|code|LDR             PC, [R12,#(__strdup_ptr - 0x172C0)]!; __imp___strdup|156-249-188-229
37572|code|ADR             R12, 0x92CC|0-198-143-226
37576|code|ADD             R12, R12, #0xE000|14-202-140-226
37580|code|LDR             PC, [R12,#(lockf_ptr - 0x172CC)]!; __imp_lockf|148-249-188-229
37584|code|ADR             R12, 0x92D8|0-198-143-226
37588|code|ADD             R12, R12, #0xE000|14-202-140-226
37592|code|LDR             PC, [R12,#(memset_ptr - 0x172D8)]!; __imp_memset|140-249-188-229
37596|code|ADR             R12, 0x92E4|0-198-143-226
37600|code|ADD             R12, R12, #0xE000|14-202-140-226
37604|code|LDR             PC, [R12,#(strncpy_ptr - 0x172E4)]!; __imp_strncpy|132-249-188-229
37608|code|ADR             R12, 0x92F0|0-198-143-226
37612|code|ADD             R12, R12, #0xE000|14-202-140-226
37616|code|LDR             PC, [R12,#(__xpg_basename_ptr - 0x172F0)]!; __imp___xpg_basename|124-249-188-229
37620|code|ADR             R12, 0x92FC|0-198-143-226
37624|code|ADD             R12, R12, #0xE000|14-202-140-226
37628|code|LDR             PC, [R12,#(write_ptr - 0x172FC)]!; __imp_write|116-249-188-229
37632|code|ADR             R12, 0x9308|0-198-143-226
37636|code|ADD             R12, R12, #0xE000|14-202-140-226
37640|code|LDR             PC, [R12,#(memchr_ptr - 0x17308)]!; __imp_memchr|108-249-188-229
37644|code|ADR             R12, 0x9314|0-198-143-226
37648|code|ADD             R12, R12, #0xE000|14-202-140-226
37652|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x17314)]!; __imp_sigemptyset|100-249-188-229
37656|code|ADR             R12, 0x9320|0-198-143-226
37660|code|ADD             R12, R12, #0xE000|14-202-140-226
37664|code|LDR             PC, [R12,#(strrchr_ptr - 0x17320)]!; __imp_strrchr|92-249-188-229
37668|code|ADR             R12, 0x932C|0-198-143-226
37672|code|ADD             R12, R12, #0xE000|14-202-140-226
37676|code|LDR             PC, [R12,#(syslog_ptr - 0x1732C)]!; __imp_syslog|84-249-188-229
37680|code|ADR             R12, 0x9338|0-198-143-226
37684|code|ADD             R12, R12, #0xE000|14-202-140-226
37688|code|LDR             PC, [R12,#(sprintf_ptr - 0x17338)]!; __imp_sprintf|76-249-188-229
37692|code|ADR             R12, 0x9344|0-198-143-226
37696|code|ADD             R12, R12, #0xE000|14-202-140-226
37700|code|LDR             PC, [R12,#(regcomp_ptr - 0x17344)]!; __imp_regcomp|68-249-188-229
37704|code|ADR             R12, 0x9350|0-198-143-226
37708|code|ADD             R12, R12, #0xE000|14-202-140-226
37712|code|LDR             PC, [R12,#(vsnprintf_ptr - 0x17350)]!; __imp_vsnprintf|60-249-188-229
37716|code|ADR             R12, 0x935C|0-198-143-226
37720|code|ADD             R12, R12, #0xE000|14-202-140-226
37724|code|LDR             PC, [R12,#(qsort_ptr - 0x1735C)]!; __imp_qsort|52-249-188-229
37728|code|ADR             R12, 0x9368|0-198-143-226
37732|code|ADD             R12, R12, #0xE000|14-202-140-226
37736|code|LDR             PC, [R12,#(abort_ptr - 0x17368)]!; __imp_abort|44-249-188-229
37740|code|ADR             R12, 0x9374|0-198-143-226
37744|code|ADD             R12, R12, #0xE000|14-202-140-226
37748|code|LDR             PC, [R12,#(close_ptr - 0x17374)]!; __imp_close|36-249-188-229
37752|code|ADR             R12, 0x9380|0-198-143-226
37756|code|ADD             R12, R12, #0xE000|14-202-140-226
37760|code|LDR             PC, [R12,#(forkpty_ptr - 0x17380)]!; __imp_forkpty|28-249-188-229
37764|code|ADR             R12, 0x938C|0-198-143-226
37768|code|ADD             R12, R12, #0xE000|14-202-140-226
37772|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x1738C)]!; __imp___assert_fail|20-249-188-229
37776|code|ADR             R12, 0x9398|0-198-143-226
37780|code|ADD             R12, R12, #0xE000|14-202-140-226
37784|code|LDR             PC, [R12,#(tcgetattr_ptr - 0x17398)]!; __imp_tcgetattr|12-249-188-229
37788|data|ALIGN 0x10|0-0-0-0
37792|data|DCB 0x95|149
37793|data|DCB 0x4B, 0xA, 0x68|75-10-104
37796|code|PUSH.W          {R4-R11,LR}|45-233-240-79
37800|code|VPUSH           {D8}|45-237-2-139
37804|code|SUB             SP, SP, #0xF4|189-176
37806|code|LDR             R3, [R3]|27-104
37808|code|MOV             R5, R0|5-70
37810|code|MOV             R0, R2|16-70
37812|code|MOV             R4, R1|12-70
37814|code|MOV.W           R9, #0|79-240-0-9
37818|code|LDR             R6, =optarg|144-78
37820|code|STR             R3, [SP,#0xEC]|59-147
37822|code|LDR             R7, =dword_17CB4|144-79
37824|code|LDR.W           R8, =dword_17D38|223-248-168-130
37828|code|BLX             __xpg_basename|255-247-144-239
37832|code|BL              sub_A170|0-240-210-254
37836|code|MOV             R1, R4|33-70
37838|code|MOV             R0, R5|40-70
37840|code|LDR             R2, =aDTxT; "d:Tx:t:"|140-74
37842|code|MOV.W           LR, #0|79-240-0-14
37846|code|LDR             R3, =off_17CBC; "device"|140-75
37848|code|STR.W           LR, [SP]|205-248-0-224
37852|code|BLX             getopt_long|255-247-42-239
37856|code|ADDS            R1, R0, #1|65-28
37858|code|BEQ             loc_9458|57-208
37860|code|SUBS            R0, #0x54 ; 'T'; switch 37 cases|84-56
37862|code|CMP             R0, #0x24|36-40
37864|code|BHI             def_93EA; jumptable 000093EA default case, cases 85-99,101-115,117-119|20-216
37866|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
37870|data|DCB 0x31; jump table for switch statement|49
37871|data|DCB 0x13|19
37872|data|DCB 0x13|19
37873|data|DCB 0x13|19
37874|data|DCB 0x13|19
37875|data|DCB 0x13|19
37876|data|DCB 0x13|19
37877|data|DCB 0x13|19
37878|data|DCB 0x13|19
37879|data|DCB 0x13|19
37880|data|DCB 0x13|19
37881|data|DCB 0x13|19
37882|data|DCB 0x13|19
37883|data|DCB 0x13|19
37884|data|DCB 0x13|19
37885|data|DCB 0x13|19
37886|data|DCB 0x2E|46
37887|data|DCB 0x13|19
37888|data|DCB 0x13|19
37889|data|DCB 0x13|19
37890|data|DCB 0x13|19
37891|data|DCB 0x13|19
37892|data|DCB 0x13|19
37893|data|DCB 0x13|19
37894|data|DCB 0x13|19
37895|data|DCB 0x13|19
37896|data|DCB 0x13|19
37897|data|DCB 0x13|19
37898|data|DCB 0x13|19
37899|data|DCB 0x13|19
37900|data|DCB 0x13|19
37901|data|DCB 0x13|19
37902|data|DCB 0x21|33
37903|data|DCB 0x13|19
37904|data|DCB 0x13|19
37905|data|DCB 0x13|19
37906|data|DCB 0x15|21
37907|data|ALIGN 2|0
37908|code|BL              sub_9AC0; jumptable 000093EA default case, cases 85-99,101-115,117-119|0-240-84-251
37912|code|LDR             R0, [R6]; jumptable 000093EA case 120|48-104
37914|code|MOVS            R1, #0|0-33
37916|code|MOVS            R2, #0xA|10-34
37918|code|BLX             strtoul|255-247-28-239
37922|code|STR             R0, [R7]|56-96
37924|code|CMP             R0, #0|0-40
37926|code|BNE             loc_93CC|209-209
37928|code|LDR             R1, =aX10AttemptsMus; "X10 attempts must be >= 1"|120-73
37930|code|BL              sub_A198|0-240-181-254
37934|code|B               loc_93CC|205-231
37936|code|MOVS            R1, #0; jumptable 000093EA case 116|0-33
37938|code|MOVS            R2, #0xA|10-34
37940|code|LDR             R0, [R6]|48-104
37942|code|BLX             strtoul|255-247-16-239
37946|code|CMP             R0, #0|0-40
37948|code|STR             R0, [R7,#(dword_17CB8 - 0x17CB4)]|120-96
37950|code|BGT             loc_93CC|197-220
37952|code|MOVS            R0, #0|0-32
37954|code|LDR             R1, =aTimeoutMustBe1; "timeout must be >= 1 msec"|115-73
37956|code|BL              sub_A198|0-240-168-254
37960|code|B               loc_93CC|192-231
37962|code|LDR.W           R9, [R6]; jumptable 000093EA case 100|214-248-0-144
37966|code|B               loc_93CC|189-231
37968|code|MOVS            R3, #1; jumptable 000093EA case 84|1-35
37970|code|STR.W           R3, [R8]|200-248-0-48
37974|code|B               loc_93CC|185-231
37976|code|LDR             R3, =optind|110-75
37978|code|LDR             R3, [R3]|27-104
37980|code|CMP             R5, R3|157-66
37982|code|BGT             def_93EA; jumptable 000093EA default case, cases 85-99,101-115,117-119|217-220
37984|code|LDR.W           R10, =dword_17D38|223-248-8-162
37988|code|LDR.W           R3, [R10]|218-248-0-48
37992|code|CMP             R3, #0|0-43
37994|code|BNE.W           loc_96AA|64-240-30-129
37998|code|CMP.W           R9, #0|185-241-0-15
38002|code|BEQ             def_93EA; jumptable 000093EA default case, cases 85-99,101-115,117-119|207-208
38004|code|MOV             R0, R9|72-70
38006|code|MOV.W           R1, #0x102|79-244-129-113
38010|code|BLX             open|255-247-214-238
38014|code|CMP             R0, #0|0-40
38016|code|MOV             R11, R0|131-70
38018|code|BLT.W           loc_974C|192-242-99-129
38022|code|MOVS            R1, #2|2-33
38024|code|MOVS            R2, #0|0-34
38026|code|MOV             R0, R11|88-70
38028|code|BLX             lockf|255-247-26-239
38032|code|CMP             R0, #0|0-40
38034|code|BLT.W           loc_9740|192-242-85-129
38038|code|MOVS            R7, #0|0-39
38040|code|ADD             R1, SP, #0xB0|44-169
38042|code|MOV             R0, R11|88-70
38044|code|LDR             R6, =stdout|94-78
38046|code|BLX             tcgetattr|255-247-120-239
38050|code|MOV             R0, R11|88-70
38052|code|MOV             R1, R7|57-70
38054|code|ADD             R2, SP, #0xB0|44-170
38056|code|MOVS            R3, #1|1-35
38058|code|MOVW            LR, #0x8BE|64-246-190-14
38062|code|ADD             R4, SP, #0x30 ; '0'|12-172
38064|code|STR.W           LR, [SP,#0xB8]|205-248-184-224
38068|code|LDR             R5, =stdin|89-77
38070|code|MOV.W           LR, #5|79-240-5-14
38074|code|STR             R7, [SP,#0xBC]|47-151
38076|code|STR.W           LR, [SP,#0xB0]|205-248-176-224
38080|code|MOV.W           LR, #0x20 ; ' '|79-240-32-14
38084|code|STRB.W          R3, [SP,#0xC7]|141-248-199-48
38088|code|STR.W           LR, [SP,#0xB4]|205-248-180-224
38092|code|STRB.W          R3, [SP,#0xC6]|141-248-198-48
38096|code|BLX             tcsetattr|255-247-114-238
38100|code|MOV             R7, R4|39-70
38102|code|VLDR            D8, =1000.0|159-237-70-139
38106|code|LDR             R0, =aPlmpower; "plmpower> "|81-72
38108|code|BLX             printf|255-247-242-237
38112|code|LDR             R0, [R6]|48-104
38114|code|BLX             fflush|255-247-2-238
38118|code|LDR             R2, [R5]|42-104
38120|code|MOV             R0, R7|56-70
38122|code|MOVS            R1, #0x80|128-33
38124|code|BLX             fgets|255-247-16-238
38128|code|CMP             R0, #0|0-40
38130|code|BEQ             loc_958A|74-208
38132|code|MOV             R0, R7|56-70
38134|code|LDR             R1, =(aSUnknown+0xC); ""|75-73
38136|code|BL              sub_D760|4-240-50-249
38140|code|LDR             R4, [R0]|4-104
38142|code|MOV             R8, R0|128-70
38144|code|CMP             R4, #0|0-44
38146|code|BEQ             loc_957C|59-208
38148|code|MOV             R0, R4|32-70
38150|code|LDR             R1, =aHelp; "help"|72-73
38152|code|BLX             strcmp|255-247-214-237
38156|code|CMP             R0, #0|0-40
38158|code|BEQ             loc_95BA|84-208
38160|code|MOV             R0, R4|32-70
38162|code|LDR             R1, =aQuit; "quit"|70-73
38164|code|BLX             strcmp|255-247-208-237
38168|code|CMP             R0, #0|0-40
38170|code|BEQ             loc_9584|51-208
38172|code|MOV             R0, R4|32-70
38174|code|LDR             R1, =aInfo; "info"|68-73
38176|code|BLX             strcmp|255-247-202-237
38180|code|CMP             R0, #0|0-40
38182|code|BNE             loc_959C|57-209
38184|code|LDR.W           R3, [R10]|218-248-0-48
38188|code|CMP             R3, #0|0-43
38190|code|BNE             loc_95B2|64-209
38192|code|LDR             R1, =unk_E740|64-73
38194|code|MOVS            R2, #2|2-34
38196|code|ADD             R0, SP, #0x2C ; ','|11-168
38198|code|MOVS            R4, #9|9-36
38200|code|BLX             memcpy|255-247-240-237
38204|code|MOV             R0, R11|88-70
38206|code|ADD             R1, SP, #0x2C ; ','|11-169
38208|code|ADD             R3, SP, #0xB0|44-171
38210|code|MOVS            R2, #2|2-34
38212|code|STR             R4, [SP]|0-148
38214|code|BL              sub_9C08|0-240-95-251
38218|code|LDRB.W          LR, [SP,#0xB3]|157-248-179-224
38222|code|LDRB.W          R4, [SP,#0xB4]|157-248-180-64
38226|code|MOVS            R1, #0x40 ; '@'|64-33
38228|code|LDRB.W          R3, [SP,#0xB2]|157-248-178-48
38232|code|LDR             R2, =a2hhx2hhx2hhx; "%.2hhX.%.2hhX.%.2hhX"|55-74
38234|code|LDR             R0, =unk_17D3C|56-72
38236|code|STR.W           LR, [SP]|205-248-0-224
38240|code|STR             R4, [SP,#4]|1-148
38242|code|BLX             snprintf|255-247-158-238
38246|code|LDRB.W          R1, [SP,#0xB7]|157-248-183-16
38250|code|LDRB.W          R2, [SP,#0xB5]|157-248-181-32
38254|code|LDRB.W          R3, [SP,#0xB6]|157-248-182-48
38258|code|STR             R1, [SP]|0-145
38260|code|LDR             R0, =aIdSDev2hhx2hhx; "id=%s dev=%.2hhX.%.2hhX vers=%hhd\n"|50-72
38262|code|LDR             R1, =unk_17D3C|49-73
38264|code|BLX             printf|255-247-164-237
38268|code|MOV             R0, R8|64-70
38270|code|BL              sub_D8A0|4-240-143-249
38274|code|B               loc_94DA|170-231
38276|code|MOV             R0, R8|64-70
38278|code|BL              sub_D8A0|4-240-139-249
38282|code|MOV             R0, R11|88-70
38284|code|BLX             close|255-247-238-238
38288|code|CMP             R0, #0|0-40
38290|code|BLT.W           loc_9718|192-242-193-128
38294|code|MOVS            R0, #0|0-32
38296|code|BLX             exit|255-247-88-238
38300|code|MOV             R0, R4|32-70
38302|code|LDR             R1, =aReset; "reset"|41-73
38304|code|BLX             strcmp|255-247-138-237
38308|code|CMP             R0, #0|0-40
38310|code|BNE             loc_9670|99-209
38312|code|LDR.W           R3, [R10]|218-248-0-48
38316|code|CMP             R3, #0|0-43
38318|code|BEQ.W           loc_96D2|0-240-144-128
38322|code|LDR             R0, =aUnavailableInT; "Unavailable in test mode"|37-72
38324|code|BLX             puts|255-247-18-238
38328|code|B               loc_957C|224-231
38330|code|LDR             R0, =aValidCommandsA; "Valid commands are:"|36-72
38332|code|BLX             puts|255-247-14-238
38336|code|LDR             R0, =aInfoGetPlmInfo; "  info             get PLM info"|35-72
38338|code|BLX             puts|255-247-12-238
38342|code|LDR             R0, =aResetResetTheP; "  reset            reset the PLM (clear"...|35-72
38344|code|BLX             puts|255-247-8-238
38348|code|LDR             R0, =aOnAddrTurnOnDe; "  on     addr      turn on device"|34-72
38350|code|BLX             puts|255-247-6-238
38354|code|LDR             R0, =aOffAddrTurnOnD; "  off    addr      turn on device"|34-72
38356|code|BLX             puts|255-247-2-238
38360|code|LDR             R0, =aStatusAddrQuer; "  status addr      query status of devi"...|33-72
38362|code|BLX             puts|255-247-0-238
38366|code|LDR             R0, =aPingAddrTimeRo; "  ping   addr      time round trip requ"...|33-72
38368|code|BLX             puts|255-247-252-237
38372|code|LDR             R0, =aWhereAddrIsIns; "Where addr is Insteon (e.g. 1A.2B.3C) o"...|32-72
38374|code|BLX             puts|255-247-250-237
38378|code|B               loc_957C|199-231
38380|data|DCD 0x8000F3AF|175-243-0-128
38384|data|DCFD 1000.0|0-0-0-0-0-64-143-64
38392|data|DCD __stack_chk_guard|24-125-1-0
38396|data|DCD optarg|48-125-1-0
38400|data|DCD dword_17CB4|180-124-1-0
38404|data|DCD aDTxT; "d:Tx:t:"|36-232-0-0
38408|data|DCD off_17CBC; "device"|188-124-1-0
38412|data|DCD aX10AttemptsMus; "X10 attempts must be >= 1"|8-232-0-0
38416|data|DCD aTimeoutMustBe1; "timeout must be >= 1 msec"|236-231-0-0
38420|data|DCD optind|28-125-1-0
38424|data|DCD stdout|44-125-1-0
38428|data|DCD stdin|40-125-1-0
38432|data|DCD aPlmpower; "plmpower> "|84-232-0-0
38436|data|DCD aSUnknown+0xC; ""|216-234-0-0
38440|data|DCD aHelp; "help"|96-232-0-0
38444|data|DCD aQuit; "quit"|192-233-0-0
38448|data|DCD aInfo; "info"|200-233-0-0
38452|data|DCD unk_E740|64-231-0-0
38456|data|DCD a2hhx2hhx2hhx; "%.2hhX.%.2hhX.%.2hhX"|236-233-0-0
38460|data|DCD unk_17D3C|60-125-1-0
38464|data|DCD aIdSDev2hhx2hhx; "id=%s dev=%.2hhX.%.2hhX vers=%hhd\n"|4-234-0-0
38468|data|DCD aReset; "reset"|40-234-0-0
38472|data|DCD aUnavailableInT; "Unavailable in test mode"|208-233-0-0
38476|data|DCD aValidCommandsA; "Valid commands are:"|104-232-0-0
38480|data|DCD aInfoGetPlmInfo; "  info             get PLM info"|124-232-0-0
38484|data|DCD aResetResetTheP; "  reset            reset the PLM (clear"...|156-232-0-0
38488|data|DCD aOnAddrTurnOnDe; "  on     addr      turn on device"|212-232-0-0
38492|data|DCD aOffAddrTurnOnD; "  off    addr      turn on device"|248-232-0-0
38496|data|DCD aStatusAddrQuer; "  status addr      query status of devi"...|28-233-0-0
38500|data|DCD aPingAddrTimeRo; "  ping   addr      time round trip requ"...|72-233-0-0
38504|data|DCD aWhereAddrIsIns; "Where addr is Insteon (e.g. 1A.2B.3C) o"...|136-233-0-0
38508|data|DCD dword_17D38|56-125-1-0
38512|code|LDRB            R3, [R4]|35-120
38514|code|CMP             R3, #0x6F ; 'o'|111-43
38516|code|BEQ             loc_96B4|30-208
38518|code|MOV             R0, R4|32-70
38520|code|LDR             R1, =aStatus; "status"|170-73
38522|code|BLX             strcmp|255-247-30-237
38526|code|CMP             R0, #0|0-40
38528|code|BEQ             loc_9724|80-208
38530|code|MOV             R0, R4|32-70
38532|code|LDR             R1, =aPing; "ping"|168-73
38534|code|BLX             strcmp|255-247-24-237
38538|code|CMP             R0, #0|0-40
38540|code|BNE             loc_9738|84-209
38542|code|LDR.W           R4, [R10]|218-248-0-64
38546|code|CMP             R4, #0|0-44
38548|code|BNE             loc_95B2|141-209
38550|code|MOV             R0, R8|64-70
38552|code|BL              sub_D70C|4-240-56-248
38556|code|CMP             R0, #2|2-40
38558|code|BEQ.W           loc_9822|0-240-192-128
38562|code|LDR             R0, =aUsagePingAddr; "Usage: ping addr"|162-72
38564|code|BLX             puts|255-247-154-237
38568|code|B               loc_957C|104-231
38570|code|LDR             R6, =stdout|161-78
38572|code|ADD             R4, SP, #0x30 ; '0'|12-172
38574|code|LDR             R5, =stdin|161-77
38576|code|MOV             R11, R0|131-70
38578|code|B               loc_94D4|15-231
38580|code|LDRB            R3, [R4,#1]|99-120
38582|code|CMP             R3, #0x6E ; 'n'|110-43
38584|code|BNE             loc_96F4|28-209
38586|code|LDRB            R3, [R4,#2]|163-120
38588|code|CMP             R3, #0|0-43
38590|code|BNE             loc_9676|218-209
38592|code|MOV             R0, R8|64-70
38594|code|BL              sub_D70C|4-240-35-248
38598|code|CMP             R0, #2|2-40
38600|code|BEQ             loc_9758|70-208
38602|code|LDR             R0, =aUsageOnAddr; "Usage: on addr"|155-72
38604|code|BLX             puts|255-247-134-237
38608|code|B               loc_957C|84-231
38610|code|MOVS            R2, #2|2-34
38612|code|ADD             R0, SP, #0x2C ; ','|11-168
38614|code|LDR             R1, =unk_E744|153-73
38616|code|BLX             memcpy|255-247-32-237
38620|code|MOVS            R3, #3|3-35
38622|code|MOV             R0, R11|88-70
38624|code|STR             R3, [SP]|0-147
38626|code|ADD             R1, SP, #0x2C ; ','|11-169
38628|code|MOVS            R2, #2|2-34
38630|code|ADD             R3, SP, #0x28 ; '('|10-171
38632|code|BL              sub_9C08|0-240-142-250
38636|code|LDR             R0, =aPlmResetComple; "PLM reset complete"|148-72
38638|code|BLX             puts|255-247-118-237
38642|code|B               loc_957C|67-231
38644|code|CMP             R3, #0x66 ; 'f'|102-43
38646|code|BNE             loc_9676|190-209
38648|code|LDRB            R3, [R4,#2]|163-120
38650|code|CMP             R3, #0x66 ; 'f'|102-43
38652|code|BNE             loc_9676|187-209
38654|code|LDRB            R2, [R4,#3]|226-120
38656|code|STR             R2, [SP,#0xC]|3-146
38658|code|CMP             R2, #0|0-42
38660|code|BNE             loc_9676|183-209
38662|code|MOV             R0, R8|64-70
38664|code|BL              sub_D70C|4-240-0-248
38668|code|CMP             R0, #2|2-40
38670|code|BEQ             loc_97BC|85-208
38672|code|LDR             R0, =aUsageOffAddr; "Usage: off addr"|140-72
38674|code|BLX             puts|255-247-100-237
38678|code|B               loc_957C|49-231
38680|code|MOVS            R0, #1|1-32
38682|code|LDR             R1, =aErrorClosingS; "error closing %s"|139-73
38684|code|MOV             R2, R9|74-70
38686|code|BL              sub_A198|0-240-59-253
38690|code|B               loc_9596|56-231
38692|code|MOV             R0, R8|64-70
38694|code|BL              sub_D70C|3-240-241-255
38698|code|CMP             R0, #2|2-40
38700|code|BEQ.W           loc_98D0|0-240-208-128
38704|code|LDR             R0, =aUsageStatusAdd; "Usage: status addr"|134-72
38706|code|BLX             puts|255-247-84-237
38710|code|B               loc_957C|33-231
38712|code|LDR             R0, =aTypeHelpForALi; "type \"help\" for a list of commands"|133-72
38714|code|BLX             puts|255-247-80-237
38718|code|B               loc_957C|29-231
38720|code|MOVS            R0, #1|1-32
38722|code|LDR             R1, =aCouldNotLockS; "could not lock %s"|132-73
38724|code|MOV             R2, R9|74-70
38726|code|BL              sub_A198|0-240-39-253
38730|code|B               loc_9496|164-230
38732|code|MOVS            R0, #1|1-32
38734|code|LDR             R1, =aCouldNotOpenS; "could not open %s"|130-73
38736|code|MOV             R2, R9|74-70
38738|code|BL              sub_A198|0-240-33-253
38742|code|B               loc_9486|150-230
38744|code|LDR.W           R4, [R8,#4]|216-248-4-64
38748|code|ADD             R1, SP, #0x28 ; '('|10-169
38750|code|MOV             R0, R4|32-70
38752|code|BL              sub_9D5C|0-240-252-250
38756|code|CMP             R0, #0|0-40
38758|code|BEQ.W           loc_9904|0-240-205-128
38762|code|LDR.W           R3, [R10]|218-248-0-48
38766|code|CMP             R3, #0|0-43
38768|code|BNE.W           loc_9996|64-240-17-129
38772|code|LDR             R3, =dword_17CB4|121-75
38774|code|ADD.W           R4, SP, #0x2F ; '/'|13-241-47-4
38778|code|STR.W           R9, [SP,#0x10]|205-248-16-144
38782|code|MOV             R9, R8|193-70
38784|code|MOV             R8, R5|168-70
38786|code|MOV             R5, R3|29-70
38788|code|STR             R3, [SP,#0xC]|3-147
38790|code|MOVS            R3, #0xFF|255-35
38792|code|MOV             R0, R11|88-70
38794|code|ADD             R1, SP, #0x28 ; '('|10-169
38796|code|MOVS            R2, #0x12|18-34
38798|code|BL              sub_9C50|0-240-95-250
38802|code|MOV             R0, R11|88-70
38804|code|ADD             R1, SP, #0x28 ; '('|10-169
38806|code|MOV             R2, R4|34-70
38808|code|LDR             R3, [R5,#(dword_17CB8 - 0x17CB4)]|107-104
38810|code|BL              sub_9DE8|0-240-37-251
38814|code|CMP             R0, #0|0-40
38816|code|BEQ             loc_9786|241-208
38818|code|LDRB.W          R0, [SP,#0x2F]|157-248-47-0
38822|code|MOV             R5, R8|69-70
38824|code|MOV             R8, R9|200-70
38826|code|LDR.W           R9, [SP,#0x10]|221-248-16-144
38830|code|CMP             R0, #0|0-40
38832|code|BNE.W           loc_957C|127-244-228-174
38836|code|LDR             R1, =aOnCommandFaile; "on command failed"|106-73
38838|code|BL              sub_A198|0-240-239-252
38842|code|B               loc_957C|223-230
38844|code|LDR.W           R4, [R8,#4]|216-248-4-64
38848|code|ADD             R1, SP, #0x28 ; '('|10-169
38850|code|MOV             R0, R4|32-70
38852|code|BL              sub_9D5C|0-240-202-250
38856|code|CMP             R0, #0|0-40
38858|code|BEQ.W           loc_99E2|0-240-10-129
38862|code|LDR.W           R3, [R10]|218-248-0-48
38866|code|CMP             R3, #0|0-43
38868|code|BNE.W           loc_99D8|64-240-0-129
38872|code|LDR             R3, =dword_17CB4|96-75
38874|code|ADD.W           R4, SP, #0x2F ; '/'|13-241-47-4
38878|code|STR.W           R9, [SP,#0x10]|205-248-16-144
38882|code|MOV             R9, R8|193-70
38884|code|MOV             R8, R5|168-70
38886|code|MOV             R5, R3|29-70
38888|code|STR             R3, [SP,#0xC]|3-147
38890|code|MOVS            R3, #0|0-35
38892|code|MOV             R0, R11|88-70
38894|code|ADD             R1, SP, #0x28 ; '('|10-169
38896|code|MOVS            R2, #0x14|20-34
38898|code|BL              sub_9C50|0-240-45-250
38902|code|MOV             R0, R11|88-70
38904|code|ADD             R1, SP, #0x28 ; '('|10-169
38906|code|MOV             R2, R4|34-70
38908|code|LDR             R3, [R5,#(dword_17CB8 - 0x17CB4)]|107-104
38910|code|BL              sub_9DE8|0-240-243-250
38914|code|CMP             R0, #0|0-40
38916|code|BEQ             loc_97EA|241-208
38918|code|LDRB.W          R3, [SP,#0x2F]|157-248-47-48
38922|code|MOV             R5, R8|69-70
38924|code|MOV             R8, R9|200-70
38926|code|LDR.W           R9, [SP,#0x10]|221-248-16-144
38930|code|CMP             R3, #0|0-43
38932|code|BEQ.W           loc_957C|63-244-178-174
38936|code|MOVS            R0, #0|0-32
38938|code|LDR             R1, =aOffCommandFail; "off command failed"|82-73
38940|code|BL              sub_A198|0-240-188-252
38944|code|B               loc_957C|172-230
38946|code|LDR.W           R3, [R8,#4]|216-248-4-48
38950|code|ADD             R1, SP, #0x28 ; '('|10-169
38952|code|MOV             R0, R3|24-70
38954|code|STR             R3, [SP,#0x10]|4-147
38956|code|BL              sub_9D5C|0-240-150-250
38960|code|MOV             R3, R0|3-70
38962|code|CMP             R0, #0|0-40
38964|code|BEQ.W           loc_997C|0-240-162-128
38968|code|MOV             R1, R4|33-70
38970|code|ADD             R0, SP, #0x18|6-168
38972|code|BLX             gettimeofday|255-247-200-236
38976|code|CMP             R0, #0|0-40
38978|code|BLT.W           loc_9A24|192-242-239-128
38982|code|LDR             R2, =dword_17CB4|69-74
38984|code|MOVS            R4, #0|0-36
38986|code|STR.W           R9, [SP,#0x14]|205-248-20-144
38990|code|MOV             R9, R8|193-70
38992|code|MOV             R8, R5|168-70
38994|code|STR             R2, [SP,#0xC]|3-146
38996|code|B               loc_9858|0-224
38998|code|MOV             R4, R5|44-70
39000|code|MOVS            R2, #0x10|16-34
39002|code|MOVS            R3, #0|0-35
39004|code|MOV             R0, R11|88-70
39006|code|ADD             R1, SP, #0x28 ; '('|10-169
39008|code|BL              sub_9C50|0-240-246-249
39012|code|LDR             R5, [SP,#0xC]|3-157
39014|code|MOV             R0, R11|88-70
39016|code|ADD             R1, SP, #0x28 ; '('|10-169
39018|code|MOVS            R2, #0|0-34
39020|code|LDR             R3, [R5,#4]|107-104
39022|code|ADDS            R5, R4, #1|101-28
39024|code|BL              sub_9DE8|0-240-186-250
39028|code|CMP             R0, #0|0-40
39030|code|BEQ             loc_9856|238-208
39032|code|MOVS            R1, #0|0-33
39034|code|ADD             R0, SP, #0x20 ; ' '|8-168
39036|code|MOV             R5, R8|69-70
39038|code|MOV             R8, R9|200-70
39040|code|LDR.W           R9, [SP,#0x14]|221-248-20-144
39044|code|BLX             gettimeofday|255-247-164-236
39048|code|CMP             R0, #0|0-40
39050|code|BLT.W           loc_9A1A|192-242-198-128
39054|code|LDR             R1, [SP,#0x24]|9-153
39056|code|LDR             R2, [SP,#0x1C]|7-154
39058|code|LDR             R3, [SP,#0x18]|6-155
39060|code|LDR             R0, [SP,#0x20]|8-152
39062|code|SUBS            R2, R1, R2|138-26
39064|code|RSB.W           R3, R3, R0|195-235-0-3
39068|code|BPL             loc_98A8|4-213
39070|code|ADD.W           R2, R2, #0xF4000|2-245-116-34
39074|code|SUBS            R3, #1|1-59
39076|code|ADD.W           R2, R2, #0x240|2-245-16-114
39080|code|VMOV            S11, R2|5-238-144-42
39084|code|VCVT.F64.S32    D7, S11|184-238-229-123
39088|code|VMOV            S11, R3|5-238-144-58
39092|code|LDR             R1, [SP,#0x10]|4-153
39094|code|MOV             R2, R4|34-70
39096|code|LDR             R0, =aPingFromSRetri; "PING from %s: retries=%d time=%.2lf ms"...|43-72
39098|code|VDIV.F64        D7, D7, D8|135-238-8-123
39102|code|VCVT.F64.S32    D6, S11|184-238-229-107
39106|code|VMLA.F64        D7, D6, D8|6-238-8-123
39110|code|VSTR            D7, [SP]|141-237-0-123
39114|code|BLX             printf|255-247-252-235
39118|code|B               loc_957C|85-230
39120|code|LDR.W           R3, [R8,#4]|216-248-4-48
39124|code|ADD             R1, SP, #0x28 ; '('|10-169
39126|code|MOV             R0, R3|24-70
39128|code|STR             R3, [SP,#0x10]|4-147
39130|code|BL              sub_9D5C|0-240-63-250
39134|code|CMP             R0, #0|0-40
39136|code|BEQ.W           loc_9A04|0-240-144-128
39140|code|LDR.W           R3, [R10]|218-248-0-48
39144|code|CMP             R3, #0|0-43
39146|code|BEQ             loc_99A0|89-208
39148|code|LDR             R3, =dword_17D38|31-75
39150|code|LDRB.W          R3, [R3,#(byte_17D7C - 0x17D38)]|147-248-68-48
39154|code|STRB.W          R3, [SP,#0x2F]|141-248-47-48
39158|code|LDRB.W          R2, [SP,#0x2F]|157-248-47-32
39162|code|LDR             R1, [SP,#0x10]|4-153
39164|code|LDR             R0, =aS2hhx; "%s: %.2hhX\n"|28-72
39166|code|BLX             printf|255-247-226-235
39170|code|B               loc_957C|59-230
39172|code|MOV             R0, R4|32-70
39174|code|ADD             R1, SP, #0x2C ; ','|11-169
39176|code|BL              sub_9D84|0-240-60-250
39180|code|CBZ             R0, loc_9974|144-179
39182|code|LDR.W           R3, [R10]|218-248-0-48
39186|code|CMP             R3, #0|0-43
39188|code|BNE.W           loc_957C|127-244-50-174
39192|code|MOV             R0, R11|88-70
39194|code|ADD             R1, SP, #0x2C ; ','|11-169
39196|code|MOVS            R2, #2|2-34
39198|code|BL              sub_9CC0|0-240-207-249
39202|code|B               loc_957C|43-230
39204|data|DCD aStatus; "status"|164-234-0-0
39208|data|DCD aPing; "ping"|220-234-0-0
39212|data|DCD aUsagePingAddr; "Usage: ping addr"|228-234-0-0
39216|data|DCD stdout|44-125-1-0
39220|data|DCD stdin|40-125-1-0
39224|data|DCD aUsageOnAddr; "Usage: on addr"|68-234-0-0
39228|data|DCD unk_E744|68-231-0-0
39232|data|DCD aPlmResetComple; "PLM reset complete"|48-234-0-0
39236|data|DCD aUsageOffAddr; "Usage: off addr"|128-234-0-0
39240|data|DCD aErrorClosingS; "error closing %s"|120-235-0-0
39244|data|DCD aUsageStatusAdd; "Usage: status addr"|172-234-0-0
39248|data|DCD aTypeHelpForALi; "type \"help\" for a list of commands"|84-235-0-0
39252|data|DCD aCouldNotLockS; "could not lock %s"|64-232-0-0
39256|data|DCD aCouldNotOpenS; "could not open %s"|44-232-0-0
39260|data|DCD dword_17CB4|180-124-1-0
39264|data|DCD aOnCommandFaile; "on command failed"|84-234-0-0
39268|data|DCD aOffCommandFail; "off command failed"|144-234-0-0
39272|data|DCD aPingFromSRetri; "PING from %s: retries=%d time=%.2lf ms"...|8-235-0-0
39276|data|DCD dword_17D38|56-125-1-0
39280|data|DCD aS2hhx; "%s: %.2hhX\n"|192-234-0-0
39284|code|LDR             R1, =aCouldNotParseA; "could not parse address"|46-73
39286|code|BL              err|0-240-39-252
39290|code|B               loc_957C|255-229
39292|code|LDR             R0, [SP,#0x10]|4-152
39294|code|ADD             R1, SP, #0x2C ; ','|11-169
39296|code|STR             R3, [SP,#8]|2-147
39298|code|BL              sub_9D84|0-240-255-249
39302|code|LDR             R3, [SP,#8]|2-155
39304|code|CMP             R0, #0|0-40
39306|code|BEQ             loc_9974|243-208
39308|code|MOV             R0, R3|24-70
39310|code|LDR             R1, =aPingIsOnlyForI; "ping is only for Insteon devices"|41-73
39312|code|BL              err|0-240-26-252
39316|code|B               loc_957C|242-229
39318|code|LDR             R3, =dword_17D38|40-75
39320|code|MOVS            R2, #1|1-34
39322|code|STRB.W          R2, [R3,#(byte_17D7C - 0x17D38)]|131-248-68-32
39326|code|B               loc_957C|237-229
39328|code|LDR             R2, =dword_17CB4|38-74
39330|code|ADD.W           R4, SP, #0x2F ; '/'|13-241-47-4
39334|code|STR.W           R9, [SP,#0x14]|205-248-20-144
39338|code|MOV             R9, R8|193-70
39340|code|MOV             R8, R5|168-70
39342|code|MOV             R5, R2|21-70
39344|code|STR             R2, [SP,#0xC]|3-146
39346|code|MOVS            R3, #0|0-35
39348|code|MOV             R0, R11|88-70
39350|code|ADD             R1, SP, #0x28 ; '('|10-169
39352|code|MOVS            R2, #0x19|25-34
39354|code|BL              sub_9C50|0-240-73-249
39358|code|MOV             R0, R11|88-70
39360|code|ADD             R1, SP, #0x28 ; '('|10-169
39362|code|MOV             R2, R4|34-70
39364|code|LDR             R3, [R5,#(dword_17CB8 - 0x17CB4)]|107-104
39366|code|BL              sub_9DE8|0-240-15-250
39370|code|CMP             R0, #0|0-40
39372|code|BEQ             loc_99B2|241-208
39374|code|MOV             R5, R8|69-70
39376|code|MOV             R8, R9|200-70
39378|code|LDR.W           R9, [SP,#0x14]|221-248-20-144
39382|code|B               loc_98F6|142-231
39384|code|LDR             R3, =dword_17D38|23-75
39386|code|LDR             R2, [SP,#0xC]|3-154
39388|code|STRB.W          R2, [R3,#(byte_17D7C - 0x17D38)]|131-248-68-32
39392|code|B               loc_957C|204-229
39394|code|MOV             R0, R4|32-70
39396|code|ADD             R1, SP, #0x2C ; ','|11-169
39398|code|BL              sub_9D84|0-240-205-249
39402|code|CMP             R0, #0|0-40
39404|code|BEQ             loc_9974|194-208
39406|code|LDR.W           R3, [R10]|218-248-0-48
39410|code|CMP             R3, #0|0-43
39412|code|BNE.W           loc_957C|127-244-194-173
39416|code|MOV             R0, R11|88-70
39418|code|ADD             R1, SP, #0x2C ; ','|11-169
39420|code|MOVS            R2, #3|3-34
39422|code|BL              sub_9CC0|0-240-95-249
39426|code|B               loc_957C|187-229
39428|code|LDR             R0, [SP,#0x10]|4-152
39430|code|ADD             R1, SP, #0x2C ; ','|11-169
39432|code|BL              sub_9D84|0-240-188-249
39436|code|CMP             R0, #0|0-40
39438|code|BEQ             loc_9974|177-208
39440|code|LDR             R1, [SP,#0x10]|4-153
39442|code|LDR             R0, =aSUnknown; "%s: unknown\n"|11-72
39444|code|BLX             printf|255-247-86-235
39448|code|B               loc_957C|176-229
39450|code|MOVS            R0, #1|1-32
39452|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|9-73
39454|code|BL              sub_A198|0-240-187-251
39458|code|B               loc_988E|52-231
39460|code|MOVS            R0, #1|1-32
39462|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|7-73
39464|code|BL              sub_A198|0-240-182-251
39468|code|B               loc_9846|11-231
39470|data|ALIGN 0x10|0-191
39472|data|DCD aCouldNotParseA; "could not parse address"|104-234-0-0
39476|data|DCD aPingIsOnlyForI; "ping is only for Insteon devices"|48-235-0-0
39480|data|DCD dword_17D38|56-125-1-0
39484|data|DCD dword_17CB4|180-124-1-0
39488|data|DCD aSUnknown; "%s: unknown\n"|204-234-0-0
39492|data|DCD aGettimeofday_0; "gettimeofday"|248-234-0-0
39496|code|MOV.W           R11, #0|79-240-0-11
39500|code|MOV.W           LR, #0|79-240-0-14
39504|code|POP.W           {R1}; argc|93-248-4-27
39508|code|MOV             R2, SP; ubp_av|106-70
39510|code|PUSH.W          {R2}; stack_end|77-248-4-45
39514|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
39518|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
39522|code|PUSH.W          {R12}; fini|77-248-4-205
39526|code|LDR             R0, =byte_93A1; main|4-72
39528|code|LDR             R3, =(sub_E6AC+1); init|4-75
39530|code|BLX             __libc_start_main|255-247-196-235
39534|code|BLX             abort|255-247-120-236
39538|data|ALIGN 4|0-0
39540|data|DCD nullsub_1+1|241-230-0-0
39544|data|DCD byte_93A1|161-147-0-0
39548|data|DCD sub_E6AC+1|173-230-0-0
39552|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9A88)|3-75
39554|code|LDR             R2, =(__gmon_start___ptr_0 - 0x17BA0)|4-74
39556|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
39558|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
39560|code|CBZ             R3, locret_9A8E|11-177
39562|code|B.W             j___gmon_start__|255-247-197-187
39566|code|BX              LR|112-71
39568|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9A88|24-225-0-0
39572|data|DCD __gmon_start___ptr_0 - 0x17BA0|8-1-0-0
39576|code|LDR             R3, =byte_17D34|2-75
39578|code|LDRB            R2, [R3]|26-120
39580|code|CBNZ            R2, locret_9AA2|10-185
39582|code|MOVS            R2, #1|1-34
39584|code|STRB            R2, [R3]|26-112
39586|code|BX              LR|112-71
39588|data|DCD byte_17D34|52-125-1-0
39592|code|LDR             R0, =dword_17A9C|3-72
39594|code|PUSH            {R3,LR}|8-181
39596|code|LDR             R3, [R0]|3-104
39598|code|CBZ             R3, locret_9AB6|19-177
39600|code|LDR             R3, =0|2-75
39602|code|CBZ             R3, locret_9AB6|3-177
39604|code|BLX             R3|152-71
39606|code|POP             {R3,PC}|8-189
39608|data|DCD dword_17A9C|156-122-1-0
39612|data|DCD 0|0-0-0-0
39616|code|PUSH            {R3,LR}|8-181
39618|code|MOV             R3, #0x17D20|71-246-32-83-192-242-1-3
39626|code|MOVW            R0, #0xE748|78-242-72-112
39630|code|MOVS            R1, #1; size|1-33
39632|code|MOVT.W          R0, #0; ptr|192-242-0-0
39636|code|LDR             R3, [R3]; s|27-104
39638|code|MOVS            R2, #0x1B; n|27-34
39640|code|BLX             fwrite|255-247-86-235
39644|code|MOVS            R0, #1; status|1-32
39646|code|BLX             exit|255-247-182-235
39650|data|ALIGN 4|0-191
39652|code|PUSH.W          {R4-R8,LR}|45-233-240-65
39656|code|MOV             R5, R1|13-70
39658|code|LDR             R6, =__stack_chk_guard|68-78
39660|code|SUB             SP, SP, #0x20|136-176
39662|code|MOV             R4, R0|4-70
39664|code|MOV             R7, R2|23-70
39666|code|MOV             R8, R3|152-70
39668|code|LDR             R1, [R6]|49-104
39670|code|STR             R1, [SP,#0x38+var_1C]|7-145
39672|code|MOVS            R2, #1; jumptable 00009B34 case 5|1-34
39674|code|MOV             R0, R4; fd|32-70
39676|code|MOV             R1, SP|105-70
39678|code|BL              sub_D974|3-240-57-255
39682|code|LDRB.W          R2, [SP,#0x38+var_38]|157-248-0-32
39686|code|CMP             R2, #0x15|21-42
39688|code|BEQ             loc_9B7A|55-208
39690|code|CMP             R2, #2|2-42
39692|code|BEQ             loc_9B16|3-208
39694|code|MOVS            R0, #0|0-32
39696|code|LDR             R1, =aExpectedImStxO; "expected IM_STX or IM_NAK, got %.2hhX"|59-73
39698|code|BL              sub_A198|0-240-65-251
39702|code|MOVS            R2, #1|1-34
39704|code|MOV             R0, R4; fd|32-70
39706|code|ADD.W           R1, SP, #0x38+var_37|13-241-1-1
39710|code|BL              sub_D974|3-240-41-255
39714|code|LDRB.W          R2, [SP,#0x38+var_37]|157-248-1-32
39718|code|CMP             R2, R5|170-66
39720|code|BEQ             loc_9BDA|87-208
39722|code|SUB.W           R3, R2, #0x50 ; 'P'|162-241-80-3
39726|code|CMP             R3, #8; switch 9 cases|8-43
39728|code|BHI             def_9B34; jumptable 00009B34 default case|71-216
39730|code|ADR             R1, jpt_9B34|1-161
39732|code|LDR.W           PC, [R1,R3,LSL#2]; switch jump|81-248-35-240
39736|data|DCD loc_9BB4+1; jump table for switch statement|181-155-0-0-167-155-0-0-153-155-0-0-93-155-0-0-139-155-0-0-249-154-0-0-205-155-0-0-93-155-0-0-139-155-0-0
39772|code|MOVS            R2, #8; jumptable 00009B34 cases 3,7|8-34
39774|code|MOV             R0, R4; fd|32-70
39776|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39780|code|BL              sub_D974|3-240-6-255
39784|code|MOVS            R2, #1|1-34
39786|code|MOV             R0, R4; fd|32-70
39788|code|MOV             R1, SP|105-70
39790|code|BL              sub_D974|3-240-1-255
39794|code|LDRB.W          R2, [SP,#0x38+var_38]|157-248-0-32
39798|code|CMP             R2, #0x15|21-42
39800|code|BNE             loc_9B0A|199-209
39802|code|MOVS            R0, #1|1-32
39804|code|LDR             R2, [SP,#0x38+var_1C]|7-154
39806|code|LDR             R3, [R6]|51-104
39808|code|CMP             R2, R3|154-66
39810|code|BNE             loc_9BF6|56-209
39812|code|ADD             SP, SP, #0x20 ; ' '|8-176
39814|code|POP.W           {R4-R8,PC}|189-232-240-129
39818|code|MOV             R0, R4; jumptable 00009B34 cases 4,8|32-70
39820|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39824|code|MOVS            R2, #1|1-34
39826|code|BL              sub_D974|3-240-239-254
39830|code|B               loc_9AF8; jumptable 00009B34 case 5|175-231
39832|code|MOV             R0, R4; jumptable 00009B34 case 2|32-70
39834|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39838|code|MOVS            R2, #2|2-34
39840|code|BL              sub_D974|3-240-232-254
39844|code|B               loc_9AF8; jumptable 00009B34 case 5|168-231
39846|code|MOV             R0, R4; jumptable 00009B34 case 1|32-70
39848|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39852|code|MOVS            R2, #0x17|23-34
39854|code|BL              sub_D974|3-240-225-254
39858|code|B               loc_9AF8; jumptable 00009B34 case 5|161-231
39860|code|MOV             R0, R4; jumptable 00009B34 case 0|32-70
39862|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39866|code|MOVS            R2, #9|9-34
39868|code|BL              sub_D974|3-240-218-254
39872|code|B               loc_9AF8; jumptable 00009B34 case 5|154-231
39874|code|MOVS            R0, #0; jumptable 00009B34 default case|0-32
39876|code|LDR             R1, =aUnexpectedComm; "unexpected command: %.2hhX"|15-73
39878|code|BL              sub_A198|0-240-231-250
39882|code|B               loc_9AF8; jumptable 00009B34 case 5|149-231
39884|code|MOV             R0, R4; jumptable 00009B34 case 6|32-70
39886|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39890|code|MOVS            R2, #5|5-34
39892|code|BL              sub_D974|3-240-206-254
39896|code|B               loc_9AF8; jumptable 00009B34 case 5|142-231
39898|code|SUB.W           R2, R8, #2|168-241-2-2
39902|code|MOV             R0, R4; fd|32-70
39904|code|ADD.W           R1, SP, #0x38+var_36|13-241-2-1
39908|code|BL              sub_D974|3-240-198-254
39912|code|MOV             R0, R7; dest|56-70
39914|code|MOV             R1, SP; src|105-70
39916|code|MOV             R2, R8; n|66-70
39918|code|BLX             memcpy|255-247-150-234
39922|code|MOVS            R0, #0|0-32
39924|code|B               loc_9B7C|194-231
39926|code|BLX             __stack_chk_fail|255-247-170-234
39930|data|ALIGN 4|0-191
39932|data|DCD __stack_chk_guard|24-125-1-0
39936|data|DCD aExpectedImStxO; "expected IM_STX or IM_NAK, got %.2hhX"|100-231-0-0
39940|data|DCD aUnexpectedComm; "unexpected command: %.2hhX"|140-231-0-0
39944|code|PUSH.W          {R3-R9,LR}|45-233-248-67
39948|code|MOV             R6, R3|30-70
39950|code|LDR             R7, [SP,#0x20+arg_0]|8-159
39952|code|MOV             R5, R0|5-70
39954|code|MOV             R4, R1|12-70
39956|code|MOV             R8, R2|144-70
39958|code|ADD.W           R9, R7, #0xFFFFFFFF|7-241-255-57
39962|code|ADD             R9, R3|153-68
39964|code|MOV             R0, R5; fd|40-70
39966|code|MOV             R1, R4|33-70
39968|code|MOV             R2, R8|66-70
39970|code|BL              sub_D93C|3-240-139-254
39974|code|LDRB            R1, [R4,#1]|97-120
39976|code|MOV             R2, R6|50-70
39978|code|MOV             R3, R7|59-70
39980|code|MOV             R0, R5; fd|40-70
39982|code|BL              sub_9AE4|255-247-89-255
39986|code|CBNZ            R0, loc_9C40|40-185
39988|code|LDRB.W          R3, [R9]|153-248-0-48
39992|code|CMP             R3, #0x15|21-43
39994|code|BEQ             loc_9C40|1-208
39996|code|POP.W           {R3-R9,PC}|189-232-248-131
40000|code|MOV             R0, #0x186A0; useconds|72-242-160-96-192-242-1-0
40008|code|BLX             usleep|255-247-176-234
40012|code|B               loc_9C1C|230-231
40014|data|ALIGN 0x10|0-191
40016|code|PUSH.W          {R4-R8,LR}|45-233-240-65
40020|code|MOV             R6, R2|22-70
40022|code|LDR             R4, =__stack_chk_guard|25-76
40024|code|SUB             SP, SP, #0x20|136-176
40026|code|LDRB            R7, [R1,#1]|79-120
40028|code|MOVS            R2, #8; int|8-34
40030|code|LDRB.W          LR, [R1]|145-248-0-224
40034|code|MOV             R5, R3|29-70
40036|code|LDRB.W          R8, [R1,#2]|145-248-2-128
40040|code|ADD.W           R3, SP, R2; int|13-235-2-3
40044|code|LDR.W           R12, [R4]|212-248-0-192
40048|code|ADD             R1, SP, #0x38+var_24; int|5-169
40050|code|STRB.W          R7, [SP,#0x38+var_21]|141-248-23-112
40054|code|MOVS            R7, #3|3-39
40056|code|STRB.W          R5, [SP,#0x38+var_1D]|141-248-27-80
40060|code|MOVS            R5, #9|9-37
40062|code|STR.W           R12, [SP,#0x38+var_1C]|205-248-28-192
40066|code|MOV.W           R12, #2|79-240-2-12
40070|code|STRB.W          LR, [SP,#0x38+var_22]|141-248-22-224
40074|code|STRB.W          R12, [SP,#0x38+var_24]|141-248-20-192
40078|code|MOV.W           R12, #0x62 ; 'b'|79-240-98-12
40082|code|STRB.W          R8, [SP,#0x38+var_20]|141-248-24-128
40086|code|STRB.W          R12, [SP,#0x38+var_23]|141-248-21-192
40090|code|STRB.W          R7, [SP,#0x38+var_1F]|141-248-25-112
40094|code|STRB.W          R6, [SP,#0x38+var_1E]|141-248-26-96
40098|code|STR             R5, [SP,#0x38+var_38]; int|0-149
40100|code|BL              sub_9C08|255-247-176-255
40104|code|LDR             R2, [SP,#0x38+var_1C]|7-154
40106|code|LDR             R3, [R4]|35-104
40108|code|CMP             R2, R3|154-66
40110|code|BNE             loc_9CB6|2-209
40112|code|ADD             SP, SP, #0x20 ; ' '|8-176
40114|code|POP.W           {R4-R8,PC}|189-232-240-129
40118|code|BLX             __stack_chk_fail|255-247-74-234
40122|data|ALIGN 4|0-191
40124|data|DCD __stack_chk_guard|24-125-1-0
40128|code|PUSH.W          {R4-R10,LR}|45-233-240-71
40132|code|SUB             SP, SP, #0x20|136-176
40134|code|LDRB            R5, [R1]|13-120
40136|code|MOVS            R3, #0x63 ; 'c'|99-35
40138|code|LDR.W           R8, =__stack_chk_guard|223-248-140-128
40142|code|MOVS            R6, #2|2-38
40144|code|LDR             R7, =dword_17CB4|32-79
40146|code|MOV.W           R12, #0|79-240-0-12
40150|code|LSLS            R5, R5, #4|45-1
40152|code|LDRB.W          R10, [R1,#1]|145-248-1-160
40156|code|LDR.W           R4, [R8]|216-248-0-64
40160|code|LDR.W           R9, [R7]|215-248-0-144
40164|code|UXTB            R1, R5|233-178
40166|code|ORR.W           R10, R1, R10|65-234-10-10
40170|code|STRB.W          R3, [SP,#0x40+var_2B]|141-248-21-48
40174|code|ORRS            R1, R2|17-67
40176|code|STRB.W          R3, [SP,#0x40+var_27]|141-248-25-48
40180|code|MOV             R5, R0|5-70
40182|code|MOVS            R3, #0x80|128-35
40184|code|STR             R4, [SP,#0x40+var_24]|7-148
40186|code|STRB.W          R6, [SP,#0x40+var_2C]|141-248-20-96
40190|code|STRB.W          R10, [SP,#0x40+var_2A]|141-248-22-160
40194|code|STRB.W          R12, [SP,#0x40+var_29]|141-248-23-192
40198|code|STRB.W          R6, [SP,#0x40+var_28]|141-248-24-96
40202|code|STRB.W          R1, [SP,#0x40+var_26]|141-248-26-16
40206|code|STRB.W          R3, [SP,#0x40+var_25]|141-248-27-48
40210|code|CMP.W           R9, #0|185-241-0-15
40214|code|BEQ             loc_9D40|19-208
40216|code|MOVS            R6, #5|5-38
40218|code|MOV             R4, R12|100-70
40220|code|MOVS            R2, #4; int|4-34
40222|code|MOV             R0, R5; fd|40-70
40224|code|ADD             R1, SP, #0x40+var_2C; int|5-169
40226|code|ADD             R3, SP, #0x40+var_34; int|3-171
40228|code|STR             R6, [SP,#0x40+var_40]; int|0-150
40230|code|BL              sub_9C08|255-247-111-255
40234|code|MOVS            R2, #4; int|4-34
40236|code|ADD             R3, SP, #0x40+var_34; int|3-171
40238|code|MOV             R0, R5; fd|40-70
40240|code|ADD             R1, SP, #0x40+var_28; int|6-169
40242|code|STR             R6, [SP,#0x40+var_40]; int|0-150
40244|code|BL              sub_9C08|255-247-104-255
40248|code|LDR             R3, [R7]|59-104
40250|code|ADDS            R4, #1|1-52
40252|code|CMP             R4, R3|156-66
40254|code|BCC             loc_9D1C|237-211
40256|code|LDR             R2, [SP,#0x40+var_24]|7-154
40258|code|LDR.W           R3, [R8]|216-248-0-48
40262|code|CMP             R2, R3|154-66
40264|code|BNE             loc_9D50|2-209
40266|code|ADD             SP, SP, #0x20 ; ' '|8-176
40268|code|POP.W           {R4-R10,PC}|189-232-240-135
40272|code|BLX             __stack_chk_fail|255-247-252-233
40276|data|DCD dword_17CB4|180-124-1-0
40280|data|DCD __stack_chk_guard|24-125-1-0
40284|code|PUSH            {R4,LR}|16-181
40286|code|MOV             R4, R1|12-70
40288|code|SUB             SP, SP, #8|130-176
40290|code|ADDS            R3, R4, #1|99-28
40292|code|MOV             R2, R4|34-70
40294|code|MOV             R1, #0xE7A8|78-242-168-113-192-242-0-1
40302|code|ADDS            R4, #2|2-52
40304|code|STR             R4, [SP,#0x10+var_10]|0-148
40306|code|BLX             __isoc99_sscanf|255-247-156-234
40310|code|SUB.W           R3, R0, #3|160-241-3-3
40314|code|NEGS            R0, R3|88-66
40316|code|ADC.W           R0, R0, R3|64-235-3-0
40320|code|ADD             SP, SP, #8|2-176
40322|code|POP             {R4,PC}|16-189
40324|code|PUSH            {R3-R7,LR}|248-181
40326|code|MOV             R6, R0|6-70
40328|code|MOV             R4, R1|12-70
40330|code|BLX             __ctype_b_loc|255-247-90-234
40334|code|LDRB            R7, [R6]|55-120
40336|code|LDR             R3, [R0]|3-104
40338|code|MOV             R5, R0|5-70
40340|code|LDRH.W          R0, [R3,R7,LSL#1]|51-248-23-0
40344|code|LSLS            R2, R0, #0x17|194-5
40346|code|BPL             loc_9DAE|8-213
40348|code|BLX             __ctype_tolower_loc|255-247-54-234
40352|code|LDR             R3, [R0]|3-104
40354|code|LDRB.W          R7, [R3,R7,LSL#2]|19-248-39-112
40358|code|STRB            R7, [R6]|55-112
40360|code|LDR             R3, [R5]|43-104
40362|code|LDRH.W          R0, [R3,R7,LSL#1]|51-248-23-0
40366|code|ANDS.W          R0, R0, #0x200|16-244-0-112
40370|code|BEQ             locret_9DBA|2-208
40372|code|MOVS            R0, #0|0-32
40374|code|CMP             R7, #0x70 ; 'p'|112-47
40376|code|BLS             loc_9DBC|0-217
40378|code|POP             {R3-R7,PC}|248-189
40380|code|LDR             R5, =unk_E700|9-77
40382|code|SUBS            R7, #0x61 ; 'a'|97-63
40384|code|ADDS            R0, R6, #1; nptr|112-28
40386|code|MOVS            R1, #0; endptr|0-33
40388|code|MOVS            R2, #0xA; base|10-34
40390|code|LDR.W           R3, [R5,R7,LSL#2]|85-248-39-48
40394|code|STRB            R3, [R4]|35-112
40396|code|BLX             strtoul|255-247-68-234
40400|code|SUBS            R0, #1|1-56
40402|code|CMP             R0, #0xF|15-40
40404|code|BHI             loc_9DE0|4-216
40406|code|LDR.W           R3, [R5,R0,LSL#2]|85-248-32-48
40410|code|MOVS            R0, #1|1-32
40412|code|STRB            R3, [R4,#1]|99-112
40414|code|POP             {R3-R7,PC}|248-189
40416|code|MOVS            R0, #0|0-32
40418|code|POP             {R3-R7,PC}|248-189
40420|data|DCD unk_E700|0-231-0-0
40424|code|PUSH.W          {R4-R11,LR}|45-233-240-79
40428|code|MOV             R6, #0x10624DD3|68-246-211-86-193-242-98-6
40436|code|MOV.W           LR, R3,ASR#31|79-234-227-126
40440|code|MOV.W           R7, #0x3E8|79-244-122-119
40444|code|LDR.W           R8, =__stack_chk_guard|223-248-176-128
40448|code|SMULL.W         R4, R6, R6, R3|134-251-3-70
40452|code|MOV             R10, R2|146-70
40454|code|LDR.W           R2, [R8]|216-248-0-32
40458|code|SUB             SP, SP, #0x1C|135-176
40460|code|MOV             R4, R0|4-70
40462|code|MOV             R5, R1|13-70
40464|code|STR             R2, [SP,#0x40+var_2C]|5-146
40466|code|RSB.W           R6, LR, R6,ASR#6|206-235-166-22
40470|code|MLS.W           R3, R7, R6, R3|7-251-22-51
40474|code|MUL.W           R7, R7, R3|7-251-3-247
40478|code|STMEA.W         SP, {R6,R7}|141-232-192-0
40482|code|BL              sub_DB00|3-240-109-254
40486|code|MOV             R1, R4|33-70
40488|code|MOVS            R2, #1|1-34
40490|code|MOV             R9, R0|129-70
40492|code|BL              sub_DB9C|3-240-182-254
40496|code|MOV             R0, R9|72-70
40498|code|MOV             R1, SP|105-70
40500|code|BL              sub_DA24|3-240-246-253
40504|code|MOV             R11, R0|131-70
40506|code|MOV             R0, R9|72-70
40508|code|CMP.W           R11, #0|187-241-0-15
40512|code|BEQ             loc_9E92|39-208
40514|code|BL              sub_DB2C|3-240-115-254
40518|code|MOV             R0, R4; fd|32-70
40520|code|MOVS            R1, #0x50 ; 'P'|80-33
40522|code|ADD             R2, SP, #0x40+var_38|2-170
40524|code|MOVS            R3, #0xB|11-35
40526|code|BL              sub_9AE4|255-247-73-254
40530|code|CBZ             R0, loc_9E5C|24-177
40532|code|MOVS            R0, #0|0-32
40534|code|LDR             R1, =aUnexpectedNakW; "unexpected NAK while waiting for Insteo"...|21-73
40536|code|BL              sub_A198|0-240-158-249
40540|code|LDRB            R2, [R5]|42-120
40542|code|LDRB.W          R3, [SP,#0x40+var_36]|157-248-10-48
40546|code|CMP             R2, R3|154-66
40548|code|BNE             loc_9E1E|219-209
40550|code|LDRB            R2, [R5,#1]|106-120
40552|code|LDRB.W          R3, [SP,#0x40+var_35]|157-248-11-48
40556|code|CMP             R2, R3|154-66
40558|code|BNE             loc_9E1E|214-209
40560|code|LDRB            R2, [R5,#2]|170-120
40562|code|LDRB.W          R3, [SP,#0x40+var_34]|157-248-12-48
40566|code|CMP             R2, R3|154-66
40568|code|BNE             loc_9E1E|209-209
40570|code|MOV.W           R11, #1|79-240-1-11
40574|code|CMP.W           R10, #0|186-241-0-15
40578|code|BEQ             loc_9E96|8-208
40580|code|LDRB.W          R3, [SP,#0x40+var_2E]|157-248-18-48
40584|code|MOV.W           R11, #1|79-240-1-11
40588|code|STRB.W          R3, [R10]|138-248-0-48
40592|code|B               loc_9E96|1-224
40594|code|BL              sub_DB2C|3-240-75-254
40598|code|LDR             R2, [SP,#0x40+var_2C]|5-154
40600|code|MOV             R0, R11|88-70
40602|code|LDR.W           R3, [R8]|216-248-0-48
40606|code|CMP             R2, R3|154-66
40608|code|BNE             loc_9EA8|2-209
40610|code|ADD             SP, SP, #0x1C|7-176
40612|code|POP.W           {R4-R11,PC}|189-232-240-143
40616|code|BLX             __stack_chk_fail|255-247-80-233
40620|data|DCD aUnexpectedNakW; "unexpected NAK while waiting for Insteo"...|188-231-0-0
40624|data|DCD __stack_chk_guard|24-125-1-0
40628|code|MOV             R3, #0x17D0C|71-246-12-83-192-242-1-3
40636|code|MOVS            R2, #0|0-34
40638|code|STR             R2, [R3]|26-96
40640|code|BX              LR|112-71
40642|data|ALIGN 4|0-191
40644|code|MOV             R3, #0x17D80|71-246-128-83-192-242-1-3
40652|code|STR             R0, [R3]|24-96
40654|code|BX              LR|112-71
40656|code|PUSH            {R1-R3}|14-180
40658|code|LDR             R1, =dword_17D80|54-73
40660|code|PUSH            {R4-R7,LR}|240-181
40662|code|SUB.W           SP, SP, #0x418|173-245-131-109
40666|code|LDR             R5, =__stack_chk_guard|53-77
40668|code|LDR             R4, [R1]|12-104
40670|code|LDR.W           R2, [SP,#0x438+varg_r1]; format|221-248-44-36
40674|code|LDR             R3, [R5]|43-104
40676|code|ANDS            R4, R0|4-64
40678|code|CMP             R4, R0|132-66
40680|code|STR.W           R3, [SP,#0x438+var_24]|205-248-20-52
40684|code|BEQ             loc_9F06|11-208
40686|code|LDR.W           R2, [SP,#0x438+var_24]|221-248-20-36
40690|code|LDR             R3, [R5]|43-104
40692|code|CMP             R2, R3|154-66
40694|code|BNE             loc_9FA8|87-209
40696|code|ADD             SP, SP, #0x18|6-176
40698|code|ADD.W           SP, SP, #0x400|13-245-128-109
40702|code|POP.W           {R4-R7,LR}|189-232-240-64
40706|code|ADD             SP, SP, #0xC|3-176
40708|code|BX              LR|112-71
40710|code|ADD.W           R6, SP, #0x438+varg_r2|13-245-134-102
40714|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
40718|code|ADD             R0, SP, #0x438+s; s|5-168
40720|code|STR             R6, [SP,#0x438+var_42C]|3-150
40722|code|MOV             R3, R6; arg|51-70
40724|code|BLX             vsnprintf|255-247-24-234
40728|code|LDR             R3, =dword_17D0C|38-75
40730|code|LDR             R1, [R3]|25-104
40732|code|CBNZ            R1, loc_9F50|193-185
40734|code|LDR.W           LR, =unk_EBB8|223-248-168-224
40738|code|CMP             R4, #1|1-44
40740|code|IT NE|24-191
40742|code|MOVNE           R3, LR|115-70
40744|code|BNE             loc_9F32|3-209
40746|code|B               loc_9F48|13-224
40748|code|ADDS            R3, #8|8-51
40750|code|CMP             R4, R2|148-66
40752|code|BEQ             loc_9F48|10-208
40754|code|LDR             R2, [R3,#8]|154-104
40756|code|ADDS            R1, #1|1-49
40758|code|CMP             R2, #0|0-42
40760|code|BNE             loc_9F2C|248-209
40762|code|LDR             R2, =aUnknown; "<unknown>"|31-74
40764|code|MOVS            R0, #7; pri|7-32
40766|code|LDR             R1, =aSS; "%s: %s"|31-73
40768|code|ADD             R3, SP, #0x438+s|5-171
40770|code|BLX             syslog|255-247-240-233
40774|code|B               loc_9EEE|210-231
40776|code|ADD.W           R1, LR, R1,LSL#3|14-235-193-1
40780|code|LDR             R2, [R1,#4]|74-104
40782|code|B               loc_9F3C|245-231
40784|code|LDR             R3, =stderr|27-75
40786|code|MOVS            R0, #0; timer|0-32
40788|code|LDR             R7, [R3]|31-104
40790|code|BLX             time|255-247-232-232
40794|code|MOV             R3, R0|3-70
40796|code|ADD             R0, SP, #0x438+timer; timer|4-168
40798|code|STR             R3, [SP,#0x438+timer]|4-147
40800|code|BLX             ctime|255-247-238-232
40804|code|MOV             R6, R0|6-70
40806|code|BLX             strlen|255-247-126-233
40810|code|LDR.W           LR, =unk_EBB8|223-248-92-224
40814|code|ADDS            R3, R6, R0|51-24
40816|code|MOVS            R0, #0|0-32
40818|code|CMP             R4, #1|1-44
40820|code|STRB.W          R0, [R3,#-1]|3-248-1-12
40824|code|IT NE|24-191
40826|code|MOVNE           R3, LR|115-70
40828|code|BNE             loc_9F86|3-209
40830|code|B               loc_9FA0|15-224
40832|code|ADDS            R3, #8|8-51
40834|code|CMP             R4, R2|148-66
40836|code|BEQ             loc_9FA0|12-208
40838|code|LDR             R2, [R3,#8]|154-104
40840|code|ADDS            R0, #1|1-48
40842|code|CMP             R2, #0|0-42
40844|code|BNE             loc_9F80|248-209
40846|code|LDR             R3, =aUnknown; "<unknown>"|10-75
40848|code|ADD             R2, SP, #0x438+s|5-170
40850|code|MOV             R0, R7; stream|56-70
40852|code|STR             R2, [SP,#0x438+var_438]|0-146
40854|code|MOV             R2, R6|50-70
40856|code|LDR             R1, =aSSS_0; "%s %s: %s\n"|10-73
40858|code|BLX             fprintf|255-247-112-233
40862|code|B               loc_9EEE|166-231
40864|code|ADD.W           R0, LR, R0,LSL#3|14-235-192-0
40868|code|LDR             R3, [R0,#4]|67-104
40870|code|B               loc_9F90|243-231
40872|code|BLX             __stack_chk_fail|255-247-208-232
40876|data|DCD dword_17D80|128-125-1-0
40880|data|DCD __stack_chk_guard|24-125-1-0
40884|data|DCD dword_17D0C|12-125-1-0
40888|data|DCD aUnknown; "<unknown>"|252-235-0-0
40892|data|DCD aSS; "%s: %s"|20-236-0-0
40896|data|DCD stderr|32-125-1-0
40900|data|DCD aSSS_0; "%s %s: %s\n"|8-236-0-0
40904|data|DCD unk_EBB8|184-235-0-0
40908|code|PUSH.W          {R4-R10,LR}|45-233-240-71
40912|code|MOV.W           R8, R1,LSL#2|79-234-129-8
40916|code|MOV             R9, R0|129-70
40918|code|ADD.W           R0, R8, #1|8-241-1-0
40922|code|MOV             R6, R1|14-70
40924|code|BL              sub_DE04|3-240-18-255
40928|code|MOVS            R5, #0|0-37
40930|code|CMP             R6, #0|0-46
40932|code|MOV             R7, R0|7-70
40934|code|BLE             loc_A066|62-221
40936|code|MOV             R4, R5|44-70
40938|code|B               loc_A024|27-224
40940|code|CMP.W           R10, #0xD|186-241-13-15
40944|code|BEQ             loc_A04A|43-208
40946|code|CMP.W           R10, #9|186-241-9-15
40950|code|BEQ             loc_A03C|33-208
40952|code|BLX             __ctype_b_loc|255-247-34-233
40956|code|LDR             R3, [R0]|3-104
40958|code|LDRH.W          R3, [R3,R10,LSL#1]|51-248-26-48
40962|code|LSLS            R3, R3, #0x11|91-4
40964|code|BPL             loc_A058|40-213
40966|code|STRB.W          R10, [R7,R5]|7-248-5-160
40970|code|ADDS            R5, #1|1-53
40972|code|SUBS            R3, R4, R6|163-27
40974|code|IT NE|24-191
40976|code|MOVNE           R3, #1|1-35
40978|code|CMP             R5, R8|69-69
40980|code|ITE LE|212-191
40982|code|MOVLE           R3, #0|0-35
40984|code|ANDGT.W         R3, R3, #1|3-240-1-3
40988|code|CBNZ            R3, loc_A070|67-187
40990|code|ADDS            R4, #1|1-52
40992|code|CMP             R4, R6|180-66
40994|code|BEQ             loc_A066|32-208
40996|code|LDRB.W          R10, [R9,R4]|25-248-4-160
41000|code|CMP.W           R10, #0xA|186-241-10-15
41004|code|BNE             loc_9FEC|222-209
41006|code|ADDS            R0, R7, R5|120-25
41008|code|LDR             R1, =aN; "\\n"|18-73
41010|code|MOVS            R2, #3|3-34
41012|code|ADDS            R5, #2|2-53
41014|code|BLX             memcpy|255-247-114-232
41018|code|B               loc_A00C|231-231
41020|code|ADDS            R0, R7, R5|120-25
41022|code|LDR             R1, =aT; "\\t"|16-73
41024|code|MOVS            R2, #3|3-34
41026|code|ADDS            R5, #2|2-53
41028|code|BLX             memcpy|255-247-106-232
41032|code|B               loc_A00C|224-231
41034|code|ADDS            R0, R7, R5|120-25
41036|code|LDR             R1, =aR; "\\r"|13-73
41038|code|MOVS            R2, #3|3-34
41040|code|ADDS            R5, #2|2-53
41042|code|BLX             memcpy|255-247-100-232
41046|code|B               loc_A00C|217-231
41048|code|ADDS            R0, R7, R5|120-25
41050|code|LDR             R1, =a3o; "\\%.3o"|11-73
41052|code|MOV             R2, R10|82-70
41054|code|ADDS            R5, #4|4-53
41056|code|BLX             sprintf|255-247-102-233
41060|code|B               loc_A00C|210-231
41062|code|MOVS            R3, #0|0-35
41064|code|MOV             R0, R7|56-70
41066|code|STRB            R3, [R7,R5]|123-85
41068|code|POP.W           {R4-R10,PC}|189-232-240-135
41072|code|LDR             R0, =aJStrsizeILen; "j <= strsize || i == len"|6-72
41074|code|MOVS            R2, #0x91|145-34
41076|code|LDR             R1, =aDebugC; "debug.c"|6-73
41078|code|LDR             R3, =aDbgMemstr; "dbg_memstr"|7-75
41080|code|BLX             __assert_fail|255-247-132-233
41084|data|DCD aN; "\\n"|32-236-0-0
41088|data|DCD aT; "\\t"|36-236-0-0
41092|data|DCD aR; "\\r"|28-236-0-0
41096|data|DCD a3o; "\\%.3o"|40-236-0-0
41100|data|DCD aJStrsizeILen; "j <= strsize || i == len"|48-236-0-0
41104|data|DCD aDebugC; "debug.c"|76-236-0-0
41108|data|DCD aDbgMemstr; "dbg_memstr"|240-235-0-0
41112|code|PUSH.W          {R4-R9,LR}|45-233-240-67
41116|code|SUB.W           SP, SP, #0x410|173-245-130-109
41120|code|LDR             R4, =__stack_chk_guard|40-76
41122|code|SUB             SP, SP, #4|129-176
41124|code|MOV             R6, R0|6-70
41126|code|MOV             R9, R1|137-70
41128|code|MOV             R8, R2|144-70
41130|code|LDR             R5, =dword_17D84|39-77
41132|code|LDR             R3, [R4]|35-104
41134|code|STR.W           R3, [SP,#0x430+var_24]|205-248-12-52
41138|code|BLX             __errno_location|255-247-240-232
41142|code|LDR             R3, [R5]|43-104
41144|code|LDR             R7, [R0]|7-104
41146|code|CMP             R3, #0|0-43
41148|code|BEQ             loc_A134|58-208
41150|code|MOV             R3, R8; arg|67-70
41152|code|ADD             R0, SP, #0x430+s; s|3-168
41154|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
41158|code|MOV             R2, R9; format|74-70
41160|code|BLX             vsnprintf|255-247-62-233
41164|code|LDR             R3, =dword_17D10|31-75
41166|code|LDR             R3, [R3]|27-104
41168|code|CBNZ            R6, loc_A0F4|134-185
41170|code|CMP             R3, #0|0-43
41172|code|BNE             loc_A124|38-209
41174|code|MOVS            R0, #3; pri|3-32
41176|code|LDR             R1, =(aRegcompFailedS+0x10); fmt|29-73
41178|code|ADD             R2, SP, #0x430+s|3-170
41180|code|BLX             syslog|255-247-34-233
41184|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
41188|code|LDR             R3, [R4]|35-104
41190|code|CMP             R2, R3|154-66
41192|code|BNE             loc_A140|42-209
41194|code|ADD             SP, SP, #0x14|5-176
41196|code|ADD.W           SP, SP, #0x400|13-245-128-109
41200|code|POP.W           {R4-R9,PC}|189-232-240-131
41204|code|MOV             R0, R7; errnum|56-70
41206|code|CBZ             R3, loc_A112|99-177
41208|code|LDR             R3, =stderr|22-75
41210|code|LDR             R5, [R5]|45-104
41212|code|LDR             R6, [R3]|30-104
41214|code|BLX             strerror|255-247-128-232
41218|code|LDR             R1, =aSSS; "%s: %s: %s\n"|21-73
41220|code|MOV             R2, R5|42-70
41222|code|ADD             R3, SP, #0x430+s|3-171
41224|code|STR             R0, [SP,#0x430+var_430]|0-144
41226|code|MOV             R0, R6; stream|48-70
41228|code|BLX             fprintf|255-247-182-232
41232|code|B               loc_A0E0|230-231
41234|code|BLX             strerror|255-247-118-232
41238|code|LDR             R1, =aSS; "%s: %s"|17-73
41240|code|ADD             R2, SP, #0x430+s|3-170
41242|code|MOV             R3, R0|3-70
41244|code|MOVS            R0, #3; pri|3-32
41246|code|BLX             syslog|255-247-2-233
41250|code|B               loc_A0E0|221-231
41252|code|LDR             R3, =stderr|11-75
41254|code|LDR             R2, [R5]|42-104
41256|code|LDR             R1, =(aSSS+4); format|13-73
41258|code|LDR             R0, [R3]; stream|24-104
41260|code|ADD             R3, SP, #0x430+s|3-171
41262|code|BLX             fprintf|255-247-166-232
41266|code|B               loc_A0E0|213-231
41268|code|LDR             R0, =aErrProgVoid0; "err_prog != ((void *)0)"|11-72
41270|code|MOVS            R2, #0x49 ; 'I'; line|73-34
41272|code|LDR             R1, =aErrorC; "error.c"|11-73
41274|code|LDR             R3, =aVerr; "_verr"|12-75
41276|code|BLX             __assert_fail|255-247-34-233
41280|code|BLX             __stack_chk_fail|255-247-4-232
41284|data|DCD __stack_chk_guard|24-125-1-0
41288|data|DCD dword_17D84|132-125-1-0
41292|data|DCD dword_17D10|16-125-1-0
41296|data|DCD aRegcompFailedS+0x10; "%s"|104-249-0-0
41300|data|DCD stderr|32-125-1-0
41304|data|DCD aSSS; "%s: %s: %s\n"|164-236-0-0
41308|data|DCD aSS; "%s: %s"|20-236-0-0
41312|data|DCD aSSS+4; "%s: %s\n"|168-236-0-0
41316|data|DCD aErrProgVoid0; "err_prog != ((void *)0)"|132-236-0-0
41320|data|DCD aErrorC; "error.c"|156-236-0-0
41324|data|DCD aVerr; "_verr"|124-236-0-0
41328|code|PUSH            {R4,LR}|16-181
41330|code|MOVS            R1, #0x2F ; '/'; c|47-33
41332|code|MOV             R4, R0|4-70
41334|code|BLX             strrchr|255-247-208-232
41338|code|CBZ             R0, loc_A17E|0-177
41340|code|ADDS            R4, R0, #1|68-28
41342|code|LDR             R3, =dword_17D84|1-75
41344|code|STR             R4, [R3]|28-96
41346|code|POP             {R4,PC}|16-189
41348|data|DCD dword_17D84|132-125-1-0
41352|code|MOV             R3, #0x17D10|71-246-16-83-192-242-1-3
41360|code|MOVS            R2, #0|0-34
41362|code|STR             R2, [R3]|26-96
41364|code|BX              LR|112-71
41366|data|ALIGN 4|0-191
41368|code|PUSH            {R1-R3}|14-180
41370|code|PUSH            {LR}|0-181
41372|code|SUB             SP, SP, #8|130-176
41374|code|ADD             R3, SP, #0x18+varg_r1|3-171
41376|code|LDR.W           R1, [R3],#4|83-248-4-27
41380|code|MOV             R2, R3|26-70
41382|code|STR             R3, [SP,#0x18+var_14]|1-147
41384|code|BL              sub_A098|255-247-118-255
41388|code|BL              sub_DDF8|3-240-36-254
41392|code|MOV             R1, #0xECB0|78-246-176-65-192-242-0-1
41400|code|MOV             R2, R0|2-70
41402|code|MOVS            R0, #0x10|16-32
41404|code|BL              sub_9ED0|255-247-136-254
41408|code|MOVS            R0, #1; status|1-32
41410|code|BLX             exit|255-247-68-232
41414|data|ALIGN 4|0-191
41416|code|PUSH            {R1-R3}|14-180
41418|code|PUSH            {LR}|0-181
41420|code|SUB             SP, SP, #8|130-176
41422|code|ADD             R2, SP, #0x18+varg_r1|3-170
41424|code|LDR.W           R1, [R2],#4|82-248-4-27
41428|code|STR             R2, [SP,#0x18+var_14]|1-146
41430|code|BL              sub_A098|255-247-95-255
41434|code|ADD             SP, SP, #8|2-176
41436|code|POP.W           {LR}|93-248-4-235
41440|code|ADD             SP, SP, #0xC|3-176
41442|code|BX              LR|112-71
41444|code|MOVW            R1, #0xF968|79-246-104-17
41448|code|MOVS            R0, #1|1-32
41450|code|PUSH            {R3,LR}|8-181
41452|code|MOVT.W          R1, #0|192-242-0-1
41456|code|BL              sub_A198|255-247-210-255
41460|code|MOVW            R1, #0xECD4|78-246-212-65
41464|code|MOVS            R0, #0|0-32
41466|code|PUSH            {R3,LR}|8-181
41468|code|MOVT.W          R1, #0|192-242-0-1
41472|code|BL              sub_A198|255-247-202-255
41476|code|CMP             R1, R3|153-66
41478|code|PUSH.W          {R4-R9}|45-233-240-3
41482|code|BEQ             loc_A2D6|100-208
41484|code|MOV             R7, #0xCCCCCCCD|76-246-205-71-204-246-204-71
41492|code|LDR             R5, [R1]|13-104
41494|code|UMULL.W         R4, R0, R7, R0|167-251-0-64
41498|code|LSRS            R0, R0, #3|192-8
41500|code|BEQ             loc_A2DA|93-208
41502|code|MOVS            R6, #1|1-38
41504|code|MOV             R4, R0|4-70
41506|code|UMULL.W         R8, R4, R7, R4|167-251-4-132
41510|code|ADDS            R6, #1|1-54
41512|code|LSRS            R4, R4, #3|228-8
41514|code|BNE             loc_A222|250-209
41516|code|CMP             R5, R6|181-66
41518|code|LDR             R4, [R3]|28-104
41520|code|ITE GT|204-191
41522|code|RSBGT.W         R6, R6, R5|198-235-5-6
41526|code|MOVLE           R6, #0|0-38
41528|code|MOVS            R7, #1|1-39
41530|code|CBZ             R0, loc_A250|72-177
41532|code|MOVW            R12, #0xCCCD|76-246-205-76
41536|code|MOVS            R7, #1|1-39
41538|code|MOVT.W          R12, #0xCCCC|204-246-204-76
41542|code|UMULL.W         R9, R0, R12, R0|172-251-0-144
41546|code|ADDS            R7, #1|1-55
41548|code|LSRS            R0, R0, #3|192-8
41550|code|BNE             loc_A246|250-209
41552|code|MOV             R8, #0xCCCCCCCD|76-246-205-72-204-246-204-72
41560|code|CMP             R4, R7|188-66
41562|code|UMULL.W         R0, R2, R8, R2|168-251-2-2
41566|code|ITE GT|204-191
41568|code|RSBGT.W         R12, R7, R4|199-235-4-12
41572|code|MOVLE.W         R12, #0|79-240-0-12
41576|code|LSRS            R2, R2, #3|210-8
41578|code|BEQ             loc_A2DE|56-208
41580|code|MOVS            R7, #1|1-39
41582|code|MOV             R0, R2|16-70
41584|code|UMULL.W         R9, R0, R8, R0|168-251-0-144
41588|code|ADDS            R7, #1|1-55
41590|code|LSRS            R0, R0, #3|192-8
41592|code|BNE             loc_A270|250-209
41594|code|CMP             R4, R7|188-66
41596|code|ITE GT|204-191
41598|code|RSBGT.W         R7, R7, R4|199-235-4-7
41602|code|MOVLE           R7, #0|0-39
41604|code|MOVS            R0, #1|1-32
41606|code|CBZ             R2, loc_A29C|74-177
41608|code|MOVW            R8, #0xCCCD|76-246-205-72
41612|code|MOVS            R0, #1|1-32
41614|code|MOVT.W          R8, #0xCCCC|204-246-204-72
41618|code|UMULL.W         R9, R2, R8, R2|168-251-2-146
41622|code|ADDS            R0, #1|1-48
41624|code|LSRS            R2, R2, #3|210-8
41626|code|BNE             loc_A292|250-209
41628|code|CMP             R5, R0|133-66
41630|code|ITE GT|204-191
41632|code|RSBGT.W         R2, R0, R5|192-235-5-2
41636|code|MOVLE           R2, #0|0-34
41638|code|SUBS.W          R6, R6, R12|182-235-12-6
41642|code|IT NE|24-191
41644|code|MOVNE           R6, #1|1-38
41646|code|CMP             R7, R2|151-66
41648|code|ITE EQ|12-191
41650|code|MOVEQ           R0, #0|0-32
41652|code|ANDNE.W         R0, R6, #1|6-240-1-0
41656|code|CBNZ            R0, loc_A2C6|40-185
41658|code|CBZ             R6, loc_A2CA|54-177
41660|code|CMP             R7, R2|151-66
41662|code|BEQ             loc_A2D0|7-208
41664|code|POP.W           {R4-R9}|189-232-240-3
41668|code|BX              LR|112-71
41670|code|MOVS            R0, #0|0-32
41672|code|B               loc_A2C0|250-231
41674|code|STR             R4, [R1]|12-96
41676|code|MOVS            R0, #1|1-32
41678|code|B               loc_A2C0|247-231
41680|code|STR             R5, [R3]|29-96
41682|code|MOVS            R0, #1|1-32
41684|code|B               loc_A2C0|244-231
41686|code|MOVS            R0, #1|1-32
41688|code|B               loc_A2C0|242-231
41690|code|MOVS            R6, #1|1-38
41692|code|B               loc_A22C|166-231
41694|code|MOVS            R7, #1|1-39
41696|code|B               loc_A27A|203-231
41698|data|ALIGN 4|0-191
41700|code|PUSH            {R4,LR}|16-181
41702|code|MOV             R4, R0|4-70
41704|code|CBZ             R0, locret_A308|112-177
41706|code|LDR             R0, [R0]; ptr|0-104
41708|code|MOVS            R3, #0|0-35
41710|code|STR             R3, [R4,#0xC]|227-96
41712|code|CBZ             R0, loc_A2F6|8-177
41714|code|BLX             free|254-247-8-239
41718|code|LDR             R0, [R4,#4]; ptr|96-104
41720|code|CBZ             R0, loc_A2FE|8-177
41722|code|BLX             free|254-247-4-239
41726|code|MOV             R0, R4|32-70
41728|code|POP.W           {R4,LR}|189-232-16-64
41732|code|B.W             j_free|254-247-252-190
41736|code|POP             {R4,PC}|16-189
41738|data|ALIGN 4|0-191
41740|code|PUSH            {R4,LR}|16-181
41742|code|MOV             R4, R0|4-70
41744|code|CBZ             R0, locret_A324|64-177
41746|code|LDR             R0, [R0]; ptr|0-104
41748|code|CBZ             R0, loc_A31A|8-177
41750|code|BLX             free|254-247-246-238
41754|code|MOV             R0, R4|32-70
41756|code|POP.W           {R4,LR}|189-232-16-64
41760|code|B.W             j_free|254-247-238-190
41764|code|POP             {R4,PC}|16-189
41766|data|ALIGN 4|0-191
41768|code|PUSH.W          {R4-R8,LR}|45-233-240-65
41772|code|SUB             SP, SP, #8|130-176
41774|code|MOVS            R3, #0|0-35
41776|code|MOV             R5, R0|5-70
41778|code|STR             R3, [SP,#0x20+endptr]|1-147
41780|code|CMP             R0, #0|0-40
41782|code|BEQ.W           loc_A486|0-240-166-128
41786|code|MOVS            R0, #0x10; size|16-32
41788|code|BLX             malloc|254-247-84-239
41792|code|MOV             R6, R0|6-70
41794|code|CMP             R0, #0|0-40
41796|code|BEQ             loc_A40C|98-208
41798|code|MOV             R0, R5; s|40-70
41800|code|BLX             strlen|254-247-140-239
41804|code|SUBS            R4, R0, #1|68-30
41806|code|BMI             loc_A366|10-212
41808|code|BLX             __ctype_b_loc|254-247-118-239
41812|code|LDR             R2, [R0]|2-104
41814|code|B               loc_A35C|1-224
41816|code|SUBS            R4, #1|1-60
41818|code|BMI             loc_A366|4-212
41820|code|LDRB            R3, [R5,R4]|43-93
41822|code|LDRH.W          R3, [R2,R3,LSL#1]|50-248-19-48
41826|code|LSLS            R3, R3, #0x14|27-5
41828|code|BMI             loc_A358|248-212
41830|code|MOV             R0, R5|40-70
41832|code|BLX             __strdup|254-247-166-239
41836|code|MOV             R8, R0|128-70
41838|code|STR             R0, [R6]|48-96
41840|code|CMP             R0, #0|0-40
41842|code|BEQ             loc_A426|88-208
41844|code|MOVS            R3, #0|0-35
41846|code|MOV             R0, R5; s|40-70
41848|code|STR             R3, [R6,#8]|179-96
41850|code|STR             R3, [R6,#4]|115-96
41852|code|STR             R3, [R6,#0xC]|243-96
41854|code|BLX             strlen|254-247-114-239
41858|code|SUBS            R0, #1|1-56
41860|code|CMP             R4, R0|132-66
41862|code|BEQ             loc_A3C4|29-208
41864|code|ADDS            R7, R4, #1|103-28
41866|code|MOVS            R2, #0xA; base|10-34
41868|code|ADD.W           R0, R8, R7; nptr|8-235-7-0
41872|code|ADD             R1, SP, #0x20+endptr; endptr|1-169
41874|code|STR             R0, [R6,#0xC]|240-96
41876|code|BLX             strtoul|254-247-96-239
41880|code|LDR             R3, [SP,#0x20+endptr]|1-155
41882|code|STR             R0, [R6,#8]|176-96
41884|code|LDRB.W          R8, [R3]|147-248-0-128
41888|code|CMP.W           R8, #0|184-241-0-15
41892|code|BNE             loc_A3AC|2-209
41894|code|CMP.W           R0, #0x2000000|176-241-0-127
41898|code|BLS             loc_A3F0|33-217
41900|code|MOV             R0, R5|40-70
41902|code|BLX             __strdup|254-247-132-239
41906|code|STR             R0, [R6,#4]|112-96
41908|code|CMP             R0, #0|0-40
41910|code|BEQ             loc_A446|70-208
41912|code|MOVS            R3, #0|0-35
41914|code|STR             R3, [R6,#0xC]|243-96
41916|code|MOV             R0, R6|48-70
41918|code|ADD             SP, SP, #8|2-176
41920|code|POP.W           {R4-R8,PC}|189-232-240-129
41924|code|MOV             R0, R5|40-70
41926|code|BLX             __strdup|254-247-120-239
41930|code|STR             R0, [R6,#4]|112-96
41932|code|CMP             R0, #0|0-40
41934|code|BNE             loc_A3BC|245-209
41936|code|MOV             R0, R6|48-70
41938|code|BL              sub_A2E4|255-247-135-255
41942|code|BLX             __errno_location|254-247-94-239
41946|code|MOVS            R2, #0xC|12-34
41948|code|MOV.W           R1, #0x1FE|79-244-255-113
41952|code|MOV             R3, R0|3-70
41954|code|LDR             R0, =aHostlistC; "hostlist.c"|44-72
41956|code|STR             R2, [R3]|26-96
41958|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|44-74
41960|code|BL              sub_A1F4|255-247-4-255
41964|code|MOV             R6, R0|6-70
41966|code|B               loc_A3BC|229-231
41968|code|ADDS            R0, R4, #2; size|160-28
41970|code|BLX             malloc|254-247-250-238
41974|code|MOV             R4, R0|4-70
41976|code|STR             R0, [R6,#4]|112-96
41978|code|CMP             R0, #0|0-40
41980|code|BEQ             loc_A466|51-208
41982|code|MOV             R1, R5; src|41-70
41984|code|MOV             R2, R7; n|58-70
41986|code|BLX             memcpy|254-247-140-238
41990|code|STRB.W          R8, [R4,R7]|4-248-7-128
41994|code|B               loc_A3BC|215-231
41996|code|BLX             __errno_location|254-247-66-239
42000|code|MOVS            R2, #0xC|12-34
42002|code|MOV.W           R1, #0x1EE|79-244-247-113
42006|code|MOV             R3, R0|3-70
42008|code|LDR             R0, =aHostlistC; "hostlist.c"|30-72
42010|code|STR             R2, [R3]|26-96
42012|code|LDR             R2, =aHostnameCreate; "hostname create"|31-74
42014|code|BL              sub_A1F4|255-247-233-254
42018|code|MOV             R6, R0|6-70
42020|code|B               loc_A3BC|202-231
42022|code|MOV             R0, R6; ptr|48-70
42024|code|BLX             free|254-247-108-238
42028|code|BLX             __errno_location|254-247-50-239
42032|code|MOVS            R2, #0xC|12-34
42034|code|MOV.W           R1, #0x1F4|79-244-250-113
42038|code|MOV             R3, R0|3-70
42040|code|LDR             R0, =aHostlistC; "hostlist.c"|22-72
42042|code|STR             R2, [R3]|26-96
42044|code|LDR             R2, =aHostnameCreate; "hostname create"|23-74
42046|code|BL              sub_A1F4|255-247-217-254
42050|code|MOV             R6, R0|6-70
42052|code|B               loc_A3BC|186-231
42054|code|MOV             R0, R6|48-70
42056|code|BL              sub_A2E4|255-247-76-255
42060|code|BLX             __errno_location|254-247-34-239
42064|code|MOVS            R2, #0xC|12-34
42066|code|MOV.W           R1, #0x210|79-244-4-113
42070|code|MOV             R3, R0|3-70
42072|code|LDR             R0, =aHostlistC; "hostlist.c"|14-72
42074|code|STR             R2, [R3]|26-96
42076|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|14-74
42078|code|BL              sub_A1F4|255-247-201-254
42082|code|MOV             R6, R0|6-70
42084|code|B               loc_A3BC|170-231
42086|code|MOV             R0, R6|48-70
42088|code|BL              sub_A2E4|255-247-60-255
42092|code|BLX             __errno_location|254-247-18-239
42096|code|MOVS            R2, #0xC|12-34
42098|code|MOVW            R1, #0x209|64-242-9-33
42102|code|MOV             R3, R0|3-70
42104|code|LDR             R0, =aHostlistC; "hostlist.c"|6-72
42106|code|STR             R2, [R3]|26-96
42108|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|6-74
42110|code|BL              sub_A1F4|255-247-185-254
42114|code|MOV             R6, R0|6-70
42116|code|B               loc_A3BC|154-231
42118|code|LDR             R0, =aHostnameVoid0; "hostname != ((void *)0)"|6-72
42120|code|MOVW            R2, #0x1EB; line|64-242-235-18
42124|code|LDR             R1, =aHostlistC; "hostlist.c"|1-73
42126|code|LDR             R3, =aHostnameCreate_0; "hostname_create"|5-75
42128|code|BLX             __assert_fail|254-247-120-239
42132|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42136|data|DCD aHostnamePrefix; "hostname prefix create"|132-240-0-0
42140|data|DCD aHostnameCreate; "hostname create"|116-240-0-0
42144|data|DCD aHostnameVoid0; "hostname != ((void *)0)"|80-240-0-0
42148|data|DCD aHostnameCreate_0; "hostname_create"|232-236-0-0
42152|code|PUSH            {R4-R7,LR}|240-181
42154|code|MOV             R4, R0|4-70
42156|code|LDRB            R7, [R0,#0x10]|7-124
42158|code|SUB             SP, SP, #0xC|131-176
42160|code|MOV             R5, R1|13-70
42162|code|LDR             R6, [R0]|6-104
42164|code|ANDS.W          R7, R7, #1|23-240-1-7
42168|code|BEQ             loc_A4C6|5-208
42170|code|LDR             R0, [R1]; s1|8-104
42172|code|MOV             R1, R6; s2|49-70
42174|code|BLX             strcmp|254-247-252-237
42178|code|CMP             R0, #0|0-40
42180|code|BEQ             loc_A502|29-208
42182|code|LDR             R1, [R5,#4]; s2|105-104
42184|code|MOV             R0, R6; s1|48-70
42186|code|BLX             strcmp|254-247-246-237
42190|code|CBNZ            R0, loc_A4FC|168-185
42192|code|LDR             R3, [R5,#0xC]|235-104
42194|code|CBZ             R3, loc_A506|195-177
42196|code|LDR             R5, [R5,#8]|173-104
42198|code|LDR             R2, [R4,#8]|162-104
42200|code|CMP             R5, R2|149-66
42202|code|BHI             loc_A4FE|16-216
42204|code|LDR             R6, [R4,#4]|102-104
42206|code|CMP             R5, R6|181-66
42208|code|BCC             loc_A4FE|13-211
42210|code|MOV             R0, R3; s|24-70
42212|code|BLX             strlen|254-247-190-238
42216|code|ADD             R3, SP, #0x20+var_18|2-171
42218|code|ADD.W           R1, R4, #0xC|4-241-12-1
42222|code|MOV             R2, R5|42-70
42224|code|STR.W           R0, [R3,#-4]!|67-248-4-13
42228|code|MOV             R0, R6|48-70
42230|code|BL              sub_A204|255-247-133-254
42234|code|B               loc_A4FE|0-224
42236|code|MOVS            R0, #0|0-32
42238|code|ADD             SP, SP, #0xC|3-176
42240|code|POP             {R4-R7,PC}|240-189
42242|code|MOVS            R0, #1|1-32
42244|code|B               loc_A4FE|251-231
42246|code|MOV             R0, R7|56-70
42248|code|B               loc_A4FE|249-231
42250|data|ALIGN 4|0-191
42252|code|PUSH            {R3-R5,LR}|56-181
42254|code|MOV             R4, R0|4-70
42256|code|MOV             R5, R1|13-70
42258|code|CBZ             R0, loc_A536|128-177
42260|code|CBZ             R1, loc_A530|97-177
42262|code|LDR             R0, [R0]; s1|0-104
42264|code|LDR             R1, [R1]; s2|9-104
42266|code|BLX             strcmp|254-247-206-237
42270|code|CBNZ            R0, locret_A534|72-185
42272|code|LDRB            R0, [R5,#0x10]|40-124
42274|code|LDRB            R3, [R4,#0x10]|35-124
42276|code|AND.W           R0, R0, #1|0-240-1-0
42280|code|AND.W           R3, R3, #1|3-240-1-3
42284|code|SUBS            R0, R0, R3|192-26
42286|code|POP             {R3-R5,PC}|56-189
42288|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
42292|code|POP             {R3-R5,PC}|56-189
42294|code|MOVS            R0, #1|1-32
42296|code|POP             {R3-R5,PC}|56-189
42298|data|ALIGN 4|0-191
42300|code|PUSH            {R2,R3}|12-180
42302|code|PUSH            {R4-R7,LR}|240-181
42304|code|SUB.W           SP, SP, #0x400|173-245-128-109
42308|code|SUB             SP, SP, #0xC|131-176
42310|code|LDR             R4, =__stack_chk_guard|21-76
42312|code|ADD.W           R7, SP, #0x428+varg_r2|13-245-132-103
42316|code|MOV             R6, R0|6-70
42318|code|MOV             R5, R1|13-70
42320|code|ADD             R0, SP, #0x428+s; s|1-168
42322|code|LDR.W           R2, [R7],#4; format|87-248-4-43
42326|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
42330|code|LDR.W           LR, [R4]|212-248-0-224
42334|code|MOV             R3, R7; arg|59-70
42336|code|STR             R7, [SP,#0x428+var_428]|0-151
42338|code|STR.W           LR, [SP,#0x428+var_24]|205-248-4-228
42342|code|BLX             vsnprintf|254-247-240-238
42346|code|CMP.W           R0, #0x400|176-245-128-111
42350|code|BLS             loc_A576|2-217
42352|code|MOVS            R3, #0|0-35
42354|code|STRB.W          R3, [SP,#0x428+var_25]|141-248-3-52
42358|code|ADD             R2, SP, #0x428+s|1-170
42360|code|MOV             R0, R6|48-70
42362|code|MOV             R1, R5|41-70
42364|code|BL              sub_A1E4|255-247-50-254
42368|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
42372|code|LDR             R3, [R4]|35-104
42374|code|CMP             R2, R3|154-66
42376|code|BNE             loc_A598|6-209
42378|code|ADD             SP, SP, #0xC|3-176
42380|code|ADD.W           SP, SP, #0x400|13-245-128-109
42384|code|POP.W           {R4-R7,LR}|189-232-240-64
42388|code|ADD             SP, SP, #8|2-176
42390|code|BX              LR|112-71
42392|code|BLX             __stack_chk_fail|254-247-216-237
42396|data|DCD __stack_chk_guard|24-125-1-0
42400|code|PUSH            {R3,LR}|8-181
42402|code|CBZ             R0, loc_A5B8|72-177
42404|code|LDRB            R3, [R0,#0x10]|3-124
42406|code|LSLS            R2, R3, #0x1F|218-7
42408|code|BMI             loc_A5B4|4-212
42410|code|LDR             R2, [R0,#8]|130-104
42412|code|LDR             R3, [R0,#4]|67-104
42414|code|ADDS            R0, R2, #1|80-28
42416|code|SUBS            R0, R0, R3|192-26
42418|code|POP             {R3,PC}|8-189
42420|code|MOVS            R0, #1|1-32
42422|code|POP             {R3,PC}|8-189
42424|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
42426|code|MOVW            R2, #0x281; line|64-242-129-34
42430|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
42432|code|LDR             R3, =aHostrangeCount; "hostrange_count"|3-75
42434|code|BLX             __assert_fail|254-247-224-238
42438|data|ALIGN 4|0-191
42440|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
42444|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42448|data|DCD aHostrangeCount; "hostrange_count"|248-236-0-0
42452|code|PUSH            {R4,LR}|16-181
42454|code|CBZ             R0, loc_A5F0|88-177
42456|code|CBZ             R1, loc_A5FE|137-177
42458|code|ADD.W           R4, R0, #0xC|0-241-12-4
42462|code|LDR             R2, [R1,#4]|74-104
42464|code|ADD.W           R3, R1, #0xC|1-241-12-3
42468|code|LDR             R0, [R0,#4]|64-104
42470|code|MOV             R1, R4|33-70
42472|code|POP.W           {R4,LR}|189-232-16-64
42476|code|B.W             sub_A204|255-247-10-190
42480|code|LDR             R0, =aH0Void0; "h0 != ((void *)0)"|6-72
42482|code|MOVW            R2, #0x2FF; line|64-242-255-34
42486|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
42488|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|6-75
42490|code|BLX             __assert_fail|254-247-196-238
42494|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
42496|code|MOV.W           R2, #0x300; line|79-244-64-114
42500|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
42502|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|3-75
42504|code|BLX             __assert_fail|254-247-188-238
42508|data|DCD aH0Void0; "h0 != ((void *)0)"|176-240-0-0
42512|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42516|data|DCD aHostrangeWidth; "hostrange_width_combine"|8-237-0-0
42520|data|DCD aH1Void0; "h1 != ((void *)0)"|196-240-0-0
42524|code|PUSH            {R3,LR}|8-181
42526|code|CBZ             R0, loc_A638|88-177
42528|code|LDR             R3, [R0,#8]|131-104
42530|code|LDR             R2, [R0,#4]|66-104
42532|code|CMP             R3, R2|147-66
42534|code|BCC             loc_A634|5-211
42536|code|SUB.W           R1, R3, #0xFFFFFFFF|163-241-255-49
42540|code|NEGS            R0, R1|72-66
42542|code|ADC.W           R0, R0, R1|64-235-1-0
42546|code|POP             {R3,PC}|8-189
42548|code|MOVS            R0, #1|1-32
42550|code|POP             {R3,PC}|8-189
42552|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
42554|code|MOVW            R2, #0x30A; line|64-242-10-50
42558|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
42560|code|LDR             R3, =aHostrangeEmpty; "hostrange_empty"|3-75
42562|code|BLX             __assert_fail|254-247-160-238
42566|data|ALIGN 4|0-191
42568|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
42572|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42576|data|DCD aHostrangeEmpty; "hostrange_empty"|32-237-0-0
42580|code|PUSH            {R3,LR}|8-181
42582|code|BLX             __errno_location|254-247-30-238
42586|code|MOV             R3, #0xF068|79-242-104-3-192-242-0-3
42594|code|MOVS            R1, #0xC|12-33
42596|code|MOV             R2, #0xF0D8|79-242-216-2-192-242-0-2
42604|code|STR             R1, [R0]|1-96
42606|code|MOV             R0, R3|24-70
42608|code|MOVW            R1, #0x23E|64-242-62-33
42612|code|POP.W           {R3,LR}|189-232-8-64
42616|code|B.W             sub_A1F4|255-247-188-189
42620|code|PUSH            {R4,LR}|16-181
42622|code|MOVS            R0, #0x18; size|24-32
42624|code|BLX             malloc|254-247-178-237
42628|code|MOV             R4, R0|4-70
42630|code|CBZ             R0, loc_A6BE|208-177
42632|code|MOVS            R0, #0x40 ; '@'; size|64-32
42634|code|MOVW            R3, #0xDEAD|77-246-173-99
42638|code|STR             R3, [R4]|35-96
42640|code|BLX             malloc|254-247-170-237
42644|code|STR             R0, [R4,#0x10]|32-97
42646|code|CBZ             R0, loc_A6B8|120-177
42648|code|MOVS            R3, #0|0-35
42650|code|MOV             R1, R3|25-70
42652|code|B               loc_A6A0|0-224
42654|code|LDR             R0, [R4,#0x10]|32-105
42656|code|STR             R1, [R0,R3]|193-80
42658|code|ADDS            R3, #4|4-51
42660|code|MOVS            R2, #0|0-34
42662|code|CMP             R3, #0x40 ; '@'|64-43
42664|code|BNE             loc_A69E|249-209
42666|code|MOVS            R3, #0x10|16-35
42668|code|STR             R2, [R4,#8]|162-96
42670|code|STR             R3, [R4,#4]|99-96
42672|code|MOV             R0, R4|32-70
42674|code|STR             R2, [R4,#0xC]|226-96
42676|code|STR             R2, [R4,#0x14]|98-97
42678|code|POP             {R4,PC}|16-189
42680|code|MOV             R0, R4; ptr|32-70
42682|code|BLX             free|254-247-36-237
42686|code|BLX             __errno_location|254-247-234-237
42690|code|MOVS            R3, #0xC|12-35
42692|code|MOVW            R1, #0x402|64-242-2-65
42696|code|LDR             R2, =aHostlistCreate; "hostlist_create"|3-74
42698|code|STR             R3, [R0]|3-96
42700|code|LDR             R0, =aHostlistC; "hostlist.c"|3-72
42702|code|POP.W           {R4,LR}|189-232-16-64
42706|code|B.W             sub_A1F4|255-247-143-189
42710|data|ALIGN 4|0-191
42712|data|DCD aHostlistCreate; "hostlist_create"|236-240-0-0
42716|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42720|code|PUSH            {R3-R5,LR}|56-181
42722|code|MOV             R5, R0|5-70
42724|code|CMP             R0, #0|0-40
42726|code|BEQ             loc_A73C|41-208
42728|code|MOVS            R0, #0x14; size|20-32
42730|code|BLX             malloc|254-247-126-237
42734|code|MOV             R4, R0|4-70
42736|code|CMP             R0, #0|0-40
42738|code|BEQ             loc_A730|29-208
42740|code|MOV             R0, R5|40-70
42742|code|BLX             __strdup|254-247-224-237
42746|code|STR             R0, [R4]|32-96
42748|code|CBZ             R0, loc_A712|72-177
42750|code|LDRB            R2, [R4,#0x10]|34-124
42752|code|MOVS            R3, #0|0-35
42754|code|MOV             R0, R4|32-70
42756|code|STR             R3, [R4,#4]|99-96
42758|code|ORR.W           R2, R2, #1|66-240-1-2
42762|code|STR             R3, [R4,#8]|163-96
42764|code|STRB            R2, [R4,#0x10]|34-116
42766|code|STR             R3, [R4,#0xC]|227-96
42768|code|POP             {R3-R5,PC}|56-189
42770|code|MOV             R0, R4; ptr|32-70
42772|code|BLX             free|254-247-246-236
42776|code|BLX             __errno_location|254-247-188-237
42780|code|MOVS            R3, #0xC|12-35
42782|code|MOVW            R1, #0x25B|64-242-91-33
42786|code|LDR             R2, =aHostrangeCreat; "hostrange create single"|10-74
42788|code|STR             R3, [R0]|3-96
42790|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
42792|code|POP.W           {R3-R5,LR}|189-232-56-64
42796|code|B.W             sub_A1F4|255-247-98-189
42800|code|BL              sub_A654|255-247-144-255
42804|code|MOV             R4, R0|4-70
42806|code|CMP             R0, #0|0-40
42808|code|BEQ             loc_A718|238-208
42810|code|B               loc_A6F4|219-231
42812|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
42814|code|MOVW            R2, #0x249; line|64-242-73-34
42818|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
42820|code|LDR             R3, =aHostrangeCreat_0; "hostrange_create_single"|4-75
42822|code|BLX             __assert_fail|254-247-30-238
42826|data|ALIGN 4|0-191
42828|data|DCD aHostrangeCreat; "hostrange create single"|20-241-0-0
42832|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42836|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|252-240-0-0
42840|data|DCD aHostrangeCreat_0; "hostrange_create_single"|48-237-0-0
42844|code|PUSH.W          {R4-R8,LR}|45-233-240-65
42848|code|MOV             R4, R0|4-70
42850|code|MOV             R5, R1|13-70
42852|code|MOV             R6, R2|22-70
42854|code|MOV             R8, R3|152-70
42856|code|CMP             R0, #0|0-40
42858|code|BEQ             loc_A7C2|42-208
42860|code|MOVS            R0, #0x14; size|20-32
42862|code|BLX             malloc|254-247-60-237
42866|code|MOV             R7, R0|7-70
42868|code|CMP             R0, #0|0-40
42870|code|BEQ             loc_A7B6|30-208
42872|code|MOV             R0, R4|32-70
42874|code|BLX             __strdup|254-247-158-237
42878|code|STR             R0, [R7]|56-96
42880|code|CBZ             R0, loc_A798|80-177
42882|code|LDRB            R3, [R7,#0x10]|59-124
42884|code|MOV             R0, R7|56-70
42886|code|STR             R5, [R7,#4]|125-96
42888|code|BFC.W           R3, #0, #1|111-243-0-3
42892|code|STR             R6, [R7,#8]|190-96
42894|code|STR.W           R8, [R7,#0xC]|199-248-12-128
42898|code|STRB            R3, [R7,#0x10]|59-116
42900|code|POP.W           {R4-R8,PC}|189-232-240-129
42904|code|MOV             R0, R7; ptr|56-70
42906|code|BLX             free|254-247-180-236
42910|code|BLX             __errno_location|254-247-122-237
42914|code|MOVS            R3, #0xC|12-35
42916|code|MOVW            R1, #0x279|64-242-121-33
42920|code|LDR             R2, =aHostrangeCreat_1; "hostrange create"|9-74
42922|code|STR             R3, [R0]|3-96
42924|code|LDR             R0, =aHostlistC; "hostlist.c"|9-72
42926|code|POP.W           {R4-R8,LR}|189-232-240-65
42930|code|B.W             sub_A1F4|255-247-31-189
42934|code|BL              sub_A654|255-247-77-255
42938|code|MOV             R7, R0|7-70
42940|code|CMP             R0, #0|0-40
42942|code|BEQ             loc_A79E|238-208
42944|code|B               loc_A778|218-231
42946|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
42948|code|MOVW            R2, #0x266; line|64-242-102-34
42952|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
42954|code|LDR             R3, =aHostrangeCreat_2; "hostrange_create"|4-75
42956|code|BLX             __assert_fail|254-247-218-237
42960|data|DCD aHostrangeCreat_1; "hostrange create"|216-240-0-0
42964|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
42968|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|252-240-0-0
42972|data|DCD aHostrangeCreat_2; "hostrange_create"|72-237-0-0
42976|code|PUSH            {R4,LR}|16-181
42978|code|CBZ             R0, loc_A7FE|96-177
42980|code|LDRB            R3, [R0,#0x10]|3-124
42982|code|LSLS            R3, R3, #0x1F|219-7
42984|code|BMI             loc_A7F4|4-212
42986|code|LDM             R0, {R0-R3}|15-200
42988|code|POP.W           {R4,LR}|189-232-16-64
42992|code|B.W             sub_A75C|255-247-180-191
42996|code|LDR             R0, [R0]|0-104
42998|code|POP.W           {R4,LR}|189-232-16-64
43002|code|B.W             sub_A6E0|255-247-113-191
43006|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
43008|code|MOV.W           R2, #0x28C; line|79-244-35-114
43012|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
43014|code|LDR             R3, =aHostrangeCopy; "hostrange_copy"|3-75
43016|code|BLX             __assert_fail|254-247-188-237
43020|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
43024|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
43028|data|DCD aHostrangeCopy; "hostrange_copy"|92-237-0-0
43032|code|PUSH            {R3-R5,LR}|56-181
43034|code|MOV             R4, R0|4-70
43036|code|MOV             R5, R1|13-70
43038|code|CMP             R0, #0|0-40
43040|code|BEQ             loc_A87C|44-208
43042|code|LDR             R3, [R0,#4]|67-104
43044|code|CMP             R3, R1|139-66
43046|code|BHI             loc_A86E|34-216
43048|code|LDR             R2, [R0,#8]|130-104
43050|code|CMP             R1, R2|145-66
43052|code|BHI             loc_A86E|31-216
43054|code|CMP             R3, R1|139-66
43056|code|BEQ             loc_A84E|13-208
43058|code|CMP             R1, R2|145-66
43060|code|BEQ             loc_A846|7-208
43062|code|BL              sub_A7E0|255-247-211-255
43066|code|CBZ             R0, loc_A856|96-177
43068|code|SUBS            R3, R5, #1|107-30
43070|code|ADDS            R5, #1|1-53
43072|code|STR             R3, [R4,#8]|163-96
43074|code|STR             R5, [R0,#4]|69-96
43076|code|POP             {R3-R5,PC}|56-189
43078|code|SUBS            R5, R1, #1|77-30
43080|code|MOVS            R0, #0|0-32
43082|code|STR             R5, [R4,#8]|165-96
43084|code|POP             {R3-R5,PC}|56-189
43086|code|ADDS            R3, #1|1-51
43088|code|MOVS            R0, #0|0-32
43090|code|STR             R3, [R4,#4]|99-96
43092|code|POP             {R3-R5,PC}|56-189
43094|code|BLX             __errno_location|254-247-30-237
43098|code|MOVS            R3, #0xC|12-35
43100|code|MOV.W           R1, #0x2B4|79-244-45-113
43104|code|LDR             R2, =aHostrangeCopy_0; "hostrange copy"|10-74
43106|code|STR             R3, [R0]|3-96
43108|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
43110|code|POP.W           {R3-R5,LR}|189-232-56-64
43114|code|B.W             sub_A1F4|255-247-195-188
43118|code|LDR             R0, =aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|9-72
43120|code|MOV.W           R2, #0x2AC; line|79-244-43-114
43124|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
43126|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|8-75
43128|code|BLX             __assert_fail|254-247-132-237
43132|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|7-72
43134|code|MOVW            R2, #0x2AB; line|64-242-171-34
43138|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
43140|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|4-75
43142|code|BLX             __assert_fail|254-247-126-237
43146|data|ALIGN 4|0-191
43148|data|DCD aHostrangeCopy_0; "hostrange copy"|72-241-0-0
43152|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
43156|data|DCD aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|44-241-0-0
43160|data|DCD aHostrangeDelet; "hostrange_delete_host"|108-237-0-0
43164|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
43168|code|PUSH            {R3-R5,LR}|56-181
43170|code|MOV             R4, R0|4-70
43172|code|MOV             R5, R1|13-70
43174|code|CBZ             R0, loc_A8CC|136-177
43176|code|CBZ             R1, loc_A8DA|185-177
43178|code|BL              sub_A50C|255-247-47-254
43182|code|CBZ             R0, loc_A8B2|0-177
43184|code|POP             {R3-R5,PC}|56-189
43186|code|MOV             R0, R4|32-70
43188|code|MOV             R1, R5|41-70
43190|code|BL              sub_A5D4|255-247-141-254
43194|code|CBZ             R0, loc_A8C4|24-177
43196|code|LDR             R0, [R4,#4]|96-104
43198|code|LDR             R3, [R5,#4]|107-104
43200|code|SUBS            R0, R0, R3|192-26
43202|code|POP             {R3-R5,PC}|56-189
43204|code|LDR             R0, [R4,#0xC]|224-104
43206|code|LDR             R3, [R5,#0xC]|235-104
43208|code|SUBS            R0, R0, R3|192-26
43210|code|POP             {R3-R5,PC}|56-189
43212|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
43214|code|MOVW            R2, #0x2C7; line|64-242-199-34
43218|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
43220|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|6-75
43222|code|BLX             __assert_fail|254-247-86-237
43226|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|6-72
43228|code|MOV.W           R2, #0x2C8; line|79-244-50-114
43232|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
43234|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|3-75
43236|code|BLX             __assert_fail|254-247-78-237
43240|data|DCD aH1Void0; "h1 != ((void *)0)"|196-240-0-0
43244|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
43248|data|DCD aHostrangeCmp; "hostrange_cmp"|132-237-0-0
43252|data|DCD aH2Void0; "h2 != ((void *)0)"|88-241-0-0
43256|code|LDR             R1, [R1]|9-104
43258|code|LDR             R0, [R0]|0-104
43260|code|B.W             sub_A8A0|255-247-208-191
43264|code|PUSH            {R3-R5,LR}|56-181
43266|code|MOV             R4, R0|4-70
43268|code|MOV             R5, R1|13-70
43270|code|CMP             R0, #0|0-40
43272|code|BEQ             loc_A986|61-208
43274|code|CMP             R1, #0|0-41
43276|code|BEQ             loc_A978|52-208
43278|code|BL              sub_A8A0|255-247-199-255
43282|code|CMP             R0, #0|0-40
43284|code|BGT             loc_A994|62-220
43286|code|MOV             R0, R4|32-70
43288|code|MOV             R1, R5|41-70
43290|code|BL              sub_A50C|255-247-247-253
43294|code|CMP             R0, #0|0-40
43296|code|BNE             loc_A96C|36-209
43298|code|MOV             R0, R4|32-70
43300|code|MOV             R1, R5|41-70
43302|code|BL              sub_A5D4|255-247-85-254
43306|code|CMP             R0, #0|0-40
43308|code|BEQ             loc_A96C|30-208
43310|code|LDRB            R3, [R4,#0x10]|35-124
43312|code|LSLS            R1, R3, #0x1F|217-7
43314|code|BMI             loc_A950|13-212
43316|code|LDR             R2, [R5,#4]|106-104
43318|code|LDR             R3, [R4,#8]|163-104
43320|code|SUBS            R1, R2, #1|81-30
43322|code|CMP             R3, R1|139-66
43324|code|BEQ             loc_A964|18-208
43326|code|CMP             R3, R2|147-66
43328|code|BCC             loc_A972|23-211
43330|code|LDR             R1, [R5,#8]|169-104
43332|code|CMP             R3, R1|139-66
43334|code|BCS             loc_A95A|8-210
43336|code|ADDS            R3, #1|1-51
43338|code|STR             R1, [R4,#8]|161-96
43340|code|SUBS            R0, R3, R2|152-26
43342|code|POP             {R3-R5,PC}|56-189
43344|code|LDRB            R3, [R5,#0x10]|43-124
43346|code|LSLS            R2, R3, #0x1F|218-7
43348|code|BPL             loc_A934|238-213
43350|code|MOVS            R0, #1|1-32
43352|code|POP             {R3-R5,PC}|56-189
43354|code|MOV             R0, R5|40-70
43356|code|POP.W           {R3-R5,LR}|189-232-56-64
43360|code|B.W             sub_A5A0|255-247-30-190
43364|code|LDR             R3, [R5,#8]|171-104
43366|code|MOVS            R0, #0|0-32
43368|code|STR             R3, [R4,#8]|163-96
43370|code|POP             {R3-R5,PC}|56-189
43372|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
43376|code|POP             {R3-R5,PC}|56-189
43378|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
43382|code|POP             {R3-R5,PC}|56-189
43384|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|10-72
43386|code|MOVW            R2, #0x352; line|64-242-82-50
43390|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
43392|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|10-75
43394|code|BLX             __assert_fail|254-247-0-237
43398|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|10-72
43400|code|MOVW            R2, #0x351; line|64-242-81-50
43404|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
43406|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|7-75
43408|code|BLX             __assert_fail|254-247-248-236
43412|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|7-72
43414|code|MOVW            R2, #0x353; line|64-242-83-50
43418|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
43420|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|3-75
43422|code|BLX             __assert_fail|254-247-242-236
43426|data|ALIGN 4|0-191
43428|data|DCD aH2Void0; "h2 != ((void *)0)"|88-241-0-0
43432|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
43436|data|DCD aHostrangeJoin; "hostrange_join"|148-237-0-0
43440|data|DCD aH1Void0; "h1 != ((void *)0)"|196-240-0-0
43444|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|108-241-0-0
43448|code|PUSH            {R3-R5,LR}|56-181
43450|code|MOV             R4, R0|4-70
43452|code|MOV             R5, R1|13-70
43454|code|BL              sub_A50C|255-247-165-253
43458|code|CBNZ            R0, loc_A9D8|72-185
43460|code|LDRB            R3, [R4,#0x10]|35-124
43462|code|LSLS            R3, R3, #0x1F|219-7
43464|code|BMI             locret_A9DA|7-212
43466|code|LDRB            R3, [R5,#0x10]|43-124
43468|code|TST.W           R3, #1|19-240-1-15
43472|code|ITE NE|20-191
43474|code|MOVNE           R0, #0|0-32
43476|code|MOVEQ           R0, #1|1-32
43478|code|POP             {R3-R5,PC}|56-189
43480|code|MOVS            R0, #0|0-32
43482|code|POP             {R3-R5,PC}|56-189
43484|code|PUSH.W          {R4-R11,LR}|45-233-240-79
43488|code|SUB             SP, SP, #0x24|137-176
43490|code|LDR             R6, [R1]|14-104
43492|code|MOV             R8, R0|128-70
43494|code|STR             R3, [SP,#0x48+s]|4-147
43496|code|MOV             R5, R2|21-70
43498|code|LDR             R3, [R0,#8]|131-104
43500|code|LDR             R7, [R0,#0x10]|7-105
43502|code|MOV.W           R9, R6,LSL#2|79-234-134-9
43506|code|SUBS            R3, #1|1-59
43508|code|STR             R1, [SP,#0x48+var_30]|6-145
43510|code|CMP             R6, R3|158-66
43512|code|ADD.W           R10, R7, R9|7-235-9-10
43516|code|LDR.W           R4, [R7,R6,LSL#2]|87-248-38-64
43520|code|IT GE|168-191
43522|code|MOVGE.W         R11, #0|79-240-0-11
43526|code|BGE             loc_AA0E|2-218
43528|code|ADDS            R3, R6, #1|115-28
43530|code|LDR.W           R11, [R7,R3,LSL#2]|87-248-35-176
43534|code|MOV             R0, R4|32-70
43536|code|BL              sub_A5A0|255-247-198-253
43540|code|CMP             R0, #1|1-40
43542|code|BLS.W           loc_AB58|64-242-159-128
43546|code|MOVS            R1, #1|1-33
43548|code|STR             R1, [SP,#0x48+var_34]|5-145
43550|code|LDR             R3, [R4]|35-104
43552|code|MOV             R1, R5; maxlen|41-70
43554|code|LDR             R0, [SP,#0x48+s]; s|4-152
43556|code|LDR             R2, =(aRegcompFailedS+0x10); format|87-74
43558|code|BLX             snprintf|254-247-60-236
43562|code|CMP             R0, R5|168-66
43564|code|MOV             R4, R0|4-70
43566|code|ITE LS|148-191
43568|code|MOVLS           R3, #0|0-35
43570|code|MOVHI           R3, #1|1-35
43572|code|ORRS.W          R3, R3, R0,LSR#31|83-234-208-115
43576|code|IT NE|24-191
43578|code|MOVNE           R4, R5|44-70
43580|code|BNE             loc_AB32|121-209
43582|code|LDR             R2, [SP,#0x48+var_34]|5-154
43584|code|UXTB            R2, R2|210-178
43586|code|STR             R2, [SP,#0x48+var_2C]|7-146
43588|code|MOV             R3, R2|19-70
43590|code|CMP             R5, R4|165-66
43592|code|ITE LS|148-191
43594|code|MOVLS           R3, #0|0-35
43596|code|ANDHI.W         R3, R3, #1|3-240-1-3
43600|code|CMP             R3, #0|0-43
43602|code|BNE             loc_AB4E|124-209
43604|code|LDR.W           R7, [R7,R9]|87-248-9-112
43608|code|MOV             R11, R8|195-70
43610|code|B               loc_AA8A|22-224
43612|code|ADD             R4, R8|68-68
43614|code|CMP             R5, R4|165-66
43616|code|BLS             loc_AB0E|85-217
43618|code|LDR             R3, [SP,#0x48+var_34]|5-155
43620|code|CBZ             R3, loc_AA6E|27-177
43622|code|LDR             R2, [SP,#0x48+s]|4-154
43624|code|MOVS            R1, #0x2C ; ','|44-33
43626|code|STRB            R1, [R2,R4]|17-85
43628|code|ADDS            R4, #1|1-52
43630|code|LDR.W           R3, [R11,#8]|219-248-8-48
43634|code|ADDS            R6, #1|1-54
43636|code|CMP             R6, R3|158-66
43638|code|BGE             loc_AB0E|74-218
43640|code|LDR.W           R7, [R10,#4]|218-248-4-112
43644|code|LDR.W           R1, [R10],#4|90-248-4-27
43648|code|MOV             R0, R7|56-70
43650|code|BL              sub_A9B8|255-247-153-255
43654|code|CMP             R0, #0|0-40
43656|code|BEQ             loc_AB0E|65-208
43658|code|LDR             R2, [SP,#0x48+s]|4-154
43660|code|RSB.W           R9, R4, R5|196-235-5-9
43664|code|CMP             R5, R9|77-69
43666|code|IT CC|56-191
43668|code|MOVCC.W         R9, #0|79-240-0-9
43672|code|ADDS.W          R12, R2, R4|18-235-4-12
43676|code|BEQ             loc_AB76|107-208
43678|code|LDRB            R3, [R7,#0x10]|59-124
43680|code|MOV.W           R8, #0|79-240-0-8
43684|code|AND.W           R3, R3, #1|3-240-1-3
43688|code|CMP.W           R9, #0|185-241-0-15
43692|code|IT EQ|8-191
43694|code|ORREQ.W         R3, R3, #1|67-240-1-3
43698|code|CMP             R3, #0|0-43
43700|code|BNE             loc_AA5C|210-209
43702|code|LDR.W           LR, [R7,#4]|215-248-4-224
43706|code|MOV             R0, R12; s|96-70
43708|code|LDR             R3, [R7,#0xC]|251-104
43710|code|MOV             R1, R9; maxlen|73-70
43712|code|LDR             R2, =a0Lu; "%0*lu"|49-74
43714|code|STR.W           R12, [SP,#0x48+var_3C]|205-248-12-192
43718|code|STR.W           LR, [SP,#0x48+var_48]|205-248-0-224
43722|code|BLX             snprintf|254-247-234-235
43726|code|LDR.W           R12, [SP,#0x48+var_3C]|221-248-12-192
43730|code|MVN.W           R3, R0|111-234-0-3
43734|code|MOV             R8, R0|128-70
43736|code|LSRS            R3, R3, #0x1F|219-15
43738|code|CMP             R0, R9|72-69
43740|code|ITE CS|44-191
43742|code|MOVCS           R3, #0|0-35
43744|code|ANDCC.W         R3, R3, #1|3-240-1-3
43748|code|CMP             R3, #0|0-43
43750|code|BEQ             loc_AA5C|185-208
43752|code|LDR             R1, [R7,#8]|185-104
43754|code|LDR             R3, [R7,#4]|123-104
43756|code|CMP             R3, R1|139-66
43758|code|BCS             loc_AA5C|181-210
43760|code|RSB.W           R9, R8, R9|200-235-9-9
43764|code|LDR             R3, [R7,#0xC]|251-104
43766|code|ADD             R0, R12; s|96-68
43768|code|STR             R1, [SP,#0x48+var_48]|0-145
43770|code|LDR             R2, =a0Lu_0; "-%0*lu"|36-74
43772|code|MOV             R1, R9; maxlen|73-70
43774|code|BLX             snprintf|254-247-208-235
43778|code|CMP             R0, #0|0-40
43780|code|ITE GE|172-191
43782|code|ADDGE           R8, R0|128-68
43784|code|MOVLT.W         R8, #0xFFFFFFFF|79-240-255-56
43788|code|B               loc_AA5C|166-231
43790|code|LDR             R3, [SP,#0x48+var_2C]|7-155
43792|code|CMP             R4, R5|172-66
43794|code|ITE CS|44-191
43796|code|MOVCS           R3, #0|0-35
43798|code|ANDCC.W         R3, R3, #1|3-240-1-3
43802|code|CBZ             R3, loc_AB3A|115-177
43804|code|CMP             R4, #0|0-44
43806|code|BLE             loc_AB3A|12-221
43808|code|LDR             R1, [SP,#0x48+s]|4-153
43810|code|MOVS            R2, #0x5D ; ']'|93-34
43812|code|ADDS            R3, R1, R4|11-25
43814|code|STRB.W          R2, [R3,#-1]|3-248-1-44
43818|code|MOVS            R3, #0|0-35
43820|code|STRB            R3, [R1,R4]|11-85
43822|code|LDR             R2, [SP,#0x48+var_30]|6-154
43824|code|STR             R6, [R2]|22-96
43826|code|MOV             R0, R4|32-70
43828|code|ADD             SP, SP, #0x24 ; '$'|9-176
43830|code|POP.W           {R4-R11,PC}|189-232-240-143
43834|code|CMP             R5, R4|165-66
43836|code|BHI             loc_AB6A|21-216
43838|code|CMP             R5, #0|0-45
43840|code|BEQ             loc_AB2E|245-208
43842|code|LDR             R2, [SP,#0x48+s]|4-154
43844|code|MOVS            R3, #0|0-35
43846|code|ADDS            R5, R2, R5|85-25
43848|code|STRB.W          R3, [R5,#-1]|5-248-1-60
43852|code|B               loc_AB2E|239-231
43854|code|LDR             R1, [SP,#0x48+s]|4-153
43856|code|MOVS            R3, #0x5B ; '['|91-35
43858|code|STRB            R3, [R1,R4]|11-85
43860|code|ADDS            R4, #1|1-52
43862|code|B               loc_AA54|125-231
43864|code|MOV             R0, R4|32-70
43866|code|MOV             R1, R11|89-70
43868|code|BL              sub_A9B8|255-247-44-255
43872|code|ADDS            R0, #0|0-48
43874|code|IT NE|24-191
43876|code|MOVNE           R0, #1|1-32
43878|code|STR             R0, [SP,#0x48+var_34]|5-144
43880|code|B               loc_AA1E|89-231
43882|code|LDR             R1, [SP,#0x48+s]|4-153
43884|code|BIC.W           R3, R4, R4,ASR#31|36-234-228-115
43888|code|MOVS            R2, #0|0-34
43890|code|STRB            R2, [R1,R3]|202-84
43892|code|B               loc_AB2E|219-231
43894|code|LDR             R0, =aBufVoid0; "buf != ((void *)0)"|6-72
43896|code|MOVW            R2, #0x3CF; line|64-242-207-50
43900|code|LDR             R1, =aHostlistC; "hostlist.c"|5-73
43902|code|LDR             R3, =aHostrangeNumst; "hostrange_numstr"|6-75
43904|code|BLX             __assert_fail|254-247-0-236
43908|data|DCD aRegcompFailedS+0x10; "%s"|104-249-0-0
43912|data|DCD a0Lu; "%0*lu"|156-241-0-0
43916|data|DCD a0Lu_0; "-%0*lu"|164-241-0-0
43920|data|DCD aBufVoid0; "buf != ((void *)0)"|136-241-0-0
43924|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
43928|data|DCD aHostrangeNumst; "hostrange_numstr"|164-237-0-0
43932|code|PUSH            {R4-R6,LR}|112-181
43934|code|MOV             R5, R0|5-70
43936|code|MOV             R6, R1|14-70
43938|code|CBZ             R0, loc_ABDA|208-177
43940|code|LDR             R2, [R0]|2-104
43942|code|MOVW            R3, #0xDEAD|77-246-173-99
43946|code|CMP             R2, R3|154-66
43948|code|BNE             loc_ABE8|28-209
43950|code|LDR             R4, [R5,#4]|108-104
43952|code|LSLS            R1, R1, #2; size|137-0
43954|code|LDR             R0, [R0,#0x10]; ptr|0-105
43956|code|STR             R6, [R5,#4]|110-96
43958|code|BLX             realloc|254-247-208-234
43962|code|STR             R0, [R5,#0x10]|40-97
43964|code|CBZ             R0, locret_ABD4|80-177
43966|code|CMP             R6, R4|166-66
43968|code|BLS             loc_ABD6|9-217
43970|code|MOVS            R3, #0|0-35
43972|code|B               loc_ABC8|0-224
43974|code|LDR             R0, [R5,#0x10]|40-105
43976|code|STR.W           R3, [R0,R4,LSL#2]|64-248-36-48
43980|code|ADDS            R4, #1|1-52
43982|code|CMP             R6, R4|166-66
43984|code|BHI             loc_ABC6|249-216
43986|code|MOVS            R0, #1|1-32
43988|code|POP             {R4-R6,PC}|112-189
43990|code|MOVS            R0, #1|1-32
43992|code|POP             {R4-R6,PC}|112-189
43994|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
43996|code|MOVW            R2, #0x411; line|64-242-17-66
44000|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44002|code|LDR             R3, =aHostlistResize; "hostlist_resize"|7-75
44004|code|BLX             __assert_fail|254-247-206-235
44008|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|6-72
44010|code|MOVW            R2, #0x412; line|64-242-18-66
44014|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44016|code|LDR             R3, =aHostlistResize; "hostlist_resize"|3-75
44018|code|BLX             __assert_fail|254-247-200-235
44022|data|ALIGN 4|0-191
44024|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
44028|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
44032|data|DCD aHostlistResize; "hostlist_resize"|184-237-0-0
44036|data|DCD aHlMagic57005; "hl->magic == 57005"|192-241-0-0
44040|code|LDR             R1, [R0,#4]|65-104
44042|code|PUSH            {R3,LR}|8-181
44044|code|ADDS            R1, #0x10|16-49
44046|code|BL              sub_AB9C|255-247-197-255
44050|code|ADDS            R0, #0|0-48
44052|code|IT NE|24-191
44054|code|MOVNE           R0, #1|1-32
44056|code|POP             {R3,PC}|8-189
44058|data|ALIGN 4|0-191
44060|code|PUSH            {R3-R7,LR}|248-181
44062|code|MOV             R4, R0|4-70
44064|code|MOV             R6, R1|14-70
44066|code|CMP             R1, #0|0-41
44068|code|BEQ             loc_ACB0|68-208
44070|code|CMP             R0, #0|0-40
44072|code|BEQ             loc_ACCC|80-208
44074|code|LDR             R2, [R0]|2-104
44076|code|MOVW            R3, #0xDEAD|77-246-173-99
44080|code|CMP             R2, R3|154-66
44082|code|BNE             loc_ACBE|68-209
44084|code|LDR             R5, [R0,#8]|133-104
44086|code|LDR             R3, [R0,#0x10]|3-105
44088|code|CMP             R5, #0|0-45
44090|code|IT LE|216-191
44092|code|LDRLE           R7, [R3]|31-104
44094|code|BLE             loc_AC46|2-221
44096|code|SUBS            R2, R5, #1|106-30
44098|code|LDR.W           R7, [R3,R2,LSL#2]|83-248-34-112
44102|code|LDR             R3, [R4,#4]|99-104
44104|code|CMP             R5, R3|157-66
44106|code|BEQ             loc_AC94|35-208
44108|code|CMP             R5, #0|0-45
44110|code|BLE             loc_AC5A|4-221
44112|code|MOV             R0, R7|56-70
44114|code|MOV             R1, R6|49-70
44116|code|BL              sub_A50C|255-247-90-252
44120|code|CBZ             R0, loc_AC7A|120-177
44122|code|MOV             R0, R6|48-70
44124|code|LDR             R7, [R4,#0x10]|39-105
44126|code|BL              sub_A7E0|255-247-191-253
44130|code|ADDS            R3, R5, #1|107-28
44132|code|STR.W           R0, [R7,R5,LSL#2]|71-248-37-0
44136|code|STR             R3, [R4,#8]|163-96
44138|code|CBZ             R0, loc_ACA4|216-177
44140|code|MOV             R0, R6|48-70
44142|code|BL              sub_A5A0|255-247-151-252
44146|code|LDR             R3, [R4,#0xC]|227-104
44148|code|ADDS            R0, R0, R3|192-24
44150|code|STR             R0, [R4,#0xC]|224-96
44152|code|POP             {R3-R7,PC}|248-189
44154|code|LDR             R3, [R6,#4]|115-104
44156|code|LDR             R2, [R7,#8]|186-104
44158|code|SUBS            R3, #1|1-59
44160|code|CMP             R2, R3|154-66
44162|code|BNE             loc_AC5A|234-209
44164|code|MOV             R0, R7|56-70
44166|code|MOV             R1, R6|49-70
44168|code|BL              sub_A5D4|255-247-164-252
44172|code|CBZ             R0, loc_ACA0|64-177
44174|code|LDR             R3, [R6,#8]|179-104
44176|code|STR             R3, [R7,#8]|187-96
44178|code|B               loc_AC6C|235-231
44180|code|MOV             R0, R4|32-70
44182|code|BL              sub_AC08|255-247-183-255
44186|code|CBZ             R0, loc_ACAA|48-177
44188|code|LDR             R5, [R4,#8]|165-104
44190|code|B               loc_AC4C|213-231
44192|code|LDR             R5, [R4,#8]|165-104
44194|code|B               loc_AC5A|218-231
44196|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44200|code|POP             {R3-R7,PC}|248-189
44202|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44206|code|POP             {R3-R7,PC}|248-189
44208|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
44210|code|MOVW            R2, #0x433; line|64-242-51-66
44214|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
44216|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|10-75
44218|code|BLX             __assert_fail|254-247-100-235
44222|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
44224|code|MOVW            R2, #0x434; line|64-242-52-66
44228|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44230|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|7-75
44232|code|BLX             __assert_fail|254-247-92-235
44236|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
44238|code|MOVW            R2, #0x434; line|64-242-52-66
44242|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44244|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|3-75
44246|code|BLX             __assert_fail|254-247-86-235
44250|data|ALIGN 4|0-191
44252|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
44256|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
44260|data|DCD aHostlistPushRa; "hostlist_push_range"|200-237-0-0
44264|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
44268|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
44272|code|PUSH.W          {R4-R8,LR}|45-233-240-65
44276|code|MOV             R4, R0|4-70
44278|code|SUB             SP, SP, #8|130-176
44280|code|MOV             R7, R2|23-70
44282|code|CMP             R0, #0|0-40
44284|code|BEQ             loc_AD88|68-208
44286|code|LDR             R2, [R0]|2-104
44288|code|MOVW            R3, #0xDEAD|77-246-173-99
44292|code|CMP             R2, R3|154-66
44294|code|BNE             loc_ADA4|77-209
44296|code|CMP             R1, #0|0-41
44298|code|BEQ             loc_AD96|68-208
44300|code|LDR             R3, [R0,#8]|131-104
44302|code|MOVS            R0, #0|0-32
44304|code|CMP             R3, R7|187-66
44306|code|BLT             loc_AD72|46-219
44308|code|LDR             R2, [R4,#4]|98-104
44310|code|CMP             R3, R2|147-66
44312|code|BEQ             loc_AD78|46-208
44314|code|LDR.W           R8, [R4,#0x10]|212-248-16-128
44318|code|MOV             R0, R1|8-70
44320|code|MOV             R5, R7|61-70
44322|code|LDR.W           R6, [R8,R7,LSL#2]|88-248-39-96
44326|code|BL              sub_A7E0|255-247-91-253
44330|code|LDR.W           R12, [R4,#8]|212-248-8-192
44334|code|ADDS            R3, R7, #1|123-28
44336|code|CMP             R12, R3|156-69
44338|code|STR.W           R0, [R8,R7,LSL#2]|72-248-39-0
44342|code|BLT             loc_AD4C|9-219
44344|code|LSLS            R3, R3, #2|155-0
44346|code|B               loc_AD3E|0-224
44348|code|MOV             R6, R1|14-70
44350|code|LDR             R2, [R4,#0x10]|34-105
44352|code|ADDS            R5, #1|1-53
44354|code|LDR             R1, [R2,R3]|209-88
44356|code|STR             R6, [R2,R3]|214-80
44358|code|ADDS            R3, #4|4-51
44360|code|CMP             R5, R12|101-69
44362|code|BNE             loc_AD3C|247-209
44364|code|LDR             R3, [R4,#0x14]|99-105
44366|code|ADD.W           R2, R12, #1|12-241-1-2
44370|code|STR             R2, [R4,#8]|162-96
44372|code|CBZ             R3, loc_AD70|99-177
44374|code|LDR             R2, [R3,#8]|154-104
44376|code|CMP             R7, R2|151-66
44378|code|BGT             loc_AD6A|6-220
44380|code|LDR             R1, [R3,#4]|89-104
44382|code|ADDS            R2, #1|1-50
44384|code|LDR             R1, [R1,#0x10]|9-105
44386|code|STR             R2, [R3,#8]|154-96
44388|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
44392|code|STR             R2, [R3,#0xC]|218-96
44394|code|LDR             R3, [R3,#0x14]|91-105
44396|code|CMP             R3, #0|0-43
44398|code|BNE             loc_AD56|242-209
44400|code|MOVS            R0, #1|1-32
44402|code|ADD             SP, SP, #8|2-176
44404|code|POP.W           {R4-R8,PC}|189-232-240-129
44408|code|MOV             R0, R4|32-70
44410|code|STR             R1, [SP,#0x20+var_1C]|1-145
44412|code|BL              sub_AC08|255-247-68-255
44416|code|LDR             R1, [SP,#0x20+var_1C]|1-153
44418|code|CMP             R0, #0|0-40
44420|code|BNE             loc_AD1A|201-209
44422|code|B               loc_AD72|244-231
44424|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
44426|code|MOV.W           R2, #0x468; line|79-244-141-98
44430|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
44432|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|10-75
44434|code|BLX             __assert_fail|254-247-248-234
44438|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
44440|code|MOVW            R2, #0x46A; line|64-242-106-66
44444|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44446|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|7-75
44448|code|BLX             __assert_fail|254-247-240-234
44452|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
44454|code|MOVW            R2, #0x469; line|64-242-105-66
44458|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44460|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|3-75
44462|code|BLX             __assert_fail|254-247-234-234
44466|data|ALIGN 4|0-191
44468|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
44472|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
44476|data|DCD aHostlistInsert; "hostlist_insert_range"|220-237-0-0
44480|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
44484|data|DCD aHlMagic57005; "hl->magic == 57005"|192-241-0-0
44488|code|PUSH            {R3-R7,LR}|248-181
44490|code|MOV             R4, R0|4-70
44492|code|CBZ             R0, loc_AE18|32-179
44494|code|LDR             R2, [R0]|2-104
44496|code|MOVW            R3, #0xDEAD|77-246-173-99
44500|code|CMP             R2, R3|154-66
44502|code|BNE             loc_AE1C|33-209
44504|code|BL              sub_A67C|255-247-80-252
44508|code|MOV             R5, R0|5-70
44510|code|CBZ             R0, loc_AE0E|176-177
44512|code|LDR             R1, [R4,#8]|161-104
44514|code|LDR             R3, [R0,#4]|67-104
44516|code|LDR             R2, [R4,#0xC]|226-104
44518|code|CMP             R1, R3|153-66
44520|code|STR             R1, [R0,#8]|129-96
44522|code|STR             R2, [R0,#0xC]|194-96
44524|code|BGT             loc_AE12|17-220
44526|code|LDR             R3, [R4,#8]|163-104
44528|code|CMP             R3, #0|0-43
44530|code|BLE             loc_AE0E|12-221
44532|code|MOVS            R6, #0|0-38
44534|code|LDR             R3, [R4,#0x10]|35-105
44536|code|LDR             R7, [R5,#0x10]|47-105
44538|code|LDR.W           R0, [R3,R6,LSL#2]|83-248-38-0
44542|code|BL              sub_A7E0|255-247-239-252
44546|code|LDR             R3, [R4,#8]|163-104
44548|code|STR.W           R0, [R7,R6,LSL#2]|71-248-38-0
44552|code|ADDS            R6, #1|1-54
44554|code|CMP             R3, R6|179-66
44556|code|BGT             loc_ADF6|243-220
44558|code|MOV             R0, R5|40-70
44560|code|POP             {R3-R7,PC}|248-189
44562|code|BL              sub_AB9C|255-247-195-254
44566|code|B               loc_ADEE|234-231
44568|code|MOV             R5, R0|5-70
44570|code|B               loc_AE0E|248-231
44572|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
44574|code|MOVW            R2, #0x5E2; line|64-242-226-82
44578|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
44580|code|LDR             R3, =aHostlistCopy; "hostlist_copy"|3-75
44582|code|BLX             __assert_fail|254-247-174-234
44586|data|ALIGN 4|0-191
44588|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
44592|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
44596|data|DCD aHostlistCopy; "hostlist_copy"|244-237-0-0
44600|code|PUSH            {R4-R6,LR}|112-181
44602|code|MOV             R5, R0|5-70
44604|code|MOV             R6, R1|14-70
44606|code|MOV             R0, R1|8-70
44608|code|CBZ             R1, locret_AE78|209-177
44610|code|BL              sub_A328|255-247-113-250
44614|code|MOV             R4, R0|4-70
44616|code|LDR             R0, [R0,#0xC]; s|192-104
44618|code|CBZ             R0, loc_AE7A|176-177
44620|code|BLX             strlen|254-247-10-234
44624|code|LDR             R6, [R4,#8]|166-104
44626|code|MOV             R1, R6|49-70
44628|code|MOV             R2, R6|50-70
44630|code|MOV             R3, R0|3-70
44632|code|LDR             R0, [R4,#4]|96-104
44634|code|BL              sub_A75C|255-247-127-252
44638|code|MOV             R6, R0|6-70
44640|code|MOV             R1, R6|49-70
44642|code|MOV             R0, R5|40-70
44644|code|BL              sub_AC1C|255-247-218-254
44648|code|MOV             R0, R6|48-70
44650|code|BL              sub_A30C|255-247-79-250
44654|code|MOV             R0, R4|32-70
44656|code|BL              sub_A2E4|255-247-56-250
44660|code|MOVS            R0, #1|1-32
44662|code|POP             {R4-R6,PC}|112-189
44664|code|POP             {R4-R6,PC}|112-189
44666|code|MOV             R0, R6|48-70
44668|code|BL              sub_A6E0|255-247-48-252
44672|code|MOV             R6, R0|6-70
44674|code|B               loc_AE60|237-231
44676|code|PUSH            {R3-R7,LR}|248-181
44678|code|MOV             R7, R0|7-70
44680|code|MOV             R5, R1|13-70
44682|code|CBZ             R1, loc_AEBC|185-177
44684|code|LDR             R2, [R1]|10-104
44686|code|MOVW            R3, #0xDEAD|77-246-173-99
44690|code|CMP             R2, R3|154-66
44692|code|BNE             loc_AEC2|21-209
44694|code|LDR             R3, [R1,#8]|139-104
44696|code|MOVS            R6, #0|0-38
44698|code|CMP             R3, #0|0-43
44700|code|IT GT|200-191
44702|code|MOVGT           R4, R6|52-70
44704|code|BLE             loc_AEB8|10-221
44706|code|LDR             R3, [R5,#0x10]|43-105
44708|code|MOV             R0, R7|56-70
44710|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
44714|code|ADDS            R4, #1|1-52
44716|code|BL              sub_AC1C|255-247-182-254
44720|code|LDR             R3, [R5,#8]|171-104
44722|code|CMP             R3, R4|163-66
44724|code|ADD             R6, R0|6-68
44726|code|BGT             loc_AEA2|244-220
44728|code|MOV             R0, R6|48-70
44730|code|POP             {R3-R7,PC}|248-189
44732|code|MOV             R6, R1|14-70
44734|code|MOV             R0, R6|48-70
44736|code|POP             {R3-R7,PC}|248-189
44738|code|LDR             R0, =aH2Magic57005; "(h2)->magic == 57005"|3-72
44740|code|MOVW            R2, #0x639; line|64-242-57-98
44744|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
44746|code|LDR             R3, =aHostlistPushLi; "hostlist_push_list"|3-75
44748|code|BLX             __assert_fail|254-247-90-234
44752|data|DCD aH2Magic57005; "(h2)->magic == 57005"|236-241-0-0
44756|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
44760|data|DCD aHostlistPushLi; "hostlist_push_list"|4-238-0-0
44764|code|PUSH.W          {R4-R9,LR}|45-233-240-67
44768|code|MOV             R4, R0|4-70
44770|code|SUB             SP, SP, #0xC|131-176
44772|code|CMP             R0, #0|0-40
44774|code|BEQ             loc_AFBE|106-208
44776|code|LDR             R2, [R0]|2-104
44778|code|MOVW            R3, #0xDEAD|77-246-173-99
44782|code|CMP             R2, R3|154-66
44784|code|BNE             loc_AFB0|94-209
44786|code|LDR             R7, [R0,#0xC]|199-104
44788|code|CMP             R7, #0|0-47
44790|code|BLE             loc_AF90|75-221
44792|code|LDR             R2, [R0,#8]|130-104
44794|code|LDR             R3, [R0,#0x10]|3-105
44796|code|SUBS            R2, #1|1-58
44798|code|LDR.W           R5, [R3,R2,LSL#2]|83-248-34-80
44802|code|CMP             R5, #0|0-45
44804|code|BEQ             loc_AFCC|98-208
44806|code|LDRB            R3, [R5,#0x10]|43-124
44808|code|LSLS            R2, R3, #0x1F|218-7
44810|code|BMI             loc_AF44|27-212
44812|code|MOV             R0, R5|40-70
44814|code|BL              sub_A5A0|255-247-71-251
44818|code|MOV             R6, R0|6-70
44820|code|CBNZ            R0, loc_AF56|248-185
44822|code|SUBS            R7, #1|1-63
44824|code|MOV             R0, R5|40-70
44826|code|STR             R7, [R4,#0xC]|231-96
44828|code|BL              sub_A61C|255-247-126-251
44832|code|CBZ             R0, loc_AF3C|96-177
44834|code|LDR             R3, [R4,#8]|163-104
44836|code|LDR             R2, [R4,#0x10]|34-105
44838|code|SUBS            R3, #1|1-59
44840|code|STR             R3, [R4,#8]|163-96
44842|code|LDR.W           R0, [R2,R3,LSL#2]|82-248-35-0
44846|code|BL              sub_A30C|255-247-237-249
44850|code|LDR             R2, [R4,#8]|162-104
44852|code|LDR             R3, [R4,#0x10]|35-105
44854|code|MOVS            R1, #0|0-33
44856|code|STR.W           R1, [R3,R2,LSL#2]|67-248-34-16
44860|code|MOV             R0, R6|48-70
44862|code|ADD             SP, SP, #0xC|3-176
44864|code|POP.W           {R4-R9,PC}|189-232-240-131
44868|code|LDM.W           R5, {R0,R3}|149-232-9-0
44872|code|ADDS            R3, #1|1-51
44874|code|STR             R3, [R5,#4]|107-96
44876|code|BLX             __strdup|254-247-180-233
44880|code|LDR             R7, [R4,#0xC]|231-104
44882|code|MOV             R6, R0|6-70
44884|code|B               loc_AF16|223-231
44886|code|LDR             R7, [R5]|47-104
44888|code|MOV             R0, R7; s|56-70
44890|code|BLX             strlen|254-247-132-233
44894|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
44898|code|ADD.W           R9, R8, #0x10|8-241-16-9
44902|code|ADD             R9, R0|129-68
44904|code|MOV             R0, R9; size|72-70
44906|code|BLX             malloc|254-247-62-233
44910|code|MOV             R6, R0|6-70
44912|code|CBZ             R0, loc_AF94|128-177
44914|code|LDR.W           LR, [R5,#8]|213-248-8-224
44918|code|MOV             R3, R7|59-70
44920|code|MOV             R1, R9; maxlen|73-70
44922|code|LDR             R2, =aS0Lu; "%s%0*lu"|24-74
44924|code|ADD.W           R12, LR, #0xFFFFFFFF|14-241-255-60
44928|code|STR.W           R12, [R5,#8]|197-248-8-192
44932|code|STMEA.W         SP, {R8,LR}|141-232-0-65
44936|code|BLX             snprintf|254-247-138-233
44940|code|LDR             R7, [R4,#0xC]|231-104
44942|code|B               loc_AF16|194-231
44944|code|MOVS            R6, #0|0-38
44946|code|B               loc_AF3C|211-231
44948|code|BLX             __errno_location|254-247-126-233
44952|code|MOVS            R2, #0xC|12-34
44954|code|MOV.W           R1, #0x320|79-244-72-113
44958|code|MOV             R3, R0|3-70
44960|code|LDR             R0, =aHostlistC; "hostlist.c"|15-72
44962|code|STR             R2, [R3]|26-96
44964|code|LDR             R2, =aHostrangePop; "hostrange pop"|15-74
44966|code|BL              sub_A1F4|255-247-37-249
44970|code|LDR             R7, [R4,#0xC]|231-104
44972|code|MOV             R6, R0|6-70
44974|code|B               loc_AF16|178-231
44976|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|13-72
44978|code|MOV.W           R2, #0x648; line|79-244-201-98
44982|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
44984|code|LDR             R3, =aHostlistPop; "hostlist_pop"|12-75
44986|code|BLX             __assert_fail|254-247-228-233
44990|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|12-72
44992|code|MOV.W           R2, #0x648; line|79-244-201-98
44996|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
44998|code|LDR             R3, =aHostlistPop; "hostlist_pop"|9-75
45000|code|BLX             __assert_fail|254-247-220-233
45004|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|9-72
45006|code|MOV.W           R2, #0x318; line|79-244-70-114
45010|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
45012|code|LDR             R3, =aHostrangePop_0; "hostrange_pop"|8-75
45014|code|BLX             __assert_fail|254-247-214-233
45018|data|ALIGN 4|0-191
45020|data|DCD aS0Lu; "%s%0*lu"|20-242-0-0
45024|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
45028|data|DCD aHostrangePop; "hostrange pop"|4-242-0-0
45032|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
45036|data|DCD aHostlistPop; "hostlist_pop"|24-238-0-0
45040|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
45044|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
45048|data|DCD aHostrangePop_0; "hostrange_pop"|40-238-0-0
45052|code|PUSH.W          {R4-R10,LR}|45-233-240-71
45056|code|SUB             SP, SP, #0x60 ; '`'|152-176
45058|code|LDR             R7, =__stack_chk_guard|42-79
45060|code|MOV             R6, R1|14-70
45062|code|LDR             R3, [R7]|59-104
45064|code|STR             R3, [SP,#0x5C]|23-147
45066|code|CMP             R0, #0|0-40
45068|code|BEQ             loc_B09C|70-208
45070|code|LDR             R2, [R0]|2-104
45072|code|MOVW            R3, #0xDEAD|77-246-173-99
45076|code|CMP             R2, R3|154-66
45078|code|BNE             loc_B08E|58-209
45080|code|LDR.W           R10, [R0,#8]|208-248-8-160
45084|code|CMP.W           R10, #0|186-241-0-15
45088|code|BLE             loc_B07A|43-221
45090|code|MOVS            R4, #0|0-36
45092|code|LDR.W           R9, [R0,#0x10]|208-248-16-144
45096|code|MOV             R8, R4|160-70
45098|code|B               loc_B036|4-224
45100|code|ADD.W           R8, R8, #1|8-241-1-8
45104|code|ADDS            R4, R4, R0|36-24
45106|code|CMP             R8, R10|208-69
45108|code|BEQ             loc_B07A|33-208
45110|code|LDR.W           R5, [R9],#4|89-248-4-91
45114|code|MOV             R0, R5|40-70
45116|code|BL              sub_A5A0|255-247-176-250
45120|code|SUBS            R3, R0, #1|67-30
45122|code|ADDS            R3, R3, R4|27-25
45124|code|CMP             R3, R6|179-66
45126|code|BLT             loc_B02C|241-219
45128|code|LDR             R3, [R5]|43-104
45130|code|MOVS            R1, #0x4F ; 'O'|79-33
45132|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|24-74
45134|code|ADD             R0, SP, #0xC|3-168
45136|code|BLX             snprintf|254-247-38-233
45140|code|LDRB            R3, [R5,#0x10]|43-124
45142|code|LSLS            R1, R3, #0x1F|217-7
45144|code|BMI             loc_B072|11-212
45146|code|LDR             R2, [R5,#4]|106-104
45148|code|SUBS            R4, R6, R4|52-27
45150|code|LDR             R3, [R5,#0xC]|235-104
45152|code|ADD             R5, SP, #0xC|3-173
45154|code|ADDS            R4, R4, R2|164-24
45156|code|RSB.W           R1, R0, #0x4F ; 'O'|192-241-79-1
45160|code|LDR             R2, =a0Lu; "%0*lu"|18-74
45162|code|ADDS            R0, R5, R0|40-24
45164|code|STR             R4, [SP]|0-148
45166|code|BLX             snprintf|254-247-24-233
45170|code|ADD             R0, SP, #0xC|3-168
45172|code|BLX             __strdup|254-247-32-233
45176|code|B               loc_B07C|0-224
45178|code|MOVS            R0, #0|0-32
45180|code|LDR             R2, [SP,#0x5C]|23-154
45182|code|LDR             R3, [R7]|59-104
45184|code|CMP             R2, R3|154-66
45186|code|BNE             loc_B08A|2-209
45188|code|ADD             SP, SP, #0x60 ; '`'|24-176
45190|code|POP.W           {R4-R10,PC}|189-232-240-135
45194|code|BLX             __stack_chk_fail|254-247-96-232
45198|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
45200|code|MOVW            R2, #0x6FD|64-242-253-98
45204|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
45206|code|LDR             R3, =aHostlistNth; "hostlist_nth"|10-75
45208|code|BLX             __assert_fail|254-247-116-233
45212|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
45214|code|MOVW            R2, #0x6FD|64-242-253-98
45218|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
45220|code|LDR             R3, =aHostlistNth; "hostlist_nth"|6-75
45222|code|BLX             __assert_fail|254-247-110-233
45226|data|ALIGN 4|0-191
45228|data|DCD __stack_chk_guard|24-125-1-0
45232|data|DCD aRegcompFailedS+0x10; "%s"|104-249-0-0
45236|data|DCD a0Lu; "%0*lu"|156-241-0-0
45240|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
45244|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
45248|data|DCD aHostlistNth; "hostlist_nth"|56-238-0-0
45252|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
45256|code|PUSH            {R3,LR}|8-181
45258|code|CBZ             R0, loc_B0DA|48-177
45260|code|LDR             R2, [R0]|2-104
45262|code|MOVW            R3, #0xDEAD|77-246-173-99
45266|code|CMP             R2, R3|154-66
45268|code|BNE             loc_B0E8|8-209
45270|code|LDR             R0, [R0,#0xC]|192-104
45272|code|POP             {R3,PC}|8-189
45274|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
45276|code|MOVW            R2, #0x737; line|64-242-55-114
45280|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
45282|code|LDR             R3, =aHostlistCount; "hostlist_count"|7-75
45284|code|BLX             __assert_fail|254-247-78-233
45288|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
45290|code|MOVW            R2, #0x737; line|64-242-55-114
45294|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
45296|code|LDR             R3, =aHostlistCount; "hostlist_count"|3-75
45298|code|BLX             __assert_fail|254-247-72-233
45302|data|ALIGN 4|0-191
45304|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
45308|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
45312|data|DCD aHostlistCount; "hostlist_count"|72-238-0-0
45316|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
45320|code|PUSH.W          {R4-R8,LR}|45-233-240-65
45324|code|MOV             R5, R0|5-70
45326|code|CMP             R1, #0|0-41
45328|code|BEQ             loc_B18A|59-208
45330|code|MOV             R0, R1|8-70
45332|code|BL              sub_A328|255-247-8-249
45336|code|MOV             R7, R0|7-70
45338|code|CMP             R5, #0|0-45
45340|code|BEQ             loc_B19E|63-208
45342|code|LDR             R2, [R5]|42-104
45344|code|MOVW            R3, #0xDEAD|77-246-173-99
45348|code|CMP             R2, R3|154-66
45350|code|BNE             loc_B190|51-209
45352|code|LDR             R3, [R5,#8]|171-104
45354|code|CMP             R3, #0|0-43
45356|code|BLE             loc_B17A|37-221
45358|code|MOVS            R6, #0|0-38
45360|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
45364|code|MOV             R4, R6|52-70
45366|code|B               loc_B14E|10-224
45368|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
45372|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
45376|code|ADDS            R4, #1|1-52
45378|code|BL              sub_A5A0|255-247-45-250
45382|code|LDR             R3, [R5,#8]|171-104
45384|code|CMP             R3, R4|163-66
45386|code|ADD             R6, R0|6-68
45388|code|BLE             loc_B17A|21-221
45390|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
45394|code|MOV             R1, R7|57-70
45396|code|MOV.W           R8, R4,LSL#2|79-234-132-8
45400|code|BL              sub_A4A8|255-247-166-249
45404|code|CMP             R0, #0|0-40
45406|code|BEQ             loc_B138|235-208
45408|code|LDR             R3, [R7,#0xC]|251-104
45410|code|CBZ             R3, loc_B17E|99-177
45412|code|LDR             R3, [R5,#0x10]|43-105
45414|code|LDR.W           R3, [R3,R8]|83-248-8-48
45418|code|LDRB            R2, [R3,#0x10]|26-124
45420|code|LSLS            R0, R2, #0x1F|208-7
45422|code|BMI             loc_B17E|6-212
45424|code|LDR             R2, [R7,#8]|186-104
45426|code|LDR             R3, [R3,#4]|91-104
45428|code|SUBS            R3, R2, R3|211-26
45430|code|ADDS            R6, R3, R6|158-25
45432|code|B               loc_B17E|1-224
45434|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
45438|code|MOV             R0, R7|56-70
45440|code|BL              sub_A2E4|255-247-176-248
45444|code|MOV             R0, R6|48-70
45446|code|POP.W           {R4-R8,PC}|189-232-240-129
45450|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
45454|code|B               loc_B184|249-231
45456|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
45458|code|MOVW            R2, #0x747; line|64-242-71-114
45462|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
45464|code|LDR             R3, =aHostlistFind; "hostlist_find"|6-75
45466|code|BLX             __assert_fail|254-247-244-232
45470|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
45472|code|MOVW            R2, #0x747; line|64-242-71-114
45476|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
45478|code|LDR             R3, =aHostlistFind; "hostlist_find"|3-75
45480|code|BLX             __assert_fail|254-247-236-232
45484|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
45488|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
45492|data|DCD aHostlistFind; "hostlist_find"|88-238-0-0
45496|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
45500|code|PUSH.W          {R4-R11,LR}|45-233-240-79
45504|code|SUB             SP, SP, #0x1C|135-176
45506|code|STR             R0, [SP,#0x10]|4-144
45508|code|STR             R1, [SP,#0xC]|3-145
45510|code|STR             R2, [SP,#0x14]|5-146
45512|code|CMP             R0, #0|0-40
45514|code|BEQ.W           loc_B31C|0-240-167-128
45518|code|LDR             R4, [SP,#0x10]|4-156
45520|code|MOVW            R3, #0xDEAD|77-246-173-99
45524|code|LDR             R2, [R4]|34-104
45526|code|CMP             R2, R3|154-66
45528|code|BNE.W           loc_B32E|64-240-169-128
45532|code|LDR             R3, [R4,#8]|163-104
45534|code|CMP             R3, #0|0-43
45536|code|ITT GT|196-191
45538|code|MOVGT.W         R11, #0|79-240-0-11
45542|code|STRGT.W         R11, [SP,#8]|205-248-8-176
45546|code|BLE.W           loc_B312|64-243-146-128
45550|code|LDR             R4, [SP,#0xC]|3-156
45552|code|MOVS            R3, #0|0-35
45554|code|RSB.W           R8, R11, R4|203-235-4-8
45558|code|CMP             R4, R8|68-69
45560|code|BCC             loc_B286|69-211
45562|code|LDR             R4, [SP,#0x10]|4-156
45564|code|LDR             R3, [R4,#0x10]|35-105
45566|code|LDR             R4, [SP,#8]|2-156
45568|code|LDR.W           R7, [R3,R4,LSL#2]|83-248-36-112
45572|code|CMP.W           R8, #0|184-241-0-15
45576|code|BEQ.W           loc_B32A|0-240-143-128
45580|code|LDRB            R6, [R7,#0x10]|62-124
45582|code|LDR             R4, [SP,#0x14]|5-156
45584|code|ANDS.W          R6, R6, #1|22-240-1-6
45588|code|ADD.W           R9, R4, R11|4-235-11-9
45592|code|BNE             loc_B2F6|109-209
45594|code|LDR             R5, [R7,#4]|125-104
45596|code|LDR             R3, [R7,#8]|187-104
45598|code|CMP             R5, R3|157-66
45600|code|BHI             loc_B308|114-216
45602|code|MOV.W           R10, #0x2C ; ','|79-240-44-10
45606|code|B               loc_B238|7-224
45608|code|ADDS            R0, R6, R0|48-24
45610|code|ADDS            R5, #1|1-53
45612|code|ADDS            R6, R0, #1|70-28
45614|code|STRB.W          R10, [R9,R0]|9-248-0-160
45618|code|LDR             R3, [R7,#8]|187-104
45620|code|CMP             R5, R3|157-66
45622|code|BHI             loc_B2D6|78-216
45624|code|RSB.W           R4, R6, R8|198-235-8-4
45628|code|LDR.W           LR, [R7,#0xC]|215-248-12-224
45632|code|CMP             R8, R4|160-69
45634|code|IT CC|56-191
45636|code|MOVCC           R4, #0|0-36
45638|code|LDR             R3, [R7]|59-104
45640|code|ADD.W           R0, R9, R6|9-235-6-0
45644|code|LDR             R2, =aS0Lu; "%s%0*lu"|59-74
45646|code|MOV             R1, R4|33-70
45648|code|STR.W           LR, [SP]|205-248-0-224
45652|code|STR             R5, [SP,#4]|1-149
45654|code|BLX             snprintf|254-247-36-232
45658|code|CMP             R4, R0|132-66
45660|code|ITE HI|140-191
45662|code|MOVHI           R4, #0|0-36
45664|code|MOVLS           R4, #1|1-36
45666|code|ORRS.W          R4, R4, R0,LSR#31|84-234-208-116
45670|code|BEQ             loc_B228|223-208
45672|code|ADD             R9, R8|193-68
45674|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
45678|code|MOVS            R2, #1|1-34
45680|code|MOV             R0, R3|24-70
45682|code|MOVS            R1, #0|0-33
45684|code|STRB.W          R1, [R9,#-1]|9-248-1-28
45688|code|CMP             R8, R0|128-69
45690|code|ITE CS|44-191
45692|code|MOVCS           R0, R2|16-70
45694|code|ORRCC.W         R0, R2, #1|66-240-1-0
45698|code|CMP             R0, #0|0-40
45700|code|BNE             loc_B2EE|51-209
45702|code|LDR             R4, [SP,#8]|2-156
45704|code|ADD             R3, R11|91-68
45706|code|MOVS            R2, #0x2C ; ','|44-34
45708|code|ADD.W           R11, R3, #1|3-241-1-11
45712|code|ADDS            R4, #1|1-52
45714|code|STR             R4, [SP,#8]|2-148
45716|code|LDR             R4, [SP,#0x14]|5-156
45718|code|STRB            R2, [R4,R3]|226-84
45720|code|LDR             R4, [SP,#0x10]|4-156
45722|code|LDR             R3, [R4,#8]|163-104
45724|code|LDR             R4, [SP,#8]|2-156
45726|code|CMP             R3, R4|163-66
45728|code|BGT             loc_B1EE|165-220
45730|code|MOVS            R0, #0|0-32
45732|code|MOVS            R2, #0|0-34
45734|code|CMP.W           R11, #0|187-241-0-15
45738|code|MOV             R3, R11|91-70
45740|code|ITTT GT|194-191
45742|code|ADDGT.W         R11, R11, #0xFFFFFFFF|11-241-255-59
45746|code|MOVGT           R2, R11|90-70
45748|code|MOVGT           R3, R11|91-70
45750|code|LDR             R4, [SP,#0x14]|5-156
45752|code|MOVS            R1, #0|0-33
45754|code|CMP             R0, R1|136-66
45756|code|IT NE|24-191
45758|code|MOVNE.W         R11, #0xFFFFFFFF|79-240-255-59
45762|code|STRB            R1, [R4,R2]|161-84
45764|code|LDR             R4, [SP,#0xC]|3-156
45766|code|CMP             R4, R3|156-66
45768|code|IT EQ|8-191
45770|code|MOVEQ.W         R11, #0xFFFFFFFF|79-240-255-59
45774|code|MOV             R0, R11|88-70
45776|code|ADD             SP, SP, #0x1C|7-176
45778|code|POP.W           {R4-R11,PC}|189-232-240-143
45782|code|LSRS            R2, R0, #0x1F|194-15
45784|code|MOV             R3, R0|3-70
45786|code|MOVS            R1, #0|0-33
45788|code|STRB.W          R1, [R9,R0]|9-248-0-16
45792|code|CMP             R8, R0|128-69
45794|code|ITE CS|44-191
45796|code|MOVCS           R0, R2|16-70
45798|code|ORRCC.W         R0, R2, #1|66-240-1-0
45802|code|CMP             R0, #0|0-40
45804|code|BEQ             loc_B286|203-208
45806|code|LDR.W           R11, [SP,#0xC]|221-248-12-176
45810|code|MOVS            R0, #1|1-32
45812|code|B               loc_B2A4|214-231
45814|code|LDR             R3, [R7]|59-104
45816|code|MOV             R0, R9|72-70
45818|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|17-74
45820|code|MOV             R1, R8|65-70
45822|code|BLX             snprintf|253-247-208-239
45826|code|MOV             R3, R0|3-70
45828|code|LSRS            R2, R0, #0x1F|194-15
45830|code|B               loc_B278|183-231
45832|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
45836|code|MOVS            R2, #1|1-34
45838|code|MOV             R0, R3|24-70
45840|code|B               loc_B2DA|227-231
45842|code|MOVS            R3, #0|0-35
45844|code|MOV             R0, R3|24-70
45846|code|MOV             R2, R3|26-70
45848|code|MOV             R11, R3|155-70
45850|code|B               loc_B2B6|204-231
45852|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
45854|code|MOV.W           R2, #0x7F8|79-244-255-98
45858|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
45860|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|9-75
45862|code|BLX             __assert_fail|254-247-46-232
45866|code|MOV             R3, R8|67-70
45868|code|B               loc_B286|171-231
45870|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
45872|code|MOV.W           R2, #0x7F8|79-244-255-98
45876|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
45878|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|5-75
45880|code|BLX             __assert_fail|254-247-36-232
45884|data|DCD aS0Lu; "%s%0*lu"|20-242-0-0
45888|data|DCD aRegcompFailedS+0x10; "%s"|104-249-0-0
45892|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
45896|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
45900|data|DCD aHostlistDerang; "hostlist_deranged_string"|104-238-0-0
45904|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
45908|code|PUSH.W          {R4-R8,LR}|45-233-240-65
45912|code|SUB             SP, SP, #8|130-176
45914|code|MOVS            R3, #0|0-35
45916|code|MOV             R6, R0|6-70
45918|code|MOV             R5, R1|13-70
45920|code|MOV             R7, R2|23-70
45922|code|STR             R3, [SP,#0x20+var_1C]|1-147
45924|code|CMP             R0, #0|0-40
45926|code|BEQ             loc_B40C|81-208
45928|code|LDR             R1, [R0]|1-104
45930|code|MOVW            R2, #0xDEAD|77-246-173-98
45934|code|CMP             R1, R2|145-66
45936|code|BNE             loc_B3FE|69-209
45938|code|LDR             R2, [R0,#8]|130-104
45940|code|MOV             R4, R3|28-70
45942|code|MOV.W           R8, #0x2C ; ','|79-240-44-8
45946|code|CMP             R3, R2|147-66
45948|code|ITE GE|172-191
45950|code|MOVGE           R3, #0|0-35
45952|code|MOVLT           R3, #1|1-35
45954|code|CMP             R4, R5|172-66
45956|code|ITE CS|44-191
45958|code|MOVCS           R3, #0|0-35
45960|code|ANDCC.W         R3, R3, #1|3-240-1-3
45964|code|CBZ             R3, loc_B3CA|235-177
45966|code|ADDS            R3, R7, R4|59-25
45968|code|SUBS            R2, R5, R4|42-27
45970|code|MOV             R0, R6|48-70
45972|code|ADD             R1, SP, #0x20+var_1C|1-169
45974|code|BL              sub_A9DC|255-247-33-251
45978|code|LDR             R2, [R6,#8]|178-104
45980|code|ADDS            R4, R4, R0|36-24
45982|code|CMP             R4, #0|0-44
45984|code|ITE LE|212-191
45986|code|MOVLE           R3, #0|0-35
45988|code|MOVGT           R3, #1|1-35
45990|code|CMP             R4, R5|172-66
45992|code|ITE CS|44-191
45994|code|MOVCS           R3, #0|0-35
45996|code|ANDCC.W         R3, R3, #1|3-240-1-3
46000|code|CBNZ            R3, loc_B3EE|235-185
46002|code|LDR             R3, [SP,#0x20+var_1C]|1-155
46004|code|CMP             R3, R2|147-66
46006|code|ITE GE|172-191
46008|code|MOVGE           R3, #0|0-35
46010|code|MOVLT           R3, #1|1-35
46012|code|CMP             R4, R5|172-66
46014|code|ITE CS|44-191
46016|code|MOVCS           R3, #0|0-35
46018|code|ANDCC.W         R3, R3, #1|3-240-1-3
46022|code|CMP             R3, #0|0-43
46024|code|BNE             loc_B38E|225-209
46026|code|CMP             R5, R4|165-66
46028|code|ITT HI|132-191
46030|code|BICHI.W         R2, R4, R4,ASR#31|36-234-228-114
46034|code|STRBHI          R3, [R7,R2]|187-84
46036|code|BHI             loc_B3E6|7-216
46038|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
46042|code|CBZ             R5, loc_B3E6|37-177
46044|code|ADDS            R5, R7, R5|125-25
46046|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
46050|code|STRB.W          R3, [R5,#-1]|5-248-1-60
46054|code|MOV             R0, R4|32-70
46056|code|ADD             SP, SP, #8|2-176
46058|code|POP.W           {R4-R8,PC}|189-232-240-129
46062|code|LDR             R3, [SP,#0x20+var_1C]|1-155
46064|code|CMP             R2, R3|154-66
46066|code|BLE             loc_B37A|194-221
46068|code|STRB.W          R8, [R7,R4]|7-248-4-128
46072|code|ADDS            R4, #1|1-52
46074|code|LDR             R2, [R6,#8]|178-104
46076|code|B               loc_B37A|189-231
46078|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
46080|code|MOVW            R2, #0x851; line|64-246-81-2
46084|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46086|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|7-75
46088|code|BLX             __assert_fail|253-247-188-239
46092|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
46094|code|MOVW            R2, #0x851; line|64-246-81-2
46098|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
46100|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|3-75
46102|code|BLX             __assert_fail|253-247-182-239
46106|data|ALIGN 4|0-191
46108|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
46112|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
46116|data|DCD aHostlistRanged; "hostlist_ranged_string"|132-238-0-0
46120|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
46124|code|PUSH            {R4,LR}|16-181
46126|code|MOV             R4, R0|4-70
46128|code|MOVS            R0, #0x18|24-32
46130|code|BLX             malloc|253-247-218-238
46134|code|CBZ             R0, loc_B466|176-177
46136|code|MOVS            R3, #0|0-35
46138|code|MOVW            R2, #0xDEAD|77-246-173-98
46142|code|STR             R3, [R0,#4]|67-96
46144|code|STR             R3, [R0,#0xC]|195-96
46146|code|STR             R3, [R0,#8]|131-96
46148|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46152|code|STR             R0, [R0,#0x14]|64-97
46154|code|STR             R3, [R0,#0x10]|3-97
46156|code|STR             R2, [R0]|2-96
46158|code|CBZ             R4, loc_B47E|180-177
46160|code|LDR             R3, [R4]|35-104
46162|code|CMP             R3, R2|147-66
46164|code|BNE             loc_B48C|26-209
46166|code|LDR             R3, [R4,#0x10]|35-105
46168|code|LDR             R2, [R4,#0x14]|98-105
46170|code|STR             R4, [R0,#4]|68-96
46172|code|LDR             R3, [R3]|27-104
46174|code|STR             R2, [R0,#0x14]|66-97
46176|code|STR             R0, [R4,#0x14]|96-97
46178|code|STR             R3, [R0,#0xC]|195-96
46180|code|POP             {R4,PC}|16-189
46182|code|BLX             __errno_location|253-247-22-239
46186|code|MOVS            R3, #0xC|12-35
46188|code|MOVW            R1, #0x879|64-246-121-1
46192|code|LDR             R2, =aHostlistIterat; "hostlist_iterator_create"|10-74
46194|code|STR             R3, [R0]|3-96
46196|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
46198|code|POP.W           {R4,LR}|189-232-16-64
46202|code|B.W             sub_A1F4|254-247-187-190
46206|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
46208|code|MOVW            R2, #0x87B|64-246-123-2
46212|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46214|code|LDR             R3, =aHostlistIterat_0; "hostlist_iterator_create"|8-75
46216|code|BLX             __assert_fail|253-247-124-239
46220|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
46222|code|MOVW            R2, #0x87B|64-246-123-2
46226|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
46228|code|LDR             R3, =aHostlistIterat_0; "hostlist_iterator_create"|4-75
46230|code|BLX             __assert_fail|253-247-118-239
46234|data|ALIGN 4|0-191
46236|data|DCD aHostlistIterat; "hostlist_iterator_create"|28-242-0-0
46240|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
46244|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
46248|data|DCD aHostlistIterat_0; "hostlist_iterator_create"|156-238-0-0
46252|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
46256|code|LDR             R0, [R0]|0-104
46258|code|B.W             loc_B42C|255-247-187-191
46262|data|ALIGN 4|0-191
46264|code|PUSH            {R3,LR}|8-181
46266|code|CBZ             R0, loc_B4DA|112-177
46268|code|LDR             R2, [R0]|2-104
46270|code|MOVW            R3, #0xDEAD|77-246-173-99
46274|code|CMP             R2, R3|154-66
46276|code|BNE             loc_B4E8|16-209
46278|code|LDR             R3, [R0,#4]|67-104
46280|code|MOVS            R2, #0|0-34
46282|code|STR             R2, [R0,#8]|130-96
46284|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
46288|code|LDR             R3, [R3,#0x10]|27-105
46290|code|LDR             R3, [R3]|27-104
46292|code|STR             R2, [R0,#0x10]|2-97
46294|code|STR             R3, [R0,#0xC]|195-96
46296|code|POP             {R3,PC}|8-189
46298|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
46300|code|MOVW            R2, #0x88B; line|64-246-139-2
46304|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46306|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_reset"|7-75
46308|code|BLX             __assert_fail|253-247-78-239
46312|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|6-72
46314|code|MOVW            R2, #0x88C; line|64-246-140-2
46318|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
46320|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_reset"|3-75
46322|code|BLX             __assert_fail|253-247-72-239
46326|data|ALIGN 4|0-191
46328|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
46332|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
46336|data|DCD aHostlistIterat_1; "hostlist_iterator_reset"|184-238-0-0
46340|data|DCD aIMagic57005; "i->magic == 57005"|76-242-0-0
46344|code|PUSH            {R4-R6,LR}|112-181
46346|code|MOV             R5, R1|13-70
46348|code|LDR             R4, [R0,#0x14]|68-105
46350|code|MOV             R6, R2|22-70
46352|code|CBNZ            R4, loc_B51C|36-185
46354|code|B               locret_B540|21-224
46356|code|CMP             R3, R5|171-66
46358|code|BEQ             loc_B542|20-208
46360|code|LDR             R4, [R4,#0x14]|100-105
46362|code|CBZ             R4, locret_B540|140-177
46364|code|LDR             R3, [R4,#8]|163-104
46366|code|CMP             R6, #0|0-46
46368|code|BEQ             loc_B514|248-208
46370|code|CMP             R5, R3|157-66
46372|code|RSB.W           R2, R6, R3|198-235-3-2
46376|code|BGT             loc_B518|246-220
46378|code|CMP             R2, #0|0-42
46380|code|STR             R2, [R4,#8]|162-96
46382|code|BLT             loc_B550|15-219
46384|code|LDR             R3, [R4,#4]|99-104
46386|code|LDR             R3, [R3,#0x10]|27-105
46388|code|LDR.W           R3, [R3,R2,LSL#2]|83-248-34-48
46392|code|STR             R3, [R4,#0xC]|227-96
46394|code|LDR             R4, [R4,#0x14]|100-105
46396|code|CMP             R4, #0|0-44
46398|code|BNE             loc_B51C|237-209
46400|code|POP             {R4-R6,PC}|112-189
46402|code|LDR             R3, [R4,#0x10]|35-105
46404|code|CMP             R3, #0|0-43
46406|code|ADD.W           R3, R3, #0xFFFFFFFF|3-241-255-51
46410|code|IT GE|168-191
46412|code|STRGE           R3, [R4,#0x10]|35-97
46414|code|B               loc_B518|227-231
46416|code|MOV             R0, R4|32-70
46418|code|BL              sub_B4B8|255-247-177-255
46422|code|B               loc_B518|223-231
46424|code|PUSH            {R3-R7,LR}|248-181
46426|code|CMP             R0, #0|0-40
46428|code|BEQ             loc_B5B6|43-208
46430|code|LDR             R2, [R0]|2-104
46432|code|MOVW            R3, #0xDEAD|77-246-173-99
46436|code|CMP             R2, R3|154-66
46438|code|BNE             loc_B5D2|52-209
46440|code|LDR             R7, [R0,#8]|135-104
46442|code|CMP             R7, R1|143-66
46444|code|ITE GT|204-191
46446|code|MOVGT           R3, #0|0-35
46448|code|MOVLE           R3, #1|1-35
46450|code|ORRS.W          R3, R3, R1,LSR#31|83-234-209-115
46454|code|BNE             loc_B5C4|37-209
46456|code|LDR             R2, [R0,#0x10]|2-105
46458|code|SUBS            R7, #1|1-63
46460|code|LSLS            R3, R1, #2|139-0
46462|code|CMP             R1, R7|185-66
46464|code|MOV             R5, R2|21-70
46466|code|LDR.W           R4, [R2,R1,LSL#2]|82-248-33-64
46470|code|BGE             loc_B59E|10-218
46472|code|MOV             R5, R1|13-70
46474|code|B               loc_B58E|0-224
46476|code|LDR             R2, [R0,#0x10]|2-105
46478|code|ADDS            R6, R2, R3|214-24
46480|code|ADDS            R3, #4|4-51
46482|code|ADDS            R5, #1|1-53
46484|code|LDR             R2, [R2,R3]|210-88
46486|code|CMP             R5, R7|189-66
46488|code|STR             R2, [R6]|50-96
46490|code|BLT             loc_B58C|247-219
46492|code|LDR             R5, [R0,#0x10]|5-105
46494|code|STR             R7, [R0,#8]|135-96
46496|code|MOVS            R3, #0|0-35
46498|code|MOVS            R2, #1|1-34
46500|code|STR.W           R3, [R5,R7,LSL#2]|69-248-39-48
46504|code|BL              sub_B508|255-247-174-255
46508|code|MOV             R0, R4|32-70
46510|code|POP.W           {R3-R7,LR}|189-232-248-64
46514|code|B.W             sub_A30C|254-247-171-190
46518|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
46520|code|MOVW            R2, #0x48F; line|64-242-143-66
46524|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
46526|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|10-75
46528|code|BLX             __assert_fail|253-247-224-238
46532|code|LDR             R0, =aNHlNrangesN0; "n < hl->nranges && n >= 0"|9-72
46534|code|MOVW            R2, #0x491; line|64-242-145-66
46538|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46540|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|6-75
46542|code|BLX             __assert_fail|253-247-218-238
46546|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
46548|code|MOV.W           R2, #0x490; line|79-244-146-98
46552|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
46554|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|3-75
46556|code|BLX             __assert_fail|253-247-210-238
46560|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
46564|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
46568|data|DCD aHostlistDelete; "hostlist_delete_range"|208-238-0-0
46572|data|DCD aNHlNrangesN0; "n < hl->nranges && n >= 0"|96-242-0-0
46576|data|DCD aHlMagic57005; "hl->magic == 57005"|192-241-0-0
46580|code|PUSH            {R4-R6,LR}|112-181
46582|code|MOV             R4, R0|4-70
46584|code|MOV             R5, R1|13-70
46586|code|CBZ             R0, loc_B638|232-177
46588|code|LDR             R2, [R0]|2-104
46590|code|MOVW            R3, #0xDEAD|77-246-173-99
46594|code|CMP             R2, R3|154-66
46596|code|BNE             loc_B662|45-209
46598|code|CMP             R1, #0|0-41
46600|code|BLE             loc_B654|36-221
46602|code|LDR             R3, [R0,#8]|131-104
46604|code|CMP             R1, R3|153-66
46606|code|BGE             loc_B646|26-218
46608|code|LDR             R3, [R0,#0x10]|3-105
46610|code|SUBS            R2, R1, #1|74-30
46612|code|LDR.W           R1, [R3,R1,LSL#2]|83-248-33-16
46616|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
46620|code|BL              sub_A900|255-247-112-249
46624|code|CMP             R0, #0|0-40
46626|code|MOV             R6, R0|6-70
46628|code|BLT             loc_B634|6-219
46630|code|MOV             R0, R4|32-70
46632|code|MOV             R1, R5|41-70
46634|code|BL              sub_B558|255-247-149-255
46638|code|LDR             R3, [R4,#0xC]|227-104
46640|code|SUBS            R3, R3, R6|155-27
46642|code|STR             R3, [R4,#0xC]|227-96
46644|code|MOV             R0, R6|48-70
46646|code|POP             {R4-R6,PC}|112-189
46648|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|13-72
46650|code|MOVW            R2, #0x7CE; line|64-242-206-114
46654|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
46656|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|13-75
46658|code|BLX             __assert_fail|253-247-160-238
46662|code|LDR             R0, =aLocHlNranges; "loc < hl->nranges"|13-72
46664|code|MOVW            R2, #0x7D1; line|64-242-209-114
46668|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
46670|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|10-75
46672|code|BLX             __assert_fail|253-247-152-238
46676|code|LDR             R0, =aLoc0; "loc > 0"|10-72
46678|code|MOV.W           R2, #0x7D0; line|79-244-250-98
46682|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
46684|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|6-75
46686|code|BLX             __assert_fail|253-247-146-238
46690|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|8-72
46692|code|MOVW            R2, #0x7CF; line|64-242-207-114
46696|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
46698|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|3-75
46700|code|BLX             __assert_fail|253-247-138-238
46704|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
46708|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
46712|data|DCD aAttemptRangeJo; "_attempt_range_join"|232-238-0-0
46716|data|DCD aLocHlNranges; "loc < hl->nranges"|132-242-0-0
46720|data|DCD aLoc0; "loc > 0"|124-242-0-0
46724|data|DCD aHlMagic57005; "hl->magic == 57005"|192-241-0-0
46728|code|PUSH            {R3-R5,LR}|56-181
46730|code|MOV             R4, R0|4-70
46732|code|CBZ             R0, loc_B6D2|8-179
46734|code|LDR             R2, [R0]|2-104
46736|code|MOVW            R3, #0xDEAD|77-246-173-99
46740|code|CMP             R2, R3|154-66
46742|code|BNE             loc_B6E0|35-209
46744|code|LDR             R1, [R0,#8]; nmemb|129-104
46746|code|CMP             R1, #1|1-41
46748|code|BLE             locret_B6D0|24-221
46750|code|LDR             R0, [R0,#0x10]; base|0-105
46752|code|MOVS            R2, #4; size|4-34
46754|code|LDR             R3, =(sub_A8F8+1); compar|19-75
46756|code|MOVS            R5, #1|1-37
46758|code|BLX             qsort|253-247-86-238
46762|code|B               loc_B6BA|6-224
46764|code|MOV             R1, R5|41-70
46766|code|MOV             R0, R4|32-70
46768|code|BL              sub_B5F4|255-247-160-255
46772|code|CMP             R0, #0|0-40
46774|code|IT LT|184-191
46776|code|ADDLT           R5, #1|1-53
46778|code|LDR             R3, [R4,#8]|163-104
46780|code|CMP             R5, R3|157-66
46782|code|BLT             loc_B6AC|245-219
46784|code|LDR             R4, [R4,#0x14]|100-105
46786|code|CBZ             R4, locret_B6D0|44-177
46788|code|MOV             R0, R4|32-70
46790|code|BL              sub_B4B8|255-247-247-254
46794|code|LDR             R4, [R4,#0x14]|100-105
46796|code|CMP             R4, #0|0-44
46798|code|BNE             loc_B6C4|249-209
46800|code|POP             {R3-R5,PC}|56-189
46802|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|8-72
46804|code|MOVW            R2, #0x7DE; line|64-242-222-114
46808|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
46810|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|8-75
46812|code|BLX             __assert_fail|253-247-82-238
46816|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
46818|code|MOVW            R2, #0x7DE; line|64-242-222-114
46822|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
46824|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|4-75
46826|code|BLX             __assert_fail|253-247-76-238
46830|data|ALIGN 0x10|0-191
46832|data|DCD sub_A8F8+1|249-168-0-0
46836|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
46840|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
46844|data|DCD aHostlistUniq; "hostlist_uniq"|252-238-0-0
46848|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
46852|code|PUSH.W          {R3-R11,LR}|45-233-248-79
46856|code|MOV             R8, R0|128-70
46858|code|CMP             R0, #0|0-40
46860|code|BEQ.W           loc_B93A|0-240-21-129
46864|code|LDR             R2, [R0]|2-104
46866|code|MOVW            R3, #0xDEAD|77-246-173-99
46870|code|CMP             R2, R3|154-66
46872|code|BNE.W           loc_B8F4|64-240-236-128
46876|code|LDR             R1, [R0,#8]|129-104
46878|code|CMP             R1, #1|1-41
46880|code|BLE.W           locret_B8D6|64-243-217-128
46884|code|LDR             R0, [R0,#0x10]|0-105
46886|code|MOVS            R2, #4|4-34
46888|code|LDR             R3, =(sub_A8F8+1)|140-75
46890|code|BLX             qsort|253-247-20-238
46894|code|LDR.W           R4, [R8,#0x14]|216-248-20-64
46898|code|CBZ             R4, loc_B740|44-177
46900|code|MOV             R0, R4|32-70
46902|code|BL              sub_B4B8|255-247-191-254
46906|code|LDR             R4, [R4,#0x14]|100-105
46908|code|CMP             R4, #0|0-44
46910|code|BNE             loc_B734|249-209
46912|code|LDR.W           R2, [R8]|216-248-0-32
46916|code|MOVW            R3, #0xDEAD|77-246-173-99
46920|code|CMP             R2, R3|154-66
46922|code|BNE.W           loc_B92C|64-240-239-128
46926|code|LDR.W           R5, [R8,#8]|216-248-8-80
46930|code|SUBS            R5, #1|1-61
46932|code|CMP             R5, #0|0-45
46934|code|BLE.W           locret_B8D6|64-243-190-128
46938|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
46942|code|SUBS            R6, R5, #1|110-30
46944|code|B               loc_B770|6-224
46946|code|CMP             R6, #0|0-46
46948|code|MOV             R5, R6|53-70
46950|code|BLE.W           loc_B898|64-243-151-128
46954|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
46958|code|SUBS            R6, #1|1-62
46960|code|LDR.W           R7, [R3,R6,LSL#2]|83-248-38-112
46964|code|MOV.W           R10, R5,LSL#2|79-234-133-10
46968|code|MOV.W           R11, R6,LSL#2|79-234-134-11
46972|code|LDR.W           R9, [R3,R5,LSL#2]|83-248-37-144
46976|code|CMP             R7, #0|0-47
46978|code|BEQ.W           loc_B91E|0-240-204-128
46982|code|CMP.W           R9, #0|185-241-0-15
46986|code|BEQ.W           loc_B910|0-240-193-128
46990|code|LDRB            R3, [R7,#0x10]|59-124
46992|code|LSLS            R2, R3, #0x1F|218-7
46994|code|BMI             loc_B762|230-212
46996|code|LDRB.W          R3, [R9,#0x10]|153-248-16-48
47000|code|LSLS            R3, R3, #0x1F|219-7
47002|code|BMI             loc_B762|226-212
47004|code|MOV             R0, R7|56-70
47006|code|MOV             R1, R9|73-70
47008|code|BL              sub_A8A0|255-247-126-248
47012|code|CMP             R0, #0|0-40
47014|code|BGT.W           loc_B94C|0-243-209-128
47018|code|MOV             R0, R7|56-70
47020|code|MOV             R1, R9|73-70
47022|code|BL              sub_A50C|254-247-173-254
47026|code|CMP             R0, #0|0-40
47028|code|BNE             loc_B762|213-209
47030|code|LDR             R2, [R7,#8]|186-104
47032|code|LDR.W           R3, [R9,#4]|217-248-4-48
47036|code|CMP             R2, R3|154-66
47038|code|BLS             loc_B762|208-217
47040|code|MOV             R0, R7|56-70
47042|code|MOV             R1, R9|73-70
47044|code|BL              sub_A5D4|254-247-6-255
47048|code|CMP             R0, #0|0-40
47050|code|BEQ             loc_B762|202-208
47052|code|MOV             R0, R7|56-70
47054|code|BL              sub_A7E0|255-247-7-248
47058|code|MOV             R4, R0|4-70
47060|code|CMP             R0, #0|0-40
47062|code|BEQ             loc_B762|196-208
47064|code|LDR.W           R0, [R8,#0x10]|216-248-16-0
47068|code|LDR             R2, [R7,#8]|186-104
47070|code|LDR.W           R1, [R9,#8]|217-248-8-16
47074|code|LDR.W           R6, [R0,R11]|80-248-11-96
47078|code|LDR.W           R3, [R9,#4]|217-248-4-48
47082|code|CMP             R1, R2|145-66
47084|code|IT CS|40-191
47086|code|MOVCS           R1, R2|17-70
47088|code|LDR.W           R7, [R0,R10]|80-248-10-112
47092|code|STR             R1, [R4,#8]|161-96
47094|code|MOV             R0, R6|48-70
47096|code|LDR             R2, [R6,#8]|178-104
47098|code|STR             R3, [R4,#4]|99-96
47100|code|CMP             R2, R1|138-66
47102|code|IT HI|136-191
47104|code|STRHI           R2, [R7,#8]|186-96
47106|code|STR             R3, [R6,#8]|179-96
47108|code|LDR.W           R9, [R4,#8]|212-248-8-144
47112|code|STR.W           R9, [R7,#4]|199-248-4-144
47116|code|BL              sub_A61C|254-247-6-255
47120|code|CBZ             R0, loc_B81E|40-177
47122|code|MOV             R0, R8|64-70
47124|code|MOV             R1, R5|41-70
47126|code|BL              sub_B558|255-247-159-254
47130|code|LDR.W           R9, [R4,#8]|212-248-8-144
47134|code|LDR             R1, [R4,#4]|97-104
47136|code|CMP             R1, R9|73-69
47138|code|BLS             loc_B83E|12-217
47140|code|B               loc_B884|46-224
47142|code|LDR             R2, [R7,#4]|122-104
47144|code|CMP             R2, R3|154-66
47146|code|BHI             loc_B866|28-216
47148|code|MOV             R0, R9|72-70
47150|code|BL              sub_A30C|254-247-109-253
47154|code|LDR             R1, [R4,#4]|97-104
47156|code|LDR             R3, [R4,#8]|163-104
47158|code|ADDS            R1, #1|1-49
47160|code|STR             R1, [R4,#4]|97-96
47162|code|CMP             R1, R3|153-66
47164|code|BHI             loc_B884|34-216
47166|code|LDR             R3, [R4,#0xC]|227-104
47168|code|MOV             R2, R1|10-70
47170|code|LDR             R0, [R4]|32-104
47172|code|BL              sub_A75C|254-247-138-255
47176|code|LDR             R3, [R4,#4]|99-104
47178|code|LDR             R2, [R6,#8]|178-104
47180|code|CMP             R3, R2|147-66
47182|code|MOV             R9, R0|129-70
47184|code|BLS             loc_B826|233-217
47186|code|MOV             R2, R5|42-70
47188|code|MOV             R0, R8|64-70
47190|code|MOV             R1, R9|73-70
47192|code|ADDS            R5, #1|1-53
47194|code|BL              sub_ACF0|255-247-73-250
47198|code|LDR             R3, [R4,#4]|99-104
47200|code|LDR             R2, [R7,#4]|122-104
47202|code|CMP             R2, R3|154-66
47204|code|BLS             loc_B82C|226-217
47206|code|MOV             R2, R5|42-70
47208|code|MOV             R1, R9|73-70
47210|code|MOV             R0, R8|64-70
47212|code|ADDS            R5, #1|1-53
47214|code|BL              sub_ACF0|255-247-63-250
47218|code|MOV             R0, R9|72-70
47220|code|BL              sub_A30C|254-247-74-253
47224|code|LDR             R1, [R4,#4]|97-104
47226|code|LDR             R3, [R4,#8]|163-104
47228|code|ADDS            R1, #1|1-49
47230|code|STR             R1, [R4,#4]|97-96
47232|code|CMP             R1, R3|153-66
47234|code|BLS             loc_B83E|220-217
47236|code|LDR.W           R5, [R8,#8]|216-248-8-80
47240|code|MOV             R0, R4|32-70
47242|code|BL              sub_A30C|254-247-63-253
47246|code|SUBS            R6, R5, #1|110-30
47248|code|CMP             R6, #0|0-46
47250|code|MOV             R5, R6|53-70
47252|code|BGT.W           loc_B76A|63-247-105-175
47256|code|LDR.W           R2, [R8]|216-248-0-32
47260|code|MOVW            R3, #0xDEAD|77-246-173-99
47264|code|CMP             R2, R3|154-66
47266|code|BNE             loc_B902|46-209
47268|code|LDR.W           R5, [R8,#8]|216-248-8-80
47272|code|SUBS            R5, #1|1-61
47274|code|CMP             R5, #0|0-45
47276|code|BLE             locret_B948|76-221
47278|code|LSLS            R4, R5, #2|172-0
47280|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
47284|code|ADDS            R2, R3, R4|26-25
47286|code|LDR             R7, [R3,R4]|31-89
47288|code|LDR.W           R6, [R2,#-4]|82-248-4-108
47292|code|MOV             R1, R7|57-70
47294|code|MOV             R0, R6|48-70
47296|code|BL              sub_A50C|254-247-36-254
47300|code|CBNZ            R0, loc_B8D0|32-185
47302|code|LDR             R3, [R7,#4]|123-104
47304|code|LDR             R2, [R6,#8]|178-104
47306|code|SUBS            R3, #1|1-59
47308|code|CMP             R2, R3|154-66
47310|code|BEQ             loc_B8DA|4-208
47312|code|SUBS            R4, #4|4-60
47314|code|SUBS            R5, #1|1-61
47316|code|BNE             loc_B8B0|236-209
47318|code|POP.W           {R3-R11,PC}|189-232-248-143
47322|code|MOV             R0, R6|48-70
47324|code|MOV             R1, R7|57-70
47326|code|BL              sub_A5D4|254-247-121-254
47330|code|CMP             R0, #0|0-40
47332|code|BEQ             loc_B8D0|244-208
47334|code|LDR             R3, [R7,#8]|187-104
47336|code|MOV             R0, R8|64-70
47338|code|MOV             R1, R5|41-70
47340|code|STR             R3, [R6,#8]|179-96
47342|code|BL              sub_B558|255-247-51-254
47346|code|B               loc_B8D0|237-231
47348|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|26-72
47350|code|MOV.W           R2, #0x768|79-244-237-98
47354|code|LDR             R1, =aHostlistC; "hostlist.c"|26-73
47356|code|LDR             R3, =aHostlistSort; "hostlist_sort"|26-75
47358|code|BLX             __assert_fail|253-247-66-237
47362|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|23-72
47364|code|MOVW            R2, #0x783|64-242-131-114
47368|code|LDR             R1, =aHostlistC; "hostlist.c"|22-73
47370|code|LDR             R3, =aHostlistCollap; "hostlist_collapse"|24-75
47372|code|BLX             __assert_fail|253-247-58-237
47376|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|23-72
47378|code|MOV.W           R2, #0x374|79-244-93-114
47382|code|LDR             R1, =aHostlistC; "hostlist.c"|19-73
47384|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|22-75
47386|code|BLX             __assert_fail|253-247-52-237
47390|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|22-72
47392|code|MOVW            R2, #0x373|64-242-115-50
47396|code|LDR             R1, =aHostlistC; "hostlist.c"|15-73
47398|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|19-75
47400|code|BLX             __assert_fail|253-247-44-237
47404|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
47406|code|MOVW            R2, #0x79A|64-242-154-114
47410|code|LDR             R1, =aHostlistC; "hostlist.c"|12-73
47412|code|LDR             R3, =aHostlistCoales; "hostlist_coalesce"|17-75
47414|code|BLX             __assert_fail|253-247-38-237
47418|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|17-72
47420|code|MOV.W           R2, #0x768|79-244-237-98
47424|code|LDR             R1, =aHostlistC; "hostlist.c"|8-73
47426|code|LDR             R3, =aHostlistSort; "hostlist_sort"|9-75
47428|code|BLX             __assert_fail|253-247-30-237
47432|code|POP.W           {R3-R11,PC}|189-232-248-143
47436|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|13-72
47438|code|MOVW            R2, #0x379|64-242-121-50
47442|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
47444|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|7-75
47446|code|BLX             __assert_fail|253-247-22-237
47450|data|ALIGN 4|0-191
47452|data|DCD sub_A8F8+1|249-168-0-0
47456|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
47460|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
47464|data|DCD aHostlistSort; "hostlist_sort"|12-239-0-0
47468|data|DCD aHostlistCollap; "hostlist_collapse"|68-239-0-0
47472|data|DCD aH2Void0; "h2 != ((void *)0)"|88-241-0-0
47476|data|DCD aHostrangeInter; "hostrange_intersect"|48-239-0-0
47480|data|DCD aH1Void0; "h1 != ((void *)0)"|196-240-0-0
47484|data|DCD aHostlistCoales; "hostlist_coalesce"|28-239-0-0
47488|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
47492|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|108-241-0-0
47496|code|PUSH.W          {R3-R11,LR}|45-233-248-79
47500|code|MOV             R4, R0|4-70
47502|code|MOV             R9, R1|137-70
47504|code|CMP             R0, #0|0-40
47506|code|BEQ             loc_BA4A|90-208
47508|code|LDR             R2, [R0]|2-104
47510|code|MOVW            R3, #0xDEAD|77-246-173-99
47514|code|CMP             R2, R3|154-66
47516|code|BNE             loc_BA3C|78-209
47518|code|CMP             R1, #0|0-41
47520|code|BLT             loc_BA2E|69-219
47522|code|LDR.W           R11, [R0,#0xC]|208-248-12-176
47526|code|CMP             R1, R11|89-69
47528|code|BGT             loc_BA2E|65-220
47530|code|LDR.W           R10, [R0,#8]|208-248-8-160
47534|code|CMP.W           R10, #0|186-241-0-15
47538|code|BLE             loc_BA02|38-221
47540|code|MOVS            R5, #0|0-37
47542|code|LDR.W           R8, [R0,#0x10]|208-248-16-128
47546|code|MOV             R6, R5|46-70
47548|code|B               loc_B9C6|3-224
47550|code|ADDS            R6, #1|1-54
47552|code|ADDS            R5, R5, R0|45-24
47554|code|CMP             R6, R10|86-69
47556|code|BEQ             loc_BA02|29-208
47558|code|LDR.W           R7, [R8],#4|88-248-4-123
47562|code|MOV             R0, R7|56-70
47564|code|BL              sub_A5A0|254-247-232-253
47568|code|SUBS            R3, R0, #1|67-30
47570|code|ADDS            R3, R3, R5|91-25
47572|code|CMP             R9, R3|153-69
47574|code|BGT             loc_B9BE|242-220
47576|code|LDRB            R3, [R7,#0x10]|59-124
47578|code|LDR             R1, [R7,#4]|121-104
47580|code|LSLS            R0, R3, #0x1F|216-7
47582|code|BMI             loc_BA16|26-212
47584|code|ADD             R1, R9|73-68
47586|code|MOV             R0, R7|56-70
47588|code|SUBS            R1, R1, R5|73-27
47590|code|BL              sub_A818|254-247-23-255
47594|code|MOV             R5, R0|5-70
47596|code|CBZ             R0, loc_BA0E|120-177
47598|code|MOV             R1, R0|1-70
47600|code|ADDS            R2, R6, #1|114-28
47602|code|MOV             R0, R4|32-70
47604|code|BL              sub_ACF0|255-247-124-249
47608|code|MOV             R0, R5|40-70
47610|code|BL              sub_A30C|254-247-135-252
47614|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
47618|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
47622|code|MOVS            R0, #1|1-32
47624|code|STR             R3, [R4,#0xC]|227-96
47626|code|POP.W           {R3-R11,PC}|189-232-248-143
47630|code|MOV             R0, R7|56-70
47632|code|BL              sub_A61C|254-247-4-254
47636|code|CBZ             R0, loc_BA1E|24-177
47638|code|MOV             R0, R4|32-70
47640|code|MOV             R1, R6|49-70
47642|code|BL              sub_B558|255-247-157-253
47646|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
47650|code|MOVS            R0, #1|1-32
47652|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
47656|code|STR             R3, [R4,#0xC]|227-96
47658|code|POP.W           {R3-R11,PC}|189-232-248-143
47662|code|LDR             R0, =aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|10-72
47664|code|MOVW            R2, #0x714; line|64-242-20-114
47668|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
47670|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|10-75
47672|code|BLX             __assert_fail|253-247-164-236
47676|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|9-72
47678|code|MOVW            R2, #0x713; line|64-242-19-114
47682|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
47684|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|6-75
47686|code|BLX             __assert_fail|253-247-158-236
47690|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
47692|code|MOVW            R2, #0x713; line|64-242-19-114
47696|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
47698|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|3-75
47700|code|BLX             __assert_fail|253-247-150-236
47704|data|DCD aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|152-242-0-0
47708|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
47712|data|DCD aHostlistDelete_0; "hostlist_delete_nth"|88-239-0-0
47716|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
47720|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
47724|code|PUSH            {R3-R5,LR}|56-181
47726|code|MOV             R5, R0|5-70
47728|code|BL              sub_B108|255-247-74-251
47732|code|CMP             R0, #0|0-40
47734|code|MOV             R4, R0|4-70
47736|code|BLT             loc_BA82|3-219
47738|code|MOV             R0, R5|40-70
47740|code|MOV             R1, R4|33-70
47742|code|BL              sub_B988|255-247-131-255
47746|code|MVNS            R0, R4|224-67
47748|code|LSRS            R0, R0, #0x1F|192-15
47750|code|POP             {R3-R5,PC}|56-189
47752|code|PUSH.W          {R4-R9,LR}|45-233-240-67
47756|code|MOV             R4, R0|4-70
47758|code|SUB             SP, SP, #0xC|131-176
47760|code|CMP             R0, #0|0-40
47762|code|BEQ.W           loc_BB9C|0-240-131-128
47766|code|LDR             R2, [R0]|2-104
47768|code|MOVW            R3, #0xDEAD|77-246-173-99
47772|code|CMP             R2, R3|154-66
47774|code|BNE             loc_BB8E|118-209
47776|code|LDR             R7, [R0,#0xC]|199-104
47778|code|CMP             R7, #0|0-47
47780|code|BLE             loc_BB44|78-221
47782|code|LDR             R3, [R0,#0x10]|3-105
47784|code|LDR             R5, [R3]|29-104
47786|code|CMP             R5, #0|0-45
47788|code|BEQ             loc_BB80|104-208
47790|code|LDRB            R3, [R5,#0x10]|43-124
47792|code|LSLS            R6, R3, #0x1F|222-7
47794|code|BMI             loc_BADE|20-212
47796|code|MOV             R0, R5|40-70
47798|code|BL              sub_A5A0|254-247-115-253
47802|code|MOV             R6, R0|6-70
47804|code|CMP             R0, #0|0-40
47806|code|BNE             loc_BB0A|36-209
47808|code|SUBS            R7, #1|1-63
47810|code|MOV             R0, R5|40-70
47812|code|STR             R7, [R4,#0xC]|231-96
47814|code|BL              sub_A61C|254-247-169-253
47818|code|MOV             R1, R0|1-70
47820|code|MOV             R0, R4|32-70
47822|code|CBNZ            R1, loc_BB02|193-185
47824|code|MOV             R2, R1|10-70
47826|code|BL              sub_B508|255-247-25-253
47830|code|MOV             R0, R6|48-70
47832|code|ADD             SP, SP, #0xC|3-176
47834|code|POP.W           {R4-R9,PC}|189-232-240-131
47838|code|LDM.W           R5, {R0,R3}|149-232-9-0
47842|code|ADDS            R3, #1|1-51
47844|code|STR             R3, [R5,#4]|107-96
47846|code|BLX             __strdup|253-247-232-235
47850|code|MOV             R6, R0|6-70
47852|code|CBZ             R0, loc_BB48|96-179
47854|code|LDR             R7, [R4,#0xC]|231-104
47856|code|SUBS            R7, #1|1-63
47858|code|MOV             R0, R5|40-70
47860|code|STR             R7, [R4,#0xC]|231-96
47862|code|BL              sub_A61C|254-247-145-253
47866|code|MOV             R1, R0|1-70
47868|code|MOV             R0, R4|32-70
47870|code|CMP             R1, #0|0-41
47872|code|BEQ             loc_BAD0|230-208
47874|code|MOVS            R1, #0|0-33
47876|code|BL              sub_B558|255-247-40-253
47880|code|B               loc_BAD6|229-231
47882|code|LDR             R7, [R5]|47-104
47884|code|MOV             R0, R7|56-70
47886|code|BLX             strlen|253-247-170-235
47890|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
47894|code|ADD.W           R9, R8, #0x10|8-241-16-9
47898|code|ADD             R9, R0|129-68
47900|code|MOV             R0, R9|72-70
47902|code|BLX             malloc|253-247-100-235
47906|code|MOV             R6, R0|6-70
47908|code|CBZ             R0, loc_BB64|240-177
47910|code|LDR.W           LR, [R5,#4]|213-248-4-224
47914|code|MOV             R3, R7|59-70
47916|code|MOV             R1, R9|73-70
47918|code|LDR             R2, =aS0Lu; "%s%0*lu"|31-74
47920|code|ADD.W           R12, LR, #1|14-241-1-12
47924|code|STR.W           R12, [R5,#4]|197-248-4-192
47928|code|STMEA.W         SP, {R8,LR}|141-232-0-65
47932|code|BLX             snprintf|253-247-176-235
47936|code|LDR             R7, [R4,#0xC]|231-104
47938|code|B               loc_BAC0|189-231
47940|code|MOVS            R6, #0|0-38
47942|code|B               loc_BAD6|198-231
47944|code|BLX             __errno_location|253-247-164-235
47948|code|MOVS            R2, #0xC|12-34
47950|code|MOVW            R1, #0x333|64-242-51-49
47954|code|MOV             R3, R0|3-70
47956|code|LDR             R0, =aHostlistC; "hostlist.c"|22-72
47958|code|STR             R2, [R3]|26-96
47960|code|LDR             R2, =aHostrangeShift; "hostrange shift"|22-74
47962|code|BL              sub_A1F4|254-247-75-251
47966|code|LDR             R7, [R4,#0xC]|231-104
47968|code|MOV             R6, R0|6-70
47970|code|B               loc_BAF0|197-231
47972|code|BLX             __errno_location|253-247-150-235
47976|code|MOVS            R2, #0xC|12-34
47978|code|MOVW            R1, #0x337|64-242-55-49
47982|code|MOV             R3, R0|3-70
47984|code|LDR             R0, =aHostlistC; "hostlist.c"|15-72
47986|code|STR             R2, [R3]|26-96
47988|code|LDR             R2, =aHostrangeShift; "hostrange shift"|15-74
47990|code|BL              sub_A1F4|254-247-61-251
47994|code|LDR             R7, [R4,#0xC]|231-104
47996|code|MOV             R6, R0|6-70
47998|code|B               loc_BAC0|159-231
48000|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|13-72
48002|code|MOVW            R2, #0x32E|64-242-46-50
48006|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
48008|code|LDR             R3, =aHostrangeShift_0; "hostrange_shift"|12-75
48010|code|BLX             __assert_fail|253-247-252-235
48014|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
48016|code|MOVW            R2, #0x66F|64-242-111-98
48020|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
48022|code|LDR             R3, =aHostlistShift; "hostlist_shift"|11-75
48024|code|BLX             __assert_fail|253-247-244-235
48028|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
48030|code|MOVW            R2, #0x66F|64-242-111-98
48034|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
48036|code|LDR             R3, =aHostlistShift; "hostlist_shift"|7-75
48038|code|BLX             __assert_fail|253-247-238-235
48042|data|ALIGN 4|0-191
48044|data|DCD aS0Lu; "%s%0*lu"|20-242-0-0
48048|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
48052|data|DCD aHostrangeShift; "hostrange shift"|180-242-0-0
48056|data|DCD aHrVoid0; "hr != ((void *)0)"|156-240-0-0
48060|data|DCD aHostrangeShift_0; "hostrange_shift"|124-239-0-0
48064|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
48068|data|DCD aHostlistShift; "hostlist_shift"|108-239-0-0
48072|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
48076|code|PUSH            {R4,LR}|16-181
48078|code|CMP             R0, #0|0-40
48080|code|BEQ             locret_BC20|38-208
48082|code|LDR             R3, [R0]|3-104
48084|code|MOVW            R2, #0xDEAD|77-246-173-98
48088|code|CMP             R3, R2|147-66
48090|code|BNE             loc_BC4C|55-209
48092|code|LDR             R1, [R0,#4]|65-104
48094|code|CMP             R1, #0|0-41
48096|code|BEQ             loc_BC3E|45-208
48098|code|LDR             R2, [R1]|10-104
48100|code|CMP             R2, R3|154-66
48102|code|BNE             loc_BC30|35-209
48104|code|LDR             R3, [R1,#0x14]|75-105
48106|code|CBZ             R3, loc_BC0E|131-177
48108|code|LDR             R4, [R3]|28-104
48110|code|CMP             R4, R2|148-66
48112|code|BNE             loc_BC22|23-209
48114|code|ADDS            R1, #0x14|20-49
48116|code|CMP             R0, R3|152-66
48118|code|BNE             loc_BC04|5-209
48120|code|B               loc_BC1A|15-224
48122|code|LDR             R2, [R3]|26-104
48124|code|CMP             R2, R4|162-66
48126|code|BNE             loc_BC22|16-209
48128|code|CMP             R0, R3|152-66
48130|code|BEQ             loc_BC1A|10-208
48132|code|ADD.W           R1, R3, #0x14|3-241-20-1
48136|code|LDR             R3, [R3,#0x14]|91-105
48138|code|CMP             R3, #0|0-43
48140|code|BNE             loc_BBFA|245-209
48142|code|MOVS            R3, #1|1-35
48144|code|STR             R3, [R0]|3-96
48146|code|POP.W           {R4,LR}|189-232-16-64
48150|code|B.W             j_free|253-247-115-186
48154|code|LDR             R3, [R0,#0x14]|67-105
48156|code|STR             R3, [R1]|11-96
48158|code|B               loc_BC0E|246-231
48160|code|POP             {R4,PC}|16-189
48162|code|LDR             R0, =aPiMagic57005; "(*pi)->magic == 57005"|14-72
48164|code|MOVW            R2, #0x89C; line|64-246-156-2
48168|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
48170|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|14-75
48172|code|BLX             __assert_fail|253-247-170-235
48176|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|13-72
48178|code|MOVW            R2, #0x89A; line|64-246-154-2
48182|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
48184|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|10-75
48186|code|BLX             __assert_fail|253-247-164-235
48190|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|11-72
48192|code|MOVW            R2, #0x89A; line|64-246-154-2
48196|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
48198|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|7-75
48200|code|BLX             __assert_fail|253-247-156-235
48204|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|8-72
48206|code|MOVW            R2, #0x899; line|64-246-153-2
48210|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
48212|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_destroy"|3-75
48214|code|BLX             __assert_fail|253-247-150-235
48218|data|ALIGN 4|0-191
48220|data|DCD aPiMagic57005; "(*pi)->magic == 57005"|244-242-0-0
48224|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
48228|data|DCD aHostlistIterat_2; "hostlist_iterator_destroy"|140-239-0-0
48232|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|220-242-0-0
48236|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|196-242-0-0
48240|data|DCD aIMagic57005; "i->magic == 57005"|76-242-0-0
48244|code|PUSH            {R3-R5,LR}|56-181
48246|code|MOV             R5, R0|5-70
48248|code|CMP             R0, #0|0-40
48250|code|BEQ             locret_BCC0|33-208
48252|code|LDR             R2, [R0]|2-104
48254|code|MOVW            R3, #0xDEAD|77-246-173-99
48258|code|CMP             R2, R3|154-66
48260|code|BEQ             loc_BC8C|2-208
48262|code|B               loc_BCC2|28-224
48264|code|BL              sub_BBCC|255-247-160-255
48268|code|LDR             R0, [R5,#0x14]|104-105
48270|code|CMP             R0, #0|0-40
48272|code|BNE             loc_BC88|250-209
48274|code|LDR             R3, [R5,#8]|171-104
48276|code|CMP             R3, #0|0-43
48278|code|BLE             loc_BCAC|9-221
48280|code|MOVS            R4, #0|0-36
48282|code|LDR             R3, [R5,#0x10]|43-105
48284|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
48288|code|ADDS            R4, #1|1-52
48290|code|BL              sub_A30C|254-247-51-251
48294|code|LDR             R3, [R5,#8]|171-104
48296|code|CMP             R3, R4|163-66
48298|code|BGT             loc_BC9A|246-220
48300|code|LDR             R0, [R5,#0x10]; ptr|40-105
48302|code|BLX             free|253-247-42-234
48306|code|MOVS            R3, #1|1-35
48308|code|MOV             R0, R5|40-70
48310|code|STR             R3, [R5]|43-96
48312|code|POP.W           {R3-R5,LR}|189-232-56-64
48316|code|B.W             j_free|253-247-32-186
48320|code|POP             {R3-R5,PC}|56-189
48322|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
48324|code|MOVW            R2, #0x5F9; line|64-242-249-82
48328|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
48330|code|LDR             R3, =aHostlistDestro; "hostlist_destroy"|3-75
48332|code|BLX             __assert_fail|253-247-90-235
48336|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
48340|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
48344|data|DCD aHostlistDestro; "hostlist_destroy"|168-239-0-0
48348|code|PUSH.W          {R4-R9,LR}|45-233-240-67
48352|code|SUB.W           SP, SP, #0x400|173-245-128-109
48356|code|LDR             R7, =__stack_chk_guard|63-79
48358|code|SUB             SP, SP, #0xC|131-176
48360|code|MOV             R5, R0|5-70
48362|code|LDR             R3, [R7]|59-104
48364|code|STR.W           R3, [SP,#0x404]|205-248-4-52
48368|code|BL              sub_A67C|254-247-196-252
48372|code|MOV             R6, R0|6-70
48374|code|CMP             R0, #0|0-40
48376|code|BEQ             loc_BDA6|85-208
48378|code|CMP             R5, #0|0-45
48380|code|BEQ             loc_BDD4|106-208
48382|code|LDR             R2, [R5]|42-104
48384|code|MOVW            R3, #0xDEAD|77-246-173-99
48388|code|CMP             R2, R3|154-66
48390|code|BNE             loc_BDC6|94-209
48392|code|LDR             R4, [R5,#8]|172-104
48394|code|CMP             R4, #0|0-44
48396|code|BEQ             loc_BDBA|85-208
48398|code|LDR             R3, [R5,#0x10]|43-105
48400|code|MOVS            R4, #0|0-36
48402|code|LDR.W           R8, [R3]|211-248-0-128
48406|code|MOV             R1, R8|65-70
48408|code|MOV             R0, R6|48-70
48410|code|BL              sub_AC1C|254-247-127-255
48414|code|LDR             R3, [R5,#0x10]|43-105
48416|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
48420|code|ADDS            R4, #1|1-52
48422|code|BL              sub_A30C|254-247-241-250
48426|code|LDR             R3, [R5,#8]|171-104
48428|code|CMP             R4, R3|156-66
48430|code|BGE             loc_BD44|9-218
48432|code|LDR             R2, [R5,#0x10]|42-105
48434|code|LDR             R3, [R6,#0x10]|51-105
48436|code|LDR.W           R8, [R2,R4,LSL#2]|82-248-36-128
48440|code|LDR             R0, [R3]|24-104
48442|code|MOV             R1, R8|65-70
48444|code|BL              sub_A9B8|254-247-60-254
48448|code|CMP             R0, #0|0-40
48450|code|BNE             loc_BD16|232-209
48452|code|LDR             R2, [R6,#8]|178-104
48454|code|MOV             R0, R5|40-70
48456|code|MOV             R1, R4|33-70
48458|code|BL              sub_B508|255-247-221-251
48462|code|LDR             R2, [R5,#8]|170-104
48464|code|LDR             R0, [R6,#8]|176-104
48466|code|CMP             R2, R4|162-66
48468|code|BLE             loc_BD82|21-221
48470|code|SUBS            R3, R4, R0|35-26
48472|code|MOV.W           R8, R0,LSL#2|79-234-128-8
48476|code|MOV.W           R9, #0|79-240-0-9
48480|code|LSLS            R3, R3, #2|155-0
48482|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
48486|code|ADD.W           R1, R3, R8|3-235-8-1
48490|code|ADDS            R4, #1|1-52
48492|code|LDR.W           R12, [LR,R1]|94-248-1-192
48496|code|STR.W           R12, [LR,R3]|78-248-3-192
48500|code|ADDS            R3, #4|4-51
48502|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
48506|code|CMP             R4, R2|148-66
48508|code|STR.W           R9, [LR,R1]|78-248-1-144
48512|code|BNE             loc_BD62|239-209
48514|code|LDR             R4, [R5,#0xC]|236-104
48516|code|SUBS            R0, R2, R0|16-26
48518|code|LDR             R3, [R6,#0xC]|243-104
48520|code|MOV.W           R1, #0x400|79-244-128-97
48524|code|ADD             R2, SP, #4|1-170
48526|code|STR             R0, [R5,#8]|168-96
48528|code|SUBS            R3, R4, R3|227-26
48530|code|MOV             R0, R6|48-70
48532|code|STR             R3, [R5,#0xC]|235-96
48534|code|BL              sub_B354|255-247-221-250
48538|code|MOV             R0, R6|48-70
48540|code|BL              sub_BC74|255-247-106-255
48544|code|ADD             R0, SP, #4|1-168
48546|code|BLX             __strdup|253-247-138-234
48550|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
48554|code|LDR             R3, [R7]|59-104
48556|code|CMP             R2, R3|154-66
48558|code|BNE             loc_BDC2|8-209
48560|code|ADD             SP, SP, #0xC|3-176
48562|code|ADD.W           SP, SP, #0x400|13-245-128-109
48566|code|POP.W           {R4-R9,PC}|189-232-240-131
48570|code|BL              sub_BC74|255-247-91-255
48574|code|MOV             R0, R4|32-70
48576|code|B               loc_BDA6|241-231
48578|code|BLX             __stack_chk_fail|253-247-196-233
48582|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
48584|code|MOVW            R2, #0x6AD|64-242-173-98
48588|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
48590|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|8-75
48592|code|BLX             __assert_fail|253-247-216-234
48596|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
48598|code|MOVW            R2, #0x6AD|64-242-173-98
48602|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
48604|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|4-75
48606|code|BLX             __assert_fail|253-247-210-234
48610|data|ALIGN 4|0-191
48612|data|DCD __stack_chk_guard|24-125-1-0
48616|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
48620|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
48624|data|DCD aHostlistShiftR; "hostlist_shift_range"|188-239-0-0
48628|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
48632|code|PUSH.W          {R4-R11,LR}|45-233-240-79
48636|code|SUB.W           SP, SP, #0x400|173-245-128-109
48640|code|LDR             R7, =__stack_chk_guard|60-79
48642|code|SUB             SP, SP, #0xC|131-176
48644|code|MOV             R4, R0|4-70
48646|code|LDR             R3, [R7]|59-104
48648|code|STR.W           R3, [SP,#0x404]|205-248-4-52
48652|code|CMP             R0, #0|0-40
48654|code|BEQ             loc_BEE6|106-208
48656|code|LDR             R2, [R0]|2-104
48658|code|MOVW            R3, #0xDEAD|77-246-173-99
48662|code|CMP             R2, R3|154-66
48664|code|BNE             loc_BED8|94-209
48666|code|LDR             R3, [R0,#8]|131-104
48668|code|MOVS            R0, #0|0-32
48670|code|CMP             R3, #0|0-43
48672|code|BLE             loc_BEC0|78-221
48674|code|BL              sub_A67C|254-247-43-252
48678|code|MOV             R6, R0|6-70
48680|code|CMP             R6, #0|0-46
48682|code|BEQ             loc_BEC0|73-208
48684|code|LDR             R5, [R4,#8]|165-104
48686|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
48690|code|SUBS            R3, R5, #1|107-30
48692|code|SUBS.W          R9, R5, #2|181-241-2-9
48696|code|ADD.W           R8, R10, R3,LSL#2|10-235-131-8
48700|code|LDR.W           R11, [R10,R3,LSL#2]|90-248-35-176
48704|code|BPL             loc_BE4A|3-213
48706|code|B               loc_BE58|9-224
48708|code|ADDS.W          R9, R9, #0xFFFFFFFF|25-241-255-57
48712|code|BCC             loc_BE58|6-211
48714|code|LDR.W           R1, [R8,#-4]!|88-248-4-29
48718|code|MOV             R0, R11|88-70
48720|code|BL              sub_A9B8|254-247-178-253
48724|code|CMP             R0, #0|0-40
48726|code|BNE             loc_BE44|245-209
48728|code|ADD.W           R9, R9, #1|9-241-1-9
48732|code|CMP             R5, R9|77-69
48734|code|BLE             loc_BE96|26-221
48736|code|MOV.W           R8, R9,LSL#2|79-234-137-8
48740|code|MOV.W           R11, #0|79-240-0-11
48744|code|B               loc_BE6E|1-224
48746|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
48750|code|LDR.W           R1, [R10,R8]|90-248-8-16
48754|code|MOV             R0, R6|48-70
48756|code|BL              sub_AC1C|254-247-210-254
48760|code|LDR             R3, [R4,#0x10]|35-105
48762|code|ADD.W           R9, R9, #1|9-241-1-9
48766|code|LDR.W           R0, [R3,R8]|83-248-8-0
48770|code|BL              sub_A30C|254-247-67-250
48774|code|LDR             R5, [R4,#8]|165-104
48776|code|LDR             R3, [R4,#0x10]|35-105
48778|code|CMP             R5, R9|77-69
48780|code|STR.W           R11, [R3,R8]|67-248-8-176
48784|code|ADD.W           R8, R8, #4|8-241-4-8
48788|code|BGT             loc_BE6A|233-220
48790|code|LDR             R0, [R4,#0xC]|224-104
48792|code|MOV.W           R1, #0x400|79-244-128-97
48796|code|LDR.W           LR, [R6,#8]|214-248-8-224
48800|code|MOV             R2, SP|106-70
48802|code|LDR             R3, [R6,#0xC]|243-104
48804|code|RSB.W           R5, LR, R5|206-235-5-5
48808|code|STR             R5, [R4,#8]|165-96
48810|code|SUBS            R3, R0, R3|195-26
48812|code|MOV             R0, R6|48-70
48814|code|STR             R3, [R4,#0xC]|227-96
48816|code|BL              sub_B354|255-247-80-250
48820|code|MOV             R0, R6|48-70
48822|code|BL              sub_BC74|255-247-221-254
48826|code|MOV             R0, SP|104-70
48828|code|BLX             __strdup|253-247-252-233
48832|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
48836|code|LDR             R3, [R7]|59-104
48838|code|CMP             R2, R3|154-66
48840|code|BNE             loc_BED4|4-209
48842|code|ADD             SP, SP, #0xC|3-176
48844|code|ADD.W           SP, SP, #0x400|13-245-128-109
48848|code|POP.W           {R4-R11,PC}|189-232-240-143
48852|code|BLX             __stack_chk_fail|253-247-58-233
48856|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
48858|code|MOVW            R2, #0x68B|64-242-139-98
48862|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
48864|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|7-75
48866|code|BLX             __assert_fail|253-247-80-234
48870|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
48872|code|MOVW            R2, #0x68B|64-242-139-98
48876|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
48878|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|4-75
48880|code|BLX             __assert_fail|253-247-72-234
48884|data|DCD __stack_chk_guard|24-125-1-0
48888|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|212-241-0-0
48892|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
48896|data|DCD aHostlistPopRan; "hostlist_pop_range"|212-239-0-0
48900|data|DCD aHlVoid0; "hl != ((void *)0)"|172-241-0-0
48904|code|PUSH.W          {R4-R11,LR}|45-233-240-79
48908|code|MOVW            R1, #0x7D18|71-246-24-81
48912|code|SUB.W           SP, SP, #0x1F400|173-245-250-61
48916|code|MOVT.W          R1, #1|192-242-1-1
48920|code|SUB             SP, SP, #0x34|141-176
48922|code|MOV             R4, R0|4-70
48924|code|LDR             R3, [R1]|11-104
48926|code|ADD.W           R2, SP, #0x1F458+var_58|13-245-250-50
48930|code|ADDS            R2, #0x2C ; ','|44-50
48932|code|STR             R3, [R2]|19-96
48934|code|BL              sub_A67C|254-247-169-251
48938|code|MOV             R8, R0|128-70
48940|code|CBZ             R4, loc_BF5C|180-177
48942|code|MOV             R0, R4|32-70
48944|code|BLX             __strdup|253-247-194-233
48948|code|STR             R0, [SP,#0x1F458+ptr]|9-144
48950|code|CMP             R0, #0|0-40
48952|code|BEQ.W           loc_C278|0-240-158-129
48956|code|ADD             R3, SP, #0x1F458+var_1F430|10-171
48958|code|MOV             R5, R0|5-70
48960|code|STR             R3, [SP,#0x1F458+var_1F440]|6-147
48962|code|B               loc_BF50|5-224
48964|code|LDR             R0, =asc_F34C; "\t, "|148-72
48966|code|MOV             R1, R4; c|33-70
48968|code|BLX             strchr|253-247-146-233
48972|code|CBZ             R0, loc_BF80|192-177
48974|code|ADDS            R5, #1|1-53
48976|code|LDRB            R4, [R5]|44-120
48978|code|CMP             R4, #0|0-44
48980|code|BNE             loc_BF44|246-209
48982|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
48984|code|BLX             free|253-247-212-232
48988|code|ADD.W           R3, SP, #0x1F458+var_58|13-245-250-51
48992|code|MOVW            R1, #0x7D18|71-246-24-81
48996|code|ADDS            R3, #0x2C ; ','|44-51
48998|code|MOVT.W          R1, #1|192-242-1-1
49002|code|MOV             R0, R8|64-70
49004|code|LDR             R2, [R3]|26-104
49006|code|LDR             R3, [R1]|11-104
49008|code|CMP             R2, R3|154-66
49010|code|BNE.W           loc_C284|64-240-135-129
49014|code|ADD             SP, SP, #0x34 ; '4'|13-176
49016|code|ADD.W           SP, SP, #0x1F400|13-245-250-61
49020|code|POP.W           {R4-R11,PC}|189-232-240-143
49024|code|MOV             R7, R5|47-70
49026|code|CBZ             R4, loc_BF92|52-177
49028|code|LDR             R0, =asc_F34C; "\t, "|132-72
49030|code|MOV             R1, R4; c|33-70
49032|code|BLX             strchr|253-247-114-233
49036|code|CMP             R0, #0|0-40
49038|code|BEQ.W           loc_C144|0-240-217-128
49042|code|SUBS            R6, R7, R5|126-27
49044|code|MOV             R0, R5; s|40-70
49046|code|MOVS            R1, #0x5B ; '['; c|91-33
49048|code|MOV             R2, R6; n|50-70
49050|code|BLX             memchr|253-247-178-233
49054|code|CBZ             R0, loc_BFB0|56-177
49056|code|MOV             R0, R5; s|40-70
49058|code|MOVS            R1, #0x5D ; ']'; c|93-33
49060|code|MOV             R2, R6; n|50-70
49062|code|BLX             memchr|253-247-172-233
49066|code|CMP             R0, #0|0-40
49068|code|BEQ.W           loc_C0DE|0-240-151-128
49072|code|CBZ             R4, loc_BFD6|140-177
49074|code|MOV             R6, R7|62-70
49076|code|MOV.W           R10, #0|79-240-0-10
49080|code|MOV             R9, R7|185-70
49082|code|MOV             R1, R4|33-70
49084|code|B               loc_BFCA|5-224
49086|code|STRB.W          R10, [R6],#1|6-248-1-171
49090|code|MOV             R7, R6|55-70
49092|code|LDRB.W          R1, [R9,#1]!; c|25-248-1-31
49096|code|CBZ             R1, loc_BFD6|41-177
49098|code|LDR             R0, =asc_F34C; "\t, "|115-72
49100|code|MOV             R7, R6|55-70
49102|code|BLX             strchr|253-247-80-233
49106|code|CMP             R0, #0|0-40
49108|code|BNE             loc_BFBE|243-209
49110|code|ADD.W           R0, SP, #0x1F458+var_458|13-245-248-48
49114|code|MOV             R1, R5; src|41-70
49116|code|MOV.W           R2, #0x400; n|79-244-128-98
49120|code|ADDS            R0, #0x2C ; ','; dest|44-48
49122|code|BLX             strncpy|253-247-124-233
49126|code|MOV             R0, R5; s|40-70
49128|code|MOVS            R1, #0x5B ; '['; c|91-33
49130|code|BLX             strchr|253-247-66-233
49134|code|CMP             R0, #0|0-40
49136|code|BEQ.W           loc_C17E|0-240-197-128
49140|code|MOV             R6, R0|6-70
49142|code|MOVS            R4, #0|0-36
49144|code|MOVS            R1, #0x5D ; ']'; c|93-33
49146|code|STRB.W          R4, [R6],#1|6-248-1-75
49150|code|MOV             R0, R6; s|48-70
49152|code|BLX             strchr|253-247-54-233
49156|code|STR             R0, [SP,#0x1F458+var_1F444]|5-144
49158|code|CMP             R0, #0|0-40
49160|code|BEQ.W           loc_C17E|0-240-185-128
49164|code|STRB            R4, [R0]|4-112
49166|code|CMP             R6, #0|0-46
49168|code|BEQ.W           loc_C1A8|0-240-202-128
49172|code|STR             R4, [SP,#0x1F458+var_1F448]|4-148
49174|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
49176|code|STR             R5, [SP,#0x1F458+var_1F438]|8-149
49178|code|MOV             R0, R6; s|48-70
49180|code|MOVS            R1, #0x2C ; ','; c|44-33
49182|code|BLX             strchr|253-247-40-233
49186|code|MOV             R5, R0|5-70
49188|code|CBZ             R0, loc_C02C|16-177
49190|code|MOVS            R2, #0|0-34
49192|code|STRB.W          R2, [R5],#1|5-248-1-43
49196|code|MOV             R0, R6|48-70
49198|code|BLX             __strdup|253-247-68-233
49202|code|MOV             R7, R0|7-70
49204|code|CMP             R0, #0|0-40
49206|code|BEQ.W           loc_C14A|0-240-136-128
49210|code|MOV             R0, R6; s|48-70
49212|code|MOVS            R1, #0x2D ; '-'; c|45-33
49214|code|BLX             strchr|253-247-24-233
49218|code|MOV             R4, R0|4-70
49220|code|CBZ             R0, loc_C052|40-177
49222|code|LDRB            R3, [R0,#1]|67-120
49224|code|MOVS            R1, #0|0-33
49226|code|STRB            R1, [R0]|1-112
49228|code|CMP             R3, #0x2D ; '-'|45-43
49230|code|BEQ             loc_C122|104-208
49232|code|ADDS            R4, R0, #1|68-28
49234|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
49236|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
49240|code|ADDS            R1, #0x28 ; '('; endptr|40-49
49242|code|MOVS            R2, #0xA; base|10-34
49244|code|MOV             R0, R6; nptr|48-70
49246|code|ADD.W           R9, SP, #0x1F458+var_1458|13-245-240-57
49250|code|ADD.W           R11, R3, R3,LSL#1|3-235-67-11
49254|code|BLX             strtoul|253-247-248-232
49258|code|ADD.W           R9, R9, #0x30 ; '0'|9-241-48-9
49262|code|LDR             R1, [SP,#0x1F458+var_1F440]|6-153
49264|code|LDR.W           R3, [R9,#-8]|89-248-8-60
49268|code|ADD.W           R9, R1, R11,LSL#2|1-235-139-9
49272|code|CMP             R6, R3|158-66
49274|code|MOV             R10, R0|130-70
49276|code|STR.W           R0, [R1,R11,LSL#2]|65-248-43-0
49280|code|BEQ             loc_C122|79-208
49282|code|CBZ             R4, loc_C08A|20-177
49284|code|LDRB            R2, [R4]|34-120
49286|code|CMP             R2, #0|0-42
49288|code|BNE             loc_C104|60-209
49290|code|CMP             R3, R4|163-66
49292|code|MOV             R0, R10|80-70
49294|code|STR.W           R0, [R9,#4]|201-248-4-0
49298|code|BEQ             loc_C122|70-208
49300|code|LDRB            R3, [R3]|27-120
49302|code|CMP             R3, #0|0-43
49304|code|BNE             loc_C122|67-209
49306|code|CMP             R10, R0|130-69
49308|code|BHI             loc_C122|65-216
49310|code|RSB.W           R10, R10, #1|202-241-1-10
49314|code|ADD             R0, R10|80-68
49316|code|CMP.W           R0, #0x4000|176-245-128-79
49320|code|BLS             loc_C156|85-217
49322|code|MOVW            R1, #0x551|64-242-81-81
49326|code|LDR             R2, =aTooManyHostsIn; "Too many hosts in range `%s'"|59-74
49328|code|MOV             R3, R7|59-70
49330|code|LDR             R0, =aHostlistC; "hostlist.c"|59-72
49332|code|BL              sub_A53C|254-247-66-250
49336|code|MOV             R0, R7; ptr|56-70
49338|code|BLX             free|253-247-36-232
49342|code|MOV             R11, R7|187-70
49344|code|BLX             __errno_location|253-247-232-232
49348|code|MOVS            R5, #0x22 ; '"'|34-37
49350|code|MOV             R4, R0|4-70
49352|code|STR             R5, [R0]|5-96
49354|code|MOV             R0, R8|64-70
49356|code|MOV.W           R8, #0|79-240-0-8
49360|code|BL              sub_BC74|255-247-208-253
49364|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
49366|code|BLX             free|253-247-22-232
49370|code|STR             R5, [R4]|37-96
49372|code|B               loc_BF5C|62-231
49374|code|MOV             R0, R7; s|56-70
49376|code|MOVS            R1, #0x5D ; ']'; c|93-33
49378|code|BLX             strchr|253-247-198-232
49382|code|MOV             R6, R0|6-70
49384|code|CMP             R0, #0|0-40
49386|code|BEQ.W           loc_BFB0|63-244-97-175
49390|code|SUBS            R2, R0, R7; n|194-27
49392|code|MOVS            R1, #0x5B ; '['; c|91-33
49394|code|MOV             R0, R7; s|56-70
49396|code|BLX             memchr|253-247-4-233
49400|code|CMP             R0, #0|0-40
49402|code|BNE.W           loc_BFB0|127-244-89-175
49406|code|ADDS            R7, R6, #1|119-28
49408|code|LDRB            R4, [R7]|60-120
49410|code|B               loc_BF82|62-231
49412|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
49416|code|MOVS            R2, #0xA; base|10-34
49418|code|ADDS            R1, #0x28 ; '('; endptr|40-49
49420|code|MOV             R0, R4; nptr|32-70
49422|code|BLX             strtoul|253-247-164-232
49426|code|ADD.W           R2, SP, #0x1F458+var_1458|13-245-240-50
49430|code|ADDS            R2, #0x28 ; '('|40-50
49432|code|LDR             R3, [R2]|19-104
49434|code|CMP             R3, R4|163-66
49436|code|STR.W           R0, [R9,#4]|201-248-4-0
49440|code|BNE             loc_C094|184-209
49442|code|MOVW            R1, #0x55B|64-242-91-81
49446|code|LDR             R2, =aInvalidRangeS; "Invalid range: `%s'"|31-74
49448|code|MOV             R3, R7|59-70
49450|code|LDR             R0, =aHostlistC; "hostlist.c"|29-72
49452|code|BL              sub_A53C|254-247-6-250
49456|code|MOV             R0, R7; ptr|56-70
49458|code|BLX             free|252-247-232-239
49462|code|MOVS            R5, #0x16|22-37
49464|code|BLX             __errno_location|253-247-172-232
49468|code|MOV             R11, R7|187-70
49470|code|MOV             R4, R0|4-70
49472|code|STR             R5, [R0]|5-96
49474|code|B               loc_C0CA|194-231
49476|code|ADDS            R7, #1|1-55
49478|code|LDRB            R4, [R7]|60-120
49480|code|B               loc_BF82|27-231
49482|code|BLX             __errno_location|253-247-164-232
49486|code|MOVS            R5, #0xC|12-37
49488|code|MOV             R4, R0|4-70
49490|code|STR             R5, [R0]|5-96
49492|code|B               loc_C0CA|185-231
49494|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
49496|code|MOV             R0, R7; ptr|56-70
49498|code|ADDS            R3, #1|1-51
49500|code|STR             R3, [SP,#0x1F458+var_1F448]|4-147
49502|code|BLX             free|252-247-210-239
49506|code|MOV             R0, R6; s|48-70
49508|code|BLX             strlen|253-247-126-232
49512|code|STR.W           R0, [R9,#8]|201-248-8-0
49516|code|CMP             R5, #0|0-45
49518|code|BEQ.W           loc_C272|0-240-128-128
49522|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
49524|code|CMP.W           R1, #0x2800|177-245-32-95
49528|code|BEQ             loc_C18E|9-208
49530|code|MOV             R6, R5|46-70
49532|code|B               loc_C01A|77-231
49534|code|ADD.W           R1, SP, #0x1F458+var_458|13-245-248-49
49538|code|MOV             R0, R8|64-70
49540|code|ADDS            R1, #0x2C ; ','|44-49
49542|code|MOV             R5, R7|61-70
49544|code|BL              sub_AE38|254-247-86-254
49548|code|B               loc_BF50|224-230
49550|code|BLX             __errno_location|253-247-130-232
49554|code|MOV             R4, R0|4-70
49556|code|LDR             R5, [R0]|5-104
49558|code|B               loc_C0CA|152-231
49560|data|DCD asc_F34C; "\t, "|76-243-0-0
49564|data|DCD aTooManyHostsIn; "Too many hosts in range `%s'"|12-243-0-0
49568|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
49572|data|DCD aInvalidRangeS; "Invalid range: `%s'"|44-243-0-0
49576|code|STR             R6, [SP,#0x1F458+var_1F448]|4-150
49578|code|LDR             R3, [SP,#0x1F458+var_1F444]|5-155
49580|code|ADD.W           R10, R3, #1|3-241-1-10
49584|code|LDRB            R6, [R3,#1]|94-120
49586|code|CBNZ            R6, loc_C1F0|238-185
49588|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
49590|code|CMP             R1, #0|0-41
49592|code|BEQ             loc_C26E|89-208
49594|code|ADD             R4, SP, #0x1F458+var_1F424|13-172
49596|code|MOV             R9, R7|185-70
49598|code|MOV             R7, R1|15-70
49600|code|LDR.W           R2, [R4,#-8]|84-248-8-44
49604|code|MOV             R0, R5|40-70
49606|code|LDR.W           R3, [R4,#-4]|84-248-4-60
49610|code|ADDS            R6, #1|1-54
49612|code|LDR.W           R1, [R4,#-0xC]|84-248-12-28
49616|code|ADDS            R4, #0xC|12-52
49618|code|BL              sub_A75C|254-247-195-250
49622|code|MOV             R10, R0|130-70
49624|code|MOV             R0, R8|64-70
49626|code|MOV             R1, R10|81-70
49628|code|BL              sub_AC1C|254-247-30-253
49632|code|MOV             R0, R10|80-70
49634|code|BL              sub_A30C|254-247-147-248
49638|code|CMP             R6, R7|190-66
49640|code|BNE             loc_C1C0|234-209
49642|code|MOV             R7, R9|79-70
49644|code|MOV             R5, R9|77-70
49646|code|B               loc_BF50|175-230
49648|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
49650|code|CMP             R3, #0|0-43
49652|code|BEQ             loc_C26E|59-208
49654|code|ADD.W           R9, SP, #0x1F458+var_1F424|13-241-52-9
49658|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
49660|code|MOV             R7, R5|47-70
49662|code|MOVS            R2, #0|0-34
49664|code|STR             R2, [SP,#0x1F458+var_1F444]|5-146
49666|code|LDR.W           R4, [R9,#-0xC]|89-248-12-76
49670|code|LDR.W           R5, [R9,#-8]|89-248-8-92
49674|code|CMP             R5, R4|165-66
49676|code|BCC             loc_C258|36-211
49678|code|LDR.W           R6, [R9,#-4]|89-248-4-108
49682|code|MOV             R3, R6|51-70
49684|code|MOV             R6, R10|86-70
49686|code|MOV             R10, R9|202-70
49688|code|MOV             R9, R3|153-70
49690|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
49694|code|LDR             R2, =aS0LuS; "%s%0*lu%s"|26-74
49696|code|MOV             R3, R7|59-70
49698|code|MOV.W           R1, #0x1000; maxlen|79-244-128-81
49702|code|ADDS            R0, #0x2C ; ','; s|44-48
49704|code|STR             R4, [SP,#0x1F458+var_1F454]|1-148
49706|code|STR.W           R9, [SP,#0x1F458+var_1F458]|205-248-0-144
49710|code|ADDS            R4, #1|1-52
49712|code|STR             R6, [SP,#0x1F458+var_1F450]|2-150
49714|code|BLX             snprintf|253-247-54-232
49718|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
49722|code|ADDS            R0, #0x2C ; ','|44-48
49724|code|BL              sub_A6E0|254-247-80-250
49728|code|MOV             R11, R0|131-70
49730|code|MOV             R0, R8|64-70
49732|code|MOV             R1, R11|89-70
49734|code|BL              sub_AC1C|254-247-233-252
49738|code|MOV             R0, R11|88-70
49740|code|BL              sub_A30C|254-247-94-248
49744|code|CMP             R5, R4|165-66
49746|code|BCS             loc_C21A|226-210
49748|code|MOV             R9, R10|209-70
49750|code|MOV             R10, R6|178-70
49752|code|LDR             R1, [SP,#0x1F458+var_1F444]|5-153
49754|code|ADD.W           R9, R9, #0xC|9-241-12-9
49758|code|LDR             R2, [SP,#0x1F458+var_1F448]|4-154
49760|code|ADDS            R1, #1|1-49
49762|code|STR             R1, [SP,#0x1F458+var_1F444]|5-145
49764|code|CMP             R1, R2|145-66
49766|code|BNE             loc_C202|204-209
49768|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
49770|code|MOV             R5, R7|61-70
49772|code|B               loc_BF50|112-230
49774|code|MOV             R5, R7|61-70
49776|code|B               loc_BF50|110-230
49778|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
49780|code|LDR             R5, [SP,#0x1F458+var_1F438]|8-157
49782|code|B               loc_C1AA|152-231
49784|code|MOV             R0, R8|64-70
49786|code|LDR.W           R8, [SP,#0x1F458+ptr]|221-248-36-128
49790|code|BL              sub_BC74|255-247-249-252
49794|code|B               loc_BF5C|107-230
49796|code|BLX             __stack_chk_fail|252-247-98-239
49800|data|DCD aS0LuS; "%s%0*lu%s"|64-243-0-0
49804|code|B.W             sub_BF08|255-247-60-190
49808|code|PUSH            {R3-R7,LR}|248-181
49810|code|MOV             R7, R0|7-70
49812|code|MOV             R0, R1|8-70
49814|code|MOVS            R5, #0|0-37
49816|code|BL              sub_C28C|255-247-248-255
49820|code|MOV             R6, R0|6-70
49822|code|CBNZ            R0, loc_C2AE|48-185
49824|code|B               loc_C2C8|18-224
49826|code|BL              sub_BA6C|255-247-227-251
49830|code|ADDS            R5, R5, R0|45-24
49832|code|MOV             R0, R4|32-70
49834|code|BLX             free|252-247-44-239
49838|code|MOV             R0, R6|48-70
49840|code|BL              sub_AEDC|254-247-20-254
49844|code|MOV             R4, R0|4-70
49846|code|MOV             R1, R0|1-70
49848|code|MOV             R0, R7|56-70
49850|code|CMP             R4, #0|0-44
49852|code|BNE             loc_C2A2|241-209
49854|code|MOV             R0, R6|48-70
49856|code|BL              sub_BC74|255-247-216-252
49860|code|MOV             R0, R5|40-70
49862|code|POP             {R3-R7,PC}|248-189
49864|code|BLX             __errno_location|252-247-228-239
49868|code|MOV             R5, R6|53-70
49870|code|MOVS            R3, #0x16|22-35
49872|code|STR             R3, [R0]|3-96
49874|code|MOV             R0, R5|40-70
49876|code|POP             {R3-R7,PC}|248-189
49878|data|ALIGN 4|0-191
49880|code|PUSH            {R4-R6,LR}|112-181
49882|code|MOV             R6, R0|6-70
49884|code|MOV             R5, R1|13-70
49886|code|CBZ             R1, loc_C2FC|105-177
49888|code|MOV             R0, R1|8-70
49890|code|BL              sub_C28C|255-247-211-255
49894|code|MOV             R4, R0|4-70
49896|code|MOV             R5, R0|5-70
49898|code|CBZ             R0, loc_C2FC|56-177
49900|code|LDR             R5, [R0,#0xC]|197-104
49902|code|MOV             R1, R4|33-70
49904|code|MOV             R0, R6|48-70
49906|code|BL              sub_AE84|254-247-199-253
49910|code|MOV             R0, R4|32-70
49912|code|BL              sub_BC74|255-247-188-252
49916|code|MOV             R0, R5|40-70
49918|code|POP             {R4-R6,PC}|112-189
49920|code|PUSH            {R4-R7,LR}|240-181
49922|code|SUB             SP, SP, #0x24 ; '$'|137-176
49924|code|LDR             R5, =__stack_chk_guard|69-77
49926|code|MOV             R4, R0|4-70
49928|code|LDR             R3, [R5]|43-104
49930|code|STR             R3, [SP,#0x1C]|7-147
49932|code|CMP             R0, #0|0-40
49934|code|BEQ             loc_C3E2|104-208
49936|code|LDR             R2, [R0]|2-104
49938|code|MOVW            R3, #0xDEAD|77-246-173-99
49942|code|CMP             R2, R3|154-66
49944|code|BNE             loc_C40C|120-209
49946|code|LDR             R3, [R0,#4]|67-104
49948|code|CMP             R3, #0|0-43
49950|code|BEQ             loc_C3F0|103-208
49952|code|LDR             R1, [R3]|25-104
49954|code|CMP             R1, R2|145-66
49956|code|BNE             loc_C3FE|107-209
49958|code|LDR             R1, [R3,#8]|153-104
49960|code|MOVS            R7, #0|0-39
49962|code|LDR             R0, [R0,#8]|128-104
49964|code|CMP             R1, R0|129-66
49966|code|BLE             loc_C39A|52-221
49968|code|LDR             R2, [R4,#0xC]|226-104
49970|code|LDR             R6, [R4,#0x10]|38-105
49972|code|LDR.W           R12, [R2,#8]|210-248-8-192
49976|code|ADDS            R6, #1|1-54
49978|code|LDR             R7, [R2,#4]|87-104
49980|code|STR             R6, [R4,#0x10]|38-97
49982|code|RSB.W           R7, R7, R12|199-235-12-7
49986|code|CMP             R6, R7|190-66
49988|code|BLS             loc_C35A|9-217
49990|code|LDR             R3, [R3,#0x10]|27-105
49992|code|ADDS            R0, #1|1-48
49994|code|MOVS            R7, #0|0-39
49996|code|CMP             R1, R0|129-66
49998|code|STR             R0, [R4,#8]|160-96
50000|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
50004|code|STR             R7, [R4,#0x10]|39-97
50006|code|STR             R2, [R4,#0xC]|226-96
50008|code|BLE             loc_C39A|31-221
50010|code|MOVS            R3, #0|0-35
50012|code|STRB.W          R3, [SP,#0xC]|141-248-12-48
50016|code|LDRB            R3, [R2,#0x10]|19-124
50018|code|LSLS            R7, R3, #0x1F|223-7
50020|code|IT MI|72-191
50022|code|ADDMI           R6, SP, #0xC|3-174
50024|code|BPL             loc_C3A8|30-213
50026|code|LDR             R0, [R2]|16-104
50028|code|BLX             strlen|252-247-122-239
50032|code|MOV             R7, R0|7-70
50034|code|MOV             R0, R6|48-70
50036|code|BLX             strlen|252-247-118-239
50040|code|ADDS            R0, R7, R0|56-24
50042|code|ADDS            R0, #1|1-48
50044|code|BLX             malloc|252-247-52-239
50048|code|MOV             R7, R0|7-70
50050|code|CMP             R0, #0|0-40
50052|code|BEQ             loc_C3C4|30-208
50054|code|MOVS            R3, #0|0-35
50056|code|STRB            R3, [R0]|3-112
50058|code|LDR             R3, [R4,#0xC]|227-104
50060|code|LDR             R1, [R3]|25-104
50062|code|BLX             strcat|252-247-2-239
50066|code|MOV             R0, R7|56-70
50068|code|MOV             R1, R6|49-70
50070|code|BLX             strcat|252-247-254-238
50074|code|LDR             R2, [SP,#0x1C]|7-154
50076|code|MOV             R0, R7|56-70
50078|code|LDR             R3, [R5]|43-104
50080|code|CMP             R2, R3|154-66
50082|code|BNE             loc_C3DE|28-209
50084|code|ADD             SP, SP, #0x24 ; '$'|9-176
50086|code|POP             {R4-R7,PC}|240-189
50088|code|ADD             R6, SP, #0xC|3-174
50090|code|LDR             R7, [R2,#4]|87-104
50092|code|LDR.W           LR, [R4,#0x10]|212-248-16-224
50096|code|MOVS            R1, #0xF|15-33
50098|code|LDR             R3, [R2,#0xC]|211-104
50100|code|MOV             R0, R6|48-70
50102|code|LDR             R2, =a0Lu; "%0*lu"|26-74
50104|code|ADD             R7, LR|119-68
50106|code|STR             R7, [SP]|0-151
50108|code|BLX             snprintf|252-247-112-239
50112|code|LDR             R2, [R4,#0xC]|226-104
50114|code|B               loc_C36A|210-231
50116|code|BLX             __errno_location|252-247-102-239
50120|code|MOVS            R2, #0xC|12-34
50122|code|MOVW            R1, #0x8DF|64-246-223-1
50126|code|MOV             R3, R0|3-70
50128|code|LDR             R0, =aHostlistC; "hostlist.c"|20-72
50130|code|STR             R2, [R3]|26-96
50132|code|LDR             R2, =aHostlistNext; "hostlist_next"|20-74
50134|code|BL              sub_A1F4|253-247-13-255
50138|code|MOV             R7, R0|7-70
50140|code|B               loc_C39A|221-231
50142|code|BLX             __stack_chk_fail|252-247-182-238
50146|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|18-72
50148|code|MOVW            R2, #0x8CE|64-246-206-2
50152|code|LDR             R1, =aHostlistC; "hostlist.c"|14-73
50154|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|17-75
50156|code|BLX             __assert_fail|252-247-202-239
50160|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|16-72
50162|code|MOV.W           R2, #0x8D0|79-244-13-98
50166|code|LDR             R1, =aHostlistC; "hostlist.c"|11-73
50168|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|13-75
50170|code|BLX             __assert_fail|252-247-196-239
50174|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
50176|code|MOV.W           R2, #0x8D0|79-244-13-98
50180|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
50182|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|10-75
50184|code|BLX             __assert_fail|252-247-188-239
50188|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
50190|code|MOVW            R2, #0x8CF|64-246-207-2
50194|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
50196|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|6-75
50198|code|BLX             __assert_fail|252-247-182-239
50202|data|ALIGN 4|0-191
50204|data|DCD __stack_chk_guard|24-125-1-0
50208|data|DCD a0Lu; "%0*lu"|156-241-0-0
50212|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
50216|data|DCD aHostlistNext; "hostlist_next"|80-243-0-0
50220|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
50224|data|DCD aHostlistNext_0; "hostlist_next"|232-239-0-0
50228|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|196-242-0-0
50232|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|220-242-0-0
50236|data|DCD aIMagic57005; "i->magic == 57005"|76-242-0-0
50240|code|PUSH.W          {R4-R10,LR}|45-233-240-71
50244|code|SUB.W           SP, SP, #0x410|173-245-130-109
50248|code|LDR             R6, =__stack_chk_guard|51-78
50250|code|MOV             R8, R0|128-70
50252|code|LDR             R3, [R6]|51-104
50254|code|STR.W           R3, [SP,#0x40C]|205-248-12-52
50258|code|CMP             R0, #0|0-40
50260|code|BEQ             loc_C508|88-208
50262|code|LDR             R3, [R0]|3-104
50264|code|MOVW            R2, #0xDEAD|77-246-173-98
50268|code|CMP             R3, R2|147-66
50270|code|BNE             loc_C4FA|76-209
50272|code|LDR             R5, [R0,#4]|69-104
50274|code|CMP             R5, #0|0-45
50276|code|BEQ             loc_C4EC|66-208
50278|code|LDR             R2, [R5]|42-104
50280|code|CMP             R2, R3|154-66
50282|code|BNE             loc_C4DE|56-209
50284|code|LDR             R3, [R0,#0x10]|3-105
50286|code|LDR.W           R9, [R5,#8]|213-248-8-144
50290|code|ADDS            R3, #1|1-51
50292|code|LDR.W           R10, [R5,#0x10]|213-248-16-160
50296|code|CMP             R3, #0|0-43
50298|code|LDR             R4, [R0,#8]|132-104
50300|code|STR             R3, [R0,#0x10]|3-97
50302|code|BLE             loc_C4AC|21-221
50304|code|ADD.W           R7, R10, R4,LSL#2|10-235-132-7
50308|code|B               loc_C494|6-224
50310|code|LDR.W           R1, [R7,#4]!|87-248-4-31
50314|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
50318|code|BL              sub_A9B8|254-247-147-250
50322|code|CBZ             R0, loc_C49A|16-177
50324|code|ADDS            R4, #1|1-52
50326|code|CMP             R9, R4|161-69
50328|code|BGT             loc_C486|245-220
50330|code|LDR.W           R3, [R10,R4,LSL#2]|90-248-36-48
50334|code|MOVS            R2, #0|0-34
50336|code|STR.W           R4, [R8,#8]|200-248-8-64
50340|code|STR.W           R2, [R8,#0x10]|200-248-16-32
50344|code|STR.W           R3, [R8,#0xC]|200-248-12-48
50348|code|MOVS            R0, #0|0-32
50350|code|CMP             R9, R4|161-69
50352|code|BLE             loc_C4C8|10-221
50354|code|MOV.W           R2, #0x400|79-244-128-98
50358|code|ADD             R3, SP, #8|2-171
50360|code|MOV             R0, R5|40-70
50362|code|ADD             R1, SP, #4|1-169
50364|code|STR             R4, [SP,#4]|1-148
50366|code|BL              sub_A9DC|254-247-141-250
50370|code|ADD             R0, SP, #8|2-168
50372|code|BLX             __strdup|252-247-248-238
50376|code|LDR.W           R2, [SP,#0x40C]|221-248-12-36
50380|code|LDR             R3, [R6]|51-104
50382|code|CMP             R2, R3|154-66
50384|code|BNE             loc_C4DA|3-209
50386|code|ADD.W           SP, SP, #0x410|13-245-130-109
50390|code|POP.W           {R4-R10,PC}|189-232-240-135
50394|code|BLX             __stack_chk_fail|252-247-56-238
50398|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|15-72
50400|code|MOV.W           R2, #0x8F0|79-244-15-98
50404|code|LDR             R1, =aHostlistC; "hostlist.c"|14-73
50406|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|15-75
50408|code|BLX             __assert_fail|252-247-76-239
50412|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|14-72
50414|code|MOV.W           R2, #0x8F0|79-244-15-98
50418|code|LDR             R1, =aHostlistC; "hostlist.c"|11-73
50420|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|11-75
50422|code|BLX             __assert_fail|252-247-70-239
50426|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|12-72
50428|code|MOVW            R2, #0x8EF|64-246-239-2
50432|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
50434|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|8-75
50436|code|BLX             __assert_fail|252-247-62-239
50440|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
50442|code|MOVW            R2, #0x8EE|64-246-238-2
50446|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
50448|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|4-75
50450|code|BLX             __assert_fail|252-247-56-239
50454|data|ALIGN 4|0-191
50456|data|DCD __stack_chk_guard|24-125-1-0
50460|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|220-242-0-0
50464|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
50468|data|DCD aHostlistNextRa; "hostlist_next_range"|248-239-0-0
50472|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|196-242-0-0
50476|data|DCD aIMagic57005; "i->magic == 57005"|76-242-0-0
50480|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
50484|code|PUSH            {R3-R5,LR}|56-181
50486|code|MOV             R4, R0|4-70
50488|code|CMP             R0, #0|0-40
50490|code|BEQ             loc_C5E4|83-208
50492|code|LDR             R3, [R0]|3-104
50494|code|MOVW            R2, #0xDEAD|77-246-173-98
50498|code|CMP             R3, R2|147-66
50500|code|BNE             loc_C5D6|71-209
50502|code|LDR             R2, [R0,#4]|66-104
50504|code|CMP             R2, #0|0-42
50506|code|BEQ             loc_C5C8|61-208
50508|code|LDR             R2, [R2]|18-104
50510|code|CMP             R2, R3|154-66
50512|code|BNE             loc_C5BA|51-209
50514|code|LDR             R0, [R0,#0xC]|192-104
50516|code|LDR             R1, [R4,#0x10]|33-105
50518|code|LDR             R3, [R0,#4]|67-104
50520|code|ADDS            R1, R1, R3|201-24
50522|code|BL              sub_A818|254-247-93-249
50526|code|MOV             R5, R0|5-70
50528|code|CBZ             R0, loc_C594|192-177
50530|code|LDR             R2, [R4,#8]|162-104
50532|code|MOV             R1, R0|1-70
50534|code|LDR             R0, [R4,#4]|96-104
50536|code|ADDS            R2, #1|1-50
50538|code|BL              sub_ACF0|254-247-193-251
50542|code|MOV             R0, R5|40-70
50544|code|BL              sub_A30C|253-247-204-254
50548|code|LDR             R3, [R4,#4]|99-104
50550|code|LDR             R2, [R4,#8]|162-104
50552|code|LDR             R1, [R3,#0x10]|25-105
50554|code|ADDS            R2, #1|1-50
50556|code|STR             R2, [R4,#8]|162-96
50558|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
50562|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
50566|code|STR             R1, [R4,#0x10]|33-97
50568|code|STR             R2, [R4,#0xC]|226-96
50570|code|LDR             R2, [R3,#0xC]|218-104
50572|code|MOVS            R0, #1|1-32
50574|code|SUBS            R2, #1|1-58
50576|code|STR             R2, [R3,#0xC]|218-96
50578|code|POP             {R3-R5,PC}|56-189
50580|code|LDR             R0, [R4,#0xC]|224-104
50582|code|BL              sub_A61C|254-247-65-248
50586|code|CBNZ            R0, loc_C5AE|64-185
50588|code|LDR             R3, [R4,#4]|99-104
50590|code|MOVS            R0, #1|1-32
50592|code|LDR             R2, [R4,#0x10]|34-105
50594|code|SUBS            R2, #1|1-58
50596|code|STR             R2, [R4,#0x10]|34-97
50598|code|LDR             R2, [R3,#0xC]|218-104
50600|code|SUBS            R2, #1|1-58
50602|code|STR             R2, [R3,#0xC]|218-96
50604|code|POP             {R3-R5,PC}|56-189
50606|code|LDR             R0, [R4,#4]|96-104
50608|code|LDR             R1, [R4,#8]|161-104
50610|code|BL              sub_B558|254-247-209-255
50614|code|LDR             R3, [R4,#4]|99-104
50616|code|B               loc_C58A|231-231
50618|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
50620|code|MOVW            R2, #0x906|64-246-6-18
50624|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
50626|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|14-75
50628|code|BLX             __assert_fail|252-247-222-238
50632|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|13-72
50634|code|MOVW            R2, #0x906|64-246-6-18
50638|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
50640|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|10-75
50642|code|BLX             __assert_fail|252-247-216-238
50646|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
50648|code|MOVW            R2, #0x905|64-246-5-18
50652|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
50654|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|7-75
50656|code|BLX             __assert_fail|252-247-208-238
50660|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|8-72
50662|code|MOVW            R2, #0x904|64-246-4-18
50666|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
50668|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|3-75
50670|code|BLX             __assert_fail|252-247-202-238
50674|data|ALIGN 4|0-191
50676|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|220-242-0-0
50680|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
50684|data|DCD aHostlistRemove; "hostlist_remove"|12-240-0-0
50688|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|196-242-0-0
50692|data|DCD aIMagic57005; "i->magic == 57005"|76-242-0-0
50696|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
50700|code|PUSH            {R3-R5,LR}|56-181
50702|code|MOV             R5, R0|5-70
50704|code|MOVS            R0, #4|4-32
50706|code|BLX             malloc|252-247-234-237
50710|code|MOV             R4, R0|4-70
50712|code|CBZ             R0, loc_C62A|56-177
50714|code|MOV             R0, R5|40-70
50716|code|BL              sub_C28C|255-247-54-254
50720|code|MOV             R3, R0|3-70
50722|code|STR             R0, [R4]|32-96
50724|code|CBZ             R0, loc_C62E|24-177
50726|code|BL              sub_B688|255-247-47-248
50730|code|MOV             R0, R4|32-70
50732|code|POP             {R3-R5,PC}|56-189
50734|code|MOV             R0, R4|32-70
50736|code|MOV             R4, R3|28-70
50738|code|BLX             free|252-247-104-237
50742|code|B               loc_C62A|248-231
50744|code|PUSH            {R3-R5,LR}|56-181
50746|code|MOV             R5, R0|5-70
50748|code|MOVS            R0, #4|4-32
50750|code|BLX             malloc|252-247-212-237
50754|code|MOV             R4, R0|4-70
50756|code|CBZ             R0, loc_C652|40-177
50758|code|LDR             R0, [R5]|40-104
50760|code|BL              sub_ADC8|254-247-190-251
50764|code|MOV             R3, R0|3-70
50766|code|STR             R0, [R4]|32-96
50768|code|CBZ             R0, loc_C656|8-177
50770|code|MOV             R0, R4|32-70
50772|code|POP             {R3-R5,PC}|56-189
50774|code|MOV             R0, R4|32-70
50776|code|MOV             R4, R3|28-70
50778|code|BLX             free|252-247-84-237
50782|code|B               loc_C652|248-231
50784|code|PUSH            {R4,LR}|16-181
50786|code|MOV             R4, R0|4-70
50788|code|CBZ             R0, locret_C676|56-177
50790|code|LDR             R0, [R0]|0-104
50792|code|BL              sub_BC74|255-247-4-251
50796|code|MOV             R0, R4|32-70
50798|code|POP.W           {R4,LR}|189-232-16-64
50802|code|B.W             j_free|252-247-69-189
50806|code|POP             {R4,PC}|16-189
50808|code|PUSH.W          {R4-R11,LR}|45-233-240-79
50812|code|SUB             SP, SP, #0xC|131-176
50814|code|STR             R0, [SP,#4]|1-144
50816|code|MOV             R0, R1|8-70
50818|code|BL              sub_C28C|255-247-3-254
50822|code|MOV             R8, R0|128-70
50824|code|CMP             R0, #0|0-40
50826|code|BEQ.W           loc_C7C4|0-240-155-128
50830|code|BL              sub_B688|254-247-251-255
50834|code|LDR             R3, [SP,#4]|1-155
50836|code|LDR             R5, [R3]|29-104
50838|code|CMP             R5, #0|0-45
50840|code|BEQ.W           loc_C7D6|0-240-157-128
50844|code|LDR             R2, [R5]|42-104
50846|code|MOVW            R3, #0xDEAD|77-246-173-99
50850|code|CMP             R2, R3|154-66
50852|code|BNE.W           loc_C7C8|64-240-144-128
50856|code|LDR.W           R3, [R8,#8]|216-248-8-48
50860|code|MOV.W           R9, #0|79-240-0-9
50864|code|CMP             R3, #0|0-43
50866|code|IT GT|200-191
50868|code|MOVGT           R6, R9|78-70
50870|code|BLE             loc_C7B6|126-221
50872|code|LDR.W           R10, [R5,#8]|213-248-8-160
50876|code|LDR             R3, [R5,#4]|107-104
50878|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
50882|code|CMP             R3, R10|83-69
50884|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
50888|code|BEQ             loc_C760|74-208
50890|code|MOV             R0, R11|88-70
50892|code|BL              sub_A5A0|253-247-104-255
50896|code|CMP.W           R10, #0|186-241-0-15
50900|code|MOV             R7, R0|7-70
50902|code|BLE             loc_C77E|82-221
50904|code|MOVS            R4, #0|0-36
50906|code|B               loc_C6E6|4-224
50908|code|LDR.W           R10, [R5,#8]|213-248-8-160
50912|code|ADDS            R4, #1|1-52
50914|code|CMP             R4, R10|84-69
50916|code|BGE             loc_C77E|75-218
50918|code|LDR             R3, [R5,#0x10]|43-105
50920|code|MOV             R0, R11|88-70
50922|code|MOV.W           R10, R4,LSL#2|79-234-132-10
50926|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
50930|code|BL              sub_A8A0|254-247-213-248
50934|code|CMP             R0, #0|0-40
50936|code|BGT             loc_C6DC|240-220
50938|code|LDR             R3, [R5,#0x10]|43-105
50940|code|MOV             R0, R11|88-70
50942|code|LDR.W           R1, [R3,R10]|83-248-10-16
50946|code|BL              sub_A900|254-247-253-248
50950|code|CMP             R0, #0|0-40
50952|code|MOV             R10, R0|130-70
50954|code|IT LT|184-191
50956|code|MOVLT.W         R10, #0|79-240-0-10
50960|code|BLT             loc_C71A|3-219
50962|code|MOV             R0, R5|40-70
50964|code|MOV             R1, R4|33-70
50966|code|BL              sub_B558|254-247-31-255
50970|code|MOV             R0, R5|40-70
50972|code|MOV             R1, R11|89-70
50974|code|MOV             R2, R4|34-70
50976|code|BL              sub_ACF0|254-247-230-250
50980|code|CBZ             R4, loc_C734|52-177
50982|code|MOV             R0, R5|40-70
50984|code|MOV             R1, R4|33-70
50986|code|BL              sub_B5F4|254-247-99-255
50990|code|CMP             R0, #0|0-40
50992|code|IT GT|200-191
50994|code|ADDGT           R10, R0|130-68
50996|code|LDR             R3, [R5,#0xC]|235-104
50998|code|RSB.W           R7, R10, R7|202-235-7-7
51002|code|ADDS            R3, R3, R7|219-25
51004|code|STR             R3, [R5,#0xC]|235-96
51006|code|LDR.W           R3, [R8,#8]|216-248-8-48
51010|code|ADDS            R6, #1|1-54
51012|code|ADD             R9, R7|185-68
51014|code|CMP             R3, R6|179-66
51016|code|BLE             loc_C7B6|53-221
51018|code|LDR             R3, [SP,#4]|1-155
51020|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
51024|code|LDR             R5, [R3]|29-104
51026|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
51030|code|LDR.W           R10, [R5,#8]|213-248-8-160
51034|code|LDR             R3, [R5,#4]|107-104
51036|code|CMP             R3, R10|83-69
51038|code|BNE             loc_C6CA|180-209
51040|code|MOV             R0, R5|40-70
51042|code|BL              sub_AC08|254-247-81-250
51046|code|MOV             R7, R0|7-70
51048|code|CMP             R0, #0|0-40
51050|code|BEQ             loc_C73E|232-208
51052|code|MOV             R0, R11|88-70
51054|code|LDR.W           R10, [R5,#8]|213-248-8-160
51058|code|BL              sub_A5A0|253-247-21-255
51062|code|CMP.W           R10, #0|186-241-0-15
51066|code|MOV             R7, R0|7-70
51068|code|BGT             loc_C6D8|172-220
51070|code|MOV             R0, R11|88-70
51072|code|LDR             R4, [R5,#0x10]|44-105
51074|code|BL              sub_A7E0|254-247-45-248
51078|code|ADD.W           R3, R10, #1|10-241-1-3
51082|code|LDR             R2, [R5,#0xC]|234-104
51084|code|CMP             R3, #1|1-43
51086|code|ADD             R2, R7|58-68
51088|code|STR.W           R0, [R4,R10,LSL#2]|68-248-42-0
51092|code|STR             R3, [R5,#8]|171-96
51094|code|STR             R2, [R5,#0xC]|234-96
51096|code|BLE             loc_C73E|209-221
51098|code|MOV             R0, R5|40-70
51100|code|MOV             R1, R10|81-70
51102|code|BL              sub_B5F4|254-247-41-255
51106|code|LDR.W           R3, [R8,#8]|216-248-8-48
51110|code|CMP             R0, #0|0-40
51112|code|IT GT|200-191
51114|code|RSBGT.W         R7, R0, R7|192-235-7-7
51118|code|ADDS            R6, #1|1-54
51120|code|CMP             R3, R6|179-66
51122|code|ADD             R9, R7|185-68
51124|code|BGT             loc_C74A|201-220
51126|code|MOV             R0, R8|64-70
51128|code|BL              sub_BC74|255-247-92-250
51132|code|MOV             R0, R9|72-70
51134|code|ADD             SP, SP, #0xC|3-176
51136|code|POP.W           {R4-R11,PC}|189-232-240-143
51140|code|MOV             R9, R0|129-70
51142|code|B               loc_C7BC|249-231
51144|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|6-72
51146|code|MOVW            R2, #0x985|64-246-133-18
51150|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
51152|code|LDR             R3, =aHostsetInsert; "hostset_insert"|6-75
51154|code|BLX             __assert_fail|252-247-216-237
51158|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|6-72
51160|code|MOVW            R2, #0x985|64-246-133-18
51164|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
51166|code|LDR             R3, =aHostsetInsert; "hostset_insert"|3-75
51168|code|BLX             __assert_fail|252-247-208-237
51172|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|120-243-0-0
51176|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
51180|data|DCD aHostsetInsert; "hostset_insert"|28-240-0-0
51184|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|96-243-0-0
51188|code|PUSH.W          {R3-R11,LR}|45-233-248-79
51192|code|MOV             R6, R0|6-70
51194|code|LDR             R3, [R0]|3-104
51196|code|LDR             R4, [R3]|28-104
51198|code|MOVW            R3, #0xDEAD|77-246-173-99
51202|code|CMP             R4, R3|156-66
51204|code|BNE             loc_C8A4|78-209
51206|code|MOV             R0, R1|8-70
51208|code|BL              sub_C28C|255-247-64-253
51212|code|MOV             R9, R0|129-70
51214|code|CMP.W           R9, #0|185-241-0-15
51218|code|BEQ             locret_C8A0|69-208
51220|code|BL              sub_B0C8|254-247-88-252
51224|code|MOV.W           R8, #0|79-240-0-8
51228|code|MOV             R10, R4|162-70
51230|code|MOV             R11, R0|131-70
51232|code|MOV             R0, R9|72-70
51234|code|BL              sub_AEDC|254-247-91-251
51238|code|MOV             R7, R0|7-70
51240|code|CMP             R0, #0|0-40
51242|code|BEQ             loc_C882|42-208
51244|code|LDR             R3, [R6]|51-104
51246|code|CMP             R3, #0|0-43
51248|code|BEQ             loc_C8C0|70-208
51250|code|LDR             R3, [R3]|27-104
51252|code|CMP             R3, R10|83-69
51254|code|BNE             loc_C8B2|60-209
51256|code|MOV             R0, R7|56-70
51258|code|BL              sub_A328|253-247-117-253
51262|code|LDR             R2, [R6]|50-104
51264|code|LDR             R3, [R2,#8]|147-104
51266|code|CMP             R3, #0|0-43
51268|code|MOV             R5, R0|5-70
51270|code|BLE             loc_C89C|41-221
51272|code|MOVS            R4, #0|0-36
51274|code|B               loc_C856|4-224
51276|code|LDR             R2, [R6]|50-104
51278|code|ADDS            R4, #1|1-52
51280|code|LDR             R3, [R2,#8]|147-104
51282|code|CMP             R4, R3|156-66
51284|code|BGE             loc_C898|32-218
51286|code|LDR             R3, [R2,#0x10]|19-105
51288|code|MOV             R1, R5|41-70
51290|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
51294|code|BL              sub_A4A8|253-247-35-254
51298|code|CMP             R0, #0|0-40
51300|code|BEQ             loc_C84C|242-208
51302|code|MOVS            R3, #1|1-35
51304|code|MOV             R0, R5|40-70
51306|code|ADD             R8, R3|152-68
51308|code|BL              sub_A2E4|253-247-58-253
51312|code|MOV             R0, R7|56-70
51314|code|BLX             free|252-247-72-236
51318|code|MOV             R0, R9|72-70
51320|code|BL              sub_AEDC|254-247-48-251
51324|code|MOV             R7, R0|7-70
51326|code|CMP             R0, #0|0-40
51328|code|BNE             loc_C82C|212-209
51330|code|MOV             R0, R9|72-70
51332|code|BL              sub_BC74|255-247-246-249
51336|code|RSB.W           LR, R8, R11|200-235-11-14
51340|code|RSBS.W          R0, LR, #0|222-241-0-0
51344|code|ADC.W           R0, R0, LR|64-235-14-0
51348|code|POP.W           {R3-R11,PC}|189-232-248-143
51352|code|MOV             R3, R0|3-70
51354|code|B               loc_C868|229-231
51356|code|MOVS            R3, #0|0-35
51358|code|B               loc_C868|227-231
51360|code|POP.W           {R3-R11,PC}|189-232-248-143
51364|code|LDR             R0, =aSetHlMagic5700_0; "set->hl->magic == 57005"|10-72
51366|code|MOVW            R2, #0x9A9|64-246-169-18
51370|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
51372|code|LDR             R3, =aHostsetWithin; "hostset_within"|10-75
51374|code|BLX             __assert_fail|252-247-106-237
51378|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|10-72
51380|code|MOVW            R2, #0x995|64-246-149-18
51384|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
51386|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|9-75
51388|code|BLX             __assert_fail|252-247-98-237
51392|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|8-72
51394|code|MOVW            R2, #0x995|64-246-149-18
51398|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
51400|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|5-75
51402|code|BLX             __assert_fail|252-247-92-237
51406|data|ALIGN 0x10|0-191
51408|data|DCD aSetHlMagic5700_0; "set->hl->magic == 57005"|148-243-0-0
51412|data|DCD aHostlistC; "hostlist.c"|104-240-0-0
51416|data|DCD aHostsetWithin; "hostset_within"|44-240-0-0
51420|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|120-243-0-0
51424|data|DCD aHostsetFindHos; "hostset_find_host"|60-240-0-0
51428|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|96-243-0-0
51432|code|LDR             R0, [R0]|0-104
51434|code|B.W             loc_C290|255-247-209-188
51438|data|ALIGN 0x10|0-191
51440|code|LDR             R0, [R0]|0-104
51442|code|B.W             sub_BA6C|255-247-187-184
51446|data|ALIGN 4|0-191
51448|code|LDR             R0, [R0]|0-104
51450|code|B.W             loc_BA88|255-247-197-184
51454|data|ALIGN 0x10|0-191
51456|code|LDR             R0, [R0]|0-104
51458|code|B.W             sub_AEDC|254-247-235-186
51462|data|ALIGN 4|0-191
51464|code|LDR             R0, [R0]|0-104
51466|code|B.W             loc_BCDC|255-247-231-185
51470|data|ALIGN 0x10|0-191
51472|code|LDR             R0, [R0]|0-104
51474|code|B.W             loc_BDF8|255-247-113-186
51478|data|ALIGN 4|0-191
51480|code|LDR             R0, [R0]|0-104
51482|code|B.W             sub_B0C8|254-247-213-187
51486|data|ALIGN 0x10|0-191
51488|code|LDR             R0, [R0]|0-104
51490|code|B.W             sub_B354|254-247-23-189
51494|data|ALIGN 4|0-191
51496|code|LDR             R0, [R0]|0-104
51498|code|B.W             loc_B1BC|254-247-71-188
51502|data|ALIGN 0x10|0-191
51504|code|CMP             R0, #3|3-40
51506|code|PUSH            {R4-R6,LR}|112-181
51508|code|MOV             R4, R0|4-70
51510|code|SUB             SP, SP, #8|130-176
51512|code|BLS             loc_C982|35-217
51514|code|CMP             R1, #0|0-41
51516|code|BEQ             loc_C990|40-208
51518|code|LDR             R5, [R1]|13-104
51520|code|CBZ             R5, loc_C94C|37-177
51522|code|LDR             R3, [R5]|43-104
51524|code|STR             R3, [R1]|11-96
51526|code|MOV             R0, R5|40-70
51528|code|ADD             SP, SP, #8|2-176
51530|code|POP             {R4-R6,PC}|112-189
51532|code|LSLS            R6, R0, #5|70-1
51534|code|STR             R1, [SP,#0x18+var_14]|1-145
51536|code|MOV             R0, R6; size|48-70
51538|code|BLX             malloc|252-247-74-236
51542|code|LDR             R1, [SP,#0x18+var_14]|1-153
51544|code|STR             R0, [R1]|8-96
51546|code|CBZ             R0, loc_C978|104-177
51548|code|SUBS            R6, R6, R4|54-27
51550|code|ADDS            R6, R0, R6|134-25
51552|code|CMP             R0, R6|176-66
51554|code|BCC             loc_C968|1-211
51556|code|B               loc_C970|4-224
51558|code|MOV             R0, R3|24-70
51560|code|ADDS            R3, R0, R4|3-25
51562|code|STR             R3, [R0]|3-96
51564|code|CMP             R6, R3|158-66
51566|code|BHI             loc_C966|250-216
51568|code|MOVS            R3, #0|0-35
51570|code|STR             R3, [R6]|51-96
51572|code|LDR             R3, [R1]|11-104
51574|code|CBNZ            R3, loc_C99E|147-185
51576|code|BLX             __errno_location|252-247-140-236
51580|code|MOVS            R3, #0xC|12-35
51582|code|STR             R3, [R0]|3-96
51584|code|B               loc_C946|225-231
51586|code|LDR             R0, =aSizeSizeofVoid; "size >= sizeof(void *)"|8-72
51588|code|MOVW            R2, #0x30B; line|64-242-11-50
51592|code|LDR             R1, =(aHostlistC+4); file|7-73
51594|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|8-75
51596|code|BLX             __assert_fail|252-247-250-236
51600|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|7-72
51602|code|MOV.W           R2, #0x30C; line|79-244-67-114
51606|code|LDR             R1, =(aHostlistC+4); file|4-73
51608|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|4-75
51610|code|BLX             __assert_fail|252-247-244-236
51614|code|MOV             R5, R3|29-70
51616|code|B               loc_C942|207-231
51618|data|ALIGN 4|0-191
51620|data|DCD aSizeSizeofVoid; "size >= sizeof(void *)"|60-245-0-0
51624|data|DCD aHostlistC+4; "list.c"|108-240-0-0
51628|data|DCD aListAllocAux; "list_alloc_aux"|172-243-0-0
51632|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|84-245-0-0
51636|code|PUSH            {R3-R7,LR}|248-181
51638|code|MOV             R5, R0|5-70
51640|code|MOV             R4, R1|12-70
51642|code|MOV             R6, R2|22-70
51644|code|CMP             R0, #0|0-40
51646|code|BEQ             loc_CAA0|111-208
51648|code|LDR             R2, [R0,#0x14]|66-105
51650|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
51658|code|CMP             R2, R3|154-66
51660|code|BNE             loc_CA84|90-209
51662|code|CMP             R1, #0|0-41
51664|code|BEQ             loc_CA76|81-208
51666|code|CMP             R6, #0|0-46
51668|code|BEQ             loc_CA92|93-208
51670|code|MOVS            R0, #8|8-32
51672|code|LDR             R1, =unk_17D88|53-73
51674|code|BL              sub_C930|255-247-169-255
51678|code|CMP             R0, #0|0-40
51680|code|BEQ             loc_CA4A|51-208
51682|code|STR             R6, [R0]|6-96
51684|code|LDR             R3, [R4]|35-104
51686|code|STR             R3, [R0,#4]|67-96
51688|code|CMP             R3, #0|0-43
51690|code|BEQ             loc_CA44|43-208
51692|code|STR             R0, [R4]|32-96
51694|code|LDR             R2, [R5,#0x10]|42-105
51696|code|LDR             R3, [R5,#8]|171-104
51698|code|ADDS            R2, #1|1-50
51700|code|STR             R2, [R5,#0x10]|42-97
51702|code|CBZ             R3, loc_CA40|27-179
51704|code|LDR             R7, [R3,#0x10]|31-105
51706|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
51714|code|CMP             R7, R2|151-66
51716|code|IT EQ|8-191
51718|code|ADDEQ.W         R12, R0, #4|0-241-4-12
51722|code|BEQ             loc_CA30|17-208
51724|code|B               loc_CA5A|37-224
51726|code|LDR             R2, [R3,#4]|90-104
51728|code|LDR             R5, [R0,#4]|69-104
51730|code|CMP             R2, R5|170-66
51732|code|ITT EQ|4-191
51734|code|STREQ           R0, [R3,#4]|88-96
51736|code|MOVEQ           R2, R0|2-70
51738|code|LDR             R1, [R1]|9-104
51740|code|CMP             R2, R1|138-66
51742|code|BEQ             loc_CA26|2-208
51744|code|LDR             R1, [R1,#4]|73-104
51746|code|CMP             R2, R1|138-66
51748|code|BNE             loc_CA68|32-209
51750|code|LDR             R3, [R3,#0xC]|219-104
51752|code|CBZ             R3, loc_CA40|83-177
51754|code|LDR             R2, [R3,#0x10]|26-105
51756|code|CMP             R2, R7|186-66
51758|code|BNE             loc_CA5A|20-209
51760|code|LDR             R1, [R3,#8]|153-104
51762|code|CMP             R1, R4|161-66
51764|code|BNE             loc_CA0E|235-209
51766|code|MOV             R1, R12|97-70
51768|code|STR.W           R12, [R3,#8]|195-248-8-192
51772|code|LDR             R2, [R3,#4]|90-104
51774|code|B               loc_CA1A|236-231
51776|code|MOV             R0, R6|48-70
51778|code|POP             {R3-R7,PC}|248-189
51780|code|ADDS            R3, R0, #4|3-29
51782|code|STR             R3, [R5,#4]|107-96
51784|code|B               loc_C9EC|208-231
51786|code|LDR             R0, =(aHostlistC+4); "list.c"|26-72
51788|code|MOV.W           R1, #0x29C|79-244-39-113
51792|code|LDR             R2, =aListNodeCreate; "list node create"|25-74
51794|code|POP.W           {R3-R7,LR}|189-232-248-64
51798|code|B.W             sub_A1F4|253-247-205-187
51802|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|24-72
51804|code|MOVW            R2, #0x2A3; line|64-242-163-34
51808|code|LDR             R1, =(aHostlistC+4); file|20-73
51810|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|23-75
51812|code|BLX             __assert_fail|252-247-142-236
51816|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|22-72
51818|code|MOV.W           R2, #0x2A8; line|79-244-42-114
51822|code|LDR             R1, =(aHostlistC+4); file|17-73
51824|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|19-75
51826|code|BLX             __assert_fail|252-247-136-236
51830|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|20-72
51832|code|MOVW            R2, #0x299; line|64-242-153-34
51836|code|LDR             R1, =(aHostlistC+4); file|13-73
51838|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|16-75
51840|code|BLX             __assert_fail|252-247-128-236
51844|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|17-72
51846|code|MOVW            R2, #0x297; line|64-242-151-34
51850|code|LDR             R1, =(aHostlistC+4); file|10-73
51852|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|12-75
51854|code|BLX             __assert_fail|252-247-122-236
51858|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|15-72
51860|code|MOVW            R2, #0x29A; line|64-242-154-34
51864|code|LDR             R1, =(aHostlistC+4); file|6-73
51866|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|9-75
51868|code|BLX             __assert_fail|252-247-114-236
51872|code|LDR             R0, =(aIHlVoid0+4); assertion|12-72
51874|code|MOVW            R2, #0x296; line|64-242-150-34
51878|code|LDR             R1, =(aHostlistC+4); file|3-73
51880|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|5-75
51882|code|BLX             __assert_fail|252-247-108-236
51886|data|ALIGN 0x10|0-191
51888|data|DCD unk_17D88|136-125-1-0
51892|data|DCD aHostlistC+4; "list.c"|108-240-0-0
51896|data|DCD aListNodeCreate; "list node create"|156-245-0-0
51900|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
51904|data|DCD aListNodeCreate_0; "list_node_create"|188-243-0-0
51908|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|200-245-0-0
51912|data|DCD aPpVoid0; "pp != ((void *)0)"|136-245-0-0
51916|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
51920|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
51924|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
51928|code|PUSH            {R3,LR}|8-181
51930|code|CBZ             R0, loc_CAE6|32-177
51932|code|CBZ             R1, loc_CAF4|81-177
51934|code|LDR             R3, [R1]|11-104
51936|code|STR             R3, [R0]|3-96
51938|code|STR             R0, [R1]|8-96
51940|code|POP             {R3,PC}|8-189
51942|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
51944|code|MOVW            R2, #0x329; line|64-242-41-50
51948|code|LDR             R1, =(aHostlistC+4); file|6-73
51950|code|LDR             R3, =aListFreeAux; "list_free_aux"|7-75
51952|code|BLX             __assert_fail|252-247-72-236
51956|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|6-72
51958|code|MOVW            R2, #0x32A; line|64-242-42-50
51962|code|LDR             R1, =(aHostlistC+4); file|3-73
51964|code|LDR             R3, =aListFreeAux; "list_free_aux"|3-75
51966|code|BLX             __assert_fail|252-247-66-236
51970|data|ALIGN 4|0-191
51972|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
51976|data|DCD aHostlistC+4; "list.c"|108-240-0-0
51980|data|DCD aListFreeAux; "list_free_aux"|208-243-0-0
51984|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|84-245-0-0
51988|code|PUSH            {R3-R7,LR}|248-181
51990|code|CMP             R0, #0|0-40
51992|code|BEQ             loc_CBC6|85-208
51994|code|LDR             R2, [R0,#0x14]|66-105
51996|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52004|code|CMP             R2, R3|154-66
52006|code|BNE             loc_CBB8|71-209
52008|code|CMP             R1, #0|0-41
52010|code|BEQ             loc_CBD4|83-208
52012|code|LDR             R3, [R1]|11-104
52014|code|CMP             R3, #0|0-43
52016|code|BEQ             loc_CB98|50-208
52018|code|LDR             R2, [R3,#4]|90-104
52020|code|LDR             R4, [R3]|28-104
52022|code|STR             R2, [R1]|10-96
52024|code|CMP             R2, #0|0-42
52026|code|BEQ             loc_CB94|43-208
52028|code|LDR             R5, [R0,#0x10]|5-105
52030|code|LDR             R2, [R0,#8]|130-104
52032|code|SUBS            R5, #1|1-61
52034|code|STR             R5, [R0,#0x10]|5-97
52036|code|CBZ             R2, loc_CB88|2-179
52038|code|LDR             R6, [R2,#0x10]|22-105
52040|code|MOV             R0, #0xDEADBEEF|75-246-239-96-205-246-173-96
52048|code|ADDS            R7, R3, #4|31-29
52050|code|CMP             R6, R0|134-66
52052|code|BEQ             loc_CB78|16-208
52054|code|B               loc_CB9C|33-224
52056|code|LDR             R5, [R2,#8]|149-104
52058|code|CMP             R5, R7|189-66
52060|code|ITT EQ|4-191
52062|code|STREQ           R1, [R2,#8]|145-96
52064|code|MOVEQ           R5, R1|13-70
52066|code|LDR             R5, [R5]|45-104
52068|code|CMP             R5, R0|133-66
52070|code|BEQ             loc_CB6E|2-208
52072|code|LDR             R5, [R5,#4]|109-104
52074|code|CMP             R5, R0|133-66
52076|code|BNE             loc_CBAA|29-209
52078|code|LDR             R2, [R2,#0xC]|210-104
52080|code|CBZ             R2, loc_CB88|82-177
52082|code|LDR             R0, [R2,#0x10]|16-105
52084|code|CMP             R0, R6|176-66
52086|code|BNE             loc_CB9C|17-209
52088|code|LDR             R0, [R2,#4]|80-104
52090|code|CMP             R0, R3|152-66
52092|code|BNE             loc_CB58|236-209
52094|code|LDR             R0, [R3,#4]|88-104
52096|code|MOV             R5, R1|13-70
52098|code|STR             R1, [R2,#8]|145-96
52100|code|STR             R0, [R2,#4]|80-96
52102|code|B               loc_CB62|236-231
52104|code|MOV             R0, R3|24-70
52106|code|LDR             R1, =unk_17D88|22-73
52108|code|BL              sub_CAD8|255-247-164-255
52112|code|MOV             R0, R4|32-70
52114|code|POP             {R3-R7,PC}|248-189
52116|code|STR             R1, [R0,#4]|65-96
52118|code|B               loc_CB3C|209-231
52120|code|MOV             R4, R3|28-70
52122|code|B               loc_CB90|249-231
52124|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|18-72
52126|code|MOVW            R2, #0x2C6; line|64-242-198-34
52130|code|LDR             R1, =(aHostlistC+4); file|18-73
52132|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|18-75
52134|code|BLX             __assert_fail|252-247-238-235
52138|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|18-72
52140|code|MOVW            R2, #0x2CB; line|64-242-203-34
52144|code|LDR             R1, =(aHostlistC+4); file|14-73
52146|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|15-75
52148|code|BLX             __assert_fail|252-247-230-235
52152|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|15-72
52154|code|MOV.W           R2, #0x2BC; line|79-244-47-114
52158|code|LDR             R1, =(aHostlistC+4); file|11-73
52160|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|11-75
52162|code|BLX             __assert_fail|252-247-224-235
52166|code|LDR             R0, =(aIHlVoid0+4); assertion|13-72
52168|code|MOVW            R2, #0x2BB; line|64-242-187-34
52172|code|LDR             R1, =(aHostlistC+4); file|7-73
52174|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|8-75
52176|code|BLX             __assert_fail|252-247-216-235
52180|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|10-72
52182|code|MOVW            R2, #0x2BE; line|64-242-190-34
52186|code|LDR             R1, =(aHostlistC+4); file|4-73
52188|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|4-75
52190|code|BLX             __assert_fail|252-247-210-235
52194|data|ALIGN 4|0-191
52196|data|DCD unk_17D88|136-125-1-0
52200|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
52204|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52208|data|DCD aListNodeDestro; "list_node_destroy"|224-243-0-0
52212|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|200-245-0-0
52216|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52220|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52224|data|DCD aPpVoid0; "pp != ((void *)0)"|136-245-0-0
52228|code|PUSH            {R4,LR}|16-181
52230|code|MOV             R4, R0|4-70
52232|code|LDR             R1, =unk_17D8C|11-73
52234|code|MOVS            R0, #0x18|24-32
52236|code|BL              sub_C930|255-247-144-254
52240|code|CBZ             R0, loc_CC2A|88-177
52242|code|MOVS            R3, #0|0-35
52244|code|MOVW            R2, #0xBEEF|75-246-239-98
52248|code|STR             R3, [R0]|3-96
52250|code|MOVT.W          R2, #0xDEAD|205-246-173-98
52254|code|STR             R0, [R0,#4]|64-96
52256|code|STR             R3, [R0,#8]|131-96
52258|code|STR             R4, [R0,#0xC]|196-96
52260|code|STR             R3, [R0,#0x10]|3-97
52262|code|STR             R2, [R0,#0x14]|66-97
52264|code|POP             {R4,PC}|16-189
52266|code|LDR             R0, =(aHostlistC+4); "list.c"|4-72
52268|code|MOVS            R1, #0xDE|222-33
52270|code|LDR             R2, =aListCreate; "list create"|4-74
52272|code|POP.W           {R4,LR}|189-232-16-64
52276|code|B.W             sub_A1F4|253-247-222-186
52280|data|DCD unk_17D8C|140-125-1-0
52284|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52288|data|DCD aListCreate; "list create"|0-246-0-0
52292|code|PUSH            {R3-R7,LR}|248-181
52294|code|MOV             R7, R0|7-70
52296|code|CMP             R0, #0|0-40
52298|code|BEQ             loc_CCD4|67-208
52300|code|LDR             R2, [R0,#0x14]|66-105
52302|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52310|code|CMP             R2, R3|154-66
52312|code|BNE             loc_CCC8|54-209
52314|code|LDR             R0, [R0,#8]|128-104
52316|code|CBZ             R0, loc_CC86|152-177
52318|code|LDR             R6, [R0,#0x10]|6-105
52320|code|CMP             R6, R2|150-66
52322|code|ITT EQ|4-191
52324|code|MOVEQW          R5, #0x4110|68-242-16-21
52328|code|MOVTEQ.W        R5, #0x2152|194-242-82-21
52332|code|BEQ             loc_CC78|4-208
52334|code|B               loc_CCBC|37-224
52336|code|LDR             R3, [R4,#0x10]|35-105
52338|code|CMP             R3, R6|179-66
52340|code|BNE             loc_CCBC|34-209
52342|code|MOV             R0, R4|32-70
52344|code|LDR             R4, [R0,#0xC]|196-104
52346|code|STR             R5, [R0,#0x10]|5-97
52348|code|LDR             R1, =unk_17D90|24-73
52350|code|BL              sub_CAD8|255-247-43-255
52354|code|CMP             R4, #0|0-44
52356|code|BNE             loc_CC70|244-209
52358|code|LDR             R5, [R7]|61-104
52360|code|CBNZ            R5, loc_CC8E|13-185
52362|code|B               loc_CCA6|12-224
52364|code|MOV             R5, R4|37-70
52366|code|LDM.W           R5, {R0,R4}|149-232-17-0
52370|code|CBZ             R0, loc_CC9A|16-177
52372|code|LDR             R3, [R7,#0xC]|251-104
52374|code|CBZ             R3, loc_CC9A|3-177
52376|code|BLX             R3|152-71
52378|code|MOV             R0, R5|40-70
52380|code|LDR             R1, =unk_17D88|17-73
52382|code|BL              sub_CAD8|255-247-27-255
52386|code|CMP             R4, #0|0-44
52388|code|BNE             loc_CC8C|242-209
52390|code|MOVW            R3, #0x4110|68-242-16-19
52394|code|MOV             R0, R7|56-70
52396|code|MOVT.W          R3, #0x2152|194-242-82-19
52400|code|LDR             R1, =unk_17D8C|13-73
52402|code|STR             R3, [R7,#0x14]|123-97
52404|code|POP.W           {R3-R7,LR}|189-232-248-64
52408|code|B.W             sub_CAD8|255-247-14-191
52412|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
52414|code|MOVS            R2, #0xF5|245-34
52416|code|LDR             R1, =(aHostlistC+4); "list.c"|11-73
52418|code|LDR             R3, =aListDestroy; "list_destroy"|12-75
52420|code|BLX             __assert_fail|252-247-94-235
52424|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
52426|code|MOVS            R2, #0xF2|242-34
52428|code|LDR             R1, =(aHostlistC+4); "list.c"|8-73
52430|code|LDR             R3, =aListDestroy; "list_destroy"|9-75
52432|code|BLX             __assert_fail|252-247-88-235
52436|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|9-72
52438|code|MOVS            R2, #0xF0|240-34
52440|code|LDR             R1, =(aHostlistC+4); "list.c"|5-73
52442|code|LDR             R3, =aListDestroy; "list_destroy"|6-75
52444|code|BLX             __assert_fail|252-247-82-235
52448|data|DCD unk_17D90|144-125-1-0
52452|data|DCD unk_17D88|136-125-1-0
52456|data|DCD unk_17D8C|140-125-1-0
52460|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
52464|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52468|data|DCD aListDestroy; "list_destroy"|244-243-0-0
52472|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52476|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52480|code|PUSH            {R3,LR}|8-181
52482|code|CBZ             R0, loc_CD1E|96-177
52484|code|LDR             R2, [R0,#0x14]|66-105
52486|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52494|code|CMP             R2, R3|154-66
52496|code|BNE             loc_CD2C|12-209
52498|code|LDR             R0, [R0,#0x10]|0-105
52500|code|RSBS.W          R0, R0, #1|208-241-1-0
52504|code|IT CC|56-191
52506|code|MOVCC           R0, #0|0-32
52508|code|POP             {R3,PC}|8-189
52510|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
52512|code|MOV.W           R2, #0x110|79-244-136-114
52516|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52518|code|LDR             R3, =aListIsEmpty; "list_is_empty"|7-75
52520|code|BLX             __assert_fail|252-247-44-235
52524|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
52526|code|MOV.W           R2, #0x112|79-244-137-114
52530|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52532|code|LDR             R3, =aListIsEmpty; "list_is_empty"|3-75
52534|code|BLX             __assert_fail|252-247-38-235
52538|data|ALIGN 4|0-191
52540|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52544|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52548|data|DCD aListIsEmpty; "list_is_empty"|4-244-0-0
52552|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52556|code|PUSH            {R3,LR}|8-181
52558|code|CBZ             R0, loc_CD62|64-177
52560|code|LDR             R2, [R0,#0x14]|66-105
52562|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52570|code|CMP             R2, R3|154-66
52572|code|BNE             loc_CD70|8-209
52574|code|LDR             R0, [R0,#0x10]|0-105
52576|code|POP             {R3,PC}|8-189
52578|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
52580|code|MOV.W           R2, #0x11E|79-244-143-114
52584|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52586|code|LDR             R3, =aListCount; "list_count"|7-75
52588|code|BLX             __assert_fail|252-247-10-235
52592|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
52594|code|MOV.W           R2, #0x120|79-244-144-114
52598|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52600|code|LDR             R3, =aListCount; "list_count"|3-75
52602|code|BLX             __assert_fail|252-247-4-235
52606|data|ALIGN 0x10|0-191
52608|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52612|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52616|data|DCD aListCount; "list_count"|20-244-0-0
52620|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52624|code|PUSH            {R3,LR}|8-181
52626|code|MOV             R2, R1|10-70
52628|code|CBZ             R0, loc_CDB0|96-177
52630|code|CBZ             R1, loc_CDCC|201-177
52632|code|LDR             R1, [R0,#0x14]|65-105
52634|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52642|code|CMP             R1, R3|153-66
52644|code|BNE             loc_CDBE|11-209
52646|code|LDR             R1, [R0,#4]|65-104
52648|code|POP.W           {R3,LR}|189-232-8-64
52652|code|B.W             sub_C9B4|255-247-2-190
52656|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
52658|code|MOV.W           R2, #0x12C|79-244-150-114
52662|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
52664|code|LDR             R3, =aListAppend; "list_append"|10-75
52666|code|BLX             __assert_fail|252-247-228-234
52670|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
52672|code|MOVW            R2, #0x12F|64-242-47-18
52676|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52678|code|LDR             R3, =aListAppend; "list_append"|7-75
52680|code|BLX             __assert_fail|252-247-220-234
52684|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
52686|code|MOVW            R2, #0x12D|64-242-45-18
52690|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52692|code|LDR             R3, =aListAppend; "list_append"|3-75
52694|code|BLX             __assert_fail|252-247-214-234
52698|data|ALIGN 4|0-191
52700|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52704|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52708|data|DCD aListAppend; "list_append"|32-244-0-0
52712|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52716|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
52720|code|PUSH            {R3,LR}|8-181
52722|code|MOV             R2, R1|10-70
52724|code|CBZ             R0, loc_CE10|96-177
52726|code|CBZ             R1, loc_CE2C|201-177
52728|code|LDR             R1, [R0,#0x14]|65-105
52730|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52738|code|CMP             R1, R3|153-66
52740|code|BNE             loc_CE1E|11-209
52742|code|MOV             R1, R0|1-70
52744|code|POP.W           {R3,LR}|189-232-8-64
52748|code|B.W             sub_C9B4|255-247-210-189
52752|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
52754|code|MOVW            R2, #0x13B|64-242-59-18
52758|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
52760|code|LDR             R3, =aListPrepend; "list_prepend"|10-75
52762|code|BLX             __assert_fail|252-247-180-234
52766|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
52768|code|MOV.W           R2, #0x13E|79-244-159-114
52772|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52774|code|LDR             R3, =aListPrepend; "list_prepend"|7-75
52776|code|BLX             __assert_fail|252-247-172-234
52780|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
52782|code|MOV.W           R2, #0x13C|79-244-158-114
52786|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
52788|code|LDR             R3, =aListPrepend; "list_prepend"|3-75
52790|code|BLX             __assert_fail|252-247-166-234
52794|data|ALIGN 4|0-191
52796|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52800|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52804|data|DCD aListPrepend; "list_prepend"|44-244-0-0
52808|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52812|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
52816|code|PUSH            {R4-R6,LR}|112-181
52818|code|MOV             R4, R1|12-70
52820|code|MOV             R6, R2|22-70
52822|code|CBZ             R0, loc_CE8A|192-177
52824|code|CMP             R1, #0|0-41
52826|code|BEQ             loc_CEA6|36-208
52828|code|LDR             R2, [R0,#0x14]|66-105
52830|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52838|code|CMP             R2, R3|154-66
52840|code|BNE             loc_CE98|22-209
52842|code|LDR             R5, [R0]|5-104
52844|code|CBNZ            R5, loc_CE74|21-185
52846|code|B               loc_CE86|10-224
52848|code|LDR             R5, [R5,#4]|109-104
52850|code|CBZ             R5, loc_CE82|53-177
52852|code|LDR             R0, [R5]|40-104
52854|code|MOV             R1, R6|49-70
52856|code|BLX             R4|160-71
52858|code|CMP             R0, #0|0-40
52860|code|BEQ             loc_CE70|248-208
52862|code|LDR             R0, [R5]|40-104
52864|code|POP             {R4-R6,PC}|112-189
52866|code|MOV             R0, R5|40-70
52868|code|POP             {R4-R6,PC}|112-189
52870|code|MOV             R0, R5|40-70
52872|code|POP             {R4-R6,PC}|112-189
52874|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
52876|code|MOVW            R2, #0x14B|64-242-75-18
52880|code|LDR             R1, =(aHostlistC+4); "list.c"|9-73
52882|code|LDR             R3, =aListFindFirst; "list_find_first"|10-75
52884|code|BLX             __assert_fail|252-247-118-234
52888|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|9-72
52890|code|MOV.W           R2, #0x14E|79-244-167-114
52894|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
52896|code|LDR             R3, =aListFindFirst; "list_find_first"|6-75
52898|code|BLX             __assert_fail|252-247-112-234
52902|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
52904|code|MOV.W           R2, #0x14C|79-244-166-114
52908|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
52910|code|LDR             R3, =aListFindFirst; "list_find_first"|3-75
52912|code|BLX             __assert_fail|252-247-104-234
52916|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
52920|data|DCD aHostlistC+4; "list.c"|108-240-0-0
52924|data|DCD aListFindFirst; "list_find_first"|60-244-0-0
52928|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
52932|data|DCD aFVoid0; "f != ((void *)0)"|12-246-0-0
52936|code|PUSH.W          {R4-R8,LR}|45-233-240-65
52940|code|MOV             R5, R0|5-70
52942|code|MOV             R4, R1|12-70
52944|code|MOV             R7, R2|23-70
52946|code|CMP             R0, #0|0-40
52948|code|BEQ             loc_CF24|38-208
52950|code|CMP             R1, #0|0-41
52952|code|BEQ             loc_CF40|50-208
52954|code|LDR             R2, [R0,#0x14]|66-105
52956|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52964|code|CMP             R2, R3|154-66
52966|code|ITT EQ|4-191
52968|code|MOVEQ           R6, R0|6-70
52970|code|MOVEQ.W         R8, #0|79-240-0-8
52974|code|BNE             loc_CF32|32-209
52976|code|LDR             R3, [R6]|51-104
52978|code|CBZ             R3, loc_CF06|67-177
52980|code|LDR             R0, [R3]|24-104
52982|code|MOV             R1, R7|57-70
52984|code|BLX             R4|160-71
52986|code|CBNZ            R0, loc_CF0C|56-185
52988|code|LDR             R6, [R6]|54-104
52990|code|ADDS            R6, #4|4-54
52992|code|LDR             R3, [R6]|51-104
52994|code|CMP             R3, #0|0-43
52996|code|BNE             loc_CEF4|246-209
52998|code|MOV             R0, R8|64-70
53000|code|POP.W           {R4-R8,PC}|189-232-240-129
53004|code|MOV             R0, R5|40-70
53006|code|MOV             R1, R6|49-70
53008|code|BL              sub_CB14|255-247-0-254
53012|code|CMP             R0, #0|0-40
53014|code|BEQ             loc_CEF0|235-208
53016|code|LDR             R3, [R5,#0xC]|235-104
53018|code|CBZ             R3, loc_CF1E|3-177
53020|code|BLX             R3|152-71
53022|code|ADD.W           R8, R8, #1|8-241-1-8
53026|code|B               loc_CEF0|229-231
53028|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
53030|code|MOVW            R2, #0x161|64-242-97-18
53034|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
53036|code|LDR             R3, =aListDeleteAll; "list_delete_all"|10-75
53038|code|BLX             __assert_fail|252-247-42-234
53042|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
53044|code|MOV.W           R2, #0x164|79-244-178-114
53048|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53050|code|LDR             R3, =aListDeleteAll; "list_delete_all"|7-75
53052|code|BLX             __assert_fail|252-247-34-234
53056|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
53058|code|MOV.W           R2, #0x162|79-244-177-114
53062|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53064|code|LDR             R3, =aListDeleteAll; "list_delete_all"|3-75
53066|code|BLX             __assert_fail|252-247-28-234
53070|data|ALIGN 0x10|0-191
53072|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53076|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53080|data|DCD aListDeleteAll; "list_delete_all"|76-244-0-0
53084|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53088|data|DCD aFVoid0; "f != ((void *)0)"|12-246-0-0
53092|code|PUSH            {R3-R7,LR}|248-181
53094|code|MOV             R4, R1|12-70
53096|code|MOV             R7, R2|23-70
53098|code|CBZ             R0, loc_CFB8|40-179
53100|code|CBZ             R1, loc_CFAA|233-177
53102|code|LDR             R2, [R0,#0x14]|66-105
53104|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53112|code|CMP             R2, R3|154-66
53114|code|BNE             loc_CF9C|15-209
53116|code|LDR             R5, [R0]|5-104
53118|code|MOV             R6, R5|46-70
53120|code|CBZ             R5, loc_CF98|85-177
53122|code|MOVS            R6, #0|0-38
53124|code|B               loc_CF8A|1-224
53126|code|LDR             R5, [R5,#4]|109-104
53128|code|CBZ             R5, loc_CF98|53-177
53130|code|LDR             R0, [R5]|40-104
53132|code|MOV             R1, R7|57-70
53134|code|BLX             R4|160-71
53136|code|ADDS            R6, #1|1-54
53138|code|CMP             R0, #0|0-40
53140|code|BGE             loc_CF86|247-218
53142|code|NEGS            R6, R6|118-66
53144|code|MOV             R0, R6|48-70
53146|code|POP             {R3-R7,PC}|248-189
53148|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
53150|code|MOV.W           R2, #0x180|79-244-192-114
53154|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
53156|code|LDR             R3, =aListForEach; "list_for_each"|10-75
53158|code|BLX             __assert_fail|252-247-238-233
53162|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|10-72
53164|code|MOV.W           R2, #0x17E|79-244-191-114
53168|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53170|code|LDR             R3, =aListForEach; "list_for_each"|7-75
53172|code|BLX             __assert_fail|252-247-230-233
53176|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
53178|code|MOVW            R2, #0x17D|64-242-125-18
53182|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53184|code|LDR             R3, =aListForEach; "list_for_each"|3-75
53186|code|BLX             __assert_fail|252-247-224-233
53190|data|ALIGN 4|0-191
53192|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53196|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53200|data|DCD aListForEach; "list_for_each"|92-244-0-0
53204|data|DCD aFVoid0; "f != ((void *)0)"|12-246-0-0
53208|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53212|code|PUSH.W          {R4-R8,LR}|45-233-240-65
53216|code|MOV             R8, R0|128-70
53218|code|MOV             R6, R1|14-70
53220|code|CMP             R0, #0|0-40
53222|code|BEQ             loc_D090|83-208
53224|code|CMP             R1, #0|0-41
53226|code|BEQ             loc_D0AC|95-208
53228|code|LDR             R2, [R0,#0x14]|66-105
53230|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53238|code|CMP             R2, R3|154-66
53240|code|BNE             loc_D09E|81-209
53242|code|LDR             R3, [R0,#0x10]|3-105
53244|code|CMP             R3, #1|1-43
53246|code|BLE             locret_D054|41-221
53248|code|LDR             R3, [R0]|3-104
53250|code|MOV             R7, R0|7-70
53252|code|ADDS            R5, R3, #4|29-29
53254|code|LDR             R3, [R3,#4]|91-104
53256|code|CBZ             R3, loc_D026|107-177
53258|code|LDR             R2, [R7]|58-104
53260|code|LDR             R0, [R3]|24-104
53262|code|LDR             R1, [R2]|17-104
53264|code|BLX             R6|176-71
53266|code|CMP             R0, #0|0-40
53268|code|IT LT|184-191
53270|code|MOVLT           R4, R8|68-70
53272|code|BLT             loc_D05C|32-219
53274|code|LDR             R3, [R5]|43-104
53276|code|MOV             R7, R5|47-70
53278|code|ADDS            R5, R3, #4|29-29
53280|code|LDR             R3, [R3,#4]|91-104
53282|code|CMP             R3, #0|0-43
53284|code|BNE             loc_D00A|241-209
53286|code|LDR.W           R3, [R8,#8]|216-248-8-48
53290|code|STR.W           R5, [R8,#4]|200-248-4-80
53294|code|CBZ             R3, locret_D054|139-177
53296|code|LDR             R0, [R3,#0x10]|24-105
53298|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
53306|code|CMP             R0, R2|144-66
53308|code|BEQ             loc_D046|3-208
53310|code|B               loc_D082|32-224
53312|code|LDR             R2, [R3,#0x10]|26-105
53314|code|CMP             R2, R0|130-66
53316|code|BNE             loc_D082|29-209
53318|code|LDR             R2, [R3]|26-104
53320|code|LDR             R1, [R2]|17-104
53322|code|STR             R2, [R3,#8]|154-96
53324|code|STR             R1, [R3,#4]|89-96
53326|code|LDR             R3, [R3,#0xC]|219-104
53328|code|CMP             R3, #0|0-43
53330|code|BNE             loc_D040|245-209
53332|code|POP.W           {R4-R8,PC}|189-232-240-129
53336|code|LDR             R4, [R4]|36-104
53338|code|ADDS            R4, #4|4-52
53340|code|LDR             R2, [R5]|42-104
53342|code|LDR             R3, [R4]|35-104
53344|code|LDR             R0, [R2]|16-104
53346|code|LDR             R1, [R3]|25-104
53348|code|BLX             R6|176-71
53350|code|CMP             R0, #0|0-40
53352|code|BGE             loc_D058|246-218
53354|code|LDR             R2, [R5]|42-104
53356|code|CMP             R7, R4|167-66
53358|code|LDR             R1, [R4]|33-104
53360|code|LDR             R3, [R2,#4]|83-104
53362|code|STR             R1, [R2,#4]|81-96
53364|code|LDR             R2, [R5]|42-104
53366|code|STR             R2, [R4]|34-96
53368|code|STR             R3, [R5]|43-96
53370|code|BNE             loc_D008|197-209
53372|code|LDR             R7, [R7]|63-104
53374|code|ADDS            R7, #4|4-55
53376|code|B               loc_D008|194-231
53378|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|14-72
53380|code|MOV.W           R2, #0x1B0|79-244-216-114
53384|code|LDR             R1, =(aHostlistC+4); "list.c"|13-73
53386|code|LDR             R3, =aListSort; "list_sort"|14-75
53388|code|BLX             __assert_fail|252-247-122-233
53392|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|13-72
53394|code|MOVW            R2, #0x195|64-242-149-18
53398|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
53400|code|LDR             R3, =aListSort; "list_sort"|10-75
53402|code|BLX             __assert_fail|252-247-116-233
53406|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
53408|code|MOV.W           R2, #0x198|79-244-204-114
53412|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53414|code|LDR             R3, =aListSort; "list_sort"|7-75
53416|code|BLX             __assert_fail|252-247-108-233
53420|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|8-72
53422|code|MOV.W           R2, #0x196|79-244-203-114
53426|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53428|code|LDR             R3, =aListSort; "list_sort"|3-75
53430|code|BLX             __assert_fail|252-247-102-233
53434|data|ALIGN 4|0-191
53436|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
53440|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53444|data|DCD aListSort; "list_sort"|108-244-0-0
53448|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53452|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53456|data|DCD aFVoid0; "f != ((void *)0)"|12-246-0-0
53460|code|PUSH            {R3,LR}|8-181
53462|code|MOV             R2, R1|10-70
53464|code|CBZ             R0, loc_D0F4|96-177
53466|code|CBZ             R1, loc_D110|201-177
53468|code|LDR             R1, [R0,#0x14]|65-105
53470|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53478|code|CMP             R1, R3|153-66
53480|code|BNE             loc_D102|11-209
53482|code|MOV             R1, R0|1-70
53484|code|POP.W           {R3,LR}|189-232-8-64
53488|code|B.W             sub_C9B4|255-247-96-188
53492|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
53494|code|MOVW            R2, #0x1BF|64-242-191-18
53498|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
53500|code|LDR             R3, =aListPush; "list_push"|10-75
53502|code|BLX             __assert_fail|252-247-66-233
53506|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
53508|code|MOV.W           R2, #0x1C2|79-244-225-114
53512|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53514|code|LDR             R3, =aListPush; "list_push"|7-75
53516|code|BLX             __assert_fail|252-247-58-233
53520|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
53522|code|MOV.W           R2, #0x1C0|79-244-224-114
53526|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53528|code|LDR             R3, =aListPush; "list_push"|3-75
53530|code|BLX             __assert_fail|252-247-52-233
53534|data|ALIGN 0x10|0-191
53536|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53540|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53544|data|DCD aListPush; "list_push"|120-244-0-0
53548|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53552|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
53556|code|PUSH            {R3,LR}|8-181
53558|code|CBZ             R0, loc_D150|88-177
53560|code|LDR             R2, [R0,#0x14]|66-105
53562|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53570|code|CMP             R2, R3|154-66
53572|code|BNE             loc_D15E|11-209
53574|code|MOV             R1, R0|1-70
53576|code|POP.W           {R3,LR}|189-232-8-64
53580|code|B.W             sub_CB14|255-247-226-188
53584|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|6-72
53586|code|MOV.W           R2, #0x1CE|79-244-231-114
53590|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53592|code|LDR             R3, =aListPop; "list_pop"|6-75
53594|code|BLX             __assert_fail|252-247-20-233
53598|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
53600|code|MOV.W           R2, #0x1D0|79-244-232-114
53604|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
53606|code|LDR             R3, =aListPop; "list_pop"|3-75
53608|code|BLX             __assert_fail|252-247-12-233
53612|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53616|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53620|data|DCD aListPop; "list_pop"|132-244-0-0
53624|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53628|code|PUSH            {R3,LR}|8-181
53630|code|CBZ             R0, loc_D196|80-177
53632|code|LDR             R2, [R0,#0x14]|66-105
53634|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53642|code|CMP             R2, R3|154-66
53644|code|BNE             loc_D1A4|10-209
53646|code|LDR             R0, [R0]|0-104
53648|code|CBZ             R0, locret_D194|0-177
53650|code|LDR             R0, [R0]|0-104
53652|code|POP             {R3,PC}|8-189
53654|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
53656|code|MOV.W           R2, #0x1DC|79-244-238-114
53660|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53662|code|LDR             R3, =aListPeek; "list_peek"|7-75
53664|code|BLX             __assert_fail|252-247-240-232
53668|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
53670|code|MOV.W           R2, #0x1DE|79-244-239-114
53674|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53676|code|LDR             R3, =aListPeek; "list_peek"|3-75
53678|code|BLX             __assert_fail|252-247-234-232
53682|data|ALIGN 4|0-191
53684|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53688|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53692|data|DCD aListPeek; "list_peek"|144-244-0-0
53696|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53700|code|PUSH            {R3,LR}|8-181
53702|code|MOV             R2, R1|10-70
53704|code|CBZ             R0, loc_D1E4|96-177
53706|code|CBZ             R1, loc_D200|201-177
53708|code|LDR             R1, [R0,#0x14]|65-105
53710|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53718|code|CMP             R1, R3|153-66
53720|code|BNE             loc_D1F2|11-209
53722|code|LDR             R1, [R0,#4]|65-104
53724|code|POP.W           {R3,LR}|189-232-8-64
53728|code|B.W             sub_C9B4|255-247-232-187
53732|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
53734|code|MOV.W           R2, #0x1EA|79-244-245-114
53738|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
53740|code|LDR             R3, =aListEnqueue; "list_enqueue"|10-75
53742|code|BLX             __assert_fail|252-247-202-232
53746|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
53748|code|MOVW            R2, #0x1ED|64-242-237-18
53752|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53754|code|LDR             R3, =aListEnqueue; "list_enqueue"|7-75
53756|code|BLX             __assert_fail|252-247-194-232
53760|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
53762|code|MOVW            R2, #0x1EB|64-242-235-18
53766|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53768|code|LDR             R3, =aListEnqueue; "list_enqueue"|3-75
53770|code|BLX             __assert_fail|252-247-188-232
53774|data|ALIGN 0x10|0-191
53776|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53780|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53784|data|DCD aListEnqueue; "list_enqueue"|156-244-0-0
53788|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53792|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
53796|code|PUSH            {R3,LR}|8-181
53798|code|CBZ             R0, loc_D240|88-177
53800|code|LDR             R2, [R0,#0x14]|66-105
53802|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53810|code|CMP             R2, R3|154-66
53812|code|BNE             loc_D24E|11-209
53814|code|MOV             R1, R0|1-70
53816|code|POP.W           {R3,LR}|189-232-8-64
53820|code|B.W             sub_CB14|255-247-106-188
53824|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|6-72
53826|code|MOVW            R2, #0x1F9|64-242-249-18
53830|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53832|code|LDR             R3, =aListDequeue; "list_dequeue"|6-75
53834|code|BLX             __assert_fail|252-247-156-232
53838|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
53840|code|MOVW            R2, #0x1FB|64-242-251-18
53844|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
53846|code|LDR             R3, =aListDequeue; "list_dequeue"|3-75
53848|code|BLX             __assert_fail|252-247-148-232
53852|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53856|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53860|data|DCD aListDequeue; "list_dequeue"|172-244-0-0
53864|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53868|code|PUSH            {R4,LR}|16-181
53870|code|MOV             R4, R0|4-70
53872|code|CMP             R0, #0|0-40
53874|code|BEQ             loc_D2AE|28-208
53876|code|MOVS            R0, #0x14|20-32
53878|code|LDR             R1, =unk_17D90|21-73
53880|code|BL              sub_C930|255-247-90-251
53884|code|CBZ             R0, loc_D29E|120-177
53886|code|LDR             R3, [R4,#0x14]|99-105
53888|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
53896|code|STR             R4, [R0]|4-96
53898|code|CMP             R3, R2|147-66
53900|code|BNE             loc_D2BC|22-209
53902|code|LDR             R2, [R4,#8]|162-104
53904|code|LDR             R1, [R4]|33-104
53906|code|STR             R4, [R0,#8]|132-96
53908|code|STR             R2, [R0,#0xC]|194-96
53910|code|STR             R1, [R0,#4]|65-96
53912|code|STR             R0, [R4,#8]|160-96
53914|code|STR             R3, [R0,#0x10]|3-97
53916|code|POP             {R4,PC}|16-189
53918|code|LDR             R0, =(aHostlistC+4); "list.c"|12-72
53920|code|MOVW            R1, #0x209|64-242-9-33
53924|code|LDR             R2, =aListIteratorCr; "list iterator create"|11-74
53926|code|POP.W           {R4,LR}|189-232-16-64
53930|code|B.W             sub_A1F4|252-247-163-191
53934|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
53936|code|MOVW            R2, #0x207|64-242-7-34
53940|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
53942|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|9-75
53944|code|BLX             __assert_fail|252-247-100-232
53948|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-72
53950|code|MOV.W           R2, #0x20C|79-244-3-114
53954|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
53956|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|5-75
53958|code|BLX             __assert_fail|252-247-94-232
53962|data|ALIGN 4|0-191
53964|data|DCD unk_17D90|144-125-1-0
53968|data|DCD aHostlistC+4; "list.c"|108-240-0-0
53972|data|DCD aListIteratorCr; "list iterator create"|32-246-0-0
53976|data|DCD aIHlVoid0+4; "l != ((void *)0)"|200-242-0-0
53980|data|DCD aListIteratorCr_0; "list_iterator_create"|188-244-0-0
53984|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|112-245-0-0
53988|code|PUSH            {R3,LR}|8-181
53990|code|CBZ             R0, loc_D306|112-177
53992|code|LDR             R2, [R0,#0x10]|2-105
53994|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54002|code|CMP             R2, R3|154-66
54004|code|BNE             loc_D322|21-209
54006|code|LDR             R3, [R0]|3-104
54008|code|LDR             R1, [R3,#0x14]|89-105
54010|code|CMP             R1, R2|145-66
54012|code|BNE             loc_D314|10-209
54014|code|LDR             R2, [R3]|26-104
54016|code|STR             R3, [R0,#8]|131-96
54018|code|STR             R2, [R0,#4]|66-96
54020|code|POP             {R3,PC}|8-189
54022|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
54024|code|MOVW            R2, #0x21A|64-242-26-34
54028|code|LDR             R1, =(aHostlistC+4); "list.c"|9-73
54030|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|10-75
54032|code|BLX             __assert_fail|252-247-56-232
54036|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|9-72
54038|code|MOVW            R2, #0x21D|64-242-29-34
54042|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
54044|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|6-75
54046|code|BLX             __assert_fail|252-247-50-232
54050|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|7-72
54052|code|MOVW            R2, #0x21B|64-242-27-34
54056|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
54058|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|3-75
54060|code|BLX             __assert_fail|252-247-42-232
54064|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54068|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54072|data|DCD aListIteratorRe; "list_iterator_reset"|212-244-0-0
54076|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|56-246-0-0
54080|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54084|code|PUSH            {R4,LR}|16-181
54086|code|CMP             R0, #0|0-40
54088|code|BEQ             loc_D3CA|63-208
54090|code|LDR             R3, [R0,#0x10]|3-105
54092|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
54100|code|CMP             R3, R2|147-66
54102|code|BNE             loc_D3BC|49-209
54104|code|LDR             R1, [R0]|1-104
54106|code|LDR             R2, [R1,#0x14]|74-105
54108|code|CMP             R2, R3|154-66
54110|code|BNE             loc_D3AE|38-209
54112|code|LDR             R3, [R1,#8]|139-104
54114|code|CBZ             R3, loc_D386|131-177
54116|code|LDR             R4, [R3,#0x10]|28-105
54118|code|CMP             R4, R2|148-66
54120|code|BNE             loc_D3A0|26-209
54122|code|ADDS            R1, #8|8-49
54124|code|CMP             R0, R3|152-66
54126|code|BNE             loc_D37C|5-209
54128|code|B               loc_D39A|19-224
54130|code|LDR             R2, [R3,#0x10]|26-105
54132|code|CMP             R2, R4|162-66
54134|code|BNE             loc_D3A0|19-209
54136|code|CMP             R0, R3|152-66
54138|code|BEQ             loc_D39A|14-208
54140|code|ADD.W           R1, R3, #0xC|3-241-12-1
54144|code|LDR             R3, [R3,#0xC]|219-104
54146|code|CMP             R3, #0|0-43
54148|code|BNE             loc_D372|245-209
54150|code|MOVW            R3, #0x4110|68-242-16-19
54154|code|LDR             R1, =unk_17D90|19-73
54156|code|MOVT.W          R3, #0x2152|194-242-82-19
54160|code|STR             R3, [R0,#0x10]|3-97
54162|code|POP.W           {R4,LR}|189-232-16-64
54166|code|B.W             sub_CAD8|255-247-159-187
54170|code|LDR             R3, [R0,#0xC]|195-104
54172|code|STR             R3, [R1]|11-96
54174|code|B               loc_D386|242-231
54176|code|LDR             R0, =aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|14-72
54178|code|MOVW            R2, #0x22F|64-242-47-34
54182|code|LDR             R1, =(aHostlistC+4); "list.c"|14-73
54184|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|14-75
54186|code|BLX             __assert_fail|251-247-236-239
54190|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|14-72
54192|code|MOVW            R2, #0x22D|64-242-45-34
54196|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
54198|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|11-75
54200|code|BLX             __assert_fail|251-247-228-239
54204|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
54206|code|MOVW            R2, #0x22B|64-242-43-34
54210|code|LDR             R1, =(aHostlistC+4); "list.c"|7-73
54212|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|7-75
54214|code|BLX             __assert_fail|251-247-222-239
54218|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
54220|code|MOVW            R2, #0x22A|64-242-42-34
54224|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
54226|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|4-75
54228|code|BLX             __assert_fail|251-247-214-239
54232|data|DCD unk_17D90|144-125-1-0
54236|data|DCD aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|88-246-0-0
54240|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54244|data|DCD aListIteratorDe; "list_iterator_destroy"|232-244-0-0
54248|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|56-246-0-0
54252|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54256|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54260|code|PUSH            {R3,LR}|8-181
54262|code|CMP             R0, #0|0-40
54264|code|BEQ             loc_D44A|39-208
54266|code|LDR             R3, [R0,#0x10]|3-105
54268|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
54276|code|CMP             R3, R2|147-66
54278|code|BNE             loc_D43C|25-209
54280|code|LDR             R2, [R0]|2-104
54282|code|LDR             R2, [R2,#0x14]|82-105
54284|code|CMP             R2, R3|154-66
54286|code|BNE             loc_D42E|14-209
54288|code|LDR             R3, [R0,#4]|67-104
54290|code|CBZ             R3, loc_D418|11-177
54292|code|LDR             R2, [R3,#4]|90-104
54294|code|STR             R2, [R0,#4]|66-96
54296|code|LDR             R2, [R0,#8]|130-104
54298|code|LDR             R2, [R2]|18-104
54300|code|CMP             R2, R3|154-66
54302|code|BEQ             loc_D424|1-208
54304|code|ADDS            R2, #4|4-50
54306|code|STR             R2, [R0,#8]|130-96
54308|code|CBZ             R3, loc_D42A|11-177
54310|code|LDR             R0, [R3]|24-104
54312|code|POP             {R3,PC}|8-189
54314|code|MOV             R0, R3|24-70
54316|code|POP             {R3,PC}|8-189
54318|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
54320|code|MOV.W           R2, #0x244; line|79-244-17-114
54324|code|LDR             R1, =(aHostlistC+4); file|9-73
54326|code|LDR             R3, =aListNext; "list_next"|10-75
54328|code|BLX             __assert_fail|251-247-164-239
54332|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|9-72
54334|code|MOVW            R2, #0x242; line|64-242-66-34
54338|code|LDR             R1, =(aHostlistC+4); file|6-73
54340|code|LDR             R3, =aListNext; "list_next"|6-75
54342|code|BLX             __assert_fail|251-247-158-239
54346|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
54348|code|MOVW            R2, #0x241; line|64-242-65-34
54352|code|LDR             R1, =(aHostlistC+4); file|2-73
54354|code|LDR             R3, =aListNext; "list_next"|3-75
54356|code|BLX             __assert_fail|251-247-150-239
54360|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|56-246-0-0
54364|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54368|data|DCD aListNext; "list_next"|0-245-0-0
54372|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54376|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54380|code|PUSH            {R4,LR}|16-181
54382|code|MOV             R2, R1|10-70
54384|code|CBZ             R0, loc_D498|144-177
54386|code|CMP             R1, #0|0-41
54388|code|BEQ             loc_D4C2|37-208
54390|code|LDR             R1, [R0,#0x10]|1-105
54392|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54400|code|CMP             R1, R3|153-66
54402|code|BNE             loc_D4B4|23-209
54404|code|LDR             R3, [R0]|3-104
54406|code|LDR             R4, [R3,#0x14]|92-105
54408|code|CMP             R4, R1|140-66
54410|code|BNE             loc_D4A6|12-209
54412|code|LDR             R1, [R0,#8]|129-104
54414|code|MOV             R0, R3|24-70
54416|code|POP.W           {R4,LR}|189-232-16-64
54420|code|B.W             sub_C9B4|255-247-142-186
54424|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|13-72
54426|code|MOVW            R2, #0x253|64-242-83-34
54430|code|LDR             R1, =(aHostlistC+4); "list.c"|13-73
54432|code|LDR             R3, =aListInsert; "list_insert"|13-75
54434|code|BLX             __assert_fail|251-247-112-239
54438|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|13-72
54440|code|MOVW            R2, #0x257|64-242-87-34
54444|code|LDR             R1, =(aHostlistC+4); "list.c"|9-73
54446|code|LDR             R3, =aListInsert; "list_insert"|10-75
54448|code|BLX             __assert_fail|251-247-104-239
54452|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
54454|code|MOVW            R2, #0x255|64-242-85-34
54458|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
54460|code|LDR             R3, =aListInsert; "list_insert"|6-75
54462|code|BLX             __assert_fail|251-247-98-239
54466|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|8-72
54468|code|MOV.W           R2, #0x254|79-244-21-114
54472|code|LDR             R1, =(aHostlistC+4); "list.c"|2-73
54474|code|LDR             R3, =aListInsert; "list_insert"|3-75
54476|code|BLX             __assert_fail|251-247-90-239
54480|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54484|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54488|data|DCD aListInsert; "list_insert"|12-245-0-0
54492|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|56-246-0-0
54496|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54500|data|DCD aXVoid0; "x != ((void *)0)"|120-249-0-0
54504|code|PUSH            {R3-R7,LR}|248-181
54506|code|MOV             R4, R0|4-70
54508|code|MOV             R5, R1|13-70
54510|code|MOV             R7, R2|23-70
54512|code|CBZ             R0, loc_D518|144-177
54514|code|CBZ             R1, loc_D534|249-177
54516|code|LDR             R2, [R0,#0x10]|2-105
54518|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54526|code|CMP             R2, R3|154-66
54528|code|BNE             loc_D526|17-209
54530|code|MOV             R0, R4|32-70
54532|code|BL              sub_D3F4|255-247-118-255
54536|code|MOV             R6, R0|6-70
54538|code|CBZ             R0, loc_D514|24-177
54540|code|MOV             R1, R7|57-70
54542|code|BLX             R5|168-71
54544|code|CMP             R0, #0|0-40
54546|code|BEQ             loc_D502|246-208
54548|code|MOV             R0, R6|48-70
54550|code|POP             {R3-R7,PC}|248-189
54552|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
54554|code|MOVW            R2, #0x263|64-242-99-34
54558|code|LDR             R1, =(aHostlistC+4); "list.c"|10-73
54560|code|LDR             R3, =aListFind; "list_find"|10-75
54562|code|BLX             __assert_fail|251-247-48-239
54566|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
54568|code|MOVW            R2, #0x265|64-242-101-34
54572|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
54574|code|LDR             R3, =aListFind; "list_find"|7-75
54576|code|BLX             __assert_fail|251-247-40-239
54580|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
54582|code|MOV.W           R2, #0x264|79-244-25-114
54586|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
54588|code|LDR             R3, =aListFind; "list_find"|3-75
54590|code|BLX             __assert_fail|251-247-34-239
54594|data|ALIGN 4|0-191
54596|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54600|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54604|data|DCD aListFind; "list_find"|24-245-0-0
54608|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54612|data|DCD aFVoid0; "f != ((void *)0)"|12-246-0-0
54616|code|PUSH            {R3,LR}|8-181
54618|code|CMP             R0, #0|0-40
54620|code|BEQ             loc_D5A8|36-208
54622|code|LDR             R3, [R0,#0x10]|3-105
54624|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
54632|code|CMP             R3, R2|147-66
54634|code|BNE             loc_D59A|22-209
54636|code|LDR             R2, [R0]|2-104
54638|code|LDR             R1, [R2,#0x14]|81-105
54640|code|CMP             R1, R3|153-66
54642|code|BNE             loc_D58C|11-209
54644|code|LDR             R1, [R0,#8]|129-104
54646|code|LDR             R3, [R0,#4]|67-104
54648|code|LDR             R0, [R1]|8-104
54650|code|CMP             R0, R3|152-66
54652|code|BEQ             loc_D588|4-208
54654|code|MOV             R0, R2|16-70
54656|code|POP.W           {R3,LR}|189-232-8-64
54660|code|B.W             sub_CB14|255-247-198-186
54664|code|MOVS            R0, #0|0-32
54666|code|POP             {R3,PC}|8-189
54668|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
54670|code|MOVW            R2, #0x273; line|64-242-115-34
54674|code|LDR             R1, =(aHostlistC+4); file|10-73
54676|code|LDR             R3, =aListRemove; "list_remove"|10-75
54678|code|BLX             __assert_fail|251-247-246-238
54682|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
54684|code|MOVW            R2, #0x271; line|64-242-113-34
54688|code|LDR             R1, =(aHostlistC+4); file|6-73
54690|code|LDR             R3, =aListRemove; "list_remove"|7-75
54692|code|BLX             __assert_fail|251-247-238-238
54696|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
54698|code|MOV.W           R2, #0x270; line|79-244-28-114
54702|code|LDR             R1, =(aHostlistC+4); file|3-73
54704|code|LDR             R3, =aListRemove; "list_remove"|3-75
54706|code|BLX             __assert_fail|251-247-232-238
54710|data|ALIGN 4|0-191
54712|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|56-246-0-0
54716|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54720|data|DCD aListRemove; "list_remove"|36-245-0-0
54724|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54728|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54732|code|PUSH            {R4,LR}|16-181
54734|code|MOV             R4, R0|4-70
54736|code|CBZ             R0, loc_D5F6|136-177
54738|code|LDR             R2, [R0,#0x10]|2-105
54740|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54748|code|CMP             R2, R3|154-66
54750|code|BNE             loc_D604|17-209
54752|code|BL              sub_D558|255-247-186-255
54756|code|CBZ             R0, locret_D5F4|48-177
54758|code|LDR             R3, [R4]|35-104
54760|code|LDR             R3, [R3,#0xC]|219-104
54762|code|CBZ             R3, loc_D5F2|19-177
54764|code|BLX             R3|152-71
54766|code|MOVS            R0, #1|1-32
54768|code|POP             {R4,PC}|16-189
54770|code|MOVS            R0, #1|1-32
54772|code|POP             {R4,PC}|16-189
54774|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
54776|code|MOV.W           R2, #0x280|79-244-32-114
54780|code|LDR             R1, =(aHostlistC+4); "list.c"|6-73
54782|code|LDR             R3, =aListDelete; "list_delete"|7-75
54784|code|BLX             __assert_fail|251-247-192-238
54788|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|6-72
54790|code|MOVW            R2, #0x281|64-242-129-34
54794|code|LDR             R1, =(aHostlistC+4); "list.c"|3-73
54796|code|LDR             R3, =aListDelete; "list_delete"|3-75
54798|code|BLX             __assert_fail|251-247-186-238
54802|data|ALIGN 4|0-191
54804|data|DCD aIVoid0; "i != ((void *)0)"|56-242-0-0
54808|data|DCD aHostlistC+4; "list.c"|108-240-0-0
54812|data|DCD aListDelete; "list_delete"|48-245-0-0
54816|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|176-245-0-0
54820|code|PUSH.W          {R4-R9,LR}|45-233-240-67
54824|code|MOV             R8, R0|128-70
54826|code|SUB             SP, SP, #0xC|131-176
54828|code|MOV             R6, R1|14-70
54830|code|MOVS            R4, #0x50 ; 'P'|80-36
54832|code|MOVS            R5, #0|0-37
54834|code|B               loc_D666|24-224
54836|code|MOV             R0, R4|32-70
54838|code|MOV             R7, R4|39-70
54840|code|BL              sub_DE04|0-240-228-251
54844|code|MOV             R5, R0|5-70
54846|code|MOV             R1, R4; maxlen|33-70
54848|code|MOV             R2, R8; format|66-70
54850|code|MOV             R3, R6; arg|51-70
54852|code|MOV             R0, R5; s|40-70
54854|code|STR             R6, [SP,#0x28+var_24]|1-150
54856|code|BLX             vsnprintf|251-247-126-238
54860|code|SUB.W           R2, R0, #0xFFFFFFFF|160-241-255-50
54864|code|MOV             R9, R0|129-70
54866|code|NEGS            R3, R2|83-66
54868|code|ADC.W           R3, R3, R2|67-235-2-3
54872|code|ADDS            R4, #0x50 ; 'P'|80-52
54874|code|CMP             R0, R7|184-66
54876|code|ITE LT|180-191
54878|code|MOVLT           R7, R3|31-70
54880|code|ORRGE.W         R7, R3, #1|67-240-1-7
54884|code|CBZ             R7, loc_D678|71-177
54886|code|CMP             R4, #0x50 ; 'P'|80-44
54888|code|BEQ             loc_D634|228-208
54890|code|MOV             R0, R5|40-70
54892|code|MOV             R1, R4|33-70
54894|code|BL              sub_DE74|0-240-1-252
54898|code|MOV             R7, R4|39-70
54900|code|MOV             R5, R0|5-70
54902|code|B               loc_D63E|226-231
54904|code|MOV             R0, R5; s|40-70
54906|code|BLX             strlen|251-247-244-237
54910|code|CMP             R9, R0|129-69
54912|code|BNE             loc_D68A|3-209
54914|code|MOV             R0, R5|40-70
54916|code|ADD             SP, SP, #0xC|3-176
54918|code|POP.W           {R4-R9,PC}|189-232-240-131
54922|code|LDR             R0, =aLenStrlenStr; "len == strlen(str)"|3-72
54924|code|MOVS            R2, #0x39 ; '9'; line|57-34
54926|code|LDR             R1, =aHprintfC; "hprintf.c"|3-73
54928|code|LDR             R3, =aHvsprintf; "hvsprintf"|3-75
54930|code|BLX             __assert_fail|251-247-120-238
54934|data|ALIGN 4|0-191
54936|data|DCD aLenStrlenStr; "len == strlen(str)"|128-246-0-0
54940|data|DCD aHprintfC; "hprintf.c"|148-246-0-0
54944|data|DCD aHvsprintf; "hvsprintf"|116-246-0-0
54948|code|PUSH            {R0-R3}|15-180
54950|code|PUSH            {LR}|0-181
54952|code|SUB             SP, SP, #0xC|131-176
54954|code|ADD             R3, SP, #0x10|4-171
54956|code|LDR.W           R0, [R3],#4|83-248-4-11
54960|code|MOV             R1, R3|25-70
54962|code|STR             R3, [SP,#4]|1-147
54964|code|BL              sub_D624|255-247-182-255
54968|code|ADD             SP, SP, #0xC|3-176
54970|code|POP.W           {LR}|93-248-4-235
54974|code|ADD             SP, SP, #0x10|4-176
54976|code|BX              LR|112-71
54978|data|ALIGN 4|0-191
54980|code|PUSH            {R1-R3}|14-180
54982|code|PUSH            {R4-R6,LR}|112-181
54984|code|SUB             SP, SP, #0xC|131-176
54986|code|ADD             R3, SP, #0x1C|7-171
54988|code|MOV             R6, R0|6-70
54990|code|LDR.W           R0, [R3],#4|83-248-4-11
54994|code|MOV             R1, R3|25-70
54996|code|STR             R3, [SP,#4]|1-147
54998|code|BL              sub_D624|255-247-165-255
55002|code|MOV             R5, R0|5-70
55004|code|BLX             strlen|251-247-194-237
55008|code|MOV             R4, R0|4-70
55010|code|MOV             R2, R4|34-70
55012|code|MOV             R0, R6|48-70
55014|code|MOV             R1, R5|41-70
55016|code|BL              sub_D8FC|0-240-8-249
55020|code|CMP             R0, #0|0-40
55022|code|RSB.W           R4, R0, R4|192-235-4-4
55026|code|BLT             loc_D700|5-219
55028|code|CMP             R4, #0|0-44
55030|code|BGT             loc_D6E2|244-220
55032|code|MOV             R0, R5|40-70
55034|code|BL              sub_DF50|0-240-41-252
55038|code|MOV             R0, R4|32-70
55040|code|ADD             SP, SP, #0xC|3-176
55042|code|POP.W           {R4-R6,LR}|189-232-112-64
55046|code|ADD             SP, SP, #0xC|3-176
55048|code|BX              LR|112-71
55050|data|ALIGN 4|0-191
55052|code|LDR             R3, [R0]|3-104
55054|code|CBZ             R3, loc_D720|59-177
55056|code|MOV             R3, R0|3-70
55058|code|MOVS            R0, #0|0-32
55060|code|LDR.W           R2, [R3,#4]!|83-248-4-47
55064|code|ADDS            R0, #1|1-48
55066|code|CMP             R2, #0|0-42
55068|code|BNE             loc_D714|250-209
55070|code|BX              LR|112-71
55072|code|MOV             R0, R3|24-70
55074|code|BX              LR|112-71
55076|code|PUSH            {R3-R7,LR}|248-181
55078|code|MOV             R4, R1|12-70
55080|code|LDR             R6, [R0]|6-104
55082|code|MOVS            R5, #4|4-37
55084|code|MOVS            R1, #8|8-33
55086|code|CBZ             R6, loc_D748|94-177
55088|code|MOVS            R6, #0|0-38
55090|code|MOV             R3, R0|3-70
55092|code|LDR.W           R2, [R3,#4]!|83-248-4-47
55096|code|ADDS            R6, #1|1-54
55098|code|CMP             R2, #0|0-42
55100|code|BNE             loc_D734|250-209
55102|code|ADDS            R1, R6, #2|177-28
55104|code|ADDS            R5, R6, #1|117-28
55106|code|LSLS            R6, R6, #2|182-0
55108|code|LSLS            R1, R1, #2|137-0
55110|code|LSLS            R5, R5, #2|173-0
55112|code|BL              sub_DE74|0-240-148-251
55116|code|MOV             R7, R0|7-70
55118|code|MOV             R0, R4|32-70
55120|code|BL              sub_DFCC|0-240-60-252
55124|code|MOVS            R3, #0|0-35
55126|code|STR             R0, [R7,R6]|184-81
55128|code|MOV             R0, R7|56-70
55130|code|STR             R3, [R7,R5]|123-81
55132|code|POP             {R3-R7,PC}|248-189
55134|data|ALIGN 0x10|0-191
55136|code|PUSH.W          {R4-R11,LR}|45-233-240-79
55140|code|SUB             SP, SP, #0xC|131-176
55142|code|LDRB            R6, [R0]|6-120
55144|code|MOV             R5, R0|5-70
55146|code|MOV             R4, R1|12-70
55148|code|MOV             R7, R0|7-70
55150|code|MOV.W           R9, #0|79-240-0-9
55154|code|CBNZ            R6, loc_D7CA|86-187
55156|code|ADD.W           R0, R9, #1|9-241-1-0
55160|code|MOV             R8, R9|200-70
55162|code|LSLS            R0, R0, #2|128-0
55164|code|BL              sub_DE04|0-240-66-251
55168|code|STR             R0, [SP,#0x30+var_2C]|1-144
55170|code|CMP.W           R9, #0|185-241-0-15
55174|code|BEQ             loc_D844|93-208
55176|code|LDR.W           R10, [SP,#0x30+var_2C]|221-248-4-160
55180|code|MOV.W           R8, #0|79-240-0-8
55184|code|LDRB            R1, [R5]|41-120
55186|code|CBZ             R1, loc_D7B8|137-177
55188|code|STR             R1, [SP,#0x30+c]|0-145
55190|code|BLX             __ctype_b_loc|251-247-84-237
55194|code|LDR             R1, [SP,#0x30+c]; c|0-153
55196|code|MOV             R11, R5|171-70
55198|code|LDR             R6, [R0]|6-104
55200|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
55204|code|LSLS            R2, R3, #0x12|154-4
55206|code|BMI             loc_D7B0|3-212
55208|code|MOV             R0, R4; s|32-70
55210|code|BLX             strchr|251-247-98-237
55214|code|CBZ             R0, loc_D7F2|0-179
55216|code|LDRB.W          R1, [R11,#1]!|27-248-1-31
55220|code|CMP             R1, #0|0-41
55222|code|BNE             loc_D7A0|243-209
55224|code|MOVS            R3, #0|0-35
55226|code|STR.W           R3, [R10]|202-248-0-48
55230|code|LDR             R0, =aArgvIVoid0; "argv[i] != ((void *)0)"|53-72
55232|code|MOVS            R2, #0x70 ; 'p'; line|112-34
55234|code|LDR             R1, =aArgvC; "argv.c"|53-73
55236|code|LDR             R3, =aArgvCreate; "argv_create"|53-75
55238|code|BLX             __assert_fail|251-247-222-237
55242|code|BLX             __ctype_b_loc|251-247-58-237
55246|code|LDR.W           R8, [R0]|208-248-0-128
55250|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
55254|code|ANDS.W          R3, R3, #0x2000|19-244-0-83
55258|code|BNE             loc_D7EC|7-209
55260|code|MOV             R0, R4; s|32-70
55262|code|MOV             R1, R6; c|49-70
55264|code|STR             R3, [SP,#0x30+c]|0-147
55266|code|BLX             strchr|251-247-70-237
55270|code|LDR             R3, [SP,#0x30+c]|0-155
55272|code|CMP             R0, #0|0-40
55274|code|BEQ             loc_D854|51-208
55276|code|LDRB            R6, [R7,#1]|126-120
55278|code|ADDS            R7, #1|1-55
55280|code|B               loc_D772|191-231
55282|code|LDRB.W          R1, [R11]|155-248-0-16
55286|code|CMP             R1, #0|0-41
55288|code|BEQ             loc_D7B8|222-208
55290|code|MOV             R5, R11|93-70
55292|code|B               loc_D80C|6-224
55294|code|MOV             R0, R4; s|32-70
55296|code|BLX             strchr|251-247-54-237
55300|code|CBNZ            R0, loc_D814|48-185
55302|code|LDRB.W          R1, [R5,#1]!; c|21-248-1-31
55306|code|CBZ             R1, loc_D814|25-177
55308|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
55312|code|LSLS            R3, R3, #0x12|155-4
55314|code|BPL             loc_D7FE|244-213
55316|code|RSB.W           R7, R11, R5|203-235-5-7
55320|code|CMP             R7, #0|0-47
55322|code|BLE             loc_D7B8|205-221
55324|code|ADDS            R0, R7, #1|120-28
55326|code|BL              sub_DE04|0-240-241-250
55330|code|MOV             R2, R7; n|58-70
55332|code|MOV             R1, R11; src|89-70
55334|code|MOV             R6, R0|6-70
55336|code|BLX             memcpy|251-247-120-236
55340|code|MOVS            R2, #0|0-34
55342|code|STRB            R2, [R6,R7]|242-85
55344|code|STR.W           R6, [R10],#4|74-248-4-107
55348|code|CMP             R6, #0|0-46
55350|code|BEQ             loc_D7BE|194-208
55352|code|ADD.W           R8, R8, #1|8-241-1-8
55356|code|CMP             R8, R9|200-69
55358|code|BNE             loc_D790|167-209
55360|code|MOV.W           R8, R8,LSL#2|79-234-136-8
55364|code|LDR             R2, [SP,#0x30+var_2C]|1-154
55366|code|MOVS            R3, #0|0-35
55368|code|MOV             R0, R2|16-70
55370|code|STR.W           R3, [R2,R8]|66-248-8-48
55374|code|ADD             SP, SP, #0xC|3-176
55376|code|POP.W           {R4-R11,PC}|189-232-240-143
55380|code|ADD.W           R10, R9, #1|9-241-1-10
55384|code|CBNZ            R3, loc_D876|107-185
55386|code|MOV             R0, R4; s|32-70
55388|code|MOV             R1, R6; c|49-70
55390|code|BLX             strchr|251-247-8-237
55394|code|CBNZ            R0, loc_D876|64-185
55396|code|LDRB            R6, [R7,#1]|126-120
55398|code|CBZ             R6, loc_D87E|86-177
55400|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
55404|code|ADDS            R7, #1|1-55
55406|code|AND.W           R3, R3, #0x2000|3-244-0-83
55410|code|CMP             R3, #0|0-43
55412|code|BEQ             loc_D85A|241-208
55414|code|LDRB            R6, [R7]|62-120
55416|code|CBZ             R6, loc_D882|30-177
55418|code|MOV             R9, R10|209-70
55420|code|B               loc_D772|121-231
55422|code|MOV             R9, R10|209-70
55424|code|B               loc_D774|120-231
55426|code|ADD.W           R0, R9, #2|9-241-2-0
55430|code|MOV             R9, R10|209-70
55432|code|LSLS            R0, R0, #2|128-0
55434|code|BL              sub_DE04|0-240-187-250
55438|code|STR             R0, [SP,#0x30+var_2C]|1-144
55440|code|B               loc_D788|122-231
55442|data|ALIGN 4|0-191
55444|data|DCD aArgvIVoid0; "argv[i] != ((void *)0)"|172-246-0-0
55448|data|DCD aArgvC; "argv.c"|196-246-0-0
55452|data|DCD aArgvCreate; "argv_create"|160-246-0-0
55456|code|PUSH            {R3-R5,LR}|56-181
55458|code|MOV             R5, R0|5-70
55460|code|LDR             R0, [R0]|0-104
55462|code|CBZ             R0, loc_D8B6|48-177
55464|code|MOV             R4, R5|44-70
55466|code|BL              sub_DF50|0-240-81-251
55470|code|LDR.W           R0, [R4,#4]!|84-248-4-15
55474|code|CMP             R0, #0|0-40
55476|code|BNE             loc_D8AA|249-209
55478|code|MOV             R0, R5|40-70
55480|code|POP.W           {R3-R5,LR}|189-232-56-64
55484|code|B.W             sub_DF50|0-240-72-187
55488|code|PUSH            {R3-R7,LR}|248-181
55490|code|MOV             R6, R0|6-70
55492|code|MOV             R5, R1|13-70
55494|code|MOV             R4, R2|20-70
55496|code|MOV             R1, R5; buf|41-70
55498|code|MOV             R2, R4; nbytes|34-70
55500|code|MOV             R0, R6; fd|48-70
55502|code|BLX             read|251-247-6-236
55506|code|CMP             R0, #0|0-40
55508|code|MOV             R7, R0|7-70
55510|code|BGE             loc_D8F2|12-218
55512|code|BLX             __errno_location|251-247-220-236
55516|code|LDR             R3, [R0]|3-104
55518|code|CMP             R3, #4|4-43
55520|code|BEQ             loc_D8C8|242-208
55522|code|CMP             R3, #0xB|11-43
55524|code|BEQ             loc_D8F2|5-208
55526|code|CMP             R3, #0x68 ; 'h'|104-43
55528|code|BEQ             loc_D8F2|3-208
55530|code|MOVS            R0, #1|1-32
55532|code|LDR             R1, =aRead_0; "read"|2-73
55534|code|BL              sub_A198|252-247-83-252
55538|code|MOV             R0, R7|56-70
55540|code|POP             {R3-R7,PC}|248-189
55542|data|ALIGN 4|0-191
55544|data|DCD aRead_0; "read"|204-246-0-0
55548|code|PUSH            {R3-R7,LR}|248-181
55550|code|MOV             R6, R0|6-70
55552|code|MOV             R5, R1|13-70
55554|code|MOV             R4, R2|20-70
55556|code|MOV             R1, R5; buf|41-70
55558|code|MOV             R2, R4; n|34-70
55560|code|MOV             R0, R6; fd|48-70
55562|code|BLX             write|251-247-244-236
55566|code|CMP             R0, #0|0-40
55568|code|MOV             R7, R0|7-70
55570|code|BGE             loc_D932|14-218
55572|code|BLX             __errno_location|251-247-190-236
55576|code|LDR             R3, [R0]|3-104
55578|code|CMP             R3, #4|4-43
55580|code|BEQ             loc_D904|242-208
55582|code|CMP             R3, #0xB|11-43
55584|code|BEQ             loc_D932|7-208
55586|code|CMP             R3, #0x68 ; 'h'|104-43
55588|code|BEQ             loc_D932|5-208
55590|code|CMP             R3, #0x20 ; ' '|32-43
55592|code|BEQ             loc_D932|3-208
55594|code|MOVS            R0, #1|1-32
55596|code|LDR             R1, =aWrite; "write"|2-73
55598|code|BL              sub_A198|252-247-51-252
55602|code|MOV             R0, R7|56-70
55604|code|POP             {R3-R7,PC}|248-189
55606|data|ALIGN 4|0-191
55608|data|DCD aWrite; "write"|212-246-0-0
55612|code|CMP             R2, #0|0-42
55614|code|PUSH            {R3-R7,LR}|248-181
55616|code|MOV             R6, R0|6-70
55618|code|MOV             R7, R1|15-70
55620|code|MOV             R5, R2|21-70
55622|code|BLE             locret_D96C|17-221
55624|code|MOVS            R4, #0|0-36
55626|code|B               loc_D950|1-224
55628|code|CMP             R5, R4|165-66
55630|code|BLE             locret_D96C|13-221
55632|code|ADDS            R1, R7, R4; buf|57-25
55634|code|SUBS            R2, R5, R4; n|42-27
55636|code|MOV             R0, R6; fd|48-70
55638|code|BL              sub_D8FC|255-247-209-255
55642|code|CMP             R0, #0|0-40
55644|code|ADD             R4, R0|4-68
55646|code|BGE             loc_D94C|245-218
55648|code|MOVS            R0, #1|1-32
55650|code|LDR             R1, =aWrite; "write"|3-73
55652|code|BL              sub_A198|252-247-24-252
55656|code|CMP             R5, R4|165-66
55658|code|BGT             loc_D950|241-220
55660|code|POP             {R3-R7,PC}|248-189
55662|data|ALIGN 0x10|0-191
55664|data|DCD aWrite; "write"|212-246-0-0
55668|code|CMP             R2, #0|0-42
55670|code|PUSH.W          {R4-R8,LR}|45-233-240-65
55674|code|MOV             R6, R0|6-70
55676|code|MOV             R7, R1|15-70
55678|code|MOV             R5, R2|21-70
55680|code|BLE             locret_D9B2|23-221
55682|code|MOVS            R4, #0|0-36
55684|code|B               loc_D994|6-224
55686|code|BNE             loc_D98E|2-209
55688|code|LDR             R1, =aEofOnRead; "EOF on read"|11-73
55690|code|BL              sub_A198|252-247-5-252
55694|code|ADD             R4, R8|68-68
55696|code|CMP             R5, R4|165-66
55698|code|BLE             locret_D9B2|14-221
55700|code|ADDS            R1, R7, R4; buf|57-25
55702|code|SUBS            R2, R5, R4; nbytes|42-27
55704|code|MOV             R0, R6; fd|48-70
55706|code|BL              sub_D8C0|255-247-145-255
55710|code|CMP             R0, #0|0-40
55712|code|MOV             R8, R0|128-70
55714|code|BGE             loc_D986|240-218
55716|code|MOVS            R0, #1|1-32
55718|code|LDR             R1, =aRead_0; "read"|5-73
55720|code|ADD             R4, R8|68-68
55722|code|BL              sub_A198|252-247-245-251
55726|code|CMP             R5, R4|165-66
55728|code|BGT             loc_D994|240-220
55730|code|POP.W           {R4-R8,PC}|189-232-240-129
55734|data|ALIGN 4|0-191
55736|data|DCD aEofOnRead; "EOF on read"|220-246-0-0
55740|data|DCD aRead_0; "read"|204-246-0-0
55744|code|PUSH            {R3-R5,LR}|56-181
55746|code|MOV             R3, R0|3-70
55748|code|MOV             R4, R1|12-70
55750|code|LDR             R0, =(aRegcompFailedS+0x10); "%s"|20-72
55752|code|MOV             R1, R3|25-70
55754|code|MOV             R5, R2|21-70
55756|code|BLX             printf|251-247-122-235
55760|code|LDR             R3, =stdout|18-75
55762|code|LDR             R0, [R3]|24-104
55764|code|BLX             fflush|251-247-136-235
55768|code|LDR             R3, =stdin|17-75
55770|code|MOV             R0, R4|32-70
55772|code|MOV             R1, R5|41-70
55774|code|LDR             R2, [R3]|26-104
55776|code|BLX             fgets|251-247-150-235
55780|code|CBZ             R0, loc_DA12|168-177
55782|code|MOV             R0, R4|32-70
55784|code|BLX             strlen|251-247-60-236
55788|code|SUBS            R5, R0, #1|69-30
55790|code|ADDS            R5, R4, R5|101-25
55792|code|BCS             loc_DA0E|13-210
55794|code|BLX             __ctype_b_loc|251-247-38-236
55798|code|MOVS            R1, #0|0-33
55800|code|B               loc_DA00|2-224
55802|code|CMP             R4, R5|172-66
55804|code|STRB            R1, [R5,#1]|105-112
55806|code|BHI             loc_DA0E|6-216
55808|code|LDRB.W          R2, [R5],#-1|21-248-1-41
55812|code|LDR             R3, [R0]|3-104
55814|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
55818|code|LSLS            R3, R3, #0x12|155-4
55820|code|BMI             loc_D9FA|245-212
55822|code|MOV             R0, R4|32-70
55824|code|POP             {R3-R5,PC}|56-189
55826|code|MOV             R4, R0|4-70
55828|code|B               loc_DA0E|251-231
55830|data|ALIGN 4|0-191
55832|data|DCD aRegcompFailedS+0x10; "%s"|104-249-0-0
55836|data|DCD stdout|44-125-1-0
55840|data|DCD stdin|40-125-1-0
55844|code|PUSH.W          {R4-R8,LR}|45-233-240-65
55848|code|MOV             R5, R0|5-70
55850|code|SUB             SP, SP, #0x18|134-176
55852|code|MOV             R6, R1|14-70
55854|code|MOV             R4, R1|12-70
55856|code|CBZ             R1, loc_DA4A|89-177
55858|code|LDM             R1, {R0,R1}|3-201
55860|code|MOV             R4, SP|108-70
55862|code|STMEA.W         SP, {R0,R1}|141-232-3-0
55866|code|MOVS            R1, #0; tz|0-33
55868|code|ADD             R0, SP, #0x30+tv; tv|2-168
55870|code|BLX             gettimeofday|251-247-200-235
55874|code|CMP             R0, #0|0-40
55876|code|IT GE|168-191
55878|code|MOVGE           R4, SP|108-70
55880|code|BLT             loc_DAEA|79-219
55882|code|MOV             R7, #0x10624DD3|68-246-211-87-193-242-98-7
55890|code|MOV.W           R8, #0x3E8|79-244-122-120
55894|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
55898|code|CBZ             R4, loc_DA6E|68-177
55900|code|LDM.W           R4, {R2,R3}|148-232-12-0
55904|code|SMULL.W         R0, R1, R7, R3|135-251-3-1
55908|code|ASRS            R3, R3, #0x1F|219-23
55910|code|RSB.W           R3, R3, R1,ASR#6|195-235-161-19
55914|code|MLA.W           R2, R8, R2, R3; timeout|8-251-2-50
55918|code|LDR             R0, [R5,#0xC]; fds|232-104
55920|code|LDR             R1, [R5,#4]; nfds|105-104
55922|code|BLX             poll|251-247-126-235
55926|code|CMP             R0, #0|0-40
55928|code|BLT             loc_DA80|2-219
55930|code|ADD             SP, SP, #0x18|6-176
55932|code|POP.W           {R4-R8,PC}|189-232-240-129
55936|code|BLX             __errno_location|251-247-8-236
55940|code|LDR             R3, [R0]|3-104
55942|code|CMP             R3, #4|4-43
55944|code|BEQ             loc_DA92|3-208
55946|code|MOVS            R0, #1|1-32
55948|code|LDR             R1, =aSelectPoll; "select/poll"|26-73
55950|code|BL              sub_A198|252-247-131-251
55954|code|CMP             R6, #0|0-46
55956|code|BEQ             loc_DA56|223-208
55958|code|MOVS            R1, #0; tz|0-33
55960|code|ADD             R0, SP, #0x30+var_20; tv|4-168
55962|code|BLX             gettimeofday|251-247-154-235
55966|code|CMP             R0, #0|0-40
55968|code|BLT             loc_DAE0|30-219
55970|code|LDR             R2, [SP,#0x30+var_20.tv_usec]|5-154
55972|code|LDR             R3, [SP,#0x30+tv.tv_usec]|3-155
55974|code|LDR             R1, [SP,#0x30+tv]|2-153
55976|code|LDR             R0, [SP,#0x30+var_20]|4-152
55978|code|SUBS            R3, R2, R3|211-26
55980|code|RSB.W           R1, R1, R0|193-235-0-1
55984|code|BMI             loc_DAD4|16-212
55986|code|LDR             R0, [R6,#4]|112-104
55988|code|LDR             R2, [R6]|50-104
55990|code|SUBS            R3, R0, R3|195-26
55992|code|STR             R3, [R4,#4]|99-96
55994|code|CMP             R3, #0|0-43
55996|code|RSB.W           R1, R1, R2|193-235-2-1
56000|code|STR             R1, [R4]|33-96
56002|code|BGE             loc_DA56|200-218
56004|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
56008|code|SUBS            R1, #1|1-57
56010|code|ADD.W           R3, R3, #0x240|3-245-16-115
56014|code|STM.W           R4, {R1,R3}|132-232-10-0
56018|code|B               loc_DA56|192-231
56020|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
56024|code|SUBS            R1, #1|1-57
56026|code|ADD.W           R3, R3, #0x240|3-245-16-115
56030|code|B               loc_DAB2|232-231
56032|code|MOVS            R0, #1|1-32
56034|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|6-73
56036|code|BL              sub_A198|252-247-88-251
56040|code|B               loc_DAA2|219-231
56042|code|MOVS            R0, #1|1-32
56044|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|3-73
56046|code|BL              sub_A198|252-247-83-251
56050|code|MOV             R4, SP|108-70
56052|code|B               loc_DA4A|169-231
56054|data|ALIGN 4|0-191
56056|data|DCD aSelectPoll; "select/poll"|48-247-0-0
56060|data|DCD aGettimeofday_0; "gettimeofday"|248-234-0-0
56064|code|PUSH            {R4,LR}|16-181
56066|code|MOVS            R0, #0x10|16-32
56068|code|BL              sub_DE04|0-240-126-249
56072|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
56080|code|MOV             R4, R0|4-70
56082|code|LDR             R0, [R0,#8]|128-104
56084|code|STR             R3, [R4]|35-96
56086|code|ADDS            R0, #0x10|16-48
56088|code|STR             R0, [R4,#8]|160-96
56090|code|LSLS            R0, R0, #3|192-0
56092|code|BL              sub_DE04|0-240-114-249
56096|code|MOVS            R3, #0|0-35
56098|code|STR             R3, [R4,#4]|99-96
56100|code|STR             R0, [R4,#0xC]|224-96
56102|code|MOV             R0, R4|32-70
56104|code|POP             {R4,PC}|16-189
56106|data|ALIGN 4|0-191
56108|code|LDR             R2, [R0]|2-104
56110|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
56118|code|CMP             R2, R3|154-66
56120|code|PUSH            {R4,LR}|16-181
56122|code|MOV             R4, R0|4-70
56124|code|BNE             loc_DB54|10-209
56126|code|LDR             R0, [R0,#0xC]|192-104
56128|code|MOVS            R3, #0|0-35
56130|code|STR             R3, [R4]|35-96
56132|code|CBZ             R0, loc_DB4A|8-177
56134|code|BL              sub_DF50|0-240-3-250
56138|code|MOV             R0, R4|32-70
56140|code|POP.W           {R4,LR}|189-232-16-64
56144|code|B.W             sub_DF50|0-240-254-185
56148|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|2-72
56150|code|MOVS            R2, #0xBC; line|188-34
56152|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
56154|code|LDR             R3, =aXpollfdDestroy; "xpollfd_destroy"|3-75
56156|code|BLX             __assert_fail|251-247-18-236
56160|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|60-247-0-0
56164|data|DCD aXpollC; "xpoll.c"|88-247-0-0
56168|data|DCD aXpollfdDestroy; "xpollfd_destroy"|232-246-0-0
56172|code|LDR             R2, [R0]|2-104
56174|code|PUSH            {R3,LR}|8-181
56176|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
56184|code|CMP             R2, R3|154-66
56186|code|BNE             loc_DB82|2-209
56188|code|MOVS            R3, #0|0-35
56190|code|STR             R3, [R0,#4]|67-96
56192|code|POP             {R3,PC}|8-189
56194|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
56196|code|MOVS            R2, #0xC8|200-34
56198|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
56200|code|LDR             R3, =aXpollfdZero; "xpollfd_zero"|3-75
56202|code|BLX             __assert_fail|251-247-252-235
56206|data|ALIGN 0x10|0-191
56208|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|60-247-0-0
56212|data|DCD aXpollC; "xpoll.c"|88-247-0-0
56216|data|DCD aXpollfdZero; "xpollfd_zero"|248-246-0-0
56220|code|PUSH.W          {R4-R8,LR}|45-233-240-65
56224|code|MOV             R4, R0|4-70
56226|code|LDR             R0, [R0]|0-104
56228|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
56236|code|MOV             R5, R1|13-70
56238|code|CMP             R0, R3|152-66
56240|code|MOV             R7, R2|23-70
56242|code|BNE             loc_DC8A|106-209
56244|code|LDR             R6, [R4,#4]|102-104
56246|code|LDR             R0, [R4,#0xC]|224-104
56248|code|CMP             R6, #0|0-46
56250|code|BEQ             loc_DC86|100-208
56252|code|LDR             R3, [R0]|3-104
56254|code|MOV             R12, R0|132-70
56256|code|CMP             R3, R1|139-66
56258|code|BEQ             loc_DBEC|19-208
56260|code|ADD.W           R2, R0, #8|0-241-8-2
56264|code|MOVS            R3, #0|0-35
56266|code|B               loc_DBD6|4-224
56268|code|MOV             R12, R2|148-70
56270|code|LDR.W           R1, [R2],#8|82-248-8-27
56274|code|CMP             R1, R5|169-66
56276|code|BEQ             loc_DBF0|12-208
56278|code|ADDS            R3, #1|1-51
56280|code|CMP             R3, R6|179-66
56282|code|MOV             R8, R3|152-70
56284|code|BNE             loc_DBCC|246-209
56286|code|CMP             R6, R8|70-69
56288|code|IT EQ|8-191
56290|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
56294|code|BEQ             loc_DC34|37-208
56296|code|POP.W           {R4-R8,PC}|189-232-240-129
56300|code|MOV.W           R8, #0|79-240-0-8
56304|code|UXTH            R3, R7|187-178
56306|code|LDRH.W          R1, [R12,#4]|188-248-4-16
56310|code|AND.W           R2, R3, #1|3-240-1-2
56314|code|TST.W           R3, #2|19-240-2-15
56318|code|ITT NE|28-191
56320|code|ORRNE.W         R2, R2, #4|66-240-4-2
56324|code|UXTHNE          R2, R2|146-178
56326|code|TST.W           R3, #4|19-240-4-15
56330|code|IT NE|24-191
56332|code|ORRNE.W         R2, R2, #0x10|66-240-16-2
56336|code|TST.W           R3, #8|19-240-8-15
56340|code|IT NE|24-191
56342|code|ORRNE.W         R2, R2, #8|66-240-8-2
56346|code|LSLS            R3, R3, #0x1B|219-6
56348|code|IT MI|72-191
56350|code|ORRMI.W         R2, R2, #0x20|66-240-32-2
56354|code|CMP             R6, R8|70-69
56356|code|ORR.W           R2, R2, R1|66-234-1-2
56360|code|IT EQ|8-191
56362|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
56366|code|STRH.W          R2, [R12,#4]|172-248-4-32
56370|code|BNE             locret_DBE8|217-209
56372|code|LDR             R1, [R4,#8]|161-104
56374|code|ADDS            R6, #1|1-54
56376|code|STR             R6, [R4,#4]|102-96
56378|code|CMP             R6, R1|142-66
56380|code|BLS             loc_DC50|8-217
56382|code|ADDS            R1, #0x10|16-49
56384|code|STR             R1, [R4,#8]|161-96
56386|code|LSLS            R1, R1, #3|201-0
56388|code|BL              sub_DE74|0-240-22-249
56392|code|LDR             R1, [R4,#8]|161-104
56394|code|CMP             R6, R1|142-66
56396|code|STR             R0, [R4,#0xC]|224-96
56398|code|BHI             loc_DC3E|246-216
56400|code|UXTH            R7, R7|191-178
56402|code|STR.W           R5, [R0,R8]|64-248-8-80
56406|code|AND.W           R3, R7, #1|7-240-1-3
56410|code|LSLS            R1, R7, #0x1E|185-7
56412|code|IT MI|72-191
56414|code|ORRMI.W         R3, R3, #4|67-240-4-3
56418|code|ADD             R0, R8|64-68
56420|code|IT MI|72-191
56422|code|UXTHMI          R3, R3|155-178
56424|code|LSLS            R2, R7, #0x1D|122-7
56426|code|IT MI|72-191
56428|code|ORRMI.W         R3, R3, #0x10|67-240-16-3
56432|code|LSLS            R1, R7, #0x1C|57-7
56434|code|IT MI|72-191
56436|code|ORRMI.W         R3, R3, #8|67-240-8-3
56440|code|LSLS            R2, R7, #0x1B|250-6
56442|code|IT MI|72-191
56444|code|ORRMI.W         R3, R3, #0x20|67-240-32-3
56448|code|STRH            R3, [R0,#4]|131-128
56450|code|POP.W           {R4-R8,PC}|189-232-240-129
56454|code|MOV             R8, R6|176-70
56456|code|B               loc_DC34|212-231
56458|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
56460|code|MOVS            R2, #0xD9; line|217-34
56462|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
56464|code|LDR             R3, =aXpollfdSet; "xpollfd_set"|3-75
56466|code|BLX             __assert_fail|251-247-120-235
56470|data|ALIGN 4|0-191
56472|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|60-247-0-0
56476|data|DCD aXpollC; "xpoll.c"|88-247-0-0
56480|data|DCD aXpollfdSet; "xpollfd_set"|8-247-0-0
56484|code|PUSH.W          {R3-R11,LR}|45-233-248-79
56488|code|MOV             R4, R0|4-70
56490|code|LDR             R0, [R0]|0-104
56492|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
56500|code|MOV             R5, R1|13-70
56502|code|CMP             R0, R3|152-66
56504|code|MOV             R6, R2|22-70
56506|code|BNE             loc_DD46|68-209
56508|code|MOV             R0, R1|8-70
56510|code|MOVS            R1, #0x2E ; '.'|46-33
56512|code|BLX             memset|251-247-6-235
56516|code|LDR             R7, [R4,#4]|103-104
56518|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
56522|code|CMP             R7, #0|0-47
56524|code|BEQ             loc_DD28|44-208
56526|code|MOVS            R2, #0|0-34
56528|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
56532|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
56536|code|MOV.W           R11, #0x4F ; 'O'|79-240-79-11
56540|code|MOV             R3, R2|19-70
56542|code|MOV.W           R10, #0x49 ; 'I'|79-240-73-10
56546|code|MOV.W           R9, #0x45 ; 'E'|79-240-69-9
56550|code|B               loc_DCFC|9-224
56552|code|STRB.W          R9, [R5,R2]|5-248-2-144
56556|code|LDR             R7, [R4,#4]|103-104
56558|code|CMP             R12, R2|148-69
56560|code|IT LT|184-191
56562|code|MOVLT           R12, R2|148-70
56564|code|ADDS            R3, #1|1-51
56566|code|CMP             R3, R7|187-66
56568|code|MOV             R2, R3|26-70
56570|code|BCS             loc_DD24|19-210
56572|code|LDR             R1, [R4,#0xC]|225-104
56574|code|ADD.W           R0, R1, R2,LSL#3|1-235-194-0
56578|code|LDR.W           R2, [R1,R2,LSL#3]|81-248-50-32
56582|code|LDRH            R1, [R0,#6]|193-136
56584|code|CMP             R2, R8|66-69
56586|code|BGE             loc_DCF4|243-218
56588|code|CMP             R1, #0|0-41
56590|code|BEQ             loc_DCEE|238-208
56592|code|UXTH            R1, R1|137-178
56594|code|TST.W           R1, #0x38|17-240-56-15
56598|code|BNE             loc_DCE8|231-209
56600|code|LSLS            R0, R1, #0x1F|200-7
56602|code|BPL             loc_DD3A|14-213
56604|code|STRB.W          R10, [R5,R2]|5-248-2-160
56608|code|LDR             R7, [R4,#4]|103-104
56610|code|B               loc_DCEE|228-231
56612|code|ADD.W           R7, R12, #1|12-241-1-7
56616|code|CMP             R6, R7|190-66
56618|code|BLE             loc_DD52|18-221
56620|code|ADD             R12, R5|172-68
56622|code|MOVS            R3, #0|0-35
56624|code|MOV             R0, R5|40-70
56626|code|STRB.W          R3, [R12,#1]|140-248-1-48
56630|code|POP.W           {R3-R11,PC}|189-232-248-143
56634|code|LSLS            R1, R1, #0x1D|73-7
56636|code|ITT MI|68-191
56638|code|STRBMI.W        R11, [R5,R2]|5-248-2-176
56642|code|LDRMI           R7, [R4,#4]|103-104
56644|code|B               loc_DCEE|211-231
56646|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|6-72
56648|code|MOVS            R2, #0xF7|247-34
56650|code|LDR             R1, =aXpollC; "xpoll.c"|6-73
56652|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|6-75
56654|code|BLX             __assert_fail|251-247-26-235
56658|code|LDR             R0, =aMaxfd1Len; "maxfd + 1 < len"|6-72
56660|code|MOVW            R2, #0x10B|64-242-11-18
56664|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
56666|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|3-75
56668|code|BLX             __assert_fail|251-247-18-235
56672|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|60-247-0-0
56676|data|DCD aXpollC; "xpoll.c"|88-247-0-0
56680|data|DCD aXpollfdStr; "xpollfd_str"|20-247-0-0
56684|data|DCD aMaxfd1Len; "maxfd + 1 < len"|96-247-0-0
56688|code|LDR             R2, [R0]|2-104
56690|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
56698|code|CMP             R2, R3|154-66
56700|code|PUSH            {R4-R6,LR}|112-181
56702|code|BNE             loc_DDDC|45-209
56704|code|LDR             R6, [R0,#4]|70-104
56706|code|CBZ             R6, loc_DDA6|134-177
56708|code|LDR             R5, [R0,#0xC]|197-104
56710|code|LDR             R3, [R5]|43-104
56712|code|CMP             R3, R1|139-66
56714|code|BEQ             loc_DDAA|14-208
56716|code|ADD.W           R2, R5, #8|5-241-8-2
56720|code|MOVS            R3, #0|0-35
56722|code|B               loc_DD9E|4-224
56724|code|MOV             R5, R2|21-70
56726|code|LDR.W           R4, [R2],#8|82-248-8-75
56730|code|CMP             R4, R1|140-66
56732|code|BEQ             loc_DDAA|5-208
56734|code|ADDS            R3, #1|1-51
56736|code|CMP             R3, R6|179-66
56738|code|BNE             loc_DD94|247-209
56740|code|MOVS            R6, #0|0-38
56742|code|SXTH            R0, R6|48-178
56744|code|POP             {R4-R6,PC}|112-189
56746|code|LDRH            R3, [R5,#6]|235-136
56748|code|AND.W           R6, R3, #1|3-240-1-6
56752|code|LSLS            R0, R3, #0x1D|88-7
56754|code|ITT MI|68-191
56756|code|ORRMI.W         R6, R6, #2|70-240-2-6
56760|code|UXTHMI          R6, R6|182-178
56762|code|LSLS            R1, R3, #0x1B|217-6
56764|code|ITT MI|68-191
56766|code|ORRMI.W         R6, R6, #4|70-240-4-6
56770|code|UXTHMI          R6, R6|182-178
56772|code|LSLS            R2, R3, #0x1C|26-7
56774|code|ITT MI|68-191
56776|code|ORRMI.W         R6, R6, #8|70-240-8-6
56780|code|UXTHMI          R6, R6|182-178
56782|code|LSLS            R3, R3, #0x1A|155-6
56784|code|ITT MI|68-191
56786|code|ORRMI.W         R6, R6, #0x10|70-240-16-6
56790|code|UXTHMI          R6, R6|182-178
56792|code|SXTH            R0, R6|48-178
56794|code|POP             {R4-R6,PC}|112-189
56796|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
56798|code|MOVW            R2, #0x123|64-242-35-18
56802|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
56804|code|LDR             R3, =aXpollfdRevents; "xpollfd_revents"|3-75
56806|code|BLX             __assert_fail|251-247-206-234
56810|data|ALIGN 4|0-191
56812|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|60-247-0-0
56816|data|DCD aXpollC; "xpoll.c"|88-247-0-0
56820|data|DCD aXpollfdRevents; "xpollfd_revents"|32-247-0-0
56824|code|MOV             R3, #0x17D94|71-246-148-83-192-242-1-3
56832|code|LDR             R0, [R3]|24-104
56834|code|BX              LR|112-71
56836|code|CMP             R0, #0|0-40
56838|code|PUSH            {R3-R7,LR}|248-181
56840|code|MOV             R4, R0|4-70
56842|code|BLE             loc_DE54|35-221
56844|code|ADD.W           R0, R0, #0x18; size|0-241-24-0
56848|code|BLX             malloc|251-247-234-233
56852|code|MOV             R5, R0|5-70
56854|code|CBZ             R0, loc_DE4C|200-177
56856|code|LDR             R3, =dword_17D94|17-75
56858|code|ADD.W           R6, R5, #8|5-241-8-6
56862|code|MOVS            R1, #0; c|0-33
56864|code|MOV             R2, R4; n|34-70
56866|code|MOV             R0, R6; s|48-70
56868|code|STR             R4, [R5,#4]|108-96
56870|code|LDR.W           LR, [R3]|211-248-0-224
56874|code|MOV             R7, #0xF00FBAAB|75-246-171-39-207-242-15-7
56882|code|STR             R7, [R5]|47-96
56884|code|ADD             LR, R4|166-68
56886|code|STR.W           LR, [R3]|195-248-0-224
56890|code|BLX             memset|251-247-74-234
56894|code|ADDS            R0, R6, R4; s|48-25
56896|code|MOVS            R1, #0x55 ; 'U'; c|85-33
56898|code|MOVS            R2, #0x10; n|16-34
56900|code|BLX             memset|251-247-68-234
56904|code|MOV             R0, R6|48-70
56906|code|POP             {R3-R7,PC}|248-189
56908|code|LDR             R1, =aOutOfMemory; "out of memory"|5-73
56910|code|BL              sub_A198|252-247-163-249
56914|code|B               loc_DE18|225-231
56916|code|LDR             R0, =aSize0; "size > 0"|4-72
56918|code|MOVS            R2, #0x46 ; 'F'; line|70-34
56920|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
56922|code|LDR             R3, =aXmalloc; "xmalloc"|5-75
56924|code|BLX             __assert_fail|251-247-146-234
56928|data|DCD dword_17D94|148-125-1-0
56932|data|DCD aOutOfMemory; "out of memory"|216-236-0-0
56936|data|DCD aSize0; "size > 0"|140-247-0-0
56940|data|DCD aXmallocC; "xmalloc.c"|152-247-0-0
56944|data|DCD aXmalloc; "xmalloc"|112-247-0-0
56948|code|PUSH            {R4-R6,LR}|112-181
56950|code|MOV             R4, R1|12-70
56952|code|CMP             R0, #0|0-40
56954|code|BEQ             loc_DEFE|64-208
56956|code|CMP             R1, #0|0-41
56958|code|BLE             loc_DF22|80-221
56960|code|LDR.W           R2, [R0,#-8]|80-248-8-44
56964|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
56972|code|CMP             R2, R3|154-66
56974|code|BNE             loc_DF0A|60-209
56976|code|LDR.W           R6, [R0,#-4]|80-248-4-108
56980|code|MOVS            R3, #0xF|15-35
56982|code|ADDS            R1, R0, R6|129-25
56984|code|LDRB            R2, [R1,R3]|202-92
56986|code|CMP             R2, #0x55 ; 'U'|85-42
56988|code|BNE             loc_DEE8|36-209
56990|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
56994|code|BCS             loc_DE98|249-210
56996|code|SUBS            R0, #8; ptr|8-56
56998|code|ADD.W           R1, R4, #0x18; size|4-241-24-1
57002|code|BLX             realloc|251-247-86-233
57006|code|MOV             R5, R0|5-70
57008|code|CBZ             R0, loc_DEF4|0-179
57010|code|LDR             R2, [R5]|42-104
57012|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
57020|code|CMP             R2, R3|154-66
57022|code|BNE             loc_DF16|42-209
57024|code|LDR             R3, =dword_17D94|27-75
57026|code|SUBS            R2, R4, R6; n|162-27
57028|code|STR             R4, [R5,#4]|108-96
57030|code|ADDS            R5, #8|8-53
57032|code|CMP             R4, R6|180-66
57034|code|LDR             R1, [R3]|25-104
57036|code|ADD             R1, R2|17-68
57038|code|STR             R1, [R3]|25-96
57040|code|BLE             loc_DEDA|3-221
57042|code|ADDS            R0, R5, R6; s|168-25
57044|code|MOVS            R1, #0; c|0-33
57046|code|BLX             memset|251-247-252-233
57050|code|ADDS            R0, R5, R4; s|40-25
57052|code|MOVS            R1, #0x55 ; 'U'; c|85-33
57054|code|MOVS            R2, #0x10; n|16-34
57056|code|BLX             memset|251-247-246-233
57060|code|MOV             R0, R5|40-70
57062|code|POP             {R4-R6,PC}|112-189
57064|code|LDR             R0, =aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|18-72
57066|code|MOVS            R2, #0x60 ; '`'; line|96-34
57068|code|LDR             R1, =aXmallocC; "xmalloc.c"|18-73
57070|code|LDR             R3, =aXrealloc; "xrealloc"|19-75
57072|code|BLX             __assert_fail|251-247-72-234
57076|code|MOV             R0, R5|40-70
57078|code|LDR             R1, =aOutOfMemory; "out of memory"|18-73
57080|code|BL              sub_A198|252-247-78-249
57084|code|B               loc_DEB2|217-231
57086|code|LDR             R0, =aItemVoid0; "item != ((void *)0)"|17-72
57088|code|MOVS            R2, #0x5C ; '\'; line|92-34
57090|code|LDR             R1, =aXmallocC; "xmalloc.c"|13-73
57092|code|LDR             R3, =aXrealloc; "xrealloc"|13-75
57094|code|BLX             __assert_fail|251-247-62-234
57098|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|15-72
57100|code|MOVS            R2, #0x5E ; '^'; line|94-34
57102|code|LDR             R1, =aXmallocC; "xmalloc.c"|10-73
57104|code|LDR             R3, =aXrealloc; "xrealloc"|10-75
57106|code|BLX             __assert_fail|251-247-56-234
57110|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|12-72
57112|code|MOVS            R2, #0x64 ; 'd'; line|100-34
57114|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
57116|code|LDR             R3, =aXrealloc; "xrealloc"|7-75
57118|code|BLX             __assert_fail|251-247-50-234
57122|code|LDR             R0, =aNewsize0; "newsize > 0"|10-72
57124|code|MOVS            R2, #0x5D ; ']'; line|93-34
57126|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
57128|code|LDR             R3, =aXrealloc; "xrealloc"|4-75
57130|code|BLX             __assert_fail|251-247-44-234
57134|data|ALIGN 0x10|0-191
57136|data|DCD dword_17D94|148-125-1-0
57140|data|DCD aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|216-247-0-0
57144|data|DCD aXmallocC; "xmalloc.c"|152-247-0-0
57148|data|DCD aXrealloc; "xrealloc"|120-247-0-0
57152|data|DCD aOutOfMemory; "out of memory"|216-236-0-0
57156|data|DCD aItemVoid0; "item != ((void *)0)"|164-247-0-0
57160|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|196-247-0-0
57164|data|DCD aNewsize0; "newsize > 0"|184-247-0-0
57168|code|PUSH            {R3-R5,LR}|56-181
57170|code|CMP             R0, #0|0-40
57172|code|BEQ             locret_DF9C|34-208
57174|code|LDR.W           R2, [R0,#-8]|80-248-8-44
57178|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
57186|code|CMP             R2, R3|154-66
57188|code|BNE             loc_DFAA|33-209
57190|code|LDR.W           R4, [R0,#-4]|80-248-4-76
57194|code|MOVS            R3, #0xF|15-35
57196|code|ADDS            R1, R0, R4|1-25
57198|code|LDRB            R2, [R1,R3]|202-92
57200|code|CMP             R2, #0x55 ; 'U'|85-42
57202|code|BNE             loc_DF9E|20-209
57204|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
57208|code|BCS             loc_DF6E|249-210
57210|code|SUB.W           R5, R0, #8|160-241-8-5
57214|code|ADD.W           R2, R4, #0x18; n|4-241-24-2
57218|code|MOVS            R1, #0; c|0-33
57220|code|MOV             R0, R5; s|40-70
57222|code|BLX             memset|251-247-164-233
57226|code|LDR             R3, =dword_17D94|11-75
57228|code|MOV             R0, R5; ptr|40-70
57230|code|LDR             R2, [R3]|26-104
57232|code|SUBS            R4, R2, R4|20-27
57234|code|STR             R4, [R3]|28-96
57236|code|POP.W           {R3-R5,LR}|189-232-56-64
57240|code|B.W             j_free|251-247-178-184
57244|code|POP             {R3-R5,PC}|56-189
57246|code|LDR             R0, =aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|7-72
57248|code|MOVS            R2, #0x78 ; 'x'; line|120-34
57250|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
57252|code|LDR             R3, =aXfree; "xfree"|7-75
57254|code|BLX             __assert_fail|251-247-238-233
57258|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|7-72
57260|code|MOVS            R2, #0x76 ; 'v'; line|118-34
57262|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
57264|code|LDR             R3, =aXfree; "xfree"|4-75
57266|code|BLX             __assert_fail|251-247-232-233
57270|data|ALIGN 4|0-191
57272|data|DCD dword_17D94|148-125-1-0
57276|data|DCD aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|0-248-0-0
57280|data|DCD aXmallocC; "xmalloc.c"|152-247-0-0
57284|data|DCD aXfree; "xfree"|132-247-0-0
57288|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|196-247-0-0
57292|code|PUSH            {R3-R5,LR}|56-181
57294|code|MOV             R5, R0|5-70
57296|code|BLX             strlen|251-247-72-233
57300|code|ADDS            R0, #1|1-48
57302|code|BL              sub_DE04|255-247-21-255
57306|code|MOV             R1, R5; src|41-70
57308|code|MOV             R4, R0|4-70
57310|code|BLX             strcpy|251-247-242-232
57314|code|MOV             R0, R4|32-70
57316|code|POP             {R3-R5,PC}|56-189
57318|data|ALIGN 4|0-191
57320|code|PUSH.W          {R4-R11,LR}|45-233-240-79
57324|code|MOV             R5, R0|5-70
57326|code|SUB             SP, SP, #0xC|131-176
57328|code|MOV             R0, R2; s|16-70
57330|code|MOV             R8, R3|152-70
57332|code|MOV             R10, R2|146-70
57334|code|MOV             R9, R1|137-70
57336|code|BLX             strlen|251-247-52-233
57340|code|MOV             R7, R0|7-70
57342|code|MOV             R0, R8; s|64-70
57344|code|BLX             strlen|251-247-48-233
57348|code|RSB.W           R11, R7, R0|199-235-0-11
57352|code|MOV             R6, R0|6-70
57354|code|ADD.W           R11, R11, #1|11-241-1-11
57358|code|B               loc_E03C|21-224
57360|code|MOV             R0, R5; s|40-70
57362|code|BLX             strlen|251-247-40-233
57366|code|ADD             R0, R11|88-68
57368|code|CMP             R0, R9|72-69
57370|code|BHI             loc_E050|25-216
57372|code|ADDS            R1, R4, R7|225-25
57374|code|STR             R1, [SP,#0x30+src]|1-145
57376|code|MOV             R0, R1; s|8-70
57378|code|BLX             strlen|251-247-32-233
57382|code|ADDS            R3, R4, R6|163-25
57384|code|LDR             R1, [SP,#0x30+src]; src|1-153
57386|code|ADDS            R2, R0, #1; n|66-28
57388|code|MOV             R0, R3; dest|24-70
57390|code|BLX             memmove|251-247-98-232
57394|code|MOV             R0, R4; dest|32-70
57396|code|MOV             R1, R8; src|65-70
57398|code|MOV             R2, R6; n|50-70
57400|code|BLX             memcpy|251-247-112-232
57404|code|MOV             R0, R5; haystack|40-70
57406|code|MOV             R1, R10; needle|81-70
57408|code|BLX             strstr|251-247-46-232
57412|code|MOV             R4, R0|4-70
57414|code|CMP             R0, #0|0-40
57416|code|BNE             loc_E010|226-209
57418|code|ADD             SP, SP, #0xC|3-176
57420|code|POP.W           {R4-R11,PC}|189-232-240-143
57424|code|LDR             R0, =aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|2-72
57426|code|MOVS            R2, #0x5C ; '\'; line|92-34
57428|code|LDR             R1, =aXregexC; "xregex.c"|2-73
57430|code|LDR             R3, =aStrSubst; "_str_subst"|3-75
57432|code|BLX             __assert_fail|251-247-148-233
57436|data|DCD aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|184-248-0-0
57440|data|DCD aXregexC; "xregex.c"|224-248-0-0
57444|data|DCD aStrSubst; "_str_subst"|40-248-0-0
57448|code|PUSH            {R3,LR}|8-181
57450|code|MOVS            R0, #0xC|12-32
57452|code|BL              sub_DE04|255-247-202-254
57456|code|MOVS            R2, #0|0-34
57458|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
57466|code|STR             R2, [R0,#8]|130-96
57468|code|STR             R3, [R0]|3-96
57470|code|POP             {R3,PC}|8-189
57472|code|LDR             R2, [R0]|2-104
57474|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
57482|code|CMP             R2, R3|154-66
57484|code|PUSH            {R4,LR}|16-181
57486|code|MOV             R4, R0|4-70
57488|code|BNE             loc_E0AE|13-209
57490|code|LDR             R0, [R0,#8]|128-104
57492|code|CBZ             R0, loc_E0A0|32-177
57494|code|BLX             regfree|251-247-132-232
57498|code|LDR             R0, [R4,#8]|160-104
57500|code|BL              sub_DF50|255-247-88-255
57504|code|MOVS            R3, #0|0-35
57506|code|MOV             R0, R4|32-70
57508|code|STR             R3, [R4]|35-96
57510|code|POP.W           {R4,LR}|189-232-16-64
57514|code|B.W             sub_DF50|255-247-81-191
57518|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|3-72
57520|code|MOVS            R2, #0x48 ; 'H'|72-34
57522|code|LDR             R1, =aXregexC; "xregex.c"|3-73
57524|code|LDR             R3, =aXregexDestroy; "xregex_destroy"|3-75
57526|code|BLX             __assert_fail|251-247-102-233
57530|data|ALIGN 4|0-191
57532|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|236-248-0-0
57536|data|DCD aXregexC; "xregex.c"|224-248-0-0
57540|data|DCD aXregexDestroy; "xregex_destroy"|52-248-0-0
57544|code|PUSH.W          {R4-R8,LR}|45-233-240-65
57548|code|SUB             SP, SP, #0x108|194-176
57550|code|LDR             R6, =__stack_chk_guard|56-78
57552|code|MOV             R4, R0|4-70
57554|code|MOV             R5, R1|13-70
57556|code|MOV             R7, R2|23-70
57558|code|LDR             R3, [R6]|51-104
57560|code|STR             R3, [SP,#0x104]|65-147
57562|code|CMP             R1, #0|0-41
57564|code|BEQ             loc_E1A2|97-208
57566|code|LDR             R2, [R0]|2-104
57568|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
57576|code|CMP             R2, R3|154-66
57578|code|BNE             loc_E196|84-209
57580|code|LDR.W           R8, [R0,#8]|208-248-8-128
57584|code|CMP.W           R8, #0|184-241-0-15
57588|code|BNE             loc_E18A|73-209
57590|code|MOV             R0, R1|8-70
57592|code|BLX             strlen|251-247-180-232
57596|code|CMP.W           R0, #0x100|176-245-128-127
57600|code|BHI             loc_E17C|60-216
57602|code|MOVS            R0, #0x20 ; ' '|32-32
57604|code|BL              sub_DE04|255-247-126-254
57608|code|MOVS            R3, #1|1-35
57610|code|STR             R3, [R4,#4]|99-96
57612|code|STR             R0, [R4,#8]|160-96
57614|code|CMP             R7, #0|0-47
57616|code|BEQ             loc_E176|49-208
57618|code|MOV             R0, R5|40-70
57620|code|BL              sub_DFCC|255-247-90-255
57624|code|MOV             R5, R0|5-70
57626|code|BLX             strlen|251-247-164-232
57630|code|LDR             R2, =aR; "\\r"|37-74
57632|code|LDR             R3, =asc_F950; "\r"|37-75
57634|code|ADDS            R1, R0, #1|65-28
57636|code|MOV             R0, R5|40-70
57638|code|BL              sub_DFE8|255-247-95-255
57642|code|MOV             R0, R5|40-70
57644|code|BLX             strlen|251-247-154-232
57648|code|LDR             R3, =asc_F954; "\n"|34-75
57650|code|LDR             R2, =aN; "\\n"|35-74
57652|code|ADDS            R1, R0, #1|65-28
57654|code|MOV             R0, R5|40-70
57656|code|BL              sub_DFE8|255-247-86-255
57660|code|LDR             R0, [R4,#8]|160-104
57662|code|LDR             R2, [R4,#4]|98-104
57664|code|MOV             R1, R5|41-70
57666|code|BLX             regcomp|251-247-252-232
57670|code|MOV             R7, R0|7-70
57672|code|MOV             R0, R5|40-70
57674|code|BL              sub_DF50|255-247-1-255
57678|code|CBZ             R7, loc_E168|95-177
57680|code|LDR             R1, [R4,#8]|161-104
57682|code|ADD             R2, SP, #4|1-170
57684|code|MOV             R0, R7|56-70
57686|code|MOV.W           R3, #0x100|79-244-128-115
57690|code|BLX             regerror|250-247-186-239
57694|code|MOVS            R0, #0|0-32
57696|code|LDR             R1, =aRegcompFailedS; "regcomp failed: %s"|24-73
57698|code|ADD             R2, SP, #4|1-170
57700|code|BL              sub_A198|252-247-24-248
57704|code|LDR             R2, [SP,#0x104]|65-154
57706|code|LDR             R3, [R6]|51-104
57708|code|CMP             R2, R3|154-66
57710|code|BNE             loc_E186|10-209
57712|code|ADD             SP, SP, #0x108|66-176
57714|code|POP.W           {R4-R8,PC}|189-232-240-129
57718|code|MOVS            R3, #9|9-35
57720|code|STR             R3, [R4,#4]|99-96
57722|code|B               loc_E112|202-231
57724|code|MOV             R0, R8|64-70
57726|code|LDR             R1, =aRefusingToComp; "refusing to compile regex > 256 bytes"|18-73
57728|code|BL              sub_A198|252-247-10-248
57732|code|B               loc_E102|189-231
57734|code|BLX             __stack_chk_fail|250-247-226-239
57738|code|LDR             R0, =aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|16-72
57740|code|MOVS            R2, #0x6B ; 'k'|107-34
57742|code|LDR             R1, =aXregexC; "xregex.c"|16-73
57744|code|LDR             R3, =aXregexCompile; "xregex_compile"|16-75
57746|code|BLX             __assert_fail|251-247-248-232
57750|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|16-72
57752|code|MOVS            R2, #0x6A ; 'j'|106-34
57754|code|LDR             R1, =aXregexC; "xregex.c"|13-73
57756|code|LDR             R3, =aXregexCompile; "xregex_compile"|13-75
57758|code|BLX             __assert_fail|251-247-242-232
57762|code|LDR             R0, =unk_F974|14-72
57764|code|MOVS            R2, #0x69 ; 'i'|105-34
57766|code|LDR             R1, =aXregexC; "xregex.c"|10-73
57768|code|LDR             R3, =aXregexCompile; "xregex_compile"|10-75
57770|code|BLX             __assert_fail|251-247-236-232
57774|data|ALIGN 0x10|0-191
57776|data|DCD __stack_chk_guard|24-125-1-0
57780|data|DCD aR; "\\r"|28-236-0-0
57784|data|DCD asc_F950; "\r"|80-249-0-0
57788|data|DCD asc_F954; "\n"|84-249-0-0
57792|data|DCD aN; "\\n"|32-236-0-0
57796|data|DCD aRegcompFailedS; "regcomp failed: %s"|88-249-0-0
57800|data|DCD aRefusingToComp; "refusing to compile regex > 256 bytes"|40-249-0-0
57804|data|DCD aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|8-249-0-0
57808|data|DCD aXregexC; "xregex.c"|224-248-0-0
57812|data|DCD aXregexCompile; "xregex_compile"|68-248-0-0
57816|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|236-248-0-0
57820|data|DCD unk_F974|116-249-0-0
57824|code|PUSH            {R4-R6,LR}|112-181
57826|code|MOVW            R3, #0xAAAA|74-246-170-35
57830|code|LDR             R6, [R0]|6-104
57832|code|MOVT.W          R3, #0x3456|195-242-86-67
57836|code|SUB             SP, SP, #8|130-176
57838|code|MOV             R5, R1|13-70
57840|code|CMP             R6, R3|158-66
57842|code|MOV             R4, R2|20-70
57844|code|BNE             loc_E254|46-209
57846|code|LDR             R0, [R0,#8]|128-104
57848|code|CMP             R0, #0|0-40
57850|code|BEQ             loc_E260|49-208
57852|code|CMP             R2, #0|0-42
57854|code|BEQ             loc_E246|34-208
57856|code|LDR             R2, [R2]|18-104
57858|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
57866|code|CMP             R2, R3|154-66
57868|code|BNE             loc_E278|52-209
57870|code|LDR             R3, [R4,#0x14]|99-105
57872|code|CMP             R3, #0|0-43
57874|code|BNE             loc_E26C|43-209
57876|code|LDR             R3, [R4,#8]|163-104
57878|code|MOVS            R6, #2|2-38
57880|code|LDR             R2, [R4,#4]|98-104
57882|code|STR             R6, [SP]|0-150
57884|code|BLX             regexec|250-247-162-239
57888|code|MOVS            R3, #1|1-35
57890|code|STR             R3, [R4,#0x14]|99-97
57892|code|MOV             R6, R0|6-70
57894|code|STR             R0, [R4,#0x10]|32-97
57896|code|CBNZ            R0, loc_E23A|56-185
57898|code|LDR             R0, [R4,#0xC]|224-104
57900|code|CBZ             R0, loc_E232|8-177
57902|code|BL              sub_DF50|255-247-143-254
57906|code|MOV             R0, R5|40-70
57908|code|BL              sub_DFCC|255-247-202-254
57912|code|STR             R0, [R4,#0xC]|224-96
57914|code|RSBS.W          R0, R6, #1|214-241-1-0
57918|code|IT CC|56-191
57920|code|MOVCC           R0, #0|0-32
57922|code|ADD             SP, SP, #8|2-176
57924|code|POP             {R4-R6,PC}|112-189
57926|code|MOV             R3, R2|19-70
57928|code|MOVS            R4, #2|2-36
57930|code|STR             R4, [SP]|0-148
57932|code|BLX             regexec|250-247-138-239
57936|code|MOV             R6, R0|6-70
57938|code|B               loc_E23A|242-231
57940|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|11-72
57942|code|MOVS            R2, #0x8C|140-34
57944|code|LDR             R1, =aXregexC; "xregex.c"|11-73
57946|code|LDR             R3, =aXregexExec; "xregex_exec"|12-75
57948|code|BLX             __assert_fail|251-247-146-232
57952|code|LDR             R0, =unk_F96C|11-72
57954|code|MOVS            R2, #0x8D|141-34
57956|code|LDR             R1, =aXregexC; "xregex.c"|8-73
57958|code|LDR             R3, =aXregexExec; "xregex_exec"|9-75
57960|code|BLX             __assert_fail|251-247-140-232
57964|code|LDR             R0, =aXmXmUsedFalse; "xm->xm_used == FALSE"|9-72
57966|code|MOVS            R2, #0x90|144-34
57968|code|LDR             R1, =aXregexC; "xregex.c"|5-73
57970|code|LDR             R3, =aXregexExec; "xregex_exec"|6-75
57972|code|BLX             __assert_fail|251-247-134-232
57976|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|7-72
57978|code|MOVS            R2, #0x8F|143-34
57980|code|LDR             R1, =aXregexC; "xregex.c"|2-73
57982|code|LDR             R3, =aXregexExec; "xregex_exec"|3-75
57984|code|BLX             __assert_fail|251-247-128-232
57988|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|236-248-0-0
57992|data|DCD aXregexC; "xregex.c"|224-248-0-0
57996|data|DCD aXregexExec; "xregex_exec"|84-248-0-0
58000|data|DCD unk_F96C|108-249-0-0
58004|data|DCD aXmXmUsedFalse; "xm->xm_used == FALSE"|168-249-0-0
58008|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|140-249-0-0
58012|code|PUSH            {R3-R5,LR}|56-181
58014|code|MOV             R5, R0|5-70
58016|code|MOVS            R0, #0x18|24-32
58018|code|ADDS            R5, #1|1-53
58020|code|BL              sub_DE04|255-247-174-253
58024|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58032|code|MOV             R4, R0|4-70
58034|code|STR             R5, [R0,#4]|69-96
58036|code|STR             R3, [R4]|35-96
58038|code|LSLS            R0, R5, #3|232-0
58040|code|BL              sub_DE04|255-247-164-253
58044|code|MOVS            R3, #0|0-35
58046|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
58050|code|STR             R3, [R4,#0xC]|227-96
58052|code|STR             R2, [R4,#0x10]|34-97
58054|code|STR             R3, [R4,#0x14]|99-97
58056|code|STR             R0, [R4,#8]|160-96
58058|code|MOV             R0, R4|32-70
58060|code|POP             {R3-R5,PC}|56-189
58062|data|ALIGN 0x10|0-191
58064|code|LDR             R2, [R0]|2-104
58066|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58074|code|CMP             R2, R3|154-66
58076|code|PUSH            {R4,LR}|16-181
58078|code|MOV             R4, R0|4-70
58080|code|BNE             loc_E2FE|13-209
58082|code|LDR             R0, [R0,#8]|128-104
58084|code|BL              sub_DF50|255-247-52-254
58088|code|LDR             R0, [R4,#0xC]|224-104
58090|code|CBZ             R0, loc_E2F0|8-177
58092|code|BL              sub_DF50|255-247-48-254
58096|code|MOVS            R3, #0|0-35
58098|code|MOV             R0, R4|32-70
58100|code|STR             R3, [R4]|35-96
58102|code|POP.W           {R4,LR}|189-232-16-64
58106|code|B.W             sub_DF50|255-247-41-190
58110|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|3-72
58112|code|MOVS            R2, #0xB3|179-34
58114|code|LDR             R1, =aXregexC; "xregex.c"|3-73
58116|code|LDR             R3, =aXregexMatchDes; "xregex_match_destroy"|3-75
58118|code|BLX             __assert_fail|251-247-62-232
58122|data|ALIGN 4|0-191
58124|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|140-249-0-0
58128|data|DCD aXregexC; "xregex.c"|224-248-0-0
58132|data|DCD aXregexMatchDes; "xregex_match_destroy"|96-248-0-0
58136|code|PUSH            {R4,LR}|16-181
58138|code|MOV             R4, R0|4-70
58140|code|LDR             R0, [R0,#0xC]|192-104
58142|code|CBZ             R0, loc_E328|24-177
58144|code|BL              sub_DF50|255-247-22-254
58148|code|MOVS            R3, #0|0-35
58150|code|STR             R3, [R4,#0xC]|227-96
58152|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
58156|code|STR             R3, [R4,#0x10]|35-97
58158|code|MOVS            R3, #0|0-35
58160|code|STR             R3, [R4,#0x14]|99-97
58162|code|POP             {R4,PC}|16-189
58164|code|LDR             R2, [R0]|2-104
58166|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58174|code|CMP             R2, R3|154-66
58176|code|PUSH            {R4-R6,LR}|112-181
58178|code|MOV             R4, R0|4-70
58180|code|BNE             loc_E382|29-209
58182|code|LDR             R3, [R0,#0x14]|67-105
58184|code|CBZ             R3, loc_E376|171-177
58186|code|LDR             R6, [R0,#0x10]|6-105
58188|code|CBNZ            R6, loc_E370|134-185
58190|code|LDR             R3, [R0,#8]|131-104
58192|code|LDR             R0, [R3,#4]|88-104
58194|code|ADDS            R0, #1|1-48
58196|code|BL              sub_DE04|255-247-86-253
58200|code|LDR             R1, [R4,#0xC]|225-104
58202|code|MOV             R5, R0|5-70
58204|code|CBZ             R1, loc_E38E|185-177
58206|code|LDR             R3, [R4,#8]|163-104
58208|code|LDR             R2, [R3,#4]|90-104
58210|code|BLX             memcpy|250-247-220-238
58214|code|LDR             R3, [R4,#8]|163-104
58216|code|MOV             R0, R5|40-70
58218|code|LDR             R3, [R3,#4]|91-104
58220|code|STRB            R6, [R5,R3]|238-84
58222|code|POP             {R4-R6,PC}|112-189
58224|code|MOVS            R5, #0|0-37
58226|code|MOV             R0, R5|40-70
58228|code|POP             {R4-R6,PC}|112-189
58230|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|9-72
58232|code|MOVS            R2, #0xCD|205-34
58234|code|LDR             R1, =aXregexC; "xregex.c"|9-73
58236|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|9-75
58238|code|BLX             __assert_fail|251-247-2-232
58242|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|9-72
58244|code|MOVS            R2, #0xCC|204-34
58246|code|LDR             R1, =aXregexC; "xregex.c"|6-73
58248|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|6-75
58250|code|BLX             __assert_fail|250-247-252-239
58254|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|7-72
58256|code|MOVS            R2, #0xD1|209-34
58258|code|LDR             R1, =aXregexC; "xregex.c"|3-73
58260|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|3-75
58262|code|BLX             __assert_fail|250-247-246-239
58266|data|ALIGN 4|0-191
58268|data|DCD aXmXmUsed; "xm->xm_used"|192-249-0-0
58272|data|DCD aXregexC; "xregex.c"|224-248-0-0
58276|data|DCD aXregexMatchStr; "xregex_match_strdup"|120-248-0-0
58280|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|140-249-0-0
58284|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|204-249-0-0
58288|code|LDR             R2, [R0]|2-104
58290|code|PUSH            {R3,LR}|8-181
58292|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58300|code|CMP             R2, R3|154-66
58302|code|BNE             loc_E3CA|4-209
58304|code|LDR             R3, [R0,#0x14]|67-105
58306|code|CBZ             R3, loc_E3D6|67-177
58308|code|LDR             R3, [R0,#8]|131-104
58310|code|LDR             R0, [R3,#4]|88-104
58312|code|POP             {R3,PC}|8-189
58314|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|6-72
58316|code|MOVS            R2, #0xDB|219-34
58318|code|LDR             R1, =aXregexC; "xregex.c"|6-73
58320|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|6-75
58322|code|BLX             __assert_fail|250-247-216-239
58326|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|6-72
58328|code|MOVS            R2, #0xDC|220-34
58330|code|LDR             R1, =aXregexC; "xregex.c"|3-73
58332|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|3-75
58334|code|BLX             __assert_fail|250-247-210-239
58338|data|ALIGN 4|0-191
58340|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|140-249-0-0
58344|data|DCD aXregexC; "xregex.c"|224-248-0-0
58348|data|DCD aXregexMatchStr_0; "xregex_match_strlen"|140-248-0-0
58352|data|DCD aXmXmUsed; "xm->xm_used"|192-249-0-0
58356|code|LDR             R2, [R0]|2-104
58358|code|PUSH            {R3-R7,LR}|248-181
58360|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58368|code|MOV             R6, R0|6-70
58370|code|CMP             R2, R3|154-66
58372|code|BNE             loc_E462|45-209
58374|code|LDR             R3, [R0,#0x14]|67-105
58376|code|CMP             R3, #0|0-43
58378|code|BEQ             loc_E46E|48-208
58380|code|LDR             R4, [R0,#0x10]|4-105
58382|code|RSBS.W          R4, R4, #1|212-241-1-4
58386|code|IT CC|56-191
58388|code|MOVCC           R4, #0|0-36
58390|code|CMP             R1, #0|0-41
58392|code|ITE LT|180-191
58394|code|MOVLT           R4, #0|0-36
58396|code|ANDGE.W         R4, R4, #1|4-240-1-4
58400|code|CBZ             R4, loc_E458|212-177
58402|code|LDR             R3, [R0,#4]|67-104
58404|code|CMP             R1, R3|153-66
58406|code|BGE             loc_E45C|25-218
58408|code|LDR             R3, [R0,#8]|131-104
58410|code|ADD.W           R2, R3, R1,LSL#3|3-235-193-2
58414|code|LDR.W           R7, [R3,R1,LSL#3]|83-248-49-112
58418|code|ADDS            R3, R7, #1|123-28
58420|code|BEQ             loc_E45C|18-208
58422|code|LDR             R3, [R0,#0xC]|195-104
58424|code|LDR             R5, [R2,#4]|85-104
58426|code|CBZ             R3, loc_E486|35-179
58428|code|CMP             R7, R5|175-66
58430|code|BGE             loc_E47A|28-218
58432|code|SUBS            R5, R5, R7|237-27
58434|code|ADDS            R0, R5, #1|104-28
58436|code|BL              sub_DE04|255-247-222-252
58440|code|LDR             R1, [R6,#0xC]|241-104
58442|code|MOV             R2, R5|42-70
58444|code|ADDS            R1, R1, R7|201-25
58446|code|MOV             R4, R0|4-70
58448|code|BLX             memcpy|250-247-100-238
58452|code|MOVS            R3, #0|0-35
58454|code|STRB            R3, [R4,R5]|99-85
58456|code|MOV             R0, R4|32-70
58458|code|POP             {R3-R7,PC}|248-189
58460|code|MOVS            R4, #0|0-36
58462|code|MOV             R0, R4|32-70
58464|code|POP             {R3-R7,PC}|248-189
58466|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|12-72
58468|code|MOVS            R2, #0xE6|230-34
58470|code|LDR             R1, =aXregexC; "xregex.c"|12-73
58472|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|12-75
58474|code|BLX             __assert_fail|250-247-140-239
58478|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|12-72
58480|code|MOVS            R2, #0xE7|231-34
58482|code|LDR             R1, =aXregexC; "xregex.c"|9-73
58484|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|9-75
58486|code|BLX             __assert_fail|250-247-134-239
58490|code|LDR             R0, =aMRmSoMRmEo; "m.rm_so < m.rm_eo"|10-72
58492|code|MOVS            R2, #0xEE|238-34
58494|code|LDR             R1, =aXregexC; "xregex.c"|6-73
58496|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|6-75
58498|code|BLX             __assert_fail|250-247-128-239
58502|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|8-72
58504|code|MOVS            R2, #0xED|237-34
58506|code|LDR             R1, =aXregexC; "xregex.c"|3-73
58508|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|3-75
58510|code|BLX             __assert_fail|250-247-122-239
58514|data|ALIGN 4|0-191
58516|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|140-249-0-0
58520|data|DCD aXregexC; "xregex.c"|224-248-0-0
58524|data|DCD aXregexMatchSub; "xregex_match_sub_strdup"|160-248-0-0
58528|data|DCD aXmXmUsed; "xm->xm_used"|192-249-0-0
58532|data|DCD aMRmSoMRmEo; "m.rm_so < m.rm_eo"|232-249-0-0
58536|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|204-249-0-0
58540|code|PUSH            {R3-R5,LR}|56-181
58542|code|MOVS            R1, #3|3-33
58544|code|MOVS            R2, #0|0-34
58546|code|MOV             R4, R0|4-70
58548|code|BLX             fcntl|250-247-232-238
58552|code|CMP             R0, #0|0-40
58554|code|MOV             R5, R0|5-70
58556|code|BLT             loc_E4DC|14-219
58558|code|MOVS            R1, #4|4-33
58560|code|ORR.W           R2, R5, #0x800|69-244-0-98
58564|code|MOV             R0, R4|32-70
58566|code|BLX             fcntl|250-247-224-238
58570|code|CMP             R0, #0|0-40
58572|code|BLT             loc_E4D0|0-219
58574|code|POP             {R3-R5,PC}|56-189
58576|code|MOVS            R0, #1|1-32
58578|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
58580|code|POP.W           {R3-R5,LR}|189-232-56-64
58584|code|B.W             sub_A198|251-247-94-190
58588|code|MOVS            R0, #1|1-32
58590|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
58592|code|BL              sub_A198|251-247-90-254
58596|code|B               loc_E4BE|235-231
58598|data|ALIGN 4|0-191
58600|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|24-250-0-0
58604|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|8-250-0-0
58608|code|PUSH            {R3-R5,LR}|56-181
58610|code|MOVS            R1, #3|3-33
58612|code|MOVS            R2, #0|0-34
58614|code|MOV             R4, R0|4-70
58616|code|BLX             fcntl|250-247-198-238
58620|code|CMP             R0, #0|0-40
58622|code|MOV             R5, R0|5-70
58624|code|BLT             loc_E520|14-219
58626|code|MOVS            R1, #4|4-33
58628|code|BIC.W           R2, R5, #0x800|37-244-0-98
58632|code|MOV             R0, R4|32-70
58634|code|BLX             fcntl|250-247-190-238
58638|code|CMP             R0, #0|0-40
58640|code|BLT             loc_E514|0-219
58642|code|POP             {R3-R5,PC}|56-189
58644|code|MOVS            R0, #1|1-32
58646|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
58648|code|POP.W           {R3-R5,LR}|189-232-56-64
58652|code|B.W             sub_A198|251-247-60-190
58656|code|MOVS            R0, #1|1-32
58658|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
58660|code|BL              sub_A198|251-247-56-254
58664|code|B               loc_E502|235-231
58666|data|ALIGN 4|0-191
58668|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|24-250-0-0
58672|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|8-250-0-0
58676|code|PUSH            {R4,R5,LR}|48-181
58678|code|SUB             SP, SP, #0x84|161-176
58680|code|LDR             R5, =__stack_chk_guard|53-77
58682|code|ADD             R1, SP, #4|1-169
58684|code|MOV             R4, R0|4-70
58686|code|LDR             R3, [R5]|43-104
58688|code|STR             R3, [SP,#0x7C]|31-147
58690|code|BLX             tcgetattr|250-247-38-239
58694|code|CMP             R0, #0|0-40
58696|code|BLT             loc_E5C6|61-219
58698|code|ADD             R0, SP, #4|1-168
58700|code|BLX             cfmakeraw|250-247-174-237
58704|code|MOVS            R1, #0|0-33
58706|code|MOV             R0, R4|32-70
58708|code|ADD             R2, SP, #4|1-170
58710|code|BLX             tcsetattr|250-247-48-238
58714|code|CMP             R0, #0|0-40
58716|code|BLT             loc_E5E2|65-219
58718|code|MOVS            R2, #0x3C ; '<'|60-34
58720|code|MOVS            R1, #0|0-33
58722|code|ADD             R0, SP, #0x40 ; '@'|16-168
58724|code|BLX             memset|250-247-180-238
58728|code|MOV             R0, R4|32-70
58730|code|ADD             R1, SP, #0x40 ; '@'|16-169
58732|code|BLX             tcgetattr|250-247-16-239
58736|code|CMP             R0, #0|0-40
58738|code|BLT             loc_E600|69-219
58740|code|MOVS            R2, #0x20 ; ' '|32-34
58742|code|ADD.W           R0, SP, #0x15|13-241-21-0
58746|code|ADD.W           R1, SP, #0x51 ; 'Q'|13-241-81-1
58750|code|BLX             memcmp|250-247-218-237
58754|code|CBNZ            R0, loc_E590|40-185
58756|code|LDRB.W          R2, [SP,#0x1A]|157-248-26-32
58760|code|LDRB.W          R3, [SP,#0x56]|157-248-86-48
58764|code|CMP             R2, R3|154-66
58766|code|BEQ             loc_E5A4|9-208
58768|code|MOVS            R0, #0|0-32
58770|code|LDR             R1, =aTcsetattrFaile; "tcsetattr failed"|32-73
58772|code|BL              sub_A198|251-247-0-254
58776|code|LDR             R2, [SP,#0x7C]|31-154
58778|code|LDR             R3, [R5]|43-104
58780|code|CMP             R2, R3|154-66
58782|code|BNE             loc_E60A|52-209
58784|code|ADD             SP, SP, #0x84|33-176
58786|code|POP             {R4,R5,PC}|48-189
58788|code|LDR             R3, [SP,#0x40]|16-155
58790|code|LDR             R2, [SP,#4]|1-154
58792|code|CMP             R2, R3|154-66
58794|code|BNE             loc_E590|241-209
58796|code|LDR             R3, [SP,#0x44]|17-155
58798|code|LDR             R2, [SP,#8]|2-154
58800|code|CMP             R2, R3|154-66
58802|code|BNE             loc_E590|237-209
58804|code|LDR             R3, [SP,#0x48]|18-155
58806|code|LDR             R2, [SP,#0xC]|3-154
58808|code|CMP             R2, R3|154-66
58810|code|BNE             loc_E590|233-209
58812|code|LDR             R3, [SP,#0x4C]|19-155
58814|code|LDR             R2, [SP,#0x10]|4-154
58816|code|CMP             R2, R3|154-66
58818|code|BNE             loc_E590|229-209
58820|code|B               loc_E598|232-231
58822|code|MOVS            R0, #1|1-32
58824|code|LDR             R1, =aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|19-73
58826|code|BL              sub_A198|251-247-229-253
58830|code|ADD             R0, SP, #4|1-168
58832|code|BLX             cfmakeraw|250-247-108-237
58836|code|MOVS            R1, #0|0-33
58838|code|MOV             R0, R4|32-70
58840|code|ADD             R2, SP, #4|1-170
58842|code|BLX             tcsetattr|250-247-238-237
58846|code|CMP             R0, #0|0-40
58848|code|BGE             loc_E55E|189-218
58850|code|MOVS            R0, #1|1-32
58852|code|LDR             R1, =aTcsetattr_0; "tcsetattr"|13-73
58854|code|BL              sub_A198|251-247-215-253
58858|code|MOVS            R2, #0x3C ; '<'|60-34
58860|code|MOVS            R1, #0|0-33
58862|code|ADD             R0, SP, #0x40 ; '@'|16-168
58864|code|BLX             memset|250-247-110-238
58868|code|MOV             R0, R4|32-70
58870|code|ADD             R1, SP, #0x40 ; '@'|16-169
58872|code|BLX             tcgetattr|250-247-202-238
58876|code|CMP             R0, #0|0-40
58878|code|BGE             loc_E574|185-218
58880|code|MOVS            R0, #1|1-32
58882|code|LDR             R1, =(aXcfmakerawTcge+0xC); "tcgetattr"|7-73
58884|code|BL              sub_A198|251-247-200-253
58888|code|B               loc_E574|180-231
58890|code|BLX             __stack_chk_fail|250-247-160-237
58894|data|ALIGN 0x10|0-191
58896|data|DCD __stack_chk_guard|24-125-1-0
58900|data|DCD aTcsetattrFaile; "tcsetattr failed"|76-250-0-0
58904|data|DCD aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|40-250-0-0
58908|data|DCD aTcsetattr_0; "tcsetattr"|64-250-0-0
58912|data|DCD aXcfmakerawTcge+0xC; "tcgetattr"|52-250-0-0
58916|code|PUSH            {R4-R6,LR}|112-181
58918|code|MOV             R5, R2|21-70
58920|code|MOVS            R2, #0|0-34
58922|code|MOV             R4, R1|12-70
58924|code|MOV             R3, R2|19-70
58926|code|BLX             forkpty|250-247-164-238
58930|code|MOVS            R3, R4|35-28
58932|code|IT NE|24-191
58934|code|MOVNE           R3, #1|1-35
58936|code|CMP             R0, #0|0-40
58938|code|ITE LE|212-191
58940|code|MOVLE           R3, #0|0-35
58942|code|ANDGT.W         R3, R3, #1|3-240-1-3
58946|code|MOV             R6, R0|6-70
58948|code|CBZ             R3, loc_E650|35-177
58950|code|MOV             R0, R4|32-70
58952|code|BLX             strlen|250-247-12-238
58956|code|CMP             R0, R5|168-66
58958|code|BCS             loc_E654|1-210
58960|code|MOV             R0, R6|48-70
58962|code|POP             {R4-R6,PC}|112-189
58964|code|LDR             R0, =aStrlenNameLen; "strlen(name) < len"|2-72
58966|code|MOVS            R2, #0x88|136-34
58968|code|LDR             R1, =aXptyC; "xpty.c"|2-73
58970|code|LDR             R3, =aXforkpty; "xforkpty"|3-75
58972|code|BLX             __assert_fail|250-247-146-238
58976|data|DCD aStrlenNameLen; "strlen(name) < len"|96-250-0-0
58980|data|DCD aXptyC; "xpty.c"|116-250-0-0
58984|data|DCD aXforkpty; "xforkpty"|252-249-0-0
58988|code|PUSH            {R4,LR}|16-181
58990|code|SUB             SP, SP, #0x118|198-176
58992|code|MOV             R4, R0|4-70
58994|code|ADD             R0, SP, #4|1-168
58996|code|STR             R1, [SP]|0-145
58998|code|BLX             sigemptyset|250-247-74-238
59002|code|MOV             R0, R4|32-70
59004|code|MOV             R1, SP|105-70
59006|code|ADD             R2, SP, #0x8C|35-170
59008|code|CMP             R4, #0xE|14-44
59010|code|ITE EQ|12-191
59012|code|MOVEQ.W         R4, #0x20000000|79-240-0-84
59016|code|MOVNE.W         R4, #0x10000000|79-240-128-84
59020|code|STR             R4, [SP,#0x84]|33-148
59022|code|BLX             sigaction|250-247-118-237
59026|code|CMP             R0, #0|0-40
59028|code|BLT             loc_E69C|2-219
59030|code|LDR             R0, [SP,#0x8C]|35-152
59032|code|ADD             SP, SP, #0x118|70-176
59034|code|POP             {R4,PC}|16-189
59036|code|MOVS            R0, #1|1-32
59038|code|LDR             R1, =aSigaction_0; "sigaction"|2-73
59040|code|BL              sub_A198|251-247-122-253
59044|code|B               loc_E696|247-231
59046|data|ALIGN 4|0-191
59048|data|DCD aSigaction_0; "sigaction"|124-250-0-0
59052|code|PUSH.W          {R3-R9,LR}|45-233-248-67
59056|code|MOV             R6, R0|6-70
59058|code|LDR.W           R9, =(off_17A98 - 0xE6C0)|223-248-52-144
59062|code|MOV             R7, R1|15-70
59064|code|LDR             R5, =(off_17A94 - 0xE6C6)|12-77
59066|code|MOV             R8, R2|144-70
59068|code|ADD             R9, PC; off_17A98|249-68
59070|code|BL              .init_proc|250-247-223-252
59074|code|ADD             R5, PC; off_17A94|125-68
59076|code|RSB.W           R9, R5, R9|197-235-9-9
59080|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
59084|code|BEQ             locret_E6E2|9-208
59086|code|MOVS            R4, #0|0-36
59088|code|LDR.W           R3, [R5],#4|85-248-4-59
59092|code|MOV             R0, R6|48-70
59094|code|MOV             R1, R7|57-70
59096|code|MOV             R2, R8|66-70
59098|code|ADDS            R4, #1|1-52
59100|code|BLX             R3; sub_9AA8|152-71
59102|code|CMP             R4, R9|76-69
59104|code|BNE             loc_E6D0|246-209
59106|code|POP.W           {R3-R9,PC}|189-232-248-131
59110|data|ALIGN 4|0-191
59112|data|DCD off_17A98 - 0xE6C0|216-147-0-0
59116|data|DCD off_17A94 - 0xE6C6|206-147-0-0
59120|code|BX              LR|112-71
59122|data|ALIGN 4|0-191
59124|code|PUSH            {R3,LR}|8-181
59126|code|NOP|0-191
59128|code|POP             {R3,PC}|8-189
59130|data|DCW 0|0-0
96916|data|DCD sub_9AA8+1|169-154-0-0
96920|data|DCD sub_9A98+1|153-154-0-0
96924|data|DCD 0|0-0-0-0
96928|data|Elf32_Dyn <1, <1>>; DT_NEEDED libutil.so.1|1-0-0-0-1-0-0-0
96936|data|Elf32_Dyn <1, <0x39>>; DT_NEEDED libc.so.6|1-0-0-0-57-0-0-0
96944|data|Elf32_Dyn <1, <0x256>>; DT_NEEDED ld-linux.so.3|1-0-0-0-86-2-0-0
96952|data|Elf32_Dyn <0xC, <0x9081>>; DT_INIT|12-0-0-0-129-144-0-0
96960|data|Elf32_Dyn <0xD, <0xE6F5>>; DT_FINI|13-0-0-0-245-230-0-0
96968|data|Elf32_Dyn <0x19, <0x17A94>>; DT_INIT_ARRAY|25-0-0-0-148-122-1-0
96976|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
96984|data|Elf32_Dyn <0x1A, <0x17A98>>; DT_FINI_ARRAY|26-0-0-0-152-122-1-0
96992|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
97000|data|Elf32_Dyn <4, <0x81A0>>; DT_HASH|4-0-0-0-160-129-0-0
97008|data|Elf32_Dyn <0x6FFFFEF5, <0x83D4>>; DT_GNU_HASH|245-254-255-111-212-131-0-0
97016|data|Elf32_Dyn <5, <0x8AC4>>; DT_STRTAB|5-0-0-0-196-138-0-0
97024|data|Elf32_Dyn <6, <0x8644>>; DT_SYMTAB|6-0-0-0-68-134-0-0
97032|data|Elf32_Dyn <0xA, <0x28A>>; DT_STRSZ|10-0-0-0-138-2-0-0
97040|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
97048|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
97056|data|Elf32_Dyn <3, <0x17BA0>>; DT_PLTGOT|3-0-0-0-160-123-1-0
97064|data|Elf32_Dyn <2, <0x1F8>>; DT_PLTRELSZ|2-0-0-0-248-1-0-0
97072|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
97080|data|Elf32_Dyn <0x17, <0x8E88>>; DT_JMPREL|23-0-0-0-136-142-0-0
97088|data|Elf32_Dyn <0x11, <0x8E50>>; DT_REL|17-0-0-0-80-142-0-0
97096|data|Elf32_Dyn <0x12, <0x38>>; DT_RELSZ|18-0-0-0-56-0-0-0
97104|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
97112|data|Elf32_Dyn <0x6FFFFFFE, <0x8DE0>>; DT_VERNEED|254-255-255-111-224-141-0-0
97120|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
97128|data|Elf32_Dyn <0x6FFFFFF0, <0x8D4E>>; DT_VERSYM|240-255-255-111-78-141-0-0
97136|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
97184|data|DCD stru_17AA0|160-122-1-0
97188|data|DCD 0|0-0-0-0
97192|data|DCD 0|0-0-0-0
97196|data|DCD __imp_strstr|96-126-1-0
97200|data|DCD __imp_cfmakeraw|112-126-1-0
97204|data|DCD __imp_strcmp|236-125-1-0
97208|data|DCD __imp_printf|0-126-1-0
97212|data|DCD __imp_regerror|72-126-1-0
97216|data|DCD __imp_read|28-126-1-0
97220|data|DCD __imp_fflush|176-125-1-0
97224|data|DCD __imp_memmove|248-125-1-0
97228|data|DCD __imp_free|240-125-1-0
97232|data|DCD __imp_fgets|132-126-1-0
97236|data|DCD __imp_memcpy|228-125-1-0
97240|data|DCD __imp_time|208-125-1-0
97244|data|DCD __imp_memcmp|68-126-1-0
97248|data|DCD __imp_ctime|212-125-1-0
97252|data|DCD __imp___stack_chk_fail|84-126-1-0
97256|data|DCD __imp_realloc|40-126-1-0
97260|data|DCD __imp_regexec|152-125-1-0
97264|data|DCD __imp_poll|88-126-1-0
97268|data|DCD __imp_sigaction|36-126-1-0
97272|data|DCD __imp_fwrite|164-125-1-0
97276|data|DCD __imp_strcat|20-126-1-0
97280|data|DCD __imp_regfree|120-126-1-0
97284|data|DCD __imp_usleep|156-125-1-0
97288|data|DCD __imp_tcsetattr|32-126-1-0
97292|data|DCD __imp_strcpy|128-126-1-0
97296|data|DCD __imp_gettimeofday|24-126-1-0
97300|data|DCD __imp_puts|8-126-1-0
97304|data|DCD __imp_malloc|192-125-1-0
97308|data|DCD __imp___libc_start_main|216-125-1-0
97312|data|DCD __imp_strerror|252-125-1-0
97316|data|DCD __imp___ctype_tolower_loc|168-125-1-0
97320|data|DCD __imp___gmon_start__|144-126-1-0
97324|data|DCD __imp_open|232-125-1-0
97328|data|DCD __imp_getopt_long|104-126-1-0
97332|data|DCD __imp___ctype_b_loc|12-126-1-0
97336|data|DCD __imp_exit|52-126-1-0
97340|data|DCD __imp_strtoul|224-125-1-0
97344|data|DCD __imp_strlen|44-126-1-0
97348|data|DCD __imp_strchr|116-126-1-0
97352|data|DCD __imp_fprintf|56-126-1-0
97356|data|DCD __imp_fcntl|48-126-1-0
97360|data|DCD __imp___errno_location|196-125-1-0
97364|data|DCD __imp_snprintf|60-126-1-0
97368|data|DCD __imp___isoc99_sscanf|92-126-1-0
97372|data|DCD __imp___strdup|180-125-1-0
97376|data|DCD __imp_lockf|64-126-1-0
97380|data|DCD __imp_memset|108-126-1-0
97384|data|DCD __imp_strncpy|80-126-1-0
97388|data|DCD __imp___xpg_basename|124-126-1-0
97392|data|DCD __imp_write|204-125-1-0
97396|data|DCD __imp_memchr|220-125-1-0
97400|data|DCD __imp_sigemptyset|184-125-1-0
97404|data|DCD __imp_strrchr|200-125-1-0
97408|data|DCD __imp_syslog|4-126-1-0
97412|data|DCD __imp_sprintf|136-126-1-0
97416|data|DCD __imp_regcomp|188-125-1-0
97420|data|DCD __imp_vsnprintf|140-126-1-0
97424|data|DCD __imp_qsort|16-126-1-0
97428|data|DCD __imp_abort|160-125-1-0
97432|data|DCD __imp_close|76-126-1-0
97436|data|DCD __imp_forkpty|100-126-1-0
97440|data|DCD __imp___assert_fail|244-125-1-0
97444|data|DCD __imp_tcgetattr|172-125-1-0
97448|data|DCD __imp___gmon_start__|144-126-1-0
97452|data|ALIGN 0x10|0-0-0-0
97460|data|DCD 3|3-0-0-0
97464|data|DCD 0x3E8|232-3-0-0
97468|data|DCD aDevice; "device"|140-235-0-0
97548|data|DCD 1|1-0-0-0
97552|data|DCD 1|1-0-0-0
97556|data|ALIGN 8|255-255-255-255
97560|data|% 4; Copy of shared data|255-255-255-255
97564|data|% 4; Copy of shared data|255-255-255-255
97568|data|% 4; Copy of shared data|255-255-255-255
97572|data|ALIGN 8|255-255-255-255
97576|data|% 4; Copy of shared data|255-255-255-255
97580|data|% 4; Copy of shared data|255-255-255-255
97584|data|% 4; Copy of shared data|255-255-255-255
97588|data|% 1|255
97589|data|ALIGN 4|255-255-255
97592|data|% 4|255-255-255-255
97660|data|% 1|255
97661|data|ALIGN 0x10|255-255-255
97664|data|% 4|255-255-255-255
97668|data|% 4|255-255-255-255
