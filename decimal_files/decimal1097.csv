address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|193-16-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x213C; SHT file offset|60-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1768; File offset|104-23-0-0
60|data|DCD unk_1768; Virtual address|104-23-0-0
64|data|DCD 0x1768; Physical address|104-23-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1774; Size in file image|116-23-0-0
168|data|DCD 0x1774; Size in memory image|116-23-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E6C; File offset|108-30-0-0
188|data|DCD off_11E6C; Virtual address|108-30-1-0
192|data|DCD 0x11E6C; Physical address|108-30-1-0
196|data|DCD 0x1A8; Size in file image|168-1-0-0
200|data|DCD 0x1B0; Size in memory image|176-1-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E78; File offset|120-30-0-0
220|data|DCD stru_11E78; Virtual address|120-30-1-0
224|data|DCD 0x11E78; Physical address|120-30-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E6C; File offset|108-30-0-0
316|data|DCD off_11E6C; Virtual address|108-30-1-0
320|data|DCD 0x11E6C; Physical address|108-30-1-0
324|data|DCD 0x194; Size in file image|148-1-0-0
328|data|DCD 0x194; Size in memory image|148-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x17, 0xB1, 0xD9, 0x73, 8, 0x5C, 0x11, 0x74, 0x8E; Desc|23-177-217-115-8-92-17-116-142-171-142-205-208-96-121-50-113-231-124-40
436|data|DCD 3|3-0-0-0
440|data|DCD 0x1B|27-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x1B, 0x1F, 0x24|27-0-0-0-31-0-0-0-36-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_494 - byte_494, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_494 - byte_494, dword_11E74, 0, 3, 0, 0x14>|0-0-0-0-116-30-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_494, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|79-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aItmDeregistert - byte_494, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
612|data|Elf32_Sym <aStackChkGuard - byte_494, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|132-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
628|data|Elf32_Sym <aSgCmdsCloseDev - byte_494, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|166-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aStackChkFail - byte_494, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|5-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aSgLlModeSelect - byte_494, dword_0, 0, 0x12, 0, 0>; "sg_ll_mode_select6"|147-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aStderr - byte_494, dword_0, 0, 0x11, 0, 0>; "stderr"|65-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aFwrite - byte_494, dword_0, 0, 0x12, 0, 0>; "fwrite"|72-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aPuts - byte_494, dword_0, 0, 0x12, 0, 0>; "puts"|0-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aLibcStartMain - byte_494, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|94-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aGmonStart - byte_494, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
756|data|Elf32_Sym <aStrtoul - byte_494, dword_0, 0, 0x12, 0, 0>; "strtoul"|57-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aSgLlModeSense6 - byte_494, dword_0, 0, 0x12, 0, 0>; "sg_ll_mode_sense6"|207-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aMemset - byte_494, dword_0, 0, 0x12, 0, 0>; "memset"|36-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aPutchar - byte_494, dword_0, 0, 0x12, 0, 0>; "putchar"|22-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aPrintfChk - byte_494, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|235-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aFprintfChk - byte_494, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|43-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aSafeStrerror - byte_494, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aJvRegisterclas - byte_494, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
884|data|Elf32_Sym <aSgGetCategoryS - byte_494, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|121-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aItmRegistertmc - byte_494, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
916|data|Elf32_Sym <aSgCmdsOpenDevi - byte_494, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|187-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aStrncmp - byte_494, dword_0, 0, 0x12, 0, 0>; "strncmp"|248-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aAbort - byte_494, dword_0, 0, 0x12, 0, 0>; "abort"|30-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aBssEnd+1 - byte_494, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|197-1-0-0-28-32-1-0-0-0-0-0-16-0-24-0
980|data|Elf32_Sym <aEdata - byte_494, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|163-1-0-0-20-32-1-0-0-0-0-0-16-0-23-0
996|data|Elf32_Sym <aDataStart - byte_494, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|150-1-0-0-0-32-1-0-0-0-0-0-16-0-23-0
1012|data|Elf32_Sym <aEnd_0 - byte_494, _end, 0, 0x10, 0, 0x18>; "_end"|216-1-0-0-28-32-1-0-0-0-0-0-16-0-24-0
1028|data|Elf32_Sym <aBssEnd - byte_494, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|196-1-0-0-28-32-1-0-0-0-0-0-16-0-24-0
1044|data|Elf32_Sym <aLibcCsuInit - byte_494, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|237-1-0-0-253-17-0-0-64-0-0-0-18-0-13-0
1060|data|Elf32_Sym <aBssStart - byte_494, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|170-1-0-0-20-32-1-0-0-0-0-0-16-0-24-0
1076|data|Elf32_Sym <aLibcStartMain+0xD - byte_494, main+1, 0x790, 0x12, 0, 0xD>; "main"|107-1-0-0-49-9-0-0-144-7-0-0-18-0-13-0
1092|data|Elf32_Sym <aLibcCsuInit+0xA - byte_494, .init_proc, 0, 0x12, 0, 0xB>; "_init"|247-1-0-0-44-8-0-0-0-0-0-0-18-0-11-0
1108|data|Elf32_Sym <aLibcCsuFini - byte_494, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|221-1-0-0-61-18-0-0-2-0-0-0-18-0-13-0
1124|data|Elf32_Sym <aBssStart_0 - byte_494, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|182-1-0-0-20-32-1-0-0-0-0-0-16-0-24-0
1140|data|Elf32_Sym <aLibcCsuFini+0xA - byte_494, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|231-1-0-0-64-18-0-0-0-0-0-0-18-0-14-0
1156|data|Elf32_Sym <aEnd - byte_494, _end, 0, 0x10, 0, 0x18>; "__end__"|208-1-0-0-28-32-1-0-0-0-0-0-16-0-24-0
1172|data|DCB 0|0
1173|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1190|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1218|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1233|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1253|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1279|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1293|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1319|data|DCB "sg_ll_mode_select6",0|115-103-95-108-108-95-109-111-100-101-95-115-101-108-101-99-116-54-0
1338|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1359|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1379|data|DCB "sg_ll_mode_sense6",0|115-103-95-108-108-95-109-111-100-101-95-115-101-110-115-101-54-0
1397|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1407|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1420|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
1428|data|DCB "puts",0|112-117-116-115-0
1433|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1450|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1458|data|DCB "abort",0|97-98-111-114-116-0
1464|data|DCB "memset",0|109-101-109-115-101-116-0
1471|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1485|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
1493|data|DCB "stderr",0|115-116-100-101-114-114-0
1500|data|DCB "fwrite",0|102-119-114-105-116-101-0
1507|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1522|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1540|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1560|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1578|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1591|data|DCB "_edata",0|95-101-100-97-116-97-0
1598|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1610|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1624|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1636|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1644|data|DCB "_end",0|95-101-110-100-0
1649|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1665|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1681|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1691|data|DCB 0|0
1692|data|DCW 0|0-0
1694|data|DCW 0|0-0
1696|data|DCW 0|0-0
1698|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1700|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1702|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1704|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
1706|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1708|data|DCW 0; local  symbol: sg_ll_mode_select6|0-0
1710|data|DCW 2; stderr@@GLIBC_2.4|2-0
1712|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1714|data|DCW 2; puts@@GLIBC_2.4|2-0
1716|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1718|data|DCW 0; local  symbol: __gmon_start__|0-0
1720|data|DCW 2; strtoul@@GLIBC_2.4|2-0
1722|data|DCW 0; local  symbol: sg_ll_mode_sense6|0-0
1724|data|DCW 2; memset@@GLIBC_2.4|2-0
1726|data|DCW 2; putchar@@GLIBC_2.4|2-0
1728|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
1730|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1732|data|DCW 0; local  symbol: safe_strerror|0-0
1734|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1736|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
1738|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1740|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
1742|data|DCW 2; strncmp@@GLIBC_2.4|2-0
1744|data|DCW 2; abort@@GLIBC_2.4|2-0
1746|data|DCW 1; global symbol: _bss_end__|1-0
1748|data|DCW 1; global symbol: _edata|1-0
1750|data|DCW 1; global symbol: __data_start|1-0
1752|data|DCW 1; global symbol: _end|1-0
1754|data|DCW 1; global symbol: __bss_end__|1-0
1756|data|DCW 1; global symbol: __libc_csu_init|1-0
1758|data|DCW 1; global symbol: __bss_start|1-0
1760|data|DCW 1; global symbol: main|1-0
1762|data|DCW 1; global symbol: _init|1-0
1764|data|DCW 1; global symbol: __libc_csu_fini|1-0
1766|data|DCW 1; global symbol: __bss_start__|1-0
1768|data|DCW 1; global symbol: _fini|1-0
1770|data|DCW 1; global symbol: __end__|1-0
1772|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_494, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-112-1-0-0-16-0-0-0-32-0-0-0
1788|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_494, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-253-1-0-0-0-0-0-0
1804|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_494, 0x10, 0>; "libc.so.6"|1-0-1-0-225-0-0-0-16-0-0-0-0-0-0-0
1820|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_494, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-253-1-0-0-0-0-0-0
1836|data|Elf32_Rel <0x11E6C, 0x17>; R_ARM_RELATIVE|108-30-1-0-23-0-0-0
1844|data|Elf32_Rel <0x11E70, 0x17>; R_ARM_RELATIVE|112-30-1-0-23-0-0-0
1852|data|Elf32_Rel <0x11FD8, 0x17>; R_ARM_RELATIVE|216-31-1-0-23-0-0-0
1860|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
1868|data|Elf32_Rel <0x11FF4, 0x17>; R_ARM_RELATIVE|244-31-1-0-23-0-0-0
1876|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
1884|data|Elf32_Rel <0x11FDC, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|220-31-1-0-21-3-0-0
1892|data|Elf32_Rel <0x11FE0, 0x415>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|224-31-1-0-21-4-0-0
1900|data|Elf32_Rel <0x11FE4, 0x515>; R_ARM_GLOB_DAT __stack_chk_guard|228-31-1-0-21-5-0-0
1908|data|Elf32_Rel <0x11FE8, 0x915>; R_ARM_GLOB_DAT stderr|232-31-1-0-21-9-0-0
1916|data|Elf32_Rel <0x11FEC, 0xD15>; R_ARM_GLOB_DAT __gmon_start__|236-31-1-0-21-13-0-0
1924|data|Elf32_Rel <0x11FF8, 0x1515>; R_ARM_GLOB_DAT _Jv_RegisterClasses|248-31-1-0-21-21-0-0
1932|data|Elf32_Rel <0x11FFC, 0x1715>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|252-31-1-0-21-23-0-0
1940|data|Elf32_Rel <0x11F8C, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|140-31-1-0-22-3-0-0
1948|data|Elf32_Rel <0x11F90, 0x616>; R_ARM_JUMP_SLOT sg_cmds_close_device|144-31-1-0-22-6-0-0
1956|data|Elf32_Rel <0x11F94, 0x716>; R_ARM_JUMP_SLOT __stack_chk_fail|148-31-1-0-22-7-0-0
1964|data|Elf32_Rel <0x11F98, 0x816>; R_ARM_JUMP_SLOT sg_ll_mode_select6|152-31-1-0-22-8-0-0
1972|data|Elf32_Rel <0x11F9C, 0xA16>; R_ARM_JUMP_SLOT fwrite|156-31-1-0-22-10-0-0
1980|data|Elf32_Rel <0x11FA0, 0xB16>; R_ARM_JUMP_SLOT puts|160-31-1-0-22-11-0-0
1988|data|Elf32_Rel <0x11FA4, 0xC16>; R_ARM_JUMP_SLOT __libc_start_main|164-31-1-0-22-12-0-0
1996|data|Elf32_Rel <0x11FA8, 0xD16>; R_ARM_JUMP_SLOT __gmon_start__|168-31-1-0-22-13-0-0
2004|data|Elf32_Rel <0x11FAC, 0xE16>; R_ARM_JUMP_SLOT strtoul|172-31-1-0-22-14-0-0
2012|data|Elf32_Rel <0x11FB0, 0xF16>; R_ARM_JUMP_SLOT sg_ll_mode_sense6|176-31-1-0-22-15-0-0
2020|data|Elf32_Rel <0x11FB4, 0x1016>; R_ARM_JUMP_SLOT memset|180-31-1-0-22-16-0-0
2028|data|Elf32_Rel <0x11FB8, 0x1116>; R_ARM_JUMP_SLOT putchar|184-31-1-0-22-17-0-0
2036|data|Elf32_Rel <0x11FBC, 0x1216>; R_ARM_JUMP_SLOT __printf_chk|188-31-1-0-22-18-0-0
2044|data|Elf32_Rel <0x11FC0, 0x1316>; R_ARM_JUMP_SLOT __fprintf_chk|192-31-1-0-22-19-0-0
2052|data|Elf32_Rel <0x11FC4, 0x1416>; R_ARM_JUMP_SLOT safe_strerror|196-31-1-0-22-20-0-0
2060|data|Elf32_Rel <0x11FC8, 0x1616>; R_ARM_JUMP_SLOT sg_get_category_sense_str|200-31-1-0-22-22-0-0
2068|data|Elf32_Rel <0x11FCC, 0x1816>; R_ARM_JUMP_SLOT sg_cmds_open_device|204-31-1-0-22-24-0-0
2076|data|Elf32_Rel <0x11FD0, 0x1916>; R_ARM_JUMP_SLOT strncmp|208-31-1-0-22-25-0-0
2084|data|Elf32_Rel <0x11FD4, 0x1A16>; R_ARM_JUMP_SLOT abort|212-31-1-0-22-26-0-0
2092|code|PUSH            {R3,LR}; _init|8-64-45-233
2096|code|BL              sub_1108|52-2-0-235
2100|code|POP             {R3,PC}|8-128-189-232
2104|code|PUSH            {LR}|4-224-45-229
2108|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x848)|4-224-159-229
2112|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2116|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2120|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x848|56-23-1-0
2124|code|ADR             R12, 0x854|0-198-143-226
2128|code|ADD             R12, R12, #0x11000|17-202-140-226
2132|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x11854)]!; __imp___cxa_finalize|56-247-188-229
2136|code|ADR             R12, 0x860|0-198-143-226
2140|code|ADD             R12, R12, #0x11000|17-202-140-226
2144|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x11860)]!; __imp_sg_cmds_close_device|48-247-188-229
2148|code|ADR             R12, 0x86C|0-198-143-226
2152|code|ADD             R12, R12, #0x11000|17-202-140-226
2156|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x1186C)]!; __imp___stack_chk_fail|40-247-188-229
2160|code|ADR             R12, 0x878|0-198-143-226
2164|code|ADD             R12, R12, #0x11000|17-202-140-226
2168|code|LDR             PC, [R12,#(sg_ll_mode_select6_ptr - 0x11878)]!; __imp_sg_ll_mode_select6|32-247-188-229
2172|code|ADR             R12, 0x884|0-198-143-226
2176|code|ADD             R12, R12, #0x11000|17-202-140-226
2180|code|LDR             PC, [R12,#(fwrite_ptr - 0x11884)]!; __imp_fwrite|24-247-188-229
2184|code|ADR             R12, 0x890|0-198-143-226
2188|code|ADD             R12, R12, #0x11000|17-202-140-226
2192|code|LDR             PC, [R12,#(puts_ptr - 0x11890)]!; __imp_puts|16-247-188-229
2196|code|ADR             R12, 0x89C|0-198-143-226
2200|code|ADD             R12, R12, #0x11000|17-202-140-226
2204|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x1189C)]!; __imp___libc_start_main|8-247-188-229
2208|code|ADR             R12, 0x8A8|0-198-143-226
2212|code|ADD             R12, R12, #0x11000|17-202-140-226
2216|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x118A8)]!; __imp___gmon_start__|0-247-188-229
2220|code|ADR             R12, 0x8B4|0-198-143-226
2224|code|ADD             R12, R12, #0x11000|17-202-140-226
2228|code|LDR             PC, [R12,#(strtoul_ptr - 0x118B4)]!; __imp_strtoul|248-246-188-229
2232|code|ADR             R12, 0x8C0|0-198-143-226
2236|code|ADD             R12, R12, #0x11000|17-202-140-226
2240|code|LDR             PC, [R12,#(sg_ll_mode_sense6_ptr - 0x118C0)]!; __imp_sg_ll_mode_sense6|240-246-188-229
2244|code|ADR             R12, 0x8CC|0-198-143-226
2248|code|ADD             R12, R12, #0x11000|17-202-140-226
2252|code|LDR             PC, [R12,#(memset_ptr - 0x118CC)]!; __imp_memset|232-246-188-229
2256|code|ADR             R12, 0x8D8|0-198-143-226
2260|code|ADD             R12, R12, #0x11000|17-202-140-226
2264|code|LDR             PC, [R12,#(putchar_ptr - 0x118D8)]!; __imp_putchar|224-246-188-229
2268|code|ADR             R12, 0x8E4|0-198-143-226
2272|code|ADD             R12, R12, #0x11000|17-202-140-226
2276|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x118E4)]!; __imp___printf_chk|216-246-188-229
2280|code|ADR             R12, 0x8F0|0-198-143-226
2284|code|ADD             R12, R12, #0x11000|17-202-140-226
2288|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x118F0)]!; __imp___fprintf_chk|208-246-188-229
2292|code|ADR             R12, 0x8FC|0-198-143-226
2296|code|ADD             R12, R12, #0x11000|17-202-140-226
2300|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x118FC)]!; __imp_safe_strerror|200-246-188-229
2304|code|ADR             R12, 0x908|0-198-143-226
2308|code|ADD             R12, R12, #0x11000|17-202-140-226
2312|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x11908)]!; __imp_sg_get_category_sense_str|192-246-188-229
2316|code|ADR             R12, 0x914|0-198-143-226
2320|code|ADD             R12, R12, #0x11000|17-202-140-226
2324|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x11914)]!; __imp_sg_cmds_open_device|184-246-188-229
2328|code|ADR             R12, 0x920|0-198-143-226
2332|code|ADD             R12, R12, #0x11000|17-202-140-226
2336|code|LDR             PC, [R12,#(strncmp_ptr - 0x11920)]!; __imp_strncmp|176-246-188-229
2340|code|ADR             R12, 0x92C|0-198-143-226
2344|code|ADD             R12, R12, #0x11000|17-202-140-226
2348|code|LDR             PC, [R12,#(abort_ptr - 0x1192C)]!; __imp_abort|168-246-188-229
2352|code|LDR.W           R3, =(_GLOBAL_OFFSET_TABLE_ - 0x948)|223-248-160-54
2356|code|CMP             R0, #1|1-40
2358|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2362|code|SUB.W           SP, SP, #0x1080|173-245-132-93
2366|code|LDR.W           R2, =(__stack_chk_guard_ptr - 0x11F80)|223-248-152-38
2370|code|SUB             SP, SP, #0xC|131-176
2372|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
2374|code|MOV             R7, R0|7-70
2376|code|STR             R3, [SP,#0x10B0+var_1084]|11-147
2378|code|LDR             R3, [R3,R2]; __stack_chk_guard|155-88
2380|code|LDR             R2, [R3]|26-104
2382|code|STR             R3, [SP,#0x10B0+var_1088]|10-147
2384|code|ADD.W           R3, SP, #0x10B0+var_30|13-245-132-83
2388|code|ADD.W           R3, R3, #4|3-241-4-3
2392|code|STR             R2, [R3]|26-96
2394|code|BLE.W           loc_CF6|64-243-204-129
2398|code|LDR.W           R9, =(aF - 0x972); "-f="|223-248-124-150
2402|code|MOVS            R3, #0|0-35
2404|code|LDR.W           R2, =(aF - 0x976); "-f="|223-248-120-38
2408|code|MOV             R11, R3|155-70
2410|code|LDR.W           R8, =(dword_12018 - 0x982)|223-248-120-134
2414|code|ADD             R9, PC; "-f="|249-68
2416|code|STR             R3, [SP,#0x10B0+pc]|7-147
2418|code|ADD             R2, PC; "-f="|122-68
2420|code|STR             R3, [SP,#0x10B0+device_name]|6-147
2422|code|MOV             R10, R1|138-70
2424|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
2428|code|STR             R2, [SP,#0x10B0+s2]|8-146
2430|code|ADD             R8, PC; dword_12018|248-68
2432|code|STR             R3, [SP,#0x10B0+var_108C]|9-147
2434|code|MOVS            R5, #1|1-37
2436|code|B               loc_9A6|15-224
2438|code|LDRB            R2, [R4,#1]|98-120
2440|code|CMP             R2, #0x76 ; 'v'|118-42
2442|code|BNE.W           loc_AA8|64-240-141-128
2446|code|LDRB            R2, [R4,#2]|162-120
2448|code|CMP             R2, #0|0-42
2450|code|BNE.W           loc_AA8|64-240-137-128
2454|code|LDR.W           R3, [R8]|216-248-0-48
2458|code|ADDS            R3, #1|1-51
2460|code|STR.W           R3, [R8]|200-248-0-48
2464|code|ADDS            R5, #1|1-53
2466|code|CMP             R5, R7|189-66
2468|code|BEQ             loc_9D6|23-208
2470|code|LDR.W           R4, [R10,#4]!|90-248-4-79
2474|code|LDRB            R6, [R4]|38-120
2476|code|CMP             R6, #0x2D ; '-'|45-46
2478|code|BEQ             loc_986|234-208
2480|code|MOV             R0, R4; s1|32-70
2482|code|MOV             R1, R9; s2|73-70
2484|code|MOVS            R2, #3; n|3-34
2486|code|BLX             strncmp|255-247-176-239
2490|code|CMP             R0, #0|0-40
2492|code|BEQ.W           loc_B06|0-240-163-128
2496|code|CMP             R6, #0x2D ; '-'|45-46
2498|code|BEQ.W           loc_CE2|0-240-142-129
2502|code|LDR             R3, [SP,#0x10B0+device_name]|6-155
2504|code|CMP             R3, #0|0-43
2506|code|BNE.W           loc_D02|64-240-154-129
2510|code|ADDS            R5, #1|1-53
2512|code|STR             R4, [SP,#0x10B0+device_name]|6-148
2514|code|CMP             R5, R7|189-66
2516|code|BNE             loc_9A6|231-209
2518|code|LDR             R0, [SP,#0x10B0+device_name]; device_name|6-152
2520|code|CMP             R0, #0|0-40
2522|code|BEQ.W           loc_CF6|0-240-140-129
2526|code|LDR.W           R4, =(dword_12018 - 0x9E8)|223-248-8-70
2530|code|MOVS            R1, #0; read_only|0-33
2532|code|ADD             R4, PC; dword_12018|124-68
2534|code|LDR             R2, [R4]; verbose|34-104
2536|code|BLX             sg_cmds_open_device|255-247-144-239
2540|code|SUBS            R6, R0, #0|6-30
2542|code|BLT.W           loc_CB8|192-242-99-129
2546|code|CMP.W           R11, #0|187-241-0-15
2550|code|BNE.W           loc_B28|64-240-151-128
2554|code|LDR             R3, [SP,#0x10B0+pc]|7-155
2556|code|CMP             R3, #0|0-43
2558|code|BEQ.W           loc_BE0|0-240-239-128
2562|code|ADD             R5, SP, #0x10B0+s|33-173
2564|code|MOV             R1, R11; c|89-70
2566|code|MOVS            R2, #0x76 ; 'v'; n|118-34
2568|code|ADD             R7, SP, #0x10B0+var_1028|34-175
2570|code|MOV             R0, R5; s|40-70
2572|code|MOV.W           R9, #0xA|79-240-10-9
2576|code|BLX             memset|255-247-88-239
2580|code|LDR.W           R1, =(dword_12008 - 0xA22)|223-248-212-21
2584|code|MOVS            R3, #2|2-35
2586|code|MOV.W           R12, #0x6C ; 'l'|79-240-108-12
2590|code|ADD             R1, PC; dword_12008|121-68
2592|code|MOV.W           LR, #0x68 ; 'h'|79-240-104-14
2596|code|STRB.W          R12, [R7,#8]|135-248-8-192
2600|code|MOVS            R2, #0x20 ; ' '; n|32-34
2602|code|LDR.W           R0, [R1],#4|81-248-4-11
2606|code|MOV.W           R8, #1|79-240-1-8
2610|code|STRB.W          LR, [R7,#9]|135-248-9-224
2614|code|STRB.W          R3, [R7,#0x2B]|135-248-43-48
2618|code|STR.W           R0, [R7,#-4]|71-248-4-12
2622|code|LDM             R1, {R0,R1}|3-201
2624|code|STRB.W          R3, [R7,#0x2F]|135-248-47-48
2628|code|STRB.W          R9, [R7,#0x2E]|135-248-46-144
2632|code|STM.W           R7, {R0,R1}|135-232-3-0
2636|code|MOV             R1, R11; c|89-70
2638|code|ADD             R0, SP, #0x10B0+var_FF8; s|46-168
2640|code|BLX             memset|255-247-56-239
2644|code|LDR             R0, [R4]|32-104
2646|code|LDR             R3, [SP,#0x10B0+var_108C]|9-155
2648|code|MOV             R2, R11; sp|90-70
2650|code|CMP             R0, #0|0-40
2652|code|STR.W           R8, [SP,#0x10B0+noisy]; noisy|205-248-4-128
2656|code|ADD.W           R7, R5, R3|5-235-3-7
2660|code|MOV             R1, R8; pf|65-70
2662|code|MOV             R3, R5; paramp|43-70
2664|code|IT NE|24-191
2666|code|MOVNE           R0, #2|2-32
2668|code|MOVS            R5, #0x76 ; 'v'|118-37
2670|code|STR             R0, [SP,#0x10B0+verbose]; verbose|2-144
2672|code|STR             R5, [SP,#0x10B0+param_len]; param_len|0-149
2674|code|MOV             R0, R6; sg_fd|48-70
2676|code|MOVS            R5, #0x81|129-37
2678|code|STRB.W          R5, [R7,#0x34]|135-248-52-80
2682|code|BLX             sg_ll_mode_select6|255-247-250-238
2686|code|LDR             R3, [R4]|35-104
2688|code|MOV             R7, R0|7-70
2690|code|CMP             R0, #0|0-40
2692|code|BNE.W           loc_BBA|64-240-153-128
2696|code|CMP             R3, #0|0-43
2698|code|BEQ.W           loc_BA4|0-240-139-128
2702|code|LDR.W           R0, =(aFailPathsSucce - 0xA9C); "fail paths successful\n"|223-248-96-5
2706|code|MOV             R1, R8; size|65-70
2708|code|LDR.W           R3, =dword_68|223-248-92-53
2712|code|ADD             R0, PC; "fail paths successful\n"|120-68
2714|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
2716|code|MOVS            R2, #0x16; n|22-34
2718|code|LDR             R3, [R4,R3]|227-88
2720|code|LDR             R3, [R3]; s|27-104
2722|code|BLX             fwrite|255-247-236-238
2726|code|B               loc_BA4|125-224
2728|code|MOV             R0, R4; s1|32-70
2730|code|LDR             R1, [SP,#0x10B0+s2]; s2|8-153
2732|code|MOVS            R2, #3; n|3-34
2734|code|BLX             strncmp|255-247-52-239
2738|code|CBZ             R0, loc_B06|64-179
2740|code|LDRB            R2, [R4,#1]|98-120
2742|code|CMP             R2, #0x61 ; 'a'|97-42
2744|code|BEQ             loc_B1A|47-208
2746|code|CMP             R2, #0x56 ; 'V'|86-42
2748|code|BNE             loc_9C0|128-209
2750|code|LDRB            R2, [R4,#2]|162-120
2752|code|CMP             R2, #0|0-42
2754|code|BNE.W           loc_9C0|127-244-125-175
2758|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
2760|code|MOVS            R1, #1|1-33
2762|code|LDR.W           R0, =dword_68|223-248-40-5
2766|code|STR             R2, [SP,#0x10B0+device_name]|6-146
2768|code|LDR.W           R3, =(a10620130507 - 0xADE); "1.06 20130507"|223-248-36-53
2772|code|LDR             R0, [R4,R0]|32-88
2774|code|LDR.W           R2, =(aSgRdacVersionS - 0xAE0); "sg_rdac version: %s\n"|223-248-36-37
2778|code|ADD             R3, PC; "1.06 20130507"|123-68
2780|code|ADD             R2, PC; "sg_rdac version: %s\n"|122-68
2782|code|LDR             R0, [R0]|0-104
2784|code|BLX             __fprintf_chk|255-247-2-239
2788|code|LDR.W           R12, [SP,#0x10B0+device_name]|221-248-24-192
2792|code|MOV             R0, R12|96-70
2794|code|ADD.W           R3, SP, #0x10B0+var_30|13-245-132-83
2798|code|ADDS            R3, #4|4-51
2800|code|LDR             R2, [R3]|26-104
2802|code|LDR             R3, [SP,#0x10B0+var_1088]|10-155
2804|code|LDR             R3, [R3]|27-104
2806|code|CMP             R2, R3|154-66
2808|code|BNE.W           loc_FAE|64-240-89-130
2812|code|ADD.W           SP, SP, #0x1080|13-245-132-93
2816|code|ADD             SP, SP, #0xC|3-176
2818|code|POP.W           {R4-R11,PC}|189-232-240-143
2822|code|LDR             R3, [SP,#0x10B0+pc]|7-155
2824|code|MOVS            R1, #0; endptr|0-33
2826|code|ADDS            R0, R4, #3; nptr|224-28
2828|code|MOV             R2, R1; base|10-70
2830|code|ADDS            R3, #1|1-51
2832|code|STR             R3, [SP,#0x10B0+pc]|7-147
2834|code|BLX             strtoul|255-247-204-238
2838|code|STR             R0, [SP,#0x10B0+var_108C]|9-144
2840|code|B               loc_9A0|66-231
2842|code|LDRB            R2, [R4,#2]|162-120
2844|code|CMP             R2, #0|0-42
2846|code|BNE.W           loc_9C0|127-244-79-175
2850|code|ADD.W           R11, R11, #1|11-241-1-11
2854|code|B               loc_9A0|59-231
2856|code|ADD             R5, SP, #0x10B0+s|33-173
2858|code|MOVS            R1, #0; c|0-33
2860|code|MOVS            R2, #0x76 ; 'v'; n|118-34
2862|code|ADD             R7, SP, #0x10B0+var_1028|34-175
2864|code|MOV             R0, R5; s|40-70
2866|code|MOV.W           R8, #1|79-240-1-8
2870|code|BLX             memset|255-247-198-238
2874|code|LDR.W           R1, =(dword_12008 - 0xB48)|223-248-196-20
2878|code|LDR.W           LR, [R4]|212-248-0-224
2882|code|MOVS            R2, #0; sp|0-34
2884|code|ADD             R1, PC; dword_12008|121-68
2886|code|MOV             R3, R5; paramp|43-70
2888|code|CMP             LR, R2|150-69
2890|code|MOV.W           R12, #0x6C ; 'l'|79-240-108-12
2894|code|LDR.W           R9, [R1],#4|81-248-4-155
2898|code|MOV.W           R10, #0x76 ; 'v'|79-240-118-10
2902|code|IT NE|24-191
2904|code|MOVNE.W         LR, #2|79-240-2-14
2908|code|LDM             R1, {R0,R1}|3-201
2910|code|STR.W           LR, [SP,#0x10B0+verbose]; verbose|205-248-8-224
2914|code|MOV.W           LR, #0xA|79-240-10-14
2918|code|STR.W           R8, [SP,#0x10B0+noisy]; noisy|205-248-4-128
2922|code|STM.W           R7, {R0,R1}|135-232-3-0
2926|code|MOV             R1, R8; pf|65-70
2928|code|STR.W           R10, [SP,#0x10B0+param_len]; param_len|205-248-0-160
2932|code|MOV             R0, R6; sg_fd|48-70
2934|code|STR.W           R9, [R7,#-4]|71-248-4-156
2938|code|MOVS            R7, #0x68 ; 'h'|104-39
2940|code|STRB.W          R12, [R5,#0xC]|133-248-12-192
2944|code|STRB            R7, [R5,#0xD]|111-115
2946|code|MOVS            R7, #2|2-39
2948|code|STRB.W          LR, [R5,#0x32]|133-248-50-224
2952|code|STRB.W          R7, [R5,#0x33]|133-248-51-112
2956|code|STRB.W          R8, [R5,#0x2F]|133-248-47-128
2960|code|BLX             sg_ll_mode_select6|255-247-110-238
2964|code|LDR             R3, [R4]|35-104
2966|code|MOV             R7, R0|7-70
2968|code|CMP             R0, #0|0-40
2970|code|BNE.W           loc_E88|64-240-117-129
2974|code|CMP             R3, #0|0-43
2976|code|BNE.W           loc_EA8|64-240-130-129
2980|code|MOV             R0, R6; device_fd|48-70
2982|code|BLX             sg_cmds_close_device|255-247-88-238
2986|code|CMP             R0, #0|0-40
2988|code|BLT.W           loc_D68|192-242-220-128
2992|code|CMP             R7, #0|0-47
2994|code|ITE GE|172-191
2996|code|MOVGE           R0, R7|56-70
2998|code|MOVLT           R0, #0x63 ; 'c'|99-32
3000|code|B               loc_AEA|151-231
3002|code|ADD             R4, SP, #0x10B0+var_107C|13-172
3004|code|MOVS            R1, #0x50 ; 'P'|80-33
3006|code|MOV             R2, R4|34-70
3008|code|BLX             sg_get_category_sense_str|255-247-158-238
3012|code|LDR             R5, [SP,#0x10B0+var_1084]|11-157
3014|code|LDR.W           R0, =dword_68|223-248-44-4
3018|code|MOV             R1, R8|65-70
3020|code|LDR.W           R2, =(aFailPathsPageL - 0xBD8); "fail paths page (lun=%d) failed: %s\n"|223-248-52-36
3024|code|LDR             R3, [SP,#0x10B0+var_108C]|9-155
3026|code|LDR             R0, [R5,R0]|40-88
3028|code|ADD             R2, PC; "fail paths page (lun=%d) failed: %s\n"|122-68
3030|code|STR             R4, [SP,#0x10B0+param_len]|0-148
3032|code|LDR             R0, [R0]|0-104
3034|code|BLX             __fprintf_chk|255-247-134-238
3038|code|B               loc_BA4|225-231
3040|code|LDR             R2, [R4]|34-104
3042|code|MOVS            R3, #0xFC|252-35
3044|code|LDR             R1, [SP,#0x10B0+pc]; dbd|7-153
3046|code|ADD             R5, SP, #0x10B0+s|33-173
3048|code|STR             R3, [SP,#0x10B0+verbose]; mx_resp_len|2-147
3050|code|MOV.W           R8, #1|79-240-1-8
3054|code|STR             R2, [SP,#0x10B0+var_10A0]; verbose|4-146
3056|code|MOVS            R3, #0x2C ; ','; pg_code|44-35
3058|code|STR             R1, [SP,#0x10B0+param_len]; sub_pg_code|0-145
3060|code|MOV             R2, R1; pc|10-70
3062|code|STR             R5, [SP,#0x10B0+noisy]; resp|1-149
3064|code|STR.W           R8, [SP,#0x10B0+var_10A4]; noisy|205-248-12-128
3068|code|BLX             sg_ll_mode_sense6|255-247-92-238
3072|code|MOV             R7, R0|7-70
3074|code|CMP             R0, #0|0-40
3076|code|BNE.W           loc_D18|64-240-136-128
3080|code|LDR             R3, [R4]|35-104
3082|code|CMP             R3, #0|0-43
3084|code|BNE.W           loc_EBE|64-240-87-129
3088|code|LDRB            R3, [R5,#3]|235-120
3090|code|LDR             R0, =(aRdacLegacyPage - 0xC1A); "RDAC Legacy page"|253-72
3092|code|ADDS            R3, #4|4-51
3094|code|ADD             R0, PC; "RDAC Legacy page"|120-68
3096|code|ADD             R5, R3|29-68
3098|code|BLX             puts|255-247-54-238
3102|code|LDR             R1, =(aControllerSeri - 0xC28); "  Controller serial: %s\n"|251-73
3104|code|ADDS            R2, R5, #2|170-28
3106|code|MOVS            R0, #1|1-32
3108|code|ADD             R1, PC; "  Controller serial: %s\n"|121-68
3110|code|BLX             __printf_chk|255-247-90-238
3114|code|LDR             R1, =(aAlternateContr - 0xC36); "  Alternate controller serial: %s\n"|249-73
3116|code|ADD.W           R2, R5, #0x12|5-241-18-2
3120|code|MOVS            R0, #1|1-32
3122|code|ADD             R1, PC; "  Alternate controller serial: %s\n"|121-68
3124|code|BLX             __printf_chk|255-247-82-238
3128|code|LDR             R1, =(aRdacModeRedund - 0xC40); "  RDAC mode (redundant processor): "|246-73
3130|code|MOVS            R0, #1|1-32
3132|code|ADD             R1, PC; "  RDAC mode (redundant processor): "|121-68
3134|code|BLX             __printf_chk|255-247-78-238
3138|code|LDRB.W          R2, [R5,#0x22]|149-248-34-32
3142|code|CMP             R2, #0|0-42
3144|code|BEQ.W           loc_EB2|0-240-51-129
3148|code|CMP             R2, #1|1-42
3150|code|BEQ.W           loc_D8E|0-240-158-128
3154|code|LDR             R1, =(aUnknownControl - 0xC5A); "(Unknown controller status 0x%x); "|241-73
3156|code|MOVS            R0, #1|1-32
3158|code|ADD             R1, PC; "(Unknown controller status 0x%x); "|121-68
3160|code|BLX             __printf_chk|255-247-64-238
3164|code|LDRB.W          R2, [R5,#0x23]|149-248-35-32
3168|code|CMP             R2, #1|1-42
3170|code|BEQ.W           loc_F8E|0-240-148-129
3174|code|BCC.W           loc_F84|192-240-141-129
3178|code|CMP             R2, #2|2-42
3180|code|BNE.W           loc_F78|64-240-132-129
3184|code|LDR             R0, =(aDualActiveMode - 0xC76); "Dual active mode"|234-72
3186|code|ADD             R0, PC; "Dual active mode"|120-68
3188|code|BLX             puts|255-247-8-238
3192|code|LDR             R1, =(aRdacModeAltern - 0xC80); "  RDAC mode (alternate processor): "|233-73
3194|code|MOVS            R0, #1|1-32
3196|code|ADD             R1, PC; "  RDAC mode (alternate processor): "|121-68
3198|code|BLX             __printf_chk|255-247-46-238
3202|code|LDRB.W          R2, [R5,#0x24]|149-248-36-32
3206|code|CMP             R2, #1|1-42
3208|code|BEQ.W           loc_F6C|0-240-112-129
3212|code|BCC.W           loc_F60|192-240-104-129
3216|code|CMP             R2, #2|2-42
3218|code|BNE.W           loc_F54|64-240-95-129
3222|code|LDR             R1, =(aActiveActiveMo - 0xC9E); "active/active mode; "|227-73
3224|code|MOVS            R0, #1|1-32
3226|code|ADD             R1, PC; "active/active mode; "|121-68
3228|code|BLX             __printf_chk|255-247-30-238
3232|code|LDRB.W          R2, [R5,#0x25]|149-248-37-32
3236|code|CMP             R2, #4; switch 5 cases|4-42
3238|code|BHI.W           def_CAA; jumptable 00000CAA default case, case 3|0-242-229-128
3242|code|TBH.W           [PC,R2,LSL#1]; switch jump|223-232-18-240
3246|data|DCW 0xDE; jump table for switch statement|222-0
3248|data|DCW 0xD9|217-0
3250|data|DCW 0xD4|212-0
3252|data|DCW 0xE3|227-0
3254|data|DCW 0x76|118-0
3256|code|LDR             R2, [SP,#0x10B0+var_1084]|11-154
3258|code|NEGS            R0, R6; errnum|112-66
3260|code|LDR             R3, =dword_68|205-75
3262|code|LDR             R3, [R2,R3]|211-88
3264|code|LDR             R4, [R3]|28-104
3266|code|BLX             safe_strerror|255-247-24-238
3270|code|LDR             R2, =(aOpenErrorSS - 0xCD0); "open error: %s: %s\n"|216-74
3272|code|MOVS            R1, #1|1-33
3274|code|LDR             R3, [SP,#0x10B0+device_name]|6-155
3276|code|ADD             R2, PC; "open error: %s: %s\n"|122-68
3278|code|STR             R0, [SP,#0x10B0+param_len]|0-144
3280|code|MOV             R0, R4|32-70
3282|code|BLX             __fprintf_chk|255-247-10-238
3286|code|LDR             R0, =(aUsageSgRdacAFL - 0xCDC); "Usage:  sg_rdac [-a] [-f=LUN] [-v] [-V]"...|213-72
3288|code|ADD             R0, PC; "Usage:  sg_rdac [-a] [-f=LUN] [-v] [-V]"...|120-68
3290|code|BLX             puts|255-247-214-237
3294|code|MOVS            R0, #0xF|15-32
3296|code|B               loc_AEA|3-231
3298|code|LDR             R0, =dword_68|196-72
3300|code|MOV             R3, R4|35-70
3302|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
3304|code|MOVS            R1, #1|1-33
3306|code|LDR             R2, =(aUnrecognizedSw - 0xCF2); "Unrecognized switch: %s\n"|209-74
3308|code|LDR             R0, [R4,R0]|32-88
3310|code|ADD             R2, PC; "Unrecognized switch: %s\n"|122-68
3312|code|LDR             R0, [R0]|0-104
3314|code|BLX             __fprintf_chk|255-247-250-237
3318|code|LDR             R0, =(aUsageSgRdacAFL - 0xCFC); "Usage:  sg_rdac [-a] [-f=LUN] [-v] [-V]"...|207-72
3320|code|ADD             R0, PC; "Usage:  sg_rdac [-a] [-f=LUN] [-v] [-V]"...|120-68
3322|code|BLX             puts|255-247-198-237
3326|code|MOVS            R0, #1|1-32
3328|code|B               loc_AEA|243-230
3330|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
3332|code|MOVS            R1, #1; size|1-33
3334|code|LDR             R3, =dword_68|187-75
3336|code|MOVS            R2, #0x13; n|19-34
3338|code|LDR             R0, =(aTooManyArgumen - 0xD12); "too many arguments\n"|203-72
3340|code|LDR             R3, [R4,R3]|227-88
3342|code|ADD             R0, PC; "too many arguments\n"|120-68
3344|code|LDR             R3, [R3]; s|27-104
3346|code|BLX             fwrite|255-247-180-237
3350|code|B               loc_CF6|238-231
3352|code|CMP             R0, #9|9-40
3354|code|BEQ.W           loc_F98|0-240-61-129
3358|code|CMP             R0, #5|5-40
3360|code|BEQ.W           loc_F30|0-240-6-129
3364|code|LDR             R3, [R4]|35-104
3366|code|ADD             R4, SP, #0x10B0+var_107C|13-172
3368|code|MOVS            R1, #0x50 ; 'P'|80-33
3370|code|MOV             R2, R4|34-70
3372|code|BLX             sg_get_category_sense_str|255-247-232-237
3376|code|MOV             R3, R4|35-70
3378|code|LDR             R0, =dword_68|176-72
3380|code|MOV             R1, R8|65-70
3382|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
3384|code|LDR             R2, =(aModeSenseFaile - 0xD40); "mode sense failed: %s\n"|192-74
3386|code|LDR             R4, [R4,R0]|36-88
3388|code|ADD             R2, PC; "mode sense failed: %s\n"|122-68
3390|code|LDR             R0, [R4]|32-104
3392|code|BLX             __fprintf_chk|255-247-210-237
3396|code|MOV             R0, R6; device_fd|48-70
3398|code|BLX             sg_cmds_close_device|255-247-136-237
3402|code|CMP             R0, #0|0-40
3404|code|BGE.W           loc_BB0|191-246-48-175
3408|code|NEGS            R0, R0; errnum|64-66
3410|code|LDR             R4, [R4]|36-104
3412|code|BLX             safe_strerror|255-247-206-237
3416|code|LDR             R2, =(aCloseErrorS - 0xD60); "close error: %s\n"|185-74
3418|code|MOVS            R1, #1|1-33
3420|code|ADD             R2, PC; "close error: %s\n"|122-68
3422|code|MOV             R3, R0|3-70
3424|code|MOV             R0, R4|32-70
3426|code|BLX             __fprintf_chk|255-247-194-237
3430|code|B               loc_BB0|35-231
3432|code|LDR             R2, [SP,#0x10B0+var_1084]|11-154
3434|code|NEGS            R0, R0; errnum|64-66
3436|code|LDR             R3, =dword_68|161-75
3438|code|LDR             R3, [R2,R3]|211-88
3440|code|LDR             R4, [R3]|28-104
3442|code|BLX             safe_strerror|255-247-192-237
3446|code|LDR             R2, =(aCloseErrorS - 0xD7E); "close error: %s\n"|179-74
3448|code|MOVS            R1, #1|1-33
3450|code|ADD             R2, PC; "close error: %s\n"|122-68
3452|code|MOV             R3, R0|3-70
3454|code|MOV             R0, R4|32-70
3456|code|BLX             __fprintf_chk|255-247-178-237
3460|code|CMP             R7, #0|0-47
3462|code|BNE.W           loc_BB0|127-244-19-175
3466|code|MOVS            R0, #0xF|15-32
3468|code|B               loc_AEA|173-230
3470|code|LDR             R1, =(aAlternateContr_0 - 0xD96); "alternate controller present; "|174-73
3472|code|MOV             R0, R2|16-70
3474|code|ADD             R1, PC; "alternate controller present; "|121-68
3476|code|BLX             __printf_chk|255-247-162-237
3480|code|B               loc_C5C|96-231
3482|code|LDR             R0, =(aHeldInReset - 0xDA0); jumptable 00000CAA case 4|172-72
3484|code|ADD             R0, PC; "held in reset"|120-68
3486|code|BLX             puts|255-247-116-237
3490|code|LDR             R1, =(aQuiescenceTime - 0xDB2); "  Quiescence timeout: %d\n"|171-73
3492|code|MOVS            R0, #1|1-32
3494|code|LDRB.W          R2, [R5,#0x26]|149-248-38-32
3498|code|ADD.W           R4, R5, #0x2F ; '/'|5-241-47-4
3502|code|ADD             R1, PC; "  Quiescence timeout: %d\n"|121-68
3504|code|LDR.W           R11, =(asc_1694 - 0xDD4); " ?"|223-248-160-178
3508|code|BLX             __printf_chk|255-247-146-237
3512|code|LDR             R1, =(aRdacOption0xX - 0xDC4); "  RDAC option 0x%x\n"|167-73
3514|code|LDRB.W          R2, [R5,#0x27]|149-248-39-32
3518|code|MOVS            R0, #1|1-32
3520|code|ADD             R1, PC; "  RDAC option 0x%x\n"|121-68
3522|code|LDR.W           R10, =(aU - 0xDE2); " u"|223-248-152-162
3526|code|BLX             __printf_chk|255-247-138-237
3530|code|LDR             R0, =(aLunTable - 0xDD6); "  LUN Table:"|165-72
3532|code|LDR.W           R9, =(aA - 0xDE4); " a"|223-248-148-146
3536|code|ADD             R11, PC; " ?"|251-68
3538|code|ADD             R0, PC; "  LUN Table:"|120-68
3540|code|LDR.W           R8, =(aP - 0xDEC); " p"|223-248-144-130
3544|code|BLX             puts|255-247-86-237
3548|code|LDR             R3, =(aX - 0xDE6); "    %x:"|163-75
3550|code|ADD             R10, PC; " u"|250-68
3552|code|ADD             R9, PC; " a"|249-68
3554|code|ADD             R3, PC; "    %x:"|123-68
3556|code|STR             R3, [SP,#0x10B0+device_name]|6-147
3558|code|LDR             R3, =(aX_0 - 0xDF2); " x"|162-75
3560|code|ADD             R8, PC; " p"|248-68
3562|code|MOVS            R7, #0|0-39
3564|code|STR             R6, [SP,#0x10B0+pc]|7-150
3566|code|ADD             R3, PC; " x"|123-68
3568|code|MOV             R5, R3|29-70
3570|code|MOVS            R0, #1|1-32
3572|code|LDR             R1, [SP,#0x10B0+device_name]|6-153
3574|code|ASRS            R2, R7, #3|250-16
3576|code|SUB.W           R6, R4, #8|164-241-8-6
3580|code|BLX             __printf_chk|255-247-110-237
3584|code|LDRB.W          R3, [R6,#1]!|22-248-1-63
3588|code|MOVS            R0, #1|1-32
3590|code|CMP             R3, #3; switch 4 cases|3-43
3592|code|BHI             def_E0A; jumptable 00000E0A default case|58-216
3594|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3598|data|DCB 0x20; jump table for switch statement|32
3599|data|DCB 0x1C|28
3600|data|DCB 0x18|24
3601|data|DCB 2|2
3602|code|MOV             R1, R10; jumptable 00000E0A case 3|81-70
3604|code|BLX             __printf_chk|255-247-98-237
3608|code|CMP             R6, R4|166-66
3610|code|BNE             loc_E00|241-209
3612|code|ADDS            R7, #8|8-55
3614|code|MOVS            R0, #0xA; c|10-32
3616|code|BLX             putchar|255-247-86-237
3620|code|CMP             R7, #0x20 ; ' '|32-47
3622|code|ADD.W           R4, R6, #8|6-241-8-4
3626|code|BNE             loc_DF2|226-209
3628|code|LDR             R6, [SP,#0x10B0+pc]|7-158
3630|code|MOV             R0, R6; device_fd|48-70
3632|code|BLX             sg_cmds_close_device|255-247-18-237
3636|code|CMP             R0, #0|0-40
3638|code|BLT.W           loc_FB2|192-242-188-128
3642|code|MOVS            R0, #0|0-32
3644|code|B               loc_AEA|85-230
3646|code|MOV             R1, R9; jumptable 00000E0A case 2|73-70
3648|code|BLX             __printf_chk|255-247-76-237
3652|code|B               loc_E18|232-231
3654|code|MOV             R1, R8; jumptable 00000E0A case 1|65-70
3656|code|BLX             __printf_chk|255-247-72-237
3660|code|B               loc_E18|228-231
3662|code|MOV             R1, R5; jumptable 00000E0A case 0|41-70
3664|code|BLX             __printf_chk|255-247-68-237
3668|code|B               loc_E18|224-231
3670|code|LDR             R0, =(aDualActiveMode - 0xE5C); jumptable 00000CAA case 2|135-72
3672|code|ADD             R0, PC; "Dual active mode"|120-68
3674|code|BLX             puts|255-247-22-237
3678|code|B               loc_DA2|160-231
3680|code|LDR             R0, =(aActive - 0xE66); jumptable 00000CAA case 1|133-72
3682|code|ADD             R0, PC; "active"|120-68
3684|code|BLX             puts|255-247-16-237
3688|code|B               loc_DA2|155-231
3690|code|LDR             R0, =(aInactive - 0xE70); jumptable 00000CAA case 0|132-72
3692|code|ADD             R0, PC; "inactive"|120-68
3694|code|BLX             puts|255-247-12-237
3698|code|B               loc_DA2|150-231
3700|code|LDR             R1, =(aUnknownMode0xX - 0xE7C); jumptable 00000CAA default case, case 3|130-73
3702|code|MOVS            R0, #1|1-32
3704|code|ADD             R1, PC; "(Unknown mode 0x%x)\n"|121-68
3706|code|BLX             __printf_chk|255-247-48-237
3710|code|B               loc_DA2|144-231
3712|code|MOV             R1, R11; jumptable 00000E0A default case|89-70
3714|code|BLX             __printf_chk|255-247-44-237
3718|code|B               loc_E18|199-231
3720|code|ADD             R4, SP, #0x10B0+var_107C|13-172
3722|code|MOVS            R1, #0x50 ; 'P'|80-33
3724|code|MOV             R2, R4|34-70
3726|code|BLX             sg_get_category_sense_str|255-247-56-237
3730|code|MOV             R3, R4|35-70
3732|code|LDR             R0, =dword_68|87-72
3734|code|MOV             R1, R8|65-70
3736|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
3738|code|LDR             R2, =(aFailPathsFaile - 0xEA2); "fail paths failed: %s\n"|122-74
3740|code|LDR             R0, [R4,R0]|32-88
3742|code|ADD             R2, PC; "fail paths failed: %s\n"|122-68
3744|code|LDR             R0, [R0]|0-104
3746|code|BLX             __fprintf_chk|255-247-34-237
3750|code|B               loc_BA4|125-230
3752|code|LDR             R0, =(aFailPathsSucce - 0xEB2); "fail paths successful\n"|119-72
3754|code|MOV             R1, R8|65-70
3756|code|LDR             R3, =dword_68|81-75
3758|code|ADD             R0, PC; "fail paths successful\n"|120-68
3760|code|B               loc_A9A|243-229
3762|code|LDR             R1, =(aAlternateContr_1 - 0xEBA); "alternate controller not present; "|118-73
3764|code|MOVS            R0, #1|1-32
3766|code|ADD             R1, PC; "alternate controller not present; "|121-68
3768|code|BLX             __printf_chk|255-247-16-237
3772|code|B               loc_C5C|206-230
3774|code|LDR             R3, =(aX+4 - 0xEC8); "%x:"|116-75
3776|code|LDR.W           R8, =(a02x - 0xECE); " %02x"|223-248-208-129
3780|code|ADD             R3, PC; "%x:"|123-68
3782|code|STR             R3, [SP,#0x10B0+device_name]|6-147
3784|code|LDR             R3, =(a02x - 0xED4); " %02x"|115-75
3786|code|ADD             R8, PC; " %02x"|248-68
3788|code|LDRB.W          R9, [R5]|149-248-0-144
3792|code|ADD             R3, PC; " %02x"|123-68
3794|code|LDR.W           R10, [SP,#0x10B0+pc]|221-248-28-160
3798|code|STR             R6, [SP,#0x10B0+pc]|7-150
3800|code|MOV             R11, R3|155-70
3802|code|CMP             R10, R9|202-69
3804|code|BGE             loc_F2C|38-218
3806|code|LDR             R1, [SP,#0x10B0+device_name]|6-153
3808|code|MOV.W           R2, R10,ASR#4|79-234-42-18
3812|code|MOVS            R0, #1|1-32
3814|code|ADD.W           R4, R5, R10|5-235-10-4
3818|code|BLX             __printf_chk|255-247-248-236
3822|code|MOVS            R0, #1|1-32
3824|code|MOV             R1, R11|89-70
3826|code|LDRB.W          R2, [R5,R10]|21-248-10-32
3830|code|BLX             __printf_chk|255-247-242-236
3834|code|RSB.W           R6, R10, R9|202-235-9-6
3838|code|MOVS            R7, #0|0-39
3840|code|B               loc_F12|7-224
3842|code|MOVS            R0, #1|1-32
3844|code|MOV             R1, R8|65-70
3846|code|LDRB.W          R2, [R4,#1]!|20-248-1-47
3850|code|BLX             __printf_chk|255-247-232-236
3854|code|CMP             R6, R7|190-66
3856|code|BEQ             loc_F24|8-208
3858|code|ADDS            R7, #1|1-55
3860|code|CMP             R7, #0x10|16-47
3862|code|BNE             loc_F02|244-209
3864|code|MOVS            R0, #0xA; c|10-32
3866|code|ADD.W           R10, R10, #0x10|10-241-16-10
3870|code|BLX             putchar|255-247-216-236
3874|code|B               loc_EDA|218-231
3876|code|MOVS            R0, #0xA; c|10-32
3878|code|BLX             putchar|255-247-212-236
3882|code|B               loc_F18|245-231
3884|code|LDR             R6, [SP,#0x10B0+pc]|7-158
3886|code|B               loc_C10|111-230
3888|code|LDR             R3, =dword_68|48-75
3890|code|MOV             R1, R8; size|65-70
3892|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
3894|code|MOVS            R2, #0x57 ; 'W'; n|87-34
3896|code|LDR             R0, =(aModeSenseInval - 0xF40); "mode sense: invalid field in cdb (perha"...|88-72
3898|code|LDR             R4, [R4,R3]|228-88
3900|code|ADD             R0, PC; "mode sense: invalid field in cdb (perha"...|120-68
3902|code|LDR             R3, [R4]; s|35-104
3904|code|BLX             fwrite|255-247-156-236
3908|code|MOV             R0, R6; device_fd|48-70
3910|code|BLX             sg_cmds_close_device|255-247-136-236
3914|code|CMP             R0, #0|0-40
3916|code|BLT.W           loc_D50|255-246-0-175
3920|code|MOV             R0, R7|56-70
3922|code|B               loc_AEA|202-229
3924|code|LDR             R1, =(aUnknownStatus0 - 0xF5C); "(Unknown status 0x%x); "|82-73
3926|code|MOVS            R0, #1|1-32
3928|code|ADD             R1, PC; "(Unknown status 0x%x); "|121-68
3930|code|BLX             __printf_chk|255-247-192-236
3934|code|B               loc_CA0|159-230
3936|code|LDR             R1, =(aAlternateContr_1 - 0xF68); "alternate controller not present; "|80-73
3938|code|MOVS            R0, #1|1-32
3940|code|ADD             R1, PC; "alternate controller not present; "|121-68
3942|code|BLX             __printf_chk|255-247-186-236
3946|code|B               loc_CA0|153-230
3948|code|LDR             R1, =(aAlternateContr_0 - 0xF74); "alternate controller present; "|78-73
3950|code|MOV             R0, R2|16-70
3952|code|ADD             R1, PC; "alternate controller present; "|121-68
3954|code|BLX             __printf_chk|255-247-180-236
3958|code|B               loc_CA0|147-230
3960|code|LDR             R1, =(aUnknownMode0xX - 0xF80); "(Unknown mode 0x%x)\n"|76-73
3962|code|MOVS            R0, #1|1-32
3964|code|ADD             R1, PC; "(Unknown mode 0x%x)\n"|121-68
3966|code|BLX             __printf_chk|255-247-174-236
3970|code|B               loc_C78|121-230
3972|code|LDR             R0, =(aInactive - 0xF8A); "inactive"|74-72
3974|code|ADD             R0, PC; "inactive"|120-68
3976|code|BLX             puts|255-247-126-236
3980|code|B               loc_C78|116-230
3982|code|LDR             R0, =(aActive - 0xF94); "active"|73-72
3984|code|ADD             R0, PC; "active"|120-68
3986|code|BLX             puts|255-247-122-236
3990|code|B               loc_C78|111-230
3992|code|LDR             R3, =dword_68|22-75
3994|code|MOV             R1, R8; size|65-70
3996|code|LDR             R4, [SP,#0x10B0+var_1084]|11-156
3998|code|MOVS            R2, #0x4A ; 'J'; n|74-34
4000|code|LDR             R0, =(aTryAgainWithou - 0xFA8); ">>>>>> try again without the '-6' switc"...|69-72
4002|code|LDR             R4, [R4,R3]|228-88
4004|code|ADD             R0, PC; ">>>>>> try again without the '-6' switc"...|120-68
4006|code|LDR             R3, [R4]; s|35-104
4008|code|BLX             fwrite|255-247-104-236
4012|code|B               loc_F44|202-231
4014|code|BLX             __stack_chk_fail|255-247-90-236
4018|code|LDR             R2, [SP,#0x10B0+var_1084]|11-154
4020|code|NEGS            R0, R0; errnum|64-66
4022|code|LDR             R3, =dword_68|15-75
4024|code|LDR             R3, [R2,R3]|211-88
4026|code|LDR             R4, [R3]|28-104
4028|code|BLX             safe_strerror|255-247-154-236
4032|code|LDR             R2, =(aCloseErrorS - 0xFC8); "close error: %s\n"|62-74
4034|code|MOVS            R1, #1|1-33
4036|code|ADD             R2, PC; "close error: %s\n"|122-68
4038|code|MOV             R3, R0|3-70
4040|code|MOV             R0, R4|32-70
4042|code|BLX             __fprintf_chk|255-247-142-236
4046|code|MOVS            R0, #0xF|15-32
4048|code|B               loc_AEA|139-229
4050|data|ALIGN 4|0-191
4052|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x948|56-22-1-0
4056|data|DCD __stack_chk_guard_ptr - 0x11F80|100-0-0-0
4060|data|DCD aF - 0x972; "-f="|118-10-0-0
4064|data|DCD aF - 0x976; "-f="|114-10-0-0
4068|data|DCD dword_12018 - 0x982|150-22-1-0
4072|data|DCD dword_12018 - 0x9E8|48-22-1-0
4076|data|DCD dword_12008 - 0xA22|230-21-1-0
4080|data|DCD aFailPathsSucce - 0xA9C; "fail paths successful\n"|188-9-0-0
4084|data|DCD dword_68|104-0-0-0
4088|data|DCD a10620130507 - 0xADE; "1.06 20130507"|38-9-0-0
4092|data|DCD aSgRdacVersionS - 0xAE0; "sg_rdac version: %s\n"|12-9-0-0
4096|data|DCD dword_12008 - 0xB48|192-20-1-0
4100|data|DCD aFailPathsPageL - 0xBD8; "fail paths page (lun=%d) failed: %s\n"|176-8-0-0
4104|data|DCD aRdacLegacyPage - 0xC1A; "RDAC Legacy page"|150-8-0-0
4108|data|DCD aControllerSeri - 0xC28; "  Controller serial: %s\n"|156-8-0-0
4112|data|DCD aAlternateContr - 0xC36; "  Alternate controller serial: %s\n"|170-8-0-0
4116|data|DCD aRdacModeRedund - 0xC40; "  RDAC mode (redundant processor): "|196-8-0-0
4120|data|DCD aUnknownControl - 0xC5A; "(Unknown controller status 0x%x); "|26-9-0-0
4124|data|DCD aDualActiveMode - 0xC76; "Dual active mode"|54-9-0-0
4128|data|DCD aRdacModeAltern - 0xC80; "  RDAC mode (alternate processor): "|88-9-0-0
4132|data|DCD aActiveActiveMo - 0xC9E; "active/active mode; "|94-9-0-0
4136|data|DCD aOpenErrorSS - 0xCD0; "open error: %s: %s\n"|116-7-0-0
4140|data|DCD aUsageSgRdacAFL - 0xCDC; "Usage:  sg_rdac [-a] [-f=LUN] [-v] [-V]"...|112-5-0-0
4144|data|DCD aUnrecognizedSw - 0xCF2; "Unrecognized switch: %s\n"|34-7-0-0
4148|data|DCD aUsageSgRdacAFL - 0xCFC; "Usage:  sg_rdac [-a] [-f=LUN] [-v] [-V]"...|80-5-0-0
4152|data|DCD aTooManyArgumen - 0xD12; "too many arguments\n"|30-7-0-0
4156|data|DCD aModeSenseFaile - 0xD40; "mode sense failed: %s\n"|252-9-0-0
4160|data|DCD aCloseErrorS - 0xD60; "close error: %s\n"|244-9-0-0
4164|data|DCD aCloseErrorS - 0xD7E; "close error: %s\n"|214-9-0-0
4168|data|DCD aAlternateContr_0 - 0xD96; "alternate controller present; "|190-7-0-0
4172|data|DCD aHeldInReset - 0xDA0; "held in reset"|140-8-0-0
4176|data|DCD aQuiescenceTime - 0xDB2; "  Quiescence timeout: %d\n"|138-8-0-0
4180|data|DCD asc_1694 - 0xDD4; " ?"|192-8-0-0
4184|data|DCD aRdacOption0xX - 0xDC4; "  RDAC option 0x%x\n"|148-8-0-0
4188|data|DCD aU - 0xDE2; " u"|174-8-0-0
4192|data|DCD aLunTable - 0xDD6; "  LUN Table:"|150-8-0-0
4196|data|DCD aA - 0xDE4; " a"|168-8-0-0
4200|data|DCD aP - 0xDEC; " p"|156-8-0-0
4204|data|DCD aX - 0xDE6; "    %x:"|150-8-0-0
4208|data|DCD aX_0 - 0xDF2; " x"|146-8-0-0
4212|data|DCD aDualActiveMode - 0xE5C; "Dual active mode"|80-7-0-0
4216|data|DCD aActive - 0xE66; "active"|62-7-0-0
4220|data|DCD aInactive - 0xE70; "inactive"|40-7-0-0
4224|data|DCD aUnknownMode0xX - 0xE7C; "(Unknown mode 0x%x)\n"|68-7-0-0
4228|data|DCD aFailPathsFaile - 0xEA2; "fail paths failed: %s\n"|206-5-0-0
4232|data|DCD aFailPathsSucce - 0xEB2; "fail paths successful\n"|166-5-0-0
4236|data|DCD aAlternateContr_1 - 0xEBA; "alternate controller not present; "|118-6-0-0
4240|data|DCD aX+4 - 0xEC8; "%x:"|184-7-0-0
4244|data|DCD a02x - 0xECE; " %02x"|90-6-0-0
4248|data|DCD a02x - 0xED4; " %02x"|84-6-0-0
4252|data|DCD aModeSenseInval - 0xF40; "mode sense: invalid field in cdb (perha"...|164-7-0-0
4256|data|DCD aUnknownStatus0 - 0xF5C; "(Unknown status 0x%x); "|184-6-0-0
4260|data|DCD aAlternateContr_1 - 0xF68; "alternate controller not present; "|200-5-0-0
4264|data|DCD aAlternateContr_0 - 0xF74; "alternate controller present; "|224-5-0-0
4268|data|DCD aUnknownMode0xX - 0xF80; "(Unknown mode 0x%x)\n"|64-6-0-0
4272|data|DCD aInactive - 0xF8A; "inactive"|14-6-0-0
4276|data|DCD aActive - 0xF94; "active"|16-6-0-0
4280|data|DCD aTryAgainWithou - 0xFA8; ">>>>>> try again without the '-6' switc"...|240-6-0-0
4284|data|DCD aCloseErrorS - 0xFC8; "close error: %s\n"|140-7-0-0
4288|code|MOV.W           R11, #0|79-240-0-11
4292|code|MOV.W           LR, #0|79-240-0-14
4296|code|POP             {R1}; argc|2-188
4298|code|MOV             R2, SP; ubp_av|106-70
4300|code|PUSH            {R2}; stack_end|4-180
4302|code|PUSH            {R0}; rtld_fini|1-180
4304|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x10F8)|223-248-36-160
4308|code|ADR             R3, off_10F8|8-163
4310|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4312|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F80)|223-248-32-192
4316|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4320|code|PUSH.W          {R12}; fini|77-248-4-205
4324|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F80)|6-75
4326|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4330|code|LDR             R0, =(main_ptr - 0x11F80)|6-72
4332|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4336|code|BLX             __libc_start_main|255-247-208-235
4340|code|BLX             abort|255-247-22-236
4344|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10F8|136-14-1-0
4348|data|DCD __libc_csu_fini_ptr - 0x11F80|88-0-0-0
4352|data|DCD __libc_csu_init_ptr - 0x11F80|112-0-0-0
4356|data|DCD main_ptr - 0x11F80|116-0-0-0
4360|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1118)|20-48-159-229
4364|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F80)|20-32-159-229
4368|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4372|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4376|code|CMP             R2, #0|0-0-82-227
4380|code|BXEQ            LR|30-255-47-1
4384|code|B               __gmon_start__|222-253-255-234
4388|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1118|104-14-1-0
4392|data|DCD __gmon_start___ptr_0 - 0x11F80|108-0-0-0
4396|code|LDR             R3, =(__bss_start__ - 0x1134)|7-75
4398|code|LDR             R0, =(__bss_start__ - 0x1138)|8-72
4400|code|ADD             R3, PC; __bss_start__|123-68
4402|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x113E)|8-74
4404|code|ADD             R0, PC; __bss_start__|120-68
4406|code|ADDS            R3, #3|3-51
4408|code|SUBS            R3, R3, R0|27-26
4410|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4412|code|CMP             R3, #6|6-43
4414|code|BLS             locret_1148|3-217
4416|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F80)|5-75
4418|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4420|code|CBZ             R3, locret_1148|3-177
4422|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4424|code|BX              LR|112-71
4426|data|ALIGN 4|0-191
4428|data|DCD __bss_start__ - 0x1134|224-14-1-0
4432|data|DCD __bss_start__ - 0x1138|220-14-1-0
4436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x113E|66-14-1-0
4440|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F80|96-0-0-0
4444|code|LDR             R1, =(__bss_start__ - 0x1164)|8-73
4446|code|LDR             R0, =(__bss_start__ - 0x1168)|9-72
4448|code|ADD             R1, PC; __bss_start__|121-68
4450|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x116C)|9-75
4452|code|ADD             R0, PC; __bss_start__|120-68
4454|code|SUBS            R1, R1, R0|9-26
4456|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4458|code|ASRS            R1, R1, #2|137-16
4460|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4464|code|ASRS            R1, R1, #1|73-16
4466|code|BEQ             locret_117C|3-208
4468|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F80)|5-74
4470|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4472|code|CBZ             R3, locret_117C|3-177
4474|code|BX              R3; _ITM_registerTMCloneTable|24-71
4476|code|BX              LR|112-71
4478|data|ALIGN 0x10|0-191
4480|data|DCD __bss_start__ - 0x1164|176-14-1-0
4484|data|DCD __bss_start__ - 0x1168|172-14-1-0
4488|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x116C|20-14-1-0
4492|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F80|124-0-0-0
4496|code|PUSH            {R3,LR}|8-181
4498|code|LDR             R3, =(__bss_start__ - 0x119A)|10-75
4500|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x119C)|10-74
4502|code|ADD             R3, PC; __bss_start__|123-68
4504|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4506|code|LDRB            R3, [R3]|27-120
4508|code|CBNZ            R3, locret_11BA|107-185
4510|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F80)|9-75
4512|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
4514|code|CBZ             R3, loc_11AE|35-177
4516|code|LDR             R3, =(off_12004 - 0x11AA)|8-75
4518|code|ADD             R3, PC; off_12004|123-68
4520|code|LDR             R0, [R3]; off_12004 ; void *|24-104
4522|code|BLX             __cxa_finalize|255-247-80-235
4526|code|BL              sub_112C|255-247-189-255
4530|code|LDR             R3, =(__bss_start__ - 0x11BA)|6-75
4532|code|MOVS            R2, #1|1-34
4534|code|ADD             R3, PC; __bss_start__|123-68
4536|code|STRB            R2, [R3]|26-112
4538|code|POP             {R3,PC}|8-189
4540|data|DCD __bss_start__ - 0x119A|122-14-1-0
4544|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x119C|228-13-1-0
4548|data|DCD __cxa_finalize_ptr_0 - 0x11F80|92-0-0-0
4552|data|DCD off_12004 - 0x11AA|90-14-1-0
4556|data|DCD __bss_start__ - 0x11BA|90-14-1-0
4560|code|LDR             R0, =(dword_11E74 - 0x11D8)|7-72
4562|code|PUSH            {R3,LR}|8-181
4564|code|ADD             R0, PC; dword_11E74|120-68
4566|code|LDR             R2, [R0]|2-104
4568|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x11DE)|6-75
4570|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4572|code|CBNZ            R2, loc_11E4|18-185
4574|code|POP.W           {R3,LR}|189-232-8-64
4578|code|B               sub_115C|187-231
4580|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F80)|4-74
4582|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
4584|code|CMP             R3, #0|0-43
4586|code|BEQ             loc_11DE|248-208
4588|code|BLX             R3; _Jv_RegisterClasses|152-71
4590|code|B               loc_11DE|246-231
4592|data|DCD dword_11E74 - 0x11D8|156-12-1-0
4596|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11DE|162-13-1-0
4600|data|DCD _Jv_RegisterClasses_ptr - 0x11F80|120-0-0-0
4604|code|PUSH.W          {R3-R9,LR}|45-233-248-67
4608|code|MOV             R7, R0|7-70
4610|code|LDR             R6, =(off_11E70 - 0x120E)|12-78
4612|code|MOV             R8, R1|136-70
4614|code|LDR             R5, =(off_11E6C - 0x1214)|12-77
4616|code|MOV             R9, R2|145-70
4618|code|ADD             R6, PC; off_11E70|126-68
4620|code|BLX             .init_proc|255-247-14-235
4624|code|ADD             R5, PC; off_11E6C|125-68
4626|code|SUBS            R6, R6, R5|118-27
4628|code|ASRS            R6, R6, #2|182-16
4630|code|BEQ             locret_122E|10-208
4632|code|SUBS            R5, #4|4-61
4634|code|MOVS            R4, #0|0-36
4636|code|ADDS            R4, #1|1-52
4638|code|LDR.W           R3, [R5,#4]!|85-248-4-63
4642|code|MOV             R0, R7|56-70
4644|code|MOV             R1, R8|65-70
4646|code|MOV             R2, R9|74-70
4648|code|BLX             R3|152-71
4650|code|CMP             R4, R6|180-66
4652|code|BNE             loc_121C|246-209
4654|code|POP.W           {R3-R9,PC}|189-232-248-131
4658|data|ALIGN 4|0-191
4660|data|DCD off_11E70 - 0x120E|98-12-1-0
4664|data|DCD off_11E6C - 0x1214|88-12-1-0
4668|code|BX              LR|112-71
4670|data|ALIGN 0x10|0-191
4672|code|PUSH            {R3,LR}; _fini|8-64-45-233
4676|code|POP             {R3,PC}|8-128-189-232
73324|data|DCD sub_11D0+1|209-17-0-0
73328|data|DCD sub_1190+1|145-17-0-0
73332|data|DCD 0|0-0-0-0
73336|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
73344|data|Elf32_Dyn <1, <0xE1>>; DT_NEEDED libc.so.6|1-0-0-0-225-0-0-0
73352|data|Elf32_Dyn <1, <0x170>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-112-1-0-0
73360|data|Elf32_Dyn <0xC, <0x82C>>; DT_INIT|12-0-0-0-44-8-0-0
73368|data|Elf32_Dyn <0xD, <0x1240>>; DT_FINI|13-0-0-0-64-18-0-0
73376|data|Elf32_Dyn <0x19, <0x11E6C>>; DT_INIT_ARRAY|25-0-0-0-108-30-1-0
73384|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73392|data|Elf32_Dyn <0x1A, <0x11E70>>; DT_FINI_ARRAY|26-0-0-0-112-30-1-0
73400|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73408|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73416|data|Elf32_Dyn <5, <0x494>>; DT_STRTAB|5-0-0-0-148-4-0-0
73424|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
73432|data|Elf32_Dyn <0xA, <0x207>>; DT_STRSZ|10-0-0-0-7-2-0-0
73440|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73448|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73456|data|Elf32_Dyn <3, <0x11F80>>; DT_PLTGOT|3-0-0-0-128-31-1-0
73464|data|Elf32_Dyn <2, <0x98>>; DT_PLTRELSZ|2-0-0-0-152-0-0-0
73472|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73480|data|Elf32_Dyn <0x17, <0x794>>; DT_JMPREL|23-0-0-0-148-7-0-0
73488|data|Elf32_Dyn <0x11, <0x72C>>; DT_REL|17-0-0-0-44-7-0-0
73496|data|Elf32_Dyn <0x12, <0x68>>; DT_RELSZ|18-0-0-0-104-0-0-0
73504|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73512|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73520|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73528|data|Elf32_Dyn <0x6FFFFFFE, <0x6EC>>; DT_VERNEED|254-255-255-111-236-6-0-0
73536|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73544|data|Elf32_Dyn <0x6FFFFFF0, <0x69C>>; DT_VERSYM|240-255-255-111-156-6-0-0
73552|data|Elf32_Dyn <0x6FFFFFFA, <6>>; DT_RELCOUNT|250-255-255-111-6-0-0-0
73560|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73568|data|ALIGN 0x40|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
73600|data|DCD stru_11E78|120-30-1-0
73604|data|DCD 0|0-0-0-0
73608|data|DCD dword_0|0-0-0-0
73612|data|DCD __imp___cxa_finalize|32-32-1-0
73616|data|DCD __imp_sg_cmds_close_device|40-32-1-0
73620|data|DCD __imp___stack_chk_fail|44-32-1-0
73624|data|DCD __imp_sg_ll_mode_select6|48-32-1-0
73628|data|DCD __imp_fwrite|56-32-1-0
73632|data|DCD __imp_puts|60-32-1-0
73636|data|DCD __imp___libc_start_main|64-32-1-0
73640|data|DCD __imp___gmon_start__|116-32-1-0
73644|data|DCD __imp_strtoul|68-32-1-0
73648|data|DCD __imp_sg_ll_mode_sense6|72-32-1-0
73652|data|DCD __imp_memset|76-32-1-0
73656|data|DCD __imp_putchar|80-32-1-0
73660|data|DCD __imp___printf_chk|84-32-1-0
73664|data|DCD __imp___fprintf_chk|88-32-1-0
73668|data|DCD __imp_safe_strerror|92-32-1-0
73672|data|DCD __imp_sg_get_category_sense_str|96-32-1-0
73676|data|DCD __imp_sg_cmds_open_device|100-32-1-0
73680|data|DCD __imp_strncmp|104-32-1-0
73684|data|DCD __imp_abort|108-32-1-0
73688|data|DCD __libc_csu_fini+1|61-18-0-0
73692|data|DCD __imp___cxa_finalize|32-32-1-0
73696|data|DCD _ITM_deregisterTMCloneTable|112-32-1-0
73700|data|DCD __stack_chk_guard|36-32-1-0
73704|data|DCD stderr|52-32-1-0
73708|data|DCD __imp___gmon_start__|116-32-1-0
73712|data|DCD __libc_csu_init+1|253-17-0-0
73716|data|DCD main+1|49-9-0-0
73720|data|DCD _Jv_RegisterClasses|120-32-1-0
73724|data|DCD _ITM_registerTMCloneTable|124-32-1-0
73748|data|% 1; Alternative name is '__bss_start'|255
73749|data|ALIGN 4|255-255-255
