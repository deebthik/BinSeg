address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|205-18-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x21C0; SHT file offset|192-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1C0C; File offset|12-28-0-0
60|data|DCD unk_1C0C; Virtual address|12-28-0-0
64|data|DCD 0x1C0C; Physical address|12-28-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1C18; Size in file image|24-28-0-0
168|data|DCD 0x1C18; Size in memory image|24-28-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E48; File offset|72-30-0-0
188|data|DCD off_11E48; Virtual address|72-30-1-0
192|data|DCD 0x11E48; Physical address|72-30-1-0
196|data|DCD 0x250; Size in file image|80-2-0-0
200|data|DCD 0x254; Size in memory image|84-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E54; File offset|84-30-0-0
220|data|DCD stru_11E54; Virtual address|84-30-1-0
224|data|DCD 0x11E54; Physical address|84-30-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E48; File offset|72-30-0-0
316|data|DCD off_11E48; Virtual address|72-30-1-0
320|data|DCD 0x11E48; Physical address|72-30-1-0
324|data|DCD 0x1B8; Size in file image|184-1-0-0
328|data|DCD 0x1B8; Size in memory image|184-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x14, 0x23, 0x52, 9, 0x4F, 0x32, 0x11, 0xAA, 0xF7; Desc|20-35-82-9-79-50-17-170-247-188-195-79-240-167-175-244-212-231-42-171
436|data|DCD 3|3-0-0-0
440|data|DCD 0x24|36-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x24, 0x28, 0x2D|36-0-0-0-40-0-0-0-45-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_524 - byte_524, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_524 - byte_524, dword_11E50, 0, 3, 0, 0x14>|0-0-0-0-80-30-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_524, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|174-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aSmpInitiatorCl - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_initiator_close"|235-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_524, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|19-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aDstrhex - byte_524, dword_0, 0, 0x12, 0, 0>; "dStrHex"|208-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aStackChkGuard - byte_524, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|227-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
660|data|Elf32_Sym <aSmpGetFuncDefR - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_func_def_resp_len"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aOptind - byte_524, dword_0, 0, 0x11, 0, 0>; "optind"|21-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aStackChkFail - byte_524, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|52-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aSmpIsNaa5 - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_is_naa5"|255-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStderr - byte_524, dword_0, 0, 0x11, 0, 0>; "stderr"|141-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aFwrite - byte_524, dword_0, 0, 0x12, 0, 0>; "fwrite"|160-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aGetenv - byte_524, dword_0, 0, 0x12, 0, 0>; "getenv"|127-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aLibcStartMain - byte_524, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|189-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aGmonStart - byte_524, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|47-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
804|data|Elf32_Sym <aGetoptLong - byte_524, dword_0, 0, 0x12, 0, 0>; "getopt_long"|148-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aStrchr - byte_524, dword_0, 0, 0x12, 0, 0>; "strchr"|167-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aSmpSendReq - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_send_req"|181-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aErrnoLocation - byte_524, dword_0, 0, 0x12, 0, 0>; "__errno_location"|90-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aIsoc99Sscanf - byte_524, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|28-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aMemset - byte_524, dword_0, 0, 0x12, 0, 0>; "memset"|83-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aPutchar - byte_524, dword_0, 0, 0x12, 0, 0>; "putchar"|69-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aStrncpy - byte_524, dword_0, 0, 0x12, 0, 0>; "strncpy"|44-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aFprintfChk - byte_524, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|107-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aFputc - byte_524, dword_0, 0, 0x12, 0, 0>; "fputc"|121-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aSafeStrerror - byte_524, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|194-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aJvRegisterclas - byte_524, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|62-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
996|data|Elf32_Sym <aSmpGetLlnum - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_llnum"|146-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aItmRegistertmc - byte_524, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|82-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1028|data|Elf32_Sym <aSmpGetFuncResS - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_func_res_str"|160-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aSmpGetNum - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_num"|134-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aSmpInitiatorOp - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_initiator_open"|216-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aOptarg - byte_524, dword_0, 0, 0x11, 0, 0>; "optarg"|134-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1092|data|Elf32_Sym <aAbort - byte_524, dword_0, 0, 0x12, 0, 0>; "abort"|77-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aBssEnd+1 - byte_524, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|36-2-0-0-156-32-1-0-0-0-0-0-16-0-24-0
1124|data|Elf32_Sym <aEdata - byte_524, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|2-2-0-0-152-32-1-0-0-0-0-0-16-0-23-0
1140|data|Elf32_Sym <aDataStart - byte_524, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|245-1-0-0-0-32-1-0-0-0-0-0-16-0-23-0
1156|data|Elf32_Sym <aEnd_0 - byte_524, _end, 0, 0x10, 0, 0x18>; "_end"|55-2-0-0-156-32-1-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aBssEnd - byte_524, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|35-2-0-0-156-32-1-0-0-0-0-0-16-0-24-0
1188|data|Elf32_Sym <aLibcCsuInit - byte_524, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|76-2-0-0-9-20-0-0-64-0-0-0-18-0-13-0
1204|data|Elf32_Sym <aBssStart - byte_524, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|9-2-0-0-152-32-1-0-0-0-0-0-16-0-24-0
1220|data|Elf32_Sym <aLibcStartMain+0xD - byte_524, main+1, 0x7A4, 0x12, 0, 0xD>; "main"|202-1-0-0-41-11-0-0-164-7-0-0-18-0-13-0
1236|data|Elf32_Sym <aLibcCsuInit+0xA - byte_524, .init_proc, 0, 0x12, 0, 0xB>; "_init"|86-2-0-0-208-9-0-0-0-0-0-0-18-0-11-0
1252|data|Elf32_Sym <aLibcCsuFini - byte_524, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|60-2-0-0-73-20-0-0-2-0-0-0-18-0-13-0
1268|data|Elf32_Sym <aBssStart_0 - byte_524, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|21-2-0-0-152-32-1-0-0-0-0-0-16-0-24-0
1284|data|Elf32_Sym <aLibcCsuFini+0xA - byte_524, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|70-2-0-0-76-20-0-0-0-0-0-0-18-0-14-0
1300|data|Elf32_Sym <aEnd - byte_524, _end, 0, 0x10, 0, 0x18>; "__end__"|47-2-0-0-156-32-1-0-0-0-0-0-16-0-24-0
1316|data|DCB 0|0
1317|data|DCB "libsmputils1.so.1",0|108-105-98-115-109-112-117-116-105-108-115-49-46-115-111-46-49-0
1335|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1363|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1378|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1398|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1424|data|DCB "smp_get_func_def_resp_len",0|115-109-112-95-103-101-116-95-102-117-110-99-95-100-101-102-95-114-101-115-112-95-108-101-110-0
1450|data|DCB "smp_get_num",0|115-109-112-95-103-101-116-95-110-117-109-0
1462|data|DCB "smp_get_llnum",0|115-109-112-95-103-101-116-95-108-108-110-117-109-0
1476|data|DCB "smp_get_func_res_str",0|115-109-112-95-103-101-116-95-102-117-110-99-95-114-101-115-95-115-116-114-0
1497|data|DCB "smp_send_req",0|115-109-112-95-115-101-110-100-95-114-101-113-0
1510|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1524|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1532|data|DCB "smp_initiator_open",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-111-112-101-110-0
1551|data|DCB "smp_initiator_close",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-99-108-111-115-101-0
1571|data|DCB "smp_is_naa5",0|115-109-112-95-105-115-95-110-97-97-53-0
1583|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1593|data|DCB "optind",0|111-112-116-105-110-100-0
1600|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1616|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1624|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1641|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1649|data|DCB "abort",0|97-98-111-114-116-0
1655|data|DCB "memset",0|109-101-109-115-101-116-0
1662|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1679|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1693|data|DCB "fputc",0|102-112-117-116-99-0
1699|data|DCB "getenv",0|103-101-116-101-110-118-0
1706|data|DCB "optarg",0|111-112-116-97-114-103-0
1713|data|DCB "stderr",0|115-116-100-101-114-114-0
1720|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1732|data|DCB "fwrite",0|102-119-114-105-116-101-0
1739|data|DCB "strchr",0|115-116-114-99-104-114-0
1746|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1761|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1779|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1799|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1817|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1830|data|DCB "_edata",0|95-101-100-97-116-97-0
1837|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1849|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1863|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1875|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1883|data|DCB "_end",0|95-101-110-100-0
1888|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1904|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1920|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1930|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
1940|data|DCW 0|0-0
1942|data|DCW 0|0-0
1944|data|DCW 0|0-0
1946|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1948|data|DCW 0; local  symbol: smp_initiator_close|0-0
1950|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1952|data|DCW 0; local  symbol: dStrHex|0-0
1954|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1956|data|DCW 0; local  symbol: smp_get_func_def_resp_len|0-0
1958|data|DCW 2; optind@@GLIBC_2.4|2-0
1960|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1962|data|DCW 0; local  symbol: smp_is_naa5|0-0
1964|data|DCW 2; stderr@@GLIBC_2.4|2-0
1966|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1968|data|DCW 2; getenv@@GLIBC_2.4|2-0
1970|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1972|data|DCW 0; local  symbol: __gmon_start__|0-0
1974|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1976|data|DCW 2; strchr@@GLIBC_2.4|2-0
1978|data|DCW 0; local  symbol: smp_send_req|0-0
1980|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
1982|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
1984|data|DCW 2; memset@@GLIBC_2.4|2-0
1986|data|DCW 2; putchar@@GLIBC_2.4|2-0
1988|data|DCW 2; strncpy@@GLIBC_2.4|2-0
1990|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1992|data|DCW 2; fputc@@GLIBC_2.4|2-0
1994|data|DCW 0; local  symbol: safe_strerror|0-0
1996|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1998|data|DCW 0; local  symbol: smp_get_llnum|0-0
2000|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2002|data|DCW 0; local  symbol: smp_get_func_res_str|0-0
2004|data|DCW 0; local  symbol: smp_get_num|0-0
2006|data|DCW 0; local  symbol: smp_initiator_open|0-0
2008|data|DCW 2; optarg@@GLIBC_2.4|2-0
2010|data|DCW 2; abort@@GLIBC_2.4|2-0
2012|data|DCW 1; global symbol: _bss_end__|1-0
2014|data|DCW 1; global symbol: _edata|1-0
2016|data|DCW 1; global symbol: __data_start|1-0
2018|data|DCW 1; global symbol: _end|1-0
2020|data|DCW 1; global symbol: __bss_end__|1-0
2022|data|DCW 1; global symbol: __libc_csu_init|1-0
2024|data|DCW 1; global symbol: __bss_start|1-0
2026|data|DCW 1; global symbol: main|1-0
2028|data|DCW 1; global symbol: _init|1-0
2030|data|DCW 1; global symbol: __libc_csu_fini|1-0
2032|data|DCW 1; global symbol: __bss_start__|1-0
2034|data|DCW 1; global symbol: _fini|1-0
2036|data|DCW 1; global symbol: __end__|1-0
2038|data|DCW 0|0-0
2040|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_524, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-207-1-0-0-16-0-0-0-32-0-0-0
2056|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_524, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-92-2-0-0-0-0-0-0
2072|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_524, 0x10, 0>; "libc.so.6"|1-0-2-0-11-1-0-0-16-0-0-0-0-0-0-0
2088|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_524, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-102-2-0-0-16-0-0-0
2104|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_524, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-92-2-0-0-0-0-0-0
2120|data|Elf32_Rel <0x11E48, 0x17>; R_ARM_RELATIVE|72-30-1-0-23-0-0-0
2128|data|Elf32_Rel <0x11E4C, 0x17>; R_ARM_RELATIVE|76-30-1-0-23-0-0-0
2136|data|Elf32_Rel <0x11FD0, 0x17>; R_ARM_RELATIVE|208-31-1-0-23-0-0-0
2144|data|Elf32_Rel <0x11FEC, 0x17>; R_ARM_RELATIVE|236-31-1-0-23-0-0-0
2152|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
2160|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
2168|data|Elf32_Rel <0x12008, 0x17>; R_ARM_RELATIVE|8-32-1-0-23-0-0-0
2176|data|Elf32_Rel <0x12018, 0x17>; R_ARM_RELATIVE|24-32-1-0-23-0-0-0
2184|data|Elf32_Rel <0x12028, 0x17>; R_ARM_RELATIVE|40-32-1-0-23-0-0-0
2192|data|Elf32_Rel <0x12038, 0x17>; R_ARM_RELATIVE|56-32-1-0-23-0-0-0
2200|data|Elf32_Rel <0x12048, 0x17>; R_ARM_RELATIVE|72-32-1-0-23-0-0-0
2208|data|Elf32_Rel <0x12058, 0x17>; R_ARM_RELATIVE|88-32-1-0-23-0-0-0
2216|data|Elf32_Rel <0x12068, 0x17>; R_ARM_RELATIVE|104-32-1-0-23-0-0-0
2224|data|Elf32_Rel <0x12078, 0x17>; R_ARM_RELATIVE|120-32-1-0-23-0-0-0
2232|data|Elf32_Rel <0x11FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-31-1-0-21-3-0-0
2240|data|Elf32_Rel <0x11FD8, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-31-1-0-21-5-0-0
2248|data|Elf32_Rel <0x11FDC, 0x715>; R_ARM_GLOB_DAT __stack_chk_guard|220-31-1-0-21-7-0-0
2256|data|Elf32_Rel <0x11FE0, 0x915>; R_ARM_GLOB_DAT optind|224-31-1-0-21-9-0-0
2264|data|Elf32_Rel <0x11FE4, 0xC15>; R_ARM_GLOB_DAT stderr|228-31-1-0-21-12-0-0
2272|data|Elf32_Rel <0x11FE8, 0x1015>; R_ARM_GLOB_DAT __gmon_start__|232-31-1-0-21-16-0-0
2280|data|Elf32_Rel <0x11FF4, 0x1C15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-31-1-0-21-28-0-0
2288|data|Elf32_Rel <0x11FF8, 0x1E15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-31-1-0-21-30-0-0
2296|data|Elf32_Rel <0x11FFC, 0x2215>; R_ARM_GLOB_DAT optarg|252-31-1-0-21-34-0-0
2304|data|Elf32_Rel <0x11F68, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|104-31-1-0-22-3-0-0
2312|data|Elf32_Rel <0x11F6C, 0x416>; R_ARM_JUMP_SLOT smp_initiator_close|108-31-1-0-22-4-0-0
2320|data|Elf32_Rel <0x11F70, 0x616>; R_ARM_JUMP_SLOT dStrHex|112-31-1-0-22-6-0-0
2328|data|Elf32_Rel <0x11F74, 0x816>; R_ARM_JUMP_SLOT smp_get_func_def_resp_len|116-31-1-0-22-8-0-0
2336|data|Elf32_Rel <0x11F78, 0xA16>; R_ARM_JUMP_SLOT __stack_chk_fail|120-31-1-0-22-10-0-0
2344|data|Elf32_Rel <0x11F7C, 0xB16>; R_ARM_JUMP_SLOT smp_is_naa5|124-31-1-0-22-11-0-0
2352|data|Elf32_Rel <0x11F80, 0xD16>; R_ARM_JUMP_SLOT fwrite|128-31-1-0-22-13-0-0
2360|data|Elf32_Rel <0x11F84, 0xE16>; R_ARM_JUMP_SLOT getenv|132-31-1-0-22-14-0-0
2368|data|Elf32_Rel <0x11F88, 0xF16>; R_ARM_JUMP_SLOT __libc_start_main|136-31-1-0-22-15-0-0
2376|data|Elf32_Rel <0x11F8C, 0x1016>; R_ARM_JUMP_SLOT __gmon_start__|140-31-1-0-22-16-0-0
2384|data|Elf32_Rel <0x11F90, 0x1116>; R_ARM_JUMP_SLOT getopt_long|144-31-1-0-22-17-0-0
2392|data|Elf32_Rel <0x11F94, 0x1216>; R_ARM_JUMP_SLOT strchr|148-31-1-0-22-18-0-0
2400|data|Elf32_Rel <0x11F98, 0x1316>; R_ARM_JUMP_SLOT smp_send_req|152-31-1-0-22-19-0-0
2408|data|Elf32_Rel <0x11F9C, 0x1416>; R_ARM_JUMP_SLOT __errno_location|156-31-1-0-22-20-0-0
2416|data|Elf32_Rel <0x11FA0, 0x1516>; R_ARM_JUMP_SLOT __isoc99_sscanf|160-31-1-0-22-21-0-0
2424|data|Elf32_Rel <0x11FA4, 0x1616>; R_ARM_JUMP_SLOT memset|164-31-1-0-22-22-0-0
2432|data|Elf32_Rel <0x11FA8, 0x1716>; R_ARM_JUMP_SLOT putchar|168-31-1-0-22-23-0-0
2440|data|Elf32_Rel <0x11FAC, 0x1816>; R_ARM_JUMP_SLOT strncpy|172-31-1-0-22-24-0-0
2448|data|Elf32_Rel <0x11FB0, 0x1916>; R_ARM_JUMP_SLOT __fprintf_chk|176-31-1-0-22-25-0-0
2456|data|Elf32_Rel <0x11FB4, 0x1A16>; R_ARM_JUMP_SLOT fputc|180-31-1-0-22-26-0-0
2464|data|Elf32_Rel <0x11FB8, 0x1B16>; R_ARM_JUMP_SLOT safe_strerror|184-31-1-0-22-27-0-0
2472|data|Elf32_Rel <0x11FBC, 0x1D16>; R_ARM_JUMP_SLOT smp_get_llnum|188-31-1-0-22-29-0-0
2480|data|Elf32_Rel <0x11FC0, 0x1F16>; R_ARM_JUMP_SLOT smp_get_func_res_str|192-31-1-0-22-31-0-0
2488|data|Elf32_Rel <0x11FC4, 0x2016>; R_ARM_JUMP_SLOT smp_get_num|196-31-1-0-22-32-0-0
2496|data|Elf32_Rel <0x11FC8, 0x2116>; R_ARM_JUMP_SLOT smp_initiator_open|200-31-1-0-22-33-0-0
2504|data|Elf32_Rel <0x11FCC, 0x2316>; R_ARM_JUMP_SLOT abort|204-31-1-0-22-35-0-0
2512|code|PUSH            {R3,LR}; _init|8-64-45-233
2516|code|BL              sub_1314|78-2-0-235
2520|code|POP             {R3,PC}|8-128-189-232
2524|code|PUSH            {LR}|4-224-45-229
2528|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x9EC)|4-224-159-229
2532|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2536|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2540|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9EC|112-21-1-0
2544|code|ADR             R12, 0x9F8|0-198-143-226
2548|code|ADD             R12, R12, #0x11000|17-202-140-226
2552|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x119F8)]!; __imp___cxa_finalize|112-245-188-229
2556|code|ADR             R12, 0xA04|0-198-143-226
2560|code|ADD             R12, R12, #0x11000|17-202-140-226
2564|code|LDR             PC, [R12,#(smp_initiator_close_ptr - 0x11A04)]!; __imp_smp_initiator_close|104-245-188-229
2568|code|ADR             R12, 0xA10|0-198-143-226
2572|code|ADD             R12, R12, #0x11000|17-202-140-226
2576|code|LDR             PC, [R12,#(dStrHex_ptr - 0x11A10)]!; __imp_dStrHex|96-245-188-229
2580|code|ADR             R12, 0xA1C|0-198-143-226
2584|code|ADD             R12, R12, #0x11000|17-202-140-226
2588|code|LDR             PC, [R12,#(smp_get_func_def_resp_len_ptr - 0x11A1C)]!; __imp_smp_get_func_def_resp_len|88-245-188-229
2592|code|ADR             R12, 0xA28|0-198-143-226
2596|code|ADD             R12, R12, #0x11000|17-202-140-226
2600|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x11A28)]!; __imp___stack_chk_fail|80-245-188-229
2604|code|ADR             R12, 0xA34|0-198-143-226
2608|code|ADD             R12, R12, #0x11000|17-202-140-226
2612|code|LDR             PC, [R12,#(smp_is_naa5_ptr - 0x11A34)]!; __imp_smp_is_naa5|72-245-188-229
2616|code|ADR             R12, 0xA40|0-198-143-226
2620|code|ADD             R12, R12, #0x11000|17-202-140-226
2624|code|LDR             PC, [R12,#(fwrite_ptr - 0x11A40)]!; __imp_fwrite|64-245-188-229
2628|code|ADR             R12, 0xA4C|0-198-143-226
2632|code|ADD             R12, R12, #0x11000|17-202-140-226
2636|code|LDR             PC, [R12,#(getenv_ptr - 0x11A4C)]!; __imp_getenv|56-245-188-229
2640|code|ADR             R12, 0xA58|0-198-143-226
2644|code|ADD             R12, R12, #0x11000|17-202-140-226
2648|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x11A58)]!; __imp___libc_start_main|48-245-188-229
2652|code|ADR             R12, 0xA64|0-198-143-226
2656|code|ADD             R12, R12, #0x11000|17-202-140-226
2660|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x11A64)]!; __imp___gmon_start__|40-245-188-229
2664|code|ADR             R12, 0xA70|0-198-143-226
2668|code|ADD             R12, R12, #0x11000|17-202-140-226
2672|code|LDR             PC, [R12,#(getopt_long_ptr - 0x11A70)]!; __imp_getopt_long|32-245-188-229
2676|code|ADR             R12, 0xA7C|0-198-143-226
2680|code|ADD             R12, R12, #0x11000|17-202-140-226
2684|code|LDR             PC, [R12,#(strchr_ptr - 0x11A7C)]!; __imp_strchr|24-245-188-229
2688|code|ADR             R12, 0xA88|0-198-143-226
2692|code|ADD             R12, R12, #0x11000|17-202-140-226
2696|code|LDR             PC, [R12,#(smp_send_req_ptr - 0x11A88)]!; __imp_smp_send_req|16-245-188-229
2700|code|ADR             R12, 0xA94|0-198-143-226
2704|code|ADD             R12, R12, #0x11000|17-202-140-226
2708|code|LDR             PC, [R12,#(__errno_location_ptr - 0x11A94)]!; __imp___errno_location|8-245-188-229
2712|code|ADR             R12, 0xAA0|0-198-143-226
2716|code|ADD             R12, R12, #0x11000|17-202-140-226
2720|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x11AA0)]!; __imp___isoc99_sscanf|0-245-188-229
2724|code|ADR             R12, 0xAAC|0-198-143-226
2728|code|ADD             R12, R12, #0x11000|17-202-140-226
2732|code|LDR             PC, [R12,#(memset_ptr - 0x11AAC)]!; __imp_memset|248-244-188-229
2736|code|ADR             R12, 0xAB8|0-198-143-226
2740|code|ADD             R12, R12, #0x11000|17-202-140-226
2744|code|LDR             PC, [R12,#(putchar_ptr - 0x11AB8)]!; __imp_putchar|240-244-188-229
2748|code|ADR             R12, 0xAC4|0-198-143-226
2752|code|ADD             R12, R12, #0x11000|17-202-140-226
2756|code|LDR             PC, [R12,#(strncpy_ptr - 0x11AC4)]!; __imp_strncpy|232-244-188-229
2760|code|ADR             R12, 0xAD0|0-198-143-226
2764|code|ADD             R12, R12, #0x11000|17-202-140-226
2768|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x11AD0)]!; __imp___fprintf_chk|224-244-188-229
2772|code|ADR             R12, 0xADC|0-198-143-226
2776|code|ADD             R12, R12, #0x11000|17-202-140-226
2780|code|LDR             PC, [R12,#(fputc_ptr - 0x11ADC)]!; __imp_fputc|216-244-188-229
2784|code|ADR             R12, 0xAE8|0-198-143-226
2788|code|ADD             R12, R12, #0x11000|17-202-140-226
2792|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x11AE8)]!; __imp_safe_strerror|208-244-188-229
2796|code|ADR             R12, 0xAF4|0-198-143-226
2800|code|ADD             R12, R12, #0x11000|17-202-140-226
2804|code|LDR             PC, [R12,#(smp_get_llnum_ptr - 0x11AF4)]!; __imp_smp_get_llnum|200-244-188-229
2808|code|ADR             R12, 0xB00|0-198-143-226
2812|code|ADD             R12, R12, #0x11000|17-202-140-226
2816|code|LDR             PC, [R12,#(smp_get_func_res_str_ptr - 0x11B00)]!; __imp_smp_get_func_res_str|192-244-188-229
2820|code|ADR             R12, 0xB0C|0-198-143-226
2824|code|ADD             R12, R12, #0x11000|17-202-140-226
2828|code|LDR             PC, [R12,#(smp_get_num_ptr - 0x11B0C)]!; __imp_smp_get_num|184-244-188-229
2832|code|ADR             R12, 0xB18|0-198-143-226
2836|code|ADD             R12, R12, #0x11000|17-202-140-226
2840|code|LDR             PC, [R12,#(smp_initiator_open_ptr - 0x11B18)]!; __imp_smp_initiator_open|176-244-188-229
2844|code|ADR             R12, 0xB24|0-198-143-226
2848|code|ADD             R12, R12, #0x11000|17-202-140-226
2852|code|LDR             PC, [R12,#(abort_ptr - 0x11B24)]!; __imp_abort|168-244-188-229
2856|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2860|code|SUBW            SP, SP, #0x58C|173-242-140-93
2864|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xB40)|223-248-232-102
2868|code|ADD             R4, SP, #0x5B0+var_578|14-172
2870|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x11F5C)|223-248-232-54
2874|code|MOV             R8, R0|128-70
2876|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
2878|code|LDR.W           R2, =(dword_1458 - 0xB4A)|223-248-228-38
2882|code|STR             R4, [SP,#0x5B0+var_580]|12-148
2884|code|ADD             R0, SP, #0x5B0+var_22C|225-168
2886|code|ADD             R2, PC; dword_1458|122-68
2888|code|STR             R0, [SP,#0x5B0+s]|4-144
2890|code|MOV             R9, R1|137-70
2892|code|ADD             R1, SP, #0x5B0+var_438|94-169
2894|code|STR             R1, [SP,#0x5B0+var_57C]|13-145
2896|code|MOVS            R7, #0|0-39
2898|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
2900|code|MOV             R12, R1|140-70
2902|code|LDR             R0, [R2]|16-104
2904|code|MOV.W           R10, #0|79-240-0-10
2908|code|LDR             R1, [R2,#(dword_145C - 0x1458)]|81-104
2910|code|MOV.W           R11, #0|79-240-0-11
2914|code|LDR             R2, [R2,#(dword_1460 - 0x1458)]|146-104
2916|code|MOV             R5, R7|61-70
2918|code|LDR.W           LR, [R3]|211-248-0-224
2922|code|STRD.W          R10, R11, [SP,#0x5B0+var_590]|205-233-8-171
2926|code|STM.W           R12!, {R0-R2}|172-232-7-0
2930|code|MOV             R1, R7; c|57-70
2932|code|LDR             R0, [SP,#0x5B0+s]; s|4-152
2934|code|MOV.W           R2, #0x200; n|79-244-0-114
2938|code|LDR.W           R11, =(aEHhiRsVv - 0xB8C); "E:hHI:rs:vV"|223-248-172-182
2942|code|LDR.W           R10, =(off_12008 - 0xB90); "expected"|223-248-172-166
2946|code|STR             R3, [SP,#0x5B0+var_598]|6-147
2948|code|ADD             R3, SP, #0x5B0+var_574|15-171
2950|code|STR             R7, [SP,#0x5B0+var_578]|14-151
2952|code|ADD             R11, PC; "E:hHI:rs:vV"|251-68
2954|code|STR             R3, [SP,#0x5B0+var_59C]|5-147
2956|code|ADD             R10, PC; off_12008|250-68
2958|code|STR             R7, [SP,#0x5B0+var_588]|10-151
2960|code|STR.W           LR, [SP,#0x5B0+var_2C]|205-248-132-229
2964|code|BLX             memset|255-247-134-239
2968|code|LDR             R4, [SP,#0x5B0+var_59C]|5-156
2970|code|STR             R7, [SP,#0x5B0+var_594]|7-151
2972|code|STR             R7, [SP,#0x5B0+var_584]|11-151
2974|code|STR             R4, [SP,#0x5B0+longind]; longind|0-148
2976|code|MOV             R2, R11; shortopts|90-70
2978|code|MOV             R0, R8; argc|64-70
2980|code|MOV             R1, R9; argv|73-70
2982|code|MOV             R3, R10; longopts|83-70
2984|code|STR             R7, [R4]|39-96
2986|code|BLX             getopt_long|255-247-94-239
2990|code|ADDS            R2, R0, #1|66-28
2992|code|BEQ.W           loc_CF8|0-240-162-128
2996|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
3000|code|CMP             R3, #0x37|55-43
3002|code|BHI.W           def_BBE; jumptable 00000BBE default case, cases 64-68,70,71,74-85,87-103,105-113,116,117|0-242-135-128
3006|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3010|data|DCB 0x77; jump table for switch statement|119
3011|data|DCB 0x85|133
3012|data|DCB 0x85|133
3013|data|DCB 0x85|133
3014|data|DCB 0x85|133
3015|data|DCB 0x85|133
3016|data|DCB 0x60|96
3017|data|DCB 0x85|133
3018|data|DCB 0x85|133
3019|data|DCB 0x5C|92
3020|data|DCB 0x4A|74
3021|data|DCB 0x85|133
3022|data|DCB 0x85|133
3023|data|DCB 0x85|133
3024|data|DCB 0x85|133
3025|data|DCB 0x85|133
3026|data|DCB 0x85|133
3027|data|DCB 0x85|133
3028|data|DCB 0x85|133
3029|data|DCB 0x85|133
3030|data|DCB 0x85|133
3031|data|DCB 0x85|133
3032|data|DCB 0x85|133
3033|data|DCB 0x31|49
3034|data|DCB 0x85|133
3035|data|DCB 0x85|133
3036|data|DCB 0x85|133
3037|data|DCB 0x85|133
3038|data|DCB 0x85|133
3039|data|DCB 0x85|133
3040|data|DCB 0x85|133
3041|data|DCB 0x85|133
3042|data|DCB 0x85|133
3043|data|DCB 0x85|133
3044|data|DCB 0x85|133
3045|data|DCB 0x85|133
3046|data|DCB 0x85|133
3047|data|DCB 0x85|133
3048|data|DCB 0x85|133
3049|data|DCB 0x85|133
3050|data|DCB 0x85|133
3051|data|DCB 0x77|119
3052|data|DCB 0x85|133
3053|data|DCB 0x85|133
3054|data|DCB 0x85|133
3055|data|DCB 0x85|133
3056|data|DCB 0x85|133
3057|data|DCB 0x85|133
3058|data|DCB 0x85|133
3059|data|DCB 0x85|133
3060|data|DCB 0x85|133
3061|data|DCB 0x2D|45
3062|data|DCB 0x1E|30
3063|data|DCB 0x85|133
3064|data|DCB 0x85|133
3065|data|DCB 0x1C|28
3066|code|ADDS            R5, #1; jumptable 00000BBE case 118|1-53
3068|code|B               loc_B9E|207-231
3070|code|LDR.W           R3, =(optarg_ptr - 0x11F5C); jumptable 00000BBE case 115|223-248-48-54
3074|code|LDR             R3, [R6,R3]; optarg|243-88
3076|code|LDR             R0, [R3]|24-104
3078|code|BLX             smp_get_llnum|255-247-114-239
3082|code|ADDS            R3, R1, #1|75-28
3084|code|IT EQ|8-191
3086|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3090|code|BEQ.W           loc_F1A|0-240-130-129
3094|code|STRD.W          R0, R1, [SP,#0x5B0+var_590]|205-233-8-1
3098|code|B               loc_B9E|192-231
3100|code|LDR             R3, [SP,#0x5B0+var_588]; jumptable 00000BBE case 114|10-155
3102|code|ADDS            R3, #1|1-51
3104|code|STR             R3, [SP,#0x5B0+var_588]|10-147
3106|code|B               loc_B9E|188-231
3108|code|LDR.W           R0, =(stderr_ptr - 0x11F5C); jumptable 00000BBE case 86|223-248-12-6
3112|code|MOVS            R1, #1|1-33
3114|code|LDR.W           R2, =(aVersionS - 0xC38); "version: %s\n"|223-248-12-38
3118|code|LDR.W           R3, =(a10420130604 - 0xC3A); "1.04 20130604"|223-248-12-54
3122|code|LDR             R0, [R6,R0]; stderr|48-88
3124|code|ADD             R2, PC; "version: %s\n"|122-68
3126|code|ADD             R3, PC; "1.04 20130604"|123-68
3128|code|LDR             R0, [R0]|0-104
3130|code|BLX             __fprintf_chk|255-247-70-239
3134|code|MOVS            R0, #0|0-32
3136|code|LDR             R3, [SP,#0x5B0+var_598]|6-155
3138|code|LDR.W           R2, [SP,#0x5B0+var_2C]|221-248-132-37
3142|code|LDR             R3, [R3]|27-104
3144|code|CMP             R2, R3|154-66
3146|code|BNE.W           loc_11B8|64-240-181-130
3150|code|ADDW            SP, SP, #0x58C|13-242-140-93
3154|code|POP.W           {R4-R11,PC}|189-232-240-143
3158|code|LDR.W           R3, =(optarg_ptr - 0x11F5C); jumptable 00000BBE case 73|223-248-216-53
3162|code|ADD.W           R12, SP, #0x5B0+dest|13-245-194-124
3166|code|STR.W           R12, [SP,#0x5B0+var_59C]|205-248-20-192
3170|code|MOV.W           R2, #0x100; n|79-244-128-114
3174|code|MOV             R0, R12; dest|96-70
3176|code|LDR             R3, [R6,R3]; optarg|243-88
3178|code|LDR             R1, [R3]; src|25-104
3180|code|BLX             strncpy|255-247-38-239
3184|code|LDR.W           R12, [SP,#0x5B0+var_59C]|221-248-20-192
3188|code|STRB.W          R7, [R12,#0xFF]|140-248-255-112
3192|code|B               loc_B9E|145-231
3194|code|LDR             R3, [SP,#0x5B0+var_594]; jumptable 00000BBE case 72|7-155
3196|code|ADDS            R3, #1|1-51
3198|code|STR             R3, [SP,#0x5B0+var_594]|7-147
3200|code|B               loc_B9E|141-231
3202|code|LDR.W           R3, =(optarg_ptr - 0x11F5C); jumptable 00000BBE case 69|223-248-172-53
3206|code|LDR             R3, [R6,R3]; optarg|243-88
3208|code|LDR             R0, [R3]|24-104
3210|code|BLX             smp_get_num|255-247-60-239
3214|code|CMP.W           R0, #0x10000|176-245-128-63
3218|code|STR             R0, [SP,#0x5B0+var_584]|11-144
3220|code|BCC             loc_B9E|131-211
3222|code|LDR.W           R3, =(stderr_ptr - 0x11F5C)|223-248-156-53
3226|code|MOVS            R1, #1; size|1-33
3228|code|LDR.W           R0, =(aBadArgumentToE - 0xCA8); "bad argument to '--expected'\n"|223-248-160-5
3232|code|MOVS            R2, #0x1D; n|29-34
3234|code|LDR             R3, [R6,R3]; stderr|243-88
3236|code|ADD             R0, PC; "bad argument to '--expected'\n"|120-68
3238|code|LDR             R3, [R3]; s|27-104
3240|code|BLX             fwrite|255-247-198-238
3244|code|MOVS            R0, #0x5B ; '['|91-32
3246|code|B               loc_C40|199-231
3248|code|LDR.W           R3, =(stderr_ptr - 0x11F5C); jumptable 00000BBE cases 63,104|223-248-128-53
3252|code|MOVS            R1, #1; size|1-33
3254|code|LDR.W           R0, =(aUsageSmpZoneAc - 0xCC4); "Usage: smp_zone_activate [--expected=EX"...|223-248-140-5
3258|code|MOV.W           R2, #0x38C; n|79-244-99-114
3262|code|LDR             R3, [R6,R3]; stderr|243-88
3264|code|ADD             R0, PC; "Usage: smp_zone_activate [--expected=EX"...|120-68
3266|code|LDR             R3, [R3]; s|27-104
3268|code|BLX             fwrite|255-247-184-238
3272|code|MOVS            R0, #0|0-32
3274|code|B               loc_C40|185-231
3276|code|LDR.W           R4, =(stderr_ptr - 0x11F5C); jumptable 00000BBE default case, cases 64-68,70,71,74-85,87-103,105-113,116,117|223-248-100-69
3280|code|MOV             R3, R0|3-70
3282|code|LDR.W           R2, =(aUnrecognisedSw - 0xCDE); "unrecognised switch code 0x%x ??\n"|223-248-116-37
3286|code|MOVS            R1, #1|1-33
3288|code|LDR             R4, [R6,R4]; stderr|52-89
3290|code|ADD             R2, PC; "unrecognised switch code 0x%x ??\n"|122-68
3292|code|LDR             R0, [R4]|32-104
3294|code|BLX             __fprintf_chk|255-247-244-238
3298|code|LDR.W           R0, =(aUsageSmpZoneAc - 0xCEE); "Usage: smp_zone_activate [--expected=EX"...|223-248-104-5
3302|code|LDR             R3, [R4]; s|35-104
3304|code|MOVS            R1, #1; size|1-33
3306|code|ADD             R0, PC; "Usage: smp_zone_activate [--expected=EX"...|120-68
3308|code|MOV.W           R2, #0x38C; n|79-244-99-114
3312|code|BLX             fwrite|255-247-162-238
3316|code|MOVS            R0, #0x5B ; '['|91-32
3318|code|B               loc_C40|163-231
3320|code|LDR.W           R3, =(optind_ptr - 0x11F5C)|223-248-84-53
3324|code|STR             R4, [SP,#0x5B0+var_59C]|5-148
3326|code|LDR.W           R10, [R6,R3]; optind|86-248-3-160
3330|code|LDR.W           R7, [R10]|218-248-0-112
3334|code|CMP             R8, R7|184-69
3336|code|BLE             loc_D76|53-221
3338|code|LDR             R3, [SP,#0x5B0+s]|4-155
3340|code|LDRB.W          R11, [R3]|147-248-0-176
3344|code|CMP.W           R11, #0|187-241-0-15
3348|code|BEQ             loc_D58|32-208
3350|code|LDR.W           R3, =(stderr_ptr - 0x11F5C)|223-248-28-53
3354|code|MOV             R5, R10|85-70
3356|code|LDR.W           R4, =(aUnexpectedExtr - 0xD26); "Unexpected extra argument: %s\n"|223-248-52-69
3360|code|LDR             R7, [R6,R3]; stderr|247-88
3362|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3364|code|B               loc_D3A|9-224
3366|code|LDR.W           R3, [R9,R3,LSL#2]|89-248-35-48
3370|code|MOVS            R1, #1|1-33
3372|code|LDR             R0, [R7]|56-104
3374|code|MOV             R2, R4|34-70
3376|code|BLX             __fprintf_chk|255-247-202-238
3380|code|LDR             R3, [R5]|43-104
3382|code|ADDS            R3, #1|1-51
3384|code|STR             R3, [R5]|43-96
3386|code|LDR.W           R3, [R10]|218-248-0-48
3390|code|CMP             R8, R3|152-69
3392|code|BGT             loc_D26|241-220
3394|code|LDR.W           R0, =(aUsageSmpZoneAc - 0xD52); "Usage: smp_zone_activate [--expected=EX"...|223-248-20-5
3398|code|MOVS            R1, #1; size|1-33
3400|code|LDR             R3, [R7]; s|59-104
3402|code|MOV.W           R2, #0x38C; n|79-244-99-114
3406|code|ADD             R0, PC; "Usage: smp_zone_activate [--expected=EX"...|120-68
3408|code|BLX             fwrite|255-247-114-238
3412|code|MOVS            R0, #0x5B ; '['|91-32
3414|code|B               loc_C40|115-231
3416|code|LDR             R4, [SP,#0x5B0+s]|4-156
3418|code|MOVW            R2, #0x1FF; n|64-242-255-18
3422|code|LDR.W           R1, [R9,R7,LSL#2]; src|89-248-39-16
3426|code|ADDS            R7, #1|1-55
3428|code|MOV             R0, R4; dest|32-70
3430|code|BLX             strncpy|255-247-170-238
3434|code|CMP             R8, R7|184-69
3436|code|STRB.W          R11, [R4,#0x1FF]|132-248-255-177
3440|code|STR.W           R7, [R10]|202-248-0-112
3444|code|BGT             loc_D16|207-220
3446|code|LDR             R3, [SP,#0x5B0+s]|4-155
3448|code|LDRB            R3, [R3]|27-120
3450|code|CMP             R3, #0|0-43
3452|code|BEQ.W           loc_EDE|0-240-175-128
3456|code|LDR             R0, [SP,#0x5B0+s]; s|4-152
3458|code|MOVS            R1, #0x2C ; ','; c|44-33
3460|code|BLX             strchr|255-247-118-238
3464|code|CBZ             R0, loc_DBA|184-177
3466|code|LDR.W           R1, =(aD - 0xD96); "%d"|223-248-208-20
3470|code|MOVS            R3, #0|0-35
3472|code|LDR             R2, [SP,#0x5B0+var_580]|12-154
3474|code|ADD             R1, PC; "%d"|121-68
3476|code|STRB.W          R3, [R0],#1|0-248-1-59
3480|code|BLX             __isoc99_sscanf|255-247-126-238
3484|code|CMP             R0, #1|1-40
3486|code|BEQ             loc_DBA|12-208
3488|code|LDR.W           R3, =(stderr_ptr - 0x11F5C)|223-248-144-52
3492|code|MOVS            R1, #1; size|1-33
3494|code|LDR.W           R0, =(aExpectedNumber - 0xDB2); "expected number after separator in SMP_"...|223-248-184-4
3498|code|MOVS            R2, #0x33 ; '3'; n|51-34
3500|code|LDR             R3, [R6,R3]; stderr|243-88
3502|code|ADD             R0, PC; "expected number after separator in SMP_"...|120-68
3504|code|LDR             R3, [R3]; s|27-104
3506|code|BLX             fwrite|255-247-66-238
3510|code|MOVS            R0, #0x5B ; '['|91-32
3512|code|B               loc_C40|66-231
3514|code|LDRD.W          R2, R3, [SP,#0x5B0+var_590]|221-233-8-35
3518|code|ORRS            R3, R2|19-67
3520|code|BEQ.W           loc_F30|0-240-182-128
3524|code|LDRD.W          R0, R1, [SP,#0x5B0+var_590]|221-233-8-1
3528|code|BLX             smp_is_naa5|255-247-48-238
3532|code|CMP             R0, #0|0-40
3534|code|BEQ.W           loc_1026|0-240-42-129
3538|code|ADD.W           R8, SP, #0x5B0+dest|13-245-194-120
3542|code|LDRD.W          R2, R3, [SP,#0x5B0+var_590]|221-233-8-35
3546|code|ADD.W           R10, SP, #0x5B0+var_55C|13-241-84-10
3550|code|STR             R5, [SP,#0x5B0+var_5A4]|3-149
3552|code|LDR             R0, [SP,#0x5B0+s]|4-152
3554|code|STRD.W          R2, R3, [SP,#0x5B0+longind]|205-233-0-35
3558|code|MOV             R2, R8|66-70
3560|code|LDR             R3, [SP,#0x5B0+var_580]|12-155
3562|code|LDR             R1, [R3]|25-104
3564|code|STR.W           R10, [SP,#0x5B0+var_5A8]|205-248-8-160
3568|code|BLX             smp_initiator_open|255-247-142-238
3572|code|CMP             R0, #0|0-40
3574|code|BLT.W           loc_F16|192-242-142-128
3578|code|LDR             R2, [SP,#0x5B0+var_57C]|13-154
3580|code|LDR             R3, [SP,#0x5B0+var_584]|11-155
3582|code|STRB            R3, [R2,#5]|83-113
3584|code|ASRS            R3, R3, #8|27-18
3586|code|STRB            R3, [R2,#4]|19-113
3588|code|CMP             R5, #0|0-45
3590|code|BNE.W           loc_F82|64-240-188-128
3594|code|LDR             R4, [SP,#0x5B0+var_59C]|5-156
3596|code|MOV             R1, R5; c|41-70
3598|code|MOVS            R2, #0x18; n|24-34
3600|code|ADD.W           R8, SP, #0x5B0+var_440|13-245-184-120
3604|code|MOVS            R7, #0xC|12-39
3606|code|MOV             R0, R4; s|32-70
3608|code|BLX             memset|255-247-68-238
3612|code|LDR             R3, [SP,#0x5B0+var_57C]|13-155
3614|code|MOV             R0, R10|80-70
3616|code|MOV             R1, R4|33-70
3618|code|MOV             R2, R5|42-70
3620|code|STR             R4, [SP,#0x5B0+var_59C]|5-148
3622|code|STR             R3, [R4,#4]|99-96
3624|code|MOVS            R3, #8|8-35
3626|code|STR.W           R8, [R4,#0xC]|196-248-12-128
3630|code|STR             R7, [R4]|39-96
3632|code|STR             R3, [R4,#8]|163-96
3634|code|BLX             smp_send_req|255-247-38-238
3638|code|CMP             R0, #0|0-40
3640|code|BNE.W           loc_11F8|64-240-222-129
3644|code|LDR             R3, [SP,#0x5B0+var_59C]|5-155
3646|code|LDR             R3, [R3,#0x14]|91-105
3648|code|CMP             R3, #0|0-43
3650|code|BNE.W           loc_1058|64-240-9-129
3654|code|LDR             R3, [SP,#0x5B0+var_59C]|5-155
3656|code|LDR             R4, [R3,#0x10]|28-105
3658|code|CMP             R4, #3|3-44
3660|code|BLS.W           loc_1088|64-242-28-129
3664|code|LDRB.W          R9, [R8,#3]|152-248-3-144
3668|code|CMP.W           R9, #0|185-241-0-15
3672|code|BNE             loc_E64|4-209
3674|code|LDRB.W          R3, [R8,#2]|152-248-2-48
3678|code|CMP             R3, #0|0-43
3680|code|BEQ.W           loc_10D4|0-240-56-129
3684|code|ADD.W           R0, R9, #1|9-241-1-0
3688|code|LSLS            R0, R0, #2|128-0
3690|code|CMP             R0, R4|160-66
3692|code|BLE.W           loc_1084|64-243-10-129
3696|code|CMP             R4, #0|0-44
3698|code|BLT.W           loc_1084|192-242-7-129
3702|code|CBZ             R5, loc_E8C|77-177
3704|code|LDR             R7, =(stderr_ptr - 0x11F5C)|238-79
3706|code|MOVS            R1, #1|1-33
3708|code|LDR             R2, =(aActualResponse - 0xE86); "actual response length [%d] less than d"...|249-74
3710|code|MOV             R3, R4|35-70
3712|code|LDR             R7, [R6,R7]; stderr|247-89
3714|code|ADD             R2, PC; "actual response length [%d] less than d"...|122-68
3716|code|STR             R0, [SP,#0x5B0+longind]|0-144
3718|code|LDR             R0, [R7]|56-104
3720|code|BLX             __fprintf_chk|255-247-30-238
3724|code|LDR             R3, [SP,#0x5B0+var_594]|7-155
3726|code|LDR             R2, [SP,#0x5B0+var_588]|10-154
3728|code|ORRS            R3, R2|19-67
3730|code|BEQ.W           loc_106A|0-240-234-128
3734|code|LDR             R3, [SP,#0x5B0+var_594]|7-155
3736|code|CMP             R3, #0|0-43
3738|code|BEQ.W           loc_10C2|0-240-18-129
3742|code|MOV             R1, R4; len|33-70
3744|code|MOV             R0, R8; str|64-70
3746|code|MOVS            R2, #1; no_ascii|1-34
3748|code|BLX             dStrHex|255-247-176-237
3752|code|LDRB.W          R3, [R8]|152-248-0-48
3756|code|CMP             R3, #0x41 ; 'A'|65-43
3758|code|BEQ.W           loc_110C|0-240-45-129
3762|code|MOV             R0, R10|80-70
3764|code|BLX             smp_initiator_close|255-247-162-237
3768|code|CMP             R0, #0|0-40
3770|code|BLT.W           loc_10E4|192-242-19-129
3774|code|MOVS            R4, #0x61 ; 'a'|97-36
3776|code|CBZ             R4, loc_EC4|4-177
3778|code|CBNZ            R5, loc_EC8|13-185
3780|code|MOV             R0, R4|32-70
3782|code|B               loc_C40|187-230
3784|code|LDR             R0, =(stderr_ptr - 0x11F5C)|218-72
3786|code|MOVS            R1, #1|1-33
3788|code|LDR             R2, =(aExitStatusDInd - 0xED6); "Exit status %d indicates error detected"...|230-74
3790|code|MOV             R3, R4|35-70
3792|code|LDR             R0, [R6,R0]; stderr|48-88
3794|code|ADD             R2, PC; "Exit status %d indicates error detected"...|122-68
3796|code|LDR             R0, [R0]|0-104
3798|code|BLX             __fprintf_chk|255-247-248-237
3802|code|MOV             R0, R4|32-70
3804|code|B               loc_C40|176-230
3806|code|LDR             R0, =(aSmpUtilsDevice - 0xEE4); "SMP_UTILS_DEVICE"|227-72
3808|code|ADD             R0, PC; "SMP_UTILS_DEVICE"|120-68
3810|code|BLX             getenv|255-247-176-237
3814|code|CMP             R0, #0|0-40
3816|code|BEQ             loc_F5C|56-208
3818|code|MOV             R1, R0; src|1-70
3820|code|MOVW            R2, #0x1FF; n|64-242-255-18
3824|code|LDR             R0, [SP,#0x5B0+s]; dest|4-152
3826|code|BLX             strncpy|255-247-228-237
3830|code|B               loc_D80|67-231
3832|code|LDR             R3, =(stderr_ptr - 0x11F5C)|206-75
3834|code|LDR             R3, [R6,R3]; stderr|243-88
3836|code|LDR             R4, [R3]|28-104
3838|code|BLX             __errno_location|255-247-198-237
3842|code|LDR             R0, [R0]; errnum|0-104
3844|code|BLX             safe_strerror|255-247-236-237
3848|code|LDR             R2, =(aCloseErrorS - 0xF10); "close error: %s\n"|217-74
3850|code|MOVS            R1, #1|1-33
3852|code|ADD             R2, PC; "close error: %s\n"|122-68
3854|code|MOV             R3, R0|3-70
3856|code|MOV             R0, R4|32-70
3858|code|BLX             __fprintf_chk|255-247-218-237
3862|code|MOVS            R0, #0x5C ; '\'|92-32
3864|code|B               loc_C40|146-230
3866|code|LDR             R3, =(stderr_ptr - 0x11F5C)|198-75
3868|code|MOVS            R1, #1; size|1-33
3870|code|LDR             R0, =(aBadArgumentToS - 0xF28); "bad argument to '--sa'\n"|213-72
3872|code|MOVS            R2, #0x17; n|23-34
3874|code|LDR             R3, [R6,R3]; stderr|243-88
3876|code|ADD             R0, PC; "bad argument to '--sa'\n"|120-68
3878|code|LDR             R3, [R3]; s|27-104
3880|code|BLX             fwrite|255-247-134-237
3884|code|MOVS            R0, #0x5B ; '['|91-32
3886|code|B               loc_C40|135-230
3888|code|LDR             R0, =(aSmpUtilsSasAdd - 0xF36); "SMP_UTILS_SAS_ADDR"|209-72
3890|code|ADD             R0, PC; "SMP_UTILS_SAS_ADDR"|120-68
3892|code|BLX             getenv|255-247-134-237
3896|code|CMP             R0, #0|0-40
3898|code|BEQ.W           loc_DD2|63-244-74-175
3902|code|BLX             smp_get_llnum|255-247-214-237
3906|code|ADDS            R2, R1, #1|74-28
3908|code|IT EQ|8-191
3910|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3914|code|BEQ.W           loc_1192|0-240-34-129
3918|code|ORRS.W          R3, R0, R1|80-234-1-3
3922|code|BEQ.W           loc_DD2|63-244-62-175
3926|code|STRD.W          R0, R1, [SP,#0x5B0+var_590]|205-233-8-1
3930|code|B               loc_DC4|51-231
3932|code|LDR             R3, =(stderr_ptr - 0x11F5C)|181-75
3934|code|MOVS            R1, #1; size|1-33
3936|code|LDR             R0, =(aMissingDeviceN - 0xF6A); "missing device name on command line\n  "...|198-72
3938|code|MOVS            R2, #0x62 ; 'b'; n|98-34
3940|code|LDR             R4, [R6,R3]; stderr|244-88
3942|code|ADD             R0, PC; "missing device name on command line\n  "...|120-68
3944|code|LDR             R3, [R4]; s|35-104
3946|code|BLX             fwrite|255-247-102-237
3950|code|LDR             R0, =(aUsageSmpZoneAc - 0xF78); "Usage: smp_zone_activate [--expected=EX"...|196-72
3952|code|LDR             R3, [R4]; s|35-104
3954|code|MOVS            R1, #1; size|1-33
3956|code|ADD             R0, PC; "Usage: smp_zone_activate [--expected=EX"...|120-68
3958|code|MOV.W           R2, #0x38C; n|79-244-99-114
3962|code|BLX             fwrite|255-247-94-237
3966|code|MOVS            R0, #0x5B ; '['|91-32
3968|code|B               loc_C40|94-230
3970|code|LDR             R3, =(stderr_ptr - 0x11F5C)|172-75
3972|code|MOVS            R1, #1; size|1-33
3974|code|LDR             R0, =(aZoneActivateRe - 0xF98); "    Zone activate request: "|191-72
3976|code|MOVS            R2, #0x1B; n|27-34
3978|code|LDR.W           R8, =(a02x - 0xF9A); "%02x "|223-248-252-130
3982|code|MOV.W           R11, #0|79-240-0-11
3986|code|LDR             R7, [R6,R3]; stderr|247-88
3988|code|ADD             R0, PC; "    Zone activate request: "|120-68
3990|code|ADD             R8, PC; "%02x "|248-68
3992|code|LDR             R3, [R7]; s|59-104
3994|code|BLX             fwrite|255-247-78-237
3998|code|LDR.W           R9, [SP,#0x5B0+var_59C]|221-248-20-144
4002|code|LDR             R4, [SP,#0x5B0+var_57C]|13-156
4004|code|STR             R5, [SP,#0x5B0+s]|4-149
4006|code|MOV             R5, R11|93-70
4008|code|MOV             R11, R7|187-70
4010|code|MOVS            R1, #1|1-33
4012|code|LDRB            R3, [R4,R5]|99-93
4014|code|LDR             R0, [R7]|56-104
4016|code|ADD             R5, R1|13-68
4018|code|MOV             R2, R8|66-70
4020|code|BLX             __fprintf_chk|255-247-136-237
4024|code|CMP             R5, #0xC|12-45
4026|code|BNE             loc_FAA|246-209
4028|code|MOV             R4, R9|76-70
4030|code|STR.W           R9, [SP,#0x5B0+var_59C]|205-248-20-144
4034|code|MOV             R9, R11|217-70
4036|code|MOVS            R0, #0xA; c|10-32
4038|code|LDR.W           R1, [R9]; stream|217-248-0-16
4042|code|MOV             R11, R5|171-70
4044|code|LDR             R5, [SP,#0x5B0+s]|4-157
4046|code|BLX             fputc|255-247-130-237
4050|code|MOV             R0, R4; s|32-70
4052|code|MOVS            R1, #0; c|0-33
4054|code|MOVS            R2, #0x18; n|24-34
4056|code|ADD.W           R8, SP, #0x5B0+var_440|13-245-184-120
4060|code|BLX             memset|255-247-98-237
4064|code|MOV             R1, R4|33-70
4066|code|STR             R4, [SP,#0x5B0+var_59C]|5-148
4068|code|MOV             R0, R10|80-70
4070|code|STR.W           R11, [R4]|196-248-0-176
4074|code|MOV             R2, R5|42-70
4076|code|LDR             R4, [SP,#0x5B0+var_57C]|13-156
4078|code|MOV.W           LR, #8|79-240-8-14
4082|code|STR.W           R8, [R1,#0xC]|193-248-12-128
4086|code|STR.W           LR, [R1,#8]|193-248-8-224
4090|code|STR             R4, [R1,#4]|76-96
4092|code|BLX             smp_send_req|255-247-64-237
4096|code|MOV             R3, R0|3-70
4098|code|CMP             R0, #0|0-40
4100|code|BEQ.W           loc_E3C|63-244-26-175
4104|code|LDR             R2, =(aSmpSendReqFail - 0x1014); "smp_send_req failed, res=%d\n"|160-74
4106|code|MOVS            R1, #1|1-33
4108|code|LDR.W           R0, [R9]|217-248-0-0
4112|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4114|code|BLX             __fprintf_chk|255-247-90-237
4118|code|MOV             R0, R10|80-70
4120|code|BLX             smp_initiator_close|255-247-240-236
4124|code|CMP             R0, #0|0-40
4126|code|BLT.W           loc_118C|192-242-181-128
4130|code|MOVS            R4, #0x63 ; 'c'|99-36
4132|code|B               loc_EC0|76-231
4134|code|LDR             R3, =(stderr_ptr - 0x11F5C)|131-75
4136|code|ADD.W           R8, SP, #0x5B0+dest|13-245-194-120
4140|code|LDR             R0, =(aSasTargetAddre - 0x1038); "SAS (target) address not in naa-5 forma"...|152-72
4142|code|MOVS            R1, #1; size|1-33
4144|code|MOVS            R2, #0x41 ; 'A'; n|65-34
4146|code|LDR             R7, [R6,R3]; stderr|247-88
4148|code|ADD             R0, PC; "SAS (target) address not in naa-5 forma"...|120-68
4150|code|LDR             R3, [R7]; s|59-104
4152|code|BLX             fwrite|255-247-254-236
4156|code|LDRB.W          R3, [R8]|152-248-0-48
4160|code|CMP             R3, #0|0-43
4162|code|BNE.W           loc_DD6|127-244-200-174
4166|code|LDR             R0, =(aUseInterfaceTo - 0x1052); "    use '--interface=' to override\n"|147-72
4168|code|MOVS            R1, #1; size|1-33
4170|code|LDR             R3, [R7]; s|59-104
4172|code|MOVS            R2, #0x23 ; '#'; n|35-34
4174|code|ADD             R0, PC; "    use '--interface=' to override\n"|120-68
4176|code|BLX             fwrite|255-247-242-236
4180|code|MOVS            R0, #0x5B ; '['|91-32
4182|code|B               loc_C40|243-229
4184|code|LDR             R0, =(stderr_ptr - 0x11F5C)|118-72
4186|code|MOVS            R1, #1|1-33
4188|code|LDR             R2, =(aSmpSendReqTran - 0x1064); "smp_send_req transport_error=%d\n"|142-74
4190|code|LDR             R7, [R6,R0]; stderr|55-88
4192|code|ADD             R2, PC; "smp_send_req transport_error=%d\n"|122-68
4194|code|LDR             R0, [R7]|56-104
4196|code|BLX             __fprintf_chk|255-247-48-237
4200|code|B               loc_1016|213-231
4202|code|LDRB.W          R3, [R8]|152-248-0-48
4206|code|CMP             R3, #0x41 ; 'A'|65-43
4208|code|BEQ             loc_109C|20-208
4210|code|LDR             R0, =(stderr_ptr - 0x11F5C)|112-72
4212|code|MOVS            R1, #1|1-33
4214|code|LDR             R2, =(aExpectedSmpFra - 0x107E); "expected SMP frame response type, got=0"...|137-74
4216|code|LDR             R7, [R6,R0]; stderr|55-88
4218|code|ADD             R2, PC; "expected SMP frame response type, got=0"...|122-68
4220|code|LDR             R0, [R7]|56-104
4222|code|BLX             __fprintf_chk|255-247-36-237
4226|code|B               loc_EB2|22-231
4228|code|MOV             R4, R0|4-70
4230|code|B               loc_E8C|1-231
4232|code|LDR             R0, =(stderr_ptr - 0x11F5C)|106-72
4234|code|MOV             R3, R4|35-70
4236|code|LDR             R2, =(aResponseTooSho - 0x1096); "response too short, len=%d\n"|132-74
4238|code|MOVS            R1, #1|1-33
4240|code|LDR             R7, [R6,R0]; stderr|55-88
4242|code|ADD             R2, PC; "response too short, len=%d\n"|122-68
4244|code|LDR             R0, [R7]|56-104
4246|code|BLX             __fprintf_chk|255-247-24-237
4250|code|B               loc_EB2|10-231
4252|code|LDR             R3, [SP,#0x5B0+var_57C]|13-155
4254|code|LDRB.W          R4, [R8,#1]|152-248-1-64
4258|code|LDRB            R3, [R3,#1]|91-120
4260|code|CMP             R4, R3|156-66
4262|code|BNE             loc_1178|103-209
4264|code|LDRB.W          R0, [R8,#2]|152-248-2-0
4268|code|CMP             R0, #0|0-40
4270|code|BNE.W           loc_11D6|64-240-146-128
4274|code|MOV             R0, R10|80-70
4276|code|BLX             smp_initiator_close|255-247-162-236
4280|code|CMP             R0, #0|0-40
4282|code|BLT.W           loc_EF8|255-246-29-175
4286|code|MOVS            R4, #0|0-36
4288|code|B               loc_EC0|254-230
4290|code|LDR             R7, [SP,#0x5B0+var_594]|7-159
4292|code|LDRB.W          R0, [R8,R7]; c|24-248-7-0
4296|code|ADDS            R7, #1|1-55
4298|code|BLX             putchar|255-247-242-236
4302|code|CMP             R7, R4|167-66
4304|code|BNE             loc_10C4|248-209
4306|code|B               loc_EA8|233-230
4308|code|LDRB.W          R0, [R8,#1]|152-248-1-0
4312|code|BLX             smp_get_func_def_resp_len|255-247-156-236
4316|code|CMP             R0, #0|0-40
4318|code|BLT             loc_11BC|109-219
4320|code|MOV             R9, R0|129-70
4322|code|B               loc_E64|191-230
4324|code|LDR             R3, =(stderr_ptr - 0x11F5C)|83-75
4326|code|MOVS            R4, #0x61 ; 'a'|97-36
4328|code|LDR             R7, [R6,R3]; stderr|247-88
4330|code|BLX             __errno_location|255-247-208-236
4334|code|LDR             R7, [R7]|63-104
4336|code|LDR             R0, [R0]; errnum|0-104
4338|code|BLX             safe_strerror|255-247-246-236
4342|code|LDR             R2, =(aCloseErrorS - 0x10FE); "close error: %s\n"|107-74
4344|code|MOVS            R1, #1|1-33
4346|code|ADD             R2, PC; "close error: %s\n"|122-68
4348|code|MOV             R3, R0|3-70
4350|code|MOV             R0, R7|56-70
4352|code|BLX             __fprintf_chk|255-247-226-236
4356|code|ADDS            R3, R4, #1|99-28
4358|code|BNE.W           loc_EC0|127-244-219-174
4362|code|B               loc_1022|138-231
4364|code|LDR             R3, [SP,#0x5B0+var_57C]|13-155
4366|code|LDRB.W          R2, [R8,#1]|152-248-1-32
4370|code|LDRB            R3, [R3,#1]|91-120
4372|code|CMP             R2, R3|154-66
4374|code|BNE.W           loc_EB2|127-244-204-174
4378|code|LDRB.W          R0, [R8,#2]|152-248-2-0
4382|code|CMP             R0, #0|0-40
4384|code|BEQ             loc_10B2|199-208
4386|code|CBZ             R5, loc_1142|117-177
4388|code|LDR             R3, =(stderr_ptr - 0x11F5C)|67-75
4390|code|MOV.W           R1, #0x100|79-244-128-113
4394|code|ADD             R2, SP, #0x5B0+var_32C|161-170
4396|code|LDR             R3, [R6,R3]; stderr|243-88
4398|code|LDR             R4, [R3]|28-104
4400|code|BLX             smp_get_func_res_str|255-247-226-236
4404|code|LDR             R2, =(aZoneActivateRe_0 - 0x113C); "Zone activate result: %s\n"|92-74
4406|code|MOVS            R1, #1|1-33
4408|code|ADD             R2, PC; "Zone activate result: %s\n"|122-68
4410|code|MOV             R3, R0|3-70
4412|code|MOV             R0, R4|32-70
4414|code|BLX             __fprintf_chk|255-247-196-236
4418|code|LDRB.W          R4, [R8,#2]|152-248-2-64
4422|code|MOV             R0, R10|80-70
4424|code|BLX             smp_initiator_close|255-247-88-236
4428|code|CMP             R0, #0|0-40
4430|code|BGE.W           loc_EC0|191-246-183-174
4434|code|LDR             R3, =(stderr_ptr - 0x11F5C)|56-75
4436|code|LDR             R3, [R6,R3]; stderr|243-88
4438|code|LDR             R7, [R3]|31-104
4440|code|BLX             __errno_location|255-247-152-236
4444|code|LDR             R0, [R0]; errnum|0-104
4446|code|BLX             safe_strerror|255-247-192-236
4450|code|LDR             R2, =(aCloseErrorS - 0x116A); "close error: %s\n"|82-74
4452|code|MOVS            R1, #1|1-33
4454|code|ADD             R2, PC; "close error: %s\n"|122-68
4456|code|MOV             R3, R0|3-70
4458|code|MOV             R0, R7|56-70
4460|code|BLX             __fprintf_chk|255-247-172-236
4464|code|CMP             R4, #0|0-44
4466|code|BEQ.W           loc_F16|63-244-208-174
4470|code|B               loc_EC0|163-230
4472|code|LDR             R0, =(stderr_ptr - 0x11F5C)|46-72
4474|code|MOVS            R1, #1|1-33
4476|code|LDR             R2, =(aExpectedFuncti - 0x1184); "Expected function code=0x%x, got=0x%x\n"|76-74
4478|code|LDR             R7, [R6,R0]; stderr|55-88
4480|code|ADD             R2, PC; "Expected function code=0x%x, got=0x%x\n"|122-68
4482|code|STR             R4, [SP,#0x5B0+longind]|0-148
4484|code|LDR             R0, [R7]|56-104
4486|code|BLX             __fprintf_chk|255-247-160-236
4490|code|B               loc_EB2|146-230
4492|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
4496|code|B               loc_10EA|171-231
4498|code|LDR             R3, =(stderr_ptr - 0x11F5C)|40-75
4500|code|MOVS            R1, #1; size|1-33
4502|code|LDR             R0, =(aBadValueInEnvi - 0x11A4); "bad value in environment variable SMP_U"...|71-72
4504|code|MOVS            R2, #0x35 ; '5'; n|53-34
4506|code|ADD.W           R8, SP, #0x5B0+dest|13-245-194-120
4510|code|LDR             R7, [R6,R3]; stderr|247-88
4512|code|ADD             R0, PC; "bad value in environment variable SMP_U"...|120-68
4514|code|LDR             R3, [R7]; s|59-104
4516|code|BLX             fwrite|255-247-72-236
4520|code|LDR             R0, =(aUse0 - 0x11B4); "    use 0\n"|67-72
4522|code|LDR             R3, [R7]; s|59-104
4524|code|MOVS            R1, #1; size|1-33
4526|code|MOVS            R2, #0xA; n|10-34
4528|code|ADD             R0, PC; "    use 0\n"|120-68
4530|code|BLX             fwrite|255-247-66-236
4534|code|B               loc_DD6|14-230
4536|code|BLX             __stack_chk_fail|255-247-50-236
4540|code|CMP             R5, #0|0-45
4542|code|BEQ.W           loc_E64|63-244-81-174
4546|code|LDR             R3, =(stderr_ptr - 0x11F5C)|28-75
4548|code|MOVS            R1, #1; size|1-33
4550|code|LDR             R0, =(aUnableToDeterm - 0x11D0); "unable to determine response length\n"|61-72
4552|code|MOVS            R2, #0x24 ; '$'; n|36-34
4554|code|LDR             R7, [R6,R3]; stderr|247-88
4556|code|ADD             R0, PC; "unable to determine response length\n"|120-68
4558|code|LDR             R3, [R7]; s|59-104
4560|code|BLX             fwrite|255-247-50-236
4564|code|B               loc_E64|70-230
4566|code|MOV.W           R1, #0x100|79-244-128-113
4570|code|ADD             R2, SP, #0x5B0+var_32C|161-170
4572|code|BLX             smp_get_func_res_str|255-247-140-236
4576|code|LDR             R4, =(stderr_ptr - 0x11F5C)|20-76
4578|code|LDR             R2, =(aZoneActivateRe_0 - 0x11EA); "Zone activate result: %s\n"|55-74
4580|code|MOVS            R1, #1|1-33
4582|code|ADD             R2, PC; "Zone activate result: %s\n"|122-68
4584|code|MOV             R3, R0|3-70
4586|code|LDR             R0, [R6,R4]; stderr|48-89
4588|code|LDR             R0, [R0]|0-104
4590|code|BLX             __fprintf_chk|255-247-108-236
4594|code|LDRB.W          R4, [R8,#2]|152-248-2-64
4598|code|B               loc_1146|166-231
4600|code|LDR             R4, =(stderr_ptr - 0x11F5C)|14-76
4602|code|MOV             R3, R0|3-70
4604|code|LDR             R2, =(aSmpSendReqFail - 0x1206); "smp_send_req failed, res=%d\n"|49-74
4606|code|MOVS            R1, #1|1-33
4608|code|LDR             R7, [R6,R4]; stderr|55-89
4610|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4612|code|LDR             R0, [R7]|56-104
4614|code|BLX             __fprintf_chk|255-247-96-236
4618|code|LDR             R0, =(aTryAddingVOpti - 0x1216); "    try adding '-v' option for more deb"...|47-72
4620|code|LDR             R3, [R7]; s|59-104
4622|code|MOVS            R1, #1; size|1-33
4624|code|MOVS            R2, #0x2A ; '*'; n|42-34
4626|code|ADD             R0, PC; "    try adding '-v' option for more deb"...|120-68
4628|code|BLX             fwrite|255-247-16-236
4632|code|B               loc_1016|253-230
4634|data|ALIGN 4|0-191
4636|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB40|28-20-1-0
4640|data|DCD __stack_chk_guard_ptr - 0x11F5C|128-0-0-0
4644|data|DCD dword_1458 - 0xB4A|14-9-0-0
4648|data|DCD aEHhiRsVv - 0xB8C; "E:hHI:rs:vV"|216-8-0-0
4652|data|DCD off_12008 - 0xB90; "expected"|120-20-1-0
4656|data|DCD optarg_ptr - 0x11F5C|160-0-0-0
4660|data|DCD stderr_ptr - 0x11F5C|136-0-0-0
4664|data|DCD aVersionS - 0xC38; "version: %s\n"|0-12-0-0
4668|data|DCD a10420130604 - 0xC3A; "1.04 20130604"|14-12-0-0
4672|data|DCD aBadArgumentToE - 0xCA8; "bad argument to '--expected'\n"|200-7-0-0
4676|data|DCD aUsageSmpZoneAc - 0xCC4; "Usage: smp_zone_activate [--expected=EX"...|204-7-0-0
4680|data|DCD aUnrecognisedSw - 0xCDE; "unrecognised switch code 0x%x ??\n"|122-11-0-0
4684|data|DCD aUsageSmpZoneAc - 0xCEE; "Usage: smp_zone_activate [--expected=EX"...|162-7-0-0
4688|data|DCD optind_ptr - 0x11F5C|132-0-0-0
4692|data|DCD aUnexpectedExtr - 0xD26; "Unexpected extra argument: %s\n"|86-11-0-0
4696|data|DCD aUsageSmpZoneAc - 0xD52; "Usage: smp_zone_activate [--expected=EX"...|62-7-0-0
4700|data|DCD aD - 0xD96; "%d"|126-11-0-0
4704|data|DCD aExpectedNumber - 0xDB2; "expected number after separator in SMP_"...|102-11-0-0
4708|data|DCD aActualResponse - 0xE86; "actual response length [%d] less than d"...|50-12-0-0
4712|data|DCD aExitStatusDInd - 0xED6; "Exit status %d indicates error detected"...|162-12-0-0
4716|data|DCD aSmpUtilsDevice - 0xEE4; "SMP_UTILS_DEVICE"|184-9-0-0
4720|data|DCD aCloseErrorS - 0xF10; "close error: %s\n"|84-12-0-0
4724|data|DCD aBadArgumentToS - 0xF28; "bad argument to '--sa'\n"|248-8-0-0
4728|data|DCD aSmpUtilsSasAdd - 0xF36; "SMP_UTILS_SAS_ADDR"|22-10-0-0
4732|data|DCD aMissingDeviceN - 0xF6A; "missing device name on command line\n  "...|70-9-0-0
4736|data|DCD aUsageSmpZoneAc - 0xF78; "Usage: smp_zone_activate [--expected=EX"...|24-5-0-0
4740|data|DCD aZoneActivateRe - 0xF98; "    Zone activate request: "|116-10-0-0
4744|data|DCD a02x - 0xF9A; "%02x "|142-10-0-0
4748|data|DCD aSmpSendReqFail - 0x1014; "smp_send_req failed, res=%d\n"|28-10-0-0
4752|data|DCD aSasTargetAddre - 0x1038; "SAS (target) address not in naa-5 forma"...|108-9-0-0
4756|data|DCD aUseInterfaceTo - 0x1052; "    use '--interface=' to override\n"|150-9-0-0
4760|data|DCD aSmpSendReqTran - 0x1064; "smp_send_req transport_error=%d\n"|236-9-0-0
4764|data|DCD aExpectedSmpFra - 0x107E; "expected SMP frame response type, got=0"...|146-10-0-0
4768|data|DCD aResponseTooSho - 0x1096; "response too short, len=%d\n"|222-9-0-0
4772|data|DCD aCloseErrorS - 0x10FE; "close error: %s\n"|102-10-0-0
4776|data|DCD aZoneActivateRe_0 - 0x113C; "Zone activate result: %s\n"|184-9-0-0
4780|data|DCD aCloseErrorS - 0x116A; "close error: %s\n"|250-9-0-0
4784|data|DCD aExpectedFuncti - 0x1184; "Expected function code=0x%x, got=0x%x\n"|184-9-0-0
4788|data|DCD aBadValueInEnvi - 0x11A4; "bad value in environment variable SMP_U"...|188-7-0-0
4792|data|DCD aUse0 - 0x11B4; "    use 0\n"|228-7-0-0
4796|data|DCD aUnableToDeterm - 0x11D0; "unable to determine response length\n"|192-8-0-0
4800|data|DCD aZoneActivateRe_0 - 0x11EA; "Zone activate result: %s\n"|10-9-0-0
4804|data|DCD aSmpSendReqFail - 0x1206; "smp_send_req failed, res=%d\n"|42-8-0-0
4808|data|DCD aTryAddingVOpti - 0x1216; "    try adding '-v' option for more deb"...|142-9-0-0
4812|code|MOV.W           R11, #0|79-240-0-11
4816|code|MOV.W           LR, #0|79-240-0-14
4820|code|POP             {R1}; argc|2-188
4822|code|MOV             R2, SP; ubp_av|106-70
4824|code|PUSH            {R2}; stack_end|4-180
4826|code|PUSH            {R0}; rtld_fini|1-180
4828|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1304)|223-248-36-160
4832|code|ADR             R3, off_1304|8-163
4834|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4836|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F5C)|223-248-32-192
4840|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4844|code|PUSH.W          {R12}; fini|77-248-4-205
4848|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F5C)|6-75
4850|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4854|code|LDR             R0, =(main_ptr - 0x11F5C)|6-72
4856|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4860|code|BLX             __libc_start_main|255-247-168-235
4864|code|BLX             abort|255-247-12-236
4868|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1304|88-12-1-0
4872|data|DCD __libc_csu_fini_ptr - 0x11F5C|116-0-0-0
4876|data|DCD __libc_csu_init_ptr - 0x11F5C|144-0-0-0
4880|data|DCD main_ptr - 0x11F5C|148-0-0-0
4884|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1324)|20-48-159-229
4888|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F5C)|20-32-159-229
4892|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4896|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4900|code|CMP             R2, #0|0-0-82-227
4904|code|BXEQ            LR|30-255-47-1
4908|code|B               __gmon_start__|202-253-255-234
4912|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1324|56-12-1-0
4916|data|DCD __gmon_start___ptr_0 - 0x11F5C|140-0-0-0
4920|code|LDR             R3, =(__bss_start__ - 0x1340)|7-75
4922|code|LDR             R0, =(__bss_start__ - 0x1344)|8-72
4924|code|ADD             R3, PC; __bss_start__|123-68
4926|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x134A)|8-74
4928|code|ADD             R0, PC; __bss_start__|120-68
4930|code|ADDS            R3, #3|3-51
4932|code|SUBS            R3, R3, R0|27-26
4934|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4936|code|CMP             R3, #6|6-43
4938|code|BLS             locret_1354|3-217
4940|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F5C)|5-75
4942|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4944|code|CBZ             R3, locret_1354|3-177
4946|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4948|code|BX              LR|112-71
4950|data|ALIGN 4|0-191
4952|data|DCD __bss_start__ - 0x1340|88-13-1-0
4956|data|DCD __bss_start__ - 0x1344|84-13-1-0
4960|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x134A|18-12-1-0
4964|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F5C|124-0-0-0
4968|code|LDR             R1, =(__bss_start__ - 0x1370)|8-73
4970|code|LDR             R0, =(__bss_start__ - 0x1374)|9-72
4972|code|ADD             R1, PC; __bss_start__|121-68
4974|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1378)|9-75
4976|code|ADD             R0, PC; __bss_start__|120-68
4978|code|SUBS            R1, R1, R0|9-26
4980|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4982|code|ASRS            R1, R1, #2|137-16
4984|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4988|code|ASRS            R1, R1, #1|73-16
4990|code|BEQ             locret_1388|3-208
4992|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F5C)|5-74
4994|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4996|code|CBZ             R3, locret_1388|3-177
4998|code|BX              R3; _ITM_registerTMCloneTable|24-71
5000|code|BX              LR|112-71
5002|data|ALIGN 4|0-191
5004|data|DCD __bss_start__ - 0x1370|40-13-1-0
5008|data|DCD __bss_start__ - 0x1374|36-13-1-0
5012|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1378|228-11-1-0
5016|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F5C|156-0-0-0
5020|code|PUSH            {R3,LR}|8-181
5022|code|LDR             R3, =(__bss_start__ - 0x13A6)|10-75
5024|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x13A8)|10-74
5026|code|ADD             R3, PC; __bss_start__|123-68
5028|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5030|code|LDRB            R3, [R3]|27-120
5032|code|CBNZ            R3, locret_13C6|107-185
5034|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F5C)|9-75
5036|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5038|code|CBZ             R3, loc_13BA|35-177
5040|code|LDR             R3, =(off_12004 - 0x13B6)|8-75
5042|code|ADD             R3, PC; off_12004|123-68
5044|code|LDR             R0, [R3]; off_12004 ; void *|24-104
5046|code|BLX             __cxa_finalize|255-247-28-235
5050|code|BL              sub_1338|255-247-189-255
5054|code|LDR             R3, =(__bss_start__ - 0x13C6)|6-75
5056|code|MOVS            R2, #1|1-34
5058|code|ADD             R3, PC; __bss_start__|123-68
5060|code|STRB            R2, [R3]|26-112
5062|code|POP             {R3,PC}|8-189
5064|data|DCD __bss_start__ - 0x13A6|242-12-1-0
5068|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13A8|180-11-1-0
5072|data|DCD __cxa_finalize_ptr_0 - 0x11F5C|120-0-0-0
5076|data|DCD off_12004 - 0x13B6|78-12-1-0
5080|data|DCD __bss_start__ - 0x13C6|210-12-1-0
5084|code|LDR             R0, =(dword_11E50 - 0x13E4)|7-72
5086|code|PUSH            {R3,LR}|8-181
5088|code|ADD             R0, PC; dword_11E50|120-68
5090|code|LDR             R2, [R0]|2-104
5092|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13EA)|6-75
5094|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5096|code|CBNZ            R2, loc_13F0|18-185
5098|code|POP.W           {R3,LR}|189-232-8-64
5102|code|B               sub_1368|187-231
5104|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F5C)|4-74
5106|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5108|code|CMP             R3, #0|0-43
5110|code|BEQ             loc_13EA|248-208
5112|code|BLX             R3; _Jv_RegisterClasses|152-71
5114|code|B               loc_13EA|246-231
5116|data|DCD dword_11E50 - 0x13E4|108-10-1-0
5120|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13EA|114-11-1-0
5124|data|DCD _Jv_RegisterClasses_ptr - 0x11F5C|152-0-0-0
5128|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5132|code|MOV             R7, R0|7-70
5134|code|LDR             R6, =(off_11E4C - 0x141A)|12-78
5136|code|MOV             R8, R1|136-70
5138|code|LDR             R5, =(off_11E48 - 0x1420)|12-77
5140|code|MOV             R9, R2|145-70
5142|code|ADD             R6, PC; off_11E4C|126-68
5144|code|BLX             .init_proc|255-247-218-234
5148|code|ADD             R5, PC; off_11E48|125-68
5150|code|SUBS            R6, R6, R5|118-27
5152|code|ASRS            R6, R6, #2|182-16
5154|code|BEQ             locret_143A|10-208
5156|code|SUBS            R5, #4|4-61
5158|code|MOVS            R4, #0|0-36
5160|code|ADDS            R4, #1|1-52
5162|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5166|code|MOV             R0, R7|56-70
5168|code|MOV             R1, R8|65-70
5170|code|MOV             R2, R9|74-70
5172|code|BLX             R3|152-71
5174|code|CMP             R4, R6|180-66
5176|code|BNE             loc_1428|246-209
5178|code|POP.W           {R3-R9,PC}|189-232-248-131
5182|data|ALIGN 0x10|0-191
5184|data|DCD off_11E4C - 0x141A|50-10-1-0
5188|data|DCD off_11E48 - 0x1420|40-10-1-0
5192|code|BX              LR|112-71
5194|data|ALIGN 4|0-191
5196|code|PUSH            {R3,LR}; _fini|8-64-45-233
5200|code|POP             {R3,PC}|8-128-189-232
7188|data|ALIGN 8|0-0-0-0
73288|data|DCD sub_13DC+1|221-19-0-0
73292|data|DCD sub_139C+1|157-19-0-0
73296|data|DCD 0|0-0-0-0
73300|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsmputils1.so.1|1-0-0-0-1-0-0-0
73308|data|Elf32_Dyn <1, <0x10B>>; DT_NEEDED libc.so.6|1-0-0-0-11-1-0-0
73316|data|Elf32_Dyn <1, <0x1CF>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-207-1-0-0
73324|data|Elf32_Dyn <0xC, <0x9D0>>; DT_INIT|12-0-0-0-208-9-0-0
73332|data|Elf32_Dyn <0xD, <0x144C>>; DT_FINI|13-0-0-0-76-20-0-0
73340|data|Elf32_Dyn <0x19, <0x11E48>>; DT_INIT_ARRAY|25-0-0-0-72-30-1-0
73348|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73356|data|Elf32_Dyn <0x1A, <0x11E4C>>; DT_FINI_ARRAY|26-0-0-0-76-30-1-0
73364|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73372|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73380|data|Elf32_Dyn <5, <0x524>>; DT_STRTAB|5-0-0-0-36-5-0-0
73388|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
73396|data|Elf32_Dyn <0xA, <0x270>>; DT_STRSZ|10-0-0-0-112-2-0-0
73404|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73412|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73420|data|Elf32_Dyn <3, <0x11F5C>>; DT_PLTGOT|3-0-0-0-92-31-1-0
73428|data|Elf32_Dyn <2, <0xD0>>; DT_PLTRELSZ|2-0-0-0-208-0-0-0
73436|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73444|data|Elf32_Dyn <0x17, <0x900>>; DT_JMPREL|23-0-0-0-0-9-0-0
73452|data|Elf32_Dyn <0x11, <0x848>>; DT_REL|17-0-0-0-72-8-0-0
73460|data|Elf32_Dyn <0x12, <0xB8>>; DT_RELSZ|18-0-0-0-184-0-0-0
73468|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73476|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73484|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73492|data|Elf32_Dyn <0x6FFFFFFE, <0x7F8>>; DT_VERNEED|254-255-255-111-248-7-0-0
73500|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73508|data|Elf32_Dyn <0x6FFFFFF0, <0x794>>; DT_VERSYM|240-255-255-111-148-7-0-0
73516|data|Elf32_Dyn <0x6FFFFFFA, <0xE>>; DT_RELCOUNT|250-255-255-111-14-0-0-0
73524|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73532|data|ALIGN 0x10|0-0-0-0
73564|data|DCD stru_11E54|84-30-1-0
73568|data|DCD 0|0-0-0-0
73572|data|DCD dword_0|0-0-0-0
73576|data|DCD __imp___cxa_finalize|160-32-1-0
73580|data|DCD __imp_smp_initiator_close|164-32-1-0
73584|data|DCD __imp_dStrHex|168-32-1-0
73588|data|DCD __imp_smp_get_func_def_resp_len|176-32-1-0
73592|data|DCD __imp___stack_chk_fail|184-32-1-0
73596|data|DCD __imp_smp_is_naa5|188-32-1-0
73600|data|DCD __imp_fwrite|196-32-1-0
73604|data|DCD __imp_getenv|200-32-1-0
73608|data|DCD __imp___libc_start_main|204-32-1-0
73612|data|DCD __imp___gmon_start__|24-33-1-0
73616|data|DCD __imp_getopt_long|208-32-1-0
73620|data|DCD __imp_strchr|212-32-1-0
73624|data|DCD __imp_smp_send_req|216-32-1-0
73628|data|DCD __imp___errno_location|220-32-1-0
73632|data|DCD __imp___isoc99_sscanf|224-32-1-0
73636|data|DCD __imp_memset|228-32-1-0
73640|data|DCD __imp_putchar|232-32-1-0
73644|data|DCD __imp_strncpy|236-32-1-0
73648|data|DCD __imp___fprintf_chk|240-32-1-0
73652|data|DCD __imp_fputc|244-32-1-0
73656|data|DCD __imp_safe_strerror|248-32-1-0
73660|data|DCD __imp_smp_get_llnum|252-32-1-0
73664|data|DCD __imp_smp_get_func_res_str|0-33-1-0
73668|data|DCD __imp_smp_get_num|4-33-1-0
73672|data|DCD __imp_smp_initiator_open|8-33-1-0
73676|data|DCD __imp_abort|16-33-1-0
73680|data|DCD __libc_csu_fini+1|73-20-0-0
73684|data|DCD __imp___cxa_finalize|160-32-1-0
73688|data|DCD _ITM_deregisterTMCloneTable|20-33-1-0
73692|data|DCD __stack_chk_guard|172-32-1-0
73696|data|DCD optind|180-32-1-0
73700|data|DCD stderr|192-32-1-0
73704|data|DCD __imp___gmon_start__|24-33-1-0
73708|data|DCD __libc_csu_init+1|9-20-0-0
73712|data|DCD main+1|41-11-0-0
73716|data|DCD _Jv_RegisterClasses|28-33-1-0
73720|data|DCD _ITM_registerTMCloneTable|32-33-1-0
73724|data|DCD optarg|12-33-1-0
73880|data|% 1; Alternative name is '__bss_start'|255
