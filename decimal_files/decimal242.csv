address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|17-13-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x21D0; SHT file offset|208-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x17A0; File offset|160-23-0-0
60|data|DCD unk_17A0; Virtual address|160-23-0-0
64|data|DCD 0x17A0; Physical address|160-23-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x17AC; Size in file image|172-23-0-0
168|data|DCD 0x17AC; Size in memory image|172-23-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E7C; File offset|124-30-0-0
188|data|DCD off_11E7C; Virtual address|124-30-1-0
192|data|DCD 0x11E7C; Physical address|124-30-1-0
196|data|DCD 0x22C; Size in file image|44-2-0-0
200|data|DCD 0x230; Size in memory image|48-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E88; File offset|136-30-0-0
220|data|DCD stru_11E88; Virtual address|136-30-1-0
224|data|DCD 0x11E88; Physical address|136-30-1-0
228|data|DCD 0x100; Size in file image|0-1-0-0
232|data|DCD 0x100; Size in memory image|0-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E7C; File offset|124-30-0-0
316|data|DCD off_11E7C; Virtual address|124-30-1-0
320|data|DCD 0x11E7C; Physical address|124-30-1-0
324|data|DCD 0x184; Size in file image|132-1-0-0
328|data|DCD 0x184; Size in memory image|132-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 4, 0x50, 0x86, 0x52, 0xA9, 0xDC, 0xAA, 0x61, 0x3D; Desc|4-80-134-82-169-220-170-97-61-136-7-31-36-90-62-94-85-145-233-181
436|data|DCD 3|3-0-0-0
440|data|DCD 0x19|25-0-0-0
444|data|DCD 2|2-0-0-0
448|data|DCD 6|6-0-0-0
452|data|DCD 0x35A11089, 0xA8424420|137-16-161-53-32-68-66-168
460|data|DCD 0x19, 0x1D, 0x21|25-0-0-0-29-0-0-0-33-0-0-0
472|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-107-127-154-124-12-20-226-158-118-84-60-148-89-239-151-121
516|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
532|data|Elf32_Sym <byte_444 - byte_444, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
548|data|Elf32_Sym <byte_444 - byte_444, dword_11E84, 0, 3, 0, 0x14>|0-0-0-0-132-30-1-0-0-0-0-0-3-0-20-0
564|data|Elf32_Sym <aCxaFinalize - byte_444, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|149-0-0-0-0-0-0-0-0-0-0-0-34-0-0-0
580|data|Elf32_Sym <aItmDeregistert - byte_444, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|51-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
596|data|Elf32_Sym <aStackChkGuard - byte_444, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|202-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
612|data|Elf32_Sym <aOptind - byte_444, dword_0, 0, 0x11, 0, 0>; "optind"|24-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
628|data|Elf32_Sym <aStackChkFail - byte_444, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|43-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aPerror - byte_444, dword_0, 0, 0x12, 0, 0>; "perror"|31-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aStderr - byte_444, dword_0, 0, 0x11, 0, 0>; "stderr"|111-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
676|data|Elf32_Sym <aFwrite - byte_444, dword_0, 0, 0x12, 0, 0>; "fwrite"|136-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aIoctl - byte_444, dword_0, 0, 0x12, 0, 0>; "ioctl"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aOpen64 - byte_444, dword_0, 0, 0x12, 0, 0>; "open64"|83-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aGetenv - byte_444, dword_0, 0, 0x12, 0, 0>; "getenv"|104-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aPuts - byte_444, dword_0, 0, 0x12, 0, 0>; "puts"|38-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aLibcStartMain - byte_444, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|164-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aGmonStart - byte_444, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|79-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
788|data|Elf32_Sym <aGetoptLong - byte_444, dword_0, 0, 0x12, 0, 0>; "getopt_long"|124-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aErrnoLocation - byte_444, dword_0, 0, 0x12, 0, 0>; "__errno_location"|66-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aPrintfChk - byte_444, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|11-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aFprintfChk - byte_444, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|90-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aJvRegisterclas - byte_444, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|110-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
868|data|Elf32_Sym <aItmRegistertmc - byte_444, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|130-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
884|data|Elf32_Sym <aAbort - byte_444, dword_0, 0, 0x12, 0, 0>; "abort"|60-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aClose - byte_444, dword_0, 0, 0x12, 0, 0>; "close"|143-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aBssEnd+1 - byte_444, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|11-1-0-0-172-32-1-0-0-0-0-0-16-0-24-0
932|data|Elf32_Sym <aEdata - byte_444, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|233-0-0-0-168-32-1-0-0-0-0-0-16-0-23-0
948|data|Elf32_Sym <aDataStart - byte_444, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|220-0-0-0-0-32-1-0-0-0-0-0-16-0-23-0
964|data|Elf32_Sym <aEnd_0 - byte_444, _end, 0, 0x10, 0, 0x18>; "_end"|30-1-0-0-172-32-1-0-0-0-0-0-16-0-24-0
980|data|Elf32_Sym <aBssEnd - byte_444, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|10-1-0-0-172-32-1-0-0-0-0-0-16-0-24-0
996|data|Elf32_Sym <aLibcCsuInit - byte_444, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|94-1-0-0-181-14-0-0-64-0-0-0-18-0-13-0
1012|data|Elf32_Sym <aBssStart - byte_444, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|240-0-0-0-168-32-1-0-0-0-0-0-16-0-24-0
1028|data|Elf32_Sym <aLibcStartMain+0xD - byte_444, main+1, 0x480, 0x12, 0, 0xD>; "main"|177-0-0-0-145-8-0-0-128-4-0-0-18-0-13-0
1044|data|Elf32_Sym <aLibcCsuFini - byte_444, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|35-1-0-0-245-14-0-0-2-0-0-0-18-0-13-0
1060|data|Elf32_Sym <aBssStart_0 - byte_444, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|252-0-0-0-168-32-1-0-0-0-0-0-16-0-24-0
1076|data|Elf32_Sym <aEnd - byte_444, _end, 0, 0x10, 0, 0x18>; "__end__"|22-1-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1092|data|DCB 0|0
1093|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1103|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1116|data|DCB "optind",0|111-112-116-105-110-100-0
1123|data|DCB "perror",0|112-101-114-114-111-114-0
1130|data|DCB "puts",0|112-117-116-115-0
1135|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1152|data|DCB "abort",0|97-98-111-114-116-0
1158|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1175|data|DCB "open64",0|111-112-101-110-54-52-0
1182|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1196|data|DCB "getenv",0|103-101-116-101-110-118-0
1203|data|DCB "stderr",0|115-116-100-101-114-114-0
1210|data|DCB "ioctl",0|105-111-99-116-108-0
1216|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1228|data|DCB "fwrite",0|102-119-114-105-116-101-0
1235|data|DCB "close",0|99-108-111-115-101-0
1241|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1256|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1274|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1294|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1312|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1325|data|DCB "_edata",0|95-101-100-97-116-97-0
1332|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1344|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1358|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1370|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1378|data|DCB "_end",0|95-101-110-100-0
1383|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1399|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1427|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1442|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1458|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1478|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1504|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1514|data|DCW 0|0-0
1516|data|DCW 0|0-0
1518|data|DCW 0|0-0
1520|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1522|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1524|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1526|data|DCW 2; optind@@GLIBC_2.4|2-0
1528|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1530|data|DCW 2; perror@@GLIBC_2.4|2-0
1532|data|DCW 2; stderr@@GLIBC_2.4|2-0
1534|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1536|data|DCW 2; ioctl@@GLIBC_2.4|2-0
1538|data|DCW 2; open64@@GLIBC_2.4|2-0
1540|data|DCW 2; getenv@@GLIBC_2.4|2-0
1542|data|DCW 2; puts@@GLIBC_2.4|2-0
1544|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1546|data|DCW 0; local  symbol: __gmon_start__|0-0
1548|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1550|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
1552|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
1554|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1556|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1558|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1560|data|DCW 2; abort@@GLIBC_2.4|2-0
1562|data|DCW 2; close@@GLIBC_2.4|2-0
1564|data|DCW 1; global symbol: _bss_end__|1-0
1566|data|DCW 1; global symbol: _edata|1-0
1568|data|DCW 1; global symbol: __data_start|1-0
1570|data|DCW 1; global symbol: _end|1-0
1572|data|DCW 1; global symbol: __bss_end__|1-0
1574|data|DCW 1; global symbol: __libc_csu_init|1-0
1576|data|DCW 1; global symbol: __bss_start|1-0
1578|data|DCW 1; global symbol: main|1-0
1580|data|DCW 1; global symbol: __libc_csu_fini|1-0
1582|data|DCW 1; global symbol: __bss_start__|1-0
1584|data|DCW 1; global symbol: __end__|1-0
1586|data|DCW 0|0-0
1588|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_444, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-182-0-0-0-16-0-0-0-32-0-0-0
1604|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_444, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-156-1-0-0-0-0-0-0
1620|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_444, 0x10, 0>; "libc.so.6"|1-0-1-0-1-0-0-0-16-0-0-0-0-0-0-0
1636|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_444, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-156-1-0-0-0-0-0-0
1652|data|Elf32_Rel <0x11E7C, 0x17>; R_ARM_RELATIVE|124-30-1-0-23-0-0-0
1660|data|Elf32_Rel <0x11E80, 0x17>; R_ARM_RELATIVE|128-30-1-0-23-0-0-0
1668|data|Elf32_Rel <0x11FD4, 0x17>; R_ARM_RELATIVE|212-31-1-0-23-0-0-0
1676|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
1684|data|Elf32_Rel <0x11FF4, 0x17>; R_ARM_RELATIVE|244-31-1-0-23-0-0-0
1692|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
1700|data|Elf32_Rel <0x12008, 0x17>; R_ARM_RELATIVE|8-32-1-0-23-0-0-0
1708|data|Elf32_Rel <0x12018, 0x17>; R_ARM_RELATIVE|24-32-1-0-23-0-0-0
1716|data|Elf32_Rel <0x12028, 0x17>; R_ARM_RELATIVE|40-32-1-0-23-0-0-0
1724|data|Elf32_Rel <0x12038, 0x17>; R_ARM_RELATIVE|56-32-1-0-23-0-0-0
1732|data|Elf32_Rel <0x12048, 0x17>; R_ARM_RELATIVE|72-32-1-0-23-0-0-0
1740|data|Elf32_Rel <0x12058, 0x17>; R_ARM_RELATIVE|88-32-1-0-23-0-0-0
1748|data|Elf32_Rel <0x12068, 0x17>; R_ARM_RELATIVE|104-32-1-0-23-0-0-0
1756|data|Elf32_Rel <0x12078, 0x17>; R_ARM_RELATIVE|120-32-1-0-23-0-0-0
1764|data|Elf32_Rel <0x12088, 0x17>; R_ARM_RELATIVE|136-32-1-0-23-0-0-0
1772|data|Elf32_Rel <0x11FD8, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|216-31-1-0-21-3-0-0
1780|data|Elf32_Rel <0x11FDC, 0x415>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|220-31-1-0-21-4-0-0
1788|data|Elf32_Rel <0x11FE0, 0x515>; R_ARM_GLOB_DAT __stack_chk_guard|224-31-1-0-21-5-0-0
1796|data|Elf32_Rel <0x11FE4, 0x615>; R_ARM_GLOB_DAT optind|228-31-1-0-21-6-0-0
1804|data|Elf32_Rel <0x11FE8, 0x915>; R_ARM_GLOB_DAT stderr|232-31-1-0-21-9-0-0
1812|data|Elf32_Rel <0x11FEC, 0x1015>; R_ARM_GLOB_DAT __gmon_start__|236-31-1-0-21-16-0-0
1820|data|Elf32_Rel <0x11FF8, 0x1515>; R_ARM_GLOB_DAT _Jv_RegisterClasses|248-31-1-0-21-21-0-0
1828|data|Elf32_Rel <0x11FFC, 0x1615>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|252-31-1-0-21-22-0-0
1836|data|Elf32_Rel <0x11F94, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|148-31-1-0-22-3-0-0
1844|data|Elf32_Rel <0x11F98, 0x716>; R_ARM_JUMP_SLOT __stack_chk_fail|152-31-1-0-22-7-0-0
1852|data|Elf32_Rel <0x11F9C, 0x816>; R_ARM_JUMP_SLOT perror|156-31-1-0-22-8-0-0
1860|data|Elf32_Rel <0x11FA0, 0xA16>; R_ARM_JUMP_SLOT fwrite|160-31-1-0-22-10-0-0
1868|data|Elf32_Rel <0x11FA4, 0xB16>; R_ARM_JUMP_SLOT ioctl|164-31-1-0-22-11-0-0
1876|data|Elf32_Rel <0x11FA8, 0xC16>; R_ARM_JUMP_SLOT open64|168-31-1-0-22-12-0-0
1884|data|Elf32_Rel <0x11FAC, 0xD16>; R_ARM_JUMP_SLOT getenv|172-31-1-0-22-13-0-0
1892|data|Elf32_Rel <0x11FB0, 0xE16>; R_ARM_JUMP_SLOT puts|176-31-1-0-22-14-0-0
1900|data|Elf32_Rel <0x11FB4, 0xF16>; R_ARM_JUMP_SLOT __libc_start_main|180-31-1-0-22-15-0-0
1908|data|Elf32_Rel <0x11FB8, 0x1016>; R_ARM_JUMP_SLOT __gmon_start__|184-31-1-0-22-16-0-0
1916|data|Elf32_Rel <0x11FBC, 0x1116>; R_ARM_JUMP_SLOT getopt_long|188-31-1-0-22-17-0-0
1924|data|Elf32_Rel <0x11FC0, 0x1216>; R_ARM_JUMP_SLOT __errno_location|192-31-1-0-22-18-0-0
1932|data|Elf32_Rel <0x11FC4, 0x1316>; R_ARM_JUMP_SLOT __printf_chk|196-31-1-0-22-19-0-0
1940|data|Elf32_Rel <0x11FC8, 0x1416>; R_ARM_JUMP_SLOT __fprintf_chk|200-31-1-0-22-20-0-0
1948|data|Elf32_Rel <0x11FCC, 0x1716>; R_ARM_JUMP_SLOT abort|204-31-1-0-22-23-0-0
1956|data|Elf32_Rel <0x11FD0, 0x1816>; R_ARM_JUMP_SLOT close|208-31-1-0-22-24-0-0
1964|code|PUSH            {R3,LR}|8-64-45-233
1968|code|BL              sub_D58|104-1-0-235
1972|code|POP             {R3,PC}|8-128-189-232
1976|code|PUSH            {LR}|4-224-45-229
1980|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x7C8)|4-224-159-229
1984|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
1988|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
1992|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7C8|192-23-1-0
1996|code|ADR             R12, 0x7D4|0-198-143-226
2000|code|ADD             R12, R12, #0x11000|17-202-140-226
2004|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x117D4)]!; __imp___cxa_finalize|192-247-188-229
2008|code|ADR             R12, 0x7E0|0-198-143-226
2012|code|ADD             R12, R12, #0x11000|17-202-140-226
2016|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x117E0)]!; __imp___stack_chk_fail|184-247-188-229
2020|code|ADR             R12, 0x7EC|0-198-143-226
2024|code|ADD             R12, R12, #0x11000|17-202-140-226
2028|code|LDR             PC, [R12,#(perror_ptr - 0x117EC)]!; __imp_perror|176-247-188-229
2032|code|BX              PC|120-71
2034|data|ALIGN 4|192-70
2036|code|ADR             R12, 0x7FC|0-198-143-226
2040|code|ADD             R12, R12, #0x11000|17-202-140-226
2044|code|LDR             PC, [R12,#(fwrite_ptr - 0x117FC)]!; __imp_fwrite|164-247-188-229
2048|code|ADR             R12, 0x808|0-198-143-226
2052|code|ADD             R12, R12, #0x11000|17-202-140-226
2056|code|LDR             PC, [R12,#(ioctl_ptr - 0x11808)]!; __imp_ioctl|156-247-188-229
2060|code|ADR             R12, 0x814|0-198-143-226
2064|code|ADD             R12, R12, #0x11000|17-202-140-226
2068|code|LDR             PC, [R12,#(open64_ptr - 0x11814)]!; __imp_open64|148-247-188-229
2072|code|ADR             R12, 0x820|0-198-143-226
2076|code|ADD             R12, R12, #0x11000|17-202-140-226
2080|code|LDR             PC, [R12,#(getenv_ptr - 0x11820)]!; __imp_getenv|140-247-188-229
2084|code|ADR             R12, 0x82C|0-198-143-226
2088|code|ADD             R12, R12, #0x11000|17-202-140-226
2092|code|LDR             PC, [R12,#(puts_ptr - 0x1182C)]!; __imp_puts|132-247-188-229
2096|code|ADR             R12, 0x838|0-198-143-226
2100|code|ADD             R12, R12, #0x11000|17-202-140-226
2104|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x11838)]!; __imp___libc_start_main|124-247-188-229
2108|code|ADR             R12, 0x844|0-198-143-226
2112|code|ADD             R12, R12, #0x11000|17-202-140-226
2116|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x11844)]!; __imp___gmon_start__|116-247-188-229
2120|code|ADR             R12, 0x850|0-198-143-226
2124|code|ADD             R12, R12, #0x11000|17-202-140-226
2128|code|LDR             PC, [R12,#(getopt_long_ptr - 0x11850)]!; __imp_getopt_long|108-247-188-229
2132|code|ADR             R12, 0x85C|0-198-143-226
2136|code|ADD             R12, R12, #0x11000|17-202-140-226
2140|code|LDR             PC, [R12,#(__errno_location_ptr - 0x1185C)]!; __imp___errno_location|100-247-188-229
2144|code|ADR             R12, 0x868|0-198-143-226
2148|code|ADD             R12, R12, #0x11000|17-202-140-226
2152|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x11868)]!; __imp___printf_chk|92-247-188-229
2156|code|ADR             R12, 0x874|0-198-143-226
2160|code|ADD             R12, R12, #0x11000|17-202-140-226
2164|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x11874)]!; __imp___fprintf_chk|84-247-188-229
2168|code|ADR             R12, 0x880|0-198-143-226
2172|code|ADD             R12, R12, #0x11000|17-202-140-226
2176|code|LDR             PC, [R12,#(abort_ptr - 0x11880)]!; __imp_abort|76-247-188-229
2180|code|ADR             R12, 0x88C|0-198-143-226
2184|code|ADD             R12, R12, #0x11000|17-202-140-226
2188|code|LDR             PC, [R12,#(close_ptr - 0x1188C)]!; __imp_close|68-247-188-229
2192|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2196|code|SUB             SP, SP, #0x34|141-176
2198|code|LDR.W           R11, =(_GLOBAL_OFFSET_TABLE_ - 0x8A4)|223-248-228-179
2202|code|MOV             R5, R0|5-70
2204|code|LDR             R3, =(__stack_chk_guard_ptr - 0x11F88)|248-75
2206|code|MOV             R6, R1|14-70
2208|code|ADD             R11, PC; _GLOBAL_OFFSET_TABLE_|251-68
2210|code|LDR             R0, =(aSg3UtilsOldOpt - 0x8AC); "SG3_UTILS_OLD_OPTS"|248-72
2212|code|LDR.W           R3, [R11,R3]; __stack_chk_guard|91-248-3-48
2216|code|ADD             R0, PC; "SG3_UTILS_OLD_OPTS"|120-68
2218|code|STR             R3, [SP,#0x58+var_44]|5-147
2220|code|LDR             R3, [R3]|27-104
2222|code|STR             R3, [SP,#0x58+var_2C]|11-147
2224|code|BLX             getenv|255-247-178-239
2228|code|STR             R0, [SP,#0x58+var_48]|4-144
2230|code|CMP             R0, #0|0-40
2232|code|BEQ.W           loc_9BE|0-240-129-128
2236|code|LDR.W           R10, =(aBdhhntvvz - 0x8CC); "bdhHNtvVz"|223-248-200-163
2240|code|MOVS            R4, #0|0-36
2242|code|LDR.W           R9, =(off_12008 - 0x8D0); "bus"|223-248-200-147
2246|code|ADD             R7, SP, #0x58+var_30|10-175
2248|code|ADD             R10, PC; "bdhHNtvVz"|250-68
2250|code|MOV             R8, R4|160-70
2252|code|ADD             R9, PC; off_12008|249-68
2254|code|STR             R4, [SP,#0x58+var_38]|8-148
2256|code|STR             R4, [SP,#0x58+var_34]|9-148
2258|code|STR             R4, [SP,#0x58+var_4C]|3-148
2260|code|STR             R4, [SP,#0x58+var_3C]|7-148
2262|code|STR             R4, [SP,#0x58+var_40]|6-148
2264|code|MOV             R3, R9; longopts|75-70
2266|code|STR             R7, [SP,#0x58+longind]; longind|0-151
2268|code|MOV             R0, R5; argc|40-70
2270|code|MOV             R1, R6; argv|49-70
2272|code|MOV             R2, R10; shortopts|82-70
2274|code|STR.W           R8, [SP,#0x58+var_30]|205-248-40-128
2278|code|BLX             getopt_long|255-247-176-239
2282|code|ADDS            R3, R0, #1|67-28
2284|code|BEQ             loc_9CA|109-208
2286|code|SUB.W           R3, R0, #0x48 ; 'H'; switch 51 cases|160-241-72-3
2290|code|CMP             R3, #0x32|50-43
2292|code|BHI             def_8F6; jumptable 000008F6 default case, cases 73-77,79-85,87-97,99,101-103,105-115,117,119-121|81-216
2294|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
2298|data|DCB 0x1D; jump table for switch statement|29
2299|data|DCB 0x50|80
2300|data|DCB 0x50|80
2301|data|DCB 0x50|80
2302|data|DCB 0x50|80
2303|data|DCB 0x50|80
2304|data|DCB 0x4C|76
2305|data|DCB 0x50|80
2306|data|DCB 0x50|80
2307|data|DCB 0x50|80
2308|data|DCB 0x50|80
2309|data|DCB 0x50|80
2310|data|DCB 0x50|80
2311|data|DCB 0x50|80
2312|data|DCB 0x3F|63
2313|data|DCB 0x50|80
2314|data|DCB 0x50|80
2315|data|DCB 0x50|80
2316|data|DCB 0x50|80
2317|data|DCB 0x50|80
2318|data|DCB 0x50|80
2319|data|DCB 0x50|80
2320|data|DCB 0x50|80
2321|data|DCB 0x50|80
2322|data|DCB 0x50|80
2323|data|DCB 0x50|80
2324|data|DCB 0x3B|59
2325|data|DCB 0x50|80
2326|data|DCB 0x37|55
2327|data|DCB 0x50|80
2328|data|DCB 0x50|80
2329|data|DCB 0x50|80
2330|data|DCB 0x1A|26
2331|data|DCB 0x50|80
2332|data|DCB 0x50|80
2333|data|DCB 0x50|80
2334|data|DCB 0x50|80
2335|data|DCB 0x50|80
2336|data|DCB 0x50|80
2337|data|DCB 0x50|80
2338|data|DCB 0x50|80
2339|data|DCB 0x50|80
2340|data|DCB 0x50|80
2341|data|DCB 0x50|80
2342|data|DCB 0x33|51
2343|data|DCB 0x50|80
2344|data|DCB 0x31|49
2345|data|DCB 0x50|80
2346|data|DCB 0x50|80
2347|data|DCB 0x50|80
2348|data|DCB 0x21|33
2349|data|ALIGN 2|0
2350|code|LDR             R3, [SP,#0x58+var_48]; jumptable 000008F6 case 104|4-155
2352|code|CMP             R3, #0|0-43
2354|code|BEQ             loc_A2E|124-208
2356|code|LDR             R3, [SP,#0x58+var_4C]; jumptable 000008F6 case 72|3-155
2358|code|ADDS            R3, #1|1-51
2360|code|STR             R3, [SP,#0x58+var_4C]|3-147
2362|code|B               loc_8D8|205-231
2364|code|LDR             R3, [SP,#0x58+var_48]; jumptable 000008F6 case 122|4-155
2366|code|MOVS            R0, R3|24-28
2368|code|IT NE|24-191
2370|code|MOVNE           R0, #1|1-32
2372|code|BL              sub_E4C|0-240-130-250
2376|code|MOVS            R0, #0|0-32
2378|code|LDR             R3, [SP,#0x58+var_44]|5-155
2380|code|LDR             R2, [SP,#0x58+var_2C]|11-154
2382|code|LDR             R3, [R3]|27-104
2384|code|CMP             R2, R3|154-66
2386|code|BNE.W           loc_C76|64-240-144-129
2390|code|ADD             SP, SP, #0x34 ; '4'|13-176
2392|code|POP.W           {R4-R11,PC}|189-232-240-143
2396|code|ADDS            R4, #1; jumptable 000008F6 case 118|1-52
2398|code|B               loc_8D8|187-231
2400|code|LDR             R3, [SP,#0x58+var_38]; jumptable 000008F6 case 116|8-155
2402|code|ADDS            R3, #1|1-51
2404|code|STR             R3, [SP,#0x58+var_38]|8-147
2406|code|B               loc_8D8|183-231
2408|code|LDR             R3, [SP,#0x58+var_40]; jumptable 000008F6 case 100|6-155
2410|code|ADDS            R3, #1|1-51
2412|code|STR             R3, [SP,#0x58+var_40]|6-147
2414|code|B               loc_8D8|179-231
2416|code|LDR             R3, [SP,#0x58+var_3C]; jumptable 000008F6 case 98|7-155
2418|code|ADDS            R3, #1|1-51
2420|code|STR             R3, [SP,#0x58+var_3C]|7-147
2422|code|B               loc_8D8|175-231
2424|code|LDR             R0, =(stderr_ptr - 0x11F88); jumptable 000008F6 case 86|197-72
2426|code|MOVS            R1, #1|1-33
2428|code|LDR             R2, =(aSgResetVersion - 0x988); "sg_reset: version: %s\n"|197-74
2430|code|LDR             R3, =(a05820130507 - 0x98A); "0.58 20130507"|198-75
2432|code|LDR.W           R0, [R11,R0]; stderr|91-248-0-0
2436|code|ADD             R2, PC; "sg_reset: version: %s\n"|122-68
2438|code|ADD             R3, PC; "0.58 20130507"|123-68
2440|code|LDR             R0, [R0]|0-104
2442|code|BLX             __fprintf_chk|255-247-112-239
2446|code|MOVS            R0, #0|0-32
2448|code|B               loc_94A|219-231
2450|code|LDR             R3, [SP,#0x58+var_34]; jumptable 000008F6 case 78|9-155
2452|code|ADDS            R3, #1|1-51
2454|code|STR             R3, [SP,#0x58+var_34]|9-147
2456|code|B               loc_8D8|158-231
2458|code|LDR             R5, =(stderr_ptr - 0x11F88); jumptable 000008F6 default case, cases 73-77,79-85,87-97,99,101-103,105-115,117,119-121|189-77
2460|code|MOV             R3, R0|3-70
2462|code|LDR             R2, =(aUnrecognisedOp - 0x9AA); "unrecognised option code 0x%x ??\n"|191-74
2464|code|MOVS            R1, #1|1-33
2466|code|LDR.W           R0, [R11,R5]; stderr|91-248-5-0
2470|code|ADD             R2, PC; "unrecognised option code 0x%x ??\n"|122-68
2472|code|LDR             R0, [R0]|0-104
2474|code|BLX             __fprintf_chk|255-247-96-239
2478|code|LDR             R3, [SP,#0x58+var_48]|4-155
2480|code|MOVS            R0, R3|24-28
2482|code|IT NE|24-191
2484|code|MOVNE           R0, #1|1-32
2486|code|BL              sub_E4C|0-240-73-250
2490|code|MOVS            R0, #1|1-32
2492|code|B               loc_94A|197-231
2494|code|LDR             R0, =(aSgResetOldOpts - 0x9C4); "SG_RESET_OLD_OPTS"|184-72
2496|code|ADD             R0, PC; "SG_RESET_OLD_OPTS"|120-68
2498|code|BLX             getenv|255-247-42-239
2502|code|STR             R0, [SP,#0x58+var_48]|4-144
2504|code|B               loc_8BC|120-231
2506|code|LDR             R3, =(optind_ptr - 0x11F88)|182-75
2508|code|LDR.W           R8, [R11,R3]; optind|91-248-3-128
2512|code|LDR.W           R3, [R8]|216-248-0-48
2516|code|CMP             R5, R3|157-66
2518|code|BLE             loc_A16|30-221
2520|code|ADDS            R2, R3, #1|90-28
2522|code|LDR.W           R9, [R6,R3,LSL#2]|86-248-35-144
2526|code|CMP             R5, R2|149-66
2528|code|STR.W           R2, [R8]|200-248-0-32
2532|code|BLE             loc_A3A|41-221
2534|code|LDR             R7, =(aUnexpectedExtr - 0x9EE); "Unexpected extra argument: %s\n"|176-79
2536|code|MOV             R9, R8|193-70
2538|code|ADD             R7, PC; "Unexpected extra argument: %s\n"|127-68
2540|code|B               loc_A0C|14-224
2542|code|LDR             R0, =(stderr_ptr - 0x11F88)|168-72
2544|code|MOVS            R1, #1|1-33
2546|code|LDR.W           R3, [R6,R3,LSL#2]|86-248-35-48
2550|code|MOV             R2, R7|58-70
2552|code|LDR.W           R0, [R11,R0]; stderr|91-248-0-0
2556|code|LDR             R0, [R0]|0-104
2558|code|BLX             __fprintf_chk|255-247-54-239
2562|code|LDR.W           R3, [R9]|217-248-0-48
2566|code|ADDS            R3, #1|1-51
2568|code|STR.W           R3, [R9]|201-248-0-48
2572|code|LDR.W           R3, [R8]|216-248-0-48
2576|code|CMP             R5, R3|157-66
2578|code|BGT             loc_9EE|236-220
2580|code|B               loc_9AE|203-231
2582|code|LDR             R3, =(stderr_ptr - 0x11F88)|158-75
2584|code|MOVS            R1, #1; size|1-33
2586|code|LDR             R0, =(aMissingDeviceN - 0xA26); "Missing DEVICE name. Use '--help' to se"...|164-72
2588|code|MOVS            R2, #0x30 ; '0'; n|48-34
2590|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
2594|code|ADD             R0, PC; "Missing DEVICE name. Use '--help' to se"...|120-68
2596|code|LDR             R3, [R3]; s|27-104
2598|code|BLX             fwrite|255-247-230-238
2602|code|MOVS            R0, #1|1-32
2604|code|B               loc_94A|141-231
2606|code|LDR             R4, [SP,#0x58+var_48]|4-156
2608|code|MOV             R0, R4|32-70
2610|code|BL              sub_E4C|0-240-11-250
2614|code|MOV             R0, R4|32-70
2616|code|B               loc_94A|135-231
2618|code|CMP.W           R9, #0|185-241-0-15
2622|code|BEQ             loc_A16|234-208
2624|code|CBNZ            R4, loc_A4A|28-185
2626|code|LDR             R3, [SP,#0x58+var_48]|4-155
2628|code|CMP             R3, #0|0-43
2630|code|IT NE|24-191
2632|code|MOVNE           R4, #1|1-36
2634|code|LDR             R3, [SP,#0x58+var_40]|6-155
2636|code|LDR             R1, [SP,#0x58+var_4C]|3-153
2638|code|MOVS            R2, R3|26-28
2640|code|LDR             R3, [SP,#0x58+var_38]|8-155
2642|code|IT NE|24-191
2644|code|MOVNE           R2, #1|1-34
2646|code|MOVS            R6, R3|30-28
2648|code|LDR             R3, [SP,#0x58+var_3C]|7-155
2650|code|IT NE|24-191
2652|code|MOVNE           R6, #1|1-38
2654|code|MOVS.W          R8, R3|19-241-0-8
2658|code|ADD.W           R3, R2, R6|2-235-6-3
2662|code|IT NE|24-191
2664|code|MOVNE.W         R8, #1|79-240-1-8
2668|code|MOVS.W          R10, R1|17-241-0-10
2672|code|ADD             R3, R8|67-68
2674|code|IT NE|24-191
2676|code|MOVNE.W         R10, #1|79-240-1-10
2680|code|ADD             R3, R10|83-68
2682|code|CMP             R3, #1|1-43
2684|code|BLE             loc_A96|11-221
2686|code|LDR             R3, =(stderr_ptr - 0x11F88)|132-75
2688|code|MOVS            R1, #1; size|1-33
2690|code|LDR             R0, =(aCanOnlyRequest - 0xA8E); "Can only request one type of reset per "...|139-72
2692|code|MOVS            R2, #0x32 ; '2'; n|50-34
2694|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
2698|code|ADD             R0, PC; "Can only request one type of reset per "...|120-68
2700|code|LDR             R3, [R3]; s|27-104
2702|code|BLX             fwrite|255-247-178-238
2706|code|MOVS            R0, #1|1-32
2708|code|B               loc_94A|89-231
2710|code|MOV             R0, R9|72-70
2712|code|MOVW            R1, #0x802|64-246-2-1
2716|code|STR             R2, [SP,#0x58+var_4C]|3-146
2718|code|BLX             open64|255-247-182-238
2722|code|LDR             R2, [SP,#0x58+var_4C]|3-154
2724|code|SUBS            R5, R0, #0|5-30
2726|code|BLT             loc_B90|115-219
2728|code|MOVS            R3, #0|0-35
2730|code|STR             R3, [SP,#0x58+var_30]|10-147
2732|code|CMP             R2, #0|0-42
2734|code|BEQ             loc_B42|72-208
2736|code|CMP             R4, #0|0-44
2738|code|BNE             loc_B64|87-209
2740|code|MOVS            R3, #1|1-35
2742|code|STR             R3, [SP,#0x58+var_30]|10-147
2744|code|LDR             R3, [SP,#0x58+var_34]|9-155
2746|code|CBZ             R3, loc_B06|35-179
2748|code|LDR             R3, [SP,#0x58+var_30]|10-155
2750|code|MOV             R2, R7|58-70
2752|code|MOV             R0, R5; fd|40-70
2754|code|MOVW            R1, #0x2284; request|66-242-132-33
2758|code|ADD.W           R3, R3, #0x100|3-245-128-115
2762|code|STR             R3, [SP,#0x58+var_30]|10-147
2764|code|BLX             ioctl|255-247-152-238
2768|code|CMP             R0, #0|0-40
2770|code|BLT             loc_B16|32-219
2772|code|LDR             R3, [SP,#0x58+var_30]|10-155
2774|code|SUB.W           R3, R3, #0x100|163-245-128-115
2778|code|STR             R3, [SP,#0x58+var_30]|10-147
2780|code|CBZ             R4, loc_AF8|100-177
2782|code|LDR             R3, [SP,#0x58+var_30]|10-155
2784|code|CMP             R3, #0|0-43
2786|code|BEQ             loc_BB0|101-208
2788|code|CMP             R3, #1|1-43
2790|code|BEQ             loc_BC4|109-208
2792|code|CMP             R3, #4|4-43
2794|code|BEQ             loc_BD8|117-208
2796|code|CMP             R3, #2|2-43
2798|code|BEQ.W           loc_C04|0-240-137-128
2802|code|CMP             R3, #3|3-43
2804|code|BEQ.W           loc_C6C|0-240-186-128
2808|code|MOV             R0, R5; fd|40-70
2810|code|BLX             close|255-247-196-238
2814|code|CMP             R0, #0|0-40
2816|code|BLT             loc_B6E|53-219
2818|code|MOVS            R0, #0|0-32
2820|code|B               loc_94A|33-231
2822|code|MOV             R2, R7|58-70
2824|code|MOV             R0, R5; fd|40-70
2826|code|MOVW            R1, #0x2284; request|66-242-132-33
2830|code|BLX             ioctl|255-247-120-238
2834|code|CMP             R0, #0|0-40
2836|code|BGE             loc_ADC|226-218
2838|code|BLX             __errno_location|255-247-158-238
2842|code|LDR             R3, [R0]|3-104
2844|code|CMP             R3, #0x10|16-43
2846|code|BEQ.W           loc_C34|0-240-137-128
2850|code|CMP             R3, #5|5-43
2852|code|BEQ             loc_C1E|123-208
2854|code|CMP             R3, #0xD|13-43
2856|code|BEQ.W           loc_C56|0-240-149-128
2860|code|CMP             R3, #0x16|22-43
2862|code|BEQ             loc_BEE|94-208
2864|code|LDR             R0, =(aSgResetSgScsiR - 0xB36); "sg_reset: SG_SCSI_RESET failed"|96-72
2866|code|ADD             R0, PC; "sg_reset: SG_SCSI_RESET failed"|120-68
2868|code|BLX             perror|255-247-86-238
2872|code|MOV             R0, R5; fd|40-70
2874|code|BLX             close|255-247-164-238
2878|code|MOVS            R0, #1|1-32
2880|code|B               loc_94A|3-231
2882|code|CBZ             R6, loc_B4E|38-177
2884|code|CMP             R4, #0|0-44
2886|code|BNE             loc_BBA|56-209
2888|code|MOVS            R3, #4|4-35
2890|code|STR             R3, [SP,#0x58+var_30]|10-147
2892|code|B               loc_AB8|180-231
2894|code|CMP.W           R8, #0|184-241-0-15
2898|code|BEQ             loc_B7A|18-208
2900|code|CBZ             R4, loc_B5E|28-177
2902|code|LDR             R0, =(aSgResetStartin - 0xB5C); "sg_reset: starting bus reset"|88-72
2904|code|ADD             R0, PC; "sg_reset: starting bus reset"|120-68
2906|code|BLX             puts|255-247-100-238
2910|code|MOVS            R3, #2|2-35
2912|code|STR             R3, [SP,#0x58+var_30]|10-147
2914|code|B               loc_AB8|169-231
2916|code|LDR             R0, =(aSgResetStartin_0 - 0xB6A); "sg_reset: starting device reset"|85-72
2918|code|ADD             R0, PC; "sg_reset: starting device reset"|120-68
2920|code|BLX             puts|255-247-92-238
2924|code|B               loc_AB4|162-231
2926|code|LDR             R0, =(aSgResetCloseEr - 0xB74); "sg_reset: close error"|84-72
2928|code|ADD             R0, PC; "sg_reset: close error"|120-68
2930|code|BLX             perror|255-247-56-238
2934|code|MOVS            R0, #1|1-32
2936|code|B               loc_94A|231-230
2938|code|CMP.W           R10, #0|186-241-0-15
2942|code|BEQ             loc_AB8|155-208
2944|code|CBZ             R4, loc_B8A|28-177
2946|code|LDR             R0, =(aSgResetStartin_1 - 0xB88); "sg_reset: starting host reset"|80-72
2948|code|ADD             R0, PC; "sg_reset: starting host reset"|120-68
2950|code|BLX             puts|255-247-78-238
2954|code|MOVS            R3, #3|3-35
2956|code|STR             R3, [SP,#0x58+var_30]|10-147
2958|code|B               loc_AB8|147-231
2960|code|LDR             R0, =(stderr_ptr - 0x11F88)|63-72
2962|code|MOV             R3, R9|75-70
2964|code|LDR             R2, =(aSgResetOpenErr - 0xBA0); "sg_reset: open error: %s: "|76-74
2966|code|MOVS            R1, #1|1-33
2968|code|LDR.W           R0, [R11,R0]; stderr|91-248-0-0
2972|code|ADD             R2, PC; "sg_reset: open error: %s: "|122-68
2974|code|LDR             R0, [R0]|0-104
2976|code|BLX             __fprintf_chk|255-247-100-238
2980|code|LDR             R0, =(aMissingDeviceN+0x30 - 0xBAA); ""|73-72
2982|code|ADD             R0, PC; "" ; s|120-68
2984|code|BLX             perror|255-247-28-238
2988|code|MOVS            R0, #1|1-32
2990|code|B               loc_94A|204-230
2992|code|LDR             R0, =(aSgResetDidNoth - 0xBB6); "sg_reset: did nothing, device is normal"...|71-72
2994|code|ADD             R0, PC; "sg_reset: did nothing, device is normal"...|120-68
2996|code|BLX             puts|255-247-54-238
3000|code|B               loc_AF8|158-231
3002|code|LDR             R0, =(aSgResetStartin_2 - 0xBC0); "sg_reset: starting target reset"|70-72
3004|code|ADD             R0, PC; "sg_reset: starting target reset"|120-68
3006|code|BLX             puts|255-247-50-238
3010|code|B               loc_B48|193-231
3012|code|LDR             R3, [SP,#0x58+var_34]|9-155
3014|code|CBNZ            R3, loc_C18|59-187
3016|code|LDR             R2, =(aOrTargetOrBusO - 0xBCE); "(or target or bus or host) "|67-74
3018|code|ADD             R2, PC; "(or target or bus or host) "|122-68
3020|code|LDR             R1, =(aSgResetComplet - 0xBD4); "sg_reset: completed device %sreset\n"|67-73
3022|code|MOVS            R0, #1|1-32
3024|code|ADD             R1, PC; "sg_reset: completed device %sreset\n"|121-68
3026|code|BLX             __printf_chk|255-247-70-238
3030|code|B               loc_AF8|143-231
3032|code|LDR             R3, [SP,#0x58+var_34]|9-155
3034|code|CMP             R3, #0|0-43
3036|code|BNE             loc_C4A|53-209
3038|code|LDR             R2, =(aOrBusOrHost - 0xBE4); "(or bus or host) "|64-74
3040|code|ADD             R2, PC; "(or bus or host) "|122-68
3042|code|LDR             R1, =(aSgResetComplet_0 - 0xBEA); "sg_reset: completed target %sreset\n"|64-73
3044|code|MOVS            R0, #1|1-32
3046|code|ADD             R1, PC; "sg_reset: completed target %sreset\n"|121-68
3048|code|BLX             __printf_chk|255-247-58-238
3052|code|B               loc_AF8|132-231
3054|code|LDR             R0, =(stderr_ptr - 0x11F88)|40-72
3056|code|MOVS            R1, #1|1-33
3058|code|LDR             R2, =(aSgResetSgScsiR_0 - 0xBFE); "sg_reset: SG_SCSI_RESET not supported ("...|61-74
3060|code|LDR             R3, [SP,#0x58+var_30]|10-155
3062|code|LDR.W           R0, [R11,R0]; stderr|91-248-0-0
3066|code|ADD             R2, PC; "sg_reset: SG_SCSI_RESET not supported ("...|122-68
3068|code|LDR             R0, [R0]|0-104
3070|code|BLX             __fprintf_chk|255-247-54-238
3074|code|B               loc_B38|153-231
3076|code|LDR             R3, [SP,#0x58+var_34]|9-155
3078|code|CBNZ            R3, loc_C50|27-187
3080|code|LDR             R2, =(aOrHost - 0xC0E); "(or host) "|56-74
3082|code|ADD             R2, PC; "(or host) "|122-68
3084|code|LDR             R1, =(aSgResetComplet_1 - 0xC14); "sg_reset: completed bus %sreset\n"|56-73
3086|code|MOVS            R0, #1|1-32
3088|code|ADD             R1, PC; "sg_reset: completed bus %sreset\n"|121-68
3090|code|BLX             __printf_chk|255-247-38-238
3094|code|B               loc_AF8|111-231
3096|code|LDR             R2, =(aMissingDeviceN+0x30 - 0xC1E); ""|54-74
3098|code|ADD             R2, PC; ""|122-68
3100|code|B               loc_BCC|214-231
3102|code|LDR             R0, =(stderr_ptr - 0x11F88)|28-72
3104|code|MOVS            R1, #1|1-33
3106|code|LDR             R2, =(aSgResetResetFo - 0xC2E); "sg_reset: reset (for value=0x%x) may no"...|53-74
3108|code|LDR             R3, [SP,#0x58+var_30]|10-155
3110|code|LDR.W           R0, [R11,R0]; stderr|91-248-0-0
3114|code|ADD             R2, PC; "sg_reset: reset (for value=0x%x) may no"...|122-68
3116|code|LDR             R0, [R0]|0-104
3118|code|BLX             __fprintf_chk|255-247-30-238
3122|code|B               loc_B38|129-231
3124|code|LDR             R3, =(stderr_ptr - 0x11F88)|22-75
3126|code|MOVS            R1, #1; size|1-33
3128|code|LDR             R0, =(aSgResetBusyMay - 0xC44); "sg_reset: BUSY, may be resetting now\n"|48-72
3130|code|MOVS            R2, #0x25 ; '%'; n|37-34
3132|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
3136|code|ADD             R0, PC; "sg_reset: BUSY, may be resetting now\n"|120-68
3138|code|LDR             R3, [R3]; s|27-104
3140|code|BLX             fwrite|255-247-214-237
3144|code|B               loc_B38|118-231
3146|code|LDR             R2, =(aMissingDeviceN+0x30 - 0xC50); ""|45-74
3148|code|ADD             R2, PC; ""|122-68
3150|code|B               loc_BE2|200-231
3152|code|LDR             R2, =(aMissingDeviceN+0x30 - 0xC56); ""|44-74
3154|code|ADD             R2, PC; ""|122-68
3156|code|B               loc_C0C|218-231
3158|code|LDR             R3, =(stderr_ptr - 0x11F88)|14-75
3160|code|MOVS            R1, #1; size|1-33
3162|code|LDR             R0, =(aSgResetResetRe - 0xC66); "sg_reset: reset requires CAP_SYS_ADMIN "...|43-72
3164|code|MOVS            R2, #0x39 ; '9'; n|57-34
3166|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
3170|code|ADD             R0, PC; "sg_reset: reset requires CAP_SYS_ADMIN "...|120-68
3172|code|LDR             R3, [R3]; s|27-104
3174|code|BLX             fwrite|255-247-198-237
3178|code|B               loc_B38|101-231
3180|code|LDR             R0, =(aSgResetComplet_2 - 0xC72); "sg_reset: completed host reset"|39-72
3182|code|ADD             R0, PC; "sg_reset: completed host reset"|120-68
3184|code|BLX             puts|255-247-216-237
3188|code|B               loc_AF8|64-231
3190|code|BLX             __stack_chk_fail|255-247-176-237
3194|data|ALIGN 4|0-191
3196|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8A4|228-22-1-0
3200|data|DCD __stack_chk_guard_ptr - 0x11F88|88-0-0-0
3204|data|DCD aSg3UtilsOldOpt - 0x8AC; "SG3_UTILS_OLD_OPTS"|64-11-0-0
3208|data|DCD aBdhhntvvz - 0x8CC; "bdhHNtvVz"|72-11-0-0
3212|data|DCD off_12008 - 0x8D0; "bus"|56-23-1-0
3216|data|DCD stderr_ptr - 0x11F88|96-0-0-0
3220|data|DCD aSgResetVersion - 0x988; "sg_reset: version: %s\n"|152-10-0-0
3224|data|DCD a05820130507 - 0x98A; "0.58 20130507"|174-10-0-0
3228|data|DCD aUnrecognisedOp - 0x9AA; "unrecognised option code 0x%x ??\n"|158-10-0-0
3232|data|DCD aSgResetOldOpts - 0x9C4; "SG_RESET_OLD_OPTS"|60-10-0-0
3236|data|DCD optind_ptr - 0x11F88|92-0-0-0
3240|data|DCD aUnexpectedExtr - 0x9EE; "Unexpected extra argument: %s\n"|178-10-0-0
3244|data|DCD aMissingDeviceN - 0xA26; "Missing DEVICE name. Use '--help' to se"...|70-10-0-0
3248|data|DCD aCanOnlyRequest - 0xA8E; "Can only request one type of reset per "...|50-10-0-0
3252|data|DCD aSgResetSgScsiR - 0xB36; "sg_reset: SG_SCSI_RESET failed"|46-11-0-0
3256|data|DCD aSgResetStartin - 0xB5C; "sg_reset: starting bus reset"|244-9-0-0
3260|data|DCD aSgResetStartin_0 - 0xB6A; "sg_reset: starting device reset"|166-9-0-0
3264|data|DCD aSgResetCloseEr - 0xB74; "sg_reset: close error"|204-11-0-0
3268|data|DCD aSgResetStartin_1 - 0xB88; "sg_reset: starting host reset"|232-9-0-0
3272|data|DCD aSgResetOpenErr - 0xBA0; "sg_reset: open error: %s: "|84-9-0-0
3276|data|DCD aMissingDeviceN+0x30 - 0xBAA; ""|242-8-0-0
3280|data|DCD aSgResetDidNoth - 0xBB6; "sg_reset: did nothing, device is normal"...|206-10-0-0
3284|data|DCD aSgResetStartin_2 - 0xBC0; "sg_reset: starting target reset"|112-9-0-0
3288|data|DCD aOrTargetOrBusO - 0xBCE; "(or target or bus or host) "|226-7-0-0
3292|data|DCD aSgResetComplet - 0xBD4; "sg_reset: completed device %sreset\n"|224-10-0-0
3296|data|DCD aOrBusOrHost - 0xBE4; "(or bus or host) "|232-7-0-0
3300|data|DCD aSgResetComplet_0 - 0xBEA; "sg_reset: completed target %sreset\n"|238-10-0-0
3304|data|DCD aSgResetSgScsiR_0 - 0xBFE; "sg_reset: SG_SCSI_RESET not supported ("...|46-10-0-0
3308|data|DCD aOrHost - 0xC0E; "(or host) "|210-7-0-0
3312|data|DCD aSgResetComplet_1 - 0xC14; "sg_reset: completed bus %sreset\n"|232-10-0-0
3316|data|DCD aMissingDeviceN+0x30 - 0xC1E; ""|126-8-0-0
3320|data|DCD aSgResetResetFo - 0xC2E; "sg_reset: reset (for value=0x%x) may no"...|138-9-0-0
3324|data|DCD aSgResetBusyMay - 0xC44; "sg_reset: BUSY, may be resetting now\n"|76-9-0-0
3328|data|DCD aMissingDeviceN+0x30 - 0xC50; ""|76-8-0-0
3332|data|DCD aMissingDeviceN+0x30 - 0xC56; ""|70-8-0-0
3336|data|DCD aSgResetResetRe - 0xC66; "sg_reset: reset requires CAP_SYS_ADMIN "...|138-9-0-0
3340|data|DCD aSgResetComplet_2 - 0xC72; "sg_reset: completed host reset"|174-10-0-0
3344|code|MOV.W           R11, #0|79-240-0-11
3348|code|MOV.W           LR, #0|79-240-0-14
3352|code|POP             {R1}; argc|2-188
3354|code|MOV             R2, SP; ubp_av|106-70
3356|code|PUSH            {R2}; stack_end|4-180
3358|code|PUSH            {R0}; rtld_fini|1-180
3360|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xD48)|223-248-36-160
3364|code|ADR             R3, off_D48|8-163
3366|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
3368|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F88)|223-248-32-192
3372|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
3376|code|PUSH.W          {R12}; fini|77-248-4-205
3380|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F88)|6-75
3382|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
3386|code|LDR             R0, =(main_ptr - 0x11F88)|6-72
3388|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
3392|code|BLX             __libc_start_main|255-247-118-237
3396|code|BLX             abort|255-247-152-237
3400|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD48|64-18-1-0
3404|data|DCD __libc_csu_fini_ptr - 0x11F88|76-0-0-0
3408|data|DCD __libc_csu_init_ptr - 0x11F88|104-0-0-0
3412|data|DCD main_ptr - 0x11F88|108-0-0-0
3416|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xD68)|20-48-159-229
3420|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F88)|20-32-159-229
3424|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
3428|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
3432|code|CMP             R2, #0|0-0-82-227
3436|code|BXEQ            LR|30-255-47-1
3440|code|B               __gmon_start__|177-254-255-234
3444|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD68|32-18-1-0
3448|data|DCD __gmon_start___ptr_0 - 0x11F88|100-0-0-0
3452|code|LDR             R3, =(__bss_start__ - 0xD84)|7-75
3454|code|LDR             R0, =(__bss_start__ - 0xD88)|8-72
3456|code|ADD             R3, PC; __bss_start__|123-68
3458|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xD8E)|8-74
3460|code|ADD             R0, PC; __bss_start__|120-68
3462|code|ADDS            R3, #3|3-51
3464|code|SUBS            R3, R3, R0|27-26
3466|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3468|code|CMP             R3, #6|6-43
3470|code|BLS             locret_D98|3-217
3472|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F88)|5-75
3474|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
3476|code|CBZ             R3, locret_D98|3-177
3478|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
3480|code|BX              LR|112-71
3482|data|ALIGN 4|0-191
3484|data|DCD __bss_start__ - 0xD84|36-19-1-0
3488|data|DCD __bss_start__ - 0xD88|32-19-1-0
3492|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD8E|250-17-1-0
3496|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F88|84-0-0-0
3500|code|LDR             R1, =(__bss_start__ - 0xDB4)|8-73
3502|code|LDR             R0, =(__bss_start__ - 0xDB8)|9-72
3504|code|ADD             R1, PC; __bss_start__|121-68
3506|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xDBC)|9-75
3508|code|ADD             R0, PC; __bss_start__|120-68
3510|code|SUBS            R1, R1, R0|9-26
3512|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3514|code|ASRS            R1, R1, #2|137-16
3516|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
3520|code|ASRS            R1, R1, #1|73-16
3522|code|BEQ             locret_DCC|3-208
3524|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F88)|5-74
3526|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
3528|code|CBZ             R3, locret_DCC|3-177
3530|code|BX              R3; _ITM_registerTMCloneTable|24-71
3532|code|BX              LR|112-71
3534|data|ALIGN 0x10|0-191
3536|data|DCD __bss_start__ - 0xDB4|244-18-1-0
3540|data|DCD __bss_start__ - 0xDB8|240-18-1-0
3544|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDBC|204-17-1-0
3548|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F88|116-0-0-0
3552|code|PUSH            {R3,LR}|8-181
3554|code|LDR             R3, =(__bss_start__ - 0xDEA)|10-75
3556|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xDEC)|10-74
3558|code|ADD             R3, PC; __bss_start__|123-68
3560|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3562|code|LDRB            R3, [R3]|27-120
3564|code|CBNZ            R3, locret_E0A|107-185
3566|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F88)|9-75
3568|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
3570|code|CBZ             R3, loc_DFE|35-177
3572|code|LDR             R3, =(off_12004 - 0xDFA)|8-75
3574|code|ADD             R3, PC; off_12004|123-68
3576|code|LDR             R0, [R3]; off_12004 ; void *|24-104
3578|code|BLX             __cxa_finalize|255-247-232-236
3582|code|BL              sub_D7C|255-247-189-255
3586|code|LDR             R3, =(__bss_start__ - 0xE0A)|6-75
3588|code|MOVS            R2, #1|1-34
3590|code|ADD             R3, PC; __bss_start__|123-68
3592|code|STRB            R2, [R3]|26-112
3594|code|POP             {R3,PC}|8-189
3596|data|DCD __bss_start__ - 0xDEA|190-18-1-0
3600|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDEC|156-17-1-0
3604|data|DCD __cxa_finalize_ptr_0 - 0x11F88|80-0-0-0
3608|data|DCD off_12004 - 0xDFA|10-18-1-0
3612|data|DCD __bss_start__ - 0xE0A|158-18-1-0
3616|code|LDR             R0, =(dword_11E84 - 0xE28)|7-72
3618|code|PUSH            {R3,LR}|8-181
3620|code|ADD             R0, PC; dword_11E84|120-68
3622|code|LDR             R2, [R0]|2-104
3624|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE2E)|6-75
3626|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3628|code|CBNZ            R2, loc_E34|18-185
3630|code|POP.W           {R3,LR}|189-232-8-64
3634|code|B               sub_DAC|187-231
3636|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F88)|4-74
3638|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
3640|code|CMP             R3, #0|0-43
3642|code|BEQ             loc_E2E|248-208
3644|code|BLX             R3; _Jv_RegisterClasses|152-71
3646|code|B               loc_E2E|246-231
3648|data|DCD dword_11E84 - 0xE28|92-16-1-0
3652|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE2E|90-17-1-0
3656|data|DCD _Jv_RegisterClasses_ptr - 0x11F88|112-0-0-0
3660|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE56)|19-75
3662|code|MOVS            R1, #1; size|1-33
3664|code|PUSH            {R4-R6,LR}|112-181
3666|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3668|code|LDR             R4, =(stderr_ptr - 0x11F88)|18-76
3670|code|MOV             R5, R0|5-70
3672|code|LDR             R0, =(aUsageSgResetBu - 0xE62); "Usage: sg_reset [--bus] [--device] [--h"...|18-72
3674|code|MOVS            R2, #0xFA; n|250-34
3676|code|LDR             R4, [R3,R4]; stderr|28-89
3678|code|ADD             R0, PC; "Usage: sg_reset [--bus] [--device] [--h"...|120-68
3680|code|LDR             R3, [R4]; s|35-104
3682|code|BLX             fwrite|255-247-200-236
3686|code|CBNZ            R5, loc_E8A|133-185
3688|code|LDR             R0, =(aHelpHPrintUsag - 0xE74); "    --help|-h       print usage informa"...|15-72
3690|code|MOVS            R1, #1; size|1-33
3692|code|MOVS            R2, #0x68 ; 'h'; n|104-34
3694|code|LDR             R3, [R4]; s|35-104
3696|code|ADD             R0, PC; "    --help|-h       print usage informa"...|120-68
3698|code|BLX             fwrite|255-247-192-236
3702|code|LDR             R0, =(aNoEscNOverride - 0xE84); "    --no-esc|-N     overrides default a"...|13-72
3704|code|MOVS            R1, #1; size|1-33
3706|code|LDR             R3, [R4]; s|35-104
3708|code|MOVW            R2, #0x2D5; n|64-242-213-34
3712|code|ADD             R0, PC; "    --no-esc|-N     overrides default a"...|120-68
3714|code|POP.W           {R4-R6,LR}|189-232-112-64
3718|code|B.W             j_fwrite|255-247-179-188
3722|code|LDR             R0, =(aHelpZPrintUsag - 0xE96); "    --help|-z       print usage informa"...|9-72
3724|code|MOVS            R1, #1; size|1-33
3726|code|MOVS            R2, #0x68 ; 'h'; n|104-34
3728|code|LDR             R3, [R4]; s|35-104
3730|code|ADD             R0, PC; "    --help|-z       print usage informa"...|120-68
3732|code|BLX             fwrite|255-247-174-236
3736|code|B               loc_E76|237-231
3738|data|ALIGN 4|0-191
3740|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE56|50-17-1-0
3744|data|DCD stderr_ptr - 0x11F88|96-0-0-0
3748|data|DCD aUsageSgResetBu - 0xE62; "Usage: sg_reset [--bus] [--device] [--h"...|162-0-0-0
3752|data|DCD aHelpHPrintUsag - 0xE74; "    --help|-h       print usage informa"...|248-1-0-0
3756|data|DCD aNoEscNOverride - 0xE84; "    --no-esc|-N     overrides default a"...|84-2-0-0
3760|data|DCD aHelpZPrintUsag - 0xE96; "    --help|-z       print usage informa"...|106-1-0-0
3764|code|PUSH.W          {R3-R9,LR}|45-233-248-67
3768|code|MOV             R7, R0|7-70
3770|code|LDR             R6, =(off_11E80 - 0xEC6)|12-78
3772|code|MOV             R8, R1|136-70
3774|code|LDR             R5, =(off_11E7C - 0xECC)|12-77
3776|code|MOV             R9, R2|145-70
3778|code|ADD             R6, PC; off_11E80|126-68
3780|code|BLX             .init_proc|255-247-114-236
3784|code|ADD             R5, PC; off_11E7C|125-68
3786|code|SUBS            R6, R6, R5|118-27
3788|code|ASRS            R6, R6, #2|182-16
3790|code|BEQ             locret_EE6|10-208
3792|code|SUBS            R5, #4|4-61
3794|code|MOVS            R4, #0|0-36
3796|code|ADDS            R4, #1|1-52
3798|code|LDR.W           R3, [R5,#4]!|85-248-4-63
3802|code|MOV             R0, R7|56-70
3804|code|MOV             R1, R8|65-70
3806|code|MOV             R2, R9|74-70
3808|code|BLX             R3|152-71
3810|code|CMP             R4, R6|180-66
3812|code|BNE             loc_ED4|246-209
3814|code|POP.W           {R3-R9,PC}|189-232-248-131
3818|data|ALIGN 4|0-191
3820|data|DCD off_11E80 - 0xEC6|186-15-1-0
3824|data|DCD off_11E7C - 0xECC|176-15-1-0
3828|code|BX              LR|112-71
3830|data|ALIGN 4|0-191
3832|code|PUSH            {R3,LR}|8-64-45-233
3836|code|POP             {R3,PC}|8-128-189-232
73340|data|DCD sub_E20+1|33-14-0-0
73344|data|DCD sub_DE0+1|225-13-0-0
73348|data|DCD 0|0-0-0-0
73352|data|Elf32_Dyn <1, <1>>; DT_NEEDED libc.so.6|1-0-0-0-1-0-0-0
73360|data|Elf32_Dyn <1, <0xB6>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-182-0-0-0
73368|data|Elf32_Dyn <0xC, <0x7AC>>; DT_INIT|12-0-0-0-172-7-0-0
73376|data|Elf32_Dyn <0xD, <0xEF8>>; DT_FINI|13-0-0-0-248-14-0-0
73384|data|Elf32_Dyn <0x19, <0x11E7C>>; DT_INIT_ARRAY|25-0-0-0-124-30-1-0
73392|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73400|data|Elf32_Dyn <0x1A, <0x11E80>>; DT_FINI_ARRAY|26-0-0-0-128-30-1-0
73408|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73416|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73424|data|Elf32_Dyn <5, <0x444>>; DT_STRTAB|5-0-0-0-68-4-0-0
73432|data|Elf32_Dyn <6, <0x204>>; DT_SYMTAB|6-0-0-0-4-2-0-0
73440|data|Elf32_Dyn <0xA, <0x1A6>>; DT_STRSZ|10-0-0-0-166-1-0-0
73448|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73456|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73464|data|Elf32_Dyn <3, <0x11F88>>; DT_PLTGOT|3-0-0-0-136-31-1-0
73472|data|Elf32_Dyn <2, <0x80>>; DT_PLTRELSZ|2-0-0-0-128-0-0-0
73480|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73488|data|Elf32_Dyn <0x17, <0x72C>>; DT_JMPREL|23-0-0-0-44-7-0-0
73496|data|Elf32_Dyn <0x11, <0x674>>; DT_REL|17-0-0-0-116-6-0-0
73504|data|Elf32_Dyn <0x12, <0xB8>>; DT_RELSZ|18-0-0-0-184-0-0-0
73512|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73520|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73528|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73536|data|Elf32_Dyn <0x6FFFFFFE, <0x634>>; DT_VERNEED|254-255-255-111-52-6-0-0
73544|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73552|data|Elf32_Dyn <0x6FFFFFF0, <0x5EA>>; DT_VERSYM|240-255-255-111-234-5-0-0
73560|data|Elf32_Dyn <0x6FFFFFFA, <0xF>>; DT_RELCOUNT|250-255-255-111-15-0-0-0
73568|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73608|data|DCD stru_11E88|136-30-1-0
73612|data|DCD 0|0-0-0-0
73616|data|DCD dword_0|0-0-0-0
73620|data|DCD __imp___cxa_finalize|176-32-1-0
73624|data|DCD __imp___stack_chk_fail|188-32-1-0
73628|data|DCD __imp_perror|192-32-1-0
73632|data|DCD __imp_fwrite|200-32-1-0
73636|data|DCD __imp_ioctl|204-32-1-0
73640|data|DCD __imp_open64|208-32-1-0
73644|data|DCD __imp_getenv|212-32-1-0
73648|data|DCD __imp_puts|216-32-1-0
73652|data|DCD __imp___libc_start_main|220-32-1-0
73656|data|DCD __imp___gmon_start__|252-32-1-0
73660|data|DCD __imp_getopt_long|224-32-1-0
73664|data|DCD __imp___errno_location|228-32-1-0
73668|data|DCD __imp___printf_chk|232-32-1-0
73672|data|DCD __imp___fprintf_chk|236-32-1-0
73676|data|DCD __imp_abort|240-32-1-0
73680|data|DCD __imp_close|244-32-1-0
73684|data|DCD __libc_csu_fini+1|245-14-0-0
73688|data|DCD __imp___cxa_finalize|176-32-1-0
73692|data|DCD _ITM_deregisterTMCloneTable|248-32-1-0
73696|data|DCD __stack_chk_guard|180-32-1-0
73700|data|DCD optind|184-32-1-0
73704|data|DCD stderr|196-32-1-0
73708|data|DCD __imp___gmon_start__|252-32-1-0
73712|data|DCD __libc_csu_init+1|181-14-0-0
73716|data|DCD main+1|145-8-0-0
73720|data|DCD _Jv_RegisterClasses|0-33-1-0
73724|data|DCD _ITM_registerTMCloneTable|4-33-1-0
73896|data|% 1; Alternative name is '__bss_start'|255
