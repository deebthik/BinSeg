address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|181-31-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x7330; SHT file offset|48-115-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 9; Number of entries in PHT|9-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1C; Number of entries in SHT|28-0
65586|data|DCW 0x1B; SHT entry index for string table|27-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x69F4; File offset|244-105-0-0
65596|data|DCD unk_169F4; Virtual address|244-105-1-0
65600|data|DCD 0x169F4; Physical address|244-105-1-0
65604|data|DCD 8; Size in file image|8-0-0-0
65608|data|DCD 8; Size in memory image|8-0-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x120; Size in file image|32-1-0-0
65640|data|DCD 0x120; Size in memory image|32-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x154; File offset|84-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|84-1-1-0
65664|data|DCD 0x10154; Physical address|84-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x6A00; Size in file image|0-106-0-0
65704|data|DCD 0x6A00; Size in memory image|0-106-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x6EB8; File offset|184-110-0-0
65724|data|DCD off_26EB8; Virtual address|184-110-2-0
65728|data|DCD 0x26EB8; Physical address|184-110-2-0
65732|data|DCD 0x344; Size in file image|68-3-0-0
65736|data|DCD 0x3F8; Size in memory image|248-3-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x6EE8; File offset|232-110-0-0
65756|data|DCD stru_26EE8; Virtual address|232-110-2-0
65760|data|DCD 0x26EE8; Physical address|232-110-2-0
65764|data|DCD 0x118; Size in file image|24-1-0-0
65768|data|DCD 0x118; Size in memory image|24-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x170; File offset|112-1-0-0
65788|data|DCD dword_10170; Virtual address|112-1-1-0
65792|data|DCD 0x10170; Physical address|112-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
65848|data|DCD 0x6EB8; File offset|184-110-0-0
65852|data|DCD off_26EB8; Virtual address|184-110-2-0
65856|data|DCD 0x26EB8; Physical address|184-110-2-0
65860|data|DCD 0x148; Size in file image|72-1-0-0
65864|data|DCD 0x148; Size in memory image|72-1-0-0
65868|data|DCD 4; Flags|4-0-0-0
65872|data|DCD 1; Alignment|1-0-0-0
65876|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65901|data|DCB 0, 0, 0|0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x10; Desc Size|16-0-0-0
65912|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65936|data|DCD 4; Name Size|4-0-0-0
65940|data|DCD 0x14; Desc Size|20-0-0-0
65944|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65948|data|DCB "GNU",0; Name|71-78-85-0
65952|data|DCB 0x95, 0xA6, 0xB, 0x9D, 0x12, 0xC6, 0xFD, 0xD6, 0xEB; Desc|149-166-11-157-18-198-253-214-235-127-148-242-24-158-43-205-101-118-104-38
65972|data|DCD 0x61|97-0-0-0
65976|data|DCD 0xA|10-0-0-0
65980|data|DCD 0x20|32-0-0-0
65984|data|DCD 0xA|10-0-0-0
65988|data|DCD 0x8400908, 0x2603D100, 0x2540440, 0x11600180, 0x10400090|8-9-64-8-0-209-3-38-64-4-84-2-128-1-96-17-144-0-64-16-0-109-1-16-0-64-1-0-16-32-0-0-138-0-32-0-20-72-8-113-10-32-11-0-132-80-192-43-4-32-1-32-43-138-4-137-1-198-8-19-86-96-0-6-128-8-112-110-72-112-74-155-106-0-66-106-0-0-4-64-16-0-10-0-0-1-68-132-168-4-128-0-0-0-16-16-167-41-2-72-11-105-131-0-0-16-144-137-13-9-161-32-44-72-40-32-129-1-136-9-128-144-1-0-0-4-18-16
66116|data|DCD 0xA, 0xD, 0xE, 0, 0, 0, 0x10, 0x12, 0, 0, 0, 0x13|10-0-0-0-13-0-0-0-14-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-18-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-19-0-0-0-22-0-0-0-23-0-0-0-27-0-0-0-29-0-0-0-31-0-0-0-33-0-0-0-35-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-36-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-39-0-0-0-0-0-0-0-41-0-0-0-45-0-0-0-50-0-0-0-0-0-0-0-52-0-0-0-53-0-0-0-0-0-0-0-54-0-0-0-55-0-0-0-58-0-0-0-59-0-0-0-61-0-0-0-0-0-0-0-63-0-0-0-68-0-0-0-71-0-0-0-72-0-0-0-75-0-0-0-77-0-0-0-78-0-0-0-79-0-0-0-81-0-0-0-82-0-0-0-84-0-0-0-85-0-0-0-86-0-0-0-0-0-0-0-0-0-0-0-88-0-0-0-0-0-0-0-89-0-0-0-90-0-0-0-92-0-0-0-0-0-0-0-93-0-0-0-0-0-0-0-95-0-0-0-97-0-0-0-0-0-0-0-98-0-0-0-0-0-0-0-99-0-0-0-100-0-0-0-101-0-0-0-103-0-0-0-0-0-0-0-105-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-109-0-0-0-111-0-0-0-0-0-0-0-115-0-0-0-117-0-0-0-118-0-0-0-121-0-0-0-122-0-0-0-124-0-0-0-126-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-127-0-0-0-0-0-0-0-0-0-0-0
66504|data|DCD 0x1C93965E, 0x69B1FF4C, 0x10A8B551, 0x8DEEE23, 0x18689782|94-150-147-28-76-255-177-105-81-181-168-16-35-238-222-8-130-151-104-24-215-42-32-210-44-50-64-253-237-233-67-43-117-3-72-226-118-84-60-148-202-150-147-28-205-63-12-175-35-55-65-123-22-210-69-69-54-195-242-122-8-172-249-143-41-176-14-250-102-89-47-229-49-35-125-33-46-78-61-246-105-15-90-204-0-175-52-232-141-137-201-25-252-71-155-124-99-97-247-16-179-95-164-147-30-246-92-16-198-14-224-61-63-126-150-124-0-35-249-164-131-139-61-123-124-139-115-15-138-87-203-136-156-187-147-28-3-85-177-36-44-90-251-245-66-69-213-236-80-238-17-227-170-32-12-43-125-237-17-15-186-149-147-28-91-154-59-15-65-77-157-124-191-149-13-3-173-112-14-175-22-234-118-254-88-239-151-121-207-77-118-211-57-242-139-28-70-88-55-15-161-159-169-15-82-80-85-2-175-189-249-76-234-211-239-14-200-57-64-31-28-110-221-15-48-188-18-151-185-141-241-14-146-70-172-95-44-226-11-37-61-68-63-123-229-229-151-216-124-96-156-124-206-64-85-2-147-15-54-58-56-232-68-16-37-249-50-48-173-172-18-151-175-165-117-228-30-234-9-3-217-113-88-28-227-5-68-172-178-162-247-18-39-70-243-235-27-159-214-189-161-129-219-222-186-227-146-124-203-113-119-251-237-16-141-170-115-122-235-226-16-123-156-124-51-17-166-16-133-206-203-200-174-64-151-195-119-229-150-124-60-225-195-135-65-90-64-172-5-251-7-214-25-214-227-106-49-184-130-13-35-185-5-195-190-218-87-27-33-47-136-16-0-157-167-158-91-246-73-226-192-229-149-124-86-211-3-182-2-55-118-253-239-25-135-248-2-44-175-36-7-174-213-39-134-240-150-124-208-159-44-252-118-215-155-124-103-32-246-36-168-207-131-248-89-168-65-30-27-216-137-157-144-117-130-13-66-102-75-16-111-49-122-28-133-88-105-169-178-45-23-15-187-74-70-226-60-173-57-13-47-3-49-28-107-195-195-237-252-210-239-15-141-53-9-99
66980|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66996|data|Elf32_Sym <aItmDeregistert - byte_10DB4, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67012|data|Elf32_Sym <aAcsMap - byte_10DB4, 0, 0, 0x11, 0, 0>; "acs_map"|42-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
67028|data|Elf32_Sym <aStackChkGuard - byte_10DB4, 0, 0, 0x11, 0, 0>; "__stack_chk_guard"|157-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
67044|data|Elf32_Sym <aGmonStart - byte_10DB4, 0, 0, 0x20, 0, 0>; "__gmon_start__"|51-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67060|data|Elf32_Sym <aCols - byte_10DB4, 0, 0, 0x11, 0, 0>; "COLS"|57-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
67076|data|Elf32_Sym <aStdscr - byte_10DB4, 0, 0, 0x11, 0, 0>; "stdscr"|73-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
67092|data|Elf32_Sym <aLines - byte_10DB4, 0, 0, 0x11, 0, 0>; "LINES"|92-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
67108|data|Elf32_Sym <aJvRegisterclas - byte_10DB4, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|80-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67124|data|Elf32_Sym <aItmRegistertmc - byte_10DB4, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|100-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67140|data|Elf32_Sym <aStrcmp - byte_10DB4, 0, 0, 0x12, 0, 0>; "strcmp"|85-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67156|data|Elf32_Sym <aWaddnstr - byte_10DB4, 0, 0, 0x12, 0, 0>; "waddnstr"|42-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67172|data|Elf32_Sym <aFwrite+1 - byte_10DB4, 0, 0, 0x12, 0, 0>; "write"|11-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67188|data|Elf32_Sym <aKeypad - byte_10DB4, 0, 0, 0x12, 0, 0>; "keypad"|222-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67204|data|Elf32_Sym <aResetProgMode - byte_10DB4, 0, 0, 0x12, 0, 0>; "reset_prog_mode"|62-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67220|data|Elf32_Sym <aSetFieldStatus - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_field_status"|100-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67236|data|Elf32_Sym <aFflush - byte_10DB4, 0, 0, 0x12, 0, 0>; "fflush"|21-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67252|data|Elf32_Sym <aCxaAtexit - byte_10DB4, 0, 0, 0x12, 0, 0>; "__cxa_atexit"|124-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67268|data|Elf32_Sym <aFreeItem - byte_10DB4, 0, 0, 0x12, 0, 0>; "free_item"|154-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67284|data|Elf32_Sym <aBssStart_0 - byte_10DB4, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|194-4-0-0-252-113-2-0-0-0-0-0-16-0-25-0
67300|data|Elf32_Sym <aStrcpy - byte_10DB4, 0, 0, 0x12, 0, 0>; "strcpy"|28-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67316|data|Elf32_Sym <aStrncmp - byte_10DB4, 0, 0, 0x12, 0, 0>; "strncmp"|41-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67332|data|Elf32_Sym <aNewMenu - byte_10DB4, 0, 0, 0x12, 0, 0>; "new_menu"|145-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67348|data|Elf32_Sym <aSetCurrentItem+4 - byte_10DB4, 0, 0, 0x12, 0, 0>; "current_item"|188-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67364|data|Elf32_Sym <aXstat - byte_10DB4, 0, 0, 0x12, 0, 0>; "__xstat"|69-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67380|data|Elf32_Sym <aStrerror - byte_10DB4, 0, 0, 0x12, 0, 0>; "strerror"|92-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67396|data|Elf32_Sym <aSetItemUserptr+4 - byte_10DB4, 0, 0, 0x12, 0, 0>; "item_userptr"|44-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67412|data|Elf32_Sym <aVfprintfChk - byte_10DB4, 0, 0, 0x12, 0, 0>; "__vfprintf_chk"|48-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67428|data|Elf32_Sym <aNodelay - byte_10DB4, 0, 0, 0x12, 0, 0>; "nodelay"|239-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67444|data|Elf32_Sym <aLibcStartMain - byte_10DB4, 0, 0, 0x12, 0, 0>; "__libc_start_main"|101-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67460|data|Elf32_Sym <aFieldOptsOff - byte_10DB4, 0, 0, 0x12, 0, 0>; "field_opts_off"|117-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67476|data|Elf32_Sym <aBssEnd+1 - byte_10DB4, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|209-4-0-0-176-114-2-0-0-0-0-0-16-0-25-0
67492|data|Elf32_Sym <aCursSet - byte_10DB4, 0, 0, 0x12, 0, 0>; "curs_set"|98-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67508|data|Elf32_Sym <aNonl - byte_10DB4, 0, 0, 0x12, 0, 0>; "nonl"|117-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67524|data|Elf32_Sym <aSetFieldBuffer+4 - byte_10DB4, 0, 0, 0x12, 0, 0>; "field_buffer"|182-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67540|data|Elf32_Sym <aSetItemUserptr - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_item_userptr"|40-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67556|data|Elf32_Sym <aSleep - byte_10DB4, 0, 0, 0x12, 0, 0>; "sleep"|63-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67572|data|Elf32_Sym <aRealloc - byte_10DB4, 0, 0, 0x12, 0, 0>; "realloc"|98-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67588|data|Elf32_Sym <aCxaAtexit+8 - byte_10DB4, 0, 0, 0x12, 0, 0>; "exit"|132-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67604|data|Elf32_Sym <aErrnoLocation - byte_10DB4, 0, 0, 0x12, 0, 0>; "__errno_location"|132-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67620|data|Elf32_Sym <aNewForm - byte_10DB4, 0, 0, 0x12, 0, 0>; "new_form"|132-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67636|data|Elf32_Sym <aFopen - byte_10DB4, 0, 0, 0x12, 0, 0>; "fopen"|35-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67652|data|Elf32_Sym <aWrefresh - byte_10DB4, 0, 0, 0x12, 0, 0>; "wrefresh"|158-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67668|data|Elf32_Sym <aStrlen - byte_10DB4, 0, 0, 0x12, 0, 0>; "strlen"|112-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67684|data|Elf32_Sym <aWclear - byte_10DB4, 0, 0, 0x12, 0, 0>; "wclear"|179-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67700|data|Elf32_Sym <aCbreak - byte_10DB4, 0, 0, 0x12, 0, 0>; "cbreak"|50-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67716|data|Elf32_Sym <aEdata - byte_10DB4, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|175-4-0-0-252-113-2-0-0-0-0-0-16-0-24-0
67732|data|Elf32_Sym <aFprintfChk - byte_10DB4, 0, 0, 0x12, 0, 0>; "__fprintf_chk"|164-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67748|data|Elf32_Sym <aFreeField - byte_10DB4, 0, 0, 0x12, 0, 0>; "free_field"|141-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67764|data|Elf32_Sym <aAbort - byte_10DB4, 0, 0, 0x12, 0, 0>; "abort"|106-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67780|data|Elf32_Sym <aStrchr - byte_10DB4, 0, 0, 0x12, 0, 0>; "strchr"|41-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67796|data|Elf32_Sym <aClose - byte_10DB4, 0, 0, 0x12, 0, 0>; "close"|35-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67812|data|Elf32_Sym <aRead - byte_10DB4, 0, 0, 0x12, 0, 0>; "read"|149-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67828|data|Elf32_Sym <aUnpostMenu+2 - byte_10DB4, 0, 0, 0x12, 0, 0>; "post_menu"|234-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67844|data|Elf32_Sym <aStrrchr - byte_10DB4, 0, 0, 0x12, 0, 0>; "strrchr"|49-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67860|data|Elf32_Sym <aFwrite - byte_10DB4, 0, 0, 0x12, 0, 0>; "fwrite"|10-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67876|data|Elf32_Sym <aEnd - byte_10DB4, _end, 0, 0x10, 0, 0x19>; "__end__"|220-4-0-0-176-114-2-0-0-0-0-0-16-0-25-0
67892|data|Elf32_Sym <aConnect - byte_10DB4, 0, 0, 0x12, 0, 0>; "connect"|57-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67908|data|Elf32_Sym <aStderr - byte_10DB4, stderr, 4, 0x11, 0, 0x19>; "stderr"|221-3-0-0-0-114-2-0-4-0-0-0-17-0-25-0
67924|data|Elf32_Sym <aSigaction - byte_10DB4, 0, 0, 0x12, 0, 0>; "sigaction"|17-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67940|data|Elf32_Sym <aIoctl - byte_10DB4, 0, 0, 0x12, 0, 0>; "ioctl"|228-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67956|data|Elf32_Sym <aSetMenuWin - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_menu_win"|132-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67972|data|Elf32_Sym <aSetMenuMark - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_menu_mark"|17-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67988|data|Elf32_Sym <aFini - byte_10DB4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|178-0-0-0-200-91-1-0-0-0-0-0-18-0-14-0
68004|data|Elf32_Sym <aStackChkFail - byte_10DB4, 0, 0, 0x12, 0, 0>; "__stack_chk_fail"|75-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68020|data|Elf32_Sym <aNewwin - byte_10DB4, 0, 0, 0x12, 0, 0>; "newwin"|186-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68036|data|Elf32_Sym <aSetFormWin - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_form_win"|152-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68052|data|Elf32_Sym <aInit - byte_10DB4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|201-0-0-0-176-23-1-0-0-0-0-0-18-0-11-0
68068|data|Elf32_Sym <aCuiBootEditorR - byte_10DB4, cui_boot_editor_run+1, 0x24, \; "cui_boot_editor_run"|233-4-0-0-145-37-1-0-36-0-0-0-18-0-13-0
68084|data|Elf32_Sym <aWhline - byte_10DB4, 0, 0, 0x12, 0, 0>; "whline"|201-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68100|data|Elf32_Sym <aNewItem - byte_10DB4, 0, 0, 0x12, 0, 0>; "new_item"|31-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68116|data|Elf32_Sym <aNcAtexit - byte_10DB4, nc_atexit+1, 0x28, 0x12, 0, 0xD>; "nc_atexit"|12-5-0-0-129-52-1-0-40-0-0-0-18-0-13-0
68132|data|Elf32_Sym <aPoll - byte_10DB4, 0, 0, 0x12, 0, 0>; "poll"|159-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68148|data|Elf32_Sym <aSetMenuSub - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_menu_sub"|4-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68164|data|Elf32_Sym <aUngetch - byte_10DB4, 0, 0, 0x12, 0, 0>; "ungetch"|143-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68180|data|Elf32_Sym <aRaise - byte_10DB4, 0, 0, 0x12, 0, 0>; "raise"|208-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68196|data|Elf32_Sym <aIntrflush - byte_10DB4, 0, 0, 0x12, 0, 0>; "intrflush"|229-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68212|data|Elf32_Sym <aSetFormSub - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_form_sub"|165-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68228|data|Elf32_Sym <aDefProgMode - byte_10DB4, 0, 0, 0x12, 0, 0>; "def_prog_mode"|78-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68244|data|Elf32_Sym <aUnpostForm+2 - byte_10DB4, 0, 0, 0x12, 0, 0>; "post_form"|219-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68260|data|Elf32_Sym <aBssStart - byte_10DB4, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|182-4-0-0-252-113-2-0-0-0-0-0-16-0-25-0
68276|data|Elf32_Sym <aUnpostMenu - byte_10DB4, 0, 0, 0x12, 0, 0>; "unpost_menu"|232-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68292|data|Elf32_Sym <aOptarg - byte_10DB4, optarg, 4, 0x11, 0, 0x19>; "optarg"|214-3-0-0-4-114-2-0-4-0-0-0-17-0-25-0
68308|data|Elf32_Sym <aSetMenuItems - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_menu_items"|207-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68324|data|Elf32_Sym <aMemmove - byte_10DB4, 0, 0, 0x12, 0, 0>; "memmove"|77-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68340|data|Elf32_Sym <aSetCurrentItem - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_current_item"|184-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68356|data|Elf32_Sym <aEnd_0 - byte_10DB4, _end, 0, 0x10, 0, 0x19>; "_end"|228-4-0-0-176-114-2-0-0-0-0-0-16-0-25-0
68372|data|Elf32_Sym <aEndwin - byte_10DB4, 0, 0, 0x12, 0, 0>; "endwin"|151-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68388|data|Elf32_Sym <aSetFieldBuffer - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_field_buffer"|178-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68404|data|Elf32_Sym <aNewField - byte_10DB4, 0, 0, 0x12, 0, 0>; "new_field"|195-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68420|data|Elf32_Sym <aPuts - byte_10DB4, 0, 0, 0x12, 0, 0>; "puts"|65-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68436|data|Elf32_Sym <aWmove - byte_10DB4, 0, 0, 0x12, 0, 0>; "wmove"|126-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68452|data|Elf32_Sym <aFormDriver - byte_10DB4, 0, 0, 0x12, 0, 0>; "form_driver"|205-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68468|data|Elf32_Sym <aResizeTerm - byte_10DB4, 0, 0, 0x12, 0, 0>; "resize_term"|167-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68484|data|Elf32_Sym <aFork - byte_10DB4, 0, 0, 0x12, 0, 0>; "fork"|70-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68500|data|Elf32_Sym <aItemCount - byte_10DB4, 0, 0, 0x12, 0, 0>; "item_count"|69-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68516|data|Elf32_Sym <aUnpostForm - byte_10DB4, 0, 0, 0x12, 0, 0>; "unpost_form"|217-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68532|data|Elf32_Sym <aMenuDriver - byte_10DB4, 0, 0, 0x12, 0, 0>; "menu_driver"|57-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68548|data|Elf32_Sym <aSetMaxField - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_max_field"|229-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68564|data|Elf32_Sym <aMemset - byte_10DB4, 0, 0, 0x12, 0, 0>; "memset"|119-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68580|data|Elf32_Sym <aVsnprintfChk - byte_10DB4, 0, 0, 0x12, 0, 0>; "__vsnprintf_chk"|185-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68596|data|Elf32_Sym <aBssEnd - byte_10DB4, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|208-4-0-0-176-114-2-0-0-0-0-0-16-0-25-0
68612|data|Elf32_Sym <aNoecho - byte_10DB4, 0, 0, 0x12, 0, 0>; "noecho"|122-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68628|data|Elf32_Sym <aInitscr - byte_10DB4, 0, 0, 0x12, 0, 0>; "initscr"|193-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68644|data|Elf32_Sym <aFreeMenu - byte_10DB4, 0, 0, 0x12, 0, 0>; "free_menu"|222-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68660|data|Elf32_Sym <aDup2 - byte_10DB4, 0, 0, 0x12, 0, 0>; "dup2"|154-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68676|data|Elf32_Sym <aWaitpid - byte_10DB4, 0, 0, 0x12, 0, 0>; "waitpid"|27-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68692|data|Elf32_Sym <aFileno - byte_10DB4, 0, 0, 0x12, 0, 0>; "fileno"|3-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68708|data|Elf32_Sym <aDerwin - byte_10DB4, 0, 0, 0x12, 0, 0>; "derwin"|93-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68724|data|Elf32_Sym <aWchgat - byte_10DB4, 0, 0, 0x12, 0, 0>; "wchgat"|136-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68740|data|Elf32_Sym <aGetoptLong - byte_10DB4, 0, 0, 0x12, 0, 0>; "getopt_long"|240-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68756|data|Elf32_Sym <aFree - byte_10DB4, 0, 0, 0x12, 0, 0>; "free"|119-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68772|data|Elf32_Sym <aExecvp - byte_10DB4, 0, 0, 0x12, 0, 0>; "execvp"|252-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68788|data|Elf32_Sym <aFopen+1 - byte_10DB4, 0, 0, 0x12, 0, 0>; "open"|36-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68804|data|Elf32_Sym <aWgetch - byte_10DB4, 0, 0, 0x12, 0, 0>; "wgetch"|129-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68820|data|Elf32_Sym <aDelwin - byte_10DB4, 0, 0, 0x12, 0, 0>; "delwin"|66-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68836|data|Elf32_Sym <aMenuOptsOff - byte_10DB4, 0, 0, 0x12, 0, 0>; "menu_opts_off"|164-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68852|data|Elf32_Sym <aWredrawln - byte_10DB4, 0, 0, 0x12, 0, 0>; "wredrawln"|107-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68868|data|Elf32_Sym <aMemcpy - byte_10DB4, 0, 0, 0x12, 0, 0>; "memcpy"|178-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68884|data|Elf32_Sym <aRmdir - byte_10DB4, 0, 0, 0x12, 0, 0>; "rmdir"|126-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68900|data|Elf32_Sym <aPbSystemApps - byte_10DB4, pb_system_apps, 0x24, 0x11, 0, \; "pb_system_apps"|253-4-0-0-196-110-2-0-36-0-0-0-17-0-21-0
68916|data|Elf32_Sym <aSetFieldBack - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_field_back"|243-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68932|data|Elf32_Sym <aAlarm - byte_10DB4, 0, 0, 0x12, 0, 0>; "alarm"|234-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68948|data|Elf32_Sym <aFreeForm - byte_10DB4, 0, 0, 0x12, 0, 0>; "free_form"|2-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68964|data|Elf32_Sym <aMalloc - byte_10DB4, 0, 0, 0x12, 0, 0>; "malloc"|201-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68980|data|Elf32_Sym <aSocket - byte_10DB4, 0, 0, 0x12, 0, 0>; "socket"|14-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68996|data|Elf32_Sym <aCurrentField - byte_10DB4, 0, 0, 0x12, 0, 0>; "current_field"|12-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69012|data|Elf32_Sym <aMkdir - byte_10DB4, 0, 0, 0x12, 0, 0>; "mkdir"|92-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69028|data|Elf32_Sym <aSetMenuFormat - byte_10DB4, 0, 0, 0x12, 0, 0>; "set_menu_format"|244-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69044|data|DCB 0|0
69045|data|DCB "libmenu.so.5",0|108-105-98-109-101-110-117-46-115-111-46-53-0
69058|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
69086|data|DCB "waddnstr",0|119-97-100-100-110-115-116-114-0
69095|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
69110|data|DCB "delwin",0|100-101-108-119-105-110-0
69117|data|DCB "stdscr",0|115-116-100-115-99-114-0
69124|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
69144|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
69170|data|DCB "wmove",0|119-109-111-118-101-0
69176|data|DCB "set_menu_win",0|115-101-116-95-109-101-110-117-95-119-105-110-0
69189|data|DCB "new_menu",0|110-101-119-95-109-101-110-117-0
69198|data|DCB "free_item",0|102-114-101-101-95-105-116-101-109-0
69208|data|DCB "menu_opts_off",0|109-101-110-117-95-111-112-116-115-95-111-102-102-0
69222|data|DCB "_fini",0|95-102-105-110-105-0
69228|data|DCB "set_current_item",0|115-101-116-95-99-117-114-114-101-110-116-95-105-116-101-109-0
69245|data|DCB "_init",0|95-105-110-105-116-0
69251|data|DCB "set_menu_items",0|115-101-116-95-109-101-110-117-95-105-116-101-109-115-0
69266|data|DCB "free_menu",0|102-114-101-101-95-109-101-110-117-0
69276|data|DCB "unpost_menu",0|117-110-112-111-115-116-95-109-101-110-117-0
69288|data|DCB "set_menu_format",0|115-101-116-95-109-101-110-117-95-102-111-114-109-97-116-0
69304|data|DCB "set_menu_sub",0|115-101-116-95-109-101-110-117-95-115-117-98-0
69317|data|DCB "set_menu_mark",0|115-101-116-95-109-101-110-117-95-109-97-114-107-0
69331|data|DCB "new_item",0|110-101-119-95-105-116-101-109-0
69340|data|DCB "set_item_userptr",0|115-101-116-95-105-116-101-109-95-117-115-101-114-112-116-114-0
69357|data|DCB "menu_driver",0|109-101-110-117-95-100-114-105-118-101-114-0
69369|data|DCB "item_count",0|105-116-101-109-95-99-111-117-110-116-0
69380|data|DCB "libform.so.5",0|108-105-98-102-111-114-109-46-115-111-46-53-0
69393|data|DCB "derwin",0|100-101-114-119-105-110-0
69400|data|DCB "set_field_status",0|115-101-116-95-102-105-101-108-100-95-115-116-97-116-117-115-0
69417|data|DCB "field_opts_off",0|102-105-101-108-100-95-111-112-116-115-95-111-102-102-0
69432|data|DCB "new_form",0|110-101-119-95-102-111-114-109-0
69441|data|DCB "free_field",0|102-114-101-101-95-102-105-101-108-100-0
69452|data|DCB "set_form_win",0|115-101-116-95-102-111-114-109-95-119-105-110-0
69465|data|DCB "set_form_sub",0|115-101-116-95-102-111-114-109-95-115-117-98-0
69478|data|DCB "set_field_buffer",0|115-101-116-95-102-105-101-108-100-95-98-117-102-102-101-114-0
69495|data|DCB "new_field",0|110-101-119-95-102-105-101-108-100-0
69505|data|DCB "form_driver",0|102-111-114-109-95-100-114-105-118-101-114-0
69517|data|DCB "unpost_form",0|117-110-112-111-115-116-95-102-111-114-109-0
69529|data|DCB "set_max_field",0|115-101-116-95-109-97-120-95-102-105-101-108-100-0
69543|data|DCB "set_field_back",0|115-101-116-95-102-105-101-108-100-95-98-97-99-107-0
69558|data|DCB "free_form",0|102-114-101-101-95-102-111-114-109-0
69568|data|DCB "current_field",0|99-117-114-114-101-110-116-95-102-105-101-108-100-0
69582|data|DCB "libncurses.so.5",0|108-105-98-110-99-117-114-115-101-115-46-115-111-46-53-0
69598|data|DCB "acs_map",0|97-99-115-95-109-97-112-0
69606|data|DCB "cbreak",0|99-98-114-101-97-107-0
69613|data|DCB "COLS",0|67-79-76-83-0
69618|data|DCB "reset_prog_mode",0|114-101-115-101-116-95-112-114-111-103-95-109-111-100-101-0
69634|data|DCB "def_prog_mode",0|100-101-102-95-112-114-111-103-95-109-111-100-101-0
69648|data|DCB "LINES",0|76-73-78-69-83-0
69654|data|DCB "curs_set",0|99-117-114-115-95-115-101-116-0
69663|data|DCB "wredrawln",0|119-114-101-100-114-97-119-108-110-0
69673|data|DCB "nonl",0|110-111-110-108-0
69678|data|DCB "noecho",0|110-111-101-99-104-111-0
69685|data|DCB "wgetch",0|119-103-101-116-99-104-0
69692|data|DCB "wchgat",0|119-99-104-103-97-116-0
69699|data|DCB "ungetch",0|117-110-103-101-116-99-104-0
69707|data|DCB "endwin",0|101-110-100-119-105-110-0
69714|data|DCB "wrefresh",0|119-114-101-102-114-101-115-104-0
69723|data|DCB "resize_term",0|114-101-115-105-122-101-95-116-101-114-109-0
69735|data|DCB "wclear",0|119-99-108-101-97-114-0
69742|data|DCB "newwin",0|110-101-119-119-105-110-0
69749|data|DCB "initscr",0|105-110-105-116-115-99-114-0
69757|data|DCB "whline",0|119-104-108-105-110-101-0
69764|data|DCB "libtinfo.so.5",0|108-105-98-116-105-110-102-111-46-115-111-46-53-0
69778|data|DCB "keypad",0|107-101-121-112-97-100-0
69785|data|DCB "intrflush",0|105-110-116-114-102-108-117-115-104-0
69795|data|DCB "nodelay",0|110-111-100-101-108-97-121-0
69803|data|DCB "libudev.so.1",0|108-105-98-117-100-101-118-46-115-111-46-49-0
69816|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
69826|data|DCB "socket",0|115-111-99-107-101-116-0
69833|data|DCB "fflush",0|102-102-108-117-115-104-0
69840|data|DCB "strcpy",0|115-116-114-99-112-121-0
69847|data|DCB "fopen",0|102-111-112-101-110-0
69853|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
69861|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
69869|data|DCB "connect",0|99-111-110-110-101-99-116-0
69877|data|DCB "puts",0|112-117-116-115-0
69882|data|DCB "fork",0|102-111-114-107-0
69887|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
69904|data|DCB "mkdir",0|109-107-100-105-114-0
69910|data|DCB "realloc",0|114-101-97-108-108-111-99-0
69918|data|DCB "abort",0|97-98-111-114-116-0
69924|data|DCB "strlen",0|115-116-114-108-101-110-0
69931|data|DCB "memset",0|109-101-109-115-101-116-0
69938|data|DCB "rmdir",0|114-109-100-105-114-0
69944|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
69961|data|DCB "read",0|114-101-97-100-0
69966|data|DCB "dup2",0|100-117-112-50-0
69971|data|DCB "poll",0|112-111-108-108-0
69976|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
69990|data|DCB "memcpy",0|109-101-109-99-112-121-0
69997|data|DCB "__vsnprintf_chk",0|95-95-118-115-110-112-114-105-110-116-102-95-99-104-107-0
70013|data|DCB "malloc",0|109-97-108-108-111-99-0
70020|data|DCB "raise",0|114-97-105-115-101-0
70026|data|DCB "optarg",0|111-112-116-97-114-103-0
70033|data|DCB "stderr",0|115-116-100-101-114-114-0
70040|data|DCB "ioctl",0|105-111-99-116-108-0
70046|data|DCB "alarm",0|97-108-97-114-109-0
70052|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
70064|data|DCB "execvp",0|101-120-101-99-118-112-0
70071|data|DCB "fileno",0|102-105-108-101-110-111-0
70078|data|DCB "fwrite",0|102-119-114-105-116-101-0
70085|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
70095|data|DCB "waitpid",0|119-97-105-116-112-105-100-0
70103|data|DCB "close",0|99-108-111-115-101-0
70109|data|DCB "strchr",0|115-116-114-99-104-114-0
70116|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
70131|data|DCB "sleep",0|115-108-101-101-112-0
70137|data|DCB "__xstat",0|95-95-120-115-116-97-116-0
70145|data|DCB "memmove",0|109-101-109-109-111-118-101-0
70153|data|DCB "strcmp",0|115-116-114-99-109-112-0
70160|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
70169|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
70187|data|DCB "free",0|102-114-101-101-0
70192|data|DCB "__cxa_atexit",0|95-95-99-120-97-95-97-116-101-120-105-116-0
70205|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
70225|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
70243|data|DCB "_edata",0|95-101-100-97-116-97-0
70250|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
70262|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
70276|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
70288|data|DCB "__end__",0|95-95-101-110-100-95-95-0
70296|data|DCB "_end",0|95-101-110-100-0
70301|data|DCB "cui_boot_editor_run",0|99-117-105-95-98-111-111-116-95-101-100-105-116-111-114-95-114-117-110-0
70321|data|DCB "pb_system_apps",0|112-98-95-115-121-115-116-101-109-95-97-112-112-115-0
70336|data|DCB "nc_atexit",0|110-99-95-97-116-101-120-105-116-0
70346|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
70356|data|DCW 0|0-0
70358|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
70360|data|DCW 0; local  symbol: acs_map|0-0
70362|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
70364|data|DCW 0; local  symbol: __gmon_start__|0-0
70366|data|DCW 0; local  symbol: COLS|0-0
70368|data|DCW 0; local  symbol: stdscr|0-0
70370|data|DCW 0; local  symbol: LINES|0-0
70372|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
70374|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
70376|data|DCW 2; strcmp@@GLIBC_2.4|2-0
70378|data|DCW 0; local  symbol: waddnstr|0-0
70380|data|DCW 2; write@@GLIBC_2.4|2-0
70382|data|DCW 0; local  symbol: keypad|0-0
70384|data|DCW 0; local  symbol: reset_prog_mode|0-0
70386|data|DCW 0; local  symbol: set_field_status|0-0
70388|data|DCW 2; fflush@@GLIBC_2.4|2-0
70390|data|DCW 2; __cxa_atexit@@GLIBC_2.4|2-0
70392|data|DCW 0; local  symbol: free_item|0-0
70394|data|DCW 1; global symbol: __bss_start__|1-0
70396|data|DCW 2; strcpy@@GLIBC_2.4|2-0
70398|data|DCW 2; strncmp@@GLIBC_2.4|2-0
70400|data|DCW 0; local  symbol: new_menu|0-0
70402|data|DCW 0; local  symbol: current_item|0-0
70404|data|DCW 2; __xstat@@GLIBC_2.4|2-0
70406|data|DCW 2; strerror@@GLIBC_2.4|2-0
70408|data|DCW 0; local  symbol: item_userptr|0-0
70410|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
70412|data|DCW 0; local  symbol: nodelay|0-0
70414|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
70416|data|DCW 0; local  symbol: field_opts_off|0-0
70418|data|DCW 1; global symbol: _bss_end__|1-0
70420|data|DCW 0; local  symbol: curs_set|0-0
70422|data|DCW 0; local  symbol: nonl|0-0
70424|data|DCW 0; local  symbol: field_buffer|0-0
70426|data|DCW 0; local  symbol: set_item_userptr|0-0
70428|data|DCW 2; sleep@@GLIBC_2.4|2-0
70430|data|DCW 2; realloc@@GLIBC_2.4|2-0
70432|data|DCW 2; exit@@GLIBC_2.4|2-0
70434|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
70436|data|DCW 0; local  symbol: new_form|0-0
70438|data|DCW 2; fopen@@GLIBC_2.4|2-0
70440|data|DCW 0; local  symbol: wrefresh|0-0
70442|data|DCW 2; strlen@@GLIBC_2.4|2-0
70444|data|DCW 0; local  symbol: wclear|0-0
70446|data|DCW 0; local  symbol: cbreak|0-0
70448|data|DCW 1; global symbol: _edata|1-0
70450|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
70452|data|DCW 0; local  symbol: free_field|0-0
70454|data|DCW 2; abort@@GLIBC_2.4|2-0
70456|data|DCW 2; strchr@@GLIBC_2.4|2-0
70458|data|DCW 2; close@@GLIBC_2.4|2-0
70460|data|DCW 2; read@@GLIBC_2.4|2-0
70462|data|DCW 0; local  symbol: post_menu|0-0
70464|data|DCW 2; strrchr@@GLIBC_2.4|2-0
70466|data|DCW 2; fwrite@@GLIBC_2.4|2-0
70468|data|DCW 1; global symbol: __end__|1-0
70470|data|DCW 2; connect@@GLIBC_2.4|2-0
70472|data|DCW 2; stderr@@GLIBC_2.4|2-0
70474|data|DCW 2; sigaction@@GLIBC_2.4|2-0
70476|data|DCW 2; ioctl@@GLIBC_2.4|2-0
70478|data|DCW 0; local  symbol: set_menu_win|0-0
70480|data|DCW 0; local  symbol: set_menu_mark|0-0
70482|data|DCW 1; global symbol: _fini|1-0
70484|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
70486|data|DCW 0; local  symbol: newwin|0-0
70488|data|DCW 0; local  symbol: set_form_win|0-0
70490|data|DCW 1; global symbol: _init|1-0
70492|data|DCW 1; global symbol: cui_boot_editor_run|1-0
70494|data|DCW 0; local  symbol: whline|0-0
70496|data|DCW 0; local  symbol: new_item|0-0
70498|data|DCW 1; global symbol: nc_atexit|1-0
70500|data|DCW 2; poll@@GLIBC_2.4|2-0
70502|data|DCW 0; local  symbol: set_menu_sub|0-0
70504|data|DCW 0; local  symbol: ungetch|0-0
70506|data|DCW 2; raise@@GLIBC_2.4|2-0
70508|data|DCW 0; local  symbol: intrflush|0-0
70510|data|DCW 0; local  symbol: set_form_sub|0-0
70512|data|DCW 0; local  symbol: def_prog_mode|0-0
70514|data|DCW 0; local  symbol: post_form|0-0
70516|data|DCW 1; global symbol: __bss_start|1-0
70518|data|DCW 0; local  symbol: unpost_menu|0-0
70520|data|DCW 2; optarg@@GLIBC_2.4|2-0
70522|data|DCW 0; local  symbol: set_menu_items|0-0
70524|data|DCW 2; memmove@@GLIBC_2.4|2-0
70526|data|DCW 0; local  symbol: set_current_item|0-0
70528|data|DCW 1; global symbol: _end|1-0
70530|data|DCW 0; local  symbol: endwin|0-0
70532|data|DCW 0; local  symbol: set_field_buffer|0-0
70534|data|DCW 0; local  symbol: new_field|0-0
70536|data|DCW 2; puts@@GLIBC_2.4|2-0
70538|data|DCW 0; local  symbol: wmove|0-0
70540|data|DCW 0; local  symbol: form_driver|0-0
70542|data|DCW 0; local  symbol: resize_term|0-0
70544|data|DCW 2; fork@@GLIBC_2.4|2-0
70546|data|DCW 0; local  symbol: item_count|0-0
70548|data|DCW 0; local  symbol: unpost_form|0-0
70550|data|DCW 0; local  symbol: menu_driver|0-0
70552|data|DCW 0; local  symbol: set_max_field|0-0
70554|data|DCW 2; memset@@GLIBC_2.4|2-0
70556|data|DCW 2; __vsnprintf_chk@@GLIBC_2.4|2-0
70558|data|DCW 1; global symbol: __bss_end__|1-0
70560|data|DCW 0; local  symbol: noecho|0-0
70562|data|DCW 0; local  symbol: initscr|0-0
70564|data|DCW 0; local  symbol: free_menu|0-0
70566|data|DCW 2; dup2@@GLIBC_2.4|2-0
70568|data|DCW 2; waitpid@@GLIBC_2.4|2-0
70570|data|DCW 2; fileno@@GLIBC_2.4|2-0
70572|data|DCW 0; local  symbol: derwin|0-0
70574|data|DCW 0; local  symbol: wchgat|0-0
70576|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
70578|data|DCW 2; free@@GLIBC_2.4|2-0
70580|data|DCW 2; execvp@@GLIBC_2.4|2-0
70582|data|DCW 2; open@@GLIBC_2.4|2-0
70584|data|DCW 0; local  symbol: wgetch|0-0
70586|data|DCW 0; local  symbol: delwin|0-0
70588|data|DCW 0; local  symbol: menu_opts_off|0-0
70590|data|DCW 0; local  symbol: wredrawln|0-0
70592|data|DCW 2; memcpy@@GLIBC_2.4|2-0
70594|data|DCW 2; rmdir@@GLIBC_2.4|2-0
70596|data|DCW 1; global symbol: pb_system_apps|1-0
70598|data|DCW 0; local  symbol: set_field_back|0-0
70600|data|DCW 2; alarm@@GLIBC_2.4|2-0
70602|data|DCW 0; local  symbol: free_form|0-0
70604|data|DCW 2; malloc@@GLIBC_2.4|2-0
70606|data|DCW 2; socket@@GLIBC_2.4|2-0
70608|data|DCW 0; local  symbol: current_field|0-0
70610|data|DCW 2; mkdir@@GLIBC_2.4|2-0
70612|data|DCW 0; local  symbol: set_menu_format|0-0
70614|data|DCW 0|0-0
70616|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_10DB4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-137-4-0-0-16-0-0-0-32-0-0-0
70632|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_10DB4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-22-5-0-0-0-0-0-0
70648|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_10DB4, 0x10, 0>; "libc.so.6"|1-0-1-0-4-3-0-0-16-0-0-0-0-0-0-0
70664|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_10DB4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-22-5-0-0-0-0-0-0
70680|data|Elf32_Rel <0x271B8, 0x215>; R_ARM_GLOB_DAT acs_map|184-113-2-0-21-2-0-0
70688|data|Elf32_Rel <0x271BC, 0x315>; R_ARM_GLOB_DAT __stack_chk_guard|188-113-2-0-21-3-0-0
70696|data|Elf32_Rel <0x271C4, 0x3A15>; R_ARM_GLOB_DAT stderr|196-113-2-0-21-58-0-0
70704|data|Elf32_Rel <0x271C8, 0x415>; R_ARM_GLOB_DAT __gmon_start__|200-113-2-0-21-4-0-0
70712|data|Elf32_Rel <0x271D0, 0x515>; R_ARM_GLOB_DAT COLS|208-113-2-0-21-5-0-0
70720|data|Elf32_Rel <0x271D4, 0x615>; R_ARM_GLOB_DAT stdscr|212-113-2-0-21-6-0-0
70728|data|Elf32_Rel <0x271D8, 0x715>; R_ARM_GLOB_DAT LINES|216-113-2-0-21-7-0-0
70736|data|Elf32_Rel <0x27200, 0x3A14>; R_ARM_COPY stderr|0-114-2-0-20-58-0-0
70744|data|Elf32_Rel <0x27204, 0x5214>; R_ARM_COPY optarg|4-114-2-0-20-82-0-0
70752|data|Elf32_Rel <0x2700C, 0x4B16>; R_ARM_JUMP_SLOT raise|12-112-2-0-22-75-0-0
70760|data|Elf32_Rel <0x27010, 0x3D16>; R_ARM_JUMP_SLOT set_menu_win|16-112-2-0-22-61-0-0
70768|data|Elf32_Rel <0x27014, 0xA16>; R_ARM_JUMP_SLOT strcmp|20-112-2-0-22-10-0-0
70776|data|Elf32_Rel <0x27018, 0x2916>; R_ARM_JUMP_SLOT fopen|24-112-2-0-22-41-0-0
70784|data|Elf32_Rel <0x2701C, 0x5516>; R_ARM_JUMP_SLOT set_current_item|28-112-2-0-22-85-0-0
70792|data|Elf32_Rel <0x27020, 0x3416>; R_ARM_JUMP_SLOT read|32-112-2-0-22-52-0-0
70800|data|Elf32_Rel <0x27024, 0x1016>; R_ARM_JUMP_SLOT fflush|36-112-2-0-22-16-0-0
70808|data|Elf32_Rel <0x27028, 0x4516>; R_ARM_JUMP_SLOT whline|40-112-2-0-22-69-0-0
70816|data|Elf32_Rel <0x2702C, 0x5416>; R_ARM_JUMP_SLOT memmove|44-112-2-0-22-84-0-0
70824|data|Elf32_Rel <0x27030, 0x6F16>; R_ARM_JUMP_SLOT free|48-112-2-0-22-111-0-0
70832|data|Elf32_Rel <0x27034, 0x1716>; R_ARM_JUMP_SLOT current_item|52-112-2-0-22-23-0-0
70840|data|Elf32_Rel <0x27038, 0x2D16>; R_ARM_JUMP_SLOT cbreak|56-112-2-0-22-45-0-0
70848|data|Elf32_Rel <0x2703C, 0x6416>; R_ARM_JUMP_SLOT __vsnprintf_chk|60-112-2-0-22-100-0-0
70856|data|Elf32_Rel <0x27040, 0x7616>; R_ARM_JUMP_SLOT memcpy|64-112-2-0-22-118-0-0
70864|data|Elf32_Rel <0x27044, 0x7016>; R_ARM_JUMP_SLOT execvp|68-112-2-0-22-112-0-0
70872|data|Elf32_Rel <0x27048, 0xB16>; R_ARM_JUMP_SLOT waddnstr|72-112-2-0-22-11-0-0
70880|data|Elf32_Rel <0x2704C, 0x5F16>; R_ARM_JUMP_SLOT item_count|76-112-2-0-22-95-0-0
70888|data|Elf32_Rel <0x27050, 0x7716>; R_ARM_JUMP_SLOT rmdir|80-112-2-0-22-119-0-0
70896|data|Elf32_Rel <0x27054, 0x5116>; R_ARM_JUMP_SLOT unpost_menu|84-112-2-0-22-81-0-0
70904|data|Elf32_Rel <0x27058, 0x6116>; R_ARM_JUMP_SLOT menu_driver|88-112-2-0-22-97-0-0
70912|data|Elf32_Rel <0x2705C, 0x2416>; R_ARM_JUMP_SLOT sleep|92-112-2-0-22-36-0-0
70920|data|Elf32_Rel <0x27060, 0x3516>; R_ARM_JUMP_SLOT post_menu|96-112-2-0-22-53-0-0
70928|data|Elf32_Rel <0x27064, 0x4016>; R_ARM_JUMP_SLOT __stack_chk_fail|100-112-2-0-22-64-0-0
70936|data|Elf32_Rel <0x27068, 0x5916>; R_ARM_JUMP_SLOT new_field|104-112-2-0-22-89-0-0
70944|data|Elf32_Rel <0x2706C, 0x7A16>; R_ARM_JUMP_SLOT alarm|108-112-2-0-22-122-0-0
70952|data|Elf32_Rel <0x27070, 0x2A16>; R_ARM_JUMP_SLOT wrefresh|112-112-2-0-22-42-0-0
70960|data|Elf32_Rel <0x27074, 0x6916>; R_ARM_JUMP_SLOT dup2|116-112-2-0-22-105-0-0
70968|data|Elf32_Rel <0x27078, 0xD16>; R_ARM_JUMP_SLOT keypad|120-112-2-0-22-13-0-0
70976|data|Elf32_Rel <0x2707C, 0x6716>; R_ARM_JUMP_SLOT initscr|124-112-2-0-22-103-0-0
70984|data|Elf32_Rel <0x27080, 0x2516>; R_ARM_JUMP_SLOT realloc|128-112-2-0-22-37-0-0
70992|data|Elf32_Rel <0x27084, 0x4C16>; R_ARM_JUMP_SLOT intrflush|132-112-2-0-22-76-0-0
71000|data|Elf32_Rel <0x27088, 0x4F16>; R_ARM_JUMP_SLOT post_form|136-112-2-0-22-79-0-0
71008|data|Elf32_Rel <0x2708C, 0x1816>; R_ARM_JUMP_SLOT __xstat|140-112-2-0-22-24-0-0
71016|data|Elf32_Rel <0x27090, 0x4816>; R_ARM_JUMP_SLOT poll|144-112-2-0-22-72-0-0
71024|data|Elf32_Rel <0x27094, 0x4116>; R_ARM_JUMP_SLOT newwin|148-112-2-0-22-65-0-0
71032|data|Elf32_Rel <0x27098, 0x3B16>; R_ARM_JUMP_SLOT sigaction|152-112-2-0-22-59-0-0
71040|data|Elf32_Rel <0x2709C, 0x1216>; R_ARM_JUMP_SLOT free_item|156-112-2-0-22-18-0-0
71048|data|Elf32_Rel <0x270A0, 0x3716>; R_ARM_JUMP_SLOT fwrite|160-112-2-0-22-55-0-0
71056|data|Elf32_Rel <0x270A4, 0x3C16>; R_ARM_JUMP_SLOT ioctl|164-112-2-0-22-60-0-0
71064|data|Elf32_Rel <0x270A8, 0x6A16>; R_ARM_JUMP_SLOT waitpid|168-112-2-0-22-106-0-0
71072|data|Elf32_Rel <0x270AC, 0x6816>; R_ARM_JUMP_SLOT free_menu|172-112-2-0-22-104-0-0
71080|data|Elf32_Rel <0x270B0, 0x1416>; R_ARM_JUMP_SLOT strcpy|176-112-2-0-22-20-0-0
71088|data|Elf32_Rel <0x270B4, 0x5C16>; R_ARM_JUMP_SLOT form_driver|180-112-2-0-22-92-0-0
71096|data|Elf32_Rel <0x270B8, 0x5816>; R_ARM_JUMP_SLOT set_field_buffer|184-112-2-0-22-88-0-0
71104|data|Elf32_Rel <0x270BC, 0x4916>; R_ARM_JUMP_SLOT set_menu_sub|188-112-2-0-22-73-0-0
71112|data|Elf32_Rel <0x270C0, 0x6216>; R_ARM_JUMP_SLOT set_max_field|192-112-2-0-22-98-0-0
71120|data|Elf32_Rel <0x270C4, 0x6D16>; R_ARM_JUMP_SLOT wchgat|196-112-2-0-22-109-0-0
71128|data|Elf32_Rel <0x270C8, 0x3E16>; R_ARM_JUMP_SLOT set_menu_mark|200-112-2-0-22-62-0-0
71136|data|Elf32_Rel <0x270CC, 0x5A16>; R_ARM_JUMP_SLOT puts|204-112-2-0-22-90-0-0
71144|data|Elf32_Rel <0x270D0, 0x7C16>; R_ARM_JUMP_SLOT malloc|208-112-2-0-22-124-0-0
71152|data|Elf32_Rel <0x270D4, 0x1D16>; R_ARM_JUMP_SLOT __libc_start_main|212-112-2-0-22-29-0-0
71160|data|Elf32_Rel <0x270D8, 0x1916>; R_ARM_JUMP_SLOT strerror|216-112-2-0-22-25-0-0
71168|data|Elf32_Rel <0x270DC, 0x7E16>; R_ARM_JUMP_SLOT current_field|220-112-2-0-22-126-0-0
71176|data|Elf32_Rel <0x270E0, 0x1B16>; R_ARM_JUMP_SLOT __vfprintf_chk|224-112-2-0-22-27-0-0
71184|data|Elf32_Rel <0x270E4, 0x2116>; R_ARM_JUMP_SLOT nonl|228-112-2-0-22-33-0-0
71192|data|Elf32_Rel <0x270E8, 0x416>; R_ARM_JUMP_SLOT __gmon_start__|232-112-2-0-22-4-0-0
71200|data|Elf32_Rel <0x270EC, 0x7116>; R_ARM_JUMP_SLOT open|236-112-2-0-22-113-0-0
71208|data|Elf32_Rel <0x270F0, 0x5D16>; R_ARM_JUMP_SLOT resize_term|240-112-2-0-22-93-0-0
71216|data|Elf32_Rel <0x270F4, 0x6E16>; R_ARM_JUMP_SLOT getopt_long|244-112-2-0-22-110-0-0
71224|data|Elf32_Rel <0x270F8, 0x7316>; R_ARM_JUMP_SLOT delwin|248-112-2-0-22-115-0-0
71232|data|Elf32_Rel <0x270FC, 0x7B16>; R_ARM_JUMP_SLOT free_form|252-112-2-0-22-123-0-0
71240|data|Elf32_Rel <0x27100, 0x2616>; R_ARM_JUMP_SLOT exit|0-113-2-0-22-38-0-0
71248|data|Elf32_Rel <0x27104, 0x2B16>; R_ARM_JUMP_SLOT strlen|4-113-2-0-22-43-0-0
71256|data|Elf32_Rel <0x27108, 0x1616>; R_ARM_JUMP_SLOT new_menu|8-113-2-0-22-22-0-0
71264|data|Elf32_Rel <0x2710C, 0x3216>; R_ARM_JUMP_SLOT strchr|12-113-2-0-22-50-0-0
71272|data|Elf32_Rel <0x27110, 0x6016>; R_ARM_JUMP_SLOT unpost_form|16-113-2-0-22-96-0-0
71280|data|Elf32_Rel <0x27114, 0x4216>; R_ARM_JUMP_SLOT set_form_win|20-113-2-0-22-66-0-0
71288|data|Elf32_Rel <0x27118, 0xE16>; R_ARM_JUMP_SLOT reset_prog_mode|24-113-2-0-22-14-0-0
71296|data|Elf32_Rel <0x2711C, 0x1C16>; R_ARM_JUMP_SLOT nodelay|28-113-2-0-22-28-0-0
71304|data|Elf32_Rel <0x27120, 0x2216>; R_ARM_JUMP_SLOT field_buffer|32-113-2-0-22-34-0-0
71312|data|Elf32_Rel <0x27124, 0x2716>; R_ARM_JUMP_SLOT __errno_location|36-113-2-0-22-39-0-0
71320|data|Elf32_Rel <0x27128, 0x1116>; R_ARM_JUMP_SLOT __cxa_atexit|40-113-2-0-22-17-0-0
71328|data|Elf32_Rel <0x2712C, 0x7F16>; R_ARM_JUMP_SLOT mkdir|44-113-2-0-22-127-0-0
71336|data|Elf32_Rel <0x27130, 0x6316>; R_ARM_JUMP_SLOT memset|48-113-2-0-22-99-0-0
71344|data|Elf32_Rel <0x27134, 0x4616>; R_ARM_JUMP_SLOT new_item|52-113-2-0-22-70-0-0
71352|data|Elf32_Rel <0x27138, 0x4A16>; R_ARM_JUMP_SLOT ungetch|56-113-2-0-22-74-0-0
71360|data|Elf32_Rel <0x2713C, 0xC16>; R_ARM_JUMP_SLOT write|60-113-2-0-22-12-0-0
71368|data|Elf32_Rel <0x27140, 0x6B16>; R_ARM_JUMP_SLOT fileno|64-113-2-0-22-107-0-0
71376|data|Elf32_Rel <0x27144, 0x4E16>; R_ARM_JUMP_SLOT def_prog_mode|68-113-2-0-22-78-0-0
71384|data|Elf32_Rel <0x27148, 0x2F16>; R_ARM_JUMP_SLOT __fprintf_chk|72-113-2-0-22-47-0-0
71392|data|Elf32_Rel <0x2714C, 0x3016>; R_ARM_JUMP_SLOT free_field|76-113-2-0-22-48-0-0
71400|data|Elf32_Rel <0x27150, 0x5716>; R_ARM_JUMP_SLOT endwin|80-113-2-0-22-87-0-0
71408|data|Elf32_Rel <0x27154, 0x7216>; R_ARM_JUMP_SLOT wgetch|84-113-2-0-22-114-0-0
71416|data|Elf32_Rel <0x27158, 0x5E16>; R_ARM_JUMP_SLOT fork|88-113-2-0-22-94-0-0
71424|data|Elf32_Rel <0x2715C, 0x2C16>; R_ARM_JUMP_SLOT wclear|92-113-2-0-22-44-0-0
71432|data|Elf32_Rel <0x27160, 0x3616>; R_ARM_JUMP_SLOT strrchr|96-113-2-0-22-54-0-0
71440|data|Elf32_Rel <0x27164, 0x1A16>; R_ARM_JUMP_SLOT item_userptr|100-113-2-0-22-26-0-0
71448|data|Elf32_Rel <0x27168, 0x8016>; R_ARM_JUMP_SLOT set_menu_format|104-113-2-0-22-128-0-0
71456|data|Elf32_Rel <0x2716C, 0x6616>; R_ARM_JUMP_SLOT noecho|108-113-2-0-22-102-0-0
71464|data|Elf32_Rel <0x27170, 0x7416>; R_ARM_JUMP_SLOT menu_opts_off|112-113-2-0-22-116-0-0
71472|data|Elf32_Rel <0x27174, 0x2816>; R_ARM_JUMP_SLOT new_form|116-113-2-0-22-40-0-0
71480|data|Elf32_Rel <0x27178, 0x7D16>; R_ARM_JUMP_SLOT socket|120-113-2-0-22-125-0-0
71488|data|Elf32_Rel <0x2717C, 0x4D16>; R_ARM_JUMP_SLOT set_form_sub|124-113-2-0-22-77-0-0
71496|data|Elf32_Rel <0x27180, 0x7916>; R_ARM_JUMP_SLOT set_field_back|128-113-2-0-22-121-0-0
71504|data|Elf32_Rel <0x27184, 0x5B16>; R_ARM_JUMP_SLOT wmove|132-113-2-0-22-91-0-0
71512|data|Elf32_Rel <0x27188, 0xF16>; R_ARM_JUMP_SLOT set_field_status|136-113-2-0-22-15-0-0
71520|data|Elf32_Rel <0x2718C, 0x2016>; R_ARM_JUMP_SLOT curs_set|140-113-2-0-22-32-0-0
71528|data|Elf32_Rel <0x27190, 0x1516>; R_ARM_JUMP_SLOT strncmp|144-113-2-0-22-21-0-0
71536|data|Elf32_Rel <0x27194, 0x3116>; R_ARM_JUMP_SLOT abort|148-113-2-0-22-49-0-0
71544|data|Elf32_Rel <0x27198, 0x2316>; R_ARM_JUMP_SLOT set_item_userptr|152-113-2-0-22-35-0-0
71552|data|Elf32_Rel <0x2719C, 0x3316>; R_ARM_JUMP_SLOT close|156-113-2-0-22-51-0-0
71560|data|Elf32_Rel <0x271A0, 0x1E16>; R_ARM_JUMP_SLOT field_opts_off|160-113-2-0-22-30-0-0
71568|data|Elf32_Rel <0x271A4, 0x3916>; R_ARM_JUMP_SLOT connect|164-113-2-0-22-57-0-0
71576|data|Elf32_Rel <0x271A8, 0x6C16>; R_ARM_JUMP_SLOT derwin|168-113-2-0-22-108-0-0
71584|data|Elf32_Rel <0x271AC, 0x7516>; R_ARM_JUMP_SLOT wredrawln|172-113-2-0-22-117-0-0
71592|data|Elf32_Rel <0x271B0, 0x5316>; R_ARM_JUMP_SLOT set_menu_items|176-113-2-0-22-83-0-0
71600|code|PUSH            {R3,LR}; _init|8-64-45-233
71604|code|BL              sub_11FE4|10-2-0-235
71608|code|POP             {R3,PC}|8-128-189-232
71612|code|PUSH            {LR}|4-224-45-229
71616|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x117CC)|4-224-159-229
71620|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
71624|code|LDR             PC, [LR,#8]!|8-240-190-229
71628|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x117CC|52-88-1-0
71632|code|ADR             R12, 0x117D8|0-198-143-226
71636|code|ADD             R12, R12, #0x15000|21-202-140-226
71640|code|LDR             PC, [R12,#(raise_ptr - 0x267D8)]!; __imp_raise|52-248-188-229
71644|code|ADR             R12, 0x117E4|0-198-143-226
71648|code|ADD             R12, R12, #0x15000|21-202-140-226
71652|code|LDR             PC, [R12,#(set_menu_win_ptr - 0x267E4)]!; __imp_set_menu_win|44-248-188-229
71656|code|ADR             R12, 0x117F0|0-198-143-226
71660|code|ADD             R12, R12, #0x15000|21-202-140-226
71664|code|LDR             PC, [R12,#(strcmp_ptr - 0x267F0)]!; __imp_strcmp|36-248-188-229
71668|code|ADR             R12, 0x117FC|0-198-143-226
71672|code|ADD             R12, R12, #0x15000|21-202-140-226
71676|code|LDR             PC, [R12,#(fopen_ptr - 0x267FC)]!; __imp_fopen|28-248-188-229
71680|code|ADR             R12, 0x11808|0-198-143-226
71684|code|ADD             R12, R12, #0x15000|21-202-140-226
71688|code|LDR             PC, [R12,#(set_current_item_ptr - 0x26808)]!; __imp_set_current_item|20-248-188-229
71692|code|ADR             R12, 0x11814|0-198-143-226
71696|code|ADD             R12, R12, #0x15000|21-202-140-226
71700|code|LDR             PC, [R12,#(read_ptr - 0x26814)]!; __imp_read|12-248-188-229
71704|code|BX              PC|120-71
71706|data|ALIGN 4|192-70
71708|code|ADR             R12, 0x11824|0-198-143-226
71712|code|ADD             R12, R12, #0x15000|21-202-140-226
71716|code|LDR             PC, [R12,#(fflush_ptr - 0x26824)]!; __imp_fflush|0-248-188-229
71720|code|BX              PC|120-71
71722|data|ALIGN 4|192-70
71724|code|ADR             R12, 0x11834|0-198-143-226
71728|code|ADD             R12, R12, #0x15000|21-202-140-226
71732|code|LDR             PC, [R12,#(whline_ptr - 0x26834)]!; __imp_whline|244-247-188-229
71736|code|ADR             R12, 0x11840|0-198-143-226
71740|code|ADD             R12, R12, #0x15000|21-202-140-226
71744|code|LDR             PC, [R12,#(memmove_ptr - 0x26840)]!; __imp_memmove|236-247-188-229
71748|code|ADR             R12, 0x1184C|0-198-143-226
71752|code|ADD             R12, R12, #0x15000|21-202-140-226
71756|code|LDR             PC, [R12,#(free_ptr - 0x2684C)]!; __imp_free|228-247-188-229
71760|code|ADR             R12, 0x11858|0-198-143-226
71764|code|ADD             R12, R12, #0x15000|21-202-140-226
71768|code|LDR             PC, [R12,#(current_item_ptr - 0x26858)]!; __imp_current_item|220-247-188-229
71772|code|ADR             R12, 0x11864|0-198-143-226
71776|code|ADD             R12, R12, #0x15000|21-202-140-226
71780|code|LDR             PC, [R12,#(cbreak_ptr - 0x26864)]!; __imp_cbreak|212-247-188-229
71784|code|ADR             R12, 0x11870|0-198-143-226
71788|code|ADD             R12, R12, #0x15000|21-202-140-226
71792|code|LDR             PC, [R12,#(__vsnprintf_chk_ptr - 0x26870)]!; __imp___vsnprintf_chk|204-247-188-229
71796|code|ADR             R12, 0x1187C|0-198-143-226
71800|code|ADD             R12, R12, #0x15000|21-202-140-226
71804|code|LDR             PC, [R12,#(memcpy_ptr - 0x2687C)]!; __imp_memcpy|196-247-188-229
71808|code|ADR             R12, 0x11888|0-198-143-226
71812|code|ADD             R12, R12, #0x15000|21-202-140-226
71816|code|LDR             PC, [R12,#(execvp_ptr - 0x26888)]!; __imp_execvp|188-247-188-229
71820|code|BX              PC|120-71
71822|data|ALIGN 4|192-70
71824|code|ADR             R12, 0x11898|0-198-143-226
71828|code|ADD             R12, R12, #0x15000|21-202-140-226
71832|code|LDR             PC, [R12,#(waddnstr_ptr - 0x26898)]!; __imp_waddnstr|176-247-188-229
71836|code|ADR             R12, 0x118A4|0-198-143-226
71840|code|ADD             R12, R12, #0x15000|21-202-140-226
71844|code|LDR             PC, [R12,#(item_count_ptr - 0x268A4)]!; __imp_item_count|168-247-188-229
71848|code|ADR             R12, 0x118B0|0-198-143-226
71852|code|ADD             R12, R12, #0x15000|21-202-140-226
71856|code|LDR             PC, [R12,#(rmdir_ptr - 0x268B0)]!; __imp_rmdir|160-247-188-229
71860|code|BX              PC|120-71
71862|data|ALIGN 4|192-70
71864|code|ADR             R12, 0x118C0|0-198-143-226
71868|code|ADD             R12, R12, #0x15000|21-202-140-226
71872|code|LDR             PC, [R12,#(unpost_menu_ptr - 0x268C0)]!; __imp_unpost_menu|148-247-188-229
71876|code|BX              PC|120-71
71878|data|ALIGN 4|192-70
71880|code|ADR             R12, 0x118D0|0-198-143-226
71884|code|ADD             R12, R12, #0x15000|21-202-140-226
71888|code|LDR             PC, [R12,#(menu_driver_ptr - 0x268D0)]!; __imp_menu_driver|136-247-188-229
71892|code|ADR             R12, 0x118DC|0-198-143-226
71896|code|ADD             R12, R12, #0x15000|21-202-140-226
71900|code|LDR             PC, [R12,#(sleep_ptr - 0x268DC)]!; __imp_sleep|128-247-188-229
71904|code|ADR             R12, 0x118E8|0-198-143-226
71908|code|ADD             R12, R12, #0x15000|21-202-140-226
71912|code|LDR             PC, [R12,#(post_menu_ptr - 0x268E8)]!; __imp_post_menu|120-247-188-229
71916|code|ADR             R12, 0x118F4|0-198-143-226
71920|code|ADD             R12, R12, #0x15000|21-202-140-226
71924|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x268F4)]!; __imp___stack_chk_fail|112-247-188-229
71928|code|ADR             R12, 0x11900|0-198-143-226
71932|code|ADD             R12, R12, #0x15000|21-202-140-226
71936|code|LDR             PC, [R12,#(new_field_ptr - 0x26900)]!; __imp_new_field|104-247-188-229
71940|code|BX              PC|120-71
71942|data|ALIGN 4|192-70
71944|code|ADR             R12, 0x11910|0-198-143-226
71948|code|ADD             R12, R12, #0x15000|21-202-140-226
71952|code|LDR             PC, [R12,#(alarm_ptr - 0x26910)]!; __imp_alarm|92-247-188-229
71956|code|BX              PC|120-71
71958|data|ALIGN 4|192-70
71960|code|ADR             R12, 0x11920|0-198-143-226
71964|code|ADD             R12, R12, #0x15000|21-202-140-226
71968|code|LDR             PC, [R12,#(wrefresh_ptr - 0x26920)]!; __imp_wrefresh|80-247-188-229
71972|code|ADR             R12, 0x1192C|0-198-143-226
71976|code|ADD             R12, R12, #0x15000|21-202-140-226
71980|code|LDR             PC, [R12,#(dup2_ptr - 0x2692C)]!; __imp_dup2|72-247-188-229
71984|code|ADR             R12, 0x11938|0-198-143-226
71988|code|ADD             R12, R12, #0x15000|21-202-140-226
71992|code|LDR             PC, [R12,#(keypad_ptr - 0x26938)]!; __imp_keypad|64-247-188-229
71996|code|ADR             R12, 0x11944|0-198-143-226
72000|code|ADD             R12, R12, #0x15000|21-202-140-226
72004|code|LDR             PC, [R12,#(initscr_ptr - 0x26944)]!; __imp_initscr|56-247-188-229
72008|code|ADR             R12, 0x11950|0-198-143-226
72012|code|ADD             R12, R12, #0x15000|21-202-140-226
72016|code|LDR             PC, [R12,#(realloc_ptr - 0x26950)]!; __imp_realloc|48-247-188-229
72020|code|ADR             R12, 0x1195C|0-198-143-226
72024|code|ADD             R12, R12, #0x15000|21-202-140-226
72028|code|LDR             PC, [R12,#(intrflush_ptr - 0x2695C)]!; __imp_intrflush|40-247-188-229
72032|code|ADR             R12, 0x11968|0-198-143-226
72036|code|ADD             R12, R12, #0x15000|21-202-140-226
72040|code|LDR             PC, [R12,#(post_form_ptr - 0x26968)]!; __imp_post_form|32-247-188-229
72044|code|ADR             R12, 0x11974|0-198-143-226
72048|code|ADD             R12, R12, #0x15000|21-202-140-226
72052|code|LDR             PC, [R12,#(__xstat_ptr - 0x26974)]!; __imp___xstat|24-247-188-229
72056|code|ADR             R12, 0x11980|0-198-143-226
72060|code|ADD             R12, R12, #0x15000|21-202-140-226
72064|code|LDR             PC, [R12,#(poll_ptr - 0x26980)]!; __imp_poll|16-247-188-229
72068|code|ADR             R12, 0x1198C|0-198-143-226
72072|code|ADD             R12, R12, #0x15000|21-202-140-226
72076|code|LDR             PC, [R12,#(newwin_ptr - 0x2698C)]!; __imp_newwin|8-247-188-229
72080|code|ADR             R12, 0x11998|0-198-143-226
72084|code|ADD             R12, R12, #0x15000|21-202-140-226
72088|code|LDR             PC, [R12,#(sigaction_ptr - 0x26998)]!; __imp_sigaction|0-247-188-229
72092|code|ADR             R12, 0x119A4|0-198-143-226
72096|code|ADD             R12, R12, #0x15000|21-202-140-226
72100|code|LDR             PC, [R12,#(free_item_ptr - 0x269A4)]!; __imp_free_item|248-246-188-229
72104|code|ADR             R12, 0x119B0|0-198-143-226
72108|code|ADD             R12, R12, #0x15000|21-202-140-226
72112|code|LDR             PC, [R12,#(fwrite_ptr - 0x269B0)]!; __imp_fwrite|240-246-188-229
72116|code|ADR             R12, 0x119BC|0-198-143-226
72120|code|ADD             R12, R12, #0x15000|21-202-140-226
72124|code|LDR             PC, [R12,#(ioctl_ptr - 0x269BC)]!; __imp_ioctl|232-246-188-229
72128|code|ADR             R12, 0x119C8|0-198-143-226
72132|code|ADD             R12, R12, #0x15000|21-202-140-226
72136|code|LDR             PC, [R12,#(waitpid_ptr - 0x269C8)]!; __imp_waitpid|224-246-188-229
72140|code|ADR             R12, 0x119D4|0-198-143-226
72144|code|ADD             R12, R12, #0x15000|21-202-140-226
72148|code|LDR             PC, [R12,#(free_menu_ptr - 0x269D4)]!; __imp_free_menu|216-246-188-229
72152|code|ADR             R12, 0x119E0|0-198-143-226
72156|code|ADD             R12, R12, #0x15000|21-202-140-226
72160|code|LDR             PC, [R12,#(strcpy_ptr - 0x269E0)]!; __imp_strcpy|208-246-188-229
72164|code|ADR             R12, 0x119EC|0-198-143-226
72168|code|ADD             R12, R12, #0x15000|21-202-140-226
72172|code|LDR             PC, [R12,#(form_driver_ptr - 0x269EC)]!; __imp_form_driver|200-246-188-229
72176|code|ADR             R12, 0x119F8|0-198-143-226
72180|code|ADD             R12, R12, #0x15000|21-202-140-226
72184|code|LDR             PC, [R12,#(set_field_buffer_ptr - 0x269F8)]!; __imp_set_field_buffer|192-246-188-229
72188|code|ADR             R12, 0x11A04|0-198-143-226
72192|code|ADD             R12, R12, #0x15000|21-202-140-226
72196|code|LDR             PC, [R12,#(set_menu_sub_ptr - 0x26A04)]!; __imp_set_menu_sub|184-246-188-229
72200|code|ADR             R12, 0x11A10|0-198-143-226
72204|code|ADD             R12, R12, #0x15000|21-202-140-226
72208|code|LDR             PC, [R12,#(set_max_field_ptr - 0x26A10)]!; __imp_set_max_field|176-246-188-229
72212|code|ADR             R12, 0x11A1C|0-198-143-226
72216|code|ADD             R12, R12, #0x15000|21-202-140-226
72220|code|LDR             PC, [R12,#(wchgat_ptr - 0x26A1C)]!; __imp_wchgat|168-246-188-229
72224|code|ADR             R12, 0x11A28|0-198-143-226
72228|code|ADD             R12, R12, #0x15000|21-202-140-226
72232|code|LDR             PC, [R12,#(set_menu_mark_ptr - 0x26A28)]!; __imp_set_menu_mark|160-246-188-229
72236|code|ADR             R12, 0x11A34|0-198-143-226
72240|code|ADD             R12, R12, #0x15000|21-202-140-226
72244|code|LDR             PC, [R12,#(puts_ptr - 0x26A34)]!; __imp_puts|152-246-188-229
72248|code|ADR             R12, 0x11A40|0-198-143-226
72252|code|ADD             R12, R12, #0x15000|21-202-140-226
72256|code|LDR             PC, [R12,#(malloc_ptr - 0x26A40)]!; __imp_malloc|144-246-188-229
72260|code|ADR             R12, 0x11A4C|0-198-143-226
72264|code|ADD             R12, R12, #0x15000|21-202-140-226
72268|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x26A4C)]!; __imp___libc_start_main|136-246-188-229
72272|code|ADR             R12, 0x11A58|0-198-143-226
72276|code|ADD             R12, R12, #0x15000|21-202-140-226
72280|code|LDR             PC, [R12,#(strerror_ptr - 0x26A58)]!; __imp_strerror|128-246-188-229
72284|code|ADR             R12, 0x11A64|0-198-143-226
72288|code|ADD             R12, R12, #0x15000|21-202-140-226
72292|code|LDR             PC, [R12,#(current_field_ptr - 0x26A64)]!; __imp_current_field|120-246-188-229
72296|code|ADR             R12, 0x11A70|0-198-143-226
72300|code|ADD             R12, R12, #0x15000|21-202-140-226
72304|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x26A70)]!; __imp___vfprintf_chk|112-246-188-229
72308|code|ADR             R12, 0x11A7C|0-198-143-226
72312|code|ADD             R12, R12, #0x15000|21-202-140-226
72316|code|LDR             PC, [R12,#(nonl_ptr - 0x26A7C)]!; __imp_nonl|104-246-188-229
72320|code|ADR             R12, 0x11A88|0-198-143-226
72324|code|ADD             R12, R12, #0x15000|21-202-140-226
72328|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x26A88)]!; __imp___gmon_start__|96-246-188-229
72332|code|ADR             R12, 0x11A94|0-198-143-226
72336|code|ADD             R12, R12, #0x15000|21-202-140-226
72340|code|LDR             PC, [R12,#(open_ptr - 0x26A94)]!; __imp_open|88-246-188-229
72344|code|ADR             R12, 0x11AA0|0-198-143-226
72348|code|ADD             R12, R12, #0x15000|21-202-140-226
72352|code|LDR             PC, [R12,#(resize_term_ptr - 0x26AA0)]!; __imp_resize_term|80-246-188-229
72356|code|ADR             R12, 0x11AAC|0-198-143-226
72360|code|ADD             R12, R12, #0x15000|21-202-140-226
72364|code|LDR             PC, [R12,#(getopt_long_ptr - 0x26AAC)]!; __imp_getopt_long|72-246-188-229
72368|code|ADR             R12, 0x11AB8|0-198-143-226
72372|code|ADD             R12, R12, #0x15000|21-202-140-226
72376|code|LDR             PC, [R12,#(delwin_ptr - 0x26AB8)]!; __imp_delwin|64-246-188-229
72380|code|ADR             R12, 0x11AC4|0-198-143-226
72384|code|ADD             R12, R12, #0x15000|21-202-140-226
72388|code|LDR             PC, [R12,#(free_form_ptr - 0x26AC4)]!; __imp_free_form|56-246-188-229
72392|code|ADR             R12, 0x11AD0|0-198-143-226
72396|code|ADD             R12, R12, #0x15000|21-202-140-226
72400|code|LDR             PC, [R12,#(exit_ptr - 0x26AD0)]!; __imp_exit|48-246-188-229
72404|code|ADR             R12, 0x11ADC|0-198-143-226
72408|code|ADD             R12, R12, #0x15000|21-202-140-226
72412|code|LDR             PC, [R12,#(strlen_ptr - 0x26ADC)]!; __imp_strlen|40-246-188-229
72416|code|ADR             R12, 0x11AE8|0-198-143-226
72420|code|ADD             R12, R12, #0x15000|21-202-140-226
72424|code|LDR             PC, [R12,#(new_menu_ptr - 0x26AE8)]!; __imp_new_menu|32-246-188-229
72428|code|ADR             R12, 0x11AF4|0-198-143-226
72432|code|ADD             R12, R12, #0x15000|21-202-140-226
72436|code|LDR             PC, [R12,#(strchr_ptr - 0x26AF4)]!; __imp_strchr|24-246-188-229
72440|code|BX              PC|120-71
72442|data|ALIGN 4|192-70
72444|code|ADR             R12, 0x11B04|0-198-143-226
72448|code|ADD             R12, R12, #0x15000|21-202-140-226
72452|code|LDR             PC, [R12,#(unpost_form_ptr - 0x26B04)]!; __imp_unpost_form|12-246-188-229
72456|code|ADR             R12, 0x11B10|0-198-143-226
72460|code|ADD             R12, R12, #0x15000|21-202-140-226
72464|code|LDR             PC, [R12,#(set_form_win_ptr - 0x26B10)]!; __imp_set_form_win|4-246-188-229
72468|code|ADR             R12, 0x11B1C|0-198-143-226
72472|code|ADD             R12, R12, #0x15000|21-202-140-226
72476|code|LDR             PC, [R12,#(reset_prog_mode_ptr - 0x26B1C)]!; __imp_reset_prog_mode|252-245-188-229
72480|code|ADR             R12, 0x11B28|0-198-143-226
72484|code|ADD             R12, R12, #0x15000|21-202-140-226
72488|code|LDR             PC, [R12,#(nodelay_ptr - 0x26B28)]!; __imp_nodelay|244-245-188-229
72492|code|ADR             R12, 0x11B34|0-198-143-226
72496|code|ADD             R12, R12, #0x15000|21-202-140-226
72500|code|LDR             PC, [R12,#(field_buffer_ptr - 0x26B34)]!; __imp_field_buffer|236-245-188-229
72504|code|ADR             R12, 0x11B40|0-198-143-226
72508|code|ADD             R12, R12, #0x15000|21-202-140-226
72512|code|LDR             PC, [R12,#(__errno_location_ptr - 0x26B40)]!; __imp___errno_location|228-245-188-229
72516|code|BX              PC|120-71
72518|data|ALIGN 4|192-70
72520|code|ADR             R12, 0x11B50|0-198-143-226
72524|code|ADD             R12, R12, #0x15000|21-202-140-226
72528|code|LDR             PC, [R12,#(__cxa_atexit_ptr - 0x26B50)]!; __imp___cxa_atexit|216-245-188-229
72532|code|ADR             R12, 0x11B5C|0-198-143-226
72536|code|ADD             R12, R12, #0x15000|21-202-140-226
72540|code|LDR             PC, [R12,#(mkdir_ptr - 0x26B5C)]!; __imp_mkdir|208-245-188-229
72544|code|ADR             R12, 0x11B68|0-198-143-226
72548|code|ADD             R12, R12, #0x15000|21-202-140-226
72552|code|LDR             PC, [R12,#(memset_ptr - 0x26B68)]!; __imp_memset|200-245-188-229
72556|code|ADR             R12, 0x11B74|0-198-143-226
72560|code|ADD             R12, R12, #0x15000|21-202-140-226
72564|code|LDR             PC, [R12,#(new_item_ptr - 0x26B74)]!; __imp_new_item|192-245-188-229
72568|code|ADR             R12, 0x11B80|0-198-143-226
72572|code|ADD             R12, R12, #0x15000|21-202-140-226
72576|code|LDR             PC, [R12,#(ungetch_ptr - 0x26B80)]!; __imp_ungetch|184-245-188-229
72580|code|ADR             R12, 0x11B8C|0-198-143-226
72584|code|ADD             R12, R12, #0x15000|21-202-140-226
72588|code|LDR             PC, [R12,#(write_ptr - 0x26B8C)]!; __imp_write|176-245-188-229
72592|code|ADR             R12, 0x11B98|0-198-143-226
72596|code|ADD             R12, R12, #0x15000|21-202-140-226
72600|code|LDR             PC, [R12,#(fileno_ptr - 0x26B98)]!; __imp_fileno|168-245-188-229
72604|code|ADR             R12, 0x11BA4|0-198-143-226
72608|code|ADD             R12, R12, #0x15000|21-202-140-226
72612|code|LDR             PC, [R12,#(def_prog_mode_ptr - 0x26BA4)]!; __imp_def_prog_mode|160-245-188-229
72616|code|ADR             R12, 0x11BB0|0-198-143-226
72620|code|ADD             R12, R12, #0x15000|21-202-140-226
72624|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x26BB0)]!; __imp___fprintf_chk|152-245-188-229
72628|code|ADR             R12, 0x11BBC|0-198-143-226
72632|code|ADD             R12, R12, #0x15000|21-202-140-226
72636|code|LDR             PC, [R12,#(free_field_ptr - 0x26BBC)]!; __imp_free_field|144-245-188-229
72640|code|BX              PC|120-71
72642|data|ALIGN 4|192-70
72644|code|ADR             R12, 0x11BCC|0-198-143-226
72648|code|ADD             R12, R12, #0x15000|21-202-140-226
72652|code|LDR             PC, [R12,#(endwin_ptr - 0x26BCC)]!; __imp_endwin|132-245-188-229
72656|code|ADR             R12, 0x11BD8|0-198-143-226
72660|code|ADD             R12, R12, #0x15000|21-202-140-226
72664|code|LDR             PC, [R12,#(wgetch_ptr - 0x26BD8)]!; __imp_wgetch|124-245-188-229
72668|code|ADR             R12, 0x11BE4|0-198-143-226
72672|code|ADD             R12, R12, #0x15000|21-202-140-226
72676|code|LDR             PC, [R12,#(fork_ptr - 0x26BE4)]!; __imp_fork|116-245-188-229
72680|code|ADR             R12, 0x11BF0|0-198-143-226
72684|code|ADD             R12, R12, #0x15000|21-202-140-226
72688|code|LDR             PC, [R12,#(wclear_ptr - 0x26BF0)]!; __imp_wclear|108-245-188-229
72692|code|ADR             R12, 0x11BFC|0-198-143-226
72696|code|ADD             R12, R12, #0x15000|21-202-140-226
72700|code|LDR             PC, [R12,#(strrchr_ptr - 0x26BFC)]!; __imp_strrchr|100-245-188-229
72704|code|BX              PC|120-71
72706|data|ALIGN 4|192-70
72708|code|ADR             R12, 0x11C0C|0-198-143-226
72712|code|ADD             R12, R12, #0x15000|21-202-140-226
72716|code|LDR             PC, [R12,#(item_userptr_ptr - 0x26C0C)]!; __imp_item_userptr|88-245-188-229
72720|code|ADR             R12, 0x11C18|0-198-143-226
72724|code|ADD             R12, R12, #0x15000|21-202-140-226
72728|code|LDR             PC, [R12,#(set_menu_format_ptr - 0x26C18)]!; __imp_set_menu_format|80-245-188-229
72732|code|ADR             R12, 0x11C24|0-198-143-226
72736|code|ADD             R12, R12, #0x15000|21-202-140-226
72740|code|LDR             PC, [R12,#(noecho_ptr - 0x26C24)]!; __imp_noecho|72-245-188-229
72744|code|ADR             R12, 0x11C30|0-198-143-226
72748|code|ADD             R12, R12, #0x15000|21-202-140-226
72752|code|LDR             PC, [R12,#(menu_opts_off_ptr - 0x26C30)]!; __imp_menu_opts_off|64-245-188-229
72756|code|ADR             R12, 0x11C3C|0-198-143-226
72760|code|ADD             R12, R12, #0x15000|21-202-140-226
72764|code|LDR             PC, [R12,#(new_form_ptr - 0x26C3C)]!; __imp_new_form|56-245-188-229
72768|code|ADR             R12, 0x11C48|0-198-143-226
72772|code|ADD             R12, R12, #0x15000|21-202-140-226
72776|code|LDR             PC, [R12,#(socket_ptr - 0x26C48)]!; __imp_socket|48-245-188-229
72780|code|ADR             R12, 0x11C54|0-198-143-226
72784|code|ADD             R12, R12, #0x15000|21-202-140-226
72788|code|LDR             PC, [R12,#(set_form_sub_ptr - 0x26C54)]!; __imp_set_form_sub|40-245-188-229
72792|code|ADR             R12, 0x11C60|0-198-143-226
72796|code|ADD             R12, R12, #0x15000|21-202-140-226
72800|code|LDR             PC, [R12,#(set_field_back_ptr - 0x26C60)]!; __imp_set_field_back|32-245-188-229
72804|code|ADR             R12, 0x11C6C|0-198-143-226
72808|code|ADD             R12, R12, #0x15000|21-202-140-226
72812|code|LDR             PC, [R12,#(wmove_ptr - 0x26C6C)]!; __imp_wmove|24-245-188-229
72816|code|ADR             R12, 0x11C78|0-198-143-226
72820|code|ADD             R12, R12, #0x15000|21-202-140-226
72824|code|LDR             PC, [R12,#(set_field_status_ptr - 0x26C78)]!; __imp_set_field_status|16-245-188-229
72828|code|ADR             R12, 0x11C84|0-198-143-226
72832|code|ADD             R12, R12, #0x15000|21-202-140-226
72836|code|LDR             PC, [R12,#(curs_set_ptr - 0x26C84)]!; __imp_curs_set|8-245-188-229
72840|code|ADR             R12, 0x11C90|0-198-143-226
72844|code|ADD             R12, R12, #0x15000|21-202-140-226
72848|code|LDR             PC, [R12,#(strncmp_ptr - 0x26C90)]!; __imp_strncmp|0-245-188-229
72852|code|ADR             R12, 0x11C9C|0-198-143-226
72856|code|ADD             R12, R12, #0x15000|21-202-140-226
72860|code|LDR             PC, [R12,#(abort_ptr - 0x26C9C)]!; __imp_abort|248-244-188-229
72864|code|ADR             R12, 0x11CA8|0-198-143-226
72868|code|ADD             R12, R12, #0x15000|21-202-140-226
72872|code|LDR             PC, [R12,#(set_item_userptr_ptr - 0x26CA8)]!; __imp_set_item_userptr|240-244-188-229
72876|code|ADR             R12, 0x11CB4|0-198-143-226
72880|code|ADD             R12, R12, #0x15000|21-202-140-226
72884|code|LDR             PC, [R12,#(close_ptr - 0x26CB4)]!; __imp_close|232-244-188-229
72888|code|ADR             R12, 0x11CC0|0-198-143-226
72892|code|ADD             R12, R12, #0x15000|21-202-140-226
72896|code|LDR             PC, [R12,#(field_opts_off_ptr - 0x26CC0)]!; __imp_field_opts_off|224-244-188-229
72900|code|ADR             R12, 0x11CCC|0-198-143-226
72904|code|ADD             R12, R12, #0x15000|21-202-140-226
72908|code|LDR             PC, [R12,#(connect_ptr - 0x26CCC)]!; __imp_connect|216-244-188-229
72912|code|ADR             R12, 0x11CD8|0-198-143-226
72916|code|ADD             R12, R12, #0x15000|21-202-140-226
72920|code|LDR             PC, [R12,#(derwin_ptr - 0x26CD8)]!; __imp_derwin|208-244-188-229
72924|code|ADR             R12, 0x11CE4|0-198-143-226
72928|code|ADD             R12, R12, #0x15000|21-202-140-226
72932|code|LDR             PC, [R12,#(wredrawln_ptr - 0x26CE4)]!; __imp_wredrawln|200-244-188-229
72936|code|ADR             R12, 0x11CF0|0-198-143-226
72940|code|ADD             R12, R12, #0x15000|21-202-140-226
72944|code|LDR             PC, [R12,#(set_menu_items_ptr - 0x26CF0)]!; __imp_set_menu_items|192-244-188-229
72948|data|ALIGN 8|0-0-0-0
72952|code|SVCMI           0xF0E92D|45-233-240-79
72956|data|DCD 0xF6452400, 0xF2474840, 0xB0832904, 0x460E4607, 0x46A346A2|0-36-69-246-64-72-71-242-4-41-131-176-7-70-14-70-162-70-163-70-37-70-192-242-1-8-192-242-2-9-69-246-212-50-0-149-192-242-1-2-56-70-2-241-8-3-49-70-255-247-186-238-160-241-86-3-1-48-45-208-29-43-27-216-223-232-3-240-18-26-26-26-26-26-26-26-26-26-26-26-26-26-26-26-26-26-15-26-26-26-23-26-26-26-26-26-26-20-79-240-1-11-218-231-1-36-216-231-79-240-1-10-213-231-217-248-0-128-210-231-69-246-100-64-192-242-1-0-255-247-86-238-69-246-152-64-192-242-1-0-255-247-80-238-1-32-3-176-189-232-240-143-187-241-0-15-64-240-214-128-0-44-64-240-225-128-152-248-0-48-45-43-64-240-176-128-152-248-1-48-0-43-64-240-171-128-71-242-0-35-192-242-2-3-24-104-2-240-34-248-71-242-12-36-69-246-24-80-192-242-2-4-192-242-1-0-1-240-226-255-33-70-66-242-149-3-0-34-192-242-1-3-14-32-65-248-8-63-255-247-210-237-4-241-8-1-0-34-5-70-1-32-255-247-202-237-4-241-8-1-0-34-5-68-2-32-255-247-196-237-4-241-8-1-0-34-5-68-15-32-255-247-188-237-4-241-8-1-0-34-5-68-28-32-255-247-182-237-69-25-64-240-133-128-82-70-32-70-41-70-0-240-99-252-96-96-0-40-167-208-66-242-253-66-1-33-192-242-1-2-1-240-57-250-6-70-0-40-0-240-164-128-66-242-77-99-69-246-84-81-192-242-1-3-192-242-1-1-67-100-3-240-240-250-69-246-120-81-192-242-1-1-112-96-48-70-3-240-236-249-69-246-160-81-192-242-1-1-176-96-48-70-3-240-228-249-240-96-48-70-1-240-68-249-69-246-184-83-192-242-1-3-42-70-1-70-48-70-1-240-67-249-66-246-201-115-192-242-1-3-7-70-48-70-123-97-1-240-74-250-0-40-93-209-2-33-240-106-255-247-180-238-70-242-200-33-192-242-1-1-240-106-255-247-170-237-121-104-240-106-255-247-150-236-96-104-38-96-20-48-1-240-106-254-33-104-0-34-96-104-0-240-229-252-5-70-32-104-1-240-95-250-96-104-2-240-100-254-69-246-232-80-192-242-1-0-1-240-76-255-40-28-24-191-1-32-64-231-69-246-8-81-64-70-192-242-1-1-255-247-110-236-0-40-127-244-80-175-69-246-12-80-69-246-8-81-192-242-1-1-192-242-1-0-255-247-96-236-68-231-69-246-48-80-28-73-192-242-1-0-1-240-44-255-1-32-34-231-69-246-100-64-192-242-1-0-255-247-108-237-69-246-152-64-192-242-1-0-255-247-102-237-0-32-20-231-69-246-100-64-192-242-1-0-255-247-94-237-0-32-12-231-255-247-224-237-0-104-255-247-106-237-12-73-160-34-3-70-69-246-200-80-192-242-1-0-1-240-6-255-48-70-2-240-21-254-46-70-157-231-69-246-72-80-4-73-192-242-1-0-1-240-250-254-149-231-0-191-44-92-1-0-52-92-1-0
73652|code|MOV.W           R11, #0|79-240-0-11
73656|code|MOV.W           LR, #0|79-240-0-14
73660|code|POP             {R1}; argc|2-188
73662|code|MOV             R2, SP; ubp_av|106-70
73664|code|PUSH            {R2}; stack_end|4-180
73666|code|PUSH            {R0}; rtld_fini|1-180
73668|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
73672|code|PUSH.W          {R12}; fini|77-248-4-205
73676|code|LDR             R0, =(loc_11CF8+1); main|3-72
73678|code|LDR             R3, =(sub_15B64+1); init|4-75
73680|code|BLX             __libc_start_main|255-247-56-237
73684|code|BLX             abort|255-247-94-238
73688|data|DCD nullsub_1+1|165-91-1-0
73692|data|DCD loc_11CF8+1|249-28-1-0
73696|data|DCD sub_15B64+1|101-91-1-0
73700|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x11FF4)|20-48-159-229
73704|code|LDR             R2, =(__gmon_start___ptr_0 - 0x27000)|20-32-159-229
73708|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
73712|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
73716|code|CMP             R2, #0|0-0-82-227
73720|code|BXEQ            LR|30-255-47-1
73724|code|B               __gmon_start__|159-254-255-234
73728|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11FF4|12-80-1-0
73732|data|DCD __gmon_start___ptr_0 - 0x27000|200-1-0-0
73736|code|LDR             R3, =unk_271FF|7-75
73738|code|MOV             R0, #0x271FC|71-242-252-16-192-242-2-0
73746|code|SUBS            R3, R3, R0|27-26
73748|code|CMP             R3, #6|6-43
73750|code|BLS             locret_12024|5-217
73752|code|MOV             R3, #0|64-242-0-3-192-242-0-3
73760|code|CBZ             R3, locret_12024|3-177
73762|code|BX              R3|24-71
73764|code|BX              LR|112-71
73766|data|ALIGN 4|0-191
73768|data|DCD unk_271FF|255-113-2-0
73772|code|MOVW            R3, #0x71FC|71-242-252-19
73776|code|MOVW            R0, #0x71FC|71-242-252-16
73780|code|MOVT.W          R3, #2|192-242-2-3
73784|code|MOVT.W          R0, #2|192-242-2-0
73788|code|SUBS            R1, R3, R0|25-26
73790|code|ASRS            R1, R1, #2|137-16
73792|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
73796|code|ASRS            R1, R1, #1|73-16
73798|code|BEQ             locret_12054|5-208
73800|code|MOV             R3, #0|64-242-0-3-192-242-0-3
73808|code|CBZ             R3, locret_12054|3-177
73810|code|BX              R3|24-71
73812|code|BX              LR|112-71
73814|data|ALIGN 4|0-191
73816|code|PUSH            {R4,LR}|16-181
73818|code|MOV             R4, #0x27208|71-242-8-36-192-242-2-4
73826|code|LDRB            R3, [R4]|35-120
73828|code|CBNZ            R3, locret_1206E|27-185
73830|code|BL              sub_12008|255-247-207-255
73834|code|MOVS            R3, #1|1-35
73836|code|STRB            R3, [R4]|35-112
73838|code|POP             {R4,PC}|16-189
73840|code|MOVW            R0, #0x6EC0|70-246-192-96
73844|code|PUSH            {R3,LR}|8-181
73846|code|MOVT.W          R0, #2|192-242-2-0
73850|code|LDR             R3, [R0]|3-104
73852|code|CBNZ            R3, loc_12084|19-185
73854|code|POP.W           {R3,LR}|189-232-8-64
73858|code|B               sub_1202C|211-231
73860|code|MOV             R3, #0|64-242-0-3-192-242-0-3
73868|code|CMP             R3, #0|0-43
73870|code|BEQ             loc_1207E|246-208
73872|code|BLX             R3|152-71
73874|code|B               loc_1207E|244-231
73876|code|CMP             R0, #0xE|14-40
73878|code|BEQ             loc_120BC|17-208
73880|code|CMP             R0, #0x1C|28-40
73882|code|BNE             loc_120AC|7-209
73884|code|MOV             R3, #0x2720C|71-242-12-35-192-242-2-3
73892|code|LDR             R0, [R3,#(dword_27210 - 0x2720C)]|88-104
73894|code|CBZ             R0, locret_120CE|144-177
73896|code|B.W             loc_124DC|0-240-24-186
73900|code|MOV             R3, #0x2720C|71-242-12-35-192-242-2-3
73908|code|LDR             R0, [R3,#(dword_27210 - 0x2720C)]|88-104
73910|code|CBZ             R0, locret_120CE|80-177
73912|code|B.W             loc_124BC|0-240-0-186
73916|code|MOV             R3, #0x2720C|71-242-12-35-192-242-2-3
73924|code|LDR             R0, [R3,#(dword_27210 - 0x2720C)]|88-104
73926|code|CBZ             R0, locret_120CE|16-177
73928|code|ADDS            R0, #0x14|20-48
73930|code|B.W             loc_13C98|1-240-229-189
73934|code|BX              LR|112-71
73936|code|MOV             R3, R0|3-70
73938|code|LDR             R0, [R1,#0xC]|200-104
73940|code|LDR             R2, [R3]|26-104
73942|code|CMP             R2, #1|1-42
73944|code|BEQ             loc_120E8|6-208
73946|code|LDR             R2, =(aInfo - 0x120E0); "Info"|5-74
73948|code|ADD             R2, PC; "Info"|122-68
73950|code|LDR             R1, =(aSS - 0x120E6); "%s: %s"|5-73
73952|code|LDR             R3, [R3,#4]|91-104
73954|code|ADD             R1, PC; "%s: %s"|121-68
73956|code|B.W             sub_13598|1-240-88-186
73960|code|LDR             R2, =(aError - 0x120EE); "Error"|3-74
73962|code|ADD             R2, PC; "Error"|122-68
73964|code|B               loc_120DE|247-231
73966|data|ALIGN 0x10|0-191
73968|data|DCD aInfo - 0x120E0; "Info"|216-61-0-0
73972|data|DCD aSS - 0x120E6; "%s: %s"|218-61-0-0
73976|data|DCD aError - 0x120EE; "Error"|194-61-0-0
73980|code|PUSH            {R4,LR}|16-181
73982|code|LDR.W           R0, [R0,#-4]|80-248-4-12
73986|code|BL              sub_12FD4|0-240-103-255
73990|code|POP.W           {R4,LR}|189-232-16-64
73994|code|LDR             R3, [R0,#0x14]|67-105
73996|code|BX              R3|24-71
73998|data|ALIGN 0x10|0-191
74000|code|PUSH            {R4-R6,LR}|112-181
74002|code|LDR             R5, =(aCuiBoot - 0x1211C); "cui_boot"|29-77
74004|code|LDR             R4, [R0,#0xC]|196-104
74006|code|LDR             R3, [R0,#8]|131-104
74008|code|ADD             R5, PC; "cui_boot"|125-68
74010|code|LDR             R0, =(aSS_0 - 0x12124); "%s: %s\n"|28-72
74012|code|MOV             R1, R5|41-70
74014|code|LDR             R2, [R4]|34-104
74016|code|ADD             R0, PC; "%s: %s\n"|120-68
74018|code|LDR             R6, [R3,#0x18]|158-105
74020|code|BL              sub_13D9C|1-240-58-254
74024|code|LDR             R3, [R4,#0xC]|227-104
74026|code|CBZ             R3, loc_12178|43-179
74028|code|LDR             R1, =(aBootingS - 0x12134); "Booting %s..."|24-73
74030|code|LDR             R2, [R4]|34-104
74032|code|ADD             R1, PC; "Booting %s..."|121-68
74034|code|LDR             R0, [R6,#0xC]|240-104
74036|code|BL              sub_13598|1-240-48-250
74040|code|BLX             def_prog_mode|255-247-48-237
74044|code|LDR             R2, [R4,#0xC]|226-104
74046|code|LDR             R3, [R4,#4]|99-104
74048|code|MOVS            R1, #0|0-33
74050|code|LDR             R0, [R6,#0x2C]|240-106
74052|code|BL              sub_13A18|1-240-104-252
74056|code|MOV             R5, R0|5-70
74058|code|BLX             reset_prog_mode|255-247-228-236
74062|code|LDR             R3, [R6,#0xC]|243-104
74064|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
74068|code|LDR             R0, [R3,#0x10]; WINDOW *|24-105
74070|code|CBZ             R0, loc_1215E|16-177
74072|code|LDRSH.W         R2, [R0,#4]|176-249-4-32
74076|code|ADDS            R2, #1; int|1-50
74078|code|MOVS            R1, #0; int|0-33
74080|code|BLX             wredrawln|255-247-188-237
74084|code|CBZ             R5, loc_12174|53-177
74086|code|LDR             R3, [R4,#4]|99-104
74088|code|LDR             R1, =(aFailedBootS - 0x12170); "Failed: boot %s"|10-73
74090|code|LDR             R0, [R6,#0xC]|240-104
74092|code|ADD             R1, PC; "Failed: boot %s"|121-68
74094|code|LDR             R2, [R3]|26-104
74096|code|BL              sub_13598|1-240-18-250
74100|code|MOVS            R0, #0|0-32
74102|code|POP             {R4-R6,PC}|112-189
74104|code|LDR             R0, =(aSMissingOpt - 0x12180); "%s: missing opt?\n"|7-72
74106|code|MOV             R1, R5|41-70
74108|code|ADD             R0, PC; "%s: missing opt?\n"|120-68
74110|code|BL              sub_13D9C|1-240-13-254
74114|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
74118|code|POP             {R4-R6,PC}|112-189
74120|data|DCD aCuiBoot - 0x1211C; "cui_boot"|252-60-0-0
74124|data|DCD aSS_0 - 0x12124; "%s: %s\n"|164-61-0-0
74128|data|DCD aBootingS - 0x12134; "Booting %s..."|176-61-0-0
74132|data|DCD aFailedBootS - 0x12170; "Failed: boot %s"|132-61-0-0
74136|data|DCD aSMissingOpt - 0x12180; "%s: missing opt?\n"|80-61-0-0
74140|code|PUSH.W          {R4-R8,LR}|45-233-240-65
74144|code|MOV             R2, R0|2-70
74146|code|LDR             R4, =(aCuiBoot - 0x121AE); "cui_boot"|46-76
74148|code|MOV             R6, R0|6-70
74150|code|LDR             R3, [R0]|3-104
74152|code|MOV             R5, R1|13-70
74154|code|ADD             R4, PC; "cui_boot"|124-68
74156|code|LDR             R0, =(aSPS - 0x121B4); "%s: %p %s\n"|44-72
74158|code|MOV             R1, R4|33-70
74160|code|ADD             R0, PC; "%s: %p %s\n"|120-68
74162|code|ADDS            R1, #0xC|12-49
74164|code|BL              sub_13D9C|1-240-242-253
74168|code|LDR             R3, [R5,#0xC]|235-104
74170|code|LDR             R0, [R5,#0x10]|40-105
74172|code|CMP             R3, R0|131-66
74174|code|BEQ             loc_12252|72-208
74176|code|LDR             R0, [R0,#0x2C]|192-106
74178|code|MOVS            R1, #0|0-33
74180|code|BLX             set_menu_items|255-247-144-237
74184|code|CBNZ            R0, loc_12220|80-187
74186|code|LDR             R3, [R6,#0x18]|179-105
74188|code|ADDS            R6, #0x14|20-54
74190|code|CMP             R6, R3|158-66
74192|code|SUB.W           R4, R3, #0x20 ; ' '|163-241-32-4
74196|code|BEQ             loc_12200|20-208
74198|code|CBZ             R4, loc_12200|156-177
74200|code|ADD.W           R7, R5, #0x14|5-241-20-7
74204|code|B               loc_121E0|0-224
74206|code|CBZ             R4, loc_12200|124-177
74208|code|LDR             R1, [R4,#0x28]|161-106
74210|code|LDR             R0, [R5,#0x10]|40-105
74212|code|LDR.W           R8, [R1,#0xC]|209-248-12-128
74216|code|BL              sub_1323C|1-240-40-248
74220|code|LDR             R3, [R5,#0x38]|171-107
74222|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
74226|code|CMP             R2, R3|154-66
74228|code|BEQ             loc_12218|16-208
74230|code|LDR             R3, [R4,#0x24]|99-106
74232|code|CMP             R6, R3|158-66
74234|code|SUB.W           R4, R3, #0x20 ; ' '|163-241-32-4
74238|code|BNE             loc_121DE|238-209
74240|code|LDR             R3, [R5,#0x10]|43-105
74242|code|LDR             R0, [R3,#0x2C]|216-106
74244|code|LDR             R1, [R3,#0x30]|25-107
74246|code|BLX             set_menu_items|255-247-112-237
74250|code|CBNZ            R0, loc_12232|144-185
74252|code|LDR             R0, [R5,#0xC]|232-104
74254|code|LDR             R3, [R5,#0x10]|43-105
74256|code|CMP             R0, R3|152-66
74258|code|BEQ             loc_1224A|26-208
74260|code|POP.W           {R4-R8,PC}|189-232-240-129
74264|code|MOV             R0, R7|56-70
74266|code|BL              sub_13BB4|1-240-203-252
74270|code|B               loc_121F6|234-231
74272|code|LDR             R1, =(aCuiBoot - 0x1222A); "cui_boot"|16-73
74274|code|MOV             R2, R0|2-70
74276|code|LDR             R0, =(aSSetMenuItemsF - 0x1222C); "%s: set_menu_items failed: %d\n"|16-72
74278|code|ADD             R1, PC; "cui_boot"|121-68
74280|code|ADD             R0, PC; "%s: set_menu_items failed: %d\n"|120-68
74282|code|ADDS            R1, #0xC|12-49
74284|code|BL              sub_13D9C|1-240-182-253
74288|code|B               loc_121CA|203-231
74290|code|LDR             R1, =(aCuiBoot - 0x1223C); "cui_boot"|14-73
74292|code|MOV             R2, R0|2-70
74294|code|LDR             R0, =(aSSetMenuItemsF - 0x1223E); "%s: set_menu_items failed: %d\n"|14-72
74296|code|ADD             R1, PC; "cui_boot"|121-68
74298|code|ADD             R0, PC; "%s: set_menu_items failed: %d\n"|120-68
74300|code|ADDS            R1, #0xC|12-49
74302|code|BL              sub_13D9C|1-240-173-253
74306|code|LDR             R0, [R5,#0xC]|232-104
74308|code|LDR             R3, [R5,#0x10]|43-105
74310|code|CMP             R0, R3|152-66
74312|code|BNE             locret_12214|228-209
74314|code|LDR             R3, [R0,#0x1C]|195-105
74316|code|POP.W           {R4-R8,LR}|189-232-240-65
74320|code|BX              R3|24-71
74322|code|LDR             R3, [R0,#0x20]|3-106
74324|code|BLX             R3|152-71
74326|code|LDR             R0, [R5,#0x10]|40-105
74328|code|B               loc_121C0|178-231
74330|data|ALIGN 4|0-191
74332|data|DCD aCuiBoot - 0x121AE; "cui_boot"|106-60-0-0
74336|data|DCD aSPS - 0x121B4; "%s: %p %s\n"|80-61-0-0
74340|data|DCD aCuiBoot - 0x1222A; "cui_boot"|238-59-0-0
74344|data|DCD aSSetMenuItemsF - 0x1222C; "%s: set_menu_items failed: %d\n"|228-60-0-0
74348|data|DCD aCuiBoot - 0x1223C; "cui_boot"|220-59-0-0
74352|data|DCD aSSetMenuItemsF - 0x1223E; "%s: set_menu_items failed: %d\n"|210-60-0-0
74356|code|PUSH.W          {R3-R11,LR}|45-233-248-79
74360|code|MOV             R9, R0|129-70
74362|code|LDR             R4, =(aCuiBoot - 0x12286); "cui_boot"|98-76
74364|code|MOV             R5, R2|21-70
74366|code|LDR             R0, =(aSPS - 0x1228A); "%s: %p %s\n"|98-72
74368|code|MOV             R2, R1|10-70
74370|code|ADD             R4, PC; "cui_boot"|124-68
74372|code|LDR             R3, [R1,#4]|75-104
74374|code|ADD             R0, PC; "%s: %p %s\n"|120-68
74376|code|MOV             R6, R1|14-70
74378|code|MOV             R1, R4|33-70
74380|code|ADDS            R1, #0x20 ; ' '|32-49
74382|code|BL              sub_13D9C|1-240-133-253
74386|code|LDR             R3, [R5,#0x10]|43-105
74388|code|LDR.W           R11, =(_GLOBAL_OFFSET_TABLE_ - 0x1229E)|223-248-116-177
74392|code|LDR             R0, [R3,#0x2C]|216-106
74394|code|ADD             R11, PC; _GLOBAL_OFFSET_TABLE_|251-68
74396|code|BLX             current_item|255-247-216-234
74400|code|LDR             R3, [R5,#0xC]|235-104
74402|code|MOV             R8, R0|128-70
74404|code|LDR             R0, [R5,#0x10]|40-105
74406|code|CMP             R3, R0|131-66
74408|code|BEQ.W           loc_123FC|0-240-168-128
74412|code|LDR             R0, [R0,#0x2C]|192-106
74414|code|MOVS            R1, #0|0-33
74416|code|BLX             set_menu_items|255-247-26-237
74420|code|CMP             R0, #0|0-40
74422|code|BNE.W           loc_123C0|64-240-131-128
74426|code|MOVS            R1, #1|1-33
74428|code|LDR             R0, [R5,#0x10]|40-105
74430|code|BL              sub_131C0|0-240-127-255
74434|code|LDR             R4, =(sub_12110+1 - 0x122C8)|83-76
74436|code|ADD             R4, PC; sub_12110|124-68
74438|code|MOV             R10, R0|130-70
74440|code|LDR             R0, [R5,#0x10]|40-105
74442|code|BL              sub_13118|0-240-37-255
74446|code|LDR             R3, =(cui_boot_editor_run_ptr - 0x27000)|81-75
74448|code|LDR             R2, =(aStructCuiOptDa - 0x122D8); "struct cui_opt_data"|81-74
74450|code|MOVS            R1, #0x14|20-33
74452|code|ADD             R2, PC; "struct cui_opt_data"|122-68
74454|code|STR             R0, [R6,#0x28]|176-98
74456|code|MOV             R7, R0|7-70
74458|code|LDR.W           R3, [R11,R3]; cui_boot_editor_run|91-248-3-48
74462|code|STR             R4, [R0,#0x14]|68-97
74464|code|STR             R3, [R0,#0x10]|3-97
74466|code|BL              sub_14A14|2-240-151-251
74470|code|MOV             R4, R0|4-70
74472|code|STR             R0, [R7,#0xC]|248-96
74474|code|STR.W           R9, [R0,#8]|192-248-8-144
74478|code|STR             R6, [R0,#0xC]|198-96
74480|code|LDR.W           R0, [R9,#4]|217-248-4-0
74484|code|LDR             R1, [R6,#8]|177-104
74486|code|BL              sub_13D74|1-240-61-253
74490|code|LDR             R3, [R6,#8]|179-104
74492|code|LDR             R2, =(aStructPbBootDa - 0x12304); "struct pb_boot_data"|71-74
74494|code|MOVS            R1, #0xC|12-33
74496|code|ADD             R2, PC; "struct pb_boot_data"|122-68
74498|code|STR             R3, [R4]|35-96
74500|code|STR             R0, [R4,#0x10]|32-97
74502|code|MOV             R0, R7|56-70
74504|code|BL              sub_14A14|2-240-132-251
74508|code|LDR             R1, [R6,#0x14]|113-105
74510|code|STR             R0, [R4,#4]|96-96
74512|code|MOV             R9, R0|129-70
74514|code|BL              sub_15250|2-240-157-255
74518|code|LDR.W           R11, [R4,#4]|212-248-4-176
74522|code|LDR             R1, [R6,#0x18]|177-105
74524|code|STR.W           R0, [R9]|201-248-0-0
74528|code|MOV             R0, R11|88-70
74530|code|BL              sub_15250|2-240-149-255
74534|code|LDR.W           R9, [R4,#4]|212-248-4-144
74538|code|LDR             R1, [R6,#0x1C]|241-105
74540|code|STR.W           R0, [R11,#4]|203-248-4-0
74544|code|MOV             R0, R9|72-70
74546|code|BL              sub_15250|2-240-141-255
74550|code|LDR             R3, [R4]|35-104
74552|code|MOV             R2, R10|82-70
74554|code|MOV             R1, R7|57-70
74556|code|STR.W           R0, [R9,#8]|201-248-8-0
74560|code|LDR             R0, [R5,#0x10]|40-105
74562|code|BL              sub_13128|0-240-241-254
74566|code|LDR             R3, =(aCuiBoot - 0x1234E); "cui_boot"|54-75
74568|code|LDR             R0, =(aSAddingOptS - 0x12352); "%s: adding opt '%s'\n"|54-72
74570|code|ADD             R3, PC; "cui_boot"|123-68
74572|code|LDR             R2, [R4]|34-104
74574|code|ADD             R0, PC; "%s: adding opt '%s'\n"|120-68
74576|code|MOV             R1, R3|25-70
74578|code|ADDS            R1, #0x20 ; ' '|32-49
74580|code|BL              sub_13D9C|1-240-34-253
74584|code|LDR             R3, [R4,#4]|99-104
74586|code|LDR             R0, =(aImageS - 0x12362); "   image  '%s'\n"|51-72
74588|code|LDR             R1, [R3]|25-104
74590|code|ADD             R0, PC; "   image  '%s'\n"|120-68
74592|code|BL              sub_13D9C|1-240-28-253
74596|code|LDR             R3, [R4,#4]|99-104
74598|code|LDR             R0, =(aInitrdS - 0x1236E); "   initrd '%s'\n"|49-72
74600|code|LDR             R1, [R3,#4]|89-104
74602|code|ADD             R0, PC; "   initrd '%s'\n"|120-68
74604|code|BL              sub_13D9C|1-240-22-253
74608|code|LDR             R3, [R4,#4]|99-104
74610|code|LDR             R0, =(aArgsS - 0x1237A); "   args   '%s'\n"|47-72
74612|code|LDR             R1, [R3,#8]|153-104
74614|code|ADD             R0, PC; "   args   '%s'\n"|120-68
74616|code|BL              sub_13D9C|1-240-16-253
74620|code|LDR             R2, [R4,#0x10]|34-105
74622|code|LDR             R3, [R5,#0x38]|171-107
74624|code|CMP             R2, R3|154-66
74626|code|BEQ             loc_123E4|47-208
74628|code|LDR             R3, [R5,#0x10]|43-105
74630|code|LDR             R0, [R3,#0x2C]|216-106
74632|code|LDR             R1, [R3,#0x30]|25-107
74634|code|BLX             set_menu_items|255-247-174-236
74638|code|CBNZ            R0, loc_123D2|0-187
74640|code|LDR             R3, [R5,#0x10]|43-105
74642|code|MOVW            R1, #0x207|64-242-7-33
74646|code|LDR             R0, [R3,#0x2C]|216-106
74648|code|BLX             menu_driver|255-247-150-234
74652|code|LDR             R3, [R5,#0x10]|43-105
74654|code|MOVW            R1, #0x206|64-242-6-33
74658|code|LDR             R0, [R3,#0x2C]|216-106
74660|code|BLX             menu_driver|255-247-144-234
74664|code|LDR             R3, [R5,#0x10]|43-105
74666|code|MOV             R1, R8|65-70
74668|code|LDR             R0, [R3,#0x2C]|216-106
74670|code|BLX             set_current_item|255-247-40-234
74674|code|LDR             R0, [R5,#0xC]|232-104
74676|code|LDR             R3, [R5,#0x10]|43-105
74678|code|CMP             R0, R3|152-66
74680|code|BEQ             loc_123F2|27-208
74682|code|MOVS            R0, #0|0-32
74684|code|POP.W           {R3-R11,PC}|189-232-248-143
74688|code|LDR             R1, =(aCuiBoot - 0x123CA); "cui_boot"|28-73
74690|code|MOV             R2, R0|2-70
74692|code|LDR             R0, =(aSSetMenuItemsF - 0x123CC); "%s: set_menu_items failed: %d\n"|28-72
74694|code|ADD             R1, PC; "cui_boot"|121-68
74696|code|ADD             R0, PC; "%s: set_menu_items failed: %d\n"|120-68
74698|code|ADDS            R1, #0x20 ; ' '|32-49
74700|code|BL              sub_13D9C|1-240-230-252
74704|code|B               loc_122BA|115-231
74706|code|LDR             R1, =(aCuiBoot - 0x123DC); "cui_boot"|26-73
74708|code|MOV             R2, R0|2-70
74710|code|LDR             R0, =(aSSetMenuItemsF - 0x123DE); "%s: set_menu_items failed: %d\n"|26-72
74712|code|ADD             R1, PC; "cui_boot"|121-68
74714|code|ADD             R0, PC; "%s: set_menu_items failed: %d\n"|120-68
74716|code|ADDS            R1, #0x20 ; ' '|32-49
74718|code|BL              sub_13D9C|1-240-221-252
74722|code|B               loc_12390|213-231
74724|code|ADD.W           R0, R5, #0x14|5-241-20-0
74728|code|LDR.W           R8, [R7,#4]|215-248-4-128
74732|code|BL              sub_13BE8|1-240-252-251
74736|code|B               loc_12384|200-231
74738|code|LDR             R3, [R0,#0x1C]|195-105
74740|code|BLX             R3|152-71
74742|code|MOVS            R0, #0|0-32
74744|code|POP.W           {R3-R11,PC}|189-232-248-143
74748|code|LDR             R3, [R0,#0x20]|3-106
74750|code|BLX             R3|152-71
74752|code|LDR             R0, [R5,#0x10]|40-105
74754|code|B               loc_122AC|83-231
74756|data|DCD aCuiBoot - 0x12286; "cui_boot"|146-59-0-0
74760|data|DCD aSPS - 0x1228A; "%s: %p %s\n"|122-60-0-0
74764|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1229E|98-77-1-0
74768|data|DCD sub_12110+1 - 0x122C8|73-254-255-255
74772|data|DCD cui_boot_editor_run_ptr - 0x27000|180-1-0-0
74776|data|DCD aStructCuiOptDa - 0x122D8; "struct cui_opt_data"|88-60-0-0
74780|data|DCD aStructPbBootDa - 0x12304; "struct pb_boot_data"|64-60-0-0
74784|data|DCD aCuiBoot - 0x1234E; "cui_boot"|202-58-0-0
74788|data|DCD aSAddingOptS - 0x12352; "%s: adding opt '%s'\n"|6-60-0-0
74792|data|DCD aImageS - 0x12362; "   image  '%s'\n"|14-60-0-0
74796|data|DCD aInitrdS - 0x1236E; "   initrd '%s'\n"|18-60-0-0
74800|data|DCD aArgsS - 0x1237A; "   args   '%s'\n"|22-60-0-0
74804|data|DCD aCuiBoot - 0x123CA; "cui_boot"|78-58-0-0
74808|data|DCD aSSetMenuItemsF - 0x123CC; "%s: set_menu_items failed: %d\n"|68-59-0-0
74812|data|DCD aCuiBoot - 0x123DC; "cui_boot"|60-58-0-0
74816|data|DCD aSSetMenuItemsF - 0x123DE; "%s: set_menu_items failed: %d\n"|50-59-0-0
74820|code|PUSH            {R3-R5,LR}|56-181
74822|code|MOV             R4, R0|4-70
74824|code|ADDS            R0, #0x14|20-48
74826|code|BL              sub_13BB4|1-240-179-251
74830|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x12456)|18-75
74832|code|LDR             R2, =(stdscr_ptr - 0x27000)|18-74
74834|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
74836|code|LDR             R5, [R3,R2]; stdscr|157-88
74838|code|LDR             R0, [R5]; WINDOW *|40-104
74840|code|BLX             wgetch|255-247-186-235
74844|code|MOVS            R1, #0; int|0-33
74846|code|ADDS            R3, R0, #1|67-28
74848|code|BEQ             loc_12492|23-208
74850|code|CMP             R0, #0xC|12-40
74852|code|LDR             R3, [R4,#0xC]|227-104
74854|code|BNE             loc_12488|15-209
74856|code|CMP             R3, #0|0-43
74858|code|BEQ             loc_12456|244-208
74860|code|LDR             R3, [R3,#0x10]|27-105
74862|code|MOV             R0, R3; WINDOW *|24-70
74864|code|CMP             R3, #0|0-43
74866|code|BEQ             loc_12456|240-208
74868|code|LDRSH.W         R2, [R3,#4]|179-249-4-32
74872|code|ADDS            R2, #1; int|1-50
74874|code|BLX             wredrawln|255-247-48-236
74878|code|LDR             R3, [R4,#0xC]|227-104
74880|code|LDR             R0, [R3,#0x10]; WINDOW *|24-105
74882|code|BLX             wrefresh|255-247-74-234
74886|code|B               loc_12456|230-231
74888|code|MOV             R1, R0|1-70
74890|code|LDR             R2, [R3,#0x24]|90-106
74892|code|MOV             R0, R3|24-70
74894|code|BLX             R2|144-71
74896|code|B               loc_12456|225-231
74898|code|MOVS            R0, #0|0-32
74900|code|POP             {R3-R5,PC}|56-189
74902|data|ALIGN 4|0-191
74904|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12456|170-75-1-0
74908|data|DCD stdscr_ptr - 0x27000|212-1-0-0
74912|code|PUSH            {R4,LR}|16-181
74914|code|MOV             R4, R0|4-70
74916|code|LDR             R0, [R0,#0x30]|0-107
74918|code|BL              sub_13AA4|1-240-253-250
74922|code|CBZ             R0, loc_124B6|32-177
74924|code|BLX             ungetch|255-247-100-235
74928|code|MOV             R0, R4|32-70
74930|code|BL              sub_12444|255-247-199-255
74934|code|MOVS            R0, #0|0-32
74936|code|POP             {R4,PC}|16-189
74938|data|ALIGN 4|0-191
74940|code|LDR             R1, =(aCuiBoot - 0x124C8); "cui_boot"|5-73
74942|code|PUSH            {R4,LR}|16-181
74944|code|MOV             R4, R0|4-70
74946|code|LDR             R0, =(aSExiting - 0x124CC); "%s: exiting\n"|5-72
74948|code|ADD             R1, PC; "cui_boot"|121-68
74950|code|ADDS            R1, #0x34 ; '4'|52-49
74952|code|ADD             R0, PC; "%s: exiting\n"|120-68
74954|code|BL              sub_13D9C|1-240-103-252
74958|code|MOVS            R3, #1|1-35
74960|code|STR             R3, [R4,#4]|99-96
74962|code|POP             {R4,PC}|16-189
74964|data|DCD aCuiBoot - 0x124C8; "cui_boot"|80-57-0-0
74968|data|DCD aSExiting - 0x124CC; "%s: exiting\n"|212-58-0-0
74972|code|LDR             R1, =(aCuiBoot - 0x124E8); "cui_boot"|5-73
74974|code|PUSH            {R4,LR}|16-181
74976|code|MOV             R4, R0|4-70
74978|code|LDR             R0, =(aSResizing - 0x124EC); "%s: resizing\n"|5-72
74980|code|ADD             R1, PC; "cui_boot"|121-68
74982|code|ADDS            R1, #0x40 ; '@'|64-49
74984|code|ADD             R0, PC; "%s: resizing\n"|120-68
74986|code|BL              sub_13D9C|1-240-87-252
74990|code|MOVS            R3, #1|1-35
74992|code|STR             R3, [R4,#8]|163-96
74994|code|POP             {R4,PC}|16-189
74996|data|DCD aCuiBoot - 0x124E8; "cui_boot"|48-57-0-0
75000|data|DCD aSResizing - 0x124EC; "%s: resizing\n"|196-58-0-0
75004|code|LDR             R0, [R0,#0x18]|128-105
75006|code|B.W             loc_124BC|255-247-221-191
75010|data|ALIGN 4|0-191
75012|code|LDR             R3, [R0,#8]|131-104
75014|code|PUSH            {R4-R6,LR}|112-181
75016|code|LDR             R5, [R3,#0x18]|157-105
75018|code|LDR             R4, [R0,#0xC]|196-104
75020|code|LDR             R1, =(aRunningS - 0x12514); "Running %s..."|21-73
75022|code|LDR             R0, [R5,#0xC]|232-104
75024|code|ADD             R1, PC; "Running %s..."|121-68
75026|code|LDR             R2, [R4]|34-104
75028|code|BL              sub_13598|1-240-64-248
75032|code|BLX             def_prog_mode|255-247-64-235
75036|code|MOVS            R2, #0|0-34
75038|code|MOVS            R1, #1|1-33
75040|code|MOV             R0, R4|32-70
75042|code|BL              sub_1575C|3-240-27-249
75046|code|MOV             R6, R0|6-70
75048|code|BLX             reset_prog_mode|255-247-244-234
75052|code|LDR             R3, [R5,#0xC]|235-104
75054|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
75058|code|LDR             R0, [R3,#0x10]|24-105
75060|code|CBZ             R0, loc_1253C|16-177
75062|code|LDRSH.W         R2, [R0,#4]|176-249-4-32
75066|code|ADDS            R2, #1|1-50
75068|code|MOVS            R1, #0|0-33
75070|code|BLX             wredrawln|255-247-206-235
75074|code|CBZ             R6, loc_12560|110-177
75076|code|LDR             R1, =(aCuiBoot - 0x1254C); "cui_boot"|8-73
75078|code|LDR             R0, =(aSFailedS_0 - 0x12550); "%s: failed: '%s'\n"|9-72
75080|code|ADD             R1, PC; "cui_boot"|121-68
75082|code|LDR             R2, [R4]|34-104
75084|code|ADD             R0, PC; "%s: failed: '%s'\n"|120-68
75086|code|ADDS            R1, #0x4C ; 'L'|76-49
75088|code|BL              sub_13D9C|1-240-36-252
75092|code|LDR             R1, =(aFailedS - 0x1255E); "Failed: %s"|6-73
75094|code|LDR             R0, [R5,#0xC]|232-104
75096|code|LDR             R2, [R4]|34-104
75098|code|ADD             R1, PC; "Failed: %s"|121-68
75100|code|BL              sub_13598|1-240-28-248
75104|code|MOV             R0, R6|48-70
75106|code|POP             {R4-R6,PC}|112-189
75108|data|DCD aRunningS - 0x12514; "Running %s..."|172-58-0-0
75112|data|DCD aCuiBoot - 0x1254C; "cui_boot"|204-56-0-0
75116|data|DCD aSFailedS_0 - 0x12550; "%s: failed: '%s'\n"|128-58-0-0
75120|data|DCD aFailedS - 0x1255E; "Failed: %s"|134-58-0-0
75124|code|PUSH            {R4-R6,LR}|112-181
75126|code|MOV             R5, R1|13-70
75128|code|LDR             R4, [R0,#0xC]|196-104
75130|code|MOV             R6, R0|6-70
75132|code|LDR             R3, [R4,#0x20]|35-106
75134|code|MOV             R0, R4|32-70
75136|code|BLX             R3|152-71
75138|code|STR             R5, [R6,#0xC]|245-96
75140|code|LDR             R3, [R5,#0x1C]|235-105
75142|code|MOV             R0, R5|40-70
75144|code|BLX             R3|152-71
75146|code|MOV             R0, R4|32-70
75148|code|POP             {R4-R6,PC}|112-189
75150|data|ALIGN 0x10|0-191
75152|code|LDR             R1, [R0,#8]|129-104
75154|code|LDR             R3, [R0,#0xC]|195-104
75156|code|PUSH            {R4,LR}|16-181
75158|code|LDR             R4, [R1,#0x18]|140-105
75160|code|LDR             R2, =(loc_125B4+1 - 0x125A0)|5-74
75162|code|LDR             R1, [R3,#4]|89-104
75164|code|ADD             R2, PC; loc_125B4|122-68
75166|code|MOV             R0, R4|32-70
75168|code|BL              sub_12DD0|0-240-22-252
75172|code|MOV             R1, R0|1-70
75174|code|MOV             R0, R4|32-70
75176|code|BL              sub_12574|255-247-228-255
75180|code|MOVS            R0, #0|0-32
75182|code|POP             {R4,PC}|16-189
75184|data|DCD loc_125B4+1 - 0x125A0|21-0-0-0
75188|code|CMP             R1, #1|1-41
75190|code|PUSH.W          {R4-R8,LR}|45-233-240-65
75194|code|MOV             R4, R0|4-70
75196|code|LDR             R5, [R0,#0x18]|133-105
75198|code|BEQ             loc_125D2|8-208
75200|code|MOV             R0, R5|40-70
75202|code|LDR             R1, [R5,#0x10]|41-105
75204|code|BL              sub_12574|255-247-214-255
75208|code|MOV             R0, R4|32-70
75210|code|POP.W           {R4-R8,LR}|189-232-240-65
75214|code|B.W             sub_14BC0|2-240-247-186
75218|code|LDR             R0, [R5,#0x10]|40-105
75220|code|MOV             R7, R2|23-70
75222|code|BL              sub_12FD4|0-240-253-252
75226|code|MOV             R1, R7|57-70
75228|code|LDR             R6, [R0,#0xC]|198-104
75230|code|MOV             R8, R0|128-70
75232|code|BL              sub_14AD4|2-240-120-250
75236|code|LDR             R0, [R6,#4]|112-104
75238|code|BL              sub_14BC0|2-240-235-250
75242|code|LDR             R1, [R6]|49-104
75244|code|STR             R7, [R6,#4]|119-96
75246|code|MOV             R0, R8|64-70
75248|code|BL              sub_13168|0-240-186-253
75252|code|LDR             R3, [R5,#0x10]|43-105
75254|code|LDR.W           R1, [R8,#4]|216-248-4-16
75258|code|LDR             R0, [R3,#0x2C]|216-106
75260|code|BLX             set_current_item|255-247-0-233
75264|code|LDR             R1, =(aCuiBoot - 0x12608); "cui_boot"|13-73
75266|code|LDR             R0, =(aSUpdatingOptS - 0x1260E); "%s: updating opt '%s'\n"|14-72
75268|code|ADD             R1, PC; "cui_boot"|121-68
75270|code|LDR             R2, [R6]|50-104
75272|code|ADDS            R1, #0x58 ; 'X'|88-49
75274|code|ADD             R0, PC; "%s: updating opt '%s'\n"|120-68
75276|code|BL              sub_13D9C|1-240-198-251
75280|code|LDR             R3, [R6,#4]|115-104
75282|code|LDR             R0, =(aImageS_0 - 0x1261A); " image  '%s'\n"|11-72
75284|code|LDR             R1, [R3]|25-104
75286|code|ADD             R0, PC; " image  '%s'\n"|120-68
75288|code|BL              sub_13D9C|1-240-192-251
75292|code|LDR             R3, [R6,#4]|115-104
75294|code|LDR             R0, =(aInitrdS_0 - 0x12626); " initrd '%s'\n"|9-72
75296|code|LDR             R1, [R3,#4]|89-104
75298|code|ADD             R0, PC; " initrd '%s'\n"|120-68
75300|code|BL              sub_13D9C|1-240-186-251
75304|code|LDR             R3, [R6,#4]|115-104
75306|code|LDR             R0, =(aArgsS_0 - 0x12632); " args   '%s'\n"|7-72
75308|code|LDR             R1, [R3,#8]|153-104
75310|code|ADD             R0, PC; " args   '%s'\n"|120-68
75312|code|BL              sub_13D9C|1-240-180-251
75316|code|B               loc_125C0|196-231
75318|data|ALIGN 4|0-191
75320|data|DCD aCuiBoot - 0x12608; "cui_boot"|16-56-0-0
75324|data|DCD aSUpdatingOptS - 0x1260E; "%s: updating opt '%s'\n"|226-57-0-0
75328|data|DCD aImageS_0 - 0x1261A; " image  '%s'\n"|238-57-0-0
75332|data|DCD aInitrdS_0 - 0x12626; " initrd '%s'\n"|242-57-0-0
75336|data|DCD aArgsS_0 - 0x12632; " args   '%s'\n"|246-57-0-0
75340|code|PUSH.W          {R4-R8,LR}|45-233-240-65
75344|code|MOV             R5, R0|5-70
75346|code|LDR             R3, [R0,#0x20]|3-106
75348|code|BLX             R3|152-71
75350|code|LDR             R0, [R5,#0x2C]|232-106
75352|code|MOVS            R1, #0|0-33
75354|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x12668)|34-78
75356|code|BLX             set_menu_items|255-247-68-235
75360|code|MOVS            R1, #1|1-33
75362|code|MOV             R0, R5|40-70
75364|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
75366|code|BL              sub_131C0|0-240-171-253
75370|code|MOV             R7, R0|7-70
75372|code|MOV             R0, R5|40-70
75374|code|BL              sub_13118|0-240-83-253
75378|code|LDR.W           LR, =(cui_boot_editor_run_ptr - 0x27000)|223-248-116-224
75382|code|LDR             R3, =(sub_12110+1 - 0x12684)|29-75
75384|code|MOVS            R1, #0x14|20-33
75386|code|LDR             R2, =(aStructCuiOptDa - 0x12686); "struct cui_opt_data"|29-74
75388|code|LDR.W           R6, [R6,LR]; cui_boot_editor_run|86-248-14-96
75392|code|ADD             R3, PC; sub_12110|123-68
75394|code|ADD             R2, PC; "struct cui_opt_data"|122-68
75396|code|STR             R3, [R0,#0x14]|67-97
75398|code|MOV             R4, R0|4-70
75400|code|STR             R6, [R0,#0x10]|6-97
75402|code|BL              sub_15218|2-240-197-253
75406|code|LDR             R1, =(aUserItemU - 0x12696); "User item %u:"|25-73
75408|code|MOV             R2, R7|58-70
75410|code|ADD             R1, PC; "User item %u:"|121-68
75412|code|MOV             R6, R0|6-70
75414|code|STR             R0, [R4,#0xC]|224-96
75416|code|MOV             R0, R4|32-70
75418|code|BL              sub_15448|2-240-213-254
75422|code|LDR             R2, =(aStructPbBootDa - 0x126A6); "struct pb_boot_data"|22-74
75424|code|MOVS            R1, #0xC|12-33
75426|code|ADD             R2, PC; "struct pb_boot_data"|122-68
75428|code|STR             R0, [R6]|48-96
75430|code|MOV             R0, R4|32-70
75432|code|BL              sub_15218|2-240-182-253
75436|code|LDR             R1, [R6]|49-104
75438|code|STR             R0, [R6,#4]|112-96
75440|code|MOV             R0, R4|32-70
75442|code|BL              sub_15250|2-240-205-253
75446|code|MOV             R2, R7|58-70
75448|code|MOV             R1, R4|33-70
75450|code|MOV             R3, R0|3-70
75452|code|MOV             R0, R5|40-70
75454|code|BL              sub_13128|0-240-51-253
75458|code|LDR             R1, [R5,#0x30]|41-107
75460|code|LDR             R0, [R5,#0x2C]|232-106
75462|code|BLX             set_menu_items|255-247-16-235
75466|code|LDR             R3, [R5,#0x1C]|235-105
75468|code|MOV             R0, R5|40-70
75470|code|BLX             R3|152-71
75472|code|LDR             R0, [R5,#0x2C]|232-106
75474|code|LDR             R1, [R4,#4]|97-104
75476|code|BLX             set_current_item|255-247-148-232
75480|code|LDR             R3, [R4,#0x10]|35-105
75482|code|MOV             R0, R4|32-70
75484|code|POP.W           {R4-R8,LR}|189-232-240-65
75488|code|BX              R3|24-71
75490|data|ALIGN 4|0-191
75492|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12668|152-73-1-0
75496|data|DCD cui_boot_editor_run_ptr - 0x27000|180-1-0-0
75500|data|DCD sub_12110+1 - 0x12684|141-250-255-255
75504|data|DCD aStructCuiOptDa - 0x12686; "struct cui_opt_data"|170-56-0-0
75508|data|DCD aUserItemU - 0x12696; "User item %u:"|162-57-0-0
75512|data|DCD aStructPbBootDa - 0x126A6; "struct pb_boot_data"|158-56-0-0
75516|code|PUSH.W          {R4-R11,LR}|45-233-240-79
75520|code|MOV             R9, R2|145-70
75522|code|LDR             R2, =(aStructCui - 0x12712); "struct cui"|90-74
75524|code|SUB             SP, SP, #0xC|131-176
75526|code|MOV             R4, R0|4-70
75528|code|MOV             R11, R1|139-70
75530|code|MOVS            R0, #0|0-32
75532|code|MOVS            R1, #0x40 ; '@'|64-33
75534|code|ADD             R2, PC; "struct cui"|122-68
75536|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1271C)|223-248-92-161
75540|code|BL              sub_15218|2-240-128-253
75544|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
75546|code|MOV             R5, R0|5-70
75548|code|CMP             R0, #0|0-40
75550|code|BEQ.W           loc_12842|0-240-144-128
75554|code|LDR             R3, =(sub_120FC+1 - 0x1272C)|84-75
75556|code|MOVS            R2, #0x6F ; 'o'|111-34
75558|code|STR             R4, [R0,#0x34]|68-99
75560|code|ADD             R3, PC; sub_120FC|123-68
75562|code|STR             R2, [R0]|2-96
75564|code|STR             R3, [R0,#0x24]|67-98
75566|code|BL              sub_13EA0|1-240-183-251
75570|code|LDR             R6, =(aCuiBoot - 0x12742); "cui_boot"|81-78
75572|code|CMP.W           R9, #0|185-241-0-15
75576|code|LDR.W           R8, =(aSWaitingForSer - 0x12744); "%s: waiting for server %d\n"|223-248-64-129
75580|code|LDR             R7, =(unk_271E8 - 0x1274C)|80-79
75582|code|ADD             R6, PC; "cui_boot"|126-68
75584|code|ADD             R8, PC; "%s: waiting for server %d\n"|248-68
75586|code|ITE NE|20-191
75588|code|MOVNE           R4, #2|2-36
75590|code|MOVEQ           R4, #0xA|10-36
75592|code|ADD             R7, PC; unk_271E8|127-68
75594|code|ADDS            R6, #0x70 ; 'p'|112-54
75596|code|STR             R0, [R5,#0x28]|168-98
75598|code|B               loc_12752|0-224
75600|code|LDR             R0, [R5,#0x28]|168-106
75602|code|MOV             R1, R7|57-70
75604|code|MOV             R2, R5|42-70
75606|code|BL              sub_138C8|1-240-183-248
75610|code|MOV             R2, R4|34-70
75612|code|MOV             R1, R6|49-70
75614|code|MOV             R3, R0|3-70
75616|code|MOV             R0, R8|64-70
75618|code|STR             R3, [R5,#0x2C]|235-98
75620|code|CBNZ            R3, loc_127C4|115-187
75622|code|BL              sub_13D9C|1-240-25-251
75626|code|MOVS            R0, #1|1-32
75628|code|BLX             sleep|255-247-178-232
75632|code|SUBS            R4, #1|1-60
75634|code|BNE             loc_12750|237-209
75636|code|LDR             R3, [R5,#0x2C]|235-106
75638|code|MOVS            R4, #0xA|10-36
75640|code|CBNZ            R3, loc_127C4|35-187
75642|code|CMP.W           R9, #0|185-241-0-15
75646|code|BEQ             loc_12814|73-208
75648|code|BL              sub_13CBC|1-240-156-250
75652|code|MOV             R9, R0|129-70
75654|code|CMP             R0, #0|0-40
75656|code|BEQ             loc_12750|226-208
75658|code|LDR             R0, =(aSDiscoverClien - 0x12792); "%s: discover_client_init failed.\n"|62-72
75660|code|MOV             R1, R6|49-70
75662|code|ADD             R0, PC; "%s: discover_client_init failed.\n"|120-68
75664|code|BL              sub_13D9C|1-240-4-251
75668|code|LDR             R0, =(stderr_ptr - 0x27000)|60-72
75670|code|LDR             R2, =(aSErrorDiscover - 0x127A4); "%s: error: discover_client_init failed."...|61-74
75672|code|MOV             R3, R6|51-70
75674|code|MOVS            R1, #1|1-33
75676|code|LDR.W           R4, [R10,R0]; stderr|90-248-0-64
75680|code|ADD             R2, PC; "%s: error: discover_client_init failed."...|122-68
75682|code|LDR             R0, [R4]|32-104
75684|code|BLX             __fprintf_chk|255-247-0-234
75688|code|LDR             R0, =(aCouldNotStartP - 0x127B2); "could not start pb-discover, the petitb"...|57-72
75690|code|LDR             R3, [R4]|35-104
75692|code|MOVS            R1, #1|1-33
75694|code|ADD             R0, PC; "could not start pb-discover, the petitb"...|120-68
75696|code|MOVS            R2, #0x33 ; '3'|51-34
75698|code|BLX             fwrite|255-247-250-232
75702|code|MOV             R0, R5|40-70
75704|code|BL              sub_14BC0|2-240-2-250
75708|code|MOVS            R0, #0|0-32
75710|code|ADD             SP, SP, #0xC|3-176
75712|code|POP.W           {R4-R11,PC}|189-232-240-143
75716|code|LDR             R3, =(nc_atexit_ptr - 0x27000)|51-75
75718|code|LDR.W           R0, [R10,R3]; nc_atexit|90-248-3-0
75722|code|BL              sub_15BA8|3-240-237-249
75726|code|BL              sub_13434|0-240-49-254
75730|code|LDR             R3, =(sub_12444+1 - 0x127E0)|49-75
75732|code|LDR             R0, [R5,#0x28]|168-106
75734|code|MOVS            R1, #0|0-33
75736|code|STR             R5, [SP]|0-149
75738|code|MOVS            R2, #1|1-34
75740|code|ADD             R3, PC; sub_12444|123-68
75742|code|BL              sub_13EB4|1-240-105-251
75746|code|CMP.W           R11, #0|187-241-0-15
75750|code|BEQ             loc_1280C|17-208
75752|code|MOV             R1, R11|89-70
75754|code|MOV             R0, R5|40-70
75756|code|BL              sub_13B08|1-240-140-249
75760|code|STR             R0, [R5,#0x30]|40-99
75762|code|CBZ             R0, loc_1280C|88-177
75764|code|LDR             R3, =(sub_124A0+1 - 0x127FE)|41-75
75766|code|MOVS            R2, #1|1-34
75768|code|LDR             R1, [R0]|1-104
75770|code|ADD             R3, PC; sub_124A0|123-68
75772|code|LDR             R0, [R5,#0x28]|168-106
75774|code|STR             R5, [SP]|0-149
75776|code|BL              sub_13EB4|1-240-88-251
75780|code|MOV             R0, R5|40-70
75782|code|ADD             SP, SP, #0xC|3-176
75784|code|POP.W           {R4-R11,PC}|189-232-240-143
75788|code|MOV             R0, R5|40-70
75790|code|ADD             SP, SP, #0xC|3-176
75792|code|POP.W           {R4-R11,PC}|189-232-240-143
75796|code|LDR             R0, =(aSDiscoverClien - 0x1281C); "%s: discover_client_init failed.\n"|34-72
75798|code|MOV             R1, R6|49-70
75800|code|ADD             R0, PC; "%s: discover_client_init failed.\n"|120-68
75802|code|BL              sub_13D9C|1-240-191-250
75806|code|LDR             R0, =(stderr_ptr - 0x27000)|26-72
75808|code|LDR             R2, =(aSErrorDiscover - 0x1282E); "%s: error: discover_client_init failed."...|32-74
75810|code|MOV             R3, R6|51-70
75812|code|MOVS            R1, #1|1-33
75814|code|LDR.W           R4, [R10,R0]; stderr|90-248-0-64
75818|code|ADD             R2, PC; "%s: error: discover_client_init failed."...|122-68
75820|code|LDR             R0, [R4]|32-104
75822|code|BLX             __fprintf_chk|255-247-188-233
75826|code|LDR             R0, =(aCheckThatPbDis - 0x1283E); "check that pb-discover, the petitboot d"...|29-72
75828|code|LDR             R3, [R4]|35-104
75830|code|MOVS            R1, #1|1-33
75832|code|MOVS            R2, #0x39 ; '9'|57-34
75834|code|ADD             R0, PC; "check that pb-discover, the petitboot d"...|120-68
75836|code|BLX             fwrite|255-247-180-232
75840|code|B               loc_127B6|185-231
75842|code|LDR             R4, =(aCuiBoot - 0x1284A); "cui_boot"|26-76
75844|code|LDR             R6, =(aSAllocCuiFaile - 0x1284C); "%s: alloc cui failed.\n"|26-78
75846|code|ADD             R4, PC; "cui_boot"|124-68
75848|code|ADD             R6, PC; "%s: alloc cui failed.\n"|126-68
75850|code|ADDS            R4, #0x70 ; 'p'|112-52
75852|code|MOV             R0, R6|48-70
75854|code|MOV             R1, R4|33-70
75856|code|BL              sub_13D9C|1-240-164-250
75860|code|LDR             R0, =(stderr_ptr - 0x27000)|12-72
75862|code|MOV             R3, R4|35-70
75864|code|MOV             R2, R6|50-70
75866|code|MOVS            R1, #1|1-33
75868|code|LDR.W           R0, [R10,R0]; stderr|90-248-0-0
75872|code|LDR             R0, [R0]|0-104
75874|code|BLX             __fprintf_chk|255-247-162-233
75878|code|MOV             R0, R5|40-70
75880|code|B               loc_1280E|209-231
75882|data|ALIGN 4|0-191
75884|data|DCD aStructCui - 0x12712; "struct cui"|54-57-0-0
75888|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1271C|228-72-1-0
75892|data|DCD sub_120FC+1 - 0x1272C|209-249-255-255
75896|data|DCD aCuiBoot - 0x12742; "cui_boot"|214-54-0-0
75900|data|DCD aSWaitingForSer - 0x12744; "%s: waiting for server %d\n"|40-57-0-0
75904|data|DCD unk_271E8 - 0x1274C|156-74-1-0
75908|data|DCD aSDiscoverClien - 0x12792; "%s: discover_client_init failed.\n"|246-56-0-0
75912|data|DCD stderr_ptr - 0x27000|196-1-0-0
75916|data|DCD aSErrorDiscover - 0x127A4; "%s: error: discover_client_init failed."...|8-57-0-0
75920|data|DCD aCouldNotStartP - 0x127B2; "could not start pb-discover, the petitb"...|38-57-0-0
75924|data|DCD nc_atexit_ptr - 0x27000|220-1-0-0
75928|data|DCD sub_12444+1 - 0x127E0|101-252-255-255
75932|data|DCD sub_124A0+1 - 0x127FE|163-252-255-255
75936|data|DCD aSDiscoverClien - 0x1281C; "%s: discover_client_init failed.\n"|108-56-0-0
75940|data|DCD aSErrorDiscover - 0x1282E; "%s: error: discover_client_init failed."...|126-56-0-0
75944|data|DCD aCheckThatPbDis - 0x1283E; "check that pb-discover, the petitboot d"...|206-56-0-0
75948|data|DCD aCuiBoot - 0x1284A; "cui_boot"|206-53-0-0
75952|data|DCD aSAllocCuiFaile - 0x1284C; "%s: alloc cui failed.\n"|8-56-0-0
75956|code|PUSH.W          {R4-R10,LR}|45-233-240-71
75960|code|MOV             R4, R0|4-70
75962|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x128C6)|71-79
75964|code|SUB             SP, SP, #0x10|132-176
75966|code|LDR             R3, =(__stack_chk_guard_ptr - 0x27000)|71-75
75968|code|MOV             R0, R1|8-70
75970|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
75972|code|LDR             R5, [R1,#0x1C]|205-105
75974|code|LDR             R6, =(aCuiBoot - 0x128D2); "cui_boot"|70-78
75976|code|LDR.W           R10, [R7,R3]; __stack_chk_guard|87-248-3-160
75980|code|STR             R2, [R4,#0x38]|162-99
75982|code|ADD             R6, PC; "cui_boot"|126-68
75984|code|STR             R1, [R4,#0x10]|33-97
75986|code|ADDS            R6, #0x84|132-54
75988|code|LDR.W           R3, [R10]|218-248-0-48
75992|code|STR             R1, [R4,#0xC]|225-96
75994|code|LDR.W           R9, =(aCuiBoot - 0x128E6); "cui_boot"|223-248-8-145
75998|code|STR             R3, [SP,#0xC]|3-147
76000|code|BLX             R5|168-71
76002|code|ADD             R9, PC; "cui_boot"|249-68
76004|code|ADD.W           R9, R9, #0x84|9-241-132-9
76008|code|LDR             R0, [R4,#0x28]|160-106
76010|code|BL              sub_13FA4|1-240-91-251
76014|code|CMP             R0, #0|0-40
76016|code|BLT             loc_12994|80-219
76018|code|LDR             R3, [R4,#4]|99-104
76020|code|CMP             R3, #0|0-43
76022|code|BNE             loc_129B2|92-209
76024|code|ADD.W           R0, R4, #0x14|4-241-20-0
76028|code|LDR             R5, =(aSUU_0 - 0x1290A); "%s: {%u,%u}\n"|58-77
76030|code|BL              sub_13CA0|1-240-207-249
76034|code|LDR.W           R8, =(aSIoctlFailedS - 0x1290C); "%s: ioctl failed: %s\n"|223-248-232-128
76038|code|ADD             R5, PC; "%s: {%u,%u}\n"|125-68
76040|code|ADD             R8, PC; "%s: ioctl failed: %s\n"|248-68
76042|code|LDR             R3, [R4,#8]|163-104
76044|code|CMP             R3, #0|0-43
76046|code|BEQ             loc_128E8|235-208
76048|code|MOVS            R3, #0|0-35
76050|code|MOVS            R0, #1|1-32
76052|code|STR             R3, [R4,#8]|163-96
76054|code|MOVW            R1, #0x5413|69-242-19-65
76058|code|ADD             R2, SP, #4|1-170
76060|code|BLX             ioctl|255-247-74-232
76064|code|ADDS            R0, #1|1-48
76066|code|BEQ             loc_1297E|44-208
76068|code|LDRH.W          R2, [SP,#4]|189-248-4-32
76072|code|MOV             R1, R6|49-70
76074|code|MOV             R0, R5|40-70
76076|code|LDRH.W          R3, [SP,#6]|189-248-6-48
76080|code|BL              sub_13D9C|1-240-52-250
76084|code|LDR             R3, [R4,#0xC]|227-104
76086|code|LDR             R0, [R3,#0x10]|24-105
76088|code|BLX             wclear|255-247-86-233
76092|code|LDRH.W          R1, [SP,#6]|189-248-6-16
76096|code|LDRH.W          R0, [SP,#4]|189-248-4-0
76100|code|BLX             resize_term|255-247-168-232
76104|code|LDR             R0, [R4,#0xC]|224-104
76106|code|LDR             R3, [R0,#0x28]|131-106
76108|code|BLX             R3|152-71
76110|code|LDR             R3, =(stdscr_ptr - 0x27000)|40-75
76112|code|LDR             R3, [R7,R3]; stdscr|251-88
76114|code|LDR             R0, [R3]|24-104
76116|code|BLX             wgetch|255-247-60-233
76120|code|LDR             R3, [R4,#0xC]|227-104
76122|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
76126|code|LDR             R0, [R3,#0x10]|24-105
76128|code|CBZ             R0, loc_12968|16-177
76130|code|LDRSH.W         R2, [R0,#4]|176-249-4-32
76134|code|ADDS            R2, #1|1-50
76136|code|MOVS            R1, #0|0-33
76138|code|BLX             wredrawln|255-247-184-233
76142|code|LDR             R3, [R4,#0xC]|227-104
76144|code|LDR             R0, [R3,#0x10]|24-105
76146|code|BLX             wrefresh|254-247-210-239
76150|code|LDR             R3, [R4,#8]|163-104
76152|code|CMP             R3, #0|0-43
76154|code|BNE             loc_12910|201-209
76156|code|B               loc_128E8|180-231
76158|code|BLX             __errno_location|255-247-220-232
76162|code|LDR             R0, [R0]|0-104
76164|code|BLX             strerror|255-247-100-232
76168|code|MOV             R1, R9|73-70
76170|code|MOV             R2, R0|2-70
76172|code|MOV             R0, R8|64-70
76174|code|BL              sub_13D9C|1-240-5-250
76178|code|B               loc_1290A|186-231
76180|code|BLX             __errno_location|255-247-208-232
76184|code|LDR             R0, [R0]|0-104
76186|code|CMP             R0, #4|4-40
76188|code|BEQ             loc_128F2|169-208
76190|code|BLX             strerror|255-247-88-232
76194|code|LDR             R1, =(aCuiBoot - 0x129A8); "cui_boot"|20-73
76196|code|ADD             R1, PC; "cui_boot"|121-68
76198|code|ADDS            R1, #0x7C ; '|'|124-49
76200|code|MOV             R2, R0|2-70
76202|code|LDR             R0, =(aSPollS - 0x129B0); "%s: poll: %s\n"|19-72
76204|code|ADD             R0, PC; "%s: poll: %s\n"|120-68
76206|code|BL              sub_13D9C|1-240-245-249
76210|code|BL              nc_atexit|0-240-101-253
76214|code|LDR             R0, [R4,#4]|96-104
76216|code|LDR             R2, [SP,#0xC]|3-154
76218|code|LDR.W           R3, [R10]|218-248-0-48
76222|code|CLZ.W           R0, R0|176-250-128-240
76226|code|CMP             R2, R3|154-66
76228|code|MOV.W           R0, R0,LSR#5|79-234-80-16
76232|code|RSB.W           R0, R0, #0|192-241-0-0
76236|code|BNE             loc_129D4|2-209
76238|code|ADD             SP, SP, #0x10|4-176
76240|code|POP.W           {R4-R10,PC}|189-232-240-135
76244|code|BLX             __stack_chk_fail|254-247-138-239
76248|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x128C6|58-71-1-0
76252|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
76256|data|DCD aCuiBoot - 0x128D2; "cui_boot"|70-53-0-0
76260|data|DCD aCuiBoot - 0x128E6; "cui_boot"|50-53-0-0
76264|data|DCD aSUU_0 - 0x1290A; "%s: {%u,%u}\n"|102-56-0-0
76268|data|DCD aSIoctlFailedS - 0x1290C; "%s: ioctl failed: %s\n"|76-56-0-0
76272|data|DCD stdscr_ptr - 0x27000|212-1-0-0
76276|data|DCD aCuiBoot - 0x129A8; "cui_boot"|112-52-0-0
76280|data|DCD aSPollS - 0x129B0; "%s: poll: %s\n"|152-55-0-0
76284|code|LDR             R0, [R0,#0x2C]|192-106
76286|code|B.W             j_unpost_form|255-247-123-184
76290|data|ALIGN 4|0-191
76292|code|PUSH            {R4-R6,LR}|112-181
76294|code|SUB             SP, SP, #8|130-176
76296|code|MOVS            R5, #0|0-37
76298|code|MOV             R4, R0|4-70
76300|code|MOV             R3, R5; __int16|43-70
76302|code|MOV             R6, R1|14-70
76304|code|MOV.W           R2, #0x40000; attr_t|79-244-128-34
76308|code|LDR             R0, [R0,#0x14]; WINDOW *|64-105
76310|code|MOVS            R1, #1; int|1-33
76312|code|STR             R5, [SP,#0x18+var_18]; void *|0-149
76314|code|BLX             wchgat|254-247-252-239
76318|code|MOV             R1, R6; int|49-70
76320|code|LDR             R0, [R4,#0x2C]; FORM *|224-106
76322|code|BLX             form_driver|254-247-224-239
76326|code|LDR             R2, [R4,#0x34]; attr_t|98-107
76328|code|MOV             R3, R5; __int16|43-70
76330|code|MOVS            R1, #1; int|1-33
76332|code|MOV             R6, R0|6-70
76334|code|LDR             R0, [R4,#0x14]; WINDOW *|96-105
76336|code|STR             R5, [SP,#0x18+var_18]; void *|0-149
76338|code|BLX             wchgat|254-247-240-239
76342|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
76344|code|BLX             wrefresh|254-247-110-239
76348|code|MOV             R0, R6|48-70
76350|code|ADD             SP, SP, #8|2-176
76352|code|POP             {R4-R6,PC}|112-189
76354|data|ALIGN 4|0-191
76356|code|PUSH            {R3-R5,LR}|56-181
76358|code|MOV             R4, R0|4-70
76360|code|LDR             R0, [R0,#0x2C]; FORM *|192-106
76362|code|MOV             R5, R1|13-70
76364|code|BLX             current_field|255-247-6-232
76368|code|MOVS            R1, #0; chtype|0-33
76370|code|BLX             set_field_back|255-247-2-233
76374|code|MOV             R1, R5; int|41-70
76376|code|LDR             R0, [R4,#0x2C]; FORM *|224-106
76378|code|BLX             form_driver|254-247-196-239
76382|code|MOV             R5, R0|5-70
76384|code|LDR             R0, [R4,#0x2C]; FORM *|224-106
76386|code|BLX             current_field|254-247-252-239
76390|code|MOV.W           R1, #0x40000; chtype|79-244-128-33
76394|code|BLX             set_field_back|255-247-246-232
76398|code|MOV             R0, R4|32-70
76400|code|MOVW            R1, #0x217|64-242-23-33
76404|code|BL              sub_12A04|255-247-198-255
76408|code|MOV             R0, R5|40-70
76410|code|POP             {R3-R5,PC}|56-189
76412|code|PUSH            {R4,LR}|16-181
76414|code|MOV             R4, R0|4-70
76416|code|LDR             R0, [R0,#0x2C]; FORM *|192-106
76418|code|BLX             post_form|254-247-110-239
76422|code|MOV             R0, R4|32-70
76424|code|BL              sub_134A8|0-240-14-253
76428|code|MOVW            R1, #0x206|64-242-6-33
76432|code|MOV             R0, R4|32-70
76434|code|BL              sub_12A44|255-247-215-255
76438|code|MOVW            R1, #0x217|64-242-23-33
76442|code|MOV             R0, R4|32-70
76444|code|BL              sub_12A44|255-247-210-255
76448|code|MOVS            R3, #0|0-35
76450|code|MOV             R0, R4|32-70
76452|code|STR             R3, [R4,#0x34]|99-99
76454|code|MOVW            R1, #0x229|64-242-41-33
76458|code|BL              sub_12A04|255-247-171-255
76462|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
76464|code|CBZ             R0, loc_12AC8|80-177
76466|code|LDRSH.W         R2, [R0,#4]|176-249-4-32
76470|code|ADDS            R2, #1; int|1-50
76472|code|MOVS            R1, #0; int|0-33
76474|code|BLX             wredrawln|255-247-16-233
76478|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
76480|code|BLX             wrefresh|254-247-42-239
76484|code|MOVS            R0, #0|0-32
76486|code|POP             {R4,PC}|16-189
76488|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
76492|code|B               loc_12AB8|244-231
76494|data|ALIGN 0x10|0-191
76496|code|PUSH            {R4,LR}|16-181
76498|code|MOV             R4, R0|4-70
76500|code|LDR             R0, [R0,#0x2C]; FORM *|192-106
76502|code|BLX             unpost_form|255-247-18-232
76506|code|MOV             R0, R4|32-70
76508|code|POP.W           {R4,LR}|189-232-16-64
76512|code|B               sub_12A7C|204-231
76514|data|ALIGN 4|0-191
76516|code|PUSH            {R3-R5,LR}|56-181
76518|code|MOV             R5, R0|5-70
76520|code|BLX             strlen|254-247-244-239
76524|code|ADD             R0, R5|40-68
76526|code|CMP             R5, R0|133-66
76528|code|BCS             loc_12B12|15-210
76530|code|LDRB            R3, [R5]|43-120
76532|code|CMP             R3, #9|9-43
76534|code|IT NE|24-191
76536|code|CMPNE           R3, #0x20 ; ' '|32-43
76538|code|BNE             loc_12B1C|15-209
76540|code|ADDS            R2, R5, #1|106-28
76542|code|B               loc_12B0C|5-224
76544|code|LDRB.W          R3, [R2],#1|18-248-1-59
76548|code|CMP             R3, #9|9-43
76550|code|IT NE|24-191
76552|code|CMPNE           R3, #0x20 ; ' '|32-43
76554|code|BNE             loc_12B1C|7-209
76556|code|CMP             R2, R0|130-66
76558|code|MOV             R5, R2|21-70
76560|code|BNE             loc_12B00|246-209
76562|code|MOV             R4, R5|44-70
76564|code|MOVS            R3, #0|0-35
76566|code|MOV             R0, R5|40-70
76568|code|STRB            R3, [R4,#1]|99-112
76570|code|POP             {R3-R5,PC}|56-189
76572|code|MOV             R4, R5|44-70
76574|code|MOV             R2, R5|42-70
76576|code|B               loc_12B24|0-224
76578|code|LDRB            R3, [R2]|19-120
76580|code|CMP             R3, #9|9-43
76582|code|IT NE|24-191
76584|code|CMPNE           R3, #0x20 ; ' '|32-43
76586|code|IT NE|24-191
76588|code|MOVNE           R4, R2|20-70
76590|code|ADDS            R2, #1|1-50
76592|code|CMP             R0, R2|144-66
76594|code|BHI             loc_12B22|246-216
76596|code|MOVS            R3, #0|0-35
76598|code|MOV             R0, R5|40-70
76600|code|STRB            R3, [R4,#1]|99-112
76602|code|POP             {R3-R5,PC}|56-189
76604|code|PUSH            {R3-R5,LR}|56-181
76606|code|MOV             R5, R0|5-70
76608|code|LDR             R4, [R0,#0x30]|4-107
76610|code|LDR             R0, [R4]; FIELD *|32-104
76612|code|CBZ             R0, loc_12B52|40-177
76614|code|BLX             free_field|255-247-54-232
76618|code|LDR.W           R0, [R4,#4]!|84-248-4-15
76622|code|CMP             R0, #0|0-40
76624|code|BNE             loc_12B46|249-209
76626|code|LDR             R0, [R5,#0x2C]; FORM *|232-106
76628|code|BLX             free_form|254-247-178-239
76632|code|MOV             R3, #0xFFFFFDD5|79-246-213-83-207-246-255-115
76640|code|MOVS            R0, #0|0-32
76642|code|STR             R3, [R5]|43-96
76644|code|POP             {R3-R5,PC}|56-189
76646|data|ALIGN 4|0-191
76648|code|PUSH            {R4-R6,LR}|112-181
76650|code|MOV             R5, R0|5-70
76652|code|SUB             SP, SP, #8|130-176
76654|code|MOV             R0, R1; s|8-70
76656|code|MOV             R6, R1|14-70
76658|code|BLX             strlen|254-247-176-239
76662|code|MOVS            R4, #0|0-36
76664|code|MOV             R2, R5; int|42-70
76666|code|STR             R4, [SP,#0x18+var_18]; int|0-148
76668|code|STR             R4, [SP,#0x18+var_14]; int|1-148
76670|code|MOV             R1, R0; int|1-70
76672|code|MOVS            R0, #1; int|1-32
76674|code|MOV             R3, R0; int|3-70
76676|code|BLX             new_field|254-247-184-238
76680|code|MOVS            R1, #2; Field_Options|2-33
76682|code|MOV             R5, R0|5-70
76684|code|BLX             field_opts_off|255-247-148-232
76688|code|MOV             R0, R5; FIELD *|40-70
76690|code|MOV             R1, R4; int|33-70
76692|code|MOV             R2, R6; char *|50-70
76694|code|BLX             set_field_buffer|254-247-44-239
76698|code|MOV             R0, R5|40-70
76700|code|ADD             SP, SP, #8|2-176
76702|code|POP             {R4-R6,PC}|112-189
76704|code|PUSH            {R4-R7,LR}|240-181
76706|code|MOV             R7, R1|15-70
76708|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x12BB0)|18-76
76710|code|SUB             SP, SP, #0xC|131-176
76712|code|LDR             R6, =(COLS_ptr - 0x27000)|18-78
76714|code|MOVS            R5, #0|0-37
76716|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
76718|code|MOVS            R3, #9; int|9-35
76720|code|MOV             R2, R0; int|2-70
76722|code|MOVS            R0, #1; int|1-32
76724|code|LDR             R1, [R4,R6]; COLS|161-89
76726|code|STR             R5, [SP,#0x20+var_20]; int|0-149
76728|code|STR             R5, [SP,#0x20+var_1C]; int|1-149
76730|code|LDR             R1, [R1]|9-104
76732|code|SUBS            R1, #0xA; int|10-57
76734|code|BLX             new_field|254-247-156-238
76738|code|MOV.W           R1, #0x210; Field_Options|79-244-4-113
76742|code|MOV             R4, R0|4-70
76744|code|BLX             field_opts_off|255-247-118-232
76748|code|MOV             R0, R4; FIELD *|32-70
76750|code|MOV.W           R1, #0x100; int|79-244-128-113
76754|code|BLX             set_max_field|254-247-26-239
76758|code|MOV             R1, R5; int|41-70
76760|code|MOV             R2, R7; char *|58-70
76762|code|MOV             R0, R4; FIELD *|32-70
76764|code|BLX             set_field_buffer|254-247-8-239
76768|code|MOV             R0, R4; FIELD *|32-70
76770|code|MOV             R1, R5; _Bool|41-70
76772|code|BLX             set_field_status|255-247-68-232
76776|code|MOV             R0, R4|32-70
76778|code|ADD             SP, SP, #0xC|3-176
76780|code|POP             {R4-R7,PC}|240-189
76782|data|ALIGN 0x10|0-191
76784|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12BB0|80-68-1-0
76788|data|DCD COLS_ptr - 0x27000|208-1-0-0
76792|code|PUSH            {R4-R6,LR}|112-181
76794|code|MOVW            R3, #0x105|64-242-5-19
76798|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x12C06)|113-76
76800|code|CMP             R1, R3|153-66
76802|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
76804|code|BEQ.W           loc_12D74|0-240-182-128
76808|code|CMP.W           R1, #0x106|177-245-131-127
76812|code|MOV             R5, R0|5-70
76814|code|BLT             loc_12C3E|22-219
76816|code|MOVW            R3, #0x14B|64-242-75-19
76820|code|CMP             R1, R3|153-66
76822|code|BEQ             loc_12CA6|70-208
76824|code|CMP.W           R1, #0x14C|177-245-166-127
76828|code|BGE             loc_12C66|35-218
76830|code|MOVW            R3, #0x107|64-242-7-19
76834|code|CMP             R1, R3|153-66
76836|code|BEQ             loc_12C8C|50-208
76838|code|CMP.W           R1, #0x106|177-245-131-127
76842|code|BLE.W           loc_12D60|64-243-153-128
76846|code|CMP.W           R1, #0x14A|177-245-165-127
76850|code|BNE             loc_12C7A|34-209
76852|code|MOVW            R1, #0x221|64-242-33-33
76856|code|POP.W           {R4-R6,LR}|189-232-112-64
76860|code|B               sub_12A04|226-230
76862|code|CMP             R1, #0x1B|27-41
76864|code|BEQ.W           loc_12D48|0-240-130-128
76868|code|BLE             loc_12CC4|62-221
76870|code|MOVW            R3, #0x103|64-242-3-19
76874|code|CMP             R1, R3|153-66
76876|code|BEQ             loc_12C82|25-208
76878|code|CMP.W           R1, #0x104|177-245-130-127
76882|code|BGE.W           loc_12D7E|128-242-148-128
76886|code|CMP.W           R1, #0x102|177-245-129-127
76890|code|BNE             loc_12C7A|14-209
76892|code|MOV.W           R1, #0x204|79-244-1-113
76896|code|POP.W           {R4-R6,LR}|189-232-112-64
76900|code|B               sub_12A44|238-230
76902|code|MOVW            R3, #0x153|64-242-83-19
76906|code|CMP             R1, R3|153-66
76908|code|BEQ             loc_12C9C|22-208
76910|code|CMP.W           R1, #0x168|177-245-180-127
76914|code|BEQ             loc_12D6A|122-208
76916|code|CMP.W           R1, #0x152|177-245-169-127
76920|code|BEQ             loc_12CBA|31-208
76922|code|MOV             R0, R5|40-70
76924|code|POP.W           {R4-R6,LR}|189-232-112-64
76928|code|B               sub_12A04|192-230
76930|code|MOVW            R1, #0x205|64-242-5-33
76934|code|POP.W           {R4-R6,LR}|189-232-112-64
76938|code|B               sub_12A44|219-230
76940|code|MOVW            R1, #0x21A|64-242-26-33
76944|code|BL              sub_12A04|255-247-184-254
76948|code|CMP             R0, #0|0-40
76950|code|BEQ.W           loc_12DA2|0-240-132-128
76954|code|POP             {R4-R6,PC}|112-189
76956|code|MOVW            R1, #0x206|64-242-6-33
76960|code|POP.W           {R4-R6,LR}|189-232-112-64
76964|code|B               sub_12A44|206-230
76966|code|LDR             R3, [R0,#0x34]|67-107
76968|code|CMP             R3, #0|0-43
76970|code|BEQ             loc_12D88|109-208
76972|code|MOVS            R3, #0|0-35
76974|code|MOVW            R1, #0x229|64-242-41-33
76978|code|STR             R3, [R0,#0x34]|67-99
76980|code|POP.W           {R4-R6,LR}|189-232-112-64
76984|code|B               sub_12A04|164-230
76986|code|MOVW            R1, #0x207|64-242-7-33
76990|code|POP.W           {R4-R6,LR}|189-232-112-64
76994|code|B               sub_12A44|191-230
76996|code|CMP             R1, #0xA|10-41
76998|code|BEQ             loc_12CCC|1-208
77000|code|CMP             R1, #0xD|13-41
77002|code|BNE             loc_12C7A|214-209
77004|code|MOVW            R1, #0x236; int|64-242-54-33
77008|code|LDR             R0, [R5,#0x2C]; FORM *|232-106
77010|code|BLX             form_driver|254-247-136-238
77014|code|LDR             R2, =(aStructPbBootDa - 0x12CE0); "struct pb_boot_data"|60-74
77016|code|MOV             R0, R5|40-70
77018|code|MOVS            R1, #0xC|12-33
77020|code|ADD             R2, PC; "struct pb_boot_data"|122-68
77022|code|BL              sub_14A14|1-240-153-254
77026|code|MOV             R6, R0|6-70
77028|code|CBZ             R0, loc_12D2E|24-179
77030|code|LDR             R3, [R5,#0x30]|43-107
77032|code|MOVS            R1, #0; int|0-33
77034|code|LDR             R0, [R3]; FIELD *|24-104
77036|code|BLX             field_buffer|254-247-30-239
77040|code|BL              sub_12AE4|255-247-248-254
77044|code|LDRB            R3, [R0]|3-120
77046|code|CMP             R3, #0|0-43
77048|code|BNE             loc_12D98|78-209
77050|code|MOV             R0, R3|24-70
77052|code|LDR             R3, [R5,#0x30]|43-107
77054|code|MOVS            R1, #0; int|0-33
77056|code|STR             R0, [R6]|48-96
77058|code|LDR             R0, [R3,#4]; FIELD *|88-104
77060|code|BLX             field_buffer|254-247-18-239
77064|code|BL              sub_12AE4|255-247-236-254
77068|code|LDRB            R3, [R0]|3-120
77070|code|CMP             R3, #0|0-43
77072|code|BNE             loc_12DB8|82-209
77074|code|MOV             R0, R3|24-70
77076|code|LDR             R3, [R5,#0x30]|43-107
77078|code|MOVS            R1, #0; int|0-33
77080|code|STR             R0, [R6,#4]|112-96
77082|code|LDR             R0, [R3,#8]; FIELD *|152-104
77084|code|BLX             field_buffer|254-247-6-239
77088|code|BL              sub_12AE4|255-247-224-254
77092|code|LDRB            R3, [R0]|3-120
77094|code|CMP             R3, #0|0-43
77096|code|BNE             loc_12DAE|65-209
77098|code|MOV             R0, R3|24-70
77100|code|STR             R0, [R6,#8]|176-96
77102|code|LDR             R3, [R5,#0x38]|171-107
77104|code|MOV             R2, R6|50-70
77106|code|MOV             R0, R5|40-70
77108|code|MOVS            R1, #1|1-33
77110|code|BLX             R3|152-71
77112|code|LDR             R3, =(stdscr_ptr - 0x27000)|36-75
77114|code|LDR             R4, [R4,R3]; stdscr|228-88
77116|code|LDR             R0, [R4]; WINDOW *|32-104
77118|code|BLX             wgetch|254-247-72-239
77122|code|ADDS            R0, #1|1-48
77124|code|BNE             loc_12D3C|250-209
77126|code|POP             {R4-R6,PC}|112-189
77128|code|MOVS            R1, #0|0-33
77130|code|LDR             R3, [R0,#0x38]|131-107
77132|code|MOV             R2, R1|10-70
77134|code|BLX             R3|152-71
77136|code|LDR             R3, =(stdscr_ptr - 0x27000)|30-75
77138|code|LDR             R4, [R4,R3]; stdscr|228-88
77140|code|LDR             R0, [R4]; WINDOW *|32-104
77142|code|BLX             wgetch|254-247-60-239
77146|code|ADDS            R0, #1|1-48
77148|code|BNE             loc_12D54|250-209
77150|code|POP             {R4-R6,PC}|112-189
77152|code|MOVW            R1, #0x216|64-242-22-33
77156|code|POP.W           {R4-R6,LR}|189-232-112-64
77160|code|B               sub_12A04|76-230
77162|code|MOVW            R1, #0x217|64-242-23-33
77166|code|POP.W           {R4-R6,LR}|189-232-112-64
77170|code|B               sub_12A04|71-230
77172|code|MOVW            R1, #0x21B|64-242-27-33
77176|code|POP.W           {R4-R6,LR}|189-232-112-64
77180|code|B               sub_12A04|66-230
77182|code|MOVW            R1, #0x21A|64-242-26-33
77186|code|POP.W           {R4-R6,LR}|189-232-112-64
77190|code|B               sub_12A04|61-230
77192|code|MOV.W           R3, #0x20000|79-244-0-51
77196|code|MOV.W           R1, #0x228|79-244-10-113
77200|code|STR             R3, [R0,#0x34]|67-99
77202|code|POP.W           {R4-R6,LR}|189-232-112-64
77206|code|B               sub_12A04|53-230
77208|code|MOV             R1, R0|1-70
77210|code|MOV             R0, R6|48-70
77212|code|BL              sub_15250|2-240-88-250
77216|code|B               loc_12CFC|172-231
77218|code|MOV             R0, R5|40-70
77220|code|MOVW            R1, #0x221|64-242-33-33
77224|code|POP.W           {R4-R6,LR}|189-232-112-64
77228|code|B               sub_12A04|42-230
77230|code|MOV             R1, R0|1-70
77232|code|MOV             R0, R6|48-70
77234|code|BL              sub_15250|2-240-77-250
77238|code|B               loc_12D2C|185-231
77240|code|MOV             R1, R0|1-70
77242|code|MOV             R0, R6|48-70
77244|code|BL              sub_15250|2-240-72-250
77248|code|B               loc_12D14|168-231
77250|data|ALIGN 4|0-191
77252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12C06|250-67-1-0
77256|data|DCD aStructPbBootDa - 0x12CE0; "struct pb_boot_data"|100-50-0-0
77260|data|DCD stdscr_ptr - 0x27000|212-1-0-0
77264|code|PUSH.W          {R4-R8,LR}|45-233-240-65
77268|code|MOV             R6, R0|6-70
77270|code|LDR             R4, =(aBootEditorInit - 0x12DE2); "boot_editor_init"|68-76
77272|code|SUB             SP, SP, #0x10|132-176
77274|code|LDR             R0, =(aSImageS - 0x12DE6); "%s: image:  '%s'\n"|68-72
77276|code|MOV             R5, R1|13-70
77278|code|ADD             R4, PC; "boot_editor_init"|124-68
77280|code|MOV             R8, R2|144-70
77282|code|ADD             R0, PC; "%s: image:  '%s'\n"|120-68
77284|code|LDR             R2, [R1]|10-104
77286|code|MOV             R1, R4|33-70
77288|code|BL              sub_13D9C|0-240-216-255
77292|code|LDR             R0, =(aSInitrdS - 0x12DF6); "%s: initrd: '%s'\n"|64-72
77294|code|MOV             R1, R4|33-70
77296|code|LDR             R2, [R5,#4]|106-104
77298|code|ADD             R0, PC; "%s: initrd: '%s'\n"|120-68
77300|code|BL              sub_13D9C|0-240-210-255
77304|code|LDR             R0, =(aSArgsS - 0x12E02); "%s: args:   '%s'\n"|62-72
77306|code|MOV             R1, R4|33-70
77308|code|LDR             R2, [R5,#8]|170-104
77310|code|ADD             R0, PC; "%s: args:   '%s'\n"|120-68
77312|code|BL              sub_13D9C|0-240-204-255
77316|code|LDR             R2, =(aStructBootEdit - 0x12E0E); "struct boot_editor"|60-74
77318|code|MOV             R0, R6|48-70
77320|code|MOVS            R1, #0x3C ; '<'|60-33
77322|code|ADD             R2, PC; "struct boot_editor"|122-68
77324|code|BL              sub_15218|2-240-4-250
77328|code|MOV             R4, R0|4-70
77330|code|CMP             R0, #0|0-40
77332|code|BEQ             loc_12EDE|99-208
77334|code|LDR             R1, =(sub_12B3C+1 - 0x12E1E)|57-73
77336|code|LDR             R7, =(loc_129FC+1 - 0x12E30)|57-79
77338|code|ADD             R1, PC; sub_12B3C|121-68
77340|code|BL              sub_149FC|1-240-238-253
77344|code|MOV             R3, R6|51-70
77346|code|LDR             R2, =(sub_12BF8+1 - 0x12E34)|56-74
77348|code|MOV.W           R1, #0x1BC|79-244-222-113
77352|code|LDR.W           LR, =(sub_12A7C+1 - 0x12E36)|223-248-220-224
77356|code|ADD             R7, PC; loc_129FC|127-68
77358|code|LDR             R6, =(sub_12AD0+1 - 0x12E40)|55-78
77360|code|ADD             R2, PC; sub_12BF8|122-68
77362|code|ADD             LR, PC; sub_12A7C|254-68
77364|code|STR             R2, [SP,#0x28+var_28]|0-146
77366|code|STR.W           LR, [SP,#0x28+var_24]|205-248-4-224
77370|code|MOVS            R2, #0|0-34
77372|code|ADD             R6, PC; sub_12AD0|126-68
77374|code|MOV             R0, R4|32-70
77376|code|STR             R6, [SP,#0x28+var_1C]|3-150
77378|code|STR             R7, [SP,#0x28+var_20]|2-151
77380|code|BL              sub_135F8|0-240-216-251
77384|code|LDR             R1, =(aPetitbootOptio - 0x12E50); "Petitboot Option Editor"|49-73
77386|code|MOV             R0, R4|32-70
77388|code|ADD             R1, PC; "Petitboot Option Editor"|121-68
77390|code|BL              sub_15250|2-240-255-249
77394|code|LDR             R1, =(aEscCancelEnter - 0x12E58); "ESC=cancel, Enter=accept"|48-73
77396|code|ADD             R1, PC; "ESC=cancel, Enter=accept"|121-68
77398|code|STR             R0, [R4,#4]|96-96
77400|code|MOV             R0, R4|32-70
77402|code|BL              sub_15250|2-240-249-249
77406|code|LDR             R3, =(aField - 0x12E68); "FIELD *"|46-75
77408|code|MOVS            R2, #7|7-34
77410|code|MOVS            R1, #4|4-33
77412|code|ADD             R3, PC; "FIELD *"|123-68
77414|code|STR.W           R8, [R4,#0x38]|196-248-56-128
77418|code|STR             R0, [R4,#8]|160-96
77420|code|MOV             R0, R4|32-70
77422|code|BL              sub_15488|2-240-11-251
77426|code|LDR             R1, [R5]|41-104
77428|code|MOV             R6, R0|6-70
77430|code|MOVS            R0, #0; int|0-32
77432|code|STR             R6, [R4,#0x30]|38-99
77434|code|BL              sub_12BA0|255-247-145-254
77438|code|STR             R0, [R6]|48-96
77440|code|MOVS            R0, #1; int|1-32
77442|code|LDR             R1, [R5,#4]|105-104
77444|code|LDR             R6, [R4,#0x30]|38-107
77446|code|BL              sub_12BA0|255-247-139-254
77450|code|STR             R0, [R6,#4]|112-96
77452|code|MOVS            R0, #2; int|2-32
77454|code|LDR             R1, [R5,#8]|169-104
77456|code|LDR             R5, [R4,#0x30]|37-107
77458|code|BL              sub_12BA0|255-247-133-254
77462|code|LDR             R1, =(aImage - 0x12E9C); "image:"|33-73
77464|code|ADD             R1, PC; "image:"|121-68
77466|code|STR             R0, [R5,#8]|168-96
77468|code|MOVS            R0, #0|0-32
77470|code|LDR             R5, [R4,#0x30]|37-107
77472|code|BL              sub_12B68|255-247-98-254
77476|code|LDR             R1, =(aInitrd - 0x12EAA); "initrd:"|30-73
77478|code|ADD             R1, PC; "initrd:"|121-68
77480|code|STR             R0, [R5,#0xC]|232-96
77482|code|MOVS            R0, #1|1-32
77484|code|LDR             R5, [R4,#0x30]|37-107
77486|code|BL              sub_12B68|255-247-91-254
77490|code|LDR             R1, =(aArgs - 0x12EB8); "args:"|28-73
77492|code|ADD             R1, PC; "args:"|121-68
77494|code|STR             R0, [R5,#0x10]|40-97
77496|code|MOVS            R0, #2|2-32
77498|code|LDR             R5, [R4,#0x30]|37-107
77500|code|BL              sub_12B68|255-247-84-254
77504|code|MOVS            R2, #0|0-34
77506|code|STR             R0, [R5,#0x14]|104-97
77508|code|LDR             R3, [R4,#0x30]|35-107
77510|code|STR             R2, [R3,#0x18]|154-97
77512|code|LDR             R0, [R4,#0x30]; FIELD **|32-107
77514|code|BLX             new_form|254-247-180-238
77518|code|LDR             R1, [R4,#0x10]; WINDOW *|33-105
77520|code|STR             R0, [R4,#0x2C]|224-98
77522|code|BLX             set_form_win|254-247-26-238
77526|code|LDR             R0, [R4,#0x2C]; FORM *|224-106
77528|code|LDR             R1, [R4,#0x14]; WINDOW *|97-105
77530|code|BLX             set_form_sub|254-247-184-238
77534|code|MOV             R0, R4|32-70
77536|code|ADD             SP, SP, #0x10|4-176
77538|code|POP.W           {R4-R8,PC}|189-232-240-129
77542|data|ALIGN 4|0-191
77544|data|DCD aBootEditorInit - 0x12DE2; "boot_editor_init"|158-51-0-0
77548|data|DCD aSImageS - 0x12DE6; "%s: image:  '%s'\n"|174-51-0-0
77552|data|DCD aSInitrdS - 0x12DF6; "%s: initrd: '%s'\n"|178-51-0-0
77556|data|DCD aSArgsS - 0x12E02; "%s: args:   '%s'\n"|186-51-0-0
77560|data|DCD aStructBootEdit - 0x12E0E; "struct boot_editor"|194-51-0-0
77564|data|DCD sub_12B3C+1 - 0x12E1E|31-253-255-255
77568|data|DCD loc_129FC+1 - 0x12E30|205-251-255-255
77572|data|DCD sub_12BF8+1 - 0x12E34|197-253-255-255
77576|data|DCD sub_12A7C+1 - 0x12E36|71-252-255-255
77580|data|DCD sub_12AD0+1 - 0x12E40|145-252-255-255
77584|data|DCD aPetitbootOptio - 0x12E50; "Petitboot Option Editor"|148-51-0-0
77588|data|DCD aEscCancelEnter - 0x12E58; "ESC=cancel, Enter=accept"|164-51-0-0
77592|data|DCD aField - 0x12E68; "FIELD *"|176-51-0-0
77596|data|DCD aImage - 0x12E9C; "image:"|132-51-0-0
77600|data|DCD aInitrd - 0x12EAA; "initrd:"|126-51-0-0
77604|data|DCD aArgs - 0x12EB8; "args:"|120-51-0-0
77608|code|LDR             R0, [R0,#0x2C]|192-106
77610|code|B.W             j_unpost_menu|254-247-195-188
77614|data|ALIGN 0x10|0-191
77616|code|PUSH            {R3-R5,LR}|56-181
77618|code|MOV             R4, R0|4-70
77620|code|LDR             R0, [R0,#0x2C]; MENU *|192-106
77622|code|BLX             post_menu|254-247-212-236
77626|code|MOV             R5, R0|5-70
77628|code|MOV             R0, R4|32-70
77630|code|BL              sub_134A8|0-240-179-250
77634|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
77636|code|CBZ             R0, loc_12F5C|80-177
77638|code|LDRSH.W         R2, [R0,#4]|176-249-4-32
77642|code|ADDS            R2, #1; int|1-50
77644|code|MOVS            R1, #0; int|0-33
77646|code|BLX             wredrawln|254-247-198-238
77650|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
77652|code|BLX             wrefresh|254-247-224-236
77656|code|MOV             R0, R5|40-70
77658|code|POP             {R3-R5,PC}|56-189
77660|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
77664|code|B               loc_12F4C|244-231
77666|data|ALIGN 4|0-191
77668|code|PUSH            {R4,LR}|16-181
77670|code|MOV             R4, R0|4-70
77672|code|LDR             R0, [R0,#0x2C]; MENU *|192-106
77674|code|BLX             unpost_menu|254-247-166-236
77678|code|MOV             R0, R4|32-70
77680|code|POP.W           {R4,LR}|189-232-16-64
77684|code|B               sub_12F30|220-231
77686|data|ALIGN 4|0-191
77688|code|LDR             R3, [R0,#8]|131-104
77690|code|PUSH            {R4-R6,LR}|112-181
77692|code|LDR             R6, [R3,#0x34]|94-107
77694|code|CBZ             R6, loc_12FB8|222-177
77696|code|LDR             R1, [R3,#0x30]|25-107
77698|code|LDR             R5, [R0,#4]|69-104
77700|code|LDR             R3, [R1]|11-104
77702|code|CMP             R3, R5|171-66
77704|code|IT NE|24-191
77706|code|MOVNE           R3, #0|0-35
77708|code|BNE             loc_12F98|4-209
77710|code|B               loc_12FBC|21-224
77712|code|LDR.W           R4, [R1,#4]!|81-248-4-79
77716|code|CMP             R4, R5|172-66
77718|code|BEQ             loc_12FB4|13-208
77720|code|ADDS            R3, #1|1-51
77722|code|CMP             R3, R6|179-66
77724|code|BNE             loc_12F90|248-209
77726|code|MOV             R2, R0|2-70
77728|code|LDR             R1, =(aPmenuItemGetIn - 0x12FAA); "pmenu_item_get_index"|7-73
77730|code|LDR             R0, =(aSNotFoundPS - 0x12FAC); "%s: not found: %p %s\n"|8-72
77732|code|LDR             R3, [R5]|43-104
77734|code|ADD             R1, PC; "pmenu_item_get_index"|121-68
77736|code|ADD             R0, PC; "%s: not found: %p %s\n"|120-68
77738|code|BL              sub_13D9C|0-240-247-254
77742|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
77746|code|POP             {R4-R6,PC}|112-189
77748|code|MOV             R0, R3|24-70
77750|code|POP             {R4-R6,PC}|112-189
77752|code|LDR             R5, [R0,#4]|69-104
77754|code|B               loc_12F9E|240-231
77756|code|MOVS            R0, #0|0-32
77758|code|POP             {R4-R6,PC}|112-189
77760|data|DCD aPmenuItemGetIn - 0x12FAA; "pmenu_item_get_index"|142-50-0-0
77764|data|DCD aSNotFoundPS - 0x12FAC; "%s: not found: %p %s\n"|204-50-0-0
77768|code|LDR             R0, [R0,#8]|128-104
77770|code|PUSH            {R3,LR}|8-181
77772|code|LDR             R3, [R0,#0x40]|3-108
77774|code|BLX             R3|152-71
77776|code|MOVS            R0, #0|0-32
77778|code|POP             {R3,PC}|8-189
77780|code|PUSH            {R3,LR}|8-181
77782|code|LDR             R0, [R0,#0x2C]; MENU *|192-106
77784|code|BLX             current_item|254-247-58-236
77788|code|POP.W           {R3,LR}|189-232-8-64
77792|code|B.W             j_item_userptr|254-247-14-190
77796|code|PUSH.W          {R4-R8,LR}|45-233-240-65
77800|code|MOV             R5, R0|5-70
77802|code|MOV             R4, R1|12-70
77804|code|BL              sub_12FD4|255-247-242-255
77808|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x12FF6)|71-78
77810|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
77812|code|MOV             R7, R0|7-70
77814|code|MOV             R0, R5|40-70
77816|code|BL              sub_13554|0-240-172-250
77820|code|LDR             R3, [R5,#0x3C]|235-107
77822|code|CBZ             R3, loc_1300A|35-177
77824|code|MOV             R2, R4|34-70
77826|code|MOV             R0, R5|40-70
77828|code|MOV             R1, R7|57-70
77830|code|BLX             R3|152-71
77832|code|MOV             R4, R0|4-70
77834|code|CMP.W           R4, #0x102|180-245-129-127
77838|code|BEQ             loc_130FA|116-208
77840|code|BLE             loc_1303C|20-221
77842|code|CMP.W           R4, #0x152|180-245-169-127
77846|code|BEQ             loc_130AE|74-208
77848|code|BGT             loc_13058|30-220
77850|code|MOVW            R3, #0x103|64-242-3-19
77854|code|CMP             R4, R3|156-66
77856|code|BEQ             loc_1309A|59-208
77858|code|CMP.W           R4, #0x106|180-245-131-127
77862|code|BNE             loc_130D4|85-209
77864|code|LDR             R0, [R5,#0x2C]; MENU *|232-106
77866|code|MOV.W           R1, #0x208; int|79-244-2-113
77870|code|BLX             menu_driver|254-247-76-236
77874|code|LDR             R0, [R5,#0x10]|40-105
77876|code|POP.W           {R4-R8,LR}|189-232-240-65
77880|code|B.W             j_wrefresh|254-247-108-188
77884|code|CMP             R4, #0x1B|27-44
77886|code|BEQ             loc_130E0|79-208
77888|code|BLE             loc_130C2|63-221
77890|code|CMP             R4, #0x65 ; 'e'|101-44
77892|code|BEQ             loc_1308E|35-208
77894|code|CMP             R4, #0x6F ; 'o'|111-44
77896|code|BNE             loc_130D4|68-209
77898|code|LDR             R3, [R5,#0x44]|107-108
77900|code|CMP             R3, #0|0-43
77902|code|BEQ             locret_130D0|63-208
77904|code|MOV             R0, R5|40-70
77906|code|POP.W           {R4-R8,LR}|189-232-240-65
77910|code|BX              R3|24-71
77912|code|MOVW            R3, #0x153|64-242-83-19
77916|code|CMP             R4, R3|156-66
77918|code|BEQ             loc_1307A|12-208
77920|code|CMP.W           R4, #0x168|180-245-180-127
77924|code|BNE             loc_130D4|54-209
77926|code|LDR             R0, [R5,#0x2C]; MENU *|232-106
77928|code|MOVW            R1, #0x209; int|64-242-9-33
77932|code|BLX             menu_driver|254-247-44-236
77936|code|LDR             R0, [R5,#0x10]|40-105
77938|code|POP.W           {R4-R8,LR}|189-232-240-65
77942|code|B.W             j_wrefresh|254-247-77-188
77946|code|LDR             R0, [R5,#0x2C]; MENU *|232-106
77948|code|MOVW            R1, #0x207; int|64-242-7-33
77952|code|BLX             menu_driver|254-247-34-236
77956|code|LDR             R0, [R5,#0x10]|40-105
77958|code|POP.W           {R4-R8,LR}|189-232-240-65
77962|code|B.W             j_wrefresh|254-247-67-188
77966|code|LDR             R3, [R7,#0x10]|59-105
77968|code|CBZ             R3, locret_130D0|243-177
77970|code|MOV             R0, R7|56-70
77972|code|POP.W           {R4-R8,LR}|189-232-240-65
77976|code|BX              R3|24-71
77978|code|LDR             R0, [R5,#0x2C]; MENU *|232-106
77980|code|MOVW            R1, #0x202; int|64-242-2-33
77984|code|BLX             menu_driver|254-247-18-236
77988|code|LDR             R0, [R5,#0x10]|40-105
77990|code|POP.W           {R4-R8,LR}|189-232-240-65
77994|code|B.W             j_wrefresh|254-247-51-188
77998|code|LDR             R0, [R5,#0x2C]; MENU *|232-106
78000|code|MOVW            R1, #0x206; int|64-242-6-33
78004|code|BLX             menu_driver|254-247-8-236
78008|code|LDR             R0, [R5,#0x10]|40-105
78010|code|POP.W           {R4-R8,LR}|189-232-240-65
78014|code|B.W             j_wrefresh|254-247-41-188
78018|code|CMP             R4, #0xA|10-44
78020|code|BEQ             loc_130CA|1-208
78022|code|CMP             R4, #0xD|13-44
78024|code|BNE             loc_130D4|4-209
78026|code|LDR             R3, [R7,#0x14]|123-105
78028|code|CMP             R3, #0|0-43
78030|code|BNE             loc_13092|224-209
78032|code|POP.W           {R4-R8,PC}|189-232-240-129
78036|code|LDR             R0, [R5,#0x2C]|232-106
78038|code|MOV             R1, R4|33-70
78040|code|POP.W           {R4-R8,LR}|189-232-240-65
78044|code|B.W             j_menu_driver|254-247-242-187
78048|code|LDR             R3, [R5,#0x40]|43-108
78050|code|CBZ             R3, loc_130E8|11-177
78052|code|MOV             R0, R5|40-70
78054|code|BLX             R3|152-71
78056|code|LDR             R3, =(stdscr_ptr - 0x27000)|10-75
78058|code|LDR             R4, [R6,R3]; stdscr|244-88
78060|code|LDR             R0, [R4]; WINDOW *|32-104
78062|code|BLX             wgetch|254-247-112-237
78066|code|ADDS            R0, #1|1-48
78068|code|BNE             loc_130EC|250-209
78070|code|POP.W           {R4-R8,PC}|189-232-240-129
78074|code|LDR             R0, [R5,#0x2C]; MENU *|232-106
78076|code|MOVW            R1, #0x203; int|64-242-3-33
78080|code|BLX             menu_driver|254-247-226-235
78084|code|LDR             R0, [R5,#0x10]|40-105
78086|code|POP.W           {R4-R8,LR}|189-232-240-65
78090|code|B.W             j_wrefresh|254-247-3-188
78094|data|ALIGN 0x10|0-191
78096|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12FF6|10-64-1-0
78100|data|DCD stdscr_ptr - 0x27000|212-1-0-0
78104|code|LDR             R2, =(aStructPmenuIte - 0x13120); "struct pmenu_item"|2-74
78106|code|MOVS            R1, #0x18|24-33
78108|code|ADD             R2, PC; "struct pmenu_item"|122-68
78110|code|B.W             sub_15218|2-240-123-184
78114|data|ALIGN 4|0-191
78116|data|DCD aStructPmenuIte - 0x13120; "struct pmenu_item"|112-49-0-0
78120|code|CBZ             R1, loc_1315A|185-177
78122|code|PUSH            {R3-R7,LR}|248-181
78124|code|MOV             R4, R1|12-70
78126|code|MOV             R5, R0|5-70
78128|code|MOV             R0, R3; char *|24-70
78130|code|STR             R5, [R1,#8]|141-96
78132|code|MOVW            R3, #0x14D|64-242-77-19
78136|code|MOVS            R1, #0; char *|0-33
78138|code|STR             R3, [R4]|35-96
78140|code|MOV             R7, R2|23-70
78142|code|BLX             new_item|254-247-22-237
78146|code|MOV             R6, R0|6-70
78148|code|STR             R0, [R4,#4]|96-96
78150|code|CBZ             R0, loc_1315E|80-177
78152|code|MOV             R1, R4; void *|33-70
78154|code|BLX             set_item_userptr|254-247-170-237
78158|code|LDR             R3, [R5,#0x30]|43-107
78160|code|LDR             R2, [R4,#4]|98-104
78162|code|MOV             R0, R4|32-70
78164|code|STR.W           R2, [R3,R7,LSL#2]|67-248-39-32
78168|code|POP             {R3-R7,PC}|248-189
78170|code|MOV             R0, R1|8-70
78172|code|BX              LR|112-71
78174|code|MOV             R0, R4|32-70
78176|code|BL              sub_14BC0|1-240-46-253
78180|code|MOV             R0, R6|48-70
78182|code|POP             {R3-R7,PC}|248-189
78184|code|PUSH            {R3-R7,LR}|248-181
78186|code|MOV             R5, R0|5-70
78188|code|MOV             R6, R1|14-70
78190|code|LDR             R4, [R0,#8]|132-104
78192|code|BL              sub_12F78|255-247-2-255
78196|code|SUBS            R7, R0, #0|7-30
78198|code|BLT             loc_131B8|31-219
78200|code|MOV             R0, R6; char *|48-70
78202|code|MOVS            R1, #0; char *|0-33
78204|code|BLX             new_item|254-247-246-236
78208|code|MOV             R6, R0|6-70
78210|code|CBZ             R0, loc_131B8|200-177
78212|code|MOV             R1, R5; void *|41-70
78214|code|BLX             set_item_userptr|254-247-140-237
78218|code|LDR             R3, [R4,#0x20]|35-106
78220|code|MOV             R0, R4|32-70
78222|code|BLX             R3|152-71
78224|code|MOVS            R1, #0; ITEM **|0-33
78226|code|LDR             R0, [R4,#0x2C]; MENU *|224-106
78228|code|BLX             set_menu_items|254-247-168-237
78232|code|LDR             R0, [R5,#4]; ITEM *|104-104
78234|code|BLX             free_item|254-247-0-236
78238|code|LDR             R3, [R4,#0x30]|35-107
78240|code|STR.W           R6, [R3,R7,LSL#2]|67-248-39-96
78244|code|STR             R6, [R5,#4]|110-96
78246|code|LDR             R1, [R4,#0x30]; ITEM **|33-107
78248|code|LDR             R0, [R4,#0x2C]; MENU *|224-106
78250|code|BLX             set_menu_items|254-247-158-237
78254|code|LDR             R3, [R4,#0x1C]|227-105
78256|code|MOV             R0, R4|32-70
78258|code|BLX             R3|152-71
78260|code|MOVS            R0, #0|0-32
78262|code|POP             {R3-R7,PC}|248-189
78264|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78268|code|POP             {R3-R7,PC}|248-189
78270|data|ALIGN 0x10|0-191
78272|code|PUSH            {R4-R6,LR}|112-181
78274|code|MOV             R4, R0|4-70
78276|code|LDR             R0, =(aPmenuItemGetIn - 0x131D0); "pmenu_item_get_index"|26-72
78278|code|SUB             SP, SP, #8|130-176
78280|code|MOV             R5, R1|13-70
78282|code|LDR             R2, [R4,#0x34]|98-107
78284|code|ADD             R0, PC; "pmenu_item_get_index"|120-68
78286|code|MOV             R3, R1|11-70
78288|code|ADDS            R6, R5, R2|174-24
78290|code|STR             R6, [SP,#0x18+var_18]|0-150
78292|code|MOV             R1, R0|1-70
78294|code|LDR             R0, =(aSUCurrentUNewU - 0x131E0); "%s: %u current + %u new = %u\n"|23-72
78296|code|ADDS            R1, #0x18|24-49
78298|code|LDR             R6, =(aItem - 0x131EE); "ITEM *"|23-78
78300|code|ADD             R0, PC; "%s: %u current + %u new = %u\n"|120-68
78302|code|BL              sub_13D9C|0-240-221-253
78306|code|LDR             R3, [R4,#0x34]|99-107
78308|code|LDR             R1, [R4,#0x30]|33-107
78310|code|MOV             R0, R4|32-70
78312|code|ADDS            R3, #1|1-51
78314|code|ADD             R6, PC; "ITEM *"|126-68
78316|code|ADD             R3, R5|43-68
78318|code|MOVS            R2, #4|4-34
78320|code|STR             R6, [SP,#0x18+var_18]|0-150
78322|code|BL              sub_154E0|2-240-117-249
78326|code|LDR             R2, [R4,#0x34]|98-107
78328|code|LDR             R1, [R4,#0x38]|161-107
78330|code|ADDS            R2, #1|1-50
78332|code|ADDS            R3, R5, R1|107-24
78334|code|SUBS            R2, R2, R1|82-26
78336|code|LSLS            R2, R2, #2; n|146-0
78338|code|STR             R0, [R4,#0x30]|32-99
78340|code|ADD.W           R1, R0, R1,LSL#2; src|0-235-129-1
78344|code|ADD.W           R0, R0, R3,LSL#2; dest|0-235-131-0
78348|code|BLX             memmove|254-247-20-235
78352|code|LDR             R0, [R4,#0x38]|160-107
78354|code|LDR             R3, [R4,#0x30]|35-107
78356|code|LSLS            R2, R5, #2; n|170-0
78358|code|MOVS            R1, #0; c|0-33
78360|code|ADD.W           R0, R3, R0,LSL#2; s|3-235-128-0
78364|code|BLX             memset|254-247-160-236
78368|code|LDR             R0, [R4,#0x38]|160-107
78370|code|LDR             R3, [R4,#0x34]|99-107
78372|code|ADDS            R2, R5, R0|42-24
78374|code|STR             R2, [R4,#0x38]|162-99
78376|code|ADD             R5, R3|29-68
78378|code|STR             R5, [R4,#0x34]|101-99
78380|code|ADD             SP, SP, #8|2-176
78382|code|POP             {R4-R6,PC}|112-189
78384|data|DCD aPmenuItemGetIn - 0x131D0; "pmenu_item_get_index"|104-48-0-0
78388|data|DCD aSUCurrentUNewU - 0x131E0; "%s: %u current + %u new = %u\n"|196-48-0-0
78392|data|DCD aItem - 0x131EE; "ITEM *"|214-48-0-0
78396|code|LDR             R3, =(aPmenuItemGetIn - 0x13244); "pmenu_item_get_index"|28-75
78398|code|PUSH            {R4-R6,LR}|112-181
78400|code|ADD             R3, PC; "pmenu_item_get_index"|123-68
78402|code|LDR             R2, [R0,#0x34]|66-107
78404|code|MOV             R4, R0|4-70
78406|code|LDR             R0, =(aSU - 0x13252); "%s: %u\n"|27-72
78408|code|SUB             SP, SP, #8|130-176
78410|code|MOV             R6, R1|14-70
78412|code|MOV             R1, R3|25-70
78414|code|ADD             R0, PC; "%s: %u\n"|120-68
78416|code|ADDS            R1, #0x24 ; '$'|36-49
78418|code|BL              sub_13D9C|0-240-163-253
78422|code|MOV             R0, R6|48-70
78424|code|BL              sub_12F78|255-247-142-254
78428|code|SUBS            R5, R0, #0|5-30
78430|code|BLT             loc_132A8|35-219
78432|code|LDR             R0, [R6,#4]; ITEM *|112-104
78434|code|BLX             free_item|254-247-156-235
78438|code|MOV             R0, R6|48-70
78440|code|BL              sub_14BC0|1-240-170-252
78444|code|LDR             R3, [R4,#0x34]|99-107
78446|code|LSLS            R0, R5, #2|168-0
78448|code|LDR             R6, [R4,#0x30]|38-107
78450|code|SUBS            R2, R3, R5|90-27
78452|code|LDR             R5, [R4,#0x38]|165-107
78454|code|ADDS            R1, R0, #4|1-29
78456|code|SUBS            R3, #1|1-59
78458|code|LSLS            R2, R2, #2; n|146-0
78460|code|STR             R3, [R4,#0x34]|99-99
78462|code|ADD             R1, R6; src|49-68
78464|code|SUBS            R5, #1|1-61
78466|code|ADD             R0, R6; dest|48-68
78468|code|STR             R5, [R4,#0x38]|165-99
78470|code|BLX             memmove|254-247-216-234
78474|code|LDR             R5, =(aItem - 0x13296); "ITEM *"|11-77
78476|code|LDR             R3, [R4,#0x34]|99-107
78478|code|MOV             R0, R4|32-70
78480|code|LDR             R1, [R4,#0x30]|33-107
78482|code|ADD             R5, PC; "ITEM *"|125-68
78484|code|ADDS            R3, #1|1-51
78486|code|MOVS            R2, #4|4-34
78488|code|STR             R5, [SP,#0x18+var_18]|0-149
78490|code|BL              sub_154E0|2-240-33-249
78494|code|MOVS            R3, #0|0-35
78496|code|STR             R0, [R4,#0x30]|32-99
78498|code|MOV             R0, R3|24-70
78500|code|ADD             SP, SP, #8|2-176
78502|code|POP             {R4-R6,PC}|112-189
78504|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
78508|code|B               loc_132A2|249-231
78510|data|ALIGN 0x10|0-191
78512|data|DCD aPmenuItemGetIn - 0x13244; "pmenu_item_get_index"|244-47-0-0
78516|data|DCD aSU - 0x13252; "%s: %u\n"|122-48-0-0
78520|data|DCD aItem - 0x13296; "ITEM *"|46-48-0-0
78524|code|PUSH.W          {R4-R8,LR}|45-233-240-65
78528|code|MOV             R8, R2|144-70
78530|code|LDR             R2, =(aStructPmenu - 0x132CE); "struct pmenu"|27-74
78532|code|SUB             SP, SP, #0x10|132-176
78534|code|MOV             R7, R1|15-70
78536|code|MOVS            R1, #0x48 ; 'H'|72-33
78538|code|ADD             R2, PC; "struct pmenu"|122-68
78540|code|MOV             R6, R0|6-70
78542|code|BL              sub_15218|1-240-163-255
78546|code|MOV             R4, R0|4-70
78548|code|CBZ             R0, loc_13322|40-179
78550|code|LDR             R3, =(aItem - 0x132E0); "ITEM *"|23-75
78552|code|MOVS            R1, #4|4-33
78554|code|ADDS            R2, R7, #1|122-28
78556|code|ADD             R3, PC; "ITEM *"|123-68
78558|code|BL              sub_154B4|2-240-233-248
78562|code|MOV             R5, R0|5-70
78564|code|STR             R0, [R4,#0x30]|32-99
78566|code|CBZ             R0, loc_13324|232-177
78568|code|MOV             R3, R6|51-70
78570|code|LDR.W           R12, =(sub_12FE4+1 - 0x132FA)|223-248-76-192
78574|code|LDR.W           LR, =(sub_12F30+1 - 0x132FE)|223-248-76-224
78578|code|MOV             R0, R4|32-70
78580|code|LDR             R6, =(loc_12F28+1 - 0x13300)|18-78
78582|code|ADD             R12, PC; sub_12FE4|252-68
78584|code|LDR             R5, =(sub_12F64+1 - 0x13304)|18-77
78586|code|ADD             LR, PC; sub_12F30|254-68
78588|code|ADD             R6, PC; loc_12F28|126-68
78590|code|MOVS            R1, #0xDE|222-33
78592|code|ADD             R5, PC; sub_12F64|125-68
78594|code|MOVS            R2, #0|0-34
78596|code|STMEA.W         SP, {R12,LR}|141-232-0-80
78600|code|STR             R6, [SP,#8]|2-150
78602|code|STR             R5, [SP,#0xC]|3-149
78604|code|BL              sub_135F8|0-240-116-249
78608|code|MOV             R0, R4|32-70
78610|code|MOVS            R3, #0|0-35
78612|code|STR             R7, [R4,#0x34]|103-99
78614|code|STR.W           R8, [R4,#0x40]|196-248-64-128
78618|code|STR             R3, [R4,#0x38]|163-99
78620|code|ADD             SP, SP, #0x10|4-176
78622|code|POP.W           {R4-R8,PC}|189-232-240-129
78626|code|B               loc_1331C|251-231
78628|code|MOV             R0, R4|32-70
78630|code|BL              sub_14BC0|1-240-75-252
78634|code|MOV             R0, R5|40-70
78636|code|B               loc_1331C|246-231
78638|data|ALIGN 0x10|0-191
78640|data|DCD aStructPmenu - 0x132CE; "struct pmenu"|6-48-0-0
78644|data|DCD aItem - 0x132E0; "ITEM *"|228-47-0-0
78648|data|DCD sub_12FE4+1 - 0x132FA|235-252-255-255
78652|data|DCD sub_12F30+1 - 0x132FE|51-252-255-255
78656|data|DCD loc_12F28+1 - 0x13300|41-252-255-255
78660|data|DCD sub_12F64+1 - 0x13304|97-252-255-255
78664|code|PUSH            {R3-R5,LR}|56-181
78666|code|MOV             R4, R0|4-70
78668|code|LDR             R0, [R0,#0x30]|0-107
78670|code|BLX             new_menu|254-247-200-235
78674|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x13358)|19-77
78676|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
78678|code|STR             R0, [R4,#0x2C]|224-98
78680|code|CBZ             R0, loc_1337C|128-177
78682|code|LDR             R1, [R4,#0x10]|33-105
78684|code|BLX             set_menu_win|254-247-62-234
78688|code|LDR             R1, [R4,#0x14]|97-105
78690|code|LDR             R0, [R4,#0x2C]|224-106
78692|code|BLX             set_menu_sub|254-247-74-235
78696|code|LDR             R3, =(LINES_ptr - 0x27000)|14-75
78698|code|LDR             R0, [R4,#0x2C]|224-106
78700|code|MOVS            R2, #1|1-34
78702|code|LDR             R3, [R5,R3]; LINES|235-88
78704|code|LDR             R1, [R3]|25-104
78706|code|SUBS            R1, #5|5-57
78708|code|BLX             set_menu_format|254-247-76-236
78712|code|MOVS            R0, #0|0-32
78714|code|POP             {R3-R5,PC}|56-189
78716|code|BLX             __errno_location|254-247-220-235
78720|code|LDR             R0, [R0]|0-104
78722|code|BLX             strerror|254-247-102-235
78726|code|LDR             R1, =(aPmenuItemGetIn - 0x13390); "pmenu_item_get_index"|8-73
78728|code|MOV.W           R2, #0x170|79-244-184-114
78732|code|ADD             R1, PC; "pmenu_item_get_index"|121-68
78734|code|ADDS            R1, #0x34 ; '4'|52-49
78736|code|MOV             R3, R0|3-70
78738|code|LDR             R0, =(aSDNewMenuFaile - 0x13398); "%s:%d: new_menu failed: %s\n"|6-72
78740|code|ADD             R0, PC; "%s:%d: new_menu failed: %s\n"|120-68
78742|code|BL              sub_13D9C|0-240-1-253
78746|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78750|code|POP             {R3-R5,PC}|56-189
78752|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13358|168-60-1-0
78756|data|DCD LINES_ptr - 0x27000|216-1-0-0
78760|data|DCD aPmenuItemGetIn - 0x13390; "pmenu_item_get_index"|168-46-0-0
78764|data|DCD aSDNewMenuFaile - 0x13398; "%s:%d: new_menu failed: %s\n"|76-47-0-0
78768|code|PUSH            {R4-R6,LR}|112-181
78770|code|MOVW            R3, #0xFDD5|79-246-213-83
78774|code|MOV             R6, R0|6-70
78776|code|MOVT.W          R3, #0xFFFF|207-246-255-115
78780|code|LDR             R0, [R0,#0x2C]|192-106
78782|code|STR             R3, [R6]|51-96
78784|code|BLX             item_count|254-247-108-234
78788|code|ADD.W           R4, R0, #0x40000000|0-241-128-68
78792|code|MOV             R5, R0|5-70
78794|code|SUBS            R4, #1|1-60
78796|code|LSLS            R4, R4, #2|164-0
78798|code|CBZ             R0, loc_133DE|48-177
78800|code|LDR             R3, [R6,#0x30]|51-107
78802|code|LDR             R0, [R3,R4]|24-89
78804|code|SUBS            R4, #4|4-60
78806|code|BLX             free_item|254-247-226-234
78810|code|SUBS            R5, #1|1-61
78812|code|BNE             loc_133D0|248-209
78814|code|LDR             R0, [R6,#0x2C]|240-106
78816|code|BLX             free_menu|254-247-244-234
78820|code|LDR             R0, [R6,#0x14]|112-105
78822|code|BLX             delwin|254-247-100-235
78826|code|LDR             R0, [R6,#0x10]|48-105
78828|code|BLX             delwin|254-247-96-235
78832|code|MOV             R0, R6|48-70
78834|code|POP.W           {R4-R6,LR}|189-232-112-64
78838|code|B.W             sub_14BC0|1-240-227-187
78842|data|ALIGN 4|0-191
78844|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13406)|11-75
78846|code|MOVS            R2, #1; int|1-34
78848|code|PUSH            {R4-R6,LR}|112-181
78850|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
78852|code|LDR             R4, =(LINES_ptr - 0x27000)|10-76
78854|code|MOV             R5, R1|13-70
78856|code|MOV             R6, R0|6-70
78858|code|LDR             R0, [R1]; WINDOW *|8-104
78860|code|LDR             R3, [R3,R4]; LINES|27-89
78862|code|LDR             R1, [R3]|25-104
78864|code|SUBS            R1, #1; int|1-57
78866|code|BLX             wmove|254-247-40-236
78870|code|ADDS            R0, #1|1-48
78872|code|BEQ             locret_1342A|7-208
78874|code|LDR             R0, [R5]; WINDOW *|40-104
78876|code|MOV.W           R2, #0xFFFFFFFF; int|79-240-255-50
78880|code|LDR             R1, [R6]; char *|49-104
78882|code|POP.W           {R4-R6,LR}|189-232-112-64
78886|code|B.W             j_waddnstr|254-247-49-186
78890|code|POP             {R4-R6,PC}|112-189
78892|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13406|250-59-1-0
78896|data|DCD LINES_ptr - 0x27000|216-1-0-0
78900|code|PUSH            {R4,LR}|16-181
78902|code|BLX             initscr|254-247-130-234
78906|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1344A)|15-76
78908|code|BLX             cbreak|254-247-14-234
78912|code|BLX             noecho|254-247-236-235
78916|code|LDR             R3, =(stdscr_ptr - 0x27000)|13-75
78918|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
78920|code|MOVS            R1, #1; _Bool|1-33
78922|code|LDR             R4, [R4,R3]; stdscr|228-88
78924|code|LDR             R0, [R4]; WINDOW *|32-104
78926|code|BLX             keypad|254-247-112-234
78930|code|BLX             nonl|254-247-16-235
78934|code|MOVS            R1, #0; _Bool|0-33
78936|code|LDR             R0, [R4]; WINDOW *|32-104
78938|code|BLX             intrflush|254-247-124-234
78942|code|MOVS            R0, #0; int|0-32
78944|code|BLX             curs_set|254-247-12-236
78948|code|LDR             R0, [R4]; WINDOW *|32-104
78950|code|MOVS            R1, #1; _Bool|1-33
78952|code|BLX             nodelay|254-247-90-235
78956|code|LDR             R0, [R4]; WINDOW *|32-104
78958|code|BLX             wgetch|254-247-176-235
78962|code|ADDS            R0, #1|1-48
78964|code|BNE             loc_1346C|250-209
78966|code|POP             {R4,PC}|16-189
78968|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1344A|182-59-1-0
78972|data|DCD stdscr_ptr - 0x27000|212-1-0-0
78976|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13488)|7-75
78978|code|LDR             R2, =(stdscr_ptr - 0x27000)|8-74
78980|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
78982|code|PUSH            {R4,LR}|16-181
78984|code|LDR             R4, [R3,R2]; stdscr|156-88
78986|code|LDR             R0, [R4]; WINDOW *|32-104
78988|code|BLX             wclear|254-247-172-235
78992|code|LDR             R0, [R4]; WINDOW *|32-104
78994|code|BLX             wrefresh|254-247-66-234
78998|code|POP.W           {R4,LR}|189-232-16-64
79002|code|B.W             j_endwin|254-247-145-187
79006|data|ALIGN 0x10|0-191
79008|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13488|120-59-1-0
79012|data|DCD stdscr_ptr - 0x27000|212-1-0-0
79016|code|PUSH            {R4-R6,LR}|112-181
79018|code|MOVS            R1, #0; int|0-33
79020|code|MOV             R4, R0|4-70
79022|code|MOVS            R2, #1; int|1-34
79024|code|LDR             R0, [R0,#0x10]; WINDOW *|0-105
79026|code|BLX             wmove|254-247-216-235
79030|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x134BC)|35-77
79032|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
79034|code|ADDS            R0, #1|1-48
79036|code|BEQ             loc_134CA|5-208
79038|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79040|code|MOV.W           R2, #0xFFFFFFFF; int|79-240-255-50
79044|code|LDR             R1, [R4,#4]; char *|97-104
79046|code|BLX             waddnstr|254-247-228-233
79050|code|MOVS            R1, #1; int|1-33
79052|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79054|code|MOV             R2, R1; int|10-70
79056|code|BLX             wmove|254-247-200-235
79060|code|ADDS            R0, #1|1-48
79062|code|BEQ             loc_134EE|10-208
79064|code|LDR             R2, =(COLS_ptr - 0x27000)|27-74
79066|code|LDR             R3, =(acs_map_ptr - 0x27000)|28-75
79068|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79070|code|LDR             R2, [R5,R2]; COLS|170-88
79072|code|LDR             R3, [R5,R3]; acs_map|235-88
79074|code|LDR             R2, [R2]|18-104
79076|code|LDR.W           R1, [R3,#0x1C4]; chtype|211-248-196-17
79080|code|SUBS            R2, #2; int|2-58
79082|code|BLX             whline|254-247-160-233
79086|code|LDR             R3, =(LINES_ptr - 0x27000)|24-75
79088|code|MOVS            R2, #1; int|1-34
79090|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79092|code|LDR             R6, [R5,R3]; LINES|238-88
79094|code|LDR             R1, [R6]|49-104
79096|code|SUBS            R1, #3; int|3-57
79098|code|BLX             wmove|254-247-180-235
79102|code|ADDS            R0, #1|1-48
79104|code|BEQ             loc_13518|10-208
79106|code|LDR             R2, =(COLS_ptr - 0x27000)|17-74
79108|code|LDR             R3, =(acs_map_ptr - 0x27000)|17-75
79110|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79112|code|LDR             R2, [R5,R2]; COLS|170-88
79114|code|LDR             R3, [R5,R3]; acs_map|235-88
79116|code|LDR             R2, [R2]|18-104
79118|code|LDR.W           R1, [R3,#0x1C4]; chtype|211-248-196-17
79122|code|SUBS            R2, #2; int|2-58
79124|code|BLX             whline|254-247-138-233
79128|code|LDR             R1, [R6]|49-104
79130|code|MOVS            R2, #1; int|1-34
79132|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79134|code|SUBS            R1, #2; int|2-57
79136|code|BLX             wmove|254-247-160-235
79140|code|ADDS            R0, #1|1-48
79142|code|BEQ             loc_13534|5-208
79144|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79146|code|MOV.W           R2, #0xFFFFFFFF; int|79-240-255-50
79150|code|LDR             R1, [R4,#8]; char *|161-104
79152|code|BLX             waddnstr|254-247-174-233
79156|code|ADD.W           R0, R4, #0xC|4-241-12-0
79160|code|ADD.W           R1, R4, #0x10|4-241-16-1
79164|code|POP.W           {R4-R6,LR}|189-232-112-64
79168|code|B               sub_133FC|92-231
79170|data|ALIGN 4|0-191
79172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x134BC|68-59-1-0
79176|data|DCD COLS_ptr - 0x27000|208-1-0-0
79180|data|DCD acs_map_ptr - 0x27000|184-1-0-0
79184|data|DCD LINES_ptr - 0x27000|216-1-0-0
79188|code|PUSH            {R3-R5,LR}|56-181
79190|code|MOV             R4, R0|4-70
79192|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x13566)|12-77
79194|code|LDR             R0, [R0,#0xC]|192-104
79196|code|BL              sub_14BC0|1-240-48-251
79200|code|LDR             R3, =(LINES_ptr - 0x27000)|11-75
79202|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
79204|code|MOVS            R2, #0; int|0-34
79206|code|STR             R2, [R4,#0xC]|226-96
79208|code|LDR             R3, [R5,R3]; LINES|235-88
79210|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79212|code|LDR             R1, [R3]|25-104
79214|code|SUBS            R1, #1; int|1-57
79216|code|BLX             wmove|254-247-120-235
79220|code|ADDS            R0, #1|1-48
79222|code|BEQ             locret_1358A|8-208
79224|code|LDR             R3, =(COLS_ptr - 0x27000)|6-75
79226|code|MOVS            R1, #0x20 ; ' '; chtype|32-33
79228|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79230|code|LDR             R3, [R5,R3]; COLS|235-88
79232|code|LDR             R2, [R3]; int|26-104
79234|code|POP.W           {R3-R5,LR}|189-232-56-64
79238|code|B.W             j_whline|254-247-79-185
79242|code|POP             {R3-R5,PC}|56-189
79244|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13566|154-58-1-0
79248|data|DCD LINES_ptr - 0x27000|216-1-0-0
79252|data|DCD COLS_ptr - 0x27000|208-1-0-0
79256|code|PUSH            {R1-R3}|14-180
79258|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x135A2)|21-75
79260|code|LDR             R2, =(__stack_chk_guard_ptr - 0x27000)|21-74
79262|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
79264|code|PUSH            {R4-R7,LR}|240-181
79266|code|SUB             SP, SP, #8|130-176
79268|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
79270|code|ADD             R5, SP, #0x28+varg_r1|7-173
79272|code|MOV             R4, R0|4-70
79274|code|LDR.W           R7, [R5],#4|85-248-4-123
79278|code|LDR             R3, [R6]|51-104
79280|code|STR             R3, [SP,#0x28+var_24]|1-147
79282|code|BL              sub_13554|255-247-207-255
79286|code|MOV             R2, R5|42-70
79288|code|MOV             R1, R7|57-70
79290|code|MOV             R0, R4|32-70
79292|code|STR             R5, [SP,#0x28+var_28]|0-149
79294|code|BL              sub_152D0|1-240-135-254
79298|code|MOV             R3, R4|35-70
79300|code|ADD.W           R1, R4, #0x10|4-241-16-1
79304|code|STR.W           R0, [R3,#0xC]!|67-248-12-15
79308|code|MOV             R0, R3|24-70
79310|code|BL              sub_133FC|255-247-21-255
79314|code|LDR             R0, [R4,#0x10]; WINDOW *|32-105
79316|code|BLX             wrefresh|254-247-160-233
79320|code|LDR             R2, [SP,#0x28+var_24]|1-154
79322|code|LDR             R3, [R6]|51-104
79324|code|CMP             R2, R3|154-66
79326|code|BNE             loc_135EA|4-209
79328|code|ADD             SP, SP, #8|2-176
79330|code|POP.W           {R4-R7,LR}|189-232-240-64
79334|code|ADD             SP, SP, #0xC|3-176
79336|code|BX              LR|112-71
79338|code|BLX             __stack_chk_fail|254-247-128-233
79342|data|ALIGN 0x10|0-191
79344|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x135A2|94-58-1-0
79348|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
79352|code|PUSH.W          {R4-R7,R9,LR}|45-233-240-66
79356|code|SUB             SP, SP, #8|130-176
79358|code|MOV             R4, R0|4-70
79360|code|LDR.W           R12, =(_GLOBAL_OFFSET_TABLE_ - 0x1360E)|223-248-96-192
79364|code|STR             R1, [R4]|33-96
79366|code|MOV             R7, R2|23-70
79368|code|LDR             R6, [SP,#0x20+arg_0]|8-158
79370|code|ADD             R12, PC; _GLOBAL_OFFSET_TABLE_|252-68
79372|code|LDR             R5, [SP,#0x20+arg_8]|10-157
79374|code|MOVS            R2, #0; int|0-34
79376|code|LDR             R0, [SP,#0x20+arg_C]|11-152
79378|code|LDR.W           LR, =(COLS_ptr - 0x27000)|223-248-84-224
79382|code|LDR             R1, [SP,#0x20+arg_4]|9-153
79384|code|LDR.W           R9, =(LINES_ptr - 0x27000)|223-248-80-144
79388|code|STR             R3, [R4,#0x18]|163-97
79390|code|MOV             R3, R2; int|19-70
79392|code|STR             R1, [R4,#0x1C]|225-97
79394|code|STR             R0, [R4,#0x28]|160-98
79396|code|STR             R6, [R4,#0x24]|102-98
79398|code|STR             R5, [R4,#0x20]|37-98
79400|code|LDR.W           R6, [R12,R9]; LINES|92-248-9-96
79404|code|LDR.W           R5, [R12,LR]; COLS|92-248-14-80
79408|code|LDR             R0, [R6]; int|48-104
79410|code|LDR             R1, [R5]; int|41-104
79412|code|BLX             newwin|254-247-166-233
79416|code|LDR             R5, [R5]|45-104
79418|code|LDR             R1, [R6]|49-104
79420|code|MOVS            R3, #2; int|2-35
79422|code|SUBS            R2, R5, #1|106-30
79424|code|STR             R7, [SP,#0x20+var_20]; int|0-151
79426|code|SUBS            R2, R2, R7; int|210-27
79428|code|SUBS            R1, #5; int|5-57
79430|code|STR             R0, [R4,#0x10]|32-97
79432|code|BLX             derwin|254-247-66-235
79436|code|LDR             R3, [R4,#0x10]|35-105
79438|code|CMP             R0, #0|0-40
79440|code|IT NE|24-191
79442|code|CMPNE           R3, #0|0-43
79444|code|STR             R0, [R4,#0x14]|96-97
79446|code|ITE NE|20-191
79448|code|MOVNE           R0, #1|1-32
79450|code|MOVEQ           R0, #0|0-32
79452|code|ADD             SP, SP, #8|2-176
79454|code|POP.W           {R4-R7,R9,PC}|189-232-240-130
79458|data|ALIGN 4|0-191
79460|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1360E|242-57-1-0
79464|data|DCD COLS_ptr - 0x27000|208-1-0-0
79468|data|DCD LINES_ptr - 0x27000|216-1-0-0
79472|code|LDR             R0, [R0]|0-104
79474|code|CMP             R0, #0|0-40
79476|code|BLT             loc_13680|4-219
79478|code|PUSH            {R3,LR}|8-181
79480|code|BLX             close|254-247-24-235
79484|code|MOVS            R0, #0|0-32
79486|code|POP             {R3,PC}|8-189
79488|code|MOVS            R0, #0|0-32
79490|code|BX              LR|112-71
79492|code|PUSH.W          {R4-R11,LR}|45-233-240-79
79496|code|SUB             SP, SP, #0x14|133-176
79498|code|LDR             R1, [R0]|1-104
79500|code|MOV             R6, R0|6-70
79502|code|BL              sub_145D0|0-240-159-255
79506|code|MOV             R4, R0|4-70
79508|code|CMP             R0, #0|0-40
79510|code|BEQ.W           loc_1387C|0-240-241-128
79514|code|LDR             R2, [R0]|2-104
79516|code|SUBS            R3, R2, #1; switch 6 cases|83-30
79518|code|CMP             R3, #5|5-43
79520|code|BHI.W           def_136A4; jumptable 000136A4 default case, cases 4,5|0-242-135-128
79524|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
79528|data|DCB 0x1B; jump table for switch statement|27
79529|data|DCB 0x34|52
79530|data|DCB 0x48|72
79531|data|DCB 0x85|133
79532|data|DCB 0x85|133
79533|data|DCB 3|3
79534|code|LDR             R2, =(aStructBootStat - 0x136B8); jumptable 000136A4 case 6|118-74
79536|code|MOVS            R1, #0x10|16-33
79538|code|MOV             R0, R6|48-70
79540|code|ADD             R2, PC; "struct boot_status"|122-68
79542|code|BL              sub_15218|1-240-175-253
79546|code|MOV             R1, R4|33-70
79548|code|MOV             R5, R0|5-70
79550|code|BL              sub_148B0|1-240-247-248
79554|code|CMP             R0, #0|0-40
79556|code|BEQ.W           loc_137D2|0-240-133-128
79560|code|LDR             R0, =(aSInvalidStatus - 0x136D2); "%s: invalid status message?\n"|112-72
79562|code|MOVS            R4, #0|0-36
79564|code|LDR             R1, =(aDiscoverClient - 0x136D4); "discover_client_process"|112-73
79566|code|ADD             R0, PC; "%s: invalid status message?\n"|120-68
79568|code|ADD             R1, PC; "discover_client_process"|121-68
79570|code|BL              sub_13D9C|0-240-99-251
79574|code|MOV             R0, R4|32-70
79576|code|ADD             SP, SP, #0x14|5-176
79578|code|POP.W           {R4-R11,PC}|189-232-240-143
79582|code|LDR             R2, =(aStructDevice - 0x136E8); jumptable 000136A4 case 1|109-74
79584|code|MOVS            R1, #0x20 ; ' '|32-33
79586|code|MOV             R0, R6|48-70
79588|code|ADD             R2, PC; "struct device"|122-68
79590|code|BL              sub_15218|1-240-151-253
79594|code|MOV             R5, R0|5-70
79596|code|ADDS            R0, #0x14|20-48
79598|code|BL              sub_13E6C|0-240-189-251
79602|code|MOV             R1, R4|33-70
79604|code|MOV             R0, R5|40-70
79606|code|BL              sub_146C8|0-240-231-255
79610|code|MOV             R4, R0|4-70
79612|code|CMP             R0, #0|0-40
79614|code|BEQ             loc_137E6|114-208
79616|code|LDR             R0, =(aSNoDevice - 0x1370A); "%s: no device?\n"|101-72
79618|code|MOVS            R4, #0|0-36
79620|code|LDR             R1, =(aDiscoverClient - 0x1370C); "discover_client_process"|101-73
79622|code|ADD             R0, PC; "%s: no device?\n"|120-68
79624|code|ADD             R1, PC; "discover_client_process"|121-68
79626|code|BL              sub_13D9C|0-240-71-251
79630|code|B               loc_136D6|226-231
79632|code|LDR             R2, =(aStructBootOpti - 0x1371A); jumptable 000136A4 case 2|99-74
79634|code|MOVS            R1, #0x2C ; ','|44-33
79636|code|MOV             R0, R6|48-70
79638|code|ADD             R2, PC; "struct boot_option"|122-68
79640|code|BL              sub_15218|1-240-126-253
79644|code|MOV             R1, R4|33-70
79646|code|MOV             R8, R0|128-70
79648|code|BL              sub_14754|1-240-24-248
79652|code|CMP             R0, #0|0-40
79654|code|BEQ             loc_13822|124-208
79656|code|LDR             R0, =(aSNoBootOption - 0x13732); "%s: no boot_option?\n"|94-72
79658|code|MOVS            R4, #0|0-36
79660|code|LDR             R1, =(aDiscoverClient - 0x13734); "discover_client_process"|94-73
79662|code|ADD             R0, PC; "%s: no boot_option?\n"|120-68
79664|code|ADD             R1, PC; "discover_client_process"|121-68
79666|code|BL              sub_13D9C|0-240-51-251
79670|code|B               loc_136D6|206-231
79672|code|MOV             R1, R0; jumptable 000136A4 case 3|1-70
79674|code|MOV             R0, R6|48-70
79676|code|BL              sub_142BC|0-240-190-253
79680|code|MOV             R11, R0|131-70
79682|code|CMP             R0, #0|0-40
79684|code|BEQ.W           loc_1386C|0-240-146-128
79688|code|LDR.W           R8, [R6,#0x18]|214-248-24-128
79692|code|CMP.W           R8, #0|184-241-0-15
79696|code|BLE             loc_137C8|58-221
79698|code|LDR             R3, [R6,#0x1C]|243-105
79700|code|MOVS            R5, #0|0-37
79702|code|STR             R3, [SP,#0x38+var_2C]|3-147
79704|code|MOV             R10, R3|154-70
79706|code|B               loc_13762|2-224
79708|code|ADDS            R5, #1|1-53
79710|code|CMP             R5, R8|69-69
79712|code|BEQ             loc_137C8|50-208
79714|code|MOV             R9, R10|209-70
79716|code|LDR.W           R7, [R10],#4|90-248-4-123
79720|code|MOV             R1, R11; s2|89-70
79722|code|LDR             R0, [R7]; s1|56-104
79724|code|BLX             strcmp|254-247-60-232
79728|code|MOV             R4, R0|4-70
79730|code|CMP             R0, #0|0-40
79732|code|BNE             loc_1375C|242-209
79734|code|ADD.W           R3, R8, #0xFFFFFFFF|8-241-255-51
79738|code|ADDS            R1, R5, #1|105-28
79740|code|SUBS            R2, R3, R5|90-27
79742|code|STR             R3, [R6,#0x18]|179-97
79744|code|LDR             R3, [SP,#0x38+var_2C]|3-155
79746|code|MOV             R0, R9; dest|72-70
79748|code|LDR             R5, =(aStructDevice_0 - 0x13794); "struct device *"|73-77
79750|code|LSLS            R2, R2, #2; n|146-0
79752|code|ADD.W           R1, R3, R1,LSL#2; src|3-235-129-1
79756|code|BLX             memmove|254-247-84-232
79760|code|ADD             R5, PC; "struct device *"|125-68
79762|code|LDR             R1, [R6,#0x1C]|241-105
79764|code|MOVS            R2, #4|4-34
79766|code|LDR             R3, [R6,#0x18]|179-105
79768|code|MOV             R0, R6|48-70
79770|code|STR             R5, [SP,#0x38+var_38]|0-149
79772|code|BL              sub_154E0|1-240-160-254
79776|code|LDR             R3, [R6,#0xC]|243-104
79778|code|LDR             R1, [R6,#0x14]|113-105
79780|code|STR             R0, [R6,#0x1C]|240-97
79782|code|MOV             R0, R7|56-70
79784|code|BLX             R3|152-71
79786|code|MOV             R0, R7|56-70
79788|code|BL              sub_14BC0|1-240-8-250
79792|code|B               loc_136D6|145-231
79794|code|LDR             R0, =(aSUnknownAction - 0x137BC); jumptable 000136A4 default case, cases 4,5|63-72
79796|code|MOVS            R4, #0|0-36
79798|code|LDR             R1, =(aDiscoverClient - 0x137BE); "discover_client_process"|63-73
79800|code|ADD             R0, PC; "%s: unknown action %d\n"|120-68
79802|code|ADD             R1, PC; "discover_client_process"|121-68
79804|code|BL              sub_13D9C|0-240-238-250
79808|code|MOV             R0, R4|32-70
79810|code|ADD             SP, SP, #0x14|5-176
79812|code|POP.W           {R4-R11,PC}|189-232-240-143
79816|code|MOVS            R4, #0|0-36
79818|code|MOV             R0, R4|32-70
79820|code|ADD             SP, SP, #0x14|5-176
79822|code|POP.W           {R4-R11,PC}|189-232-240-143
79826|code|LDR             R3, [R6,#0x10]|51-105
79828|code|CBZ             R3, loc_137DC|19-177
79830|code|LDR             R1, [R6,#0x14]|113-105
79832|code|MOV             R0, R5|40-70
79834|code|BLX             R3|152-71
79836|code|MOV             R0, R5|40-70
79838|code|MOVS            R4, #0|0-36
79840|code|BL              sub_14BC0|1-240-238-249
79844|code|B               loc_136D6|119-231
79846|code|LDR             R3, [R6,#0x18]|179-105
79848|code|MOVS            R2, #4|4-34
79850|code|LDR             R7, =(aStructDevice_0 - 0x137F6); "struct device *"|51-79
79852|code|MOV             R0, R6|48-70
79854|code|LDR             R1, [R6,#0x1C]|241-105
79856|code|ADDS            R3, #1|1-51
79858|code|ADD             R7, PC; "struct device *"|127-68
79860|code|STR             R3, [R6,#0x18]|179-97
79862|code|STR             R7, [SP,#0x38+var_38]|0-151
79864|code|BL              sub_154E0|1-240-114-254
79868|code|LDR             R3, [R6,#0x18]|179-105
79870|code|MOV             R1, R5|41-70
79872|code|ADD.W           R3, R3, #0x40000000|3-241-128-67
79876|code|SUBS            R3, #1|1-59
79878|code|MOV             R2, R0|2-70
79880|code|MOV             R0, R6|48-70
79882|code|STR             R2, [R6,#0x1C]|242-97
79884|code|STR.W           R5, [R2,R3,LSL#2]|66-248-35-80
79888|code|BL              sub_14AD4|1-240-96-249
79892|code|LDR             R3, [R6,#4]|115-104
79894|code|CMP             R3, #0|0-43
79896|code|BEQ             loc_137C8|214-208
79898|code|MOV             R0, R5|40-70
79900|code|LDR             R1, [R6,#0x14]|113-105
79902|code|BLX             R3|152-71
79904|code|B               loc_136D6|89-231
79906|code|LDR.W           R9, [R6,#0x18]|214-248-24-144
79910|code|LDR.W           R10, [R8]|216-248-0-160
79914|code|CMP.W           R9, #0|185-241-0-15
79918|code|BLE             loc_13882|40-221
79920|code|LDR             R7, [R6,#0x1C]|247-105
79922|code|MOV             R4, R0|4-70
79924|code|SUBS            R7, #4|4-63
79926|code|B               loc_1383C|1-224
79928|code|CMP             R4, R9|76-69
79930|code|BEQ             loc_13868|21-208
79932|code|LDR.W           R5, [R7,#4]!|87-248-4-95
79936|code|MOV             R1, R10; s2|81-70
79938|code|ADDS            R4, #1|1-52
79940|code|LDR             R0, [R5]; s1|40-104
79942|code|BLX             strcmp|253-247-208-239
79946|code|CMP             R0, #0|0-40
79948|code|BNE             loc_13838|244-209
79950|code|MOV             R0, R5|40-70
79952|code|MOV             R1, R8|65-70
79954|code|BL              sub_14AD4|1-240-63-249
79958|code|LDR             R3, [R6,#8]|179-104
79960|code|CMP             R3, #0|0-43
79962|code|BEQ             loc_137C8|181-208
79964|code|MOV             R0, R5|40-70
79966|code|MOV             R1, R8|65-70
79968|code|LDR             R2, [R6,#0x14]|114-105
79970|code|MOVS            R4, #0|0-36
79972|code|BLX             R3|152-71
79974|code|B               loc_136D6|54-231
79976|code|MOVS            R5, #0|0-37
79978|code|B               loc_1384E|240-231
79980|code|LDR             R0, =(aSNoDeviceId - 0x13876); "%s: no device id?\n"|19-72
79982|code|MOV             R4, R11|92-70
79984|code|LDR             R1, =(aDiscoverClient - 0x13878); "discover_client_process"|19-73
79986|code|ADD             R0, PC; "%s: no device id?\n"|120-68
79988|code|ADD             R1, PC; "discover_client_process"|121-68
79990|code|BL              sub_13D9C|0-240-145-250
79994|code|B               loc_136D6|44-231
79996|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
80000|code|B               loc_136D6|41-231
80002|code|MOV             R5, R0|5-70
80004|code|B               loc_1384E|227-231
80006|data|ALIGN 4|0-191
80008|data|DCD aStructBootStat - 0x136B8; "struct boot_status"|232-44-0-0
80012|data|DCD aSInvalidStatus - 0x136D2; "%s: invalid status message?\n"|226-44-0-0
80016|data|DCD aDiscoverClient - 0x136D4; "discover_client_process"|44-44-0-0
80020|data|DCD aStructDevice - 0x136E8; "struct device"|72-44-0-0
80024|data|DCD aSNoDevice - 0x1370A; "%s: no device?\n"|54-44-0-0
80028|data|DCD aDiscoverClient - 0x1370C; "discover_client_process"|244-43-0-0
80032|data|DCD aStructBootOpti - 0x1371A; "struct boot_option"|70-44-0-0
80036|data|DCD aSNoBootOption - 0x13732; "%s: no boot_option?\n"|66-44-0-0
80040|data|DCD aDiscoverClient - 0x13734; "discover_client_process"|204-43-0-0
80044|data|DCD aStructDevice_0 - 0x13794; "struct device *"|188-43-0-0
80048|data|DCD aSUnknownAction - 0x137BC; "%s: unknown action %d\n"|24-44-0-0
80052|data|DCD aDiscoverClient - 0x137BE; "discover_client_process"|66-43-0-0
80056|data|DCD aStructDevice_0 - 0x137F6; "struct device *"|90-43-0-0
80060|data|DCD aSNoDeviceId - 0x13876; "%s: no device id?\n"|22-43-0-0
80064|data|DCD aDiscoverClient - 0x13878; "discover_client_process"|136-42-0-0
80068|code|B.W             sub_14BC0|1-240-124-185
80072|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x138D2)|66-75
80074|code|PUSH.W          {R4-R10,LR}|45-233-240-71
80078|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
80080|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|65-76
80082|code|MOV             R5, R2|21-70
80084|code|LDR             R2, =(aStructDiscover - 0x138E6); "struct discover_client"|65-74
80086|code|SUB             SP, SP, #0x80|160-176
80088|code|MOV             R7, R0|7-70
80090|code|MOV             R8, R1|136-70
80092|code|LDR             R6, [R3,R4]; __stack_chk_guard|30-89
80094|code|MOVS            R0, #0|0-32
80096|code|MOVS            R1, #0x20 ; ' '|32-33
80098|code|ADD             R2, PC; "struct discover_client"|122-68
80100|code|LDR             R3, [R6]|51-104
80102|code|STR             R3, [SP,#0xA0+var_24]|31-147
80104|code|BL              sub_14A14|1-240-148-248
80108|code|MOV             R4, R0|4-70
80110|code|CMP             R0, #0|0-40
80112|code|BEQ             loc_13982|71-208
80114|code|LDR.W           R10, [R8]|216-248-0-160
80118|code|MOVS            R0, #1; domain|1-32
80120|code|LDR.W           R9, [R8,#4]|216-248-4-144
80124|code|MOV             R1, R0; type|1-70
80126|code|LDR.W           R12, [R8,#8]|216-248-8-192
80130|code|MOVS            R2, #0; protocol|0-34
80132|code|LDR.W           LR, [R8,#0xC]|216-248-12-224
80136|code|STR.W           R10, [R4,#4]|196-248-4-160
80140|code|STR.W           R9, [R4,#8]|196-248-8-144
80144|code|STR.W           R12, [R4,#0xC]|196-248-12-192
80148|code|STR.W           LR, [R4,#0x10]|196-248-16-224
80152|code|STR             R5, [R4,#0x14]|101-97
80154|code|BLX             socket|254-247-146-233
80158|code|CMP             R0, #0|0-40
80160|code|STR             R0, [R4]|32-96
80162|code|BLT             loc_139B4|71-219
80164|code|LDR             R5, =(aTmpPetitbootUi - 0x13932); "/tmp/petitboot.ui"|46-77
80166|code|MOV             R0, R4|32-70
80168|code|LDR             R1, =(loc_13670+1 - 0x13934)|46-73
80170|code|MOV.W           R8, #1|79-240-1-8
80174|code|ADD             R5, PC; "/tmp/petitboot.ui"|125-68
80176|code|ADD             R1, PC; loc_13670|121-68
80178|code|BL              sub_149FC|1-240-99-248
80182|code|LDM             R5!, {R0-R3}; "/tmp/petitboot.ui"|15-205
80184|code|MOV.W           R12, #0|79-240-0-12
80188|code|STR.W           R12, [R4,#0x18]|196-248-24-192
80192|code|ADD.W           LR, SP, #0xA0+var_20|13-241-128-14
80196|code|STR.W           R12, [R4,#0x1C]|196-248-28-192
80200|code|STRH.W          R8, [LR,#-0x74]!|46-248-116-141
80204|code|LDRH.W          R12, [R5]; "i"|181-248-0-192
80208|code|STR.W           R1, [SP,#0xA0+var_8E]|205-248-18-16
80212|code|MOV             R1, LR; addr|113-70
80214|code|STR.W           R2, [SP,#0xA0+var_8A]|205-248-22-32
80218|code|MOVS            R2, #0x6E ; 'n'; len|110-34
80220|code|STR.W           R0, [SP,#0xA0+var_92]|205-248-14-0
80224|code|STRH.W          R12, [SP,#0xA0+var_82]|173-248-30-192
80228|code|STR.W           R3, [SP,#0xA0+var_86]|205-248-26-48
80232|code|LDR             R0, [R4]; fd|32-104
80234|code|BLX             connect|254-247-172-233
80238|code|CBNZ            R0, loc_13990|120-185
80240|code|LDR             R3, =(sub_13684+1 - 0x1397E)|29-75
80242|code|MOV             R0, R7|56-70
80244|code|LDR             R1, [R4]|33-104
80246|code|MOV             R2, R8|66-70
80248|code|STR             R4, [SP,#0xA0+var_A0]|0-148
80250|code|ADD             R3, PC; sub_13684|123-68
80252|code|BL              sub_13EB4|0-240-154-250
80256|code|MOV             R0, R4|32-70
80258|code|LDR             R2, [SP,#0xA0+var_24]|31-154
80260|code|LDR             R3, [R6]|51-104
80262|code|CMP             R2, R3|154-66
80264|code|BNE             loc_139D0|34-209
80266|code|ADD             SP, SP, #0x80|32-176
80268|code|POP.W           {R4-R10,PC}|189-232-240-135
80272|code|BLX             __errno_location|254-247-210-232
80276|code|LDR             R0, [R0]; errnum|0-104
80278|code|BLX             strerror|254-247-92-232
80282|code|LDR             R1, =(aDiscoverClient - 0x139A0); "discover_client_process"|20-73
80284|code|ADD             R1, PC; "discover_client_process"|121-68
80286|code|ADDS            R1, #0x18|24-49
80288|code|MOV             R2, R0|2-70
80290|code|LDR             R0, =(aSConnectS - 0x139A8); "%s: connect: %s\n"|19-72
80292|code|ADD             R0, PC; "%s: connect: %s\n"|120-68
80294|code|BL              sub_13D9C|0-240-249-249
80298|code|MOV             R0, R4|32-70
80300|code|BL              sub_14BC0|1-240-8-249
80304|code|MOVS            R0, #0|0-32
80306|code|B               loc_13982|230-231
80308|code|BLX             __errno_location|254-247-192-232
80312|code|LDR             R0, [R0]; errnum|0-104
80314|code|BLX             strerror|254-247-74-232
80318|code|LDR             R1, =(aDiscoverClient - 0x139C4); "discover_client_process"|13-73
80320|code|ADD             R1, PC; "discover_client_process"|121-68
80322|code|ADDS            R1, #0x18|24-49
80324|code|MOV             R2, R0|2-70
80326|code|LDR             R0, =(aSSocketS - 0x139CC); "%s: socket: %s\n"|12-72
80328|code|ADD             R0, PC; "%s: socket: %s\n"|120-68
80330|code|BL              sub_13D9C|0-240-231-249
80334|code|B               loc_139AA|236-231
80336|code|BLX             __stack_chk_fail|253-247-140-239
80340|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x138D2|46-55-1-0
80344|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
80348|data|DCD aStructDiscover - 0x138E6; "struct discover_client"|6-43-0-0
80352|data|DCD aTmpPetitbootUi - 0x13932; "/tmp/petitboot.ui"|226-42-0-0
80356|data|DCD loc_13670+1 - 0x13934|61-253-255-255
80360|data|DCD sub_13684+1 - 0x1397E|7-253-255-255
80364|data|DCD aDiscoverClient - 0x139A0; "discover_client_process"|96-41-0-0
80368|data|DCD aSConnectS - 0x139A8; "%s: connect: %s\n"|128-42-0-0
80372|data|DCD aDiscoverClient - 0x139C4; "discover_client_process"|60-41-0-0
80376|data|DCD aSSocketS - 0x139CC; "%s: socket: %s\n"|56-42-0-0
80380|code|LDR             R0, [R0,#0x18]|128-105
80382|code|BX              LR|112-71
80384|code|CMP             R1, #0|0-41
80386|code|BLT             loc_13A12|6-219
80388|code|LDR             R3, [R0,#0x18]|131-105
80390|code|CMP             R1, R3|153-66
80392|code|BGE             loc_13A12|3-218
80394|code|LDR             R3, [R0,#0x1C]|195-105
80396|code|LDR.W           R0, [R3,R1,LSL#2]|83-248-33-0
80400|code|BX              LR|112-71
80402|code|MOVS            R0, #0|0-32
80404|code|BX              LR|112-71
80406|data|ALIGN 4|0-191
80408|code|LDR             R1, =(_GLOBAL_OFFSET_TABLE_ - 0x13A22)|27-73
80410|code|PUSH.W          {R4-R8,LR}|45-233-240-65
80414|code|ADD             R1, PC; _GLOBAL_OFFSET_TABLE_|121-68
80416|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|26-76
80418|code|SUB             SP, SP, #0x18|134-176
80420|code|LDR.W           LR, [R2,#4]|210-248-4-224
80424|code|ADD.W           R8, SP, #0x30+var_2C|13-241-4-8
80428|code|LDR             R7, [R3]|31-104
80430|code|MOV             R2, R1|10-70
80432|code|LDR             R5, [R1,R4]; __stack_chk_guard|13-89
80434|code|MOV             R6, R0|6-70
80436|code|LDR             R2, [R3,#4]|90-104
80438|code|MOV             R0, R8|64-70
80440|code|LDR             R3, [R3,#8]|155-104
80442|code|LDR             R1, [R5]|41-104
80444|code|STR.W           LR, [SP,#0x30+var_2C]|205-248-4-224
80448|code|STR             R7, [SP,#0x30+var_28]|2-151
80450|code|STR             R1, [SP,#0x30+var_1C]|5-145
80452|code|STR             R2, [SP,#0x30+var_24]|3-146
80454|code|STR             R3, [SP,#0x30+var_20]|4-147
80456|code|BL              sub_143B8|0-240-182-252
80460|code|MOVS            R1, #5|5-33
80462|code|MOV             R7, R0|7-70
80464|code|MOV             R0, R6|48-70
80466|code|MOV             R2, R7|58-70
80468|code|BL              sub_1458C|0-240-154-253
80472|code|MOV             R4, R0|4-70
80474|code|CBZ             R0, loc_13A7E|128-177
80476|code|ADD.W           R1, R4, #8|4-241-8-1
80480|code|MOV             R0, R8|64-70
80482|code|MOV             R2, R7|58-70
80484|code|BL              sub_1449C|0-240-26-253
80488|code|LDR             R0, [R6]; fd|48-104
80490|code|MOV             R1, R4; buf|33-70
80492|code|BL              sub_14510|0-240-80-253
80496|code|LDR             R2, [SP,#0x30+var_1C]|5-154
80498|code|LDR             R3, [R5]|43-104
80500|code|CMP             R2, R3|154-66
80502|code|BNE             loc_13A84|5-209
80504|code|ADD             SP, SP, #0x18|6-176
80506|code|POP.W           {R4-R8,PC}|189-232-240-129
80510|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
80514|code|B               loc_13A70|245-231
80516|code|BLX             __stack_chk_fail|253-247-50-239
80520|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13A22|222-53-1-0
80524|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
80528|code|PUSH            {R4,LR}|16-181
80530|code|MOV             R4, R0|4-70
80532|code|LDR             R0, [R0]; fd|0-104
80534|code|BLX             close|254-247-10-233
80538|code|MOVS            R3, #0|0-35
80540|code|MOV             R0, R3|24-70
80542|code|STR             R3, [R4]|35-96
80544|code|POP             {R4,PC}|16-189
80546|data|ALIGN 4|0-191
80548|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13AAE)|20-75
80550|code|MOVS            R2, #8; nbytes|8-34
80552|code|PUSH            {R4-R6,LR}|112-181
80554|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
80556|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|19-76
80558|code|SUB             SP, SP, #0x10|132-176
80560|code|ADD             R5, SP, #0x20+buf|1-173
80562|code|MOV             R6, R0|6-70
80564|code|LDR             R0, [R0]; fd|0-104
80566|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
80568|code|MOV             R1, R5; buf|41-70
80570|code|LDR             R3, [R4]|35-104
80572|code|STR             R3, [SP,#0x20+var_14]|3-147
80574|code|BLX             read|253-247-166-238
80578|code|CMP             R0, #8|8-40
80580|code|BEQ             loc_13AEC|18-208
80582|code|BLX             __errno_location|254-247-56-232
80586|code|LDR             R0, [R0]; errnum|0-104
80588|code|BLX             strerror|253-247-192-239
80592|code|LDR             R1, =(aPjsProcessEven - 0x13AD6); "pjs_process_event"|11-73
80594|code|ADD             R1, PC; "pjs_process_event"|121-68
80596|code|MOV             R2, R0|2-70
80598|code|LDR             R0, =(aSReadFailedS - 0x13ADC); "%s: read failed: %s\n"|11-72
80600|code|ADD             R0, PC; "%s: read failed: %s\n"|120-68
80602|code|BL              sub_13D9C|0-240-95-249
80606|code|MOVS            R0, #0|0-32
80608|code|LDR             R2, [SP,#0x20+var_14]|3-154
80610|code|LDR             R3, [R4]|35-104
80612|code|CMP             R2, R3|154-66
80614|code|BNE             loc_13AF4|5-209
80616|code|ADD             SP, SP, #0x10|4-176
80618|code|POP             {R4-R6,PC}|112-189
80620|code|LDR             R3, [R6,#4]|115-104
80622|code|MOV             R0, R5|40-70
80624|code|BLX             R3|152-71
80626|code|B               loc_13AE0|245-231
80628|code|BLX             __stack_chk_fail|253-247-250-238
80632|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13AAE|82-53-1-0
80636|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
80640|data|DCD aPjsProcessEven - 0x13AD6; "pjs_process_event"|102-41-0-0
80644|data|DCD aSReadFailedS - 0x13ADC; "%s: read failed: %s\n"|144-41-0-0
80648|code|LDR             R2, =(aStructPjs - 0x13B10); "struct pjs"|29-74
80650|code|PUSH            {R3-R7,LR}|248-181
80652|code|ADD             R2, PC; "struct pjs"|122-68
80654|code|MOV             R5, R1|13-70
80656|code|MOVS            R1, #8|8-33
80658|code|BL              sub_15218|1-240-129-251
80662|code|MOV             R4, R0|4-70
80664|code|CBZ             R0, locret_13B50|208-177
80666|code|LDR             R6, =(aPjsProcessEven - 0x13B26); "pjs_process_event"|26-78
80668|code|MOV.W           R1, #0x800; oflag|79-244-0-97
80672|code|STR             R5, [R0,#4]|69-96
80674|code|ADD             R6, PC; "pjs_process_event"|126-68
80676|code|ADD.W           R5, R6, #0x14|6-241-20-5
80680|code|MOV             R0, R5; file|40-70
80682|code|BLX             open|253-247-176-239
80686|code|CMP             R0, #0|0-40
80688|code|STR             R0, [R4]|32-96
80690|code|BLT             loc_13B52|14-219
80692|code|LDR             R1, =(sub_13A90+1 - 0x13B3C)|20-73
80694|code|MOV             R0, R4|32-70
80696|code|ADD             R1, PC; sub_13A90|121-68
80698|code|BL              sub_149FC|0-240-95-255
80702|code|LDR             R0, =(aSUsingS - 0x13B4A); "%s: using %s\n"|19-72
80704|code|ADD.W           R1, R6, #0x24 ; '$'|6-241-36-1
80708|code|MOV             R2, R5|42-70
80710|code|ADD             R0, PC; "%s: using %s\n"|120-68
80712|code|BL              sub_13D9C|0-240-40-249
80716|code|MOV             R0, R4|32-70
80718|code|POP             {R3-R7,PC}|248-189
80720|code|POP             {R3-R7,PC}|248-189
80722|code|BLX             __errno_location|253-247-242-239
80726|code|MOVS            R7, #0|0-39
80728|code|LDR             R0, [R0]; errnum|0-104
80730|code|BLX             strerror|253-247-122-239
80734|code|ADD.W           R1, R6, #0x24 ; '$'|6-241-36-1
80738|code|MOV             R2, R5|42-70
80740|code|MOV             R3, R0|3-70
80742|code|LDR             R0, =(aSOpenSFailedS - 0x13B6C); "%s: open %s failed: %s\n"|10-72
80744|code|ADD             R0, PC; "%s: open %s failed: %s\n"|120-68
80746|code|BL              sub_13D9C|0-240-23-249
80750|code|LDR             R0, [R4]; fd|32-104
80752|code|BLX             close|254-247-156-232
80756|code|STR             R7, [R4]|39-96
80758|code|MOV             R0, R4|32-70
80760|code|BL              sub_14BC0|1-240-34-248
80764|code|MOV             R0, R7|56-70
80766|code|POP             {R3-R7,PC}|248-189
80768|data|DCD aStructPjs - 0x13B10; "struct pjs"|116-41-0-0
80772|data|DCD aPjsProcessEven - 0x13B26; "pjs_process_event"|22-41-0-0
80776|data|DCD sub_13A90+1 - 0x13B3C|85-255-255-255
80780|data|DCD aSUsingS - 0x13B4A; "%s: using %s\n"|94-41-0-0
80784|data|DCD aSOpenSFailedS - 0x13B6C; "%s: open %s failed: %s\n"|36-41-0-0
80788|code|PUSH            {R3-R5,LR}|56-181
80790|code|MOV             R2, R1|10-70
80792|code|MOV             R4, R1|12-70
80794|code|MOV             R5, R0|5-70
80796|code|LDR             R1, =(aUiTimerInit - 0x13BA4); "ui_timer_init"|3-73
80798|code|LDR             R0, =(aSU - 0x13BA6); "%s: %u\n"|4-72
80800|code|ADD             R1, PC; "ui_timer_init"|121-68
80802|code|ADD             R0, PC; "%s: %u\n"|120-68
80804|code|BL              sub_13D9C|0-240-250-248
80808|code|STR             R4, [R5]|44-96
80810|code|POP             {R3-R5,PC}|56-189
80812|data|DCD aUiTimerInit - 0x13BA4; "ui_timer_init"|20-41-0-0
80816|data|DCD aSU - 0x13BA6; "%s: %u\n"|38-39-0-0
80820|code|PUSH            {R3-R5,LR}|56-181
80822|code|LDR             R5, [R0,#4]|69-104
80824|code|CBZ             R5, loc_13BBC|5-177
80826|code|POP             {R3-R5,PC}|56-189
80828|code|LDR             R1, =(aUiTimerInit - 0x13BC6); "ui_timer_init"|8-73
80830|code|MOV             R4, R0|4-70
80832|code|LDR             R0, =(aSFailedS+0xC - 0x13BC8); "%s\n"|8-72
80834|code|ADD             R1, PC; "ui_timer_init"|121-68
80836|code|ADD             R0, PC; "%s\n"|120-68
80838|code|ADDS            R1, #0x10|16-49
80840|code|BL              sub_13D9C|0-240-232-248
80844|code|MOVS            R3, #1|1-35
80846|code|MOV             R0, R5; seconds|40-70
80848|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
80852|code|STM.W           R4, {R2,R3}|132-232-12-0
80856|code|POP.W           {R3-R5,LR}|189-232-56-64
80860|code|B.W             j_alarm|253-247-146-190
80864|data|DCD aUiTimerInit - 0x13BC6; "ui_timer_init"|242-40-0-0
80868|data|DCD aSFailedS+0xC - 0x13BC8; "%s\n"|24-43-0-0
80872|code|LDR             R3, [R0,#4]|67-104
80874|code|PUSH            {R4-R6,LR}|112-181
80876|code|MOV             R4, R0|4-70
80878|code|CMP             R3, #0|0-43
80880|code|BNE             locret_13C70|62-209
80882|code|LDR             R3, [R0,#0xC]|195-104
80884|code|CBZ             R3, loc_13BFA|11-177
80886|code|LDR             R1, [R0]|1-104
80888|code|BLX             R3|152-71
80890|code|LDR             R2, [R4]|34-104
80892|code|CBZ             R2, loc_13C42|10-179
80894|code|CMP             R2, #0xA|10-42
80896|code|IT LS|152-191
80898|code|MOVLS           R5, #1|1-37
80900|code|BLS             loc_13C22|13-217
80902|code|MOVW            R0, #0xCCCD|76-246-205-64
80906|code|CMP             R2, #0x3C ; '<'|60-42
80908|code|MOVT.W          R0, #0xCCCC|204-246-204-64
80912|code|UMULL.W         R0, R1, R2, R0|162-251-0-1
80916|code|BHI             loc_13C72|45-216
80918|code|LSRS            R5, R1, #2|141-8
80920|code|ADD.W           R5, R5, R5,LSL#2|5-235-133-5
80924|code|SUBS            R5, R2, R5|85-27
80926|code|IT EQ|8-191
80928|code|MOVEQ           R5, #5|5-37
80930|code|LDR             R1, =(aUiTimerInit - 0x13C2C); "ui_timer_init"|24-73
80932|code|MOV             R3, R5|43-70
80934|code|LDR             R0, =(aSUU - 0x13C2E); "%s: %u = %u\n"|24-72
80936|code|ADD             R1, PC; "ui_timer_init"|121-68
80938|code|ADD             R0, PC; "%s: %u = %u\n"|120-68
80940|code|ADDS            R1, #0x24 ; '$'|36-49
80942|code|BL              sub_13D9C|0-240-181-248
80946|code|LDR             R3, [R4]|35-104
80948|code|MOV             R0, R5|40-70
80950|code|SUBS            R5, R3, R5|93-27
80952|code|STR             R5, [R4]|37-96
80954|code|POP.W           {R4-R6,LR}|189-232-112-64
80958|code|B.W             j_alarm|253-247-97-190
80962|code|LDR             R5, =(aUiTimerInit - 0x13C4C); "ui_timer_init"|18-77
80964|code|MOV             R3, R2|19-70
80966|code|LDR             R0, =(aSUU - 0x13C52); "%s: %u = %u\n"|18-72
80968|code|ADD             R5, PC; "ui_timer_init"|125-68
80970|code|ADD.W           R1, R5, #0x24 ; '$'|5-241-36-1
80974|code|ADD             R0, PC; "%s: %u = %u\n"|120-68
80976|code|BL              sub_13D9C|0-240-164-248
80980|code|LDR             R0, =(aSTimedOut - 0x13C5E); "%s: timed out\n"|15-72
80982|code|ADD.W           R1, R5, #0x34 ; '4'|5-241-52-1
80986|code|ADD             R0, PC; "%s: timed out\n"|120-68
80988|code|BL              sub_13D9C|0-240-158-248
80992|code|MOV             R0, R4|32-70
80994|code|BL              sub_13BB4|255-247-167-255
80998|code|LDR             R3, [R4,#0x10]|35-105
81000|code|MOV             R0, R4|32-70
81002|code|POP.W           {R4-R6,LR}|189-232-112-64
81006|code|BX              R3|24-71
81008|code|POP             {R4-R6,PC}|112-189
81010|code|LSRS            R5, R1, #3|205-8
81012|code|ADD.W           R5, R5, R5,LSL#2|5-235-133-5
81016|code|SUBS.W          R5, R2, R5,LSL#1|178-235-69-5
81020|code|IT EQ|8-191
81022|code|MOVEQ           R5, #0xA|10-37
81024|code|B               loc_13C22|207-231
81026|data|ALIGN 4|0-191
81028|data|DCD aUiTimerInit - 0x13C2C; "ui_timer_init"|140-40-0-0
81032|data|DCD aSUU - 0x13C2E; "%s: %u = %u\n"|206-40-0-0
81036|data|DCD aUiTimerInit - 0x13C4C; "ui_timer_init"|108-40-0-0
81040|data|DCD aSUU - 0x13C52; "%s: %u = %u\n"|170-40-0-0
81044|data|DCD aSTimedOut - 0x13C5E; "%s: timed out\n"|174-40-0-0
81048|code|MOVS            R3, #1|1-35
81050|code|STR             R3, [R0,#8]|131-96
81052|code|BX              LR|112-71
81054|data|ALIGN 0x10|0-191
81056|code|PUSH            {R3-R5,LR}|56-181
81058|code|LDR             R3, [R0,#8]|131-104
81060|code|CBZ             R3, locret_13CB8|67-177
81062|code|MOV             R4, R0|4-70
81064|code|MOVS            R5, #0|0-37
81066|code|STR             R5, [R4,#8]|165-96
81068|code|MOV             R0, R4|32-70
81070|code|BL              sub_13BE8|255-247-155-255
81074|code|LDR             R3, [R4,#8]|163-104
81076|code|CMP             R3, #0|0-43
81078|code|BNE             loc_13CAA|248-209
81080|code|POP             {R3-R5,PC}|56-189
81082|data|ALIGN 4|0-191
81084|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13CC6)|22-75
81086|code|MOVS            R0, #0|0-32
81088|code|PUSH            {R4-R6,LR}|112-181
81090|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
81092|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|21-76
81094|code|SUB             SP, SP, #0x10|132-176
81096|code|LDR             R2, =(pb_system_apps_ptr - 0x27000)|21-74
81098|code|LDR             R1, =(aSSbinPbDiscove - 0x13CD2); "%s/sbin/pb-discover"|22-73
81100|code|LDR             R5, [R3,R4]; __stack_chk_guard|29-89
81102|code|ADD             R1, PC; "%s/sbin/pb-discover"|121-68
81104|code|LDR             R4, [R5]|44-104
81106|code|STR             R4, [SP,#0x20+var_14]|3-148
81108|code|LDR             R3, [R3,R2]; pb_system_apps|155-88
81110|code|LDR             R2, [R3]|26-104
81112|code|BL              sub_15448|1-240-182-251
81116|code|MOVS            R3, #0|0-35
81118|code|MOV             R1, R3|25-70
81120|code|MOV             R2, R3|26-70
81122|code|STR             R3, [SP,#0x20+var_18]|2-147
81124|code|MOV             R6, R0|6-70
81126|code|ADD             R0, SP, #0x20+var_1C|1-168
81128|code|STR             R6, [SP,#0x20+var_1C]|1-150
81130|code|BL              sub_1575C|1-240-55-253
81134|code|MOV             R4, R0|4-70
81136|code|MOV             R0, R6|48-70
81138|code|BL              sub_14BC0|0-240-101-255
81142|code|CBZ             R4, loc_13D06|52-177
81144|code|LDR             R0, =(aSFailedD - 0x13D02); "%s: failed: (%d)\n"|11-72
81146|code|MOV             R2, R4|34-70
81148|code|LDR             R1, =(aPbStartDaemon - 0x13D04); "pb_start_daemon"|11-73
81150|code|ADD             R0, PC; "%s: failed: (%d)\n"|120-68
81152|code|ADD             R1, PC; "pb_start_daemon"|121-68
81154|code|BL              sub_13D9C|0-240-75-248
81158|code|LDR             R2, [SP,#0x20+var_14]|3-154
81160|code|MOV             R0, R4|32-70
81162|code|LDR             R3, [R5]|43-104
81164|code|CMP             R2, R3|154-66
81166|code|BNE             loc_13D14|1-209
81168|code|ADD             SP, SP, #0x10|4-176
81170|code|POP             {R4-R6,PC}|112-189
81172|code|BLX             __stack_chk_fail|253-247-234-237
81176|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13CC6|58-51-1-0
81180|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
81184|data|DCD pb_system_apps_ptr - 0x27000|192-1-0-0
81188|data|DCD aSSbinPbDiscove - 0x13CD2; "%s/sbin/pb-discover"|102-40-0-0
81192|data|DCD aSFailedD - 0x13D02; "%s: failed: (%d)\n"|74-40-0-0
81196|data|DCD aPbStartDaemon - 0x13D04; "pb_start_daemon"|24-40-0-0
81200|code|PUSH            {R4,LR}|16-181
81202|code|LDRB            R3, [R0]|3-120
81204|code|CBZ             R3, loc_13D66|187-177
81206|code|MOVS            R4, #0|0-36
81208|code|ADD.W           R2, R3, R4,LSL#4|3-235-4-18
81212|code|LDRB.W          R3, [R0,#1]!|16-248-1-63
81216|code|ANDS.W          R4, R2, #0xF0000000|18-240-112-68
81220|code|IT NE|24-191
81222|code|EORNE.W         R2, R2, R4,LSR#24|130-234-20-98
81226|code|BIC.W           R4, R2, R4|34-234-4-4
81230|code|CMP             R3, #0|0-43
81232|code|BNE             loc_13D38|242-209
81234|code|LDR             R1, =(aPbStartDaemon - 0x13D5C); "pb_start_daemon"|6-73
81236|code|MOV             R2, R4|34-70
81238|code|LDR             R0, =(aSX - 0x13D5E); "%s: %x\n"|6-72
81240|code|ADD             R1, PC; "pb_start_daemon"|121-68
81242|code|ADD             R0, PC; "%s: %x\n"|120-68
81244|code|ADDS            R1, #0x10|16-49
81246|code|BL              sub_13D9C|0-240-29-248
81250|code|MOV             R0, R4|32-70
81252|code|POP             {R4,PC}|16-189
81254|code|MOV             R4, R3|28-70
81256|code|B               loc_13D52|243-231
81258|data|ALIGN 4|0-191
81260|data|DCD aPbStartDaemon - 0x13D5C; "pb_start_daemon"|192-39-0-0
81264|data|DCD aSX - 0x13D5E; "%s: %x\n"|2-40-0-0
81268|code|PUSH            {R3-R5,LR}|56-181
81270|code|MOV             R3, R1|11-70
81272|code|LDR             R1, =(aSS_1 - 0x13D82); "%s%s"|7-73
81274|code|MOV             R2, R0|2-70
81276|code|MOVS            R0, #0|0-32
81278|code|ADD             R1, PC; "%s%s"|121-68
81280|code|BL              sub_15448|1-240-98-251
81284|code|MOV             R5, R0|5-70
81286|code|BL              sub_13D30|255-247-211-255
81290|code|MOV             R4, R0|4-70
81292|code|MOV             R0, R5|40-70
81294|code|BL              sub_14BC0|0-240-23-255
81298|code|MOV             R0, R4|32-70
81300|code|POP             {R3-R5,PC}|56-189
81302|data|ALIGN 4|0-191
81304|data|DCD aSS_1 - 0x13D82; "%s%s"|230-39-0-0
81308|code|PUSH            {R0-R3}|15-180
81310|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x13DA6)|21-72
81312|code|LDR             R1, =(__stack_chk_guard_ptr - 0x27000)|21-73
81314|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
81316|code|LDR             R3, =(dword_272A0 - 0x13DAC)|21-75
81318|code|PUSH            {R4-R6,LR}|112-181
81320|code|ADD             R3, PC; dword_272A0|123-68
81322|code|LDR             R5, [R0,R1]; __stack_chk_guard|69-88
81324|code|SUB             SP, SP, #8|130-176
81326|code|LDR             R4, [R3]|28-104
81328|code|LDR             R2, [SP,#0x28+varg_r0]|6-154
81330|code|LDR             R3, [R5]|43-104
81332|code|STR             R3, [SP,#0x28+var_24]|1-147
81334|code|CBZ             R4, loc_13DE6|180-177
81336|code|ADD             R6, SP, #0x28+varg_r1|7-174
81338|code|MOV             R0, R4|32-70
81340|code|MOVS            R1, #1|1-33
81342|code|STR             R6, [SP,#0x28+var_28]|0-150
81344|code|MOV             R3, R6|51-70
81346|code|BLX             __vfprintf_chk|253-247-82-238
81350|code|LDR             R3, =(dword_272A0 - 0x13DCC)|14-75
81352|code|ADD             R3, PC; dword_272A0|123-68
81354|code|LDR             R3, [R3,#(dword_272A4 - 0x272A0)]|91-104
81356|code|CBZ             R3, loc_13DD4|19-177
81358|code|MOV             R0, R4; stream|32-70
81360|code|BLX             fflush|253-247-36-237
81364|code|LDR             R2, [SP,#0x28+var_24]|1-154
81366|code|LDR             R3, [R5]|43-104
81368|code|CMP             R2, R3|154-66
81370|code|BNE             loc_13DEE|8-209
81372|code|ADD             SP, SP, #8|2-176
81374|code|POP.W           {R4-R6,LR}|189-232-112-64
81378|code|ADD             SP, SP, #0x10|4-176
81380|code|BX              LR|112-71
81382|code|LDR             R3, =(stderr_ptr - 0x27000)|7-75
81384|code|LDR             R3, [R0,R3]; stderr|195-88
81386|code|LDR             R4, [R3]|28-104
81388|code|B               loc_13DB8|228-231
81390|code|BLX             __stack_chk_fail|253-247-126-237
81394|data|ALIGN 4|0-191
81396|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13DA6|90-50-1-0
81400|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
81404|data|DCD dword_272A0 - 0x13DAC|244-52-1-0
81408|data|DCD dword_272A0 - 0x13DCC|212-52-1-0
81412|data|DCD stderr_ptr - 0x27000|196-1-0-0
81416|code|LDR             R3, =(dword_272A0 - 0x13E10)|8-75
81418|code|PUSH            {R4,LR}|16-181
81420|code|ADD             R3, PC; dword_272A0|123-68
81422|code|MOV             R4, R0|4-70
81424|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x13E18)|7-74
81426|code|LDR             R0, [R3]|24-104
81428|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
81430|code|CBZ             R0, loc_13E24|40-177
81432|code|BLX             fflush|253-247-0-237
81436|code|LDR             R3, =(dword_272A0 - 0x13E22)|5-75
81438|code|ADD             R3, PC; dword_272A0|123-68
81440|code|STR             R4, [R3]|28-96
81442|code|POP             {R4,PC}|16-189
81444|code|LDR             R3, =(stderr_ptr - 0x27000)|4-75
81446|code|LDR             R3, [R2,R3]; stderr|211-88
81448|code|LDR             R0, [R3]|24-104
81450|code|B               loc_13E18|245-231
81452|data|DCD dword_272A0 - 0x13E10|144-52-1-0
81456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13E18|232-49-1-0
81460|data|DCD dword_272A0 - 0x13E22|126-52-1-0
81464|data|DCD stderr_ptr - 0x27000|196-1-0-0
81468|code|LDR             R3, =(dword_272A0 - 0x13E44)|5-75
81470|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x13E46)|6-74
81472|code|ADD             R3, PC; dword_272A0|123-68
81474|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
81476|code|LDR             R0, [R3]|24-104
81478|code|CBZ             R0, loc_13E4A|0-177
81480|code|BX              LR|112-71
81482|code|LDR             R3, =(stderr_ptr - 0x27000)|4-75
81484|code|LDR             R3, [R2,R3]; stderr|211-88
81486|code|LDR             R0, [R3]|24-104
81488|code|BX              LR|112-71
81490|data|ALIGN 4|0-191
81492|data|DCD dword_272A0 - 0x13E44|92-52-1-0
81496|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13E46|186-49-1-0
81500|data|DCD stderr_ptr - 0x27000|196-1-0-0
81504|code|LDR             R3, =(dword_272A0 - 0x13E66)|1-75
81506|code|ADD             R3, PC; dword_272A0|123-68
81508|code|STR             R0, [R3,#(dword_272A4 - 0x272A0)]|88-96
81510|code|BX              LR|112-71
81512|data|DCD dword_272A0 - 0x13E66|58-52-1-0
81516|code|STR             R0, [R0,#4]|64-96
81518|code|STR             R0, [R0]|0-96
81520|code|BX              LR|112-71
81522|data|ALIGN 4|0-191
81524|code|LDR             R3, [R0]|3-104
81526|code|STR             R0, [R1,#4]|72-96
81528|code|STR             R3, [R1]|11-96
81530|code|LDR             R3, [R0]|3-104
81532|code|STR             R1, [R3,#4]|89-96
81534|code|STR             R1, [R0]|1-96
81536|code|BX              LR|112-71
81538|data|ALIGN 4|0-191
81540|code|LDR             R3, [R0,#4]|67-104
81542|code|STM.W           R1, {R0,R3}|129-232-9-0
81546|code|LDR             R3, [R0,#4]|67-104
81548|code|STR             R1, [R3]|25-96
81550|code|STR             R1, [R0,#4]|65-96
81552|code|BX              LR|112-71
81554|data|ALIGN 4|0-191
81556|code|LDM.W           R0, {R2,R3}|144-232-12-0
81560|code|STR             R2, [R3]|26-96
81562|code|LDR             R2, [R0]|2-104
81564|code|STR             R3, [R2,#4]|83-96
81566|code|BX              LR|112-71
81568|code|LDR             R2, =(aStructWaitset - 0x13EA8); "struct waitset"|2-74
81570|code|MOVS            R1, #0x18|24-33
81572|code|ADD             R2, PC; "struct waitset"|122-68
81574|code|B.W             sub_15218|1-240-183-185
81578|data|ALIGN 4|0-191
81580|data|DCD aStructWaitset - 0x13EA8; "struct waitset"|200-38-0-0
81584|code|B.W             sub_14BC0|0-240-134-190
81588|code|PUSH.W          {R4-R9,LR}|45-233-240-67
81592|code|MOV             R8, R2|144-70
81594|code|LDR             R2, =(aStructWaiter - 0x13ECA); "struct waiter"|24-74
81596|code|SUB             SP, SP, #0xC|131-176
81598|code|MOV             R4, R0|4-70
81600|code|MOV             R9, R1|137-70
81602|code|LDR             R0, [R0]|0-104
81604|code|MOVS            R1, #0x14|20-33
81606|code|ADD             R2, PC; "struct waiter"|122-68
81608|code|MOV             R7, R3|31-70
81610|code|BL              sub_14A14|0-240-163-253
81614|code|MOV             R5, R0|5-70
81616|code|CBZ             R0, loc_13F10|240-177
81618|code|LDR             R3, [R4,#4]|99-104
81620|code|MOV             R0, R4|32-70
81622|code|LDR             R6, =(aStructWaiter_0 - 0x13EE2); "struct waiter *"|18-78
81624|code|MOVS            R2, #4|4-34
81626|code|LDR             R1, [R4]|33-104
81628|code|ADDS            R3, #1|1-51
81630|code|ADD             R6, PC; "struct waiter *"|126-68
81632|code|STR             R6, [SP,#0x28+var_28]|0-150
81634|code|BL              sub_154E0|1-240-253-250
81638|code|MOV             R6, R0|6-70
81640|code|CBZ             R0, loc_13F12|152-177
81642|code|LDR             R3, [R4,#4]|99-104
81644|code|MOVS            R1, #1|1-33
81646|code|STR             R0, [R4]|32-96
81648|code|MOV             R0, R5|40-70
81650|code|STRB            R1, [R4,#8]|33-114
81652|code|ADDS            R2, R3, R1|90-24
81654|code|STR             R2, [R4,#4]|98-96
81656|code|STR.W           R5, [R6,R3,LSL#2]|70-248-35-80
81660|code|LDR             R3, [SP,#0x28+arg_0]|10-155
81662|code|STM.W           R5, {R4,R9}|133-232-16-2
81666|code|STR.W           R8, [R5,#8]|197-248-8-128
81670|code|STR             R7, [R5,#0xC]|239-96
81672|code|STR             R3, [R5,#0x10]|43-97
81674|code|ADD             SP, SP, #0xC|3-176
81676|code|POP.W           {R4-R9,PC}|189-232-240-131
81680|code|B               loc_13F0A|251-231
81682|code|MOV             R0, R5|40-70
81684|code|BL              sub_14BC0|0-240-84-254
81688|code|MOV             R0, R6|48-70
81690|code|B               loc_13F0A|246-231
81692|data|DCD aStructWaiter - 0x13ECA; "struct waiter"|182-38-0-0
81696|data|DCD aStructWaiter_0 - 0x13EE2; "struct waiter *"|174-38-0-0
81700|code|PUSH            {R4-R7,LR}|240-181
81702|code|MOV             R7, R0|7-70
81704|code|LDR             R5, [R0]|5-104
81706|code|SUB             SP, SP, #0xC|131-176
81708|code|LDM.W           R5, {R1,R6}|149-232-66-0
81712|code|CMP             R6, #0|0-46
81714|code|ITTT LE|222-191
81716|code|MOVLE           R4, #4|4-36
81718|code|MOVLE           R2, #0|0-34
81720|code|MOVLE           R0, R1|8-70
81722|code|BLE             loc_13F60|17-221
81724|code|LDR             R3, [R1]|11-104
81726|code|CMP             R3, R7|187-66
81728|code|BEQ             loc_13F98|42-208
81730|code|ADDS            R4, R1, #4|12-29
81732|code|MOVS            R2, #0|0-34
81734|code|B               loc_13F4E|2-224
81736|code|LDR             R3, [R0]|3-104
81738|code|CMP             R3, R7|187-66
81740|code|BEQ             loc_13F92|33-208
81742|code|ADDS            R2, #1|1-50
81744|code|MOV             R0, R4|32-70
81746|code|CMP             R2, R6|178-66
81748|code|ADD.W           R4, R4, #4|4-241-4-4
81752|code|BNE             loc_13F48|246-209
81754|code|LSLS            R4, R2, #2|148-0
81756|code|ADDS            R0, R1, R4; dest|8-25
81758|code|ADDS            R4, #4|4-52
81760|code|SUBS            R6, #1|1-62
81762|code|ADD             R1, R4; src|33-68
81764|code|SUBS            R2, R6, R2|178-26
81766|code|STR             R6, [R5,#4]|110-96
81768|code|LDR             R4, =(aStructWaiter_0 - 0x13F7A); "struct waiter *"|13-76
81770|code|LSLS            R2, R2, #2; n|146-0
81772|code|BLX             memmove|253-247-100-236
81776|code|LDM.W           R5, {R0,R3}|149-232-9-0
81780|code|MOVS            R2, #4|4-34
81782|code|ADD             R4, PC; "struct waiter *"|124-68
81784|code|STR             R4, [SP,#0x20+var_20]|0-148
81786|code|MOV             R1, R0|1-70
81788|code|BL              sub_154E0|1-240-176-250
81792|code|MOVS            R3, #1|1-35
81794|code|STRB            R3, [R5,#8]|43-114
81796|code|STR             R0, [R5]|40-96
81798|code|MOV             R0, R7|56-70
81800|code|ADD             SP, SP, #0xC|3-176
81802|code|POP.W           {R4-R7,LR}|189-232-240-64
81806|code|B.W             sub_14BC0|0-240-23-190
81810|code|ADDS            R4, R2, #1|84-28
81812|code|LSLS            R4, R4, #2|164-0
81814|code|B               loc_13F60|227-231
81816|code|MOV             R0, R1|8-70
81818|code|MOVS            R4, #4|4-36
81820|code|MOVS            R2, #0|0-34
81822|code|B               loc_13F60|223-231
81824|data|DCD aStructWaiter_0 - 0x13F7A; "struct waiter *"|22-38-0-0
81828|code|LDRB            R3, [R0,#8]|3-122
81830|code|PUSH            {R4-R7,LR}|240-181
81832|code|MOV             R5, R0|5-70
81834|code|SUB             SP, SP, #0xC|131-176
81836|code|LDR.W           R12, [R0,#0x14]|208-248-20-192
81840|code|CBNZ            R3, loc_1400A|91-187
81842|code|LDR             R0, [R0,#0xC]; fds|192-104
81844|code|MOV             R1, R12; nfds|97-70
81846|code|MOV.W           R2, #0xFFFFFFFF; timeout|79-240-255-50
81850|code|BLX             poll|253-247-222-236
81854|code|CMP             R0, #0|0-40
81856|code|BLE             loc_13FFA|27-221
81858|code|LDR             R2, [R5,#0x14]|106-105
81860|code|CMP             R2, #0|0-42
81862|code|IT GT|200-191
81864|code|MOVGT           R4, #0|0-36
81866|code|BGT             loc_13FD4|3-220
81868|code|B               loc_13FF8|20-224
81870|code|ADDS            R4, #1|1-52
81872|code|CMP             R2, R4|162-66
81874|code|BLE             loc_13FF8|17-221
81876|code|LDR             R3, [R5,#0xC]|235-104
81878|code|ADD.W           R3, R3, R4,LSL#3|3-235-196-3
81882|code|LDRSH.W         R3, [R3,#6]|179-249-6-48
81886|code|CMP             R3, #0|0-43
81888|code|BEQ             loc_13FCE|245-208
81890|code|LDR             R3, [R5,#0x10]|43-105
81892|code|LDR.W           R3, [R3,R4,LSL#2]|83-248-36-48
81896|code|LDR             R2, [R3,#0xC]|218-104
81898|code|LDR             R0, [R3,#0x10]|24-105
81900|code|BLX             R2|144-71
81902|code|CBNZ            R0, loc_13FFE|48-185
81904|code|LDR             R2, [R5,#0x14]|106-105
81906|code|ADDS            R4, #1|1-52
81908|code|CMP             R2, R4|162-66
81910|code|BGT             loc_13FD4|237-220
81912|code|MOVS            R0, #0|0-32
81914|code|ADD             SP, SP, #0xC|3-176
81916|code|POP             {R4-R7,PC}|240-189
81918|code|LDR             R3, [R5,#0x10]|43-105
81920|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
81924|code|BL              sub_13F24|255-247-142-255
81928|code|B               loc_13FF0|242-231
81930|code|LDR             R3, [R0,#4]|67-104
81932|code|CMP             R12, R3|156-69
81934|code|BEQ             loc_14074|49-208
81936|code|LDR             R4, =(aStructWaiter_0 - 0x1401A); "struct waiter *"|25-76
81938|code|MOVS            R2, #4|4-34
81940|code|LDR             R1, [R0,#0x10]|1-105
81942|code|ADD             R4, PC; "struct waiter *"|124-68
81944|code|STR             R4, [SP,#0x20+var_20]|0-148
81946|code|BL              sub_154E0|1-240-97-250
81950|code|LDR             R4, =(aStructPollfd - 0x1402A); "struct pollfd"|23-76
81952|code|LDR             R3, [R5,#4]|107-104
81954|code|MOVS            R2, #8|8-34
81956|code|LDR             R1, [R5,#0xC]|233-104
81958|code|ADD             R4, PC; "struct pollfd"|124-68
81960|code|STR             R4, [SP,#0x20+var_20]|0-148
81962|code|STR             R0, [R5,#0x10]|40-97
81964|code|MOV             R0, R5|40-70
81966|code|BL              sub_154E0|1-240-87-250
81970|code|LDR.W           R12, [R5,#4]|213-248-4-192
81974|code|STR.W           R12, [R5,#0x14]|197-248-20-192
81978|code|MOV             R3, R0|3-70
81980|code|STR             R3, [R5,#0xC]|235-96
81982|code|CMP.W           R12, #0|188-241-0-15
81986|code|BLE             loc_1406E|20-221
81988|code|MOVS            R3, #0|0-35
81990|code|MOV             LR, R3|158-70
81992|code|LDR             R2, [R5]|42-104
81994|code|ADD.W           R4, R0, R3,LSL#3|0-235-195-4
81998|code|LDR             R6, [R5,#0x10]|46-105
82000|code|LDR.W           R2, [R2,R3,LSL#2]|82-248-35-32
82004|code|LDR             R7, [R2,#8]|151-104
82006|code|LDR             R1, [R2,#4]|81-104
82008|code|STR.W           R1, [R0,R3,LSL#3]|64-248-51-16
82012|code|STRH            R7, [R4,#4]|167-128
82014|code|STRH.W          LR, [R4,#6]|164-248-6-224
82018|code|STR.W           R2, [R6,R3,LSL#2]|70-248-35-32
82022|code|ADDS            R3, #1|1-51
82024|code|CMP             R3, R12|99-69
82026|code|LDR             R0, [R5,#0xC]|232-104
82028|code|BNE             loc_14048|236-209
82030|code|MOVS            R3, #0|0-35
82032|code|STRB            R3, [R5,#8]|43-114
82034|code|B               loc_13FB4|159-231
82036|code|LDR             R0, [R0,#0xC]|192-104
82038|code|B               loc_1403E|226-231
82040|data|DCD aStructWaiter_0 - 0x1401A; "struct waiter *"|118-37-0-0
82044|data|DCD aStructPollfd - 0x1402A; "struct pollfd"|118-37-0-0
82048|code|PUSH.W          {R3-R9,LR}|45-233-248-67
82052|code|LDR             R5, [R2]|21-104
82054|code|CMP             R5, #3|3-45
82056|code|BLS             loc_140DA|39-217
82058|code|LDR.W           LR, [R1]|209-248-0-224
82062|code|LDR.W           R4, [LR]|222-248-0-64
82066|code|EOR.W           R6, R4, R4,ROR#16|132-234-52-70
82070|code|MOV.W           R4, R4,ROR#8|79-234-52-36
82074|code|BIC.W           R6, R6, #0xFF0000|38-244-127-6
82078|code|EOR.W           R4, R4, R6,LSR#8|132-234-22-36
82082|code|ADD.W           R8, R4, #4|4-241-4-8
82086|code|CMP             R5, R8|69-69
82088|code|BCC             loc_140DA|23-211
82090|code|MOV             R6, R3|30-70
82092|code|MOV             R7, R1|15-70
82094|code|MOV             R9, R2|145-70
82096|code|CBNZ            R4, loc_140C8|84-185
82098|code|STR             R4, [R3]|28-96
82100|code|LDR             R3, [R7]|59-104
82102|code|RSB.W           R5, R8, R5|200-235-5-5
82106|code|MOVS            R0, #0|0-32
82108|code|ADD             R3, R8|67-68
82110|code|STR             R3, [R7]|59-96
82112|code|STR.W           R5, [R9]|201-248-0-80
82116|code|POP.W           {R3-R9,PC}|189-232-248-131
82120|code|ADD.W           R1, LR, #4|14-241-4-1
82124|code|MOV             R2, R4|34-70
82126|code|BL              sub_15284|1-240-217-248
82130|code|LDR.W           R5, [R9]|217-248-0-80
82134|code|STR             R0, [R6]|48-96
82136|code|B               loc_140B4|236-231
82138|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
82142|code|POP.W           {R3-R9,PC}|189-232-248-131
82146|data|ALIGN 4|0-191
82148|code|PUSH.W          {R4-R11,LR}|45-233-240-79
82152|code|MOV             R8, R0|128-70
82154|code|MOV             R5, R2|21-70
82156|code|MOV             R0, R2|16-70
82158|code|LDR             R2, =(aSnewDev - 0x140FA); "%snew dev:\n"|77-74
82160|code|SUB             SP, SP, #0x1C|135-176
82162|code|MOV             R4, R1|12-70
82164|code|MOV             R3, R1|11-70
82166|code|ADD             R2, PC; "%snew dev:\n"|122-68
82168|code|MOVS            R1, #1|1-33
82170|code|BLX             __fprintf_chk|253-247-86-237
82174|code|LDR.W           R7, [R8]|216-248-0-112
82178|code|LDR             R2, =(aSIdS - 0x1410E); "%s\tid:   %s\n"|73-74
82180|code|MOV             R3, R4|35-70
82182|code|MOVS            R1, #1|1-33
82184|code|MOV             R0, R5|40-70
82186|code|ADD             R2, PC; "%s\tid:   %s\n"|122-68
82188|code|STR             R7, [SP]|0-151
82190|code|BLX             __fprintf_chk|253-247-76-237
82194|code|LDR.W           R7, [R8,#4]|216-248-4-112
82198|code|LDR             R2, =(aSNameS - 0x14122); "%s\tname: %s\n"|69-74
82200|code|MOV             R3, R4|35-70
82202|code|MOVS            R1, #1|1-33
82204|code|MOV             R0, R5|40-70
82206|code|ADD             R2, PC; "%s\tname: %s\n"|122-68
82208|code|STR             R7, [SP]|0-151
82210|code|BLX             __fprintf_chk|253-247-66-237
82214|code|LDR.W           R7, [R8,#8]|216-248-8-112
82218|code|LDR             R2, =(aSDescS - 0x14136); "%s\tdesc: %s\n"|65-74
82220|code|MOV             R3, R4|35-70
82222|code|MOVS            R1, #1|1-33
82224|code|MOV             R0, R5|40-70
82226|code|ADD             R2, PC; "%s\tdesc: %s\n"|122-68
82228|code|STR             R7, [SP]|0-151
82230|code|BLX             __fprintf_chk|253-247-56-237
82234|code|LDR.W           R7, [R8,#0xC]|216-248-12-112
82238|code|LDR             R2, =(aSIconS - 0x1414A); "%s\ticon: %s\n"|61-74
82240|code|MOV             R3, R4|35-70
82242|code|MOVS            R1, #1|1-33
82244|code|MOV             R0, R5|40-70
82246|code|ADD             R2, PC; "%s\ticon: %s\n"|122-68
82248|code|STR             R7, [SP]|0-151
82250|code|BLX             __fprintf_chk|253-247-46-237
82254|code|LDR             R2, =(aSBootOptions - 0x1415A); "%s\tboot options:\n"|58-74
82256|code|MOV             R3, R4|35-70
82258|code|MOV             R0, R5|40-70
82260|code|MOVS            R1, #1|1-33
82262|code|ADD             R2, PC; "%s\tboot options:\n"|122-68
82264|code|BLX             __fprintf_chk|253-247-38-237
82268|code|LDR.W           R3, [R8,#0x18]|216-248-24-48
82272|code|ADD.W           R6, R8, #0x14|8-241-20-6
82276|code|CMP             R6, R3|158-66
82278|code|SUB.W           R12, R3, #0x20 ; ' '|163-241-32-12
82282|code|BEQ             loc_1421E|88-208
82284|code|MOV             R7, R12|103-70
82286|code|CMP             R7, #0|0-47
82288|code|BEQ             loc_1421E|85-208
82290|code|LDR             R3, =(aSBootS - 0x1417C); "%s\t\tboot: %s\n"|50-75
82292|code|LDR.W           R11, =(aSIdS_0 - 0x14186); "%s\t\tid:   %s\n"|223-248-200-176
82296|code|ADD             R3, PC; "%s\t\tboot: %s\n"|123-68
82298|code|LDR.W           R10, =(aSNameS_0 - 0x1418C); "%s\t\tname: %s\n"|223-248-200-160
82302|code|LDR.W           R9, =(aSDescS_0 - 0x14190); "%s\t\tdesc: %s\n"|223-248-200-144
82306|code|ADD             R11, PC; "%s\t\tid:   %s\n"|251-68
82308|code|LDR.W           R8, =(aSIconS_0 - 0x14194); "%s\t\ticon: %s\n"|223-248-196-128
82312|code|ADD             R10, PC; "%s\t\tname: %s\n"|250-68
82314|code|STR             R3, [SP,#0xC]|3-147
82316|code|ADD             R9, PC; "%s\t\tdesc: %s\n"|249-68
82318|code|LDR             R3, =(aSInitS - 0x14198); "%s\t\tinit: %s\n"|48-75
82320|code|ADD             R8, PC; "%s\t\ticon: %s\n"|248-68
82322|code|STR             R6, [SP,#0x14]|5-150
82324|code|ADD             R3, PC; "%s\t\tinit: %s\n"|123-68
82326|code|STR             R3, [SP,#0x10]|4-147
82328|code|B               loc_141A0|2-224
82330|code|MOV             R7, R12|103-70
82332|code|CMP             R7, #0|0-47
82334|code|BEQ             loc_1421E|62-208
82336|code|LDR             R6, [R7,#4]|126-104
82338|code|MOVS            R1, #1|1-33
82340|code|MOV             R2, R11|90-70
82342|code|MOV             R3, R4|35-70
82344|code|MOV             R0, R5|40-70
82346|code|STR             R6, [SP]|0-150
82348|code|BLX             __fprintf_chk|253-247-252-236
82352|code|LDR             R6, [R7,#8]|190-104
82354|code|MOVS            R1, #1|1-33
82356|code|MOV             R2, R10|82-70
82358|code|MOV             R3, R4|35-70
82360|code|MOV             R0, R5|40-70
82362|code|STR             R6, [SP]|0-150
82364|code|BLX             __fprintf_chk|253-247-244-236
82368|code|LDR             R6, [R7,#0xC]|254-104
82370|code|MOVS            R1, #1|1-33
82372|code|MOV             R2, R9|74-70
82374|code|MOV             R3, R4|35-70
82376|code|MOV             R0, R5|40-70
82378|code|STR             R6, [SP]|0-150
82380|code|BLX             __fprintf_chk|253-247-236-236
82384|code|LDR             R6, [R7,#0x10]|62-105
82386|code|MOVS            R1, #1|1-33
82388|code|MOV             R2, R8|66-70
82390|code|MOV             R3, R4|35-70
82392|code|MOV             R0, R5|40-70
82394|code|STR             R6, [SP]|0-150
82396|code|BLX             __fprintf_chk|253-247-228-236
82400|code|LDR             R6, [R7,#0x14]|126-105
82402|code|MOVS            R1, #1|1-33
82404|code|LDR             R2, [SP,#0xC]|3-154
82406|code|MOV             R3, R4|35-70
82408|code|MOV             R0, R5|40-70
82410|code|STR             R6, [SP]|0-150
82412|code|BLX             __fprintf_chk|253-247-220-236
82416|code|LDR             R6, [R7,#0x18]|190-105
82418|code|MOVS            R1, #1|1-33
82420|code|LDR             R2, [SP,#0x10]|4-154
82422|code|MOV             R3, R4|35-70
82424|code|MOV             R0, R5|40-70
82426|code|STR             R6, [SP]|0-150
82428|code|BLX             __fprintf_chk|253-247-212-236
82432|code|LDR             R6, [R7,#0x1C]|254-105
82434|code|LDR             R2, =(aSArgsS_0 - 0x1420E); "%s\t\targs: %s\n"|20-74
82436|code|MOV             R3, R4|35-70
82438|code|MOV             R0, R5|40-70
82440|code|MOVS            R1, #1|1-33
82442|code|ADD             R2, PC; "%s\t\targs: %s\n"|122-68
82444|code|STR             R6, [SP]|0-150
82446|code|BLX             __fprintf_chk|253-247-204-236
82450|code|LDR             R3, [R7,#0x24]|123-106
82452|code|LDR             R2, [SP,#0x14]|5-154
82454|code|SUB.W           R12, R3, #0x20 ; ' '|163-241-32-12
82458|code|CMP             R2, R3|154-66
82460|code|BNE             loc_1419A|189-209
82462|code|ADD             SP, SP, #0x1C|7-176
82464|code|POP.W           {R4-R11,PC}|189-232-240-143
82468|data|DCD aSnewDev - 0x140FA; "%snew dev:\n"|10-37-0-0
82472|data|DCD aSIdS - 0x1410E; "%s\tid:   %s\n"|2-37-0-0
82476|data|DCD aSNameS - 0x14122; "%s\tname: %s\n"|254-36-0-0
82480|data|DCD aSDescS - 0x14136; "%s\tdesc: %s\n"|250-36-0-0
82484|data|DCD aSIconS - 0x1414A; "%s\ticon: %s\n"|246-36-0-0
82488|data|DCD aSBootOptions - 0x1415A; "%s\tboot options:\n"|246-36-0-0
82492|data|DCD aSBootS - 0x1417C; "%s\t\tboot: %s\n"|40-37-0-0
82496|data|DCD aSIdS_0 - 0x14186; "%s\t\tid:   %s\n"|222-36-0-0
82500|data|DCD aSNameS_0 - 0x1418C; "%s\t\tname: %s\n"|232-36-0-0
82504|data|DCD aSDescS_0 - 0x14190; "%s\t\tdesc: %s\n"|244-36-0-0
82508|data|DCD aSIconS_0 - 0x14194; "%s\t\ticon: %s\n"|0-37-0-0
82512|data|DCD aSInitS - 0x14198; "%s\t\tinit: %s\n"|28-37-0-0
82516|data|DCD aSArgsS_0 - 0x1420E; "%s\t\targs: %s\n"|182-36-0-0
82520|code|PUSH            {R3,LR}|8-181
82522|code|LDR             R0, [R0]|0-104
82524|code|LDR             R1, [R1]|9-104
82526|code|BLX             strcmp|253-247-196-234
82530|code|CLZ.W           R0, R0|176-250-128-240
82534|code|LSRS            R0, R0, #5|64-9
82536|code|POP             {R3,PC}|8-189
82538|data|ALIGN 4|0-191
82540|code|PUSH            {R3,LR}|8-181
82542|code|LDR             R0, [R0,#4]|64-104
82544|code|LDR             R1, [R1,#4]|73-104
82546|code|BLX             strcmp|253-247-186-234
82550|code|CLZ.W           R0, R0|176-250-128-240
82554|code|LSRS            R0, R0, #5|64-9
82556|code|POP             {R3,PC}|8-189
82558|data|ALIGN 0x10|0-191
82560|code|PUSH            {R3-R7,LR}|248-181
82562|code|MOV             R4, R0|4-70
82564|code|MOV             R5, R1|13-70
82566|code|CBZ             R1, loc_142B2|161-177
82568|code|MOV             R0, R1; s|8-70
82570|code|BLX             strlen|253-247-36-236
82574|code|EOR.W           R3, R0, R0,ROR#16|128-234-48-67
82578|code|MOV.W           R1, R0,ROR#8|79-234-48-33
82582|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
82586|code|ADDS            R7, R0, #4|7-29
82588|code|MOV             R2, R0; n|2-70
82590|code|EOR.W           R6, R1, R3,LSR#8|129-234-19-38
82594|code|MOV             R0, R4|32-70
82596|code|MOV             R1, R5; src|41-70
82598|code|STR.W           R6, [R0],#4; dest|64-248-4-107
82602|code|BLX             memcpy|253-247-228-234
82606|code|MOV             R0, R7|56-70
82608|code|POP             {R3-R7,PC}|248-189
82610|code|MOV             R6, R1|14-70
82612|code|MOVS            R7, #4|4-39
82614|code|MOV             R2, R1|10-70
82616|code|B               loc_142A2|243-231
82618|data|ALIGN 4|0-191
82620|code|PUSH            {R4-R7,LR}|240-181
82622|code|SUB             SP, SP, #0x14|133-176
82624|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x142CC)|14-77
82626|code|MOV             R3, R1|11-70
82628|code|LDR             R6, =(__stack_chk_guard_ptr - 0x27000)|14-78
82630|code|ADD             R1, SP, #0x28+var_18|4-169
82632|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
82634|code|ADD.W           R4, R3, #8|3-241-8-4
82638|code|LDR             R7, [R3,#4]|95-104
82640|code|ADD             R2, SP, #0x28+var_20|2-170
82642|code|LDR             R6, [R5,R6]; __stack_chk_guard|174-89
82644|code|ADD             R3, SP, #0x28+var_24|1-171
82646|code|STR.W           R4, [R1,#-0x10]!|65-248-16-77
82650|code|STR             R7, [SP,#0x28+var_20]|2-151
82652|code|LDR             R4, [R6]|52-104
82654|code|STR             R4, [SP,#0x28+var_1C]|3-148
82656|code|BL              sub_14080|255-247-206-254
82660|code|CBNZ            R0, loc_142F4|48-185
82662|code|LDR             R0, [SP,#0x28+var_24]|1-152
82664|code|LDR             R2, [SP,#0x28+var_1C]|3-154
82666|code|LDR             R3, [R6]|51-104
82668|code|CMP             R2, R3|154-66
82670|code|BNE             loc_142F8|3-209
82672|code|ADD             SP, SP, #0x14|5-176
82674|code|POP             {R4-R7,PC}|240-189
82676|code|MOVS            R0, #0|0-32
82678|code|B               loc_142E8|247-231
82680|code|BLX             __stack_chk_fail|253-247-248-234
82684|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x142CC|52-45-1-0
82688|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
82692|code|PUSH            {R4-R6,LR}|112-181
82694|code|MOV             R6, R0|6-70
82696|code|LDR             R0, [R0]|0-104
82698|code|MOVS            R5, #8|8-37
82700|code|CBZ             R0, loc_14316|24-177
82702|code|BLX             strlen|253-247-226-235
82706|code|ADD.W           R5, R0, #8|0-241-8-5
82710|code|LDR             R0, [R6,#4]|112-104
82712|code|CBZ             R0, loc_1431E|8-177
82714|code|BLX             strlen|253-247-220-235
82718|code|LDR             R3, [R6,#8]|179-104
82720|code|ADDS            R4, R0, R5|68-25
82722|code|ADDS            R4, #4|4-52
82724|code|CBZ             R3, loc_1432E|27-177
82726|code|MOV             R0, R3|24-70
82728|code|BLX             strlen|253-247-212-235
82732|code|MOV             R3, R0|3-70
82734|code|LDR             R0, [R6,#0xC]|240-104
82736|code|ADD             R4, R3|28-68
82738|code|ADDS            R4, #4|4-52
82740|code|CBZ             R0, loc_1433A|8-177
82742|code|BLX             strlen|253-247-206-235
82746|code|ADD             R0, R4|32-68
82748|code|POP             {R4-R6,PC}|112-189
82750|data|ALIGN 0x10|0-191
82752|code|PUSH            {R4-R6,LR}|112-181
82754|code|MOV             R5, R0|5-70
82756|code|LDR             R0, [R0]|0-104
82758|code|MOVS            R6, #8|8-38
82760|code|CBZ             R0, loc_14352|24-177
82762|code|BLX             strlen|253-247-196-235
82766|code|ADD.W           R6, R0, #8|0-241-8-6
82770|code|LDR             R0, [R5,#4]|104-104
82772|code|CBZ             R0, loc_1435A|8-177
82774|code|BLX             strlen|253-247-190-235
82778|code|LDR             R3, [R5,#8]|171-104
82780|code|ADDS            R4, R0, R6|132-25
82782|code|ADDS            R4, #4|4-52
82784|code|MOV             R0, R3|24-70
82786|code|CBZ             R3, loc_14368|11-177
82788|code|BLX             strlen|253-247-182-235
82792|code|LDR             R3, [R5,#0xC]|235-104
82794|code|ADD             R4, R0|4-68
82796|code|ADDS            R4, #4|4-52
82798|code|MOV             R0, R3|24-70
82800|code|CBZ             R3, loc_14376|11-177
82802|code|BLX             strlen|253-247-176-235
82806|code|LDR             R3, [R5,#0x10]|43-105
82808|code|ADD             R4, R0|4-68
82810|code|ADDS            R4, #4|4-52
82812|code|MOV             R0, R3|24-70
82814|code|CBZ             R3, loc_14384|11-177
82816|code|BLX             strlen|253-247-168-235
82820|code|LDR             R3, [R5,#0x14]|107-105
82822|code|ADD             R4, R0|4-68
82824|code|ADDS            R6, R4, #4|38-29
82826|code|MOV             R4, R3|28-70
82828|code|CBZ             R3, loc_14396|27-177
82830|code|MOV             R0, R3|24-70
82832|code|BLX             strlen|253-247-160-235
82836|code|MOV             R4, R0|4-70
82838|code|LDR             R0, [R5,#0x18]|168-105
82840|code|ADD             R4, R6|52-68
82842|code|ADDS            R4, #4|4-52
82844|code|MOV             R3, R0|3-70
82846|code|CBZ             R0, loc_143A6|16-177
82848|code|BLX             strlen|253-247-152-235
82852|code|MOV             R3, R0|3-70
82854|code|LDR             R0, [R5,#0x1C]|232-105
82856|code|ADD             R4, R3|28-68
82858|code|ADDS            R4, #4|4-52
82860|code|CBZ             R0, loc_143B2|8-177
82862|code|BLX             strlen|253-247-146-235
82866|code|ADD             R0, R4|32-68
82868|code|POP             {R4-R6,PC}|112-189
82870|data|ALIGN 4|0-191
82872|code|PUSH            {R4-R6,LR}|112-181
82874|code|MOV             R6, R0|6-70
82876|code|LDR             R0, [R0]; s|0-104
82878|code|MOVS            R5, #8|8-37
82880|code|CBZ             R0, loc_143CA|24-177
82882|code|BLX             strlen|253-247-136-235
82886|code|ADD.W           R5, R0, #8|0-241-8-5
82890|code|LDR             R0, [R6,#4]; s|112-104
82892|code|CBZ             R0, loc_143D2|8-177
82894|code|BLX             strlen|253-247-130-235
82898|code|LDR             R3, [R6,#8]|179-104
82900|code|ADDS            R4, R0, R5|68-25
82902|code|ADDS            R4, #4|4-52
82904|code|CBZ             R3, loc_143E2|27-177
82906|code|MOV             R0, R3; s|24-70
82908|code|BLX             strlen|253-247-122-235
82912|code|MOV             R3, R0|3-70
82914|code|LDR             R0, [R6,#0xC]; s|240-104
82916|code|ADD             R4, R3|28-68
82918|code|ADDS            R4, #4|4-52
82920|code|CBZ             R0, loc_143EE|8-177
82922|code|BLX             strlen|253-247-116-235
82926|code|ADD             R0, R4|32-68
82928|code|POP             {R4-R6,PC}|112-189
82930|data|ALIGN 4|0-191
82932|code|PUSH            {R3-R5,LR}|56-181
82934|code|MOV             R5, R0|5-70
82936|code|LDR             R0, [R0,#4]|64-104
82938|code|MOVS            R4, #0xC|12-36
82940|code|CBZ             R0, loc_14406|24-177
82942|code|BLX             strlen|253-247-106-235
82946|code|ADD.W           R4, R0, #0xC|0-241-12-4
82950|code|LDR             R0, [R5,#8]|168-104
82952|code|CBZ             R0, loc_1440E|8-177
82954|code|BLX             strlen|253-247-100-235
82958|code|ADD             R0, R4|32-68
82960|code|ADDS            R0, #4|4-48
82962|code|POP             {R3-R5,PC}|56-189
82964|code|PUSH            {R3-R5,LR}|56-181
82966|code|MOV             R5, R0|5-70
82968|code|MOV             R4, R1|12-70
82970|code|MOV             R0, R1|8-70
82972|code|LDR             R1, [R5]|41-104
82974|code|BL              sub_14280|255-247-47-255
82978|code|LDR             R1, [R5,#4]|105-104
82980|code|ADD             R4, R0|4-68
82982|code|MOV             R0, R4|32-70
82984|code|BL              sub_14280|255-247-42-255
82988|code|LDR             R1, [R5,#8]|169-104
82990|code|ADD             R4, R0|4-68
82992|code|MOV             R0, R4|32-70
82994|code|BL              sub_14280|255-247-37-255
82998|code|LDR             R1, [R5,#0xC]|233-104
83000|code|ADD             R0, R4|32-68
83002|code|BL              sub_14280|255-247-33-255
83006|code|MOVS            R0, #0|0-32
83008|code|POP             {R3-R5,PC}|56-189
83010|data|ALIGN 4|0-191
83012|code|PUSH            {R3-R5,LR}|56-181
83014|code|MOV             R5, R0|5-70
83016|code|MOV             R4, R1|12-70
83018|code|MOV             R0, R1|8-70
83020|code|LDR             R1, [R5]|41-104
83022|code|BL              sub_14280|255-247-23-255
83026|code|LDR             R1, [R5,#4]|105-104
83028|code|ADD             R4, R0|4-68
83030|code|MOV             R0, R4|32-70
83032|code|BL              sub_14280|255-247-18-255
83036|code|LDR             R1, [R5,#8]|169-104
83038|code|ADD             R4, R0|4-68
83040|code|MOV             R0, R4|32-70
83042|code|BL              sub_14280|255-247-13-255
83046|code|LDR             R1, [R5,#0xC]|233-104
83048|code|ADD             R4, R0|4-68
83050|code|MOV             R0, R4|32-70
83052|code|BL              sub_14280|255-247-8-255
83056|code|LDR             R1, [R5,#0x10]|41-105
83058|code|ADD             R4, R0|4-68
83060|code|MOV             R0, R4|32-70
83062|code|BL              sub_14280|255-247-3-255
83066|code|LDR             R1, [R5,#0x14]|105-105
83068|code|ADD             R4, R0|4-68
83070|code|MOV             R0, R4|32-70
83072|code|BL              sub_14280|255-247-254-254
83076|code|LDR             R1, [R5,#0x18]|169-105
83078|code|ADD             R4, R0|4-68
83080|code|MOV             R0, R4|32-70
83082|code|BL              sub_14280|255-247-249-254
83086|code|LDR             R1, [R5,#0x1C]|233-105
83088|code|ADD             R0, R4|32-68
83090|code|BL              sub_14280|255-247-245-254
83094|code|MOVS            R0, #0|0-32
83096|code|POP             {R3-R5,PC}|56-189
83098|data|ALIGN 4|0-191
83100|code|PUSH            {R3-R5,LR}|56-181
83102|code|MOV             R5, R0|5-70
83104|code|MOV             R4, R1|12-70
83106|code|MOV             R0, R1|8-70
83108|code|LDR             R1, [R5]|41-104
83110|code|BL              sub_14280|255-247-235-254
83114|code|LDR             R1, [R5,#4]|105-104
83116|code|ADD             R4, R0|4-68
83118|code|MOV             R0, R4|32-70
83120|code|BL              sub_14280|255-247-230-254
83124|code|LDR             R1, [R5,#8]|169-104
83126|code|ADD             R4, R0|4-68
83128|code|MOV             R0, R4|32-70
83130|code|BL              sub_14280|255-247-225-254
83134|code|LDR             R1, [R5,#0xC]|233-104
83136|code|ADD             R0, R4|32-68
83138|code|BL              sub_14280|255-247-221-254
83142|code|MOVS            R0, #0|0-32
83144|code|POP             {R3-R5,PC}|56-189
83146|data|ALIGN 4|0-191
83148|code|LDR             R2, [R0]|2-104
83150|code|PUSH            {R3-R5,LR}|56-181
83152|code|MOV             R4, R1|12-70
83154|code|EOR.W           R3, R2, R2,ROR#16|130-234-50-67
83158|code|MOV             R5, R0|5-70
83160|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
83164|code|LDR             R1, [R0,#4]|65-104
83166|code|LSRS            R3, R3, #8|27-10
83168|code|EOR.W           R3, R3, R2,ROR#8|131-234-50-35
83172|code|STR.W           R3, [R4],#4|68-248-4-59
83176|code|MOV             R0, R4|32-70
83178|code|BL              sub_14280|255-247-201-254
83182|code|LDR             R1, [R5,#8]|169-104
83184|code|ADD             R4, R0|4-68
83186|code|MOV             R0, R4|32-70
83188|code|BL              sub_14280|255-247-196-254
83192|code|LDR             R2, [R5]|42-104
83194|code|EOR.W           R3, R2, R2,ROR#16|130-234-50-67
83198|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
83202|code|LSRS            R3, R3, #8|27-10
83204|code|EOR.W           R3, R3, R2,ROR#8|131-234-50-35
83208|code|STR             R3, [R4,R0]|35-80
83210|code|MOVS            R0, #0|0-32
83212|code|POP             {R3-R5,PC}|56-189
83214|data|ALIGN 0x10|0-191
83216|code|PUSH            {R3-R7,LR}|248-181
83218|code|MOV             R7, R1|15-70
83220|code|LDM             R1, {R1,R4}|18-201
83222|code|EOR.W           R2, R4, R4,ROR#16|132-234-52-66
83226|code|BIC.W           R2, R2, #0xFF0000|34-244-127-2
83230|code|EOR.W           R3, R1, R1,ROR#16|129-234-49-67
83234|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
83238|code|LSRS            R2, R2, #8|18-10
83240|code|EOR.W           R2, R2, R4,ROR#8|130-234-52-34
83244|code|ADDS            R4, #8|8-52
83246|code|MOV.W           R3, R3,LSR#8|79-234-19-35
83250|code|STR             R2, [R7,#4]|122-96
83252|code|EOR.W           R3, R3, R1,ROR#8|131-234-49-35
83256|code|STR             R3, [R7]|59-96
83258|code|BEQ             loc_1457A|30-208
83260|code|MOV             R6, R0|6-70
83262|code|MOV             R5, R7|61-70
83264|code|B               loc_14546|1-224
83266|code|SUBS            R4, R4, R0|36-26
83268|code|BEQ             loc_1457A|25-208
83270|code|MOV             R1, R5; buf|41-70
83272|code|MOV             R0, R6; fd|48-70
83274|code|MOV             R2, R4; n|34-70
83276|code|BLX             write|253-247-26-235
83280|code|CMP             R0, #0|0-40
83282|code|ADD             R5, R0|5-68
83284|code|BGT             loc_14542|245-220
83286|code|MOV             R0, R7|56-70
83288|code|BL              sub_14BC0|0-240-50-251
83292|code|BLX             __errno_location|253-247-236-234
83296|code|LDR             R0, [R0]; errnum|0-104
83298|code|BLX             strerror|253-247-118-234
83302|code|LDR             R1, =(aPbProtocolWrit - 0x1456C); "pb_protocol_write_message"|7-73
83304|code|ADD             R1, PC; "pb_protocol_write_message"|121-68
83306|code|MOV             R2, R0|2-70
83308|code|LDR             R0, =(aSFailedS - 0x14572); "%s: failed: %s\n"|6-72
83310|code|ADD             R0, PC; "%s: failed: %s\n"|120-68
83312|code|BL              sub_13D9C|255-247-20-252
83316|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
83320|code|POP             {R3-R7,PC}|248-189
83322|code|MOV             R0, R7|56-70
83324|code|BL              sub_14BC0|0-240-32-251
83328|code|MOVS            R0, #0|0-32
83330|code|POP             {R3-R7,PC}|248-189
83332|data|DCD aPbProtocolWrit - 0x1456C; "pb_protocol_write_message"|68-32-0-0
83336|data|DCD aSFailedS - 0x14572; "%s: failed: %s\n"|98-33-0-0
83340|code|CMP.W           R2, #0x10000|178-245-128-63
83344|code|PUSH            {R3-R5,LR}|56-181
83346|code|MOV             R4, R2|20-70
83348|code|BGT             loc_145AC|10-220
83350|code|MOV             R5, R1|13-70
83352|code|ADD.W           R1, R2, #8|2-241-8-1
83356|code|LDR             R2, =(aPbProtocolPbPr - 0x145A2); "pb-protocol/pb-protocol.c:311"|9-74
83358|code|ADD             R2, PC; "pb-protocol/pb-protocol.c:311"|122-68
83360|code|BL              sub_14A14|0-240-56-250
83364|code|MOV             R3, R0|3-70
83366|code|STR             R5, [R3]|29-96
83368|code|STR             R4, [R3,#4]|92-96
83370|code|POP             {R3-R5,PC}|56-189
83372|code|LDR             R1, =(aPbProtocolWrit - 0x145B8); "pb_protocol_write_message"|6-73
83374|code|MOV.W           R3, #0x10000|79-244-128-51
83378|code|LDR             R0, =(aSPayloadTooBig - 0x145BA); "%s: payload too big %u/%u\n"|6-72
83380|code|ADD             R1, PC; "pb_protocol_write_message"|121-68
83382|code|ADD             R0, PC; "%s: payload too big %u/%u\n"|120-68
83384|code|ADDS            R1, #0x1C|28-49
83386|code|BL              sub_13D9C|255-247-239-251
83390|code|MOVS            R0, #0|0-32
83392|code|POP             {R3-R5,PC}|56-189
83394|data|ALIGN 4|0-191
83396|data|DCD aPbProtocolPbPr - 0x145A2; "pb-protocol/pb-protocol.c:311"|94-33-0-0
83400|data|DCD aPbProtocolWrit - 0x145B8; "pb_protocol_write_message"|248-31-0-0
83404|data|DCD aSPayloadTooBig - 0x145BA; "%s: payload too big %u/%u\n"|42-33-0-0
83408|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x145DA)|54-75
83410|code|MOVS            R2, #8; nbytes|8-34
83412|code|PUSH            {R4-R7,LR}|240-181
83414|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
83416|code|LDR             R6, =(__stack_chk_guard_ptr - 0x27000)|53-78
83418|code|SUB             SP, SP, #0x14|133-176
83420|code|ADD             R4, SP, #0x28+buf|1-172
83422|code|MOV             R7, R1|15-70
83424|code|MOV             R5, R0|5-70
83426|code|MOV             R0, R7; fd|56-70
83428|code|LDR             R6, [R3,R6]; __stack_chk_guard|158-89
83430|code|MOV             R1, R4; buf|33-70
83432|code|LDR             R3, [R6]|51-104
83434|code|STR             R3, [SP,#0x28+var_1C]|3-147
83436|code|BLX             read|253-247-14-233
83440|code|CMP             R0, #8|8-40
83442|code|IT NE|24-191
83444|code|MOVNE           R0, #0|0-32
83446|code|BNE             loc_14682|68-209
83448|code|LDR             R2, [SP,#0x28+var_20]|2-154
83450|code|LDR             R1, [SP,#0x28+buf]|1-153
83452|code|EOR.W           R3, R2, R2,ROR#16|130-234-50-67
83456|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
83460|code|EOR.W           R0, R1, R1,ROR#16|129-234-49-64
83464|code|BIC.W           R0, R0, #0xFF0000|32-244-127-0
83468|code|LSRS            R3, R3, #8|27-10
83470|code|EOR.W           R2, R3, R2,ROR#8|131-234-50-34
83474|code|LSRS            R3, R0, #8|3-10
83476|code|CMP.W           R2, #0x10000|178-245-128-63
83480|code|EOR.W           R3, R3, R1,ROR#8|131-234-49-35
83484|code|STR             R2, [SP,#0x28+var_20]|2-146
83486|code|STR             R3, [SP,#0x28+buf]|1-147
83488|code|BHI             loc_14692|55-216
83490|code|ADD.W           R1, R2, #8|2-241-8-1
83494|code|LDR             R2, =(aPbProtocolPbPr_0 - 0x1462E); "pb-protocol/pb-protocol.c:342"|35-74
83496|code|MOV             R0, R5|40-70
83498|code|ADD             R2, PC; "pb-protocol/pb-protocol.c:342"|122-68
83500|code|BL              sub_14A14|0-240-242-249
83504|code|MOV             R3, R4|35-70
83506|code|MOV             R5, R0|5-70
83508|code|LDM             R3!, {R0,R1}|3-203
83510|code|STR             R0, [R5]|40-96
83512|code|STR             R1, [R5,#4]|105-96
83514|code|LDR             R2, [SP,#0x28+var_20]|2-154
83516|code|CBZ             R2, loc_1468E|58-179
83518|code|MOVS            R4, #0|0-36
83520|code|B               loc_1464A|3-224
83522|code|LDR             R2, [SP,#0x28+var_20]|2-154
83524|code|ADD             R4, R0|4-68
83526|code|CMP             R2, R4|162-66
83528|code|BLS             loc_1468E|33-217
83530|code|ADD.W           R3, R4, #8|4-241-8-3
83534|code|SUBS            R2, R2, R4; nbytes|18-27
83536|code|MOV             R0, R7; fd|56-70
83538|code|MOV             R1, R3|25-70
83540|code|ADD             R1, R5; buf|41-68
83542|code|BLX             read|253-247-218-232
83546|code|CMP             R0, #0|0-40
83548|code|BGT             loc_14642|241-220
83550|code|MOV             R0, R5|40-70
83552|code|BL              sub_14BC0|0-240-174-250
83556|code|BLX             __errno_location|253-247-104-234
83560|code|LDR             R0, [R0]; errnum|0-104
83562|code|BLX             strerror|253-247-242-233
83566|code|LDR             R1, =(aPbProtocolWrit - 0x14676); "pb_protocol_write_message"|18-73
83568|code|MOV             R2, R4|34-70
83570|code|ADD             R1, PC; "pb_protocol_write_message"|121-68
83572|code|ADDS            R1, #0x38 ; '8'|56-49
83574|code|MOV             R3, R0|3-70
83576|code|LDR             R0, =(aSFailedUS - 0x1467E); "%s: failed (%u): %s\n"|16-72
83578|code|ADD             R0, PC; "%s: failed (%u): %s\n"|120-68
83580|code|BL              sub_13D9C|255-247-142-251
83584|code|MOVS            R0, #0|0-32
83586|code|LDR             R2, [SP,#0x28+var_1C]|3-154
83588|code|LDR             R3, [R6]|51-104
83590|code|CMP             R2, R3|154-66
83592|code|BNE             loc_146A8|14-209
83594|code|ADD             SP, SP, #0x14|5-176
83596|code|POP             {R4-R7,PC}|240-189
83598|code|MOV             R0, R5|40-70
83600|code|B               loc_14682|247-231
83602|code|LDR             R1, =(aPbProtocolWrit - 0x1469E); "pb_protocol_write_message"|11-73
83604|code|MOV.W           R3, #0x10000|79-244-128-51
83608|code|LDR             R0, =(aSPayloadTooBig - 0x146A0); "%s: payload too big %u/%u\n"|10-72
83610|code|ADD             R1, PC; "pb_protocol_write_message"|121-68
83612|code|ADD             R0, PC; "%s: payload too big %u/%u\n"|120-68
83614|code|ADDS            R1, #0x38 ; '8'|56-49
83616|code|BL              sub_13D9C|255-247-124-251
83620|code|MOVS            R0, #0|0-32
83622|code|B               loc_14682|236-231
83624|code|BLX             __stack_chk_fail|253-247-32-233
83628|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x145DA|38-42-1-0
83632|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
83636|data|DCD aPbProtocolPbPr_0 - 0x1462E; "pb-protocol/pb-protocol.c:342"|242-32-0-0
83640|data|DCD aPbProtocolWrit - 0x14676; "pb_protocol_write_message"|58-31-0-0
83644|data|DCD aSFailedUS - 0x1467E; "%s: failed (%u): %s\n"|194-32-0-0
83648|data|DCD aPbProtocolWrit - 0x1469E; "pb_protocol_write_message"|18-31-0-0
83652|data|DCD aSPayloadTooBig - 0x146A0; "%s: payload too big %u/%u\n"|68-32-0-0
83656|code|PUSH.W          {R4-R8,LR}|45-233-240-65
83660|code|SUB             SP, SP, #0x10|132-176
83662|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x146DA)|31-78
83664|code|ADD             R4, SP, #0x10+var_s0|4-172
83666|code|LDR             R3, =(__stack_chk_guard_ptr - 0x27000)|31-75
83668|code|ADD             R7, SP, #4|1-175
83670|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
83672|code|LDR.W           LR, [R1,#4]|209-248-4-224
83676|code|ADDS            R1, #8|8-49
83678|code|MOV             R2, R7|58-70
83680|code|LDR.W           R8, [R6,R3]; __stack_chk_guard|86-248-3-128
83684|code|MOV             R3, R0|3-70
83686|code|STR.W           R1, [R4,#-8]!|68-248-8-29
83690|code|MOV             R1, R4|33-70
83692|code|MOV             R5, R0|5-70
83694|code|STR.W           LR, [SP,#0x10+var_C]|205-248-4-224
83698|code|LDR.W           R6, [R8]|216-248-0-96
83702|code|STR             R6, [SP,#0x10+var_4]|3-150
83704|code|BL              sub_14080|255-247-194-252
83708|code|CBNZ            R0, loc_14742|8-187
83710|code|MOV             R0, R5|40-70
83712|code|MOV             R1, R4|33-70
83714|code|MOV             R2, R7|58-70
83716|code|ADDS            R3, R5, #4|43-29
83718|code|BL              sub_14080|255-247-187-252
83722|code|CBNZ            R0, loc_14742|208-185
83724|code|MOV             R0, R5|40-70
83726|code|MOV             R1, R4|33-70
83728|code|MOV             R2, R7|58-70
83730|code|ADD.W           R3, R5, #8|5-241-8-3
83734|code|BL              sub_14080|255-247-179-252
83738|code|CBNZ            R0, loc_14742|144-185
83740|code|MOV             R1, R4|33-70
83742|code|MOV             R2, R7|58-70
83744|code|MOV             R0, R5|40-70
83746|code|ADD.W           R3, R5, #0xC|5-241-12-3
83750|code|BL              sub_14080|255-247-171-252
83754|code|ADDS            R0, #0|0-48
83756|code|IT NE|24-191
83758|code|MOVNE           R0, #1|1-32
83760|code|NEGS            R0, R0|64-66
83762|code|LDR             R2, [SP,#0x10+var_4]|3-154
83764|code|LDR.W           R3, [R8]|216-248-0-48
83768|code|CMP             R2, R3|154-66
83770|code|BNE             loc_14748|5-209
83772|code|ADD             SP, SP, #0x10|4-176
83774|code|POP.W           {R4-R8,PC}|189-232-240-129
83778|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
83782|code|B               loc_14732|244-231
83784|code|BLX             __stack_chk_fail|253-247-208-232
83788|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x146DA|38-41-1-0
83792|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
83796|code|PUSH.W          {R4-R8,LR}|45-233-240-65
83800|code|SUB             SP, SP, #0x10|132-176
83802|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x14766)|48-79
83804|code|ADD             R5, SP, #0x28+var_18|4-173
83806|code|LDR             R3, =(__stack_chk_guard_ptr - 0x27000)|48-75
83808|code|ADD             R6, SP, #0x28+var_24|1-174
83810|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
83812|code|LDR.W           LR, [R1,#4]|209-248-4-224
83816|code|ADDS            R1, #8|8-49
83818|code|MOV             R2, R6|50-70
83820|code|LDR.W           R8, [R7,R3]; __stack_chk_guard|87-248-3-128
83824|code|MOV             R3, R0|3-70
83826|code|STR.W           R1, [R5,#-8]!|69-248-8-29
83830|code|MOV             R1, R5|41-70
83832|code|MOV             R4, R0|4-70
83834|code|STR.W           LR, [SP,#0x28+var_24]|205-248-4-224
83838|code|LDR.W           R7, [R8]|216-248-0-112
83842|code|STR             R7, [SP,#0x28+var_1C]|3-151
83844|code|BL              sub_14080|255-247-124-252
83848|code|CMP             R0, #0|0-40
83850|code|BNE             loc_14810|65-209
83852|code|MOV             R0, R4|32-70
83854|code|MOV             R1, R5|41-70
83856|code|MOV             R2, R6|50-70
83858|code|ADDS            R3, R4, #4|35-29
83860|code|BL              sub_14080|255-247-116-252
83864|code|CBNZ            R0, loc_14810|208-187
83866|code|MOV             R0, R4|32-70
83868|code|MOV             R1, R5|41-70
83870|code|MOV             R2, R6|50-70
83872|code|ADD.W           R3, R4, #8|4-241-8-3
83876|code|BL              sub_14080|255-247-108-252
83880|code|CBNZ            R0, loc_14810|144-187
83882|code|MOV             R0, R4|32-70
83884|code|MOV             R1, R5|41-70
83886|code|MOV             R2, R6|50-70
83888|code|ADD.W           R3, R4, #0xC|4-241-12-3
83892|code|BL              sub_14080|255-247-100-252
83896|code|CBNZ            R0, loc_14810|80-187
83898|code|MOV             R0, R4|32-70
83900|code|MOV             R1, R5|41-70
83902|code|MOV             R2, R6|50-70
83904|code|ADD.W           R3, R4, #0x10|4-241-16-3
83908|code|BL              sub_14080|255-247-92-252
83912|code|CBNZ            R0, loc_14810|16-187
83914|code|MOV             R0, R4|32-70
83916|code|MOV             R1, R5|41-70
83918|code|MOV             R2, R6|50-70
83920|code|ADD.W           R3, R4, #0x14|4-241-20-3
83924|code|BL              sub_14080|255-247-84-252
83928|code|CBNZ            R0, loc_14810|208-185
83930|code|MOV             R0, R4|32-70
83932|code|MOV             R1, R5|41-70
83934|code|MOV             R2, R6|50-70
83936|code|ADD.W           R3, R4, #0x18|4-241-24-3
83940|code|BL              sub_14080|255-247-76-252
83944|code|CBNZ            R0, loc_14810|144-185
83946|code|MOV             R1, R5|41-70
83948|code|MOV             R2, R6|50-70
83950|code|MOV             R0, R4|32-70
83952|code|ADD.W           R3, R4, #0x1C|4-241-28-3
83956|code|BL              sub_14080|255-247-68-252
83960|code|ADDS            R0, #0|0-48
83962|code|IT NE|24-191
83964|code|MOVNE           R0, #1|1-32
83966|code|NEGS            R0, R0|64-66
83968|code|LDR             R2, [SP,#0x28+var_1C]|3-154
83970|code|LDR.W           R3, [R8]|216-248-0-48
83974|code|CMP             R2, R3|154-66
83976|code|BNE             loc_14816|5-209
83978|code|ADD             SP, SP, #0x10|4-176
83980|code|POP.W           {R4-R8,PC}|189-232-240-129
83984|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
83988|code|B               loc_14800|244-231
83990|code|BLX             __stack_chk_fail|253-247-106-232
83994|data|ALIGN 4|0-191
83996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x14766|154-40-1-0
84000|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
84004|code|PUSH.W          {R4-R8,LR}|45-233-240-65
84008|code|SUB             SP, SP, #0x10|132-176
84010|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x14836)|31-78
84012|code|ADD             R4, SP, #0x10|4-172
84014|code|LDR             R3, =(__stack_chk_guard_ptr - 0x27000)|31-75
84016|code|ADD             R7, SP, #4|1-175
84018|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
84020|code|LDR.W           LR, [R1,#4]|209-248-4-224
84024|code|ADDS            R1, #8|8-49
84026|code|MOV             R2, R7|58-70
84028|code|LDR.W           R8, [R6,R3]; __stack_chk_guard|86-248-3-128
84032|code|MOV             R3, R0|3-70
84034|code|STR.W           R1, [R4,#-8]!|68-248-8-29
84038|code|MOV             R1, R4|33-70
84040|code|MOV             R5, R0|5-70
84042|code|STR.W           LR, [SP,#4]|205-248-4-224
84046|code|LDR.W           R6, [R8]|216-248-0-96
84050|code|STR             R6, [SP,#0xC]|3-150
84052|code|BL              sub_14080|255-247-20-252
84056|code|CBNZ            R0, loc_1489E|8-187
84058|code|MOV             R0, R5|40-70
84060|code|MOV             R1, R4|33-70
84062|code|MOV             R2, R7|58-70
84064|code|ADDS            R3, R5, #4|43-29
84066|code|BL              sub_14080|255-247-13-252
84070|code|CBNZ            R0, loc_1489E|208-185
84072|code|MOV             R0, R5|40-70
84074|code|MOV             R1, R4|33-70
84076|code|MOV             R2, R7|58-70
84078|code|ADD.W           R3, R5, #8|5-241-8-3
84082|code|BL              sub_14080|255-247-5-252
84086|code|CBNZ            R0, loc_1489E|144-185
84088|code|MOV             R1, R4|33-70
84090|code|MOV             R2, R7|58-70
84092|code|MOV             R0, R5|40-70
84094|code|ADD.W           R3, R5, #0xC|5-241-12-3
84098|code|BL              sub_14080|255-247-253-251
84102|code|ADDS            R0, #0|0-48
84104|code|IT NE|24-191
84106|code|MOVNE           R0, #1|1-32
84108|code|NEGS            R0, R0|64-66
84110|code|LDR             R2, [SP,#0xC]|3-154
84112|code|LDR.W           R3, [R8]|216-248-0-48
84116|code|CMP             R2, R3|154-66
84118|code|BNE             loc_148A4|5-209
84120|code|ADD             SP, SP, #0x10|4-176
84122|code|POP.W           {R4-R8,PC}|189-232-240-129
84126|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
84130|code|B               loc_1488E|244-231
84132|code|BLX             __stack_chk_fail|253-247-34-232
84136|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x14836|202-39-1-0
84140|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
84144|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x148B8)|38-75
84146|code|LDR             R2, =(__stack_chk_guard_ptr - 0x27000)|39-74
84148|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
84150|code|PUSH.W          {R4-R9,LR}|45-233-240-67
84154|code|MOV             R4, R1|12-70
84156|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
84158|code|SUB             SP, SP, #0x14|133-176
84160|code|LDR             R7, [R4,#4]|103-104
84162|code|ADDS            R1, #8|8-49
84164|code|STR             R1, [SP,#0x30+var_28]|2-145
84166|code|LDR             R3, [R5]|43-104
84168|code|CMP             R7, #3|3-47
84170|code|STR             R7, [SP,#0x30+var_2C]|1-151
84172|code|STR             R3, [SP,#0x30+var_24]|3-147
84174|code|BLS             loc_14942|56-217
84176|code|LDR             R2, [R4,#8]|162-104
84178|code|MOV             R6, R0|6-70
84180|code|EOR.W           R3, R2, R2,ROR#16|130-234-50-67
84184|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
84188|code|LSRS            R3, R3, #8|27-10
84190|code|EOR.W           R3, R3, R2,ROR#8|131-234-50-35
84194|code|STR             R3, [R0]|3-96
84196|code|CMP             R3, #1|1-43
84198|code|BHI             loc_14942|44-216
84200|code|ADD.W           R9, SP, #0x30+var_28|13-241-8-9
84204|code|ADD.W           R8, SP, #0x30+var_2C|13-241-4-8
84208|code|ADDS            R3, R0, #4|3-29
84210|code|ADDS            R4, #0xC|12-52
84212|code|MOV             R1, R9|73-70
84214|code|MOV             R2, R8|66-70
84216|code|SUBS            R7, #4|4-63
84218|code|STR             R4, [SP,#0x30+var_28]|2-148
84220|code|STR             R7, [SP,#0x30+var_2C]|1-151
84222|code|BL              sub_14080|255-247-191-251
84226|code|CBNZ            R0, loc_14942|240-185
84228|code|MOV             R1, R9|73-70
84230|code|MOV             R2, R8|66-70
84232|code|MOV             R0, R6|48-70
84234|code|ADD.W           R3, R6, #8|6-241-8-3
84238|code|BL              sub_14080|255-247-183-251
84242|code|CBNZ            R0, loc_14942|176-185
84244|code|LDR             R3, [SP,#0x30+var_2C]|1-155
84246|code|CMP             R3, #3|3-43
84248|code|BLS             loc_14942|19-217
84250|code|LDR             R3, [SP,#0x30+var_28]|2-155
84252|code|LDR             R2, [R3]|26-104
84254|code|EOR.W           R3, R2, R2,ROR#16|130-234-50-67
84258|code|BIC.W           R3, R3, #0xFF0000|35-244-127-3
84262|code|LSRS            R3, R3, #8|27-10
84264|code|EOR.W           R3, R3, R2,ROR#8|131-234-50-35
84268|code|CMP             R3, #0x64 ; 'd'|100-43
84270|code|IT GT|200-191
84272|code|MOVGT           R3, #0x64 ; 'd'|100-35
84274|code|STR             R3, [R6,#0xC]|243-96
84276|code|LDR             R2, [SP,#0x30+var_24]|3-154
84278|code|LDR             R3, [R5]|43-104
84280|code|CMP             R2, R3|154-66
84282|code|BNE             loc_14948|5-209
84284|code|ADD             SP, SP, #0x14|5-176
84286|code|POP.W           {R4-R9,PC}|189-232-240-131
84290|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
84294|code|B               loc_14934|245-231
84296|code|BLX             __stack_chk_fail|252-247-208-239
84300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x148B8|72-39-1-0
84304|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
84308|code|PUSH            {R3,LR}|8-181
84310|code|MOVW            R3, #0xEC4F|78-246-79-67
84314|code|LDR.W           R2, [R0,#-8]|80-248-8-44
84318|code|MOVT.W          R3, #0xE814|206-246-20-3
84322|code|CMP             R2, R3|154-66
84324|code|BEQ             loc_1496A|1-208
84326|code|BLX             abort|253-247-150-233
84330|code|SUBS            R0, #0x28 ; '('|40-56
84332|code|POP             {R3,PC}|8-189
84334|data|ALIGN 0x10|0-191
84336|code|PUSH            {R3,LR}|8-181
84338|code|BL              sub_14954|255-247-239-255
84342|code|B               loc_1497A|0-224
84344|code|MOV             R0, R3|24-70
84346|code|LDR             R3, [R0,#4]|67-104
84348|code|CMP             R3, #0|0-43
84350|code|BNE             loc_14978|251-209
84352|code|LDR             R0, [R0,#8]|128-104
84354|code|ADDS            R0, #0x28 ; '('|40-48
84356|code|POP             {R3,PC}|8-189
84358|data|ALIGN 4|0-191
84360|code|PUSH            {R4-R6,LR}|112-181
84362|code|MOV             R5, R1|13-70
84364|code|MOV             R6, R0|6-70
84366|code|CMP             R0, #0|0-40
84368|code|BEQ             loc_149F0|46-208
84370|code|CMP.W           R5, #0x10000000|181-241-128-95
84374|code|BCS             loc_149E4|37-210
84376|code|ADD.W           R0, R5, #0x28 ; '('; size|5-241-40-0
84380|code|BLX             malloc|253-247-76-232
84384|code|MOV             R4, R0|4-70
84386|code|CBZ             R0, loc_149E4|248-177
84388|code|MOVW            R3, #0xEC4F|78-246-79-67
84392|code|STR             R5, [R0,#0x14]|69-97
84394|code|MOVT.W          R3, #0xE814|206-246-20-3
84398|code|MOVS            R5, #0|0-37
84400|code|STR             R3, [R0,#0x20]|3-98
84402|code|STR             R5, [R0,#0x18]|133-97
84404|code|STR             R5, [R0,#0xC]|197-96
84406|code|STR             R5, [R0,#0x1C]|197-97
84408|code|STR             R5, [R0,#0x10]|5-97
84410|code|CBZ             R6, loc_149D8|110-177
84412|code|MOV             R0, R6|48-70
84414|code|BL              sub_14954|255-247-201-255
84418|code|LDR             R3, [R0,#0xC]|195-104
84420|code|STR             R0, [R4,#8]|160-96
84422|code|CBZ             R3, loc_149E8|123-177
84424|code|STR             R5, [R3,#8]|157-96
84426|code|STR             R4, [R3,#4]|92-96
84428|code|STM.W           R4, {R3,R5}|132-232-40-0
84432|code|STR             R4, [R0,#0xC]|196-96
84434|code|ADD.W           R0, R4, #0x28 ; '('|4-241-40-0
84438|code|POP             {R4-R6,PC}|112-189
84440|code|STR             R6, [R0,#8]|134-96
84442|code|STR             R6, [R0,#4]|70-96
84444|code|STR             R6, [R0]|6-96
84446|code|ADD.W           R0, R4, #0x28 ; '('|4-241-40-0
84450|code|POP             {R4-R6,PC}|112-189
84452|code|MOVS            R0, #0|0-32
84454|code|POP             {R4-R6,PC}|112-189
84456|code|STR             R4, [R0,#0xC]|196-96
84458|code|STR             R3, [R4,#4]|99-96
84460|code|STR             R3, [R4]|35-96
84462|code|B               loc_149D2|240-231
84464|code|LDR             R3, =(dword_272A8 - 0x149F6)|1-75
84466|code|ADD             R3, PC; dword_272A8|123-68
84468|code|LDR             R6, [R3]|30-104
84470|code|B               loc_14992|204-231
84472|data|DCD dword_272A8 - 0x149F6|178-40-1-0
84476|code|PUSH            {R4,LR}|16-181
84478|code|MOV             R4, R1|12-70
84480|code|BL              sub_14954|255-247-168-255
84484|code|STR             R4, [R0,#0x18]|132-97
84486|code|POP             {R4,PC}|16-189
84488|code|PUSH            {R4,LR}|16-181
84490|code|MOV             R4, R1|12-70
84492|code|BL              sub_14954|255-247-162-255
84496|code|STR             R4, [R0,#0x1C]|196-97
84498|code|POP             {R4,PC}|16-189
84500|code|PUSH            {R3-R5,LR}|56-181
84502|code|MOV             R5, R2|21-70
84504|code|BL              sub_14988|255-247-182-255
84508|code|MOV             R4, R0|4-70
84510|code|CBZ             R0, loc_14A26|16-177
84512|code|MOV             R1, R5|41-70
84514|code|BL              sub_14A08|255-247-241-255
84518|code|MOV             R0, R4|32-70
84520|code|POP             {R3-R5,PC}|56-189
84522|data|ALIGN 4|0-191
84524|code|CBZ             R1, loc_14A70|1-179
84526|code|PUSH            {R4-R6,LR}|112-181
84528|code|MOV             R5, R0|5-70
84530|code|MOV             R0, R1|8-70
84532|code|MOV             R4, R1|12-70
84534|code|BL              sub_14954|255-247-141-255
84538|code|MOVS            R1, #0xC|12-33
84540|code|MOVS            R2, #1|1-34
84542|code|MOV             R6, R0|6-70
84544|code|MOV             R0, R5|40-70
84546|code|BL              sub_14A14|255-247-231-255
84550|code|MOV             R5, R0|5-70
84552|code|CBZ             R0, loc_14A74|160-177
84554|code|LDR             R1, =(sub_14CF4+1 - 0x14A50)|11-73
84556|code|ADD             R1, PC; sub_14CF4|121-68
84558|code|BL              sub_149FC|255-247-213-255
84562|code|LDR             R3, [R6,#0x10]|51-105
84564|code|STR             R4, [R5,#8]|172-96
84566|code|CBZ             R3, loc_14A66|51-177
84568|code|STR             R5, [R3,#4]|93-96
84570|code|MOVS            R2, #0|0-34
84572|code|STR             R3, [R5]|43-96
84574|code|MOV             R0, R4|32-70
84576|code|STR             R2, [R5,#4]|106-96
84578|code|STR             R5, [R6,#0x10]|53-97
84580|code|POP             {R4-R6,PC}|112-189
84582|code|STR             R5, [R6,#0x10]|53-97
84584|code|MOV             R0, R4|32-70
84586|code|STR             R3, [R5,#4]|107-96
84588|code|STR             R3, [R5]|43-96
84590|code|POP             {R4-R6,PC}|112-189
84592|code|MOVS            R0, #0|0-32
84594|code|BX              LR|112-71
84596|code|MOVS            R0, #0|0-32
84598|code|POP             {R4-R6,PC}|112-189
84600|data|DCD sub_14CF4+1 - 0x14A50|165-2-0-0
84604|code|LDR             R3, =(dword_272A8 - 0x14A84)|2-75
84606|code|MOV             R1, R0|1-70
84608|code|ADD             R3, PC; dword_272A8|123-68
84610|code|LDR             R0, [R3]|24-104
84612|code|B.W             loc_14A2C|255-247-210-191
84616|data|DCD dword_272A8 - 0x14A84|36-40-1-0
84620|code|PUSH            {R3,LR}|8-181
84622|code|BL              sub_14954|255-247-97-255
84626|code|LDR             R0, [R0,#0x1C]|192-105
84628|code|CMP             R0, #1|1-40
84630|code|BEQ             loc_14A9C|1-208
84632|code|CBZ             R0, loc_14AA2|24-177
84634|code|POP             {R3,PC}|8-189
84636|code|LDR             R0, =(aReference - 0x14AA2); ".reference"|2-72
84638|code|ADD             R0, PC; ".reference"|120-68
84640|code|POP             {R3,PC}|8-189
84642|code|LDR             R0, =(aUnnamed - 0x14AA8); "UNNAMED"|2-72
84644|code|ADD             R0, PC; "UNNAMED"|120-68
84646|code|B               locret_14A9A|248-231
84648|data|DCD aReference - 0x14AA2; ".reference"|182-28-0-0
84652|data|DCD aUnnamed - 0x14AA8; "UNNAMED"|188-28-0-0
84656|code|CBZ             R0, loc_14AD0|112-177
84658|code|PUSH            {R3-R5,LR}|56-181
84660|code|MOV             R5, R1|13-70
84662|code|MOV             R4, R0|4-70
84664|code|BL              sub_14A8C|255-247-232-255
84668|code|CMP             R5, R0|133-66
84670|code|BEQ             loc_14AC8|3-208
84672|code|MOV             R1, R5|41-70
84674|code|BLX             strcmp|252-247-146-238
84678|code|CBNZ            R0, loc_14ACC|8-185
84680|code|MOV             R0, R4|32-70
84682|code|POP             {R3-R5,PC}|56-189
84684|code|MOVS            R0, #0|0-32
84686|code|POP             {R3-R5,PC}|56-189
84688|code|MOVS            R0, #0|0-32
84690|code|BX              LR|112-71
84692|code|PUSH            {R4-R6,LR}|112-181
84694|code|MOV             R5, R1|13-70
84696|code|CMP             R1, #0|0-41
84698|code|BEQ             loc_14B30|41-208
84700|code|MOV             R6, R0|6-70
84702|code|CMP             R0, #0|0-40
84704|code|BEQ             loc_14B42|47-208
84706|code|MOV             R0, R1|8-70
84708|code|BL              sub_14954|255-247-54-255
84712|code|MOV             R4, R0|4-70
84714|code|MOV             R0, R6|48-70
84716|code|BL              sub_14954|255-247-50-255
84720|code|CMP             R4, R0|132-66
84722|code|BEQ             loc_14B30|29-208
84724|code|LDR             R2, [R4,#8]|162-104
84726|code|CMP             R2, #0|0-42
84728|code|BEQ             loc_14B88|70-208
84730|code|LDR             R3, [R2,#0xC]|211-104
84732|code|CMP             R3, R4|163-66
84734|code|BEQ             loc_14B34|25-208
84736|code|LDR             R1, [R4,#4]|97-104
84738|code|LDR             R6, [R4]|38-104
84740|code|CBZ             R1, loc_14B0A|9-177
84742|code|STR             R6, [R1]|14-96
84744|code|LDR             R6, [R4]|38-104
84746|code|CBZ             R6, loc_14B12|22-177
84748|code|STR             R1, [R6,#4]|113-96
84750|code|CMP             R4, R3|156-66
84752|code|BEQ             loc_14B1A|3-208
84754|code|MOVS            R1, #0|0-33
84756|code|STR             R1, [R4,#4]|97-96
84758|code|STR             R1, [R4]|33-96
84760|code|CBZ             R3, loc_14B1C|3-177
84762|code|STR             R2, [R3,#8]|154-96
84764|code|LDR             R3, [R0,#0xC]|195-104
84766|code|STR             R0, [R4,#8]|160-96
84768|code|CMP             R3, #0|0-43
84770|code|BEQ             loc_14B80|45-208
84772|code|STR             R4, [R3,#4]|92-96
84774|code|MOVS            R2, #0|0-34
84776|code|STR             R2, [R3,#8]|154-96
84778|code|STR             R2, [R4,#4]|98-96
84780|code|STR             R3, [R4]|35-96
84782|code|STR             R4, [R0,#0xC]|196-96
84784|code|MOV             R0, R5|40-70
84786|code|POP             {R4-R6,PC}|112-189
84788|code|LDR             R3, [R4]|35-104
84790|code|STR             R3, [R2,#0xC]|211-96
84792|code|CMP             R3, #0|0-43
84794|code|BEQ             loc_14B12|234-208
84796|code|MOVS            R1, #0|0-33
84798|code|STR             R1, [R3,#4]|89-96
84800|code|B               loc_14B0E|229-231
84802|code|LDR             R3, =(dword_272A8 - 0x14B4A)|30-75
84804|code|MOV             R0, R1|8-70
84806|code|ADD             R3, PC; dword_272A8|123-68
84808|code|LDR             R6, [R3]|30-104
84810|code|BL              sub_14954|255-247-3-255
84814|code|MOV             R4, R0|4-70
84816|code|CMP             R6, #0|0-46
84818|code|BNE             loc_14AEA|202-209
84820|code|LDR             R2, [R0,#8]|130-104
84822|code|CBZ             R2, loc_14B9A|2-179
84824|code|LDR             R3, [R2,#0xC]|211-104
84826|code|CMP             R3, R0|131-66
84828|code|BEQ             loc_14BAC|38-208
84830|code|LDM             R0, {R0,R1}|3-200
84832|code|CBZ             R1, loc_14B66|9-177
84834|code|STR             R0, [R1]|8-96
84836|code|LDR             R0, [R4]|32-104
84838|code|CBZ             R0, loc_14B6A|0-177
84840|code|STR             R1, [R0,#4]|65-96
84842|code|MOVS            R1, #0|0-33
84844|code|STR             R1, [R4,#4]|97-96
84846|code|STR             R1, [R4]|33-96
84848|code|CBZ             R3, loc_14B74|3-177
84850|code|STR             R2, [R3,#8]|154-96
84852|code|MOVS            R3, #0|0-35
84854|code|MOV             R0, R5|40-70
84856|code|STR             R3, [R4,#4]|99-96
84858|code|STR             R3, [R4]|35-96
84860|code|STR             R3, [R4,#8]|163-96
84862|code|POP             {R4-R6,PC}|112-189
84864|code|STR             R4, [R0,#0xC]|196-96
84866|code|STR             R3, [R4,#4]|99-96
84868|code|STR             R3, [R4]|35-96
84870|code|B               loc_14B30|211-231
84872|code|LDR             R3, [R4,#4]|99-104
84874|code|CBZ             R3, loc_14B90|11-177
84876|code|LDR             R2, [R4]|34-104
84878|code|STR             R2, [R3]|26-96
84880|code|LDR             R2, [R4]|34-104
84882|code|CMP             R2, #0|0-42
84884|code|BEQ             loc_14B1C|194-208
84886|code|STR             R3, [R2,#4]|83-96
84888|code|B               loc_14B1C|192-231
84890|code|LDR             R3, [R0,#4]|67-104
84892|code|CBZ             R3, loc_14BA2|11-177
84894|code|LDR             R2, [R0]|2-104
84896|code|STR             R2, [R3]|26-96
84898|code|LDR             R2, [R4]|34-104
84900|code|CMP             R2, #0|0-42
84902|code|BEQ             loc_14B74|229-208
84904|code|STR             R3, [R2,#4]|83-96
84906|code|B               loc_14B74|227-231
84908|code|LDR             R3, [R3]|27-104
84910|code|STR             R3, [R2,#0xC]|211-96
84912|code|CMP             R3, #0|0-43
84914|code|BEQ             loc_14B6A|218-208
84916|code|CMP             R0, R3|152-66
84918|code|STR             R6, [R3,#4]|94-96
84920|code|BEQ             loc_14B72|219-208
84922|code|B               loc_14B6A|214-231
84924|data|DCD dword_272A8 - 0x14B4A|94-39-1-0
84928|code|CMP             R0, #0|0-40
84930|code|BEQ.W           loc_14CDE|0-240-140-128
84934|code|PUSH.W          {R3-R11,LR}|45-233-248-79
84938|code|MOV             R9, R0|129-70
84940|code|BL              sub_14954|255-247-194-254
84944|code|LDR             R5, [R0,#0x10]|5-105
84946|code|MOV             R8, R0|128-70
84948|code|CMP             R5, #0|0-45
84950|code|BNE             loc_14CB4|109-209
84952|code|LDR             R4, [R0,#0x18]|132-105
84954|code|CBZ             R4, loc_14BF6|100-177
84956|code|ADDS            R2, R4, #1|98-28
84958|code|BEQ             loc_14CBA|108-208
84960|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
84964|code|MOV             R0, R9|72-70
84966|code|STR.W           R3, [R8,#0x18]|200-248-24-48
84970|code|BLX             R4|160-71
84972|code|ADDS            R3, R0, #1|67-28
84974|code|IT NE|24-191
84976|code|STRNE.W         R5, [R8,#0x18]|200-248-24-80
84980|code|BEQ             loc_14CE4|118-208
84982|code|MOV             R0, R9|72-70
84984|code|LDR             R7, =(dword_272A8 - 0x14C06)|60-79
84986|code|BL              sub_14954|255-247-171-254
84990|code|LDR.W           R10, =(dword_272A8 - 0x14C08)|223-248-240-160
84994|code|ADD             R7, PC; dword_272A8|127-68
84996|code|ADD             R10, PC; dword_272A8|250-68
84998|code|MOV             R6, R0|6-70
85000|code|LDR             R4, [R6,#0xC]|244-104
85002|code|CBZ             R4, loc_14C4A|244-177
85004|code|LDR             R0, [R4,#0x10]|32-105
85006|code|ADDS            R4, #0x28 ; '('|40-52
85008|code|LDR             R5, [R7]|61-104
85010|code|CBZ             R0, loc_14C2A|80-177
85012|code|BL              sub_14954|255-247-158-254
85016|code|B               loc_14C1C|0-224
85018|code|MOV             R0, R3|24-70
85020|code|LDR             R3, [R0,#4]|67-104
85022|code|CMP             R3, #0|0-43
85024|code|BNE             loc_14C1A|251-209
85026|code|LDR             R3, [R0,#8]|131-104
85028|code|CBZ             R3, loc_14C2A|11-177
85030|code|ADD.W           R5, R3, #0x28 ; '('|3-241-40-5
85034|code|MOV             R0, R4|32-70
85036|code|BL              sub_14BC0|255-247-200-255
85040|code|ADDS            R0, #1|1-48
85042|code|BNE             loc_14C08|233-209
85044|code|LDR.W           R11, [R10]|218-248-0-176
85048|code|CMP             R11, R5|171-69
85050|code|BEQ             loc_14CC2|66-208
85052|code|MOV             R1, R4|33-70
85054|code|MOV             R0, R5|40-70
85056|code|BL              sub_14AD4|255-247-72-255
85060|code|LDR             R4, [R6,#0xC]|244-104
85062|code|CMP             R4, #0|0-44
85064|code|BNE             loc_14C0C|224-209
85066|code|LDR.W           R3, [R8,#8]|216-248-8-48
85070|code|CBZ             R3, loc_14C80|187-177
85072|code|LDR             R2, [R3,#0xC]|218-104
85074|code|CMP             R2, R8|66-69
85076|code|BEQ             loc_14CA2|37-208
85078|code|LDM.W           R8, {R0,R1}|152-232-3-0
85082|code|CBZ             R1, loc_14C62|17-177
85084|code|STR             R0, [R1]|8-96
85086|code|LDR.W           R0, [R8]|216-248-0-0
85090|code|CBZ             R0, loc_14C66|0-177
85092|code|STR             R1, [R0,#4]|65-96
85094|code|MOVS            R1, #0|0-33
85096|code|STR.W           R1, [R8,#4]|200-248-4-16
85100|code|STR.W           R1, [R8]|200-248-0-16
85104|code|CBZ             R2, loc_14C74|2-177
85106|code|STR             R3, [R2,#8]|147-96
85108|code|MOV             R0, R8; ptr|64-70
85110|code|BLX             free|252-247-230-237
85114|code|MOVS            R0, #0|0-32
85116|code|POP.W           {R3-R11,PC}|189-232-248-143
85120|code|LDR.W           R3, [R8,#4]|216-248-4-48
85124|code|CBZ             R3, loc_14C8C|19-177
85126|code|LDR.W           R2, [R8]|216-248-0-32
85130|code|STR             R2, [R3]|26-96
85132|code|LDR.W           R2, [R8]|216-248-0-32
85136|code|CMP             R2, #0|0-42
85138|code|BEQ             loc_14C74|239-208
85140|code|MOV             R0, R8; ptr|64-70
85142|code|STR             R3, [R2,#4]|83-96
85144|code|BLX             free|252-247-212-237
85148|code|MOVS            R0, #0|0-32
85150|code|POP.W           {R3-R11,PC}|189-232-248-143
85154|code|LDR.W           R2, [R8]|216-248-0-32
85158|code|STR             R2, [R3,#0xC]|218-96
85160|code|CMP             R2, #0|0-42
85162|code|BEQ             loc_14C66|220-208
85164|code|CMP             R8, R2|144-69
85166|code|STR             R4, [R2,#4]|84-96
85168|code|BEQ             loc_14C72|223-208
85170|code|B               loc_14C66|216-231
85172|code|MOV             R0, R5|40-70
85174|code|BL              sub_14CF4|0-240-29-248
85178|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
85182|code|POP.W           {R3-R11,PC}|189-232-248-143
85186|code|MOV             R0, R9|72-70
85188|code|BL              sub_14954|255-247-70-254
85192|code|B               loc_14CCC|0-224
85194|code|MOV             R0, R3|24-70
85196|code|LDR             R3, [R0,#4]|67-104
85198|code|CMP             R3, #0|0-43
85200|code|BNE             loc_14CCA|251-209
85202|code|LDR             R5, [R0,#8]|133-104
85204|code|CBZ             R5, loc_14CDA|13-177
85206|code|ADDS            R5, #0x28 ; '('|40-53
85208|code|B               loc_14C3C|176-231
85210|code|MOV             R5, R11|93-70
85212|code|B               loc_14C3C|174-231
85214|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
85218|code|BX              LR|112-71
85220|code|STR.W           R4, [R8,#0x18]|200-248-24-64
85224|code|POP.W           {R3-R11,PC}|189-232-248-143
85228|data|DCD dword_272A8 - 0x14C06|162-38-1-0
85232|data|DCD dword_272A8 - 0x14C08|160-38-1-0
85236|code|PUSH            {R3-R5,LR}|56-181
85238|code|MOV             R4, R0|4-70
85240|code|BL              sub_14954|255-247-44-254
85244|code|MOV             R5, R0|5-70
85246|code|LDR             R0, [R4,#8]|160-104
85248|code|BL              sub_14954|255-247-40-254
85252|code|LDR             R3, [R5,#0x18]|171-105
85254|code|ADDS            R3, #1|1-51
85256|code|ITT NE|28-191
85258|code|MOVNE           R3, #0|0-35
85260|code|STRNE           R3, [R5,#0x18]|171-97
85262|code|LDR             R3, [R0,#0x10]|3-105
85264|code|CMP             R4, R3|156-66
85266|code|BEQ             loc_14D32|14-208
85268|code|LDM.W           R4, {R2,R3}|148-232-12-0
85272|code|CBZ             R3, loc_14D1E|11-177
85274|code|STR             R2, [R3]|26-96
85276|code|LDR             R2, [R4]|34-104
85278|code|CBZ             R2, loc_14D22|2-177
85280|code|STR             R3, [R2,#4]|83-96
85282|code|MOVS            R3, #0|0-35
85284|code|STR             R3, [R4,#4]|99-96
85286|code|STR             R3, [R4]|35-96
85288|code|MOV             R0, R4|32-70
85290|code|BL              sub_14BC0|255-247-73-255
85294|code|MOVS            R0, #0|0-32
85296|code|POP             {R3-R5,PC}|56-189
85298|code|LDR             R3, [R4]|35-104
85300|code|STR             R3, [R0,#0x10]|3-97
85302|code|CMP             R3, #0|0-43
85304|code|BEQ             loc_14D22|243-208
85306|code|CMP             R4, R3|156-66
85308|code|MOV.W           R2, #0|79-240-0-2
85312|code|STR             R2, [R3,#4]|90-96
85314|code|BNE             loc_14D22|238-209
85316|code|B               loc_14D28|240-231
85318|data|ALIGN 4|0-191
85320|code|PUSH            {R3-R7,LR}|248-181
85322|code|MOV             R6, R0|6-70
85324|code|MOV             R0, R1|8-70
85326|code|BL              sub_14954|255-247-1-254
85330|code|MOV             R7, R0|7-70
85332|code|CMP             R6, #0|0-46
85334|code|BEQ             loc_14DC2|52-208
85336|code|LDR             R4, [R7,#0x10]|60-105
85338|code|CBZ             R4, loc_14D8C|188-177
85340|code|CLZ.W           R5, R6|182-250-134-245
85344|code|LSRS            R5, R5, #5|109-9
85346|code|MOV             R0, R4|32-70
85348|code|BL              sub_14954|255-247-246-253
85352|code|B               loc_14D6C|0-224
85354|code|MOV             R0, R3|24-70
85356|code|LDR             R3, [R0,#4]|67-104
85358|code|CMP             R3, #0|0-43
85360|code|BNE             loc_14D6A|251-209
85362|code|LDR             R3, [R0,#8]|131-104
85364|code|CMP             R3, #0|0-43
85366|code|ITE NE|20-191
85368|code|MOVNE           R2, #0|0-34
85370|code|ANDEQ.W         R2, R5, #1|5-240-1-2
85374|code|CBNZ            R2, loc_14D92|66-185
85376|code|ADDS            R3, #0x28 ; '('|40-51
85378|code|CMP             R6, R3|158-66
85380|code|BEQ             loc_14D92|5-208
85382|code|LDR             R4, [R4]|36-104
85384|code|CMP             R4, #0|0-44
85386|code|BNE             loc_14D62|234-209
85388|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
85392|code|POP             {R3-R7,PC}|248-189
85394|code|MOV             R0, R4|32-70
85396|code|MOVS            R1, #0|0-33
85398|code|BL              sub_149FC|255-247-49-254
85402|code|LDR             R3, [R7,#0x10]|59-105
85404|code|CMP             R4, R3|156-66
85406|code|BEQ             loc_14DCA|20-208
85408|code|LDR             R2, [R4,#4]|98-104
85410|code|CBZ             R2, loc_14DA8|10-177
85412|code|LDR             R1, [R4]|33-104
85414|code|STR             R1, [R2]|17-96
85416|code|LDR             R1, [R4]|33-104
85418|code|CBZ             R1, loc_14DB2|17-177
85420|code|STR             R2, [R1,#4]|74-96
85422|code|CMP             R4, R3|156-66
85424|code|BEQ             loc_14DB8|2-208
85426|code|MOVS            R3, #0|0-35
85428|code|STR             R3, [R4,#4]|99-96
85430|code|STR             R3, [R4]|35-96
85432|code|MOV             R0, R4|32-70
85434|code|BL              sub_14BC0|255-247-1-255
85438|code|MOVS            R0, #0|0-32
85440|code|POP             {R3-R7,PC}|248-189
85442|code|LDR             R3, =(dword_272A8 - 0x14DC8)|5-75
85444|code|ADD             R3, PC; dword_272A8|123-68
85446|code|LDR             R6, [R3]|30-104
85448|code|B               loc_14D58|198-231
85450|code|LDR             R3, [R4]|35-104
85452|code|STR             R3, [R7,#0x10]|59-97
85454|code|CMP             R3, #0|0-43
85456|code|BEQ             loc_14DAE|237-208
85458|code|MOVS            R2, #0|0-34
85460|code|STR             R2, [R3,#4]|90-96
85462|code|B               loc_14DAE|234-231
85464|data|DCD dword_272A8 - 0x14DC8|224-36-1-0
85468|code|PUSH            {R3-R7,LR}|248-181
85470|code|MOV             R5, R2|21-70
85472|code|CMP             R2, #0|0-42
85474|code|BEQ             loc_14E52|54-208
85476|code|CMP.W           R2, #0x10000000|178-241-128-95
85480|code|BCS             loc_14DFA|7-210
85482|code|MOV             R7, R3|31-70
85484|code|CBZ             R1, loc_14E46|89-179
85486|code|MOV             R0, R1|8-70
85488|code|BL              sub_14954|255-247-176-253
85492|code|LDR             R4, [R0,#0x10]|4-105
85494|code|MOV             R6, R0|6-70
85496|code|CBZ             R4, loc_14DFE|12-177
85498|code|MOVS            R0, #0|0-32
85500|code|POP             {R3-R7,PC}|248-189
85502|code|MOVW            R3, #0xBEF3|75-246-243-99
85506|code|ADD.W           R1, R5, #0x28 ; '('; size|5-241-40-1
85510|code|MOVT.W          R3, #0x7FAE|199-246-174-115
85514|code|STR             R3, [R0,#0x20]|3-98
85516|code|BLX             realloc|252-247-156-237
85520|code|CBZ             R0, loc_14E5C|32-179
85522|code|LDR             R2, [R0,#8]|130-104
85524|code|MOV             R3, #0xE814EC4F|78-246-79-67-206-246-20-3
85532|code|STR             R3, [R0,#0x20]|3-98
85534|code|CBZ             R2, loc_14E22|2-177
85536|code|STR             R0, [R2,#0xC]|208-96
85538|code|LDR             R3, [R0,#0xC]|195-104
85540|code|CBZ             R3, loc_14E28|3-177
85542|code|STR             R0, [R3,#8]|152-96
85544|code|LDR             R3, [R0,#4]|67-104
85546|code|CBZ             R3, loc_14E2E|3-177
85548|code|STR             R0, [R3]|24-96
85550|code|LDR             R3, [R0]|3-104
85552|code|CBZ             R3, loc_14E34|3-177
85554|code|STR             R0, [R3,#4]|88-96
85556|code|ADD.W           R6, R0, #0x28 ; '('|0-241-40-6
85560|code|STR             R5, [R0,#0x14]|69-97
85562|code|MOV             R1, R7|57-70
85564|code|MOV             R0, R6|48-70
85566|code|BL              sub_14A08|255-247-227-253
85570|code|MOV             R0, R6|48-70
85572|code|POP             {R3-R7,PC}|248-189
85574|code|MOV             R1, R2|17-70
85576|code|MOV             R2, R3|26-70
85578|code|POP.W           {R3-R7,LR}|189-232-248-64
85582|code|B.W             sub_14A14|255-247-225-189
85586|code|MOV             R0, R1|8-70
85588|code|BL              sub_14BC0|255-247-180-254
85592|code|MOV             R0, R5|40-70
85594|code|POP             {R3-R7,PC}|248-189
85596|code|MOV             R3, #0xE814EC4F|78-246-79-67-206-246-20-3
85604|code|STR             R3, [R6,#0x20]|51-98
85606|code|POP             {R3-R7,PC}|248-189
85608|code|PUSH            {R4,LR}|16-181
85610|code|LDR             R4, =(dword_272A8 - 0x14E70)|4-76
85612|code|ADD             R4, PC; dword_272A8|124-68
85614|code|LDR             R0, [R4,#(dword_272AC - 0x272A8)]|96-104
85616|code|BL              sub_14BC0|255-247-166-254
85620|code|MOVS            R3, #0|0-35
85622|code|STR             R3, [R4,#(dword_272AC - 0x272A8)]|99-96
85624|code|POP             {R4,PC}|16-189
85626|data|ALIGN 4|0-191
85628|data|DCD dword_272A8 - 0x14E70|56-36-1-0
85632|code|PUSH            {R4-R6,LR}|112-181
85634|code|CMP             R1, #0|0-41
85636|code|BEQ             loc_14F1A|73-208
85638|code|MOV             R4, R0|4-70
85640|code|MOV             R5, R1|13-70
85642|code|CBZ             R0, loc_14EF0|136-179
85644|code|BL              sub_14D48|255-247-92-255
85648|code|CBZ             R0, loc_14EEA|88-179
85650|code|MOV             R0, R4|32-70
85652|code|BL              sub_14954|255-247-94-253
85656|code|MOV             R4, R0|4-70
85658|code|MOV             R0, R5|40-70
85660|code|BL              sub_14954|255-247-90-253
85664|code|B               loc_14EA4|0-224
85666|code|MOV             R0, R3|24-70
85668|code|LDR             R3, [R0,#4]|67-104
85670|code|CMP             R3, #0|0-43
85672|code|BNE             loc_14EA2|251-209
85674|code|LDR             R3, [R0,#8]|131-104
85676|code|CMP             R4, R3|156-66
85678|code|BNE             loc_14F1A|52-209
85680|code|MOV             R0, R5|40-70
85682|code|BL              sub_14954|255-247-79-253
85686|code|LDR             R0, [R0,#0x10]|0-105
85688|code|CMP             R0, #0|0-40
85690|code|BEQ             loc_14F26|52-208
85692|code|BL              sub_14954|255-247-74-253
85696|code|B               loc_14EC4|0-224
85698|code|MOV             R0, R3|24-70
85700|code|LDR             R3, [R0,#4]|67-104
85702|code|CMP             R3, #0|0-43
85704|code|BNE             loc_14EC2|251-209
85706|code|LDR             R0, [R0,#8]|128-104
85708|code|ADD.W           R4, R0, #0x28 ; '('|0-241-40-4
85712|code|CBZ             R0, loc_14F22|56-179
85714|code|MOV             R0, R4|32-70
85716|code|MOV             R1, R5|41-70
85718|code|BL              sub_14D48|255-247-55-255
85722|code|MOV             R6, R0|6-70
85724|code|CBNZ            R0, loc_14F1A|232-185
85726|code|MOV             R0, R4|32-70
85728|code|MOV             R1, R5|41-70
85730|code|BL              sub_14AD4|255-247-247-253
85734|code|MOV             R0, R6|48-70
85736|code|POP             {R4-R6,PC}|112-189
85738|code|MOVS            R6, #0|0-38
85740|code|MOV             R0, R6|48-70
85742|code|POP             {R4-R6,PC}|112-189
85744|code|LDR             R3, =(dword_272A8 - 0x14EF6)|15-75
85746|code|ADD             R3, PC; dword_272A8|123-68
85748|code|LDR             R4, [R3]|28-104
85750|code|MOV             R0, R4|32-70
85752|code|BL              sub_14D48|255-247-38-255
85756|code|CMP             R0, #0|0-40
85758|code|BEQ             loc_14EEA|244-208
85760|code|CMP             R4, #0|0-44
85762|code|BNE             loc_14E92|198-209
85764|code|MOV             R0, R5|40-70
85766|code|BL              sub_14954|255-247-37-253
85770|code|B               loc_14F0E|0-224
85772|code|MOV             R0, R3|24-70
85774|code|LDR             R3, [R0,#4]|67-104
85776|code|CMP             R3, #0|0-43
85778|code|BNE             loc_14F0C|251-209
85780|code|LDR             R3, [R0,#8]|131-104
85782|code|CMP             R3, #0|0-43
85784|code|BEQ             loc_14EB0|202-208
85786|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
85790|code|MOV             R0, R6|48-70
85792|code|POP             {R4-R6,PC}|112-189
85794|code|MOV             R4, R0|4-70
85796|code|B               loc_14ED2|213-231
85798|code|MOV             R0, R5|40-70
85800|code|POP.W           {R4-R6,LR}|189-232-112-64
85804|code|B.W             sub_14BC0|255-247-72-190
85808|data|DCD dword_272A8 - 0x14EF6|178-35-1-0
85812|code|PUSH            {R3-R5,LR}|56-181
85814|code|CBZ             R0, loc_14F56|112-177
85816|code|BL              sub_14954|255-247-12-253
85820|code|LDR             R4, [R0,#0xC]|196-104
85822|code|LDR             R5, [R0,#0x14]|69-105
85824|code|CBZ             R4, loc_14F52|60-177
85826|code|ADD.W           R0, R4, #0x28 ; '('|4-241-40-0
85830|code|BL              sub_14F34|255-247-245-255
85834|code|LDR             R4, [R4]|36-104
85836|code|ADD             R5, R0|5-68
85838|code|CMP             R4, #0|0-44
85840|code|BNE             loc_14F42|247-209
85842|code|MOV             R0, R5|40-70
85844|code|POP             {R3-R5,PC}|56-189
85846|code|LDR             R3, =(dword_272A8 - 0x14F5C)|3-75
85848|code|ADD             R3, PC; dword_272A8|123-68
85850|code|LDR             R0, [R3]|24-104
85852|code|CMP             R0, #0|0-40
85854|code|BNE             loc_14F38|235-209
85856|code|POP             {R3-R5,PC}|56-189
85858|data|ALIGN 4|0-191
85860|data|DCD dword_272A8 - 0x14F5C|76-35-1-0
85864|code|PUSH            {R3-R5,LR}|56-181
85866|code|BL              sub_14954|255-247-243-252
85870|code|MOVS            R5, #1|1-37
85872|code|LDR             R4, [R0,#0xC]|196-104
85874|code|CBZ             R4, loc_14F84|60-177
85876|code|ADD.W           R0, R4, #0x28 ; '('|4-241-40-0
85880|code|BL              sub_14F68|255-247-246-255
85884|code|LDR             R4, [R4]|36-104
85886|code|ADD             R5, R0|5-68
85888|code|CMP             R4, #0|0-44
85890|code|BNE             loc_14F74|247-209
85892|code|MOV             R0, R5|40-70
85894|code|POP             {R3-R5,PC}|56-189
85896|code|PUSH.W          {R4-R11,LR}|45-233-240-79
85900|code|SUB             SP, SP, #0x2C|139-176
85902|code|MOV             R5, R1|13-70
85904|code|MOV             R6, R2|22-70
85906|code|BL              sub_14954|255-247-223-252
85910|code|LDR.W           R10, [R0,#0xC]|208-248-12-160
85914|code|CMP.W           R10, #0|186-241-0-15
85918|code|BEQ             loc_1502C|69-208
85920|code|LDR             R3, =(aSAddingOptS+0x14 - 0x14FAC); ""|44-75
85922|code|LSLS            R7, R6, #2|183-0
85924|code|LDR.W           R9, =(aS30sContains6l - 0x14FB6); "%*s%-30s contains %6lu bytes in %3lu bl"...|223-248-176-144
85928|code|ADD             R3, PC; ""|123-68
85930|code|STR             R3, [SP,#0x50+var_38]|6-147
85932|code|ADDS            R3, R6, #1|115-28
85934|code|STR             R3, [SP,#0x50+var_34]|7-147
85936|code|LDR             R3, =(aSreferenceToS - 0x14FB8); "%*sreference to: %s\n"|42-75
85938|code|ADD             R9, PC; "%*s%-30s contains %6lu bytes in %3lu bl"...|249-68
85940|code|ADD             R3, PC; "%*sreference to: %s\n"|123-68
85942|code|STR             R3, [SP,#0x50+var_30]|8-147
85944|code|LDR             R3, =(aSAddingOptS+0x14 - 0x14FBE); ""|41-75
85946|code|ADD             R3, PC; ""|123-68
85948|code|STR             R3, [SP,#0x50+var_2C]|9-147
85950|code|LDR.W           R4, [R10,#0x1C]|218-248-28-64
85954|code|CMP             R4, #1|1-44
85956|code|BEQ             loc_15032|53-208
85958|code|ADD.W           R4, R10, #0x28 ; '('|10-241-40-4
85962|code|MOV             R0, R4|32-70
85964|code|BL              sub_14A8C|255-247-94-253
85968|code|MOV             R8, R0|128-70
85970|code|MOV             R0, R4|32-70
85972|code|BL              sub_14F34|255-247-174-255
85976|code|MOV             R6, R0|6-70
85978|code|MOV             R0, R4|32-70
85980|code|BL              sub_14F68|255-247-196-255
85984|code|MOV             R11, R0|131-70
85986|code|MOV             R0, R4|32-70
85988|code|BL              sub_14954|255-247-182-252
85992|code|LDR             R0, [R0,#0x10]|0-105
85994|code|CBZ             R0, loc_1504E|128-179
85996|code|MOV.W           LR, #0|79-240-0-14
86000|code|LDR             R0, [R0]|0-104
86002|code|ADD.W           LR, LR, #1|14-241-1-14
86006|code|CMP             R0, #0|0-40
86008|code|BNE             loc_14FF0|250-209
86010|code|LDR             R3, [SP,#0x50+var_38]|6-155
86012|code|MOVS            R1, #1|1-33
86014|code|MOV             R2, R9|74-70
86016|code|MOV             R0, R5|40-70
86018|code|STR.W           R8, [SP,#0x50+var_4C]|205-248-4-128
86022|code|STR             R3, [SP,#0x50+var_50]|0-147
86024|code|MOV             R3, R7|59-70
86026|code|STR             R6, [SP,#0x50+var_48]|2-150
86028|code|STR.W           R11, [SP,#0x50+var_44]|205-248-12-176
86032|code|STR.W           LR, [SP,#0x50+var_40]|205-248-16-224
86036|code|BLX             __fprintf_chk|252-247-200-237
86040|code|MOV             R0, R4|32-70
86042|code|MOV             R1, R5|41-70
86044|code|LDR             R2, [SP,#0x50+var_34]|7-154
86046|code|BL              sub_14F88|255-247-179-255
86050|code|LDR.W           R10, [R10]|218-248-0-160
86054|code|CMP.W           R10, #0|186-241-0-15
86058|code|BNE             loc_14FBE|200-209
86060|code|ADD             SP, SP, #0x2C ; ','|11-176
86062|code|POP.W           {R4-R11,PC}|189-232-240-143
86066|code|LDR.W           R0, [R10,#0x30]|218-248-48-0
86070|code|BL              sub_14A8C|255-247-41-253
86074|code|LDR             R3, [SP,#0x50+var_2C]|9-155
86076|code|MOV             R1, R4|33-70
86078|code|LDR             R2, [SP,#0x50+var_30]|8-154
86080|code|STR             R3, [SP,#0x50+var_50]|0-147
86082|code|MOV             R3, R7|59-70
86084|code|STR             R0, [SP,#0x50+var_4C]|1-144
86086|code|MOV             R0, R5|40-70
86088|code|BLX             __fprintf_chk|252-247-174-237
86092|code|B               loc_15022|233-231
86094|code|MOV             LR, R0|134-70
86096|code|B               loc_14FFA|211-231
86098|data|ALIGN 4|0-191
86100|data|DCD aSAddingOptS+0x14 - 0x14FAC; ""|192-15-0-0
86104|data|DCD aS30sContains6l - 0x14FB6; "%*s%-30s contains %6lu bytes in %3lu bl"...|206-23-0-0
86108|data|DCD aSreferenceToS - 0x14FB8; "%*sreference to: %s\n"|180-23-0-0
86112|data|DCD aSAddingOptS+0x14 - 0x14FBE; ""|174-15-0-0
86116|code|PUSH            {R4-R7,LR}|240-181
86118|code|MOV             R5, R1|13-70
86120|code|SUB             SP, SP, #0xC|131-176
86122|code|MOV             R4, R0|4-70
86124|code|CBZ             R0, loc_150AC|240-177
86126|code|MOV             R0, R4|32-70
86128|code|BL              sub_14A8C|255-247-12-253
86132|code|MOV             R6, R0|6-70
86134|code|MOV             R0, R4|32-70
86136|code|BL              sub_14F34|255-247-92-255
86140|code|MOV             R7, R0|7-70
86142|code|MOV             R0, R4|32-70
86144|code|BL              sub_14F68|255-247-114-255
86148|code|LDR             R2, =(aFullTallocRepo - 0x15090); "full talloc report on '%s' (total %lu b"...|13-74
86150|code|MOV             R3, R6|51-70
86152|code|STR             R7, [SP,#0x20+var_20]|0-151
86154|code|MOVS            R1, #1|1-33
86156|code|ADD             R2, PC; "full talloc report on '%s' (total %lu b"...|122-68
86158|code|STR             R0, [SP,#0x20+var_1C]|1-144
86160|code|MOV             R0, R5|40-70
86162|code|BLX             __fprintf_chk|252-247-138-237
86166|code|MOV             R0, R4|32-70
86168|code|MOV             R1, R5|41-70
86170|code|MOVS            R2, #1|1-34
86172|code|BL              sub_14F88|255-247-116-255
86176|code|MOV             R0, R5|40-70
86178|code|ADD             SP, SP, #0xC|3-176
86180|code|POP.W           {R4-R7,LR}|189-232-240-64
86184|code|B.W             j_fflush|252-247-182-187
86188|code|LDR             R3, =(dword_272A8 - 0x150B2)|4-75
86190|code|ADD             R3, PC; dword_272A8|123-68
86192|code|LDR             R4, [R3]|28-104
86194|code|CMP             R4, #0|0-44
86196|code|BNE             loc_1506E|219-209
86198|code|ADD             SP, SP, #0xC|3-176
86200|code|POP             {R4-R7,PC}|240-189
86202|data|ALIGN 4|0-191
86204|data|DCD aFullTallocRepo - 0x15090; "full talloc report on '%s' (total %lu b"...|44-23-0-0
86208|data|DCD dword_272A8 - 0x150B2|246-33-1-0
86212|code|PUSH            {R3-R5,LR}|56-181
86214|code|LDR             R5, =(dword_272A8 - 0x150CE)|8-77
86216|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x150D0)|8-76
86218|code|ADD             R5, PC; dword_272A8|125-68
86220|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
86222|code|LDR             R0, [R5]|40-104
86224|code|BL              sub_14F34|255-247-48-255
86228|code|CBNZ            R0, loc_150D8|0-185
86230|code|POP             {R3-R5,PC}|56-189
86232|code|LDR             R3, =(stderr_ptr - 0x27000)|5-75
86234|code|LDR             R0, [R5]|40-104
86236|code|LDR             R3, [R4,R3]; stderr|227-88
86238|code|LDR             R1, [R3]|25-104
86240|code|POP.W           {R3-R5,LR}|189-232-56-64
86244|code|B.W             sub_15064|255-247-190-191
86248|data|DCD dword_272A8 - 0x150CE|218-33-1-0
86252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x150D0|48-31-1-0
86256|data|DCD stderr_ptr - 0x27000|196-1-0-0
86260|code|PUSH.W          {R4-R9,LR}|45-233-240-67
86264|code|MOV             R8, R1|136-70
86266|code|SUB             SP, SP, #0xC|131-176
86268|code|MOV             R4, R0|4-70
86270|code|CMP             R0, #0|0-40
86272|code|BEQ             loc_15176|57-208
86274|code|MOV             R0, R4|32-70
86276|code|BL              sub_14A8C|255-247-194-252
86280|code|MOV             R5, R0|5-70
86282|code|MOV             R0, R4|32-70
86284|code|BL              sub_14F34|255-247-18-255
86288|code|MOV             R6, R0|6-70
86290|code|MOV             R0, R4|32-70
86292|code|BL              sub_14F68|255-247-40-255
86296|code|LDR             R2, =(aTallocReportOn - 0x15122); "talloc report on '%s' (total %lu bytes "...|27-74
86298|code|MOV             R3, R5|43-70
86300|code|MOVS            R1, #1|1-33
86302|code|ADD             R2, PC; "talloc report on '%s' (total %lu bytes "...|122-68
86304|code|STR             R6, [SP,#0x28+var_28]|0-150
86306|code|STR             R0, [SP,#0x28+var_24]|1-144
86308|code|MOV             R0, R8|64-70
86310|code|BLX             __fprintf_chk|252-247-64-237
86314|code|MOV             R0, R4|32-70
86316|code|BL              sub_14954|255-247-18-252
86320|code|LDR             R4, [R0,#0xC]|196-104
86322|code|CBZ             R4, loc_1516A|212-177
86324|code|LDR.W           R9, =(a30sContains6lu - 0x1513C); "\t%-30s contains %6lu bytes in %3lu blo"...|223-248-84-144
86328|code|ADD             R9, PC; "\t%-30s contains %6lu bytes in %3lu blo"...|249-68
86330|code|ADD.W           R5, R4, #0x28 ; '('|4-241-40-5
86334|code|MOV             R0, R5|40-70
86336|code|BL              sub_14A8C|255-247-164-252
86340|code|MOV             R6, R0|6-70
86342|code|MOV             R0, R5|40-70
86344|code|BL              sub_14F34|255-247-244-254
86348|code|MOV             R7, R0|7-70
86350|code|MOV             R0, R5|40-70
86352|code|BL              sub_14F68|255-247-10-255
86356|code|STR             R7, [SP,#0x28+var_28]|0-151
86358|code|MOV             R3, R6|51-70
86360|code|MOVS            R1, #1|1-33
86362|code|MOV             R2, R9|74-70
86364|code|STR             R0, [SP,#0x28+var_24]|1-144
86366|code|MOV             R0, R8|64-70
86368|code|BLX             __fprintf_chk|252-247-34-237
86372|code|LDR             R4, [R4]|36-104
86374|code|CMP             R4, #0|0-44
86376|code|BNE             loc_1513A|231-209
86378|code|MOV             R0, R8|64-70
86380|code|ADD             SP, SP, #0xC|3-176
86382|code|POP.W           {R4-R9,LR}|189-232-240-67
86386|code|B.W             j_fflush|252-247-81-187
86390|code|LDR             R3, =(dword_272A8 - 0x1517C)|6-75
86392|code|ADD             R3, PC; dword_272A8|123-68
86394|code|LDR             R4, [R3]|28-104
86396|code|CMP             R4, #0|0-44
86398|code|BNE             loc_15102|192-209
86400|code|ADD             SP, SP, #0xC|3-176
86402|code|POP.W           {R4-R9,PC}|189-232-240-131
86406|data|ALIGN 4|0-191
86408|data|DCD aTallocReportOn - 0x15122; "talloc report on '%s' (total %lu bytes "...|214-22-0-0
86412|data|DCD a30sContains6lu - 0x1513C; "\t%-30s contains %6lu bytes in %3lu blo"...|244-22-0-0
86416|data|DCD dword_272A8 - 0x1517C|44-33-1-0
86420|code|PUSH            {R3-R5,LR}|56-181
86422|code|LDR             R5, =(dword_272A8 - 0x1519E)|8-77
86424|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x151A0)|8-76
86426|code|ADD             R5, PC; dword_272A8|125-68
86428|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
86430|code|LDR             R0, [R5]|40-104
86432|code|BL              sub_14F34|255-247-200-254
86436|code|CBNZ            R0, loc_151A8|0-185
86438|code|POP             {R3-R5,PC}|56-189
86440|code|LDR             R3, =(stderr_ptr - 0x27000)|5-75
86442|code|LDR             R0, [R5]|40-104
86444|code|LDR             R3, [R4,R3]; stderr|227-88
86446|code|LDR             R1, [R3]|25-104
86448|code|POP.W           {R3-R5,LR}|189-232-56-64
86452|code|B.W             sub_150F4|255-247-158-191
86456|data|DCD dword_272A8 - 0x1519E|10-33-1-0
86460|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x151A0|96-30-1-0
86464|data|DCD stderr_ptr - 0x27000|196-1-0-0
86468|code|PUSH            {R4,LR}|16-181
86470|code|LDR             R4, =(dword_272A8 - 0x151CC)|6-76
86472|code|ADD             R4, PC; dword_272A8|124-68
86474|code|LDR             R0, [R4]|32-104
86476|code|CBZ             R0, loc_151D0|0-177
86478|code|POP             {R4,PC}|16-189
86480|code|LDR             R2, =(aNullContext - 0x151D8); "null_context"|4-74
86482|code|MOV             R1, R0|1-70
86484|code|ADD             R2, PC; "null_context"|122-68
86486|code|BL              sub_14A14|255-247-29-252
86490|code|STR             R0, [R4]|32-96
86492|code|POP             {R4,PC}|16-189
86494|data|ALIGN 0x10|0-191
86496|data|DCD dword_272A8 - 0x151CC|220-32-1-0
86500|data|DCD aNullContext - 0x151D8; "null_context"|132-22-0-0
86504|code|PUSH            {R3,LR}|8-181
86506|code|BL              sub_151C4|255-247-235-255
86510|code|LDR             R0, =(sub_15194+1 - 0x151F8)|3-72
86512|code|POP.W           {R3,LR}|189-232-8-64
86516|code|ADD             R0, PC; sub_15194|120-68
86518|code|B.W             sub_15BA8|0-240-215-188
86522|data|ALIGN 4|0-191
86524|data|DCD sub_15194+1 - 0x151F8|157-255-255-255
86528|code|PUSH            {R3,LR}|8-181
86530|code|BL              sub_151C4|255-247-223-255
86534|code|LDR             R0, =(sub_150C4+1 - 0x15210)|3-72
86536|code|POP.W           {R3,LR}|189-232-8-64
86540|code|ADD             R0, PC; sub_150C4|120-68
86542|code|B.W             sub_15BA8|0-240-203-188
86546|data|ALIGN 4|0-191
86548|data|DCD sub_150C4+1 - 0x15210|181-254-255-255
86552|code|PUSH            {R3-R5,LR}|56-181
86554|code|MOV             R5, R1|13-70
86556|code|BL              sub_14A14|255-247-250-251
86560|code|MOV             R4, R0|4-70
86562|code|CBZ             R0, loc_1522C|24-177
86564|code|MOV             R2, R5; n|42-70
86566|code|MOVS            R1, #0; c|0-33
86568|code|BLX             memset|252-247-154-236
86572|code|MOV             R0, R4|32-70
86574|code|POP             {R3-R5,PC}|56-189
86576|code|PUSH            {R4-R6,LR}|112-181
86578|code|MOV             R4, R2|20-70
86580|code|MOV             R6, R1|14-70
86582|code|MOV             R2, R3|26-70
86584|code|MOV             R1, R4|33-70
86586|code|BL              sub_14A14|255-247-235-251
86590|code|MOV             R5, R0|5-70
86592|code|CBZ             R0, loc_1524A|24-177
86594|code|MOV             R1, R6; src|49-70
86596|code|MOV             R2, R4; n|34-70
86598|code|BLX             memcpy|252-247-22-235
86602|code|MOV             R0, R5|40-70
86604|code|POP             {R4-R6,PC}|112-189
86606|data|ALIGN 0x10|0-191
86608|code|CBZ             R1, loc_1527C|161-177
86610|code|PUSH            {R3-R5,LR}|56-181
86612|code|MOV             R5, R0|5-70
86614|code|MOV             R0, R1; s|8-70
86616|code|MOV             R4, R1|12-70
86618|code|BLX             strlen|252-247-60-236
86622|code|LDR             R3, =(aTallocTallocC9 - 0x15266); "talloc/talloc.c:935"|8-75
86624|code|MOV             R1, R4|33-70
86626|code|ADD             R3, PC; "talloc/talloc.c:935"|123-68
86628|code|ADDS            R2, R0, #1|66-28
86630|code|MOV             R0, R5|40-70
86632|code|BL              sub_15230|255-247-226-255
86636|code|MOV             R4, R0|4-70
86638|code|CBZ             R0, locret_1527A|32-177
86640|code|MOV             R1, R0|1-70
86642|code|BL              sub_14A08|255-247-201-251
86646|code|MOV             R0, R4|32-70
86648|code|POP             {R3-R5,PC}|56-189
86650|code|POP             {R3-R5,PC}|56-189
86652|code|MOV             R0, R1|8-70
86654|code|BX              LR|112-71
86656|data|DCD aTallocTallocC9 - 0x15266; "talloc/talloc.c:935"|6-22-0-0
86660|code|PUSH            {R3-R7,LR}|248-181
86662|code|MOV             R7, R1|15-70
86664|code|MOV             R6, R2|22-70
86666|code|CBZ             R2, loc_152CC|250-177
86668|code|LDRB            R3, [R1]|11-120
86670|code|CBZ             R3, loc_152CA|227-177
86672|code|MOV             R4, R1|12-70
86674|code|MOVS            R3, #0|0-35
86676|code|B               loc_1529C|2-224
86678|code|LDRB.W          R5, [R4,#1]!|20-248-1-95
86682|code|CBZ             R5, loc_152C4|157-177
86684|code|ADDS            R3, #1|1-51
86686|code|CMP             R3, R6|179-66
86688|code|BNE             loc_15296|249-209
86690|code|ADDS            R1, R6, #1|113-28
86692|code|BL              sub_14988|255-247-112-251
86696|code|MOV             R4, R0|4-70
86698|code|CBZ             R0, loc_152C0|72-177
86700|code|MOV             R1, R7; src|57-70
86702|code|MOV             R2, R6; n|50-70
86704|code|BLX             memcpy|252-247-224-234
86708|code|MOVS            R3, #0|0-35
86710|code|MOV             R0, R4|32-70
86712|code|STRB            R3, [R4,R6]|163-85
86714|code|MOV             R1, R4|33-70
86716|code|BL              sub_14A08|255-247-164-251
86720|code|MOV             R0, R4|32-70
86722|code|POP             {R3-R7,PC}|248-189
86724|code|ADDS            R1, R3, #1|89-28
86726|code|MOV             R6, R3|30-70
86728|code|B               loc_152A4|236-231
86730|code|MOV             R6, R3|30-70
86732|code|MOVS            R1, #1|1-33
86734|code|B               loc_152A4|233-231
86736|code|PUSH.W          {R4-R9,LR}|45-233-240-67
86740|code|SUB             SP, SP, #0x14|133-176
86742|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x152E2)|25-76
86744|code|MOV             R5, R2|21-70
86746|code|LDR             R3, =(__stack_chk_guard_ptr - 0x27000)|25-75
86748|code|MOV             R8, R1|136-70
86750|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
86752|code|MOV             R9, R0|129-70
86754|code|MOVS            R0, #0|0-32
86756|code|MOVS            R2, #1|1-34
86758|code|LDR             R6, [R4,R3]; __stack_chk_guard|230-88
86760|code|MOV             R1, R0|1-70
86762|code|STR.W           R8, [SP,#0x30+var_30]|205-248-0-128
86766|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
86770|code|STR             R5, [SP,#0x30+var_2C]|1-149
86772|code|LDR             R4, [R6]|52-104
86774|code|STR             R5, [SP,#0x30+var_28]|2-149
86776|code|STR             R4, [SP,#0x30+var_24]|3-148
86778|code|BLX             __vsnprintf_chk|252-247-182-234
86782|code|ADDS            R7, R0, #1|71-28
86784|code|MOV             R0, R9|72-70
86786|code|MOV             R1, R7|57-70
86788|code|BL              sub_14988|255-247-64-251
86792|code|MOV             R4, R0|4-70
86794|code|CBZ             R0, loc_15328|104-177
86796|code|MOV             R1, R7|57-70
86798|code|STR.W           R8, [SP,#0x30+var_30]|205-248-0-128
86802|code|STR             R5, [SP,#0x30+var_2C]|1-149
86804|code|MOVS            R2, #1|1-34
86806|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
86810|code|STR             R5, [SP,#0x30+var_28]|2-149
86812|code|BLX             __vsnprintf_chk|252-247-164-234
86816|code|MOV             R0, R4|32-70
86818|code|MOV             R1, R4|33-70
86820|code|BL              sub_14A08|255-247-112-251
86824|code|LDR             R2, [SP,#0x30+var_24]|3-154
86826|code|MOV             R0, R4|32-70
86828|code|LDR             R3, [R6]|51-104
86830|code|CMP             R2, R3|154-66
86832|code|BNE             loc_15338|2-209
86834|code|ADD             SP, SP, #0x14|5-176
86836|code|POP.W           {R4-R9,PC}|189-232-240-131
86840|code|BLX             __stack_chk_fail|252-247-216-234
86844|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x152E2|30-29-1-0
86848|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
86852|code|PUSH            {R3-R7,LR}|248-181
86854|code|MOV             R6, R1|14-70
86856|code|MOV             R5, R2|21-70
86858|code|MOV             R7, R0|7-70
86860|code|BL              sub_14954|255-247-2-251
86864|code|MOV             R1, R6|49-70
86866|code|MOV             R2, R5|42-70
86868|code|MOV             R4, R0|4-70
86870|code|MOV             R0, R7|56-70
86872|code|BL              sub_152D0|255-247-186-255
86876|code|STR             R0, [R4,#0x1C]|224-97
86878|code|CBZ             R0, locret_1536C|40-177
86880|code|LDR             R1, =(aName - 0x1536A); ".name"|3-73
86882|code|POP.W           {R3-R7,LR}|189-232-248-64
86886|code|ADD             R1, PC; ".name"|121-68
86888|code|B.W             sub_14A08|255-247-78-187
86892|code|POP             {R3-R7,PC}|248-189
86894|data|ALIGN 0x10|0-191
86896|data|DCD aName - 0x1536A; ".name"|22-21-0-0
86900|code|PUSH            {R1-R3}|14-180
86902|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x15384)|13-74
86904|code|PUSH            {R4,LR}|16-181
86906|code|SUB             SP, SP, #0xC|131-176
86908|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|12-76
86910|code|ADD             R3, SP, #0x14|5-171
86912|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
86914|code|LDR.W           R1, [R3],#4|83-248-4-27
86918|code|LDR             R4, [R2,R4]; __stack_chk_guard|20-89
86920|code|MOV             R2, R3|26-70
86922|code|STR             R3, [SP]|0-147
86924|code|LDR             R3, [R4]|35-104
86926|code|STR             R3, [SP,#4]|1-147
86928|code|BL              sub_15344|255-247-216-255
86932|code|LDR             R2, [SP,#4]|1-154
86934|code|LDR             R3, [R4]|35-104
86936|code|CMP             R2, R3|154-66
86938|code|BNE             loc_153A6|4-209
86940|code|ADD             SP, SP, #0xC|3-176
86942|code|POP.W           {R4,LR}|189-232-16-64
86946|code|ADD             SP, SP, #0xC|3-176
86948|code|BX              LR|112-71
86950|code|BLX             __stack_chk_fail|252-247-162-234
86954|data|ALIGN 4|0-191
86956|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15384|124-28-1-0
86960|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
86964|code|PUSH            {R2,R3}|12-180
86966|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x153BE)|15-74
86968|code|LDR             R3, =(__stack_chk_guard_ptr - 0x27000)|15-75
86970|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
86972|code|PUSH            {R4-R6,LR}|112-181
86974|code|SUB             SP, SP, #8|130-176
86976|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
86978|code|LDR             R6, [SP,#0x18]|6-158
86980|code|LDR             R3, [R4]|35-104
86982|code|STR             R3, [SP,#4]|1-147
86984|code|BL              sub_14988|255-247-222-250
86988|code|MOV             R5, R0|5-70
86990|code|CBZ             R0, loc_153DA|32-177
86992|code|ADD             R2, SP, #0x1C|7-170
86994|code|MOV             R1, R6|49-70
86996|code|STR             R2, [SP]|0-146
86998|code|BL              sub_15344|255-247-181-255
87002|code|LDR             R2, [SP,#4]|1-154
87004|code|MOV             R0, R5|40-70
87006|code|LDR             R3, [R4]|35-104
87008|code|CMP             R2, R3|154-66
87010|code|BNE             loc_153EE|4-209
87012|code|ADD             SP, SP, #8|2-176
87014|code|POP.W           {R4-R6,LR}|189-232-112-64
87018|code|ADD             SP, SP, #8|2-176
87020|code|BX              LR|112-71
87022|code|BLX             __stack_chk_fail|252-247-126-234
87026|data|ALIGN 4|0-191
87028|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x153BE|66-28-1-0
87032|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
87036|code|PUSH            {R0-R3}|15-180
87038|code|MOVS            R0, #0|0-32
87040|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1540A)|15-75
87042|code|MOV             R1, R0|1-70
87044|code|LDR             R2, =(__stack_chk_guard_ptr - 0x27000)|15-74
87046|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
87048|code|PUSH            {R4-R6,LR}|112-181
87050|code|SUB             SP, SP, #8|130-176
87052|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
87054|code|LDR             R6, [SP,#0x18]|6-158
87056|code|LDR             R3, [R4]|35-104
87058|code|STR             R3, [SP,#4]|1-147
87060|code|BL              sub_14988|255-247-184-250
87064|code|MOV             R5, R0|5-70
87066|code|CBZ             R0, loc_15426|32-177
87068|code|ADD             R2, SP, #0x1C|7-170
87070|code|MOV             R1, R6|49-70
87072|code|STR             R2, [SP]|0-146
87074|code|BL              sub_15344|255-247-143-255
87078|code|LDR             R2, [SP,#4]|1-154
87080|code|MOV             R0, R5|40-70
87082|code|LDR             R3, [R4]|35-104
87084|code|CMP             R2, R3|154-66
87086|code|BNE             loc_1543A|4-209
87088|code|ADD             SP, SP, #8|2-176
87090|code|POP.W           {R4-R6,LR}|189-232-112-64
87094|code|ADD             SP, SP, #0x10|4-176
87096|code|BX              LR|112-71
87098|code|BLX             __stack_chk_fail|252-247-88-234
87102|data|ALIGN 0x10|0-191
87104|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1540A|246-27-1-0
87108|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
87112|code|PUSH            {R1-R3}|14-180
87114|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x15458)|13-74
87116|code|PUSH            {R4,LR}|16-181
87118|code|SUB             SP, SP, #0xC|131-176
87120|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|12-76
87122|code|ADD             R3, SP, #0x20+varg_r1|5-171
87124|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
87126|code|LDR.W           R1, [R3],#4|83-248-4-27
87130|code|LDR             R4, [R2,R4]; __stack_chk_guard|20-89
87132|code|MOV             R2, R3|26-70
87134|code|STR             R3, [SP,#0x20+var_20]|0-147
87136|code|LDR             R3, [R4]|35-104
87138|code|STR             R3, [SP,#0x20+var_1C]|1-147
87140|code|BL              sub_152D0|255-247-52-255
87144|code|LDR             R2, [SP,#0x20+var_1C]|1-154
87146|code|LDR             R3, [R4]|35-104
87148|code|CMP             R2, R3|154-66
87150|code|BNE             loc_1547A|4-209
87152|code|ADD             SP, SP, #0xC|3-176
87154|code|POP.W           {R4,LR}|189-232-16-64
87158|code|ADD             SP, SP, #0xC|3-176
87160|code|BX              LR|112-71
87162|code|BLX             __stack_chk_fail|252-247-56-234
87166|data|ALIGN 0x10|0-191
87168|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15458|168-27-1-0
87172|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
87176|code|PUSH            {R3-R7,LR}|248-181
87178|code|MOV             R7, R0|7-70
87180|code|MOV.W           R0, #0x10000000|79-240-128-80
87184|code|MOV             R4, R2|20-70
87186|code|MOV             R6, R3|30-70
87188|code|MOV             R5, R1|13-70
87190|code|BL              sub_158E0|0-240-35-250
87194|code|CMP             R0, R4|160-66
87196|code|BLS             loc_154AE|7-217
87198|code|MOV             R0, R7|56-70
87200|code|MOV             R2, R6|50-70
87202|code|MUL.W           R1, R4, R5|4-251-5-241
87206|code|POP.W           {R3-R7,LR}|189-232-248-64
87210|code|B.W             sub_14A14|255-247-179-186
87214|code|MOVS            R0, #0|0-32
87216|code|POP             {R3-R7,PC}|248-189
87218|data|ALIGN 4|0-191
87220|code|PUSH            {R3-R7,LR}|248-181
87222|code|MOV             R7, R0|7-70
87224|code|MOV.W           R0, #0x10000000|79-240-128-80
87228|code|MOV             R4, R2|20-70
87230|code|MOV             R6, R3|30-70
87232|code|MOV             R5, R1|13-70
87234|code|BL              sub_158E0|0-240-13-250
87238|code|CMP             R0, R4|160-66
87240|code|BLS             loc_154DA|7-217
87242|code|MOV             R0, R7|56-70
87244|code|MOV             R2, R6|50-70
87246|code|MUL.W           R1, R4, R5|4-251-5-241
87250|code|POP.W           {R3-R7,LR}|189-232-248-64
87254|code|B.W             sub_15218|255-247-159-190
87258|code|MOVS            R0, #0|0-32
87260|code|POP             {R3-R7,PC}|248-189
87262|data|ALIGN 0x10|0-191
87264|code|PUSH.W          {R4-R8,LR}|45-233-240-65
87268|code|MOV             R8, R0|128-70
87270|code|MOV             R7, R1|15-70
87272|code|MOV.W           R0, #0x10000000|79-240-128-80
87276|code|MOV             R1, R2|17-70
87278|code|MOV             R5, R3|29-70
87280|code|MOV             R4, R2|20-70
87282|code|BL              sub_158E0|0-240-245-249
87286|code|LDR             R6, [SP,#0x18+arg_0]|6-158
87288|code|CMP             R0, R5|168-66
87290|code|BLS             loc_1550E|8-217
87292|code|MOV             R0, R8|64-70
87294|code|MOV             R1, R7|57-70
87296|code|MUL.W           R2, R5, R4|5-251-4-242
87300|code|MOV             R3, R6|51-70
87302|code|POP.W           {R4-R8,LR}|189-232-240-65
87306|code|B.W             sub_14DDC|255-247-103-188
87310|code|MOVS            R0, #0|0-32
87312|code|POP.W           {R4-R8,PC}|189-232-240-129
87316|code|PUSH            {R1-R3}|14-180
87318|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1551E)|39-75
87320|code|LDR             R2, =(__stack_chk_guard_ptr - 0x27000)|39-74
87322|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
87324|code|PUSH.W          {R4-R10,LR}|45-233-240-71
87328|code|SUB             SP, SP, #0x1C|135-176
87330|code|LDR.W           R8, [R3,R2]; __stack_chk_guard|83-248-2-128
87334|code|ADD             R4, SP, #0x3C ; '<'|15-172
87336|code|LDR.W           R7, [R4],#4|84-248-4-123
87340|code|LDR.W           R3, [R8]|216-248-0-48
87344|code|STR             R4, [SP,#0xC]|3-148
87346|code|STR             R3, [SP,#0x14]|5-147
87348|code|CMP             R0, #0|0-40
87350|code|BEQ             loc_155A4|53-208
87352|code|MOV             R9, R0|129-70
87354|code|BL              sub_14954|255-247-11-250
87358|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
87362|code|MOVS            R2, #1|1-34
87364|code|STR             R4, [SP,#0x10]|4-148
87366|code|LDR             R5, =(aChar - 0x1554C); "char"|29-77
87368|code|ADD             R5, PC; "char"|125-68
87370|code|LDR             R6, [R0,#0x14]|70-105
87372|code|MOVS            R0, #0|0-32
87374|code|MOV             R1, R0|1-70
87376|code|STR             R7, [SP]|0-151
87378|code|STR             R4, [SP,#4]|1-148
87380|code|ADD             R6, R3|30-68
87382|code|BLX             __vsnprintf_chk|252-247-136-233
87386|code|STR             R5, [SP]|0-149
87388|code|MOV             R1, R9|73-70
87390|code|MOVS            R2, #1|1-34
87392|code|ADDS            R3, R6, R0|51-24
87394|code|MOV             R10, R0|130-70
87396|code|ADDS            R3, #1|1-51
87398|code|MOVS            R0, #0|0-32
87400|code|BL              sub_154E0|255-247-186-255
87404|code|MOV             R5, R0|5-70
87406|code|CBZ             R0, loc_15590|120-177
87408|code|ADD.W           R1, R10, #1|10-241-1-1
87412|code|MOVS            R2, #1|1-34
87414|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
87418|code|STR             R7, [SP]|0-151
87420|code|ADD             R0, R6|48-68
87422|code|STR             R4, [SP,#4]|1-148
87424|code|STR             R4, [SP,#0x10]|4-148
87426|code|BLX             __vsnprintf_chk|252-247-114-233
87430|code|MOV             R0, R5|40-70
87432|code|MOV             R1, R5|41-70
87434|code|BL              sub_14A08|255-247-61-250
87438|code|MOV             R0, R5|40-70
87440|code|LDR             R2, [SP,#0x14]|5-154
87442|code|LDR.W           R3, [R8]|216-248-0-48
87446|code|CMP             R2, R3|154-66
87448|code|BNE             loc_155AE|9-209
87450|code|ADD             SP, SP, #0x1C|7-176
87452|code|POP.W           {R4-R10,LR}|189-232-240-71
87456|code|ADD             SP, SP, #0xC|3-176
87458|code|BX              LR|112-71
87460|code|MOV             R1, R7|57-70
87462|code|MOV             R2, R4|34-70
87464|code|BL              sub_152D0|255-247-146-254
87468|code|B               loc_15590|240-231
87470|code|BLX             __stack_chk_fail|252-247-158-233
87474|data|ALIGN 4|0-191
87476|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1551E|226-26-1-0
87480|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
87484|data|DCD aChar - 0x1554C; "char"|60-19-0-0
87488|code|MOVS            R3, #0|0-35
87490|code|B.W             sub_14DDC|255-247-11-188
87494|data|ALIGN 4|0-191
87496|code|PUSH            {R3-R5,LR}|56-181
87498|code|LDR             R5, =(dword_272A8 - 0x155D0)|10-77
87500|code|ADD             R5, PC; dword_272A8|125-68
87502|code|LDR             R4, [R5,#(dword_272AC - 0x272A8)]|108-104
87504|code|CBZ             R4, loc_155D6|12-177
87506|code|MOV             R0, R4|32-70
87508|code|POP             {R3-R5,PC}|56-189
87510|code|LDR             R2, =(aAutofreeContex - 0x155E0); "autofree_context"|8-74
87512|code|MOV             R1, R4|33-70
87514|code|MOV             R0, R4|32-70
87516|code|ADD             R2, PC; "autofree_context"|122-68
87518|code|BL              sub_14A14|255-247-25-250
87522|code|MOV             R4, R0|4-70
87524|code|LDR             R0, =(sub_14E68+1 - 0x155EC)|5-72
87526|code|STR             R4, [R5,#(dword_272AC - 0x272A8)]|108-96
87528|code|ADD             R0, PC; sub_14E68|120-68
87530|code|BL              sub_15BA8|0-240-221-250
87534|code|MOV             R0, R4|32-70
87536|code|POP             {R3-R5,PC}|56-189
87538|data|ALIGN 4|0-191
87540|data|DCD dword_272A8 - 0x155D0|216-28-1-0
87544|data|DCD aAutofreeContex - 0x155E0; "autofree_context"|176-18-0-0
87548|data|DCD sub_14E68+1 - 0x155EC|125-248-255-255
87552|code|PUSH            {R3,LR}|8-181
87554|code|CBZ             R0, locret_1560C|24-177
87556|code|BL              sub_14954|255-247-166-249
87560|code|LDR             R0, [R0,#0x14]|64-105
87562|code|POP             {R3,PC}|8-189
87564|code|POP             {R3,PC}|8-189
87566|data|ALIGN 0x10|0-191
87568|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x15618)|55-75
87570|code|LDR             R2, =(__stack_chk_guard_ptr - 0x27000)|56-74
87572|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
87574|code|PUSH.W          {R4-R8,LR}|45-233-240-65
87578|code|SUB             SP, SP, #0x60 ; '`'|152-176
87580|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
87582|code|MOV             R5, R0|5-70
87584|code|LDRB            R1, [R0]|1-120
87586|code|LDR             R3, [R7]|59-104
87588|code|STR             R3, [SP,#0x5C]|23-147
87590|code|CBNZ            R1, loc_15638|57-185
87592|code|MOVS            R0, #0|0-32
87594|code|LDR             R2, [SP,#0x5C]|23-154
87596|code|LDR             R3, [R7]|59-104
87598|code|CMP             R2, R3|154-66
87600|code|BNE             loc_156EA|91-209
87602|code|ADD             SP, SP, #0x60 ; '`'|24-176
87604|code|POP.W           {R4-R8,PC}|189-232-240-129
87608|code|MOVS            R0, #3|3-32
87610|code|MOV             R1, R5|41-70
87612|code|MOV             R2, SP|106-70
87614|code|BLX             __xstat|252-247-150-233
87618|code|CBNZ            R0, loc_15664|120-185
87620|code|LDR             R3, [SP,#0x10]|4-155
87622|code|AND.W           R3, R3, #0xF000|3-244-112-67
87626|code|CMP.W           R3, #0x4000|179-245-128-79
87630|code|BEQ             loc_15628|235-208
87632|code|LDR             R0, =(aSSExistsButIsn - 0x1565A); "%s: %s exists, but isn't a directory\n"|41-72
87634|code|MOV             R2, R5|42-70
87636|code|LDR             R1, =(aPbMkdirRecursi - 0x1565C); "pb_mkdir_recursive"|41-73
87638|code|ADD             R0, PC; "%s: %s exists, but isn't a directory\n"|120-68
87640|code|ADD             R1, PC; "pb_mkdir_recursive"|121-68
87642|code|BL              sub_13D9C|254-247-159-251
87646|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
87650|code|B               loc_1562A|226-231
87652|code|MOV             R1, R5|41-70
87654|code|MOVS            R0, #0|0-32
87656|code|BL              sub_15250|255-247-242-253
87660|code|MOVS            R1, #0x2F ; '/'|47-33
87662|code|MOV.W           R8, #0|79-240-0-8
87666|code|LDRB            R3, [R0]|3-120
87668|code|MOV             R6, R0|6-70
87670|code|CMP             R3, #0x2F ; '/'|47-43
87672|code|ITE EQ|12-191
87674|code|ADDEQ           R0, #1|1-48
87676|code|MOVNE           R0, R6|48-70
87678|code|BLX             strchr|252-247-54-234
87682|code|MOV             R4, R0|4-70
87684|code|CBZ             R4, loc_156B6|188-177
87686|code|STRB.W          R8, [R4]|132-248-0-128
87690|code|MOV             R0, R6|48-70
87692|code|MOVW            R1, #0x1ED|64-242-237-17
87696|code|BLX             mkdir|252-247-96-234
87700|code|CBZ             R0, loc_156A0|32-177
87702|code|BLX             __errno_location|252-247-80-234
87706|code|LDR             R0, [R0]|0-104
87708|code|CMP             R0, #0x11|17-40
87710|code|BNE             loc_156D4|25-209
87712|code|MOV             R1, R5|41-70
87714|code|MOV             R0, R6|48-70
87716|code|BLX             strcpy|252-247-152-233
87720|code|ADDS            R0, R4, #1|96-28
87722|code|MOVS            R1, #0x2F ; '/'|47-33
87724|code|BLX             strchr|252-247-30-234
87728|code|MOV             R4, R0|4-70
87730|code|CMP             R4, #0|0-44
87732|code|BNE             loc_15686|231-209
87734|code|MOV             R0, R6|48-70
87736|code|MOVW            R1, #0x1ED|64-242-237-17
87740|code|BLX             mkdir|252-247-74-234
87744|code|CBZ             R0, loc_156CC|32-177
87746|code|BLX             __errno_location|252-247-58-234
87750|code|LDR             R0, [R0]|0-104
87752|code|CMP             R0, #0x11|17-40
87754|code|BNE             loc_156D4|3-209
87756|code|MOV             R0, R6|48-70
87758|code|BL              sub_14BC0|255-247-119-250
87762|code|B               loc_15628|169-231
87764|code|BLX             strerror|252-247-188-233
87768|code|MOV             R1, R6|49-70
87770|code|MOV             R2, R0|2-70
87772|code|LDR             R0, =(aMkdirSS - 0x156E2); "mkdir(%s): %s\n"|8-72
87774|code|ADD             R0, PC; "mkdir(%s): %s\n"|120-68
87776|code|BL              sub_13D9C|254-247-92-251
87780|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
87784|code|B               loc_1562A|159-231
87786|code|BLX             __stack_chk_fail|252-247-0-233
87790|data|ALIGN 0x10|0-191
87792|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15618|232-25-1-0
87796|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
87800|data|DCD aSSExistsButIsn - 0x1565A; "%s: %s exists, but isn't a directory\n"|106-18-0-0
87804|data|DCD aPbMkdirRecursi - 0x1565C; "pb_mkdir_recursive"|72-18-0-0
87808|data|DCD aMkdirSS - 0x156E2; "mkdir(%s): %s\n"|10-18-0-0
87812|code|PUSH.W          {R4-R8,LR}|45-233-240-65
87816|code|MOV             R4, R1|12-70
87818|code|MOV             R5, R0|5-70
87820|code|BLX             strlen|252-247-226-233
87824|code|MOV             R1, R4|33-70
87826|code|MOV             R2, R0|2-70
87828|code|MOV             R0, R5|40-70
87830|code|BLX             strncmp|252-247-184-234
87834|code|CBNZ            R0, loc_15754|216-185
87836|code|MOV             R1, R4|33-70
87838|code|MOV             R7, R0|7-70
87840|code|MOV             R6, R0|6-70
87842|code|BL              sub_15250|255-247-149-253
87846|code|MOV             R8, R0|128-70
87848|code|B               loc_1573C|8-224
87850|code|MOV             R0, R4|32-70
87852|code|BLX             rmdir|252-247-188-232
87856|code|MOV             R0, R4|32-70
87858|code|MOVS            R1, #0x2F ; '/'|47-33
87860|code|BLX             strrchr|252-247-94-234
87864|code|CBZ             R0, loc_15748|48-177
87866|code|STRB            R6, [R0]|6-112
87868|code|MOV             R0, R5|40-70
87870|code|MOV             R1, R4|33-70
87872|code|BLX             strcmp|252-247-82-232
87876|code|CMP             R0, #0|0-40
87878|code|BNE             loc_1572A|240-209
87880|code|MOV             R0, R8|64-70
87882|code|BL              sub_14BC0|255-247-57-250
87886|code|MOV             R0, R7|56-70
87888|code|POP.W           {R4-R8,PC}|189-232-240-129
87892|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
87896|code|B               loc_1574E|249-231
87898|data|ALIGN 4|0-191
87900|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x15766)|80-75
87902|code|PUSH.W          {R4-R9,LR}|45-233-240-67
87906|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
87908|code|LDR             R4, =(__stack_chk_guard_ptr - 0x27000)|79-76
87910|code|SUB             SP, SP, #0xC|131-176
87912|code|MOV             R6, R0|6-70
87914|code|LDR.W           R8, [R3,R4]; __stack_chk_guard|83-248-4-128
87918|code|LDR.W           R3, [R8]|216-248-0-48
87922|code|STR             R3, [SP,#0x28+var_24]|1-147
87924|code|CBZ             R2, loc_1579E|154-177
87926|code|LDR             R1, =(aPbMkdirRecursi - 0x15782); "pb_mkdir_recursive"|76-73
87928|code|MOVS            R4, #0|0-36
87930|code|LDR             R3, [R0]|3-104
87932|code|LDR             R2, =(aDryRun - 0x15788); "(dry-run) "|75-74
87934|code|ADD             R1, PC; "pb_mkdir_recursive"|121-68
87936|code|LDR             R0, =(aSSS - 0x1578A); "%s: %s%s\n"|75-72
87938|code|ADDS            R1, #0x14|20-49
87940|code|ADD             R2, PC; "(dry-run) "|122-68
87942|code|ADD             R0, PC; "%s: %s%s\n"|120-68
87944|code|BL              sub_13D9C|254-247-8-251
87948|code|LDR             R2, [SP,#0x28+var_24]|1-154
87950|code|MOV             R0, R4|32-70
87952|code|LDR.W           R3, [R8]|216-248-0-48
87956|code|CMP             R2, R3|154-66
87958|code|BNE             loc_1585C|97-209
87960|code|ADD             SP, SP, #0xC|3-176
87962|code|POP.W           {R4-R9,PC}|189-232-240-131
87966|code|LDR             R5, =(aPbMkdirRecursi - 0x157A8); "pb_mkdir_recursive"|69-77
87968|code|MOV             R7, R1|15-70
87970|code|LDR             R0, =(aSSS - 0x157AE); "%s: %s%s\n"|69-72
87972|code|ADD             R5, PC; "pb_mkdir_recursive"|125-68
87974|code|LDR             R2, =(aSAddingOptS+0x14 - 0x157B0); ""|69-74
87976|code|ADDS            R5, #0x14|20-53
87978|code|ADD             R0, PC; "%s: %s%s\n"|120-68
87980|code|ADD             R2, PC; ""|122-68
87982|code|LDR             R3, [R6]|51-104
87984|code|MOV             R1, R5|41-70
87986|code|BL              sub_13D9C|254-247-243-250
87990|code|BLX             fork|252-247-18-234
87994|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
87998|code|MOV             R9, R0|129-70
88000|code|BEQ             loc_15810|38-208
88002|code|CMP.W           R9, #0|185-241-0-15
88006|code|BEQ             loc_15860|75-208
88008|code|MOV             R5, SP|109-70
88010|code|CBZ             R7, loc_15800|207-177
88012|code|MOVS            R2, #0; options|0-34
88014|code|MOV             R0, R9; pid|72-70
88016|code|MOV             R1, R5; stat_loc|41-70
88018|code|BLX             waitpid|252-247-246-232
88022|code|ADDS            R2, R0, #1|66-28
88024|code|MOV             R4, R0|4-70
88026|code|BEQ             loc_15840|49-208
88028|code|LDR             R4, [SP,#0x28+var_28]|0-156
88030|code|LSLS            R3, R4, #0x19|99-6
88032|code|BNE             loc_1582A|35-209
88034|code|UBFX.W          R4, R4, #8, #8|196-243-7-36
88038|code|CMP             R4, #0|0-44
88040|code|BEQ             loc_1578C|208-208
88042|code|LDR             R1, =(aPbMkdirRecursi - 0x157F4); "pb_mkdir_recursive"|53-73
88044|code|MOV             R2, R4|34-70
88046|code|LDR             R0, =(aSWexitstatusD - 0x157F6); "%s: WEXITSTATUS %d\n"|53-72
88048|code|ADD             R1, PC; "pb_mkdir_recursive"|121-68
88050|code|ADD             R0, PC; "%s: WEXITSTATUS %d\n"|120-68
88052|code|ADDS            R1, #0x14|20-49
88054|code|BL              sub_13D9C|254-247-209-250
88058|code|LDRB.W          R4, [SP,#0x28+var_28+1]|157-248-1-64
88062|code|B               loc_1578C|197-231
88064|code|MOVS            R2, #1; options|1-34
88066|code|MOV             R1, SP; stat_loc|105-70
88068|code|BLX             waitpid|252-247-220-232
88072|code|MOV             R4, R0|4-70
88074|code|CMP             R0, #0|0-40
88076|code|BNE             loc_157CC|222-209
88078|code|B               loc_1578C|189-231
88080|code|BLX             __errno_location|252-247-146-233
88084|code|MOV             R4, R9|76-70
88086|code|LDR             R0, [R0]; errnum|0-104
88088|code|BLX             strerror|252-247-26-233
88092|code|MOV             R1, R5|41-70
88094|code|MOV             R2, R0|2-70
88096|code|LDR             R0, =(aSForkFailedS - 0x15826); "%s: fork failed: %s\n"|41-72
88098|code|ADD             R0, PC; "%s: fork failed: %s\n"|120-68
88100|code|BL              sub_13D9C|254-247-186-250
88104|code|B               loc_1578C|176-231
88106|code|LDR             R1, =(aPbMkdirRecursi - 0x15836); "pb_mkdir_recursive"|40-73
88108|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
88112|code|LDR             R0, =(aSSFailed - 0x1583C); "%s: %s failed\n"|39-72
88114|code|ADD             R1, PC; "pb_mkdir_recursive"|121-68
88116|code|LDR             R2, [R6]|50-104
88118|code|ADDS            R1, #0x14|20-49
88120|code|ADD             R0, PC; "%s: %s failed\n"|120-68
88122|code|BL              sub_13D9C|254-247-175-250
88126|code|B               loc_1578C|165-231
88128|code|BLX             __errno_location|252-247-122-233
88132|code|LDR             R0, [R0]; errnum|0-104
88134|code|BLX             strerror|252-247-4-233
88138|code|LDR             R1, =(aPbMkdirRecursi - 0x15850); "pb_mkdir_recursive"|34-73
88140|code|ADD             R1, PC; "pb_mkdir_recursive"|121-68
88142|code|ADDS            R1, #0x14|20-49
88144|code|MOV             R2, R0|2-70
88146|code|LDR             R0, =(aSWaitpidFailed - 0x15858); "%s: waitpid failed: %s\n"|33-72
88148|code|ADD             R0, PC; "%s: waitpid failed: %s\n"|120-68
88150|code|BL              sub_13D9C|254-247-161-250
88154|code|B               loc_1578C|151-231
88156|code|BLX             __stack_chk_fail|252-247-70-232
88160|code|BL              sub_13E3C|254-247-236-250
88164|code|BLX             fileno|252-247-148-233
88168|code|MOVS            R1, #1; fd2|1-33
88170|code|MOV             R4, R0|4-70
88172|code|BLX             dup2|252-247-90-232
88176|code|MOVS            R1, #2; fd2|2-33
88178|code|STR             R0, [SP,#0x28+var_28]|0-144
88180|code|MOV             R0, R4; fd|32-70
88182|code|BLX             dup2|252-247-86-232
88186|code|MOV             R1, R6; argv|49-70
88188|code|STR             R0, [SP,#0x28+var_28]|0-144
88190|code|LDR             R0, [R6]; file|48-104
88192|code|BLX             execvp|251-247-254-239
88196|code|BLX             __errno_location|252-247-88-233
88200|code|LDR             R0, [R0]; errnum|0-104
88202|code|BLX             strerror|252-247-226-232
88206|code|MOV             R1, R5|41-70
88208|code|MOV             R2, R0|2-70
88210|code|LDR             R0, =(aSExecFailedS - 0x15898); "%s: exec failed: %s\n"|18-72
88212|code|ADD             R0, PC; "%s: exec failed: %s\n"|120-68
88214|code|BL              sub_13D9C|254-247-129-250
88218|code|MOVS            R0, #1; status|1-32
88220|code|BLX             exit|252-247-20-233
88224|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15766|154-24-1-0
88228|data|DCD __stack_chk_guard_ptr - 0x27000|188-1-0-0
88232|data|DCD aPbMkdirRecursi - 0x15782; "pb_mkdir_recursive"|34-17-0-0
88236|data|DCD aDryRun - 0x15788; "(dry-run) "|236-17-0-0
88240|data|DCD aSSS - 0x1578A; "%s: %s%s\n"|222-17-0-0
88244|data|DCD aPbMkdirRecursi - 0x157A8; "pb_mkdir_recursive"|252-16-0-0
88248|data|DCD aSSS - 0x157AE; "%s: %s%s\n"|186-17-0-0
88252|data|DCD aSAddingOptS+0x14 - 0x157B0; ""|188-7-0-0
88256|data|DCD aPbMkdirRecursi - 0x157F4; "pb_mkdir_recursive"|176-16-0-0
88260|data|DCD aSWexitstatusD - 0x157F6; "%s: WEXITSTATUS %d\n"|94-17-0-0
88264|data|DCD aSForkFailedS - 0x15826; "%s: fork failed: %s\n"|214-16-0-0
88268|data|DCD aPbMkdirRecursi - 0x15836; "pb_mkdir_recursive"|110-16-0-0
88272|data|DCD aSSFailed - 0x1583C; "%s: %s failed\n"|8-17-0-0
88276|data|DCD aPbMkdirRecursi - 0x15850; "pb_mkdir_recursive"|84-16-0-0
88280|data|DCD aSWaitpidFailed - 0x15858; "%s: waitpid failed: %s\n"|212-16-0-0
88284|data|DCD aSExecFailedS - 0x15898; "%s: exec failed: %s\n"|124-16-0-0
88288|code|SUBS            R2, R1, #1|74-30
88290|code|IT EQ|8-191
88292|code|BXEQ            LR|112-71
88294|code|BCC.W           loc_15B32|192-240-36-129
88298|code|CMP             R0, R1|136-66
88300|code|BLS.W           loc_15B1C|64-242-22-129
88304|code|TST             R1, R2|17-66
88306|code|BEQ.W           loc_15B24|0-240-23-129
88310|code|CLZ.W           R3, R0|176-250-128-243
88314|code|CLZ.W           R2, R1|177-250-129-242
88318|code|SUB.W           R3, R2, R3|162-235-3-3
88322|code|RSB.W           R3, R3, #0x1F|195-241-31-3
88326|code|ADR             R2, loc_15918|4-162
88328|code|ADD.W           R3, R2, R3,LSL#4|2-235-3-19
88332|code|MOV.W           R2, #0|79-240-0-2
88336|code|MOV             PC, R3|159-70
88338|data|ALIGN 4|0-191
88340|code|NOP.W|175-243-0-128
88344|code|CMP.W           R0, R1,LSL#31|176-235-193-127
88348|code|NOP|0-191
88350|code|ADC.W           R2, R2, R2|66-235-2-2
88354|code|IT CS|40-191
88356|code|SUBCS.W         R0, R0, R1,LSL#31|160-235-193-112
88360|code|CMP.W           R0, R1,LSL#30|176-235-129-127
88364|code|NOP|0-191
88366|code|ADC.W           R2, R2, R2|66-235-2-2
88370|code|IT CS|40-191
88372|code|SUBCS.W         R0, R0, R1,LSL#30|160-235-129-112
88376|code|CMP.W           R0, R1,LSL#29|176-235-65-127
88380|code|NOP|0-191
88382|code|ADC.W           R2, R2, R2|66-235-2-2
88386|code|IT CS|40-191
88388|code|SUBCS.W         R0, R0, R1,LSL#29|160-235-65-112
88392|code|CMP.W           R0, R1,LSL#28|176-235-1-127
88396|code|NOP|0-191
88398|code|ADC.W           R2, R2, R2|66-235-2-2
88402|code|IT CS|40-191
88404|code|SUBCS.W         R0, R0, R1,LSL#28|160-235-1-112
88408|code|CMP.W           R0, R1,LSL#27|176-235-193-111
88412|code|NOP|0-191
88414|code|ADC.W           R2, R2, R2|66-235-2-2
88418|code|IT CS|40-191
88420|code|SUBCS.W         R0, R0, R1,LSL#27|160-235-193-96
88424|code|CMP.W           R0, R1,LSL#26|176-235-129-111
88428|code|NOP|0-191
88430|code|ADC.W           R2, R2, R2|66-235-2-2
88434|code|IT CS|40-191
88436|code|SUBCS.W         R0, R0, R1,LSL#26|160-235-129-96
88440|code|CMP.W           R0, R1,LSL#25|176-235-65-111
88444|code|NOP|0-191
88446|code|ADC.W           R2, R2, R2|66-235-2-2
88450|code|IT CS|40-191
88452|code|SUBCS.W         R0, R0, R1,LSL#25|160-235-65-96
88456|code|CMP.W           R0, R1,LSL#24|176-235-1-111
88460|code|NOP|0-191
88462|code|ADC.W           R2, R2, R2|66-235-2-2
88466|code|IT CS|40-191
88468|code|SUBCS.W         R0, R0, R1,LSL#24|160-235-1-96
88472|code|CMP.W           R0, R1,LSL#23|176-235-193-95
88476|code|NOP|0-191
88478|code|ADC.W           R2, R2, R2|66-235-2-2
88482|code|IT CS|40-191
88484|code|SUBCS.W         R0, R0, R1,LSL#23|160-235-193-80
88488|code|CMP.W           R0, R1,LSL#22|176-235-129-95
88492|code|NOP|0-191
88494|code|ADC.W           R2, R2, R2|66-235-2-2
88498|code|IT CS|40-191
88500|code|SUBCS.W         R0, R0, R1,LSL#22|160-235-129-80
88504|code|CMP.W           R0, R1,LSL#21|176-235-65-95
88508|code|NOP|0-191
88510|code|ADC.W           R2, R2, R2|66-235-2-2
88514|code|IT CS|40-191
88516|code|SUBCS.W         R0, R0, R1,LSL#21|160-235-65-80
88520|code|CMP.W           R0, R1,LSL#20|176-235-1-95
88524|code|NOP|0-191
88526|code|ADC.W           R2, R2, R2|66-235-2-2
88530|code|IT CS|40-191
88532|code|SUBCS.W         R0, R0, R1,LSL#20|160-235-1-80
88536|code|CMP.W           R0, R1,LSL#19|176-235-193-79
88540|code|NOP|0-191
88542|code|ADC.W           R2, R2, R2|66-235-2-2
88546|code|IT CS|40-191
88548|code|SUBCS.W         R0, R0, R1,LSL#19|160-235-193-64
88552|code|CMP.W           R0, R1,LSL#18|176-235-129-79
88556|code|NOP|0-191
88558|code|ADC.W           R2, R2, R2|66-235-2-2
88562|code|IT CS|40-191
88564|code|SUBCS.W         R0, R0, R1,LSL#18|160-235-129-64
88568|code|CMP.W           R0, R1,LSL#17|176-235-65-79
88572|code|NOP|0-191
88574|code|ADC.W           R2, R2, R2|66-235-2-2
88578|code|IT CS|40-191
88580|code|SUBCS.W         R0, R0, R1,LSL#17|160-235-65-64
88584|code|CMP.W           R0, R1,LSL#16|176-235-1-79
88588|code|NOP|0-191
88590|code|ADC.W           R2, R2, R2|66-235-2-2
88594|code|IT CS|40-191
88596|code|SUBCS.W         R0, R0, R1,LSL#16|160-235-1-64
88600|code|CMP.W           R0, R1,LSL#15|176-235-193-63
88604|code|NOP|0-191
88606|code|ADC.W           R2, R2, R2|66-235-2-2
88610|code|IT CS|40-191
88612|code|SUBCS.W         R0, R0, R1,LSL#15|160-235-193-48
88616|code|CMP.W           R0, R1,LSL#14|176-235-129-63
88620|code|NOP|0-191
88622|code|ADC.W           R2, R2, R2|66-235-2-2
88626|code|IT CS|40-191
88628|code|SUBCS.W         R0, R0, R1,LSL#14|160-235-129-48
88632|code|CMP.W           R0, R1,LSL#13|176-235-65-63
88636|code|NOP|0-191
88638|code|ADC.W           R2, R2, R2|66-235-2-2
88642|code|IT CS|40-191
88644|code|SUBCS.W         R0, R0, R1,LSL#13|160-235-65-48
88648|code|CMP.W           R0, R1,LSL#12|176-235-1-63
88652|code|NOP|0-191
88654|code|ADC.W           R2, R2, R2|66-235-2-2
88658|code|IT CS|40-191
88660|code|SUBCS.W         R0, R0, R1,LSL#12|160-235-1-48
88664|code|CMP.W           R0, R1,LSL#11|176-235-193-47
88668|code|NOP|0-191
88670|code|ADC.W           R2, R2, R2|66-235-2-2
88674|code|IT CS|40-191
88676|code|SUBCS.W         R0, R0, R1,LSL#11|160-235-193-32
88680|code|CMP.W           R0, R1,LSL#10|176-235-129-47
88684|code|NOP|0-191
88686|code|ADC.W           R2, R2, R2|66-235-2-2
88690|code|IT CS|40-191
88692|code|SUBCS.W         R0, R0, R1,LSL#10|160-235-129-32
88696|code|CMP.W           R0, R1,LSL#9|176-235-65-47
88700|code|NOP|0-191
88702|code|ADC.W           R2, R2, R2|66-235-2-2
88706|code|IT CS|40-191
88708|code|SUBCS.W         R0, R0, R1,LSL#9|160-235-65-32
88712|code|CMP.W           R0, R1,LSL#8|176-235-1-47
88716|code|NOP|0-191
88718|code|ADC.W           R2, R2, R2|66-235-2-2
88722|code|IT CS|40-191
88724|code|SUBCS.W         R0, R0, R1,LSL#8|160-235-1-32
88728|code|CMP.W           R0, R1,LSL#7|176-235-193-31
88732|code|NOP|0-191
88734|code|ADC.W           R2, R2, R2|66-235-2-2
88738|code|IT CS|40-191
88740|code|SUBCS.W         R0, R0, R1,LSL#7|160-235-193-16
88744|code|CMP.W           R0, R1,LSL#6|176-235-129-31
88748|code|NOP|0-191
88750|code|ADC.W           R2, R2, R2|66-235-2-2
88754|code|IT CS|40-191
88756|code|SUBCS.W         R0, R0, R1,LSL#6|160-235-129-16
88760|code|CMP.W           R0, R1,LSL#5|176-235-65-31
88764|code|NOP|0-191
88766|code|ADC.W           R2, R2, R2|66-235-2-2
88770|code|IT CS|40-191
88772|code|SUBCS.W         R0, R0, R1,LSL#5|160-235-65-16
88776|code|CMP.W           R0, R1,LSL#4|176-235-1-31
88780|code|NOP|0-191
88782|code|ADC.W           R2, R2, R2|66-235-2-2
88786|code|IT CS|40-191
88788|code|SUBCS.W         R0, R0, R1,LSL#4|160-235-1-16
88792|code|CMP.W           R0, R1,LSL#3|176-235-193-15
88796|code|NOP|0-191
88798|code|ADC.W           R2, R2, R2|66-235-2-2
88802|code|IT CS|40-191
88804|code|SUBCS.W         R0, R0, R1,LSL#3|160-235-193-0
88808|code|CMP.W           R0, R1,LSL#2|176-235-129-15
88812|code|NOP|0-191
88814|code|ADC.W           R2, R2, R2|66-235-2-2
88818|code|IT CS|40-191
88820|code|SUBCS.W         R0, R0, R1,LSL#2|160-235-129-0
88824|code|CMP.W           R0, R1,LSL#1|176-235-65-15
88828|code|NOP|0-191
88830|code|ADC.W           R2, R2, R2|66-235-2-2
88834|code|IT CS|40-191
88836|code|SUBCS.W         R0, R0, R1,LSL#1|160-235-65-0
88840|code|CMP.W           R0, R1|176-235-1-15
88844|code|NOP|0-191
88846|code|ADC.W           R2, R2, R2|66-235-2-2
88850|code|IT CS|40-191
88852|code|SUBCS.W         R0, R0, R1|160-235-1-0
88856|code|MOV             R0, R2|16-70
88858|code|BX              LR|112-71
88860|code|ITE EQ|12-191
88862|code|MOVEQ           R0, #1|1-32
88864|code|MOVNE           R0, #0|0-32
88866|code|BX              LR|112-71
88868|code|CLZ.W           R2, R1|177-250-129-242
88872|code|RSB.W           R2, R2, #0x1F|194-241-31-2
88876|code|LSR.W           R0, R0, R2|32-250-2-240
88880|code|BX              LR|112-71
88882|code|CBZ             R0, loc_15B38|8-177
88884|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
88888|code|B.W             loc_15B58|0-240-14-184
88892|code|CMP             R1, #0|0-41
88894|code|BEQ             loc_15B32|248-208
88896|code|PUSH.W          {R0,R1,LR}|45-233-3-64
88900|code|BL              sub_158E0|255-247-204-254
88904|code|POP.W           {R1,R2,LR}|189-232-6-64
88908|code|MUL.W           R3, R2, R0|2-251-0-243
88912|code|SUB.W           R1, R1, R3|161-235-3-1
88916|code|BX              LR|112-71
88918|data|ALIGN 4|0-191
88920|code|PUSH            {R1,LR}|2-181
88922|code|MOV.W           R0, #8; sig|79-240-8-0
88926|code|BLX             raise|251-247-56-238
88930|code|POP             {R1,PC}|2-189
88932|code|PUSH.W          {R3-R9,LR}|45-233-248-67
88936|code|MOV             R7, R0|7-70
88938|code|LDR             R6, =(off_26EBC - 0x15B76)|12-78
88940|code|MOV             R8, R1|136-70
88942|code|LDR             R5, =(off_26EB8 - 0x15B7C)|12-77
88944|code|MOV             R9, R2|145-70
88946|code|ADD             R6, PC; off_26EBC|126-68
88948|code|BLX             .init_proc|251-247-28-238
88952|code|ADD             R5, PC; off_26EB8|125-68
88954|code|SUBS            R6, R6, R5|118-27
88956|code|ASRS            R6, R6, #2|182-16
88958|code|BEQ             locret_15B96|10-208
88960|code|SUBS            R5, #4|4-61
88962|code|MOVS            R4, #0|0-36
88964|code|ADDS            R4, #1|1-52
88966|code|LDR.W           R3, [R5,#4]!|85-248-4-63
88970|code|MOV             R0, R7|56-70
88972|code|MOV             R1, R8|65-70
88974|code|MOV             R2, R9|74-70
88976|code|BLX             R3|152-71
88978|code|CMP             R4, R6|180-66
88980|code|BNE             loc_15B84|246-209
88982|code|POP.W           {R3-R9,PC}|189-232-248-131
88986|data|ALIGN 4|0-191
88988|data|DCD off_26EBC - 0x15B76|70-19-1-0
88992|data|DCD off_26EB8 - 0x15B7C|60-19-1-0
88996|code|BX              LR|112-71
88998|data|ALIGN 4|0-191
89000|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x15BB0)|5-75
89002|code|LDR             R2, =(off_271CC - 0x27000)|6-74
89004|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
89006|code|LDR             R3, [R3,R2]; dword_271E4|155-88
89008|code|CBZ             R3, loc_15BBA|27-177
89010|code|LDR             R2, [R3]; lpdso_handle|26-104
89012|code|MOVS            R1, #0; obj|0-33
89014|code|B.W             j___cxa_atexit|251-247-197-191
89018|code|MOV             R2, R3|26-70
89020|code|B               loc_15BB4|250-231
89022|data|ALIGN 0x10|0-191
89024|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15BB0|80-20-1-0
89028|data|DCD off_271CC - 0x27000|204-1-0-0
89032|code|PUSH            {R3,LR}; _fini|8-64-45-233
89036|code|POP             {R3,PC}|8-128-189-232
92668|data|ALIGN 0x10|0-0-0-0
159416|data|DCD sub_12070+1|113-32-1-0
159420|data|DCD sub_12058+1|89-32-1-0
159424|data|DCD 0|0-0-0-0
159428|data|DCD aUsr; "/usr"|128-105-1-0
159432|data|DCD aBinCp; "/bin/cp"|136-105-1-0
159436|data|DCD aSbinKexec; "/sbin/kexec"|144-105-1-0
159440|data|DCD aBinMount; "/bin/mount"|156-105-1-0
159444|data|DCD aSbinShutdown; "/sbin/shutdown"|168-105-1-0
159448|data|DCD aUsrBinSftp; "/usr/bin/sftp"|184-105-1-0
159452|data|DCD aUsrBinTftp; "/usr/bin/tftp"|200-105-1-0
159456|data|DCD aBinUmount; "/bin/umount"|216-105-1-0
159460|data|DCD aUsrBinWget; "/usr/bin/wget"|228-105-1-0
159464|data|Elf32_Dyn <1, <1>>; DT_NEEDED libmenu.so.5|1-0-0-0-1-0-0-0
159472|data|Elf32_Dyn <1, <0x150>>; DT_NEEDED libform.so.5|1-0-0-0-80-1-0-0
159480|data|Elf32_Dyn <1, <0x21A>>; DT_NEEDED libncurses.so.5|1-0-0-0-26-2-0-0
159488|data|Elf32_Dyn <1, <0x2D0>>; DT_NEEDED libtinfo.so.5|1-0-0-0-208-2-0-0
159496|data|Elf32_Dyn <1, <0x2F7>>; DT_NEEDED libudev.so.1|1-0-0-0-247-2-0-0
159504|data|Elf32_Dyn <1, <0x304>>; DT_NEEDED libc.so.6|1-0-0-0-4-3-0-0
159512|data|Elf32_Dyn <1, <0x489>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-137-4-0-0
159520|data|Elf32_Dyn <0xC, <0x117B0>>; DT_INIT|12-0-0-0-176-23-1-0
159528|data|Elf32_Dyn <0xD, <0x15BC8>>; DT_FINI|13-0-0-0-200-91-1-0
159536|data|Elf32_Dyn <0x19, <0x26EB8>>; DT_INIT_ARRAY|25-0-0-0-184-110-2-0
159544|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
159552|data|Elf32_Dyn <0x1A, <0x26EBC>>; DT_FINI_ARRAY|26-0-0-0-188-110-2-0
159560|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
159568|data|Elf32_Dyn <0x6FFFFEF5, <0x101B4>>; DT_GNU_HASH|245-254-255-111-180-1-1-0
159576|data|Elf32_Dyn <5, <0x10DB4>>; DT_STRTAB|5-0-0-0-180-13-1-0
159584|data|Elf32_Dyn <6, <0x105A4>>; DT_SYMTAB|6-0-0-0-164-5-1-0
159592|data|Elf32_Dyn <0xA, <0x520>>; DT_STRSZ|10-0-0-0-32-5-0-0
159600|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
159608|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
159616|data|Elf32_Dyn <3, <0x27000>>; DT_PLTGOT|3-0-0-0-0-112-2-0
159624|data|Elf32_Dyn <2, <0x350>>; DT_PLTRELSZ|2-0-0-0-80-3-0-0
159632|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
159640|data|Elf32_Dyn <0x17, <0x11460>>; DT_JMPREL|23-0-0-0-96-20-1-0
159648|data|Elf32_Dyn <0x11, <0x11418>>; DT_REL|17-0-0-0-24-20-1-0
159656|data|Elf32_Dyn <0x12, <0x48>>; DT_RELSZ|18-0-0-0-72-0-0-0
159664|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
159672|data|Elf32_Dyn <0x6FFFFFFE, <0x113D8>>; DT_VERNEED|254-255-255-111-216-19-1-0
159680|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
159688|data|Elf32_Dyn <0x6FFFFFF0, <0x112D4>>; DT_VERSYM|240-255-255-111-212-18-1-0
159696|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
159704|data|ALIGN 0x40|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
159744|data|DCD stru_26EE8|232-110-2-0
159748|data|DCD 0|0-0-0-0
159752|data|DCD 0|0-0-0-0
159756|data|DCD __imp_raise|168-115-2-0
159760|data|DCD __imp_set_menu_win|128-115-2-0
159764|data|DCD __imp_strcmp|200-114-2-0
159768|data|DCD __imp_fopen|60-115-2-0
159772|data|DCD __imp_set_current_item|200-115-2-0
159776|data|DCD __imp_read|100-115-2-0
159780|data|DCD __imp_fflush|224-114-2-0
159784|data|DCD __imp_whline|148-115-2-0
159788|data|DCD __imp_memmove|196-115-2-0
159792|data|DCD __imp_free|40-116-2-0
159796|data|DCD __imp_current_item|248-114-2-0
159800|data|DCD __imp_cbreak|76-115-2-0
159804|data|DCD __imp___vsnprintf_chk|0-116-2-0
159808|data|DCD __imp_memcpy|68-116-2-0
159812|data|DCD __imp_execvp|44-116-2-0
159816|data|DCD __imp_waddnstr|204-114-2-0
159820|data|DCD __imp_item_count|236-115-2-0
159824|data|DCD __imp_rmdir|72-116-2-0
159828|data|DCD __imp_unpost_menu|188-115-2-0
159832|data|DCD __imp_menu_driver|244-115-2-0
159836|data|DCD __imp_sleep|40-115-2-0
159840|data|DCD __imp_post_menu|104-115-2-0
159844|data|DCD __imp___stack_chk_fail|136-115-2-0
159848|data|DCD __imp_new_field|212-115-2-0
159852|data|DCD __imp_alarm|80-116-2-0
159856|data|DCD __imp_wrefresh|64-115-2-0
159860|data|DCD __imp_dup2|16-116-2-0
159864|data|DCD __imp_keypad|212-114-2-0
159868|data|DCD __imp_initscr|8-116-2-0
159872|data|DCD __imp_realloc|44-115-2-0
159876|data|DCD __imp_intrflush|172-115-2-0
159880|data|DCD __imp_post_form|184-115-2-0
159884|data|DCD __imp___xstat|252-114-2-0
159888|data|DCD __imp_poll|156-115-2-0
159892|data|DCD __imp_newwin|140-115-2-0
159896|data|DCD __imp_sigaction|120-115-2-0
159900|data|DCD __imp_free_item|232-114-2-0
159904|data|DCD __imp_fwrite|112-115-2-0
159908|data|DCD __imp_ioctl|124-115-2-0
159912|data|DCD __imp_waitpid|20-116-2-0
159916|data|DCD __imp_free_menu|12-116-2-0
159920|data|DCD __imp_strcpy|236-114-2-0
159924|data|DCD __imp_form_driver|224-115-2-0
159928|data|DCD __imp_set_field_buffer|208-115-2-0
159932|data|DCD __imp_set_menu_sub|160-115-2-0
159936|data|DCD __imp_set_max_field|248-115-2-0
159940|data|DCD __imp_wchgat|32-116-2-0
159944|data|DCD __imp_set_menu_mark|132-115-2-0
159948|data|DCD __imp_puts|216-115-2-0
159952|data|DCD __imp_malloc|88-116-2-0
159956|data|DCD __imp___libc_start_main|16-115-2-0
159960|data|DCD __imp_strerror|0-115-2-0
159964|data|DCD __imp_current_field|96-116-2-0
159968|data|DCD __imp___vfprintf_chk|8-115-2-0
159972|data|DCD __imp_nonl|28-115-2-0
159976|data|DCD __imp___gmon_start__|112-116-2-0
159980|data|DCD __imp_open|48-116-2-0
159984|data|DCD __imp_resize_term|228-115-2-0
159988|data|DCD __imp_getopt_long|36-116-2-0
159992|data|DCD __imp_delwin|56-116-2-0
159996|data|DCD __imp_free_form|84-116-2-0
160000|data|DCD __imp_exit|48-115-2-0
160004|data|DCD __imp_strlen|68-115-2-0
160008|data|DCD __imp_new_menu|244-114-2-0
160012|data|DCD __imp_strchr|92-115-2-0
160016|data|DCD __imp_unpost_form|240-115-2-0
160020|data|DCD __imp_set_form_win|144-115-2-0
160024|data|DCD __imp_reset_prog_mode|216-114-2-0
160028|data|DCD __imp_nodelay|12-115-2-0
160032|data|DCD __imp_field_buffer|32-115-2-0
160036|data|DCD __imp___errno_location|52-115-2-0
160040|data|DCD __imp___cxa_atexit|228-114-2-0
160044|data|DCD __imp_mkdir|100-116-2-0
160048|data|DCD __imp_memset|252-115-2-0
160052|data|DCD __imp_new_item|152-115-2-0
160056|data|DCD __imp_ungetch|164-115-2-0
160060|data|DCD __imp_write|208-114-2-0
160064|data|DCD __imp_fileno|24-116-2-0
160068|data|DCD __imp_def_prog_mode|180-115-2-0
160072|data|DCD __imp___fprintf_chk|80-115-2-0
160076|data|DCD __imp_free_field|84-115-2-0
160080|data|DCD __imp_endwin|204-115-2-0
160084|data|DCD __imp_wgetch|52-116-2-0
160088|data|DCD __imp_fork|232-115-2-0
160092|data|DCD __imp_wclear|72-115-2-0
160096|data|DCD __imp_strrchr|108-115-2-0
160100|data|DCD __imp_item_userptr|4-115-2-0
160104|data|DCD __imp_set_menu_format|104-116-2-0
160108|data|DCD __imp_noecho|4-116-2-0
160112|data|DCD __imp_menu_opts_off|60-116-2-0
160116|data|DCD __imp_new_form|56-115-2-0
160120|data|DCD __imp_socket|92-116-2-0
160124|data|DCD __imp_set_form_sub|176-115-2-0
160128|data|DCD __imp_set_field_back|76-116-2-0
160132|data|DCD __imp_wmove|220-115-2-0
160136|data|DCD __imp_set_field_status|220-114-2-0
160140|data|DCD __imp_curs_set|24-115-2-0
160144|data|DCD __imp_strncmp|240-114-2-0
160148|data|DCD __imp_abort|88-115-2-0
160152|data|DCD __imp_set_item_userptr|36-115-2-0
160156|data|DCD __imp_close|96-115-2-0
160160|data|DCD __imp_field_opts_off|20-115-2-0
160164|data|DCD __imp_connect|116-115-2-0
160168|data|DCD __imp_derwin|28-116-2-0
160172|data|DCD __imp_wredrawln|64-116-2-0
160176|data|DCD __imp_set_menu_items|192-115-2-0
160180|data|DCD cui_boot_editor_run+1|145-37-1-0
160184|data|DCD acs_map|180-114-2-0
160188|data|DCD __stack_chk_guard|184-114-2-0
160192|data|DCD pb_system_apps|196-110-2-0
160196|data|DCD stderr|0-114-2-0
160200|data|DCD __imp___gmon_start__|112-116-2-0
160204|data|DCD dword_271E4|228-113-2-0
160208|data|DCD COLS|188-114-2-0
160212|data|DCD stdscr|192-114-2-0
160216|data|DCD LINES|196-114-2-0
160220|data|DCD nc_atexit+1|129-52-1-0
160256|data|% 4; Copy of shared data|255-255-255-255
160264|data|% 1|255
160265|data|ALIGN 0x10|255-255-255-255-255-255-255
160272|data|% 4|255-255-255-255
160416|data|% 4|255-255-255-255
160420|data|% 4|255-255-255-255
160424|data|% 4|255-255-255-255
