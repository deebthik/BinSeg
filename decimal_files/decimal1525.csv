address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|17-18-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x21D4; SHT file offset|212-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1C74; File offset|116-28-0-0
60|data|DCD unk_1C74; Virtual address|116-28-0-0
64|data|DCD 0x1C74; Physical address|116-28-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1C80; Size in file image|128-28-0-0
168|data|DCD 0x1C80; Size in memory image|128-28-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E54; File offset|84-30-0-0
188|data|DCD off_11E54; Virtual address|84-30-1-0
192|data|DCD 0x11E54; Physical address|84-30-1-0
196|data|DCD 0x258; Size in file image|88-2-0-0
200|data|DCD 0x274; Size in memory image|116-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E60; File offset|96-30-0-0
220|data|DCD stru_11E60; Virtual address|96-30-1-0
224|data|DCD 0x11E60; Physical address|96-30-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E54; File offset|84-30-0-0
316|data|DCD off_11E54; Virtual address|84-30-1-0
320|data|DCD 0x11E54; Physical address|84-30-1-0
324|data|DCD 0x1AC; Size in file image|172-1-0-0
328|data|DCD 0x1AC; Size in memory image|172-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x16, 0xFB, 0xC7, 0x7C, 0x83, 0x24, 0xE, 0x6B, 0x12; Desc|22-251-199-124-131-36-14-107-18-222-12-159-147-137-142-190-55-146-114-178
436|data|DCD 3|3-0-0-0
440|data|DCD 0x21|33-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x21, 0x25, 0x2A|33-0-0-0-37-0-0-0-42-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_4F4 - byte_4F4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_4F4 - byte_4F4, dword_11E5C, 0, 3, 0, 0x14>|0-0-0-0-92-30-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCalloc - byte_4F4, dword_0, 0, 0x12, 0, 0>; "calloc"|77-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aSgSetBinaryMod - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_set_binary_mode"|132-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aCxaFinalize - byte_4F4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|131-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
628|data|Elf32_Sym <aItmDeregistert - byte_4F4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
644|data|Elf32_Sym <aDstrhex - byte_4F4, dword_0, 0, 0x12, 0, 0>; "dStrHex"|211-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aFree - byte_4F4, dword_0, 0, 0x12, 0, 0>; "free"|164-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aStackChkGuard - byte_4F4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|189-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aSgCmdsCloseDev - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|219-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aOptind - byte_4F4, dword_0, 0, 0x11, 0, 0>; "optind"|27-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
724|data|Elf32_Sym <aStackChkFail - byte_4F4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|46-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aPerror - byte_4F4, dword_0, 0, 0x12, 0, 0>; "perror"|34-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aStderr - byte_4F4, dword_0, 0, 0x11, 0, 0>; "stderr"|105-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
772|data|Elf32_Sym <aFwrite - byte_4F4, dword_0, 0, 0x12, 0, 0>; "fwrite"|124-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aPuts - byte_4F4, dword_0, 0, 0x12, 0, 0>; "puts"|41-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aLibcStartMain - byte_4F4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|146-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aGmonStart - byte_4F4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
836|data|Elf32_Sym <aGetoptLong - byte_4F4, dword_0, 0, 0x12, 0, 0>; "getopt_long"|112-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aPutchar - byte_4F4, dword_0, 0, 0x12, 0, 0>; "putchar"|63-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aPrintfChk - byte_4F4, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|14-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aSgGetLlnum - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_get_llnum"|177-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aFprintfChk - byte_4F4, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|84-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aSafeStrerror - byte_4F4, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aJvRegisterclas - byte_4F4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
948|data|Elf32_Sym <aSgGetCategoryS - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|151-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aSgGetNum - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aItmRegistertmc - byte_4F4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
996|data|Elf32_Sym <aSgCmdsOpenDevi - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|240-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aOptarg - byte_4F4, dword_0, 0, 0x11, 0, 0>; "optarg"|98-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1028|data|Elf32_Sym <aAbort - byte_4F4, dword_0, 0, 0x12, 0, 0>; "abort"|71-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aSgLlGetLbaStat - byte_4F4, dword_0, 0, 0x12, 0, 0>; "sg_ll_get_lba_status"|190-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aBssEnd+1 - byte_4F4, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|254-1-0-0-200-32-1-0-0-0-0-0-16-0-24-0
1076|data|Elf32_Sym <aEdata - byte_4F4, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|220-1-0-0-172-32-1-0-0-0-0-0-16-0-23-0
1092|data|Elf32_Sym <aDataStart - byte_4F4, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|207-1-0-0-0-32-1-0-0-0-0-0-16-0-23-0
1108|data|Elf32_Sym <aEnd_0 - byte_4F4, _end, 0, 0x10, 0, 0x18>; "_end"|17-2-0-0-200-32-1-0-0-0-0-0-16-0-24-0
1124|data|Elf32_Sym <aBssEnd - byte_4F4, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|253-1-0-0-200-32-1-0-0-0-0-0-16-0-24-0
1140|data|Elf32_Sym <aLibcCsuInit - byte_4F4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|38-2-0-0-29-20-0-0-64-0-0-0-18-0-13-0
1156|data|Elf32_Sym <aBssStart - byte_4F4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|227-1-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aLibcStartMain+0xD - byte_4F4, main+1, 0x788, 0x12, 0, 0xD>; "main"|159-1-0-0-137-10-0-0-136-7-0-0-18-0-13-0
1188|data|Elf32_Sym <aLibcCsuInit+0xA - byte_4F4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|48-2-0-0-80-9-0-0-0-0-0-0-18-0-11-0
1204|data|Elf32_Sym <aLibcCsuFini - byte_4F4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|22-2-0-0-93-20-0-0-2-0-0-0-18-0-13-0
1220|data|Elf32_Sym <aBssStart_0 - byte_4F4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|239-1-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1236|data|Elf32_Sym <aLibcCsuFini+0xA - byte_4F4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|32-2-0-0-96-20-0-0-0-0-0-0-18-0-14-0
1252|data|Elf32_Sym <aEnd - byte_4F4, _end, 0, 0x10, 0, 0x18>; "__end__"|9-2-0-0-200-32-1-0-0-0-0-0-16-0-24-0
1268|data|DCB 0|0
1269|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1286|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1314|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1329|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1349|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1375|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1386|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1400|data|DCB "sg_set_binary_mode",0|115-103-95-115-101-116-95-98-105-110-97-114-121-95-109-111-100-101-0
1419|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1445|data|DCB "sg_get_llnum",0|115-103-95-103-101-116-95-108-108-110-117-109-0
1458|data|DCB "sg_ll_get_lba_status",0|115-103-95-108-108-95-103-101-116-95-108-98-97-95-115-116-97-116-117-115-0
1479|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1487|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1508|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1528|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1538|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1551|data|DCB "optind",0|111-112-116-105-110-100-0
1558|data|DCB "perror",0|112-101-114-114-111-114-0
1565|data|DCB "puts",0|112-117-116-115-0
1570|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1587|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1595|data|DCB "abort",0|97-98-111-114-116-0
1601|data|DCB "calloc",0|99-97-108-108-111-99-0
1608|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1622|data|DCB "optarg",0|111-112-116-97-114-103-0
1629|data|DCB "stderr",0|115-116-100-101-114-114-0
1636|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1648|data|DCB "fwrite",0|102-119-114-105-116-101-0
1655|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1670|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1688|data|DCB "free",0|102-114-101-101-0
1693|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1713|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1731|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1744|data|DCB "_edata",0|95-101-100-97-116-97-0
1751|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1763|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1777|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1789|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1797|data|DCB "_end",0|95-101-110-100-0
1802|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1818|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1834|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1844|data|DCW 0|0-0
1846|data|DCW 0|0-0
1848|data|DCW 0|0-0
1850|data|DCW 2; calloc@@GLIBC_2.4|2-0
1852|data|DCW 0; local  symbol: sg_set_binary_mode|0-0
1854|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1856|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1858|data|DCW 0; local  symbol: dStrHex|0-0
1860|data|DCW 2; free@@GLIBC_2.4|2-0
1862|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1864|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
1866|data|DCW 2; optind@@GLIBC_2.4|2-0
1868|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1870|data|DCW 2; perror@@GLIBC_2.4|2-0
1872|data|DCW 2; stderr@@GLIBC_2.4|2-0
1874|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1876|data|DCW 2; puts@@GLIBC_2.4|2-0
1878|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1880|data|DCW 0; local  symbol: __gmon_start__|0-0
1882|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1884|data|DCW 2; putchar@@GLIBC_2.4|2-0
1886|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
1888|data|DCW 0; local  symbol: sg_get_llnum|0-0
1890|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1892|data|DCW 0; local  symbol: safe_strerror|0-0
1894|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1896|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
1898|data|DCW 0; local  symbol: sg_get_num|0-0
1900|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1902|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
1904|data|DCW 2; optarg@@GLIBC_2.4|2-0
1906|data|DCW 2; abort@@GLIBC_2.4|2-0
1908|data|DCW 0; local  symbol: sg_ll_get_lba_status|0-0
1910|data|DCW 1; global symbol: _bss_end__|1-0
1912|data|DCW 1; global symbol: _edata|1-0
1914|data|DCW 1; global symbol: __data_start|1-0
1916|data|DCW 1; global symbol: _end|1-0
1918|data|DCW 1; global symbol: __bss_end__|1-0
1920|data|DCW 1; global symbol: __libc_csu_init|1-0
1922|data|DCW 1; global symbol: __bss_start|1-0
1924|data|DCW 1; global symbol: main|1-0
1926|data|DCW 1; global symbol: _init|1-0
1928|data|DCW 1; global symbol: __libc_csu_fini|1-0
1930|data|DCW 1; global symbol: __bss_start__|1-0
1932|data|DCW 1; global symbol: _fini|1-0
1934|data|DCW 1; global symbol: __end__|1-0
1936|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_4F4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-169-1-0-0-16-0-0-0-32-0-0-0
1952|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_4F4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-54-2-0-0-0-0-0-0
1968|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_4F4, 0x10, 0>; "libc.so.6"|1-0-1-0-4-1-0-0-16-0-0-0-0-0-0-0
1984|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_4F4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-54-2-0-0-0-0-0-0
2000|data|Elf32_Rel <0x11E54, 0x17>; R_ARM_RELATIVE|84-30-1-0-23-0-0-0
2008|data|Elf32_Rel <0x11E58, 0x17>; R_ARM_RELATIVE|88-30-1-0-23-0-0-0
2016|data|Elf32_Rel <0x11FD0, 0x17>; R_ARM_RELATIVE|208-31-1-0-23-0-0-0
2024|data|Elf32_Rel <0x11FEC, 0x17>; R_ARM_RELATIVE|236-31-1-0-23-0-0-0
2032|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
2040|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
2048|data|Elf32_Rel <0x12008, 0x17>; R_ARM_RELATIVE|8-32-1-0-23-0-0-0
2056|data|Elf32_Rel <0x12018, 0x17>; R_ARM_RELATIVE|24-32-1-0-23-0-0-0
2064|data|Elf32_Rel <0x12028, 0x17>; R_ARM_RELATIVE|40-32-1-0-23-0-0-0
2072|data|Elf32_Rel <0x12038, 0x17>; R_ARM_RELATIVE|56-32-1-0-23-0-0-0
2080|data|Elf32_Rel <0x12048, 0x17>; R_ARM_RELATIVE|72-32-1-0-23-0-0-0
2088|data|Elf32_Rel <0x12058, 0x17>; R_ARM_RELATIVE|88-32-1-0-23-0-0-0
2096|data|Elf32_Rel <0x12068, 0x17>; R_ARM_RELATIVE|104-32-1-0-23-0-0-0
2104|data|Elf32_Rel <0x12078, 0x17>; R_ARM_RELATIVE|120-32-1-0-23-0-0-0
2112|data|Elf32_Rel <0x12088, 0x17>; R_ARM_RELATIVE|136-32-1-0-23-0-0-0
2120|data|Elf32_Rel <0x120A8, 0x17>; R_ARM_RELATIVE|168-32-1-0-23-0-0-0
2128|data|Elf32_Rel <0x11FD4, 0x515>; R_ARM_GLOB_DAT __cxa_finalize|212-31-1-0-21-5-0-0
2136|data|Elf32_Rel <0x11FD8, 0x615>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-31-1-0-21-6-0-0
2144|data|Elf32_Rel <0x11FDC, 0x915>; R_ARM_GLOB_DAT __stack_chk_guard|220-31-1-0-21-9-0-0
2152|data|Elf32_Rel <0x11FE0, 0xB15>; R_ARM_GLOB_DAT optind|224-31-1-0-21-11-0-0
2160|data|Elf32_Rel <0x11FE4, 0xE15>; R_ARM_GLOB_DAT stderr|228-31-1-0-21-14-0-0
2168|data|Elf32_Rel <0x11FE8, 0x1215>; R_ARM_GLOB_DAT __gmon_start__|232-31-1-0-21-18-0-0
2176|data|Elf32_Rel <0x11FF4, 0x1915>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-31-1-0-21-25-0-0
2184|data|Elf32_Rel <0x11FF8, 0x1C15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-31-1-0-21-28-0-0
2192|data|Elf32_Rel <0x11FFC, 0x1E15>; R_ARM_GLOB_DAT optarg|252-31-1-0-21-30-0-0
2200|data|Elf32_Rel <0x11F74, 0x316>; R_ARM_JUMP_SLOT calloc|116-31-1-0-22-3-0-0
2208|data|Elf32_Rel <0x11F78, 0x416>; R_ARM_JUMP_SLOT sg_set_binary_mode|120-31-1-0-22-4-0-0
2216|data|Elf32_Rel <0x11F7C, 0x516>; R_ARM_JUMP_SLOT __cxa_finalize|124-31-1-0-22-5-0-0
2224|data|Elf32_Rel <0x11F80, 0x716>; R_ARM_JUMP_SLOT dStrHex|128-31-1-0-22-7-0-0
2232|data|Elf32_Rel <0x11F84, 0x816>; R_ARM_JUMP_SLOT free|132-31-1-0-22-8-0-0
2240|data|Elf32_Rel <0x11F88, 0xA16>; R_ARM_JUMP_SLOT sg_cmds_close_device|136-31-1-0-22-10-0-0
2248|data|Elf32_Rel <0x11F8C, 0xC16>; R_ARM_JUMP_SLOT __stack_chk_fail|140-31-1-0-22-12-0-0
2256|data|Elf32_Rel <0x11F90, 0xD16>; R_ARM_JUMP_SLOT perror|144-31-1-0-22-13-0-0
2264|data|Elf32_Rel <0x11F94, 0xF16>; R_ARM_JUMP_SLOT fwrite|148-31-1-0-22-15-0-0
2272|data|Elf32_Rel <0x11F98, 0x1016>; R_ARM_JUMP_SLOT puts|152-31-1-0-22-16-0-0
2280|data|Elf32_Rel <0x11F9C, 0x1116>; R_ARM_JUMP_SLOT __libc_start_main|156-31-1-0-22-17-0-0
2288|data|Elf32_Rel <0x11FA0, 0x1216>; R_ARM_JUMP_SLOT __gmon_start__|160-31-1-0-22-18-0-0
2296|data|Elf32_Rel <0x11FA4, 0x1316>; R_ARM_JUMP_SLOT getopt_long|164-31-1-0-22-19-0-0
2304|data|Elf32_Rel <0x11FA8, 0x1416>; R_ARM_JUMP_SLOT putchar|168-31-1-0-22-20-0-0
2312|data|Elf32_Rel <0x11FAC, 0x1516>; R_ARM_JUMP_SLOT __printf_chk|172-31-1-0-22-21-0-0
2320|data|Elf32_Rel <0x11FB0, 0x1616>; R_ARM_JUMP_SLOT sg_get_llnum|176-31-1-0-22-22-0-0
2328|data|Elf32_Rel <0x11FB4, 0x1716>; R_ARM_JUMP_SLOT __fprintf_chk|180-31-1-0-22-23-0-0
2336|data|Elf32_Rel <0x11FB8, 0x1816>; R_ARM_JUMP_SLOT safe_strerror|184-31-1-0-22-24-0-0
2344|data|Elf32_Rel <0x11FBC, 0x1A16>; R_ARM_JUMP_SLOT sg_get_category_sense_str|188-31-1-0-22-26-0-0
2352|data|Elf32_Rel <0x11FC0, 0x1B16>; R_ARM_JUMP_SLOT sg_get_num|192-31-1-0-22-27-0-0
2360|data|Elf32_Rel <0x11FC4, 0x1D16>; R_ARM_JUMP_SLOT sg_cmds_open_device|196-31-1-0-22-29-0-0
2368|data|Elf32_Rel <0x11FC8, 0x1F16>; R_ARM_JUMP_SLOT abort|200-31-1-0-22-31-0-0
2376|data|Elf32_Rel <0x11FCC, 0x2016>; R_ARM_JUMP_SLOT sg_ll_get_lba_status|204-31-1-0-22-32-0-0
2384|code|PUSH            {R3,LR}; _init|8-64-45-233
2388|code|BL              sub_1258|63-2-0-235
2392|code|POP             {R3,PC}|8-128-189-232
2396|code|PUSH            {LR}|4-224-45-229
2400|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x96C)|4-224-159-229
2404|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2408|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2412|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x96C|252-21-1-0
2416|code|ADR             R12, 0x978|0-198-143-226
2420|code|ADD             R12, R12, #0x11000|17-202-140-226
2424|code|LDR             PC, [R12,#(calloc_ptr - 0x11978)]!; __imp_calloc|252-245-188-229
2428|code|ADR             R12, 0x984|0-198-143-226
2432|code|ADD             R12, R12, #0x11000|17-202-140-226
2436|code|LDR             PC, [R12,#(sg_set_binary_mode_ptr - 0x11984)]!; __imp_sg_set_binary_mode|244-245-188-229
2440|code|ADR             R12, 0x990|0-198-143-226
2444|code|ADD             R12, R12, #0x11000|17-202-140-226
2448|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x11990)]!; __imp___cxa_finalize|236-245-188-229
2452|code|ADR             R12, 0x99C|0-198-143-226
2456|code|ADD             R12, R12, #0x11000|17-202-140-226
2460|code|LDR             PC, [R12,#(dStrHex_ptr - 0x1199C)]!; __imp_dStrHex|228-245-188-229
2464|code|ADR             R12, 0x9A8|0-198-143-226
2468|code|ADD             R12, R12, #0x11000|17-202-140-226
2472|code|LDR             PC, [R12,#(free_ptr - 0x119A8)]!; __imp_free|220-245-188-229
2476|code|ADR             R12, 0x9B4|0-198-143-226
2480|code|ADD             R12, R12, #0x11000|17-202-140-226
2484|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x119B4)]!; __imp_sg_cmds_close_device|212-245-188-229
2488|code|ADR             R12, 0x9C0|0-198-143-226
2492|code|ADD             R12, R12, #0x11000|17-202-140-226
2496|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x119C0)]!; __imp___stack_chk_fail|204-245-188-229
2500|code|ADR             R12, 0x9CC|0-198-143-226
2504|code|ADD             R12, R12, #0x11000|17-202-140-226
2508|code|LDR             PC, [R12,#(perror_ptr - 0x119CC)]!; __imp_perror|196-245-188-229
2512|code|BX              PC|120-71
2514|data|ALIGN 4|192-70
2516|code|ADR             R12, 0x9DC|0-198-143-226
2520|code|ADD             R12, R12, #0x11000|17-202-140-226
2524|code|LDR             PC, [R12,#(fwrite_ptr - 0x119DC)]!; __imp_fwrite|184-245-188-229
2528|code|ADR             R12, 0x9E8|0-198-143-226
2532|code|ADD             R12, R12, #0x11000|17-202-140-226
2536|code|LDR             PC, [R12,#(puts_ptr - 0x119E8)]!; __imp_puts|176-245-188-229
2540|code|ADR             R12, 0x9F4|0-198-143-226
2544|code|ADD             R12, R12, #0x11000|17-202-140-226
2548|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x119F4)]!; __imp___libc_start_main|168-245-188-229
2552|code|ADR             R12, 0xA00|0-198-143-226
2556|code|ADD             R12, R12, #0x11000|17-202-140-226
2560|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x11A00)]!; __imp___gmon_start__|160-245-188-229
2564|code|ADR             R12, 0xA0C|0-198-143-226
2568|code|ADD             R12, R12, #0x11000|17-202-140-226
2572|code|LDR             PC, [R12,#(getopt_long_ptr - 0x11A0C)]!; __imp_getopt_long|152-245-188-229
2576|code|ADR             R12, 0xA18|0-198-143-226
2580|code|ADD             R12, R12, #0x11000|17-202-140-226
2584|code|LDR             PC, [R12,#(putchar_ptr - 0x11A18)]!; __imp_putchar|144-245-188-229
2588|code|ADR             R12, 0xA24|0-198-143-226
2592|code|ADD             R12, R12, #0x11000|17-202-140-226
2596|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x11A24)]!; __imp___printf_chk|136-245-188-229
2600|code|ADR             R12, 0xA30|0-198-143-226
2604|code|ADD             R12, R12, #0x11000|17-202-140-226
2608|code|LDR             PC, [R12,#(sg_get_llnum_ptr - 0x11A30)]!; __imp_sg_get_llnum|128-245-188-229
2612|code|ADR             R12, 0xA3C|0-198-143-226
2616|code|ADD             R12, R12, #0x11000|17-202-140-226
2620|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x11A3C)]!; __imp___fprintf_chk|120-245-188-229
2624|code|ADR             R12, 0xA48|0-198-143-226
2628|code|ADD             R12, R12, #0x11000|17-202-140-226
2632|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x11A48)]!; __imp_safe_strerror|112-245-188-229
2636|code|ADR             R12, 0xA54|0-198-143-226
2640|code|ADD             R12, R12, #0x11000|17-202-140-226
2644|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x11A54)]!; __imp_sg_get_category_sense_str|104-245-188-229
2648|code|ADR             R12, 0xA60|0-198-143-226
2652|code|ADD             R12, R12, #0x11000|17-202-140-226
2656|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x11A60)]!; __imp_sg_get_num|96-245-188-229
2660|code|ADR             R12, 0xA6C|0-198-143-226
2664|code|ADD             R12, R12, #0x11000|17-202-140-226
2668|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x11A6C)]!; __imp_sg_cmds_open_device|88-245-188-229
2672|code|ADR             R12, 0xA78|0-198-143-226
2676|code|ADD             R12, R12, #0x11000|17-202-140-226
2680|code|LDR             PC, [R12,#(abort_ptr - 0x11A78)]!; __imp_abort|80-245-188-229
2684|code|ADR             R12, 0xA84|0-198-143-226
2688|code|ADD             R12, R12, #0x11000|17-202-140-226
2692|code|LDR             PC, [R12,#(sg_ll_get_lba_status_ptr - 0x11A84)]!; __imp_sg_ll_get_lba_status|72-245-188-229
2696|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2700|code|SUB             SP, SP, #0xC4|177-176
2702|code|LDR.W           R5, =(_GLOBAL_OFFSET_TABLE_ - 0xA9E)|223-248-156-86
2706|code|MOVS            R2, #0|0-34
2708|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x11F68)|223-248-152-54
2712|code|MOV             R7, R1|15-70
2714|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
2716|code|STR             R2, [SP,#0xE8+var_D8]|4-146
2718|code|LDR.W           R11, =(aBhhlMRrvv - 0xAB2); "bhHl:m:rRvV"|223-248-148-182
2722|code|ADD.W           R10, SP, #0xE8+var_8C|13-241-92-10
2726|code|LDR             R3, [R5,R3]; __stack_chk_guard|235-88
2728|code|MOV             R6, R0|6-70
2730|code|LDR.W           R8, =(off_12008 - 0xABA); "brief"|223-248-140-134
2734|code|ADD             R11, PC; "bhHl:m:rRvV"|251-68
2736|code|MOV             LR, R2|150-70
2738|code|MOV             R4, R2|20-70
2740|code|STR             R3, [SP,#0xE8+var_D0]|6-147
2742|code|ADD             R8, PC; off_12008|248-68
2744|code|LDR             R1, [SP,#0xE8+var_D0]|6-153
2746|code|MOV             R9, R2|145-70
2748|code|STR             R2, [SP,#0xE8+read_only]|8-146
2750|code|STR             R2, [SP,#0xE8+var_CC]|7-146
2752|code|LDR             R1, [R1]|9-104
2754|code|STR             R2, [SP,#0xE8+var_D4]|5-146
2756|code|STR             R2, [SP,#0xE8+var_C0]|10-146
2758|code|STR             R2, [SP,#0xE8+var_88]|24-146
2760|code|STR             R2, [SP,#0xE8+var_C4]|9-146
2762|code|STR             R2, [SP,#0xE8+var_90]|22-146
2764|code|MOVS            R2, #0x18|24-34
2766|code|STR             R1, [SP,#0xE8+var_2C]|47-145
2768|code|STR             R2, [SP,#0xE8+nmemb]|11-146
2770|code|STR.W           LR, [SP,#0xE8+var_84]|205-248-100-224
2774|code|MOV             R1, R7; argv|57-70
2776|code|STR.W           R10, [SP,#0xE8+longind]; longind|205-248-0-160
2780|code|MOV             R0, R6; argc|48-70
2782|code|MOV             R2, R11; shortopts|90-70
2784|code|MOV             R3, R8; longopts|67-70
2786|code|STR.W           R9, [SP,#0xE8+var_8C]|205-248-92-144
2790|code|BLX             getopt_long|255-247-142-239
2794|code|ADDS            R1, R0, #1|65-28
2796|code|BEQ.W           loc_BFA|0-240-133-128
2800|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
2804|code|CMP             R3, #0x37|55-43
2806|code|BHI             def_AF8; jumptable 00000AF8 default case, cases 64-71,73-81,83-85,87-97,99-103,105-107,110-113,115-117|113-216
2808|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
2812|data|DCB 0x6C; jump table for switch statement|108
2813|data|DCB 0x70|112
2814|data|DCB 0x70|112
2815|data|DCB 0x70|112
2816|data|DCB 0x70|112
2817|data|DCB 0x70|112
2818|data|DCB 0x70|112
2819|data|DCB 0x70|112
2820|data|DCB 0x70|112
2821|data|DCB 0x68|104
2822|data|DCB 0x70|112
2823|data|DCB 0x70|112
2824|data|DCB 0x70|112
2825|data|DCB 0x70|112
2826|data|DCB 0x70|112
2827|data|DCB 0x70|112
2828|data|DCB 0x70|112
2829|data|DCB 0x70|112
2830|data|DCB 0x70|112
2831|data|DCB 0x64|100
2832|data|DCB 0x70|112
2833|data|DCB 0x70|112
2834|data|DCB 0x70|112
2835|data|DCB 0x4D|77
2836|data|DCB 0x70|112
2837|data|DCB 0x70|112
2838|data|DCB 0x70|112
2839|data|DCB 0x70|112
2840|data|DCB 0x70|112
2841|data|DCB 0x70|112
2842|data|DCB 0x70|112
2843|data|DCB 0x70|112
2844|data|DCB 0x70|112
2845|data|DCB 0x70|112
2846|data|DCB 0x70|112
2847|data|DCB 0x49|73
2848|data|DCB 0x70|112
2849|data|DCB 0x70|112
2850|data|DCB 0x70|112
2851|data|DCB 0x70|112
2852|data|DCB 0x70|112
2853|data|DCB 0x6C|108
2854|data|DCB 0x70|112
2855|data|DCB 0x70|112
2856|data|DCB 0x70|112
2857|data|DCB 0x3A|58
2858|data|DCB 0x22|34
2859|data|DCB 0x70|112
2860|data|DCB 0x70|112
2861|data|DCB 0x70|112
2862|data|DCB 0x70|112
2863|data|DCB 0x1E|30
2864|data|DCB 0x70|112
2865|data|DCB 0x70|112
2866|data|DCB 0x70|112
2867|data|DCB 0x1C|28
2868|code|ADDS            R4, #1; jumptable 00000AF8 case 118|1-52
2870|code|B               loc_AD6|206-231
2872|code|LDR             R3, [SP,#0xE8+var_CC]; jumptable 00000AF8 case 114|7-155
2874|code|ADDS            R3, #1|1-51
2876|code|STR             R3, [SP,#0xE8+var_CC]|7-147
2878|code|B               loc_AD6|202-231
2880|code|LDR.W           R3, =(optarg_ptr - 0x11F68); jumptable 00000AF8 case 109|223-248-248-53
2884|code|LDR             R3, [R5,R3]; optarg|235-88
2886|code|LDR             R0, [R3]; buf|24-104
2888|code|BLX             sg_get_num|255-247-134-239
2892|code|CMP.W           R0, #0x100000|176-245-128-31
2896|code|STR             R0, [SP,#0xE8+nmemb]|11-144
2898|code|BLS             loc_AD6|192-217
2900|code|LDR.W           R0, =(stderr_ptr - 0x11F68)|223-248-232-5
2904|code|MOVS            R1, #1|1-33
2906|code|LDR.W           R2, =(aArgumentToMaxl - 0xB68); "argument to '--maxlen' should be %d or "...|223-248-232-37
2910|code|MOV.W           R3, #0x100000|79-244-128-19
2914|code|LDR             R0, [R5,R0]; stderr|40-88
2916|code|ADD             R2, PC; "argument to '--maxlen' should be %d or "...|122-68
2918|code|LDR             R0, [R0]|0-104
2920|code|BLX             __fprintf_chk|255-247-100-239
2924|code|MOVS            R0, #1|1-32
2926|code|B               loc_BB2|32-224
2928|code|LDR.W           R3, =(optarg_ptr - 0x11F68); jumptable 00000AF8 case 108|223-248-200-53
2932|code|LDR             R3, [R5,R3]; optarg|235-88
2934|code|LDR             R0, [R3]; buf|24-104
2936|code|BLX             sg_get_llnum|255-247-86-239
2940|code|ADDS            R2, R1, #1|74-28
2942|code|IT EQ|8-191
2944|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
2948|code|BEQ.W           loc_DF4|0-240-54-129
2952|code|STRD.W          R0, R1, [SP,#0xE8+var_D8]|205-233-4-1
2956|code|B               loc_AD6|163-231
2958|code|LDR             R3, [SP,#0xE8+var_C4]; jumptable 00000AF8 case 98|9-155
2960|code|ADDS            R3, #1|1-51
2962|code|STR             R3, [SP,#0xE8+var_C4]|9-147
2964|code|B               loc_AD6|159-231
2966|code|LDR.W           R0, =(stderr_ptr - 0x11F68); jumptable 00000AF8 case 86|223-248-168-5
2970|code|MOVS            R1, #1|1-33
2972|code|LDR.W           R2, =(aVersionS - 0xBAA); "version: %s\n"|223-248-168-37
2976|code|LDR.W           R3, =(a10620140515 - 0xBAC); "1.06 20140515"|223-248-168-53
2980|code|LDR             R0, [R5,R0]; stderr|40-88
2982|code|ADD             R2, PC; "version: %s\n"|122-68
2984|code|ADD             R3, PC; "1.06 20140515"|123-68
2986|code|LDR             R0, [R0]|0-104
2988|code|BLX             __fprintf_chk|255-247-66-239
2992|code|MOVS            R0, #0|0-32
2994|code|LDR             R3, [SP,#0xE8+var_D0]|6-155
2996|code|LDR             R2, [SP,#0xE8+var_2C]|47-154
2998|code|LDR             R3, [R3]|27-104
3000|code|CMP             R2, R3|154-66
3002|code|BNE.W           loc_10F4|64-240-155-130
3006|code|ADD             SP, SP, #0xC4|49-176
3008|code|POP.W           {R4-R11,PC}|189-232-240-143
3012|code|LDR             R3, [SP,#0xE8+read_only]; jumptable 00000AF8 case 82|8-155
3014|code|ADDS            R3, #1|1-51
3016|code|STR             R3, [SP,#0xE8+read_only]|8-147
3018|code|B               loc_AD6|132-231
3020|code|LDR             R3, [SP,#0xE8+var_C0]; jumptable 00000AF8 case 72|10-155
3022|code|ADDS            R3, #1|1-51
3024|code|STR             R3, [SP,#0xE8+var_C0]|10-147
3026|code|B               loc_AD6|128-231
3028|code|BL              sub_13E0; jumptable 00000AF8 cases 63,104|0-240-4-252
3032|code|MOVS            R0, #0|0-32
3034|code|B               loc_BB2|234-231
3036|code|LDR.W           R4, =(stderr_ptr - 0x11F68); jumptable 00000AF8 default case, cases 64-71,73-81,83-85,87-97,99-103,105-107,110-113,115-117|223-248-96-69
3040|code|MOV             R3, R0|3-70
3042|code|LDR.W           R2, =(aUnrecognisedOp - 0xBEE); "unrecognised option code 0x%x ??\n"|223-248-108-37
3046|code|MOVS            R1, #1|1-33
3048|code|LDR             R0, [R5,R4]; stderr|40-89
3050|code|ADD             R2, PC; "unrecognised option code 0x%x ??\n"|122-68
3052|code|LDR             R0, [R0]|0-104
3054|code|BLX             __fprintf_chk|255-247-34-239
3058|code|BL              sub_13E0|0-240-245-251
3062|code|MOVS            R0, #1|1-32
3064|code|B               loc_BB2|219-231
3066|code|LDR.W           R3, =(optind_ptr - 0x11F68)|223-248-88-53
3070|code|LDR.W           R11, [SP,#0xE8+nmemb]|221-248-44-176
3074|code|LDR.W           R9, [R5,R3]; optind|85-248-3-144
3078|code|LDR.W           R3, [R9]|217-248-0-48
3082|code|CMP             R6, R3|158-66
3084|code|BLE             loc_C54|34-221
3086|code|ADDS            R2, R3, #1|90-28
3088|code|LDR.W           R10, [R7,R3,LSL#2]|87-248-35-160
3092|code|CMP             R6, R2|150-66
3094|code|STR.W           R2, [R9]|201-248-0-32
3098|code|BLE             loc_C72|42-221
3100|code|LDR.W           R4, =(aUnexpectedExtr - 0xC26); "Unexpected extra argument: %s\n"|223-248-56-69
3104|code|MOV             R8, R9|200-70
3106|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3108|code|B               loc_C44|14-224
3110|code|LDR.W           R0, =(stderr_ptr - 0x11F68)|223-248-24-5
3114|code|MOVS            R1, #1|1-33
3116|code|LDR.W           R3, [R7,R3,LSL#2]|87-248-35-48
3120|code|MOV             R2, R4|34-70
3122|code|LDR             R0, [R5,R0]; stderr|40-88
3124|code|LDR             R0, [R0]|0-104
3126|code|BLX             __fprintf_chk|255-247-254-238
3130|code|LDR.W           R3, [R8]|216-248-0-48
3134|code|ADDS            R3, #1|1-51
3136|code|STR.W           R3, [R8]|200-248-0-48
3140|code|LDR.W           R3, [R9]|217-248-0-48
3144|code|CMP             R6, R3|158-66
3146|code|BGT             loc_C26|236-220
3148|code|BL              sub_13E0|0-240-200-251
3152|code|MOVS            R0, #1|1-32
3154|code|B               loc_BB2|174-231
3156|code|LDR.W           R3, =(stderr_ptr - 0x11F68)|223-248-232-52
3160|code|MOVS            R1, #1; size|1-33
3162|code|LDR.W           R0, =(aMissingDeviceN - 0xC66); "missing device name!\n"|223-248-0-5
3166|code|MOVS            R2, #0x15; n|21-34
3168|code|LDR             R3, [R5,R3]; stderr|235-88
3170|code|ADD             R0, PC; "missing device name!\n"|120-68
3172|code|LDR             R3, [R3]; s|27-104
3174|code|BLX             fwrite|255-247-182-238
3178|code|BL              sub_13E0|0-240-185-251
3182|code|MOVS            R0, #1|1-32
3184|code|B               loc_BB2|159-231
3186|code|CMP.W           R10, #0|186-241-0-15
3190|code|BEQ             loc_C54|237-208
3192|code|LDR             R3, [SP,#0xE8+nmemb]|11-155
3194|code|CMP             R3, #0x18|24-43
3196|code|BGT.W           loc_D94|0-243-138-128
3200|code|LDR             R3, [SP,#0xE8+var_CC]|7-155
3202|code|CBZ             R3, loc_C90|43-177
3204|code|MOVS            R0, #1|1-32
3206|code|BLX             sg_set_binary_mode|255-247-122-238
3210|code|CMP             R0, #0|0-40
3212|code|BLT.W           loc_EA8|192-242-12-129
3216|code|LDR             R1, [SP,#0xE8+read_only]; read_only|8-153
3218|code|MOV             R0, R10; device_name|80-70
3220|code|MOV             R2, R4; verbose|34-70
3222|code|BLX             sg_cmds_open_device|255-247-230-238
3226|code|SUBS.W          R8, R0, #0|176-241-0-8
3230|code|BLT.W           loc_DBC|192-242-141-128
3234|code|LDR.W           R9, =(off_12008 - 0xCAE); "brief"|223-248-188-148
3238|code|MOVS            R6, #1|1-38
3240|code|LDR             R3, [SP,#0xE8+nmemb]|11-155
3242|code|ADD             R9, PC; off_12008|249-68
3244|code|STR             R4, [SP,#0xE8+var_DC]|3-148
3246|code|STR             R3, [SP,#0xE8+var_E4]|1-147
3248|code|LDR.W           R1, [R9,#(off_120A8 - 0x12008)]; byte_120B0|217-248-160-16
3252|code|LDRD.W          R2, R3, [SP,#0xE8+var_D8]|221-233-4-35
3256|code|STR             R6, [SP,#0xE8+var_E0]|2-150
3258|code|STR             R1, [SP,#0xE8+longind]|0-145
3260|code|BLX             sg_ll_get_lba_status|255-247-222-238
3264|code|MOV             R7, R0|7-70
3266|code|CMP             R0, #0|0-40
3268|code|BNE             loc_D46|63-209
3270|code|LDR             R3, [SP,#0xE8+nmemb]|11-155
3272|code|CMP             R3, #3|3-43
3274|code|BLE             loc_CE8|13-221
3276|code|LDR.W           R1, [R9,#(off_120A8 - 0x12008)]; byte_120B0|217-248-160-16
3280|code|LDRB            R2, [R1,#(byte_120B1 - 0x120B0)]|74-120
3282|code|LDRB            R3, [R1]|11-120
3284|code|LDRB            R0, [R1,#(byte_120B2 - 0x120B0)]|136-120
3286|code|LSLS            R2, R2, #0x10|18-4
3288|code|LDRB            R1, [R1,#(byte_120B3 - 0x120B0)]|201-120
3290|code|ADD.W           R3, R2, R3,LSL#24|2-235-3-99
3294|code|ADD.W           R3, R3, R0,LSL#8|3-235-0-35
3298|code|ADD             R3, R1|11-68
3300|code|ADDS            R3, #4|4-51
3302|code|STR             R3, [SP,#0xE8+nmemb]|11-147
3304|code|LDR             R3, [SP,#0xE8+nmemb]|11-155
3306|code|CMP             R3, R11|91-69
3308|code|IT GE|168-191
3310|code|MOVGE           R3, R11|91-70
3312|code|MOV             R9, R3|153-70
3314|code|LDR             R3, [SP,#0xE8+var_CC]|7-155
3316|code|CMP             R3, #0|0-43
3318|code|BNE.W           loc_E0A|64-240-136-128
3322|code|LDR             R3, [SP,#0xE8+var_C0]|10-155
3324|code|CMP             R3, #0|0-43
3326|code|BNE.W           loc_E92|64-240-200-128
3330|code|CMP.W           R11, #3|187-241-3-15
3334|code|BGT.W           loc_E26|0-243-142-128
3338|code|CMP             R4, #0|0-44
3340|code|BNE.W           loc_F4E|64-240-31-129
3344|code|MOV             R0, R8; device_fd|64-70
3346|code|BLX             sg_cmds_close_device|255-247-76-238
3350|code|CMP             R0, #0|0-40
3352|code|BLT.W           loc_1110|192-242-250-129
3356|code|LDR.W           R3, =(off_12008 - 0xD24); "brief"|223-248-68-52
3360|code|ADD             R3, PC; off_12008|123-68
3362|code|LDR.W           R0, [R3,#(off_120A8 - 0x12008)]; byte_120B0 ; ptr|211-248-160-0
3366|code|CMP             R0, #0|0-40
3368|code|BEQ.W           loc_BB2|63-244-67-175
3372|code|LDR.W           R3, =(byte_120B0 - 0xD34)|223-248-56-52
3376|code|ADD             R3, PC; byte_120B0|123-68
3378|code|CMP             R0, R3|152-66
3380|code|BEQ.W           loc_EA4|0-240-182-128
3384|code|BLX             free|255-247-50-238
3388|code|CMP             R7, #0|0-47
3390|code|ITE GE|172-191
3392|code|MOVGE           R0, R7|56-70
3394|code|MOVLT           R0, #0x63 ; 'c'|99-32
3396|code|B               loc_BB2|53-231
3398|code|CMP             R0, #9|9-40
3400|code|BEQ.W           loc_EB2|0-240-179-128
3404|code|CMP             R0, #5|5-40
3406|code|BEQ.W           loc_E7E|0-240-150-128
3410|code|MOV             R3, R4|35-70
3412|code|ADD             R4, SP, #0xE8+var_7C|27-172
3414|code|MOVS            R1, #0x50 ; 'P'|80-33
3416|code|MOV             R2, R4|34-70
3418|code|BLX             sg_get_category_sense_str|255-247-120-238
3422|code|LDR             R0, =(stderr_ptr - 0x11F68)|248-72
3424|code|MOV             R3, R4|35-70
3426|code|LDR.W           R2, =(aGetLbaStatusCo - 0xD6E); "Get LBA Status command: %s\n"|223-248-8-36
3430|code|MOV             R1, R6|49-70
3432|code|LDR             R4, [R5,R0]; stderr|44-88
3434|code|ADD             R2, PC; "Get LBA Status command: %s\n"|122-68
3436|code|LDR             R0, [R4]|32-104
3438|code|BLX             __fprintf_chk|255-247-98-238
3442|code|MOV             R0, R8; device_fd|64-70
3444|code|BLX             sg_cmds_close_device|255-247-26-238
3448|code|CMP             R0, #0|0-40
3450|code|BLT.W           loc_10F8|192-242-189-129
3454|code|LDR             R3, =(off_12008 - 0xD84); "brief"|252-75
3456|code|ADD             R3, PC; off_12008|123-68
3458|code|LDR.W           R0, [R3,#(off_120A8 - 0x12008)]; byte_120B0|211-248-160-0
3462|code|CMP             R0, #0|0-40
3464|code|BEQ             loc_D3C|216-208
3466|code|LDR             R3, =(byte_120B0 - 0xD90)|250-75
3468|code|ADD             R3, PC; byte_120B0|123-68
3470|code|CMP             R0, R3|152-66
3472|code|BNE             loc_D38|210-209
3474|code|B               loc_D3C|211-231
3476|code|MOV             R0, R3; nmemb|24-70
3478|code|MOVS            R1, #1; size|1-33
3480|code|BLX             calloc|255-247-234-237
3484|code|STR.W           R0, [R8,#(off_120A8 - 0x12008)]; byte_120B0|200-248-160-0
3488|code|CMP             R0, #0|0-40
3490|code|BNE.W           loc_C80|127-244-109-175
3494|code|LDR             R0, =(stderr_ptr - 0x11F68)|230-72
3496|code|MOVS            R1, #1|1-33
3498|code|LDR             R2, =(aUnableToAlloca - 0xDB4); "unable to allocate %d bytes on heap\n"|243-74
3500|code|LDR             R3, [SP,#0xE8+nmemb]|11-155
3502|code|LDR             R0, [R5,R0]; stderr|40-88
3504|code|ADD             R2, PC; "unable to allocate %d bytes on heap\n"|122-68
3506|code|LDR             R0, [R0]|0-104
3508|code|BLX             __fprintf_chk|255-247-62-238
3512|code|MOVS            R0, #1|1-32
3514|code|B               loc_BB2|250-230
3516|code|LDR             R3, =(stderr_ptr - 0x11F68)|224-75
3518|code|RSB.W           R0, R8, #0; errnum|200-241-0-0
3522|code|LDR             R3, [R5,R3]; stderr|235-88
3524|code|LDR             R4, [R3]|28-104
3526|code|BLX             safe_strerror|255-247-60-238
3530|code|LDR             R2, =(aOpenErrorSS - 0xDD4); "open error: %s: %s\n"|236-74
3532|code|MOV             R3, R10|83-70
3534|code|MOVS            R1, #1|1-33
3536|code|ADD             R2, PC; "open error: %s: %s\n"|122-68
3538|code|STR             R0, [SP,#0xE8+longind]|0-144
3540|code|MOV             R0, R4|32-70
3542|code|BLX             __fprintf_chk|255-247-46-238
3546|code|LDR             R3, =(off_12008 - 0xDE0); "brief"|233-75
3548|code|ADD             R3, PC; off_12008|123-68
3550|code|LDR.W           R0, [R3,#(off_120A8 - 0x12008)]; byte_120B0|211-248-160-0
3554|code|CBZ             R0, loc_DF0|40-177
3556|code|LDR             R3, =(byte_120B0 - 0xDEA)|231-75
3558|code|ADD             R3, PC; byte_120B0|123-68
3560|code|CMP             R0, R3|152-66
3562|code|BEQ             loc_DF0|1-208
3564|code|MOVS            R7, #0xF|15-39
3566|code|B               loc_D38|163-231
3568|code|MOVS            R0, #0xF|15-32
3570|code|B               loc_BB2|222-230
3572|code|LDR             R3, =(stderr_ptr - 0x11F68)|210-75
3574|code|MOVS            R1, #1; size|1-33
3576|code|LDR             R0, =(aBadArgumentToL - 0xE02); "bad argument to '--lba'\n"|227-72
3578|code|MOVS            R2, #0x18; n|24-34
3580|code|LDR             R3, [R5,R3]; stderr|235-88
3582|code|ADD             R0, PC; "bad argument to '--lba'\n"|120-68
3584|code|LDR             R3, [R3]; s|27-104
3586|code|BLX             fwrite|255-247-232-237
3590|code|MOVS            R0, #1|1-32
3592|code|B               loc_BB2|211-230
3594|code|LDR             R3, =(off_12008 - 0xE10); "brief"|224-75
3596|code|ADD             R3, PC; off_12008|123-68
3598|code|LDR.W           R6, [R3,#(off_120A8 - 0x12008)]; byte_120B0|211-248-160-96
3602|code|MOV             R4, R6|52-70
3604|code|B               loc_E1E|3-224
3606|code|LDRB.W          R0, [R4],#1; c|20-248-1-11
3610|code|BLX             putchar|255-247-250-237
3614|code|SUBS            R3, R4, R6|163-27
3616|code|CMP             R3, R9|75-69
3618|code|BLT             loc_E16|248-219
3620|code|B               loc_D10|116-231
3622|code|CMP             R4, #1|1-44
3624|code|BGT             loc_E34|4-220
3626|code|LDR             R3, [SP,#0xE8+nmemb]|11-155
3628|code|CMP             R3, R11|91-69
3630|code|BLE             loc_E5C|21-221
3632|code|LSLS            R3, R4, #0x1F|227-7
3634|code|BPL             loc_E5C|19-213
3636|code|LDR             R0, =(stderr_ptr - 0x11F68)|194-72
3638|code|MOVS            R1, #1|1-33
3640|code|LDR.W           R10, [SP,#0xE8+nmemb]|221-248-44-160
3644|code|LDR             R2, =(aResponseLength - 0xE44); "response length %d bytes\n"|212-74
3646|code|LDR             R6, [R5,R0]; stderr|46-88
3648|code|ADD             R2, PC; "response length %d bytes\n"|122-68
3650|code|MOV             R3, R10|83-70
3652|code|LDR             R0, [R6]|48-104
3654|code|BLX             __fprintf_chk|255-247-246-237
3658|code|CMP             R10, R11|218-69
3660|code|BLE             loc_E5C|6-221
3662|code|LDR             R2, =(aWhichIsGreater - 0xE5A); "  ... which is greater than maxlen (all"...|209-74
3664|code|MOV             R3, R11|91-70
3666|code|LDR             R0, [R6]|48-104
3668|code|MOVS            R1, #1|1-33
3670|code|ADD             R2, PC; "  ... which is greater than maxlen (all"...|122-68
3672|code|BLX             __fprintf_chk|255-247-236-237
3676|code|LDR             R3, [SP,#0xE8+var_C4]|9-155
3678|code|CMP             R3, #1|1-43
3680|code|BLE             loc_F62|127-221
3682|code|CMP.W           R9, #0x17|185-241-23-15
3686|code|BGT             loc_EC6|46-220
3688|code|LDR             R0, =(stderr_ptr - 0x11F68)|181-72
3690|code|MOV             R3, R9|75-70
3692|code|LDR             R2, =(aNeedMaxlenAndR - 0xE78); "Need maxlen and response length to  be "...|202-74
3694|code|MOVS            R1, #1|1-33
3696|code|MOVS            R7, #0x63 ; 'c'|99-39
3698|code|LDR             R4, [R5,R0]; stderr|44-88
3700|code|ADD             R2, PC; "Need maxlen and response length to  be "...|122-68
3702|code|LDR             R0, [R4]|32-104
3704|code|BLX             __fprintf_chk|255-247-220-237
3708|code|B               loc_D72|121-231
3710|code|LDR             R3, =(stderr_ptr - 0x11F68)|176-75
3712|code|MOV             R1, R6; size|49-70
3714|code|LDR             R0, =(aGetLbaStatusCo_0 - 0xE8C); "Get LBA Status command: bad field in cd"...|198-72
3716|code|MOVS            R2, #0x29 ; ')'; n|41-34
3718|code|LDR             R4, [R5,R3]; stderr|236-88
3720|code|ADD             R0, PC; "Get LBA Status command: bad field in cd"...|120-68
3722|code|LDR             R3, [R4]; s|35-104
3724|code|BLX             fwrite|255-247-162-237
3728|code|B               loc_D72|111-231
3730|code|LDR             R3, =(off_12008 - 0xE9C); "brief"|195-75
3732|code|MOV             R1, R9; len|73-70
3734|code|MOVS            R2, #1; no_ascii|1-34
3736|code|ADD             R3, PC; off_12008|123-68
3738|code|LDR.W           R0, [R3,#(off_120A8 - 0x12008)]; byte_120B0 ; str|211-248-160-0
3742|code|BLX             dStrHex|255-247-122-237
3746|code|B               loc_D10|53-231
3748|code|MOVS            R0, #0|0-32
3750|code|B               loc_BB2|132-230
3752|code|LDR             R0, =(aSgSetBinaryMod_0 - 0xEAE); "sg_set_binary_mode"|190-72
3754|code|ADD             R0, PC; "sg_set_binary_mode"|120-68
3756|code|BLX             perror|255-247-138-237
3760|code|B               loc_DDA|147-231
3762|code|LDR             R3, =(stderr_ptr - 0x11F68)|163-75
3764|code|MOV             R1, R6; size|49-70
3766|code|LDR             R0, =(aGetLbaStatusCo_1 - 0xEC0); "Get LBA Status command not supported\n"|188-72
3768|code|MOVS            R2, #0x25 ; '%'; n|37-34
3770|code|LDR             R4, [R5,R3]; stderr|236-88
3772|code|ADD             R0, PC; "Get LBA Status command not supported\n"|120-68
3774|code|LDR             R3, [R4]; s|35-104
3776|code|BLX             fwrite|255-247-136-237
3780|code|B               loc_D72|85-231
3782|code|LDR             R3, =(off_12008 - 0xED0); "brief"|185-75
3784|code|ADD             R1, SP, #0xE8+var_88|24-169
3786|code|ADD             R2, SP, #0xE8+var_90|22-170
3788|code|ADD             R3, PC; off_12008|123-68
3790|code|LDR.W           R0, [R3,#(off_120A8 - 0x12008)]; byte_120B0|211-248-160-0
3794|code|ADDS            R0, #8|8-48
3796|code|BL              sub_134C|0-240-58-250
3800|code|CMP             R0, #0xF|15-40
3802|code|MOV             R6, R0|6-70
3804|code|BHI.W           loc_10DE|0-242-255-128
3808|code|LDRD.W          R2, R3, [SP,#0xE8+var_88]|221-233-24-35
3812|code|LDRD.W          R10, R11, [SP,#0xE8+var_D8]|221-233-4-171
3816|code|CMP             R11, R3|155-69
3818|code|IT EQ|8-191
3820|code|CMPEQ           R10, R2|146-69
3822|code|BCC             loc_F02|8-211
3824|code|LDR             R1, [SP,#0xE8+var_90]|22-153
3826|code|ADDS            R2, R2, R1|82-24
3828|code|ADC.W           R3, R3, #0|67-241-0-3
3832|code|CMP             R11, R3|155-69
3834|code|IT EQ|8-191
3836|code|CMPEQ           R10, R2|146-69
3838|code|BCC.W           loc_10D0|192-240-231-128
3842|code|LDR             R3, =(stderr_ptr - 0x11F68)|143-75
3844|code|MOVS            R1, #1; size|1-33
3846|code|LDR             R0, =(aGivenLbaNotInR - 0xF16); "given LBA not in range of first descrip"...|170-72
3848|code|MOVS            R2, #0x40 ; '@'; n|64-34
3850|code|LDR.W           R9, =(a02x - 0xF1A); "%02x"|223-248-168-146
3854|code|MOVS            R7, #8|8-39
3856|code|LDR             R4, [R5,R3]; stderr|236-88
3858|code|ADD             R0, PC; "given LBA not in range of first descrip"...|120-68
3860|code|LDR             R5, =(off_12008 - 0xF1E); "brief"|168-77
3862|code|ADD             R9, PC; "%02x"|249-68
3864|code|LDR             R3, [R4]; s|35-104
3866|code|ADD             R5, PC; off_12008|125-68
3868|code|MOV             R10, R4|162-70
3870|code|BLX             fwrite|255-247-90-237
3874|code|LDR.W           R3, [R5,#(off_120A8 - 0x12008)]; byte_120B0|213-248-160-48
3878|code|MOVS            R1, #1|1-33
3880|code|LDR             R0, [R4]|32-104
3882|code|MOV             R2, R9|74-70
3884|code|LDRB            R3, [R3,R7]|219-93
3886|code|ADD             R7, R1|15-68
3888|code|BLX             __fprintf_chk|255-247-128-237
3892|code|CMP             R7, #0x10|16-47
3894|code|BNE             loc_F22|244-209
3896|code|LDR             R2, =(aBlocks0xXPStat - 0xF48); "  blocks: 0x%x  p_status: %d\n"|160-74
3898|code|MOVS            R1, #1|1-33
3900|code|STR             R6, [SP,#0xE8+longind]|0-150
3902|code|MOVS            R7, #0x63 ; 'c'|99-39
3904|code|LDR.W           R0, [R10]|218-248-0-0
3908|code|ADD             R2, PC; "  blocks: 0x%x  p_status: %d\n"|122-68
3910|code|LDR             R3, [SP,#0xE8+var_90]|22-155
3912|code|BLX             __fprintf_chk|255-247-116-237
3916|code|B               loc_D72|17-231
3918|code|LDR             R3, =(stderr_ptr - 0x11F68)|124-75
3920|code|MOVS            R1, #1; size|1-33
3922|code|LDR             R0, =(aExitingBecause - 0xF5C); "Exiting because allocation length (maxl"...|155-72
3924|code|MOVS            R2, #0x38 ; '8'; n|56-34
3926|code|LDR             R3, [R5,R3]; stderr|235-88
3928|code|ADD             R0, PC; "Exiting because allocation length (maxl"...|120-68
3930|code|LDR             R3, [R3]; s|27-104
3932|code|BLX             fwrite|255-247-58-237
3936|code|B               loc_D10|214-230
3938|code|CMP.W           R9, #0x17|185-241-23-15
3942|code|BLE.W           loc_10C6|64-243-174-128
3946|code|SUB.W           R3, R9, #8|169-241-8-3
3950|code|ASRS            R3, R3, #4|27-17
3952|code|STR             R3, [SP,#0xE8+var_D8]|4-147
3954|code|CBZ             R4, loc_F84|60-177
3956|code|LDR             R0, =(stderr_ptr - 0x11F68)|114-72
3958|code|MOVS            R1, #1|1-33
3960|code|LDR             R2, =(aDCompleteLbaSt - 0xF80); "%d complete LBA status descriptors foun"...|146-74
3962|code|LDR             R0, [R5,R0]; stderr|40-88
3964|code|ADD             R2, PC; "%d complete LBA status descriptors foun"...|122-68
3966|code|LDR             R0, [R0]|0-104
3968|code|BLX             __fprintf_chk|255-247-88-237
3972|code|LDR             R3, =(off_12008 - 0xF90); "brief"|144-75
3974|code|ADD             R2, SP, #0xE8+var_88|24-170
3976|code|STR             R2, [SP,#0xE8+read_only]|8-146
3978|code|MOVS            R6, #0|0-38
3980|code|ADD             R3, PC; off_12008|123-68
3982|code|LDR             R2, =(aDescriptorDBad - 0xF9C); "descriptor %d: bad LBA status descripto"...|143-74
3984|code|LDR.W           R11, =(a02x - 0xFAA); "%02x"|223-248-60-178
3988|code|LDR.W           R3, [R3,#(off_120A8 - 0x12008)]; byte_120B0|211-248-160-48
3992|code|ADD             R2, PC; "descriptor %d: bad LBA status descripto"...|122-68
3994|code|STR             R2, [SP,#0xE8+var_C0]|10-146
3996|code|ADD             R2, SP, #0xE8+var_90|22-170
3998|code|ADD.W           R10, R3, #7|3-241-7-10
4002|code|LDR             R3, =(aDeallocated - 0xFAC); "  deallocated"|140-75
4004|code|STR             R2, [SP,#0xE8+var_CC]|7-146
4006|code|ADD             R11, PC; "%02x"|251-68
4008|code|ADD             R3, PC; "  deallocated"|123-68
4010|code|STR             R3, [SP,#0xE8+var_B4]|13-147
4012|code|LDR             R3, =(aAnchored - 0xFB4); "  anchored"|138-75
4014|code|LDR             R2, =(aDescriptorLba0 - 0xFBA); "descriptor LBA: 0x"|139-74
4016|code|ADD             R3, PC; "  anchored"|123-68
4018|code|STR             R3, [SP,#0xE8+var_B0]|14-147
4020|code|LDR             R3, =(aProvisioningSt - 0xFBE); "  Provisioning status: %d\n"|138-75
4022|code|ADD             R2, PC; "descriptor LBA: 0x"|122-68
4024|code|STR             R2, [SP,#0xE8+nmemb]|11-146
4026|code|ADD             R3, PC; "  Provisioning status: %d\n"|123-68
4028|code|STR             R3, [SP,#0xE8+var_AC]|15-147
4030|code|LDR             R3, =(aMapped - 0xFC6); "  mapped"|137-75
4032|code|LDR             R2, =(aBlocksU - 0xFCC); "  blocks: %u"|137-74
4034|code|ADD             R3, PC; "  mapped"|123-68
4036|code|STR             R3, [SP,#0xE8+s]|16-147
4038|code|LDR             R3, =(aDescriptorLba0+0x10 - 0xFD0); "0x"|137-75
4040|code|ADD             R2, PC; "  blocks: %u"|122-68
4042|code|STR             R2, [SP,#0xE8+var_B8]|12-146
4044|code|ADD             R3, PC; "0x"|123-68
4046|code|STR             R3, [SP,#0xE8+var_A4]|17-147
4048|code|LDR             R3, =(a02x - 0xFD8); "%02x"|135-75
4050|code|LDR             R2, =(a0xXD - 0xFDE); "  0x%x  %d\n"|136-74
4052|code|ADD             R3, PC; "%02x"|123-68
4054|code|STR.W           R8, [SP,#0xE8+var_9C]|205-248-76-128
4058|code|ADD             R2, PC; "  0x%x  %d\n"|122-68
4060|code|STR.W           R9, [SP,#0xE8+var_98]|205-248-80-144
4064|code|MOV             R8, R3|152-70
4066|code|STR             R2, [SP,#0xE8+var_A0]|18-146
4068|code|STR             R7, [SP,#0xE8+var_94]|21-151
4070|code|ADD.W           R0, R10, #1|10-241-1-0
4074|code|LDR             R1, [SP,#0xE8+read_only]|8-153
4076|code|LDR             R2, [SP,#0xE8+var_CC]|7-154
4078|code|BL              sub_134C|0-240-173-249
4082|code|CMP             R0, #0xF|15-40
4084|code|MOV             R4, R0|4-70
4086|code|BHI             loc_1098|79-216
4088|code|ADDS            R7, R6, #1|119-28
4090|code|LDR             R3, [SP,#0xE8+var_C4]|9-155
4092|code|MOVS            R0, #1|1-32
4094|code|CBZ             R3, loc_105C|107-179
4096|code|LDR             R1, [SP,#0xE8+var_A4]|17-153
4098|code|ADD.W           R6, R10, #8|10-241-8-6
4102|code|BLX             __printf_chk|255-247-10-237
4106|code|MOV             R9, R10|209-70
4108|code|LDRB.W          R2, [R9,#1]!|25-248-1-47
4112|code|MOVS            R0, #1|1-32
4114|code|MOV             R1, R8|65-70
4116|code|BLX             __printf_chk|255-247-2-237
4120|code|CMP             R6, R9|78-69
4122|code|BNE             loc_100C|247-209
4124|code|MOV             R3, R4|35-70
4126|code|MOVS            R0, #1|1-32
4128|code|LDR             R1, [SP,#0xE8+var_A0]|18-153
4130|code|LDR             R2, [SP,#0xE8+var_90]|22-154
4132|code|BLX             __printf_chk|255-247-250-236
4136|code|LDR             R3, [SP,#0xE8+var_D8]|4-155
4138|code|ADD.W           R10, R10, #0x10|10-241-16-10
4142|code|MOV             R6, R7|62-70
4144|code|CMP             R7, R3|159-66
4146|code|BNE             loc_FE6|216-209
4148|code|LDR.W           R9, [SP,#0xE8+var_98]|221-248-80-144
4152|code|LSLS            R3, R6, #4|51-1
4154|code|ADDS            R3, #8|8-51
4156|code|LDR.W           R8, [SP,#0xE8+var_9C]|221-248-76-128
4160|code|CMP             R9, R3|153-69
4162|code|LDR             R7, [SP,#0xE8+var_94]|21-159
4164|code|BLE.W           loc_D10|127-247-100-174
4168|code|LDR             R3, =(stderr_ptr - 0x11F68)|61-75
4170|code|MOVS            R1, #1; size|1-33
4172|code|LDR             R0, =(aIncompleteTrai - 0x1056); "incomplete trailing LBA status descript"...|106-72
4174|code|MOVS            R2, #0x31 ; '1'; n|49-34
4176|code|LDR             R3, [R5,R3]; stderr|235-88
4178|code|ADD             R0, PC; "incomplete trailing LBA status descript"...|120-68
4180|code|LDR             R3, [R3]; s|27-104
4182|code|BLX             fwrite|255-247-190-236
4186|code|B               loc_D10|89-230
4188|code|LDR             R1, [SP,#0xE8+nmemb]|11-153
4190|code|ADD.W           R6, R10, #8|10-241-8-6
4194|code|BLX             __printf_chk|255-247-220-236
4198|code|MOV             R9, R10|209-70
4200|code|LDRB.W          R2, [R9,#1]!|25-248-1-47
4204|code|MOVS            R0, #1|1-32
4206|code|MOV             R1, R11|89-70
4208|code|BLX             __printf_chk|255-247-212-236
4212|code|CMP             R6, R9|78-69
4214|code|BNE             loc_1068|247-209
4216|code|MOVS            R0, #1|1-32
4218|code|LDR             R1, [SP,#0xE8+var_B8]|12-153
4220|code|LDR             R2, [SP,#0xE8+var_90]|22-154
4222|code|BLX             __printf_chk|255-247-206-236
4226|code|CMP             R4, #1|1-44
4228|code|BEQ             loc_10BE|27-208
4230|code|CMP             R4, #2|2-44
4232|code|BEQ             loc_10B6|21-208
4234|code|CBZ             R4, loc_10AE|132-177
4236|code|MOV             R2, R4|34-70
4238|code|LDR             R1, [SP,#0xE8+var_AC]|15-153
4240|code|MOVS            R0, #1|1-32
4242|code|BLX             __printf_chk|255-247-196-236
4246|code|B               loc_1028|199-231
4248|code|LDR             R0, =(stderr_ptr - 0x11F68)|41-72
4250|code|ADDS            R7, R6, #1|119-28
4252|code|MOVS            R1, #1|1-33
4254|code|LDR             R2, [SP,#0xE8+var_C0]|10-154
4256|code|MOV             R3, R7|59-70
4258|code|LDR             R0, [R5,R0]; stderr|40-88
4260|code|STR             R4, [SP,#0xE8+longind]|0-148
4262|code|LDR             R0, [R0]|0-104
4264|code|BLX             __fprintf_chk|255-247-196-236
4268|code|B               loc_FFA|165-231
4270|code|LDR             R0, [SP,#0xE8+s]; s|16-152
4272|code|BLX             puts|255-247-150-236
4276|code|B               loc_1028|184-231
4278|code|LDR             R0, [SP,#0xE8+var_B0]; s|14-152
4280|code|BLX             puts|255-247-146-236
4284|code|B               loc_1028|180-231
4286|code|LDR             R0, [SP,#0xE8+var_B4]; s|13-152
4288|code|BLX             puts|255-247-142-236
4292|code|B               loc_1028|176-231
4294|code|LDR             R0, =(aNoCompleteLbaS - 0x10CC); "No complete LBA status descriptors avai"...|77-72
4296|code|ADD             R0, PC; "No complete LBA status descriptors avai"...|120-68
4298|code|BLX             puts|255-247-138-236
4302|code|B               loc_D10|31-230
4304|code|LDR             R1, =(a0xXD+8 - 0x10DA); "%d\n"|75-73
4306|code|MOV             R2, R6|50-70
4308|code|MOVS            R0, #1|1-32
4310|code|ADD             R1, PC; "%d\n"|121-68
4312|code|BLX             __printf_chk|255-247-160-236
4316|code|B               loc_D10|24-230
4318|code|LDR             R0, =(stderr_ptr - 0x11F68)|24-72
4320|code|MOV             R3, R6|51-70
4322|code|LDR             R2, =(aFirstLbaStatus - 0x10EE); "first LBA status descriptor returned %d"...|72-74
4324|code|MOVS            R1, #1|1-33
4326|code|MOVS            R7, #0x63 ; 'c'|99-39
4328|code|LDR             R4, [R5,R0]; stderr|44-88
4330|code|ADD             R2, PC; "first LBA status descriptor returned %d"...|122-68
4332|code|LDR             R0, [R4]|32-104
4334|code|BLX             __fprintf_chk|255-247-162-236
4338|code|B               loc_D72|62-230
4340|code|BLX             __stack_chk_fail|255-247-96-236
4344|code|NEGS            R0, R0; errnum|64-66
4346|code|LDR             R4, [R4]|36-104
4348|code|BLX             safe_strerror|255-247-160-236
4352|code|LDR             R2, =(aCloseErrorS - 0x1108); "close error: %s\n"|65-74
4354|code|MOVS            R1, #1|1-33
4356|code|ADD             R2, PC; "close error: %s\n"|122-68
4358|code|MOV             R3, R0|3-70
4360|code|MOV             R0, R4|32-70
4362|code|BLX             __fprintf_chk|255-247-148-236
4366|code|B               loc_D7E|54-230
4368|code|LDR             R3, =(stderr_ptr - 0x11F68)|11-75
4370|code|NEGS            R0, R0; errnum|64-66
4372|code|LDR             R3, [R5,R3]; stderr|235-88
4374|code|LDR             R4, [R3]|28-104
4376|code|BLX             safe_strerror|255-247-146-236
4380|code|LDR             R2, =(aCloseErrorS - 0x1124); "close error: %s\n"|59-74
4382|code|MOVS            R1, #1|1-33
4384|code|ADD             R2, PC; "close error: %s\n"|122-68
4386|code|MOV             R3, R0|3-70
4388|code|MOV             R0, R4|32-70
4390|code|BLX             __fprintf_chk|255-247-134-236
4394|code|B               loc_DDA|86-230
4396|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA9E|202-20-1-0
4400|data|DCD __stack_chk_guard_ptr - 0x11F68|116-0-0-0
4404|data|DCD aBhhlMRrvv - 0xAB2; "bhHl:m:rRvV"|34-13-0-0
4408|data|DCD off_12008 - 0xABA; "brief"|78-21-1-0
4412|data|DCD optarg_ptr - 0x11F68|148-0-0-0
4416|data|DCD stderr_ptr - 0x11F68|124-0-0-0
4420|data|DCD aArgumentToMaxl - 0xB68; "argument to '--maxlen' should be %d or "...|148-12-0-0
4424|data|DCD aVersionS - 0xBAA; "version: %s\n"|130-12-0-0
4428|data|DCD a10620140515 - 0xBAC; "1.06 20140515"|144-12-0-0
4432|data|DCD aUnrecognisedOp - 0xBEE; "unrecognised option code 0x%x ??\n"|94-12-0-0
4436|data|DCD optind_ptr - 0x11F68|120-0-0-0
4440|data|DCD aUnexpectedExtr - 0xC26; "Unexpected extra argument: %s\n"|98-12-0-0
4444|data|DCD aMissingDeviceN - 0xC66; "missing device name!\n"|10-12-0-0
4448|data|DCD off_12008 - 0xCAE; "brief"|90-19-1-0
4452|data|DCD off_12008 - 0xD24; "brief"|228-18-1-0
4456|data|DCD byte_120B0 - 0xD34|124-19-1-0
4460|data|DCD aGetLbaStatusCo - 0xD6E; "Get LBA Status command: %s\n"|150-14-0-0
4464|data|DCD off_12008 - 0xD84; "brief"|132-18-1-0
4468|data|DCD byte_120B0 - 0xD90|32-19-1-0
4472|data|DCD aUnableToAlloca - 0xDB4; "unable to allocate %d bytes on heap\n"|244-10-0-0
4476|data|DCD aOpenErrorSS - 0xDD4; "open error: %s: %s\n"|16-11-0-0
4480|data|DCD off_12008 - 0xDE0; "brief"|40-18-1-0
4484|data|DCD byte_120B0 - 0xDEA|198-18-1-0
4488|data|DCD aBadArgumentToL - 0xE02; "bad argument to '--lba'\n"|222-9-0-0
4492|data|DCD off_12008 - 0xE10; "brief"|248-17-1-0
4496|data|DCD aResponseLength - 0xE44; "response length %d bytes\n"|240-10-0-0
4500|data|DCD aWhichIsGreater - 0xE5A; "  ... which is greater than maxlen (all"...|246-10-0-0
4504|data|DCD aNeedMaxlenAndR - 0xE78; "Need maxlen and response length to  be "...|32-11-0-0
4508|data|DCD aGetLbaStatusCo_0 - 0xE8C; "Get LBA Status command: bad field in cd"...|76-13-0-0
4512|data|DCD off_12008 - 0xE9C; "brief"|108-17-1-0
4516|data|DCD aSgSetBinaryMod_0 - 0xEAE; "sg_set_binary_mode"|34-10-0-0
4520|data|DCD aGetLbaStatusCo_1 - 0xEC0; "Get LBA Status command not supported\n"|240-12-0-0
4524|data|DCD off_12008 - 0xED0; "brief"|56-17-1-0
4528|data|DCD aGivenLbaNotInR - 0xF16; "given LBA not in range of first descrip"...|242-10-0-0
4532|data|DCD a02x - 0xF1A; "%02x"|50-11-0-0
4536|data|DCD off_12008 - 0xF1E; "brief"|234-16-1-0
4540|data|DCD aBlocks0xXPStat - 0xF48; "  blocks: 0x%x  p_status: %d\n"|12-11-0-0
4544|data|DCD aExitingBecause - 0xF5C; "Exiting because allocation length (maxl"...|156-9-0-0
4548|data|DCD aDCompleteLbaSt - 0xF80; "%d complete LBA status descriptors foun"...|36-11-0-0
4552|data|DCD off_12008 - 0xF90; "brief"|120-16-1-0
4556|data|DCD aDescriptorDBad - 0xF9C; "descriptor %d: bad LBA status descripto"...|52-11-0-0
4560|data|DCD a02x - 0xFAA; "%02x"|162-10-0-0
4564|data|DCD aDeallocated - 0xFAC; "  deallocated"|152-11-0-0
4568|data|DCD aAnchored - 0xFB4; "  anchored"|160-11-0-0
4572|data|DCD aDescriptorLba0 - 0xFBA; "descriptor LBA: 0x"|90-11-0-0
4576|data|DCD aProvisioningSt - 0xFBE; "  Provisioning status: %d\n"|162-11-0-0
4580|data|DCD aMapped - 0xFC6; "  mapped"|114-11-0-0
4584|data|DCD aBlocksU - 0xFCC; "  blocks: %u"|92-11-0-0
4588|data|DCD aDescriptorLba0+0x10 - 0xFD0; "0x"|84-11-0-0
4592|data|DCD a02x - 0xFD8; "%02x"|116-10-0-0
4596|data|DCD a0xXD - 0xFDE; "  0x%x  %d\n"|42-11-0-0
4600|data|DCD aIncompleteTrai - 0x1056; "incomplete trailing LBA status descript"...|38-11-0-0
4604|data|DCD aNoCompleteLbaS - 0x10CC; "No complete LBA status descriptors avai"...|168-9-0-0
4608|data|DCD a0xXD+8 - 0x10DA; "%d\n"|54-10-0-0
4612|data|DCD aFirstLbaStatus - 0x10EE; "first LBA status descriptor returned %d"...|238-8-0-0
4616|data|DCD aCloseErrorS - 0x1108; "close error: %s\n"|24-11-0-0
4620|data|DCD aCloseErrorS - 0x1124; "close error: %s\n"|252-10-0-0
4624|code|MOV.W           R11, #0|79-240-0-11
4628|code|MOV.W           LR, #0|79-240-0-14
4632|code|POP             {R1}; argc|2-188
4634|code|MOV             R2, SP; ubp_av|106-70
4636|code|PUSH            {R2}; stack_end|4-180
4638|code|PUSH            {R0}; rtld_fini|1-180
4640|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1248)|223-248-36-160
4644|code|ADR             R3, off_1248|8-163
4646|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4648|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F68)|223-248-32-192
4652|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4656|code|PUSH.W          {R12}; fini|77-248-4-205
4660|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F68)|6-75
4662|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4666|code|LDR             R0, =(main_ptr - 0x11F68)|6-72
4668|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4672|code|BLX             __libc_start_main|255-247-212-235
4676|code|BLX             abort|255-247-20-236
4680|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1248|32-13-1-0
4684|data|DCD __libc_csu_fini_ptr - 0x11F68|104-0-0-0
4688|data|DCD __libc_csu_init_ptr - 0x11F68|132-0-0-0
4692|data|DCD main_ptr - 0x11F68|136-0-0-0
4696|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1268)|20-48-159-229
4700|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F68)|20-32-159-229
4704|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4708|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4712|code|CMP             R2, #0|0-0-82-227
4716|code|BXEQ            LR|30-255-47-1
4720|code|B               __gmon_start__|224-253-255-234
4724|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1268|0-13-1-0
4728|data|DCD __gmon_start___ptr_0 - 0x11F68|128-0-0-0
4732|code|LDR             R3, =(__bss_start__ - 0x1284)|7-75
4734|code|LDR             R0, =(__bss_start__ - 0x1288)|8-72
4736|code|ADD             R3, PC; __bss_start__|123-68
4738|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x128E)|8-74
4740|code|ADD             R0, PC; __bss_start__|120-68
4742|code|ADDS            R3, #3|3-51
4744|code|SUBS            R3, R3, R0|27-26
4746|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4748|code|CMP             R3, #6|6-43
4750|code|BLS             locret_1298|3-217
4752|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F68)|5-75
4754|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4756|code|CBZ             R3, locret_1298|3-177
4758|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4760|code|BX              LR|112-71
4762|data|ALIGN 4|0-191
4764|data|DCD __bss_start__ - 0x1284|40-14-1-0
4768|data|DCD __bss_start__ - 0x1288|36-14-1-0
4772|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x128E|218-12-1-0
4776|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F68|112-0-0-0
4780|code|LDR             R1, =(__bss_start__ - 0x12B4)|8-73
4782|code|LDR             R0, =(__bss_start__ - 0x12B8)|9-72
4784|code|ADD             R1, PC; __bss_start__|121-68
4786|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x12BC)|9-75
4788|code|ADD             R0, PC; __bss_start__|120-68
4790|code|SUBS            R1, R1, R0|9-26
4792|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4794|code|ASRS            R1, R1, #2|137-16
4796|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4800|code|ASRS            R1, R1, #1|73-16
4802|code|BEQ             locret_12CC|3-208
4804|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F68)|5-74
4806|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4808|code|CBZ             R3, locret_12CC|3-177
4810|code|BX              R3; _ITM_registerTMCloneTable|24-71
4812|code|BX              LR|112-71
4814|data|ALIGN 0x10|0-191
4816|data|DCD __bss_start__ - 0x12B4|248-13-1-0
4820|data|DCD __bss_start__ - 0x12B8|244-13-1-0
4824|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12BC|172-12-1-0
4828|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F68|144-0-0-0
4832|code|PUSH            {R3,LR}|8-181
4834|code|LDR             R3, =(__bss_start__ - 0x12EA)|10-75
4836|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x12EC)|10-74
4838|code|ADD             R3, PC; __bss_start__|123-68
4840|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4842|code|LDRB            R3, [R3]|27-120
4844|code|CBNZ            R3, locret_130A|107-185
4846|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F68)|9-75
4848|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
4850|code|CBZ             R3, loc_12FE|35-177
4852|code|LDR             R3, =(off_12004 - 0x12FA)|8-75
4854|code|ADD             R3, PC; off_12004|123-68
4856|code|LDR             R0, [R3]; off_12004 ; void *|24-104
4858|code|BLX             __cxa_finalize|255-247-70-235
4862|code|BL              sub_127C|255-247-189-255
4866|code|LDR             R3, =(__bss_start__ - 0x130A)|6-75
4868|code|MOVS            R2, #1|1-34
4870|code|ADD             R3, PC; __bss_start__|123-68
4872|code|STRB            R2, [R3]|26-112
4874|code|POP             {R3,PC}|8-189
4876|data|DCD __bss_start__ - 0x12EA|194-13-1-0
4880|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12EC|124-12-1-0
4884|data|DCD __cxa_finalize_ptr_0 - 0x11F68|108-0-0-0
4888|data|DCD off_12004 - 0x12FA|10-13-1-0
4892|data|DCD __bss_start__ - 0x130A|162-13-1-0
4896|code|LDR             R0, =(dword_11E5C - 0x1328)|7-72
4898|code|PUSH            {R3,LR}|8-181
4900|code|ADD             R0, PC; dword_11E5C|120-68
4902|code|LDR             R2, [R0]|2-104
4904|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x132E)|6-75
4906|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4908|code|CBNZ            R2, loc_1334|18-185
4910|code|POP.W           {R3,LR}|189-232-8-64
4914|code|B               sub_12AC|187-231
4916|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F68)|4-74
4918|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
4920|code|CMP             R3, #0|0-43
4922|code|BEQ             loc_132E|248-208
4924|code|BLX             R3; _Jv_RegisterClasses|152-71
4926|code|B               loc_132E|246-231
4928|data|DCD dword_11E5C - 0x1328|52-11-1-0
4932|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x132E|58-12-1-0
4936|data|DCD _Jv_RegisterClasses_ptr - 0x11F68|140-0-0-0
4940|code|CMP             R0, #0|0-40
4942|code|BEQ             loc_13D8|67-208
4944|code|PUSH.W          {R4-R9,LR}|45-233-240-67
4948|code|MOVS            R3, #1|1-35
4950|code|MOV             LR, R0|134-70
4952|code|MOVS            R6, #0|0-38
4954|code|MOVS            R7, #0|0-39
4956|code|B               loc_1364|2-224
4958|code|ADDS            R3, #1|1-51
4960|code|ADD.W           LR, LR, #1|14-241-1-14
4964|code|CMP             R3, #1|1-43
4966|code|BEQ             loc_13C6|46-208
4968|code|LSLS            R5, R7, #8|61-2
4970|code|LDRB.W          R8, [LR]|158-248-0-128
4974|code|CMP             R3, #8|8-43
4976|code|ORR.W           R5, R5, R6,LSR#24|69-234-22-101
4980|code|MOV.W           R4, R6,LSL#8|79-234-6-36
4984|code|MOV.W           R9, #0|79-240-0-9
4988|code|ORR.W           R6, R8, R4|72-234-4-6
4992|code|ORR.W           R7, R9, R5|73-234-5-7
4996|code|BNE             loc_135E|235-209
4998|code|ADD.W           R4, R0, #8|0-241-8-4
5002|code|MOVS            R3, #1|1-35
5004|code|CMP             R3, #1|1-43
5006|code|MOV.W           R5, #0|79-240-0-5
5010|code|LDRB.W          LR, [R4]|148-248-0-224
5014|code|BEQ             loc_13AC|9-208
5016|code|CMP             R3, #4|4-43
5018|code|ORR.W           R5, LR, R5,LSL#8|78-234-5-37
5022|code|BEQ             loc_13B2|8-208
5024|code|ADDS            R3, #1|1-51
5026|code|ADDS            R4, #1|1-52
5028|code|CMP             R3, #1|1-43
5030|code|LDRB.W          LR, [R4]|148-248-0-224
5034|code|BNE             loc_1398|245-209
5036|code|ORR.W           R5, R5, LR|69-234-14-5
5040|code|B               loc_13A0|246-231
5042|code|CBZ             R1, loc_13B8|9-177
5044|code|STRD.W          R6, R7, [R1]|193-233-0-103
5048|code|CBZ             R2, loc_13BC|2-177
5050|code|STR             R5, [R2]|21-96
5052|code|LDRB            R0, [R0,#0xC]|0-123
5054|code|AND.W           R0, R0, #0xF|0-240-15-0
5058|code|POP.W           {R4-R9,PC}|189-232-240-131
5062|code|LDRB.W          R8, [LR]|158-248-0-128
5066|code|MOV.W           R9, #0|79-240-0-9
5070|code|ORR.W           R7, R7, R9|71-234-9-7
5074|code|ORR.W           R6, R6, R8|70-234-8-6
5078|code|B               loc_135E|194-231
5080|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
5084|code|BX              LR|112-71
5086|data|ALIGN 0x10|0-191
5088|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x13EA)|10-72
5090|code|MOVS            R1, #1|1-33
5092|code|PUSH            {R4,LR}|16-181
5094|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
5096|code|LDR             R4, =(stderr_ptr - 0x11F68)|9-76
5098|code|MOVS            R3, #0x18|24-35
5100|code|LDR             R2, =(aUsageSgGetLbaS - 0x13F4); "Usage: sg_get_lba_status  [--brief] [--"...|9-74
5102|code|LDR             R4, [R0,R4]; stderr|4-89
5104|code|ADD             R2, PC; "Usage: sg_get_lba_status  [--brief] [--"...|122-68
5106|code|LDR             R0, [R4]|32-104
5108|code|BLX             __fprintf_chk|255-247-30-235
5112|code|LDR             R0, =(aRawROutputInBi - 0x1402); "    --raw|-r          output in binary"...|7-72
5114|code|LDR             R3, [R4]; s|35-104
5116|code|MOVS            R1, #1; size|1-33
5118|code|ADD             R0, PC; "    --raw|-r          output in binary"...|120-68
5120|code|MOVS            R2, #0xF2; n|242-34
5122|code|POP.W           {R4,LR}|189-232-16-64
5126|code|B.W             j_fwrite|255-247-227-186
5130|data|ALIGN 4|0-191
5132|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13EA|126-11-1-0
5136|data|DCD stderr_ptr - 0x11F68|124-0-0-0
5140|data|DCD aUsageSgGetLbaS - 0x13F4; "Usage: sg_get_lba_status  [--brief] [--"...|120-0-0-0
5144|data|DCD aRawROutputInBi - 0x1402; "    --raw|-r          output in binary"...|222-2-0-0
5148|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5152|code|MOV             R7, R0|7-70
5154|code|LDR             R6, =(off_11E58 - 0x142E)|12-78
5156|code|MOV             R8, R1|136-70
5158|code|LDR             R5, =(off_11E54 - 0x1434)|12-77
5160|code|MOV             R9, R2|145-70
5162|code|ADD             R6, PC; off_11E58|126-68
5164|code|BLX             .init_proc|255-247-144-234
5168|code|ADD             R5, PC; off_11E54|125-68
5170|code|SUBS            R6, R6, R5|118-27
5172|code|ASRS            R6, R6, #2|182-16
5174|code|BEQ             locret_144E|10-208
5176|code|SUBS            R5, #4|4-61
5178|code|MOVS            R4, #0|0-36
5180|code|ADDS            R4, #1|1-52
5182|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5186|code|MOV             R0, R7|56-70
5188|code|MOV             R1, R8|65-70
5190|code|MOV             R2, R9|74-70
5192|code|BLX             R3|152-71
5194|code|CMP             R4, R6|180-66
5196|code|BNE             loc_143C|246-209
5198|code|POP.W           {R3-R9,PC}|189-232-248-131
5202|data|ALIGN 4|0-191
5204|data|DCD off_11E58 - 0x142E|42-10-1-0
5208|data|DCD off_11E54 - 0x1434|32-10-1-0
5212|code|BX              LR|112-71
5214|data|ALIGN 0x10|0-191
5216|code|PUSH            {R3,LR}; _fini|8-64-45-233
5220|code|POP             {R3,PC}|8-128-189-232
7292|data|ALIGN 0x10|0-0-0-0
73300|data|DCD sub_1320+1|33-19-0-0
73304|data|DCD sub_12E0+1|225-18-0-0
73308|data|DCD 0|0-0-0-0
73312|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
73320|data|Elf32_Dyn <1, <0x104>>; DT_NEEDED libc.so.6|1-0-0-0-4-1-0-0
73328|data|Elf32_Dyn <1, <0x1A9>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-169-1-0-0
73336|data|Elf32_Dyn <0xC, <0x950>>; DT_INIT|12-0-0-0-80-9-0-0
73344|data|Elf32_Dyn <0xD, <0x1460>>; DT_FINI|13-0-0-0-96-20-0-0
73352|data|Elf32_Dyn <0x19, <0x11E54>>; DT_INIT_ARRAY|25-0-0-0-84-30-1-0
73360|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73368|data|Elf32_Dyn <0x1A, <0x11E58>>; DT_FINI_ARRAY|26-0-0-0-88-30-1-0
73376|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73384|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73392|data|Elf32_Dyn <5, <0x4F4>>; DT_STRTAB|5-0-0-0-244-4-0-0
73400|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
73408|data|Elf32_Dyn <0xA, <0x240>>; DT_STRSZ|10-0-0-0-64-2-0-0
73416|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73424|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73432|data|Elf32_Dyn <3, <0x11F68>>; DT_PLTGOT|3-0-0-0-104-31-1-0
73440|data|Elf32_Dyn <2, <0xB8>>; DT_PLTRELSZ|2-0-0-0-184-0-0-0
73448|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73456|data|Elf32_Dyn <0x17, <0x898>>; DT_JMPREL|23-0-0-0-152-8-0-0
73464|data|Elf32_Dyn <0x11, <0x7D0>>; DT_REL|17-0-0-0-208-7-0-0
73472|data|Elf32_Dyn <0x12, <0xC8>>; DT_RELSZ|18-0-0-0-200-0-0-0
73480|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73488|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73496|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73504|data|Elf32_Dyn <0x6FFFFFFE, <0x790>>; DT_VERNEED|254-255-255-111-144-7-0-0
73512|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73520|data|Elf32_Dyn <0x6FFFFFF0, <0x734>>; DT_VERSYM|240-255-255-111-52-7-0-0
73528|data|Elf32_Dyn <0x6FFFFFFA, <0x10>>; DT_RELCOUNT|250-255-255-111-16-0-0-0
73536|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73576|data|DCD stru_11E60|96-30-1-0
73580|data|DCD 0|0-0-0-0
73584|data|DCD dword_0|0-0-0-0
73588|data|DCD __imp_calloc|204-32-1-0
73592|data|DCD __imp_sg_set_binary_mode|208-32-1-0
73596|data|DCD __imp___cxa_finalize|212-32-1-0
73600|data|DCD __imp_dStrHex|216-32-1-0
73604|data|DCD __imp_free|220-32-1-0
73608|data|DCD __imp_sg_cmds_close_device|228-32-1-0
73612|data|DCD __imp___stack_chk_fail|236-32-1-0
73616|data|DCD __imp_perror|240-32-1-0
73620|data|DCD __imp_fwrite|248-32-1-0
73624|data|DCD __imp_puts|252-32-1-0
73628|data|DCD __imp___libc_start_main|0-33-1-0
73632|data|DCD __imp___gmon_start__|56-33-1-0
73636|data|DCD __imp_getopt_long|4-33-1-0
73640|data|DCD __imp_putchar|8-33-1-0
73644|data|DCD __imp___printf_chk|12-33-1-0
73648|data|DCD __imp_sg_get_llnum|16-33-1-0
73652|data|DCD __imp___fprintf_chk|20-33-1-0
73656|data|DCD __imp_safe_strerror|24-33-1-0
73660|data|DCD __imp_sg_get_category_sense_str|28-33-1-0
73664|data|DCD __imp_sg_get_num|32-33-1-0
73668|data|DCD __imp_sg_cmds_open_device|36-33-1-0
73672|data|DCD __imp_abort|44-33-1-0
73676|data|DCD __imp_sg_ll_get_lba_status|48-33-1-0
73680|data|DCD __libc_csu_fini+1|93-20-0-0
73684|data|DCD __imp___cxa_finalize|212-32-1-0
73688|data|DCD _ITM_deregisterTMCloneTable|52-33-1-0
73692|data|DCD __stack_chk_guard|224-32-1-0
73696|data|DCD optind|232-32-1-0
73700|data|DCD stderr|244-32-1-0
73704|data|DCD __imp___gmon_start__|56-33-1-0
73708|data|DCD __libc_csu_init+1|29-20-0-0
73712|data|DCD main+1|137-10-0-0
73716|data|DCD _Jv_RegisterClasses|60-33-1-0
73720|data|DCD _ITM_registerTMCloneTable|64-33-1-0
73724|data|DCD optarg|40-33-1-0
73900|data|% 1; Alternative name is '__bss_start'|255
73901|data|ALIGN 0x10|255-255-255
73904|data|% 1|255
73905|data|% 1|255
73906|data|% 1|255
73907|data|% 1|255
73908|data|ALIGN 8|255-255-255-255
