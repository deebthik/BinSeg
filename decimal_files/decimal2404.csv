address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD _start+1; Entry point|225-107-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x1518C; SHT file offset|140-81-1-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1D; Number of entries in SHT|29-0
50|data|DCW 0x1C; SHT entry index for string table|28-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x144D0; File offset|208-68-1-0
60|data|DCD unk_144D0; Virtual address|208-68-1-0
64|data|DCD 0x144D0; Physical address|208-68-1-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x144DC; Size in file image|220-68-1-0
168|data|DCD 0x144DC; Size in memory image|220-68-1-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x14808; File offset|8-72-1-0
188|data|DCD off_24808; Virtual address|8-72-2-0
192|data|DCD 0x24808; Physical address|8-72-2-0
196|data|DCD 0x82C; Size in file image|44-8-0-0
200|data|DCD 0x8EC; Size in memory image|236-8-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x14BA4; File offset|164-75-1-0
220|data|DCD stru_24BA4; Virtual address|164-75-2-0
224|data|DCD 0x24BA4; Physical address|164-75-2-0
228|data|DCD 0x130; Size in file image|48-1-0-0
232|data|DCD 0x130; Size in memory image|48-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x14808; File offset|8-72-1-0
316|data|DCD off_24808; Virtual address|8-72-2-0
320|data|DCD 0x24808; Physical address|8-72-2-0
324|data|DCD 0x7F8; Size in file image|248-7-0-0
328|data|DCD 0x7F8; Size in memory image|248-7-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xF4, 0x6F, 0xC0, 0x6E, 0xFE, 0xF8, 0x96, 0xA3, 0xB3; Desc|244-111-192-110-254-248-150-163-179-212-21-102-186-15-62-240-228-210-155-141
436|data|DCD 0x107|7-1-0-0
440|data|DCD 0xA9|169-0-0-0
444|data|DCD 0x80|128-0-0-0
448|data|DCD 0xC|12-0-0-0
452|data|DCD 0, 0x20248044, 0, 0x15020401, 0x38000604, 0x2132698B|0-0-0-0-68-128-36-32-0-0-0-0-1-4-2-21-4-6-0-56-139-105-50-33-144-200-192-1-66-1-32-160-0-2-64-0-16-8-138-14-1-48-75-116-1-32-1-64-16-64-128-9-16-128-0-0-193-96-9-7-96-0-34-0-128-8-64-8-0-1-100-0-48-2-1-0-2-144-1-0-16-17-5-137-84-32-35-25-81-0-0-128-0-192-129-21-128-0-29-8-0-161-123-160-168-0-0-56-0-128-5-8-0-0-0-0-0-64-0-25-0-0-0-0-20-36-25-32-2-16-40-0-4-5-128-8-48-0-32-32-32-0-224-48-0-105-29-97-4-2-1-25-0-0-0-64-32-224-1-32-0-32-8-0-128-18-1-24-45-0-144-34-0-0-0-0-77-2-0-84-66-0-3-0-8-4-3-78-14-66-32-2-39-64-8-72-0-0-0-0-0-0-0-0-0-84-16-134-75-12-10-0-104-0-8-0-0-32-0-8-0-0-0-0-16-64-80-73-136-20-68-144-0-206-16-72-0-0-0-0-4-9-0-6-1-2-18-0-16-144-128-0-32-65-0-104-0-0-8-42-32-0-96-40-132-141-173-32-0-136-25-40-193-22-0-28-129-16-4-0-136-1-2-0-2-0-32-0-33-2-128-0-50-11-0-66-44-65-2-2-17-36-5-1-1-137-196-8-18-64-0-64-144-33-78-197-48-0-2-2-8-82-8-16-9-80-129-2-8-2-64-0-0-68-200-0-32-22-168-32-28-64-0-160-110-2-12-2-0-0-0-0-8-8-2-8-0-0-0-10-128-83-20-64-2-17-73-162-32-32-32-2-26-33-16-64-0-0-0-0-0-67-25-129-0-64-32-0-40-1-0-96-0-0-4-32-129-112-81-4-0-132-4-96-0-4-0-64-32-32-0-0-136-0-4-24-20-132-49-208-12-0-140-2-18-2-12-164-128-0-12-68-36-5-68-16-16-137-16-33-92-1-34-148-134-192-204-2-16-130-32-10-0-64-128-0-2-12-129-0-0-0-0-0-129-0-0-136-3-68-64-32-128-0-82-160-0-17-89-9-21-198-16-130-32-0-4-0-32-1-0-65-168-70-208-128-37-0-0-32-120-65-64-2-14-2-128-80-2-2-148-40
964|data|DCD 0xA9, 0, 0xAC, 0, 0xAD, 0, 0xAE, 0xAF, 0xB1, 0, 0xB2|169-0-0-0-0-0-0-0-172-0-0-0-0-0-0-0-173-0-0-0-0-0-0-0-174-0-0-0-175-0-0-0-177-0-0-0-0-0-0-0-178-0-0-0-179-0-0-0-180-0-0-0-181-0-0-0-0-0-0-0-182-0-0-0-183-0-0-0-185-0-0-0-186-0-0-0-0-0-0-0-187-0-0-0-188-0-0-0-0-0-0-0-190-0-0-0-192-0-0-0-194-0-0-0-196-0-0-0-197-0-0-0-200-0-0-0-0-0-0-0-204-0-0-0-207-0-0-0-0-0-0-0-0-0-0-0-210-0-0-0-0-0-0-0-214-0-0-0-217-0-0-0-220-0-0-0-0-0-0-0-221-0-0-0-0-0-0-0-223-0-0-0-0-0-0-0-225-0-0-0-227-0-0-0-229-0-0-0-230-0-0-0-232-0-0-0-233-0-0-0-235-0-0-0-239-0-0-0-240-0-0-0-241-0-0-0-245-0-0-0-247-0-0-0-249-0-0-0-250-0-0-0-251-0-0-0-0-0-0-0-254-0-0-0-0-1-0-0-3-1-0-0-8-1-0-0-10-1-0-0-0-0-0-0-0-0-0-0-14-1-0-0-17-1-0-0-18-1-0-0-0-0-0-0-21-1-0-0-25-1-0-0-26-1-0-0-0-0-0-0-27-1-0-0-28-1-0-0-30-1-0-0-32-1-0-0-33-1-0-0-35-1-0-0-36-1-0-0-38-1-0-0-39-1-0-0-41-1-0-0-42-1-0-0-43-1-0-0-44-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-46-1-0-0-47-1-0-0-48-1-0-0-49-1-0-0-50-1-0-0-52-1-0-0-55-1-0-0-57-1-0-0-0-0-0-0-59-1-0-0-62-1-0-0-64-1-0-0-66-1-0-0-68-1-0-0-0-0-0-0-69-1-0-0-0-0-0-0-70-1-0-0-71-1-0-0-72-1-0-0-0-0-0-0-0-0-0-0-74-1-0-0-0-0-0-0-77-1-0-0-78-1-0-0-79-1-0-0-80-1-0-0-81-1-0-0-82-1-0-0-83-1-0-0-86-1-0-0-87-1-0-0-89-1-0-0-0-0-0-0-90-1-0-0-91-1-0-0-92-1-0-0-95-1-0-0-98-1-0-0-101-1-0-0-0-0-0-0-102-1-0-0-0-0-0-0-104-1-0-0-106-1-0-0-108-1-0-0-109-1-0-0-111-1-0-0-114-1-0-0-115-1-0-0-117-1-0-0-118-1-0-0-120-1-0-0-121-1-0-0-0-0-0-0-125-1-0-0-129-1-0-0-130-1-0-0-133-1-0-0-134-1-0-0-136-1-0-0-0-0-0-0-138-1-0-0-140-1-0-0-142-1-0-0-143-1-0-0-145-1-0-0-148-1-0-0-152-1-0-0-0-0-0-0-153-1-0-0-154-1-0-0-155-1-0-0-156-1-0-0-158-1-0-0-160-1-0-0-0-0-0-0-164-1-0-0-0-0-0-0-165-1-0-0-166-1-0-0-170-1-0-0-172-1-0-0-174-1-0-0-176-1-0-0-0-0-0-0-0-0-0-0-178-1-0-0-180-1-0-0-0-0-0-0-182-1-0-0-0-0-0-0-185-1-0-0-187-1-0-0-189-1-0-0-0-0-0-0-193-1-0-0-195-1-0-0-197-1-0-0-199-1-0-0-0-0-0-0-203-1-0-0-204-1-0-0-205-1-0-0-207-1-0-0-210-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-212-1-0-0-214-1-0-0-216-1-0-0-217-1-0-0-219-1-0-0-221-1-0-0-222-1-0-0-223-1-0-0-225-1-0-0-226-1-0-0-0-0-0-0-227-1-0-0-0-0-0-0-228-1-0-0-229-1-0-0-231-1-0-0-234-1-0-0-0-0-0-0-235-1-0-0-0-0-0-0-0-0-0-0-236-1-0-0-0-0-0-0-237-1-0-0-238-1-0-0-239-1-0-0-241-1-0-0-244-1-0-0-245-1-0-0-248-1-0-0-0-0-0-0-251-1-0-0-252-1-0-0-0-0-0-0-255-1-0-0-0-2-0-0-1-2-0-0-4-2-0-0-5-2-0-0-6-2-0-0-9-2-0-0-11-2-0-0-0-0-0-0-15-2-0-0-18-2-0-0-21-2-0-0-0-0-0-0-23-2-0-0-25-2-0-0-0-0-0-0-0-0-0-0-28-2-0-0-29-2-0-0-30-2-0-0-33-2-0-0-0-0-0-0-37-2-0-0-39-2-0-0-41-2-0-0-0-0-0-0-42-2-0-0-43-2-0-0
2016|data|DCD 0xCFB824A8, 0xE67B6DF8, 0xBF265D83, 0x34F40583, 0x5BF9912B|168-36-184-207-248-109-123-230-131-93-38-191-131-5-244-52-43-145-249-91-177-208-66-146-122-192-51-246-113-160-116-157-127-95-184-73-93-44-61-74-117-56-171-88-163-130-87-172-191-27-98-27-11-98-229-10-106-150-133-7-237-35-66-73-195-154-245-221-11-205-75-212-97-172-113-111-228-17-155-4-161-48-12-189-252-231-234-149-7-3-75-223-238-114-197-235-173-139-6-92-132-47-254-235-245-191-109-181-19-179-249-48-138-122-41-75-244-16-100-56-131-229-39-15-152-219-166-209-216-1-232-243-16-237-159-208-195-239-149-79-12-53-73-30-232-159-182-179-85-139-168-121-232-149-137-126-192-63-244-215-25-158-68-225-26-71-140-40-112-35-117-63-30-6-114-135-77-209-9-185-136-58-39-145-94-151-72-219-61-243-67-122-82-29-132-46-248-125-77-6-199-25-205-178-113-236-198-141-66-137-208-73-187-227-146-124-198-1-229-175-35-157-47-84-150-205-217-90-239-125-250-46-250-14-35-151-23-231-131-17-139-228-83-203-20-35-15-134-185-80-77-9-121-9-66-103-232-240-27-57-167-200-56-38-62-25-158-52-242-45-219-57-124-212-135-213-45-149-162-142-23-89-0-245-141-200-211-149-64-85-204-236-66-106-37-30-14-253-55-136-39-32-217-5-4-38-86-6-189-110-197-93-128-166-180-215-49-51-185-20-25-231-26-209-205-92-118-191-146-137-130-26-190-25-102-177-171-77-107-195-160-71-35-194-197-93-143-68-154-9-132-170-244-149-201-211-35-116-165-84-156-168-148-110-78-137-98-137-208-45-158-167-96-1-237-14-199-66-28-138-162-74-238-203-71-43-89-64-94-231-168-231-236-212-247-56-238-29-52-163-77-193-31-45-154-65-214-18-52-67-113-27-71-168-8-56-119-234-64-141-196-247-204-243-198-136-110-136-135-165-141-30-186-196-75-119-188-77-128-83-200-205-161-79-121-0-236-109-59-17-109-144-147-173-46-106-55-55-140-153-12-58-151-11-83-253-103-235-18-84-203-159-51-98-219-237-173-98-30-34-88-239-151-121-53-130-180-138-137-4-135-14-240-244-56-130-143-121-13-248-199-254-3-106-66-69-213-236-69-143-226-83-103-76-37-82-171-236-145-181-195-58-195-119-68-173-101-201-37-47-89-201-127-173-179-210-205-225-52-7-21-231-95-185-81-49-117-202-176-66-202-188-69-115-24-218-134-22-115-92-178-54-214-203-169-23-87-233-50-125-221-160-219-49-25-75-228-135-142-182-119-84-60-148-200-127-63-249-92-211-159-138-79-183-159-137-170-14-202-245-93-211-159-138-208-56-24-21-103-61-37-185-104-127-173-62-165-63-160-136-201-26-92-52-133-91-135-223-43-132-236-73-51-199-155-205-136-109-217-150-91-51-2-82-94-17-67-253-108-225-195-126-145-66-2-32-29-154-208-149-15-58-152-21-131-151-149-213-245-67-72-122-111-111-43-125-27-56-215-27-138-6-14-28-0-175-52-232-61-247-131-48-131-54-63-80-148-52-43-101-109-139-226-251-109-230-14-54-77-161-211-200-151-129-207-221-184-4-241-217-136-194-64-213-157-149-210-231-160-224-118-201-44-99-59-33-187-82-47-190-198-253-161-5-250-60-70-49-123-184-209-171-205-73-234-128-60-88-27-123-23-145-232-82-136-152-240-114-195-45-14-81-246-206-34-208-49-83-49-117-43-199-180-210-36-185-192-110-45-10-127-33-162-234-238-73-154-160-32-111-215-176-102-25-15-159-73-141-222-2-24-55-47-96-78-196-109-9-158-89-234-211-239-14-207-112-46-246-245-97-172-131-172-75-227-192-2-79-111-56-106-9-67-214-129-223-51-120-188-18-83-201-72-154-160-31-12-20-226-158-51-177-83-21-227-125-131-90-158-14-184-59-106-70-69-246-79-155-128-156-185-111-0-234-214-222-99-42-223-57-87-207-40-153-214-113-175-30-66-163-148-58-243-170-185-195-203-226-84-231-241-235-185-141-241-14-87-209-43-211-118-155-161-101-65-174-172-135-80-153-75-2-156-109-15-164-165-54-147-138-122-243-128-106-58-104-17-148-218-205-227-158-167-54-147-138-109-108-191-28-15-54-231-33-241-75-175-72-55-154-211-167-166-21-58-60-125-184-247-184-196-240-110-244-131-208-87-176-242-44-9-213-14-159-62-249-74-126-133-89-147-220-33-27-115-170-250-131-51-157-227-252-238-125-233-80-64-1-209-120-252-124-216-83-171-64-21-73-116-248-58-69-89-37-60-233-140-228-144-104-9-9-120-189-74-183-230-71-39-197-97-218-36-153-69-37-3-77-40-249-100-41-103-167-119-84-39-144-68-82-206-65-239-21-40-99-140-122-157-154-138-104-2-248-217-113-88-28-208-78-189-175-77-235-81-54-156-90-141-88-165-241-98-111-68-68-44-82-216-181-39-255-92-84-97-235-231-208-159-37-162-48-44-6-245-142-54-166-222-105-167-202-87-56-123-33-26-22-80-239-115-59-25-144-14-92-131-116-126-45-205-203-142-236-183-127-29-152-151-41-225-88-107-147-21-254-58-21-230-188-163-120-147-90-158-62-248-59-41-231-166-208-159-138-153-228-206-178-62-92-220-102-119-170-142-127-142-65-118-79-155-8-252-15-228-228-28-60-49-234-78-124-21-93-109-224-78-88-217-242-69-213-73-100-176-21-11-67-51-119-128-237-75-14-225-227-81-216-27-167-228-25-243-68-247-223-109-5-209-229-131-218-165-210-80-201-47-126-45-215-59-36-106-96-156-36-247-177-217-41-181-104-204-119-183-187-112-184-180-106-59-155-215-80-161-128-56-75-139-236-141-91-139-144-182-157-127-166-121-157-97-242-216-195-34-140-172-94-35-61-75-196-50-208-41-31-36-88-31-170-227-37-178-234-175-73-52-153-252-242-18-0-200-169-147-19-35-10-190-238-214-128-137-158-254-183-101-33-255-235-26-68-5-190-253-27-72-184-152-98-248-2-229-160-209-165-107-179-135-168-189-182-5-255-173-15-46-131-218-169-202-53-140-153-73-221-109-144-151-185-20-64-233-139-218-118-182-79-230-222-6-178-207-82-165-59-52-246-134-190-189-180-157-192-79-93-218-214-162-215-174-143-200-119-190-218-87-27-113-194-190-249-16-59-228-250-220-159-206-181-67-40-129-70-228-153-63-25-154-39-0-219-53-32-74-73-86-53-136-149-63-220-53-172-198-90-60-94-159-178-83-21-66-57-96-137-248-62-229-194-215-159-192-146-109-236-108-70-97-219-209-28-242-31-198-148-240-51-147-138-139-135-154-206-68-41-152-5-222-228-157-181-48-181-171-37-249-162-123-186-112-251-27-167-11-187-185-61-146-130-25-65-161-40-87-65-175-141-24-215-211-154-112-209-106-127-154-124-116-63-172-75-80-146-176-27-55-65-186-224
3576|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
3592|data|Elf32_Sym <byte_30E8 - byte_30E8, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
3608|data|Elf32_Sym <byte_30E8 - byte_30E8, dword_24810, 0, 3, 0, 0x14>|0-0-0-0-16-72-2-0-0-0-0-0-3-0-20-0
3624|data|Elf32_Sym <aChdir - byte_30E8, dword_0, 0, 0x12, 0, 0>; "chdir"|120-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3640|data|Elf32_Sym <aStdin - byte_30E8, dword_0, 0, 0x11, 0, 0>; "stdin"|243-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
3656|data|Elf32_Sym <aPthreadMutexLo - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|8-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3672|data|Elf32_Sym <aLocaltimeR - byte_30E8, dword_0, 0, 0x12, 0, 0>; "localtime_r"|28-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3688|data|Elf32_Sym <aWcslen - byte_30E8, dword_0, 0, 0x12, 0, 0>; "wcslen"|196-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3704|data|Elf32_Sym <aTowlower - byte_30E8, dword_0, 0, 0x12, 0, 0>; "towlower"|60-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3720|data|Elf32_Sym <aFtruncate - byte_30E8, dword_0, 0, 0x12, 0, 0>; "ftruncate"|83-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3736|data|Elf32_Sym <aIswspace - byte_30E8, dword_0, 0, 0x12, 0, 0>; "iswspace"|174-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3752|data|Elf32_Sym <aGetpid - byte_30E8, dword_0, 0, 0x12, 0, 0>; "getpid"|7-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3768|data|Elf32_Sym <aMemcpyChk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__memcpy_chk"|227-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3784|data|Elf32_Sym <aMbrtowc - byte_30E8, dword_0, 0, 0x12, 0, 0>; "mbrtowc"|52-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3800|data|Elf32_Sym <aPthreadRwlockD - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_destroy"|212-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3816|data|Elf32_Sym <aDlerror - byte_30E8, dword_0, 0, 0x12, 0, 0>; "dlerror"|226-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3832|data|Elf32_Sym <aGettimeofday - byte_30E8, dword_0, 0, 0x12, 0, 0>; "gettimeofday"|214-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3848|data|Elf32_Sym <aOpterr - byte_30E8, dword_0, 0, 0x11, 0, 0>; "opterr"|148-6-0-0-0-0-0-0-0-0-0-0-17-0-0-0
3864|data|Elf32_Sym <aStrcasecmp - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strcasecmp"|233-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3880|data|Elf32_Sym <aFdopen - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fdopen"|43-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3896|data|Elf32_Sym <aStrtol - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strtol"|54-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3912|data|Elf32_Sym <aFree - byte_30E8, dword_0, 0, 0x12, 0, 0>; "free"|221-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3928|data|Elf32_Sym <aDladdr - byte_30E8, dword_0, 0, 0x12, 0, 0>; "dladdr"|219-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3944|data|Elf32_Sym <aStackChkGuard - byte_30E8, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|33-7-0-0-0-0-0-0-0-0-0-0-17-0-0-0
3960|data|Elf32_Sym <aPthreadSetname - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_setname_np"|245-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3976|data|Elf32_Sym <aQsort - byte_30E8, dword_0, 0, 0x12, 0, 0>; "qsort"|50-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3992|data|Elf32_Sym <aStrncmp - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strncmp"|75-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4008|data|Elf32_Sym <aOpen2 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__open_2"|36-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4024|data|Elf32_Sym <aProgname - byte_30E8, dword_0, 0, 0x11, 0, 0>; "__progname"|122-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4040|data|Elf32_Sym <aOptind - byte_30E8, dword_0, 0, 0x11, 0, 0>; "optind"|93-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4056|data|Elf32_Sym <aUGetintpropert - byte_30E8, dword_0, 0, 0x12, 0, 0>; "u_getIntPropertyValue_52"|105-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4072|data|Elf32_Sym <aStrerror - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strerror"|162-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4088|data|Elf32_Sym <aXmknod - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__xmknod"|142-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4104|data|Elf32_Sym <aVsnprintfChk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__vsnprintf_chk"|202-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4120|data|Elf32_Sym <aDlclose - byte_30E8, dword_0, 0, 0x12, 0, 0>; "dlclose"|234-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4136|data|Elf32_Sym <aPthreadGetname - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_getname_np"|241-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4152|data|Elf32_Sym <aFeof - byte_30E8, dword_0, 0, 0x12, 0, 0>; "feof"|61-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4168|data|Elf32_Sym <aStrtok - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strtok"|47-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4184|data|Elf32_Sym <aNlLanginfo - byte_30E8, dword_0, 0, 0x12, 0, 0>; "nl_langinfo"|252-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4200|data|Elf32_Sym <aWmemcpy - byte_30E8, dword_0, 0, 0x12, 0, 0>; "wmemcpy"|151-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4216|data|Elf32_Sym <aSigfillset - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigfillset"|195-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4232|data|Elf32_Sym <aBindtextdomain+4 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "textdomain"|130-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4248|data|Elf32_Sym <aReadlink - byte_30E8, dword_0, 0, 0x12, 0, 0>; "readlink"|102-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4264|data|Elf32_Sym <aFprintfChk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|152-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4280|data|Elf32_Sym <aStrtoul - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strtoul"|218-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4296|data|Elf32_Sym <aNanosleep - byte_30E8, dword_0, 0, 0x12, 0, 0>; "nanosleep"|227-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4312|data|Elf32_Sym <aStrftime - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strftime"|19-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4328|data|Elf32_Sym <aMemset - byte_30E8, dword_0, 0, 0x12, 0, 0>; "memset"|113-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4344|data|Elf32_Sym <aPthreadSelf - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_self"|27-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4360|data|Elf32_Sym <aCloselog - byte_30E8, dword_0, 0, 0x12, 0, 0>; "closelog"|203-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4376|data|Elf32_Sym <aRecv - byte_30E8, dword_0, 0, 0x12, 0, 0>; "recv"|138-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4392|data|Elf32_Sym <aFcntl - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fcntl"|235-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4408|data|Elf32_Sym <aPthreadSigmask - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_sigmask"|200-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4424|data|Elf32_Sym <aPthreadRwlockR - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_rdlock"|72-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4440|data|Elf32_Sym <aWcschr - byte_30E8, dword_0, 0, 0x12, 0, 0>; "wcschr"|86-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4456|data|Elf32_Sym <aSnprintf - byte_30E8, dword_0, 0, 0x12, 0, 0>; "snprintf"|212-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4472|data|Elf32_Sym <aStrdup - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__strdup"|113-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4488|data|Elf32_Sym <aSigaddset - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigaddset"|166-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4504|data|Elf32_Sym <aIconvClose+6 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "close"|208-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4520|data|Elf32_Sym <aWmemcmp - byte_30E8, dword_0, 0, 0x12, 0, 0>; "wmemcmp"|34-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4536|data|Elf32_Sym <aFopen - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fopen"|69-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4552|data|Elf32_Sym <aOptarg - byte_30E8, dword_0, 0, 0x11, 0, 0>; "optarg"|45-5-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4568|data|Elf32_Sym <aFread+1 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "read"|197-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4584|data|Elf32_Sym <aWmemchr - byte_30E8, dword_0, 0, 0x12, 0, 0>; "wmemchr"|110-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4600|data|Elf32_Sym <aAbort - byte_30E8, dword_0, 0, 0x12, 0, 0>; "abort"|237-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4616|data|Elf32_Sym <aPthreadOnce - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_once"|109-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4632|data|Elf32_Sym <aPoll - byte_30E8, dword_0, 0, 0x12, 0, 0>; "poll"|147-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4648|data|Elf32_Sym <aCtypeToupperLo - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__ctype_toupper_loc"|67-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4664|data|Elf32_Sym <aMemmove - byte_30E8, dword_0, 0, 0x12, 0, 0>; "memmove"|118-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4680|data|Elf32_Sym <aStrpbrk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strpbrk"|255-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4696|data|Elf32_Sym <aDlopen - byte_30E8, dword_0, 0, 0x12, 0, 0>; "dlopen"|242-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4712|data|Elf32_Sym <aLibcCurrentSig_0 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__libc_current_sigrtmin"|143-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4728|data|Elf32_Sym <aKill - byte_30E8, dword_0, 0, 0x12, 0, 0>; "kill"|14-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4744|data|Elf32_Sym <aIoctl - byte_30E8, dword_0, 0, 0x12, 0, 0>; "ioctl"|69-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4760|data|Elf32_Sym <aClockGettime - byte_30E8, dword_0, 0, 0x12, 0, 0>; "clock_gettime"|252-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4776|data|Elf32_Sym <aRealloc - byte_30E8, dword_0, 0, 0x12, 0, 0>; "realloc"|229-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4792|data|Elf32_Sym <aStrcpy - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strcpy"|27-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4808|data|Elf32_Sym <aStrtod - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strtod"|40-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4824|data|Elf32_Sym <aIconvOpen+6 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "open"|62-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4840|data|Elf32_Sym <aWaitpid - byte_30E8, dword_0, 0, 0x12, 0, 0>; "waitpid"|237-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4856|data|Elf32_Sym <aStderr - byte_30E8, dword_0, 0, 0x11, 0, 0>; "stderr"|52-5-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4872|data|Elf32_Sym <aFread - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fread"|196-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4888|data|Elf32_Sym <aPthreadGetspec - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_getspecific"|21-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4904|data|Elf32_Sym <aFileno - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fileno"|175-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4920|data|Elf32_Sym <aPthreadRwlockU - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_unlock"|60-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4936|data|Elf32_Sym <aOptopt - byte_30E8, dword_0, 0, 0x11, 0, 0>; "optopt"|95-5-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4952|data|Elf32_Sym <aSyslogChk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__syslog_chk"|126-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4968|data|Elf32_Sym <aPthreadRwlockW - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_wrlock"|146-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4984|data|Elf32_Sym <aStackChkFail - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|206-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5000|data|Elf32_Sym <aPthreadRwlockT - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_tryrdlock"|113-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5016|data|Elf32_Sym <aFork - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fork"|195-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5032|data|Elf32_Sym <aAccess - byte_30E8, dword_0, 0, 0x12, 0, 0>; "access"|141-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5048|data|Elf32_Sym <aSigdelset - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigdelset"|59-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5064|data|Elf32_Sym <aJvRegisterclas - byte_30E8, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|16-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
5080|data|Elf32_Sym <aDcgettext - byte_30E8, dword_0, 0, 0x12, 0, 0>; "dcgettext"|133-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5096|data|Elf32_Sym <aMkdir - byte_30E8, dword_0, 0, 0x12, 0, 0>; "mkdir"|223-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5112|data|Elf32_Sym <aCxaAtexit - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__cxa_atexit"|0-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5128|data|Elf32_Sym <aStrncasecmp - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strncasecmp"|130-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5144|data|Elf32_Sym <aPthreadKeyCrea - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_key_create"|94-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5160|data|Elf32_Sym <aGetoptLong - byte_30E8, dword_0, 0, 0x12, 0, 0>; "getopt_long"|111-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5176|data|Elf32_Sym <aLseek - byte_30E8, dword_0, 0, 0x12, 0, 0>; "lseek"|216-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5192|data|Elf32_Sym <aRaise - byte_30E8, dword_0, 0, 0x12, 0, 0>; "raise"|4-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5208|data|Elf32_Sym <aCtypeBLoc - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__ctype_b_loc"|8-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5224|data|Elf32_Sym <aBindtextdomain - byte_30E8, dword_0, 0, 0x12, 0, 0>; "bindtextdomain"|126-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5240|data|Elf32_Sym <aSigaction - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigaction"|41-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5256|data|Elf32_Sym <aCalloc - byte_30E8, dword_0, 0, 0x12, 0, 0>; "calloc"|72-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5272|data|Elf32_Sym <aSetlocale - byte_30E8, dword_0, 0, 0x12, 0, 0>; "setlocale"|42-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5288|data|Elf32_Sym <aFerror - byte_30E8, dword_0, 0, 0x12, 0, 0>; "ferror"|189-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5304|data|Elf32_Sym <aIconvClose - byte_30E8, dword_0, 0, 0x12, 0, 0>; "iconv_close"|202-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5320|data|Elf32_Sym <aFgets - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fgets"|66-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5336|data|Elf32_Sym <aFxstat - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__fxstat"|151-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5352|data|Elf32_Sym <aUCharfromname5 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "u_charFromName_52"|130-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5368|data|Elf32_Sym <aFlockfile - byte_30E8, dword_0, 0, 0x12, 0, 0>; "flockfile"|185-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5384|data|Elf32_Sym <aFputc - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fputc"|183-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5400|data|Elf32_Sym <aFwrite - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fwrite"|189-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5416|data|Elf32_Sym <aWmemcpy+1 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "memcpy"|152-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5432|data|Elf32_Sym <aUnormNormalize - byte_30E8, dword_0, 0, 0x12, 0, 0>; "unorm_normalize_52"|148-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5448|data|Elf32_Sym <aMalloc - byte_30E8, dword_0, 0, 0x12, 0, 0>; "malloc"|226-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5464|data|Elf32_Sym <aStrlen - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strlen"|79-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5480|data|Elf32_Sym <aSnprintfChk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|80-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5496|data|Elf32_Sym <aIoperm - byte_30E8, dword_0, 0, 0x12, 0, 0>; "ioperm"|167-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5512|data|Elf32_Sym <aOutb - byte_30E8, dword_0, 0, 0x12, 0, 0>; "outb"|75-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5528|data|Elf32_Sym <aPthreadSetspec - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_setspecific"|192-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5544|data|Elf32_Sym <aGetcwd - byte_30E8, dword_0, 0, 0x12, 0, 0>; "getcwd"|182-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5560|data|Elf32_Sym <aFclose - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fclose"|195-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5576|data|Elf32_Sym <aFwrite+1 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "write"|190-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5592|data|Elf32_Sym <aInb - byte_30E8, dword_0, 0, 0x12, 0, 0>; "inb"|26-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5608|data|Elf32_Sym <aSigismember - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigismember"|240-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5624|data|Elf32_Sym <aMempcpy - byte_30E8, dword_0, 0, 0x12, 0, 0>; "mempcpy"|139-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5640|data|Elf32_Sym <aXstat - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__xstat"|102-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5656|data|Elf32_Sym <aPthreadRwlockT_0 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_trywrlock"|167-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5672|data|Elf32_Sym <aRealpathChk - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__realpath_chk"|160-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5688|data|Elf32_Sym <aStdout - byte_30E8, dword_0, 0, 0x11, 0, 0>; "stdout"|176-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
5704|data|Elf32_Sym <aIconvOpen - byte_30E8, dword_0, 0, 0x12, 0, 0>; "iconv_open"|56-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5720|data|Elf32_Sym <aPthreadRwlockI - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_rwlock_init"|40-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5736|data|Elf32_Sym <aExit - byte_30E8, dword_0, 0, 0x12, 0, 0>; "_exit"|249-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5752|data|Elf32_Sym <aPthreadCreate - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_create"|94-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5768|data|Elf32_Sym <aStrcmp - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strcmp"|155-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5784|data|Elf32_Sym <aIconv - byte_30E8, dword_0, 0, 0x12, 0, 0>; "iconv"|37-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5800|data|Elf32_Sym <aErrnoLocation - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__errno_location"|168-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5816|data|Elf32_Sym <aSend - byte_30E8, dword_0, 0, 0x12, 0, 0>; "send"|222-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5832|data|Elf32_Sym <aWmemchr+1 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "memchr"|111-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5848|data|Elf32_Sym <aSscanf - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sscanf"|29-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5864|data|Elf32_Sym <aStrncpy - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strncpy"|159-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5880|data|Elf32_Sym <aItmDeregistert - byte_30E8, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|36-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
5896|data|Elf32_Sym <aFflush - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fflush"|20-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5912|data|Elf32_Sym <aWmemcmp+1 - byte_30E8, dword_0, 0, 0x12, 0, 0>; "memcmp"|35-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5928|data|Elf32_Sym <aLibcCurrentSig - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__libc_current_sigrtmax"|122-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5944|data|Elf32_Sym <aSigemptyset - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigemptyset"|93-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5960|data|Elf32_Sym <aStrrchr - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strrchr"|100-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5976|data|Elf32_Sym <aFunlockfile - byte_30E8, dword_0, 0, 0x12, 0, 0>; "funlockfile"|82-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
5992|data|Elf32_Sym <aMktime - byte_30E8, dword_0, 0, 0x12, 0, 0>; "mktime"|30-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6008|data|Elf32_Sym <aOpenlog - byte_30E8, dword_0, 0, 0x12, 0, 0>; "openlog"|105-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6024|data|Elf32_Sym <aProgramInvocat - byte_30E8, dword_0, 0, 0x21, 0, 0>; "program_invocation_short_name"|226-6-0-0-0-0-0-0-0-0-0-0-33-0-0-0
6040|data|Elf32_Sym <aFputs - byte_30E8, dword_0, 0, 0x12, 0, 0>; "fputs"|189-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6056|data|Elf32_Sym <aGetenv - byte_30E8, dword_0, 0, 0x12, 0, 0>; "getenv"|22-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6072|data|Elf32_Sym <aLibcStartMain - byte_30E8, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|171-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6088|data|Elf32_Sym <aDlsym - byte_30E8, dword_0, 0, 0x12, 0, 0>; "dlsym"|213-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6104|data|Elf32_Sym <aExecvp - byte_30E8, dword_0, 0, 0x12, 0, 0>; "execvp"|123-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6120|data|Elf32_Sym <aGmonStart - byte_30E8, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|64-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
6136|data|Elf32_Sym <aSigprocmask - byte_30E8, dword_0, 0, 0x12, 0, 0>; "sigprocmask"|183-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6152|data|Elf32_Sym <aItmRegistertmc - byte_30E8, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|79-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
6168|data|Elf32_Sym <aMbsinit - byte_30E8, dword_0, 0, 0x12, 0, 0>; "mbsinit"|244-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6184|data|Elf32_Sym <aStrchr - byte_30E8, dword_0, 0, 0x12, 0, 0>; "strchr"|10-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6200|data|Elf32_Sym <aCxaFinalize - byte_30E8, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|87-6-0-0-0-0-0-0-0-0-0-0-34-0-0-0
6216|data|Elf32_Sym <aPthreadMutexUn - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|51-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6232|data|Elf32_Sym <aWcrtomb - byte_30E8, dword_0, 0, 0x12, 0, 0>; "wcrtomb"|143-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6248|data|Elf32_Sym <aIswcntrl - byte_30E8, dword_0, 0, 0x12, 0, 0>; "iswcntrl"|17-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6264|data|Elf32_Sym <aPipe - byte_30E8, dword_0, 0, 0x12, 0, 0>; "pipe"|108-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
6280|data|Elf32_Sym <aProcessqueue - byte_30E8, processQueue+1, 0x3C, 0x12, 0, \; "processQueue"|33-19-0-0-57-210-0-0-60-0-0-0-18-0-13-0
6296|data|Elf32_Sym <aGetparameters - byte_30E8, getParameters+1, 0x238, 0x12, \; "getParameters"|4-20-0-0-181-169-0-0-56-2-0-0-18-0-13-0
6312|data|Elf32_Sym <aBeginprogram - byte_30E8, beginProgram+1, 0x1BC, 0x12, 0, \; "beginProgram"|38-21-0-0-185-115-0-0-188-1-0-0-18-0-13-0
6328|data|Elf32_Sym <aAsyncsignaleve - byte_30E8, asyncSignalEvent+1, 0x4C, \; "asyncSignalEvent"|254-8-0-0-85-195-0-0-76-0-0-0-18-0-13-0
6344|data|Elf32_Sym <aComparetimeval - byte_30E8, compareTimeValues+1, 0x24, \; "compareTimeValues"|210-27-0-0-109-174-0-0-36-0-0-0-18-0-13-0
6360|data|Elf32_Sym <aOpendatafile - byte_30E8, openDataFile+1, 0x14, 0x12, 0, \; "openDataFile"|195-21-0-0-9-242-0-0-20-0-0-0-18-0-13-0
6376|data|Elf32_Sym <aGetdatasize - byte_30E8, getDataSize+1, 4, 0x12, 0, 0xD>; "getDataSize"|250-13-0-0-37-11-1-0-4-0-0-0-18-0-13-0
6392|data|Elf32_Sym <aCreatethread - byte_30E8, createThread+1, 0x48, 0x12, 0, \; "createThread"|46-19-0-0-129-205-0-0-72-0-0-0-18-0-13-0
6408|data|Elf32_Sym <aGetlocalechars - byte_30E8, getLocaleCharset+1, 0x34, \; "getLocaleCharset"|112-27-0-0-229-254-0-0-52-0-0-0-18-0-13-0
6424|data|Elf32_Sym <aLogsymbol - byte_30E8, logSymbol+1, 0x50, 0x12, 0, 0xD>; "logSymbol"|164-24-0-0-213-144-0-0-80-0-0-0-18-0-13-0
6440|data|Elf32_Sym <aGetwritabledir - byte_30E8, getWritableDirectory+1, 0x28, \; "getWritableDirectory"|83-11-0-0-113-153-0-0-40-0-0-0-18-0-13-0
6456|data|Elf32_Sym <aJoinpath - byte_30E8, joinPath+1, 0x7C, 0x12, 0, 0xD>; "joinPath"|224-21-0-0-213-149-0-0-124-0-0-0-18-0-13-0
6472|data|Elf32_Sym <aAsyncdeallocat_2 - byte_30E8, asyncDeallocateTaskData+1, \; "asyncDeallocateTaskData"|67-26-0-0-149-184-0-0-26-0-0-0-18-0-13-0
6488|data|Elf32_Sym <aUnsettexttable+2 - byte_30E8, setTextTableCharacter+1, \; "setTextTableCharacter"|40-31-0-0-17-4-1-0-76-0-0-0-18-0-13-0
6504|data|Elf32_Sym <aTestprogrampat - byte_30E8, testProgramPath+1, 0x1A, 0x12,\; "testProgramPath"|24-17-0-0-37-152-0-0-26-0-0-0-18-0-13-0
6520|data|Elf32_Sym <aAsynchandlesig - byte_30E8, asyncHandleSignal+1, 0x70, \; "asyncHandleSignal"|67-21-0-0-185-197-0-0-112-0-0-0-18-0-13-0
6536|data|Elf32_Sym <aIncludedatafil - byte_30E8, includeDataFile+1, 0xF4, 0x12,\; "includeDataFile"|96-27-0-0-77-243-0-0-244-0-0-0-18-0-13-0
6552|data|Elf32_Sym <aWritedotscell - byte_30E8, writeDotsCell+1, 0x18, 0x12, 0,\; "writeDotsCell"|145-9-0-0-137-238-0-0-24-0-0-0-18-0-13-0
6568|data|Elf32_Sym <aWriterepeatdel - byte_30E8, writeRepeatDelay+1, 0x24, \; "writeRepeatDelay"|221-15-0-0-113-218-0-0-36-0-0-0-18-0-13-0
6584|data|Elf32_Sym <aAsyncmonitorso_0 - byte_30E8, asyncMonitorSocketOutput+1, \; "asyncMonitorSocketOutput"|117-12-0-0-221-194-0-0-4-0-0-0-18-0-13-0
6600|data|Elf32_Sym <aStandarderrorn - byte_30E8, standardErrorName, 0x11, 0x11,\; "standardErrorName" ...|179-23-0-0-240-18-1-0-17-0-0-0-17-0-15-0
6616|data|Elf32_Sym <aPreparehostcom - byte_30E8, prepareHostCommandStream+1, \; "prepareHostCommandStream"|18-23-0-0-17-222-0-0-32-0-0-0-18-0-13-0
6632|data|Elf32_Sym <aDeleteitem - byte_30E8, deleteItem+1, 0x20, 0x12, 0, 0xD>; "deleteItem"|99-32-0-0-117-210-0-0-32-0-0-0-18-0-13-0
6648|data|Elf32_Sym <aGetutf8length - byte_30E8, getUtf8Length+1, 0x5C, 0x12, 0,\; "getUtf8Length"|142-12-0-0-9-250-0-0-92-0-0-0-18-0-13-0
6664|data|Elf32_Sym <aAsyncmakehandl - byte_30E8, asyncMakeHandle+1, 0x98, 0x12,\; "asyncMakeHandle"|148-21-0-0-5-177-0-0-152-0-0-0-18-0-13-0
6680|data|Elf32_Sym <aRestarttimeper+2 - byte_30E8, startTimePeriod+1, 6, 0x12, \; "startTimePeriod"|184-7-0-0-93-176-0-0-6-0-0-0-18-0-13-0
6696|data|Elf32_Sym <aDefaultcharset - byte_30E8, defaultCharset, 0xB, 0x11, 0, \; "defaultCharset" ...|181-28-0-0-12-49-1-0-11-0-0-0-17-0-15-0
6712|data|Elf32_Sym <aFlushstream - byte_30E8, flushStream+1, 4, 0x12, 0, 0xD>; "flushStream"|136-21-0-0-9-157-0-0-4-0-0-0-18-0-13-0
6728|data|Elf32_Sym <aProcessdatastr - byte_30E8, processDataStream+1, 0x130, \; "processDataStream"|235-14-0-0-29-242-0-0-48-1-0-0-18-0-13-0
6744|data|Elf32_Sym <aFinditem - byte_30E8, findItem+1, 0xC, 0x12, 0, 0xD>; "findItem"|154-15-0-0-29-210-0-0-12-0-0-0-18-0-13-0
6760|data|Elf32_Sym <aWriteinputeven - byte_30E8, writeInputEvent+1, 0x78, 0x12,\; "writeInputEvent"|228-26-0-0-25-217-0-0-120-0-0-0-18-0-13-0
6776|data|Elf32_Sym <aGetmonotonicel - byte_30E8, getMonotonicElapsed+1, 0x3C, \; "getMonotonicElapsed"|142-10-0-0-29-176-0-0-60-0-0-0-18-0-13-0
6792|data|Elf32_Sym <aRuncommand - byte_30E8, runCommand+1, 0x18C, 0x12, 0, 0xD>; "runCommand"|97-12-0-0-49-222-0-0-140-1-0-0-18-0-13-0
6808|data|Elf32_Sym <aFindelement - byte_30E8, findElement+1, 0x28, 0x12, 0, \; "findElement"|249-18-0-0-165-208-0-0-40-0-0-0-18-0-13-0
6824|data|Elf32_Sym <aNormalizetimev - byte_30E8, normalizeTimeValue+1, 0x5A, \; "normalizeTimeValue"|145-24-0-0-149-173-0-0-90-0-0-0-18-0-13-0
6840|data|Elf32_Sym <aAsynccallwiths - byte_30E8, asyncCallWithSignalBlocked+1, \; "asyncCallWithSignalBlocked"|223-10-0-0-41-199-0-0-76-0-0-0-18-0-13-0
6856|data|Elf32_Sym <aGetdeviceparam - byte_30E8, getDeviceParameters+1, 0xCC, \; "getDeviceParameters"|170-22-0-0-25-163-0-0-204-0-0-0-18-0-13-0
6872|data|Elf32_Sym <aWriterepeatper - byte_30E8, writeRepeatPeriod+1, 0x24, \; "writeRepeatPeriod"|147-32-0-0-149-218-0-0-36-0-0-0-18-0-13-0
6888|data|Elf32_Sym <aReadsocketdesc - byte_30E8, readSocketDescriptor+1, 6, \; "readSocketDescriptor"|44-18-0-0-249-159-0-0-6-0-0-0-18-0-13-0
6904|data|Elf32_Sym <aGetcellsoperan - byte_30E8, getCellsOperand+1, 0x48, 0x12,\; "getCellsOperand"|192-18-0-0-5-238-0-0-72-0-0-0-18-0-13-0
6920|data|Elf32_Sym <aOpenlogfile - byte_30E8, openLogFile+1, 0x24, 0x12, 0, \; "openLogFile"|124-21-0-0-17-141-0-0-36-0-0-0-18-0-13-0
6936|data|Elf32_Sym <aSetcharset - byte_30E8, setCharset+1, 0x88, 0x12, 0, 0xD>; "setCharset"|110-9-0-0-61-252-0-0-136-0-0-0-18-0-13-0
6952|data|Elf32_Sym <aMakepath - byte_30E8, makePath+1, 0x34, 0x12, 0, 0xD>; "makePath"|130-23-0-0-81-150-0-0-52-0-0-0-18-0-13-0
6968|data|Elf32_Sym <aProcessdatafil - byte_30E8, processDataFile+1, 0x44, 0x12,\; "processDataFile"|70-25-0-0-157-244-0-0-68-0-0-0-18-0-13-0
6984|data|Elf32_Sym <aProcesstexttab_0 - byte_30E8, processTextTableLines+1, \; "processTextTableLines"|45-26-0-0-41-5-1-0-80-0-0-0-18-0-13-0
7000|data|Elf32_Sym <aProcessifnotva - byte_30E8, processIfNotVarOperands+1, \; "processIfNotVarOperands"|201-8-0-0-209-240-0-0-36-0-0-0-18-0-13-0
7016|data|Elf32_Sym <aAsyncresetalar - byte_30E8, asyncResetAlarmEvery+1, 0x2C, \; "asyncResetAlarmEvery"|146-11-0-0-17-183-0-0-44-0-0-0-18-0-13-0
7032|data|Elf32_Sym <aValidateintege - byte_30E8, validateInteger+1, 0x68, 0x12,\; "validateInteger"|60-14-0-0-217-167-0-0-104-0-0-0-18-0-13-0
7048|data|Elf32_Sym <aRescaleinteger - byte_30E8, rescaleInteger+1, 0x1E, 0x12, \; "rescaleInteger"|131-28-0-0-97-166-0-0-30-0-0-0-18-0-13-0
7064|data|Elf32_Sym <aAsynccallwitha - byte_30E8, \; "asyncCallWithAllSignalsBlocked"|8-32-0-0-117-199-0-0-88-0-0-0-18-0-13-0
7080|data|Elf32_Sym <aFormatthreadna - byte_30E8, formatThreadName+1, 0x22, \; "formatThreadName"|82-32-0-0-9-206-0-0-34-0-0-0-18-0-13-0
7096|data|Elf32_Sym <aMakefilepath - byte_30E8, makeFilePath+1, 0x28, 0x12, 0, \; "makeFilePath"|33-16-0-0-149-151-0-0-40-0-0-0-18-0-13-0
7112|data|Elf32_Sym <aSetglobaldatav - byte_30E8, setGlobalDataVariable+1, 0xE8,\; "setGlobalDataVariable"|242-16-0-0-213-228-0-0-232-0-0-0-18-0-13-0
7128|data|Elf32_Sym <aEnd_0 - byte_30E8, _end, 0, 0x10, 0, 0x19>; "_end"|117-7-0-0-244-80-2-0-0-0-0-0-16-0-25-0
7144|data|Elf32_Sym <aWriteport1 - byte_30E8, writePort1+1, 0xA, 0x12, 0, 0xD>; "writePort1"|233-9-0-0-213-211-0-0-10-0-0-0-18-0-13-0
7160|data|Elf32_Sym <aWriteconsole - byte_30E8, writeConsole+1, 0x5C, 0x12, 0, \; "writeConsole"|6-25-0-0-105-160-0-0-92-0-0-0-18-0-13-0
7176|data|Elf32_Sym <aGetlocalename - byte_30E8, getLocaleName+1, 0x20, 0x12, 0,\; "getLocaleName"|225-11-0-0-133-247-0-0-32-0-0-0-18-0-13-0
7192|data|Elf32_Sym <aAsynctesthandl - byte_30E8, asyncTestHandle+1, 0x24, 0x12,\; "asyncTestHandle"|68-28-0-0-157-177-0-0-36-0-0-0-18-0-13-0
7208|data|Elf32_Sym <aLogparameters - byte_30E8, logParameters+1, 0x40, 0x12, 0,\; "logParameters"|91-26-0-0-237-171-0-0-64-0-0-0-18-0-13-0
7224|data|Elf32_Sym <aLogsystemerror - byte_30E8, logSystemError+1, 0x14, 0x12, \; "logSystemError"|88-29-0-0-73-145-0-0-20-0-0-0-18-0-13-0
7240|data|Elf32_Sym <aLocatepathname - byte_30E8, locatePathName+1, 0x28, 0x12, \; "locatePathName"|30-26-0-0-141-149-0-0-40-0-0-0-18-0-13-0
7256|data|Elf32_Sym <aEnsurefileexte - byte_30E8, ensureFileExtension+1, 0x40, \; "ensureFileExtension"|250-10-0-0-85-151-0-0-64-0-0-0-18-0-13-0
7272|data|Elf32_Sym <aGetconsole - byte_30E8, getConsole+1, 0x60, 0x12, 0, 0xD>; "getConsole"|45-29-0-0-9-160-0-0-96-0-0-0-18-0-13-0
7288|data|Elf32_Sym <aProcessifvarop - byte_30E8, processIfVarOperands+1, 0x24, \; "processIfVarOperands"|162-10-0-0-173-240-0-0-36-0-0-0-18-0-13-0
7304|data|Elf32_Sym <aLoglevelcount - byte_30E8, logLevelCount, 4, 0x11, 0, 0xF>; "logLevelCount" ...|221-7-0-0-156-23-1-0-4-0-0-0-17-0-15-0
7320|data|Elf32_Sym <aGetlogcategory - byte_30E8, getLogCategoryTitle+1, 0x30, \; "getLogCategoryTitle"|186-15-0-0-101-139-0-0-48-0-0-0-18-0-13-0
7336|data|Elf32_Sym <aReplacefileext - byte_30E8, replaceFileExtension+1, 0x64, \; "replaceFileExtension"|26-10-0-0-241-150-0-0-100-0-0-0-18-0-13-0
7352|data|Elf32_Sym <aLoglevelnames - byte_30E8, logLevelNames, 0x20, 0x11, 0, \; "logLevelNames"|229-19-0-0-164-73-2-0-32-0-0-0-17-0-21-0
7368|data|Elf32_Sym <aLogunsupported_0 - byte_30E8, logUnsupportedFeature+1, \; "logUnsupportedFeature"|174-27-0-0-105-145-0-0-16-0-0-0-18-0-13-0
7384|data|Elf32_Sym <aEnsuredirector - byte_30E8, ensureDirectory+1, 0x88, 0x12,\; "ensureDirectory"|249-30-0-0-233-152-0-0-136-0-0-0-18-0-13-0
7400|data|Elf32_Sym <aNewlockdescrip - byte_30E8, newLockDescriptor+1, 0x2A, \; "newLockDescriptor"|251-23-0-0-221-246-0-0-42-0-0-0-18-0-13-0
7416|data|Elf32_Sym <aVlogmessage+1 - byte_30E8, logMessage+1, 0x40, 0x12, 0, \; "logMessage"|154-26-0-0-69-144-0-0-64-0-0-0-18-0-13-0
7432|data|Elf32_Sym <aAsyncawaitcond - byte_30E8, asyncAwaitCondition+1, 0x120, \; "asyncAwaitCondition"|190-11-0-0-137-179-0-0-32-1-0-0-18-0-13-0
7448|data|Elf32_Sym <aInstallkernelm - byte_30E8, installKernelModule+1, 0x14, \; "installKernelModule"|104-15-0-0-117-213-0-0-20-0-0-0-18-0-13-0
7464|data|Elf32_Sym <aFinishhostcomm - byte_30E8, finishHostCommandStream+1, \; "finishHostCommandStream"|96-16-0-0-209-219-0-0-64-0-0-0-18-0-13-0
7480|data|Elf32_Sym <aBrldotbittoind - byte_30E8, brlDotBitToIndex+1, 0x28, \; "brlDotBitToIndex"|164-21-0-0-57-227-0-0-40-0-0-0-18-0-13-0
7496|data|Elf32_Sym <aConvertutf8tow - byte_30E8, convertUtf8ToWchar+1, 0xE8, \; "convertUtf8ToWchar"|139-7-0-0-33-249-0-0-232-0-0-0-18-0-13-0
7512|data|Elf32_Sym <aWritedotscells - byte_30E8, writeDotsCells+1, 0x38, 0x12, \; "writeDotsCells"|43-23-0-0-161-238-0-0-56-0-0-0-18-0-13-0
7528|data|Elf32_Sym <aGettexttableit - byte_30E8, getTextTableItem+1, 6, 0x12, \; "getTextTableItem"|253-11-0-0-1-2-1-0-6-0-0-0-18-0-13-0
7544|data|Elf32_Sym <aSetqueuedata - byte_30E8, setQueueData+1, 8, 0x12, 0, 0xD>; "setQueueData"|186-31-0-0-49-208-0-0-8-0-0-0-18-0-13-0
7560|data|Elf32_Sym <aConvertutf8tow_0 - byte_30E8, convertUtf8ToWchars+1, 0x7C,\; "convertUtf8ToWchars"|164-25-0-0-101-250-0-0-124-0-0-0-18-0-13-0
7576|data|Elf32_Sym <aIsabsolutepath - byte_30E8, isAbsolutePath+1, 0x10, 0x12, \; "isAbsolutePath"|206-15-0-0-221-148-0-0-16-0-0-0-18-0-13-0
7592|data|Elf32_Sym <aTexttable - byte_30E8, textTable, 4, 0x11, 0, 0x18>; "textTable"|100-14-0-0-48-80-2-0-4-0-0-0-17-0-24-0
7608|data|Elf32_Sym <aGetprimaryover - byte_30E8, getPrimaryOverrideDirectory+1,\; "getPrimaryOverrideDirectory"|130-19-0-0-173-156-0-0-36-0-0-0-18-0-13-0
7624|data|Elf32_Sym <aObtainlock - byte_30E8, obtainLock+1, 0x36, 0x12, 0, 0xD>; "obtainLock"|148-29-0-0-29-247-0-0-54-0-0-0-18-0-13-0
7640|data|Elf32_Sym <aReadfiledescri - byte_30E8, readFileDescriptor+1, 4, 0x12,\; "readFileDescriptor"|205-20-0-0-149-159-0-0-4-0-0-0-18-0-13-0
7656|data|Elf32_Sym <aSystemloglevel - byte_30E8, systemLogLevel, 1, 0x11, 0, \; "systemLogLevel"|209-22-0-0-10-80-2-0-1-0-0-0-17-0-24-0
7672|data|Elf32_Sym <aUnlockcharset - byte_30E8, unlockCharset+1, 0x1C, 0x12, 0,\; "unlockCharset"|15-9-0-0-241-252-0-0-28-0-0-0-18-0-13-0
7688|data|Elf32_Sym <aPushlogprefix - byte_30E8, pushLogPrefix+1, 0x4C, 0x12, 0,\; "pushLogPrefix"|241-17-0-0-129-140-0-0-76-0-0-0-18-0-13-0
7704|data|Elf32_Sym <aGetprogramqueu - byte_30E8, getProgramQueue+1, 0x3C, 0x12,\; "getProgramQueue"|82-30-0-0-237-207-0-0-60-0-0-0-18-0-13-0
7720|data|Elf32_Sym <aAdjusttimevalu - byte_30E8, adjustTimeValue+1, 0x7C, 0x12,\; "adjustTimeValue"|104-8-0-0-241-173-0-0-124-0-0-0-18-0-13-0
7736|data|Elf32_Sym <aConvertchartou - byte_30E8, convertCharToUtf8+1, 0x1A, \; "convertCharToUtf8"|14-11-0-0-137-251-0-0-26-0-0-0-18-0-13-0
7752|data|Elf32_Sym <aParsedatastrin - byte_30E8, parseDataString+1, 0x358, \; "parseDataString"|14-12-0-0-217-231-0-0-88-3-0-0-18-0-13-0
7768|data|Elf32_Sym <aProcesshostcom - byte_30E8, processHostCommandStreams+1, \; "processHostCommandStreams"|134-18-0-0-17-220-0-0-42-0-0-0-18-0-13-0
7784|data|Elf32_Sym <aAsyncdeletesig - byte_30E8, asyncDeleteSignalEntry+1, \; "asyncDeleteSignalEntry"|165-32-0-0-129-197-0-0-26-0-0-0-18-0-13-0
7800|data|Elf32_Sym <aDestroydataare - byte_30E8, destroyDataArea+1, 0x16, 0x12,\; "destroyDataArea"|85-17-0-0-149-10-1-0-22-0-0-0-18-0-13-0
7816|data|Elf32_Sym <aTestprocesside - byte_30E8, testProcessIdentifier+1, 0x10,\; "testProcessIdentifier"|56-29-0-0-109-119-0-0-16-0-0-0-18-0-13-0
7832|data|Elf32_Sym <aLogcategorynam - byte_30E8, logCategoryName_all, 4, 0x11, \; "logCategoryName_all" ...|135-13-0-0-164-23-1-0-4-0-0-0-17-0-15-0
7848|data|Elf32_Sym <aIspathdelimite - byte_30E8, isPathDelimiter+1, 0xC, 0x12, \; "isPathDelimiter"|51-21-0-0-209-148-0-0-12-0-0-0-18-0-13-0
7864|data|Elf32_Sym <aWritefiledescr - byte_30E8, writeFileDescriptor+1, 4, \; "writeFileDescriptor"|41-22-0-0-153-159-0-0-4-0-0-0-18-0-13-0
7880|data|Elf32_Sym <aConstructhostc - byte_30E8, \; "constructHostCommandPackageData"|19-25-0-0-217-221-0-0-14-0-0-0-18-0-13-0
7896|data|Elf32_Sym <aRegisterprogra - byte_30E8, registerProgramMemory+1, 0x10,\; "registerProgramMemory"|120-10-0-0-169-115-0-0-16-0-0-0-18-0-13-0
7912|data|Elf32_Sym <aOnprogramexit - byte_30E8, onProgramExit+1, 0x48, 0x12, 0,\; "onProgramExit"|26-14-0-0-97-115-0-0-72-0-0-0-18-0-13-0
7928|data|Elf32_Sym <aLocatepathexte - byte_30E8, locatePathExtension+1, 0x10, \; "locatePathExtension"|221-17-0-0-181-149-0-0-16-0-0-0-18-0-13-0
7944|data|Elf32_Sym <aOpenfile - byte_30E8, openFile+1, 0x5C, 0x12, 0, 0xD>; "openFile"|9-31-0-0-13-157-0-0-92-0-0-0-18-0-13-0
7960|data|Elf32_Sym <aGetwcharcharse - byte_30E8, getWcharCharset+1, 0x84, 0x12,\; "getWcharCharset"|130-11-0-0-185-251-0-0-132-0-0-0-18-0-13-0
7976|data|Elf32_Sym <aIshexadecimald - byte_30E8, isHexadecimalDigit+1, 0x32, \; "isHexadecimalDigit"|110-14-0-0-189-223-0-0-50-0-0-0-18-0-13-0
7992|data|Elf32_Sym <aMoveelement - byte_30E8, moveElement+1, 0x50, 0x12, 0, \; "moveElement"|78-24-0-0-205-209-0-0-80-0-0-0-18-0-13-0
8008|data|Elf32_Sym <aAsyncmonitorev - byte_30E8, asyncMonitorEventPipe+1, 0x60,\; "asyncMonitorEventPipe"|113-13-0-0-245-194-0-0-96-0-0-0-18-0-13-0
8024|data|Elf32_Sym <aValidateyesno - byte_30E8, validateYesNo+1, 0x14, 0x12, 0,\; "validateYesNo"|1-16-0-0-217-168-0-0-20-0-0-0-18-0-13-0
8040|data|Elf32_Sym <aSplitstring - byte_30E8, splitString+1, 0xF4, 0x12, 0, \; "splitString"|58-23-0-0-109-165-0-0-244-0-0-0-18-0-13-0
8056|data|Elf32_Sym <aAcquirefileloc - byte_30E8, acquireFileLock+1, 0xE, 0x12, \; "acquireFileLock"|62-31-0-0-209-156-0-0-14-0-0-0-18-0-13-0
8072|data|Elf32_Sym <aValidatechoice - byte_30E8, validateChoice+1, 0x4A, 0x12, \; "validateChoice"|199-31-0-0-65-168-0-0-74-0-0-0-18-0-13-0
8088|data|Elf32_Sym <aSettexttableby - byte_30E8, setTextTableByte+1, 0x26, \; "setTextTableByte"|19-8-0-0-177-4-1-0-38-0-0-0-18-0-13-0
8104|data|Elf32_Sym <aAsyncresetalar_0 - byte_30E8, asyncResetAlarmTo+1, 0x32, \; "asyncResetAlarmTo"|217-14-0-0-153-182-0-0-50-0-0-0-18-0-13-0
8120|data|Elf32_Sym <aDataStart+2 - byte_30E8, __data_start, 0, 0x20, 0, 0x18>; "data_start"|53-7-0-0-0-80-2-0-0-0-0-0-32-0-24-0
8136|data|Elf32_Sym <aAllocatedatait - byte_30E8, allocateDataItem+1, 0x70, \; "allocateDataItem"|204-17-0-0-173-10-1-0-112-0-0-0-18-0-13-0
8152|data|Elf32_Sym <aUnloadsharedob+2 - byte_30E8, loadSharedObject+1, 0x22, \; "loadSharedObject"|188-20-0-0-181-210-0-0-34-0-0-0-18-0-13-0
8168|data|Elf32_Sym <aDataStart+6 - byte_30E8, _start+1, 0, 0x12, 0, 0xD>; "_start"|57-7-0-0-225-107-0-0-0-0-0-0-18-0-13-0
8184|data|Elf32_Sym <aGetbasecharact - byte_30E8, getBaseCharacter+1, 0x58, \; "getBaseCharacter"|196-30-0-0-225-244-0-0-88-0-0-0-18-0-13-0
8200|data|Elf32_Sym <aEnd - byte_30E8, _end, 0, 0x10, 0, 0x19>; "__end__"|109-7-0-0-244-80-2-0-0-0-0-0-16-0-25-0
8216|data|Elf32_Sym <aGetdotoperand - byte_30E8, getDotOperand+1, 0x74, 0x12, 0,\; "getDotOperand"|250-31-0-0-81-236-0-0-116-0-0-0-18-0-13-0
8232|data|Elf32_Sym <aBrldotnumbers - byte_30E8, brlDotNumbers, 0x20, 0x11, 0, \; "brlDotNumbers"|237-23-0-0-76-46-1-0-32-0-0-0-17-0-15-0
8248|data|Elf32_Sym <aAsyncexecuteal - byte_30E8, asyncExecuteAlarmCallback+1, \; "asyncExecuteAlarmCallback"|159-9-0-0-61-183-0-0-244-0-0-0-18-0-13-0
8264|data|Elf32_Sym <aGetcharset - byte_30E8, getCharset+1, 6, 0x12, 0, 0xD>; "getCharset"|216-16-0-0-197-252-0-0-6-0-0-0-18-0-13-0
8280|data|Elf32_Sym <aGetpathdirecto - byte_30E8, getPathDirectory+1, 0xA0, \; "getPathDirectory"|86-25-0-0-237-148-0-0-160-0-0-0-18-0-13-0
8296|data|Elf32_Sym <aEdata - byte_30E8, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|64-7-0-0-52-80-2-0-0-0-0-0-16-0-24-0
8312|data|Elf32_Sym <aConvertwcharto - byte_30E8, convertWcharToUtf8+1, 0x9C, \; "convertWcharToUtf8"|72-10-0-0-133-248-0-0-156-0-0-0-18-0-13-0
8328|data|Elf32_Sym <aStandardinputn - byte_30E8, standardInputName, 0x11, 0x11,\; "standardInputName" ...|113-17-0-0-24-19-1-0-17-0-0-0-17-0-15-0
8344|data|Elf32_Sym <aIsnumber - byte_30E8, isNumber+1, 0x8C, 0x12, 0, 0xD>; "isNumber"|108-12-0-0-73-228-0-0-140-0-0-0-18-0-13-0
8360|data|Elf32_Sym <aDequeueitem - byte_30E8, dequeueItem+1, 0x1A, 0x12, 0, \; "dequeueItem"|47-10-0-0-53-207-0-0-26-0-0-0-18-0-13-0
8376|data|Elf32_Sym <aAsyncmonitorso_1 - byte_30E8, asyncMonitorSocketInput+1, \; "asyncMonitorSocketInput"|76-14-0-0-217-194-0-0-4-0-0-0-18-0-13-0
8392|data|Elf32_Sym <aGetqueuesize - byte_30E8, getQueueSize+1, 4, 0x12, 0, 0xD>; "getQueueSize"|243-20-0-0-41-208-0-0-4-0-0-0-18-0-13-0
8408|data|Elf32_Sym <aProgramname - byte_30E8, programName, 4, 0x11, 0, 0x19>; "programName"|6-23-0-0-216-80-2-0-4-0-0-0-17-0-25-0
8424|data|Elf32_Sym <aGetlockdescrip - byte_30E8, getLockDescriptor+1, 0x2C, \; "getLockDescriptor"|41-27-0-0-89-247-0-0-44-0-0-0-18-0-13-0
8440|data|Elf32_Sym <aWritabledirect - byte_30E8, writableDirectory, 4, 0x11, 0,\; "writableDirectory"|64-30-0-0-132-80-2-0-4-0-0-0-17-0-25-0
8456|data|Elf32_Sym <aExpandtimevalu - byte_30E8, expandTimeValue+1, 0x64, 0x12,\; "expandTimeValue"|81-12-0-0-225-172-0-0-100-0-0-0-18-0-13-0
8472|data|Elf32_Sym <aConvertcharact - byte_30E8, convertCharacterToDots+1, \; "convertCharacterToDots"|49-20-0-0-105-0-1-0-200-0-0-0-18-0-13-0
8488|data|Elf32_Sym <aIsoctaldigit - byte_30E8, isOctalDigit+1, 0x14, 0x12, 0, \; "isOctalDigit"|230-25-0-0-241-223-0-0-20-0-0-0-18-0-13-0
8504|data|Elf32_Sym <aIskeyword - byte_30E8, isKeyword+1, 0xE, 0x12, 0, 0xD>; "isKeyword"|40-17-0-0-57-228-0-0-14-0-0-0-18-0-13-0
8520|data|Elf32_Sym <aGetsharedsymbo - byte_30E8, getSharedSymbolName+1, 0x40, \; "getSharedSymbolName"|18-31-0-0-13-211-0-0-64-0-0-0-18-0-13-0
8536|data|Elf32_Sym <aLogmallocerror - byte_30E8, logMallocError+1, 0xC, 0x12, \; "logMallocError"|119-31-0-0-93-145-0-0-12-0-0-0-18-0-13-0
8552|data|Elf32_Sym <aGetelementiden - byte_30E8, getElementIdentifier+1, 4, \; "getElementIdentifier"|42-13-0-0-85-207-0-0-4-0-0-0-18-0-13-0
8568|data|Elf32_Sym <aDisablealllogc - byte_30E8, disableAllLogCategories+1, \; "disableAllLogCategories"|4-29-0-0-149-139-0-0-64-0-0-0-18-0-13-0
8584|data|Elf32_Sym <aStandardstream - byte_30E8, standardStreamArgument, 2, \; "standardStreamArgument" ...|167-11-0-0-44-19-1-0-2-0-0-0-17-0-15-0
8600|data|Elf32_Sym <aBssStart_0 - byte_30E8, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|83-7-0-0-52-80-2-0-0-0-0-0-16-0-25-0
8616|data|Elf32_Sym <aReadline - byte_30E8, readLine+1, 0xEC, 0x12, 0, 0xD>; "readLine"|120-25-0-0-105-157-0-0-236-0-0-0-18-0-13-0
8632|data|Elf32_Sym <aLinuxkeymapXte - byte_30E8, linuxKeyMap_xtE0, 0x100, 0x11,\; "linuxKeyMap_xtE0"|114-28-0-0-96-40-1-0-0-1-0-0-17-0-15-0
8648|data|Elf32_Sym <aFreelockdescri - byte_30E8, freeLockDescriptor+1, 0x12, \; "freeLockDescriptor"|173-29-0-0-9-247-0-0-18-0-0-0-18-0-13-0
8664|data|Elf32_Sym <aWritedots - byte_30E8, writeDots+1, 0x3C, 0x12, 0, 0xD>; "writeDots"|181-26-0-0-77-238-0-0-60-0-0-0-18-0-13-0
8680|data|Elf32_Sym <aLinuxkeymapXte_0 - byte_30E8, linuxKeyMap_xtE1, 0x100, \; "linuxKeyMap_xtE1"|39-32-0-0-96-39-1-0-0-1-0-0-17-0-15-0
8696|data|Elf32_Sym <aAsynccallwitho - byte_30E8, \; "asyncCallWithObtainableSignalsBlocked"|0-21-0-0-29-203-0-0-32-0-0-0-18-0-13-0
8712|data|Elf32_Sym <aGetprocessiden - byte_30E8, getProcessIdentifier+1, 4, \; "getProcessIdentifier"|214-31-0-0-105-119-0-0-4-0-0-0-18-0-13-0
8728|data|Elf32_Sym <aFinddataoperan - byte_30E8, findDataOperand+1, 0x4C, 0x12,\; "findDataOperand"|208-21-0-0-233-229-0-0-76-0-0-0-18-0-13-0
8744|data|Elf32_Sym <aLinuxkeymapcou - byte_30E8, linuxKeyMapCount, 1, 0x11, 0, \; "linuxKeyMapCount" ...|166-30-0-0-92-34-1-0-1-0-0-0-17-0-15-0
8760|data|Elf32_Sym <aAsyncdeallocat_3 - byte_30E8, asyncDeallocateSignalData+1,\; "asyncDeallocateSignalData"|26-28-0-0-157-197-0-0-26-0-0-0-18-0-13-0
8776|data|Elf32_Sym <aProcessassigno - byte_30E8, processAssignOperands+1, 0x78,\; "processAssignOperands"|119-30-0-0-245-240-0-0-120-0-0-0-18-0-13-0
8792|data|Elf32_Sym <aCancelprocess - byte_30E8, cancelProcess+1, 0x10, 0x12, 0,\; "cancelProcess"|79-13-0-0-125-119-0-0-16-0-0-0-18-0-13-0
8808|data|Elf32_Sym <aAsynchandlepen - byte_30E8, asyncHandlePendingSignal+1, \; "asyncHandlePendingSignal"|71-27-0-0-73-200-0-0-148-0-0-0-18-0-13-0
8824|data|Elf32_Sym <aIsunqualifiedd - byte_30E8, isUnqualifiedDevice+1, 0x1E, \; "isUnqualifiedDevice"|110-19-0-0-249-162-0-0-30-0-0-0-18-0-13-0
8840|data|Elf32_Sym <aAsyncgetthread - byte_30E8, asyncGetThreadSpecificData+1, \; "asyncGetThreadSpecificData"|33-24-0-0-209-178-0-0-132-0-0-0-18-0-13-0
8856|data|Elf32_Sym <aGetelementitem - byte_30E8, getElementItem+1, 4, 0x12, 0, \; "getElementItem"|44-9-0-0-89-207-0-0-4-0-0-0-18-0-13-0
8872|data|Elf32_Sym <aGetbootparamet - byte_30E8, getBootParameters+1, 0xDC, \; "getBootParameters"|141-16-0-0-153-136-0-0-220-0-0-0-18-0-13-0
8888|data|Elf32_Sym <aConvertdotstoc - byte_30E8, convertDotsToCharacter+1, \; "convertDotsToCharacter"|214-23-0-0-49-1-1-0-44-0-0-0-18-0-13-0
8904|data|Elf32_Sym <aAsyncaddsignal - byte_30E8, asyncAddSignalEntry+1, 0xE, \; "asyncAddSignalEntry"|84-8-0-0-113-197-0-0-14-0-0-0-18-0-13-0
8920|data|Elf32_Sym <aCreatedirector - byte_30E8, createDirectory+1, 0x50, 0x12,\; "createDirectory"|224-24-0-0-153-152-0-0-80-0-0-0-18-0-13-0
8936|data|Elf32_Sym <aUngetdatachara - byte_30E8, ungetDataCharacters+1, 0x2C, \; "ungetDataCharacters"|133-26-0-0-57-231-0-0-44-0-0-0-18-0-13-0
8952|data|Elf32_Sym <aNewqueue - byte_30E8, newQueue+1, 0x50, 0x12, 0, 0xD>; "newQueue"|157-30-0-0-93-207-0-0-80-0-0-0-18-0-13-0
8968|data|Elf32_Sym <aLogbytes - byte_30E8, logBytes+1, 0x50, 0x12, 0, 0xD>; "logBytes"|175-8-0-0-133-144-0-0-80-0-0-0-18-0-13-0
8984|data|Elf32_Sym <aAsyncexecuteio - byte_30E8, asyncExecuteIoCallback+1, \; "asyncExecuteIoCallback"|200-10-0-0-17-192-0-0-108-1-0-0-18-0-13-0
9000|data|Elf32_Sym <aRequeueelement - byte_30E8, requeueElement+1, 0x2A, 0x12, \; "requeueElement"|129-14-0-0-161-209-0-0-42-0-0-0-18-0-13-0
9016|data|Elf32_Sym <aBssEnd+1 - byte_30E8, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|98-7-0-0-244-80-2-0-0-0-0-0-16-0-25-0
9032|data|Elf32_Sym <aParsecellsoper - byte_30E8, parseCellsOperand+1, 0x140, \; "parseCellsOperand"|60-24-0-0-197-236-0-0-64-1-0-0-18-0-13-0
9048|data|Elf32_Sym <aSetglobaltable - byte_30E8, setGlobalTableVariables+1, \; "setGlobalTableVariables"|17-27-0-0-189-229-0-0-44-0-0-0-18-0-13-0
9064|data|Elf32_Sym <aResetoptions - byte_30E8, resetOptions+1, 0x40, 0x12, 0, \; "resetOptions"|124-15-0-0-93-123-0-0-64-0-0-0-18-0-13-0
9080|data|Elf32_Sym <aGetaddressname - byte_30E8, getAddressName+1, 0x58, 0x12, \; "getAddressName"|235-31-0-0-225-147-0-0-88-0-0-0-18-0-13-0
9096|data|Elf32_Sym <aGetdatacharact - byte_30E8, getDataCharacter+1, 0x1A, \; "getDataCharacter"|243-19-0-0-29-231-0-0-26-0-0-0-18-0-13-0
9112|data|Elf32_Sym <aAsyncmonitorso - byte_30E8, asyncMonitorSocketAlert+1, 4, \; "asyncMonitorSocketAlert"|121-9-0-0-225-194-0-0-4-0-0-0-18-0-13-0
9128|data|Elf32_Sym <aAsyncwritesock - byte_30E8, asyncWriteSocket+1, 0xA, 0x12,\; "asyncWriteSocket"|88-23-0-0-233-194-0-0-10-0-0-0-18-0-13-0
9144|data|Elf32_Sym <aUnlockcharset+2 - byte_30E8, lockCharset+1, 0x24, 0x12, 0,\; "lockCharset"|17-9-0-0-205-252-0-0-36-0-0-0-18-0-13-0
9160|data|Elf32_Sym <aAsyncreadsocke - byte_30E8, asyncReadSocket+1, 4, 0x12, 0,\; "asyncReadSocket"|156-12-0-0-229-194-0-0-4-0-0-0-18-0-13-0
9176|data|Elf32_Sym <aAsyncmonitorfi - byte_30E8, asyncMonitorFileOutput+1, \; "asyncMonitorFileOutput"|65-18-0-0-197-193-0-0-72-0-0-0-18-0-13-0
9192|data|Elf32_Sym <aAsyncdeallocat - byte_30E8, asyncDeallocateWaitData+1, 8, \; "asyncDeallocateWaitData"|158-7-0-0-129-179-0-0-8-0-0-0-18-0-13-0
9208|data|Elf32_Sym <aInstallservice - byte_30E8, installService+1, 0x14, 0x12, \; "installService"|16-18-0-0-65-119-0-0-20-0-0-0-18-0-13-0
9224|data|Elf32_Sym <aCompiletexttab - byte_30E8, compileTextTable+1, 0x3C, \; "compileTextTable"|197-23-0-0-57-10-1-0-60-0-0-0-18-0-13-0
9240|data|Elf32_Sym <aLogcategorypre - byte_30E8, logCategoryPrefix_disable, 1, \; "logCategoryPrefix_disable" ...|155-28-0-0-160-23-1-0-1-0-0-0-17-0-15-0
9256|data|Elf32_Sym <aUnsetaddressna - byte_30E8, unsetAddressName+1, 0x68, \; "unsetAddressName"|28-29-0-0-121-147-0-0-104-0-0-0-18-0-13-0
9272|data|Elf32_Sym <aIsloglevel - byte_30E8, isLogLevel+1, 0xA0, 0x12, 0, 0xD>; "isLogLevel"|71-32-0-0-57-167-0-0-160-0-0-0-18-0-13-0
9288|data|Elf32_Sym <aGetnamedpipedi - byte_30E8, getNamedPipeDirectory+1, 0xC, \; "getNamedPipeDirectory"|204-29-0-0-157-159-0-0-12-0-0-0-18-0-13-0
9304|data|Elf32_Sym <aFormatseconds - byte_30E8, formatSeconds+1, 0x50, 0x12, 0,\; "formatSeconds"|196-19-0-0-69-173-0-0-80-0-0-0-18-0-13-0
9320|data|Elf32_Sym <aGetdatastring - byte_30E8, getDataString+1, 0x54, 0x12, 0,\; "getDataString"|17-30-0-0-49-235-0-0-84-0-0-0-18-0-13-0
9336|data|Elf32_Sym <aProcesselseope - byte_30E8, processElseOperands+1, 0x60, \; "processElseOperands"|40-14-0-0-109-241-0-0-96-0-0-0-18-0-13-0
9352|data|Elf32_Sym <aRegistercharac - byte_30E8, registerCharacterSet+1, 0xE8, \; "registerCharacterSet"|120-16-0-0-25-255-0-0-232-0-0-0-18-0-13-0
9368|data|Elf32_Sym <aResolvedevicen - byte_30E8, resolveDeviceName+1, 0xCC, \; "resolveDeviceName"|15-16-0-0-245-161-0-0-204-0-0-0-18-0-13-0
9384|data|Elf32_Sym <aSetlogcategory - byte_30E8, setLogCategory+1, 0xAC, 0x12, \; "setLogCategory"|50-17-0-0-213-139-0-0-172-0-0-0-18-0-13-0
9400|data|Elf32_Sym <aProgrampath - byte_30E8, programPath, 4, 0x11, 0, 0x19>; "programPath"|59-27-0-0-220-80-2-0-4-0-0-0-17-0-25-0
9416|data|Elf32_Sym <aRemoveservice - byte_30E8, removeService+1, 0x14, 0x12, 0,\; "removeService"|244-9-0-0-85-119-0-0-20-0-0-0-18-0-13-0
9432|data|Elf32_Sym <aEnqueueitem - byte_30E8, enqueueItem+1, 0x5C, 0x12, 0, \; "enqueueItem"|192-29-0-0-69-209-0-0-92-0-0-0-18-0-13-0
9448|data|Elf32_Sym <aCancelprogram - byte_30E8, cancelProgram+1, 0xB8, 0x12, 0,\; "cancelProgram"|240-8-0-0-169-114-0-0-184-0-0-0-18-0-13-0
9464|data|Elf32_Sym <aFindelementwit - byte_30E8, findElementWithItem+1, 0x10, \; "findElementWithItem"|154-17-0-0-41-210-0-0-16-0-0-0-18-0-13-0
9480|data|Elf32_Sym <aCreatepidfile - byte_30E8, createPidFile+1, 0x1FC, 0x12, \; "createPidFile"|95-20-0-0-173-112-0-0-252-1-0-0-18-0-13-0
9496|data|Elf32_Sym <aCreatesignalsa - byte_30E8, createSignalSafeThread+1, \; "createSignalSafeThread"|191-26-0-0-233-204-0-0-152-0-0-0-18-0-13-0
9512|data|Elf32_Sym <aAsyncdiscardev - byte_30E8, asyncDiscardEvent+1, 0x30, \; "asyncDiscardEvent"|234-28-0-0-53-196-0-0-48-0-0-0-18-0-13-0
9528|data|Elf32_Sym <aAsyncnewevent - byte_30E8, asyncNewEvent+1, 0x94, 0x12, 0,\; "asyncNewEvent"|159-29-0-0-161-195-0-0-148-0-0-0-18-0-13-0
9544|data|Elf32_Sym <aAsynchandleadd - byte_30E8, asyncHandleAddTaskEvent+1, 4, \; "asyncHandleAddTaskEvent"|2-10-0-0-145-184-0-0-4-0-0-0-18-0-13-0
9560|data|Elf32_Sym <aLibcCsuFini+0xA - byte_30E8, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|41-30-0-0-232-16-1-0-0-0-0-0-18-0-14-0
9576|data|Elf32_Sym <aGetdataitem - byte_30E8, getDataItem+1, 6, 0x12, 0, 0xD>; "getDataItem"|5-30-0-0-29-11-1-0-6-0-0-0-18-0-13-0
9592|data|Elf32_Sym <aEnableuinputev - byte_30E8, enableUinputEventType+1, 0x2C,\; "enableUinputEventType"|112-18-0-0-237-216-0-0-44-0-0-0-18-0-13-0
9608|data|Elf32_Sym <aIoStdinUsed - byte_30E8, _IO_stdin_used, 4, 0x11, 0, 0xF>; "_IO_stdin_used"|210-11-0-0-240-16-1-0-4-0-0-0-17-0-15-0
9624|data|Elf32_Sym <aExtendstringse - byte_30E8, extendStringSetting+1, 0xBC, \; "extendStringSetting"|68-15-0-0-145-164-0-0-188-0-0-0-18-0-13-0
9640|data|Elf32_Sym <aDataStart - byte_30E8, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|51-7-0-0-0-80-2-0-0-0-0-0-16-0-24-0
9656|data|Elf32_Sym <aInitializehost - byte_30E8, \; "initializeHostCommandOptions"|244-26-0-0-61-220-0-0-18-0-0-0-18-0-13-0
9672|data|Elf32_Sym <aGetqueuehead - byte_30E8, getQueueHead+1, 4, 0x12, 0, 0xD>; "getQueueHead"|36-8-0-0-57-208-0-0-4-0-0-0-18-0-13-0
9688|data|Elf32_Sym <aAsyncdiscardha - byte_30E8, asyncDiscardHandle+1, 4, 0x12,\; "asyncDiscardHandle"|224-20-0-0-249-177-0-0-4-0-0-0-18-0-13-0
9704|data|Elf32_Sym <aLibcCsuFini - byte_30E8, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|31-30-0-0-197-16-1-0-2-0-0-0-18-0-13-0
9720|data|Elf32_Sym <aAsyncsetalarmi - byte_30E8, asyncSetAlarmIn+1, 0x50, 0x12,\; "asyncSetAlarmIn"|141-30-0-0-73-182-0-0-80-0-0-0-18-0-13-0
9736|data|Elf32_Sym <aDeleteelement - byte_30E8, deleteElement+1, 0x58, 0x12, 0,\; "deleteElement"|133-32-0-0-221-206-0-0-88-0-0-0-18-0-13-0
9752|data|Elf32_Sym <aJoinstrings - byte_30E8, joinStrings+1, 0x80, 0x12, 0, \; "joinStrings"|69-12-0-0-229-163-0-0-128-0-0-0-18-0-13-0
9768|data|Elf32_Sym <aSetthreadname - byte_30E8, setThreadName+1, 0x12, 0x12, 0,\; "setThreadName"|198-13-0-0-45-206-0-0-18-0-0-0-18-0-13-0
9784|data|Elf32_Sym <aAsyncwritefile - byte_30E8, asyncWriteFile+1, 0x44, 0x12, \; "asyncWriteFile"|139-22-0-0-149-194-0-0-68-0-0-0-18-0-13-0
9800|data|Elf32_Sym <aLogpossiblecau - byte_30E8, logPossibleCause+1, 0x10, \; "logPossibleCause"|183-10-0-0-145-145-0-0-16-0-0-0-18-0-13-0
9816|data|Elf32_Sym <aUnloadsharedob - byte_30E8, unloadSharedObject+1, 0x18, \; "unloadSharedObject"|186-20-0-0-217-210-0-0-24-0-0-0-18-0-13-0
9832|data|Elf32_Sym <aProcesslines - byte_30E8, processLines+1, 0x98, 0x12, 0, \; "processLines"|13-28-0-0-85-158-0-0-152-0-0-0-18-0-13-0
9848|data|Elf32_Sym <aGetdataoperand - byte_30E8, getDataOperand+1, 0x34, 0x12, \; "getDataOperand"|227-16-0-0-101-231-0-0-52-0-0-0-18-0-13-0
9864|data|Elf32_Sym <aUnsettexttable - byte_30E8, unsetTextTableCharacter+1, \; "unsetTextTableCharacter"|38-31-0-0-93-4-1-0-84-0-0-0-18-0-13-0
9880|data|Elf32_Sym <aDeleteelements - byte_30E8, deleteElements+1, 0x14, 0x12, \; "deleteElements"|21-15-0-0-173-207-0-0-20-0-0-0-18-0-13-0
9896|data|Elf32_Sym <aDeallocatequeu - byte_30E8, deallocateQueue+1, 0x12, 0x12,\; "deallocateQueue"|105-26-0-0-193-207-0-0-18-0-0-0-18-0-13-0
9912|data|Elf32_Sym <aOpencharacterd - byte_30E8, openCharacterDevice+1, 0x198, \; "openCharacterDevice"|30-12-0-0-137-213-0-0-152-1-0-0-18-0-13-0
9928|data|Elf32_Sym <aPthreadRwlockI+0xE - byte_30E8, .init_proc, 0, 0x12, 0, \; "_init"|54-2-0-0-92-98-0-0-0-0-0-0-18-0-11-0
9944|data|Elf32_Sym <aDestroytexttab - byte_30E8, destroyTextTableData+1, 0x14, \; "destroyTextTableData"|200-7-0-0-21-5-1-0-20-0-0-0-18-0-13-0
9960|data|Elf32_Sym <aConverttexttow - byte_30E8, convertTextToWchars+1, 0xB0, \; "convertTextToWchars"|22-13-0-0-201-247-0-0-176-0-0-0-18-0-13-0
9976|data|Elf32_Sym <aLogdata - byte_30E8, logData+1, 0x298, 0x12, 0, 0xD>; "logData"|163-15-0-0-113-141-0-0-152-2-0-0-18-0-13-0
9992|data|Elf32_Sym <aMillisecondsti - byte_30E8, millisecondsTillNextMinute+1, \; "millisecondsTillNextMinute"|248-7-0-0-57-175-0-0-96-0-0-0-18-0-13-0
10008|data|Elf32_Sym <aDestroytexttab_0 - byte_30E8, destroyTextTable+1, 0x1A, \; "destroyTextTable"|232-18-0-0-161-5-1-0-26-0-0-0-18-0-13-0
10024|data|Elf32_Sym <aLinuxkeymapAte - byte_30E8, linuxKeyMap_atE0, 0x100, 0x11,\; "linuxKeyMap_atE0"|131-20-0-0-96-37-1-0-0-1-0-0-17-0-15-0
10040|data|Elf32_Sym <aGetworkingdire - byte_30E8, getWorkingDirectory+1, 0x8C, \; "getWorkingDirectory"|65-17-0-0-177-153-0-0-140-0-0-0-18-0-13-0
10056|data|Elf32_Sym <aGettexttablehe - byte_30E8, getTextTableHeader+1, 6, 0x12,\; "getTextTableHeader"|184-25-0-0-9-2-1-0-6-0-0-0-18-0-13-0
10072|data|Elf32_Sym <aLibcCsuInit - byte_30E8, __libc_csu_init+1, 0x40, 0x12, 0,\; "__libc_csu_init"|165-26-0-0-133-16-1-0-64-0-0-0-18-0-13-0
10088|data|Elf32_Sym <aLinuxkeymapAte_0 - byte_30E8, linuxKeyMap_atE1, 0x100, \; "linuxKeyMap_atE1"|103-29-0-0-96-36-1-0-0-1-0-0-17-0-15-0
10104|data|Elf32_Sym <aAttemptfileloc - byte_30E8, attemptFileLock+1, 0xE, 0x12, \; "attemptFileLock"|154-22-0-0-225-156-0-0-14-0-0-0-18-0-13-0
10120|data|Elf32_Sym <aRegisterprogra_0 - byte_30E8, registerProgramStream+1, \; "registerProgramStream"|109-20-0-0-249-156-0-0-16-0-0-0-18-0-13-0
10136|data|Elf32_Sym <aIsexplicitpath - byte_30E8, isExplicitPath+1, 0x10, 0x12, \; "isExplicitPath"|61-22-0-0-197-149-0-0-16-0-0-0-18-0-13-0
10152|data|Elf32_Sym <aIsfloat - byte_30E8, isFloat+1, 0x50, 0x12, 0, 0xD>; "isFloat"|252-28-0-0-237-168-0-0-80-0-0-0-18-0-13-0
10168|data|Elf32_Sym <aMakeutf8fromwc - byte_30E8, makeUtf8FromWchars+1, 0xA8, \; "makeUtf8FromWchars"|224-22-0-0-225-250-0-0-168-0-0-0-18-0-13-0
10184|data|Elf32_Sym <aCloselogfile - byte_30E8, closeLogFile+1, 0x18, 0x12, 0, \; "closeLogFile"|183-30-0-0-249-140-0-0-24-0-0-0-18-0-13-0
10200|data|Elf32_Sym <aUnlockmutex - byte_30E8, unlockMutex+1, 0x20, 0x12, 0, \; "unlockMutex"|98-21-0-0-233-205-0-0-32-0-0-0-18-0-13-0
10216|data|Elf32_Sym <aSettexttablegl - byte_30E8, setTextTableGlyph+1, 0x64, \; "setTextTableGlyph"|12-26-0-0-173-3-1-0-100-0-0-0-18-0-13-0
10232|data|Elf32_Sym <aWritehexadecim - byte_30E8, writeHexadecimalCharacter+1, \; "writeHexadecimalCharacter"|194-12-0-0-133-235-0-0-80-0-0-0-18-0-13-0
10248|data|Elf32_Sym <aReleasefileloc - byte_30E8, releaseFileLock+1, 8, 0x12, 0,\; "releaseFileLock"|123-22-0-0-241-156-0-0-8-0-0-0-18-0-13-0
10264|data|Elf32_Sym <aMakewritablepa - byte_30E8, makeWritablePath+1, 0x16, \; "makeWritablePath"|217-28-0-0-153-153-0-0-22-0-0-0-18-0-13-0
10280|data|Elf32_Sym <aGetcharacterwi - byte_30E8, getCharacterWidth+1, 0x8C, \; "getCharacterWidth"|213-30-0-0-25-246-0-0-140-0-0-0-18-0-13-0
10296|data|Elf32_Sym <aStderrloglevel - byte_30E8, stderrLogLevel, 1, 0x11, 0, \; "stderrLogLevel"|29-9-0-0-9-80-2-0-1-0-0-0-17-0-24-0
10312|data|Elf32_Sym <aTestpath - byte_30E8, testPath+1, 0x10, 0x12, 0, 0xD>; "testPath"|146-28-0-0-189-151-0-0-16-0-0-0-18-0-13-0
10328|data|Elf32_Sym <aReplacetexttab - byte_30E8, replaceTextTable+1, 0xA4, \; "replaceTextTable"|160-18-0-0-93-1-1-0-164-0-0-0-18-0-13-0
10344|data|Elf32_Sym <aAsynccallwiths_0 - byte_30E8, \; "asyncCallWithSignalsBlocked"|5-19-0-0-221-198-0-0-76-0-0-0-18-0-13-0
10360|data|Elf32_Sym <aConvertwcharto_0 - byte_30E8, convertWcharToChar+1, 0x88, \; "convertWcharToChar"|190-22-0-0-93-254-0-0-136-0-0-0-18-0-13-0
10376|data|Elf32_Sym <aNewuinputobjec - byte_30E8, newUinputObject+1, 0x1A8, \; "newUinputObject"|84-28-0-0-33-215-0-0-168-1-0-0-18-0-13-0
10392|data|Elf32_Sym <aEndprogram - byte_30E8, endProgram+1, 0x78, 0x12, 0, 0xD>; "endProgram"|99-22-0-0-53-112-0-0-120-0-0-0-18-0-13-0
10408|data|Elf32_Sym <aAsyncrevertsig - byte_30E8, asyncRevertSignal+1, 8, 0x12, \; "asyncRevertSignal"|146-25-0-0-49-198-0-0-8-0-0-0-18-0-13-0
10424|data|Elf32_Sym <aGetstackhead - byte_30E8, getStackHead+1, 8, 0x12, 0, 0xD>; "getStackHead"|191-17-0-0-61-208-0-0-8-0-0-0-18-0-13-0
10440|data|Elf32_Sym <aAsyncmonitorsi - byte_30E8, asyncMonitorSignal+1, 0x3C, \; "asyncMonitorSignal"|77-19-0-0-61-203-0-0-60-0-0-0-18-0-13-0
10456|data|Elf32_Sym <aGetdevicedirec - byte_30E8, getDeviceDirectory+1, 0x10C, \; "getDeviceDirectory"|50-12-0-0-213-160-0-0-12-1-0-0-18-0-13-0
10472|data|Elf32_Sym <aProcessconditi - byte_30E8, processConditionOperands+1, \; "processConditionOperands"|105-23-0-0-177-239-0-0-252-0-0-0-18-0-13-0
10488|data|Elf32_Sym <aAsyncignoresig - byte_30E8, asyncIgnoreSignal+1, 8, 0x12, \; "asyncIgnoreSignal"|59-19-0-0-41-198-0-0-8-0-0-0-18-0-13-0
10504|data|Elf32_Sym <aNewdataarea - byte_30E8, newDataArea+1, 0x14, 0x12, 0, \; "newDataArea"|203-25-0-0-129-10-1-0-20-0-0-0-18-0-13-0
10520|data|Elf32_Sym <aComparekeyword - byte_30E8, compareKeywords+1, 0x1A, 0x12,\; "compareKeywords"|201-9-0-0-29-228-0-0-26-0-0-0-18-0-13-0
10536|data|Elf32_Sym <aAsyncmakeeleme - byte_30E8, asyncMakeElementHandle+1, \; "asyncMakeElementHandle"|96-31-0-0-53-178-0-0-60-0-0-0-18-0-13-0
10552|data|Elf32_Sym <aProcessinclude - byte_30E8, processIncludeOperands+1, \; "processIncludeOperands"|159-16-0-0-65-244-0-0-92-0-0-0-18-0-13-0
10568|data|Elf32_Sym <aLinuxkeymapdes - byte_30E8, linuxKeyMapDescriptors, 0x60, \; "linuxKeyMapDescriptors"|76-22-0-0-252-74-2-0-96-0-0-0-17-0-21-0
10584|data|Elf32_Sym <aHandlebestchar - byte_30E8, handleBestCharacter+1, 0x38, \; "handleBestCharacter"|93-13-0-0-165-246-0-0-56-0-0-0-18-0-13-0
10600|data|Elf32_Sym <aWriteutf8cells - byte_30E8, writeUtf8Cells+1, 0x26, 0x12, \; "writeUtf8Cells"|171-15-0-0-225-238-0-0-38-0-0-0-18-0-13-0
10616|data|Elf32_Sym <aBssStart - byte_30E8, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|71-7-0-0-52-80-2-0-0-0-0-0-16-0-25-0
10632|data|Elf32_Sym <aComparekeyword_0 - byte_30E8, compareKeyword+1, 0x52, \; "compareKeyword"|148-20-0-0-201-227-0-0-82-0-0-0-18-0-13-0
10648|data|Elf32_Sym <aIsunsignedinte - byte_30E8, isUnsignedInteger+1, 0x4C, \; "isUnsignedInteger"|78-31-0-0-237-166-0-0-76-0-0-0-18-0-13-0
10664|data|Elf32_Sym <aCategoryloglev - byte_30E8, categoryLogLevel, 1, 0x11, 0, \; "categoryLogLevel"|138-8-0-0-8-80-2-0-1-0-0-0-17-0-24-0
10680|data|Elf32_Sym <aIsposixlocale - byte_30E8, isPosixLocale+1, 0x24, 0x12, 0,\; "isPosixLocale"|106-10-0-0-165-247-0-0-36-0-0-0-18-0-13-0
10696|data|Elf32_Sym <aValidatefloat - byte_30E8, validateFloat+1, 0x78, 0x12, 0,\; "validateFloat"|76-9-0-0-61-169-0-0-120-0-0-0-18-0-13-0
10712|data|Elf32_Sym <aAsyncgethandle - byte_30E8, asyncGetHandleElement+1, 0x36,\; "asyncGetHandleElement"|172-14-0-0-193-177-0-0-54-0-0-0-18-0-13-0
10728|data|Elf32_Sym <aProcesstexttab - byte_30E8, processTextTableStream+1, 0xC,\; "processTextTableStream"|194-14-0-0-45-10-1-0-12-0-0-0-18-0-13-0
10744|data|Elf32_Sym <aProcessendifop - byte_30E8, processEndIfOperands+1, 0x3C, \; "processEndIfOperands"|65-16-0-0-205-241-0-0-60-0-0-0-18-0-13-0
10760|data|Elf32_Sym <aFixinstallpath - byte_30E8, fixInstallPaths+1, 0x118, \; "fixInstallPaths"|63-13-0-0-117-117-0-0-24-1-0-0-18-0-13-0
10776|data|Elf32_Sym <aGetelementqueu - byte_30E8, getElementQueue+1, 4, 0x12, 0,\; "getElementQueue"|88-15-0-0-81-207-0-0-4-0-0-0-18-0-13-0
10792|data|Elf32_Sym <aBrldotbits - byte_30E8, brlDotBits, 8, 0x11, 0, 0xF>; "brlDotBits"|84-20-0-0-68-46-1-0-8-0-0-0-17-0-15-0
10808|data|Elf32_Sym <aReadport1 - byte_30E8, readPort1+1, 4, 0x12, 0, 0xD>; "readPort1"|138-29-0-0-209-211-0-0-4-0-0-0-18-0-13-0
10824|data|Elf32_Sym <aAsyncmonitorfi_1 - byte_30E8, asyncMonitorFileInput+1, \; "asyncMonitorFileInput"|19-22-0-0-125-193-0-0-72-0-0-0-18-0-13-0
10840|data|Elf32_Sym <aFindsharedsymb - byte_30E8, findSharedSymbol+1, 0x1C, \; "findSharedSymbol"|47-30-0-0-241-210-0-0-28-0-0-0-18-0-13-0
10856|data|Elf32_Sym <aConvertutf8toc - byte_30E8, convertUtf8ToChar+1, 0x14, \; "convertUtf8ToChar"|120-8-0-0-165-251-0-0-20-0-0-0-18-0-13-0
10872|data|Elf32_Sym <aHasfileextensi - byte_30E8, hasFileExtension+1, 0x1A, \; "hasFileExtension"|59-9-0-0-213-150-0-0-26-0-0-0-18-0-13-0
10888|data|Elf32_Sym <aReleaselock - byte_30E8, releaseLock+1, 4, 0x12, 0, 0xD>; "releaseLock"|72-20-0-0-85-247-0-0-4-0-0-0-18-0-13-0
10904|data|Elf32_Sym <aMaketexttablep - byte_30E8, makeTextTablePath+1, 0x30, \; "makeTextTablePath"|120-29-0-0-201-5-1-0-48-0-0-0-18-0-13-0
10920|data|Elf32_Sym <aAsyncsetsignal - byte_30E8, asyncSetSignalBlocked+1, 0x4C,\; "asyncSetSignalBlocked"|240-24-0-0-61-198-0-0-76-0-0-0-18-0-13-0
10936|data|Elf32_Sym <aMillisecondsbe - byte_30E8, millisecondsBetween+1, 0x64, \; "millisecondsBetween"|90-9-0-0-145-174-0-0-100-0-0-0-18-0-13-0
10952|data|Elf32_Sym <aAsyncobtainsig - byte_30E8, asyncObtainSignalNumber+1, \; "asyncObtainSignalNumber"|253-14-0-0-29-204-0-0-116-0-0-0-18-0-13-0
10968|data|Elf32_Sym <aInitializesyst - byte_30E8, initializeSystemObject+1, 2, \; "initializeSystemObject"|131-17-0-0-153-219-0-0-2-0-0-0-18-0-13-0
10984|data|Elf32_Sym <aWritesocketdes - byte_30E8, writeSocketDescriptor+1, 6, \; "writeSocketDescriptor"|49-8-0-0-1-160-0-0-6-0-0-0-18-0-13-0
11000|data|Elf32_Sym <aLinuxkeymapXt0 - byte_30E8, linuxKeyMap_xt00, 0x100, 0x11,\; "linuxKeyMap_xt00"|103-25-0-0-96-41-1-0-0-1-0-0-17-0-15-0
11016|data|Elf32_Sym <aAsyncdeallocat_1 - byte_30E8, asyncDeallocateAlarmData+1, \; "asyncDeallocateAlarmData"|243-25-0-0-241-181-0-0-26-0-0-0-18-0-13-0
11032|data|Elf32_Sym <aApproximatedel - byte_30E8, approximateDelay+1, 0x80, \; "approximateDelay"|184-8-0-0-129-176-0-0-128-0-0-0-18-0-13-0
11048|data|Elf32_Sym <aAsyncexecuteta - byte_30E8, asyncExecuteTaskCallback+1, \; "asyncExecuteTaskCallback"|234-12-0-0-9-185-0-0-60-0-0-0-18-0-13-0
11064|data|Elf32_Sym <aGetcharacterby - byte_30E8, getCharacterByName+1, 0x48, \; "getCharacterByName"|210-19-0-0-209-245-0-0-72-0-0-0-18-0-13-0
11080|data|Elf32_Sym <aMillisecondsti_0 - byte_30E8, \; "millisecondsTillNextSecond"|228-27-0-0-245-174-0-0-68-0-0-0-18-0-13-0
11096|data|Elf32_Sym <aNewuinputkeybo - byte_30E8, newUinputKeyboard+1, 0xE0, \; "newUinputKeyboard"|206-24-0-0-185-218-0-0-224-0-0-0-18-0-13-0
11112|data|Elf32_Sym <aFixinstallpath_0 - byte_30E8, fixInstallPath+1, 0x34, \; "fixInstallPath"|226-29-0-0-141-118-0-0-52-0-0-0-18-0-13-0
11128|data|Elf32_Sym <aGetqueueelemen - byte_30E8, getQueueElement+1, 0x30, 0x12,\; "getQueueElement"|139-23-0-0-69-208-0-0-48-0-0-0-18-0-13-0
11144|data|Elf32_Sym <aMaketimevalue - byte_30E8, makeTimeValue+1, 0x78, 0x12, 0,\; "makeTimeValue"|96-19-0-0-105-172-0-0-120-0-0-0-18-0-13-0
11160|data|Elf32_Sym <aWriteescapedch_0 - byte_30E8, writeEscapedCharacters+1, \; "writeEscapedCharacters"|110-32-0-0-41-236-0-0-40-0-0-0-18-0-13-0
11176|data|Elf32_Sym <aAsyncclaimsign - byte_30E8, asyncClaimSignalNumber+1, \; "asyncClaimSignalNumber"|163-20-0-0-121-203-0-0-108-0-0-0-18-0-13-0
11192|data|Elf32_Sym <aTestfilepath - byte_30E8, testFilePath+1, 0x58, 0x12, 0, \; "testFilePath"|85-21-0-0-205-151-0-0-88-0-0-0-18-0-13-0
11208|data|Elf32_Sym <aDestroyuinputo - byte_30E8, destroyUinputObject+1, 0x18, \; "destroyUinputObject"|129-27-0-0-89-218-0-0-24-0-0-0-18-0-13-0
11224|data|Elf32_Sym <aLinuxkeymapHid - byte_30E8, linuxKeyMap_hid, 0x100, 0x11, \; "linuxKeyMap_hid"|190-24-0-0-96-34-1-0-0-1-0-0-17-0-15-0
11240|data|Elf32_Sym <aEnableports - byte_30E8, enablePorts+1, 0x44, 0x12, 0, \; "enablePorts"|101-17-0-0-77-211-0-0-68-0-0-0-18-0-13-0
11256|data|Elf32_Sym <aWriteutf8chara_0 - byte_30E8, writeUtf8Characters+1, 0x28,\; "writeUtf8Characters"|241-29-0-0-129-253-0-0-40-0-0-0-18-0-13-0
11272|data|Elf32_Sym <aAsyncissignalb - byte_30E8, asyncIsSignalBlocked+1, 0x54, \; "asyncIsSignalBlocked"|98-30-0-0-137-198-0-0-84-0-0-0-18-0-13-0
11288|data|Elf32_Sym <aGetqueuedata - byte_30E8, getQueueData+1, 4, 0x12, 0, 0xD>; "getQueueData"|235-7-0-0-45-208-0-0-4-0-0-0-18-0-13-0
11304|data|Elf32_Sym <aCreateuinputde - byte_30E8, createUinputDevice+1, 0x24, \; "createUinputDevice"|64-11-0-0-201-216-0-0-36-0-0-0-18-0-13-0
11320|data|Elf32_Sym <aResetdataarea - byte_30E8, resetDataArea+1, 0xA, 0x12, 0, \; "resetDataArea"|100-28-0-0-117-10-1-0-10-0-0-0-18-0-13-0
11336|data|Elf32_Sym <aSavedataitem - byte_30E8, saveDataItem+1, 0x28, 0x12, 0, \; "saveDataItem"|71-8-0-0-41-11-1-0-40-0-0-0-18-0-13-0
11352|data|Elf32_Sym <aReleasepressed - byte_30E8, releasePressedKeys+1, 0x56, \; "releasePressedKeys"|51-25-0-0-1-218-0-0-86-0-0-0-18-0-13-0
11368|data|Elf32_Sym <aGettextlength - byte_30E8, getTextLength+1, 0xA, 0x12, 0, \; "getTextLength"|239-11-0-0-121-248-0-0-10-0-0-0-18-0-13-0
11384|data|Elf32_Sym <aCreateanonymou - byte_30E8, createAnonymousPipe+1, 0x50, \; "createAnonymousPipe"|13-24-0-0-169-159-0-0-80-0-0-0-18-0-13-0
11400|data|Elf32_Sym <aWritekeyevent - byte_30E8, writeKeyEvent+1, 0x44, 0x12, 0,\; "writeKeyEvent"|214-26-0-0-189-217-0-0-68-0-0-0-18-0-13-0
11416|data|Elf32_Sym <aUnlockmutex+2 - byte_30E8, lockMutex+1, 0x20, 0x12, 0, \; "lockMutex"|100-21-0-0-201-205-0-0-32-0-0-0-18-0-13-0
11432|data|Elf32_Sym <aGetmonotonicti - byte_30E8, getMonotonicTime+1, 0x84, \; "getMonotonicTime"|51-15-0-0-153-175-0-0-132-0-0-0-18-0-13-0
11448|data|Elf32_Sym <aGetprogrampath - byte_30E8, getProgramPath+1, 0x80, 0x12, \; "getProgramPath"|36-15-0-0-193-118-0-0-128-0-0-0-18-0-13-0
11464|data|Elf32_Sym <aAsyncaddtask - byte_30E8, asyncAddTask+1, 0x40, 0x12, 0, \; "asyncAddTask"|31-18-0-0-177-184-0-0-64-0-0-0-18-0-13-0
11480|data|Elf32_Sym <aLogunsupported - byte_30E8, logUnsupportedOperation+1, \; "logUnsupportedOperation"|155-13-0-0-121-145-0-0-22-0-0-0-18-0-13-0
11496|data|Elf32_Sym <aAsyncdeallocat_0 - byte_30E8, asyncDeallocateIoData+1, \; "asyncDeallocateIoData"|172-12-0-0-245-191-0-0-26-0-0-0-18-0-13-0
11512|data|Elf32_Sym <aVlogmessage - byte_30E8, vlogMessage+1, 0x3C, 0x12, 0, \; "vlogMessage"|153-26-0-0-9-144-0-0-60-0-0-0-18-0-13-0
11528|data|Elf32_Sym <aSelecttexttabl - byte_30E8, selectTextTable+1, 0xC4, 0x12,\; "selectTextTable"|212-13-0-0-45-6-1-0-196-0-0-0-18-0-13-0
11544|data|Elf32_Sym <aIsqualifieddev - byte_30E8, isQualifiedDevice+1, 0x36, \; "isQualifiedDevice"|198-16-0-0-193-162-0-0-54-0-0-0-18-0-13-0
11560|data|Elf32_Sym <aGethomedirecto - byte_30E8, getHomeDirectory+1, 0x38, \; "getHomeDirectory"|255-17-0-0-137-154-0-0-56-0-0-0-18-0-13-0
11576|data|Elf32_Sym <aAsyncemptysign - byte_30E8, asyncEmptySignalHandler+1, 2, \; "asyncEmptySignalHandler"|88-18-0-0-57-198-0-0-2-0-0-0-18-0-13-0
11592|data|Elf32_Sym <aRestarttimeper - byte_30E8, restartTimePeriod+1, 4, 0x12, \; "restartTimePeriod"|182-7-0-0-89-176-0-0-4-0-0-0-18-0-13-0
11608|data|Elf32_Sym <aStandardoutput - byte_30E8, standardOutputName, 0x12, \; "standardOutputName" ...|46-16-0-0-4-19-1-0-18-0-0-0-17-0-15-0
11624|data|Elf32_Sym <aAsyncmonitorfi_0 - byte_30E8, asyncMonitorFileAlert+1, \; "asyncMonitorFileAlert"|253-21-0-0-13-194-0-0-72-0-0-0-18-0-13-0
11640|data|Elf32_Sym <aGetcurrenttime - byte_30E8, getCurrentTime+1, 0x3C, 0x12, \; "getCurrentTime"|225-8-0-0-45-172-0-0-60-0-0-0-18-0-13-0
11656|data|Elf32_Sym <aGetunicodecell - byte_30E8, getUnicodeCellEntry+1, 0x32, \; "getUnicodeCellEntry"|6-14-0-0-121-3-1-0-50-0-0-0-18-0-13-0
11672|data|Elf32_Sym <aAsyncreadfile - byte_30E8, asyncReadFile+1, 0x40, 0x12, 0,\; "asyncReadFile"|196-27-0-0-85-194-0-0-64-0-0-0-18-0-13-0
11688|data|Elf32_Sym <aPoplogprefix - byte_30E8, popLogPrefix+1, 0x2C, 0x12, 0, \; "popLogPrefix"|110-22-0-0-205-140-0-0-44-0-0-0-18-0-13-0
11704|data|Elf32_Sym <aFormatinputerr - byte_30E8, formatInputError+1, 0xA8, \; "formatInputError"|137-15-0-0-237-158-0-0-168-0-0-0-18-0-13-0
11720|data|Elf32_Sym <aAsyncwait - byte_30E8, asyncWait+1, 8, 0x12, 0, 0xD>; "asyncWait"|78-29-0-0-169-180-0-0-8-0-0-0-18-0-13-0
11736|data|Elf32_Sym <aMaketexttable - byte_30E8, makeTextTable+1, 0x28, 0x12, 0,\; "makeTextTable"|188-32-0-0-121-5-1-0-40-0-0-0-18-0-13-0
11752|data|Elf32_Sym <aTestdirectoryp - byte_30E8, testDirectoryPath+1, 0x58, \; "testDirectoryPath"|231-30-0-0-65-152-0-0-88-0-0-0-18-0-13-0
11768|data|Elf32_Sym <aWriteutf8chara - byte_30E8, writeUtf8Character+1, 0x74, \; "writeUtf8Character"|32-11-0-0-13-253-0-0-116-0-0-0-18-0-13-0
11784|data|Elf32_Sym <aLogactionerror - byte_30E8, logActionError+1, 0x24, 0x12, \; "logActionError"|217-18-0-0-37-145-0-0-36-0-0-0-18-0-13-0
11800|data|Elf32_Sym <aAsyncresetalar_1 - byte_30E8, asyncResetAlarmIn+1, 0x44, \; "asyncResetAlarmIn"|158-19-0-0-205-182-0-0-68-0-0-0-18-0-13-0
11816|data|Elf32_Sym <aAftertimeperio - byte_30E8, afterTimePeriod+1, 0x1A, 0x12,\; "afterTimePeriod"|174-24-0-0-101-176-0-0-26-0-0-0-18-0-13-0
11832|data|Elf32_Sym <aDestructhostco - byte_30E8, \; "destructHostCommandPackageData"|18-20-0-0-233-221-0-0-38-0-0-0-18-0-13-0
11848|data|Elf32_Sym <aValidateflag - byte_30E8, validateFlag+1, 0x38, 0x12, 0, \; "validateFlag"|59-10-0-0-141-168-0-0-56-0-0-0-18-0-13-0
11864|data|Elf32_Sym <aNewtexttableda - byte_30E8, newTextTableData+1, 0x3A, \; "newTextTableData"|174-17-0-0-217-4-1-0-58-0-0-0-18-0-13-0
11880|data|Elf32_Sym <aValidateonoff - byte_30E8, validateOnOff+1, 0x14, 0x12, 0,\; "validateOnOff"|181-21-0-0-197-168-0-0-20-0-0-0-18-0-13-0
11896|data|Elf32_Sym <aGetdatatext - byte_30E8, getDataText+1, 0x40, 0x12, 0, \; "getDataText"|121-26-0-0-153-231-0-0-64-0-0-0-18-0-13-0
11912|data|Elf32_Sym <aSetworkingdire - byte_30E8, setWorkingDirectory+1, 0x4C, \; "setWorkingDirectory"|155-8-0-0-61-154-0-0-76-0-0-0-18-0-13-0
11928|data|Elf32_Sym <aDeallocatestri - byte_30E8, deallocateStrings+1, 0x20, \; "deallocateStrings"|70-23-0-0-77-165-0-0-32-0-0-0-18-0-13-0
11944|data|Elf32_Sym <aGetalloverride - byte_30E8, getAllOverrideDirectories+1, \; "getAllOverrideDirectories"|104-11-0-0-193-154-0-0-236-1-0-0-18-0-13-0
11960|data|Elf32_Sym <aAsyncrelinquis - byte_30E8, asyncRelinquishSignalNumber+1,\; "asyncRelinquishSignalNumber"|144-14-0-0-145-204-0-0-56-0-0-0-18-0-13-0
11976|data|Elf32_Sym <aBssEnd - byte_30E8, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|97-7-0-0-244-80-2-0-0-0-0-0-16-0-25-0
11992|data|Elf32_Sym <aProcessoptions - byte_30E8, processOptions+1, 0xCF8, 0x12,\; "processOptions"|177-18-0-0-161-123-0-0-248-12-0-0-18-0-13-0
12008|data|Elf32_Sym <aDisableports - byte_30E8, disablePorts+1, 0x40, 0x12, 0, \; "disablePorts"|51-11-0-0-145-211-0-0-64-0-0-0-18-0-13-0
12024|data|Elf32_Sym <aConvertchartow - byte_30E8, convertCharToWchar+1, 0x88, \; "convertCharToWchar"|179-13-0-0-213-253-0-0-136-0-0-0-18-0-13-0
12040|data|Elf32_Sym <aClosesystemlog - byte_30E8, closeSystemLog+1, 0x18, 0x12, \; "closeSystemLog"|56-32-0-0-89-141-0-0-24-0-0-0-18-0-13-0
12056|data|Elf32_Sym <aReportdataerro - byte_30E8, reportDataError+1, 0x68, 0x12,\; "reportDataError"|185-9-0-0-97-227-0-0-104-0-0-0-18-0-13-0
12072|data|Elf32_Sym <aEnableuinputke - byte_30E8, enableUinputKey+1, 0x2C, 0x12,\; "enableUinputKey"|8-17-0-0-145-217-0-0-44-0-0-0-18-0-13-0
12088|data|Elf32_Sym <aExecutehostcom - byte_30E8, executeHostCommand+1, 6, 0x12,\; "executeHostCommand"|243-22-0-0-37-221-0-0-6-0-0-0-18-0-13-0
12104|data|Elf32_Sym <aIsabbreviation - byte_30E8, isAbbreviation+1, 0x1E, 0x12, \; "isAbbreviation"|91-10-0-0-129-166-0-0-30-0-0-0-18-0-13-0
12120|data|Elf32_Sym <aAsynchandlemon - byte_30E8, asyncHandleMonitoredSignal+1, \; "asyncHandleMonitoredSignal"|159-31-0-0-21-202-0-0-28-0-0-0-18-0-13-0
12136|data|Elf32_Sym <aGetlogcategory_0 - byte_30E8, getLogCategoryName+1, 0x2C, \; "getLogCategoryName"|238-15-0-0-57-139-0-0-44-0-0-0-18-0-13-0
12152|data|Elf32_Sym <aAsyncsetalarmt - byte_30E8, asyncSetAlarmTo+1, 0x3C, 0x12,\; "asyncSetAlarmTo"|52-28-0-0-13-182-0-0-60-0-0-0-18-0-13-0
12168|data|Elf32_Sym <aGetdevicepath - byte_30E8, getDevicePath+1, 0x12, 0x12, 0,\; "getDevicePath"|220-12-0-0-225-161-0-0-18-0-0-0-18-0-13-0
12184|data|Elf32_Sym <aUnsetaddressna+2 - byte_30E8, setAddressName+1, 0x158, \; "setAddressName"|30-29-0-0-33-146-0-0-88-1-0-0-18-0-13-0
12200|data|Elf32_Sym <aRunhostcommand - byte_30E8, runHostCommand+1, 0xD4, 0x12, \; "runHostCommand"|215-25-0-0-81-220-0-0-212-0-0-0-18-0-13-0
12216|data|Elf32_Sym <aProcessdirecti - byte_30E8, processDirectiveOperand+1, \; "processDirectiveOperand"|155-23-0-0-9-239-0-0-168-0-0-0-18-0-13-0
12232|data|Elf32_Sym <aEnsuretexttabl - byte_30E8, ensureTextTableExtension+1, \; "ensureTextTableExtension"|149-27-0-0-189-5-1-0-12-0-0-0-18-0-13-0
12248|data|Elf32_Sym <aLogcategoryfla - byte_30E8, logCategoryFlags, 0x11, 0x11, \; "logCategoryFlags"|122-7-0-0-224-80-2-0-17-0-0-0-17-0-25-0
12264|data|Elf32_Sym <aLinuxkeymapAt0 - byte_30E8, linuxKeyMap_at00, 0x100, 0x11,\; "linuxKeyMap_at00"|129-25-0-0-96-38-1-0-0-1-0-0-17-0-15-0
12280|data|Elf32_Sym <aAsyncreleasesi - byte_30E8, asyncReleaseSignalNumber+1, \; "asyncReleaseSignalNumber"|134-31-0-0-229-203-0-0-56-0-0-0-18-0-13-0
12296|data|Elf32_Sym <aGetstackelemen - byte_30E8, getStackElement+1, 0x30, 0x12,\; "getStackElement"|217-9-0-0-117-208-0-0-48-0-0-0-18-0-13-0
12312|data|Elf32_Sym <aOpensystemlog - byte_30E8, openSystemLog+1, 0x24, 0x12, 0,\; "openSystemLog"|110-21-0-0-53-141-0-0-36-0-0-0-18-0-13-0
12328|data|Elf32_Sym <aAsyncblockobta - byte_30E8, asyncBlockObtainableSignals+1,\; "asyncBlockObtainableSignals"|90-24-0-0-201-204-0-0-32-0-0-0-18-0-13-0
12344|data|Elf32_Sym <aGettranslitera - byte_30E8, getTransliteratedCharacter+1, \; "getTransliteratedCharacter"|118-24-0-0-57-245-0-0-152-0-0-0-18-0-13-0
12360|data|Elf32_Sym <aLinuxkeymapPs2 - byte_30E8, linuxKeyMap_ps2, 0x100, 0x11, \; "linuxKeyMap_ps2"|182-16-0-0-96-35-1-0-0-1-0-0-17-0-15-0
12376|data|Elf32_Sym <aAsyncnewaddtas - byte_30E8, asyncNewAddTaskEvent+1, 0x18, \; "asyncNewAddTaskEvent"|196-28-0-0-241-184-0-0-24-0-0-0-18-0-13-0
12392|data|Elf32_Sym <aWriteescapedch - byte_30E8, writeEscapedCharacter+1, 0x54,\; "writeEscapedCharacter"|228-13-0-0-213-235-0-0-84-0-0-0-18-0-13-0
12408|data|Elf32_Sym <aChangestringse - byte_30E8, changeStringSetting+1, 0x2A, \; "changeStringSetting"|176-19-0-0-101-164-0-0-42-0-0-0-18-0-13-0
12424|data|Elf32_Sym <aIsinteger - byte_30E8, isInteger+1, 0x4C, 0x12, 0, 0xD>; "isInteger"|86-16-0-0-161-166-0-0-76-0-0-0-18-0-13-0
12440|data|Elf32_Sym <aAsynccancelreq - byte_30E8, asyncCancelRequest+1, 0x38, \; "asyncCancelRequest"|3-13-0-0-253-177-0-0-56-0-0-0-18-0-13-0
12456|data|Elf32_Sym <aLibcStartMain+0xD - byte_30E8, main+1, 0x1F8, 0x12, 0, \; "main"|184-6-0-0-233-105-0-0-248-1-0-0-18-0-13-0
12472|data|Elf32_Sym <aRingbell - byte_30E8, ringBell+1, 0x10, 0x12, 0, 0xD>; "ringBell"|208-18-0-0-197-160-0-0-16-0-0-0-18-0-13-0
12488|data|Elf32_Sym <aBrldotnumberto - byte_30E8, brlDotNumberToIndex+1, 0x2C, \; "brlDotNumberToIndex"|233-21-0-0-13-227-0-0-44-0-0-0-18-0-13-0
12504|data|Elf32_Sym <aWriteutf8cell - byte_30E8, writeUtf8Cell+1, 8, 0x12, 0, \; "writeUtf8Cell"|255-27-0-0-217-238-0-0-8-0-0-0-18-0-13-0
12520|data|DCB 0|0
12521|data|DCB "libicuuc.so.52",0|108-105-98-105-99-117-117-99-46-115-111-46-53-50-0
12536|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
12556|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
12584|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
12599|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
12625|data|DCB "u_getIntPropertyValue_52",0|117-95-103-101-116-73-110-116-80-114-111-112-101-114-116-121-86-97-108-117-101-95-53-50-0
12650|data|DCB "u_charFromName_52",0|117-95-99-104-97-114-70-114-111-109-78-97-109-101-95-53-50-0
12668|data|DCB "unorm_normalize_52",0|117-110-111-114-109-95-110-111-114-109-97-108-105-122-101-95-53-50-0
12687|data|DCB "libicudata.so.52",0|108-105-98-105-99-117-100-97-116-97-46-115-111-46-53-50-0
12704|data|DCB "libbluetooth.so.3",0|108-105-98-98-108-117-101-116-111-111-116-104-46-115-111-46-51-0
12722|data|DCB "libdl.so.2",0|108-105-98-100-108-46-115-111-46-50-0
12733|data|DCB "dlsym",0|100-108-115-121-109-0
12739|data|DCB "dladdr",0|100-108-97-100-100-114-0
12746|data|DCB "dlerror",0|100-108-101-114-114-111-114-0
12754|data|DCB "dlclose",0|100-108-99-108-111-115-101-0
12762|data|DCB "dlopen",0|100-108-111-112-101-110-0
12769|data|DCB "libgpm.so.2",0|108-105-98-103-112-109-46-115-111-46-50-0
12781|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
12797|data|DCB "pthread_getspecific",0|112-116-104-114-101-97-100-95-103-101-116-115-112-101-99-105-102-105-99-0
12817|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
12827|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
12848|data|DCB "pthread_rwlock_rdlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-114-100-108-111-99-107-0
12870|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
12885|data|DCB "pthread_once",0|112-116-104-114-101-97-100-95-111-110-99-101-0
12898|data|DCB "__libc_current_sigrtmax",0|95-95-108-105-98-99-95-99-117-114-114-101-110-116-95-115-105-103-114-116-109-97-120-0
12922|data|DCB "pthread_rwlock_wrlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-119-114-108-111-99-107-0
12944|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
12961|data|DCB "flockfile",0|102-108-111-99-107-102-105-108-101-0
12971|data|DCB "fork",0|102-111-114-107-0
12976|data|DCB "pthread_sigmask",0|112-116-104-114-101-97-100-95-115-105-103-109-97-115-107-0
12992|data|DCB "lseek",0|108-115-101-101-107-0
12998|data|DCB "send",0|115-101-110-100-0
13003|data|DCB "nanosleep",0|110-97-110-111-115-108-101-101-112-0
13013|data|DCB "waitpid",0|119-97-105-116-112-105-100-0
13021|data|DCB "pthread_setname_np",0|112-116-104-114-101-97-100-95-115-101-116-110-97-109-101-95-110-112-0
13040|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
13059|data|DCB "pthread_self",0|112-116-104-114-101-97-100-95-115-101-108-102-0
13072|data|DCB "pthread_rwlock_init",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-105-110-105-116-0
13092|data|DCB "pthread_rwlock_unlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-117-110-108-111-99-107-0
13114|data|DCB "funlockfile",0|102-117-110-108-111-99-107-102-105-108-101-0
13126|data|DCB "pthread_key_create",0|112-116-104-114-101-97-100-95-107-101-121-95-99-114-101-97-116-101-0
13145|data|DCB "pthread_rwlock_tryrdlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-116-114-121-114-100-108-111-99-107-0
13170|data|DCB "recv",0|114-101-99-118-0
13175|data|DCB "__libc_current_sigrtmin",0|95-95-108-105-98-99-95-99-117-114-114-101-110-116-95-115-105-103-114-116-109-105-110-0
13199|data|DCB "pthread_rwlock_trywrlock",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-116-114-121-119-114-108-111-99-107-0
13224|data|DCB "pthread_setspecific",0|112-116-104-114-101-97-100-95-115-101-116-115-112-101-99-105-102-105-99-0
13244|data|DCB "pthread_rwlock_destroy",0|112-116-104-114-101-97-100-95-114-119-108-111-99-107-95-100-101-115-116-114-111-121-0
13267|data|DCB "fcntl",0|102-99-110-116-108-0
13273|data|DCB "pthread_getname_np",0|112-116-104-114-101-97-100-95-103-101-116-110-97-109-101-95-110-112-0
13292|data|DCB "raise",0|114-97-105-115-101-0
13298|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
13308|data|DCB "fflush",0|102-102-108-117-115-104-0
13315|data|DCB "strcpy",0|115-116-114-99-112-121-0
13322|data|DCB "wmemcmp",0|119-109-101-109-99-109-112-0
13330|data|DCB "setlocale",0|115-101-116-108-111-99-97-108-101-0
13340|data|DCB "mbrtowc",0|109-98-114-116-111-119-99-0
13348|data|DCB "towlower",0|116-111-119-108-111-119-101-114-0
13357|data|DCB "fopen",0|102-111-112-101-110-0
13363|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
13371|data|DCB "ftruncate",0|102-116-114-117-110-99-97-116-101-0
13381|data|DCB "optind",0|111-112-116-105-110-100-0
13388|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
13396|data|DCB "pipe",0|112-105-112-101-0
13401|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
13410|data|DCB "__progname",0|95-95-112-114-111-103-110-97-109-101-0
13421|data|DCB "dcgettext",0|100-99-103-101-116-116-101-120-116-0
13431|data|DCB "wcrtomb",0|119-99-114-116-111-109-98-0
13439|data|DCB "wmemcpy",0|119-109-101-109-99-112-121-0
13447|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
13455|data|DCB "ioperm",0|105-111-112-101-114-109-0
13462|data|DCB "iswspace",0|105-115-119-115-112-97-99-101-0
13471|data|DCB "sigprocmask",0|115-105-103-112-114-111-99-109-97-115-107-0
13483|data|DCB "sigfillset",0|115-105-103-102-105-108-108-115-101-116-0
13494|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
13511|data|DCB "mkdir",0|109-107-100-105-114-0
13517|data|DCB "realloc",0|114-101-97-108-108-111-99-0
13525|data|DCB "abort",0|97-98-111-114-116-0
13531|data|DCB "stdin",0|115-116-100-105-110-0
13537|data|DCB "_exit",0|95-101-120-105-116-0
13543|data|DCB "strpbrk",0|115-116-114-112-98-114-107-0
13551|data|DCB "getpid",0|103-101-116-112-105-100-0
13558|data|DCB "kill",0|107-105-108-108-0
13563|data|DCB "strftime",0|115-116-114-102-116-105-109-101-0
13572|data|DCB "localtime_r",0|108-111-99-97-108-116-105-109-101-95-114-0
13584|data|DCB "strtod",0|115-116-114-116-111-100-0
13591|data|DCB "strtok",0|115-116-114-116-111-107-0
13598|data|DCB "strtol",0|115-116-114-116-111-108-0
13605|data|DCB "feof",0|102-101-111-102-0
13610|data|DCB "fgets",0|102-103-101-116-115-0
13616|data|DCB "calloc",0|99-97-108-108-111-99-0
13623|data|DCB "strlen",0|115-116-114-108-101-110-0
13630|data|DCB "wcschr",0|119-99-115-99-104-114-0
13637|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
13649|data|DCB "openlog",0|111-112-101-110-108-111-103-0
13657|data|DCB "memset",0|109-101-109-115-101-116-0
13664|data|DCB "chdir",0|99-104-100-105-114-0
13670|data|DCB "__syslog_chk",0|95-95-115-121-115-108-111-103-95-99-104-107-0
13683|data|DCB "mempcpy",0|109-101-109-112-99-112-121-0
13691|data|DCB "poll",0|112-111-108-108-0
13696|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
13710|data|DCB "sigaddset",0|115-105-103-97-100-100-115-101-116-0
13720|data|DCB "stdout",0|115-116-100-111-117-116-0
13727|data|DCB "fputc",0|102-112-117-116-99-0
13733|data|DCB "fputs",0|102-112-117-116-115-0
13739|data|DCB "fclose",0|102-99-108-111-115-101-0
13746|data|DCB "__vsnprintf_chk",0|95-95-118-115-110-112-114-105-110-116-102-95-99-104-107-0
13762|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
13770|data|DCB "malloc",0|109-97-108-108-111-99-0
13777|data|DCB "strcasecmp",0|115-116-114-99-97-115-101-99-109-112-0
13788|data|DCB "mbsinit",0|109-98-115-105-110-105-116-0
13796|data|DCB "nl_langinfo",0|110-108-95-108-97-110-103-105-110-102-111-0
13808|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
13822|data|DCB "getenv",0|103-101-116-101-110-118-0
13829|data|DCB "sscanf",0|115-115-99-97-110-102-0
13836|data|DCB "__open_2",0|95-95-111-112-101-110-95-50-0
13845|data|DCB "optarg",0|111-112-116-97-114-103-0
13852|data|DCB "stderr",0|115-116-100-101-114-114-0
13859|data|DCB "sigdelset",0|115-105-103-100-101-108-115-101-116-0
13869|data|DCB "ioctl",0|105-111-99-116-108-0
13875|data|DCB "outb",0|111-117-116-98-0
13880|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
13895|data|DCB "optopt",0|111-112-116-111-112-116-0
13902|data|DCB "readlink",0|114-101-97-100-108-105-110-107-0
13911|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
13923|data|DCB "execvp",0|101-120-101-99-118-112-0
13930|data|DCB "strncasecmp",0|115-116-114-110-99-97-115-101-99-109-112-0
13942|data|DCB "__xmknod",0|95-95-120-109-107-110-111-100-0
13951|data|DCB "__fxstat",0|95-95-102-120-115-116-97-116-0
13960|data|DCB "__realpath_chk",0|95-95-114-101-97-108-112-97-116-104-95-99-104-107-0
13975|data|DCB "fileno",0|102-105-108-101-110-111-0
13982|data|DCB "getcwd",0|103-101-116-99-119-100-0
13989|data|DCB "fwrite",0|102-119-114-105-116-101-0
13996|data|DCB "fread",0|102-114-101-97-100-0
14002|data|DCB "iconv_close",0|105-99-111-110-118-95-99-108-111-115-101-0
14014|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
14027|data|DCB "__memcpy_chk",0|95-95-109-101-109-99-112-121-95-99-104-107-0
14040|data|DCB "sigismember",0|115-105-103-105-115-109-101-109-98-101-114-0
14052|data|DCB "clock_gettime",0|99-108-111-99-107-95-103-101-116-116-105-109-101-0
14066|data|DCB "strchr",0|115-116-114-99-104-114-0
14073|data|DCB "iswcntrl",0|105-115-119-99-110-116-114-108-0
14082|data|DCB "inb",0|105-110-98-0
14086|data|DCB "mktime",0|109-107-116-105-109-101-0
14093|data|DCB "iconv",0|105-99-111-110-118-0
14099|data|DCB "fdopen",0|102-100-111-112-101-110-0
14106|data|DCB "qsort",0|113-115-111-114-116-0
14112|data|DCB "iconv_open",0|105-99-111-110-118-95-111-112-101-110-0
14123|data|DCB "__ctype_toupper_loc",0|95-95-99-116-121-112-101-95-116-111-117-112-112-101-114-95-108-111-99-0
14143|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
14158|data|DCB "__xstat",0|95-95-120-115-116-97-116-0
14166|data|DCB "wmemchr",0|119-109-101-109-99-104-114-0
14174|data|DCB "memmove",0|109-101-109-109-111-118-101-0
14182|data|DCB "bindtextdomain",0|98-105-110-100-116-101-120-116-100-111-109-97-105-110-0
14197|data|DCB "access",0|97-99-99-101-115-115-0
14204|data|DCB "opterr",0|111-112-116-101-114-114-0
14211|data|DCB "strcmp",0|115-116-114-99-109-112-0
14218|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
14227|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
14245|data|DCB "ferror",0|102-101-114-114-111-114-0
14252|data|DCB "wcslen",0|119-99-115-108-101-110-0
14259|data|DCB "closelog",0|99-108-111-115-101-108-111-103-0
14268|data|DCB "snprintf",0|115-110-112-114-105-110-116-102-0
14277|data|DCB "free",0|102-114-101-101-0
14282|data|DCB "program_invocation_short_name",0|112-114-111-103-114-97-109-95-105-110-118-111-99-97-116-105-111-110-95-115-104-111-114-116-95-110-97-109-101-0
14312|data|DCB "__cxa_atexit",0|95-95-99-120-97-95-97-116-101-120-105-116-0
14325|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
14345|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
14363|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
14376|data|DCB "_edata",0|95-101-100-97-116-97-0
14383|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
14395|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
14409|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
14421|data|DCB "__end__",0|95-95-101-110-100-95-95-0
14429|data|DCB "_end",0|95-101-110-100-0
14434|data|DCB "logCategoryFlags",0|108-111-103-67-97-116-101-103-111-114-121-70-108-97-103-115-0
14451|data|DCB "convertUtf8ToWchar",0|99-111-110-118-101-114-116-85-116-102-56-84-111-87-99-104-97-114-0
14470|data|DCB "asyncDeallocateWaitData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-87-97-105-116-68-97-116-97-0
14494|data|DCB "restartTimePeriod",0|114-101-115-116-97-114-116-84-105-109-101-80-101-114-105-111-100-0
14512|data|DCB "destroyTextTableData",0|100-101-115-116-114-111-121-84-101-120-116-84-97-98-108-101-68-97-116-97-0
14533|data|DCB "logLevelCount",0|108-111-103-76-101-118-101-108-67-111-117-110-116-0
14547|data|DCB "getQueueData",0|103-101-116-81-117-101-117-101-68-97-116-97-0
14560|data|DCB "millisecondsTillNextMinute",0|109-105-108-108-105-115-101-99-111-110-100-115-84-105-108-108-78-101-120-116-77-105-110-117-116-101-0
14587|data|DCB "setTextTableByte",0|115-101-116-84-101-120-116-84-97-98-108-101-66-121-116-101-0
14604|data|DCB "getQueueHead",0|103-101-116-81-117-101-117-101-72-101-97-100-0
14617|data|DCB "writeSocketDescriptor",0|119-114-105-116-101-83-111-99-107-101-116-68-101-115-99-114-105-112-116-111-114-0
14639|data|DCB "saveDataItem",0|115-97-118-101-68-97-116-97-73-116-101-109-0
14652|data|DCB "asyncAddSignalEntry",0|97-115-121-110-99-65-100-100-83-105-103-110-97-108-69-110-116-114-121-0
14672|data|DCB "adjustTimeValue",0|97-100-106-117-115-116-84-105-109-101-86-97-108-117-101-0
14688|data|DCB "convertUtf8ToChar",0|99-111-110-118-101-114-116-85-116-102-56-84-111-67-104-97-114-0
14706|data|DCB "categoryLogLevel",0|99-97-116-101-103-111-114-121-76-111-103-76-101-118-101-108-0
14723|data|DCB "setWorkingDirectory",0|115-101-116-87-111-114-107-105-110-103-68-105-114-101-99-116-111-114-121-0
14743|data|DCB "logBytes",0|108-111-103-66-121-116-101-115-0
14752|data|DCB "approximateDelay",0|97-112-112-114-111-120-105-109-97-116-101-68-101-108-97-121-0
14769|data|DCB "processIfNotVarOperands",0|112-114-111-99-101-115-115-73-102-78-111-116-86-97-114-79-112-101-114-97-110-100-115-0
14793|data|DCB "getCurrentTime",0|103-101-116-67-117-114-114-101-110-116-84-105-109-101-0
14808|data|DCB "cancelProgram",0|99-97-110-99-101-108-80-114-111-103-114-97-109-0
14822|data|DCB "asyncSignalEvent",0|97-115-121-110-99-83-105-103-110-97-108-69-118-101-110-116-0
14839|data|DCB "unlockCharset",0|117-110-108-111-99-107-67-104-97-114-115-101-116-0
14853|data|DCB "stderrLogLevel",0|115-116-100-101-114-114-76-111-103-76-101-118-101-108-0
14868|data|DCB "getElementItem",0|103-101-116-69-108-101-109-101-110-116-73-116-101-109-0
14883|data|DCB "hasFileExtension",0|104-97-115-70-105-108-101-69-120-116-101-110-115-105-111-110-0
14900|data|DCB "validateFloat",0|118-97-108-105-100-97-116-101-70-108-111-97-116-0
14914|data|DCB "millisecondsBetween",0|109-105-108-108-105-115-101-99-111-110-100-115-66-101-116-119-101-101-110-0
14934|data|DCB "setCharset",0|115-101-116-67-104-97-114-115-101-116-0
14945|data|DCB "asyncMonitorSocketAlert",0|97-115-121-110-99-77-111-110-105-116-111-114-83-111-99-107-101-116-65-108-101-114-116-0
14969|data|DCB "writeDotsCell",0|119-114-105-116-101-68-111-116-115-67-101-108-108-0
14983|data|DCB "asyncExecuteAlarmCallback",0|97-115-121-110-99-69-120-101-99-117-116-101-65-108-97-114-109-67-97-108-108-98-97-99-107-0
15009|data|DCB "reportDataError",0|114-101-112-111-114-116-68-97-116-97-69-114-114-111-114-0
15025|data|DCB "compareKeywords",0|99-111-109-112-97-114-101-75-101-121-119-111-114-100-115-0
15041|data|DCB "getStackElement",0|103-101-116-83-116-97-99-107-69-108-101-109-101-110-116-0
15057|data|DCB "writePort1",0|119-114-105-116-101-80-111-114-116-49-0
15068|data|DCB "removeService",0|114-101-109-111-118-101-83-101-114-118-105-99-101-0
15082|data|DCB "asyncHandleAddTaskEvent",0|97-115-121-110-99-72-97-110-100-108-101-65-100-100-84-97-115-107-69-118-101-110-116-0
15106|data|DCB "replaceFileExtension",0|114-101-112-108-97-99-101-70-105-108-101-69-120-116-101-110-115-105-111-110-0
15127|data|DCB "dequeueItem",0|100-101-113-117-101-117-101-73-116-101-109-0
15139|data|DCB "validateFlag",0|118-97-108-105-100-97-116-101-70-108-97-103-0
15152|data|DCB "convertWcharToUtf8",0|99-111-110-118-101-114-116-87-99-104-97-114-84-111-85-116-102-56-0
15171|data|DCB "isAbbreviation",0|105-115-65-98-98-114-101-118-105-97-116-105-111-110-0
15186|data|DCB "isPosixLocale",0|105-115-80-111-115-105-120-76-111-99-97-108-101-0
15200|data|DCB "registerProgramMemory",0|114-101-103-105-115-116-101-114-80-114-111-103-114-97-109-77-101-109-111-114-121-0
15222|data|DCB "getMonotonicElapsed",0|103-101-116-77-111-110-111-116-111-110-105-99-69-108-97-112-115-101-100-0
15242|data|DCB "processIfVarOperands",0|112-114-111-99-101-115-115-73-102-86-97-114-79-112-101-114-97-110-100-115-0
15263|data|DCB "logPossibleCause",0|108-111-103-80-111-115-115-105-98-108-101-67-97-117-115-101-0
15280|data|DCB "asyncExecuteIoCallback",0|97-115-121-110-99-69-120-101-99-117-116-101-73-111-67-97-108-108-98-97-99-107-0
15303|data|DCB "asyncCallWithSignalBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-83-105-103-110-97-108-66-108-111-99-107-101-100-0
15330|data|DCB "ensureFileExtension",0|101-110-115-117-114-101-70-105-108-101-69-120-116-101-110-115-105-111-110-0
15350|data|DCB "convertCharToUtf8",0|99-111-110-118-101-114-116-67-104-97-114-84-111-85-116-102-56-0
15368|data|DCB "writeUtf8Character",0|119-114-105-116-101-85-116-102-56-67-104-97-114-97-99-116-101-114-0
15387|data|DCB "disablePorts",0|100-105-115-97-98-108-101-80-111-114-116-115-0
15400|data|DCB "createUinputDevice",0|99-114-101-97-116-101-85-105-110-112-117-116-68-101-118-105-99-101-0
15419|data|DCB "getWritableDirectory",0|103-101-116-87-114-105-116-97-98-108-101-68-105-114-101-99-116-111-114-121-0
15440|data|DCB "getAllOverrideDirectories",0|103-101-116-65-108-108-79-118-101-114-114-105-100-101-68-105-114-101-99-116-111-114-105-101-115-0
15466|data|DCB "getWcharCharset",0|103-101-116-87-99-104-97-114-67-104-97-114-115-101-116-0
15482|data|DCB "asyncResetAlarmEvery",0|97-115-121-110-99-82-101-115-101-116-65-108-97-114-109-69-118-101-114-121-0
15503|data|DCB "standardStreamArgument",0|115-116-97-110-100-97-114-100-83-116-114-101-97-109-65-114-103-117-109-101-110-116-0
15526|data|DCB "asyncAwaitCondition",0|97-115-121-110-99-65-119-97-105-116-67-111-110-100-105-116-105-111-110-0
15546|data|DCB "_IO_stdin_used",0|95-73-79-95-115-116-100-105-110-95-117-115-101-100-0
15561|data|DCB "getLocaleName",0|103-101-116-76-111-99-97-108-101-78-97-109-101-0
15575|data|DCB "getTextLength",0|103-101-116-84-101-120-116-76-101-110-103-116-104-0
15589|data|DCB "getTextTableItem",0|103-101-116-84-101-120-116-84-97-98-108-101-73-116-101-109-0
15606|data|DCB "parseDataString",0|112-97-114-115-101-68-97-116-97-83-116-114-105-110-103-0
15622|data|DCB "openCharacterDevice",0|111-112-101-110-67-104-97-114-97-99-116-101-114-68-101-118-105-99-101-0
15642|data|DCB "getDeviceDirectory",0|103-101-116-68-101-118-105-99-101-68-105-114-101-99-116-111-114-121-0
15661|data|DCB "joinStrings",0|106-111-105-110-83-116-114-105-110-103-115-0
15673|data|DCB "expandTimeValue",0|101-120-112-97-110-100-84-105-109-101-86-97-108-117-101-0
15689|data|DCB "runCommand",0|114-117-110-67-111-109-109-97-110-100-0
15700|data|DCB "isNumber",0|105-115-78-117-109-98-101-114-0
15709|data|DCB "asyncMonitorSocketOutput",0|97-115-121-110-99-77-111-110-105-116-111-114-83-111-99-107-101-116-79-117-116-112-117-116-0
15734|data|DCB "getUtf8Length",0|103-101-116-85-116-102-56-76-101-110-103-116-104-0
15748|data|DCB "asyncReadSocket",0|97-115-121-110-99-82-101-97-100-83-111-99-107-101-116-0
15764|data|DCB "asyncDeallocateIoData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-73-111-68-97-116-97-0
15786|data|DCB "writeHexadecimalCharacter",0|119-114-105-116-101-72-101-120-97-100-101-99-105-109-97-108-67-104-97-114-97-99-116-101-114-0
15812|data|DCB "getDevicePath",0|103-101-116-68-101-118-105-99-101-80-97-116-104-0
15826|data|DCB "asyncExecuteTaskCallback",0|97-115-121-110-99-69-120-101-99-117-116-101-84-97-115-107-67-97-108-108-98-97-99-107-0
15851|data|DCB "asyncCancelRequest",0|97-115-121-110-99-67-97-110-99-101-108-82-101-113-117-101-115-116-0
15870|data|DCB "convertTextToWchars",0|99-111-110-118-101-114-116-84-101-120-116-84-111-87-99-104-97-114-115-0
15890|data|DCB "getElementIdentifier",0|103-101-116-69-108-101-109-101-110-116-73-100-101-110-116-105-102-105-101-114-0
15911|data|DCB "fixInstallPaths",0|102-105-120-73-110-115-116-97-108-108-80-97-116-104-115-0
15927|data|DCB "cancelProcess",0|99-97-110-99-101-108-80-114-111-99-101-115-115-0
15941|data|DCB "handleBestCharacter",0|104-97-110-100-108-101-66-101-115-116-67-104-97-114-97-99-116-101-114-0
15961|data|DCB "asyncMonitorEventPipe",0|97-115-121-110-99-77-111-110-105-116-111-114-69-118-101-110-116-80-105-112-101-0
15983|data|DCB "logCategoryName_all",0|108-111-103-67-97-116-101-103-111-114-121-78-97-109-101-95-97-108-108-0
16003|data|DCB "logUnsupportedOperation",0|108-111-103-85-110-115-117-112-112-111-114-116-101-100-79-112-101-114-97-116-105-111-110-0
16027|data|DCB "convertCharToWchar",0|99-111-110-118-101-114-116-67-104-97-114-84-111-87-99-104-97-114-0
16046|data|DCB "setThreadName",0|115-101-116-84-104-114-101-97-100-78-97-109-101-0
16060|data|DCB "selectTextTable",0|115-101-108-101-99-116-84-101-120-116-84-97-98-108-101-0
16076|data|DCB "writeEscapedCharacter",0|119-114-105-116-101-69-115-99-97-112-101-100-67-104-97-114-97-99-116-101-114-0
16098|data|DCB "getDataSize",0|103-101-116-68-97-116-97-83-105-122-101-0
16110|data|DCB "getUnicodeCellEntry",0|103-101-116-85-110-105-99-111-100-101-67-101-108-108-69-110-116-114-121-0
16130|data|DCB "onProgramExit",0|111-110-80-114-111-103-114-97-109-69-120-105-116-0
16144|data|DCB "processElseOperands",0|112-114-111-99-101-115-115-69-108-115-101-79-112-101-114-97-110-100-115-0
16164|data|DCB "validateInteger",0|118-97-108-105-100-97-116-101-73-110-116-101-103-101-114-0
16180|data|DCB "asyncMonitorSocketInput",0|97-115-121-110-99-77-111-110-105-116-111-114-83-111-99-107-101-116-73-110-112-117-116-0
16204|data|DCB "textTable",0|116-101-120-116-84-97-98-108-101-0
16214|data|DCB "isHexadecimalDigit",0|105-115-72-101-120-97-100-101-99-105-109-97-108-68-105-103-105-116-0
16233|data|DCB "requeueElement",0|114-101-113-117-101-117-101-69-108-101-109-101-110-116-0
16248|data|DCB "asyncRelinquishSignalNumber",0|97-115-121-110-99-82-101-108-105-110-113-117-105-115-104-83-105-103-110-97-108-78-117-109-98-101-114-0
16276|data|DCB "asyncGetHandleElement",0|97-115-121-110-99-71-101-116-72-97-110-100-108-101-69-108-101-109-101-110-116-0
16298|data|DCB "processTextTableStream",0|112-114-111-99-101-115-115-84-101-120-116-84-97-98-108-101-83-116-114-101-97-109-0
16321|data|DCB "asyncResetAlarmTo",0|97-115-121-110-99-82-101-115-101-116-65-108-97-114-109-84-111-0
16339|data|DCB "processDataStream",0|112-114-111-99-101-115-115-68-97-116-97-83-116-114-101-97-109-0
16357|data|DCB "asyncObtainSignalNumber",0|97-115-121-110-99-79-98-116-97-105-110-83-105-103-110-97-108-78-117-109-98-101-114-0
16381|data|DCB "deleteElements",0|100-101-108-101-116-101-69-108-101-109-101-110-116-115-0
16396|data|DCB "getProgramPath",0|103-101-116-80-114-111-103-114-97-109-80-97-116-104-0
16411|data|DCB "getMonotonicTime",0|103-101-116-77-111-110-111-116-111-110-105-99-84-105-109-101-0
16428|data|DCB "extendStringSetting",0|101-120-116-101-110-100-83-116-114-105-110-103-83-101-116-116-105-110-103-0
16448|data|DCB "getElementQueue",0|103-101-116-69-108-101-109-101-110-116-81-117-101-117-101-0
16464|data|DCB "installKernelModule",0|105-110-115-116-97-108-108-75-101-114-110-101-108-77-111-100-117-108-101-0
16484|data|DCB "resetOptions",0|114-101-115-101-116-79-112-116-105-111-110-115-0
16497|data|DCB "formatInputError",0|102-111-114-109-97-116-73-110-112-117-116-69-114-114-111-114-0
16514|data|DCB "findItem",0|102-105-110-100-73-116-101-109-0
16523|data|DCB "logData",0|108-111-103-68-97-116-97-0
16531|data|DCB "writeUtf8Cells",0|119-114-105-116-101-85-116-102-56-67-101-108-108-115-0
16546|data|DCB "getLogCategoryTitle",0|103-101-116-76-111-103-67-97-116-101-103-111-114-121-84-105-116-108-101-0
16566|data|DCB "isAbsolutePath",0|105-115-65-98-115-111-108-117-116-101-80-97-116-104-0
16581|data|DCB "writeRepeatDelay",0|119-114-105-116-101-82-101-112-101-97-116-68-101-108-97-121-0
16598|data|DCB "getLogCategoryName",0|103-101-116-76-111-103-67-97-116-101-103-111-114-121-78-97-109-101-0
16617|data|DCB "validateYesNo",0|118-97-108-105-100-97-116-101-89-101-115-78-111-0
16631|data|DCB "resolveDeviceName",0|114-101-115-111-108-118-101-68-101-118-105-99-101-78-97-109-101-0
16649|data|DCB "makeFilePath",0|109-97-107-101-70-105-108-101-80-97-116-104-0
16662|data|DCB "standardOutputName",0|115-116-97-110-100-97-114-100-79-117-116-112-117-116-78-97-109-101-0
16681|data|DCB "processEndIfOperands",0|112-114-111-99-101-115-115-69-110-100-73-102-79-112-101-114-97-110-100-115-0
16702|data|DCB "isInteger",0|105-115-73-110-116-101-103-101-114-0
16712|data|DCB "finishHostCommandStream",0|102-105-110-105-115-104-72-111-115-116-67-111-109-109-97-110-100-83-116-114-101-97-109-0
16736|data|DCB "registerCharacterSet",0|114-101-103-105-115-116-101-114-67-104-97-114-97-99-116-101-114-83-101-116-0
16757|data|DCB "getBootParameters",0|103-101-116-66-111-111-116-80-97-114-97-109-101-116-101-114-115-0
16775|data|DCB "processIncludeOperands",0|112-114-111-99-101-115-115-73-110-99-108-117-100-101-79-112-101-114-97-110-100-115-0
16798|data|DCB "linuxKeyMap_ps2",0|108-105-110-117-120-75-101-121-77-97-112-95-112-115-50-0
16814|data|DCB "isQualifiedDevice",0|105-115-81-117-97-108-105-102-105-101-100-68-101-118-105-99-101-0
16832|data|DCB "getCharset",0|103-101-116-67-104-97-114-115-101-116-0
16843|data|DCB "getDataOperand",0|103-101-116-68-97-116-97-79-112-101-114-97-110-100-0
16858|data|DCB "setGlobalDataVariable",0|115-101-116-71-108-111-98-97-108-68-97-116-97-86-97-114-105-97-98-108-101-0
16880|data|DCB "enableUinputKey",0|101-110-97-98-108-101-85-105-110-112-117-116-75-101-121-0
16896|data|DCB "testProgramPath",0|116-101-115-116-80-114-111-103-114-97-109-80-97-116-104-0
16912|data|DCB "isKeyword",0|105-115-75-101-121-119-111-114-100-0
16922|data|DCB "setLogCategory",0|115-101-116-76-111-103-67-97-116-101-103-111-114-121-0
16937|data|DCB "getWorkingDirectory",0|103-101-116-87-111-114-107-105-110-103-68-105-114-101-99-116-111-114-121-0
16957|data|DCB "destroyDataArea",0|100-101-115-116-114-111-121-68-97-116-97-65-114-101-97-0
16973|data|DCB "enablePorts",0|101-110-97-98-108-101-80-111-114-116-115-0
16985|data|DCB "standardInputName",0|115-116-97-110-100-97-114-100-73-110-112-117-116-78-97-109-101-0
17003|data|DCB "initializeSystemObject",0|105-110-105-116-105-97-108-105-122-101-83-121-115-116-101-109-79-98-106-101-99-116-0
17026|data|DCB "findElementWithItem",0|102-105-110-100-69-108-101-109-101-110-116-87-105-116-104-73-116-101-109-0
17046|data|DCB "newTextTableData",0|110-101-119-84-101-120-116-84-97-98-108-101-68-97-116-97-0
17063|data|DCB "getStackHead",0|103-101-116-83-116-97-99-107-72-101-97-100-0
17076|data|DCB "allocateDataItem",0|97-108-108-111-99-97-116-101-68-97-116-97-73-116-101-109-0
17093|data|DCB "locatePathExtension",0|108-111-99-97-116-101-80-97-116-104-69-120-116-101-110-115-105-111-110-0
17113|data|DCB "pushLogPrefix",0|112-117-115-104-76-111-103-80-114-101-102-105-120-0
17127|data|DCB "getHomeDirectory",0|103-101-116-72-111-109-101-68-105-114-101-99-116-111-114-121-0
17144|data|DCB "installService",0|105-110-115-116-97-108-108-83-101-114-118-105-99-101-0
17159|data|DCB "asyncAddTask",0|97-115-121-110-99-65-100-100-84-97-115-107-0
17172|data|DCB "readSocketDescriptor",0|114-101-97-100-83-111-99-107-101-116-68-101-115-99-114-105-112-116-111-114-0
17193|data|DCB "asyncMonitorFileOutput",0|97-115-121-110-99-77-111-110-105-116-111-114-70-105-108-101-79-117-116-112-117-116-0
17216|data|DCB "asyncEmptySignalHandler",0|97-115-121-110-99-69-109-112-116-121-83-105-103-110-97-108-72-97-110-100-108-101-114-0
17240|data|DCB "enableUinputEventType",0|101-110-97-98-108-101-85-105-110-112-117-116-69-118-101-110-116-84-121-112-101-0
17262|data|DCB "processHostCommandStreams",0|112-114-111-99-101-115-115-72-111-115-116-67-111-109-109-97-110-100-83-116-114-101-97-109-115-0
17288|data|DCB "replaceTextTable",0|114-101-112-108-97-99-101-84-101-120-116-84-97-98-108-101-0
17305|data|DCB "processOptions",0|112-114-111-99-101-115-115-79-112-116-105-111-110-115-0
17320|data|DCB "getCellsOperand",0|103-101-116-67-101-108-108-115-79-112-101-114-97-110-100-0
17336|data|DCB "ringBell",0|114-105-110-103-66-101-108-108-0
17345|data|DCB "logActionError",0|108-111-103-65-99-116-105-111-110-69-114-114-111-114-0
17360|data|DCB "destroyTextTable",0|100-101-115-116-114-111-121-84-101-120-116-84-97-98-108-101-0
17377|data|DCB "findElement",0|102-105-110-100-69-108-101-109-101-110-116-0
17389|data|DCB "asyncCallWithSignalsBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-83-105-103-110-97-108-115-66-108-111-99-107-101-100-0
17417|data|DCB "processQueue",0|112-114-111-99-101-115-115-81-117-101-117-101-0
17430|data|DCB "createThread",0|99-114-101-97-116-101-84-104-114-101-97-100-0
17443|data|DCB "asyncIgnoreSignal",0|97-115-121-110-99-73-103-110-111-114-101-83-105-103-110-97-108-0
17461|data|DCB "asyncMonitorSignal",0|97-115-121-110-99-77-111-110-105-116-111-114-83-105-103-110-97-108-0
17480|data|DCB "makeTimeValue",0|109-97-107-101-84-105-109-101-86-97-108-117-101-0
17494|data|DCB "isUnqualifiedDevice",0|105-115-85-110-113-117-97-108-105-102-105-101-100-68-101-118-105-99-101-0
17514|data|DCB "getPrimaryOverrideDirectory",0|103-101-116-80-114-105-109-97-114-121-79-118-101-114-114-105-100-101-68-105-114-101-99-116-111-114-121-0
17542|data|DCB "asyncResetAlarmIn",0|97-115-121-110-99-82-101-115-101-116-65-108-97-114-109-73-110-0
17560|data|DCB "changeStringSetting",0|99-104-97-110-103-101-83-116-114-105-110-103-83-101-116-116-105-110-103-0
17580|data|DCB "formatSeconds",0|102-111-114-109-97-116-83-101-99-111-110-100-115-0
17594|data|DCB "getCharacterByName",0|103-101-116-67-104-97-114-97-99-116-101-114-66-121-78-97-109-101-0
17613|data|DCB "logLevelNames",0|108-111-103-76-101-118-101-108-78-97-109-101-115-0
17627|data|DCB "getDataCharacter",0|103-101-116-68-97-116-97-67-104-97-114-97-99-116-101-114-0
17644|data|DCB "getParameters",0|103-101-116-80-97-114-97-109-101-116-101-114-115-0
17658|data|DCB "destructHostCommandPackageData",0|100-101-115-116-114-117-99-116-72-111-115-116-67-111-109-109-97-110-100-80-97-99-107-97-103-101-68-97-116-97-0
17689|data|DCB "convertCharacterToDots",0|99-111-110-118-101-114-116-67-104-97-114-97-99-116-101-114-84-111-68-111-116-115-0
17712|data|DCB "releaseLock",0|114-101-108-101-97-115-101-76-111-99-107-0
17724|data|DCB "brlDotBits",0|98-114-108-68-111-116-66-105-116-115-0
17735|data|DCB "createPidFile",0|99-114-101-97-116-101-80-105-100-70-105-108-101-0
17749|data|DCB "registerProgramStream",0|114-101-103-105-115-116-101-114-80-114-111-103-114-97-109-83-116-114-101-97-109-0
17771|data|DCB "linuxKeyMap_atE0",0|108-105-110-117-120-75-101-121-77-97-112-95-97-116-69-48-0
17788|data|DCB "compareKeyword",0|99-111-109-112-97-114-101-75-101-121-119-111-114-100-0
17803|data|DCB "asyncClaimSignalNumber",0|97-115-121-110-99-67-108-97-105-109-83-105-103-110-97-108-78-117-109-98-101-114-0
17826|data|DCB "unloadSharedObject",0|117-110-108-111-97-100-83-104-97-114-101-100-79-98-106-101-99-116-0
17845|data|DCB "readFileDescriptor",0|114-101-97-100-70-105-108-101-68-101-115-99-114-105-112-116-111-114-0
17864|data|DCB "asyncDiscardHandle",0|97-115-121-110-99-68-105-115-99-97-114-100-72-97-110-100-108-101-0
17883|data|DCB "getQueueSize",0|103-101-116-81-117-101-117-101-83-105-122-101-0
17896|data|DCB "asyncCallWithObtainableSignalsBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-79-98-116-97-105-110-97-98-108-101-83-105-103-110-97-108-115-66-108-111-99-107-101-100-0
17934|data|DCB "beginProgram",0|98-101-103-105-110-80-114-111-103-114-97-109-0
17947|data|DCB "isPathDelimiter",0|105-115-80-97-116-104-68-101-108-105-109-105-116-101-114-0
17963|data|DCB "asyncHandleSignal",0|97-115-121-110-99-72-97-110-100-108-101-83-105-103-110-97-108-0
17981|data|DCB "testFilePath",0|116-101-115-116-70-105-108-101-80-97-116-104-0
17994|data|DCB "unlockMutex",0|117-110-108-111-99-107-77-117-116-101-120-0
18006|data|DCB "openSystemLog",0|111-112-101-110-83-121-115-116-101-109-76-111-103-0
18020|data|DCB "openLogFile",0|111-112-101-110-76-111-103-70-105-108-101-0
18032|data|DCB "flushStream",0|102-108-117-115-104-83-116-114-101-97-109-0
18044|data|DCB "asyncMakeHandle",0|97-115-121-110-99-77-97-107-101-72-97-110-100-108-101-0
18060|data|DCB "brlDotBitToIndex",0|98-114-108-68-111-116-66-105-116-84-111-73-110-100-101-120-0
18077|data|DCB "validateOnOff",0|118-97-108-105-100-97-116-101-79-110-79-102-102-0
18091|data|DCB "openDataFile",0|111-112-101-110-68-97-116-97-70-105-108-101-0
18104|data|DCB "findDataOperand",0|102-105-110-100-68-97-116-97-79-112-101-114-97-110-100-0
18120|data|DCB "joinPath",0|106-111-105-110-80-97-116-104-0
18129|data|DCB "brlDotNumberToIndex",0|98-114-108-68-111-116-78-117-109-98-101-114-84-111-73-110-100-101-120-0
18149|data|DCB "asyncMonitorFileAlert",0|97-115-121-110-99-77-111-110-105-116-111-114-70-105-108-101-65-108-101-114-116-0
18171|data|DCB "asyncMonitorFileInput",0|97-115-121-110-99-77-111-110-105-116-111-114-70-105-108-101-73-110-112-117-116-0
18193|data|DCB "writeFileDescriptor",0|119-114-105-116-101-70-105-108-101-68-101-115-99-114-105-112-116-111-114-0
18213|data|DCB "isExplicitPath",0|105-115-69-120-112-108-105-99-105-116-80-97-116-104-0
18228|data|DCB "linuxKeyMapDescriptors",0|108-105-110-117-120-75-101-121-77-97-112-68-101-115-99-114-105-112-116-111-114-115-0
18251|data|DCB "endProgram",0|101-110-100-80-114-111-103-114-97-109-0
18262|data|DCB "popLogPrefix",0|112-111-112-76-111-103-80-114-101-102-105-120-0
18275|data|DCB "releaseFileLock",0|114-101-108-101-97-115-101-70-105-108-101-76-111-99-107-0
18291|data|DCB "asyncWriteFile",0|97-115-121-110-99-87-114-105-116-101-70-105-108-101-0
18306|data|DCB "attemptFileLock",0|97-116-116-101-109-112-116-70-105-108-101-76-111-99-107-0
18322|data|DCB "getDeviceParameters",0|103-101-116-68-101-118-105-99-101-80-97-114-97-109-101-116-101-114-115-0
18342|data|DCB "convertWcharToChar",0|99-111-110-118-101-114-116-87-99-104-97-114-84-111-67-104-97-114-0
18361|data|DCB "systemLogLevel",0|115-121-115-116-101-109-76-111-103-76-101-118-101-108-0
18376|data|DCB "makeUtf8FromWchars",0|109-97-107-101-85-116-102-56-70-114-111-109-87-99-104-97-114-115-0
18395|data|DCB "executeHostCommand",0|101-120-101-99-117-116-101-72-111-115-116-67-111-109-109-97-110-100-0
18414|data|DCB "programName",0|112-114-111-103-114-97-109-78-97-109-101-0
18426|data|DCB "prepareHostCommandStream",0|112-114-101-112-97-114-101-72-111-115-116-67-111-109-109-97-110-100-83-116-114-101-97-109-0
18451|data|DCB "writeDotsCells",0|119-114-105-116-101-68-111-116-115-67-101-108-108-115-0
18466|data|DCB "splitString",0|115-112-108-105-116-83-116-114-105-110-103-0
18478|data|DCB "deallocateStrings",0|100-101-97-108-108-111-99-97-116-101-83-116-114-105-110-103-115-0
18496|data|DCB "asyncWriteSocket",0|97-115-121-110-99-87-114-105-116-101-83-111-99-107-101-116-0
18513|data|DCB "processConditionOperands",0|112-114-111-99-101-115-115-67-111-110-100-105-116-105-111-110-79-112-101-114-97-110-100-115-0
18538|data|DCB "makePath",0|109-97-107-101-80-97-116-104-0
18547|data|DCB "getQueueElement",0|103-101-116-81-117-101-117-101-69-108-101-109-101-110-116-0
18563|data|DCB "processDirectiveOperand",0|112-114-111-99-101-115-115-68-105-114-101-99-116-105-118-101-79-112-101-114-97-110-100-0
18587|data|DCB "standardErrorName",0|115-116-97-110-100-97-114-100-69-114-114-111-114-78-97-109-101-0
18605|data|DCB "compileTextTable",0|99-111-109-112-105-108-101-84-101-120-116-84-97-98-108-101-0
18622|data|DCB "convertDotsToCharacter",0|99-111-110-118-101-114-116-68-111-116-115-84-111-67-104-97-114-97-99-116-101-114-0
18645|data|DCB "brlDotNumbers",0|98-114-108-68-111-116-78-117-109-98-101-114-115-0
18659|data|DCB "newLockDescriptor",0|110-101-119-76-111-99-107-68-101-115-99-114-105-112-116-111-114-0
18677|data|DCB "createAnonymousPipe",0|99-114-101-97-116-101-65-110-111-110-121-109-111-117-115-80-105-112-101-0
18697|data|DCB "asyncGetThreadSpecificData",0|97-115-121-110-99-71-101-116-84-104-114-101-97-100-83-112-101-99-105-102-105-99-68-97-116-97-0
18724|data|DCB "parseCellsOperand",0|112-97-114-115-101-67-101-108-108-115-79-112-101-114-97-110-100-0
18742|data|DCB "moveElement",0|109-111-118-101-69-108-101-109-101-110-116-0
18754|data|DCB "asyncBlockObtainableSignals",0|97-115-121-110-99-66-108-111-99-107-79-98-116-97-105-110-97-98-108-101-83-105-103-110-97-108-115-0
18782|data|DCB "getTransliteratedCharacter",0|103-101-116-84-114-97-110-115-108-105-116-101-114-97-116-101-100-67-104-97-114-97-99-116-101-114-0
18809|data|DCB "normalizeTimeValue",0|110-111-114-109-97-108-105-122-101-84-105-109-101-86-97-108-117-101-0
18828|data|DCB "logSymbol",0|108-111-103-83-121-109-98-111-108-0
18838|data|DCB "afterTimePeriod",0|97-102-116-101-114-84-105-109-101-80-101-114-105-111-100-0
18854|data|DCB "linuxKeyMap_hid",0|108-105-110-117-120-75-101-121-77-97-112-95-104-105-100-0
18870|data|DCB "newUinputKeyboard",0|110-101-119-85-105-110-112-117-116-75-101-121-98-111-97-114-100-0
18888|data|DCB "createDirectory",0|99-114-101-97-116-101-68-105-114-101-99-116-111-114-121-0
18904|data|DCB "asyncSetSignalBlocked",0|97-115-121-110-99-83-101-116-83-105-103-110-97-108-66-108-111-99-107-101-100-0
18926|data|DCB "writeConsole",0|119-114-105-116-101-67-111-110-115-111-108-101-0
18939|data|DCB "constructHostCommandPackageData",0|99-111-110-115-116-114-117-99-116-72-111-115-116-67-111-109-109-97-110-100-80-97-99-107-97-103-101-68-97-116-97-0
18971|data|DCB "releasePressedKeys",0|114-101-108-101-97-115-101-80-114-101-115-115-101-100-75-101-121-115-0
18990|data|DCB "processDataFile",0|112-114-111-99-101-115-115-68-97-116-97-70-105-108-101-0
19006|data|DCB "getPathDirectory",0|103-101-116-80-97-116-104-68-105-114-101-99-116-111-114-121-0
19023|data|DCB "linuxKeyMap_xt00",0|108-105-110-117-120-75-101-121-77-97-112-95-120-116-48-48-0
19040|data|DCB "readLine",0|114-101-97-100-76-105-110-101-0
19049|data|DCB "linuxKeyMap_at00",0|108-105-110-117-120-75-101-121-77-97-112-95-97-116-48-48-0
19066|data|DCB "asyncRevertSignal",0|97-115-121-110-99-82-101-118-101-114-116-83-105-103-110-97-108-0
19084|data|DCB "convertUtf8ToWchars",0|99-111-110-118-101-114-116-85-116-102-56-84-111-87-99-104-97-114-115-0
19104|data|DCB "getTextTableHeader",0|103-101-116-84-101-120-116-84-97-98-108-101-72-101-97-100-101-114-0
19123|data|DCB "newDataArea",0|110-101-119-68-97-116-97-65-114-101-97-0
19135|data|DCB "runHostCommand",0|114-117-110-72-111-115-116-67-111-109-109-97-110-100-0
19150|data|DCB "isOctalDigit",0|105-115-79-99-116-97-108-68-105-103-105-116-0
19163|data|DCB "asyncDeallocateAlarmData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-65-108-97-114-109-68-97-116-97-0
19188|data|DCB "setTextTableGlyph",0|115-101-116-84-101-120-116-84-97-98-108-101-71-108-121-112-104-0
19206|data|DCB "locatePathName",0|108-111-99-97-116-101-80-97-116-104-78-97-109-101-0
19221|data|DCB "processTextTableLines",0|112-114-111-99-101-115-115-84-101-120-116-84-97-98-108-101-76-105-110-101-115-0
19243|data|DCB "asyncDeallocateTaskData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-84-97-115-107-68-97-116-97-0
19267|data|DCB "logParameters",0|108-111-103-80-97-114-97-109-101-116-101-114-115-0
19281|data|DCB "deallocateQueue",0|100-101-97-108-108-111-99-97-116-101-81-117-101-117-101-0
19297|data|DCB "getDataText",0|103-101-116-68-97-116-97-84-101-120-116-0
19309|data|DCB "ungetDataCharacters",0|117-110-103-101-116-68-97-116-97-67-104-97-114-97-99-116-101-114-115-0
19329|data|DCB "vlogMessage",0|118-108-111-103-77-101-115-115-97-103-101-0
19341|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
19357|data|DCB "writeDots",0|119-114-105-116-101-68-111-116-115-0
19367|data|DCB "createSignalSafeThread",0|99-114-101-97-116-101-83-105-103-110-97-108-83-97-102-101-84-104-114-101-97-100-0
19390|data|DCB "writeKeyEvent",0|119-114-105-116-101-75-101-121-69-118-101-110-116-0
19404|data|DCB "writeInputEvent",0|119-114-105-116-101-73-110-112-117-116-69-118-101-110-116-0
19420|data|DCB "initializeHostCommandOptions",0|105-110-105-116-105-97-108-105-122-101-72-111-115-116-67-111-109-109-97-110-100-79-112-116-105-111-110-115-0
19449|data|DCB "setGlobalTableVariables",0|115-101-116-71-108-111-98-97-108-84-97-98-108-101-86-97-114-105-97-98-108-101-115-0
19473|data|DCB "getLockDescriptor",0|103-101-116-76-111-99-107-68-101-115-99-114-105-112-116-111-114-0
19491|data|DCB "programPath",0|112-114-111-103-114-97-109-80-97-116-104-0
19503|data|DCB "asyncHandlePendingSignal",0|97-115-121-110-99-72-97-110-100-108-101-80-101-110-100-105-110-103-83-105-103-110-97-108-0
19528|data|DCB "includeDataFile",0|105-110-99-108-117-100-101-68-97-116-97-70-105-108-101-0
19544|data|DCB "getLocaleCharset",0|103-101-116-76-111-99-97-108-101-67-104-97-114-115-101-116-0
19561|data|DCB "destroyUinputObject",0|100-101-115-116-114-111-121-85-105-110-112-117-116-79-98-106-101-99-116-0
19581|data|DCB "ensureTextTableExtension",0|101-110-115-117-114-101-84-101-120-116-84-97-98-108-101-69-120-116-101-110-115-105-111-110-0
19606|data|DCB "logUnsupportedFeature",0|108-111-103-85-110-115-117-112-112-111-114-116-101-100-70-101-97-116-117-114-101-0
19628|data|DCB "asyncReadFile",0|97-115-121-110-99-82-101-97-100-70-105-108-101-0
19642|data|DCB "compareTimeValues",0|99-111-109-112-97-114-101-84-105-109-101-86-97-108-117-101-115-0
19660|data|DCB "millisecondsTillNextSecond",0|109-105-108-108-105-115-101-99-111-110-100-115-84-105-108-108-78-101-120-116-83-101-99-111-110-100-0
19687|data|DCB "writeUtf8Cell",0|119-114-105-116-101-85-116-102-56-67-101-108-108-0
19701|data|DCB "processLines",0|112-114-111-99-101-115-115-76-105-110-101-115-0
19714|data|DCB "asyncDeallocateSignalData",0|97-115-121-110-99-68-101-97-108-108-111-99-97-116-101-83-105-103-110-97-108-68-97-116-97-0
19740|data|DCB "asyncSetAlarmTo",0|97-115-121-110-99-83-101-116-65-108-97-114-109-84-111-0
19756|data|DCB "asyncTestHandle",0|97-115-121-110-99-84-101-115-116-72-97-110-100-108-101-0
19772|data|DCB "newUinputObject",0|110-101-119-85-105-110-112-117-116-79-98-106-101-99-116-0
19788|data|DCB "resetDataArea",0|114-101-115-101-116-68-97-116-97-65-114-101-97-0
19802|data|DCB "linuxKeyMap_xtE0",0|108-105-110-117-120-75-101-121-77-97-112-95-120-116-69-48-0
19819|data|DCB "rescaleInteger",0|114-101-115-99-97-108-101-73-110-116-101-103-101-114-0
19834|data|DCB "testPath",0|116-101-115-116-80-97-116-104-0
19843|data|DCB "logCategoryPrefix_disable",0|108-111-103-67-97-116-101-103-111-114-121-80-114-101-102-105-120-95-100-105-115-97-98-108-101-0
19869|data|DCB "defaultCharset",0|100-101-102-97-117-108-116-67-104-97-114-115-101-116-0
19884|data|DCB "asyncNewAddTaskEvent",0|97-115-121-110-99-78-101-119-65-100-100-84-97-115-107-69-118-101-110-116-0
19905|data|DCB "makeWritablePath",0|109-97-107-101-87-114-105-116-97-98-108-101-80-97-116-104-0
19922|data|DCB "asyncDiscardEvent",0|97-115-121-110-99-68-105-115-99-97-114-100-69-118-101-110-116-0
19940|data|DCB "isFloat",0|105-115-70-108-111-97-116-0
19948|data|DCB "disableAllLogCategories",0|100-105-115-97-98-108-101-65-108-108-76-111-103-67-97-116-101-103-111-114-105-101-115-0
19972|data|DCB "unsetAddressName",0|117-110-115-101-116-65-100-100-114-101-115-115-78-97-109-101-0
19989|data|DCB "getConsole",0|103-101-116-67-111-110-115-111-108-101-0
20000|data|DCB "testProcessIdentifier",0|116-101-115-116-80-114-111-99-101-115-115-73-100-101-110-116-105-102-105-101-114-0
20022|data|DCB "asyncWait",0|97-115-121-110-99-87-97-105-116-0
20032|data|DCB "logSystemError",0|108-111-103-83-121-115-116-101-109-69-114-114-111-114-0
20047|data|DCB "linuxKeyMap_atE1",0|108-105-110-117-120-75-101-121-77-97-112-95-97-116-69-49-0
20064|data|DCB "makeTextTablePath",0|109-97-107-101-84-101-120-116-84-97-98-108-101-80-97-116-104-0
20082|data|DCB "readPort1",0|114-101-97-100-80-111-114-116-49-0
20092|data|DCB "obtainLock",0|111-98-116-97-105-110-76-111-99-107-0
20103|data|DCB "asyncNewEvent",0|97-115-121-110-99-78-101-119-69-118-101-110-116-0
20117|data|DCB "freeLockDescriptor",0|102-114-101-101-76-111-99-107-68-101-115-99-114-105-112-116-111-114-0
20136|data|DCB "enqueueItem",0|101-110-113-117-101-117-101-73-116-101-109-0
20148|data|DCB "getNamedPipeDirectory",0|103-101-116-78-97-109-101-100-80-105-112-101-68-105-114-101-99-116-111-114-121-0
20170|data|DCB "fixInstallPath",0|102-105-120-73-110-115-116-97-108-108-80-97-116-104-0
20185|data|DCB "writeUtf8Characters",0|119-114-105-116-101-85-116-102-56-67-104-97-114-97-99-116-101-114-115-0
20205|data|DCB "getDataItem",0|103-101-116-68-97-116-97-73-116-101-109-0
20217|data|DCB "getDataString",0|103-101-116-68-97-116-97-83-116-114-105-110-103-0
20231|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
20247|data|DCB "findSharedSymbol",0|102-105-110-100-83-104-97-114-101-100-83-121-109-98-111-108-0
20264|data|DCB "writableDirectory",0|119-114-105-116-97-98-108-101-68-105-114-101-99-116-111-114-121-0
20282|data|DCB "getProgramQueue",0|103-101-116-80-114-111-103-114-97-109-81-117-101-117-101-0
20298|data|DCB "asyncIsSignalBlocked",0|97-115-121-110-99-73-115-83-105-103-110-97-108-66-108-111-99-107-101-100-0
20319|data|DCB "processAssignOperands",0|112-114-111-99-101-115-115-65-115-115-105-103-110-79-112-101-114-97-110-100-115-0
20341|data|DCB "asyncSetAlarmIn",0|97-115-121-110-99-83-101-116-65-108-97-114-109-73-110-0
20357|data|DCB "newQueue",0|110-101-119-81-117-101-117-101-0
20366|data|DCB "linuxKeyMapCount",0|108-105-110-117-120-75-101-121-77-97-112-67-111-117-110-116-0
20383|data|DCB "closeLogFile",0|99-108-111-115-101-76-111-103-70-105-108-101-0
20396|data|DCB "getBaseCharacter",0|103-101-116-66-97-115-101-67-104-97-114-97-99-116-101-114-0
20413|data|DCB "getCharacterWidth",0|103-101-116-67-104-97-114-97-99-116-101-114-87-105-100-116-104-0
20431|data|DCB "testDirectoryPath",0|116-101-115-116-68-105-114-101-99-116-111-114-121-80-97-116-104-0
20449|data|DCB "ensureDirectory",0|101-110-115-117-114-101-68-105-114-101-99-116-111-114-121-0
20465|data|DCB "openFile",0|111-112-101-110-70-105-108-101-0
20474|data|DCB "getSharedSymbolName",0|103-101-116-83-104-97-114-101-100-83-121-109-98-111-108-78-97-109-101-0
20494|data|DCB "unsetTextTableCharacter",0|117-110-115-101-116-84-101-120-116-84-97-98-108-101-67-104-97-114-97-99-116-101-114-0
20518|data|DCB "acquireFileLock",0|97-99-113-117-105-114-101-70-105-108-101-76-111-99-107-0
20534|data|DCB "isUnsignedInteger",0|105-115-85-110-115-105-103-110-101-100-73-110-116-101-103-101-114-0
20552|data|DCB "asyncMakeElementHandle",0|97-115-121-110-99-77-97-107-101-69-108-101-109-101-110-116-72-97-110-100-108-101-0
20575|data|DCB "logMallocError",0|108-111-103-77-97-108-108-111-99-69-114-114-111-114-0
20590|data|DCB "asyncReleaseSignalNumber",0|97-115-121-110-99-82-101-108-101-97-115-101-83-105-103-110-97-108-78-117-109-98-101-114-0
20615|data|DCB "asyncHandleMonitoredSignal",0|97-115-121-110-99-72-97-110-100-108-101-77-111-110-105-116-111-114-101-100-83-105-103-110-97-108-0
20642|data|DCB "setQueueData",0|115-101-116-81-117-101-117-101-68-97-116-97-0
20655|data|DCB "validateChoice",0|118-97-108-105-100-97-116-101-67-104-111-105-99-101-0
20670|data|DCB "getProcessIdentifier",0|103-101-116-80-114-111-99-101-115-115-73-100-101-110-116-105-102-105-101-114-0
20691|data|DCB "getAddressName",0|103-101-116-65-100-100-114-101-115-115-78-97-109-101-0
20706|data|DCB "getDotOperand",0|103-101-116-68-111-116-79-112-101-114-97-110-100-0
20720|data|DCB "asyncCallWithAllSignalsBlocked",0|97-115-121-110-99-67-97-108-108-87-105-116-104-65-108-108-83-105-103-110-97-108-115-66-108-111-99-107-101-100-0
20751|data|DCB "linuxKeyMap_xtE1",0|108-105-110-117-120-75-101-121-77-97-112-95-120-116-69-49-0
20768|data|DCB "closeSystemLog",0|99-108-111-115-101-83-121-115-116-101-109-76-111-103-0
20783|data|DCB "isLogLevel",0|105-115-76-111-103-76-101-118-101-108-0
20794|data|DCB "formatThreadName",0|102-111-114-109-97-116-84-104-114-101-97-100-78-97-109-101-0
20811|data|DCB "deleteItem",0|100-101-108-101-116-101-73-116-101-109-0
20822|data|DCB "writeEscapedCharacters",0|119-114-105-116-101-69-115-99-97-112-101-100-67-104-97-114-97-99-116-101-114-115-0
20845|data|DCB "deleteElement",0|100-101-108-101-116-101-69-108-101-109-101-110-116-0
20859|data|DCB "writeRepeatPeriod",0|119-114-105-116-101-82-101-112-101-97-116-80-101-114-105-111-100-0
20877|data|DCB "asyncDeleteSignalEntry",0|97-115-121-110-99-68-101-108-101-116-101-83-105-103-110-97-108-69-110-116-114-121-0
20900|data|DCB "makeTextTable",0|109-97-107-101-84-101-120-116-84-97-98-108-101-0
20914|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
20924|data|DCB "GLIBC_2.12",0|71-76-73-66-67-95-50-46-49-50-0
20935|data|DCB "GLIBC_2.17",0|71-76-73-66-67-95-50-46-49-55-0
20946|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
20956|data|DCW 0|0-0
20958|data|DCW 0|0-0
20960|data|DCW 0|0-0
20962|data|DCW 2; chdir@@GLIBC_2.4|2-0
20964|data|DCW 2; stdin@@GLIBC_2.4|2-0
20966|data|DCW 3; pthread_mutex_lock@@GLIBC_2.4|3-0
20968|data|DCW 2; localtime_r@@GLIBC_2.4|2-0
20970|data|DCW 2; wcslen@@GLIBC_2.4|2-0
20972|data|DCW 2; towlower@@GLIBC_2.4|2-0
20974|data|DCW 2; ftruncate@@GLIBC_2.4|2-0
20976|data|DCW 2; iswspace@@GLIBC_2.4|2-0
20978|data|DCW 2; getpid@@GLIBC_2.4|2-0
20980|data|DCW 2; __memcpy_chk@@GLIBC_2.4|2-0
20982|data|DCW 2; mbrtowc@@GLIBC_2.4|2-0
20984|data|DCW 3; pthread_rwlock_destroy@@GLIBC_2.4|3-0
20986|data|DCW 4; dlerror@@GLIBC_2.4|4-0
20988|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
20990|data|DCW 2; opterr@@GLIBC_2.4|2-0
20992|data|DCW 2; strcasecmp@@GLIBC_2.4|2-0
20994|data|DCW 2; fdopen@@GLIBC_2.4|2-0
20996|data|DCW 2; strtol@@GLIBC_2.4|2-0
20998|data|DCW 2; free@@GLIBC_2.4|2-0
21000|data|DCW 4; dladdr@@GLIBC_2.4|4-0
21002|data|DCW 5; __stack_chk_guard@@GLIBC_2.4|5-0
21004|data|DCW 6; pthread_setname_np@@GLIBC_2.12|6-0
21006|data|DCW 2; qsort@@GLIBC_2.4|2-0
21008|data|DCW 2; strncmp@@GLIBC_2.4|2-0
21010|data|DCW 7; __open_2@@GLIBC_2.7|7-0
21012|data|DCW 2; __progname@@GLIBC_2.4|2-0
21014|data|DCW 2; optind@@GLIBC_2.4|2-0
21016|data|DCW 0; local  symbol: u_getIntPropertyValue_52|0-0
21018|data|DCW 2; strerror@@GLIBC_2.4|2-0
21020|data|DCW 2; __xmknod@@GLIBC_2.4|2-0
21022|data|DCW 2; __vsnprintf_chk@@GLIBC_2.4|2-0
21024|data|DCW 4; dlclose@@GLIBC_2.4|4-0
21026|data|DCW 6; pthread_getname_np@@GLIBC_2.12|6-0
21028|data|DCW 2; feof@@GLIBC_2.4|2-0
21030|data|DCW 2; strtok@@GLIBC_2.4|2-0
21032|data|DCW 2; nl_langinfo@@GLIBC_2.4|2-0
21034|data|DCW 2; wmemcpy@@GLIBC_2.4|2-0
21036|data|DCW 2; sigfillset@@GLIBC_2.4|2-0
21038|data|DCW 2; textdomain@@GLIBC_2.4|2-0
21040|data|DCW 2; readlink@@GLIBC_2.4|2-0
21042|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
21044|data|DCW 2; strtoul@@GLIBC_2.4|2-0
21046|data|DCW 3; nanosleep@@GLIBC_2.4|3-0
21048|data|DCW 2; strftime@@GLIBC_2.4|2-0
21050|data|DCW 2; memset@@GLIBC_2.4|2-0
21052|data|DCW 3; pthread_self@@GLIBC_2.4|3-0
21054|data|DCW 2; closelog@@GLIBC_2.4|2-0
21056|data|DCW 3; recv@@GLIBC_2.4|3-0
21058|data|DCW 3; fcntl@@GLIBC_2.4|3-0
21060|data|DCW 3; pthread_sigmask@@GLIBC_2.4|3-0
21062|data|DCW 3; pthread_rwlock_rdlock@@GLIBC_2.4|3-0
21064|data|DCW 2; wcschr@@GLIBC_2.4|2-0
21066|data|DCW 2; snprintf@@GLIBC_2.4|2-0
21068|data|DCW 2; __strdup@@GLIBC_2.4|2-0
21070|data|DCW 2; sigaddset@@GLIBC_2.4|2-0
21072|data|DCW 3; close@@GLIBC_2.4|3-0
21074|data|DCW 2; wmemcmp@@GLIBC_2.4|2-0
21076|data|DCW 2; fopen@@GLIBC_2.4|2-0
21078|data|DCW 2; optarg@@GLIBC_2.4|2-0
21080|data|DCW 3; read@@GLIBC_2.4|3-0
21082|data|DCW 2; wmemchr@@GLIBC_2.4|2-0
21084|data|DCW 2; abort@@GLIBC_2.4|2-0
21086|data|DCW 3; pthread_once@@GLIBC_2.4|3-0
21088|data|DCW 2; poll@@GLIBC_2.4|2-0
21090|data|DCW 2; __ctype_toupper_loc@@GLIBC_2.4|2-0
21092|data|DCW 2; memmove@@GLIBC_2.4|2-0
21094|data|DCW 2; strpbrk@@GLIBC_2.4|2-0
21096|data|DCW 4; dlopen@@GLIBC_2.4|4-0
21098|data|DCW 3; __libc_current_sigrtmin@@GLIBC_2.4|3-0
21100|data|DCW 2; kill@@GLIBC_2.4|2-0
21102|data|DCW 2; ioctl@@GLIBC_2.4|2-0
21104|data|DCW 8; clock_gettime@@GLIBC_2.17|8-0
21106|data|DCW 2; realloc@@GLIBC_2.4|2-0
21108|data|DCW 2; strcpy@@GLIBC_2.4|2-0
21110|data|DCW 2; strtod@@GLIBC_2.4|2-0
21112|data|DCW 3; open@@GLIBC_2.4|3-0
21114|data|DCW 3; waitpid@@GLIBC_2.4|3-0
21116|data|DCW 2; stderr@@GLIBC_2.4|2-0
21118|data|DCW 2; fread@@GLIBC_2.4|2-0
21120|data|DCW 3; pthread_getspecific@@GLIBC_2.4|3-0
21122|data|DCW 2; fileno@@GLIBC_2.4|2-0
21124|data|DCW 3; pthread_rwlock_unlock@@GLIBC_2.4|3-0
21126|data|DCW 2; optopt@@GLIBC_2.4|2-0
21128|data|DCW 2; __syslog_chk@@GLIBC_2.4|2-0
21130|data|DCW 3; pthread_rwlock_wrlock@@GLIBC_2.4|3-0
21132|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
21134|data|DCW 3; pthread_rwlock_tryrdlock@@GLIBC_2.4|3-0
21136|data|DCW 3; fork@@GLIBC_2.4|3-0
21138|data|DCW 2; access@@GLIBC_2.4|2-0
21140|data|DCW 2; sigdelset@@GLIBC_2.4|2-0
21142|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
21144|data|DCW 2; dcgettext@@GLIBC_2.4|2-0
21146|data|DCW 2; mkdir@@GLIBC_2.4|2-0
21148|data|DCW 2; __cxa_atexit@@GLIBC_2.4|2-0
21150|data|DCW 2; strncasecmp@@GLIBC_2.4|2-0
21152|data|DCW 3; pthread_key_create@@GLIBC_2.4|3-0
21154|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
21156|data|DCW 3; lseek@@GLIBC_2.4|3-0
21158|data|DCW 3; raise@@GLIBC_2.4|3-0
21160|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
21162|data|DCW 2; bindtextdomain@@GLIBC_2.4|2-0
21164|data|DCW 3; sigaction@@GLIBC_2.4|3-0
21166|data|DCW 2; calloc@@GLIBC_2.4|2-0
21168|data|DCW 2; setlocale@@GLIBC_2.4|2-0
21170|data|DCW 2; ferror@@GLIBC_2.4|2-0
21172|data|DCW 2; iconv_close@@GLIBC_2.4|2-0
21174|data|DCW 2; fgets@@GLIBC_2.4|2-0
21176|data|DCW 2; __fxstat@@GLIBC_2.4|2-0
21178|data|DCW 0; local  symbol: u_charFromName_52|0-0
21180|data|DCW 3; flockfile@@GLIBC_2.4|3-0
21182|data|DCW 2; fputc@@GLIBC_2.4|2-0
21184|data|DCW 2; fwrite@@GLIBC_2.4|2-0
21186|data|DCW 2; memcpy@@GLIBC_2.4|2-0
21188|data|DCW 0; local  symbol: unorm_normalize_52|0-0
21190|data|DCW 2; malloc@@GLIBC_2.4|2-0
21192|data|DCW 2; strlen@@GLIBC_2.4|2-0
21194|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
21196|data|DCW 2; ioperm@@GLIBC_2.4|2-0
21198|data|DCW 2; outb@@GLIBC_2.4|2-0
21200|data|DCW 3; pthread_setspecific@@GLIBC_2.4|3-0
21202|data|DCW 2; getcwd@@GLIBC_2.4|2-0
21204|data|DCW 2; fclose@@GLIBC_2.4|2-0
21206|data|DCW 3; write@@GLIBC_2.4|3-0
21208|data|DCW 2; inb@@GLIBC_2.4|2-0
21210|data|DCW 2; sigismember@@GLIBC_2.4|2-0
21212|data|DCW 2; mempcpy@@GLIBC_2.4|2-0
21214|data|DCW 2; __xstat@@GLIBC_2.4|2-0
21216|data|DCW 3; pthread_rwlock_trywrlock@@GLIBC_2.4|3-0
21218|data|DCW 2; __realpath_chk@@GLIBC_2.4|2-0
21220|data|DCW 2; stdout@@GLIBC_2.4|2-0
21222|data|DCW 2; iconv_open@@GLIBC_2.4|2-0
21224|data|DCW 3; pthread_rwlock_init@@GLIBC_2.4|3-0
21226|data|DCW 2; _exit@@GLIBC_2.4|2-0
21228|data|DCW 3; pthread_create@@GLIBC_2.4|3-0
21230|data|DCW 2; strcmp@@GLIBC_2.4|2-0
21232|data|DCW 2; iconv@@GLIBC_2.4|2-0
21234|data|DCW 3; __errno_location@@GLIBC_2.4|3-0
21236|data|DCW 3; send@@GLIBC_2.4|3-0
21238|data|DCW 2; memchr@@GLIBC_2.4|2-0
21240|data|DCW 2; sscanf@@GLIBC_2.4|2-0
21242|data|DCW 2; strncpy@@GLIBC_2.4|2-0
21244|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
21246|data|DCW 2; fflush@@GLIBC_2.4|2-0
21248|data|DCW 2; memcmp@@GLIBC_2.4|2-0
21250|data|DCW 3; __libc_current_sigrtmax@@GLIBC_2.4|3-0
21252|data|DCW 2; sigemptyset@@GLIBC_2.4|2-0
21254|data|DCW 2; strrchr@@GLIBC_2.4|2-0
21256|data|DCW 3; funlockfile@@GLIBC_2.4|3-0
21258|data|DCW 2; mktime@@GLIBC_2.4|2-0
21260|data|DCW 2; openlog@@GLIBC_2.4|2-0
21262|data|DCW 2; program_invocation_short_name@@GLIBC_2.4|2-0
21264|data|DCW 2; fputs@@GLIBC_2.4|2-0
21266|data|DCW 2; getenv@@GLIBC_2.4|2-0
21268|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
21270|data|DCW 4; dlsym@@GLIBC_2.4|4-0
21272|data|DCW 2; execvp@@GLIBC_2.4|2-0
21274|data|DCW 0; local  symbol: __gmon_start__|0-0
21276|data|DCW 2; sigprocmask@@GLIBC_2.4|2-0
21278|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
21280|data|DCW 2; mbsinit@@GLIBC_2.4|2-0
21282|data|DCW 2; strchr@@GLIBC_2.4|2-0
21284|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
21286|data|DCW 3; pthread_mutex_unlock@@GLIBC_2.4|3-0
21288|data|DCW 2; wcrtomb@@GLIBC_2.4|2-0
21290|data|DCW 2; iswcntrl@@GLIBC_2.4|2-0
21292|data|DCW 2; pipe@@GLIBC_2.4|2-0
21294|data|DCW 1; global symbol: processQueue|1-0
21296|data|DCW 1; global symbol: getParameters|1-0
21298|data|DCW 1; global symbol: beginProgram|1-0
21300|data|DCW 1; global symbol: asyncSignalEvent|1-0
21302|data|DCW 1; global symbol: compareTimeValues|1-0
21304|data|DCW 1; global symbol: openDataFile|1-0
21306|data|DCW 1; global symbol: getDataSize|1-0
21308|data|DCW 1; global symbol: createThread|1-0
21310|data|DCW 1; global symbol: getLocaleCharset|1-0
21312|data|DCW 1; global symbol: logSymbol|1-0
21314|data|DCW 1; global symbol: getWritableDirectory|1-0
21316|data|DCW 1; global symbol: joinPath|1-0
21318|data|DCW 1; global symbol: asyncDeallocateTaskData|1-0
21320|data|DCW 1; global symbol: setTextTableCharacter|1-0
21322|data|DCW 1; global symbol: testProgramPath|1-0
21324|data|DCW 1; global symbol: asyncHandleSignal|1-0
21326|data|DCW 1; global symbol: includeDataFile|1-0
21328|data|DCW 1; global symbol: writeDotsCell|1-0
21330|data|DCW 1; global symbol: writeRepeatDelay|1-0
21332|data|DCW 1; global symbol: asyncMonitorSocketOutput|1-0
21334|data|DCW 1; global symbol: standardErrorName|1-0
21336|data|DCW 1; global symbol: prepareHostCommandStream|1-0
21338|data|DCW 1; global symbol: deleteItem|1-0
21340|data|DCW 1; global symbol: getUtf8Length|1-0
21342|data|DCW 1; global symbol: asyncMakeHandle|1-0
21344|data|DCW 1; global symbol: startTimePeriod|1-0
21346|data|DCW 1; global symbol: defaultCharset|1-0
21348|data|DCW 1; global symbol: flushStream|1-0
21350|data|DCW 1; global symbol: processDataStream|1-0
21352|data|DCW 1; global symbol: findItem|1-0
21354|data|DCW 1; global symbol: writeInputEvent|1-0
21356|data|DCW 1; global symbol: getMonotonicElapsed|1-0
21358|data|DCW 1; global symbol: runCommand|1-0
21360|data|DCW 1; global symbol: findElement|1-0
21362|data|DCW 1; global symbol: normalizeTimeValue|1-0
21364|data|DCW 1; global symbol: asyncCallWithSignalBlocked|1-0
21366|data|DCW 1; global symbol: getDeviceParameters|1-0
21368|data|DCW 1; global symbol: writeRepeatPeriod|1-0
21370|data|DCW 1; global symbol: readSocketDescriptor|1-0
21372|data|DCW 1; global symbol: getCellsOperand|1-0
21374|data|DCW 1; global symbol: openLogFile|1-0
21376|data|DCW 1; global symbol: setCharset|1-0
21378|data|DCW 1; global symbol: makePath|1-0
21380|data|DCW 1; global symbol: processDataFile|1-0
21382|data|DCW 1; global symbol: processTextTableLines|1-0
21384|data|DCW 1; global symbol: processIfNotVarOperands|1-0
21386|data|DCW 1; global symbol: asyncResetAlarmEvery|1-0
21388|data|DCW 1; global symbol: validateInteger|1-0
21390|data|DCW 1; global symbol: rescaleInteger|1-0
21392|data|DCW 1; global symbol: asyncCallWithAllSignalsBlocked|1-0
21394|data|DCW 1; global symbol: formatThreadName|1-0
21396|data|DCW 1; global symbol: makeFilePath|1-0
21398|data|DCW 1; global symbol: setGlobalDataVariable|1-0
21400|data|DCW 1; global symbol: _end|1-0
21402|data|DCW 1; global symbol: writePort1|1-0
21404|data|DCW 1; global symbol: writeConsole|1-0
21406|data|DCW 1; global symbol: getLocaleName|1-0
21408|data|DCW 1; global symbol: asyncTestHandle|1-0
21410|data|DCW 1; global symbol: logParameters|1-0
21412|data|DCW 1; global symbol: logSystemError|1-0
21414|data|DCW 1; global symbol: locatePathName|1-0
21416|data|DCW 1; global symbol: ensureFileExtension|1-0
21418|data|DCW 1; global symbol: getConsole|1-0
21420|data|DCW 1; global symbol: processIfVarOperands|1-0
21422|data|DCW 1; global symbol: logLevelCount|1-0
21424|data|DCW 1; global symbol: getLogCategoryTitle|1-0
21426|data|DCW 1; global symbol: replaceFileExtension|1-0
21428|data|DCW 1; global symbol: logLevelNames|1-0
21430|data|DCW 1; global symbol: logUnsupportedFeature|1-0
21432|data|DCW 1; global symbol: ensureDirectory|1-0
21434|data|DCW 1; global symbol: newLockDescriptor|1-0
21436|data|DCW 1; global symbol: logMessage|1-0
21438|data|DCW 1; global symbol: asyncAwaitCondition|1-0
21440|data|DCW 1; global symbol: installKernelModule|1-0
21442|data|DCW 1; global symbol: finishHostCommandStream|1-0
21444|data|DCW 1; global symbol: brlDotBitToIndex|1-0
21446|data|DCW 1; global symbol: convertUtf8ToWchar|1-0
21448|data|DCW 1; global symbol: writeDotsCells|1-0
21450|data|DCW 1; global symbol: getTextTableItem|1-0
21452|data|DCW 1; global symbol: setQueueData|1-0
21454|data|DCW 1; global symbol: convertUtf8ToWchars|1-0
21456|data|DCW 1; global symbol: isAbsolutePath|1-0
21458|data|DCW 1; global symbol: textTable|1-0
21460|data|DCW 1; global symbol: getPrimaryOverrideDirectory|1-0
21462|data|DCW 1; global symbol: obtainLock|1-0
21464|data|DCW 1; global symbol: readFileDescriptor|1-0
21466|data|DCW 1; global symbol: systemLogLevel|1-0
21468|data|DCW 1; global symbol: unlockCharset|1-0
21470|data|DCW 1; global symbol: pushLogPrefix|1-0
21472|data|DCW 1; global symbol: getProgramQueue|1-0
21474|data|DCW 1; global symbol: adjustTimeValue|1-0
21476|data|DCW 1; global symbol: convertCharToUtf8|1-0
21478|data|DCW 1; global symbol: parseDataString|1-0
21480|data|DCW 1; global symbol: processHostCommandStreams|1-0
21482|data|DCW 1; global symbol: asyncDeleteSignalEntry|1-0
21484|data|DCW 1; global symbol: destroyDataArea|1-0
21486|data|DCW 1; global symbol: testProcessIdentifier|1-0
21488|data|DCW 1; global symbol: logCategoryName_all|1-0
21490|data|DCW 1; global symbol: isPathDelimiter|1-0
21492|data|DCW 1; global symbol: writeFileDescriptor|1-0
21494|data|DCW 1; global symbol: constructHostCommandPackageData|1-0
21496|data|DCW 1; global symbol: registerProgramMemory|1-0
21498|data|DCW 1; global symbol: onProgramExit|1-0
21500|data|DCW 1; global symbol: locatePathExtension|1-0
21502|data|DCW 1; global symbol: openFile|1-0
21504|data|DCW 1; global symbol: getWcharCharset|1-0
21506|data|DCW 1; global symbol: isHexadecimalDigit|1-0
21508|data|DCW 1; global symbol: moveElement|1-0
21510|data|DCW 1; global symbol: asyncMonitorEventPipe|1-0
21512|data|DCW 1; global symbol: validateYesNo|1-0
21514|data|DCW 1; global symbol: splitString|1-0
21516|data|DCW 1; global symbol: acquireFileLock|1-0
21518|data|DCW 1; global symbol: validateChoice|1-0
21520|data|DCW 1; global symbol: setTextTableByte|1-0
21522|data|DCW 1; global symbol: asyncResetAlarmTo|1-0
21524|data|DCW 1; global symbol: data_start|1-0
21526|data|DCW 1; global symbol: allocateDataItem|1-0
21528|data|DCW 1; global symbol: loadSharedObject|1-0
21530|data|DCW 1; global symbol: _start|1-0
21532|data|DCW 1; global symbol: getBaseCharacter|1-0
21534|data|DCW 1; global symbol: __end__|1-0
21536|data|DCW 1; global symbol: getDotOperand|1-0
21538|data|DCW 1; global symbol: brlDotNumbers|1-0
21540|data|DCW 1; global symbol: asyncExecuteAlarmCallback|1-0
21542|data|DCW 1; global symbol: getCharset|1-0
21544|data|DCW 1; global symbol: getPathDirectory|1-0
21546|data|DCW 1; global symbol: _edata|1-0
21548|data|DCW 1; global symbol: convertWcharToUtf8|1-0
21550|data|DCW 1; global symbol: standardInputName|1-0
21552|data|DCW 1; global symbol: isNumber|1-0
21554|data|DCW 1; global symbol: dequeueItem|1-0
21556|data|DCW 1; global symbol: asyncMonitorSocketInput|1-0
21558|data|DCW 1; global symbol: getQueueSize|1-0
21560|data|DCW 1; global symbol: programName|1-0
21562|data|DCW 1; global symbol: getLockDescriptor|1-0
21564|data|DCW 1; global symbol: writableDirectory|1-0
21566|data|DCW 1; global symbol: expandTimeValue|1-0
21568|data|DCW 1; global symbol: convertCharacterToDots|1-0
21570|data|DCW 1; global symbol: isOctalDigit|1-0
21572|data|DCW 1; global symbol: isKeyword|1-0
21574|data|DCW 1; global symbol: getSharedSymbolName|1-0
21576|data|DCW 1; global symbol: logMallocError|1-0
21578|data|DCW 1; global symbol: getElementIdentifier|1-0
21580|data|DCW 1; global symbol: disableAllLogCategories|1-0
21582|data|DCW 1; global symbol: standardStreamArgument|1-0
21584|data|DCW 1; global symbol: __bss_start__|1-0
21586|data|DCW 1; global symbol: readLine|1-0
21588|data|DCW 1; global symbol: linuxKeyMap_xtE0|1-0
21590|data|DCW 1; global symbol: freeLockDescriptor|1-0
21592|data|DCW 1; global symbol: writeDots|1-0
21594|data|DCW 1; global symbol: linuxKeyMap_xtE1|1-0
21596|data|DCW 1; global symbol: asyncCallWithObtainableSignalsBlocked|1-0
21598|data|DCW 1; global symbol: getProcessIdentifier|1-0
21600|data|DCW 1; global symbol: findDataOperand|1-0
21602|data|DCW 1; global symbol: linuxKeyMapCount|1-0
21604|data|DCW 1; global symbol: asyncDeallocateSignalData|1-0
21606|data|DCW 1; global symbol: processAssignOperands|1-0
21608|data|DCW 1; global symbol: cancelProcess|1-0
21610|data|DCW 1; global symbol: asyncHandlePendingSignal|1-0
21612|data|DCW 1; global symbol: isUnqualifiedDevice|1-0
21614|data|DCW 1; global symbol: asyncGetThreadSpecificData|1-0
21616|data|DCW 1; global symbol: getElementItem|1-0
21618|data|DCW 1; global symbol: getBootParameters|1-0
21620|data|DCW 1; global symbol: convertDotsToCharacter|1-0
21622|data|DCW 1; global symbol: asyncAddSignalEntry|1-0
21624|data|DCW 1; global symbol: createDirectory|1-0
21626|data|DCW 1; global symbol: ungetDataCharacters|1-0
21628|data|DCW 1; global symbol: newQueue|1-0
21630|data|DCW 1; global symbol: logBytes|1-0
21632|data|DCW 1; global symbol: asyncExecuteIoCallback|1-0
21634|data|DCW 1; global symbol: requeueElement|1-0
21636|data|DCW 1; global symbol: _bss_end__|1-0
21638|data|DCW 1; global symbol: parseCellsOperand|1-0
21640|data|DCW 1; global symbol: setGlobalTableVariables|1-0
21642|data|DCW 1; global symbol: resetOptions|1-0
21644|data|DCW 1; global symbol: getAddressName|1-0
21646|data|DCW 1; global symbol: getDataCharacter|1-0
21648|data|DCW 1; global symbol: asyncMonitorSocketAlert|1-0
21650|data|DCW 1; global symbol: asyncWriteSocket|1-0
21652|data|DCW 1; global symbol: lockCharset|1-0
21654|data|DCW 1; global symbol: asyncReadSocket|1-0
21656|data|DCW 1; global symbol: asyncMonitorFileOutput|1-0
21658|data|DCW 1; global symbol: asyncDeallocateWaitData|1-0
21660|data|DCW 1; global symbol: installService|1-0
21662|data|DCW 1; global symbol: compileTextTable|1-0
21664|data|DCW 1; global symbol: logCategoryPrefix_disable|1-0
21666|data|DCW 1; global symbol: unsetAddressName|1-0
21668|data|DCW 1; global symbol: isLogLevel|1-0
21670|data|DCW 1; global symbol: getNamedPipeDirectory|1-0
21672|data|DCW 1; global symbol: formatSeconds|1-0
21674|data|DCW 1; global symbol: getDataString|1-0
21676|data|DCW 1; global symbol: processElseOperands|1-0
21678|data|DCW 1; global symbol: registerCharacterSet|1-0
21680|data|DCW 1; global symbol: resolveDeviceName|1-0
21682|data|DCW 1; global symbol: setLogCategory|1-0
21684|data|DCW 1; global symbol: programPath|1-0
21686|data|DCW 1; global symbol: removeService|1-0
21688|data|DCW 1; global symbol: enqueueItem|1-0
21690|data|DCW 1; global symbol: cancelProgram|1-0
21692|data|DCW 1; global symbol: findElementWithItem|1-0
21694|data|DCW 1; global symbol: createPidFile|1-0
21696|data|DCW 1; global symbol: createSignalSafeThread|1-0
21698|data|DCW 1; global symbol: asyncDiscardEvent|1-0
21700|data|DCW 1; global symbol: asyncNewEvent|1-0
21702|data|DCW 1; global symbol: asyncHandleAddTaskEvent|1-0
21704|data|DCW 1; global symbol: _fini|1-0
21706|data|DCW 1; global symbol: getDataItem|1-0
21708|data|DCW 1; global symbol: enableUinputEventType|1-0
21710|data|DCW 1; global symbol: _IO_stdin_used|1-0
21712|data|DCW 1; global symbol: extendStringSetting|1-0
21714|data|DCW 1; global symbol: __data_start|1-0
21716|data|DCW 1; global symbol: initializeHostCommandOptions|1-0
21718|data|DCW 1; global symbol: getQueueHead|1-0
21720|data|DCW 1; global symbol: asyncDiscardHandle|1-0
21722|data|DCW 1; global symbol: __libc_csu_fini|1-0
21724|data|DCW 1; global symbol: asyncSetAlarmIn|1-0
21726|data|DCW 1; global symbol: deleteElement|1-0
21728|data|DCW 1; global symbol: joinStrings|1-0
21730|data|DCW 1; global symbol: setThreadName|1-0
21732|data|DCW 1; global symbol: asyncWriteFile|1-0
21734|data|DCW 1; global symbol: logPossibleCause|1-0
21736|data|DCW 1; global symbol: unloadSharedObject|1-0
21738|data|DCW 1; global symbol: processLines|1-0
21740|data|DCW 1; global symbol: getDataOperand|1-0
21742|data|DCW 1; global symbol: unsetTextTableCharacter|1-0
21744|data|DCW 1; global symbol: deleteElements|1-0
21746|data|DCW 1; global symbol: deallocateQueue|1-0
21748|data|DCW 1; global symbol: openCharacterDevice|1-0
21750|data|DCW 1; global symbol: _init|1-0
21752|data|DCW 1; global symbol: destroyTextTableData|1-0
21754|data|DCW 1; global symbol: convertTextToWchars|1-0
21756|data|DCW 1; global symbol: logData|1-0
21758|data|DCW 1; global symbol: millisecondsTillNextMinute|1-0
21760|data|DCW 1; global symbol: destroyTextTable|1-0
21762|data|DCW 1; global symbol: linuxKeyMap_atE0|1-0
21764|data|DCW 1; global symbol: getWorkingDirectory|1-0
21766|data|DCW 1; global symbol: getTextTableHeader|1-0
21768|data|DCW 1; global symbol: __libc_csu_init|1-0
21770|data|DCW 1; global symbol: linuxKeyMap_atE1|1-0
21772|data|DCW 1; global symbol: attemptFileLock|1-0
21774|data|DCW 1; global symbol: registerProgramStream|1-0
21776|data|DCW 1; global symbol: isExplicitPath|1-0
21778|data|DCW 1; global symbol: isFloat|1-0
21780|data|DCW 1; global symbol: makeUtf8FromWchars|1-0
21782|data|DCW 1; global symbol: closeLogFile|1-0
21784|data|DCW 1; global symbol: unlockMutex|1-0
21786|data|DCW 1; global symbol: setTextTableGlyph|1-0
21788|data|DCW 1; global symbol: writeHexadecimalCharacter|1-0
21790|data|DCW 1; global symbol: releaseFileLock|1-0
21792|data|DCW 1; global symbol: makeWritablePath|1-0
21794|data|DCW 1; global symbol: getCharacterWidth|1-0
21796|data|DCW 1; global symbol: stderrLogLevel|1-0
21798|data|DCW 1; global symbol: testPath|1-0
21800|data|DCW 1; global symbol: replaceTextTable|1-0
21802|data|DCW 1; global symbol: asyncCallWithSignalsBlocked|1-0
21804|data|DCW 1; global symbol: convertWcharToChar|1-0
21806|data|DCW 1; global symbol: newUinputObject|1-0
21808|data|DCW 1; global symbol: endProgram|1-0
21810|data|DCW 1; global symbol: asyncRevertSignal|1-0
21812|data|DCW 1; global symbol: getStackHead|1-0
21814|data|DCW 1; global symbol: asyncMonitorSignal|1-0
21816|data|DCW 1; global symbol: getDeviceDirectory|1-0
21818|data|DCW 1; global symbol: processConditionOperands|1-0
21820|data|DCW 1; global symbol: asyncIgnoreSignal|1-0
21822|data|DCW 1; global symbol: newDataArea|1-0
21824|data|DCW 1; global symbol: compareKeywords|1-0
21826|data|DCW 1; global symbol: asyncMakeElementHandle|1-0
21828|data|DCW 1; global symbol: processIncludeOperands|1-0
21830|data|DCW 1; global symbol: linuxKeyMapDescriptors|1-0
21832|data|DCW 1; global symbol: handleBestCharacter|1-0
21834|data|DCW 1; global symbol: writeUtf8Cells|1-0
21836|data|DCW 1; global symbol: __bss_start|1-0
21838|data|DCW 1; global symbol: compareKeyword|1-0
21840|data|DCW 1; global symbol: isUnsignedInteger|1-0
21842|data|DCW 1; global symbol: categoryLogLevel|1-0
21844|data|DCW 1; global symbol: isPosixLocale|1-0
21846|data|DCW 1; global symbol: validateFloat|1-0
21848|data|DCW 1; global symbol: asyncGetHandleElement|1-0
21850|data|DCW 1; global symbol: processTextTableStream|1-0
21852|data|DCW 1; global symbol: processEndIfOperands|1-0
21854|data|DCW 1; global symbol: fixInstallPaths|1-0
21856|data|DCW 1; global symbol: getElementQueue|1-0
21858|data|DCW 1; global symbol: brlDotBits|1-0
21860|data|DCW 1; global symbol: readPort1|1-0
21862|data|DCW 1; global symbol: asyncMonitorFileInput|1-0
21864|data|DCW 1; global symbol: findSharedSymbol|1-0
21866|data|DCW 1; global symbol: convertUtf8ToChar|1-0
21868|data|DCW 1; global symbol: hasFileExtension|1-0
21870|data|DCW 1; global symbol: releaseLock|1-0
21872|data|DCW 1; global symbol: makeTextTablePath|1-0
21874|data|DCW 1; global symbol: asyncSetSignalBlocked|1-0
21876|data|DCW 1; global symbol: millisecondsBetween|1-0
21878|data|DCW 1; global symbol: asyncObtainSignalNumber|1-0
21880|data|DCW 1; global symbol: initializeSystemObject|1-0
21882|data|DCW 1; global symbol: writeSocketDescriptor|1-0
21884|data|DCW 1; global symbol: linuxKeyMap_xt00|1-0
21886|data|DCW 1; global symbol: asyncDeallocateAlarmData|1-0
21888|data|DCW 1; global symbol: approximateDelay|1-0
21890|data|DCW 1; global symbol: asyncExecuteTaskCallback|1-0
21892|data|DCW 1; global symbol: getCharacterByName|1-0
21894|data|DCW 1; global symbol: millisecondsTillNextSecond|1-0
21896|data|DCW 1; global symbol: newUinputKeyboard|1-0
21898|data|DCW 1; global symbol: fixInstallPath|1-0
21900|data|DCW 1; global symbol: getQueueElement|1-0
21902|data|DCW 1; global symbol: makeTimeValue|1-0
21904|data|DCW 1; global symbol: writeEscapedCharacters|1-0
21906|data|DCW 1; global symbol: asyncClaimSignalNumber|1-0
21908|data|DCW 1; global symbol: testFilePath|1-0
21910|data|DCW 1; global symbol: destroyUinputObject|1-0
21912|data|DCW 1; global symbol: linuxKeyMap_hid|1-0
21914|data|DCW 1; global symbol: enablePorts|1-0
21916|data|DCW 1; global symbol: writeUtf8Characters|1-0
21918|data|DCW 1; global symbol: asyncIsSignalBlocked|1-0
21920|data|DCW 1; global symbol: getQueueData|1-0
21922|data|DCW 1; global symbol: createUinputDevice|1-0
21924|data|DCW 1; global symbol: resetDataArea|1-0
21926|data|DCW 1; global symbol: saveDataItem|1-0
21928|data|DCW 1; global symbol: releasePressedKeys|1-0
21930|data|DCW 1; global symbol: getTextLength|1-0
21932|data|DCW 1; global symbol: createAnonymousPipe|1-0
21934|data|DCW 1; global symbol: writeKeyEvent|1-0
21936|data|DCW 1; global symbol: lockMutex|1-0
21938|data|DCW 1; global symbol: getMonotonicTime|1-0
21940|data|DCW 1; global symbol: getProgramPath|1-0
21942|data|DCW 1; global symbol: asyncAddTask|1-0
21944|data|DCW 1; global symbol: logUnsupportedOperation|1-0
21946|data|DCW 1; global symbol: asyncDeallocateIoData|1-0
21948|data|DCW 1; global symbol: vlogMessage|1-0
21950|data|DCW 1; global symbol: selectTextTable|1-0
21952|data|DCW 1; global symbol: isQualifiedDevice|1-0
21954|data|DCW 1; global symbol: getHomeDirectory|1-0
21956|data|DCW 1; global symbol: asyncEmptySignalHandler|1-0
21958|data|DCW 1; global symbol: restartTimePeriod|1-0
21960|data|DCW 1; global symbol: standardOutputName|1-0
21962|data|DCW 1; global symbol: asyncMonitorFileAlert|1-0
21964|data|DCW 1; global symbol: getCurrentTime|1-0
21966|data|DCW 1; global symbol: getUnicodeCellEntry|1-0
21968|data|DCW 1; global symbol: asyncReadFile|1-0
21970|data|DCW 1; global symbol: popLogPrefix|1-0
21972|data|DCW 1; global symbol: formatInputError|1-0
21974|data|DCW 1; global symbol: asyncWait|1-0
21976|data|DCW 1; global symbol: makeTextTable|1-0
21978|data|DCW 1; global symbol: testDirectoryPath|1-0
21980|data|DCW 1; global symbol: writeUtf8Character|1-0
21982|data|DCW 1; global symbol: logActionError|1-0
21984|data|DCW 1; global symbol: asyncResetAlarmIn|1-0
21986|data|DCW 1; global symbol: afterTimePeriod|1-0
21988|data|DCW 1; global symbol: destructHostCommandPackageData|1-0
21990|data|DCW 1; global symbol: validateFlag|1-0
21992|data|DCW 1; global symbol: newTextTableData|1-0
21994|data|DCW 1; global symbol: validateOnOff|1-0
21996|data|DCW 1; global symbol: getDataText|1-0
21998|data|DCW 1; global symbol: setWorkingDirectory|1-0
22000|data|DCW 1; global symbol: deallocateStrings|1-0
22002|data|DCW 1; global symbol: getAllOverrideDirectories|1-0
22004|data|DCW 1; global symbol: asyncRelinquishSignalNumber|1-0
22006|data|DCW 1; global symbol: __bss_end__|1-0
22008|data|DCW 1; global symbol: processOptions|1-0
22010|data|DCW 1; global symbol: disablePorts|1-0
22012|data|DCW 1; global symbol: convertCharToWchar|1-0
22014|data|DCW 1; global symbol: closeSystemLog|1-0
22016|data|DCW 1; global symbol: reportDataError|1-0
22018|data|DCW 1; global symbol: enableUinputKey|1-0
22020|data|DCW 1; global symbol: executeHostCommand|1-0
22022|data|DCW 1; global symbol: isAbbreviation|1-0
22024|data|DCW 1; global symbol: asyncHandleMonitoredSignal|1-0
22026|data|DCW 1; global symbol: getLogCategoryName|1-0
22028|data|DCW 1; global symbol: asyncSetAlarmTo|1-0
22030|data|DCW 1; global symbol: getDevicePath|1-0
22032|data|DCW 1; global symbol: setAddressName|1-0
22034|data|DCW 1; global symbol: runHostCommand|1-0
22036|data|DCW 1; global symbol: processDirectiveOperand|1-0
22038|data|DCW 1; global symbol: ensureTextTableExtension|1-0
22040|data|DCW 1; global symbol: logCategoryFlags|1-0
22042|data|DCW 1; global symbol: linuxKeyMap_at00|1-0
22044|data|DCW 1; global symbol: asyncReleaseSignalNumber|1-0
22046|data|DCW 1; global symbol: getStackElement|1-0
22048|data|DCW 1; global symbol: openSystemLog|1-0
22050|data|DCW 1; global symbol: asyncBlockObtainableSignals|1-0
22052|data|DCW 1; global symbol: getTransliteratedCharacter|1-0
22054|data|DCW 1; global symbol: linuxKeyMap_ps2|1-0
22056|data|DCW 1; global symbol: asyncNewAddTaskEvent|1-0
22058|data|DCW 1; global symbol: writeEscapedCharacter|1-0
22060|data|DCW 1; global symbol: changeStringSetting|1-0
22062|data|DCW 1; global symbol: isInteger|1-0
22064|data|DCW 1; global symbol: asyncCancelRequest|1-0
22066|data|DCW 1; global symbol: main|1-0
22068|data|DCW 1; global symbol: ringBell|1-0
22070|data|DCW 1; global symbol: brlDotNumberToIndex|1-0
22072|data|DCW 1; global symbol: writeUtf8Cell|1-0
22074|data|DCW 0|0-0
22076|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_30E8, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-13-7-0-0-16-0-0-0-32-0-0-0
22092|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_30E8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-202-32-0-0-0-0-0-0
22108|data|Elf32_Verneed <1, 1, aLibdlSo2 - byte_30E8, 0x10, 0x20>; "libdl.so.2"|1-0-1-0-202-0-0-0-16-0-0-0-32-0-0-0
22124|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_30E8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-202-32-0-0-0-0-0-0
22140|data|Elf32_Verneed <1, 2, aLibpthreadSo0 - byte_30E8, 0x10, 0x30>; "libpthread.so.0"|1-0-2-0-5-1-0-0-16-0-0-0-48-0-0-0
22156|data|Elf32_Vernaux <0x6969192, 0, 6, aGlibc212 - byte_30E8, 0x10>; "GLIBC_2.12"|146-145-150-6-0-0-6-0-212-32-0-0-16-0-0-0
22172|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_30E8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-202-32-0-0-0-0-0-0
22188|data|Elf32_Verneed <1, 3, aLibcSo6 - byte_30E8, 0x10, 0>; "libc.so.6"|1-0-3-0-10-3-0-0-16-0-0-0-0-0-0-0
22204|data|Elf32_Vernaux <0x6969197, 0, 8, aGlibc217 - byte_30E8, 0x10>; "GLIBC_2.17"|151-145-150-6-0-0-8-0-223-32-0-0-16-0-0-0
22220|data|Elf32_Vernaux <0xD696917, 0, 7, aGlibc27 - byte_30E8, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-7-0-234-32-0-0-16-0-0-0
22236|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_30E8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-202-32-0-0-0-0-0-0
22252|data|Elf32_Rel <0x24808, 0x17>; R_ARM_RELATIVE|8-72-2-0-23-0-0-0
22260|data|Elf32_Rel <0x2480C, 0x17>; R_ARM_RELATIVE|12-72-2-0-23-0-0-0
22268|data|Elf32_Rel <0x24814, 0x17>; R_ARM_RELATIVE|20-72-2-0-23-0-0-0
22276|data|Elf32_Rel <0x24828, 0x17>; R_ARM_RELATIVE|40-72-2-0-23-0-0-0
22284|data|Elf32_Rel <0x2482C, 0x17>; R_ARM_RELATIVE|44-72-2-0-23-0-0-0
22292|data|Elf32_Rel <0x24830, 0x17>; R_ARM_RELATIVE|48-72-2-0-23-0-0-0
22300|data|Elf32_Rel <0x24834, 0x17>; R_ARM_RELATIVE|52-72-2-0-23-0-0-0
22308|data|Elf32_Rel <0x2483C, 0x17>; R_ARM_RELATIVE|60-72-2-0-23-0-0-0
22316|data|Elf32_Rel <0x24840, 0x17>; R_ARM_RELATIVE|64-72-2-0-23-0-0-0
22324|data|Elf32_Rel <0x24844, 0x17>; R_ARM_RELATIVE|68-72-2-0-23-0-0-0
22332|data|Elf32_Rel <0x2484C, 0x17>; R_ARM_RELATIVE|76-72-2-0-23-0-0-0
22340|data|Elf32_Rel <0x24850, 0x17>; R_ARM_RELATIVE|80-72-2-0-23-0-0-0
22348|data|Elf32_Rel <0x24858, 0x17>; R_ARM_RELATIVE|88-72-2-0-23-0-0-0
22356|data|Elf32_Rel <0x2485C, 0x17>; R_ARM_RELATIVE|92-72-2-0-23-0-0-0
22364|data|Elf32_Rel <0x24860, 0x17>; R_ARM_RELATIVE|96-72-2-0-23-0-0-0
22372|data|Elf32_Rel <0x24868, 0x17>; R_ARM_RELATIVE|104-72-2-0-23-0-0-0
22380|data|Elf32_Rel <0x2486C, 0x17>; R_ARM_RELATIVE|108-72-2-0-23-0-0-0
22388|data|Elf32_Rel <0x24874, 0x17>; R_ARM_RELATIVE|116-72-2-0-23-0-0-0
22396|data|Elf32_Rel <0x24878, 0x17>; R_ARM_RELATIVE|120-72-2-0-23-0-0-0
22404|data|Elf32_Rel <0x2487C, 0x17>; R_ARM_RELATIVE|124-72-2-0-23-0-0-0
22412|data|Elf32_Rel <0x24884, 0x17>; R_ARM_RELATIVE|132-72-2-0-23-0-0-0
22420|data|Elf32_Rel <0x24894, 0x17>; R_ARM_RELATIVE|148-72-2-0-23-0-0-0
22428|data|Elf32_Rel <0x24898, 0x17>; R_ARM_RELATIVE|152-72-2-0-23-0-0-0
22436|data|Elf32_Rel <0x248A0, 0x17>; R_ARM_RELATIVE|160-72-2-0-23-0-0-0
22444|data|Elf32_Rel <0x248B0, 0x17>; R_ARM_RELATIVE|176-72-2-0-23-0-0-0
22452|data|Elf32_Rel <0x248BC, 0x17>; R_ARM_RELATIVE|188-72-2-0-23-0-0-0
22460|data|Elf32_Rel <0x248CC, 0x17>; R_ARM_RELATIVE|204-72-2-0-23-0-0-0
22468|data|Elf32_Rel <0x248D8, 0x17>; R_ARM_RELATIVE|216-72-2-0-23-0-0-0
22476|data|Elf32_Rel <0x248DC, 0x17>; R_ARM_RELATIVE|220-72-2-0-23-0-0-0
22484|data|Elf32_Rel <0x248E0, 0x17>; R_ARM_RELATIVE|224-72-2-0-23-0-0-0
22492|data|Elf32_Rel <0x248E4, 0x17>; R_ARM_RELATIVE|228-72-2-0-23-0-0-0
22500|data|Elf32_Rel <0x248E8, 0x17>; R_ARM_RELATIVE|232-72-2-0-23-0-0-0
22508|data|Elf32_Rel <0x248EC, 0x17>; R_ARM_RELATIVE|236-72-2-0-23-0-0-0
22516|data|Elf32_Rel <0x248F0, 0x17>; R_ARM_RELATIVE|240-72-2-0-23-0-0-0
22524|data|Elf32_Rel <0x248F4, 0x17>; R_ARM_RELATIVE|244-72-2-0-23-0-0-0
22532|data|Elf32_Rel <0x248F8, 0x17>; R_ARM_RELATIVE|248-72-2-0-23-0-0-0
22540|data|Elf32_Rel <0x248FC, 0x17>; R_ARM_RELATIVE|252-72-2-0-23-0-0-0
22548|data|Elf32_Rel <0x24900, 0x17>; R_ARM_RELATIVE|0-73-2-0-23-0-0-0
22556|data|Elf32_Rel <0x24904, 0x17>; R_ARM_RELATIVE|4-73-2-0-23-0-0-0
22564|data|Elf32_Rel <0x24908, 0x17>; R_ARM_RELATIVE|8-73-2-0-23-0-0-0
22572|data|Elf32_Rel <0x2490C, 0x17>; R_ARM_RELATIVE|12-73-2-0-23-0-0-0
22580|data|Elf32_Rel <0x24910, 0x17>; R_ARM_RELATIVE|16-73-2-0-23-0-0-0
22588|data|Elf32_Rel <0x24914, 0x17>; R_ARM_RELATIVE|20-73-2-0-23-0-0-0
22596|data|Elf32_Rel <0x24918, 0x17>; R_ARM_RELATIVE|24-73-2-0-23-0-0-0
22604|data|Elf32_Rel <0x2491C, 0x17>; R_ARM_RELATIVE|28-73-2-0-23-0-0-0
22612|data|Elf32_Rel <0x24920, 0x17>; R_ARM_RELATIVE|32-73-2-0-23-0-0-0
22620|data|Elf32_Rel <0x24924, 0x17>; R_ARM_RELATIVE|36-73-2-0-23-0-0-0
22628|data|Elf32_Rel <0x24928, 0x17>; R_ARM_RELATIVE|40-73-2-0-23-0-0-0
22636|data|Elf32_Rel <0x2492C, 0x17>; R_ARM_RELATIVE|44-73-2-0-23-0-0-0
22644|data|Elf32_Rel <0x24930, 0x17>; R_ARM_RELATIVE|48-73-2-0-23-0-0-0
22652|data|Elf32_Rel <0x24934, 0x17>; R_ARM_RELATIVE|52-73-2-0-23-0-0-0
22660|data|Elf32_Rel <0x24938, 0x17>; R_ARM_RELATIVE|56-73-2-0-23-0-0-0
22668|data|Elf32_Rel <0x2493C, 0x17>; R_ARM_RELATIVE|60-73-2-0-23-0-0-0
22676|data|Elf32_Rel <0x24940, 0x17>; R_ARM_RELATIVE|64-73-2-0-23-0-0-0
22684|data|Elf32_Rel <0x24944, 0x17>; R_ARM_RELATIVE|68-73-2-0-23-0-0-0
22692|data|Elf32_Rel <0x24948, 0x17>; R_ARM_RELATIVE|72-73-2-0-23-0-0-0
22700|data|Elf32_Rel <0x2494C, 0x17>; R_ARM_RELATIVE|76-73-2-0-23-0-0-0
22708|data|Elf32_Rel <0x24950, 0x17>; R_ARM_RELATIVE|80-73-2-0-23-0-0-0
22716|data|Elf32_Rel <0x24954, 0x17>; R_ARM_RELATIVE|84-73-2-0-23-0-0-0
22724|data|Elf32_Rel <0x24958, 0x17>; R_ARM_RELATIVE|88-73-2-0-23-0-0-0
22732|data|Elf32_Rel <0x2495C, 0x17>; R_ARM_RELATIVE|92-73-2-0-23-0-0-0
22740|data|Elf32_Rel <0x24960, 0x17>; R_ARM_RELATIVE|96-73-2-0-23-0-0-0
22748|data|Elf32_Rel <0x24964, 0x17>; R_ARM_RELATIVE|100-73-2-0-23-0-0-0
22756|data|Elf32_Rel <0x24968, 0x17>; R_ARM_RELATIVE|104-73-2-0-23-0-0-0
22764|data|Elf32_Rel <0x2496C, 0x17>; R_ARM_RELATIVE|108-73-2-0-23-0-0-0
22772|data|Elf32_Rel <0x24970, 0x17>; R_ARM_RELATIVE|112-73-2-0-23-0-0-0
22780|data|Elf32_Rel <0x24974, 0x17>; R_ARM_RELATIVE|116-73-2-0-23-0-0-0
22788|data|Elf32_Rel <0x24978, 0x17>; R_ARM_RELATIVE|120-73-2-0-23-0-0-0
22796|data|Elf32_Rel <0x2497C, 0x17>; R_ARM_RELATIVE|124-73-2-0-23-0-0-0
22804|data|Elf32_Rel <0x24980, 0x17>; R_ARM_RELATIVE|128-73-2-0-23-0-0-0
22812|data|Elf32_Rel <0x24984, 0x17>; R_ARM_RELATIVE|132-73-2-0-23-0-0-0
22820|data|Elf32_Rel <0x24988, 0x17>; R_ARM_RELATIVE|136-73-2-0-23-0-0-0
22828|data|Elf32_Rel <0x2498C, 0x17>; R_ARM_RELATIVE|140-73-2-0-23-0-0-0
22836|data|Elf32_Rel <0x24990, 0x17>; R_ARM_RELATIVE|144-73-2-0-23-0-0-0
22844|data|Elf32_Rel <0x24994, 0x17>; R_ARM_RELATIVE|148-73-2-0-23-0-0-0
22852|data|Elf32_Rel <0x24998, 0x17>; R_ARM_RELATIVE|152-73-2-0-23-0-0-0
22860|data|Elf32_Rel <0x2499C, 0x17>; R_ARM_RELATIVE|156-73-2-0-23-0-0-0
22868|data|Elf32_Rel <0x249A0, 0x17>; R_ARM_RELATIVE|160-73-2-0-23-0-0-0
22876|data|Elf32_Rel <0x249A4, 0x17>; R_ARM_RELATIVE|164-73-2-0-23-0-0-0
22884|data|Elf32_Rel <0x249A8, 0x17>; R_ARM_RELATIVE|168-73-2-0-23-0-0-0
22892|data|Elf32_Rel <0x249AC, 0x17>; R_ARM_RELATIVE|172-73-2-0-23-0-0-0
22900|data|Elf32_Rel <0x249B0, 0x17>; R_ARM_RELATIVE|176-73-2-0-23-0-0-0
22908|data|Elf32_Rel <0x249B4, 0x17>; R_ARM_RELATIVE|180-73-2-0-23-0-0-0
22916|data|Elf32_Rel <0x249B8, 0x17>; R_ARM_RELATIVE|184-73-2-0-23-0-0-0
22924|data|Elf32_Rel <0x249BC, 0x17>; R_ARM_RELATIVE|188-73-2-0-23-0-0-0
22932|data|Elf32_Rel <0x249C0, 0x17>; R_ARM_RELATIVE|192-73-2-0-23-0-0-0
22940|data|Elf32_Rel <0x249C4, 0x17>; R_ARM_RELATIVE|196-73-2-0-23-0-0-0
22948|data|Elf32_Rel <0x249C8, 0x17>; R_ARM_RELATIVE|200-73-2-0-23-0-0-0
22956|data|Elf32_Rel <0x249D0, 0x17>; R_ARM_RELATIVE|208-73-2-0-23-0-0-0
22964|data|Elf32_Rel <0x249D4, 0x17>; R_ARM_RELATIVE|212-73-2-0-23-0-0-0
22972|data|Elf32_Rel <0x249D8, 0x17>; R_ARM_RELATIVE|216-73-2-0-23-0-0-0
22980|data|Elf32_Rel <0x249DC, 0x17>; R_ARM_RELATIVE|220-73-2-0-23-0-0-0
22988|data|Elf32_Rel <0x249E0, 0x17>; R_ARM_RELATIVE|224-73-2-0-23-0-0-0
22996|data|Elf32_Rel <0x249E4, 0x17>; R_ARM_RELATIVE|228-73-2-0-23-0-0-0
23004|data|Elf32_Rel <0x249EC, 0x17>; R_ARM_RELATIVE|236-73-2-0-23-0-0-0
23012|data|Elf32_Rel <0x249F0, 0x17>; R_ARM_RELATIVE|240-73-2-0-23-0-0-0
23020|data|Elf32_Rel <0x249F4, 0x17>; R_ARM_RELATIVE|244-73-2-0-23-0-0-0
23028|data|Elf32_Rel <0x24A00, 0x17>; R_ARM_RELATIVE|0-74-2-0-23-0-0-0
23036|data|Elf32_Rel <0x24A08, 0x17>; R_ARM_RELATIVE|8-74-2-0-23-0-0-0
23044|data|Elf32_Rel <0x24A0C, 0x17>; R_ARM_RELATIVE|12-74-2-0-23-0-0-0
23052|data|Elf32_Rel <0x24A10, 0x17>; R_ARM_RELATIVE|16-74-2-0-23-0-0-0
23060|data|Elf32_Rel <0x24A1C, 0x17>; R_ARM_RELATIVE|28-74-2-0-23-0-0-0
23068|data|Elf32_Rel <0x24A24, 0x17>; R_ARM_RELATIVE|36-74-2-0-23-0-0-0
23076|data|Elf32_Rel <0x24A28, 0x17>; R_ARM_RELATIVE|40-74-2-0-23-0-0-0
23084|data|Elf32_Rel <0x24A2C, 0x17>; R_ARM_RELATIVE|44-74-2-0-23-0-0-0
23092|data|Elf32_Rel <0x24A40, 0x17>; R_ARM_RELATIVE|64-74-2-0-23-0-0-0
23100|data|Elf32_Rel <0x24A44, 0x17>; R_ARM_RELATIVE|68-74-2-0-23-0-0-0
23108|data|Elf32_Rel <0x24A48, 0x17>; R_ARM_RELATIVE|72-74-2-0-23-0-0-0
23116|data|Elf32_Rel <0x24A5C, 0x17>; R_ARM_RELATIVE|92-74-2-0-23-0-0-0
23124|data|Elf32_Rel <0x24A60, 0x17>; R_ARM_RELATIVE|96-74-2-0-23-0-0-0
23132|data|Elf32_Rel <0x24A64, 0x17>; R_ARM_RELATIVE|100-74-2-0-23-0-0-0
23140|data|Elf32_Rel <0x24A78, 0x17>; R_ARM_RELATIVE|120-74-2-0-23-0-0-0
23148|data|Elf32_Rel <0x24A7C, 0x17>; R_ARM_RELATIVE|124-74-2-0-23-0-0-0
23156|data|Elf32_Rel <0x24A80, 0x17>; R_ARM_RELATIVE|128-74-2-0-23-0-0-0
23164|data|Elf32_Rel <0x24A88, 0x17>; R_ARM_RELATIVE|136-74-2-0-23-0-0-0
23172|data|Elf32_Rel <0x24A8C, 0x17>; R_ARM_RELATIVE|140-74-2-0-23-0-0-0
23180|data|Elf32_Rel <0x24A90, 0x17>; R_ARM_RELATIVE|144-74-2-0-23-0-0-0
23188|data|Elf32_Rel <0x24A9C, 0x17>; R_ARM_RELATIVE|156-74-2-0-23-0-0-0
23196|data|Elf32_Rel <0x24AA8, 0x17>; R_ARM_RELATIVE|168-74-2-0-23-0-0-0
23204|data|Elf32_Rel <0x24AB4, 0x17>; R_ARM_RELATIVE|180-74-2-0-23-0-0-0
23212|data|Elf32_Rel <0x24AC0, 0x17>; R_ARM_RELATIVE|192-74-2-0-23-0-0-0
23220|data|Elf32_Rel <0x24ACC, 0x17>; R_ARM_RELATIVE|204-74-2-0-23-0-0-0
23228|data|Elf32_Rel <0x24AD8, 0x17>; R_ARM_RELATIVE|216-74-2-0-23-0-0-0
23236|data|Elf32_Rel <0x24ADC, 0x17>; R_ARM_RELATIVE|220-74-2-0-23-0-0-0
23244|data|Elf32_Rel <0x24AE4, 0x17>; R_ARM_RELATIVE|228-74-2-0-23-0-0-0
23252|data|Elf32_Rel <0x24AE8, 0x17>; R_ARM_RELATIVE|232-74-2-0-23-0-0-0
23260|data|Elf32_Rel <0x24AF4, 0x17>; R_ARM_RELATIVE|244-74-2-0-23-0-0-0
23268|data|Elf32_Rel <0x24AFC, 0x17>; R_ARM_RELATIVE|252-74-2-0-23-0-0-0
23276|data|Elf32_Rel <0x24B08, 0x17>; R_ARM_RELATIVE|8-75-2-0-23-0-0-0
23284|data|Elf32_Rel <0x24B14, 0x17>; R_ARM_RELATIVE|20-75-2-0-23-0-0-0
23292|data|Elf32_Rel <0x24B20, 0x17>; R_ARM_RELATIVE|32-75-2-0-23-0-0-0
23300|data|Elf32_Rel <0x24B2C, 0x17>; R_ARM_RELATIVE|44-75-2-0-23-0-0-0
23308|data|Elf32_Rel <0x24B38, 0x17>; R_ARM_RELATIVE|56-75-2-0-23-0-0-0
23316|data|Elf32_Rel <0x24B44, 0x17>; R_ARM_RELATIVE|68-75-2-0-23-0-0-0
23324|data|Elf32_Rel <0x24B50, 0x17>; R_ARM_RELATIVE|80-75-2-0-23-0-0-0
23332|data|Elf32_Rel <0x24B68, 0x17>; R_ARM_RELATIVE|104-75-2-0-23-0-0-0
23340|data|Elf32_Rel <0x24B6C, 0x17>; R_ARM_RELATIVE|108-75-2-0-23-0-0-0
23348|data|Elf32_Rel <0x24B74, 0x17>; R_ARM_RELATIVE|116-75-2-0-23-0-0-0
23356|data|Elf32_Rel <0x24B78, 0x17>; R_ARM_RELATIVE|120-75-2-0-23-0-0-0
23364|data|Elf32_Rel <0x24B80, 0x17>; R_ARM_RELATIVE|128-75-2-0-23-0-0-0
23372|data|Elf32_Rel <0x24B84, 0x17>; R_ARM_RELATIVE|132-75-2-0-23-0-0-0
23380|data|Elf32_Rel <0x24B8C, 0x17>; R_ARM_RELATIVE|140-75-2-0-23-0-0-0
23388|data|Elf32_Rel <0x24F44, 0x17>; R_ARM_RELATIVE|68-79-2-0-23-0-0-0
23396|data|Elf32_Rel <0x24F4C, 0x17>; R_ARM_RELATIVE|76-79-2-0-23-0-0-0
23404|data|Elf32_Rel <0x24F50, 0x17>; R_ARM_RELATIVE|80-79-2-0-23-0-0-0
23412|data|Elf32_Rel <0x24F54, 0x17>; R_ARM_RELATIVE|84-79-2-0-23-0-0-0
23420|data|Elf32_Rel <0x24F58, 0x17>; R_ARM_RELATIVE|88-79-2-0-23-0-0-0
23428|data|Elf32_Rel <0x24F60, 0x17>; R_ARM_RELATIVE|96-79-2-0-23-0-0-0
23436|data|Elf32_Rel <0x24F64, 0x17>; R_ARM_RELATIVE|100-79-2-0-23-0-0-0
23444|data|Elf32_Rel <0x24F74, 0x17>; R_ARM_RELATIVE|116-79-2-0-23-0-0-0
23452|data|Elf32_Rel <0x24F78, 0x17>; R_ARM_RELATIVE|120-79-2-0-23-0-0-0
23460|data|Elf32_Rel <0x24F7C, 0x17>; R_ARM_RELATIVE|124-79-2-0-23-0-0-0
23468|data|Elf32_Rel <0x24F80, 0x17>; R_ARM_RELATIVE|128-79-2-0-23-0-0-0
23476|data|Elf32_Rel <0x24F84, 0x17>; R_ARM_RELATIVE|132-79-2-0-23-0-0-0
23484|data|Elf32_Rel <0x24F88, 0x17>; R_ARM_RELATIVE|136-79-2-0-23-0-0-0
23492|data|Elf32_Rel <0x24F8C, 0x17>; R_ARM_RELATIVE|140-79-2-0-23-0-0-0
23500|data|Elf32_Rel <0x24F94, 0x17>; R_ARM_RELATIVE|148-79-2-0-23-0-0-0
23508|data|Elf32_Rel <0x24F98, 0x17>; R_ARM_RELATIVE|152-79-2-0-23-0-0-0
23516|data|Elf32_Rel <0x24F9C, 0x17>; R_ARM_RELATIVE|156-79-2-0-23-0-0-0
23524|data|Elf32_Rel <0x24FAC, 0x17>; R_ARM_RELATIVE|172-79-2-0-23-0-0-0
23532|data|Elf32_Rel <0x24FB0, 0x17>; R_ARM_RELATIVE|176-79-2-0-23-0-0-0
23540|data|Elf32_Rel <0x24FB4, 0x17>; R_ARM_RELATIVE|180-79-2-0-23-0-0-0
23548|data|Elf32_Rel <0x24FB8, 0x17>; R_ARM_RELATIVE|184-79-2-0-23-0-0-0
23556|data|Elf32_Rel <0x24FBC, 0x17>; R_ARM_RELATIVE|188-79-2-0-23-0-0-0
23564|data|Elf32_Rel <0x24FC0, 0x17>; R_ARM_RELATIVE|192-79-2-0-23-0-0-0
23572|data|Elf32_Rel <0x24FC4, 0x17>; R_ARM_RELATIVE|196-79-2-0-23-0-0-0
23580|data|Elf32_Rel <0x24FC8, 0x17>; R_ARM_RELATIVE|200-79-2-0-23-0-0-0
23588|data|Elf32_Rel <0x24FCC, 0x17>; R_ARM_RELATIVE|204-79-2-0-23-0-0-0
23596|data|Elf32_Rel <0x24FD0, 0x17>; R_ARM_RELATIVE|208-79-2-0-23-0-0-0
23604|data|Elf32_Rel <0x24FD4, 0x17>; R_ARM_RELATIVE|212-79-2-0-23-0-0-0
23612|data|Elf32_Rel <0x24FDC, 0x17>; R_ARM_RELATIVE|220-79-2-0-23-0-0-0
23620|data|Elf32_Rel <0x24FE4, 0x17>; R_ARM_RELATIVE|228-79-2-0-23-0-0-0
23628|data|Elf32_Rel <0x24FE8, 0x17>; R_ARM_RELATIVE|232-79-2-0-23-0-0-0
23636|data|Elf32_Rel <0x24FF4, 0x17>; R_ARM_RELATIVE|244-79-2-0-23-0-0-0
23644|data|Elf32_Rel <0x24FFC, 0x17>; R_ARM_RELATIVE|252-79-2-0-23-0-0-0
23652|data|Elf32_Rel <0x25004, 0x17>; R_ARM_RELATIVE|4-80-2-0-23-0-0-0
23660|data|Elf32_Rel <0x25010, 0x17>; R_ARM_RELATIVE|16-80-2-0-23-0-0-0
23668|data|Elf32_Rel <0x25014, 0x17>; R_ARM_RELATIVE|20-80-2-0-23-0-0-0
23676|data|Elf32_Rel <0x25018, 0x17>; R_ARM_RELATIVE|24-80-2-0-23-0-0-0
23684|data|Elf32_Rel <0x2501C, 0x17>; R_ARM_RELATIVE|28-80-2-0-23-0-0-0
23692|data|Elf32_Rel <0x25028, 0x17>; R_ARM_RELATIVE|40-80-2-0-23-0-0-0
23700|data|Elf32_Rel <0x25030, 0x17>; R_ARM_RELATIVE|48-80-2-0-23-0-0-0
23708|data|Elf32_Rel <0x24A94, 0x1B402>; R_ARM_ABS32 processIncludeOperands|148-74-2-0-2-180-1-0
23716|data|Elf32_Rel <0x24B90, 0x1B402>; R_ARM_ABS32 processIncludeOperands|144-75-2-0-2-180-1-0
23724|data|Elf32_Rel <0x24AA0, 0x16802>; R_ARM_ABS32 processElseOperands|160-74-2-0-2-104-1-0
23732|data|Elf32_Rel <0x24AAC, 0x1C002>; R_ARM_ABS32 processEndIfOperands|172-74-2-0-2-192-1-0
23740|data|Elf32_Rel <0x24AB8, 0xE802>; R_ARM_ABS32 processIfVarOperands|184-74-2-0-2-232-0-0
23748|data|Elf32_Rel <0x24AC4, 0xD602>; R_ARM_ABS32 processIfNotVarOperands|196-74-2-0-2-214-0-0
23756|data|Elf32_Rel <0x24AD0, 0x14502>; R_ARM_ABS32 processAssignOperands|208-74-2-0-2-69-1-0
23764|data|Elf32_Rel <0x24B00, 0x1D002>; R_ARM_ABS32 linuxKeyMap_xt00|0-75-2-0-2-208-1-0
23772|data|Elf32_Rel <0x24B0C, 0x13C02>; R_ARM_ABS32 linuxKeyMap_xtE0|12-75-2-0-2-60-1-0
23780|data|Elf32_Rel <0x24B18, 0x13F02>; R_ARM_ABS32 linuxKeyMap_xtE1|24-75-2-0-2-63-1-0
23788|data|Elf32_Rel <0x24B24, 0x21F02>; R_ARM_ABS32 linuxKeyMap_at00|36-75-2-0-2-31-2-0
23796|data|Elf32_Rel <0x24B30, 0x19302>; R_ARM_ABS32 linuxKeyMap_atE0|48-75-2-0-2-147-1-0
23804|data|Elf32_Rel <0x24B3C, 0x19702>; R_ARM_ABS32 linuxKeyMap_atE1|60-75-2-0-2-151-1-0
23812|data|Elf32_Rel <0x24B48, 0x22502>; R_ARM_ABS32 linuxKeyMap_ps2|72-75-2-0-2-37-2-0
23820|data|Elf32_Rel <0x24B54, 0x1DE02>; R_ARM_ABS32 linuxKeyMap_hid|84-75-2-0-2-222-1-0
23828|data|Elf32_Rel <0x24B5C, 0x12002>; R_ARM_ABS32 getBaseCharacter|92-75-2-0-2-32-1-0
23836|data|Elf32_Rel <0x24B60, 0x22402>; R_ARM_ABS32 getTransliteratedCharacter|96-75-2-0-2-36-2-0
23844|data|Elf32_Rel <0x24F48, 0x415>; R_ARM_GLOB_DAT stdin|72-79-2-0-21-4-0-0
23852|data|Elf32_Rel <0x24F5C, 0x1115>; R_ARM_GLOB_DAT opterr|92-79-2-0-21-17-0-0
23860|data|Elf32_Rel <0x24F68, 0x1715>; R_ARM_GLOB_DAT __stack_chk_guard|104-79-2-0-21-23-0-0
23868|data|Elf32_Rel <0x24F6C, 0x1C15>; R_ARM_GLOB_DAT __progname|108-79-2-0-21-28-0-0
23876|data|Elf32_Rel <0x24F70, 0x1D15>; R_ARM_GLOB_DAT optind|112-79-2-0-21-29-0-0
23884|data|Elf32_Rel <0x24F90, 0x3D15>; R_ARM_GLOB_DAT optarg|144-79-2-0-21-61-0-0
23892|data|Elf32_Rel <0x24FA0, 0x5015>; R_ARM_GLOB_DAT stderr|160-79-2-0-21-80-0-0
23900|data|Elf32_Rel <0x24FA4, 0x5515>; R_ARM_GLOB_DAT optopt|164-79-2-0-21-85-0-0
23908|data|Elf32_Rel <0x24FA8, 0x5D15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|168-79-2-0-21-93-0-0
23916|data|Elf32_Rel <0x24FD8, 0x8415>; R_ARM_GLOB_DAT stdout|216-79-2-0-21-132-0-0
23924|data|Elf32_Rel <0x24FE0, 0x9015>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|224-79-2-0-21-144-0-0
23932|data|Elf32_Rel <0x24FEC, 0x9F15>; R_ARM_GLOB_DAT __gmon_start__|236-79-2-0-21-159-0-0
23940|data|Elf32_Rel <0x24FF0, 0xA115>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|240-79-2-0-21-161-0-0
23948|data|Elf32_Rel <0x24FF8, 0xA415>; R_ARM_GLOB_DAT __cxa_finalize|248-79-2-0-21-164-0-0
23956|data|Elf32_Rel <0x24CE0, 0x316>; R_ARM_JUMP_SLOT chdir|224-76-2-0-22-3-0-0
23964|data|Elf32_Rel <0x24CE4, 0x516>; R_ARM_JUMP_SLOT pthread_mutex_lock|228-76-2-0-22-5-0-0
23972|data|Elf32_Rel <0x24CE8, 0x616>; R_ARM_JUMP_SLOT localtime_r|232-76-2-0-22-6-0-0
23980|data|Elf32_Rel <0x24CEC, 0x716>; R_ARM_JUMP_SLOT wcslen|236-76-2-0-22-7-0-0
23988|data|Elf32_Rel <0x24CF0, 0x816>; R_ARM_JUMP_SLOT towlower|240-76-2-0-22-8-0-0
23996|data|Elf32_Rel <0x24CF4, 0x916>; R_ARM_JUMP_SLOT ftruncate|244-76-2-0-22-9-0-0
24004|data|Elf32_Rel <0x24CF8, 0xA16>; R_ARM_JUMP_SLOT iswspace|248-76-2-0-22-10-0-0
24012|data|Elf32_Rel <0x24CFC, 0xB16>; R_ARM_JUMP_SLOT getpid|252-76-2-0-22-11-0-0
24020|data|Elf32_Rel <0x24D00, 0xC16>; R_ARM_JUMP_SLOT __memcpy_chk|0-77-2-0-22-12-0-0
24028|data|Elf32_Rel <0x24D04, 0xD16>; R_ARM_JUMP_SLOT mbrtowc|4-77-2-0-22-13-0-0
24036|data|Elf32_Rel <0x24D08, 0xE16>; R_ARM_JUMP_SLOT pthread_rwlock_destroy|8-77-2-0-22-14-0-0
24044|data|Elf32_Rel <0x24D0C, 0xF16>; R_ARM_JUMP_SLOT dlerror|12-77-2-0-22-15-0-0
24052|data|Elf32_Rel <0x24D10, 0x1016>; R_ARM_JUMP_SLOT gettimeofday|16-77-2-0-22-16-0-0
24060|data|Elf32_Rel <0x24D14, 0x1216>; R_ARM_JUMP_SLOT strcasecmp|20-77-2-0-22-18-0-0
24068|data|Elf32_Rel <0x24D18, 0x1316>; R_ARM_JUMP_SLOT fdopen|24-77-2-0-22-19-0-0
24076|data|Elf32_Rel <0x24D1C, 0x1416>; R_ARM_JUMP_SLOT strtol|28-77-2-0-22-20-0-0
24084|data|Elf32_Rel <0x24D20, 0x1516>; R_ARM_JUMP_SLOT free|32-77-2-0-22-21-0-0
24092|data|Elf32_Rel <0x24D24, 0x1616>; R_ARM_JUMP_SLOT dladdr|36-77-2-0-22-22-0-0
24100|data|Elf32_Rel <0x24D28, 0x1816>; R_ARM_JUMP_SLOT pthread_setname_np|40-77-2-0-22-24-0-0
24108|data|Elf32_Rel <0x24D2C, 0x1916>; R_ARM_JUMP_SLOT qsort|44-77-2-0-22-25-0-0
24116|data|Elf32_Rel <0x24D30, 0x1A16>; R_ARM_JUMP_SLOT strncmp|48-77-2-0-22-26-0-0
24124|data|Elf32_Rel <0x24D34, 0x1B16>; R_ARM_JUMP_SLOT __open_2|52-77-2-0-22-27-0-0
24132|data|Elf32_Rel <0x24D38, 0x1E16>; R_ARM_JUMP_SLOT u_getIntPropertyValue_52|56-77-2-0-22-30-0-0
24140|data|Elf32_Rel <0x24D3C, 0x1F16>; R_ARM_JUMP_SLOT strerror|60-77-2-0-22-31-0-0
24148|data|Elf32_Rel <0x24D40, 0x2016>; R_ARM_JUMP_SLOT __xmknod|64-77-2-0-22-32-0-0
24156|data|Elf32_Rel <0x24D44, 0x2116>; R_ARM_JUMP_SLOT __vsnprintf_chk|68-77-2-0-22-33-0-0
24164|data|Elf32_Rel <0x24D48, 0x2216>; R_ARM_JUMP_SLOT dlclose|72-77-2-0-22-34-0-0
24172|data|Elf32_Rel <0x24D4C, 0x2316>; R_ARM_JUMP_SLOT pthread_getname_np|76-77-2-0-22-35-0-0
24180|data|Elf32_Rel <0x24D50, 0x2416>; R_ARM_JUMP_SLOT feof|80-77-2-0-22-36-0-0
24188|data|Elf32_Rel <0x24D54, 0x2516>; R_ARM_JUMP_SLOT strtok|84-77-2-0-22-37-0-0
24196|data|Elf32_Rel <0x24D58, 0x2616>; R_ARM_JUMP_SLOT nl_langinfo|88-77-2-0-22-38-0-0
24204|data|Elf32_Rel <0x24D5C, 0x2716>; R_ARM_JUMP_SLOT wmemcpy|92-77-2-0-22-39-0-0
24212|data|Elf32_Rel <0x24D60, 0x2816>; R_ARM_JUMP_SLOT sigfillset|96-77-2-0-22-40-0-0
24220|data|Elf32_Rel <0x24D64, 0x2916>; R_ARM_JUMP_SLOT textdomain|100-77-2-0-22-41-0-0
24228|data|Elf32_Rel <0x24D68, 0x2A16>; R_ARM_JUMP_SLOT readlink|104-77-2-0-22-42-0-0
24236|data|Elf32_Rel <0x24D6C, 0x2B16>; R_ARM_JUMP_SLOT __fprintf_chk|108-77-2-0-22-43-0-0
24244|data|Elf32_Rel <0x24D70, 0x2C16>; R_ARM_JUMP_SLOT strtoul|112-77-2-0-22-44-0-0
24252|data|Elf32_Rel <0x24D74, 0x2D16>; R_ARM_JUMP_SLOT nanosleep|116-77-2-0-22-45-0-0
24260|data|Elf32_Rel <0x24D78, 0x2E16>; R_ARM_JUMP_SLOT strftime|120-77-2-0-22-46-0-0
24268|data|Elf32_Rel <0x24D7C, 0x2F16>; R_ARM_JUMP_SLOT memset|124-77-2-0-22-47-0-0
24276|data|Elf32_Rel <0x24D80, 0x3016>; R_ARM_JUMP_SLOT pthread_self|128-77-2-0-22-48-0-0
24284|data|Elf32_Rel <0x24D84, 0x3116>; R_ARM_JUMP_SLOT closelog|132-77-2-0-22-49-0-0
24292|data|Elf32_Rel <0x24D88, 0x3216>; R_ARM_JUMP_SLOT recv|136-77-2-0-22-50-0-0
24300|data|Elf32_Rel <0x24D8C, 0x3316>; R_ARM_JUMP_SLOT fcntl|140-77-2-0-22-51-0-0
24308|data|Elf32_Rel <0x24D90, 0x3416>; R_ARM_JUMP_SLOT pthread_sigmask|144-77-2-0-22-52-0-0
24316|data|Elf32_Rel <0x24D94, 0x3516>; R_ARM_JUMP_SLOT pthread_rwlock_rdlock|148-77-2-0-22-53-0-0
24324|data|Elf32_Rel <0x24D98, 0x3616>; R_ARM_JUMP_SLOT wcschr|152-77-2-0-22-54-0-0
24332|data|Elf32_Rel <0x24D9C, 0x3716>; R_ARM_JUMP_SLOT snprintf|156-77-2-0-22-55-0-0
24340|data|Elf32_Rel <0x24DA0, 0x3816>; R_ARM_JUMP_SLOT __strdup|160-77-2-0-22-56-0-0
24348|data|Elf32_Rel <0x24DA4, 0x3916>; R_ARM_JUMP_SLOT sigaddset|164-77-2-0-22-57-0-0
24356|data|Elf32_Rel <0x24DA8, 0x3A16>; R_ARM_JUMP_SLOT close|168-77-2-0-22-58-0-0
24364|data|Elf32_Rel <0x24DAC, 0x3B16>; R_ARM_JUMP_SLOT wmemcmp|172-77-2-0-22-59-0-0
24372|data|Elf32_Rel <0x24DB0, 0x3C16>; R_ARM_JUMP_SLOT fopen|176-77-2-0-22-60-0-0
24380|data|Elf32_Rel <0x24DB4, 0x3E16>; R_ARM_JUMP_SLOT read|180-77-2-0-22-62-0-0
24388|data|Elf32_Rel <0x24DB8, 0x3F16>; R_ARM_JUMP_SLOT wmemchr|184-77-2-0-22-63-0-0
24396|data|Elf32_Rel <0x24DBC, 0x4016>; R_ARM_JUMP_SLOT abort|188-77-2-0-22-64-0-0
24404|data|Elf32_Rel <0x24DC0, 0x4116>; R_ARM_JUMP_SLOT pthread_once|192-77-2-0-22-65-0-0
24412|data|Elf32_Rel <0x24DC4, 0x4216>; R_ARM_JUMP_SLOT poll|196-77-2-0-22-66-0-0
24420|data|Elf32_Rel <0x24DC8, 0x4316>; R_ARM_JUMP_SLOT __ctype_toupper_loc|200-77-2-0-22-67-0-0
24428|data|Elf32_Rel <0x24DCC, 0x4416>; R_ARM_JUMP_SLOT memmove|204-77-2-0-22-68-0-0
24436|data|Elf32_Rel <0x24DD0, 0x4516>; R_ARM_JUMP_SLOT strpbrk|208-77-2-0-22-69-0-0
24444|data|Elf32_Rel <0x24DD4, 0x4616>; R_ARM_JUMP_SLOT dlopen|212-77-2-0-22-70-0-0
24452|data|Elf32_Rel <0x24DD8, 0x4716>; R_ARM_JUMP_SLOT __libc_current_sigrtmin|216-77-2-0-22-71-0-0
24460|data|Elf32_Rel <0x24DDC, 0x4816>; R_ARM_JUMP_SLOT kill|220-77-2-0-22-72-0-0
24468|data|Elf32_Rel <0x24DE0, 0x4916>; R_ARM_JUMP_SLOT ioctl|224-77-2-0-22-73-0-0
24476|data|Elf32_Rel <0x24DE4, 0x4A16>; R_ARM_JUMP_SLOT clock_gettime|228-77-2-0-22-74-0-0
24484|data|Elf32_Rel <0x24DE8, 0x4B16>; R_ARM_JUMP_SLOT realloc|232-77-2-0-22-75-0-0
24492|data|Elf32_Rel <0x24DEC, 0x4C16>; R_ARM_JUMP_SLOT strcpy|236-77-2-0-22-76-0-0
24500|data|Elf32_Rel <0x24DF0, 0x4D16>; R_ARM_JUMP_SLOT strtod|240-77-2-0-22-77-0-0
24508|data|Elf32_Rel <0x24DF4, 0x4E16>; R_ARM_JUMP_SLOT open|244-77-2-0-22-78-0-0
24516|data|Elf32_Rel <0x24DF8, 0x4F16>; R_ARM_JUMP_SLOT waitpid|248-77-2-0-22-79-0-0
24524|data|Elf32_Rel <0x24DFC, 0x5116>; R_ARM_JUMP_SLOT fread|252-77-2-0-22-81-0-0
24532|data|Elf32_Rel <0x24E00, 0x5216>; R_ARM_JUMP_SLOT pthread_getspecific|0-78-2-0-22-82-0-0
24540|data|Elf32_Rel <0x24E04, 0x5316>; R_ARM_JUMP_SLOT fileno|4-78-2-0-22-83-0-0
24548|data|Elf32_Rel <0x24E08, 0x5416>; R_ARM_JUMP_SLOT pthread_rwlock_unlock|8-78-2-0-22-84-0-0
24556|data|Elf32_Rel <0x24E0C, 0x5616>; R_ARM_JUMP_SLOT __syslog_chk|12-78-2-0-22-86-0-0
24564|data|Elf32_Rel <0x24E10, 0x5716>; R_ARM_JUMP_SLOT pthread_rwlock_wrlock|16-78-2-0-22-87-0-0
24572|data|Elf32_Rel <0x24E14, 0x5816>; R_ARM_JUMP_SLOT __stack_chk_fail|20-78-2-0-22-88-0-0
24580|data|Elf32_Rel <0x24E18, 0x5916>; R_ARM_JUMP_SLOT pthread_rwlock_tryrdlock|24-78-2-0-22-89-0-0
24588|data|Elf32_Rel <0x24E1C, 0x5A16>; R_ARM_JUMP_SLOT fork|28-78-2-0-22-90-0-0
24596|data|Elf32_Rel <0x24E20, 0x5B16>; R_ARM_JUMP_SLOT access|32-78-2-0-22-91-0-0
24604|data|Elf32_Rel <0x24E24, 0x5C16>; R_ARM_JUMP_SLOT sigdelset|36-78-2-0-22-92-0-0
24612|data|Elf32_Rel <0x24E28, 0x5E16>; R_ARM_JUMP_SLOT dcgettext|40-78-2-0-22-94-0-0
24620|data|Elf32_Rel <0x24E2C, 0x5F16>; R_ARM_JUMP_SLOT mkdir|44-78-2-0-22-95-0-0
24628|data|Elf32_Rel <0x24E30, 0x6016>; R_ARM_JUMP_SLOT __cxa_atexit|48-78-2-0-22-96-0-0
24636|data|Elf32_Rel <0x24E34, 0x6116>; R_ARM_JUMP_SLOT strncasecmp|52-78-2-0-22-97-0-0
24644|data|Elf32_Rel <0x24E38, 0x6216>; R_ARM_JUMP_SLOT pthread_key_create|56-78-2-0-22-98-0-0
24652|data|Elf32_Rel <0x24E3C, 0x6316>; R_ARM_JUMP_SLOT getopt_long|60-78-2-0-22-99-0-0
24660|data|Elf32_Rel <0x24E40, 0x6416>; R_ARM_JUMP_SLOT lseek|64-78-2-0-22-100-0-0
24668|data|Elf32_Rel <0x24E44, 0x6516>; R_ARM_JUMP_SLOT raise|68-78-2-0-22-101-0-0
24676|data|Elf32_Rel <0x24E48, 0x6616>; R_ARM_JUMP_SLOT __ctype_b_loc|72-78-2-0-22-102-0-0
24684|data|Elf32_Rel <0x24E4C, 0x6716>; R_ARM_JUMP_SLOT bindtextdomain|76-78-2-0-22-103-0-0
24692|data|Elf32_Rel <0x24E50, 0x6816>; R_ARM_JUMP_SLOT sigaction|80-78-2-0-22-104-0-0
24700|data|Elf32_Rel <0x24E54, 0x6916>; R_ARM_JUMP_SLOT calloc|84-78-2-0-22-105-0-0
24708|data|Elf32_Rel <0x24E58, 0x6A16>; R_ARM_JUMP_SLOT setlocale|88-78-2-0-22-106-0-0
24716|data|Elf32_Rel <0x24E5C, 0x6B16>; R_ARM_JUMP_SLOT ferror|92-78-2-0-22-107-0-0
24724|data|Elf32_Rel <0x24E60, 0x6C16>; R_ARM_JUMP_SLOT iconv_close|96-78-2-0-22-108-0-0
24732|data|Elf32_Rel <0x24E64, 0x6D16>; R_ARM_JUMP_SLOT fgets|100-78-2-0-22-109-0-0
24740|data|Elf32_Rel <0x24E68, 0x6E16>; R_ARM_JUMP_SLOT __fxstat|104-78-2-0-22-110-0-0
24748|data|Elf32_Rel <0x24E6C, 0x6F16>; R_ARM_JUMP_SLOT u_charFromName_52|108-78-2-0-22-111-0-0
24756|data|Elf32_Rel <0x24E70, 0x7016>; R_ARM_JUMP_SLOT flockfile|112-78-2-0-22-112-0-0
24764|data|Elf32_Rel <0x24E74, 0x7116>; R_ARM_JUMP_SLOT fputc|116-78-2-0-22-113-0-0
24772|data|Elf32_Rel <0x24E78, 0x7216>; R_ARM_JUMP_SLOT fwrite|120-78-2-0-22-114-0-0
24780|data|Elf32_Rel <0x24E7C, 0x7316>; R_ARM_JUMP_SLOT memcpy|124-78-2-0-22-115-0-0
24788|data|Elf32_Rel <0x24E80, 0x7416>; R_ARM_JUMP_SLOT unorm_normalize_52|128-78-2-0-22-116-0-0
24796|data|Elf32_Rel <0x24E84, 0x7516>; R_ARM_JUMP_SLOT malloc|132-78-2-0-22-117-0-0
24804|data|Elf32_Rel <0x24E88, 0x7616>; R_ARM_JUMP_SLOT strlen|136-78-2-0-22-118-0-0
24812|data|Elf32_Rel <0x24E8C, 0x7716>; R_ARM_JUMP_SLOT __snprintf_chk|140-78-2-0-22-119-0-0
24820|data|Elf32_Rel <0x24E90, 0x7816>; R_ARM_JUMP_SLOT ioperm|144-78-2-0-22-120-0-0
24828|data|Elf32_Rel <0x24E94, 0x7916>; R_ARM_JUMP_SLOT outb|148-78-2-0-22-121-0-0
24836|data|Elf32_Rel <0x24E98, 0x7A16>; R_ARM_JUMP_SLOT pthread_setspecific|152-78-2-0-22-122-0-0
24844|data|Elf32_Rel <0x24E9C, 0x7B16>; R_ARM_JUMP_SLOT getcwd|156-78-2-0-22-123-0-0
24852|data|Elf32_Rel <0x24EA0, 0x7C16>; R_ARM_JUMP_SLOT fclose|160-78-2-0-22-124-0-0
24860|data|Elf32_Rel <0x24EA4, 0x7D16>; R_ARM_JUMP_SLOT write|164-78-2-0-22-125-0-0
24868|data|Elf32_Rel <0x24EA8, 0x7E16>; R_ARM_JUMP_SLOT inb|168-78-2-0-22-126-0-0
24876|data|Elf32_Rel <0x24EAC, 0x7F16>; R_ARM_JUMP_SLOT sigismember|172-78-2-0-22-127-0-0
24884|data|Elf32_Rel <0x24EB0, 0x8016>; R_ARM_JUMP_SLOT mempcpy|176-78-2-0-22-128-0-0
24892|data|Elf32_Rel <0x24EB4, 0x8116>; R_ARM_JUMP_SLOT __xstat|180-78-2-0-22-129-0-0
24900|data|Elf32_Rel <0x24EB8, 0x8216>; R_ARM_JUMP_SLOT pthread_rwlock_trywrlock|184-78-2-0-22-130-0-0
24908|data|Elf32_Rel <0x24EBC, 0x8316>; R_ARM_JUMP_SLOT __realpath_chk|188-78-2-0-22-131-0-0
24916|data|Elf32_Rel <0x24EC0, 0x8516>; R_ARM_JUMP_SLOT iconv_open|192-78-2-0-22-133-0-0
24924|data|Elf32_Rel <0x24EC4, 0x8616>; R_ARM_JUMP_SLOT pthread_rwlock_init|196-78-2-0-22-134-0-0
24932|data|Elf32_Rel <0x24EC8, 0x8716>; R_ARM_JUMP_SLOT _exit|200-78-2-0-22-135-0-0
24940|data|Elf32_Rel <0x24ECC, 0x8816>; R_ARM_JUMP_SLOT pthread_create|204-78-2-0-22-136-0-0
24948|data|Elf32_Rel <0x24ED0, 0x8916>; R_ARM_JUMP_SLOT strcmp|208-78-2-0-22-137-0-0
24956|data|Elf32_Rel <0x24ED4, 0x8A16>; R_ARM_JUMP_SLOT iconv|212-78-2-0-22-138-0-0
24964|data|Elf32_Rel <0x24ED8, 0x8B16>; R_ARM_JUMP_SLOT __errno_location|216-78-2-0-22-139-0-0
24972|data|Elf32_Rel <0x24EDC, 0x8C16>; R_ARM_JUMP_SLOT send|220-78-2-0-22-140-0-0
24980|data|Elf32_Rel <0x24EE0, 0x8D16>; R_ARM_JUMP_SLOT memchr|224-78-2-0-22-141-0-0
24988|data|Elf32_Rel <0x24EE4, 0x8E16>; R_ARM_JUMP_SLOT sscanf|228-78-2-0-22-142-0-0
24996|data|Elf32_Rel <0x24EE8, 0x8F16>; R_ARM_JUMP_SLOT strncpy|232-78-2-0-22-143-0-0
25004|data|Elf32_Rel <0x24EEC, 0x9116>; R_ARM_JUMP_SLOT fflush|236-78-2-0-22-145-0-0
25012|data|Elf32_Rel <0x24EF0, 0x9216>; R_ARM_JUMP_SLOT memcmp|240-78-2-0-22-146-0-0
25020|data|Elf32_Rel <0x24EF4, 0x9316>; R_ARM_JUMP_SLOT __libc_current_sigrtmax|244-78-2-0-22-147-0-0
25028|data|Elf32_Rel <0x24EF8, 0x9416>; R_ARM_JUMP_SLOT sigemptyset|248-78-2-0-22-148-0-0
25036|data|Elf32_Rel <0x24EFC, 0x9516>; R_ARM_JUMP_SLOT strrchr|252-78-2-0-22-149-0-0
25044|data|Elf32_Rel <0x24F00, 0x9616>; R_ARM_JUMP_SLOT funlockfile|0-79-2-0-22-150-0-0
25052|data|Elf32_Rel <0x24F04, 0x9716>; R_ARM_JUMP_SLOT mktime|4-79-2-0-22-151-0-0
25060|data|Elf32_Rel <0x24F08, 0x9816>; R_ARM_JUMP_SLOT openlog|8-79-2-0-22-152-0-0
25068|data|Elf32_Rel <0x24F0C, 0x9A16>; R_ARM_JUMP_SLOT fputs|12-79-2-0-22-154-0-0
25076|data|Elf32_Rel <0x24F10, 0x9B16>; R_ARM_JUMP_SLOT getenv|16-79-2-0-22-155-0-0
25084|data|Elf32_Rel <0x24F14, 0x9C16>; R_ARM_JUMP_SLOT __libc_start_main|20-79-2-0-22-156-0-0
25092|data|Elf32_Rel <0x24F18, 0x9D16>; R_ARM_JUMP_SLOT dlsym|24-79-2-0-22-157-0-0
25100|data|Elf32_Rel <0x24F1C, 0x9E16>; R_ARM_JUMP_SLOT execvp|28-79-2-0-22-158-0-0
25108|data|Elf32_Rel <0x24F20, 0x9F16>; R_ARM_JUMP_SLOT __gmon_start__|32-79-2-0-22-159-0-0
25116|data|Elf32_Rel <0x24F24, 0xA016>; R_ARM_JUMP_SLOT sigprocmask|36-79-2-0-22-160-0-0
25124|data|Elf32_Rel <0x24F28, 0xA216>; R_ARM_JUMP_SLOT mbsinit|40-79-2-0-22-162-0-0
25132|data|Elf32_Rel <0x24F2C, 0xA316>; R_ARM_JUMP_SLOT strchr|44-79-2-0-22-163-0-0
25140|data|Elf32_Rel <0x24F30, 0xA416>; R_ARM_JUMP_SLOT __cxa_finalize|48-79-2-0-22-164-0-0
25148|data|Elf32_Rel <0x24F34, 0xA516>; R_ARM_JUMP_SLOT pthread_mutex_unlock|52-79-2-0-22-165-0-0
25156|data|Elf32_Rel <0x24F38, 0xA616>; R_ARM_JUMP_SLOT wcrtomb|56-79-2-0-22-166-0-0
25164|data|Elf32_Rel <0x24F3C, 0xA716>; R_ARM_JUMP_SLOT iswcntrl|60-79-2-0-22-167-0-0
25172|data|Elf32_Rel <0x24F40, 0xA816>; R_ARM_JUMP_SLOT pipe|64-79-2-0-22-168-0-0
25180|code|PUSH            {R3,LR}; _init|8-64-45-233
25184|code|BL              sub_6C28|112-2-0-235
25188|code|POP             {R3,PC}|8-128-189-232
25192|code|PUSH            {LR}|4-224-45-229
25196|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x6278)|4-224-159-229
25200|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
25204|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
25208|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6278|92-234-1-0
25212|code|ADR             R12, 0x6284|0-198-143-226
25216|code|ADD             R12, R12, #0x1E000|30-202-140-226
25220|code|LDR             PC, [R12,#(chdir_ptr - 0x24284)]!; __imp_chdir|92-250-188-229
25224|code|ADR             R12, 0x6290|0-198-143-226
25228|code|ADD             R12, R12, #0x1E000|30-202-140-226
25232|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x24290)]!; __imp_pthread_mutex_lock|84-250-188-229
25236|code|ADR             R12, 0x629C|0-198-143-226
25240|code|ADD             R12, R12, #0x1E000|30-202-140-226
25244|code|LDR             PC, [R12,#(localtime_r_ptr - 0x2429C)]!; __imp_localtime_r|76-250-188-229
25248|code|ADR             R12, 0x62A8|0-198-143-226
25252|code|ADD             R12, R12, #0x1E000|30-202-140-226
25256|code|LDR             PC, [R12,#(wcslen_ptr - 0x242A8)]!; __imp_wcslen|68-250-188-229
25260|code|ADR             R12, 0x62B4|0-198-143-226
25264|code|ADD             R12, R12, #0x1E000|30-202-140-226
25268|code|LDR             PC, [R12,#(towlower_ptr - 0x242B4)]!; __imp_towlower|60-250-188-229
25272|code|ADR             R12, 0x62C0|0-198-143-226
25276|code|ADD             R12, R12, #0x1E000|30-202-140-226
25280|code|LDR             PC, [R12,#(ftruncate_ptr - 0x242C0)]!; __imp_ftruncate|52-250-188-229
25284|code|ADR             R12, 0x62CC|0-198-143-226
25288|code|ADD             R12, R12, #0x1E000|30-202-140-226
25292|code|LDR             PC, [R12,#(iswspace_ptr - 0x242CC)]!; __imp_iswspace|44-250-188-229
25296|code|BX              PC|120-71
25298|data|ALIGN 4|192-70
25300|code|ADR             R12, 0x62DC|0-198-143-226
25304|code|ADD             R12, R12, #0x1E000|30-202-140-226
25308|code|LDR             PC, [R12,#(getpid_ptr - 0x242DC)]!; __imp_getpid|32-250-188-229
25312|code|ADR             R12, 0x62E8|0-198-143-226
25316|code|ADD             R12, R12, #0x1E000|30-202-140-226
25320|code|LDR             PC, [R12,#(__memcpy_chk_ptr - 0x242E8)]!; __imp___memcpy_chk|24-250-188-229
25324|code|ADR             R12, 0x62F4|0-198-143-226
25328|code|ADD             R12, R12, #0x1E000|30-202-140-226
25332|code|LDR             PC, [R12,#(mbrtowc_ptr - 0x242F4)]!; __imp_mbrtowc|16-250-188-229
25336|code|ADR             R12, 0x6300|0-198-143-226
25340|code|ADD             R12, R12, #0x1E000|30-202-140-226
25344|code|LDR             PC, [R12,#(pthread_rwlock_destroy_ptr - 0x24300)]!; __imp_pthread_rwlock_destroy|8-250-188-229
25348|code|ADR             R12, 0x630C|0-198-143-226
25352|code|ADD             R12, R12, #0x1E000|30-202-140-226
25356|code|LDR             PC, [R12,#(dlerror_ptr - 0x2430C)]!; __imp_dlerror|0-250-188-229
25360|code|ADR             R12, 0x6318|0-198-143-226
25364|code|ADD             R12, R12, #0x1E000|30-202-140-226
25368|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x24318)]!; __imp_gettimeofday|248-249-188-229
25372|code|ADR             R12, 0x6324|0-198-143-226
25376|code|ADD             R12, R12, #0x1E000|30-202-140-226
25380|code|LDR             PC, [R12,#(strcasecmp_ptr - 0x24324)]!; __imp_strcasecmp|240-249-188-229
25384|code|ADR             R12, 0x6330|0-198-143-226
25388|code|ADD             R12, R12, #0x1E000|30-202-140-226
25392|code|LDR             PC, [R12,#(fdopen_ptr - 0x24330)]!; __imp_fdopen|232-249-188-229
25396|code|ADR             R12, 0x633C|0-198-143-226
25400|code|ADD             R12, R12, #0x1E000|30-202-140-226
25404|code|LDR             PC, [R12,#(strtol_ptr - 0x2433C)]!; __imp_strtol|224-249-188-229
25408|code|BX              PC|120-71
25410|data|ALIGN 4|192-70
25412|code|ADR             R12, 0x634C|0-198-143-226
25416|code|ADD             R12, R12, #0x1E000|30-202-140-226
25420|code|LDR             PC, [R12,#(free_ptr - 0x2434C)]!; __imp_free|212-249-188-229
25424|code|ADR             R12, 0x6358|0-198-143-226
25428|code|ADD             R12, R12, #0x1E000|30-202-140-226
25432|code|LDR             PC, [R12,#(dladdr_ptr - 0x24358)]!; __imp_dladdr|204-249-188-229
25436|code|BX              PC|120-71
25438|data|ALIGN 4|192-70
25440|code|ADR             R12, 0x6368|0-198-143-226
25444|code|ADD             R12, R12, #0x1E000|30-202-140-226
25448|code|LDR             PC, [R12,#(pthread_setname_np_ptr - 0x24368)]!; __imp_pthread_setname_np|192-249-188-229
25452|code|ADR             R12, 0x6374|0-198-143-226
25456|code|ADD             R12, R12, #0x1E000|30-202-140-226
25460|code|LDR             PC, [R12,#(qsort_ptr - 0x24374)]!; __imp_qsort|184-249-188-229
25464|code|ADR             R12, 0x6380|0-198-143-226
25468|code|ADD             R12, R12, #0x1E000|30-202-140-226
25472|code|LDR             PC, [R12,#(strncmp_ptr - 0x24380)]!; __imp_strncmp|176-249-188-229
25476|code|ADR             R12, 0x638C|0-198-143-226
25480|code|ADD             R12, R12, #0x1E000|30-202-140-226
25484|code|LDR             PC, [R12,#(__open_2_ptr - 0x2438C)]!; __imp___open_2|168-249-188-229
25488|code|ADR             R12, 0x6398|0-198-143-226
25492|code|ADD             R12, R12, #0x1E000|30-202-140-226
25496|code|LDR             PC, [R12,#(u_getIntPropertyValue_52_ptr - 0x24398)]!; __imp_u_getIntPropertyValue_52|160-249-188-229
25500|code|ADR             R12, 0x63A4|0-198-143-226
25504|code|ADD             R12, R12, #0x1E000|30-202-140-226
25508|code|LDR             PC, [R12,#(strerror_ptr - 0x243A4)]!; __imp_strerror|152-249-188-229
25512|code|ADR             R12, 0x63B0|0-198-143-226
25516|code|ADD             R12, R12, #0x1E000|30-202-140-226
25520|code|LDR             PC, [R12,#(__xmknod_ptr - 0x243B0)]!; __imp___xmknod|144-249-188-229
25524|code|ADR             R12, 0x63BC|0-198-143-226
25528|code|ADD             R12, R12, #0x1E000|30-202-140-226
25532|code|LDR             PC, [R12,#(__vsnprintf_chk_ptr - 0x243BC)]!; __imp___vsnprintf_chk|136-249-188-229
25536|code|ADR             R12, 0x63C8|0-198-143-226
25540|code|ADD             R12, R12, #0x1E000|30-202-140-226
25544|code|LDR             PC, [R12,#(dlclose_ptr - 0x243C8)]!; __imp_dlclose|128-249-188-229
25548|code|ADR             R12, 0x63D4|0-198-143-226
25552|code|ADD             R12, R12, #0x1E000|30-202-140-226
25556|code|LDR             PC, [R12,#(pthread_getname_np_ptr - 0x243D4)]!; __imp_pthread_getname_np|120-249-188-229
25560|code|ADR             R12, 0x63E0|0-198-143-226
25564|code|ADD             R12, R12, #0x1E000|30-202-140-226
25568|code|LDR             PC, [R12,#(feof_ptr - 0x243E0)]!; __imp_feof|112-249-188-229
25572|code|ADR             R12, 0x63EC|0-198-143-226
25576|code|ADD             R12, R12, #0x1E000|30-202-140-226
25580|code|LDR             PC, [R12,#(strtok_ptr - 0x243EC)]!; __imp_strtok|104-249-188-229
25584|code|BX              PC|120-71
25586|data|ALIGN 4|192-70
25588|code|ADR             R12, 0x63FC|0-198-143-226
25592|code|ADD             R12, R12, #0x1E000|30-202-140-226
25596|code|LDR             PC, [R12,#(nl_langinfo_ptr - 0x243FC)]!; __imp_nl_langinfo|92-249-188-229
25600|code|ADR             R12, 0x6408|0-198-143-226
25604|code|ADD             R12, R12, #0x1E000|30-202-140-226
25608|code|LDR             PC, [R12,#(wmemcpy_ptr - 0x24408)]!; __imp_wmemcpy|84-249-188-229
25612|code|ADR             R12, 0x6414|0-198-143-226
25616|code|ADD             R12, R12, #0x1E000|30-202-140-226
25620|code|LDR             PC, [R12,#(sigfillset_ptr - 0x24414)]!; __imp_sigfillset|76-249-188-229
25624|code|ADR             R12, 0x6420|0-198-143-226
25628|code|ADD             R12, R12, #0x1E000|30-202-140-226
25632|code|LDR             PC, [R12,#(textdomain_ptr - 0x24420)]!; __imp_textdomain|68-249-188-229
25636|code|ADR             R12, 0x642C|0-198-143-226
25640|code|ADD             R12, R12, #0x1E000|30-202-140-226
25644|code|LDR             PC, [R12,#(readlink_ptr - 0x2442C)]!; __imp_readlink|60-249-188-229
25648|code|ADR             R12, 0x6438|0-198-143-226
25652|code|ADD             R12, R12, #0x1E000|30-202-140-226
25656|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x24438)]!; __imp___fprintf_chk|52-249-188-229
25660|code|ADR             R12, 0x6444|0-198-143-226
25664|code|ADD             R12, R12, #0x1E000|30-202-140-226
25668|code|LDR             PC, [R12,#(strtoul_ptr - 0x24444)]!; __imp_strtoul|44-249-188-229
25672|code|ADR             R12, 0x6450|0-198-143-226
25676|code|ADD             R12, R12, #0x1E000|30-202-140-226
25680|code|LDR             PC, [R12,#(nanosleep_ptr - 0x24450)]!; __imp_nanosleep|36-249-188-229
25684|code|ADR             R12, 0x645C|0-198-143-226
25688|code|ADD             R12, R12, #0x1E000|30-202-140-226
25692|code|LDR             PC, [R12,#(strftime_ptr - 0x2445C)]!; __imp_strftime|28-249-188-229
25696|code|ADR             R12, 0x6468|0-198-143-226
25700|code|ADD             R12, R12, #0x1E000|30-202-140-226
25704|code|LDR             PC, [R12,#(memset_ptr - 0x24468)]!; __imp_memset|20-249-188-229
25708|code|ADR             R12, 0x6474|0-198-143-226
25712|code|ADD             R12, R12, #0x1E000|30-202-140-226
25716|code|LDR             PC, [R12,#(pthread_self_ptr - 0x24474)]!; __imp_pthread_self|12-249-188-229
25720|code|ADR             R12, 0x6480|0-198-143-226
25724|code|ADD             R12, R12, #0x1E000|30-202-140-226
25728|code|LDR             PC, [R12,#(closelog_ptr - 0x24480)]!; __imp_closelog|4-249-188-229
25732|code|BX              PC|120-71
25734|data|ALIGN 4|192-70
25736|code|ADR             R12, 0x6490|0-198-143-226
25740|code|ADD             R12, R12, #0x1E000|30-202-140-226
25744|code|LDR             PC, [R12,#(recv_ptr - 0x24490)]!; __imp_recv|248-248-188-229
25748|code|ADR             R12, 0x649C|0-198-143-226
25752|code|ADD             R12, R12, #0x1E000|30-202-140-226
25756|code|LDR             PC, [R12,#(fcntl_ptr - 0x2449C)]!; __imp_fcntl|240-248-188-229
25760|code|ADR             R12, 0x64A8|0-198-143-226
25764|code|ADD             R12, R12, #0x1E000|30-202-140-226
25768|code|LDR             PC, [R12,#(pthread_sigmask_ptr - 0x244A8)]!; __imp_pthread_sigmask|232-248-188-229
25772|code|ADR             R12, 0x64B4|0-198-143-226
25776|code|ADD             R12, R12, #0x1E000|30-202-140-226
25780|code|LDR             PC, [R12,#(pthread_rwlock_rdlock_ptr - 0x244B4)]!; __imp_pthread_rwlock_rdlock|224-248-188-229
25784|code|ADR             R12, 0x64C0|0-198-143-226
25788|code|ADD             R12, R12, #0x1E000|30-202-140-226
25792|code|LDR             PC, [R12,#(wcschr_ptr - 0x244C0)]!; __imp_wcschr|216-248-188-229
25796|code|ADR             R12, 0x64CC|0-198-143-226
25800|code|ADD             R12, R12, #0x1E000|30-202-140-226
25804|code|LDR             PC, [R12,#(snprintf_ptr - 0x244CC)]!; __imp_snprintf|208-248-188-229
25808|code|ADR             R12, 0x64D8|0-198-143-226
25812|code|ADD             R12, R12, #0x1E000|30-202-140-226
25816|code|LDR             PC, [R12,#(__strdup_ptr - 0x244D8)]!; __imp___strdup|200-248-188-229
25820|code|ADR             R12, 0x64E4|0-198-143-226
25824|code|ADD             R12, R12, #0x1E000|30-202-140-226
25828|code|LDR             PC, [R12,#(sigaddset_ptr - 0x244E4)]!; __imp_sigaddset|192-248-188-229
25832|code|ADR             R12, 0x64F0|0-198-143-226
25836|code|ADD             R12, R12, #0x1E000|30-202-140-226
25840|code|LDR             PC, [R12,#(close_ptr - 0x244F0)]!; __imp_close|184-248-188-229
25844|code|ADR             R12, 0x64FC|0-198-143-226
25848|code|ADD             R12, R12, #0x1E000|30-202-140-226
25852|code|LDR             PC, [R12,#(wmemcmp_ptr - 0x244FC)]!; __imp_wmemcmp|176-248-188-229
25856|code|ADR             R12, 0x6508|0-198-143-226
25860|code|ADD             R12, R12, #0x1E000|30-202-140-226
25864|code|LDR             PC, [R12,#(fopen_ptr - 0x24508)]!; __imp_fopen|168-248-188-229
25868|code|BX              PC|120-71
25870|data|ALIGN 4|192-70
25872|code|ADR             R12, 0x6518|0-198-143-226
25876|code|ADD             R12, R12, #0x1E000|30-202-140-226
25880|code|LDR             PC, [R12,#(read_ptr - 0x24518)]!; __imp_read|156-248-188-229
25884|code|ADR             R12, 0x6524|0-198-143-226
25888|code|ADD             R12, R12, #0x1E000|30-202-140-226
25892|code|LDR             PC, [R12,#(wmemchr_ptr - 0x24524)]!; __imp_wmemchr|148-248-188-229
25896|code|ADR             R12, 0x6530|0-198-143-226
25900|code|ADD             R12, R12, #0x1E000|30-202-140-226
25904|code|LDR             PC, [R12,#(abort_ptr - 0x24530)]!; __imp_abort|140-248-188-229
25908|code|ADR             R12, 0x653C|0-198-143-226
25912|code|ADD             R12, R12, #0x1E000|30-202-140-226
25916|code|LDR             PC, [R12,#(pthread_once_ptr - 0x2453C)]!; __imp_pthread_once|132-248-188-229
25920|code|ADR             R12, 0x6548|0-198-143-226
25924|code|ADD             R12, R12, #0x1E000|30-202-140-226
25928|code|LDR             PC, [R12,#(poll_ptr - 0x24548)]!; __imp_poll|124-248-188-229
25932|code|ADR             R12, 0x6554|0-198-143-226
25936|code|ADD             R12, R12, #0x1E000|30-202-140-226
25940|code|LDR             PC, [R12,#(__ctype_toupper_loc_ptr - 0x24554)]!; __imp___ctype_toupper_loc|116-248-188-229
25944|code|ADR             R12, 0x6560|0-198-143-226
25948|code|ADD             R12, R12, #0x1E000|30-202-140-226
25952|code|LDR             PC, [R12,#(memmove_ptr - 0x24560)]!; __imp_memmove|108-248-188-229
25956|code|ADR             R12, 0x656C|0-198-143-226
25960|code|ADD             R12, R12, #0x1E000|30-202-140-226
25964|code|LDR             PC, [R12,#(strpbrk_ptr - 0x2456C)]!; __imp_strpbrk|100-248-188-229
25968|code|ADR             R12, 0x6578|0-198-143-226
25972|code|ADD             R12, R12, #0x1E000|30-202-140-226
25976|code|LDR             PC, [R12,#(dlopen_ptr - 0x24578)]!; __imp_dlopen|92-248-188-229
25980|code|ADR             R12, 0x6584|0-198-143-226
25984|code|ADD             R12, R12, #0x1E000|30-202-140-226
25988|code|LDR             PC, [R12,#(__libc_current_sigrtmin_ptr - 0x24584)]!; __imp___libc_current_sigrtmin|84-248-188-229
25992|code|ADR             R12, 0x6590|0-198-143-226
25996|code|ADD             R12, R12, #0x1E000|30-202-140-226
26000|code|LDR             PC, [R12,#(kill_ptr - 0x24590)]!; __imp_kill|76-248-188-229
26004|code|ADR             R12, 0x659C|0-198-143-226
26008|code|ADD             R12, R12, #0x1E000|30-202-140-226
26012|code|LDR             PC, [R12,#(ioctl_ptr - 0x2459C)]!; __imp_ioctl|68-248-188-229
26016|code|ADR             R12, 0x65A8|0-198-143-226
26020|code|ADD             R12, R12, #0x1E000|30-202-140-226
26024|code|LDR             PC, [R12,#(clock_gettime_ptr - 0x245A8)]!; __imp_clock_gettime|60-248-188-229
26028|code|ADR             R12, 0x65B4|0-198-143-226
26032|code|ADD             R12, R12, #0x1E000|30-202-140-226
26036|code|LDR             PC, [R12,#(realloc_ptr - 0x245B4)]!; __imp_realloc|52-248-188-229
26040|code|ADR             R12, 0x65C0|0-198-143-226
26044|code|ADD             R12, R12, #0x1E000|30-202-140-226
26048|code|LDR             PC, [R12,#(strcpy_ptr - 0x245C0)]!; __imp_strcpy|44-248-188-229
26052|code|ADR             R12, 0x65CC|0-198-143-226
26056|code|ADD             R12, R12, #0x1E000|30-202-140-226
26060|code|LDR             PC, [R12,#(strtod_ptr - 0x245CC)]!; __imp_strtod|36-248-188-229
26064|code|ADR             R12, 0x65D8|0-198-143-226
26068|code|ADD             R12, R12, #0x1E000|30-202-140-226
26072|code|LDR             PC, [R12,#(open_ptr - 0x245D8)]!; __imp_open|28-248-188-229
26076|code|ADR             R12, 0x65E4|0-198-143-226
26080|code|ADD             R12, R12, #0x1E000|30-202-140-226
26084|code|LDR             PC, [R12,#(waitpid_ptr - 0x245E4)]!; __imp_waitpid|20-248-188-229
26088|code|ADR             R12, 0x65F0|0-198-143-226
26092|code|ADD             R12, R12, #0x1E000|30-202-140-226
26096|code|LDR             PC, [R12,#(fread_ptr - 0x245F0)]!; __imp_fread|12-248-188-229
26100|code|ADR             R12, 0x65FC|0-198-143-226
26104|code|ADD             R12, R12, #0x1E000|30-202-140-226
26108|code|LDR             PC, [R12,#(pthread_getspecific_ptr - 0x245FC)]!; __imp_pthread_getspecific|4-248-188-229
26112|code|ADR             R12, 0x6608|0-198-143-226
26116|code|ADD             R12, R12, #0x1E000|30-202-140-226
26120|code|LDR             PC, [R12,#(fileno_ptr - 0x24608)]!; __imp_fileno|252-247-188-229
26124|code|BX              PC|120-71
26126|data|ALIGN 4|192-70
26128|code|ADR             R12, 0x6618|0-198-143-226
26132|code|ADD             R12, R12, #0x1E000|30-202-140-226
26136|code|LDR             PC, [R12,#(pthread_rwlock_unlock_ptr - 0x24618)]!; __imp_pthread_rwlock_unlock|240-247-188-229
26140|code|ADR             R12, 0x6624|0-198-143-226
26144|code|ADD             R12, R12, #0x1E000|30-202-140-226
26148|code|LDR             PC, [R12,#(__syslog_chk_ptr - 0x24624)]!; __imp___syslog_chk|232-247-188-229
26152|code|ADR             R12, 0x6630|0-198-143-226
26156|code|ADD             R12, R12, #0x1E000|30-202-140-226
26160|code|LDR             PC, [R12,#(pthread_rwlock_wrlock_ptr - 0x24630)]!; __imp_pthread_rwlock_wrlock|224-247-188-229
26164|code|ADR             R12, 0x663C|0-198-143-226
26168|code|ADD             R12, R12, #0x1E000|30-202-140-226
26172|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x2463C)]!; __imp___stack_chk_fail|216-247-188-229
26176|code|ADR             R12, 0x6648|0-198-143-226
26180|code|ADD             R12, R12, #0x1E000|30-202-140-226
26184|code|LDR             PC, [R12,#(pthread_rwlock_tryrdlock_ptr - 0x24648)]!; __imp_pthread_rwlock_tryrdlock|208-247-188-229
26188|code|ADR             R12, 0x6654|0-198-143-226
26192|code|ADD             R12, R12, #0x1E000|30-202-140-226
26196|code|LDR             PC, [R12,#(fork_ptr - 0x24654)]!; __imp_fork|200-247-188-229
26200|code|ADR             R12, 0x6660|0-198-143-226
26204|code|ADD             R12, R12, #0x1E000|30-202-140-226
26208|code|LDR             PC, [R12,#(access_ptr - 0x24660)]!; __imp_access|192-247-188-229
26212|code|ADR             R12, 0x666C|0-198-143-226
26216|code|ADD             R12, R12, #0x1E000|30-202-140-226
26220|code|LDR             PC, [R12,#(sigdelset_ptr - 0x2466C)]!; __imp_sigdelset|184-247-188-229
26224|code|ADR             R12, 0x6678|0-198-143-226
26228|code|ADD             R12, R12, #0x1E000|30-202-140-226
26232|code|LDR             PC, [R12,#(dcgettext_ptr - 0x24678)]!; __imp_dcgettext|176-247-188-229
26236|code|ADR             R12, 0x6684|0-198-143-226
26240|code|ADD             R12, R12, #0x1E000|30-202-140-226
26244|code|LDR             PC, [R12,#(mkdir_ptr - 0x24684)]!; __imp_mkdir|168-247-188-229
26248|code|BX              PC|120-71
26250|data|ALIGN 4|192-70
26252|code|ADR             R12, 0x6694|0-198-143-226
26256|code|ADD             R12, R12, #0x1E000|30-202-140-226
26260|code|LDR             PC, [R12,#(__cxa_atexit_ptr - 0x24694)]!; __imp___cxa_atexit|156-247-188-229
26264|code|ADR             R12, 0x66A0|0-198-143-226
26268|code|ADD             R12, R12, #0x1E000|30-202-140-226
26272|code|LDR             PC, [R12,#(strncasecmp_ptr - 0x246A0)]!; __imp_strncasecmp|148-247-188-229
26276|code|ADR             R12, 0x66AC|0-198-143-226
26280|code|ADD             R12, R12, #0x1E000|30-202-140-226
26284|code|LDR             PC, [R12,#(pthread_key_create_ptr - 0x246AC)]!; __imp_pthread_key_create|140-247-188-229
26288|code|ADR             R12, 0x66B8|0-198-143-226
26292|code|ADD             R12, R12, #0x1E000|30-202-140-226
26296|code|LDR             PC, [R12,#(getopt_long_ptr - 0x246B8)]!; __imp_getopt_long|132-247-188-229
26300|code|ADR             R12, 0x66C4|0-198-143-226
26304|code|ADD             R12, R12, #0x1E000|30-202-140-226
26308|code|LDR             PC, [R12,#(lseek_ptr - 0x246C4)]!; __imp_lseek|124-247-188-229
26312|code|ADR             R12, 0x66D0|0-198-143-226
26316|code|ADD             R12, R12, #0x1E000|30-202-140-226
26320|code|LDR             PC, [R12,#(raise_ptr - 0x246D0)]!; __imp_raise|116-247-188-229
26324|code|ADR             R12, 0x66DC|0-198-143-226
26328|code|ADD             R12, R12, #0x1E000|30-202-140-226
26332|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x246DC)]!; __imp___ctype_b_loc|108-247-188-229
26336|code|ADR             R12, 0x66E8|0-198-143-226
26340|code|ADD             R12, R12, #0x1E000|30-202-140-226
26344|code|LDR             PC, [R12,#(bindtextdomain_ptr - 0x246E8)]!; __imp_bindtextdomain|100-247-188-229
26348|code|ADR             R12, 0x66F4|0-198-143-226
26352|code|ADD             R12, R12, #0x1E000|30-202-140-226
26356|code|LDR             PC, [R12,#(sigaction_ptr - 0x246F4)]!; __imp_sigaction|92-247-188-229
26360|code|ADR             R12, 0x6700|0-198-143-226
26364|code|ADD             R12, R12, #0x1E000|30-202-140-226
26368|code|LDR             PC, [R12,#(calloc_ptr - 0x24700)]!; __imp_calloc|84-247-188-229
26372|code|ADR             R12, 0x670C|0-198-143-226
26376|code|ADD             R12, R12, #0x1E000|30-202-140-226
26380|code|LDR             PC, [R12,#(setlocale_ptr - 0x2470C)]!; __imp_setlocale|76-247-188-229
26384|code|ADR             R12, 0x6718|0-198-143-226
26388|code|ADD             R12, R12, #0x1E000|30-202-140-226
26392|code|LDR             PC, [R12,#(ferror_ptr - 0x24718)]!; __imp_ferror|68-247-188-229
26396|code|ADR             R12, 0x6724|0-198-143-226
26400|code|ADD             R12, R12, #0x1E000|30-202-140-226
26404|code|LDR             PC, [R12,#(iconv_close_ptr - 0x24724)]!; __imp_iconv_close|60-247-188-229
26408|code|ADR             R12, 0x6730|0-198-143-226
26412|code|ADD             R12, R12, #0x1E000|30-202-140-226
26416|code|LDR             PC, [R12,#(fgets_ptr - 0x24730)]!; __imp_fgets|52-247-188-229
26420|code|ADR             R12, 0x673C|0-198-143-226
26424|code|ADD             R12, R12, #0x1E000|30-202-140-226
26428|code|LDR             PC, [R12,#(__fxstat_ptr - 0x2473C)]!; __imp___fxstat|44-247-188-229
26432|code|ADR             R12, 0x6748|0-198-143-226
26436|code|ADD             R12, R12, #0x1E000|30-202-140-226
26440|code|LDR             PC, [R12,#(u_charFromName_52_ptr - 0x24748)]!; __imp_u_charFromName_52|36-247-188-229
26444|code|ADR             R12, 0x6754|0-198-143-226
26448|code|ADD             R12, R12, #0x1E000|30-202-140-226
26452|code|LDR             PC, [R12,#(flockfile_ptr - 0x24754)]!; __imp_flockfile|28-247-188-229
26456|code|ADR             R12, 0x6760|0-198-143-226
26460|code|ADD             R12, R12, #0x1E000|30-202-140-226
26464|code|LDR             PC, [R12,#(fputc_ptr - 0x24760)]!; __imp_fputc|20-247-188-229
26468|code|ADR             R12, 0x676C|0-198-143-226
26472|code|ADD             R12, R12, #0x1E000|30-202-140-226
26476|code|LDR             PC, [R12,#(fwrite_ptr - 0x2476C)]!; __imp_fwrite|12-247-188-229
26480|code|ADR             R12, 0x6778|0-198-143-226
26484|code|ADD             R12, R12, #0x1E000|30-202-140-226
26488|code|LDR             PC, [R12,#(memcpy_ptr - 0x24778)]!; __imp_memcpy|4-247-188-229
26492|code|ADR             R12, 0x6784|0-198-143-226
26496|code|ADD             R12, R12, #0x1E000|30-202-140-226
26500|code|LDR             PC, [R12,#(unorm_normalize_52_ptr - 0x24784)]!; __imp_unorm_normalize_52|252-246-188-229
26504|code|ADR             R12, 0x6790|0-198-143-226
26508|code|ADD             R12, R12, #0x1E000|30-202-140-226
26512|code|LDR             PC, [R12,#(malloc_ptr - 0x24790)]!; __imp_malloc|244-246-188-229
26516|code|BX              PC|120-71
26518|data|ALIGN 4|192-70
26520|code|ADR             R12, 0x67A0|0-198-143-226
26524|code|ADD             R12, R12, #0x1E000|30-202-140-226
26528|code|LDR             PC, [R12,#(strlen_ptr - 0x247A0)]!; __imp_strlen|232-246-188-229
26532|code|ADR             R12, 0x67AC|0-198-143-226
26536|code|ADD             R12, R12, #0x1E000|30-202-140-226
26540|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x247AC)]!; __imp___snprintf_chk|224-246-188-229
26544|code|ADR             R12, 0x67B8|0-198-143-226
26548|code|ADD             R12, R12, #0x1E000|30-202-140-226
26552|code|LDR             PC, [R12,#(ioperm_ptr - 0x247B8)]!; __imp_ioperm|216-246-188-229
26556|code|BX              PC|120-71
26558|data|ALIGN 4|192-70
26560|code|ADR             R12, 0x67C8|0-198-143-226
26564|code|ADD             R12, R12, #0x1E000|30-202-140-226
26568|code|LDR             PC, [R12,#(outb_ptr - 0x247C8)]!; __imp_outb|204-246-188-229
26572|code|ADR             R12, 0x67D4|0-198-143-226
26576|code|ADD             R12, R12, #0x1E000|30-202-140-226
26580|code|LDR             PC, [R12,#(pthread_setspecific_ptr - 0x247D4)]!; __imp_pthread_setspecific|196-246-188-229
26584|code|ADR             R12, 0x67E0|0-198-143-226
26588|code|ADD             R12, R12, #0x1E000|30-202-140-226
26592|code|LDR             PC, [R12,#(getcwd_ptr - 0x247E0)]!; __imp_getcwd|188-246-188-229
26596|code|ADR             R12, 0x67EC|0-198-143-226
26600|code|ADD             R12, R12, #0x1E000|30-202-140-226
26604|code|LDR             PC, [R12,#(fclose_ptr - 0x247EC)]!; __imp_fclose|180-246-188-229
26608|code|BX              PC|120-71
26610|data|ALIGN 4|192-70
26612|code|ADR             R12, 0x67FC|0-198-143-226
26616|code|ADD             R12, R12, #0x1E000|30-202-140-226
26620|code|LDR             PC, [R12,#(write_ptr - 0x247FC)]!; __imp_write|168-246-188-229
26624|code|BX              PC|120-71
26626|data|ALIGN 4|192-70
26628|code|ADRL            R12, 0x2480C|0-198-143-226-30-202-140-226
26636|code|LDR             PC, [R12,#(inb_ptr - 0x2480C)]!; __imp_inb|156-246-188-229
26640|code|ADRL            R12, 0x24818|0-198-143-226-30-202-140-226
26648|code|LDR             PC, [R12,#(sigismember_ptr - 0x24818)]!; __imp_sigismember|148-246-188-229
26652|code|ADRL            R12, 0x24824|0-198-143-226-30-202-140-226
26660|code|LDR             PC, [R12,#(mempcpy_ptr - 0x24824)]!; __imp_mempcpy|140-246-188-229
26664|code|ADRL            R12, 0x24830|0-198-143-226-30-202-140-226
26672|code|LDR             PC, [R12,#(__xstat_ptr - 0x24830)]!; __imp___xstat|132-246-188-229
26676|code|ADRL            R12, 0x2483C|0-198-143-226-30-202-140-226
26684|code|LDR             PC, [R12,#(pthread_rwlock_trywrlock_ptr - 0x2483C)]!; __imp_pthread_rwlock_trywrlock|124-246-188-229
26688|code|ADRL            R12, 0x24848|0-198-143-226-30-202-140-226
26696|code|LDR             PC, [R12,#(__realpath_chk_ptr - 0x24848)]!; __imp___realpath_chk|116-246-188-229
26700|code|ADRL            R12, 0x24854|0-198-143-226-30-202-140-226
26708|code|LDR             PC, [R12,#(iconv_open_ptr - 0x24854)]!; __imp_iconv_open|108-246-188-229
26712|code|ADRL            R12, 0x24860|0-198-143-226-30-202-140-226
26720|code|LDR             PC, [R12,#(pthread_rwlock_init_ptr - 0x24860)]!; __imp_pthread_rwlock_init|100-246-188-229
26724|code|ADRL            R12, 0x2486C|0-198-143-226-30-202-140-226
26732|code|LDR             PC, [R12,#(_exit_ptr - 0x2486C)]!; __imp__exit|92-246-188-229
26736|code|ADRL            R12, 0x24878|0-198-143-226-30-202-140-226
26744|code|LDR             PC, [R12,#(pthread_create_ptr - 0x24878)]!; __imp_pthread_create|84-246-188-229
26748|code|ADRL            R12, 0x24884|0-198-143-226-30-202-140-226
26756|code|LDR             PC, [R12,#(strcmp_ptr - 0x24884)]!; __imp_strcmp|76-246-188-229
26760|code|ADRL            R12, 0x24890|0-198-143-226-30-202-140-226
26768|code|LDR             PC, [R12,#(iconv_ptr - 0x24890)]!; __imp_iconv|68-246-188-229
26772|code|ADRL            R12, 0x2489C|0-198-143-226-30-202-140-226
26780|code|LDR             PC, [R12,#(__errno_location_ptr - 0x2489C)]!; __imp___errno_location|60-246-188-229
26784|code|BX              PC|120-71
26786|data|ALIGN 4|192-70
26788|code|ADRL            R12, 0x248AC|0-198-143-226-30-202-140-226
26796|code|LDR             PC, [R12,#(send_ptr - 0x248AC)]!; __imp_send|48-246-188-229
26800|code|ADRL            R12, 0x248B8|0-198-143-226-30-202-140-226
26808|code|LDR             PC, [R12,#(memchr_ptr - 0x248B8)]!; __imp_memchr|40-246-188-229
26812|code|ADRL            R12, 0x248C4|0-198-143-226-30-202-140-226
26820|code|LDR             PC, [R12,#(sscanf_ptr - 0x248C4)]!; __imp_sscanf|32-246-188-229
26824|code|ADRL            R12, 0x248D0|0-198-143-226-30-202-140-226
26832|code|LDR             PC, [R12,#(strncpy_ptr - 0x248D0)]!; __imp_strncpy|24-246-188-229
26836|code|BX              PC|120-71
26838|data|ALIGN 4|192-70
26840|code|ADRL            R12, 0x248E0|0-198-143-226-30-202-140-226
26848|code|LDR             PC, [R12,#(fflush_ptr - 0x248E0)]!; __imp_fflush|12-246-188-229
26852|code|ADRL            R12, 0x248EC|0-198-143-226-30-202-140-226
26860|code|LDR             PC, [R12,#(memcmp_ptr - 0x248EC)]!; __imp_memcmp|4-246-188-229
26864|code|ADRL            R12, 0x248F8|0-198-143-226-30-202-140-226
26872|code|LDR             PC, [R12,#(__libc_current_sigrtmax_ptr - 0x248F8)]!; __imp___libc_current_sigrtmax|252-245-188-229
26876|code|ADRL            R12, 0x24904|0-198-143-226-30-202-140-226
26884|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x24904)]!; __imp_sigemptyset|244-245-188-229
26888|code|BX              PC|120-71
26890|data|ALIGN 4|192-70
26892|code|ADRL            R12, 0x24914|0-198-143-226-30-202-140-226
26900|code|LDR             PC, [R12,#(strrchr_ptr - 0x24914)]!; __imp_strrchr|232-245-188-229
26904|code|ADRL            R12, 0x24920|0-198-143-226-30-202-140-226
26912|code|LDR             PC, [R12,#(funlockfile_ptr - 0x24920)]!; __imp_funlockfile|224-245-188-229
26916|code|ADRL            R12, 0x2492C|0-198-143-226-30-202-140-226
26924|code|LDR             PC, [R12,#(mktime_ptr - 0x2492C)]!; __imp_mktime|216-245-188-229
26928|code|ADRL            R12, 0x24938|0-198-143-226-30-202-140-226
26936|code|LDR             PC, [R12,#(openlog_ptr - 0x24938)]!; __imp_openlog|208-245-188-229
26940|code|ADRL            R12, 0x24944|0-198-143-226-30-202-140-226
26948|code|LDR             PC, [R12,#(fputs_ptr - 0x24944)]!; __imp_fputs|200-245-188-229
26952|code|ADRL            R12, 0x24950|0-198-143-226-30-202-140-226
26960|code|LDR             PC, [R12,#(getenv_ptr - 0x24950)]!; __imp_getenv|192-245-188-229
26964|code|ADRL            R12, 0x2495C|0-198-143-226-30-202-140-226
26972|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x2495C)]!; __imp___libc_start_main|184-245-188-229
26976|code|ADRL            R12, 0x24968|0-198-143-226-30-202-140-226
26984|code|LDR             PC, [R12,#(dlsym_ptr - 0x24968)]!; __imp_dlsym|176-245-188-229
26988|code|ADRL            R12, 0x24974|0-198-143-226-30-202-140-226
26996|code|LDR             PC, [R12,#(execvp_ptr - 0x24974)]!; __imp_execvp|168-245-188-229
27000|code|ADRL            R12, 0x24980|0-198-143-226-30-202-140-226
27008|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x24980)]!; __imp___gmon_start__|160-245-188-229
27012|code|ADRL            R12, 0x2498C|0-198-143-226-30-202-140-226
27020|code|LDR             PC, [R12,#(sigprocmask_ptr - 0x2498C)]!; __imp_sigprocmask|152-245-188-229
27024|code|ADRL            R12, 0x24998|0-198-143-226-30-202-140-226
27032|code|LDR             PC, [R12,#(mbsinit_ptr - 0x24998)]!; __imp_mbsinit|144-245-188-229
27036|code|ADRL            R12, 0x249A4|0-198-143-226-30-202-140-226
27044|code|LDR             PC, [R12,#(strchr_ptr - 0x249A4)]!; __imp_strchr|136-245-188-229
27048|code|ADRL            R12, 0x249B0|0-198-143-226-30-202-140-226
27056|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x249B0)]!; __imp___cxa_finalize|128-245-188-229
27060|code|BX              PC|120-71
27062|data|ALIGN 4|192-70
27064|code|ADRL            R12, 0x249C0|0-198-143-226-30-202-140-226
27072|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x249C0)]!; __imp_pthread_mutex_unlock|116-245-188-229
27076|code|ADRL            R12, 0x249CC|0-198-143-226-30-202-140-226
27084|code|LDR             PC, [R12,#(wcrtomb_ptr - 0x249CC)]!; __imp_wcrtomb|108-245-188-229
27088|code|ADRL            R12, 0x249D8|0-198-143-226-30-202-140-226
27096|code|LDR             PC, [R12,#(iswcntrl_ptr - 0x249D8)]!; __imp_iswcntrl|100-245-188-229
27100|code|ADRL            R12, 0x249E4|0-198-143-226-30-202-140-226
27108|code|LDR             PC, [R12,#(pipe_ptr - 0x249E4)]!; __imp_pipe|92-245-188-229
27112|code|PUSH.W          {R4-R9,LR}|45-233-240-67
27116|code|SUB             SP, SP, #0x1C|135-176
27118|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x69F8)|101-77
27120|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|101-75
27122|code|MOV             R2, SP; int|106-70
27124|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
27126|code|STR             R0, [SP,#0x38+var_34]|1-144
27128|code|STR             R1, [SP,#0x38+var_38]|0-145
27130|code|ADD             R1, SP, #0x38+var_34; int|1-169
27132|code|LDR             R6, [R5,R3]; __stack_chk_guard|238-88
27134|code|LDR             R0, =(off_24814 - 0x6A06)|99-72
27136|code|LDR             R3, [R6]|51-104
27138|code|ADD             R0, PC; off_24814 ; longind|120-68
27140|code|STR             R3, [SP,#0x38+var_24]|5-147
27142|code|BL              processOptions|1-240-203-248
27146|code|CMP             R0, #1|1-40
27148|code|MOV             R4, R0|4-70
27150|code|IT EQ|8-191
27152|code|MOVEQ           R0, #0|0-32
27154|code|BEQ             loc_6A18|1-208
27156|code|CBZ             R4, loc_6A28|68-177
27158|code|MOV             R0, R4|32-70
27160|code|LDR             R2, [SP,#0x38+var_24]|5-154
27162|code|LDR             R3, [R6]|51-104
27164|code|CMP             R2, R3|154-66
27166|code|BNE.W           loc_6B80|64-240-175-128
27170|code|ADD             SP, SP, #0x1C|7-176
27172|code|POP.W           {R4-R9,PC}|189-232-240-131
27176|code|LDR             R7, =(dword_25038 - 0x6A32)|89-79
27178|code|ADD             R0, SP, #0x38+var_2C|3-168
27180|code|STR             R4, [SP,#0x38+var_28]|4-148
27182|code|ADD             R7, PC; dword_25038|127-68
27184|code|ADD.W           R3, R7, #0x1C|7-241-28-3
27188|code|STR             R3, [SP,#0x38+var_2C]|3-147
27190|code|BL              fixInstallPaths|0-240-157-253
27194|code|LDR.W           R8, [R7,#(dword_25058 - 0x25038)]|215-248-32-128
27198|code|LDR             R1, =(aAuto - 0x6A46); "auto"|85-73
27200|code|STR             R4, [R7,#(dword_2503C - 0x25038)]|124-96
27202|code|ADD             R1, PC; "auto"|121-68
27204|code|MOV             R0, R8; s1|64-70
27206|code|ADDS            R1, #8; s2|8-49
27208|code|LDR             R4, [R7,#(dword_25054 - 0x25038)]|252-105
27210|code|BLX             strcmp|255-247-24-239
27214|code|CBZ             R0, loc_6A60|56-177
27216|code|ADDS            R0, R7, #4|56-29
27218|code|MOV             R1, R4|33-70
27220|code|MOV             R2, R8|66-70
27222|code|BL              sub_6DD8|0-240-191-249
27226|code|CBNZ            R0, loc_6A60|8-185
27228|code|MOVS            R4, #4|4-36
27230|code|B               loc_6A16|218-231
27232|code|LDR             R4, =(dword_25038 - 0x6A6A)|77-76
27234|code|MOVS            R3, #0|0-35
27236|code|LDR             R1, =(aAuto - 0x6A6C); "auto"|77-73
27238|code|ADD             R4, PC; dword_25038|124-68
27240|code|ADD             R1, PC; "auto"|121-68
27242|code|LDR             R7, [R4,#(dword_2505C - 0x25038)]|103-106
27244|code|ADDS            R1, #8; s2|8-49
27246|code|STR             R3, [R4]|35-96
27248|code|LDR.W           R8, [R4,#(dword_25054 - 0x25038)]|212-248-28-128
27252|code|MOV             R0, R7; s1|56-70
27254|code|BLX             strcmp|255-247-2-239
27258|code|CBZ             R0, loc_6A9A|112-177
27260|code|MOV             R0, R4|32-70
27262|code|MOV             R1, R8|65-70
27264|code|MOV             R2, R7|58-70
27266|code|BL              sub_6DD8|0-240-169-249
27270|code|CBNZ            R0, loc_6A9A|64-185
27272|code|MOVS            R4, #4|4-36
27274|code|LDR             R3, =(dword_25038 - 0x6A90)|69-75
27276|code|ADD             R3, PC; dword_25038|123-68
27278|code|LDR             R0, [R3,#(dword_2503C - 0x25038)]|88-104
27280|code|CMP             R0, #0|0-40
27282|code|BEQ             loc_6A16|192-208
27284|code|BL              destroyTextTable|9-240-132-253
27288|code|B               loc_6A16|189-231
27290|code|LDR             R1, =(stdout_ptr - 0x24CD4)|66-73
27292|code|LDR             R3, =(dword_25038 - 0x6AA6)|66-75
27294|code|LDR             R2, =(standardOutputName_ptr - 0x24CD4)|67-74
27296|code|LDR             R0, [R5,R1]; stdout|104-88
27298|code|ADD             R3, PC; dword_25038|123-68
27300|code|LDR             R1, [R3,#(dword_2503C - 0x25038)]|89-104
27302|code|LDR             R0, [R0]|0-104
27304|code|STR             R0, [R3,#(dword_25040 - 0x25038)]|152-96
27306|code|LDR             R2, [R5,R2]; standardOutputName_ptr ...|170-88
27308|code|STR             R2, [R3,#(dword_25050 - 0x25038)]|154-97
27310|code|CMP             R1, #0|0-41
27312|code|BEQ             loc_6B5E|85-208
27314|code|LDR             R1, =(loc_6D44+1 - 0x6AB8)|63-73
27316|code|ADD             R1, PC; loc_6D44|121-68
27318|code|LDR             R3, =(dword_25038 - 0x6ABC)|63-75
27320|code|ADD             R3, PC; dword_25038|123-68
27322|code|LDR             R2, [R3]|26-104
27324|code|STR             R1, [R3,#(dword_25044 - 0x25038)]|217-96
27326|code|CMP             R2, #0|0-42
27328|code|BEQ             loc_6B58|74-208
27330|code|LDR             R1, =(loc_6D34+1 - 0x6AC8)|61-73
27332|code|ADD             R1, PC; loc_6D34|121-68
27334|code|LDR             R3, =(dword_25038 - 0x6ACE)|61-75
27336|code|LDR             R2, [SP,#0x38+var_34]|1-154
27338|code|ADD             R3, PC; dword_25038|123-68
27340|code|STR             R1, [R3,#(dword_2504C - 0x25038)]|89-97
27342|code|CMP             R2, #0|0-42
27344|code|BEQ             loc_6B42|55-208
27346|code|LDR             R2, =(standardStreamArgument_ptr - 0x24CD4)|59-74
27348|code|LDR.W           R8, =(aInvalidUnicode+0x18 - 0x6ADE); "r"|223-248-236-128
27352|code|LDR             R3, [SP,#0x38+var_38]|0-155
27354|code|ADD             R8, PC; "r"|248-68
27356|code|LDR             R4, [R5,R2]; standardStreamArgument_ptr ...|172-88
27358|code|B               loc_6AFE|14-224
27360|code|LDR             R2, =(stdin_ptr - 0x24CD4)|57-74
27362|code|LDR             R3, =(standardInputName_ptr - 0x24CD4)|58-75
27364|code|LDR             R2, [R5,R2]; stdin|170-88
27366|code|LDR             R1, [R5,R3]; standardInputName_ptr ...|233-88
27368|code|LDR             R0, [R2]|16-104
27370|code|BL              sub_6E48|0-240-173-249
27374|code|CBZ             R0, loc_6B2A|224-177
27376|code|LDR             R0, [SP,#0x38+var_34]|1-152
27378|code|LDR             R3, [SP,#0x38+var_38]|0-155
27380|code|SUBS            R0, #1|1-56
27382|code|STR             R0, [SP,#0x38+var_34]|1-144
27384|code|ADDS            R3, #4|4-51
27386|code|STR             R3, [SP,#0x38+var_38]|0-147
27388|code|CBZ             R0, loc_6B30|192-177
27390|code|LDR             R7, [R3]|31-104
27392|code|MOV             R1, R4; s2|33-70
27394|code|MOV             R0, R7; s1|56-70
27396|code|BLX             strcmp|255-247-186-238
27400|code|CMP             R0, #0|0-40
27402|code|BEQ             loc_6AE0|233-208
27404|code|MOV             R0, R7; filename|56-70
27406|code|MOV             R1, R8; modes|65-70
27408|code|BLX             fopen|255-247-246-236
27412|code|MOV             R9, R0|129-70
27414|code|CBZ             R0, loc_6B64|40-179
27416|code|MOV             R1, R7|57-70
27418|code|BL              sub_6E48|0-240-149-249
27422|code|MOV             R7, R0|7-70
27424|code|MOV             R0, R9; stream|72-70
27426|code|BLX             fclose|255-247-96-238
27430|code|CMP             R7, #0|0-47
27432|code|BNE             loc_6AF0|226-209
27434|code|MOVS            R4, #4|4-36
27436|code|LDR             R3, [SP,#0x38+var_34]|1-155
27438|code|CBNZ            R3, loc_6B32|3-185
27440|code|MOVS            R4, #0|0-36
27442|code|LDR             R3, =(dword_25038 - 0x6B38)|39-75
27444|code|ADD             R3, PC; dword_25038|123-68
27446|code|LDR             R0, [R3]|24-104
27448|code|CMP             R0, #0|0-40
27450|code|BEQ             loc_6A8A|166-208
27452|code|BL              destroyTextTable|9-240-48-253
27456|code|B               loc_6A8A|163-231
27458|code|LDR             R2, =(stdin_ptr - 0x24CD4)|33-74
27460|code|LDR             R3, =(standardInputName_ptr - 0x24CD4)|33-75
27462|code|LDR             R2, [R5,R2]; stdin|170-88
27464|code|LDR             R1, [R5,R3]; standardInputName_ptr ...|233-88
27466|code|LDR             R0, [R2]|16-104
27468|code|BL              sub_6E48|0-240-124-249
27472|code|CMP             R0, #0|0-40
27474|code|BNE             loc_6B30|237-209
27476|code|MOVS            R4, #4|4-36
27478|code|B               loc_6B32|236-231
27480|code|LDR             R1, =(sub_6D2C+1 - 0x6B5E)|30-73
27482|code|ADD             R1, PC; sub_6D2C|121-68
27484|code|B               loc_6AC6|179-231
27486|code|LDR             R1, =(loc_6D1C+1 - 0x6B64)|30-73
27488|code|ADD             R1, PC; loc_6D1C|121-68
27490|code|B               loc_6AB6|168-231
27492|code|BLX             __errno_location|255-247-150-238
27496|code|MOVS            R4, #3|3-36
27498|code|LDR             R0, [R0]; errnum|0-104
27500|code|BLX             strerror|255-247-22-236
27504|code|LDR             R1, =(aCannotOpenFile - 0x6B78); "cannot open file: %s: %s"|26-73
27506|code|MOV             R2, R7|58-70
27508|code|ADD             R1, PC; "cannot open file: %s: %s"|121-68
27510|code|MOV             R3, R0|3-70
27512|code|MOV             R0, R4|32-70
27514|code|BL              logMessage|2-240-99-250
27518|code|B               loc_6B2C|213-231
27520|code|BLX             __stack_chk_fail|255-247-88-237
27524|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x69F8|220-226-1-0
27528|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
27532|data|DCD off_24814 - 0x6A06|14-222-1-0
27536|data|DCD dword_25038 - 0x6A32|6-230-1-0
27540|data|DCD aAuto - 0x6A46; "auto"|174-166-0-0
27544|data|DCD dword_25038 - 0x6A6A|206-229-1-0
27548|data|DCD aAuto - 0x6A6C; "auto"|136-166-0-0
27552|data|DCD dword_25038 - 0x6A90|168-229-1-0
27556|data|DCD stdout_ptr - 0x24CD4|4-3-0-0
27560|data|DCD dword_25038 - 0x6AA6|146-229-1-0
27564|data|DCD standardOutputName_ptr - 0x24CD4|184-2-0-0
27568|data|DCD loc_6D44+1 - 0x6AB8|141-2-0-0
27572|data|DCD dword_25038 - 0x6ABC|124-229-1-0
27576|data|DCD loc_6D34+1 - 0x6AC8|109-2-0-0
27580|data|DCD dword_25038 - 0x6ACE|106-229-1-0
27584|data|DCD standardStreamArgument_ptr - 0x24CD4|144-2-0-0
27588|data|DCD aInvalidUnicode+0x18 - 0x6ADE; "r"|142-198-0-0
27592|data|DCD stdin_ptr - 0x24CD4|116-2-0-0
27596|data|DCD standardInputName_ptr - 0x24CD4|192-2-0-0
27600|data|DCD dword_25038 - 0x6B38|0-229-1-0
27604|data|DCD sub_6D2C+1 - 0x6B5E|207-1-0-0
27608|data|DCD loc_6D1C+1 - 0x6B64|185-1-0-0
27612|data|DCD aCannotOpenFile - 0x6B78; "cannot open file: %s: %s"|228-165-0-0
27616|code|MOV.W           R11, #0|79-240-0-11
27620|code|MOV.W           LR, #0|79-240-0-14
27624|code|POP             {R1}; argc|2-188
27626|code|MOV             R2, SP; ubp_av|106-70
27628|code|PUSH            {R2}; stack_end|4-180
27630|code|PUSH            {R0}; rtld_fini|1-180
27632|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x6C18)|223-248-36-160
27636|code|ADR             R3, off_6C18|8-163
27638|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
27640|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x24CD4)|223-248-32-192
27644|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
27648|code|PUSH.W          {R12}; fini|77-248-4-205
27652|code|LDR             R3, =(__libc_csu_init_ptr - 0x24CD4)|6-75
27654|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
27658|code|LDR             R0, =(main_ptr - 0x24CD4)|6-72
27660|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
27664|code|BLX             __libc_start_main|255-247-160-238
27668|code|BLX             abort|255-247-136-236
27672|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6C18|188-224-1-0
27676|data|DCD __libc_csu_fini_ptr - 0x24CD4|16-3-0-0
27680|data|DCD __libc_csu_init_ptr - 0x24CD4|244-2-0-0
27684|data|DCD main_ptr - 0x24CD4|160-2-0-0
27688|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x6C38)|20-48-159-229
27692|code|LDR             R2, =(__gmon_start___ptr_0 - 0x24CD4)|20-32-159-229
27696|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
27700|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
27704|code|CMP             R2, #0|0-0-82-227
27708|code|BXEQ            LR|30-255-47-1
27712|code|B               __gmon_start__|76-255-255-234
27716|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6C38|156-224-1-0
27720|data|DCD __gmon_start___ptr_0 - 0x24CD4|24-3-0-0
27724|code|LDR             R3, =(__bss_start - 0x6C54)|7-75
27726|code|LDR             R0, =(__bss_start - 0x6C58)|8-72
27728|code|ADD             R3, PC; __bss_start|123-68
27730|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x6C5E)|8-74
27732|code|ADD             R0, PC; __bss_start|120-68
27734|code|ADDS            R3, #3|3-51
27736|code|SUBS            R3, R3, R0|27-26
27738|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
27740|code|CMP             R3, #6|6-43
27742|code|BLS             locret_6C68|3-217
27744|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x24CD4)|5-75
27746|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
27748|code|CBZ             R3, locret_6C68|3-177
27750|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
27752|code|BX              LR|112-71
27754|data|ALIGN 4|0-191
27756|data|DCD __bss_start - 0x6C54|224-227-1-0
27760|data|DCD __bss_start - 0x6C58|220-227-1-0
27764|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6C5E|118-224-1-0
27768|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x24CD4|12-3-0-0
27772|code|LDR             R1, =(__bss_start - 0x6C84)|8-73
27774|code|LDR             R0, =(__bss_start - 0x6C88)|9-72
27776|code|ADD             R1, PC; __bss_start|121-68
27778|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x6C8C)|9-75
27780|code|ADD             R0, PC; __bss_start|120-68
27782|code|SUBS            R1, R1, R0|9-26
27784|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
27786|code|ASRS            R1, R1, #2|137-16
27788|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
27792|code|ASRS            R1, R1, #1|73-16
27794|code|BEQ             locret_6C9C|3-208
27796|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x24CD4)|5-74
27798|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
27800|code|CBZ             R3, locret_6C9C|3-177
27802|code|BX              R3; _ITM_registerTMCloneTable|24-71
27804|code|BX              LR|112-71
27806|data|ALIGN 0x10|0-191
27808|data|DCD __bss_start - 0x6C84|176-227-1-0
27812|data|DCD __bss_start - 0x6C88|172-227-1-0
27816|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6C8C|72-224-1-0
27820|data|DCD _ITM_registerTMCloneTable_ptr - 0x24CD4|28-3-0-0
27824|code|PUSH            {R3,LR}|8-181
27826|code|LDR             R3, =(__bss_start - 0x6CBA)|10-75
27828|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x6CBC)|10-74
27830|code|ADD             R3, PC; __bss_start|123-68
27832|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
27834|code|LDRB            R3, [R3]|27-120
27836|code|CBNZ            R3, locret_6CDA|107-185
27838|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x24CD4)|9-75
27840|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
27842|code|CBZ             R3, loc_6CCE|35-177
27844|code|LDR             R3, =(off_25004 - 0x6CCA)|8-75
27846|code|ADD             R3, PC; off_25004|123-68
27848|code|LDR             R0, [R3]; off_25004 ; void *|24-104
27850|code|BLX             __cxa_finalize|255-247-110-238
27854|code|BL              sub_6C4C|255-247-189-255
27858|code|LDR             R3, =(__bss_start - 0x6CDA)|6-75
27860|code|MOVS            R2, #1|1-34
27862|code|ADD             R3, PC; __bss_start|123-68
27864|code|STRB            R2, [R3]|26-112
27866|code|POP             {R3,PC}|8-189
27868|data|DCD __bss_start - 0x6CBA|122-227-1-0
27872|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6CBC|24-224-1-0
27876|data|DCD __cxa_finalize_ptr_0 - 0x24CD4|36-3-0-0
27880|data|DCD off_25004 - 0x6CCA|58-227-1-0
27884|data|DCD __bss_start - 0x6CDA|90-227-1-0
27888|code|LDR             R0, =(dword_24810 - 0x6CF8)|7-72
27890|code|PUSH            {R3,LR}|8-181
27892|code|ADD             R0, PC; dword_24810|120-68
27894|code|LDR             R2, [R0]|2-104
27896|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x6CFE)|6-75
27898|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
27900|code|CBNZ            R2, loc_6D04|18-185
27902|code|POP.W           {R3,LR}|189-232-8-64
27906|code|B               sub_6C7C|187-231
27908|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x24CD4)|4-74
27910|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
27912|code|CMP             R3, #0|0-43
27914|code|BEQ             loc_6CFE|248-208
27916|code|BLX             R3; _Jv_RegisterClasses|152-71
27918|code|B               loc_6CFE|246-231
27920|data|DCD dword_24810 - 0x6CF8|24-219-1-0
27924|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6CFE|214-223-1-0
27928|data|DCD _Jv_RegisterClasses_ptr - 0x24CD4|212-2-0-0
27932|code|AND.W           R3, R0, #0xFF00|0-244-127-67
27936|code|CMP.W           R3, #0x2800|179-245-32-95
27940|code|ITE EQ|12-191
27942|code|UXTBEQ          R0, R0|192-178
27944|code|MOVNE           R0, #0xFF|255-32
27946|code|BX              LR|112-71
27948|code|ORR.W           R0, R0, #0x2800|64-244-32-80
27952|code|BX              LR|112-71
27954|data|ALIGN 4|0-191
27956|code|LDR             R3, =(dword_25038 - 0x6D3C)|2-75
27958|code|MOV             R1, R0|1-70
27960|code|ADD             R3, PC; dword_25038|123-68
27962|code|LDR             R0, [R3]|24-104
27964|code|B.W             convertDotsToCharacter|9-240-248-185
27968|data|DCD dword_25038 - 0x6D3C|252-226-1-0
27972|code|LDR             R3, =(dword_25038 - 0x6D4C)|2-75
27974|code|MOV             R1, R0|1-70
27976|code|ADD             R3, PC; dword_25038|123-68
27978|code|LDR             R0, [R3,#(dword_2503C - 0x25038)]|88-104
27980|code|B.W             convertCharacterToDots|9-240-140-185
27984|data|DCD dword_25038 - 0x6D4C|236-226-1-0
27988|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x6D5E)|29-75
27990|code|MOV             R2, R1; ps|10-70
27992|code|PUSH            {R4,R5,R7,LR}|176-181
27994|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
27996|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|28-76
27998|code|SUB.W           SP, SP, #0x1000|173-245-128-93
28002|code|SUB             SP, SP, #8|130-176
28004|code|ADD.W           R1, SP, #0x1008+var_8|13-245-128-81
28008|code|ADD             R7, SP, #4|1-175
28010|code|LDR             R5, [R3,R4]; __stack_chk_guard|29-89
28012|code|ADDS            R1, #4|4-49
28014|code|LDR             R3, [R5]|43-104
28016|code|STR             R3, [R1]|11-96
28018|code|CBZ             R0, loc_6DB2|240-177
28020|code|LDR             R1, [R0]; wc|1-104
28022|code|MOV             R0, R7; s|56-70
28024|code|BLX             wcrtomb|255-247-36-238
28028|code|ADDS            R1, R0, #1|65-28
28030|code|MOV             R2, R0; n|2-70
28032|code|BEQ             loc_6DC4|32-208
28034|code|LDR             R4, =(dword_25038 - 0x6D8C)|20-76
28036|code|MOVS            R1, #1; size|1-33
28038|code|MOV             R0, R7; ptr|56-70
28040|code|ADD             R4, PC; dword_25038|124-68
28042|code|LDR             R3, [R4,#(dword_25040 - 0x25038)]; s|163-104
28044|code|BLX             fwrite|255-247-234-236
28048|code|LDR             R0, [R4,#(dword_25040 - 0x25038)]; stream|160-104
28050|code|BLX             ferror|255-247-190-236
28054|code|CLZ.W           R0, R0|176-250-128-240
28058|code|LSRS            R0, R0, #5|64-9
28060|code|ADD.W           R3, SP, #0x1008+var_8|13-245-128-83
28064|code|ADDS            R3, #4|4-51
28066|code|LDR             R2, [R3]|26-104
28068|code|LDR             R3, [R5]|43-104
28070|code|CMP             R2, R3|154-66
28072|code|BNE             loc_6DC8|14-209
28074|code|ADD.W           SP, SP, #0x1000|13-245-128-93
28078|code|ADD             SP, SP, #8|2-176
28080|code|POP             {R4,R5,R7,PC}|176-189
28082|code|MOV             R1, R0; wc|1-70
28084|code|MOV             R0, R7; s|56-70
28086|code|BLX             wcrtomb|255-247-6-238
28090|code|ADDS            R3, R0, #1|67-28
28092|code|IT NE|24-191
28094|code|ADDNE.W         R2, R0, #0xFFFFFFFF|0-241-255-50
28098|code|BNE             loc_6D82|222-209
28100|code|MOVS            R0, #0|0-32
28102|code|B               loc_6D9C|233-231
28104|code|BLX             __stack_chk_fail|255-247-52-236
28108|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6D5E|118-223-1-0
28112|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
28116|data|DCD dword_25038 - 0x6D8C|172-226-1-0
28120|code|PUSH            {R4-R6,LR}|112-181
28122|code|MOV             R6, R1|14-70
28124|code|LDR             R1, =(aAuto - 0x6DE8); "auto"|24-73
28126|code|MOV             R5, R0|5-70
28128|code|MOV             R0, R2; s1|16-70
28130|code|MOV             R4, R2|20-70
28132|code|ADD             R1, PC; "auto"|121-68
28134|code|BLX             strcmp|255-247-74-237
28138|code|CBZ             R0, loc_6E0E|128-177
28140|code|MOV             R1, R4|33-70
28142|code|MOV             R0, R6|48-70
28144|code|BL              makeTextTablePath|9-240-234-251
28148|code|MOV             R4, R0|4-70
28150|code|CBZ             R0, loc_6E04|40-177
28152|code|BL              compileTextTable|9-240-30-254
28156|code|STR             R0, [R5]|40-96
28158|code|MOV             R0, R4; ptr|32-70
28160|code|BLX             free|255-247-160-234
28164|code|LDR             R0, [R5]|40-104
28166|code|ADDS            R0, #0|0-48
28168|code|IT NE|24-191
28170|code|MOVNE           R0, #1|1-32
28172|code|POP             {R4-R6,PC}|112-189
28174|code|MOV             R0, R6|48-70
28176|code|BL              selectTextTable|9-240-12-252
28180|code|MOV             R4, R0|4-70
28182|code|CBZ             R0, loc_6E34|104-177
28184|code|MOV             R0, R6|48-70
28186|code|MOV             R1, R4|33-70
28188|code|BL              makeTextTablePath|9-240-212-251
28192|code|MOV             R6, R0|6-70
28194|code|CMP             R0, #0|0-40
28196|code|BEQ             loc_6DFE|235-208
28198|code|BL              compileTextTable|9-240-7-254
28202|code|STR             R0, [R5]|40-96
28204|code|MOV             R0, R6; ptr|48-70
28206|code|BLX             free|255-247-138-234
28210|code|B               loc_6DFE|228-231
28212|code|LDR             R1, =(aCannotFindText - 0x6E3C); "cannot find text table for current loca"...|3-73
28214|code|MOVS            R0, #3|3-32
28216|code|ADD             R1, PC; "cannot find text table for current loca"...|121-68
28218|code|BL              logMessage|2-240-3-249
28222|code|B               loc_6E04|225-231
28224|data|DCD aAuto - 0x6DE8; "auto"|12-163-0-0
28228|data|DCD aCannotFindText - 0x6E3C; "cannot find text table for current loca"...|200-162-0-0
28232|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x6E5A)|99-74
28234|code|PUSH.W          {R4-R11,LR}|45-233-240-79
28238|code|SUB.W           SP, SP, #0x1020|173-245-129-93
28242|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|98-76
28244|code|SUB             SP, SP, #0x14|133-176
28246|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
28248|code|ADD             R3, SP, #0x1058+var_1028|12-171
28250|code|STR             R1, [SP,#0x1058+var_1044]|5-145
28252|code|SUB.W           R7, R3, #0x14|163-241-20-7
28256|code|STR             R3, [SP,#0x1058+var_1050]|2-147
28258|code|SUB.W           R8, R3, #0xC|163-241-12-8
28262|code|STR             R0, [SP,#0x1058+stream]|3-144
28264|code|MOV             R6, R3|30-70
28266|code|LDR             R2, [R2,R4]; __stack_chk_guard|18-89
28268|code|MOVS            R3, #0|0-35
28270|code|STR             R3, [R7,#4]|123-96
28272|code|ADD             R5, SP, #0x1058+var_1040|6-173
28274|code|STR.W           R3, [R6,#-0xC]|70-248-12-60
28278|code|MOV             R1, R2|17-70
28280|code|STR             R2, [SP,#0x1058+var_1048]|4-146
28282|code|STR.W           R3, [R6,#-0x14]|70-248-20-60
28286|code|LDR             R2, [R1]|10-104
28288|code|STR.W           R3, [R8,#4]|200-248-4-48
28292|code|ADD.W           R3, SP, #0x1058+var_38|13-245-129-83
28296|code|ADDS            R3, #0xC|12-51
28298|code|LDR.W           R9, =(dword_25038 - 0x6E98)|223-248-84-145
28302|code|LDR.W           R11, =(dword_25038 - 0x6E9C)|223-248-84-177
28306|code|STR             R2, [R3]|26-96
28308|code|ADD             R9, PC; dword_25038|249-68
28310|code|LDR             R3, =(dword_25038 - 0x6E9E)|84-75
28312|code|ADD             R11, PC; dword_25038|251-68
28314|code|ADD             R3, PC; dword_25038|123-68
28316|code|STR             R3, [SP,#0x1058+var_1054]|1-147
28318|code|LDR             R0, [SP,#0x1058+stream]; stream|3-152
28320|code|BLX             feof|255-247-154-234
28324|code|CMP             R0, #0|0-40
28326|code|BNE             loc_6F9C|121-209
28328|code|LDR             R3, [SP,#0x1058+var_1050]|2-155
28330|code|MOVS            R1, #1; size|1-33
28332|code|LDR.W           R10, [SP,#0x1058+stream]|221-248-12-160
28336|code|MOV.W           R2, #0x1000; n|79-244-128-82
28340|code|SUBS            R6, R3, #4|30-31
28342|code|MOV             R3, R10; stream|83-70
28344|code|MOV             R0, R6; ptr|48-70
28346|code|BLX             fread|255-247-150-235
28350|code|MOV             R4, R0|4-70
28352|code|MOV             R0, R10; stream|80-70
28354|code|BLX             ferror|255-247-38-236
28358|code|CMP             R0, #0|0-40
28360|code|BNE             loc_6F7E|89-209
28362|code|CBNZ            R4, loc_6EDE|68-185
28364|code|B               loc_6F9C|102-224
28366|code|MOV             R0, R5; wc|40-70
28368|code|MOV             R1, R8; ps|65-70
28370|code|BL              sub_6D54|255-247-63-255
28374|code|CMP             R0, #0|0-40
28376|code|BEQ             loc_6F44|52-208
28378|code|CMP             R4, #0|0-44
28380|code|BEQ             loc_6E9E|223-208
28382|code|MOV             R2, R4; n|34-70
28384|code|MOV             R0, R5; pwc|40-70
28386|code|MOV             R1, R6; s|49-70
28388|code|MOV             R3, R7; p|59-70
28390|code|BLX             mbrtowc|255-247-2-234
28394|code|ADDS            R2, R0, #2|130-28
28396|code|BEQ             loc_6E9E|215-208
28398|code|ADDS            R3, R0, #1|67-28
28400|code|BEQ             loc_6F7E|69-208
28402|code|LDR.W           R10, [R5]|213-248-0-160
28406|code|CMP             R0, #0|0-40
28408|code|IT EQ|8-191
28410|code|MOVEQ           R0, #1|1-32
28412|code|ADD             R6, R0|6-68
28414|code|SUBS            R4, R4, R0|36-26
28416|code|MOV             R0, R10; wc|80-70
28418|code|BLX             iswcntrl|255-247-102-237
28422|code|CMP             R0, #0|0-40
28424|code|BNE             loc_6ECE|225-209
28426|code|LDR.W           R3, [R9,#(dword_25044 - 0x25038)]|217-248-12-48
28430|code|MOV             R0, R10|80-70
28432|code|BLX             R3|152-71
28434|code|MOV             R3, R0|3-70
28436|code|CBNZ            R0, loc_6F24|48-185
28438|code|STR             R0, [SP,#0x1058+var_1058]|0-144
28440|code|LDR             R0, [R5]; wc|40-104
28442|code|BLX             iswspace|255-247-212-233
28446|code|LDR             R3, [SP,#0x1058+var_1058]|0-155
28448|code|CMP             R0, #0|0-40
28450|code|BNE             loc_6ECE|212-209
28452|code|LDR.W           R2, [R11,#(dword_25048 - 0x25038)]|219-248-16-32
28456|code|CBZ             R2, loc_6F2E|10-177
28458|code|AND.W           R3, R3, #0x3F|3-240-63-3
28462|code|MOV             R0, R3|24-70
28464|code|LDR             R3, [SP,#0x1058+var_1054]|1-155
28466|code|LDR             R3, [R3,#0x14]|91-105
28468|code|BLX             R3|152-71
28470|code|MOV             R1, R8; ps|65-70
28472|code|STR             R0, [R5]|40-96
28474|code|MOV             R0, R5; wc|40-70
28476|code|BL              sub_6D54|255-247-10-255
28480|code|CMP             R0, #0|0-40
28482|code|BNE             loc_6EDA|202-209
28484|code|LDR             R3, =(dword_25038 - 0x6F4A)|41-75
28486|code|ADD             R3, PC; dword_25038|123-68
28488|code|LDR             R4, [R3,#(dword_25050 - 0x25038)]|156-105
28490|code|BLX             __errno_location|255-247-164-236
28494|code|LDR             R0, [R0]; errnum|0-104
28496|code|BLX             strerror|255-247-36-234
28500|code|LDR             R1, =(aOutputErrorSS - 0x6F5C); "output error: %s: %s"|38-73
28502|code|MOV             R2, R4|34-70
28504|code|ADD             R1, PC; "output error: %s: %s"|121-68
28506|code|MOV             R3, R0|3-70
28508|code|MOVS            R0, #3|3-32
28510|code|BL              logMessage|2-240-113-248
28514|code|MOVS            R0, #0|0-32
28516|code|ADD.W           R3, SP, #0x1058+var_38|13-245-129-83
28520|code|ADDS            R3, #0xC|12-51
28522|code|LDR             R2, [R3]|26-104
28524|code|LDR             R3, [SP,#0x1058+var_1048]|4-155
28526|code|LDR             R3, [R3]|27-104
28528|code|CMP             R2, R3|154-66
28530|code|BNE             loc_6FD4|47-209
28532|code|ADD.W           SP, SP, #0x1020|13-245-129-93
28536|code|ADD             SP, SP, #0x14|5-176
28538|code|POP.W           {R4-R11,PC}|189-232-240-143
28542|code|BLX             __errno_location|255-247-138-236
28546|code|LDR             R3, [R0]|3-104
28548|code|MOV             R0, R3; errnum|24-70
28550|code|BLX             strerror|255-247-10-234
28554|code|LDR             R1, =(aInputErrorSS - 0x6F92); "input error: %s: %s"|26-73
28556|code|LDR             R2, [SP,#0x1058+var_1044]|5-154
28558|code|ADD             R1, PC; "input error: %s: %s"|121-68
28560|code|MOV             R3, R0|3-70
28562|code|MOVS            R0, #3|3-32
28564|code|BL              logMessage|2-240-86-248
28568|code|MOVS            R0, #0|0-32
28570|code|B               loc_6F64|227-231
28572|code|MOV             R1, R8; ps|65-70
28574|code|MOVS            R0, #0; wc|0-32
28576|code|BL              sub_6D54|255-247-216-254
28580|code|CMP             R0, #0|0-40
28582|code|BEQ             loc_6F44|205-208
28584|code|LDR             R4, =(dword_25038 - 0x6FAE)|19-76
28586|code|ADD             R4, PC; dword_25038|124-68
28588|code|LDR             R0, [R4,#(dword_25040 - 0x25038)]; stream|160-104
28590|code|BLX             fflush|255-247-148-236
28594|code|LDR             R0, [R4,#(dword_25040 - 0x25038)]; stream|160-104
28596|code|BLX             ferror|255-247-172-235
28600|code|CMP             R0, #0|0-40
28602|code|BNE             loc_6F44|195-209
28604|code|MOV             R0, R7; ps|56-70
28606|code|BLX             mbsinit|255-247-232-236
28610|code|CBNZ            R0, loc_6FD0|40-185
28612|code|BLX             __errno_location|255-247-102-236
28616|code|MOVS            R2, #0x54 ; 'T'|84-34
28618|code|MOV             R3, R2|19-70
28620|code|STR             R2, [R0]|2-96
28622|code|B               loc_6F84|217-231
28624|code|MOVS            R0, #1|1-32
28626|code|B               loc_6F64|199-231
28628|code|BLX             __stack_chk_fail|255-247-46-235
28632|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6E5A|122-222-1-0
28636|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
28640|data|DCD dword_25038 - 0x6E98|160-225-1-0
28644|data|DCD dword_25038 - 0x6E9C|156-225-1-0
28648|data|DCD dword_25038 - 0x6E9E|154-225-1-0
28652|data|DCD dword_25038 - 0x6F4A|238-224-1-0
28656|data|DCD aOutputErrorSS - 0x6F5C; "output error: %s: %s"|232-161-0-0
28660|data|DCD aInputErrorSS - 0x6F92; "input error: %s: %s"|158-161-0-0
28664|data|DCD dword_25038 - 0x6FAE|138-224-1-0
28668|code|LDR             R3, [R0]|3-104
28670|code|CBZ             R3, locret_7010|59-177
28672|code|PUSH            {R4,LR}|16-181
28674|code|MOV             R4, R0|4-70
28676|code|MOV             R0, R3|24-70
28678|code|BLX             free|255-247-158-233
28682|code|MOVS            R3, #0|0-35
28684|code|STR             R3, [R4]|35-96
28686|code|POP             {R4,PC}|16-189
28688|code|BX              LR|112-71
28690|data|ALIGN 4|0-191
28692|code|PUSH            {R3-R5,LR}|56-181
28694|code|BL              makePath|2-240-27-251
28698|code|MOV             R4, R0|4-70
28700|code|CBZ             R0, locret_702A|40-177
28702|code|BL              testProgramPath|2-240-1-252
28706|code|MOV             R5, R0|5-70
28708|code|MOV             R0, R4; ptr|32-70
28710|code|CBZ             R5, loc_702C|13-177
28712|code|POP             {R3-R5,PC}|56-189
28714|code|POP             {R3-R5,PC}|56-189
28716|code|BLX             free|255-247-138-233
28720|code|MOV             R0, R5|40-70
28722|code|POP             {R3-R5,PC}|56-189
28724|code|PUSH.W          {R4-R8,LR}|45-233-240-65
28728|code|MOVS            R0, #7|7-32
28730|code|LDR             R5, =(dword_25060 - 0x7042)|23-77
28732|code|LDR             R1, =(aStoppingProgra - 0x7044); "stopping program components"|23-73
28734|code|ADD             R5, PC; dword_25060|125-68
28736|code|ADD             R1, PC; "stopping program components"|121-68
28738|code|BL              logMessage|1-240-255-255
28742|code|LDR             R4, [R5]|44-104
28744|code|CBZ             R4, loc_7086|236-177
28746|code|LDR.W           R8, =(aUnknown - 0x7056); "unknown"|223-248-84-128
28750|code|MOV             R6, R5|46-70
28752|code|LDR             R7, =(aStoppingProgra_0 - 0x7058); "stopping program component: %s"|20-79
28754|code|ADD             R8, PC; "unknown"|248-68
28756|code|ADD             R7, PC; "stopping program component: %s"|127-68
28758|code|LDR             R2, [R4,#4]|98-104
28760|code|MOVS            R0, #7|7-32
28762|code|LDR             R3, [R4]|35-104
28764|code|MOV             R1, R7|57-70
28766|code|CMP             R2, #0|0-42
28768|code|IT EQ|8-191
28770|code|MOVEQ           R2, R8|66-70
28772|code|STR             R3, [R5]|43-96
28774|code|BL              logMessage|1-240-237-255
28778|code|LDR             R3, [R4,#8]|163-104
28780|code|LDR             R0, [R4,#0xC]|224-104
28782|code|BLX             R3|152-71
28784|code|LDR             R3, [R4,#4]|99-104
28786|code|MOV             R0, R3; ptr|24-70
28788|code|CBZ             R3, loc_707A|11-177
28790|code|BLX             free|255-247-102-233
28794|code|MOV             R0, R4; ptr|32-70
28796|code|BLX             free|255-247-98-233
28800|code|LDR             R4, [R6]|52-104
28802|code|CMP             R4, #0|0-44
28804|code|BNE             loc_7056|231-209
28806|code|LDR             R1, =(aStoppedProgram - 0x708E); "stopped program components"|8-73
28808|code|MOVS            R0, #7|7-32
28810|code|ADD             R1, PC; "stopped program components"|121-68
28812|code|BL              logMessage|1-240-218-255
28816|code|POP.W           {R4-R8,LR}|189-232-240-65
28820|code|B.W             popLogPrefix|1-240-26-190
28824|data|DCD dword_25060 - 0x7042|30-224-1-0
28828|data|DCD aStoppingProgra - 0x7044; "stopping program components"|244-162-0-0
28832|data|DCD aUnknown - 0x7056; "unknown"|218-162-0-0
28836|data|DCD aStoppingProgra_0 - 0x7058; "stopping program component: %s"|24-163-0-0
28840|data|DCD aStoppedProgram - 0x708E; "stopped program components"|198-162-0-0
28844|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x70B6)|114-74
28846|code|PUSH.W          {R4-R9,LR}|45-233-240-67
28850|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
28852|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|113-76
28854|code|SUB             SP, SP, #0x3C|143-176
28856|code|MOV             R5, R0|5-70
28858|code|MOV             R6, R1|14-70
28860|code|LDR             R4, [R2,R4]; __stack_chk_guard|20-89
28862|code|LDR             R3, [R4]|35-104
28864|code|STR             R3, [SP,#0x58+var_24]|13-147
28866|code|CBZ             R1, loc_70DC|89-177
28868|code|CBZ             R5, loc_7110|37-179
28870|code|LDRB            R2, [R5]|42-120
28872|code|CBNZ            R2, loc_70E4|98-185
28874|code|LDR             R1, [SP,#0x58+var_24]|13-153
28876|code|MOV             R0, R2|16-70
28878|code|LDR             R3, [R4]|35-104
28880|code|CMP             R1, R3|153-66
28882|code|BNE.W           loc_7274|64-240-207-128
28886|code|ADD             SP, SP, #0x3C ; '<'|15-176
28888|code|POP.W           {R4-R9,PC}|189-232-240-131
28892|code|BL              getProcessIdentifier|0-240-68-251
28896|code|MOV             R6, R0|6-70
28898|code|B               loc_70C4|239-231
28900|code|MOVS            R1, #0x42 ; 'B'; oflag|66-33
28902|code|MOV             R0, R5; file|40-70
28904|code|MOV.W           R2, #0x1A4|79-244-210-114
28908|code|BLX             open|255-247-112-234
28912|code|ADDS            R1, R0, #1|65-28
28914|code|MOV             R7, R0|7-70
28916|code|BEQ             loc_71A0|84-208
28918|code|MOVS            R1, #1|1-33
28920|code|BL              acquireFileLock|2-240-234-253
28924|code|MOV             R8, R0|128-70
28926|code|CBNZ            R0, loc_7114|72-185
28928|code|BLX             __errno_location|255-247-200-235
28932|code|LDR             R3, [R0]|3-104
28934|code|CMP             R3, #0x26 ; '&'|38-43
28936|code|BEQ             loc_7114|4-208
28938|code|MOV             R0, R7; fd|56-70
28940|code|BLX             close|255-247-236-233
28944|code|MOVS            R2, #0|0-34
28946|code|B               loc_70CA|218-231
28948|code|ADD.W           R9, SP, #0x58+buf|13-241-20-9
28952|code|MOVS            R2, #0x20 ; ' '; nbytes|32-34
28954|code|MOV             R0, R7; fd|56-70
28956|code|MOV             R1, R9; buf|73-70
28958|code|BLX             read|255-247-248-233
28962|code|ADDS            R2, R0, #1|66-28
28964|code|MOV             R3, R0|3-70
28966|code|BEQ.W           loc_724E|0-240-146-128
28970|code|CMP             R0, #0x20 ; ' '|32-40
28972|code|ADD             R2, SP, #0x58+var_20|14-170
28974|code|LDR             R1, =(aDC - 0x713C); "%d%c"|84-73
28976|code|MOV             R0, R9; s|72-70
28978|code|IT EQ|8-191
28980|code|MOVEQ           R3, #0x1F|31-35
28982|code|ADDS            R5, R2, R3|213-24
28984|code|ADD             R1, PC; "%d%c"|121-68
28986|code|ADD             R2, SP, #0x58+var_48|4-170
28988|code|ADD.W           R3, SP, #0x58+var_49|13-241-15-3
28992|code|MOV.W           LR, #0|79-240-0-14
28996|code|STRB.W          LR, [R5,#-0x24]|5-248-36-236
29000|code|BLX             sscanf|255-247-184-235
29004|code|CMP             R0, #1|1-40
29006|code|BEQ             loc_7212|96-208
29008|code|CMP             R0, #2|2-40
29010|code|BEQ             loc_7206|88-208
29012|code|MOVS            R1, #0; offset|0-33
29014|code|MOV             R0, R7; fd|56-70
29016|code|MOV             R2, R1; whence|10-70
29018|code|BLX             lseek|255-247-176-234
29022|code|ADDS            R0, #1|1-48
29024|code|BEQ             loc_7258|122-208
29026|code|MOV             R0, R7; fd|56-70
29028|code|MOVS            R1, #0; length|0-33
29030|code|BLX             ftruncate|255-247-168-232
29034|code|ADDS            R0, #1|1-48
29036|code|BEQ             loc_71CA|45-208
29038|code|LDR             R5, =(aD_0 - 0x717A); "%d\n"|69-77
29040|code|MOVS            R1, #0x20 ; ' '|32-33
29042|code|MOV             R3, R1|11-70
29044|code|MOVS            R2, #1|1-34
29046|code|ADD             R5, PC; "%d\n"|125-68
29048|code|STR             R6, [SP,#0x58+var_54]|1-150
29050|code|MOV             R0, R9|72-70
29052|code|STR             R5, [SP,#0x58+var_58]|0-149
29054|code|BLX             __snprintf_chk|255-247-18-235
29058|code|MOV             R1, R9; buf|73-70
29060|code|MOV             R2, R0; n|2-70
29062|code|MOV             R0, R7; fd|56-70
29064|code|BLX             write|255-247-52-235
29068|code|ADDS            R0, #1|1-48
29070|code|BEQ             loc_726A|108-208
29072|code|CMP.W           R8, #0|184-241-0-15
29076|code|BNE             loc_7262|101-209
29078|code|MOV             R0, R7; fd|56-70
29080|code|BLX             close|255-247-166-233
29084|code|MOVS            R2, #1|1-34
29086|code|B               loc_70CA|148-231
29088|code|LDR             R1, =(aCannotOpenProc - 0x71AA); "cannot open process identifier file"|57-73
29090|code|MOVS            R2, #5; category|5-34
29092|code|MOVS            R0, #0; domainname|0-32
29094|code|ADD             R1, PC; "cannot open process identifier file"|121-68
29096|code|BLX             dcgettext|255-247-98-234
29100|code|MOV             R6, R0|6-70
29102|code|BLX             __errno_location|255-247-114-235
29106|code|LDR             R0, [R0]; errnum|0-104
29108|code|BLX             strerror|255-247-242-232
29112|code|LDR             R1, =(aSSS - 0x71C2); "%s: %s: %s"|52-73
29114|code|MOV             R2, R6|50-70
29116|code|MOV             R3, R5|43-70
29118|code|ADD             R1, PC; "%s: %s: %s"|121-68
29120|code|STR             R0, [SP,#0x58+var_58]|0-144
29122|code|MOVS            R0, #4|4-32
29124|code|BL              logMessage|1-240-62-255
29128|code|B               loc_7110|162-231
29130|code|LDR             R0, =(aFtruncate_0 - 0x71D0); "ftruncate"|49-72
29132|code|ADD             R0, PC; "ftruncate"|120-68
29134|code|BL              logSystemError|1-240-187-255
29138|code|CMP.W           R8, #0|184-241-0-15
29142|code|BEQ             loc_710A|152-208
29144|code|MOVS            R5, #3|3-37
29146|code|MOV             R0, R7|56-70
29148|code|BL              releaseFileLock|2-240-136-253
29152|code|MOV             R0, R7; fd|56-70
29154|code|BLX             close|255-247-130-233
29158|code|CMP             R5, #2|2-45
29160|code|BEQ             loc_7238|38-208
29162|code|CMP             R5, #3|3-45
29164|code|BEQ             loc_7110|144-208
29166|code|MOVS            R2, #1|1-34
29168|code|CMP             R5, #0|0-45
29170|code|BEQ.W           loc_70CA|63-244-106-175
29174|code|LDR             R1, =(aUnexpectedPidF - 0x7200); "unexpected PID file state: %u"|39-73
29176|code|MOV             R2, R5|42-70
29178|code|MOVS            R0, #4|4-32
29180|code|ADD             R1, PC; "unexpected PID file state: %u"|121-68
29182|code|BL              logMessage|1-240-33-255
29186|code|MOVS            R2, #0|0-34
29188|code|B               loc_70CA|97-231
29190|code|LDRB.W          R3, [SP,#0x58+var_49]|157-248-15-48
29194|code|CMP             R3, #0xA|10-43
29196|code|IT NE|24-191
29198|code|CMPNE           R3, #0xD|13-43
29200|code|BNE             loc_7154|160-209
29202|code|LDR             R0, [SP,#0x58+var_48]|4-152
29204|code|CMP             R0, R6|176-66
29206|code|BEQ             loc_7244|21-208
29208|code|BL              testProcessIdentifier|0-240-168-250
29212|code|CMP             R0, #0|0-40
29214|code|BEQ             loc_7154|153-208
29216|code|LDR             R1, =(aInstanceAlread - 0x722A); "instance already running: PID=%d"|29-73
29218|code|MOVS            R0, #3|3-32
29220|code|LDR             R2, [SP,#0x58+var_48]|4-154
29222|code|ADD             R1, PC; "instance already running: PID=%d"|121-68
29224|code|BL              logMessage|1-240-12-255
29228|code|CMP.W           R8, #0|184-241-0-15
29232|code|BNE             loc_7266|25-209
29234|code|MOV             R0, R7; fd|56-70
29236|code|BLX             close|255-247-88-233
29240|code|BLX             __errno_location|255-247-44-235
29244|code|MOVS            R3, #0x11|17-35
29246|code|MOVS            R2, #0|0-34
29248|code|STR             R3, [R0]|3-96
29250|code|B               loc_70CA|66-231
29252|code|MOVS            R5, #0|0-37
29254|code|CMP.W           R8, #0|184-241-0-15
29258|code|BEQ             loc_7196|164-208
29260|code|B               loc_71DA|197-231
29262|code|LDR             R0, =(aRead - 0x7254); "read"|19-72
29264|code|ADD             R0, PC; "read"|120-68
29266|code|BL              logSystemError|1-240-121-255
29270|code|B               loc_71D2|188-231
29272|code|LDR             R0, =(aLseek_0 - 0x725E); "lseek"|17-72
29274|code|ADD             R0, PC; "lseek"|120-68
29276|code|BL              logSystemError|1-240-116-255
29280|code|B               loc_71D2|183-231
29282|code|MOVS            R5, #0|0-37
29284|code|B               loc_71DA|185-231
29286|code|MOVS            R5, #2|2-37
29288|code|B               loc_71DA|183-231
29290|code|LDR             R0, =(aWrite - 0x7270); "write"|14-72
29292|code|ADD             R0, PC; "write"|120-68
29294|code|BL              logSystemError|1-240-107-255
29298|code|B               loc_71D2|174-231
29300|code|BLX             __stack_chk_fail|255-247-222-233
29304|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x70B6|30-220-1-0
29308|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
29312|data|DCD aDC - 0x713C; "%d%c"|84-162-0-0
29316|data|DCD aD_0 - 0x717A; "%d\n"|74-162-0-0
29320|data|DCD aCannotOpenProc - 0x71AA; "cannot open process identifier file"|50-162-0-0
29324|data|DCD aSSS - 0x71C2; "%s: %s: %s"|62-162-0-0
29328|data|DCD aFtruncate_0 - 0x71D0; "ftruncate"|248-161-0-0
29332|data|DCD aUnexpectedPidF - 0x7200; "unexpected PID file state: %u"|12-162-0-0
29336|data|DCD aInstanceAlread - 0x722A; "instance already running: PID=%d"|110-161-0-0
29340|data|DCD aRead - 0x7254; "read"|104-161-0-0
29344|data|DCD aLseek_0 - 0x725E; "lseek"|118-161-0-0
29348|data|DCD aWrite - 0x7270; "write"|140-170-0-0
29352|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x72B2)|40-74
29354|code|PUSH.W          {R4-R8,LR}|45-233-240-65
29358|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
29360|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|39-76
29362|code|SUB             SP, SP, #0x110|196-176
29364|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x72BE); "r"|39-73
29366|code|MOV             R7, R0|7-70
29368|code|LDR             R5, [R2,R4]; __stack_chk_guard|21-89
29370|code|ADD             R1, PC; "r" ; modes|121-68
29372|code|LDR             R3, [R5]|43-104
29374|code|STR             R3, [SP,#0x128+var_1C]|67-147
29376|code|BLX             fopen|255-247-30-233
29380|code|MOV             R6, R0|6-70
29382|code|CBZ             R0, loc_731E|80-179
29384|code|ADD             R0, SP, #0x128+s; s|3-168
29386|code|MOV.W           R1, #0x100; n|79-244-128-113
29390|code|MOV             R2, R6; stream|50-70
29392|code|BLX             fgets|255-247-42-234
29396|code|MOV             R4, R0|4-70
29398|code|CBZ             R0, loc_7308|184-177
29400|code|ADD             R4, SP, #0x128+endptr|2-172
29402|code|MOVS            R2, #0xA; base|10-34
29404|code|MOV             R1, R4; endptr|33-70
29406|code|BLX             strtol|255-247-42-232
29410|code|LDR             R3, [R4]|35-104
29412|code|LDRB            R4, [R3]|28-120
29414|code|MOV             R7, R0|7-70
29416|code|CBZ             R4, loc_72FC|68-177
29418|code|BLX             __ctype_b_loc|255-247-244-233
29422|code|LDR             R3, [R0]|3-104
29424|code|LDRH.W          R4, [R3,R4,LSL#1]|51-248-20-64
29428|code|AND.W           R4, R4, #0x2000|4-244-0-84
29432|code|UXTH            R4, R4|164-178
29434|code|CBZ             R4, loc_7308|44-177
29436|code|MOV             R0, R7|56-70
29438|code|BL              cancelProcess|0-240-61-250
29442|code|MOVS            R4, R0|4-28
29444|code|IT NE|24-191
29446|code|MOVNE           R4, #1|1-36
29448|code|MOV             R0, R6; stream|48-70
29450|code|BLX             fclose|255-247-108-234
29454|code|LDR             R2, [SP,#0x128+var_1C]|67-154
29456|code|MOV             R0, R4|32-70
29458|code|LDR             R3, [R5]|43-104
29460|code|CMP             R2, R3|154-66
29462|code|BNE             loc_7348|23-209
29464|code|ADD             SP, SP, #0x110|68-176
29466|code|POP.W           {R4-R8,PC}|189-232-240-129
29470|code|LDR             R1, =(aPidFileOpenErr - 0x7328); "pid file open error"|14-73
29472|code|MOVS            R2, #5; category|5-34
29474|code|MOV             R4, R6|52-70
29476|code|ADD             R1, PC; "pid file open error"|121-68
29478|code|BLX             dcgettext|255-247-164-233
29482|code|MOV             R8, R0|128-70
29484|code|BLX             __errno_location|255-247-178-234
29488|code|LDR             R0, [R0]; errnum|0-104
29490|code|BLX             strerror|255-247-52-232
29494|code|LDR             R1, =(aSSS - 0x7340); "%s: %s: %s"|9-73
29496|code|MOV             R2, R8|66-70
29498|code|MOV             R3, R7|59-70
29500|code|ADD             R1, PC; "%s: %s: %s"|121-68
29502|code|STR             R0, [SP,#0x128+var_128]|0-144
29504|code|MOVS            R0, #3|3-32
29506|code|BL              logMessage|1-240-127-254
29510|code|B               loc_730E|226-231
29512|code|BLX             __stack_chk_fail|255-247-116-233
29516|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x72B2|34-218-1-0
29520|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
29524|data|DCD aInvalidUnicode+0x18 - 0x72BE; "r"|174-190-0-0
29528|data|DCD aPidFileOpenErr - 0x7328; "pid file open error"|4-161-0-0
29532|data|DCD aSSS - 0x7340; "%s: %s: %s"|192-160-0-0
29536|code|PUSH            {R3-R7,LR}|248-181
29538|code|MOV             R5, R0|5-70
29540|code|MOVS            R0, #0x10; size|16-32
29542|code|MOV             R7, R1|15-70
29544|code|MOV             R6, R2|22-70
29546|code|BLX             malloc|255-247-14-234
29550|code|MOV             R4, R0|4-70
29552|code|CBZ             R0, loc_7398|144-177
29554|code|MOV             R0, R5|40-70
29556|code|BLX             __strdup|255-247-172-232
29560|code|LDR             R3, =(dword_25060 - 0x7382)|9-75
29562|code|MOV             R2, R5|42-70
29564|code|LDR             R1, =(aProgramExitEve - 0x7388); "program exit event added: %s"|9-73
29566|code|ADD             R3, PC; dword_25060|123-68
29568|code|STR             R7, [R4,#8]|167-96
29570|code|STR             R6, [R4,#0xC]|230-96
29572|code|ADD             R1, PC; "program exit event added: %s"|121-68
29574|code|LDR             R5, [R3]|29-104
29576|code|STR             R4, [R3]|28-96
29578|code|STR             R5, [R4]|37-96
29580|code|STR             R0, [R4,#4]|96-96
29582|code|MOVS            R0, #7|7-32
29584|code|POP.W           {R3-R7,LR}|189-232-248-64
29588|code|B.W             logMessage|1-240-86-190
29592|code|POP.W           {R3-R7,LR}|189-232-248-64
29596|code|B.W             logMallocError|1-240-222-190
29600|data|DCD dword_25060 - 0x7382|222-220-1-0
29604|data|DCD aProgramExitEve - 0x7388; "program exit event added: %s"|184-160-0-0
29608|code|MOV             R2, R1|10-70
29610|code|LDR             R1, =(loc_6FFC+1 - 0x73B0)|2-73
29612|code|ADD             R1, PC; loc_6FFC|121-68
29614|code|B.W             onProgramExit|255-247-215-191
29618|data|ALIGN 4|0-191
29620|data|DCD loc_6FFC+1 - 0x73B0|77-252-255-255
29624|code|PUSH.W          {R4-R11,LR}|45-233-240-79
29628|code|SUB.W           SP, SP, #0x1000|173-245-128-93
29632|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x73CC)|95-77
29634|code|SUB             SP, SP, #0x14|133-176
29636|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|95-74
29638|code|MOV             R7, R1|15-70
29640|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
29642|code|LDR             R3, =(endProgram_ptr - 0x24CD4)|95-75
29644|code|ADD.W           R1, SP, #0x1038+var_38|13-245-128-81
29648|code|LDR             R4, =(aBrltty - 0x73DA); "brltty"|94-76
29650|code|LDR             R6, [R5,R2]; __stack_chk_guard|174-88
29652|code|ADDS            R1, #0xC|12-49
29654|code|ADD             R4, PC; "brltty"|124-68
29656|code|LDR             R2, [R6]|50-104
29658|code|STR             R2, [R1]|10-96
29660|code|LDR             R0, [R5,R3]; endProgram|232-88
29662|code|BL              sub_110C8|9-240-115-254
29666|code|BL              initializeSystemObject|6-240-217-251
29670|code|LDR             R1, =(aS_0+4 - 0x73EE); ""|90-73
29672|code|MOVS            R0, #6; category|6-32
29674|code|ADD             R1, PC; "" ; locale|121-68
29676|code|BLX             setlocale|255-247-138-233
29680|code|LDR             R1, =(aUsrShareLocale - 0x73F8); "/usr/share/locale"|88-73
29682|code|MOV             R0, R4; domainname|32-70
29684|code|ADD             R1, PC; "/usr/share/locale"|121-68
29686|code|BLX             bindtextdomain|255-247-116-233
29690|code|MOV             R0, R4; domainname|32-70
29692|code|BLX             textdomain|255-247-12-232
29696|code|BL              getProgramPath|0-240-94-249
29700|code|LDR             R3, =(programPath_ptr - 0x24CD4)|84-75
29702|code|LDR             R4, [R5,R3]; programPath|236-88
29704|code|STR             R0, [R4]|32-96
29706|code|CMP             R0, #0|0-40
29708|code|BEQ             loc_7484|58-208
29710|code|LDR             R0, =(aProgramPath - 0x7416); "program-path"|83-72
29712|code|MOV             R1, R4|33-70
29714|code|ADD             R0, PC; "program-path"|120-68
29716|code|BL              registerProgramMemory|255-247-200-255
29720|code|LDR             R0, [R4]|32-104
29722|code|BL              isExplicitPath|2-240-211-248
29726|code|MOV             R11, R0|131-70
29728|code|CMP             R0, #0|0-40
29730|code|BEQ             loc_7494|55-208
29732|code|LDR             R0, [R4]|32-104
29734|code|BL              isExplicitPath|2-240-205-248
29738|code|CBNZ            R0, loc_7454|152-185
29740|code|LDR             R0, [R4]|32-104
29742|code|BL              locatePathName|2-240-173-248
29746|code|LDR             R3, =(programName_ptr - 0x24CD4)|75-75
29748|code|LDR             R3, [R5,R3]; programName|235-88
29750|code|STR             R0, [R3]|24-96
29752|code|BL              pushLogPrefix|1-240-34-252
29756|code|ADD.W           R3, SP, #0x1038+var_38|13-245-128-83
29760|code|ADDS            R3, #0xC|12-51
29762|code|LDR             R2, [R3]|26-104
29764|code|LDR             R3, [R6]|51-104
29766|code|CMP             R2, R3|154-66
29768|code|BNE             loc_753C|120-209
29770|code|ADD.W           SP, SP, #0x1000|13-245-128-93
29774|code|ADD             SP, SP, #0x14|5-176
29776|code|POP.W           {R4-R11,PC}|189-232-240-143
29780|code|LDR             R0, [R4]|32-104
29782|code|BL              isAbsolutePath|2-240-65-248
29786|code|CMP             R0, #0|0-40
29788|code|BEQ             loc_7512|89-208
29790|code|LDR             R0, [R4]|32-104
29792|code|BL              isAbsolutePath|2-240-60-248
29796|code|CMP             R0, #0|0-40
29798|code|BNE             loc_742C|225-209
29800|code|BL              getWorkingDirectory|2-240-162-250
29804|code|MOV             R7, R0|7-70
29806|code|CMP             R0, #0|0-40
29808|code|BEQ             loc_742C|220-208
29810|code|LDR             R1, [R4]|33-104
29812|code|BL              makePath|2-240-236-248
29816|code|CBZ             R0, loc_747C|0-177
29818|code|STR             R0, [R4]|32-96
29820|code|MOV             R0, R7; ptr|56-70
29822|code|BLX             free|254-247-98-239
29826|code|B               loc_742C|211-231
29828|code|LDR             R3, [R7]|59-104
29830|code|MOV             R0, R3|24-70
29832|code|STR             R3, [R4]|35-96
29834|code|BL              isExplicitPath|2-240-155-248
29838|code|MOV             R11, R0|131-70
29840|code|CMP             R0, #0|0-40
29842|code|BNE             loc_7424|199-209
29844|code|LDR             R0, =(aPath - 0x749E); "PATH"|51-72
29846|code|LDR.W           R8, [R4]|212-248-0-128
29850|code|ADD             R0, PC; "PATH"|120-68
29852|code|BLX             getenv|255-247-84-234
29856|code|CBZ             R0, loc_7500|112-179
29858|code|ADD             R7, SP, #0x1038+var_1030|2-175
29860|code|MOVS            R1, #0x3A ; ':'; c|58-33
29862|code|ADD.W           R9, SP, #0x1038+var_1028|13-241-16-9
29866|code|MOV             R2, R7|58-70
29868|code|BL              splitString|3-240-94-248
29872|code|STR             R0, [SP,#0x1038+ptr]|0-144
29874|code|CBZ             R0, loc_7500|40-179
29876|code|LDR.W           R3, [R9,#-8]|89-248-8-60
29880|code|CMP             R3, #0|0-43
29882|code|BLE             loc_74FA|30-221
29884|code|LDR.W           R9, =(aPathToInputTex+0x18 - 0x74C6); "."|223-248-168-144
29888|code|LDR             R3, [SP,#0x1038+ptr]|0-155
29890|code|ADD             R9, PC; "."|249-68
29892|code|SUB.W           R10, R3, #4|163-241-4-10
29896|code|B               loc_74D4|4-224
29898|code|LDR             R3, [R7]|59-104
29900|code|ADD.W           R11, R11, #1|11-241-1-11
29904|code|CMP             R11, R3|155-69
29906|code|BGE             loc_74FA|18-218
29908|code|LDR.W           R0, [R10,#4]!|90-248-4-15
29912|code|MOV             R1, R8|65-70
29914|code|LDRB            R3, [R0]|3-120
29916|code|CMP             R3, #0|0-43
29918|code|IT EQ|8-191
29920|code|MOVEQ           R0, R9|72-70
29922|code|BL              sub_7014|255-247-151-253
29926|code|CMP             R0, #0|0-40
29928|code|BEQ             loc_74CA|239-208
29930|code|STR             R0, [SP,#0x1038+var_1034]|1-144
29932|code|LDR             R0, [SP,#0x1038+ptr]; ptr|0-152
29934|code|BL              deallocateStrings|3-240-45-248
29938|code|LDR             R3, [SP,#0x1038+var_1034]|1-155
29940|code|MOV             R0, R3|24-70
29942|code|STR             R3, [R4]|35-96
29944|code|B               loc_7426|149-231
29946|code|LDR             R0, [SP,#0x1038+ptr]; ptr|0-152
29948|code|BL              deallocateStrings|3-240-38-248
29952|code|LDR             R0, =(aPathToInputTex+0x18 - 0x7508); "."|26-72
29954|code|LDR             R1, [R4]|33-104
29956|code|ADD             R0, PC; "."|120-68
29958|code|BL              sub_7014|255-247-133-253
29962|code|MOV             R3, R0|3-70
29964|code|CMP             R0, #0|0-40
29966|code|BEQ             loc_7424|137-208
29968|code|B               loc_74F4|240-231
29970|code|LDR             R0, [R4]|32-104
29972|code|ADD             R1, SP, #0x1038+var_102C|3-169
29974|code|MOV.W           R2, #0x1000|79-244-128-82
29978|code|BLX             __realpath_chk|255-247-146-233
29982|code|CBZ             R0, loc_752A|32-177
29984|code|BLX             __strdup|254-247-214-239
29988|code|CBZ             R0, loc_7534|48-177
29990|code|STR             R0, [R4]|32-96
29992|code|B               loc_7460|154-231
29994|code|LDR             R0, =(aRealpath - 0x7530); "realpath"|17-72
29996|code|ADD             R0, PC; "realpath"|120-68
29998|code|BL              logSystemError|1-240-11-254
30002|code|B               loc_745E|148-231
30004|code|BL              logMallocError|1-240-18-254
30008|code|LDR             R0, [R4]|32-104
30010|code|B               loc_7460|145-231
30012|code|BLX             __stack_chk_fail|255-247-122-232
30016|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x73CC|8-217-1-0
30020|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
30024|data|DCD endProgram_ptr - 0x24CD4|220-2-0-0
30028|data|DCD aBrltty - 0x73DA; "brltty"|134-160-0-0
30032|data|DCD aS_0+4 - 0x73EE; ""|214-163-0-0
30036|data|DCD aUsrShareLocale - 0x73F8; "/usr/share/locale"|112-160-0-0
30040|data|DCD programPath_ptr - 0x24CD4|252-2-0-0
30044|data|DCD aProgramPath - 0x7416; "program-path"|102-160-0-0
30048|data|DCD programName_ptr - 0x24CD4|228-2-0-0
30052|data|DCD aPath - 0x749E; "PATH"|238-159-0-0
30056|data|DCD aPathToInputTex+0x18 - 0x74C6; "."|66-157-0-0
30060|data|DCD aPathToInputTex+0x18 - 0x7508; "."|0-157-0-0
30064|data|DCD aRealpath - 0x7530; "realpath"|100-159-0-0
30068|code|PUSH.W          {R3-R11,LR}|45-233-248-79
30072|code|MOV             R4, R0|4-70
30074|code|LDR             R5, =(dword_25060 - 0x7582)|56-77
30076|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7584)|56-75
30078|code|ADD             R5, PC; dword_25060|125-68
30080|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
30082|code|LDR             R2, [R5,#(dword_25064 - 0x25060)]|106-104
30084|code|CMP             R2, #0|0-42
30086|code|BEQ             loc_7618|71-208
30088|code|LDR             R3, [R4]|35-104
30090|code|CMP             R3, #0|0-43
30092|code|BEQ             locret_75FA|53-208
30094|code|LDR             R5, =(dword_25060 - 0x759A)|53-77
30096|code|LDR             R6, =(aSS - 0x759E); "%s: %s"|53-78
30098|code|LDR.W           R8, =(aCannotFixInsta - 0x75A4); "cannot fix install path"|223-248-216-128
30102|code|ADD             R5, PC; dword_25060|125-68
30104|code|LDR             R7, =(aCannotFixInsta - 0x75A6); "cannot fix install path"|53-79
30106|code|ADD             R6, PC; "%s: %s"|126-68
30108|code|LDR.W           R9, =(aInstallPathNot - 0x75A8); "install path not absolute"|223-248-212-144
30112|code|ADD             R8, PC; "cannot fix install path"|248-68
30114|code|ADD             R7, PC; "cannot fix install path"|127-68
30116|code|ADD             R9, PC; "install path not absolute"|249-68
30118|code|B               loc_75AE|2-224
30120|code|LDR.W           R3, [R4,#4]!|84-248-4-63
30124|code|CBZ             R3, locret_75F6|27-179
30126|code|LDR             R1, [R3]|25-104
30128|code|CMP             R1, #0|0-41
30130|code|BEQ             loc_75A8|249-208
30132|code|LDRB            R3, [R1]|11-120
30134|code|CMP             R3, #0|0-43
30136|code|BEQ             loc_75A8|246-208
30138|code|LDR             R0, [R5,#(dword_25064 - 0x25060)]|104-104
30140|code|BL              makePath|2-240-72-248
30144|code|MOV             R10, R0|130-70
30146|code|CBZ             R0, loc_75FE|224-177
30148|code|LDR             R0, [R4]|32-104
30150|code|MOV             R1, R10|81-70
30152|code|BL              changeStringSetting|2-240-76-255
30156|code|MOV             R11, R7|187-70
30158|code|CBNZ            R0, loc_7602|192-185
30160|code|MOV             R0, R10; ptr|80-70
30162|code|BLX             free|254-247-184-238
30166|code|MOV             R1, R11; msgid|89-70
30168|code|MOVS            R2, #5; category|5-34
30170|code|MOVS            R0, #0; domainname|0-32
30172|code|BLX             dcgettext|255-247-72-232
30176|code|LDR             R3, [R4]|35-104
30178|code|MOV             R1, R6|49-70
30180|code|LDR             R3, [R3]|27-104
30182|code|MOV             R2, R0|2-70
30184|code|MOVS            R0, #4|4-32
30186|code|BL              logMessage|1-240-43-253
30190|code|LDR.W           R3, [R4,#4]!|84-248-4-63
30194|code|CMP             R3, #0|0-43
30196|code|BNE             loc_75AE|219-209
30198|code|POP.W           {R3-R11,PC}|189-232-248-143
30202|code|POP.W           {R3-R11,PC}|189-232-248-143
30206|code|MOV             R11, R8|195-70
30208|code|B               loc_75D6|233-231
30210|code|LDR             R3, [R4]|35-104
30212|code|MOV             R11, R9|203-70
30214|code|LDR             R0, [R3]|24-104
30216|code|BL              isAbsolutePath|1-240-104-255
30220|code|CMP             R0, #0|0-40
30222|code|BEQ             loc_75D0|223-208
30224|code|MOV             R0, R10; ptr|80-70
30226|code|BLX             free|254-247-152-238
30230|code|B               loc_75A8|199-231
30232|code|LDR             R2, =(programPath_ptr - 0x24CD4)|23-74
30234|code|LDR             R3, [R3,R2]; programPath|155-88
30236|code|LDR             R0, [R3]|24-104
30238|code|BL              getPathDirectory|1-240-101-255
30242|code|STR             R0, [R5,#(dword_25064 - 0x25060)]|104-96
30244|code|CBZ             R0, loc_763E|88-177
30246|code|LDR             R0, =(aProgramDirecto - 0x762E); "program-directory"|21-72
30248|code|ADDS            R1, R5, #4|41-29
30250|code|ADD             R0, PC; "program-directory"|120-68
30252|code|BL              registerProgramMemory|255-247-188-254
30256|code|LDR             R2, [R5,#(dword_25064 - 0x25060)]|106-104
30258|code|LDR             R1, =(aProgramDirecto_0 - 0x763A); "program directory: %s"|19-73
30260|code|MOVS            R0, #7|7-32
30262|code|ADD             R1, PC; "program directory: %s"|121-68
30264|code|BL              logMessage|1-240-4-253
30268|code|B               loc_7588|164-231
30270|code|LDR             R1, =(aCannotDetermin - 0x7646); "cannot determine program directory"|17-73
30272|code|MOVS            R2, #5; category|5-34
30274|code|ADD             R1, PC; "cannot determine program directory"|121-68
30276|code|BLX             dcgettext|255-247-20-232
30280|code|MOV             R1, R0|1-70
30282|code|MOVS            R0, #4|4-32
30284|code|BL              logMessage|1-240-250-252
30288|code|LDR             R3, =(aPathToInputTex+0x18 - 0x7656); "."|13-75
30290|code|ADD             R3, PC; "."|123-68
30292|code|STR             R3, [R5,#(dword_25064 - 0x25060)]|107-96
30294|code|MOV             R2, R3|26-70
30296|code|B               loc_7632|235-231
30298|data|ALIGN 4|0-191
30300|data|DCD dword_25060 - 0x7582|222-218-1-0
30304|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7584|80-215-1-0
30308|data|DCD dword_25060 - 0x759A|198-218-1-0
30312|data|DCD aSS - 0x759E; "%s: %s"|42-172-0-0
30316|data|DCD aCannotFixInsta - 0x75A4; "cannot fix install path"|252-158-0-0
30320|data|DCD aCannotFixInsta - 0x75A6; "cannot fix install path"|250-158-0-0
30324|data|DCD aInstallPathNot - 0x75A8; "install path not absolute"|16-159-0-0
30328|data|DCD programPath_ptr - 0x24CD4|252-2-0-0
30332|data|DCD aProgramDirecto - 0x762E; "program-directory"|166-158-0-0
30336|data|DCD aProgramDirecto_0 - 0x763A; "program directory: %s"|210-158-0-0
30340|data|DCD aCannotDetermin - 0x7646; "cannot determine program directory"|162-158-0-0
30344|data|DCD aPathToInputTex+0x18 - 0x7656; "."|178-155-0-0
30348|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7696)|10-75
30350|code|MOVS            R1, #0|0-33
30352|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|10-74
30354|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
30356|code|PUSH            {R4,LR}|16-181
30358|code|SUB             SP, SP, #0x10|132-176
30360|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
30362|code|STR             R0, [SP,#0x18+var_14]|1-144
30364|code|ADD             R0, SP, #0x18+var_14|1-168
30366|code|STR             R1, [SP,#0x18+var_10]|2-145
30368|code|LDR             R3, [R4]|35-104
30370|code|STR             R3, [SP,#0x18+var_C]|3-147
30372|code|BL              fixInstallPaths|255-247-102-255
30376|code|LDR             R2, [SP,#0x18+var_C]|3-154
30378|code|LDR             R3, [R4]|35-104
30380|code|CMP             R2, R3|154-66
30382|code|BNE             loc_76B4|1-209
30384|code|ADD             SP, SP, #0x10|4-176
30386|code|POP             {R4,PC}|16-189
30388|code|BLX             __stack_chk_fail|254-247-190-239
30392|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7696|62-214-1-0
30396|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
30400|code|PUSH            {R3-R7,LR}|248-181
30402|code|MOVS            R6, #0|0-38
30404|code|LDR             R7, =(aProcSelfExe - 0x76CC); "/proc/self/exe"|28-79
30406|code|MOVS            R4, #0x80|128-36
30408|code|ADD             R7, PC; "/proc/self/exe"|127-68
30410|code|B               loc_76DE|8-224
30412|code|MOV             R0, R7; path|56-70
30414|code|MOV             R6, R5|46-70
30416|code|BLX             readlink|254-247-168-238
30420|code|ADDS            R2, R0, #1|66-28
30422|code|MOV             R3, R0|3-70
30424|code|BEQ             loc_76FC|16-208
30426|code|CMP             R4, R0|132-66
30428|code|BHI             loc_7720|32-216
30430|code|LSLS            R4, R4, #1|100-0
30432|code|MOV             R0, R6; ptr|48-70
30434|code|MOV             R1, R4; size|33-70
30436|code|BLX             realloc|254-247-98-239
30440|code|MOV             R2, R4; len|34-70
30442|code|MOV             R5, R0|5-70
30444|code|MOV             R1, R0; buf|1-70
30446|code|CMP             R0, #0|0-40
30448|code|BNE             loc_76CC|236-209
30450|code|BL              logMallocError|1-240-51-253
30454|code|CBNZ            R6, loc_7712|102-185
30456|code|MOV             R0, R6|48-70
30458|code|POP             {R3-R7,PC}|248-189
30460|code|BLX             __errno_location|255-247-202-232
30464|code|LDR             R3, [R0]|3-104
30466|code|CMP             R3, #2|2-43
30468|code|BEQ             loc_7714|6-208
30470|code|LDR             R0, =(aReadlink_0 - 0x770E); "readlink"|13-72
30472|code|MOVS            R6, #0|0-38
30474|code|ADD             R0, PC; "readlink"|120-68
30476|code|BL              logSystemError|1-240-28-253
30480|code|B               loc_7716|1-224
30482|code|MOV             R5, R6|53-70
30484|code|MOVS            R6, #0|0-38
30486|code|MOV             R0, R5; ptr|40-70
30488|code|BLX             free|254-247-20-238
30492|code|MOV             R0, R6|48-70
30494|code|POP             {R3-R7,PC}|248-189
30496|code|MOVS            R2, #0|0-34
30498|code|MOV             R0, R5|40-70
30500|code|STRB            R2, [R5,R3]|234-84
30502|code|BLX             __strdup|254-247-212-238
30506|code|MOV             R6, R0|6-70
30508|code|CMP             R0, #0|0-40
30510|code|BNE             loc_7716|242-209
30512|code|BL              logMallocError|1-240-20-253
30516|code|B               loc_7716|239-231
30518|data|ALIGN 4|0-191
30520|data|DCD aProcSelfExe - 0x76CC; "/proc/self/exe"|88-158-0-0
30524|data|DCD aReadlink_0 - 0x770E; "readlink"|38-158-0-0
30528|code|LDR             R0, =(aServiceInstall - 0x7748); "service installation"|3-72
30530|code|PUSH            {R3,LR}|8-181
30532|code|ADD             R0, PC; "service installation"|120-68
30534|code|BL              logUnsupportedFeature|1-240-15-253
30538|code|MOVS            R0, #0|0-32
30540|code|POP             {R3,PC}|8-189
30542|data|ALIGN 0x10|0-191
30544|data|DCD aServiceInstall - 0x7748; "service installation"|248-157-0-0
30548|code|LDR             R0, =(aServiceRemoval - 0x775C); "service removal"|3-72
30550|code|PUSH            {R3,LR}|8-181
30552|code|ADD             R0, PC; "service removal"|120-68
30554|code|BL              logUnsupportedFeature|1-240-5-253
30558|code|MOVS            R0, #0|0-32
30560|code|POP             {R3,PC}|8-189
30562|data|ALIGN 4|0-191
30564|data|DCD aServiceRemoval - 0x775C; "service removal"|252-157-0-0
30568|code|B.W             j_getpid|254-247-178-189
30572|code|PUSH            {R3,LR}|8-181
30574|code|MOVS            R1, #0; sig|0-33
30576|code|BLX             kill|254-247-10-239
30580|code|ADDS            R0, #1|1-48
30582|code|IT NE|24-191
30584|code|MOVNE           R0, #1|1-32
30586|code|POP             {R3,PC}|8-189
30588|code|PUSH            {R3,LR}|8-181
30590|code|MOVS            R1, #0xF; sig|15-33
30592|code|BLX             kill|254-247-2-239
30596|code|ADDS            R0, #1|1-48
30598|code|IT NE|24-191
30600|code|MOVNE           R0, #1|1-32
30602|code|POP             {R3,PC}|8-189
30604|code|MOV             R3, R1|11-70
30606|code|LDR             R2, =(aConfigurationF - 0x7796); "configuration file directive"|3-74
30608|code|LDR             R1, =(off_24A90 - 0x7798)|3-73
30610|code|ADD             R2, PC; "configuration file directive"|122-68
30612|code|ADD             R1, PC; off_24A90|121-68
30614|code|B.W             processDirectiveOperand|7-240-183-187
30618|data|ALIGN 4|0-191
30620|data|DCD aConfigurationF - 0x7796; "configuration file directive"|210-157-0-0
30624|data|DCD off_24A90 - 0x7798|248-210-1-0
30628|code|LDR             R0, [R0]|0-104
30630|code|LDR             R1, [R1]|9-104
30632|code|ADDS            R0, #4|4-48
30634|code|ADDS            R1, #4|4-49
30636|code|B.W             compareKeywords|6-240-54-190
30640|code|PUSH            {LR}|0-181
30642|code|SUB             SP, SP, #0xC|131-176
30644|code|LDR             R3, =(aConfigurationD - 0x77C0); "configuration directive"|5-75
30646|code|MOVS            R2, #1|1-34
30648|code|STR             R1, [SP,#0x10+var_10]|0-145
30650|code|LDR             R1, =(sub_7994+1 - 0x77C2)|5-73
30652|code|ADD             R3, PC; "configuration directive"|123-68
30654|code|ADD             R1, PC; sub_7994|121-68
30656|code|BL              processConditionOperands|7-240-246-251
30660|code|ADD             SP, SP, #0xC|3-176
30662|code|POP.W           {PC}|93-248-4-251
30666|data|ALIGN 4|0-191
30668|data|DCD aConfigurationD - 0x77C0; "configuration directive"|32-158-0-0
30672|data|DCD sub_7994+1 - 0x77C2|211-1-0-0
30676|code|PUSH            {LR}|0-181
30678|code|SUB             SP, SP, #0xC|131-176
30680|code|LDR             R3, =(aConfigurationD - 0x77E4); "configuration directive"|5-75
30682|code|MOVS            R2, #0|0-34
30684|code|STR             R1, [SP,#0x10+var_10]|0-145
30686|code|LDR             R1, =(sub_7994+1 - 0x77E6)|5-73
30688|code|ADD             R3, PC; "configuration directive"|123-68
30690|code|ADD             R1, PC; sub_7994|121-68
30692|code|BL              processConditionOperands|7-240-228-251
30696|code|ADD             SP, SP, #0xC|3-176
30698|code|POP.W           {PC}|93-248-4-251
30702|data|ALIGN 0x10|0-191
30704|data|DCD aConfigurationD - 0x77E4; "configuration directive"|252-157-0-0
30708|data|DCD sub_7994+1 - 0x77E6|175-1-0-0
30712|code|PUSH.W          {R3-R9,LR}|45-233-248-67
30716|code|MOV             R6, R2|22-70
30718|code|MOV             R8, R0|128-70
30720|code|MOV             R7, R1|15-70
30722|code|MOVS            R5, #0|0-37
30724|code|CBNZ            R2, loc_7810|34-185
30726|code|B               loc_782E|18-224
30728|code|BEQ             loc_7834|20-208
30730|code|ADDS            R5, R4, #1|101-28
30732|code|CMP             R6, R5|174-66
30734|code|BLS             loc_782E|14-217
30736|code|ADDS            R4, R5, R6|172-25
30738|code|MOV             R0, R8|64-70
30740|code|LSRS            R4, R4, #1|100-8
30742|code|LDR.W           R1, [R7,R4,LSL#2]|87-248-36-16
30746|code|ADD.W           R9, R7, R4,LSL#2|7-235-132-9
30750|code|ADDS            R1, #4|4-49
30752|code|BL              compareKeywords|6-240-252-253
30756|code|CMP             R0, #0|0-40
30758|code|BGE             loc_7808|239-218
30760|code|MOV             R6, R4|38-70
30762|code|CMP             R6, R5|174-66
30764|code|BHI             loc_7810|240-216
30766|code|MOVS            R0, #0|0-32
30768|code|POP.W           {R3-R9,PC}|189-232-248-131
30772|code|LDR.W           R0, [R9]|217-248-0-0
30776|code|POP.W           {R3-R9,PC}|189-232-248-131
30780|code|PUSH.W          {R4-R9,LR}|45-233-240-67
30784|code|SUBW            SP, SP, #0x80C|173-246-12-13
30788|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x7850)|75-76
30790|code|MOV             R6, R1|14-70
30792|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|75-77
30794|code|ADD             R1, SP, #0x828+var_824|1-169
30796|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
30798|code|LDR             R3, =(aConfigurationD - 0x785A); "configuration directive"|75-75
30800|code|MOVS            R2, #0|0-34
30802|code|MOV             R7, R0|7-70
30804|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
30806|code|ADD             R3, PC; "configuration directive"|123-68
30808|code|LDR             R5, [R4]|37-104
30810|code|STR.W           R5, [SP,#0x828+var_24]|205-248-4-88
30814|code|BL              getDataString|7-240-103-249
30818|code|CBNZ            R0, loc_7888|136-185
30820|code|LDR             R2, [R6]|50-104
30822|code|MOVS            R5, #1|1-37
30824|code|LDRB.W          R3, [R2,#0x108]|146-248-8-49
30828|code|ORR.W           R3, R3, #2|67-240-2-3
30832|code|STRB.W          R3, [R2,#0x108]|130-248-8-49
30836|code|LDR.W           R2, [SP,#0x828+var_24]|221-248-4-40
30840|code|MOV             R0, R5|40-70
30842|code|LDR             R3, [R4]|35-104
30844|code|CMP             R2, R3|154-66
30846|code|BNE             loc_7970|119-209
30848|code|ADDW            SP, SP, #0x80C|13-246-12-13
30852|code|POP.W           {R4-R9,PC}|189-232-240-131
30856|code|ADDW            R5, SP, #0x828+var_424|13-242-4-69
30860|code|LDR             R3, =(aConfigurationV - 0x7896); "configuration value"|60-75
30862|code|MOV             R0, R7|56-70
30864|code|MOVS            R2, #0|0-34
30866|code|ADD             R3, PC; "configuration value"|123-68
30868|code|MOV             R1, R5|41-70
30870|code|BL              getDataString|7-240-75-249
30874|code|CMP             R0, #0|0-40
30876|code|BEQ             loc_7864|226-208
30878|code|LDRB            R1, [R5]|41-120
30880|code|ADD.W           R0, SP, #0x828+var_420|13-245-129-96
30884|code|MOVS            R2, #0|0-34
30886|code|BL              makeUtf8FromWchars|8-240-27-249
30890|code|MOV             R7, R0|7-70
30892|code|MOV             R5, R0|5-70
30894|code|CMP             R0, #0|0-40
30896|code|BEQ             loc_7874|224-208
30898|code|ADD.W           R9, SP, #0x828+var_820|13-241-8-9
30902|code|LDR             R1, [R6,#8]|177-104
30904|code|LDR             R2, [R6,#0xC]|242-104
30906|code|MOV             R0, R9|72-70
30908|code|BL              sub_77F8|255-247-156-255
30912|code|CMP             R0, #0|0-40
30914|code|BEQ             loc_7942|62-208
30916|code|LDR             R5, [R0]|5-104
30918|code|LDM.W           R6, {R2,R8}|150-232-4-1
30922|code|RSB.W           R1, R5, R5,LSL#3|197-235-197-1
30926|code|ADD.W           R0, R8, R5,LSL#2|8-235-133-0
30930|code|LDR.W           R3, [R8,R5,LSL#2]|88-248-37-48
30934|code|LDR             R2, [R2]|18-104
30936|code|ADD.W           R2, R2, R1,LSL#2|2-235-129-2
30940|code|CBZ             R3, loc_7932|75-179
30942|code|LDR             R3, [R2,#4]|83-104
30944|code|CBZ             R3, loc_78FC|99-177
30946|code|LDRB            R3, [R2,#0xA]|147-122
30948|code|LSLS            R3, R3, #0x1E|155-7
30950|code|BPL             loc_78FC|9-213
30952|code|MOV             R1, R7|57-70
30954|code|MOVS            R2, #0|0-34
30956|code|BL              extendStringSetting|2-240-208-253
30960|code|CBNZ            R0, loc_793E|40-187
30962|code|MOVS            R5, #0|0-37
30964|code|MOV             R0, R7; ptr|56-70
30966|code|BLX             free|254-247-38-237
30970|code|B               loc_7874|187-231
30972|code|LDR             R1, =(aConfigurationD_0 - 0x7906); "configuration directive specified more "...|33-73
30974|code|MOVS            R2, #5; category|5-34
30976|code|MOVS            R0, #0; domainname|0-32
30978|code|ADD             R1, PC; "configuration directive specified more "...|121-68
30980|code|BLX             dcgettext|254-247-180-238
30984|code|LDR             R1, =(aSLs_0 - 0x7910); "%s: %ls"|31-73
30986|code|MOV             R3, R9|75-70
30988|code|ADD             R1, PC; "%s: %ls"|121-68
30990|code|MOV             R2, R0|2-70
30992|code|MOVS            R0, #3|3-32
30994|code|BL              logMessage|1-240-151-251
30998|code|LDR             R2, [R6]|50-104
31000|code|LDRB.W          R3, [R2,#0x108]|146-248-8-49
31004|code|ORR.W           R3, R3, #2|67-240-2-3
31008|code|STRB.W          R3, [R2,#0x108]|130-248-8-49
31012|code|LDR.W           R0, [R8,R5,LSL#2]; ptr|88-248-37-0
31016|code|BLX             free|254-247-12-237
31020|code|MOVS            R3, #0|0-35
31022|code|STR.W           R3, [R8,R5,LSL#2]|72-248-37-48
31026|code|MOV             R0, R7|56-70
31028|code|BLX             __strdup|254-247-204-237
31032|code|STR.W           R0, [R8,R5,LSL#2]|72-248-37-0
31036|code|CBZ             R0, loc_796A|168-177
31038|code|MOVS            R5, #1|1-37
31040|code|B               loc_78F4|216-231
31042|code|LDR             R1, =(unk_115D8 - 0x794A)|18-73
31044|code|MOVS            R2, #5; category|5-34
31046|code|ADD             R1, PC; unk_115D8 ; msgid|121-68
31048|code|BLX             dcgettext|254-247-146-238
31052|code|LDR             R1, =(aSLs_0 - 0x7954); "%s: %ls"|16-73
31054|code|MOV             R3, R9|75-70
31056|code|ADD             R1, PC; "%s: %ls"|121-68
31058|code|MOV             R2, R0|2-70
31060|code|MOVS            R0, #3|3-32
31062|code|BL              logMessage|1-240-117-251
31066|code|LDR             R2, [R6]|50-104
31068|code|LDRB.W          R3, [R2,#0x108]|146-248-8-49
31072|code|ORR.W           R3, R3, #2|67-240-2-3
31076|code|STRB.W          R3, [R2,#0x108]|130-248-8-49
31080|code|B               loc_793E|233-231
31082|code|BL              logMallocError|1-240-247-251
31086|code|B               loc_78F2|192-231
31088|code|BLX             __stack_chk_fail|254-247-96-238
31092|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7850|132-212-1-0
31096|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
31100|data|DCD aConfigurationD - 0x785A; "configuration directive"|134-157-0-0
31104|data|DCD aConfigurationV - 0x7896; "configuration value"|242-156-0-0
31108|data|DCD aConfigurationD_0 - 0x7906; "configuration directive specified more "...|150-156-0-0
31112|data|DCD aSLs_0 - 0x7910; "%s: %ls"|192-156-0-0
31116|data|DCD unk_115D8 - 0x794A|142-156-0-0
31120|data|DCD aSLs_0 - 0x7954; "%s: %ls"|124-156-0-0
31124|code|PUSH            {R3-R7,LR}|248-181
31126|code|MOV             R5, R1|13-70
31128|code|MOV             R6, R2|22-70
31130|code|LDM             R1, {R1,R2}; n|6-201
31132|code|ADD             R7, SP, #0|0-175
31134|code|LSLS            R3, R2, #2|147-0
31136|code|ADDS            R3, #0xE|14-51
31138|code|BIC.W           R3, R3, #7|35-240-7-3
31142|code|SUB.W           SP, SP, R3|173-235-3-13
31146|code|MOV             R0, SP; s1|104-70
31148|code|BLX             wmemcpy|254-247-40-237
31152|code|LDR             R3, [R5,#4]|107-104
31154|code|MOV             R0, SP|104-70
31156|code|LDR             R1, [R6,#8]|177-104
31158|code|LDR             R2, [R6,#0xC]|242-104
31160|code|MOVS            R5, #0|0-37
31162|code|STR.W           R5, [SP,R3,LSL#2]|77-248-35-80
31166|code|BL              sub_77F8|255-247-27-255
31170|code|CBZ             R0, loc_79D2|48-177
31172|code|LDR             R2, [R0]|2-104
31174|code|LDR             R3, [R6,#4]|115-104
31176|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
31180|code|SUBS            R0, R0, R5|64-27
31182|code|IT NE|24-191
31184|code|MOVNE           R0, #1|1-32
31186|code|MOV             SP, R7|189-70
31188|code|POP             {R3-R7,PC}|248-189
31190|data|ALIGN 4|0-191
31192|code|PUSH.W          {R4-R9,LR}|45-233-240-67
31196|code|MOV             R9, R2|145-70
31198|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x79EA)|61-76
31200|code|SUB             SP, SP, #0xC|131-176
31202|code|LDR             R6, =(__stack_chk_guard_ptr - 0x24CD4)|61-78
31204|code|MOV             R7, R1|15-70
31206|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
31208|code|LDRB            R5, [R1,#8]|13-122
31210|code|MOV             R8, R0|128-70
31212|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
31214|code|ADDS            R4, R0, R5|68-25
31216|code|LDRB            R3, [R4,#8]|35-122
31218|code|LDR             R2, [R6]|50-104
31220|code|STR             R2, [SP,#0x28+var_24]|1-146
31222|code|CMP             R3, #0|0-43
31224|code|BNE             loc_7A64|52-209
31226|code|MOVS            R5, #1|1-37
31228|code|STRB            R5, [R4,#8]|37-114
31230|code|LDR             R3, [R1,#4]|75-104
31232|code|CBZ             R3, loc_7A28|147-177
31234|code|LDR             R0, [R1,#0x14]|72-105
31236|code|CBZ             R0, loc_7A64|112-179
31238|code|LDRB            R3, [R1,#0xA]|139-122
31240|code|MOV             R1, R9|73-70
31242|code|LSLS            R3, R3, #0x1E|155-7
31244|code|BPL             loc_7A68|44-213
31246|code|MOV             R2, R5|42-70
31248|code|BL              extendStringSetting|2-240-62-253
31252|code|ADDS            R0, #0|0-48
31254|code|IT NE|24-191
31256|code|MOVNE           R0, #1|1-32
31258|code|LDR             R2, [SP,#0x28+var_24]|1-154
31260|code|LDR             R3, [R6]|51-104
31262|code|CMP             R2, R3|154-66
31264|code|BNE             loc_7AD0|86-209
31266|code|ADD             SP, SP, #0xC|3-176
31268|code|POP.W           {R4-R9,PC}|189-232-240-131
31272|code|LDR             R4, [R1,#0x14]|76-105
31274|code|CBZ             R4, loc_7A64|220-177
31276|code|LDR             R1, =(aTableextension+0xC - 0x7A34); "on"|43-73
31278|code|MOV             R0, R9; s1|72-70
31280|code|ADD             R1, PC; "on" ; s2|121-68
31282|code|BLX             strcasecmp|254-247-116-236
31286|code|CBZ             R0, loc_7A7A|0-179
31288|code|LDR             R1, =(aOff - 0x7A40); "off"|41-73
31290|code|MOV             R0, R9; s1|72-70
31292|code|ADD             R1, PC; "off" ; s2|121-68
31294|code|BLX             strcasecmp|254-247-110-236
31298|code|CBZ             R0, loc_7A74|184-177
31300|code|LDRB            R3, [R7,#0xA]|187-122
31302|code|AND.W           R3, R3, #2|3-240-2-3
31306|code|AND.W           R0, R3, #0xFF; domainname|3-240-255-0
31310|code|CBZ             R3, loc_7A80|187-177
31312|code|MOV             R0, SP|104-70
31314|code|MOV             R1, R9|73-70
31316|code|BL              isInteger|2-240-36-254
31320|code|CBZ             R0, loc_7AA8|48-179
31322|code|LDR             R3, [SP,#0x28+var_28]|0-155
31324|code|CMP             R3, #0|0-43
31326|code|BLT             loc_7AA8|35-219
31328|code|LDR             R2, [R7,#0x14]|122-105
31330|code|STR             R3, [R2]|19-96
31332|code|MOVS            R0, #1|1-32
31334|code|B               loc_7A1A|216-231
31336|code|BL              changeStringSetting|2-240-252-252
31340|code|ADDS            R0, #0|0-48
31342|code|IT NE|24-191
31344|code|MOVNE           R0, #1|1-32
31346|code|B               loc_7A1A|210-231
31348|code|STR             R0, [R4]|32-96
31350|code|MOV             R0, R5|40-70
31352|code|B               loc_7A1A|207-231
31354|code|STR             R5, [R4]|37-96
31356|code|MOV             R0, R5|40-70
31358|code|B               loc_7A1A|204-231
31360|code|LDR             R1, =(aInvalidFlagSet - 0x7A88); "invalid flag setting"|24-73
31362|code|MOVS            R2, #5; category|5-34
31364|code|ADD             R1, PC; "invalid flag setting"|121-68
31366|code|BLX             dcgettext|254-247-244-237
31370|code|LDR             R1, =(aSS - 0x7A92); "%s: %s"|23-73
31372|code|MOV             R3, R9|75-70
31374|code|ADD             R1, PC; "%s: %s"|121-68
31376|code|MOV             R2, R0|2-70
31378|code|MOVS            R0, #3|3-32
31380|code|BL              logMessage|1-240-214-250
31384|code|LDRB.W          R3, [R8,#0x108]|152-248-8-49
31388|code|MOV             R0, R5|40-70
31390|code|ORR.W           R3, R3, #2|67-240-2-3
31394|code|STRB.W          R3, [R8,#0x108]|136-248-8-49
31398|code|B               loc_7A1A|184-231
31400|code|LDR             R1, =(aInvalidCounter - 0x7AB2); "invalid counter setting"|16-73
31402|code|MOVS            R2, #5; category|5-34
31404|code|MOVS            R0, #0; domainname|0-32
31406|code|ADD             R1, PC; "invalid counter setting"|121-68
31408|code|BLX             dcgettext|254-247-222-237
31412|code|LDR             R1, =(aSS - 0x7ABC); "%s: %s"|14-73
31414|code|MOV             R3, R9|75-70
31416|code|ADD             R1, PC; "%s: %s"|121-68
31418|code|MOV             R2, R0|2-70
31420|code|MOVS            R0, #3|3-32
31422|code|BL              logMessage|1-240-193-250
31426|code|LDRB.W          R3, [R8,#0x108]|152-248-8-49
31430|code|ORR.W           R3, R3, #2|67-240-2-3
31434|code|STRB.W          R3, [R8,#0x108]|136-248-8-49
31438|code|B               loc_7A64|201-231
31440|code|BLX             __stack_chk_fail|254-247-176-237
31444|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x79EA|234-210-1-0
31448|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
31452|data|DCD aTableextension+0xC - 0x7A34; "on"|120-180-0-0
31456|data|DCD aOff - 0x7A40; "off"|184-155-0-0
31460|data|DCD aInvalidFlagSet - 0x7A88; "invalid flag setting"|116-155-0-0
31464|data|DCD aSS - 0x7A92; "%s: %s"|54-167-0-0
31468|data|DCD aInvalidCounter - 0x7AB2; "invalid counter setting"|98-155-0-0
31472|data|DCD aSS - 0x7ABC; "%s: %s"|12-167-0-0
31476|code|PUSH.W          {R3-R9,LR}|45-233-248-67
31480|code|LDR.W           LR, [R0,#4]|208-248-4-224
31484|code|CMP.W           LR, #0|190-241-0-15
31488|code|BEQ             locret_7B50|38-208
31490|code|CLZ.W           R5, R1|177-250-129-245
31494|code|LDR             R7, =(aS_0+4 - 0x7B12); ""|19-79
31496|code|LDR             R6, =(aOff - 0x7B14); "off"|19-78
31498|code|MOVS            R4, #0|0-36
31500|code|MOV             R8, R0|128-70
31502|code|ADD             R7, PC; ""|127-68
31504|code|ADD             R6, PC; "off"|126-68
31506|code|LSRS            R5, R5, #5|109-9
31508|code|MOV             R9, R4|161-70
31510|code|B               loc_7B24|5-224
31512|code|BL              sub_79D8|255-247-94-255
31516|code|LDR.W           LR, [R8,#4]|216-248-4-224
31520|code|CMP             LR, R9|206-69
31522|code|BLS             locret_7B50|21-217
31524|code|LDR.W           R3, [R8]|216-248-0-48
31528|code|MOV             R0, R8|64-70
31530|code|ADD.W           R9, R9, #1|9-241-1-9
31534|code|ADD             R3, R4|35-68
31536|code|ADDS            R4, #0x1C|28-52
31538|code|LDRB            R2, [R3,#0xA]|154-122
31540|code|MOV             R1, R3|25-70
31542|code|UBFX.W          R2, R2, #2, #1|194-243-128-2
31546|code|CMP             R2, R5|170-66
31548|code|BEQ             loc_7B20|240-208
31550|code|LDR             R2, [R3,#0xC]|218-104
31552|code|CMP             R2, #0|0-42
31554|code|BNE             loc_7B18|233-209
31556|code|LDR             R3, [R3,#4]|91-104
31558|code|CMP             R3, #0|0-43
31560|code|ITE NE|20-191
31562|code|MOVNE           R2, R7|58-70
31564|code|MOVEQ           R2, R6|50-70
31566|code|B               loc_7B18|227-231
31568|code|POP.W           {R3-R9,PC}|189-232-248-131
31572|data|DCD aS_0+4 - 0x7B12; ""|178-156-0-0
31576|data|DCD aOff - 0x7B14; "off"|228-154-0-0
31580|code|PUSH            {R3-R7,LR}|248-181
31582|code|LDR             R7, [R0,#4]|71-104
31584|code|CBZ             R7, locret_7B9A|223-177
31586|code|MOVS            R4, #0|0-36
31588|code|MOV             R6, R0|6-70
31590|code|MOV             R5, R4|37-70
31592|code|B               loc_7B7C|8-224
31594|code|MOV             R0, R3|24-70
31596|code|CBZ             R3, loc_7B74|19-177
31598|code|BL              changeStringSetting|2-240-121-252
31602|code|LDR             R7, [R6,#4]|119-104
31604|code|ADDS            R5, #1|1-53
31606|code|ADDS            R4, #0x1C|28-52
31608|code|CMP             R7, R5|175-66
31610|code|BLS             locret_7B9A|14-217
31612|code|LDR             R3, [R6]|51-104
31614|code|MOVS            R1, #0|0-33
31616|code|ADD             R3, R4|35-68
31618|code|LDR             R2, [R3,#4]|90-104
31620|code|LDR             R3, [R3,#0x14]|91-105
31622|code|CMP             R2, #0|0-42
31624|code|BNE             loc_7B6A|239-209
31626|code|CMP             R3, #0|0-43
31628|code|BEQ             loc_7B74|242-208
31630|code|STR             R2, [R3]|26-96
31632|code|ADDS            R5, #1|1-53
31634|code|LDR             R7, [R6,#4]|119-104
31636|code|ADDS            R4, #0x1C|28-52
31638|code|CMP             R7, R5|175-66
31640|code|BHI             loc_7B7C|240-216
31642|code|POP             {R3-R7,PC}|248-189
31644|code|B.W             resetOptions|255-247-222-191
31648|code|PUSH.W          {R4-R11,LR}|45-233-240-79
31652|code|SUBW            SP, SP, #0x9AC|173-246-172-29
31656|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0x7BBA)|223-248-244-155
31660|code|ADD             R7, SP, #0x18|6-175
31662|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x24CD4)|223-248-244-59
31666|code|ADD.W           R10, R7, #0x80|7-241-128-10
31670|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
31672|code|STR             R0, [R7,#0x994+var_958]|248-99
31674|code|STR             R1, [R7,#0x994+var_944]|57-101
31676|code|MOV             R4, R0|4-70
31678|code|STR             R2, [R7,#0x994+var_940]|122-101
31680|code|MOVS            R1, #0; c|0-33
31682|code|LDR.W           R3, [R9,R3]; __stack_chk_guard|89-248-3-48
31686|code|MOV.W           R2, #0x10C; n|79-244-134-114
31690|code|MOV             R0, R10; s|80-70
31692|code|STR             R3, [R7,#0x994+var_980]|123-97
31694|code|LDR             R3, [R3]|27-104
31696|code|STR.W           R3, [R7,#0x994+var_8]|199-248-140-57
31700|code|BLX             memset|254-247-68-236
31704|code|LDR             R3, [R4]|35-104
31706|code|MOV             R2, R4|34-70
31708|code|LDR.W           R0, =(aOptions - 0x7BEA); "options"|223-248-200-11
31712|code|LDR             R4, [R4,#4]|100-104
31714|code|LDR.W           R1, =(j_resetOptions+1 - 0x7BEC)|223-248-200-27
31718|code|ADD             R0, PC; "options"|120-68
31720|code|ADD             R1, PC; j_resetOptions|121-68
31722|code|STM.W           R10, {R3,R4}|138-232-24-0
31726|code|BL              onProgramExit|255-247-183-251
31730|code|ADD.W           R3, R7, #0x87|7-241-135-3
31734|code|ADDW            R1, R7, #0x187|7-242-135-17
31738|code|MOVS            R2, #0|0-34
31740|code|STRB.W          R2, [R3,#1]!|3-248-1-47
31744|code|CMP             R3, R1|139-66
31746|code|BNE             loc_7BFC|251-209
31748|code|LDR             R3, [R7,#0x994+var_944]|59-109
31750|code|STR.W           SP, [R7,#0x994+var_974]|199-248-32-208
31754|code|LDR             R0, [R3]|24-104
31756|code|LDR             R3, [R7,#0x994+var_940]|123-109
31758|code|LDR             R1, [R3]|25-104
31760|code|BL              beginProgram|255-247-210-251
31764|code|LDR             R2, [R7,#0x994+var_958]|250-107
31766|code|LDR.W           R3, [R10,#4]|218-248-4-48
31770|code|LDR             R2, [R2,#0x18]|146-105
31772|code|STR             R2, [R7,#0x994+var_978]|250-97
31774|code|ADDS            R2, R3, #1|90-28
31776|code|LSLS            R2, R2, #1|82-0
31778|code|ADDS            R1, R2, #7|209-29
31780|code|BIC.W           R1, R1, #7|33-240-7-1
31784|code|LSLS            R2, R2, #4|18-1
31786|code|SUBS            R2, #8|8-58
31788|code|SUB.W           SP, SP, R1|173-235-1-13
31792|code|ADD             R1, SP, #0x9AC+s|6-169
31794|code|SUB.W           SP, SP, R2|173-235-2-13
31798|code|ADD             R2, SP, #0x9AC+s|6-170
31800|code|STR             R1, [R7,#0x994+shortopts]|57-99
31802|code|STR             R2, [R7,#0x994+longopts]|186-98
31804|code|CMP             R3, #0|0-43
31806|code|BEQ.W           loc_879A|0-240-172-133
31810|code|LDR.W           R3, =(aNo - 0x7C50); "no-"|223-248-108-59
31814|code|MOVS            R5, #0|0-37
31816|code|MOV             R12, R5|172-70
31818|code|MOV             R4, R2|20-70
31820|code|ADD             R3, PC; "no-"|123-68
31822|code|STR             R3, [R7,#0x994+s1]|187-100
31824|code|LDR.W           R3, =(aSS_0 - 0x7C5E); "%s%s"|223-248-96-59
31828|code|MOV             R8, R5|168-70
31830|code|STR.W           R9, [R7,#0x994+var_950]|199-248-68-144
31834|code|ADD             R3, PC; "%s%s"|123-68
31836|code|STR             R3, [R7,#0x994+msgid]|59-100
31838|code|LDR.W           R3, [R10]|218-248-0-48
31842|code|ADD.W           R9, R3, R5|3-235-5-9
31846|code|LDR             R6, [R3,R5]|94-89
31848|code|CBZ             R6, loc_7C8C|134-177
31850|code|LDR.W           R2, [R9,#4]|217-248-4-32
31854|code|ADD.W           R11, R4, #0x10|4-241-16-11
31858|code|STR             R6, [R4]|38-96
31860|code|CMP             R2, #0|0-42
31862|code|STR.W           R12, [R4,#8]|196-248-8-192
31866|code|ITE NE|20-191
31868|code|MOVNE           R2, #1|1-34
31870|code|MOVEQ           R2, #0|0-34
31872|code|STR             R2, [R4,#4]|98-96
31874|code|LDRB.W          R2, [R9,#8]|153-248-8-32
31878|code|STR             R2, [R4,#0xC]|226-96
31880|code|BEQ             loc_7D0E|65-208
31882|code|MOV             R4, R11|92-70
31884|code|LDR.W           R3, [R10,#4]|218-248-4-48
31888|code|ADD.W           R8, R8, #1|8-241-1-8
31892|code|ADDS            R5, #0x1C|28-53
31894|code|CMP             R8, R3|152-69
31896|code|BCC             loc_7C5E|225-211
31898|code|LDR.W           R9, [R7,#0x994+var_950]|215-248-68-144
31902|code|MOVS            R1, #0; c|0-33
31904|code|MOVS            R2, #0x10; n|16-34
31906|code|MOV             R0, R4; s|32-70
31908|code|STR             R3, [R7,#0x994+stream]|251-100
31910|code|BLX             memset|254-247-220-235
31914|code|LDR             R3, [R7,#0x994+stream]|251-108
31916|code|ADD.W           R2, R7, #0x188|7-245-196-114
31920|code|ADD.W           R0, R7, #0x588|7-245-177-96
31924|code|MOVS            R1, #0|0-33
31926|code|STR.W           R1, [R2,#4]!|66-248-4-31
31930|code|CMP             R2, R0|130-66
31932|code|BNE             loc_7CB6|251-209
31934|code|LDR             R0, [R7,#0x994+shortopts]|56-107
31936|code|MOVS            R1, #0x2B ; '+'|43-33
31938|code|MOV             R2, R0|2-70
31940|code|STRB            R1, [R0]|1-112
31942|code|ADDS            R2, #1|1-50
31944|code|CMP             R3, #0|0-43
31946|code|BEQ             loc_7D62|74-208
31948|code|MOVS            R1, #0|0-33
31950|code|ADD.W           R5, R7, #0x18C|7-245-198-117
31954|code|MOV             R0, R1|8-70
31956|code|MOV             R12, R1|140-70
31958|code|MOVS            R6, #0x3A ; ':'|58-38
31960|code|B               loc_7CF2|11-224
31962|code|STRB            R6, [R2,#1]|86-112
31964|code|ADDS            R2, #2|2-50
31966|code|LDR             R3, [R3,#0x14]|91-105
31968|code|CBZ             R3, loc_7CE6|11-177
31970|code|STR.W           R12, [R3]|195-248-0-192
31974|code|LDR.W           R3, [R10,#4]|218-248-4-48
31978|code|ADDS            R0, #1|1-48
31980|code|ADDS            R1, #0x1C|28-49
31982|code|CMP             R0, R3|152-66
31984|code|BCS             loc_7D62|55-210
31986|code|LDR.W           R3, [R10]|218-248-0-48
31990|code|ADD             R3, R1|11-68
31992|code|LDRB.W          LR, [R3,#8]|147-248-8-224
31996|code|STRB.W          LR, [R2]|130-248-0-224
32000|code|LDR             R4, [R3,#4]|92-104
32002|code|STR.W           R3, [R5,LR,LSL#2]|69-248-46-48
32006|code|CMP             R4, #0|0-44
32008|code|BNE             loc_7CDA|231-209
32010|code|ADDS            R2, #1|1-50
32012|code|B               loc_7CDE|231-231
32014|code|LDR.W           R2, [R9,#0x14]|217-248-20-32
32018|code|CMP             R2, #0|0-42
32020|code|BEQ             loc_7C8A|185-208
32022|code|LDR             R0, [R7,#0x994+s1]; s1|184-108
32024|code|MOV             R1, R6; s2|49-70
32026|code|MOVS            R2, #3; n|3-34
32028|code|STR.W           R12, [R7,#0x994+stream]|199-248-76-192
32032|code|BLX             strncasecmp|254-247-186-236
32036|code|LDR.W           R12, [R7,#0x994+stream]|215-248-76-192
32040|code|STR.W           R12, [R7,#0x994+var_95C]|199-248-56-192
32044|code|CMP             R0, #0|0-40
32046|code|BNE.W           loc_8150|64-240-15-130
32050|code|ADDS            R0, R6, #3|240-28
32052|code|BLX             __strdup|254-247-204-235
32056|code|LDR.W           R12, [R7,#0x994+var_95C]|215-248-56-192
32060|code|STR             R0, [R7,#0x994+stream]|248-100
32062|code|CMP             R0, #0|0-40
32064|code|BEQ.W           loc_86D6|0-240-201-132
32068|code|LDR             R3, [R7,#0x994+stream]|251-108
32070|code|ADDS            R4, #0x20 ; ' '|32-52
32072|code|STR.W           R12, [R4,#-0xC]|68-248-12-204
32076|code|STR.W           R3, [R4,#-0x10]|68-248-16-60
32080|code|ADD.W           R3, R7, #0x70 ; 'p'|7-241-112-3
32084|code|STR.W           R3, [R4,#-8]|68-248-8-60
32088|code|LDRB.W          R3, [R9,#8]|153-248-8-48
32092|code|STR.W           R3, [R4,#-4]|68-248-4-60
32096|code|B               loc_7C8C|148-231
32098|code|LDR             R3, [R7,#0x994+var_944]|59-109
32100|code|LDR             R1, [R3]|25-104
32102|code|MOVS            R3, #0|0-35
32104|code|STRB            R3, [R2]|19-112
32106|code|CMP             R1, #1|1-41
32108|code|BLE             loc_7D78|4-221
32110|code|LDR.W           R2, =(elf_gnu_hash_indexes+0xC4)|223-248-72-42
32114|code|LDR.W           R2, [R9,R2]|89-248-2-32
32118|code|STR             R3, [R2]|19-96
32120|code|LDR.W           R3, =(elf_gnu_hash_indexes+0xD8)|223-248-64-58
32124|code|MOVS            R1, #0|0-33
32126|code|STR             R1, [R7,#0x994+var_95C]|185-99
32128|code|MOV             R11, R1|139-70
32130|code|MOV             R5, R1|13-70
32132|code|MOVS            R2, #1|1-34
32134|code|LDR.W           R6, [R9,R3]|89-248-3-96
32138|code|MOV             R4, R2|20-70
32140|code|LDR             R3, [R7,#0x994+var_940]|123-109
32142|code|LDR             R1, [R3]; argv|25-104
32144|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
32148|code|STR             R3, [R7,#0x994+stream]|251-100
32150|code|LDR.W           R3, =(aUnknownOption - 0x7DA0); "unknown option"|223-248-40-58
32154|code|STR             R2, [R6]|50-96
32156|code|ADD             R3, PC; "unknown option"|123-68
32158|code|LDR             R2, [R7,#0x994+var_944]|58-109
32160|code|STR             R3, [R7,#0x994+s1]|187-100
32162|code|LDR.W           R3, =(aSCC - 0x7DAE); "%s: %c%c"|223-248-32-58
32166|code|LDR             R0, [R2]; argc|16-104
32168|code|MOV             R8, R2|144-70
32170|code|ADD             R3, PC; "%s: %c%c"|123-68
32172|code|STR             R3, [R7,#0x994+var_950]|123-100
32174|code|LDR.W           R3, =(aMissingOperand - 0x7DB6); "missing operand"|223-248-24-58
32178|code|ADD             R3, PC; "missing operand"|123-68
32180|code|STR             R3, [R7,#0x994+msgid]|59-100
32182|code|LDR.W           R3, =(aSCC - 0x7DBE); "%s: %c%c"|223-248-20-58
32186|code|ADD             R3, PC; "%s: %c%c"|123-68
32188|code|STR             R3, [R7,#0x994+var_960]|123-99
32190|code|CMP             R4, R0|132-66
32192|code|BEQ             loc_7DE2|15-208
32194|code|LDR.W           R3, [R1,R4,LSL#2]|81-248-36-48
32198|code|CMP             R5, #0|0-45
32200|code|BEQ.W           loc_8084|0-240-92-129
32204|code|LDRB            R2, [R5]|42-120
32206|code|CMP             R2, #0|0-42
32208|code|BNE.W           loc_7FFE|64-240-21-129
32212|code|ADDS            R4, #1|1-52
32214|code|STR             R4, [R6]|52-96
32216|code|LDR.W           R0, [R8]|216-248-0-0
32220|code|MOV             R5, R2|21-70
32222|code|CMP             R4, R0|132-66
32224|code|BNE             loc_7DC2|239-209
32226|code|MOV             R3, R0|3-70
32228|code|ADD.W           R1, R1, R3,LSL#2|1-235-131-1
32232|code|SUBS            R0, R0, R3|192-26
32234|code|LDR             R3, [R7,#0x994+var_940]|123-109
32236|code|STR             R1, [R3]|25-96
32238|code|LDR             R3, [R7,#0x994+var_944]|59-109
32240|code|STR             R0, [R3]|24-96
32242|code|CMP.W           R11, #0|187-241-0-15
32246|code|BNE.W           loc_819E|64-240-210-129
32250|code|LDR             R3, [R7,#0x994+longopts]|187-106
32252|code|LDR             R4, [R7,#0x994+longopts]|188-106
32254|code|LDR             R0, [R3]; ptr|24-104
32256|code|CBZ             R0, loc_7E12|56-177
32258|code|LDR             R3, [R4,#8]|163-104
32260|code|CBZ             R3, loc_7E0A|11-177
32262|code|BLX             free|254-247-158-234
32266|code|LDR.W           R0, [R4,#0x10]!|84-248-16-15
32270|code|CMP             R0, #0|0-40
32272|code|BNE             loc_7E02|247-209
32274|code|LDR             R3, [R7,#0x994+var_958]|251-107
32276|code|LDR.W           SP, [R7,#0x994+var_974]|215-248-32-208
32280|code|LDR             R3, [R3,#0x10]|27-105
32282|code|CBZ             R3, loc_7E24|27-177
32284|code|LDR             R3, [R3]|27-104
32286|code|ADDS            R3, #0|0-51
32288|code|IT NE|24-191
32290|code|MOVNE           R3, #1|1-35
32292|code|STR             R3, [R7,#0x994+s1]|187-100
32294|code|LDR             R3, [R7,#0x994+var_958]|251-107
32296|code|LDR             R3, [R3,#8]|155-104
32298|code|CBZ             R3, loc_7E34|27-177
32300|code|LDR             R3, [R3]|27-104
32302|code|CMP             R3, #0|0-43
32304|code|BNE.W           loc_855C|64-240-148-131
32308|code|LDR             R3, [R7,#0x994+var_958]|251-107
32310|code|LDR             R3, [R3,#0xC]|219-104
32312|code|CBZ             R3, loc_7E42|27-177
32314|code|LDR             R3, [R3]|27-104
32316|code|CMP             R3, #0|0-43
32318|code|BNE.W           loc_85EA|64-240-212-131
32322|code|MOV             R0, R10|80-70
32324|code|MOVS            R1, #0|0-33
32326|code|BL              sub_7AF4|255-247-85-254
32330|code|LDR             R5, [R7,#0x994+var_958]|253-107
32332|code|LDR             R0, [R5,#0x10]|40-105
32334|code|CMP             R0, #0|0-40
32336|code|BEQ.W           loc_7FC8|0-240-186-128
32340|code|LDR             R3, [R0]|3-104
32342|code|CMP             R3, #0|0-43
32344|code|BEQ.W           loc_7FC8|0-240-182-128
32348|code|LDR             R3, [R7,#0x994+s1]|187-108
32350|code|EOR.W           R4, R3, #1|131-240-1-4
32354|code|BL              fixInstallPath|255-247-19-252
32358|code|LDR             R3, [R5,#0x10]|43-105
32360|code|LDR.W           R1, =(aInvalidUnicode+0x18 - 0x7E74); "r"|223-248-100-25
32364|code|MOV             R2, R4|34-70
32366|code|LDR             R3, [R3]|27-104
32368|code|ADD             R1, PC; "r"|121-68
32370|code|MOV             R0, R3|24-70
32372|code|STR             R3, [R7,#0x994+var_944]|59-101
32374|code|BL              openDataFile|7-240-199-249
32378|code|STR             R0, [R7,#0x994+stream]|248-100
32380|code|CMP             R0, #0|0-40
32382|code|BEQ.W           loc_86E8|0-240-51-132
32386|code|LDR.W           R1, [R10,#4]|218-248-4-16
32390|code|ADD.W           R4, R7, #0x70 ; 'p'|7-241-112-4
32394|code|STR.W           SP, [R7,#0x994+var_950]|199-248-68-208
32398|code|MOVS            R5, #0|0-37
32400|code|STR.W           R10, [R4]|196-248-0-160
32404|code|LSLS            R3, R1, #2|139-0
32406|code|STR             R5, [R4,#0xC]|229-96
32408|code|ADDS            R3, #0xA|10-51
32410|code|BIC.W           R3, R3, #7|35-240-7-3
32414|code|SUB.W           SP, SP, R3|173-235-3-13
32418|code|ADD             R2, SP, #0x9AC+s|6-170
32420|code|SUB.W           SP, SP, R3|173-235-3-13
32424|code|ADD             R0, SP, #0x9AC+s|6-168
32426|code|STR             R2, [R4,#4]|98-96
32428|code|STR             R0, [R4,#8]|160-96
32430|code|CMP             R1, #0|0-41
32432|code|BEQ             loc_7F30|62-208
32434|code|ADD.W           R3, R7, #0x58 ; 'X'|7-241-88-3
32438|code|STR             R3, [R7,#0x994+var_940]|123-101
32440|code|ADD.W           R3, R7, #0x5C ; '\'|7-241-92-3
32444|code|MOV             R6, R5|46-70
32446|code|STR.W           R10, [R7,#0x994+s1]|199-248-72-160
32450|code|MOV             R2, R3|26-70
32452|code|MOV             R3, R10|83-70
32454|code|MOV             R9, R2|145-70
32456|code|LDR             R3, [R3]|27-104
32458|code|ADDS            R2, R3, R5|90-25
32460|code|LDRB            R2, [R2,#0xA]|146-122
32462|code|LSLS            R1, R2, #0x1D|81-7
32464|code|BPL             loc_7F1C|36-213
32466|code|LDR.W           R11, [R3,R5]|83-248-5-176
32470|code|CMP.W           R11, #0|187-241-0-15
32474|code|BEQ             loc_7F1C|31-208
32476|code|MOV             R0, R11|88-70
32478|code|BL              getUtf8Length|7-240-147-253
32482|code|MOV             R8, R0|128-70
32484|code|ADDS            R0, #2|2-48
32486|code|LSLS            R0, R0, #2; size|128-0
32488|code|BLX             malloc|254-247-78-236
32492|code|MOV             R10, R0|130-70
32494|code|CMP             R0, #0|0-40
32496|code|BEQ.W           loc_8738|0-240-34-132
32500|code|LDR             R1, [R7,#0x994+var_940]|121-109
32502|code|MOV             R3, R0|3-70
32504|code|ADD.W           R2, R8, #1|8-241-1-2
32508|code|STR.W           R6, [R3],#4|67-248-4-107
32512|code|STR.W           R3, [R9]|201-248-0-48
32516|code|MOV             R0, R1|8-70
32518|code|STR.W           R11, [R1]|193-248-0-176
32522|code|MOV             R1, R9|73-70
32524|code|BL              convertUtf8ToWchars|7-240-170-253
32528|code|LDR             R2, [R4,#0xC]|226-104
32530|code|LDR             R1, [R4,#8]|161-104
32532|code|ADDS            R0, R2, #1|80-28
32534|code|STR             R0, [R4,#0xC]|224-96
32536|code|STR.W           R10, [R1,R2,LSL#2]|65-248-34-160
32540|code|LDR             R3, [R4]|35-104
32542|code|ADDS            R6, #1|1-54
32544|code|ADDS            R5, #0x1C|28-53
32546|code|LDR             R2, [R3,#4]|90-104
32548|code|CMP             R6, R2|150-66
32550|code|BCC             loc_7EC8|207-211
32552|code|LDR.W           R10, [R7,#0x994+s1]|215-248-72-160
32556|code|LDR             R0, [R4,#8]; base|160-104
32558|code|LDR             R1, [R4,#0xC]; nmemb|225-104
32560|code|LDR.W           R3, =(loc_77A4+1 - 0x7F3A)|223-248-160-56
32564|code|MOVS            R2, #4; size|4-34
32566|code|ADD             R3, PC; loc_77A4 ; compar|123-68
32568|code|BLX             qsort|254-247-24-234
32572|code|LDR.W           R1, [R10,#4]|218-248-4-16
32576|code|MOVS            R3, #0|0-35
32578|code|MOV             R0, R3|24-70
32580|code|CBZ             R1, loc_7F52|41-177
32582|code|LDR             R2, [R4,#4]|98-104
32584|code|STR.W           R0, [R2,R3,LSL#2]|66-248-35-0
32588|code|ADDS            R3, #1|1-51
32590|code|CMP             R3, R1|139-66
32592|code|BNE             loc_7F46|249-209
32594|code|LDR.W           R3, =(sub_778C+1 - 0x7F60)|223-248-132-56
32598|code|MOVS            R0, #0|0-32
32600|code|STR             R4, [SP,#0x9AC+var_9AC]|0-148
32602|code|MOVS            R5, #0|0-37
32604|code|ADD             R3, PC; sub_778C|123-68
32606|code|LDR             R1, [R7,#0x994+stream]|249-108
32608|code|LDR             R2, [R7,#0x994+var_944]|58-109
32610|code|MOV             R11, R5|171-70
32612|code|BL              processDataStream|7-240-90-249
32616|code|LDR.W           R3, [R10,#4]|218-248-4-48
32620|code|MOV             R8, R0|128-70
32622|code|CBZ             R3, loc_7F9E|179-177
32624|code|LDR             R3, [R4,#4]|99-104
32626|code|LDR             R6, [R3,R5]|94-89
32628|code|CBZ             R6, loc_7F90|102-177
32630|code|RSB.W           R3, R5, R5,LSL#3|197-235-197-3
32634|code|MOV             R0, R10|80-70
32636|code|MOV             R2, R6|50-70
32638|code|MOV             R1, R3|25-70
32640|code|LDR.W           R3, [R10]|218-248-0-48
32644|code|ADD             R1, R3|25-68
32646|code|BL              sub_79D8|255-247-39-253
32650|code|MOV             R0, R6; ptr|48-70
32652|code|BLX             free|254-247-218-233
32656|code|LDR.W           R3, [R10,#4]|218-248-4-48
32660|code|ADD.W           R11, R11, #1|11-241-1-11
32664|code|ADDS            R5, #4|4-53
32666|code|CMP             R11, R3|155-69
32668|code|BCC             loc_7F70|232-211
32670|code|CMP.W           R8, #0|184-241-0-15
32674|code|BEQ.W           loc_8704|0-240-175-131
32678|code|LDR             R3, [R4,#0xC]|227-104
32680|code|CBZ             R3, loc_7FBE|75-177
32682|code|LDR             R2, [R4,#8]|162-104
32684|code|SUBS            R3, #1|1-59
32686|code|STR             R3, [R4,#0xC]|227-96
32688|code|LDR.W           R0, [R2,R3,LSL#2]; ptr|82-248-35-0
32692|code|BLX             free|254-247-198-233
32696|code|LDR             R3, [R4,#0xC]|227-104
32698|code|CMP             R3, #0|0-43
32700|code|BNE             loc_7FAA|245-209
32702|code|LDR             R0, [R7,#0x994+stream]; stream|248-108
32704|code|BLX             fclose|254-247-16-236
32708|code|LDR.W           SP, [R7,#0x994+var_950]|215-248-68-208
32712|code|MOV             R0, R10|80-70
32714|code|MOVS            R1, #1|1-33
32716|code|BL              sub_7AF4|255-247-146-253
32720|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
32724|code|LSLS            R2, R3, #0x1F|218-7
32726|code|IT MI|72-191
32728|code|MOVMI           R0, #1|1-32
32730|code|BMI             loc_7FE6|4-212
32732|code|TST.W           R3, #4|19-240-4-15
32736|code|ITE NE|20-191
32738|code|MOVNE           R0, #2|2-32
32740|code|MOVEQ           R0, #0|0-32
32742|code|LDR             R3, [R7,#0x994+var_980]|123-105
32744|code|LDR.W           R2, [R7,#0x994+var_8]|215-248-140-41
32748|code|LDR             R3, [R3]|27-104
32750|code|CMP             R2, R3|154-66
32752|code|BNE.W           loc_888E|64-240-77-132
32756|code|ADDW            R7, R7, #0x994|7-246-148-23
32760|code|MOV             SP, R7|189-70
32762|code|POP.W           {R4-R11,PC}|189-232-240-143
32766|code|ADD.W           R3, R7, #0x18C|7-245-198-115
32770|code|LDR.W           R1, [R3,R2,LSL#2]|83-248-34-16
32774|code|CBZ             R1, loc_8010|25-177
32776|code|LDR             R3, [R1,#4]|75-104
32778|code|CMP             R3, #0|0-43
32780|code|BEQ.W           loc_8144|0-240-154-128
32784|code|LDR.W           R1, =(elf_gnu_hash_indexes+0x10C)|223-248-200-23
32788|code|MOVS            R3, #0x3F ; '?'|63-35
32790|code|LDR.W           R1, [R9,R1]|89-248-1-16
32794|code|STR             R2, [R1]|10-96
32796|code|CMP             R3, #0x3F ; '?'|63-43
32798|code|ADD.W           R5, R5, #1|5-241-1-5
32802|code|MOV.W           R4, #0x2B ; '+'|79-240-43-4
32806|code|BEQ             loc_80AE|66-208
32808|code|BGT             loc_806C|32-220
32810|code|CMP             R3, #0|0-43
32812|code|BEQ             loc_80F4|98-208
32814|code|CMP             R3, #0x3A ; ':'|58-43
32816|code|BNE             loc_80C6|73-209
32818|code|LDR             R1, [R7,#0x994+msgid]; msgid|57-108
32820|code|MOVS            R2, #5; category|5-34
32822|code|MOVS            R0, #0; domainname|0-32
32824|code|BLX             dcgettext|254-247-26-235
32828|code|LDR.W           LR, =(elf_gnu_hash_indexes+0x10C)|223-248-156-231
32832|code|LDR             R1, [R7,#0x994+var_960]|121-107
32834|code|MOV             R3, R4|35-70
32836|code|MOV             R2, R0|2-70
32838|code|MOVS            R0, #3|3-32
32840|code|LDR.W           R4, [R9,LR]|89-248-14-64
32844|code|LDR             R4, [R4]|36-104
32846|code|STR             R4, [SP,#-0x24+longind]|0-148
32848|code|BL              logMessage|0-240-248-255
32852|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
32856|code|LDR.W           R0, [R8]|216-248-0-0
32860|code|ORR.W           R3, R3, #4|67-240-4-3
32864|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
32868|code|LDR             R3, [R7,#0x994+var_940]|123-109
32870|code|LDR             R4, [R6]|52-104
32872|code|LDR             R1, [R3]|25-104
32874|code|B               loc_7DBE|168-230
32876|code|CMP             R3, #0x48 ; 'H'|72-43
32878|code|BEQ             loc_8116|82-208
32880|code|CMP             R3, #0x68 ; 'h'|104-43
32882|code|BNE             loc_80C6|40-209
32884|code|LDR             R3, [R7,#0x994+var_940]|123-109
32886|code|MOV.W           R11, #1|79-240-1-11
32890|code|LDR.W           R0, [R8]|216-248-0-0
32894|code|LDR             R4, [R6]|52-104
32896|code|LDR             R1, [R3]|25-104
32898|code|B               loc_7DBE|156-230
32900|code|LDR             R2, [R7,#0x994+stream]|250-108
32902|code|CMP             R2, R4|162-66
32904|code|BEQ             loc_8090|2-208
32906|code|LDRB            R2, [R3]|26-120
32908|code|CMP             R2, #0x2B ; '+'|43-42
32910|code|BEQ             loc_8190|127-208
32912|code|LDR             R2, [R7,#0x994+shortopts]; shortopts|58-107
32914|code|MOVS            R3, #0|0-35
32916|code|STR             R3, [SP,#-0x24+longind]; longind|0-147
32918|code|LDR             R3, [R7,#0x994+longopts]; longopts|187-106
32920|code|BLX             getopt_long|254-247-10-235
32924|code|ADDS            R2, R0, #1|66-28
32926|code|MOV             R3, R0|3-70
32928|code|BEQ.W           loc_8880|0-240-238-131
32932|code|CMP             R3, #0x3F ; '?'|63-43
32934|code|STR             R4, [R7,#0x994+stream]|252-100
32936|code|MOV.W           R4, #0x2D ; '-'|79-240-45-4
32940|code|BNE             loc_8028|188-209
32942|code|LDR             R1, [R7,#0x994+s1]; msgid|185-108
32944|code|MOVS            R2, #5; category|5-34
32946|code|MOVS            R0, #0; domainname|0-32
32948|code|BLX             dcgettext|254-247-220-234
32952|code|LDR.W           LR, =(elf_gnu_hash_indexes+0x10C)|223-248-32-231
32956|code|MOV             R3, R4|35-70
32958|code|LDR             R1, [R7,#0x994+var_950]|121-108
32960|code|MOV             R2, R0|2-70
32962|code|MOVS            R0, #3|3-32
32964|code|B               loc_8048|192-231
32966|code|ADD.W           R2, R7, #0x18C|7-245-198-114
32970|code|LDR.W           R2, [R2,R3,LSL#2]|82-248-35-32
32974|code|LDR             R1, [R2,#4]|81-104
32976|code|CMP             R1, #0|0-41
32978|code|BEQ.W           loc_8544|0-240-55-130
32982|code|LDR.W           R1, =(elf_gnu_hash_indexes+0xF8)|223-248-8-23
32986|code|LDR.W           R1, [R9,R1]|89-248-1-16
32990|code|LDR             R4, [R1]|12-104
32992|code|LDRB            R1, [R4]|33-120
32994|code|CBNZ            R1, loc_811C|217-185
32996|code|ADD             R3, R10|83-68
32998|code|LDR.W           R0, [R8]|216-248-0-0
33002|code|LDR             R4, [R6]|52-104
33004|code|STRB            R1, [R3,#8]|25-114
33006|code|LDR             R3, [R7,#0x994+var_940]|123-109
33008|code|LDR             R1, [R3]|25-104
33010|code|B               loc_7DBE|100-230
33012|code|LDR             R2, [R7,#0x994+var_940]|122-109
33014|code|LDR             R0, [R7,#0x994+var_924]|56-111
33016|code|LDR             R1, [R2]|17-104
33018|code|ADD.W           R2, R7, #0x18C|7-245-198-114
33022|code|LDR.W           R2, [R2,R0,LSL#2]|82-248-32-32
33026|code|LDR             R2, [R2,#0x14]|82-105
33028|code|STR             R3, [R2]|19-96
33030|code|MOVS            R2, #1|1-34
33032|code|LDR             R3, [R7,#0x994+var_924]|59-111
33034|code|LDR.W           R0, [R8]|216-248-0-0
33038|code|ADD             R3, R10|83-68
33040|code|LDR             R4, [R6]|52-104
33042|code|STRB            R2, [R3,#8]|26-114
33044|code|B               loc_7DBE|83-230
33046|code|MOVS            R3, #1|1-35
33048|code|STR             R3, [R7,#0x994+var_95C]|187-99
33050|code|B               loc_8074|171-231
33052|code|LDR             R0, [R2,#0x14]|80-105
33054|code|CBZ             R0, loc_8132|64-177
33056|code|LDRB            R2, [R2,#0xA]|146-122
33058|code|MOV             R1, R4|33-70
33060|code|STR             R3, [R7,#0x994+var_968]|251-98
33062|code|LSLS            R4, R2, #0x1E|148-7
33064|code|BPL             loc_8188|46-213
33066|code|MOVS            R2, #0|0-34
33068|code|BL              extendStringSetting|2-240-176-249
33072|code|LDR             R3, [R7,#0x994+var_968]|251-106
33074|code|ADD             R3, R10|83-68
33076|code|MOVS            R2, #1|1-34
33078|code|LDR.W           R0, [R8]|216-248-0-0
33082|code|STRB            R2, [R3,#8]|26-114
33084|code|LDR             R3, [R7,#0x994+var_940]|123-109
33086|code|LDR             R4, [R6]|52-104
33088|code|LDR             R1, [R3]|25-104
33090|code|B               loc_7DBE|60-230
33092|code|LDR             R1, [R1,#0x14]|73-105
33094|code|CMP             R1, #0|0-41
33096|code|BEQ.W           loc_8010|63-244-98-175
33100|code|STR             R2, [R7,#0x994+var_924]|58-103
33102|code|B               loc_801C|101-231
33104|code|MOV             R0, R6; s|48-70
33106|code|BLX             strlen|254-247-34-235
33110|code|ADDS            R1, R0, #4|1-29
33112|code|STR             R1, [R7,#0x994+var_960]|121-99
33114|code|MOV             R0, R1; size|8-70
33116|code|BLX             malloc|254-247-20-235
33120|code|LDR.W           R12, [R7,#0x994+var_95C]|215-248-56-192
33124|code|STR             R0, [R7,#0x994+stream]|248-100
33126|code|CMP             R0, #0|0-40
33128|code|BEQ.W           loc_86D6|0-240-181-130
33132|code|LDR             R3, [R7,#0x994+msgid]|59-108
33134|code|MOVS            R2, #1|1-34
33136|code|STR             R3, [SP,#-0x24+longind]|0-147
33138|code|LDR             R3, [R7,#0x994+s1]|187-108
33140|code|LDR             R1, [R7,#0x994+var_960]|121-107
33142|code|STR             R6, [SP,#-0x24+arg_8]|2-150
33144|code|STR             R3, [SP,#-0x24+arg_4]|1-147
33146|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
33150|code|BLX             __snprintf_chk|254-247-18-235
33154|code|LDR.W           R12, [R7,#0x994+var_95C]|215-248-56-192
33158|code|B               loc_7D44|221-229
33160|code|BL              changeStringSetting|2-240-108-249
33164|code|LDR             R3, [R7,#0x994+var_968]|251-106
33166|code|B               loc_8132|208-231
33168|code|ADDS            R3, #1|1-51
33170|code|ITT NE|28-191
33172|code|STRNE           R4, [R7,#0x994+stream]|252-100
33174|code|MOVNE           R5, R3|29-70
33176|code|BNE.W           loc_7DBE|127-244-17-174
33180|code|B               loc_8090|120-231
33182|code|LDR.W           R3, =(elf_gnu_hash_indexes+0x140)|223-248-68-54
33186|code|STR.W           SP, [R7,#0x994+var_990]|199-248-4-208
33190|code|SUB             SP, SP, #0x50 ; 'P'|148-176
33192|code|LDR.W           R4, [R10,#4]|218-248-4-64
33196|code|ADD             R6, SP, #0x2C+var_14|6-174
33198|code|LDR.W           R3, [R9,R3]|89-248-3-48
33202|code|LDR             R3, [R3]|27-104
33204|code|STR             R3, [R7,#0x994+stream]|251-100
33206|code|CMP             R4, #0|0-44
33208|code|BEQ.W           loc_884A|0-240-71-131
33212|code|RSB.W           R4, R4, R4,LSL#3|196-235-196-4
33216|code|LDR.W           R5, [R10]|218-248-0-80
33220|code|MOVS            R3, #0|0-35
33222|code|ADD.W           R4, R5, R4,LSL#2|5-235-132-4
33226|code|MOV             R8, R3|152-70
33228|code|MOV             R11, R3|155-70
33230|code|LDR             R0, [R5]; s|40-104
33232|code|CMP             R0, #0|0-40
33234|code|BEQ.W           loc_8540|0-240-181-129
33238|code|BLX             strlen|254-247-224-234
33242|code|LDR             R3, [R5,#4]|107-104
33244|code|CBZ             R3, loc_81E0|3-177
33246|code|ADDS            R0, #1|1-48
33248|code|CMP             R8, R0|128-69
33250|code|IT CC|56-191
33252|code|MOVCC           R8, R0|128-70
33254|code|MOV             R0, R3; s|24-70
33256|code|CBZ             R0, loc_81F4|32-177
33258|code|BLX             strlen|254-247-214-234
33262|code|CMP             R11, R0|131-69
33264|code|IT CC|56-191
33266|code|MOVCC           R11, R0|131-70
33268|code|ADDS            R5, #0x1C|28-53
33270|code|CMP             R5, R4|165-66
33272|code|BNE             loc_81CE|233-209
33274|code|STR.W           R8, [R7,#0x994+var_970]|199-248-36-128
33278|code|STR.W           R11, [R7,#0x994+var_968]|199-248-44-176
33282|code|LDR.W           R1, =(aUsage - 0x820E); "Usage"|223-248-228-21
33286|code|MOVS            R2, #5; category|5-34
33288|code|MOVS            R0, #0; domainname|0-32
33290|code|ADD             R1, PC; "Usage"|121-68
33292|code|BLX             dcgettext|254-247-48-234
33296|code|LDR             R4, [R7,#0x994+stream]|252-108
33298|code|MOV             R1, R4; stream|33-70
33300|code|BLX             fputs|254-247-146-235
33304|code|LDR.W           R3, =(elf_gnu_hash_indexes+0x120)|223-248-208-53
33308|code|LDR.W           R2, =(aS - 0x822C); ": %s"|223-248-208-37
33312|code|MOV             R0, R4|32-70
33314|code|MOVS            R1, #1|1-33
33316|code|LDR.W           R3, [R9,R3]|89-248-3-48
33320|code|ADD             R2, PC; ": %s"|122-68
33322|code|LDR             R3, [R3]|27-104
33324|code|BLX             __fprintf_chk|254-247-0-233
33328|code|LDR.W           R3, [R10,#4]|218-248-4-48
33332|code|CMP             R3, #0|0-43
33334|code|BNE.W           loc_8768|64-240-151-130
33338|code|LDR             R3, [R7,#0x994+var_978]|251-105
33340|code|CBZ             R3, loc_8246|27-177
33342|code|LDRB            R3, [R3]|27-120
33344|code|CMP             R3, #0|0-43
33346|code|BNE.W           loc_8728|64-240-113-130
33350|code|MOVS            R0, #0xA; c|10-32
33352|code|LDR             R1, [R7,#0x994+stream]; stream|249-108
33354|code|BLX             fputc|254-247-134-234
33358|code|LDR.W           R3, [R10,#4]|218-248-4-48
33362|code|CMP             R3, #0|0-43
33364|code|BEQ.W           loc_841C|0-240-226-128
33368|code|LDR.W           R3, =(aS_2 - 0x8268); "%s\n"|223-248-152-53
33372|code|MOV.W           R11, #0x20 ; ' '|79-240-32-11
33376|code|LDR.W           R2, =(aS_0+4 - 0x8272); ""|223-248-148-37
33380|code|ADD             R3, PC; "%s\n"|123-68
33382|code|STR             R3, [R7,#0x994+s1]|187-100
33384|code|MOVS            R3, #0|0-35
33386|code|STR             R3, [R7,#0x994+var_944]|59-101
33388|code|STR             R3, [R7,#0x994+msgid]|59-100
33390|code|ADD             R2, PC; ""|122-68
33392|code|LDR.W           R3, =(aS_0+4 - 0x827A); ""|223-248-136-53
33396|code|STR             R2, [R7,#0x994+s]|58-96
33398|code|ADD             R3, PC; ""|123-68
33400|code|STR.W           R10, [R7,#0x994+var_950]|199-248-68-160
33404|code|STR             R3, [R7,#0x994+var_98C]|187-96
33406|code|LDR             R3, [R7,#0x994+var_950]|123-108
33408|code|LDR             R2, [R7,#0x994+var_944]|58-109
33410|code|LDR             R3, [R3]|27-104
33412|code|ADD.W           R9, R3, R2|3-235-2-9
33416|code|LDR             R3, [R7,#0x994+var_95C]|187-107
33418|code|CBNZ            R3, loc_8296|35-185
33420|code|LDRB.W          R3, [R9,#0xA]|153-248-10-48
33424|code|LSLS            R2, R3, #0x1F|218-7
33426|code|BMI.W           loc_8402|0-241-182-128
33430|code|MOVS            R3, #0x2D ; '-'|45-35
33432|code|STRB            R3, [R6]|51-112
33434|code|LDRB.W          R3, [R9,#8]|153-248-8-48
33438|code|STRB.W          R11, [R6,#2]|134-248-2-176
33442|code|LDR             R2, [R7,#0x994+var_968]|250-106
33444|code|STRB            R3, [R6,#1]|115-112
33446|code|LDR.W           R5, [R9,#4]|217-248-4-80
33450|code|ADD.W           R8, R2, #3|2-241-3-8
33454|code|CMP             R5, #0|0-45
33456|code|BEQ.W           loc_850E|0-240-45-129
33460|code|MOV             R0, R5; s|40-70
33462|code|BLX             strlen|254-247-112-234
33466|code|MOVS            R3, #0x4D ; 'M'|77-35
33468|code|MOV             R1, R5|41-70
33470|code|MOV             R4, R0|4-70
33472|code|MOV             R2, R0|2-70
33474|code|ADDS            R0, R6, #3|240-28
33476|code|BLX             __memcpy_chk|254-247-12-232
33480|code|ADDS            R3, R4, #3|227-28
33482|code|CMP             R8, R3|152-69
33484|code|ADD.W           R2, R4, #4|4-241-4-2
33488|code|BLS.W           loc_851A|64-242-35-129
33492|code|ADD             R3, R6|51-68
33494|code|ADD.W           R2, R6, R8|6-235-8-2
33498|code|STRB.W          R11, [R3],#1|3-248-1-187
33502|code|CMP             R3, R2|147-66
33504|code|BNE             loc_82DA|251-209
33506|code|LDR             R3, [R7,#0x994+var_968]|251-106
33508|code|ADDS            R2, R3, #4|26-29
33510|code|STRB.W          R11, [R6,R8]|6-248-8-176
33514|code|LDR             R3, [R7,#0x994+var_970]|123-106
33516|code|LDR.W           R0, [R9]; s|217-248-0-0
33520|code|ADDS            R5, R3, #2|157-28
33522|code|ADD             R5, R2|21-68
33524|code|CBZ             R0, loc_832E|216-177
33526|code|STR             R2, [R7,#0x994+var_940]|122-101
33528|code|BLX             strlen|254-247-78-234
33532|code|LDR             R2, [R7,#0x994+var_940]|122-109
33534|code|ADD.W           R4, R8, #3|8-241-3-4
33538|code|ADD             R8, R6|176-68
33540|code|MOVS            R3, #0x2D ; '-'|45-35
33542|code|STRB            R3, [R6,R2]|179-84
33544|code|STRB.W          R3, [R8,#2]|136-248-2-48
33548|code|LDR.W           R1, [R9]; src|217-248-0-16
33552|code|MOV             R10, R0|130-70
33554|code|ADDS            R0, R6, R4; dest|48-25
33556|code|MOV             R2, R10; n|82-70
33558|code|BLX             memcpy|254-247-44-234
33562|code|LDR.W           R2, [R9,#4]|217-248-4-32
33566|code|ADD.W           R3, R10, R4|10-235-4-3
33570|code|CMP             R2, #0|0-42
33572|code|BEQ.W           loc_86CA|0-240-209-129
33576|code|MOVS            R2, #0x3D ; '='|61-34
33578|code|STRB            R2, [R6,R3]|242-84
33580|code|ADDS            R2, R3, #1|90-28
33582|code|CMP             R5, R2|149-66
33584|code|BLS.W           loc_86D2|64-242-207-129
33588|code|ADDS            R3, R6, R2|179-24
33590|code|ADDS            R2, R6, R5|114-25
33592|code|STRB.W          R11, [R3],#1|3-248-1-187
33596|code|CMP             R3, R2|147-66
33598|code|BNE             loc_8338|251-209
33600|code|ADD.W           R10, R5, #1|5-241-1-10
33604|code|STRB.W          R11, [R6,R5]|6-248-5-176
33608|code|RSB.W           R3, R5, #0x4D ; 'M'|197-241-77-3
33612|code|STR             R3, [R7,#0x994+shortopts]|59-99
33614|code|STRB.W          R11, [R6,R10]|6-248-10-176
33618|code|ADD.W           R8, R5, #2|5-241-2-8
33622|code|LDR.W           R1, [R9,#0x10]; msgid|217-248-16-16
33626|code|LDRB.W          R3, [R9,#0xA]|153-248-10-48
33630|code|UBFX.W          R3, R3, #4, #1|195-243-0-19
33634|code|STR             R3, [R7,#0x994+var_940]|123-101
33636|code|CMP             R1, #0|0-41
33638|code|BEQ.W           loc_847C|0-240-137-128
33642|code|MOVS            R0, #0; domainname|0-32
33644|code|MOVS            R2, #5; category|5-34
33646|code|BLX             dcgettext|254-247-128-233
33650|code|LDR.W           R3, [R9,#0x18]|217-248-24-48
33654|code|ADDS            R3, #0|0-51
33656|code|IT NE|24-191
33658|code|MOVNE           R3, #1|1-35
33660|code|MOV             R4, R0|4-70
33662|code|CMP             R3, #0|0-43
33664|code|BNE.W           loc_848E|64-240-133-128
33668|code|MOV             R0, R4; s|32-70
33670|code|MOV             R9, R4|161-70
33672|code|BLX             strlen|254-247-6-234
33676|code|MOV             R3, R6|51-70
33678|code|LDR             R6, [R7,#0x994+shortopts]|62-107
33680|code|MOV             R12, R10|212-70
33682|code|MOV             R10, R8|194-70
33684|code|MOV             R8, R3|152-70
33686|code|MOV             R5, R0|5-70
33688|code|CMP             R6, R5|174-66
33690|code|BCS             loc_83FE|48-210
33692|code|CMP             R6, #0|0-46
33694|code|BEQ.W           loc_853C|0-240-205-128
33698|code|LDRB.W          R2, [R9,R6]|25-248-6-32
33702|code|ADD.W           R3, R9, R6|9-235-6-3
33706|code|MOV             R4, R6|52-70
33708|code|CMP             R2, #0x20 ; ' '|32-42
33710|code|BNE             loc_83BA|4-209
33712|code|B               loc_845A|83-224
33714|code|LDRB.W          R2, [R3,#-1]!|19-248-1-45
33718|code|CMP             R2, #0x20 ; ' '|32-42
33720|code|BEQ             loc_845A|79-208
33722|code|SUBS            R4, #1|1-60
33724|code|BNE             loc_83B2|249-209
33726|code|CMP             R5, R4|165-66
33728|code|BLS             loc_83DE|13-217
33730|code|LDRB.W          R2, [R9,R4]|25-248-4-32
33734|code|ADD.W           R3, R9, R4|9-235-4-3
33738|code|CMP             R2, #0x20 ; ' '|32-42
33740|code|BEQ             loc_83D8|4-208
33742|code|B               loc_83DE|6-224
33744|code|LDRB.W          R2, [R3,#1]!|19-248-1-47
33748|code|CMP             R2, #0x20 ; ' '|32-42
33750|code|BNE             loc_83DE|2-209
33752|code|ADDS            R4, #1|1-52
33754|code|CMP             R5, R4|165-66
33756|code|BHI             loc_83D0|248-216
33758|code|SUBS            R5, R5, R4|45-27
33760|code|CBZ             R5, loc_8400|117-177
33762|code|ADD             R9, R4|161-68
33764|code|CMP.W           R10, #0|186-241-0-15
33768|code|BEQ             loc_8398|214-208
33770|code|ADD.W           R3, R8, #0xFFFFFFFF|8-241-255-51
33774|code|ADD.W           R2, R8, R12|8-235-12-2
33778|code|STRB.W          R11, [R3,#1]!|3-248-1-191
33782|code|CMP             R3, R2|147-66
33784|code|BNE             loc_83F2|251-209
33786|code|CMP             R6, R5|174-66
33788|code|BCC             loc_839C|206-211
33790|code|CBNZ            R5, loc_842E|181-185
33792|code|MOV             R6, R8|70-70
33794|code|LDR             R3, [R7,#0x994+var_950]|123-108
33796|code|LDR             R2, [R7,#0x994+msgid]|58-108
33798|code|LDR             R1, [R7,#0x994+var_944]|57-109
33800|code|LDR             R3, [R3,#4]|91-104
33802|code|ADDS            R2, #1|1-50
33804|code|ADDS            R1, #0x1C|28-49
33806|code|STR             R2, [R7,#0x994+msgid]|58-100
33808|code|CMP             R2, R3|154-66
33810|code|STR             R1, [R7,#0x994+var_944]|57-101
33812|code|BCC.W           loc_827E|255-244-51-175
33816|code|LDR.W           R10, [R7,#0x994+var_950]|215-248-68-160
33820|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
33824|code|LDR.W           SP, [R7,#0x994+var_990]|215-248-4-208
33828|code|ORR.W           R3, R3, #1|67-240-1-3
33832|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
33836|code|B               loc_7DFA|229-228
33838|code|MOV             R4, R5|44-70
33840|code|ADD.W           R3, R8, R10|8-235-10-3
33844|code|MOV             R1, R9; src|73-70
33846|code|MOV             R2, R4; n|34-70
33848|code|STR.W           R12, [R7,#0x994+var_940]|199-248-84-192
33852|code|MOV             R0, R3; dest|24-70
33854|code|BLX             memcpy|254-247-152-233
33858|code|MOVS            R2, #0|0-34
33860|code|MOVS            R1, #1|1-33
33862|code|MOV             R3, R0|3-70
33864|code|LDR             R0, [R7,#0x994+stream]|248-108
33866|code|STRB            R2, [R3,R4]|26-85
33868|code|MOV             R3, R8|67-70
33870|code|LDR             R2, [R7,#0x994+s1]|186-108
33872|code|BLX             __fprintf_chk|253-247-238-239
33876|code|LDR.W           R12, [R7,#0x994+var_940]|215-248-84-192
33880|code|B               loc_83BE|177-231
33882|code|SUBS            R2, R4, #1|98-30
33884|code|ADD.W           R3, R9, R2|9-235-2-3
33888|code|LDRB.W          R1, [R9,R2]|25-248-2-16
33892|code|CMP             R1, #0x20 ; ' '|32-41
33894|code|BNE             loc_8430|227-209
33896|code|MOV             R4, R2|20-70
33898|code|CMP             R4, #0|0-44
33900|code|BEQ             loc_83BE|167-208
33902|code|LDRB.W          R2, [R3,#-1]!|19-248-1-45
33906|code|SUBS            R1, R4, #1|97-30
33908|code|CMP             R2, #0x20 ; ' '|32-42
33910|code|BNE             loc_8430|219-209
33912|code|MOV             R4, R1|12-70
33914|code|B               loc_846A|246-231
33916|code|LDR.W           R3, [R9,#0x18]|217-248-24-48
33920|code|LDR             R4, [R7,#0x994+var_98C]|188-104
33922|code|ADDS            R3, #0|0-51
33924|code|IT NE|24-191
33926|code|MOVNE           R3, #1|1-35
33928|code|CMP             R3, #0|0-43
33930|code|BEQ.W           loc_8384|63-244-123-175
33934|code|ADDW            R3, R7, #0x98C|7-246-140-19
33938|code|STR             R3, [R7,#0x994+var_978]|251-97
33940|code|ADDW            R3, R7, #0x58C|7-242-140-83
33944|code|MOV.W           R12, #0|79-240-0-12
33948|code|STR             R6, [R7,#0x994+var_984]|62-97
33950|code|MOV             R6, R4|38-70
33952|code|MOV             R5, R3|29-70
33954|code|MOV             R4, R9|76-70
33956|code|MOV             R9, R12|225-70
33958|code|ADD.W           R2, R7, #0x60 ; '`'|7-241-96-2
33962|code|STR.W           SP, [R7,#0x994+var_988]|199-248-12-208
33966|code|STR             R2, [R7,#0x994+var_960]|122-99
33968|code|LDR             R3, [R7,#0x994+var_940]|123-109
33970|code|CMP             R3, #0|0-43
33972|code|BNE             loc_851E|51-209
33974|code|LDR             R3, [R4,#0x18]|163-105
33976|code|LDR.W           R3, [R3,R9,LSL#2]|83-248-41-48
33980|code|CMP             R3, #0|0-43
33982|code|BEQ.W           loc_883A|0-240-188-129
33986|code|LDR             R2, [R7,#0x994+var_960]|122-107
33988|code|STR.W           R3, [R2,R9,LSL#2]|66-248-41-48
33992|code|ADD.W           R9, R9, #1|9-241-1-9
33996|code|CMP.W           R9, #4|185-241-4-15
34000|code|BNE             loc_84B0|238-209
34002|code|MOV             R4, R6|52-70
34004|code|LDR             R6, [R7,#0x994+var_984]|62-105
34006|code|LDR             R3, [R7,#0x994+var_978]|251-105
34008|code|MOV             R0, R5|40-70
34010|code|SUBS            R3, R3, R5|91-27
34012|code|STR             R3, [R7,#0x994+var_97C]|187-97
34014|code|STR             R4, [SP,#0x2C+var_2C]|0-148
34016|code|MOVS            R2, #1|1-34
34018|code|LDR             R5, [R7,#0x994+var_960]|125-107
34020|code|MOV             R4, R0|4-70
34022|code|LDR             R1, [R7,#0x994+var_97C]|185-105
34024|code|LDR             R3, [R5]|43-104
34026|code|STR             R3, [SP,#0x2C+var_28]|1-147
34028|code|STR             R5, [R7,#0x994+var_960]|125-99
34030|code|LDR             R3, [R5,#4]|107-104
34032|code|MOV             R5, R3|29-70
34034|code|STR             R5, [SP,#0x2C+var_24]|2-149
34036|code|LDR             R5, [R7,#0x994+var_960]|125-107
34038|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
34042|code|LDR             R5, [R5,#8]|173-104
34044|code|STR             R5, [SP,#0x2C+var_20]|3-149
34046|code|LDR             R5, [R7,#0x994+var_960]|125-107
34048|code|LDR             R5, [R5,#0xC]|237-104
34050|code|STR             R5, [SP,#0x2C+var_1C]|4-149
34052|code|BLX             __snprintf_chk|254-247-78-233
34056|code|LDR.W           SP, [R7,#0x994+var_988]|215-248-12-208
34060|code|B               loc_8384|58-231
34062|code|MOVS            R3, #3|3-35
34064|code|CMP             R8, R3|152-69
34066|code|MOV.W           R2, #4|79-240-4-2
34070|code|BHI.W           loc_82D4|63-246-221-174
34074|code|MOV             R8, R3|152-70
34076|code|B               loc_82E6|227-230
34078|code|LDR             R3, [R7,#0x994+var_978]|251-105
34080|code|MOV             R0, R9|72-70
34082|code|MOV             R1, R5|41-70
34084|code|SUBS            R3, R3, R5|91-27
34086|code|STR             R3, [R7,#0x994+var_97C]|187-97
34088|code|MOV             R2, R3|26-70
34090|code|LDR             R3, [R4,#0x18]|163-105
34092|code|BLX             R3|152-71
34094|code|CMP             R0, #0|0-40
34096|code|BEQ.W           loc_8818|0-240-114-129
34100|code|ADDS            R0, #1|1-48
34102|code|MOV             R3, R5|43-70
34104|code|ADD             R5, R0|5-68
34106|code|B               loc_84BC|191-231
34108|code|MOV             R4, R6|52-70
34110|code|B               loc_83BE|62-231
34112|code|LDR             R0, [R5,#4]|104-104
34114|code|B               loc_81E8|81-230
34116|code|LDR             R1, [R2,#0x14]|81-105
34118|code|CMP             R1, #0|0-41
34120|code|BEQ.W           loc_8132|63-244-243-173
34124|code|LDRB            R2, [R2,#0xA]|146-122
34126|code|LSLS            R0, R2, #0x1E|144-7
34128|code|ITET MI|74-191
34130|code|LDRMI           R2, [R1]|10-104
34132|code|MOVPL           R2, #1|1-34
34134|code|ADDMI           R2, #1|1-50
34136|code|STR             R2, [R1]|10-96
34138|code|B               loc_8132|234-229
34140|code|LDR             R3, [R7,#0x994+var_958]|251-107
34142|code|LDR             R4, [R3,#0x14]|92-105
34144|code|MOV             R0, R4|32-70
34146|code|BL              getBootParameters|0-240-153-249
34150|code|MOV             R8, R0|128-70
34152|code|CMP             R0, #0|0-40
34154|code|BEQ.W           loc_8850|0-240-113-129
34158|code|ADD.W           R4, R7, #0x70 ; 'p'|7-241-112-4
34162|code|MOVS            R1, #0x2C ; ','; c|44-33
34164|code|MOVS            R3, #0|0-35
34166|code|MOV             R2, R4|34-70
34168|code|STR             R3, [R4]|35-96
34170|code|BL              splitString|1-240-247-255
34174|code|LDR.W           R3, [R10,#4]|218-248-4-48
34178|code|MOV             R9, R0|129-70
34180|code|CMP             R3, #0|0-43
34182|code|BEQ.W           loc_8892|0-240-132-129
34186|code|MOVS            R5, #0|0-37
34188|code|MOV.W           R11, #0x2C ; ','|79-240-44-11
34192|code|MOV             R6, R5|46-70
34194|code|LDR.W           R1, [R10]|218-248-0-16
34198|code|ADD             R1, R5|41-68
34200|code|LDRB            R3, [R1,#9]|75-122
34202|code|CBZ             R3, loc_85C8|171-177
34204|code|LDR             R2, [R4]|34-104
34206|code|CMP             R3, R2|147-66
34208|code|BGT             loc_85C8|18-220
34210|code|ADD.W           R3, R3, #0x40000000|3-241-128-67
34214|code|SUBS            R3, #1|1-59
34216|code|LDR.W           R2, [R9,R3,LSL#2]|89-248-35-32
34220|code|LDRB            R3, [R2]|19-120
34222|code|CBZ             R3, loc_85C8|91-177
34224|code|MOV             R0, R2|16-70
34226|code|CMP             R3, #0x2B ; '+'|43-43
34228|code|IT EQ|8-191
34230|code|STRBEQ.W        R11, [R0]|128-248-0-176
34234|code|LDRB.W          R3, [R0,#1]!|16-248-1-63
34238|code|CMP             R3, #0|0-43
34240|code|BNE             loc_85B2|247-209
34242|code|MOV             R0, R10|80-70
34244|code|BL              sub_79D8|255-247-8-250
34248|code|LDR.W           R3, [R10,#4]|218-248-4-48
34252|code|ADDS            R6, #1|1-54
34254|code|ADDS            R5, #0x1C|28-53
34256|code|CMP             R6, R3|158-66
34258|code|BCC             loc_8592|222-211
34260|code|MOV             R0, R9; ptr|72-70
34262|code|BL              deallocateStrings|1-240-185-255
34266|code|CMP.W           R8, #0|184-241-0-15
34270|code|BEQ.W           loc_7E34|63-244-41-172
34274|code|MOV             R0, R8; ptr|64-70
34276|code|BLX             free|253-247-174-238
34280|code|B               loc_7E34|36-228
34282|code|LDR             R2, [R7,#0x994+var_958]|250-107
34284|code|LDR.W           R3, [R10,#4]|218-248-4-48
34288|code|LDR             R2, [R2,#0x14]|82-105
34290|code|STR             R2, [R7,#0x994+var_940]|122-101
34292|code|CMP             R3, #0|0-43
34294|code|BEQ.W           loc_7E42|63-244-36-172
34298|code|LDR             R3, =(aSS_1 - 0x8608); "%s_%s"|129-75
34300|code|MOVS            R4, #0|0-36
34302|code|MOV             R5, R4|37-70
34304|code|MOV.W           R9, #0x5F ; '_'|79-240-95-9
34308|code|ADD             R3, PC; "%s_%s"|123-68
34310|code|STR             R3, [R7,#0x994+var_950]|123-100
34312|code|LDR.W           R11, [R7,#0x994+var_940]|215-248-84-176
34316|code|LDR.W           R6, [R10]|218-248-0-96
34320|code|MOV             R0, R11; s|88-70
34322|code|BLX             strlen|254-247-194-232
34326|code|ADDS            R3, R6, R4|51-25
34328|code|STR             R3, [R7,#0x994+var_944]|59-101
34330|code|LDRB            R2, [R3,#0xA]|154-122
34332|code|LSLS            R3, R2, #0x1C|19-7
34334|code|MOV             R8, R0|128-70
34336|code|BPL             loc_86A4|64-213
34338|code|LDR             R6, [R6,R4]|54-89
34340|code|CMP             R6, #0|0-46
34342|code|BEQ             loc_86A4|61-208
34344|code|MOV             R0, R6; s|48-70
34346|code|STR.W           SP, [R7,#0x994+stream]|199-248-76-208
34350|code|BLX             strlen|254-247-180-232
34354|code|ADD.W           R1, R8, #2|8-241-2-1
34358|code|MOVS            R2, #1|1-34
34360|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
34364|code|ADD             R1, R0|1-68
34366|code|ADDS            R0, R1, #7|200-29
34368|code|BIC.W           R0, R0, #7|32-240-7-0
34372|code|SUB.W           SP, SP, R0|173-235-0-13
34376|code|LDR             R0, [R7,#0x994+var_950]|120-108
34378|code|ADD.W           R8, SP, #0x2C+var_14|13-241-24-8
34382|code|STR.W           R11, [SP,#0x2C+var_28]|205-248-4-176
34386|code|STR             R0, [SP,#0x2C+var_2C]|0-144
34388|code|MOV             R0, R8|64-70
34390|code|STR             R6, [SP,#0x2C+var_24]|2-150
34392|code|MOV             R11, R8|195-70
34394|code|BLX             __snprintf_chk|254-247-164-232
34398|code|LDRB.W          R6, [SP,#0x2C+var_14]|157-248-24-96
34402|code|CBZ             R6, loc_8694|190-177
34404|code|CMP             R6, #0x2D ; '-'|45-46
34406|code|IT EQ|8-191
34408|code|STRBEQ.W        R9, [R11]|139-248-0-144
34412|code|BEQ             loc_868C|14-208
34414|code|BLX             __ctype_b_loc|254-247-50-232
34418|code|SXTH            R6, R6|54-178
34420|code|LDR             R3, [R0]|3-104
34422|code|LDRH.W          R3, [R3,R6,LSL#1]|51-248-22-48
34426|code|LSLS            R0, R3, #0x16|152-5
34428|code|BPL             loc_868C|6-213
34430|code|BLX             __ctype_toupper_loc|253-247-102-239
34434|code|LDR             R3, [R0]|3-104
34436|code|LDR.W           R3, [R3,R6,LSL#2]|83-248-38-48
34440|code|STRB.W          R3, [R11]|139-248-0-48
34444|code|LDRB.W          R6, [R11,#1]!|27-248-1-111
34448|code|CMP             R6, #0|0-46
34450|code|BNE             loc_8664|231-209
34452|code|MOV             R0, R8; name|64-70
34454|code|BLX             getenv|254-247-88-233
34458|code|CBZ             R0, loc_86A0|8-177
34460|code|LDRB            R3, [R0]|3-120
34462|code|CBNZ            R3, loc_86B4|75-185
34464|code|LDR.W           SP, [R7,#0x994+stream]|215-248-76-208
34468|code|LDR.W           R3, [R10,#4]|218-248-4-48
34472|code|ADDS            R5, #1|1-53
34474|code|ADDS            R4, #0x1C|28-52
34476|code|CMP             R5, R3|157-66
34478|code|BCC             loc_8608|171-211
34480|code|B.W             loc_7E42|255-247-199-187
34484|code|MOV             R2, R0|2-70
34486|code|LDR             R1, [R7,#0x994+var_944]|57-109
34488|code|MOV             R0, R10|80-70
34490|code|BL              sub_79D8|255-247-141-249
34494|code|CMP             R0, #0|0-40
34496|code|BNE             loc_86A0|238-209
34498|code|LDR.W           SP, [R7,#0x994+stream]|215-248-76-208
34502|code|B.W             loc_7E42|255-247-188-187
34506|code|MOV             R2, R3|26-70
34508|code|CMP             R5, R2|149-66
34510|code|BHI.W           loc_8334|63-246-49-174
34514|code|MOV             R5, R2|21-70
34516|code|B               loc_8340|52-230
34518|code|STR.W           R12, [R7,#0x994+stream]|199-248-76-192
34522|code|MOV             R4, R11|92-70
34524|code|BL              logMallocError|0-240-62-253
34528|code|LDR.W           R12, [R7,#0x994+stream]|215-248-76-192
34532|code|B.W             loc_7C8C|255-247-210-186
34536|code|CBZ             R4, loc_86F6|44-177
34538|code|BLX             __errno_location|254-247-212-232
34542|code|LDR             R3, [R0]|3-104
34544|code|CMP             R3, #2|2-43
34546|code|BEQ.W           loc_7FC8|63-244-105-172
34550|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
34554|code|ORR.W           R3, R3, #2|67-240-2-3
34558|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
34562|code|B               loc_7FC8|97-228
34564|code|LDR             R1, =(aFileSProcessin - 0x870E); "file '%s' processing error."|63-73
34566|code|MOVS            R2, #5; category|5-34
34568|code|MOV             R0, R8; domainname|64-70
34570|code|ADD             R1, PC; "file '%s' processing error."|121-68
34572|code|BLX             dcgettext|253-247-176-239
34576|code|LDR             R2, [R7,#0x994+var_944]|58-109
34578|code|MOV             R1, R0|1-70
34580|code|MOVS            R0, #3|3-32
34582|code|BL              logMessage|0-240-149-252
34586|code|LDRB.W          R3, [R10,#0x108]|154-248-8-49
34590|code|ORR.W           R3, R3, #2|67-240-2-3
34594|code|STRB.W          R3, [R10,#0x108]|138-248-8-49
34598|code|B               loc_7FA6|62-228
34600|code|LDR             R2, =(aDeviceDirector+0x20 - 0x8734); " %s"|55-74
34602|code|MOVS            R1, #1|1-33
34604|code|LDR             R3, [R7,#0x994+var_978]|251-105
34606|code|LDR             R0, [R7,#0x994+stream]|248-108
34608|code|ADD             R2, PC; " %s"|122-68
34610|code|BLX             __fprintf_chk|253-247-126-238
34614|code|B               loc_8246|134-229
34616|code|LDR.W           R10, [R7,#0x994+s1]|215-248-72-160
34620|code|BL              logMallocError|0-240-14-253
34624|code|LDR             R3, [R4,#0xC]|227-104
34626|code|CMP             R3, #0|0-43
34628|code|BEQ.W           loc_7FBE|63-244-59-172
34632|code|LDR             R2, [R4,#8]|162-104
34634|code|SUBS            R3, #1|1-59
34636|code|STR             R3, [R4,#0xC]|227-96
34638|code|LDR.W           R0, [R2,R3,LSL#2]; ptr|82-248-35-0
34642|code|BLX             free|253-247-248-237
34646|code|LDR             R3, [R4,#0xC]|227-104
34648|code|CMP             R3, #0|0-43
34650|code|BNE             loc_8748|245-209
34652|code|LDR             R0, [R7,#0x994+stream]; stream|248-108
34654|code|BLX             fclose|254-247-66-232
34658|code|LDR.W           SP, [R7,#0x994+var_950]|215-248-68-208
34662|code|B               loc_7FC8|47-228
34664|code|LDR             R4, [R7,#0x994+stream]|252-108
34666|code|MOVS            R1, #1; size|1-33
34668|code|LDR             R0, =(asc_11674 - 0x8776); " ["|39-72
34670|code|MOVS            R2, #2; n|2-34
34672|code|MOV             R3, R4; s|35-70
34674|code|ADD             R0, PC; " ["|120-68
34676|code|BLX             fwrite|253-247-246-239
34680|code|LDR             R1, =(aUnknownOption+8 - 0x8782); "option"|37-73
34682|code|MOVS            R2, #5; category|5-34
34684|code|MOVS            R0, #0; domainname|0-32
34686|code|ADD             R1, PC; "option" ; msgid|121-68
34688|code|BLX             dcgettext|253-247-118-239
34692|code|MOV             R1, R4; stream|33-70
34694|code|BLX             fputs|254-247-218-232
34698|code|LDR             R0, =(asc_11678 - 0x8796); " ...]"|34-72
34700|code|MOVS            R1, #1; size|1-33
34702|code|MOVS            R2, #5; n|5-34
34704|code|MOV             R3, R4; s|35-70
34706|code|ADD             R0, PC; " ...]"|120-68
34708|code|BLX             fwrite|253-247-230-239
34712|code|B               loc_823A|79-229
34714|code|LDR             R4, [R7,#0x994+longopts]|188-106
34716|code|B.W             loc_7C9E|255-247-127-186
34720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7BBA|26-209-1-0
34724|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
34728|data|DCD aOptions - 0x7BEA; "options"|66-154-0-0
34732|data|DCD j_resetOptions+1 - 0x7BEC|177-255-255-255
34736|data|DCD aNo - 0x7C50; "no-"|228-153-0-0
34740|data|DCD aSS_0 - 0x7C5E; "%s%s"|218-153-0-0
34744|data|DCD elf_gnu_hash_indexes+0xC4|136-2-0-0
34748|data|DCD elf_gnu_hash_indexes+0xD8|156-2-0-0
34752|data|DCD aUnknownOption - 0x7DA0; "unknown option"|160-152-0-0
34756|data|DCD aSCC - 0x7DAE; "%s: %c%c"|162-152-0-0
34760|data|DCD aMissingOperand - 0x7DB6; "missing operand"|166-152-0-0
34764|data|DCD aSCC - 0x7DBE; "%s: %c%c"|146-152-0-0
34768|data|DCD aInvalidUnicode+0x18 - 0x7E74; "r"|248-178-0-0
34772|data|DCD loc_77A4+1 - 0x7F3A|107-248-255-255
34776|data|DCD sub_778C+1 - 0x7F60|45-248-255-255
34780|data|DCD elf_gnu_hash_indexes+0x10C|208-2-0-0
34784|data|DCD elf_gnu_hash_indexes+0xF8|188-2-0-0
34788|data|DCD elf_gnu_hash_indexes+0x140|4-3-0-0
34792|data|DCD aUsage - 0x820E; "Usage"|94-148-0-0
34796|data|DCD elf_gnu_hash_indexes+0x120|228-2-0-0
34800|data|DCD aS - 0x822C; ": %s"|56-169-0-0
34804|data|DCD aS_2 - 0x8268; "%s\n"|24-148-0-0
34808|data|DCD aS_0+4 - 0x8272; ""|82-149-0-0
34812|data|DCD aS_0+4 - 0x827A; ""|74-149-0-0
34816|data|DCD aSS_1 - 0x8608; "%s_%s"|124-144-0-0
34820|data|DCD aFileSProcessin - 0x870E; "file '%s' processing error."|126-143-0-0
34824|data|DCD aDeviceDirector+0x20 - 0x8734; " %s"|4-150-0-0
34828|data|DCD asc_11674 - 0x8776; " ["|254-142-0-0
34832|data|DCD aUnknownOption+8 - 0x8782; "option"|198-142-0-0
34836|data|DCD asc_11678 - 0x8796; " ...]"|226-142-0-0
34840|code|MOV             R4, R6|52-70
34842|code|LDR             R6, [R7,#0x994+var_984]|62-105
34844|code|MOV             R0, R5|40-70
34846|code|MOV             R12, R9|204-70
34848|code|LDR             R3, [R7,#0x994+var_960]|123-107
34850|code|LDR             R5, [R7,#0x994+shortopts]|61-107
34852|code|LDR             R2, [R7,#0x994+s]|58-104
34854|code|ADD.W           R12, R3, R12,LSL#2|3-235-140-12
34858|code|ADD.W           R3, R7, #0x70 ; 'p'|7-241-112-3
34862|code|STR.W           R2, [R12],#4|76-248-4-43
34866|code|CMP             R12, R3|156-69
34868|code|BNE             loc_882E|251-209
34870|code|STR             R5, [R7,#0x994+shortopts]|61-99
34872|code|B               loc_84DE|81-230
34874|code|LDR             R3, [R7,#0x994+var_978]|251-105
34876|code|MOV             R4, R6|52-70
34878|code|MOV             R0, R5|40-70
34880|code|MOV             R12, R9|204-70
34882|code|SUBS            R3, R3, R5|91-27
34884|code|LDR             R6, [R7,#0x994+var_984]|62-105
34886|code|STR             R3, [R7,#0x994+var_97C]|187-97
34888|code|B               loc_8820|234-231
34890|code|STR             R4, [R7,#0x994+var_968]|252-98
34892|code|STR             R4, [R7,#0x994+var_970]|124-98
34894|code|B               loc_8202|216-228
34896|code|MOV             R0, R4; name|32-70
34898|code|BLX             getenv|254-247-122-232
34902|code|CMP             R0, #0|0-40
34904|code|BEQ.W           loc_7E34|63-244-236-170
34908|code|ADD.W           R4, R7, #0x70 ; 'p'|7-241-112-4
34912|code|MOVS            R1, #0x2C ; ','; c|44-33
34914|code|STR.W           R8, [R4]|196-248-0-128
34918|code|MOV             R2, R4|34-70
34920|code|BL              splitString|1-240-128-254
34924|code|LDR.W           R3, [R10,#4]|218-248-4-48
34928|code|MOV             R9, R0|129-70
34930|code|CMP             R3, #0|0-43
34932|code|BNE.W           loc_858A|127-244-137-174
34936|code|BL              deallocateStrings|1-240-104-254
34940|code|B.W             loc_7E34|255-247-218-186
34944|code|LDR             R2, [R7,#0x994+var_944]|58-109
34946|code|LDR             R3, [R6]|51-104
34948|code|LDR             R0, [R2]|16-104
34950|code|LDR             R2, [R7,#0x994+var_940]|122-109
34952|code|LDR             R1, [R2]|17-104
34954|code|B.W             loc_7DE4|255-247-171-186
34958|code|BLX             __stack_chk_fail|253-247-210-238
34962|code|BL              deallocateStrings|1-240-91-254
34966|code|B               loc_85E2|164-230
34968|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x88A0)|49-75
34970|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|50-74
34972|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
34974|code|PUSH.W          {R4-R11,LR}|45-233-240-79
34978|code|SUB.W           SP, SP, #0x1000|173-245-128-93
34982|code|LDR.W           R9, [R3,R2]; __stack_chk_guard|83-248-2-144
34986|code|SUB             SP, SP, #0xC|131-176
34988|code|ADD.W           R2, SP, #0x1030+var_30|13-245-128-82
34992|code|MOV             R6, R0|6-70
34994|code|ADDS            R2, #4|4-50
34996|code|LDR.W           R3, [R9]|217-248-0-48
35000|code|STR             R3, [R2]|19-96
35002|code|BLX             strlen|253-247-110-239
35006|code|MOV             R4, R0|4-70
35008|code|MOVS            R0, #1; nmemb|1-32
35010|code|MOV             R1, R0; size|1-70
35012|code|BLX             calloc|253-247-24-239
35016|code|MOV             R7, R0|7-70
35018|code|CMP             R0, #0|0-40
35020|code|BEQ             loc_894E|63-208
35022|code|LDR             R0, =(aProcCmdline - 0x88D6); "/proc/cmdline"|38-72
35024|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x88D8); "r"|38-73
35026|code|ADD             R0, PC; "/proc/cmdline"|120-68
35028|code|ADD             R1, PC; "r" ; modes|121-68
35030|code|BLX             fopen|253-247-20-238
35034|code|MOV             R8, R0|128-70
35036|code|CBZ             R0, loc_891C|240-177
35038|code|ADD             R0, SP, #0x1030+s; s|1-168
35040|code|MOV.W           R1, #0x1000; n|79-244-128-81
35044|code|MOV             R2, R8; stream|66-70
35046|code|BLX             fgets|253-247-32-239
35050|code|CBZ             R0, loc_8916|160-177
35052|code|LDR             R5, =(asc_11798 - 0x88F6); " \n"|32-77
35054|code|ADD.W           R10, R4, #1|4-241-1-10
35058|code|ADD             R5, PC; " \n"|125-68
35060|code|B               loc_890A|9-224
35062|code|MOV             R1, R6; s2|49-70
35064|code|MOV             R2, R4; n|34-70
35066|code|BLX             strncmp|253-247-62-237
35070|code|CBNZ            R0, loc_8908|24-185
35072|code|LDRB.W          R3, [R11,R4]|27-248-4-48
35076|code|CMP             R3, #0x3D ; '='|61-43
35078|code|BEQ             loc_8938|23-208
35080|code|MOVS            R0, #0; s|0-32
35082|code|MOV             R1, R5; delim|41-70
35084|code|BLX             strtok|253-247-106-237
35088|code|MOV             R11, R0|131-70
35090|code|CMP             R0, #0|0-40
35092|code|BNE             loc_88F6|239-209
35094|code|MOV             R0, R8; stream|64-70
35096|code|BLX             fclose|253-247-100-239
35100|code|ADD.W           R3, SP, #0x1030+var_30|13-245-128-83
35104|code|MOV             R0, R7|56-70
35106|code|ADDS            R3, #4|4-51
35108|code|LDR             R2, [R3]|26-104
35110|code|LDR.W           R3, [R9]|217-248-0-48
35114|code|CMP             R2, R3|154-66
35116|code|BNE             loc_895A|21-209
35118|code|ADD.W           SP, SP, #0x1000|13-245-128-93
35122|code|ADD             SP, SP, #0xC|3-176
35124|code|POP.W           {R4-R11,PC}|189-232-240-143
35128|code|ADD.W           R0, R11, R10|11-235-10-0
35132|code|BLX             __strdup|253-247-200-237
35136|code|MOV             R3, R0|3-70
35138|code|CBZ             R0, loc_8954|56-177
35140|code|MOV             R0, R7; ptr|56-70
35142|code|MOV             R7, R3|31-70
35144|code|BLX             free|253-247-252-236
35148|code|B               loc_8908|220-231
35150|code|BL              logMallocError|0-240-5-252
35154|code|B               loc_891C|227-231
35156|code|BL              logMallocError|0-240-2-252
35160|code|B               loc_8908|214-231
35162|code|BLX             __stack_chk_fail|253-247-108-238
35166|data|ALIGN 0x10|0-191
35168|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x88A0|52-196-1-0
35172|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
35176|data|DCD aProcCmdline - 0x88D6; "/proc/cmdline"|178-142-0-0
35180|data|DCD aInvalidUnicode+0x18 - 0x88D8; "r"|148-168-0-0
35184|data|DCD asc_11798 - 0x88F6; " \n"|162-142-0-0
35188|code|PUSH            {R4,R5,LR}|48-181
35190|code|SUB             SP, SP, #0xC|131-176
35192|code|LDR             R5, [R3]|29-104
35194|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
35198|code|STR             R2, [SP,#0x18+var_18]|0-146
35200|code|MOVS            R2, #1|1-34
35202|code|MOV             R4, R1|12-70
35204|code|STR             R5, [SP,#0x18+var_14]|1-149
35206|code|BLX             __vsnprintf_chk|253-247-22-237
35210|code|CMP             R0, #0|0-40
35212|code|IT LT|184-191
35214|code|MOVLT           R0, #0|0-32
35216|code|BLT             loc_8998|2-219
35218|code|CMP             R0, R4|160-66
35220|code|IT CS|40-191
35222|code|MOVCS           R0, R4|32-70
35224|code|ADD             SP, SP, #0xC|3-176
35226|code|POP             {R4,R5,PC}|48-189
35228|code|LDM             R2, {R2,R3}|12-202
35230|code|B               sub_8974|233-231
35232|code|PUSH.W          {R4-R11,LR}|45-233-240-79
35236|code|MOVS            R3, #0|0-35
35238|code|LDR             R5, [R2,#8]|149-104
35240|code|MOV             R6, R2|22-70
35242|code|LDR             R7, [R2,#0xC]|215-104
35244|code|SUB             SP, SP, #0xC|131-176
35246|code|STRB            R3, [R0]|3-112
35248|code|MOV             R10, R0|130-70
35250|code|LDR             R2, [R2]|18-104
35252|code|ADD.W           R11, R0, R1|0-235-1-11
35256|code|ADD             R7, R5|47-68
35258|code|MOV             R4, R0|4-70
35260|code|CBZ             R2, loc_89E4|146-177
35262|code|LDR             R3, [R6,#4]|115-104
35264|code|BL              sub_8974|255-247-216-255
35268|code|LDR             R2, =(asc_117A8 - 0x89CA); ": "|31-74
35270|code|ADD             R2, PC; ": "|122-68
35272|code|ADD             R0, R10|80-68
35274|code|CMP             R0, R11|88-69
35276|code|IT CS|40-191
35278|code|MOVCS           R0, R11; s|88-70
35280|code|RSB.W           R1, R0, R11; maxlen|192-235-11-1
35284|code|MOV             R4, R0|4-70
35286|code|BLX             snprintf|253-247-118-237
35290|code|ADD             R0, R4|32-68
35292|code|CMP             R0, R11|88-69
35294|code|IT CS|40-191
35296|code|MOVCS           R0, R11|88-70
35298|code|MOV             R4, R0|4-70
35300|code|CMP             R5, R7|189-66
35302|code|BCS             loc_8A3A|40-210
35304|code|LDR.W           R9, =(aS_1+4 - 0x89F4); " "|223-248-92-144
35308|code|LDR.W           R8, =(a22x - 0x89F6); "%2.2X"|223-248-92-128
35312|code|ADD             R9, PC; " "|249-68
35314|code|ADD             R8, PC; "%2.2X"|248-68
35316|code|LDR             R3, [R6,#8]|179-104
35318|code|RSB.W           R1, R4, R11; maxlen|196-235-11-1
35322|code|MOV             R0, R4; s|32-70
35324|code|MOV             R2, R9; format|74-70
35326|code|CMP             R3, R5|171-66
35328|code|BEQ             loc_8A10|6-208
35330|code|BLX             snprintf|253-247-96-237
35334|code|ADD             R0, R4|32-68
35336|code|CMP             R0, R11|88-69
35338|code|IT CS|40-191
35340|code|MOVCS           R0, R11|88-70
35342|code|MOV             R4, R0|4-70
35344|code|STR.W           R8, [SP,#0x30+var_30]|205-248-0-128
35348|code|RSB.W           R1, R4, R11|196-235-11-1
35352|code|LDRB.W          LR, [R5],#1|21-248-1-235
35356|code|MOV             R0, R4|32-70
35358|code|MOVS            R2, #1|1-34
35360|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
35364|code|STR.W           LR, [SP,#0x30+var_2C]|205-248-4-224
35368|code|BLX             __snprintf_chk|253-247-188-238
35372|code|ADD             R0, R4|32-68
35374|code|CMP             R0, R11|88-69
35376|code|IT CS|40-191
35378|code|MOVCS           R0, R11|88-70
35380|code|CMP             R5, R7|189-66
35382|code|MOV             R4, R0|4-70
35384|code|BNE             loc_89F4|220-209
35386|code|RSB.W           R0, R10, R4|202-235-4-0
35390|code|ADD             SP, SP, #0xC|3-176
35392|code|POP.W           {R4-R11,PC}|189-232-240-143
35396|data|DCD asc_117A8 - 0x89CA; ": "|222-141-0-0
35400|data|DCD aS_1+4 - 0x89F4; " "|248-141-0-0
35404|data|DCD a22x - 0x89F6; "%2.2X"|182-141-0-0
35408|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8A5A)|51-75
35410|code|PUSH.W          {R4-R11,LR}|45-233-240-79
35414|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
35416|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|50-76
35418|code|SUB             SP, SP, #0x14|133-176
35420|code|MOV             R8, R2|144-70
35422|code|ADD             R2, SP, #0x38+var_28|4-170
35424|code|MOV             R6, R0|6-70
35426|code|MOV             R10, R1|138-70
35428|code|LDR             R7, [R3,R4]; __stack_chk_guard|31-89
35430|code|ADDS            R5, R6, R1|117-24
35432|code|MOV.W           R11, #0|79-240-0-11
35436|code|LDR.W           R0, [R8]|216-248-0-0
35440|code|STR.W           R11, [R2,#-8]!|66-248-8-189
35444|code|MOV             R1, R2|17-70
35446|code|LDR             R3, [R7]|59-104
35448|code|STR             R3, [SP,#0x38+var_2C]|3-147
35450|code|BL              getAddressName|0-240-177-252
35454|code|STRB.W          R11, [R6]|134-248-0-176
35458|code|MOV             R1, R10|81-70
35460|code|LDR.W           R2, [R8,#4]|216-248-4-32
35464|code|LDR.W           R3, [R8,#8]|216-248-8-48
35468|code|MOV             R9, R0|129-70
35470|code|MOV             R0, R6|48-70
35472|code|BL              sub_8974|255-247-112-255
35476|code|LDR             R2, =(asc_117A8 - 0x8A9A); ": "|36-74
35478|code|ADD             R2, PC; ": "|122-68
35480|code|ADD             R0, R6|48-68
35482|code|CMP             R0, R5|168-66
35484|code|IT CS|40-191
35486|code|MOVCS           R0, R5; s|40-70
35488|code|SUBS            R1, R5, R0; maxlen|41-26
35490|code|MOV             R4, R0|4-70
35492|code|BLX             snprintf|253-247-14-237
35496|code|ADD             R0, R4|32-68
35498|code|CMP             R0, R5|168-66
35500|code|IT CS|40-191
35502|code|MOVCS           R0, R5; s|40-70
35504|code|MOV             R4, R0|4-70
35506|code|CMP.W           R9, #0|185-241-0-15
35510|code|BEQ             loc_8ABE|2-208
35512|code|LDRB.W          R3, [R9]|153-248-0-48
35516|code|CBNZ            R3, loc_8AF6|219-185
35518|code|LDR.W           LR, =(aP - 0x8ACC); "%p"|223-248-108-224
35522|code|MOV             R0, R4|32-70
35524|code|LDR.W           R3, [R8]|216-248-0-48
35528|code|ADD             LR, PC; "%p"|254-68
35530|code|STR             R3, [SP,#0x38+var_34]|1-147
35532|code|SUBS            R1, R5, R4|41-27
35534|code|MOVS            R2, #1|1-34
35536|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
35540|code|STR.W           LR, [SP,#0x38+var_38]|205-248-0-224
35544|code|BLX             __snprintf_chk|253-247-100-238
35548|code|ADD             R0, R4|32-68
35550|code|CMP             R0, R5|168-66
35552|code|IT CS|40-191
35554|code|MOVCS           R0, R5|40-70
35556|code|MOV             R4, R0|4-70
35558|code|LDR             R2, [SP,#0x38+var_2C]|3-154
35560|code|SUBS            R0, R4, R6|160-27
35562|code|LDR             R3, [R7]|59-104
35564|code|CMP             R2, R3|154-66
35566|code|BNE             loc_8B1C|21-209
35568|code|ADD             SP, SP, #0x14|5-176
35570|code|POP.W           {R4-R11,PC}|189-232-240-143
35574|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x8B00); "%s"|14-74
35576|code|MOV             R3, R9|75-70
35578|code|SUBS            R1, R5, R0; maxlen|41-26
35580|code|ADD             R2, PC; "%s" ; format|122-68
35582|code|BLX             snprintf|253-247-226-236
35586|code|LDR             R3, [SP,#0x38+var_30]|2-155
35588|code|ADD             R0, R4|32-68
35590|code|CMP             R0, R5|168-66
35592|code|IT CS|40-191
35594|code|MOVCS           R0, R5|40-70
35596|code|MOV             R4, R0|4-70
35598|code|CMP             R3, #0|0-43
35600|code|BEQ             loc_8AE6|233-208
35602|code|LDR.W           LR, =(aX - 0x8B1C); "+%X"|223-248-32-224
35606|code|STR             R3, [SP,#0x38+var_34]|1-147
35608|code|ADD             LR, PC; "+%X"|254-68
35610|code|B               loc_8ACC|215-231
35612|code|BLX             __stack_chk_fail|253-247-138-237
35616|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8A5A|122-194-1-0
35620|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
35624|data|DCD asc_117A8 - 0x8A9A; ": "|14-141-0-0
35628|data|DCD aP - 0x8ACC; "%p"|236-140-0-0
35632|data|DCD aCheckingSDevic+0x14 - 0x8B00; "%s"|132-146-0-0
35636|data|DCD aX - 0x8B1C; "+%X"|152-140-0-0
35640|code|CMP             R0, #0x10|16-40
35642|code|BHI             loc_8B4C|7-216
35644|code|LDR             R3, =(off_248D8 - 0x8B46); "ingio"|6-75
35646|code|ADD.W           R0, R0, R0,LSL#1|0-235-64-0
35650|code|ADD             R3, PC; off_248D8|123-68
35652|code|LDR.W           R0, [R3,R0,LSL#2]|83-248-32-0
35656|code|CBZ             R0, loc_8B52|24-177
35658|code|BX              LR|112-71
35660|code|LDR             R0, =(aS_0+4 - 0x8B52); ""|3-72
35662|code|ADD             R0, PC; ""|120-68
35664|code|BX              LR|112-71
35666|code|LDR             R0, =(aS_0+4 - 0x8B58); ""|3-72
35668|code|ADD             R0, PC; ""|120-68
35670|code|B               locret_8B4A|248-231
35672|data|DCD off_248D8 - 0x8B46; "ingio"|146-189-1-0
35676|data|DCD aS_0+4 - 0x8B52; ""|114-140-0-0
35680|data|DCD aS_0+4 - 0x8B58; ""|108-140-0-0
35684|code|CMP             R0, #0x10|16-40
35686|code|BHI             loc_8B7A|8-216
35688|code|LDR             R3, =(off_248D8 - 0x8B72); "ingio"|7-75
35690|code|ADD.W           R0, R0, R0,LSL#1|0-235-64-0
35694|code|ADD             R3, PC; off_248D8|123-68
35696|code|ADD.W           R0, R3, R0,LSL#2|3-235-128-0
35700|code|LDR             R0, [R0,#4]|64-104
35702|code|CBZ             R0, loc_8B80|24-177
35704|code|BX              LR|112-71
35706|code|LDR             R0, =(aS_0+4 - 0x8B80); ""|4-72
35708|code|ADD             R0, PC; ""|120-68
35710|code|BX              LR|112-71
35712|code|LDR             R0, =(aS_0+4 - 0x8B86); ""|3-72
35714|code|ADD             R0, PC; ""|120-68
35716|code|B               locret_8B78|248-231
35718|data|ALIGN 4|0-191
35720|data|DCD off_248D8 - 0x8B72; "ingio"|102-189-1-0
35724|data|DCD aS_0+4 - 0x8B80; ""|68-140-0-0
35728|data|DCD aS_0+4 - 0x8B86; ""|62-140-0-0
35732|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8BA6)|12-75
35734|code|MOVW            R0, #0xAAAB|74-246-171-32
35738|code|LDR             R1, =(off_248D8 - 0x8BA8); "ingio"|12-73
35740|code|MOVT.W          R0, #0xAAAA|202-246-170-32
35744|code|LDR             R2, =(logCategoryFlags_ptr - 0x24CD4)|11-74
35746|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
35748|code|ADD             R1, PC; off_248D8|121-68
35750|code|PUSH            {R4-R6}|112-180
35752|code|ADD.W           R4, R1, #0xCC|1-241-204-4
35756|code|LDR             R5, [R3,R2]; logCategoryFlags|157-88
35758|code|MOVS            R6, #0|0-38
35760|code|MOV             R2, R1|10-70
35762|code|SUBS            R3, R2, R1|83-26
35764|code|ADDS            R2, #0xC|12-50
35766|code|CMP             R2, R4|162-66
35768|code|MOV.W           R3, R3,ASR#2|79-234-163-3
35772|code|MUL.W           R3, R0, R3|0-251-3-243
35776|code|STRB            R6, [R5,R3]|238-84
35778|code|BCC             loc_8BB2|246-211
35780|code|POP             {R4-R6}|112-188
35782|code|BX              LR|112-71
35784|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8BA6|46-193-1-0
35788|data|DCD off_248D8 - 0x8BA8; "ingio"|48-189-1-0
35792|data|DCD logCategoryFlags_ptr - 0x24CD4|112-2-0-0
35796|code|PUSH.W          {R3-R11,LR}|45-233-248-79
35800|code|MOV             R9, R0|129-70
35802|code|LDRB            R3, [R0]|3-120
35804|code|MOVW            R8, #0xAAAB|74-246-171-40
35808|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x8BEE)|32-79
35810|code|MOVT.W          R8, #0xAAAA|202-246-170-40
35814|code|CMP             R3, #0x2D ; '-'|45-43
35816|code|LDR             R3, =(logCategoryName_all_ptr - 0x24CD4)|31-75
35818|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
35820|code|ITTE EQ|6-191
35822|code|ADDEQ.W         R9, R0, #1|0-241-1-9
35826|code|MOVEQ           R6, #0|0-38
35828|code|MOVNE           R6, #1|1-38
35830|code|MOV             R0, R9; s1|72-70
35832|code|LDR             R1, [R7,R3]; logCategoryName_all_ptr ...|249-88
35834|code|BLX             strcasecmp|253-247-144-235
35838|code|LDR.W           R10, =(off_248D8 - 0x8C0C); "ingio"|223-248-108-160
35842|code|LDR             R4, =(off_248D8 - 0x8C0E); "ingio"|27-76
35844|code|LDR.W           R11, =(off_248D8 - 0x8C14); "ingio"|223-248-108-176
35848|code|ADD             R10, PC; off_248D8|250-68
35850|code|ADD             R4, PC; off_248D8|124-68
35852|code|ADD.W           R10, R10, #0xCC|10-241-204-10
35856|code|ADD             R11, PC; off_248D8|251-68
35858|code|CLZ.W           R5, R0|176-250-128-245
35862|code|LSRS            R5, R5, #5|109-9
35864|code|MOV             R0, R9; s1|72-70
35866|code|RSB.W           R3, R11, R4|203-235-4-3
35870|code|LDR             R2, =(logCategoryFlags_ptr - 0x24CD4)|22-74
35872|code|CBNZ            R5, loc_8C4E|173-185
35874|code|LDR             R3, [R4]; "ingio"|35-104
35876|code|MOV             R1, R3; s2|25-70
35878|code|CBZ             R3, loc_8C58|187-177
35880|code|BLX             strcasecmp|253-247-120-235
35884|code|CBNZ            R0, loc_8C58|160-185
35886|code|LDR             R1, =(off_248D8 - 0x8C3E); "ingio"|19-73
35888|code|MOV             R3, #0xAAAAAAAB|74-246-171-35-202-246-170-35
35896|code|LDR             R2, =(logCategoryFlags_ptr - 0x24CD4)|15-74
35898|code|ADD             R1, PC; off_248D8|121-68
35900|code|MOVS            R0, #1|1-32
35902|code|SUBS            R4, R4, R1|100-26
35904|code|LDR             R2, [R7,R2]; logCategoryFlags|186-88
35906|code|ASRS            R4, R4, #2|164-16
35908|code|MUL.W           R4, R3, R4|3-251-4-244
35912|code|STRB            R6, [R2,R4]|22-85
35914|code|POP.W           {R3-R11,PC}|189-232-248-143
35918|code|ASRS            R3, R3, #2|155-16
35920|code|LDR             R2, [R7,R2]; logCategoryFlags|186-88
35922|code|MUL.W           R3, R8, R3|8-251-3-243
35926|code|STRB            R6, [R2,R3]|214-84
35928|code|ADDS            R4, #0xC|12-52
35930|code|CMP             R4, R10|84-69
35932|code|BCC             loc_8C18|220-211
35934|code|MOV             R0, R5|40-70
35936|code|POP.W           {R3-R11,PC}|189-232-248-143
35940|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8BEE|230-192-1-0
35944|data|DCD logCategoryName_all_ptr - 0x24CD4|168-2-0-0
35948|data|DCD off_248D8 - 0x8C0C; "ingio"|204-188-1-0
35952|data|DCD off_248D8 - 0x8C0E; "ingio"|202-188-1-0
35956|data|DCD off_248D8 - 0x8C14; "ingio"|196-188-1-0
35960|data|DCD logCategoryFlags_ptr - 0x24CD4|112-2-0-0
35964|data|DCD off_248D8 - 0x8C3E; "ingio"|154-188-1-0
35968|code|PUSH            {R3-R5,LR}|56-181
35970|code|MOV             R5, R0|5-70
35972|code|MOVS            R0, #8; size|8-32
35974|code|BLX             malloc|253-247-128-237
35978|code|MOV             R4, R0|4-70
35980|code|CBZ             R0, locret_8CB0|128-177
35982|code|MOVS            R3, #0|0-35
35984|code|STR             R3, [R0]|3-96
35986|code|STR             R3, [R0,#4]|67-96
35988|code|CBZ             R5, loc_8CB2|109-177
35990|code|MOV             R0, R5|40-70
35992|code|BLX             __strdup|253-247-26-236
35996|code|MOV             R5, R0|5-70
35998|code|STR             R0, [R4,#4]|96-96
36000|code|CBZ             R0, loc_8CB8|80-177
36002|code|LDR             R3, =(dword_25068 - 0x8CAA)|8-75
36004|code|MOVS            R0, #1|1-32
36006|code|ADD             R3, PC; dword_25068|123-68
36008|code|LDR             R2, [R3]|26-104
36010|code|STR             R4, [R3]|28-96
36012|code|STR             R2, [R4]|34-96
36014|code|POP             {R3-R5,PC}|56-189
36016|code|POP             {R3-R5,PC}|56-189
36018|code|LDR             R5, =(aS_0+4 - 0x8CB8); ""|5-77
36020|code|ADD             R5, PC; ""|125-68
36022|code|B               loc_8C96|238-231
36024|code|MOV             R0, R4; ptr|32-70
36026|code|BLX             free|253-247-68-235
36030|code|MOV             R0, R5|40-70
36032|code|POP             {R3-R5,PC}|56-189
36034|data|ALIGN 4|0-191
36036|data|DCD dword_25068 - 0x8CAA|190-195-1-0
36040|data|DCD aS_0+4 - 0x8CB8; ""|12-139-0-0
36044|code|LDR             R3, =(dword_25068 - 0x8CD4)|9-75
36046|code|PUSH            {R4,LR}|16-181
36048|code|ADD             R3, PC; dword_25068|123-68
36050|code|LDR             R4, [R3]|28-104
36052|code|CBZ             R4, loc_8CEE|92-177
36054|code|LDR             R2, [R4]|34-104
36056|code|MOVS            R1, #0|0-33
36058|code|LDR             R0, [R4,#4]; ptr|96-104
36060|code|STR             R1, [R4]|33-96
36062|code|STR             R2, [R3]|26-96
36064|code|BLX             free|253-247-48-235
36068|code|MOV             R0, R4; ptr|32-70
36070|code|BLX             free|253-247-46-235
36074|code|MOVS            R0, #1|1-32
36076|code|POP             {R4,PC}|16-189
36078|code|MOV             R0, R4|32-70
36080|code|POP             {R4,PC}|16-189
36082|data|ALIGN 4|0-191
36084|data|DCD dword_25068 - 0x8CD4|148-195-1-0
36088|code|PUSH            {R4,LR}|16-181
36090|code|LDR             R4, =(dword_25068 - 0x8D00)|4-76
36092|code|ADD             R4, PC; dword_25068|124-68
36094|code|LDR             R0, [R4,#(dword_2506C - 0x25068)]; stream|96-104
36096|code|CBZ             R0, locret_8D0A|24-177
36098|code|BLX             fclose|253-247-112-237
36102|code|MOVS            R3, #0|0-35
36104|code|STR             R3, [R4,#(dword_2506C - 0x25068)]|99-96
36106|code|POP             {R4,PC}|16-189
36108|data|DCD dword_25068 - 0x8D00|104-195-1-0
36112|code|PUSH            {R4,LR}|16-181
36114|code|MOV             R4, R0|4-70
36116|code|BL              closeLogFile|255-247-240-255
36120|code|LDR             R1, =(aW - 0x8D20); "w"|4-73
36122|code|MOV             R0, R4; filename|32-70
36124|code|ADD             R1, PC; "w"|121-68
36126|code|BLX             fopen|253-247-240-235
36130|code|LDR             R3, =(dword_25068 - 0x8D28)|3-75
36132|code|ADD             R3, PC; dword_25068|123-68
36134|code|STR             R0, [R3,#(dword_2506C - 0x25068)]|88-96
36136|code|POP             {R4,PC}|16-189
36138|data|ALIGN 4|0-191
36140|data|DCD aW - 0x8D20; "w"|156-138-0-0
36144|data|DCD dword_25068 - 0x8D28|64-195-1-0
36148|code|PUSH            {R4,LR}|16-181
36150|code|LDR             R4, =(dword_25068 - 0x8D3C)|6-76
36152|code|ADD             R4, PC; dword_25068|124-68
36154|code|LDR             R3, [R4,#(dword_25070 - 0x25068)]|163-104
36156|code|CBNZ            R3, locret_8D4E|59-185
36158|code|LDR             R0, =(aBrltty - 0x8D48); "brltty"|5-72
36160|code|MOVS            R1, #1; option|1-33
36162|code|MOVS            R2, #0x18; facility|24-34
36164|code|ADD             R0, PC; "brltty"|120-68
36166|code|BLX             openlog|253-247-244-237
36170|code|MOVS            R3, #1|1-35
36172|code|STR             R3, [R4,#(dword_25070 - 0x25068)]|163-96
36174|code|POP             {R4,PC}|16-189
36176|data|DCD dword_25068 - 0x8D3C|44-195-1-0
36180|data|DCD aBrltty - 0x8D48; "brltty"|24-135-0-0
36184|code|PUSH            {R4,LR}|16-181
36186|code|LDR             R4, =(dword_25068 - 0x8D60)|4-76
36188|code|ADD             R4, PC; dword_25068|124-68
36190|code|LDR             R3, [R4,#(dword_25070 - 0x25068)]|163-104
36192|code|CBZ             R3, locret_8D6A|27-177
36194|code|BLX             closelog|253-247-138-235
36198|code|MOVS            R3, #0|0-35
36200|code|STR             R3, [R4,#(dword_25070 - 0x25068)]|163-96
36202|code|POP             {R4,PC}|16-189
36204|data|DCD dword_25068 - 0x8D60|8-195-1-0
36208|code|PUSH.W          {R4-R11,LR}|45-233-240-79
36212|code|SUB.W           SP, SP, #0x1060|173-245-131-93
36216|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8D84)|145-76
36218|code|SUB             SP, SP, #0x14|133-176
36220|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|145-75
36222|code|MOV             R10, R2|146-70
36224|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
36226|code|STR             R1, [SP,#0x1098+var_1088]|4-145
36228|code|ADD.W           R2, SP, #0x1098+var_38|13-245-131-82
36232|code|MOV             R5, R0|5-70
36234|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
36236|code|ADDS            R2, #0xC|12-50
36238|code|STR             R3, [SP,#0x1098+var_108C]|3-147
36240|code|LDR             R3, [R3]|27-104
36242|code|STR             R3, [R2]|19-96
36244|code|ANDS.W          R2, R0, #0x80|16-240-128-2
36248|code|BEQ             loc_8E5E|97-208
36250|code|LDR             R3, =(logCategoryFlags_ptr - 0x24CD4)|139-75
36252|code|AND.W           R5, R0, #0x7F|0-240-127-5
36256|code|LDR             R3, [R4,R3]; logCategoryFlags|227-88
36258|code|LDRB            R3, [R3,R5]|91-93
36260|code|CMP             R3, #0|0-43
36262|code|BEQ             loc_8E42|76-208
36264|code|LDR             R1, =(categoryLogLevel_ptr - 0x24CD4)|136-73
36266|code|ADD.W           R7, R5, R5,LSL#1|5-235-69-7
36270|code|LDR             R2, =(systemLogLevel_ptr - 0x24CD4)|136-74
36272|code|LDR             R3, =(stderrLogLevel_ptr - 0x24CD4)|136-75
36274|code|LDR             R0, [R4,R1]; categoryLogLevel|96-88
36276|code|LDR             R1, [R4,R2]; systemLogLevel|161-88
36278|code|LDR             R2, [R4,R3]; stderrLogLevel|226-88
36280|code|LDR             R3, =(off_248D8 - 0x8DC2); "ingio"|135-75
36282|code|LDRB            R6, [R1]|14-120
36284|code|LDRB            R5, [R0]|5-120
36286|code|ADD             R3, PC; off_248D8|123-68
36288|code|ADD.W           R3, R3, R7,LSL#2|3-235-135-3
36292|code|LDRB            R7, [R2]|23-120
36294|code|CMP             R5, R6|181-66
36296|code|LDR             R3, [R3,#8]|155-104
36298|code|ITE GT|204-191
36300|code|MOVGT           R6, #0|0-38
36302|code|MOVLE           R6, #1|1-38
36304|code|CMP             R5, R7|189-66
36306|code|STR             R3, [SP,#0x1098+var_1080]|6-147
36308|code|ITE GT|204-191
36310|code|MOVGT           R7, #0|0-39
36312|code|MOVLE           R7, #1|1-39
36314|code|ORRS.W          R3, R7, R6|87-234-6-3
36318|code|BEQ             loc_8E42|48-208
36320|code|BLX             __errno_location|253-247-88-237
36324|code|ADD.W           R9, SP, #0x1098+var_1028|13-241-112-9
36328|code|SUB.W           R8, R9, #4|169-241-4-8
36332|code|MOVS            R2, #0|0-34
36334|code|STRB.W          R2, [R9,#-4]|9-248-4-44
36338|code|LDR             R3, [R0]|3-104
36340|code|MOV             R11, R0|131-70
36342|code|MOV             R0, R8|64-70
36344|code|STR             R3, [SP,#0x1098+var_1084]|5-147
36346|code|LDR             R3, [SP,#0x1098+var_1080]|6-155
36348|code|CBZ             R3, loc_8E26|155-177
36350|code|LDR.W           LR, =(aS_0 - 0x8E0E); "%s: "|223-248-220-225
36354|code|MOV.W           R1, #0x1000|79-244-128-81
36358|code|STR             R3, [SP,#0x1098+var_1094]|1-147
36360|code|MOV             R0, R8|64-70
36362|code|ADD             LR, PC; "%s: "|254-68
36364|code|MOV             R3, R1|11-70
36366|code|MOVS            R2, #1|1-34
36368|code|STR.W           LR, [SP,#0x1098+var_1098]|205-248-0-224
36372|code|BLX             __snprintf_chk|253-247-198-236
36376|code|ADD.W           R3, SP, #0x1098+var_38|13-245-131-83
36380|code|ADDS            R3, #0xC|12-51
36382|code|ADD             R0, R8|64-68
36384|code|CMP             R0, R3|152-66
36386|code|IT CS|40-191
36388|code|MOVCS           R0, R3|24-70
36390|code|ADDW            R1, R9, #0xFFC|9-246-252-113
36394|code|MOV             R2, R10|82-70
36396|code|SUBS            R1, R1, R0|9-26
36398|code|LDR             R3, [SP,#0x1098+var_1088]|4-155
36400|code|BLX             R3|152-71
36402|code|CMP             R6, #0|0-46
36404|code|BNE             loc_8E9E|51-209
36406|code|CMP             R7, #0|0-47
36408|code|BNE.W           loc_8F5A|64-240-143-128
36412|code|LDR             R3, [SP,#0x1098+var_1084]|5-155
36414|code|STR.W           R3, [R11]|203-248-0-48
36418|code|ADD.W           R3, SP, #0x1098+var_38|13-245-131-83
36422|code|ADDS            R3, #0xC|12-51
36424|code|LDR             R2, [R3]|26-104
36426|code|LDR             R3, [SP,#0x1098+var_108C]|3-155
36428|code|LDR             R3, [R3]|27-104
36430|code|CMP             R2, R3|154-66
36432|code|BNE.W           loc_8FBA|64-240-179-128
36436|code|ADD.W           SP, SP, #0x1060|13-245-131-93
36440|code|ADD             SP, SP, #0x14|5-176
36442|code|POP.W           {R4-R11,PC}|189-232-240-143
36446|code|LDR             R1, =(systemLogLevel_ptr - 0x24CD4)|92-73
36448|code|LDR             R3, =(stderrLogLevel_ptr - 0x24CD4)|92-75
36450|code|LDR             R1, [R4,R1]; systemLogLevel|97-88
36452|code|LDR             R3, [R4,R3]; stderrLogLevel|227-88
36454|code|LDRB            R6, [R1]|14-120
36456|code|LDRB            R7, [R3]|31-120
36458|code|CMP             R0, R6|176-66
36460|code|ITE GT|204-191
36462|code|MOVGT           R6, #0|0-38
36464|code|MOVLE           R6, #1|1-38
36466|code|CMP             R0, R7|184-66
36468|code|ITE GT|204-191
36470|code|MOVGT           R7, #0|0-39
36472|code|MOVLE           R7, #1|1-39
36474|code|ORRS.W          R3, R7, R6|87-234-6-3
36478|code|BEQ             loc_8E42|224-208
36480|code|STR             R2, [SP,#0x1098+var_1084]|5-146
36482|code|BLX             __errno_location|253-247-8-237
36486|code|ADD.W           R9, SP, #0x1098+var_1028|13-241-112-9
36490|code|LDR             R2, [SP,#0x1098+var_1084]|5-154
36492|code|SUB.W           R8, R9, #4|169-241-4-8
36496|code|STRB.W          R2, [R9,#-4]|9-248-4-44
36500|code|LDR             R3, [R0]|3-104
36502|code|MOV             R11, R0|131-70
36504|code|MOV             R0, R8|64-70
36506|code|STR             R3, [SP,#0x1098+var_1084]|5-147
36508|code|B               loc_8E26|195-231
36510|code|LDR.W           R10, =(dword_25068 - 0x8EA6)|223-248-64-161
36514|code|ADD             R10, PC; dword_25068|250-68
36516|code|LDR.W           R0, [R10,#(dword_2506C - 0x25068)]; stream|218-248-4-0
36520|code|CMP             R0, #0|0-40
36522|code|BEQ             loc_8F3A|70-208
36524|code|ADD             R2, SP, #0x1098+var_106C|11-170
36526|code|ADD.W           R9, SP, #0x1098+var_1074|13-241-36-9
36530|code|ADD             R3, SP, #0x1098+var_1068|12-171
36532|code|STR             R3, [SP,#0x1098+var_1088]|4-147
36534|code|MOV             R6, R2|22-70
36536|code|BLX             flockfile|253-247-72-236
36540|code|MOV             R0, R9|72-70
36542|code|BL              getCurrentTime|1-240-181-254
36546|code|LDR             R3, [SP,#0x1098+var_1088]|4-155
36548|code|LDR             R2, =(aYMDHMS - 0x8ED4); "%Y-%m-%d@%H:%M:%S"|71-74
36550|code|MOV             R0, R6|48-70
36552|code|MOVS            R1, #0x20 ; ' '|32-33
36554|code|STR             R6, [SP,#0x1098+var_1088]|4-150
36556|code|LDR.W           R3, [R3,#-0xC]|83-248-12-60
36560|code|ADD             R2, PC; "%Y-%m-%d@%H:%M:%S"|122-68
36562|code|BL              formatSeconds|1-240-55-255
36566|code|LDR.W           R2, [R9,#4]|217-248-4-32
36570|code|MOVW            R1, #0xDE83|77-246-131-97
36574|code|LDR.W           R6, [R10,#(dword_2506C - 0x25068)]|218-248-4-96
36578|code|MOVT.W          R1, #0x431B|196-242-27-49
36582|code|MOV.W           LR, R2,ASR#31|79-234-226-126
36586|code|MOV             R3, R0|3-70
36588|code|LDR             R0, [SP,#0x1098+var_1088]|4-152
36590|code|STR             R0, [SP,#0x1098+var_1098]|0-144
36592|code|SMULL.W         R0, R1, R2, R1|130-251-1-1
36596|code|LDR             R2, =(aS03u - 0x8EFA); "%.*s.%03u "|60-74
36598|code|ADD             R2, PC; "%.*s.%03u "|122-68
36600|code|STRD.W          R0, R1, [SP,#0x1098+var_1080]|205-233-6-1
36604|code|MOV             R0, R6|48-70
36606|code|LDR             R6, [SP,#0x1098+var_107C]|7-158
36608|code|MOVS            R1, #1|1-33
36610|code|RSB.W           LR, LR, R6,ASR#18|206-235-166-78
36614|code|STR.W           LR, [SP,#0x1098+var_1094]|205-248-4-224
36618|code|BLX             __fprintf_chk|253-247-146-234
36622|code|LDR             R0, [SP,#0x1098+var_1088]|4-152
36624|code|MOVS            R1, #0x40 ; '@'|64-33
36626|code|BL              formatThreadName|3-240-121-255
36630|code|CMP             R0, #0|0-40
36632|code|BNE             loc_8FA8|70-209
36634|code|LDR             R6, =(dword_25068 - 0x8F22)|52-78
36636|code|MOV             R0, R8; s|64-70
36638|code|ADD             R6, PC; dword_25068|126-68
36640|code|LDR             R1, [R6,#(dword_2506C - 0x25068)]; stream|113-104
36642|code|BLX             fputs|253-247-12-237
36646|code|LDR             R1, [R6,#(dword_2506C - 0x25068)]; stream|113-104
36648|code|MOVS            R0, #0xA; c|10-32
36650|code|BLX             fputc|253-247-22-236
36654|code|LDR             R0, [R6,#(dword_2506C - 0x25068)]; stream|112-104
36656|code|BL              flushStream|0-240-234-254
36660|code|LDR             R0, [R6,#(dword_2506C - 0x25068)]; stream|112-104
36662|code|BLX             funlockfile|253-247-240-236
36666|code|LDR             R3, =(dword_25068 - 0x8F40)|45-75
36668|code|ADD             R3, PC; dword_25068|123-68
36670|code|LDR             R3, [R3,#(dword_25070 - 0x25068)]|155-104
36672|code|CMP             R3, #0|0-43
36674|code|BEQ.W           loc_8E36|63-244-120-175
36678|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x8F52); "%s"|43-74
36680|code|MOV             R0, R5|40-70
36682|code|MOVS            R1, #1|1-33
36684|code|MOV             R3, R8|67-70
36686|code|ADD             R2, PC; "%s"|122-68
36688|code|BLX             __syslog_chk|253-247-100-235
36692|code|CMP             R7, #0|0-47
36694|code|BEQ.W           loc_8E3C|63-244-113-175
36698|code|LDR             R3, =(stderr_ptr - 0x24CD4)|39-75
36700|code|LDR             R3, [R4,R3]; stderr|227-88
36702|code|LDR             R4, [R3]|28-104
36704|code|MOV             R0, R4; stream|32-70
36706|code|BLX             flockfile|253-247-244-235
36710|code|LDR             R3, =(dword_25068 - 0x8F6C)|37-75
36712|code|ADD             R3, PC; dword_25068|123-68
36714|code|LDR             R3, [R3]|27-104
36716|code|CBZ             R3, loc_8F74|19-177
36718|code|LDR             R0, [R3,#4]; s|88-104
36720|code|LDRB            R3, [R0]|3-120
36722|code|CBNZ            R3, loc_8F92|115-185
36724|code|MOV             R1, R4; stream|33-70
36726|code|MOV             R0, R8; s|64-70
36728|code|BLX             fputs|253-247-224-236
36732|code|MOV             R1, R4; stream|33-70
36734|code|MOVS            R0, #0xA; c|10-32
36736|code|BLX             fputc|253-247-234-235
36740|code|MOV             R0, R4; stream|32-70
36742|code|BL              flushStream|0-240-191-254
36746|code|MOV             R0, R4; stream|32-70
36748|code|BLX             funlockfile|253-247-196-236
36752|code|B               loc_8E3C|84-231
36754|code|MOV             R1, R4; stream|33-70
36756|code|BLX             fputs|253-247-210-236
36760|code|LDR             R0, =(asc_117A8 - 0x8FA4); ": "|25-72
36762|code|MOVS            R1, #1; size|1-33
36764|code|MOVS            R2, #2; n|2-34
36766|code|MOV             R3, R4; s|35-70
36768|code|ADD             R0, PC; ": "|120-68
36770|code|BLX             fwrite|253-247-224-235
36774|code|B               loc_8F74|229-231
36776|code|LDR             R2, =(aS_1 - 0x8FB6); "[%s] "|22-74
36778|code|MOVS            R1, #1|1-33
36780|code|LDR.W           R0, [R10,#(dword_2506C - 0x25068)]|218-248-4-0
36784|code|LDR             R3, [SP,#0x1098+var_1088]|4-155
36786|code|ADD             R2, PC; "[%s] "|122-68
36788|code|BLX             __fprintf_chk|253-247-60-234
36792|code|B               loc_8F1A|175-231
36794|code|BLX             __stack_chk_fail|253-247-60-235
36798|data|ALIGN 0x10|0-191
36800|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8D84|80-191-1-0
36804|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
36808|data|DCD logCategoryFlags_ptr - 0x24CD4|112-2-0-0
36812|data|DCD categoryLogLevel_ptr - 0x24CD4|128-2-0-0
36816|data|DCD systemLogLevel_ptr - 0x24CD4|224-2-0-0
36820|data|DCD stderrLogLevel_ptr - 0x24CD4|132-2-0-0
36824|data|DCD off_248D8 - 0x8DC2; "ingio"|22-187-1-0
36828|data|DCD aS_0 - 0x8E0E; "%s: "|178-137-0-0
36832|data|DCD dword_25068 - 0x8EA6|194-193-1-0
36836|data|DCD aYMDHMS - 0x8ED4; "%Y-%m-%d@%H:%M:%S"|244-136-0-0
36840|data|DCD aS03u - 0x8EFA; "%.*s.%03u "|226-136-0-0
36844|data|DCD dword_25068 - 0x8F22|70-193-1-0
36848|data|DCD dword_25068 - 0x8F40|40-193-1-0
36852|data|DCD aCheckingSDevic+0x14 - 0x8F52; "%s"|50-142-0-0
36856|data|DCD stderr_ptr - 0x24CD4|204-2-0-0
36860|data|DCD dword_25068 - 0x8F6C|252-192-1-0
36864|data|DCD asc_117A8 - 0x8FA4; ": "|4-136-0-0
36868|data|DCD aS_1 - 0x8FB6; "[%s] "|50-136-0-0
36872|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9010)|11-75
36874|code|PUSH            {R4,LR}|16-181
36876|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
36878|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|11-76
36880|code|SUB             SP, SP, #0x10|132-176
36882|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
36884|code|STR             R1, [SP,#0x18+var_14]|1-145
36886|code|LDR             R1, =(sub_899C+1 - 0x9020)|10-73
36888|code|LDR             R3, [R4]|35-104
36890|code|STR             R2, [SP,#0x18+var_10]|2-146
36892|code|ADD             R1, PC; sub_899C|121-68
36894|code|ADD             R2, SP, #0x18+var_14|1-170
36896|code|STR             R3, [SP,#0x18+var_C]|3-147
36898|code|BL              logData|255-247-165-254
36902|code|LDR             R2, [SP,#0x18+var_C]|3-154
36904|code|LDR             R3, [R4]|35-104
36906|code|CMP             R2, R3|154-66
36908|code|BNE             loc_9032|1-209
36910|code|ADD             SP, SP, #0x10|4-176
36912|code|POP             {R4,PC}|16-189
36914|code|BLX             __stack_chk_fail|253-247-0-235
36918|data|ALIGN 4|0-191
36920|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9010|196-188-1-0
36924|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
36928|data|DCD sub_899C+1 - 0x9020|125-249-255-255
36932|code|PUSH            {R1-R3}|14-180
36934|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x904E)|13-75
36936|code|PUSH            {R4,R5,LR}|48-181
36938|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
36940|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|12-77
36942|code|SUB             SP, SP, #8|130-176
36944|code|ADD             R4, SP, #0x20+varg_r1|5-172
36946|code|ADD             R2, SP, #0x20+var_18|2-170
36948|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
36950|code|LDR.W           R1, [R4],#4|84-248-4-27
36954|code|LDR             R3, [R5]|43-104
36956|code|STR.W           R4, [R2,#-8]!|66-248-8-77
36960|code|STR             R3, [SP,#0x20+var_1C]|1-147
36962|code|BL              vlogMessage|255-247-209-255
36966|code|LDR             R2, [SP,#0x20+var_1C]|1-154
36968|code|LDR             R3, [R5]|43-104
36970|code|CMP             R2, R3|154-66
36972|code|BNE             loc_9078|4-209
36974|code|ADD             SP, SP, #8|2-176
36976|code|POP.W           {R4,R5,LR}|189-232-48-64
36980|code|ADD             SP, SP, #0xC|3-176
36982|code|BX              LR|112-71
36984|code|BLX             __stack_chk_fail|253-247-220-234
36988|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x904E|134-188-1-0
36992|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
36996|code|PUSH            {R3}|8-180
36998|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x908E)|16-75
37000|code|PUSH            {R4-R6,LR}|112-181
37002|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
37004|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|15-77
37006|code|SUB             SP, SP, #0x1C|135-176
37008|code|ADD             R4, SP, #0x30+varg_r3|11-172
37010|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
37012|code|LDR.W           R6, [R4],#4|84-248-4-107
37016|code|STR             R1, [SP,#0x30+var_2C]|1-145
37018|code|LDR             R3, [R5]|43-104
37020|code|LDR             R1, =(sub_89A0+1 - 0x90A6)|12-73
37022|code|STR             R2, [SP,#0x30+var_24]|3-146
37024|code|ADD             R2, SP, #0x30+var_2C|1-170
37026|code|ADD             R1, PC; sub_89A0|121-68
37028|code|STR             R3, [SP,#0x30+var_1C]|5-147
37030|code|STR             R4, [SP,#0x30+var_30]|0-148
37032|code|STR             R6, [SP,#0x30+var_20]|4-150
37034|code|STR.W           SP, [SP,#0x30+var_28]|205-248-8-208
37038|code|BL              logData|255-247-95-254
37042|code|LDR             R2, [SP,#0x30+var_1C]|5-154
37044|code|LDR             R3, [R5]|43-104
37046|code|CMP             R2, R3|154-66
37048|code|BNE             loc_90C4|4-209
37050|code|ADD             SP, SP, #0x1C|7-176
37052|code|POP.W           {R4-R6,LR}|189-232-112-64
37056|code|ADD             SP, SP, #4|1-176
37058|code|BX              LR|112-71
37060|code|BLX             __stack_chk_fail|253-247-182-234
37064|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x908E|70-188-1-0
37068|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
37072|data|DCD sub_89A0+1 - 0x90A6|251-248-255-255
37076|code|PUSH            {R2,R3}|12-180
37078|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x90DE)|16-75
37080|code|PUSH            {R4-R6,LR}|112-181
37082|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
37084|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|15-77
37086|code|SUB             SP, SP, #0x18|134-176
37088|code|ADD             R4, SP, #0x30+varg_r2|10-172
37090|code|ADD             R2, SP, #0x30+var_28|2-170
37092|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
37094|code|LDR.W           R6, [R4],#4|84-248-4-107
37098|code|STR             R1, [SP,#0x30+var_28]|2-145
37100|code|LDR             R3, [R5]|43-104
37102|code|LDR             R1, =(sub_8A50+1 - 0x90F6)|12-73
37104|code|STR             R4, [SP,#0x30+var_2C]|1-148
37106|code|ADD             R1, PC; sub_8A50|121-68
37108|code|STR             R3, [SP,#0x30+var_1C]|5-147
37110|code|STR             R6, [SP,#0x30+var_24]|3-150
37112|code|ADD             R3, SP, #0x30+var_2C|1-171
37114|code|STR             R3, [SP,#0x30+var_20]|4-147
37116|code|BL              logData|255-247-56-254
37120|code|LDR             R2, [SP,#0x30+var_1C]|5-154
37122|code|LDR             R3, [R5]|43-104
37124|code|CMP             R2, R3|154-66
37126|code|BNE             loc_9112|4-209
37128|code|ADD             SP, SP, #0x18|6-176
37130|code|POP.W           {R4-R6,LR}|189-232-112-64
37134|code|ADD             SP, SP, #8|2-176
37136|code|BX              LR|112-71
37138|code|BLX             __stack_chk_fail|253-247-144-234
37142|data|ALIGN 4|0-191
37144|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x90DE|246-187-1-0
37148|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
37152|data|DCD sub_8A50+1 - 0x90F6|91-249-255-255
37156|code|PUSH            {R4,R5,LR}|48-181
37158|code|SUB             SP, SP, #0xC|131-176
37160|code|MOV             R5, R1|13-70
37162|code|MOV             R4, R0|4-70
37164|code|BLX             strerror|253-247-54-233
37168|code|LDR             R1, =(aSErrorDS - 0x913A); "%s error %d: %s."|4-73
37170|code|MOV             R2, R5|42-70
37172|code|MOV             R3, R4|35-70
37174|code|ADD             R1, PC; "%s error %d: %s."|121-68
37176|code|STR             R0, [SP,#0x18+var_18]|0-144
37178|code|MOVS            R0, #3|3-32
37180|code|BL              logMessage|255-247-130-255
37184|code|ADD             SP, SP, #0xC|3-176
37186|code|POP             {R4,R5,PC}|48-189
37188|data|DCD aSErrorDS - 0x913A; "%s error %d: %s."|182-134-0-0
37192|code|PUSH            {R4,LR}|16-181
37194|code|MOV             R4, R0|4-70
37196|code|BLX             __errno_location|253-247-162-235
37200|code|MOV             R1, R4|33-70
37202|code|POP.W           {R4,LR}|189-232-16-64
37206|code|LDR             R0, [R0]|0-104
37208|code|B.W             logActionError|255-247-228-191
37212|code|LDR             R0, =(aMalloc_0 - 0x9162); "malloc"|1-72
37214|code|ADD             R0, PC; "malloc"|120-68
37216|code|B.W             logSystemError|255-247-242-191
37220|data|DCD aMalloc_0 - 0x9162; "malloc"|162-134-0-0
37224|code|LDR             R1, =(aFeatureNotSupp - 0x9172); "feature not supported: %s"|2-73
37226|code|MOV             R2, R0|2-70
37228|code|MOVS            R0, #4|4-32
37230|code|ADD             R1, PC; "feature not supported: %s"|121-68
37232|code|B.W             logMessage|255-247-104-191
37236|data|DCD aFeatureNotSupp - 0x9172; "feature not supported: %s"|154-134-0-0
37240|code|PUSH            {R4,LR}|16-181
37242|code|MOV             R4, R0|4-70
37244|code|BLX             __errno_location|253-247-138-235
37248|code|MOVS            R3, #0x26 ; '&'|38-35
37250|code|STR             R3, [R0]|3-96
37252|code|MOV             R0, R4|32-70
37254|code|POP.W           {R4,LR}|189-232-16-64
37258|code|B.W             logSystemError|255-247-221-191
37262|data|ALIGN 0x10|0-191
37264|code|LDR             R1, =(aPossibleCauseS - 0x919A); "possible cause: %s"|2-73
37266|code|MOV             R2, R0|2-70
37268|code|MOVS            R0, #4|4-32
37270|code|ADD             R1, PC; "possible cause: %s"|121-68
37272|code|B.W             logMessage|255-247-84-191
37276|data|DCD aPossibleCauseS - 0x919A; "possible cause: %s"|142-134-0-0
37280|code|LDR             R3, =(dword_25074 - 0x91A8)|21-75
37282|code|PUSH            {R4-R6}|112-180
37284|code|ADD             R3, PC; dword_25074|123-68
37286|code|LDR             R4, [R3]|28-104
37288|code|SUBS            R4, #1|1-60
37290|code|BMI             loc_91F4|35-212
37292|code|LDR             R6, [R3,#(dword_25078 - 0x25074)]|94-104
37294|code|ASRS            R3, R4, #1|99-16
37296|code|LDR.W           R2, [R6,R3,LSL#2]|86-248-35-32
37300|code|LDR             R2, [R2]|18-104
37302|code|CMP             R2, R1|138-66
37304|code|IT NE|24-191
37306|code|MOVNE           R5, #0|0-37
37308|code|BNE             loc_91CC|6-209
37310|code|B               loc_91EA|20-224
37312|code|ASRS            R3, R3, #1|91-16
37314|code|LDR.W           R2, [R6,R3,LSL#2]|86-248-35-32
37318|code|LDR             R2, [R2]|18-104
37320|code|CMP             R2, R1|138-66
37322|code|BEQ             loc_91EA|14-208
37324|code|CMP             R1, R2|145-66
37326|code|ITE CC|52-191
37328|code|ADDCC.W         R4, R3, #0xFFFFFFFF|3-241-255-52
37332|code|ADDCS           R5, R3, #1|93-28
37334|code|ADDS            R3, R5, R4|43-25
37336|code|CMP             R5, R4|165-66
37338|code|ADD.W           R3, R3, R3,LSR#31|3-235-211-115
37342|code|BLE             loc_91C0|239-221
37344|code|MOVS            R3, #0|0-35
37346|code|STR             R5, [R0]|5-96
37348|code|MOV             R0, R3|24-70
37350|code|POP             {R4-R6}|112-188
37352|code|BX              LR|112-71
37354|code|STR             R3, [R0]|3-96
37356|code|MOVS            R3, #1|1-35
37358|code|MOV             R0, R3|24-70
37360|code|POP             {R4-R6}|112-188
37362|code|BX              LR|112-71
37364|code|MOVS            R5, #0|0-37
37366|code|B               loc_91E0|243-231
37368|data|DCD dword_25074 - 0x91A8|204-190-1-0
37372|code|PUSH            {R3,LR}|8-181
37374|code|LDR             R3, =(dword_25074 - 0x9204)|6-75
37376|code|ADD             R3, PC; dword_25074|123-68
37378|code|LDR             R0, [R3,#(dword_25078 - 0x25074)]; ptr|88-104
37380|code|CBZ             R0, loc_920A|8-177
37382|code|BLX             free|253-247-158-232
37386|code|LDR             R3, =(dword_25074 - 0x9212)|4-75
37388|code|MOVS            R2, #0|0-34
37390|code|ADD             R3, PC; dword_25074|123-68
37392|code|STR             R2, [R3,#(dword_25078 - 0x25074)]|90-96
37394|code|STR             R2, [R3]|26-96
37396|code|STR             R2, [R3,#(dword_2507C - 0x25074)]|154-96
37398|code|POP             {R3,PC}|8-189
37400|data|DCD dword_25074 - 0x9204|112-190-1-0
37404|data|DCD dword_25074 - 0x9212|98-190-1-0
37408|code|PUSH            {R1-R3}|14-180
37410|code|MOV.W           R1, #0x1000|79-244-128-81
37414|code|PUSH.W          {R4-R11,LR}|45-233-240-79
37418|code|SUB.W           SP, SP, #0x1000|173-245-128-93
37422|code|SUB             SP, SP, #0x18|134-176
37424|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x923E)|73-78
37426|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|74-75
37428|code|ADD.W           R5, SP, #0x1018+var_s8|13-245-129-85
37432|code|ADDS            R5, #0x1C|28-53
37434|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
37436|code|ADD.W           R4, SP, #0x1018+var_18|13-245-128-84
37440|code|ADD             R7, SP, #0x14|5-175
37442|code|LDR.W           R9, [R6,R3]; __stack_chk_guard|86-248-3-144
37446|code|ADDS            R4, #0x14|20-52
37448|code|LDR.W           R2, [R5],#4|85-248-4-43
37452|code|MOV             R3, R1|11-70
37454|code|MOV             R8, R0|128-70
37456|code|MOV             R0, R7|56-70
37458|code|ADD             R6, SP, #0x1018+var_1008|4-174
37460|code|STR             R2, [SP,#0x1018+var_1018]|0-146
37462|code|MOVS            R2, #1|1-34
37464|code|STR             R5, [SP,#0x1018+var_1014]|1-149
37466|code|LDR.W           LR, [R9]|217-248-0-224
37470|code|STR             R5, [SP,#0x1018+var_1008]|4-149
37472|code|STR.W           LR, [R4]|196-248-0-224
37476|code|BLX             __vsnprintf_chk|253-247-166-232
37480|code|MOV             R0, R7; s|56-70
37482|code|BLX             strlen|253-247-150-234
37486|code|MOV             R5, R0|5-70
37488|code|ADDS            R0, #5; size|5-48
37490|code|BLX             malloc|253-247-138-234
37494|code|MOV             R4, R0|4-70
37496|code|CMP             R0, #0|0-40
37498|code|BEQ             loc_9300|65-208
37500|code|ADDS            R2, R5, #1; n|106-28
37502|code|MOV             R1, R7; src|57-70
37504|code|STR.W           R8, [R0],#4; dest|64-248-4-139
37508|code|BLX             memcpy|253-247-116-234
37512|code|MOV             R0, R6|48-70
37514|code|MOV             R1, R8|65-70
37516|code|BL              sub_91A0|255-247-136-255
37520|code|MOV             R5, R0|5-70
37522|code|CBNZ            R0, loc_92E8|72-187
37524|code|LDR             R7, =(dword_25074 - 0x929E)|50-79
37526|code|LDR.W           R8, [R6]|214-248-0-128
37530|code|ADD             R7, PC; dword_25074|127-68
37532|code|LDR             R6, [R7,#0x1004+var_1004]|62-104
37534|code|LDR             R3, [R7,#(dword_2507C - 0x25074)]|187-104
37536|code|CMP             R6, R3|158-66
37538|code|BEQ             loc_9308|49-208
37540|code|LDR             R5, [R7,#(dword_25078 - 0x25074)]|125-104
37542|code|ADDS            R7, R6, #1|119-28
37544|code|ADD.W           R0, R8, #1|8-241-1-0
37548|code|LDR             R3, =(dword_25074 - 0x92B8)|45-75
37550|code|RSB.W           R2, R8, R6|200-235-6-2
37554|code|LSLS            R0, R0, #2|128-0
37556|code|ADD             R3, PC; dword_25074|123-68
37558|code|SUBS            R6, R0, #4|6-31
37560|code|LSLS            R2, R2, #2; n|146-0
37562|code|ADD             R0, R5; dest|40-68
37564|code|ADDS            R1, R5, R6; src|169-25
37566|code|STR             R7, [R3]|31-96
37568|code|BLX             memmove|253-247-74-233
37572|code|STR             R4, [R5,R6]|172-81
37574|code|MOVS            R5, #1|1-37
37576|code|ADD.W           R3, SP, #0x1018+var_18|13-245-128-83
37580|code|MOV             R0, R5|40-70
37582|code|ADDS            R3, #0x14|20-51
37584|code|LDR             R2, [R3]|26-104
37586|code|LDR.W           R3, [R9]|217-248-0-48
37590|code|CMP             R2, R3|154-66
37592|code|BNE             loc_9352|59-209
37594|code|ADD.W           SP, SP, #0x1000|13-245-128-93
37598|code|ADD             SP, SP, #0x18|6-176
37600|code|POP.W           {R4-R11,LR}|189-232-240-79
37604|code|ADD             SP, SP, #0xC|3-176
37606|code|BX              LR|112-71
37608|code|LDR             R3, =(dword_25074 - 0x92F0)|31-75
37610|code|LDR             R2, [R6]|50-104
37612|code|ADD             R3, PC; dword_25074|123-68
37614|code|LDR             R5, [R3,#(dword_25078 - 0x25074)]|93-104
37616|code|LDR.W           R0, [R5,R2,LSL#2]; ptr|85-248-34-0
37620|code|BLX             free|253-247-38-232
37624|code|LDR             R3, [R6]|51-104
37626|code|STR.W           R4, [R5,R3,LSL#2]|69-248-35-64
37630|code|B               loc_92C6|226-231
37632|code|BL              logMallocError|255-247-44-255
37636|code|MOV             R5, R4|37-70
37638|code|B               loc_92C8|223-231
37640|code|LDR.W           R11, [R7,#(dword_25078 - 0x25074)]|215-248-4-176
37644|code|ADD.W           R10, R6, #1|6-241-1-10
37648|code|MOV.W           R1, R10,LSL#2; size|79-234-138-1
37652|code|MOV             R0, R11; ptr|88-70
37654|code|BLX             realloc|253-247-74-233
37658|code|MOV             R3, R0|3-70
37660|code|CBZ             R0, loc_934C|176-177
37662|code|CMP.W           R11, #0|187-241-0-15
37666|code|BEQ             loc_9334|7-208
37668|code|MOV             R7, R10|87-70
37670|code|LDR             R2, =(dword_25074 - 0x932E)|17-74
37672|code|MOV             R5, R3|29-70
37674|code|ADD             R2, PC; dword_25074|122-68
37676|code|STR             R3, [R2,#(dword_25078 - 0x25074)]|83-96
37678|code|STR.W           R10, [R2,#(dword_2507C - 0x25074)]|194-248-8-160
37682|code|B               loc_92A8|185-231
37684|code|STR             R0, [SP,#0x1018+var_100C]|3-144
37686|code|MOV             R2, R11|90-70
37688|code|LDR             R0, =(aAddressTable - 0x9340); "address-table"|13-72
37690|code|LDR             R1, =(sub_91FC+1 - 0x9342)|14-73
37692|code|ADD             R0, PC; "address-table"|120-68
37694|code|ADD             R1, PC; sub_91FC|121-68
37696|code|BL              onProgramExit|254-247-14-248
37700|code|LDR             R6, [R7,#0x1004+var_1004]|62-104
37702|code|LDR             R3, [SP,#0x1018+var_100C]|3-155
37704|code|ADDS            R7, R6, #1|119-28
37706|code|B               loc_9326|236-231
37708|code|BL              logMallocError|255-247-6-255
37712|code|B               loc_92C8|186-231
37714|code|BLX             __stack_chk_fail|253-247-112-233
37718|data|ALIGN 4|0-191
37720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x923E|150-186-1-0
37724|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
37728|data|DCD dword_25074 - 0x929E|214-189-1-0
37732|data|DCD dword_25074 - 0x92B8|188-189-1-0
37736|data|DCD dword_25074 - 0x92F0|132-189-1-0
37740|data|DCD dword_25074 - 0x932E|70-189-1-0
37744|data|DCD aAddressTable - 0x9340; "address-table"|160-135-0-0
37748|data|DCD sub_91FC+1 - 0x9342|187-254-255-255
37752|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9382)|22-75
37754|code|MOV             R1, R0|1-70
37756|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|22-74
37758|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
37760|code|PUSH.W          {R4-R9,LR}|45-233-240-67
37764|code|SUB             SP, SP, #0xC|131-176
37766|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
37768|code|MOV             R0, SP|104-70
37770|code|LDR             R3, [R4]|35-104
37772|code|STR             R3, [SP,#0x28+var_24]|1-147
37774|code|BL              sub_91A0|255-247-7-255
37778|code|CBZ             R0, loc_93C0|168-177
37780|code|LDR             R7, =(dword_25074 - 0x939C)|17-79
37782|code|LDR             R5, [SP,#0x28+var_28]|0-157
37784|code|ADD             R7, PC; dword_25074|127-68
37786|code|LDR.W           R8, [R7,#(dword_25078 - 0x25074)]|215-248-4-128
37790|code|LSLS            R6, R5, #2|174-0
37792|code|ADD.W           R9, R8, R6|8-235-6-9
37796|code|LDR.W           R0, [R8,R5,LSL#2]; ptr|88-248-37-0
37800|code|BLX             free|252-247-204-239
37804|code|LDR             R3, [R7]|59-104
37806|code|ADDS            R1, R6, #4|49-29
37808|code|MOV             R0, R9; dest|72-70
37810|code|SUBS            R3, #1|1-59
37812|code|ADD             R1, R8; src|65-68
37814|code|SUBS            R2, R3, R5|90-27
37816|code|STR             R3, [R7]|59-96
37818|code|LSLS            R2, R2, #2; n|146-0
37820|code|BLX             memmove|253-247-204-232
37824|code|LDR             R2, [SP,#0x28+var_24]|1-154
37826|code|LDR             R3, [R4]|35-104
37828|code|CMP             R2, R3|154-66
37830|code|BNE             loc_93CE|2-209
37832|code|ADD             SP, SP, #0xC|3-176
37834|code|POP.W           {R4-R9,PC}|189-232-240-131
37838|code|BLX             __stack_chk_fail|253-247-50-233
37842|data|ALIGN 4|0-191
37844|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9382|82-185-1-0
37848|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
37852|data|DCD dword_25074 - 0x939C|216-188-1-0
37856|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x93E8)|18-75
37858|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|19-74
37860|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
37862|code|PUSH            {R4-R6,LR}|112-181
37864|code|SUB             SP, SP, #8|130-176
37866|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
37868|code|MOV             R6, R0|6-70
37870|code|MOV             R5, R1|13-70
37872|code|MOV             R0, SP|104-70
37874|code|MOV             R1, R6|49-70
37876|code|LDR             R3, [R4]|35-104
37878|code|STR             R3, [SP,#0x18+var_14]|1-147
37880|code|BL              sub_91A0|255-247-210-254
37884|code|CBZ             R0, loc_941E|120-177
37886|code|CBZ             R5, loc_9404|13-177
37888|code|MOVS            R3, #0|0-35
37890|code|STR             R3, [R5]|43-96
37892|code|LDR             R3, =(dword_25074 - 0x940C)|11-75
37894|code|LDR             R2, [SP,#0x18+var_18]|0-154
37896|code|ADD             R3, PC; dword_25074|123-68
37898|code|LDR             R3, [R3,#(dword_25078 - 0x25074)]|91-104
37900|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
37904|code|ADDS            R0, #4|4-48
37906|code|LDR             R2, [SP,#0x18+var_14]|1-154
37908|code|LDR             R3, [R4]|35-104
37910|code|CMP             R2, R3|154-66
37912|code|BNE             loc_9428|6-209
37914|code|ADD             SP, SP, #8|2-176
37916|code|POP             {R4-R6,PC}|112-189
37918|code|MOV             R0, R6|48-70
37920|code|MOV             R1, R5|41-70
37922|code|BL              getSharedSymbolName|3-240-115-255
37926|code|B               loc_9412|244-231
37928|code|BLX             __stack_chk_fail|253-247-4-233
37932|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x93E8|236-184-1-0
37936|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
37940|data|DCD dword_25074 - 0x940C|104-188-1-0
37944|code|LDR             R3, [R0]|3-104
37946|code|CBZ             R3, locret_944C|59-177
37948|code|PUSH            {R4,LR}|16-181
37950|code|MOV             R4, R0|4-70
37952|code|MOV             R0, R3|24-70
37954|code|BLX             fclose|253-247-208-233
37958|code|MOVS            R3, #0|0-35
37960|code|STR             R3, [R4]|35-96
37962|code|POP             {R4,PC}|16-189
37964|code|BX              LR|112-71
37966|data|ALIGN 0x10|0-191
37968|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9458)|28-75
37970|code|PUSH            {R4-R7,LR}|240-181
37972|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
37974|code|MOV             R6, R0|6-70
37976|code|LDR             R0, =(__stack_chk_guard_ptr - 0x24CD4)|27-72
37978|code|MOV             R5, R1|13-70
37980|code|MOV             R1, R3|25-70
37982|code|SUB             SP, SP, #0x1C|135-176
37984|code|MOVS            R3, #0|0-35
37986|code|LDR             R7, [R1,R0]; __stack_chk_guard|15-88
37988|code|ADD             R4, SP, #0x30+var_18|6-172
37990|code|STR             R3, [SP,#0x30+var_2C]|1-147
37992|code|STR             R3, [SP,#0x30+var_28]|2-147
37994|code|LDR             R1, [R7]|57-104
37996|code|STR             R3, [SP,#0x30+var_24]|3-147
37998|code|STR             R3, [SP,#0x30+var_20]|4-147
38000|code|STR             R1, [SP,#0x30+var_1C]|5-145
38002|code|STRH.W          R2, [R4,#-0x14]!|36-248-20-45
38006|code|B               loc_9482|4-224
38008|code|BLX             __errno_location|253-247-12-234
38012|code|LDR             R3, [R0]|3-104
38014|code|CMP             R3, #4|4-43
38016|code|BNE             loc_94A0|14-209
38018|code|MOV             R0, R6; fd|48-70
38020|code|MOV             R1, R5; cmd|41-70
38022|code|MOV             R2, R4|34-70
38024|code|BLX             fcntl|253-247-4-232
38028|code|ADDS            R0, #1|1-48
38030|code|BEQ             loc_9478|243-208
38032|code|MOVS            R3, #1|1-35
38034|code|LDR             R2, [SP,#0x30+var_1C]|5-154
38036|code|MOV             R0, R3|24-70
38038|code|LDR             R3, [R7]|59-104
38040|code|CMP             R2, R3|154-66
38042|code|BNE             loc_94C0|17-209
38044|code|ADD             SP, SP, #0x1C|7-176
38046|code|POP             {R4-R7,PC}|240-189
38048|code|CMP             R3, #0xD|13-43
38050|code|ITTT EQ|2-191
38052|code|MOVEQ           R2, #0xB|11-34
38054|code|MOVEQ           R3, #0|0-35
38056|code|STREQ           R2, [R0]|2-96
38058|code|BEQ             loc_9492|242-208
38060|code|CMP             R3, #0xB|11-43
38062|code|IT EQ|8-191
38064|code|MOVEQ           R3, #0|0-35
38066|code|BEQ             loc_9492|238-208
38068|code|LDR             R0, =(aFcntlStructFlo - 0x94BA); "fcntl[struct flock *]"|5-72
38070|code|ADD             R0, PC; "fcntl[struct flock *]"|120-68
38072|code|BL              logSystemError|255-247-70-254
38076|code|MOVS            R3, #0|0-35
38078|code|B               loc_9492|232-231
38080|code|BLX             __stack_chk_fail|253-247-184-232
38084|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9458|124-184-1-0
38088|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
38092|data|DCD aFcntlStructFlo - 0x94BA; "fcntl[struct flock *]"|58-134-0-0
38096|code|SUB.W           R0, R0, #0x2F ; '/'|160-241-47-0
38100|code|CLZ.W           R0, R0|176-250-128-240
38104|code|LSRS            R0, R0, #5|64-9
38106|code|BX              LR|112-71
38108|code|PUSH            {R3,LR}|8-181
38110|code|LDRB            R0, [R0]|0-120
38112|code|BL              isPathDelimiter|255-247-246-255
38116|code|ADDS            R0, #0|0-48
38118|code|IT NE|24-191
38120|code|MOVNE           R0, #1|1-32
38122|code|POP             {R3,PC}|8-189
38124|code|PUSH.W          {R4-R8,LR}|45-233-240-65
38128|code|MOV             R8, R0|128-70
38130|code|BLX             strlen|253-247-82-233
38134|code|MOV             R7, R0|7-70
38136|code|ADD.W           R6, R8, R0|8-235-0-6
38140|code|MOV             R5, R0|5-70
38142|code|CBNZ            R0, loc_9504|8-185
38144|code|B               loc_952C|20-224
38146|code|CBZ             R4, loc_954C|28-179
38148|code|LDRB.W          R0, [R6,#-1]!|22-248-1-13
38152|code|SUBS            R4, R5, #1|108-30
38154|code|BL              isPathDelimiter|255-247-225-255
38158|code|MOV             R5, R4|37-70
38160|code|CMP             R0, #0|0-40
38162|code|BNE             loc_9502|246-209
38164|code|ADD.W           R6, R8, R4|8-235-4-6
38168|code|B               loc_9526|5-224
38170|code|LDRB.W          R0, [R6,#-1]!|22-248-1-13
38174|code|SUBS            R4, #1|1-60
38176|code|BL              isPathDelimiter|255-247-214-255
38180|code|CBNZ            R0, loc_956A|8-187
38182|code|MOV             R5, R4|37-70
38184|code|CMP             R4, #0|0-44
38186|code|BNE             loc_951A|246-209
38188|code|MOVS            R0, #2; size|2-32
38190|code|LDR.W           R8, =(aPathToInputTex+0x18 - 0x953C); "."|223-248-88-128
38194|code|BLX             malloc|253-247-42-233
38198|code|MOVS            R7, #1|1-39
38200|code|ADD             R8, PC; "."|248-68
38202|code|MOV             R4, R0|4-70
38204|code|CBNZ            R0, loc_9558|96-185
38206|code|BL              logMallocError|255-247-13-254
38210|code|MOV             R0, R4|32-70
38212|code|POP.W           {R4-R8,PC}|189-232-240-129
38216|code|MOV             R5, R4|37-70
38218|code|MOV             R7, R5|47-70
38220|code|ADDS            R0, R7, #1; size|120-28
38222|code|BLX             malloc|253-247-28-233
38226|code|MOV             R4, R0|4-70
38228|code|CMP             R0, #0|0-40
38230|code|BEQ             loc_953E|242-208
38232|code|MOV             R1, R8; src|65-70
38234|code|MOV             R2, R7; n|58-70
38236|code|BLX             memcpy|253-247-8-233
38240|code|MOVS            R3, #0|0-35
38242|code|MOV             R0, R4|32-70
38244|code|STRB            R3, [R4,R7]|227-85
38246|code|POP.W           {R4-R8,PC}|189-232-240-129
38250|code|ADD.W           R6, R8, R5|8-235-5-6
38254|code|MOV             R4, R5|44-70
38256|code|LDRB.W          R0, [R6,#-1]!|22-248-1-13
38260|code|SUBS            R7, R4, #1|103-30
38262|code|BL              isPathDelimiter|255-247-171-255
38266|code|CMP             R0, #0|0-40
38268|code|BEQ             loc_9548|228-208
38270|code|MOV             R4, R7|60-70
38272|code|CMP             R7, #0|0-47
38274|code|BNE             loc_9570|245-209
38276|code|MOV             R7, R5|47-70
38278|code|B               loc_954C|225-231
38280|data|DCD aPathToInputTex+0x18 - 0x953C; "."|204-124-0-0
38284|code|PUSH            {R4-R6,LR}|112-181
38286|code|MOV             R6, R0|6-70
38288|code|BLX             strlen|253-247-2-233
38292|code|ADDS            R4, R6, R0|52-24
38294|code|CMP             R6, R4|166-66
38296|code|BNE             loc_95A2|3-209
38298|code|B               loc_95B0|9-224
38300|code|CMP             R6, R5|174-66
38302|code|MOV             R4, R5|44-70
38304|code|BEQ             loc_95B0|6-208
38306|code|LDRB.W          R0, [R4,#-1]|20-248-1-12
38310|code|SUBS            R5, R4, #1|101-30
38312|code|BL              isPathDelimiter|255-247-146-255
38316|code|CMP             R0, #0|0-40
38318|code|BEQ             loc_959C|245-208
38320|code|MOV             R0, R4|32-70
38322|code|POP             {R4-R6,PC}|112-189
38324|code|PUSH            {R3,LR}|8-181
38326|code|BL              locatePathName|255-247-233-255
38330|code|MOVS            R1, #0x2E ; '.'; c|46-33
38332|code|POP.W           {R3,LR}|189-232-8-64
38336|code|B.W             j_strrchr|253-247-162-185
38340|code|PUSH            {R4,LR}|16-181
38342|code|MOV             R4, R0|4-70
38344|code|BL              locatePathName|255-247-224-255
38348|code|SUBS            R0, R4, R0|32-26
38350|code|IT NE|24-191
38352|code|MOVNE           R0, #1|1-32
38354|code|POP             {R4,PC}|16-189
38356|code|PUSH.W          {R3-R11,LR}|45-233-248-79
38360|code|LSLS            R3, R1, #1|75-0
38362|code|MOV             R2, SP|106-70
38364|code|ADD.W           R5, R0, R1,LSL#2|0-235-129-5
38368|code|ADD.W           R9, R3, #0xFFFFFFFF|3-241-255-57
38372|code|SUB.W           R3, R2, R3,LSL#2|162-235-131-3
38376|code|CMP             R0, R5|168-66
38378|code|ADD             R7, SP, #0|0-175
38380|code|MOV             SP, R3|157-70
38382|code|MOV             R8, R0|128-70
38384|code|MOV             R10, SP|234-70
38386|code|BEQ             loc_9646|40-208
38388|code|LDR.W           R11, =(asc_11B0C - 0x95FE); "/"|223-248-84-176
38392|code|MOV             R6, R9|78-70
38394|code|ADD             R11, PC; "/"|251-68
38396|code|LDR.W           R4, [R5,#-4]!|85-248-4-77
38400|code|CBZ             R4, loc_9630|180-177
38402|code|LDRB            R3, [R4]|35-120
38404|code|CBZ             R3, loc_9630|163-177
38406|code|CMP             R6, R9|78-69
38408|code|MOV             R0, R4; s|32-70
38410|code|BEQ             loc_9622|10-208
38412|code|BLX             strlen|253-247-196-232
38416|code|ADD             R0, R4|32-68
38418|code|LDRB.W          R0, [R0,#-1]|16-248-1-12
38422|code|BL              isPathDelimiter|255-247-91-255
38426|code|CBNZ            R0, loc_9622|16-185
38428|code|SUBS            R6, #1|1-62
38430|code|STR.W           R11, [R10,R6,LSL#2]|74-248-38-176
38434|code|SUBS            R6, #1|1-62
38436|code|MOV             R0, R4|32-70
38438|code|STR.W           R4, [R10,R6,LSL#2]|74-248-38-64
38442|code|BL              isAbsolutePath|255-247-87-255
38446|code|CBNZ            R0, loc_9634|8-185
38448|code|CMP             R8, R5|168-69
38450|code|BNE             loc_95FC|227-209
38452|code|RSB.W           R1, R6, R9|198-235-9-1
38456|code|ADD.W           R0, R10, R6,LSL#2|10-235-134-0
38460|code|BL              joinStrings|0-240-210-254
38464|code|MOV             SP, R7|189-70
38466|code|POP.W           {R3-R11,PC}|189-232-248-143
38470|code|MOV             R6, R9|78-70
38472|code|MOVS            R1, #0|0-33
38474|code|B               loc_9638|245-231
38476|data|DCD asc_11B0C - 0x95FE; "/"|14-133-0-0
38480|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9658)|10-75
38482|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|11-74
38484|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38486|code|PUSH            {R4,LR}|16-181
38488|code|SUB             SP, SP, #0x10|132-176
38490|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
38492|code|STR             R0, [SP,#0x18+var_14]|1-144
38494|code|ADD             R0, SP, #0x18+var_14|1-168
38496|code|STR             R1, [SP,#0x18+var_10]|2-145
38498|code|MOVS            R1, #2|2-33
38500|code|LDR             R3, [R4]|35-104
38502|code|STR             R3, [SP,#0x18+var_C]|3-147
38504|code|BL              joinPath|255-247-180-255
38508|code|LDR             R2, [SP,#0x18+var_C]|3-154
38510|code|LDR             R3, [R4]|35-104
38512|code|CMP             R2, R3|154-66
38514|code|BNE             loc_9678|1-209
38516|code|ADD             SP, SP, #0x10|4-176
38518|code|POP             {R4,PC}|16-189
38520|code|BLX             __stack_chk_fail|252-247-220-239
38524|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9658|124-182-1-0
38528|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
38532|code|PUSH            {R4-R6,LR}|112-181
38534|code|MOV             R6, R0|6-70
38536|code|MOV             R5, R1|13-70
38538|code|CBNZ            R3, loc_96B4|155-185
38540|code|LDR             R1, =(aBrltty_0 - 0x9694); ".brltty"|14-73
38542|code|MOV             R0, R2|16-70
38544|code|ADD             R1, PC; ".brltty"|121-68
38546|code|BL              makePath|255-247-221-255
38550|code|MOV             R4, R0|4-70
38552|code|CBZ             R0, locret_96C4|160-177
38554|code|LDR             R1, =(aOverrideDirect - 0x96A4); "Override Directory: %s"|12-73
38556|code|MOVS            R0, #6|6-32
38558|code|MOV             R2, R4|34-70
38560|code|ADD             R1, PC; "Override Directory: %s"|121-68
38562|code|BL              logMessage|255-247-207-252
38566|code|LDR             R3, [R5]|43-104
38568|code|MOVS            R0, #1|1-32
38570|code|ADDS            R1, R3, R0|25-24
38572|code|STR             R1, [R5]|41-96
38574|code|STR.W           R4, [R6,R3,LSL#2]|70-248-35-64
38578|code|POP             {R4-R6,PC}|112-189
38580|code|LDR             R1, =(aBrltty - 0x96BC); "brltty"|6-73
38582|code|MOV             R0, R2|16-70
38584|code|ADD             R1, PC; "brltty"|121-68
38586|code|BL              makePath|255-247-201-255
38590|code|MOV             R4, R0|4-70
38592|code|CMP             R0, #0|0-40
38594|code|BNE             loc_969A|234-209
38596|code|POP             {R4-R6,PC}|112-189
38598|data|ALIGN 4|0-191
38600|data|DCD aBrltty_0 - 0x9694; ".brltty"|124-132-0-0
38604|data|DCD aOverrideDirect - 0x96A4; "Override Directory: %s"|116-132-0-0
38608|data|DCD aBrltty - 0x96BC; "brltty"|164-125-0-0
38612|code|PUSH            {R4,LR}|16-181
38614|code|MOV             R4, R1|12-70
38616|code|BL              locatePathExtension|255-247-108-255
38620|code|CBZ             R0, locret_96EC|48-177
38622|code|MOV             R1, R4; s2|33-70
38624|code|BLX             strcmp|253-247-204-232
38628|code|CLZ.W           R0, R0|176-250-128-240
38632|code|LSRS            R0, R0, #5|64-9
38634|code|POP             {R4,PC}|16-189
38636|code|POP             {R4,PC}|16-189
38638|data|ALIGN 0x10|0-191
38640|code|PUSH.W          {R4-R8,LR}|45-233-240-65
38644|code|MOV             R7, R1|15-70
38646|code|MOV             R6, R0|6-70
38648|code|BL              locatePathExtension|255-247-92-255
38652|code|MOV             R4, R0|4-70
38654|code|CBZ             R0, loc_9732|192-177
38656|code|SUBS            R5, R0, R6|133-27
38658|code|MOV             R0, R7; s|56-70
38660|code|BLX             strlen|253-247-72-232
38664|code|MOV             R8, R0|128-70
38666|code|ADDS            R0, R5, #1|104-28
38668|code|ADD             R0, R8; size|64-68
38670|code|BLX             malloc|253-247-60-232
38674|code|MOV             R4, R0|4-70
38676|code|CBZ             R0, loc_9744|176-177
38678|code|MOV             R1, R6|49-70
38680|code|MOV             R2, R5|42-70
38682|code|BLX             mempcpy|253-247-128-232
38686|code|MOV             R2, R8|66-70
38688|code|MOV             R1, R7|57-70
38690|code|BLX             mempcpy|253-247-124-232
38694|code|MOVS            R2, #0|0-34
38696|code|MOV             R3, R0|3-70
38698|code|MOV             R0, R4|32-70
38700|code|STRB            R2, [R3]|26-112
38702|code|POP.W           {R4-R8,PC}|189-232-240-129
38706|code|LDR             R1, =(aPathHasNoExten - 0x973C); "path has no extension: %s"|7-73
38708|code|MOV             R2, R6|50-70
38710|code|MOVS            R0, #4|4-32
38712|code|ADD             R1, PC; "path has no extension: %s"|121-68
38714|code|BL              logMessage|255-247-131-252
38718|code|MOV             R0, R4|32-70
38720|code|POP.W           {R4-R8,PC}|189-232-240-129
38724|code|BL              logMallocError|255-247-10-253
38728|code|MOV             R0, R4|32-70
38730|code|POP.W           {R4-R8,PC}|189-232-240-129
38734|data|ALIGN 0x10|0-191
38736|data|DCD aPathHasNoExten - 0x973C; "path has no extension: %s"|244-131-0-0
38740|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x975C)|13-75
38742|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|14-74
38744|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38746|code|PUSH            {R4,R5,LR}|48-181
38748|code|SUB             SP, SP, #0x14|133-176
38750|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
38752|code|MOV             R5, R1|13-70
38754|code|STR             R0, [SP,#0x20+var_1C]|1-144
38756|code|LDR             R3, [R4]|35-104
38758|code|STR             R3, [SP,#0x20+var_14]|3-147
38760|code|BL              hasFileExtension|255-247-180-255
38764|code|MOVS            R1, #1|1-33
38766|code|CBNZ            R0, loc_9774|8-185
38768|code|MOVS            R1, #2|2-33
38770|code|STR             R5, [SP,#0x20+var_18]|2-149
38772|code|ADD             R0, SP, #0x20+var_1C|1-168
38774|code|BL              joinStrings|0-240-53-254
38778|code|LDR             R2, [SP,#0x20+var_14]|3-154
38780|code|LDR             R3, [R4]|35-104
38782|code|CMP             R2, R3|154-66
38784|code|BNE             loc_9786|1-209
38786|code|ADD             SP, SP, #0x14|5-176
38788|code|POP             {R4,R5,PC}|48-189
38790|code|BLX             __stack_chk_fail|252-247-86-239
38794|data|ALIGN 4|0-191
38796|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x975C|120-181-1-0
38800|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
38804|code|PUSH            {R3-R5,LR}|56-181
38806|code|MOV             R5, R0|5-70
38808|code|MOV             R0, R1|8-70
38810|code|MOV             R1, R2|17-70
38812|code|BL              ensureFileExtension|255-247-218-255
38816|code|MOV             R4, R0|4-70
38818|code|CBZ             R0, loc_97B8|72-177
38820|code|MOV             R0, R5|40-70
38822|code|MOV             R1, R4|33-70
38824|code|BL              makePath|255-247-82-255
38828|code|MOV             R5, R0|5-70
38830|code|MOV             R0, R4; ptr|32-70
38832|code|BLX             free|252-247-200-237
38836|code|MOV             R0, R5|40-70
38838|code|POP             {R3-R5,PC}|56-189
38840|code|MOV             R5, R0|5-70
38842|code|B               loc_97B4|251-231
38844|code|PUSH            {R3,LR}|8-181
38846|code|MOVS            R1, #0; type|0-33
38848|code|BLX             access|252-247-74-239
38852|code|ADDS            R0, #1|1-48
38854|code|IT NE|24-191
38856|code|MOVNE           R0, #1|1-32
38858|code|POP             {R3,PC}|8-189
38860|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x97D6)|19-75
38862|code|MOV             R1, R0; filename|1-70
38864|code|PUSH            {R4,LR}|16-181
38866|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38868|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|18-76
38870|code|SUB             SP, SP, #0x60|152-176
38872|code|MOVS            R0, #3; ver|3-32
38874|code|MOV             R2, SP; stat_buf|106-70
38876|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
38878|code|LDR             R3, [R4]|35-104
38880|code|STR             R3, [SP,#0x68+var_C]|23-147
38882|code|BLX             __xstat|253-247-34-232
38886|code|ADDS            R0, #1|1-48
38888|code|IT EQ|8-191
38890|code|MOVEQ           R3, #0|0-35
38892|code|BEQ             loc_9808|12-208
38894|code|LDR             R3, [SP,#0x68+var_58]|4-155
38896|code|AND.W           R3, R3, #0xF000|3-244-112-67
38900|code|CMP.W           R3, #0x8000|179-245-0-79
38904|code|IT EQ|8-191
38906|code|MOVEQ           R3, #1|1-35
38908|code|BEQ             loc_9808|4-208
38910|code|BLX             __errno_location|253-247-74-232
38914|code|MOVS            R3, #0|0-35
38916|code|MOVS            R2, #0x11|17-34
38918|code|STR             R2, [R0]|2-96
38920|code|LDR             R2, [SP,#0x68+var_C]|23-154
38922|code|MOV             R0, R3|24-70
38924|code|LDR             R3, [R4]|35-104
38926|code|CMP             R2, R3|154-66
38928|code|BNE             loc_9816|1-209
38930|code|ADD             SP, SP, #0x60 ; '`'|24-176
38932|code|POP             {R4,PC}|16-189
38934|code|BLX             __stack_chk_fail|252-247-14-239
38938|data|ALIGN 4|0-191
38940|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x97D6|254-180-1-0
38944|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
38948|code|PUSH            {R4,LR}|16-181
38950|code|MOV             R4, R0|4-70
38952|code|BL              testFilePath|255-247-208-255
38956|code|CBZ             R0, locret_983C|48-177
38958|code|MOV             R0, R4; name|32-70
38960|code|MOVS            R1, #1; type|1-33
38962|code|BLX             access|252-247-18-239
38966|code|ADDS            R0, #1|1-48
38968|code|IT NE|24-191
38970|code|MOVNE           R0, #1|1-32
38972|code|POP             {R4,PC}|16-189
38974|data|ALIGN 0x10|0-191
38976|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x984A)|19-75
38978|code|MOV             R1, R0; filename|1-70
38980|code|PUSH            {R4,LR}|16-181
38982|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38984|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|18-76
38986|code|SUB             SP, SP, #0x60|152-176
38988|code|MOVS            R0, #3; ver|3-32
38990|code|MOV             R2, SP; stat_buf|106-70
38992|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
38994|code|LDR             R3, [R4]|35-104
38996|code|STR             R3, [SP,#0x68+var_C]|23-147
38998|code|BLX             __xstat|252-247-232-239
39002|code|ADDS            R0, #1|1-48
39004|code|IT EQ|8-191
39006|code|MOVEQ           R3, #0|0-35
39008|code|BEQ             loc_987C|12-208
39010|code|LDR             R3, [SP,#0x68+var_58]|4-155
39012|code|AND.W           R3, R3, #0xF000|3-244-112-67
39016|code|CMP.W           R3, #0x4000|179-245-128-79
39020|code|IT EQ|8-191
39022|code|MOVEQ           R3, #1|1-35
39024|code|BEQ             loc_987C|4-208
39026|code|BLX             __errno_location|253-247-16-232
39030|code|MOVS            R3, #0|0-35
39032|code|MOVS            R2, #0x11|17-34
39034|code|STR             R2, [R0]|2-96
39036|code|LDR             R2, [SP,#0x68+var_C]|23-154
39038|code|MOV             R0, R3|24-70
39040|code|LDR             R3, [R4]|35-104
39042|code|CMP             R2, R3|154-66
39044|code|BNE             loc_988A|1-209
39046|code|ADD             SP, SP, #0x60 ; '`'|24-176
39048|code|POP             {R4,PC}|16-189
39050|code|BLX             __stack_chk_fail|252-247-212-238
39054|data|ALIGN 0x10|0-191
39056|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x984A|138-180-1-0
39060|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
39064|code|PUSH            {R4,R5,LR}|48-181
39066|code|MOVW            R1, #0x1ED; mode|64-242-237-17
39070|code|SUB             SP, SP, #0xC|131-176
39072|code|MOV             R4, R0|4-70
39074|code|BLX             mkdir|252-247-236-238
39078|code|ADDS            R0, #1|1-48
39080|code|IT NE|24-191
39082|code|MOVNE           R0, #1|1-32
39084|code|BEQ             loc_98B2|1-208
39086|code|ADD             SP, SP, #0xC|3-176
39088|code|POP             {R4,R5,PC}|48-189
39090|code|LDR             R1, =(aCannotCreateDi - 0x98BC); "cannot create directory"|11-73
39092|code|MOVS            R2, #5; category|5-34
39094|code|MOVS            R0, #0; domainname|0-32
39096|code|ADD             R1, PC; "cannot create directory"|121-68
39098|code|BLX             dcgettext|252-247-218-238
39102|code|MOV             R5, R0|5-70
39104|code|BLX             __errno_location|252-247-232-239
39108|code|LDR             R0, [R0]; errnum|0-104
39110|code|BLX             strerror|252-247-106-237
39114|code|LDR             R1, =(aSSS - 0x98D4); "%s: %s: %s"|6-73
39116|code|MOV             R2, R5|42-70
39118|code|MOV             R3, R4|35-70
39120|code|ADD             R1, PC; "%s: %s: %s"|121-68
39122|code|STR             R0, [SP,#0x18+var_18]|0-144
39124|code|MOVS            R0, #4|4-32
39126|code|BL              logMessage|255-247-181-251
39130|code|MOVS            R0, #0|0-32
39132|code|ADD             SP, SP, #0xC|3-176
39134|code|POP             {R4,R5,PC}|48-189
39136|data|DCD aCannotCreateDi - 0x98BC; "cannot create directory"|144-130-0-0
39140|data|DCD aSSS - 0x98D4; "%s: %s: %s"|44-123-0-0
39144|code|PUSH            {R3-R7,LR}|248-181
39146|code|MOV             R5, R0|5-70
39148|code|BL              testDirectoryPath|255-247-168-255
39152|code|MOV             R4, R0|4-70
39154|code|CBNZ            R0, loc_994E|96-187
39156|code|BLX             __errno_location|252-247-206-239
39160|code|LDR             R0, [R0]; errnum|0-104
39162|code|CMP             R0, #0x11|17-40
39164|code|BEQ             loc_9954|42-208
39166|code|CMP             R0, #2|2-40
39168|code|BEQ             loc_9918|10-208
39170|code|BLX             strerror|252-247-76-237
39174|code|LDR             R1, =(aCannotAccessDi - 0x990E); "cannot access directory: %s: %s"|23-73
39176|code|MOV             R2, R5|42-70
39178|code|ADD             R1, PC; "cannot access directory: %s: %s"|121-68
39180|code|MOV             R3, R0|3-70
39182|code|MOVS            R0, #3|3-32
39184|code|BL              logMessage|255-247-152-251
39188|code|MOV             R0, R4|32-70
39190|code|POP             {R3-R7,PC}|248-189
39192|code|MOV             R0, R5|40-70
39194|code|BL              getPathDirectory|255-247-231-253
39198|code|MOV             R6, R0|6-70
39200|code|CMP             R0, #0|0-40
39202|code|BEQ             loc_9914|247-208
39204|code|BL              ensureDirectory|255-247-224-255
39208|code|MOV             R7, R0|7-70
39210|code|MOV             R0, R6; ptr|48-70
39212|code|BLX             free|252-247-10-237
39216|code|CMP             R7, #0|0-47
39218|code|BEQ             loc_9914|239-208
39220|code|MOV             R0, R5|40-70
39222|code|BL              createDirectory|255-247-175-255
39226|code|CMP             R0, #0|0-40
39228|code|BEQ             loc_9914|234-208
39230|code|LDR             R1, =(aDirectoryCreat - 0x994A); "directory created: %s"|10-73
39232|code|MOV             R2, R5|42-70
39234|code|MOVS            R0, #5|5-32
39236|code|MOVS            R4, #1|1-36
39238|code|ADD             R1, PC; "directory created: %s"|121-68
39240|code|BL              logMessage|255-247-124-251
39244|code|B               loc_9914|226-231
39246|code|MOVS            R4, #1|1-36
39248|code|MOV             R0, R4|32-70
39250|code|POP             {R3-R7,PC}|248-189
39252|code|LDR             R1, =(aNotADirectoryS - 0x995E); "not a directory: %s"|5-73
39254|code|MOV             R2, R5|42-70
39256|code|MOVS            R0, #3|3-32
39258|code|ADD             R1, PC; "not a directory: %s"|121-68
39260|code|BL              logMessage|255-247-114-251
39264|code|B               loc_9914|216-231
39266|data|ALIGN 4|0-191
39268|data|DCD aCannotAccessDi - 0x990E; "cannot access directory: %s: %s"|106-130-0-0
39272|data|DCD aDirectoryCreat - 0x994A; "directory created: %s"|78-130-0-0
39276|data|DCD aNotADirectoryS - 0x995E; "not a directory: %s"|6-130-0-0
39280|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9978)|7-75
39282|code|LDR             R2, =(writableDirectory_ptr - 0x24CD4)|8-74
39284|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
39286|code|PUSH            {R4,LR}|16-181
39288|code|LDR             R4, [R3,R2]; writableDirectory|156-88
39290|code|LDR             R0, [R4]|32-104
39292|code|CBZ             R0, loc_998C|48-177
39294|code|LDRB            R3, [R0]|3-120
39296|code|CBZ             R3, loc_998C|35-177
39298|code|BL              ensureDirectory|255-247-177-255
39302|code|CBZ             R0, loc_998C|8-177
39304|code|LDR             R0, [R4]|32-104
39306|code|POP             {R4,PC}|16-189
39308|code|MOVS            R0, #0|0-32
39310|code|POP             {R4,PC}|16-189
39312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9978|92-179-1-0
39316|data|DCD writableDirectory_ptr - 0x24CD4|20-3-0-0
39320|code|PUSH            {R4,LR}|16-181
39322|code|MOV             R4, R0|4-70
39324|code|BL              getWritableDirectory|255-247-232-255
39328|code|CBZ             R0, locret_99AC|32-177
39330|code|MOV             R1, R4|33-70
39332|code|POP.W           {R4,LR}|189-232-16-64
39336|code|B.W             makePath|255-247-82-190
39340|code|POP             {R4,PC}|16-189
39342|data|ALIGN 0x10|0-191
39344|code|PUSH            {R3-R7,LR}|248-181
39346|code|MOVS            R6, #0|0-38
39348|code|MOVS            R4, #0x80|128-36
39350|code|B               loc_99CC|9-224
39352|code|BLX             getcwd|252-247-14-239
39356|code|MOV             R6, R5|46-70
39358|code|CBNZ            R0, loc_9A12|64-187
39360|code|BLX             __errno_location|252-247-104-239
39364|code|LDR             R3, [R0]|3-104
39366|code|MOV             R7, R0|7-70
39368|code|CMP             R3, #0x22 ; '"'|34-43
39370|code|BNE             loc_9A16|36-209
39372|code|LSLS            R4, R4, #1|100-0
39374|code|MOV             R0, R6; ptr|48-70
39376|code|MOV             R1, R4; size|33-70
39378|code|BLX             realloc|252-247-236-237
39382|code|MOV             R1, R4; size|33-70
39384|code|MOV             R5, R0|5-70
39386|code|CMP             R0, #0|0-40
39388|code|BNE             loc_99B8|236-209
39390|code|MOV             R5, R6|53-70
39392|code|BL              logMallocError|255-247-188-251
39396|code|CBNZ            R6, loc_9A26|254-185
39398|code|BLX             __errno_location|252-247-86-239
39402|code|MOV             R7, R0|7-70
39404|code|LDR             R1, =(aCannotGetWorki - 0x99F6); "cannot get working directory"|16-73
39406|code|MOVS            R2, #5; category|5-34
39408|code|MOVS            R0, #0; domainname|0-32
39410|code|ADD             R1, PC; "cannot get working directory"|121-68
39412|code|BLX             dcgettext|252-247-60-238
39416|code|MOV             R4, R0|4-70
39418|code|LDR             R0, [R7]; errnum|56-104
39420|code|BLX             strerror|252-247-206-236
39424|code|LDR             R1, =(aSS - 0x9A08); "%s: %s"|12-73
39426|code|MOV             R2, R4|34-70
39428|code|ADD             R1, PC; "%s: %s"|121-68
39430|code|MOV             R3, R0|3-70
39432|code|MOVS            R0, #4|4-32
39434|code|BL              logMessage|255-247-27-251
39438|code|MOVS            R0, #0|0-32
39440|code|POP             {R3-R7,PC}|248-189
39442|code|MOV             R0, R5|40-70
39444|code|POP             {R3-R7,PC}|248-189
39446|code|LDR             R0, =(aGetcwd_0 - 0x9A1C); "getcwd"|8-72
39448|code|ADD             R0, PC; "getcwd"|120-68
39450|code|BL              logSystemError|255-247-149-251
39454|code|MOV             R0, R5; ptr|40-70
39456|code|BLX             free|252-247-144-236
39460|code|B               loc_99EC|226-231
39462|code|BLX             __errno_location|252-247-54-239
39466|code|MOV             R7, R0|7-70
39468|code|B               loc_9A1E|247-231
39470|data|ALIGN 0x10|0-191
39472|data|DCD aCannotGetWorki - 0x99F6; "cannot get working directory"|194-129-0-0
39476|data|DCD aSS - 0x9A08; "%s: %s"|192-135-0-0
39480|data|DCD aGetcwd_0 - 0x9A1C; "getcwd"|148-129-0-0
39484|code|PUSH            {R4,R5,LR}|48-181
39486|code|SUB             SP, SP, #0xC|131-176
39488|code|MOV             R4, R0|4-70
39490|code|BLX             chdir|252-247-28-236
39494|code|ADDS            R0, #1|1-48
39496|code|IT NE|24-191
39498|code|MOVNE           R0, #1|1-32
39500|code|BEQ             loc_9A52|1-208
39502|code|ADD             SP, SP, #0xC|3-176
39504|code|POP             {R4,R5,PC}|48-189
39506|code|LDR             R1, =(aCannotSetWorki - 0x9A5C); "cannot set working directory"|11-73
39508|code|MOVS            R2, #5; category|5-34
39510|code|MOVS            R0, #0; domainname|0-32
39512|code|ADD             R1, PC; "cannot set working directory"|121-68
39514|code|BLX             dcgettext|252-247-10-238
39518|code|MOV             R5, R0|5-70
39520|code|BLX             __errno_location|252-247-24-239
39524|code|LDR             R0, [R0]; errnum|0-104
39526|code|BLX             strerror|252-247-154-236
39530|code|LDR             R1, =(aSSS - 0x9A74); "%s: %s: %s"|6-73
39532|code|MOV             R2, R5|42-70
39534|code|MOV             R3, R4|35-70
39536|code|ADD             R1, PC; "%s: %s: %s"|121-68
39538|code|STR             R0, [SP,#0x18+var_18]|0-144
39540|code|MOVS            R0, #4|4-32
39542|code|BL              logMessage|255-247-229-250
39546|code|MOVS            R0, #0|0-32
39548|code|ADD             SP, SP, #0xC|3-176
39550|code|POP             {R4,R5,PC}|48-189
39552|data|DCD aCannotSetWorki - 0x9A5C; "cannot set working directory"|124-129-0-0
39556|data|DCD aSSS - 0x9A74; "%s: %s: %s"|140-121-0-0
39560|code|LDR             R0, =(aHome - 0x9A90); "HOME"|12-72
39562|code|PUSH            {LR}|0-181
39564|code|ADD             R0, PC; "HOME"|120-68
39566|code|SUB             SP, SP, #0xC|131-176
39568|code|BLX             getenv|252-247-90-239
39572|code|MOV             R3, R0|3-70
39574|code|CBZ             R0, loc_9AA8|56-177
39576|code|LDRB            R3, [R0]|3-120
39578|code|CBZ             R3, loc_9AA8|43-177
39580|code|BLX             __strdup|252-247-24-237
39584|code|CBZ             R0, loc_9AB0|48-177
39586|code|ADD             SP, SP, #0xC|3-176
39588|code|POP.W           {PC}|93-248-4-251
39592|code|MOV             R0, R3|24-70
39594|code|ADD             SP, SP, #0xC|3-176
39596|code|POP.W           {PC}|93-248-4-251
39600|code|STR             R0, [SP,#0x10+var_C]|1-144
39602|code|BL              logMallocError|255-247-83-251
39606|code|LDR             R0, [SP,#0x10+var_C]|1-152
39608|code|B               loc_9AA2|243-231
39610|data|ALIGN 4|0-191
39612|data|DCD aHome - 0x9A90; "HOME"|104-129-0-0
39616|code|LDR             R1, =(_GLOBAL_OFFSET_TABLE_ - 0x9AC8)|111-73
39618|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|112-74
39620|code|ADD             R1, PC; _GLOBAL_OFFSET_TABLE_|121-68
39622|code|LDR             R3, =(dword_25080 - 0x9AD0)|112-75
39624|code|PUSH.W          {R4-R10,LR}|45-233-240-71
39628|code|ADD             R3, PC; dword_25080|123-68
39630|code|LDR             R4, [R1,R2]; __stack_chk_guard|140-88
39632|code|SUB             SP, SP, #0x10|132-176
39634|code|LDR             R0, [R3]|24-104
39636|code|LDR             R3, [R4]|35-104
39638|code|STR             R3, [SP,#0x30+var_24]|3-147
39640|code|CBZ             R0, loc_9AEA|56-177
39642|code|LDR             R2, [SP,#0x30+var_24]|3-154
39644|code|LDR             R3, [R4]|35-104
39646|code|CMP             R2, R3|154-66
39648|code|BNE.W           loc_9C5C|64-240-188-128
39652|code|ADD             SP, SP, #0x10|4-176
39654|code|POP.W           {R4-R10,PC}|189-232-240-135
39658|code|LDR             R0, =(aXdgConfigDirs - 0x9AF0); "XDG_CONFIG_DIRS"|104-72
39660|code|ADD             R0, PC; "XDG_CONFIG_DIRS"|120-68
39662|code|BLX             getenv|252-247-44-239
39666|code|CMP             R0, #0|0-40
39668|code|BEQ             loc_9BCC|106-208
39670|code|LDRB            R3, [R0]|3-120
39672|code|CMP             R3, #0|0-43
39674|code|BEQ             loc_9BAC|87-208
39676|code|MOVS            R1, #0x3A ; ':'; c|58-33
39678|code|ADD             R2, SP, #0x30+var_2C|1-170
39680|code|BL              splitString|0-240-52-253
39684|code|MOV             R8, R0|128-70
39686|code|CMP             R0, #0|0-40
39688|code|BEQ             loc_9B94|68-208
39690|code|LDR             R6, [SP,#0x30+var_2C]|1-158
39692|code|ADDS            R0, R6, #3|240-28
39694|code|ADDS            R6, #2|2-54
39696|code|LSLS            R0, R0, #2; size|128-0
39698|code|BLX             malloc|252-247-58-238
39702|code|MOV             R9, R0|129-70
39704|code|CMP             R0, #0|0-40
39706|code|BEQ             loc_9C14|123-208
39708|code|LDR             R0, =(aXdgConfigHome - 0x9B26); "XDG_CONFIG_HOME"|92-72
39710|code|MOVS            R3, #0|0-35
39712|code|STR             R3, [SP,#0x30+var_28]|2-147
39714|code|ADD             R0, PC; "XDG_CONFIG_HOME"|120-68
39716|code|BLX             getenv|252-247-16-239
39720|code|CBZ             R0, loc_9B30|16-177
39722|code|LDRB            R3, [R0]|3-120
39724|code|CMP             R3, #0|0-43
39726|code|BNE             loc_9BB2|64-209
39728|code|BL              getHomeDirectory|255-247-170-255
39732|code|MOV             R5, R0|5-70
39734|code|CBZ             R0, loc_9B42|32-177
39736|code|LDRB            R3, [R0]|3-120
39738|code|CMP             R3, #0|0-43
39740|code|BNE             loc_9BE6|83-209
39742|code|BLX             free|252-247-2-236
39746|code|LDR             R3, [SP,#0x30+var_28]|2-155
39748|code|CMP             R3, #0|0-43
39750|code|BEQ             loc_9BD2|68-208
39752|code|LDR.W           R2, [R8]|216-248-0-32
39756|code|CMP             R2, #0|0-42
39758|code|BEQ             loc_9C1A|100-208
39760|code|ADD             R7, SP, #0x30+var_28|2-175
39762|code|MOV             R5, R8|69-70
39764|code|B               loc_9B60|4-224
39766|code|SUBS            R6, #1|1-62
39768|code|LDR.W           R2, [R5,#4]!|85-248-4-47
39772|code|CMP             R2, #0|0-42
39774|code|BEQ             loc_9C1A|92-208
39776|code|LDRB            R3, [R2]|19-120
39778|code|CMP             R3, #0|0-43
39780|code|BEQ             loc_9B56|247-208
39782|code|MOV             R0, R9|72-70
39784|code|MOV             R1, R7|57-70
39786|code|MOVS            R3, #1|1-35
39788|code|BL              sub_9684|255-247-138-253
39792|code|CMP             R0, #0|0-40
39794|code|BNE             loc_9B58|241-209
39796|code|LDR             R3, [R5]|43-104
39798|code|CMP             R3, #0|0-43
39800|code|BEQ             loc_9C1A|79-208
39802|code|LDR             R3, [SP,#0x30+var_28]|2-155
39804|code|MOVS            R2, #0|0-34
39806|code|CMP             R6, R3|158-66
39808|code|STR.W           R2, [R9,R3,LSL#2]|73-248-35-32
39812|code|BNE             loc_9BC4|30-209
39814|code|LDR             R3, =(dword_25080 - 0x9B8C)|67-75
39816|code|ADD             R3, PC; dword_25080|123-68
39818|code|STR.W           R9, [R3]|195-248-0-144
39822|code|MOV             R0, R8; ptr|64-70
39824|code|BL              deallocateStrings|0-240-220-252
39828|code|LDR             R5, =(dword_25080 - 0x9B9A)|64-77
39830|code|ADD             R5, PC; dword_25080|125-68
39832|code|LDR             R0, [R5]|40-104
39834|code|CMP             R0, #0|0-40
39836|code|BNE             loc_9ADA|157-209
39838|code|LDR             R1, =(aNoOverrideDire - 0x9BA6); "no override directories"|63-73
39840|code|MOVS            R0, #4|4-32
39842|code|ADD             R1, PC; "no override directories"|121-68
39844|code|BL              logMessage|255-247-78-250
39848|code|LDR             R0, [R5]|40-104
39850|code|B               loc_9ADA|150-231
39852|code|LDR             R0, =(aEtcXdg - 0x9BB2); "/etc/xdg"|60-72
39854|code|ADD             R0, PC; "/etc/xdg"|120-68
39856|code|B               loc_9AFC|164-231
39858|code|MOV             R2, R0|2-70
39860|code|ADD             R1, SP, #0x30+var_28|2-169
39862|code|MOV             R0, R9|72-70
39864|code|MOVS            R3, #1|1-35
39866|code|BL              sub_9684|255-247-99-253
39870|code|CMP             R0, #0|0-40
39872|code|BEQ             loc_9B7A|219-208
39874|code|B               loc_9B42|190-231
39876|code|MOV             R0, R9; ptr|72-70
39878|code|BL              deallocateStrings|0-240-193-252
39882|code|B               loc_9B8E|224-231
39884|code|LDR             R0, =(aEtcXdg - 0x9BD2); "/etc/xdg"|53-72
39886|code|ADD             R0, PC; "/etc/xdg"|120-68
39888|code|B               loc_9AFC|148-231
39890|code|MOVS            R0, #1; nmemb|1-32
39892|code|MOV             R1, R0; size|1-70
39894|code|BLX             calloc|252-247-144-237
39898|code|CBZ             R0, loc_9C48|168-179
39900|code|MOVS            R3, #1|1-35
39902|code|STR.W           R0, [R9]|201-248-0-0
39906|code|STR             R3, [SP,#0x30+var_28]|2-147
39908|code|B               loc_9B48|176-231
39910|code|LDR             R1, =(aConfig - 0x9BEC); ".config"|48-73
39912|code|ADD             R1, PC; ".config"|121-68
39914|code|BL              makePath|255-247-49-253
39918|code|MOV             R7, R0|7-70
39920|code|MOV             R0, R5; ptr|40-70
39922|code|BLX             free|252-247-168-235
39926|code|CMP             R7, #0|0-47
39928|code|BEQ             loc_9B42|163-208
39930|code|MOV             R0, R9|72-70
39932|code|ADD             R1, SP, #0x30+var_28|2-169
39934|code|MOV             R2, R7|58-70
39936|code|MOVS            R3, #1|1-35
39938|code|BL              sub_9684|255-247-63-253
39942|code|MOV             R5, R0|5-70
39944|code|MOV             R0, R7; ptr|56-70
39946|code|BLX             free|252-247-156-235
39950|code|CMP             R5, #0|0-45
39952|code|BEQ             loc_9B7A|179-208
39954|code|B               loc_9B42|150-231
39956|code|BL              logMallocError|255-247-162-250
39960|code|B               loc_9B8E|185-231
39962|code|BL              getHomeDirectory|255-247-53-255
39966|code|MOV             R5, R0|5-70
39968|code|CBZ             R0, loc_9C60|240-177
39970|code|LDRB            R7, [R0]|7-120
39972|code|CBNZ            R7, loc_9C4E|159-185
39974|code|BL              getWorkingDirectory|255-247-195-254
39978|code|MOV             R10, R0|130-70
39980|code|CBZ             R0, loc_9C40|64-177
39982|code|MOV             R3, R7|59-70
39984|code|MOV             R0, R9|72-70
39986|code|ADD             R1, SP, #0x30+var_28|2-169
39988|code|MOV             R2, R10|82-70
39990|code|BL              sub_9684|255-247-37-253
39994|code|MOV             R0, R10; ptr|80-70
39996|code|BLX             free|252-247-130-235
40000|code|MOV             R0, R5; ptr|40-70
40002|code|BLX             free|252-247-128-235
40006|code|B               loc_9B7A|152-231
40008|code|BL              logMallocError|255-247-136-250
40012|code|B               loc_9B7A|149-231
40014|code|MOV             R0, R9|72-70
40016|code|ADD             R1, SP, #0x30+var_28|2-169
40018|code|MOV             R2, R5|42-70
40020|code|MOVS            R3, #0|0-35
40022|code|BL              sub_9684|255-247-21-253
40026|code|B               loc_9C40|241-231
40028|code|BLX             __stack_chk_fail|252-247-234-236
40032|code|BL              getWorkingDirectory|255-247-166-254
40036|code|MOV             R7, R0|7-70
40038|code|CMP             R0, #0|0-40
40040|code|BEQ             loc_9B7A|135-208
40042|code|MOV             R3, R5|43-70
40044|code|MOV             R0, R9|72-70
40046|code|ADD             R1, SP, #0x30+var_28|2-169
40048|code|MOV             R2, R7|58-70
40050|code|BL              sub_9684|255-247-7-253
40054|code|MOV             R0, R7; ptr|56-70
40056|code|BLX             free|252-247-100-235
40060|code|B               loc_9B7A|125-231
40062|data|ALIGN 0x10|0-191
40064|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9AC8|12-178-1-0
40068|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
40072|data|DCD dword_25080 - 0x9AD0|176-181-1-0
40076|data|DCD aXdgConfigDirs - 0x9AF0; "XDG_CONFIG_DIRS"|28-129-0-0
40080|data|DCD aXdgConfigHome - 0x9B26; "XDG_CONFIG_HOME"|246-128-0-0
40084|data|DCD dword_25080 - 0x9B8C|244-180-1-0
40088|data|DCD dword_25080 - 0x9B9A|230-180-1-0
40092|data|DCD aNoOverrideDire - 0x9BA6; "no override directories"|142-128-0-0
40096|data|DCD aEtcXdg - 0x9BB2; "/etc/xdg"|78-128-0-0
40100|data|DCD aEtcXdg - 0x9BD2; "/etc/xdg"|46-128-0-0
40104|data|DCD aConfig - 0x9BEC; ".config"|64-128-0-0
40108|code|PUSH            {R3,LR}|8-181
40110|code|BL              getAllOverrideDirectories|255-247-7-255
40114|code|CBZ             R0, loc_9CBE|32-177
40116|code|LDR             R0, [R0]|0-104
40118|code|CBZ             R0, loc_9CBE|16-177
40120|code|LDRB            R3, [R0]|3-120
40122|code|CBZ             R3, loc_9CBE|3-177
40124|code|POP             {R3,PC}|8-189
40126|code|LDR             R1, =(aNoPrimaryOverr - 0x9CC6); "no primary override directory"|3-73
40128|code|MOVS            R0, #4|4-32
40130|code|ADD             R1, PC; "no primary override directory"|121-68
40132|code|BL              logMessage|255-247-190-249
40136|code|MOVS            R0, #0|0-32
40138|code|POP             {R3,PC}|8-189
40140|data|DCD aNoPrimaryOverr - 0x9CC6; "no primary override directory"|134-127-0-0
40144|code|MOVS            R2, R1|10-28
40146|code|MOV.W           R1, #7; cmd|79-240-7-1
40150|code|IT NE|24-191
40152|code|MOVNE           R2, #1|1-34
40154|code|B.W             sub_9450|255-247-185-187
40158|data|ALIGN 0x10|0-191
40160|code|MOVS            R2, R1|10-28
40162|code|MOV.W           R1, #6; cmd|79-240-6-1
40166|code|IT NE|24-191
40168|code|MOVNE           R2, #1|1-34
40170|code|B.W             sub_9450|255-247-177-187
40174|data|ALIGN 0x10|0-191
40176|code|MOVS            R1, #6; cmd|6-33
40178|code|MOVS            R2, #2|2-34
40180|code|B.W             sub_9450|255-247-172-187
40184|code|MOV             R2, R1|10-70
40186|code|LDR             R1, =(loc_9438+1 - 0x9D00)|2-73
40188|code|ADD             R1, PC; loc_9438|121-68
40190|code|B.W             onProgramExit|253-247-47-187
40194|data|ALIGN 4|0-191
40196|data|DCD loc_9438+1 - 0x9D00|57-247-255-255
40200|code|B.W             j_fflush|252-247-228-189
40204|code|PUSH            {R4-R6,LR}|112-181
40206|code|MOV             R6, R2|22-70
40208|code|MOV             R5, R0|5-70
40210|code|BLX             fopen|252-247-246-235
40214|code|MOV             R4, R0|4-70
40216|code|CBZ             R0, loc_9D30|80-177
40218|code|BLX             fileno|252-247-114-236
40222|code|LDR             R1, =(aFileOpenedSFdD - 0x9D26); "file opened: %s fd=%d"|16-73
40224|code|MOV             R2, R5|42-70
40226|code|ADD             R1, PC; "file opened: %s fd=%d"|121-68
40228|code|MOV             R3, R0|3-70
40230|code|MOVS            R0, #7|7-32
40232|code|BL              logMessage|255-247-140-249
40236|code|MOV             R0, R4|32-70
40238|code|POP             {R4-R6,PC}|112-189
40240|code|CBNZ            R6, loc_9D50|118-185
40242|code|BLX             __errno_location|252-247-176-237
40246|code|LDR             R0, [R0]; errnum|0-104
40248|code|MOVS            R6, #3|3-38
40250|code|BLX             strerror|252-247-48-235
40254|code|LDR             R1, =(aCannotOpenFile - 0x9D46); "cannot open file: %s: %s"|9-73
40256|code|MOV             R2, R5|42-70
40258|code|ADD             R1, PC; "cannot open file: %s: %s"|121-68
40260|code|MOV             R3, R0|3-70
40262|code|MOV             R0, R6|48-70
40264|code|BL              logMessage|255-247-124-249
40268|code|MOV             R0, R4|32-70
40270|code|POP             {R4-R6,PC}|112-189
40272|code|BLX             __errno_location|252-247-160-237
40276|code|LDR             R0, [R0]|0-104
40278|code|CMP             R0, #2|2-40
40280|code|IT EQ|8-191
40282|code|MOVEQ           R6, #7|7-38
40284|code|BNE             loc_9D38|236-209
40286|code|B               loc_9D3A|236-231
40288|data|DCD aFileOpenedSFdD - 0x9D26; "file opened: %s fd=%d"|70-127-0-0
40292|data|DCD aCannotOpenFile - 0x9D46; "cannot open file: %s: %s"|22-116-0-0
40296|code|PUSH.W          {R3-R9,LR}|45-233-248-67
40300|code|MOV             R6, R1|14-70
40302|code|MOV             R7, R2|23-70
40304|code|MOV             R8, R0|128-70
40306|code|BLX             ferror|252-247-206-236
40310|code|CBZ             R0, loc_9D82|32-177
40312|code|MOV.W           R9, #0|79-240-0-9
40316|code|MOV             R0, R9|72-70
40318|code|POP.W           {R3-R9,PC}|189-232-248-131
40322|code|MOV             R0, R8; stream|64-70
40324|code|BLX             feof|252-247-40-235
40328|code|MOV             R9, R0|129-70
40330|code|CMP             R0, #0|0-40
40332|code|BNE             loc_9D78|244-209
40334|code|LDR             R1, [R7]; n|57-104
40336|code|CMP             R1, #0|0-41
40338|code|BEQ             loc_9E06|56-208
40340|code|LDR             R0, [R6]; s|48-104
40342|code|MOV             R2, R8; stream|66-70
40344|code|BLX             fgets|252-247-198-236
40348|code|MOV             R5, R0|5-70
40350|code|CMP             R0, #0|0-40
40352|code|BEQ             loc_9E3C|76-208
40354|code|BLX             strlen|252-247-250-236
40358|code|SUBS            R3, R0, #1|67-30
40360|code|MOV             R4, R0|4-70
40362|code|LDRB            R2, [R5,R3]|234-92
40364|code|CMP             R2, #0xA|10-42
40366|code|BEQ             loc_9E1E|54-208
40368|code|LDR             R2, [R6]|50-104
40370|code|B               loc_9DD0|13-224
40372|code|ADDS            R0, R2, R4; s|16-25
40374|code|MOV             R2, R8; stream|66-70
40376|code|BLX             fgets|252-247-182-236
40380|code|CBZ             R0, loc_9DF8|224-177
40382|code|BLX             strlen|252-247-236-236
40386|code|LDR             R5, [R6]|53-104
40388|code|MOV             R2, R5|42-70
40390|code|ADD             R4, R0|4-68
40392|code|SUBS            R3, R4, #1|99-30
40394|code|LDRB            R1, [R5,R3]|233-92
40396|code|CMP             R1, #0xA|10-41
40398|code|BEQ             loc_9E1E|38-208
40400|code|LDR             R3, [R7]|59-104
40402|code|SUBS            R1, R3, R4; n|25-27
40404|code|CMP             R1, #1|1-41
40406|code|BNE             loc_9DB4|237-209
40408|code|LSLS            R5, R3, #1|93-0
40410|code|MOV             R0, R2; ptr|16-70
40412|code|MOV             R1, R5; size|41-70
40414|code|BLX             realloc|252-247-230-235
40418|code|SUBS            R1, R5, R4; n|41-27
40420|code|MOV             R2, R0|2-70
40422|code|CBZ             R0, loc_9E18|184-177
40424|code|STR             R0, [R6]|48-96
40426|code|ADDS            R0, R2, R4; s|16-25
40428|code|STR             R5, [R7]|61-96
40430|code|MOV             R2, R8; stream|66-70
40432|code|BLX             fgets|252-247-154-236
40436|code|CMP             R0, #0|0-40
40438|code|BNE             loc_9DBE|226-209
40440|code|MOV             R0, R8; stream|64-70
40442|code|BLX             ferror|252-247-138-236
40446|code|CBNZ            R0, loc_9E46|16-187
40448|code|MOV.W           R9, #1|79-240-1-9
40452|code|B               loc_9D7C|186-231
40454|code|MOVS            R4, #0x80|128-36
40456|code|STR             R4, [R7]|60-96
40458|code|MOV             R0, R4; size|32-70
40460|code|BLX             malloc|252-247-188-236
40464|code|MOV             R1, R4|33-70
40466|code|STR             R0, [R6]|48-96
40468|code|CMP             R0, #0|0-40
40470|code|BNE             loc_9D96|190-209
40472|code|BL              logMallocError|255-247-160-249
40476|code|B               loc_9D7C|174-231
40478|code|MOV             R2, R5|42-70
40480|code|CBZ             R3, loc_9E2E|43-177
40482|code|SUBS            R4, #2|2-60
40484|code|ADDS            R2, R5, R4|42-25
40486|code|LDRB            R1, [R5,R4]|41-93
40488|code|CMP             R1, #0xD|13-41
40490|code|IT NE|24-191
40492|code|ADDNE           R2, R5, R3|234-24
40494|code|MOV.W           R9, #1|79-240-1-9
40498|code|MOVS            R3, #0|0-35
40500|code|MOV             R0, R9|72-70
40502|code|STRB            R3, [R2]|19-112
40504|code|POP.W           {R3-R9,PC}|189-232-248-131
40508|code|MOV             R0, R8; stream|64-70
40510|code|BLX             ferror|252-247-104-236
40514|code|CMP             R0, #0|0-40
40516|code|BEQ             loc_9D78|152-208
40518|code|LDR             R0, =(aRead - 0x9E4C); "read"|2-72
40520|code|ADD             R0, PC; "read"|120-68
40522|code|BL              logSystemError|255-247-125-249
40526|code|B               loc_9D7C|149-231
40528|data|DCD aRead - 0x9E4C; "read"|112-117-0-0
40532|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9E5E)|34-75
40534|code|PUSH.W          {R4-R11,LR}|45-233-240-79
40538|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
40540|code|LDR             R6, =(__stack_chk_guard_ptr - 0x24CD4)|33-78
40542|code|SUB             SP, SP, #0x1C|135-176
40544|code|LDR.W           R10, =(unk_11AF0 - 0x9E80)|223-248-132-160
40548|code|MOV.W           LR, #0|79-240-0-14
40552|code|MOV             R5, R0|5-70
40554|code|MOV             R9, R1|137-70
40556|code|LDR             R3, [R3,R6]; __stack_chk_guard|155-89
40558|code|MOV             R8, R2|144-70
40560|code|MOV             R4, LR|116-70
40562|code|ADD             R7, SP, #0xC|3-175
40564|code|ADD             R6, SP, #0x1C+var_C|4-174
40566|code|STR.W           LR, [SP,#0x1C+s1]|205-248-12-224
40570|code|STR             R3, [SP,#0x1C+var_18]|1-147
40572|code|ADD             R10, PC; unk_11AF0|250-68
40574|code|LDR             R3, [R3]|27-104
40576|code|STR.W           LR, [SP,#0x1C+var_C]|205-248-16-224
40580|code|STR             R3, [SP,#0x1C+var_8]|5-147
40582|code|B               loc_9EA8|15-224
40584|code|LDR.W           R11, [SP,#0x1C+s1]|221-248-12-176
40588|code|CBNZ            R4, loc_9E9E|60-185
40590|code|MOV             R0, R11; s1|88-70
40592|code|MOV             R1, R10; s2|81-70
40594|code|MOVS            R2, #3; n|3-34
40596|code|BLX             strncmp|252-247-112-234
40600|code|CBNZ            R0, loc_9E9E|8-185
40602|code|ADD.W           R11, R11, #3|11-241-3-11
40606|code|MOV             R0, R11|88-70
40608|code|MOV             R1, R8|65-70
40610|code|BLX             R9|200-71
40612|code|ADDS            R4, #1|1-52
40614|code|CBZ             R0, loc_9EB6|48-177
40616|code|MOV             R0, R5|40-70
40618|code|MOV             R1, R7|57-70
40620|code|MOV             R2, R6|50-70
40622|code|BL              readLine|255-247-91-255
40626|code|CMP             R0, #0|0-40
40628|code|BNE             loc_9E88|232-209
40630|code|LDR             R0, [SP,#0x1C+s1]; ptr|3-152
40632|code|CBZ             R0, loc_9EBE|8-177
40634|code|BLX             free|252-247-68-234
40638|code|MOV             R0, R5; stream|40-70
40640|code|BLX             ferror|252-247-38-236
40644|code|LDR             R3, [SP,#0x1C+var_18]|1-155
40646|code|LDR             R2, [SP,#0x1C+var_8]|5-154
40648|code|LDR             R3, [R3]|27-104
40650|code|CMP             R2, R3|154-66
40652|code|CLZ.W           R0, R0|176-250-128-240
40656|code|MOV.W           R0, R0,LSR#5|79-234-80-16
40660|code|BNE             loc_9EDC|2-209
40662|code|ADD             SP, SP, #0x1C|7-176
40664|code|POP.W           {R4-R11,PC}|189-232-240-143
40668|code|BLX             __stack_chk_fail|252-247-170-235
40672|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9E5E|118-174-1-0
40676|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
40680|data|DCD unk_11AF0 - 0x9E80|112-124-0-0
40684|code|PUSH.W          {R4-R9,LR}|45-233-240-67
40688|code|SUB             SP, SP, #0xC|131-176
40690|code|MOV             R7, R3|31-70
40692|code|MOV             R9, R0|129-70
40694|code|MOVS            R3, #0|0-35
40696|code|ADD.W           R8, R0, R1|0-235-1-8
40700|code|STRB            R3, [R0]|3-112
40702|code|MOV             R4, R0|4-70
40704|code|LDR             R6, [SP,#0x28+arg_0]|10-158
40706|code|LDR             R5, [SP,#0x28+arg_4]|11-157
40708|code|CBZ             R2, loc_9F1A|74-177
40710|code|MOV             R3, R2|19-70
40712|code|LDR             R2, =(aCheckingSDevic+0x14 - 0x9F0E); "%s"|31-74
40714|code|ADD             R2, PC; "%s" ; format|122-68
40716|code|BLX             snprintf|252-247-218-234
40720|code|ADD             R0, R9|72-68
40722|code|CMP             R0, R8|64-69
40724|code|IT CS|40-191
40726|code|MOVCS           R0, R8|64-70
40728|code|MOV             R4, R0|4-70
40730|code|CBZ             R7, loc_9F44|159-177
40732|code|LDR             R7, [R7]|63-104
40734|code|MOV             R0, R4|32-70
40736|code|LDR.W           LR, =(aD - 0x9F32); "[%d]"|223-248-104-224
40740|code|RSB.W           R1, R4, R8|196-235-8-1
40744|code|MOVS            R2, #1|1-34
40746|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
40750|code|ADD             LR, PC; "[%d]"|254-68
40752|code|STR             R7, [SP,#0x28+var_24]|1-151
40754|code|STR.W           LR, [SP,#0x28+var_28]|205-248-0-224
40758|code|BLX             __snprintf_chk|252-247-54-236
40762|code|ADD             R0, R4|32-68
40764|code|CMP             R0, R8|64-69
40766|code|IT CS|40-191
40768|code|MOVCS           R0, R8|64-70
40770|code|MOV             R4, R0|4-70
40772|code|CMP             R4, R9|76-69
40774|code|BEQ             loc_9F60|11-208
40776|code|LDR             R2, =(asc_117A8 - 0x9F54); ": "|17-74
40778|code|MOV             R0, R4; s|32-70
40780|code|RSB.W           R1, R4, R8; maxlen|196-235-8-1
40784|code|ADD             R2, PC; ": "|122-68
40786|code|BLX             snprintf|252-247-184-234
40790|code|ADD             R0, R4|32-68
40792|code|CMP             R0, R8|64-69
40794|code|IT CS|40-191
40796|code|MOVCS           R0, R8|64-70
40798|code|MOV             R4, R0|4-70
40800|code|STR             R6, [SP,#0x28+var_28]|0-150
40802|code|MOV             R0, R4|32-70
40804|code|STR             R5, [SP,#0x28+var_24]|1-149
40806|code|RSB.W           R1, R4, R8|196-235-8-1
40810|code|MOVS            R2, #1|1-34
40812|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
40816|code|BLX             __vsnprintf_chk|252-247-32-234
40820|code|ADD             R0, R4|32-68
40822|code|CMP             R0, R8|64-69
40824|code|ITE LS|148-191
40826|code|RSBLS.W         R0, R9, R0|201-235-0-0
40830|code|RSBHI.W         R0, R9, R8|201-235-8-0
40834|code|ADD             SP, SP, #0xC|3-176
40836|code|POP.W           {R4-R9,PC}|189-232-240-131
40840|data|DCD aCheckingSDevic+0x14 - 0x9F0E; "%s"|118-126-0-0
40844|data|DCD aD - 0x9F32; "[%d]"|82-125-0-0
40848|data|DCD asc_117A8 - 0x9F54; ": "|84-120-0-0
40852|code|B.W             j_read|252-247-186-186
40856|code|B.W             j_write|252-247-42-188
40860|code|LDR             R0, =(aVarLibBrltty - 0x9FA2); "/var/lib/brltty"|1-72
40862|code|ADD             R0, PC; "/var/lib/brltty"|120-68
40864|code|BX              LR|112-71
40866|data|ALIGN 4|0-191
40868|data|DCD aVarLibBrltty - 0x9FA2; "/var/lib/brltty"|234-124-0-0
40872|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9FB0)|16-75
40874|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|17-74
40876|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
40878|code|PUSH            {R4-R6,LR}|112-181
40880|code|SUB             SP, SP, #0x10|132-176
40882|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
40884|code|MOV             R5, R0|5-70
40886|code|ADD             R0, SP, #0x20+pipedes; pipedes|1-168
40888|code|MOV             R6, R1|14-70
40890|code|LDR             R3, [R4]|35-104
40892|code|STR             R3, [SP,#0x20+var_14]|3-147
40894|code|BLX             pipe|252-247-14-237
40898|code|ADDS            R0, #1|1-48
40900|code|BEQ             loc_9FDC|10-208
40902|code|LDR             R1, [SP,#0x20+pipedes+4]|2-153
40904|code|MOVS            R0, #1|1-32
40906|code|LDR             R2, [SP,#0x20+pipedes]|1-154
40908|code|STR             R1, [R5]|41-96
40910|code|STR             R2, [R6]|50-96
40912|code|LDR             R2, [SP,#0x20+var_14]|3-154
40914|code|LDR             R3, [R4]|35-104
40916|code|CMP             R2, R3|154-66
40918|code|BNE             loc_9FE8|7-209
40920|code|ADD             SP, SP, #0x10|4-176
40922|code|POP             {R4-R6,PC}|112-189
40924|code|LDR             R0, =(aPipe_0 - 0x9FE2); "pipe"|5-72
40926|code|ADD             R0, PC; "pipe"|120-68
40928|code|BL              logSystemError|255-247-178-248
40932|code|MOVS            R0, #0|0-32
40934|code|B               loc_9FD0|243-231
40936|code|BLX             __stack_chk_fail|252-247-36-235
40940|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9FB0|36-173-1-0
40944|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
40948|data|DCD aPipe_0 - 0x9FE2; "pipe"|186-124-0-0
40952|code|MOVS            R3, #0; flags|0-35
40954|code|B.W             j_recv|252-247-67-186
40958|data|ALIGN 0x10|0-191
40960|code|MOVS            R3, #0; flags|0-35
40962|code|B.W             sub_68A0|252-247-77-188
40966|data|ALIGN 4|0-191
40968|code|PUSH            {R4,LR}|16-181
40970|code|LDR             R4, =(dword_25088 - 0xA010)|17-76
40972|code|ADD             R4, PC; dword_25088|124-68
40974|code|LDR             R0, [R4]|32-104
40976|code|CBZ             R0, loc_A014|0-177
40978|code|POP             {R4,PC}|16-189
40980|code|LDR             R0, =(aDevConsole - 0xA01C); "/dev/console"|15-72
40982|code|LDR             R1, =(aWb - 0xA01E); "wb"|16-73
40984|code|ADD             R0, PC; "/dev/console"|120-68
40986|code|ADD             R1, PC; "wb"|121-68
40988|code|BLX             fopen|252-247-112-234
40992|code|STR             R0, [R4]|32-96
40994|code|CBZ             R0, loc_A042|112-177
40996|code|BLX             fileno|252-247-236-234
41000|code|LDR             R1, =(aConsoleOpenedF - 0xA02E); "console opened: fd=%d"|12-73
41002|code|ADD             R1, PC; "console opened: fd=%d"|121-68
41004|code|MOV             R2, R0|2-70
41006|code|MOVS            R0, #7|7-32
41008|code|BL              logMessage|255-247-8-248
41012|code|LDR             R0, =(aConsoleStream - 0xA03C); "console-stream"|10-72
41014|code|MOV             R1, R4|33-70
41016|code|ADD             R0, PC; "console-stream"|120-68
41018|code|BL              registerProgramStream|255-247-93-254
41022|code|LDR             R0, [R4]|32-104
41024|code|POP             {R4,PC}|16-189
41026|code|LDR             R0, =(aConsoleOpen - 0xA048); "console open"|8-72
41028|code|ADD             R0, PC; "console open"|120-68
41030|code|BL              logSystemError|255-247-127-248
41034|code|LDR             R0, [R4]|32-104
41036|code|B               locret_A012|225-231
41038|data|ALIGN 0x10|0-191
41040|data|DCD dword_25088 - 0xA010|120-176-1-0
41044|data|DCD aDevConsole - 0xA01C; "/dev/console"|140-124-0-0
41048|data|DCD aWb - 0xA01E; "wb"|154-124-0-0
41052|data|DCD aConsoleOpenedF - 0xA02E; "console opened: fd=%d"|142-124-0-0
41056|data|DCD aConsoleStream - 0xA03C; "console-stream"|152-124-0-0
41060|data|DCD aConsoleOpen - 0xA048; "console open"|156-124-0-0
41064|code|PUSH            {R3-R7,LR}|248-181
41066|code|MOV             R7, R0|7-70
41068|code|MOV             R4, R1|12-70
41070|code|BL              getConsole|255-247-203-255
41074|code|MOV             R6, R0|6-70
41076|code|CBZ             R0, loc_A0B8|0-179
41078|code|CBNZ            R4, loc_A086|52-185
41080|code|B               loc_A0BC|32-224
41082|code|MOV             R0, R6; stream|48-70
41084|code|BLX             ferror|252-247-72-235
41088|code|CBNZ            R0, loc_A0B0|176-185
41090|code|SUBS            R4, R4, R5|100-27
41092|code|BEQ             loc_A0BC|26-208
41094|code|MOV             R0, R7; ptr|56-70
41096|code|MOVS            R1, #1; size|1-33
41098|code|MOV             R2, R4; n|34-70
41100|code|MOV             R3, R6; s|51-70
41102|code|BLX             fwrite|252-247-106-235
41106|code|MOV             R5, R0|5-70
41108|code|MOV             R0, R6; stream|48-70
41110|code|BLX             ferror|252-247-60-235
41114|code|ADD             R7, R5|47-68
41116|code|CMP             R0, #0|0-40
41118|code|BNE             loc_A07A|236-209
41120|code|MOV             R0, R6; stream|48-70
41122|code|BLX             fflush|252-247-26-236
41126|code|MOV             R0, R6; stream|48-70
41128|code|BLX             ferror|252-247-50-235
41132|code|CMP             R0, #0|0-40
41134|code|BEQ             loc_A082|232-208
41136|code|LDR             R0, =(unk_11CF4 - 0xA0B6)|3-72
41138|code|ADD             R0, PC; unk_11CF4|120-68
41140|code|BL              logSystemError|255-247-72-248
41144|code|MOVS            R0, #0|0-32
41146|code|POP             {R3-R7,PC}|248-189
41148|code|MOVS            R0, #1|1-32
41150|code|POP             {R3-R7,PC}|248-189
41152|data|DCD unk_11CF4 - 0xA0B6|62-124-0-0
41156|code|LDR             R0, =(unk_2500C - 0xA0CC)|2-72
41158|code|MOVS            R1, #1|1-33
41160|code|ADD             R0, PC; unk_2500C|120-68
41162|code|B.W             writeConsole|255-247-205-191
41166|data|ALIGN 0x10|0-191
41168|data|DCD unk_2500C - 0xA0CC|64-175-1-0
41172|code|LDR             R3, =(dword_25088 - 0xA0DA)|55-75
41174|code|ADD             R3, PC; dword_25088|123-68
41176|code|LDR             R0, [R3,#(dword_2508C - 0x25088)]|88-104
41178|code|CBZ             R0, loc_A0DE|0-177
41180|code|BX              LR|112-71
41182|code|PUSH.W          {R4-R11,LR}|45-233-240-79
41186|code|SUB             SP, SP, #0x1C|135-176
41188|code|LDR             R0, =(aDtdevroot - 0xA0F2); "DTDEVROOT"|52-72
41190|code|ADD             R7, SP, #0x40+var_30|4-175
41192|code|LDR             R4, =(off_249C4 - 0xA0F6); "DTDEVROOT"|52-76
41194|code|LDR.W           R8, =(aSS_0 - 0xA0FC); "%s%s"|223-248-212-128
41198|code|ADD             R0, PC; "DTDEVROOT"|120-68
41200|code|LDR             R6, =(aDev - 0xA100); "/dev"|52-78
41202|code|ADD             R4, PC; off_249C4|124-68
41204|code|LDR.W           R9, =(aDeviceDirector - 0xA102); "device directory error: %s (%s): %s"|223-248-208-144
41208|code|ADD             R8, PC; "%s%s"|248-68
41210|code|LDR             R3, =(dword_25088 - 0xA104)|52-75
41212|code|ADD             R6, PC; "/dev"|126-68
41214|code|ADD             R9, PC; "device directory error: %s (%s): %s"|249-68
41216|code|ADD             R3, PC; dword_25088|123-68
41218|code|STR             R3, [R7,#4]|123-96
41220|code|B               loc_A10C|2-224
41222|code|LDR.W           R0, [R4,#4]!; "UTDEVROOT"|84-248-4-15
41226|code|CBZ             R0, loc_A176|160-179
41228|code|BLX             getenv|252-247-28-236
41232|code|MOV             R10, R0|130-70
41234|code|CMP             R0, #0|0-40
41236|code|BEQ             loc_A106|247-208
41238|code|LDRB            R3, [R0]|3-120
41240|code|CMP             R3, #0|0-43
41242|code|BEQ             loc_A106|244-208
41244|code|BLX             strlen|252-247-60-235
41248|code|MOV             R11, SP|235-70
41250|code|MOVS            R2, #1|1-34
41252|code|ADD.W           R3, R0, #0xC|0-241-12-3
41256|code|ADDS            R1, R0, #5|65-29
41258|code|BIC.W           R3, R3, #7|35-240-7-3
41262|code|SUB.W           SP, SP, R3|173-235-3-13
41266|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
41270|code|ADD             R5, SP, #0x40+var_30|4-173
41272|code|STMEA.W         SP, {R8,R10}|141-232-0-5
41276|code|MOV             R0, R5|40-70
41278|code|STR             R6, [SP,#0x40+var_38]|2-150
41280|code|BLX             __snprintf_chk|252-247-48-235
41284|code|MOV             R0, R5; filename|40-70
41286|code|BL              testDirectoryPath|255-247-123-251
41290|code|CBNZ            R0, loc_A19A|48-187
41292|code|BLX             __errno_location|252-247-162-235
41296|code|LDR             R0, [R0]; errnum|0-104
41298|code|CMP             R0, #2|2-40
41300|code|BEQ             loc_A16C|10-208
41302|code|LDR.W           R10, [R4]; "DTDEVROOT"|212-248-0-160
41306|code|BLX             strerror|252-247-32-233
41310|code|MOV             R2, R5|42-70
41312|code|MOV             R1, R9|73-70
41314|code|MOV             R3, R10|83-70
41316|code|STR             R0, [SP,#0x40+var_40]|0-144
41318|code|MOVS            R0, #3|3-32
41320|code|BL              logMessage|254-247-108-255
41324|code|MOV             SP, R11|221-70
41326|code|LDR.W           R0, [R4,#4]!; "UTDEVROOT"|84-248-4-15
41330|code|CMP             R0, #0|0-40
41332|code|BNE             loc_A10C|202-209
41334|code|LDR             R3, =(aDev - 0xA17E); "/dev"|22-75
41336|code|LDR             R1, =(dword_25088 - 0xA180)|22-73
41338|code|ADD             R3, PC; "/dev"|123-68
41340|code|ADD             R1, PC; dword_25088|121-68
41342|code|MOV             R2, R3|26-70
41344|code|STR             R3, [R1,#(dword_2508C - 0x25088)]|75-96
41346|code|LDR             R1, =(aDeviceDirector_0 - 0xA18A); "device directory: %s"|21-73
41348|code|MOVS            R0, #7|7-32
41350|code|ADD             R1, PC; "device directory: %s"|121-68
41352|code|BL              logMessage|254-247-92-255
41356|code|LDR             R3, =(dword_25088 - 0xA194)|19-75
41358|code|ADDS            R7, #0xC|12-55
41360|code|ADD             R3, PC; dword_25088|123-68
41362|code|LDR             R0, [R3,#(dword_2508C - 0x25088)]|88-104
41364|code|MOV             SP, R7|189-70
41366|code|POP.W           {R4-R11,PC}|189-232-240-143
41370|code|MOV             R0, R5|40-70
41372|code|BLX             __strdup|252-247-152-233
41376|code|LDR             R3, [R7,#4]|123-104
41378|code|STR             R0, [R3,#4]|88-96
41380|code|CBNZ            R0, loc_A1AE|24-185
41382|code|BL              logMallocError|254-247-217-255
41386|code|MOV             SP, R11|221-70
41388|code|B               loc_A16E|223-231
41390|code|MOV             R2, R0|2-70
41392|code|MOV             SP, R11|221-70
41394|code|B               loc_A182|230-231
41396|data|DCD dword_25088 - 0xA0DA|174-175-1-0
41400|data|DCD aDtdevroot - 0xA0F2; "DTDEVROOT"|18-124-0-0
41404|data|DCD off_249C4 - 0xA0F6; "DTDEVROOT"|206-168-1-0
41408|data|DCD aSS_0 - 0xA0FC; "%s%s"|60-117-0-0
41412|data|DCD aDev - 0xA100; "/dev"|16-124-0-0
41416|data|DCD aDeviceDirector - 0xA102; "device directory error: %s (%s): %s"|22-124-0-0
41420|data|DCD dword_25088 - 0xA104|132-175-1-0
41424|data|DCD aDev - 0xA17E; "/dev"|146-123-0-0
41428|data|DCD dword_25088 - 0xA180|8-175-1-0
41432|data|DCD aDeviceDirector_0 - 0xA18A; "device directory: %s"|178-123-0-0
41436|data|DCD dword_25088 - 0xA194|244-174-1-0
41440|code|PUSH            {R4,LR}|16-181
41442|code|MOV             R4, R0|4-70
41444|code|BL              getDeviceDirectory|255-247-118-255
41448|code|MOV             R1, R4|33-70
41450|code|POP.W           {R4,LR}|189-232-16-64
41454|code|B.W             makePath|255-247-47-186
41458|data|ALIGN 4|0-191
41460|code|PUSH.W          {R4-R11,LR}|45-233-240-79
41464|code|MOV             R7, R0|7-70
41466|code|LDR.W           R3, [R7],#4|87-248-4-59
41470|code|SUB             SP, SP, #0x14|133-176
41472|code|MOV             R8, R1|136-70
41474|code|STR             R3, [SP,#0x38+var_2C]|3-147
41476|code|CMP             R3, #0|0-43
41478|code|BEQ             loc_A2A0|75-208
41480|code|LDR.W           R9, =(aCheckingSDevic - 0xA216); "checking %s device: %s"|223-248-164-144
41484|code|MOVS            R6, #0|0-38
41486|code|LDR.W           R10, =(aSDeviceAccessE - 0xA21A); "%s device access error: %s: %s"|223-248-164-160
41490|code|ADD             R9, PC; "checking %s device: %s"|249-68
41492|code|LDR             R5, [SP,#0x38+var_2C]|3-157
41494|code|ADD             R10, PC; "%s device access error: %s: %s"|250-68
41496|code|B               loc_A266|37-224
41498|code|MOVS            R0, #7|7-32
41500|code|BL              logMessage|254-247-18-255
41504|code|MOV             R0, R4|32-70
41506|code|BL              testPath|255-247-203-250
41510|code|CMP             R0, #0|0-40
41512|code|BNE             loc_A296|53-209
41514|code|BLX             __errno_location|252-247-52-235
41518|code|MOV             R11, R0|131-70
41520|code|LDR             R0, [R0]; errnum|0-104
41522|code|BLX             strerror|252-247-180-232
41526|code|MOV             R1, R10|81-70
41528|code|MOV             R2, R8|66-70
41530|code|MOV             R3, R4|35-70
41532|code|STR             R0, [SP,#0x38+var_38]|0-144
41534|code|MOVS            R0, #7|7-32
41536|code|BL              logMessage|254-247-0-255
41540|code|LDR.W           R3, [R11]|219-248-0-48
41544|code|MOV             R0, R4; ptr|32-70
41546|code|SUBS            R3, #2|2-59
41548|code|IT NE|24-191
41550|code|MOVNE           R3, #1|1-35
41552|code|CMP             R6, #0|0-46
41554|code|IT NE|24-191
41556|code|MOVNE           R3, #0|0-35
41558|code|CMP             R3, #0|0-43
41560|code|IT NE|24-191
41562|code|MOVNE           R6, R5|46-70
41564|code|BLX             free|252-247-114-232
41568|code|LDR.W           R5, [R7],#4|87-248-4-91
41572|code|CBZ             R5, loc_A278|69-177
41574|code|MOV             R0, R5|40-70
41576|code|BL              getDevicePath|255-247-186-255
41580|code|MOV             R1, R9|73-70
41582|code|MOV             R2, R8|66-70
41584|code|MOV             R4, R0|4-70
41586|code|MOV             R3, R0|3-70
41588|code|CMP             R0, #0|0-40
41590|code|BNE             loc_A21A|208-209
41592|code|LDR             R3, [SP,#0x38+var_2C]|3-155
41594|code|CMP             R6, #0|0-46
41596|code|IT EQ|8-191
41598|code|MOVEQ           R6, R3|30-70
41600|code|LDR             R1, =(aSDeviceS - 0xA28C); "%s device: %s"|13-73
41602|code|MOV             R2, R8|66-70
41604|code|MOVS            R0, #6|6-32
41606|code|MOV             R3, R6|51-70
41608|code|ADD             R1, PC; "%s device: %s"|121-68
41610|code|BL              logMessage|254-247-219-254
41614|code|MOV             R0, R6|48-70
41616|code|ADD             SP, SP, #0x14|5-176
41618|code|POP.W           {R4-R11,PC}|189-232-240-143
41622|code|MOV             R0, R4; ptr|32-70
41624|code|MOV             R6, R5|46-70
41626|code|BLX             free|252-247-84-232
41630|code|B               loc_A280|239-231
41632|code|MOV             R2, R1|10-70
41634|code|LDR             R1, =(aSDeviceNamesNo - 0xA2AC); "%s device names not defined"|6-73
41636|code|MOVS            R0, #3|3-32
41638|code|MOV             R6, R3|30-70
41640|code|ADD             R1, PC; "%s device names not defined"|121-68
41642|code|BL              logMessage|254-247-203-254
41646|code|B               loc_A28E|238-231
41648|data|DCD aCheckingSDevic - 0xA216; "checking %s device: %s"|90-123-0-0
41652|data|DCD aSDeviceAccessE - 0xA21A; "%s device access error: %s: %s"|110-123-0-0
41656|data|DCD aSDeviceS - 0xA28C; "%s device: %s"|28-123-0-0
41660|data|DCD aSDeviceNamesNo - 0xA2AC; "%s device names not defined"|168-122-0-0
41664|code|PUSH            {R3-R7,LR}|248-181
41666|code|MOV             R7, R0|7-70
41668|code|LDR             R5, [R0]|5-104
41670|code|MOV             R6, R1|14-70
41672|code|MOVS            R1, #0x3A ; ':'; c|58-33
41674|code|MOV             R0, R5; s|40-70
41676|code|BLX             strchr|252-247-102-235
41680|code|CBZ             R0, locret_A2F0|112-177
41682|code|SUBS            R4, R0, R5|68-27
41684|code|CBZ             R6, loc_A2F2|110-177
41686|code|CBZ             R4, loc_A2EE|84-177
41688|code|MOV             R1, R6; s2|49-70
41690|code|MOV             R0, R5; s1|40-70
41692|code|MOV             R2, R4; n|34-70
41694|code|BLX             strncasecmp|252-247-220-233
41698|code|CBNZ            R0, loc_A2EE|32-185
41700|code|ADDS            R4, #1|1-52
41702|code|MOVS            R0, #1|1-32
41704|code|ADD             R5, R4|37-68
41706|code|STR             R5, [R7]|61-96
41708|code|POP             {R3-R7,PC}|248-189
41710|code|MOVS            R0, #0|0-32
41712|code|POP             {R3-R7,PC}|248-189
41714|code|MOVS            R0, #1|1-32
41716|code|POP             {R3-R7,PC}|248-189
41718|data|ALIGN 4|0-191
41720|code|PUSH            {LR}|0-181
41722|code|SUB             SP, SP, #0xC|131-176
41724|code|ADD             R3, SP, #0x10+var_8|2-171
41726|code|MOVS            R1, #0|0-33
41728|code|STR.W           R0, [R3,#-4]!|67-248-4-13
41732|code|MOV             R0, R3|24-70
41734|code|BL              isQualifiedDevice|255-247-219-255
41738|code|CLZ.W           R0, R0|176-250-128-240
41742|code|LSRS            R0, R0, #5|64-9
41744|code|ADD             SP, SP, #0xC|3-176
41746|code|POP.W           {PC}|93-248-4-251
41750|data|ALIGN 4|0-191
41752|code|PUSH.W          {R4-R10,LR}|45-233-240-71
41756|code|SUB             SP, SP, #0x10|132-176
41758|code|LDR.W           R10, [R0]|208-248-0-160
41762|code|ADD             R7, SP, #0x10|4-175
41764|code|MOV             R6, R0|6-70
41766|code|MOV             R9, R1|137-70
41768|code|MOV             R0, R10; s|80-70
41770|code|BLX             strlen|252-247-54-234
41774|code|MOV             R4, R0|4-70
41776|code|MOV             R0, R9; s|72-70
41778|code|BLX             strlen|252-247-50-234
41782|code|LDR             R1, =(asc_11CA4 - 0xA340); "+="|40-73
41784|code|MOV.W           LR, #0|79-240-0-14
41788|code|ADD             R1, PC; "+="|121-68
41790|code|ADDS            R2, R4, R0|34-24
41792|code|MOV             R0, R9; s|72-70
41794|code|ADD.W           R3, R2, #9|2-241-9-3
41798|code|ADDS            R4, R2, #2|148-28
41800|code|BIC.W           R3, R3, #7|35-240-7-3
41804|code|SUB.W           SP, SP, R3|173-235-3-13
41808|code|ADD             R5, SP, #0x10+var_s0|4-173
41810|code|STRB.W          LR, [SP,#0x10+var_s0]|141-248-16-224
41814|code|BLX             strpbrk|252-247-6-233
41818|code|ADD.W           R8, R5, R4|5-235-4-8
41822|code|CBZ             R0, loc_A36A|32-177
41824|code|LDRB            R3, [R0]|3-120
41826|code|CMP             R3, #0x3D ; '='|61-43
41828|code|IT EQ|8-191
41830|code|MOVEQ           R4, R5|44-70
41832|code|BEQ             loc_A390|18-208
41834|code|LDR             R3, =(aSC - 0xA378); "%s%c"|28-75
41836|code|MOV             R1, R4|33-70
41838|code|MOVS            R2, #0x3D ; '='|61-34
41840|code|STR.W           R10, [SP,#0x10+var_C]|205-248-4-160
41844|code|ADD             R3, PC; "%s%c"|123-68
41846|code|STR             R2, [SP,#0x10+var_8]|2-146
41848|code|STR             R3, [SP,#0x10+var_10]|0-147
41850|code|MOV             R0, R5|40-70
41852|code|MOVS            R2, #1|1-34
41854|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
41858|code|BLX             __snprintf_chk|252-247-16-234
41862|code|ADD             R0, R5|40-68
41864|code|CMP             R0, R8|64-69
41866|code|IT CS|40-191
41868|code|MOVCS           R0, R8|64-70
41870|code|MOV             R4, R0|4-70
41872|code|LDR             R2, =(aCheckingSDevic+0x14 - 0xA39E); "%s"|19-74
41874|code|RSB.W           R1, R4, R8; maxlen|196-235-8-1
41878|code|MOV             R3, R9|75-70
41880|code|MOV             R0, R4; s|32-70
41882|code|ADD             R2, PC; "%s" ; format|122-68
41884|code|BLX             snprintf|252-247-146-232
41888|code|ADD             R0, R4|32-68
41890|code|CMP             R8, R0|128-69
41892|code|IT CS|40-191
41894|code|MOVCS           R8, R0|128-70
41896|code|CMP             R4, R8|68-69
41898|code|ITTT CC|62-191
41900|code|ADDCC.W         R3, R4, #0xFFFFFFFF|4-241-255-51
41904|code|ADDCC.W         R4, R8, #0xFFFFFFFF|8-241-255-52
41908|code|MOVCC           R2, #0x2C ; ','|44-34
41910|code|BCS             loc_A3C6|6-210
41912|code|LDRB.W          R1, [R3,#1]!|19-248-1-31
41916|code|CMP             R1, #0x2B ; '+'|43-41
41918|code|IT EQ|8-191
41920|code|STRBEQ          R2, [R3]|26-112
41922|code|CMP             R3, R4|163-66
41924|code|BNE             loc_A3B8|248-209
41926|code|MOV             R0, R6|48-70
41928|code|MOV             R2, R5|42-70
41930|code|MOVS            R1, #0|0-33
41932|code|BL              getParameters|0-240-242-250
41936|code|MOV             SP, R7|189-70
41938|code|POP.W           {R4-R10,PC}|189-232-240-135
41942|data|ALIGN 4|0-191
41944|data|DCD asc_11CA4 - 0xA340; "+="|100-121-0-0
41948|data|DCD aSC - 0xA378; "%s%c"|64-122-0-0
41952|data|DCD aCheckingSDevic+0x14 - 0xA39E; "%s"|230-121-0-0
41956|code|PUSH.W          {R3-R11,LR}|45-233-248-79
41960|code|MOV.W           R10, R1,LSL#2|79-234-129-10
41964|code|ADD.W           R3, R10, #0xA|10-241-10-3
41968|code|CMP             R1, #0|0-41
41970|code|BIC.W           R3, R3, #7|35-240-7-3
41974|code|ADD             R7, SP, #0|0-175
41976|code|MOV             R8, R1|136-70
41978|code|SUB.W           SP, SP, R3|173-235-3-13
41982|code|BLE             loc_A454|41-221
41984|code|SUB.W           R6, SP, #4|173-241-4-6
41988|code|ADD             R10, R0|130-68
41990|code|MOV             R9, R0|129-70
41992|code|MOV             R4, R0|4-70
41994|code|MOVS            R5, #0|0-37
41996|code|MOV             R11, R6|179-70
41998|code|LDR.W           R0, [R4],#4; s|84-248-4-11
42002|code|BLX             strlen|252-247-194-233
42006|code|CMP             R4, R10|84-69
42008|code|STR.W           R0, [R11,#4]!|75-248-4-15
42012|code|ADD             R5, R0|5-68
42014|code|BNE             loc_A40E|246-209
42016|code|ADDS            R0, R5, #1; size|104-28
42018|code|BLX             malloc|252-247-178-233
42022|code|MOV             R10, R0|130-70
42024|code|CBZ             R0, loc_A44C|128-177
42026|code|SUB.W           R9, R9, #4|169-241-4-9
42030|code|MOV             R4, R0|4-70
42032|code|MOVS            R5, #0|0-37
42034|code|LDR.W           R2, [R6,#4]!; n|86-248-4-47
42038|code|MOV             R0, R4; dest|32-70
42040|code|ADDS            R5, #1|1-53
42042|code|LDR.W           R1, [R9,#4]!; src|89-248-4-31
42046|code|ADD             R4, R2|20-68
42048|code|BLX             memcpy|252-247-150-233
42052|code|CMP             R5, R8|69-69
42054|code|BNE             loc_A432|244-209
42056|code|MOVS            R3, #0|0-35
42058|code|STRB            R3, [R4]|35-112
42060|code|MOV             R0, R10|80-70
42062|code|MOV             SP, R7|189-70
42064|code|POP.W           {R3-R11,PC}|189-232-248-143
42068|code|MOVS            R0, #1; size|1-32
42070|code|BLX             malloc|252-247-152-233
42074|code|MOV             R10, R0|130-70
42076|code|MOV             R4, R0|4-70
42078|code|CMP             R0, #0|0-40
42080|code|BNE             loc_A448|242-209
42082|code|B               loc_A44C|243-231
42084|code|PUSH            {R3-R5,LR}|56-181
42086|code|MOV             R5, R0|5-70
42088|code|CBZ             R1, loc_A482|89-177
42090|code|MOV             R0, R1|8-70
42092|code|BLX             __strdup|252-247-48-232
42096|code|MOV             R4, R0|4-70
42098|code|CBZ             R0, loc_A486|64-177
42100|code|LDR             R0, [R5]; ptr|40-104
42102|code|CBZ             R0, loc_A47C|8-177
42104|code|BLX             free|251-247-100-239
42108|code|MOVS            R0, #1|1-32
42110|code|STR             R4, [R5]|44-96
42112|code|POP             {R3-R5,PC}|56-189
42114|code|MOV             R4, R1|12-70
42116|code|B               loc_A474|246-231
42118|code|BL              logMallocError|254-247-105-254
42122|code|MOV             R0, R4|32-70
42124|code|POP             {R3-R5,PC}|56-189
42126|data|ALIGN 0x10|0-191
42128|code|CMP             R1, #0|0-41
42130|code|BEQ             loc_A53E|84-208
42132|code|PUSH.W          {R4-R10,LR}|45-233-240-71
42136|code|SUB             SP, SP, #0x10|132-176
42138|code|LDRB            R4, [R1]|12-120
42140|code|ADD             R7, SP, #0x30+var_20|4-175
42142|code|CBZ             R4, loc_A508|156-179
42144|code|LDR.W           R10, [R0]|208-248-0-160
42148|code|MOV             R5, R0|5-70
42150|code|MOV             R6, R1|14-70
42152|code|MOV             R9, R2|145-70
42154|code|CMP.W           R10, #0|186-241-0-15
42158|code|BEQ             loc_A532|64-208
42160|code|MOV             R0, R10; s|80-70
42162|code|MOV             R8, SP|232-70
42164|code|BLX             strlen|252-247-112-233
42168|code|MOV             R4, R0|4-70
42170|code|MOV             R0, R6; s|48-70
42172|code|BLX             strlen|252-247-108-233
42176|code|ADD             R0, R4|32-68
42178|code|ADD.W           R2, R0, #9|0-241-9-2
42182|code|ADDS            R1, R0, #2|129-28
42184|code|BIC.W           R2, R2, #7|34-240-7-2
42188|code|SUB.W           SP, SP, R2|173-235-2-13
42192|code|ADD             R4, SP, #0x30+var_20|4-172
42194|code|CMP.W           R9, #0|185-241-0-15
42198|code|BEQ             loc_A510|27-208
42200|code|LDR             R2, =(aSCS - 0xA4E6); "%s%c%s"|26-74
42202|code|MOV             R0, R4|32-70
42204|code|STR             R6, [SP,#0x30+var_2C]|1-150
42206|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
42210|code|ADD             R2, PC; "%s%c%s"|122-68
42212|code|MOVS            R6, #0x2C ; ','|44-38
42214|code|STR             R2, [SP,#0x30+var_30]|0-146
42216|code|MOVS            R2, #1|1-34
42218|code|STR.W           R10, [SP,#0x30+var_24]|205-248-12-160
42222|code|STR             R6, [SP,#0x30+var_28]|2-150
42224|code|BLX             __snprintf_chk|252-247-88-233
42228|code|MOV             R0, R5|40-70
42230|code|MOV             R1, R4|33-70
42232|code|BL              changeStringSetting|255-247-180-255
42236|code|CBZ             R0, loc_A500|0-177
42238|code|MOVS            R0, #1|1-32
42240|code|MOV             SP, R8|197-70
42242|code|MOV             SP, R7|189-70
42244|code|POP.W           {R4-R10,PC}|189-232-240-135
42248|code|MOVS            R0, #1|1-32
42250|code|MOV             SP, R7|189-70
42252|code|POP.W           {R4-R10,PC}|189-232-240-135
42256|code|LDR             R2, =(aSCS - 0xA520); "%s%c%s"|13-74
42258|code|MOV.W           LR, #0x2C ; ','|79-240-44-14
42262|code|STR.W           R10, [SP,#arg_4]|205-248-4-160
42266|code|MOV             R0, R4|32-70
42268|code|ADD             R2, PC; "%s%c%s"|122-68
42270|code|STR             R6, [SP,#arg_C]|3-150
42272|code|STR             R2, [SP,#arg_0]|0-146
42274|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
42278|code|MOVS            R2, #1|1-34
42280|code|STR.W           LR, [SP,#arg_8]|205-248-8-224
42284|code|BLX             __snprintf_chk|252-247-58-233
42288|code|B               loc_A4F4|224-231
42290|code|BL              changeStringSetting|255-247-151-255
42294|code|ADDS            R0, #0|0-48
42296|code|IT NE|24-191
42298|code|MOVNE           R0, #1|1-32
42300|code|B               loc_A502|225-231
42302|code|MOVS            R0, #1|1-32
42304|code|BX              LR|112-71
42306|data|ALIGN 4|0-191
42308|data|DCD aSCS - 0xA4E6; "%s%c%s"|234-120-0-0
42312|data|DCD aSCS - 0xA520; "%s%c%s"|176-120-0-0
42316|code|PUSH            {R3-R5,LR}|56-181
42318|code|MOV             R5, R0|5-70
42320|code|LDR             R0, [R0]; ptr|0-104
42322|code|MOV             R4, R5|44-70
42324|code|CBZ             R0, loc_A562|40-177
42326|code|BLX             free|251-247-246-238
42330|code|LDR.W           R0, [R4,#4]!|84-248-4-15
42334|code|CMP             R0, #0|0-40
42336|code|BNE             loc_A556|249-209
42338|code|MOV             R0, R5; ptr|40-70
42340|code|POP.W           {R3-R5,LR}|189-232-56-64
42344|code|B.W             j_free|251-247-234-190
42348|code|PUSH.W          {R4-R11,LR}|45-233-240-79
42352|code|SUB             SP, SP, #0xC|131-176
42354|code|MOV             R7, R1|15-70
42356|code|MOV             R9, R0|129-70
42358|code|STR             R2, [SP,#0x30+var_30]|0-146
42360|code|CMP             R0, #0|0-40
42362|code|BEQ             loc_A63C|95-208
42364|code|LDRB.W          R8, [R9]; ""|153-248-0-128
42368|code|MOVS            R6, #0|0-38
42370|code|CMP.W           R8, #0|184-241-0-15
42374|code|BEQ             loc_A600|59-208
42376|code|MOV             R10, R9|202-70
42378|code|MOV             R1, R7; c|57-70
42380|code|MOV             R0, R10; s|80-70
42382|code|MOVS            R5, #0|0-37
42384|code|BLX             strchr|252-247-4-234
42388|code|MOV             R4, R0|4-70
42390|code|RSB.W           R11, R10, R0|202-235-0-11
42394|code|CBZ             R0, loc_A5D6|224-177
42396|code|ADD.W           R0, R11, #1; size|11-241-1-0
42400|code|CBZ             R6, loc_A5BE|110-177
42402|code|BLX             malloc|252-247-242-232
42406|code|MOV             R1, R10; src|81-70
42408|code|MOV             R2, R11; n|90-70
42410|code|STR.W           R0, [R6,R5,LSL#2]|70-248-37-0
42414|code|CBZ             R0, loc_A618|152-179
42416|code|STR             R0, [SP,#0x30+var_2C]|1-144
42418|code|BLX             memcpy|252-247-222-232
42422|code|LDR             R3, [SP,#0x30+var_2C]|1-155
42424|code|MOVS            R2, #0|0-34
42426|code|STRB.W          R2, [R3,R11]|3-248-11-32
42430|code|ADD.W           R10, R4, #1|4-241-1-10
42434|code|MOV             R1, R7; c|57-70
42436|code|ADDS            R5, #1|1-53
42438|code|MOV             R0, R10; s|80-70
42440|code|BLX             strchr|252-247-232-233
42444|code|MOV             R4, R0|4-70
42446|code|RSB.W           R11, R10, R0|202-235-0-11
42450|code|CMP             R0, #0|0-40
42452|code|BNE             loc_A59C|226-209
42454|code|MOV             R0, R10; s|80-70
42456|code|BLX             strlen|252-247-222-232
42460|code|MOV             R11, R0|131-70
42462|code|CMP             R6, #0|0-46
42464|code|BEQ             loc_A656|57-208
42466|code|ADDS            R0, #1; size|1-48
42468|code|BLX             malloc|252-247-208-232
42472|code|MOV             R7, R0|7-70
42474|code|STR.W           R0, [R6,R5,LSL#2]|70-248-37-0
42478|code|CBZ             R0, loc_A618|152-177
42480|code|MOV             R1, R10; src|81-70
42482|code|MOV             R2, R11; n|90-70
42484|code|BLX             memcpy|252-247-188-232
42488|code|ADDS            R5, #1|1-53
42490|code|STRB.W          R4, [R7,R11]|7-248-11-64
42494|code|B               loc_A646|34-224
42496|code|CBNZ            R6, loc_A644|6-187
42498|code|MOV             R0, R8|64-70
42500|code|ADDS            R0, #1|1-48
42502|code|LSLS            R0, R0, #2; size|128-0
42504|code|BLX             malloc|252-247-190-232
42508|code|MOV             R6, R0|6-70
42510|code|CMP             R0, #0|0-40
42512|code|BNE             loc_A582|183-209
42514|code|BL              logMallocError|254-247-163-253
42518|code|B               loc_A622|4-224
42520|code|BL              logMallocError|254-247-160-253
42524|code|MOV             R0, R6; ptr|48-70
42526|code|BL              deallocateStrings|255-247-149-255
42530|code|LDR             R3, [SP,#0x30+var_30]|0-155
42532|code|CBZ             R3, loc_A632|43-177
42534|code|MOVS            R6, #0|0-38
42536|code|STR             R6, [R3]|30-96
42538|code|MOV             R0, R6|48-70
42540|code|ADD             SP, SP, #0xC|3-176
42542|code|POP.W           {R4-R11,PC}|189-232-240-143
42546|code|LDR             R6, [SP,#0x30+var_30]|0-158
42548|code|MOV             R0, R6|48-70
42550|code|ADD             SP, SP, #0xC|3-176
42552|code|POP.W           {R4-R11,PC}|189-232-240-143
42556|code|LDR.W           R9, =(aS_0+4 - 0xA644); ""|223-248-28-144
42560|code|ADD             R9, PC; ""|249-68
42562|code|B               loc_A57C|155-231
42564|code|MOV             R5, R8|69-70
42566|code|MOVS            R3, #0|0-35
42568|code|STR.W           R3, [R6,R5,LSL#2]|70-248-37-48
42572|code|LDR             R3, [SP,#0x30+var_30]|0-155
42574|code|CMP             R3, #0|0-43
42576|code|BEQ             loc_A62A|235-208
42578|code|STR             R5, [R3]|29-96
42580|code|B               loc_A62A|233-231
42582|code|ADDS            R0, R5, #1|104-28
42584|code|B               loc_A604|212-231
42586|data|ALIGN 4|0-191
42588|data|DCD aS_0+4 - 0xA644; ""|128-113-0-0
42592|code|PUSH            {R4-R6,LR}|112-181
42594|code|MOV             R6, R1|14-70
42596|code|MOV             R4, R0|4-70
42598|code|LSLS            R1, R2, #1|81-0
42600|code|MOV             R0, R6|48-70
42602|code|MOV             R5, R2|21-70
42604|code|BL              sub_10DC8|6-240-172-251
42608|code|MOV             R1, R6|49-70
42610|code|ADD             R0, R4|32-68
42612|code|MUL.W           R0, R5, R0|5-251-0-240
42616|code|BL              sub_10DC8|6-240-166-251
42620|code|POP             {R4-R6,PC}|112-189
42622|data|ALIGN 0x10|0-191
42624|code|PUSH            {R3-R5,LR}|56-181
42626|code|MOV             R5, R0|5-70
42628|code|MOV             R0, R1; s|8-70
42630|code|MOV             R4, R1|12-70
42632|code|BLX             strlen|252-247-134-232
42636|code|MOV             R1, R4; s2|33-70
42638|code|MOV             R2, R0; n|2-70
42640|code|MOV             R0, R5; s1|40-70
42642|code|BLX             strncasecmp|252-247-2-232
42646|code|CLZ.W           R0, R0|176-250-128-240
42650|code|LSRS            R0, R0, #5|64-9
42652|code|POP             {R3-R5,PC}|56-189
42654|data|ALIGN 0x10|0-191
42656|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xA6A8)|16-75
42658|code|PUSH            {R4,R5,LR}|48-181
42660|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
42662|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|16-76
42664|code|SUB             SP, SP, #0xC|131-176
42666|code|LDRB            R2, [R1]|10-120
42668|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
42670|code|LDR             R3, [R4]|35-104
42672|code|STR             R3, [SP,#0x18+var_14]|1-147
42674|code|CBNZ            R2, loc_A6C2|50-185
42676|code|MOV             R0, R2|16-70
42678|code|LDR             R2, [SP,#0x18+var_14]|1-154
42680|code|LDR             R3, [R4]|35-104
42682|code|CMP             R2, R3|154-66
42684|code|BNE             loc_A6DE|15-209
42686|code|ADD             SP, SP, #0xC|3-176
42688|code|POP             {R4,R5,PC}|48-189
42690|code|MOV             R5, R0|5-70
42692|code|MOVS            R2, #0; base|0-34
42694|code|MOV             R0, R1; nptr|8-70
42696|code|MOV             R1, SP; endptr|105-70
42698|code|BLX             strtol|251-247-52-238
42702|code|LDR             R3, [SP,#0x18+var_18]|0-155
42704|code|LDRB            R3, [R3]|27-120
42706|code|CBZ             R3, loc_A6D8|11-177
42708|code|MOVS            R0, #0|0-32
42710|code|B               loc_A6B6|238-231
42712|code|STR             R0, [R5]|40-96
42714|code|MOVS            R0, #1|1-32
42716|code|B               loc_A6B6|235-231
42718|code|BLX             __stack_chk_fail|251-247-170-239
42722|data|ALIGN 4|0-191
42724|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA6A8|44-166-1-0
42728|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
42732|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xA6F4)|16-75
42734|code|PUSH            {R4,R5,LR}|48-181
42736|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
42738|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|16-76
42740|code|SUB             SP, SP, #0xC|131-176
42742|code|LDRB            R2, [R1]|10-120
42744|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
42746|code|LDR             R3, [R4]|35-104
42748|code|STR             R3, [SP,#0x18+var_14]|1-147
42750|code|CBNZ            R2, loc_A70E|50-185
42752|code|MOV             R0, R2|16-70
42754|code|LDR             R2, [SP,#0x18+var_14]|1-154
42756|code|LDR             R3, [R4]|35-104
42758|code|CMP             R2, R3|154-66
42760|code|BNE             loc_A72A|15-209
42762|code|ADD             SP, SP, #0xC|3-176
42764|code|POP             {R4,R5,PC}|48-189
42766|code|MOV             R5, R0|5-70
42768|code|MOVS            R2, #0; base|0-34
42770|code|MOV             R0, R1; nptr|8-70
42772|code|MOV             R1, SP; endptr|105-70
42774|code|BLX             strtoul|251-247-146-238
42778|code|LDR             R3, [SP,#0x18+var_18]|0-155
42780|code|LDRB            R3, [R3]|27-120
42782|code|CBZ             R3, loc_A724|11-177
42784|code|MOVS            R0, #0|0-32
42786|code|B               loc_A702|238-231
42788|code|STR             R0, [R5]|40-96
42790|code|MOVS            R0, #1|1-32
42792|code|B               loc_A702|235-231
42794|code|BLX             __stack_chk_fail|251-247-132-239
42798|data|ALIGN 0x10|0-191
42800|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA6F4|224-165-1-0
42804|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
42808|code|PUSH.W          {R4-R10,LR}|45-233-240-71
42812|code|SUB             SP, SP, #8|130-176
42814|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0xA74C)|223-248-136-128
42818|code|MOV             R9, R0|129-70
42820|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|33-75
42822|code|MOV             R0, R1; s|8-70
42824|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
42826|code|MOV             R5, R1|13-70
42828|code|LDR.W           R10, [R8,R3]; __stack_chk_guard|88-248-3-160
42832|code|LDR.W           R3, [R10]|218-248-0-48
42836|code|STR             R3, [SP,#0x28+var_24]|1-147
42838|code|BLX             strlen|252-247-32-232
42842|code|LDR             R3, =(logLevelCount_ptr - 0x24CD4)|29-75
42844|code|LDR.W           R3, [R8,R3]; logLevelCount_ptr ...|88-248-3-48
42848|code|LDR             R6, [R3]; "\b"|30-104
42850|code|CBZ             R6, loc_A7B8|78-179
42852|code|LDR             R3, =(logLevelNames_ptr - 0x24CD4)|27-75
42854|code|MOV             R7, R0|7-70
42856|code|MOVS            R4, #0|0-36
42858|code|LDR.W           R8, [R8,R3]; logLevelNames|88-248-3-128
42862|code|B               loc_A776|2-224
42864|code|ADDS            R4, #1|1-52
42866|code|CMP             R4, R6|180-66
42868|code|BEQ             loc_A79C|18-208
42870|code|MOV             R0, R5; s1|40-70
42872|code|LDR.W           R1, [R8,R4,LSL#2]; s2|88-248-36-16
42876|code|MOV             R2, R7; n|58-70
42878|code|BLX             strncasecmp|251-247-140-239
42882|code|CMP             R0, #0|0-40
42884|code|BNE             loc_A770|244-209
42886|code|MOVS            R0, #1|1-32
42888|code|STR.W           R4, [R9]|201-248-0-64
42892|code|LDR             R2, [SP,#0x28+var_24]|1-154
42894|code|LDR.W           R3, [R10]|218-248-0-48
42898|code|CMP             R2, R3|154-66
42900|code|BNE             loc_A7C2|21-209
42902|code|ADD             SP, SP, #8|2-176
42904|code|POP.W           {R4-R10,PC}|189-232-240-135
42908|code|MOV             R1, R5|41-70
42910|code|MOV             R0, SP|104-70
42912|code|BL              isUnsignedInteger|255-247-164-255
42916|code|CBZ             R0, loc_A7B4|48-177
42918|code|LDR             R3, [SP,#0x28+var_28]|0-155
42920|code|CMP             R3, R4|163-66
42922|code|ITT CC|60-191
42924|code|STRCC.W         R3, [R9]|201-248-0-48
42928|code|MOVCC           R0, #1|1-32
42930|code|BCC             loc_A78C|235-211
42932|code|MOVS            R0, #0|0-32
42934|code|B               loc_A78C|233-231
42936|code|MOV             R1, R5|41-70
42938|code|MOV             R0, SP|104-70
42940|code|BL              isUnsignedInteger|255-247-150-255
42944|code|B               loc_A7B4|248-231
42946|code|BLX             __stack_chk_fail|251-247-56-239
42950|data|ALIGN 4|0-191
42952|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA74C|136-165-1-0
42956|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
42960|data|DCD logLevelCount_ptr - 0x24CD4|120-2-0-0
42964|data|DCD logLevelNames_ptr - 0x24CD4|196-2-0-0
42968|code|PUSH.W          {R4-R9,LR}|45-233-240-67
42972|code|SUB             SP, SP, #0xC|131-176
42974|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xA7E6)|22-76
42976|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|22-77
42978|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
42980|code|LDRB            R6, [R1]|14-120
42982|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
42984|code|LDR             R5, [R4]|37-104
42986|code|STR             R5, [SP,#0x28+var_24]|1-149
42988|code|CBNZ            R6, loc_A7FE|62-185
42990|code|MOVS            R0, #1|1-32
42992|code|LDR             R2, [SP,#0x28+var_24]|1-154
42994|code|LDR             R3, [R4]|35-104
42996|code|CMP             R2, R3|154-66
42998|code|BNE             loc_A832|28-209
43000|code|ADD             SP, SP, #0xC|3-176
43002|code|POP.W           {R4-R9,PC}|189-232-240-131
43006|code|MOV             R8, R0|128-70
43008|code|MOV             R0, SP|104-70
43010|code|MOV             R7, R2|23-70
43012|code|MOV             R9, R3|153-70
43014|code|BL              isInteger|255-247-75-255
43018|code|CBZ             R0, loc_A826|96-177
43020|code|LDR             R3, [SP,#0x28+var_28]|0-155
43022|code|CBZ             R7, loc_A818|31-177
43024|code|LDR             R2, [R7]|58-104
43026|code|LDR             R3, [SP,#0x28+var_28]|0-155
43028|code|CMP             R2, R3|154-66
43030|code|BGT             loc_A826|6-220
43032|code|CMP.W           R9, #0|185-241-0-15
43036|code|BEQ             loc_A82A|5-208
43038|code|LDR.W           R2, [R9]|217-248-0-32
43042|code|CMP             R2, R3|154-66
43044|code|BGE             loc_A82A|1-218
43046|code|MOVS            R0, #0|0-32
43048|code|B               loc_A7F0|226-231
43050|code|STR.W           R3, [R8]|200-248-0-48
43054|code|MOVS            R0, #1|1-32
43056|code|B               loc_A7F0|222-231
43058|code|BLX             __stack_chk_fail|251-247-0-239
43062|data|ALIGN 4|0-191
43064|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA7E6|238-164-1-0
43068|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
43072|code|PUSH.W          {R4-R8,LR}|45-233-240-65
43076|code|MOV             R8, R0|128-70
43078|code|MOV             R0, R1; s|8-70
43080|code|MOV             R7, R1|15-70
43082|code|MOV             R5, R2|21-70
43084|code|BLX             strlen|251-247-164-239
43088|code|MOVS            R4, #0|0-36
43090|code|STR.W           R4, [R8]|200-248-0-64
43094|code|MOV             R6, R0|6-70
43096|code|CBZ             R0, loc_A87E|136-177
43098|code|LDR             R1, [R5]|41-104
43100|code|CBNZ            R1, loc_A868|33-185
43102|code|B               loc_A884|17-224
43104|code|LDR.W           R1, [R5,#4]!; s2|85-248-4-31
43108|code|ADDS            R4, #1|1-52
43110|code|CBZ             R1, loc_A884|105-177
43112|code|MOV             R0, R7; s1|56-70
43114|code|MOV             R2, R6; n|50-70
43116|code|BLX             strncasecmp|251-247-20-239
43120|code|CMP             R0, #0|0-40
43122|code|BNE             loc_A860|245-209
43124|code|STR.W           R4, [R8]|200-248-0-64
43128|code|MOVS            R0, #1|1-32
43130|code|POP.W           {R4-R8,PC}|189-232-240-129
43134|code|MOVS            R0, #1|1-32
43136|code|POP.W           {R4-R8,PC}|189-232-240-129
43140|code|MOV             R0, R1|8-70
43142|code|POP.W           {R4-R8,PC}|189-232-240-129
43146|data|ALIGN 4|0-191
43148|code|PUSH            {R4-R6,LR}|112-181
43150|code|SUB             SP, SP, #0x10|132-176
43152|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xA89A)|10-76
43154|code|MOVS            R6, #0|0-38
43156|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|10-77
43158|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
43160|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
43162|code|STR             R3, [SP,#0x20+var_20]|0-147
43164|code|STR             R2, [SP,#0x20+var_1C]|1-146
43166|code|MOV             R2, SP|106-70
43168|code|LDR             R3, [R4]|35-104
43170|code|STR             R6, [SP,#0x20+var_18]|2-150
43172|code|STR             R3, [SP,#0x20+var_14]|3-147
43174|code|BL              validateChoice|255-247-203-255
43178|code|LDR             R2, [SP,#0x20+var_14]|3-154
43180|code|LDR             R3, [R4]|35-104
43182|code|CMP             R2, R3|154-66
43184|code|BNE             loc_A8B6|1-209
43186|code|ADD             SP, SP, #0x10|4-176
43188|code|POP             {R4-R6,PC}|112-189
43190|code|BLX             __stack_chk_fail|251-247-190-238
43194|data|ALIGN 4|0-191
43196|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA89A|58-164-1-0
43200|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
43204|code|LDR             R2, =(aTableextension+0xC - 0xA8CC); "on"|2-74
43206|code|LDR             R3, =(aOff - 0xA8CE); "off"|3-75
43208|code|ADD             R2, PC; "on"|122-68
43210|code|ADD             R3, PC; "off"|123-68
43212|code|B.W             validateFlag|255-247-222-191
43216|data|DCD aTableextension+0xC - 0xA8CC; "on"|224-133-0-0
43220|data|DCD aOff - 0xA8CE; "off"|42-109-0-0
43224|code|LDR             R2, =(aYes - 0xA8E0); "yes"|2-74
43226|code|LDR             R3, =(aNo_0 - 0xA8E2); "no"|3-75
43228|code|ADD             R2, PC; "yes"|122-68
43230|code|ADD             R3, PC; "no"|123-68
43232|code|B.W             validateFlag|255-247-212-191
43236|data|DCD aYes - 0xA8E0; "yes"|248-116-0-0
43240|data|DCD aNo_0 - 0xA8E2; "no"|250-116-0-0
43244|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xA8F4)|17-75
43246|code|PUSH            {R4,R5,LR}|48-181
43248|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
43250|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|17-76
43252|code|SUB             SP, SP, #0xC|131-176
43254|code|LDRB            R2, [R1]|10-120
43256|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
43258|code|LDR             R3, [R4]|35-104
43260|code|STR             R3, [SP,#0x18+var_14]|1-147
43262|code|CBNZ            R2, loc_A90E|50-185
43264|code|MOV             R0, R2|16-70
43266|code|LDR             R1, [SP,#0x18+var_14]|1-153
43268|code|LDR             R3, [R4]|35-104
43270|code|CMP             R1, R3|153-66
43272|code|BNE             loc_A92E|17-209
43274|code|ADD             SP, SP, #0xC|3-176
43276|code|POP             {R4,R5,PC}|48-189
43278|code|MOV             R5, R0|5-70
43280|code|MOV             R0, R1; nptr|8-70
43282|code|MOV             R1, SP; endptr|105-70
43284|code|BLX             strtod|251-247-86-238
43288|code|LDR             R3, [SP,#0x18+var_18]|0-155
43290|code|MOVS            R0, #0|0-32
43292|code|LDRB            R3, [R3]|27-120
43294|code|CMP             R3, #0|0-43
43296|code|BNE             loc_A902|239-209
43298|code|VCVT.F32.F64    S0, D0|183-238-192-11
43302|code|MOVS            R0, #1|1-32
43304|code|VSTR            S0, [R5]|133-237-0-10
43308|code|B               loc_A902|233-231
43310|code|BLX             __stack_chk_fail|251-247-130-238
43314|data|ALIGN 4|0-191
43316|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA8F4|224-163-1-0
43320|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
43324|code|PUSH.W          {R4-R9,LR}|45-233-240-67
43328|code|SUB             SP, SP, #0xC|131-176
43330|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xA94A)|26-76
43332|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|26-77
43334|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
43336|code|LDRB            R6, [R1]|14-120
43338|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
43340|code|LDR             R5, [R4]|37-104
43342|code|STR             R5, [SP,#0x28+var_24]|1-149
43344|code|CBNZ            R6, loc_A962|62-185
43346|code|MOVS            R0, #1|1-32
43348|code|LDR             R2, [SP,#0x28+var_24]|1-154
43350|code|LDR             R3, [R4]|35-104
43352|code|CMP             R2, R3|154-66
43354|code|BNE             loc_A9A8|37-209
43356|code|ADD             SP, SP, #0xC|3-176
43358|code|POP.W           {R4-R9,PC}|189-232-240-131
43362|code|MOV             R8, R0|128-70
43364|code|MOV             R0, SP|104-70
43366|code|MOV             R7, R2|23-70
43368|code|MOV             R9, R3|153-70
43370|code|BL              isFloat|255-247-191-255
43374|code|CBZ             R0, loc_A99C|168-177
43376|code|VLDR            S15, [SP,#0x28+var_28]|221-237-0-122
43380|code|CBZ             R7, loc_A988|71-177
43382|code|VLDR            S14, [R7]|151-237-0-122
43386|code|VLDR            S15, [SP,#0x28+var_28]|221-237-0-122
43390|code|VCMPE.F32       S14, S15|180-238-231-122
43394|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
43398|code|BGT             loc_A99C|9-220
43400|code|CMP.W           R9, #0|185-241-0-15
43404|code|BEQ             loc_A9A0|8-208
43406|code|VLDR            S14, [R9]|153-237-0-122
43410|code|VCMPE.F32       S14, S15|180-238-231-122
43414|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
43418|code|BPL             loc_A9A0|1-213
43420|code|MOVS            R0, #0|0-32
43422|code|B               loc_A954|217-231
43424|code|VSTR            S15, [R8]|200-237-0-122
43428|code|MOVS            R0, #1|1-32
43430|code|B               loc_A954|213-231
43432|code|BLX             __stack_chk_fail|251-247-68-238
43436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA94A|138-163-1-0
43440|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
43444|code|PUSH.W          {R4-R11,LR}|45-233-240-79
43448|code|SUB             SP, SP, #0x1C|135-176
43450|code|MOV             R4, R2|20-70
43452|code|MOV             R6, R0|6-70
43454|code|STR             R1, [SP,#0x40+s]|3-145
43456|code|CMP             R0, #0|0-40
43458|code|BEQ.W           loc_AB4E|0-240-196-128
43462|code|LDR             R7, [R6]|55-104
43464|code|CMP             R7, #0|0-47
43466|code|BEQ.W           loc_AB54|0-240-195-128
43470|code|MOV             R3, R6|51-70
43472|code|MOVS            R7, #0|0-39
43474|code|LDR.W           R5, [R3,#4]!; "%s%c%s"|83-248-4-95
43478|code|ADDS            R7, #1|1-55
43480|code|CMP             R5, #0|0-45
43482|code|BNE             loc_A9D2|250-209
43484|code|ADDS            R0, R7, #1|120-28
43486|code|LSLS            R0, R0, #2; size|128-0
43488|code|BLX             malloc|251-247-210-238
43492|code|STR             R0, [SP,#0x40+ptr]|4-144
43494|code|CMP             R0, #0|0-40
43496|code|BEQ.W           loc_AB62|0-240-187-128
43500|code|SUB.W           R8, R0, #4|160-241-4-8
43504|code|B               loc_A9F8|2-224
43506|code|ADDS            R5, #1|1-53
43508|code|CMP             R7, R5|175-66
43510|code|BEQ             loc_AA1E|18-208
43512|code|MOVS            R0, #1; nmemb|1-32
43514|code|MOV             R1, R0; size|1-70
43516|code|BLX             calloc|251-247-124-238
43520|code|STR.W           R0, [R8,#4]!|72-248-4-15
43524|code|CMP             R0, #0|0-40
43526|code|BNE             loc_A9F2|244-209
43528|code|BL              logMallocError|254-247-168-251
43532|code|CMP             R7, R5|175-66
43534|code|BEQ             loc_AA1E|6-208
43536|code|LDR             R0, [SP,#0x40+ptr]; ptr|4-152
43538|code|BL              deallocateStrings|255-247-155-253
43542|code|MOVS            R0, #0|0-32
43544|code|ADD             SP, SP, #0x1C|7-176
43546|code|POP.W           {R4-R11,PC}|189-232-240-143
43550|code|LSLS            R7, R7, #2|191-0
43552|code|LDR             R2, [SP,#0x40+ptr]|4-154
43554|code|MOVS            R3, #0|0-35
43556|code|STR             R3, [R2,R7]|211-81
43558|code|CMP             R4, #0|0-44
43560|code|BEQ             loc_AAA8|62-208
43562|code|LDRB            R3, [R4]|35-120
43564|code|CMP             R3, #0|0-43
43566|code|BEQ             loc_AAA8|59-208
43568|code|MOV             R8, R6|176-70
43570|code|MOV             R0, R4; s|32-70
43572|code|MOVS            R1, #0x2C ; ','; c|44-33
43574|code|BLX             strchr|251-247-178-239
43578|code|CLZ.W           R6, R0|176-250-128-246
43582|code|MOV             R10, R0|130-70
43584|code|LSRS            R6, R6, #5|118-9
43586|code|CMP             R6, #0|0-46
43588|code|BEQ             loc_AB22|109-208
43590|code|MOV             R0, R4; s|32-70
43592|code|BLX             strlen|251-247-166-238
43596|code|SUBS            R3, R0, #0|3-30
43598|code|STR             R3, [SP,#0x40+n]|2-147
43600|code|BLE             loc_AAA8|42-221
43602|code|ADD.W           R10, R4, R3|4-235-3-10
43606|code|MOV             R0, R4; s|32-70
43608|code|MOVS            R1, #0x3D ; '='; c|61-33
43610|code|LDR             R2, [SP,#0x40+n]; n|2-154
43612|code|BLX             memchr|251-247-40-239
43616|code|STR             R0, [SP,#0x40+var_2C]|5-144
43618|code|CMP             R0, #0|0-40
43620|code|BEQ.W           loc_AB88|0-240-144-128
43624|code|LDR             R3, [SP,#0x40+var_2C]|5-155
43626|code|SUBS            R5, R3, R4|29-27
43628|code|LDR             R3, [SP,#0x40+s]|3-155
43630|code|CMP             R3, #0|0-43
43632|code|BEQ             loc_AB2C|92-208
43634|code|MOV             R0, R4; s|32-70
43636|code|MOVS            R1, #0x3A ; ':'; c|58-33
43638|code|MOV             R2, R5; n|42-70
43640|code|BLX             memchr|251-247-26-239
43644|code|CMP             R0, #0|0-40
43646|code|BEQ             loc_AB2C|85-208
43648|code|RSB.W           R9, R4, R0|196-235-0-9
43652|code|ADD.W           R7, R9, #1|9-241-1-7
43656|code|SUBS            R5, R5, R7|237-27
43658|code|CMP.W           R9, #0|185-241-0-15
43662|code|BEQ.W           loc_ABA4|0-240-137-128
43666|code|LDR             R0, [SP,#0x40+s]; s|3-152
43668|code|BLX             strlen|251-247-128-238
43672|code|CMP             R9, R0|129-69
43674|code|BEQ             loc_AAB0|9-208
43676|code|CMP             R5, #0|0-45
43678|code|BEQ             loc_AB6A|100-208
43680|code|CBNZ            R6, loc_AAA8|22-185
43682|code|ADD.W           R4, R10, #1|10-241-1-4
43686|code|B               loc_AA32|196-231
43688|code|LDR             R0, [SP,#0x40+ptr]|4-152
43690|code|ADD             SP, SP, #0x1C|7-176
43692|code|POP.W           {R4-R11,PC}|189-232-240-143
43696|code|MOV             R2, R9; n|74-70
43698|code|MOV             R0, R4; s1|32-70
43700|code|LDR             R1, [SP,#0x40+s]; s2|3-153
43702|code|ADD             R7, R4|39-68
43704|code|BLX             memcmp|251-247-20-239
43708|code|CMP             R0, #0|0-40
43710|code|BNE             loc_AA9C|237-209
43712|code|CMP             R5, #0|0-45
43714|code|BEQ             loc_AB6A|82-208
43716|code|LDR.W           R1, [R8]|216-248-0-16
43720|code|CBZ             R1, loc_AB30|145-179
43722|code|MOV             R11, R8|195-70
43724|code|B               loc_AAD4|2-224
43726|code|LDR.W           R1, [R11,#4]!; "%s%c%s"|91-248-4-31
43730|code|CBZ             R1, loc_AB30|105-179
43732|code|MOV             R0, R7; s1|56-70
43734|code|MOV             R2, R5; n|42-70
43736|code|RSB.W           R9, R8, R11|200-235-11-9
43740|code|BLX             strncasecmp|251-247-220-237
43744|code|CMP             R0, #0|0-40
43746|code|BNE             loc_AACE|244-209
43748|code|LDR             R7, [SP,#0x40+var_2C]|5-159
43750|code|STR             R0, [SP,#0x40+n]|2-144
43752|code|ADDS            R7, #1|1-55
43754|code|RSB.W           R4, R7, R10|199-235-10-4
43758|code|ADDS            R0, R4, #1; size|96-28
43760|code|BLX             malloc|251-247-74-238
43764|code|LDR.W           R12, [SP,#0x40+n]|221-248-8-192
43768|code|MOV             R5, R0|5-70
43770|code|CMP             R0, #0|0-40
43772|code|BEQ             loc_ABC2|97-208
43774|code|MOV             R2, R4; n|34-70
43776|code|MOV             R1, R7; src|57-70
43778|code|STR.W           R12, [SP,#0x40+n]|205-248-8-192
43782|code|BLX             memcpy|251-247-52-238
43786|code|LDR.W           R12, [SP,#0x40+n]|221-248-8-192
43790|code|STRB.W          R12, [R5,R4]|5-248-4-192
43794|code|LDR             R4, [SP,#0x40+ptr]|4-156
43796|code|LDR.W           R0, [R4,R9]; ptr|84-248-9-0
43800|code|BLX             free|251-247-20-236
43804|code|STR.W           R5, [R4,R9]|68-248-9-80
43808|code|B               loc_AAA0|190-231
43810|code|SUBS            R3, R0, R4|3-27
43812|code|STR             R3, [SP,#0x40+n]|2-147
43814|code|CMP             R3, #0|0-43
43816|code|BGT             loc_AA56|149-220
43818|code|B               loc_AAA2|186-231
43820|code|MOV             R7, R4|39-70
43822|code|B               loc_AAC0|199-231
43824|code|LDR             R1, =(aUnsupportedPar - 0xAB3A); "unsupported parameter"|37-73
43826|code|MOVS            R2, #5; category|5-34
43828|code|MOVS            R0, #0; domainname|0-32
43830|code|ADD             R1, PC; "unsupported parameter"|121-68
43832|code|BLX             dcgettext|251-247-154-237
43836|code|LDR             R1, =(aSS_2 - 0xAB46); "%s: %.*s"|35-73
43838|code|STR             R4, [SP,#0x40+var_40]|0-148
43840|code|LDR             R3, [SP,#0x40+n]|2-155
43842|code|ADD             R1, PC; "%s: %.*s"|121-68
43844|code|MOV             R2, R0|2-70
43846|code|MOVS            R0, #3|3-32
43848|code|BL              logMessage|254-247-124-250
43852|code|B               loc_AA10|96-231
43854|code|LDR             R6, =(dword_11DCC - 0xAB54)|32-78
43856|code|ADD             R6, PC; dword_11DCC|126-68
43858|code|B               loc_A9C6|56-231
43860|code|MOVS            R0, #4; size|4-32
43862|code|BLX             malloc|251-247-24-238
43866|code|STR             R0, [SP,#0x40+ptr]|4-144
43868|code|CMP             R0, #0|0-40
43870|code|BNE.W           loc_AA20|127-244-95-175
43874|code|BL              logMallocError|254-247-251-250
43878|code|MOVS            R0, #0|0-32
43880|code|B               loc_AAAA|159-231
43882|code|LDR             R1, =(aMissingParamet - 0xAB74); "missing parameter name"|26-73
43884|code|MOVS            R2, #5; category|5-34
43886|code|MOVS            R0, #0; domainname|0-32
43888|code|ADD             R1, PC; "missing parameter name"|121-68
43890|code|BLX             dcgettext|251-247-126-237
43894|code|LDR             R1, =(aSS_2 - 0xAB80); "%s: %.*s"|24-73
43896|code|STR             R4, [SP,#0x40+var_40]|0-148
43898|code|LDR             R3, [SP,#0x40+n]|2-155
43900|code|ADD             R1, PC; "%s: %.*s"|121-68
43902|code|MOV             R2, R0|2-70
43904|code|MOVS            R0, #3|3-32
43906|code|BL              logMessage|254-247-95-250
43910|code|B               loc_AA10|67-231
43912|code|LDR             R1, =(aMissingParamet_0 - 0xAB90); "missing parameter value"|20-73
43914|code|MOVS            R2, #5; category|5-34
43916|code|ADD             R1, PC; "missing parameter value"|121-68
43918|code|BLX             dcgettext|251-247-112-237
43922|code|LDR             R1, =(aSS_2 - 0xAB9C); "%s: %.*s"|19-73
43924|code|STR             R4, [SP,#0x40+var_40]|0-148
43926|code|LDR             R3, [SP,#0x40+n]|2-155
43928|code|ADD             R1, PC; "%s: %.*s"|121-68
43930|code|MOV             R2, R0|2-70
43932|code|MOVS            R0, #3|3-32
43934|code|BL              logMessage|254-247-81-250
43938|code|B               loc_AA10|53-231
43940|code|LDR             R1, =(aMissingParamet_1 - 0xABAE); "missing parameter qualifier"|15-73
43942|code|MOV             R0, R9; domainname|72-70
43944|code|MOVS            R2, #5; category|5-34
43946|code|ADD             R1, PC; "missing parameter qualifier"|121-68
43948|code|BLX             dcgettext|251-247-96-237
43952|code|LDR             R1, =(aSS_2 - 0xABBA); "%s: %.*s"|13-73
43954|code|STR             R4, [SP,#0x40+var_40]|0-148
43956|code|LDR             R3, [SP,#0x40+n]|2-155
43958|code|ADD             R1, PC; "%s: %.*s"|121-68
43960|code|MOV             R2, R0|2-70
43962|code|MOVS            R0, #3|3-32
43964|code|BL              logMessage|254-247-66-250
43968|code|B               loc_AA10|38-231
43970|code|BL              logMallocError|254-247-203-250
43974|code|B               loc_AA10|35-231
43976|data|DCD aUnsupportedPar - 0xAB3A; "unsupported parameter"|254-114-0-0
43980|data|DCD aSS_2 - 0xAB46; "%s: %.*s"|178-114-0-0
43984|data|DCD dword_11DCC - 0xAB54|120-114-0-0
43988|data|DCD aMissingParamet - 0xAB74; "missing parameter name"|172-114-0-0
43992|data|DCD aSS_2 - 0xAB80; "%s: %.*s"|120-114-0-0
43996|data|DCD aMissingParamet_0 - 0xAB90; "missing parameter value"|80-114-0-0
44000|data|DCD aSS_2 - 0xAB9C; "%s: %.*s"|92-114-0-0
44004|data|DCD aMissingParamet_1 - 0xABAE; "missing parameter qualifier"|86-114-0-0
44008|data|DCD aSS_2 - 0xABBA; "%s: %.*s"|62-114-0-0
44012|code|CMP             R0, #0|0-40
44014|code|IT NE|24-191
44016|code|CMPNE           R1, #0|0-41
44018|code|PUSH.W          {R4-R8,LR}|45-233-240-65
44022|code|MOV             R4, R0|4-70
44024|code|SUB             SP, SP, #8|130-176
44026|code|MOV             R5, R1|13-70
44028|code|BEQ             loc_AC22|17-208
44030|code|LDR             R3, [R0]|3-104
44032|code|CBZ             R3, loc_AC22|123-177
44034|code|LDR.W           R8, =(aSSS_0 - 0xAC0C); "%s: %s=%s"|223-248-36-128
44038|code|MOV             R7, R2|23-70
44040|code|ADD             R8, PC; "%s: %s=%s"|248-68
44042|code|LDR.W           R6, [R5],#4|85-248-4-107
44046|code|MOVS            R0, #6|6-32
44048|code|MOV             R1, R8|65-70
44050|code|MOV             R2, R7|58-70
44052|code|STR             R6, [SP,#0x20+var_20]|0-150
44054|code|BL              logMessage|254-247-21-250
44058|code|LDR.W           R3, [R4,#4]!|84-248-4-63
44062|code|CMP             R3, #0|0-43
44064|code|BNE             loc_AC0A|243-209
44066|code|ADD             SP, SP, #8|2-176
44068|code|POP.W           {R4-R8,PC}|189-232-240-129
44072|data|DCD aSSS_0 - 0xAC0C; "%s: %s=%s"|68-114-0-0
44076|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xAC34)|12-75
44078|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|13-74
44080|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
44082|code|PUSH            {R4,R5,LR}|48-181
44084|code|SUB             SP, SP, #0x14|133-176
44086|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
44088|code|MOV             R4, R0|4-70
44090|code|ADD             R1, SP, #0x20+tp; tp|1-169
44092|code|MOVS            R0, #0; clock_id|0-32
44094|code|LDR             R3, [R5]|43-104
44096|code|STR             R3, [SP,#0x20+var_14]|3-147
44098|code|BLX             clock_gettime|251-247-174-236
44102|code|LDR             R2, [SP,#0x20+var_14]|3-154
44104|code|LDR             R3, [R5]|43-104
44106|code|LDR             R0, [SP,#0x20+tp]|1-152
44108|code|LDR             R1, [SP,#0x20+tp.tv_nsec]|2-153
44110|code|CMP             R2, R3|154-66
44112|code|STM.W           R4, {R0,R1}|132-232-3-0
44116|code|BNE             loc_AC5A|1-209
44118|code|ADD             SP, SP, #0x14|5-176
44120|code|POP             {R4,R5,PC}|48-189
44122|code|BLX             __stack_chk_fail|251-247-236-236
44126|data|ALIGN 0x10|0-191
44128|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAC34|160-160-1-0
44132|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44136|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xAC74)|27-74
44138|code|MOVS            R3, #0|0-35
44140|code|PUSH.W          {R4-R9,LR}|45-233-240-67
44144|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
44146|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|26-77
44148|code|MOV             R7, R0|7-70
44150|code|LDR             R6, [R1,#8]|142-104
44152|code|SUB             SP, SP, #0x34|141-176
44154|code|LDRH            R4, [R1]|12-136
44156|code|MOV.W           LR, #0xFFFFFFFF|79-240-255-62
44160|code|LDR             R5, [R2,R5]; __stack_chk_guard|85-89
44162|code|MOV             R0, SP; tp|104-70
44164|code|STR             R6, [R7,#4]|126-96
44166|code|SUBW            R2, R4, #0x76C|164-242-108-114
44170|code|LDRB.W          R9, [R1,#6]|145-248-6-144
44174|code|LDRB.W          R8, [R1,#5]|145-248-5-128
44178|code|LDRB.W          R12, [R1,#4]|145-248-4-192
44182|code|LDRB            R6, [R1,#2]|142-120
44184|code|LDR             R4, [R5]|44-104
44186|code|LDRB            R1, [R1,#3]|201-120
44188|code|STR             R2, [SP,#0x50+var_3C]|5-146
44190|code|ADDS            R1, #1|1-49
44192|code|STR             R3, [SP,#0x50+var_38]|6-147
44194|code|STR             R3, [SP,#0x50+var_34]|7-147
44196|code|STR             R3, [SP,#0x50+var_2C]|9-147
44198|code|STR             R3, [SP,#0x50+var_28]|10-147
44200|code|STR.W           R9, [SP,#0x50+var_50]|205-248-0-144
44204|code|STR.W           R8, [SP,#0x50+var_4C]|205-248-4-128
44208|code|STR             R1, [SP,#0x50+var_44]|3-145
44210|code|STR.W           R12, [SP,#0x50+var_48]|205-248-8-192
44214|code|STR             R6, [SP,#0x50+var_40]|4-150
44216|code|STR             R4, [SP,#0x50+var_24]|11-148
44218|code|STR.W           LR, [SP,#0x50+var_30]|205-248-32-224
44222|code|BLX             mktime|251-247-50-238
44226|code|LDR             R2, [SP,#0x50+var_24]|11-154
44228|code|LDR             R3, [R5]|43-104
44230|code|CMP             R2, R3|154-66
44232|code|STR             R0, [R7]|56-96
44234|code|BNE             loc_ACD2|2-209
44236|code|ADD             SP, SP, #0x34 ; '4'|13-176
44238|code|POP.W           {R4-R9,PC}|189-232-240-131
44242|code|BLX             __stack_chk_fail|251-247-176-236
44246|data|ALIGN 4|0-191
44248|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAC74|96-160-1-0
44252|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44256|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xACEA)|22-75
44258|code|PUSH.W          {R4-R8,LR}|45-233-240-65
44262|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
44264|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|21-77
44266|code|MOV             R8, R0|128-70
44268|code|SUB             SP, SP, #0x38|142-176
44270|code|LDR.W           R6, [R8]|216-248-0-96
44274|code|ADD             R0, SP, #0x50+var_18|14-168
44276|code|MOV             R4, R1|12-70
44278|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
44280|code|ADD             R1, SP, #0x50+tp; tp|2-169
44282|code|STR.W           R6, [R0,#-0x34]!; timer|64-248-52-109
44286|code|LDR             R3, [R5]|43-104
44288|code|STR             R3, [SP,#0x50+var_1C]|13-147
44290|code|BLX             localtime_r|251-247-200-234
44294|code|LDR             R7, [SP,#0x50+tp.tm_mon]|6-159
44296|code|LDR             R3, [SP,#0x50+tp.tm_mday]|5-155
44298|code|LDR.W           R0, [R8,#4]|216-248-4-0
44302|code|SUBS            R3, #1|1-59
44304|code|STRB            R7, [R4,#2]|167-112
44306|code|STRB            R3, [R4,#3]|227-112
44308|code|LDR             R7, [SP,#0x50+var_1C]|13-159
44310|code|LDR             R5, [R5]|45-104
44312|code|LDR             R1, [SP,#0x50+tp.tm_hour]|4-153
44314|code|LDR             R6, [SP,#0x50+tp.tm_min]|3-158
44316|code|CMP             R7, R5|175-66
44318|code|LDR             R2, [SP,#0x50+tp]|2-154
44320|code|LDR             R3, [SP,#0x50+tp.tm_year]|7-155
44322|code|STR             R0, [R4,#8]|160-96
44324|code|ADDW            R3, R3, #0x76C|3-242-108-115
44328|code|STRB            R1, [R4,#4]|33-113
44330|code|STRH            R3, [R4]|35-128
44332|code|STRB            R6, [R4,#5]|102-113
44334|code|STRB            R2, [R4,#6]|162-113
44336|code|BNE             loc_AD38|2-209
44338|code|ADD             SP, SP, #0x38 ; '8'|14-176
44340|code|POP.W           {R4-R8,PC}|189-232-240-129
44344|code|BLX             __stack_chk_fail|251-247-124-236
44348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xACEA|234-159-1-0
44352|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44356|code|PUSH.W          {R4-R10,LR}|45-233-240-71
44360|code|SUB             SP, SP, #0x38|142-176
44362|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xAD56)|16-77
44364|code|ADD             R6, SP, #0x58+var_20|14-174
44366|code|LDR             R7, =(__stack_chk_guard_ptr - 0x24CD4)|16-79
44368|code|ADD             R4, SP, #0x58+tp|2-172
44370|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
44372|code|MOV             R9, R0|129-70
44374|code|MOV             R8, R1|136-70
44376|code|MOV             R10, R2|146-70
44378|code|LDR             R7, [R5,R7]; __stack_chk_guard|239-89
44380|code|MOV             R1, R4; tp|33-70
44382|code|STR.W           R3, [R6,#-0x34]!|70-248-52-61
44386|code|MOV             R0, R6; timer|48-70
44388|code|LDR             R3, [R7]|59-104
44390|code|STR             R3, [SP,#0x58+var_24]|13-147
44392|code|BLX             localtime_r|251-247-148-234
44396|code|MOV             R2, R10; format|82-70
44398|code|MOV             R3, R4; tp|35-70
44400|code|MOV             R0, R9; s|72-70
44402|code|MOV             R1, R8; maxsize|65-70
44404|code|BLX             strftime|251-247-110-235
44408|code|LDR             R2, [SP,#0x58+var_24]|13-154
44410|code|LDR             R3, [R7]|59-104
44412|code|CMP             R2, R3|154-66
44414|code|BNE             loc_AD86|2-209
44416|code|ADD             SP, SP, #0x38 ; '8'|14-176
44418|code|POP.W           {R4-R10,PC}|189-232-240-135
44422|code|BLX             __stack_chk_fail|251-247-86-236
44426|data|ALIGN 4|0-191
44428|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAD56|126-159-1-0
44432|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44436|code|LDR             R3, [R0,#4]|67-104
44438|code|CMP             R3, #0|0-43
44440|code|BGE             loc_ADB8|14-218
44442|code|LDR             R2, [R0]|2-104
44444|code|SUBS            R2, #1|1-58
44446|code|ADD.W           R3, R3, #0x3B800000|3-241-110-83
44450|code|MOV             R1, R2|17-70
44452|code|ADD.W           R3, R3, #0x1AC000|3-245-214-19
44456|code|SUBS            R2, #1|1-58
44458|code|ADD.W           R3, R3, #0xA00|3-245-32-99
44462|code|CMP             R3, #0|0-43
44464|code|BLT             loc_AD9E|245-219
44466|code|STM.W           R0, {R1,R3}|128-232-10-0
44470|code|BX              LR|112-71
44472|code|PUSH            {R4,R5}|48-180
44474|code|MOV             R5, #0x3B9AC9FF|76-246-255-21-195-246-154-53
44482|code|CMP             R3, R5|171-66
44484|code|BLE             loc_ADEA|17-221
44486|code|MOV.W           R2, #0x3600|79-244-88-82
44490|code|LDR             R4, [R0]|4-104
44492|code|MOVT.W          R2, #0xC465|204-242-101-66
44496|code|ADD             R2, R3|26-68
44498|code|CMP             R2, R5|170-66
44500|code|ADD.W           R1, R4, #1|4-241-1-1
44504|code|ITTTT GT|193-191
44506|code|ADDGT           R1, R4, #2|161-28
44508|code|MOVGT.W         R2, #0x6C00|79-244-216-66
44512|code|MOVTGT.W        R2, #0x88CA|200-246-202-2
44516|code|ADDGT           R2, R2, R3|210-24
44518|code|STM.W           R0, {R1,R2}|128-232-6-0
44522|code|POP             {R4,R5}|48-188
44524|code|BX              LR|112-71
44526|data|ALIGN 0x10|0-191
44528|code|PUSH            {R4-R7,LR}|240-181
44530|code|MOV             R6, #0x10624DD3|68-246-211-86-193-242-98-6
44538|code|ASRS            R3, R1, #0x1F|203-23
44540|code|SMULL.W         R6, R7, R1, R6|129-251-6-103
44544|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xAE0A)|24-76
44546|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|25-74
44548|code|SUB             SP, SP, #0x14|133-176
44550|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
44552|code|MOV             R5, R0|5-70
44554|code|LDR             R4, [R4,R2]; __stack_chk_guard|164-88
44556|code|RSB.W           R3, R3, R7,ASR#6|195-235-167-19
44560|code|STR             R3, [SP,#0x28+var_24]|1-147
44562|code|RSB.W           R6, R3, R3,LSL#5|195-235-67-22
44566|code|LDR             R2, [R4]|34-104
44568|code|ADD.W           R3, R3, R6,LSL#2|3-235-134-3
44572|code|STR             R2, [SP,#0x28+var_1C]|3-146
44574|code|SUB.W           R1, R1, R3,LSL#3|161-235-195-1
44578|code|RSB.W           R3, R1, R1,LSL#5|193-235-65-19
44582|code|RSB.W           R3, R3, R3,LSL#6|195-235-131-19
44586|code|ADD.W           R1, R1, R3,LSL#3|1-235-195-1
44590|code|LSLS            R1, R1, #6|137-1
44592|code|STR             R1, [SP,#0x28+var_20]|2-145
44594|code|BL              normalizeTimeValue|255-247-175-255
44598|code|ADD             R0, SP, #0x28+var_24|1-168
44600|code|BL              normalizeTimeValue|255-247-172-255
44604|code|LDR             R6, [R5]|46-104
44606|code|LDR             R1, [R5,#4]|105-104
44608|code|MOV             R0, R5|40-70
44610|code|LDR             R2, [SP,#0x28+var_24]|1-154
44612|code|LDR             R3, [SP,#0x28+var_20]|2-155
44614|code|ADD             R2, R6|50-68
44616|code|STR             R2, [R5]|42-96
44618|code|ADD             R3, R1|11-68
44620|code|STR             R3, [R5,#4]|107-96
44622|code|BL              normalizeTimeValue|255-247-161-255
44626|code|LDR             R2, [SP,#0x28+var_1C]|3-154
44628|code|LDR             R3, [R4]|35-104
44630|code|CMP             R2, R3|154-66
44632|code|BNE             loc_AE5E|1-209
44634|code|ADD             SP, SP, #0x14|5-176
44636|code|POP             {R4-R7,PC}|240-189
44638|code|BLX             __stack_chk_fail|251-247-234-235
44642|data|ALIGN 4|0-191
44644|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAE0A|202-158-1-0
44648|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44652|code|LDR             R2, [R0]|2-104
44654|code|LDR             R3, [R1]|11-104
44656|code|CMP             R2, R3|154-66
44658|code|BLT             loc_AE8A|10-219
44660|code|BGT             loc_AE86|7-220
44662|code|LDR             R2, [R0,#4]|66-104
44664|code|LDR             R3, [R1,#4]|75-104
44666|code|CMP             R2, R3|154-66
44668|code|BLT             loc_AE8A|5-219
44670|code|ITE GT|204-191
44672|code|MOVGT           R0, #1|1-32
44674|code|MOVLE           R0, #0|0-32
44676|code|BX              LR|112-71
44678|code|MOVS            R0, #1|1-32
44680|code|BX              LR|112-71
44682|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44686|code|BX              LR|112-71
44688|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xAE98)|22-75
44690|code|PUSH            {R4-R7,LR}|240-181
44692|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
44694|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|22-77
44696|code|MOV             R7, R0|7-70
44698|code|SUB             SP, SP, #0x14|133-176
44700|code|LDR             R4, [R1]|12-104
44702|code|LDR             R2, [R1,#4]|74-104
44704|code|ADD             R0, SP, #0x28+var_24|1-168
44706|code|LDR             R6, [R3,R5]; __stack_chk_guard|94-89
44708|code|LDM.W           R7, {R1,R3}|151-232-10-0
44712|code|LDR             R5, [R6]|53-104
44714|code|SUBS            R1, R4, R1|97-26
44716|code|SUBS            R3, R2, R3|211-26
44718|code|STR             R1, [SP,#0x28+var_24]|1-145
44720|code|STR             R3, [SP,#0x28+var_20]|2-147
44722|code|MOVW            R4, #0xDE83|77-246-131-100
44726|code|STR             R5, [SP,#0x28+var_1C]|3-149
44728|code|BL              normalizeTimeValue|255-247-108-255
44732|code|LDR             R3, [SP,#0x28+var_20]|2-155
44734|code|MOVT.W          R4, #0x431B|196-242-27-52
44738|code|LDR             R2, [SP,#0x28+var_24]|1-154
44740|code|LDR             R7, [SP,#0x28+var_1C]|3-159
44742|code|SMULL.W         R4, R5, R3, R4|131-251-4-69
44746|code|RSB.W           R0, R2, R2,LSL#5|194-235-66-16
44750|code|LDR             R1, [R6]|49-104
44752|code|ASRS            R3, R3, #0x1F|219-23
44754|code|ADD.W           R0, R2, R0,LSL#2|2-235-128-0
44758|code|CMP             R7, R1|143-66
44760|code|RSB.W           R3, R3, R5,ASR#18|195-235-165-67
44764|code|ADD.W           R0, R3, R0,LSL#3|3-235-192-0
44768|code|BNE             loc_AEE6|1-209
44770|code|ADD             SP, SP, #0x14|5-176
44772|code|POP             {R4-R7,PC}|240-189
44774|code|BLX             __stack_chk_fail|251-247-166-235
44778|data|ALIGN 4|0-191
44780|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAE98|60-158-1-0
44784|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44788|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xAEFE)|14-75
44790|code|MOV             R2, R0|2-70
44792|code|PUSH            {R4,R5,LR}|48-181
44794|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
44796|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|13-76
44798|code|SUB             SP, SP, #0x14|133-176
44800|code|LDM             R0, {R0,R1}|3-200
44802|code|MOVS            R5, #0|0-37
44804|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
44806|code|ADD             R3, SP, #0x20+var_1C|1-171
44808|code|STM.W           R3, {R0,R1}|131-232-3-0
44812|code|MOV             R1, R3|25-70
44814|code|LDR             R3, [R4]|35-104
44816|code|MOV             R0, R2|16-70
44818|code|LDR             R2, [SP,#0x20+var_1C]|1-154
44820|code|STR             R5, [SP,#0x20+var_18]|2-149
44822|code|ADDS            R2, #1|1-50
44824|code|STR             R3, [SP,#0x20+var_14]|3-147
44826|code|STR             R2, [SP,#0x20+var_1C]|1-146
44828|code|BL              millisecondsBetween|255-247-184-255
44832|code|LDR             R2, [SP,#0x20+var_14]|3-154
44834|code|LDR             R3, [R4]|35-104
44836|code|CMP             R2, R3|154-66
44838|code|BNE             loc_AF2C|1-209
44840|code|ADD             SP, SP, #0x14|5-176
44842|code|POP             {R4,R5,PC}|48-189
44844|code|BLX             __stack_chk_fail|251-247-130-235
44848|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAEFE|214-157-1-0
44852|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44856|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xAF40)|21-75
44858|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|22-74
44860|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
44862|code|PUSH            {R4-R7,LR}|240-181
44864|code|MOV             R5, R0|5-70
44866|code|SUB             SP, SP, #0x14|133-176
44868|code|LDM             R0, {R0,R1}|3-200
44870|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
44872|code|ADD             R2, SP, #0x28+var_24|1-170
44874|code|MOVW            R6, #0x8889|72-246-137-6
44878|code|MOVS            R7, #0|0-39
44880|code|STM.W           R2, {R0,R1}|130-232-3-0
44884|code|MOVT.W          R6, #0x8888|200-246-136-6
44888|code|LDR             R3, [SP,#0x28+var_24]|1-155
44890|code|MOV             R1, R2|17-70
44892|code|STR             R7, [SP,#0x28+var_20]|2-151
44894|code|MOV             R0, R5|40-70
44896|code|LDR             R5, [R4]|37-104
44898|code|SMULL.W         R6, R7, R3, R6|131-251-6-103
44902|code|ASRS            R2, R3, #0x1F|218-23
44904|code|STR             R5, [SP,#0x28+var_1C]|3-149
44906|code|ADD             R3, R7|59-68
44908|code|RSB.W           R3, R2, R3,ASR#5|194-235-99-19
44912|code|ADDS            R3, #1|1-51
44914|code|RSB.W           R3, R3, R3,LSL#4|195-235-3-19
44918|code|LSLS            R3, R3, #2|155-0
44920|code|STR             R3, [SP,#0x28+var_24]|1-147
44922|code|BL              millisecondsBetween|255-247-137-255
44926|code|LDR             R2, [SP,#0x28+var_1C]|3-154
44928|code|LDR             R3, [R4]|35-104
44930|code|CMP             R2, R3|154-66
44932|code|BNE             loc_AF8A|1-209
44934|code|ADD             SP, SP, #0x14|5-176
44936|code|POP             {R4-R7,PC}|240-189
44938|code|BLX             __stack_chk_fail|251-247-84-235
44942|data|ALIGN 0x10|0-191
44944|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAF40|148-157-1-0
44948|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
44952|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xAFA2)|27-75
44954|code|LDR             R2, =(off_25010 - 0xAFA4)|28-74
44956|code|LDR             R1, =(__stack_chk_guard_ptr - 0x24CD4)|28-73
44958|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
44960|code|ADD             R2, PC; off_25010|122-68
44962|code|PUSH.W          {R4-R9,LR}|45-233-240-67
44966|code|MOV             R8, R0|128-70
44968|code|LDR.W           R9, [R3,R1]; __stack_chk_guard|83-248-1-144
44972|code|SUB             SP, SP, #0x14|133-176
44974|code|LDR             R4, [R2]; dword_11E5C|20-104
44976|code|LDR.W           R3, [R9]|217-248-0-48
44980|code|LDR             R0, [R4]|32-104
44982|code|STR             R3, [SP,#0x30+var_24]|3-147
44984|code|CBZ             R0, loc_AFEE|200-177
44986|code|LDR             R7, =(aClockNotAvaila - 0xAFC4); "clock not available: %u"|22-79
44988|code|ADD             R6, SP, #0x30+tp|1-174
44990|code|LDR             R5, =(off_25010 - 0xAFC6)|22-77
44992|code|ADD             R7, PC; "clock not available: %u"|127-68
44994|code|ADD             R5, PC; off_25010|125-68
44996|code|B               loc_AFDA|9-224
44998|code|LDR             R2, [R4]|34-104
45000|code|MOVS            R0, #4|4-32
45002|code|MOV             R1, R7|57-70
45004|code|BL              logMessage|254-247-58-248
45008|code|LDR             R3, [R5]; dword_11E5C|43-104
45010|code|ADDS            R4, R3, #4|28-29
45012|code|STR             R4, [R5]; dword_11E5C|44-96
45014|code|LDR             R0, [R3,#(dword_11E60 - 0x11E5C)]; clock_id|88-104
45016|code|CBZ             R0, loc_AFEE|72-177
45018|code|MOV             R1, R6; tp|49-70
45020|code|BLX             clock_gettime|251-247-224-234
45024|code|ADDS            R0, #1|1-48
45026|code|BEQ             loc_AFC6|240-208
45028|code|LDR             R2, [SP,#0x30+tp]|1-154
45030|code|LDR             R3, [SP,#0x30+tp.tv_nsec]|2-155
45032|code|STM.W           R8, {R2,R3}|136-232-12-0
45036|code|B               loc_AFF4|2-224
45038|code|MOV             R0, R8|64-70
45040|code|BL              getCurrentTime|255-247-28-254
45044|code|LDR             R2, [SP,#0x30+var_24]|3-154
45046|code|LDR.W           R3, [R9]|217-248-0-48
45050|code|CMP             R2, R3|154-66
45052|code|BNE             loc_B004|2-209
45054|code|ADD             SP, SP, #0x14|5-176
45056|code|POP.W           {R4-R9,PC}|189-232-240-131
45060|code|BLX             __stack_chk_fail|251-247-22-235
45064|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAFA2|50-157-1-0
45068|data|DCD off_25010 - 0xAFA4|108-160-1-0
45072|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
45076|data|DCD aClockNotAvaila - 0xAFC4; "clock not available: %u"|164-110-0-0
45080|data|DCD off_25010 - 0xAFC6|74-160-1-0
45084|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB024)|12-75
45086|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|13-74
45088|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
45090|code|PUSH            {R4-R6,LR}|112-181
45092|code|SUB             SP, SP, #0x10|132-176
45094|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
45096|code|ADD             R4, SP, #0x20+var_1C|1-172
45098|code|MOV             R6, R0|6-70
45100|code|MOV             R0, R4|32-70
45102|code|LDR             R3, [R5]|43-104
45104|code|STR             R3, [SP,#0x20+var_14]|3-147
45106|code|BL              getMonotonicTime|255-247-177-255
45110|code|MOV             R0, R6|48-70
45112|code|MOV             R1, R4|33-70
45114|code|BL              millisecondsBetween|255-247-41-255
45118|code|LDR             R2, [SP,#0x20+var_14]|3-154
45120|code|LDR             R3, [R5]|43-104
45122|code|CMP             R2, R3|154-66
45124|code|BNE             loc_B04A|1-209
45126|code|ADD             SP, SP, #0x10|4-176
45128|code|POP             {R4-R6,PC}|112-189
45130|code|BLX             __stack_chk_fail|251-247-244-234
45134|data|ALIGN 0x10|0-191
45136|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB024|176-156-1-0
45140|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
45144|code|B.W             getMonotonicTime|255-247-158-191
45148|code|STR             R1, [R0,#8]|129-96
45150|code|B.W             restartTimePeriod|255-247-251-191
45154|data|ALIGN 4|0-191
45156|code|PUSH            {R3-R5,LR}|56-181
45158|code|MOV             R4, R1|12-70
45160|code|MOV             R5, R0|5-70
45162|code|BL              getMonotonicElapsed|255-247-215-255
45166|code|CBZ             R4, loc_B072|4-177
45168|code|STR             R0, [R4]|32-96
45170|code|LDR             R3, [R5,#8]|171-104
45172|code|CMP             R3, R0|131-66
45174|code|ITE GT|204-191
45176|code|MOVGT           R0, #0|0-32
45178|code|MOVLE           R0, #1|1-32
45180|code|POP             {R3-R5,PC}|56-189
45182|data|ALIGN 0x10|0-191
45184|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB088)|28-75
45186|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|29-74
45188|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
45190|code|PUSH            {R4-R7,LR}|240-181
45192|code|SUB             SP, SP, #0x14|133-176
45194|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
45196|code|LDR             R3, [R4]|35-104
45198|code|STR             R3, [SP,#0x28+var_1C]|3-147
45200|code|SUBS            R3, R0, #0|3-30
45202|code|BLE             loc_B0D0|29-221
45204|code|MOVW            R6, #0x4DD3|68-246-211-86
45208|code|ASRS            R2, R3, #0x1F|218-23
45210|code|MOVT.W          R6, #0x1062|193-242-98-6
45214|code|ADD             R0, SP, #0x28+requested_time; requested_time|1-168
45216|code|SMULL.W         R6, R7, R3, R6|131-251-6-103
45220|code|MOVS            R1, #0; remaining|0-33
45222|code|RSB.W           R2, R2, R7,ASR#6|194-235-167-18
45226|code|STR             R2, [SP,#0x28+requested_time]|1-146
45228|code|RSB.W           R5, R2, R2,LSL#5|194-235-66-21
45232|code|ADD.W           R2, R2, R5,LSL#2|2-235-133-2
45236|code|SUB.W           R3, R3, R2,LSL#3|163-235-194-3
45240|code|RSB.W           R2, R3, R3,LSL#5|195-235-67-18
45244|code|RSB.W           R2, R2, R2,LSL#6|194-235-130-18
45248|code|ADD.W           R3, R3, R2,LSL#3|3-235-194-3
45252|code|LSLS            R3, R3, #6|155-1
45254|code|STR             R3, [SP,#0x28+requested_time.tv_nsec]|2-147
45256|code|BLX             nanosleep|251-247-190-233
45260|code|ADDS            R0, #1|1-48
45262|code|BEQ             loc_B0DC|5-208
45264|code|LDR             R2, [SP,#0x28+var_1C]|3-154
45266|code|LDR             R3, [R4]|35-104
45268|code|CMP             R2, R3|154-66
45270|code|BNE             loc_B0F0|11-209
45272|code|ADD             SP, SP, #0x14|5-176
45274|code|POP             {R4-R7,PC}|240-189
45276|code|BLX             __errno_location|251-247-218-235
45280|code|LDR             R3, [R0]|3-104
45282|code|CMP             R3, #4|4-43
45284|code|BEQ             loc_B0D0|244-208
45286|code|LDR             R0, =(aNanosleep_0 - 0xB0EC); "nanosleep"|5-72
45288|code|ADD             R0, PC; "nanosleep"|120-68
45290|code|BL              logSystemError|254-247-45-248
45294|code|B               loc_B0D0|239-231
45296|code|BLX             __stack_chk_fail|251-247-160-234
45300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB088|76-156-1-0
45304|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
45308|data|DCD aNanosleep_0 - 0xB0EC; "nanosleep"|148-109-0-0
45312|code|LDR             R0, [R0]|0-104
45314|code|BX              LR|112-71
45316|code|PUSH            {R4-R7,LR}|240-181
45318|code|MOV             R6, R1|14-70
45320|code|SUB             SP, SP, #0xC|131-176
45322|code|MOV             R7, R2|23-70
45324|code|MOV             R5, R0|5-70
45326|code|CBZ             R0, loc_B174|136-179
45328|code|MOVS            R0, #0xC; size|12-32
45330|code|BLX             malloc|251-247-58-235
45334|code|STR             R0, [R5]|40-96
45336|code|CMP             R0, #0|0-40
45338|code|BEQ             loc_B190|57-208
45340|code|MOV             R0, R7|56-70
45342|code|BLX             R6|176-71
45344|code|MOV             R4, R0|4-70
45346|code|CBZ             R0, loc_B184|120-179
45348|code|LDR             R1, [R5]|41-104
45350|code|MOVS            R2, #0|0-34
45352|code|MOV             R3, R1|11-70
45354|code|STRB.W          R2, [R3],#1|3-248-1-43
45358|code|ADDS            R3, #1|1-51
45360|code|STRB            R2, [R1,#1]|74-112
45362|code|STRB.W          R2, [R3],#1|3-248-1-43
45366|code|STRB.W          R2, [R3],#1|3-248-1-43
45370|code|STRB.W          R2, [R3],#1|3-248-1-43
45374|code|STRB.W          R2, [R3],#1|3-248-1-43
45378|code|STRB.W          R2, [R3],#1|3-248-1-43
45382|code|STRB.W          R2, [R3],#1|3-248-1-43
45386|code|STRB.W          R2, [R3],#1|3-248-1-43
45390|code|STRB.W          R2, [R3],#1|3-248-1-43
45394|code|STRB.W          R2, [R3],#1|3-248-1-43
45398|code|STRB            R2, [R3]|26-112
45400|code|LDR             R3, [R5]|43-104
45402|code|STR             R4, [R3]|28-96
45404|code|LDR             R4, [R5]|44-104
45406|code|BL              getElementIdentifier|1-240-249-254
45410|code|LDR             R5, [R5]|45-104
45412|code|STR             R0, [R4,#4]|96-96
45414|code|MOVS            R4, #1|1-36
45416|code|BL              asyncGetThreadSpecificData|0-240-178-248
45420|code|STR             R0, [R5,#8]|168-96
45422|code|MOV             R0, R4|32-70
45424|code|ADD             SP, SP, #0xC|3-176
45426|code|POP             {R4-R7,PC}|240-189
45428|code|MOV             R0, R2|16-70
45430|code|BLX             R1|136-71
45432|code|MOVS            R4, R0|4-28
45434|code|IT NE|24-191
45436|code|MOVNE           R4, #1|1-36
45438|code|MOV             R0, R4|32-70
45440|code|ADD             SP, SP, #0xC|3-176
45442|code|POP             {R4-R7,PC}|240-189
45444|code|LDR             R0, [R5]; ptr|40-104
45446|code|BLX             free|251-247-222-232
45450|code|MOV             R0, R4|32-70
45452|code|ADD             SP, SP, #0xC|3-176
45454|code|POP             {R4-R7,PC}|240-189
45456|code|STR             R0, [SP,#0x20+var_1C]|1-144
45458|code|BL              logMallocError|253-247-227-255
45462|code|LDR             R0, [SP,#0x20+var_1C]|1-152
45464|code|MOV             R4, R0|4-70
45466|code|B               loc_B16E|232-231
45468|code|PUSH            {R4,LR}|16-181
45470|code|MOV             R4, R0|4-70
45472|code|BL              asyncGetThreadSpecificData|0-240-150-248
45476|code|LDR             R3, [R4,#8]|163-104
45478|code|CMP             R3, R0|131-66
45480|code|BEQ             loc_B1B8|6-208
45482|code|LDR             R1, =(aInvalidAsyncHa - 0xB1B2); "invalid async handle"|4-73
45484|code|MOVS            R0, #4|4-32
45486|code|ADD             R1, PC; "invalid async handle"|121-68
45488|code|BL              logMessage|253-247-72-255
45492|code|MOVS            R0, #0|0-32
45494|code|POP             {R4,PC}|16-189
45496|code|MOVS            R0, #1|1-32
45498|code|POP             {R4,PC}|16-189
45500|data|DCD aInvalidAsyncHa - 0xB1B2; "invalid async handle"|218-108-0-0
45504|code|PUSH            {R4-R6,LR}|112-181
45506|code|MOV             R5, R1|13-70
45508|code|MOV             R6, R0|6-70
45510|code|BL              asyncTestHandle|255-247-233-255
45514|code|CMP             R0, #0|0-40
45516|code|IT NE|24-191
45518|code|CMPNE           R5, #0|0-45
45520|code|BEQ             loc_B1F2|15-208
45522|code|LDM             R6, {R4,R6}|80-206
45524|code|MOV             R0, R4|32-70
45526|code|BL              getElementIdentifier|1-240-189-254
45530|code|CMP             R6, R0|134-66
45532|code|BNE             loc_B1F2|9-209
45534|code|CMP             R5, #1|1-45
45536|code|MOV             R0, R4|32-70
45538|code|BEQ             locret_B1F0|5-208
45540|code|BL              getElementQueue|1-240-180-254
45544|code|CMP             R5, R0|133-66
45546|code|BNE             loc_B1F2|2-209
45548|code|MOV             R0, R4|32-70
45550|code|POP             {R4-R6,PC}|112-189
45552|code|POP             {R4-R6,PC}|112-189
45554|code|MOVS            R0, #0|0-32
45556|code|POP             {R4-R6,PC}|112-189
45558|data|ALIGN 4|0-191
45560|code|B.W             j_free|251-247-162-184
45564|code|PUSH            {R4-R6,LR}|112-181
45566|code|MOVS            R1, #1|1-33
45568|code|MOV             R5, R0|5-70
45570|code|BL              asyncGetHandleElement|255-247-221-255
45574|code|MOV             R4, R0|4-70
45576|code|MOV             R0, R5; ptr|40-70
45578|code|BL              asyncDiscardHandle|255-247-245-255
45582|code|CBZ             R4, locret_B232|132-177
45584|code|MOV             R0, R4|32-70
45586|code|BL              getElementQueue|1-240-157-254
45590|code|BL              getQueueData|1-240-9-255
45594|code|CBZ             R0, loc_B228|40-177
45596|code|LDR             R3, [R0]|3-104
45598|code|CBZ             R3, loc_B228|27-177
45600|code|MOV             R0, R4|32-70
45602|code|POP.W           {R4-R6,LR}|189-232-112-64
45606|code|BX              R3|24-71
45608|code|MOV             R0, R4|32-70
45610|code|POP.W           {R4-R6,LR}|189-232-112-64
45614|code|B.W             deleteElement|1-240-85-190
45618|code|POP             {R4-R6,PC}|112-189
45620|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB23C)|11-75
45622|code|PUSH            {R4,LR}|16-181
45624|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
45626|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|11-76
45628|code|SUB             SP, SP, #8|130-176
45630|code|ADD             R2, SP, #0x10+var_8|2-170
45632|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
45634|code|STR.W           R1, [R2,#-8]!|66-248-8-29
45638|code|LDR             R1, =(sub_B100+1 - 0xB24E)|9-73
45640|code|LDR             R3, [R4]|35-104
45642|code|ADD             R1, PC; sub_B100|121-68
45644|code|STR             R3, [SP,#0x10+var_C]|1-147
45646|code|BL              asyncMakeHandle|255-247-89-255
45650|code|LDR             R2, [SP,#0x10+var_C]|1-154
45652|code|LDR             R3, [R4]|35-104
45654|code|CMP             R2, R3|154-66
45656|code|BNE             loc_B25E|1-209
45658|code|ADD             SP, SP, #8|2-176
45660|code|POP             {R4,PC}|16-189
45662|code|BLX             __stack_chk_fail|251-247-234-233
45666|data|ALIGN 4|0-191
45668|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB23C|152-154-1-0
45672|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
45676|data|DCD sub_B100+1 - 0xB24E|179-254-255-255
45680|code|PUSH            {R4,LR}|16-181
45682|code|LDR             R4, =(dword_25090 - 0xB27A)|8-76
45684|code|LDR             R1, =(loc_B2CC+1 - 0xB27C)|8-73
45686|code|ADD             R4, PC; dword_25090|124-68
45688|code|ADD             R1, PC; loc_B2CC ; destr_function|121-68
45690|code|MOV             R0, R4; key|32-70
45692|code|BLX             pthread_key_create|251-247-18-234
45696|code|CBNZ            R0, loc_B288|16-185
45698|code|MOVS            R3, #1|1-35
45700|code|STRB            R3, [R4,#(byte_25094 - 0x25090)]|35-113
45702|code|POP             {R4,PC}|16-189
45704|code|LDR             R1, =(aPthreadKeyCrea_0 - 0xB292); "pthread_key_create"|4-73
45706|code|POP.W           {R4,LR}|189-232-16-64
45710|code|ADD             R1, PC; "pthread_key_create"|121-68
45712|code|B.W             logActionError|253-247-72-191
45716|data|DCD dword_25090 - 0xB27A|22-158-1-0
45720|data|DCD loc_B2CC+1 - 0xB27C|81-0-0-0
45724|data|DCD aPthreadKeyCrea_0 - 0xB292; "pthread_key_create"|18-108-0-0
45728|code|CBZ             R0, locret_B2C8|144-177
45730|code|PUSH            {R4,LR}|16-181
45732|code|MOV             R4, R0|4-70
45734|code|LDR             R0, [R0]|0-104
45736|code|BL              asyncDeallocateWaitData|0-240-106-248
45740|code|LDR             R0, [R4,#4]; ptr|96-104
45742|code|BL              asyncDeallocateAlarmData|0-240-159-249
45746|code|LDR             R0, [R4,#8]; ptr|160-104
45748|code|BL              asyncDeallocateTaskData|0-240-238-250
45752|code|LDR             R0, [R4,#0xC]; ptr|224-104
45754|code|BL              asyncDeallocateIoData|0-240-155-254
45758|code|MOV             R0, R4; ptr|32-70
45760|code|POP.W           {R4,LR}|189-232-16-64
45764|code|B.W             j_free|251-247-60-184
45768|code|BX              LR|112-71
45770|data|ALIGN 4|0-191
45772|code|B               sub_B2A0|232-231
45774|data|ALIGN 0x10|0-191
45776|code|PUSH            {R4-R6,LR}|112-181
45778|code|LDR             R5, =(dword_25090 - 0xB2DA)|28-77
45780|code|LDR             R1, =(sub_B270+1 - 0xB2DC)|28-73
45782|code|ADD             R5, PC; dword_25090|125-68
45784|code|ADD             R1, PC; sub_B270 ; init_routine|121-68
45786|code|ADD.W           R0, R5, #8; once_control|5-241-8-0
45790|code|BLX             pthread_once|251-247-42-233
45794|code|CBNZ            R0, loc_B31E|224-185
45796|code|LDRB            R0, [R5,#(byte_25094 - 0x25090)]|40-121
45798|code|CBZ             R0, locret_B31C|200-177
45800|code|LDR             R0, [R5]; key|40-104
45802|code|BLX             pthread_getspecific|251-247-132-233
45806|code|MOV             R4, R0|4-70
45808|code|CBZ             R0, loc_B2F4|0-177
45810|code|POP             {R4-R6,PC}|112-189
45812|code|MOVS            R0, #0x14; size|20-32
45814|code|BLX             malloc|251-247-72-234
45818|code|MOV             R6, R0|6-70
45820|code|CBZ             R0, loc_B33C|240-177
45822|code|ADD.W           R3, R0, #0xC|0-241-12-3
45826|code|MOV             R1, R6; pointer|49-70
45828|code|LDR             R0, [R5]; key|40-104
45830|code|STR.W           R4, [R3],#4|67-248-4-75
45834|code|STR             R4, [R6]|52-96
45836|code|STR             R4, [R6,#4]|116-96
45838|code|STR             R4, [R6,#8]|180-96
45840|code|STR             R4, [R6,#0xC]|244-96
45842|code|STR             R4, [R6,#0x10]|52-97
45844|code|BLX             pthread_setspecific|251-247-90-234
45848|code|CBNZ            R0, loc_B32A|56-185
45850|code|MOV             R0, R6|48-70
45852|code|POP             {R4-R6,PC}|112-189
45854|code|LDR             R1, =(aPthreadOnce_0 - 0xB324); "pthread_once"|11-73
45856|code|ADD             R1, PC; "pthread_once"|121-68
45858|code|BL              logActionError|253-247-255-254
45862|code|MOVS            R0, #0|0-32
45864|code|POP             {R4-R6,PC}|112-189
45866|code|LDR             R1, =(aPthreadSetspec_0 - 0xB330); "pthread_setspecific"|9-73
45868|code|ADD             R1, PC; "pthread_setspecific"|121-68
45870|code|BL              logActionError|253-247-249-254
45874|code|MOV             R0, R6|48-70
45876|code|BL              sub_B2A0|255-247-180-255
45880|code|MOV             R0, R4|32-70
45882|code|POP             {R4-R6,PC}|112-189
45884|code|BL              logMallocError|253-247-14-255
45888|code|MOV             R0, R6|48-70
45890|code|POP             {R4-R6,PC}|112-189
45892|data|DCD dword_25090 - 0xB2DA|182-157-1-0
45896|data|DCD sub_B270+1 - 0xB2DC|149-255-255-255
45900|data|DCD aPthreadOnce_0 - 0xB324; "pthread_once"|168-107-0-0
45904|data|DCD aPthreadSetspec_0 - 0xB330; "pthread_setspecific"|136-107-0-0
45908|code|LDR             R3, [R0]|3-104
45910|code|LDR             R1, [R0,#4]|65-104
45912|code|LDR             R0, [R3,#0xC]|216-104
45914|code|B.W             asyncExecuteIoCallback|0-240-89-190
45918|data|ALIGN 0x10|0-191
45920|code|LDR             R3, [R0]|3-104
45922|code|LDR             R2, [R3]|26-104
45924|code|LDR             R2, [R2,#4]|82-104
45926|code|CMP             R2, #1|1-42
45928|code|BEQ             loc_B36E|1-208
45930|code|MOVS            R0, #0|0-32
45932|code|BX              LR|112-71
45934|code|LDR             R0, [R3,#8]|152-104
45936|code|B.W             asyncExecuteTaskCallback|0-240-202-186
45940|code|MOV             R1, R0|1-70
45942|code|LDR.W           R3, [R1],#4|81-248-4-59
45946|code|LDR             R0, [R3,#4]|88-104
45948|code|B.W             asyncExecuteAlarmCallback|0-240-222-185
45952|code|CBZ             R0, locret_B386|8-177
45954|code|B.W             j_free|250-247-221-191
45958|code|BX              LR|112-71
45960|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB392)|64-75
45962|code|PUSH.W          {R4-R11,LR}|45-233-240-79
45966|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
45968|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|63-76
45970|code|SUB             SP, SP, #0x44|145-176
45972|code|ADD             R7, SP, #0x30|12-175
45974|code|MOV             R8, R0|128-70
45976|code|STR             R2, [SP,#0x44+var_38]|3-146
45978|code|MOV             R6, R1|14-70
45980|code|LDR             R2, [R3,R4]; __stack_chk_guard|26-89
45982|code|MOV             R0, R7|56-70
45984|code|LDR             R3, =(aWaitingLd - 0xB3B2); "waiting: %ld"|60-75
45986|code|MOV             R1, R8|65-70
45988|code|LDR.W           R11, =(aBeginLevelUTim - 0xB3B6); "begin: level %u: timeout %ld"|223-248-240-176
45992|code|ADD.W           R9, SP, #0x44+var_20|13-241-36-9
45996|code|STR             R2, [SP,#0x44+var_30]|5-146
45998|code|ADD             R3, PC; "waiting: %ld"|123-68
46000|code|STR             R3, [SP,#0x44+var_28]|7-147
46002|code|ADD             R11, PC; "begin: level %u: timeout %ld"|251-68
46004|code|LDR             R3, [R2]|19-104
46006|code|LDR             R2, =(off_249D0 - 0xB3BC)|57-74
46008|code|ADD             R2, PC; off_249D0|122-68
46010|code|STR             R2, [SP,#0x44+var_40]|1-146
46012|code|LDR             R2, =(sub_B374+1 - 0xB3C4)|56-74
46014|code|STR             R3, [SP,#0x44+var_8]|15-147
46016|code|ADD             R2, PC; sub_B374|122-68
46018|code|STR             R2, [SP,#0x44+var_3C]|2-146
46020|code|BL              startTimePeriod|255-247-74-254
46024|code|LDR             R3, =(aEndLevelUS - 0xB3CE); "end: level %u: %s"|54-75
46026|code|ADD             R3, PC; "end: level %u: %s"|123-68
46028|code|STR             R3, [SP,#0x44+var_34]|4-147
46030|code|CBZ             R6, loc_B3D8|30-177
46032|code|LDR             R0, [SP,#0x44+var_38]|3-152
46034|code|BLX             R6|176-71
46036|code|CMP             R0, #0|0-40
46038|code|BNE             loc_B46C|73-209
46040|code|MOV             R0, R7|56-70
46042|code|MOV             R1, R9|73-70
46044|code|BL              afterTimePeriod|255-247-66-254
46048|code|CMP             R0, #0|0-40
46050|code|BNE             loc_B45A|58-209
46052|code|LDR             R4, [SP,#0x44+var_20]|9-156
46054|code|RSB.W           R4, R4, R8|196-235-8-4
46058|code|BL              asyncGetThreadSpecificData|255-247-113-255
46062|code|CMP             R0, #0|0-40
46064|code|BEQ             loc_B474|64-208
46066|code|LDR             R5, [R0]|5-104
46068|code|CBZ             R5, loc_B440|37-179
46070|code|LDR             R3, [R5,#4]|107-104
46072|code|LDR.W           LR, [R5]|213-248-0-224
46076|code|ADDS            R3, #1|1-51
46078|code|STR             R4, [SP,#0x44+var_18]|11-148
46080|code|MOV             R2, R3|26-70
46082|code|STR             R3, [R5,#4]|107-96
46084|code|MOVS            R0, #0x89|137-32
46086|code|MOV             R3, R4|35-70
46088|code|MOV             R1, R11|89-70
46090|code|STR.W           LR, [SP,#0x44+var_1C]|205-248-40-224
46094|code|ADD             R4, SP, #0x44+var_1C|10-172
46096|code|BL              logMessage|253-247-24-254
46100|code|LDR.W           R10, [SP,#0x44+var_40]|221-248-4-160
46104|code|LDR             R3, [SP,#0x44+var_3C]|2-155
46106|code|B               loc_B422|2-224
46108|code|LDR.W           R3, [R10,#8]!|90-248-8-63
46112|code|CBZ             R3, loc_B42A|27-177
46114|code|MOV             R0, R4|32-70
46116|code|BLX             R3|152-71
46118|code|CMP             R0, #0|0-40
46120|code|BEQ             loc_B41C|248-208
46122|code|LDR.W           R3, [R10,#4]|218-248-4-48
46126|code|MOVS            R0, #0x89|137-32
46128|code|LDR             R1, [SP,#0x44+var_34]|4-153
46130|code|LDR             R2, [R5,#4]|106-104
46132|code|BL              logMessage|253-247-6-254
46136|code|LDR             R3, [R5,#4]|107-104
46138|code|SUBS            R3, #1|1-59
46140|code|STR             R3, [R5,#4]|107-96
46142|code|B               loc_B3CE|198-231
46144|code|STR             R0, [SP,#0x44+var_2C]|6-144
46146|code|MOVS            R0, #8; size|8-32
46148|code|BLX             malloc|251-247-160-233
46152|code|LDR             R2, [SP,#0x44+var_2C]|6-154
46154|code|CBZ             R0, loc_B470|136-177
46156|code|STR             R5, [R0,#4]|69-96
46158|code|MOV             LR, R2|150-70
46160|code|STR             R2, [R0]|2-96
46162|code|MOVS            R3, #1|1-35
46164|code|STR             R0, [R2]|16-96
46166|code|MOV             R5, R0|5-70
46168|code|B               loc_B3FE|209-231
46170|code|MOVS            R0, #0|0-32
46172|code|LDR             R3, [SP,#0x44+var_30]|5-155
46174|code|LDR             R2, [SP,#0x44+var_8]|15-154
46176|code|LDR             R3, [R3]|27-104
46178|code|CMP             R2, R3|154-66
46180|code|BNE             loc_B486|15-209
46182|code|ADD             SP, SP, #0x44 ; 'D'|17-176
46184|code|POP.W           {R4-R11,PC}|189-232-240-143
46188|code|MOVS            R0, #1|1-32
46190|code|B               loc_B45C|245-231
46192|code|BL              logMallocError|253-247-116-254
46196|code|MOVS            R0, #0x89|137-32
46198|code|LDR             R1, [SP,#0x44+var_28]|7-153
46200|code|MOV             R2, R4|34-70
46202|code|BL              logMessage|253-247-227-253
46206|code|MOV             R0, R4|32-70
46208|code|BL              approximateDelay|255-247-254-253
46212|code|B               loc_B3CE|163-231
46214|code|BLX             __stack_chk_fail|251-247-214-232
46218|data|ALIGN 4|0-191
46220|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB392|66-153-1-0
46224|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
46228|data|DCD aWaitingLd - 0xB3B2; "waiting: %ld"|62-107-0-0
46232|data|DCD aBeginLevelUTim - 0xB3B6; "begin: level %u: timeout %ld"|74-107-0-0
46236|data|DCD off_249D0 - 0xB3BC|20-150-1-0
46240|data|DCD sub_B374+1 - 0xB3C4|177-255-255-255
46244|data|DCD aEndLevelUS - 0xB3CE; "end: level %u: %s"|14-107-0-0
46248|code|MOVS            R1, #0|0-33
46250|code|MOV             R2, R1|10-70
46252|code|B.W             asyncAwaitCondition|255-247-108-191
46256|code|LDRB            R0, [R0,#0x14]|0-125
46258|code|AND.W           R0, R0, #1|0-240-1-0
46262|code|EOR.W           R0, R0, #1|128-240-1-0
46266|code|BX              LR|112-71
46268|code|B.W             j_free|250-247-64-191
46272|code|PUSH            {R3,LR}|8-181
46274|code|BL              compareTimeValues|255-247-211-252
46278|code|LSRS            R0, R0, #0x1F|192-15
46280|code|POP             {R3,PC}|8-189
46282|data|ALIGN 4|0-191
46284|code|PUSH            {R4,LR}|16-181
46286|code|MOV             R4, R0|4-70
46288|code|BL              getElementItem|1-240-66-253
46292|code|LDRB            R3, [R0,#0x14]|3-125
46294|code|LSLS            R2, R3, #0x1F|218-7
46296|code|BPL             loc_B4E2|3-213
46298|code|ORR.W           R3, R3, #2|67-240-2-3
46302|code|STRB            R3, [R0,#0x14]|3-117
46304|code|POP             {R4,PC}|16-189
46306|code|MOV             R0, R4|32-70
46308|code|POP.W           {R4,LR}|189-232-16-64
46312|code|B.W             deleteElement|1-240-248-188
46316|code|PUSH            {R4-R6,LR}|112-181
46318|code|MOV             R6, R0|6-70
46320|code|BL              asyncGetThreadSpecificData|255-247-238-254
46324|code|MOV             R5, R0|5-70
46326|code|CBZ             R0, loc_B54C|72-179
46328|code|LDR             R4, [R0,#4]|68-104
46330|code|CBZ             R4, loc_B514|92-177
46332|code|LDR             R2, [R4]|34-104
46334|code|CLZ.W           R3, R2|178-250-130-243
46338|code|LSRS            R3, R3, #5|91-9
46340|code|CMP             R6, #0|0-46
46342|code|ITE EQ|12-191
46344|code|MOVEQ           R3, #0|0-35
46346|code|ANDNE.W         R3, R3, #1|3-240-1-3
46350|code|CBNZ            R3, loc_B528|91-185
46352|code|MOV             R0, R2|16-70
46354|code|POP             {R4-R6,PC}|112-189
46356|code|MOVS            R0, #4; size|4-32
46358|code|BLX             malloc|251-247-56-233
46362|code|CBZ             R0, loc_B548|168-177
46364|code|STR             R4, [R0]|4-96
46366|code|MOVS            R3, #1|1-35
46368|code|STR             R0, [R5,#4]|104-96
46370|code|MOV             R4, R0|4-70
46372|code|MOVS            R2, #0|0-34
46374|code|B               loc_B504|237-231
46376|code|LDR             R0, =(loc_B4BC+1 - 0xB530)|9-72
46378|code|LDR             R1, =(sub_B4C0+1 - 0xB532)|10-73
46380|code|ADD             R0, PC; loc_B4BC|120-68
46382|code|ADD             R1, PC; sub_B4C0|121-68
46384|code|BL              newQueue|1-240-20-253
46388|code|MOV             R2, R0|2-70
46390|code|STR             R0, [R4]|32-96
46392|code|CMP             R0, #0|0-40
46394|code|BEQ             loc_B510|233-208
46396|code|LDR             R1, =(off_25014 - 0xB542)|6-73
46398|code|ADD             R1, PC; off_25014|121-68
46400|code|BL              setQueueData|1-240-118-253
46404|code|LDR             R2, [R4]|34-104
46406|code|B               loc_B510|227-231
46408|code|BL              logMallocError|253-247-8-254
46412|code|MOVS            R2, #0|0-34
46414|code|B               loc_B510|223-231
46416|data|DCD loc_B4BC+1 - 0xB530|141-255-255-255
46420|data|DCD sub_B4C0+1 - 0xB532|143-255-255-255
46424|data|DCD off_25014 - 0xB542|210-154-1-0
46428|code|PUSH.W          {R4-R8,LR}|45-233-240-65
46432|code|MOV             R8, R0|128-70
46434|code|MOVS            R0, #1|1-32
46436|code|BL              sub_B4EC|255-247-194-255
46440|code|MOV             R5, R0|5-70
46442|code|CBZ             R0, locret_B5D2|144-179
46444|code|MOVS            R0, #0x18; size|24-32
46446|code|BLX             malloc|251-247-12-233
46450|code|MOV             R4, R0|4-70
46452|code|CBZ             R0, loc_B5D6|120-179
46454|code|MOV             R3, R0|3-70
46456|code|LDR.W           R1, [R8]|216-248-0-16
46460|code|MOVS            R2, #0|0-34
46462|code|STR.W           R2, [R3],#4|67-248-4-43
46466|code|ADDS            R3, #4|4-51
46468|code|STR             R2, [R0,#4]|66-96
46470|code|LDR.W           R7, [R8,#4]|216-248-4-112
46474|code|STR.W           R2, [R3],#4|67-248-4-43
46478|code|LDR.W           R6, [R8,#8]|216-248-8-96
46482|code|STR.W           R2, [R3],#4|67-248-4-43
46486|code|STR.W           R2, [R3],#4|67-248-4-43
46490|code|STR             R2, [R3]|26-96
46492|code|LDRB            R3, [R0,#0x14]|3-125
46494|code|LDM             R1, {R0,R1}|3-201
46496|code|AND.W           R3, R3, #0xFC|3-240-252-3
46500|code|STR             R7, [R4,#0xC]|231-96
46502|code|BFI.W           R3, R2, #2, #1|98-243-130-3
46506|code|STR             R6, [R4,#0x10]|38-97
46508|code|STM.W           R4, {R0,R1}|132-232-3-0
46512|code|MOV             R0, R5|40-70
46514|code|STRB            R3, [R4,#0x14]|35-117
46516|code|MOV             R1, R4|33-70
46518|code|BL              enqueueItem|1-240-197-253
46522|code|MOV             R5, R0|5-70
46524|code|CBZ             R0, loc_B5E0|128-177
46526|code|LDR             R2, =(aAlarmAdded - 0xB5CA); "alarm added"|11-74
46528|code|MOVS            R0, #0x89|137-32
46530|code|LDR.W           R1, [R8,#4]|216-248-4-16
46534|code|ADD             R2, PC; "alarm added"|122-68
46536|code|BL              logSymbol|253-247-132-253
46540|code|MOV             R0, R5|40-70
46542|code|POP.W           {R4-R8,PC}|189-232-240-129
46546|code|POP.W           {R4-R8,PC}|189-232-240-129
46550|code|BL              logMallocError|253-247-193-253
46554|code|MOV             R0, R4|32-70
46556|code|POP.W           {R4-R8,PC}|189-232-240-129
46560|code|MOV             R0, R4; ptr|32-70
46562|code|BLX             free|250-247-176-238
46566|code|MOV             R0, R5|40-70
46568|code|POP.W           {R4-R8,PC}|189-232-240-129
46572|data|DCD aAlarmAdded - 0xB5CA; "alarm added"|158-105-0-0
46576|code|CBZ             R0, locret_B608|80-177
46578|code|PUSH            {R4,LR}|16-181
46580|code|MOV             R4, R0|4-70
46582|code|LDR             R0, [R0]|0-104
46584|code|CBZ             R0, loc_B5FE|8-177
46586|code|BL              deallocateQueue|1-240-225-252
46590|code|MOV             R0, R4; ptr|32-70
46592|code|POP.W           {R4,LR}|189-232-16-64
46596|code|B.W             j_free|250-247-156-190
46600|code|BX              LR|112-71
46602|data|ALIGN 4|0-191
46604|code|PUSH            {R4,R5,LR}|48-181
46606|code|SUB             SP, SP, #0x14|133-176
46608|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xB618)|10-76
46610|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|11-77
46612|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
46614|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
46616|code|STMEA.W         SP, {R1,R2}|141-232-6-0
46620|code|MOV             R2, SP|106-70
46622|code|LDR             R1, =(sub_B55C+1 - 0xB626)|9-73
46624|code|LDR             R5, [R4]|37-104
46626|code|ADD             R1, PC; sub_B55C|121-68
46628|code|STR             R3, [SP,#0x20+var_18]|2-147
46630|code|STR             R5, [SP,#0x20+var_14]|3-149
46632|code|BL              asyncMakeHandle|255-247-108-253
46636|code|LDR             R2, [SP,#0x20+var_14]|3-154
46638|code|LDR             R3, [R4]|35-104
46640|code|CMP             R2, R3|154-66
46642|code|BNE             loc_B638|1-209
46644|code|ADD             SP, SP, #0x14|5-176
46646|code|POP             {R4,R5,PC}|48-189
46648|code|BLX             __stack_chk_fail|250-247-252-239
46652|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB618|188-150-1-0
46656|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
46660|data|DCD sub_B55C+1 - 0xB626|55-255-255-255
46664|code|PUSH.W          {R4-R10,LR}|45-233-240-71
46668|code|SUB             SP, SP, #0x10|132-176
46670|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xB65A)|16-77
46672|code|ADD             R4, SP, #0x30+var_2C|1-172
46674|code|LDR             R6, =(__stack_chk_guard_ptr - 0x24CD4)|16-78
46676|code|MOV             R7, R3|31-70
46678|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
46680|code|MOV             R9, R0|129-70
46682|code|MOV             R10, R1|138-70
46684|code|MOV             R0, R4|32-70
46686|code|LDR             R6, [R5,R6]; __stack_chk_guard|174-89
46688|code|MOV             R8, R2|144-70
46690|code|LDR             R3, [R6]|51-104
46692|code|STR             R3, [SP,#0x30+var_24]|3-147
46694|code|BL              getMonotonicTime|255-247-151-252
46698|code|MOV             R0, R4|32-70
46700|code|MOV             R1, R10|81-70
46702|code|BL              adjustTimeValue|255-247-191-251
46706|code|MOV             R2, R8|66-70
46708|code|MOV             R3, R7|59-70
46710|code|MOV             R0, R9|72-70
46712|code|MOV             R1, R4|33-70
46714|code|BL              asyncSetAlarmTo|255-247-199-255
46718|code|LDR             R2, [SP,#0x30+var_24]|3-154
46720|code|LDR             R3, [R6]|51-104
46722|code|CMP             R2, R3|154-66
46724|code|BNE             loc_B68C|2-209
46726|code|ADD             SP, SP, #0x10|4-176
46728|code|POP.W           {R4-R10,PC}|189-232-240-135
46732|code|BLX             __stack_chk_fail|250-247-210-239
46736|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB65A|122-150-1-0
46740|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
46744|code|PUSH            {R3-R5,LR}|56-181
46746|code|MOV             R4, R0|4-70
46748|code|MOVS            R0, #0|0-32
46750|code|MOV             R5, R1|13-70
46752|code|BL              sub_B4EC|255-247-36-255
46756|code|MOV             R1, R0|1-70
46758|code|MOV             R0, R4|32-70
46760|code|BL              asyncGetHandleElement|255-247-138-253
46764|code|MOV             R4, R0|4-70
46766|code|CBZ             R0, locret_B6C8|88-177
46768|code|BL              getElementItem|1-240-82-252
46772|code|MOV             R3, R0|3-70
46774|code|LDM.W           R5, {R0,R1}|149-232-3-0
46778|code|STM.W           R3, {R0,R1}|131-232-3-0
46782|code|MOV             R0, R4|32-70
46784|code|BL              requeueElement|1-240-110-253
46788|code|MOVS            R0, #1|1-32
46790|code|POP             {R3-R5,PC}|56-189
46792|code|POP             {R3-R5,PC}|56-189
46794|data|ALIGN 4|0-191
46796|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB6D4)|14-75
46798|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|15-74
46800|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
46802|code|PUSH            {R4-R7,LR}|240-181
46804|code|SUB             SP, SP, #0x14|133-176
46806|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
46808|code|ADD             R4, SP, #0x28+var_24|1-172
46810|code|MOV             R6, R0|6-70
46812|code|MOV             R7, R1|15-70
46814|code|MOV             R0, R4|32-70
46816|code|LDR             R3, [R5]|43-104
46818|code|STR             R3, [SP,#0x28+var_1C]|3-147
46820|code|BL              getMonotonicTime|255-247-88-252
46824|code|MOV             R0, R4|32-70
46826|code|MOV             R1, R7|57-70
46828|code|BL              adjustTimeValue|255-247-128-251
46832|code|MOV             R0, R6|48-70
46834|code|MOV             R1, R4|33-70
46836|code|BL              asyncResetAlarmTo|255-247-208-255
46840|code|LDR             R2, [SP,#0x28+var_1C]|3-154
46842|code|LDR             R3, [R5]|43-104
46844|code|CMP             R2, R3|154-66
46846|code|BNE             loc_B704|1-209
46848|code|ADD             SP, SP, #0x14|5-176
46850|code|POP             {R4-R7,PC}|240-189
46852|code|BLX             __stack_chk_fail|250-247-150-239
46856|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB6D4|0-150-1-0
46860|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
46864|code|PUSH            {R3-R5,LR}|56-181
46866|code|MOV             R4, R0|4-70
46868|code|MOVS            R0, #0|0-32
46870|code|MOV             R5, R1|13-70
46872|code|BL              sub_B4EC|255-247-232-254
46876|code|MOV             R1, R0|1-70
46878|code|MOV             R0, R4|32-70
46880|code|BL              asyncGetHandleElement|255-247-78-253
46884|code|CBZ             R0, locret_B73A|72-177
46886|code|BL              getElementItem|1-240-23-252
46890|code|LDRB            R2, [R0,#0x14]|2-125
46892|code|MOV             R3, R0|3-70
46894|code|STR             R5, [R3,#8]|157-96
46896|code|MOVS            R0, #1|1-32
46898|code|ORR.W           R2, R2, #4|66-240-4-2
46902|code|STRB            R2, [R3,#0x14]|26-117
46904|code|POP             {R3-R5,PC}|56-189
46906|code|POP             {R3-R5,PC}|56-189
46908|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB744)|55-75
46910|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|56-74
46912|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
46914|code|PUSH.W          {R4-R8,LR}|45-233-240-65
46918|code|SUB             SP, SP, #0x18|134-176
46920|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
46922|code|LDR             R3, [R4]|35-104
46924|code|STR             R3, [SP,#0x30+var_1C]|5-147
46926|code|CBZ             R0, loc_B784|200-177
46928|code|LDR             R0, [R0]|0-104
46930|code|CBZ             R0, loc_B784|184-177
46932|code|MOV             R5, R1|13-70
46934|code|LDR             R1, =(sub_B4B0+1 - 0xB75E)|51-73
46936|code|MOVS            R2, #0|0-34
46938|code|ADD             R1, PC; sub_B4B0|121-68
46940|code|BL              processQueue|1-240-108-253
46944|code|MOV             R8, R0|128-70
46946|code|CBZ             R0, loc_B784|120-177
46948|code|BL              getElementItem|1-240-248-251
46952|code|ADD             R7, SP, #0x30+var_2C|1-175
46954|code|MOV             R6, R0|6-70
46956|code|MOV             R0, R7|56-70
46958|code|BL              getMonotonicTime|255-247-19-252
46962|code|MOV             R0, R7|56-70
46964|code|MOV             R1, R6|49-70
46966|code|BL              millisecondsBetween|255-247-139-251
46970|code|SUBS            R3, R0, #0|3-30
46972|code|BLE             loc_B7A4|18-221
46974|code|LDR             R2, [R5]|42-104
46976|code|CMP             R3, R2|147-66
46978|code|BLT             loc_B794|7-219
46980|code|MOVS            R0, #0|0-32
46982|code|LDR             R2, [SP,#0x30+var_1C]|5-154
46984|code|LDR             R3, [R4]|35-104
46986|code|CMP             R2, R3|154-66
46988|code|BNE             loc_B818|68-209
46990|code|ADD             SP, SP, #0x18|6-176
46992|code|POP.W           {R4-R8,PC}|189-232-240-129
46996|code|LDR             R2, =(aNextAlarmLd - 0xB7A0); "next alarm: %ld"|36-74
46998|code|MOVS            R0, #0x89|137-32
47000|code|STR             R3, [R5]|43-96
47002|code|LDR             R1, [R6,#0xC]|241-104
47004|code|ADD             R2, PC; "next alarm: %ld"|122-68
47006|code|BL              logSymbol|253-247-153-252
47010|code|B               loc_B784|239-231
47012|code|LDR             R5, [R6,#0xC]|245-104
47014|code|MOVS            R0, #0x89|137-32
47016|code|LDR             R3, [R6,#0x10]|51-105
47018|code|LDR             R2, =(aAlarmStarting - 0xB7B4); "alarm starting"|32-74
47020|code|MOV             R1, R5|41-70
47022|code|STR             R7, [SP,#0x30+var_24]|3-151
47024|code|ADD             R2, PC; "alarm starting"|122-68
47026|code|STR             R3, [SP,#0x30+var_20]|4-147
47028|code|BL              logSymbol|253-247-142-252
47032|code|LDRB            R3, [R6,#0x14]|51-125
47034|code|ORR.W           R3, R3, #1|67-240-1-3
47038|code|STRB            R3, [R6,#0x14]|51-117
47040|code|CBZ             R5, loc_B7C6|13-177
47042|code|ADD             R0, SP, #0x30+var_24|3-168
47044|code|BLX             R5|168-71
47046|code|LDRB            R3, [R6,#0x14]|51-125
47048|code|BFC.W           R3, #0, #1|111-243-0-3
47052|code|STRB            R3, [R6,#0x14]|51-117
47054|code|UXTB            R3, R3|219-178
47056|code|LSLS            R2, R3, #0x1D|90-7
47058|code|ITT PL|92-191
47060|code|ORRPL.W         R3, R3, #2|67-240-2-3
47064|code|STRBPL          R3, [R6,#0x14]|51-117
47066|code|BMI             loc_B7EE|8-212
47068|code|LDRB            R3, [R6,#0x14]|51-125
47070|code|LSLS            R3, R3, #0x1E|155-7
47072|code|BMI             loc_B7E6|1-212
47074|code|MOVS            R0, #1|1-32
47076|code|B               loc_B786|207-231
47078|code|MOV             R0, R8|64-70
47080|code|BL              deleteElement|1-240-120-251
47084|code|B               loc_B7E2|249-231
47086|code|LDR             R1, [R6,#8]|177-104
47088|code|MOV             R0, R6|48-70
47090|code|BL              adjustTimeValue|255-247-253-250
47094|code|MOV             R0, R7|56-70
47096|code|BL              getMonotonicTime|255-247-206-251
47100|code|MOV             R1, R7|57-70
47102|code|MOV             R0, R6|48-70
47104|code|BL              compareTimeValues|255-247-52-251
47108|code|CMP             R0, #0|0-40
47110|code|ITT LT|188-191
47112|code|LDMLT.W         R7, {R0,R1}|151-232-3-0
47116|code|STMLT.W         R6, {R0,R1}|134-232-3-0
47120|code|MOV             R0, R8|64-70
47122|code|BL              requeueElement|1-240-197-252
47126|code|B               loc_B7DC|225-231
47128|code|BLX             __stack_chk_fail|250-247-12-239
47132|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB744|144-149-1-0
47136|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
47140|data|DCD sub_B4B0+1 - 0xB75E|83-253-255-255
47144|data|DCD aNextAlarmLd - 0xB7A0; "next alarm: %ld"|228-103-0-0
47148|data|DCD aAlarmStarting - 0xB7B4; "alarm starting"|192-103-0-0
47152|code|B.W             j_free|250-247-134-189
47156|code|PUSH            {R4-R6,LR}|112-181
47158|code|MOV             R6, R0|6-70
47160|code|BL              asyncGetThreadSpecificData|255-247-74-253
47164|code|MOV             R5, R0|5-70
47166|code|CBZ             R0, loc_B87E|240-177
47168|code|LDR             R4, [R0,#8]|132-104
47170|code|CBZ             R4, loc_B860|108-177
47172|code|LDR             R0, [R4]|32-104
47174|code|CBZ             R0, loc_B86E|144-177
47176|code|MOV             R1, R6|49-70
47178|code|BL              enqueueItem|1-240-123-252
47182|code|CBZ             R0, loc_B87E|176-177
47184|code|LDR             R2, =(aTaskAdded - 0xB85A); "task added"|13-74
47186|code|MOVS            R0, #0x89|137-32
47188|code|LDR             R1, [R6]|49-104
47190|code|ADD             R2, PC; "task added"|122-68
47192|code|BL              logSymbol|253-247-60-252
47196|code|MOVS            R0, #1|1-32
47198|code|POP             {R4-R6,PC}|112-189
47200|code|MOVS            R0, #4; size|4-32
47202|code|BLX             malloc|250-247-146-239
47206|code|CBZ             R0, loc_B882|96-177
47208|code|STR             R4, [R0]|4-96
47210|code|MOV             R4, R0|4-70
47212|code|STR             R0, [R5,#8]|168-96
47214|code|LDR             R0, =(loc_B830+1 - 0xB876)|7-72
47216|code|MOVS            R1, #0|0-33
47218|code|ADD             R0, PC; loc_B830|120-68
47220|code|BL              newQueue|1-240-114-251
47224|code|STR             R0, [R4]|32-96
47226|code|CMP             R0, #0|0-40
47228|code|BNE             loc_B848|228-209
47230|code|MOVS            R0, #0|0-32
47232|code|POP             {R4-R6,PC}|112-189
47234|code|BL              logMallocError|253-247-107-252
47238|code|B               loc_B87E|250-231
47240|data|DCD aTaskAdded - 0xB85A; "task added"|58-103-0-0
47244|data|DCD loc_B830+1 - 0xB876|187-255-255-255
47248|code|LDR             R0, [R0,#4]|64-104
47250|code|B               sub_B834|207-231
47252|code|CBZ             R0, locret_B8AC|80-177
47254|code|PUSH            {R4,LR}|16-181
47256|code|MOV             R4, R0|4-70
47258|code|LDR             R0, [R0]|0-104
47260|code|CBZ             R0, loc_B8A2|8-177
47262|code|BL              deallocateQueue|1-240-143-251
47266|code|MOV             R0, R4; ptr|32-70
47268|code|POP.W           {R4,LR}|189-232-16-64
47272|code|B.W             j_free|250-247-74-189
47276|code|BX              LR|112-71
47278|data|ALIGN 0x10|0-191
47280|code|PUSH            {R3-R7,LR}|248-181
47282|code|MOV             R5, R0|5-70
47284|code|MOVS            R0, #8; size|8-32
47286|code|MOV             R7, R1|15-70
47288|code|MOV             R6, R2|22-70
47290|code|BLX             malloc|250-247-102-239
47294|code|MOV             R4, R0|4-70
47296|code|CBZ             R0, loc_B8E8|144-177
47298|code|STR             R7, [R0]|7-96
47300|code|STR             R6, [R0,#4]|70-96
47302|code|CBZ             R5, loc_B8D6|53-177
47304|code|MOV             R0, R5|40-70
47306|code|MOV             R1, R4|33-70
47308|code|BL              asyncSignalEvent|0-240-66-253
47312|code|CBZ             R0, loc_B8DE|40-177
47314|code|MOVS            R0, #1|1-32
47316|code|POP             {R3-R7,PC}|248-189
47318|code|BL              sub_B834|255-247-173-255
47322|code|CMP             R0, #0|0-40
47324|code|BNE             loc_B8D2|249-209
47326|code|MOV             R0, R4; ptr|32-70
47328|code|BLX             free|250-247-48-237
47332|code|MOVS            R0, #0|0-32
47334|code|POP             {R3-R7,PC}|248-189
47336|code|BL              logMallocError|253-247-56-252
47340|code|MOV             R0, R4|32-70
47342|code|POP             {R3-R7,PC}|248-189
47344|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB8FA)|3-75
47346|code|MOVS            R1, #0|0-33
47348|code|LDR             R2, =(asyncHandleAddTaskEvent_ptr - 0x24CD4)|3-74
47350|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
47352|code|LDR             R0, [R3,R2]; asyncHandleAddTaskEvent|152-88
47354|code|B.W             asyncNewEvent|0-240-81-189
47358|data|ALIGN 0x10|0-191
47360|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB8FA|218-147-1-0
47364|data|DCD asyncHandleAddTaskEvent_ptr - 0x24CD4|140-2-0-0
47368|code|CBZ             R0, loc_B936|168-177
47370|code|LDR             R0, [R0]|0-104
47372|code|CBZ             R0, loc_B936|152-177
47374|code|PUSH            {R3-R5,LR}|56-181
47376|code|BL              dequeueItem|1-240-16-251
47380|code|MOV             R4, R0|4-70
47382|code|CBZ             R0, loc_B93A|128-177
47384|code|LDR             R5, [R0]|5-104
47386|code|MOVS            R0, #0x89|137-32
47388|code|LDR             R2, =(aTaskStarting - 0xB924); "task starting"|8-74
47390|code|MOV             R1, R5|41-70
47392|code|ADD             R2, PC; "task starting"|122-68
47394|code|BL              logSymbol|253-247-215-251
47398|code|CBZ             R5, loc_B92C|13-177
47400|code|LDR             R0, [R4,#4]|96-104
47402|code|BLX             R5|168-71
47404|code|MOV             R0, R4; ptr|32-70
47406|code|BLX             free|250-247-10-237
47410|code|MOVS            R0, #1|1-32
47412|code|POP             {R3-R5,PC}|56-189
47414|code|MOVS            R0, #0|0-32
47416|code|BX              LR|112-71
47418|code|MOVS            R0, #0|0-32
47420|code|POP             {R3-R5,PC}|56-189
47422|data|ALIGN 0x10|0-191
47424|data|DCD aTaskStarting - 0xB924; "task starting"|124-102-0-0
47428|code|MOVS            R3, #1|1-35
47430|code|STRH            R3, [R0,#0xC]|131-129
47432|code|BX              LR|112-71
47434|data|ALIGN 4|0-191
47436|code|MOVS            R3, #4|4-35
47438|code|STRH            R3, [R0,#0xC]|131-129
47440|code|BX              LR|112-71
47442|data|ALIGN 4|0-191
47444|code|MOVS            R3, #2|2-35
47446|code|STRH            R3, [R0,#0xC]|131-129
47448|code|BX              LR|112-71
47450|data|ALIGN 4|0-191
47452|code|LDR             R2, [R0]|2-104
47454|code|LDR             R3, [R1]|11-104
47456|code|CMP             R2, R3|154-66
47458|code|ITTTT EQ|1-191
47460|code|LDREQ           R3, [R0,#4]|67-104
47462|code|LDREQ           R0, [R1,#4]|72-104
47464|code|SUBEQ           R0, R3, R0|24-26
47466|code|CLZEQ.W         R0, R0|176-250-128-240
47470|code|ITE EQ|12-191
47472|code|LSREQ           R0, R0, #5|64-9
47474|code|MOVNE           R0, #0|0-32
47476|code|BX              LR|112-71
47478|data|ALIGN 4|0-191
47480|code|PUSH            {R4,LR}|16-181
47482|code|MOV             R4, R0|4-70
47484|code|LDR             R0, [R0,#4]; ptr|64-104
47486|code|CBZ             R0, loc_B984|8-177
47488|code|BLX             free|250-247-224-236
47492|code|MOV             R0, R4; ptr|32-70
47494|code|POP.W           {R4,LR}|189-232-16-64
47498|code|B.W             j_free|250-247-217-188
47502|data|ALIGN 0x10|0-191
47504|code|PUSH            {R4,LR}|16-181
47506|code|MOV             R4, R0|4-70
47508|code|LDR             R0, [R0,#8]|128-104
47510|code|CBZ             R0, loc_B99C|8-177
47512|code|BL              deallocateQueue|1-240-18-251
47516|code|LDR             R3, [R4,#4]|99-104
47518|code|LDR             R3, [R3,#8]|155-104
47520|code|CBZ             R3, loc_B9A6|11-177
47522|code|MOV             R0, R4|32-70
47524|code|BLX             R3|152-71
47526|code|MOV             R0, R4; ptr|32-70
47528|code|POP.W           {R4,LR}|189-232-16-64
47532|code|B.W             j_free|250-247-200-188
47536|code|ADDS            R2, R1, #1|74-28
47538|code|LDR             R3, [R0,#4]|67-104
47540|code|PUSH            {R4,LR}|16-181
47542|code|MOV             R4, R0|4-70
47544|code|BEQ             loc_B9DE|17-208
47546|code|CBZ             R1, loc_B9CC|57-177
47548|code|LDR             R2, [R3,#0xC]|218-104
47550|code|ADD             R1, R2|17-68
47552|code|STR             R1, [R3,#0xC]|217-96
47554|code|LDRB            R3, [R4,#0x14]|35-125
47556|code|ORR.W           R3, R3, #4|67-240-4-3
47560|code|STRB            R3, [R4,#0x14]|35-117
47562|code|POP             {R4,PC}|16-189
47564|code|LDRB            R2, [R3,#4]|26-121
47566|code|ORR.W           R2, R2, #1|66-240-1-2
47570|code|STRB            R2, [R3,#4]|26-113
47572|code|LDRB            R3, [R4,#0x14]|35-125
47574|code|ORR.W           R3, R3, #4|67-240-4-3
47578|code|STRB            R3, [R4,#0x14]|35-117
47580|code|POP             {R4,PC}|16-189
47582|code|BLX             __errno_location|250-247-90-239
47586|code|LDR             R3, [R0]|3-104
47588|code|STR             R3, [R4,#0x10]|35-97
47590|code|LDRB            R3, [R4,#0x14]|35-125
47592|code|ORR.W           R3, R3, #4|67-240-4-3
47596|code|STRB            R3, [R4,#0x14]|35-117
47598|code|POP             {R4,PC}|16-189
47600|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xB9FA)|19-75
47602|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|20-74
47604|code|PUSH            {R4-R7,LR}|240-181
47606|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
47608|code|MOV             R5, R0|5-70
47610|code|SUB             SP, SP, #0x14|133-176
47612|code|LDR             R1, [R5]|41-104
47614|code|MOVS            R0, #0x89|137-32
47616|code|LDR             R4, [R5,#4]|108-104
47618|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
47620|code|LDR             R3, [R1,#4]|75-104
47622|code|LDR             R4, [R4]|36-104
47624|code|LDR             R7, [R6]|55-104
47626|code|LDR             R2, =(aCheckingSDevic+0x14 - 0xBA14); "%s"|15-74
47628|code|MOV             R1, R4|33-70
47630|code|LDR             R3, [R3]|27-104
47632|code|ADD             R2, PC; "%s"|122-68
47634|code|STR             R7, [SP,#0x28+var_1C]|3-151
47636|code|BL              logSymbol|253-247-94-251
47640|code|MOV             R0, R4|32-70
47642|code|CBZ             R4, loc_BA2E|68-177
47644|code|LDR             R2, [R5,#8]|170-104
47646|code|ADD             R0, SP, #0x28+var_24|1-168
47648|code|LDR             R3, [R5,#0x10]|43-105
47650|code|STR             R2, [SP,#0x28+var_24]|1-146
47652|code|STR             R3, [SP,#0x28+var_20]|2-147
47654|code|BLX             R4|160-71
47656|code|ADDS            R0, #0|0-48
47658|code|IT NE|24-191
47660|code|MOVNE           R0, #1|1-32
47662|code|LDR             R2, [SP,#0x28+var_1C]|3-154
47664|code|LDR             R3, [R6]|51-104
47666|code|CMP             R2, R3|154-66
47668|code|BNE             loc_BA3A|1-209
47670|code|ADD             SP, SP, #0x14|5-176
47672|code|POP             {R4-R7,PC}|240-189
47674|code|BLX             __stack_chk_fail|250-247-252-237
47678|data|ALIGN 0x10|0-191
47680|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB9FA|218-146-1-0
47684|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
47688|data|DCD aCheckingSDevic+0x14 - 0xBA14; "%s"|112-99-0-0
47692|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xBA56)|27-75
47694|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|28-74
47696|code|PUSH            {R4-R7,LR}|240-181
47698|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
47700|code|MOV             R5, R0|5-70
47702|code|SUB             SP, SP, #0x1C|135-176
47704|code|LDR             R1, [R5]|41-104
47706|code|MOVS            R0, #0x89|137-32
47708|code|LDR             R6, [R5,#4]|110-104
47710|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
47712|code|LDR             R3, [R1,#4]|75-104
47714|code|LDR             R4, [R6]|52-104
47716|code|LDR.W           LR, [R7]|215-248-0-224
47720|code|LDR             R2, =(aCheckingSDevic+0x14 - 0xBA72); "%s"|22-74
47722|code|LDR             R3, [R3]|27-104
47724|code|MOV             R1, R4|33-70
47726|code|ADD             R2, PC; "%s"|122-68
47728|code|STR.W           LR, [SP,#0x30+var_1C]|205-248-20-224
47732|code|BL              logSymbol|253-247-46-251
47736|code|LDR             R3, [R5,#0x10]|43-105
47738|code|CBNZ            R3, loc_BA84|27-185
47740|code|LDR             R1, [R6,#0xC]|241-104
47742|code|LDR             R2, [R6,#8]|178-104
47744|code|CMP             R1, R2|145-66
47746|code|BCC             loc_BAAA|18-211
47748|code|MOV             R0, R4|32-70
47750|code|CBZ             R4, loc_BA9E|84-177
47752|code|LDR             R1, [R5,#8]|169-104
47754|code|ADD             R0, SP, #0x30+var_2C|1-168
47756|code|LDR             R2, [R6,#8]|178-104
47758|code|ADD.W           R5, R6, #0x10|6-241-16-5
47762|code|STR             R3, [SP,#0x30+var_20]|4-147
47764|code|STR             R5, [SP,#0x30+var_28]|2-149
47766|code|STR             R1, [SP,#0x30+var_2C]|1-145
47768|code|STR             R2, [SP,#0x30+var_24]|3-146
47770|code|BLX             R4|160-71
47772|code|MOVS            R0, #0|0-32
47774|code|LDR             R2, [SP,#0x30+var_1C]|5-154
47776|code|LDR             R3, [R7]|59-104
47778|code|CMP             R2, R3|154-66
47780|code|BNE             loc_BAB6|7-209
47782|code|ADD             SP, SP, #0x1C|7-176
47784|code|POP             {R4-R7,PC}|240-189
47786|code|LDRB            R2, [R5,#0x14]|42-125
47788|code|MOVS            R0, #1|1-32
47790|code|BFI.W           R2, R3, #2, #1|99-243-130-2
47794|code|STRB            R2, [R5,#0x14]|42-117
47796|code|B               loc_BA9E|243-231
47798|code|BLX             __stack_chk_fail|250-247-190-237
47802|data|ALIGN 4|0-191
47804|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBA56|126-146-1-0
47808|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
47812|data|DCD aCheckingSDevic+0x14 - 0xBA72; "%s"|18-99-0-0
47816|code|PUSH            {R3-R5,LR}|56-181
47818|code|BL              asyncGetThreadSpecificData|255-247-1-252
47822|code|MOV             R5, R0|5-70
47824|code|CBZ             R0, loc_BAEA|88-177
47826|code|LDR             R4, [R0,#0xC]|196-104
47828|code|CBZ             R4, loc_BADA|12-177
47830|code|MOV             R0, R4|32-70
47832|code|POP             {R3-R5,PC}|56-189
47834|code|MOVS            R0, #4; size|4-32
47836|code|BLX             malloc|250-247-84-238
47840|code|CBZ             R0, loc_BAEE|40-177
47842|code|STR             R4, [R0]|4-96
47844|code|MOV             R4, R0|4-70
47846|code|STR             R0, [R5,#0xC]|232-96
47848|code|B               loc_BAD6|245-231
47850|code|MOV             R4, R0|4-70
47852|code|B               loc_BAD6|243-231
47854|code|BL              logMallocError|253-247-53-251
47858|code|B               loc_BAD6|240-231
47860|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xBB00)|44-75
47862|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|45-74
47864|code|PUSH.W          {R4-R8,LR}|45-233-240-65
47868|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
47870|code|MOV             R4, R0|4-70
47872|code|SUB             SP, SP, #0x28|138-176
47874|code|LDR             R7, [R4]|39-104
47876|code|MOVS            R0, #0x89|137-32
47878|code|LDR             R5, [R4,#4]|101-104
47880|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
47882|code|LDR             R3, [R7,#4]|123-104
47884|code|LDR.W           R8, [R5]|213-248-0-128
47888|code|LDR             R7, [R6]|55-104
47890|code|LDR             R2, =(aCheckingSDevic+0x14 - 0xBB1C); "%s"|39-74
47892|code|MOV             R1, R8|65-70
47894|code|LDR             R3, [R3]|27-104
47896|code|ADD             R2, PC; "%s"|122-68
47898|code|STR             R7, [SP,#0x40+var_1C]|9-151
47900|code|BL              logSymbol|253-247-218-250
47904|code|CMP.W           R8, #0|184-241-0-15
47908|code|BEQ             loc_BB70|36-208
47910|code|LDR             R3, [R4,#0x10]|35-105
47912|code|ADD.W           R7, R5, #0x10|5-241-16-7
47916|code|LDRB.W          LR, [R5,#4]|149-248-4-224
47920|code|ADD             R0, SP, #0x40+var_34|3-168
47922|code|LDR             R2, [R4,#8]|162-104
47924|code|STR             R3, [SP,#0x40+var_3C]|1-147
47926|code|LDR             R3, [R5,#8]|171-104
47928|code|LDRB.W          R1, [SP,#0x40+var_20]|157-248-32-16
47932|code|STR             R2, [SP,#0x40+var_34]|3-146
47934|code|STR             R3, [SP,#0x40+var_2C]|5-147
47936|code|BFI.W           R1, LR, #0, #1|110-243-0-1
47940|code|LDR             R3, [R5,#0xC]|235-104
47942|code|STR             R7, [SP,#0x40+var_30]|4-151
47944|code|STRB.W          R1, [SP,#0x40+var_20]|141-248-32-16
47948|code|STR             R3, [SP,#0x40+var_28]|6-147
47950|code|LDR             R3, [SP,#0x40+var_3C]|1-155
47952|code|STR             R3, [SP,#0x40+var_24]|7-147
47954|code|BLX             R8|192-71
47956|code|LDR             R3, [R4,#0x10]|35-105
47958|code|MOV             R2, R0|2-70
47960|code|CBNZ            R3, loc_BB70|83-185
47962|code|LDRB            R3, [R5,#4]|43-121
47964|code|ANDS.W          R3, R3, #1|19-240-1-3
47968|code|BNE             loc_BB70|6-209
47970|code|LDRB            R1, [R4,#0x14]|33-125
47972|code|BFI.W           R1, R3, #2, #1|99-243-130-1
47976|code|STRB            R1, [R4,#0x14]|33-117
47978|code|CBNZ            R0, loc_BB80|72-185
47980|code|MOVS            R0, #1|1-32
47982|code|B               loc_BB72|0-224
47984|code|MOVS            R0, #0|0-32
47986|code|LDR             R2, [SP,#0x40+var_1C]|9-154
47988|code|LDR             R3, [R6]|51-104
47990|code|CMP             R2, R3|154-66
47992|code|BNE             loc_BBA4|20-209
47994|code|ADD             SP, SP, #0x28 ; '('|10-176
47996|code|POP.W           {R4-R8,PC}|189-232-240-129
48000|code|LDR             R3, [R5,#0xC]|235-104
48002|code|ADD.W           R1, R0, #0x10|0-241-16-1
48006|code|MOV             R0, R7; dest|56-70
48008|code|ADD             R1, R5; src|41-68
48010|code|SUBS            R7, R3, R2|159-26
48012|code|STR             R7, [R5,#0xC]|239-96
48014|code|MOV             R2, R7; n|58-70
48016|code|BLX             memmove|250-247-226-236
48020|code|CMP             R7, #0|0-47
48022|code|BEQ             loc_BB6C|233-208
48024|code|LDRB            R3, [R4,#0x14]|35-125
48026|code|MOVS            R0, #1|1-32
48028|code|ORR.W           R3, R3, #4|67-240-4-3
48032|code|STRB            R3, [R4,#0x14]|35-117
48034|code|B               loc_BB72|230-231
48036|code|BLX             __stack_chk_fail|250-247-70-237
48040|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBB00|212-145-1-0
48044|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
48048|data|DCD aCheckingSDevic+0x14 - 0xBB1C; "%s"|104-98-0-0
48052|code|PUSH            {R3-R5,LR}|56-181
48054|code|MOV             R4, R0|4-70
48056|code|LDM             R0, {R0,R3}|9-200
48058|code|LDR             R2, [R3,#0xC]|218-104
48060|code|LDR             R5, [R3,#8]|157-104
48062|code|ADD.W           R1, R2, #0x10|2-241-16-1
48066|code|LDR             R0, [R0]; fd|0-104
48068|code|ADD             R1, R3; buf|25-68
48070|code|SUBS            R2, R5, R2; nbytes|170-26
48072|code|BLX             read|250-247-162-236
48076|code|MOV             R1, R0|1-70
48078|code|MOV             R0, R4|32-70
48080|code|POP.W           {R3-R5,LR}|189-232-56-64
48084|code|B               sub_B9B0|236-230
48086|data|ALIGN 4|0-191
48088|code|PUSH            {R3-R5,LR}|56-181
48090|code|MOV             R4, R0|4-70
48092|code|LDM             R0, {R0,R3}|9-200
48094|code|LDR             R2, [R3,#0xC]|218-104
48096|code|LDR             R5, [R3,#8]|157-104
48098|code|ADD.W           R1, R2, #0x10|2-241-16-1
48102|code|LDR             R0, [R0]; fd|0-104
48104|code|ADD             R1, R3; buf|25-68
48106|code|SUBS            R2, R5, R2; n|170-26
48108|code|BLX             write|250-247-2-238
48112|code|MOV             R1, R0|1-70
48114|code|MOV             R0, R4|32-70
48116|code|POP.W           {R3-R5,LR}|189-232-56-64
48120|code|B               sub_B9B0|218-230
48122|data|ALIGN 4|0-191
48124|code|LDR             R3, =(sub_B9F0+1 - 0xBC06)|4-75
48126|code|LDR             R2, [R0,#0x18]|130-105
48128|code|MOV             R0, R1|8-70
48130|code|ADD             R3, PC; sub_B9F0|123-68
48132|code|CMP             R2, R3|154-66
48134|code|BEQ             loc_BC0C|1-208
48136|code|B.W             getQueueHead|1-240-22-186
48140|code|B.W             getStackHead|1-240-22-186
48144|data|DCD sub_B9F0+1 - 0xBC06|235-253-255-255
48148|code|PUSH            {R3-R7,LR}|248-181
48150|code|MOV             R4, R0|4-70
48152|code|MOV             R5, R1|13-70
48154|code|LDR             R0, [R0,#4]|64-104
48156|code|LDR             R1, [R4,#8]|161-104
48158|code|BL              sub_BBFC|255-247-237-255
48162|code|CBZ             R0, loc_BC66|0-179
48164|code|BL              getElementItem|1-240-152-249
48168|code|MOV             R3, R0|3-70
48170|code|CBZ             R0, loc_BC66|224-177
48172|code|LDRB            R2, [R0,#0x14]|2-125
48174|code|MOVS            R1, #0|0-33
48176|code|STR             R1, [R0,#0xC]|193-96
48178|code|LSLS            R1, R2, #0x1F|209-7
48180|code|BMI             loc_BC66|23-212
48182|code|AND.W           R2, R2, #4|2-240-4-2
48186|code|AND.W           R6, R2, #0xFF|2-240-255-6
48190|code|CBNZ            R2, loc_BC62|130-185
48192|code|LDR             R1, [R5,#4]|105-104
48194|code|MOV             R0, R6|48-70
48196|code|LDR             R7, [R5]|47-104
48198|code|LDRH.W          LR, [R4,#0xC]|180-248-12-224
48202|code|ADDS            R2, R1, #1|74-28
48204|code|STR             R2, [R5,#4]|106-96
48206|code|ADD.W           R2, R7, R1,LSL#3|7-235-193-2
48210|code|LDR             R4, [R4]|36-104
48212|code|STR             R2, [R3,#0xC]|218-96
48214|code|STR.W           R4, [R7,R1,LSL#3]|71-248-49-64
48218|code|STRH.W          LR, [R2,#4]|162-248-4-224
48222|code|STRH            R6, [R2,#6]|214-128
48224|code|POP             {R3-R7,PC}|248-189
48226|code|MOVS            R0, #1|1-32
48228|code|POP             {R3-R7,PC}|248-189
48230|code|MOVS            R0, #0|0-32
48232|code|POP             {R3-R7,PC}|248-189
48234|data|ALIGN 4|0-191
48236|code|PUSH            {R3,LR}|8-181
48238|code|MOV             R3, R0|3-70
48240|code|LDR             R1, [R3,#8]|153-104
48242|code|LDR             R0, [R0,#4]|64-104
48244|code|BL              sub_BBFC|255-247-194-255
48248|code|CBZ             R0, loc_BCAE|200-177
48250|code|BL              getElementItem|1-240-109-249
48254|code|MOV             R3, R0|3-70
48256|code|CBZ             R0, loc_BCAE|168-177
48258|code|LDR             R2, [R0,#0xC]|194-104
48260|code|CBZ             R2, loc_BCAE|154-177
48262|code|LDRH            R0, [R2,#6]|208-136
48264|code|MOVS            R2, #0|0-34
48266|code|STR             R2, [R3,#0x10]|26-97
48268|code|UXTH            R2, R0|130-178
48270|code|LSLS            R1, R2, #0x1C|17-7
48272|code|BPL             loc_BC9A|3-213
48274|code|MOVS            R2, #5|5-34
48276|code|MOVS            R0, #1|1-32
48278|code|STR             R2, [R3,#0x10]|26-97
48280|code|POP             {R3,PC}|8-189
48282|code|TST.W           R2, #0x10|18-240-16-15
48286|code|ITE EQ|12-191
48288|code|MOVEQ           R2, #0|0-34
48290|code|MOVNE           R2, #0x13|19-34
48292|code|ADDS            R0, #0|0-48
48294|code|STR             R2, [R3,#0x10]|26-97
48296|code|IT NE|24-191
48298|code|MOVNE           R0, #1|1-32
48300|code|POP             {R3,PC}|8-189
48302|code|MOVS            R0, #0|0-32
48304|code|POP             {R3,PC}|8-189
48306|data|ALIGN 4|0-191
48308|code|PUSH.W          {R4-R11,LR}|45-233-240-79
48312|code|MOV             R9, R3|153-70
48314|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xBCC6)|81-76
48316|code|SUB             SP, SP, #0x1C|135-176
48318|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|81-77
48320|code|MOV             R11, R0|131-70
48322|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
48324|code|MOVS            R0, #0x18; size|24-32
48326|code|MOV             R7, R1|15-70
48328|code|MOV             R8, R2|144-70
48330|code|MOV             R3, R4|35-70
48332|code|LDR             R3, [R4,R5]; __stack_chk_guard|99-89
48334|code|STR             R3, [SP,#0x40+var_3C]|1-147
48336|code|LDR             R3, [R3]|27-104
48338|code|STR             R3, [SP,#0x40+var_2C]|5-147
48340|code|BLX             malloc|250-247-88-237
48344|code|MOV             R4, R0|4-70
48346|code|CMP             R0, #0|0-40
48348|code|BEQ.W           loc_BDE4|0-240-130-128
48352|code|BL              sub_BAC8|255-247-242-254
48356|code|MOV             R5, R0|5-70
48358|code|CMP             R0, #0|0-40
48360|code|BEQ             loc_BDC0|106-208
48362|code|LDR             R6, [R0]|6-104
48364|code|CMP             R6, #0|0-46
48366|code|BEQ             loc_BDCA|108-208
48368|code|LDR             R1, =(loc_B95C+1 - 0xBCFE)|69-73
48370|code|MOV             R0, R6|48-70
48372|code|ADD             R2, SP, #0x40+var_34|3-170
48374|code|STR.W           R11, [SP,#0x40+var_34]|205-248-12-176
48378|code|ADD             R1, PC; loc_B95C|121-68
48380|code|STR             R7, [SP,#0x40+var_30]|4-151
48382|code|BL              findElement|1-240-209-249
48386|code|MOV             R5, R0|5-70
48388|code|CMP             R0, #0|0-40
48390|code|BEQ             loc_BD74|53-208
48392|code|MOV             R0, R5|40-70
48394|code|BL              getElementItem|1-240-37-249
48398|code|MOV             R10, R0|130-70
48400|code|LDR             R0, [R0,#8]|128-104
48402|code|BL              getQueueSize|1-240-137-249
48406|code|MOV             R1, R4|33-70
48408|code|CLZ.W           R11, R0|176-250-128-251
48412|code|LDR.W           R0, [R10,#8]|218-248-8-0
48416|code|BL              enqueueItem|1-240-16-250
48420|code|MOV.W           R11, R11,LSR#5|79-234-91-27
48424|code|MOV             R7, R0|7-70
48426|code|CMP             R0, #0|0-40
48428|code|BEQ             loc_BDEC|94-208
48430|code|LDRB            R3, [R4,#0x14]|35-125
48432|code|MOVS            R2, #0|0-34
48434|code|STR.W           R10, [R4]|196-248-0-160
48438|code|AND.W           R3, R3, #0xFC|3-240-252-3
48442|code|STR.W           R8, [R4,#4]|196-248-4-128
48446|code|BFI.W           R3, R2, #2, #1|98-243-130-3
48450|code|STR.W           R9, [R4,#8]|196-248-8-144
48454|code|STR             R2, [R4,#0xC]|226-96
48456|code|STRB            R3, [R4,#0x14]|35-117
48458|code|STR             R2, [R4,#0x10]|34-97
48460|code|CMP.W           R11, #0|187-241-0-15
48464|code|BEQ             loc_BD70|14-208
48466|code|LDR.W           R3, [R10,#4]|218-248-4-48
48470|code|LDR             R3, [R3,#0xC]|219-104
48472|code|CBZ             R3, loc_BD70|83-177
48474|code|MOV             R0, R4|32-70
48476|code|BLX             R3|152-71
48478|code|MOV             R0, R7|56-70
48480|code|LDR             R3, [SP,#0x40+var_3C]|1-155
48482|code|LDR             R2, [SP,#0x40+var_2C]|5-154
48484|code|LDR             R3, [R3]|27-104
48486|code|CMP             R2, R3|154-66
48488|code|BNE             loc_BDFA|71-209
48490|code|ADD             SP, SP, #0x1C|7-176
48492|code|POP.W           {R4-R11,PC}|189-232-240-143
48496|code|MOV             R0, R7|56-70
48498|code|B               loc_BD60|245-231
48500|code|MOVS            R0, #0x10; size|16-32
48502|code|BLX             malloc|250-247-8-237
48506|code|MOV             R10, R0|130-70
48508|code|CBZ             R0, loc_BDDE|120-179
48510|code|STR.W           R11, [R0]|192-248-0-176
48514|code|MOV             R1, R5|41-70
48516|code|STR             R7, [R0,#4]|71-96
48518|code|LDR             R0, =(sub_B978+1 - 0xBD8C)|33-72
48520|code|ADD             R0, PC; sub_B978|120-68
48522|code|BL              newQueue|1-240-231-248
48526|code|STR.W           R0, [R10,#8]|202-248-8-0
48530|code|CBZ             R0, loc_BDBA|144-177
48532|code|LDR             R1, =(off_25018 - 0xBD9A)|30-73
48534|code|ADD             R1, PC; off_25018|121-68
48536|code|BL              setQueueData|1-240-74-249
48540|code|LDR             R2, [R7,#4]|122-104
48542|code|CBZ             R2, loc_BDA4|10-177
48544|code|MOV             R0, R10|80-70
48546|code|BLX             R2|144-71
48548|code|MOV             R0, R6|48-70
48550|code|MOV             R1, R10|81-70
48552|code|BL              enqueueItem|1-240-204-249
48556|code|MOV             R5, R0|5-70
48558|code|CMP             R0, #0|0-40
48560|code|BNE             loc_BD08|170-209
48562|code|LDR.W           R0, [R10,#8]|218-248-8-0
48566|code|BL              deallocateQueue|1-240-3-249
48570|code|MOV             R0, R10; ptr|80-70
48572|code|BLX             free|250-247-194-234
48576|code|MOV             R0, R4; ptr|32-70
48578|code|BLX             free|250-247-192-234
48582|code|MOVS            R0, #0|0-32
48584|code|B               loc_BD60|202-231
48586|code|LDR             R0, =(sub_B990+1 - 0xBDD2)|18-72
48588|code|MOV             R1, R6|49-70
48590|code|ADD             R0, PC; sub_B990|120-68
48592|code|BL              newQueue|1-240-196-248
48596|code|MOV             R6, R0|6-70
48598|code|STR             R0, [R5]|40-96
48600|code|CMP             R0, #0|0-40
48602|code|BNE             loc_BCF0|137-209
48604|code|B               loc_BDC0|240-231
48606|code|BL              logMallocError|253-247-189-249
48610|code|B               loc_BDC0|237-231
48612|code|BL              logMallocError|253-247-186-249
48616|code|MOV             R0, R4|32-70
48618|code|B               loc_BD60|185-231
48620|code|CMP.W           R11, #0|187-241-0-15
48624|code|BEQ             loc_BDC0|230-208
48626|code|MOV             R0, R5|40-70
48628|code|BL              deleteElement|1-240-114-248
48632|code|B               loc_BDC0|226-231
48634|code|BLX             __stack_chk_fail|250-247-28-236
48638|data|ALIGN 0x10|0-191
48640|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBCC6|14-144-1-0
48644|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
48648|data|DCD loc_B95C+1 - 0xBCFE|95-252-255-255
48652|data|DCD sub_B978+1 - 0xBD8C|237-251-255-255
48656|data|DCD off_25018 - 0xBD9A|126-146-1-0
48660|data|DCD sub_B990+1 - 0xBDD2|191-251-255-255
48664|code|PUSH            {R4-R6,LR}|112-181
48666|code|MOV             R5, R0|5-70
48668|code|MOVS            R0, #4; size|4-32
48670|code|BLX             malloc|250-247-180-236
48674|code|MOV             R6, R0|6-70
48676|code|CBZ             R0, loc_BE3C|80-177
48678|code|LDR             R3, [R5,#8]|171-104
48680|code|MOV             R2, R0|2-70
48682|code|LDM.W           R5, {R0,R1}|149-232-3-0
48686|code|STR             R3, [R6]|51-96
48688|code|LDR             R3, [R5,#0xC]|235-104
48690|code|BL              sub_BCB4|255-247-63-255
48694|code|MOV             R4, R0|4-70
48696|code|CBZ             R0, loc_BE44|32-177
48698|code|POP             {R4-R6,PC}|112-189
48700|code|BL              logMallocError|253-247-142-249
48704|code|MOV             R0, R6|48-70
48706|code|POP             {R4-R6,PC}|112-189
48708|code|MOV             R0, R6; ptr|48-70
48710|code|BLX             free|250-247-126-234
48714|code|MOV             R0, R4|32-70
48716|code|POP             {R4-R6,PC}|112-189
48718|data|ALIGN 0x10|0-191
48720|code|PUSH.W          {R3-R9,LR}|45-233-248-67
48724|code|MOV             R9, R0|129-70
48726|code|ADD.W           R0, R3, #0x10; size|3-241-16-0
48730|code|MOV             R5, R3|29-70
48732|code|MOV             R8, R1|136-70
48734|code|MOV             R6, R2|22-70
48736|code|LDR             R7, [SP,#0x20+arg_0]|8-159
48738|code|BLX             malloc|250-247-146-236
48742|code|MOV             R4, R0|4-70
48744|code|CBZ             R0, loc_BE9A|184-177
48746|code|LDM.W           R6, {R0,R1}|150-232-3-0
48750|code|MOVS            R3, #0|0-35
48752|code|STR             R5, [R4,#8]|165-96
48754|code|STR             R3, [R4,#0xC]|227-96
48756|code|STM.W           R4, {R0,R1}|132-232-3-0
48760|code|CBZ             R7, loc_BE86|47-177
48762|code|MOV             R1, R7; src|57-70
48764|code|MOV             R2, R5; n|42-70
48766|code|ADD.W           R0, R4, #0x10; dest|4-241-16-0
48770|code|BLX             memcpy|250-247-118-236
48774|code|MOV             R0, R9|72-70
48776|code|MOV             R1, R8|65-70
48778|code|MOV             R2, R4|34-70
48780|code|LDR             R3, [SP,#0x20+arg_4]|9-155
48782|code|BL              sub_BCB4|255-247-17-255
48786|code|MOV             R5, R0|5-70
48788|code|CBZ             R0, loc_BEA4|48-177
48790|code|POP.W           {R3-R9,PC}|189-232-248-131
48794|code|BL              logMallocError|253-247-95-249
48798|code|MOV             R0, R4|32-70
48800|code|POP.W           {R3-R9,PC}|189-232-248-131
48804|code|MOV             R0, R4; ptr|32-70
48806|code|BLX             free|250-247-78-234
48810|code|MOV             R0, R5|40-70
48812|code|POP.W           {R3-R9,PC}|189-232-248-131
48816|code|PUSH            {R4-R7,LR}|240-181
48818|code|MOV             R1, R0|1-70
48820|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xBEC0)|17-76
48822|code|SUB             SP, SP, #0x1C|135-176
48824|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|17-77
48826|code|ADD             R2, SP, #0x30+var_24|3-170
48828|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
48830|code|LDR             R3, [R1,#4]|75-104
48832|code|LDR.W           R12, [R1,#0xC]|209-248-12-192
48836|code|MOVS            R6, #0|0-38
48838|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
48840|code|LDR             R1, [R1,#8]|137-104
48842|code|LDRB.W          R5, [SP,#0x30+var_20]|157-248-16-80
48846|code|LDR             R7, [R4]|39-104
48848|code|STR             R1, [SP,#0x30+var_24]|3-145
48850|code|BFC.W           R5, #0, #1|111-243-0-5
48854|code|LDR             R1, =(off_249F0 - 0xBEDE); "input transferred"|11-73
48856|code|LDR             R0, [R0]|0-104
48858|code|ADD             R1, PC; off_249F0|121-68
48860|code|STMEA.W         SP, {R6,R12}|141-232-64-16
48864|code|STR             R7, [SP,#0x30+var_1C]|5-151
48866|code|STRB.W          R5, [SP,#0x30+var_20]|141-248-16-80
48870|code|BL              sub_BE50|255-247-179-255
48874|code|LDR             R2, [SP,#0x30+var_1C]|5-154
48876|code|LDR             R3, [R4]|35-104
48878|code|CMP             R2, R3|154-66
48880|code|BNE             loc_BEF6|1-209
48882|code|ADD             SP, SP, #0x1C|7-176
48884|code|POP             {R4-R7,PC}|240-189
48886|code|BLX             __stack_chk_fail|250-247-158-235
48890|data|ALIGN 4|0-191
48892|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBEC0|20-142-1-0
48896|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
48900|data|DCD off_249F0 - 0xBEDE; "input transferred"|18-139-1-0
48904|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xBF12)|17-75
48906|code|MOV             R1, R0|1-70
48908|code|PUSH            {R4-R7,LR}|240-181
48910|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
48912|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|16-76
48914|code|SUB             SP, SP, #0x1C|135-176
48916|code|LDR.W           R12, [R1,#8]|209-248-8-192
48920|code|ADD             R2, SP, #0x18|6-170
48922|code|LDR             R7, [R0,#0xC]|199-104
48924|code|MOVS            R6, #0|0-38
48926|code|LDR             R5, [R3,R4]; __stack_chk_guard|29-89
48928|code|LDR             R3, [R1,#4]|75-104
48930|code|LDR             R1, [R1,#0x10]|9-105
48932|code|LDR             R0, [R0]|0-104
48934|code|STR             R6, [SP,#0x10]|4-150
48936|code|STR             R1, [SP,#4]|1-145
48938|code|LDR             R1, =(off_249F0 - 0xBF32); "input transferred"|11-73
48940|code|LDR             R4, [R5]|44-104
48942|code|ADD             R1, PC; off_249F0|121-68
48944|code|STR.W           R7, [R2,#-0xC]!|66-248-12-125
48948|code|ADDS            R1, #0x1C|28-49
48950|code|STR.W           R12, [SP]|205-248-0-192
48954|code|STR             R4, [SP,#0x14]|5-148
48956|code|BL              sub_BE50|255-247-136-255
48960|code|LDR             R2, [SP,#0x14]|5-154
48962|code|LDR             R3, [R5]|43-104
48964|code|CMP             R2, R3|154-66
48966|code|BNE             loc_BF4C|1-209
48968|code|ADD             SP, SP, #0x1C|7-176
48970|code|POP             {R4-R7,PC}|240-189
48972|code|BLX             __stack_chk_fail|250-247-114-235
48976|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBF12|194-141-1-0
48980|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
48984|data|DCD off_249F0 - 0xBF32; "input transferred"|190-138-1-0
48988|code|PUSH            {R4-R6,LR}|112-181
48990|code|MOV             R6, R0|6-70
48992|code|BL              getElementItem|0-240-250-255
48996|code|LDRB            R3, [R0,#0x14]|3-125
48998|code|MOV             R4, R0|4-70
49000|code|LSLS            R0, R3, #0x1F|216-7
49002|code|BPL             loc_BF74|3-213
49004|code|ORR.W           R3, R3, #2|67-240-2-3
49008|code|STRB            R3, [R4,#0x14]|35-117
49010|code|POP             {R4-R6,PC}|112-189
49012|code|LDR             R5, [R4]|37-104
49014|code|LDR             R0, [R5,#4]|104-104
49016|code|LDR             R1, [R5,#8]|169-104
49018|code|BL              sub_BBFC|255-247-63-254
49022|code|CMP             R6, R0|134-66
49024|code|BNE             loc_BFC6|33-209
49026|code|LDRB            R3, [R4,#0x14]|35-125
49028|code|LSLS            R1, R3, #0x1D|89-7
49030|code|BMI             loc_BF94|5-212
49032|code|LDR             R3, [R4]|35-104
49034|code|LDR             R3, [R3,#4]|91-104
49036|code|LDR             R3, [R3,#0x14]|91-105
49038|code|CBZ             R3, loc_BF94|11-177
49040|code|MOV             R0, R4|32-70
49042|code|BLX             R3|152-71
49044|code|LDR             R0, [R5,#8]|168-104
49046|code|BL              getQueueSize|1-240-71-248
49050|code|CMP             R0, #1|1-40
49052|code|BEQ             loc_BFDA|29-208
49054|code|MOV             R0, R6|48-70
49056|code|BL              deleteElement|0-240-156-255
49060|code|LDR             R1, [R5,#8]|169-104
49062|code|LDR             R0, [R5,#4]|104-104
49064|code|BL              sub_BBFC|255-247-40-254
49068|code|BL              getElementItem|0-240-212-255
49072|code|LDRB            R2, [R0,#0x14]|2-125
49074|code|MOV             R3, R0|3-70
49076|code|LSLS            R2, R2, #0x1D|82-7
49078|code|BMI             locret_BFF2|28-212
49080|code|LDR             R3, [R3]|27-104
49082|code|LDR             R3, [R3,#4]|91-104
49084|code|LDR             R3, [R3,#0xC]|219-104
49086|code|CBZ             R3, locret_BFF0|187-177
49088|code|POP.W           {R4-R6,LR}|189-232-112-64
49092|code|BX              R3|24-71
49094|code|LDR             R0, [R5,#8]|168-104
49096|code|BL              getQueueSize|1-240-46-248
49100|code|CMP             R0, #1|1-40
49102|code|BEQ             loc_BFDA|4-208
49104|code|MOV             R0, R6|48-70
49106|code|POP.W           {R4-R6,LR}|189-232-112-64
49110|code|B.W             deleteElement|0-240-129-191
49114|code|BL              sub_BAC8|255-247-117-253
49118|code|CBZ             R0, loc_BFE2|0-177
49120|code|LDR             R0, [R0]|0-104
49122|code|MOV             R1, R5|41-70
49124|code|BL              findElementWithItem|1-240-32-249
49128|code|POP.W           {R4-R6,LR}|189-232-112-64
49132|code|B.W             deleteElement|0-240-118-191
49136|code|POP             {R4-R6,PC}|112-189
49138|code|POP             {R4-R6,PC}|112-189
49140|code|CBZ             R0, locret_C00C|80-177
49142|code|PUSH            {R4,LR}|16-181
49144|code|MOV             R4, R0|4-70
49146|code|LDR             R0, [R0]|0-104
49148|code|CBZ             R0, loc_C002|8-177
49150|code|BL              deallocateQueue|0-240-223-255
49154|code|MOV             R0, R4; ptr|32-70
49156|code|POP.W           {R4,LR}|189-232-16-64
49160|code|B.W             j_free|250-247-154-185
49164|code|BX              LR|112-71
49166|data|ALIGN 0x10|0-191
49168|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC01A)|85-75
49170|code|PUSH.W          {R4-R10,LR}|45-233-240-71
49174|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
49176|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|84-76
49178|code|SUB             SP, SP, #0x10|132-176
49180|code|ADD             R7, SP, #0|0-175
49182|code|MOV             R5, R1|13-70
49184|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
49186|code|LDR             R3, [R4]|35-104
49188|code|STR             R3, [R7,#0x10+var_4]|251-96
49190|code|CBZ             R0, loc_C034|40-177
49192|code|LDR             R6, [R0]|6-104
49194|code|CBZ             R6, loc_C034|30-177
49196|code|MOV             R0, R6|48-70
49198|code|BL              getQueueSize|0-240-251-255
49202|code|CBNZ            R0, loc_C04E|96-185
49204|code|MOV             R0, R5|40-70
49206|code|BL              approximateDelay|255-247-35-248
49210|code|MOVS            R0, #0|0-32
49212|code|LDR             R2, [R7,#0x10+var_4]|250-104
49214|code|LDR             R3, [R4]|35-104
49216|code|CMP             R2, R3|154-66
49218|code|BNE.W           loc_C164|64-240-143-128
49222|code|ADDS            R7, #0x10|16-55
49224|code|MOV             SP, R7|189-70
49226|code|POP.W           {R4-R10,PC}|189-232-240-135
49230|code|LSLS            R0, R0, #3|192-0
49232|code|LDR             R1, =(sub_BC14+1 - 0xC062)|71-73
49234|code|ADD.W           R3, R0, #8|0-241-8-3
49238|code|MOV             R8, SP|232-70
49240|code|MOV             R0, R6|48-70
49242|code|SUB.W           SP, SP, R3|173-235-3-13
49246|code|ADD             R1, PC; sub_BC14|121-68
49248|code|ADDS            R2, R7, #4|58-29
49250|code|MOVS            R3, #0|0-35
49252|code|STR.W           SP, [R7,#0x10+fds]|199-248-4-208
49256|code|STR             R3, [R7,#0x10+nfds]|187-96
49258|code|BL              processQueue|1-240-229-248
49262|code|MOV             R10, R0|130-70
49264|code|CMP             R0, #0|0-40
49266|code|BEQ             loc_C104|71-208
49268|code|MOV             R0, R10|80-70
49270|code|BL              getElementItem|0-240-111-255
49274|code|MOV             R9, R0|129-70
49276|code|LDR             R0, [R0,#4]|64-104
49278|code|LDR.W           R1, [R9,#8]|217-248-8-16
49282|code|BL              sub_BBFC|255-247-187-253
49286|code|MOV             R6, R0|6-70
49288|code|BL              getElementItem|0-240-102-255
49292|code|LDRB            R3, [R0,#0x14]|3-125
49294|code|MOV             R5, R0|5-70
49296|code|LSLS            R1, R3, #0x1D|89-7
49298|code|BMI             loc_C09E|4-212
49300|code|LDR             R3, [R0]|3-104
49302|code|LDR             R3, [R3,#4]|91-104
49304|code|LDR             R3, [R3,#0x10]|27-105
49306|code|CBZ             R3, loc_C09E|3-177
49308|code|BLX             R3|152-71
49310|code|LDR.W           R2, [R9,#4]|217-248-4-32
49314|code|MOV             R0, R5|40-70
49316|code|LDRB            R3, [R5,#0x14]|43-125
49318|code|LDR             R2, [R2,#0x18]|146-105
49320|code|ORR.W           R3, R3, #1|67-240-1-3
49324|code|STRB            R3, [R5,#0x14]|43-117
49326|code|BLX             R2|144-71
49328|code|CBNZ            R0, loc_C0BA|24-185
49330|code|LDRB            R3, [R5,#0x14]|43-125
49332|code|ORR.W           R3, R3, #2|67-240-2-3
49336|code|STRB            R3, [R5,#0x14]|43-117
49338|code|LDRB            R3, [R5,#0x14]|43-125
49340|code|BFC.W           R3, #0, #1|111-243-0-3
49344|code|STRB            R3, [R5,#0x14]|43-117
49346|code|AND.W           R3, R3, #2|3-240-2-3
49350|code|AND.W           R2, R3, #0xFF|3-240-255-2
49354|code|CBNZ            R3, loc_C0FC|187-185
49356|code|STR             R2, [R5,#0x10]|42-97
49358|code|LDR.W           R0, [R9,#4]|217-248-4-0
49362|code|LDR.W           R1, [R9,#8]|217-248-8-16
49366|code|BL              sub_BBFC|255-247-145-253
49370|code|CBZ             R0, loc_C11A|240-177
49372|code|BL              getElementItem|0-240-60-255
49376|code|LDRB            R2, [R0,#0x14]|2-125
49378|code|LSLS            R2, R2, #0x1D|82-7
49380|code|BMI             loc_C0F0|4-212
49382|code|LDR             R3, [R0]|3-104
49384|code|LDR             R3, [R3,#4]|91-104
49386|code|LDR             R3, [R3,#0xC]|219-104
49388|code|CBZ             R3, loc_C0F0|3-177
49390|code|BLX             R3|152-71
49392|code|MOV             R0, R10|80-70
49394|code|BL              requeueElement|1-240-85-248
49398|code|MOVS            R0, #1|1-32
49400|code|MOV             SP, R8|197-70
49402|code|B               loc_C03C|159-231
49404|code|MOV             R0, R6|48-70
49406|code|BL              deleteElement|0-240-237-254
49410|code|B               loc_C0CE|228-231
49412|code|LDR.W           R9, [R7,#0x10+nfds]|215-248-8-144
49416|code|CMP.W           R9, #0|185-241-0-15
49420|code|BNE             loc_C126|11-209
49422|code|MOV             R0, R5|40-70
49424|code|BL              approximateDelay|254-247-182-255
49428|code|MOV             R0, R9|72-70
49430|code|MOV             SP, R8|197-70
49432|code|B               loc_C03C|144-231
49434|code|MOV             R0, R10|80-70
49436|code|BL              deleteElement|0-240-222-254
49440|code|MOVS            R0, #1|1-32
49442|code|MOV             SP, R8|197-70
49444|code|B               loc_C03C|138-231
49446|code|MOV             R1, R9; nfds|73-70
49448|code|MOV             R2, R5; timeout|42-70
49450|code|LDR             R0, [R7,#0x10+fds]; fds|120-104
49452|code|BLX             poll|250-247-8-234
49456|code|CMP             R0, #0|0-40
49458|code|BLE             loc_C14C|11-221
49460|code|LDR             R1, =(sub_BC6C+1 - 0xC13E)|15-73
49462|code|MOV             R2, R10|82-70
49464|code|MOV             R0, R6|48-70
49466|code|ADD             R1, PC; sub_BC6C|121-68
49468|code|BL              processQueue|1-240-124-248
49472|code|MOV             R10, R0|130-70
49474|code|CMP             R0, #0|0-40
49476|code|BNE             loc_C074|150-209
49478|code|MOVS            R0, #0|0-32
49480|code|MOV             SP, R8|197-70
49482|code|B               loc_C03C|119-231
49484|code|ADDS            R0, #1|1-48
49486|code|BNE             loc_C146|250-209
49488|code|BLX             __errno_location|250-247-160-235
49492|code|LDR             R3, [R0]|3-104
49494|code|CMP             R3, #4|4-43
49496|code|BEQ             loc_C146|245-208
49498|code|LDR             R0, =(aPoll_0 - 0xC160); "poll"|7-72
49500|code|ADD             R0, PC; "poll"|120-68
49502|code|BL              logSystemError|252-247-243-255
49506|code|B               loc_C146|240-231
49508|code|BLX             __stack_chk_fail|250-247-102-234
49512|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC01A|186-140-1-0
49516|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
49520|data|DCD sub_BC14+1 - 0xC062|179-251-255-255
49524|data|DCD sub_BC6C+1 - 0xC13E|47-251-255-255
49528|data|DCD aPoll_0 - 0xC160; "poll"|80-94-0-0
49532|code|PUSH            {R4-R6,LR}|112-181
49534|code|SUB             SP, SP, #0x18|134-176
49536|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xC188)|12-78
49538|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|13-77
49540|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
49542|code|LDR             R4, =(off_249F0 - 0xC18E); "input transferred"|13-76
49544|code|LDR             R5, [R6,R5]; __stack_chk_guard|117-89
49546|code|ADD             R4, PC; off_249F0|124-68
49548|code|STR             R1, [SP,#0x28+var_24]|1-145
49550|code|ADDS            R4, #0x38 ; '8'|56-52
49552|code|LDR             R1, =(sub_BE18+1 - 0xC19A)|11-73
49554|code|LDR             R6, [R5]|46-104
49556|code|STR             R2, [SP,#0x28+var_1C]|3-146
49558|code|ADD             R1, PC; sub_BE18|121-68
49560|code|ADD             R2, SP, #0x28+var_24|1-170
49562|code|STR             R3, [SP,#0x28+var_18]|4-147
49564|code|STR             R6, [SP,#0x28+var_14]|5-150
49566|code|STR             R4, [SP,#0x28+var_20]|2-148
49568|code|BL              asyncMakeHandle|254-247-176-255
49572|code|LDR             R2, [SP,#0x28+var_14]|5-154
49574|code|LDR             R3, [R5]|43-104
49576|code|CMP             R2, R3|154-66
49578|code|BNE             loc_C1B0|1-209
49580|code|ADD             SP, SP, #0x18|6-176
49582|code|POP             {R4-R6,PC}|112-189
49584|code|BLX             __stack_chk_fail|250-247-64-234
49588|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC188|76-139-1-0
49592|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
49596|data|DCD off_249F0 - 0xC18E; "input transferred"|98-136-1-0
49600|data|DCD sub_BE18+1 - 0xC19A|127-252-255-255
49604|code|PUSH            {R4-R6,LR}|112-181
49606|code|SUB             SP, SP, #0x18|134-176
49608|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xC1D0)|12-78
49610|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|13-77
49612|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
49614|code|LDR             R4, =(off_249F0 - 0xC1D6); "input transferred"|13-76
49616|code|LDR             R5, [R6,R5]; __stack_chk_guard|117-89
49618|code|ADD             R4, PC; off_249F0|124-68
49620|code|STR             R1, [SP,#0x28+var_24]|1-145
49622|code|ADDS            R4, #0x54 ; 'T'|84-52
49624|code|LDR             R1, =(sub_BE18+1 - 0xC1E2)|11-73
49626|code|LDR             R6, [R5]|46-104
49628|code|STR             R2, [SP,#0x28+var_1C]|3-146
49630|code|ADD             R1, PC; sub_BE18|121-68
49632|code|ADD             R2, SP, #0x28+var_24|1-170
49634|code|STR             R3, [SP,#0x28+var_18]|4-147
49636|code|STR             R6, [SP,#0x28+var_14]|5-150
49638|code|STR             R4, [SP,#0x28+var_20]|2-148
49640|code|BL              asyncMakeHandle|254-247-140-255
49644|code|LDR             R2, [SP,#0x28+var_14]|5-154
49646|code|LDR             R3, [R5]|43-104
49648|code|CMP             R2, R3|154-66
49650|code|BNE             loc_C1F8|1-209
49652|code|ADD             SP, SP, #0x18|6-176
49654|code|POP             {R4-R6,PC}|112-189
49656|code|BLX             __stack_chk_fail|250-247-28-234
49660|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC1D0|4-139-1-0
49664|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
49668|data|DCD off_249F0 - 0xC1D6; "input transferred"|26-136-1-0
49672|data|DCD sub_BE18+1 - 0xC1E2|55-252-255-255
49676|code|PUSH            {R4-R6,LR}|112-181
49678|code|SUB             SP, SP, #0x18|134-176
49680|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xC218)|12-78
49682|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|13-77
49684|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
49686|code|LDR             R4, =(off_249F0 - 0xC21E); "input transferred"|13-76
49688|code|LDR             R5, [R6,R5]; __stack_chk_guard|117-89
49690|code|ADD             R4, PC; off_249F0|124-68
49692|code|STR             R1, [SP,#0x28+var_24]|1-145
49694|code|ADDS            R4, #0x70 ; 'p'|112-52
49696|code|LDR             R1, =(sub_BE18+1 - 0xC22A)|11-73
49698|code|LDR             R6, [R5]|46-104
49700|code|STR             R2, [SP,#0x28+var_1C]|3-146
49702|code|ADD             R1, PC; sub_BE18|121-68
49704|code|ADD             R2, SP, #0x28+var_24|1-170
49706|code|STR             R3, [SP,#0x28+var_18]|4-147
49708|code|STR             R6, [SP,#0x28+var_14]|5-150
49710|code|STR             R4, [SP,#0x28+var_20]|2-148
49712|code|BL              asyncMakeHandle|254-247-104-255
49716|code|LDR             R2, [SP,#0x28+var_14]|5-154
49718|code|LDR             R3, [R5]|43-104
49720|code|CMP             R2, R3|154-66
49722|code|BNE             loc_C240|1-209
49724|code|ADD             SP, SP, #0x18|6-176
49726|code|POP             {R4-R6,PC}|112-189
49728|code|BLX             __stack_chk_fail|250-247-248-233
49732|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC218|188-138-1-0
49736|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
49740|data|DCD off_249F0 - 0xC21E; "input transferred"|210-135-1-0
49744|data|DCD sub_BE18+1 - 0xC22A|239-251-255-255
49748|code|PUSH            {R4-R6,LR}|112-181
49750|code|SUB             SP, SP, #0x18|134-176
49752|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xC260)|11-78
49754|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|12-76
49756|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
49758|code|LDR             R5, [SP,#0x28+arg_0]|10-157
49760|code|LDR             R4, [R6,R4]; __stack_chk_guard|52-89
49762|code|STR             R1, [SP,#0x28+var_24]|1-145
49764|code|LDR             R1, =(sub_BEB0+1 - 0xC26E)|10-73
49766|code|LDR             R6, [R4]|38-104
49768|code|STR             R2, [SP,#0x28+var_20]|2-146
49770|code|ADD             R1, PC; sub_BEB0|121-68
49772|code|ADD             R2, SP, #0x28+var_24|1-170
49774|code|STR             R3, [SP,#0x28+var_1C]|3-147
49776|code|STR             R6, [SP,#0x28+var_14]|5-150
49778|code|STR             R5, [SP,#0x28+var_18]|4-149
49780|code|BL              asyncMakeHandle|254-247-70-255
49784|code|LDR             R2, [SP,#0x28+var_14]|5-154
49786|code|LDR             R3, [R4]|35-104
49788|code|CMP             R2, R3|154-66
49790|code|BNE             loc_C284|1-209
49792|code|ADD             SP, SP, #0x18|6-176
49794|code|POP             {R4-R6,PC}|112-189
49796|code|BLX             __stack_chk_fail|250-247-214-233
49800|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC260|116-138-1-0
49804|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
49808|data|DCD sub_BEB0+1 - 0xC26E|67-252-255-255
49812|code|PUSH            {R4-R7,LR}|240-181
49814|code|SUB             SP, SP, #0x1C|135-176
49816|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0xC2A0)|12-79
49818|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|13-76
49820|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
49822|code|LDR             R6, [SP,#0x30+arg_0]|12-158
49824|code|LDR             R5, [SP,#0x30+arg_4]|13-157
49826|code|LDR             R4, [R7,R4]; __stack_chk_guard|60-89
49828|code|STR             R1, [SP,#0x30+var_30]|0-145
49830|code|LDR             R1, =(loc_BF08+1 - 0xC2B0)|11-73
49832|code|LDR             R7, [R4]|39-104
49834|code|STR             R2, [SP,#0x30+var_28]|2-146
49836|code|ADD             R1, PC; loc_BF08|121-68
49838|code|MOV             R2, SP|106-70
49840|code|STR             R3, [SP,#0x30+var_2C]|1-147
49842|code|STR             R7, [SP,#0x30+var_1C]|5-151
49844|code|STR             R6, [SP,#0x30+var_24]|3-150
49846|code|STR             R5, [SP,#0x30+var_20]|4-149
49848|code|BL              asyncMakeHandle|254-247-36-255
49852|code|LDR             R2, [SP,#0x30+var_1C]|5-154
49854|code|LDR             R3, [R4]|35-104
49856|code|CMP             R2, R3|154-66
49858|code|BNE             loc_C2C8|1-209
49860|code|ADD             SP, SP, #0x1C|7-176
49862|code|POP             {R4-R7,PC}|240-189
49864|code|BLX             __stack_chk_fail|250-247-180-233
49868|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC2A0|52-138-1-0
49872|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
49876|data|DCD loc_BF08+1 - 0xC2B0|89-252-255-255
49880|code|B.W             asyncMonitorFileInput|255-247-80-191
49884|code|B.W             asyncMonitorFileOutput|255-247-114-191
49888|code|B.W             asyncMonitorFileAlert|255-247-148-191
49892|code|B.W             asyncReadFile|255-247-182-191
49896|code|PUSH            {R4}|16-180
49898|code|POP.W           {R4}|93-248-4-75
49902|code|B.W             asyncWriteFile|255-247-209-191
49906|data|ALIGN 4|0-191
49908|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC2FE)|20-75
49910|code|MOVS            R2, #4; nbytes|4-34
49912|code|PUSH            {R4-R6,LR}|112-181
49914|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
49916|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|19-76
49918|code|SUB             SP, SP, #0x10|132-176
49920|code|LDR             R5, [R0]|5-104
49922|code|MOV             R1, SP; buf|105-70
49924|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
49926|code|LDR             R0, [R5,#0xC]; fd|232-104
49928|code|LDR             R3, [R4]|35-104
49930|code|STR             R3, [SP,#0x20+var_14]|3-147
49932|code|BL              readFileDescriptor|253-247-66-254
49936|code|CMP             R0, #4|4-40
49938|code|IT NE|24-191
49940|code|MOVNE           R0, #0|0-32
49942|code|BEQ             loc_C324|5-208
49944|code|LDR             R2, [SP,#0x20+var_14]|3-154
49946|code|LDR             R3, [R4]|35-104
49948|code|CMP             R2, R3|154-66
49950|code|BNE             loc_C344|17-209
49952|code|ADD             SP, SP, #0x10|4-176
49954|code|POP             {R4-R6,PC}|112-189
49956|code|LDR             R6, [R5]|46-104
49958|code|MOVS            R0, #0x89|137-32
49960|code|LDR             R5, [R5,#4]|109-104
49962|code|LDR             R3, [SP,#0x20+var_20]|0-155
49964|code|LDR             R2, =(aEventStarting - 0xC336); "event starting"|8-74
49966|code|MOV             R1, R6|49-70
49968|code|STR             R5, [SP,#0x20+var_1C]|1-149
49970|code|ADD             R2, PC; "event starting"|122-68
49972|code|STR             R3, [SP,#0x20+var_18]|2-147
49974|code|BL              logSymbol|252-247-205-254
49978|code|CBZ             R6, loc_C340|14-177
49980|code|ADD             R0, SP, #0x20+var_1C|1-168
49982|code|BLX             R6|176-71
49984|code|MOVS            R0, #1|1-32
49986|code|B               loc_C318|233-231
49988|code|BLX             __stack_chk_fail|250-247-118-233
49992|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC2FE|214-137-1-0
49996|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
50000|data|DCD aEventStarting - 0xC336; "event starting"|230-92-0-0
50004|code|PUSH            {LR}|0-181
50006|code|SUB             SP, SP, #0xC|131-176
50008|code|ADD             R3, SP, #0x10+var_8|2-171
50010|code|LDR             R0, [R0,#8]; fd|128-104
50012|code|MOVS            R2, #4; n|4-34
50014|code|STR.W           R1, [R3,#-4]!|67-248-4-29
50018|code|MOV             R1, R3; buf|25-70
50020|code|BL              writeFileDescriptor|253-247-24-254
50024|code|CMP             R0, #4|4-40
50026|code|IT EQ|8-191
50028|code|MOVEQ           R0, #1|1-32
50030|code|BEQ             loc_C380|7-208
50032|code|ADDS            R0, #1|1-48
50034|code|BEQ             loc_C386|8-208
50036|code|LDR             R1, =(aShortWrite - 0xC37C); "short write"|8-73
50038|code|MOVS            R0, #3|3-32
50040|code|ADD             R1, PC; "short write"|121-68
50042|code|BL              logMessage|252-247-99-254
50046|code|MOVS            R0, #0|0-32
50048|code|ADD             SP, SP, #0xC|3-176
50050|code|POP.W           {PC}|93-248-4-251
50054|code|LDR             R0, =(aWrite - 0xC38C); "write"|5-72
50056|code|ADD             R0, PC; "write"|120-68
50058|code|BL              logSystemError|252-247-221-254
50062|code|MOVS            R0, #0|0-32
50064|code|ADD             SP, SP, #0xC|3-176
50066|code|POP.W           {PC}|93-248-4-251
50070|data|ALIGN 4|0-191
50072|data|DCD aShortWrite - 0xC37C; "short write"|176-92-0-0
50076|data|DCD aWrite - 0xC38C; "write"|112-89-0-0
50080|code|PUSH            {R3-R7,LR}|248-181
50082|code|MOV             R7, R0|7-70
50084|code|MOVS            R0, #0x18; size|24-32
50086|code|MOV             R6, R1|14-70
50088|code|BLX             malloc|250-247-238-233
50092|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xC3B2)|30-77
50094|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
50096|code|MOV             R4, R0|4-70
50098|code|CMP             R0, #0|0-40
50100|code|BEQ             loc_C41E|51-208
50102|code|ADD.W           R3, R0, #8|0-241-8-3
50106|code|MOVS            R2, #0|0-34
50108|code|ADD.W           R1, R4, #0xC|4-241-12-1
50112|code|MOV             R0, R3|24-70
50114|code|STR.W           R2, [R3],#4|67-248-4-43
50118|code|STR.W           R2, [R3],#4|67-248-4-43
50122|code|STR.W           R2, [R3],#4|67-248-4-43
50126|code|STR             R2, [R3]|26-96
50128|code|STR             R7, [R4]|39-96
50130|code|STR             R6, [R4,#4]|102-96
50132|code|BL              createAnonymousPipe|253-247-232-253
50136|code|CBZ             R0, loc_C414|224-177
50138|code|LDR             R1, [R4,#0xC]|225-104
50140|code|ADDS            R3, R1, #1|75-28
50142|code|STR             R1, [R4,#0x10]|33-97
50144|code|BEQ             loc_C408|18-208
50146|code|LDR             R2, =(asyncMonitorEventPipe_ptr - 0x24CD4)|18-74
50148|code|ADD.W           R0, R4, #0x14|4-241-20-0
50152|code|MOV             R3, R4|35-70
50154|code|LDR             R2, [R5,R2]; asyncMonitorEventPipe|170-88
50156|code|BL              asyncMonitorFileInput|255-247-198-254
50160|code|CBZ             R0, loc_C402|56-177
50162|code|LDR             R2, =(aEventAdded - 0xC3FC); "event added"|15-74
50164|code|MOVS            R0, #0x89|137-32
50166|code|LDR             R1, [R4]|33-104
50168|code|ADD             R2, PC; "event added"|122-68
50170|code|BL              logSymbol|252-247-107-254
50174|code|MOV             R0, R4|32-70
50176|code|POP             {R3-R7,PC}|248-189
50178|code|LDR             R0, [R4,#0x10]; fd|32-105
50180|code|BLX             close|250-247-112-232
50184|code|LDR             R0, [R4,#8]; fd|160-104
50186|code|BLX             close|250-247-110-232
50190|code|LDR             R0, [R4,#0xC]; fd|224-104
50192|code|BLX             close|250-247-106-232
50196|code|MOV             R0, R4; ptr|32-70
50198|code|BLX             free|249-247-150-239
50202|code|MOVS            R0, #0|0-32
50204|code|POP             {R3-R7,PC}|248-189
50206|code|BL              logMallocError|252-247-157-254
50210|code|MOV             R0, R4|32-70
50212|code|POP             {R3-R7,PC}|248-189
50214|data|ALIGN 4|0-191
50216|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC3B2|34-137-1-0
50220|data|DCD asyncMonitorEventPipe_ptr - 0x24CD4|164-2-0-0
50224|data|DCD aEventAdded - 0xC3FC; "event added"|60-92-0-0
50228|code|PUSH            {R4,LR}|16-181
50230|code|MOV             R4, R0|4-70
50232|code|LDR             R0, [R0,#0x14]|64-105
50234|code|BL              asyncCancelRequest|254-247-223-254
50238|code|LDR             R0, [R4,#8]; fd|160-104
50240|code|BLX             close|250-247-82-232
50244|code|LDR             R0, [R4,#0xC]; fd|224-104
50246|code|BLX             close|250-247-80-232
50250|code|LDR             R2, =(aEventRemoved - 0xC454); "event removed"|5-74
50252|code|LDR             R1, [R4]|33-104
50254|code|MOVS            R0, #0x89|137-32
50256|code|ADD             R2, PC; "event removed"|122-68
50258|code|BL              logSymbol|252-247-63-254
50262|code|MOV             R0, R4; ptr|32-70
50264|code|POP.W           {R4,LR}|189-232-16-64
50268|code|B.W             j_free|249-247-112-191
50272|data|DCD aEventRemoved - 0xC454; "event removed"|240-91-0-0
50276|code|LDR             R0, [R0]|0-104
50278|code|LDR             R3, [R1]|11-104
50280|code|SUBS            R0, R0, R3|192-26
50282|code|CLZ.W           R0, R0|176-250-128-240
50286|code|LSRS            R0, R0, #5|64-9
50288|code|BX              LR|112-71
50290|data|ALIGN 4|0-191
50292|code|B.W             j_free|249-247-100-191
50296|code|PUSH            {R3-R5,LR}|56-181
50298|code|MOV             R4, R1|12-70
50300|code|MOV             R5, R0|5-70
50302|code|BLX             sigemptyset|250-247-62-234
50306|code|ADDS            R0, #1|1-48
50308|code|BEQ             loc_C496|7-208
50310|code|MOV             R0, R5; set|40-70
50312|code|MOV             R1, R4; signo|33-70
50314|code|BLX             sigaddset|250-247-40-232
50318|code|ADDS            R0, #1|1-48
50320|code|BEQ             loc_C4A2|7-208
50322|code|MOVS            R0, #1|1-32
50324|code|POP             {R3-R5,PC}|56-189
50326|code|LDR             R0, =(aSigemptyset_0 - 0xC49C); "sigemptyset"|6-72
50328|code|ADD             R0, PC; "sigemptyset"|120-68
50330|code|BL              logSystemError|252-247-85-254
50334|code|MOVS            R0, #0|0-32
50336|code|POP             {R3-R5,PC}|56-189
50338|code|LDR             R0, =(aSigaddset_0 - 0xC4A8); "sigaddset"|4-72
50340|code|ADD             R0, PC; "sigaddset"|120-68
50342|code|BL              logSystemError|252-247-79-254
50346|code|MOVS            R0, #0|0-32
50348|code|POP             {R3-R5,PC}|56-189
50350|data|ALIGN 0x10|0-191
50352|data|DCD aSigemptyset_0 - 0xC49C; "sigemptyset"|196-91-0-0
50356|data|DCD aSigaddset_0 - 0xC4A8; "sigaddset"|172-91-0-0
50360|code|PUSH            {R3,LR}|8-181
50362|code|BLX             pthread_sigmask|249-247-242-239
50366|code|CBNZ            R0, loc_C4C4|8-185
50368|code|MOVS            R0, #1|1-32
50370|code|POP             {R3,PC}|8-189
50372|code|LDR             R1, =(aPthreadSetmask - 0xC4CA); "pthread_setmask"|2-73
50374|code|ADD             R1, PC; "pthread_setmask"|121-68
50376|code|BL              logActionError|252-247-44-254
50380|code|MOVS            R0, #0|0-32
50382|code|POP             {R3,PC}|8-189
50384|data|DCD aPthreadSetmask - 0xC4CA; "pthread_setmask"|162-91-0-0
50388|code|PUSH            {R3-R7,LR}|248-181
50390|code|BL              asyncGetThreadSpecificData|254-247-251-254
50394|code|MOV             R5, R0|5-70
50396|code|CBZ             R0, loc_C548|160-179
50398|code|LDR             R4, [R0,#0x10]|4-105
50400|code|CBZ             R4, loc_C4E6|12-177
50402|code|MOV             R0, R4|32-70
50404|code|POP             {R3-R7,PC}|248-189
50406|code|MOV.W           R0, #0x18C; size|79-244-198-112
50410|code|BLX             malloc|250-247-78-233
50414|code|MOV             R6, R0|6-70
50416|code|CBZ             R0, loc_C54C|96-179
50418|code|MOV             R1, R4; c|33-70
50420|code|MOV.W           R2, #0x18C; n|79-244-198-114
50424|code|BLX             memset|249-247-178-239
50428|code|MOV             R0, R6|48-70
50430|code|STR.W           R4, [R0],#4; set|64-248-4-75
50434|code|ADD.W           R7, R6, #0x104|6-245-130-119
50438|code|BLX             sigemptyset|250-247-250-233
50442|code|ADD.W           R0, R6, #0x84; set|6-241-132-0
50446|code|BLX             sigemptyset|250-247-246-233
50450|code|MOV             R0, R7; set|56-70
50452|code|BLX             sigemptyset|250-247-242-233
50456|code|BLX             __libc_current_sigrtmin|250-247-48-232
50460|code|STR.W           R0, [R6,#0x184]|198-248-132-1
50464|code|BLX             __libc_current_sigrtmax|250-247-230-233
50468|code|LDR.W           R4, [R6,#0x184]|214-248-132-65
50472|code|CMP             R0, R4|160-66
50474|code|STR.W           R0, [R6,#0x188]|198-248-136-1
50478|code|BLT             loc_C542|8-219
50480|code|MOV             R1, R4; signo|33-70
50482|code|MOV             R0, R7; set|56-70
50484|code|BLX             sigaddset|249-247-210-239
50488|code|LDR.W           R3, [R6,#0x188]|214-248-136-49
50492|code|ADDS            R4, #1|1-52
50494|code|CMP             R3, R4|163-66
50496|code|BGE             loc_C530|246-218
50498|code|STR             R6, [R5,#0x10]|46-97
50500|code|MOV             R4, R6|52-70
50502|code|B               loc_C4E2|204-231
50504|code|MOV             R4, R0|4-70
50506|code|B               loc_C4E2|202-231
50508|code|BL              logMallocError|252-247-6-254
50512|code|B               loc_C4E2|199-231
50514|data|ALIGN 4|0-191
50516|code|PUSH            {R4,LR}|16-181
50518|code|MOV             R4, R0|4-70
50520|code|LDR             R0, [R0,#8]|128-104
50522|code|BL              deallocateQueue|0-240-49-253
50526|code|LDR             R0, [R4,#4]|96-104
50528|code|BL              asyncDiscardEvent|255-247-104-255
50532|code|MOV             R0, R4; ptr|32-70
50534|code|POP.W           {R4,LR}|189-232-16-64
50538|code|B.W             j_free|249-247-233-190
50542|data|ALIGN 0x10|0-191
50544|code|PUSH            {R4,LR}|16-181
50546|code|MOV             R4, R0|4-70
50548|code|LDM             R0, {R0,R1}|3-200
50550|code|BL              enqueueItem|0-240-229-253
50554|code|STR             R0, [R4,#8]|160-96
50556|code|POP             {R4,PC}|16-189
50558|data|ALIGN 0x10|0-191
50560|code|PUSH            {R4,LR}|16-181
50562|code|MOV             R4, R0|4-70
50564|code|BL              sub_C4D4|255-247-166-255
50568|code|CBZ             R0, loc_C58C|0-177
50570|code|LDR             R0, [R0]|0-104
50572|code|LDR             R1, [R4]|33-104
50574|code|BL              findElementWithItem|0-240-75-254
50578|code|POP.W           {R4,LR}|189-232-16-64
50582|code|B.W             deleteElement|0-240-161-188
50586|data|ALIGN 4|0-191
50588|code|CBZ             R0, locret_C5B4|80-177
50590|code|PUSH            {R4,LR}|16-181
50592|code|MOV             R4, R0|4-70
50594|code|LDR             R0, [R0]|0-104
50596|code|CBZ             R0, loc_C5AA|8-177
50598|code|BL              deallocateQueue|0-240-11-253
50602|code|MOV             R0, R4; ptr|32-70
50604|code|POP.W           {R4,LR}|189-232-16-64
50608|code|B.W             j_free|249-247-198-190
50612|code|BX              LR|112-71
50614|data|ALIGN 4|0-191
50616|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC5C2)|24-75
50618|code|PUSH.W          {R4-R8,LR}|45-233-240-65
50622|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
50624|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|23-77
50626|code|SUB             SP, SP, #0x120|200-176
50628|code|ADD             R4, SP, #0x138+s|1-172
50630|code|MOV             R8, R0|128-70
50632|code|MOV             R7, R1|15-70
50634|code|MOV             R6, R2|22-70
50636|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
50638|code|MOVS            R1, #0; c|0-33
50640|code|MOVS            R2, #0x8C; n|140-34
50642|code|MOV             R0, R4; s|32-70
50644|code|LDR             R3, [R5]|43-104
50646|code|STR             R3, [SP,#0x138+var_1C]|71-147
50648|code|BLX             memset|249-247-66-239
50652|code|ADD             R0, SP, #0x138+set; set|2-168
50654|code|BLX             sigemptyset|250-247-142-233
50658|code|MOV             R0, R8; sig|64-70
50660|code|MOV             R1, R4; act|33-70
50662|code|ADD             R2, SP, #0x138+var_A8; oact|36-170
50664|code|STR             R7, [R4]|39-96
50666|code|BLX             sigaction|250-247-128-232
50670|code|ADDS            R0, #1|1-48
50672|code|BEQ             loc_C60A|11-208
50674|code|MOVS            R0, #1|1-32
50676|code|CBZ             R6, loc_C5FC|22-177
50678|code|LDR             R3, [SP,#0x138+var_A8]|36-155
50680|code|MOVS            R0, #1|1-32
50682|code|STR             R3, [R6]|51-96
50684|code|LDR             R2, [SP,#0x138+var_1C]|71-154
50686|code|LDR             R3, [R5]|43-104
50688|code|CMP             R2, R3|154-66
50690|code|BNE             loc_C616|8-209
50692|code|ADD             SP, SP, #0x120|72-176
50694|code|POP.W           {R4-R8,PC}|189-232-240-129
50698|code|LDR             R0, =(aSigaction_0 - 0xC610); "sigaction"|6-72
50700|code|ADD             R0, PC; "sigaction"|120-68
50702|code|BL              logSystemError|252-247-155-253
50706|code|MOVS            R0, #0|0-32
50708|code|B               loc_C5FC|242-231
50710|code|BLX             __stack_chk_fail|250-247-14-232
50714|data|ALIGN 4|0-191
50716|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC5C2|18-135-1-0
50720|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
50724|data|DCD aSigaction_0 - 0xC610; "sigaction"|108-90-0-0
50728|code|MOV             R2, R1|10-70
50730|code|MOVS            R1, #1|1-33
50732|code|B.W             asyncHandleSignal|255-247-196-191
50736|code|MOV             R2, R1|10-70
50738|code|MOVS            R1, #0|0-33
50740|code|B.W             asyncHandleSignal|255-247-192-191
50744|code|BX              LR|112-71
50746|data|ALIGN 4|0-191
50748|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC644)|16-75
50750|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|17-74
50752|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
50754|code|PUSH            {R4-R6,LR}|112-181
50756|code|MOV             R4, R0|4-70
50758|code|MOV             R6, R1|14-70
50760|code|MOV             R1, R4|33-70
50762|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
50764|code|SUB             SP, SP, #0x88|162-176
50766|code|ADD             R5, SP, #0x98+var_94|1-173
50768|code|LDR             R3, [R4]|35-104
50770|code|MOV             R0, R5|40-70
50772|code|STR             R3, [SP,#0x98+var_14]|33-147
50774|code|BL              sub_C478|255-247-15-255
50778|code|CBZ             R0, loc_C670|72-177
50780|code|CLZ.W           R0, R6|182-250-134-240
50784|code|MOV             R1, R5|41-70
50786|code|MOVS            R2, #0|0-34
50788|code|LSRS            R0, R0, #5|64-9
50790|code|BL              sub_C4B8|255-247-39-255
50794|code|ADDS            R0, #0|0-48
50796|code|IT NE|24-191
50798|code|MOVNE           R0, #1|1-32
50800|code|LDR             R2, [SP,#0x98+var_14]|33-154
50802|code|LDR             R3, [R4]|35-104
50804|code|CMP             R2, R3|154-66
50806|code|BNE             loc_C67C|1-209
50808|code|ADD             SP, SP, #0x88|34-176
50810|code|POP             {R4-R6,PC}|112-189
50812|code|BLX             __stack_chk_fail|249-247-218-239
50816|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC644|144-134-1-0
50820|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
50824|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC692)|17-75
50826|code|MOVS            R1, #0|0-33
50828|code|PUSH            {R4-R6,LR}|112-181
50830|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
50832|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|16-76
50834|code|SUB             SP, SP, #0x88|162-176
50836|code|ADD             R5, SP, #0x98+var_94|1-173
50838|code|MOV             R6, R0|6-70
50840|code|MOVS            R0, #2|2-32
50842|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
50844|code|MOV             R2, R5|42-70
50846|code|LDR             R3, [R4]|35-104
50848|code|STR             R3, [SP,#0x98+var_14]|33-147
50850|code|BL              sub_C4B8|255-247-9-255
50854|code|CBNZ            R0, loc_C6B4|40-185
50856|code|LDR             R2, [SP,#0x98+var_14]|33-154
50858|code|LDR             R3, [R4]|35-104
50860|code|CMP             R2, R3|154-66
50862|code|BNE             loc_C6CC|13-209
50864|code|ADD             SP, SP, #0x88|34-176
50866|code|POP             {R4-R6,PC}|112-189
50868|code|MOV             R0, R5; set|40-70
50870|code|MOV             R1, R6; signo|49-70
50872|code|BLX             sigismember|250-247-170-232
50876|code|ADDS            R3, R0, #1|67-28
50878|code|BNE             loc_C6A8|243-209
50880|code|LDR             R0, =(aSigismember_0 - 0xC6C6); "sigismember"|5-72
50882|code|ADD             R0, PC; "sigismember"|120-68
50884|code|BL              logSystemError|252-247-64-253
50888|code|MOVS            R0, #0|0-32
50890|code|B               loc_C6A8|237-231
50892|code|BLX             __stack_chk_fail|249-247-178-239
50896|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC692|66-134-1-0
50900|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
50904|data|DCD aSigismember_0 - 0xC6C6; "sigismember"|194-89-0-0
50908|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC6E4)|16-75
50910|code|PUSH            {R4-R7,LR}|240-181
50912|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
50914|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|16-76
50916|code|SUB             SP, SP, #0x8C|163-176
50918|code|ADD             R5, SP, #0xA0+var_9C|1-173
50920|code|MOV             R6, R1|14-70
50922|code|MOV             R7, R2|23-70
50924|code|MOV             R1, R0|1-70
50926|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
50928|code|MOV             R2, R5|42-70
50930|code|MOVS            R0, #0|0-32
50932|code|LDR             R3, [R4]|35-104
50934|code|STR             R3, [SP,#0xA0+var_1C]|33-147
50936|code|BL              sub_C4B8|255-247-222-254
50940|code|CBZ             R0, loc_C70E|56-177
50942|code|MOV             R0, R7|56-70
50944|code|BLX             R6|176-71
50946|code|MOV             R1, R5|41-70
50948|code|MOVS            R0, #2|2-32
50950|code|MOVS            R2, #0|0-34
50952|code|BL              sub_C4B8|255-247-214-254
50956|code|MOVS            R0, #1|1-32
50958|code|LDR             R2, [SP,#0xA0+var_1C]|33-154
50960|code|LDR             R3, [R4]|35-104
50962|code|CMP             R2, R3|154-66
50964|code|BNE             loc_C71A|1-209
50966|code|ADD             SP, SP, #0x8C|35-176
50968|code|POP             {R4-R7,PC}|240-189
50970|code|BLX             __stack_chk_fail|249-247-140-239
50974|data|ALIGN 0x10|0-191
50976|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC6E4|240-133-1-0
50980|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
50984|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC730)|16-75
50986|code|PUSH            {R4-R7,LR}|240-181
50988|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
50990|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|16-76
50992|code|SUB             SP, SP, #0x8C|163-176
50994|code|ADD             R7, SP, #4|1-175
50996|code|MOV             R5, R0|5-70
50998|code|MOV             R6, R1|14-70
51000|code|MOV             R1, R5|41-70
51002|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
51004|code|MOV             R0, R7|56-70
51006|code|MOV             R5, R2|21-70
51008|code|LDR             R3, [R4]|35-104
51010|code|STR             R3, [SP,#0x8C+var_8]|33-147
51012|code|BL              sub_C478|255-247-152-254
51016|code|CBZ             R0, loc_C75A|56-177
51018|code|MOV             R0, R7|56-70
51020|code|MOV             R1, R6|49-70
51022|code|MOV             R2, R5|42-70
51024|code|BL              asyncCallWithSignalsBlocked|255-247-196-255
51028|code|ADDS            R0, #0|0-48
51030|code|IT NE|24-191
51032|code|MOVNE           R0, #1|1-32
51034|code|LDR             R2, [SP,#0x8C+var_8]|33-154
51036|code|LDR             R3, [R4]|35-104
51038|code|CMP             R2, R3|154-66
51040|code|BNE             loc_C766|1-209
51042|code|ADD             SP, SP, #0x8C|35-176
51044|code|POP             {R4-R7,PC}|240-189
51046|code|BLX             __stack_chk_fail|249-247-102-239
51050|data|ALIGN 4|0-191
51052|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC730|164-133-1-0
51056|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
51060|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC77C)|18-75
51062|code|PUSH            {R4-R7,LR}|240-181
51064|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
51066|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|18-76
51068|code|SUB             SP, SP, #0x8C|163-176
51070|code|ADD             R5, SP, #0xA0+set|1-173
51072|code|MOV             R6, R0|6-70
51074|code|MOV             R7, R1|15-70
51076|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
51078|code|MOV             R0, R5; set|40-70
51080|code|LDR             R3, [R4]|35-104
51082|code|STR             R3, [SP,#0xA0+var_1C]|33-147
51084|code|BLX             sigfillset|249-247-62-238
51088|code|ADDS            R0, #1|1-48
51090|code|BEQ             loc_C7B0|13-208
51092|code|MOV             R0, R5|40-70
51094|code|MOV             R1, R6|49-70
51096|code|MOV             R2, R7|58-70
51098|code|BL              asyncCallWithSignalsBlocked|255-247-159-255
51102|code|ADDS            R0, #0|0-48
51104|code|IT NE|24-191
51106|code|MOVNE           R0, #1|1-32
51108|code|LDR             R2, [SP,#0xA0+var_1C]|33-154
51110|code|LDR             R3, [R4]|35-104
51112|code|CMP             R2, R3|154-66
51114|code|BNE             loc_C7BC|7-209
51116|code|ADD             SP, SP, #0x8C|35-176
51118|code|POP             {R4-R7,PC}|240-189
51120|code|LDR             R0, =(aSigfillset_0 - 0xC7B6); "sigfillset"|5-72
51122|code|ADD             R0, PC; "sigfillset"|120-68
51124|code|BL              logSystemError|252-247-200-252
51128|code|MOVS            R0, #0|0-32
51130|code|B               loc_C7A4|243-231
51132|code|BLX             __stack_chk_fail|249-247-58-239
51136|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC77C|88-133-1-0
51140|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
51144|data|DCD aSigfillset_0 - 0xC7B6; "sigfillset"|222-88-0-0
51148|code|PUSH            {R4-R7,LR}|240-181
51150|code|SUB             SP, SP, #0xC|131-176
51152|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xC7DA)|25-77
51154|code|MOV             R7, R0|7-70
51156|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|25-75
51158|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
51160|code|LDR             R6, [R5,R3]; __stack_chk_guard|238-88
51162|code|LDR             R3, [R6]|51-104
51164|code|STR             R3, [SP,#0x20+var_1C]|1-147
51166|code|BL              getElementItem|0-240-187-251
51170|code|LDR             R2, =(aSignalDRemoved - 0xC7E8); "signal %d removed"|23-74
51172|code|ADD             R2, PC; "signal %d removed"|122-68
51174|code|MOV             R3, R0|3-70
51176|code|MOVS            R0, #0x89|137-32
51178|code|LDR             R4, [R3]|28-104
51180|code|LDR             R1, [R3,#4]|89-104
51182|code|LDR             R3, [R4]|35-104
51184|code|BL              logSymbol|252-247-112-252
51188|code|MOV             R0, R7|56-70
51190|code|BL              deleteElement|0-240-113-251
51194|code|LDR             R0, [R4,#8]|160-104
51196|code|BL              getQueueSize|0-240-20-252
51200|code|CBNZ            R0, loc_C826|136-185
51202|code|MOV             R2, R0|2-70
51204|code|LDR             R1, [R4,#0xC]|225-104
51206|code|LDR             R0, [R4]|32-104
51208|code|BL              asyncHandleSignal|255-247-214-254
51212|code|LDRB            R1, [R4,#0x10]|33-124
51214|code|LDR             R0, [R4]|32-104
51216|code|AND.W           R1, R1, #1|1-240-1-1
51220|code|BL              asyncSetSignalBlocked|255-247-18-255
51224|code|LDR             R3, =(asyncDeleteSignalEntry_ptr - 0x24CD4)|10-75
51226|code|ADD             R1, SP, #0x20+var_18|2-169
51228|code|STR.W           R4, [R1,#-8]!|65-248-8-77
51232|code|LDR             R0, [R5,R3]; asyncDeleteSignalEntry|232-88
51234|code|BL              asyncCallWithAllSignalsBlocked|255-247-167-255
51238|code|LDR             R2, [SP,#0x20+var_1C]|1-154
51240|code|LDR             R3, [R6]|51-104
51242|code|CMP             R2, R3|154-66
51244|code|BNE             loc_C832|1-209
51246|code|ADD             SP, SP, #0xC|3-176
51248|code|POP             {R4-R7,PC}|240-189
51250|code|BLX             __stack_chk_fail|249-247-0-239
51254|data|ALIGN 4|0-191
51256|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC7DA|250-132-1-0
51260|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
51264|data|DCD aSignalDRemoved - 0xC7E8; "signal %d removed"|184-88-0-0
51268|data|DCD asyncDeleteSignalEntry_ptr - 0x24CD4|40-3-0-0
51272|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xC850)|33-74
51274|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|34-75
51276|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
51278|code|PUSH.W          {R4-R8,LR}|45-233-240-65
51282|code|SUB             SP, SP, #0x10|132-176
51284|code|LDR             R5, [R2,R3]; __stack_chk_guard|213-88
51286|code|LDR             R6, [R0]|6-104
51288|code|LDR             R3, [R5]|43-104
51290|code|LDR             R0, [R6,#8]|176-104
51292|code|STR             R3, [SP,#0x28+var_1C]|3-147
51294|code|BL              getQueueHead|0-240-235-251
51298|code|CBZ             R0, loc_C8A2|240-177
51300|code|MOV             R8, R0|128-70
51302|code|BL              getElementItem|0-240-119-251
51306|code|LDR.W           LR, [R6]|214-248-0-224
51310|code|LDR             R2, =(aSignalDStartin - 0xC876); "signal %d starting"|26-74
51312|code|MOV             R3, LR|115-70
51314|code|ADD             R2, PC; "signal %d starting"|122-68
51316|code|STR.W           LR, [SP,#0x28+var_24]|205-248-4-224
51320|code|MOV             R4, R0|4-70
51322|code|MOVS            R0, #0x89|137-32
51324|code|LDR             R6, [R4,#4]|102-104
51326|code|LDR             R7, [R4,#8]|167-104
51328|code|MOV             R1, R6|49-70
51330|code|STR             R7, [SP,#0x28+var_20]|2-151
51332|code|BL              logSymbol|252-247-38-252
51336|code|LDRB            R3, [R4,#0xC]|35-123
51338|code|ADD             R0, SP, #0x28+var_24|1-168
51340|code|ORR.W           R3, R3, #1|67-240-1-3
51344|code|STRB            R3, [R4,#0xC]|35-115
51346|code|BLX             R6|176-71
51348|code|CBZ             R0, loc_C8B0|96-177
51350|code|LDRB            R3, [R4,#0xC]|35-123
51352|code|BFC.W           R3, #0, #1|111-243-0-3
51356|code|STRB            R3, [R4,#0xC]|35-115
51358|code|LSLS            R3, R3, #0x1E|155-7
51360|code|BMI             loc_C8C4|16-212
51362|code|LDR             R2, [SP,#0x28+var_1C]|3-154
51364|code|LDR             R3, [R5]|43-104
51366|code|CMP             R2, R3|154-66
51368|code|BNE             loc_C8CC|16-209
51370|code|ADD             SP, SP, #0x10|4-176
51372|code|POP.W           {R4-R8,PC}|189-232-240-129
51376|code|LDRB            R3, [R4,#0xC]|35-123
51378|code|ORR.W           R3, R3, #2|67-240-2-3
51382|code|STRB            R3, [R4,#0xC]|35-115
51384|code|LDRB            R3, [R4,#0xC]|35-123
51386|code|BFC.W           R3, #0, #1|111-243-0-3
51390|code|STRB            R3, [R4,#0xC]|35-115
51392|code|LSLS            R3, R3, #0x1E|155-7
51394|code|BPL             loc_C8A2|238-213
51396|code|MOV             R0, R8|64-70
51398|code|BL              sub_C7CC|255-247-129-255
51402|code|B               loc_C8A2|234-231
51404|code|BLX             __stack_chk_fail|249-247-178-238
51408|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC850|132-132-1-0
51412|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
51416|data|DCD aSignalDStartin - 0xC876; "signal %d starting"|62-88-0-0
51420|code|PUSH            {R4,LR}|16-181
51422|code|MOV             R4, R0|4-70
51424|code|BL              getElementItem|0-240-58-251
51428|code|LDRB            R3, [R0,#0xC]|3-123
51430|code|LSLS            R2, R3, #0x1F|218-7
51432|code|BPL             loc_C8F2|3-213
51434|code|ORR.W           R3, R3, #2|67-240-2-3
51438|code|STRB            R3, [R0,#0xC]|3-115
51440|code|POP             {R4,PC}|16-189
51442|code|MOV             R0, R4|32-70
51444|code|POP.W           {R4,LR}|189-232-16-64
51448|code|B               sub_C7CC|104-231
51450|data|ALIGN 4|0-191
51452|code|PUSH.W          {R4-R10,LR}|45-233-240-71
51456|code|SUB             SP, SP, #0x10|132-176
51458|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0xC90E)|60-79
51460|code|MOV             R8, R0|128-70
51462|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|60-75
51464|code|MOV             R5, R1|13-70
51466|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
51468|code|LDR.W           R9, [R7,R3]; __stack_chk_guard|87-248-3-144
51472|code|LDR.W           R3, [R9]|217-248-0-48
51476|code|STR             R3, [SP,#0x30+var_24]|3-147
51478|code|BL              sub_C4D4|255-247-221-253
51482|code|MOV             R4, R0|4-70
51484|code|CMP             R0, #0|0-40
51486|code|BEQ             loc_C9D2|88-208
51488|code|ADDS            R5, #0|0-53
51490|code|LDR             R6, [R0]|6-104
51492|code|IT NE|24-191
51494|code|MOVNE           R5, #1|1-37
51496|code|CMP             R6, #0|0-46
51498|code|ITE NE|20-191
51500|code|MOVNE           R3, #0|0-35
51502|code|ANDEQ.W         R3, R5, #1|5-240-1-3
51506|code|CMP             R3, #0|0-43
51508|code|BNE             loc_C9D6|79-209
51510|code|CMP             R6, #0|0-46
51512|code|BEQ             loc_C9D2|75-208
51514|code|ADD.W           R10, SP, #0x30+var_20|13-241-16-10
51518|code|LDR             R1, =(loc_C464+1 - 0xC94A)|47-73
51520|code|MOV             R0, R6|48-70
51522|code|STR.W           R8, [R10,#-0x10]!|74-248-16-141
51526|code|ADD             R1, PC; loc_C464|121-68
51528|code|MOV             R2, R10|82-70
51530|code|BL              findElement|0-240-171-251
51534|code|MOV             R4, R0|4-70
51536|code|CBZ             R4, loc_C962|60-177
51538|code|LDR             R2, [SP,#0x30+var_24]|3-154
51540|code|LDR.W           R3, [R9]|217-248-0-48
51544|code|CMP             R2, R3|154-66
51546|code|BNE             loc_C9EE|72-209
51548|code|ADD             SP, SP, #0x10|4-176
51550|code|POP.W           {R4-R10,PC}|189-232-240-135
51554|code|CMP             R5, #0|0-45
51556|code|BEQ             loc_C9D2|53-208
51558|code|MOVS            R0, #0x14; size|20-32
51560|code|BLX             malloc|249-247-14-239
51564|code|MOV             R5, R0|5-70
51566|code|CMP             R0, #0|0-40
51568|code|BEQ             loc_C9E6|57-208
51570|code|ADD.W           R3, R0, #8|0-241-8-3
51574|code|LDR             R2, =(asyncHandlePendingSignal_ptr - 0x24CD4)|34-74
51576|code|STR             R4, [R0,#4]|68-96
51578|code|MOV             R1, R0|1-70
51580|code|STR.W           R4, [R3],#4|67-248-4-75
51584|code|STR.W           R4, [R3],#4|67-248-4-75
51588|code|STR             R4, [R3]|28-96
51590|code|STR.W           R8, [R0]|192-248-0-128
51594|code|LDR             R0, [R7,R2]; asyncHandlePendingSignal|184-88
51596|code|BL              asyncNewEvent|255-247-8-253
51600|code|STR             R0, [R5,#4]|104-96
51602|code|CBZ             R0, loc_C9CC|216-177
51604|code|LDR             R0, =(loc_C474+1 - 0xC99C)|27-72
51606|code|MOV             R1, R4|33-70
51608|code|ADD             R0, PC; loc_C474|120-68
51610|code|BL              newQueue|0-240-223-250
51614|code|STR             R0, [R5,#8]|168-96
51616|code|CBZ             R0, loc_C9C6|136-177
51618|code|LDR             R1, =(off_2501C - 0xC9A8)|25-73
51620|code|ADD             R1, PC; off_2501C|121-68
51622|code|BL              setQueueData|0-240-67-251
51626|code|LDR             R3, =(asyncAddSignalEntry_ptr - 0x24CD4)|24-75
51628|code|STR             R6, [SP,#0x30+var_30]|0-150
51630|code|MOV             R1, R10|81-70
51632|code|STR             R5, [SP,#0x30+var_2C]|1-149
51634|code|STR             R4, [SP,#0x30+var_28]|2-148
51636|code|LDR             R0, [R7,R3]; asyncAddSignalEntry|248-88
51638|code|BL              asyncCallWithAllSignalsBlocked|255-247-221-254
51642|code|LDR             R0, [SP,#0x30+var_28]|2-152
51644|code|CMP             R0, #0|0-40
51646|code|BNE             loc_C952|200-209
51648|code|LDR             R0, [R5,#8]|168-104
51650|code|BL              deallocateQueue|0-240-253-250
51654|code|LDR             R0, [R5,#4]|104-104
51656|code|BL              asyncDiscardEvent|255-247-52-253
51660|code|MOV             R0, R5; ptr|40-70
51662|code|BLX             free|249-247-186-236
51666|code|MOVS            R0, #0|0-32
51668|code|B               loc_C952|189-231
51670|code|LDR             R0, =(sub_C554+1 - 0xC9DE)|14-72
51672|code|MOVS            R1, #0|0-33
51674|code|ADD             R0, PC; sub_C554|120-68
51676|code|BL              newQueue|0-240-190-250
51680|code|MOV             R6, R0|6-70
51682|code|STR             R0, [R4]|32-96
51684|code|B               loc_C936|167-231
51686|code|BL              logMallocError|252-247-185-251
51690|code|MOV             R0, R5|40-70
51692|code|B               loc_C952|177-231
51694|code|BLX             __stack_chk_fail|249-247-34-238
51698|data|ALIGN 4|0-191
51700|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC90E|198-131-1-0
51704|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
51708|data|DCD loc_C464+1 - 0xC94A|27-251-255-255
51712|data|DCD asyncHandlePendingSignal_ptr - 0x24CD4|0-3-0-0
51716|data|DCD loc_C474+1 - 0xC99C|217-250-255-255
51720|data|DCD off_2501C - 0xC9A8|116-134-1-0
51724|data|DCD asyncAddSignalEntry_ptr - 0x24CD4|124-2-0-0
51728|data|DCD sub_C554+1 - 0xC9DE|119-251-255-255
51732|code|PUSH            {R3,LR}|8-181
51734|code|MOVS            R1, #0|0-33
51736|code|BL              sub_C8FC|255-247-112-255
51740|code|CBZ             R0, locret_CA2E|56-177
51742|code|BL              getElementItem|0-240-155-250
51746|code|MOVS            R1, #0|0-33
51748|code|POP.W           {R3,LR}|189-232-8-64
51752|code|LDR             R0, [R0,#4]|64-104
51754|code|B.W             asyncSignalEvent|255-247-147-188
51758|code|POP             {R3,PC}|8-189
51760|code|PUSH.W          {R3-R11,LR}|45-233-248-79
51764|code|MOVS            R1, #1|1-33
51766|code|MOV             R7, R0|7-70
51768|code|LDR             R0, [R0]|0-104
51770|code|BL              sub_C8FC|255-247-95-255
51774|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xCA46)|223-248-208-160
51778|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
51780|code|CMP             R0, #0|0-40
51782|code|BEQ             loc_CAF0|83-208
51784|code|MOV             R11, R0|131-70
51786|code|BL              getElementItem|0-240-133-250
51790|code|MOV             R5, R0|5-70
51792|code|LDR             R0, [R0,#8]|128-104
51794|code|BL              getQueueSize|0-240-233-250
51798|code|CLZ.W           R8, R0|176-250-128-248
51802|code|MOVS            R0, #0x10; size|16-32
51804|code|BLX             malloc|249-247-148-238
51808|code|MOV.W           R8, R8,LSR#5|79-234-88-24
51812|code|MOV             R4, R0|4-70
51814|code|CMP             R0, #0|0-40
51816|code|BEQ             loc_CB02|75-208
51818|code|MOV.W           R9, #0|79-240-0-9
51822|code|LDR             R2, [R7,#4]|122-104
51824|code|STR.W           R9, [R0,#0xC]|192-248-12-144
51828|code|MOV             R1, R0|1-70
51830|code|LDRB            R6, [R0,#0xC]|6-123
51832|code|LDR             R3, [R7,#8]|187-104
51834|code|AND.W           R6, R6, #0xFE|6-240-254-6
51838|code|STR             R5, [R0]|5-96
51840|code|BFI.W           R6, R9, #1, #1|105-243-65-6
51844|code|LDR             R0, [R5,#8]|168-104
51846|code|STRB            R6, [R4,#0xC]|38-115
51848|code|STR             R2, [R4,#4]|98-96
51850|code|STR             R3, [R4,#8]|163-96
51852|code|BL              enqueueItem|0-240-90-251
51856|code|MOV             R6, R0|6-70
51858|code|CBZ             R0, loc_CAE4|56-179
51860|code|LDR             R2, =(aSignalDAdded - 0xCA9E); "signal %d added"|31-74
51862|code|MOVS            R0, #0x89|137-32
51864|code|LDR             R1, [R4,#4]|97-104
51866|code|ADD             R2, PC; "signal %d added"|122-68
51868|code|LDR             R3, [R5]|43-104
51870|code|BL              logSymbol|252-247-25-251
51874|code|CMP.W           R8, #0|184-241-0-15
51878|code|BNE             loc_CAAE|2-209
51880|code|MOV             R0, R6|48-70
51882|code|POP.W           {R3-R11,PC}|189-232-248-143
51886|code|LDR             R3, =(asyncHandleMonitoredSignal_ptr - 0x24CD4)|26-75
51888|code|ADD.W           R2, R5, #0xC|5-241-12-2
51892|code|LDR             R0, [R7]|56-104
51894|code|LDR.W           R1, [R10,R3]; asyncHandleMonitoredSignal|90-248-3-16
51898|code|BL              asyncHandleSignal|255-247-125-253
51902|code|CBZ             R0, loc_CADE|112-177
51904|code|LDR             R0, [R7]|56-104
51906|code|BL              asyncIsSignalBlocked|255-247-225-253
51910|code|LDRB            R3, [R5,#0x10]|43-124
51912|code|BFI.W           R3, R0, #0, #1|96-243-0-3
51916|code|STRB            R3, [R5,#0x10]|43-116
51918|code|LSLS            R3, R3, #0x1F|219-7
51920|code|BPL             loc_CAA8|234-213
51922|code|LDR             R0, [R5]|40-104
51924|code|MOV             R1, R9|73-70
51926|code|BL              asyncSetSignalBlocked|255-247-177-253
51930|code|CMP             R0, #0|0-40
51932|code|BNE             loc_CAA8|228-209
51934|code|MOV             R0, R6|48-70
51936|code|BL              deleteElement|0-240-252-249
51940|code|MOV             R0, R4; ptr|32-70
51942|code|BLX             free|249-247-46-236
51946|code|CMP.W           R8, #0|184-241-0-15
51950|code|BNE             loc_CAF6|2-209
51952|code|MOVS            R0, #0|0-32
51954|code|POP.W           {R3-R11,PC}|189-232-248-143
51958|code|MOV             R0, R11|88-70
51960|code|BL              deleteElement|0-240-240-249
51964|code|MOVS            R0, #0|0-32
51966|code|POP.W           {R3-R11,PC}|189-232-248-143
51970|code|BL              logMallocError|252-247-43-251
51974|code|CMP.W           R8, #0|184-241-0-15
51978|code|BEQ             loc_CAF0|241-208
51980|code|B               loc_CAF6|243-231
51982|data|ALIGN 0x10|0-191
51984|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xCA46|142-130-1-0
51988|data|DCD aSignalDAdded - 0xCA9E; "signal %d added"|42-86-0-0
51992|data|DCD asyncHandleMonitoredSignal_ptr - 0x24CD4|32-3-0-0
51996|code|PUSH            {R3-R5,LR}|56-181
51998|code|MOV             R5, R0|5-70
52000|code|MOV             R4, R1|12-70
52002|code|BL              sub_C4D4|255-247-215-252
52006|code|CBZ             R0, locret_CB3A|64-177
52008|code|ADD.W           R0, R0, #0x104|0-245-130-112
52012|code|MOV             R1, R5|41-70
52014|code|MOV             R2, R4|34-70
52016|code|BL              asyncCallWithSignalsBlocked|255-247-212-253
52020|code|ADDS            R0, #0|0-48
52022|code|IT NE|24-191
52024|code|MOVNE           R0, #1|1-32
52026|code|POP             {R3-R5,PC}|56-189
52028|code|PUSH            {R4,R5,LR}|48-181
52030|code|SUB             SP, SP, #0x14|133-176
52032|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xCB48)|10-76
52034|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|11-77
52036|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
52038|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
52040|code|STMEA.W         SP, {R1,R2}|141-232-6-0
52044|code|MOV             R2, SP|106-70
52046|code|LDR             R1, =(sub_CA30+1 - 0xCB56)|9-73
52048|code|LDR             R5, [R4]|37-104
52050|code|ADD             R1, PC; sub_CA30|121-68
52052|code|STR             R3, [SP,#0x20+var_18]|2-147
52054|code|STR             R5, [SP,#0x20+var_14]|3-149
52056|code|BL              asyncMakeHandle|254-247-212-250
52060|code|LDR             R2, [SP,#0x20+var_14]|3-154
52062|code|LDR             R3, [R4]|35-104
52064|code|CMP             R2, R3|154-66
52066|code|BNE             loc_CB68|1-209
52068|code|ADD             SP, SP, #0x14|5-176
52070|code|POP             {R4,R5,PC}|48-189
52072|code|BLX             __stack_chk_fail|249-247-100-237
52076|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xCB48|140-129-1-0
52080|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
52084|data|DCD sub_CA30+1 - 0xCB56|219-254-255-255
52088|code|PUSH            {R4-R6,LR}|112-181
52090|code|MOV             R5, R0|5-70
52092|code|BL              sub_C4D4|255-247-170-252
52096|code|MOV             R4, R0|4-70
52098|code|CBZ             R0, loc_CBB2|176-177
52100|code|ADD.W           R0, R0, #0x104; set|0-245-130-112
52104|code|MOV             R1, R5; signo|41-70
52106|code|BLX             sigismember|249-247-66-238
52110|code|CBZ             R0, loc_CBA2|64-177
52112|code|ADDS            R6, R4, #4|38-29
52114|code|MOV             R1, R5; signo|41-70
52116|code|MOV             R0, R6; set|48-70
52118|code|BLX             sigismember|249-247-60-238
52122|code|CBZ             R0, loc_CBB6|96-177
52124|code|LDR             R2, =(aSignalNumberAl - 0xCBA2); "signal number already claimed"|13-74
52126|code|ADD             R2, PC; "signal number already claimed"|122-68
52128|code|B               loc_CBA6|1-224
52130|code|LDR             R2, =(aSignalNumberNo - 0xCBA8); "signal number not claimable"|13-74
52132|code|ADD             R2, PC; "signal number not claimable"|122-68
52134|code|LDR             R1, =(aSD - 0xCBB0); "%s: %d"|13-73
52136|code|MOV             R3, R5|43-70
52138|code|MOVS            R0, #3|3-32
52140|code|ADD             R1, PC; "%s: %d"|121-68
52142|code|BL              logMessage|252-247-73-250
52146|code|MOVS            R0, #0|0-32
52148|code|POP             {R4-R6,PC}|112-189
52150|code|ADD.W           R0, R4, #0x84; set|4-241-132-0
52154|code|MOV             R1, R5; signo|41-70
52156|code|BLX             sigismember|249-247-40-238
52160|code|CBZ             R0, loc_CBC8|16-177
52162|code|LDR             R2, =(aSignalNumberIn - 0xCBC8); "signal number in use"|7-74
52164|code|ADD             R2, PC; "signal number in use"|122-68
52166|code|B               loc_CBA6|238-231
52168|code|MOV             R0, R6; set|48-70
52170|code|MOV             R1, R5; signo|41-70
52172|code|BLX             sigaddset|249-247-134-236
52176|code|MOVS            R0, #1|1-32
52178|code|POP             {R4-R6,PC}|112-189
52180|data|DCD aSignalNumberAl - 0xCBA2; "signal number already claimed"|82-85-0-0
52184|data|DCD aSignalNumberNo - 0xCBA8; "signal number not claimable"|48-85-0-0
52188|data|DCD aSD - 0xCBB0; "%s: %d"|124-85-0-0
52192|data|DCD aSignalNumberIn - 0xCBC8; "signal number in use"|76-85-0-0
52196|code|PUSH            {R3-R5,LR}|56-181
52198|code|MOV             R5, R0|5-70
52200|code|BL              sub_C4D4|255-247-116-252
52204|code|CBZ             R0, loc_CBFA|40-177
52206|code|ADDS            R4, R0, #4|4-29
52208|code|MOV             R1, R5; signo|41-70
52210|code|MOV             R0, R4; set|32-70
52212|code|BLX             sigismember|249-247-12-238
52216|code|CBNZ            R0, loc_CC0A|56-185
52218|code|LDR             R1, =(aSignalNumberNo_0 - 0xCC04); "signal number not claimed: %d"|7-73
52220|code|MOV             R2, R5|42-70
52222|code|MOVS            R0, #3|3-32
52224|code|ADD             R1, PC; "signal number not claimed: %d"|121-68
52226|code|BL              logMessage|252-247-31-250
52230|code|MOVS            R0, #0|0-32
52232|code|POP             {R3-R5,PC}|56-189
52234|code|MOV             R0, R4; set|32-70
52236|code|MOV             R1, R5; signo|41-70
52238|code|BLX             sigdelset|249-247-42-237
52242|code|MOVS            R0, #1|1-32
52244|code|POP             {R3-R5,PC}|56-189
52246|data|ALIGN 4|0-191
52248|data|DCD aSignalNumberNo_0 - 0xCC04; "signal number not claimed: %d"|48-85-0-0
52252|code|PUSH.W          {R4-R8,LR}|45-233-240-65
52256|code|BL              sub_C4D4|255-247-88-252
52260|code|MOV             R5, R0|5-70
52262|code|CBZ             R0, loc_CC7C|72-179
52264|code|LDR.W           R4, [R0,#0x184]|208-248-132-65
52268|code|LDR.W           R3, [R0,#0x188]|208-248-136-49
52272|code|CMP             R4, R3|156-66
52274|code|BGT             loc_CC7C|35-220
52276|code|ADD.W           R6, R0, #0x104|0-245-130-118
52280|code|ADDS            R7, R0, #4|7-29
52282|code|ADD.W           R8, R0, #0x84|0-241-132-8
52286|code|B               loc_CC4A|4-224
52288|code|LDR.W           R3, [R5,#0x188]|213-248-136-49
52292|code|ADDS            R4, #1|1-52
52294|code|CMP             R3, R4|163-66
52296|code|BLT             loc_CC7C|24-219
52298|code|MOV             R0, R6; set|48-70
52300|code|MOV             R1, R4; signo|33-70
52302|code|BLX             sigismember|249-247-224-237
52306|code|CMP             R0, #0|0-40
52308|code|BEQ             loc_CC40|244-208
52310|code|MOV             R0, R7; set|56-70
52312|code|MOV             R1, R4; signo|33-70
52314|code|BLX             sigismember|249-247-218-237
52318|code|CMP             R0, #0|0-40
52320|code|BNE             loc_CC40|238-209
52322|code|MOV             R0, R8; set|64-70
52324|code|MOV             R1, R4; signo|33-70
52326|code|BLX             sigismember|249-247-212-237
52330|code|CMP             R0, #0|0-40
52332|code|BNE             loc_CC40|232-209
52334|code|MOV             R0, R8; set|64-70
52336|code|MOV             R1, R4; signo|33-70
52338|code|BLX             sigaddset|249-247-52-236
52342|code|MOV             R0, R4|32-70
52344|code|POP.W           {R4-R8,PC}|189-232-240-129
52348|code|LDR             R1, =(aNoObtainableSi - 0xCC84); "no obtainable signal number"|3-73
52350|code|MOVS            R0, #3|3-32
52352|code|ADD             R1, PC; "no obtainable signal number"|121-68
52354|code|BL              logMessage|252-247-223-249
52358|code|MOVS            R0, #0|0-32
52360|code|POP.W           {R4-R8,PC}|189-232-240-129
52364|data|DCD aNoObtainableSi - 0xCC84; "no obtainable signal number"|208-84-0-0
52368|code|PUSH            {R3-R5,LR}|56-181
52370|code|MOV             R5, R0|5-70
52372|code|BL              sub_C4D4|255-247-30-252
52376|code|CBZ             R0, loc_CCA8|48-177
52378|code|ADD.W           R4, R0, #0x84|0-241-132-4
52382|code|MOV             R1, R5; signo|41-70
52384|code|MOV             R0, R4; set|32-70
52386|code|BLX             sigismember|249-247-182-237
52390|code|CBNZ            R0, loc_CCB8|56-185
52392|code|LDR             R1, =(aSignalNumberNo_1 - 0xCCB2); "signal number not obtained: %d"|6-73
52394|code|MOV             R2, R5|42-70
52396|code|MOVS            R0, #3|3-32
52398|code|ADD             R1, PC; "signal number not obtained: %d"|121-68
52400|code|BL              logMessage|252-247-200-249
52404|code|MOVS            R0, #0|0-32
52406|code|POP             {R3-R5,PC}|56-189
52408|code|MOV             R0, R4; set|32-70
52410|code|MOV             R1, R5; signo|41-70
52412|code|BLX             sigdelset|249-247-210-236
52416|code|MOVS            R0, #1|1-32
52418|code|POP             {R3-R5,PC}|56-189
52420|data|DCD aSignalNumberNo_1 - 0xCCB2; "signal number not obtained: %d"|190-84-0-0
52424|code|PUSH            {R3,LR}|8-181
52426|code|BL              sub_C4D4|255-247-3-252
52430|code|MOV             R1, R0|1-70
52432|code|CBZ             R0, locret_CCE6|72-177
52434|code|MOVS            R0, #0|0-32
52436|code|ADD.W           R1, R1, #0x104|1-245-130-113
52440|code|MOV             R2, R0|2-70
52442|code|BL              sub_C4B8|255-247-237-251
52446|code|ADDS            R0, #0|0-48
52448|code|IT NE|24-191
52450|code|MOVNE           R0, #1|1-32
52452|code|POP             {R3,PC}|8-189
52454|code|POP             {R3,PC}|8-189
52456|code|PUSH            {R4-R6,LR}|112-181
52458|code|MOV             R5, R0|5-70
52460|code|LDR             R4, =(unk_12190 - 0xCCF4)|32-76
52462|code|MOVS            R0, #2|2-32
52464|code|ADD             R4, PC; unk_12190|124-68
52466|code|MOVS            R1, #1|1-33
52468|code|BL              asyncSetSignalBlocked|255-247-162-252
52472|code|LDR.W           R0, [R4,#4]!|84-248-4-15
52476|code|CMP             R0, #0|0-40
52478|code|BNE             loc_CCF2|248-209
52480|code|LDR             R6, [R5]|46-104
52482|code|MOV             R0, R6; s|48-70
52484|code|BLX             strlen|249-247-72-237
52488|code|ADDS            R0, #9; size|9-48
52490|code|BLX             malloc|249-247-62-237
52494|code|MOV             R4, R0|4-70
52496|code|CBZ             R0, loc_CD60|48-179
52498|code|LDR             R3, [R5,#0x10]|43-105
52500|code|MOV             R1, R6; src|49-70
52502|code|LDR             R2, [R5,#0xC]|234-104
52504|code|ADDS            R0, #8; dest|8-48
52506|code|STM.W           R4, {R2,R3}|132-232-12-0
52510|code|BLX             strcpy|249-247-76-236
52514|code|LDR             R1, =(aCreatingThread - 0xCD2C); "creating thread: %s"|20-73
52516|code|MOV             R2, R6|50-70
52518|code|MOVS            R0, #0x89|137-32
52520|code|ADD             R1, PC; "creating thread: %s"|121-68
52522|code|BL              logMessage|252-247-139-249
52526|code|LDR             R2, =(sub_CE40+1 - 0xCD3A)|18-74
52528|code|LDR             R0, [R5,#4]; newthread|104-104
52530|code|MOV             R3, R4; arg|35-70
52532|code|LDR             R1, [R5,#8]; attr|169-104
52534|code|ADD             R2, PC; sub_CE40 ; start_routine|122-68
52536|code|BLX             pthread_create|249-247-154-237
52540|code|STR             R0, [R5,#0x14]|104-97
52542|code|CBNZ            R0, loc_CD42|0-185
52544|code|POP             {R4-R6,PC}|112-189
52546|code|LDR             R5, [R5]|45-104
52548|code|BLX             strerror|249-247-42-235
52552|code|LDR             R1, =(unk_121B4 - 0xCD50)|12-73
52554|code|MOV             R2, R5|42-70
52556|code|ADD             R1, PC; unk_121B4|121-68
52558|code|MOV             R3, R0|3-70
52560|code|MOVS            R0, #0x89|137-32
52562|code|BL              logMessage|252-247-119-249
52566|code|MOV             R0, R4; ptr|32-70
52568|code|POP.W           {R4-R6,LR}|189-232-112-64
52572|code|B.W             j_free|249-247-240-186
52576|code|BLX             __errno_location|249-247-152-237
52580|code|LDR             R3, [R0]|3-104
52582|code|STR             R3, [R5,#0x14]|107-97
52584|code|POP.W           {R4-R6,LR}|189-232-112-64
52588|code|B.W             logMallocError|252-247-246-185
52592|data|DCD unk_12190 - 0xCCF4|156-84-0-0
52596|data|DCD aCreatingThread - 0xCD2C; "creating thread: %s"|116-84-0-0
52600|data|DCD sub_CE40+1 - 0xCD3A|7-1-0-0
52604|data|DCD unk_121B4 - 0xCD50|100-84-0-0
52608|code|PUSH            {R4-R7,LR}|240-181
52610|code|SUB             SP, SP, #0x24|137-176
52612|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xCD8E)|13-76
52614|code|MOVS            R7, #0|0-39
52616|code|LDR             R6, =(__stack_chk_guard_ptr - 0x24CD4)|13-78
52618|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
52620|code|LDR             R5, =(createSignalSafeThread_ptr - 0x24CD4)|13-77
52622|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
52624|code|STR             R0, [SP,#0x38+var_34]|1-144
52626|code|STR             R3, [SP,#0x38+var_28]|4-147
52628|code|LDR             R0, [R6]|48-104
52630|code|LDR             R3, [SP,#0x38+arg_0]|14-155
52632|code|STR             R1, [SP,#0x38+var_30]|2-145
52634|code|ADD             R1, SP, #0x38+var_34|1-169
52636|code|STR             R2, [SP,#0x38+var_2C]|3-146
52638|code|STR             R3, [SP,#0x38+var_24]|5-147
52640|code|STR             R0, [SP,#0x38+var_1C]|7-144
52642|code|STR             R7, [SP,#0x38+var_20]|6-151
52644|code|LDR             R0, [R4,R5]; createSignalSafeThread|96-89
52646|code|BL              asyncCallWithObtainableSignalsBlocked|255-247-185-254
52650|code|LDR             R2, [SP,#0x38+var_1C]|7-154
52652|code|LDR             R3, [R6]|51-104
52654|code|LDR             R0, [SP,#0x38+var_20]|6-152
52656|code|CMP             R2, R3|154-66
52658|code|BNE             loc_CDB8|1-209
52660|code|ADD             SP, SP, #0x24 ; '$'|9-176
52662|code|POP             {R4-R7,PC}|240-189
52664|code|BLX             __stack_chk_fail|249-247-60-236
52668|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xCD8E|70-127-1-0
52672|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
52676|data|DCD createSignalSafeThread_ptr - 0x24CD4|248-2-0-0
52680|code|PUSH            {R3-R5,LR}|56-181
52682|code|MOV             R5, R0|5-70
52684|code|BLX             pthread_mutex_lock|249-247-92-234
52688|code|LDR             R2, =(aMutexLock - 0xCDD8); "mutex lock"|4-74
52690|code|MOV             R1, R5|41-70
52692|code|ADD             R2, PC; "mutex lock"|122-68
52694|code|MOV             R4, R0|4-70
52696|code|MOVS            R0, #0x89|137-32
52698|code|BL              logSymbol|252-247-123-249
52702|code|MOV             R0, R4|32-70
52704|code|POP             {R3-R5,PC}|56-189
52706|data|ALIGN 4|0-191
52708|data|DCD aMutexLock - 0xCDD8; "mutex lock"|248-83-0-0
52712|code|LDR             R2, =(aMutexUnlock - 0xCDF2); "mutex unlock"|6-74
52714|code|MOV             R1, R0|1-70
52716|code|PUSH            {R4,LR}|16-181
52718|code|ADD             R2, PC; "mutex unlock"|122-68
52720|code|MOV             R4, R0|4-70
52722|code|MOVS            R0, #0x89|137-32
52724|code|BL              logSymbol|252-247-110-249
52728|code|MOV             R0, R4; mutex|32-70
52730|code|POP.W           {R4,LR}|189-232-16-64
52734|code|B.W             j_pthread_mutex_unlock|249-247-217-189
52738|data|ALIGN 4|0-191
52740|data|DCD aMutexUnlock - 0xCDF2; "mutex unlock"|234-83-0-0
52744|code|PUSH            {R3-R5,LR}|56-181
52746|code|MOV             R5, R1|13-70
52748|code|MOV             R4, R0|4-70
52750|code|BLX             pthread_self|249-247-46-235
52754|code|MOV             R1, R4|33-70
52756|code|MOV             R2, R5|42-70
52758|code|BLX             pthread_getname_np|249-247-218-234
52762|code|CBNZ            R0, loc_CE26|32-185
52764|code|MOV             R0, R4; s|32-70
52766|code|POP.W           {R3-R5,LR}|189-232-56-64
52770|code|B.W             j_strlen|249-247-183-188
52774|code|MOVS            R0, #0|0-32
52776|code|POP             {R3-R5,PC}|56-189
52778|data|ALIGN 4|0-191
52780|code|PUSH            {R4,LR}|16-181
52782|code|MOV             R4, R0|4-70
52784|code|BLX             pthread_self|249-247-28-235
52788|code|MOV             R1, R4|33-70
52790|code|POP.W           {R4,LR}|189-232-16-64
52794|code|B.W             j_pthread_setname_np|249-247-143-186
52798|data|ALIGN 0x10|0-191
52800|code|PUSH            {R4-R6,LR}|112-181
52802|code|ADD.W           R5, R0, #8|0-241-8-5
52806|code|MOV             R4, R0|4-70
52808|code|MOV             R0, R5|40-70
52810|code|BL              setThreadName|255-247-239-255
52814|code|LDR             R1, =(aThreadStarting - 0xCE58); "thread starting: %s"|10-73
52816|code|MOV             R2, R5|42-70
52818|code|MOVS            R0, #0x89|137-32
52820|code|ADD             R1, PC; "thread starting: %s"|121-68
52822|code|BL              logMessage|252-247-245-248
52826|code|LDR             R3, [R4]|35-104
52828|code|LDR             R0, [R4,#4]|96-104
52830|code|BLX             R3|152-71
52832|code|LDR             R1, =(aThreadFinished - 0xCE68); "thread finished: %s"|6-73
52834|code|MOV             R2, R5|42-70
52836|code|ADD             R1, PC; "thread finished: %s"|121-68
52838|code|MOV             R6, R0|6-70
52840|code|MOVS            R0, #0x89|137-32
52842|code|BL              logMessage|252-247-235-248
52846|code|MOV             R0, R4; ptr|32-70
52848|code|BLX             free|249-247-104-234
52852|code|MOV             R0, R6|48-70
52854|code|POP             {R4-R6,PC}|112-189
52856|data|DCD aThreadStarting - 0xCE58; "thread starting: %s"|148-83-0-0
52860|data|DCD aThreadFinished - 0xCE68; "thread finished: %s"|152-83-0-0
52864|code|MOV             R2, R1|10-70
52866|code|MOV             R1, R0|1-70
52868|code|LDR             R3, [R2]|19-104
52870|code|PUSH            {R4}|16-180
52872|code|LDR             R4, [R3,#0x10]|28-105
52874|code|LDR             R0, [R2,#4]|80-104
52876|code|LDR             R2, [R3,#8]|154-104
52878|code|MOV             R3, R4|35-70
52880|code|POP.W           {R4}|93-248-4-75
52884|code|BX              R3|24-71
52886|data|ALIGN 4|0-191
52888|code|SUBS            R0, R1, R0|8-26
52890|code|CLZ.W           R0, R0|176-250-128-240
52894|code|LSRS            R0, R0, #5|64-9
52896|code|BX              LR|112-71
52898|data|ALIGN 4|0-191
52900|code|SUBS            R0, R1, R0|8-26
52902|code|CLZ.W           R0, R0|176-250-128-240
52906|code|LSRS            R0, R0, #5|64-9
52908|code|BX              LR|112-71
52910|data|ALIGN 0x10|0-191
52912|code|PUSH            {R3-R5,LR}|56-181
52914|code|LDR             R5, =(dword_2509C - 0xCEB8)|8-77
52916|code|ADD             R5, PC; dword_2509C|125-68
52918|code|LDR             R0, [R5]; ptr|40-104
52920|code|CBZ             R0, loc_CEC8|48-177
52922|code|LDR             R4, [R0]|4-104
52924|code|STR             R4, [R5]|44-96
52926|code|BLX             free|249-247-66-234
52930|code|MOV             R0, R4|32-70
52932|code|CMP             R4, #0|0-44
52934|code|BNE             loc_CEBA|248-209
52936|code|LDR             R3, =(dword_2509C - 0xCED0)|3-75
52938|code|MOVS            R2, #0|0-34
52940|code|ADD             R3, PC; dword_2509C|123-68
52942|code|STR             R2, [R3,#(dword_250A0 - 0x2509C)]|90-96
52944|code|POP             {R3-R5,PC}|56-189
52946|data|ALIGN 4|0-191
52948|data|DCD dword_2509C - 0xCEB8|228-129-1-0
52952|data|DCD dword_2509C - 0xCED0|204-129-1-0
52956|code|PUSH            {R3-R5,LR}|56-181
52958|code|MOV             R4, R0|4-70
52960|code|LDR             R3, [R0]|3-104
52962|code|LDR             R2, [R0,#8]|130-104
52964|code|CMP             R0, R3|152-66
52966|code|ITT EQ|4-191
52968|code|MOVEQ           R3, #0|0-35
52970|code|STREQ           R3, [R2]|19-96
52972|code|BEQ             loc_CEFE|7-208
52974|code|LDR             R1, [R2]|17-104
52976|code|CMP             R0, R1|136-66
52978|code|IT EQ|8-191
52980|code|STREQ           R3, [R2]|19-96
52982|code|LDR             R2, [R0,#4]|66-104
52984|code|STR             R2, [R3,#4]|90-96
52986|code|LDR             R2, [R0,#4]|66-104
52988|code|STR             R3, [R2]|19-96
52990|code|LDR             R0, [R4,#0x10]|32-105
52992|code|MOVS            R2, #0|0-34
52994|code|LDR             R3, [R4,#8]|163-104
52996|code|STR             R2, [R4]|34-96
52998|code|STR             R2, [R4,#4]|98-96
53000|code|CBZ             R0, loc_CF18|48-177
53002|code|LDR             R2, [R3,#0xC]|218-104
53004|code|CBZ             R2, loc_CF14|18-177
53006|code|LDR             R1, [R3,#8]|153-104
53008|code|BLX             R2|144-71
53010|code|LDR             R3, [R4,#8]|163-104
53012|code|MOVS            R2, #0|0-34
53014|code|STR             R2, [R4,#0x10]|34-97
53016|code|LDR             R2, =(dword_2509C - 0xCF22)|5-74
53018|code|MOVS            R0, #0|0-32
53020|code|LDR             R1, [R3,#4]|89-104
53022|code|ADD             R2, PC; dword_2509C|122-68
53024|code|SUBS            R1, #1|1-57
53026|code|STR             R1, [R3,#4]|89-96
53028|code|LDR             R5, [R2]|21-104
53030|code|STR             R0, [R4,#8]|160-96
53032|code|STR             R4, [R2]|20-96
53034|code|STR             R5, [R4]|37-96
53036|code|STR             R0, [R4,#0xC]|224-96
53038|code|POP             {R3-R5,PC}|56-189
53040|data|DCD dword_2509C - 0xCF22|122-129-1-0
53044|code|LDR             R3, [R0]|3-104
53046|code|CBZ             R3, loc_CF4A|67-177
53048|code|PUSH            {R4,LR}|16-181
53050|code|MOVS            R2, #0|0-34
53052|code|LDR             R4, [R3,#0x10]|28-105
53054|code|MOV             R0, R3|24-70
53056|code|STR             R2, [R3,#0x10]|26-97
53058|code|BL              deleteElement|255-247-203-255
53062|code|MOV             R0, R4|32-70
53064|code|POP             {R4,PC}|16-189
53066|code|MOV             R0, R3|24-70
53068|code|BX              LR|112-71
53070|data|ALIGN 0x10|0-191
53072|code|LDR             R0, [R0,#8]|128-104
53074|code|BX              LR|112-71
53076|code|LDR             R0, [R0,#0xC]|192-104
53078|code|BX              LR|112-71
53080|code|LDR             R0, [R0,#0x10]|0-105
53082|code|BX              LR|112-71
53084|code|LDR             R3, =(dword_2509C - 0xCF64)|16-75
53086|code|PUSH            {R4-R6,LR}|112-181
53088|code|ADD             R3, PC; dword_2509C|123-68
53090|code|SUB             SP, SP, #8|130-176
53092|code|MOV             R5, R0|5-70
53094|code|LDR             R2, [R3,#(dword_250A0 - 0x2509C)]|90-104
53096|code|MOV             R4, R1|12-70
53098|code|CBZ             R2, loc_CF84|90-177
53100|code|MOVS            R0, #0x14; size|20-32
53102|code|BLX             malloc|249-247-12-236
53106|code|CBZ             R0, loc_CF96|128-177
53108|code|MOVS            R3, #0|0-35
53110|code|STR             R5, [R0,#0xC]|197-96
53112|code|STR             R4, [R0,#0x10]|4-97
53114|code|STR             R3, [R0]|3-96
53116|code|STR             R3, [R0,#4]|67-96
53118|code|STR             R3, [R0,#8]|131-96
53120|code|ADD             SP, SP, #8|2-176
53122|code|POP             {R4-R6,PC}|112-189
53124|code|LDR             R0, =(aQueue - 0xCF8E); "queue"|7-72
53126|code|MOVS            R6, #1|1-38
53128|code|LDR             R1, =(sub_CEB0+1 - 0xCF92)|7-73
53130|code|ADD             R0, PC; "queue"|120-68
53132|code|STR             R6, [R3,#(dword_250A0 - 0x2509C)]|94-96
53134|code|ADD             R1, PC; sub_CEB0|121-68
53136|code|BL              onProgramExit|250-247-230-249
53140|code|B               loc_CF6C|234-231
53142|code|STR             R0, [SP,#0x18+var_14]|1-144
53144|code|BL              logMallocError|252-247-224-248
53148|code|LDR             R0, [SP,#0x18+var_14]|1-152
53150|code|B               loc_CF80|239-231
53152|data|DCD dword_2509C - 0xCF64|56-129-1-0
53156|data|DCD aQueue - 0xCF8E; "queue"|134-82-0-0
53160|data|DCD sub_CEB0+1 - 0xCF92|31-255-255-255
53164|code|PUSH            {R4,LR}|16-181
53166|code|MOV             R4, R0|4-70
53168|code|LDR             R0, [R0]|0-104
53170|code|CBZ             R0, locret_CFBE|32-177
53172|code|BL              deleteElement|255-247-146-255
53176|code|LDR             R0, [R4]|32-104
53178|code|CMP             R0, #0|0-40
53180|code|BNE             loc_CFB4|250-209
53182|code|POP             {R4,PC}|16-189
53184|code|PUSH            {R4,LR}|16-181
53186|code|MOV             R4, R0|4-70
53188|code|BL              deleteElements|255-247-242-255
53192|code|MOV             R0, R4; ptr|32-70
53194|code|POP.W           {R4,LR}|189-232-16-64
53198|code|B.W             j_free|249-247-183-185
53202|data|ALIGN 4|0-191
53204|code|LDR             R3, [R0]|3-104
53206|code|CBZ             R3, locret_CFE8|59-177
53208|code|PUSH            {R4,LR}|16-181
53210|code|MOV             R4, R0|4-70
53212|code|MOV             R0, R3|24-70
53214|code|BL              deallocateQueue|255-247-239-255
53218|code|MOVS            R3, #0|0-35
53220|code|STR             R3, [R4]|35-96
53222|code|POP             {R4,PC}|16-189
53224|code|BX              LR|112-71
53226|data|ALIGN 4|0-191
53228|code|PUSH            {R4-R6,LR}|112-181
53230|code|CMP             R2, #0|0-42
53232|code|LDR             R4, [R0]|4-104
53234|code|CLZ.W           R5, R4|180-250-132-245
53238|code|MOV.W           R5, R5,LSR#5|79-234-85-21
53242|code|IT EQ|8-191
53244|code|MOVEQ           R5, #0|0-37
53246|code|CBNZ            R5, loc_D004|13-185
53248|code|MOV             R0, R4|32-70
53250|code|POP             {R4-R6,PC}|112-189
53252|code|MOV             R5, R0|5-70
53254|code|LDR             R0, [SP,#0x10+arg_0]|4-152
53256|code|MOV             R6, R1|14-70
53258|code|BLX             R3|152-71
53260|code|MOV             R4, R0|4-70
53262|code|STR             R0, [R5]|40-96
53264|code|CMP             R0, #0|0-40
53266|code|BEQ             loc_D000|245-208
53268|code|LDR             R1, =(loc_CFD4+1 - 0xD01E)|3-73
53270|code|MOV             R0, R6|48-70
53272|code|MOV             R2, R5|42-70
53274|code|ADD             R1, PC; loc_CFD4|121-68
53276|code|BL              onProgramExit|250-247-160-249
53280|code|LDR             R4, [R5]|44-104
53282|code|B               loc_D000|237-231
53284|data|DCD loc_CFD4+1 - 0xD01E|183-255-255-255
53288|code|LDR             R0, [R0,#4]|64-104
53290|code|BX              LR|112-71
53292|code|LDR             R0, [R0,#8]|128-104
53294|code|BX              LR|112-71
53296|code|MOV             R3, R0|3-70
53298|code|LDR             R0, [R0,#8]|128-104
53300|code|STR             R1, [R3,#8]|153-96
53302|code|BX              LR|112-71
53304|code|LDR             R0, [R0]|0-104
53306|code|BX              LR|112-71
53308|code|LDR             R0, [R0]|0-104
53310|code|CBZ             R0, locret_D042|0-177
53312|code|LDR             R0, [R0,#4]|64-104
53314|code|BX              LR|112-71
53316|code|LDM             R0, {R0,R3}|9-200
53318|code|CMP             R3, R1|139-66
53320|code|BLS             loc_D070|18-217
53322|code|MVNS            R2, R1|202-67
53324|code|ADD             R3, R2|19-68
53326|code|CMP             R1, R3|153-66
53328|code|BLS             loc_D06A|11-217
53330|code|LDR             R0, [R0,#4]|64-104
53332|code|MOV             R1, R3|25-70
53334|code|MOVS            R2, #1|1-34
53336|code|CBZ             R1, locret_D06E|73-177
53338|code|LDR             R3, [R0]|3-104
53340|code|LDR             R0, [R0,#4]|64-104
53342|code|CMP             R2, #0|0-42
53344|code|IT EQ|8-191
53346|code|MOVEQ           R0, R3|24-70
53348|code|SUBS            R1, #1|1-57
53350|code|BNE             loc_D05A|248-209
53352|code|BX              LR|112-71
53354|code|MOVS            R2, #0|0-34
53356|code|B               loc_D058|244-231
53358|code|BX              LR|112-71
53360|code|MOVS            R0, #0|0-32
53362|code|BX              LR|112-71
53364|code|LDM             R0, {R0,R3}|9-200
53366|code|CMP             R3, R1|139-66
53368|code|BLS             loc_D0A0|18-217
53370|code|MVNS            R2, R1|202-67
53372|code|ADD             R3, R2|19-68
53374|code|CMP             R1, R3|153-66
53376|code|BLS             loc_D096|9-217
53378|code|MOVS            R1, #0|0-33
53380|code|CBZ             R3, locret_D09E|91-177
53382|code|LDR             R2, [R0]|2-104
53384|code|LDR             R0, [R0,#4]|64-104
53386|code|CMP             R1, #0|0-41
53388|code|IT EQ|8-191
53390|code|MOVEQ           R0, R2|16-70
53392|code|SUBS            R3, #1|1-59
53394|code|BNE             loc_D086|248-209
53396|code|BX              LR|112-71
53398|code|MOV             R3, R1|11-70
53400|code|LDR             R0, [R0,#4]|64-104
53402|code|MOVS            R1, #1|1-33
53404|code|B               loc_D084|242-231
53406|code|BX              LR|112-71
53408|code|MOVS            R0, #0|0-32
53410|code|BX              LR|112-71
53412|code|PUSH            {R3-R7,LR}|248-181
53414|code|MOV             R5, R0|5-70
53416|code|LDR             R4, [R0]|4-104
53418|code|MOV             R7, R1|15-70
53420|code|MOV             R6, R2|22-70
53422|code|CBNZ            R4, loc_D0BA|36-185
53424|code|B               loc_D0C8|10-224
53426|code|LDR             R4, [R4]|36-104
53428|code|LDR             R3, [R5]|43-104
53430|code|CMP             R4, R3|156-66
53432|code|BEQ             loc_D0C8|6-208
53434|code|LDR             R0, [R4,#0x10]|32-105
53436|code|MOV             R1, R6|49-70
53438|code|BLX             R7|184-71
53440|code|CMP             R0, #0|0-40
53442|code|BEQ             loc_D0B2|246-208
53444|code|MOV             R0, R4|32-70
53446|code|POP             {R3-R7,PC}|248-189
53448|code|MOVS            R0, #0|0-32
53450|code|POP             {R3-R7,PC}|248-189
53452|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xD0D4)|26-75
53454|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|27-74
53456|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
53458|code|PUSH            {R4-R6,LR}|112-181
53460|code|SUB             SP, SP, #0x10|132-176
53462|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
53464|code|MOV             R4, R0|4-70
53466|code|LDR             R5, [R0,#8]|133-104
53468|code|LDR             R2, [R6]|50-104
53470|code|LDR             R3, [R5]|43-104
53472|code|STR             R2, [SP,#0x20+var_14]|3-146
53474|code|CBZ             R3, loc_D12C|27-179
53476|code|LDR             R2, [R5,#0x10]|42-105
53478|code|CBZ             R2, loc_D11E|210-177
53480|code|LDR             R3, [R0,#0x10]|3-105
53482|code|ADD             R2, SP, #0x20+var_1C|1-170
53484|code|LDR             R1, =(loc_CE80+1 - 0xD0F6)|20-73
53486|code|MOV             R0, R5|40-70
53488|code|STR             R5, [SP,#0x20+var_1C]|1-149
53490|code|ADD             R1, PC; loc_CE80|121-68
53492|code|STR             R3, [SP,#0x20+var_18]|2-147
53494|code|BL              findElement|255-247-213-255
53498|code|CBZ             R0, loc_D11C|120-177
53500|code|LDR             R2, [R0,#4]|66-104
53502|code|LDR             R3, [R5]|43-104
53504|code|STM.W           R4, {R0,R2}|132-232-5-0
53508|code|CMP             R0, R3|152-66
53510|code|STR             R4, [R0,#4]|68-96
53512|code|LDR             R2, [R4,#4]|98-104
53514|code|STR             R4, [R2]|20-96
53516|code|BNE             loc_D110|0-209
53518|code|STR             R4, [R5]|44-96
53520|code|LDR             R2, [SP,#0x20+var_14]|3-154
53522|code|LDR             R3, [R6]|51-104
53524|code|CMP             R2, R3|154-66
53526|code|BNE             loc_D132|12-209
53528|code|ADD             SP, SP, #0x10|4-176
53530|code|POP             {R4-R6,PC}|112-189
53532|code|LDR             R3, [R5]|43-104
53534|code|LDR             R2, [R3,#4]|90-104
53536|code|STR             R3, [R4]|35-96
53538|code|STR             R2, [R4,#4]|98-96
53540|code|STR             R4, [R3,#4]|92-96
53542|code|LDR             R3, [R4,#4]|99-104
53544|code|STR             R4, [R3]|28-96
53546|code|B               loc_D110|241-231
53548|code|STR             R0, [R4]|32-96
53550|code|STR             R0, [R4,#4]|96-96
53552|code|B               loc_D10E|237-231
53554|code|BLX             __stack_chk_fail|249-247-128-234
53558|data|ALIGN 4|0-191
53560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD0D4|0-124-1-0
53564|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
53568|data|DCD loc_CE80+1 - 0xD0F6|139-253-255-255
53572|code|LDR             R3, =(dword_2509C - 0xD14C)|20-75
53574|code|PUSH            {R4-R6,LR}|112-181
53576|code|ADD             R3, PC; dword_2509C|123-68
53578|code|SUB             SP, SP, #8|130-176
53580|code|MOV             R5, R0|5-70
53582|code|LDR             R4, [R3]|28-104
53584|code|CBZ             R4, loc_D17C|164-177
53586|code|LDR             R2, [R4]|34-104
53588|code|MOVS            R0, #0|0-32
53590|code|STR             R0, [R4]|32-96
53592|code|STR             R2, [R3]|26-96
53594|code|LDR             R6, =(dword_2509C - 0xD164)|16-78
53596|code|MOV             R0, R4|32-70
53598|code|STR             R5, [R4,#8]|165-96
53600|code|ADD             R6, PC; dword_2509C|126-68
53602|code|LDR             R3, [R6,#(dword_250A4 - 0x2509C)]|179-104
53604|code|ADDS            R3, #1|1-51
53606|code|STR             R3, [R4,#0xC]|227-96
53608|code|LDR             R2, [R5,#4]|106-104
53610|code|STR             R3, [R6,#(dword_250A4 - 0x2509C)]|179-96
53612|code|ADDS            R2, #1|1-50
53614|code|STR             R2, [R5,#4]|106-96
53616|code|STR             R1, [R4,#0x10]|33-97
53618|code|BL              sub_D0CC|255-247-171-255
53622|code|MOV             R0, R4|32-70
53624|code|ADD             SP, SP, #8|2-176
53626|code|POP             {R4-R6,PC}|112-189
53628|code|MOVS            R0, #0x14; size|20-32
53630|code|STR             R1, [SP,#0x18+var_14]|1-145
53632|code|BLX             malloc|249-247-2-235
53636|code|LDR             R1, [SP,#0x18+var_14]|1-153
53638|code|MOV             R4, R0|4-70
53640|code|CBZ             R0, loc_D192|24-177
53642|code|MOVS            R3, #0|0-35
53644|code|STR             R3, [R4]|35-96
53646|code|STR             R3, [R4,#4]|99-96
53648|code|B               loc_D15A|227-231
53650|code|BL              logMallocError|251-247-227-255
53654|code|B               loc_D176|238-231
53656|data|DCD dword_2509C - 0xD14C|80-127-1-0
53660|data|DCD dword_2509C - 0xD164|56-127-1-0
53664|code|LDR             R2, [R0]|2-104
53666|code|MOV             R3, R0|3-70
53668|code|LDR             R1, [R0,#8]|129-104
53670|code|CMP             R0, R2|144-66
53672|code|ITT EQ|4-191
53674|code|MOVEQ           R2, #0|0-34
53676|code|STREQ           R2, [R1]|10-96
53678|code|BEQ             loc_D1C0|7-208
53680|code|LDR             R0, [R1]|8-104
53682|code|CMP             R3, R0|131-66
53684|code|IT EQ|8-191
53686|code|STREQ           R2, [R1]|10-96
53688|code|LDR             R1, [R3,#4]|89-104
53690|code|STR             R1, [R2,#4]|81-96
53692|code|LDR             R1, [R3,#4]|89-104
53694|code|STR             R2, [R1]|10-96
53696|code|MOVS            R2, #0|0-34
53698|code|MOV             R0, R3|24-70
53700|code|STR             R2, [R3]|26-96
53702|code|STR             R2, [R3,#4]|90-96
53704|code|B               sub_D0CC|128-231
53706|data|ALIGN 4|0-191
53708|code|LDR             R2, [R0]|2-104
53710|code|MOV             R3, R0|3-70
53712|code|LDR             R0, [R0,#8]|128-104
53714|code|CMP             R3, R2|147-66
53716|code|PUSH            {R4-R7}|240-180
53718|code|ITT EQ|4-191
53720|code|MOVEQ           R2, #0|0-34
53722|code|STREQ           R2, [R0]|2-96
53724|code|BEQ             loc_D1EE|7-208
53726|code|LDR             R4, [R0]|4-104
53728|code|CMP             R3, R4|163-66
53730|code|IT EQ|8-191
53732|code|STREQ           R2, [R0]|2-96
53734|code|LDR             R0, [R3,#4]|88-104
53736|code|STR             R0, [R2,#4]|80-96
53738|code|LDR             R0, [R3,#4]|88-104
53740|code|STR             R2, [R0]|2-96
53742|code|LDR             R5, =(dword_2509C - 0xD1FA)|10-77
53744|code|MOVS            R7, #0|0-39
53746|code|LDR             R6, [R3,#8]|158-104
53748|code|MOV             R0, R3|24-70
53750|code|ADD             R5, PC; dword_2509C|125-68
53752|code|STR             R7, [R3]|31-96
53754|code|LDR             R4, [R6,#4]|116-104
53756|code|LDR             R2, [R5,#(dword_250A4 - 0x2509C)]|170-104
53758|code|STR             R7, [R3,#4]|95-96
53760|code|SUBS            R4, #1|1-60
53762|code|ADDS            R2, #1|1-50
53764|code|STR             R4, [R6,#4]|116-96
53766|code|STR             R2, [R3,#0xC]|218-96
53768|code|LDR             R4, [R1,#4]|76-104
53770|code|STR             R2, [R5,#(dword_250A4 - 0x2509C)]|170-96
53772|code|STR             R1, [R3,#8]|153-96
53774|code|ADDS            R3, R4, #1|99-28
53776|code|POP             {R4-R7}|240-188
53778|code|STR             R3, [R1,#4]|75-96
53780|code|B               sub_D0CC|90-231
53782|data|ALIGN 4|0-191
53784|data|DCD dword_2509C - 0xD1FA|162-126-1-0
53788|code|PUSH            {R3,LR}|8-181
53790|code|BL              findElement|255-247-65-255
53794|code|CBZ             R0, locret_D226|0-177
53796|code|LDR             R0, [R0,#0x10]|0-105
53798|code|POP             {R3,PC}|8-189
53800|code|MOV             R2, R1|10-70
53802|code|LDR             R1, =(loc_CE98+1 - 0xD230)|2-73
53804|code|ADD             R1, PC; loc_CE98|121-68
53806|code|B.W             findElement|255-247-57-191
53810|data|ALIGN 4|0-191
53812|data|DCD loc_CE98+1 - 0xD230|105-252-255-255
53816|code|PUSH.W          {R4-R8,LR}|45-233-240-65
53820|code|LDR             R5, [R0]|5-104
53822|code|CBZ             R5, loc_D268|157-177
53824|code|MOV             R7, R2|23-70
53826|code|MOV             R6, R1|14-70
53828|code|MOV             R8, R0|128-70
53830|code|MOV             R3, R5|43-70
53832|code|B               loc_D258|6-224
53834|code|LDR             R0, [R5,#0x10]|40-105
53836|code|BLX             R6|176-71
53838|code|CBNZ            R0, loc_D26E|112-185
53840|code|CBZ             R4, loc_D268|84-177
53842|code|LDR.W           R3, [R8]|216-248-0-48
53846|code|MOV             R5, R4|37-70
53848|code|LDR             R4, [R5]|44-104
53850|code|MOV             R1, R7|57-70
53852|code|CMP             R4, R3|156-66
53854|code|BNE             loc_D24A|244-209
53856|code|MOV             R1, R7|57-70
53858|code|LDR             R0, [R5,#0x10]|40-105
53860|code|BLX             R6|176-71
53862|code|CBNZ            R0, loc_D26E|16-185
53864|code|MOVS            R0, #0|0-32
53866|code|POP.W           {R4-R8,PC}|189-232-240-129
53870|code|MOV             R0, R5|40-70
53872|code|POP.W           {R4-R8,PC}|189-232-240-129
53876|code|MOV             R2, R1|10-70
53878|code|LDR             R1, =(loc_CEA4+1 - 0xD27E)|6-73
53880|code|PUSH            {R3,LR}|8-181
53882|code|ADD             R1, PC; loc_CEA4|121-68
53884|code|BL              findElement|255-247-18-255
53888|code|CBZ             R0, locret_D28E|40-177
53890|code|MOVS            R2, #0|0-34
53892|code|STR             R2, [R0,#0x10]|2-97
53894|code|BL              deleteElement|255-247-41-254
53898|code|MOVS            R0, #1|1-32
53900|code|POP             {R3,PC}|8-189
53902|code|POP             {R3,PC}|8-189
53904|data|DCD loc_CEA4+1 - 0xD27E|39-252-255-255
53908|code|PUSH            {R3,LR}|8-181
53910|code|BLX             dlerror|249-247-54-232
53914|code|CBZ             R0, loc_D2AC|56-177
53916|code|LDR             R1, =(aCheckingSDevic+0x14 - 0xD2A6); "%s"|4-73
53918|code|MOV             R2, R0|2-70
53920|code|MOVS            R0, #3|3-32
53922|code|ADD             R1, PC; "%s"|121-68
53924|code|BL              logMessage|251-247-206-254
53928|code|MOVS            R0, #0|0-32
53930|code|POP             {R3,PC}|8-189
53932|code|MOVS            R0, #1|1-32
53934|code|POP             {R3,PC}|8-189
53936|data|DCD aCheckingSDevic+0x14 - 0xD2A6; "%s"|222-74-0-0
53940|code|PUSH            {R4,LR}|16-181
53942|code|MOV             R4, R0|4-70
53944|code|BLX             dlerror|249-247-36-232
53948|code|MOV             R0, R4; file|32-70
53950|code|MOVW            R1, #0x101; mode|64-242-1-17
53954|code|BLX             dlopen|249-247-86-233
53958|code|MOV             R4, R0|4-70
53960|code|CBZ             R0, loc_D2CE|8-177
53962|code|MOV             R0, R4|32-70
53964|code|POP             {R4,PC}|16-189
53966|code|BL              sub_D294|255-247-225-255
53970|code|MOV             R0, R4|32-70
53972|code|POP             {R4,PC}|16-189
53974|data|ALIGN 4|0-191
53976|code|PUSH            {R4,LR}|16-181
53978|code|MOV             R4, R0|4-70
53980|code|BLX             dlerror|249-247-18-232
53984|code|MOV             R0, R4; handle|32-70
53986|code|BLX             dlclose|249-247-110-232
53990|code|CBNZ            R0, loc_D2EA|0-185
53992|code|POP             {R4,PC}|16-189
53994|code|POP.W           {R4,LR}|189-232-16-64
53998|code|B               sub_D294|209-231
54000|code|PUSH            {R4-R6,LR}|112-181
54002|code|MOV             R6, R0|6-70
54004|code|MOV             R5, R1|13-70
54006|code|MOV             R4, R2|20-70
54008|code|BLX             dlerror|249-247-4-232
54012|code|MOV             R0, R6; handle|48-70
54014|code|MOV             R1, R5; name|41-70
54016|code|BLX             dlsym|249-247-46-235
54020|code|STR             R0, [R4]|32-96
54022|code|POP.W           {R4-R6,LR}|189-232-112-64
54026|code|B               sub_D294|195-231
54028|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xD314)|13-75
54030|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|14-74
54032|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
54034|code|PUSH            {R4-R6,LR}|112-181
54036|code|SUB             SP, SP, #0x18|134-176
54038|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
54040|code|MOV             R6, R1|14-70
54042|code|ADD             R1, SP, #0x28+var_24|1-169
54044|code|MOV             R4, R0|4-70
54046|code|LDR             R3, [R5]|43-104
54048|code|STR             R3, [SP,#0x28+var_14]|5-147
54050|code|BLX             dladdr|249-247-22-232
54054|code|CBZ             R0, loc_D332|32-177
54056|code|CBZ             R6, loc_D330|22-177
54058|code|LDR             R3, [SP,#0x28+var_18]|4-155
54060|code|SUBS            R4, R4, R3|228-26
54062|code|STR             R4, [R6]|52-96
54064|code|LDR             R0, [SP,#0x28+var_1C]|3-152
54066|code|LDR             R2, [SP,#0x28+var_14]|5-154
54068|code|LDR             R3, [R5]|43-104
54070|code|CMP             R2, R3|154-66
54072|code|BNE             loc_D33E|1-209
54074|code|ADD             SP, SP, #0x18|6-176
54076|code|POP             {R4-R6,PC}|112-189
54078|code|BLX             __stack_chk_fail|249-247-122-233
54082|data|ALIGN 4|0-191
54084|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD314|192-121-1-0
54088|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
54092|code|PUSH            {R4-R6,LR}|112-181
54094|code|MOV             R5, R1|13-70
54096|code|SUB             SP, SP, #8|130-176
54098|code|MOV             R1, R2; num|17-70
54100|code|MOV             R4, R2|20-70
54102|code|MOV             R6, R0|6-70
54104|code|MOVS            R2, #1; turn_on|1-34
54106|code|MOV             R0, R5; from|40-70
54108|code|BLX             ioperm|249-247-40-234
54112|code|ADDS            R0, #1|1-48
54114|code|IT NE|24-191
54116|code|MOVNE           R0, #1|1-32
54118|code|BEQ             loc_D36C|1-208
54120|code|ADD             SP, SP, #8|2-176
54122|code|POP             {R4-R6,PC}|112-189
54124|code|BLX             __errno_location|249-247-146-234
54128|code|LDR             R0, [R0]; errnum|0-104
54130|code|BLX             strerror|249-247-20-232
54134|code|LDR             R1, =(aPortEnableErro - 0xD380); "Port enable error: %u.%u: %s"|5-73
54136|code|MOV             R2, R5|42-70
54138|code|MOV             R3, R4|35-70
54140|code|ADD             R1, PC; "Port enable error: %u.%u: %s"|121-68
54142|code|STR             R0, [SP,#0x18+var_18]|0-144
54144|code|MOV             R0, R6|48-70
54146|code|BL              logMessage|251-247-95-254
54150|code|MOVS            R0, #0|0-32
54152|code|ADD             SP, SP, #8|2-176
54154|code|POP             {R4-R6,PC}|112-189
54156|data|DCD aPortEnableErro - 0xD380; "Port enable error: %u.%u: %s"|156-78-0-0
54160|code|PUSH            {R4,R5,LR}|48-181
54162|code|MOVS            R2, #0; turn_on|0-34
54164|code|SUB             SP, SP, #0xC|131-176
54166|code|MOV             R5, R0|5-70
54168|code|MOV             R4, R1|12-70
54170|code|BLX             ioperm|249-247-10-234
54174|code|ADDS            R0, #1|1-48
54176|code|IT NE|24-191
54178|code|MOVNE           R0, #1|1-32
54180|code|BEQ             loc_D3AA|1-208
54182|code|ADD             SP, SP, #0xC|3-176
54184|code|POP             {R4,R5,PC}|48-189
54186|code|BLX             __errno_location|249-247-116-234
54190|code|LDR             R0, [R0]; errnum|0-104
54192|code|BLX             strerror|248-247-244-239
54196|code|LDR             R1, =(aPortDisableErr - 0xD3BE); "Port disable error: %u.%u: %s"|5-73
54198|code|MOV             R2, R5|42-70
54200|code|MOV             R3, R4|35-70
54202|code|ADD             R1, PC; "Port disable error: %u.%u: %s"|121-68
54204|code|STR             R0, [SP,#0x18+var_18]|0-144
54206|code|MOVS            R0, #3|3-32
54208|code|BL              logMessage|251-247-64-254
54212|code|MOVS            R0, #0|0-32
54214|code|ADD             SP, SP, #0xC|3-176
54216|code|POP             {R4,R5,PC}|48-189
54218|data|ALIGN 4|0-191
54220|data|DCD aPortDisableErr - 0xD3BE; "Port disable error: %u.%u: %s"|126-78-0-0
54224|code|B.W             j_inb|249-247-22-186
54228|code|MOV             R3, R0|3-70
54230|code|MOV             R0, R1|8-70
54232|code|MOV             R1, R3|25-70
54234|code|B.W             j_outb|249-247-239-185
54238|data|ALIGN 0x10|0-191
54240|code|PUSH.W          {R4-R8,LR}|45-233-240-65
54244|code|MOV             R5, R1|13-70
54246|code|MOV             R7, R2|23-70
54248|code|MOV             R6, R0|6-70
54250|code|BLX             __open_2|248-247-204-239
54254|code|ADDS            R1, R0, #1|65-28
54256|code|MOV             R4, R0|4-70
54258|code|BEQ             loc_D408|9-208
54260|code|LDR             R1, =(aDeviceOpenedSF - 0xD400); "device opened: %s: fd=%d"|31-73
54262|code|MOV             R2, R6|50-70
54264|code|MOVS            R0, #7|7-32
54266|code|MOV             R3, R4|35-70
54268|code|ADD             R1, PC; "device opened: %s: fd=%d"|121-68
54270|code|BL              logMessage|251-247-33-254
54274|code|MOV             R0, R4|32-70
54276|code|POP.W           {R4-R8,PC}|189-232-240-129
54280|code|CBZ             R7, loc_D44E|15-179
54282|code|AND.W           R3, R5, #3|5-240-3-3
54286|code|CMP             R3, #2|2-43
54288|code|BNE             loc_D44E|29-209
54290|code|BLX             __errno_location|249-247-64-234
54294|code|BIC.W           R5, R5, #3|37-240-3-5
54298|code|LDR             R7, [R0]|7-104
54300|code|MOV             R8, R0|128-70
54302|code|CMP             R7, #0xD|13-47
54304|code|BEQ             loc_D43C|12-208
54306|code|CMP             R7, #0x1E|30-47
54308|code|BNE             loc_D46E|35-209
54310|code|MOV             R1, R5|41-70
54312|code|MOV             R0, R6|48-70
54314|code|BLX             __open_2|248-247-172-239
54318|code|ADDS            R2, R0, #1|66-28
54320|code|MOV             R4, R0|4-70
54322|code|BNE             loc_D3F4|223-209
54324|code|STR.W           R7, [R8]|200-248-0-112
54328|code|MOV             R0, R7|56-70
54330|code|B               loc_D454|11-224
54332|code|MOV             R0, R6|48-70
54334|code|ORR.W           R1, R5, #1|69-240-1-1
54338|code|BLX             __open_2|248-247-160-239
54342|code|ADDS            R3, R0, #1|67-28
54344|code|MOV             R4, R0|4-70
54346|code|BNE             loc_D3F4|211-209
54348|code|B               loc_D426|235-231
54350|code|BLX             __errno_location|249-247-34-234
54354|code|LDR             R0, [R0]; errnum|0-104
54356|code|BLX             strerror|248-247-162-239
54360|code|LDR             R1, =(aCannotOpenDevi - 0xD460); "cannot open device: %s: %s"|7-73
54362|code|MOV             R2, R6|50-70
54364|code|ADD             R1, PC; "cannot open device: %s: %s"|121-68
54366|code|MOV             R3, R0|3-70
54368|code|MOVS            R0, #7|7-32
54370|code|BL              logMessage|251-247-239-253
54374|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
54378|code|POP.W           {R4-R8,PC}|189-232-240-129
54382|code|MOV             R0, R7|56-70
54384|code|B               loc_D454|240-231
54386|data|ALIGN 4|0-191
54388|data|DCD aDeviceOpenedSF - 0xD400; "device opened: %s: fd=%d"|124-86-0-0
54392|data|DCD aCannotOpenDevi - 0xD460; "cannot open device: %s: %s"|0-86-0-0
54396|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xD484)|52-75
54398|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|53-74
54400|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
54402|code|PUSH.W          {R4-R9,LR}|45-233-240-67
54406|code|SUB             SP, SP, #0x11C|199-176
54408|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
54410|code|MOV             R6, R0|6-70
54412|code|MOV             R4, R1|12-70
54414|code|LDR             R3, [R7]|59-104
54416|code|STR             R3, [SP,#0x138+var_24]|69-147
54418|code|CBZ             R1, loc_D49A|17-177
54420|code|LDRB            R3, [R1]|11-120
54422|code|ADDS            R3, #1|1-51
54424|code|STRB            R3, [R1]|11-112
54426|code|LDR.W           R9, =(aProcSysKernelM - 0xD4A4); "/proc/sys/kernel/modprobe"|223-248-188-144
54430|code|LDR             R1, =(aInvalidUnicode+0x18 - 0xD4A6); "r"|47-73
54432|code|ADD             R9, PC; "/proc/sys/kernel/modprobe"|249-68
54434|code|ADD             R1, PC; "r" ; modes|121-68
54436|code|MOV             R0, R9; filename|72-70
54438|code|BLX             fopen|249-247-44-232
54442|code|MOV             R5, R0|5-70
54444|code|CMP             R0, #0|0-40
54446|code|BEQ             loc_D52A|60-208
54448|code|ADD             R0, SP, #0x138+s; s|5-168
54450|code|MOV.W           R1, #0x100; n|79-244-128-113
54454|code|MOV             R2, R5; stream|42-70
54456|code|BLX             fgets|249-247-54-233
54460|code|MOV             R8, R0|128-70
54462|code|CBZ             R0, loc_D4C6|16-177
54464|code|BLX             strlen|249-247-106-233
54468|code|CBNZ            R0, loc_D504|240-185
54470|code|LDR.W           R8, =(aModprobe - 0xD4CE); "modprobe"|223-248-152-128
54474|code|ADD             R8, PC; "modprobe"|248-68
54476|code|MOV             R0, R5; stream|40-70
54478|code|BLX             fclose|249-247-138-233
54482|code|ADD             R3, SP, #0x138+var_134|1-171
54484|code|LDR             R1, =(aQ - 0xD4E2); "-q"|35-73
54486|code|MOVS            R5, #0|0-37
54488|code|STR.W           R8, [SP,#0x138+var_134]|205-248-4-128
54492|code|MOV             R0, R3|24-70
54494|code|ADD             R1, PC; "-q"|121-68
54496|code|STR             R6, [SP,#0x138+var_12C]|3-150
54498|code|STR             R1, [SP,#0x138+var_130]|2-145
54500|code|STR             R5, [SP,#0x138+var_128]|4-149
54502|code|BL              executeHostCommand|0-240-29-252
54506|code|CBNZ            R0, loc_D51A|176-185
54508|code|CBZ             R4, loc_D4F4|20-177
54510|code|LDRB            R3, [R4]|35-120
54512|code|ADDS            R3, #1|1-51
54514|code|STRB            R3, [R4]|35-112
54516|code|MOVS            R0, #1|1-32
54518|code|LDR             R2, [SP,#0x138+var_24]|69-154
54520|code|LDR             R3, [R7]|59-104
54522|code|CMP             R2, R3|154-66
54524|code|BNE             loc_D54A|37-209
54526|code|ADD             SP, SP, #0x11C|71-176
54528|code|POP.W           {R4-R9,PC}|189-232-240-131
54532|code|SUBS            R0, #1|1-56
54534|code|LDRB.W          R3, [R8,R0]|24-248-0-48
54538|code|CMP             R3, #0xA|10-43
54540|code|BNE             loc_D4CC|222-209
54542|code|MOVS            R3, #0|0-35
54544|code|STRB.W          R3, [R8,R0]|8-248-0-48
54548|code|CMP             R0, #0|0-40
54550|code|BNE             loc_D4CC|217-209
54552|code|B               loc_D4C6|213-231
54554|code|LDR             R1, =(aKernelModuleNo - 0xD524); "kernel module not installed: %s"|19-73
54556|code|MOVS            R0, #4|4-32
54558|code|MOV             R2, R6|50-70
54560|code|ADD             R1, PC; "kernel module not installed: %s"|121-68
54562|code|BL              logMessage|251-247-143-253
54566|code|MOV             R0, R5|40-70
54568|code|B               loc_D4F6|229-231
54570|code|BLX             __errno_location|249-247-180-233
54574|code|LDR.W           R8, =(aModprobe - 0xD536); "modprobe"|223-248-60-128
54578|code|ADD             R8, PC; "modprobe"|248-68
54580|code|LDR             R0, [R0]; errnum|0-104
54582|code|BLX             strerror|248-247-50-239
54586|code|LDR             R1, =(aCannotOpenSS - 0xD542); "cannot open %s: %s"|13-73
54588|code|MOV             R2, R9|74-70
54590|code|ADD             R1, PC; "cannot open %s: %s"|121-68
54592|code|MOV             R3, R0|3-70
54594|code|MOVS            R0, #4|4-32
54596|code|BL              logMessage|251-247-126-253
54600|code|B               loc_D4D2|195-231
54602|code|BLX             __stack_chk_fail|249-247-116-232
54606|data|ALIGN 0x10|0-191
54608|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD484|80-120-1-0
54612|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
54616|data|DCD aProcSysKernelM - 0xD4A4; "/proc/sys/kernel/modprobe"|0-86-0-0
54620|data|DCD aInvalidUnicode+0x18 - 0xD4A6; "r"|198-92-0-0
54624|data|DCD aModprobe - 0xD4CE; "modprobe"|202-85-0-0
54628|data|DCD aQ - 0xD4E2; "-q"|242-85-0-0
54632|data|DCD aKernelModuleNo - 0xD524; "kernel module not installed: %s"|180-85-0-0
54636|data|DCD aModprobe - 0xD536; "modprobe"|98-85-0-0
54640|data|DCD aCannotOpenSS - 0xD542; "cannot open %s: %s"|126-85-0-0
54644|code|CBZ             R1, loc_D57A|9-177
54646|code|LDRB            R3, [R1]|11-120
54648|code|CBNZ            R3, loc_D57C|3-185
54650|code|B               loc_D47C|127-231
54652|code|SUB.W           R0, R3, #2|163-241-2-0
54656|code|CLZ.W           R0, R0|176-250-128-240
54660|code|LSRS            R0, R0, #5|64-9
54662|code|BX              LR|112-71
54664|code|PUSH.W          {R4-R11,LR}|45-233-240-79
54668|code|MOV             R6, R1|14-70
54670|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xD59A)|93-76
54672|code|MOV             R7, R3|31-70
54674|code|LDR             R1, =(__stack_chk_guard_ptr - 0x24CD4)|93-73
54676|code|SUB             SP, SP, #0x74|157-176
54678|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
54680|code|MOV             R10, R2|146-70
54682|code|MOV             R8, R0|128-70
54684|code|MOV             R3, R4|35-70
54686|code|LDR             R4, [R4,R1]; __stack_chk_guard|100-88
54688|code|LDR             R3, [R4]|35-104
54690|code|STR             R3, [SP,#0x98+var_2C]|27-147
54692|code|BL              getDevicePath|252-247-28-254
54696|code|CMP             R0, #0|0-40
54698|code|BEQ             loc_D628|61-208
54700|code|MOV             R1, R6|49-70
54702|code|MOVS            R2, #1|1-34
54704|code|MOV             R5, R0|5-70
54706|code|BL              sub_D3E0|255-247-21-255
54710|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
54714|code|MOV             R9, R0|129-70
54716|code|BEQ             loc_D614|42-208
54718|code|MOVS            R0, #3; ver|3-32
54720|code|MOV             R1, R9; fildes|73-70
54722|code|ADD             R2, SP, #0x98+stat_buf; stat_buf|4-170
54724|code|BLX             __fxstat|249-247-182-232
54728|code|ADDS            R0, #1|1-48
54730|code|BEQ             loc_D62E|48-208
54732|code|LDR             R3, [SP,#0x98+stat_buf.st_mode]|8-155
54734|code|AND.W           R3, R3, #0xF000|3-244-112-67
54738|code|CMP.W           R3, #0x2000|179-245-0-95
54742|code|BEQ             loc_D5FE|18-208
54744|code|LDR             R1, =(aNotACharacterD - 0xD5E4); "not a character device: %s: fd=%d"|76-73
54746|code|MOVS            R0, #7|7-32
54748|code|MOV             R2, R5|42-70
54750|code|MOV             R3, R9|75-70
54752|code|ADD             R1, PC; "not a character device: %s: fd=%d"|121-68
54754|code|BL              logMessage|251-247-47-253
54758|code|MOV             R0, R9; fd|72-70
54760|code|BLX             close|248-247-126-239
54764|code|LDR             R1, =(aDeviceClosedSF - 0xD5F6); "device closed: %s: fd=%d"|72-73
54766|code|MOV             R3, R9|75-70
54768|code|MOVS            R0, #7|7-32
54770|code|ADD             R1, PC; "device closed: %s: fd=%d"|121-68
54772|code|MOV             R2, R5|42-70
54774|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
54778|code|BL              logMessage|251-247-35-253
54782|code|MOV             R0, R5; ptr|40-70
54784|code|BLX             free|248-247-160-238
54788|code|LDR             R2, [SP,#0x98+var_2C]|27-154
54790|code|MOV             R0, R9|72-70
54792|code|LDR             R3, [R4]|35-104
54794|code|CMP             R2, R3|154-66
54796|code|BNE             loc_D6E6|107-209
54798|code|ADD             SP, SP, #0x74 ; 't'|29-176
54800|code|POP.W           {R4-R11,PC}|189-232-240-143
54804|code|BLX             __errno_location|249-247-62-233
54808|code|LDR             R3, [R0]|3-104
54810|code|MOV             R11, R0|131-70
54812|code|CMP             R3, #2|2-43
54814|code|BEQ             loc_D64A|20-208
54816|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
54820|code|CMP             R5, #0|0-45
54822|code|BNE             loc_D5FE|234-209
54824|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
54828|code|B               loc_D604|234-231
54830|code|BLX             __errno_location|249-247-50-233
54834|code|LDR             R0, [R0]; errnum|0-104
54836|code|BLX             strerror|248-247-178-238
54840|code|LDR             R1, =(unk_12B48 - 0xD642)|54-73
54842|code|MOV             R2, R9|74-70
54844|code|MOV             R3, R5|43-70
54846|code|ADD             R1, PC; unk_12B48|121-68
54848|code|STR             R0, [SP,#0x98+var_98]|0-144
54850|code|MOVS            R0, #7|7-32
54852|code|BL              logMessage|251-247-254-252
54856|code|B               loc_D5E6|205-231
54858|code|MOV             R0, R5; ptr|40-70
54860|code|BLX             free|248-247-122-238
54864|code|MOV             R0, R8|64-70
54866|code|BL              locatePathName|251-247-155-255
54870|code|BL              makeWritablePath|252-247-159-249
54874|code|MOV             R5, R0|5-70
54876|code|CMP             R0, #0|0-40
54878|code|BEQ             loc_D628|227-208
54880|code|MOV             R1, R6|49-70
54882|code|MOVS            R2, #0|0-34
54884|code|BL              sub_D3E0|255-247-188-254
54888|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
54892|code|MOV             R9, R0|129-70
54894|code|BNE             loc_D5BE|166-209
54896|code|LDR.W           R3, [R11]|219-248-0-48
54900|code|CMP             R3, #2|2-43
54902|code|BNE             loc_D620|211-209
54904|code|BIC.W           R1, R7, #0xFF|39-240-255-1
54908|code|UBFX.W          R12, R10, #0, #0xC|202-243-11-12
54912|code|ADD.W           LR, SP, #0x98+var_28|13-241-112-14
54916|code|UXTB            R0, R7|248-178
54918|code|LSLS            R2, R1, #0xC|10-3
54920|code|BIC.W           R9, R10, #0xFF0|42-244-127-105
54924|code|ORR.W           R12, R0, R12,LSL#8|64-234-12-44
54928|code|LSRS            R3, R1, #0x14|11-13
54930|code|MOV.W           R8, #0|79-240-0-8
54934|code|BIC.W           R9, R9, #0xF|41-240-15-9
54938|code|ORR.W           R2, R2, R8|66-234-8-2
54942|code|ORR.W           R3, R3, R9|67-234-9-3
54946|code|ORR.W           R2, R2, R12|66-234-12-2
54950|code|MOVS            R0, #1; ver|1-32
54952|code|STRD.W          R2, R3, [LR,#-0x68]!|110-233-26-35
54956|code|MOV             R1, R5; path|41-70
54958|code|MOV.W           R2, #0x2180; mode|79-244-6-82
54962|code|MOV             R3, LR; dev|115-70
54964|code|BLX             __xmknod|248-247-120-238
54968|code|ADDS            R0, #1|1-48
54970|code|BEQ             loc_D6EA|22-208
54972|code|LDR             R1, =(aDeviceCreatedS - 0xD6CA); "device created: %s mode=%06o major=%d m"...|22-73
54974|code|MOVS            R0, #7|7-32
54976|code|MOV             R2, R5|42-70
54978|code|MOV.W           R3, #0x2180|79-244-6-83
54982|code|ADD             R1, PC; "device created: %s mode=%06o major=%d m"...|121-68
54984|code|STR.W           R10, [SP,#0x98+var_98]|205-248-0-160
54988|code|STR             R7, [SP,#0x98+var_94]|1-151
54990|code|BL              logMessage|251-247-185-252
54994|code|MOV             R0, R5|40-70
54996|code|MOV             R1, R6|49-70
54998|code|MOV             R2, R8|66-70
55000|code|BL              sub_D3E0|255-247-130-254
55004|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
55008|code|MOV             R9, R0|129-70
55010|code|BEQ             loc_D5FE|140-208
55012|code|B               loc_D5BE|107-231
55014|code|BLX             __stack_chk_fail|248-247-166-239
55018|code|LDR.W           R0, [R11]; errnum|219-248-0-0
55022|code|BLX             strerror|248-247-86-238
55026|code|LDR             R1, =(aCannotCreateDe - 0xD6FA); "cannot create device: %s: %s"|10-73
55028|code|MOV             R2, R5|42-70
55030|code|ADD             R1, PC; "cannot create device: %s: %s"|121-68
55032|code|MOV             R3, R0|3-70
55034|code|MOVS            R0, #7|7-32
55036|code|BL              logMessage|251-247-162-252
55040|code|B               loc_D620|142-231
55042|data|ALIGN 4|0-191
55044|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD59A|58-119-1-0
55048|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
55052|data|DCD aNotACharacterD - 0xD5E4; "not a character device: %s: fd=%d"|136-85-0-0
55056|data|DCD aDeviceClosedSF - 0xD5F6; "device closed: %s: fd=%d"|154-85-0-0
55060|data|DCD unk_12B48 - 0xD642|6-85-0-0
55064|data|DCD aDeviceCreatedS - 0xD6CA; "device created: %s mode=%06o major=%d m"...|78-84-0-0
55068|data|DCD aCannotCreateDe - 0xD6FA; "cannot create device: %s: %s"|254-83-0-0
55072|code|PUSH.W          {R4-R9,LR}|45-233-240-67
55076|code|SUBW            SP, SP, #0x4B4|173-242-180-77
55080|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xD734)|88-78
55082|code|MOV             R8, R0|128-70
55084|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|88-75
55086|code|MOVS            R0, #0x64 ; 'd'; size|100-32
55088|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
55090|code|LDR             R7, [R6,R3]; __stack_chk_guard|247-88
55092|code|LDR             R3, [R7]|59-104
55094|code|STR.W           R3, [SP,#0x4D0+var_24]|205-248-172-52
55098|code|BLX             malloc|249-247-38-232
55102|code|MOV             R5, R0|5-70
55104|code|CMP             R0, #0|0-40
55106|code|BEQ.W           loc_D878|0-240-153-128
55110|code|MOVS            R1, #0; c|0-33
55112|code|MOVS            R2, #0x64 ; 'd'; n|100-34
55114|code|BLX             memset|248-247-138-238
55118|code|LDR             R1, =(byte_250A8 - 0xD756)|81-73
55120|code|LDR             R0, =(aUinput - 0xD758); "uinput"|81-72
55122|code|ADD             R1, PC; byte_250A8|121-68
55124|code|ADD             R0, PC; "uinput"|120-68
55126|code|LDRB            R4, [R1]|12-120
55128|code|BL              installKernelModule|255-247-12-255
55132|code|CLZ.W           R4, R4|180-250-132-244
55136|code|LSRS            R4, R4, #5|100-9
55138|code|CMP             R0, #0|0-40
55140|code|ITE EQ|12-191
55142|code|MOVEQ           R0, #0|0-32
55144|code|ANDNE.W         R0, R4, #1|4-240-1-0
55148|code|CBZ             R0, loc_D776|24-177
55150|code|MOV.W           R0, #0x1F4|79-244-250-112
55154|code|BL              asyncWait|253-247-153-254
55158|code|LDR             R0, =(off_24A7C - 0xD77E); "uinput"|73-72
55160|code|LDR             R1, =(aUinput - 0xD780); "uinput"|73-73
55162|code|ADD             R0, PC; off_24A7C|120-68
55164|code|ADD             R1, PC; "uinput"|121-68
55166|code|BL              resolveDeviceName|252-247-57-253
55170|code|MOV             R9, R0|129-70
55172|code|CMP             R0, #0|0-40
55174|code|BEQ             loc_D856|102-208
55176|code|MOVS            R1, #1|1-33
55178|code|MOVS            R2, #0xA|10-34
55180|code|MOVS            R3, #0xDF|223-35
55182|code|BL              openCharacterDevice|255-247-251-254
55186|code|STR             R0, [R5]|40-96
55188|code|ADDS            R0, #1|1-48
55190|code|BEQ             loc_D83E|82-208
55192|code|ADD             R4, SP, #0x4D0+s|4-172
55194|code|MOVS            R1, #0; c|0-33
55196|code|MOVW            R2, #0x45C; n|64-242-92-66
55200|code|MOV             R0, R4; s|32-70
55202|code|BLX             memset|248-247-94-238
55206|code|LDR             R2, =(aSSS_1 - 0xD7BA); "%s %s %s"|63-74
55208|code|LDR.W           R12, =(aBrltty_1 - 0xD7B8); "BRLTTY"|223-248-252-192
55212|code|MOVS            R1, #0x50 ; 'P'|80-33
55214|code|LDR.W           LR, =(a52dev - 0xD7BC); "5.2dev"|223-248-252-224
55218|code|MOV             R3, R1|11-70
55220|code|ADD             R12, PC; "BRLTTY"|252-68
55222|code|ADD             R2, PC; "%s %s %s"|122-68
55224|code|ADD             LR, PC; "5.2dev"|254-68
55226|code|STR             R2, [SP,#0x4D0+var_4D0]|0-146
55228|code|STR.W           R12, [SP,#0x4D0+var_4CC]|205-248-4-192
55232|code|MOVS            R2, #1|1-34
55234|code|STR.W           LR, [SP,#0x4D0+var_4C8]|205-248-8-224
55238|code|MOV             R0, R4|32-70
55240|code|STR.W           R8, [SP,#0x4D0+var_4C4]|205-248-12-128
55244|code|BLX             __snprintf_chk|248-247-234-239
55248|code|MOV             R1, R4; buf|33-70
55250|code|LDR             R0, [R5]; fd|40-104
55252|code|MOVW            R2, #0x45C; n|64-242-92-66
55256|code|BLX             write|249-247-12-232
55260|code|ADDS            R0, #1|1-48
55262|code|BEQ             loc_D860|63-208
55264|code|BLX             getpid|248-247-120-237
55268|code|LDR             R4, =(__progname_ptr - 0x24CD4)|50-76
55270|code|LDR             R3, =(aPidUSD - 0xD7F4); "pid-%u/%s/%d"|51-75
55272|code|ADDW            R8, SP, #0x4D0+var_64|13-242-108-72
55276|code|MOVS            R1, #0x40 ; '@'|64-33
55278|code|MOVS            R2, #1|1-34
55280|code|ADD             R3, PC; "pid-%u/%s/%d"|123-68
55282|code|STR             R3, [SP,#0x4D0+var_4D0]|0-147
55284|code|MOV             R3, R1|11-70
55286|code|STR             R0, [SP,#0x4D0+var_4CC]|1-144
55288|code|MOV             R0, R8|64-70
55290|code|LDR             R4, [R6,R4]; __progname|52-89
55292|code|LDR             R4, [R4]|36-104
55294|code|STR             R4, [SP,#0x4D0+var_4C8]|2-148
55296|code|LDR             R4, [R5]|44-104
55298|code|STR             R4, [SP,#0x4D0+var_4C4]|3-148
55300|code|BLX             __snprintf_chk|248-247-206-239
55304|code|MOVW            R1, #0x556C|69-242-108-81
55308|code|MOV             R2, R8|66-70
55310|code|MOVT.W          R1, #0x4004; request|196-242-4-1
55314|code|LDR             R0, [R5]; fd|40-104
55316|code|BLX             ioctl|248-247-190-238
55320|code|ADDS            R0, #1|1-48
55322|code|BEQ             loc_D87E|48-208
55324|code|LDR             R1, =(aUinputOpenedSF - 0xD828); "uinput opened: %s fd=%d"|38-73
55326|code|MOV             R2, R9|74-70
55328|code|MOVS            R0, #7|7-32
55330|code|LDR             R3, [R5]|43-104
55332|code|ADD             R1, PC; "uinput opened: %s fd=%d"|121-68
55334|code|BL              logMessage|251-247-13-252
55338|code|LDR.W           R2, [SP,#0x4D0+var_24]|221-248-172-36
55342|code|MOV             R0, R5|40-70
55344|code|LDR             R3, [R7]|59-104
55346|code|CMP             R2, R3|154-66
55348|code|BNE             loc_D888|40-209
55350|code|ADDW            SP, SP, #0x4B4|13-242-180-77
55354|code|POP.W           {R4-R9,PC}|189-232-240-131
55358|code|BLX             __errno_location|249-247-42-232
55362|code|LDR             R0, [R0]; errnum|0-104
55364|code|BLX             strerror|248-247-170-237
55368|code|LDR             R1, =(aCannotOpenUinp - 0xD850); "cannot open uinput device: %s: %s"|28-73
55370|code|MOV             R2, R9|74-70
55372|code|ADD             R1, PC; "cannot open uinput device: %s: %s"|121-68
55374|code|MOV             R3, R0|3-70
55376|code|MOVS            R0, #7|7-32
55378|code|BL              logMessage|251-247-247-251
55382|code|MOV             R0, R5; ptr|40-70
55384|code|MOVS            R5, #0|0-37
55386|code|BLX             free|248-247-116-237
55390|code|B               loc_D82A|228-231
55392|code|LDR             R0, =(aWriteStructUin - 0xD866); "write(struct uinput_user_dev)"|23-72
55394|code|ADD             R0, PC; "write(struct uinput_user_dev)"|120-68
55396|code|BL              logSystemError|251-247-112-252
55400|code|LDR             R0, [R5]; fd|40-104
55402|code|BLX             close|248-247-62-238
55406|code|MOV             R0, R5; ptr|40-70
55408|code|MOVS            R5, #0|0-37
55410|code|BLX             free|248-247-104-237
55414|code|B               loc_D82A|216-231
55416|code|BL              logMallocError|251-247-112-252
55420|code|B               loc_D82A|213-231
55422|code|LDR             R0, =(aIoctlUiSetPhys - 0xD884); "ioctl[UI_SET_PHYS]"|17-72
55424|code|ADD             R0, PC; "ioctl[UI_SET_PHYS]"|120-68
55426|code|BL              logSystemError|251-247-97-252
55430|code|B               loc_D81C|201-231
55432|code|BLX             __stack_chk_fail|248-247-212-238
55436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD734|160-117-1-0
55440|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
55444|data|DCD byte_250A8 - 0xD756|82-121-1-0
55448|data|DCD aUinput - 0xD758; "uinput"|84-84-0-0
55452|data|DCD off_24A7C - 0xD77E; "uinput"|254-114-1-0
55456|data|DCD aUinput - 0xD780; "uinput"|44-84-0-0
55460|data|DCD aSSS_1 - 0xD7BA; "%s %s %s"|250-83-0-0
55464|data|DCD aBrltty_1 - 0xD7B8; "BRLTTY"|8-84-0-0
55468|data|DCD a52dev - 0xD7BC; "5.2dev"|12-84-0-0
55472|data|DCD __progname_ptr - 0x24CD4|152-2-0-0
55476|data|DCD aPidUSD - 0xD7F4; "pid-%u/%s/%d"|220-83-0-0
55480|data|DCD aUinputOpenedSF - 0xD828; "uinput opened: %s fd=%d"|204-83-0-0
55484|data|DCD aCannotOpenUinp - 0xD850; "cannot open uinput device: %s: %s"|220-83-0-0
55488|data|DCD aWriteStructUin - 0xD866; "write(struct uinput_user_dev)"|166-83-0-0
55492|data|DCD aIoctlUiSetPhys - 0xD884; "ioctl[UI_SET_PHYS]"|92-83-0-0
55496|code|PUSH            {R3,LR}|8-181
55498|code|MOVW            R1, #0x5501; request|69-242-1-81
55502|code|LDR             R0, [R0]; fd|0-104
55504|code|BLX             ioctl|248-247-96-238
55508|code|ADDS            R0, #1|1-48
55510|code|BEQ             loc_D8DC|1-208
55512|code|MOVS            R0, #1|1-32
55514|code|POP             {R3,PC}|8-189
55516|code|LDR             R0, =(aIoctlUiDevCrea - 0xD8E2); "ioctl[UI_DEV_CREATE]"|2-72
55518|code|ADD             R0, PC; "ioctl[UI_DEV_CREATE]"|120-68
55520|code|BL              logSystemError|251-247-50-252
55524|code|MOVS            R0, #0|0-32
55526|code|POP             {R3,PC}|8-189
55528|data|DCD aIoctlUiDevCrea - 0xD8E2; "ioctl[UI_DEV_CREATE]"|110-83-0-0
55532|code|MOV             R2, R1|10-70
55534|code|MOVW            R1, #0x5564|69-242-100-81
55538|code|PUSH            {R3,LR}|8-181
55540|code|MOVT.W          R1, #0x4004; request|196-242-4-1
55544|code|LDR             R0, [R0]; fd|0-104
55546|code|BLX             ioctl|248-247-76-238
55550|code|ADDS            R0, #1|1-48
55552|code|BEQ             loc_D906|1-208
55554|code|MOVS            R0, #1|1-32
55556|code|POP             {R3,PC}|8-189
55558|code|LDR             R0, =(aIoctlUiSetEvbi - 0xD90C); "ioctl[UI_SET_EVBIT]"|3-72
55560|code|ADD             R0, PC; "ioctl[UI_SET_EVBIT]"|120-68
55562|code|BL              logSystemError|251-247-29-252
55566|code|MOVS            R0, #0|0-32
55568|code|POP             {R3,PC}|8-189
55570|data|ALIGN 4|0-191
55572|data|DCD aIoctlUiSetEvbi - 0xD90C; "ioctl[UI_SET_EVBIT]"|92-83-0-0
55576|code|PUSH.W          {R4-R11,LR}|45-233-240-79
55580|code|SUB             SP, SP, #0x1C|135-176
55582|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xD92A)|25-78
55584|code|ADD             R5, SP, #0x40+tv|1-173
55586|code|LDR             R7, =(__stack_chk_guard_ptr - 0x24CD4)|25-79
55588|code|MOV             R10, R3|154-70
55590|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
55592|code|MOVS            R4, #0|0-36
55594|code|MOV             R9, R0|129-70
55596|code|MOV             R8, R1|136-70
55598|code|LDR             R7, [R6,R7]; __stack_chk_guard|247-89
55600|code|MOV             R1, R4; tz|33-70
55602|code|MOV             R0, R5; tv|40-70
55604|code|MOV             R11, R2|147-70
55606|code|STR             R4, [SP,#0x40+tv]|1-148
55608|code|LDR             R3, [R7]|59-104
55610|code|STR             R4, [SP,#0x40+tv.tv_usec]|2-148
55612|code|STR             R4, [SP,#0x40+var_34]|3-148
55614|code|STR             R3, [SP,#0x40+var_2C]|5-147
55616|code|STR             R4, [SP,#0x40+var_30]|4-148
55618|code|BLX             gettimeofday|248-247-230-236
55622|code|LDR.W           R0, [R9]; fd|217-248-0-0
55626|code|MOV             R1, R5; buf|41-70
55628|code|MOVS            R2, #0x10; n|16-34
55630|code|STRH.W          R8, [SP,#0x40+var_34]|173-248-12-128
55634|code|STRH.W          R11, [SP,#0x40+var_34+2]|173-248-14-176
55638|code|STR.W           R10, [SP,#0x40+var_30]|205-248-16-160
55642|code|BLX             write|248-247-76-239
55646|code|ADDS            R0, #1|1-48
55648|code|IT NE|24-191
55650|code|MOVNE           R0, #1|1-32
55652|code|BEQ             loc_D974|6-208
55654|code|LDR             R2, [SP,#0x40+var_2C]|5-154
55656|code|LDR             R3, [R7]|59-104
55658|code|CMP             R2, R3|154-66
55660|code|BNE             loc_D980|8-209
55662|code|ADD             SP, SP, #0x1C|7-176
55664|code|POP.W           {R4-R11,PC}|189-232-240-143
55668|code|LDR             R0, =(aWriteStructInp - 0xD97A); "write(struct input_event)"|5-72
55670|code|ADD             R0, PC; "write(struct input_event)"|120-68
55672|code|BL              logSystemError|251-247-230-251
55676|code|MOV             R0, R4|32-70
55678|code|B               loc_D966|242-231
55680|code|BLX             __stack_chk_fail|248-247-88-238
55684|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD92A|170-115-1-0
55688|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
55692|data|DCD aWriteStructInp - 0xD97A; "write(struct input_event)"|2-83-0-0
55696|code|MOV             R2, R1|10-70
55698|code|MOVW            R1, #0x5565|69-242-101-81
55702|code|PUSH            {R3,LR}|8-181
55704|code|MOVT.W          R1, #0x4004; request|196-242-4-1
55708|code|LDR             R0, [R0]; fd|0-104
55710|code|BLX             ioctl|248-247-250-237
55714|code|ADDS            R0, #1|1-48
55716|code|BEQ             loc_D9AA|1-208
55718|code|MOVS            R0, #1|1-32
55720|code|POP             {R3,PC}|8-189
55722|code|LDR             R0, =(aIoctlUiSetKeyb - 0xD9B0); "ioctl[UI_SET_KEYBIT]"|3-72
55724|code|ADD             R0, PC; "ioctl[UI_SET_KEYBIT]"|120-68
55726|code|BL              logSystemError|251-247-203-251
55730|code|MOVS            R0, #0|0-32
55732|code|POP             {R3,PC}|8-189
55734|data|ALIGN 4|0-191
55736|data|DCD aIoctlUiSetKeyb - 0xD9B0; "ioctl[UI_SET_KEYBIT]"|232-82-0-0
55740|code|PUSH            {R4-R6,LR}|112-181
55742|code|MOV             R3, R2|19-70
55744|code|MOV             R4, R1|12-70
55746|code|MOV             R5, R2|21-70
55748|code|UXTH            R2, R1|138-178
55750|code|MOVS            R1, #1|1-33
55752|code|MOV             R6, R0|6-70
55754|code|BL              writeInputEvent|255-247-165-255
55758|code|CBZ             R0, locret_D9F8|152-177
55760|code|ADD.W           R1, R6, R4,LSR#3|6-235-212-1
55764|code|MOVS            R3, #1|1-35
55766|code|AND.W           R4, R4, #7|4-240-7-4
55770|code|LDRB            R2, [R1,#4]|10-121
55772|code|LSLS            R3, R4|163-64
55774|code|CBNZ            R5, loc_D9FA|101-185
55776|code|BIC.W           R3, R2, R3|34-234-3-3
55780|code|STRB            R3, [R1,#4]|11-113
55782|code|MOVS            R1, #0|0-33
55784|code|MOV             R0, R6|48-70
55786|code|MOV             R2, R1|10-70
55788|code|MOV             R3, R1|11-70
55790|code|BL              writeInputEvent|255-247-147-255
55794|code|ADDS            R0, #0|0-48
55796|code|IT NE|24-191
55798|code|MOVNE           R0, #1|1-32
55800|code|POP             {R4-R6,PC}|112-189
55802|code|ORRS            R3, R2|19-67
55804|code|STRB            R3, [R1,#4]|11-113
55806|code|B               loc_D9E6|242-231
55808|code|PUSH.W          {R4-R10,LR}|45-233-240-71
55812|code|MOV             R10, R0|130-70
55814|code|MOVS            R4, #0|0-36
55816|code|MOV.W           R9, #1|79-240-1-9
55820|code|B               loc_DA16|3-224
55822|code|ADDS            R4, #1|1-52
55824|code|CMP.W           R4, #0x300|180-245-64-127
55828|code|BEQ             loc_DA50|28-208
55830|code|ADD.W           R5, R10, R4,LSR#3|10-235-212-5
55834|code|AND.W           R8, R4, #7|4-240-7-8
55838|code|MOVS            R3, #0|0-35
55840|code|MOVS            R7, #0|0-39
55842|code|LDRB            R2, [R5,#4]|42-121
55844|code|LSR.W           R6, R2, R8|34-250-8-246
55848|code|AND.W           R2, R6, #1|6-240-1-2
55852|code|ORRS            R3, R2|19-67
55854|code|BEQ             loc_DA0E|238-208
55856|code|MOV             R2, R7|58-70
55858|code|MOV             R0, R10|80-70
55860|code|MOV             R1, R4|33-70
55862|code|BL              writeKeyEvent|255-247-193-255
55866|code|LSL.W           R2, R9, R8|9-250-8-242
55870|code|CBZ             R0, locret_DA52|64-177
55872|code|ADDS            R4, #1|1-52
55874|code|LDRB            R3, [R5,#4]|43-121
55876|code|CMP.W           R4, #0x300|180-245-64-127
55880|code|BIC.W           R3, R3, R2|35-234-2-3
55884|code|STRB            R3, [R5,#4]|43-113
55886|code|BNE             loc_DA16|226-209
55888|code|MOVS            R0, #1|1-32
55890|code|POP.W           {R4-R10,PC}|189-232-240-135
55894|data|ALIGN 4|0-191
55896|code|PUSH            {R4,LR}|16-181
55898|code|MOV             R4, R0|4-70
55900|code|BL              releasePressedKeys|255-247-208-255
55904|code|LDR             R0, [R4]; fd|32-104
55906|code|BLX             close|248-247-66-237
55910|code|MOV             R0, R4; ptr|32-70
55912|code|POP.W           {R4,LR}|189-232-16-64
55916|code|B.W             j_free|248-247-104-188
55920|code|PUSH            {R4,LR}|16-181
55922|code|MOV             R3, R1|11-70
55924|code|MOVS            R2, #0|0-34
55926|code|MOVS            R1, #0x14|20-33
55928|code|MOV             R4, R0|4-70
55930|code|BL              writeInputEvent|255-247-77-255
55934|code|CBZ             R0, locret_DA92|64-177
55936|code|MOVS            R1, #0|0-33
55938|code|MOV             R0, R4|32-70
55940|code|MOV             R2, R1|10-70
55942|code|MOV             R3, R1|11-70
55944|code|BL              writeInputEvent|255-247-70-255
55948|code|ADDS            R0, #0|0-48
55950|code|IT NE|24-191
55952|code|MOVNE           R0, #1|1-32
55954|code|POP             {R4,PC}|16-189
55956|code|PUSH            {R4,LR}|16-181
55958|code|MOV             R3, R1|11-70
55960|code|MOVS            R2, #1|1-34
55962|code|MOVS            R1, #0x14|20-33
55964|code|MOV             R4, R0|4-70
55966|code|BL              writeInputEvent|255-247-59-255
55970|code|CBZ             R0, locret_DAB6|64-177
55972|code|MOVS            R1, #0|0-33
55974|code|MOV             R0, R4|32-70
55976|code|MOV             R2, R1|10-70
55978|code|MOV             R3, R1|11-70
55980|code|BL              writeInputEvent|255-247-52-255
55984|code|ADDS            R0, #0|0-48
55986|code|IT NE|24-191
55988|code|MOVNE           R0, #1|1-32
55990|code|POP             {R4,PC}|16-189
55992|code|PUSH.W          {R4-R11,LR}|45-233-240-79
55996|code|SUB             SP, SP, #0x74|157-176
55998|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xDAC6)|51-76
56000|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|51-75
56002|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
56004|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
56006|code|STR             R3, [SP,#0x98+var_94]|1-147
56008|code|LDR             R3, [R3]|27-104
56010|code|STR             R3, [SP,#0x98+var_2C]|27-147
56012|code|BL              newUinputObject|255-247-40-254
56016|code|MOV             R5, R0|5-70
56018|code|CBZ             R0, loc_DAE2|48-177
56020|code|MOVS            R1, #1|1-33
56022|code|BL              enableUinputEventType|255-247-9-255
56026|code|CBNZ            R0, loc_DAF4|88-185
56028|code|MOV             R0, R5|40-70
56030|code|BL              destroyUinputObject|255-247-187-255
56034|code|MOVS            R0, #0|0-32
56036|code|LDR             R3, [SP,#0x98+var_94]|1-155
56038|code|LDR             R2, [SP,#0x98+var_2C]|27-154
56040|code|LDR             R3, [R3]|27-104
56042|code|CMP             R2, R3|154-66
56044|code|BNE             loc_DB86|75-209
56046|code|ADD             SP, SP, #0x74 ; 't'|29-176
56048|code|POP.W           {R4-R11,PC}|189-232-240-143
56052|code|ADD             R0, SP, #0x98+s; s|3-168
56054|code|MOVS            R1, #0; c|0-33
56056|code|MOVS            R2, #0x60 ; '`'; n|96-34
56058|code|MOV.W           R8, #1|79-240-1-8
56062|code|BLX             memset|248-247-176-236
56066|code|LDR             R3, =(linuxKeyMapDescriptors_ptr - 0x24CD4)|36-75
56068|code|LDR.W           R9, [R4,R3]; linuxKeyMapDescriptors|84-248-3-144
56072|code|MOV             R10, R9|202-70
56074|code|LDR.W           R0, [R10,#8]|218-248-8-0
56078|code|MOVS            R4, #0|0-36
56080|code|CBNZ            R0, loc_DB1A|24-185
56082|code|B               loc_DB60|37-224
56084|code|ADDS            R4, #1|1-52
56086|code|CMP             R4, R0|132-66
56088|code|BCS             loc_DB60|34-210
56090|code|LDR.W           R3, [R10,#4]|218-248-4-48
56094|code|LDRB            R1, [R3,R4]|25-93
56096|code|CMP             R1, #0|0-41
56098|code|BEQ             loc_DB14|247-208
56100|code|ADD             R3, SP, #0x98+var_28|28-171
56102|code|AND.W           R11, R1, #7|1-240-7-11
56106|code|ADD.W           LR, R3, R1,LSR#3|3-235-209-14
56110|code|MOVS            R3, #0|0-35
56112|code|LDRB.W          R12, [LR,#-0x64]|30-248-100-204
56116|code|LSR.W           R6, R12, R11|44-250-11-246
56120|code|AND.W           R2, R6, #1|6-240-1-2
56124|code|ORRS            R3, R2|19-67
56126|code|BNE             loc_DB14|233-209
56128|code|LSL.W           R3, R8, R11|8-250-11-243
56132|code|MOV             R0, R5|40-70
56134|code|ORR.W           R12, R12, R3|76-234-3-12
56138|code|STRB.W          R12, [LR,#-0x64]|14-248-100-204
56142|code|BL              enableUinputKey|255-247-31-255
56146|code|CMP             R0, #0|0-40
56148|code|BEQ             loc_DADC|194-208
56150|code|LDR.W           R0, [R10,#8]|218-248-8-0
56154|code|ADDS            R4, #1|1-52
56156|code|CMP             R4, R0|132-66
56158|code|BCC             loc_DB1A|220-211
56160|code|ADD.W           R10, R10, #0xC|10-241-12-10
56164|code|ADD.W           R3, R9, #0x60 ; '`'|9-241-96-3
56168|code|CMP             R10, R3|154-69
56170|code|BCC             loc_DB0A|206-211
56172|code|MOV             R0, R5|40-70
56174|code|MOVS            R1, #0x14|20-33
56176|code|BL              enableUinputEventType|255-247-188-254
56180|code|CMP             R0, #0|0-40
56182|code|BEQ             loc_DADC|177-208
56184|code|MOV             R0, R5|40-70
56186|code|BL              createUinputDevice|255-247-165-254
56190|code|CMP             R0, #0|0-40
56192|code|BEQ             loc_DADC|172-208
56194|code|MOV             R0, R5|40-70
56196|code|B               loc_DAE4|174-231
56198|code|BLX             __stack_chk_fail|248-247-86-237
56202|data|ALIGN 4|0-191
56204|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDAC6|14-114-1-0
56208|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
56212|data|DCD linuxKeyMapDescriptors_ptr - 0x24CD4|216-2-0-0
56216|code|BX              LR|112-71
56218|data|ALIGN 4|0-191
56220|code|PUSH            {R4,LR}|16-181
56222|code|MOV             R4, R0|4-70
56224|code|ADDS            R0, #0xC|12-48
56226|code|BL              destructHostCommandPackageData|0-240-33-249
56230|code|LDR             R3, [R4]|35-104
56232|code|LDR             R3, [R3]|27-104
56234|code|LDR             R0, [R3]; stream|24-104
56236|code|CBZ             R0, loc_DBBA|40-177
56238|code|BLX             fclose|248-247-26-238
56242|code|LDR             R3, [R4]|35-104
56244|code|MOVS            R2, #0|0-34
56246|code|LDR             R3, [R3]|27-104
56248|code|STR             R2, [R3]|26-96
56250|code|MOVS            R0, #1|1-32
56252|code|POP             {R4,PC}|16-189
56254|data|ALIGN 0x10|0-191
56256|code|LDR.W           R3, [R0],#0xC|80-248-12-59
56260|code|MOVS            R2, #0|0-34
56262|code|LDR             R3, [R3]|27-104
56264|code|STR             R2, [R3]|26-96
56266|code|B.W             constructHostCommandPackageData|0-240-5-185
56270|data|ALIGN 0x10|0-191
56272|code|LDRB            R2, [R0,#8]|2-122
56274|code|PUSH            {R3-R5,LR}|56-181
56276|code|LSLS            R3, R2, #0x1F|211-7
56278|code|BMI             loc_DBF2|12-212
56280|code|LDR             R2, =(aInvalidUnicode+0x18 - 0xDBDE); "r"|10-74
56282|code|ADD             R2, PC; "r"|122-68
56284|code|LDR             R3, [R0]|3-104
56286|code|MOV             R0, R1; fd|8-70
56288|code|MOV             R1, R2; modes|17-70
56290|code|LDR             R5, [R3]|29-104
56292|code|BLX             fdopen|248-247-160-235
56296|code|MOV             R4, R0|4-70
56298|code|STR             R0, [R5]|40-96
56300|code|CBZ             R0, loc_DBF8|32-177
56302|code|MOVS            R0, #1|1-32
56304|code|POP             {R3-R5,PC}|56-189
56306|code|LDR             R2, =(aW - 0xDBF8); "w"|5-74
56308|code|ADD             R2, PC; "w"|122-68
56310|code|B               loc_DBDC|241-231
56312|code|LDR             R0, =(aFdopen_0 - 0xDBFE); "fdopen"|4-72
56314|code|ADD             R0, PC; "fdopen"|120-68
56316|code|BL              logSystemError|251-247-164-250
56320|code|MOV             R0, R4|32-70
56322|code|POP             {R3-R5,PC}|56-189
56324|data|DCD aInvalidUnicode+0x18 - 0xDBDE; "r"|142-85-0-0
56328|data|DCD aW - 0xDBF8; "w"|196-59-0-0
56332|data|DCD aFdopen_0 - 0xDBFE; "fdopen"|250-80-0-0
56336|code|LDR             R3, [R0]|3-104
56338|code|CBZ             R3, loc_DC36|131-177
56340|code|PUSH            {R4-R6,LR}|112-181
56342|code|MOV             R5, R2|21-70
56344|code|MOV             R6, R1|14-70
56346|code|MOV             R4, R0|4-70
56348|code|LDR             R3, [R3]|27-104
56350|code|MOV             R0, R4|32-70
56352|code|MOV             R1, R5|41-70
56354|code|CBZ             R3, loc_DC28|11-177
56356|code|BLX             R6|176-71
56358|code|CBZ             R0, locret_DC34|40-177
56360|code|LDR.W           R3, [R4,#0x14]!|84-248-20-63
56364|code|CMP             R3, #0|0-43
56366|code|BNE             loc_DC1C|245-209
56368|code|MOVS            R0, #1|1-32
56370|code|POP             {R4-R6,PC}|112-189
56372|code|POP             {R4-R6,PC}|112-189
56374|code|MOVS            R0, #1|1-32
56376|code|BX              LR|112-71
56378|data|ALIGN 4|0-191
56380|code|LDRB            R2, [R0]|2-120
56382|code|MOVS            R3, #0|0-35
56384|code|STR             R3, [R0,#4]|67-96
56386|code|BFC.W           R2, #0, #1|111-243-0-2
56390|code|STR             R3, [R0,#8]|131-96
56392|code|STRB            R2, [R0]|2-112
56394|code|STR             R3, [R0,#0xC]|195-96
56396|code|BX              LR|112-71
56398|data|ALIGN 0x10|0-191
56400|code|PUSH.W          {R4-R8,LR}|45-233-240-65
56404|code|SUB             SP, SP, #0x68|154-176
56406|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0xDC62)|45-78
56408|code|MOVS            R2, #0xFF|255-34
56410|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|45-75
56412|code|MOV             R8, R0|128-70
56414|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
56416|code|MOV             R4, R1|12-70
56418|code|LDR             R7, [R6,R3]; __stack_chk_guard|247-88
56420|code|STR             R2, [SP,#0x80+var_80]|0-146
56422|code|LDR             R3, [R7]|59-104
56424|code|STR             R3, [SP,#0x80+var_1C]|25-147
56426|code|CMP             R1, #0|0-41
56428|code|BEQ             loc_DCFC|70-208
56430|code|LDR             R1, =(aStartingHostCo - 0xDC7C); "starting host command: %s"|41-73
56432|code|ADD             R5, SP, #0x80+var_6C|5-173
56434|code|MOVS            R0, #7|7-32
56436|code|LDR.W           R2, [R8]|216-248-0-32
56440|code|ADD             R1, PC; "starting host command: %s"|121-68
56442|code|BL              logMessage|251-247-227-249
56446|code|MOVS            R1, #0; c|0-33
56448|code|MOVS            R2, #0x50 ; 'P'; n|80-34
56450|code|MOV             R0, R5; s|40-70
56452|code|BLX             memset|248-247-236-235
56456|code|LDR             R1, =(loc_DBC0+1 - 0xDC92)|35-73
56458|code|MOV             R0, R5|40-70
56460|code|MOVS            R2, #0|0-34
56462|code|ADD             R1, PC; loc_DBC0|121-68
56464|code|MOVS            R3, #1|1-35
56466|code|ADD.W           LR, R4, #4|4-241-4-14
56470|code|STRB.W          R3, [SP,#0x80+var_64]|141-248-28-48
56474|code|STR.W           LR, [SP,#0x80+var_6C]|205-248-20-224
56478|code|ADD.W           LR, R4, #8|4-241-8-14
56482|code|STR             R3, [SP,#0x80+var_54]|11-147
56484|code|MOVS            R3, #2|2-35
56486|code|STR.W           LR, [SP,#0x80+var_58]|205-248-40-224
56490|code|ADD.W           LR, R4, #0xC|4-241-12-14
56494|code|STR             R3, [SP,#0x80+var_40]|16-147
56496|code|STR.W           LR, [SP,#0x80+var_44]|205-248-60-224
56500|code|BL              processHostCommandStreams|255-247-172-255
56504|code|CBNZ            R0, loc_DCCA|56-185
56506|code|LDR             R2, [SP,#0x80+var_1C]|25-154
56508|code|LDR             R3, [R7]|59-104
56510|code|LDR             R0, [SP,#0x80+var_80]|0-152
56512|code|CMP             R2, R3|154-66
56514|code|BNE             loc_DD06|32-209
56516|code|ADD             SP, SP, #0x68 ; 'h'|26-176
56518|code|POP.W           {R4-R8,PC}|189-232-240-129
56522|code|LDR             R3, =(prepareHostCommandStream_ptr - 0x24CD4)|20-75
56524|code|MOV             R0, R5|40-70
56526|code|MOVS            R2, #0|0-34
56528|code|LDR             R1, [R6,R3]; prepareHostCommandStream|241-88
56530|code|BL              processHostCommandStreams|255-247-157-255
56534|code|CBNZ            R0, loc_DCE6|48-185
56536|code|LDR             R1, =(sub_DB9C+1 - 0xDCE2)|17-73
56538|code|MOV             R0, R5|40-70
56540|code|MOVS            R2, #0|0-34
56542|code|ADD             R1, PC; sub_DB9C|121-68
56544|code|BL              processHostCommandStreams|255-247-150-255
56548|code|B               loc_DCBA|233-231
56550|code|LDRB            R3, [R4]|35-120
56552|code|MOV             R1, R8|65-70
56554|code|MOV             R0, SP|104-70
56556|code|MOV             R2, R5|42-70
56558|code|AND.W           R3, R3, #1|3-240-1-3
56562|code|BL              runCommand|0-240-157-248
56566|code|CMP             R0, #0|0-40
56568|code|BEQ             loc_DCD8|238-208
56570|code|B               loc_DCBA|222-231
56572|code|ADD             R0, SP, #0x80+var_7C|1-168
56574|code|MOV             R4, R0|4-70
56576|code|BL              initializeHostCommandOptions|255-247-156-255
56580|code|B               loc_DC6E|179-231
56582|code|BLX             __stack_chk_fail|248-247-150-236
56586|data|ALIGN 4|0-191
56588|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDC62|114-112-1-0
56592|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
56596|data|DCD aStartingHostCo - 0xDC7C; "starting host command: %s"|132-80-0-0
56600|data|DCD loc_DBC0+1 - 0xDC92|47-255-255-255
56604|data|DCD prepareHostCommandStream_ptr - 0x24CD4|232-2-0-0
56608|data|DCD sub_DB9C+1 - 0xDCE2|187-254-255-255
56612|code|MOVS            R1, #0|0-33
56614|code|B.W             runHostCommand|255-247-147-191
56618|data|ALIGN 4|0-191
56620|code|PUSH            {R3-R7,LR}|248-181
56622|code|MOV             R4, R0|4-70
56624|code|LDRB            R3, [R0,#8]|3-122
56626|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
56630|code|LSLS            R3, R3, #0x1F|219-7
56632|code|ITTEE MI|71-191
56634|code|ADDMI.W         R5, R0, #0x10|0-241-16-5
56638|code|ADDMI.W         R7, R0, #0xC|0-241-12-7
56642|code|ADDPL.W         R5, R4, #0xC|4-241-12-5
56646|code|ADDPL.W         R7, R4, #0x10|4-241-16-7
56650|code|ITE MI|76-191
56652|code|LDRMI           R0, [R0,#0xC]|192-104
56654|code|LDRPL           R0, [R4,#0x10]; fd|32-105
56656|code|BLX             close|248-247-202-235
56660|code|STR             R6, [R7]|62-96
56662|code|MOV             R0, R4|32-70
56664|code|LDR             R1, [R5]|41-104
56666|code|BL              finishHostCommandStream|255-247-57-255
56670|code|CBZ             R0, locret_DD64|8-177
56672|code|MOVS            R0, #1|1-32
56674|code|STR             R6, [R5]|46-96
56676|code|POP             {R3-R7,PC}|248-189
56678|data|ALIGN 4|0-191
56680|code|PUSH            {R3-R7,LR}|248-181
56682|code|MOV             R4, R0|4-70
56684|code|LDRB            R3, [R0,#8]|3-122
56686|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
56690|code|LSLS            R3, R3, #0x1F|219-7
56692|code|ITETE MI|75-191
56694|code|ADDMI.W         R7, R0, #0x10|0-241-16-7
56698|code|ADDPL.W         R7, R4, #0xC|4-241-12-7
56702|code|ADDMI.W         R5, R0, #0xC|0-241-12-5
56706|code|LDRPL           R0, [R4,#0xC]|224-104
56708|code|ITE MI|76-191
56710|code|LDRMI           R0, [R0,#0x10]; fd|0-105
56712|code|ADDPL.W         R5, R4, #0x10|4-241-16-5
56716|code|BLX             close|248-247-172-235
56720|code|STR             R6, [R7]|62-96
56722|code|LDR             R0, [R4,#4]; fd|96-104
56724|code|BLX             close|248-247-168-235
56728|code|CMP             R0, R6|176-66
56730|code|BEQ             loc_DDB6|12-208
56732|code|LDR             R2, [R4,#4]|98-104
56734|code|MOVS            R1, #0; cmd|0-33
56736|code|LDR             R0, [R5]; fd|40-104
56738|code|BLX             fcntl|248-247-120-235
56742|code|ADDS            R0, #1|1-48
56744|code|BEQ             loc_DDC2|11-208
56746|code|LDR             R0, [R5]; fd|40-104
56748|code|BLX             close|248-247-156-235
56752|code|MOVS            R0, #1|1-32
56754|code|STR             R6, [R5]|46-96
56756|code|POP             {R3-R7,PC}|248-189
56758|code|LDR             R0, =(aClose - 0xDDBC); "close"|6-72
56760|code|ADD             R0, PC; "close"|120-68
56762|code|BL              logSystemError|251-247-197-249
56766|code|MOVS            R0, #0|0-32
56768|code|POP             {R3-R7,PC}|248-189
56770|code|LDR             R0, =(aFcntlFDupfd - 0xDDC8); "fcntl[F_DUPFD]"|4-72
56772|code|ADD             R0, PC; "fcntl[F_DUPFD]"|120-68
56774|code|BL              logSystemError|251-247-191-249
56778|code|MOVS            R0, #0|0-32
56780|code|POP             {R3-R7,PC}|248-189
56782|data|ALIGN 0x10|0-191
56784|data|DCD aClose - 0xDDBC; "close"|96-79-0-0
56788|data|DCD aFcntlFDupfd - 0xDDC8; "fcntl[F_DUPFD]"|92-79-0-0
56792|code|MOV             R3, R0|3-70
56794|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
56798|code|MOVS            R0, #1|1-32
56800|code|STR             R2, [R3,#4]|90-96
56802|code|STR             R2, [R3]|26-96
56804|code|BX              LR|112-71
56806|data|ALIGN 4|0-191
56808|code|PUSH            {R4-R6,LR}|112-181
56810|code|ADD.W           R5, R0, #8|0-241-8-5
56814|code|CMP             R0, R5|168-66
56816|code|BCS             locret_DE0C|12-210
56818|code|MOV             R4, R0|4-70
56820|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
56824|code|LDR.W           R0, [R4],#4; fd|84-248-4-11
56828|code|ADDS            R3, R0, #1|67-28
56830|code|BEQ             loc_DE08|3-208
56832|code|BLX             close|248-247-114-235
56836|code|STR.W           R6, [R4,#-4]|68-248-4-108
56840|code|CMP             R5, R4|165-66
56842|code|BHI             loc_DDF8|245-216
56844|code|POP             {R4-R6,PC}|112-189
56846|data|ALIGN 0x10|0-191
56848|code|PUSH            {R3,LR}|8-181
56850|code|ADDS            R0, #0xC; pipedes|12-48
56852|code|BLX             pipe|248-247-226-237
56856|code|ADDS            R0, #1|1-48
56858|code|BEQ             loc_DE20|1-208
56860|code|MOVS            R0, #1|1-32
56862|code|POP             {R3,PC}|8-189
56864|code|LDR             R0, =(aPipe_0 - 0xDE26); "pipe"|2-72
56866|code|ADD             R0, PC; "pipe"|120-68
56868|code|BL              logSystemError|251-247-144-249
56872|code|MOVS            R0, #0|0-32
56874|code|POP             {R3,PC}|8-189
56876|data|DCD aPipe_0 - 0xDE26; "pipe"|118-62-0-0
56880|code|PUSH.W          {R4-R11,LR}|45-233-240-79
56884|code|SUB             SP, SP, #0x10C|195-176
56886|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xDE42)|86-77
56888|code|ADD             R4, SP, #0x10C+set|1-172
56890|code|LDR             R6, =(__stack_chk_guard_ptr - 0x24CD4)|86-78
56892|code|MOV             R11, R3|155-70
56894|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
56896|code|MOV             R10, R0|130-70
56898|code|ADD             R7, SP, #0x84|33-175
56900|code|MOV             R0, R4; set|32-70
56902|code|LDR             R6, [R5,R6]; __stack_chk_guard|174-89
56904|code|MOV             R8, R2|144-70
56906|code|MOV             R9, R1|137-70
56908|code|LDR             R3, [R6]|51-104
56910|code|STR             R3, [SP,#0x10C+var_8]|65-147
56912|code|BLX             sigemptyset|248-247-84-237
56916|code|MOV             R0, R4; set|32-70
56918|code|MOVS            R1, #0x11; signo|17-33
56920|code|BLX             sigaddset|248-247-64-235
56924|code|MOV             R1, R4; set|33-70
56926|code|MOV             R2, R7; oset|58-70
56928|code|MOVS            R0, #0; how|0-32
56930|code|BLX             sigprocmask|248-247-144-237
56934|code|BLX             fork|248-247-242-235
56938|code|ADDS            R3, R0, #1|67-28
56940|code|MOV             R4, R0|4-70
56942|code|BEQ             loc_DEB2|32-208
56944|code|CBNZ            R0, loc_DE92|120-185
56946|code|MOV             R1, R7; set|57-70
56948|code|MOV             R2, R4; oset|34-70
56950|code|MOVS            R0, #2; how|2-32
56952|code|BLX             sigprocmask|248-247-132-237
56956|code|LDR             R1, =(sub_DD68+1 - 0xDE86)|70-73
56958|code|MOV             R0, R8|64-70
56960|code|MOV             R2, R4|34-70
56962|code|ADD             R1, PC; sub_DD68|121-68
56964|code|BL              processHostCommandStreams|255-247-196-254
56968|code|CMP             R0, #0|0-40
56970|code|BNE             loc_DF1A|70-209
56972|code|MOVS            R0, #1; status|1-32
56974|code|BLX             _exit|248-247-234-236
56978|code|LDR             R1, =(sub_DD2C+1 - 0xDE9C)|66-73
56980|code|MOV             R0, R8|64-70
56982|code|MOVS            R2, #0|0-34
56984|code|ADD             R1, PC; sub_DD2C|121-68
56986|code|BL              processHostCommandStreams|255-247-185-254
56990|code|CMP             R0, #0|0-40
56992|code|BEQ             loc_DF16|57-208
56994|code|CMP.W           R11, #0|187-241-0-15
56998|code|BEQ             loc_DED6|22-208
57000|code|MOVS            R3, #0|0-35
57002|code|MOVS            R4, #1|1-36
57004|code|STR.W           R3, [R10]|202-248-0-48
57008|code|B               loc_DEBC|4-224
57010|code|LDR             R0, =(aFork_0 - 0xDEBA); "fork"|59-72
57012|code|MOVS            R4, #0|0-36
57014|code|ADD             R0, PC; "fork"|120-68
57016|code|BL              logSystemError|251-247-70-249
57020|code|MOVS            R2, #0; oset|0-34
57022|code|MOV             R1, R7; set|57-70
57024|code|MOVS            R0, #2; how|2-32
57026|code|BLX             sigprocmask|248-247-96-237
57030|code|LDR             R2, [SP,#0x10C+var_8]|65-154
57032|code|LDR             R3, [R6]|51-104
57034|code|MOV             R0, R4|32-70
57036|code|CMP             R2, R3|154-66
57038|code|BNE             loc_DF8A|92-209
57040|code|ADD             SP, SP, #0x10C|67-176
57042|code|POP.W           {R4-R11,PC}|189-232-240-143
57046|code|MOV             R0, R4; pid|32-70
57048|code|MOV             R2, R11; options|90-70
57050|code|MOV             R1, SP; stat_loc|105-70
57052|code|BLX             waitpid|248-247-126-235
57056|code|ADDS            R0, #1|1-48
57058|code|BEQ             loc_DF5E|60-208
57060|code|LDR             R3, [SP,#0x10C+var_10C]|0-155
57062|code|ANDS.W          R2, R3, #0x7F|19-240-127-2
57066|code|BEQ             loc_DF2E|32-208
57068|code|ADDS            R1, R2, #1|81-28
57070|code|SBFX.W          R1, R1, #1, #7|65-243-70-1
57074|code|CMP             R1, #0|0-41
57076|code|BLE             loc_DF46|39-221
57078|code|LDR             R1, =(aHostCommandTer - 0xDF06); "host command termination signal: %d: %s"|43-73
57080|code|MOVS            R0, #7|7-32
57082|code|LDR.W           R3, [R9]|217-248-0-48
57086|code|STR.W           R2, [R10]|202-248-0-32
57090|code|ADD             R1, PC; "host command termination signal: %d: %s"|121-68
57092|code|BL              logMessage|251-247-158-248
57096|code|LDR.W           R3, [R10]|218-248-0-48
57100|code|ADDS            R3, #0x80|128-51
57102|code|STR.W           R3, [R10]|202-248-0-48
57106|code|MOVS            R4, #1|1-36
57108|code|B               loc_DEBC|210-231
57110|code|MOV             R4, R0|4-70
57112|code|B               loc_DEBC|208-231
57114|code|LDR.W           R0, [R9]; file|217-248-0-0
57118|code|MOV             R1, R9; argv|73-70
57120|code|BLX             execvp|248-247-36-237
57124|code|LDR             R0, =(aExecvp_0 - 0xDF2A); "execvp"|32-72
57126|code|ADD             R0, PC; "execvp"|120-68
57128|code|BL              logSystemError|251-247-14-249
57132|code|B               loc_DE8C|174-231
57134|code|LDR             R1, =(aHostCommandExi - 0xDF3E); "host command exit status: %d: %s"|31-73
57136|code|UBFX.W          R2, R3, #8, #8|195-243-7-34
57140|code|MOVS            R0, #7|7-32
57142|code|LDR.W           R3, [R9]|217-248-0-48
57146|code|ADD             R1, PC; "host command exit status: %d: %s"|121-68
57148|code|STR.W           R2, [R10]|202-248-0-32
57152|code|BL              logMessage|251-247-128-248
57156|code|B               loc_DF12|229-231
57158|code|UXTB            R2, R3|218-178
57160|code|CMP             R2, #0x7F|127-42
57162|code|BEQ             loc_DF68|13-208
57164|code|LDR             R1, =(aUnknownHostCom - 0xDF5A); "unknown host command status: 0X%X: %s"|24-73
57166|code|MOV             R2, R3|26-70
57168|code|MOVS            R0, #7|7-32
57170|code|LDR.W           R3, [R9]|217-248-0-48
57174|code|ADD             R1, PC; "unknown host command status: 0X%X: %s"|121-68
57176|code|BL              logMessage|251-247-116-248
57180|code|B               loc_DF12|217-231
57182|code|LDR             R0, =(aWaitpid_0 - 0xDF64); "waitpid"|21-72
57184|code|ADD             R0, PC; "waitpid"|120-68
57186|code|BL              logSystemError|251-247-241-248
57190|code|B               loc_DF12|212-231
57192|code|LDR             R1, =(aHostCommandSto - 0xDF78); "host command stop signal: %d: %s"|19-73
57194|code|UBFX.W          R2, R3, #8, #8|195-243-7-34
57198|code|MOVS            R0, #7|7-32
57200|code|LDR.W           R3, [R9]|217-248-0-48
57204|code|ADD             R1, PC; "host command stop signal: %d: %s"|121-68
57206|code|STR.W           R2, [R10]|202-248-0-32
57210|code|BL              logMessage|251-247-99-248
57214|code|LDR.W           R3, [R10]|218-248-0-48
57218|code|ADDS            R3, #0x80|128-51
57220|code|STR.W           R3, [R10]|202-248-0-48
57224|code|B               loc_DF12|195-231
57226|code|BLX             __stack_chk_fail|248-247-84-235
57230|data|ALIGN 0x10|0-191
57232|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDE42|146-110-1-0
57236|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
57240|data|DCD sub_DD68+1 - 0xDE86|227-254-255-255
57244|data|DCD sub_DD2C+1 - 0xDE9C|145-254-255-255
57248|data|DCD aFork_0 - 0xDEBA; "fork"|122-78-0-0
57252|data|DCD aHostCommandTer - 0xDF06; "host command termination signal: %d: %s"|106-78-0-0
57256|data|DCD aExecvp_0 - 0xDF2A; "execvp"|18-78-0-0
57260|data|DCD aHostCommandExi - 0xDF3E; "host command exit status: %d: %s"|14-78-0-0
57264|data|DCD aUnknownHostCom - 0xDF5A; "unknown host command status: 0X%X: %s"|98-78-0-0
57268|data|DCD aWaitpid_0 - 0xDF64; "waitpid"|224-77-0-0
57272|data|DCD aHostCommandSto - 0xDF78; "host command stop signal: %d: %s"|32-78-0-0
57276|code|SUB.W           R3, R0, #0x30 ; '0'|160-241-48-3
57280|code|CMP             R3, #9|9-43
57282|code|IT LS|152-191
57284|code|STRLS           R3, [R1]|11-96
57286|code|BLS             loc_DFE2|12-217
57288|code|SUB.W           R3, R0, #0x61 ; 'a'|160-241-97-3
57292|code|CMP             R3, #5|5-43
57294|code|ITT LS|156-191
57296|code|SUBLS           R0, #0x57 ; 'W'|87-56
57298|code|STRLS           R0, [R1]|8-96
57300|code|BLS             loc_DFE2|5-217
57302|code|SUB.W           R3, R0, #0x41 ; 'A'|160-241-65-3
57306|code|CMP             R3, #5|5-43
57308|code|BHI             loc_DFEA|5-216
57310|code|SUBS            R0, #0x37 ; '7'|55-56
57312|code|STR             R0, [R1]|8-96
57314|code|MOVS            R3, #4|4-35
57316|code|MOVS            R0, #1|1-32
57318|code|STR             R3, [R2]|19-96
57320|code|BX              LR|112-71
57322|code|MOVS            R0, #0|0-32
57324|code|BX              LR|112-71
57326|data|ALIGN 0x10|0-191
57328|code|SUBS            R0, #0x30 ; '0'|48-56
57330|code|CMP             R0, #7|7-40
57332|code|ITTTT LS|159-191
57334|code|STRLS           R0, [R1]|8-96
57336|code|MOVLS           R3, #3|3-35
57338|code|MOVLS           R0, #1|1-32
57340|code|STRLS           R3, [R2]|19-96
57342|code|IT HI|136-191
57344|code|MOVHI           R0, #0|0-32
57346|code|BX              LR|112-71
57348|code|LDR             R0, =(sub_E024+1 - 0xE00E)|6-72
57350|code|MOVS            R1, #0|0-33
57352|code|PUSH            {R4,LR}|16-181
57354|code|ADD             R0, PC; sub_E024|120-68
57356|code|BL              newQueue|254-247-166-255
57360|code|MOV             R4, R0|4-70
57362|code|CBZ             R0, loc_E01A|16-177
57364|code|MOVS            R1, #0|0-33
57366|code|BL              setQueueData|255-247-11-248
57370|code|MOV             R0, R4|32-70
57372|code|POP             {R4,PC}|16-189
57374|data|ALIGN 0x10|0-191
57376|data|DCD sub_E024+1 - 0xE00E|23-0-0-0
57380|code|PUSH            {R4,LR}|16-181
57382|code|MOV             R4, R0|4-70
57384|code|LDR             R0, [R0]; ptr|0-104
57386|code|CBZ             R0, loc_E030|8-177
57388|code|BLX             free|248-247-138-233
57392|code|LDR             R0, [R4,#8]; ptr|160-104
57394|code|CBZ             R0, loc_E038|8-177
57396|code|BLX             free|248-247-134-233
57400|code|MOV             R0, R4; ptr|32-70
57402|code|POP.W           {R4,LR}|189-232-16-64
57406|code|B.W             j_free|248-247-127-185
57410|data|ALIGN 4|0-191
57412|code|B.W             j_free|248-247-124-185
57416|code|PUSH            {R3,LR}|8-181
57418|code|LDR             R2, [R0,#4]; n|66-104
57420|code|LDR             R3, [R1,#4]|75-104
57422|code|CMP             R2, R3|154-66
57424|code|BEQ             loc_E056|1-208
57426|code|MOVS            R0, #0|0-32
57428|code|POP             {R3,PC}|8-189
57430|code|LDR             R0, [R0]; s1|0-104
57432|code|LDR             R1, [R1]; s2|9-104
57434|code|BLX             wmemcmp|248-247-76-234
57438|code|CLZ.W           R0, R0|176-250-128-240
57442|code|LSRS            R0, R0, #5|64-9
57444|code|POP             {R3,PC}|8-189
57446|data|ALIGN 4|0-191
57448|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE070)|20-75
57450|code|PUSH            {R4-R6,LR}|112-181
57452|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
57454|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|20-77
57456|code|SUB             SP, SP, #0x60|152-176
57458|code|MOV             R4, R0|4-70
57460|code|MOVS            R0, #3; ver|3-32
57462|code|MOV             R2, SP; stat_buf|106-70
57464|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
57466|code|LDR             R3, [R5]|43-104
57468|code|STR             R3, [SP,#0x70+var_14]|23-147
57470|code|BLX             __xstat|248-247-212-235
57474|code|ADDS            R0, #1|1-48
57476|code|BEQ             loc_E0AA|17-208
57478|code|CBZ             R4, loc_E0AA|132-177
57480|code|LDRD.W          R0, R1, [SP,#0x70+var_70]|221-233-0-1
57484|code|LDR             R6, [SP,#0x70+var_64]|3-158
57486|code|B               loc_E094|1-224
57488|code|LDR             R4, [R4,#4]|100-104
57490|code|CBZ             R4, loc_E0AA|84-177
57492|code|LDRD.W          R2, R3, [R4,#0x10]|212-233-4-35
57496|code|CMP             R1, R3|153-66
57498|code|IT EQ|8-191
57500|code|CMPEQ           R0, R2|144-66
57502|code|BNE             loc_E090|247-209
57504|code|LDR             R3, [R4,#0x18]|163-105
57506|code|CMP             R3, R6|179-66
57508|code|BNE             loc_E090|244-209
57510|code|MOVS            R0, #1|1-32
57512|code|B               loc_E0AC|0-224
57514|code|MOVS            R0, #0|0-32
57516|code|LDR             R2, [SP,#0x70+var_14]|23-154
57518|code|LDR             R3, [R5]|43-104
57520|code|CMP             R2, R3|154-66
57522|code|BNE             loc_E0B8|1-209
57524|code|ADD             SP, SP, #0x60 ; '`'|24-176
57526|code|POP             {R4-R6,PC}|112-189
57528|code|BLX             __stack_chk_fail|248-247-188-234
57532|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE070|100-108-1-0
57536|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
57540|code|PUSH.W          {R3-R11,LR}|45-233-248-79
57544|code|MOV             R8, R1|136-70
57546|code|MOV             R9, R2|145-70
57548|code|MOV             R10, R3|154-70
57550|code|MOV             R7, R0|7-70
57552|code|BL              getAllOverrideDirectories|251-247-246-252
57556|code|LDRB.W          R11, [R9]|153-248-0-176
57560|code|MOV             R5, R0|5-70
57562|code|MOV             R0, R8|64-70
57564|code|BL              locatePathName|251-247-86-250
57568|code|MOV             R6, R0|6-70
57570|code|CBZ             R5, loc_E122|245-177
57572|code|LDR             R0, [R5]|40-104
57574|code|CBNZ            R0, loc_E0F0|24-185
57576|code|B               loc_E122|27-224
57578|code|LDR.W           R0, [R5,#4]!|85-248-4-15
57582|code|CBZ             R0, loc_E122|192-177
57584|code|LDRB            R3, [R0]|3-120
57586|code|CMP             R3, #0|0-43
57588|code|BEQ             loc_E0EA|249-208
57590|code|MOV             R1, R6|49-70
57592|code|BL              makePath|251-247-170-250
57596|code|MOV             R4, R0|4-70
57598|code|MOV             R1, R0|1-70
57600|code|CMP             R0, #0|0-40
57602|code|BEQ             loc_E0EA|242-208
57604|code|MOV             R0, R7|56-70
57606|code|BL              sub_E068|255-247-175-255
57610|code|CBNZ            R0, loc_E114|24-185
57612|code|MOV             R0, R4; filename|32-70
57614|code|BL              testFilePath|251-247-93-251
57618|code|CBNZ            R0, loc_E17E|160-187
57620|code|MOV             R0, R4; ptr|32-70
57622|code|BLX             free|248-247-22-233
57626|code|LDR.W           R0, [R5,#4]!|85-248-4-15
57630|code|CMP             R0, #0|0-40
57632|code|BNE             loc_E0F0|230-209
57634|code|MOV             R0, R7|56-70
57636|code|MOV             R1, R8|65-70
57638|code|BL              sub_E068|255-247-159-255
57642|code|CBNZ            R0, loc_E192|144-187
57644|code|MOV             R0, R8|64-70
57646|code|MOV             R1, R9|73-70
57648|code|MOV             R2, R10|82-70
57650|code|BL              openFile|251-247-235-253
57654|code|MOV             R5, R0|5-70
57656|code|CBZ             R0, loc_E140|16-177
57658|code|MOV             R0, R5|40-70
57660|code|POP.W           {R3-R11,PC}|189-232-248-143
57664|code|CMP.W           R11, #0x61 ; 'a'|187-241-97-15
57668|code|IT NE|24-191
57670|code|CMPNE.W         R11, #0x77 ; 'w'|187-241-119-15
57674|code|BNE             loc_E13A|246-209
57676|code|BLX             __errno_location|248-247-162-235
57680|code|LDR             R3, [R0]|3-104
57682|code|MOV             R4, R0|4-70
57684|code|CMP             R3, #2|2-43
57686|code|BEQ             loc_E1AA|40-208
57688|code|CMP             R3, #0xD|13-43
57690|code|IT NE|24-191
57692|code|CMPNE           R3, #0x1E|30-43
57694|code|BNE             loc_E13A|236-209
57696|code|BL              getPrimaryOverrideDirectory|251-247-164-253
57700|code|MOV             R7, R0|7-70
57702|code|CMP             R0, #0|0-40
57704|code|BEQ             loc_E13A|231-208
57706|code|MOV             R1, R6|49-70
57708|code|BL              makePath|251-247-112-250
57712|code|MOV             R4, R0|4-70
57714|code|CMP             R0, #0|0-40
57716|code|BEQ             loc_E13A|225-208
57718|code|MOV             R0, R7|56-70
57720|code|BL              ensureDirectory|251-247-182-251
57724|code|CBZ             R0, loc_E18A|40-177
57726|code|MOV             R1, R9|73-70
57728|code|MOV             R2, R10|82-70
57730|code|MOV             R0, R4|32-70
57732|code|BL              openFile|251-247-194-253
57736|code|MOV             R5, R0|5-70
57738|code|MOV             R0, R4; ptr|32-70
57740|code|BLX             free|248-247-218-232
57744|code|B               loc_E13A|211-231
57746|code|LDR             R1, =(aDataFileInclud - 0xE19E); "data file include loop: %s"|16-73
57748|code|MOV             R2, R8|66-70
57750|code|MOVS            R0, #4|4-32
57752|code|MOVS            R5, #0|0-37
57754|code|ADD             R1, PC; "data file include loop: %s"|121-68
57756|code|BL              logMessage|250-247-82-255
57760|code|BLX             __errno_location|248-247-120-235
57764|code|MOVS            R3, #2|2-35
57766|code|STR             R3, [R0]|3-96
57768|code|B               loc_E13A|199-231
57770|code|MOV             R0, R8|64-70
57772|code|BL              getPathDirectory|251-247-158-249
57776|code|MOV             R11, R0|131-70
57778|code|CBZ             R0, loc_E1C2|48-177
57780|code|BL              ensureDirectory|251-247-152-251
57784|code|MOV             R7, R0|7-70
57786|code|MOV             R0, R11; ptr|88-70
57788|code|BLX             free|248-247-194-232
57792|code|CBNZ            R7, loc_E1C6|15-185
57794|code|LDR             R3, [R4]|35-104
57796|code|B               loc_E158|200-231
57798|code|MOV             R0, R8|64-70
57800|code|MOV             R1, R9|73-70
57802|code|MOV             R2, R10|82-70
57804|code|POP.W           {R3-R11,LR}|189-232-248-79
57808|code|B.W             openFile|251-247-156-189
57812|data|DCD aDataFileInclud - 0xE19E; "data file include loop: %s"|206-76-0-0
57816|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE1E2)|44-75
57818|code|PUSH.W          {R4-R10,LR}|45-233-240-71
57822|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
57824|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|43-77
57826|code|SUB             SP, SP, #0x10|132-176
57828|code|MOV             R7, R0|7-70
57830|code|MOV             R6, R1|14-70
57832|code|LDM             R1, {R0,R1}|3-201
57834|code|MOV             R8, R2|144-70
57836|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
57838|code|ADD             R3, SP, #0x30+var_2C|1-171
57840|code|STM.W           R3, {R0,R1}|131-232-3-0
57844|code|MOV             R2, R3|26-70
57846|code|LDR             R1, =(sub_E048+1 - 0xE200)|39-73
57848|code|MOV             R0, R7|56-70
57850|code|LDR             R3, [R5]|43-104
57852|code|ADD             R1, PC; sub_E048|121-68
57854|code|STR             R3, [SP,#0x30+var_24]|3-147
57856|code|BL              findItem|255-247-12-248
57860|code|MOV             R4, R0|4-70
57862|code|CBZ             R4, loc_E216|52-177
57864|code|LDR             R2, [SP,#0x30+var_24]|3-154
57866|code|LDR             R3, [R5]|43-104
57868|code|CMP             R2, R3|154-66
57870|code|BNE             loc_E288|59-209
57872|code|ADD             SP, SP, #0x10|4-176
57874|code|POP.W           {R4-R10,PC}|189-232-240-135
57878|code|CMP.W           R8, #0|184-241-0-15
57882|code|BEQ             loc_E266|36-208
57884|code|MOVS            R0, #0x10; size|16-32
57886|code|BLX             malloc|248-247-180-234
57890|code|MOV             R8, R0|128-70
57892|code|CBZ             R0, loc_E27A|72-179
57894|code|MOV             R3, R0|3-70
57896|code|LDR.W           R9, [R6,#4]|214-248-4-144
57900|code|STR.W           R4, [R3],#4|67-248-4-75
57904|code|ADDS            R3, #4|4-51
57906|code|STR             R4, [R0,#4]|68-96
57908|code|STR.W           R4, [R3],#4|67-248-4-75
57912|code|MOV.W           R0, R9,LSL#2; size|79-234-137-0
57916|code|STR             R4, [R3]|28-96
57918|code|BLX             malloc|248-247-164-234
57922|code|MOV             R10, R0|130-70
57924|code|CBZ             R0, loc_E282|232-177
57926|code|LDR             R1, [R6]; s2|49-104
57928|code|MOV             R2, R9; n|74-70
57930|code|BLX             wmemcpy|248-247-218-232
57934|code|LDR             R3, [R6,#4]|115-104
57936|code|STR.W           R4, [R8,#8]|200-248-8-64
57940|code|MOV             R1, R8|65-70
57942|code|STR.W           R4, [R8,#0xC]|200-248-12-64
57946|code|STM.W           R8, {R0,R3}|136-232-9-0
57950|code|MOV             R0, R7|56-70
57952|code|BL              enqueueItem|254-247-112-255
57956|code|CBZ             R0, loc_E26A|8-177
57958|code|MOV             R0, R8|64-70
57960|code|B               loc_E208|206-231
57962|code|MOV             R0, R10; ptr|80-70
57964|code|BLX             free|248-247-106-232
57968|code|MOV             R0, R8; ptr|64-70
57970|code|BLX             free|248-247-104-232
57974|code|MOVS            R0, #0|0-32
57976|code|B               loc_E208|198-231
57978|code|BL              logMallocError|250-247-111-255
57982|code|MOV             R0, R8|64-70
57984|code|B               loc_E208|194-231
57986|code|BL              logMallocError|250-247-107-255
57990|code|B               loc_E270|243-231
57992|code|BLX             __stack_chk_fail|248-247-212-233
57996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE1E2|242-106-1-0
58000|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
58004|data|DCD sub_E048+1 - 0xE200|73-254-255-255
58008|code|PUSH.W          {R4-R8,LR}|45-233-240-65
58012|code|MOV             R5, R0|5-70
58014|code|MOV             R7, R1|15-70
58016|code|MOV             R4, R3|28-70
58018|code|MOV             R6, R3|30-70
58020|code|CBNZ            R3, loc_E2B8|67-185
58022|code|LDR             R0, [R5]; ptr|40-104
58024|code|CBZ             R0, loc_E2AE|8-177
58026|code|BLX             free|248-247-76-232
58030|code|STR             R6, [R5]|46-96
58032|code|MOVS            R0, #1|1-32
58034|code|STR             R4, [R7]|60-96
58036|code|POP.W           {R4-R8,PC}|189-232-240-129
58040|code|LSLS            R0, R3, #2; size|152-0
58042|code|MOV             R8, R2|144-70
58044|code|BLX             malloc|248-247-100-234
58048|code|MOV             R6, R0|6-70
58050|code|CBZ             R0, loc_E2CE|32-177
58052|code|MOV             R1, R8; s2|65-70
58054|code|MOV             R2, R4; n|34-70
58056|code|BLX             wmemcpy|248-247-154-232
58060|code|B               loc_E2A6|235-231
58062|code|BL              logMallocError|250-247-69-255
58066|code|MOV             R0, R6|48-70
58068|code|POP.W           {R4-R8,PC}|189-232-240-129
58072|code|PUSH            {R3-R5,LR}|56-181
58074|code|MOV             R4, R0|4-70
58076|code|MOV             R5, R1|13-70
58078|code|B               loc_E2EA|4-224
58080|code|MOV             R0, R4|32-70
58082|code|BL              getQueueData|254-247-163-254
58086|code|MOV             R4, R0|4-70
58088|code|CBZ             R0, locret_E2FA|56-177
58090|code|MOV             R0, R4|32-70
58092|code|MOV             R1, R5|41-70
58094|code|MOVS            R2, #0|0-34
58096|code|BL              sub_E1D8|255-247-114-255
58100|code|CMP             R0, #0|0-40
58102|code|BEQ             loc_E2E0|243-208
58104|code|POP             {R3-R5,PC}|56-189
58106|code|POP             {R3-R5,PC}|56-189
58108|code|PUSH            {R3,LR}|8-181
58110|code|LDR             R0, [R0,#0x2C]|192-106
58112|code|BL              sub_E2D8|255-247-234-255
58116|code|ADDS            R0, #0|0-48
58118|code|IT NE|24-191
58120|code|MOVNE           R0, #1|1-32
58122|code|POP             {R3,PC}|8-189
58124|code|PUSH            {R3-R5,LR}|56-181
58126|code|MOVS            R2, #8; n|8-34
58128|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE31C)|7-75
58130|code|MOV             R5, R1|13-70
58132|code|LDR             R4, =(brlDotNumbers_ptr - 0x24CD4)|7-76
58134|code|MOV             R1, R0; c|1-70
58136|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
58138|code|LDR             R4, [R3,R4]; brlDotNumbers|28-89
58140|code|MOV             R0, R4; s|32-70
58142|code|BLX             wmemchr|248-247-254-232
58146|code|CBZ             R0, locret_E32C|24-177
58148|code|SUBS            R3, R0, R4|3-27
58150|code|MOVS            R0, #1|1-32
58152|code|ASRS            R3, R3, #2|155-16
58154|code|STR             R3, [R5]|43-96
58156|code|POP             {R3-R5,PC}|56-189
58158|data|ALIGN 0x10|0-191
58160|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE31C|184-105-1-0
58164|data|DCD brlDotNumbers_ptr - 0x24CD4|236-2-0-0
58168|code|PUSH            {R3-R5,LR}|56-181
58170|code|MOVS            R2, #8; n|8-34
58172|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE348)|6-75
58174|code|MOV             R5, R1|13-70
58176|code|LDR             R4, =(brlDotBits_ptr - 0x24CD4)|6-76
58178|code|MOV             R1, R0; c|1-70
58180|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
58182|code|LDR             R4, [R3,R4]; brlDotBits|28-89
58184|code|MOV             R0, R4; s|32-70
58186|code|BLX             memchr|248-247-178-234
58190|code|CBZ             R0, locret_E356|16-177
58192|code|SUBS            R3, R0, R4|3-27
58194|code|MOVS            R0, #1|1-32
58196|code|STR             R3, [R5]|43-96
58198|code|POP             {R3-R5,PC}|56-189
58200|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE348|140-105-1-0
58204|data|DCD brlDotBits_ptr - 0x24CD4|200-2-0-0
58208|code|PUSH            {R1-R3}|14-180
58210|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xE36A)|22-74
58212|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|22-75
58214|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
58216|code|PUSH            {R4-R7,LR}|240-181
58218|code|SUB             SP, SP, #0x110|196-176
58220|code|LDR             R6, [R2,R3]; __stack_chk_guard|214-88
58222|code|LDR             R1, [SP,#0x130+varg_r1]|73-153
58224|code|LDR             R3, [R6]|51-104
58226|code|STR             R3, [SP,#0x130+var_24]|67-147
58228|code|CBZ             R0, loc_E3B2|232-177
58230|code|LDR             R3, [R0,#8]|131-104
58232|code|LDR             R2, [R0]; int|2-104
58234|code|CBZ             R3, loc_E380|11-177
58236|code|ADD.W           R3, R0, #8; int|0-241-8-3
58240|code|ADD             R4, SP, #0x130+s|3-172
58242|code|STR             R1, [SP,#0x130+var_130]; int|0-145
58244|code|ADD             R7, SP, #0x130+varg_r2|74-175
58246|code|MOV.W           R1, #0x100; int|79-244-128-113
58250|code|MOV             R0, R4; s|32-70
58252|code|STR             R7, [SP,#0x130+var_12C]; int|1-151
58254|code|STR             R7, [SP,#0x130+var_128]|2-151
58256|code|BL              formatInputError|251-247-172-253
58260|code|LDR             R1, =(aCheckingSDevic+0x14 - 0xE39E); "%s"|11-73
58262|code|MOV             R2, R4|34-70
58264|code|MOVS            R0, #4|4-32
58266|code|ADD             R1, PC; "%s"|121-68
58268|code|BL              logMessage|250-247-82-254
58272|code|LDR             R2, [SP,#0x130+var_24]|67-154
58274|code|LDR             R3, [R6]|51-104
58276|code|CMP             R2, R3|154-66
58278|code|BNE             loc_E3B8|7-209
58280|code|ADD             SP, SP, #0x110|68-176
58282|code|POP.W           {R4-R7,LR}|189-232-240-64
58286|code|ADD             SP, SP, #0xC|3-176
58288|code|BX              LR|112-71
58290|code|MOV             R3, R0|3-70
58292|code|MOV             R2, R0|2-70
58294|code|B               loc_E380|227-231
58296|code|BLX             __stack_chk_fail|248-247-60-233
58300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE36A|106-105-1-0
58304|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
58308|data|DCD aCheckingSDevic+0x14 - 0xE39E; "%s"|230-57-0-0
58312|code|PUSH.W          {R4-R8,LR}|45-233-240-65
58316|code|MOV             R8, R0|128-70
58318|code|MOV             R4, R2|20-70
58320|code|CBZ             R2, loc_E406|202-177
58322|code|LDR             R0, [R0]|0-104
58324|code|CBZ             R0, loc_E3FE|152-177
58326|code|MOV             R6, R1|14-70
58328|code|ADD.W           R5, R8, #4|8-241-4-5
58332|code|B               loc_E3EA|5-224
58334|code|BHI             loc_E414|25-216
58336|code|SUBS            R4, #1|1-60
58338|code|BEQ             loc_E406|16-208
58340|code|LDR.W           R0, [R5],#4; wc|85-248-4-11
58344|code|CBZ             R0, loc_E3FE|72-177
58346|code|BLX             towlower|247-247-96-239
58350|code|MOV             R8, R5|168-70
58352|code|MOV             R7, R0|7-70
58354|code|LDR.W           R0, [R6],#4; wc|86-248-4-11
58358|code|BLX             towlower|247-247-90-239
58362|code|CMP             R7, R0|135-66
58364|code|BCS             loc_E3DE|239-210
58366|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
58370|code|POP.W           {R4-R8,PC}|189-232-240-129
58374|code|LDR.W           R0, [R8]|216-248-0-0
58378|code|ADDS            R0, #0|0-48
58380|code|IT NE|24-191
58382|code|MOVNE           R0, #1|1-32
58384|code|POP.W           {R4-R8,PC}|189-232-240-129
58388|code|MOVS            R0, #1|1-32
58390|code|POP.W           {R4-R8,PC}|189-232-240-129
58394|data|ALIGN 4|0-191
58396|code|PUSH            {R3-R5,LR}|56-181
58398|code|MOV             R5, R0|5-70
58400|code|MOV             R0, R1; s|8-70
58402|code|MOV             R4, R1|12-70
58404|code|BLX             wcslen|247-247-60-239
58408|code|MOV             R1, R4|33-70
58410|code|MOV             R2, R0|2-70
58412|code|MOV             R0, R5|40-70
58414|code|POP.W           {R3-R5,LR}|189-232-56-64
58418|code|B.W             compareKeyword|255-247-201-191
58422|data|ALIGN 4|0-191
58424|code|PUSH            {R3,LR}|8-181
58426|code|BL              compareKeyword|255-247-197-255
58430|code|CLZ.W           R0, R0|176-250-128-240
58434|code|LSRS            R0, R0, #5|64-9
58436|code|POP             {R3,PC}|8-189
58438|data|ALIGN 4|0-191
58440|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE454)|32-75
58442|code|CMP             R2, #0|0-42
58444|code|PUSH.W          {R4-R8,LR}|45-233-240-65
58448|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
58450|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|31-76
58452|code|SUB             SP, SP, #8|130-176
58454|code|ADD             R7, SP, #0|0-175
58456|code|IT LE|216-191
58458|code|MOVLE           R0, #0|0-32
58460|code|LDR             R6, [R3,R4]; __stack_chk_guard|30-89
58462|code|LDR             R3, [R6]|51-104
58464|code|STR             R3, [R7,#8+var_4]|123-96
58466|code|BLE             loc_E4AA|34-221
58468|code|ADD.W           R3, R2, #8|2-241-8-3
58472|code|MOV             R8, SP|232-70
58474|code|BIC.W           R3, R3, #7|35-240-7-3
58478|code|SUBS            R1, #4|4-57
58480|code|SUB.W           SP, SP, R3|173-235-3-13
58484|code|MOV             R5, R0|5-70
58486|code|ADD.W           R4, SP, R2|13-235-2-4
58490|code|MOV.W           LR, #0|79-240-0-14
58494|code|MOV             R0, SP; nptr|104-70
58496|code|MOV             R3, SP|107-70
58498|code|STRB.W          LR, [SP,R2]|13-248-2-224
58502|code|LDR.W           R2, [R1,#4]!|81-248-4-47
58506|code|CMP             R2, #0xFF|255-42
58508|code|BHI             loc_E4BA|21-216
58510|code|STRB.W          R2, [R3],#1|3-248-1-43
58514|code|CMP             R3, R4|163-66
58516|code|BNE             loc_E486|247-209
58518|code|MOV             R1, R7; endptr|57-70
58520|code|MOVS            R2, #0; base|0-34
58522|code|BLX             strtol|247-247-76-239
58526|code|LDR             R3, [R7,#8+var_8]|59-104
58528|code|LDRB            R3, [R3]|27-120
58530|code|CBNZ            R3, loc_E4C0|107-185
58532|code|STR             R0, [R5]|40-96
58534|code|MOVS            R0, #1|1-32
58536|code|MOV             SP, R8|197-70
58538|code|LDR             R2, [R7,#8+var_4]|122-104
58540|code|LDR             R3, [R6]|51-104
58542|code|CMP             R2, R3|154-66
58544|code|BNE             loc_E4C6|9-209
58546|code|ADDS            R7, #8|8-55
58548|code|MOV             SP, R7|189-70
58550|code|POP.W           {R4-R8,PC}|189-232-240-129
58554|code|MOVS            R0, #0|0-32
58556|code|MOV             SP, R8|197-70
58558|code|B               loc_E4AA|244-231
58560|code|MOVS            R0, #0|0-32
58562|code|MOV             SP, R8|197-70
58564|code|B               loc_E4AA|241-231
58566|code|BLX             __stack_chk_fail|248-247-182-232
58570|data|ALIGN 4|0-191
58572|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE454|128-104-1-0
58576|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
58580|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xE4E4)|52-74
58582|code|PUSH.W          {R4-R11,LR}|45-233-240-79
58586|code|MOV             R8, R1|136-70
58588|code|SUB             SP, SP, #0x24|137-176
58590|code|LDR             R1, =(__stack_chk_guard_ptr - 0x24CD4)|51-73
58592|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
58594|code|ADD             R7, SP, #8|2-175
58596|code|ADD.W           R5, R7, #0xC|7-241-12-5
58600|code|STR             R0, [R7,#0x1C+var_1C]|56-96
58602|code|LDR             R3, [R2,R1]; __stack_chk_guard|83-88
58604|code|LDR             R2, [R3]|26-104
58606|code|STR             R3, [R7,#0x1C+var_18]|123-96
58608|code|STR             R2, [R7,#0x1C+var_8]|122-97
58610|code|BL              getUtf8Length|1-240-137-250
58614|code|ADDS            R4, R0, #1|68-28
58616|code|MOV             R9, R0|129-70
58618|code|MOV             R0, R8|64-70
58620|code|LSLS            R4, R4, #2|164-0
58622|code|ADD.W           R2, R4, #0xA|4-241-10-2
58626|code|BIC.W           R2, R2, #7|34-240-7-2
58630|code|SUB.W           SP, SP, R2|173-235-2-13
58634|code|BL              getUtf8Length|1-240-125-250
58638|code|LDR             R3, [R7,#0x1C+var_1C]|59-104
58640|code|LSRS            R2, R4, #2|162-8
58642|code|ADD.W           R4, R7, #8|7-241-8-4
58646|code|ADD.W           R10, SP, #0x24+var_1C|13-241-8-10
58650|code|MOV             R1, R5|41-70
58652|code|STR             R3, [R7,#0x1C+var_14]|187-96
58654|code|STR.W           R10, [R7,#0x1C+var_10]|199-248-12-160
58658|code|ADD.W           R12, R0, #1|0-241-1-12
58662|code|MOV             R11, R0|131-70
58664|code|MOV             R0, R4|32-70
58666|code|MOV.W           R6, R12,LSL#2|79-234-140-6
58670|code|ADD.W           LR, R6, #0xA|6-241-10-14
58674|code|BIC.W           R3, LR, #7|46-240-7-3
58678|code|SUB.W           SP, SP, R3|173-235-3-13
58682|code|BL              convertUtf8ToWchars|1-240-147-250
58686|code|MOV             R0, R4|32-70
58688|code|LSRS            R2, R6, #2|178-8
58690|code|MOV             R1, R5|41-70
58692|code|STR.W           R8, [R7,#0x1C+var_14]|199-248-8-128
58696|code|ADD             R4, SP, #0x24+var_1C|2-172
58698|code|STR             R4, [R7,#0x1C+var_10]|252-96
58700|code|BL              convertUtf8ToWchars|1-240-138-250
58704|code|MOVS            R3, #0|0-35
58706|code|LDR             R0, =(unk_250AC - 0xE55E)|23-72
58708|code|STR             R3, [SP,#0x24+var_24]|0-147
58710|code|MOVS            R2, #1|1-34
58712|code|LDR             R1, =(aGlobalDataVari - 0xE562); "global-data-variables"|22-73
58714|code|ADD             R0, PC; unk_250AC|120-68
58716|code|LDR             R3, =(sub_E004+1 - 0xE564)|22-75
58718|code|ADD             R1, PC; "global-data-variables"|121-68
58720|code|ADD             R3, PC; sub_E004|123-68
58722|code|BL              getProgramQueue|254-247-67-253
58726|code|CBZ             R0, loc_E5A2|224-177
58728|code|MOV             R1, R5|41-70
58730|code|MOVS            R2, #1|1-34
58732|code|STR.W           R10, [R7,#0x1C+var_10]|199-248-12-160
58736|code|STR.W           R9, [R7,#0x1C+var_C]|199-248-16-144
58740|code|BL              sub_E1D8|255-247-48-254
58744|code|MOV             R1, R0|1-70
58746|code|CBZ             R0, loc_E58A|48-177
58748|code|MOV             R2, R4|34-70
58750|code|MOV             R3, R11|91-70
58752|code|ADDS            R0, #8|8-48
58754|code|ADDS            R1, #0xC|12-49
58756|code|BL              sub_E298|255-247-136-254
58760|code|CBNZ            R0, loc_E59E|72-185
58762|code|MOVS            R0, #0|0-32
58764|code|LDR             R3, [R7,#0x1C+var_18]|123-104
58766|code|LDR             R2, [R7,#0x1C+var_8]|122-105
58768|code|LDR             R3, [R3]|27-104
58770|code|CMP             R2, R3|154-66
58772|code|BNE             loc_E5A4|6-209
58774|code|ADDS            R7, #0x1C|28-55
58776|code|MOV             SP, R7|189-70
58778|code|POP.W           {R4-R11,PC}|189-232-240-143
58782|code|MOVS            R0, #1|1-32
58784|code|B               loc_E58C|244-231
58786|code|B               loc_E58C|243-231
58788|code|BLX             __stack_chk_fail|248-247-70-232
58792|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE4E4|240-103-1-0
58796|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
58800|data|DCD unk_250AC - 0xE55E|78-107-1-0
58804|data|DCD aGlobalDataVari - 0xE562; "global-data-variables"|38-73-0-0
58808|data|DCD sub_E004+1 - 0xE564|161-250-255-255
58812|code|MOV             R3, R0|3-70
58814|code|LDR             R0, =(aTableextension - 0xE5C6); "tableExtension"|8-72
58816|code|PUSH            {R4,LR}|16-181
58818|code|ADD             R0, PC; "tableExtension"|120-68
58820|code|MOV             R4, R1|12-70
58822|code|MOV             R1, R3|25-70
58824|code|BL              setGlobalDataVariable|255-247-132-255
58828|code|CBZ             R0, locret_E5DE|56-177
58830|code|LDR             R0, =(aSubtableextens - 0xE5D6); "subtableExtension"|5-72
58832|code|MOV             R1, R4|33-70
58834|code|ADD             R0, PC; "subtableExtension"|120-68
58836|code|BL              setGlobalDataVariable|255-247-126-255
58840|code|ADDS            R0, #0|0-48
58842|code|IT NE|24-191
58844|code|MOVNE           R0, #1|1-32
58846|code|POP             {R4,PC}|16-189
58848|data|DCD aTableextension - 0xE5C6; "tableExtension"|218-72-0-0
58852|data|DCD aSubtableextens - 0xE5D6; "subtableExtension"|218-72-0-0
58856|code|PUSH.W          {R3-R9,LR}|45-233-248-67
58860|code|MOV             R7, R0|7-70
58862|code|LDR             R4, [R0,#0x34]|68-107
58864|code|MOV             R9, R1|137-70
58866|code|STR             R4, [R0,#0x30]|4-99
58868|code|B               loc_E5F8|0-224
58870|code|STR             R4, [R7,#0x30]|60-99
58872|code|MOV             R8, R4|160-70
58874|code|LDR.W           R6, [R4],#4|84-248-4-107
58878|code|MOV             R0, R6; wc|48-70
58880|code|BLX             iswspace|247-247-96-238
58884|code|MOV             R5, R0|5-70
58886|code|CMP             R0, #0|0-40
58888|code|BNE             loc_E5F6|245-209
58890|code|STR.W           R8, [R7,#0x34]|199-248-52-128
58894|code|CBNZ            R6, loc_E628|94-185
58896|code|CMP.W           R9, #0|185-241-0-15
58900|code|BEQ             loc_E622|5-208
58902|code|LDR             R1, =(aSNotSpecified - 0xE620); "%s not specified"|6-73
58904|code|MOV             R0, R7|56-70
58906|code|MOV             R2, R9|74-70
58908|code|ADD             R1, PC; "%s not specified"|121-68
58910|code|BL              reportDataError|255-247-159-254
58914|code|MOV             R0, R5|40-70
58916|code|POP.W           {R3-R9,PC}|189-232-248-131
58920|code|MOVS            R5, #1|1-37
58922|code|MOV             R0, R5|40-70
58924|code|POP.W           {R3-R9,PC}|189-232-248-131
58928|data|DCD aSNotSpecified - 0xE620; "%s not specified"|164-72-0-0
58932|code|PUSH            {R4,LR}|16-181
58934|code|MOV             R3, R1|11-70
58936|code|MOVS            R1, #0|0-33
58938|code|STR             R3, [R0,#0x30]|3-99
58940|code|STR             R3, [R0,#0x34]|67-99
58942|code|MOV             R4, R0|4-70
58944|code|BL              findDataOperand|255-247-210-255
58948|code|CBZ             R0, loc_E65A|72-177
58950|code|LDR             R3, [R4,#0x30]|35-107
58952|code|LDR             R3, [R3]|27-104
58954|code|CMP             R3, #0x23 ; '#'|35-43
58956|code|BEQ             loc_E65A|5-208
58958|code|LDR             R3, [R4,#0x20]|35-106
58960|code|MOV             R0, R4|32-70
58962|code|LDR             R1, [R4,#0x24]|97-106
58964|code|POP.W           {R4,LR}|189-232-16-64
58968|code|BX              R3|24-71
58970|code|MOVS            R0, #1|1-32
58972|code|POP             {R4,PC}|16-189
58974|data|ALIGN 0x10|0-191
58976|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xE668)|27-75
58978|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|28-74
58980|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
58982|code|PUSH.W          {R4-R8,LR}|45-233-240-65
58986|code|SUB             SP, SP, #0x10|132-176
58988|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
58990|code|ADD             R7, SP, #0|0-175
58992|code|MOV             R4, R1|12-70
58994|code|MOV             R5, R0|5-70
58996|code|LDR             R3, [R6]|51-104
58998|code|STR             R3, [R7,#0xC]|251-96
59000|code|BLX             strlen|248-247-142-232
59004|code|LDR             R3, [R4,#8]|163-104
59006|code|ADD.W           R1, R7, #8|7-241-8-1
59010|code|STR             R5, [R7,#4]|125-96
59012|code|ADDS            R3, #1|1-51
59014|code|STR             R3, [R4,#8]|163-96
59016|code|ADDS            R2, R0, #1|66-28
59018|code|ADDS            R0, R7, #4|56-29
59020|code|LSLS            R3, R2, #2|147-0
59022|code|ADDS            R3, #0xA|10-51
59024|code|BIC.W           R3, R3, #7|35-240-7-3
59028|code|SUB.W           SP, SP, R3|173-235-3-13
59032|code|STR.W           SP, [R7,#8]|199-248-8-208
59036|code|BL              convertUtf8ToWchars|1-240-226-249
59040|code|LDR             R2, [R7,#4]|122-104
59042|code|MOV             R0, R4|32-70
59044|code|LDRB            R3, [R2]|19-120
59046|code|CBNZ            R3, loc_E6BE|83-185
59048|code|MOV             R1, SP|105-70
59050|code|BL              sub_E634|255-247-195-255
59054|code|LDR             R2, [R7,#0xC]|250-104
59056|code|LDR             R3, [R6]|51-104
59058|code|CMP             R2, R3|154-66
59060|code|BNE             loc_E6CC|10-209
59062|code|ADDS            R7, #0x10|16-55
59064|code|MOV             SP, R7|189-70
59066|code|POP.W           {R4-R8,PC}|189-232-240-129
59070|code|LDR             R1, =(aIllegalUtf8Cha - 0xE6C6); "illegal UTF-8 character at offset %u"|6-73
59072|code|SUBS            R2, R2, R5|82-27
59074|code|ADD             R1, PC; "illegal UTF-8 character at offset %u"|121-68
59076|code|BL              reportDataError|255-247-76-254
59080|code|MOVS            R0, #1|1-32
59082|code|B               loc_E6AE|240-231
59084|code|BLX             __stack_chk_fail|247-247-178-239
59088|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE668|108-102-1-0
59092|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
59096|data|DCD aIllegalUtf8Cha - 0xE6C6; "illegal UTF-8 character at offset %u"|18-72-0-0
59100|code|PUSH            {R4-R6,LR}|112-181
59102|code|MOV             R4, R0|4-70
59104|code|MOV             R0, R1|8-70
59106|code|MOV             R5, R1|13-70
59108|code|BL              getElementIdentifier|254-247-54-252
59112|code|MOVS            R1, #0|0-33
59114|code|MOV             R6, R0|6-70
59116|code|MOV             R0, R4|32-70
59118|code|BL              findDataOperand|255-247-123-255
59122|code|CBNZ            R0, loc_E6F8|8-185
59124|code|MOVS            R0, #1|1-32
59126|code|POP             {R4-R6,PC}|112-189
59128|code|MOV             R0, R4|32-70
59130|code|LDR             R1, [R4,#0x30]|33-107
59132|code|BL              sub_E634|255-247-154-255
59136|code|MOV             R4, R0|4-70
59138|code|CBZ             R5, loc_E70E|37-177
59140|code|MOV             R0, R5|40-70
59142|code|BL              getElementIdentifier|254-247-37-252
59146|code|CMP             R6, R0|134-66
59148|code|BEQ             loc_E712|1-208
59150|code|MOV             R0, R4|32-70
59152|code|POP             {R4-R6,PC}|112-189
59154|code|MOV             R0, R5|40-70
59156|code|BL              deleteElement|254-247-226-251
59160|code|MOV             R0, R4|32-70
59162|code|POP             {R4-R6,PC}|112-189
59164|code|LDR             R3, [R0,#0x34]|67-107
59166|code|PUSH            {R4}|16-180
59168|code|LDR             R2, [R3]|26-104
59170|code|MOV             R4, R2|20-70
59172|code|CBZ             R2, loc_E72E|26-177
59174|code|MOVS            R4, #1|1-36
59176|code|ADDS            R3, #4|4-51
59178|code|STR             R3, [R0,#0x34]|67-99
59180|code|STR             R2, [R1]|10-96
59182|code|MOV             R0, R4|32-70
59184|code|POP.W           {R4}|93-248-4-75
59188|code|BX              LR|112-71
59190|data|ALIGN 4|0-191
59192|code|PUSH            {R3-R5,LR}|56-181
59194|code|MOV             R5, R0|5-70
59196|code|LDR             R4, [R0,#0x34]|68-107
59198|code|LDR             R3, [R0,#0x30]|3-107
59200|code|SUBS            R3, R4, R3|227-26
59202|code|ASRS            R3, R3, #2|155-16
59204|code|CMP             R3, R1|139-66
59206|code|BCC             loc_E752|4-211
59208|code|SUB.W           R4, R4, R1,LSL#2|164-235-129-4
59212|code|MOVS            R0, #1|1-32
59214|code|STR             R4, [R5,#0x34]|108-99
59216|code|POP             {R3-R5,PC}|56-189
59218|code|MOV             R2, R1|10-70
59220|code|LDR             R1, =(aUngetCharacter - 0xE75A); "unget character count out of range: %u "...|2-73
59222|code|ADD             R1, PC; "unget character count out of range: %u "...|121-68
59224|code|BL              reportDataError|255-247-2-254
59228|code|MOVS            R0, #0|0-32
59230|code|POP             {R3-R5,PC}|56-189
59232|data|DCD aUngetCharacter - 0xE75A; "unget character count out of range: %u "...|166-71-0-0
59236|code|PUSH            {R4-R6,LR}|112-181
59238|code|MOV             R6, R1|14-70
59240|code|MOV             R1, R2|17-70
59242|code|MOV             R5, R0|5-70
59244|code|BL              findDataOperand|255-247-60-255
59248|code|CBZ             R0, locret_E796|136-177
59250|code|LDR             R4, [R5,#0x34]|108-107
59252|code|B               loc_E77C|2-224
59254|code|BLX             iswspace|247-247-166-237
59258|code|CBNZ            R0, loc_E788|40-185
59260|code|ADDS            R4, #4|4-52
59262|code|LDR             R3, [R4]|35-104
59264|code|STR             R4, [R5,#0x34]|108-99
59266|code|MOV             R0, R3; wc|24-70
59268|code|CMP             R3, #0|0-43
59270|code|BNE             loc_E776|246-209
59272|code|LDR             R3, [R5,#0x30]|43-107
59274|code|MOVS            R0, #1|1-32
59276|code|SUBS            R4, R4, R3|228-26
59278|code|STR             R3, [R6]|51-96
59280|code|ASRS            R4, R4, #2|164-16
59282|code|STR             R4, [R6,#4]|116-96
59284|code|POP             {R4-R6,PC}|112-189
59286|code|POP             {R4-R6,PC}|112-189
59288|code|PUSH            {R3-R7,LR}|248-181
59290|code|MOV             R6, R1|14-70
59292|code|MOV             R1, R2|17-70
59294|code|MOV             R7, R0|7-70
59296|code|BL              findDataOperand|255-247-34-255
59300|code|CBZ             R0, locret_E7D6|184-177
59302|code|LDR             R4, [R7,#0x30]|60-107
59304|code|MOV             R0, R4; s|32-70
59306|code|BLX             wcslen|247-247-122-237
59310|code|LSLS            R0, R0, #2|128-0
59312|code|ADDS            R5, R4, R0|37-24
59314|code|STR             R5, [R7,#0x34]|125-99
59316|code|ASRS            R3, R0, #2|131-16
59318|code|STR             R4, [R6]|52-96
59320|code|STR             R3, [R6,#4]|115-96
59322|code|CBNZ            R3, loc_E7C2|19-185
59324|code|B               loc_E7D2|9-224
59326|code|STR             R4, [R6,#4]|116-96
59328|code|CBZ             R4, loc_E7D2|60-177
59330|code|LDR.W           R0, [R5,#-4]!; wc|85-248-4-13
59334|code|SUBS            R4, R3, #1|92-30
59336|code|BLX             iswspace|247-247-124-237
59340|code|MOV             R3, R4|35-70
59342|code|CMP             R0, #0|0-40
59344|code|BNE             loc_E7BE|245-209
59346|code|MOVS            R0, #1|1-32
59348|code|POP             {R3-R7,PC}|248-189
59350|code|POP             {R3-R7,PC}|248-189
59352|code|PUSH.W          {R4-R11,LR}|45-233-240-79
59356|code|MOV             R11, R1|139-70
59358|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xE7E8)|205-76
59360|code|SUB             SP, SP, #0x44|145-176
59362|code|LDR             R1, =(__stack_chk_guard_ptr - 0x24CD4)|205-73
59364|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
59366|code|ADD             R7, SP, #8|2-175
59368|code|MOV             R8, R2|144-70
59370|code|SUBS.W          R10, R3, #0|179-241-0-10
59374|code|MOV             R2, R4|34-70
59376|code|STR             R4, [R7,#0x3C+var_2C]|60-97
59378|code|STR             R0, [R7,#0x3C+var_30]|248-96
59380|code|MOV.W           R4, #0|79-240-0-4
59384|code|LDR             R2, [R2,R1]; __stack_chk_guard|82-88
59386|code|STR             R2, [R7,#0x3C+var_28]|122-97
59388|code|LDR             R2, [R2]|18-104
59390|code|STRB.W          R4, [R11]|139-248-0-64
59394|code|STR             R2, [R7,#0x3C+var_8]|122-99
59396|code|BGT             loc_E832|21-220
59398|code|B               loc_EAB8|87-225
59400|code|LDRB.W          R0, [R11]|155-248-0-0
59404|code|MOVS            R2, #1; n|1-34
59406|code|ADD.W           R1, R7, #0x24 ; '$'; s2|7-241-36-1
59410|code|ADDS            R4, #1|1-52
59412|code|ADDS            R5, R2, R0|21-24
59414|code|CMP             R5, #0xFE|254-45
59416|code|BHI.W           loc_EA76|0-242-45-129
59420|code|ADD.W           R0, R11, R0,LSL#2|11-235-128-0
59424|code|UXTB            R5, R5|237-178
59426|code|ADDS            R0, #4; s1|4-48
59428|code|BLX             wmemcpy|247-247-236-237
59432|code|CMP             R10, R4|162-69
59434|code|STRB.W          R5, [R11]|139-248-0-80
59438|code|BLE.W           loc_EABA|64-243-68-129
59442|code|LDR.W           R2, [R8,R4,LSL#2]|88-248-36-32
59446|code|LSLS            R1, R4, #2|161-0
59448|code|ADD.W           R3, R8, R1|8-235-1-3
59452|code|STR             R3, [R7,#0x3C+var_20]|251-97
59454|code|CMP             R2, #0x5C ; '\'|92-42
59456|code|STR             R2, [R7,#0x3C+var_18]|122-98
59458|code|BNE             loc_E808|225-209
59460|code|ADDS            R2, R4, #1|98-28
59462|code|CMP             R10, R2|146-69
59464|code|MOV             R5, R2|21-70
59466|code|BLE.W           loc_E972|64-243-146-128
59470|code|ADDS            R0, R1, #4|8-29
59472|code|ADD.W           R12, R8, R0|8-235-0-12
59476|code|LDR.W           R6, [R8,R0]|88-248-0-96
59480|code|SUB.W           R0, R6, #0x23 ; '#'; switch 89 cases|166-241-35-0
59484|code|STR             R6, [R7,#0x3C+var_18]|126-98
59486|code|CMP             R0, #0x58|88-40
59488|code|BHI.W           def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|0-242-132-128
59492|code|TBH.W           [PC,R0,LSL#1]; switch jump|223-232-16-240
59496|data|DCW 0x95; jump table for switch statement|149-0
59498|data|DCW 0x82|130-0
59500|data|DCW 0x82|130-0
59502|data|DCW 0x82|130-0
59504|data|DCW 0x82|130-0
59506|data|DCW 0x82|130-0
59508|data|DCW 0x82|130-0
59510|data|DCW 0x82|130-0
59512|data|DCW 0x82|130-0
59514|data|DCW 0x82|130-0
59516|data|DCW 0x82|130-0
59518|data|DCW 0x82|130-0
59520|data|DCW 0x82|130-0
59522|data|DCW 0x82|130-0
59524|data|DCW 0x82|130-0
59526|data|DCW 0x82|130-0
59528|data|DCW 0x82|130-0
59530|data|DCW 0x82|130-0
59532|data|DCW 0x82|130-0
59534|data|DCW 0x82|130-0
59536|data|DCW 0x82|130-0
59538|data|DCW 0x82|130-0
59540|data|DCW 0x82|130-0
59542|data|DCW 0x82|130-0
59544|data|DCW 0x82|130-0
59546|data|DCW 0xB2|178-0
59548|data|DCW 0x82|130-0
59550|data|DCW 0x82|130-0
59552|data|DCW 0x82|130-0
59554|data|DCW 0x82|130-0
59556|data|DCW 0x82|130-0
59558|data|DCW 0x82|130-0
59560|data|DCW 0x82|130-0
59562|data|DCW 0x82|130-0
59564|data|DCW 0x82|130-0
59566|data|DCW 0x82|130-0
59568|data|DCW 0x82|130-0
59570|data|DCW 0x82|130-0
59572|data|DCW 0x82|130-0
59574|data|DCW 0x82|130-0
59576|data|DCW 0x82|130-0
59578|data|DCW 0x82|130-0
59580|data|DCW 0x82|130-0
59582|data|DCW 0x82|130-0
59584|data|DCW 0x82|130-0
59586|data|DCW 0x82|130-0
59588|data|DCW 0x82|130-0
59590|data|DCW 0x82|130-0
59592|data|DCW 0x82|130-0
59594|data|DCW 0x82|130-0
59596|data|DCW 0xA9|169-0
59598|data|DCW 0x82|130-0
59600|data|DCW 0x82|130-0
59602|data|DCW 0xA3|163-0
59604|data|DCW 0x82|130-0
59606|data|DCW 0x82|130-0
59608|data|DCW 0x82|130-0
59610|data|DCW 0x95|149-0
59612|data|DCW 0x82|130-0
59614|data|DCW 0x82|130-0
59616|data|DCW 0x82|130-0
59618|data|DCW 0x82|130-0
59620|data|DCW 0x82|130-0
59622|data|DCW 0x9F|159-0
59624|data|DCW 0x82|130-0
59626|data|DCW 0x82|130-0
59628|data|DCW 0x82|130-0
59630|data|DCW 0x9B|155-0
59632|data|DCW 0x82|130-0
59634|data|DCW 0x82|130-0
59636|data|DCW 0x82|130-0
59638|data|DCW 0x82|130-0
59640|data|DCW 0x82|130-0
59642|data|DCW 0x82|130-0
59644|data|DCW 0x82|130-0
59646|data|DCW 0x97|151-0
59648|data|DCW 0x59|89-0
59650|data|DCW 0x82|130-0
59652|data|DCW 0x82|130-0
59654|data|DCW 0x124|36-1
59656|data|DCW 0x120|32-1
59658|data|DCW 0x11C|28-1
59660|data|DCW 0x112|18-1
59662|data|DCW 0x10E|14-1
59664|data|DCW 0x82|130-0
59666|data|DCW 0xA3|163-0
59668|data|DCW 0x82|130-0
59670|data|DCW 0x82|130-0
59672|data|DCW 0xE4|228-0
59674|code|LDR             R0, =(elf_gnu_hash_indexes+0x12C); jumptable 0000E864 case 111|128-72
59676|code|MOVS            R1, #3|3-33
59678|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
59680|code|LDR             R3, [R3,R0]|27-88
59682|code|MOV             R0, R3|24-70
59684|code|ADDS            R3, R2, R1|83-24
59686|code|ADD.W           R2, R7, #0x2C ; ','|7-241-44-2
59690|code|STR             R3, [R7,#0x3C+var_24]|187-97
59692|code|ADD.W           R3, R7, #0x28 ; '('|7-241-40-3
59696|code|MOVS            R6, #0|0-38
59698|code|STM.W           R7, {R8,R11}|135-232-0-9
59702|code|STR             R4, [R7,#0x3C+var_34]|188-96
59704|code|MOV             R9, R12|225-70
59706|code|MOV             R4, R6|52-70
59708|code|MOV             R8, R3|152-70
59710|code|MOV             R6, R0|6-70
59712|code|MOV             R11, R2|147-70
59714|code|B               loc_E964|15-224
59716|code|LDR.W           R0, [R9,#4]!|89-248-4-15
59720|code|MOV             R1, R8|65-70
59722|code|MOV             R2, R11|90-70
59724|code|BLX             R6|176-71
59726|code|CBZ             R0, loc_E96A|96-177
59728|code|LDR             R1, [R7,#0x3C+var_10]|249-106
59730|code|LDR             R2, [R7,#0x3C+var_14]|186-106
59732|code|LSL.W           R3, R4, R1|4-250-1-243
59736|code|ORR.W           R4, R3, R2|67-234-2-4
59740|code|LDR             R3, [R7,#0x3C+var_24]|187-105
59742|code|CMP             R5, R3|157-66
59744|code|BEQ.W           loc_EAD6|0-240-185-128
59748|code|ADDS            R5, #1|1-53
59750|code|CMP             R5, R10|85-69
59752|code|BNE             loc_E944|236-209
59754|code|LDR             R4, [R7,#0x3C+var_34]|188-104
59756|code|CMP             R10, R5; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|170-69
59758|code|IT GT|200-191
59760|code|ADDGT           R5, #1|1-53
59762|code|LDR             R1, =(aInvalidEscapeS - 0xE97C); "invalid escape sequence"|107-73
59764|code|MOVS            R2, #5; category|5-34
59766|code|MOVS            R0, #0; domainname|0-32
59768|code|ADD             R1, PC; "invalid escape sequence"|121-68
59770|code|BLX             dcgettext|247-247-122-238
59774|code|LDR             R3, [R7,#0x3C+var_20]|251-105
59776|code|LDR             R1, =(aSLs - 0xE988); "%s: %.*ls"|104-73
59778|code|STR             R3, [SP,#0x44+var_44]|0-147
59780|code|ADD             R1, PC; "%s: %.*ls"|121-68
59782|code|SUBS            R3, R5, R4|43-27
59784|code|MOV             R2, R0|2-70
59786|code|LDR             R0, [R7,#0x3C+var_30]|248-104
59788|code|BL              reportDataError|255-247-232-252
59792|code|B               loc_EA80|118-224
59794|code|MOV             R4, R2; jumptable 0000E864 cases 35,92|20-70
59796|code|B               loc_E808|56-231
59798|code|MOV             R4, R2; jumptable 0000E864 case 110|20-70
59800|code|MOVS            R2, #0xA|10-34
59802|code|STR             R2, [R7,#0x3C+var_18]|122-98
59804|code|B               loc_E808|52-231
59806|code|MOV             R4, R2; jumptable 0000E864 case 102|20-70
59808|code|MOVS            R2, #0xC|12-34
59810|code|STR             R2, [R7,#0x3C+var_18]|122-98
59812|code|B               loc_E808|48-231
59814|code|MOV             R4, R2; jumptable 0000E864 case 98|20-70
59816|code|MOVS            R2, #8|8-34
59818|code|STR             R2, [R7,#0x3C+var_18]|122-98
59820|code|B               loc_E808|44-231
59822|code|LDR             R0, =(elf_gnu_hash_indexes+0xF0); jumptable 0000E864 cases 88,120|94-72
59824|code|MOVS            R1, #2|2-33
59826|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
59828|code|LDR             R3, [R3,R0]|27-88
59830|code|MOV             R0, R3|24-70
59832|code|B               loc_E924|180-231
59834|code|LDR             R3, [R7,#0x3C+arg_0]; jumptable 0000E864 case 85|59-110
59836|code|CMP             R3, #0|0-43
59838|code|BNE             def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|213-209
59840|code|LDR             R0, =(elf_gnu_hash_indexes+0xF0)|89-72
59842|code|MOVS            R1, #8|8-33
59844|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
59846|code|LDR             R3, [R3,R0]|27-88
59848|code|MOV             R0, R3|24-70
59850|code|B               loc_E924|171-231
59852|code|ADDS            R1, #8; jumptable 0000E864 case 60|8-49
59854|code|ADDS            R5, R4, #2|165-28
59856|code|ADD.W           R6, R8, R1|8-235-1-6
59860|code|RSB.W           R2, R5, R10; n|197-235-10-2
59864|code|MOVS            R1, #0x3E ; '>'; c|62-33
59866|code|MOV             R0, R6; s|48-70
59868|code|BLX             wmemchr|247-247-158-237
59872|code|LDR             R3, [R7,#0x3C+arg_0]|59-110
59874|code|CMP             R3, #0|0-43
59876|code|BNE             def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|194-209
59878|code|CMP             R0, #0|0-40
59880|code|BEQ.W           loc_EB08|0-240-142-128
59884|code|SUBS            R0, R0, R6|128-27
59886|code|MOV             R9, SP|233-70
59888|code|MOV.W           LR, R0,ASR#2|79-234-160-14
59892|code|ADD.W           R2, LR, #8|14-241-8-2
59896|code|ADD             R5, LR|117-68
59898|code|BIC.W           R2, R2, #7|34-240-7-2
59902|code|SUB.W           SP, SP, R2|173-235-2-13
59906|code|ADD             R1, SP, #0x44+var_3C|2-169
59908|code|CMP.W           LR, #0|190-241-0-15
59912|code|BEQ             loc_EAE0|106-208
59914|code|SUBS            R6, #4|4-62
59916|code|ADD.W           R12, SP, #0x44+var_3D|13-241-7-12
59920|code|MOV             R0, R3|24-70
59922|code|B               loc_EA24|7-224
59924|code|CMP             R3, #0xFF|255-43
59926|code|BHI             loc_EB00|115-216
59928|code|UXTB            R3, R3|219-178
59930|code|ADDS            R0, #1|1-48
59932|code|STRB.W          R3, [R12,#1]!|12-248-1-63
59936|code|CMP             R0, LR|112-69
59938|code|BEQ             loc_EAE0|93-208
59940|code|LDR.W           R3, [R6,#4]!|86-248-4-63
59944|code|CMP             R3, #0x5F ; '_'|95-43
59946|code|BNE             loc_EA14|243-209
59948|code|MOVS            R3, #0x20 ; ' '|32-35
59950|code|B               loc_EA1A|244-231
59952|code|ADDS            R1, #8; jumptable 0000E864 case 123|8-49
59954|code|ADDS            R5, R4, #2|165-28
59956|code|ADD.W           R6, R8, R1|8-235-1-6
59960|code|RSB.W           R2, R5, R10; n|197-235-10-2
59964|code|MOVS            R1, #0x7D ; '}'; c|125-33
59966|code|MOV             R0, R6; s|48-70
59968|code|BLX             wmemchr|247-247-108-237
59972|code|CMP             R0, #0|0-40
59974|code|BEQ             loc_EB08|95-208
59976|code|LDR             R3, [R7,#0x3C+var_30]|251-104
59978|code|SUBS            R2, R0, R6|130-27
59980|code|ADD.W           R1, R7, #0x2C ; ','|7-241-44-1
59984|code|STR             R6, [R7,#0x3C+var_10]|254-98
59986|code|ASRS            R6, R2, #2|150-16
59988|code|STR             R6, [R7,#0x3C+var_C]|62-99
59990|code|LDR             R0, [R3,#0x2C]|216-106
59992|code|ADD             R5, R6|53-68
59994|code|BL              sub_E2D8|255-247-61-252
59998|code|CMP             R0, #0|0-40
60000|code|BEQ             def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|132-208
60002|code|LDR             R1, [R0,#8]|129-104
60004|code|MOV             R4, R5|44-70
60006|code|LDR             R2, [R0,#0xC]|194-104
60008|code|LDRB.W          R0, [R11]|155-248-0-0
60012|code|ADDS            R4, #1|1-52
60014|code|ADDS            R5, R2, R0|21-24
60016|code|CMP             R5, #0xFE|254-45
60018|code|BLS.W           loc_E81C|127-246-211-174
60022|code|LDR             R1, =(aStringOperandT - 0xEA7E); "string operand too long"|45-73
60024|code|LDR             R0, [R7,#0x3C+var_30]|248-104
60026|code|ADD             R1, PC; "string operand too long"|121-68
60028|code|BL              reportDataError|255-247-112-252
60032|code|MOVS            R0, #0|0-32
60034|code|B               loc_EAC4|31-224
60036|code|MOV             R4, R2; jumptable 0000E864 case 118|20-70
60038|code|MOVS            R2, #0xB|11-34
60040|code|STR             R2, [R7,#0x3C+var_18]|122-98
60042|code|B               loc_E808|189-230
60044|code|LDR             R3, [R7,#0x3C+arg_0]; jumptable 0000E864 case 117|59-110
60046|code|CMP             R3, #0|0-43
60048|code|BNE.W           def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|127-244-108-175
60052|code|LDR             R0, =(elf_gnu_hash_indexes+0xF0)|36-72
60054|code|MOVS            R1, #4|4-33
60056|code|LDR             R3, [R7,#0x3C+var_2C]|59-105
60058|code|LDR             R3, [R3,R0]|27-88
60060|code|MOV             R0, R3|24-70
60062|code|B               loc_E924|65-231
60064|code|MOV             R4, R2; jumptable 0000E864 case 116|20-70
60066|code|MOVS            R2, #9|9-34
60068|code|STR             R2, [R7,#0x3C+var_18]|122-98
60070|code|B               loc_E808|175-230
60072|code|MOVS            R3, #0x20 ; ' '; jumptable 0000E864 case 115|32-35
60074|code|MOV             R4, R2|20-70
60076|code|STR             R3, [R7,#0x3C+var_18]|123-98
60078|code|B               loc_E808|171-230
60080|code|MOV             R4, R2; jumptable 0000E864 case 114|20-70
60082|code|MOVS            R2, #0xD|13-34
60084|code|STR             R2, [R7,#0x3C+var_18]|122-98
60086|code|B               loc_E808|167-230
60088|code|MOV             R5, R4|37-70
60090|code|ADD.W           R5, R11, R5,LSL#2|11-235-133-5
60094|code|MOVS            R0, #1|1-32
60096|code|MOVS            R3, #0|0-35
60098|code|STR             R3, [R5,#4]|107-96
60100|code|LDR             R3, [R7,#0x3C+var_28]|123-105
60102|code|LDR             R2, [R7,#0x3C+var_8]|122-107
60104|code|LDR             R3, [R3]|27-104
60106|code|CMP             R2, R3|154-66
60108|code|BNE             loc_EB0E|31-209
60110|code|ADDS            R7, #0x3C ; '<'|60-55
60112|code|MOV             SP, R7|189-70
60114|code|POP.W           {R4-R11,PC}|189-232-240-143
60118|code|STR             R4, [R7,#0x3C+var_18]|124-98
60120|code|MOV             R4, R5|44-70
60122|code|LDM.W           R7, {R8,R11}|151-232-0-9
60126|code|B               loc_E808|147-230
60128|code|MOV             R0, LR|112-70
60130|code|ADD.W           R6, R7, #0x24 ; '$'|7-241-36-6
60134|code|MOVS            R2, #0|0-34
60136|code|STRB            R2, [R1,R0]|10-84
60138|code|MOV             R0, R6|48-70
60140|code|BL              getCharacterByName|0-240-112-253
60144|code|MOV             R1, R6|49-70
60146|code|MOVS            R2, #1|1-34
60148|code|MOV             SP, R9|205-70
60150|code|CMP             R0, #0|0-40
60152|code|BEQ.W           def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|63-244-56-175
60156|code|MOV             R4, R5|44-70
60158|code|B               loc_EA68|179-231
60160|code|CMP             LR, R0|134-69
60162|code|BLS             loc_EAE2|238-217
60164|code|MOV             SP, R9|205-70
60166|code|B               def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|49-231
60168|code|ADD.W           R5, R10, #0xFFFFFFFF|10-241-255-53
60172|code|B               def_E864; jumptable 0000E864 default case, cases 36-59,61-84,86,87,89-91,93-97,99-101,103-109,112,113,119,121,122|46-231
60174|code|BLX             __stack_chk_fail|247-247-146-237
60178|data|ALIGN 4|0-191
60180|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE7E8|236-100-1-0
60184|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
60188|data|DCD elf_gnu_hash_indexes+0x12C|240-2-0-0
60192|data|DCD aInvalidEscapeS - 0xE97C; "invalid escape sequence"|176-69-0-0
60196|data|DCD aSLs - 0xE988; "%s: %.*ls"|136-90-0-0
60200|data|DCD elf_gnu_hash_indexes+0xF0|180-2-0-0
60204|data|DCD aStringOperandT - 0xEA7E; "string operand too long"|198-68-0-0
60208|code|PUSH.W          {R4-R8,LR}|45-233-240-65
60212|code|MOV             R6, R2|22-70
60214|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xEB42)|17-76
60216|code|MOV             R2, R3|26-70
60218|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|17-77
60220|code|SUB             SP, SP, #0x18|134-176
60222|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
60224|code|MOV             R7, R1|15-70
60226|code|ADD             R1, SP, #0x30+var_24|3-169
60228|code|MOV             R8, R0|128-70
60230|code|MOV             R3, R4|35-70
60232|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
60234|code|LDR             R3, [R4]|35-104
60236|code|STR             R3, [SP,#0x30+var_1C]|5-147
60238|code|BL              getDataOperand|255-247-9-254
60242|code|CBZ             R0, loc_EB68|72-177
60244|code|LDR             R2, [SP,#0x30+var_24]|3-154
60246|code|MOV             R0, R8|64-70
60248|code|LDR             R3, [SP,#0x30+var_20]|4-155
60250|code|MOV             R1, R7|57-70
60252|code|STR             R6, [SP,#0x30+var_30]|0-150
60254|code|BL              parseDataString|255-247-59-254
60258|code|ADDS            R0, #0|0-48
60260|code|IT NE|24-191
60262|code|MOVNE           R0, #1|1-32
60264|code|LDR             R2, [SP,#0x30+var_1C]|5-154
60266|code|LDR             R3, [R4]|35-104
60268|code|CMP             R2, R3|154-66
60270|code|BNE             loc_EB76|2-209
60272|code|ADD             SP, SP, #0x18|6-176
60274|code|POP.W           {R4-R8,PC}|189-232-240-129
60278|code|BLX             __stack_chk_fail|247-247-94-237
60282|data|ALIGN 4|0-191
60284|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEB42|146-97-1-0
60288|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
60292|code|CMP             R1, #0xFF|255-41
60294|code|PUSH            {R3,LR}|8-181
60296|code|MOV             R3, R1|11-70
60298|code|BLS             loc_EBB6|20-217
60300|code|CMP.W           R1, #0x10000|177-245-128-63
60304|code|MOV.W           R1, #1|79-240-1-1
60308|code|BCC             loc_EBA6|7-211
60310|code|LDR             R2, =(aU08x - 0xEB9C); "\\U%08X"|12-74
60312|code|ADD             R2, PC; "\\U%08X"|122-68
60314|code|BLX             __fprintf_chk|247-247-74-236
60318|code|ADDS            R0, #1|1-48
60320|code|IT NE|24-191
60322|code|MOVNE           R0, #1|1-32
60324|code|POP             {R3,PC}|8-189
60326|code|LDR             R2, =(aU04x - 0xEBAC); "\\u%04X"|9-74
60328|code|ADD             R2, PC; "\\u%04X"|122-68
60330|code|BLX             __fprintf_chk|247-247-66-236
60334|code|ADDS            R0, #1|1-48
60336|code|IT NE|24-191
60338|code|MOVNE           R0, #1|1-32
60340|code|POP             {R3,PC}|8-189
60342|code|LDR             R2, =(aX02x - 0xEBBE); "\\x%02X"|6-74
60344|code|MOVS            R1, #1|1-33
60346|code|ADD             R2, PC; "\\x%02X"|122-68
60348|code|BLX             __fprintf_chk|247-247-56-236
60352|code|ADDS            R0, #1|1-48
60354|code|IT NE|24-191
60356|code|MOVNE           R0, #1|1-32
60358|code|POP             {R3,PC}|8-189
60360|data|DCD aU08x - 0xEB9C; "\\U%08X"|208-67-0-0
60364|data|DCD aU04x - 0xEBAC; "\\u%04X"|184-67-0-0
60368|data|DCD aX02x - 0xEBBE; "\\x%02X"|158-67-0-0
60372|code|CMP             R1, #0x5C ; '\'|92-41
60374|code|PUSH            {R3-R5,LR}|56-181
60376|code|MOV             R4, R1|12-70
60378|code|MOV             R5, R0|5-70
60380|code|BHI             loc_EBE6|3-216
60382|code|LDR             R3, =(unk_12DE4 - 0xEBE4)|16-75
60384|code|ADD             R3, PC; unk_12DE4|123-68
60386|code|LDRB            R3, [R3,R1]|91-92
60388|code|CBNZ            R3, loc_EC0E|155-185
60390|code|MOV             R0, R4; wc|32-70
60392|code|BLX             iswspace|247-247-108-235
60396|code|CBNZ            R0, loc_EBF6|24-185
60398|code|MOV             R0, R4; wc|32-70
60400|code|BLX             iswcntrl|247-247-238-238
60404|code|CBZ             R0, loc_EC02|40-177
60406|code|MOV             R0, R5|40-70
60408|code|MOV             R1, R4|33-70
60410|code|POP.W           {R3-R5,LR}|189-232-56-64
60414|code|B.W             writeHexadecimalCharacter|255-247-193-191
60418|code|MOV             R0, R5|40-70
60420|code|MOV             R1, R4|33-70
60422|code|POP.W           {R3-R5,LR}|189-232-56-64
60426|code|B.W             writeUtf8Character|1-240-127-184
60430|code|LDR             R2, =(aC - 0xEC16); "\\%c"|5-74
60432|code|MOVS            R1, #1|1-33
60434|code|ADD             R2, PC; "\\%c"|122-68
60436|code|BLX             __fprintf_chk|247-247-12-236
60440|code|ADDS            R0, #1|1-48
60442|code|IT NE|24-191
60444|code|MOVNE           R0, #1|1-32
60446|code|POP             {R3-R5,PC}|56-189
60448|data|DCD unk_12DE4 - 0xEBE4|0-66-0-0
60452|data|DCD aC - 0xEC16; "\\%c"|94-67-0-0
60456|code|PUSH            {R4-R6,LR}|112-181
60458|code|ADD.W           R5, R1, R2,LSL#2|1-235-130-5
60462|code|CMP             R1, R5|169-66
60464|code|MOV             R4, R1|12-70
60466|code|MOV             R6, R0|6-70
60468|code|BCC             loc_EC3C|2-211
60470|code|B               loc_EC4C|9-224
60472|code|CMP             R5, R4|165-66
60474|code|BLS             loc_EC4C|7-217
60476|code|MOV             R0, R6|48-70
60478|code|LDR.W           R1, [R4],#4|84-248-4-27
60482|code|BL              writeEscapedCharacter|255-247-199-255
60486|code|CMP             R0, #0|0-40
60488|code|BNE             loc_EC38|246-209
60490|code|POP             {R4-R6,PC}|112-189
60492|code|MOVS            R0, #1|1-32
60494|code|POP             {R4-R6,PC}|112-189
60496|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xEC5A)|24-75
60498|code|PUSH.W          {R4-R8,LR}|45-233-240-65
60502|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
60504|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|23-76
60506|code|SUB             SP, SP, #0x10|132-176
60508|code|LDR             R2, =(aDotNumber - 0xEC6A); "dot number"|23-74
60510|code|MOV             R6, R1|14-70
60512|code|ADD             R1, SP, #0x28+var_24|1-169
60514|code|MOV             R7, R0|7-70
60516|code|LDR             R5, [R3,R4]; __stack_chk_guard|29-89
60518|code|ADD             R2, PC; "dot number"|122-68
60520|code|LDR             R3, [R5]|43-104
60522|code|STR             R3, [SP,#0x28+var_1C]|3-147
60524|code|BL              getDataOperand|255-247-122-253
60528|code|MOV             R4, R0|4-70
60530|code|CBNZ            R0, loc_EC84|56-185
60532|code|LDR             R2, [SP,#0x28+var_1C]|3-154
60534|code|MOV             R0, R4|32-70
60536|code|LDR             R3, [R5]|43-104
60538|code|CMP             R2, R3|154-66
60540|code|BNE             loc_ECB0|24-209
60542|code|ADD             SP, SP, #0x10|4-176
60544|code|POP.W           {R4-R8,PC}|189-232-240-129
60548|code|LDR             R4, [SP,#0x28+var_20]|2-156
60550|code|LDR.W           R8, [SP,#0x28+var_24]|221-248-4-128
60554|code|CMP             R4, #1|1-44
60556|code|BEQ             loc_ECA0|8-208
60558|code|LDR             R1, =(aInvalidBraille - 0xEC9A); "invalid braille dot number: %.*ls"|12-73
60560|code|MOV             R2, R4|34-70
60562|code|MOV             R0, R7|56-70
60564|code|MOV             R3, R8|67-70
60566|code|ADD             R1, PC; "invalid braille dot number: %.*ls"|121-68
60568|code|MOVS            R4, #0|0-36
60570|code|BL              reportDataError|255-247-97-251
60574|code|B               loc_EC74|233-231
60576|code|MOV             R1, R6|49-70
60578|code|LDR.W           R0, [R8]; c|216-248-0-0
60582|code|BL              brlDotNumberToIndex|255-247-49-251
60586|code|CMP             R0, #0|0-40
60588|code|BEQ             loc_EC8E|239-208
60590|code|B               loc_EC74|225-231
60592|code|BLX             __stack_chk_fail|247-247-192-236
60596|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEC5A|122-96-1-0
60600|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
60604|data|DCD aDotNumber - 0xEC6A; "dot number"|14-67-0-0
60608|data|DCD aInvalidBraille - 0xEC9A; "invalid braille dot number: %.*ls"|234-66-0-0
60612|code|PUSH.W          {R4-R10,LR}|45-233-240-71
60616|code|SUBS.W          R12, R3, #0|179-241-0-12
60620|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xECDA)|70-76
60622|code|SUB             SP, SP, #8|130-176
60624|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|70-77
60626|code|MOV.W           LR, #0|79-240-0-14
60630|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
60632|code|IT GT|200-191
60634|code|MOVGT           R6, LR|118-70
60636|code|LDR.W           R8, [R4,R5]; __stack_chk_guard|84-248-5-128
60640|code|LDR.W           R4, [R8]|216-248-0-64
60644|code|STRB.W          LR, [R1]|129-248-0-224
60648|code|STR             R4, [SP,#0x28+var_24]|1-148
60650|code|IT GT|200-191
60652|code|MOVGT           R4, #1|1-36
60654|code|BLE             loc_EDBE|102-221
60656|code|MOV             R9, R2|145-70
60658|code|ADD.W           R10, R4, #0xFFFFFFFF|4-241-255-58
60662|code|LDR.W           R3, [R2],#4|82-248-4-59
60666|code|SUBS.W          R5, LR, R10|190-235-10-5
60670|code|SUB.W           R7, R3, #0x2D ; '-'; switch 12 cases|163-241-45-7
60674|code|IT NE|24-191
60676|code|MOVNE           R5, #1|1-37
60678|code|STR             R3, [SP,#0x28+var_28]|0-147
60680|code|CMP             R7, #0xB|11-47
60682|code|BHI             def_ED0C; jumptable 0000ED0C default case, cases 46,47|56-216
60684|code|TBB.W           [PC,R7]; switch jump|223-232-7-240
60688|data|DCB 0x21; jump table for switch statement|33
60689|data|DCB 0x37|55
60690|data|DCB 0x37|55
60691|data|DCB 0x1E|30
60692|data|DCB 6|6
60693|data|DCB 0x4F|79
60694|data|DCB 0x4D|77
60695|data|DCB 0x4B|75
60696|data|DCB 0x49|73
60697|data|DCB 0x47|71
60698|data|DCB 0x45|69
60699|data|DCB 0x2F|47
60700|code|MOVS            R7, #1; jumptable 0000ED0C case 49|1-39
60702|code|CMP             R6, #0|0-46
60704|code|ITE NE|20-191
60706|code|MOVNE           R5, #0|0-37
60708|code|ANDEQ.W         R5, R5, #1|5-240-1-5
60712|code|CBNZ            R5, def_ED0C; jumptable 0000ED0C default case, cases 46,47|77-187
60714|code|TST             R7, R6|55-66
60716|code|BNE             loc_EDB2|65-209
60718|code|ORRS            R6, R7|62-67
60720|code|MOV             R3, R4|35-70
60722|code|CMP             R12, R3|156-69
60724|code|ADD.W           R4, R4, #1|4-241-1-4
60728|code|BGT             loc_ECF0|218-220
60730|code|CMP             LR, R3|158-69
60732|code|BEQ             loc_EDBE|63-208
60734|code|LDRB            R3, [R1]|11-120
60736|code|MOVS            R0, #1|1-32
60738|code|ADDS            R2, R1, R3|202-24
60740|code|ADD             R3, R0|3-68
60742|code|STRB            R3, [R1]|11-112
60744|code|STRB            R6, [R2,#1]|86-112
60746|code|B               loc_ED8A|30-224
60748|code|CBNZ            R5, def_ED0C; jumptable 0000ED0C case 48|189-185
60750|code|MOV             R3, R4|35-70
60752|code|B               loc_ED32|239-231
60754|code|CMP             R5, #0; jumptable 0000ED0C case 45|0-45
60756|code|BEQ             loc_EDCA|57-208
60758|code|LDRB            R5, [R1]|13-120
60760|code|ADDS            R3, R5, #1|107-28
60762|code|ADD             R5, R1|13-68
60764|code|UXTB            R3, R3|219-178
60766|code|STRB            R3, [R1]|11-112
60768|code|CMP             R3, #0xFF|255-43
60770|code|STRB            R6, [R5,#1]|110-112
60772|code|BEQ             loc_EDDA|57-208
60774|code|MOV             LR, R4|166-70
60776|code|MOV             R3, R4|35-70
60778|code|MOVS            R6, #0|0-38
60780|code|B               loc_ED32|225-231
60782|code|CMP             R6, #0; jumptable 0000ED0C case 56|0-46
60784|code|ITE NE|20-191
60786|code|MOVNE           R5, #0|0-37
60788|code|ANDEQ.W         R5, R5, #1|5-240-1-5
60792|code|MOVS            R7, #0x80|128-39
60794|code|CMP             R5, #0|0-45
60796|code|BEQ             loc_ED2A|213-208
60798|code|LDR             R1, =(aInvalidDotNumb - 0xED86); jumptable 0000ED0C default case, cases 46,47|28-73
60800|code|MOV             R2, SP|106-70
60802|code|ADD             R1, PC; "invalid dot number: %.1ls"|121-68
60804|code|BL              reportDataError|255-247-236-250
60808|code|MOVS            R0, #0|0-32
60810|code|LDR             R2, [SP,#0x28+var_24]|1-154
60812|code|LDR.W           R3, [R8]|216-248-0-48
60816|code|CMP             R2, R3|154-66
60818|code|BNE             loc_EDE4|39-209
60820|code|ADD             SP, SP, #8|2-176
60822|code|POP.W           {R4-R10,PC}|189-232-240-135
60826|code|MOVS            R7, #0x40 ; '@'; jumptable 0000ED0C case 55|64-39
60828|code|B               loc_ED1E|191-231
60830|code|MOVS            R7, #0x20 ; ' '; jumptable 0000ED0C case 54|32-39
60832|code|B               loc_ED1E|189-231
60834|code|MOVS            R7, #0x10; jumptable 0000ED0C case 53|16-39
60836|code|B               loc_ED1E|187-231
60838|code|MOVS            R7, #8; jumptable 0000ED0C case 52|8-39
60840|code|B               loc_ED1E|185-231
60842|code|MOVS            R7, #4; jumptable 0000ED0C case 51|4-39
60844|code|B               loc_ED1E|183-231
60846|code|MOVS            R7, #2; jumptable 0000ED0C case 50|2-39
60848|code|B               loc_ED1E|181-231
60850|code|LDR             R1, =(aDotSpecifiedMo - 0xEDBA); "dot specified more than once: %.1ls"|16-73
60852|code|MOV             R2, SP|106-70
60854|code|ADD             R1, PC; "dot specified more than once: %.1ls"|121-68
60856|code|BL              reportDataError|255-247-210-250
60860|code|B               loc_ED88|228-231
60862|code|LDR             R1, =(aMissingCellSpe - 0xEDC4); "missing cell specification"|14-73
60864|code|ADD             R1, PC; "missing cell specification"|121-68
60866|code|BL              reportDataError|255-247-205-250
60870|code|MOVS            R0, #0|0-32
60872|code|B               loc_ED8A|223-231
60874|code|LDR             R1, =(aMissingCellSpe_0 - 0xEDD6); "missing cell specification: %.*ls"|12-73
60876|code|RSB.W           R2, R10, R12|202-235-12-2
60880|code|MOV             R3, R9|75-70
60882|code|ADD             R1, PC; "missing cell specification: %.*ls"|121-68
60884|code|BL              reportDataError|255-247-196-250
60888|code|B               loc_ED88|214-231
60890|code|LDR             R1, =(aCellsOperandTo - 0xEDE0); "cells operand too long"|9-73
60892|code|ADD             R1, PC; "cells operand too long"|121-68
60894|code|BL              reportDataError|255-247-191-250
60898|code|B               loc_ED88|209-231
60900|code|BLX             __stack_chk_fail|247-247-38-236
60904|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xECDA|250-95-1-0
60908|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
60912|data|DCD aInvalidDotNumb - 0xED86; "invalid dot number: %.1ls"|158-66-0-0
60916|data|DCD aDotSpecifiedMo - 0xEDBA; "dot specified more than once: %.1ls"|10-66-0-0
60920|data|DCD aMissingCellSpe - 0xEDC4; "missing cell specification"|228-65-0-0
60924|data|DCD aMissingCellSpe_0 - 0xEDD6; "missing cell specification: %.*ls"|18-66-0-0
60928|data|DCD aCellsOperandTo - 0xEDE0; "cells operand too long"|44-66-0-0
60932|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xEE0C)|15-75
60934|code|PUSH            {R4-R6,LR}|112-181
60936|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
60938|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|15-76
60940|code|SUB             SP, SP, #0x10|132-176
60942|code|MOV             R5, R1|13-70
60944|code|ADD             R1, SP, #0x20+var_1C|1-169
60946|code|MOV             R6, R0|6-70
60948|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
60950|code|LDR             R3, [R4]|35-104
60952|code|STR             R3, [SP,#0x20+var_14]|3-147
60954|code|BL              getDataOperand|255-247-163-252
60958|code|CBZ             R0, loc_EE32|64-177
60960|code|MOV             R0, R6|48-70
60962|code|MOV             R1, R5|41-70
60964|code|LDR             R2, [SP,#0x20+var_1C]|1-154
60966|code|LDR             R3, [SP,#0x20+var_18]|2-155
60968|code|BL              parseCellsOperand|255-247-76-255
60972|code|ADDS            R0, #0|0-48
60974|code|IT NE|24-191
60976|code|MOVNE           R0, #1|1-32
60978|code|LDR             R2, [SP,#0x20+var_14]|3-154
60980|code|LDR             R3, [R4]|35-104
60982|code|CMP             R2, R3|154-66
60984|code|BNE             loc_EE3E|1-209
60986|code|ADD             SP, SP, #0x10|4-176
60988|code|POP             {R4-R6,PC}|112-189
60990|code|BLX             __stack_chk_fail|247-247-250-235
60994|data|ALIGN 4|0-191
60996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEE0C|200-94-1-0
61000|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
61004|code|PUSH            {R3-R7,LR}|248-181
61006|code|MOV             R6, R0|6-70
61008|code|LDR             R7, =(aU - 0xEE5A); "%u"|12-79
61010|code|MOV             R5, R1|13-70
61012|code|MOVS            R4, #1|1-36
61014|code|ADD             R7, PC; "%u"|127-68
61016|code|B               loc_EE60|2-224
61018|code|ADDS            R4, #1|1-52
61020|code|CMP             R4, #9|9-44
61022|code|BEQ             loc_EE7E|14-208
61024|code|SUBS            R3, R4, #1|99-30
61026|code|ASR.W           R3, R5, R3|69-250-3-243
61030|code|LSLS            R3, R3, #0x1F|219-7
61032|code|BPL             loc_EE5A|247-213
61034|code|MOV             R0, R6|48-70
61036|code|MOVS            R1, #1|1-33
61038|code|MOV             R2, R7|58-70
61040|code|MOV             R3, R4|35-70
61042|code|BLX             __fprintf_chk|247-247-222-234
61046|code|ADDS            R0, #1|1-48
61048|code|BNE             loc_EE5A|239-209
61050|code|MOVS            R0, #0|0-32
61052|code|POP             {R3-R7,PC}|248-189
61054|code|MOVS            R0, #1|1-32
61056|code|POP             {R3-R7,PC}|248-189
61058|data|ALIGN 4|0-191
61060|data|DCD aU - 0xEE5A; "%u"|230-65-0-0
61064|code|CBZ             R1, loc_EE8E|9-177
61066|code|B.W             writeDots|255-247-223-191
61070|code|MOV             R1, R0; stream|1-70
61072|code|MOVS            R0, #0x30 ; '0'; c|48-32
61074|code|PUSH            {R3,LR}|8-181
61076|code|BLX             fputc|247-247-96-236
61080|code|ADDS            R0, #1|1-48
61082|code|IT NE|24-191
61084|code|MOVNE           R0, #1|1-32
61086|code|POP             {R3,PC}|8-189
61088|code|PUSH            {R3-R7,LR}|248-181
61090|code|ADDS            R7, R1, R2|143-24
61092|code|CMP             R1, R7|185-66
61094|code|BCS             loc_EED4|21-210
61096|code|MOV             R5, R0|5-70
61098|code|MOV             R6, R1|14-70
61100|code|MOV             R4, R1|12-70
61102|code|LDRB.W          R1, [R4],#1|20-248-1-27
61106|code|MOV             R0, R5; stream|40-70
61108|code|BL              writeDotsCell|255-247-232-255
61112|code|MOV             R1, R5; stream|41-70
61114|code|CBZ             R0, loc_EED0|72-177
61116|code|CMP             R4, R7|188-66
61118|code|MOV.W           R0, #0x2D ; '-'; c|79-240-45-0
61122|code|BEQ             loc_EED4|7-208
61124|code|CMP             R6, R4|166-66
61126|code|BEQ             loc_EEAE|242-208
61128|code|BLX             fputc|247-247-70-236
61132|code|ADDS            R0, #1|1-48
61134|code|BNE             loc_EEAE|238-209
61136|code|MOVS            R0, #0|0-32
61138|code|POP             {R3-R7,PC}|248-189
61140|code|MOVS            R0, #1|1-32
61142|code|POP             {R3-R7,PC}|248-189
61144|code|ORR.W           R1, R1, #0x2800|65-244-32-81
61148|code|B.W             writeUtf8Character|0-240-22-191
61152|code|PUSH            {R4-R6,LR}|112-181
61154|code|ADDS            R5, R1, R2|141-24
61156|code|CMP             R1, R5|169-66
61158|code|MOV             R4, R1|12-70
61160|code|MOV             R6, R0|6-70
61162|code|BCC             loc_EEF2|2-211
61164|code|B               loc_EF02|9-224
61166|code|CMP             R4, R5|172-66
61168|code|BEQ             loc_EF02|7-208
61170|code|MOV             R0, R6|48-70
61172|code|LDRB.W          R1, [R4],#1|20-248-1-27
61176|code|BL              writeUtf8Cell|255-247-238-255
61180|code|CMP             R0, #0|0-40
61182|code|BNE             loc_EEEE|246-209
61184|code|POP             {R4-R6,PC}|112-189
61186|code|MOVS            R0, #1|1-32
61188|code|POP             {R4-R6,PC}|112-189
61190|data|ALIGN 4|0-191
61192|code|PUSH.W          {R4-R9,LR}|45-233-240-67
61196|code|MOV             R8, R3|152-70
61198|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xEF1A)|37-77
61200|code|SUB             SP, SP, #0x1C|135-176
61202|code|LDR             R6, =(__stack_chk_guard_ptr - 0x24CD4)|37-78
61204|code|MOV             R4, R1|12-70
61206|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
61208|code|ADD             R1, SP, #0x38+var_2C|3-169
61210|code|MOV             R7, R0|7-70
61212|code|MOV             R9, R2|145-70
61214|code|LDR             R5, [R5,R6]; __stack_chk_guard|173-89
61216|code|LDR             R3, [R5]|43-104
61218|code|STR             R3, [SP,#0x38+var_24]|5-147
61220|code|BL              getDataOperand|255-247-30-252
61224|code|CBZ             R0, loc_EF6C|0-179
61226|code|LDR             R0, [R4]|32-104
61228|code|CBNZ            R0, loc_EF38|32-185
61230|code|B               loc_EF96|50-224
61232|code|LDR.W           R0, [R4,#0xC]!|84-248-12-15
61236|code|CMP             R0, #0|0-40
61238|code|BEQ             loc_EF96|46-208
61240|code|LDR             R1, [SP,#0x38+var_2C]|3-153
61242|code|LDR             R2, [SP,#0x38+var_28]|4-154
61244|code|BL              isKeyword|255-247-124-250
61248|code|CMP             R0, #0|0-40
61250|code|BEQ             loc_EF30|245-208
61252|code|LDR             R3, [R4]|35-104
61254|code|CBZ             R3, loc_EF96|51-179
61256|code|LDRB            R3, [R4,#8]|35-122
61258|code|LSLS            R3, R3, #0x1F|219-7
61260|code|BPL             loc_EF7C|22-213
61262|code|LDR             R3, [R4,#4]|99-104
61264|code|CBZ             R3, loc_EF5A|27-177
61266|code|MOV             R0, R7|56-70
61268|code|MOV             R1, R8|65-70
61270|code|BLX             R3|152-71
61272|code|B               loc_EF6E|9-224
61274|code|LDR             R4, [SP,#0x38+var_2C]|3-156
61276|code|MOV             R0, R7|56-70
61278|code|LDR             R1, =(aUnknownSLs - 0xEF68); "unknown %s: %.*ls"|19-73
61280|code|MOV             R2, R9|74-70
61282|code|LDR             R3, [SP,#0x38+var_28]|4-155
61284|code|ADD             R1, PC; "unknown %s: %.*ls"|121-68
61286|code|STR             R4, [SP,#0x38+var_38]|0-148
61288|code|BL              reportDataError|255-247-250-249
61292|code|MOVS            R0, #1|1-32
61294|code|LDR             R2, [SP,#0x38+var_24]|5-154
61296|code|LDR             R3, [R5]|43-104
61298|code|CMP             R2, R3|154-66
61300|code|BNE             loc_EFA0|20-209
61302|code|ADD             SP, SP, #0x1C|7-176
61304|code|POP.W           {R4-R9,PC}|189-232-240-131
61308|code|LDR             R0, [R7,#0x28]|184-106
61310|code|BL              getStackHead|254-247-93-248
61314|code|CMP             R0, #0|0-40
61316|code|BEQ             loc_EF4E|227-208
61318|code|BL              getElementItem|253-247-231-255
61322|code|LDRB            R3, [R0]|3-120
61324|code|AND.W           R3, R3, #3|3-240-3-3
61328|code|CMP             R3, #3|3-43
61330|code|BNE             loc_EF6C|235-209
61332|code|B               loc_EF4E|219-231
61334|code|MOV             R0, R7|56-70
61336|code|LDR             R1, [SP,#0x38+var_28]|4-153
61338|code|BL              ungetDataCharacters|255-247-205-251
61342|code|B               loc_EF48|211-231
61344|code|BLX             __stack_chk_fail|247-247-72-235
61348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEF1A|186-93-1-0
61352|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
61356|data|DCD aUnknownSLs - 0xEF68; "unknown %s: %.*ls"|220-64-0-0
61360|code|PUSH.W          {R4-R9,LR}|45-233-240-67
61364|code|SUBW            SP, SP, #0x414|173-242-20-77
61368|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xEFC4)|58-76
61370|code|ADD             R6, SP, #0x430+var_424|3-174
61372|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|58-77
61374|code|MOV             R8, R1|136-70
61376|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
61378|code|MOV             R7, R2|23-70
61380|code|MOV             R1, R6|49-70
61382|code|MOVS            R2, #1|1-34
61384|code|LDR             R5, [R4,R5]; __stack_chk_guard|101-89
61386|code|MOV             R9, R0|129-70
61388|code|LDR             R4, [R5]|44-104
61390|code|STR.W           R4, [SP,#0x430+var_24]|205-248-12-68
61394|code|BL              getDataString|255-247-173-253
61398|code|CBNZ            R0, loc_EFEC|72-185
61400|code|MOVS            R0, #1|1-32
61402|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
61406|code|LDR             R3, [R5]|43-104
61408|code|CMP             R2, R3|154-66
61410|code|BNE             loc_F0A0|93-209
61412|code|ADDW            SP, SP, #0x414|13-242-20-77
61416|code|POP.W           {R4-R9,PC}|189-232-240-131
61420|code|MOVS            R0, #4; size|4-32
61422|code|BLX             malloc|247-247-204-235
61426|code|MOV             R4, R0|4-70
61428|code|CMP             R0, #0|0-40
61430|code|BEQ             loc_F090|75-208
61432|code|LDRB            R6, [R6]|54-120
61434|code|ADD             R3, SP, #0x430+var_42C|1-171
61436|code|MOV             R0, R9|72-70
61438|code|LDR.W           R2, [R9,#0x24]|217-248-36-32
61442|code|MOV             R1, R3|25-70
61444|code|MOV.W           LR, #0|79-240-0-14
61448|code|STR             R6, [SP,#0x430+var_428]|2-150
61450|code|MOV.W           R3, #0|79-240-0-3
61454|code|STR.W           LR, [R4]|196-248-0-224
61458|code|BFI.W           R3, LR, #2, #1|110-243-130-3
61462|code|ADD             R6, SP, #0x430+var_420|4-174
61464|code|STRB            R3, [R4]|35-112
61466|code|STR             R6, [SP,#0x430+var_42C]|1-150
61468|code|BLX             R8|192-71
61470|code|LDRB            R3, [R4]|35-120
61472|code|BFI.W           R3, R0, #1, #1|96-243-65-3
61476|code|STRB            R3, [R4]|35-112
61478|code|CBNZ            R7, loc_F06A|7-187
61480|code|LDR.W           R0, [R9,#0x28]|217-248-40-0
61484|code|BL              getStackHead|254-247-6-248
61488|code|CBZ             R0, loc_F086|72-179
61490|code|BL              getElementItem|253-247-145-255
61494|code|LDRB            R2, [R4]|34-120
61496|code|LDRB            R3, [R0]|3-120
61498|code|AND.W           R3, R3, #3|3-240-3-3
61502|code|SUB.W           R3, R3, #3|163-241-3-3
61506|code|CLZ.W           R3, R3|179-250-131-243
61510|code|LSRS            R3, R3, #5|91-9
61512|code|BFI.W           R2, R3, #0, #1|99-243-0-2
61516|code|STRB            R2, [R4]|34-112
61518|code|MOV             R1, R4|33-70
61520|code|LDR.W           R0, [R9,#0x28]|217-248-40-0
61524|code|BL              enqueueItem|254-247-118-248
61528|code|MOV             R1, R0|1-70
61530|code|CBZ             R0, loc_F098|232-177
61532|code|MOV             R0, R9|72-70
61534|code|BL              sub_E6DC|255-247-61-251
61538|code|ADDS            R0, #0|0-48
61540|code|IT NE|24-191
61542|code|MOVNE           R0, #1|1-32
61544|code|B               loc_EFDA|183-231
61546|code|UXTB            R3, R3|219-178
61548|code|LDR.W           R0, [R9,#0x28]|217-248-40-0
61552|code|EOR.W           R2, R3, #2|131-240-2-2
61556|code|UBFX.W          R2, R2, #1, #1|194-243-64-2
61560|code|BFI.W           R3, R2, #1, #1|98-243-65-3
61564|code|STRB            R3, [R4]|35-112
61566|code|BL              getStackHead|253-247-221-255
61570|code|CMP             R0, #0|0-40
61572|code|BNE             loc_F032|213-209
61574|code|LDRB            R3, [R4]|35-120
61576|code|ORR.W           R3, R3, #1|67-240-1-3
61580|code|STRB            R3, [R4]|35-112
61582|code|B               loc_F04E|222-231
61584|code|BL              logMallocError|250-247-100-248
61588|code|MOVS            R0, #0|0-32
61590|code|B               loc_EFDA|160-231
61592|code|MOV             R0, R4; ptr|32-70
61594|code|BLX             free|247-247-84-233
61598|code|B               loc_F094|249-231
61600|code|BLX             __stack_chk_fail|247-247-200-234
61604|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEFC4|16-93-1-0
61608|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
61612|code|PUSH            {LR}|0-181
61614|code|SUB             SP, SP, #0xC|131-176
61616|code|LDR             R3, =(aVariableName - 0xF0BC); "variable name"|5-75
61618|code|MOVS            R2, #0|0-34
61620|code|STR             R1, [SP,#0x10+var_10]|0-145
61622|code|LDR             R1, =(sub_E2FC+1 - 0xF0BE)|5-73
61624|code|ADD             R3, PC; "variable name"|123-68
61626|code|ADD             R1, PC; sub_E2FC|121-68
61628|code|BL              processConditionOperands|255-247-120-255
61632|code|ADD             SP, SP, #0xC|3-176
61634|code|POP.W           {PC}|93-248-4-251
61638|data|ALIGN 4|0-191
61640|data|DCD aVariableName - 0xF0BC; "variable name"|156-63-0-0
61644|data|DCD sub_E2FC+1 - 0xF0BE|63-242-255-255
61648|code|PUSH            {LR}|0-181
61650|code|SUB             SP, SP, #0xC|131-176
61652|code|LDR             R3, =(aVariableName - 0xF0E0); "variable name"|5-75
61654|code|MOVS            R2, #1|1-34
61656|code|STR             R1, [SP,#0x10+var_10]|0-145
61658|code|LDR             R1, =(sub_E2FC+1 - 0xF0E2)|5-73
61660|code|ADD             R3, PC; "variable name"|123-68
61662|code|ADD             R1, PC; sub_E2FC|121-68
61664|code|BL              processConditionOperands|255-247-102-255
61668|code|ADD             SP, SP, #0xC|3-176
61670|code|POP.W           {PC}|93-248-4-251
61674|data|ALIGN 4|0-191
61676|data|DCD aVariableName - 0xF0E0; "variable name"|120-63-0-0
61680|data|DCD sub_E2FC+1 - 0xF0E2|27-242-255-255
61684|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF0FC)|26-75
61686|code|PUSH            {R4-R7,LR}|240-181
61688|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
61690|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|26-76
61692|code|SUBW            SP, SP, #0x414|173-242-20-77
61696|code|ADD             R5, SP, #0x428+var_424|1-173
61698|code|LDR             R2, =(aVariableName - 0xF10E); "variable name"|25-74
61700|code|MOV             R6, R0|6-70
61702|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
61704|code|MOV             R1, R5|41-70
61706|code|ADD             R2, PC; "variable name"|122-68
61708|code|LDR             R3, [R4]|35-104
61710|code|STR.W           R3, [SP,#0x428+var_1C]|205-248-12-52
61714|code|BL              getDataOperand|255-247-39-251
61718|code|CBNZ            R0, loc_F12A|64-185
61720|code|LDR.W           R2, [SP,#0x428+var_1C]|221-248-12-36
61724|code|MOVS            R0, #1|1-32
61726|code|LDR             R3, [R4]|35-104
61728|code|CMP             R2, R3|154-66
61730|code|BNE             loc_F15C|27-209
61732|code|ADDW            SP, SP, #0x414|13-242-20-77
61736|code|POP             {R4-R7,PC}|240-189
61738|code|ADD             R7, SP, #0x428+var_41C|3-175
61740|code|MOVS            R2, #0|0-34
61742|code|MOV             R3, R2|19-70
61744|code|MOV             R0, R6|48-70
61746|code|MOV             R1, R7|57-70
61748|code|BL              getDataString|255-247-252-252
61752|code|CBZ             R0, loc_F158|112-177
61754|code|MOV             R1, R5|41-70
61756|code|LDR             R0, [R6,#0x2C]|240-106
61758|code|MOVS            R2, #1|1-34
61760|code|BL              sub_E1D8|255-247-74-248
61764|code|MOV             R1, R0|1-70
61766|code|CMP             R0, #0|0-40
61768|code|BEQ             loc_F118|230-208
61770|code|LDRB            R3, [R7]|59-120
61772|code|ADDS            R1, #0xC|12-49
61774|code|ADD             R2, SP, #0x428+var_418|4-170
61776|code|ADDS            R0, #8|8-48
61778|code|BL              sub_E298|255-247-161-248
61782|code|B               loc_F118|223-231
61784|code|STRB            R0, [R7]|56-112
61786|code|B               loc_F13A|238-231
61788|code|BLX             __stack_chk_fail|247-247-106-234
61792|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF0FC|216-91-1-0
61796|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
61800|data|DCD aVariableName - 0xF10E; "variable name"|74-63-0-0
61804|code|PUSH            {R3-R5,LR}|56-181
61806|code|MOV             R4, R0|4-70
61808|code|LDR             R0, [R0,#0x28]|128-106
61810|code|BL              getStackHead|253-247-99-255
61814|code|CBZ             R0, loc_F1B6|240-177
61816|code|MOV             R5, R0|5-70
61818|code|BL              getElementItem|253-247-237-254
61822|code|LDRB            R3, [R0]|3-120
61824|code|MOV             R2, R0|2-70
61826|code|LSLS            R1, R3, #0x1D|89-7
61828|code|BMI             loc_F1A8|16-212
61830|code|ORR.W           R3, R3, #4|67-240-4-3
61834|code|MOV             R0, R4|32-70
61836|code|EOR.W           R4, R3, #2|131-240-2-4
61840|code|MOV             R1, R5|41-70
61842|code|UBFX.W          R4, R4, #1, #1|196-243-64-4
61846|code|BFI.W           R3, R4, #1, #1|100-243-65-3
61850|code|STRB            R3, [R2]|19-112
61852|code|BL              sub_E6DC|255-247-158-250
61856|code|ADDS            R0, #0|0-48
61858|code|IT NE|24-191
61860|code|MOVNE           R0, #1|1-32
61862|code|POP             {R3-R5,PC}|56-189
61864|code|LDR             R1, =(aAlreadyInElse - 0xF1B0); "already in else"|6-73
61866|code|MOV             R0, R4|32-70
61868|code|ADD             R1, PC; "already in else"|121-68
61870|code|BL              reportDataError|255-247-215-248
61874|code|MOVS            R0, #1|1-32
61876|code|POP             {R3-R5,PC}|56-189
61878|code|LDR             R1, =(aNoOutstandingC - 0xF1BE); "no outstanding condition"|4-73
61880|code|MOV             R0, R4|32-70
61882|code|ADD             R1, PC; "no outstanding condition"|121-68
61884|code|BL              reportDataError|255-247-208-248
61888|code|MOVS            R0, #1|1-32
61890|code|POP             {R3-R5,PC}|56-189
61892|data|DCD aAlreadyInElse - 0xF1B0; "already in else"|212-62-0-0
61896|data|DCD aNoOutstandingC - 0xF1BE; "no outstanding condition"|170-62-0-0
61900|code|PUSH            {R3-R5,LR}|56-181
61902|code|MOV             R5, R0|5-70
61904|code|LDR             R0, [R0,#0x28]|128-106
61906|code|BL              getStackHead|253-247-51-255
61910|code|CBZ             R0, loc_F1F8|120-177
61912|code|MOV             R4, R0|4-70
61914|code|BL              getElementIdentifier|253-247-187-254
61918|code|MOV             R5, R0|5-70
61920|code|MOV             R0, R4|32-70
61922|code|BL              getElementIdentifier|253-247-183-254
61926|code|CMP             R0, R5|168-66
61928|code|BEQ             loc_F1EE|1-208
61930|code|MOVS            R0, #1|1-32
61932|code|POP             {R3-R5,PC}|56-189
61934|code|MOV             R0, R4|32-70
61936|code|BL              deleteElement|253-247-116-254
61940|code|MOVS            R0, #1|1-32
61942|code|POP             {R3-R5,PC}|56-189
61944|code|LDR             R1, =(aNoOutstandingC - 0xF200); "no outstanding condition"|2-73
61946|code|MOV             R0, R5|40-70
61948|code|ADD             R1, PC; "no outstanding condition"|121-68
61950|code|BL              reportDataError|255-247-175-248
61954|code|B               loc_F1EA|242-231
61956|data|DCD aNoOutstandingC - 0xF200; "no outstanding condition"|104-62-0-0
61960|code|PUSH            {R4}|16-180
61962|code|MOV             R4, R1|12-70
61964|code|MOV             R3, R2|19-70
61966|code|MOV             R1, R0|1-70
61968|code|MOV             R2, R4|34-70
61970|code|MOVS            R0, #0|0-32
61972|code|POP.W           {R4}|93-248-4-75
61976|code|B.W             sub_E0C4|254-247-84-191
61980|code|PUSH.W          {R4-R10,LR}|45-233-240-71
61984|code|MOV             R7, R1|15-70
61986|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xF22E)|64-76
61988|code|MOV             R9, R3|153-70
61990|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|64-77
61992|code|SUB             SP, SP, #0xA0|168-176
61994|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
61996|code|LDR             R1, =(aIncludingDataF - 0xF23A); "including data file: %s"|63-73
61998|code|MOV             R6, R0|6-70
62000|code|MOVS            R0, #7|7-32
62002|code|LDR.W           R8, [R4,R5]; __stack_chk_guard|84-248-5-128
62006|code|ADD             R1, PC; "including data file: %s"|121-68
62008|code|MOV             R10, R2|146-70
62010|code|LDR             R5, [SP,#0xC0+arg_0]|48-157
62012|code|LDR.W           R3, [R8]|216-248-0-48
62016|code|STR             R3, [SP,#0xC0+var_24]|39-147
62018|code|BL              logMessage|249-247-255-254
62022|code|CMP             R6, #0|0-46
62024|code|BEQ             loc_F308|94-208
62026|code|LDR             R4, [R6,#0x2C]|244-106
62028|code|CMP             R4, #0|0-44
62030|code|BEQ             loc_F2EC|77-208
62032|code|MOV             R0, R7; stream|56-70
62034|code|MOVS            R2, #0|0-34
62036|code|STR.W           R10, [SP,#0xC0+var_B8]|205-248-8-160
62040|code|STR             R2, [SP,#0xC0+var_B0]|4-146
62042|code|STR             R2, [SP,#0xC0+var_AC]|5-146
62044|code|STR             R2, [SP,#0xC0+var_A8]|6-146
62046|code|STR             R2, [SP,#0xC0+var_A4]|7-146
62048|code|STR             R2, [SP,#0xC0+var_A0]|8-146
62050|code|STR             R2, [SP,#0xC0+var_9C]|9-146
62052|code|STR             R2, [SP,#0xC0+var_90]|12-146
62054|code|STR             R2, [SP,#0xC0+var_8C]|13-146
62056|code|STR             R2, [SP,#0xC0+var_88]|14-146
62058|code|STR             R2, [SP,#0xC0+var_84]|15-146
62060|code|STR             R6, [SP,#0xC0+var_B4]|3-150
62062|code|STR.W           R9, [SP,#0xC0+var_98]|205-248-40-144
62066|code|STR             R5, [SP,#0xC0+var_94]|11-149
62068|code|BLX             fileno|247-247-196-233
62072|code|ADD             R2, SP, #0xC0+stat_buf; stat_buf|16-170
62074|code|MOV             R1, R0; fildes|1-70
62076|code|MOVS            R0, #3; ver|3-32
62078|code|BLX             __fxstat|247-247-90-234
62082|code|ADDS            R0, #1|1-48
62084|code|ITTT NE|30-191
62086|code|LDRDNE.W        R0, R1, [SP,#0xC0+stat_buf]|221-233-16-1
62090|code|LDRNE           R3, [SP,#0xC0+stat_buf.st_ino]|19-155
62092|code|STRDNE.W        R0, R1, [SP,#0xC0+var_A8]|205-233-6-1
62096|code|MOV.W           R1, #0|79-240-0-1
62100|code|LDR             R0, =(loc_E044+1 - 0xF29E)|38-72
62102|code|IT NE|24-191
62104|code|STRNE           R3, [SP,#0xC0+var_A0]|8-147
62106|code|ADD             R0, PC; loc_E044|120-68
62108|code|BL              newQueue|253-247-94-254
62112|code|STR             R0, [SP,#0xC0+var_90]|12-144
62114|code|CBZ             R0, loc_F2FE|96-179
62116|code|LDR             R0, =(sub_E024+1 - 0xF2AC)|35-72
62118|code|MOVS            R1, #0|0-33
62120|code|ADD             R0, PC; sub_E024|120-68
62122|code|BL              newQueue|253-247-87-254
62126|code|MOV             R5, R0|5-70
62128|code|CBZ             R0, loc_F302|56-179
62130|code|MOV             R1, R4|33-70
62132|code|ADD             R6, SP, #0xC0+var_B8|2-174
62134|code|BL              setQueueData|253-247-187-254
62138|code|LDR             R1, =(loc_E660+1 - 0xF2C4)|31-73
62140|code|MOV             R0, R7|56-70
62142|code|MOV             R2, R6|50-70
62144|code|ADD             R1, PC; loc_E660|121-68
62146|code|STR             R5, [SP,#0xC0+var_8C]|13-149
62148|code|BL              processLines|250-247-198-253
62152|code|MOVS            R4, R0|4-28
62154|code|LDR             R0, [SP,#0xC0+var_90]|12-152
62156|code|IT NE|24-191
62158|code|MOVNE           R4, #1|1-36
62160|code|BL              getStackHead|253-247-180-254
62164|code|CBZ             R0, loc_F2E0|32-177
62166|code|LDR             R1, =(aOutstandingCon - 0xF2DE); "outstanding condition at end of file"|25-73
62168|code|MOV             R0, R6|48-70
62170|code|ADD             R1, PC; "outstanding condition at end of file"|121-68
62172|code|BL              reportDataError|255-247-64-248
62176|code|LDR             R0, [SP,#0xC0+var_8C]|13-152
62178|code|BL              deallocateQueue|253-247-109-254
62182|code|LDR             R0, [SP,#0xC0+var_90]|12-152
62184|code|BL              deallocateQueue|253-247-106-254
62188|code|LDR             R2, [SP,#0xC0+var_24]|39-154
62190|code|MOV             R0, R4|32-70
62192|code|LDR.W           R3, [R8]|216-248-0-48
62196|code|CMP             R2, R3|154-66
62198|code|BNE             loc_F320|19-209
62200|code|ADD             SP, SP, #0xA0|40-176
62202|code|POP.W           {R4-R10,PC}|189-232-240-135
62206|code|MOV             R4, R0|4-70
62208|code|B               loc_F2EC|244-231
62210|code|STR             R0, [SP,#0xC0+var_8C]|13-144
62212|code|MOV             R4, R0|4-70
62214|code|B               loc_F2E6|238-231
62216|code|LDR             R0, =(unk_250AC - 0xF314)|13-72
62218|code|MOVS            R2, #1|1-34
62220|code|LDR             R1, =(aGlobalDataVari - 0xF318); "global-data-variables"|13-73
62222|code|LDR             R3, =(sub_E004+1 - 0xF31A)|14-75
62224|code|ADD             R0, PC; unk_250AC|120-68
62226|code|STR             R6, [SP,#0xC0+var_C0]|0-150
62228|code|ADD             R1, PC; "global-data-variables"|121-68
62230|code|ADD             R3, PC; sub_E004|123-68
62232|code|BL              getProgramQueue|253-247-104-254
62236|code|MOV             R4, R0|4-70
62238|code|B               loc_F24C|149-231
62240|code|BLX             __stack_chk_fail|247-247-136-233
62244|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF22E|166-90-1-0
62248|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
62252|data|DCD aIncludingDataF - 0xF23A; "including data file: %s"|90-62-0-0
62256|data|DCD loc_E044+1 - 0xF29E|167-237-255-255
62260|data|DCD sub_E024+1 - 0xF2AC|121-237-255-255
62264|data|DCD loc_E660+1 - 0xF2C4|157-243-255-255
62268|data|DCD aOutstandingCon - 0xF2DE; "outstanding condition at end of file"|206-61-0-0
62272|data|DCD unk_250AC - 0xF314|152-93-1-0
62276|data|DCD aGlobalDataVari - 0xF318; "global-data-variables"|112-59-0-0
62280|data|DCD sub_E004+1 - 0xF31A|235-236-255-255
62284|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF356)|56-75
62286|code|PUSH.W          {R4-R11,LR}|45-233-240-79
62290|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
62292|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|55-77
62294|code|SUB             SP, SP, #0x24|137-176
62296|code|ADD             R7, SP, #0x18|6-175
62298|code|MOV             R4, R0|4-70
62300|code|MOV             R0, R1|8-70
62302|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
62304|code|MOV             R1, R2|17-70
62306|code|MOV             R2, R7|58-70
62308|code|LDR             R6, [R4]|38-104
62310|code|LDR             R3, [R5]|43-104
62312|code|STR             R3, [R7,#0xC+var_8]|123-96
62314|code|BL              makeUtf8FromWchars|0-240-185-251
62318|code|MOV             R8, R0|128-70
62320|code|CMP             R0, #0|0-40
62322|code|BEQ             loc_F424|87-208
62324|code|BL              isAbsolutePath|250-247-178-248
62328|code|MOV             R10, R0|130-70
62330|code|CMP             R0, #0|0-40
62332|code|BEQ             loc_F408|68-208
62334|code|MOV.W           R10, #0|79-240-0-10
62338|code|MOV             R1, R10|81-70
62340|code|LDR             R0, [R7,#0xC+var_C]|56-104
62342|code|MOVS            R2, #1|1-34
62344|code|MOV             R9, SP|233-70
62346|code|LDR.W           LR, =(aSS_3 - 0xF39C); "%.*s%.*s"|223-248-172-224
62350|code|ADD.W           R12, R0, R2|0-235-2-12
62354|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
62358|code|ADD             R1, R12|97-68
62360|code|ADD             LR, PC; "%.*s%.*s"|254-68
62362|code|ADD.W           R12, R1, #7|1-241-7-12
62366|code|BIC.W           R12, R12, #7|44-240-7-12
62370|code|SUB.W           SP, SP, R12|173-235-12-13
62374|code|ADD.W           R11, SP, #0x24+var_C|13-241-24-11
62378|code|STR             R0, [SP,#0x24+var_18]|3-144
62380|code|STR.W           R10, [SP,#0x24+var_20]|205-248-4-160
62384|code|MOV             R0, R11|88-70
62386|code|STR.W           LR, [SP,#0x24+var_24]|205-248-0-224
62390|code|STR             R6, [SP,#0x24+var_1C]|2-150
62392|code|STR.W           R8, [SP,#0x24+var_14]|205-248-16-128
62396|code|BLX             __snprintf_chk|247-247-242-233
62400|code|LDR             R2, =(aInvalidUnicode+0x18 - 0xF3CA); "r"|30-74
62402|code|MOV             R0, R4|32-70
62404|code|MOV             R1, R11|89-70
62406|code|ADD             R2, PC; "r"|122-68
62408|code|MOVS            R3, #0|0-35
62410|code|BL              sub_E0C4|254-247-123-254
62414|code|MOV             R10, R0|130-70
62416|code|CBZ             R0, loc_F420|48-179
62418|code|LDR             R6, [R4,#0x24]|102-106
62420|code|MOV             R0, R4|32-70
62422|code|LDR             R3, [R4,#0x20]|35-106
62424|code|MOV             R2, R11|90-70
62426|code|MOV             R1, R10|81-70
62428|code|STR             R6, [SP,#0x24+var_24]|0-150
62430|code|BL              processDataStream|255-247-29-255
62434|code|MOVS            R4, R0|4-28
62436|code|MOV             R0, R10; stream|80-70
62438|code|IT NE|24-191
62440|code|MOVNE           R4, #1|1-36
62442|code|BLX             fclose|247-247-252-233
62446|code|MOV             R0, R8; ptr|64-70
62448|code|MOV             SP, R9|205-70
62450|code|BLX             free|246-247-168-239
62454|code|LDR             R2, [R7,#0xC+var_8]|122-104
62456|code|MOV             R0, R4|32-70
62458|code|LDR             R3, [R5]|43-104
62460|code|CMP             R2, R3|154-66
62462|code|BNE             loc_F42C|21-209
62464|code|ADDS            R7, #0xC|12-55
62466|code|MOV             SP, R7|189-70
62468|code|POP.W           {R4-R11,PC}|189-232-240-143
62472|code|MOVS            R1, #0x2F ; '/'; c|47-33
62474|code|MOV             R0, R6; s|48-70
62476|code|BLX             strrchr|247-247-126-234
62480|code|MOV             R1, R10|81-70
62482|code|CMP             R0, #0|0-40
62484|code|BEQ             loc_F384|182-208
62486|code|SUBS            R0, R0, R6|128-27
62488|code|ADD.W           R10, R0, #1|0-241-1-10
62492|code|MOV             R1, R10|81-70
62494|code|B               loc_F384|177-231
62496|code|MOV             R4, R0|4-70
62498|code|B               loc_F3EE|228-231
62500|code|BL              logMallocError|249-247-154-254
62504|code|MOV             R4, R8|68-70
62506|code|B               loc_F3F6|228-231
62508|code|BLX             __stack_chk_fail|247-247-2-233
62512|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF356|126-89-1-0
62516|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
62520|data|DCD aSS_3 - 0xF39C; "%.*s%.*s"|56-61-0-0
62524|data|DCD aInvalidUnicode+0x18 - 0xF3CA; "r"|162-61-0-0
62528|code|PUSH            {R4-R7,LR}|240-181
62530|code|SUBW            SP, SP, #0x40C|173-242-12-77
62534|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xF452)|18-76
62536|code|ADD             R6, SP, #0x420+var_41C|1-174
62538|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|18-77
62540|code|MOVS            R2, #0|0-34
62542|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
62544|code|LDR             R3, =(aIncludeFilePat - 0xF45C); "include file path"|17-75
62546|code|MOV             R1, R6|49-70
62548|code|MOV             R7, R0|7-70
62550|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
62552|code|ADD             R3, PC; "include file path"|123-68
62554|code|LDR             R5, [R4]|37-104
62556|code|STR.W           R5, [SP,#0x420+var_1C]|205-248-4-84
62560|code|BL              getDataString|255-247-102-251
62564|code|CBNZ            R0, loc_F478|64-185
62566|code|MOVS            R0, #1|1-32
62568|code|LDR.W           R2, [SP,#0x420+var_1C]|221-248-4-36
62572|code|LDR             R3, [R4]|35-104
62574|code|CMP             R2, R3|154-66
62576|code|BNE             loc_F48A|11-209
62578|code|ADDW            SP, SP, #0x40C|13-242-12-77
62582|code|POP             {R4-R7,PC}|240-189
62584|code|MOV             R0, R7|56-70
62586|code|LDRB            R2, [R6]|50-120
62588|code|ADD             R1, SP, #0x420+var_418|2-169
62590|code|BL              includeDataFile|255-247-101-255
62594|code|ADDS            R0, #0|0-48
62596|code|IT NE|24-191
62598|code|MOVNE           R0, #1|1-32
62600|code|B               loc_F468|238-231
62602|code|BLX             __stack_chk_fail|247-247-212-232
62606|data|ALIGN 0x10|0-191
62608|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF452|130-88-1-0
62612|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
62616|data|DCD aIncludeFilePat - 0xF45C; "include file path"|132-60-0-0
62620|code|PUSH            {R4-R7,LR}|240-181
62622|code|MOV             R5, R1|13-70
62624|code|LDR             R1, =(aInvalidUnicode+0x18 - 0xF4AC); "r"|14-73
62626|code|SUB             SP, SP, #0xC|131-176
62628|code|MOV             R7, R2|23-70
62630|code|MOVS            R2, #0|0-34
62632|code|ADD             R1, PC; "r"|121-68
62634|code|MOV             R6, R0|6-70
62636|code|BL              openDataFile|255-247-172-254
62640|code|MOV             R4, R0|4-70
62642|code|CBZ             R0, loc_F4D4|120-177
62644|code|MOV             R3, R5|43-70
62646|code|MOV             R2, R6|50-70
62648|code|MOV             R1, R4|33-70
62650|code|STR             R7, [SP,#0x20+var_20]|0-151
62652|code|MOVS            R0, #0|0-32
62654|code|BL              processDataStream|255-247-173-254
62658|code|MOVS            R5, R0|5-28
62660|code|MOV             R0, R4; stream|32-70
62662|code|IT NE|24-191
62664|code|MOVNE           R5, #1|1-37
62666|code|BLX             fclose|247-247-140-233
62670|code|MOV             R0, R5|40-70
62672|code|ADD             SP, SP, #0xC|3-176
62674|code|POP             {R4-R7,PC}|240-189
62676|code|MOV             R5, R0|5-70
62678|code|MOV             R0, R5|40-70
62680|code|ADD             SP, SP, #0xC|3-176
62682|code|POP             {R4-R7,PC}|240-189
62684|data|DCD aInvalidUnicode+0x18 - 0xF4AC; "r"|192-60-0-0
62688|code|PUSH            {R4-R7,LR}|240-181
62690|code|SUB             SP, SP, #0x44|145-176
62692|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xF4F0)|18-77
62694|code|ADD             R6, SP, #0x58+var_3C|7-174
62696|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|18-74
62698|code|MOVS            R4, #0|0-36
62700|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
62702|code|MOV             R3, R4|35-70
62704|code|MOV.W           LR, #0x10|79-240-16-14
62708|code|MOVS            R1, #1|1-33
62710|code|LDR             R7, [R5,R2]; __stack_chk_guard|175-88
62712|code|MOVS            R2, #2|2-34
62714|code|STR             R6, [SP,#0x58+var_58]|0-150
62716|code|ADD             R5, SP, #0x58+var_40|6-173
62718|code|STRH.W          R0, [SP,#0x58+var_44]|173-248-20-0
62722|code|ADD             R0, SP, #0x58+var_44|5-168
62724|code|LDR             R6, [R7]|62-104
62726|code|STR.W           LR, [SP,#0x58+var_54]|205-248-4-224
62730|code|STR             R5, [SP,#0x58+var_50]|2-149
62732|code|STR             R6, [SP,#0x58+var_1C]|15-150
62734|code|STR             R4, [SP,#0x58+var_40]|6-148
62736|code|BLX             unorm_normalize_52|247-247-52-233
62740|code|LDR             R3, [SP,#0x58+var_40]|6-155
62742|code|LDR             R2, [SP,#0x58+var_1C]|15-154
62744|code|CMP             R3, R4|163-66
62746|code|LDR             R3, [R7]|59-104
62748|code|ITE LE|212-191
62750|code|LDRHLE.W        R0, [SP,#0x58+var_3C]|189-248-28-0
62754|code|MOVGT           R0, R4|32-70
62756|code|CMP             R2, R3|154-66
62758|code|BNE             loc_F52C|1-209
62760|code|ADD             SP, SP, #0x44 ; 'D'|17-176
62762|code|POP             {R4-R7,PC}|240-189
62764|code|BLX             __stack_chk_fail|247-247-130-232
62768|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF4F0|228-87-1-0
62772|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
62776|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xF546)|32-74
62778|code|PUSH            {R4-R7,LR}|240-181
62780|code|SUB             SP, SP, #0x3C|143-176
62782|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|32-75
62784|code|ADD             R7, SP, #8|2-175
62786|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
62788|code|LDR             R5, =(dword_250B0 - 0xF54E)|31-77
62790|code|STR             R0, [R7,#0x34+var_30]|120-96
62792|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
62794|code|ADD             R5, PC; dword_250B0|125-68
62796|code|LDR             R0, [R5]|40-104
62798|code|LDR             R3, [R4]|35-104
62800|code|STR             R3, [R7,#0x34+var_8]|251-98
62802|code|CBZ             R0, loc_F5A4|56-179
62804|code|ADDS            R3, R0, #1|67-28
62806|code|IT EQ|8-191
62808|code|MOVEQ           R0, #0; cd|0-32
62810|code|BEQ             loc_F596|28-208
62812|code|MOVS            R2, #4|4-34
62814|code|ADD.W           R5, R7, #0x1C|7-241-28-5
62818|code|ADDS            R3, R7, R2|187-24
62820|code|STR             R2, [R7,#0x34+var_24]|58-97
62822|code|STR             R3, [R7,#0x34+var_28]|251-96
62824|code|ADD.W           R1, R7, #0xC; inbuf|7-241-12-1
62828|code|STR             R5, [R7,#0x34+var_1C]|189-97
62830|code|MOVS            R3, #0x10|16-35
62832|code|ADD.W           R2, R7, #0x10; inbytesleft|7-241-16-2
62836|code|STR             R3, [R7,#0x34+var_20]|123-97
62838|code|ADD.W           R3, R7, #0x14|7-241-20-3
62842|code|STR             R3, [SP,#0x3C+outbytesleft]; outbytesleft|0-147
62844|code|ADD.W           R3, R7, #0x18; outbuf|7-241-24-3
62848|code|MOV             R6, SP|110-70
62850|code|BLX             iconv|247-247-130-233
62854|code|ADDS            R0, #1|1-48
62856|code|BEQ             loc_F592|3-208
62858|code|LDR             R3, [R7,#0x34+var_1C]|187-105
62860|code|SUBS            R3, R3, R5|91-27
62862|code|CMP             R3, #1|1-43
62864|code|BEQ             loc_F5B4|16-208
62866|code|MOVS            R0, #0|0-32
62868|code|MOV             SP, R6|181-70
62870|code|LDR             R2, [R7,#0x34+var_8]|250-106
62872|code|LDR             R3, [R4]|35-104
62874|code|CMP             R2, R3|154-66
62876|code|BNE             loc_F5B8|12-209
62878|code|ADDS            R7, #0x34 ; '4'|52-55
62880|code|MOV             SP, R7|189-70
62882|code|POP             {R4-R7,PC}|240-189
62884|code|LDR             R0, =(aAsciiTranslit - 0xF5AC); "ASCII//TRANSLIT"|8-72
62886|code|LDR             R1, =(aWcharT - 0xF5AE); "WCHAR_T"|9-73
62888|code|ADD             R0, PC; "ASCII//TRANSLIT"|120-68
62890|code|ADD             R1, PC; "WCHAR_T"|121-68
62892|code|BLX             iconv_open|247-247-78-233
62896|code|STR             R0, [R5]|40-96
62898|code|B               loc_F554|207-231
62900|code|LDRB            R0, [R7,#0x34+var_18]|56-127
62902|code|B               loc_F596|238-231
62904|code|BLX             __stack_chk_fail|247-247-60-232
62908|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF546|142-87-1-0
62912|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
62916|data|DCD dword_250B0 - 0xF54E|98-91-1-0
62920|data|DCD aAsciiTranslit - 0xF5AC; "ASCII//TRANSLIT"|72-59-0-0
62924|data|DCD aWcharT - 0xF5AE; "WCHAR_T"|86-59-0-0
62928|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF5D8)|15-75
62930|code|PUSH            {R4-R6,LR}|112-181
62932|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
62934|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|15-77
62936|code|SUB             SP, SP, #8|130-176
62938|code|ADD             R2, SP, #0x18+var_10|2-170
62940|code|MOVS            R4, #0|0-36
62942|code|MOV             R6, R0|6-70
62944|code|MOVS            R0, #2|2-32
62946|code|LDR             R5, [R3,R5]; __stack_chk_guard|93-89
62948|code|STR.W           R4, [R2,#-8]!|66-248-8-77
62952|code|LDR             R3, [R5]|43-104
62954|code|STR             R3, [SP,#0x18+var_14]|1-147
62956|code|BLX             u_charFromName_52|247-247-168-232
62960|code|LDR             R3, [SP,#0x18+var_18]|0-155
62962|code|LDR             R2, [SP,#0x18+var_14]|1-154
62964|code|CMP             R3, R4|163-66
62966|code|LDR             R3, [R5]|43-104
62968|code|ITTT LE|222-191
62970|code|MOVLE           R4, #1|1-36
62972|code|UXTHLE          R0, R0|128-178
62974|code|STRLE           R0, [R6]|48-96
62976|code|CMP             R2, R3|154-66
62978|code|MOV             R0, R4|32-70
62980|code|BNE             loc_F60A|1-209
62982|code|ADD             SP, SP, #8|2-176
62984|code|POP             {R4-R6,PC}|112-189
62986|code|BLX             __stack_chk_fail|247-247-20-232
62990|data|ALIGN 0x10|0-191
62992|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF5D8|252-86-1-0
62996|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
63000|code|PUSH            {R3-R5,LR}|56-181
63002|code|MOVW            R1, #0x1005|65-242-5-1
63006|code|MOV             R4, R0|4-70
63008|code|BLX             u_getIntPropertyValue_52|246-247-182-238
63012|code|MOVW            R1, #0x1004|65-242-4-1
63016|code|MOV             R5, R0|5-70
63018|code|MOV             R0, R4|32-70
63020|code|BLX             u_getIntPropertyValue_52|246-247-176-238
63024|code|CBZ             R4, loc_F66C|228-177
63026|code|CMP             R5, #0xF|15-45
63028|code|BEQ             loc_F69E|51-208
63030|code|SUBS            R3, R5, #6|171-31
63032|code|CMP             R3, #1|1-43
63034|code|BLS             loc_F674|27-217
63036|code|SUB.W           R3, R4, #0x1160|164-245-139-83
63040|code|CMP             R3, #0x9F|159-43
63042|code|BLS             loc_F670|21-217
63044|code|CMP             R4, #0xAD|173-44
63046|code|BEQ             loc_F678|23-208
63048|code|CMP             R5, #0x10|16-45
63050|code|BEQ             loc_F674|19-208
63052|code|CMP             R0, #3|3-40
63054|code|BEQ             loc_F69A|36-208
63056|code|CMP             R0, #2|2-40
63058|code|BEQ             loc_F678|17-208
63060|code|CMP             R0, #5|5-40
63062|code|BEQ             loc_F69A|32-208
63064|code|CMP             R0, #4|4-40
63066|code|BEQ             loc_F678|13-208
63068|code|CMP             R0, #1|1-40
63070|code|BEQ             loc_F67C|13-208
63072|code|CMP             R5, #0|0-45
63074|code|ITE EQ|12-191
63076|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
63080|code|MOVNE           R0, #1|1-32
63082|code|POP             {R3-R5,PC}|56-189
63084|code|MOV             R0, R4|32-70
63086|code|POP             {R3-R5,PC}|56-189
63088|code|CMP             R5, #5|5-45
63090|code|BNE             loc_F648|233-209
63092|code|MOVS            R0, #0|0-32
63094|code|POP             {R3-R5,PC}|56-189
63096|code|MOVS            R0, #1|1-32
63098|code|POP             {R3-R5,PC}|56-189
63100|code|SUB.W           R3, R4, #0x4E00|164-245-156-67
63104|code|CMP.W           R3, #0x5200|179-245-164-79
63108|code|BCC             loc_F69A|9-211
63110|code|SUB.W           R3, R4, #0x3400|164-245-80-83
63114|code|CMP.W           R3, #0x19C0|179-245-206-95
63118|code|BCC             loc_F69A|4-211
63120|code|SUB.W           R4, R4, #0xF900|164-245-121-68
63124|code|CMP.W           R4, #0x200|180-245-0-127
63128|code|BCS             loc_F660|226-210
63130|code|MOVS            R0, #2|2-32
63132|code|POP             {R3-R5,PC}|56-189
63134|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
63138|code|POP             {R3-R5,PC}|56-189
63140|code|PUSH.W          {R4-R8,LR}|45-233-240-65
63144|code|MOV             R4, R0|4-70
63146|code|LDR             R6, =(off_24B5C - 0xF6B4)|11-78
63148|code|MOV             R8, R1|136-70
63150|code|MOV             R7, R2|23-70
63152|code|ADD             R6, PC; off_24B5C|126-68
63154|code|B               loc_F6C4|7-224
63156|code|LDR.W           R3, [R6],#4|86-248-4-59
63160|code|MOV             R0, R4|32-70
63162|code|CBZ             R3, loc_F6D2|83-177
63164|code|BLX             R3; getBaseCharacter|152-71
63166|code|CMP             R0, #0|0-40
63168|code|IT NE|24-191
63170|code|MOVNE           R4, R0|4-70
63172|code|MOV             R0, R4|32-70
63174|code|MOV             R1, R7|57-70
63176|code|BLX             R8|192-71
63178|code|MOV             R5, R0|5-70
63180|code|CMP             R0, #0|0-40
63182|code|BEQ             loc_F6B4|241-208
63184|code|MOVS            R5, #1|1-37
63186|code|MOV             R0, R5|40-70
63188|code|POP.W           {R4-R8,PC}|189-232-240-129
63192|data|DCD off_24B5C - 0xF6B4|168-84-1-0
63196|code|PUSH            {R4,LR}|16-181
63198|code|MOVS            R0, #0x20 ; ' '; size|32-32
63200|code|BLX             malloc|247-247-82-232
63204|code|MOV             R4, R0|4-70
63206|code|CBZ             R0, loc_F6FE|80-177
63208|code|MOVS            R1, #0; attr|0-33
63210|code|BLX             pthread_rwlock_init|247-247-182-232
63214|code|CBNZ            R0, loc_F6F4|8-185
63216|code|MOV             R0, R4|32-70
63218|code|POP             {R4,PC}|16-189
63220|code|MOV             R0, R4; ptr|32-70
63222|code|BLX             free|246-247-38-238
63226|code|MOVS            R0, #0|0-32
63228|code|POP             {R4,PC}|16-189
63230|code|BL              logMallocError|249-247-45-253
63234|code|MOV             R0, R4|32-70
63236|code|POP             {R4,PC}|16-189
63238|data|ALIGN 4|0-191
63240|code|PUSH            {R4,LR}|16-181
63242|code|MOV             R4, R0|4-70
63244|code|BLX             pthread_rwlock_destroy|246-247-244-237
63248|code|MOV             R0, R4; ptr|32-70
63250|code|POP.W           {R4,LR}|189-232-16-64
63254|code|B.W             j_free|246-247-19-190
63258|data|ALIGN 4|0-191
63260|code|PUSH            {R3,LR}|8-181
63262|code|LSLS            R3, R1, #0x1F|203-7
63264|code|BPL             loc_F732|7-213
63266|code|LSLS            R2, R1, #0x1E|138-7
63268|code|BPL             loc_F73E|11-213
63270|code|BLX             pthread_rwlock_trywrlock|247-247-134-232
63274|code|CLZ.W           R0, R0|176-250-128-240
63278|code|LSRS            R0, R0, #5; rwlock|64-9
63280|code|POP             {R3,PC}|8-189
63282|code|LSLS            R3, R1, #0x1E|139-7
63284|code|BMI             loc_F746|7-212
63286|code|BLX             pthread_rwlock_rdlock|246-247-186-238
63290|code|MOVS            R0, #(dword_0+1); rwlock|1-32
63292|code|POP             {R3,PC}|8-189
63294|code|BLX             pthread_rwlock_wrlock|246-247-116-239
63298|code|MOVS            R0, #(dword_0+1); rwlock|1-32
63300|code|POP             {R3,PC}|8-189
63302|code|BLX             pthread_rwlock_tryrdlock|246-247-124-239
63306|code|CLZ.W           R0, R0|176-250-128-240
63310|code|LSRS            R0, R0, #5|64-9
63312|code|POP             {R3,PC}|8-189
63314|data|ALIGN 4|0-191
63316|code|B.W             j_pthread_rwlock_unlock|246-247-90-191
63320|code|PUSH            {R4,LR}|16-181
63322|code|MOV             R4, R0|4-70
63324|code|LDR             R0, =(unk_250B4 - 0xF762)|7-72
63326|code|ADD             R0, PC; unk_250B4 ; mutex|120-68
63328|code|BLX             pthread_mutex_lock|246-247-146-237
63332|code|LDR             R3, [R4]|35-104
63334|code|CBZ             R3, loc_F774|43-177
63336|code|LDR             R0, =(unk_250B4 - 0xF76E)|5-72
63338|code|ADD             R0, PC; unk_250B4 ; mutex|120-68
63340|code|BLX             pthread_mutex_unlock|247-247-36-233
63344|code|LDR             R0, [R4]|32-104
63346|code|POP             {R4,PC}|16-189
63348|code|BL              newLockDescriptor|255-247-178-255
63352|code|STR             R0, [R4]|32-96
63354|code|B               loc_F768|245-231
63356|data|DCD unk_250B4 - 0xF762|82-89-1-0
63360|data|DCD unk_250B4 - 0xF76E|70-89-1-0
63364|code|MOVS            R0, #0; category|0-32
63366|code|PUSH            {R4,LR}|16-181
63368|code|MOV             R1, R0; locale|1-70
63370|code|BLX             setlocale|246-247-188-239
63374|code|MOV             R4, R0|4-70
63376|code|CBZ             R0, loc_F79A|24-177
63378|code|BLX             __strdup|246-247-158-238
63382|code|MOV             R4, R0|4-70
63384|code|CBZ             R0, loc_F79E|8-177
63386|code|MOV             R0, R4|32-70
63388|code|POP             {R4,PC}|16-189
63390|code|BL              logMallocError|249-247-221-252
63394|code|B               loc_F79A|250-231
63396|code|PUSH            {R3,LR}|8-181
63398|code|LDRB            R3, [R0]|3-120
63400|code|CMP             R3, #0x43 ; 'C'|67-43
63402|code|BNE             loc_F7B4|3-209
63404|code|LDRB            R3, [R0,#1]|67-120
63406|code|CBNZ            R3, loc_F7B4|11-185
63408|code|MOVS            R0, #(dword_0+1); s1|1-32
63410|code|POP             {R3,PC}|8-189
63412|code|LDR             R1, =(aPosix - 0xF7BA); "POSIX"|3-73
63414|code|ADD             R1, PC; "POSIX"|121-68
63416|code|BLX             strcmp|247-247-96-232
63420|code|CLZ.W           R0, R0|176-250-128-240
63424|code|LSRS            R0, R0, #5|64-9
63426|code|POP             {R3,PC}|8-189
63428|data|DCD aPosix - 0xF7BA; "POSIX"|94-57-0-0
63432|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF7D6)|41-75
63434|code|PUSH.W          {R4-R11,LR}|45-233-240-79
63438|code|MOV             R6, R1|14-70
63440|code|LDR             R1, =(__stack_chk_guard_ptr - 0x24CD4)|40-73
63442|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
63444|code|SUB             SP, SP, #0x14|133-176
63446|code|MOV             R7, R0|7-70
63448|code|MOV             R0, R6; s|48-70
63450|code|MOV             R8, R2|144-70
63452|code|LDR.W           R10, [R3,R1]; __stack_chk_guard|83-248-1-160
63456|code|ADD.W           R9, SP, #0x38+var_34|13-241-4-9
63460|code|MOVS            R4, #0|0-36
63462|code|MOV             R11, SP|235-70
63464|code|LDR.W           R3, [R10]|218-248-0-48
63468|code|STR             R3, [SP,#0x38+var_2C]|3-147
63470|code|BLX             strlen|246-247-212-239
63474|code|STR.W           R4, [R9,#4]|201-248-4-64
63478|code|STR             R4, [SP,#0x38+var_34]|1-148
63480|code|MOV             R5, R0|5-70
63482|code|CBZ             R0, loc_F84A|48-179
63484|code|MOV             R0, R11; pwc|88-70
63486|code|MOV             R1, R6; s|49-70
63488|code|MOV             R2, R5; n|42-70
63490|code|MOV             R3, R9; p|75-70
63492|code|BLX             mbrtowc|246-247-114-237
63496|code|CMP             R0, #0|0-40
63498|code|BLE             loc_F860|41-221
63500|code|LDR             R3, [SP,#0x38+var_38]|0-155
63502|code|CBZ             R3, loc_F824|75-177
63504|code|CBZ             R7, loc_F81A|31-177
63506|code|CMP             R4, R8|68-69
63508|code|BEQ             loc_F858|32-208
63510|code|STR.W           R3, [R7,R4,LSL#2]|71-248-36-48
63514|code|SUBS            R5, R5, R0|45-26
63516|code|ADD             R6, R0|6-68
63518|code|ADD.W           R4, R4, #1|4-241-1-4
63522|code|BNE             loc_F7FC|235-209
63524|code|CMP             R7, #0|0-47
63526|code|IT NE|24-191
63528|code|CMPNE           R8, R4|160-69
63530|code|MOV             R0, R4|32-70
63532|code|ITE HI|140-191
63534|code|MOVHI           R3, #1|1-35
63536|code|MOVLS           R3, #0|0-35
63538|code|CBZ             R3, loc_F83A|19-177
63540|code|MOVS            R3, #0|0-35
63542|code|STR.W           R3, [R7,R0,LSL#2]|71-248-32-48
63546|code|LDR             R2, [SP,#0x38+var_2C]|3-154
63548|code|LDR.W           R3, [R10]|218-248-0-48
63552|code|CMP             R2, R3|154-66
63554|code|BNE             loc_F85C|11-209
63556|code|ADD             SP, SP, #0x14|5-176
63558|code|POP.W           {R4-R11,PC}|189-232-240-143
63562|code|CMP             R7, R4|167-66
63564|code|IT NE|24-191
63566|code|CMPNE           R8, R4|160-69
63568|code|ITE NE|20-191
63570|code|MOVNE           R3, #1|1-35
63572|code|MOVEQ           R3, #0|0-35
63574|code|B               loc_F832|236-231
63576|code|MOV             R0, R4|32-70
63578|code|B               loc_F83A|238-231
63580|code|BLX             __stack_chk_fail|246-247-234-238
63584|code|CMP             R7, #0|0-47
63586|code|IT NE|24-191
63588|code|CMPNE           R8, R4|160-69
63590|code|MOV             R0, R4|32-70
63592|code|ITE HI|140-191
63594|code|MOVHI           R3, #1|1-35
63596|code|MOVLS           R3, #0|0-35
63598|code|B               loc_F832|224-231
63600|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF7D6|254-84-1-0
63604|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
63608|code|MOV             R1, R0|1-70
63610|code|MOVS            R0, #0|0-32
63612|code|MOV             R2, R0|2-70
63614|code|B.W             convertTextToWchars|255-247-163-191
63618|data|ALIGN 4|0-191
63620|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF88E)|36-75
63622|code|MOV             R12, R1|140-70
63624|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|36-74
63626|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
63628|code|PUSH.W          {R4-R8,LR}|45-233-240-65
63632|code|SUB             SP, SP, #0x10|132-176
63634|code|LDR.W           R8, [R3,R2]; __stack_chk_guard|83-248-2-128
63638|code|MOV             R5, R0|5-70
63640|code|LDR.W           R3, [R8]|216-248-0-48
63644|code|STR             R3, [SP,#0x28+var_1C]|3-147
63646|code|BICS.W          R3, R0, #0x7F|48-240-127-3
63650|code|ITT EQ|4-191
63652|code|STRBEQ          R0, [R1]|8-112
63654|code|MOVEQ           R7, #1|1-39
63656|code|BEQ             loc_F8FC|40-208
63658|code|ADD             R7, SP, #0x28+var_1C|3-175
63660|code|MOV             R6, R7|62-70
63662|code|AND.W           R3, R5, #0x3F|5-240-63-3
63666|code|LSRS            R5, R5, #6|173-9
63668|code|ORR.W           R3, R3, #0x80|67-240-128-3
63672|code|STRB.W          R3, [R6,#-1]!|6-248-1-61
63676|code|BNE             loc_F8AE|247-209
63678|code|SUBS            R7, R7, R6|191-27
63680|code|MOVS            R2, #1|1-34
63682|code|RSB.W           R0, R7, #7|199-241-7-0
63686|code|AND.W           R1, R3, #0x3F|3-240-63-1
63690|code|LSLS            R2, R0|130-64
63692|code|MOV             R0, R6|48-70
63694|code|CMP             R1, R2|145-66
63696|code|ITTET GE|165-191
63698|code|STRBGE.W        R5, [R0,#-1]|0-248-1-92
63702|code|ADDGE           R7, #1|1-55
63704|code|UXTBLT          R4, R3|220-178
63706|code|ADDGE.W         R6, R6, #0xFFFFFFFF|6-241-255-54
63710|code|RSB.W           R2, R7, #8|199-241-8-2
63714|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
63718|code|IT GE|168-191
63720|code|MOVGE           R4, R5|44-70
63722|code|LSLS            R3, R2|147-64
63724|code|MOV             R0, R12; dest|96-70
63726|code|ORRS            R3, R4|35-67
63728|code|MOV             R1, R6; src|49-70
63730|code|MOV             R2, R7; n|58-70
63732|code|STRB            R3, [R6]|51-112
63734|code|BLX             memcpy|246-247-60-239
63738|code|MOV             R12, R0|132-70
63740|code|MOVS            R3, #0|0-35
63742|code|LDR             R2, [SP,#0x28+var_1C]|3-154
63744|code|STRB.W          R3, [R12,R7]|12-248-7-48
63748|code|MOV             R0, R7|56-70
63750|code|LDR.W           R3, [R8]|216-248-0-48
63754|code|CMP             R2, R3|154-66
63756|code|BNE             loc_F914|2-209
63758|code|ADD             SP, SP, #0x10|4-176
63760|code|POP.W           {R4-R8,PC}|189-232-240-129
63764|code|BLX             __stack_chk_fail|246-247-142-238
63768|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF88E|70-84-1-0
63772|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
63776|code|PUSH            {R4-R7,LR}|240-181
63778|code|MOV.W           R12, #1|79-240-1-12
63782|code|LDR             R6, [R1]|14-104
63784|code|MOV.W           LR, #0|79-240-0-14
63788|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
63792|code|CBZ             R6, loc_F962|190-177
63794|code|LDR             R7, [R0]|7-104
63796|code|SUBS            R2, R6, #1|114-30
63798|code|ADDS            R5, R7, #1|125-28
63800|code|STR             R5, [R0]|5-96
63802|code|LDRB            R3, [R7]|59-120
63804|code|STR             R2, [R1]|10-96
63806|code|TST.W           R3, #0x80|19-240-128-15
63810|code|BEQ             loc_F9B6|56-208
63812|code|TST.W           R3, #0x40|19-240-64-15
63816|code|BNE             loc_F966|13-209
63818|code|ADDS            R6, R4, #1|102-28
63820|code|BEQ             loc_F9F8|84-208
63822|code|SUBS.W          LR, LR, #1|190-241-1-14
63826|code|AND.W           R3, R3, #0x3F|3-240-63-3
63830|code|ORR.W           R4, R3, R4,LSL#6|67-234-132-20
63834|code|BEQ             loc_F9BC|47-208
63836|code|MOV             R6, R2|22-70
63838|code|CMP             R6, #0|0-46
63840|code|BNE             loc_F932|231-209
63842|code|MOV             R0, R4|32-70
63844|code|POP             {R4-R7,PC}|240-189
63846|code|TST.W           R3, #0x20|19-240-32-15
63850|code|BEQ             loc_F998|21-208
63852|code|TST.W           R3, #0x10|19-240-16-15
63856|code|BEQ             loc_F9AA|27-208
63858|code|TST.W           R3, #8|19-240-8-15
63862|code|BEQ             loc_F9B0|27-208
63864|code|TST.W           R3, #4|19-240-4-15
63868|code|IT EQ|8-191
63870|code|MOVEQ.W         LR, #4|79-240-4-14
63874|code|BNE             loc_F9EE|52-209
63876|code|ADDS            R4, #1|1-52
63878|code|BNE             loc_F9A0|11-209
63880|code|RSB.W           R4, LR, #6|206-241-6-4
63884|code|MOV             R6, R2|22-70
63886|code|LSL.W           R4, R12, R4|12-250-4-244
63890|code|SUBS            R4, #1|1-60
63892|code|ANDS            R4, R3|28-64
63894|code|B               loc_F95E|226-231
63896|code|ADDS            R4, #1|1-52
63898|code|MOV.W           LR, #1|79-240-1-14
63902|code|BEQ             loc_F988|243-208
63904|code|STR             R7, [R0]|7-96
63906|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
63910|code|STR             R6, [R1]|14-96
63912|code|POP             {R4-R7,PC}|240-189
63914|code|MOV.W           LR, #2|79-240-2-14
63918|code|B               loc_F984|233-231
63920|code|MOV.W           LR, #3|79-240-3-14
63924|code|B               loc_F984|230-231
63926|code|ADDS            R4, #1|1-52
63928|code|BNE             loc_F9A0|242-209
63930|code|MOV             R4, R3|28-70
63932|code|CMP             R2, #0|0-42
63934|code|BEQ             loc_F962|208-208
63936|code|LDRB            R3, [R5]|43-120
63938|code|AND.W           R3, R3, #0xC0|3-240-192-3
63942|code|CMP             R3, #0x80|128-43
63944|code|BNE             loc_F962|203-209
63946|code|SUBS            R2, #1|1-58
63948|code|ADDS            R3, R5, #1|107-28
63950|code|B               loc_F9DC|5-224
63952|code|LDRB            R4, [R4]|36-120
63954|code|SUBS            R2, #1|1-58
63956|code|AND.W           R4, R4, #0xC0|4-240-192-4
63960|code|CMP             R4, #0x80|128-44
63962|code|BNE             loc_F9E8|5-209
63964|code|STR             R3, [R0]|3-96
63966|code|MOV             R4, R3|28-70
63968|code|STR             R2, [R1]|10-96
63970|code|ADDS            R3, #1|1-51
63972|code|CMP             R2, #0|0-42
63974|code|BNE             loc_F9D0|243-209
63976|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
63980|code|POP             {R4-R7,PC}|240-189
63982|code|TST.W           R3, #2|19-240-2-15
63986|code|BEQ             loc_FA02|6-208
63988|code|ADDS            R4, #1|1-52
63990|code|BNE             loc_F9A0|211-209
63992|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
63996|code|CMP             R2, #0|0-42
63998|code|BNE             loc_F9C0|223-209
64000|code|B               loc_F9E8|242-231
64002|code|MOV.W           LR, #5|79-240-5-14
64006|code|B               loc_F984|189-231
64008|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFA14)|20-74
64010|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|21-75
64012|code|PUSH.W          {R4-R8,LR}|45-233-240-65
64016|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
64018|code|SUB             SP, SP, #0x10|132-176
64020|code|STR             R0, [SP,#0x10+var_C]|1-144
64022|code|LDR.W           R8, [R2,R3]; __stack_chk_guard|82-248-3-128
64026|code|LDRB            R4, [R0]|4-120
64028|code|LDR.W           R3, [R8]|216-248-0-48
64032|code|STR             R3, [SP,#0x10+var_4]|3-147
64034|code|CBZ             R4, loc_FA44|124-177
64036|code|ADD             R7, SP, #4|1-175
64038|code|ADD             R6, SP, #0x10+var_8|2-174
64040|code|MOVS            R4, #0|0-36
64042|code|MOVS            R5, #7|7-37
64044|code|B               loc_FA36|3-224
64046|code|LDR             R3, [SP,#0x10+var_C]|1-155
64048|code|ADDS            R4, #1|1-52
64050|code|LDRB            R3, [R3]|27-120
64052|code|CBZ             R3, loc_FA44|51-177
64054|code|MOV             R0, R7|56-70
64056|code|MOV             R1, R6|49-70
64058|code|STR             R5, [SP,#0x10+var_8]|2-149
64060|code|BL              convertUtf8ToWchar|255-247-112-255
64064|code|ADDS            R0, #1|1-48
64066|code|BNE             loc_FA2E|244-209
64068|code|LDR             R2, [SP,#0x10+var_4]|3-154
64070|code|MOV             R0, R4|32-70
64072|code|LDR.W           R3, [R8]|216-248-0-48
64076|code|CMP             R2, R3|154-66
64078|code|BNE             loc_FA56|2-209
64080|code|ADD             SP, SP, #0x10|4-176
64082|code|POP.W           {R4-R8,PC}|189-232-240-129
64086|code|BLX             __stack_chk_fail|246-247-238-237
64090|data|ALIGN 4|0-191
64092|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFA14|192-82-1-0
64096|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
64100|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xFA72)|28-75
64102|code|PUSH.W          {R4-R9,LR}|45-233-240-67
64106|code|MOV             R5, R0|5-70
64108|code|LDR             R0, =(__stack_chk_guard_ptr - 0x24CD4)|27-72
64110|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
64112|code|MOV             R6, R1|14-70
64114|code|LDR             R1, [R5]|41-104
64116|code|MOV             R4, R2|20-70
64118|code|SUB             SP, SP, #0xC|131-176
64120|code|LDR.W           R9, [R3,R0]; __stack_chk_guard|83-248-0-144
64124|code|LDRB            R3, [R1]|11-120
64126|code|LDR.W           R2, [R9]|217-248-0-32
64130|code|CMP             R3, #0|0-43
64132|code|IT NE|24-191
64134|code|CMPNE           R4, #1|1-44
64136|code|STR             R2, [SP,#0x28+var_24]|1-146
64138|code|BLS             loc_FACC|31-217
64140|code|MOV             R8, SP|232-70
64142|code|MOVS            R7, #7|7-39
64144|code|B               loc_FAA8|10-224
64146|code|MOV             R1, R3|25-70
64148|code|ADDS            R3, #4|4-51
64150|code|STR             R3, [R6]|51-96
64152|code|SUBS            R4, #1|1-60
64154|code|LDR             R2, [R5]|42-104
64156|code|STR             R0, [R1]|8-96
64158|code|LDRB            R2, [R2]|18-120
64160|code|CMP             R2, #0|0-42
64162|code|IT NE|24-191
64164|code|CMPNE           R4, #1|1-44
64166|code|BLS             loc_FAB8|7-217
64168|code|MOV             R0, R5|40-70
64170|code|MOV             R1, R8|65-70
64172|code|STR             R7, [SP,#0x28+var_28]|0-151
64174|code|BL              convertUtf8ToWchar|255-247-55-255
64178|code|LDR             R3, [R6]|51-104
64180|code|ADDS            R2, R0, #1|66-28
64182|code|BNE             loc_FA92|236-209
64184|code|MOVS            R2, #0|0-34
64186|code|STR             R2, [R3]|26-96
64188|code|LDR             R2, [SP,#0x28+var_24]|1-154
64190|code|LDR.W           R3, [R9]|217-248-0-48
64194|code|CMP             R2, R3|154-66
64196|code|BNE             loc_FAD4|6-209
64198|code|ADD             SP, SP, #0xC|3-176
64200|code|POP.W           {R4-R9,PC}|189-232-240-131
64204|code|CMP             R4, #0|0-44
64206|code|BEQ             loc_FABC|245-208
64208|code|LDR             R3, [R6]|51-104
64210|code|B               loc_FAB8|241-231
64212|code|BLX             __stack_chk_fail|246-247-174-237
64216|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFA72|98-82-1-0
64220|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
64224|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xFAEE)|39-75
64226|code|PUSH.W          {R4-R11,LR}|45-233-240-79
64230|code|MOV             R6, R1|14-70
64232|code|LDR             R1, =(__stack_chk_guard_ptr - 0x24CD4)|38-73
64234|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
64236|code|SUB             SP, SP, #0x1C|135-176
64238|code|RSB.W           R4, R6, R6,LSL#3|198-235-198-4
64242|code|MOV             R5, R0|5-70
64244|code|ADDS            R0, R4, #1; size|96-28
64246|code|LDR             R3, [R3,R1]; __stack_chk_guard|91-88
64248|code|MOV             R10, R2|146-70
64250|code|STR             R3, [SP,#0x40+var_3C]|1-147
64252|code|LDR             R3, [R3]|27-104
64254|code|STR             R3, [SP,#0x40+var_2C]|5-147
64256|code|BLX             malloc|246-247-66-238
64260|code|MOV             R8, R0|128-70
64262|code|CBZ             R0, loc_FB74|168-179
64264|code|CBZ             R6, loc_FB70|150-179
64266|code|SUBS            R5, #4|4-61
64268|code|ADD             R7, SP, #0x40+var_34|3-175
64270|code|MOV             R4, R0|4-70
64272|code|MOV.W           R9, #0|79-240-0-9
64276|code|MOV.W           R11, #0x20 ; ' '|79-240-32-11
64280|code|B               loc_FB2A|7-224
64282|code|ADD.W           R9, R9, #1|9-241-1-9
64286|code|STRB.W          R11, [R4]|132-248-0-176
64290|code|CMP             R9, R6|177-69
64292|code|ADD.W           R4, R4, #1|4-241-1-4
64296|code|BEQ             loc_FB4C|16-208
64298|code|LDR.W           R0, [R5,#4]!|85-248-4-15
64302|code|MOV             R1, R7|57-70
64304|code|BL              convertWcharToUtf8|255-247-168-254
64308|code|MOV             R2, R0|2-70
64310|code|CMP             R0, #0|0-40
64312|code|BEQ             loc_FB1A|239-208
64314|code|MOV             R0, R4|32-70
64316|code|MOV             R1, R7|57-70
64318|code|BLX             mempcpy|246-247-110-238
64322|code|ADD.W           R9, R9, #1|9-241-1-9
64326|code|CMP             R9, R6|177-69
64328|code|MOV             R4, R0|4-70
64330|code|BNE             loc_FB2A|238-209
64332|code|MOVS            R3, #0|0-35
64334|code|STRB            R3, [R4]|35-112
64336|code|CMP.W           R10, #0|186-241-0-15
64340|code|BEQ             loc_FB5E|3-208
64342|code|RSB.W           R4, R8, R4|200-235-4-4
64346|code|STR.W           R4, [R10]|202-248-0-64
64350|code|LDR             R3, [SP,#0x40+var_3C]|1-155
64352|code|MOV             R0, R8|64-70
64354|code|LDR             R2, [SP,#0x40+var_2C]|5-154
64356|code|LDR             R3, [R3]|27-104
64358|code|CMP             R2, R3|154-66
64360|code|BNE             loc_FB7A|7-209
64362|code|ADD             SP, SP, #0x1C|7-176
64364|code|POP.W           {R4-R11,PC}|189-232-240-143
64368|code|MOV             R4, R0|4-70
64370|code|B               loc_FB4C|235-231
64372|code|BL              logMallocError|249-247-242-250
64376|code|B               loc_FB5E|241-231
64378|code|BLX             __stack_chk_fail|246-247-92-237
64382|data|ALIGN 0x10|0-191
64384|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFAEE|230-81-1-0
64388|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
64392|code|PUSH            {R4,LR}|16-181
64394|code|MOV             R4, R1|12-70
64396|code|BL              convertCharToWchar|0-240-34-249
64400|code|ADDS            R3, R0, #1|67-28
64402|code|BEQ             loc_FB9E|4-208
64404|code|MOV             R1, R4|33-70
64406|code|POP.W           {R4,LR}|189-232-16-64
64410|code|B.W             convertWcharToUtf8|255-247-115-190
64414|code|MOVS            R0, #0|0-32
64416|code|POP             {R4,PC}|16-189
64418|data|ALIGN 4|0-191
64420|code|PUSH            {R3,LR}|8-181
64422|code|BL              convertUtf8ToWchar|255-247-187-254
64426|code|ADDS            R3, R0, #1|67-28
64428|code|BEQ             locret_FBB6|3-208
64430|code|POP.W           {R3,LR}|189-232-8-64
64434|code|B.W             convertWcharToChar|0-240-83-185
64438|code|POP             {R3,PC}|8-189
64440|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFBC0)|26-74
64442|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|27-75
64444|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
64446|code|PUSH            {R4-R7,LR}|240-181
64448|code|SUB             SP, SP, #0x2C|139-176
64450|code|LDR             R5, =(dword_250CC - 0xFBCA)|26-77
64452|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
64454|code|ADD             R5, PC; dword_250CC|125-68
64456|code|LDR             R3, [R4]|35-104
64458|code|LDR             R0, [R5]|40-104
64460|code|STR             R3, [SP,#0x40+var_1C]|9-147
64462|code|CBZ             R0, loc_FBDC|40-177
64464|code|LDR             R2, [SP,#0x40+var_1C]|9-154
64466|code|LDR             R3, [R4]|35-104
64468|code|CMP             R2, R3|154-66
64470|code|BNE             loc_FC1E|34-209
64472|code|ADD             SP, SP, #0x2C ; ','|11-176
64474|code|POP             {R4-R7,PC}|240-189
64476|code|ADD             R6, SP, #0x40+var_2C|5-174
64478|code|LDR             R2, =(aUcsLuCe - 0xFBEA); "UCS-%lu%cE"|20-74
64480|code|MOVS            R1, #0x10|16-33
64482|code|MOV.W           LR, #4|79-240-4-14
64486|code|ADD             R2, PC; "UCS-%lu%cE"|122-68
64488|code|MOV             R3, R1|11-70
64490|code|STR             R2, [SP,#0x40+var_40]|0-146
64492|code|MOV             R0, R6|48-70
64494|code|STR.W           LR, [SP,#0x40+var_3C]|205-248-4-224
64498|code|MOVS            R2, #1|1-34
64500|code|MOVS            R7, #0x4C ; 'L'|76-39
64502|code|STR             R7, [SP,#0x40+var_38]|2-151
64504|code|BLX             __snprintf_chk|246-247-212-237
64508|code|MOV             R0, R6|48-70
64510|code|BLX             __strdup|246-247-104-236
64514|code|STR             R0, [R5]|40-96
64516|code|CBZ             R0, loc_FC18|64-177
64518|code|LDR             R0, =(aWcharCharset - 0xFC0E); "wchar-charset"|11-72
64520|code|MOV             R1, R5|41-70
64522|code|ADD             R0, PC; "wchar-charset"|120-68
64524|code|BL              registerProgramMemory|247-247-204-251
64528|code|LDR             R3, =(dword_250CC - 0xFC16)|9-75
64530|code|ADD             R3, PC; dword_250CC|123-68
64532|code|LDR             R0, [R3]|24-104
64534|code|B               loc_FBD0|219-231
64536|code|BL              logMallocError|249-247-160-250
64540|code|B               loc_FC10|248-231
64542|code|BLX             __stack_chk_fail|246-247-10-237
64546|data|ALIGN 4|0-191
64548|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFBC0|20-81-1-0
64552|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
64556|data|DCD dword_250CC - 0xFBCA|2-85-1-0
64560|data|DCD aUcsLuCe - 0xFBEA; "UCS-%lu%cE"|54-53-0-0
64564|data|DCD aWcharCharset - 0xFC0E; "wchar-charset"|30-53-0-0
64568|data|DCD dword_250CC - 0xFC16|182-84-1-0
64572|code|PUSH            {R3-R5,LR}|56-181
64574|code|MOV             R5, R0|5-70
64576|code|CBZ             R0, loc_FC8C|32-179
64578|code|LDR             R3, =(dword_250CC - 0xFC48)|27-75
64580|code|ADD             R3, PC; dword_250CC|123-68
64582|code|LDR             R4, [R3,#(dword_250D0 - 0x250CC)]|92-104
64584|code|CBZ             R4, loc_FC54|36-177
64586|code|MOV             R0, R4; s1|32-70
64588|code|MOV             R1, R5; s2|41-70
64590|code|BLX             strcmp|246-247-22-238
64594|code|CBZ             R0, loc_FC7C|152-177
64596|code|MOV             R0, R5|40-70
64598|code|BLX             __strdup|246-247-60-236
64602|code|MOV             R5, R0|5-70
64604|code|CBZ             R0, loc_FCA8|32-179
64606|code|BL              registerCharacterSet|0-240-91-249
64610|code|MOV             R4, R0|4-70
64612|code|CBZ             R0, loc_FC9E|216-177
64614|code|LDR             R1, =(dword_250CC - 0xFC6C)|19-73
64616|code|ADD             R1, PC; dword_250CC|121-68
64618|code|LDR             R0, [R1,#(dword_250D0 - 0x250CC)]; ptr|72-104
64620|code|CBZ             R0, loc_FC80|64-177
64622|code|BLX             free|246-247-106-235
64626|code|LDR             R3, =(dword_250CC - 0xFC7A)|17-75
64628|code|MOV             R0, R5|40-70
64630|code|ADD             R3, PC; dword_250CC|123-68
64632|code|STR             R5, [R3,#(dword_250D0 - 0x250CC)]|93-96
64634|code|POP             {R3-R5,PC}|56-189
64636|code|MOV             R0, R4|32-70
64638|code|POP             {R3-R5,PC}|56-189
64640|code|LDR             R0, =(aCurrentCharset - 0xFC88); "current-charset"|14-72
64642|code|ADDS            R1, #4|4-49
64644|code|ADD             R0, PC; "current-charset"|120-68
64646|code|BL              registerProgramMemory|247-247-143-251
64650|code|B               loc_FC72|242-231
64652|code|LDR             R3, =(dword_250CC - 0xFC92)|12-75
64654|code|ADD             R3, PC; dword_250CC|123-68
64656|code|LDR             R0, [R3,#(dword_250D0 - 0x250CC)]|88-104
64658|code|CMP             R0, #0|0-40
64660|code|BNE             locret_FC7E|243-209
64662|code|BL              getLocaleCharset|0-240-37-249
64666|code|MOV             R5, R0|5-70
64668|code|B               loc_FC54|218-231
64670|code|MOV             R0, R5; ptr|40-70
64672|code|BLX             free|246-247-80-235
64676|code|MOV             R0, R4|32-70
64678|code|POP             {R3-R5,PC}|56-189
64680|code|BL              logMallocError|249-247-88-250
64684|code|MOV             R0, R5|40-70
64686|code|POP             {R3-R5,PC}|56-189
64688|data|DCD dword_250CC - 0xFC48|132-84-1-0
64692|data|DCD dword_250CC - 0xFC6C|96-84-1-0
64696|data|DCD dword_250CC - 0xFC7A|82-84-1-0
64700|data|DCD aCurrentCharset - 0xFC88; "current-charset"|180-52-0-0
64704|data|DCD dword_250CC - 0xFC92|58-84-1-0
64708|code|MOVS            R0, #0; s2|0-32
64710|code|B.W             setCharset|255-247-185-191
64714|data|ALIGN 4|0-191
64716|code|LDR             R3, =(dword_250CC - 0xFCD4)|7-75
64718|code|PUSH            {R4,LR}|16-181
64720|code|ADD             R3, PC; dword_250CC|123-68
64722|code|MOV             R4, R0|4-70
64724|code|MOV             R0, R3|24-70
64726|code|ADDS            R0, #8|8-48
64728|code|BL              getLockDescriptor|255-247-62-253
64732|code|CBZ             R0, locret_FCE8|32-177
64734|code|MOV             R1, R4|33-70
64736|code|POP.W           {R4,LR}|189-232-16-64
64740|code|B.W             obtainLock|255-247-26-189
64744|code|POP             {R4,PC}|16-189
64746|data|ALIGN 4|0-191
64748|data|DCD dword_250CC - 0xFCD4|248-83-1-0
64752|code|LDR             R0, =(dword_250CC - 0xFCF8)|5-72
64754|code|PUSH            {R3,LR}|8-181
64756|code|ADD             R0, PC; dword_250CC|120-68
64758|code|ADDS            R0, #8|8-48
64760|code|BL              getLockDescriptor|255-247-46-253
64764|code|CBZ             R0, locret_FD06|24-177
64766|code|POP.W           {R3,LR}|189-232-8-64
64770|code|B.W             releaseLock|255-247-39-189
64774|code|POP             {R3,PC}|8-189
64776|data|DCD dword_250CC - 0xFCF8|212-83-1-0
64780|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFD14)|24-74
64782|code|PUSH            {R4-R7,LR}|240-181
64784|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
64786|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|24-76
64788|code|SUB             SP, SP, #0x1C|135-176
64790|code|ADD             R6, SP, #0x30+var_24|3-174
64792|code|MOV             R7, R0|7-70
64794|code|STR             R1, [SP,#0x30+var_2C]|1-145
64796|code|MOV             R0, R1|8-70
64798|code|LDR             R5, [R2,R4]; __stack_chk_guard|21-89
64800|code|MOV             R1, R6|49-70
64802|code|LDR             R3, [R5]|43-104
64804|code|STR             R3, [SP,#0x30+var_1C]|5-147
64806|code|BL              convertWcharToUtf8|255-247-173-253
64810|code|MOV             R4, R0|4-70
64812|code|CBZ             R0, loc_FD58|160-177
64814|code|MOV             R0, R6; ptr|48-70
64816|code|MOV             R3, R7; s|59-70
64818|code|MOVS            R1, #1; size|1-33
64820|code|MOV             R2, R4; n|34-70
64822|code|BLX             fwrite|246-247-22-237
64826|code|CMP             R0, R4|160-66
64828|code|IT EQ|8-191
64830|code|MOVEQ           R0, #1|1-32
64832|code|BEQ             loc_FD4C|4-208
64834|code|LDR             R0, =(aFwrite_0 - 0xFD48); "fwrite"|13-72
64836|code|ADD             R0, PC; "fwrite"|120-68
64838|code|BL              logSystemError|249-247-255-249
64842|code|MOVS            R0, #0|0-32
64844|code|LDR             R2, [SP,#0x30+var_1C]|5-154
64846|code|LDR             R3, [R5]|43-104
64848|code|CMP             R2, R3|154-66
64850|code|BNE             loc_FD6A|10-209
64852|code|ADD             SP, SP, #0x1C|7-176
64854|code|POP             {R4-R7,PC}|240-189
64856|code|LDR             R1, =(aInvalidUnicode - 0xFD64); "invalid Unicode character"|8-73
64858|code|MOVS            R0, #3|3-32
64860|code|ADD             R2, SP, #0x30+var_2C|1-170
64862|code|MOVS            R3, #4|4-35
64864|code|ADD             R1, PC; "invalid Unicode character"|121-68
64866|code|BL              logBytes|249-247-143-249
64870|code|MOV             R0, R4|32-70
64872|code|B               loc_FD4C|240-231
64874|code|BLX             __stack_chk_fail|246-247-100-236
64878|data|ALIGN 0x10|0-191
64880|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFD14|192-79-1-0
64884|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
64888|data|DCD aFwrite_0 - 0xFD48; "fwrite"|4-52-0-0
64892|data|DCD aInvalidUnicode - 0xFD64; "invalid Unicode character"|240-51-0-0
64896|code|PUSH            {R4-R6,LR}|112-181
64898|code|ADD.W           R5, R1, R2,LSL#2|1-235-130-5
64902|code|CMP             R1, R5|169-66
64904|code|MOV             R4, R1|12-70
64906|code|MOV             R6, R0|6-70
64908|code|BCC             loc_FD94|2-211
64910|code|B               loc_FDA4|9-224
64912|code|CMP             R5, R4|165-66
64914|code|BLS             loc_FDA4|7-217
64916|code|MOV             R0, R6|48-70
64918|code|LDR.W           R1, [R4],#4|84-248-4-27
64922|code|BL              writeUtf8Character|255-247-183-255
64926|code|CMP             R0, #0|0-40
64928|code|BNE             loc_FD90|246-209
64930|code|POP             {R4-R6,PC}|112-189
64932|code|MOVS            R0, #1|1-32
64934|code|POP             {R4-R6,PC}|112-189
64936|code|PUSH            {R4-R6,LR}|112-181
64938|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
64942|code|LDR             R4, =(off_24A88 - 0xFDB4)|8-76
64944|code|ADD             R4, PC; off_24A88|124-68
64946|code|ADD.W           R5, R4, #8|4-241-8-5
64950|code|LDR.W           R3, [R4],#4|84-248-4-59
64954|code|LDR             R0, [R3]; cd|24-104
64956|code|ADDS            R3, R0, #1|67-28
64958|code|BEQ             loc_FDCA|4-208
64960|code|BLX             iconv_close|246-247-172-236
64964|code|LDR.W           R3, [R4,#-4]|84-248-4-60
64968|code|STR             R6, [R3]|30-96
64970|code|CMP             R4, R5|172-66
64972|code|BCC             loc_FDB6|243-211
64974|code|POP             {R4-R6,PC}|112-189
64976|data|DCD off_24A88 - 0xFDB4|212-76-1-0
64980|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFDDE)|29-74
64982|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|30-75
64984|code|PUSH            {R4-R6,LR}|112-181
64986|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
64988|code|SUB             SP, SP, #0x28|138-176
64990|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
64994|code|STRB.W          R0, [SP,#0x38+var_29]|141-248-15-0
64998|code|LDR             R4, [R2,R3]; __stack_chk_guard|212-88
65000|code|LDR             R3, [R4]|35-104
65002|code|STR             R3, [SP,#0x38+var_14]|9-147
65004|code|BL              getCharset|255-247-106-255
65008|code|CBZ             R0, loc_FE20|176-177
65010|code|LDR             R0, =(dword_25020 - 0xFDFE)|24-72
65012|code|ADD             R3, SP, #0x38+var_18|8-171
65014|code|ADD             R1, SP, #0x38+inbuf; inbuf|4-169
65016|code|STR             R3, [SP,#0x38+outbytesleft]; outbytesleft|0-147
65018|code|ADD             R0, PC; dword_25020|120-68
65020|code|ADD             R3, SP, #0x38+outbuf; outbuf|7-171
65022|code|ADD             R2, SP, #0x38+inbytesleft; inbytesleft|5-170
65024|code|ADD.W           R5, SP, #0x38+var_29|13-241-15-5
65028|code|LDR             R0, [R0]; cd|0-104
65030|code|MOVS            R6, #1|1-38
65032|code|STR             R5, [SP,#0x38+inbuf]|4-149
65034|code|ADD             R5, SP, #0x38+var_20|6-173
65036|code|STR             R6, [SP,#0x38+inbytesleft]|5-150
65038|code|STR             R5, [SP,#0x38+outbuf]|7-149
65040|code|MOVS            R5, #4|4-37
65042|code|STR             R5, [SP,#0x38+var_18]|8-149
65044|code|BLX             iconv|246-247-56-237
65048|code|ADDS            R3, R0, #1|67-28
65050|code|MOV             R5, R0|5-70
65052|code|BEQ             loc_FE2E|7-208
65054|code|LDR             R5, [SP,#0x38+var_20]|6-157
65056|code|LDR             R2, [SP,#0x38+var_14]|9-154
65058|code|MOV             R0, R5|40-70
65060|code|LDR             R3, [R4]|35-104
65062|code|CMP             R2, R3|154-66
65064|code|BNE             loc_FE46|13-209
65066|code|ADD             SP, SP, #0x28 ; '('|10-176
65068|code|POP             {R4-R6,PC}|112-189
65070|code|BLX             __errno_location|246-247-50-237
65074|code|LDR             R0, [R0]; errnum|0-104
65076|code|BLX             strerror|246-247-178-234
65080|code|LDR             R1, =(aIconvCharWchar - 0xFE3E); "iconv (char -> wchar_t) error: %s"|7-73
65082|code|ADD             R1, PC; "iconv (char -> wchar_t) error: %s"|121-68
65084|code|MOV             R2, R0|2-70
65086|code|MOVS            R0, #7|7-32
65088|code|BL              logMessage|249-247-0-249
65092|code|B               loc_FE20|236-231
65094|code|BLX             __stack_chk_fail|246-247-246-235
65098|data|ALIGN 4|0-191
65100|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFDDE|246-78-1-0
65104|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
65108|data|DCD dword_25020 - 0xFDFE|34-82-1-0
65112|data|DCD aIconvCharWchar - 0xFE3E; "iconv (char -> wchar_t) error: %s"|50-51-0-0
65116|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFE66)|29-74
65118|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|30-75
65120|code|PUSH            {R4-R6,LR}|112-181
65122|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
65124|code|SUB             SP, SP, #0x28|138-176
65126|code|STR             R0, [SP,#0x38+var_2C]|3-144
65128|code|LDR             R5, [R2,R3]; __stack_chk_guard|213-88
65130|code|LDR             R3, [R5]|43-104
65132|code|STR             R3, [SP,#0x38+var_14]|9-147
65134|code|BL              getCharset|255-247-41-255
65138|code|CBZ             R0, loc_FEB0|232-177
65140|code|LDR             R0, =(dword_25020 - 0xFE80)|25-72
65142|code|ADD             R3, SP, #0x38+var_18|8-171
65144|code|ADD             R1, SP, #0x38+inbuf; inbuf|5-169
65146|code|STR             R3, [SP,#0x38+outbytesleft]; outbytesleft|0-147
65148|code|ADD             R0, PC; dword_25020|120-68
65150|code|ADD             R3, SP, #0x38+outbuf; outbuf|7-171
65152|code|ADD             R2, SP, #0x38+inbytesleft; inbytesleft|6-170
65154|code|ADD             R4, SP, #0x38+var_2C|3-172
65156|code|LDR             R0, [R0,#(dword_25024 - 0x25020)]; cd|64-104
65158|code|MOVS            R6, #4|4-38
65160|code|STR             R4, [SP,#0x38+inbuf]|5-148
65162|code|ADD.W           R4, SP, #0x38+var_25|13-241-19-4
65166|code|STR             R6, [SP,#0x38+inbytesleft]|6-150
65168|code|STR             R4, [SP,#0x38+outbuf]|7-148
65170|code|MOVS            R4, #1|1-36
65172|code|STR             R4, [SP,#0x38+var_18]|8-148
65174|code|BLX             iconv|246-247-248-236
65178|code|ADDS            R3, R0, #1|67-28
65180|code|MOV             R4, R0|4-70
65182|code|BEQ             loc_FEB6|10-208
65184|code|LDRB.W          R0, [SP,#0x38+var_25]|157-248-19-0
65188|code|LDR             R2, [SP,#0x38+var_14]|9-154
65190|code|LDR             R3, [R5]|43-104
65192|code|CMP             R2, R3|154-66
65194|code|BNE             loc_FED0|17-209
65196|code|ADD             SP, SP, #0x28 ; '('|10-176
65198|code|POP             {R4-R6,PC}|112-189
65200|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
65204|code|B               loc_FEA4|246-231
65206|code|BLX             __errno_location|246-247-238-236
65210|code|LDR             R0, [R0]; errnum|0-104
65212|code|BLX             strerror|246-247-110-234
65216|code|LDR             R1, =(aIconvWcharTUns - 0xFEC6); "iconv (wchar_t -> unsigned char) error:"...|7-73
65218|code|ADD             R1, PC; "iconv (wchar_t -> unsigned char) error:"...|121-68
65220|code|MOV             R2, R0|2-70
65222|code|MOVS            R0, #7|7-32
65224|code|BL              logMessage|249-247-188-248
65228|code|MOV             R0, R4|32-70
65230|code|B               loc_FEA4|233-231
65232|code|BLX             __stack_chk_fail|246-247-176-235
65236|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFE66|110-78-1-0
65240|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
65244|data|DCD dword_25020 - 0xFE80|160-81-1-0
65248|data|DCD aIconvWcharTUns - 0xFEC6; "iconv (wchar_t -> unsigned char) error:"...|206-50-0-0
65252|code|LDR             R1, =(aS_0+4 - 0xFEEE); ""|9-73
65254|code|MOVS            R0, #6; category|6-32
65256|code|PUSH            {R4,LR}|16-181
65258|code|ADD             R1, PC; "" ; locale|121-68
65260|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xFEF2)|8-76
65262|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
65264|code|BLX             setlocale|246-247-8-236
65268|code|CBZ             R0, loc_FEFC|16-177
65270|code|BL              isPosixLocale|255-247-85-252
65274|code|CBZ             R0, loc_FF02|16-177
65276|code|LDR             R3, =(defaultCharset_ptr - 0x24CD4)|5-75
65278|code|LDR             R0, [R4,R3]; defaultCharset_ptr ...|224-88
65280|code|POP             {R4,PC}|16-189
65282|code|MOVS            R0, #0xE; item|14-32
65284|code|POP.W           {R4,LR}|189-232-16-64
65288|code|B.W             j_nl_langinfo|246-247-114-186
65292|data|DCD aS_0+4 - 0xFEEE; ""|214-24-0-0
65296|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFEF2|226-77-1-0
65300|data|DCD defaultCharset_ptr - 0x24CD4|8-3-0-0
65304|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xFF20)|51-75
65306|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|52-74
65308|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
65310|code|PUSH.W          {R4-R8,LR}|45-233-240-65
65314|code|SUB             SP, SP, #0x28|138-176
65316|code|LDR             R7, [R3,R2]; __stack_chk_guard|159-88
65318|code|MOV             R8, R0|128-70
65320|code|ADD             R6, SP, #0x40+var_3C|1-174
65322|code|ADD             R5, SP, #0x40+var_1C|9-173
65324|code|LDR             R3, [R7]|59-104
65326|code|MOV             R4, R6|52-70
65328|code|STR             R3, [SP,#0x40+var_1C]|9-147
65330|code|BL              getWcharCharset|255-247-65-254
65334|code|LDR             R3, =(dword_25020 - 0xFF42)|46-75
65336|code|MOV             R1, R8; fromcode|65-70
65338|code|STR.W           R8, [SP,#0x40+var_38]|205-248-8-128
65342|code|ADD             R3, PC; dword_25020|123-68
65344|code|STR.W           R8, [SP,#0x40+var_24]|205-248-28-128
65348|code|ADD.W           LR, R3, #4|3-241-4-14
65352|code|STR             R3, [SP,#0x40+var_3C]|1-147
65354|code|STR.W           LR, [SP,#0x40+var_2C]|205-248-20-224
65358|code|MOV             R2, R0|2-70
65360|code|STR             R0, [SP,#0x40+var_34]|3-144
65362|code|STR             R2, [SP,#0x40+var_28]|6-146
65364|code|MOVS            R2, #0|0-34
65366|code|STR             R2, [SP,#0x40+var_30]|4-146
65368|code|STR             R2, [SP,#0x40+var_20]|8-146
65370|code|BLX             iconv_open|246-247-120-236
65374|code|STR             R0, [R4,#0xC]|224-96
65376|code|ADDS            R0, #1|1-48
65378|code|BEQ             loc_FF78|9-208
65380|code|ADDS            R4, #0x10|16-52
65382|code|CMP             R4, R5|172-66
65384|code|BCS             loc_FF94|20-210
65386|code|LDR             R0, [R4,#8]; tocode|160-104
65388|code|LDR             R1, [R4,#4]; fromcode|97-104
65390|code|BLX             iconv_open|246-247-110-236
65394|code|STR             R0, [R4,#0xC]|224-96
65396|code|ADDS            R0, #1|1-48
65398|code|BNE             loc_FF64|245-209
65400|code|LDR             R0, =(aIconvOpen_0 - 0xFF7E); "iconv_open"|30-72
65402|code|ADD             R0, PC; "iconv_open"|120-68
65404|code|BL              logSystemError|249-247-228-248
65408|code|CMP             R4, R6|180-66
65410|code|BLS             loc_FF90|5-217
65412|code|SUBS            R4, #0x10|16-60
65414|code|LDR             R0, [R4,#0xC]; cd|224-104
65416|code|BLX             iconv_close|246-247-200-235
65420|code|CMP             R4, R6|180-66
65422|code|BHI             loc_FF84|249-216
65424|code|MOVS            R0, #0|0-32
65426|code|B               loc_FFC6|24-224
65428|code|CMP             R4, R6|180-66
65430|code|IT HI|136-191
65432|code|MOVHI.W         R8, #0|79-240-0-8
65436|code|BLS             loc_FFC4|18-217
65438|code|LDR.W           R5, [R4,#-0x10]|84-248-16-92
65442|code|LDR             R0, [R5]; cd|40-104
65444|code|ADDS            R3, R0, #1|67-28
65446|code|IT EQ|8-191
65448|code|MOVEQ.W         R8, #1|79-240-1-8
65452|code|BEQ             loc_FFB2|1-208
65454|code|BLX             iconv_close|246-247-182-235
65458|code|LDR.W           R3, [R4,#-4]|84-248-4-60
65462|code|SUBS            R4, #0x10|16-60
65464|code|CMP             R6, R4|166-66
65466|code|STR             R3, [R5]|43-96
65468|code|BCC             loc_FF9E|239-211
65470|code|CMP.W           R8, #0|184-241-0-15
65474|code|BNE             loc_FFD4|7-209
65476|code|MOVS            R0, #1|1-32
65478|code|LDR             R2, [SP,#0x40+var_1C]|9-154
65480|code|LDR             R3, [R7]|59-104
65482|code|CMP             R2, R3|154-66
65484|code|BNE             loc_FFE4|10-209
65486|code|ADD             SP, SP, #0x28 ; '('|10-176
65488|code|POP.W           {R4-R8,PC}|189-232-240-129
65492|code|LDR             R0, =(aCharsetIconv - 0xFFDE); "charset-iconv"|8-72
65494|code|MOVS            R2, #0|0-34
65496|code|LDR             R1, =(sub_FDA8+1 - 0xFFE0)|8-73
65498|code|ADD             R0, PC; "charset-iconv"|120-68
65500|code|ADD             R1, PC; sub_FDA8|121-68
65502|code|BL              onProgramExit|247-247-191-249
65506|code|B               loc_FFC4|239-231
65508|code|BLX             __stack_chk_fail|246-247-38-235
65512|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFF20|180-77-1-0
65516|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
65520|data|DCD dword_25020 - 0xFF42|222-80-1-0
65524|data|DCD aIconvOpen_0 - 0xFF7E; "iconv_open"|66-50-0-0
65528|data|DCD aCharsetIconv - 0xFFDE; "charset-iconv"|238-49-0-0
65532|data|DCD sub_FDA8+1 - 0xFFE0|201-253-255-255
65536|code|LDR             R2, [R1]|10-104
65538|code|UBFX.W          R3, R0, #0x18, #7|192-243-6-99
65542|code|LDR             R2, [R2]|18-104
65544|code|LDR.W           R3, [R2,R3,LSL#2]|82-248-35-48
65548|code|CBZ             R3, loc_10060|67-179
65550|code|ADDS            R3, R2, R3|211-24
65552|code|BEQ             loc_10060|38-208
65554|code|PUSH            {R4-R7}|240-180
65556|code|UBFX.W          R4, R0, #0x10, #8|192-243-7-68
65560|code|LDR.W           R3, [R3,R4,LSL#2]|83-248-36-48
65564|code|CBZ             R3, loc_1005A|235-177
65566|code|ADDS            R3, R2, R3|211-24
65568|code|BEQ             loc_1005A|27-208
65570|code|UBFX.W          R4, R0, #8, #8|192-243-7-36
65574|code|LDR.W           R3, [R3,R4,LSL#2]|83-248-36-48
65578|code|CBZ             R3, loc_1005A|179-177
65580|code|ADDS            R3, R2, R3|211-24
65582|code|BEQ             loc_1005A|20-208
65584|code|UXTB            R0, R0|192-178
65586|code|MOVS            R7, #0|0-39
65588|code|AND.W           R2, R0, #7|0-240-7-2
65592|code|MOVS            R5, #0|0-37
65594|code|ADD.W           R6, R3, R0,LSR#3|3-235-208-6
65598|code|LDRB.W          R6, [R6,#0x100]|150-248-0-97
65602|code|LSR.W           R4, R6, R2|38-250-2-244
65606|code|AND.W           R6, R4, #1|4-240-1-6
65610|code|ORRS.W          R2, R6, R7|86-234-7-2
65614|code|BEQ             loc_10064|9-208
65616|code|LDRB            R3, [R3,R0]|27-92
65618|code|MOVS            R0, #1|1-32
65620|code|POP             {R4-R7}|240-188
65622|code|STRB            R3, [R1,#4]|11-113
65624|code|BX              LR|112-71
65626|code|MOV             R0, R3|24-70
65628|code|POP             {R4-R7}|240-188
65630|code|BX              LR|112-71
65632|code|MOV             R0, R3|24-70
65634|code|BX              LR|112-71
65636|code|MOV             R0, R5|40-70
65638|code|B               loc_1005C|249-231
65640|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x10070)|46-75
65642|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|47-74
65644|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
65646|code|PUSH            {R4-R7,LR}|240-181
65648|code|BIC.W           R5, R1, #0xFF|33-240-255-5
65652|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
65654|code|SUB             SP, SP, #0x14|133-176
65656|code|CMP.W           R5, #0x2800|181-245-32-95
65660|code|IT EQ|8-191
65662|code|UXTBEQ          R0, R1|200-178
65664|code|LDR             R3, [R4]|35-104
65666|code|STR             R3, [SP,#0x28+var_1C]|3-147
65668|code|BEQ             loc_100E0|44-208
65670|code|CMP.W           R5, #0xF000|181-245-112-79
65674|code|MOV             R6, R0|6-70
65676|code|BNE             loc_1009A|5-209
65678|code|UXTB            R0, R1|200-178
65680|code|BL              convertCharToWchar|255-247-160-254
65684|code|ADDS            R3, R0, #1|67-28
65686|code|MOV             R1, R0|1-70
65688|code|BEQ             loc_100B0|10-208
65690|code|MOV             R0, R1|8-70
65692|code|LDR             R1, =(loc_10000+1 - 0x100A6)|35-73
65694|code|ADD             R2, SP, #0x28+var_24|1-170
65696|code|MOVS            R3, #0|0-35
65698|code|ADD             R1, PC; loc_10000|121-68
65700|code|STR             R6, [SP,#0x28+var_24]|1-150
65702|code|STRB.W          R3, [SP,#0x28+var_20]|141-248-8-48
65706|code|BL              handleBestCharacter|255-247-251-250
65710|code|CBNZ            R0, loc_100EC|232-185
65712|code|LDR             R3, [R6]|51-104
65714|code|LDR             R2, [R3]|26-104
65716|code|CBZ             R2, loc_100F8|2-179
65718|code|ADDS            R5, R3, R2|157-24
65720|code|BEQ             loc_100F8|30-208
65722|code|LDR             R2, [R3,R2]|154-88
65724|code|CBZ             R2, loc_100F4|210-177
65726|code|ADDS            R2, R3, R2|154-24
65728|code|BEQ             loc_100F2|23-208
65730|code|LDR.W           R2, [R2,#0x3FC]|210-248-252-35
65734|code|CBZ             R2, loc_100F2|162-177
65736|code|ADDS            R2, R3, R2|154-24
65738|code|BEQ             loc_100F2|18-208
65740|code|LDRB.W          R6, [R2,#0x11F]|146-248-31-97
65744|code|MOVS            R1, #0|0-33
65746|code|LSRS            R0, R6, #5|112-9
65748|code|AND.W           R0, R0, #1|0-240-1-0
65752|code|ORRS            R1, R0|1-67
65754|code|BEQ             loc_100F2|10-208
65756|code|LDRB.W          R0, [R2,#0xFD]|146-248-253-0
65760|code|LDR             R2, [SP,#0x28+var_1C]|3-154
65762|code|LDR             R3, [R4]|35-104
65764|code|CMP             R2, R3|154-66
65766|code|BNE             loc_1011E|26-209
65768|code|ADD             SP, SP, #0x14|5-176
65770|code|POP             {R4-R7,PC}|240-189
65772|code|LDRB.W          R0, [SP,#0x28+var_20]|157-248-8-0
65776|code|B               loc_100E0|246-231
65778|code|CBZ             R5, loc_100F8|13-177
65780|code|LDR             R2, [R5]|42-104
65782|code|CBNZ            R2, loc_100FC|10-185
65784|code|MOVS            R0, #0xFF|255-32
65786|code|B               loc_100E0|241-231
65788|code|CMN             R3, R2|211-66
65790|code|BEQ             loc_100F8|251-208
65792|code|LDR             R2, [R3,R2]|154-88
65794|code|CMP             R2, #0|0-42
65796|code|BEQ             loc_100F8|248-208
65798|code|ADDS            R3, R3, R2|155-24
65800|code|BEQ             loc_100F8|246-208
65802|code|LDRB.W          R6, [R3,#0x107]|147-248-7-97
65806|code|MOVS            R1, #0|0-33
65808|code|LSRS            R0, R6, #7|240-9
65810|code|ORRS.W          R2, R0, R1|80-234-1-2
65814|code|BEQ             loc_100F8|239-208
65816|code|LDRB.W          R0, [R3,#0x3F]|147-248-63-0
65820|code|B               loc_100E0|224-231
65822|code|BLX             __stack_chk_fail|246-247-138-234
65826|data|ALIGN 4|0-191
65828|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10070|100-76-1-0
65832|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
65836|data|DCD loc_10000+1 - 0x100A6|91-255-255-255
65840|code|PUSH            {R4-R7}|240-180
65842|code|AND.W           R4, R1, #7|1-240-7-4
65846|code|LDR             R0, [R0]|0-104
65848|code|MOVS            R3, #0|0-35
65850|code|ADD.W           R5, R0, R1,LSR#3|0-235-209-5
65854|code|LDRB.W          R6, [R5,#0x600]|149-248-0-102
65858|code|LSR.W           R2, R6, R4|38-250-4-242
65862|code|AND.W           R2, R2, #1|2-240-1-2
65866|code|ORRS            R3, R2|19-67
65868|code|ITET NE|22-191
65870|code|ADDNE           R1, #0x80|128-49
65872|code|MOVEQW          R0, #0xFFFD|79-246-253-112
65876|code|LDRNE.W         R0, [R0,R1,LSL#2]|80-248-33-0
65880|code|POP             {R4-R7}|240-188
65882|code|BX              LR|112-71
65884|code|PUSH            {R3-R7,LR}|248-181
65886|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x10164)|32-77
65888|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
65890|code|CMP             R1, #0|0-41
65892|code|BEQ             loc_101D8|56-208
65894|code|MOV             R7, R1|15-70
65896|code|BL              makeTextTablePath|0-240-46-250
65900|code|MOV             R4, R0|4-70
65902|code|CBZ             R0, loc_101BA|32-179
65904|code|LDR             R1, =(aCompilingTextT - 0x1017A); "compiling text table: %s"|28-73
65906|code|MOVS            R0, #7|7-32
65908|code|MOV             R2, R4|34-70
65910|code|ADD             R1, PC; "compiling text table: %s"|121-68
65912|code|BL              logMessage|248-247-100-255
65916|code|MOV             R0, R4|32-70
65918|code|BL              compileTextTable|0-240-91-252
65922|code|MOV             R6, R0|6-70
65924|code|CBZ             R0, loc_1019C|80-177
65926|code|MOV             R0, R4; ptr|32-70
65928|code|BLX             free|246-247-220-232
65932|code|LDR             R3, =(textTable_ptr - 0x24CD4)|22-75
65934|code|LDR             R3, [R5,R3]; textTable|235-88
65936|code|LDR             R0, [R3]; off_25028|24-104
65938|code|STR             R6, [R3]; off_25028|30-96
65940|code|BL              destroyTextTable|0-240-4-250
65944|code|MOVS            R0, #1|1-32
65946|code|POP             {R3-R7,PC}|248-189
65948|code|LDR             R1, =(aCannotCompileT - 0x101A4); "cannot compile text table"|19-73
65950|code|MOVS            R2, #5; category|5-34
65952|code|ADD             R1, PC; "cannot compile text table"|121-68
65954|code|BLX             dcgettext|246-247-102-234
65958|code|LDR             R1, =(aSS - 0x101AE); "%s: %s"|18-73
65960|code|MOV             R3, R4|35-70
65962|code|ADD             R1, PC; "%s: %s"|121-68
65964|code|MOV             R2, R0|2-70
65966|code|MOVS            R0, #3|3-32
65968|code|BL              logMessage|248-247-72-255
65972|code|MOV             R0, R4; ptr|32-70
65974|code|BLX             free|246-247-198-232
65978|code|LDR             R1, =(aCannotLoadText - 0x101C4); "cannot load text table"|14-73
65980|code|MOVS            R2, #5; category|5-34
65982|code|MOVS            R0, #0; domainname|0-32
65984|code|ADD             R1, PC; "cannot load text table"|121-68
65986|code|BLX             dcgettext|246-247-86-234
65990|code|LDR             R1, =(aSS - 0x101CE); "%s: %s"|12-73
65992|code|MOV             R3, R7|59-70
65994|code|ADD             R1, PC; "%s: %s"|121-68
65996|code|MOV             R2, R0|2-70
65998|code|MOVS            R0, #3|3-32
66000|code|BL              logMessage|248-247-56-255
66004|code|MOVS            R0, #0|0-32
66006|code|POP             {R3-R7,PC}|248-189
66008|code|LDR             R6, =(off_25028 - 0x101DE)|8-78
66010|code|ADD             R6, PC; off_25028|126-68
66012|code|B               loc_1018C|214-231
66014|data|ALIGN 0x10|0-191
66016|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10164|112-75-1-0
66020|data|DCD aCompilingTextT - 0x1017A; "compiling text table: %s"|226-65-0-0
66024|data|DCD textTable_ptr - 0x24CD4|176-2-0-0
66028|data|DCD aCannotCompileT - 0x101A4; "cannot compile text table"|212-65-0-0
66032|data|DCD aSS - 0x101AE; "%s: %s"|26-32-0-0
66036|data|DCD aCannotLoadText - 0x101C4; "cannot load text table"|208-65-0-0
66040|data|DCD aSS - 0x101CE; "%s: %s"|250-31-0-0
66044|data|DCD off_25028 - 0x101DE|74-78-1-0
66048|code|LDR             R0, [R0]|0-104
66050|code|B.W             getDataItem|0-240-139-188
66054|data|ALIGN 4|0-191
66056|code|MOVS            R1, #0|0-33
66058|code|B.W             getTextTableItem|255-247-249-191
66062|data|ALIGN 0x10|0-191
66064|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1021A)|67-75
66066|code|PUSH.W          {R4-R9,LR}|45-233-240-67
66070|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
66072|code|LDR             R4, =(__stack_chk_guard_ptr - 0x24CD4)|66-76
66074|code|SUB             SP, SP, #0xC|131-176
66076|code|MOVS            R5, R2|21-28
66078|code|UBFX.W          R8, R1, #0x18, #7|193-243-6-104
66082|code|MOV             R6, R1|14-70
66084|code|MOV             R7, R0|7-70
66086|code|LDR.W           R9, [R3,R4]; __stack_chk_guard|83-248-4-144
66090|code|IT NE|24-191
66092|code|MOVNE           R5, #1|1-37
66094|code|LDR.W           R3, [R9]|217-248-0-48
66098|code|STR             R3, [SP,#0x28+var_24]|1-147
66100|code|BL              getTextTableHeader|255-247-232-255
66104|code|LDR.W           R3, [R0,R8,LSL#2]|80-248-40-48
66108|code|CMP             R3, #0|0-43
66110|code|ITE NE|20-191
66112|code|MOVNE           R2, #0|0-34
66114|code|ANDEQ.W         R2, R5, #1|5-240-1-2
66118|code|STR             R3, [SP,#0x28+var_28]|0-147
66120|code|MOV             R4, R3|28-70
66122|code|CMP             R2, #0|0-42
66124|code|BNE             loc_102B4|50-209
66126|code|CBNZ            R4, loc_10262|68-185
66128|code|MOVS            R0, #0|0-32
66130|code|LDR             R2, [SP,#0x28+var_24]|1-154
66132|code|LDR.W           R3, [R9]|217-248-0-48
66136|code|CMP             R2, R3|154-66
66138|code|BNE             loc_1031C|95-209
66140|code|ADD             SP, SP, #0xC|3-176
66142|code|POP.W           {R4-R9,PC}|189-232-240-131
66146|code|MOV             R1, R4|33-70
66148|code|LDR             R0, [R7]|56-104
66150|code|BL              getDataItem|0-240-89-252
66154|code|UBFX.W          R8, R6, #0x10, #8|198-243-7-72
66158|code|LDR.W           R1, [R0,R8,LSL#2]|80-248-40-16
66162|code|CMP             R1, #0|0-41
66164|code|ITE NE|20-191
66166|code|MOVNE           R3, #0|0-35
66168|code|ANDEQ.W         R3, R5, #1|5-240-1-3
66172|code|STR             R1, [SP,#0x28+var_28]|0-145
66174|code|CMP             R3, #0|0-43
66176|code|BNE             loc_102FA|59-209
66178|code|MOV             R4, R1|12-70
66180|code|CMP             R4, #0|0-44
66182|code|BEQ             loc_10250|227-208
66184|code|MOV             R1, R4|33-70
66186|code|LDR             R0, [R7]|56-104
66188|code|BL              getDataItem|0-240-70-252
66192|code|UBFX.W          R6, R6, #8, #8|198-243-7-38
66196|code|LDR.W           R3, [R0,R6,LSL#2]|80-248-38-48
66200|code|CMP             R3, #0|0-43
66202|code|ITE NE|20-191
66204|code|MOVNE           R5, #0|0-37
66206|code|ANDEQ.W         R5, R5, #1|5-240-1-5
66210|code|STR             R3, [SP,#0x28+var_28]|0-147
66212|code|MOV             R1, R3|25-70
66214|code|CBNZ            R5, loc_102D8|189-185
66216|code|CMP             R1, #0|0-41
66218|code|BEQ             loc_10250|209-208
66220|code|LDR             R0, [R7]|56-104
66222|code|BL              getDataItem|0-240-53-252
66226|code|B               loc_10252|206-231
66228|code|LDR             R0, [R7]|56-104
66230|code|MOV             R1, SP|105-70
66232|code|MOV.W           R2, #0x400|79-244-128-98
66236|code|MOVS            R3, #4|4-35
66238|code|BL              allocateDataItem|0-240-245-251
66242|code|CMP             R0, #0|0-40
66244|code|BEQ             loc_10252|197-208
66246|code|MOV             R0, R7|56-70
66248|code|BL              getTextTableHeader|255-247-158-255
66252|code|LDR             R4, [SP,#0x28+var_28]|0-156
66254|code|STR.W           R4, [R0,R8,LSL#2]|64-248-40-64
66258|code|CMP             R4, #0|0-44
66260|code|BEQ             loc_10250|188-208
66262|code|B               loc_10262|196-231
66264|code|LDR             R0, [R7]|56-104
66266|code|MOV             R1, SP|105-70
66268|code|MOV.W           R2, #0x120|79-244-144-114
66272|code|MOVS            R3, #1|1-35
66274|code|BL              allocateDataItem|0-240-227-251
66278|code|CMP             R0, #0|0-40
66280|code|BEQ             loc_10250|178-208
66282|code|MOV             R1, R4|33-70
66284|code|LDR             R0, [R7]|56-104
66286|code|BL              getDataItem|0-240-21-252
66290|code|LDR             R1, [SP,#0x28+var_28]|0-153
66292|code|STR.W           R1, [R0,R6,LSL#2]|64-248-38-16
66296|code|B               loc_102A8|214-231
66298|code|LDR             R0, [R7]|56-104
66300|code|MOV             R1, SP|105-70
66302|code|MOV.W           R2, #0x400|79-244-128-98
66306|code|MOVS            R3, #4|4-35
66308|code|BL              allocateDataItem|0-240-210-251
66312|code|CMP             R0, #0|0-40
66314|code|BEQ             loc_10250|161-208
66316|code|MOV             R1, R4|33-70
66318|code|LDR             R0, [R7]|56-104
66320|code|BL              getDataItem|0-240-4-252
66324|code|LDR             R4, [SP,#0x28+var_28]|0-156
66326|code|STR.W           R4, [R0,R8,LSL#2]|64-248-40-64
66330|code|B               loc_10284|179-231
66332|code|BLX             __stack_chk_fail|246-247-138-233
66336|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1021A|186-74-1-0
66340|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
66344|code|PUSH.W          {R3-R9,LR}|45-233-248-67
66348|code|MOV             R6, R1|14-70
66350|code|MOV             R7, R2|23-70
66352|code|BL              getTextTableHeader|255-247-106-255
66356|code|AND.W           R1, R6, #7|6-240-7-1
66360|code|MOV.W           R9, #0|79-240-0-9
66364|code|MOVS            R5, #0|0-37
66366|code|ADD.W           R2, R0, R6,LSR#3|0-235-214-2
66370|code|LDRB.W          R3, [R2,#0x600]|146-248-0-54
66374|code|LSR.W           R4, R3, R1|35-250-1-244
66378|code|AND.W           R8, R4, #1|4-240-1-8
66382|code|ORRS.W          LR, R8, R9|88-234-9-14
66386|code|BEQ             locret_10372|14-208
66388|code|ADD.W           R0, R0, R6,LSL#2|0-235-134-0
66392|code|LDR.W           R6, [R0,#0x200]|208-248-0-98
66396|code|CMP             R6, R7|190-66
66398|code|ITTTT EQ|1-191
66400|code|STREQ.W         R5, [R0,#0x200]|192-248-0-82
66404|code|MOVEQ           R4, #1|1-36
66406|code|LSLEQ.W         R1, R4, R1|4-250-1-241
66410|code|BICEQ           R3, R1|139-67
66412|code|IT EQ|8-191
66414|code|STRBEQ.W        R3, [R2,#0x600]|130-248-0-54
66418|code|POP.W           {R3-R9,PC}|189-232-248-131
66422|data|ALIGN 4|0-191
66424|code|PUSH            {R3-R7,LR}|248-181
66426|code|MOVS            R2, #0|0-34
66428|code|MOV             R4, R1|12-70
66430|code|BL              sub_10210|255-247-71-255
66434|code|CBZ             R0, locret_103A8|136-177
66436|code|UXTB            R1, R4|225-178
66438|code|MOVS            R3, #0|0-35
66440|code|AND.W           R4, R1, #7|1-240-7-4
66444|code|ADD.W           R5, R0, R1,LSR#3|0-235-209-5
66448|code|LDRB.W          R6, [R5,#0x100]|149-248-0-97
66452|code|MOVS            R5, #0|0-37
66454|code|LSR.W           R2, R6, R4|38-250-4-242
66458|code|AND.W           R4, R2, #1|2-240-1-4
66462|code|ORRS            R4, R5|44-67
66464|code|BEQ             loc_103A6|1-208
66466|code|ADD             R0, R1|8-68
66468|code|POP             {R3-R7,PC}|248-189
66470|code|MOV             R0, R3|24-70
66472|code|POP             {R3-R7,PC}|248-189
66474|data|ALIGN 4|0-191
66476|code|PUSH.W          {R4-R10,LR}|45-233-240-71
66480|code|MOV             R8, R2|144-70
66482|code|MOVS            R2, #1|1-34
66484|code|MOV             R10, R0|130-70
66486|code|MOV             R9, R1|137-70
66488|code|BL              sub_10210|255-247-42-255
66492|code|MOV             R4, R0|4-70
66494|code|CBZ             R0, locret_1040C|40-179
66496|code|UXTB.W          R5, R9|95-250-137-245
66500|code|MOVS            R7, #0|0-39
66502|code|AND.W           R1, R5, #7|5-240-7-1
66506|code|ADD.W           LR, R0, R5,LSR#3|0-235-213-14
66510|code|LDRB.W          R2, [LR,#0x100]|158-248-0-33
66514|code|LSR.W           R6, R2, R1|34-250-1-246
66518|code|AND.W           R6, R6, #1|6-240-1-6
66522|code|ORRS.W          R3, R6, R7|86-234-7-3
66526|code|BEQ             loc_103F8|11-208
66528|code|LDRB            R1, [R0,R5]|65-93
66530|code|CMP             R1, R8|65-69
66532|code|BEQ             loc_103EE|3-208
66534|code|MOV             R0, R10|80-70
66536|code|MOV             R2, R9|74-70
66538|code|BL              sub_10328|255-247-157-255
66542|code|STRB.W          R8, [R4,R5]|4-248-5-128
66546|code|MOVS            R0, #1|1-32
66548|code|POP.W           {R4-R10,PC}|189-232-240-135
66552|code|MOVS            R3, #1|1-35
66554|code|MOVS            R0, #1|1-32
66556|code|LSLS            R3, R1|139-64
66558|code|ORRS            R3, R2|19-67
66560|code|STRB.W          R3, [LR,#0x100]|142-248-0-49
66564|code|STRB.W          R8, [R4,R5]|4-248-5-128
66568|code|POP.W           {R4-R10,PC}|189-232-240-135
66572|code|POP.W           {R4-R10,PC}|189-232-240-135
66576|code|PUSH            {R3-R7,LR}|248-181
66578|code|MOV             R6, R0|6-70
66580|code|MOV             R5, R1|13-70
66582|code|MOV             R4, R2|20-70
66584|code|BL              setTextTableGlyph|255-247-200-255
66588|code|CBNZ            R0, loc_10420|0-185
66590|code|POP             {R3-R7,PC}|248-189
66592|code|MOV             R0, R6|48-70
66594|code|BL              getTextTableHeader|255-247-241-254
66598|code|MOVS            R3, #0|0-35
66600|code|ADD.W           R1, R0, R4,LSR#3|0-235-212-1
66604|code|MOV             R7, R0|7-70
66606|code|AND.W           R0, R4, #7|4-240-7-0
66610|code|LDRB.W          R6, [R1,#0x600]|145-248-0-102
66614|code|LSR.W           R2, R6, R0|38-250-0-242
66618|code|AND.W           R2, R2, #1|2-240-1-2
66622|code|ORRS            R3, R2|19-67
66624|code|BNE             loc_10458|10-209
66626|code|MOVS            R3, #1|1-35
66628|code|ADDS            R4, #0x80|128-52
66630|code|LSL.W           R2, R3, R0|3-250-0-242
66634|code|MOV             R0, R3|24-70
66636|code|STR.W           R5, [R7,R4,LSL#2]|71-248-36-80
66640|code|ORRS            R6, R2|22-67
66642|code|STRB.W          R6, [R1,#0x600]|129-248-0-102
66646|code|POP             {R3-R7,PC}|248-189
66648|code|MOVS            R0, #1|1-32
66650|code|POP             {R3-R7,PC}|248-189
66652|code|PUSH.W          {R3-R11,LR}|45-233-248-79
66656|code|MOVS            R2, #0|0-34
66658|code|MOV             R11, R0|131-70
66660|code|MOV             R9, R1|137-70
66662|code|BL              sub_10210|255-247-211-254
66666|code|MOV             R6, R0|6-70
66668|code|CBZ             R0, locret_104AC|240-177
66670|code|UXTB.W          R7, R9|95-250-137-247
66674|code|MOVS            R3, #0|0-35
66676|code|AND.W           R10, R7, #7|7-240-7-10
66680|code|MOVS            R5, #0|0-37
66682|code|ADD.W           R8, R0, R7,LSR#3|0-235-215-8
66686|code|LDRB.W          R2, [R8,#0x100]|152-248-0-33
66690|code|LSR.W           R4, R2, R10|34-250-10-244
66694|code|AND.W           R2, R4, #1|4-240-1-2
66698|code|ORRS            R3, R2|19-67
66700|code|BEQ             locret_104AC|14-208
66702|code|MOV             R2, R9|74-70
66704|code|MOV             R0, R11|88-70
66706|code|LDRB            R1, [R6,R7]|241-93
66708|code|BL              sub_10328|255-247-72-255
66712|code|LDRB.W          R2, [R8,#0x100]|152-248-0-33
66716|code|MOVS            R3, #1|1-35
66718|code|STRB            R5, [R6,R7]|245-85
66720|code|LSL.W           R3, R3, R10|3-250-10-243
66724|code|BIC.W           R3, R2, R3|34-234-3-3
66728|code|STRB.W          R3, [R8,#0x100]|136-248-0-49
66732|code|POP.W           {R3-R11,PC}|189-232-248-143
66736|code|PUSH            {R3-R5,LR}|56-181
66738|code|MOV             R5, R0|5-70
66740|code|MOV             R0, R1|8-70
66742|code|MOV             R4, R2|20-70
66744|code|BL              convertCharToWchar|255-247-140-252
66748|code|ADDS            R3, R0, #1|67-28
66750|code|MOV             R1, R0|1-70
66752|code|BEQ             loc_104D2|7-208
66754|code|MOV             R0, R5|40-70
66756|code|MOV             R2, R4|34-70
66758|code|BL              setTextTableCharacter|255-247-163-255
66762|code|ADDS            R0, #0|0-48
66764|code|IT NE|24-191
66766|code|MOVNE           R0, #1|1-32
66768|code|POP             {R3-R5,PC}|56-189
66770|code|MOVS            R0, #1|1-32
66772|code|POP             {R3-R5,PC}|56-189
66774|data|ALIGN 4|0-191
66776|code|PUSH            {R3-R5,LR}|56-181
66778|code|MOVS            R0, #4; size|4-32
66780|code|BLX             malloc|246-247-84-233
66784|code|MOV             R4, R0|4-70
66786|code|CBZ             R0, loc_1050E|160-177
66788|code|MOVS            R5, #0|0-37
66790|code|STR             R5, [R0]|5-96
66792|code|BL              newDataArea|0-240-202-250
66796|code|STR             R0, [R4]|32-96
66798|code|CBZ             R0, loc_10508|88-177
66800|code|MOV             R1, R5|41-70
66802|code|MOV.W           R2, #0x620|79-244-196-98
66806|code|MOVS            R3, #4|4-35
66808|code|BL              allocateDataItem|0-240-216-250
66812|code|CBZ             R0, loc_10502|8-177
66814|code|MOV             R0, R4|32-70
66816|code|POP             {R3-R5,PC}|56-189
66818|code|LDR             R0, [R4]; ptr|32-104
66820|code|BL              destroyDataArea|0-240-198-250
66824|code|MOV             R0, R4; ptr|32-70
66826|code|BLX             free|245-247-28-239
66830|code|MOVS            R0, #0|0-32
66832|code|POP             {R3-R5,PC}|56-189
66834|data|ALIGN 4|0-191
66836|code|PUSH            {R4,LR}|16-181
66838|code|MOV             R4, R0|4-70
66840|code|LDR             R0, [R0]; ptr|0-104
66842|code|BL              destroyDataArea|0-240-187-250
66846|code|MOV             R0, R4; ptr|32-70
66848|code|POP.W           {R4,LR}|189-232-16-64
66852|code|B.W             j_free|245-247-12-191
66856|code|PUSH            {R4-R7,LR}|240-181
66858|code|MOV             R7, R0|7-70
66860|code|MOV             R6, R1|14-70
66862|code|LDR             R0, =(aTtb - 0x10538); ".ttb"|16-72
66864|code|LDR             R1, =(aTti - 0x1053C); ".tti"|16-73
66866|code|SUB             SP, SP, #0xC|131-176
66868|code|ADD             R0, PC; ".ttb"|120-68
66870|code|MOV             R5, R2|21-70
66872|code|ADD             R1, PC; ".tti"|121-68
66874|code|BL              setGlobalTableVariables|254-247-63-248
66878|code|CBZ             R0, loc_10560|120-177
66880|code|BL              newTextTableData|255-247-202-255
66884|code|MOV             R4, R0|4-70
66886|code|CBZ             R0, loc_10560|88-177
66888|code|STR             R0, [SP,#0x20+var_20]|0-144
66890|code|MOV             R3, R5|43-70
66892|code|MOV             R1, R7|57-70
66894|code|MOV             R2, R6|50-70
66896|code|MOVS            R0, #0|0-32
66898|code|BL              processDataStream|254-247-99-254
66902|code|MOV             R5, R0|5-70
66904|code|MOV             R0, R4|32-70
66906|code|CBZ             R5, loc_10566|37-177
66908|code|ADD             SP, SP, #0xC|3-176
66910|code|POP             {R4-R7,PC}|240-189
66912|code|MOVS            R0, #0|0-32
66914|code|ADD             SP, SP, #0xC|3-176
66916|code|POP             {R4-R7,PC}|240-189
66918|code|BL              destroyTextTableData|255-247-213-255
66922|code|MOV             R0, R5|40-70
66924|code|B               loc_1055C|246-231
66926|data|ALIGN 0x10|0-191
66928|data|DCD aTtb - 0x10538; ".ttb"|116-62-0-0
66932|data|DCD aTti - 0x1053C; ".tti"|120-62-0-0
66936|code|PUSH            {R3-R5,LR}|56-181
66938|code|MOV             R5, R0|5-70
66940|code|MOVS            R0, #8; size|8-32
66942|code|BLX             malloc|246-247-4-233
66946|code|MOV             R4, R0|4-70
66948|code|CBZ             R0, loc_1059C|80-177
66950|code|MOV             R0, R5|40-70
66952|code|BL              getTextTableHeader|255-247-62-254
66956|code|STR             R0, [R4]|32-96
66958|code|LDR             R0, [R5]|40-104
66960|code|BL              getDataSize|0-240-200-250
66964|code|STR             R0, [R4,#4]|96-96
66966|code|LDR             R0, [R5]|40-104
66968|code|BL              resetDataArea|0-240-108-250
66972|code|MOV             R0, R4|32-70
66974|code|POP             {R3-R5,PC}|56-189
66976|code|LDR             R3, [R0,#4]|67-104
66978|code|CBNZ            R3, loc_105A6|3-185
66980|code|BX              LR|112-71
66982|code|PUSH            {R4,LR}|16-181
66984|code|MOV             R4, R0|4-70
66986|code|LDR             R0, [R0]; ptr|0-104
66988|code|BLX             free|245-247-202-238
66992|code|MOV             R0, R4; ptr|32-70
66994|code|POP.W           {R4,LR}|189-232-16-64
66998|code|B.W             j_free|245-247-195-190
67002|data|ALIGN 4|0-191
67004|code|LDR             R1, =(aTtb - 0x105C2); ".ttb"|1-73
67006|code|ADD             R1, PC; ".ttb"|121-68
67008|code|B.W             ensureFileExtension|249-247-200-184
67012|data|DCD aTtb - 0x105C2; ".ttb"|234-61-0-0
67016|code|PUSH            {R3-R5,LR}|56-181
67018|code|MOV             R4, R1|12-70
67020|code|LDR             R1, =(aText - 0x105D2); "Text"|8-73
67022|code|ADD             R1, PC; "Text"|121-68
67024|code|BL              makePath|249-247-62-248
67028|code|MOV             R5, R0|5-70
67030|code|CBZ             R0, locret_105EE|80-177
67032|code|LDR             R2, =(aTtb - 0x105E0); ".ttb"|6-74
67034|code|MOV             R1, R4|33-70
67036|code|ADD             R2, PC; ".ttb"|122-68
67038|code|BL              makeFilePath|249-247-217-248
67042|code|MOV             R4, R0|4-70
67044|code|MOV             R0, R5; ptr|40-70
67046|code|BLX             free|245-247-174-238
67050|code|MOV             R0, R4|32-70
67052|code|POP             {R3-R5,PC}|56-189
67054|code|POP             {R3-R5,PC}|56-189
67056|data|DCD aText - 0x105D2; "Text"|234-61-0-0
67060|data|DCD aTtb - 0x105E0; ".ttb"|204-61-0-0
67064|code|PUSH            {R3-R5,LR}|56-181
67066|code|BL              makeTextTablePath|255-247-229-255
67070|code|MOV             R4, R0|4-70
67072|code|MOV             R5, R0|5-70
67074|code|CBZ             R0, loc_10622|112-177
67076|code|LDR             R1, =(aCheckingForTex - 0x1060E); "checking for text table: %s"|8-73
67078|code|MOVS            R0, #7|7-32
67080|code|MOV             R2, R4|34-70
67082|code|ADD             R1, PC; "checking for text table: %s"|121-68
67084|code|BL              logMessage|248-247-26-253
67088|code|MOV             R0, R4; filename|32-70
67090|code|BL              testFilePath|249-247-219-248
67094|code|MOVS            R5, R0|5-28
67096|code|MOV             R0, R4; ptr|32-70
67098|code|IT NE|24-191
67100|code|MOVNE           R5, #1|1-37
67102|code|BLX             free|245-247-146-238
67106|code|MOV             R0, R5|40-70
67108|code|POP             {R3-R5,PC}|56-189
67110|data|ALIGN 4|0-191
67112|data|DCD aCheckingForTex - 0x1060E; "checking for text table: %s"|182-61-0-0
67116|code|PUSH.W          {R4-R10,LR}|45-233-240-71
67120|code|ADD             R7, SP, #0|0-175
67122|code|MOV             R8, R0|128-70
67124|code|BL              getLocaleName|255-247-166-248
67128|code|MOV             R9, R0|129-70
67130|code|CMP             R0, #0|0-40
67132|code|BEQ             loc_106E4|82-208
67134|code|BLX             strlen|246-247-172-232
67138|code|LDRB.W          R3, [R9]|153-248-0-48
67142|code|MOV             R6, SP|110-70
67144|code|ANDS.W          R4, R3, #0xBF|19-240-191-4
67148|code|ADD.W           R0, R0, #8|0-241-8-0
67152|code|BIC.W           R0, R0, #7|32-240-7-0
67156|code|SUB.W           SP, SP, R0|173-235-0-13
67160|code|MOV             R5, SP|109-70
67162|code|BEQ             loc_10676|12-208
67164|code|CMP             R3, #0x2E ; '.'|46-43
67166|code|BEQ             loc_106E6|66-208
67168|code|MOV             R2, R9|74-70
67170|code|MOVS            R4, #0|0-36
67172|code|B               loc_1066A|1-224
67174|code|CMP             R3, #0x2E ; '.'|46-43
67176|code|BEQ             loc_10676|5-208
67178|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
67182|code|ADDS            R4, #1|1-52
67184|code|TST.W           R3, #0xBF|19-240-191-15
67188|code|BNE             loc_10666|247-209
67190|code|MOV             R1, R9; src|73-70
67192|code|MOV             R2, R4; n|34-70
67194|code|MOV             R0, R5; dest|40-70
67196|code|MOV.W           R10, #0|79-240-0-10
67200|code|BLX             strncpy|246-247-34-233
67204|code|MOV             R0, R9; ptr|72-70
67206|code|STRB.W          R10, [R5,R4]|5-248-4-160
67210|code|BLX             free|245-247-92-238
67214|code|MOV             R0, R5|40-70
67216|code|BL              isPosixLocale|255-247-136-248
67220|code|CBZ             R0, loc_106A4|48-177
67222|code|STRB.W          R10, [R5]|133-248-0-160
67226|code|MOVS            R0, #0|0-32
67228|code|MOV             SP, R6|181-70
67230|code|MOV             SP, R7|189-70
67232|code|POP.W           {R4-R10,PC}|189-232-240-135
67236|code|MOV             R0, R8|64-70
67238|code|MOV             R1, R5|41-70
67240|code|BL              sub_105F8|255-247-166-255
67244|code|MOV             R4, R0|4-70
67246|code|CBZ             R0, loc_106C6|80-177
67248|code|LDRB            R3, [R5]|43-120
67250|code|CMP             R3, #0|0-43
67252|code|BEQ             loc_1069A|241-208
67254|code|MOV             R0, R5|40-70
67256|code|BLX             __strdup|245-247-10-239
67260|code|CBZ             R0, loc_106EA|168-177
67262|code|MOV             SP, R6|181-70
67264|code|MOV             SP, R7|189-70
67266|code|POP.W           {R4-R10,PC}|189-232-240-135
67270|code|MOV             R0, R5; s|40-70
67272|code|MOVS            R1, #0x5F ; '_'; c|95-33
67274|code|BLX             strchr|246-247-104-233
67278|code|CMP             R0, #0|0-40
67280|code|BEQ             loc_106B0|238-208
67282|code|STRB            R4, [R0]|4-112
67284|code|MOV             R1, R5|41-70
67286|code|MOV             R0, R8|64-70
67288|code|BL              sub_105F8|255-247-142-255
67292|code|CMP             R0, #0|0-40
67294|code|BNE             loc_106B0|231-209
67296|code|STRB            R0, [R5]|40-112
67298|code|B               loc_1069A|218-231
67300|code|B               loc_1069E|219-231
67302|code|MOVS            R4, #0|0-36
67304|code|B               loc_10676|197-231
67306|code|BL              logMallocError|248-247-55-253
67310|code|B               loc_1069A|212-231
67312|code|MOV             R3, R1|11-70
67314|code|LDR             R2, =(aTextTableDirec - 0x106FA); "text table directive"|3-74
67316|code|LDR             R1, =(off_24B68 - 0x106FC); "c"|3-73
67318|code|ADD             R2, PC; "text table directive"|122-68
67320|code|ADD             R1, PC; off_24B68|121-68
67322|code|B.W             processDirectiveOperand|254-247-5-188
67326|data|ALIGN 0x10|0-191
67328|data|DCD aTextTableDirec - 0x106FA; "text table directive"|230-60-0-0
67332|data|DCD off_24B68 - 0x106FC; "c"|108-68-1-0
67336|code|PUSH.W          {R4-R8,LR}|45-233-240-65
67340|code|SUB.W           SP, SP, #0x410|173-245-130-109
67344|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1071C)|23-76
67346|code|ADD             R6, SP, #0x428+var_41C|3-174
67348|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|23-77
67350|code|MOV             R7, R1|15-70
67352|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
67354|code|LDR             R3, =(aLocalCharacter - 0x10726); "local character"|23-75
67356|code|MOVS            R2, #1|1-34
67358|code|MOV             R1, R6|49-70
67360|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
67362|code|ADD             R3, PC; "local character"|123-68
67364|code|MOV             R8, R0|128-70
67366|code|LDR             R5, [R4]|37-104
67368|code|STR.W           R5, [SP,#0x428+var_1C]|205-248-12-84
67372|code|BL              getDataString|254-247-0-250
67376|code|CBZ             R0, loc_1074C|96-177
67378|code|LDRB            R3, [R6]|51-120
67380|code|CMP             R3, #1|1-43
67382|code|BEQ             loc_1075E|18-208
67384|code|ADD             R2, SP, #0x428+var_418|4-170
67386|code|LDR             R1, =(unk_14408 - 0x10746)|16-73
67388|code|STR             R2, [SP,#0x428+var_428]|0-146
67390|code|MOV             R0, R8|64-70
67392|code|LDR             R2, =(aLocalCharacter - 0x10748); "local character"|15-74
67394|code|ADD             R1, PC; unk_14408|121-68
67396|code|ADD             R2, PC; "local character"|122-68
67398|code|BL              reportDataError|253-247-11-254
67402|code|MOVS            R0, #0|0-32
67404|code|LDR.W           R2, [SP,#0x428+var_1C]|221-248-12-36
67408|code|LDR             R3, [R4]|35-104
67410|code|CMP             R2, R3|154-66
67412|code|BNE             loc_1076C|10-209
67414|code|ADD.W           SP, SP, #0x410|13-245-130-109
67418|code|POP.W           {R4-R8,PC}|189-232-240-129
67422|code|LDR             R2, [R6,#4]|114-104
67424|code|CMP             R2, #0xFF|255-42
67426|code|ITT LS|156-191
67428|code|STRBLS          R2, [R7]|58-112
67430|code|MOVLS           R0, R3|24-70
67432|code|BHI             loc_10738|230-216
67434|code|B               loc_1074C|239-231
67436|code|BLX             __stack_chk_fail|245-247-98-239
67440|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1071C|184-69-1-0
67444|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
67448|data|DCD aLocalCharacter - 0x10726; "local character"|210-60-0-0
67452|data|DCD unk_14408 - 0x10746|194-60-0-0
67456|data|DCD aLocalCharacter - 0x10748; "local character"|176-60-0-0
67460|code|PUSH.W          {R4-R9,LR}|45-233-240-67
67464|code|SUBW            SP, SP, #0x414|173-242-20-77
67468|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x10798)|22-76
67470|code|ADD             R6, SP, #0x430+var_424|3-174
67472|code|LDR             R5, =(__stack_chk_guard_ptr - 0x24CD4)|22-77
67474|code|MOV             R8, R1|136-70
67476|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
67478|code|LDR             R7, =(aUnicodeCharact - 0x107A2); "unicode character"|22-79
67480|code|MOV             R1, R6|49-70
67482|code|MOVS            R2, #0|0-34
67484|code|LDR             R4, [R4,R5]; __stack_chk_guard|100-89
67486|code|ADD             R7, PC; "unicode character"|127-68
67488|code|MOV             R9, R0|129-70
67490|code|MOV             R3, R7|59-70
67492|code|LDR             R5, [R4]|37-104
67494|code|STR.W           R5, [SP,#0x430+var_24]|205-248-12-84
67498|code|BL              getDataString|254-247-193-249
67502|code|CBZ             R0, loc_107BC|40-177
67504|code|LDR             R3, [R6,#4]|115-104
67506|code|CMP             R3, #0|0-43
67508|code|BLT             loc_107CE|11-219
67510|code|MOVS            R0, #1|1-32
67512|code|STR.W           R3, [R8]|200-248-0-48
67516|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
67520|code|LDR             R3, [R4]|35-104
67522|code|CMP             R2, R3|154-66
67524|code|BNE             loc_107E4|14-209
67526|code|ADDW            SP, SP, #0x414|13-242-20-77
67530|code|POP.W           {R4-R9,PC}|189-232-240-131
67534|code|LDR             R1, =(unk_14408 - 0x107DA)|9-73
67536|code|MOV             R0, R9|72-70
67538|code|LDRB            R3, [R6]|51-120
67540|code|MOV             R2, R7|58-70
67542|code|ADD             R1, PC; unk_14408|121-68
67544|code|ADD             R5, SP, #0x430+var_420|4-173
67546|code|STR             R5, [SP,#0x430+var_430]|0-149
67548|code|BL              reportDataError|253-247-192-253
67552|code|MOVS            R0, #0|0-32
67554|code|B               loc_107BC|235-231
67556|code|BLX             __stack_chk_fail|245-247-38-239
67560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10798|60-69-1-0
67564|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
67568|data|DCD aUnicodeCharact - 0x107A2; "unicode character"|122-60-0-0
67572|data|DCD unk_14408 - 0x107DA|46-60-0-0
67576|code|PUSH.W          {R4-R11,LR}|45-233-240-79
67580|code|SUB             SP, SP, #0x1C|135-176
67582|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1080A)|64-78
67584|code|MOV             R4, R1|12-70
67586|code|LDR             R3, =(__stack_chk_guard_ptr - 0x24CD4)|64-75
67588|code|MOV             R7, R0|7-70
67590|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
67592|code|LDR             R1, =(aCell - 0x10810); "cell"|63-73
67594|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
67596|code|ADD             R1, PC; "cell"|121-68
67598|code|STR             R3, [SP,#0x40+var_40]|0-147
67600|code|LDR             R3, [R3]|27-104
67602|code|STR             R3, [SP,#0x40+var_2C]|5-147
67604|code|BL              findDataOperand|253-247-232-254
67608|code|MOV             R3, R0|3-70
67610|code|CBNZ            R0, loc_1082E|64-185
67612|code|MOV             R0, R3|24-70
67614|code|LDR             R3, [SP,#0x40+var_40]|0-155
67616|code|LDR             R2, [SP,#0x40+var_2C]|5-154
67618|code|LDR             R3, [R3]|27-104
67620|code|CMP             R2, R3|154-66
67622|code|BNE             loc_108FC|105-209
67624|code|ADD             SP, SP, #0x1C|7-176
67626|code|POP.W           {R4-R11,PC}|189-232-240-143
67630|code|ADD.W           R8, SP, #0x40+wc|13-241-12-8
67634|code|MOV             R0, R7|56-70
67636|code|MOV             R1, R8|65-70
67638|code|BL              getDataCharacter|253-247-113-255
67642|code|MOV             R3, R0|3-70
67644|code|CMP             R0, #0|0-40
67646|code|BEQ             loc_1081C|237-208
67648|code|LDR             R1, [SP,#0x40+wc]; wc|3-153
67650|code|CMP             R1, #0x28 ; '('|40-41
67652|code|BEQ             loc_108A0|44-208
67654|code|LDR             R0, =(a0 - 0x10854); "0"|49-72
67656|code|MOVS            R5, #0|0-37
67658|code|STRB            R5, [R4]|37-112
67660|code|MOV.W           R10, #1|79-240-1-10
67664|code|ADD             R0, PC; "0"|120-68
67666|code|BLX             wcschr|245-247-50-238
67670|code|CMP             R0, #0|0-40
67672|code|BEQ             loc_108EE|73-208
67674|code|ADD.W           R11, SP, #0x40+var_30|13-241-16-11
67678|code|MOV             R0, R7|56-70
67680|code|MOV             R1, R8|65-70
67682|code|BL              getDataCharacter|253-247-91-255
67686|code|CBZ             R0, loc_108CC|136-179
67688|code|LDR.W           R9, [SP,#0x40+wc]|221-248-12-144
67692|code|MOV             R0, R9; wc|72-70
67694|code|BLX             iswspace|245-247-42-237
67698|code|CBZ             R5, loc_108AC|221-177
67700|code|CMP             R5, R9|77-69
67702|code|BEQ             loc_108B8|31-208
67704|code|CMP             R0, #0|0-40
67706|code|BNE             loc_1085E|240-209
67708|code|CMP.W           R10, #0|186-241-0-15
67712|code|BNE             loc_108BC|28-209
67714|code|MOV             R0, R9; c|72-70
67716|code|MOV             R1, R11|89-70
67718|code|BL              brlDotNumberToIndex|253-247-65-253
67722|code|CBZ             R0, loc_108BC|184-177
67724|code|LDR             R2, =(brlDotBits_ptr - 0x24CD4)|32-74
67726|code|LDR             R3, [SP,#0x40+var_30]|4-155
67728|code|LDRB            R1, [R4]|33-120
67730|code|LDR             R2, [R6,R2]; brlDotBits|178-88
67732|code|LDRB            R3, [R2,R3]|211-92
67734|code|TST             R1, R3|25-66
67736|code|BNE             loc_108E0|34-209
67738|code|ORRS            R3, R1|11-67
67740|code|STRB            R3, [R4]|35-112
67742|code|B               loc_1085E|222-231
67744|code|MOV.W           R10, #0|79-240-0-10
67748|code|MOVS            R5, #0x29 ; ')'|41-37
67750|code|STRB.W          R10, [R4]|132-248-0-160
67754|code|B               loc_1085A|214-231
67756|code|CMP             R0, #0|0-40
67758|code|BEQ             loc_1087C|229-208
67760|code|MOV             R0, R7|56-70
67762|code|MOVS            R1, #1|1-33
67764|code|BL              ungetDataCharacters|253-247-64-255
67768|code|MOVS            R3, #1|1-35
67770|code|B               loc_1081C|175-231
67772|code|LDR             R1, =(aInvalidDotNumb - 0x108C6); "invalid dot number: %.1ls"|21-73
67774|code|MOV             R0, R7|56-70
67776|code|MOV             R2, R8|66-70
67778|code|ADD             R1, PC; "invalid dot number: %.1ls"|121-68
67780|code|BL              reportDataError|253-247-76-253
67784|code|MOVS            R3, #0|0-35
67786|code|B               loc_1081C|167-231
67788|code|STR             R0, [SP,#0x40+var_3C]|1-144
67790|code|CMP             R5, #0|0-45
67792|code|BEQ             loc_108B8|242-208
67794|code|LDR             R1, =(aIncompleteCell - 0x108DA); "incomplete cell"|17-73
67796|code|MOV             R0, R7|56-70
67798|code|ADD             R1, PC; "incomplete cell"|121-68
67800|code|BL              reportDataError|253-247-66-253
67804|code|LDR             R3, [SP,#0x40+var_3C]|1-155
67806|code|B               loc_1081C|157-231
67808|code|LDR             R1, =(aDuplicateDotNu - 0x108EA); "duplicate dot number: %.1ls"|14-73
67810|code|MOV             R0, R7|56-70
67812|code|MOV             R2, R8|66-70
67814|code|ADD             R1, PC; "duplicate dot number: %.1ls"|121-68
67816|code|BL              reportDataError|253-247-58-253
67820|code|B               loc_108C8|236-231
67822|code|MOV             R5, R0|5-70
67824|code|MOVS            R1, #1|1-33
67826|code|MOV             R0, R7|56-70
67828|code|MOV             R10, R5|170-70
67830|code|BL              ungetDataCharacters|253-247-31-255
67834|code|B               loc_1085A|174-231
67836|code|BLX             __stack_chk_fail|245-247-154-238
67840|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1080A|202-68-1-0
67844|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
67848|data|DCD aCell - 0x10810; "cell"|32-60-0-0
67852|data|DCD a0 - 0x10854; "0"|16-60-0-0
67856|data|DCD brlDotBits_ptr - 0x24CD4|200-2-0-0
67860|data|DCD aInvalidDotNumb - 0x108C6; "invalid dot number: %.1ls"|94-39-0-0
67864|data|DCD aIncompleteCell - 0x108DA; "incomplete cell"|122-59-0-0
67868|data|DCD aDuplicateDotNu - 0x108EA; "duplicate dot number: %.1ls"|78-59-0-0
67872|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x10928)|20-75
67874|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|21-74
67876|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
67878|code|PUSH            {R4-R6,LR}|112-181
67880|code|SUB             SP, SP, #8|130-176
67882|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
67884|code|MOV             R6, R1|14-70
67886|code|ADD.W           R1, SP, #0x18+var_16|13-241-2-1
67890|code|MOV             R5, R0|5-70
67892|code|LDR             R3, [R4]|35-104
67894|code|STR             R3, [SP,#0x18+var_14]|1-147
67896|code|BL              sub_10708|255-247-230-254
67900|code|CBNZ            R0, loc_1094C|48-185
67902|code|MOVS            R0, #1|1-32
67904|code|LDR             R2, [SP,#0x18+var_14]|1-154
67906|code|LDR             R3, [R4]|35-104
67908|code|CMP             R2, R3|154-66
67910|code|BNE             loc_1096E|18-209
67912|code|ADD             SP, SP, #8|2-176
67914|code|POP             {R4-R6,PC}|112-189
67916|code|MOV             R0, R5|40-70
67918|code|ADD.W           R1, SP, #0x18+var_15|13-241-3-1
67922|code|BL              sub_107F8|255-247-81-255
67926|code|CMP             R0, #0|0-40
67928|code|BEQ             loc_1093E|241-208
67930|code|MOV             R0, R6|48-70
67932|code|LDRB.W          R1, [SP,#0x18+var_16]|157-248-2-16
67936|code|LDRB.W          R2, [SP,#0x18+var_15]|157-248-3-32
67940|code|BL              setTextTableByte|255-247-164-253
67944|code|CMP             R0, #0|0-40
67946|code|BNE             loc_1093E|232-209
67948|code|B               loc_10940|232-231
67950|code|BLX             __stack_chk_fail|245-247-98-238
67954|data|ALIGN 4|0-191
67956|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10928|172-67-1-0
67960|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
67964|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x10984)|19-75
67966|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|20-74
67968|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
67970|code|PUSH            {R4-R6,LR}|112-181
67972|code|SUB             SP, SP, #0x10|132-176
67974|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
67976|code|MOV             R6, R1|14-70
67978|code|ADD             R1, SP, #0x20+var_18|2-169
67980|code|MOV             R5, R0|5-70
67982|code|LDR             R3, [R4]|35-104
67984|code|STR             R3, [SP,#0x20+var_14]|3-147
67986|code|BL              sub_10784|255-247-247-254
67990|code|CBNZ            R0, loc_109A6|48-185
67992|code|MOVS            R0, #1|1-32
67994|code|LDR             R2, [SP,#0x20+var_14]|3-154
67996|code|LDR             R3, [R4]|35-104
67998|code|CMP             R2, R3|154-66
68000|code|BNE             loc_109C6|17-209
68002|code|ADD             SP, SP, #0x10|4-176
68004|code|POP             {R4-R6,PC}|112-189
68006|code|MOV             R0, R5|40-70
68008|code|ADD.W           R1, SP, #0x20+var_19|13-241-7-1
68012|code|BL              sub_107F8|255-247-36-255
68016|code|CMP             R0, #0|0-40
68018|code|BEQ             loc_10998|241-208
68020|code|MOV             R0, R6|48-70
68022|code|LDR             R1, [SP,#0x20+var_18]|2-153
68024|code|LDRB.W          R2, [SP,#0x20+var_19]|157-248-7-32
68028|code|BL              setTextTableGlyph|255-247-246-252
68032|code|CMP             R0, #0|0-40
68034|code|BNE             loc_10998|233-209
68036|code|B               loc_1099A|233-231
68038|code|BLX             __stack_chk_fail|245-247-54-238
68042|data|ALIGN 4|0-191
68044|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10984|80-67-1-0
68048|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
68052|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x109DC)|19-75
68054|code|LDR             R2, =(__stack_chk_guard_ptr - 0x24CD4)|20-74
68056|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
68058|code|PUSH            {R4-R6,LR}|112-181
68060|code|SUB             SP, SP, #0x10|132-176
68062|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
68064|code|MOV             R6, R1|14-70
68066|code|ADD             R1, SP, #0x20+var_18|2-169
68068|code|MOV             R5, R0|5-70
68070|code|LDR             R3, [R4]|35-104
68072|code|STR             R3, [SP,#0x20+var_14]|3-147
68074|code|BL              sub_10784|255-247-203-254
68078|code|CBNZ            R0, loc_109FE|48-185
68080|code|MOVS            R0, #1|1-32
68082|code|LDR             R2, [SP,#0x20+var_14]|3-154
68084|code|LDR             R3, [R4]|35-104
68086|code|CMP             R2, R3|154-66
68088|code|BNE             loc_10A1E|17-209
68090|code|ADD             SP, SP, #0x10|4-176
68092|code|POP             {R4-R6,PC}|112-189
68094|code|MOV             R0, R5|40-70
68096|code|ADD.W           R1, SP, #0x20+var_19|13-241-7-1
68100|code|BL              sub_107F8|255-247-248-254
68104|code|CMP             R0, #0|0-40
68106|code|BEQ             loc_109F0|241-208
68108|code|MOV             R0, R6|48-70
68110|code|LDR             R1, [SP,#0x20+var_18]|2-153
68112|code|LDRB.W          R2, [SP,#0x20+var_19]|157-248-7-32
68116|code|BL              setTextTableCharacter|255-247-252-252
68120|code|CMP             R0, #0|0-40
68122|code|BNE             loc_109F0|233-209
68124|code|B               loc_109F2|233-231
68126|code|BLX             __stack_chk_fail|245-247-10-238
68130|data|ALIGN 4|0-191
68132|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x109DC|248-66-1-0
68136|data|DCD __stack_chk_guard_ptr - 0x24CD4|148-2-0-0
68140|code|LDR             R2, =(sub_106F0+1 - 0x10A32)|1-74
68142|code|ADD             R2, PC; sub_106F0|122-68
68144|code|B.W             processTextTableLines|255-247-122-189
68148|data|DCD sub_106F0+1 - 0x10A32|191-252-255-255
68152|code|LDR             R1, =(aInvalidUnicode+0x18 - 0x10A42); "r"|13-73
68154|code|MOVS            R2, #0|0-34
68156|code|PUSH            {R4-R6,LR}|112-181
68158|code|ADD             R1, PC; "r"|121-68
68160|code|MOV             R5, R0|5-70
68162|code|BL              openDataFile|254-247-225-251
68166|code|MOV             R4, R0|4-70
68168|code|CBZ             R0, loc_10A6C|128-177
68170|code|MOV             R1, R5|41-70
68172|code|BL              processTextTableStream|255-247-238-255
68176|code|MOV             R6, R0|6-70
68178|code|MOV             R5, R0|5-70
68180|code|CBZ             R0, loc_10A62|40-177
68182|code|BL              makeTextTable|255-247-143-253
68186|code|MOV             R5, R0|5-70
68188|code|MOV             R0, R6|48-70
68190|code|BL              destroyTextTableData|255-247-89-253
68194|code|MOV             R0, R4; stream|32-70
68196|code|BLX             fclose|245-247-190-238
68200|code|MOV             R0, R5|40-70
68202|code|POP             {R4-R6,PC}|112-189
68204|code|MOV             R5, R0|5-70
68206|code|B               loc_10A68|251-231
68208|data|DCD aInvalidUnicode+0x18 - 0x10A42; "r"|42-39-0-0
68212|code|MOVS            R3, #0|0-35
68214|code|STR             R3, [R0]|3-96
68216|code|STR             R3, [R0,#4]|67-96
68218|code|STR             R3, [R0,#8]|131-96
68220|code|BX              LR|112-71
68222|data|ALIGN 0x10|0-191
68224|code|PUSH            {R4,LR}|16-181
68226|code|MOVS            R0, #0xC; size|12-32
68228|code|BLX             malloc|245-247-128-238
68232|code|MOV             R4, R0|4-70
68234|code|CBZ             R0, loc_10A90|8-177
68236|code|BL              resetDataArea|255-247-242-255
68240|code|MOV             R0, R4|32-70
68242|code|POP             {R4,PC}|16-189
68244|code|PUSH            {R4,LR}|16-181
68246|code|MOV             R4, R0|4-70
68248|code|LDR             R0, [R0]; ptr|0-104
68250|code|CBZ             R0, loc_10AA0|8-177
68252|code|BLX             free|245-247-82-236
68256|code|MOV             R0, R4; ptr|32-70
68258|code|POP.W           {R4,LR}|189-232-16-64
68262|code|B.W             j_free|245-247-75-188
68266|data|ALIGN 4|0-191
68268|code|PUSH.W          {R4-R8,LR}|45-233-240-65
68272|code|MOV             R5, R0|5-70
68274|code|LDR             R0, [R0,#8]|128-104
68276|code|MOV             R7, R1|15-70
68278|code|MOV             R1, R3|25-70
68280|code|MOV             R4, R3|28-70
68282|code|SUBS            R0, #1|1-56
68284|code|MOV             R6, R2|22-70
68286|code|ADD             R0, R3|24-68
68288|code|BL              sub_10B50|0-240-70-248
68292|code|LDR             R3, [R5,#4]|107-104
68294|code|MUL.W           R0, R4, R0|4-251-0-240
68298|code|ADD             R6, R0|6-68
68300|code|CMP             R6, R3|158-66
68302|code|STR             R0, [R5,#8]|168-96
68304|code|BHI             loc_10AE0|6-216
68306|code|CBZ             R7, loc_10AD8|15-177
68308|code|LDR             R3, [R5,#8]|171-104
68310|code|STR             R3, [R7]|59-96
68312|code|MOVS            R0, #1|1-32
68314|code|STR             R6, [R5,#8]|174-96
68316|code|POP.W           {R4-R8,PC}|189-232-240-129
68320|code|MVN.W           R8, R6,LSR#12|111-234-22-56
68324|code|LDR             R0, [R5]; ptr|40-104
68326|code|MVN.W           R8, R8,LSL#12|111-234-8-56
68330|code|MOV             R1, R8; size|65-70
68332|code|BLX             realloc|245-247-94-237
68336|code|MOV             R4, R0|4-70
68338|code|CBZ             R0, loc_10B08|72-177
68340|code|LDR             R2, [R5,#4]|106-104
68342|code|MOVS            R1, #0; c|0-33
68344|code|ADD             R0, R2; s|16-68
68346|code|RSB.W           R2, R2, R8; n|194-235-8-2
68350|code|BLX             memset|245-247-176-236
68354|code|STM.W           R5, {R4,R8}|133-232-16-1
68358|code|B               loc_10AD2|228-231
68360|code|LDR             R1, =(aInsufficientMe - 0x10B10); "insufficient memory for data area"|3-73
68362|code|MOVS            R0, #3|3-32
68364|code|ADD             R1, PC; "insufficient memory for data area"|121-68
68366|code|BL              logMessage|248-247-153-250
68370|code|MOV             R0, R4|32-70
68372|code|POP.W           {R4-R8,PC}|189-232-240-129
68376|data|DCD aInsufficientMe - 0x10B10; "insufficient memory for data area"|156-57-0-0
68380|code|LDR             R0, [R0]|0-104
68382|code|ADD             R0, R1|8-68
68384|code|BX              LR|112-71
68386|data|ALIGN 4|0-191
68388|code|LDR             R0, [R0,#8]|128-104
68390|code|BX              LR|112-71
68392|code|PUSH            {R3-R7,LR}|248-181
68394|code|MOV             R4, R3|28-70
68396|code|MOV             R5, R2|21-70
68398|code|LDR             R3, [SP,#0x18+arg_0]|6-155
68400|code|MOV             R2, R4|34-70
68402|code|MOV             R7, R0|7-70
68404|code|MOV             R6, R1|14-70
68406|code|BL              allocateDataItem|255-247-185-255
68410|code|CBZ             R0, locret_10B4E|64-177
68412|code|LDR             R1, [R6]|49-104
68414|code|MOV             R0, R7|56-70
68416|code|BL              getDataItem|255-247-236-255
68420|code|MOV             R1, R5; src|41-70
68422|code|MOV             R2, R4; n|34-70
68424|code|BLX             memcpy|245-247-18-238
68428|code|MOVS            R0, #1|1-32
68430|code|POP             {R3-R7,PC}|248-189
68432|code|SUBS            R2, R1, #1|74-30
68434|code|IT EQ|8-191
68436|code|BXEQ            LR|112-71
68438|code|BCC.W           loc_10DA2|192-240-36-129
68442|code|CMP             R0, R1|136-66
68444|code|BLS.W           loc_10D8C|64-242-22-129
68448|code|TST             R1, R2|17-66
68450|code|BEQ.W           loc_10D94|0-240-23-129
68454|code|CLZ.W           R3, R0|176-250-128-243
68458|code|CLZ.W           R2, R1|177-250-129-242
68462|code|SUB.W           R3, R2, R3|162-235-3-3
68466|code|RSB.W           R3, R3, #0x1F|195-241-31-3
68470|code|ADR             R2, loc_10B88|4-162
68472|code|ADD.W           R3, R2, R3,LSL#4|2-235-3-19
68476|code|MOV.W           R2, #0|79-240-0-2
68480|code|MOV             PC, R3|159-70
68482|data|ALIGN 4|0-191
68484|code|NOP.W|175-243-0-128
68488|code|CMP.W           R0, R1,LSL#31|176-235-193-127
68492|code|NOP|0-191
68494|code|ADC.W           R2, R2, R2|66-235-2-2
68498|code|IT CS|40-191
68500|code|SUBCS.W         R0, R0, R1,LSL#31|160-235-193-112
68504|code|CMP.W           R0, R1,LSL#30|176-235-129-127
68508|code|NOP|0-191
68510|code|ADC.W           R2, R2, R2|66-235-2-2
68514|code|IT CS|40-191
68516|code|SUBCS.W         R0, R0, R1,LSL#30|160-235-129-112
68520|code|CMP.W           R0, R1,LSL#29|176-235-65-127
68524|code|NOP|0-191
68526|code|ADC.W           R2, R2, R2|66-235-2-2
68530|code|IT CS|40-191
68532|code|SUBCS.W         R0, R0, R1,LSL#29|160-235-65-112
68536|code|CMP.W           R0, R1,LSL#28|176-235-1-127
68540|code|NOP|0-191
68542|code|ADC.W           R2, R2, R2|66-235-2-2
68546|code|IT CS|40-191
68548|code|SUBCS.W         R0, R0, R1,LSL#28|160-235-1-112
68552|code|CMP.W           R0, R1,LSL#27|176-235-193-111
68556|code|NOP|0-191
68558|code|ADC.W           R2, R2, R2|66-235-2-2
68562|code|IT CS|40-191
68564|code|SUBCS.W         R0, R0, R1,LSL#27|160-235-193-96
68568|code|CMP.W           R0, R1,LSL#26|176-235-129-111
68572|code|NOP|0-191
68574|code|ADC.W           R2, R2, R2|66-235-2-2
68578|code|IT CS|40-191
68580|code|SUBCS.W         R0, R0, R1,LSL#26|160-235-129-96
68584|code|CMP.W           R0, R1,LSL#25|176-235-65-111
68588|code|NOP|0-191
68590|code|ADC.W           R2, R2, R2|66-235-2-2
68594|code|IT CS|40-191
68596|code|SUBCS.W         R0, R0, R1,LSL#25|160-235-65-96
68600|code|CMP.W           R0, R1,LSL#24|176-235-1-111
68604|code|NOP|0-191
68606|code|ADC.W           R2, R2, R2|66-235-2-2
68610|code|IT CS|40-191
68612|code|SUBCS.W         R0, R0, R1,LSL#24|160-235-1-96
68616|code|CMP.W           R0, R1,LSL#23|176-235-193-95
68620|code|NOP|0-191
68622|code|ADC.W           R2, R2, R2|66-235-2-2
68626|code|IT CS|40-191
68628|code|SUBCS.W         R0, R0, R1,LSL#23|160-235-193-80
68632|code|CMP.W           R0, R1,LSL#22|176-235-129-95
68636|code|NOP|0-191
68638|code|ADC.W           R2, R2, R2|66-235-2-2
68642|code|IT CS|40-191
68644|code|SUBCS.W         R0, R0, R1,LSL#22|160-235-129-80
68648|code|CMP.W           R0, R1,LSL#21|176-235-65-95
68652|code|NOP|0-191
68654|code|ADC.W           R2, R2, R2|66-235-2-2
68658|code|IT CS|40-191
68660|code|SUBCS.W         R0, R0, R1,LSL#21|160-235-65-80
68664|code|CMP.W           R0, R1,LSL#20|176-235-1-95
68668|code|NOP|0-191
68670|code|ADC.W           R2, R2, R2|66-235-2-2
68674|code|IT CS|40-191
68676|code|SUBCS.W         R0, R0, R1,LSL#20|160-235-1-80
68680|code|CMP.W           R0, R1,LSL#19|176-235-193-79
68684|code|NOP|0-191
68686|code|ADC.W           R2, R2, R2|66-235-2-2
68690|code|IT CS|40-191
68692|code|SUBCS.W         R0, R0, R1,LSL#19|160-235-193-64
68696|code|CMP.W           R0, R1,LSL#18|176-235-129-79
68700|code|NOP|0-191
68702|code|ADC.W           R2, R2, R2|66-235-2-2
68706|code|IT CS|40-191
68708|code|SUBCS.W         R0, R0, R1,LSL#18|160-235-129-64
68712|code|CMP.W           R0, R1,LSL#17|176-235-65-79
68716|code|NOP|0-191
68718|code|ADC.W           R2, R2, R2|66-235-2-2
68722|code|IT CS|40-191
68724|code|SUBCS.W         R0, R0, R1,LSL#17|160-235-65-64
68728|code|CMP.W           R0, R1,LSL#16|176-235-1-79
68732|code|NOP|0-191
68734|code|ADC.W           R2, R2, R2|66-235-2-2
68738|code|IT CS|40-191
68740|code|SUBCS.W         R0, R0, R1,LSL#16|160-235-1-64
68744|code|CMP.W           R0, R1,LSL#15|176-235-193-63
68748|code|NOP|0-191
68750|code|ADC.W           R2, R2, R2|66-235-2-2
68754|code|IT CS|40-191
68756|code|SUBCS.W         R0, R0, R1,LSL#15|160-235-193-48
68760|code|CMP.W           R0, R1,LSL#14|176-235-129-63
68764|code|NOP|0-191
68766|code|ADC.W           R2, R2, R2|66-235-2-2
68770|code|IT CS|40-191
68772|code|SUBCS.W         R0, R0, R1,LSL#14|160-235-129-48
68776|code|CMP.W           R0, R1,LSL#13|176-235-65-63
68780|code|NOP|0-191
68782|code|ADC.W           R2, R2, R2|66-235-2-2
68786|code|IT CS|40-191
68788|code|SUBCS.W         R0, R0, R1,LSL#13|160-235-65-48
68792|code|CMP.W           R0, R1,LSL#12|176-235-1-63
68796|code|NOP|0-191
68798|code|ADC.W           R2, R2, R2|66-235-2-2
68802|code|IT CS|40-191
68804|code|SUBCS.W         R0, R0, R1,LSL#12|160-235-1-48
68808|code|CMP.W           R0, R1,LSL#11|176-235-193-47
68812|code|NOP|0-191
68814|code|ADC.W           R2, R2, R2|66-235-2-2
68818|code|IT CS|40-191
68820|code|SUBCS.W         R0, R0, R1,LSL#11|160-235-193-32
68824|code|CMP.W           R0, R1,LSL#10|176-235-129-47
68828|code|NOP|0-191
68830|code|ADC.W           R2, R2, R2|66-235-2-2
68834|code|IT CS|40-191
68836|code|SUBCS.W         R0, R0, R1,LSL#10|160-235-129-32
68840|code|CMP.W           R0, R1,LSL#9|176-235-65-47
68844|code|NOP|0-191
68846|code|ADC.W           R2, R2, R2|66-235-2-2
68850|code|IT CS|40-191
68852|code|SUBCS.W         R0, R0, R1,LSL#9|160-235-65-32
68856|code|CMP.W           R0, R1,LSL#8|176-235-1-47
68860|code|NOP|0-191
68862|code|ADC.W           R2, R2, R2|66-235-2-2
68866|code|IT CS|40-191
68868|code|SUBCS.W         R0, R0, R1,LSL#8|160-235-1-32
68872|code|CMP.W           R0, R1,LSL#7|176-235-193-31
68876|code|NOP|0-191
68878|code|ADC.W           R2, R2, R2|66-235-2-2
68882|code|IT CS|40-191
68884|code|SUBCS.W         R0, R0, R1,LSL#7|160-235-193-16
68888|code|CMP.W           R0, R1,LSL#6|176-235-129-31
68892|code|NOP|0-191
68894|code|ADC.W           R2, R2, R2|66-235-2-2
68898|code|IT CS|40-191
68900|code|SUBCS.W         R0, R0, R1,LSL#6|160-235-129-16
68904|code|CMP.W           R0, R1,LSL#5|176-235-65-31
68908|code|NOP|0-191
68910|code|ADC.W           R2, R2, R2|66-235-2-2
68914|code|IT CS|40-191
68916|code|SUBCS.W         R0, R0, R1,LSL#5|160-235-65-16
68920|code|CMP.W           R0, R1,LSL#4|176-235-1-31
68924|code|NOP|0-191
68926|code|ADC.W           R2, R2, R2|66-235-2-2
68930|code|IT CS|40-191
68932|code|SUBCS.W         R0, R0, R1,LSL#4|160-235-1-16
68936|code|CMP.W           R0, R1,LSL#3|176-235-193-15
68940|code|NOP|0-191
68942|code|ADC.W           R2, R2, R2|66-235-2-2
68946|code|IT CS|40-191
68948|code|SUBCS.W         R0, R0, R1,LSL#3|160-235-193-0
68952|code|CMP.W           R0, R1,LSL#2|176-235-129-15
68956|code|NOP|0-191
68958|code|ADC.W           R2, R2, R2|66-235-2-2
68962|code|IT CS|40-191
68964|code|SUBCS.W         R0, R0, R1,LSL#2|160-235-129-0
68968|code|CMP.W           R0, R1,LSL#1|176-235-65-15
68972|code|NOP|0-191
68974|code|ADC.W           R2, R2, R2|66-235-2-2
68978|code|IT CS|40-191
68980|code|SUBCS.W         R0, R0, R1,LSL#1|160-235-65-0
68984|code|CMP.W           R0, R1|176-235-1-15
68988|code|NOP|0-191
68990|code|ADC.W           R2, R2, R2|66-235-2-2
68994|code|IT CS|40-191
68996|code|SUBCS.W         R0, R0, R1|160-235-1-0
69000|code|MOV             R0, R2|16-70
69002|code|BX              LR|112-71
69004|code|ITE EQ|12-191
69006|code|MOVEQ           R0, #1|1-32
69008|code|MOVNE           R0, #0|0-32
69010|code|BX              LR|112-71
69012|code|CLZ.W           R2, R1|177-250-129-242
69016|code|RSB.W           R2, R2, #0x1F|194-241-31-2
69020|code|LSR.W           R0, R0, R2|32-250-2-240
69024|code|BX              LR|112-71
69026|code|CBZ             R0, loc_10DA8|8-177
69028|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
69032|code|B.W             loc_11078|0-240-102-185
69036|code|CMP             R1, #0|0-41
69038|code|BEQ             loc_10DA2|248-208
69040|code|PUSH.W          {R0,R1,LR}|45-233-3-64
69044|code|BL              sub_10B50|255-247-204-254
69048|code|POP.W           {R1,R2,LR}|189-232-6-64
69052|code|MUL.W           R3, R2, R0|2-251-0-243
69056|code|SUB.W           R1, R1, R3|161-235-3-1
69060|code|BX              LR|112-71
69062|data|ALIGN 4|0-191
69064|code|CMP             R1, #0|0-41
69066|code|BEQ.W           loc_1104A|0-240-62-129
69070|code|EOR.W           R12, R0, R1|128-234-1-12
69074|code|IT MI|72-191
69076|code|NEGMI           R1, R1|73-66
69078|code|SUBS            R2, R1, #1|74-30
69080|code|BEQ.W           loc_1101A|0-240-31-129
69084|code|MOVS            R3, R0|3-0
69086|code|IT MI|72-191
69088|code|NEGMI           R3, R0|67-66
69090|code|CMP             R3, R1|139-66
69092|code|BLS.W           loc_11024|64-242-30-129
69096|code|TST             R1, R2|17-66
69098|code|BEQ.W           loc_11034|0-240-35-129
69102|code|CLZ.W           R2, R3|179-250-131-242
69106|code|CLZ.W           R0, R1|177-250-129-240
69110|code|SUB.W           R2, R0, R2|160-235-2-2
69114|code|RSB.W           R2, R2, #0x1F|194-241-31-2
69118|code|ADR             R0, loc_10E10|4-160
69120|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
69124|code|MOV.W           R0, #0|79-240-0-0
69128|code|MOV             PC, R2|151-70
69130|data|ALIGN 4|0-191
69132|code|NOP.W|175-243-0-128
69136|code|CMP.W           R3, R1,LSL#31|179-235-193-127
69140|code|NOP|0-191
69142|code|ADC.W           R0, R0, R0|64-235-0-0
69146|code|IT CS|40-191
69148|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
69152|code|CMP.W           R3, R1,LSL#30|179-235-129-127
69156|code|NOP|0-191
69158|code|ADC.W           R0, R0, R0|64-235-0-0
69162|code|IT CS|40-191
69164|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
69168|code|CMP.W           R3, R1,LSL#29|179-235-65-127
69172|code|NOP|0-191
69174|code|ADC.W           R0, R0, R0|64-235-0-0
69178|code|IT CS|40-191
69180|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
69184|code|CMP.W           R3, R1,LSL#28|179-235-1-127
69188|code|NOP|0-191
69190|code|ADC.W           R0, R0, R0|64-235-0-0
69194|code|IT CS|40-191
69196|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
69200|code|CMP.W           R3, R1,LSL#27|179-235-193-111
69204|code|NOP|0-191
69206|code|ADC.W           R0, R0, R0|64-235-0-0
69210|code|IT CS|40-191
69212|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
69216|code|CMP.W           R3, R1,LSL#26|179-235-129-111
69220|code|NOP|0-191
69222|code|ADC.W           R0, R0, R0|64-235-0-0
69226|code|IT CS|40-191
69228|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
69232|code|CMP.W           R3, R1,LSL#25|179-235-65-111
69236|code|NOP|0-191
69238|code|ADC.W           R0, R0, R0|64-235-0-0
69242|code|IT CS|40-191
69244|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
69248|code|CMP.W           R3, R1,LSL#24|179-235-1-111
69252|code|NOP|0-191
69254|code|ADC.W           R0, R0, R0|64-235-0-0
69258|code|IT CS|40-191
69260|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
69264|code|CMP.W           R3, R1,LSL#23|179-235-193-95
69268|code|NOP|0-191
69270|code|ADC.W           R0, R0, R0|64-235-0-0
69274|code|IT CS|40-191
69276|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
69280|code|CMP.W           R3, R1,LSL#22|179-235-129-95
69284|code|NOP|0-191
69286|code|ADC.W           R0, R0, R0|64-235-0-0
69290|code|IT CS|40-191
69292|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
69296|code|CMP.W           R3, R1,LSL#21|179-235-65-95
69300|code|NOP|0-191
69302|code|ADC.W           R0, R0, R0|64-235-0-0
69306|code|IT CS|40-191
69308|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
69312|code|CMP.W           R3, R1,LSL#20|179-235-1-95
69316|code|NOP|0-191
69318|code|ADC.W           R0, R0, R0|64-235-0-0
69322|code|IT CS|40-191
69324|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
69328|code|CMP.W           R3, R1,LSL#19|179-235-193-79
69332|code|NOP|0-191
69334|code|ADC.W           R0, R0, R0|64-235-0-0
69338|code|IT CS|40-191
69340|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
69344|code|CMP.W           R3, R1,LSL#18|179-235-129-79
69348|code|NOP|0-191
69350|code|ADC.W           R0, R0, R0|64-235-0-0
69354|code|IT CS|40-191
69356|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
69360|code|CMP.W           R3, R1,LSL#17|179-235-65-79
69364|code|NOP|0-191
69366|code|ADC.W           R0, R0, R0|64-235-0-0
69370|code|IT CS|40-191
69372|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
69376|code|CMP.W           R3, R1,LSL#16|179-235-1-79
69380|code|NOP|0-191
69382|code|ADC.W           R0, R0, R0|64-235-0-0
69386|code|IT CS|40-191
69388|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
69392|code|CMP.W           R3, R1,LSL#15|179-235-193-63
69396|code|NOP|0-191
69398|code|ADC.W           R0, R0, R0|64-235-0-0
69402|code|IT CS|40-191
69404|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
69408|code|CMP.W           R3, R1,LSL#14|179-235-129-63
69412|code|NOP|0-191
69414|code|ADC.W           R0, R0, R0|64-235-0-0
69418|code|IT CS|40-191
69420|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
69424|code|CMP.W           R3, R1,LSL#13|179-235-65-63
69428|code|NOP|0-191
69430|code|ADC.W           R0, R0, R0|64-235-0-0
69434|code|IT CS|40-191
69436|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
69440|code|CMP.W           R3, R1,LSL#12|179-235-1-63
69444|code|NOP|0-191
69446|code|ADC.W           R0, R0, R0|64-235-0-0
69450|code|IT CS|40-191
69452|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
69456|code|CMP.W           R3, R1,LSL#11|179-235-193-47
69460|code|NOP|0-191
69462|code|ADC.W           R0, R0, R0|64-235-0-0
69466|code|IT CS|40-191
69468|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
69472|code|CMP.W           R3, R1,LSL#10|179-235-129-47
69476|code|NOP|0-191
69478|code|ADC.W           R0, R0, R0|64-235-0-0
69482|code|IT CS|40-191
69484|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
69488|code|CMP.W           R3, R1,LSL#9|179-235-65-47
69492|code|NOP|0-191
69494|code|ADC.W           R0, R0, R0|64-235-0-0
69498|code|IT CS|40-191
69500|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
69504|code|CMP.W           R3, R1,LSL#8|179-235-1-47
69508|code|NOP|0-191
69510|code|ADC.W           R0, R0, R0|64-235-0-0
69514|code|IT CS|40-191
69516|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
69520|code|CMP.W           R3, R1,LSL#7|179-235-193-31
69524|code|NOP|0-191
69526|code|ADC.W           R0, R0, R0|64-235-0-0
69530|code|IT CS|40-191
69532|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
69536|code|CMP.W           R3, R1,LSL#6|179-235-129-31
69540|code|NOP|0-191
69542|code|ADC.W           R0, R0, R0|64-235-0-0
69546|code|IT CS|40-191
69548|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
69552|code|CMP.W           R3, R1,LSL#5|179-235-65-31
69556|code|NOP|0-191
69558|code|ADC.W           R0, R0, R0|64-235-0-0
69562|code|IT CS|40-191
69564|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
69568|code|CMP.W           R3, R1,LSL#4|179-235-1-31
69572|code|NOP|0-191
69574|code|ADC.W           R0, R0, R0|64-235-0-0
69578|code|IT CS|40-191
69580|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
69584|code|CMP.W           R3, R1,LSL#3|179-235-193-15
69588|code|NOP|0-191
69590|code|ADC.W           R0, R0, R0|64-235-0-0
69594|code|IT CS|40-191
69596|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
69600|code|CMP.W           R3, R1,LSL#2|179-235-129-15
69604|code|NOP|0-191
69606|code|ADC.W           R0, R0, R0|64-235-0-0
69610|code|IT CS|40-191
69612|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
69616|code|CMP.W           R3, R1,LSL#1|179-235-65-15
69620|code|NOP|0-191
69622|code|ADC.W           R0, R0, R0|64-235-0-0
69626|code|IT CS|40-191
69628|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
69632|code|CMP.W           R3, R1|179-235-1-15
69636|code|NOP|0-191
69638|code|ADC.W           R0, R0, R0|64-235-0-0
69642|code|IT CS|40-191
69644|code|SUBCS.W         R3, R3, R1|163-235-1-3
69648|code|CMP.W           R12, #0|188-241-0-15
69652|code|IT MI|72-191
69654|code|NEGMI           R0, R0|64-66
69656|code|BX              LR|112-71
69658|code|TEQ.W           R12, R0|156-234-0-15
69662|code|IT MI|72-191
69664|code|NEGMI           R0, R0|64-66
69666|code|BX              LR|112-71
69668|code|IT CC|56-191
69670|code|MOVCC           R0, #0|0-32
69672|code|ITT EQ|4-191
69674|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
69678|code|ORREQ.W         R0, R0, #1|64-240-1-0
69682|code|BX              LR|112-71
69684|code|CLZ.W           R2, R1|177-250-129-242
69688|code|RSB.W           R2, R2, #0x1F|194-241-31-2
69692|code|CMP.W           R12, #0|188-241-0-15
69696|code|LSR.W           R0, R3, R2|35-250-2-240
69700|code|IT MI|72-191
69702|code|NEGMI           R0, R0|64-66
69704|code|BX              LR|112-71
69706|code|CMP             R0, #0|0-40
69708|code|IT GT|200-191
69710|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
69714|code|IT LT|184-191
69716|code|MOVLT.W         R0, #0x80000000|79-240-0-64
69720|code|B.W             loc_11078|0-240-14-184
69724|code|CMP             R1, #0|0-41
69726|code|BEQ             loc_1104A|244-208
69728|code|PUSH.W          {R0,R1,LR}|45-233-3-64
69732|code|BL              loc_10DCE|255-247-179-254
69736|code|POP.W           {R1,R2,LR}|189-232-6-64
69740|code|MUL.W           R3, R2, R0|2-251-0-243
69744|code|SUB.W           R1, R1, R3|161-235-3-1
69748|code|BX              LR|112-71
69750|data|ALIGN 4|0-191
69752|code|PUSH            {R1,LR}|2-181
69754|code|MOV.W           R0, #8; sig|79-240-8-0
69758|code|BLX             raise|245-247-36-235
69762|code|POP             {R1,PC}|2-189
69764|code|PUSH.W          {R3-R9,LR}|45-233-248-67
69768|code|MOV             R7, R0|7-70
69770|code|LDR             R6, =(off_2480C - 0x11096)|12-78
69772|code|MOV             R8, R1|136-70
69774|code|LDR             R5, =(off_24808 - 0x1109C)|12-77
69776|code|MOV             R9, R2|145-70
69778|code|ADD             R6, PC; off_2480C|126-68
69780|code|BLX             .init_proc|245-247-226-232
69784|code|ADD             R5, PC; off_24808|125-68
69786|code|SUBS            R6, R6, R5|118-27
69788|code|ASRS            R6, R6, #2|182-16
69790|code|BEQ             locret_110B6|10-208
69792|code|SUBS            R5, #4|4-61
69794|code|MOVS            R4, #0|0-36
69796|code|ADDS            R4, #1|1-52
69798|code|LDR.W           R3, [R5,#4]!|85-248-4-63
69802|code|MOV             R0, R7|56-70
69804|code|MOV             R1, R8|65-70
69806|code|MOV             R2, R9|74-70
69808|code|BLX             R3|152-71
69810|code|CMP             R4, R6|180-66
69812|code|BNE             loc_110A4|246-209
69814|code|POP.W           {R3-R9,PC}|189-232-248-131
69818|data|ALIGN 4|0-191
69820|data|DCD off_2480C - 0x11096|118-55-1-0
69824|data|DCD off_24808 - 0x1109C|108-55-1-0
69828|code|BX              LR|112-71
69830|data|ALIGN 4|0-191
69832|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x110D0)|5-75
69834|code|LDR             R2, =(off_24F80 - 0x24CD4)|6-74
69836|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
69838|code|LDR             R3, [R3,R2]; off_25004|155-88
69840|code|CBZ             R3, loc_110DA|27-177
69842|code|LDR             R2, [R3]; off_25004 ; lpdso_handle|26-104
69844|code|MOVS            R1, #0; obj|0-33
69846|code|B.W             j___cxa_atexit|245-247-215-186
69850|code|MOV             R2, R3|26-70
69852|code|B               loc_110D4|250-231
69854|data|ALIGN 0x10|0-191
69856|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x110D0|4-60-1-0
69860|data|DCD off_24F80 - 0x24CD4|172-2-0-0
69864|code|PUSH            {R3,LR}; _fini|8-64-45-233
69868|code|POP             {R3,PC}|8-128-189-232
149512|data|DCD sub_6CF0+1|241-108-0-0
149516|data|DCD sub_6CB0+1|177-108-0-0
149520|data|DCD 0|0-0-0-0
149524|data|DCD off_24830; "tables-directory"|48-72-2-0
149544|data|DCD aBrlttyTrtxt; "brltty-trtxt"|120-17-1-0
149548|data|DCD aInputFile; "[{input-file | -} ...]"|136-17-1-0
149552|data|DCD aTablesDirector; "tables-directory"|160-17-1-0
149556|data|DCD aNoPrimaryOverr+0x14; "directory"|96-28-1-0
149564|data|DCD aEtcBrltty; "/etc/brltty"|180-17-1-0
149568|data|DCD aPathToDirector; "Path to directory for text tables."|192-17-1-0
149572|data|DCD dword_25054|84-80-2-0
149580|data|DCD aInputTable; "input-table"|228-17-1-0
149584|data|DCD aOutstandingCon+0x20; "file"|204-48-1-0
149592|data|DCD aAuto; "auto"|244-16-1-0
149596|data|DCD aPathToInputTex; "Path to input text table."|240-17-1-0
149600|data|DCD dword_25058|88-80-2-0
149604|data|ALIGN 8|0-0-0-0
149608|data|DCD aOutputTable; "output-table"|12-18-1-0
149612|data|DCD aOutstandingCon+0x20; "file"|204-48-1-0
149620|data|DCD aUnicode; "unicode"|252-16-1-0
149624|data|DCD aPathToOutputTe; "Path to output text table."|28-18-1-0
149628|data|DCD dword_2505C|92-80-2-0
149636|data|DCD aSixDots; "six-dots"|56-18-1-0
149652|data|DCD aRemoveDotsSeve; "Remove dots seven and eight."|68-18-1-0
149656|data|DCD dword_25048|72-80-2-0
149660|data|ALIGN 0x10|0-0-0-0
149664|data|DCD aHelp; "help"|100-18-1-0
149668|data|ALIGN 8|0-0-0-0
149672|data|DCD dword_68|104-0-0-0
149676|data|ALIGN 0x10|0-0-0-0
149680|data|DCD aPrintAUsageSum; "Print a usage summary (commonly used op"...|108-18-1-0
149684|data|ALIGN 8|0-0-0-0
149692|data|DCD aFullHelp; "full-help"|176-18-1-0
149708|data|DCD aPrintAUsageSum_0; "Print a usage summary (all options), an"...|188-18-1-0
149720|data|DCD aIngio; "ingio"|60-24-1-0
149724|data|DCD aGenericInput; "Generic Input"|68-24-1-0
149728|data|DCD aGenericInput_0; "generic input"|84-24-1-0
149732|data|DCD aInpkts; "inpkts"|100-24-1-0
149736|data|DCD aInputPackets; "Input Packets"|108-24-1-0
149740|data|DCD aInputPacket; "input packet"|124-24-1-0
149744|data|DCD aOutpkts; "outpkts"|140-24-1-0
149748|data|DCD aOutputPackets; "Output Packets"|148-24-1-0
149752|data|DCD aOutputPacket; "output packet"|164-24-1-0
149756|data|DCD aBrlkeys; "brlkeys"|180-24-1-0
149760|data|DCD aBrailleKeyEven; "Braille Key Events"|188-24-1-0
149764|data|DCD aBrailleKey; "braille key"|208-24-1-0
149768|data|DCD aKbdkeys; "kbdkeys"|220-24-1-0
149772|data|DCD aKeyboardKeyEve; "Keyboard Key Events"|228-24-1-0
149776|data|DCD aKeyboardKey; "keyboard key"|248-24-1-0
149780|data|DCD aCsrtrk; "csrtrk"|8-25-1-0
149784|data|DCD aCursorTracking; "Cursor Tracking"|16-25-1-0
149788|data|DCD aCursorTracking_0; "cursor tracking"|32-25-1-0
149792|data|DCD aCsrrtg; "csrrtg"|48-25-1-0
149796|data|DCD aCursorRouting; "Cursor Routing"|56-25-1-0
149800|data|DCD aCursorRouting_0; "cursor routing"|72-25-1-0
149804|data|DCD aUpdate; "update"|88-25-1-0
149808|data|DCD aUpdateEvents; "Update Events"|96-25-1-0
149812|data|DCD aUpdate; "update"|88-25-1-0
149816|data|DCD aSpeech; "speech"|112-25-1-0
149820|data|DCD aSpeechEvents; "Speech Events"|120-25-1-0
149824|data|DCD aSpeech; "speech"|112-25-1-0
149828|data|DCD aAsync; "async"|136-25-1-0
149832|data|DCD aAsyncEvents; "Async Events"|144-25-1-0
149836|data|DCD aAsync; "async"|136-25-1-0
149840|data|DCD aServer; "server"|160-25-1-0
149844|data|DCD aServerEvents; "Server Events"|168-25-1-0
149848|data|DCD aServer; "server"|160-25-1-0
149852|data|DCD aSerial; "serial"|184-25-1-0
149856|data|DCD aSerialIO; "Serial I/O"|192-25-1-0
149860|data|DCD aSerial; "serial"|184-25-1-0
149864|data|DCD aUsb; "usb"|204-25-1-0
149868|data|DCD aUsbIO; "USB I/O"|208-25-1-0
149872|data|DCD aUsb_0; "USB"|216-25-1-0
149876|data|DCD aBluetooth; "bluetooth"|220-25-1-0
149880|data|DCD aBluetoothIO; "Bluetooth I/O"|232-25-1-0
149884|data|DCD aBluetooth_0; "Bluetooth"|248-25-1-0
149888|data|DCD aBrldrv; "brldrv"|4-26-1-0
149892|data|DCD aBrailleDriverE; "Braille Driver Events"|12-26-1-0
149896|data|DCD aBrailleDriver; "braille driver"|36-26-1-0
149900|data|DCD aSpkdrv; "spkdrv"|52-26-1-0
149904|data|DCD aSpeechDriverEv; "Speech Driver Events"|60-26-1-0
149908|data|DCD aSpeechDriver; "speech driver"|84-26-1-0
149912|data|DCD aScrdrv; "scrdrv"|100-26-1-0
149916|data|DCD aScreenDriverEv; "Screen Driver Events"|108-26-1-0
149920|data|DCD aScreenDriver; "screen driver"|132-26-1-0
149924|data|DCD aEmergency; "emergency"|148-26-1-0
149928|data|DCD aAlert; "alert"|160-26-1-0
149932|data|DCD aCritical; "critical"|168-26-1-0
149936|data|DCD aError; "error"|180-26-1-0
149940|data|DCD aWarning; "warning"|188-26-1-0
149944|data|DCD aNotice; "notice"|196-26-1-0
149948|data|DCD aInformation; "information"|204-26-1-0
149952|data|DCD aDebug; "debug"|216-26-1-0
149956|data|DCD aDtdevroot; "DTDEVROOT"|4-29-1-0
149960|data|DCD aUtdevroot; "UTDEVROOT"|192-29-1-0
149964|data|ALIGN 0x10|0-0-0-0
149968|data|DCD sub_B374+1|117-179-0-0
149972|data|DCD aAlarmHandled; "alarm handled"|32-31-1-0
149976|data|DCD sub_B360+1|97-179-0-0
149980|data|DCD aTaskPerformed; "task performed"|48-31-1-0
149984|data|DCD sub_B354+1|85-179-0-0
149988|data|DCD aIOOperationHan; "I/O operation handled"|64-31-1-0
149996|data|DCD aWaitTimedOut; "wait timed out"|88-31-1-0
150000|data|DCD aInputTransferr; "input transferred"|204-31-1-0
150004|data|DCD sub_B944+1|69-185-0-0
150008|data|ALIGN 0x10|0-0-0-0-0-0-0-0
150016|data|DCD sub_BBB4+1|181-187-0-0
150020|data|ALIGN 8|0-0-0-0
150024|data|DCD sub_BAF4+1|245-186-0-0
150028|data|DCD aOutputTransfer; "output transferred"|184-31-1-0
150032|data|DCD sub_B94C+1|77-185-0-0
150036|data|ALIGN 8|0-0-0-0
150044|data|DCD sub_BBD8+1|217-187-0-0
150052|data|DCD sub_BA4C+1|77-186-0-0
150056|data|DCD aFileInputMonit; "file input monitor"|8-32-1-0
150060|data|DCD sub_B944+1|69-185-0-0
150064|data|ALIGN 0x20|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
150080|data|DCD sub_B9F0+1|241-185-0-0
150084|data|DCD aFileOutputMoni; "file output monitor"|244-31-1-0
150088|data|DCD sub_B94C+1|77-185-0-0
150092|data|ALIGN 0x10|0-0-0-0
150108|data|DCD sub_B9F0+1|241-185-0-0
150112|data|DCD aFileAlertMonit; "file alert monitor"|224-31-1-0
150116|data|DCD sub_B954+1|85-185-0-0
150136|data|DCD sub_B9F0+1|241-185-0-0
150140|data|DCD aUinput; "uinput"|172-43-1-0
150144|data|DCD aInputUinput; "input/uinput"|176-44-1-0
150148|data|ALIGN 8|0-0-0-0
150152|data|DCD dword_25020|32-80-2-0
150156|data|DCD dword_25024|36-80-2-0
150160|data|DCD off_116A8|168-22-1-0
150164|data|DCD processIncludeOperands+1|65-244-0-0
150172|data|DCD unk_116C8|200-22-1-0
150176|data|DCD processElseOperands+1|109-241-0-0
150184|data|DCD unk_116DC|220-22-1-0
150188|data|DCD processEndIfOperands+1|205-241-0-0
150196|data|DCD unk_116F4|244-22-1-0
150200|data|DCD processIfVarOperands+1|173-240-0-0
150208|data|DCD unk_1170C|12-23-1-0
150212|data|DCD processIfNotVarOperands+1|209-240-0-0
150220|data|DCD unk_11730|48-23-1-0
150224|data|DCD processAssignOperands+1|245-240-0-0
150228|data|ALIGN 8|0-0-0-0
150232|data|DCD unk_1174C|76-23-1-0
150236|data|DCD sub_77D4+1|213-119-0-0
150244|data|DCD unk_11764|100-23-1-0
150248|data|DCD sub_77B0+1|177-119-0-0
150252|data|ALIGN 0x10|0-0-0-0
150260|data|DCD sub_783C+1|61-120-0-0
150268|data|DCD aXt00; "xt00"|192-44-1-0
150272|data|DCD linuxKeyMap_xt00|96-41-1-0
150276|data|DCD dword_100|0-1-0-0
150280|data|DCD aXte0; "xtE0"|200-44-1-0
150284|data|DCD linuxKeyMap_xtE0|96-40-1-0
150288|data|DCD dword_100|0-1-0-0
150292|data|DCD aXte1; "xtE1"|208-44-1-0
150296|data|DCD linuxKeyMap_xtE1|96-39-1-0
150300|data|DCD dword_100|0-1-0-0
150304|data|DCD aAt00; "at00"|216-44-1-0
150308|data|DCD linuxKeyMap_at00|96-38-1-0
150312|data|DCD dword_100|0-1-0-0
150316|data|DCD aAte0; "atE0"|224-44-1-0
150320|data|DCD linuxKeyMap_atE0|96-37-1-0
150324|data|DCD dword_100|0-1-0-0
150328|data|DCD aAte1; "atE1"|232-44-1-0
150332|data|DCD linuxKeyMap_atE1|96-36-1-0
150336|data|DCD dword_100|0-1-0-0
150340|data|DCD aPs2; "ps2"|240-44-1-0
150344|data|DCD linuxKeyMap_ps2|96-35-1-0
150348|data|DCD dword_100|0-1-0-0
150352|data|DCD aHid; "hid"|244-44-1-0
150356|data|DCD linuxKeyMap_hid|96-34-1-0
150360|data|DCD dword_100|0-1-0-0
150364|data|DCD getBaseCharacter+1|225-244-0-0
150368|data|DCD getTransliteratedCharacter+1|57-245-0-0
150372|data|ALIGN 8|0-0-0-0
150376|data|DCD aC_0; "c"|108-68-1-0
150380|data|DCD sub_109D4+1|213-9-1-0
150388|data|DCD unk_14480|128-68-1-0
150392|data|DCD sub_1097C+1|125-9-1-0
150396|data|ALIGN 0x10|0-0-0-0
150400|data|DCD unk_14498|152-68-1-0
150404|data|DCD sub_10920+1|33-9-1-0
150412|data|DCD off_116A8|168-22-1-0
150416|data|DCD processIncludeOperands+1|65-244-0-0
150420|data|ALIGN 8|0-0-0-0
150436|data|Elf32_Dyn <1, <1>>; DT_NEEDED libicuuc.so.52|1-0-0-0-1-0-0-0
150444|data|Elf32_Dyn <1, <0xA7>>; DT_NEEDED libicudata.so.52|1-0-0-0-167-0-0-0
150452|data|Elf32_Dyn <1, <0xB8>>; DT_NEEDED libbluetooth.so.3|1-0-0-0-184-0-0-0
150460|data|Elf32_Dyn <1, <0xCA>>; DT_NEEDED libdl.so.2|1-0-0-0-202-0-0-0
150468|data|Elf32_Dyn <1, <0xF9>>; DT_NEEDED libgpm.so.2|1-0-0-0-249-0-0-0
150476|data|Elf32_Dyn <1, <0x105>>; DT_NEEDED libpthread.so.0|1-0-0-0-5-1-0-0
150484|data|Elf32_Dyn <1, <0x30A>>; DT_NEEDED libc.so.6|1-0-0-0-10-3-0-0
150492|data|Elf32_Dyn <1, <0x70D>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-13-7-0-0
150500|data|Elf32_Dyn <0xC, <0x625C>>; DT_INIT|12-0-0-0-92-98-0-0
150508|data|Elf32_Dyn <0xD, <0x110E8>>; DT_FINI|13-0-0-0-232-16-1-0
150516|data|Elf32_Dyn <0x19, <0x24808>>; DT_INIT_ARRAY|25-0-0-0-8-72-2-0
150524|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
150532|data|Elf32_Dyn <0x1A, <0x2480C>>; DT_FINI_ARRAY|26-0-0-0-12-72-2-0
150540|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
150548|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
150556|data|Elf32_Dyn <5, <0x30E8>>; DT_STRTAB|5-0-0-0-232-48-0-0
150564|data|Elf32_Dyn <6, <0xDF8>>; DT_SYMTAB|6-0-0-0-248-13-0-0
150572|data|Elf32_Dyn <0xA, <0x20F4>>; DT_STRSZ|10-0-0-0-244-32-0-0
150580|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
150588|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
150596|data|Elf32_Dyn <3, <0x24CD4>>; DT_PLTGOT|3-0-0-0-212-76-2-0
150604|data|Elf32_Dyn <2, <0x4C8>>; DT_PLTRELSZ|2-0-0-0-200-4-0-0
150612|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
150620|data|Elf32_Dyn <0x17, <0x5D94>>; DT_JMPREL|23-0-0-0-148-93-0-0
150628|data|Elf32_Dyn <0x11, <0x56EC>>; DT_REL|17-0-0-0-236-86-0-0
150636|data|Elf32_Dyn <0x12, <0x6A8>>; DT_RELSZ|18-0-0-0-168-6-0-0
150644|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
150652|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
150660|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
150668|data|Elf32_Dyn <0x6FFFFFFE, <0x563C>>; DT_VERNEED|254-255-255-111-60-86-0-0
150676|data|Elf32_Dyn <0x6FFFFFFF, <4>>; DT_VERNEEDNUM|255-255-255-111-4-0-0-0
150684|data|Elf32_Dyn <0x6FFFFFF0, <0x51DC>>; DT_VERSYM|240-255-255-111-220-81-0-0
150692|data|Elf32_Dyn <0x6FFFFFFA, <0xB6>>; DT_RELCOUNT|250-255-255-111-182-0-0-0
150700|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
150708|data|ALIGN 8|0-0-0-0
150740|data|DCD stru_24BA4|164-75-2-0
150744|data|DCD 0|0-0-0-0
150748|data|DCD dword_0|0-0-0-0
150752|data|DCD __imp_chdir|248-80-2-0
150756|data|DCD __imp_pthread_mutex_lock|0-81-2-0
150760|data|DCD __imp_localtime_r|4-81-2-0
150764|data|DCD __imp_wcslen|8-81-2-0
150768|data|DCD __imp_towlower|12-81-2-0
150772|data|DCD __imp_ftruncate|16-81-2-0
150776|data|DCD __imp_iswspace|20-81-2-0
150780|data|DCD __imp_getpid|24-81-2-0
150784|data|DCD __imp___memcpy_chk|28-81-2-0
150788|data|DCD __imp_mbrtowc|32-81-2-0
150792|data|DCD __imp_pthread_rwlock_destroy|36-81-2-0
150796|data|DCD __imp_dlerror|40-81-2-0
150800|data|DCD __imp_gettimeofday|44-81-2-0
150804|data|DCD __imp_strcasecmp|52-81-2-0
150808|data|DCD __imp_fdopen|56-81-2-0
150812|data|DCD __imp_strtol|60-81-2-0
150816|data|DCD __imp_free|64-81-2-0
150820|data|DCD __imp_dladdr|68-81-2-0
150824|data|DCD __imp_pthread_setname_np|76-81-2-0
150828|data|DCD __imp_qsort|80-81-2-0
150832|data|DCD __imp_strncmp|84-81-2-0
150836|data|DCD __imp___open_2|88-81-2-0
150840|data|DCD __imp_u_getIntPropertyValue_52|100-81-2-0
150844|data|DCD __imp_strerror|104-81-2-0
150848|data|DCD __imp___xmknod|108-81-2-0
150852|data|DCD __imp___vsnprintf_chk|112-81-2-0
150856|data|DCD __imp_dlclose|116-81-2-0
150860|data|DCD __imp_pthread_getname_np|120-81-2-0
150864|data|DCD __imp_feof|124-81-2-0
150868|data|DCD __imp_strtok|128-81-2-0
150872|data|DCD __imp_nl_langinfo|132-81-2-0
150876|data|DCD __imp_wmemcpy|136-81-2-0
150880|data|DCD __imp_sigfillset|140-81-2-0
150884|data|DCD __imp_textdomain|144-81-2-0
150888|data|DCD __imp_readlink|148-81-2-0
150892|data|DCD __imp___fprintf_chk|152-81-2-0
150896|data|DCD __imp_strtoul|156-81-2-0
150900|data|DCD __imp_nanosleep|160-81-2-0
150904|data|DCD __imp_strftime|164-81-2-0
150908|data|DCD __imp_memset|168-81-2-0
150912|data|DCD __imp_pthread_self|172-81-2-0
150916|data|DCD __imp_closelog|176-81-2-0
150920|data|DCD __imp_recv|180-81-2-0
150924|data|DCD __imp_fcntl|184-81-2-0
150928|data|DCD __imp_pthread_sigmask|188-81-2-0
150932|data|DCD __imp_pthread_rwlock_rdlock|192-81-2-0
150936|data|DCD __imp_wcschr|196-81-2-0
150940|data|DCD __imp_snprintf|200-81-2-0
150944|data|DCD __imp___strdup|204-81-2-0
150948|data|DCD __imp_sigaddset|208-81-2-0
150952|data|DCD __imp_close|212-81-2-0
150956|data|DCD __imp_wmemcmp|216-81-2-0
150960|data|DCD __imp_fopen|220-81-2-0
150964|data|DCD __imp_read|228-81-2-0
150968|data|DCD __imp_wmemchr|232-81-2-0
150972|data|DCD __imp_abort|236-81-2-0
150976|data|DCD __imp_pthread_once|240-81-2-0
150980|data|DCD __imp_poll|244-81-2-0
150984|data|DCD __imp___ctype_toupper_loc|248-81-2-0
150988|data|DCD __imp_memmove|252-81-2-0
150992|data|DCD __imp_strpbrk|0-82-2-0
150996|data|DCD __imp_dlopen|4-82-2-0
151000|data|DCD __imp___libc_current_sigrtmin|8-82-2-0
151004|data|DCD __imp_kill|12-82-2-0
151008|data|DCD __imp_ioctl|16-82-2-0
151012|data|DCD __imp_clock_gettime|20-82-2-0
151016|data|DCD __imp_realloc|24-82-2-0
151020|data|DCD __imp_strcpy|28-82-2-0
151024|data|DCD __imp_strtod|32-82-2-0
151028|data|DCD __imp_open|36-82-2-0
151032|data|DCD __imp_waitpid|40-82-2-0
151036|data|DCD __imp_fread|48-82-2-0
151040|data|DCD __imp_pthread_getspecific|52-82-2-0
151044|data|DCD __imp_fileno|56-82-2-0
151048|data|DCD __imp_pthread_rwlock_unlock|60-82-2-0
151052|data|DCD __imp___syslog_chk|68-82-2-0
151056|data|DCD __imp_pthread_rwlock_wrlock|72-82-2-0
151060|data|DCD __imp___stack_chk_fail|76-82-2-0
151064|data|DCD __imp_pthread_rwlock_tryrdlock|80-82-2-0
151068|data|DCD __imp_fork|84-82-2-0
151072|data|DCD __imp_access|88-82-2-0
151076|data|DCD __imp_sigdelset|92-82-2-0
151080|data|DCD __imp_dcgettext|96-82-2-0
151084|data|DCD __imp_mkdir|100-82-2-0
151088|data|DCD __imp___cxa_atexit|104-82-2-0
151092|data|DCD __imp_strncasecmp|108-82-2-0
151096|data|DCD __imp_pthread_key_create|112-82-2-0
151100|data|DCD __imp_getopt_long|116-82-2-0
151104|data|DCD __imp_lseek|120-82-2-0
151108|data|DCD __imp_raise|124-82-2-0
151112|data|DCD __imp___ctype_b_loc|128-82-2-0
151116|data|DCD __imp_bindtextdomain|132-82-2-0
151120|data|DCD __imp_sigaction|136-82-2-0
151124|data|DCD __imp_calloc|140-82-2-0
151128|data|DCD __imp_setlocale|144-82-2-0
151132|data|DCD __imp_ferror|148-82-2-0
151136|data|DCD __imp_iconv_close|152-82-2-0
151140|data|DCD __imp_fgets|156-82-2-0
151144|data|DCD __imp___fxstat|160-82-2-0
151148|data|DCD __imp_u_charFromName_52|164-82-2-0
151152|data|DCD __imp_flockfile|168-82-2-0
151156|data|DCD __imp_fputc|172-82-2-0
151160|data|DCD __imp_fwrite|176-82-2-0
151164|data|DCD __imp_memcpy|180-82-2-0
151168|data|DCD __imp_unorm_normalize_52|184-82-2-0
151172|data|DCD __imp_malloc|188-82-2-0
151176|data|DCD __imp_strlen|192-82-2-0
151180|data|DCD __imp___snprintf_chk|196-82-2-0
151184|data|DCD __imp_ioperm|200-82-2-0
151188|data|DCD __imp_outb|204-82-2-0
151192|data|DCD __imp_pthread_setspecific|208-82-2-0
151196|data|DCD __imp_getcwd|212-82-2-0
151200|data|DCD __imp_fclose|216-82-2-0
151204|data|DCD __imp_write|220-82-2-0
151208|data|DCD __imp_inb|224-82-2-0
151212|data|DCD __imp_sigismember|228-82-2-0
151216|data|DCD __imp_mempcpy|232-82-2-0
151220|data|DCD __imp___xstat|236-82-2-0
151224|data|DCD __imp_pthread_rwlock_trywrlock|240-82-2-0
151228|data|DCD __imp___realpath_chk|244-82-2-0
151232|data|DCD __imp_iconv_open|252-82-2-0
151236|data|DCD __imp_pthread_rwlock_init|0-83-2-0
151240|data|DCD __imp__exit|4-83-2-0
151244|data|DCD __imp_pthread_create|8-83-2-0
151248|data|DCD __imp_strcmp|12-83-2-0
151252|data|DCD __imp_iconv|16-83-2-0
151256|data|DCD __imp___errno_location|20-83-2-0
151260|data|DCD __imp_send|24-83-2-0
151264|data|DCD __imp_memchr|28-83-2-0
151268|data|DCD __imp_sscanf|32-83-2-0
151272|data|DCD __imp_strncpy|36-83-2-0
151276|data|DCD __imp_fflush|40-83-2-0
151280|data|DCD __imp_memcmp|44-83-2-0
151284|data|DCD __imp___libc_current_sigrtmax|48-83-2-0
151288|data|DCD __imp_sigemptyset|52-83-2-0
151292|data|DCD __imp_strrchr|56-83-2-0
151296|data|DCD __imp_funlockfile|60-83-2-0
151300|data|DCD __imp_mktime|64-83-2-0
151304|data|DCD __imp_openlog|68-83-2-0
151308|data|DCD __imp_fputs|76-83-2-0
151312|data|DCD __imp_getenv|80-83-2-0
151316|data|DCD __imp___libc_start_main|84-83-2-0
151320|data|DCD __imp_dlsym|88-83-2-0
151324|data|DCD __imp_execvp|92-83-2-0
151328|data|DCD __imp___gmon_start__|136-83-2-0
151332|data|DCD __imp_sigprocmask|96-83-2-0
151336|data|DCD __imp_mbsinit|100-83-2-0
151340|data|DCD __imp_strchr|104-83-2-0
151344|data|DCD __imp___cxa_finalize|108-83-2-0
151348|data|DCD __imp_pthread_mutex_unlock|112-83-2-0
151352|data|DCD __imp_wcrtomb|116-83-2-0
151356|data|DCD __imp_iswcntrl|120-83-2-0
151360|data|DCD __imp_pipe|124-83-2-0
151364|data|DCD logCategoryFlags|224-80-2-0
151368|data|DCD stdin|252-80-2-0
151372|data|DCD logLevelCount; "\b"|156-23-1-0
151376|data|DCD asyncAddSignalEntry+1|113-197-0-0
151380|data|DCD categoryLogLevel|8-80-2-0
151384|data|DCD stderrLogLevel|9-80-2-0
151388|data|DCD opterr|48-81-2-0
151392|data|DCD asyncHandleAddTaskEvent+1|145-184-0-0
151396|data|DCD standardStreamArgument; "-"|44-19-1-0
151400|data|DCD __stack_chk_guard|72-81-2-0
151404|data|DCD __progname|92-81-2-0
151408|data|DCD optind|96-81-2-0
151412|data|DCD main+1|233-105-0-0
151416|data|DCD asyncMonitorEventPipe+1|245-194-0-0
151420|data|DCD logCategoryName_all; "all"|164-23-1-0
151424|data|DCD off_25004|4-80-2-0
151428|data|DCD textTable|48-80-2-0
151432|data|DCD isHexadecimalDigit+1|189-223-0-0
151436|data|DCD standardOutputName; "<standard-output>"|4-19-1-0
151440|data|DCD optarg|224-81-2-0
151444|data|DCD standardInputName; "<standard-input>"|24-19-1-0
151448|data|DCD logLevelNames|164-73-2-0
151452|data|DCD brlDotBits|68-46-1-0
151456|data|DCD stderr|44-82-2-0
151460|data|DCD optopt|64-82-2-0
151464|data|DCD _Jv_RegisterClasses|128-83-2-0
151468|data|DCD linuxKeyMapDescriptors|252-74-2-0
151472|data|DCD endProgram+1|53-112-0-0
151476|data|DCD systemLogLevel|10-80-2-0
151480|data|DCD programName|216-80-2-0
151484|data|DCD prepareHostCommandStream+1|17-222-0-0
151488|data|DCD brlDotNumbers|76-46-1-0
151492|data|DCD isOctalDigit+1|241-223-0-0
151496|data|DCD __libc_csu_init+1|133-16-1-0
151500|data|DCD createSignalSafeThread+1|233-204-0-0
151504|data|DCD programPath|220-80-2-0
151508|data|DCD asyncHandlePendingSignal+1|73-200-0-0
151512|data|DCD stdout|248-82-2-0
151516|data|DCD defaultCharset; "ISO-8859-1"|12-49-1-0
151520|data|DCD _ITM_deregisterTMCloneTable|132-83-2-0
151524|data|DCD __libc_csu_fini+1|197-16-1-0
151528|data|DCD writableDirectory|132-80-2-0
151532|data|DCD __imp___gmon_start__|136-83-2-0
151536|data|DCD _ITM_registerTMCloneTable|140-83-2-0
151540|data|DCD asyncHandleMonitoredSignal+1|21-202-0-0
151544|data|DCD __imp___cxa_finalize|108-83-2-0
151548|data|DCD asyncDeleteSignalEntry+1|129-197-0-0
151604|data|% 1; Alternative name is '__bss_start__'|255
151605|data|ALIGN 4|255-255-255
151608|data|% 4|255-255-255-255
151612|data|% 4|255-255-255-255
151616|data|% 4|255-255-255-255
151620|data|% 4|255-255-255-255
151624|data|% 4|255-255-255-255
151628|data|% 4|255-255-255-255
151632|data|% 4|255-255-255-255
151636|data|% 4|255-255-255-255
151640|data|% 4|255-255-255-255
151644|data|% 4|255-255-255-255
151648|data|% 4|255-255-255-255
151652|data|% 4|255-255-255-255
151656|data|% 4|255-255-255-255
151660|data|% 4|255-255-255-255
151664|data|% 4|255-255-255-255
151668|data|% 4|255-255-255-255
151672|data|% 4|255-255-255-255
151676|data|% 4|255-255-255-255
151680|data|% 4|255-255-255-255
151684|data|% 4|255-255-255-255
151688|data|% 4|255-255-255-255
151692|data|% 4|255-255-255-255
151696|data|% 4|255-255-255-255
151700|data|% 1|255
151708|data|% 4|255-255-255-255
151712|data|% 4|255-255-255-255
151716|data|% 4|255-255-255-255
151720|data|% 1|255
151721|data|ALIGN 4|255-255-255
151728|data|% 4|255-255-255-255
151756|data|% 4|255-255-255-255
151760|data|% 4|255-255-255-255
151764|data|ALIGN 8|255-255-255-255
151768|data|% 4|255-255-255-255
