address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|125-156-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x88A8; SHT file offset|168-136-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x8530; File offset|48-133-0-0
32828|data|DCD unk_10530; Virtual address|48-5-1-0
32832|data|DCD 0x10530; Physical address|48-5-1-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibArmLinuxGnu; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x27; Size in file image|39-0-0-0
32904|data|DCD 0x27; Size in memory image|39-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x853C; Size in file image|60-133-0-0
32936|data|DCD 0x853C; Size in memory image|60-133-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x853C; File offset|60-133-0-0
32956|data|DCD off_1853C; Virtual address|60-133-1-0
32960|data|DCD 0x1853C; Physical address|60-133-1-0
32964|data|DCD 0x248; Size in file image|72-2-0-0
32968|data|DCD 0x350; Size in memory image|80-3-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x8548; File offset|72-133-0-0
32988|data|DCD stru_18548; Virtual address|72-133-1-0
32992|data|DCD 0x18548; Physical address|72-133-1-0
32996|data|DCD 0x100; Size in file image|0-1-0-0
33000|data|DCD 0x100; Size in memory image|0-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x15C; File offset|92-1-0-0
33020|data|DCD dword_815C; Virtual address|92-129-0-0
33024|data|DCD 0x815C; Physical address|92-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/arm-linux-gnueabihf/ld-linux.so.3",0|47-108-105-98-47-97-114-109-45-108-105-110-117-120-45-103-110-117-101-97-98-105-104-102-47-108-100-45-108-105-110-117-120-46-115-111-46-51-0
33115|data|DCB 0|0
33116|data|DCD 4; Name Size|4-0-0-0
33120|data|DCD 0x10; Desc Size|16-0-0-0
33124|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33128|data|DCB "GNU",0; Name|71-78-85-0
33132|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33148|data|DCD 4; Name Size|4-0-0-0
33152|data|DCD 0x14; Desc Size|20-0-0-0
33156|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33160|data|DCB "GNU",0; Name|71-78-85-0
33164|data|DCB 0x72, 0x89, 0x74, 0x19, 0xC2, 1, 0xF3, 0x78, 0x9C; Desc|114-137-116-25-194-1-243-120-156-149-39-86-31-250-24-96-158-121-115-224
33184|data|DCD 0x43|67-0-0-0
33188|data|DCD 0x50|80-0-0-0
33192|data|DCD 0, 2, 0, 0x24, 0x47, 0x49, 0x16, 0x11, 0x4D, 0x10|0-0-0-0-2-0-0-0-0-0-0-0-36-0-0-0-71-0-0-0-73-0-0-0-22-0-0-0-17-0-0-0-77-0-0-0-16-0-0-0-27-0-0-0-35-0-0-0-30-0-0-0-0-0-0-0-9-0-0-0-32-0-0-0-0-0-0-0-0-0-0-0-69-0-0-0-28-0-0-0-0-0-0-0-21-0-0-0-26-0-0-0-70-0-0-0-0-0-0-0-59-0-0-0-43-0-0-0-0-0-0-0-23-0-0-0-37-0-0-0-78-0-0-0-0-0-0-0-18-0-0-0-0-0-0-0-41-0-0-0-1-0-0-0-0-0-0-0-11-0-0-0-64-0-0-0-60-0-0-0-0-0-0-0-50-0-0-0-0-0-0-0-67-0-0-0-0-0-0-0-5-0-0-0-0-0-0-0-0-0-0-0-6-0-0-0-0-0-0-0-0-0-0-0-25-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-79-0-0-0-31-0-0-0-58-0-0-0-13-0-0-0-54-0-0-0-42-0-0-0-46-0-0-0-68-0-0-0-0-0-0-0-63-0-0-0-3-0-0-0-57-0-0-0
33460|data|DCD 0, 0x33, 0x13, 0, 0, 0xC, 0, 0x31, 0x42, 7, 0, 0, 0x34|0-0-0-0-51-0-0-0-19-0-0-0-0-0-0-0-0-0-0-0-12-0-0-0-0-0-0-0-49-0-0-0-66-0-0-0-7-0-0-0-0-0-0-0-0-0-0-0-52-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-53-0-0-0-61-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-34-0-0-0-0-0-0-0-45-0-0-0-0-0-0-0-75-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-39-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-15-0-0-0-20-0-0-0-0-0-0-0-0-0-0-0-56-0-0-0-0-0-0-0-0-0-0-0-4-0-0-0-76-0-0-0-10-0-0-0-0-0-0-0-33-0-0-0-0-0-0-0-72-0-0-0-62-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-48-0-0-0-47-0-0-0-29-0-0-0-55-0-0-0-0-0-0-0-0-0-0-0-44-0-0-0-0-0-0-0-38-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-40-0-0-0-14-0-0-0-0-0-0-0-0-0-0-0-8-0-0-0-0-0-0-0-74-0-0-0-0-0-0-0-65-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-24-0-0-0
33780|data|DCD 0x43|67-0-0-0
33784|data|DCD 3|3-0-0-0
33788|data|DCD 0x10|16-0-0-0
33792|data|DCD 9|9-0-0-0
33796|data|DCD 0x49F0C1A5, 0x971B6085, 0x59002800, 0x10510208, 0x15100082|165-193-240-73-133-96-27-151-0-40-0-89-8-2-81-16-130-0-16-21-32-32-7-1-128-12-64-0-16-41-76-194-130-136-130-40-19-65-64-117-66-34-129-4-208-4-64-32-160-0-1-100-0-68-176-9-99-82-148-16-12-16-80-65
33860|data|DCD 3, 0, 4, 0, 0, 0, 5, 7, 9, 0xA, 0xE, 0, 0x10, 0x12|3-0-0-0-0-0-0-0-4-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-5-0-0-0-7-0-0-0-9-0-0-0-10-0-0-0-14-0-0-0-0-0-0-0-16-0-0-0-18-0-0-0-20-0-0-0-22-0-0-0-0-0-0-0-0-0-0-0-24-0-0-0-26-0-0-0-0-0-0-0-28-0-0-0-32-0-0-0-34-0-0-0-36-0-0-0-0-0-0-0-0-0-0-0-38-0-0-0-40-0-0-0-0-0-0-0-42-0-0-0-44-0-0-0-45-0-0-0-46-0-0-0-0-0-0-0-47-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-48-0-0-0-49-0-0-0-0-0-0-0-50-0-0-0-51-0-0-0-0-0-0-0-54-0-0-0-0-0-0-0-57-0-0-0-58-0-0-0-60-0-0-0-0-0-0-0-61-0-0-0-0-0-0-0-62-0-0-0-0-0-0-0-63-0-0-0-0-0-0-0-64-0-0-0-66-0-0-0-68-0-0-0-70-0-0-0-72-0-0-0-73-0-0-0-74-0-0-0-76-0-0-0-77-0-0-0-0-0-0-0
34128|data|DCD 0x7C95E5C1, 0x3E48FCE9, 0x526629CE, 0xF11ED7D, 0x1C8BF238|193-229-149-124-233-252-72-62-206-41-102-82-125-237-17-15-56-242-139-28-23-234-118-254-87-211-166-4-44-50-64-253-102-85-97-16-4-108-178-205-243-190-71-62-60-173-57-13-41-29-140-28-0-35-249-164-173-112-14-175-80-181-168-16-21-64-121-11-242-22-230-245-149-120-158-124-22-227-63-15-47-78-61-246-128-116-130-13-179-162-247-18-50-196-247-18-35-190-15-175-32-98-100-7-144-117-130-13-46-3-49-28-175-111-136-11-94-150-147-28-135-240-150-124-24-220-119-137-177-74-69-75-26-159-214-189-9-172-249-143-184-43-107-21-199-195-238-28-254-236-132-20-17-123-156-124-102-73-73-34-255-199-60-16-31-246-92-16-215-148-147-28-135-75-133-230-65-77-157-124-99-172-97-160-227-173-198-27-117-18-236-167-198-14-224-61-156-187-147-28-93-240-108-15-62-126-150-124-62-249-255-188-249-44-88-190-37-117-130-13-236-136-101-7-91-154-59-15-57-64-12-175-181-233-90-241-57-232-68-16-201-57-64-31-124-96-156-124-33-49-231-75-86-219-147-28-245-241-171-186-6-174-213-39-49-184-130-13-246-228-16-209-187-149-147-28-197-111-73-62-45-180-56-82-202-150-147-28-205-205-132-124-159-251-110-15-226-153-148-124-10-15-181-165-15-132-29-230
34436|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34452|data|Elf32_Sym <aGmonStart - byte_8B84, 0, 0, 0x20, 0, 0>; "__gmon_start__"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34468|data|Elf32_Sym <aJvRegisterclas - byte_8B84, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|29-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34484|data|Elf32_Sym <aDup2 - byte_8B84, dup2, 0, 0x12, 0, 0>; "dup2"|128-1-0-0-220-146-0-0-0-0-0-0-18-0-0-0
34500|data|Elf32_Sym <aRegexec - byte_8B84, regexec, 0, 0x12, 0, 0>; "regexec"|144-0-0-0-244-146-0-0-0-0-0-0-18-0-0-0
34516|data|Elf32_Sym <aFreeaddrinfo - byte_8B84, freeaddrinfo, 0, 0x12, 0, 0>; "freeaddrinfo"|78-2-0-0-220-148-0-0-0-0-0-0-18-0-0-0
34532|data|Elf32_Sym <aAbort - byte_8B84, abort, 0, 0x12, 0, 0>; "abort"|254-0-0-0-0-149-0-0-0-0-0-0-18-0-0-0
34548|data|Elf32_Sym <aStderr - byte_8B84, stderr, 4, 0x11, 0, 0x19>; "stderr"|245-1-0-0-144-135-1-0-4-0-0-0-17-0-25-0
34564|data|Elf32_Sym <aFwrite - byte_8B84, fwrite, 0, 0x12, 0, 0>; "fwrite"|8-2-0-0-36-147-0-0-0-0-0-0-18-0-0-0
34580|data|Elf32_Sym <aTcgetattr - byte_8B84, tcgetattr, 0, 0x12, 0, 0>; "tcgetattr"|62-2-0-0-48-149-0-0-0-0-0-0-18-0-0-0
34596|data|Elf32_Sym <aFflush - byte_8B84, fflush, 0, 0x12, 0, 0>; "fflush"|89-0-0-0-72-146-0-0-0-0-0-0-18-0-0-0
34612|data|Elf32_Sym <aStdin - byte_8B84, stdin, 4, 0x11, 0, 0x19>; "stdin"|4-1-0-0-152-135-1-0-4-0-0-0-17-0-25-0
34628|data|Elf32_Sym <aStrdup - byte_8B84, __strdup, 0, 0x12, 0, 0>; "__strdup"|152-0-0-0-52-148-0-0-0-0-0-0-18-0-0-0
34644|data|Elf32_Sym <aRegcomp - byte_8B84, regcomp, 0, 0x12, 0, 0>; "regcomp"|230-1-0-0-184-148-0-0-0-0-0-0-18-0-0-0
34660|data|Elf32_Sym <aMalloc - byte_8B84, malloc, 0, 0x12, 0, 0>; "malloc"|196-1-0-0-120-147-0-0-0-0-0-0-18-0-0-0
34676|data|Elf32_Sym <aStdout - byte_8B84, stdout, 4, 0x11, 0, 0x19>; "stdout"|154-1-0-0-156-135-1-0-4-0-0-0-17-0-25-0
34692|data|Elf32_Sym <aErrnoLocation - byte_8B84, __errno_location, 0, 0x12, 0, \; "__errno_location"|84-1-0-0-16-148-0-0-0-0-0-0-18-0-0-0
34708|data|Elf32_Sym <aStrrchr - byte_8B84, strrchr, 0, 0x12, 0, 0>; "strrchr"|136-0-0-0-136-148-0-0-0-0-0-0-18-0-0-0
34724|data|Elf32_Sym <aFwrite+1 - byte_8B84, write, 0, 0x12, 0, 0>; "write"|9-2-0-0-112-148-0-0-0-0-0-0-18-0-0-0
34740|data|Elf32_Sym <aListen - byte_8B84, listen, 0, 0x12, 0, 0>; "listen"|239-0-0-0-148-148-0-0-0-0-0-0-18-0-0-0
34756|data|Elf32_Sym <aCalloc - byte_8B84, calloc, 0, 0x12, 0, 0>; "calloc"|44-1-0-0-220-145-0-0-0-0-0-0-18-0-0-0
34772|data|Elf32_Sym <aCtime+1 - byte_8B84, time, 0, 0x12, 0, 0>; "time"|149-1-0-0-160-146-0-0-0-0-0-0-18-0-0-0
34788|data|Elf32_Sym <aCtime - byte_8B84, ctime, 0, 0x12, 0, 0>; "ctime"|148-1-0-0-196-146-0-0-0-0-0-0-18-0-0-0
34804|data|Elf32_Sym <aLibcStartMain - byte_8B84, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|112-2-0-0-132-147-0-0-0-0-0-0-18-0-0-0
34820|data|Elf32_Sym <aMemchr - byte_8B84, memchr, 0, 0x12, 0, 0>; "memchr"|10-1-0-0-124-148-0-0-0-0-0-0-18-0-0-0
34836|data|Elf32_Sym <aOptarg - byte_8B84, optarg, 4, 0x11, 0, 0x19>; "optarg"|238-1-0-0-160-135-1-0-4-0-0-0-17-0-25-0
34852|data|Elf32_Sym <aOptind - byte_8B84, optind, 4, 0x11, 0, 0x19>; "optind"|129-0-0-0-140-135-1-0-4-0-0-0-17-0-25-0
34868|data|Elf32_Sym <aStrtoul - byte_8B84, strtoul, 0, 0x12, 0, 0>; "strtoul"|177-1-0-0-208-147-0-0-0-0-0-0-18-0-0-0
34884|data|Elf32_Sym <aStackChkGuard - byte_8B84, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|144-2-0-0-136-135-1-0-4-0-0-0-17-0-25-0
34900|data|Elf32_Sym <aMemcpy - byte_8B84, memcpy, 0, 0x12, 0, 0>; "memcpy"|170-1-0-0-136-146-0-0-0-0-0-0-18-0-0-0
34916|data|Elf32_Sym <aSocket - byte_8B84, socket, 0, 0x12, 0, 0>; "socket"|67-0-0-0-244-148-0-0-0-0-0-0-18-0-0-0
34932|data|Elf32_Sym <aStderr+3 - byte_8B84, err+1, 0x1C, 0x12, 0, 0xE>; "err"|248-1-0-0-217-159-0-0-28-0-0-0-18-0-14-0
34948|data|Elf32_Sym <aStrcmp - byte_8B84, strcmp, 0, 0x12, 0, 0>; "strcmp"|105-2-0-0-12-146-0-0-0-0-0-0-18-0-0-0
34964|data|Elf32_Sym <aRegfree+3 - byte_8B84, free, 0, 0x12, 0, 0>; "free"|217-0-0-0-100-146-0-0-0-0-0-0-18-0-0-0
34980|data|Elf32_Sym <aGaiStrerror - byte_8B84, gai_strerror, 0, 0x12, 0, 0>; "gai_strerror"|116-0-0-0-112-146-0-0-0-0-0-0-18-0-0-0
34996|data|Elf32_Sym <aAssertFail - byte_8B84, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|17-1-0-0-36-149-0-0-0-0-0-0-18-0-0-0
35012|data|Elf32_Sym <aMemmove - byte_8B84, memmove, 0, 0x12, 0, 0>; "memmove"|97-2-0-0-84-146-0-0-0-0-0-0-18-0-0-0
35028|data|Elf32_Sym <aGaiStrerror+4 - byte_8B84, strerror, 0, 0x12, 0, 0>; "strerror"|120-0-0-0-144-147-0-0-0-0-0-0-18-0-0-0
35044|data|Elf32_Sym <aFprintf+1 - byte_8B84, printf, 0, 0x12, 0, 0>; "printf"|42-2-0-0-36-146-0-0-0-0-0-0-18-0-0-0
35060|data|Elf32_Sym <aSyslog - byte_8B84, syslog, 0, 0x12, 0, 0>; "syslog"|31-1-0-0-160-148-0-0-0-0-0-0-18-0-0-0
35076|data|Elf32_Sym <aPerror - byte_8B84, perror, 0, 0x12, 0, 0>; "perror"|171-0-0-0-0-147-0-0-0-0-0-0-18-0-0-0
35092|data|Elf32_Sym <aPuts - byte_8B84, puts, 0, 0x12, 0, 0>; "puts"|209-0-0-0-108-147-0-0-0-0-0-0-18-0-0-0
35108|data|Elf32_Sym <aCtypeBLoc - byte_8B84, __ctype_b_loc, 0, 0x12, 0, 0>; "__ctype_b_loc"|216-1-0-0-184-147-0-0-0-0-0-0-18-0-0-0
35124|data|Elf32_Sym <aQsort - byte_8B84, qsort, 0, 0x12, 0, 0>; "qsort"|49-2-0-0-208-148-0-0-0-0-0-0-18-0-0-0
35140|data|Elf32_Sym <aSleep - byte_8B84, sleep, 0, 0x12, 0, 0>; "sleep"|72-2-0-0-184-146-0-0-0-0-0-0-18-0-0-0
35156|data|Elf32_Sym <aStrcat - byte_8B84, strcat, 0, 0x12, 0, 0>; "strcat"|203-1-0-0-48-147-0-0-0-0-0-0-18-0-0-0
35172|data|Elf32_Sym <aGettimeofday - byte_8B84, gettimeofday, 0, 0x12, 0, 0>; "gettimeofday"|15-2-0-0-96-147-0-0-0-0-0-0-18-0-0-0
35188|data|Elf32_Sym <aRead - byte_8B84, read, 0, 0x12, 0, 0>; "read"|116-1-0-0-60-146-0-0-0-0-0-0-18-0-0-0
35204|data|Elf32_Sym <aTcsetattr - byte_8B84, tcsetattr, 0, 0x12, 0, 0>; "tcsetattr"|101-1-0-0-72-147-0-0-0-0-0-0-18-0-0-0
35220|data|Elf32_Sym <aSignal - byte_8B84, signal, 0, 0x12, 0, 0>; "signal"|194-0-0-0-148-146-0-0-0-0-0-0-18-0-0-0
35236|data|Elf32_Sym <aSetsockopt - byte_8B84, setsockopt, 0, 0x12, 0, 0>; "setsockopt"|185-1-0-0-24-146-0-0-0-0-0-0-18-0-0-0
35252|data|Elf32_Sym <aRealloc - byte_8B84, realloc, 0, 0x12, 0, 0>; "realloc"|246-0-0-0-232-146-0-0-0-0-0-0-18-0-0-0
35268|data|Elf32_Sym <aStrlen - byte_8B84, strlen, 0, 0x12, 0, 0>; "strlen"|51-1-0-0-220-147-0-0-0-0-0-0-18-0-0-0
35284|data|Elf32_Sym <aFcntl - byte_8B84, fcntl, 0, 0x12, 0, 0>; "fcntl"|91-2-0-0-4-148-0-0-0-0-0-0-18-0-0-0
35300|data|Elf32_Sym <aExit - byte_8B84, exit, 0, 0x12, 0, 0>; "exit"|103-0-0-0-196-147-0-0-0-0-0-0-18-0-0-0
35316|data|Elf32_Sym <aFprintf - byte_8B84, fprintf, 0, 0x12, 0, 0>; "fprintf"|41-2-0-0-248-147-0-0-0-0-0-0-18-0-0-0
35332|data|Elf32_Sym <aVsnprintf+1 - byte_8B84, snprintf, 0, 0x12, 0, 0>; "snprintf"|134-1-0-0-28-148-0-0-0-0-0-0-18-0-0-0
35348|data|Elf32_Sym <aMemcmp - byte_8B84, memcmp, 0, 0x12, 0, 0>; "memcmp"|121-1-0-0-172-146-0-0-0-0-0-0-18-0-0-0
35364|data|Elf32_Sym <aRegerror - byte_8B84, regerror, 0, 0x12, 0, 0>; "regerror"|161-1-0-0-48-146-0-0-0-0-0-0-18-0-0-0
35380|data|Elf32_Sym <aClose - byte_8B84, close, 0, 0x12, 0, 0>; "close"|28-2-0-0-12-149-0-0-0-0-0-0-18-0-0-0
35396|data|Elf32_Sym <aStrncpy - byte_8B84, strncpy, 0, 0x12, 0, 0>; "strncpy"|201-0-0-0-88-148-0-0-0-0-0-0-18-0-0-0
35412|data|Elf32_Sym <aAccept - byte_8B84, accept, 0, 0x12, 0, 0>; "accept"|55-2-0-0-24-147-0-0-0-0-0-0-18-0-0-0
35428|data|Elf32_Sym <aRaise - byte_8B84, raise, 0, 0x12, 0, 0>; "raise"|210-1-0-0-244-145-0-0-0-0-0-0-18-0-0-0
35444|data|Elf32_Sym <aStackChkFail - byte_8B84, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|222-0-0-0-208-146-0-0-0-0-0-0-18-0-0-0
35460|data|Elf32_Sym <aPoll - byte_8B84, poll, 0, 0x12, 0, 0>; "poll"|143-1-0-0-12-147-0-0-0-0-0-0-18-0-0-0
35476|data|Elf32_Sym <aIsoc99Sscanf - byte_8B84, __isoc99_sscanf, 0, 0x12, 0, 0>; "__isoc99_sscanf"|178-0-0-0-40-148-0-0-0-0-0-0-18-0-0-0
35492|data|Elf32_Sym <aStrstr - byte_8B84, strstr, 0, 0x12, 0, 0>; "strstr"|77-1-0-0-232-145-0-0-0-0-0-0-18-0-0-0
35508|data|Elf32_Sym <aForkpty - byte_8B84, forkpty, 0, 0x12, 0, 0>; "forkpty"|49-0-0-0-24-149-0-0-0-0-0-0-18-0-0-0
35524|data|Elf32_Sym <aGetoptLong - byte_8B84, getopt_long, 0, 0x12, 0, 0>; "getopt_long"|252-1-0-0-172-147-0-0-0-0-0-0-18-0-0-0
35540|data|Elf32_Sym <aMemset - byte_8B84, memset, 0, 0x12, 0, 0>; "memset"|70-1-0-0-76-148-0-0-0-0-0-0-18-0-0-0
35556|data|Elf32_Sym <aCfmakeraw - byte_8B84, cfmakeraw, 0, 0x12, 0, 0>; "cfmakeraw"|161-0-0-0-0-146-0-0-0-0-0-0-18-0-0-0
35572|data|Elf32_Sym <aStrchr - byte_8B84, strchr, 0, 0x12, 0, 0>; "strchr"|34-2-0-0-232-147-0-0-0-0-0-0-18-0-0-0
35588|data|Elf32_Sym <aRegfree - byte_8B84, regfree, 0, 0x12, 0, 0>; "regfree"|214-0-0-0-60-147-0-0-0-0-0-0-18-0-0-0
35604|data|Elf32_Sym <aXpgBasename - byte_8B84, __xpg_basename, 0, 0x12, 0, 0>; "__xpg_basename"|74-0-0-0-100-148-0-0-0-0-0-0-18-0-0-0
35620|data|Elf32_Sym <aStrcpy - byte_8B84, strcpy, 0, 0x12, 0, 0>; "strcpy"|96-0-0-0-84-147-0-0-0-0-0-0-18-0-0-0
35636|data|Elf32_Sym <aGetaddrinfo - byte_8B84, getaddrinfo, 0, 0x12, 0, 0>; "getaddrinfo"|58-1-0-0-232-148-0-0-0-0-0-0-18-0-0-0
35652|data|Elf32_Sym <aFgets - byte_8B84, fgets, 0, 0x12, 0, 0>; "fgets"|38-1-0-0-124-146-0-0-0-0-0-0-18-0-0-0
35668|data|Elf32_Sym <aBind - byte_8B84, bind, 0, 0x12, 0, 0>; "bind"|111-1-0-0-64-148-0-0-0-0-0-0-18-0-0-0
35684|data|Elf32_Sym <aSprintf - byte_8B84, sprintf, 0, 0x12, 0, 0>; "sprintf"|108-0-0-0-172-148-0-0-0-0-0-0-18-0-0-0
35700|data|Elf32_Sym <aVsnprintf - byte_8B84, vsnprintf, 0, 0x12, 0, 0>; "vsnprintf"|133-1-0-0-196-148-0-0-0-0-0-0-18-0-0-0
35716|data|DCB 0|0
35717|data|DCB "libutil.so.1",0|108-105-98-117-116-105-108-46-115-111-46-49-0
35730|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
35745|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
35765|data|DCB "forkpty",0|102-111-114-107-112-116-121-0
35773|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
35783|data|DCB "socket",0|115-111-99-107-101-116-0
35790|data|DCB "__xpg_basename",0|95-95-120-112-103-95-98-97-115-101-110-97-109-101-0
35805|data|DCB "fflush",0|102-102-108-117-115-104-0
35812|data|DCB "strcpy",0|115-116-114-99-112-121-0
35819|data|DCB "exit",0|101-120-105-116-0
35824|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
35832|data|DCB "gai_strerror",0|103-97-105-95-115-116-114-101-114-114-111-114-0
35845|data|DCB "optind",0|111-112-116-105-110-100-0
35852|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
35860|data|DCB "regexec",0|114-101-103-101-120-101-99-0
35868|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
35877|data|DCB "cfmakeraw",0|99-102-109-97-107-101-114-97-119-0
35887|data|DCB "perror",0|112-101-114-114-111-114-0
35894|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
35910|data|DCB "signal",0|115-105-103-110-97-108-0
35917|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
35925|data|DCB "puts",0|112-117-116-115-0
35930|data|DCB "regfree",0|114-101-103-102-114-101-101-0
35938|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
35955|data|DCB "listen",0|108-105-115-116-101-110-0
35962|data|DCB "realloc",0|114-101-97-108-108-111-99-0
35970|data|DCB "abort",0|97-98-111-114-116-0
35976|data|DCB "stdin",0|115-116-100-105-110-0
35982|data|DCB "memchr",0|109-101-109-99-104-114-0
35989|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
36003|data|DCB "syslog",0|115-121-115-108-111-103-0
36010|data|DCB "fgets",0|102-103-101-116-115-0
36016|data|DCB "calloc",0|99-97-108-108-111-99-0
36023|data|DCB "strlen",0|115-116-114-108-101-110-0
36030|data|DCB "getaddrinfo",0|103-101-116-97-100-100-114-105-110-102-111-0
36042|data|DCB "memset",0|109-101-109-115-101-116-0
36049|data|DCB "strstr",0|115-116-114-115-116-114-0
36056|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
36073|data|DCB "tcsetattr",0|116-99-115-101-116-97-116-116-114-0
36083|data|DCB "bind",0|98-105-110-100-0
36088|data|DCB "read",0|114-101-97-100-0
36093|data|DCB "memcmp",0|109-101-109-99-109-112-0
36100|data|DCB "dup2",0|100-117-112-50-0
36105|data|DCB "vsnprintf",0|118-115-110-112-114-105-110-116-102-0
36115|data|DCB "poll",0|112-111-108-108-0
36120|data|DCB "ctime",0|99-116-105-109-101-0
36126|data|DCB "stdout",0|115-116-100-111-117-116-0
36133|data|DCB "regerror",0|114-101-103-101-114-114-111-114-0
36142|data|DCB "memcpy",0|109-101-109-99-112-121-0
36149|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
36157|data|DCB "setsockopt",0|115-101-116-115-111-99-107-111-112-116-0
36168|data|DCB "malloc",0|109-97-108-108-111-99-0
36175|data|DCB "strcat",0|115-116-114-99-97-116-0
36182|data|DCB "raise",0|114-97-105-115-101-0
36188|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
36202|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
36210|data|DCB "optarg",0|111-112-116-97-114-103-0
36217|data|DCB "stderr",0|115-116-100-101-114-114-0
36224|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
36236|data|DCB "fwrite",0|102-119-114-105-116-101-0
36243|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
36256|data|DCB "close",0|99-108-111-115-101-0
36262|data|DCB "strchr",0|115-116-114-99-104-114-0
36269|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
36277|data|DCB "qsort",0|113-115-111-114-116-0
36283|data|DCB "accept",0|97-99-99-101-112-116-0
36290|data|DCB "tcgetattr",0|116-99-103-101-116-97-116-116-114-0
36300|data|DCB "sleep",0|115-108-101-101-112-0
36306|data|DCB "freeaddrinfo",0|102-114-101-101-97-100-100-114-105-110-102-111-0
36319|data|DCB "fcntl",0|102-99-110-116-108-0
36325|data|DCB "memmove",0|109-101-109-109-111-118-101-0
36333|data|DCB "strcmp",0|115-116-114-99-109-112-0
36340|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
36358|data|DCB "ld-linux.so.3",0|108-100-45-108-105-110-117-120-46-115-111-46-51-0
36372|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
36390|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
36400|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
36410|data|DCW 0|0-0
36412|data|DCW 0; local  symbol: __gmon_start__|0-0
36414|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
36416|data|DCW 2; dup2@@GLIBC_2.4|2-0
36418|data|DCW 2; regexec@@GLIBC_2.4|2-0
36420|data|DCW 2; freeaddrinfo@@GLIBC_2.4|2-0
36422|data|DCW 2; abort@@GLIBC_2.4|2-0
36424|data|DCW 2; stderr@@GLIBC_2.4|2-0
36426|data|DCW 2; fwrite@@GLIBC_2.4|2-0
36428|data|DCW 2; tcgetattr@@GLIBC_2.4|2-0
36430|data|DCW 2; fflush@@GLIBC_2.4|2-0
36432|data|DCW 2; stdin@@GLIBC_2.4|2-0
36434|data|DCW 2; __strdup@@GLIBC_2.4|2-0
36436|data|DCW 2; regcomp@@GLIBC_2.4|2-0
36438|data|DCW 2; malloc@@GLIBC_2.4|2-0
36440|data|DCW 2; stdout@@GLIBC_2.4|2-0
36442|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
36444|data|DCW 2; strrchr@@GLIBC_2.4|2-0
36446|data|DCW 2; write@@GLIBC_2.4|2-0
36448|data|DCW 2; listen@@GLIBC_2.4|2-0
36450|data|DCW 2; calloc@@GLIBC_2.4|2-0
36452|data|DCW 2; time@@GLIBC_2.4|2-0
36454|data|DCW 2; ctime@@GLIBC_2.4|2-0
36456|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
36458|data|DCW 2; memchr@@GLIBC_2.4|2-0
36460|data|DCW 2; optarg@@GLIBC_2.4|2-0
36462|data|DCW 2; optind@@GLIBC_2.4|2-0
36464|data|DCW 2; strtoul@@GLIBC_2.4|2-0
36466|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
36468|data|DCW 2; memcpy@@GLIBC_2.4|2-0
36470|data|DCW 2; socket@@GLIBC_2.4|2-0
36472|data|DCW 1; global symbol: err|1-0
36474|data|DCW 2; strcmp@@GLIBC_2.4|2-0
36476|data|DCW 2; free@@GLIBC_2.4|2-0
36478|data|DCW 2; gai_strerror@@GLIBC_2.4|2-0
36480|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
36482|data|DCW 2; memmove@@GLIBC_2.4|2-0
36484|data|DCW 2; strerror@@GLIBC_2.4|2-0
36486|data|DCW 2; printf@@GLIBC_2.4|2-0
36488|data|DCW 2; syslog@@GLIBC_2.4|2-0
36490|data|DCW 2; perror@@GLIBC_2.4|2-0
36492|data|DCW 2; puts@@GLIBC_2.4|2-0
36494|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
36496|data|DCW 2; qsort@@GLIBC_2.4|2-0
36498|data|DCW 2; sleep@@GLIBC_2.4|2-0
36500|data|DCW 2; strcat@@GLIBC_2.4|2-0
36502|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
36504|data|DCW 2; read@@GLIBC_2.4|2-0
36506|data|DCW 2; tcsetattr@@GLIBC_2.4|2-0
36508|data|DCW 2; signal@@GLIBC_2.4|2-0
36510|data|DCW 2; setsockopt@@GLIBC_2.4|2-0
36512|data|DCW 2; realloc@@GLIBC_2.4|2-0
36514|data|DCW 2; strlen@@GLIBC_2.4|2-0
36516|data|DCW 2; fcntl@@GLIBC_2.4|2-0
36518|data|DCW 2; exit@@GLIBC_2.4|2-0
36520|data|DCW 2; fprintf@@GLIBC_2.4|2-0
36522|data|DCW 2; snprintf@@GLIBC_2.4|2-0
36524|data|DCW 2; memcmp@@GLIBC_2.4|2-0
36526|data|DCW 2; regerror@@GLIBC_2.4|2-0
36528|data|DCW 2; close@@GLIBC_2.4|2-0
36530|data|DCW 2; strncpy@@GLIBC_2.4|2-0
36532|data|DCW 2; accept@@GLIBC_2.4|2-0
36534|data|DCW 2; raise@@GLIBC_2.4|2-0
36536|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
36538|data|DCW 2; poll@@GLIBC_2.4|2-0
36540|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
36542|data|DCW 2; strstr@@GLIBC_2.4|2-0
36544|data|DCW 5; forkpty@@GLIBC_2.4|5-0
36546|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
36548|data|DCW 2; memset@@GLIBC_2.4|2-0
36550|data|DCW 2; cfmakeraw@@GLIBC_2.4|2-0
36552|data|DCW 2; strchr@@GLIBC_2.4|2-0
36554|data|DCW 2; regfree@@GLIBC_2.4|2-0
36556|data|DCW 2; __xpg_basename@@GLIBC_2.4|2-0
36558|data|DCW 2; strcpy@@GLIBC_2.4|2-0
36560|data|DCW 2; getaddrinfo@@GLIBC_2.4|2-0
36562|data|DCW 2; fgets@@GLIBC_2.4|2-0
36564|data|DCW 2; bind@@GLIBC_2.4|2-0
36566|data|DCW 2; sprintf@@GLIBC_2.4|2-0
36568|data|DCW 2; vsnprintf@@GLIBC_2.4|2-0
36570|data|DCW 0|0-0
36572|data|Elf32_Verneed <1, 1, aLibutilSo1 - byte_8B84, 0x10, 0x20>; "libutil.so.1"|1-0-1-0-1-0-0-0-16-0-0-0-32-0-0-0
36588|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_8B84, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-162-2-0-0-0-0-0-0
36604|data|Elf32_Verneed <1, 1, aLdLinuxSo3 - byte_8B84, 0x10, 0x20>; "ld-linux.so.3"|1-0-1-0-130-2-0-0-16-0-0-0-32-0-0-0
36620|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_8B84, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-162-2-0-0-0-0-0-0
36636|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_8B84, 0x10, 0>; "libc.so.6"|1-0-2-0-57-0-0-0-16-0-0-0-0-0-0-0
36652|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_8B84, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-172-2-0-0-16-0-0-0
36668|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_8B84, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-162-2-0-0-0-0-0-0
36684|data|Elf32_Rel <0x18770, 0x115>; R_ARM_GLOB_DAT __gmon_start__|112-135-1-0-21-1-0-0
36692|data|Elf32_Rel <0x18788, 0x1C14>; R_ARM_COPY __stack_chk_guard|136-135-1-0-20-28-0-0
36700|data|Elf32_Rel <0x1878C, 0x1A14>; R_ARM_COPY optind|140-135-1-0-20-26-0-0
36708|data|Elf32_Rel <0x18790, 0x714>; R_ARM_COPY stderr|144-135-1-0-20-7-0-0
36716|data|Elf32_Rel <0x18798, 0xB14>; R_ARM_COPY stdin|152-135-1-0-20-11-0-0
36724|data|Elf32_Rel <0x1879C, 0xF14>; R_ARM_COPY stdout|156-135-1-0-20-15-0-0
36732|data|Elf32_Rel <0x187A0, 0x1914>; R_ARM_COPY optarg|160-135-1-0-20-25-0-0
36740|data|Elf32_Rel <0x18654, 0x1416>; R_ARM_JUMP_SLOT calloc|84-134-1-0-22-20-0-0
36748|data|Elf32_Rel <0x18658, 0x4216>; R_ARM_JUMP_SLOT strstr|88-134-1-0-22-66-0-0
36756|data|Elf32_Rel <0x1865C, 0x3E16>; R_ARM_JUMP_SLOT raise|92-134-1-0-22-62-0-0
36764|data|Elf32_Rel <0x18660, 0x4616>; R_ARM_JUMP_SLOT cfmakeraw|96-134-1-0-22-70-0-0
36772|data|Elf32_Rel <0x18664, 0x2016>; R_ARM_JUMP_SLOT strcmp|100-134-1-0-22-32-0-0
36780|data|Elf32_Rel <0x18668, 0x3216>; R_ARM_JUMP_SLOT setsockopt|104-134-1-0-22-50-0-0
36788|data|Elf32_Rel <0x1866C, 0x2616>; R_ARM_JUMP_SLOT printf|108-134-1-0-22-38-0-0
36796|data|Elf32_Rel <0x18670, 0x3A16>; R_ARM_JUMP_SLOT regerror|112-134-1-0-22-58-0-0
36804|data|Elf32_Rel <0x18674, 0x2F16>; R_ARM_JUMP_SLOT read|116-134-1-0-22-47-0-0
36812|data|Elf32_Rel <0x18678, 0xA16>; R_ARM_JUMP_SLOT fflush|120-134-1-0-22-10-0-0
36820|data|Elf32_Rel <0x1867C, 0x2416>; R_ARM_JUMP_SLOT memmove|124-134-1-0-22-36-0-0
36828|data|Elf32_Rel <0x18680, 0x2116>; R_ARM_JUMP_SLOT free|128-134-1-0-22-33-0-0
36836|data|Elf32_Rel <0x18684, 0x2216>; R_ARM_JUMP_SLOT gai_strerror|132-134-1-0-22-34-0-0
36844|data|Elf32_Rel <0x18688, 0x4C16>; R_ARM_JUMP_SLOT fgets|136-134-1-0-22-76-0-0
36852|data|Elf32_Rel <0x1868C, 0x1D16>; R_ARM_JUMP_SLOT memcpy|140-134-1-0-22-29-0-0
36860|data|Elf32_Rel <0x18690, 0x3116>; R_ARM_JUMP_SLOT signal|144-134-1-0-22-49-0-0
36868|data|Elf32_Rel <0x18694, 0x1516>; R_ARM_JUMP_SLOT time|148-134-1-0-22-21-0-0
36876|data|Elf32_Rel <0x18698, 0x3916>; R_ARM_JUMP_SLOT memcmp|152-134-1-0-22-57-0-0
36884|data|Elf32_Rel <0x1869C, 0x2C16>; R_ARM_JUMP_SLOT sleep|156-134-1-0-22-44-0-0
36892|data|Elf32_Rel <0x186A0, 0x1616>; R_ARM_JUMP_SLOT ctime|160-134-1-0-22-22-0-0
36900|data|Elf32_Rel <0x186A4, 0x3F16>; R_ARM_JUMP_SLOT __stack_chk_fail|164-134-1-0-22-63-0-0
36908|data|Elf32_Rel <0x186A8, 0x316>; R_ARM_JUMP_SLOT dup2|168-134-1-0-22-3-0-0
36916|data|Elf32_Rel <0x186AC, 0x3316>; R_ARM_JUMP_SLOT realloc|172-134-1-0-22-51-0-0
36924|data|Elf32_Rel <0x186B0, 0x416>; R_ARM_JUMP_SLOT regexec|176-134-1-0-22-4-0-0
36932|data|Elf32_Rel <0x186B4, 0x2816>; R_ARM_JUMP_SLOT perror|180-134-1-0-22-40-0-0
36940|data|Elf32_Rel <0x186B8, 0x4016>; R_ARM_JUMP_SLOT poll|184-134-1-0-22-64-0-0
36948|data|Elf32_Rel <0x186BC, 0x3D16>; R_ARM_JUMP_SLOT accept|188-134-1-0-22-61-0-0
36956|data|Elf32_Rel <0x186C0, 0x816>; R_ARM_JUMP_SLOT fwrite|192-134-1-0-22-8-0-0
36964|data|Elf32_Rel <0x186C4, 0x2D16>; R_ARM_JUMP_SLOT strcat|196-134-1-0-22-45-0-0
36972|data|Elf32_Rel <0x186C8, 0x4816>; R_ARM_JUMP_SLOT regfree|200-134-1-0-22-72-0-0
36980|data|Elf32_Rel <0x186CC, 0x3016>; R_ARM_JUMP_SLOT tcsetattr|204-134-1-0-22-48-0-0
36988|data|Elf32_Rel <0x186D0, 0x4A16>; R_ARM_JUMP_SLOT strcpy|208-134-1-0-22-74-0-0
36996|data|Elf32_Rel <0x186D4, 0x2E16>; R_ARM_JUMP_SLOT gettimeofday|212-134-1-0-22-46-0-0
37004|data|Elf32_Rel <0x186D8, 0x2916>; R_ARM_JUMP_SLOT puts|216-134-1-0-22-41-0-0
37012|data|Elf32_Rel <0x186DC, 0xE16>; R_ARM_JUMP_SLOT malloc|220-134-1-0-22-14-0-0
37020|data|Elf32_Rel <0x186E0, 0x1716>; R_ARM_JUMP_SLOT __libc_start_main|224-134-1-0-22-23-0-0
37028|data|Elf32_Rel <0x186E4, 0x2516>; R_ARM_JUMP_SLOT strerror|228-134-1-0-22-37-0-0
37036|data|Elf32_Rel <0x186E8, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|232-134-1-0-22-1-0-0
37044|data|Elf32_Rel <0x186EC, 0x4416>; R_ARM_JUMP_SLOT getopt_long|236-134-1-0-22-68-0-0
37052|data|Elf32_Rel <0x186F0, 0x2A16>; R_ARM_JUMP_SLOT __ctype_b_loc|240-134-1-0-22-42-0-0
37060|data|Elf32_Rel <0x186F4, 0x3616>; R_ARM_JUMP_SLOT exit|244-134-1-0-22-54-0-0
37068|data|Elf32_Rel <0x186F8, 0x1B16>; R_ARM_JUMP_SLOT strtoul|248-134-1-0-22-27-0-0
37076|data|Elf32_Rel <0x186FC, 0x3416>; R_ARM_JUMP_SLOT strlen|252-134-1-0-22-52-0-0
37084|data|Elf32_Rel <0x18700, 0x4716>; R_ARM_JUMP_SLOT strchr|0-135-1-0-22-71-0-0
37092|data|Elf32_Rel <0x18704, 0x3716>; R_ARM_JUMP_SLOT fprintf|4-135-1-0-22-55-0-0
37100|data|Elf32_Rel <0x18708, 0x3516>; R_ARM_JUMP_SLOT fcntl|8-135-1-0-22-53-0-0
37108|data|Elf32_Rel <0x1870C, 0x1016>; R_ARM_JUMP_SLOT __errno_location|12-135-1-0-22-16-0-0
37116|data|Elf32_Rel <0x18710, 0x3816>; R_ARM_JUMP_SLOT snprintf|16-135-1-0-22-56-0-0
37124|data|Elf32_Rel <0x18714, 0x4116>; R_ARM_JUMP_SLOT __isoc99_sscanf|20-135-1-0-22-65-0-0
37132|data|Elf32_Rel <0x18718, 0xC16>; R_ARM_JUMP_SLOT __strdup|24-135-1-0-22-12-0-0
37140|data|Elf32_Rel <0x1871C, 0x4D16>; R_ARM_JUMP_SLOT bind|28-135-1-0-22-77-0-0
37148|data|Elf32_Rel <0x18720, 0x4516>; R_ARM_JUMP_SLOT memset|32-135-1-0-22-69-0-0
37156|data|Elf32_Rel <0x18724, 0x3C16>; R_ARM_JUMP_SLOT strncpy|36-135-1-0-22-60-0-0
37164|data|Elf32_Rel <0x18728, 0x4916>; R_ARM_JUMP_SLOT __xpg_basename|40-135-1-0-22-73-0-0
37172|data|Elf32_Rel <0x1872C, 0x1216>; R_ARM_JUMP_SLOT write|44-135-1-0-22-18-0-0
37180|data|Elf32_Rel <0x18730, 0x1816>; R_ARM_JUMP_SLOT memchr|48-135-1-0-22-24-0-0
37188|data|Elf32_Rel <0x18734, 0x1116>; R_ARM_JUMP_SLOT strrchr|52-135-1-0-22-17-0-0
37196|data|Elf32_Rel <0x18738, 0x1316>; R_ARM_JUMP_SLOT listen|56-135-1-0-22-19-0-0
37204|data|Elf32_Rel <0x1873C, 0x2716>; R_ARM_JUMP_SLOT syslog|60-135-1-0-22-39-0-0
37212|data|Elf32_Rel <0x18740, 0x4E16>; R_ARM_JUMP_SLOT sprintf|64-135-1-0-22-78-0-0
37220|data|Elf32_Rel <0x18744, 0xD16>; R_ARM_JUMP_SLOT regcomp|68-135-1-0-22-13-0-0
37228|data|Elf32_Rel <0x18748, 0x4F16>; R_ARM_JUMP_SLOT vsnprintf|72-135-1-0-22-79-0-0
37236|data|Elf32_Rel <0x1874C, 0x2B16>; R_ARM_JUMP_SLOT qsort|76-135-1-0-22-43-0-0
37244|data|Elf32_Rel <0x18750, 0x516>; R_ARM_JUMP_SLOT freeaddrinfo|80-135-1-0-22-5-0-0
37252|data|Elf32_Rel <0x18754, 0x4B16>; R_ARM_JUMP_SLOT getaddrinfo|84-135-1-0-22-75-0-0
37260|data|Elf32_Rel <0x18758, 0x1E16>; R_ARM_JUMP_SLOT socket|88-135-1-0-22-30-0-0
37268|data|Elf32_Rel <0x1875C, 0x616>; R_ARM_JUMP_SLOT abort|92-135-1-0-22-6-0-0
37276|data|Elf32_Rel <0x18760, 0x3B16>; R_ARM_JUMP_SLOT close|96-135-1-0-22-59-0-0
37284|data|Elf32_Rel <0x18764, 0x4316>; R_ARM_JUMP_SLOT forkpty|100-135-1-0-22-67-0-0
37292|data|Elf32_Rel <0x18768, 0x2316>; R_ARM_JUMP_SLOT __assert_fail|104-135-1-0-22-35-0-0
37300|data|Elf32_Rel <0x1876C, 0x916>; R_ARM_JUMP_SLOT tcgetattr|108-135-1-0-22-9-0-0
37308|code|PUSH            {R3,LR}|8-181
37310|code|BL              sub_9CB4|0-240-121-253
37314|code|NOP|0-191
37316|code|POP             {R3,PC}|8-189
37318|data|DCW 0|0-0
37320|code|PUSH            {LR}|4-224-45-229
37324|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x91D8)|4-224-159-229
37328|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
37332|code|LDR             PC, [LR,#8]!|8-240-190-229
37336|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x91D8|112-244-0-0
37340|code|ADR             R12, 0x91E4|0-198-143-226
37344|code|ADD             R12, R12, #0xF000|15-202-140-226
37348|code|LDR             PC, [R12,#(calloc_ptr - 0x181E4)]!; __imp_calloc|112-244-188-229
37352|code|ADR             R12, 0x91F0|0-198-143-226
37356|code|ADD             R12, R12, #0xF000|15-202-140-226
37360|code|LDR             PC, [R12,#(strstr_ptr - 0x181F0)]!; __imp_strstr|104-244-188-229
37364|code|ADR             R12, 0x91FC|0-198-143-226
37368|code|ADD             R12, R12, #0xF000|15-202-140-226
37372|code|LDR             PC, [R12,#(raise_ptr - 0x181FC)]!; __imp_raise|96-244-188-229
37376|code|ADR             R12, 0x9208|0-198-143-226
37380|code|ADD             R12, R12, #0xF000|15-202-140-226
37384|code|LDR             PC, [R12,#(cfmakeraw_ptr - 0x18208)]!; __imp_cfmakeraw|88-244-188-229
37388|code|ADR             R12, 0x9214|0-198-143-226
37392|code|ADD             R12, R12, #0xF000|15-202-140-226
37396|code|LDR             PC, [R12,#(strcmp_ptr - 0x18214)]!; __imp_strcmp|80-244-188-229
37400|code|ADR             R12, 0x9220|0-198-143-226
37404|code|ADD             R12, R12, #0xF000|15-202-140-226
37408|code|LDR             PC, [R12,#(setsockopt_ptr - 0x18220)]!; __imp_setsockopt|72-244-188-229
37412|code|ADR             R12, 0x922C|0-198-143-226
37416|code|ADD             R12, R12, #0xF000|15-202-140-226
37420|code|LDR             PC, [R12,#(printf_ptr - 0x1822C)]!; __imp_printf|64-244-188-229
37424|code|ADR             R12, 0x9238|0-198-143-226
37428|code|ADD             R12, R12, #0xF000|15-202-140-226
37432|code|LDR             PC, [R12,#(regerror_ptr - 0x18238)]!; __imp_regerror|56-244-188-229
37436|code|ADR             R12, 0x9244|0-198-143-226
37440|code|ADD             R12, R12, #0xF000|15-202-140-226
37444|code|LDR             PC, [R12,#(read_ptr - 0x18244)]!; __imp_read|48-244-188-229
37448|code|ADR             R12, 0x9250|0-198-143-226
37452|code|ADD             R12, R12, #0xF000|15-202-140-226
37456|code|LDR             PC, [R12,#(fflush_ptr - 0x18250)]!; __imp_fflush|40-244-188-229
37460|code|ADR             R12, 0x925C|0-198-143-226
37464|code|ADD             R12, R12, #0xF000|15-202-140-226
37468|code|LDR             PC, [R12,#(memmove_ptr - 0x1825C)]!; __imp_memmove|32-244-188-229
37472|code|BX              PC|120-71
37474|data|ALIGN 4|192-70
37476|code|ADR             R12, 0x926C|0-198-143-226
37480|code|ADD             R12, R12, #0xF000|15-202-140-226
37484|code|LDR             PC, [R12,#(free_ptr - 0x1826C)]!; __imp_free|20-244-188-229
37488|code|ADR             R12, 0x9278|0-198-143-226
37492|code|ADD             R12, R12, #0xF000|15-202-140-226
37496|code|LDR             PC, [R12,#(gai_strerror_ptr - 0x18278)]!; __imp_gai_strerror|12-244-188-229
37500|code|ADR             R12, 0x9284|0-198-143-226
37504|code|ADD             R12, R12, #0xF000|15-202-140-226
37508|code|LDR             PC, [R12,#(fgets_ptr - 0x18284)]!; __imp_fgets|4-244-188-229
37512|code|ADR             R12, 0x9290|0-198-143-226
37516|code|ADD             R12, R12, #0xF000|15-202-140-226
37520|code|LDR             PC, [R12,#(memcpy_ptr - 0x18290)]!; __imp_memcpy|252-243-188-229
37524|code|ADR             R12, 0x929C|0-198-143-226
37528|code|ADD             R12, R12, #0xF000|15-202-140-226
37532|code|LDR             PC, [R12,#(signal_ptr - 0x1829C)]!; __imp_signal|244-243-188-229
37536|code|ADR             R12, 0x92A8|0-198-143-226
37540|code|ADD             R12, R12, #0xF000|15-202-140-226
37544|code|LDR             PC, [R12,#(time_ptr - 0x182A8)]!; __imp_time|236-243-188-229
37548|code|ADR             R12, 0x92B4|0-198-143-226
37552|code|ADD             R12, R12, #0xF000|15-202-140-226
37556|code|LDR             PC, [R12,#(memcmp_ptr - 0x182B4)]!; __imp_memcmp|228-243-188-229
37560|code|ADR             R12, 0x92C0|0-198-143-226
37564|code|ADD             R12, R12, #0xF000|15-202-140-226
37568|code|LDR             PC, [R12,#(sleep_ptr - 0x182C0)]!; __imp_sleep|220-243-188-229
37572|code|ADR             R12, 0x92CC|0-198-143-226
37576|code|ADD             R12, R12, #0xF000|15-202-140-226
37580|code|LDR             PC, [R12,#(ctime_ptr - 0x182CC)]!; __imp_ctime|212-243-188-229
37584|code|ADR             R12, 0x92D8|0-198-143-226
37588|code|ADD             R12, R12, #0xF000|15-202-140-226
37592|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x182D8)]!; __imp___stack_chk_fail|204-243-188-229
37596|code|ADR             R12, 0x92E4|0-198-143-226
37600|code|ADD             R12, R12, #0xF000|15-202-140-226
37604|code|LDR             PC, [R12,#(dup2_ptr - 0x182E4)]!; __imp_dup2|196-243-188-229
37608|code|ADR             R12, 0x92F0|0-198-143-226
37612|code|ADD             R12, R12, #0xF000|15-202-140-226
37616|code|LDR             PC, [R12,#(realloc_ptr - 0x182F0)]!; __imp_realloc|188-243-188-229
37620|code|ADR             R12, 0x92FC|0-198-143-226
37624|code|ADD             R12, R12, #0xF000|15-202-140-226
37628|code|LDR             PC, [R12,#(regexec_ptr - 0x182FC)]!; __imp_regexec|180-243-188-229
37632|code|ADR             R12, 0x9308|0-198-143-226
37636|code|ADD             R12, R12, #0xF000|15-202-140-226
37640|code|LDR             PC, [R12,#(perror_ptr - 0x18308)]!; __imp_perror|172-243-188-229
37644|code|ADR             R12, 0x9314|0-198-143-226
37648|code|ADD             R12, R12, #0xF000|15-202-140-226
37652|code|LDR             PC, [R12,#(poll_ptr - 0x18314)]!; __imp_poll|164-243-188-229
37656|code|ADR             R12, 0x9320|0-198-143-226
37660|code|ADD             R12, R12, #0xF000|15-202-140-226
37664|code|LDR             PC, [R12,#(accept_ptr - 0x18320)]!; __imp_accept|156-243-188-229
37668|code|ADR             R12, 0x932C|0-198-143-226
37672|code|ADD             R12, R12, #0xF000|15-202-140-226
37676|code|LDR             PC, [R12,#(fwrite_ptr - 0x1832C)]!; __imp_fwrite|148-243-188-229
37680|code|ADR             R12, 0x9338|0-198-143-226
37684|code|ADD             R12, R12, #0xF000|15-202-140-226
37688|code|LDR             PC, [R12,#(strcat_ptr - 0x18338)]!; __imp_strcat|140-243-188-229
37692|code|ADR             R12, 0x9344|0-198-143-226
37696|code|ADD             R12, R12, #0xF000|15-202-140-226
37700|code|LDR             PC, [R12,#(regfree_ptr - 0x18344)]!; __imp_regfree|132-243-188-229
37704|code|ADR             R12, 0x9350|0-198-143-226
37708|code|ADD             R12, R12, #0xF000|15-202-140-226
37712|code|LDR             PC, [R12,#(tcsetattr_ptr - 0x18350)]!; __imp_tcsetattr|124-243-188-229
37716|code|ADR             R12, 0x935C|0-198-143-226
37720|code|ADD             R12, R12, #0xF000|15-202-140-226
37724|code|LDR             PC, [R12,#(strcpy_ptr - 0x1835C)]!; __imp_strcpy|116-243-188-229
37728|code|ADR             R12, 0x9368|0-198-143-226
37732|code|ADD             R12, R12, #0xF000|15-202-140-226
37736|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x18368)]!; __imp_gettimeofday|108-243-188-229
37740|code|ADR             R12, 0x9374|0-198-143-226
37744|code|ADD             R12, R12, #0xF000|15-202-140-226
37748|code|LDR             PC, [R12,#(puts_ptr - 0x18374)]!; __imp_puts|100-243-188-229
37752|code|ADR             R12, 0x9380|0-198-143-226
37756|code|ADD             R12, R12, #0xF000|15-202-140-226
37760|code|LDR             PC, [R12,#(malloc_ptr - 0x18380)]!; __imp_malloc|92-243-188-229
37764|code|ADR             R12, 0x938C|0-198-143-226
37768|code|ADD             R12, R12, #0xF000|15-202-140-226
37772|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x1838C)]!; __imp___libc_start_main|84-243-188-229
37776|code|ADR             R12, 0x9398|0-198-143-226
37780|code|ADD             R12, R12, #0xF000|15-202-140-226
37784|code|LDR             PC, [R12,#(strerror_ptr - 0x18398)]!; __imp_strerror|76-243-188-229
37788|code|BX              PC|120-71
37790|data|ALIGN 4|192-70
37792|code|ADR             R12, 0x93A8|0-198-143-226
37796|code|ADD             R12, R12, #0xF000|15-202-140-226
37800|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x183A8)]!; __imp___gmon_start__|64-243-188-229
37804|code|ADR             R12, 0x93B4|0-198-143-226
37808|code|ADD             R12, R12, #0xF000|15-202-140-226
37812|code|LDR             PC, [R12,#(getopt_long_ptr - 0x183B4)]!; __imp_getopt_long|56-243-188-229
37816|code|ADR             R12, 0x93C0|0-198-143-226
37820|code|ADD             R12, R12, #0xF000|15-202-140-226
37824|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x183C0)]!; __imp___ctype_b_loc|48-243-188-229
37828|code|ADR             R12, 0x93CC|0-198-143-226
37832|code|ADD             R12, R12, #0xF000|15-202-140-226
37836|code|LDR             PC, [R12,#(exit_ptr - 0x183CC)]!; __imp_exit|40-243-188-229
37840|code|ADR             R12, 0x93D8|0-198-143-226
37844|code|ADD             R12, R12, #0xF000|15-202-140-226
37848|code|LDR             PC, [R12,#(strtoul_ptr - 0x183D8)]!; __imp_strtoul|32-243-188-229
37852|code|ADR             R12, 0x93E4|0-198-143-226
37856|code|ADD             R12, R12, #0xF000|15-202-140-226
37860|code|LDR             PC, [R12,#(strlen_ptr - 0x183E4)]!; __imp_strlen|24-243-188-229
37864|code|ADR             R12, 0x93F0|0-198-143-226
37868|code|ADD             R12, R12, #0xF000|15-202-140-226
37872|code|LDR             PC, [R12,#(strchr_ptr - 0x183F0)]!; __imp_strchr|16-243-188-229
37876|code|BX              PC|120-71
37878|data|ALIGN 4|192-70
37880|code|ADR             R12, 0x9400|0-198-143-226
37884|code|ADD             R12, R12, #0xF000|15-202-140-226
37888|code|LDR             PC, [R12,#(fprintf_ptr - 0x18400)]!; __imp_fprintf|4-243-188-229
37892|code|ADR             R12, 0x940C|0-198-143-226
37896|code|ADD             R12, R12, #0xF000|15-202-140-226
37900|code|LDR             PC, [R12,#(fcntl_ptr - 0x1840C)]!; __imp_fcntl|252-242-188-229
37904|code|ADR             R12, 0x9418|0-198-143-226
37908|code|ADD             R12, R12, #0xF000|15-202-140-226
37912|code|LDR             PC, [R12,#(__errno_location_ptr - 0x18418)]!; __imp___errno_location|244-242-188-229
37916|code|ADR             R12, 0x9424|0-198-143-226
37920|code|ADD             R12, R12, #0xF000|15-202-140-226
37924|code|LDR             PC, [R12,#(snprintf_ptr - 0x18424)]!; __imp_snprintf|236-242-188-229
37928|code|ADR             R12, 0x9430|0-198-143-226
37932|code|ADD             R12, R12, #0xF000|15-202-140-226
37936|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x18430)]!; __imp___isoc99_sscanf|228-242-188-229
37940|code|ADR             R12, 0x943C|0-198-143-226
37944|code|ADD             R12, R12, #0xF000|15-202-140-226
37948|code|LDR             PC, [R12,#(__strdup_ptr - 0x1843C)]!; __imp___strdup|220-242-188-229
37952|code|ADR             R12, 0x9448|0-198-143-226
37956|code|ADD             R12, R12, #0xF000|15-202-140-226
37960|code|LDR             PC, [R12,#(bind_ptr - 0x18448)]!; __imp_bind|212-242-188-229
37964|code|ADR             R12, 0x9454|0-198-143-226
37968|code|ADD             R12, R12, #0xF000|15-202-140-226
37972|code|LDR             PC, [R12,#(memset_ptr - 0x18454)]!; __imp_memset|204-242-188-229
37976|code|ADR             R12, 0x9460|0-198-143-226
37980|code|ADD             R12, R12, #0xF000|15-202-140-226
37984|code|LDR             PC, [R12,#(strncpy_ptr - 0x18460)]!; __imp_strncpy|196-242-188-229
37988|code|ADR             R12, 0x946C|0-198-143-226
37992|code|ADD             R12, R12, #0xF000|15-202-140-226
37996|code|LDR             PC, [R12,#(__xpg_basename_ptr - 0x1846C)]!; __imp___xpg_basename|188-242-188-229
38000|code|ADR             R12, 0x9478|0-198-143-226
38004|code|ADD             R12, R12, #0xF000|15-202-140-226
38008|code|LDR             PC, [R12,#(write_ptr - 0x18478)]!; __imp_write|180-242-188-229
38012|code|ADR             R12, 0x9484|0-198-143-226
38016|code|ADD             R12, R12, #0xF000|15-202-140-226
38020|code|LDR             PC, [R12,#(memchr_ptr - 0x18484)]!; __imp_memchr|172-242-188-229
38024|code|ADR             R12, 0x9490|0-198-143-226
38028|code|ADD             R12, R12, #0xF000|15-202-140-226
38032|code|LDR             PC, [R12,#(strrchr_ptr - 0x18490)]!; __imp_strrchr|164-242-188-229
38036|code|ADR             R12, 0x949C|0-198-143-226
38040|code|ADD             R12, R12, #0xF000|15-202-140-226
38044|code|LDR             PC, [R12,#(listen_ptr - 0x1849C)]!; __imp_listen|156-242-188-229
38048|code|ADR             R12, 0x94A8|0-198-143-226
38052|code|ADD             R12, R12, #0xF000|15-202-140-226
38056|code|LDR             PC, [R12,#(syslog_ptr - 0x184A8)]!; __imp_syslog|148-242-188-229
38060|code|ADR             R12, 0x94B4|0-198-143-226
38064|code|ADD             R12, R12, #0xF000|15-202-140-226
38068|code|LDR             PC, [R12,#(sprintf_ptr - 0x184B4)]!; __imp_sprintf|140-242-188-229
38072|code|ADR             R12, 0x94C0|0-198-143-226
38076|code|ADD             R12, R12, #0xF000|15-202-140-226
38080|code|LDR             PC, [R12,#(regcomp_ptr - 0x184C0)]!; __imp_regcomp|132-242-188-229
38084|code|ADR             R12, 0x94CC|0-198-143-226
38088|code|ADD             R12, R12, #0xF000|15-202-140-226
38092|code|LDR             PC, [R12,#(vsnprintf_ptr - 0x184CC)]!; __imp_vsnprintf|124-242-188-229
38096|code|ADR             R12, 0x94D8|0-198-143-226
38100|code|ADD             R12, R12, #0xF000|15-202-140-226
38104|code|LDR             PC, [R12,#(qsort_ptr - 0x184D8)]!; __imp_qsort|116-242-188-229
38108|code|ADR             R12, 0x94E4|0-198-143-226
38112|code|ADD             R12, R12, #0xF000|15-202-140-226
38116|code|LDR             PC, [R12,#(freeaddrinfo_ptr - 0x184E4)]!; __imp_freeaddrinfo|108-242-188-229
38120|code|ADR             R12, 0x94F0|0-198-143-226
38124|code|ADD             R12, R12, #0xF000|15-202-140-226
38128|code|LDR             PC, [R12,#(getaddrinfo_ptr - 0x184F0)]!; __imp_getaddrinfo|100-242-188-229
38132|code|ADR             R12, 0x94FC|0-198-143-226
38136|code|ADD             R12, R12, #0xF000|15-202-140-226
38140|code|LDR             PC, [R12,#(socket_ptr - 0x184FC)]!; __imp_socket|92-242-188-229
38144|code|ADR             R12, 0x9508|0-198-143-226
38148|code|ADD             R12, R12, #0xF000|15-202-140-226
38152|code|LDR             PC, [R12,#(abort_ptr - 0x18508)]!; __imp_abort|84-242-188-229
38156|code|ADR             R12, 0x9514|0-198-143-226
38160|code|ADD             R12, R12, #0xF000|15-202-140-226
38164|code|LDR             PC, [R12,#(close_ptr - 0x18514)]!; __imp_close|76-242-188-229
38168|code|ADR             R12, 0x9520|0-198-143-226
38172|code|ADD             R12, R12, #0xF000|15-202-140-226
38176|code|LDR             PC, [R12,#(forkpty_ptr - 0x18520)]!; __imp_forkpty|68-242-188-229
38180|code|ADR             R12, 0x952C|0-198-143-226
38184|code|ADD             R12, R12, #0xF000|15-202-140-226
38188|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x1852C)]!; __imp___assert_fail|60-242-188-229
38192|code|ADR             R12, 0x9538|0-198-143-226
38196|code|ADD             R12, R12, #0xF000|15-202-140-226
38200|code|LDR             PC, [R12,#(tcgetattr_ptr - 0x18538)]!; __imp_tcgetattr|52-242-188-229
38204|data|ALIGN 0x10|0-0-0-0
38208|data|DCB 0xA5|165
38209|data|DCB 0x4B, 0xA, 0x68|75-10-104
38212|code|PUSH.W          {R4-R11,LR}|45-233-240-79
38216|code|SUB             SP, SP, #0x134|205-176
38218|code|LDR             R3, [R3]|27-104
38220|code|MOV             R5, R0|5-70
38222|code|MOV             R0, R2|16-70
38224|code|MOV             R4, R1|12-70
38226|code|LDR.W           R9, =dword_187A8|223-248-180-146
38230|code|MOVS            R6, #0|0-38
38232|code|STR             R3, [SP,#0x12C]|75-147
38234|code|BLX             __xpg_basename|255-247-132-239
38238|code|LDR             R2, =aP; "p:"|159-74
38240|code|MOV             R1, R4|33-70
38242|code|LDR             R3, =off_F1A8; "port"|159-75
38244|code|MOV             R8, R6|176-70
38246|code|STR.W           R8, [SP]|205-248-0-128
38250|code|LDR             R7, =optarg|158-79
38252|code|STR.W           R0, [R9]|201-248-0-0
38256|code|MOV             R0, R5|40-70
38258|code|BLX             getopt_long|255-247-28-239
38262|code|ADDS            R2, R0, #1|66-28
38264|code|BEQ             loc_959E|17-208
38266|code|CMP             R0, #0x70 ; 'p'|112-40
38268|code|BEQ             loc_9582|1-208
38270|code|BL              sub_9CF4|0-240-185-251
38274|code|LDR             R0, [R7]|56-104
38276|code|BL              sub_E76C|5-240-242-248
38280|code|LDR             R2, =aP; "p:"|148-74
38282|code|MOV             R1, R4|33-70
38284|code|LDR             R3, =off_F1A8; "port"|148-75
38286|code|STR.W           R8, [SP]|205-248-0-128
38290|code|MOV             R6, R0|6-70
38292|code|MOV             R0, R5|40-70
38294|code|BLX             getopt_long|255-247-10-239
38298|code|ADDS            R2, R0, #1|66-28
38300|code|BNE             loc_957A|237-209
38302|code|LDR             R3, =optind|146-75
38304|code|LDR             R3, [R3]|27-104
38306|code|CMP             R5, R3|157-66
38308|code|BGT             loc_957E|235-220
38310|code|MOVS            R0, #0xD|13-32
38312|code|LDR             R1, =(sub_9D1C+1)|144-73
38314|code|BLX             signal|255-247-116-238
38318|code|ADDS            R0, #1|1-48
38320|code|BEQ.W           loc_99C8|0-240-10-130
38324|code|CMP             R6, #0|0-46
38326|code|BEQ.W           loc_96FC|0-240-161-128
38330|code|MOVS            R2, #0x20 ; ' '|32-34
38332|code|MOVS            R1, #0|0-33
38334|code|ADD.W           R0, SP, R2|13-235-2-0
38338|code|MOVS            R5, #1|1-37
38340|code|BLX             memset|255-247-66-239
38344|code|MOVS            R0, #0|0-32
38346|code|MOV             R1, R6|49-70
38348|code|ADD             R2, SP, #0x20 ; ' '|8-170
38350|code|ADD             R3, SP, #0x40 ; '@'|16-171
38352|code|STR             R5, [SP,#0x28]|10-149
38354|code|STR             R5, [SP,#0x20]|8-149
38356|code|BLX             getaddrinfo|255-247-136-239
38360|code|CMP             R0, #0|0-40
38362|code|BNE.W           loc_9A7E|64-240-80-130
38366|code|LDR             R7, [SP,#0x40]|16-159
38368|code|MOV             R4, R0|4-70
38370|code|CMP             R7, #0|0-47
38372|code|BEQ.W           loc_9B8E|0-240-211-130
38376|code|LDR             R7, [R7,#0x1C]|255-105
38378|code|ADDS            R4, #1|1-52
38380|code|CMP             R7, #0|0-47
38382|code|BNE             loc_95E8|251-209
38384|code|LSLS            R0, R4, #2|160-0
38386|code|BL              sub_E5A4|4-240-215-255
38390|code|LDR             R6, [SP,#0x40]|16-158
38392|code|CMP             R6, #0|0-46
38394|code|BEQ.W           loc_99A4|0-240-211-129
38398|code|MOV             R11, R7|187-70
38400|code|MOV             R8, R0|128-70
38402|code|STR             R4, [SP,#0x14]|5-148
38404|code|MOV             R5, R7|61-70
38406|code|STR             R0, [SP,#0x18]|6-144
38408|code|STR             R0, [SP,#0x1C]|7-144
38410|code|LDR.W           R10, [SP,#0x10]|221-248-16-160
38414|code|B               loc_9654|33-224
38416|code|ADD             R3, SP, #0x130|76-171
38418|code|MOVS            R1, #1|1-33
38420|code|MOVS            R2, #2|2-34
38422|code|MOVS            R7, #4|4-39
38424|code|STR.W           R1, [R3,#-0xEC]!|67-248-236-29
38428|code|STR             R7, [SP]|0-151
38430|code|BLX             setsockopt|255-247-252-237
38434|code|CMP             R0, #0|0-40
38436|code|BLT.W           loc_9824|192-242-254-128
38440|code|MOV             R0, R4|32-70
38442|code|LDR             R1, [R6,#0x14]|113-105
38444|code|LDR             R2, [R6,#0x10]|50-105
38446|code|BLX             bind|255-247-8-239
38450|code|CMP             R0, #0|0-40
38452|code|BLT.W           loc_9838|192-242-0-129
38456|code|MOVS            R1, #5|5-33
38458|code|MOV             R0, R4|32-70
38460|code|BLX             listen|255-247-42-239
38464|code|CMP             R0, #0|0-40
38466|code|ITT GE|164-191
38468|code|STRGE.W         R4, [R8,#-4]|72-248-4-76
38472|code|ADDGE.W         R11, R11, #1|11-241-1-11
38476|code|BLT.W           loc_98A8|192-242-44-129
38480|code|LDR             R6, [R6,#0x1C]|246-105
38482|code|CBZ             R6, loc_967C|158-177
38484|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
38488|code|MOVS            R2, #0|0-34
38490|code|STR.W           R3, [R8],#4|72-248-4-59
38494|code|LDR             R0, [R6,#4]|112-104
38496|code|LDR             R1, [R6,#8]|177-104
38498|code|BLX             socket|255-247-72-239
38502|code|CMP             R0, #0|0-40
38504|code|MOV             R4, R0|4-70
38506|code|BGE             loc_9610|209-218
38508|code|BLX             __errno_location|255-247-208-238
38512|code|LDR             R6, [R6,#0x1C]|246-105
38514|code|LDR.W           R10, =aSocket_0; "socket"|223-248-168-161
38518|code|LDR             R5, [R0]|5-104
38520|code|CMP             R6, #0|0-46
38522|code|BNE             loc_9654|235-209
38524|code|LDR             R0, [SP,#0x40]|16-152
38526|code|MOV             R3, R11|91-70
38528|code|STR.W           R10, [SP,#0x10]|205-248-16-160
38532|code|MOV             R11, R5|171-70
38534|code|STR             R3, [SP,#8]|2-147
38536|code|LDR             R4, [SP,#0x14]|5-156
38538|code|LDR             R5, [SP,#0x18]|6-157
38540|code|LDR.W           R10, [SP,#0x1C]|221-248-28-160
38544|code|BLX             freeaddrinfo|255-247-36-239
38548|code|LDR             R3, [SP,#8]|2-155
38550|code|CMP             R3, #0|0-43
38552|code|BEQ.W           loc_99AC|0-240-136-129
38556|code|BL              sub_EA18|5-240-188-249
38560|code|MOV             R7, R0|7-70
38562|code|MOV             R0, R7|56-70
38564|code|MOVS            R6, #0|0-38
38566|code|BL              sub_EA84|5-240-237-249
38570|code|MOV             R8, R5|168-70
38572|code|LDR.W           R1, [R8],#4|88-248-4-27
38576|code|ADDS            R3, R1, #1|75-28
38578|code|BEQ             loc_96BC|3-208
38580|code|MOV             R0, R7|56-70
38582|code|MOVS            R2, #1|1-34
38584|code|BL              sub_EAB4|5-240-252-249
38588|code|ADDS            R6, #1|1-54
38590|code|CMP             R6, R4|166-66
38592|code|BNE             loc_96AC|244-209
38594|code|MOVS            R1, #0|0-33
38596|code|MOV             R0, R7|56-70
38598|code|BL              sub_E93C|5-240-57-249
38602|code|CMP             R0, #0|0-40
38604|code|BLT.W           loc_9B3C|192-242-54-130
38608|code|MOVS            R6, #0|0-38
38610|code|MOV             R11, R5|171-70
38612|code|MOV             R8, R11|216-70
38614|code|LDR.W           R1, [R11],#4|91-248-4-27
38618|code|ADDS            R0, R1, #1|72-28
38620|code|BEQ             loc_96F4|10-208
38622|code|MOV             R0, R7|56-70
38624|code|BL              sub_EC88|5-240-210-250
38628|code|UXTH            R2, R0|130-178
38630|code|ANDS.W          R3, R2, #0x1C|18-240-28-3
38634|code|BNE.W           loc_9B5A|64-240-54-130
38638|code|LSLS            R2, R2, #0x1F|210-7
38640|code|BMI.W           loc_9922|0-241-23-129
38644|code|ADDS            R6, #1|1-54
38646|code|CMP             R6, R4|166-66
38648|code|BEQ             loc_96A2|211-208
38650|code|B               loc_96D4|235-231
38652|code|ADD             R5, SP, #0x4C ; 'L'|19-173
38654|code|LDR             R6, =unk_187AC|60-78
38656|code|MOVS            R3, #0|0-35
38658|code|MOVS            R2, #0x53 ; 'S'|83-34
38660|code|ADD.W           R4, R6, #0x40 ; '@'|6-241-64-4
38664|code|ADD.W           R0, R6, #0x80|6-241-128-0
38668|code|MOV             R1, R3|25-70
38670|code|STR             R2, [R0,R3]|194-80
38672|code|ADDS            R2, #1|1-50
38674|code|STR             R1, [R6,R3]|241-80
38676|code|STR             R1, [R4,R3]|225-80
38678|code|ADDS            R3, #4|4-51
38680|code|CMP             R3, #0x40 ; '@'|64-43
38682|code|BNE             loc_970E|248-209
38684|code|LDR             R7, =aOff_0; "OFF"|53-79
38686|code|MOVS            R4, #0|0-36
38688|code|LDR.W           R10, =aOn; "ON"|223-248-252-160
38692|code|MOV             R8, R5|168-70
38694|code|LDR             R2, =aDVpc; "%d vpc> "|52-74
38696|code|MOVS            R1, #0x10|16-33
38698|code|MOV             R3, R4|35-70
38700|code|ADD             R0, SP, #0x11C|71-168
38702|code|BLX             snprintf|255-247-118-238
38706|code|ADD             R0, SP, #0x11C|71-168
38708|code|MOV             R1, R8|65-70
38710|code|MOVS            R2, #0x80|128-34
38712|code|BL              sub_9E44|0-240-132-251
38716|code|CMP             R0, #0|0-40
38718|code|BEQ             loc_97D2|72-208
38720|code|LDRB.W          R3, [SP,#0x4C]|157-248-76-48
38724|code|CBZ             R3, loc_976A|139-177
38726|code|MOV             R0, R8|64-70
38728|code|LDR             R1, =aLogoff; "logoff"|44-73
38730|code|BLX             strcmp|255-247-96-237
38734|code|CMP             R0, #0|0-40
38736|code|BEQ             loc_97C0|54-208
38738|code|MOV             R0, R8|64-70
38740|code|LDR             R1, =aLogin; "login"|42-73
38742|code|BLX             strcmp|255-247-90-237
38746|code|CBNZ            R0, loc_976E|64-185
38748|code|MOVS            R3, #1|1-35
38750|code|STR.W           R3, [R9,#(dword_1886C - 0x187A8)]|201-248-196-48
38754|code|LDR             R0, =aDOk; "%d OK\n"|40-72
38756|code|MOV             R1, R4|33-70
38758|code|BLX             printf|255-247-94-237
38762|code|ADDS            R4, #1|1-52
38764|code|B               loc_9726|219-231
38766|code|LDR.W           R3, [R9,#(dword_1886C - 0x187A8)]|217-248-196-48
38770|code|LDR             R5, =dword_187A8|37-77
38772|code|CBNZ            R3, loc_9782|43-185
38774|code|MOV             R1, R4|33-70
38776|code|LDR             R0, =aDPleaseLogin; "%d Please login\n"|36-72
38778|code|BLX             printf|255-247-84-237
38782|code|ADDS            R4, #1|1-52
38784|code|B               loc_9726|209-231
38786|code|MOV             R0, R8|64-70
38788|code|LDR             R1, =aStatD; "stat %d"|34-73
38790|code|ADD             R2, SP, #0x48 ; 'H'|18-170
38792|code|BLX             __isoc99_sscanf|255-247-78-238
38796|code|CMP             R0, #1|1-40
38798|code|BEQ             loc_984C|93-208
38800|code|MOV             R0, R8|64-70
38802|code|LDR             R1, =aStat; "stat *"|32-73
38804|code|BLX             strcmp|255-247-58-237
38808|code|CMP             R0, #0|0-40
38810|code|BNE             loc_986A|102-209
38812|code|MOV             R1, R0|1-70
38814|code|STR             R0, [SP,#0x48]|18-144
38816|code|ADD.W           R3, R9, R1,LSL#2|9-235-129-3
38820|code|LDR             R0, =aPlugDS; "plug %d: %s\n"|28-72
38822|code|LDR             R2, [R3,#4]|90-104
38824|code|CMP             R2, #0|0-42
38826|code|ITE EQ|12-191
38828|code|MOVEQ           R2, R7|58-70
38830|code|MOVNE           R2, R10|82-70
38832|code|BLX             printf|255-247-56-237
38836|code|LDR             R1, [SP,#0x48]|18-153
38838|code|ADDS            R1, #1|1-49
38840|code|STR             R1, [SP,#0x48]|18-145
38842|code|CMP             R1, #0xF|15-41
38844|code|BLE             loc_97A0|240-221
38846|code|B               loc_9762|208-231
38848|code|MOV             R3, R0|3-70
38850|code|MOV             R1, R4|33-70
38852|code|LDR             R0, =aDOk; "%d OK\n"|15-72
38854|code|STR             R3, [SP,#8]|2-147
38856|code|BLX             printf|255-247-44-237
38860|code|LDR             R3, [SP,#8]|2-155
38862|code|STR.W           R3, [R9,#(dword_1886C - 0x187A8)]|201-248-196-48
38866|code|MOVS            R0, #0|0-32
38868|code|BLX             exit|255-247-246-237
38872|data|DCD __stack_chk_guard|136-135-1-0
38876|data|DCD aP; "p:"|24-242-0-0
38880|data|DCD off_F1A8; "port"|168-241-0-0
38884|data|DCD optarg|160-135-1-0
38888|data|DCD optind|140-135-1-0
38892|data|DCD sub_9D1C+1|29-157-0-0
38896|data|DCD unk_187AC|172-135-1-0
38900|data|DCD aOff_0; "OFF"|20-242-0-0
38904|data|DCD aDVpc; "%d vpc> "|180-242-0-0
38908|data|DCD aLogoff; "logoff"|192-242-0-0
38912|data|DCD aLogin; "login"|208-242-0-0
38916|data|DCD aDOk; "%d OK\n"|200-242-0-0
38920|data|DCD dword_187A8|168-135-1-0
38924|data|DCD aDPleaseLogin; "%d Please login\n"|216-242-0-0
38928|data|DCD aStatD; "stat %d"|236-242-0-0
38932|data|DCD aStat; "stat *"|20-243-0-0
38936|data|DCD aPlugDS; "plug %d: %s\n"|4-243-0-0
38940|data|DCD aSocket_0; "socket"|236-241-0-0
38944|data|DCD aOn; "ON"|16-242-0-0
38948|code|BLX             __errno_location|255-247-244-237
38952|code|LDR.W           R10, =aSetsockopt_0; "setsockopt"|223-248-4-163
38956|code|MOV             R3, R0|3-70
38958|code|MOV             R0, R4|32-70
38960|code|LDR             R5, [R3]|29-104
38962|code|BLX             close|255-247-108-238
38966|code|B               loc_9650|11-231
38968|code|BLX             __errno_location|255-247-234-237
38972|code|LDR.W           R10, =aBind_0; "bind"|223-248-244-162
38976|code|MOV             R3, R0|3-70
38978|code|MOV             R0, R4|32-70
38980|code|LDR             R5, [R3]|29-104
38982|code|BLX             close|255-247-98-238
38986|code|B               loc_9650|1-231
38988|code|LDR             R3, [SP,#0x48]|18-155
38990|code|CMP             R3, #0xF|15-43
38992|code|BHI             loc_98BC|52-216
38994|code|ADD.W           R5, R5, R3,LSL#2|5-235-131-5
38998|code|MOV             R1, R3|25-70
39000|code|LDR             R0, =aPlugDS; "plug %d: %s\n"|164-72
39002|code|LDR             R2, [R5,#4]|106-104
39004|code|CMP             R2, #0|0-42
39006|code|ITE EQ|12-191
39008|code|MOVEQ           R2, R7|58-70
39010|code|MOVNE           R2, R10|82-70
39012|code|BLX             printf|255-247-222-236
39016|code|B               loc_9762|123-231
39018|code|MOV             R0, R8|64-70
39020|code|LDR             R1, =aBeaconD; "beacon %d"|160-73
39022|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39024|code|BLX             __isoc99_sscanf|255-247-218-237
39028|code|CMP             R0, #1|1-40
39030|code|BEQ             loc_98CA|40-208
39032|code|MOV             R0, R8|64-70
39034|code|LDR             R1, =aBeacon; "beacon *"|158-73
39036|code|BLX             strcmp|255-247-198-236
39040|code|CMP             R0, #0|0-40
39042|code|BNE             loc_98E8|49-209
39044|code|MOV             R1, R0|1-70
39046|code|STR             R0, [SP,#0x48]|18-144
39048|code|ADD.W           R3, R9, R1,LSL#2|9-235-129-3
39052|code|LDR             R0, =aPlugDS; "plug %d: %s\n"|151-72
39054|code|LDR             R2, [R3,#0x44]|90-108
39056|code|CMP             R2, #0|0-42
39058|code|ITE EQ|12-191
39060|code|MOVEQ           R2, R7|58-70
39062|code|MOVNE           R2, R10|82-70
39064|code|BLX             printf|255-247-196-236
39068|code|LDR             R1, [SP,#0x48]|18-153
39070|code|ADDS            R1, #1|1-49
39072|code|STR             R1, [SP,#0x48]|18-145
39074|code|CMP             R1, #0xF|15-41
39076|code|BLE             loc_9888|240-221
39078|code|B               loc_9762|92-231
39080|code|BLX             __errno_location|255-247-178-237
39084|code|LDR.W           R10, =aListen_0; "listen"|223-248-136-162
39088|code|MOV             R3, R0|3-70
39090|code|MOV             R0, R4|32-70
39092|code|LDR             R5, [R3]|29-104
39094|code|BLX             close|255-247-42-238
39098|code|B               loc_9650|201-230
39100|code|MOV             R1, R4|33-70
39102|code|LDR             R0, =aDBadvalD; "%d BADVAL: %d\n"|142-72
39104|code|MOV             R2, R3|26-70
39106|code|ADDS            R4, #1|1-52
39108|code|BLX             printf|255-247-174-236
39112|code|B               loc_9726|45-231
39114|code|LDR             R3, [SP,#0x48]|18-155
39116|code|CMP             R3, #0xF|15-43
39118|code|BHI             loc_98BC|245-216
39120|code|ADD.W           R5, R5, R3,LSL#2|5-235-131-5
39124|code|MOV             R1, R3|25-70
39126|code|LDR             R0, =aPlugDS; "plug %d: %s\n"|133-72
39128|code|LDR             R2, [R5,#0x44]|106-108
39130|code|CMP             R2, #0|0-42
39132|code|ITE EQ|12-191
39134|code|MOVEQ           R2, R7|58-70
39136|code|MOVNE           R2, R10|82-70
39138|code|BLX             printf|255-247-160-236
39142|code|B               loc_9762|60-231
39144|code|MOV             R0, R8|64-70
39146|code|LDR             R1, =aTempD; "temp %d"|132-73
39148|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39150|code|BLX             __isoc99_sscanf|255-247-156-237
39154|code|CMP             R0, #1|1-40
39156|code|BEQ.W           loc_9A48|0-240-168-128
39160|code|MOV             R0, R8|64-70
39162|code|LDR             R1, =aTemp; "temp *"|129-73
39164|code|BLX             strcmp|255-247-134-236
39168|code|CMP             R0, #0|0-40
39170|code|BNE             loc_99D4|103-209
39172|code|MOV             R1, R0|1-70
39174|code|STR             R0, [SP,#0x48]|18-144
39176|code|ADD.W           R3, R9, R1,LSL#2|9-235-129-3
39180|code|LDR             R0, =aPlugDD; "plug %d: %d\n"|125-72
39182|code|LDR.W           R2, [R3,#0x84]|211-248-132-32
39186|code|BLX             printf|255-247-136-236
39190|code|LDR             R1, [SP,#0x48]|18-153
39192|code|ADDS            R1, #1|1-49
39194|code|STR             R1, [SP,#0x48]|18-145
39196|code|CMP             R1, #0xF|15-41
39198|code|BLE             loc_9908|243-221
39200|code|B               loc_9762|31-231
39202|code|ADD             R5, SP, #0x4C ; 'L'|19-173
39204|code|MOVS            R2, #0x80|128-34
39206|code|STR             R2, [SP,#0x48]|18-146
39208|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39210|code|LDR.W           R0, [R8]|216-248-0-0
39214|code|MOV             R1, R5|41-70
39216|code|STR             R3, [SP,#8]|2-147
39218|code|BLX             accept|255-247-242-236
39222|code|LDR             R3, [SP,#8]|2-155
39224|code|CMP             R0, #0|0-40
39226|code|MOV             R6, R0|6-70
39228|code|BLT.W           loc_9A60|192-242-144-128
39232|code|MOV             R0, R7|56-70
39234|code|MOV             R7, R3|31-70
39236|code|BL              sub_EA44|5-240-126-248
39240|code|LDR.W           R0, [R10],#4|90-248-4-11
39244|code|ADDS            R3, R0, #1|67-28
39246|code|BEQ             loc_9958|3-208
39248|code|CMP             R6, R0|134-66
39250|code|BEQ             loc_9958|1-208
39252|code|BLX             close|255-247-218-237
39256|code|ADDS            R7, #1|1-55
39258|code|CMP             R7, R4|167-66
39260|code|BNE             loc_9948|244-209
39262|code|MOVS            R0, #0|0-32
39264|code|BLX             close|255-247-212-237
39268|code|MOVS            R1, #0|0-33
39270|code|MOV             R0, R6|48-70
39272|code|BLX             dup2|255-247-184-236
39276|code|CMP             R0, #0|0-40
39278|code|BLT.W           loc_9BA2|192-242-24-129
39282|code|MOVS            R0, #1|1-32
39284|code|BLX             close|255-247-202-237
39288|code|MOVS            R1, #1|1-33
39290|code|MOV             R0, R6|48-70
39292|code|BLX             dup2|255-247-174-236
39296|code|CMP             R0, #0|0-40
39298|code|BGE.W           loc_96FE|191-246-188-174
39302|code|LDR             R3, =stderr|96-75
39304|code|LDR             R4, [R3]|28-104
39306|code|BLX             __errno_location|255-247-66-237
39310|code|LDR             R0, [R0]|0-104
39312|code|BLX             strerror|255-247-254-236
39316|code|LDR             R1, =aDup2StdoutS; "dup2(stdout): %s\n"|93-73
39318|code|MOV             R2, R0|2-70
39320|code|MOV             R0, R4|32-70
39322|code|BLX             fprintf|255-247-46-237
39326|code|MOVS            R0, #1|1-32
39328|code|BLX             exit|255-247-16-237
39332|code|MOV             R0, R7|56-70
39334|code|MOV             R11, R7|187-70
39336|code|BLX             freeaddrinfo|255-247-152-237
39340|code|LDR             R3, =stderr|86-75
39342|code|MOV             R0, R11|88-70
39344|code|LDR             R4, [R3]|28-104
39346|code|BLX             strerror|255-247-238-236
39350|code|LDR             R1, =(aSSS+4); "%s: %s\n"|86-73
39352|code|LDR             R2, [SP,#0x10]|4-154
39354|code|MOV             R3, R0|3-70
39356|code|MOV             R0, R4|32-70
39358|code|BLX             fprintf|255-247-28-237
39362|code|MOVS            R0, #1|1-32
39364|code|BLX             exit|255-247-254-236
39368|code|LDR             R0, =aSignal_0; "signal"|82-72
39370|code|BLX             perror|255-247-154-236
39374|code|MOVS            R0, #1|1-32
39376|code|BLX             exit|255-247-248-236
39380|code|MOV             R0, R8|64-70
39382|code|LDR             R1, =aSpewD; "spew %d"|80-73
39384|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39386|code|BLX             __isoc99_sscanf|255-247-38-237
39390|code|CMP             R0, #1|1-40
39392|code|BNE             loc_9AA4|96-209
39394|code|LDR.W           R12, [SP,#0x48]|221-248-72-192
39398|code|CMP.W           R12, #0|188-241-0-15
39402|code|BLE             loc_9A96|84-221
39404|code|MOV             R5, R12|101-70
39406|code|MOV.W           R11, #0|79-240-0-11
39410|code|MOV             R3, R4|35-70
39412|code|MOV             R12, R8|196-70
39414|code|MOV             R0, R11|88-70
39416|code|MOVS            R1, #0x4E ; 'N'|78-33
39418|code|STR             R3, [SP,#8]|2-147
39420|code|ADD.W           R11, R11, #1|11-241-1-11
39424|code|STR.W           R12, [SP,#0xC]|205-248-12-192
39428|code|BL              sub_F12C|5-240-146-251
39432|code|MOV             R2, #0xF35C|79-242-92-50-192-242-0-2
39440|code|ADD             R0, SP, #0xCC|51-168
39442|code|RSB.W           R4, R1, #0x4E ; 'N'|193-241-78-4
39446|code|MOV             R8, R1|136-70
39448|code|ADDS            R1, R1, R2|137-24
39450|code|MOV             R2, R4|34-70
39452|code|BLX             memcpy|255-247-52-236
39456|code|ADD             R2, SP, #0xCC|51-170
39458|code|ADDS            R0, R2, R4|16-25
39460|code|LDR             R1, =aAbcdefghijklmn; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM"...|61-73
39462|code|MOV             R2, R8|66-70
39464|code|BLX             memcpy|255-247-46-236
39468|code|ADD             R0, SP, #0xCC|51-168
39470|code|MOVS            R2, #0|0-34
39472|code|STRB.W          R2, [SP,#0x11A]|141-248-26-33
39476|code|BLX             puts|255-247-154-236
39480|code|CMP             R11, R5|171-69
39482|code|LDR             R3, [SP,#8]|2-155
39484|code|LDR.W           R12, [SP,#0xC]|221-248-12-192
39488|code|BNE             loc_99F6|217-209
39490|code|MOV             R4, R3|28-70
39492|code|MOV             R8, R12|224-70
39494|code|B               loc_9762|140-230
39496|code|LDR             R2, [SP,#0x48]|18-154
39498|code|CMP             R2, #0xF|15-42
39500|code|BHI             loc_9AC2|57-216
39502|code|ADD.W           R3, R9, R2,LSL#2|9-235-130-3
39506|code|MOV             R1, R2|17-70
39508|code|LDR             R0, =aPlugDD; "plug %d: %d\n"|43-72
39510|code|LDR.W           R2, [R3,#0x84]|211-248-132-32
39514|code|BLX             printf|255-247-228-235
39518|code|B               loc_98F8|75-231
39520|code|LDR             R3, =stderr|41-75
39522|code|LDR             R4, [R3]|28-104
39524|code|BLX             __errno_location|255-247-212-236
39528|code|LDR             R0, [R0]|0-104
39530|code|BLX             strerror|255-247-146-236
39534|code|LDR             R1, =aAcceptS; "accept: %s\n"|44-73
39536|code|MOV             R2, R0|2-70
39538|code|MOV             R0, R4|32-70
39540|code|BLX             fprintf|255-247-192-236
39544|code|MOVS            R0, #1|1-32
39546|code|BLX             exit|255-247-164-236
39550|code|LDR             R3, =stderr|34-75
39552|code|LDR             R4, [R3]|28-104
39554|code|BLX             gai_strerror|255-247-246-235
39558|code|LDR             R1, =aGetaddrinfoS; "getaddrinfo: %s\n"|39-73
39560|code|MOV             R2, R0|2-70
39562|code|MOV             R0, R4|32-70
39564|code|BLX             fprintf|255-247-180-236
39568|code|MOV             R0, R5|40-70
39570|code|BLX             exit|255-247-152-236
39574|code|MOV             R1, R4|33-70
39576|code|LDR             R0, =aDBadvalD; "%d BADVAL: %d\n"|23-72
39578|code|MOV             R2, R12|98-70
39580|code|ADDS            R4, #1|1-52
39582|code|BLX             printf|255-247-194-235
39586|code|B               loc_9726|64-230
39588|code|MOV             R0, R8|64-70
39590|code|LDR             R1, =(aBeaconD+4); "on %d"|32-73
39592|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39594|code|BLX             __isoc99_sscanf|255-247-190-236
39598|code|CMP             R0, #1|1-40
39600|code|BNE             loc_9ACE|13-209
39602|code|LDR             R2, [SP,#0x48]|18-154
39604|code|CMP             R2, #0xF|15-42
39606|code|ITT LS|156-191
39608|code|ADDLS.W         R2, R9, R2,LSL#2|9-235-130-2
39612|code|STRLS           R0, [R2,#4]|80-96
39614|code|BLS.W           loc_9762|127-246-80-174
39618|code|MOV             R1, R4|33-70
39620|code|LDR             R0, =aDBadvalD; "%d BADVAL: %d\n"|12-72
39622|code|BLX             printf|255-247-174-235
39626|code|ADDS            R4, #1|1-52
39628|code|B               loc_9726|43-230
39630|code|MOV             R0, R8|64-70
39632|code|LDR             R1, =aOffD; "off %d"|22-73
39634|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39636|code|BLX             __isoc99_sscanf|255-247-168-236
39640|code|CMP             R0, #1|1-40
39642|code|BNE             loc_9B6E|72-209
39644|code|LDR             R2, [SP,#0x48]|18-154
39646|code|CMP             R2, #0xF|15-42
39648|code|BHI             loc_9AC2|239-216
39650|code|ADD.W           R2, R9, R2,LSL#2|9-235-130-2
39654|code|MOVS            R3, #0|0-35
39656|code|STR             R3, [R2,#4]|83-96
39658|code|B               loc_9762|58-230
39660|data|DCD aPlugDS; "plug %d: %s\n"|4-243-0-0
39664|data|DCD aBeaconD; "beacon %d"|28-243-0-0
39668|data|DCD aBeacon; "beacon *"|40-243-0-0
39672|data|DCD aDBadvalD; "%d BADVAL: %d\n"|244-242-0-0
39676|data|DCD aTempD; "temp %d"|52-243-0-0
39680|data|DCD aTemp; "temp *"|76-243-0-0
39684|data|DCD aPlugDD; "plug %d: %d\n"|60-243-0-0
39688|data|DCD stderr|144-135-1-0
39692|data|DCD aDup2StdoutS; "dup2(stdout): %s\n"|160-242-0-0
39696|data|DCD aSSS+4; "%s: %s\n"|80-244-0-0
39700|data|DCD aSignal_0; "signal"|28-242-0-0
39704|data|DCD aSpewD; "spew %d"|84-243-0-0
39708|data|DCD aAbcdefghijklmn; "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM"...|92-243-0-0
39712|data|DCD aAcceptS; "accept: %s\n"|128-242-0-0
39716|data|DCD aGetaddrinfoS; "getaddrinfo: %s\n"|36-242-0-0
39720|data|DCD aBeaconD+4; "on %d"|32-243-0-0
39724|data|DCD aOffD; "off %d"|172-243-0-0
39728|data|DCD aSetsockopt_0; "setsockopt"|244-241-0-0
39732|data|DCD aBind_0; "bind"|0-242-0-0
39736|data|DCD aListen_0; "listen"|8-242-0-0
39740|code|LDR             R3, =stderr|67-75
39742|code|LDR             R4, [R3]|28-104
39744|code|BLX             __errno_location|255-247-102-236
39748|code|LDR             R0, [R0]|0-104
39750|code|BLX             strerror|255-247-36-236
39754|code|LDR             R1, =aPollS; "poll: %s\n"|65-73
39756|code|MOV             R2, R0|2-70
39758|code|MOV             R0, R4|32-70
39760|code|BLX             fprintf|255-247-82-236
39764|code|MOVS            R0, #1|1-32
39766|code|BLX             exit|255-247-54-236
39770|code|LDR             R3, =stderr|60-75
39772|code|LDR             R1, =aPollErrorOnFdD; "poll: error on fd %d\n"|61-73
39774|code|LDR.W           R2, [R8]|216-248-0-32
39778|code|LDR             R0, [R3]|24-104
39780|code|BLX             fprintf|255-247-72-236
39784|code|MOVS            R0, #1|1-32
39786|code|BLX             exit|255-247-44-236
39790|code|MOV             R0, R8|64-70
39792|code|LDR             R1, =aFlashD; "flash %d"|57-73
39794|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39796|code|BLX             __isoc99_sscanf|255-247-88-236
39800|code|CMP             R0, #1|1-40
39802|code|BNE             loc_9BC0|33-209
39804|code|LDR             R2, [SP,#0x48]|18-154
39806|code|CMP             R2, #0xF|15-42
39808|code|ITT LS|156-191
39810|code|ADDLS.W         R2, R9, R2,LSL#2|9-235-130-2
39814|code|STRLS           R0, [R2,#0x44]|80-100
39816|code|BLS.W           loc_9762|127-246-235-173
39820|code|B               loc_9AC2|153-231
39822|code|LDR             R3, =stderr|47-75
39824|code|MOV             R1, R5|41-70
39826|code|LDR             R0, =aGetaddrinfoNoA; "getaddrinfo: no address to bind to\n"|50-72
39828|code|MOVS            R2, #0x23 ; '#'|35-34
39830|code|LDR             R3, [R3]|27-104
39832|code|BLX             fwrite|255-247-196-235
39836|code|MOV             R0, R5|40-70
39838|code|BLX             exit|255-247-18-236
39842|code|LDR             R3, =stderr|42-75
39844|code|LDR             R4, [R3]|28-104
39846|code|BLX             __errno_location|255-247-52-236
39850|code|LDR             R0, [R0]|0-104
39852|code|BLX             strerror|255-247-240-235
39856|code|LDR             R1, =aDup2StdinS; "dup2(stdin): %s\n"|43-73
39858|code|MOV             R2, R0|2-70
39860|code|MOV             R0, R4|32-70
39862|code|BLX             fprintf|255-247-32-236
39866|code|MOVS            R0, #1|1-32
39868|code|BLX             exit|255-247-2-236
39872|code|MOV             R0, R8|64-70
39874|code|LDR             R1, =aUnflashD; "unflash %d"|40-73
39876|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39878|code|BLX             __isoc99_sscanf|255-247-48-236
39882|code|CMP             R0, #1|1-40
39884|code|BEQ             loc_9BEA|13-208
39886|code|MOV             R0, R8|64-70
39888|code|LDR             R1, =(aBeacon+4); "on *"|37-73
39890|code|BLX             strcmp|255-247-28-235
39894|code|CBNZ            R0, loc_9BFC|136-185
39896|code|MOVS            R2, #1|1-34
39898|code|MOV             R3, R0|3-70
39900|code|STR             R2, [R6,R3]|242-80
39902|code|ADDS            R3, #4|4-51
39904|code|CMP             R3, #0x40 ; '@'|64-43
39906|code|BNE             loc_9BDC|251-209
39908|code|MOVS            R3, #0x10|16-35
39910|code|STR             R3, [SP,#0x48]|18-147
39912|code|B               loc_9762|187-229
39914|code|LDR             R2, [SP,#0x48]|18-154
39916|code|CMP             R2, #0xF|15-42
39918|code|BHI.W           loc_9AC2|63-246-104-175
39922|code|ADD.W           R2, R9, R2,LSL#2|9-235-130-2
39926|code|MOVS            R3, #0|0-35
39928|code|STR             R3, [R2,#0x44]|83-100
39930|code|B               loc_9762|178-229
39932|code|MOV             R0, R8|64-70
39934|code|LDR             R1, =aOff; "off *"|27-73
39936|code|BLX             strcmp|255-247-4-235
39940|code|CBNZ            R0, loc_9C14|48-185
39942|code|MOV             R3, R0|3-70
39944|code|MOV             R2, R0|2-70
39946|code|STR             R2, [R6,R3]|242-80
39948|code|ADDS            R3, #4|4-51
39950|code|CMP             R3, #0x40 ; '@'|64-43
39952|code|BNE             loc_9C0A|251-209
39954|code|B               loc_9BE4|231-231
39956|code|MOV             R0, R8|64-70
39958|code|LDR             R1, =aResetD; "reset %d"|22-73
39960|code|ADD             R2, SP, #0x48 ; 'H'|18-170
39962|code|BLX             __isoc99_sscanf|255-247-6-236
39966|code|CMP             R0, #1|1-40
39968|code|BEQ             loc_9C34|8-208
39970|code|MOV             R0, R8|64-70
39972|code|LDR             R1, =aReset; "reset *"|19-73
39974|code|BLX             strcmp|255-247-242-234
39978|code|CBNZ            R0, loc_9C3C|56-185
39980|code|MOVS            R0, #1|1-32
39982|code|BLX             sleep|255-247-68-235
39986|code|B               loc_9762|150-229
39988|code|LDR             R2, [SP,#0x48]|18-154
39990|code|CMP             R2, #0xF|15-42
39992|code|BLS             loc_9C2C|248-217
39994|code|B               loc_9AC2|66-231
39996|code|MOV             R1, R4|33-70
39998|code|LDR             R0, =aDUnknownS; "%d UNKNOWN: %s\n"|14-72
40000|code|MOV             R2, R8|66-70
40002|code|ADDS            R4, #1|1-52
40004|code|BLX             printf|255-247-238-234
40008|code|B               loc_9726|109-229
40010|data|ALIGN 4|0-191
40012|data|DCD stderr|144-135-1-0
40016|data|DCD aPollS; "poll: %s\n"|92-242-0-0
40020|data|DCD aPollErrorOnFdD; "poll: error on fd %d\n"|104-242-0-0
40024|data|DCD aFlashD; "flash %d"|180-243-0-0
40028|data|DCD aGetaddrinfoNoA; "getaddrinfo: no address to bind to\n"|56-242-0-0
40032|data|DCD aDup2StdinS; "dup2(stdin): %s\n"|140-242-0-0
40036|data|DCD aUnflashD; "unflash %d"|192-243-0-0
40040|data|DCD aBeacon+4; "on *"|44-243-0-0
40044|data|DCD aOff; "off *"|204-243-0-0
40048|data|DCD aResetD; "reset %d"|212-243-0-0
40052|data|DCD aReset; "reset *"|224-243-0-0
40056|data|DCD aDUnknownS; "%d UNKNOWN: %s\n"|232-243-0-0
40060|code|MOV.W           R11, #0|79-240-0-11
40064|code|MOV.W           LR, #0|79-240-0-14
40068|code|POP.W           {R1}; argc|93-248-4-27
40072|code|MOV             R2, SP; ubp_av|106-70
40074|code|PUSH.W          {R2}; stack_end|77-248-4-45
40078|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
40082|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
40086|code|PUSH.W          {R12}; fini|77-248-4-205
40090|code|LDR             R0, =byte_9541; main|4-72
40092|code|LDR             R3, =(sub_F154+1); init|4-75
40094|code|BLX             __libc_start_main|255-247-114-235
40098|code|BLX             abort|255-247-46-236
40102|data|ALIGN 4|0-0
40104|data|DCD nullsub_1+1|153-241-0-0
40108|data|DCD byte_9541|65-149-0-0
40112|data|DCD sub_F154+1|85-241-0-0
40116|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9CBC)|3-75
40118|code|LDR             R2, =(__gmon_start___ptr_0 - 0x18648)|4-74
40120|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
40122|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
40124|code|CBZ             R3, locret_9CC2|11-177
40126|code|B.W             j___gmon_start__|255-247-109-187
40130|code|BX              LR|112-71
40132|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9CBC|140-233-0-0
40136|data|DCD __gmon_start___ptr_0 - 0x18648|40-1-0-0
40140|code|LDR             R3, =byte_187A4|2-75
40142|code|LDRB            R2, [R3]|26-120
40144|code|CBNZ            R2, locret_9CD6|10-185
40146|code|MOVS            R2, #1|1-34
40148|code|STRB            R2, [R3]|26-112
40150|code|BX              LR|112-71
40152|data|DCD byte_187A4|164-135-1-0
40156|code|LDR             R0, =dword_18544|3-72
40158|code|PUSH            {R3,LR}|8-181
40160|code|LDR             R3, [R0]|3-104
40162|code|CBZ             R3, locret_9CEA|19-177
40164|code|LDR             R3, =0|2-75
40166|code|CBZ             R3, locret_9CEA|3-177
40168|code|BLX             R3|152-71
40170|code|POP             {R3,PC}|8-189
40172|data|DCD dword_18544|68-133-1-0
40176|data|DCD 0|0-0-0-0
40180|code|PUSH            {R3,LR}|8-181
40182|code|MOVW            R2, #0x87A8|72-242-168-114
40186|code|MOVW            R3, #0x8790|72-242-144-115
40190|code|MOVT.W          R2, #1|192-242-1-2
40194|code|MOVT.W          R3, #1|192-242-1-3
40198|code|MOVW            R1, #0xF1C8|79-242-200-17
40202|code|LDR             R2, [R2]|18-104
40204|code|MOVT.W          R1, #0; format|192-242-0-1
40208|code|LDR             R0, [R3]; stream|24-104
40210|code|BLX             fprintf|255-247-114-235
40214|code|MOVS            R0, #1; status|1-32
40216|code|BLX             exit|255-247-84-235
40220|code|PUSH            {R4}|16-180
40222|code|MOVW            R3, #0x87A8|72-242-168-115
40226|code|MOVW            R4, #0x8790|72-242-144-116
40230|code|MOVT.W          R3, #1|192-242-1-3
40234|code|MOVT.W          R4, #1|192-242-1-4
40238|code|MOVW            R1, #0xF1D4|79-242-212-17
40242|code|LDR             R2, [R3]|26-104
40244|code|MOVT.W          R1, #0|192-242-0-1
40248|code|MOV             R3, R0|3-70
40250|code|LDR             R0, [R4]|32-104
40252|code|POP             {R4}|16-188
40254|code|B.W             j_fprintf|255-247-89-187
40258|data|ALIGN 4|0-191
40260|code|PUSH            {R3-R7,LR}|248-181
40262|code|MOV             R6, R0|6-70
40264|code|MOV             R5, R1|13-70
40266|code|MOV             R4, R2|20-70
40268|code|MOV             R1, R5; buf|41-70
40270|code|MOV             R2, R4; nbytes|34-70
40272|code|MOV             R0, R6; fd|48-70
40274|code|BLX             read|255-247-116-234
40278|code|CMP             R0, #0|0-40
40280|code|MOV             R7, R0|7-70
40282|code|BGE             loc_9D76|12-218
40284|code|BLX             __errno_location|255-247-88-235
40288|code|LDR             R3, [R0]|3-104
40290|code|CMP             R3, #4|4-43
40292|code|BEQ             loc_9D4C|242-208
40294|code|CMP             R3, #0xB|11-43
40296|code|BEQ             loc_9D76|5-208
40298|code|CMP             R3, #0x68 ; 'h'|104-43
40300|code|BEQ             loc_9D76|3-208
40302|code|MOVS            R0, #1|1-32
40304|code|LDR             R1, =aRead_0; "read"|2-73
40306|code|BL              sub_9FA8|0-240-25-249
40310|code|MOV             R0, R7|56-70
40312|code|POP             {R3-R7,PC}|248-189
40314|data|ALIGN 4|0-191
40316|data|DCD aRead_0; "read"|0-244-0-0
40320|code|PUSH            {R3-R7,LR}|248-181
40322|code|MOV             R6, R0|6-70
40324|code|MOV             R5, R1|13-70
40326|code|MOV             R4, R2|20-70
40328|code|MOV             R1, R5; buf|41-70
40330|code|MOV             R2, R4; n|34-70
40332|code|MOV             R0, R6; fd|48-70
40334|code|BLX             write|255-247-112-235
40338|code|CMP             R0, #0|0-40
40340|code|MOV             R7, R0|7-70
40342|code|BGE             loc_9DB6|14-218
40344|code|BLX             __errno_location|255-247-58-235
40348|code|LDR             R3, [R0]|3-104
40350|code|CMP             R3, #4|4-43
40352|code|BEQ             loc_9D88|242-208
40354|code|CMP             R3, #0xB|11-43
40356|code|BEQ             loc_9DB6|7-208
40358|code|CMP             R3, #0x68 ; 'h'|104-43
40360|code|BEQ             loc_9DB6|5-208
40362|code|CMP             R3, #0x20 ; ' '|32-43
40364|code|BEQ             loc_9DB6|3-208
40366|code|MOVS            R0, #1|1-32
40368|code|LDR             R1, =aWrite; "write"|2-73
40370|code|BL              sub_9FA8|0-240-249-248
40374|code|MOV             R0, R7|56-70
40376|code|POP             {R3-R7,PC}|248-189
40378|data|ALIGN 4|0-191
40380|data|DCD aWrite; "write"|8-244-0-0
40384|code|CMP             R2, #0|0-42
40386|code|PUSH            {R3-R7,LR}|248-181
40388|code|MOV             R6, R0|6-70
40390|code|MOV             R7, R1|15-70
40392|code|MOV             R5, R2|21-70
40394|code|BLE             locret_9DF0|17-221
40396|code|MOVS            R4, #0|0-36
40398|code|B               loc_9DD4|1-224
40400|code|CMP             R5, R4|165-66
40402|code|BLE             locret_9DF0|13-221
40404|code|ADDS            R1, R7, R4|57-25
40406|code|SUBS            R2, R5, R4|42-27
40408|code|MOV             R0, R6|48-70
40410|code|BL              sub_9D80|255-247-209-255
40414|code|CMP             R0, #0|0-40
40416|code|ADD             R4, R0|4-68
40418|code|BGE             loc_9DD0|245-218
40420|code|MOVS            R0, #1|1-32
40422|code|LDR             R1, =aWrite; "write"|3-73
40424|code|BL              sub_9FA8|0-240-222-248
40428|code|CMP             R5, R4|165-66
40430|code|BGT             loc_9DD4|241-220
40432|code|POP             {R3-R7,PC}|248-189
40434|data|ALIGN 4|0-191
40436|data|DCD aWrite; "write"|8-244-0-0
40440|code|CMP             R2, #0|0-42
40442|code|PUSH.W          {R4-R8,LR}|45-233-240-65
40446|code|MOV             R6, R0|6-70
40448|code|MOV             R7, R1|15-70
40450|code|MOV             R5, R2|21-70
40452|code|BLE             locret_9E36|23-221
40454|code|MOVS            R4, #0|0-36
40456|code|B               loc_9E18|6-224
40458|code|BNE             loc_9E12|2-209
40460|code|LDR             R1, =aEofOnRead; "EOF on read"|11-73
40462|code|BL              sub_9FA8|0-240-203-248
40466|code|ADD             R4, R8|68-68
40468|code|CMP             R5, R4|165-66
40470|code|BLE             locret_9E36|14-221
40472|code|ADDS            R1, R7, R4|57-25
40474|code|SUBS            R2, R5, R4|42-27
40476|code|MOV             R0, R6|48-70
40478|code|BL              sub_9D44|255-247-145-255
40482|code|CMP             R0, #0|0-40
40484|code|MOV             R8, R0|128-70
40486|code|BGE             loc_9E0A|240-218
40488|code|MOVS            R0, #1|1-32
40490|code|LDR             R1, =aRead_0; "read"|5-73
40492|code|ADD             R4, R8|68-68
40494|code|BL              sub_9FA8|0-240-187-248
40498|code|CMP             R5, R4|165-66
40500|code|BGT             loc_9E18|240-220
40502|code|POP.W           {R4-R8,PC}|189-232-240-129
40506|data|ALIGN 4|0-191
40508|data|DCD aEofOnRead; "EOF on read"|16-244-0-0
40512|data|DCD aRead_0; "read"|0-244-0-0
40516|code|PUSH            {R3-R5,LR}|56-181
40518|code|MOV             R3, R0|3-70
40520|code|MOV             R4, R1|12-70
40522|code|LDR             R0, =(aRegcompFailedS+0x10); format|20-72
40524|code|MOV             R1, R3|25-70
40526|code|MOV             R5, R2|21-70
40528|code|BLX             printf|255-247-232-233
40532|code|LDR             R3, =stdout|18-75
40534|code|LDR             R0, [R3]; stream|24-104
40536|code|BLX             fflush|255-247-246-233
40540|code|LDR             R3, =stdin|17-75
40542|code|MOV             R0, R4; s|32-70
40544|code|MOV             R1, R5; n|41-70
40546|code|LDR             R2, [R3]; stream|26-104
40548|code|BLX             fgets|255-247-10-234
40552|code|CBZ             R0, loc_9E96|168-177
40554|code|MOV             R0, R4; s|32-70
40556|code|BLX             strlen|255-247-182-234
40560|code|SUBS            R5, R0, #1|69-30
40562|code|ADDS            R5, R4, R5|101-25
40564|code|BCS             loc_9E92|13-210
40566|code|BLX             __ctype_b_loc|255-247-160-234
40570|code|MOVS            R1, #0|0-33
40572|code|B               loc_9E84|2-224
40574|code|CMP             R4, R5|172-66
40576|code|STRB            R1, [R5,#1]|105-112
40578|code|BHI             loc_9E92|6-216
40580|code|LDRB.W          R2, [R5],#-1|21-248-1-41
40584|code|LDR             R3, [R0]|3-104
40586|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
40590|code|LSLS            R3, R3, #0x12|155-4
40592|code|BMI             loc_9E7E|245-212
40594|code|MOV             R0, R4|32-70
40596|code|POP             {R3-R5,PC}|56-189
40598|code|MOV             R4, R0|4-70
40600|code|B               loc_9E92|251-231
40602|data|ALIGN 4|0-191
40604|data|DCD aRegcompFailedS+0x10; "%s"|128-2-1-0
40608|data|DCD stdout|156-135-1-0
40612|data|DCD stdin|152-135-1-0
40616|code|PUSH.W          {R4-R9,LR}|45-233-240-67
40620|code|SUB.W           SP, SP, #0x410|173-245-130-109
40624|code|LDR             R4, =__stack_chk_guard|40-76
40626|code|SUB             SP, SP, #4|129-176
40628|code|MOV             R6, R0|6-70
40630|code|MOV             R9, R1|137-70
40632|code|MOV             R8, R2|144-70
40634|code|LDR             R5, =dword_18870|39-77
40636|code|LDR             R3, [R4]|35-104
40638|code|STR.W           R3, [SP,#0x430+var_24]|205-248-12-52
40642|code|BLX             __errno_location|255-247-166-234
40646|code|LDR             R3, [R5]|43-104
40648|code|LDR             R7, [R0]|7-104
40650|code|CMP             R3, #0|0-43
40652|code|BEQ             loc_9F44|58-208
40654|code|MOV             R3, R8; arg|67-70
40656|code|ADD             R0, SP, #0x430+s; s|3-168
40658|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
40662|code|MOV             R2, R9; format|74-70
40664|code|BLX             vsnprintf|255-247-244-234
40668|code|LDR             R3, =dword_1877C|31-75
40670|code|LDR             R3, [R3]|27-104
40672|code|CBNZ            R6, loc_9F04|134-185
40674|code|CMP             R3, #0|0-43
40676|code|BNE             loc_9F34|38-209
40678|code|MOVS            R0, #3; pri|3-32
40680|code|LDR             R1, =(aRegcompFailedS+0x10); fmt|29-73
40682|code|ADD             R2, SP, #0x430+s|3-170
40684|code|BLX             syslog|255-247-216-234
40688|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
40692|code|LDR             R3, [R4]|35-104
40694|code|CMP             R2, R3|154-66
40696|code|BNE             loc_9F50|42-209
40698|code|ADD             SP, SP, #0x14|5-176
40700|code|ADD.W           SP, SP, #0x400|13-245-128-109
40704|code|POP.W           {R4-R9,PC}|189-232-240-131
40708|code|MOV             R0, R7; errnum|56-70
40710|code|CBZ             R3, loc_9F22|99-177
40712|code|LDR             R3, =stderr|22-75
40714|code|LDR             R5, [R5]|45-104
40716|code|LDR             R6, [R3]|30-104
40718|code|BLX             strerror|255-247-64-234
40722|code|LDR             R1, =aSSS; "%s: %s: %s\n"|21-73
40724|code|MOV             R2, R5|42-70
40726|code|ADD             R3, SP, #0x430+s|3-171
40728|code|STR             R0, [SP,#0x430+var_430]|0-144
40730|code|MOV             R0, R6; stream|48-70
40732|code|BLX             fprintf|255-247-108-234
40736|code|B               loc_9EF0|230-231
40738|code|BLX             strerror|255-247-54-234
40742|code|LDR             R1, =aSS; "%s: %s"|17-73
40744|code|ADD             R2, SP, #0x430+s|3-170
40746|code|MOV             R3, R0|3-70
40748|code|MOVS            R0, #3; pri|3-32
40750|code|BLX             syslog|255-247-184-234
40754|code|B               loc_9EF0|221-231
40756|code|LDR             R3, =stderr|11-75
40758|code|LDR             R2, [R5]|42-104
40760|code|LDR             R1, =(aSSS+4); format|13-73
40762|code|LDR             R0, [R3]; stream|24-104
40764|code|ADD             R3, SP, #0x430+s|3-171
40766|code|BLX             fprintf|255-247-92-234
40770|code|B               loc_9EF0|213-231
40772|code|LDR             R0, =aErrProgVoid0; "err_prog != ((void *)0)"|11-72
40774|code|MOVS            R2, #0x49 ; 'I'; line|73-34
40776|code|LDR             R1, =aSrcErrorC; "../src/error.c"|11-73
40778|code|LDR             R3, =aVerr; "_verr"|12-75
40780|code|BLX             __assert_fail|255-247-234-234
40784|code|BLX             __stack_chk_fail|255-247-190-233
40788|data|DCD __stack_chk_guard|136-135-1-0
40792|data|DCD dword_18870|112-136-1-0
40796|data|DCD dword_1877C|124-135-1-0
40800|data|DCD aRegcompFailedS+0x10; "%s"|128-2-1-0
40804|data|DCD stderr|144-135-1-0
40808|data|DCD aSSS; "%s: %s: %s\n"|76-244-0-0
40812|data|DCD aSS; "%s: %s"|88-244-0-0
40816|data|DCD aSSS+4; "%s: %s\n"|80-244-0-0
40820|data|DCD aErrProgVoid0; "err_prog != ((void *)0)"|36-244-0-0
40824|data|DCD aSrcErrorC; "../src/error.c"|60-244-0-0
40828|data|DCD aVerr; "_verr"|28-244-0-0
40832|code|PUSH            {R4,LR}|16-181
40834|code|MOVS            R1, #0x2F ; '/'|47-33
40836|code|MOV             R4, R0|4-70
40838|code|BLX             strrchr|255-247-128-234
40842|code|CBZ             R0, loc_9F8E|0-177
40844|code|ADDS            R4, R0, #1|68-28
40846|code|LDR             R3, =dword_18870|1-75
40848|code|STR             R4, [R3]|28-96
40850|code|POP             {R4,PC}|16-189
40852|data|DCD dword_18870|112-136-1-0
40856|code|MOV             R3, #0x1877C|72-242-124-115-192-242-1-3
40864|code|MOVS            R2, #0|0-34
40866|code|STR             R2, [R3]|26-96
40868|code|BX              LR|112-71
40870|data|ALIGN 4|0-191
40872|code|PUSH            {R1-R3}|14-180
40874|code|PUSH            {LR}|0-181
40876|code|SUB             SP, SP, #8|130-176
40878|code|ADD             R3, SP, #0x18+varg_r1|3-171
40880|code|LDR.W           R1, [R3],#4|83-248-4-27
40884|code|MOV             R2, R3|26-70
40886|code|STR             R3, [SP,#0x18+var_14]|1-147
40888|code|BL              sub_9EA8|255-247-118-255
40892|code|BL              sub_E598|4-240-236-250
40896|code|MOV             R1, #0xF460|79-242-96-65-192-242-0-1
40904|code|MOV             R2, R0|2-70
40906|code|MOVS            R0, #0x10|16-32
40908|code|BL              sub_A030|0-240-48-248
40912|code|MOVS            R0, #1; status|1-32
40914|code|BLX             exit|255-247-248-233
40918|data|ALIGN 4|0-191
40920|code|PUSH            {R1-R3}|14-180
40922|code|PUSH            {LR}|0-181
40924|code|SUB             SP, SP, #8|130-176
40926|code|ADD             R2, SP, #0x18+varg_r1|3-170
40928|code|LDR.W           R1, [R2],#4|82-248-4-27
40932|code|STR             R2, [SP,#0x18+var_14]|1-146
40934|code|BL              sub_9EA8|255-247-95-255
40938|code|ADD             SP, SP, #8|2-176
40940|code|POP.W           {LR}|93-248-4-235
40944|code|ADD             SP, SP, #0xC|3-176
40946|code|BX              LR|112-71
40948|code|MOVW            R1, #0x280|64-242-128-33
40952|code|MOVS            R0, #1|1-32
40954|code|PUSH            {R3,LR}|8-181
40956|code|MOVT.W          R1, #1|192-242-1-1
40960|code|BL              sub_9FA8|255-247-210-255
40964|code|MOVW            R1, #0xF484|79-242-132-65
40968|code|MOVS            R0, #0|0-32
40970|code|PUSH            {R3,LR}|8-181
40972|code|MOVT.W          R1, #0|192-242-0-1
40976|code|BL              sub_9FA8|255-247-202-255
40980|code|MOV             R3, #0x18780|72-242-128-115-192-242-1-3
40988|code|MOVS            R2, #0|0-34
40990|code|STR             R2, [R3]|26-96
40992|code|BX              LR|112-71
40994|data|ALIGN 4|0-191
40996|code|MOV             R3, #0x18874|72-246-116-3-192-242-1-3
41004|code|STR             R0, [R3]|24-96
41006|code|BX              LR|112-71
41008|code|PUSH            {R1-R3}|14-180
41010|code|LDR             R1, =dword_18874|54-73
41012|code|PUSH            {R4-R7,LR}|240-181
41014|code|SUB.W           SP, SP, #0x418|173-245-131-109
41018|code|LDR             R5, =__stack_chk_guard|53-77
41020|code|LDR             R4, [R1]|12-104
41022|code|LDR.W           R2, [SP,#0x438+varg_r1]; format|221-248-44-36
41026|code|LDR             R3, [R5]|43-104
41028|code|ANDS            R4, R0|4-64
41030|code|CMP             R4, R0|132-66
41032|code|STR.W           R3, [SP,#0x438+var_24]|205-248-20-52
41036|code|BEQ             loc_A066|11-208
41038|code|LDR.W           R2, [SP,#0x438+var_24]|221-248-20-36
41042|code|LDR             R3, [R5]|43-104
41044|code|CMP             R2, R3|154-66
41046|code|BNE             loc_A108|87-209
41048|code|ADD             SP, SP, #0x18|6-176
41050|code|ADD.W           SP, SP, #0x400|13-245-128-109
41054|code|POP.W           {R4-R7,LR}|189-232-240-64
41058|code|ADD             SP, SP, #0xC|3-176
41060|code|BX              LR|112-71
41062|code|ADD.W           R6, SP, #0x438+varg_r2|13-245-134-102
41066|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
41070|code|ADD             R0, SP, #0x438+s; s|5-168
41072|code|STR             R6, [SP,#0x438+var_42C]|3-150
41074|code|MOV             R3, R6; arg|51-70
41076|code|BLX             vsnprintf|255-247-38-234
41080|code|LDR             R3, =dword_18780|38-75
41082|code|LDR             R1, [R3]|25-104
41084|code|CBNZ            R1, loc_A0B0|193-185
41086|code|LDR.W           LR, =unk_F498|223-248-168-224
41090|code|CMP             R4, #1|1-44
41092|code|IT NE|24-191
41094|code|MOVNE           R3, LR|115-70
41096|code|BNE             loc_A092|3-209
41098|code|B               loc_A0A8|13-224
41100|code|ADDS            R3, #8|8-51
41102|code|CMP             R4, R2|148-66
41104|code|BEQ             loc_A0A8|10-208
41106|code|LDR             R2, [R3,#8]|154-104
41108|code|ADDS            R1, #1|1-49
41110|code|CMP             R2, #0|0-42
41112|code|BNE             loc_A08C|248-209
41114|code|LDR             R2, =aUnknown; "<unknown>"|31-74
41116|code|MOVS            R0, #7; pri|7-32
41118|code|LDR             R1, =aSS; "%s: %s"|31-73
41120|code|ADD             R3, SP, #0x438+s|5-171
41122|code|BLX             syslog|255-247-254-233
41126|code|B               loc_A04E|210-231
41128|code|ADD.W           R1, LR, R1,LSL#3|14-235-193-1
41132|code|LDR             R2, [R1,#4]|74-104
41134|code|B               loc_A09C|245-231
41136|code|LDR             R3, =stderr|27-75
41138|code|MOVS            R0, #0; timer|0-32
41140|code|LDR             R7, [R3]|31-104
41142|code|BLX             time|255-247-244-232
41146|code|MOV             R3, R0|3-70
41148|code|ADD             R0, SP, #0x438+timer; timer|4-168
41150|code|STR             R3, [SP,#0x438+timer]|4-147
41152|code|BLX             ctime|255-247-0-233
41156|code|MOV             R6, R0|6-70
41158|code|BLX             strlen|255-247-138-233
41162|code|LDR.W           LR, =unk_F498|223-248-92-224
41166|code|ADDS            R3, R6, R0|51-24
41168|code|MOVS            R0, #0|0-32
41170|code|CMP             R4, #1|1-44
41172|code|STRB.W          R0, [R3,#-1]|3-248-1-12
41176|code|IT NE|24-191
41178|code|MOVNE           R3, LR|115-70
41180|code|BNE             loc_A0E6|3-209
41182|code|B               loc_A100|15-224
41184|code|ADDS            R3, #8|8-51
41186|code|CMP             R4, R2|148-66
41188|code|BEQ             loc_A100|12-208
41190|code|LDR             R2, [R3,#8]|154-104
41192|code|ADDS            R0, #1|1-48
41194|code|CMP             R2, #0|0-42
41196|code|BNE             loc_A0E0|248-209
41198|code|LDR             R3, =aUnknown; "<unknown>"|10-75
41200|code|ADD             R2, SP, #0x438+s|5-170
41202|code|MOV             R0, R7; stream|56-70
41204|code|STR             R2, [SP,#0x438+var_438]|0-146
41206|code|MOV             R2, R6|50-70
41208|code|LDR             R1, =aSSS_0; "%s %s: %s\n"|10-73
41210|code|BLX             fprintf|255-247-126-233
41214|code|B               loc_A04E|166-231
41216|code|ADD.W           R0, LR, R0,LSL#3|14-235-192-0
41220|code|LDR             R3, [R0,#4]|67-104
41222|code|B               loc_A0F0|243-231
41224|code|BLX             __stack_chk_fail|255-247-226-232
41228|data|DCD dword_18874|116-136-1-0
41232|data|DCD __stack_chk_guard|136-135-1-0
41236|data|DCD dword_18780|128-135-1-0
41240|data|DCD aUnknown; "<unknown>"|220-244-0-0
41244|data|DCD aSS; "%s: %s"|88-244-0-0
41248|data|DCD stderr|144-135-1-0
41252|data|DCD aSSS_0; "%s %s: %s\n"|232-244-0-0
41256|data|DCD unk_F498|152-244-0-0
41260|code|PUSH.W          {R4-R10,LR}|45-233-240-71
41264|code|MOV.W           R8, R1,LSL#2|79-234-129-8
41268|code|MOV             R9, R0|129-70
41270|code|ADD.W           R0, R8, #1|8-241-1-0
41274|code|MOV             R6, R1|14-70
41276|code|BL              sub_E5A4|4-240-50-250
41280|code|MOVS            R5, #0|0-37
41282|code|CMP             R6, #0|0-46
41284|code|MOV             R7, R0|7-70
41286|code|BLE             loc_A1C6|62-221
41288|code|MOV             R4, R5|44-70
41290|code|B               loc_A184|27-224
41292|code|CMP.W           R10, #0xD|186-241-13-15
41296|code|BEQ             loc_A1AA|43-208
41298|code|CMP.W           R10, #9|186-241-9-15
41302|code|BEQ             loc_A19C|33-208
41304|code|BLX             __ctype_b_loc|255-247-46-233
41308|code|LDR             R3, [R0]|3-104
41310|code|LDRH.W          R3, [R3,R10,LSL#1]|51-248-26-48
41314|code|LSLS            R3, R3, #0x11|91-4
41316|code|BPL             loc_A1B8|40-213
41318|code|STRB.W          R10, [R7,R5]|7-248-5-160
41322|code|ADDS            R5, #1|1-53
41324|code|SUBS            R3, R4, R6|163-27
41326|code|IT NE|24-191
41328|code|MOVNE           R3, #1|1-35
41330|code|CMP             R5, R8|69-69
41332|code|ITE LE|212-191
41334|code|MOVLE           R3, #0|0-35
41336|code|ANDGT.W         R3, R3, #1|3-240-1-3
41340|code|CBNZ            R3, loc_A1D0|67-187
41342|code|ADDS            R4, #1|1-52
41344|code|CMP             R4, R6|180-66
41346|code|BEQ             loc_A1C6|32-208
41348|code|LDRB.W          R10, [R9,R4]|25-248-4-160
41352|code|CMP.W           R10, #0xA|186-241-10-15
41356|code|BNE             loc_A14C|222-209
41358|code|ADDS            R0, R7, R5|120-25
41360|code|LDR             R1, =aN; "\\n"|18-73
41362|code|MOVS            R2, #3|3-34
41364|code|ADDS            R5, #2|2-53
41366|code|BLX             memcpy|255-247-120-232
41370|code|B               loc_A16C|231-231
41372|code|ADDS            R0, R7, R5|120-25
41374|code|LDR             R1, =aT; "\\t"|16-73
41376|code|MOVS            R2, #3|3-34
41378|code|ADDS            R5, #2|2-53
41380|code|BLX             memcpy|255-247-112-232
41384|code|B               loc_A16C|224-231
41386|code|ADDS            R0, R7, R5|120-25
41388|code|LDR             R1, =aR; "\\r"|13-73
41390|code|MOVS            R2, #3|3-34
41392|code|ADDS            R5, #2|2-53
41394|code|BLX             memcpy|255-247-106-232
41398|code|B               loc_A16C|217-231
41400|code|ADDS            R0, R7, R5|120-25
41402|code|LDR             R1, =a3o; "\\%.3o"|11-73
41404|code|MOV             R2, R10|82-70
41406|code|ADDS            R5, #4|4-53
41408|code|BLX             sprintf|255-247-116-233
41412|code|B               loc_A16C|210-231
41414|code|MOVS            R3, #0|0-35
41416|code|MOV             R0, R7|56-70
41418|code|STRB            R3, [R7,R5]|123-85
41420|code|POP.W           {R4-R10,PC}|189-232-240-135
41424|code|LDR             R0, =aJStrsizeILen; "j <= strsize || i == len"|6-72
41426|code|MOVS            R2, #0x91|145-34
41428|code|LDR             R1, =aSrcDebugC; "../src/debug.c"|6-73
41430|code|LDR             R3, =aDbgMemstr; "dbg_memstr"|7-75
41432|code|BLX             __assert_fail|255-247-164-233
41436|data|DCD aN; "\\n"|248-244-0-0
41440|data|DCD aT; "\\t"|252-244-0-0
41444|data|DCD aR; "\\r"|244-244-0-0
41448|data|DCD a3o; "\\%.3o"|0-245-0-0
41452|data|DCD aJStrsizeILen; "j <= strsize || i == len"|8-245-0-0
41456|data|DCD aSrcDebugC; "../src/debug.c"|36-245-0-0
41460|data|DCD aDbgMemstr; "dbg_memstr"|208-244-0-0
41464|code|PUSH            {R4,LR}|16-181
41466|code|MOV             R4, R0|4-70
41468|code|CBZ             R0, loc_A216|88-177
41470|code|LDR             R0, [R0]|0-104
41472|code|BL              sub_E6F0|4-240-118-250
41476|code|LDR             R0, [R4,#4]|96-104
41478|code|CBZ             R0, loc_A20C|8-177
41480|code|BL              sub_E6F0|4-240-114-250
41484|code|MOV             R0, R4|32-70
41486|code|POP.W           {R4,LR}|189-232-16-64
41490|code|B.W             sub_E6F0|4-240-109-186
41494|code|LDR             R0, =aPlugVoid0; "plug != ((void *)0)"|3-72
41496|code|MOVS            R2, #0x4D ; 'M'; line|77-34
41498|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|3-73
41500|code|LDR             R3, =aDestroyPlug; "_destroy_plug"|3-75
41502|code|BLX             __assert_fail|255-247-130-233
41506|data|ALIGN 4|0-191
41508|data|DCD aPlugVoid0; "plug != ((void *)0)"|228-245-0-0
41512|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
41516|data|DCD aDestroyPlug; "_destroy_plug"|100-245-0-0
41520|code|PUSH            {R3-R5,LR}|56-181
41522|code|MOV             R5, R0|5-70
41524|code|MOVS            R0, #8|8-32
41526|code|BL              sub_E5A4|4-240-181-249
41530|code|MOV             R4, R0|4-70
41532|code|CBZ             R5, loc_A24E|61-177
41534|code|MOV             R0, R5|40-70
41536|code|BL              sub_E76C|4-240-148-250
41540|code|MOVS            R3, #0|0-35
41542|code|STR             R3, [R4,#4]|99-96
41544|code|STR             R0, [R4]|32-96
41546|code|MOV             R0, R4|32-70
41548|code|POP             {R3-R5,PC}|56-189
41550|code|LDR             R0, =aNameVoid0; "name != ((void *)0)"|3-72
41552|code|MOVS            R2, #0x43 ; 'C'; line|67-34
41554|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|3-73
41556|code|LDR             R3, =aCreatePlug; "_create_plug"|3-75
41558|code|BLX             __assert_fail|255-247-102-233
41562|data|ALIGN 4|0-191
41564|data|DCD aNameVoid0; "name != ((void *)0)"|236-249-0-0
41568|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
41572|data|DCD aCreatePlug; "_create_plug"|116-245-0-0
41576|code|PUSH            {R4-R6,LR}|112-181
41578|code|MOV             R5, R0|5-70
41580|code|MOVS            R0, #0xC|12-32
41582|code|BL              sub_E5A4|4-240-153-249
41586|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
41594|code|MOV             R4, R0|4-70
41596|code|LDR             R0, =(sub_A1F8+1)|16-72
41598|code|STR             R3, [R4]|35-96
41600|code|BL              sub_D5CC|3-240-164-249
41604|code|MOVS            R3, #0|0-35
41606|code|STR             R3, [R4,#8]|163-96
41608|code|STR             R0, [R4,#4]|96-96
41610|code|CBZ             R5, loc_A2BA|181-177
41612|code|MOV             R0, R5|40-70
41614|code|BL              sub_DC34|3-240-209-252
41618|code|MOV             R5, R0|5-70
41620|code|B               loc_A2A4|6-224
41622|code|LDR             R6, [R4,#4]|102-104
41624|code|BL              sub_A230|255-247-202-255
41628|code|MOV             R1, R0|1-70
41630|code|MOV             R0, R6|48-70
41632|code|BL              sub_D758|3-240-90-250
41636|code|MOV             R0, R5|40-70
41638|code|BL              sub_DDBC|3-240-137-253
41642|code|MOV             R3, R0|3-70
41644|code|CMP             R3, #0|0-43
41646|code|BNE             loc_A296|242-209
41648|code|MOV             R0, R5|40-70
41650|code|BL              sub_DD0C|3-240-43-253
41654|code|MOVS            R3, #1|1-35
41656|code|STR             R3, [R4,#8]|163-96
41658|code|MOV             R0, R4|32-70
41660|code|POP             {R4-R6,PC}|112-189
41662|data|ALIGN 0x10|0-191
41664|data|DCD sub_A1F8+1|249-161-0-0
41668|code|PUSH            {R4,LR}|16-181
41670|code|MOV             R4, R0|4-70
41672|code|CBZ             R0, loc_A2EC|128-177
41674|code|LDR             R2, [R0]|2-104
41676|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
41684|code|CMP             R2, R3|154-66
41686|code|BNE             loc_A2F8|15-209
41688|code|MOVS            R3, #0|0-35
41690|code|LDR             R0, [R0,#4]|64-104
41692|code|STR             R3, [R4]|35-96
41694|code|BL              sub_D60C|3-240-149-249
41698|code|MOV             R0, R4|32-70
41700|code|POP.W           {R4,LR}|189-232-16-64
41704|code|B.W             sub_E6F0|4-240-2-186
41708|code|LDR             R0, =aPlVoid0; "pl != ((void *)0)"|5-72
41710|code|MOVS            R2, #0x6E ; 'n'|110-34
41712|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|5-73
41714|code|LDR             R3, =aPluglistDestro; "pluglist_destroy"|6-75
41716|code|BLX             __assert_fail|255-247-22-233
41720|code|LDR             R0, =aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|5-72
41722|code|MOVS            R2, #0x6F ; 'o'|111-34
41724|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|2-73
41726|code|LDR             R3, =aPluglistDestro; "pluglist_destroy"|3-75
41728|code|BLX             __assert_fail|255-247-16-233
41732|data|DCD aPlVoid0; "pl != ((void *)0)"|12-246-0-0
41736|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
41740|data|DCD aPluglistDestro; "pluglist_destroy"|132-245-0-0
41744|data|DCD aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|32-246-0-0
41748|code|PUSH            {R3-R5,LR}|56-181
41750|code|MOV             R5, R0|5-70
41752|code|MOVS            R0, #8|8-32
41754|code|BL              sub_E5A4|4-240-67-249
41758|code|MOV             R3, #0xFEEDFEFE|79-246-254-99-207-246-237-99
41766|code|MOV             R4, R0|4-70
41768|code|LDR             R0, [R5,#4]|104-104
41770|code|STR             R3, [R4]|35-96
41772|code|BL              sub_DC34|3-240-130-252
41776|code|STR             R0, [R4,#4]|96-96
41778|code|MOV             R0, R4|32-70
41780|code|POP             {R3-R5,PC}|56-189
41782|data|ALIGN 4|0-191
41784|code|PUSH            {R4,LR}|16-181
41786|code|MOV             R4, R0|4-70
41788|code|CBZ             R0, loc_A360|128-177
41790|code|LDR             R2, [R0]|2-104
41792|code|MOV             R3, #0xFEEDFEFE|79-246-254-99-207-246-237-99
41800|code|CMP             R2, R3|154-66
41802|code|BNE             loc_A36E|16-209
41804|code|MOVS            R3, #0|0-35
41806|code|LDR             R0, [R0,#4]|64-104
41808|code|STR             R3, [R4]|35-96
41810|code|BL              sub_DD0C|3-240-219-252
41814|code|MOV             R0, R4|32-70
41816|code|POP.W           {R4,LR}|189-232-16-64
41820|code|B.W             sub_E6F0|4-240-200-185
41824|code|LDR             R0, =aItrVoid0; "itr != ((void *)0)"|6-72
41826|code|MOV.W           R2, #0x100; line|79-244-128-114
41830|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|6-73
41832|code|LDR             R3, =aPluglistIterat; "pluglist_iterator_destroy"|6-75
41834|code|BLX             __assert_fail|255-247-220-232
41838|code|LDR             R0, =aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|6-72
41840|code|MOVW            R2, #0x101; line|64-242-1-18
41844|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|2-73
41846|code|LDR             R3, =aPluglistIterat; "pluglist_iterator_destroy"|3-75
41848|code|BLX             __assert_fail|255-247-212-232
41852|data|DCD aItrVoid0; "itr != ((void *)0)"|56-246-0-0
41856|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
41860|data|DCD aPluglistIterat; "pluglist_iterator_destroy"|152-245-0-0
41864|data|DCD aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|76-246-0-0
41868|code|PUSH            {R3,LR}|8-181
41870|code|CBZ             R0, loc_A3A8|88-177
41872|code|LDR             R2, [R0]|2-104
41874|code|MOV             R3, #0xFEEDFEFE|79-246-254-99-207-246-237-99
41882|code|CMP             R2, R3|154-66
41884|code|BNE             loc_A3B6|11-209
41886|code|LDR             R0, [R0,#4]|64-104
41888|code|POP.W           {R3,LR}|189-232-8-64
41892|code|B.W             sub_DDBC|3-240-10-189
41896|code|LDR             R0, =aItrVoid0; "itr != ((void *)0)"|6-72
41898|code|MOVW            R2, #0x109; line|64-242-9-18
41902|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|6-73
41904|code|LDR             R3, =aPluglistNext; "pluglist_next"|6-75
41906|code|BLX             __assert_fail|255-247-184-232
41910|code|LDR             R0, =aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|6-72
41912|code|MOV.W           R2, #0x10A; line|79-244-133-114
41916|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|2-73
41918|code|LDR             R3, =aPluglistNext; "pluglist_next"|3-75
41920|code|BLX             __assert_fail|255-247-176-232
41924|data|DCD aItrVoid0; "itr != ((void *)0)"|56-246-0-0
41928|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
41932|data|DCD aPluglistNext; "pluglist_next"|180-245-0-0
41936|data|DCD aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|76-246-0-0
41940|code|PUSH            {R4-R6,LR}|112-181
41942|code|MOV             R6, R1|14-70
41944|code|BL              sub_A314|255-247-156-255
41948|code|MOV             R5, R0|5-70
41950|code|B               loc_A3E8|3-224
41952|code|LDR             R0, [R4]; s1|32-104
41954|code|BLX             strcmp|254-247-20-239
41958|code|CBZ             R0, loc_A3F6|48-177
41960|code|MOV             R0, R5|40-70
41962|code|BL              sub_A38C|255-247-207-255
41966|code|MOV             R1, R6; s2|49-70
41968|code|MOV             R4, R0|4-70
41970|code|CMP             R0, #0|0-40
41972|code|BNE             loc_A3E0|244-209
41974|code|MOV             R0, R5|40-70
41976|code|BL              sub_A338|255-247-158-255
41980|code|MOV             R0, R4|32-70
41982|code|POP             {R4-R6,PC}|112-189
41984|code|PUSH            {R3-R7,LR}|248-181
41986|code|MOV             R7, R1|15-70
41988|code|MOV             R1, R2|17-70
41990|code|MOV             R6, R2|22-70
41992|code|MOV             R5, R0|5-70
41994|code|BL              sub_A3D4|255-247-227-255
41998|code|MOV             R4, R0|4-70
42000|code|CBZ             R0, loc_A41A|24-177
42002|code|LDR             R5, [R4,#4]|101-104
42004|code|CBZ             R5, loc_A422|45-177
42006|code|MOVS            R0, #3|3-32
42008|code|POP             {R3-R7,PC}|248-189
42010|code|LDR             R3, [R5,#8]|171-104
42012|code|CBZ             R3, loc_A430|67-177
42014|code|MOVS            R0, #2|2-32
42016|code|POP             {R3-R7,PC}|248-189
42018|code|MOV             R0, R7|56-70
42020|code|BL              sub_E76C|4-240-162-249
42024|code|MOV             R3, R0|3-70
42026|code|MOV             R0, R5|40-70
42028|code|STR             R3, [R4,#4]|99-96
42030|code|POP             {R3-R7,PC}|248-189
42032|code|MOV             R0, R6|48-70
42034|code|BL              sub_A230|255-247-253-254
42038|code|MOV             R4, R0|4-70
42040|code|LDR             R0, [R5,#4]|104-104
42042|code|MOV             R1, R4|33-70
42044|code|BL              sub_DA9C|3-240-46-251
42048|code|B               loc_A412|231-231
42050|data|ALIGN 4|0-191
42052|code|PUSH.W          {R3-R11,LR}|45-233-248-79
42056|code|MOV             R6, R0|6-70
42058|code|MOV             R4, R2|20-70
42060|code|CMP             R0, #0|0-40
42062|code|BEQ.W           loc_A598|0-240-163-128
42066|code|LDR             R2, [R0]|2-104
42068|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
42076|code|CMP             R2, R3|154-66
42078|code|BNE.W           loc_A58C|64-240-149-128
42082|code|CMP             R1, #0|0-41
42084|code|BEQ.W           loc_A580|0-240-140-128
42088|code|MOV             R0, R1|8-70
42090|code|CMP             R4, #0|0-44
42092|code|BEQ             loc_A504|74-208
42094|code|BL              sub_C6A4|2-240-25-249
42098|code|MOV             R10, R0|130-70
42100|code|BL              sub_B844|1-240-230-249
42104|code|MOV             R8, R0|128-70
42106|code|MOV             R0, R4|32-70
42108|code|BL              sub_C6A4|2-240-18-249
42112|code|MOV             R9, R0|129-70
42114|code|BL              sub_B844|1-240-223-249
42118|code|MOV             R7, R0|7-70
42120|code|MOV             R0, R8|64-70
42122|code|BL              sub_C718|2-240-69-249
42126|code|MOV             R4, R0|4-70
42128|code|MOV             R0, R7|56-70
42130|code|CBZ             R4, loc_A4C8|204-177
42132|code|BL              sub_C718|2-240-64-249
42136|code|MOV             R5, R0|5-70
42138|code|CBZ             R0, loc_A4DC|248-177
42140|code|MOV             R2, R0|2-70
42142|code|MOV             R1, R4|33-70
42144|code|MOV             R0, R6|48-70
42146|code|BL              sub_A400|255-247-173-255
42150|code|MOV             R11, R0|131-70
42152|code|MOV             R0, R4|32-70
42154|code|BLX             free|254-247-220-238
42158|code|MOV             R0, R5|40-70
42160|code|BLX             free|254-247-216-238
42164|code|CMP.W           R11, #0|187-241-0-15
42168|code|BNE             loc_A4E6|21-209
42170|code|MOV             R0, R8|64-70
42172|code|BL              sub_C718|2-240-44-249
42176|code|MOV             R4, R0|4-70
42178|code|MOV             R0, R7|56-70
42180|code|CMP             R4, #0|0-44
42182|code|BNE             loc_A494|229-209
42184|code|BL              sub_C718|2-240-38-249
42188|code|CMP             R0, #0|0-40
42190|code|ITE EQ|12-191
42192|code|MOVEQ           R11, R0|131-70
42194|code|MOVNE.W         R11, #5|79-240-5-11
42198|code|BLX             free|254-247-198-238
42202|code|B               loc_A4E6|4-224
42204|code|MOV             R0, R4|32-70
42206|code|MOV.W           R11, #4|79-240-4-11
42210|code|BLX             free|254-247-192-238
42214|code|MOV             R0, R7|56-70
42216|code|BL              sub_BFE4|1-240-124-253
42220|code|MOV             R0, R8|64-70
42222|code|BL              sub_BFE4|1-240-121-253
42226|code|MOV             R0, R9|72-70
42228|code|BL              sub_C08C|1-240-202-253
42232|code|MOV             R0, R10|80-70
42234|code|BL              sub_C08C|1-240-199-253
42238|code|MOV             R0, R11|88-70
42240|code|POP.W           {R3-R11,PC}|189-232-248-143
42244|code|BL              sub_C6A4|2-240-206-248
42248|code|MOV             R7, R0|7-70
42250|code|BL              sub_B844|1-240-155-249
42254|code|MOV             R5, R0|5-70
42256|code|MOV             R0, R5|40-70
42258|code|BL              sub_C718|2-240-1-249
42262|code|MOV             R4, R0|4-70
42264|code|CMP             R0, #0|0-40
42266|code|BEQ             loc_A57C|47-208
42268|code|LDR             R3, [R6,#8]|179-104
42270|code|MOV             R0, R6|48-70
42272|code|CBZ             R3, loc_A56A|27-179
42274|code|BL              sub_A314|255-247-247-254
42278|code|MOV             R9, R0|129-70
42280|code|MOV             R0, R9|72-70
42282|code|BL              sub_A38C|255-247-47-255
42286|code|MOV             R8, R0|128-70
42288|code|CBZ             R0, loc_A576|8-179
42290|code|LDR.W           R3, [R8,#4]|216-248-4-48
42294|code|CMP             R3, #0|0-43
42296|code|BNE             loc_A528|246-209
42298|code|MOV             R0, R4|32-70
42300|code|MOV             R11, R3|155-70
42302|code|BL              sub_E76C|4-240-21-249
42306|code|STR.W           R0, [R8,#4]|200-248-4-0
42310|code|MOV             R0, R9|72-70
42312|code|BL              sub_A338|255-247-246-254
42316|code|MOV             R0, R4|32-70
42318|code|BLX             free|254-247-138-238
42322|code|CMP.W           R11, #0|187-241-0-15
42326|code|BEQ             loc_A510|219-208
42328|code|MOV             R0, R5|40-70
42330|code|BL              sub_BFE4|1-240-67-253
42334|code|MOV             R0, R7|56-70
42336|code|BL              sub_C08C|1-240-148-253
42340|code|MOV             R0, R11|88-70
42342|code|POP.W           {R3-R11,PC}|189-232-248-143
42346|code|MOV             R1, R4|33-70
42348|code|MOV             R2, R4|34-70
42350|code|BL              sub_A400|255-247-71-255
42354|code|MOV             R11, R0|131-70
42356|code|B               loc_A54C|234-231
42358|code|MOV.W           R11, #4|79-240-4-11
42362|code|B               loc_A546|228-231
42364|code|MOV             R11, R0|131-70
42366|code|B               loc_A558|235-231
42368|code|LDR             R0, =aNodelistVoid0; "nodelist != ((void *)0)"|8-72
42370|code|MOVS            R2, #0xB8|184-34
42372|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|8-73
42374|code|LDR             R3, =aPluglistMap; "pluglist_map"|9-75
42376|code|BLX             __assert_fail|254-247-204-239
42380|code|LDR             R0, =aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|8-72
42382|code|MOVS            R2, #0xB7|183-34
42384|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|5-73
42386|code|LDR             R3, =aPluglistMap; "pluglist_map"|6-75
42388|code|BLX             __assert_fail|254-247-198-239
42392|code|LDR             R0, =aPlVoid0; "pl != ((void *)0)"|6-72
42394|code|MOVS            R2, #0xB6|182-34
42396|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|2-73
42398|code|LDR             R3, =aPluglistMap; "pluglist_map"|3-75
42400|code|BLX             __assert_fail|254-247-192-239
42404|data|DCD aNodelistVoid0; "nodelist != ((void *)0)"|104-246-0-0
42408|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
42412|data|DCD aPluglistMap; "pluglist_map"|196-245-0-0
42416|data|DCD aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|32-246-0-0
42420|data|DCD aPlVoid0; "pl != ((void *)0)"|12-246-0-0
42424|code|PUSH            {R3,LR}|8-181
42426|code|CBZ             R0, loc_A5DC|120-177
42428|code|LDR             R2, [R0]|2-104
42430|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
42438|code|CMP             R2, R3|154-66
42440|code|BNE             loc_A5F8|22-209
42442|code|CBZ             R1, loc_A5EA|113-177
42444|code|BL              sub_A3D4|255-247-2-255
42448|code|CBZ             R0, locret_A5DA|24-177
42450|code|LDR             R3, [R0,#4]|67-104
42452|code|CMP             R3, #0|0-43
42454|code|IT EQ|8-191
42456|code|MOVEQ           R0, #0|0-32
42458|code|POP             {R3,PC}|8-189
42460|code|LDR             R0, =aPlVoid0; "pl != ((void *)0)"|10-72
42462|code|MOVW            R2, #0x113|64-242-19-18
42466|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|10-73
42468|code|LDR             R3, =aPluglistFind; "pluglist_find"|10-75
42470|code|BLX             __assert_fail|254-247-158-239
42474|code|LDR             R0, =aNameVoid0; "name != ((void *)0)"|10-72
42476|code|MOVW            R2, #0x115|64-242-21-18
42480|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|6-73
42482|code|LDR             R3, =aPluglistFind; "pluglist_find"|7-75
42484|code|BLX             __assert_fail|254-247-150-239
42488|code|LDR             R0, =aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|7-72
42490|code|MOV.W           R2, #0x114|79-244-138-114
42494|code|LDR             R1, =aSrcPluglistC; "../src/pluglist.c"|3-73
42496|code|LDR             R3, =aPluglistFind; "pluglist_find"|3-75
42498|code|BLX             __assert_fail|254-247-144-239
42502|data|ALIGN 4|0-191
42504|data|DCD aPlVoid0; "pl != ((void *)0)"|12-246-0-0
42508|data|DCD aSrcPluglistC; "../src/pluglist.c"|248-245-0-0
42512|data|DCD aPluglistFind; "pluglist_find"|212-245-0-0
42516|data|DCD aNameVoid0; "name != ((void *)0)"|236-249-0-0
42520|data|DCD aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|32-246-0-0
42524|code|CMP             R1, R3|153-66
42526|code|PUSH.W          {R4-R9}|45-233-240-3
42530|code|BEQ             loc_A6EE|100-208
42532|code|MOV             R7, #0xCCCCCCCD|76-246-205-71-204-246-204-71
42540|code|LDR             R5, [R1]|13-104
42542|code|UMULL.W         R4, R0, R7, R0|167-251-0-64
42546|code|LSRS            R0, R0, #3|192-8
42548|code|BEQ             loc_A6F2|93-208
42550|code|MOVS            R6, #1|1-38
42552|code|MOV             R4, R0|4-70
42554|code|UMULL.W         R8, R4, R7, R4|167-251-4-132
42558|code|ADDS            R6, #1|1-54
42560|code|LSRS            R4, R4, #3|228-8
42562|code|BNE             loc_A63A|250-209
42564|code|CMP             R5, R6|181-66
42566|code|LDR             R4, [R3]|28-104
42568|code|ITE GT|204-191
42570|code|RSBGT.W         R6, R6, R5|198-235-5-6
42574|code|MOVLE           R6, #0|0-38
42576|code|MOVS            R7, #1|1-39
42578|code|CBZ             R0, loc_A668|72-177
42580|code|MOVW            R12, #0xCCCD|76-246-205-76
42584|code|MOVS            R7, #1|1-39
42586|code|MOVT.W          R12, #0xCCCC|204-246-204-76
42590|code|UMULL.W         R9, R0, R12, R0|172-251-0-144
42594|code|ADDS            R7, #1|1-55
42596|code|LSRS            R0, R0, #3|192-8
42598|code|BNE             loc_A65E|250-209
42600|code|MOV             R8, #0xCCCCCCCD|76-246-205-72-204-246-204-72
42608|code|CMP             R4, R7|188-66
42610|code|UMULL.W         R0, R2, R8, R2|168-251-2-2
42614|code|ITE GT|204-191
42616|code|RSBGT.W         R12, R7, R4|199-235-4-12
42620|code|MOVLE.W         R12, #0|79-240-0-12
42624|code|LSRS            R2, R2, #3|210-8
42626|code|BEQ             loc_A6F6|56-208
42628|code|MOVS            R7, #1|1-39
42630|code|MOV             R0, R2|16-70
42632|code|UMULL.W         R9, R0, R8, R0|168-251-0-144
42636|code|ADDS            R7, #1|1-55
42638|code|LSRS            R0, R0, #3|192-8
42640|code|BNE             loc_A688|250-209
42642|code|CMP             R4, R7|188-66
42644|code|ITE GT|204-191
42646|code|RSBGT.W         R7, R7, R4|199-235-4-7
42650|code|MOVLE           R7, #0|0-39
42652|code|MOVS            R0, #1|1-32
42654|code|CBZ             R2, loc_A6B4|74-177
42656|code|MOVW            R8, #0xCCCD|76-246-205-72
42660|code|MOVS            R0, #1|1-32
42662|code|MOVT.W          R8, #0xCCCC|204-246-204-72
42666|code|UMULL.W         R9, R2, R8, R2|168-251-2-146
42670|code|ADDS            R0, #1|1-48
42672|code|LSRS            R2, R2, #3|210-8
42674|code|BNE             loc_A6AA|250-209
42676|code|CMP             R5, R0|133-66
42678|code|ITE GT|204-191
42680|code|RSBGT.W         R2, R0, R5|192-235-5-2
42684|code|MOVLE           R2, #0|0-34
42686|code|SUBS.W          R6, R6, R12|182-235-12-6
42690|code|IT NE|24-191
42692|code|MOVNE           R6, #1|1-38
42694|code|CMP             R7, R2|151-66
42696|code|ITE EQ|12-191
42698|code|MOVEQ           R0, #0|0-32
42700|code|ANDNE.W         R0, R6, #1|6-240-1-0
42704|code|CBNZ            R0, loc_A6DE|40-185
42706|code|CBZ             R6, loc_A6E2|54-177
42708|code|CMP             R7, R2|151-66
42710|code|BEQ             loc_A6E8|7-208
42712|code|POP.W           {R4-R9}|189-232-240-3
42716|code|BX              LR|112-71
42718|code|MOVS            R0, #0|0-32
42720|code|B               loc_A6D8|250-231
42722|code|STR             R4, [R1]|12-96
42724|code|MOVS            R0, #1|1-32
42726|code|B               loc_A6D8|247-231
42728|code|STR             R5, [R3]|29-96
42730|code|MOVS            R0, #1|1-32
42732|code|B               loc_A6D8|244-231
42734|code|MOVS            R0, #1|1-32
42736|code|B               loc_A6D8|242-231
42738|code|MOVS            R6, #1|1-38
42740|code|B               loc_A644|166-231
42742|code|MOVS            R7, #1|1-39
42744|code|B               loc_A692|203-231
42746|data|ALIGN 4|0-191
42748|code|PUSH            {R4,LR}|16-181
42750|code|MOV             R4, R0|4-70
42752|code|CBZ             R0, locret_A720|112-177
42754|code|LDR             R0, [R0]; ptr|0-104
42756|code|MOVS            R3, #0|0-35
42758|code|STR             R3, [R4,#0xC]|227-96
42760|code|CBZ             R0, loc_A70E|8-177
42762|code|BLX             free|254-247-172-237
42766|code|LDR             R0, [R4,#4]; ptr|96-104
42768|code|CBZ             R0, loc_A716|8-177
42770|code|BLX             free|254-247-168-237
42774|code|MOV             R0, R4|32-70
42776|code|POP.W           {R4,LR}|189-232-16-64
42780|code|B.W             j_free|254-247-160-189
42784|code|POP             {R4,PC}|16-189
42786|data|ALIGN 4|0-191
42788|code|PUSH            {R4,LR}|16-181
42790|code|MOV             R4, R0|4-70
42792|code|CBZ             R0, locret_A73C|64-177
42794|code|LDR             R0, [R0]; ptr|0-104
42796|code|CBZ             R0, loc_A732|8-177
42798|code|BLX             free|254-247-154-237
42802|code|MOV             R0, R4|32-70
42804|code|POP.W           {R4,LR}|189-232-16-64
42808|code|B.W             j_free|254-247-146-189
42812|code|POP             {R4,PC}|16-189
42814|data|ALIGN 0x10|0-191
42816|code|PUSH.W          {R4-R8,LR}|45-233-240-65
42820|code|SUB             SP, SP, #8|130-176
42822|code|MOVS            R3, #0|0-35
42824|code|MOV             R5, R0|5-70
42826|code|STR             R3, [SP,#0x20+endptr]|1-147
42828|code|CMP             R0, #0|0-40
42830|code|BEQ.W           loc_A89E|0-240-166-128
42834|code|MOVS            R0, #0x10; size|16-32
42836|code|BLX             malloc|254-247-16-238
42840|code|MOV             R6, R0|6-70
42842|code|CMP             R0, #0|0-40
42844|code|BEQ             loc_A824|98-208
42846|code|MOV             R0, R5; s|40-70
42848|code|BLX             strlen|254-247-60-238
42852|code|SUBS            R4, R0, #1|68-30
42854|code|BMI             loc_A77E|10-212
42856|code|BLX             __ctype_b_loc|254-247-38-238
42860|code|LDR             R2, [R0]|2-104
42862|code|B               loc_A774|1-224
42864|code|SUBS            R4, #1|1-60
42866|code|BMI             loc_A77E|4-212
42868|code|LDRB            R3, [R5,R4]|43-93
42870|code|LDRH.W          R3, [R2,R3,LSL#1]|50-248-19-48
42874|code|LSLS            R3, R3, #0x14|27-5
42876|code|BMI             loc_A770|248-212
42878|code|MOV             R0, R5|40-70
42880|code|BLX             __strdup|254-247-88-238
42884|code|MOV             R8, R0|128-70
42886|code|STR             R0, [R6]|48-96
42888|code|CMP             R0, #0|0-40
42890|code|BEQ             loc_A83E|88-208
42892|code|MOVS            R3, #0|0-35
42894|code|MOV             R0, R5; s|40-70
42896|code|STR             R3, [R6,#8]|179-96
42898|code|STR             R3, [R6,#4]|115-96
42900|code|STR             R3, [R6,#0xC]|243-96
42902|code|BLX             strlen|254-247-34-238
42906|code|SUBS            R0, #1|1-56
42908|code|CMP             R4, R0|132-66
42910|code|BEQ             loc_A7DC|29-208
42912|code|ADDS            R7, R4, #1|103-28
42914|code|MOVS            R2, #0xA; base|10-34
42916|code|ADD.W           R0, R8, R7; nptr|8-235-7-0
42920|code|ADD             R1, SP, #0x20+endptr; endptr|1-169
42922|code|STR             R0, [R6,#0xC]|240-96
42924|code|BLX             strtoul|254-247-16-238
42928|code|LDR             R3, [SP,#0x20+endptr]|1-155
42930|code|STR             R0, [R6,#8]|176-96
42932|code|LDRB.W          R8, [R3]|147-248-0-128
42936|code|CMP.W           R8, #0|184-241-0-15
42940|code|BNE             loc_A7C4|2-209
42942|code|CMP.W           R0, #0x2000000|176-241-0-127
42946|code|BLS             loc_A808|33-217
42948|code|MOV             R0, R5|40-70
42950|code|BLX             __strdup|254-247-54-238
42954|code|STR             R0, [R6,#4]|112-96
42956|code|CMP             R0, #0|0-40
42958|code|BEQ             loc_A85E|70-208
42960|code|MOVS            R3, #0|0-35
42962|code|STR             R3, [R6,#0xC]|243-96
42964|code|MOV             R0, R6|48-70
42966|code|ADD             SP, SP, #8|2-176
42968|code|POP.W           {R4-R8,PC}|189-232-240-129
42972|code|MOV             R0, R5|40-70
42974|code|BLX             __strdup|254-247-42-238
42978|code|STR             R0, [R6,#4]|112-96
42980|code|CMP             R0, #0|0-40
42982|code|BNE             loc_A7D4|245-209
42984|code|MOV             R0, R6|48-70
42986|code|BL              sub_A6FC|255-247-135-255
42990|code|BLX             __errno_location|254-247-16-238
42994|code|MOVS            R2, #0xC|12-34
42996|code|MOV.W           R1, #0x1FE|79-244-255-113
43000|code|MOV             R3, R0|3-70
43002|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|44-72
43004|code|STR             R2, [R3]|26-96
43006|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|44-74
43008|code|BL              sub_A004|255-247-0-252
43012|code|MOV             R6, R0|6-70
43014|code|B               loc_A7D4|229-231
43016|code|ADDS            R0, R4, #2; size|160-28
43018|code|BLX             malloc|254-247-182-237
43022|code|MOV             R4, R0|4-70
43024|code|STR             R0, [R6,#4]|112-96
43026|code|CMP             R0, #0|0-40
43028|code|BEQ             loc_A87E|51-208
43030|code|MOV             R1, R5; src|41-70
43032|code|MOV             R2, R7; n|58-70
43034|code|BLX             memcpy|254-247-54-237
43038|code|STRB.W          R8, [R4,R7]|4-248-7-128
43042|code|B               loc_A7D4|215-231
43044|code|BLX             __errno_location|254-247-244-237
43048|code|MOVS            R2, #0xC|12-34
43050|code|MOV.W           R1, #0x1EE|79-244-247-113
43054|code|MOV             R3, R0|3-70
43056|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|30-72
43058|code|STR             R2, [R3]|26-96
43060|code|LDR             R2, =aHostnameCreate; "hostname create"|31-74
43062|code|BL              sub_A004|255-247-229-251
43066|code|MOV             R6, R0|6-70
43068|code|B               loc_A7D4|202-231
43070|code|MOV             R0, R6; ptr|48-70
43072|code|BLX             free|254-247-16-237
43076|code|BLX             __errno_location|254-247-228-237
43080|code|MOVS            R2, #0xC|12-34
43082|code|MOV.W           R1, #0x1F4|79-244-250-113
43086|code|MOV             R3, R0|3-70
43088|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|22-72
43090|code|STR             R2, [R3]|26-96
43092|code|LDR             R2, =aHostnameCreate; "hostname create"|23-74
43094|code|BL              sub_A004|255-247-213-251
43098|code|MOV             R6, R0|6-70
43100|code|B               loc_A7D4|186-231
43102|code|MOV             R0, R6|48-70
43104|code|BL              sub_A6FC|255-247-76-255
43108|code|BLX             __errno_location|254-247-212-237
43112|code|MOVS            R2, #0xC|12-34
43114|code|MOV.W           R1, #0x210|79-244-4-113
43118|code|MOV             R3, R0|3-70
43120|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|14-72
43122|code|STR             R2, [R3]|26-96
43124|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|14-74
43126|code|BL              sub_A004|255-247-197-251
43130|code|MOV             R6, R0|6-70
43132|code|B               loc_A7D4|170-231
43134|code|MOV             R0, R6|48-70
43136|code|BL              sub_A6FC|255-247-60-255
43140|code|BLX             __errno_location|254-247-196-237
43144|code|MOVS            R2, #0xC|12-34
43146|code|MOVW            R1, #0x209|64-242-9-33
43150|code|MOV             R3, R0|3-70
43152|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|6-72
43154|code|STR             R2, [R3]|26-96
43156|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|6-74
43158|code|BL              sub_A004|255-247-181-251
43162|code|MOV             R6, R0|6-70
43164|code|B               loc_A7D4|154-231
43166|code|LDR             R0, =unk_F9E8; assertion|6-72
43168|code|MOVW            R2, #0x1EB; line|64-242-235-18
43172|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|1-73
43174|code|LDR             R3, =aHostnameCreate_0; "hostname_create"|5-75
43176|code|BLX             __assert_fail|254-247-60-238
43180|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
43184|data|DCD aHostnamePrefix; "hostname prefix create"|36-250-0-0
43188|data|DCD aHostnameCreate; "hostname create"|20-250-0-0
43192|data|DCD unk_F9E8|232-249-0-0
43196|data|DCD aHostnameCreate_0; "hostname_create"|128-246-0-0
43200|code|PUSH            {R4-R7,LR}|240-181
43202|code|MOV             R4, R0|4-70
43204|code|LDRB            R7, [R0,#0x10]|7-124
43206|code|SUB             SP, SP, #0xC|131-176
43208|code|MOV             R5, R1|13-70
43210|code|LDR             R6, [R0]|6-104
43212|code|ANDS.W          R7, R7, #1|23-240-1-7
43216|code|BEQ             loc_A8DE|5-208
43218|code|LDR             R0, [R1]; s1|8-104
43220|code|MOV             R1, R6; s2|49-70
43222|code|BLX             strcmp|254-247-154-236
43226|code|CMP             R0, #0|0-40
43228|code|BEQ             loc_A91A|29-208
43230|code|LDR             R1, [R5,#4]; s2|105-104
43232|code|MOV             R0, R6; s1|48-70
43234|code|BLX             strcmp|254-247-148-236
43238|code|CBNZ            R0, loc_A914|168-185
43240|code|LDR             R3, [R5,#0xC]|235-104
43242|code|CBZ             R3, loc_A91E|195-177
43244|code|LDR             R5, [R5,#8]|173-104
43246|code|LDR             R2, [R4,#8]|162-104
43248|code|CMP             R5, R2|149-66
43250|code|BHI             loc_A916|16-216
43252|code|LDR             R6, [R4,#4]|102-104
43254|code|CMP             R5, R6|181-66
43256|code|BCC             loc_A916|13-211
43258|code|MOV             R0, R3; s|24-70
43260|code|BLX             strlen|254-247-110-237
43264|code|ADD             R3, SP, #0x20+var_18|2-171
43266|code|ADD.W           R1, R4, #0xC|4-241-12-1
43270|code|MOV             R2, R5|42-70
43272|code|STR.W           R0, [R3,#-4]!|67-248-4-13
43276|code|MOV             R0, R6|48-70
43278|code|BL              sub_A61C|255-247-133-254
43282|code|B               loc_A916|0-224
43284|code|MOVS            R0, #0|0-32
43286|code|ADD             SP, SP, #0xC|3-176
43288|code|POP             {R4-R7,PC}|240-189
43290|code|MOVS            R0, #1|1-32
43292|code|B               loc_A916|251-231
43294|code|MOV             R0, R7|56-70
43296|code|B               loc_A916|249-231
43298|data|ALIGN 4|0-191
43300|code|PUSH            {R3-R5,LR}|56-181
43302|code|MOV             R4, R0|4-70
43304|code|MOV             R5, R1|13-70
43306|code|CBZ             R0, loc_A94E|128-177
43308|code|CBZ             R1, loc_A948|97-177
43310|code|LDR             R0, [R0]; s1|0-104
43312|code|LDR             R1, [R1]; s2|9-104
43314|code|BLX             strcmp|254-247-108-236
43318|code|CBNZ            R0, locret_A94C|72-185
43320|code|LDRB            R0, [R5,#0x10]|40-124
43322|code|LDRB            R3, [R4,#0x10]|35-124
43324|code|AND.W           R0, R0, #1|0-240-1-0
43328|code|AND.W           R3, R3, #1|3-240-1-3
43332|code|SUBS            R0, R0, R3|192-26
43334|code|POP             {R3-R5,PC}|56-189
43336|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
43340|code|POP             {R3-R5,PC}|56-189
43342|code|MOVS            R0, #1|1-32
43344|code|POP             {R3-R5,PC}|56-189
43346|data|ALIGN 4|0-191
43348|code|PUSH            {R2,R3}|12-180
43350|code|PUSH            {R4-R7,LR}|240-181
43352|code|SUB.W           SP, SP, #0x400|173-245-128-109
43356|code|SUB             SP, SP, #0xC|131-176
43358|code|LDR             R4, =__stack_chk_guard|21-76
43360|code|ADD.W           R7, SP, #0x428+varg_r2|13-245-132-103
43364|code|MOV             R6, R0|6-70
43366|code|MOV             R5, R1|13-70
43368|code|ADD             R0, SP, #0x428+s; s|1-168
43370|code|LDR.W           R2, [R7],#4; format|87-248-4-43
43374|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
43378|code|LDR.W           LR, [R4]|212-248-0-224
43382|code|MOV             R3, R7; arg|59-70
43384|code|STR             R7, [SP,#0x428+var_428]|0-151
43386|code|STR.W           LR, [SP,#0x428+var_24]|205-248-4-228
43390|code|BLX             vsnprintf|254-247-162-237
43394|code|CMP.W           R0, #0x400|176-245-128-111
43398|code|BLS             loc_A98E|2-217
43400|code|MOVS            R3, #0|0-35
43402|code|STRB.W          R3, [SP,#0x428+var_25]|141-248-3-52
43406|code|ADD             R2, SP, #0x428+s|1-170
43408|code|MOV             R0, R6|48-70
43410|code|MOV             R1, R5|41-70
43412|code|BL              sub_9FF4|255-247-46-251
43416|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
43420|code|LDR             R3, [R4]|35-104
43422|code|CMP             R2, R3|154-66
43424|code|BNE             loc_A9B0|6-209
43426|code|ADD             SP, SP, #0xC|3-176
43428|code|ADD.W           SP, SP, #0x400|13-245-128-109
43432|code|POP.W           {R4-R7,LR}|189-232-240-64
43436|code|ADD             SP, SP, #8|2-176
43438|code|BX              LR|112-71
43440|code|BLX             __stack_chk_fail|254-247-142-236
43444|data|DCD __stack_chk_guard|136-135-1-0
43448|code|PUSH            {R3,LR}|8-181
43450|code|CBZ             R0, loc_A9D0|72-177
43452|code|LDRB            R3, [R0,#0x10]|3-124
43454|code|LSLS            R2, R3, #0x1F|218-7
43456|code|BMI             loc_A9CC|4-212
43458|code|LDR             R2, [R0,#8]|130-104
43460|code|LDR             R3, [R0,#4]|67-104
43462|code|ADDS            R0, R2, #1|80-28
43464|code|SUBS            R0, R0, R3|192-26
43466|code|POP             {R3,PC}|8-189
43468|code|MOVS            R0, #1|1-32
43470|code|POP             {R3,PC}|8-189
43472|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
43474|code|MOVW            R2, #0x281; line|64-242-129-34
43478|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
43480|code|LDR             R3, =aHostrangeCount; "hostrange_count"|3-75
43482|code|BLX             __assert_fail|254-247-164-237
43486|data|ALIGN 0x10|0-191
43488|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
43492|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
43496|data|DCD aHostrangeCount; "hostrange_count"|144-246-0-0
43500|code|PUSH            {R4,LR}|16-181
43502|code|CBZ             R0, loc_AA08|88-177
43504|code|CBZ             R1, loc_AA16|137-177
43506|code|ADD.W           R4, R0, #0xC|0-241-12-4
43510|code|LDR             R2, [R1,#4]|74-104
43512|code|ADD.W           R3, R1, #0xC|1-241-12-3
43516|code|LDR             R0, [R0,#4]|64-104
43518|code|MOV             R1, R4|33-70
43520|code|POP.W           {R4,LR}|189-232-16-64
43524|code|B.W             sub_A61C|255-247-10-190
43528|code|LDR             R0, =aH0Void0; "h0 != ((void *)0)"|6-72
43530|code|MOVW            R2, #0x2FF; line|64-242-255-34
43534|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
43536|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|6-75
43538|code|BLX             __assert_fail|254-247-136-237
43542|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
43544|code|MOV.W           R2, #0x300; line|79-244-64-114
43548|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
43550|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|3-75
43552|code|BLX             __assert_fail|254-247-128-237
43556|data|DCD aH0Void0; "h0 != ((void *)0)"|80-250-0-0
43560|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
43564|data|DCD aHostrangeWidth; "hostrange_width_combine"|160-246-0-0
43568|data|DCD aH1Void0; "h1 != ((void *)0)"|100-250-0-0
43572|code|PUSH            {R3,LR}|8-181
43574|code|CBZ             R0, loc_AA50|88-177
43576|code|LDR             R3, [R0,#8]|131-104
43578|code|LDR             R2, [R0,#4]|66-104
43580|code|CMP             R3, R2|147-66
43582|code|BCC             loc_AA4C|5-211
43584|code|SUB.W           R1, R3, #0xFFFFFFFF|163-241-255-49
43588|code|NEGS            R0, R1|72-66
43590|code|ADC.W           R0, R0, R1|64-235-1-0
43594|code|POP             {R3,PC}|8-189
43596|code|MOVS            R0, #1|1-32
43598|code|POP             {R3,PC}|8-189
43600|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
43602|code|MOVW            R2, #0x30A; line|64-242-10-50
43606|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
43608|code|LDR             R3, =aHostrangeEmpty; "hostrange_empty"|3-75
43610|code|BLX             __assert_fail|254-247-100-237
43614|data|ALIGN 0x10|0-191
43616|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
43620|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
43624|data|DCD aHostrangeEmpty; "hostrange_empty"|184-246-0-0
43628|code|PUSH            {R3,LR}|8-181
43630|code|BLX             __errno_location|254-247-208-236
43634|code|MOV             R3, #0xFA00|79-246-0-35-192-242-0-3
43642|code|MOVS            R1, #0xC|12-33
43644|code|MOV             R2, #0xFA78|79-246-120-34-192-242-0-2
43652|code|STR             R1, [R0]|1-96
43654|code|MOV             R0, R3|24-70
43656|code|MOVW            R1, #0x23E|64-242-62-33
43660|code|POP.W           {R3,LR}|189-232-8-64
43664|code|B.W             sub_A004|255-247-184-186
43668|code|PUSH            {R4,LR}|16-181
43670|code|MOVS            R0, #0x18; size|24-32
43672|code|BLX             malloc|254-247-110-236
43676|code|MOV             R4, R0|4-70
43678|code|CBZ             R0, loc_AAD6|208-177
43680|code|MOVS            R0, #0x40 ; '@'; size|64-32
43682|code|MOVW            R3, #0xDEAD|77-246-173-99
43686|code|STR             R3, [R4]|35-96
43688|code|BLX             malloc|254-247-102-236
43692|code|STR             R0, [R4,#0x10]|32-97
43694|code|CBZ             R0, loc_AAD0|120-177
43696|code|MOVS            R3, #0|0-35
43698|code|MOV             R1, R3|25-70
43700|code|B               loc_AAB8|0-224
43702|code|LDR             R0, [R4,#0x10]|32-105
43704|code|STR             R1, [R0,R3]|193-80
43706|code|ADDS            R3, #4|4-51
43708|code|MOVS            R2, #0|0-34
43710|code|CMP             R3, #0x40 ; '@'|64-43
43712|code|BNE             loc_AAB6|249-209
43714|code|MOVS            R3, #0x10|16-35
43716|code|STR             R2, [R4,#8]|162-96
43718|code|STR             R3, [R4,#4]|99-96
43720|code|MOV             R0, R4|32-70
43722|code|STR             R2, [R4,#0xC]|226-96
43724|code|STR             R2, [R4,#0x14]|98-97
43726|code|POP             {R4,PC}|16-189
43728|code|MOV             R0, R4; ptr|32-70
43730|code|BLX             free|254-247-200-235
43734|code|BLX             __errno_location|254-247-156-236
43738|code|MOVS            R3, #0xC|12-35
43740|code|MOVW            R1, #0x402|64-242-2-65
43744|code|LDR             R2, =aHostlistCreate; "hostlist_create"|3-74
43746|code|STR             R3, [R0]|3-96
43748|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|3-72
43750|code|POP.W           {R4,LR}|189-232-16-64
43754|code|B.W             sub_A004|255-247-139-186
43758|data|ALIGN 0x10|0-191
43760|data|DCD aHostlistCreate; "hostlist_create"|140-250-0-0
43764|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
43768|code|PUSH            {R3-R5,LR}|56-181
43770|code|MOV             R5, R0|5-70
43772|code|CMP             R0, #0|0-40
43774|code|BEQ             loc_AB54|41-208
43776|code|MOVS            R0, #0x14; size|20-32
43778|code|BLX             malloc|254-247-58-236
43782|code|MOV             R4, R0|4-70
43784|code|CMP             R0, #0|0-40
43786|code|BEQ             loc_AB48|29-208
43788|code|MOV             R0, R5|40-70
43790|code|BLX             __strdup|254-247-146-236
43794|code|STR             R0, [R4]|32-96
43796|code|CBZ             R0, loc_AB2A|72-177
43798|code|LDRB            R2, [R4,#0x10]|34-124
43800|code|MOVS            R3, #0|0-35
43802|code|MOV             R0, R4|32-70
43804|code|STR             R3, [R4,#4]|99-96
43806|code|ORR.W           R2, R2, #1|66-240-1-2
43810|code|STR             R3, [R4,#8]|163-96
43812|code|STRB            R2, [R4,#0x10]|34-116
43814|code|STR             R3, [R4,#0xC]|227-96
43816|code|POP             {R3-R5,PC}|56-189
43818|code|MOV             R0, R4; ptr|32-70
43820|code|BLX             free|254-247-154-235
43824|code|BLX             __errno_location|254-247-110-236
43828|code|MOVS            R3, #0xC|12-35
43830|code|MOVW            R1, #0x25B|64-242-91-33
43834|code|LDR             R2, =aHostrangeCreat; "hostrange create single"|10-74
43836|code|STR             R3, [R0]|3-96
43838|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|10-72
43840|code|POP.W           {R3-R5,LR}|189-232-56-64
43844|code|B.W             sub_A004|255-247-94-186
43848|code|BL              sub_AA6C|255-247-144-255
43852|code|MOV             R4, R0|4-70
43854|code|CMP             R0, #0|0-40
43856|code|BEQ             loc_AB30|238-208
43858|code|B               loc_AB0C|219-231
43860|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
43862|code|MOVW            R2, #0x249; line|64-242-73-34
43866|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
43868|code|LDR             R3, =aHostrangeCreat_0; "hostrange_create_single"|4-75
43870|code|BLX             __assert_fail|254-247-226-236
43874|data|ALIGN 4|0-191
43876|data|DCD aHostrangeCreat; "hostrange create single"|180-250-0-0
43880|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
43884|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|156-250-0-0
43888|data|DCD aHostrangeCreat_0; "hostrange_create_single"|200-246-0-0
43892|code|PUSH.W          {R4-R8,LR}|45-233-240-65
43896|code|MOV             R4, R0|4-70
43898|code|MOV             R5, R1|13-70
43900|code|MOV             R6, R2|22-70
43902|code|MOV             R8, R3|152-70
43904|code|CMP             R0, #0|0-40
43906|code|BEQ             loc_ABDA|42-208
43908|code|MOVS            R0, #0x14; size|20-32
43910|code|BLX             malloc|254-247-248-235
43914|code|MOV             R7, R0|7-70
43916|code|CMP             R0, #0|0-40
43918|code|BEQ             loc_ABCE|30-208
43920|code|MOV             R0, R4|32-70
43922|code|BLX             __strdup|254-247-80-236
43926|code|STR             R0, [R7]|56-96
43928|code|CBZ             R0, loc_ABB0|80-177
43930|code|LDRB            R3, [R7,#0x10]|59-124
43932|code|MOV             R0, R7|56-70
43934|code|STR             R5, [R7,#4]|125-96
43936|code|BFC.W           R3, #0, #1|111-243-0-3
43940|code|STR             R6, [R7,#8]|190-96
43942|code|STR.W           R8, [R7,#0xC]|199-248-12-128
43946|code|STRB            R3, [R7,#0x10]|59-116
43948|code|POP.W           {R4-R8,PC}|189-232-240-129
43952|code|MOV             R0, R7; ptr|56-70
43954|code|BLX             free|254-247-88-235
43958|code|BLX             __errno_location|254-247-44-236
43962|code|MOVS            R3, #0xC|12-35
43964|code|MOVW            R1, #0x279|64-242-121-33
43968|code|LDR             R2, =aHostrangeCreat_1; "hostrange create"|9-74
43970|code|STR             R3, [R0]|3-96
43972|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|9-72
43974|code|POP.W           {R4-R8,LR}|189-232-240-65
43978|code|B.W             sub_A004|255-247-27-186
43982|code|BL              sub_AA6C|255-247-77-255
43986|code|MOV             R7, R0|7-70
43988|code|CMP             R0, #0|0-40
43990|code|BEQ             loc_ABB6|238-208
43992|code|B               loc_AB90|218-231
43994|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
43996|code|MOVW            R2, #0x266; line|64-242-102-34
44000|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
44002|code|LDR             R3, =aHostrangeCreat_2; "hostrange_create"|4-75
44004|code|BLX             __assert_fail|254-247-158-236
44008|data|DCD aHostrangeCreat_1; "hostrange create"|120-250-0-0
44012|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
44016|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|156-250-0-0
44020|data|DCD aHostrangeCreat_2; "hostrange_create"|224-246-0-0
44024|code|PUSH            {R4,LR}|16-181
44026|code|CBZ             R0, loc_AC16|96-177
44028|code|LDRB            R3, [R0,#0x10]|3-124
44030|code|LSLS            R3, R3, #0x1F|219-7
44032|code|BMI             loc_AC0C|4-212
44034|code|LDM             R0, {R0-R3}|15-200
44036|code|POP.W           {R4,LR}|189-232-16-64
44040|code|B.W             sub_AB74|255-247-180-191
44044|code|LDR             R0, [R0]|0-104
44046|code|POP.W           {R4,LR}|189-232-16-64
44050|code|B.W             sub_AAF8|255-247-113-191
44054|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
44056|code|MOV.W           R2, #0x28C; line|79-244-35-114
44060|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
44062|code|LDR             R3, =aHostrangeCopy; "hostrange_copy"|3-75
44064|code|BLX             __assert_fail|254-247-128-236
44068|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
44072|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
44076|data|DCD aHostrangeCopy; "hostrange_copy"|244-246-0-0
44080|code|PUSH            {R3-R5,LR}|56-181
44082|code|MOV             R4, R0|4-70
44084|code|MOV             R5, R1|13-70
44086|code|CMP             R0, #0|0-40
44088|code|BEQ             loc_AC94|44-208
44090|code|LDR             R3, [R0,#4]|67-104
44092|code|CMP             R3, R1|139-66
44094|code|BHI             loc_AC86|34-216
44096|code|LDR             R2, [R0,#8]|130-104
44098|code|CMP             R1, R2|145-66
44100|code|BHI             loc_AC86|31-216
44102|code|CMP             R3, R1|139-66
44104|code|BEQ             loc_AC66|13-208
44106|code|CMP             R1, R2|145-66
44108|code|BEQ             loc_AC5E|7-208
44110|code|BL              sub_ABF8|255-247-211-255
44114|code|CBZ             R0, loc_AC6E|96-177
44116|code|SUBS            R3, R5, #1|107-30
44118|code|ADDS            R5, #1|1-53
44120|code|STR             R3, [R4,#8]|163-96
44122|code|STR             R5, [R0,#4]|69-96
44124|code|POP             {R3-R5,PC}|56-189
44126|code|SUBS            R5, R1, #1|77-30
44128|code|MOVS            R0, #0|0-32
44130|code|STR             R5, [R4,#8]|165-96
44132|code|POP             {R3-R5,PC}|56-189
44134|code|ADDS            R3, #1|1-51
44136|code|MOVS            R0, #0|0-32
44138|code|STR             R3, [R4,#4]|99-96
44140|code|POP             {R3-R5,PC}|56-189
44142|code|BLX             __errno_location|254-247-208-235
44146|code|MOVS            R3, #0xC|12-35
44148|code|MOV.W           R1, #0x2B4|79-244-45-113
44152|code|LDR             R2, =aHostrangeCopy_0; "hostrange copy"|10-74
44154|code|STR             R3, [R0]|3-96
44156|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|10-72
44158|code|POP.W           {R3-R5,LR}|189-232-56-64
44162|code|B.W             sub_A004|255-247-191-185
44166|code|LDR             R0, =aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|9-72
44168|code|MOV.W           R2, #0x2AC; line|79-244-43-114
44172|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
44174|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|8-75
44176|code|BLX             __assert_fail|254-247-72-236
44180|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|7-72
44182|code|MOVW            R2, #0x2AB; line|64-242-171-34
44186|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
44188|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|4-75
44190|code|BLX             __assert_fail|254-247-66-236
44194|data|ALIGN 4|0-191
44196|data|DCD aHostrangeCopy_0; "hostrange copy"|232-250-0-0
44200|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
44204|data|DCD aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|204-250-0-0
44208|data|DCD aHostrangeDelet; "hostrange_delete_host"|4-247-0-0
44212|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
44216|code|PUSH            {R3-R5,LR}|56-181
44218|code|MOV             R4, R0|4-70
44220|code|MOV             R5, R1|13-70
44222|code|CBZ             R0, loc_ACE4|136-177
44224|code|CBZ             R1, loc_ACF2|185-177
44226|code|BL              sub_A924|255-247-47-254
44230|code|CBZ             R0, loc_ACCA|0-177
44232|code|POP             {R3-R5,PC}|56-189
44234|code|MOV             R0, R4|32-70
44236|code|MOV             R1, R5|41-70
44238|code|BL              sub_A9EC|255-247-141-254
44242|code|CBZ             R0, loc_ACDC|24-177
44244|code|LDR             R0, [R4,#4]|96-104
44246|code|LDR             R3, [R5,#4]|107-104
44248|code|SUBS            R0, R0, R3|192-26
44250|code|POP             {R3-R5,PC}|56-189
44252|code|LDR             R0, [R4,#0xC]|224-104
44254|code|LDR             R3, [R5,#0xC]|235-104
44256|code|SUBS            R0, R0, R3|192-26
44258|code|POP             {R3-R5,PC}|56-189
44260|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
44262|code|MOVW            R2, #0x2C7; line|64-242-199-34
44266|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
44268|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|6-75
44270|code|BLX             __assert_fail|254-247-26-236
44274|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|6-72
44276|code|MOV.W           R2, #0x2C8; line|79-244-50-114
44280|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
44282|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|3-75
44284|code|BLX             __assert_fail|254-247-18-236
44288|data|DCD aH1Void0; "h1 != ((void *)0)"|100-250-0-0
44292|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
44296|data|DCD aHostrangeCmp; "hostrange_cmp"|28-247-0-0
44300|data|DCD aH2Void0; "h2 != ((void *)0)"|248-250-0-0
44304|code|LDR             R1, [R1]|9-104
44306|code|LDR             R0, [R0]|0-104
44308|code|B.W             sub_ACB8|255-247-208-191
44312|code|PUSH            {R3-R5,LR}|56-181
44314|code|MOV             R4, R0|4-70
44316|code|MOV             R5, R1|13-70
44318|code|CMP             R0, #0|0-40
44320|code|BEQ             loc_AD9E|61-208
44322|code|CMP             R1, #0|0-41
44324|code|BEQ             loc_AD90|52-208
44326|code|BL              sub_ACB8|255-247-199-255
44330|code|CMP             R0, #0|0-40
44332|code|BGT             loc_ADAC|62-220
44334|code|MOV             R0, R4|32-70
44336|code|MOV             R1, R5|41-70
44338|code|BL              sub_A924|255-247-247-253
44342|code|CMP             R0, #0|0-40
44344|code|BNE             loc_AD84|36-209
44346|code|MOV             R0, R4|32-70
44348|code|MOV             R1, R5|41-70
44350|code|BL              sub_A9EC|255-247-85-254
44354|code|CMP             R0, #0|0-40
44356|code|BEQ             loc_AD84|30-208
44358|code|LDRB            R3, [R4,#0x10]|35-124
44360|code|LSLS            R1, R3, #0x1F|217-7
44362|code|BMI             loc_AD68|13-212
44364|code|LDR             R2, [R5,#4]|106-104
44366|code|LDR             R3, [R4,#8]|163-104
44368|code|SUBS            R1, R2, #1|81-30
44370|code|CMP             R3, R1|139-66
44372|code|BEQ             loc_AD7C|18-208
44374|code|CMP             R3, R2|147-66
44376|code|BCC             loc_AD8A|23-211
44378|code|LDR             R1, [R5,#8]|169-104
44380|code|CMP             R3, R1|139-66
44382|code|BCS             loc_AD72|8-210
44384|code|ADDS            R3, #1|1-51
44386|code|STR             R1, [R4,#8]|161-96
44388|code|SUBS            R0, R3, R2|152-26
44390|code|POP             {R3-R5,PC}|56-189
44392|code|LDRB            R3, [R5,#0x10]|43-124
44394|code|LSLS            R2, R3, #0x1F|218-7
44396|code|BPL             loc_AD4C|238-213
44398|code|MOVS            R0, #1|1-32
44400|code|POP             {R3-R5,PC}|56-189
44402|code|MOV             R0, R5|40-70
44404|code|POP.W           {R3-R5,LR}|189-232-56-64
44408|code|B.W             sub_A9B8|255-247-30-190
44412|code|LDR             R3, [R5,#8]|171-104
44414|code|MOVS            R0, #0|0-32
44416|code|STR             R3, [R4,#8]|163-96
44418|code|POP             {R3-R5,PC}|56-189
44420|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44424|code|POP             {R3-R5,PC}|56-189
44426|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44430|code|POP             {R3-R5,PC}|56-189
44432|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|10-72
44434|code|MOVW            R2, #0x352; line|64-242-82-50
44438|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
44440|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|10-75
44442|code|BLX             __assert_fail|254-247-196-235
44446|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|10-72
44448|code|MOVW            R2, #0x351; line|64-242-81-50
44452|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
44454|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|7-75
44456|code|BLX             __assert_fail|254-247-188-235
44460|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|7-72
44462|code|MOVW            R2, #0x353; line|64-242-83-50
44466|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
44468|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|3-75
44470|code|BLX             __assert_fail|254-247-182-235
44474|data|ALIGN 4|0-191
44476|data|DCD aH2Void0; "h2 != ((void *)0)"|248-250-0-0
44480|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
44484|data|DCD aHostrangeJoin; "hostrange_join"|44-247-0-0
44488|data|DCD aH1Void0; "h1 != ((void *)0)"|100-250-0-0
44492|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|12-251-0-0
44496|code|PUSH            {R3-R5,LR}|56-181
44498|code|MOV             R4, R0|4-70
44500|code|MOV             R5, R1|13-70
44502|code|BL              sub_A924|255-247-165-253
44506|code|CBNZ            R0, loc_ADF0|72-185
44508|code|LDRB            R3, [R4,#0x10]|35-124
44510|code|LSLS            R3, R3, #0x1F|219-7
44512|code|BMI             locret_ADF2|7-212
44514|code|LDRB            R3, [R5,#0x10]|43-124
44516|code|TST.W           R3, #1|19-240-1-15
44520|code|ITE NE|20-191
44522|code|MOVNE           R0, #0|0-32
44524|code|MOVEQ           R0, #1|1-32
44526|code|POP             {R3-R5,PC}|56-189
44528|code|MOVS            R0, #0|0-32
44530|code|POP             {R3-R5,PC}|56-189
44532|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44536|code|SUB             SP, SP, #0x24|137-176
44538|code|LDR             R6, [R1]|14-104
44540|code|MOV             R8, R0|128-70
44542|code|STR             R3, [SP,#0x48+s]|4-147
44544|code|MOV             R5, R2|21-70
44546|code|LDR             R3, [R0,#8]|131-104
44548|code|LDR             R7, [R0,#0x10]|7-105
44550|code|MOV.W           R9, R6,LSL#2|79-234-134-9
44554|code|SUBS            R3, #1|1-59
44556|code|STR             R1, [SP,#0x48+var_30]|6-145
44558|code|CMP             R6, R3|158-66
44560|code|ADD.W           R10, R7, R9|7-235-9-10
44564|code|LDR.W           R4, [R7,R6,LSL#2]|87-248-38-64
44568|code|IT GE|168-191
44570|code|MOVGE.W         R11, #0|79-240-0-11
44574|code|BGE             loc_AE26|2-218
44576|code|ADDS            R3, R6, #1|115-28
44578|code|LDR.W           R11, [R7,R3,LSL#2]|87-248-35-176
44582|code|MOV             R0, R4|32-70
44584|code|BL              sub_A9B8|255-247-198-253
44588|code|CMP             R0, #1|1-40
44590|code|BLS.W           loc_AF70|64-242-159-128
44594|code|MOVS            R1, #1|1-33
44596|code|STR             R1, [SP,#0x48+var_34]|5-145
44598|code|LDR             R3, [R4]|35-104
44600|code|MOV             R1, R5; maxlen|41-70
44602|code|LDR             R0, [SP,#0x48+s]; s|4-152
44604|code|LDR             R2, =(aRegcompFailedS+0x10); format|87-74
44606|code|BLX             snprintf|254-247-238-234
44610|code|CMP             R0, R5|168-66
44612|code|MOV             R4, R0|4-70
44614|code|ITE LS|148-191
44616|code|MOVLS           R3, #0|0-35
44618|code|MOVHI           R3, #1|1-35
44620|code|ORRS.W          R3, R3, R0,LSR#31|83-234-208-115
44624|code|IT NE|24-191
44626|code|MOVNE           R4, R5|44-70
44628|code|BNE             loc_AF4A|121-209
44630|code|LDR             R2, [SP,#0x48+var_34]|5-154
44632|code|UXTB            R2, R2|210-178
44634|code|STR             R2, [SP,#0x48+var_2C]|7-146
44636|code|MOV             R3, R2|19-70
44638|code|CMP             R5, R4|165-66
44640|code|ITE LS|148-191
44642|code|MOVLS           R3, #0|0-35
44644|code|ANDHI.W         R3, R3, #1|3-240-1-3
44648|code|CMP             R3, #0|0-43
44650|code|BNE             loc_AF66|124-209
44652|code|LDR.W           R7, [R7,R9]|87-248-9-112
44656|code|MOV             R11, R8|195-70
44658|code|B               loc_AEA2|22-224
44660|code|ADD             R4, R8|68-68
44662|code|CMP             R5, R4|165-66
44664|code|BLS             loc_AF26|85-217
44666|code|LDR             R3, [SP,#0x48+var_34]|5-155
44668|code|CBZ             R3, loc_AE86|27-177
44670|code|LDR             R2, [SP,#0x48+s]|4-154
44672|code|MOVS            R1, #0x2C ; ','|44-33
44674|code|STRB            R1, [R2,R4]|17-85
44676|code|ADDS            R4, #1|1-52
44678|code|LDR.W           R3, [R11,#8]|219-248-8-48
44682|code|ADDS            R6, #1|1-54
44684|code|CMP             R6, R3|158-66
44686|code|BGE             loc_AF26|74-218
44688|code|LDR.W           R7, [R10,#4]|218-248-4-112
44692|code|LDR.W           R1, [R10],#4|90-248-4-27
44696|code|MOV             R0, R7|56-70
44698|code|BL              sub_ADD0|255-247-153-255
44702|code|CMP             R0, #0|0-40
44704|code|BEQ             loc_AF26|65-208
44706|code|LDR             R2, [SP,#0x48+s]|4-154
44708|code|RSB.W           R9, R4, R5|196-235-5-9
44712|code|CMP             R5, R9|77-69
44714|code|IT CC|56-191
44716|code|MOVCC.W         R9, #0|79-240-0-9
44720|code|ADDS.W          R12, R2, R4|18-235-4-12
44724|code|BEQ             loc_AF8E|107-208
44726|code|LDRB            R3, [R7,#0x10]|59-124
44728|code|MOV.W           R8, #0|79-240-0-8
44732|code|AND.W           R3, R3, #1|3-240-1-3
44736|code|CMP.W           R9, #0|185-241-0-15
44740|code|IT EQ|8-191
44742|code|ORREQ.W         R3, R3, #1|67-240-1-3
44746|code|CMP             R3, #0|0-43
44748|code|BNE             loc_AE74|210-209
44750|code|LDR.W           LR, [R7,#4]|215-248-4-224
44754|code|MOV             R0, R12; s|96-70
44756|code|LDR             R3, [R7,#0xC]|251-104
44758|code|MOV             R1, R9; maxlen|73-70
44760|code|LDR             R2, =a0Lu; "%0*lu"|49-74
44762|code|STR.W           R12, [SP,#0x48+var_3C]|205-248-12-192
44766|code|STR.W           LR, [SP,#0x48+var_48]|205-248-0-224
44770|code|BLX             snprintf|254-247-156-234
44774|code|LDR.W           R12, [SP,#0x48+var_3C]|221-248-12-192
44778|code|MVN.W           R3, R0|111-234-0-3
44782|code|MOV             R8, R0|128-70
44784|code|LSRS            R3, R3, #0x1F|219-15
44786|code|CMP             R0, R9|72-69
44788|code|ITE CS|44-191
44790|code|MOVCS           R3, #0|0-35
44792|code|ANDCC.W         R3, R3, #1|3-240-1-3
44796|code|CMP             R3, #0|0-43
44798|code|BEQ             loc_AE74|185-208
44800|code|LDR             R1, [R7,#8]|185-104
44802|code|LDR             R3, [R7,#4]|123-104
44804|code|CMP             R3, R1|139-66
44806|code|BCS             loc_AE74|181-210
44808|code|RSB.W           R9, R8, R9|200-235-9-9
44812|code|LDR             R3, [R7,#0xC]|251-104
44814|code|ADD             R0, R12; s|96-68
44816|code|STR             R1, [SP,#0x48+var_48]|0-145
44818|code|LDR             R2, =a0Lu_0; "-%0*lu"|36-74
44820|code|MOV             R1, R9; maxlen|73-70
44822|code|BLX             snprintf|254-247-130-234
44826|code|CMP             R0, #0|0-40
44828|code|ITE GE|172-191
44830|code|ADDGE           R8, R0|128-68
44832|code|MOVLT.W         R8, #0xFFFFFFFF|79-240-255-56
44836|code|B               loc_AE74|166-231
44838|code|LDR             R3, [SP,#0x48+var_2C]|7-155
44840|code|CMP             R4, R5|172-66
44842|code|ITE CS|44-191
44844|code|MOVCS           R3, #0|0-35
44846|code|ANDCC.W         R3, R3, #1|3-240-1-3
44850|code|CBZ             R3, loc_AF52|115-177
44852|code|CMP             R4, #0|0-44
44854|code|BLE             loc_AF52|12-221
44856|code|LDR             R1, [SP,#0x48+s]|4-153
44858|code|MOVS            R2, #0x5D ; ']'|93-34
44860|code|ADDS            R3, R1, R4|11-25
44862|code|STRB.W          R2, [R3,#-1]|3-248-1-44
44866|code|MOVS            R3, #0|0-35
44868|code|STRB            R3, [R1,R4]|11-85
44870|code|LDR             R2, [SP,#0x48+var_30]|6-154
44872|code|STR             R6, [R2]|22-96
44874|code|MOV             R0, R4|32-70
44876|code|ADD             SP, SP, #0x24 ; '$'|9-176
44878|code|POP.W           {R4-R11,PC}|189-232-240-143
44882|code|CMP             R5, R4|165-66
44884|code|BHI             loc_AF82|21-216
44886|code|CMP             R5, #0|0-45
44888|code|BEQ             loc_AF46|245-208
44890|code|LDR             R2, [SP,#0x48+s]|4-154
44892|code|MOVS            R3, #0|0-35
44894|code|ADDS            R5, R2, R5|85-25
44896|code|STRB.W          R3, [R5,#-1]|5-248-1-60
44900|code|B               loc_AF46|239-231
44902|code|LDR             R1, [SP,#0x48+s]|4-153
44904|code|MOVS            R3, #0x5B ; '['|91-35
44906|code|STRB            R3, [R1,R4]|11-85
44908|code|ADDS            R4, #1|1-52
44910|code|B               loc_AE6C|125-231
44912|code|MOV             R0, R4|32-70
44914|code|MOV             R1, R11|89-70
44916|code|BL              sub_ADD0|255-247-44-255
44920|code|ADDS            R0, #0|0-48
44922|code|IT NE|24-191
44924|code|MOVNE           R0, #1|1-32
44926|code|STR             R0, [SP,#0x48+var_34]|5-144
44928|code|B               loc_AE36|89-231
44930|code|LDR             R1, [SP,#0x48+s]|4-153
44932|code|BIC.W           R3, R4, R4,ASR#31|36-234-228-115
44936|code|MOVS            R2, #0|0-34
44938|code|STRB            R2, [R1,R3]|202-84
44940|code|B               loc_AF46|219-231
44942|code|LDR             R0, =aBufVoid0; "buf != ((void *)0)"|6-72
44944|code|MOVW            R2, #0x3CF; line|64-242-207-50
44948|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|5-73
44950|code|LDR             R3, =aHostrangeNumst; "hostrange_numstr"|6-75
44952|code|BLX             __assert_fail|254-247-196-234
44956|data|DCD aRegcompFailedS+0x10; "%s"|128-2-1-0
44960|data|DCD a0Lu; "%0*lu"|60-251-0-0
44964|data|DCD a0Lu_0; "-%0*lu"|68-251-0-0
44968|data|DCD aBufVoid0; "buf != ((void *)0)"|40-251-0-0
44972|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
44976|data|DCD aHostrangeNumst; "hostrange_numstr"|60-247-0-0
44980|code|PUSH            {R4-R6,LR}|112-181
44982|code|MOV             R5, R0|5-70
44984|code|MOV             R6, R1|14-70
44986|code|CBZ             R0, loc_AFF2|208-177
44988|code|LDR             R2, [R0]|2-104
44990|code|MOVW            R3, #0xDEAD|77-246-173-99
44994|code|CMP             R2, R3|154-66
44996|code|BNE             loc_B000|28-209
44998|code|LDR             R4, [R5,#4]|108-104
45000|code|LSLS            R1, R1, #2; size|137-0
45002|code|LDR             R0, [R0,#0x10]; ptr|0-105
45004|code|STR             R6, [R5,#4]|110-96
45006|code|BLX             realloc|254-247-140-233
45010|code|STR             R0, [R5,#0x10]|40-97
45012|code|CBZ             R0, locret_AFEC|80-177
45014|code|CMP             R6, R4|166-66
45016|code|BLS             loc_AFEE|9-217
45018|code|MOVS            R3, #0|0-35
45020|code|B               loc_AFE0|0-224
45022|code|LDR             R0, [R5,#0x10]|40-105
45024|code|STR.W           R3, [R0,R4,LSL#2]|64-248-36-48
45028|code|ADDS            R4, #1|1-52
45030|code|CMP             R6, R4|166-66
45032|code|BHI             loc_AFDE|249-216
45034|code|MOVS            R0, #1|1-32
45036|code|POP             {R4-R6,PC}|112-189
45038|code|MOVS            R0, #1|1-32
45040|code|POP             {R4-R6,PC}|112-189
45042|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
45044|code|MOVW            R2, #0x411; line|64-242-17-66
45048|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
45050|code|LDR             R3, =aHostlistResize; "hostlist_resize"|7-75
45052|code|BLX             __assert_fail|254-247-146-234
45056|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|6-72
45058|code|MOVW            R2, #0x412; line|64-242-18-66
45062|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
45064|code|LDR             R3, =aHostlistResize; "hostlist_resize"|3-75
45066|code|BLX             __assert_fail|254-247-140-234
45070|data|ALIGN 0x10|0-191
45072|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
45076|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
45080|data|DCD aHostlistResize; "hostlist_resize"|80-247-0-0
45084|data|DCD aHlMagic57005; "hl->magic == 57005"|96-251-0-0
45088|code|LDR             R1, [R0,#4]|65-104
45090|code|PUSH            {R3,LR}|8-181
45092|code|ADDS            R1, #0x10|16-49
45094|code|BL              sub_AFB4|255-247-197-255
45098|code|ADDS            R0, #0|0-48
45100|code|IT NE|24-191
45102|code|MOVNE           R0, #1|1-32
45104|code|POP             {R3,PC}|8-189
45106|data|ALIGN 4|0-191
45108|code|PUSH            {R3-R7,LR}|248-181
45110|code|MOV             R4, R0|4-70
45112|code|MOV             R6, R1|14-70
45114|code|CMP             R1, #0|0-41
45116|code|BEQ             loc_B0C8|68-208
45118|code|CMP             R0, #0|0-40
45120|code|BEQ             loc_B0E4|80-208
45122|code|LDR             R2, [R0]|2-104
45124|code|MOVW            R3, #0xDEAD|77-246-173-99
45128|code|CMP             R2, R3|154-66
45130|code|BNE             loc_B0D6|68-209
45132|code|LDR             R5, [R0,#8]|133-104
45134|code|LDR             R3, [R0,#0x10]|3-105
45136|code|CMP             R5, #0|0-45
45138|code|IT LE|216-191
45140|code|LDRLE           R7, [R3]|31-104
45142|code|BLE             loc_B05E|2-221
45144|code|SUBS            R2, R5, #1|106-30
45146|code|LDR.W           R7, [R3,R2,LSL#2]|83-248-34-112
45150|code|LDR             R3, [R4,#4]|99-104
45152|code|CMP             R5, R3|157-66
45154|code|BEQ             loc_B0AC|35-208
45156|code|CMP             R5, #0|0-45
45158|code|BLE             loc_B072|4-221
45160|code|MOV             R0, R7|56-70
45162|code|MOV             R1, R6|49-70
45164|code|BL              sub_A924|255-247-90-252
45168|code|CBZ             R0, loc_B092|120-177
45170|code|MOV             R0, R6|48-70
45172|code|LDR             R7, [R4,#0x10]|39-105
45174|code|BL              sub_ABF8|255-247-191-253
45178|code|ADDS            R3, R5, #1|107-28
45180|code|STR.W           R0, [R7,R5,LSL#2]|71-248-37-0
45184|code|STR             R3, [R4,#8]|163-96
45186|code|CBZ             R0, loc_B0BC|216-177
45188|code|MOV             R0, R6|48-70
45190|code|BL              sub_A9B8|255-247-151-252
45194|code|LDR             R3, [R4,#0xC]|227-104
45196|code|ADDS            R0, R0, R3|192-24
45198|code|STR             R0, [R4,#0xC]|224-96
45200|code|POP             {R3-R7,PC}|248-189
45202|code|LDR             R3, [R6,#4]|115-104
45204|code|LDR             R2, [R7,#8]|186-104
45206|code|SUBS            R3, #1|1-59
45208|code|CMP             R2, R3|154-66
45210|code|BNE             loc_B072|234-209
45212|code|MOV             R0, R7|56-70
45214|code|MOV             R1, R6|49-70
45216|code|BL              sub_A9EC|255-247-164-252
45220|code|CBZ             R0, loc_B0B8|64-177
45222|code|LDR             R3, [R6,#8]|179-104
45224|code|STR             R3, [R7,#8]|187-96
45226|code|B               loc_B084|235-231
45228|code|MOV             R0, R4|32-70
45230|code|BL              sub_B020|255-247-183-255
45234|code|CBZ             R0, loc_B0C2|48-177
45236|code|LDR             R5, [R4,#8]|165-104
45238|code|B               loc_B064|213-231
45240|code|LDR             R5, [R4,#8]|165-104
45242|code|B               loc_B072|218-231
45244|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
45248|code|POP             {R3-R7,PC}|248-189
45250|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
45254|code|POP             {R3-R7,PC}|248-189
45256|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
45258|code|MOVW            R2, #0x433; line|64-242-51-66
45262|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
45264|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|10-75
45266|code|BLX             __assert_fail|254-247-40-234
45270|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
45272|code|MOVW            R2, #0x434; line|64-242-52-66
45276|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
45278|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|7-75
45280|code|BLX             __assert_fail|254-247-32-234
45284|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
45286|code|MOVW            R2, #0x434; line|64-242-52-66
45290|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
45292|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|3-75
45294|code|BLX             __assert_fail|254-247-26-234
45298|data|ALIGN 4|0-191
45300|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
45304|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
45308|data|DCD aHostlistPushRa; "hostlist_push_range"|96-247-0-0
45312|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
45316|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
45320|code|PUSH.W          {R4-R8,LR}|45-233-240-65
45324|code|MOV             R4, R0|4-70
45326|code|SUB             SP, SP, #8|130-176
45328|code|MOV             R7, R2|23-70
45330|code|CMP             R0, #0|0-40
45332|code|BEQ             loc_B1A0|68-208
45334|code|LDR             R2, [R0]|2-104
45336|code|MOVW            R3, #0xDEAD|77-246-173-99
45340|code|CMP             R2, R3|154-66
45342|code|BNE             loc_B1BC|77-209
45344|code|CMP             R1, #0|0-41
45346|code|BEQ             loc_B1AE|68-208
45348|code|LDR             R3, [R0,#8]|131-104
45350|code|MOVS            R0, #0|0-32
45352|code|CMP             R3, R7|187-66
45354|code|BLT             loc_B18A|46-219
45356|code|LDR             R2, [R4,#4]|98-104
45358|code|CMP             R3, R2|147-66
45360|code|BEQ             loc_B190|46-208
45362|code|LDR.W           R8, [R4,#0x10]|212-248-16-128
45366|code|MOV             R0, R1|8-70
45368|code|MOV             R5, R7|61-70
45370|code|LDR.W           R6, [R8,R7,LSL#2]|88-248-39-96
45374|code|BL              sub_ABF8|255-247-91-253
45378|code|LDR.W           R12, [R4,#8]|212-248-8-192
45382|code|ADDS            R3, R7, #1|123-28
45384|code|CMP             R12, R3|156-69
45386|code|STR.W           R0, [R8,R7,LSL#2]|72-248-39-0
45390|code|BLT             loc_B164|9-219
45392|code|LSLS            R3, R3, #2|155-0
45394|code|B               loc_B156|0-224
45396|code|MOV             R6, R1|14-70
45398|code|LDR             R2, [R4,#0x10]|34-105
45400|code|ADDS            R5, #1|1-53
45402|code|LDR             R1, [R2,R3]|209-88
45404|code|STR             R6, [R2,R3]|214-80
45406|code|ADDS            R3, #4|4-51
45408|code|CMP             R5, R12|101-69
45410|code|BNE             loc_B154|247-209
45412|code|LDR             R3, [R4,#0x14]|99-105
45414|code|ADD.W           R2, R12, #1|12-241-1-2
45418|code|STR             R2, [R4,#8]|162-96
45420|code|CBZ             R3, loc_B188|99-177
45422|code|LDR             R2, [R3,#8]|154-104
45424|code|CMP             R7, R2|151-66
45426|code|BGT             loc_B182|6-220
45428|code|LDR             R1, [R3,#4]|89-104
45430|code|ADDS            R2, #1|1-50
45432|code|LDR             R1, [R1,#0x10]|9-105
45434|code|STR             R2, [R3,#8]|154-96
45436|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
45440|code|STR             R2, [R3,#0xC]|218-96
45442|code|LDR             R3, [R3,#0x14]|91-105
45444|code|CMP             R3, #0|0-43
45446|code|BNE             loc_B16E|242-209
45448|code|MOVS            R0, #1|1-32
45450|code|ADD             SP, SP, #8|2-176
45452|code|POP.W           {R4-R8,PC}|189-232-240-129
45456|code|MOV             R0, R4|32-70
45458|code|STR             R1, [SP,#0x20+var_1C]|1-145
45460|code|BL              sub_B020|255-247-68-255
45464|code|LDR             R1, [SP,#0x20+var_1C]|1-153
45466|code|CMP             R0, #0|0-40
45468|code|BNE             loc_B132|201-209
45470|code|B               loc_B18A|244-231
45472|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
45474|code|MOV.W           R2, #0x468; line|79-244-141-98
45478|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
45480|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|10-75
45482|code|BLX             __assert_fail|254-247-188-233
45486|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
45488|code|MOVW            R2, #0x46A; line|64-242-106-66
45492|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
45494|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|7-75
45496|code|BLX             __assert_fail|254-247-180-233
45500|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
45502|code|MOVW            R2, #0x469; line|64-242-105-66
45506|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
45508|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|3-75
45510|code|BLX             __assert_fail|254-247-174-233
45514|data|ALIGN 4|0-191
45516|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
45520|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
45524|data|DCD aHostlistInsert; "hostlist_insert_range"|116-247-0-0
45528|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
45532|data|DCD aHlMagic57005; "hl->magic == 57005"|96-251-0-0
45536|code|PUSH            {R3-R7,LR}|248-181
45538|code|MOV             R4, R0|4-70
45540|code|CBZ             R0, loc_B230|32-179
45542|code|LDR             R2, [R0]|2-104
45544|code|MOVW            R3, #0xDEAD|77-246-173-99
45548|code|CMP             R2, R3|154-66
45550|code|BNE             loc_B234|33-209
45552|code|BL              sub_AA94|255-247-80-252
45556|code|MOV             R5, R0|5-70
45558|code|CBZ             R0, loc_B226|176-177
45560|code|LDR             R1, [R4,#8]|161-104
45562|code|LDR             R3, [R0,#4]|67-104
45564|code|LDR             R2, [R4,#0xC]|226-104
45566|code|CMP             R1, R3|153-66
45568|code|STR             R1, [R0,#8]|129-96
45570|code|STR             R2, [R0,#0xC]|194-96
45572|code|BGT             loc_B22A|17-220
45574|code|LDR             R3, [R4,#8]|163-104
45576|code|CMP             R3, #0|0-43
45578|code|BLE             loc_B226|12-221
45580|code|MOVS            R6, #0|0-38
45582|code|LDR             R3, [R4,#0x10]|35-105
45584|code|LDR             R7, [R5,#0x10]|47-105
45586|code|LDR.W           R0, [R3,R6,LSL#2]|83-248-38-0
45590|code|BL              sub_ABF8|255-247-239-252
45594|code|LDR             R3, [R4,#8]|163-104
45596|code|STR.W           R0, [R7,R6,LSL#2]|71-248-38-0
45600|code|ADDS            R6, #1|1-54
45602|code|CMP             R3, R6|179-66
45604|code|BGT             loc_B20E|243-220
45606|code|MOV             R0, R5|40-70
45608|code|POP             {R3-R7,PC}|248-189
45610|code|BL              sub_AFB4|255-247-195-254
45614|code|B               loc_B206|234-231
45616|code|MOV             R5, R0|5-70
45618|code|B               loc_B226|248-231
45620|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
45622|code|MOVW            R2, #0x5E2; line|64-242-226-82
45626|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
45628|code|LDR             R3, =aHostlistCopy; "hostlist_copy"|3-75
45630|code|BLX             __assert_fail|254-247-114-233
45634|data|ALIGN 4|0-191
45636|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
45640|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
45644|data|DCD aHostlistCopy; "hostlist_copy"|140-247-0-0
45648|code|PUSH            {R4-R6,LR}|112-181
45650|code|MOV             R5, R0|5-70
45652|code|MOV             R6, R1|14-70
45654|code|MOV             R0, R1|8-70
45656|code|CBZ             R1, locret_B290|209-177
45658|code|BL              sub_A740|255-247-113-250
45662|code|MOV             R4, R0|4-70
45664|code|LDR             R0, [R0,#0xC]; s|192-104
45666|code|CBZ             R0, loc_B292|176-177
45668|code|BLX             strlen|254-247-186-232
45672|code|LDR             R6, [R4,#8]|166-104
45674|code|MOV             R1, R6|49-70
45676|code|MOV             R2, R6|50-70
45678|code|MOV             R3, R0|3-70
45680|code|LDR             R0, [R4,#4]|96-104
45682|code|BL              sub_AB74|255-247-127-252
45686|code|MOV             R6, R0|6-70
45688|code|MOV             R1, R6|49-70
45690|code|MOV             R0, R5|40-70
45692|code|BL              sub_B034|255-247-218-254
45696|code|MOV             R0, R6|48-70
45698|code|BL              sub_A724|255-247-79-250
45702|code|MOV             R0, R4|32-70
45704|code|BL              sub_A6FC|255-247-56-250
45708|code|MOVS            R0, #1|1-32
45710|code|POP             {R4-R6,PC}|112-189
45712|code|POP             {R4-R6,PC}|112-189
45714|code|MOV             R0, R6|48-70
45716|code|BL              sub_AAF8|255-247-48-252
45720|code|MOV             R6, R0|6-70
45722|code|B               loc_B278|237-231
45724|code|PUSH            {R3-R7,LR}|248-181
45726|code|MOV             R7, R0|7-70
45728|code|MOV             R5, R1|13-70
45730|code|CBZ             R1, loc_B2D4|185-177
45732|code|LDR             R2, [R1]|10-104
45734|code|MOVW            R3, #0xDEAD|77-246-173-99
45738|code|CMP             R2, R3|154-66
45740|code|BNE             loc_B2DA|21-209
45742|code|LDR             R3, [R1,#8]|139-104
45744|code|MOVS            R6, #0|0-38
45746|code|CMP             R3, #0|0-43
45748|code|IT GT|200-191
45750|code|MOVGT           R4, R6|52-70
45752|code|BLE             loc_B2D0|10-221
45754|code|LDR             R3, [R5,#0x10]|43-105
45756|code|MOV             R0, R7|56-70
45758|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
45762|code|ADDS            R4, #1|1-52
45764|code|BL              sub_B034|255-247-182-254
45768|code|LDR             R3, [R5,#8]|171-104
45770|code|CMP             R3, R4|163-66
45772|code|ADD             R6, R0|6-68
45774|code|BGT             loc_B2BA|244-220
45776|code|MOV             R0, R6|48-70
45778|code|POP             {R3-R7,PC}|248-189
45780|code|MOV             R6, R1|14-70
45782|code|MOV             R0, R6|48-70
45784|code|POP             {R3-R7,PC}|248-189
45786|code|LDR             R0, =aH2Magic57005; "(h2)->magic == 57005"|3-72
45788|code|MOVW            R2, #0x639; line|64-242-57-98
45792|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
45794|code|LDR             R3, =aHostlistPushLi; "hostlist_push_list"|3-75
45796|code|BLX             __assert_fail|254-247-30-233
45800|data|DCD aH2Magic57005; "(h2)->magic == 57005"|140-251-0-0
45804|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
45808|data|DCD aHostlistPushLi; "hostlist_push_list"|156-247-0-0
45812|code|PUSH.W          {R4-R9,LR}|45-233-240-67
45816|code|MOV             R4, R0|4-70
45818|code|SUB             SP, SP, #0xC|131-176
45820|code|CMP             R0, #0|0-40
45822|code|BEQ             loc_B3D6|106-208
45824|code|LDR             R2, [R0]|2-104
45826|code|MOVW            R3, #0xDEAD|77-246-173-99
45830|code|CMP             R2, R3|154-66
45832|code|BNE             loc_B3C8|94-209
45834|code|LDR             R7, [R0,#0xC]|199-104
45836|code|CMP             R7, #0|0-47
45838|code|BLE             loc_B3A8|75-221
45840|code|LDR             R2, [R0,#8]|130-104
45842|code|LDR             R3, [R0,#0x10]|3-105
45844|code|SUBS            R2, #1|1-58
45846|code|LDR.W           R5, [R3,R2,LSL#2]|83-248-34-80
45850|code|CMP             R5, #0|0-45
45852|code|BEQ             loc_B3E4|98-208
45854|code|LDRB            R3, [R5,#0x10]|43-124
45856|code|LSLS            R2, R3, #0x1F|218-7
45858|code|BMI             loc_B35C|27-212
45860|code|MOV             R0, R5|40-70
45862|code|BL              sub_A9B8|255-247-71-251
45866|code|MOV             R6, R0|6-70
45868|code|CBNZ            R0, loc_B36E|248-185
45870|code|SUBS            R7, #1|1-63
45872|code|MOV             R0, R5|40-70
45874|code|STR             R7, [R4,#0xC]|231-96
45876|code|BL              sub_AA34|255-247-126-251
45880|code|CBZ             R0, loc_B354|96-177
45882|code|LDR             R3, [R4,#8]|163-104
45884|code|LDR             R2, [R4,#0x10]|34-105
45886|code|SUBS            R3, #1|1-59
45888|code|STR             R3, [R4,#8]|163-96
45890|code|LDR.W           R0, [R2,R3,LSL#2]|82-248-35-0
45894|code|BL              sub_A724|255-247-237-249
45898|code|LDR             R2, [R4,#8]|162-104
45900|code|LDR             R3, [R4,#0x10]|35-105
45902|code|MOVS            R1, #0|0-33
45904|code|STR.W           R1, [R3,R2,LSL#2]|67-248-34-16
45908|code|MOV             R0, R6|48-70
45910|code|ADD             SP, SP, #0xC|3-176
45912|code|POP.W           {R4-R9,PC}|189-232-240-131
45916|code|LDM.W           R5, {R0,R3}|149-232-9-0
45920|code|ADDS            R3, #1|1-51
45922|code|STR             R3, [R5,#4]|107-96
45924|code|BLX             __strdup|254-247-102-232
45928|code|LDR             R7, [R4,#0xC]|231-104
45930|code|MOV             R6, R0|6-70
45932|code|B               loc_B32E|223-231
45934|code|LDR             R7, [R5]|47-104
45936|code|MOV             R0, R7; s|56-70
45938|code|BLX             strlen|254-247-52-232
45942|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
45946|code|ADD.W           R9, R8, #0x10|8-241-16-9
45950|code|ADD             R9, R0|129-68
45952|code|MOV             R0, R9; size|72-70
45954|code|BLX             malloc|253-247-250-239
45958|code|MOV             R6, R0|6-70
45960|code|CBZ             R0, loc_B3AC|128-177
45962|code|LDR.W           LR, [R5,#8]|213-248-8-224
45966|code|MOV             R3, R7|59-70
45968|code|MOV             R1, R9; maxlen|73-70
45970|code|LDR             R2, =aS0Lu; "%s%0*lu"|24-74
45972|code|ADD.W           R12, LR, #0xFFFFFFFF|14-241-255-60
45976|code|STR.W           R12, [R5,#8]|197-248-8-192
45980|code|STMEA.W         SP, {R8,LR}|141-232-0-65
45984|code|BLX             snprintf|254-247-60-232
45988|code|LDR             R7, [R4,#0xC]|231-104
45990|code|B               loc_B32E|194-231
45992|code|MOVS            R6, #0|0-38
45994|code|B               loc_B354|211-231
45996|code|BLX             __errno_location|254-247-48-232
46000|code|MOVS            R2, #0xC|12-34
46002|code|MOV.W           R1, #0x320|79-244-72-113
46006|code|MOV             R3, R0|3-70
46008|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|15-72
46010|code|STR             R2, [R3]|26-96
46012|code|LDR             R2, =aHostrangePop; "hostrange pop"|15-74
46014|code|BL              sub_A004|254-247-33-254
46018|code|LDR             R7, [R4,#0xC]|231-104
46020|code|MOV             R6, R0|6-70
46022|code|B               loc_B32E|178-231
46024|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|13-72
46026|code|MOV.W           R2, #0x648; line|79-244-201-98
46030|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
46032|code|LDR             R3, =aHostlistPop; "hostlist_pop"|12-75
46034|code|BLX             __assert_fail|254-247-168-232
46038|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|12-72
46040|code|MOV.W           R2, #0x648; line|79-244-201-98
46044|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
46046|code|LDR             R3, =aHostlistPop; "hostlist_pop"|9-75
46048|code|BLX             __assert_fail|254-247-160-232
46052|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|9-72
46054|code|MOV.W           R2, #0x318; line|79-244-70-114
46058|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
46060|code|LDR             R3, =aHostrangePop_0; "hostrange_pop"|8-75
46062|code|BLX             __assert_fail|254-247-154-232
46066|data|ALIGN 4|0-191
46068|data|DCD aS0Lu; "%s%0*lu"|180-251-0-0
46072|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
46076|data|DCD aHostrangePop; "hostrange pop"|164-251-0-0
46080|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
46084|data|DCD aHostlistPop; "hostlist_pop"|176-247-0-0
46088|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
46092|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
46096|data|DCD aHostrangePop_0; "hostrange_pop"|192-247-0-0
46100|code|PUSH.W          {R4-R10,LR}|45-233-240-71
46104|code|SUB             SP, SP, #0x60 ; '`'|152-176
46106|code|LDR             R7, =__stack_chk_guard|42-79
46108|code|MOV             R6, R1|14-70
46110|code|LDR             R3, [R7]|59-104
46112|code|STR             R3, [SP,#0x5C]|23-147
46114|code|CMP             R0, #0|0-40
46116|code|BEQ             loc_B4B4|70-208
46118|code|LDR             R2, [R0]|2-104
46120|code|MOVW            R3, #0xDEAD|77-246-173-99
46124|code|CMP             R2, R3|154-66
46126|code|BNE             loc_B4A6|58-209
46128|code|LDR.W           R10, [R0,#8]|208-248-8-160
46132|code|CMP.W           R10, #0|186-241-0-15
46136|code|BLE             loc_B492|43-221
46138|code|MOVS            R4, #0|0-36
46140|code|LDR.W           R9, [R0,#0x10]|208-248-16-144
46144|code|MOV             R8, R4|160-70
46146|code|B               loc_B44E|4-224
46148|code|ADD.W           R8, R8, #1|8-241-1-8
46152|code|ADDS            R4, R4, R0|36-24
46154|code|CMP             R8, R10|208-69
46156|code|BEQ             loc_B492|33-208
46158|code|LDR.W           R5, [R9],#4|89-248-4-91
46162|code|MOV             R0, R5|40-70
46164|code|BL              sub_A9B8|255-247-176-250
46168|code|SUBS            R3, R0, #1|67-30
46170|code|ADDS            R3, R3, R4|27-25
46172|code|CMP             R3, R6|179-66
46174|code|BLT             loc_B444|241-219
46176|code|LDR             R3, [R5]|43-104
46178|code|MOVS            R1, #0x4F ; 'O'|79-33
46180|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|24-74
46182|code|ADD             R0, SP, #0xC|3-168
46184|code|BLX             snprintf|253-247-216-239
46188|code|LDRB            R3, [R5,#0x10]|43-124
46190|code|LSLS            R1, R3, #0x1F|217-7
46192|code|BMI             loc_B48A|11-212
46194|code|LDR             R2, [R5,#4]|106-104
46196|code|SUBS            R4, R6, R4|52-27
46198|code|LDR             R3, [R5,#0xC]|235-104
46200|code|ADD             R5, SP, #0xC|3-173
46202|code|ADDS            R4, R4, R2|164-24
46204|code|RSB.W           R1, R0, #0x4F ; 'O'|192-241-79-1
46208|code|LDR             R2, =a0Lu; "%0*lu"|18-74
46210|code|ADDS            R0, R5, R0|40-24
46212|code|STR             R4, [SP]|0-148
46214|code|BLX             snprintf|253-247-202-239
46218|code|ADD             R0, SP, #0xC|3-168
46220|code|BLX             __strdup|253-247-210-239
46224|code|B               loc_B494|0-224
46226|code|MOVS            R0, #0|0-32
46228|code|LDR             R2, [SP,#0x5C]|23-154
46230|code|LDR             R3, [R7]|59-104
46232|code|CMP             R2, R3|154-66
46234|code|BNE             loc_B4A2|2-209
46236|code|ADD             SP, SP, #0x60 ; '`'|24-176
46238|code|POP.W           {R4-R10,PC}|189-232-240-135
46242|code|BLX             __stack_chk_fail|253-247-22-239
46246|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
46248|code|MOVW            R2, #0x6FD|64-242-253-98
46252|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|9-73
46254|code|LDR             R3, =aHostlistNth; "hostlist_nth"|10-75
46256|code|BLX             __assert_fail|254-247-56-232
46260|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
46262|code|MOVW            R2, #0x6FD|64-242-253-98
46266|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
46268|code|LDR             R3, =aHostlistNth; "hostlist_nth"|6-75
46270|code|BLX             __assert_fail|254-247-50-232
46274|data|ALIGN 4|0-191
46276|data|DCD __stack_chk_guard|136-135-1-0
46280|data|DCD aRegcompFailedS+0x10; "%s"|128-2-1-0
46284|data|DCD a0Lu; "%0*lu"|60-251-0-0
46288|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
46292|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
46296|data|DCD aHostlistNth; "hostlist_nth"|208-247-0-0
46300|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
46304|code|PUSH            {R3,LR}|8-181
46306|code|CBZ             R0, loc_B4F2|48-177
46308|code|LDR             R2, [R0]|2-104
46310|code|MOVW            R3, #0xDEAD|77-246-173-99
46314|code|CMP             R2, R3|154-66
46316|code|BNE             loc_B500|8-209
46318|code|LDR             R0, [R0,#0xC]|192-104
46320|code|POP             {R3,PC}|8-189
46322|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
46324|code|MOVW            R2, #0x737; line|64-242-55-114
46328|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
46330|code|LDR             R3, =aHostlistCount; "hostlist_count"|7-75
46332|code|BLX             __assert_fail|254-247-18-232
46336|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
46338|code|MOVW            R2, #0x737; line|64-242-55-114
46342|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
46344|code|LDR             R3, =aHostlistCount; "hostlist_count"|3-75
46346|code|BLX             __assert_fail|254-247-12-232
46350|data|ALIGN 0x10|0-191
46352|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
46356|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
46360|data|DCD aHostlistCount; "hostlist_count"|224-247-0-0
46364|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
46368|code|PUSH.W          {R4-R8,LR}|45-233-240-65
46372|code|MOV             R5, R0|5-70
46374|code|CMP             R1, #0|0-41
46376|code|BEQ             loc_B5A2|59-208
46378|code|MOV             R0, R1|8-70
46380|code|BL              sub_A740|255-247-8-249
46384|code|MOV             R7, R0|7-70
46386|code|CMP             R5, #0|0-45
46388|code|BEQ             loc_B5B6|63-208
46390|code|LDR             R2, [R5]|42-104
46392|code|MOVW            R3, #0xDEAD|77-246-173-99
46396|code|CMP             R2, R3|154-66
46398|code|BNE             loc_B5A8|51-209
46400|code|LDR             R3, [R5,#8]|171-104
46402|code|CMP             R3, #0|0-43
46404|code|BLE             loc_B592|37-221
46406|code|MOVS            R6, #0|0-38
46408|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
46412|code|MOV             R4, R6|52-70
46414|code|B               loc_B566|10-224
46416|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
46420|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
46424|code|ADDS            R4, #1|1-52
46426|code|BL              sub_A9B8|255-247-45-250
46430|code|LDR             R3, [R5,#8]|171-104
46432|code|CMP             R3, R4|163-66
46434|code|ADD             R6, R0|6-68
46436|code|BLE             loc_B592|21-221
46438|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
46442|code|MOV             R1, R7|57-70
46444|code|MOV.W           R8, R4,LSL#2|79-234-132-8
46448|code|BL              sub_A8C0|255-247-166-249
46452|code|CMP             R0, #0|0-40
46454|code|BEQ             loc_B550|235-208
46456|code|LDR             R3, [R7,#0xC]|251-104
46458|code|CBZ             R3, loc_B596|99-177
46460|code|LDR             R3, [R5,#0x10]|43-105
46462|code|LDR.W           R3, [R3,R8]|83-248-8-48
46466|code|LDRB            R2, [R3,#0x10]|26-124
46468|code|LSLS            R0, R2, #0x1F|208-7
46470|code|BMI             loc_B596|6-212
46472|code|LDR             R2, [R7,#8]|186-104
46474|code|LDR             R3, [R3,#4]|91-104
46476|code|SUBS            R3, R2, R3|211-26
46478|code|ADDS            R6, R3, R6|158-25
46480|code|B               loc_B596|1-224
46482|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
46486|code|MOV             R0, R7|56-70
46488|code|BL              sub_A6FC|255-247-176-248
46492|code|MOV             R0, R6|48-70
46494|code|POP.W           {R4-R8,PC}|189-232-240-129
46498|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
46502|code|B               loc_B59C|249-231
46504|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
46506|code|MOVW            R2, #0x747; line|64-242-71-114
46510|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
46512|code|LDR             R3, =aHostlistFind; "hostlist_find"|6-75
46514|code|BLX             __assert_fail|253-247-184-239
46518|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
46520|code|MOVW            R2, #0x747; line|64-242-71-114
46524|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
46526|code|LDR             R3, =aHostlistFind; "hostlist_find"|3-75
46528|code|BLX             __assert_fail|253-247-176-239
46532|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
46536|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
46540|data|DCD aHostlistFind; "hostlist_find"|240-247-0-0
46544|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
46548|code|PUSH.W          {R4-R11,LR}|45-233-240-79
46552|code|SUB             SP, SP, #0x1C|135-176
46554|code|STR             R0, [SP,#0x10]|4-144
46556|code|STR             R1, [SP,#0xC]|3-145
46558|code|STR             R2, [SP,#0x14]|5-146
46560|code|CMP             R0, #0|0-40
46562|code|BEQ.W           loc_B734|0-240-167-128
46566|code|LDR             R4, [SP,#0x10]|4-156
46568|code|MOVW            R3, #0xDEAD|77-246-173-99
46572|code|LDR             R2, [R4]|34-104
46574|code|CMP             R2, R3|154-66
46576|code|BNE.W           loc_B746|64-240-169-128
46580|code|LDR             R3, [R4,#8]|163-104
46582|code|CMP             R3, #0|0-43
46584|code|ITT GT|196-191
46586|code|MOVGT.W         R11, #0|79-240-0-11
46590|code|STRGT.W         R11, [SP,#8]|205-248-8-176
46594|code|BLE.W           loc_B72A|64-243-146-128
46598|code|LDR             R4, [SP,#0xC]|3-156
46600|code|MOVS            R3, #0|0-35
46602|code|RSB.W           R8, R11, R4|203-235-4-8
46606|code|CMP             R4, R8|68-69
46608|code|BCC             loc_B69E|69-211
46610|code|LDR             R4, [SP,#0x10]|4-156
46612|code|LDR             R3, [R4,#0x10]|35-105
46614|code|LDR             R4, [SP,#8]|2-156
46616|code|LDR.W           R7, [R3,R4,LSL#2]|83-248-36-112
46620|code|CMP.W           R8, #0|184-241-0-15
46624|code|BEQ.W           loc_B742|0-240-143-128
46628|code|LDRB            R6, [R7,#0x10]|62-124
46630|code|LDR             R4, [SP,#0x14]|5-156
46632|code|ANDS.W          R6, R6, #1|22-240-1-6
46636|code|ADD.W           R9, R4, R11|4-235-11-9
46640|code|BNE             loc_B70E|109-209
46642|code|LDR             R5, [R7,#4]|125-104
46644|code|LDR             R3, [R7,#8]|187-104
46646|code|CMP             R5, R3|157-66
46648|code|BHI             loc_B720|114-216
46650|code|MOV.W           R10, #0x2C ; ','|79-240-44-10
46654|code|B               loc_B650|7-224
46656|code|ADDS            R0, R6, R0|48-24
46658|code|ADDS            R5, #1|1-53
46660|code|ADDS            R6, R0, #1|70-28
46662|code|STRB.W          R10, [R9,R0]|9-248-0-160
46666|code|LDR             R3, [R7,#8]|187-104
46668|code|CMP             R5, R3|157-66
46670|code|BHI             loc_B6EE|78-216
46672|code|RSB.W           R4, R6, R8|198-235-8-4
46676|code|LDR.W           LR, [R7,#0xC]|215-248-12-224
46680|code|CMP             R8, R4|160-69
46682|code|IT CC|56-191
46684|code|MOVCC           R4, #0|0-36
46686|code|LDR             R3, [R7]|59-104
46688|code|ADD.W           R0, R9, R6|9-235-6-0
46692|code|LDR             R2, =aS0Lu; "%s%0*lu"|59-74
46694|code|MOV             R1, R4|33-70
46696|code|STR.W           LR, [SP]|205-248-0-224
46700|code|STR             R5, [SP,#4]|1-149
46702|code|BLX             snprintf|253-247-214-238
46706|code|CMP             R4, R0|132-66
46708|code|ITE HI|140-191
46710|code|MOVHI           R4, #0|0-36
46712|code|MOVLS           R4, #1|1-36
46714|code|ORRS.W          R4, R4, R0,LSR#31|84-234-208-116
46718|code|BEQ             loc_B640|223-208
46720|code|ADD             R9, R8|193-68
46722|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46726|code|MOVS            R2, #1|1-34
46728|code|MOV             R0, R3|24-70
46730|code|MOVS            R1, #0|0-33
46732|code|STRB.W          R1, [R9,#-1]|9-248-1-28
46736|code|CMP             R8, R0|128-69
46738|code|ITE CS|44-191
46740|code|MOVCS           R0, R2|16-70
46742|code|ORRCC.W         R0, R2, #1|66-240-1-0
46746|code|CMP             R0, #0|0-40
46748|code|BNE             loc_B706|51-209
46750|code|LDR             R4, [SP,#8]|2-156
46752|code|ADD             R3, R11|91-68
46754|code|MOVS            R2, #0x2C ; ','|44-34
46756|code|ADD.W           R11, R3, #1|3-241-1-11
46760|code|ADDS            R4, #1|1-52
46762|code|STR             R4, [SP,#8]|2-148
46764|code|LDR             R4, [SP,#0x14]|5-156
46766|code|STRB            R2, [R4,R3]|226-84
46768|code|LDR             R4, [SP,#0x10]|4-156
46770|code|LDR             R3, [R4,#8]|163-104
46772|code|LDR             R4, [SP,#8]|2-156
46774|code|CMP             R3, R4|163-66
46776|code|BGT             loc_B606|165-220
46778|code|MOVS            R0, #0|0-32
46780|code|MOVS            R2, #0|0-34
46782|code|CMP.W           R11, #0|187-241-0-15
46786|code|MOV             R3, R11|91-70
46788|code|ITTT GT|194-191
46790|code|ADDGT.W         R11, R11, #0xFFFFFFFF|11-241-255-59
46794|code|MOVGT           R2, R11|90-70
46796|code|MOVGT           R3, R11|91-70
46798|code|LDR             R4, [SP,#0x14]|5-156
46800|code|MOVS            R1, #0|0-33
46802|code|CMP             R0, R1|136-66
46804|code|IT NE|24-191
46806|code|MOVNE.W         R11, #0xFFFFFFFF|79-240-255-59
46810|code|STRB            R1, [R4,R2]|161-84
46812|code|LDR             R4, [SP,#0xC]|3-156
46814|code|CMP             R4, R3|156-66
46816|code|IT EQ|8-191
46818|code|MOVEQ.W         R11, #0xFFFFFFFF|79-240-255-59
46822|code|MOV             R0, R11|88-70
46824|code|ADD             SP, SP, #0x1C|7-176
46826|code|POP.W           {R4-R11,PC}|189-232-240-143
46830|code|LSRS            R2, R0, #0x1F|194-15
46832|code|MOV             R3, R0|3-70
46834|code|MOVS            R1, #0|0-33
46836|code|STRB.W          R1, [R9,R0]|9-248-0-16
46840|code|CMP             R8, R0|128-69
46842|code|ITE CS|44-191
46844|code|MOVCS           R0, R2|16-70
46846|code|ORRCC.W         R0, R2, #1|66-240-1-0
46850|code|CMP             R0, #0|0-40
46852|code|BEQ             loc_B69E|203-208
46854|code|LDR.W           R11, [SP,#0xC]|221-248-12-176
46858|code|MOVS            R0, #1|1-32
46860|code|B               loc_B6BC|214-231
46862|code|LDR             R3, [R7]|59-104
46864|code|MOV             R0, R9|72-70
46866|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|17-74
46868|code|MOV             R1, R8|65-70
46870|code|BLX             snprintf|253-247-130-238
46874|code|MOV             R3, R0|3-70
46876|code|LSRS            R2, R0, #0x1F|194-15
46878|code|B               loc_B690|183-231
46880|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46884|code|MOVS            R2, #1|1-34
46886|code|MOV             R0, R3|24-70
46888|code|B               loc_B6F2|227-231
46890|code|MOVS            R3, #0|0-35
46892|code|MOV             R0, R3|24-70
46894|code|MOV             R2, R3|26-70
46896|code|MOV             R11, R3|155-70
46898|code|B               loc_B6CE|204-231
46900|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
46902|code|MOV.W           R2, #0x7F8|79-244-255-98
46906|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|9-73
46908|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|9-75
46910|code|BLX             __assert_fail|253-247-242-238
46914|code|MOV             R3, R8|67-70
46916|code|B               loc_B69E|171-231
46918|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
46920|code|MOV.W           R2, #0x7F8|79-244-255-98
46924|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|4-73
46926|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|5-75
46928|code|BLX             __assert_fail|253-247-232-238
46932|data|DCD aS0Lu; "%s%0*lu"|180-251-0-0
46936|data|DCD aRegcompFailedS+0x10; "%s"|128-2-1-0
46940|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
46944|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
46948|data|DCD aHostlistDerang; "hostlist_deranged_string"|0-248-0-0
46952|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
46956|code|PUSH.W          {R4-R8,LR}|45-233-240-65
46960|code|SUB             SP, SP, #8|130-176
46962|code|MOVS            R3, #0|0-35
46964|code|MOV             R6, R0|6-70
46966|code|MOV             R5, R1|13-70
46968|code|MOV             R7, R2|23-70
46970|code|STR             R3, [SP,#0x20+var_1C]|1-147
46972|code|CMP             R0, #0|0-40
46974|code|BEQ             loc_B824|81-208
46976|code|LDR             R1, [R0]|1-104
46978|code|MOVW            R2, #0xDEAD|77-246-173-98
46982|code|CMP             R1, R2|145-66
46984|code|BNE             loc_B816|69-209
46986|code|LDR             R2, [R0,#8]|130-104
46988|code|MOV             R4, R3|28-70
46990|code|MOV.W           R8, #0x2C ; ','|79-240-44-8
46994|code|CMP             R3, R2|147-66
46996|code|ITE GE|172-191
46998|code|MOVGE           R3, #0|0-35
47000|code|MOVLT           R3, #1|1-35
47002|code|CMP             R4, R5|172-66
47004|code|ITE CS|44-191
47006|code|MOVCS           R3, #0|0-35
47008|code|ANDCC.W         R3, R3, #1|3-240-1-3
47012|code|CBZ             R3, loc_B7E2|235-177
47014|code|ADDS            R3, R7, R4|59-25
47016|code|SUBS            R2, R5, R4|42-27
47018|code|MOV             R0, R6|48-70
47020|code|ADD             R1, SP, #0x20+var_1C|1-169
47022|code|BL              sub_ADF4|255-247-33-251
47026|code|LDR             R2, [R6,#8]|178-104
47028|code|ADDS            R4, R4, R0|36-24
47030|code|CMP             R4, #0|0-44
47032|code|ITE LE|212-191
47034|code|MOVLE           R3, #0|0-35
47036|code|MOVGT           R3, #1|1-35
47038|code|CMP             R4, R5|172-66
47040|code|ITE CS|44-191
47042|code|MOVCS           R3, #0|0-35
47044|code|ANDCC.W         R3, R3, #1|3-240-1-3
47048|code|CBNZ            R3, loc_B806|235-185
47050|code|LDR             R3, [SP,#0x20+var_1C]|1-155
47052|code|CMP             R3, R2|147-66
47054|code|ITE GE|172-191
47056|code|MOVGE           R3, #0|0-35
47058|code|MOVLT           R3, #1|1-35
47060|code|CMP             R4, R5|172-66
47062|code|ITE CS|44-191
47064|code|MOVCS           R3, #0|0-35
47066|code|ANDCC.W         R3, R3, #1|3-240-1-3
47070|code|CMP             R3, #0|0-43
47072|code|BNE             loc_B7A6|225-209
47074|code|CMP             R5, R4|165-66
47076|code|ITT HI|132-191
47078|code|BICHI.W         R2, R4, R4,ASR#31|36-234-228-114
47082|code|STRBHI          R3, [R7,R2]|187-84
47084|code|BHI             loc_B7FE|7-216
47086|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
47090|code|CBZ             R5, loc_B7FE|37-177
47092|code|ADDS            R5, R7, R5|125-25
47094|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
47098|code|STRB.W          R3, [R5,#-1]|5-248-1-60
47102|code|MOV             R0, R4|32-70
47104|code|ADD             SP, SP, #8|2-176
47106|code|POP.W           {R4-R8,PC}|189-232-240-129
47110|code|LDR             R3, [SP,#0x20+var_1C]|1-155
47112|code|CMP             R2, R3|154-66
47114|code|BLE             loc_B792|194-221
47116|code|STRB.W          R8, [R7,R4]|7-248-4-128
47120|code|ADDS            R4, #1|1-52
47122|code|LDR             R2, [R6,#8]|178-104
47124|code|B               loc_B792|189-231
47126|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47128|code|MOVW            R2, #0x851; line|64-246-81-2
47132|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
47134|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|7-75
47136|code|BLX             __assert_fail|253-247-128-238
47140|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
47142|code|MOVW            R2, #0x851; line|64-246-81-2
47146|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
47148|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|3-75
47150|code|BLX             __assert_fail|253-247-122-238
47154|data|ALIGN 4|0-191
47156|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
47160|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
47164|data|DCD aHostlistRanged; "hostlist_ranged_string"|28-248-0-0
47168|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
47172|code|PUSH            {R4,LR}|16-181
47174|code|MOV             R4, R0|4-70
47176|code|MOVS            R0, #0x18; size|24-32
47178|code|BLX             malloc|253-247-150-237
47182|code|CBZ             R0, loc_B87E|176-177
47184|code|MOVS            R3, #0|0-35
47186|code|MOVW            R2, #0xDEAD|77-246-173-98
47190|code|STR             R3, [R0,#4]|67-96
47192|code|STR             R3, [R0,#0xC]|195-96
47194|code|STR             R3, [R0,#8]|131-96
47196|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
47200|code|STR             R0, [R0,#0x14]|64-97
47202|code|STR             R3, [R0,#0x10]|3-97
47204|code|STR             R2, [R0]|2-96
47206|code|CBZ             R4, loc_B896|180-177
47208|code|LDR             R3, [R4]|35-104
47210|code|CMP             R3, R2|147-66
47212|code|BNE             loc_B8A4|26-209
47214|code|LDR             R3, [R4,#0x10]|35-105
47216|code|LDR             R2, [R4,#0x14]|98-105
47218|code|STR             R4, [R0,#4]|68-96
47220|code|LDR             R3, [R3]|27-104
47222|code|STR             R2, [R0,#0x14]|66-97
47224|code|STR             R0, [R4,#0x14]|96-97
47226|code|STR             R3, [R0,#0xC]|195-96
47228|code|POP             {R4,PC}|16-189
47230|code|BLX             __errno_location|253-247-200-237
47234|code|MOVS            R3, #0xC|12-35
47236|code|MOVW            R1, #0x879|64-246-121-1
47240|code|LDR             R2, =aHostlistIterat; "hostlist_iterator_create"|10-74
47242|code|STR             R3, [R0]|3-96
47244|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|10-72
47246|code|POP.W           {R4,LR}|189-232-16-64
47250|code|B.W             sub_A004|254-247-183-187
47254|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
47256|code|MOVW            R2, #0x87B; line|64-246-123-2
47260|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
47262|code|LDR             R3, =aHostlistIterat_0; "hostlist_iterator_create"|8-75
47264|code|BLX             __assert_fail|253-247-64-238
47268|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47270|code|MOVW            R2, #0x87B; line|64-246-123-2
47274|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
47276|code|LDR             R3, =aHostlistIterat_0; "hostlist_iterator_create"|4-75
47278|code|BLX             __assert_fail|253-247-58-238
47282|data|ALIGN 4|0-191
47284|data|DCD aHostlistIterat; "hostlist_iterator_create"|188-251-0-0
47288|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
47292|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
47296|data|DCD aHostlistIterat_0; "hostlist_iterator_create"|52-248-0-0
47300|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
47304|code|LDR             R0, [R0]|0-104
47306|code|B.W             sub_B844|255-247-187-191
47310|data|ALIGN 0x10|0-191
47312|code|PUSH            {R3,LR}|8-181
47314|code|CBZ             R0, loc_B8F2|112-177
47316|code|LDR             R2, [R0]|2-104
47318|code|MOVW            R3, #0xDEAD|77-246-173-99
47322|code|CMP             R2, R3|154-66
47324|code|BNE             loc_B900|16-209
47326|code|LDR             R3, [R0,#4]|67-104
47328|code|MOVS            R2, #0|0-34
47330|code|STR             R2, [R0,#8]|130-96
47332|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
47336|code|LDR             R3, [R3,#0x10]|27-105
47338|code|LDR             R3, [R3]|27-104
47340|code|STR             R2, [R0,#0x10]|2-97
47342|code|STR             R3, [R0,#0xC]|195-96
47344|code|POP             {R3,PC}|8-189
47346|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
47348|code|MOVW            R2, #0x88B; line|64-246-139-2
47352|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
47354|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_reset"|7-75
47356|code|BLX             __assert_fail|253-247-18-238
47360|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|6-72
47362|code|MOVW            R2, #0x88C; line|64-246-140-2
47366|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
47368|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_reset"|3-75
47370|code|BLX             __assert_fail|253-247-12-238
47374|data|ALIGN 0x10|0-191
47376|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
47380|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
47384|data|DCD aHostlistIterat_2; "hostlist_iterator_reset"|80-248-0-0
47388|data|DCD aIMagic57005; "i->magic == 57005"|236-251-0-0
47392|code|PUSH            {R4-R6,LR}|112-181
47394|code|MOV             R5, R1|13-70
47396|code|LDR             R4, [R0,#0x14]|68-105
47398|code|MOV             R6, R2|22-70
47400|code|CBNZ            R4, loc_B934|36-185
47402|code|B               locret_B958|21-224
47404|code|CMP             R3, R5|171-66
47406|code|BEQ             loc_B95A|20-208
47408|code|LDR             R4, [R4,#0x14]|100-105
47410|code|CBZ             R4, locret_B958|140-177
47412|code|LDR             R3, [R4,#8]|163-104
47414|code|CMP             R6, #0|0-46
47416|code|BEQ             loc_B92C|248-208
47418|code|CMP             R5, R3|157-66
47420|code|RSB.W           R2, R6, R3|198-235-3-2
47424|code|BGT             loc_B930|246-220
47426|code|CMP             R2, #0|0-42
47428|code|STR             R2, [R4,#8]|162-96
47430|code|BLT             loc_B968|15-219
47432|code|LDR             R3, [R4,#4]|99-104
47434|code|LDR             R3, [R3,#0x10]|27-105
47436|code|LDR.W           R3, [R3,R2,LSL#2]|83-248-34-48
47440|code|STR             R3, [R4,#0xC]|227-96
47442|code|LDR             R4, [R4,#0x14]|100-105
47444|code|CMP             R4, #0|0-44
47446|code|BNE             loc_B934|237-209
47448|code|POP             {R4-R6,PC}|112-189
47450|code|LDR             R3, [R4,#0x10]|35-105
47452|code|CMP             R3, #0|0-43
47454|code|ADD.W           R3, R3, #0xFFFFFFFF|3-241-255-51
47458|code|IT GE|168-191
47460|code|STRGE           R3, [R4,#0x10]|35-97
47462|code|B               loc_B930|227-231
47464|code|MOV             R0, R4|32-70
47466|code|BL              sub_B8D0|255-247-177-255
47470|code|B               loc_B930|223-231
47472|code|PUSH            {R3-R7,LR}|248-181
47474|code|CMP             R0, #0|0-40
47476|code|BEQ             loc_B9CE|43-208
47478|code|LDR             R2, [R0]|2-104
47480|code|MOVW            R3, #0xDEAD|77-246-173-99
47484|code|CMP             R2, R3|154-66
47486|code|BNE             loc_B9EA|52-209
47488|code|LDR             R7, [R0,#8]|135-104
47490|code|CMP             R7, R1|143-66
47492|code|ITE GT|204-191
47494|code|MOVGT           R3, #0|0-35
47496|code|MOVLE           R3, #1|1-35
47498|code|ORRS.W          R3, R3, R1,LSR#31|83-234-209-115
47502|code|BNE             loc_B9DC|37-209
47504|code|LDR             R2, [R0,#0x10]|2-105
47506|code|SUBS            R7, #1|1-63
47508|code|LSLS            R3, R1, #2|139-0
47510|code|CMP             R1, R7|185-66
47512|code|MOV             R5, R2|21-70
47514|code|LDR.W           R4, [R2,R1,LSL#2]|82-248-33-64
47518|code|BGE             loc_B9B6|10-218
47520|code|MOV             R5, R1|13-70
47522|code|B               loc_B9A6|0-224
47524|code|LDR             R2, [R0,#0x10]|2-105
47526|code|ADDS            R6, R2, R3|214-24
47528|code|ADDS            R3, #4|4-51
47530|code|ADDS            R5, #1|1-53
47532|code|LDR             R2, [R2,R3]|210-88
47534|code|CMP             R5, R7|189-66
47536|code|STR             R2, [R6]|50-96
47538|code|BLT             loc_B9A4|247-219
47540|code|LDR             R5, [R0,#0x10]|5-105
47542|code|STR             R7, [R0,#8]|135-96
47544|code|MOVS            R3, #0|0-35
47546|code|MOVS            R2, #1|1-34
47548|code|STR.W           R3, [R5,R7,LSL#2]|69-248-39-48
47552|code|BL              sub_B920|255-247-174-255
47556|code|MOV             R0, R4|32-70
47558|code|POP.W           {R3-R7,LR}|189-232-248-64
47562|code|B.W             sub_A724|254-247-171-190
47566|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
47568|code|MOVW            R2, #0x48F; line|64-242-143-66
47572|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|9-73
47574|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|10-75
47576|code|BLX             __assert_fail|253-247-164-237
47580|code|LDR             R0, =aNHlNrangesN0; "n < hl->nranges && n >= 0"|9-72
47582|code|MOVW            R2, #0x491; line|64-242-145-66
47586|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
47588|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|6-75
47590|code|BLX             __assert_fail|253-247-158-237
47594|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
47596|code|MOV.W           R2, #0x490; line|79-244-146-98
47600|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
47602|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|3-75
47604|code|BLX             __assert_fail|253-247-150-237
47608|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
47612|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
47616|data|DCD aHostlistDelete; "hostlist_delete_range"|104-248-0-0
47620|data|DCD aNHlNrangesN0; "n < hl->nranges && n >= 0"|0-252-0-0
47624|data|DCD aHlMagic57005; "hl->magic == 57005"|96-251-0-0
47628|code|PUSH            {R4-R6,LR}|112-181
47630|code|MOV             R4, R0|4-70
47632|code|MOV             R5, R1|13-70
47634|code|CBZ             R0, loc_BA50|232-177
47636|code|LDR             R2, [R0]|2-104
47638|code|MOVW            R3, #0xDEAD|77-246-173-99
47642|code|CMP             R2, R3|154-66
47644|code|BNE             loc_BA7A|45-209
47646|code|CMP             R1, #0|0-41
47648|code|BLE             loc_BA6C|36-221
47650|code|LDR             R3, [R0,#8]|131-104
47652|code|CMP             R1, R3|153-66
47654|code|BGE             loc_BA5E|26-218
47656|code|LDR             R3, [R0,#0x10]|3-105
47658|code|SUBS            R2, R1, #1|74-30
47660|code|LDR.W           R1, [R3,R1,LSL#2]|83-248-33-16
47664|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
47668|code|BL              sub_AD18|255-247-112-249
47672|code|CMP             R0, #0|0-40
47674|code|MOV             R6, R0|6-70
47676|code|BLT             loc_BA4C|6-219
47678|code|MOV             R0, R4|32-70
47680|code|MOV             R1, R5|41-70
47682|code|BL              sub_B970|255-247-149-255
47686|code|LDR             R3, [R4,#0xC]|227-104
47688|code|SUBS            R3, R3, R6|155-27
47690|code|STR             R3, [R4,#0xC]|227-96
47692|code|MOV             R0, R6|48-70
47694|code|POP             {R4-R6,PC}|112-189
47696|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|13-72
47698|code|MOVW            R2, #0x7CE; line|64-242-206-114
47702|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|13-73
47704|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|13-75
47706|code|BLX             __assert_fail|253-247-100-237
47710|code|LDR             R0, =aLocHlNranges; "loc < hl->nranges"|13-72
47712|code|MOVW            R2, #0x7D1; line|64-242-209-114
47716|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|9-73
47718|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|10-75
47720|code|BLX             __assert_fail|253-247-92-237
47724|code|LDR             R0, =aLoc0; "loc > 0"|10-72
47726|code|MOV.W           R2, #0x7D0; line|79-244-250-98
47730|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
47732|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|6-75
47734|code|BLX             __assert_fail|253-247-86-237
47738|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|8-72
47740|code|MOVW            R2, #0x7CF; line|64-242-207-114
47744|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
47746|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|3-75
47748|code|BLX             __assert_fail|253-247-78-237
47752|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
47756|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
47760|data|DCD aAttemptRangeJo; "_attempt_range_join"|128-248-0-0
47764|data|DCD aLocHlNranges; "loc < hl->nranges"|36-252-0-0
47768|data|DCD aLoc0; "loc > 0"|28-252-0-0
47772|data|DCD aHlMagic57005; "hl->magic == 57005"|96-251-0-0
47776|code|PUSH            {R3-R5,LR}|56-181
47778|code|MOV             R4, R0|4-70
47780|code|CBZ             R0, loc_BAEA|8-179
47782|code|LDR             R2, [R0]|2-104
47784|code|MOVW            R3, #0xDEAD|77-246-173-99
47788|code|CMP             R2, R3|154-66
47790|code|BNE             loc_BAF8|35-209
47792|code|LDR             R1, [R0,#8]; nmemb|129-104
47794|code|CMP             R1, #1|1-41
47796|code|BLE             locret_BAE8|24-221
47798|code|LDR             R0, [R0,#0x10]; base|0-105
47800|code|MOVS            R2, #4; size|4-34
47802|code|LDR             R3, =(sub_AD10+1); compar|19-75
47804|code|MOVS            R5, #1|1-37
47806|code|BLX             qsort|253-247-8-237
47810|code|B               loc_BAD2|6-224
47812|code|MOV             R1, R5|41-70
47814|code|MOV             R0, R4|32-70
47816|code|BL              sub_BA0C|255-247-160-255
47820|code|CMP             R0, #0|0-40
47822|code|IT LT|184-191
47824|code|ADDLT           R5, #1|1-53
47826|code|LDR             R3, [R4,#8]|163-104
47828|code|CMP             R5, R3|157-66
47830|code|BLT             loc_BAC4|245-219
47832|code|LDR             R4, [R4,#0x14]|100-105
47834|code|CBZ             R4, locret_BAE8|44-177
47836|code|MOV             R0, R4|32-70
47838|code|BL              sub_B8D0|255-247-247-254
47842|code|LDR             R4, [R4,#0x14]|100-105
47844|code|CMP             R4, #0|0-44
47846|code|BNE             loc_BADC|249-209
47848|code|POP             {R3-R5,PC}|56-189
47850|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|8-72
47852|code|MOVW            R2, #0x7DE; line|64-242-222-114
47856|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|7-73
47858|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|8-75
47860|code|BLX             __assert_fail|253-247-22-237
47864|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47866|code|MOVW            R2, #0x7DE; line|64-242-222-114
47870|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|4-73
47872|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|4-75
47874|code|BLX             __assert_fail|253-247-16-237
47878|data|ALIGN 4|0-191
47880|data|DCD sub_AD10+1|17-173-0-0
47884|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
47888|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
47892|data|DCD aHostlistUniq; "hostlist_uniq"|148-248-0-0
47896|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
47900|code|PUSH.W          {R3-R11,LR}|45-233-248-79
47904|code|MOV             R8, R0|128-70
47906|code|CMP             R0, #0|0-40
47908|code|BEQ.W           loc_BD52|0-240-21-129
47912|code|LDR             R2, [R0]|2-104
47914|code|MOVW            R3, #0xDEAD|77-246-173-99
47918|code|CMP             R2, R3|154-66
47920|code|BNE.W           loc_BD0C|64-240-236-128
47924|code|LDR             R1, [R0,#8]|129-104
47926|code|CMP             R1, #1|1-41
47928|code|BLE.W           locret_BCEE|64-243-217-128
47932|code|LDR             R0, [R0,#0x10]|0-105
47934|code|MOVS            R2, #4|4-34
47936|code|LDR             R3, =(sub_AD10+1)|140-75
47938|code|BLX             qsort|253-247-198-236
47942|code|LDR.W           R4, [R8,#0x14]|216-248-20-64
47946|code|CBZ             R4, loc_BB58|44-177
47948|code|MOV             R0, R4|32-70
47950|code|BL              sub_B8D0|255-247-191-254
47954|code|LDR             R4, [R4,#0x14]|100-105
47956|code|CMP             R4, #0|0-44
47958|code|BNE             loc_BB4C|249-209
47960|code|LDR.W           R2, [R8]|216-248-0-32
47964|code|MOVW            R3, #0xDEAD|77-246-173-99
47968|code|CMP             R2, R3|154-66
47970|code|BNE.W           loc_BD44|64-240-239-128
47974|code|LDR.W           R5, [R8,#8]|216-248-8-80
47978|code|SUBS            R5, #1|1-61
47980|code|CMP             R5, #0|0-45
47982|code|BLE.W           locret_BCEE|64-243-190-128
47986|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
47990|code|SUBS            R6, R5, #1|110-30
47992|code|B               loc_BB88|6-224
47994|code|CMP             R6, #0|0-46
47996|code|MOV             R5, R6|53-70
47998|code|BLE.W           loc_BCB0|64-243-151-128
48002|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
48006|code|SUBS            R6, #1|1-62
48008|code|LDR.W           R7, [R3,R6,LSL#2]|83-248-38-112
48012|code|MOV.W           R10, R5,LSL#2|79-234-133-10
48016|code|MOV.W           R11, R6,LSL#2|79-234-134-11
48020|code|LDR.W           R9, [R3,R5,LSL#2]|83-248-37-144
48024|code|CMP             R7, #0|0-47
48026|code|BEQ.W           loc_BD36|0-240-204-128
48030|code|CMP.W           R9, #0|185-241-0-15
48034|code|BEQ.W           loc_BD28|0-240-193-128
48038|code|LDRB            R3, [R7,#0x10]|59-124
48040|code|LSLS            R2, R3, #0x1F|218-7
48042|code|BMI             loc_BB7A|230-212
48044|code|LDRB.W          R3, [R9,#0x10]|153-248-16-48
48048|code|LSLS            R3, R3, #0x1F|219-7
48050|code|BMI             loc_BB7A|226-212
48052|code|MOV             R0, R7|56-70
48054|code|MOV             R1, R9|73-70
48056|code|BL              sub_ACB8|255-247-126-248
48060|code|CMP             R0, #0|0-40
48062|code|BGT.W           loc_BD64|0-243-209-128
48066|code|MOV             R0, R7|56-70
48068|code|MOV             R1, R9|73-70
48070|code|BL              sub_A924|254-247-173-254
48074|code|CMP             R0, #0|0-40
48076|code|BNE             loc_BB7A|213-209
48078|code|LDR             R2, [R7,#8]|186-104
48080|code|LDR.W           R3, [R9,#4]|217-248-4-48
48084|code|CMP             R2, R3|154-66
48086|code|BLS             loc_BB7A|208-217
48088|code|MOV             R0, R7|56-70
48090|code|MOV             R1, R9|73-70
48092|code|BL              sub_A9EC|254-247-6-255
48096|code|CMP             R0, #0|0-40
48098|code|BEQ             loc_BB7A|202-208
48100|code|MOV             R0, R7|56-70
48102|code|BL              sub_ABF8|255-247-7-248
48106|code|MOV             R4, R0|4-70
48108|code|CMP             R0, #0|0-40
48110|code|BEQ             loc_BB7A|196-208
48112|code|LDR.W           R0, [R8,#0x10]|216-248-16-0
48116|code|LDR             R2, [R7,#8]|186-104
48118|code|LDR.W           R1, [R9,#8]|217-248-8-16
48122|code|LDR.W           R6, [R0,R11]|80-248-11-96
48126|code|LDR.W           R3, [R9,#4]|217-248-4-48
48130|code|CMP             R1, R2|145-66
48132|code|IT CS|40-191
48134|code|MOVCS           R1, R2|17-70
48136|code|LDR.W           R7, [R0,R10]|80-248-10-112
48140|code|STR             R1, [R4,#8]|161-96
48142|code|MOV             R0, R6|48-70
48144|code|LDR             R2, [R6,#8]|178-104
48146|code|STR             R3, [R4,#4]|99-96
48148|code|CMP             R2, R1|138-66
48150|code|IT HI|136-191
48152|code|STRHI           R2, [R7,#8]|186-96
48154|code|STR             R3, [R6,#8]|179-96
48156|code|LDR.W           R9, [R4,#8]|212-248-8-144
48160|code|STR.W           R9, [R7,#4]|199-248-4-144
48164|code|BL              sub_AA34|254-247-6-255
48168|code|CBZ             R0, loc_BC36|40-177
48170|code|MOV             R0, R8|64-70
48172|code|MOV             R1, R5|41-70
48174|code|BL              sub_B970|255-247-159-254
48178|code|LDR.W           R9, [R4,#8]|212-248-8-144
48182|code|LDR             R1, [R4,#4]|97-104
48184|code|CMP             R1, R9|73-69
48186|code|BLS             loc_BC56|12-217
48188|code|B               loc_BC9C|46-224
48190|code|LDR             R2, [R7,#4]|122-104
48192|code|CMP             R2, R3|154-66
48194|code|BHI             loc_BC7E|28-216
48196|code|MOV             R0, R9|72-70
48198|code|BL              sub_A724|254-247-109-253
48202|code|LDR             R1, [R4,#4]|97-104
48204|code|LDR             R3, [R4,#8]|163-104
48206|code|ADDS            R1, #1|1-49
48208|code|STR             R1, [R4,#4]|97-96
48210|code|CMP             R1, R3|153-66
48212|code|BHI             loc_BC9C|34-216
48214|code|LDR             R3, [R4,#0xC]|227-104
48216|code|MOV             R2, R1|10-70
48218|code|LDR             R0, [R4]|32-104
48220|code|BL              sub_AB74|254-247-138-255
48224|code|LDR             R3, [R4,#4]|99-104
48226|code|LDR             R2, [R6,#8]|178-104
48228|code|CMP             R3, R2|147-66
48230|code|MOV             R9, R0|129-70
48232|code|BLS             loc_BC3E|233-217
48234|code|MOV             R2, R5|42-70
48236|code|MOV             R0, R8|64-70
48238|code|MOV             R1, R9|73-70
48240|code|ADDS            R5, #1|1-53
48242|code|BL              sub_B108|255-247-73-250
48246|code|LDR             R3, [R4,#4]|99-104
48248|code|LDR             R2, [R7,#4]|122-104
48250|code|CMP             R2, R3|154-66
48252|code|BLS             loc_BC44|226-217
48254|code|MOV             R2, R5|42-70
48256|code|MOV             R1, R9|73-70
48258|code|MOV             R0, R8|64-70
48260|code|ADDS            R5, #1|1-53
48262|code|BL              sub_B108|255-247-63-250
48266|code|MOV             R0, R9|72-70
48268|code|BL              sub_A724|254-247-74-253
48272|code|LDR             R1, [R4,#4]|97-104
48274|code|LDR             R3, [R4,#8]|163-104
48276|code|ADDS            R1, #1|1-49
48278|code|STR             R1, [R4,#4]|97-96
48280|code|CMP             R1, R3|153-66
48282|code|BLS             loc_BC56|220-217
48284|code|LDR.W           R5, [R8,#8]|216-248-8-80
48288|code|MOV             R0, R4|32-70
48290|code|BL              sub_A724|254-247-63-253
48294|code|SUBS            R6, R5, #1|110-30
48296|code|CMP             R6, #0|0-46
48298|code|MOV             R5, R6|53-70
48300|code|BGT.W           loc_BB82|63-247-105-175
48304|code|LDR.W           R2, [R8]|216-248-0-32
48308|code|MOVW            R3, #0xDEAD|77-246-173-99
48312|code|CMP             R2, R3|154-66
48314|code|BNE             loc_BD1A|46-209
48316|code|LDR.W           R5, [R8,#8]|216-248-8-80
48320|code|SUBS            R5, #1|1-61
48322|code|CMP             R5, #0|0-45
48324|code|BLE             locret_BD60|76-221
48326|code|LSLS            R4, R5, #2|172-0
48328|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
48332|code|ADDS            R2, R3, R4|26-25
48334|code|LDR             R7, [R3,R4]|31-89
48336|code|LDR.W           R6, [R2,#-4]|82-248-4-108
48340|code|MOV             R1, R7|57-70
48342|code|MOV             R0, R6|48-70
48344|code|BL              sub_A924|254-247-36-254
48348|code|CBNZ            R0, loc_BCE8|32-185
48350|code|LDR             R3, [R7,#4]|123-104
48352|code|LDR             R2, [R6,#8]|178-104
48354|code|SUBS            R3, #1|1-59
48356|code|CMP             R2, R3|154-66
48358|code|BEQ             loc_BCF2|4-208
48360|code|SUBS            R4, #4|4-60
48362|code|SUBS            R5, #1|1-61
48364|code|BNE             loc_BCC8|236-209
48366|code|POP.W           {R3-R11,PC}|189-232-248-143
48370|code|MOV             R0, R6|48-70
48372|code|MOV             R1, R7|57-70
48374|code|BL              sub_A9EC|254-247-121-254
48378|code|CMP             R0, #0|0-40
48380|code|BEQ             loc_BCE8|244-208
48382|code|LDR             R3, [R7,#8]|187-104
48384|code|MOV             R0, R8|64-70
48386|code|MOV             R1, R5|41-70
48388|code|STR             R3, [R6,#8]|179-96
48390|code|BL              sub_B970|255-247-51-254
48394|code|B               loc_BCE8|237-231
48396|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|26-72
48398|code|MOV.W           R2, #0x768|79-244-237-98
48402|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|26-73
48404|code|LDR             R3, =aHostlistSort; "hostlist_sort"|26-75
48406|code|BLX             __assert_fail|253-247-6-236
48410|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|23-72
48412|code|MOVW            R2, #0x783|64-242-131-114
48416|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|22-73
48418|code|LDR             R3, =aHostlistCollap; "hostlist_collapse"|24-75
48420|code|BLX             __assert_fail|253-247-254-235
48424|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|23-72
48426|code|MOV.W           R2, #0x374|79-244-93-114
48430|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|19-73
48432|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|22-75
48434|code|BLX             __assert_fail|253-247-248-235
48438|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|22-72
48440|code|MOVW            R2, #0x373|64-242-115-50
48444|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|15-73
48446|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|19-75
48448|code|BLX             __assert_fail|253-247-240-235
48452|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
48454|code|MOVW            R2, #0x79A|64-242-154-114
48458|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|12-73
48460|code|LDR             R3, =aHostlistCoales; "hostlist_coalesce"|17-75
48462|code|BLX             __assert_fail|253-247-234-235
48466|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|17-72
48468|code|MOV.W           R2, #0x768|79-244-237-98
48472|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|8-73
48474|code|LDR             R3, =aHostlistSort; "hostlist_sort"|9-75
48476|code|BLX             __assert_fail|253-247-226-235
48480|code|POP.W           {R3-R11,PC}|189-232-248-143
48484|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|13-72
48486|code|MOVW            R2, #0x379|64-242-121-50
48490|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|4-73
48492|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|7-75
48494|code|BLX             __assert_fail|253-247-218-235
48498|data|ALIGN 4|0-191
48500|data|DCD sub_AD10+1|17-173-0-0
48504|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
48508|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
48512|data|DCD aHostlistSort; "hostlist_sort"|164-248-0-0
48516|data|DCD aHostlistCollap; "hostlist_collapse"|220-248-0-0
48520|data|DCD aH2Void0; "h2 != ((void *)0)"|248-250-0-0
48524|data|DCD aHostrangeInter; "hostrange_intersect"|200-248-0-0
48528|data|DCD aH1Void0; "h1 != ((void *)0)"|100-250-0-0
48532|data|DCD aHostlistCoales; "hostlist_coalesce"|180-248-0-0
48536|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
48540|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|12-251-0-0
48544|code|PUSH.W          {R3-R11,LR}|45-233-248-79
48548|code|MOV             R4, R0|4-70
48550|code|MOV             R9, R1|137-70
48552|code|CMP             R0, #0|0-40
48554|code|BEQ             loc_BE62|90-208
48556|code|LDR             R2, [R0]|2-104
48558|code|MOVW            R3, #0xDEAD|77-246-173-99
48562|code|CMP             R2, R3|154-66
48564|code|BNE             loc_BE54|78-209
48566|code|CMP             R1, #0|0-41
48568|code|BLT             loc_BE46|69-219
48570|code|LDR.W           R11, [R0,#0xC]|208-248-12-176
48574|code|CMP             R1, R11|89-69
48576|code|BGT             loc_BE46|65-220
48578|code|LDR.W           R10, [R0,#8]|208-248-8-160
48582|code|CMP.W           R10, #0|186-241-0-15
48586|code|BLE             loc_BE1A|38-221
48588|code|MOVS            R5, #0|0-37
48590|code|LDR.W           R8, [R0,#0x10]|208-248-16-128
48594|code|MOV             R6, R5|46-70
48596|code|B               loc_BDDE|3-224
48598|code|ADDS            R6, #1|1-54
48600|code|ADDS            R5, R5, R0|45-24
48602|code|CMP             R6, R10|86-69
48604|code|BEQ             loc_BE1A|29-208
48606|code|LDR.W           R7, [R8],#4|88-248-4-123
48610|code|MOV             R0, R7|56-70
48612|code|BL              sub_A9B8|254-247-232-253
48616|code|SUBS            R3, R0, #1|67-30
48618|code|ADDS            R3, R3, R5|91-25
48620|code|CMP             R9, R3|153-69
48622|code|BGT             loc_BDD6|242-220
48624|code|LDRB            R3, [R7,#0x10]|59-124
48626|code|LDR             R1, [R7,#4]|121-104
48628|code|LSLS            R0, R3, #0x1F|216-7
48630|code|BMI             loc_BE2E|26-212
48632|code|ADD             R1, R9|73-68
48634|code|MOV             R0, R7|56-70
48636|code|SUBS            R1, R1, R5|73-27
48638|code|BL              sub_AC30|254-247-23-255
48642|code|MOV             R5, R0|5-70
48644|code|CBZ             R0, loc_BE26|120-177
48646|code|MOV             R1, R0|1-70
48648|code|ADDS            R2, R6, #1|114-28
48650|code|MOV             R0, R4|32-70
48652|code|BL              sub_B108|255-247-124-249
48656|code|MOV             R0, R5|40-70
48658|code|BL              sub_A724|254-247-135-252
48662|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
48666|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
48670|code|MOVS            R0, #1|1-32
48672|code|STR             R3, [R4,#0xC]|227-96
48674|code|POP.W           {R3-R11,PC}|189-232-248-143
48678|code|MOV             R0, R7|56-70
48680|code|BL              sub_AA34|254-247-4-254
48684|code|CBZ             R0, loc_BE36|24-177
48686|code|MOV             R0, R4|32-70
48688|code|MOV             R1, R6|49-70
48690|code|BL              sub_B970|255-247-157-253
48694|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
48698|code|MOVS            R0, #1|1-32
48700|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
48704|code|STR             R3, [R4,#0xC]|227-96
48706|code|POP.W           {R3-R11,PC}|189-232-248-143
48710|code|LDR             R0, =aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|10-72
48712|code|MOVW            R2, #0x714; line|64-242-20-114
48716|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|9-73
48718|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|10-75
48720|code|BLX             __assert_fail|253-247-104-235
48724|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|9-72
48726|code|MOVW            R2, #0x713; line|64-242-19-114
48730|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
48732|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|6-75
48734|code|BLX             __assert_fail|253-247-98-235
48738|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
48740|code|MOVW            R2, #0x713; line|64-242-19-114
48744|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
48746|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|3-75
48748|code|BLX             __assert_fail|253-247-90-235
48752|data|DCD aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|56-252-0-0
48756|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
48760|data|DCD aHostlistDelete_0; "hostlist_delete_nth"|240-248-0-0
48764|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
48768|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
48772|code|PUSH            {R3-R5,LR}|56-181
48774|code|MOV             R5, R0|5-70
48776|code|BL              sub_B520|255-247-74-251
48780|code|CMP             R0, #0|0-40
48782|code|MOV             R4, R0|4-70
48784|code|BLT             loc_BE9A|3-219
48786|code|MOV             R0, R5|40-70
48788|code|MOV             R1, R4|33-70
48790|code|BL              sub_BDA0|255-247-131-255
48794|code|MVNS            R0, R4|224-67
48796|code|LSRS            R0, R0, #0x1F|192-15
48798|code|POP             {R3-R5,PC}|56-189
48800|code|PUSH.W          {R4-R9,LR}|45-233-240-67
48804|code|MOV             R4, R0|4-70
48806|code|SUB             SP, SP, #0xC|131-176
48808|code|CMP             R0, #0|0-40
48810|code|BEQ.W           loc_BFB4|0-240-131-128
48814|code|LDR             R2, [R0]|2-104
48816|code|MOVW            R3, #0xDEAD|77-246-173-99
48820|code|CMP             R2, R3|154-66
48822|code|BNE             loc_BFA6|118-209
48824|code|LDR             R7, [R0,#0xC]|199-104
48826|code|CMP             R7, #0|0-47
48828|code|BLE             loc_BF5C|78-221
48830|code|LDR             R3, [R0,#0x10]|3-105
48832|code|LDR             R5, [R3]|29-104
48834|code|CMP             R5, #0|0-45
48836|code|BEQ             loc_BF98|104-208
48838|code|LDRB            R3, [R5,#0x10]|43-124
48840|code|LSLS            R6, R3, #0x1F|222-7
48842|code|BMI             loc_BEF6|20-212
48844|code|MOV             R0, R5|40-70
48846|code|BL              sub_A9B8|254-247-115-253
48850|code|MOV             R6, R0|6-70
48852|code|CMP             R0, #0|0-40
48854|code|BNE             loc_BF22|36-209
48856|code|SUBS            R7, #1|1-63
48858|code|MOV             R0, R5|40-70
48860|code|STR             R7, [R4,#0xC]|231-96
48862|code|BL              sub_AA34|254-247-169-253
48866|code|MOV             R1, R0|1-70
48868|code|MOV             R0, R4|32-70
48870|code|CBNZ            R1, loc_BF1A|193-185
48872|code|MOV             R2, R1|10-70
48874|code|BL              sub_B920|255-247-25-253
48878|code|MOV             R0, R6|48-70
48880|code|ADD             SP, SP, #0xC|3-176
48882|code|POP.W           {R4-R9,PC}|189-232-240-131
48886|code|LDM.W           R5, {R0,R3}|149-232-9-0
48890|code|ADDS            R3, #1|1-51
48892|code|STR             R3, [R5,#4]|107-96
48894|code|BLX             __strdup|253-247-154-234
48898|code|MOV             R6, R0|6-70
48900|code|CBZ             R0, loc_BF60|96-179
48902|code|LDR             R7, [R4,#0xC]|231-104
48904|code|SUBS            R7, #1|1-63
48906|code|MOV             R0, R5|40-70
48908|code|STR             R7, [R4,#0xC]|231-96
48910|code|BL              sub_AA34|254-247-145-253
48914|code|MOV             R1, R0|1-70
48916|code|MOV             R0, R4|32-70
48918|code|CMP             R1, #0|0-41
48920|code|BEQ             loc_BEE8|230-208
48922|code|MOVS            R1, #0|0-33
48924|code|BL              sub_B970|255-247-40-253
48928|code|B               loc_BEEE|229-231
48930|code|LDR             R7, [R5]|47-104
48932|code|MOV             R0, R7|56-70
48934|code|BLX             strlen|253-247-90-234
48938|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
48942|code|ADD.W           R9, R8, #0x10|8-241-16-9
48946|code|ADD             R9, R0|129-68
48948|code|MOV             R0, R9|72-70
48950|code|BLX             malloc|253-247-32-234
48954|code|MOV             R6, R0|6-70
48956|code|CBZ             R0, loc_BF7C|240-177
48958|code|LDR.W           LR, [R5,#4]|213-248-4-224
48962|code|MOV             R3, R7|59-70
48964|code|MOV             R1, R9|73-70
48966|code|LDR             R2, =aS0Lu; "%s%0*lu"|31-74
48968|code|ADD.W           R12, LR, #1|14-241-1-12
48972|code|STR.W           R12, [R5,#4]|197-248-4-192
48976|code|STMEA.W         SP, {R8,LR}|141-232-0-65
48980|code|BLX             snprintf|253-247-98-234
48984|code|LDR             R7, [R4,#0xC]|231-104
48986|code|B               loc_BED8|189-231
48988|code|MOVS            R6, #0|0-38
48990|code|B               loc_BEEE|198-231
48992|code|BLX             __errno_location|253-247-86-234
48996|code|MOVS            R2, #0xC|12-34
48998|code|MOVW            R1, #0x333|64-242-51-49
49002|code|MOV             R3, R0|3-70
49004|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|22-72
49006|code|STR             R2, [R3]|26-96
49008|code|LDR             R2, =aHostrangeShift; "hostrange shift"|22-74
49010|code|BL              sub_A004|254-247-71-248
49014|code|LDR             R7, [R4,#0xC]|231-104
49016|code|MOV             R6, R0|6-70
49018|code|B               loc_BF08|197-231
49020|code|BLX             __errno_location|253-247-72-234
49024|code|MOVS            R2, #0xC|12-34
49026|code|MOVW            R1, #0x337|64-242-55-49
49030|code|MOV             R3, R0|3-70
49032|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|15-72
49034|code|STR             R2, [R3]|26-96
49036|code|LDR             R2, =aHostrangeShift; "hostrange shift"|15-74
49038|code|BL              sub_A004|254-247-57-248
49042|code|LDR             R7, [R4,#0xC]|231-104
49044|code|MOV             R6, R0|6-70
49046|code|B               loc_BED8|159-231
49048|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|13-72
49050|code|MOVW            R2, #0x32E|64-242-46-50
49054|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
49056|code|LDR             R3, =aHostrangeShift_0; "hostrange_shift"|12-75
49058|code|BLX             __assert_fail|253-247-192-234
49062|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
49064|code|MOVW            R2, #0x66F|64-242-111-98
49068|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
49070|code|LDR             R3, =aHostlistShift; "hostlist_shift"|11-75
49072|code|BLX             __assert_fail|253-247-184-234
49076|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
49078|code|MOVW            R2, #0x66F|64-242-111-98
49082|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
49084|code|LDR             R3, =aHostlistShift; "hostlist_shift"|7-75
49086|code|BLX             __assert_fail|253-247-178-234
49090|data|ALIGN 4|0-191
49092|data|DCD aS0Lu; "%s%0*lu"|180-251-0-0
49096|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
49100|data|DCD aHostrangeShift; "hostrange shift"|84-252-0-0
49104|data|DCD aHrVoid0; "hr != ((void *)0)"|60-250-0-0
49108|data|DCD aHostrangeShift_0; "hostrange_shift"|20-249-0-0
49112|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
49116|data|DCD aHostlistShift; "hostlist_shift"|4-249-0-0
49120|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
49124|code|PUSH            {R4,LR}|16-181
49126|code|CMP             R0, #0|0-40
49128|code|BEQ             locret_C038|38-208
49130|code|LDR             R3, [R0]|3-104
49132|code|MOVW            R2, #0xDEAD|77-246-173-98
49136|code|CMP             R3, R2|147-66
49138|code|BNE             loc_C064|55-209
49140|code|LDR             R1, [R0,#4]|65-104
49142|code|CMP             R1, #0|0-41
49144|code|BEQ             loc_C056|45-208
49146|code|LDR             R2, [R1]|10-104
49148|code|CMP             R2, R3|154-66
49150|code|BNE             loc_C048|35-209
49152|code|LDR             R3, [R1,#0x14]|75-105
49154|code|CBZ             R3, loc_C026|131-177
49156|code|LDR             R4, [R3]|28-104
49158|code|CMP             R4, R2|148-66
49160|code|BNE             loc_C03A|23-209
49162|code|ADDS            R1, #0x14|20-49
49164|code|CMP             R0, R3|152-66
49166|code|BNE             loc_C01C|5-209
49168|code|B               loc_C032|15-224
49170|code|LDR             R2, [R3]|26-104
49172|code|CMP             R2, R4|162-66
49174|code|BNE             loc_C03A|16-209
49176|code|CMP             R0, R3|152-66
49178|code|BEQ             loc_C032|10-208
49180|code|ADD.W           R1, R3, #0x14|3-241-20-1
49184|code|LDR             R3, [R3,#0x14]|91-105
49186|code|CMP             R3, #0|0-43
49188|code|BNE             loc_C012|245-209
49190|code|MOVS            R3, #1|1-35
49192|code|STR             R3, [R0]|3-96
49194|code|POP.W           {R4,LR}|189-232-16-64
49198|code|B.W             j_free|253-247-23-185
49202|code|LDR             R3, [R0,#0x14]|67-105
49204|code|STR             R3, [R1]|11-96
49206|code|B               loc_C026|246-231
49208|code|POP             {R4,PC}|16-189
49210|code|LDR             R0, =aPiMagic57005; "(*pi)->magic == 57005"|14-72
49212|code|MOVW            R2, #0x89C; line|64-246-156-2
49216|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|13-73
49218|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_destroy"|14-75
49220|code|BLX             __assert_fail|253-247-110-234
49224|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|13-72
49226|code|MOVW            R2, #0x89A; line|64-246-154-2
49230|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
49232|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_destroy"|10-75
49234|code|BLX             __assert_fail|253-247-104-234
49238|code|LDR             R0, =unk_FC64; assertion|11-72
49240|code|MOVW            R2, #0x89A; line|64-246-154-2
49244|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
49246|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_destroy"|7-75
49248|code|BLX             __assert_fail|253-247-96-234
49252|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|8-72
49254|code|MOVW            R2, #0x899; line|64-246-153-2
49258|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
49260|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_destroy"|3-75
49262|code|BLX             __assert_fail|253-247-90-234
49266|data|ALIGN 4|0-191
49268|data|DCD aPiMagic57005; "(*pi)->magic == 57005"|148-252-0-0
49272|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
49276|data|DCD aHostlistIterat_1; "hostlist_iterator_destroy"|36-249-0-0
49280|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|124-252-0-0
49284|data|DCD unk_FC64|100-252-0-0
49288|data|DCD aIMagic57005; "i->magic == 57005"|236-251-0-0
49292|code|PUSH            {R3-R5,LR}|56-181
49294|code|MOV             R5, R0|5-70
49296|code|CMP             R0, #0|0-40
49298|code|BEQ             locret_C0D8|33-208
49300|code|LDR             R2, [R0]|2-104
49302|code|MOVW            R3, #0xDEAD|77-246-173-99
49306|code|CMP             R2, R3|154-66
49308|code|BEQ             loc_C0A4|2-208
49310|code|B               loc_C0DA|28-224
49312|code|BL              sub_BFE4|255-247-160-255
49316|code|LDR             R0, [R5,#0x14]|104-105
49318|code|CMP             R0, #0|0-40
49320|code|BNE             loc_C0A0|250-209
49322|code|LDR             R3, [R5,#8]|171-104
49324|code|CMP             R3, #0|0-43
49326|code|BLE             loc_C0C4|9-221
49328|code|MOVS            R4, #0|0-36
49330|code|LDR             R3, [R5,#0x10]|43-105
49332|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
49336|code|ADDS            R4, #1|1-52
49338|code|BL              sub_A724|254-247-51-251
49342|code|LDR             R3, [R5,#8]|171-104
49344|code|CMP             R3, R4|163-66
49346|code|BGT             loc_C0B2|246-220
49348|code|LDR             R0, [R5,#0x10]; ptr|40-105
49350|code|BLX             free|253-247-206-232
49354|code|MOVS            R3, #1|1-35
49356|code|MOV             R0, R5|40-70
49358|code|STR             R3, [R5]|43-96
49360|code|POP.W           {R3-R5,LR}|189-232-56-64
49364|code|B.W             j_free|253-247-196-184
49368|code|POP             {R3-R5,PC}|56-189
49370|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
49372|code|MOVW            R2, #0x5F9; line|64-242-249-82
49376|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
49378|code|LDR             R3, =aHostlistDestro; "hostlist_destroy"|3-75
49380|code|BLX             __assert_fail|253-247-30-234
49384|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
49388|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
49392|data|DCD aHostlistDestro; "hostlist_destroy"|64-249-0-0
49396|code|PUSH.W          {R4-R9,LR}|45-233-240-67
49400|code|SUB.W           SP, SP, #0x400|173-245-128-109
49404|code|LDR             R7, =__stack_chk_guard|63-79
49406|code|SUB             SP, SP, #0xC|131-176
49408|code|MOV             R5, R0|5-70
49410|code|LDR             R3, [R7]|59-104
49412|code|STR.W           R3, [SP,#0x404]|205-248-4-52
49416|code|BL              sub_AA94|254-247-196-252
49420|code|MOV             R6, R0|6-70
49422|code|CMP             R0, #0|0-40
49424|code|BEQ             loc_C1BE|85-208
49426|code|CMP             R5, #0|0-45
49428|code|BEQ             loc_C1EC|106-208
49430|code|LDR             R2, [R5]|42-104
49432|code|MOVW            R3, #0xDEAD|77-246-173-99
49436|code|CMP             R2, R3|154-66
49438|code|BNE             loc_C1DE|94-209
49440|code|LDR             R4, [R5,#8]|172-104
49442|code|CMP             R4, #0|0-44
49444|code|BEQ             loc_C1D2|85-208
49446|code|LDR             R3, [R5,#0x10]|43-105
49448|code|MOVS            R4, #0|0-36
49450|code|LDR.W           R8, [R3]|211-248-0-128
49454|code|MOV             R1, R8|65-70
49456|code|MOV             R0, R6|48-70
49458|code|BL              sub_B034|254-247-127-255
49462|code|LDR             R3, [R5,#0x10]|43-105
49464|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
49468|code|ADDS            R4, #1|1-52
49470|code|BL              sub_A724|254-247-241-250
49474|code|LDR             R3, [R5,#8]|171-104
49476|code|CMP             R4, R3|156-66
49478|code|BGE             loc_C15C|9-218
49480|code|LDR             R2, [R5,#0x10]|42-105
49482|code|LDR             R3, [R6,#0x10]|51-105
49484|code|LDR.W           R8, [R2,R4,LSL#2]|82-248-36-128
49488|code|LDR             R0, [R3]|24-104
49490|code|MOV             R1, R8|65-70
49492|code|BL              sub_ADD0|254-247-60-254
49496|code|CMP             R0, #0|0-40
49498|code|BNE             loc_C12E|232-209
49500|code|LDR             R2, [R6,#8]|178-104
49502|code|MOV             R0, R5|40-70
49504|code|MOV             R1, R4|33-70
49506|code|BL              sub_B920|255-247-221-251
49510|code|LDR             R2, [R5,#8]|170-104
49512|code|LDR             R0, [R6,#8]|176-104
49514|code|CMP             R2, R4|162-66
49516|code|BLE             loc_C19A|21-221
49518|code|SUBS            R3, R4, R0|35-26
49520|code|MOV.W           R8, R0,LSL#2|79-234-128-8
49524|code|MOV.W           R9, #0|79-240-0-9
49528|code|LSLS            R3, R3, #2|155-0
49530|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
49534|code|ADD.W           R1, R3, R8|3-235-8-1
49538|code|ADDS            R4, #1|1-52
49540|code|LDR.W           R12, [LR,R1]|94-248-1-192
49544|code|STR.W           R12, [LR,R3]|78-248-3-192
49548|code|ADDS            R3, #4|4-51
49550|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
49554|code|CMP             R4, R2|148-66
49556|code|STR.W           R9, [LR,R1]|78-248-1-144
49560|code|BNE             loc_C17A|239-209
49562|code|LDR             R4, [R5,#0xC]|236-104
49564|code|SUBS            R0, R2, R0|16-26
49566|code|LDR             R3, [R6,#0xC]|243-104
49568|code|MOV.W           R1, #0x400|79-244-128-97
49572|code|ADD             R2, SP, #4|1-170
49574|code|STR             R0, [R5,#8]|168-96
49576|code|SUBS            R3, R4, R3|227-26
49578|code|MOV             R0, R6|48-70
49580|code|STR             R3, [R5,#0xC]|235-96
49582|code|BL              sub_B76C|255-247-221-250
49586|code|MOV             R0, R6|48-70
49588|code|BL              sub_C08C|255-247-106-255
49592|code|ADD             R0, SP, #4|1-168
49594|code|BLX             __strdup|253-247-60-233
49598|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
49602|code|LDR             R3, [R7]|59-104
49604|code|CMP             R2, R3|154-66
49606|code|BNE             loc_C1DA|8-209
49608|code|ADD             SP, SP, #0xC|3-176
49610|code|ADD.W           SP, SP, #0x400|13-245-128-109
49614|code|POP.W           {R4-R9,PC}|189-232-240-131
49618|code|BL              sub_C08C|255-247-91-255
49622|code|MOV             R0, R4|32-70
49624|code|B               loc_C1BE|241-231
49626|code|BLX             __stack_chk_fail|253-247-122-232
49630|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
49632|code|MOVW            R2, #0x6AD|64-242-173-98
49636|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|7-73
49638|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|8-75
49640|code|BLX             __assert_fail|253-247-156-233
49644|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
49646|code|MOVW            R2, #0x6AD|64-242-173-98
49650|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|4-73
49652|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|4-75
49654|code|BLX             __assert_fail|253-247-150-233
49658|data|ALIGN 4|0-191
49660|data|DCD __stack_chk_guard|136-135-1-0
49664|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
49668|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
49672|data|DCD aHostlistShiftR; "hostlist_shift_range"|84-249-0-0
49676|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
49680|code|PUSH.W          {R4-R11,LR}|45-233-240-79
49684|code|SUB.W           SP, SP, #0x400|173-245-128-109
49688|code|LDR             R7, =__stack_chk_guard|60-79
49690|code|SUB             SP, SP, #0xC|131-176
49692|code|MOV             R4, R0|4-70
49694|code|LDR             R3, [R7]|59-104
49696|code|STR.W           R3, [SP,#0x404]|205-248-4-52
49700|code|CMP             R0, #0|0-40
49702|code|BEQ             loc_C2FE|106-208
49704|code|LDR             R2, [R0]|2-104
49706|code|MOVW            R3, #0xDEAD|77-246-173-99
49710|code|CMP             R2, R3|154-66
49712|code|BNE             loc_C2F0|94-209
49714|code|LDR             R3, [R0,#8]|131-104
49716|code|MOVS            R0, #0|0-32
49718|code|CMP             R3, #0|0-43
49720|code|BLE             loc_C2D8|78-221
49722|code|BL              sub_AA94|254-247-43-252
49726|code|MOV             R6, R0|6-70
49728|code|CMP             R6, #0|0-46
49730|code|BEQ             loc_C2D8|73-208
49732|code|LDR             R5, [R4,#8]|165-104
49734|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
49738|code|SUBS            R3, R5, #1|107-30
49740|code|SUBS.W          R9, R5, #2|181-241-2-9
49744|code|ADD.W           R8, R10, R3,LSL#2|10-235-131-8
49748|code|LDR.W           R11, [R10,R3,LSL#2]|90-248-35-176
49752|code|BPL             loc_C262|3-213
49754|code|B               loc_C270|9-224
49756|code|ADDS.W          R9, R9, #0xFFFFFFFF|25-241-255-57
49760|code|BCC             loc_C270|6-211
49762|code|LDR.W           R1, [R8,#-4]!|88-248-4-29
49766|code|MOV             R0, R11|88-70
49768|code|BL              sub_ADD0|254-247-178-253
49772|code|CMP             R0, #0|0-40
49774|code|BNE             loc_C25C|245-209
49776|code|ADD.W           R9, R9, #1|9-241-1-9
49780|code|CMP             R5, R9|77-69
49782|code|BLE             loc_C2AE|26-221
49784|code|MOV.W           R8, R9,LSL#2|79-234-137-8
49788|code|MOV.W           R11, #0|79-240-0-11
49792|code|B               loc_C286|1-224
49794|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
49798|code|LDR.W           R1, [R10,R8]|90-248-8-16
49802|code|MOV             R0, R6|48-70
49804|code|BL              sub_B034|254-247-210-254
49808|code|LDR             R3, [R4,#0x10]|35-105
49810|code|ADD.W           R9, R9, #1|9-241-1-9
49814|code|LDR.W           R0, [R3,R8]|83-248-8-0
49818|code|BL              sub_A724|254-247-67-250
49822|code|LDR             R5, [R4,#8]|165-104
49824|code|LDR             R3, [R4,#0x10]|35-105
49826|code|CMP             R5, R9|77-69
49828|code|STR.W           R11, [R3,R8]|67-248-8-176
49832|code|ADD.W           R8, R8, #4|8-241-4-8
49836|code|BGT             loc_C282|233-220
49838|code|LDR             R0, [R4,#0xC]|224-104
49840|code|MOV.W           R1, #0x400|79-244-128-97
49844|code|LDR.W           LR, [R6,#8]|214-248-8-224
49848|code|MOV             R2, SP|106-70
49850|code|LDR             R3, [R6,#0xC]|243-104
49852|code|RSB.W           R5, LR, R5|206-235-5-5
49856|code|STR             R5, [R4,#8]|165-96
49858|code|SUBS            R3, R0, R3|195-26
49860|code|MOV             R0, R6|48-70
49862|code|STR             R3, [R4,#0xC]|227-96
49864|code|BL              sub_B76C|255-247-80-250
49868|code|MOV             R0, R6|48-70
49870|code|BL              sub_C08C|255-247-221-254
49874|code|MOV             R0, SP|104-70
49876|code|BLX             __strdup|253-247-174-232
49880|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
49884|code|LDR             R3, [R7]|59-104
49886|code|CMP             R2, R3|154-66
49888|code|BNE             loc_C2EC|4-209
49890|code|ADD             SP, SP, #0xC|3-176
49892|code|ADD.W           SP, SP, #0x400|13-245-128-109
49896|code|POP.W           {R4-R11,PC}|189-232-240-143
49900|code|BLX             __stack_chk_fail|252-247-240-239
49904|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
49906|code|MOVW            R2, #0x68B|64-242-139-98
49910|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|7-73
49912|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|7-75
49914|code|BLX             __assert_fail|253-247-20-233
49918|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
49920|code|MOVW            R2, #0x68B|64-242-139-98
49924|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
49926|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|4-75
49928|code|BLX             __assert_fail|253-247-12-233
49932|data|DCD __stack_chk_guard|136-135-1-0
49936|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|116-251-0-0
49940|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
49944|data|DCD aHostlistPopRan; "hostlist_pop_range"|108-249-0-0
49948|data|DCD aHlVoid0; "hl != ((void *)0)"|76-251-0-0
49952|code|PUSH.W          {R4-R11,LR}|45-233-240-79
49956|code|MOVW            R1, #0x8788|72-242-136-113
49960|code|SUB.W           SP, SP, #0x1F400|173-245-250-61
49964|code|MOVT.W          R1, #1|192-242-1-1
49968|code|SUB             SP, SP, #0x34|141-176
49970|code|MOV             R4, R0|4-70
49972|code|LDR             R3, [R1]|11-104
49974|code|ADD.W           R2, SP, #0x1F458+var_58|13-245-250-50
49978|code|ADDS            R2, #0x2C ; ','|44-50
49980|code|STR             R3, [R2]|19-96
49982|code|BL              sub_AA94|254-247-169-251
49986|code|MOV             R8, R0|128-70
49988|code|CBZ             R4, loc_C374|180-177
49990|code|MOV             R0, R4|32-70
49992|code|BLX             __strdup|253-247-116-232
49996|code|STR             R0, [SP,#0x1F458+ptr]|9-144
49998|code|CMP             R0, #0|0-40
50000|code|BEQ.W           loc_C690|0-240-158-129
50004|code|ADD             R3, SP, #0x1F458+var_1F430|10-171
50006|code|MOV             R5, R0|5-70
50008|code|STR             R3, [SP,#0x1F458+var_1F440]|6-147
50010|code|B               loc_C368|5-224
50012|code|LDR             R0, =asc_FCEC; "\t, "|148-72
50014|code|MOV             R1, R4; c|33-70
50016|code|BLX             strchr|253-247-66-232
50020|code|CBZ             R0, loc_C398|192-177
50022|code|ADDS            R5, #1|1-53
50024|code|LDRB            R4, [R5]|44-120
50026|code|CMP             R4, #0|0-44
50028|code|BNE             loc_C35C|246-209
50030|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
50032|code|BLX             free|252-247-120-239
50036|code|ADD.W           R3, SP, #0x1F458+var_58|13-245-250-51
50040|code|MOVW            R1, #0x8788|72-242-136-113
50044|code|ADDS            R3, #0x2C ; ','|44-51
50046|code|MOVT.W          R1, #1|192-242-1-1
50050|code|MOV             R0, R8|64-70
50052|code|LDR             R2, [R3]|26-104
50054|code|LDR             R3, [R1]|11-104
50056|code|CMP             R2, R3|154-66
50058|code|BNE.W           loc_C69C|64-240-135-129
50062|code|ADD             SP, SP, #0x34 ; '4'|13-176
50064|code|ADD.W           SP, SP, #0x1F400|13-245-250-61
50068|code|POP.W           {R4-R11,PC}|189-232-240-143
50072|code|MOV             R7, R5|47-70
50074|code|CBZ             R4, loc_C3AA|52-177
50076|code|LDR             R0, =asc_FCEC; "\t, "|132-72
50078|code|MOV             R1, R4; c|33-70
50080|code|BLX             strchr|253-247-34-232
50084|code|CMP             R0, #0|0-40
50086|code|BEQ.W           loc_C55C|0-240-217-128
50090|code|SUBS            R6, R7, R5|126-27
50092|code|MOV             R0, R5; s|40-70
50094|code|MOVS            R1, #0x5B ; '['; c|91-33
50096|code|MOV             R2, R6; n|50-70
50098|code|BLX             memchr|253-247-100-232
50102|code|CBZ             R0, loc_C3C8|56-177
50104|code|MOV             R0, R5; s|40-70
50106|code|MOVS            R1, #0x5D ; ']'; c|93-33
50108|code|MOV             R2, R6; n|50-70
50110|code|BLX             memchr|253-247-94-232
50114|code|CMP             R0, #0|0-40
50116|code|BEQ.W           loc_C4F6|0-240-151-128
50120|code|CBZ             R4, loc_C3EE|140-177
50122|code|MOV             R6, R7|62-70
50124|code|MOV.W           R10, #0|79-240-0-10
50128|code|MOV             R9, R7|185-70
50130|code|MOV             R1, R4|33-70
50132|code|B               loc_C3E2|5-224
50134|code|STRB.W          R10, [R6],#1|6-248-1-171
50138|code|MOV             R7, R6|55-70
50140|code|LDRB.W          R1, [R9,#1]!; c|25-248-1-31
50144|code|CBZ             R1, loc_C3EE|41-177
50146|code|LDR             R0, =asc_FCEC; "\t, "|115-72
50148|code|MOV             R7, R6|55-70
50150|code|BLX             strchr|253-247-0-232
50154|code|CMP             R0, #0|0-40
50156|code|BNE             loc_C3D6|243-209
50158|code|ADD.W           R0, SP, #0x1F458+var_458|13-245-248-48
50162|code|MOV             R1, R5; src|41-70
50164|code|MOV.W           R2, #0x400; n|79-244-128-98
50168|code|ADDS            R0, #0x2C ; ','; dest|44-48
50170|code|BLX             strncpy|253-247-46-232
50174|code|MOV             R0, R5; s|40-70
50176|code|MOVS            R1, #0x5B ; '['; c|91-33
50178|code|BLX             strchr|252-247-242-239
50182|code|CMP             R0, #0|0-40
50184|code|BEQ.W           loc_C596|0-240-197-128
50188|code|MOV             R6, R0|6-70
50190|code|MOVS            R4, #0|0-36
50192|code|MOVS            R1, #0x5D ; ']'; c|93-33
50194|code|STRB.W          R4, [R6],#1|6-248-1-75
50198|code|MOV             R0, R6; s|48-70
50200|code|BLX             strchr|252-247-230-239
50204|code|STR             R0, [SP,#0x1F458+var_1F444]|5-144
50206|code|CMP             R0, #0|0-40
50208|code|BEQ.W           loc_C596|0-240-185-128
50212|code|STRB            R4, [R0]|4-112
50214|code|CMP             R6, #0|0-46
50216|code|BEQ.W           loc_C5C0|0-240-202-128
50220|code|STR             R4, [SP,#0x1F458+var_1F448]|4-148
50222|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
50224|code|STR             R5, [SP,#0x1F458+var_1F438]|8-149
50226|code|MOV             R0, R6; s|48-70
50228|code|MOVS            R1, #0x2C ; ','; c|44-33
50230|code|BLX             strchr|252-247-216-239
50234|code|MOV             R5, R0|5-70
50236|code|CBZ             R0, loc_C444|16-177
50238|code|MOVS            R2, #0|0-34
50240|code|STRB.W          R2, [R5],#1|5-248-1-43
50244|code|MOV             R0, R6|48-70
50246|code|BLX             __strdup|252-247-246-239
50250|code|MOV             R7, R0|7-70
50252|code|CMP             R0, #0|0-40
50254|code|BEQ.W           loc_C562|0-240-136-128
50258|code|MOV             R0, R6; s|48-70
50260|code|MOVS            R1, #0x2D ; '-'; c|45-33
50262|code|BLX             strchr|252-247-200-239
50266|code|MOV             R4, R0|4-70
50268|code|CBZ             R0, loc_C46A|40-177
50270|code|LDRB            R3, [R0,#1]|67-120
50272|code|MOVS            R1, #0|0-33
50274|code|STRB            R1, [R0]|1-112
50276|code|CMP             R3, #0x2D ; '-'|45-43
50278|code|BEQ             loc_C53A|104-208
50280|code|ADDS            R4, R0, #1|68-28
50282|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
50284|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
50288|code|ADDS            R1, #0x28 ; '('; endptr|40-49
50290|code|MOVS            R2, #0xA; base|10-34
50292|code|MOV             R0, R6; nptr|48-70
50294|code|ADD.W           R9, SP, #0x1F458+var_1458|13-245-240-57
50298|code|ADD.W           R11, R3, R3,LSL#1|3-235-67-11
50302|code|BLX             strtoul|252-247-168-239
50306|code|ADD.W           R9, R9, #0x30 ; '0'|9-241-48-9
50310|code|LDR             R1, [SP,#0x1F458+var_1F440]|6-153
50312|code|LDR.W           R3, [R9,#-8]|89-248-8-60
50316|code|ADD.W           R9, R1, R11,LSL#2|1-235-139-9
50320|code|CMP             R6, R3|158-66
50322|code|MOV             R10, R0|130-70
50324|code|STR.W           R0, [R1,R11,LSL#2]|65-248-43-0
50328|code|BEQ             loc_C53A|79-208
50330|code|CBZ             R4, loc_C4A2|20-177
50332|code|LDRB            R2, [R4]|34-120
50334|code|CMP             R2, #0|0-42
50336|code|BNE             loc_C51C|60-209
50338|code|CMP             R3, R4|163-66
50340|code|MOV             R0, R10|80-70
50342|code|STR.W           R0, [R9,#4]|201-248-4-0
50346|code|BEQ             loc_C53A|70-208
50348|code|LDRB            R3, [R3]|27-120
50350|code|CMP             R3, #0|0-43
50352|code|BNE             loc_C53A|67-209
50354|code|CMP             R10, R0|130-69
50356|code|BHI             loc_C53A|65-216
50358|code|RSB.W           R10, R10, #1|202-241-1-10
50362|code|ADD             R0, R10|80-68
50364|code|CMP.W           R0, #0x4000|176-245-128-79
50368|code|BLS             loc_C56E|85-217
50370|code|MOVW            R1, #0x551|64-242-81-81
50374|code|LDR             R2, =aTooManyHostsIn; "Too many hosts in range `%s'"|59-74
50376|code|MOV             R3, R7|59-70
50378|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|59-72
50380|code|BL              sub_A954|254-247-66-250
50384|code|MOV             R0, R7; ptr|56-70
50386|code|BLX             free|252-247-200-238
50390|code|MOV             R11, R7|187-70
50392|code|BLX             __errno_location|252-247-154-239
50396|code|MOVS            R5, #0x22 ; '"'|34-37
50398|code|MOV             R4, R0|4-70
50400|code|STR             R5, [R0]|5-96
50402|code|MOV             R0, R8|64-70
50404|code|MOV.W           R8, #0|79-240-0-8
50408|code|BL              sub_C08C|255-247-208-253
50412|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
50414|code|BLX             free|252-247-186-238
50418|code|STR             R5, [R4]|37-96
50420|code|B               loc_C374|62-231
50422|code|MOV             R0, R7; s|56-70
50424|code|MOVS            R1, #0x5D ; ']'; c|93-33
50426|code|BLX             strchr|252-247-118-239
50430|code|MOV             R6, R0|6-70
50432|code|CMP             R0, #0|0-40
50434|code|BEQ.W           loc_C3C8|63-244-97-175
50438|code|SUBS            R2, R0, R7; n|194-27
50440|code|MOVS            R1, #0x5B ; '['; c|91-33
50442|code|MOV             R0, R7; s|56-70
50444|code|BLX             memchr|252-247-182-239
50448|code|CMP             R0, #0|0-40
50450|code|BNE.W           loc_C3C8|127-244-89-175
50454|code|ADDS            R7, R6, #1|119-28
50456|code|LDRB            R4, [R7]|60-120
50458|code|B               loc_C39A|62-231
50460|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
50464|code|MOVS            R2, #0xA; base|10-34
50466|code|ADDS            R1, #0x28 ; '('; endptr|40-49
50468|code|MOV             R0, R4; nptr|32-70
50470|code|BLX             strtoul|252-247-84-239
50474|code|ADD.W           R2, SP, #0x1F458+var_1458|13-245-240-50
50478|code|ADDS            R2, #0x28 ; '('|40-50
50480|code|LDR             R3, [R2]|19-104
50482|code|CMP             R3, R4|163-66
50484|code|STR.W           R0, [R9,#4]|201-248-4-0
50488|code|BNE             loc_C4AC|184-209
50490|code|MOVW            R1, #0x55B|64-242-91-81
50494|code|LDR             R2, =aInvalidRangeS; "Invalid range: `%s'"|31-74
50496|code|MOV             R3, R7|59-70
50498|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|29-72
50500|code|BL              sub_A954|254-247-6-250
50504|code|MOV             R0, R7; ptr|56-70
50506|code|BLX             free|252-247-140-238
50510|code|MOVS            R5, #0x16|22-37
50512|code|BLX             __errno_location|252-247-94-239
50516|code|MOV             R11, R7|187-70
50518|code|MOV             R4, R0|4-70
50520|code|STR             R5, [R0]|5-96
50522|code|B               loc_C4E2|194-231
50524|code|ADDS            R7, #1|1-55
50526|code|LDRB            R4, [R7]|60-120
50528|code|B               loc_C39A|27-231
50530|code|BLX             __errno_location|252-247-86-239
50534|code|MOVS            R5, #0xC|12-37
50536|code|MOV             R4, R0|4-70
50538|code|STR             R5, [R0]|5-96
50540|code|B               loc_C4E2|185-231
50542|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
50544|code|MOV             R0, R7; ptr|56-70
50546|code|ADDS            R3, #1|1-51
50548|code|STR             R3, [SP,#0x1F458+var_1F448]|4-147
50550|code|BLX             free|252-247-118-238
50554|code|MOV             R0, R6; s|48-70
50556|code|BLX             strlen|252-247-46-239
50560|code|STR.W           R0, [R9,#8]|201-248-8-0
50564|code|CMP             R5, #0|0-45
50566|code|BEQ.W           loc_C68A|0-240-128-128
50570|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
50572|code|CMP.W           R1, #0x2800|177-245-32-95
50576|code|BEQ             loc_C5A6|9-208
50578|code|MOV             R6, R5|46-70
50580|code|B               loc_C432|77-231
50582|code|ADD.W           R1, SP, #0x1F458+var_458|13-245-248-49
50586|code|MOV             R0, R8|64-70
50588|code|ADDS            R1, #0x2C ; ','|44-49
50590|code|MOV             R5, R7|61-70
50592|code|BL              sub_B250|254-247-86-254
50596|code|B               loc_C368|224-230
50598|code|BLX             __errno_location|252-247-52-239
50602|code|MOV             R4, R0|4-70
50604|code|LDR             R5, [R0]|5-104
50606|code|B               loc_C4E2|152-231
50608|data|DCD asc_FCEC; "\t, "|236-252-0-0
50612|data|DCD aTooManyHostsIn; "Too many hosts in range `%s'"|172-252-0-0
50616|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
50620|data|DCD aInvalidRangeS; "Invalid range: `%s'"|204-252-0-0
50624|code|STR             R6, [SP,#0x1F458+var_1F448]|4-150
50626|code|LDR             R3, [SP,#0x1F458+var_1F444]|5-155
50628|code|ADD.W           R10, R3, #1|3-241-1-10
50632|code|LDRB            R6, [R3,#1]|94-120
50634|code|CBNZ            R6, loc_C608|238-185
50636|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
50638|code|CMP             R1, #0|0-41
50640|code|BEQ             loc_C686|89-208
50642|code|ADD             R4, SP, #0x1F458+var_1F424|13-172
50644|code|MOV             R9, R7|185-70
50646|code|MOV             R7, R1|15-70
50648|code|LDR.W           R2, [R4,#-8]|84-248-8-44
50652|code|MOV             R0, R5|40-70
50654|code|LDR.W           R3, [R4,#-4]|84-248-4-60
50658|code|ADDS            R6, #1|1-54
50660|code|LDR.W           R1, [R4,#-0xC]|84-248-12-28
50664|code|ADDS            R4, #0xC|12-52
50666|code|BL              sub_AB74|254-247-195-250
50670|code|MOV             R10, R0|130-70
50672|code|MOV             R0, R8|64-70
50674|code|MOV             R1, R10|81-70
50676|code|BL              sub_B034|254-247-30-253
50680|code|MOV             R0, R10|80-70
50682|code|BL              sub_A724|254-247-147-248
50686|code|CMP             R6, R7|190-66
50688|code|BNE             loc_C5D8|234-209
50690|code|MOV             R7, R9|79-70
50692|code|MOV             R5, R9|77-70
50694|code|B               loc_C368|175-230
50696|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
50698|code|CMP             R3, #0|0-43
50700|code|BEQ             loc_C686|59-208
50702|code|ADD.W           R9, SP, #0x1F458+var_1F424|13-241-52-9
50706|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
50708|code|MOV             R7, R5|47-70
50710|code|MOVS            R2, #0|0-34
50712|code|STR             R2, [SP,#0x1F458+var_1F444]|5-146
50714|code|LDR.W           R4, [R9,#-0xC]|89-248-12-76
50718|code|LDR.W           R5, [R9,#-8]|89-248-8-92
50722|code|CMP             R5, R4|165-66
50724|code|BCC             loc_C670|36-211
50726|code|LDR.W           R6, [R9,#-4]|89-248-4-108
50730|code|MOV             R3, R6|51-70
50732|code|MOV             R6, R10|86-70
50734|code|MOV             R10, R9|202-70
50736|code|MOV             R9, R3|153-70
50738|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
50742|code|LDR             R2, =aS0LuS; "%s%0*lu%s"|26-74
50744|code|MOV             R3, R7|59-70
50746|code|MOV.W           R1, #0x1000; maxlen|79-244-128-81
50750|code|ADDS            R0, #0x2C ; ','; s|44-48
50752|code|STR             R4, [SP,#0x1F458+var_1F454]|1-148
50754|code|STR.W           R9, [SP,#0x1F458+var_1F458]|205-248-0-144
50758|code|ADDS            R4, #1|1-52
50760|code|STR             R6, [SP,#0x1F458+var_1F450]|2-150
50762|code|BLX             snprintf|252-247-232-238
50766|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
50770|code|ADDS            R0, #0x2C ; ','|44-48
50772|code|BL              sub_AAF8|254-247-80-250
50776|code|MOV             R11, R0|131-70
50778|code|MOV             R0, R8|64-70
50780|code|MOV             R1, R11|89-70
50782|code|BL              sub_B034|254-247-233-252
50786|code|MOV             R0, R11|88-70
50788|code|BL              sub_A724|254-247-94-248
50792|code|CMP             R5, R4|165-66
50794|code|BCS             loc_C632|226-210
50796|code|MOV             R9, R10|209-70
50798|code|MOV             R10, R6|178-70
50800|code|LDR             R1, [SP,#0x1F458+var_1F444]|5-153
50802|code|ADD.W           R9, R9, #0xC|9-241-12-9
50806|code|LDR             R2, [SP,#0x1F458+var_1F448]|4-154
50808|code|ADDS            R1, #1|1-49
50810|code|STR             R1, [SP,#0x1F458+var_1F444]|5-145
50812|code|CMP             R1, R2|145-66
50814|code|BNE             loc_C61A|204-209
50816|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
50818|code|MOV             R5, R7|61-70
50820|code|B               loc_C368|112-230
50822|code|MOV             R5, R7|61-70
50824|code|B               loc_C368|110-230
50826|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
50828|code|LDR             R5, [SP,#0x1F458+var_1F438]|8-157
50830|code|B               loc_C5C2|152-231
50832|code|MOV             R0, R8|64-70
50834|code|LDR.W           R8, [SP,#0x1F458+ptr]|221-248-36-128
50838|code|BL              sub_C08C|255-247-249-252
50842|code|B               loc_C374|107-230
50844|code|BLX             __stack_chk_fail|252-247-24-238
50848|data|DCD aS0LuS; "%s%0*lu%s"|224-252-0-0
50852|code|B.W             sub_C320|255-247-60-190
50856|code|PUSH            {R3-R7,LR}|248-181
50858|code|MOV             R7, R0|7-70
50860|code|MOV             R0, R1|8-70
50862|code|MOVS            R5, #0|0-37
50864|code|BL              sub_C6A4|255-247-248-255
50868|code|MOV             R6, R0|6-70
50870|code|CBNZ            R0, loc_C6C6|48-185
50872|code|B               loc_C6E0|18-224
50874|code|BL              sub_BE84|255-247-227-251
50878|code|ADDS            R5, R5, R0|45-24
50880|code|MOV             R0, R4|32-70
50882|code|BLX             free|252-247-208-237
50886|code|MOV             R0, R6|48-70
50888|code|BL              sub_B2F4|254-247-20-254
50892|code|MOV             R4, R0|4-70
50894|code|MOV             R1, R0|1-70
50896|code|MOV             R0, R7|56-70
50898|code|CMP             R4, #0|0-44
50900|code|BNE             loc_C6BA|241-209
50902|code|MOV             R0, R6|48-70
50904|code|BL              sub_C08C|255-247-216-252
50908|code|MOV             R0, R5|40-70
50910|code|POP             {R3-R7,PC}|248-189
50912|code|BLX             __errno_location|252-247-150-238
50916|code|MOV             R5, R6|53-70
50918|code|MOVS            R3, #0x16|22-35
50920|code|STR             R3, [R0]|3-96
50922|code|MOV             R0, R5|40-70
50924|code|POP             {R3-R7,PC}|248-189
50926|data|ALIGN 0x10|0-191
50928|code|PUSH            {R4-R6,LR}|112-181
50930|code|MOV             R6, R0|6-70
50932|code|MOV             R5, R1|13-70
50934|code|CBZ             R1, loc_C714|105-177
50936|code|MOV             R0, R1|8-70
50938|code|BL              sub_C6A4|255-247-211-255
50942|code|MOV             R4, R0|4-70
50944|code|MOV             R5, R0|5-70
50946|code|CBZ             R0, loc_C714|56-177
50948|code|LDR             R5, [R0,#0xC]|197-104
50950|code|MOV             R1, R4|33-70
50952|code|MOV             R0, R6|48-70
50954|code|BL              sub_B29C|254-247-199-253
50958|code|MOV             R0, R4|32-70
50960|code|BL              sub_C08C|255-247-188-252
50964|code|MOV             R0, R5|40-70
50966|code|POP             {R4-R6,PC}|112-189
50968|code|PUSH            {R4-R7,LR}|240-181
50970|code|SUB             SP, SP, #0x24|137-176
50972|code|LDR             R5, =__stack_chk_guard|69-77
50974|code|MOV             R4, R0|4-70
50976|code|LDR             R3, [R5]|43-104
50978|code|STR             R3, [SP,#0x38+var_1C]|7-147
50980|code|CMP             R0, #0|0-40
50982|code|BEQ             loc_C7FA|104-208
50984|code|LDR             R2, [R0]|2-104
50986|code|MOVW            R3, #0xDEAD|77-246-173-99
50990|code|CMP             R2, R3|154-66
50992|code|BNE             loc_C824|120-209
50994|code|LDR             R3, [R0,#4]|67-104
50996|code|CMP             R3, #0|0-43
50998|code|BEQ             loc_C808|103-208
51000|code|LDR             R1, [R3]|25-104
51002|code|CMP             R1, R2|145-66
51004|code|BNE             loc_C816|107-209
51006|code|LDR             R1, [R3,#8]|153-104
51008|code|MOVS            R7, #0|0-39
51010|code|LDR             R0, [R0,#8]|128-104
51012|code|CMP             R1, R0|129-66
51014|code|BLE             loc_C7B2|52-221
51016|code|LDR             R2, [R4,#0xC]|226-104
51018|code|LDR             R6, [R4,#0x10]|38-105
51020|code|LDR.W           R12, [R2,#8]|210-248-8-192
51024|code|ADDS            R6, #1|1-54
51026|code|LDR             R7, [R2,#4]|87-104
51028|code|STR             R6, [R4,#0x10]|38-97
51030|code|RSB.W           R7, R7, R12|199-235-12-7
51034|code|CMP             R6, R7|190-66
51036|code|BLS             loc_C772|9-217
51038|code|LDR             R3, [R3,#0x10]|27-105
51040|code|ADDS            R0, #1|1-48
51042|code|MOVS            R7, #0|0-39
51044|code|CMP             R1, R0|129-66
51046|code|STR             R0, [R4,#8]|160-96
51048|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
51052|code|STR             R7, [R4,#0x10]|39-97
51054|code|STR             R2, [R4,#0xC]|226-96
51056|code|BLE             loc_C7B2|31-221
51058|code|MOVS            R3, #0|0-35
51060|code|STRB.W          R3, [SP,#0x38+s]|141-248-12-48
51064|code|LDRB            R3, [R2,#0x10]|19-124
51066|code|LSLS            R7, R3, #0x1F|223-7
51068|code|IT MI|72-191
51070|code|ADDMI           R6, SP, #0x38+s|3-174
51072|code|BPL             loc_C7C0|30-213
51074|code|LDR             R0, [R2]; s|16-104
51076|code|BLX             strlen|252-247-42-238
51080|code|MOV             R7, R0|7-70
51082|code|MOV             R0, R6; s|48-70
51084|code|BLX             strlen|252-247-38-238
51088|code|ADDS            R0, R7, R0|56-24
51090|code|ADDS            R0, #1; size|1-48
51092|code|BLX             malloc|252-247-240-237
51096|code|MOV             R7, R0|7-70
51098|code|CMP             R0, #0|0-40
51100|code|BEQ             loc_C7DC|30-208
51102|code|MOVS            R3, #0|0-35
51104|code|STRB            R3, [R0]|3-112
51106|code|LDR             R3, [R4,#0xC]|227-104
51108|code|LDR             R1, [R3]; src|25-104
51110|code|BLX             strcat|252-247-196-237
51114|code|MOV             R0, R7; dest|56-70
51116|code|MOV             R1, R6; src|49-70
51118|code|BLX             strcat|252-247-192-237
51122|code|LDR             R2, [SP,#0x38+var_1C]|7-154
51124|code|MOV             R0, R7|56-70
51126|code|LDR             R3, [R5]|43-104
51128|code|CMP             R2, R3|154-66
51130|code|BNE             loc_C7F6|28-209
51132|code|ADD             SP, SP, #0x24 ; '$'|9-176
51134|code|POP             {R4-R7,PC}|240-189
51136|code|ADD             R6, SP, #0x38+s|3-174
51138|code|LDR             R7, [R2,#4]|87-104
51140|code|LDR.W           LR, [R4,#0x10]|212-248-16-224
51144|code|MOVS            R1, #0xF; maxlen|15-33
51146|code|LDR             R3, [R2,#0xC]|211-104
51148|code|MOV             R0, R6; s|48-70
51150|code|LDR             R2, =a0Lu; "%0*lu"|26-74
51152|code|ADD             R7, LR|119-68
51154|code|STR             R7, [SP,#0x38+var_38]|0-151
51156|code|BLX             snprintf|252-247-34-238
51160|code|LDR             R2, [R4,#0xC]|226-104
51162|code|B               loc_C782|210-231
51164|code|BLX             __errno_location|252-247-24-238
51168|code|MOVS            R2, #0xC|12-34
51170|code|MOVW            R1, #0x8DF|64-246-223-1
51174|code|MOV             R3, R0|3-70
51176|code|LDR             R0, =aSrcHostlistC; "../src/hostlist.c"|20-72
51178|code|STR             R2, [R3]|26-96
51180|code|LDR             R2, =aHostlistNext; "hostlist_next"|20-74
51182|code|BL              sub_A004|253-247-9-252
51186|code|MOV             R7, R0|7-70
51188|code|B               loc_C7B2|221-231
51190|code|BLX             __stack_chk_fail|252-247-108-237
51194|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|18-72
51196|code|MOVW            R2, #0x8CE; line|64-246-206-2
51200|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|14-73
51202|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|17-75
51204|code|BLX             __assert_fail|252-247-142-238
51208|code|LDR             R0, =unk_FC64; assertion|16-72
51210|code|MOV.W           R2, #0x8D0; line|79-244-13-98
51214|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|11-73
51216|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|13-75
51218|code|BLX             __assert_fail|252-247-136-238
51222|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
51224|code|MOV.W           R2, #0x8D0; line|79-244-13-98
51228|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|7-73
51230|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|10-75
51232|code|BLX             __assert_fail|252-247-128-238
51236|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
51238|code|MOVW            R2, #0x8CF; line|64-246-207-2
51242|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|4-73
51244|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|6-75
51246|code|BLX             __assert_fail|252-247-122-238
51250|data|ALIGN 4|0-191
51252|data|DCD __stack_chk_guard|136-135-1-0
51256|data|DCD a0Lu; "%0*lu"|60-251-0-0
51260|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
51264|data|DCD aHostlistNext; "hostlist_next"|240-252-0-0
51268|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
51272|data|DCD aHostlistNext_0; "hostlist_next"|128-249-0-0
51276|data|DCD unk_FC64|100-252-0-0
51280|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|124-252-0-0
51284|data|DCD aIMagic57005; "i->magic == 57005"|236-251-0-0
51288|code|PUSH.W          {R4-R10,LR}|45-233-240-71
51292|code|SUB.W           SP, SP, #0x410|173-245-130-109
51296|code|LDR             R6, =__stack_chk_guard|51-78
51298|code|MOV             R8, R0|128-70
51300|code|LDR             R3, [R6]|51-104
51302|code|STR.W           R3, [SP,#0x40C]|205-248-12-52
51306|code|CMP             R0, #0|0-40
51308|code|BEQ             loc_C920|88-208
51310|code|LDR             R3, [R0]|3-104
51312|code|MOVW            R2, #0xDEAD|77-246-173-98
51316|code|CMP             R3, R2|147-66
51318|code|BNE             loc_C912|76-209
51320|code|LDR             R5, [R0,#4]|69-104
51322|code|CMP             R5, #0|0-45
51324|code|BEQ             loc_C904|66-208
51326|code|LDR             R2, [R5]|42-104
51328|code|CMP             R2, R3|154-66
51330|code|BNE             loc_C8F6|56-209
51332|code|LDR             R3, [R0,#0x10]|3-105
51334|code|LDR.W           R9, [R5,#8]|213-248-8-144
51338|code|ADDS            R3, #1|1-51
51340|code|LDR.W           R10, [R5,#0x10]|213-248-16-160
51344|code|CMP             R3, #0|0-43
51346|code|LDR             R4, [R0,#8]|132-104
51348|code|STR             R3, [R0,#0x10]|3-97
51350|code|BLE             loc_C8C4|21-221
51352|code|ADD.W           R7, R10, R4,LSL#2|10-235-132-7
51356|code|B               loc_C8AC|6-224
51358|code|LDR.W           R1, [R7,#4]!|87-248-4-31
51362|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
51366|code|BL              sub_ADD0|254-247-147-250
51370|code|CBZ             R0, loc_C8B2|16-177
51372|code|ADDS            R4, #1|1-52
51374|code|CMP             R9, R4|161-69
51376|code|BGT             loc_C89E|245-220
51378|code|LDR.W           R3, [R10,R4,LSL#2]|90-248-36-48
51382|code|MOVS            R2, #0|0-34
51384|code|STR.W           R4, [R8,#8]|200-248-8-64
51388|code|STR.W           R2, [R8,#0x10]|200-248-16-32
51392|code|STR.W           R3, [R8,#0xC]|200-248-12-48
51396|code|MOVS            R0, #0|0-32
51398|code|CMP             R9, R4|161-69
51400|code|BLE             loc_C8E0|10-221
51402|code|MOV.W           R2, #0x400|79-244-128-98
51406|code|ADD             R3, SP, #8|2-171
51408|code|MOV             R0, R5|40-70
51410|code|ADD             R1, SP, #4|1-169
51412|code|STR             R4, [SP,#4]|1-148
51414|code|BL              sub_ADF4|254-247-141-250
51418|code|ADD             R0, SP, #8|2-168
51420|code|BLX             __strdup|252-247-170-237
51424|code|LDR.W           R2, [SP,#0x40C]|221-248-12-36
51428|code|LDR             R3, [R6]|51-104
51430|code|CMP             R2, R3|154-66
51432|code|BNE             loc_C8F2|3-209
51434|code|ADD.W           SP, SP, #0x410|13-245-130-109
51438|code|POP.W           {R4-R10,PC}|189-232-240-135
51442|code|BLX             __stack_chk_fail|252-247-238-236
51446|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|15-72
51448|code|MOV.W           R2, #0x8F0|79-244-15-98
51452|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|14-73
51454|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|15-75
51456|code|BLX             __assert_fail|252-247-16-238
51460|code|LDR             R0, =unk_FC64|14-72
51462|code|MOV.W           R2, #0x8F0|79-244-15-98
51466|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|11-73
51468|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|11-75
51470|code|BLX             __assert_fail|252-247-10-238
51474|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|12-72
51476|code|MOVW            R2, #0x8EF|64-246-239-2
51480|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|7-73
51482|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|8-75
51484|code|BLX             __assert_fail|252-247-2-238
51488|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
51490|code|MOVW            R2, #0x8EE|64-246-238-2
51494|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|4-73
51496|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|4-75
51498|code|BLX             __assert_fail|252-247-252-237
51502|data|ALIGN 0x10|0-191
51504|data|DCD __stack_chk_guard|136-135-1-0
51508|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|124-252-0-0
51512|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
51516|data|DCD aHostlistNextRa; "hostlist_next_range"|144-249-0-0
51520|data|DCD unk_FC64|100-252-0-0
51524|data|DCD aIMagic57005; "i->magic == 57005"|236-251-0-0
51528|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
51532|code|PUSH            {R3-R5,LR}|56-181
51534|code|MOV             R4, R0|4-70
51536|code|CMP             R0, #0|0-40
51538|code|BEQ             loc_C9FC|83-208
51540|code|LDR             R3, [R0]|3-104
51542|code|MOVW            R2, #0xDEAD|77-246-173-98
51546|code|CMP             R3, R2|147-66
51548|code|BNE             loc_C9EE|71-209
51550|code|LDR             R2, [R0,#4]|66-104
51552|code|CMP             R2, #0|0-42
51554|code|BEQ             loc_C9E0|61-208
51556|code|LDR             R2, [R2]|18-104
51558|code|CMP             R2, R3|154-66
51560|code|BNE             loc_C9D2|51-209
51562|code|LDR             R0, [R0,#0xC]|192-104
51564|code|LDR             R1, [R4,#0x10]|33-105
51566|code|LDR             R3, [R0,#4]|67-104
51568|code|ADDS            R1, R1, R3|201-24
51570|code|BL              sub_AC30|254-247-93-249
51574|code|MOV             R5, R0|5-70
51576|code|CBZ             R0, loc_C9AC|192-177
51578|code|LDR             R2, [R4,#8]|162-104
51580|code|MOV             R1, R0|1-70
51582|code|LDR             R0, [R4,#4]|96-104
51584|code|ADDS            R2, #1|1-50
51586|code|BL              sub_B108|254-247-193-251
51590|code|MOV             R0, R5|40-70
51592|code|BL              sub_A724|253-247-204-254
51596|code|LDR             R3, [R4,#4]|99-104
51598|code|LDR             R2, [R4,#8]|162-104
51600|code|LDR             R1, [R3,#0x10]|25-105
51602|code|ADDS            R2, #1|1-50
51604|code|STR             R2, [R4,#8]|162-96
51606|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
51610|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
51614|code|STR             R1, [R4,#0x10]|33-97
51616|code|STR             R2, [R4,#0xC]|226-96
51618|code|LDR             R2, [R3,#0xC]|218-104
51620|code|MOVS            R0, #1|1-32
51622|code|SUBS            R2, #1|1-58
51624|code|STR             R2, [R3,#0xC]|218-96
51626|code|POP             {R3-R5,PC}|56-189
51628|code|LDR             R0, [R4,#0xC]|224-104
51630|code|BL              sub_AA34|254-247-65-248
51634|code|CBNZ            R0, loc_C9C6|64-185
51636|code|LDR             R3, [R4,#4]|99-104
51638|code|MOVS            R0, #1|1-32
51640|code|LDR             R2, [R4,#0x10]|34-105
51642|code|SUBS            R2, #1|1-58
51644|code|STR             R2, [R4,#0x10]|34-97
51646|code|LDR             R2, [R3,#0xC]|218-104
51648|code|SUBS            R2, #1|1-58
51650|code|STR             R2, [R3,#0xC]|218-96
51652|code|POP             {R3-R5,PC}|56-189
51654|code|LDR             R0, [R4,#4]|96-104
51656|code|LDR             R1, [R4,#8]|161-104
51658|code|BL              sub_B970|254-247-209-255
51662|code|LDR             R3, [R4,#4]|99-104
51664|code|B               loc_C9A2|231-231
51666|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
51668|code|MOVW            R2, #0x906|64-246-6-18
51672|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|13-73
51674|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|14-75
51676|code|BLX             __assert_fail|252-247-162-237
51680|code|LDR             R0, =unk_FC64|13-72
51682|code|MOVW            R2, #0x906|64-246-6-18
51686|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
51688|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|10-75
51690|code|BLX             __assert_fail|252-247-156-237
51694|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
51696|code|MOVW            R2, #0x905|64-246-5-18
51700|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
51702|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|7-75
51704|code|BLX             __assert_fail|252-247-148-237
51708|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|8-72
51710|code|MOVW            R2, #0x904|64-246-4-18
51714|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
51716|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|3-75
51718|code|BLX             __assert_fail|252-247-142-237
51722|data|ALIGN 4|0-191
51724|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|124-252-0-0
51728|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
51732|data|DCD aHostlistRemove; "hostlist_remove"|164-249-0-0
51736|data|DCD unk_FC64|100-252-0-0
51740|data|DCD aIMagic57005; "i->magic == 57005"|236-251-0-0
51744|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
51748|code|PUSH            {R3-R5,LR}|56-181
51750|code|MOV             R5, R0|5-70
51752|code|MOVS            R0, #4|4-32
51754|code|BLX             malloc|252-247-166-236
51758|code|MOV             R4, R0|4-70
51760|code|CBZ             R0, loc_CA42|56-177
51762|code|MOV             R0, R5|40-70
51764|code|BL              sub_C6A4|255-247-54-254
51768|code|MOV             R3, R0|3-70
51770|code|STR             R0, [R4]|32-96
51772|code|CBZ             R0, loc_CA46|24-177
51774|code|BL              sub_BAA0|255-247-47-248
51778|code|MOV             R0, R4|32-70
51780|code|POP             {R3-R5,PC}|56-189
51782|code|MOV             R0, R4|32-70
51784|code|MOV             R4, R3|28-70
51786|code|BLX             free|252-247-12-236
51790|code|B               loc_CA42|248-231
51792|code|PUSH            {R3-R5,LR}|56-181
51794|code|MOV             R5, R0|5-70
51796|code|MOVS            R0, #4|4-32
51798|code|BLX             malloc|252-247-144-236
51802|code|MOV             R4, R0|4-70
51804|code|CBZ             R0, loc_CA6A|40-177
51806|code|LDR             R0, [R5]|40-104
51808|code|BL              sub_B1E0|254-247-190-251
51812|code|MOV             R3, R0|3-70
51814|code|STR             R0, [R4]|32-96
51816|code|CBZ             R0, loc_CA6E|8-177
51818|code|MOV             R0, R4|32-70
51820|code|POP             {R3-R5,PC}|56-189
51822|code|MOV             R0, R4|32-70
51824|code|MOV             R4, R3|28-70
51826|code|BLX             free|252-247-248-235
51830|code|B               loc_CA6A|248-231
51832|code|PUSH            {R4,LR}|16-181
51834|code|MOV             R4, R0|4-70
51836|code|CBZ             R0, locret_CA8E|56-177
51838|code|LDR             R0, [R0]|0-104
51840|code|BL              sub_C08C|255-247-4-251
51844|code|MOV             R0, R4|32-70
51846|code|POP.W           {R4,LR}|189-232-16-64
51850|code|B.W             j_free|252-247-233-187
51854|code|POP             {R4,PC}|16-189
51856|code|PUSH.W          {R4-R11,LR}|45-233-240-79
51860|code|SUB             SP, SP, #0xC|131-176
51862|code|STR             R0, [SP,#4]|1-144
51864|code|MOV             R0, R1|8-70
51866|code|BL              sub_C6A4|255-247-3-254
51870|code|MOV             R8, R0|128-70
51872|code|CMP             R0, #0|0-40
51874|code|BEQ.W           loc_CBDC|0-240-155-128
51878|code|BL              sub_BAA0|254-247-251-255
51882|code|LDR             R3, [SP,#4]|1-155
51884|code|LDR             R5, [R3]|29-104
51886|code|CMP             R5, #0|0-45
51888|code|BEQ.W           loc_CBEE|0-240-157-128
51892|code|LDR             R2, [R5]|42-104
51894|code|MOVW            R3, #0xDEAD|77-246-173-99
51898|code|CMP             R2, R3|154-66
51900|code|BNE.W           loc_CBE0|64-240-144-128
51904|code|LDR.W           R3, [R8,#8]|216-248-8-48
51908|code|MOV.W           R9, #0|79-240-0-9
51912|code|CMP             R3, #0|0-43
51914|code|IT GT|200-191
51916|code|MOVGT           R6, R9|78-70
51918|code|BLE             loc_CBCE|126-221
51920|code|LDR.W           R10, [R5,#8]|213-248-8-160
51924|code|LDR             R3, [R5,#4]|107-104
51926|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
51930|code|CMP             R3, R10|83-69
51932|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
51936|code|BEQ             loc_CB78|74-208
51938|code|MOV             R0, R11|88-70
51940|code|BL              sub_A9B8|253-247-104-255
51944|code|CMP.W           R10, #0|186-241-0-15
51948|code|MOV             R7, R0|7-70
51950|code|BLE             loc_CB96|82-221
51952|code|MOVS            R4, #0|0-36
51954|code|B               loc_CAFE|4-224
51956|code|LDR.W           R10, [R5,#8]|213-248-8-160
51960|code|ADDS            R4, #1|1-52
51962|code|CMP             R4, R10|84-69
51964|code|BGE             loc_CB96|75-218
51966|code|LDR             R3, [R5,#0x10]|43-105
51968|code|MOV             R0, R11|88-70
51970|code|MOV.W           R10, R4,LSL#2|79-234-132-10
51974|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
51978|code|BL              sub_ACB8|254-247-213-248
51982|code|CMP             R0, #0|0-40
51984|code|BGT             loc_CAF4|240-220
51986|code|LDR             R3, [R5,#0x10]|43-105
51988|code|MOV             R0, R11|88-70
51990|code|LDR.W           R1, [R3,R10]|83-248-10-16
51994|code|BL              sub_AD18|254-247-253-248
51998|code|CMP             R0, #0|0-40
52000|code|MOV             R10, R0|130-70
52002|code|IT LT|184-191
52004|code|MOVLT.W         R10, #0|79-240-0-10
52008|code|BLT             loc_CB32|3-219
52010|code|MOV             R0, R5|40-70
52012|code|MOV             R1, R4|33-70
52014|code|BL              sub_B970|254-247-31-255
52018|code|MOV             R0, R5|40-70
52020|code|MOV             R1, R11|89-70
52022|code|MOV             R2, R4|34-70
52024|code|BL              sub_B108|254-247-230-250
52028|code|CBZ             R4, loc_CB4C|52-177
52030|code|MOV             R0, R5|40-70
52032|code|MOV             R1, R4|33-70
52034|code|BL              sub_BA0C|254-247-99-255
52038|code|CMP             R0, #0|0-40
52040|code|IT GT|200-191
52042|code|ADDGT           R10, R0|130-68
52044|code|LDR             R3, [R5,#0xC]|235-104
52046|code|RSB.W           R7, R10, R7|202-235-7-7
52050|code|ADDS            R3, R3, R7|219-25
52052|code|STR             R3, [R5,#0xC]|235-96
52054|code|LDR.W           R3, [R8,#8]|216-248-8-48
52058|code|ADDS            R6, #1|1-54
52060|code|ADD             R9, R7|185-68
52062|code|CMP             R3, R6|179-66
52064|code|BLE             loc_CBCE|53-221
52066|code|LDR             R3, [SP,#4]|1-155
52068|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
52072|code|LDR             R5, [R3]|29-104
52074|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
52078|code|LDR.W           R10, [R5,#8]|213-248-8-160
52082|code|LDR             R3, [R5,#4]|107-104
52084|code|CMP             R3, R10|83-69
52086|code|BNE             loc_CAE2|180-209
52088|code|MOV             R0, R5|40-70
52090|code|BL              sub_B020|254-247-81-250
52094|code|MOV             R7, R0|7-70
52096|code|CMP             R0, #0|0-40
52098|code|BEQ             loc_CB56|232-208
52100|code|MOV             R0, R11|88-70
52102|code|LDR.W           R10, [R5,#8]|213-248-8-160
52106|code|BL              sub_A9B8|253-247-21-255
52110|code|CMP.W           R10, #0|186-241-0-15
52114|code|MOV             R7, R0|7-70
52116|code|BGT             loc_CAF0|172-220
52118|code|MOV             R0, R11|88-70
52120|code|LDR             R4, [R5,#0x10]|44-105
52122|code|BL              sub_ABF8|254-247-45-248
52126|code|ADD.W           R3, R10, #1|10-241-1-3
52130|code|LDR             R2, [R5,#0xC]|234-104
52132|code|CMP             R3, #1|1-43
52134|code|ADD             R2, R7|58-68
52136|code|STR.W           R0, [R4,R10,LSL#2]|68-248-42-0
52140|code|STR             R3, [R5,#8]|171-96
52142|code|STR             R2, [R5,#0xC]|234-96
52144|code|BLE             loc_CB56|209-221
52146|code|MOV             R0, R5|40-70
52148|code|MOV             R1, R10|81-70
52150|code|BL              sub_BA0C|254-247-41-255
52154|code|LDR.W           R3, [R8,#8]|216-248-8-48
52158|code|CMP             R0, #0|0-40
52160|code|IT GT|200-191
52162|code|RSBGT.W         R7, R0, R7|192-235-7-7
52166|code|ADDS            R6, #1|1-54
52168|code|CMP             R3, R6|179-66
52170|code|ADD             R9, R7|185-68
52172|code|BGT             loc_CB62|201-220
52174|code|MOV             R0, R8|64-70
52176|code|BL              sub_C08C|255-247-92-250
52180|code|MOV             R0, R9|72-70
52182|code|ADD             SP, SP, #0xC|3-176
52184|code|POP.W           {R4-R11,PC}|189-232-240-143
52188|code|MOV             R9, R0|129-70
52190|code|B               loc_CBD4|249-231
52192|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|6-72
52194|code|MOVW            R2, #0x985|64-246-133-18
52198|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
52200|code|LDR             R3, =aHostsetInsert; "hostset_insert"|6-75
52202|code|BLX             __assert_fail|252-247-156-236
52206|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|6-72
52208|code|MOVW            R2, #0x985|64-246-133-18
52212|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|2-73
52214|code|LDR             R3, =aHostsetInsert; "hostset_insert"|3-75
52216|code|BLX             __assert_fail|252-247-148-236
52220|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|24-253-0-0
52224|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
52228|data|DCD aHostsetInsert; "hostset_insert"|180-249-0-0
52232|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|0-253-0-0
52236|code|PUSH.W          {R3-R11,LR}|45-233-248-79
52240|code|MOV             R6, R0|6-70
52242|code|LDR             R3, [R0]|3-104
52244|code|LDR             R4, [R3]|28-104
52246|code|MOVW            R3, #0xDEAD|77-246-173-99
52250|code|CMP             R4, R3|156-66
52252|code|BNE             loc_CCBC|78-209
52254|code|MOV             R0, R1|8-70
52256|code|BL              sub_C6A4|255-247-64-253
52260|code|MOV             R9, R0|129-70
52262|code|CMP.W           R9, #0|185-241-0-15
52266|code|BEQ             locret_CCB8|69-208
52268|code|BL              sub_B4E0|254-247-88-252
52272|code|MOV.W           R8, #0|79-240-0-8
52276|code|MOV             R10, R4|162-70
52278|code|MOV             R11, R0|131-70
52280|code|MOV             R0, R9|72-70
52282|code|BL              sub_B2F4|254-247-91-251
52286|code|MOV             R7, R0|7-70
52288|code|CMP             R0, #0|0-40
52290|code|BEQ             loc_CC9A|42-208
52292|code|LDR             R3, [R6]|51-104
52294|code|CMP             R3, #0|0-43
52296|code|BEQ             loc_CCD8|70-208
52298|code|LDR             R3, [R3]|27-104
52300|code|CMP             R3, R10|83-69
52302|code|BNE             loc_CCCA|60-209
52304|code|MOV             R0, R7|56-70
52306|code|BL              sub_A740|253-247-117-253
52310|code|LDR             R2, [R6]|50-104
52312|code|LDR             R3, [R2,#8]|147-104
52314|code|CMP             R3, #0|0-43
52316|code|MOV             R5, R0|5-70
52318|code|BLE             loc_CCB4|41-221
52320|code|MOVS            R4, #0|0-36
52322|code|B               loc_CC6E|4-224
52324|code|LDR             R2, [R6]|50-104
52326|code|ADDS            R4, #1|1-52
52328|code|LDR             R3, [R2,#8]|147-104
52330|code|CMP             R4, R3|156-66
52332|code|BGE             loc_CCB0|32-218
52334|code|LDR             R3, [R2,#0x10]|19-105
52336|code|MOV             R1, R5|41-70
52338|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
52342|code|BL              sub_A8C0|253-247-35-254
52346|code|CMP             R0, #0|0-40
52348|code|BEQ             loc_CC64|242-208
52350|code|MOVS            R3, #1|1-35
52352|code|MOV             R0, R5|40-70
52354|code|ADD             R8, R3|152-68
52356|code|BL              sub_A6FC|253-247-58-253
52360|code|MOV             R0, R7|56-70
52362|code|BLX             free|252-247-236-234
52366|code|MOV             R0, R9|72-70
52368|code|BL              sub_B2F4|254-247-48-251
52372|code|MOV             R7, R0|7-70
52374|code|CMP             R0, #0|0-40
52376|code|BNE             loc_CC44|212-209
52378|code|MOV             R0, R9|72-70
52380|code|BL              sub_C08C|255-247-246-249
52384|code|RSB.W           LR, R8, R11|200-235-11-14
52388|code|RSBS.W          R0, LR, #0|222-241-0-0
52392|code|ADC.W           R0, R0, LR|64-235-14-0
52396|code|POP.W           {R3-R11,PC}|189-232-248-143
52400|code|MOV             R3, R0|3-70
52402|code|B               loc_CC80|229-231
52404|code|MOVS            R3, #0|0-35
52406|code|B               loc_CC80|227-231
52408|code|POP.W           {R3-R11,PC}|189-232-248-143
52412|code|LDR             R0, =aSetHlMagic5700_0; "set->hl->magic == 57005"|10-72
52414|code|MOVW            R2, #0x9A9|64-246-169-18
52418|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|10-73
52420|code|LDR             R3, =aHostsetWithin; "hostset_within"|10-75
52422|code|BLX             __assert_fail|252-247-46-236
52426|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|10-72
52428|code|MOVW            R2, #0x995|64-246-149-18
52432|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|6-73
52434|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|9-75
52436|code|BLX             __assert_fail|252-247-38-236
52440|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|8-72
52442|code|MOVW            R2, #0x995|64-246-149-18
52446|code|LDR             R1, =aSrcHostlistC; "../src/hostlist.c"|3-73
52448|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|5-75
52450|code|BLX             __assert_fail|252-247-32-236
52454|data|ALIGN 4|0-191
52456|data|DCD aSetHlMagic5700_0; "set->hl->magic == 57005"|52-253-0-0
52460|data|DCD aSrcHostlistC; "../src/hostlist.c"|0-250-0-0
52464|data|DCD aHostsetWithin; "hostset_within"|196-249-0-0
52468|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|24-253-0-0
52472|data|DCD aHostsetFindHos; "hostset_find_host"|212-249-0-0
52476|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|0-253-0-0
52480|code|LDR             R0, [R0]|0-104
52482|code|B.W             loc_C6A8|255-247-209-188
52486|data|ALIGN 4|0-191
52488|code|LDR             R0, [R0]|0-104
52490|code|B.W             sub_BE84|255-247-187-184
52494|data|ALIGN 0x10|0-191
52496|code|LDR             R0, [R0]|0-104
52498|code|B.W             loc_BEA0|255-247-197-184
52502|data|ALIGN 4|0-191
52504|code|LDR             R0, [R0]|0-104
52506|code|B.W             sub_B2F4|254-247-235-186
52510|data|ALIGN 0x10|0-191
52512|code|LDR             R0, [R0]|0-104
52514|code|B.W             loc_C0F4|255-247-231-185
52518|data|ALIGN 4|0-191
52520|code|LDR             R0, [R0]|0-104
52522|code|B.W             loc_C210|255-247-113-186
52526|data|ALIGN 0x10|0-191
52528|code|LDR             R0, [R0]|0-104
52530|code|B.W             sub_B4E0|254-247-213-187
52534|data|ALIGN 4|0-191
52536|code|LDR             R0, [R0]|0-104
52538|code|B.W             sub_B76C|254-247-23-189
52542|data|ALIGN 0x10|0-191
52544|code|LDR             R0, [R0]|0-104
52546|code|B.W             loc_B5D4|254-247-71-188
52550|data|ALIGN 4|0-191
52552|code|PUSH            {R3,LR}|8-181
52554|code|CBZ             R0, loc_CD88|232-177
52556|code|MOV             R3, R0|3-70
52558|code|LDR             R1, =dword_18878|18-73
52560|code|MOVS            R2, #0|0-34
52562|code|STRB.W          R2, [R3],#1|3-248-1-43
52566|code|ADDS            R3, #1|1-51
52568|code|STRB            R2, [R0,#1]|66-112
52570|code|STRB.W          R2, [R3],#1|3-248-1-43
52574|code|STRB.W          R2, [R3],#1|3-248-1-43
52578|code|STRB.W          R2, [R3],#1|3-248-1-43
52582|code|STRB.W          R2, [R3],#1|3-248-1-43
52586|code|STRB.W          R2, [R3],#1|3-248-1-43
52590|code|STRB.W          R2, [R3],#1|3-248-1-43
52594|code|STRB.W          R2, [R3],#1|3-248-1-43
52598|code|STRB.W          R2, [R3],#1|3-248-1-43
52602|code|STRB.W          R2, [R3],#1|3-248-1-43
52606|code|STRB            R2, [R3]|26-112
52608|code|LDR             R3, [R1]|11-104
52610|code|STR             R0, [R1]|8-96
52612|code|STR             R3, [R0]|3-96
52614|code|POP             {R3,PC}|8-189
52616|code|LDR             R0, =aNodeVoid0; "node != ((void *)0)"|4-72
52618|code|MOVW            R2, #0x1AF; line|64-242-175-18
52622|code|LDR             R1, =aSrcHashC; "../src/hash.c"|4-73
52624|code|LDR             R3, =aHashNodeFree; "hash_node_free"|4-75
52626|code|BLX             __assert_fail|252-247-200-235
52630|data|ALIGN 4|0-191
52632|data|DCD dword_18878|120-136-1-0
52636|data|DCD aNodeVoid0; "node != ((void *)0)"|204-253-0-0
52640|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
52644|data|DCD aHashNodeFree; "hash_node_free"|76-253-0-0
52648|code|PUSH.W          {R3-R9,LR}|45-233-248-67
52652|code|RSBS.W          R7, R1, #1|209-241-1-7
52656|code|MOV             R4, R1|12-70
52658|code|MOV             R6, R2|22-70
52660|code|IT CC|56-191
52662|code|MOVCC           R7, #0|0-39
52664|code|CMP             R2, #0|0-42
52666|code|IT EQ|8-191
52668|code|ORREQ.W         R7, R7, #1|71-240-1-7
52672|code|MOV             R5, R0|5-70
52674|code|MOV             R9, R3|153-70
52676|code|CBNZ            R7, loc_CE10|39-187
52678|code|MOVS            R0, #0x1C|28-32
52680|code|MOVW            R3, #0x4BD|64-242-189-67
52684|code|CMP             R5, #0|0-45
52686|code|IT LE|216-191
52688|code|MOVLE           R5, R3|29-70
52690|code|BLX             malloc|252-247-210-234
52694|code|MOV             R8, R0|128-70
52696|code|CBZ             R0, loc_CE22|24-179
52698|code|MOV             R0, R5|40-70
52700|code|MOVS            R1, #4|4-33
52702|code|BLX             calloc|252-247-254-233
52706|code|STR.W           R0, [R8,#8]|200-248-8-0
52710|code|CMP             R0, #0|0-40
52712|code|BEQ             loc_CE30|34-208
52714|code|MOVW            R3, #0xBEEF|75-246-239-99
52718|code|STR.W           R7, [R8]|200-248-0-112
52722|code|MOVT.W          R3, #0xDEAD|205-246-173-99
52726|code|STR.W           R5, [R8,#4]|200-248-4-80
52730|code|STR.W           R6, [R8,#0xC]|200-248-12-96
52734|code|MOV             R0, R8|64-70
52736|code|STR.W           R9, [R8,#0x10]|200-248-16-144
52740|code|STR.W           R4, [R8,#0x14]|200-248-20-64
52744|code|STR.W           R3, [R8,#0x18]|200-248-24-48
52748|code|POP.W           {R3-R9,PC}|189-232-248-131
52752|code|BLX             __errno_location|252-247-254-234
52756|code|MOV.W           R8, #0|79-240-0-8
52760|code|MOVS            R3, #0x16|22-35
52762|code|STR             R3, [R0]|3-96
52764|code|MOV             R0, R8|64-70
52766|code|POP.W           {R3-R9,PC}|189-232-248-131
52770|code|LDR             R0, =aSrcHashC; "../src/hash.c"|8-72
52772|code|MOVS            R1, #0x91|145-33
52774|code|LDR             R2, =aHashCreate; "hash_create"|8-74
52776|code|POP.W           {R3-R9,LR}|189-232-248-67
52780|code|B.W             sub_A004|253-247-234-184
52784|code|MOV             R0, R8|64-70
52786|code|BLX             free|252-247-24-234
52790|code|LDR             R0, =aSrcHashC; "../src/hash.c"|3-72
52792|code|MOVS            R1, #0x95|149-33
52794|code|LDR             R2, =aHashCreate; "hash_create"|3-74
52796|code|POP.W           {R3-R9,LR}|189-232-248-67
52800|code|B.W             sub_A004|253-247-224-184
52804|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
52808|data|DCD aHashCreate; "hash_create"|240-253-0-0
52812|code|PUSH            {R3-R7,LR}|248-181
52814|code|MOV             R6, R0|6-70
52816|code|CMP             R0, #0|0-40
52818|code|BEQ             loc_CEAC|43-208
52820|code|LDR             R2, [R0,#0x18]|130-105
52822|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52830|code|CMP             R2, R3|154-66
52832|code|BNE             loc_CEB8|42-209
52834|code|LDR             R3, [R0,#4]|67-104
52836|code|LDR             R0, [R0,#8]|128-104
52838|code|CMP             R3, #0|0-43
52840|code|BLE             loc_CE94|20-221
52842|code|MOVS            R7, #0|0-39
52844|code|LDR.W           R4, [R0,R7,LSL#2]|80-248-39-64
52848|code|CBNZ            R4, loc_CE76|12-185
52850|code|B               loc_CE8E|12-224
52852|code|MOV             R4, R5|44-70
52854|code|LDR             R3, [R6,#0x10]|51-105
52856|code|LDR             R5, [R4]|37-104
52858|code|CBZ             R3, loc_CE80|11-177
52860|code|LDR             R0, [R4,#4]|96-104
52862|code|BLX             R3|152-71
52864|code|MOV             R0, R4|32-70
52866|code|BL              sub_CD48|255-247-97-255
52870|code|CMP             R5, #0|0-45
52872|code|BNE             loc_CE74|244-209
52874|code|LDR             R3, [R6,#4]|115-104
52876|code|LDR             R0, [R6,#8]|176-104
52878|code|ADDS            R7, #1|1-55
52880|code|CMP             R3, R7|187-66
52882|code|BGT             loc_CE6C|235-220
52884|code|MOV             R3, #0x21524110|68-242-16-19-194-242-82-19
52892|code|STR             R3, [R6,#0x18]|179-97
52894|code|BLX             free|252-247-226-233
52898|code|MOV             R0, R6|48-70
52900|code|POP.W           {R3-R7,LR}|189-232-248-64
52904|code|B.W             j_free|252-247-218-185
52908|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|5-72
52910|code|MOVS            R2, #0xA8|168-34
52912|code|LDR             R1, =aSrcHashC; "../src/hash.c"|5-73
52914|code|LDR             R3, =aHashDestroy; "hash_destroy"|6-75
52916|code|BLX             __assert_fail|252-247-54-235
52920|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|5-72
52922|code|MOVS            R2, #0xAA|170-34
52924|code|LDR             R1, =aSrcHashC; "../src/hash.c"|2-73
52926|code|LDR             R3, =aHashDestroy; "hash_destroy"|3-75
52928|code|BLX             __assert_fail|252-247-48-235
52932|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
52936|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
52940|data|DCD aHashDestroy; "hash_destroy"|92-253-0-0
52944|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
52948|code|PUSH            {R3,LR}|8-181
52950|code|CBZ             R0, loc_CEF2|96-177
52952|code|LDR             R2, [R0,#0x18]|130-105
52954|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52962|code|CMP             R2, R3|154-66
52964|code|BNE             loc_CEFE|11-209
52966|code|LDR             R0, [R0]|0-104
52968|code|RSBS.W          R0, R0, #1|208-241-1-0
52972|code|IT CC|56-191
52974|code|MOVCC           R0, #0|0-32
52976|code|POP             {R3,PC}|8-189
52978|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|6-72
52980|code|MOVS            R2, #0xC1|193-34
52982|code|LDR             R1, =aSrcHashC; "../src/hash.c"|6-73
52984|code|LDR             R3, =aHashIsEmpty; "hash_is_empty"|6-75
52986|code|BLX             __assert_fail|252-247-20-235
52990|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
52992|code|MOVS            R2, #0xC3|195-34
52994|code|LDR             R1, =aSrcHashC; "../src/hash.c"|3-73
52996|code|LDR             R3, =aHashIsEmpty; "hash_is_empty"|3-75
52998|code|BLX             __assert_fail|252-247-14-235
53002|data|ALIGN 4|0-191
53004|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53008|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53012|data|DCD aHashIsEmpty; "hash_is_empty"|108-253-0-0
53016|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53020|code|PUSH            {R3,LR}|8-181
53022|code|CBZ             R0, loc_CF32|64-177
53024|code|LDR             R2, [R0,#0x18]|130-105
53026|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53034|code|CMP             R2, R3|154-66
53036|code|BNE             loc_CF3E|7-209
53038|code|LDR             R0, [R0]|0-104
53040|code|POP             {R3,PC}|8-189
53042|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|6-72
53044|code|MOVS            R2, #0xCF|207-34
53046|code|LDR             R1, =aSrcHashC; "../src/hash.c"|6-73
53048|code|LDR             R3, =aHashCount; "hash_count"|6-75
53050|code|BLX             __assert_fail|252-247-244-234
53054|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
53056|code|MOVS            R2, #0xD1|209-34
53058|code|LDR             R1, =aSrcHashC; "../src/hash.c"|3-73
53060|code|LDR             R3, =aHashCount; "hash_count"|3-75
53062|code|BLX             __assert_fail|252-247-238-234
53066|data|ALIGN 4|0-191
53068|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53072|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53076|data|DCD aHashCount; "hash_count"|124-253-0-0
53080|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53084|code|PUSH            {R4-R6,LR}|112-181
53086|code|MOV             R5, R0|5-70
53088|code|MOV             R6, R1|14-70
53090|code|CMP             R0, #0|0-40
53092|code|BEQ             loc_CFC0|44-208
53094|code|CMP             R1, #0|0-41
53096|code|BEQ             loc_CFB2|35-208
53098|code|BLX             __errno_location|252-247-82-234
53102|code|MOVS            R3, #0|0-35
53104|code|STR             R3, [R0]|3-96
53106|code|MOVW            R3, #0xBEEF|75-246-239-99
53110|code|LDR             R2, [R5,#0x18]|170-105
53112|code|MOVT.W          R3, #0xDEAD|205-246-173-99
53116|code|CMP             R2, R3|154-66
53118|code|BNE             loc_CFCC|37-209
53120|code|LDR             R3, [R5,#0x14]|107-105
53122|code|MOV             R0, R6|48-70
53124|code|BLX             R3|152-71
53126|code|LDR             R1, [R5,#4]|105-104
53128|code|BL              sub_F12C|2-240-208-248
53132|code|LDR             R3, [R5,#8]|171-104
53134|code|LDR.W           R4, [R3,R1,LSL#2]|83-248-33-64
53138|code|CBNZ            R4, loc_CF9A|20-185
53140|code|B               loc_CFAE|11-224
53142|code|LDR             R4, [R4]|36-104
53144|code|CBZ             R4, loc_CFAA|60-177
53146|code|LDR             R0, [R4,#8]|160-104
53148|code|MOV             R1, R6|49-70
53150|code|LDR             R3, [R5,#0xC]|235-104
53152|code|BLX             R3|152-71
53154|code|CMP             R0, #0|0-40
53156|code|BNE             loc_CF96|247-209
53158|code|LDR             R0, [R4,#4]|96-104
53160|code|POP             {R4-R6,PC}|112-189
53162|code|MOV             R0, R4|32-70
53164|code|POP             {R4-R6,PC}|112-189
53166|code|MOV             R0, R4|32-70
53168|code|POP             {R4-R6,PC}|112-189
53170|code|BLX             __errno_location|252-247-46-234
53174|code|MOVS            R2, #0x16|22-34
53176|code|MOV             R3, R0|3-70
53178|code|MOV             R0, R6|48-70
53180|code|STR             R2, [R3]|26-96
53182|code|POP             {R4-R6,PC}|112-189
53184|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|5-72
53186|code|MOVS            R2, #0xDF|223-34
53188|code|LDR             R1, =aSrcHashC; "../src/hash.c"|5-73
53190|code|LDR             R3, =aHashFind; "hash_find"|6-75
53192|code|BLX             __assert_fail|252-247-172-234
53196|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|5-72
53198|code|MOVS            R2, #0xE6|230-34
53200|code|LDR             R1, =aSrcHashC; "../src/hash.c"|2-73
53202|code|LDR             R3, =aHashFind; "hash_find"|3-75
53204|code|BLX             __assert_fail|252-247-166-234
53208|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53212|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53216|data|DCD aHashFind; "hash_find"|136-253-0-0
53220|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53224|code|PUSH.W          {R4-R8,LR}|45-233-240-65
53228|code|MOV             R4, R0|4-70
53230|code|SUB             SP, SP, #8|130-176
53232|code|MOV             R5, R1|13-70
53234|code|MOV             R7, R2|23-70
53236|code|CMP             R0, #0|0-40
53238|code|BEQ             loc_D0D2|108-208
53240|code|RSBS.W          R3, R1, #1|209-241-1-3
53244|code|IT CC|56-191
53246|code|MOVCC           R3, #0|0-35
53248|code|CMP             R2, #0|0-42
53250|code|IT EQ|8-191
53252|code|ORREQ.W         R3, R3, #1|67-240-1-3
53256|code|CMP             R3, #0|0-43
53258|code|BNE             loc_D07E|56-209
53260|code|LDR             R2, [R0,#0x18]|130-105
53262|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53270|code|CMP             R2, R3|154-66
53272|code|BNE             loc_D0C6|85-209
53274|code|LDR             R3, [R0,#0x14]|67-105
53276|code|MOV             R0, R1|8-70
53278|code|BLX             R3|152-71
53280|code|LDR             R1, [R4,#4]|97-104
53282|code|BL              sub_F12C|2-240-131-248
53286|code|LDR             R3, [R4,#8]|163-104
53288|code|LDR.W           R6, [R3,R1,LSL#2]|83-248-33-96
53292|code|MOV             R8, R1|136-70
53294|code|CBNZ            R6, loc_D036|22-185
53296|code|B               loc_D058|18-224
53298|code|LDR             R6, [R6]|54-104
53300|code|CBZ             R6, loc_D058|134-177
53302|code|LDR             R0, [R6,#8]|176-104
53304|code|MOV             R1, R5|41-70
53306|code|LDR             R3, [R4,#0xC]|227-104
53308|code|BLX             R3|152-71
53310|code|CMP             R0, #0|0-40
53312|code|BNE             loc_D032|247-209
53314|code|STR             R0, [SP,#4]|1-144
53316|code|BLX             __errno_location|252-247-228-233
53320|code|LDR             R3, [SP,#4]|1-155
53322|code|MOV             R7, R3|31-70
53324|code|MOVS            R3, #0x11|17-35
53326|code|STR             R3, [R0]|3-96
53328|code|MOV             R0, R7|56-70
53330|code|ADD             SP, SP, #8|2-176
53332|code|POP.W           {R4-R8,PC}|189-232-240-129
53336|code|LDR             R6, =dword_18878|33-78
53338|code|LDR             R0, [R6]|48-104
53340|code|CBZ             R0, loc_D08A|168-177
53342|code|LDR             R3, [R4,#8]|163-104
53344|code|LDR.W           R12, [R0]|208-248-0-192
53348|code|STR             R5, [R0,#8]|133-96
53350|code|STR             R7, [R0,#4]|71-96
53352|code|LDR.W           R1, [R3,R8,LSL#2]|83-248-40-16
53356|code|LDR             R2, [R4]|34-104
53358|code|STR.W           R12, [R6]|198-248-0-192
53362|code|STR             R1, [R0]|1-96
53364|code|ADDS            R2, #1|1-50
53366|code|STR.W           R0, [R3,R8,LSL#2]|67-248-40-0
53370|code|STR             R2, [R4]|34-96
53372|code|B               loc_D050|232-231
53374|code|BLX             __errno_location|252-247-200-233
53378|code|MOVS            R7, #0|0-39
53380|code|MOVS            R3, #0x16|22-35
53382|code|STR             R3, [R0]|3-96
53384|code|B               loc_D050|226-231
53386|code|MOV.W           R0, #0xC00|79-244-64-96
53390|code|BLX             malloc|252-247-116-233
53394|code|STR             R0, [R6]|48-96
53396|code|CBZ             R0, loc_D0AC|80-177
53398|code|ADD.W           R3, R0, #0xC|0-241-12-3
53402|code|MOVS            R2, #0xFF|255-34
53404|code|STR.W           R3, [R3,#-0xC]|67-248-12-60
53408|code|ADDS            R3, #0xC|12-51
53410|code|SUBS            R2, #1|1-58
53412|code|BNE             loc_D09C|250-209
53414|code|STR.W           R2, [R0,#0xBF4]|192-248-244-43
53418|code|B               loc_D05E|216-231
53420|code|BLX             __errno_location|252-247-176-233
53424|code|MOVS            R3, #0xC|12-35
53426|code|MOVW            R1, #0x109|64-242-9-17
53430|code|LDR             R2, =aHashInsert; "hash_insert"|11-74
53432|code|STR             R3, [R0]|3-96
53434|code|LDR             R0, =aSrcHashC; "../src/hash.c"|11-72
53436|code|ADD             SP, SP, #8|2-176
53438|code|POP.W           {R4-R8,LR}|189-232-240-65
53442|code|B.W             sub_A004|252-247-159-191
53446|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|9-72
53448|code|MOVS            R2, #0xFF|255-34
53450|code|LDR             R1, =aSrcHashC; "../src/hash.c"|7-73
53452|code|LDR             R3, =aHashInsert_0; "hash_insert"|8-75
53454|code|BLX             __assert_fail|252-247-42-234
53458|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|8-72
53460|code|MOVS            R2, #0xF9|249-34
53462|code|LDR             R1, =aSrcHashC; "../src/hash.c"|4-73
53464|code|LDR             R3, =aHashInsert_0; "hash_insert"|5-75
53466|code|BLX             __assert_fail|252-247-36-234
53470|data|ALIGN 0x10|0-191
53472|data|DCD dword_18878|120-136-1-0
53476|data|DCD aHashInsert; "hash_insert"|40-254-0-0
53480|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53484|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53488|data|DCD aHashInsert_0; "hash_insert"|148-253-0-0
53492|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53496|code|PUSH            {R3-R7,LR}|248-181
53498|code|MOV             R6, R0|6-70
53500|code|MOV             R7, R1|15-70
53502|code|CMP             R0, #0|0-40
53504|code|BEQ             loc_D178|58-208
53506|code|CMP             R1, #0|0-41
53508|code|BEQ             loc_D15E|43-208
53510|code|BLX             __errno_location|252-247-132-233
53514|code|MOVS            R3, #0|0-35
53516|code|STR             R3, [R0]|3-96
53518|code|MOVW            R3, #0xBEEF|75-246-239-99
53522|code|LDR             R2, [R6,#0x18]|178-105
53524|code|MOVT.W          R3, #0xDEAD|205-246-173-99
53528|code|CMP             R2, R3|154-66
53530|code|BNE             loc_D16A|38-209
53532|code|LDR             R3, [R6,#0x14]|115-105
53534|code|MOV             R0, R7|56-70
53536|code|BLX             R3|152-71
53538|code|LDR             R1, [R6,#4]|113-104
53540|code|BL              sub_F12C|2-240-2-248
53544|code|LDR             R3, [R6,#8]|179-104
53546|code|LDR.W           R4, [R3,R1,LSL#2]|83-248-33-64
53550|code|ADD.W           R5, R3, R1,LSL#2|3-235-129-5
53554|code|CBNZ            R4, loc_D13C|28-185
53556|code|B               loc_D15A|17-224
53558|code|LDR             R5, [R5]|45-104
53560|code|LDR             R4, [R5]|44-104
53562|code|CBZ             R4, loc_D15A|116-177
53564|code|LDR             R0, [R4,#8]|160-104
53566|code|MOV             R1, R7|57-70
53568|code|LDR             R3, [R6,#0xC]|243-104
53570|code|BLX             R3|152-71
53572|code|CMP             R0, #0|0-40
53574|code|BNE             loc_D136|246-209
53576|code|LDR             R3, [R4]|35-104
53578|code|MOV             R0, R4|32-70
53580|code|LDR             R4, [R4,#4]|100-104
53582|code|STR             R3, [R5]|43-96
53584|code|BL              sub_CD48|255-247-250-253
53588|code|LDR             R3, [R6]|51-104
53590|code|SUBS            R3, #1|1-59
53592|code|STR             R3, [R6]|51-96
53594|code|MOV             R0, R4|32-70
53596|code|POP             {R3-R7,PC}|248-189
53598|code|BLX             __errno_location|252-247-88-233
53602|code|MOV             R4, R7|60-70
53604|code|MOVS            R3, #0x16|22-35
53606|code|STR             R3, [R0]|3-96
53608|code|B               loc_D15A|247-231
53610|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|7-72
53612|code|MOVW            R2, #0x127|64-242-39-18
53616|code|LDR             R1, =aSrcHashC; "../src/hash.c"|6-73
53618|code|LDR             R3, =aHashRemove; "hash_remove"|7-75
53620|code|BLX             __assert_fail|252-247-214-233
53624|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|6-72
53626|code|MOV.W           R2, #0x120|79-244-144-114
53630|code|LDR             R1, =aSrcHashC; "../src/hash.c"|3-73
53632|code|LDR             R3, =aHashRemove; "hash_remove"|3-75
53634|code|BLX             __assert_fail|252-247-208-233
53638|data|ALIGN 4|0-191
53640|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53644|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53648|data|DCD aHashRemove; "hash_remove"|160-253-0-0
53652|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53656|code|PUSH.W          {R4-R10,LR}|45-233-240-71
53660|code|MOV             R4, R0|4-70
53662|code|MOV             R5, R1|13-70
53664|code|MOV             R9, R2|145-70
53666|code|CMP             R0, #0|0-40
53668|code|BEQ             loc_D21E|59-208
53670|code|CMP             R1, #0|0-41
53672|code|BEQ             loc_D210|50-208
53674|code|LDR             R2, [R0,#0x18]|130-105
53676|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53684|code|CMP             R2, R3|154-66
53686|code|BNE             loc_D22C|57-209
53688|code|LDR             R3, [R0,#4]|67-104
53690|code|MOV.W           R8, #0|79-240-0-8
53694|code|CMP             R3, #0|0-43
53696|code|IT GT|200-191
53698|code|MOVGT           R10, R8|194-70
53700|code|BLE             loc_D20A|33-221
53702|code|LDR             R7, [R4,#8]|167-104
53704|code|ADD.W           R7, R7, R10,LSL#2|7-235-138-7
53708|code|LDR             R6, [R7]|62-104
53710|code|CBZ             R6, loc_D200|190-177
53712|code|LDR             R0, [R6,#4]|112-104
53714|code|MOV             R1, R9|73-70
53716|code|BLX             R5|168-71
53718|code|CMP             R0, #0|0-40
53720|code|IT LE|216-191
53722|code|MOVLE           R7, R6|55-70
53724|code|BLE             loc_D1CC|246-221
53726|code|LDR             R3, [R4,#0x10]|35-105
53728|code|CBZ             R3, loc_D1E6|11-177
53730|code|LDR             R0, [R6,#4]|112-104
53732|code|BLX             R3|152-71
53734|code|LDR             R3, [R6]|51-104
53736|code|MOV             R0, R6|48-70
53738|code|ADD.W           R8, R8, #1|8-241-1-8
53742|code|STR             R3, [R7]|59-96
53744|code|BL              sub_CD48|255-247-170-253
53748|code|LDR             R3, [R4]|35-104
53750|code|LDR             R6, [R7]|62-104
53752|code|SUBS            R3, #1|1-59
53754|code|STR             R3, [R4]|35-96
53756|code|CMP             R6, #0|0-46
53758|code|BNE             loc_D1D0|231-209
53760|code|LDR             R3, [R4,#4]|99-104
53762|code|ADD.W           R10, R10, #1|10-241-1-10
53766|code|CMP             R3, R10|83-69
53768|code|BGT             loc_D1C6|221-220
53770|code|MOV             R0, R8|64-70
53772|code|POP.W           {R4-R10,PC}|189-232-240-135
53776|code|BLX             __errno_location|252-247-254-232
53780|code|MOV.W           R8, #0xFFFFFFFF|79-240-255-56
53784|code|MOVS            R3, #0x16|22-35
53786|code|STR             R3, [R0]|3-96
53788|code|B               loc_D20A|245-231
53790|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|7-72
53792|code|MOVW            R2, #0x13F|64-242-63-18
53796|code|LDR             R1, =aSrcHashC; "../src/hash.c"|6-73
53798|code|LDR             R3, =aHashDeleteIf; "hash_delete_if"|7-75
53800|code|BLX             __assert_fail|252-247-124-233
53804|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
53806|code|MOVW            R2, #0x145|64-242-69-18
53810|code|LDR             R1, =aSrcHashC; "../src/hash.c"|3-73
53812|code|LDR             R3, =aHashDeleteIf; "hash_delete_if"|3-75
53814|code|BLX             __assert_fail|252-247-118-233
53818|data|ALIGN 4|0-191
53820|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53824|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53828|data|DCD aHashDeleteIf; "hash_delete_if"|172-253-0-0
53832|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53836|code|PUSH.W          {R3-R9,LR}|45-233-248-67
53840|code|MOV             R5, R0|5-70
53842|code|MOV             R4, R1|12-70
53844|code|MOV             R8, R2|144-70
53846|code|CMP             R0, #0|0-40
53848|code|BEQ             loc_D2AE|41-208
53850|code|CBZ             R1, loc_D2A0|9-179
53852|code|LDR             R2, [R0,#0x18]|130-105
53854|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53862|code|CMP             R2, R3|154-66
53864|code|BNE             loc_D2BC|40-209
53866|code|LDR             R3, [R0,#4]|67-104
53868|code|MOVS            R7, #0|0-39
53870|code|CMP             R3, #0|0-43
53872|code|IT GT|200-191
53874|code|MOVGT           R9, R7|185-70
53876|code|BLE             loc_D29A|17-221
53878|code|LDR             R2, [R5,#8]|170-104
53880|code|LDR.W           R6, [R2,R9,LSL#2]|82-248-41-96
53884|code|CBZ             R6, loc_D292|78-177
53886|code|LDR             R0, [R6,#4]|112-104
53888|code|MOV             R1, R8|65-70
53890|code|BLX             R4|160-71
53892|code|LDR             R6, [R6]|54-104
53894|code|CMP             R0, #0|0-40
53896|code|IT GT|200-191
53898|code|ADDGT           R7, #1|1-55
53900|code|CMP             R6, #0|0-46
53902|code|BNE             loc_D27E|246-209
53904|code|LDR             R3, [R5,#4]|107-104
53906|code|ADD.W           R9, R9, #1|9-241-1-9
53910|code|CMP             R3, R9|75-69
53912|code|BGT             loc_D276|237-220
53914|code|MOV             R0, R7|56-70
53916|code|POP.W           {R3-R9,PC}|189-232-248-131
53920|code|BLX             __errno_location|252-247-182-232
53924|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
53928|code|MOVS            R3, #0x16|22-35
53930|code|STR             R3, [R0]|3-96
53932|code|B               loc_D29A|245-231
53934|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|7-72
53936|code|MOV.W           R2, #0x162|79-244-177-114
53940|code|LDR             R1, =aSrcHashC; "../src/hash.c"|6-73
53942|code|LDR             R3, =aHashForEach; "hash_for_each"|7-75
53944|code|BLX             __assert_fail|252-247-52-233
53948|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
53950|code|MOV.W           R2, #0x168|79-244-180-114
53954|code|LDR             R1, =aSrcHashC; "../src/hash.c"|3-73
53956|code|LDR             R3, =aHashForEach; "hash_for_each"|3-75
53958|code|BLX             __assert_fail|252-247-46-233
53962|data|ALIGN 4|0-191
53964|data|DCD aHVoid0; "h != ((void *)0)"|252-253-0-0
53968|data|DCD aSrcHashC; "../src/hash.c"|224-253-0-0
53972|data|DCD aHashForEach; "hash_for_each"|188-253-0-0
53976|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|16-254-0-0
53980|code|LDRB            R3, [R0]|3-120
53982|code|CBZ             R3, loc_D2F2|67-177
53984|code|MOV             R2, R0|2-70
53986|code|MOVS            R0, #0|0-32
53988|code|ADD.W           R0, R3, R0,LSL#5|3-235-64-16
53992|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
53996|code|CMP             R3, #0|0-43
53998|code|BNE             loc_D2E4|249-209
54000|code|BX              LR|112-71
54002|code|MOV             R0, R3|24-70
54004|code|BX              LR|112-71
54006|data|ALIGN 4|0-191
54008|code|CMP             R0, #3|3-40
54010|code|PUSH            {R4-R6,LR}|112-181
54012|code|MOV             R4, R0|4-70
54014|code|SUB             SP, SP, #8|130-176
54016|code|BLS             loc_D34A|35-217
54018|code|CMP             R1, #0|0-41
54020|code|BEQ             loc_D358|40-208
54022|code|LDR             R5, [R1]|13-104
54024|code|CBZ             R5, loc_D314|37-177
54026|code|LDR             R3, [R5]|43-104
54028|code|STR             R3, [R1]|11-96
54030|code|MOV             R0, R5|40-70
54032|code|ADD             SP, SP, #8|2-176
54034|code|POP             {R4-R6,PC}|112-189
54036|code|LSLS            R6, R0, #5|70-1
54038|code|STR             R1, [SP,#0x18+var_14]|1-145
54040|code|MOV             R0, R6; size|48-70
54042|code|BLX             malloc|252-247-46-232
54046|code|LDR             R1, [SP,#0x18+var_14]|1-153
54048|code|STR             R0, [R1]|8-96
54050|code|CBZ             R0, loc_D340|104-177
54052|code|SUBS            R6, R6, R4|54-27
54054|code|ADDS            R6, R0, R6|134-25
54056|code|CMP             R0, R6|176-66
54058|code|BCC             loc_D330|1-211
54060|code|B               loc_D338|4-224
54062|code|MOV             R0, R3|24-70
54064|code|ADDS            R3, R0, R4|3-25
54066|code|STR             R3, [R0]|3-96
54068|code|CMP             R6, R3|158-66
54070|code|BHI             loc_D32E|250-216
54072|code|MOVS            R3, #0|0-35
54074|code|STR             R3, [R6]|51-96
54076|code|LDR             R3, [R1]|11-104
54078|code|CBNZ            R3, loc_D366|147-185
54080|code|BLX             __errno_location|252-247-102-232
54084|code|MOVS            R3, #0xC|12-35
54086|code|STR             R3, [R0]|3-96
54088|code|B               loc_D30E|225-231
54090|code|LDR             R0, =aSizeSizeofVoid; "size >= sizeof(void *)"|8-72
54092|code|MOVW            R2, #0x30B; line|64-242-11-50
54096|code|LDR             R1, =aSrcListC; "../src/list.c"|7-73
54098|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|8-75
54100|code|BLX             __assert_fail|252-247-230-232
54104|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|7-72
54106|code|MOV.W           R2, #0x30C; line|79-244-67-114
54110|code|LDR             R1, =aSrcListC; "../src/list.c"|4-73
54112|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|4-75
54114|code|BLX             __assert_fail|252-247-224-232
54118|code|MOV             R5, R3|29-70
54120|code|B               loc_D30A|207-231
54122|data|ALIGN 4|0-191
54124|data|DCD aSizeSizeofVoid; "size >= sizeof(void *)"|196-255-0-0
54128|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
54132|data|DCD aListAllocAux; "list_alloc_aux"|52-254-0-0
54136|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|236-255-0-0
54140|code|PUSH            {R3-R7,LR}|248-181
54142|code|MOV             R5, R0|5-70
54144|code|MOV             R4, R1|12-70
54146|code|MOV             R6, R2|22-70
54148|code|CMP             R0, #0|0-40
54150|code|BEQ             loc_D468|111-208
54152|code|LDR             R2, [R0,#0x14]|66-105
54154|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54162|code|CMP             R2, R3|154-66
54164|code|BNE             loc_D44C|90-209
54166|code|CMP             R1, #0|0-41
54168|code|BEQ             loc_D43E|81-208
54170|code|CMP             R6, #0|0-46
54172|code|BEQ             loc_D45A|93-208
54174|code|MOVS            R0, #8|8-32
54176|code|LDR             R1, =unk_1887C|53-73
54178|code|BL              sub_D2F8|255-247-169-255
54182|code|CMP             R0, #0|0-40
54184|code|BEQ             loc_D412|51-208
54186|code|STR             R6, [R0]|6-96
54188|code|LDR             R3, [R4]|35-104
54190|code|STR             R3, [R0,#4]|67-96
54192|code|CMP             R3, #0|0-43
54194|code|BEQ             loc_D40C|43-208
54196|code|STR             R0, [R4]|32-96
54198|code|LDR             R2, [R5,#0x10]|42-105
54200|code|LDR             R3, [R5,#8]|171-104
54202|code|ADDS            R2, #1|1-50
54204|code|STR             R2, [R5,#0x10]|42-97
54206|code|CBZ             R3, loc_D408|27-179
54208|code|LDR             R7, [R3,#0x10]|31-105
54210|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
54218|code|CMP             R7, R2|151-66
54220|code|IT EQ|8-191
54222|code|ADDEQ.W         R12, R0, #4|0-241-4-12
54226|code|BEQ             loc_D3F8|17-208
54228|code|B               loc_D422|37-224
54230|code|LDR             R2, [R3,#4]|90-104
54232|code|LDR             R5, [R0,#4]|69-104
54234|code|CMP             R2, R5|170-66
54236|code|ITT EQ|4-191
54238|code|STREQ           R0, [R3,#4]|88-96
54240|code|MOVEQ           R2, R0|2-70
54242|code|LDR             R1, [R1]|9-104
54244|code|CMP             R2, R1|138-66
54246|code|BEQ             loc_D3EE|2-208
54248|code|LDR             R1, [R1,#4]|73-104
54250|code|CMP             R2, R1|138-66
54252|code|BNE             loc_D430|32-209
54254|code|LDR             R3, [R3,#0xC]|219-104
54256|code|CBZ             R3, loc_D408|83-177
54258|code|LDR             R2, [R3,#0x10]|26-105
54260|code|CMP             R2, R7|186-66
54262|code|BNE             loc_D422|20-209
54264|code|LDR             R1, [R3,#8]|153-104
54266|code|CMP             R1, R4|161-66
54268|code|BNE             loc_D3D6|235-209
54270|code|MOV             R1, R12|97-70
54272|code|STR.W           R12, [R3,#8]|195-248-8-192
54276|code|LDR             R2, [R3,#4]|90-104
54278|code|B               loc_D3E2|236-231
54280|code|MOV             R0, R6|48-70
54282|code|POP             {R3-R7,PC}|248-189
54284|code|ADDS            R3, R0, #4|3-29
54286|code|STR             R3, [R5,#4]|107-96
54288|code|B               loc_D3B4|208-231
54290|code|LDR             R0, =aSrcListC; "../src/list.c"|26-72
54292|code|MOV.W           R1, #0x29C|79-244-39-113
54296|code|LDR             R2, =aListNodeCreate; "list node create"|25-74
54298|code|POP.W           {R3-R7,LR}|189-232-248-64
54302|code|B.W             sub_A004|252-247-241-189
54306|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|24-72
54308|code|MOVW            R2, #0x2A3; line|64-242-163-34
54312|code|LDR             R1, =aSrcListC; "../src/list.c"|20-73
54314|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|23-75
54316|code|BLX             __assert_fail|252-247-122-232
54320|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|22-72
54322|code|MOV.W           R2, #0x2A8; line|79-244-42-114
54326|code|LDR             R1, =aSrcListC; "../src/list.c"|17-73
54328|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|19-75
54330|code|BLX             __assert_fail|252-247-116-232
54334|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|20-72
54336|code|MOVW            R2, #0x299; line|64-242-153-34
54340|code|LDR             R1, =aSrcListC; "../src/list.c"|13-73
54342|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|16-75
54344|code|BLX             __assert_fail|252-247-108-232
54348|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|17-72
54350|code|MOVW            R2, #0x297; line|64-242-151-34
54354|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
54356|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|12-75
54358|code|BLX             __assert_fail|252-247-102-232
54362|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|15-72
54364|code|MOVW            R2, #0x29A; line|64-242-154-34
54368|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
54370|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|9-75
54372|code|BLX             __assert_fail|252-247-94-232
54376|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|12-72
54378|code|MOVW            R2, #0x296; line|64-242-150-34
54382|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
54384|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|5-75
54386|code|BLX             __assert_fail|252-247-88-232
54390|data|ALIGN 4|0-191
54392|data|DCD unk_1887C|124-136-1-0
54396|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
54400|data|DCD aListNodeCreate; "list node create"|52-0-1-0
54404|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
54408|data|DCD aListNodeCreate_0; "list_node_create"|68-254-0-0
54412|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|96-0-1-0
54416|data|DCD aPpVoid0; "pp != ((void *)0)"|32-0-1-0
54420|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
54424|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
54428|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
54432|code|PUSH            {R3,LR}|8-181
54434|code|CBZ             R0, loc_D4AE|32-177
54436|code|CBZ             R1, loc_D4BC|81-177
54438|code|LDR             R3, [R1]|11-104
54440|code|STR             R3, [R0]|3-96
54442|code|STR             R0, [R1]|8-96
54444|code|POP             {R3,PC}|8-189
54446|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
54448|code|MOVW            R2, #0x329; line|64-242-41-50
54452|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
54454|code|LDR             R3, =aListFreeAux; "list_free_aux"|7-75
54456|code|BLX             __assert_fail|252-247-52-232
54460|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|6-72
54462|code|MOVW            R2, #0x32A; line|64-242-42-50
54466|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
54468|code|LDR             R3, =aListFreeAux; "list_free_aux"|3-75
54470|code|BLX             __assert_fail|252-247-46-232
54474|data|ALIGN 4|0-191
54476|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
54480|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
54484|data|DCD aListFreeAux; "list_free_aux"|88-254-0-0
54488|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|236-255-0-0
54492|code|PUSH            {R3-R7,LR}|248-181
54494|code|CMP             R0, #0|0-40
54496|code|BEQ             loc_D58E|85-208
54498|code|LDR             R2, [R0,#0x14]|66-105
54500|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54508|code|CMP             R2, R3|154-66
54510|code|BNE             loc_D580|71-209
54512|code|CMP             R1, #0|0-41
54514|code|BEQ             loc_D59C|83-208
54516|code|LDR             R3, [R1]|11-104
54518|code|CMP             R3, #0|0-43
54520|code|BEQ             loc_D560|50-208
54522|code|LDR             R2, [R3,#4]|90-104
54524|code|LDR             R4, [R3]|28-104
54526|code|STR             R2, [R1]|10-96
54528|code|CMP             R2, #0|0-42
54530|code|BEQ             loc_D55C|43-208
54532|code|LDR             R5, [R0,#0x10]|5-105
54534|code|LDR             R2, [R0,#8]|130-104
54536|code|SUBS            R5, #1|1-61
54538|code|STR             R5, [R0,#0x10]|5-97
54540|code|CBZ             R2, loc_D550|2-179
54542|code|LDR             R6, [R2,#0x10]|22-105
54544|code|MOV             R0, #0xDEADBEEF|75-246-239-96-205-246-173-96
54552|code|ADDS            R7, R3, #4|31-29
54554|code|CMP             R6, R0|134-66
54556|code|BEQ             loc_D540|16-208
54558|code|B               loc_D564|33-224
54560|code|LDR             R5, [R2,#8]|149-104
54562|code|CMP             R5, R7|189-66
54564|code|ITT EQ|4-191
54566|code|STREQ           R1, [R2,#8]|145-96
54568|code|MOVEQ           R5, R1|13-70
54570|code|LDR             R5, [R5]|45-104
54572|code|CMP             R5, R0|133-66
54574|code|BEQ             loc_D536|2-208
54576|code|LDR             R5, [R5,#4]|109-104
54578|code|CMP             R5, R0|133-66
54580|code|BNE             loc_D572|29-209
54582|code|LDR             R2, [R2,#0xC]|210-104
54584|code|CBZ             R2, loc_D550|82-177
54586|code|LDR             R0, [R2,#0x10]|16-105
54588|code|CMP             R0, R6|176-66
54590|code|BNE             loc_D564|17-209
54592|code|LDR             R0, [R2,#4]|80-104
54594|code|CMP             R0, R3|152-66
54596|code|BNE             loc_D520|236-209
54598|code|LDR             R0, [R3,#4]|88-104
54600|code|MOV             R5, R1|13-70
54602|code|STR             R1, [R2,#8]|145-96
54604|code|STR             R0, [R2,#4]|80-96
54606|code|B               loc_D52A|236-231
54608|code|MOV             R0, R3|24-70
54610|code|LDR             R1, =unk_1887C|22-73
54612|code|BL              sub_D4A0|255-247-164-255
54616|code|MOV             R0, R4|32-70
54618|code|POP             {R3-R7,PC}|248-189
54620|code|STR             R1, [R0,#4]|65-96
54622|code|B               loc_D504|209-231
54624|code|MOV             R4, R3|28-70
54626|code|B               loc_D558|249-231
54628|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|18-72
54630|code|MOVW            R2, #0x2C6; line|64-242-198-34
54634|code|LDR             R1, =aSrcListC; "../src/list.c"|18-73
54636|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|18-75
54638|code|BLX             __assert_fail|251-247-218-239
54642|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|18-72
54644|code|MOVW            R2, #0x2CB; line|64-242-203-34
54648|code|LDR             R1, =aSrcListC; "../src/list.c"|14-73
54650|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|15-75
54652|code|BLX             __assert_fail|251-247-210-239
54656|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|15-72
54658|code|MOV.W           R2, #0x2BC; line|79-244-47-114
54662|code|LDR             R1, =aSrcListC; "../src/list.c"|11-73
54664|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|11-75
54666|code|BLX             __assert_fail|251-247-204-239
54670|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|13-72
54672|code|MOVW            R2, #0x2BB; line|64-242-187-34
54676|code|LDR             R1, =aSrcListC; "../src/list.c"|7-73
54678|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|8-75
54680|code|BLX             __assert_fail|251-247-196-239
54684|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|10-72
54686|code|MOVW            R2, #0x2BE; line|64-242-190-34
54690|code|LDR             R1, =aSrcListC; "../src/list.c"|4-73
54692|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|4-75
54694|code|BLX             __assert_fail|251-247-190-239
54698|data|ALIGN 4|0-191
54700|data|DCD unk_1887C|124-136-1-0
54704|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
54708|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
54712|data|DCD aListNodeDestro; "list_node_destroy"|104-254-0-0
54716|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|96-0-1-0
54720|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
54724|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
54728|data|DCD aPpVoid0; "pp != ((void *)0)"|32-0-1-0
54732|code|PUSH            {R4,LR}|16-181
54734|code|MOV             R4, R0|4-70
54736|code|LDR             R1, =unk_18880|11-73
54738|code|MOVS            R0, #0x18|24-32
54740|code|BL              sub_D2F8|255-247-144-254
54744|code|CBZ             R0, loc_D5F2|88-177
54746|code|MOVS            R3, #0|0-35
54748|code|MOVW            R2, #0xBEEF|75-246-239-98
54752|code|STR             R3, [R0]|3-96
54754|code|MOVT.W          R2, #0xDEAD|205-246-173-98
54758|code|STR             R0, [R0,#4]|64-96
54760|code|STR             R3, [R0,#8]|131-96
54762|code|STR             R4, [R0,#0xC]|196-96
54764|code|STR             R3, [R0,#0x10]|3-97
54766|code|STR             R2, [R0,#0x14]|66-97
54768|code|POP             {R4,PC}|16-189
54770|code|LDR             R0, =aSrcListC; "../src/list.c"|4-72
54772|code|MOVS            R1, #0xDE|222-33
54774|code|LDR             R2, =aListCreate; "list create"|4-74
54776|code|POP.W           {R4,LR}|189-232-16-64
54780|code|B.W             sub_A004|252-247-2-189
54784|data|DCD unk_18880|128-136-1-0
54788|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
54792|data|DCD aListCreate; "list create"|152-0-1-0
54796|code|PUSH            {R3-R7,LR}|248-181
54798|code|MOV             R7, R0|7-70
54800|code|CMP             R0, #0|0-40
54802|code|BEQ             loc_D69C|67-208
54804|code|LDR             R2, [R0,#0x14]|66-105
54806|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54814|code|CMP             R2, R3|154-66
54816|code|BNE             loc_D690|54-209
54818|code|LDR             R0, [R0,#8]|128-104
54820|code|CBZ             R0, loc_D64E|152-177
54822|code|LDR             R6, [R0,#0x10]|6-105
54824|code|CMP             R6, R2|150-66
54826|code|ITT EQ|4-191
54828|code|MOVEQW          R5, #0x4110|68-242-16-21
54832|code|MOVTEQ.W        R5, #0x2152|194-242-82-21
54836|code|BEQ             loc_D640|4-208
54838|code|B               loc_D684|37-224
54840|code|LDR             R3, [R4,#0x10]|35-105
54842|code|CMP             R3, R6|179-66
54844|code|BNE             loc_D684|34-209
54846|code|MOV             R0, R4|32-70
54848|code|LDR             R4, [R0,#0xC]|196-104
54850|code|STR             R5, [R0,#0x10]|5-97
54852|code|LDR             R1, =unk_18884|24-73
54854|code|BL              sub_D4A0|255-247-43-255
54858|code|CMP             R4, #0|0-44
54860|code|BNE             loc_D638|244-209
54862|code|LDR             R5, [R7]|61-104
54864|code|CBNZ            R5, loc_D656|13-185
54866|code|B               loc_D66E|12-224
54868|code|MOV             R5, R4|37-70
54870|code|LDM.W           R5, {R0,R4}|149-232-17-0
54874|code|CBZ             R0, loc_D662|16-177
54876|code|LDR             R3, [R7,#0xC]|251-104
54878|code|CBZ             R3, loc_D662|3-177
54880|code|BLX             R3|152-71
54882|code|MOV             R0, R5|40-70
54884|code|LDR             R1, =unk_1887C|17-73
54886|code|BL              sub_D4A0|255-247-27-255
54890|code|CMP             R4, #0|0-44
54892|code|BNE             loc_D654|242-209
54894|code|MOVW            R3, #0x4110|68-242-16-19
54898|code|MOV             R0, R7|56-70
54900|code|MOVT.W          R3, #0x2152|194-242-82-19
54904|code|LDR             R1, =unk_18880|13-73
54906|code|STR             R3, [R7,#0x14]|123-97
54908|code|POP.W           {R3-R7,LR}|189-232-248-64
54912|code|B.W             sub_D4A0|255-247-14-191
54916|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
54918|code|MOVS            R2, #0xF5; line|245-34
54920|code|LDR             R1, =aSrcListC; "../src/list.c"|11-73
54922|code|LDR             R3, =aListDestroy; "list_destroy"|12-75
54924|code|BLX             __assert_fail|251-247-74-239
54928|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
54930|code|MOVS            R2, #0xF2; line|242-34
54932|code|LDR             R1, =aSrcListC; "../src/list.c"|8-73
54934|code|LDR             R3, =aListDestroy; "list_destroy"|9-75
54936|code|BLX             __assert_fail|251-247-68-239
54940|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|9-72
54942|code|MOVS            R2, #0xF0; line|240-34
54944|code|LDR             R1, =aSrcListC; "../src/list.c"|5-73
54946|code|LDR             R3, =aListDestroy; "list_destroy"|6-75
54948|code|BLX             __assert_fail|251-247-62-239
54952|data|DCD unk_18884|132-136-1-0
54956|data|DCD unk_1887C|124-136-1-0
54960|data|DCD unk_18880|128-136-1-0
54964|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
54968|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
54972|data|DCD aListDestroy; "list_destroy"|124-254-0-0
54976|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
54980|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
54984|code|PUSH            {R3,LR}|8-181
54986|code|CBZ             R0, loc_D6E6|96-177
54988|code|LDR             R2, [R0,#0x14]|66-105
54990|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54998|code|CMP             R2, R3|154-66
55000|code|BNE             loc_D6F4|12-209
55002|code|LDR             R0, [R0,#0x10]|0-105
55004|code|RSBS.W          R0, R0, #1|208-241-1-0
55008|code|IT CC|56-191
55010|code|MOVCC           R0, #0|0-32
55012|code|POP             {R3,PC}|8-189
55014|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
55016|code|MOV.W           R2, #0x110|79-244-136-114
55020|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55022|code|LDR             R3, =aListIsEmpty; "list_is_empty"|7-75
55024|code|BLX             __assert_fail|251-247-24-239
55028|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
55030|code|MOV.W           R2, #0x112|79-244-137-114
55034|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55036|code|LDR             R3, =aListIsEmpty; "list_is_empty"|3-75
55038|code|BLX             __assert_fail|251-247-18-239
55042|data|ALIGN 4|0-191
55044|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55048|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55052|data|DCD aListIsEmpty; "list_is_empty"|140-254-0-0
55056|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55060|code|PUSH            {R3,LR}|8-181
55062|code|CBZ             R0, loc_D72A|64-177
55064|code|LDR             R2, [R0,#0x14]|66-105
55066|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55074|code|CMP             R2, R3|154-66
55076|code|BNE             loc_D738|8-209
55078|code|LDR             R0, [R0,#0x10]|0-105
55080|code|POP             {R3,PC}|8-189
55082|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
55084|code|MOV.W           R2, #0x11E|79-244-143-114
55088|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55090|code|LDR             R3, =aListCount; "list_count"|7-75
55092|code|BLX             __assert_fail|251-247-246-238
55096|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
55098|code|MOV.W           R2, #0x120|79-244-144-114
55102|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55104|code|LDR             R3, =aListCount; "list_count"|3-75
55106|code|BLX             __assert_fail|251-247-240-238
55110|data|ALIGN 4|0-191
55112|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55116|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55120|data|DCD aListCount; "list_count"|156-254-0-0
55124|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55128|code|PUSH            {R3,LR}|8-181
55130|code|MOV             R2, R1|10-70
55132|code|CBZ             R0, loc_D778|96-177
55134|code|CBZ             R1, loc_D794|201-177
55136|code|LDR             R1, [R0,#0x14]|65-105
55138|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55146|code|CMP             R1, R3|153-66
55148|code|BNE             loc_D786|11-209
55150|code|LDR             R1, [R0,#4]|65-104
55152|code|POP.W           {R3,LR}|189-232-8-64
55156|code|B.W             sub_D37C|255-247-2-190
55160|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
55162|code|MOV.W           R2, #0x12C; line|79-244-150-114
55166|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
55168|code|LDR             R3, =aListAppend; "list_append"|10-75
55170|code|BLX             __assert_fail|251-247-208-238
55174|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
55176|code|MOVW            R2, #0x12F; line|64-242-47-18
55180|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55182|code|LDR             R3, =aListAppend; "list_append"|7-75
55184|code|BLX             __assert_fail|251-247-200-238
55188|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
55190|code|MOVW            R2, #0x12D; line|64-242-45-18
55194|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55196|code|LDR             R3, =aListAppend; "list_append"|3-75
55198|code|BLX             __assert_fail|251-247-194-238
55202|data|ALIGN 4|0-191
55204|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55208|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55212|data|DCD aListAppend; "list_append"|168-254-0-0
55216|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55220|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
55224|code|PUSH            {R3,LR}|8-181
55226|code|MOV             R2, R1|10-70
55228|code|CBZ             R0, loc_D7D8|96-177
55230|code|CBZ             R1, loc_D7F4|201-177
55232|code|LDR             R1, [R0,#0x14]|65-105
55234|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55242|code|CMP             R1, R3|153-66
55244|code|BNE             loc_D7E6|11-209
55246|code|MOV             R1, R0|1-70
55248|code|POP.W           {R3,LR}|189-232-8-64
55252|code|B.W             sub_D37C|255-247-210-189
55256|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
55258|code|MOVW            R2, #0x13B|64-242-59-18
55262|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
55264|code|LDR             R3, =aListPrepend; "list_prepend"|10-75
55266|code|BLX             __assert_fail|251-247-160-238
55270|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
55272|code|MOV.W           R2, #0x13E|79-244-159-114
55276|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55278|code|LDR             R3, =aListPrepend; "list_prepend"|7-75
55280|code|BLX             __assert_fail|251-247-152-238
55284|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
55286|code|MOV.W           R2, #0x13C|79-244-158-114
55290|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55292|code|LDR             R3, =aListPrepend; "list_prepend"|3-75
55294|code|BLX             __assert_fail|251-247-146-238
55298|data|ALIGN 4|0-191
55300|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55304|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55308|data|DCD aListPrepend; "list_prepend"|180-254-0-0
55312|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55316|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
55320|code|PUSH            {R4-R6,LR}|112-181
55322|code|MOV             R4, R1|12-70
55324|code|MOV             R6, R2|22-70
55326|code|CBZ             R0, loc_D852|192-177
55328|code|CMP             R1, #0|0-41
55330|code|BEQ             loc_D86E|36-208
55332|code|LDR             R2, [R0,#0x14]|66-105
55334|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55342|code|CMP             R2, R3|154-66
55344|code|BNE             loc_D860|22-209
55346|code|LDR             R5, [R0]|5-104
55348|code|CBNZ            R5, loc_D83C|21-185
55350|code|B               loc_D84E|10-224
55352|code|LDR             R5, [R5,#4]|109-104
55354|code|CBZ             R5, loc_D84A|53-177
55356|code|LDR             R0, [R5]|40-104
55358|code|MOV             R1, R6|49-70
55360|code|BLX             R4|160-71
55362|code|CMP             R0, #0|0-40
55364|code|BEQ             loc_D838|248-208
55366|code|LDR             R0, [R5]|40-104
55368|code|POP             {R4-R6,PC}|112-189
55370|code|MOV             R0, R5|40-70
55372|code|POP             {R4-R6,PC}|112-189
55374|code|MOV             R0, R5|40-70
55376|code|POP             {R4-R6,PC}|112-189
55378|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
55380|code|MOVW            R2, #0x14B|64-242-75-18
55384|code|LDR             R1, =aSrcListC; "../src/list.c"|9-73
55386|code|LDR             R3, =aListFindFirst; "list_find_first"|10-75
55388|code|BLX             __assert_fail|251-247-98-238
55392|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|9-72
55394|code|MOV.W           R2, #0x14E|79-244-167-114
55398|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55400|code|LDR             R3, =aListFindFirst; "list_find_first"|6-75
55402|code|BLX             __assert_fail|251-247-92-238
55406|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
55408|code|MOV.W           R2, #0x14C|79-244-166-114
55412|code|LDR             R1, =aSrcListC; "../src/list.c"|2-73
55414|code|LDR             R3, =aListFindFirst; "list_find_first"|3-75
55416|code|BLX             __assert_fail|251-247-84-238
55420|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55424|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55428|data|DCD aListFindFirst; "list_find_first"|196-254-0-0
55432|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55436|data|DCD aFVoid0; "f != ((void *)0)"|164-0-1-0
55440|code|PUSH.W          {R4-R8,LR}|45-233-240-65
55444|code|MOV             R5, R0|5-70
55446|code|MOV             R4, R1|12-70
55448|code|MOV             R7, R2|23-70
55450|code|CMP             R0, #0|0-40
55452|code|BEQ             loc_D8EC|38-208
55454|code|CMP             R1, #0|0-41
55456|code|BEQ             loc_D908|50-208
55458|code|LDR             R2, [R0,#0x14]|66-105
55460|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55468|code|CMP             R2, R3|154-66
55470|code|ITT EQ|4-191
55472|code|MOVEQ           R6, R0|6-70
55474|code|MOVEQ.W         R8, #0|79-240-0-8
55478|code|BNE             loc_D8FA|32-209
55480|code|LDR             R3, [R6]|51-104
55482|code|CBZ             R3, loc_D8CE|67-177
55484|code|LDR             R0, [R3]|24-104
55486|code|MOV             R1, R7|57-70
55488|code|BLX             R4|160-71
55490|code|CBNZ            R0, loc_D8D4|56-185
55492|code|LDR             R6, [R6]|54-104
55494|code|ADDS            R6, #4|4-54
55496|code|LDR             R3, [R6]|51-104
55498|code|CMP             R3, #0|0-43
55500|code|BNE             loc_D8BC|246-209
55502|code|MOV             R0, R8|64-70
55504|code|POP.W           {R4-R8,PC}|189-232-240-129
55508|code|MOV             R0, R5|40-70
55510|code|MOV             R1, R6|49-70
55512|code|BL              sub_D4DC|255-247-0-254
55516|code|CMP             R0, #0|0-40
55518|code|BEQ             loc_D8B8|235-208
55520|code|LDR             R3, [R5,#0xC]|235-104
55522|code|CBZ             R3, loc_D8E6|3-177
55524|code|BLX             R3|152-71
55526|code|ADD.W           R8, R8, #1|8-241-1-8
55530|code|B               loc_D8B8|229-231
55532|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
55534|code|MOVW            R2, #0x161|64-242-97-18
55538|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
55540|code|LDR             R3, =aListDeleteAll; "list_delete_all"|10-75
55542|code|BLX             __assert_fail|251-247-22-238
55546|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
55548|code|MOV.W           R2, #0x164|79-244-178-114
55552|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55554|code|LDR             R3, =aListDeleteAll; "list_delete_all"|7-75
55556|code|BLX             __assert_fail|251-247-14-238
55560|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
55562|code|MOV.W           R2, #0x162|79-244-177-114
55566|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55568|code|LDR             R3, =aListDeleteAll; "list_delete_all"|3-75
55570|code|BLX             __assert_fail|251-247-8-238
55574|data|ALIGN 4|0-191
55576|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55580|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55584|data|DCD aListDeleteAll; "list_delete_all"|212-254-0-0
55588|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55592|data|DCD aFVoid0; "f != ((void *)0)"|164-0-1-0
55596|code|PUSH            {R3-R7,LR}|248-181
55598|code|MOV             R4, R1|12-70
55600|code|MOV             R7, R2|23-70
55602|code|CBZ             R0, loc_D980|40-179
55604|code|CBZ             R1, loc_D972|233-177
55606|code|LDR             R2, [R0,#0x14]|66-105
55608|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55616|code|CMP             R2, R3|154-66
55618|code|BNE             loc_D964|15-209
55620|code|LDR             R5, [R0]|5-104
55622|code|MOV             R6, R5|46-70
55624|code|CBZ             R5, loc_D960|85-177
55626|code|MOVS            R6, #0|0-38
55628|code|B               loc_D952|1-224
55630|code|LDR             R5, [R5,#4]|109-104
55632|code|CBZ             R5, loc_D960|53-177
55634|code|LDR             R0, [R5]|40-104
55636|code|MOV             R1, R7|57-70
55638|code|BLX             R4|160-71
55640|code|ADDS            R6, #1|1-54
55642|code|CMP             R0, #0|0-40
55644|code|BGE             loc_D94E|247-218
55646|code|NEGS            R6, R6|118-66
55648|code|MOV             R0, R6|48-70
55650|code|POP             {R3-R7,PC}|248-189
55652|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
55654|code|MOV.W           R2, #0x180|79-244-192-114
55658|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
55660|code|LDR             R3, =aListForEach; "list_for_each"|10-75
55662|code|BLX             __assert_fail|251-247-218-237
55666|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|10-72
55668|code|MOV.W           R2, #0x17E|79-244-191-114
55672|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55674|code|LDR             R3, =aListForEach; "list_for_each"|7-75
55676|code|BLX             __assert_fail|251-247-210-237
55680|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
55682|code|MOVW            R2, #0x17D|64-242-125-18
55686|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55688|code|LDR             R3, =aListForEach; "list_for_each"|3-75
55690|code|BLX             __assert_fail|251-247-204-237
55694|data|ALIGN 0x10|0-191
55696|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55700|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55704|data|DCD aListForEach; "list_for_each"|228-254-0-0
55708|data|DCD aFVoid0; "f != ((void *)0)"|164-0-1-0
55712|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55716|code|PUSH.W          {R4-R8,LR}|45-233-240-65
55720|code|MOV             R8, R0|128-70
55722|code|MOV             R6, R1|14-70
55724|code|CMP             R0, #0|0-40
55726|code|BEQ             loc_DA58|83-208
55728|code|CMP             R1, #0|0-41
55730|code|BEQ             loc_DA74|95-208
55732|code|LDR             R2, [R0,#0x14]|66-105
55734|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55742|code|CMP             R2, R3|154-66
55744|code|BNE             loc_DA66|81-209
55746|code|LDR             R3, [R0,#0x10]|3-105
55748|code|CMP             R3, #1|1-43
55750|code|BLE             locret_DA1C|41-221
55752|code|LDR             R3, [R0]|3-104
55754|code|MOV             R7, R0|7-70
55756|code|ADDS            R5, R3, #4|29-29
55758|code|LDR             R3, [R3,#4]|91-104
55760|code|CBZ             R3, loc_D9EE|107-177
55762|code|LDR             R2, [R7]|58-104
55764|code|LDR             R0, [R3]|24-104
55766|code|LDR             R1, [R2]|17-104
55768|code|BLX             R6|176-71
55770|code|CMP             R0, #0|0-40
55772|code|IT LT|184-191
55774|code|MOVLT           R4, R8|68-70
55776|code|BLT             loc_DA24|32-219
55778|code|LDR             R3, [R5]|43-104
55780|code|MOV             R7, R5|47-70
55782|code|ADDS            R5, R3, #4|29-29
55784|code|LDR             R3, [R3,#4]|91-104
55786|code|CMP             R3, #0|0-43
55788|code|BNE             loc_D9D2|241-209
55790|code|LDR.W           R3, [R8,#8]|216-248-8-48
55794|code|STR.W           R5, [R8,#4]|200-248-4-80
55798|code|CBZ             R3, locret_DA1C|139-177
55800|code|LDR             R0, [R3,#0x10]|24-105
55802|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
55810|code|CMP             R0, R2|144-66
55812|code|BEQ             loc_DA0E|3-208
55814|code|B               loc_DA4A|32-224
55816|code|LDR             R2, [R3,#0x10]|26-105
55818|code|CMP             R2, R0|130-66
55820|code|BNE             loc_DA4A|29-209
55822|code|LDR             R2, [R3]|26-104
55824|code|LDR             R1, [R2]|17-104
55826|code|STR             R2, [R3,#8]|154-96
55828|code|STR             R1, [R3,#4]|89-96
55830|code|LDR             R3, [R3,#0xC]|219-104
55832|code|CMP             R3, #0|0-43
55834|code|BNE             loc_DA08|245-209
55836|code|POP.W           {R4-R8,PC}|189-232-240-129
55840|code|LDR             R4, [R4]|36-104
55842|code|ADDS            R4, #4|4-52
55844|code|LDR             R2, [R5]|42-104
55846|code|LDR             R3, [R4]|35-104
55848|code|LDR             R0, [R2]|16-104
55850|code|LDR             R1, [R3]|25-104
55852|code|BLX             R6|176-71
55854|code|CMP             R0, #0|0-40
55856|code|BGE             loc_DA20|246-218
55858|code|LDR             R2, [R5]|42-104
55860|code|CMP             R7, R4|167-66
55862|code|LDR             R1, [R4]|33-104
55864|code|LDR             R3, [R2,#4]|83-104
55866|code|STR             R1, [R2,#4]|81-96
55868|code|LDR             R2, [R5]|42-104
55870|code|STR             R2, [R4]|34-96
55872|code|STR             R3, [R5]|43-96
55874|code|BNE             loc_D9D0|197-209
55876|code|LDR             R7, [R7]|63-104
55878|code|ADDS            R7, #4|4-55
55880|code|B               loc_D9D0|194-231
55882|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|14-72
55884|code|MOV.W           R2, #0x1B0|79-244-216-114
55888|code|LDR             R1, =aSrcListC; "../src/list.c"|13-73
55890|code|LDR             R3, =aListSort; "list_sort"|14-75
55892|code|BLX             __assert_fail|251-247-102-237
55896|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|13-72
55898|code|MOVW            R2, #0x195|64-242-149-18
55902|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
55904|code|LDR             R3, =aListSort; "list_sort"|10-75
55906|code|BLX             __assert_fail|251-247-96-237
55910|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
55912|code|MOV.W           R2, #0x198|79-244-204-114
55916|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
55918|code|LDR             R3, =aListSort; "list_sort"|7-75
55920|code|BLX             __assert_fail|251-247-88-237
55924|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|8-72
55926|code|MOV.W           R2, #0x196|79-244-203-114
55930|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
55932|code|LDR             R3, =aListSort; "list_sort"|3-75
55934|code|BLX             __assert_fail|251-247-82-237
55938|data|ALIGN 4|0-191
55940|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
55944|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
55948|data|DCD aListSort; "list_sort"|244-254-0-0
55952|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
55956|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
55960|data|DCD aFVoid0; "f != ((void *)0)"|164-0-1-0
55964|code|PUSH            {R3,LR}|8-181
55966|code|MOV             R2, R1|10-70
55968|code|CBZ             R0, loc_DABC|96-177
55970|code|CBZ             R1, loc_DAD8|201-177
55972|code|LDR             R1, [R0,#0x14]|65-105
55974|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55982|code|CMP             R1, R3|153-66
55984|code|BNE             loc_DACA|11-209
55986|code|MOV             R1, R0|1-70
55988|code|POP.W           {R3,LR}|189-232-8-64
55992|code|B.W             sub_D37C|255-247-96-188
55996|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
55998|code|MOVW            R2, #0x1BF; line|64-242-191-18
56002|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
56004|code|LDR             R3, =aListPush; "list_push"|10-75
56006|code|BLX             __assert_fail|251-247-46-237
56010|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
56012|code|MOV.W           R2, #0x1C2; line|79-244-225-114
56016|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56018|code|LDR             R3, =aListPush; "list_push"|7-75
56020|code|BLX             __assert_fail|251-247-38-237
56024|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
56026|code|MOV.W           R2, #0x1C0; line|79-244-224-114
56030|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
56032|code|LDR             R3, =aListPush; "list_push"|3-75
56034|code|BLX             __assert_fail|251-247-32-237
56038|data|ALIGN 4|0-191
56040|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
56044|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56048|data|DCD aListPush; "list_push"|0-255-0-0
56052|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
56056|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
56060|code|PUSH            {R3,LR}|8-181
56062|code|CBZ             R0, loc_DB18|88-177
56064|code|LDR             R2, [R0,#0x14]|66-105
56066|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
56074|code|CMP             R2, R3|154-66
56076|code|BNE             loc_DB26|11-209
56078|code|MOV             R1, R0|1-70
56080|code|POP.W           {R3,LR}|189-232-8-64
56084|code|B.W             sub_D4DC|255-247-226-188
56088|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|6-72
56090|code|MOV.W           R2, #0x1CE|79-244-231-114
56094|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56096|code|LDR             R3, =aListPop; "list_pop"|6-75
56098|code|BLX             __assert_fail|251-247-0-237
56102|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
56104|code|MOV.W           R2, #0x1D0|79-244-232-114
56108|code|LDR             R1, =aSrcListC; "../src/list.c"|2-73
56110|code|LDR             R3, =aListPop; "list_pop"|3-75
56112|code|BLX             __assert_fail|251-247-248-236
56116|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
56120|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56124|data|DCD aListPop; "list_pop"|12-255-0-0
56128|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
56132|code|PUSH            {R3,LR}|8-181
56134|code|CBZ             R0, loc_DB5E|80-177
56136|code|LDR             R2, [R0,#0x14]|66-105
56138|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
56146|code|CMP             R2, R3|154-66
56148|code|BNE             loc_DB6C|10-209
56150|code|LDR             R0, [R0]|0-104
56152|code|CBZ             R0, locret_DB5C|0-177
56154|code|LDR             R0, [R0]|0-104
56156|code|POP             {R3,PC}|8-189
56158|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
56160|code|MOV.W           R2, #0x1DC|79-244-238-114
56164|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56166|code|LDR             R3, =aListPeek; "list_peek"|7-75
56168|code|BLX             __assert_fail|251-247-220-236
56172|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
56174|code|MOV.W           R2, #0x1DE|79-244-239-114
56178|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
56180|code|LDR             R3, =aListPeek; "list_peek"|3-75
56182|code|BLX             __assert_fail|251-247-214-236
56186|data|ALIGN 4|0-191
56188|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
56192|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56196|data|DCD aListPeek; "list_peek"|24-255-0-0
56200|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
56204|code|PUSH            {R3,LR}|8-181
56206|code|MOV             R2, R1|10-70
56208|code|CBZ             R0, loc_DBAC|96-177
56210|code|CBZ             R1, loc_DBC8|201-177
56212|code|LDR             R1, [R0,#0x14]|65-105
56214|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
56222|code|CMP             R1, R3|153-66
56224|code|BNE             loc_DBBA|11-209
56226|code|LDR             R1, [R0,#4]|65-104
56228|code|POP.W           {R3,LR}|189-232-8-64
56232|code|B.W             sub_D37C|255-247-232-187
56236|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
56238|code|MOV.W           R2, #0x1EA|79-244-245-114
56242|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
56244|code|LDR             R3, =aListEnqueue; "list_enqueue"|10-75
56246|code|BLX             __assert_fail|251-247-182-236
56250|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
56252|code|MOVW            R2, #0x1ED|64-242-237-18
56256|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56258|code|LDR             R3, =aListEnqueue; "list_enqueue"|7-75
56260|code|BLX             __assert_fail|251-247-174-236
56264|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
56266|code|MOVW            R2, #0x1EB|64-242-235-18
56270|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
56272|code|LDR             R3, =aListEnqueue; "list_enqueue"|3-75
56274|code|BLX             __assert_fail|251-247-168-236
56278|data|ALIGN 4|0-191
56280|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
56284|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56288|data|DCD aListEnqueue; "list_enqueue"|36-255-0-0
56292|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
56296|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
56300|code|PUSH            {R3,LR}|8-181
56302|code|CBZ             R0, loc_DC08|88-177
56304|code|LDR             R2, [R0,#0x14]|66-105
56306|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
56314|code|CMP             R2, R3|154-66
56316|code|BNE             loc_DC16|11-209
56318|code|MOV             R1, R0|1-70
56320|code|POP.W           {R3,LR}|189-232-8-64
56324|code|B.W             sub_D4DC|255-247-106-188
56328|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|6-72
56330|code|MOVW            R2, #0x1F9|64-242-249-18
56334|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56336|code|LDR             R3, =aListDequeue; "list_dequeue"|6-75
56338|code|BLX             __assert_fail|251-247-136-236
56342|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
56344|code|MOVW            R2, #0x1FB|64-242-251-18
56348|code|LDR             R1, =aSrcListC; "../src/list.c"|2-73
56350|code|LDR             R3, =aListDequeue; "list_dequeue"|3-75
56352|code|BLX             __assert_fail|251-247-128-236
56356|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
56360|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56364|data|DCD aListDequeue; "list_dequeue"|52-255-0-0
56368|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
56372|code|PUSH            {R4,LR}|16-181
56374|code|MOV             R4, R0|4-70
56376|code|CMP             R0, #0|0-40
56378|code|BEQ             loc_DC76|28-208
56380|code|MOVS            R0, #0x14|20-32
56382|code|LDR             R1, =unk_18884|21-73
56384|code|BL              sub_D2F8|255-247-90-251
56388|code|CBZ             R0, loc_DC66|120-177
56390|code|LDR             R3, [R4,#0x14]|99-105
56392|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
56400|code|STR             R4, [R0]|4-96
56402|code|CMP             R3, R2|147-66
56404|code|BNE             loc_DC84|22-209
56406|code|LDR             R2, [R4,#8]|162-104
56408|code|LDR             R1, [R4]|33-104
56410|code|STR             R4, [R0,#8]|132-96
56412|code|STR             R2, [R0,#0xC]|194-96
56414|code|STR             R1, [R0,#4]|65-96
56416|code|STR             R0, [R4,#8]|160-96
56418|code|STR             R3, [R0,#0x10]|3-97
56420|code|POP             {R4,PC}|16-189
56422|code|LDR             R0, =aSrcListC; "../src/list.c"|12-72
56424|code|MOVW            R1, #0x209|64-242-9-33
56428|code|LDR             R2, =aListIteratorCr; "list iterator create"|11-74
56430|code|POP.W           {R4,LR}|189-232-16-64
56434|code|B.W             sub_A004|252-247-199-185
56438|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
56440|code|MOVW            R2, #0x207; line|64-242-7-34
56444|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56446|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|9-75
56448|code|BLX             __assert_fail|251-247-80-236
56452|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-72
56454|code|MOV.W           R2, #0x20C; line|79-244-3-114
56458|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
56460|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|5-75
56462|code|BLX             __assert_fail|251-247-74-236
56466|data|ALIGN 4|0-191
56468|data|DCD unk_18884|132-136-1-0
56472|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56476|data|DCD aListIteratorCr; "list iterator create"|184-0-1-0
56480|data|DCD aLVoid0; "l != ((void *)0)"|104-252-0-0
56484|data|DCD aListIteratorCr_0; "list_iterator_create"|68-255-0-0
56488|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-0-1-0
56492|code|PUSH            {R3,LR}|8-181
56494|code|CBZ             R0, loc_DCCE|112-177
56496|code|LDR             R2, [R0,#0x10]|2-105
56498|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
56506|code|CMP             R2, R3|154-66
56508|code|BNE             loc_DCEA|21-209
56510|code|LDR             R3, [R0]|3-104
56512|code|LDR             R1, [R3,#0x14]|89-105
56514|code|CMP             R1, R2|145-66
56516|code|BNE             loc_DCDC|10-209
56518|code|LDR             R2, [R3]|26-104
56520|code|STR             R3, [R0,#8]|131-96
56522|code|STR             R2, [R0,#4]|66-96
56524|code|POP             {R3,PC}|8-189
56526|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
56528|code|MOVW            R2, #0x21A|64-242-26-34
56532|code|LDR             R1, =aSrcListC; "../src/list.c"|9-73
56534|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|10-75
56536|code|BLX             __assert_fail|251-247-36-236
56540|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|9-72
56542|code|MOVW            R2, #0x21D|64-242-29-34
56546|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56548|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|6-75
56550|code|BLX             __assert_fail|251-247-30-236
56554|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|7-72
56556|code|MOVW            R2, #0x21B|64-242-27-34
56560|code|LDR             R1, =aSrcListC; "../src/list.c"|2-73
56562|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|3-75
56564|code|BLX             __assert_fail|251-247-22-236
56568|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
56572|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56576|data|DCD aListIteratorRe; "list_iterator_reset"|92-255-0-0
56580|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|208-0-1-0
56584|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
56588|code|PUSH            {R4,LR}|16-181
56590|code|CMP             R0, #0|0-40
56592|code|BEQ             loc_DD92|63-208
56594|code|LDR             R3, [R0,#0x10]|3-105
56596|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
56604|code|CMP             R3, R2|147-66
56606|code|BNE             loc_DD84|49-209
56608|code|LDR             R1, [R0]|1-104
56610|code|LDR             R2, [R1,#0x14]|74-105
56612|code|CMP             R2, R3|154-66
56614|code|BNE             loc_DD76|38-209
56616|code|LDR             R3, [R1,#8]|139-104
56618|code|CBZ             R3, loc_DD4E|131-177
56620|code|LDR             R4, [R3,#0x10]|28-105
56622|code|CMP             R4, R2|148-66
56624|code|BNE             loc_DD68|26-209
56626|code|ADDS            R1, #8|8-49
56628|code|CMP             R0, R3|152-66
56630|code|BNE             loc_DD44|5-209
56632|code|B               loc_DD62|19-224
56634|code|LDR             R2, [R3,#0x10]|26-105
56636|code|CMP             R2, R4|162-66
56638|code|BNE             loc_DD68|19-209
56640|code|CMP             R0, R3|152-66
56642|code|BEQ             loc_DD62|14-208
56644|code|ADD.W           R1, R3, #0xC|3-241-12-1
56648|code|LDR             R3, [R3,#0xC]|219-104
56650|code|CMP             R3, #0|0-43
56652|code|BNE             loc_DD3A|245-209
56654|code|MOVW            R3, #0x4110|68-242-16-19
56658|code|LDR             R1, =unk_18884|19-73
56660|code|MOVT.W          R3, #0x2152|194-242-82-19
56664|code|STR             R3, [R0,#0x10]|3-97
56666|code|POP.W           {R4,LR}|189-232-16-64
56670|code|B.W             sub_D4A0|255-247-159-187
56674|code|LDR             R3, [R0,#0xC]|195-104
56676|code|STR             R3, [R1]|11-96
56678|code|B               loc_DD4E|242-231
56680|code|LDR             R0, =aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|14-72
56682|code|MOVW            R2, #0x22F; line|64-242-47-34
56686|code|LDR             R1, =aSrcListC; "../src/list.c"|14-73
56688|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|14-75
56690|code|BLX             __assert_fail|251-247-216-235
56694|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|14-72
56696|code|MOVW            R2, #0x22D; line|64-242-45-34
56700|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
56702|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|11-75
56704|code|BLX             __assert_fail|251-247-208-235
56708|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
56710|code|MOVW            R2, #0x22B; line|64-242-43-34
56714|code|LDR             R1, =aSrcListC; "../src/list.c"|7-73
56716|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|7-75
56718|code|BLX             __assert_fail|251-247-202-235
56722|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
56724|code|MOVW            R2, #0x22A; line|64-242-42-34
56728|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
56730|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|4-75
56732|code|BLX             __assert_fail|251-247-194-235
56736|data|DCD unk_18884|132-136-1-0
56740|data|DCD aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|240-0-1-0
56744|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56748|data|DCD aListIteratorDe; "list_iterator_destroy"|112-255-0-0
56752|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|208-0-1-0
56756|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
56760|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
56764|code|PUSH            {R3,LR}|8-181
56766|code|CMP             R0, #0|0-40
56768|code|BEQ             loc_DE12|39-208
56770|code|LDR             R3, [R0,#0x10]|3-105
56772|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
56780|code|CMP             R3, R2|147-66
56782|code|BNE             loc_DE04|25-209
56784|code|LDR             R2, [R0]|2-104
56786|code|LDR             R2, [R2,#0x14]|82-105
56788|code|CMP             R2, R3|154-66
56790|code|BNE             loc_DDF6|14-209
56792|code|LDR             R3, [R0,#4]|67-104
56794|code|CBZ             R3, loc_DDE0|11-177
56796|code|LDR             R2, [R3,#4]|90-104
56798|code|STR             R2, [R0,#4]|66-96
56800|code|LDR             R2, [R0,#8]|130-104
56802|code|LDR             R2, [R2]|18-104
56804|code|CMP             R2, R3|154-66
56806|code|BEQ             loc_DDEC|1-208
56808|code|ADDS            R2, #4|4-50
56810|code|STR             R2, [R0,#8]|130-96
56812|code|CBZ             R3, loc_DDF2|11-177
56814|code|LDR             R0, [R3]|24-104
56816|code|POP             {R3,PC}|8-189
56818|code|MOV             R0, R3|24-70
56820|code|POP             {R3,PC}|8-189
56822|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
56824|code|MOV.W           R2, #0x244; line|79-244-17-114
56828|code|LDR             R1, =aSrcListC; "../src/list.c"|9-73
56830|code|LDR             R3, =aListNext; "list_next"|10-75
56832|code|BLX             __assert_fail|251-247-144-235
56836|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|9-72
56838|code|MOVW            R2, #0x242; line|64-242-66-34
56842|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56844|code|LDR             R3, =aListNext; "list_next"|6-75
56846|code|BLX             __assert_fail|251-247-138-235
56850|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
56852|code|MOVW            R2, #0x241; line|64-242-65-34
56856|code|LDR             R1, =aSrcListC; "../src/list.c"|2-73
56858|code|LDR             R3, =aListNext; "list_next"|3-75
56860|code|BLX             __assert_fail|251-247-130-235
56864|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|208-0-1-0
56868|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56872|data|DCD aListNext; "list_next"|136-255-0-0
56876|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
56880|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
56884|code|PUSH            {R4,LR}|16-181
56886|code|MOV             R2, R1|10-70
56888|code|CBZ             R0, loc_DE60|144-177
56890|code|CMP             R1, #0|0-41
56892|code|BEQ             loc_DE8A|37-208
56894|code|LDR             R1, [R0,#0x10]|1-105
56896|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
56904|code|CMP             R1, R3|153-66
56906|code|BNE             loc_DE7C|23-209
56908|code|LDR             R3, [R0]|3-104
56910|code|LDR             R4, [R3,#0x14]|92-105
56912|code|CMP             R4, R1|140-66
56914|code|BNE             loc_DE6E|12-209
56916|code|LDR             R1, [R0,#8]|129-104
56918|code|MOV             R0, R3|24-70
56920|code|POP.W           {R4,LR}|189-232-16-64
56924|code|B.W             sub_D37C|255-247-142-186
56928|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|13-72
56930|code|MOVW            R2, #0x253|64-242-83-34
56934|code|LDR             R1, =aSrcListC; "../src/list.c"|13-73
56936|code|LDR             R3, =aListInsert; "list_insert"|13-75
56938|code|BLX             __assert_fail|251-247-92-235
56942|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|13-72
56944|code|MOVW            R2, #0x257|64-242-87-34
56948|code|LDR             R1, =aSrcListC; "../src/list.c"|9-73
56950|code|LDR             R3, =aListInsert; "list_insert"|10-75
56952|code|BLX             __assert_fail|251-247-84-235
56956|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
56958|code|MOVW            R2, #0x255|64-242-85-34
56962|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
56964|code|LDR             R3, =aListInsert; "list_insert"|6-75
56966|code|BLX             __assert_fail|251-247-78-235
56970|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|8-72
56972|code|MOV.W           R2, #0x254|79-244-21-114
56976|code|LDR             R1, =aSrcListC; "../src/list.c"|2-73
56978|code|LDR             R3, =aListInsert; "list_insert"|3-75
56980|code|BLX             __assert_fail|251-247-70-235
56984|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
56988|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
56992|data|DCD aListInsert; "list_insert"|148-255-0-0
56996|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|208-0-1-0
57000|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
57004|data|DCD aXVoid0; "x != ((void *)0)"|144-2-1-0
57008|code|PUSH            {R3-R7,LR}|248-181
57010|code|MOV             R4, R0|4-70
57012|code|MOV             R5, R1|13-70
57014|code|MOV             R7, R2|23-70
57016|code|CBZ             R0, loc_DEE0|144-177
57018|code|CBZ             R1, loc_DEFC|249-177
57020|code|LDR             R2, [R0,#0x10]|2-105
57022|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
57030|code|CMP             R2, R3|154-66
57032|code|BNE             loc_DEEE|17-209
57034|code|MOV             R0, R4|32-70
57036|code|BL              sub_DDBC|255-247-118-255
57040|code|MOV             R6, R0|6-70
57042|code|CBZ             R0, loc_DEDC|24-177
57044|code|MOV             R1, R7|57-70
57046|code|BLX             R5|168-71
57048|code|CMP             R0, #0|0-40
57050|code|BEQ             loc_DECA|246-208
57052|code|MOV             R0, R6|48-70
57054|code|POP             {R3-R7,PC}|248-189
57056|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
57058|code|MOVW            R2, #0x263|64-242-99-34
57062|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
57064|code|LDR             R3, =aListFind; "list_find"|10-75
57066|code|BLX             __assert_fail|251-247-28-235
57070|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
57072|code|MOVW            R2, #0x265|64-242-101-34
57076|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
57078|code|LDR             R3, =aListFind; "list_find"|7-75
57080|code|BLX             __assert_fail|251-247-20-235
57084|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
57086|code|MOV.W           R2, #0x264|79-244-25-114
57090|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
57092|code|LDR             R3, =aListFind; "list_find"|3-75
57094|code|BLX             __assert_fail|251-247-14-235
57098|data|ALIGN 4|0-191
57100|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
57104|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
57108|data|DCD aListFind; "list_find"|160-255-0-0
57112|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
57116|data|DCD aFVoid0; "f != ((void *)0)"|164-0-1-0
57120|code|PUSH            {R3,LR}|8-181
57122|code|CMP             R0, #0|0-40
57124|code|BEQ             loc_DF70|36-208
57126|code|LDR             R3, [R0,#0x10]|3-105
57128|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
57136|code|CMP             R3, R2|147-66
57138|code|BNE             loc_DF62|22-209
57140|code|LDR             R2, [R0]|2-104
57142|code|LDR             R1, [R2,#0x14]|81-105
57144|code|CMP             R1, R3|153-66
57146|code|BNE             loc_DF54|11-209
57148|code|LDR             R1, [R0,#8]|129-104
57150|code|LDR             R3, [R0,#4]|67-104
57152|code|LDR             R0, [R1]|8-104
57154|code|CMP             R0, R3|152-66
57156|code|BEQ             loc_DF50|4-208
57158|code|MOV             R0, R2|16-70
57160|code|POP.W           {R3,LR}|189-232-8-64
57164|code|B.W             sub_D4DC|255-247-198-186
57168|code|MOVS            R0, #0|0-32
57170|code|POP             {R3,PC}|8-189
57172|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
57174|code|MOVW            R2, #0x273; line|64-242-115-34
57178|code|LDR             R1, =aSrcListC; "../src/list.c"|10-73
57180|code|LDR             R3, =aListRemove; "list_remove"|10-75
57182|code|BLX             __assert_fail|251-247-226-234
57186|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
57188|code|MOVW            R2, #0x271; line|64-242-113-34
57192|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
57194|code|LDR             R3, =aListRemove; "list_remove"|7-75
57196|code|BLX             __assert_fail|251-247-218-234
57200|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
57202|code|MOV.W           R2, #0x270; line|79-244-28-114
57206|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
57208|code|LDR             R3, =aListRemove; "list_remove"|3-75
57210|code|BLX             __assert_fail|251-247-212-234
57214|data|ALIGN 0x10|0-191
57216|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|208-0-1-0
57220|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
57224|data|DCD aListRemove; "list_remove"|172-255-0-0
57228|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
57232|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
57236|code|PUSH            {R4,LR}|16-181
57238|code|MOV             R4, R0|4-70
57240|code|CBZ             R0, loc_DFBE|136-177
57242|code|LDR             R2, [R0,#0x10]|2-105
57244|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
57252|code|CMP             R2, R3|154-66
57254|code|BNE             loc_DFCC|17-209
57256|code|BL              sub_DF20|255-247-186-255
57260|code|CBZ             R0, locret_DFBC|48-177
57262|code|LDR             R3, [R4]|35-104
57264|code|LDR             R3, [R3,#0xC]|219-104
57266|code|CBZ             R3, loc_DFBA|19-177
57268|code|BLX             R3|152-71
57270|code|MOVS            R0, #1|1-32
57272|code|POP             {R4,PC}|16-189
57274|code|MOVS            R0, #1|1-32
57276|code|POP             {R4,PC}|16-189
57278|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
57280|code|MOV.W           R2, #0x280|79-244-32-114
57284|code|LDR             R1, =aSrcListC; "../src/list.c"|6-73
57286|code|LDR             R3, =aListDelete; "list_delete"|7-75
57288|code|BLX             __assert_fail|251-247-172-234
57292|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|6-72
57294|code|MOVW            R2, #0x281|64-242-129-34
57298|code|LDR             R1, =aSrcListC; "../src/list.c"|3-73
57300|code|LDR             R3, =aListDelete; "list_delete"|3-75
57302|code|BLX             __assert_fail|251-247-166-234
57306|data|ALIGN 4|0-191
57308|data|DCD aIVoid0; "i != ((void *)0)"|216-251-0-0
57312|data|DCD aSrcListC; "../src/list.c"|220-255-0-0
57316|data|DCD aListDelete; "list_delete"|184-255-0-0
57320|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|72-0-1-0
57324|code|PUSH.W          {R4-R9,LR}|45-233-240-67
57328|code|MOV             R8, R0|128-70
57330|code|SUB             SP, SP, #0xC|131-176
57332|code|MOV             R6, R1|14-70
57334|code|MOVS            R4, #0x50 ; 'P'|80-36
57336|code|MOVS            R5, #0|0-37
57338|code|B               loc_E02E|24-224
57340|code|MOV             R0, R4|32-70
57342|code|MOV             R7, R4|39-70
57344|code|BL              sub_E5A4|0-240-208-250
57348|code|MOV             R5, R0|5-70
57350|code|MOV             R1, R4; maxlen|33-70
57352|code|MOV             R2, R8; format|66-70
57354|code|MOV             R3, R6; arg|51-70
57356|code|MOV             R0, R5; s|40-70
57358|code|STR             R6, [SP,#0x28+var_24]|1-150
57360|code|BLX             vsnprintf|251-247-88-234
57364|code|SUB.W           R2, R0, #0xFFFFFFFF|160-241-255-50
57368|code|MOV             R9, R0|129-70
57370|code|NEGS            R3, R2|83-66
57372|code|ADC.W           R3, R3, R2|67-235-2-3
57376|code|ADDS            R4, #0x50 ; 'P'|80-52
57378|code|CMP             R0, R7|184-66
57380|code|ITE LT|180-191
57382|code|MOVLT           R7, R3|31-70
57384|code|ORRGE.W         R7, R3, #1|67-240-1-7
57388|code|CBZ             R7, loc_E040|71-177
57390|code|CMP             R4, #0x50 ; 'P'|80-44
57392|code|BEQ             loc_DFFC|228-208
57394|code|MOV             R0, R5|40-70
57396|code|MOV             R1, R4|33-70
57398|code|BL              sub_E614|0-240-237-250
57402|code|MOV             R7, R4|39-70
57404|code|MOV             R5, R0|5-70
57406|code|B               loc_E006|226-231
57408|code|MOV             R0, R5; s|40-70
57410|code|BLX             strlen|251-247-204-233
57414|code|CMP             R9, R0|129-69
57416|code|BNE             loc_E052|3-209
57418|code|MOV             R0, R5|40-70
57420|code|ADD             SP, SP, #0xC|3-176
57422|code|POP.W           {R4-R9,PC}|189-232-240-131
57426|code|LDR             R0, =aLenStrlenStr; "len == strlen(str)"|3-72
57428|code|MOVS            R2, #0x39 ; '9'; line|57-34
57430|code|LDR             R1, =aSrcHprintfC; "../src/hprintf.c"|3-73
57432|code|LDR             R3, =aHvsprintf; "hvsprintf"|3-75
57434|code|BLX             __assert_fail|251-247-100-234
57438|data|ALIGN 0x10|0-191
57440|data|DCD aLenStrlenStr; "len == strlen(str)"|24-1-1-0
57444|data|DCD aSrcHprintfC; "../src/hprintf.c"|44-1-1-0
57448|data|DCD aHvsprintf; "hvsprintf"|12-1-1-0
57452|code|PUSH            {R0-R3}|15-180
57454|code|PUSH            {LR}|0-181
57456|code|SUB             SP, SP, #0xC|131-176
57458|code|ADD             R3, SP, #0x10|4-171
57460|code|LDR.W           R0, [R3],#4|83-248-4-11
57464|code|MOV             R1, R3|25-70
57466|code|STR             R3, [SP,#4]|1-147
57468|code|BL              sub_DFEC|255-247-182-255
57472|code|ADD             SP, SP, #0xC|3-176
57474|code|POP.W           {LR}|93-248-4-235
57478|code|ADD             SP, SP, #0x10|4-176
57480|code|BX              LR|112-71
57482|data|ALIGN 4|0-191
57484|code|PUSH            {R1-R3}|14-180
57486|code|PUSH            {R4-R6,LR}|112-181
57488|code|SUB             SP, SP, #0xC|131-176
57490|code|ADD             R3, SP, #0x1C|7-171
57492|code|MOV             R6, R0|6-70
57494|code|LDR.W           R0, [R3],#4|83-248-4-11
57498|code|MOV             R1, R3|25-70
57500|code|STR             R3, [SP,#4]|1-147
57502|code|BL              sub_DFEC|255-247-165-255
57506|code|MOV             R5, R0|5-70
57508|code|BLX             strlen|251-247-154-233
57512|code|MOV             R4, R0|4-70
57514|code|MOV             R2, R4|34-70
57516|code|MOV             R0, R6|48-70
57518|code|MOV             R1, R5|41-70
57520|code|BL              sub_9D80|251-247-102-254
57524|code|CMP             R0, #0|0-40
57526|code|RSB.W           R4, R0, R4|192-235-4-4
57530|code|BLT             loc_E0C8|5-219
57532|code|CMP             R4, #0|0-44
57534|code|BGT             loc_E0AA|244-220
57536|code|MOV             R0, R5|40-70
57538|code|BL              sub_E6F0|0-240-21-251
57542|code|MOV             R0, R4|32-70
57544|code|ADD             SP, SP, #0xC|3-176
57546|code|POP.W           {R4-R6,LR}|189-232-112-64
57550|code|ADD             SP, SP, #0xC|3-176
57552|code|BX              LR|112-71
57554|data|ALIGN 4|0-191
57556|code|PUSH.W          {R4-R11,LR}|45-233-240-79
57560|code|MOV             R5, R0|5-70
57562|code|SUB             SP, SP, #0xC|131-176
57564|code|MOV             R0, R2; s|16-70
57566|code|MOV             R8, R3|152-70
57568|code|MOV             R10, R2|146-70
57570|code|MOV             R9, R1|137-70
57572|code|BLX             strlen|251-247-122-233
57576|code|MOV             R7, R0|7-70
57578|code|MOV             R0, R8; s|64-70
57580|code|BLX             strlen|251-247-118-233
57584|code|RSB.W           R11, R7, R0|199-235-0-11
57588|code|MOV             R6, R0|6-70
57590|code|ADD.W           R11, R11, #1|11-241-1-11
57594|code|B               loc_E128|21-224
57596|code|MOV             R0, R5; s|40-70
57598|code|BLX             strlen|251-247-110-233
57602|code|ADD             R0, R11|88-68
57604|code|CMP             R0, R9|72-69
57606|code|BHI             loc_E13C|25-216
57608|code|ADDS            R1, R4, R7|225-25
57610|code|STR             R1, [SP,#0x30+src]|1-145
57612|code|MOV             R0, R1; s|8-70
57614|code|BLX             strlen|251-247-102-233
57618|code|ADDS            R3, R4, R6|163-25
57620|code|LDR             R1, [SP,#0x30+src]; src|1-153
57622|code|ADDS            R2, R0, #1; n|66-28
57624|code|MOV             R0, R3; dest|24-70
57626|code|BLX             memmove|251-247-156-232
57630|code|MOV             R0, R4; dest|32-70
57632|code|MOV             R1, R8; src|65-70
57634|code|MOV             R2, R6; n|50-70
57636|code|BLX             memcpy|251-247-176-232
57640|code|MOV             R0, R5; haystack|40-70
57642|code|MOV             R1, R10; needle|81-70
57644|code|BLX             strstr|251-247-92-232
57648|code|MOV             R4, R0|4-70
57650|code|CMP             R0, #0|0-40
57652|code|BNE             loc_E0FC|226-209
57654|code|ADD             SP, SP, #0xC|3-176
57656|code|POP.W           {R4-R11,PC}|189-232-240-143
57660|code|LDR             R0, =aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|2-72
57662|code|MOVS            R2, #0x5C ; '\'; line|92-34
57664|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|2-73
57666|code|LDR             R3, =aStrSubst; "_str_subst"|3-75
57668|code|BLX             __assert_fail|251-247-238-233
57672|data|DCD aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|208-1-1-0
57676|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
57680|data|DCD aStrSubst; "_str_subst"|64-1-1-0
57684|code|PUSH            {R3,LR}|8-181
57686|code|MOVS            R0, #0xC|12-32
57688|code|BL              sub_E5A4|0-240-36-250
57692|code|MOVS            R2, #0|0-34
57694|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
57702|code|STR             R2, [R0,#8]|130-96
57704|code|STR             R3, [R0]|3-96
57706|code|POP             {R3,PC}|8-189
57708|code|LDR             R2, [R0]|2-104
57710|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
57718|code|CMP             R2, R3|154-66
57720|code|PUSH            {R4,LR}|16-181
57722|code|MOV             R4, R0|4-70
57724|code|BNE             loc_E19A|13-209
57726|code|LDR             R0, [R0,#8]|128-104
57728|code|CBZ             R0, loc_E18C|32-177
57730|code|BLX             regfree|251-247-220-232
57734|code|LDR             R0, [R4,#8]|160-104
57736|code|BL              sub_E6F0|0-240-178-250
57740|code|MOVS            R3, #0|0-35
57742|code|MOV             R0, R4|32-70
57744|code|STR             R3, [R4]|35-96
57746|code|POP.W           {R4,LR}|189-232-16-64
57750|code|B.W             sub_E6F0|0-240-171-186
57754|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|3-72
57756|code|MOVS            R2, #0x48 ; 'H'|72-34
57758|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|3-73
57760|code|LDR             R3, =aXregexDestroy; "xregex_destroy"|3-75
57762|code|BLX             __assert_fail|251-247-192-233
57766|data|ALIGN 4|0-191
57768|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|8-2-1-0
57772|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
57776|data|DCD aXregexDestroy; "xregex_destroy"|76-1-1-0
57780|code|PUSH.W          {R4-R8,LR}|45-233-240-65
57784|code|SUB             SP, SP, #0x108|194-176
57786|code|LDR             R6, =__stack_chk_guard|56-78
57788|code|MOV             R4, R0|4-70
57790|code|MOV             R5, R1|13-70
57792|code|MOV             R7, R2|23-70
57794|code|LDR             R3, [R6]|51-104
57796|code|STR             R3, [SP,#0x104]|65-147
57798|code|CMP             R1, #0|0-41
57800|code|BEQ             loc_E28E|97-208
57802|code|LDR             R2, [R0]|2-104
57804|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
57812|code|CMP             R2, R3|154-66
57814|code|BNE             loc_E282|84-209
57816|code|LDR.W           R8, [R0,#8]|208-248-8-128
57820|code|CMP.W           R8, #0|184-241-0-15
57824|code|BNE             loc_E276|73-209
57826|code|MOV             R0, R1|8-70
57828|code|BLX             strlen|251-247-250-232
57832|code|CMP.W           R0, #0x100|176-245-128-127
57836|code|BHI             loc_E268|60-216
57838|code|MOVS            R0, #0x20 ; ' '|32-32
57840|code|BL              sub_E5A4|0-240-216-249
57844|code|MOVS            R3, #1|1-35
57846|code|STR             R3, [R4,#4]|99-96
57848|code|STR             R0, [R4,#8]|160-96
57850|code|CMP             R7, #0|0-47
57852|code|BEQ             loc_E262|49-208
57854|code|MOV             R0, R5|40-70
57856|code|BL              sub_E76C|0-240-180-250
57860|code|MOV             R5, R0|5-70
57862|code|BLX             strlen|251-247-234-232
57866|code|LDR             R2, =aR; "\\r"|37-74
57868|code|LDR             R3, =asc_1026C; "\r"|37-75
57870|code|ADDS            R1, R0, #1|65-28
57872|code|MOV             R0, R5|40-70
57874|code|BL              sub_E0D4|255-247-95-255
57878|code|MOV             R0, R5|40-70
57880|code|BLX             strlen|251-247-224-232
57884|code|LDR             R3, =(aPollErrorOnFdD+0x14); "\n"|34-75
57886|code|LDR             R2, =aN; "\\n"|35-74
57888|code|ADDS            R1, R0, #1|65-28
57890|code|MOV             R0, R5|40-70
57892|code|BL              sub_E0D4|255-247-86-255
57896|code|LDR             R0, [R4,#8]|160-104
57898|code|LDR             R2, [R4,#4]|98-104
57900|code|MOV             R1, R5|41-70
57902|code|BLX             regcomp|251-247-68-233
57906|code|MOV             R7, R0|7-70
57908|code|MOV             R0, R5|40-70
57910|code|BL              sub_E6F0|0-240-91-250
57914|code|CBZ             R7, loc_E254|95-177
57916|code|LDR             R1, [R4,#8]|161-104
57918|code|ADD             R2, SP, #4|1-170
57920|code|MOV             R0, R7|56-70
57922|code|MOV.W           R3, #0x100|79-244-128-115
57926|code|BLX             regerror|250-247-244-239
57930|code|MOVS            R0, #0|0-32
57932|code|LDR             R1, =aRegcompFailedS; "regcomp failed: %s"|24-73
57934|code|ADD             R2, SP, #4|1-170
57936|code|BL              sub_9FA8|251-247-170-254
57940|code|LDR             R2, [SP,#0x104]|65-154
57942|code|LDR             R3, [R6]|51-104
57944|code|CMP             R2, R3|154-66
57946|code|BNE             loc_E272|10-209
57948|code|ADD             SP, SP, #0x108|66-176
57950|code|POP.W           {R4-R8,PC}|189-232-240-129
57954|code|MOVS            R3, #9|9-35
57956|code|STR             R3, [R4,#4]|99-96
57958|code|B               loc_E1FE|202-231
57960|code|MOV             R0, R8|64-70
57962|code|LDR             R1, =aRefusingToComp; "refusing to compile regex > 256 bytes"|18-73
57964|code|BL              sub_9FA8|251-247-156-254
57968|code|B               loc_E1EE|189-231
57970|code|BLX             __stack_chk_fail|251-247-46-232
57974|code|LDR             R0, =aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|16-72
57976|code|MOVS            R2, #0x6B ; 'k'|107-34
57978|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|16-73
57980|code|LDR             R3, =aXregexCompile; "xregex_compile"|16-75
57982|code|BLX             __assert_fail|251-247-82-233
57986|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|16-72
57988|code|MOVS            R2, #0x6A ; 'j'|106-34
57990|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|13-73
57992|code|LDR             R3, =aXregexCompile; "xregex_compile"|13-75
57994|code|BLX             __assert_fail|251-247-76-233
57998|code|LDR             R0, =unk_1028C|14-72
58000|code|MOVS            R2, #0x69 ; 'i'|105-34
58002|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|10-73
58004|code|LDR             R3, =aXregexCompile; "xregex_compile"|10-75
58006|code|BLX             __assert_fail|251-247-70-233
58010|data|ALIGN 4|0-191
58012|data|DCD __stack_chk_guard|136-135-1-0
58016|data|DCD aR; "\\r"|244-244-0-0
58020|data|DCD asc_1026C; "\r"|108-2-1-0
58024|data|DCD aPollErrorOnFdD+0x14; "\n"|124-242-0-0
58028|data|DCD aN; "\\n"|248-244-0-0
58032|data|DCD aRegcompFailedS; "regcomp failed: %s"|112-2-1-0
58036|data|DCD aRefusingToComp; "refusing to compile regex > 256 bytes"|68-2-1-0
58040|data|DCD aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|36-2-1-0
58044|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
58048|data|DCD aXregexCompile; "xregex_compile"|92-1-1-0
58052|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|8-2-1-0
58056|data|DCD unk_1028C|140-2-1-0
58060|code|PUSH            {R4-R6,LR}|112-181
58062|code|MOVW            R3, #0xAAAA|74-246-170-35
58066|code|LDR             R6, [R0]|6-104
58068|code|MOVT.W          R3, #0x3456|195-242-86-67
58072|code|SUB             SP, SP, #8|130-176
58074|code|MOV             R5, R1|13-70
58076|code|CMP             R6, R3|158-66
58078|code|MOV             R4, R2|20-70
58080|code|BNE             loc_E340|46-209
58082|code|LDR             R0, [R0,#8]|128-104
58084|code|CMP             R0, #0|0-40
58086|code|BEQ             loc_E34C|49-208
58088|code|CMP             R2, #0|0-42
58090|code|BEQ             loc_E332|34-208
58092|code|LDR             R2, [R2]|18-104
58094|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58102|code|CMP             R2, R3|154-66
58104|code|BNE             loc_E364|52-209
58106|code|LDR             R3, [R4,#0x14]|99-105
58108|code|CMP             R3, #0|0-43
58110|code|BNE             loc_E358|43-209
58112|code|LDR             R3, [R4,#8]|163-104
58114|code|MOVS            R6, #2|2-38
58116|code|LDR             R2, [R4,#4]|98-104
58118|code|STR             R6, [SP]|0-150
58120|code|BLX             regexec|250-247-244-239
58124|code|MOVS            R3, #1|1-35
58126|code|STR             R3, [R4,#0x14]|99-97
58128|code|MOV             R6, R0|6-70
58130|code|STR             R0, [R4,#0x10]|32-97
58132|code|CBNZ            R0, loc_E326|56-185
58134|code|LDR             R0, [R4,#0xC]|224-104
58136|code|CBZ             R0, loc_E31E|8-177
58138|code|BL              sub_E6F0|0-240-233-249
58142|code|MOV             R0, R5|40-70
58144|code|BL              sub_E76C|0-240-36-250
58148|code|STR             R0, [R4,#0xC]|224-96
58150|code|RSBS.W          R0, R6, #1|214-241-1-0
58154|code|IT CC|56-191
58156|code|MOVCC           R0, #0|0-32
58158|code|ADD             SP, SP, #8|2-176
58160|code|POP             {R4-R6,PC}|112-189
58162|code|MOV             R3, R2|19-70
58164|code|MOVS            R4, #2|2-36
58166|code|STR             R4, [SP]|0-148
58168|code|BLX             regexec|250-247-220-239
58172|code|MOV             R6, R0|6-70
58174|code|B               loc_E326|242-231
58176|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|11-72
58178|code|MOVS            R2, #0x8C|140-34
58180|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|11-73
58182|code|LDR             R3, =aXregexExec; "xregex_exec"|12-75
58184|code|BLX             __assert_fail|251-247-236-232
58188|code|LDR             R0, =unk_10284|11-72
58190|code|MOVS            R2, #0x8D|141-34
58192|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|8-73
58194|code|LDR             R3, =aXregexExec; "xregex_exec"|9-75
58196|code|BLX             __assert_fail|251-247-230-232
58200|code|LDR             R0, =aXmXmUsedFalse; "xm->xm_used == FALSE"|9-72
58202|code|MOVS            R2, #0x90|144-34
58204|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|5-73
58206|code|LDR             R3, =aXregexExec; "xregex_exec"|6-75
58208|code|BLX             __assert_fail|251-247-224-232
58212|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|7-72
58214|code|MOVS            R2, #0x8F|143-34
58216|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|2-73
58218|code|LDR             R3, =aXregexExec; "xregex_exec"|3-75
58220|code|BLX             __assert_fail|251-247-218-232
58224|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|8-2-1-0
58228|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
58232|data|DCD aXregexExec; "xregex_exec"|108-1-1-0
58236|data|DCD unk_10284|132-2-1-0
58240|data|DCD aXmXmUsedFalse; "xm->xm_used == FALSE"|192-2-1-0
58244|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|164-2-1-0
58248|code|PUSH            {R3-R5,LR}|56-181
58250|code|MOV             R5, R0|5-70
58252|code|MOVS            R0, #0x18|24-32
58254|code|ADDS            R5, #1|1-53
58256|code|BL              sub_E5A4|0-240-8-249
58260|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58268|code|MOV             R4, R0|4-70
58270|code|STR             R5, [R0,#4]|69-96
58272|code|STR             R3, [R4]|35-96
58274|code|LSLS            R0, R5, #3|232-0
58276|code|BL              sub_E5A4|0-240-254-248
58280|code|MOVS            R3, #0|0-35
58282|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
58286|code|STR             R3, [R4,#0xC]|227-96
58288|code|STR             R2, [R4,#0x10]|34-97
58290|code|STR             R3, [R4,#0x14]|99-97
58292|code|STR             R0, [R4,#8]|160-96
58294|code|MOV             R0, R4|32-70
58296|code|POP             {R3-R5,PC}|56-189
58298|data|ALIGN 4|0-191
58300|code|LDR             R2, [R0]|2-104
58302|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58310|code|CMP             R2, R3|154-66
58312|code|PUSH            {R4,LR}|16-181
58314|code|MOV             R4, R0|4-70
58316|code|BNE             loc_E3EA|13-209
58318|code|LDR             R0, [R0,#8]|128-104
58320|code|BL              sub_E6F0|0-240-142-249
58324|code|LDR             R0, [R4,#0xC]|224-104
58326|code|CBZ             R0, loc_E3DC|8-177
58328|code|BL              sub_E6F0|0-240-138-249
58332|code|MOVS            R3, #0|0-35
58334|code|MOV             R0, R4|32-70
58336|code|STR             R3, [R4]|35-96
58338|code|POP.W           {R4,LR}|189-232-16-64
58342|code|B.W             sub_E6F0|0-240-131-185
58346|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|3-72
58348|code|MOVS            R2, #0xB3|179-34
58350|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|3-73
58352|code|LDR             R3, =aXregexMatchDes; "xregex_match_destroy"|3-75
58354|code|BLX             __assert_fail|251-247-152-232
58358|data|ALIGN 4|0-191
58360|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|164-2-1-0
58364|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
58368|data|DCD aXregexMatchDes; "xregex_match_destroy"|120-1-1-0
58372|code|PUSH            {R4,LR}|16-181
58374|code|MOV             R4, R0|4-70
58376|code|LDR             R0, [R0,#0xC]|192-104
58378|code|CBZ             R0, loc_E414|24-177
58380|code|BL              sub_E6F0|0-240-112-249
58384|code|MOVS            R3, #0|0-35
58386|code|STR             R3, [R4,#0xC]|227-96
58388|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
58392|code|STR             R3, [R4,#0x10]|35-97
58394|code|MOVS            R3, #0|0-35
58396|code|STR             R3, [R4,#0x14]|99-97
58398|code|POP             {R4,PC}|16-189
58400|code|LDR             R2, [R0]|2-104
58402|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58410|code|CMP             R2, R3|154-66
58412|code|PUSH            {R4-R6,LR}|112-181
58414|code|MOV             R4, R0|4-70
58416|code|BNE             loc_E46E|29-209
58418|code|LDR             R3, [R0,#0x14]|67-105
58420|code|CBZ             R3, loc_E462|171-177
58422|code|LDR             R6, [R0,#0x10]|6-105
58424|code|CBNZ            R6, loc_E45C|134-185
58426|code|LDR             R3, [R0,#8]|131-104
58428|code|LDR             R0, [R3,#4]|88-104
58430|code|ADDS            R0, #1|1-48
58432|code|BL              sub_E5A4|0-240-176-248
58436|code|LDR             R1, [R4,#0xC]|225-104
58438|code|MOV             R5, R0|5-70
58440|code|CBZ             R1, loc_E47A|185-177
58442|code|LDR             R3, [R4,#8]|163-104
58444|code|LDR             R2, [R3,#4]|90-104
58446|code|BLX             memcpy|250-247-28-239
58450|code|LDR             R3, [R4,#8]|163-104
58452|code|MOV             R0, R5|40-70
58454|code|LDR             R3, [R3,#4]|91-104
58456|code|STRB            R6, [R5,R3]|238-84
58458|code|POP             {R4-R6,PC}|112-189
58460|code|MOVS            R5, #0|0-37
58462|code|MOV             R0, R5|40-70
58464|code|POP             {R4-R6,PC}|112-189
58466|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|9-72
58468|code|MOVS            R2, #0xCD|205-34
58470|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|9-73
58472|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|9-75
58474|code|BLX             __assert_fail|251-247-92-232
58478|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|9-72
58480|code|MOVS            R2, #0xCC|204-34
58482|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|6-73
58484|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|6-75
58486|code|BLX             __assert_fail|251-247-86-232
58490|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|7-72
58492|code|MOVS            R2, #0xD1|209-34
58494|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|3-73
58496|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|3-75
58498|code|BLX             __assert_fail|251-247-80-232
58502|data|ALIGN 4|0-191
58504|data|DCD aXmXmUsed; "xm->xm_used"|216-2-1-0
58508|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
58512|data|DCD aXregexMatchStr; "xregex_match_strdup"|144-1-1-0
58516|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|164-2-1-0
58520|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|228-2-1-0
58524|code|LDR             R2, [R0]|2-104
58526|code|PUSH            {R3,LR}|8-181
58528|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58536|code|CMP             R2, R3|154-66
58538|code|BNE             loc_E4B6|4-209
58540|code|LDR             R3, [R0,#0x14]|67-105
58542|code|CBZ             R3, loc_E4C2|67-177
58544|code|LDR             R3, [R0,#8]|131-104
58546|code|LDR             R0, [R3,#4]|88-104
58548|code|POP             {R3,PC}|8-189
58550|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|6-72
58552|code|MOVS            R2, #0xDB|219-34
58554|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|6-73
58556|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|6-75
58558|code|BLX             __assert_fail|251-247-50-232
58562|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|6-72
58564|code|MOVS            R2, #0xDC|220-34
58566|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|3-73
58568|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|3-75
58570|code|BLX             __assert_fail|251-247-44-232
58574|data|ALIGN 0x10|0-191
58576|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|164-2-1-0
58580|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
58584|data|DCD aXregexMatchStr_0; "xregex_match_strlen"|164-1-1-0
58588|data|DCD aXmXmUsed; "xm->xm_used"|216-2-1-0
58592|code|LDR             R2, [R0]|2-104
58594|code|PUSH            {R3-R7,LR}|248-181
58596|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58604|code|MOV             R6, R0|6-70
58606|code|CMP             R2, R3|154-66
58608|code|BNE             loc_E54E|45-209
58610|code|LDR             R3, [R0,#0x14]|67-105
58612|code|CMP             R3, #0|0-43
58614|code|BEQ             loc_E55A|48-208
58616|code|LDR             R4, [R0,#0x10]|4-105
58618|code|RSBS.W          R4, R4, #1|212-241-1-4
58622|code|IT CC|56-191
58624|code|MOVCC           R4, #0|0-36
58626|code|CMP             R1, #0|0-41
58628|code|ITE LT|180-191
58630|code|MOVLT           R4, #0|0-36
58632|code|ANDGE.W         R4, R4, #1|4-240-1-4
58636|code|CBZ             R4, loc_E544|212-177
58638|code|LDR             R3, [R0,#4]|67-104
58640|code|CMP             R1, R3|153-66
58642|code|BGE             loc_E548|25-218
58644|code|LDR             R3, [R0,#8]|131-104
58646|code|ADD.W           R2, R3, R1,LSL#3|3-235-193-2
58650|code|LDR.W           R7, [R3,R1,LSL#3]|83-248-49-112
58654|code|ADDS            R3, R7, #1|123-28
58656|code|BEQ             loc_E548|18-208
58658|code|LDR             R3, [R0,#0xC]|195-104
58660|code|LDR             R5, [R2,#4]|85-104
58662|code|CBZ             R3, loc_E572|35-179
58664|code|CMP             R7, R5|175-66
58666|code|BGE             loc_E566|28-218
58668|code|SUBS            R5, R5, R7|237-27
58670|code|ADDS            R0, R5, #1|104-28
58672|code|BL              sub_E5A4|0-240-56-248
58676|code|LDR             R1, [R6,#0xC]|241-104
58678|code|MOV             R2, R5|42-70
58680|code|ADDS            R1, R1, R7|201-25
58682|code|MOV             R4, R0|4-70
58684|code|BLX             memcpy|250-247-164-238
58688|code|MOVS            R3, #0|0-35
58690|code|STRB            R3, [R4,R5]|99-85
58692|code|MOV             R0, R4|32-70
58694|code|POP             {R3-R7,PC}|248-189
58696|code|MOVS            R4, #0|0-36
58698|code|MOV             R0, R4|32-70
58700|code|POP             {R3-R7,PC}|248-189
58702|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|12-72
58704|code|MOVS            R2, #0xE6|230-34
58706|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|12-73
58708|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|12-75
58710|code|BLX             __assert_fail|250-247-230-239
58714|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|12-72
58716|code|MOVS            R2, #0xE7|231-34
58718|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|9-73
58720|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|9-75
58722|code|BLX             __assert_fail|250-247-224-239
58726|code|LDR             R0, =aMRmSoMRmEo; "m.rm_so < m.rm_eo"|10-72
58728|code|MOVS            R2, #0xEE|238-34
58730|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|6-73
58732|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|6-75
58734|code|BLX             __assert_fail|250-247-218-239
58738|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|8-72
58740|code|MOVS            R2, #0xED|237-34
58742|code|LDR             R1, =aSrcXregexC; "../src/xregex.c"|3-73
58744|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|3-75
58746|code|BLX             __assert_fail|250-247-212-239
58750|data|ALIGN 0x10|0-191
58752|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|164-2-1-0
58756|data|DCD aSrcXregexC; "../src/xregex.c"|248-1-1-0
58760|data|DCD aXregexMatchSub; "xregex_match_sub_strdup"|184-1-1-0
58764|data|DCD aXmXmUsed; "xm->xm_used"|216-2-1-0
58768|data|DCD aMRmSoMRmEo; "m.rm_so < m.rm_eo"|0-3-1-0
58772|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|228-2-1-0
58776|code|MOV             R3, #0x18888|72-246-136-3-192-242-1-3
58784|code|LDR             R0, [R3]|24-104
58786|code|BX              LR|112-71
58788|code|CMP             R0, #0|0-40
58790|code|PUSH            {R3-R7,LR}|248-181
58792|code|MOV             R4, R0|4-70
58794|code|BLE             loc_E5F4|35-221
58796|code|ADD.W           R0, R0, #0x18; size|0-241-24-0
58800|code|BLX             malloc|250-247-226-238
58804|code|MOV             R5, R0|5-70
58806|code|CBZ             R0, loc_E5EC|200-177
58808|code|LDR             R3, =dword_18888|17-75
58810|code|ADD.W           R6, R5, #8|5-241-8-6
58814|code|MOVS            R1, #0; c|0-33
58816|code|MOV             R2, R4; n|34-70
58818|code|MOV             R0, R6; s|48-70
58820|code|STR             R4, [R5,#4]|108-96
58822|code|LDR.W           LR, [R3]|211-248-0-224
58826|code|MOV             R7, #0xF00FBAAB|75-246-171-39-207-242-15-7
58834|code|STR             R7, [R5]|47-96
58836|code|ADD             LR, R4|166-68
58838|code|STR.W           LR, [R3]|195-248-0-224
58842|code|BLX             memset|250-247-56-239
58846|code|ADDS            R0, R6, R4; s|48-25
58848|code|MOVS            R1, #0x55 ; 'U'; c|85-33
58850|code|MOVS            R2, #0x10; n|16-34
58852|code|BLX             memset|250-247-50-239
58856|code|MOV             R0, R6|48-70
58858|code|POP             {R3-R7,PC}|248-189
58860|code|LDR             R1, =aOutOfMemory; "out of memory"|5-73
58862|code|BL              sub_9FA8|251-247-219-252
58866|code|B               loc_E5B8|225-231
58868|code|LDR             R0, =aSize0; "size > 0"|4-72
58870|code|MOVS            R2, #0x46 ; 'F'; line|70-34
58872|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|4-73
58874|code|LDR             R3, =aXmalloc; "xmalloc"|5-75
58876|code|BLX             __assert_fail|250-247-146-239
58880|data|DCD dword_18888|136-136-1-0
58884|data|DCD aOutOfMemory; "out of memory"|136-244-0-0
58888|data|DCD aSize0; "size > 0"|48-3-1-0
58892|data|DCD aSrcXmallocC; "../src/xmalloc.c"|60-3-1-0
58896|data|DCD aXmalloc; "xmalloc"|20-3-1-0
58900|code|PUSH            {R4-R6,LR}|112-181
58902|code|MOV             R4, R1|12-70
58904|code|CMP             R0, #0|0-40
58906|code|BEQ             loc_E69E|64-208
58908|code|CMP             R1, #0|0-41
58910|code|BLE             loc_E6C2|80-221
58912|code|LDR.W           R2, [R0,#-8]|80-248-8-44
58916|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
58924|code|CMP             R2, R3|154-66
58926|code|BNE             loc_E6AA|60-209
58928|code|LDR.W           R6, [R0,#-4]|80-248-4-108
58932|code|MOVS            R3, #0xF|15-35
58934|code|ADDS            R1, R0, R6|129-25
58936|code|LDRB            R2, [R1,R3]|202-92
58938|code|CMP             R2, #0x55 ; 'U'|85-42
58940|code|BNE             loc_E688|36-209
58942|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
58946|code|BCS             loc_E638|249-210
58948|code|SUBS            R0, #8; ptr|8-56
58950|code|ADD.W           R1, R4, #0x18; size|4-241-24-1
58954|code|BLX             realloc|250-247-78-238
58958|code|MOV             R5, R0|5-70
58960|code|CBZ             R0, loc_E694|0-179
58962|code|LDR             R2, [R5]|42-104
58964|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
58972|code|CMP             R2, R3|154-66
58974|code|BNE             loc_E6B6|42-209
58976|code|LDR             R3, =dword_18888|27-75
58978|code|SUBS            R2, R4, R6; n|162-27
58980|code|STR             R4, [R5,#4]|108-96
58982|code|ADDS            R5, #8|8-53
58984|code|CMP             R4, R6|180-66
58986|code|LDR             R1, [R3]|25-104
58988|code|ADD             R1, R2|17-68
58990|code|STR             R1, [R3]|25-96
58992|code|BLE             loc_E67A|3-221
58994|code|ADDS            R0, R5, R6; s|168-25
58996|code|MOVS            R1, #0; c|0-33
58998|code|BLX             memset|250-247-234-238
59002|code|ADDS            R0, R5, R4; s|40-25
59004|code|MOVS            R1, #0x55 ; 'U'; c|85-33
59006|code|MOVS            R2, #0x10; n|16-34
59008|code|BLX             memset|250-247-228-238
59012|code|MOV             R0, R5|40-70
59014|code|POP             {R4-R6,PC}|112-189
59016|code|LDR             R0, =aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|18-72
59018|code|MOVS            R2, #0x60 ; '`'; line|96-34
59020|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|18-73
59022|code|LDR             R3, =aXrealloc; "xrealloc"|19-75
59024|code|BLX             __assert_fail|250-247-72-239
59028|code|MOV             R0, R5|40-70
59030|code|LDR             R1, =aOutOfMemory; "out of memory"|18-73
59032|code|BL              sub_9FA8|251-247-134-252
59036|code|B               loc_E652|217-231
59038|code|LDR             R0, =aItemVoid0; "item != ((void *)0)"|17-72
59040|code|MOVS            R2, #0x5C ; '\'; line|92-34
59042|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|13-73
59044|code|LDR             R3, =aXrealloc; "xrealloc"|13-75
59046|code|BLX             __assert_fail|250-247-62-239
59050|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|15-72
59052|code|MOVS            R2, #0x5E ; '^'; line|94-34
59054|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|10-73
59056|code|LDR             R3, =aXrealloc; "xrealloc"|10-75
59058|code|BLX             __assert_fail|250-247-56-239
59062|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|12-72
59064|code|MOVS            R2, #0x64 ; 'd'; line|100-34
59066|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|7-73
59068|code|LDR             R3, =aXrealloc; "xrealloc"|7-75
59070|code|BLX             __assert_fail|250-247-50-239
59074|code|LDR             R0, =aNewsize0; "newsize > 0"|10-72
59076|code|MOVS            R2, #0x5D ; ']'; line|93-34
59078|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|4-73
59080|code|LDR             R3, =aXrealloc; "xrealloc"|4-75
59082|code|BLX             __assert_fail|250-247-44-239
59086|data|ALIGN 0x10|0-191
59088|data|DCD dword_18888|136-136-1-0
59092|data|DCD aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|132-3-1-0
59096|data|DCD aSrcXmallocC; "../src/xmalloc.c"|60-3-1-0
59100|data|DCD aXrealloc; "xrealloc"|28-3-1-0
59104|data|DCD aOutOfMemory; "out of memory"|136-244-0-0
59108|data|DCD aItemVoid0; "item != ((void *)0)"|80-3-1-0
59112|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|112-3-1-0
59116|data|DCD aNewsize0; "newsize > 0"|100-3-1-0
59120|code|PUSH            {R3-R5,LR}|56-181
59122|code|CMP             R0, #0|0-40
59124|code|BEQ             locret_E73C|34-208
59126|code|LDR.W           R2, [R0,#-8]|80-248-8-44
59130|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
59138|code|CMP             R2, R3|154-66
59140|code|BNE             loc_E74A|33-209
59142|code|LDR.W           R4, [R0,#-4]|80-248-4-76
59146|code|MOVS            R3, #0xF|15-35
59148|code|ADDS            R1, R0, R4|1-25
59150|code|LDRB            R2, [R1,R3]|202-92
59152|code|CMP             R2, #0x55 ; 'U'|85-42
59154|code|BNE             loc_E73E|20-209
59156|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
59160|code|BCS             loc_E70E|249-210
59162|code|SUB.W           R5, R0, #8|160-241-8-5
59166|code|ADD.W           R2, R4, #0x18; n|4-241-24-2
59170|code|MOVS            R1, #0; c|0-33
59172|code|MOV             R0, R5; s|40-70
59174|code|BLX             memset|250-247-146-238
59178|code|LDR             R3, =dword_18888|11-75
59180|code|MOV             R0, R5; ptr|40-70
59182|code|LDR             R2, [R3]|26-104
59184|code|SUBS            R4, R2, R4|20-27
59186|code|STR             R4, [R3]|28-96
59188|code|POP.W           {R3-R5,LR}|189-232-56-64
59192|code|B.W             j_free|250-247-146-189
59196|code|POP             {R3-R5,PC}|56-189
59198|code|LDR             R0, =aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|7-72
59200|code|MOVS            R2, #0x78 ; 'x'; line|120-34
59202|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|7-73
59204|code|LDR             R3, =aXfree; "xfree"|7-75
59206|code|BLX             __assert_fail|250-247-238-238
59210|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|7-72
59212|code|MOVS            R2, #0x76 ; 'v'; line|118-34
59214|code|LDR             R1, =aSrcXmallocC; "../src/xmalloc.c"|4-73
59216|code|LDR             R3, =aXfree; "xfree"|4-75
59218|code|BLX             __assert_fail|250-247-232-238
59222|data|ALIGN 4|0-191
59224|data|DCD dword_18888|136-136-1-0
59228|data|DCD aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|172-3-1-0
59232|data|DCD aSrcXmallocC; "../src/xmalloc.c"|60-3-1-0
59236|data|DCD aXfree; "xfree"|40-3-1-0
59240|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|112-3-1-0
59244|code|PUSH            {R3-R5,LR}|56-181
59246|code|MOV             R5, R0|5-70
59248|code|BLX             strlen|250-247-52-238
59252|code|ADDS            R0, #1|1-48
59254|code|BL              sub_E5A4|255-247-21-255
59258|code|MOV             R1, R5; src|41-70
59260|code|MOV             R4, R0|4-70
59262|code|BLX             strcpy|250-247-234-237
59266|code|MOV             R0, R4|32-70
59268|code|POP             {R3-R5,PC}|56-189
59270|data|ALIGN 4|0-191
59272|code|LDR             R3, [R0]|3-104
59274|code|CBZ             R3, loc_E79C|59-177
59276|code|MOV             R3, R0|3-70
59278|code|MOVS            R0, #0|0-32
59280|code|LDR.W           R2, [R3,#4]!|83-248-4-47
59284|code|ADDS            R0, #1|1-48
59286|code|CMP             R2, #0|0-42
59288|code|BNE             loc_E790|250-209
59290|code|BX              LR|112-71
59292|code|MOV             R0, R3|24-70
59294|code|BX              LR|112-71
59296|code|PUSH            {R3-R7,LR}|248-181
59298|code|MOV             R4, R1|12-70
59300|code|LDR             R6, [R0]|6-104
59302|code|MOVS            R5, #4|4-37
59304|code|MOVS            R1, #8|8-33
59306|code|CBZ             R6, loc_E7C4|94-177
59308|code|MOVS            R6, #0|0-38
59310|code|MOV             R3, R0|3-70
59312|code|LDR.W           R2, [R3,#4]!|83-248-4-47
59316|code|ADDS            R6, #1|1-54
59318|code|CMP             R2, #0|0-42
59320|code|BNE             loc_E7B0|250-209
59322|code|ADDS            R1, R6, #2|177-28
59324|code|ADDS            R5, R6, #1|117-28
59326|code|LSLS            R6, R6, #2|182-0
59328|code|LSLS            R1, R1, #2|137-0
59330|code|LSLS            R5, R5, #2|173-0
59332|code|BL              sub_E614|255-247-38-255
59336|code|MOV             R7, R0|7-70
59338|code|MOV             R0, R4|32-70
59340|code|BL              sub_E76C|255-247-206-255
59344|code|MOVS            R3, #0|0-35
59346|code|STR             R0, [R7,R6]|184-81
59348|code|MOV             R0, R7|56-70
59350|code|STR             R3, [R7,R5]|123-81
59352|code|POP             {R3-R7,PC}|248-189
59354|data|ALIGN 4|0-191
59356|code|PUSH.W          {R4-R11,LR}|45-233-240-79
59360|code|SUB             SP, SP, #0xC|131-176
59362|code|LDRB            R6, [R0]|6-120
59364|code|MOV             R5, R0|5-70
59366|code|MOV             R4, R1|12-70
59368|code|MOV             R7, R0|7-70
59370|code|MOV.W           R9, #0|79-240-0-9
59374|code|CBNZ            R6, loc_E846|86-187
59376|code|ADD.W           R0, R9, #1|9-241-1-0
59380|code|MOV             R8, R9|200-70
59382|code|LSLS            R0, R0, #2|128-0
59384|code|BL              sub_E5A4|255-247-212-254
59388|code|STR             R0, [SP,#4]|1-144
59390|code|CMP.W           R9, #0|185-241-0-15
59394|code|BEQ             loc_E8C0|93-208
59396|code|LDR.W           R10, [SP,#4]|221-248-4-160
59400|code|MOV.W           R8, #0|79-240-0-8
59404|code|LDRB            R1, [R5]|41-120
59406|code|CBZ             R1, loc_E834|137-177
59408|code|STR             R1, [SP]|0-145
59410|code|BLX             __ctype_b_loc|250-247-210-237
59414|code|LDR             R1, [SP]|0-153
59416|code|MOV             R11, R5|171-70
59418|code|LDR             R6, [R0]|6-104
59420|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
59424|code|LSLS            R2, R3, #0x12|154-4
59426|code|BMI             loc_E82C|3-212
59428|code|MOV             R0, R4|32-70
59430|code|BLX             strchr|250-247-224-237
59434|code|CBZ             R0, loc_E86E|0-179
59436|code|LDRB.W          R1, [R11,#1]!|27-248-1-31
59440|code|CMP             R1, #0|0-41
59442|code|BNE             loc_E81C|243-209
59444|code|MOVS            R3, #0|0-35
59446|code|STR.W           R3, [R10]|202-248-0-48
59450|code|LDR             R0, =aArgvIVoid0; "argv[i] != ((void *)0)"|53-72
59452|code|MOVS            R2, #0x70 ; 'p'|112-34
59454|code|LDR             R1, =aSrcArgvC; "../src/argv.c"|53-73
59456|code|LDR             R3, =aArgvCreate; "argv_create"|53-75
59458|code|BLX             __assert_fail|250-247-112-238
59462|code|BLX             __ctype_b_loc|250-247-184-237
59466|code|LDR.W           R8, [R0]|208-248-0-128
59470|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
59474|code|ANDS.W          R3, R3, #0x2000|19-244-0-83
59478|code|BNE             loc_E868|7-209
59480|code|MOV             R0, R4|32-70
59482|code|MOV             R1, R6|49-70
59484|code|STR             R3, [SP]|0-147
59486|code|BLX             strchr|250-247-196-237
59490|code|LDR             R3, [SP]|0-155
59492|code|CMP             R0, #0|0-40
59494|code|BEQ             loc_E8D0|51-208
59496|code|LDRB            R6, [R7,#1]|126-120
59498|code|ADDS            R7, #1|1-55
59500|code|B               loc_E7EE|191-231
59502|code|LDRB.W          R1, [R11]|155-248-0-16
59506|code|CMP             R1, #0|0-41
59508|code|BEQ             loc_E834|222-208
59510|code|MOV             R5, R11|93-70
59512|code|B               loc_E888|6-224
59514|code|MOV             R0, R4|32-70
59516|code|BLX             strchr|250-247-180-237
59520|code|CBNZ            R0, loc_E890|48-185
59522|code|LDRB.W          R1, [R5,#1]!|21-248-1-31
59526|code|CBZ             R1, loc_E890|25-177
59528|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
59532|code|LSLS            R3, R3, #0x12|155-4
59534|code|BPL             loc_E87A|244-213
59536|code|RSB.W           R7, R11, R5|203-235-5-7
59540|code|CMP             R7, #0|0-47
59542|code|BLE             loc_E834|205-221
59544|code|ADDS            R0, R7, #1|120-28
59546|code|BL              sub_E5A4|255-247-131-254
59550|code|MOV             R2, R7|58-70
59552|code|MOV             R1, R11|89-70
59554|code|MOV             R6, R0|6-70
59556|code|BLX             memcpy|250-247-240-236
59560|code|MOVS            R2, #0|0-34
59562|code|STRB            R2, [R6,R7]|242-85
59564|code|STR.W           R6, [R10],#4|74-248-4-107
59568|code|CMP             R6, #0|0-46
59570|code|BEQ             loc_E83A|194-208
59572|code|ADD.W           R8, R8, #1|8-241-1-8
59576|code|CMP             R8, R9|200-69
59578|code|BNE             loc_E80C|167-209
59580|code|MOV.W           R8, R8,LSL#2|79-234-136-8
59584|code|LDR             R2, [SP,#4]|1-154
59586|code|MOVS            R3, #0|0-35
59588|code|MOV             R0, R2|16-70
59590|code|STR.W           R3, [R2,R8]|66-248-8-48
59594|code|ADD             SP, SP, #0xC|3-176
59596|code|POP.W           {R4-R11,PC}|189-232-240-143
59600|code|ADD.W           R10, R9, #1|9-241-1-10
59604|code|CBNZ            R3, loc_E8F2|107-185
59606|code|MOV             R0, R4|32-70
59608|code|MOV             R1, R6|49-70
59610|code|BLX             strchr|250-247-134-237
59614|code|CBNZ            R0, loc_E8F2|64-185
59616|code|LDRB            R6, [R7,#1]|126-120
59618|code|CBZ             R6, loc_E8FA|86-177
59620|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
59624|code|ADDS            R7, #1|1-55
59626|code|AND.W           R3, R3, #0x2000|3-244-0-83
59630|code|CMP             R3, #0|0-43
59632|code|BEQ             loc_E8D6|241-208
59634|code|LDRB            R6, [R7]|62-120
59636|code|CBZ             R6, loc_E8FE|30-177
59638|code|MOV             R9, R10|209-70
59640|code|B               loc_E7EE|121-231
59642|code|MOV             R9, R10|209-70
59644|code|B               loc_E7F0|120-231
59646|code|ADD.W           R0, R9, #2|9-241-2-0
59650|code|MOV             R9, R10|209-70
59652|code|LSLS            R0, R0, #2|128-0
59654|code|BL              sub_E5A4|255-247-77-254
59658|code|STR             R0, [SP,#4]|1-144
59660|code|B               loc_E804|122-231
59662|data|ALIGN 0x10|0-191
59664|data|DCD aArgvIVoid0; "argv[i] != ((void *)0)"|224-3-1-0
59668|data|DCD aSrcArgvC; "../src/argv.c"|248-3-1-0
59672|data|DCD aArgvCreate; "argv_create"|212-3-1-0
59676|code|PUSH            {R3-R5,LR}|56-181
59678|code|MOV             R5, R0|5-70
59680|code|LDR             R0, [R0]|0-104
59682|code|CBZ             R0, loc_E932|48-177
59684|code|MOV             R4, R5|44-70
59686|code|BL              sub_E6F0|255-247-227-254
59690|code|LDR.W           R0, [R4,#4]!|84-248-4-15
59694|code|CMP             R0, #0|0-40
59696|code|BNE             loc_E926|249-209
59698|code|MOV             R0, R5|40-70
59700|code|POP.W           {R3-R5,LR}|189-232-56-64
59704|code|B.W             sub_E6F0|255-247-218-190
59708|code|PUSH.W          {R4-R8,LR}|45-233-240-65
59712|code|MOV             R5, R0|5-70
59714|code|SUB             SP, SP, #0x18|134-176
59716|code|MOV             R6, R1|14-70
59718|code|MOV             R4, R1|12-70
59720|code|CBZ             R1, loc_E962|89-177
59722|code|LDM             R1, {R0,R1}|3-201
59724|code|MOV             R4, SP|108-70
59726|code|STMEA.W         SP, {R0,R1}|141-232-3-0
59730|code|MOVS            R1, #0; tz|0-33
59732|code|ADD             R0, SP, #0x30+tv; tv|2-168
59734|code|BLX             gettimeofday|250-247-4-237
59738|code|CMP             R0, #0|0-40
59740|code|IT GE|168-191
59742|code|MOVGE           R4, SP|108-70
59744|code|BLT             loc_EA02|79-219
59746|code|MOV             R7, #0x10624DD3|68-246-211-87-193-242-98-7
59754|code|MOV.W           R8, #0x3E8|79-244-122-120
59758|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
59762|code|CBZ             R4, loc_E986|68-177
59764|code|LDM.W           R4, {R2,R3}|148-232-12-0
59768|code|SMULL.W         R0, R1, R7, R3|135-251-3-1
59772|code|ASRS            R3, R3, #0x1F|219-23
59774|code|RSB.W           R3, R3, R1,ASR#6|195-235-161-19
59778|code|MLA.W           R2, R8, R2, R3; timeout|8-251-2-50
59782|code|LDR             R0, [R5,#0xC]; fds|232-104
59784|code|LDR             R1, [R5,#4]; nfds|105-104
59786|code|BLX             poll|250-247-192-236
59790|code|CMP             R0, #0|0-40
59792|code|BLT             loc_E998|2-219
59794|code|ADD             SP, SP, #0x18|6-176
59796|code|POP.W           {R4-R8,PC}|189-232-240-129
59800|code|BLX             __errno_location|250-247-58-237
59804|code|LDR             R3, [R0]|3-104
59806|code|CMP             R3, #4|4-43
59808|code|BEQ             loc_E9AA|3-208
59810|code|MOVS            R0, #1|1-32
59812|code|LDR             R1, =aSelectPoll; "select/poll"|26-73
59814|code|BL              sub_9FA8|251-247-255-250
59818|code|CMP             R6, #0|0-46
59820|code|BEQ             loc_E96E|223-208
59822|code|MOVS            R1, #0; tz|0-33
59824|code|ADD             R0, SP, #0x30+var_20; tv|4-168
59826|code|BLX             gettimeofday|250-247-214-236
59830|code|CMP             R0, #0|0-40
59832|code|BLT             loc_E9F8|30-219
59834|code|LDR             R2, [SP,#0x30+var_20.tv_usec]|5-154
59836|code|LDR             R3, [SP,#0x30+tv.tv_usec]|3-155
59838|code|LDR             R1, [SP,#0x30+tv]|2-153
59840|code|LDR             R0, [SP,#0x30+var_20]|4-152
59842|code|SUBS            R3, R2, R3|211-26
59844|code|RSB.W           R1, R1, R0|193-235-0-1
59848|code|BMI             loc_E9EC|16-212
59850|code|LDR             R0, [R6,#4]|112-104
59852|code|LDR             R2, [R6]|50-104
59854|code|SUBS            R3, R0, R3|195-26
59856|code|STR             R3, [R4,#4]|99-96
59858|code|CMP             R3, #0|0-43
59860|code|RSB.W           R1, R1, R2|193-235-2-1
59864|code|STR             R1, [R4]|33-96
59866|code|BGE             loc_E96E|200-218
59868|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
59872|code|SUBS            R1, #1|1-57
59874|code|ADD.W           R3, R3, #0x240|3-245-16-115
59878|code|STM.W           R4, {R1,R3}|132-232-10-0
59882|code|B               loc_E96E|192-231
59884|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
59888|code|SUBS            R1, #1|1-57
59890|code|ADD.W           R3, R3, #0x240|3-245-16-115
59894|code|B               loc_E9CA|232-231
59896|code|MOVS            R0, #1|1-32
59898|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|6-73
59900|code|BL              sub_9FA8|251-247-212-250
59904|code|B               loc_E9BA|219-231
59906|code|MOVS            R0, #1|1-32
59908|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|3-73
59910|code|BL              sub_9FA8|251-247-207-250
59914|code|MOV             R4, SP|108-70
59916|code|B               loc_E962|169-231
59918|data|ALIGN 0x10|0-191
59920|data|DCD aSelectPoll; "select/poll"|96-4-1-0
59924|data|DCD aGettimeofday_0; "gettimeofday"|80-4-1-0
59928|code|PUSH            {R4,LR}|16-181
59930|code|MOVS            R0, #0x10|16-32
59932|code|BL              sub_E5A4|255-247-194-253
59936|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
59944|code|MOV             R4, R0|4-70
59946|code|LDR             R0, [R0,#8]|128-104
59948|code|STR             R3, [R4]|35-96
59950|code|ADDS            R0, #0x10|16-48
59952|code|STR             R0, [R4,#8]|160-96
59954|code|LSLS            R0, R0, #3|192-0
59956|code|BL              sub_E5A4|255-247-182-253
59960|code|MOVS            R3, #0|0-35
59962|code|STR             R3, [R4,#4]|99-96
59964|code|STR             R0, [R4,#0xC]|224-96
59966|code|MOV             R0, R4|32-70
59968|code|POP             {R4,PC}|16-189
59970|data|ALIGN 4|0-191
59972|code|LDR             R2, [R0]|2-104
59974|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
59982|code|CMP             R2, R3|154-66
59984|code|PUSH            {R4,LR}|16-181
59986|code|MOV             R4, R0|4-70
59988|code|BNE             loc_EA6C|10-209
59990|code|LDR             R0, [R0,#0xC]|192-104
59992|code|MOVS            R3, #0|0-35
59994|code|STR             R3, [R4]|35-96
59996|code|CBZ             R0, loc_EA62|8-177
59998|code|BL              sub_E6F0|255-247-71-254
60002|code|MOV             R0, R4|32-70
60004|code|POP.W           {R4,LR}|189-232-16-64
60008|code|B.W             sub_E6F0|255-247-66-190
60012|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|2-72
60014|code|MOVS            R2, #0xBC; line|188-34
60016|code|LDR             R1, =aSrcXpollC; "../src/xpoll.c"|2-73
60018|code|LDR             R3, =aXpollfdDestroy; "xpollfd_destroy"|3-75
60020|code|BLX             __assert_fail|250-247-86-237
60024|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|108-4-1-0
60028|data|DCD aSrcXpollC; "../src/xpoll.c"|136-4-1-0
60032|data|DCD aXpollfdDestroy; "xpollfd_destroy"|8-4-1-0
60036|code|LDR             R2, [R0]|2-104
60038|code|PUSH            {R3,LR}|8-181
60040|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
60048|code|CMP             R2, R3|154-66
60050|code|BNE             loc_EA9A|2-209
60052|code|MOVS            R3, #0|0-35
60054|code|STR             R3, [R0,#4]|67-96
60056|code|POP             {R3,PC}|8-189
60058|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
60060|code|MOVS            R2, #0xC8; line|200-34
60062|code|LDR             R1, =aSrcXpollC; "../src/xpoll.c"|3-73
60064|code|LDR             R3, =aXpollfdZero; "xpollfd_zero"|3-75
60066|code|BLX             __assert_fail|250-247-64-237
60070|data|ALIGN 4|0-191
60072|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|108-4-1-0
60076|data|DCD aSrcXpollC; "../src/xpoll.c"|136-4-1-0
60080|data|DCD aXpollfdZero; "xpollfd_zero"|24-4-1-0
60084|code|PUSH.W          {R4-R8,LR}|45-233-240-65
60088|code|MOV             R4, R0|4-70
60090|code|LDR             R0, [R0]|0-104
60092|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
60100|code|MOV             R5, R1|13-70
60102|code|CMP             R0, R3|152-66
60104|code|MOV             R7, R2|23-70
60106|code|BNE             loc_EBA2|106-209
60108|code|LDR             R6, [R4,#4]|102-104
60110|code|LDR             R0, [R4,#0xC]|224-104
60112|code|CMP             R6, #0|0-46
60114|code|BEQ             loc_EB9E|100-208
60116|code|LDR             R3, [R0]|3-104
60118|code|MOV             R12, R0|132-70
60120|code|CMP             R3, R1|139-66
60122|code|BEQ             loc_EB04|19-208
60124|code|ADD.W           R2, R0, #8|0-241-8-2
60128|code|MOVS            R3, #0|0-35
60130|code|B               loc_EAEE|4-224
60132|code|MOV             R12, R2|148-70
60134|code|LDR.W           R1, [R2],#8|82-248-8-27
60138|code|CMP             R1, R5|169-66
60140|code|BEQ             loc_EB08|12-208
60142|code|ADDS            R3, #1|1-51
60144|code|CMP             R3, R6|179-66
60146|code|MOV             R8, R3|152-70
60148|code|BNE             loc_EAE4|246-209
60150|code|CMP             R6, R8|70-69
60152|code|IT EQ|8-191
60154|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
60158|code|BEQ             loc_EB4C|37-208
60160|code|POP.W           {R4-R8,PC}|189-232-240-129
60164|code|MOV.W           R8, #0|79-240-0-8
60168|code|UXTH            R3, R7|187-178
60170|code|LDRH.W          R1, [R12,#4]|188-248-4-16
60174|code|AND.W           R2, R3, #1|3-240-1-2
60178|code|TST.W           R3, #2|19-240-2-15
60182|code|ITT NE|28-191
60184|code|ORRNE.W         R2, R2, #4|66-240-4-2
60188|code|UXTHNE          R2, R2|146-178
60190|code|TST.W           R3, #4|19-240-4-15
60194|code|IT NE|24-191
60196|code|ORRNE.W         R2, R2, #0x10|66-240-16-2
60200|code|TST.W           R3, #8|19-240-8-15
60204|code|IT NE|24-191
60206|code|ORRNE.W         R2, R2, #8|66-240-8-2
60210|code|LSLS            R3, R3, #0x1B|219-6
60212|code|IT MI|72-191
60214|code|ORRMI.W         R2, R2, #0x20|66-240-32-2
60218|code|CMP             R6, R8|70-69
60220|code|ORR.W           R2, R2, R1|66-234-1-2
60224|code|IT EQ|8-191
60226|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
60230|code|STRH.W          R2, [R12,#4]|172-248-4-32
60234|code|BNE             locret_EB00|217-209
60236|code|LDR             R1, [R4,#8]|161-104
60238|code|ADDS            R6, #1|1-54
60240|code|STR             R6, [R4,#4]|102-96
60242|code|CMP             R6, R1|142-66
60244|code|BLS             loc_EB68|8-217
60246|code|ADDS            R1, #0x10|16-49
60248|code|STR             R1, [R4,#8]|161-96
60250|code|LSLS            R1, R1, #3|201-0
60252|code|BL              sub_E614|255-247-90-253
60256|code|LDR             R1, [R4,#8]|161-104
60258|code|CMP             R6, R1|142-66
60260|code|STR             R0, [R4,#0xC]|224-96
60262|code|BHI             loc_EB56|246-216
60264|code|UXTH            R7, R7|191-178
60266|code|STR.W           R5, [R0,R8]|64-248-8-80
60270|code|AND.W           R3, R7, #1|7-240-1-3
60274|code|LSLS            R1, R7, #0x1E|185-7
60276|code|IT MI|72-191
60278|code|ORRMI.W         R3, R3, #4|67-240-4-3
60282|code|ADD             R0, R8|64-68
60284|code|IT MI|72-191
60286|code|UXTHMI          R3, R3|155-178
60288|code|LSLS            R2, R7, #0x1D|122-7
60290|code|IT MI|72-191
60292|code|ORRMI.W         R3, R3, #0x10|67-240-16-3
60296|code|LSLS            R1, R7, #0x1C|57-7
60298|code|IT MI|72-191
60300|code|ORRMI.W         R3, R3, #8|67-240-8-3
60304|code|LSLS            R2, R7, #0x1B|250-6
60306|code|IT MI|72-191
60308|code|ORRMI.W         R3, R3, #0x20|67-240-32-3
60312|code|STRH            R3, [R0,#4]|131-128
60314|code|POP.W           {R4-R8,PC}|189-232-240-129
60318|code|MOV             R8, R6|176-70
60320|code|B               loc_EB4C|212-231
60322|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
60324|code|MOVS            R2, #0xD9; line|217-34
60326|code|LDR             R1, =aSrcXpollC; "../src/xpoll.c"|3-73
60328|code|LDR             R3, =aXpollfdSet; "xpollfd_set"|3-75
60330|code|BLX             __assert_fail|250-247-188-236
60334|data|ALIGN 0x10|0-191
60336|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|108-4-1-0
60340|data|DCD aSrcXpollC; "../src/xpoll.c"|136-4-1-0
60344|data|DCD aXpollfdSet; "xpollfd_set"|40-4-1-0
60348|code|PUSH.W          {R3-R11,LR}|45-233-248-79
60352|code|MOV             R4, R0|4-70
60354|code|LDR             R0, [R0]|0-104
60356|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
60364|code|MOV             R5, R1|13-70
60366|code|CMP             R0, R3|152-66
60368|code|MOV             R6, R2|22-70
60370|code|BNE             loc_EC5E|68-209
60372|code|MOV             R0, R1|8-70
60374|code|MOVS            R1, #0x2E ; '.'|46-33
60376|code|BLX             memset|250-247-56-236
60380|code|LDR             R7, [R4,#4]|103-104
60382|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
60386|code|CMP             R7, #0|0-47
60388|code|BEQ             loc_EC40|44-208
60390|code|MOVS            R2, #0|0-34
60392|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
60396|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
60400|code|MOV.W           R11, #0x4F ; 'O'|79-240-79-11
60404|code|MOV             R3, R2|19-70
60406|code|MOV.W           R10, #0x49 ; 'I'|79-240-73-10
60410|code|MOV.W           R9, #0x45 ; 'E'|79-240-69-9
60414|code|B               loc_EC14|9-224
60416|code|STRB.W          R9, [R5,R2]|5-248-2-144
60420|code|LDR             R7, [R4,#4]|103-104
60422|code|CMP             R12, R2|148-69
60424|code|IT LT|184-191
60426|code|MOVLT           R12, R2|148-70
60428|code|ADDS            R3, #1|1-51
60430|code|CMP             R3, R7|187-66
60432|code|MOV             R2, R3|26-70
60434|code|BCS             loc_EC3C|19-210
60436|code|LDR             R1, [R4,#0xC]|225-104
60438|code|ADD.W           R0, R1, R2,LSL#3|1-235-194-0
60442|code|LDR.W           R2, [R1,R2,LSL#3]|81-248-50-32
60446|code|LDRH            R1, [R0,#6]|193-136
60448|code|CMP             R2, R8|66-69
60450|code|BGE             loc_EC0C|243-218
60452|code|CMP             R1, #0|0-41
60454|code|BEQ             loc_EC06|238-208
60456|code|UXTH            R1, R1|137-178
60458|code|TST.W           R1, #0x38|17-240-56-15
60462|code|BNE             loc_EC00|231-209
60464|code|LSLS            R0, R1, #0x1F|200-7
60466|code|BPL             loc_EC52|14-213
60468|code|STRB.W          R10, [R5,R2]|5-248-2-160
60472|code|LDR             R7, [R4,#4]|103-104
60474|code|B               loc_EC06|228-231
60476|code|ADD.W           R7, R12, #1|12-241-1-7
60480|code|CMP             R6, R7|190-66
60482|code|BLE             loc_EC6A|18-221
60484|code|ADD             R12, R5|172-68
60486|code|MOVS            R3, #0|0-35
60488|code|MOV             R0, R5|40-70
60490|code|STRB.W          R3, [R12,#1]|140-248-1-48
60494|code|POP.W           {R3-R11,PC}|189-232-248-143
60498|code|LSLS            R1, R1, #0x1D|73-7
60500|code|ITT MI|68-191
60502|code|STRBMI.W        R11, [R5,R2]|5-248-2-176
60506|code|LDRMI           R7, [R4,#4]|103-104
60508|code|B               loc_EC06|211-231
60510|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|6-72
60512|code|MOVS            R2, #0xF7|247-34
60514|code|LDR             R1, =aSrcXpollC; "../src/xpoll.c"|6-73
60516|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|6-75
60518|code|BLX             __assert_fail|250-247-94-236
60522|code|LDR             R0, =aMaxfd1Len; "maxfd + 1 < len"|6-72
60524|code|MOVW            R2, #0x10B|64-242-11-18
60528|code|LDR             R1, =aSrcXpollC; "../src/xpoll.c"|2-73
60530|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|3-75
60532|code|BLX             __assert_fail|250-247-86-236
60536|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|108-4-1-0
60540|data|DCD aSrcXpollC; "../src/xpoll.c"|136-4-1-0
60544|data|DCD aXpollfdStr; "xpollfd_str"|52-4-1-0
60548|data|DCD aMaxfd1Len; "maxfd + 1 < len"|152-4-1-0
60552|code|LDR             R2, [R0]|2-104
60554|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
60562|code|CMP             R2, R3|154-66
60564|code|PUSH            {R4-R6,LR}|112-181
60566|code|BNE             loc_ECF4|45-209
60568|code|LDR             R6, [R0,#4]|70-104
60570|code|CBZ             R6, loc_ECBE|134-177
60572|code|LDR             R5, [R0,#0xC]|197-104
60574|code|LDR             R3, [R5]|43-104
60576|code|CMP             R3, R1|139-66
60578|code|BEQ             loc_ECC2|14-208
60580|code|ADD.W           R2, R5, #8|5-241-8-2
60584|code|MOVS            R3, #0|0-35
60586|code|B               loc_ECB6|4-224
60588|code|MOV             R5, R2|21-70
60590|code|LDR.W           R4, [R2],#8|82-248-8-75
60594|code|CMP             R4, R1|140-66
60596|code|BEQ             loc_ECC2|5-208
60598|code|ADDS            R3, #1|1-51
60600|code|CMP             R3, R6|179-66
60602|code|BNE             loc_ECAC|247-209
60604|code|MOVS            R6, #0|0-38
60606|code|SXTH            R0, R6|48-178
60608|code|POP             {R4-R6,PC}|112-189
60610|code|LDRH            R3, [R5,#6]|235-136
60612|code|AND.W           R6, R3, #1|3-240-1-6
60616|code|LSLS            R0, R3, #0x1D|88-7
60618|code|ITT MI|68-191
60620|code|ORRMI.W         R6, R6, #2|70-240-2-6
60624|code|UXTHMI          R6, R6|182-178
60626|code|LSLS            R1, R3, #0x1B|217-6
60628|code|ITT MI|68-191
60630|code|ORRMI.W         R6, R6, #4|70-240-4-6
60634|code|UXTHMI          R6, R6|182-178
60636|code|LSLS            R2, R3, #0x1C|26-7
60638|code|ITT MI|68-191
60640|code|ORRMI.W         R6, R6, #8|70-240-8-6
60644|code|UXTHMI          R6, R6|182-178
60646|code|LSLS            R3, R3, #0x1A|155-6
60648|code|ITT MI|68-191
60650|code|ORRMI.W         R6, R6, #0x10|70-240-16-6
60654|code|UXTHMI          R6, R6|182-178
60656|code|SXTH            R0, R6|48-178
60658|code|POP             {R4-R6,PC}|112-189
60660|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
60662|code|MOVW            R2, #0x123; line|64-242-35-18
60666|code|LDR             R1, =aSrcXpollC; "../src/xpoll.c"|3-73
60668|code|LDR             R3, =aXpollfdRevents; "xpollfd_revents"|3-75
60670|code|BLX             __assert_fail|250-247-18-236
60674|data|ALIGN 4|0-191
60676|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|108-4-1-0
60680|data|DCD aSrcXpollC; "../src/xpoll.c"|136-4-1-0
60684|data|DCD aXpollfdRevents; "xpollfd_revents"|64-4-1-0
60688|code|PUSH            {R3-R5,LR}|56-181
60690|code|MOVS            R1, #3|3-33
60692|code|MOVS            R2, #0|0-34
60694|code|MOV             R4, R0|4-70
60696|code|BLX             fcntl|250-247-116-235
60700|code|CMP             R0, #0|0-40
60702|code|MOV             R5, R0|5-70
60704|code|BLT             loc_ED40|14-219
60706|code|MOVS            R1, #4|4-33
60708|code|ORR.W           R2, R5, #0x800|69-244-0-98
60712|code|MOV             R0, R4|32-70
60714|code|BLX             fcntl|250-247-108-235
60718|code|CMP             R0, #0|0-40
60720|code|BLT             loc_ED34|0-219
60722|code|POP             {R3-R5,PC}|56-189
60724|code|MOVS            R0, #1|1-32
60726|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
60728|code|POP.W           {R3-R5,LR}|189-232-56-64
60732|code|B.W             sub_9FA8|251-247-52-185
60736|code|MOVS            R0, #1|1-32
60738|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
60740|code|BL              sub_9FA8|251-247-48-249
60744|code|B               loc_ED22|235-231
60746|data|ALIGN 4|0-191
60748|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|196-4-1-0
60752|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|180-4-1-0
60756|code|PUSH            {R3-R5,LR}|56-181
60758|code|MOVS            R1, #3|3-33
60760|code|MOVS            R2, #0|0-34
60762|code|MOV             R4, R0|4-70
60764|code|BLX             fcntl|250-247-82-235
60768|code|CMP             R0, #0|0-40
60770|code|MOV             R5, R0|5-70
60772|code|BLT             loc_ED84|14-219
60774|code|MOVS            R1, #4|4-33
60776|code|BIC.W           R2, R5, #0x800|37-244-0-98
60780|code|MOV             R0, R4|32-70
60782|code|BLX             fcntl|250-247-74-235
60786|code|CMP             R0, #0|0-40
60788|code|BLT             loc_ED78|0-219
60790|code|POP             {R3-R5,PC}|56-189
60792|code|MOVS            R0, #1|1-32
60794|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
60796|code|POP.W           {R3-R5,LR}|189-232-56-64
60800|code|B.W             sub_9FA8|251-247-18-185
60804|code|MOVS            R0, #1|1-32
60806|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
60808|code|BL              sub_9FA8|251-247-14-249
60812|code|B               loc_ED66|235-231
60814|data|ALIGN 0x10|0-191
60816|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|196-4-1-0
60820|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|180-4-1-0
60824|code|PUSH            {R4,R5,LR}|48-181
60826|code|SUB             SP, SP, #0x84|161-176
60828|code|LDR             R5, =__stack_chk_guard|53-77
60830|code|ADD             R1, SP, #4|1-169
60832|code|MOV             R4, R0|4-70
60834|code|LDR             R3, [R5]|43-104
60836|code|STR             R3, [SP,#0x7C]|31-147
60838|code|BLX             tcgetattr|250-247-196-235
60842|code|CMP             R0, #0|0-40
60844|code|BLT             loc_EE2A|61-219
60846|code|ADD             R0, SP, #4|1-168
60848|code|BLX             cfmakeraw|250-247-38-234
60852|code|MOVS            R1, #0|0-33
60854|code|MOV             R0, R4|32-70
60856|code|ADD             R2, SP, #4|1-170
60858|code|BLX             tcsetattr|250-247-198-234
60862|code|CMP             R0, #0|0-40
60864|code|BLT             loc_EE46|65-219
60866|code|MOVS            R2, #0x3C ; '<'|60-34
60868|code|MOVS            R1, #0|0-33
60870|code|ADD             R0, SP, #0x40 ; '@'|16-168
60872|code|BLX             memset|250-247-64-235
60876|code|MOV             R0, R4|32-70
60878|code|ADD             R1, SP, #0x40 ; '@'|16-169
60880|code|BLX             tcgetattr|250-247-174-235
60884|code|CMP             R0, #0|0-40
60886|code|BLT             loc_EE64|69-219
60888|code|MOVS            R2, #0x20 ; ' '|32-34
60890|code|ADD.W           R0, SP, #0x15|13-241-21-0
60894|code|ADD.W           R1, SP, #0x51 ; 'Q'|13-241-81-1
60898|code|BLX             memcmp|250-247-100-234
60902|code|CBNZ            R0, loc_EDF4|40-185
60904|code|LDRB.W          R2, [SP,#0x1A]|157-248-26-32
60908|code|LDRB.W          R3, [SP,#0x56]|157-248-86-48
60912|code|CMP             R2, R3|154-66
60914|code|BEQ             loc_EE08|9-208
60916|code|MOVS            R0, #0|0-32
60918|code|LDR             R1, =aTcsetattrFaile; "tcsetattr failed"|32-73
60920|code|BL              sub_9FA8|251-247-214-248
60924|code|LDR             R2, [SP,#0x7C]|31-154
60926|code|LDR             R3, [R5]|43-104
60928|code|CMP             R2, R3|154-66
60930|code|BNE             loc_EE6E|52-209
60932|code|ADD             SP, SP, #0x84|33-176
60934|code|POP             {R4,R5,PC}|48-189
60936|code|LDR             R3, [SP,#0x40]|16-155
60938|code|LDR             R2, [SP,#4]|1-154
60940|code|CMP             R2, R3|154-66
60942|code|BNE             loc_EDF4|241-209
60944|code|LDR             R3, [SP,#0x44]|17-155
60946|code|LDR             R2, [SP,#8]|2-154
60948|code|CMP             R2, R3|154-66
60950|code|BNE             loc_EDF4|237-209
60952|code|LDR             R3, [SP,#0x48]|18-155
60954|code|LDR             R2, [SP,#0xC]|3-154
60956|code|CMP             R2, R3|154-66
60958|code|BNE             loc_EDF4|233-209
60960|code|LDR             R3, [SP,#0x4C]|19-155
60962|code|LDR             R2, [SP,#0x10]|4-154
60964|code|CMP             R2, R3|154-66
60966|code|BNE             loc_EDF4|229-209
60968|code|B               loc_EDFC|232-231
60970|code|MOVS            R0, #1|1-32
60972|code|LDR             R1, =aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|19-73
60974|code|BL              sub_9FA8|251-247-187-248
60978|code|ADD             R0, SP, #4|1-168
60980|code|BLX             cfmakeraw|250-247-228-233
60984|code|MOVS            R1, #0|0-33
60986|code|MOV             R0, R4|32-70
60988|code|ADD             R2, SP, #4|1-170
60990|code|BLX             tcsetattr|250-247-132-234
60994|code|CMP             R0, #0|0-40
60996|code|BGE             loc_EDC2|189-218
60998|code|MOVS            R0, #1|1-32
61000|code|LDR             R1, =aTcsetattr_0; "tcsetattr"|13-73
61002|code|BL              sub_9FA8|251-247-173-248
61006|code|MOVS            R2, #0x3C ; '<'|60-34
61008|code|MOVS            R1, #0|0-33
61010|code|ADD             R0, SP, #0x40 ; '@'|16-168
61012|code|BLX             memset|250-247-250-234
61016|code|MOV             R0, R4|32-70
61018|code|ADD             R1, SP, #0x40 ; '@'|16-169
61020|code|BLX             tcgetattr|250-247-104-235
61024|code|CMP             R0, #0|0-40
61026|code|BGE             loc_EDD8|185-218
61028|code|MOVS            R0, #1|1-32
61030|code|LDR             R1, =(aXcfmakerawTcge+0xC); "tcgetattr"|7-73
61032|code|BL              sub_9FA8|251-247-158-248
61036|code|B               loc_EDD8|180-231
61038|code|BLX             __stack_chk_fail|250-247-48-234
61042|data|ALIGN 4|0-191
61044|data|DCD __stack_chk_guard|136-135-1-0
61048|data|DCD aTcsetattrFaile; "tcsetattr failed"|248-4-1-0
61052|data|DCD aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|212-4-1-0
61056|data|DCD aTcsetattr_0; "tcsetattr"|236-4-1-0
61060|data|DCD aXcfmakerawTcge+0xC; "tcgetattr"|224-4-1-0
61064|code|PUSH            {R4-R6,LR}|112-181
61066|code|MOV             R5, R2|21-70
61068|code|MOVS            R2, #0|0-34
61070|code|MOV             R4, R1|12-70
61072|code|MOV             R3, R2|19-70
61074|code|BLX             forkpty|250-247-66-235
61078|code|MOVS            R3, R4|35-28
61080|code|IT NE|24-191
61082|code|MOVNE           R3, #1|1-35
61084|code|CMP             R0, #0|0-40
61086|code|ITE LE|212-191
61088|code|MOVLE           R3, #0|0-35
61090|code|ANDGT.W         R3, R3, #1|3-240-1-3
61094|code|MOV             R6, R0|6-70
61096|code|CBZ             R3, loc_EEB4|35-177
61098|code|MOV             R0, R4|32-70
61100|code|BLX             strlen|250-247-150-234
61104|code|CMP             R0, R5|168-66
61106|code|BCS             loc_EEB8|1-210
61108|code|MOV             R0, R6|48-70
61110|code|POP             {R4-R6,PC}|112-189
61112|code|LDR             R0, =aStrlenNameLen; "strlen(name) < len"|2-72
61114|code|MOVS            R2, #0x88|136-34
61116|code|LDR             R1, =aSrcXptyC; "../src/xpty.c"|2-73
61118|code|LDR             R3, =aXforkpty; "xforkpty"|3-75
61120|code|BLX             __assert_fail|250-247-48-235
61124|data|DCD aStrlenNameLen; "strlen(name) < len"|12-5-1-0
61128|data|DCD aSrcXptyC; "../src/xpty.c"|32-5-1-0
61132|data|DCD aXforkpty; "xforkpty"|168-4-1-0
61136|code|SUBS            R2, R1, #1|74-30
61138|code|IT EQ|8-191
61140|code|BXEQ            LR|112-71
61142|code|BCC.W           loc_F122|192-240-36-129
61146|code|CMP             R0, R1|136-66
61148|code|BLS.W           loc_F10C|64-242-22-129
61152|code|TST             R1, R2|17-66
61154|code|BEQ.W           loc_F114|0-240-23-129
61158|code|CLZ.W           R3, R0|176-250-128-243
61162|code|CLZ.W           R2, R1|177-250-129-242
61166|code|SUB.W           R3, R2, R3|162-235-3-3
61170|code|RSB.W           R3, R3, #0x1F|195-241-31-3
61174|code|ADR             R2, loc_EF08|4-162
61176|code|ADD.W           R3, R2, R3,LSL#4|2-235-3-19
61180|code|MOV.W           R2, #0|79-240-0-2
61184|code|MOV             PC, R3|159-70
61186|data|ALIGN 4|0-191
61188|code|NOP.W|175-243-0-128
61192|code|CMP.W           R0, R1,LSL#31|176-235-193-127
61196|code|NOP|0-191
61198|code|ADC.W           R2, R2, R2|66-235-2-2
61202|code|IT CS|40-191
61204|code|SUBCS.W         R0, R0, R1,LSL#31|160-235-193-112
61208|code|CMP.W           R0, R1,LSL#30|176-235-129-127
61212|code|NOP|0-191
61214|code|ADC.W           R2, R2, R2|66-235-2-2
61218|code|IT CS|40-191
61220|code|SUBCS.W         R0, R0, R1,LSL#30|160-235-129-112
61224|code|CMP.W           R0, R1,LSL#29|176-235-65-127
61228|code|NOP|0-191
61230|code|ADC.W           R2, R2, R2|66-235-2-2
61234|code|IT CS|40-191
61236|code|SUBCS.W         R0, R0, R1,LSL#29|160-235-65-112
61240|code|CMP.W           R0, R1,LSL#28|176-235-1-127
61244|code|NOP|0-191
61246|code|ADC.W           R2, R2, R2|66-235-2-2
61250|code|IT CS|40-191
61252|code|SUBCS.W         R0, R0, R1,LSL#28|160-235-1-112
61256|code|CMP.W           R0, R1,LSL#27|176-235-193-111
61260|code|NOP|0-191
61262|code|ADC.W           R2, R2, R2|66-235-2-2
61266|code|IT CS|40-191
61268|code|SUBCS.W         R0, R0, R1,LSL#27|160-235-193-96
61272|code|CMP.W           R0, R1,LSL#26|176-235-129-111
61276|code|NOP|0-191
61278|code|ADC.W           R2, R2, R2|66-235-2-2
61282|code|IT CS|40-191
61284|code|SUBCS.W         R0, R0, R1,LSL#26|160-235-129-96
61288|code|CMP.W           R0, R1,LSL#25|176-235-65-111
61292|code|NOP|0-191
61294|code|ADC.W           R2, R2, R2|66-235-2-2
61298|code|IT CS|40-191
61300|code|SUBCS.W         R0, R0, R1,LSL#25|160-235-65-96
61304|code|CMP.W           R0, R1,LSL#24|176-235-1-111
61308|code|NOP|0-191
61310|code|ADC.W           R2, R2, R2|66-235-2-2
61314|code|IT CS|40-191
61316|code|SUBCS.W         R0, R0, R1,LSL#24|160-235-1-96
61320|code|CMP.W           R0, R1,LSL#23|176-235-193-95
61324|code|NOP|0-191
61326|code|ADC.W           R2, R2, R2|66-235-2-2
61330|code|IT CS|40-191
61332|code|SUBCS.W         R0, R0, R1,LSL#23|160-235-193-80
61336|code|CMP.W           R0, R1,LSL#22|176-235-129-95
61340|code|NOP|0-191
61342|code|ADC.W           R2, R2, R2|66-235-2-2
61346|code|IT CS|40-191
61348|code|SUBCS.W         R0, R0, R1,LSL#22|160-235-129-80
61352|code|CMP.W           R0, R1,LSL#21|176-235-65-95
61356|code|NOP|0-191
61358|code|ADC.W           R2, R2, R2|66-235-2-2
61362|code|IT CS|40-191
61364|code|SUBCS.W         R0, R0, R1,LSL#21|160-235-65-80
61368|code|CMP.W           R0, R1,LSL#20|176-235-1-95
61372|code|NOP|0-191
61374|code|ADC.W           R2, R2, R2|66-235-2-2
61378|code|IT CS|40-191
61380|code|SUBCS.W         R0, R0, R1,LSL#20|160-235-1-80
61384|code|CMP.W           R0, R1,LSL#19|176-235-193-79
61388|code|NOP|0-191
61390|code|ADC.W           R2, R2, R2|66-235-2-2
61394|code|IT CS|40-191
61396|code|SUBCS.W         R0, R0, R1,LSL#19|160-235-193-64
61400|code|CMP.W           R0, R1,LSL#18|176-235-129-79
61404|code|NOP|0-191
61406|code|ADC.W           R2, R2, R2|66-235-2-2
61410|code|IT CS|40-191
61412|code|SUBCS.W         R0, R0, R1,LSL#18|160-235-129-64
61416|code|CMP.W           R0, R1,LSL#17|176-235-65-79
61420|code|NOP|0-191
61422|code|ADC.W           R2, R2, R2|66-235-2-2
61426|code|IT CS|40-191
61428|code|SUBCS.W         R0, R0, R1,LSL#17|160-235-65-64
61432|code|CMP.W           R0, R1,LSL#16|176-235-1-79
61436|code|NOP|0-191
61438|code|ADC.W           R2, R2, R2|66-235-2-2
61442|code|IT CS|40-191
61444|code|SUBCS.W         R0, R0, R1,LSL#16|160-235-1-64
61448|code|CMP.W           R0, R1,LSL#15|176-235-193-63
61452|code|NOP|0-191
61454|code|ADC.W           R2, R2, R2|66-235-2-2
61458|code|IT CS|40-191
61460|code|SUBCS.W         R0, R0, R1,LSL#15|160-235-193-48
61464|code|CMP.W           R0, R1,LSL#14|176-235-129-63
61468|code|NOP|0-191
61470|code|ADC.W           R2, R2, R2|66-235-2-2
61474|code|IT CS|40-191
61476|code|SUBCS.W         R0, R0, R1,LSL#14|160-235-129-48
61480|code|CMP.W           R0, R1,LSL#13|176-235-65-63
61484|code|NOP|0-191
61486|code|ADC.W           R2, R2, R2|66-235-2-2
61490|code|IT CS|40-191
61492|code|SUBCS.W         R0, R0, R1,LSL#13|160-235-65-48
61496|code|CMP.W           R0, R1,LSL#12|176-235-1-63
61500|code|NOP|0-191
61502|code|ADC.W           R2, R2, R2|66-235-2-2
61506|code|IT CS|40-191
61508|code|SUBCS.W         R0, R0, R1,LSL#12|160-235-1-48
61512|code|CMP.W           R0, R1,LSL#11|176-235-193-47
61516|code|NOP|0-191
61518|code|ADC.W           R2, R2, R2|66-235-2-2
61522|code|IT CS|40-191
61524|code|SUBCS.W         R0, R0, R1,LSL#11|160-235-193-32
61528|code|CMP.W           R0, R1,LSL#10|176-235-129-47
61532|code|NOP|0-191
61534|code|ADC.W           R2, R2, R2|66-235-2-2
61538|code|IT CS|40-191
61540|code|SUBCS.W         R0, R0, R1,LSL#10|160-235-129-32
61544|code|CMP.W           R0, R1,LSL#9|176-235-65-47
61548|code|NOP|0-191
61550|code|ADC.W           R2, R2, R2|66-235-2-2
61554|code|IT CS|40-191
61556|code|SUBCS.W         R0, R0, R1,LSL#9|160-235-65-32
61560|code|CMP.W           R0, R1,LSL#8|176-235-1-47
61564|code|NOP|0-191
61566|code|ADC.W           R2, R2, R2|66-235-2-2
61570|code|IT CS|40-191
61572|code|SUBCS.W         R0, R0, R1,LSL#8|160-235-1-32
61576|code|CMP.W           R0, R1,LSL#7|176-235-193-31
61580|code|NOP|0-191
61582|code|ADC.W           R2, R2, R2|66-235-2-2
61586|code|IT CS|40-191
61588|code|SUBCS.W         R0, R0, R1,LSL#7|160-235-193-16
61592|code|CMP.W           R0, R1,LSL#6|176-235-129-31
61596|code|NOP|0-191
61598|code|ADC.W           R2, R2, R2|66-235-2-2
61602|code|IT CS|40-191
61604|code|SUBCS.W         R0, R0, R1,LSL#6|160-235-129-16
61608|code|CMP.W           R0, R1,LSL#5|176-235-65-31
61612|code|NOP|0-191
61614|code|ADC.W           R2, R2, R2|66-235-2-2
61618|code|IT CS|40-191
61620|code|SUBCS.W         R0, R0, R1,LSL#5|160-235-65-16
61624|code|CMP.W           R0, R1,LSL#4|176-235-1-31
61628|code|NOP|0-191
61630|code|ADC.W           R2, R2, R2|66-235-2-2
61634|code|IT CS|40-191
61636|code|SUBCS.W         R0, R0, R1,LSL#4|160-235-1-16
61640|code|CMP.W           R0, R1,LSL#3|176-235-193-15
61644|code|NOP|0-191
61646|code|ADC.W           R2, R2, R2|66-235-2-2
61650|code|IT CS|40-191
61652|code|SUBCS.W         R0, R0, R1,LSL#3|160-235-193-0
61656|code|CMP.W           R0, R1,LSL#2|176-235-129-15
61660|code|NOP|0-191
61662|code|ADC.W           R2, R2, R2|66-235-2-2
61666|code|IT CS|40-191
61668|code|SUBCS.W         R0, R0, R1,LSL#2|160-235-129-0
61672|code|CMP.W           R0, R1,LSL#1|176-235-65-15
61676|code|NOP|0-191
61678|code|ADC.W           R2, R2, R2|66-235-2-2
61682|code|IT CS|40-191
61684|code|SUBCS.W         R0, R0, R1,LSL#1|160-235-65-0
61688|code|CMP.W           R0, R1|176-235-1-15
61692|code|NOP|0-191
61694|code|ADC.W           R2, R2, R2|66-235-2-2
61698|code|IT CS|40-191
61700|code|SUBCS.W         R0, R0, R1|160-235-1-0
61704|code|MOV             R0, R2|16-70
61706|code|BX              LR|112-71
61708|code|ITE EQ|12-191
61710|code|MOVEQ           R0, #1|1-32
61712|code|MOVNE           R0, #0|0-32
61714|code|BX              LR|112-71
61716|code|CLZ.W           R2, R1|177-250-129-242
61720|code|RSB.W           R2, R2, #0x1F|194-241-31-2
61724|code|LSR.W           R0, R0, R2|32-250-2-240
61728|code|BX              LR|112-71
61730|code|CBZ             R0, loc_F128|8-177
61732|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
61736|code|B.W             sub_F148|0-240-14-184
61740|code|CMP             R1, #0|0-41
61742|code|BEQ             loc_F122|248-208
61744|code|PUSH.W          {R0,R1,LR}|45-233-3-64
61748|code|BL              sub_EED0|255-247-204-254
61752|code|POP.W           {R1,R2,LR}|189-232-6-64
61756|code|MUL.W           R3, R2, R0|2-251-0-243
61760|code|SUB.W           R1, R1, R3|161-235-3-1
61764|code|BX              LR|112-71
61766|data|ALIGN 4|0-191
61768|code|PUSH            {R1,LR}|2-181
61770|code|MOV.W           R0, #8; sig|79-240-8-0
61774|code|BLX             raise|250-247-82-232
61778|code|POP             {R1,PC}|2-189
61780|code|PUSH.W          {R3-R9,LR}|45-233-248-67
61784|code|MOV             R6, R0|6-70
61786|code|LDR.W           R9, =(off_18540 - 0xF168)|223-248-52-144
61790|code|MOV             R7, R1|15-70
61792|code|LDR             R5, =(off_1853C - 0xF16E)|12-77
61794|code|MOV             R8, R2|144-70
61796|code|ADD             R9, PC; off_18540|249-68
61798|code|BL              .init_proc|250-247-41-248
61802|code|ADD             R5, PC; off_1853C|125-68
61804|code|RSB.W           R9, R5, R9|197-235-9-9
61808|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
61812|code|BEQ             locret_F18A|9-208
61814|code|MOVS            R4, #0|0-36
61816|code|LDR.W           R3, [R5],#4|85-248-4-59
61820|code|MOV             R0, R6|48-70
61822|code|MOV             R1, R7|57-70
61824|code|MOV             R2, R8|66-70
61826|code|ADDS            R4, #1|1-52
61828|code|BLX             R3; sub_9CDC|152-71
61830|code|CMP             R4, R9|76-69
61832|code|BNE             loc_F178|246-209
61834|code|POP.W           {R3-R9,PC}|189-232-248-131
61838|data|ALIGN 0x10|0-191
61840|data|DCD off_18540 - 0xF168|216-147-0-0
61844|data|DCD off_1853C - 0xF16E|206-147-0-0
61848|code|BX              LR|112-71
61850|data|ALIGN 4|0-191
61852|code|PUSH            {R3,LR}|8-181
61854|code|NOP|0-191
61856|code|POP             {R3,PC}|8-189
61858|data|DCW 0|0-0
99644|data|DCD sub_9CDC+1|221-156-0-0
99648|data|DCD sub_9CCC+1|205-156-0-0
99652|data|DCD 0|0-0-0-0
99656|data|Elf32_Dyn <1, <1>>; DT_NEEDED libutil.so.1|1-0-0-0-1-0-0-0
99664|data|Elf32_Dyn <1, <0x39>>; DT_NEEDED libc.so.6|1-0-0-0-57-0-0-0
99672|data|Elf32_Dyn <1, <0x282>>; DT_NEEDED ld-linux.so.3|1-0-0-0-130-2-0-0
99680|data|Elf32_Dyn <0xC, <0x91BD>>; DT_INIT|12-0-0-0-189-145-0-0
99688|data|Elf32_Dyn <0xD, <0xF19D>>; DT_FINI|13-0-0-0-157-241-0-0
99696|data|Elf32_Dyn <0x19, <0x1853C>>; DT_INIT_ARRAY|25-0-0-0-60-133-1-0
99704|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
99712|data|Elf32_Dyn <0x1A, <0x18540>>; DT_FINI_ARRAY|26-0-0-0-64-133-1-0
99720|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
99728|data|Elf32_Dyn <4, <0x81A0>>; DT_HASH|4-0-0-0-160-129-0-0
99736|data|Elf32_Dyn <0x6FFFFEF5, <0x83F4>>; DT_GNU_HASH|245-254-255-111-244-131-0-0
99744|data|Elf32_Dyn <5, <0x8B84>>; DT_STRTAB|5-0-0-0-132-139-0-0
99752|data|Elf32_Dyn <6, <0x8684>>; DT_SYMTAB|6-0-0-0-132-134-0-0
99760|data|Elf32_Dyn <0xA, <0x2B6>>; DT_STRSZ|10-0-0-0-182-2-0-0
99768|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
99776|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
99784|data|Elf32_Dyn <3, <0x18648>>; DT_PLTGOT|3-0-0-0-72-134-1-0
99792|data|Elf32_Dyn <2, <0x238>>; DT_PLTRELSZ|2-0-0-0-56-2-0-0
99800|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
99808|data|Elf32_Dyn <0x17, <0x8F84>>; DT_JMPREL|23-0-0-0-132-143-0-0
99816|data|Elf32_Dyn <0x11, <0x8F4C>>; DT_REL|17-0-0-0-76-143-0-0
99824|data|Elf32_Dyn <0x12, <0x38>>; DT_RELSZ|18-0-0-0-56-0-0-0
99832|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
99840|data|Elf32_Dyn <0x6FFFFFFE, <0x8EDC>>; DT_VERNEED|254-255-255-111-220-142-0-0
99848|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
99856|data|Elf32_Dyn <0x6FFFFFF0, <0x8E3A>>; DT_VERSYM|240-255-255-111-58-142-0-0
99864|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
99912|data|DCD stru_18548|72-133-1-0
99916|data|DCD 0|0-0-0-0
99920|data|DCD 0|0-0-0-0
99924|data|DCD __imp_calloc|196-136-1-0
99928|data|DCD __imp_strstr|108-137-1-0
99932|data|DCD __imp_raise|92-137-1-0
99936|data|DCD __imp_cfmakeraw|124-137-1-0
99940|data|DCD __imp_strcmp|228-136-1-0
99944|data|DCD __imp_setsockopt|44-137-1-0
99948|data|DCD __imp_printf|252-136-1-0
99952|data|DCD __imp_regerror|76-137-1-0
99956|data|DCD __imp_read|32-137-1-0
99960|data|DCD __imp_fflush|164-136-1-0
99964|data|DCD __imp_memmove|244-136-1-0
99968|data|DCD __imp_free|232-136-1-0
99972|data|DCD __imp_gai_strerror|236-136-1-0
99976|data|DCD __imp_fgets|148-137-1-0
99980|data|DCD __imp_memcpy|220-136-1-0
99984|data|DCD __imp_signal|40-137-1-0
99988|data|DCD __imp_time|200-136-1-0
99992|data|DCD __imp_memcmp|72-137-1-0
99996|data|DCD __imp_sleep|20-137-1-0
100000|data|DCD __imp_ctime|204-136-1-0
100004|data|DCD __imp___stack_chk_fail|96-137-1-0
100008|data|DCD __imp_dup2|140-136-1-0
100012|data|DCD __imp_realloc|48-137-1-0
100016|data|DCD __imp_regexec|144-136-1-0
100020|data|DCD __imp_perror|4-137-1-0
100024|data|DCD __imp_poll|100-137-1-0
100028|data|DCD __imp_accept|88-137-1-0
100032|data|DCD __imp_fwrite|156-136-1-0
100036|data|DCD __imp_strcat|24-137-1-0
100040|data|DCD __imp_regfree|132-137-1-0
100044|data|DCD __imp_tcsetattr|36-137-1-0
100048|data|DCD __imp_strcpy|140-137-1-0
100052|data|DCD __imp_gettimeofday|28-137-1-0
100056|data|DCD __imp_puts|8-137-1-0
100060|data|DCD __imp_malloc|176-136-1-0
100064|data|DCD __imp___libc_start_main|208-136-1-0
100068|data|DCD __imp_strerror|248-136-1-0
100072|data|DCD __imp___gmon_start__|164-137-1-0
100076|data|DCD __imp_getopt_long|116-137-1-0
100080|data|DCD __imp___ctype_b_loc|12-137-1-0
100084|data|DCD __imp_exit|60-137-1-0
100088|data|DCD __imp_strtoul|216-136-1-0
100092|data|DCD __imp_strlen|52-137-1-0
100096|data|DCD __imp_strchr|128-137-1-0
100100|data|DCD __imp_fprintf|64-137-1-0
100104|data|DCD __imp_fcntl|56-137-1-0
100108|data|DCD __imp___errno_location|180-136-1-0
100112|data|DCD __imp_snprintf|68-137-1-0
100116|data|DCD __imp___isoc99_sscanf|104-137-1-0
100120|data|DCD __imp___strdup|168-136-1-0
100124|data|DCD __imp_bind|152-137-1-0
100128|data|DCD __imp_memset|120-137-1-0
100132|data|DCD __imp_strncpy|84-137-1-0
100136|data|DCD __imp___xpg_basename|136-137-1-0
100140|data|DCD __imp_write|188-136-1-0
100144|data|DCD __imp_memchr|212-136-1-0
100148|data|DCD __imp_strrchr|184-136-1-0
100152|data|DCD __imp_listen|192-136-1-0
100156|data|DCD __imp_syslog|0-137-1-0
100160|data|DCD __imp_sprintf|156-137-1-0
100164|data|DCD __imp_regcomp|172-136-1-0
100168|data|DCD __imp_vsnprintf|160-137-1-0
100172|data|DCD __imp_qsort|16-137-1-0
100176|data|DCD __imp_freeaddrinfo|148-136-1-0
100180|data|DCD __imp_getaddrinfo|144-137-1-0
100184|data|DCD __imp_socket|224-136-1-0
100188|data|DCD __imp_abort|152-136-1-0
100192|data|DCD __imp_close|80-137-1-0
100196|data|DCD __imp_forkpty|112-137-1-0
100200|data|DCD __imp___assert_fail|240-136-1-0
100204|data|DCD __imp_tcgetattr|160-136-1-0
100208|data|DCD __imp___gmon_start__|164-137-1-0
100212|data|ALIGN 8|0-0-0-0
100220|data|DCD 1|1-0-0-0
100224|data|DCD 1|1-0-0-0
100228|data|ALIGN 8|255-255-255-255
100232|data|% 4; Copy of shared data|255-255-255-255
100236|data|% 4; Copy of shared data|255-255-255-255
100240|data|% 4; Copy of shared data|255-255-255-255
100244|data|ALIGN 8|255-255-255-255
100248|data|% 4; Copy of shared data|255-255-255-255
100252|data|% 4; Copy of shared data|255-255-255-255
100256|data|% 4; Copy of shared data|255-255-255-255
100260|data|% 1|255
100261|data|ALIGN 4|255-255-255
100264|data|% 4|255-255-255-255
100460|data|% 4|255-255-255-255
100464|data|% 4|255-255-255-255
100468|data|% 4|255-255-255-255
100472|data|% 4|255-255-255-255
