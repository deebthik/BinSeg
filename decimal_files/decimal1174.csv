address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|5-141-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x21CC; SHT file offset|204-33-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 9; Number of entries in PHT|9-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x16FC; File offset|252-22-0-0
32828|data|DCD unk_96FC; Virtual address|252-150-0-0
32832|data|DCD 0x96FC; Physical address|252-150-0-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x120; Size in file image|32-1-0-0
32872|data|DCD 0x120; Size in memory image|32-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x154; File offset|84-1-0-0
32892|data|DCD aLibLdLinuxArmh; Virtual address|84-129-0-0
32896|data|DCD 0x8154; Physical address|84-129-0-0
32900|data|DCD 0x19; Size in file image|25-0-0-0
32904|data|DCD 0x19; Size in memory image|25-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x1708; Size in file image|8-23-0-0
32936|data|DCD 0x1708; Size in memory image|8-23-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x1EFC; File offset|252-30-0-0
32956|data|DCD off_11EFC; Virtual address|252-30-1-0
32960|data|DCD 0x11EFC; Physical address|252-30-1-0
32964|data|DCD 0x1A8; Size in file image|168-1-0-0
32968|data|DCD 0x1C0; Size in memory image|192-1-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x1F08; File offset|8-31-0-0
32988|data|DCD stru_11F08; Virtual address|8-31-1-0
32992|data|DCD 0x11F08; Physical address|8-31-1-0
32996|data|DCD 0xF8; Size in file image|248-0-0-0
33000|data|DCD 0xF8; Size in memory image|248-0-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x170; File offset|112-1-0-0
33020|data|DCD dword_8170; Virtual address|112-129-0-0
33024|data|DCD 0x8170; Physical address|112-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
33080|data|DCD 0x1EFC; File offset|252-30-0-0
33084|data|DCD off_11EFC; Virtual address|252-30-1-0
33088|data|DCD 0x11EFC; Physical address|252-30-1-0
33092|data|DCD 0x104; Size in file image|4-1-0-0
33096|data|DCD 0x104; Size in memory image|4-1-0-0
33100|data|DCD 4; Flags|4-0-0-0
33104|data|DCD 1; Alignment|1-0-0-0
33108|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
33133|data|DCB 0, 0, 0|0-0-0
33136|data|DCD 4; Name Size|4-0-0-0
33140|data|DCD 0x10; Desc Size|16-0-0-0
33144|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33148|data|DCB "GNU",0; Name|71-78-85-0
33152|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
33168|data|DCD 4; Name Size|4-0-0-0
33172|data|DCD 0x14; Desc Size|20-0-0-0
33176|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33180|data|DCB "GNU",0; Name|71-78-85-0
33184|data|DCB 0x37, 0xC9, 0x82, 0xC5, 0xB1, 0xC0, 0x15, 0x82, 0x1D; Desc|55-201-130-197-177-192-21-130-29-238-170-142-11-186-187-203-216-191-202-247
33204|data|DCD 0x25|37-0-0-0
33208|data|DCD 0x28|40-0-0-0
33212|data|DCD 0, 0x10, 0, 0, 0, 0, 0, 0x14, 1, 0, 0x17, 8, 0x19|0-0-0-0-16-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-20-0-0-0-1-0-0-0-0-0-0-0-23-0-0-0-8-0-0-0-25-0-0-0-0-0-0-0-15-0-0-0-0-0-0-0-21-0-0-0-38-0-0-0-7-0-0-0-30-0-0-0-4-0-0-0-37-0-0-0-0-0-0-0-14-0-0-0-28-0-0-0-6-0-0-0-0-0-0-0-39-0-0-0-36-0-0-0-22-0-0-0-10-0-0-0-12-0-0-0-24-0-0-0-19-0-0-0-35-0-0-0-27-0-0-0-0-0-0-0
33360|data|DCD 0, 0, 0, 0x1D, 0, 0x1A, 9, 0xB, 0, 0, 0x21, 0, 0, 0|0-0-0-0-0-0-0-0-0-0-0-0-29-0-0-0-0-0-0-0-26-0-0-0-9-0-0-0-11-0-0-0-0-0-0-0-0-0-0-0-33-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-2-0-0-0-0-0-0-0-18-0-0-0-0-0-0-0-32-0-0-0-0-0-0-0-34-0-0-0-31-0-0-0-0-0-0-0-5-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-13-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-0-0-0-0
33520|data|DCD 0x25|37-0-0-0
33524|data|DCD 2|2-0-0-0
33528|data|DCD 8|8-0-0-0
33532|data|DCD 8|8-0-0-0
33536|data|DCD 0x20101061, 0x2101600D, 0x7C612003, 0x20A02100, 0xA8010088|97-16-16-32-13-96-1-33-3-32-97-124-0-33-160-32-136-0-1-168-65-198-33-40-48-174-65-130-108-16-68-2
33568|data|DCD 2, 4, 0, 6, 0, 8, 0xB, 0xC, 0xD, 0xF, 0x10, 0x11, 0|2-0-0-0-4-0-0-0-0-0-0-0-6-0-0-0-0-0-0-0-8-0-0-0-11-0-0-0-12-0-0-0-13-0-0-0-15-0-0-0-16-0-0-0-17-0-0-0-0-0-0-0-18-0-0-0-20-0-0-0-22-0-0-0-0-0-0-0-0-0-0-0-23-0-0-0-24-0-0-0-25-0-0-0-27-0-0-0-28-0-0-0-29-0-0-0-0-0-0-0-30-0-0-0-32-0-0-0-0-0-0-0-33-0-0-0-0-0-0-0-36-0-0-0-0-0-0-0-38-0-0-0-0-0-0-0-0-0-0-0-39-0-0-0-0-0-0-0
33716|data|DCD 0xD39AD3C, 0x7C9BD777, 0xF15AE9B4, 0x7C9665E7, 0xCDB26C04|60-173-57-13-119-215-155-124-180-233-90-241-231-101-150-124-4-108-178-205-207-77-118-211-32-98-100-7-116-136-159-16-167-221-163-107-29-134-151-161-135-240-150-124-64-77-157-124-227-153-148-124-47-78-61-246-93-252-159-124-187-149-147-28-196-137-5-144-125-237-17-15-236-146-115-240-91-154-59-15-157-187-147-28-47-3-49-28-49-184-130-13-196-185-156-64-209-159-44-252-247-35-206-32-65-181-90-43-203-150-147-28-174-96-135-255-81-181-168-16-95-150-147-28-200-57-64-31-174-111-136-11-21-64-121-11-214-43-193-139-177-74-69-75-93-192-9-62-131-127-167-189
33868|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
33884|data|Elf32_Sym <aGmonStart - byte_86CC, 0, 0, 0x20, 0, 0>; "__gmon_start__"|1-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
33900|data|Elf32_Sym <aMalloc - byte_86CC, malloc, 0, 0x12, 0, 0>; "malloc"|152-0-0-0-176-138-0-0-0-0-0-0-18-0-0-0
33916|data|Elf32_Sym <aOpen - byte_86CC, open, 0, 0x12, 0, 0>; "open"|199-0-0-0-212-138-0-0-0-0-0-0-18-0-0-0
33932|data|Elf32_Sym <aAccept - byte_86CC, accept, 0, 0x12, 0, 0>; "accept"|211-0-0-0-128-138-0-0-0-0-0-0-18-0-0-0
33948|data|Elf32_Sym <aErrx - byte_86CC, errx, 0, 0x12, 0, 0>; "errx"|231-0-0-0-52-139-0-0-0-0-0-0-18-0-0-0
33964|data|Elf32_Sym <aStrdup - byte_86CC, __strdup, 0, 0x12, 0, 0>; "__strdup"|40-0-0-0-4-139-0-0-0-0-0-0-18-0-0-0
33980|data|Elf32_Sym <aConnect - byte_86CC, connect, 0, 0x12, 0, 0>; "connect"|49-0-0-0-148-139-0-0-0-0-0-0-18-0-0-0
33996|data|Elf32_Sym <aStackChkGuard - byte_86CC, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|63-1-0-0-176-32-1-0-4-0-0-0-17-0-25-0
34012|data|Elf32_Sym <aWarnx - byte_86CC, warnx, 0, 0x12, 0, 0>; "warnx"|57-0-0-0-248-138-0-0-0-0-0-0-18-0-0-0
34028|data|Elf32_Sym <aEnviron+2 - byte_86CC, environ, 4, 0x21, 0, 0x19>; "environ"|35-1-0-0-168-32-1-0-4-0-0-0-33-0-25-0
34044|data|Elf32_Sym <aStrcpyChk - byte_86CC, __strcpy_chk, 0, 0x12, 0, 0>; "__strcpy_chk"|218-0-0-0-152-138-0-0-0-0-0-0-18-0-0-0
34060|data|Elf32_Sym <aFree - byte_86CC, free, 0, 0x12, 0, 0>; "free"|28-1-0-0-44-138-0-0-0-0-0-0-18-0-0-0
34076|data|Elf32_Sym <aRead - byte_86CC, read, 0, 0x12, 0, 0>; "read"|147-0-0-0-32-138-0-0-0-0-0-0-18-0-0-0
34092|data|Elf32_Sym <aBind - byte_86CC, bind, 0, 0x12, 0, 0>; "bind"|142-0-0-0-16-139-0-0-0-0-0-0-18-0-0-0
34108|data|Elf32_Sym <aLibcStartMain - byte_86CC, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|251-0-0-0-188-138-0-0-0-0-0-0-18-0-0-0
34124|data|Elf32_Sym <aWarn - byte_86CC, warn, 0, 0x12, 0, 0>; "warn"|137-0-0-0-76-139-0-0-0-0-0-0-18-0-0-0
34140|data|Elf32_Sym <aStrchr - byte_86CC, strchr, 0, 0x12, 0, 0>; "strchr"|204-0-0-0-236-138-0-0-0-0-0-0-18-0-0-0
34156|data|Elf32_Sym <aEnviron+1 - byte_86CC, environ, 4, 0x21, 0, 0x19>; "_environ"|34-1-0-0-168-32-1-0-4-0-0-0-33-0-25-0
34172|data|Elf32_Sym <aAbort - byte_86CC, abort, 0, 0x12, 0, 0>; "abort"|103-0-0-0-124-139-0-0-0-0-0-0-18-0-0-0
34188|data|Elf32_Sym <aGeteuid - byte_86CC, geteuid, 0, 0x12, 0, 0>; "geteuid"|185-0-0-0-116-138-0-0-0-0-0-0-18-0-0-0
34204|data|Elf32_Sym <aClose - byte_86CC, close, 0, 0x12, 0, 0>; "close"|193-0-0-0-136-139-0-0-0-0-0-0-18-0-0-0
34220|data|Elf32_Sym <aStrlen - byte_86CC, strlen, 0, 0x12, 0, 0>; "strlen"|123-0-0-0-224-138-0-0-0-0-0-0-18-0-0-0
34236|data|Elf32_Sym <aSocket - byte_86CC, socket, 0, 0x12, 0, 0>; "socket"|26-0-0-0-100-139-0-0-0-0-0-0-18-0-0-0
34252|data|Elf32_Sym <aMemset - byte_86CC, memset, 0, 0x12, 0, 0>; "memset"|130-0-0-0-28-139-0-0-0-0-0-0-18-0-0-0
34268|data|Elf32_Sym <aEnviron - byte_86CC, environ, 4, 0x11, 0, 0x19>; "__environ"|33-1-0-0-168-32-1-0-4-0-0-0-17-0-25-0
34284|data|Elf32_Sym <aExecvp - byte_86CC, execvp, 0, 0x12, 0, 0>; "execvp"|170-0-0-0-56-138-0-0-0-0-0-0-18-0-0-0
34300|data|Elf32_Sym <aUnlink - byte_86CC, unlink, 0, 0x12, 0, 0>; "unlink"|89-0-0-0-92-138-0-0-0-0-0-0-18-0-0-0
34316|data|Elf32_Sym <aBasename - byte_86CC, basename, 0, 0x12, 0, 0>; "basename"|19-1-0-0-20-138-0-0-0-0-0-0-18-0-0-0
34332|data|Elf32_Sym <aStrcpy - byte_86CC, strcpy, 0, 0x12, 0, 0>; "strcpy"|33-0-0-0-140-138-0-0-0-0-0-0-18-0-0-0
34348|data|Elf32_Sym <aGetenv - byte_86CC, getenv, 0, 0x12, 0, 0>; "getenv"|159-0-0-0-164-138-0-0-0-0-0-0-18-0-0-0
34364|data|Elf32_Sym <aWrite - byte_86CC, write, 0, 0x12, 0, 0>; "write"|13-1-0-0-40-139-0-0-0-0-0-0-18-0-0-0
34380|data|Elf32_Sym <aStrcmp - byte_86CC, strcmp, 0, 0x12, 0, 0>; "strcmp"|236-0-0-0-8-138-0-0-0-0-0-0-18-0-0-0
34396|data|Elf32_Sym <aStackChkFail - byte_86CC, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|63-0-0-0-80-138-0-0-0-0-0-0-18-0-0-0
34412|data|Elf32_Sym <aErr - byte_86CC, err, 0, 0x12, 0, 0>; "err"|166-0-0-0-104-138-0-0-0-0-0-0-18-0-0-0
34428|data|Elf32_Sym <aListen - byte_86CC, listen, 0, 0x12, 0, 0>; "listen"|96-0-0-0-64-139-0-0-0-0-0-0-18-0-0-0
34444|data|Elf32_Sym <aSendmsg - byte_86CC, sendmsg, 0, 0x12, 0, 0>; "sendmsg"|177-0-0-0-68-138-0-0-0-0-0-0-18-0-0-0
34460|data|Elf32_Sym <aAssertFail - byte_86CC, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|109-0-0-0-160-139-0-0-0-0-0-0-18-0-0-0
34476|data|Elf32_Sym <aRecvmsg - byte_86CC, recvmsg, 0, 0x12, 0, 0>; "recvmsg"|243-0-0-0-88-139-0-0-0-0-0-0-18-0-0-0
34492|data|Elf32_Sym <aLxstat - byte_86CC, __lxstat, 0, 0x12, 0, 0>; "__lxstat"|80-0-0-0-112-139-0-0-0-0-0-0-18-0-0-0
34508|data|DCB 0|0
34509|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
34524|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
34534|data|DCB "socket",0|115-111-99-107-101-116-0
34541|data|DCB "strcpy",0|115-116-114-99-112-121-0
34548|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
34557|data|DCB "connect",0|99-111-110-110-101-99-116-0
34565|data|DCB "warnx",0|119-97-114-110-120-0
34571|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
34588|data|DCB "__lxstat",0|95-95-108-120-115-116-97-116-0
34597|data|DCB "unlink",0|117-110-108-105-110-107-0
34604|data|DCB "listen",0|108-105-115-116-101-110-0
34611|data|DCB "abort",0|97-98-111-114-116-0
34617|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
34631|data|DCB "strlen",0|115-116-114-108-101-110-0
34638|data|DCB "memset",0|109-101-109-115-101-116-0
34645|data|DCB "warn",0|119-97-114-110-0
34650|data|DCB "bind",0|98-105-110-100-0
34655|data|DCB "read",0|114-101-97-100-0
34660|data|DCB "malloc",0|109-97-108-108-111-99-0
34667|data|DCB "getenv",0|103-101-116-101-110-118-0
34674|data|DCB "err",0|101-114-114-0
34678|data|DCB "execvp",0|101-120-101-99-118-112-0
34685|data|DCB "sendmsg",0|115-101-110-100-109-115-103-0
34693|data|DCB "geteuid",0|103-101-116-101-117-105-100-0
34701|data|DCB "close",0|99-108-111-115-101-0
34707|data|DCB "open",0|111-112-101-110-0
34712|data|DCB "strchr",0|115-116-114-99-104-114-0
34719|data|DCB "accept",0|97-99-99-101-112-116-0
34726|data|DCB "__strcpy_chk",0|95-95-115-116-114-99-112-121-95-99-104-107-0
34739|data|DCB "errx",0|101-114-114-120-0
34744|data|DCB "strcmp",0|115-116-114-99-109-112-0
34751|data|DCB "recvmsg",0|114-101-99-118-109-115-103-0
34759|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
34777|data|DCB "write",0|119-114-105-116-101-0
34783|data|DCB "basename",0|98-97-115-101-110-97-109-101-0
34792|data|DCB "free",0|102-114-101-101-0
34797|data|DCB "__environ",0|95-95-101-110-118-105-114-111-110-0
34807|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
34827|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
34845|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
34855|data|DCB 0|0
34856|data|DCW 0|0-0
34858|data|DCW 0; local  symbol: __gmon_start__|0-0
34860|data|DCW 2; malloc@@GLIBC_2.4|2-0
34862|data|DCW 2; open@@GLIBC_2.4|2-0
34864|data|DCW 2; accept@@GLIBC_2.4|2-0
34866|data|DCW 2; errx@@GLIBC_2.4|2-0
34868|data|DCW 2; __strdup@@GLIBC_2.4|2-0
34870|data|DCW 2; connect@@GLIBC_2.4|2-0
34872|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
34874|data|DCW 2; warnx@@GLIBC_2.4|2-0
34876|data|DCW 2; environ@@GLIBC_2.4|2-0
34878|data|DCW 2; __strcpy_chk@@GLIBC_2.4|2-0
34880|data|DCW 2; free@@GLIBC_2.4|2-0
34882|data|DCW 2; read@@GLIBC_2.4|2-0
34884|data|DCW 2; bind@@GLIBC_2.4|2-0
34886|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
34888|data|DCW 2; warn@@GLIBC_2.4|2-0
34890|data|DCW 2; strchr@@GLIBC_2.4|2-0
34892|data|DCW 2; _environ@@GLIBC_2.4|2-0
34894|data|DCW 2; abort@@GLIBC_2.4|2-0
34896|data|DCW 2; geteuid@@GLIBC_2.4|2-0
34898|data|DCW 2; close@@GLIBC_2.4|2-0
34900|data|DCW 2; strlen@@GLIBC_2.4|2-0
34902|data|DCW 2; socket@@GLIBC_2.4|2-0
34904|data|DCW 2; memset@@GLIBC_2.4|2-0
34906|data|DCW 2; __environ@@GLIBC_2.4|2-0
34908|data|DCW 2; execvp@@GLIBC_2.4|2-0
34910|data|DCW 2; unlink@@GLIBC_2.4|2-0
34912|data|DCW 2; basename@@GLIBC_2.4|2-0
34914|data|DCW 2; strcpy@@GLIBC_2.4|2-0
34916|data|DCW 2; getenv@@GLIBC_2.4|2-0
34918|data|DCW 2; write@@GLIBC_2.4|2-0
34920|data|DCW 2; strcmp@@GLIBC_2.4|2-0
34922|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
34924|data|DCW 2; err@@GLIBC_2.4|2-0
34926|data|DCW 2; listen@@GLIBC_2.4|2-0
34928|data|DCW 2; sendmsg@@GLIBC_2.4|2-0
34930|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
34932|data|DCW 2; recvmsg@@GLIBC_2.4|2-0
34934|data|DCW 2; __lxstat@@GLIBC_2.4|2-0
34936|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_86CC, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-43-1-0-0-16-0-0-0-32-0-0-0
34952|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_86CC, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-81-1-0-0-0-0-0-0
34968|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_86CC, 0x10, 0>; "libc.so.6"|1-0-1-0-16-0-0-0-16-0-0-0-0-0-0-0
34984|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_86CC, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-81-1-0-0-0-0-0-0
35000|data|Elf32_Rel <0x12098, 0x115>; R_ARM_GLOB_DAT __gmon_start__|152-32-1-0-21-1-0-0
35008|data|Elf32_Rel <0x120A8, 0x1914>; R_ARM_COPY __environ|168-32-1-0-20-25-0-0
35016|data|Elf32_Rel <0x120B0, 0x814>; R_ARM_COPY __stack_chk_guard|176-32-1-0-20-8-0-0
35024|data|Elf32_Rel <0x1200C, 0x2016>; R_ARM_JUMP_SLOT strcmp|12-32-1-0-22-32-0-0
35032|data|Elf32_Rel <0x12010, 0x1C16>; R_ARM_JUMP_SLOT basename|16-32-1-0-22-28-0-0
35040|data|Elf32_Rel <0x12014, 0xD16>; R_ARM_JUMP_SLOT read|20-32-1-0-22-13-0-0
35048|data|Elf32_Rel <0x12018, 0xC16>; R_ARM_JUMP_SLOT free|24-32-1-0-22-12-0-0
35056|data|Elf32_Rel <0x1201C, 0x1A16>; R_ARM_JUMP_SLOT execvp|28-32-1-0-22-26-0-0
35064|data|Elf32_Rel <0x12020, 0x2416>; R_ARM_JUMP_SLOT sendmsg|32-32-1-0-22-36-0-0
35072|data|Elf32_Rel <0x12024, 0x2116>; R_ARM_JUMP_SLOT __stack_chk_fail|36-32-1-0-22-33-0-0
35080|data|Elf32_Rel <0x12028, 0x1B16>; R_ARM_JUMP_SLOT unlink|40-32-1-0-22-27-0-0
35088|data|Elf32_Rel <0x1202C, 0x2216>; R_ARM_JUMP_SLOT err|44-32-1-0-22-34-0-0
35096|data|Elf32_Rel <0x12030, 0x1416>; R_ARM_JUMP_SLOT geteuid|48-32-1-0-22-20-0-0
35104|data|Elf32_Rel <0x12034, 0x416>; R_ARM_JUMP_SLOT accept|52-32-1-0-22-4-0-0
35112|data|Elf32_Rel <0x12038, 0x1D16>; R_ARM_JUMP_SLOT strcpy|56-32-1-0-22-29-0-0
35120|data|Elf32_Rel <0x1203C, 0xB16>; R_ARM_JUMP_SLOT __strcpy_chk|60-32-1-0-22-11-0-0
35128|data|Elf32_Rel <0x12040, 0x1E16>; R_ARM_JUMP_SLOT getenv|64-32-1-0-22-30-0-0
35136|data|Elf32_Rel <0x12044, 0x216>; R_ARM_JUMP_SLOT malloc|68-32-1-0-22-2-0-0
35144|data|Elf32_Rel <0x12048, 0xF16>; R_ARM_JUMP_SLOT __libc_start_main|72-32-1-0-22-15-0-0
35152|data|Elf32_Rel <0x1204C, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|76-32-1-0-22-1-0-0
35160|data|Elf32_Rel <0x12050, 0x316>; R_ARM_JUMP_SLOT open|80-32-1-0-22-3-0-0
35168|data|Elf32_Rel <0x12054, 0x1616>; R_ARM_JUMP_SLOT strlen|84-32-1-0-22-22-0-0
35176|data|Elf32_Rel <0x12058, 0x1116>; R_ARM_JUMP_SLOT strchr|88-32-1-0-22-17-0-0
35184|data|Elf32_Rel <0x1205C, 0x916>; R_ARM_JUMP_SLOT warnx|92-32-1-0-22-9-0-0
35192|data|Elf32_Rel <0x12060, 0x616>; R_ARM_JUMP_SLOT __strdup|96-32-1-0-22-6-0-0
35200|data|Elf32_Rel <0x12064, 0xE16>; R_ARM_JUMP_SLOT bind|100-32-1-0-22-14-0-0
35208|data|Elf32_Rel <0x12068, 0x1816>; R_ARM_JUMP_SLOT memset|104-32-1-0-22-24-0-0
35216|data|Elf32_Rel <0x1206C, 0x1F16>; R_ARM_JUMP_SLOT write|108-32-1-0-22-31-0-0
35224|data|Elf32_Rel <0x12070, 0x516>; R_ARM_JUMP_SLOT errx|112-32-1-0-22-5-0-0
35232|data|Elf32_Rel <0x12074, 0x2316>; R_ARM_JUMP_SLOT listen|116-32-1-0-22-35-0-0
35240|data|Elf32_Rel <0x12078, 0x1016>; R_ARM_JUMP_SLOT warn|120-32-1-0-22-16-0-0
35248|data|Elf32_Rel <0x1207C, 0x2616>; R_ARM_JUMP_SLOT recvmsg|124-32-1-0-22-38-0-0
35256|data|Elf32_Rel <0x12080, 0x1716>; R_ARM_JUMP_SLOT socket|128-32-1-0-22-23-0-0
35264|data|Elf32_Rel <0x12084, 0x2716>; R_ARM_JUMP_SLOT __lxstat|132-32-1-0-22-39-0-0
35272|data|Elf32_Rel <0x12088, 0x1316>; R_ARM_JUMP_SLOT abort|136-32-1-0-22-19-0-0
35280|data|Elf32_Rel <0x1208C, 0x1516>; R_ARM_JUMP_SLOT close|140-32-1-0-22-21-0-0
35288|data|Elf32_Rel <0x12090, 0x716>; R_ARM_JUMP_SLOT connect|144-32-1-0-22-7-0-0
35296|data|Elf32_Rel <0x12094, 0x2516>; R_ARM_JUMP_SLOT __assert_fail|148-32-1-0-22-37-0-0
35304|code|PUSH            {R3,LR}|8-64-45-233
35308|code|BL              sub_8D3C|210-0-0-235
35312|code|POP             {R3,PC}|8-128-189-232
35316|code|PUSH            {LR}|4-224-45-229
35320|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8A04)|4-224-159-229
35324|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
35328|code|LDR             PC, [LR,#8]!|8-240-190-229
35332|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8A04|252-149-0-0
35336|code|ADR             R12, 0x8A10|0-198-143-226
35340|code|ADD             R12, R12, #0x9000|9-202-140-226
35344|code|LDR             PC, [R12,#(strcmp_ptr - 0x11A10)]!; __imp_strcmp|252-245-188-229
35348|code|ADR             R12, 0x8A1C|0-198-143-226
35352|code|ADD             R12, R12, #0x9000|9-202-140-226
35356|code|LDR             PC, [R12,#(basename_ptr - 0x11A1C)]!; __imp_basename|244-245-188-229
35360|code|ADR             R12, 0x8A28|0-198-143-226
35364|code|ADD             R12, R12, #0x9000|9-202-140-226
35368|code|LDR             PC, [R12,#(read_ptr - 0x11A28)]!; __imp_read|236-245-188-229
35372|code|ADR             R12, 0x8A34|0-198-143-226
35376|code|ADD             R12, R12, #0x9000|9-202-140-226
35380|code|LDR             PC, [R12,#(free_ptr - 0x11A34)]!; __imp_free|228-245-188-229
35384|code|ADR             R12, 0x8A40|0-198-143-226
35388|code|ADD             R12, R12, #0x9000|9-202-140-226
35392|code|LDR             PC, [R12,#(execvp_ptr - 0x11A40)]!; __imp_execvp|220-245-188-229
35396|code|ADR             R12, 0x8A4C|0-198-143-226
35400|code|ADD             R12, R12, #0x9000|9-202-140-226
35404|code|LDR             PC, [R12,#(sendmsg_ptr - 0x11A4C)]!; __imp_sendmsg|212-245-188-229
35408|code|ADR             R12, 0x8A58|0-198-143-226
35412|code|ADD             R12, R12, #0x9000|9-202-140-226
35416|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x11A58)]!; __imp___stack_chk_fail|204-245-188-229
35420|code|ADR             R12, 0x8A64|0-198-143-226
35424|code|ADD             R12, R12, #0x9000|9-202-140-226
35428|code|LDR             PC, [R12,#(unlink_ptr - 0x11A64)]!; __imp_unlink|196-245-188-229
35432|code|ADR             R12, 0x8A70|0-198-143-226
35436|code|ADD             R12, R12, #0x9000|9-202-140-226
35440|code|LDR             PC, [R12,#(err_ptr - 0x11A70)]!; __imp_err|188-245-188-229
35444|code|ADR             R12, 0x8A7C|0-198-143-226
35448|code|ADD             R12, R12, #0x9000|9-202-140-226
35452|code|LDR             PC, [R12,#(geteuid_ptr - 0x11A7C)]!; __imp_geteuid|180-245-188-229
35456|code|ADR             R12, 0x8A88|0-198-143-226
35460|code|ADD             R12, R12, #0x9000|9-202-140-226
35464|code|LDR             PC, [R12,#(accept_ptr - 0x11A88)]!; __imp_accept|172-245-188-229
35468|code|ADR             R12, 0x8A94|0-198-143-226
35472|code|ADD             R12, R12, #0x9000|9-202-140-226
35476|code|LDR             PC, [R12,#(strcpy_ptr - 0x11A94)]!; __imp_strcpy|164-245-188-229
35480|code|ADR             R12, 0x8AA0|0-198-143-226
35484|code|ADD             R12, R12, #0x9000|9-202-140-226
35488|code|LDR             PC, [R12,#(__strcpy_chk_ptr - 0x11AA0)]!; __imp___strcpy_chk|156-245-188-229
35492|code|ADR             R12, 0x8AAC|0-198-143-226
35496|code|ADD             R12, R12, #0x9000|9-202-140-226
35500|code|LDR             PC, [R12,#(getenv_ptr - 0x11AAC)]!; __imp_getenv|148-245-188-229
35504|code|ADR             R12, 0x8AB8|0-198-143-226
35508|code|ADD             R12, R12, #0x9000|9-202-140-226
35512|code|LDR             PC, [R12,#(malloc_ptr - 0x11AB8)]!; __imp_malloc|140-245-188-229
35516|code|ADR             R12, 0x8AC4|0-198-143-226
35520|code|ADD             R12, R12, #0x9000|9-202-140-226
35524|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x11AC4)]!; __imp___libc_start_main|132-245-188-229
35528|code|ADR             R12, 0x8AD0|0-198-143-226
35532|code|ADD             R12, R12, #0x9000|9-202-140-226
35536|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x11AD0)]!; __imp___gmon_start__|124-245-188-229
35540|code|ADR             R12, 0x8ADC|0-198-143-226
35544|code|ADD             R12, R12, #0x9000|9-202-140-226
35548|code|LDR             PC, [R12,#(open_ptr - 0x11ADC)]!; __imp_open|116-245-188-229
35552|code|ADR             R12, 0x8AE8|0-198-143-226
35556|code|ADD             R12, R12, #0x9000|9-202-140-226
35560|code|LDR             PC, [R12,#(strlen_ptr - 0x11AE8)]!; __imp_strlen|108-245-188-229
35564|code|ADR             R12, 0x8AF4|0-198-143-226
35568|code|ADD             R12, R12, #0x9000|9-202-140-226
35572|code|LDR             PC, [R12,#(strchr_ptr - 0x11AF4)]!; __imp_strchr|100-245-188-229
35576|code|ADR             R12, 0x8B00|0-198-143-226
35580|code|ADD             R12, R12, #0x9000|9-202-140-226
35584|code|LDR             PC, [R12,#(warnx_ptr - 0x11B00)]!; __imp_warnx|92-245-188-229
35588|code|ADR             R12, 0x8B0C|0-198-143-226
35592|code|ADD             R12, R12, #0x9000|9-202-140-226
35596|code|LDR             PC, [R12,#(__strdup_ptr - 0x11B0C)]!; __imp___strdup|84-245-188-229
35600|code|ADR             R12, 0x8B18|0-198-143-226
35604|code|ADD             R12, R12, #0x9000|9-202-140-226
35608|code|LDR             PC, [R12,#(bind_ptr - 0x11B18)]!; __imp_bind|76-245-188-229
35612|code|ADR             R12, 0x8B24|0-198-143-226
35616|code|ADD             R12, R12, #0x9000|9-202-140-226
35620|code|LDR             PC, [R12,#(memset_ptr - 0x11B24)]!; __imp_memset|68-245-188-229
35624|code|ADR             R12, 0x8B30|0-198-143-226
35628|code|ADD             R12, R12, #0x9000|9-202-140-226
35632|code|LDR             PC, [R12,#(write_ptr - 0x11B30)]!; __imp_write|60-245-188-229
35636|code|ADR             R12, 0x8B3C|0-198-143-226
35640|code|ADD             R12, R12, #0x9000|9-202-140-226
35644|code|LDR             PC, [R12,#(errx_ptr - 0x11B3C)]!; __imp_errx|52-245-188-229
35648|code|ADR             R12, 0x8B48|0-198-143-226
35652|code|ADD             R12, R12, #0x9000|9-202-140-226
35656|code|LDR             PC, [R12,#(listen_ptr - 0x11B48)]!; __imp_listen|44-245-188-229
35660|code|ADR             R12, 0x8B54|0-198-143-226
35664|code|ADD             R12, R12, #0x9000|9-202-140-226
35668|code|LDR             PC, [R12,#(warn_ptr - 0x11B54)]!; __imp_warn|36-245-188-229
35672|code|ADR             R12, 0x8B60|0-198-143-226
35676|code|ADD             R12, R12, #0x9000|9-202-140-226
35680|code|LDR             PC, [R12,#(recvmsg_ptr - 0x11B60)]!; __imp_recvmsg|28-245-188-229
35684|code|ADR             R12, 0x8B6C|0-198-143-226
35688|code|ADD             R12, R12, #0x9000|9-202-140-226
35692|code|LDR             PC, [R12,#(socket_ptr - 0x11B6C)]!; __imp_socket|20-245-188-229
35696|code|ADR             R12, 0x8B78|0-198-143-226
35700|code|ADD             R12, R12, #0x9000|9-202-140-226
35704|code|LDR             PC, [R12,#(__lxstat_ptr - 0x11B78)]!; __imp___lxstat|12-245-188-229
35708|code|ADR             R12, 0x8B84|0-198-143-226
35712|code|ADD             R12, R12, #0x9000|9-202-140-226
35716|code|LDR             PC, [R12,#(abort_ptr - 0x11B84)]!; __imp_abort|4-245-188-229
35720|code|ADR             R12, 0x8B90|0-198-143-226
35724|code|ADD             R12, R12, #0x9000|9-202-140-226
35728|code|LDR             PC, [R12,#(close_ptr - 0x11B90)]!; __imp_close|252-244-188-229
35732|code|ADR             R12, 0x8B9C|0-198-143-226
35736|code|ADD             R12, R12, #0x9000|9-202-140-226
35740|code|LDR             PC, [R12,#(connect_ptr - 0x11B9C)]!; __imp_connect|244-244-188-229
35744|code|ADR             R12, 0x8BA8|0-198-143-226
35748|code|ADD             R12, R12, #0x9000|9-202-140-226
35752|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x11BA8)]!; __imp___assert_fail|236-244-188-229
35756|data|DCB 1|1
35757|data|DCB 0x28, 0xF0, 0xB5|40-240-181
35760|data|DCD 0xB09D460E, 0x808DF340, 0xF7FF4848, 0x4605EF74, 0xD0682800|14-70-157-176-64-243-141-128-72-72-255-247-116-239-5-70-0-40-104-208-3-32-41-70-106-70-255-247-210-239-0-40-122-219-4-155-3-244-112-67-179-245-64-79-111-209-6-156-255-247-72-239-132-66-101-209-40-70-0-240-161-250-0-40-4-70-90-219-48-104-255-247-14-239-57-73-255-247-4-239-5-70-0-40-35-208-1-33-32-70-0-240-141-251-0-33-52-72-27-173-255-247-94-239-22-169-4-54-23-150-3-70-26-147-49-75-32-70-27-104-25-147-0-240-1-250-32-70-41-70-4-34-0-240-200-250-41-70-4-34-32-70-0-240-195-250-32-70-255-247-160-239-27-152-29-176-240-189-2-33-32-70-0-240-105-251-41-70-34-72-27-173-255-247-58-239-55-29-22-169-23-151-3-70-26-147-31-75-32-70-27-104-25-147-0-240-221-249-4-34-41-70-32-70-0-240-164-250-112-104-57-70-255-247-216-238-0-40-213-218-2-32-23-73-114-104-255-247-80-239-52-29-48-104-33-70-255-247-204-238-0-40-168-191-38-70-141-218-240-231-6-32-16-73-42-70-255-247-64-239-5-32-15-73-42-70-255-247-60-239-4-32-13-73-42-70-255-247-54-239-3-32-12-73-42-70-255-247-204-238-1-32-10-73-255-247-46-239-0-191-56-148-0-0-184-148-0-0-196-148-0-0-168-32-1-0-72-148-0-0-164-148-0-0-136-148-0-0-116-148-0-0-84-148-0-0-20-148-0-0
36100|code|MOV.W           R11, #0|79-240-0-11
36104|code|MOV.W           LR, #0|79-240-0-14
36108|code|POP.W           {R1}; argc|93-248-4-27
36112|code|MOV             R2, SP; ubp_av|106-70
36114|code|PUSH.W          {R2}; stack_end|77-248-4-45
36118|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
36122|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
36126|code|PUSH.W          {R12}; fini|77-248-4-205
36130|code|LDR             R0, =byte_8BAD; main|4-72
36132|code|LDR             R3, =(sub_93C4+1); init|4-75
36134|code|BLX             __libc_start_main|255-247-202-238
36138|code|BLX             abort|255-247-40-239
36142|data|ALIGN 0x10|0-0
36144|data|DCD nullsub_1+1|5-148-0-0
36148|data|DCD byte_8BAD|173-139-0-0
36152|data|DCD sub_93C4+1|197-147-0-0
36156|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8D4C)|20-48-159-229
36160|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12000)|20-32-159-229
36164|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
36168|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
36172|code|CMP             R2, #0|0-0-82-227
36176|code|BXEQ            LR|30-255-47-1
36180|code|B               __gmon_start__|91-255-255-234
36184|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8D4C|180-146-0-0
36188|data|DCD __gmon_start___ptr_0 - 0x12000|152-0-0-0
36192|data|DCB 2|2
36193|data|DCB 0x4B, 0x1A, 0x78|75-26-120
36196|data|DCD 0x2201B90A, 0x4770701A, 0x120B4|10-185-1-34-26-112-112-71-180-32-1-0
36208|code|LDR             R0, =dword_11F04|3-72
36210|code|PUSH            {R3,LR}|8-181
36212|code|LDR             R3, [R0]|3-104
36214|code|CBZ             R3, locret_8D7E|19-177
36216|code|LDR             R3, =0|2-75
36218|code|CBZ             R3, locret_8D7E|3-177
36220|code|BLX             R3|152-71
36222|code|POP             {R3,PC}|8-189
36224|data|DCD dword_11F04|4-31-1-0
36228|data|DCD 0|0-0-0-0
36232|code|PUSH            {R4,LR}|16-181
36234|code|MOV             R4, R0|4-70
36236|code|BLX             malloc|255-247-144-238
36240|code|MOVS            R3, R4|35-28
36242|code|IT NE|24-191
36244|code|MOVNE           R3, #1|1-35
36246|code|CMP             R0, #0|0-40
36248|code|ITE NE|20-191
36250|code|MOVNE           R3, #0|0-35
36252|code|ANDEQ.W         R3, R3, #1|3-240-1-3
36256|code|CBNZ            R3, loc_8DA4|3-185
36258|code|POP             {R4,PC}|16-189
36260|code|MOVS            R0, #0x64 ; 'd'; status|100-32
36262|code|LDR             R1, =aMemoryAllocati; "Memory allocation failure (%u bytes)"|2-73
36264|code|MOV             R2, R4|34-70
36266|code|BLX             errx|255-247-196-238
36270|data|ALIGN 0x10|0-191
36272|data|DCD aMemoryAllocati; "Memory allocation failure (%u bytes)"|212-148-0-0
36276|code|RSBS.W          R3, R0, #1|208-241-1-3
36280|code|PUSH.W          {R4-R8,LR}|45-233-240-65
36284|code|IT CC|56-191
36286|code|MOVCC           R3, #0|0-35
36288|code|CMP             R1, #0|0-41
36290|code|IT EQ|8-191
36292|code|ORREQ.W         R3, R3, #1|67-240-1-3
36296|code|MOV             R7, R0|7-70
36298|code|MOV             R6, R1|14-70
36300|code|CBNZ            R3, loc_8E1E|59-187
36302|code|LDRB.W          R8, [R0]|144-248-0-128
36306|code|CMP.W           R8, #0x2F ; '/'|184-241-47-15
36310|code|BNE             loc_8E2E|42-209
36312|code|MOV             R0, R1|8-70
36314|code|MOV             R1, R8|65-70
36316|code|BLX             strchr|255-247-134-238
36320|code|CBNZ            R0, loc_8E26|8-187
36322|code|MOV             R0, R7|56-70
36324|code|BLX             strlen|255-247-124-238
36328|code|MOV             R4, R0|4-70
36330|code|MOV             R0, R6|48-70
36332|code|BLX             strlen|255-247-120-238
36336|code|ADDS            R0, R4, R0|32-24
36338|code|ADDS            R0, #2|2-48
36340|code|BL              sub_8D88|255-247-200-255
36344|code|MOV             R1, R7|57-70
36346|code|MOV             R5, R0|5-70
36348|code|BLX             strcpy|255-247-70-238
36352|code|ADDS            R3, R5, R4|43-25
36354|code|MOV             R1, R6|49-70
36356|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
36360|code|CMP             R3, #0x2F ; '/'|47-43
36362|code|ITT NE|28-191
36364|code|STRBNE.W        R8, [R5,R4]|5-248-4-128
36368|code|ADDNE           R4, #1|1-52
36370|code|ADDS            R0, R5, R4|40-25
36372|code|BLX             strcpy|255-247-58-238
36376|code|MOV             R0, R5|40-70
36378|code|POP.W           {R4-R8,PC}|189-232-240-129
36382|code|MOVS            R0, #0x65 ; 'e'|101-32
36384|code|LDR             R1, =aNullArgumentIn; "NULL argument in path_join"|5-73
36386|code|BLX             errx|255-247-136-238
36390|code|MOVS            R0, #0x67 ; 'g'|103-32
36392|code|LDR             R1, =aRelativePathAr; "Relative path argument 2 in path_join"|4-73
36394|code|BLX             errx|255-247-132-238
36398|code|MOVS            R0, #0x66 ; 'f'|102-32
36400|code|LDR             R1, =aRelativePathAr_0; "Relative path argument 1 in path_join"|3-73
36402|code|BLX             errx|255-247-128-238
36406|data|ALIGN 4|0-191
36408|data|DCD aNullArgumentIn; "NULL argument in path_join"|252-148-0-0
36412|data|DCD aRelativePathAr; "Relative path argument 2 in path_join"|64-149-0-0
36416|data|DCD aRelativePathAr_0; "Relative path argument 1 in path_join"|24-149-0-0
36420|code|PUSH            {R3,LR}|8-181
36422|code|BLX             __strdup|255-247-94-238
36426|code|CBZ             R0, loc_8E4E|0-177
36428|code|POP             {R3,PC}|8-189
36430|code|MOVS            R0, #0x68 ; 'h'|104-32
36432|code|LDR             R1, =aStrdup_0; "strdup"|1-73
36434|code|BLX             err|255-247-10-238
36438|data|ALIGN 4|0-191
36440|data|DCD aStrdup_0; "strdup"|104-149-0-0
36444|code|PUSH            {R4,LR}|16-181
36446|code|MOV             R4, R0|4-70
36448|code|LDR             R0, [R0]; ptr|0-104
36450|code|BLX             free|255-247-228-237
36454|code|LDR             R0, [R4,#4]; ptr|96-104
36456|code|BLX             free|255-247-224-237
36460|code|MOVS            R3, #0|0-35
36462|code|STR             R3, [R4]|35-96
36464|code|STR             R3, [R4,#4]|99-96
36466|code|POP             {R4,PC}|16-189
36468|code|PUSH            {R4,LR}|16-181
36470|code|MOV             R4, R0|4-70
36472|code|BL              sub_8E5C|255-247-240-255
36476|code|ADD.W           R0, R4, #8|4-241-8-0
36480|code|POP.W           {R4,LR}|189-232-16-64
36484|code|B.W             sub_8E5C|255-247-234-191
36488|code|LDR             R1, [R0]|1-104
36490|code|PUSH            {R4-R6,LR}|112-181
36492|code|MOV             R5, R0|5-70
36494|code|CBZ             R1, loc_8ED0|249-177
36496|code|LDR             R3, [R0,#4]|67-104
36498|code|CBZ             R3, loc_8ED0|235-177
36500|code|LDR             R3, [R3]|27-104
36502|code|MOVS            R0, #4|4-32
36504|code|MOVS            R6, #0x20 ; ' '|32-38
36506|code|MOV             R4, R1|12-70
36508|code|CMP             R1, R3|153-66
36510|code|BNE             loc_8EDC|29-209
36512|code|LDRB            R3, [R4]|35-120
36514|code|MOV             R2, R1|10-70
36516|code|CBZ             R3, loc_8EB4|51-177
36518|code|STRB.W          R3, [R2],#1|2-248-1-59
36522|code|MOV             R1, R2|17-70
36524|code|LDRB.W          R3, [R4,#1]!|20-248-1-63
36528|code|CMP             R3, #0|0-43
36530|code|BNE             loc_8EA6|248-209
36532|code|STRB.W          R6, [R1],#1|1-248-1-107
36536|code|LDR             R3, [R5,#4]|107-104
36538|code|LDR             R4, [R3,R0]|28-88
36540|code|ADDS            R0, #4|4-48
36542|code|CMP             R4, #0|0-44
36544|code|BNE             loc_8EA0|238-209
36546|code|STRB.W          R4, [R1,#-1]|1-248-1-76
36550|code|LDR             R0, [R5,#4]|104-104
36552|code|BLX             free|255-247-176-237
36556|code|STR             R4, [R5,#4]|108-96
36558|code|POP             {R4-R6,PC}|112-189
36560|code|LDR             R0, =aSvBufferVoid0S; "sv->buffer != ((void *)0) && sv->svec !"...|5-72
36562|code|MOVS            R2, #0x54 ; 'T'|84-34
36564|code|LDR             R1, =aLibraryBufferC; "library/buffer.c"|5-73
36566|code|LDR             R3, =aFlattenSv; "flatten_sv"|6-75
36568|code|BLX             __assert_fail|255-247-98-238
36572|code|LDR             R0, =aSvSvec0SvBuffe; "sv->svec[0] == sv->buffer"|5-72
36574|code|MOVS            R2, #0x55 ; 'U'|85-34
36576|code|LDR             R1, =aLibraryBufferC; "library/buffer.c"|2-73
36578|code|LDR             R3, =aFlattenSv; "flatten_sv"|3-75
36580|code|BLX             __assert_fail|255-247-92-238
36584|data|DCD aSvBufferVoid0S; "sv->buffer != ((void *)0) && sv->svec !"...|112-149-0-0
36588|data|DCD aLibraryBufferC; "library/buffer.c"|168-149-0-0
36592|data|DCD aFlattenSv; "flatten_sv"|200-148-0-0
36596|data|DCD aSvSvec0SvBuffe; "sv->svec[0] == sv->buffer"|188-149-0-0
36600|code|PUSH            {R4,R5,LR}|48-181
36602|code|SUB             SP, SP, #0xC|131-176
36604|code|MOVS            R2, #4; nbytes|4-34
36606|code|MOV             R4, R1|12-70
36608|code|MOV             R1, SP; buf|105-70
36610|code|MOV             R5, R0|5-70
36612|code|BL              sub_91C8|0-240-96-249
36616|code|LDR             R0, [SP,#0x18+var_18]|0-152
36618|code|ADDS            R0, #1|1-48
36620|code|STR             R0, [SP,#0x18+var_18]|0-144
36622|code|LSLS            R0, R0, #2|128-0
36624|code|BL              sub_8D88|255-247-58-255
36628|code|ADD             R1, SP, #0x18+var_10|2-169
36630|code|MOVS            R3, #0|0-35
36632|code|MOVS            R2, #4; nbytes|4-34
36634|code|STR.W           R3, [R1,#-4]!; buf|65-248-4-61
36638|code|STR             R0, [R4,#4]|96-96
36640|code|MOV             R0, R5; fd|40-70
36642|code|BL              sub_91C8|0-240-81-249
36646|code|LDR             R0, [SP,#0x18+nbytes]|1-152
36648|code|CBNZ            R0, loc_8F30|16-185
36650|code|STR             R0, [R4]|32-96
36652|code|ADD             SP, SP, #0xC|3-176
36654|code|POP             {R4,R5,PC}|48-189
36656|code|BL              sub_8D88|255-247-42-255
36660|code|LDR             R2, [SP,#0x18+nbytes]; nbytes|1-154
36662|code|MOV             R1, R0; buf|1-70
36664|code|MOV             R0, R5; fd|40-70
36666|code|STR             R1, [R4]|33-96
36668|code|BL              sub_91C8|0-240-68-249
36672|code|LDR             R1, [R4]|33-104
36674|code|LDR             R0, [SP,#0x18+nbytes]|1-152
36676|code|ADDS            R3, R1, R0|11-24
36678|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
36682|code|CBNZ            R3, loc_8F78|171-185
36684|code|CMP             R0, #0|0-40
36686|code|BLE             loc_8F2C|237-221
36688|code|LDR             R2, [R4,#4]|98-104
36690|code|MOVS            R5, #1|1-37
36692|code|STR             R1, [R2]|17-96
36694|code|LDR             R2, [R4]|34-104
36696|code|LDRB            R1, [R2,R3]|209-92
36698|code|ADDS            R3, #1|1-51
36700|code|ADDS            R2, R2, R3|210-24
36702|code|CBNZ            R1, loc_8F68|25-185
36704|code|LDR             R1, [R4,#4]|97-104
36706|code|STR.W           R2, [R1,R5,LSL#2]|65-248-37-32
36710|code|ADDS            R5, #1|1-53
36712|code|CMP             R3, R0|131-66
36714|code|BNE             loc_8F56|244-209
36716|code|LDR             R3, [R4,#4]|99-104
36718|code|SUBS            R5, #1|1-61
36720|code|MOVS            R2, #0|0-34
36722|code|STR.W           R2, [R3,R5,LSL#2]|67-248-37-32
36726|code|B               loc_8F2C|217-231
36728|code|LDR             R0, =aReadBlockInput; "read_block: input is not null-terminate"...|2-72
36730|code|BLX             warnx|255-247-190-237
36734|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
36738|code|B               loc_8F2C|211-231
36740|data|DCD aReadBlockInput; "read_block: input is not null-terminate"...|216-149-0-0
36744|code|PUSH            {R4-R6,LR}|112-181
36746|code|MOV             R6, R0|6-70
36748|code|MOV             R0, R1|8-70
36750|code|MOV             R5, R1|13-70
36752|code|BLX             strlen|255-247-166-237
36756|code|ADDS            R4, R0, #1|68-28
36758|code|MOV             R0, R6|48-70
36760|code|MOV             R1, R4|33-70
36762|code|BL              sub_9328|0-240-197-249
36766|code|MOV             R0, R6|48-70
36768|code|MOV             R1, R5|41-70
36770|code|MOV             R2, R4|34-70
36772|code|BL              sub_9200|0-240-44-249
36776|code|MOV             R0, R4|32-70
36778|code|POP             {R4-R6,PC}|112-189
36780|code|LDR             R3, [R1]|11-104
36782|code|PUSH.W          {R4-R8,LR}|45-233-240-65
36786|code|MOV             R4, R1|12-70
36788|code|MOV             R5, R0|5-70
36790|code|MOV             R6, R3|30-70
36792|code|MOV             R7, R3|31-70
36794|code|CBZ             R3, loc_8FD6|99-177
36796|code|MOVS            R6, #0|0-38
36798|code|MOV             R8, R1|136-70
36800|code|MOV             R7, R6|55-70
36802|code|MOV             R0, R3; s|24-70
36804|code|ADDS            R7, #1|1-55
36806|code|BLX             strlen|255-247-140-237
36810|code|LDR.W           R3, [R8,#4]!|88-248-4-63
36814|code|ADDS            R6, R6, R0|54-24
36816|code|ADDS            R6, #1|1-54
36818|code|CMP             R3, #0|0-43
36820|code|BNE             loc_8FC2|245-209
36822|code|MOV             R1, R7|57-70
36824|code|MOV             R0, R5|40-70
36826|code|BL              sub_9328|0-240-165-249
36830|code|MOV             R1, R6|49-70
36832|code|MOV             R0, R5|40-70
36834|code|BL              sub_9328|0-240-161-249
36838|code|LDR             R6, [R4]|38-104
36840|code|CBZ             R6, loc_9002|94-177
36842|code|MOV             R0, R6; s|48-70
36844|code|BLX             strlen|255-247-120-237
36848|code|MOV             R1, R6; buf|49-70
36850|code|ADDS            R2, R0, #1; n|66-28
36852|code|MOV             R0, R5; fd|40-70
36854|code|BL              sub_9200|0-240-3-249
36858|code|LDR.W           R6, [R4,#4]!|84-248-4-111
36862|code|CMP             R6, #0|0-46
36864|code|BNE             loc_8FEA|243-209
36866|code|MOVS            R0, #0|0-32
36868|code|POP.W           {R4-R8,PC}|189-232-240-129
36872|code|PUSH            {R3-R5,LR}|56-181
36874|code|MOVS            R2, #4|4-34
36876|code|MOV             R5, R1|13-70
36878|code|MOV             R4, R0|4-70
36880|code|ADD.W           R1, R1, #0x10|1-241-16-1
36884|code|BL              sub_91C8|0-240-216-248
36888|code|MOV             R1, R5|41-70
36890|code|MOV             R0, R4|32-70
36892|code|BL              sub_8EF8|255-247-108-255
36896|code|ADD.W           R1, R5, #8|5-241-8-1
36900|code|MOV             R0, R4|32-70
36902|code|POP.W           {R3-R5,LR}|189-232-56-64
36906|code|B.W             sub_8EF8|255-247-101-191
36910|data|ALIGN 0x10|0-191
36912|code|PUSH            {R3-R5,LR}|56-181
36914|code|MOV             R5, R1|13-70
36916|code|MOV             R4, R0|4-70
36918|code|LDR             R1, [R1,#0x10]|9-105
36920|code|BL              sub_9328|0-240-118-249
36924|code|LDR             R1, [R5,#4]|105-104
36926|code|MOV             R0, R4|32-70
36928|code|BL              sub_8FAC|255-247-180-255
36932|code|LDR             R1, [R5,#0xC]|233-104
36934|code|MOV             R0, R4|32-70
36936|code|POP.W           {R3-R5,LR}|189-232-56-64
36940|code|B.W             sub_8FAC|255-247-174-191
36944|code|PUSH            {R4-R7,LR}|240-181
36946|code|MOVS            R1, #1|1-33
36948|code|LDR             R6, =__stack_chk_guard|40-78
36950|code|SUB             SP, SP, #0x7C ; '|'|159-176
36952|code|MOVS            R2, #0|0-34
36954|code|MOV             R5, R0|5-70
36956|code|MOV             R0, R1|8-70
36958|code|LDR             R3, [R6]|51-104
36960|code|STR             R3, [SP,#0x74]|29-147
36962|code|BLX             socket|255-247-128-237
36966|code|CMP             R0, #0|0-40
36968|code|MOV             R4, R0|4-70
36970|code|BLT             loc_90DA|54-219
36972|code|MOV             R0, R5|40-70
36974|code|BLX             strlen|255-247-56-237
36978|code|CMP             R0, #0x6B ; 'k'|107-40
36980|code|MOV             R7, R0|7-70
36982|code|BHI             loc_90C2|36-216
36984|code|MOVS            R1, #0|0-33
36986|code|MOVS            R2, #0x6E ; 'n'|110-34
36988|code|ADD             R0, SP, #4|1-168
36990|code|BLX             memset|255-247-78-237
36994|code|MOVS            R2, #0x6C ; 'l'|108-34
36996|code|MOV             R1, R5|41-70
36998|code|ADD.W           R0, SP, #6|13-241-6-0
37002|code|MOVS            R3, #1|1-35
37004|code|STRH.W          R3, [SP,#4]|173-248-4-48
37008|code|BLX             __strcpy_chk|255-247-2-237
37012|code|MOV             R0, R5|40-70
37014|code|BLX             unlink|255-247-226-236
37018|code|ADDS            R2, R7, #2|186-28
37020|code|MOV             R0, R4|32-70
37022|code|ADD             R1, SP, #4|1-169
37024|code|BLX             bind|255-247-54-237
37028|code|CMP             R0, #0|0-40
37030|code|BLT             loc_90CE|18-219
37032|code|MOVS            R1, #5|5-33
37034|code|MOV             R0, R4|32-70
37036|code|BLX             listen|255-247-72-237
37040|code|CMP             R0, #0|0-40
37042|code|BLT             loc_90E6|24-219
37044|code|LDR             R2, [SP,#0x74]|29-154
37046|code|MOV             R0, R4|32-70
37048|code|LDR             R3, [R6]|51-104
37050|code|CMP             R2, R3|154-66
37052|code|BNE             loc_90F2|25-209
37054|code|ADD             SP, SP, #0x7C ; '|'|31-176
37056|code|POP             {R4-R7,PC}|240-189
37058|code|LDR             R0, =aServListenSock; "serv_listen: socket name too long"|14-72
37060|code|MOV             R4, #0xFFFFFFFE|111-240-1-4
37064|code|BLX             warnx|255-247-22-237
37068|code|B               loc_90B4|242-231
37070|code|LDR             R0, =aBind_0; "bind"|12-72
37072|code|MOV             R4, #0xFFFFFFFD|111-240-2-4
37076|code|BLX             warn|255-247-58-237
37080|code|B               loc_90B4|236-231
37082|code|LDR             R0, =aSocket_0; "socket"|10-72
37084|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
37088|code|BLX             warn|255-247-52-237
37092|code|B               loc_90B4|230-231
37094|code|LDR             R0, =aListen_0; "listen"|8-72
37096|code|MOV             R4, #0xFFFFFFFC|111-240-3-4
37100|code|BLX             warn|255-247-46-237
37104|code|B               loc_90B4|224-231
37106|code|BLX             __stack_chk_fail|255-247-174-236
37110|data|ALIGN 4|0-191
37112|data|DCD __stack_chk_guard|176-32-1-0
37116|data|DCD aServListenSock; "serv_listen: socket name too long"|12-150-0-0
37120|data|DCD aBind_0; "bind"|48-150-0-0
37124|data|DCD aSocket_0; "socket"|4-150-0-0
37128|data|DCD aListen_0; "listen"|56-150-0-0
37132|code|MOVS            R1, #0|0-33
37134|code|PUSH            {R4,LR}|16-181
37136|code|MOV             R2, R1|10-70
37138|code|BLX             accept|255-247-182-236
37142|code|CMP             R0, #0|0-40
37144|code|MOV             R4, R0|4-70
37146|code|BLT             loc_9120|1-219
37148|code|MOV             R0, R4|32-70
37150|code|POP             {R4,PC}|16-189
37152|code|LDR             R0, =aAccept_0; "accept"|2-72
37154|code|BLX             warn|255-247-20-237
37158|code|MOV             R0, R4|32-70
37160|code|POP             {R4,PC}|16-189
37162|data|ALIGN 4|0-191
37164|data|DCD aAccept_0; "accept"|64-150-0-0
37168|code|PUSH            {R4-R7,LR}|240-181
37170|code|MOVS            R1, #1|1-33
37172|code|LDR             R5, =__stack_chk_guard|32-77
37174|code|SUB             SP, SP, #0x7C ; '|'|159-176
37176|code|MOVS            R2, #0|0-34
37178|code|MOV             R6, R0|6-70
37180|code|MOV             R0, R1|8-70
37182|code|LDR             R3, [R5]|43-104
37184|code|STR             R3, [SP,#0x74]|29-147
37186|code|BLX             socket|255-247-16-237
37190|code|CMP             R0, #0|0-40
37192|code|MOV             R4, R0|4-70
37194|code|BLT             loc_919C|39-219
37196|code|MOV             R0, R6|48-70
37198|code|BLX             strlen|255-247-200-236
37202|code|CMP             R0, #0x6B ; 'k'|107-40
37204|code|MOV             R7, R0|7-70
37206|code|BHI             loc_9190|27-216
37208|code|MOVS            R1, #0|0-33
37210|code|MOVS            R2, #0x6E ; 'n'|110-34
37212|code|ADD             R0, SP, #4|1-168
37214|code|BLX             memset|255-247-222-236
37218|code|MOVS            R2, #0x6C ; 'l'|108-34
37220|code|MOV             R1, R6|49-70
37222|code|ADD.W           R0, SP, #6|13-241-6-0
37226|code|MOVS            R3, #1|1-35
37228|code|STRH.W          R3, [SP,#4]|173-248-4-48
37232|code|BLX             __strcpy_chk|255-247-146-236
37236|code|ADDS            R2, R7, #2|186-28
37238|code|MOV             R0, R4|32-70
37240|code|ADD             R1, SP, #4|1-169
37242|code|BLX             connect|255-247-12-237
37246|code|CMP             R0, #0|0-40
37248|code|BLT             loc_91A8|18-219
37250|code|LDR             R2, [SP,#0x74]|29-154
37252|code|MOV             R0, R4|32-70
37254|code|LDR             R3, [R5]|43-104
37256|code|CMP             R2, R3|154-66
37258|code|BNE             loc_91B4|19-209
37260|code|ADD             SP, SP, #0x7C ; '|'|31-176
37262|code|POP             {R4-R7,PC}|240-189
37264|code|LDR             R0, =aServListenSock; "serv_listen: socket name too long"|10-72
37266|code|MOV             R4, #0xFFFFFFFE|111-240-1-4
37270|code|BLX             warnx|255-247-176-236
37274|code|B               loc_9182|242-231
37276|code|LDR             R0, =aSocket_0; "socket"|8-72
37278|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
37282|code|BLX             warn|255-247-212-236
37286|code|B               loc_9182|236-231
37288|code|LDR             R0, =aConnect_0; "connect"|6-72
37290|code|MOV             R4, #0xFFFFFFFD|111-240-2-4
37294|code|BLX             warn|255-247-206-236
37298|code|B               loc_9182|230-231
37300|code|BLX             __stack_chk_fail|255-247-76-236
37304|data|DCD __stack_chk_guard|176-32-1-0
37308|data|DCD aServListenSock; "serv_listen: socket name too long"|12-150-0-0
37312|data|DCD aSocket_0; "socket"|4-150-0-0
37316|data|DCD aConnect_0; "connect"|72-150-0-0
37320|code|PUSH            {R3-R7,LR}|248-181
37322|code|MOV             R6, R0|6-70
37324|code|MOV             R7, R2|23-70
37326|code|CBZ             R2, loc_91EE|114-177
37328|code|MOV             R5, R1|13-70
37330|code|MOV             R4, R2|20-70
37332|code|B               loc_91DA|1-224
37334|code|SUBS            R4, R4, R0|36-26
37336|code|BEQ             loc_91EE|9-208
37338|code|MOV             R1, R5; buf|41-70
37340|code|MOV             R2, R4; nbytes|34-70
37342|code|MOV             R0, R6; fd|48-70
37344|code|BLX             read|255-247-30-236
37348|code|CMP             R0, #0|0-40
37350|code|ADD             R5, R0|5-68
37352|code|BGT             loc_91D6|245-220
37354|code|MOV             R7, R0|7-70
37356|code|BNE             loc_91F2|1-209
37358|code|MOV             R0, R7|56-70
37360|code|POP             {R3-R7,PC}|248-189
37362|code|LDR             R0, =aRead_0; "read"|2-72
37364|code|BLX             warn|255-247-170-236
37368|code|B               loc_91EE|249-231
37370|data|ALIGN 4|0-191
37372|data|DCD aRead_0; "read"|80-150-0-0
37376|code|PUSH            {R3-R7,LR}|248-181
37378|code|MOV             R6, R0|6-70
37380|code|MOV             R7, R2|23-70
37382|code|CBZ             R2, loc_9226|114-177
37384|code|MOV             R5, R1|13-70
37386|code|MOV             R4, R2|20-70
37388|code|B               loc_9212|1-224
37390|code|SUBS            R4, R4, R0|36-26
37392|code|BEQ             loc_9226|9-208
37394|code|MOV             R1, R5; buf|41-70
37396|code|MOV             R2, R4; n|34-70
37398|code|MOV             R0, R6; fd|48-70
37400|code|BLX             write|255-247-134-236
37404|code|CMP             R0, #0|0-40
37406|code|ADD             R5, R0|5-68
37408|code|BGT             loc_920E|245-220
37410|code|MOV             R7, R0|7-70
37412|code|BNE             loc_922A|1-209
37414|code|MOV             R0, R7|56-70
37416|code|POP             {R3-R7,PC}|248-189
37418|code|LDR             R0, =aWrite_0; "write"|2-72
37420|code|BLX             warn|255-247-142-236
37424|code|B               loc_9226|249-231
37426|data|ALIGN 4|0-191
37428|data|DCD aWrite_0; "write"|88-150-0-0
37432|code|PUSH            {R4-R7,LR}|240-181
37434|code|SUB             SP, SP, #0x2C ; ','|139-176
37436|code|LDR             R5, =dword_120B8|24-77
37438|code|ADD             R7, SP, #0x28 ; '('|10-175
37440|code|MOVS            R2, #0|0-34
37442|code|MOV.W           LR, #1|79-240-1-14
37446|code|STRB.W          R2, [R7,#-1]!|7-248-1-45
37450|code|MOV             R4, R1|12-70
37452|code|LDR             R3, [R5]|43-104
37454|code|ADD             R1, SP, #0x1C|7-169
37456|code|MOV             R6, R0|6-70
37458|code|STR             R7, [SP,#0x1C]|7-151
37460|code|STR.W           LR, [SP,#0x20]|205-248-32-224
37464|code|STR             R1, [SP,#8]|2-145
37466|code|STR.W           LR, [SP,#0xC]|205-248-12-224
37470|code|STR             R2, [SP]|0-146
37472|code|STR             R2, [SP,#4]|1-146
37474|code|CBZ             R3, loc_9288|139-177
37476|code|MOVS            R2, #1|1-34
37478|code|MOVS            R5, #0x10|16-37
37480|code|STR             R2, [R3,#4]|90-96
37482|code|MOV             R0, R6|48-70
37484|code|STR             R2, [R3,#8]|154-96
37486|code|MOV             R1, SP|105-70
37488|code|STR             R5, [R3]|29-96
37490|code|MOVS            R2, #0|0-34
37492|code|STR             R3, [SP,#0x10]|4-147
37494|code|STR             R5, [SP,#0x14]|5-149
37496|code|STR             R4, [R3,#0xC]|220-96
37498|code|BLX             sendmsg|255-247-228-235
37502|code|CMP             R0, #1|1-40
37504|code|BNE             loc_9294|8-209
37506|code|MOVS            R0, #0|0-32
37508|code|ADD             SP, SP, #0x2C ; ','|11-176
37510|code|POP             {R4-R7,PC}|240-189
37512|code|MOVS            R0, #0x10|16-32
37514|code|BL              sub_8D88|255-247-125-253
37518|code|MOV             R3, R0|3-70
37520|code|STR             R0, [R5]|40-96
37522|code|B               loc_9264|231-231
37524|code|LDR             R0, =aSendFdSendmsg; "send_fd sendmsg"|3-72
37526|code|BLX             warn|255-247-90-236
37530|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
37534|code|B               loc_9284|241-231
37536|data|DCD dword_120B8|184-32-1-0
37540|data|DCD aSendFdSendmsg; "send_fd sendmsg"|96-150-0-0
37544|code|PUSH            {R4-R6,LR}|112-181
37546|code|SUB             SP, SP, #0x28 ; '('|138-176
37548|code|MOV             R6, R0|6-70
37550|code|MOVS            R0, #0x10|16-32
37552|code|MOVS            R5, #0|0-37
37554|code|MOVS            R3, #1|1-35
37556|code|ADD.W           R2, SP, #0x27 ; '''|13-241-39-2
37560|code|STR             R3, [SP,#0x20]|8-147
37562|code|STR             R2, [SP,#0x1C]|7-146
37564|code|STR             R3, [SP,#0xC]|3-147
37566|code|ADD             R3, SP, #0x1C|7-171
37568|code|STR             R5, [SP]|0-149
37570|code|STR             R3, [SP,#8]|2-147
37572|code|STR             R5, [SP,#4]|1-149
37574|code|BL              sub_8D88|255-247-95-253
37578|code|MOV             R2, R5|42-70
37580|code|MOV             R1, SP|105-70
37582|code|MOVS            R3, #0x10|16-35
37584|code|STR             R3, [SP,#0x14]|5-147
37586|code|MOV             R4, R0|4-70
37588|code|MOV             R0, R6|48-70
37590|code|STR             R4, [SP,#0x10]|4-148
37592|code|BLX             recvmsg|255-247-62-236
37596|code|CMP             R0, R5|168-66
37598|code|BLT             loc_930E|22-219
37600|code|BEQ             loc_9302|15-208
37602|code|LDRB.W          R3, [SP,#0x27]|157-248-39-48
37606|code|CBNZ            R3, loc_92F6|51-185
37608|code|LDR             R3, [SP,#0x14]|5-155
37610|code|CMP             R3, #0x10|16-43
37612|code|IT EQ|8-191
37614|code|LDREQ           R0, [R4,#0xC]|224-104
37616|code|BNE             loc_92F6|1-209
37618|code|ADD             SP, SP, #0x28 ; '('|10-176
37620|code|POP             {R4-R6,PC}|112-189
37622|code|LDR             R0, =aRecvFdProtocol; "recv_fd: protocol error"|9-72
37624|code|BLX             warnx|255-247-254-235
37628|code|MOV             R0, #0xFFFFFFFD|111-240-2-0
37632|code|B               loc_92F2|247-231
37634|code|LDR             R0, =aRecvFdConnecti; "recv_fd: connection closed by server"|7-72
37636|code|BLX             warnx|255-247-248-235
37640|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
37644|code|B               loc_92F2|241-231
37646|code|LDR             R0, =aRecvFdRecvmsg; "recv_fd recvmsg"|5-72
37648|code|BLX             warn|255-247-28-236
37652|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
37656|code|B               loc_92F2|235-231
37658|data|ALIGN 4|0-191
37660|data|DCD aRecvFdProtocol; "recv_fd: protocol error"|168-150-0-0
37664|data|DCD aRecvFdConnecti; "recv_fd: connection closed by server"|128-150-0-0
37668|data|DCD aRecvFdRecvmsg; "recv_fd recvmsg"|112-150-0-0
37672|code|PUSH            {LR}|0-181
37674|code|SUB             SP, SP, #0xC|131-176
37676|code|ADD             R3, SP, #0x10+var_8|2-171
37678|code|MOVS            R2, #4; n|4-34
37680|code|STR.W           R1, [R3,#-4]!|67-248-4-29
37684|code|MOV             R1, R3; buf|25-70
37686|code|BL              sub_9200|255-247-99-255
37690|code|ADD             SP, SP, #0xC|3-176
37692|code|POP             {PC}|0-189
37694|data|ALIGN 0x10|0-191
37696|code|PUSH            {LR}|0-181
37698|code|SUB             SP, SP, #0xC|131-176
37700|code|ADD             R3, SP, #8|2-171
37702|code|MOVS            R2, #4|4-34
37704|code|STR.W           R1, [R3,#-4]!|67-248-4-29
37708|code|MOV             R1, R3|25-70
37710|code|BL              sub_9200|255-247-87-255
37714|code|ADD             SP, SP, #0xC|3-176
37716|code|POP             {PC}|0-189
37718|data|ALIGN 4|0-191
37720|code|PUSH            {LR}|0-181
37722|code|SUB             SP, SP, #0xC|131-176
37724|code|ADD             R3, SP, #8|2-171
37726|code|MOVS            R2, #4|4-34
37728|code|STR.W           R1, [R3,#-4]!|67-248-4-29
37732|code|MOV             R1, R3|25-70
37734|code|BL              sub_9200|255-247-75-255
37738|code|ADD             SP, SP, #0xC|3-176
37740|code|POP             {PC}|0-189
37742|data|ALIGN 0x10|0-191
37744|code|PUSH            {R4,LR}|16-181
37746|code|SUB             SP, SP, #0x58 ; 'X'|150-176
37748|code|MOV             R1, R0|1-70
37750|code|MOV             R4, R0|4-70
37752|code|MOV             R2, SP|106-70
37754|code|MOVS            R0, #3|3-32
37756|code|BLX             __lxstat|255-247-248-235
37760|code|CMP             R0, #0|0-40
37762|code|BLT             loc_9398|9-219
37764|code|LDR             R3, [SP,#0x10]|4-155
37766|code|AND.W           R2, R3, #0xF000|3-244-112-66
37770|code|CMP.W           R2, #0x4000|178-245-128-79
37774|code|BNE             loc_93AC|13-209
37776|code|LSLS            R3, R3, #0x1E|155-7
37778|code|BMI             loc_93A2|6-212
37780|code|ADD             SP, SP, #0x58 ; 'X'|22-176
37782|code|POP             {R4,PC}|16-189
37784|code|MOVS            R0, #0x6E ; 'n'|110-32
37786|code|LDR             R1, =aStatS; "stat(\"%s\")"|7-73
37788|code|MOV             R2, R4|34-70
37790|code|BLX             err|255-247-100-235
37794|code|MOVS            R0, #0x70 ; 'p'|112-32
37796|code|LDR             R1, =aSIsWorldWritab; "%s is world-writable"|5-73
37798|code|MOV             R2, R4|34-70
37800|code|BLX             errx|255-247-196-235
37804|code|MOVS            R0, #0x6F ; 'o'|111-32
37806|code|LDR             R1, =aSIsNotADirecto; "%s is not a directory"|4-73
37808|code|MOV             R2, R4|34-70
37810|code|BLX             errx|255-247-192-235
37814|data|ALIGN 4|0-191
37816|data|DCD aStatS; "stat(\"%s\")"|192-150-0-0
37820|data|DCD aSIsWorldWritab; "%s is world-writable"|228-150-0-0
37824|data|DCD aSIsNotADirecto; "%s is not a directory"|204-150-0-0
37828|code|PUSH.W          {R3-R9,LR}|45-233-248-67
37832|code|MOV             R7, R0|7-70
37834|code|LDR             R5, =(off_11EFC - 0x93D6)|12-77
37836|code|MOV             R8, R1|136-70
37838|code|LDR             R6, =(off_11F00 - 0x93DC)|12-78
37840|code|MOV             R9, R2|145-70
37842|code|ADD             R5, PC; off_11EFC|125-68
37844|code|BLX             .init_proc|255-247-8-235
37848|code|ADD             R6, PC; off_11F00|126-68
37850|code|SUBS            R6, R6, R5|118-27
37852|code|ASRS            R6, R6, #2|182-16
37854|code|BEQ             locret_93F6|10-208
37856|code|SUBS            R5, #4|4-61
37858|code|MOVS            R4, #0|0-36
37860|code|LDR.W           R3, [R5,#4]!|85-248-4-63
37864|code|MOV             R0, R7|56-70
37866|code|MOV             R1, R8|65-70
37868|code|MOV             R2, R9|74-70
37870|code|ADDS            R4, #1|1-52
37872|code|BLX             R3; sub_8D70|152-71
37874|code|CMP             R4, R6|180-66
37876|code|BNE             loc_93E4|246-209
37878|code|POP.W           {R3-R9,PC}|189-232-248-131
37882|data|ALIGN 4|0-191
37884|data|DCD off_11EFC - 0x93D6|38-139-0-0
37888|data|DCD off_11F00 - 0x93DC|36-139-0-0
37892|code|BX              LR|112-71
37894|data|ALIGN 4|0-191
37896|code|PUSH            {R3,LR}|8-64-45-233
37900|code|POP             {R3,PC}|8-128-189-232
38660|data|ALIGN 8|0-0-0-0
73468|data|DCD sub_8D70+1|113-141-0-0
73472|data|DCD byte_8D61|97-141-0-0
73476|data|DCD 0|0-0-0-0
73480|data|Elf32_Dyn <1, <0x10>>; DT_NEEDED libc.so.6|1-0-0-0-16-0-0-0
73488|data|Elf32_Dyn <1, <0x12B>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-43-1-0-0
73496|data|Elf32_Dyn <0xC, <0x89E8>>; DT_INIT|12-0-0-0-232-137-0-0
73504|data|Elf32_Dyn <0xD, <0x9408>>; DT_FINI|13-0-0-0-8-148-0-0
73512|data|Elf32_Dyn <0x19, <0x11EFC>>; DT_INIT_ARRAY|25-0-0-0-252-30-1-0
73520|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73528|data|Elf32_Dyn <0x1A, <0x11F00>>; DT_FINI_ARRAY|26-0-0-0-0-31-1-0
73536|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73544|data|Elf32_Dyn <4, <0x81B4>>; DT_HASH|4-0-0-0-180-129-0-0
73552|data|Elf32_Dyn <0x6FFFFEF5, <0x82F0>>; DT_GNU_HASH|245-254-255-111-240-130-0-0
73560|data|Elf32_Dyn <5, <0x86CC>>; DT_STRTAB|5-0-0-0-204-134-0-0
73568|data|Elf32_Dyn <6, <0x844C>>; DT_SYMTAB|6-0-0-0-76-132-0-0
73576|data|Elf32_Dyn <0xA, <0x15B>>; DT_STRSZ|10-0-0-0-91-1-0-0
73584|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73592|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73600|data|Elf32_Dyn <3, <0x12000>>; DT_PLTGOT|3-0-0-0-0-32-1-0
73608|data|Elf32_Dyn <2, <0x118>>; DT_PLTRELSZ|2-0-0-0-24-1-0-0
73616|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73624|data|Elf32_Dyn <0x17, <0x88D0>>; DT_JMPREL|23-0-0-0-208-136-0-0
73632|data|Elf32_Dyn <0x11, <0x88B8>>; DT_REL|17-0-0-0-184-136-0-0
73640|data|Elf32_Dyn <0x12, <0x18>>; DT_RELSZ|18-0-0-0-24-0-0-0
73648|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73656|data|Elf32_Dyn <0x6FFFFFFE, <0x8878>>; DT_VERNEED|254-255-255-111-120-136-0-0
73664|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73672|data|Elf32_Dyn <0x6FFFFFF0, <0x8828>>; DT_VERSYM|240-255-255-111-40-136-0-0
73680|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73688|data|ALIGN 0x40|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
73728|data|DCD stru_11F08|8-31-1-0
73732|data|DCD 0|0-0-0-0
73736|data|DCD 0|0-0-0-0
73740|data|DCD __imp_strcmp|36-33-1-0
73744|data|DCD __imp_basename|20-33-1-0
73748|data|DCD __imp_read|224-32-1-0
73752|data|DCD __imp_free|220-32-1-0
73756|data|DCD __imp_execvp|12-33-1-0
73760|data|DCD __imp_sendmsg|52-33-1-0
73764|data|DCD __imp___stack_chk_fail|40-33-1-0
73768|data|DCD __imp_unlink|16-33-1-0
73772|data|DCD __imp_err|44-33-1-0
73776|data|DCD __imp_geteuid|248-32-1-0
73780|data|DCD __imp_accept|196-32-1-0
73784|data|DCD __imp_strcpy|24-33-1-0
73788|data|DCD __imp___strcpy_chk|216-32-1-0
73792|data|DCD __imp_getenv|28-33-1-0
73796|data|DCD __imp_malloc|188-32-1-0
73800|data|DCD __imp___libc_start_main|232-32-1-0
73804|data|DCD __imp___gmon_start__|68-33-1-0
73808|data|DCD __imp_open|192-32-1-0
73812|data|DCD __imp_strlen|0-33-1-0
73816|data|DCD __imp_strchr|240-32-1-0
73820|data|DCD __imp_warnx|212-32-1-0
73824|data|DCD __imp___strdup|204-32-1-0
73828|data|DCD __imp_bind|228-32-1-0
73832|data|DCD __imp_memset|8-33-1-0
73836|data|DCD __imp_write|32-33-1-0
73840|data|DCD __imp_errx|200-32-1-0
73844|data|DCD __imp_listen|48-33-1-0
73848|data|DCD __imp_warn|236-32-1-0
73852|data|DCD __imp_recvmsg|60-33-1-0
73856|data|DCD __imp_socket|4-33-1-0
73860|data|DCD __imp___lxstat|64-33-1-0
73864|data|DCD __imp_abort|244-32-1-0
73868|data|DCD __imp_close|252-32-1-0
73872|data|DCD __imp_connect|208-32-1-0
73876|data|DCD __imp___assert_fail|56-33-1-0
73880|data|DCD __imp___gmon_start__|68-33-1-0
73884|data|ALIGN 0x10|0-0-0-0
