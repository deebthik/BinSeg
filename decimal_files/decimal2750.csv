address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|213-48-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x6940; SHT file offset|64-105-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 8; Number of entries in PHT|8-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1C; Number of entries in SHT|28-0
65586|data|DCW 0x1B; SHT entry index for string table|27-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x59D4; File offset|212-89-0-0
65596|data|DCD unk_159D4; Virtual address|212-89-1-0
65600|data|DCD 0x159D4; Physical address|212-89-1-0
65604|data|DCD 8; Size in file image|8-0-0-0
65608|data|DCD 8; Size in memory image|8-0-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x100; Size in file image|0-1-0-0
65640|data|DCD 0x100; Size in memory image|0-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x134; File offset|52-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|52-1-1-0
65664|data|DCD 0x10134; Physical address|52-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x59E0; Size in file image|224-89-0-0
65704|data|DCD 0x59E0; Size in memory image|224-89-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x6000; File offset|0-96-0-0
65724|data|DCD off_26000; Virtual address|0-96-2-0
65728|data|DCD 0x26000; Physical address|0-96-2-0
65732|data|DCD 0x7F8; Size in file image|248-7-0-0
65736|data|DCD 0xA20; Size in memory image|32-10-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x6010; File offset|16-96-0-0
65756|data|DCD stru_26010; Virtual address|16-96-2-0
65760|data|DCD 0x26010; Physical address|16-96-2-0
65764|data|DCD 0x160; Size in file image|96-1-0-0
65768|data|DCD 0x160; Size in memory image|96-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x150; File offset|80-1-0-0
65788|data|DCD dword_10150; Virtual address|80-1-1-0
65792|data|DCD 0x10150; Physical address|80-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65869|data|DCB 0, 0, 0|0-0-0
65872|data|DCD 4; Name Size|4-0-0-0
65876|data|DCD 0x10; Desc Size|16-0-0-0
65880|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65884|data|DCB "GNU",0; Name|71-78-85-0
65888|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x14; Desc Size|20-0-0-0
65912|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCB 0xDE, 0xFA, 0xDA, 0x20, 0x71, 0xC9, 0x84, 0xD4, 0x47; Desc|222-250-218-32-113-201-132-212-71-29-247-149-29-70-71-5-140-117-13-156
65940|data|DCD 0x83|131-0-0-0
65944|data|DCD 5|5-0-0-0
65948|data|DCD 0x20|32-0-0-0
65952|data|DCD 0xA|10-0-0-0
65956|data|DCD 0xD1100408, 0x402B6180, 0xA0104009, 0x14602102, 0xC0521581|8-4-16-209-128-97-43-64-9-64-16-160-2-33-96-20-129-21-82-192-6-80-128-37-160-10-128-1-8-65-130-132-32-24-8-0-200-5-0-68-12-4-2-12-128-0-32-40-2-194-111-38-186-129-128-137-34-16-0-89-200-8-65-2-10-2-32-98-176-118-12-150-164-0-0-64-29-16-164-64-230-5-19-131-6-33-108-148-33-20-16-0-0-225-134-64-199-121-129-2-67-4-24-3-5-128-2-61-4-0-76-39-18-64-128-32-0-4-8-9-160-144-0-40-151-6-16-128
66084|data|DCD 0, 0, 5, 0, 6, 8, 9, 0, 0, 0, 0xA, 0xC, 0xE, 0, 0|0-0-0-0-0-0-0-0-5-0-0-0-0-0-0-0-6-0-0-0-8-0-0-0-9-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-10-0-0-0-12-0-0-0-14-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-0-0-0-0-19-0-0-0-20-0-0-0-21-0-0-0-22-0-0-0-24-0-0-0-26-0-0-0-0-0-0-0-27-0-0-0-29-0-0-0-0-0-0-0-31-0-0-0-0-0-0-0-33-0-0-0-36-0-0-0-38-0-0-0-41-0-0-0-43-0-0-0-0-0-0-0-44-0-0-0-46-0-0-0-0-0-0-0-48-0-0-0-0-0-0-0-50-0-0-0-51-0-0-0-52-0-0-0-0-0-0-0-0-0-0-0-54-0-0-0-55-0-0-0-0-0-0-0-56-0-0-0-57-0-0-0-59-0-0-0-61-0-0-0-63-0-0-0-0-0-0-0-64-0-0-0-68-0-0-0-69-0-0-0-0-0-0-0-71-0-0-0-0-0-0-0-0-0-0-0-72-0-0-0-74-0-0-0-76-0-0-0-0-0-0-0-78-0-0-0-79-0-0-0-0-0-0-0-80-0-0-0-81-0-0-0-0-0-0-0-82-0-0-0-83-0-0-0-84-0-0-0-85-0-0-0-0-0-0-0-86-0-0-0-87-0-0-0-0-0-0-0-88-0-0-0-89-0-0-0-0-0-0-0-90-0-0-0-0-0-0-0-92-0-0-0-93-0-0-0-94-0-0-0-0-0-0-0-0-0-0-0-95-0-0-0-96-0-0-0-100-0-0-0-103-0-0-0-105-0-0-0-108-0-0-0-111-0-0-0-112-0-0-0-113-0-0-0-114-0-0-0-116-0-0-0-0-0-0-0-0-0-0-0-118-0-0-0-0-0-0-0-119-0-0-0-121-0-0-0-122-0-0-0-123-0-0-0-124-0-0-0-127-0-0-0-128-0-0-0-0-0-0-0-129-0-0-0-132-0-0-0-134-0-0-0-0-0-0-0-135-0-0-0-137-0-0-0-0-0-0-0-0-0-0-0-138-0-0-0-143-0-0-0-0-0-0-0-144-0-0-0-145-0-0-0-146-0-0-0-148-0-0-0-152-0-0-0-0-0-0-0-153-0-0-0
66608|data|DCD 0x436515DF, 0x195ECF76, 0xD827591, 0xF11ED7D, 0x623BA2F1|223-21-101-67-118-207-94-25-145-117-130-13-125-237-17-15-241-162-59-98-218-177-10-230-95-150-147-28-200-36-233-103-33-207-9-253-42-25-191-24-185-141-241-14-192-133-211-136-136-205-103-9-143-89-253-70-179-162-247-18-189-4-230-113-29-168-198-237-62-249-255-188-187-207-11-123-102-85-97-16-23-47-116-15-129-226-215-138-214-28-131-159-121-139-135-255-114-219-153-186-151-119-21-153-184-43-107-21-15-179-233-109-48-184-130-13-22-163-79-139-231-25-26-64-66-119-41-145-99-222-36-5-184-232-244-98-168-189-240-187-11-120-105-139-58-13-133-179-197-111-73-62-161-221-90-192-6-59-22-199-217-172-21-247-90-237-198-208-41-29-140-28-126-10-58-48-241-89-156-19-129-40-241-34-123-231-120-37-96-112-167-196-115-178-70-152-45-248-99-9-115-86-108-42-167-33-30-58-16-27-99-35-57-242-139-28-188-162-170-93-39-103-185-111-50-158-230-171-155-133-78-199-159-162-185-193-204-63-12-175-66-208-63-194-228-135-249-249-1-35-249-164-243-190-71-62-64-56-96-157-199-119-30-63-145-30-7-45-62-126-150-124-197-44-195-41-74-9-241-174-45-50-64-253-12-149-97-144-217-113-88-28-213-42-49-38-119-84-60-148-161-138-93-97-251-56-106-228-117-18-86-216-189-92-6-113-37-146-36-154-175-96-135-255-21-166-242-198-149-120-158-124-51-196-247-18-117-180-253-81-128-82-234-174-191-138-219-55-123-232-131-38-135-102-59-80-173-136-30-75-217-164-61-119-186-227-146-124-164-253-30-250-136-48-22-139-241-124-98-221-226-173-198-27-192-178-91-246-163-106-251-169-88-239-151-121-19-173-245-9-148-197-7-113-234-211-239-14-67-158-204-209-90-131-59-65-2-166-169-11-231-101-132-186-53-99-127-148-1-175-52-232-139-40-227-83-66-69-213-236-133-70-104-189-2-55-118-253-255-39-174-119-233-252-72-62-158-196-78-157-95-116-59-197-139-138-123-240-91-191-26-22-153-201-126-163-108-130-65-174-114-119-184-216-187-149-147-28-59-38-225-223-25-59-227-242-190-218-87-27-30-246-92-16-157-187-147-28-236-222-147-28-143-133-120-88-255-186-247-70-178-182-12-144-179-214-229-4-203-150-147-28-24-140-143-179-32-43-91-167-230-3-155-133-38-84-136-43-47-78-61-246-3-102-94-42-31-208-142-143-135-216-146-170-0-38-170-242-227-220-153-52-48-32-254-15-104-32-79-71-232-11-81-249-63-170-193-163-93-71-121-240-129-19-206-146
67204|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
67220|data|Elf32_Sym <aJvRegisterclas - byte_11024, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67236|data|Elf32_Sym <aItmDeregistert - byte_11024, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67252|data|Elf32_Sym <aGmonStart - byte_11024, 0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67268|data|Elf32_Sym <aItmRegistertmc - byte_11024, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67284|data|Elf32_Sym <aZ10getnextresi - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10GetNextResiP3RES"|148-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67300|data|Elf32_Sym <aZ12bnetConnect - byte_11024, 0, 0, 0x12, 0, 0>; "_Z12bnet_connectP3JCRixxPKcPcS3_ii"|65-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67316|data|Elf32_Sym <aMemcpy - byte_11024, 0, 0, 0x12, 0, 0>; "memcpy"|49-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67332|data|Elf32_Sym <aAbort - byte_11024, 0, 0, 0x12, 0, 0>; "abort"|224-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67348|data|Elf32_Sym <aZn6config4init - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN6CONFIG4initEPKcPFvS1_iP13s_lex_cont"...|254-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67364|data|Elf32_Sym <aRlFilenameComp - byte_11024, \; "rl_filename_completion_desired"|106-1-0-0-36-104-2-0-4-0-0-0-17-0-24-0
67380|data|Elf32_Sym <aStrcmp - byte_11024, 0, 0, 0x12, 0, 0>; "strcmp"|174-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67396|data|Elf32_Sym <aZ5dMsgpkciis0Z - byte_11024, 0, 0, 0x12, 0, 0>; "_Z5d_msgPKciiS0_z"|204-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67412|data|Elf32_Sym <aFclose - byte_11024, 0, 0, 0x12, 0, 0>; "fclose"|56-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67428|data|Elf32_Sym <aRLast - byte_11024, r_last, 4, 0x11, 0, 0x17>; "r_last"|66-2-0-0-48-100-2-0-4-0-0-0-17-0-23-0
67444|data|Elf32_Sym <aInit - byte_11024, .init_proc, 0, 0x12, 0, 0xB>; "_init"|121-0-0-0-228-33-1-0-0-0-0-0-18-0-11-0
67460|data|Elf32_Sym <aZ13freeResourc - byte_11024, _Z13free_resourceP3RESi+1, \; "_Z13free_resourceP3RESi" ...|153-2-0-0-229-66-1-0-80-1-0-0-18-0-13-0
67476|data|Elf32_Sym <aZ6bfgetspcip8I - byte_11024, 0, 0, 0x12, 0, 0>; "_Z6bfgetsPciP8_IO_FILE"|229-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67492|data|Elf32_Sym <aZ11bashSpacesp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z11bash_spacesPc"|42-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67508|data|Elf32_Sym <aOptarg - byte_11024, optarg, 4, 0x11, 0, 0x18>; "optarg"|97-11-0-0-20-104-2-0-4-0-0-0-17-0-24-0
67524|data|Elf32_Sym <aZ19stripTraili - byte_11024, 0, 0, 0x12, 0, 0>; "_Z19strip_trailing_junkPc"|60-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67540|data|Elf32_Sym <aUsingHistory - byte_11024, 0, 0, 0x12, 0, 0>; "using_history"|143-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67556|data|Elf32_Sym <aFprintf - byte_11024, 0, 0, 0x12, 0, 0>; "fprintf"|137-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67572|data|Elf32_Sym <aHistoryTruncat - byte_11024, 0, 0, 0x12, 0, 0>; "history_truncate_file"|36-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67588|data|Elf32_Sym <aStdin - byte_11024, _edata, 4, 0x11, 0, 0x18>; "stdin"|230-10-0-0-248-103-2-0-4-0-0-0-17-0-24-0
67604|data|Elf32_Sym <aFputs - byte_11024, 0, 0, 0x12, 0, 0>; "fputs"|43-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67620|data|Elf32_Sym <aWriteHistory - byte_11024, 0, 0, 0x12, 0, 0>; "write_history"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67636|data|Elf32_Sym <aZn5alist6appen - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5alist6appendEPv"|239-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67652|data|Elf32_Sym <aGetopt - byte_11024, 0, 0, 0x12, 0, 0>; "getopt"|29-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67668|data|Elf32_Sym <aReadHistory - byte_11024, 0, 0, 0x12, 0, 0>; "read_history"|159-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67684|data|Elf32_Sym <aZ14startWatchd - byte_11024, 0, 0, 0x12, 0, 0>; "_Z14start_watchdogv"|134-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67700|data|Elf32_Sym <aFprintf+1 - byte_11024, 0, 0, 0x12, 0, 0>; "printf"|138-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67716|data|Elf32_Sym <aAppendHistory - byte_11024, 0, 0, 0x12, 0, 0>; "append_history"|232-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67732|data|Elf32_Sym <aMemset - byte_11024, 0, 0, 0x12, 0, 0>; "memset"|22-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67748|data|Elf32_Sym <aRlCompletionSu - byte_11024, \; "rl_completion_suppress_append"|6-1-0-0-28-104-2-0-4-0-0-0-17-0-24-0
67764|data|Elf32_Sym <aZ17startBsockT - byte_11024, 0, 0, 0x12, 0, 0>; "_Z17start_bsock_timerP5BSOCKj"|204-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67780|data|Elf32_Sym <aBindtextdomain+4 - byte_11024, 0, 0, 0x12, 0, 0>; "textdomain"|163-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67796|data|Elf32_Sym <aIsatty - byte_11024, 0, 0, 0x12, 0, 0>; "isatty"|8-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67812|data|Elf32_Sym <aZ18cramMd5Chal - byte_11024, 0, 0, 0x12, 0, 0>; "_Z18cram_md5_challengeP5BSOCKPKcii"|158-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67828|data|Elf32_Sym <aStrncasecmp - byte_11024, 0, 0, 0x12, 0, 0>; "strncasecmp"|111-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67844|data|Elf32_Sym <aZ11initCryptov - byte_11024, 0, 0, 0x12, 0, 0>; "_Z11init_cryptov"|122-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67860|data|Elf32_Sym <aStrcasecmp - byte_11024, 0, 0, 0x12, 0, 0>; "strcasecmp"|71-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67876|data|Elf32_Sym <aRegfree - byte_11024, 0, 0, 0x12, 0, 0>; "regfree"|208-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67892|data|Elf32_Sym <aZ14cleanupCryp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z14cleanup_cryptov"|103-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67908|data|Elf32_Sym <aZ18smGetPoolMe - byte_11024, 0, 0, 0x12, 0, 0>; "_Z18sm_get_pool_memoryPKcii"|177-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67924|data|Elf32_Sym <aHistoryLength - byte_11024, history_length, 4, 0x11, 0, \; "history_length"|144-0-0-0-32-104-2-0-4-0-0-0-17-0-24-0
67940|data|Elf32_Sym <aZ16cramMd5Resp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z16cram_md5_respondP5BSOCKPKcPiS3_"|173-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67956|data|Elf32_Sym <aStdout - byte_11024, stdout, 4, 0x11, 0, 0x18>; "stdout"|36-11-0-0-40-104-2-0-4-0-0-0-17-0-24-0
67972|data|Elf32_Sym <aRFirst - byte_11024, r_first, 4, 0x11, 0, 0x17>; "r_first"|110-2-0-0-0-100-2-0-4-0-0-0-17-0-23-0
67988|data|Elf32_Sym <aZ7bstrcmppkcs0 - byte_11024, 0, 0, 0x12, 0, 0>; "_Z7bstrcmpPKcS0_"|86-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68004|data|Elf32_Sym <aResHead - byte_11024, res_head, 4, 0x11, 0, 0x17>; "res_head"|94-3-0-0-40-100-2-0-4-0-0-0-17-0-23-0
68020|data|Elf32_Sym <aZn5bsock8freeT - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK8free_tlsEv"|233-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68036|data|Elf32_Sym <aZ9storeStrp13s - byte_11024, \; "_Z9store_strP13s_lex_contextP8RES_ITEMi"... ...|197-3-0-0-244-35-1-0-0-0-0-0-18-0-0-0
68052|data|Elf32_Sym <aRlCompletionEn - byte_11024, rl_completion_entry_function,\; "rl_completion_entry_function"|172-0-0-0-16-104-2-0-4-0-0-0-17-0-24-0
68068|data|Elf32_Sym <aZ10initBsockp3 - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10init_bsockP3JCRiPKcS2_iP8sockaddr"|20-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68084|data|Elf32_Sym <aZ9bLockrespkci - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9b_LockResPKci"|4-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68100|data|Elf32_Sym <aZ17newConfigPa - byte_11024, 0, 0, 0x12, 0, 0>; "_Z17new_config_parserv"|41-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68116|data|Elf32_Sym <aZ25smCheckPool - byte_11024, 0, 0, 0x12, 0, 0>; "_Z25sm_check_pool_memory_sizePKciPci"|213-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68132|data|Elf32_Sym <aStderr - byte_11024, stderr, 4, 0x11, 0, 0x18>; "stderr"|104-11-0-0-24-104-2-0-4-0-0-0-17-0-24-0
68148|data|Elf32_Sym <aZ10storeBoolp1 - byte_11024, \; "_Z10store_boolP13s_lex_contextP8RES_ITE"... ...|170-4-0-0-100-34-1-0-0-0-0-0-18-0-0-0
68164|data|Elf32_Sym <aZ16freeTlsCont - byte_11024, 0, 0, 0x12, 0, 0>; "_Z16free_tls_contextP11TLS_Context"|7-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68180|data|Elf32_Sym <aZn5bsock4recve - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK4recvEv"|79-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68196|data|Elf32_Sym <aZ16stopBsockTi - byte_11024, 0, 0, 0x12, 0, 0>; "_Z16stop_bsock_timerP8btimer_t"|236-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68212|data|Elf32_Sym <aZ12initSignals - byte_11024, 0, 0, 0x12, 0, 0>; "_Z12init_signalsPFviE"|214-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68228|data|Elf32_Sym <aStrncmp - byte_11024, 0, 0, 0x12, 0, 0>; "strncmp"|178-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68244|data|Elf32_Sym <aRlLineBuffer - byte_11024, rl_line_buffer, 4, 0x11, 0, \; "rl_line_buffer"|247-0-0-0-8-104-2-0-4-0-0-0-17-0-24-0
68260|data|Elf32_Sym <aZ14actuallymal - byte_11024, 0, 0, 0x12, 0, 0>; "_Z14actuallymallocj"|209-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68276|data|Elf32_Sym <aErrnoLocation - byte_11024, 0, 0, 0x12, 0, 0>; "__errno_location"|37-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68292|data|Elf32_Sym <aRegcomp - byte_11024, 0, 0, 0x12, 0, 0>; "regcomp"|89-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68308|data|Elf32_Sym <aZ8bMallocpkcij - byte_11024, 0, 0, 0x12, 0, 0>; "_Z8b_mallocPKcij"|222-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68324|data|Elf32_Sym <aResAll - byte_11024, res_all, 0x98, 0x11, 0, 0x18>; "res_all"|205-2-0-0-128-105-2-0-152-0-0-0-17-0-24-0
68340|data|Elf32_Sym <aZ8initMsgp3jcr - byte_11024, 0, 0, 0x12, 0, 0>; "_Z8init_msgP3JCRP4MSGS"|63-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68356|data|Elf32_Sym <aExit - byte_11024, 0, 0, 0x12, 0, 0>; "exit"|163-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68372|data|Elf32_Sym <aZ8bstrncpypcpk - byte_11024, 0, 0, 0x12, 0, 0>; "_Z8bstrncpyPcPKci"|135-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68388|data|Elf32_Sym <aZ13saveResourc - byte_11024, \; "_Z13save_resourceiP8RES_ITEMi" ...|36-2-0-0-53-68-1-0-4-2-0-0-18-0-13-0
68404|data|Elf32_Sym <aFflush - byte_11024, 0, 0, 0x12, 0, 0>; "fflush"|149-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68420|data|Elf32_Sym <aZn5bsock9bstre - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK9bstrerrorEv"|254-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68436|data|Elf32_Sym <aBssStart - byte_11024, _edata, 0, 0x10, 0, 0x18>; "__bss_start"|206-11-0-0-248-103-2-0-0-0-0-0-16-0-24-0
68452|data|Elf32_Sym <aZ19smFreePoolM - byte_11024, 0, 0, 0x12, 0, 0>; "_Z19sm_free_pool_memoryPKciPc"|250-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68468|data|Elf32_Sym <aBssStart_0 - byte_11024, _edata, 0, 0x10, 0, 0x18>; "__bss_start__"|218-11-0-0-248-103-2-0-0-0-0-0-16-0-24-0
68484|data|Elf32_Sym <aSetlocale - byte_11024, 0, 0, 0x12, 0, 0>; "setlocale"|168-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68500|data|Elf32_Sym <aZn5alist7destr - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5alist7destroyEv"|115-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68516|data|Elf32_Sym <aRlCatchSignals - byte_11024, rl_catch_signals, 4, 0x11, 0,\; "rl_catch_signals"|127-0-0-0-48-104-2-0-4-0-0-0-17-0-24-0
68532|data|Elf32_Sym <aStifleHistory - byte_11024, 0, 0, 0x12, 0, 0>; "stifle_history"|58-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68548|data|Elf32_Sym <aZ9pmStrcatppcp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9pm_strcatPPcPKc"|73-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68564|data|Elf32_Sym <aGetenv - byte_11024, 0, 0, 0x12, 0, 0>; "getenv"|82-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68580|data|Elf32_Sym <aZn5bsock5fsend - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK5fsendEPKcz"|58-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68596|data|Elf32_Sym <aStrftime+4 - byte_11024, 0, 0, 0x12, 0, 0>; "time"|240-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68612|data|Elf32_Sym <aOptind - byte_11024, optind, 4, 0x11, 0, 0x18>; "optind"|186-10-0-0-0-104-2-0-4-0-0-0-17-0-24-0
68628|data|Elf32_Sym <aZn5bsock6signa - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK6signalEi"|195-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68644|data|Elf32_Sym <aZ12isBnetStopp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z12is_bnet_stopP5BSOCK"|209-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68660|data|Elf32_Sym <aZ10termBsockp5 - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10term_bsockP5BSOCK"|173-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68676|data|Elf32_Sym <aZ10openBpipepc - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10open_bpipePciPKc"|96-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68692|data|Elf32_Sym <aZn6config12par - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN6CONFIG12parse_configEv"|143-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68708|data|Elf32_Sym <aZ10resToStri - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10res_to_stri"|238-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68724|data|Elf32_Sym <aZ15initStackDu - byte_11024, 0, 0, 0x12, 0, 0>; "_Z15init_stack_dumpv"|152-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68740|data|Elf32_Sym <aEnd_0 - byte_11024, _end, 0, 0x10, 0, 0x18>; "_end"|252-11-0-0-32-106-2-0-0-0-0-0-16-0-24-0
68756|data|Elf32_Sym <aZ9pmStrcatr8po - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9pm_strcatR8POOL_MEMPKc"|16-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68772|data|Elf32_Sym <aZ12actuallyfre - byte_11024, 0, 0, 0x12, 0, 0>; "_Z12actuallyfreePv"|44-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68788|data|Elf32_Sym <aZ10storeNamep1 - byte_11024, \; "_Z10store_nameP13s_lex_contextP8RES_ITE"... ...|154-3-0-0-88-39-1-0-0-0-0-0-18-0-0-0
68804|data|Elf32_Sym <aSignal - byte_11024, 0, 0, 0x12, 0, 0>; "signal"|201-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68820|data|Elf32_Sym <aRlCompletionMa - byte_11024, 0, 0, 0x12, 0, 0>; "rl_completion_matches"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68836|data|Elf32_Sym <aZ15newTlsConte - byte_11024, 0, 0, 0x12, 0, 0>; "_Z15new_tls_contextPKcS0_S0_S0_PFiPciPK"...|193-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68852|data|Elf32_Sym <aEnd - byte_11024, _end, 0, 0x10, 0, 0x18>; "__end__"|244-11-0-0-32-106-2-0-0-0-0-0-16-0-24-0
68868|data|Elf32_Sym <aZ5eMsgpkciiis0 - byte_11024, 0, 0, 0x12, 0, 0>; "_Z5e_msgPKciiiS0_z"|135-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68884|data|Elf32_Sym <aZ10bvsnprintfp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10bvsnprintfPciPKcSt9__va_list"|3-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68900|data|Elf32_Sym <aFini - byte_11024, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|137-1-0-0-224-72-1-0-0-0-0-0-18-0-14-0
68916|data|Elf32_Sym <aZ11isANumberpk - byte_11024, 0, 0, 0x12, 0, 0>; "_Z11is_a_numberPKc"|25-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68932|data|Elf32_Sym <aZ11closeBpipep - byte_11024, 0, 0, 0x12, 0, 0>; "_Z11close_bpipeP5BPIPE"|42-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68948|data|Elf32_Sym <aDebugLevel - byte_11024, debug_level, 4, 0x11, 0, 0x18>; "debug_level"|103-3-0-0-44-104-2-0-4-0-0-0-17-0-24-0
68964|data|Elf32_Sym <aFopen64 - byte_11024, 0, 0, 0x12, 0, 0>; "fopen64"|151-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68980|data|Elf32_Sym <aZn6config14fre - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN6CONFIG14free_resourcesEv"|114-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68996|data|Elf32_Sym <aBssEnd+1 - byte_11024, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|233-11-0-0-32-106-2-0-0-0-0-0-16-0-24-0
69012|data|Elf32_Sym <aZ10myNameIsipp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10my_name_isiPPcPKc"|100-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69028|data|Elf32_Sym <aEdata - byte_11024, _edata, 0, 0x10, 0, 0x17>; "_edata"|199-11-0-0-248-103-2-0-0-0-0-0-16-0-23-0
69044|data|Elf32_Sym <aDbgTimestamp - byte_11024, dbg_timestamp, 1, 0x11, 0, \; "dbg_timestamp"|11-7-0-0-12-104-2-0-1-0-0-0-17-0-24-0
69060|data|Elf32_Sym <aFileno - byte_11024, 0, 0, 0x12, 0, 0>; "fileno"|123-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69076|data|Elf32_Sym <aAddHistory - byte_11024, 0, 0, 0x12, 0, 0>; "add_history"|157-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69092|data|Elf32_Sym <aRegexec - byte_11024, 0, 0, 0x12, 0, 0>; "regexec"|193-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69108|data|Elf32_Sym <aZ9smMallocpkci - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9sm_mallocPKcij"|92-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69124|data|Elf32_Sym <aBindtextdomain - byte_11024, 0, 0, 0x12, 0, 0>; "bindtextdomain"|159-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69140|data|Elf32_Sym <aGettext - byte_11024, 0, 0, 0x12, 0, 0>; "gettext"|216-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69156|data|Elf32_Sym <aZ21smSizeofPoo - byte_11024, 0, 0, 0x12, 0, 0>; "_Z21sm_sizeof_pool_memoryPKciPc"|141-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69172|data|Elf32_Sym <aZn5bsock5close - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK5closeEv"|123-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69188|data|Elf32_Sym <aZn5bsock4sende - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN5BSOCK4sendEv"|117-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69204|data|Elf32_Sym <aZ17bnetSigToAs - byte_11024, 0, 0, 0x12, 0, 0>; "_Z17bnet_sig_to_asciiP5BSOCK"|234-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69220|data|Elf32_Sym <aStrchr - byte_11024, 0, 0, 0x12, 0, 0>; "strchr"|130-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69236|data|Elf32_Sym <aWorkingDirecto - byte_11024, working_directory, 4, 0x11, \; "working_directory"|134-6-0-0-252-103-2-0-4-0-0-0-17-0-24-0
69252|data|Elf32_Sym <aZ9pmStrcpyppcp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9pm_strcpyPPcPKc"|185-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69268|data|Elf32_Sym <aBssEnd - byte_11024, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|232-11-0-0-32-106-2-0-0-0-0-0-16-0-24-0
69284|data|Elf32_Sym <aSleep - byte_11024, 0, 0, 0x12, 0, 0>; "sleep"|145-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69300|data|Elf32_Sym <aStrlen - byte_11024, 0, 0, 0x12, 0, 0>; "strlen"|15-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69316|data|Elf32_Sym <aStrtol - byte_11024, 0, 0, 0x12, 0, 0>; "strtol"|1-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69332|data|Elf32_Sym <aZ13stopWatchdo - byte_11024, 0, 0, 0x12, 0, 0>; "_Z13stop_watchdogv"|139-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69348|data|Elf32_Sym <aZ11bUnlockresp - byte_11024, 0, 0, 0x12, 0, 0>; "_Z11b_UnlockResPKci"|21-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69364|data|Elf32_Sym <aStrftime - byte_11024, 0, 0, 0x12, 0, 0>; "strftime"|236-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69380|data|Elf32_Sym <aZ12storePint32 - byte_11024, \; "_Z12store_pint32P13s_lex_contextP8RES_I"... ...|69-4-0-0-24-36-1-0-0-0-0-0-18-0-0-0
69396|data|Elf32_Sym <aStrcpy - byte_11024, 0, 0, 0x12, 0, 0>; "strcpy"|156-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69412|data|Elf32_Sym <aZ9pmStrcpyr8po - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9pm_strcpyR8POOL_MEMPKc"|183-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69428|data|Elf32_Sym <aResources - byte_11024, resources, 0x24, 0x11, 0, 0x17>; "resources"|24-3-0-0-4-100-2-0-36-0-0-0-17-0-23-0
69444|data|Elf32_Sym <aZ14storePasswo - byte_11024, \; "_Z14store_passwordP13s_lex_contextP8RES"... ...|213-4-0-0-236-36-1-0-0-0-0-0-18-0-0-0
69460|data|Elf32_Sym <aZ9storeDirp13s - byte_11024, \; "_Z9store_dirP13s_lex_contextP8RES_ITEMi"... ...|107-5-0-0-52-38-1-0-0-0-0-0-18-0-0-0
69476|data|Elf32_Sym <aLibcStartMain - byte_11024, 0, 0, 0x12, 0, 0>; "__libc_start_main"|181-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69492|data|Elf32_Sym <aZn6berrno9bstr - byte_11024, 0, 0, 0x12, 0, 0>; "_ZN6berrno9bstrerrorEv"|34-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69508|data|Elf32_Sym <aZ15bnetTlsClie - byte_11024, 0, 0, 0x12, 0, 0>; "_Z15bnet_tls_clientP11TLS_ContextP5BSOC"...|86-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69524|data|Elf32_Sym <aZ13dumpResourc - byte_11024, \; "_Z13dump_resourceiP3RESPFvPvPKczES1_" ...|57-3-0-0-81-66-1-0-146-0-0-0-18-0-13-0
69540|data|Elf32_Sym <aZ10parseArgspc - byte_11024, 0, 0, 0x12, 0, 0>; "_Z10parse_argsPcPS_PiS0_S0_i"|154-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69556|data|Elf32_Sym <aZ7smFreepkcipv - byte_11024, 0, 0, 0x12, 0, 0>; "_Z7sm_freePKciPv"|118-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69572|data|Elf32_Sym <aLocaltimeR - byte_11024, 0, 0, 0x12, 0, 0>; "localtime_r"|245-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69588|data|Elf32_Sym <aRlAttemptedCom - byte_11024, \; "rl_attempted_completion_function"|73-1-0-0-4-104-2-0-4-0-0-0-17-0-24-0
69604|data|Elf32_Sym <aReadline - byte_11024, 0, 0, 0x12, 0, 0>; "readline"|201-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69620|data|Elf32_Sym <aZ10storeTimep1 - byte_11024, \; "_Z10store_timeP13s_lex_contextP8RES_ITE"... ...|64-5-0-0-136-38-1-0-0-0-0-0-18-0-0-0
69636|data|Elf32_Sym <aGetpass - byte_11024, 0, 0, 0x12, 0, 0>; "getpass"|63-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69652|data|Elf32_Sym <aZ9bsnprintfpci - byte_11024, 0, 0, 0x12, 0, 0>; "_Z9bsnprintfPciPKcz"|252-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69668|data|DCB 0|0
69669|data|DCB "libreadline.so.6",0|108-105-98-114-101-97-100-108-105-110-101-46-115-111-46-54-0
69686|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
69714|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
69729|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
69749|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
69775|data|DCB "write_history",0|119-114-105-116-101-95-104-105-115-116-111-114-121-0
69789|data|DCB "_init",0|95-105-110-105-116-0
69795|data|DCB "rl_catch_signals",0|114-108-95-99-97-116-99-104-95-115-105-103-110-97-108-115-0
69812|data|DCB "history_length",0|104-105-115-116-111-114-121-95-108-101-110-103-116-104-0
69827|data|DCB "read_history",0|114-101-97-100-95-104-105-115-116-111-114-121-0
69840|data|DCB "rl_completion_entry_function",0|114-108-95-99-111-109-112-108-101-116-105-111-110-95-101-110-116-114-121-95-102-117-110-99-116-105-111-110-0
69869|data|DCB "readline",0|114-101-97-100-108-105-110-101-0
69878|data|DCB "rl_completion_matches",0|114-108-95-99-111-109-112-108-101-116-105-111-110-95-109-97-116-99-104-101-115-0
69900|data|DCB "append_history",0|97-112-112-101-110-100-95-104-105-115-116-111-114-121-0
69915|data|DCB "rl_line_buffer",0|114-108-95-108-105-110-101-95-98-117-102-102-101-114-0
69930|data|DCB "rl_completion_suppress_append",0|114-108-95-99-111-109-112-108-101-116-105-111-110-95-115-117-112-112-114-101-115-115-95-97-112-112-101-110-100-0
69960|data|DCB "history_truncate_file",0|104-105-115-116-111-114-121-95-116-114-117-110-99-97-116-101-95-102-105-108-101-0
69982|data|DCB "stifle_history",0|115-116-105-102-108-101-95-104-105-115-116-111-114-121-0
69997|data|DCB "rl_attempted_completion_function",0|114-108-95-97-116-116-101-109-112-116-101-100-95-99-111-109-112-108-101-116-105-111-110-95-102-117-110-99-116-105-111-110-0
70030|data|DCB "rl_filename_completion_desired",0|114-108-95-102-105-108-101-110-97-109-101-95-99-111-109-112-108-101-116-105-111-110-95-100-101-115-105-114-101-100-0
70061|data|DCB "_fini",0|95-102-105-110-105-0
70067|data|DCB "using_history",0|117-115-105-110-103-95-104-105-115-116-111-114-121-0
70081|data|DCB "add_history",0|97-100-100-95-104-105-115-116-111-114-121-0
70093|data|DCB "libhistory.so.6",0|108-105-98-104-105-115-116-111-114-121-46-115-111-46-54-0
70109|data|DCB "libbaccfg-5.2.6.so",0|108-105-98-98-97-99-99-102-103-45-53-46-50-46-54-46-115-111-0
70128|data|DCB "_Z5d_msgPKciiS0_z",0|95-90-53-100-95-109-115-103-80-75-99-105-105-83-48-95-122-0
70146|data|DCB "_Z8b_mallocPKcij",0|95-90-56-98-95-109-97-108-108-111-99-80-75-99-105-106-0
70163|data|DCB "_ZN5alist6appendEPv",0|95-90-78-53-97-108-105-115-116-54-97-112-112-101-110-100-69-80-118-0
70183|data|DCB "_Z10bvsnprintfPciPKcSt9__va_list",0|95-90-49-48-98-118-115-110-112-114-105-110-116-102-80-99-105-80-75-99-83-116-57-95-95-118-97-95-108-105-115-116-0
70216|data|DCB "_Z13save_resourceiP8RES_ITEMi",0|95-90-49-51-115-97-118-101-95-114-101-115-111-117-114-99-101-105-80-56-82-69-83-95-73-84-69-77-105-0
70246|data|DCB "r_last",0|114-95-108-97-115-116-0
70253|data|DCB "_Z9pm_strcatPPcPKc",0|95-90-57-112-109-95-115-116-114-99-97-116-80-80-99-80-75-99-0
70272|data|DCB "_Z9sm_mallocPKcij",0|95-90-57-115-109-95-109-97-108-108-111-99-80-75-99-105-106-0
70290|data|DCB "r_first",0|114-95-102-105-114-115-116-0
70298|data|DCB "_Z7sm_freePKciPv",0|95-90-55-115-109-95-102-114-101-101-80-75-99-105-80-118-0
70315|data|DCB "_Z8bstrncpyPcPKci",0|95-90-56-98-115-116-114-110-99-112-121-80-99-80-75-99-105-0
70333|data|DCB "_Z13free_resourceP3RESi",0|95-90-49-51-102-114-101-101-95-114-101-115-111-117-114-99-101-80-51-82-69-83-105-0
70357|data|DCB "_Z18sm_get_pool_memoryPKcii",0|95-90-49-56-115-109-95-103-101-116-95-112-111-111-108-95-109-101-109-111-114-121-80-75-99-105-105-0
70385|data|DCB "res_all",0|114-101-115-95-97-108-108-0
70393|data|DCB "_Z25sm_check_pool_memory_sizePKciPci",0|95-90-50-53-115-109-95-99-104-101-99-107-95-112-111-111-108-95-109-101-109-111-114-121-95-115-105-122-101-80-75-99-105-80-99-105-0
70430|data|DCB "_Z19sm_free_pool_memoryPKciPc",0|95-90-49-57-115-109-95-102-114-101-101-95-112-111-111-108-95-109-101-109-111-114-121-80-75-99-105-80-99-0
70460|data|DCB "resources",0|114-101-115-111-117-114-99-101-115-0
70470|data|DCB "_ZN6berrno9bstrerrorEv",0|95-90-78-54-98-101-114-114-110-111-57-98-115-116-114-101-114-114-111-114-69-118-0
70493|data|DCB "_Z13dump_resourceiP3RESPFvPvPKczES1_",0|95-90-49-51-100-117-109-112-95-114-101-115-111-117-114-99-101-105-80-51-82-69-83-80-70-118-80-118-80-75-99-122-69-83-49-95-0
70530|data|DCB "res_head",0|114-101-115-95-104-101-97-100-0
70539|data|DCB "debug_level",0|100-101-98-117-103-95-108-101-118-101-108-0
70551|data|DCB "_ZN5alist7destroyEv",0|95-90-78-53-97-108-105-115-116-55-100-101-115-116-114-111-121-69-118-0
70571|data|DCB "_Z5e_msgPKciiiS0_z",0|95-90-53-101-95-109-115-103-80-75-99-105-105-105-83-48-95-122-0
70590|data|DCB "_Z10store_nameP13s_lex_contextP8RES_ITEMii",0|95-90-49-48-115-116-111-114-101-95-110-97-109-101-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
70633|data|DCB "_Z9store_strP13s_lex_contextP8RES_ITEMii",0|95-90-57-115-116-111-114-101-95-115-116-114-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
70674|data|DCB "_Z10res_to_stri",0|95-90-49-48-114-101-115-95-116-111-95-115-116-114-105-0
70690|data|DCB "_ZN6CONFIG4initEPKcPFvS1_iP13s_lex_contextS1_zEiPviiiP9RES_TABLE"|95-90-78-54-67-79-78-70-73-71-52-105-110-105-116-69-80-75-99-80-70-118-83-49-95-105-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-83-49-95-122-69-105-80-118-105-105-105-80-57-82-69-83-95-84-65-66-76-69-80-80-51-82-69-83-0
70761|data|DCB "_Z12store_pint32P13s_lex_contextP8RES_ITEMii",0|95-90-49-50-115-116-111-114-101-95-112-105-110-116-51-50-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
70806|data|DCB "_ZN6CONFIG14free_resourcesEv",0|95-90-78-54-67-79-78-70-73-71-49-52-102-114-101-101-95-114-101-115-111-117-114-99-101-115-69-118-0
70835|data|DCB "_ZN6CONFIG12parse_configEv",0|95-90-78-54-67-79-78-70-73-71-49-50-112-97-114-115-101-95-99-111-110-102-105-103-69-118-0
70862|data|DCB "_Z10store_boolP13s_lex_contextP8RES_ITEMii",0|95-90-49-48-115-116-111-114-101-95-98-111-111-108-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
70905|data|DCB "_Z14store_passwordP13s_lex_contextP8RES_ITEMii",0|95-90-49-52-115-116-111-114-101-95-112-97-115-115-119-111-114-100-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
70952|data|DCB "_Z9b_LockResPKci",0|95-90-57-98-95-76-111-99-107-82-101-115-80-75-99-105-0
70969|data|DCB "_Z11b_UnlockResPKci",0|95-90-49-49-98-95-85-110-108-111-99-107-82-101-115-80-75-99-105-0
70989|data|DCB "_Z17new_config_parserv",0|95-90-49-55-110-101-119-95-99-111-110-102-105-103-95-112-97-114-115-101-114-118-0
71012|data|DCB "_Z10store_timeP13s_lex_contextP8RES_ITEMii",0|95-90-49-48-115-116-111-114-101-95-116-105-109-101-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
71055|data|DCB "_Z9store_dirP13s_lex_contextP8RES_ITEMii",0|95-90-57-115-116-111-114-101-95-100-105-114-80-49-51-115-95-108-101-120-95-99-111-110-116-101-120-116-80-56-82-69-83-95-73-84-69-77-105-105-0
71096|data|DCB "_Z10GetNextResiP3RES",0|95-90-49-48-71-101-116-78-101-120-116-82-101-115-105-80-51-82-69-83-0
71117|data|DCB "libbac-5.2.6.so",0|108-105-98-98-97-99-45-53-46-50-46-54-46-115-111-0
71133|data|DCB "_Z9pm_strcpyPPcPKc",0|95-90-57-112-109-95-115-116-114-99-112-121-80-80-99-80-75-99-0
71152|data|DCB "_Z17start_bsock_timerP5BSOCKj",0|95-90-49-55-115-116-97-114-116-95-98-115-111-99-107-95-116-105-109-101-114-80-53-66-83-79-67-75-106-0
71182|data|DCB "_Z17bnet_sig_to_asciiP5BSOCK",0|95-90-49-55-98-110-101-116-95-115-105-103-95-116-111-95-97-115-99-105-105-80-53-66-83-79-67-75-0
71211|data|DCB "_Z16free_tls_contextP11TLS_Context",0|95-90-49-54-102-114-101-101-95-116-108-115-95-99-111-110-116-101-120-116-80-49-49-84-76-83-95-67-111-110-116-101-120-116-0
71246|data|DCB "_Z11bash_spacesPc",0|95-90-49-49-98-97-115-104-95-115-112-97-99-101-115-80-99-0
71264|data|DCB "_Z19strip_trailing_junkPc",0|95-90-49-57-115-116-114-105-112-95-116-114-97-105-108-105-110-103-95-106-117-110-107-80-99-0
71290|data|DCB "_Z15bnet_tls_clientP11TLS_ContextP5BSOCKP5alist",0|95-90-49-53-98-110-101-116-95-116-108-115-95-99-108-105-101-110-116-80-49-49-84-76-83-95-67-111-110-116-101-120-116-80-53-66-83-79-67-75-80-53-97-108-105-115-116-0
71338|data|DCB "working_directory",0|119-111-114-107-105-110-103-95-100-105-114-101-99-116-111-114-121-0
71356|data|DCB "_Z15init_stack_dumpv",0|95-90-49-53-105-110-105-116-95-115-116-97-99-107-95-100-117-109-112-118-0
71377|data|DCB "_Z10term_bsockP5BSOCK",0|95-90-49-48-116-101-114-109-95-98-115-111-99-107-80-53-66-83-79-67-75-0
71399|data|DCB "_ZN5BSOCK6signalEi",0|95-90-78-53-66-83-79-67-75-54-115-105-103-110-97-108-69-105-0
71418|data|DCB "_Z12init_signalsPFviE",0|95-90-49-50-105-110-105-116-95-115-105-103-110-97-108-115-80-70-118-105-69-0
71440|data|DCB "_Z16stop_bsock_timerP8btimer_t",0|95-90-49-54-115-116-111-112-95-98-115-111-99-107-95-116-105-109-101-114-80-56-98-116-105-109-101-114-95-116-0
71471|data|DCB "dbg_timestamp",0|100-98-103-95-116-105-109-101-115-116-97-109-112-0
71485|data|DCB "_Z11is_a_numberPKc",0|95-90-49-49-105-115-95-97-95-110-117-109-98-101-114-80-75-99-0
71504|data|DCB "_Z12actuallyfreePv",0|95-90-49-50-97-99-116-117-97-108-108-121-102-114-101-101-80-118-0
71523|data|DCB "_Z8init_msgP3JCRP4MSGS",0|95-90-56-105-110-105-116-95-109-115-103-80-51-74-67-82-80-52-77-83-71-83-0
71546|data|DCB "_Z7bstrcmpPKcS0_",0|95-90-55-98-115-116-114-99-109-112-80-75-99-83-48-95-0
71563|data|DCB "_Z14cleanup_cryptov",0|95-90-49-52-99-108-101-97-110-117-112-95-99-114-121-112-116-111-118-0
71583|data|DCB "_ZN5BSOCK5closeEv",0|95-90-78-53-66-83-79-67-75-53-99-108-111-115-101-69-118-0
71601|data|DCB "_Z21sm_sizeof_pool_memoryPKciPc",0|95-90-50-49-115-109-95-115-105-122-101-111-102-95-112-111-111-108-95-109-101-109-111-114-121-80-75-99-105-80-99-0
71633|data|DCB "_Z16cram_md5_respondP5BSOCKPKcPiS3_",0|95-90-49-54-99-114-97-109-95-109-100-53-95-114-101-115-112-111-110-100-80-53-66-83-79-67-75-80-75-99-80-105-83-51-95-0
71669|data|DCB "_Z12is_bnet_stopP5BSOCK",0|95-90-49-50-105-115-95-98-110-101-116-95-115-116-111-112-80-53-66-83-79-67-75-0
71693|data|DCB "_ZN5BSOCK8free_tlsEv",0|95-90-78-53-66-83-79-67-75-56-102-114-101-101-95-116-108-115-69-118-0
71714|data|DCB "_ZN5BSOCK9bstrerrorEv",0|95-90-78-53-66-83-79-67-75-57-98-115-116-114-101-114-114-111-114-69-118-0
71736|data|DCB "_Z10init_bsockP3JCRiPKcS2_iP8sockaddr",0|95-90-49-48-105-110-105-116-95-98-115-111-99-107-80-51-74-67-82-105-80-75-99-83-50-95-105-80-56-115-111-99-107-97-100-100-114-0
71774|data|DCB "_ZN5BSOCK5fsendEPKcz",0|95-90-78-53-66-83-79-67-75-53-102-115-101-110-100-69-80-75-99-122-0
71795|data|DCB "_ZN5BSOCK4recvEv",0|95-90-78-53-66-83-79-67-75-52-114-101-99-118-69-118-0
71812|data|DCB "_Z10open_bpipePciPKc",0|95-90-49-48-111-112-101-110-95-98-112-105-112-101-80-99-105-80-75-99-0
71833|data|DCB "_ZN5BSOCK4sendEv",0|95-90-78-53-66-83-79-67-75-52-115-101-110-100-69-118-0
71850|data|DCB "_Z14start_watchdogv",0|95-90-49-52-115-116-97-114-116-95-119-97-116-99-104-100-111-103-118-0
71870|data|DCB "_Z10parse_argsPcPS_PiS0_S0_i",0|95-90-49-48-112-97-114-115-101-95-97-114-103-115-80-99-80-83-95-80-105-83-48-95-83-48-95-105-0
71899|data|DCB "_Z9pm_strcpyR8POOL_MEMPKc",0|95-90-57-112-109-95-115-116-114-99-112-121-82-56-80-79-79-76-95-77-69-77-80-75-99-0
71925|data|DCB "_Z14actuallymallocj",0|95-90-49-52-97-99-116-117-97-108-108-121-109-97-108-108-111-99-106-0
71945|data|DCB "_Z6bfgetsPciP8_IO_FILE",0|95-90-54-98-102-103-101-116-115-80-99-105-80-56-95-73-79-95-70-73-76-69-0
71968|data|DCB "_Z9bsnprintfPciPKcz",0|95-90-57-98-115-110-112-114-105-110-116-102-80-99-105-80-75-99-122-0
71988|data|DCB "_Z9pm_strcatR8POOL_MEMPKc",0|95-90-57-112-109-95-115-116-114-99-97-116-82-56-80-79-79-76-95-77-69-77-80-75-99-0
72014|data|DCB "_Z11close_bpipeP5BPIPE",0|95-90-49-49-99-108-111-115-101-95-98-112-105-112-101-80-53-66-80-73-80-69-0
72037|data|DCB "_Z12bnet_connectP3JCRixxPKcPcS3_ii",0|95-90-49-50-98-110-101-116-95-99-111-110-110-101-99-116-80-51-74-67-82-105-120-120-80-75-99-80-99-83-51-95-105-105-0
72072|data|DCB "_Z10my_name_isiPPcPKc",0|95-90-49-48-109-121-95-110-97-109-101-95-105-115-105-80-80-99-80-75-99-0
72094|data|DCB "_Z11init_cryptov",0|95-90-49-49-105-110-105-116-95-99-114-121-112-116-111-118-0
72111|data|DCB "_Z13stop_watchdogv",0|95-90-49-51-115-116-111-112-95-119-97-116-99-104-100-111-103-118-0
72130|data|DCB "_Z18cram_md5_challengeP5BSOCKPKcii",0|95-90-49-56-99-114-97-109-95-109-100-53-95-99-104-97-108-108-101-110-103-101-80-53-66-83-79-67-75-80-75-99-105-105-0
72165|data|DCB "_Z15new_tls_contextPKcS0_S0_S0_PFiPciPKvES3_S0_b",0|95-90-49-53-110-101-119-95-116-108-115-95-99-111-110-116-101-120-116-80-75-99-83-48-95-83-48-95-83-48-95-80-70-105-80-99-105-80-75-118-69-83-51-95-83-48-95-98-0
72214|data|DCB "libwrap.so.0",0|108-105-98-119-114-97-112-46-115-111-46-48-0
72227|data|DCB "libcap.so.2",0|108-105-98-99-97-112-46-115-111-46-50-0
72239|data|DCB "libz.so.1",0|108-105-98-122-46-115-111-46-49-0
72249|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
72265|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
72282|data|DCB "libdl.so.2",0|108-105-98-100-108-46-115-111-46-50-0
72293|data|DCB "libssl.so.1.0.0",0|108-105-98-115-115-108-46-115-111-46-49-46-48-46-48-0
72309|data|DCB "libcrypto.so.1.0.0",0|108-105-98-99-114-121-112-116-111-46-115-111-46-49-46-48-46-48-0
72328|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
72343|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
72353|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
72367|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
72377|data|DCB "fflush",0|102-102-108-117-115-104-0
72384|data|DCB "strcpy",0|115-116-114-99-112-121-0
72391|data|DCB "exit",0|101-120-105-116-0
72396|data|DCB "setlocale",0|115-101-116-108-111-99-97-108-101-0
72406|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
72414|data|DCB "optind",0|111-112-116-105-110-100-0
72421|data|DCB "regexec",0|114-101-103-101-120-101-99-0
72429|data|DCB "signal",0|115-105-103-110-97-108-0
72436|data|DCB "regfree",0|114-101-103-102-114-101-101-0
72444|data|DCB "gettext",0|103-101-116-116-101-120-116-0
72452|data|DCB "abort",0|97-98-111-114-116-0
72458|data|DCB "stdin",0|115-116-100-105-110-0
72464|data|DCB "strftime",0|115-116-114-102-116-105-109-101-0
72473|data|DCB "localtime_r",0|108-111-99-97-108-116-105-109-101-95-114-0
72485|data|DCB "strtol",0|115-116-114-116-111-108-0
72492|data|DCB "isatty",0|105-115-97-116-116-121-0
72499|data|DCB "strlen",0|115-116-114-108-101-110-0
72506|data|DCB "memset",0|109-101-109-115-101-116-0
72513|data|DCB "getopt",0|103-101-116-111-112-116-0
72520|data|DCB "stdout",0|115-116-100-111-117-116-0
72527|data|DCB "fputs",0|102-112-117-116-115-0
72533|data|DCB "memcpy",0|109-101-109-99-112-121-0
72540|data|DCB "fclose",0|102-99-108-111-115-101-0
72547|data|DCB "getpass",0|103-101-116-112-97-115-115-0
72555|data|DCB "strcasecmp",0|115-116-114-99-97-115-101-99-109-112-0
72566|data|DCB "getenv",0|103-101-116-101-110-118-0
72573|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
72581|data|DCB "optarg",0|111-112-116-97-114-103-0
72588|data|DCB "stderr",0|115-116-100-101-114-114-0
72595|data|DCB "strncasecmp",0|115-116-114-110-99-97-115-101-99-109-112-0
72607|data|DCB "fileno",0|102-105-108-101-110-111-0
72614|data|DCB "strchr",0|115-116-114-99-104-114-0
72621|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
72629|data|DCB "sleep",0|115-108-101-101-112-0
72635|data|DCB "fopen64",0|102-111-112-101-110-54-52-0
72643|data|DCB "bindtextdomain",0|98-105-110-100-116-101-120-116-100-111-109-97-105-110-0
72658|data|DCB "strcmp",0|115-116-114-99-109-112-0
72665|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
72683|data|DCB "_edata",0|95-101-100-97-116-97-0
72690|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
72702|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
72716|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
72728|data|DCB "__end__",0|95-95-101-110-100-95-95-0
72736|data|DCB "_end",0|95-101-110-100-0
72741|data|DCB "/usr/lib/bacula",0|47-117-115-114-47-108-105-98-47-98-97-99-117-108-97-0
72757|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
72767|data|DCB 0|0
72768|data|DCW 0|0-0
72770|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
72772|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
72774|data|DCW 0; local  symbol: __gmon_start__|0-0
72776|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
72778|data|DCW 0; local  symbol: _Z10GetNextResiP3RES|0-0
72780|data|DCW 0; local  symbol: _Z12bnet_connectP3JCRixxPKcPcS3_ii|0-0
72782|data|DCW 2; memcpy@@GLIBC_2.4|2-0
72784|data|DCW 2; abort@@GLIBC_2.4|2-0
72786|data|DCW 0; local  symbol: _ZN6CONFIG4initEPKcPFvS1_iP13s_lex_contextS1_zEiPviiiP9RES_TABLEPP3RES|0-0
72788|data|DCW 0; local  symbol: rl_filename_completion_desired|0-0
72790|data|DCW 2; strcmp@@GLIBC_2.4|2-0
72792|data|DCW 0; local  symbol: _Z5d_msgPKciiS0_z|0-0
72794|data|DCW 2; fclose@@GLIBC_2.4|2-0
72796|data|DCW 1; global symbol: r_last|1-0
72798|data|DCW 1; global symbol: _init|1-0
72800|data|DCW 1; global symbol: _Z13free_resourceP3RESi|1-0
72802|data|DCW 0; local  symbol: _Z6bfgetsPciP8_IO_FILE|0-0
72804|data|DCW 0; local  symbol: _Z11bash_spacesPc|0-0
72806|data|DCW 2; optarg@@GLIBC_2.4|2-0
72808|data|DCW 0; local  symbol: _Z19strip_trailing_junkPc|0-0
72810|data|DCW 0; local  symbol: using_history|0-0
72812|data|DCW 2; fprintf@@GLIBC_2.4|2-0
72814|data|DCW 0; local  symbol: history_truncate_file|0-0
72816|data|DCW 2; stdin@@GLIBC_2.4|2-0
72818|data|DCW 2; fputs@@GLIBC_2.4|2-0
72820|data|DCW 0; local  symbol: write_history|0-0
72822|data|DCW 0; local  symbol: _ZN5alist6appendEPv|0-0
72824|data|DCW 2; getopt@@GLIBC_2.4|2-0
72826|data|DCW 0; local  symbol: read_history|0-0
72828|data|DCW 0; local  symbol: _Z14start_watchdogv|0-0
72830|data|DCW 2; printf@@GLIBC_2.4|2-0
72832|data|DCW 0; local  symbol: append_history|0-0
72834|data|DCW 2; memset@@GLIBC_2.4|2-0
72836|data|DCW 0; local  symbol: rl_completion_suppress_append|0-0
72838|data|DCW 0; local  symbol: _Z17start_bsock_timerP5BSOCKj|0-0
72840|data|DCW 2; textdomain@@GLIBC_2.4|2-0
72842|data|DCW 2; isatty@@GLIBC_2.4|2-0
72844|data|DCW 0; local  symbol: _Z18cram_md5_challengeP5BSOCKPKcii|0-0
72846|data|DCW 2; strncasecmp@@GLIBC_2.4|2-0
72848|data|DCW 0; local  symbol: _Z11init_cryptov|0-0
72850|data|DCW 2; strcasecmp@@GLIBC_2.4|2-0
72852|data|DCW 2; regfree@@GLIBC_2.4|2-0
72854|data|DCW 0; local  symbol: _Z14cleanup_cryptov|0-0
72856|data|DCW 0; local  symbol: _Z18sm_get_pool_memoryPKcii|0-0
72858|data|DCW 0; local  symbol: history_length|0-0
72860|data|DCW 0; local  symbol: _Z16cram_md5_respondP5BSOCKPKcPiS3_|0-0
72862|data|DCW 2; stdout@@GLIBC_2.4|2-0
72864|data|DCW 1; global symbol: r_first|1-0
72866|data|DCW 0; local  symbol: _Z7bstrcmpPKcS0_|0-0
72868|data|DCW 1; global symbol: res_head|1-0
72870|data|DCW 0; local  symbol: _ZN5BSOCK8free_tlsEv|0-0
72872|data|DCW 0; local  symbol: _Z9store_strP13s_lex_contextP8RES_ITEMii|0-0
72874|data|DCW 0; local  symbol: rl_completion_entry_function|0-0
72876|data|DCW 0; local  symbol: _Z10init_bsockP3JCRiPKcS2_iP8sockaddr|0-0
72878|data|DCW 0; local  symbol: _Z9b_LockResPKci|0-0
72880|data|DCW 0; local  symbol: _Z17new_config_parserv|0-0
72882|data|DCW 0; local  symbol: _Z25sm_check_pool_memory_sizePKciPci|0-0
72884|data|DCW 2; stderr@@GLIBC_2.4|2-0
72886|data|DCW 0; local  symbol: _Z10store_boolP13s_lex_contextP8RES_ITEMii|0-0
72888|data|DCW 0; local  symbol: _Z16free_tls_contextP11TLS_Context|0-0
72890|data|DCW 0; local  symbol: _ZN5BSOCK4recvEv|0-0
72892|data|DCW 0; local  symbol: _Z16stop_bsock_timerP8btimer_t|0-0
72894|data|DCW 0; local  symbol: _Z12init_signalsPFviE|0-0
72896|data|DCW 2; strncmp@@GLIBC_2.4|2-0
72898|data|DCW 0; local  symbol: rl_line_buffer|0-0
72900|data|DCW 0; local  symbol: _Z14actuallymallocj|0-0
72902|data|DCW 3; __errno_location@@GLIBC_2.4|3-0
72904|data|DCW 2; regcomp@@GLIBC_2.4|2-0
72906|data|DCW 0; local  symbol: _Z8b_mallocPKcij|0-0
72908|data|DCW 1; global symbol: res_all|1-0
72910|data|DCW 0; local  symbol: _Z8init_msgP3JCRP4MSGS|0-0
72912|data|DCW 2; exit@@GLIBC_2.4|2-0
72914|data|DCW 0; local  symbol: _Z8bstrncpyPcPKci|0-0
72916|data|DCW 1; global symbol: _Z13save_resourceiP8RES_ITEMi|1-0
72918|data|DCW 2; fflush@@GLIBC_2.4|2-0
72920|data|DCW 0; local  symbol: _ZN5BSOCK9bstrerrorEv|0-0
72922|data|DCW 1; global symbol: __bss_start|1-0
72924|data|DCW 0; local  symbol: _Z19sm_free_pool_memoryPKciPc|0-0
72926|data|DCW 1; global symbol: __bss_start__|1-0
72928|data|DCW 2; setlocale@@GLIBC_2.4|2-0
72930|data|DCW 0; local  symbol: _ZN5alist7destroyEv|0-0
72932|data|DCW 0; local  symbol: rl_catch_signals|0-0
72934|data|DCW 0; local  symbol: stifle_history|0-0
72936|data|DCW 0; local  symbol: _Z9pm_strcatPPcPKc|0-0
72938|data|DCW 2; getenv@@GLIBC_2.4|2-0
72940|data|DCW 0; local  symbol: _ZN5BSOCK5fsendEPKcz|0-0
72942|data|DCW 2; time@@GLIBC_2.4|2-0
72944|data|DCW 2; optind@@GLIBC_2.4|2-0
72946|data|DCW 0; local  symbol: _ZN5BSOCK6signalEi|0-0
72948|data|DCW 0; local  symbol: _Z12is_bnet_stopP5BSOCK|0-0
72950|data|DCW 0; local  symbol: _Z10term_bsockP5BSOCK|0-0
72952|data|DCW 0; local  symbol: _Z10open_bpipePciPKc|0-0
72954|data|DCW 0; local  symbol: _ZN6CONFIG12parse_configEv|0-0
72956|data|DCW 0; local  symbol: _Z10res_to_stri|0-0
72958|data|DCW 0; local  symbol: _Z15init_stack_dumpv|0-0
72960|data|DCW 1; global symbol: _end|1-0
72962|data|DCW 0; local  symbol: _Z9pm_strcatR8POOL_MEMPKc|0-0
72964|data|DCW 0; local  symbol: _Z12actuallyfreePv|0-0
72966|data|DCW 0; local  symbol: _Z10store_nameP13s_lex_contextP8RES_ITEMii|0-0
72968|data|DCW 2; signal@@GLIBC_2.4|2-0
72970|data|DCW 0; local  symbol: rl_completion_matches|0-0
72972|data|DCW 0; local  symbol: _Z15new_tls_contextPKcS0_S0_S0_PFiPciPKvES3_S0_b|0-0
72974|data|DCW 1; global symbol: __end__|1-0
72976|data|DCW 0; local  symbol: _Z5e_msgPKciiiS0_z|0-0
72978|data|DCW 0; local  symbol: _Z10bvsnprintfPciPKcSt9__va_list|0-0
72980|data|DCW 1; global symbol: _fini|1-0
72982|data|DCW 0; local  symbol: _Z11is_a_numberPKc|0-0
72984|data|DCW 0; local  symbol: _Z11close_bpipeP5BPIPE|0-0
72986|data|DCW 0; local  symbol: debug_level|0-0
72988|data|DCW 2; fopen64@@GLIBC_2.4|2-0
72990|data|DCW 0; local  symbol: _ZN6CONFIG14free_resourcesEv|0-0
72992|data|DCW 1; global symbol: _bss_end__|1-0
72994|data|DCW 0; local  symbol: _Z10my_name_isiPPcPKc|0-0
72996|data|DCW 1; global symbol: _edata|1-0
72998|data|DCW 0; local  symbol: dbg_timestamp|0-0
73000|data|DCW 2; fileno@@GLIBC_2.4|2-0
73002|data|DCW 0; local  symbol: add_history|0-0
73004|data|DCW 2; regexec@@GLIBC_2.4|2-0
73006|data|DCW 0; local  symbol: _Z9sm_mallocPKcij|0-0
73008|data|DCW 2; bindtextdomain@@GLIBC_2.4|2-0
73010|data|DCW 2; gettext@@GLIBC_2.4|2-0
73012|data|DCW 0; local  symbol: _Z21sm_sizeof_pool_memoryPKciPc|0-0
73014|data|DCW 0; local  symbol: _ZN5BSOCK5closeEv|0-0
73016|data|DCW 0; local  symbol: _ZN5BSOCK4sendEv|0-0
73018|data|DCW 0; local  symbol: _Z17bnet_sig_to_asciiP5BSOCK|0-0
73020|data|DCW 2; strchr@@GLIBC_2.4|2-0
73022|data|DCW 0; local  symbol: working_directory|0-0
73024|data|DCW 0; local  symbol: _Z9pm_strcpyPPcPKc|0-0
73026|data|DCW 1; global symbol: __bss_end__|1-0
73028|data|DCW 2; sleep@@GLIBC_2.4|2-0
73030|data|DCW 2; strlen@@GLIBC_2.4|2-0
73032|data|DCW 2; strtol@@GLIBC_2.4|2-0
73034|data|DCW 0; local  symbol: _Z13stop_watchdogv|0-0
73036|data|DCW 0; local  symbol: _Z11b_UnlockResPKci|0-0
73038|data|DCW 2; strftime@@GLIBC_2.4|2-0
73040|data|DCW 0; local  symbol: _Z12store_pint32P13s_lex_contextP8RES_ITEMii|0-0
73042|data|DCW 2; strcpy@@GLIBC_2.4|2-0
73044|data|DCW 0; local  symbol: _Z9pm_strcpyR8POOL_MEMPKc|0-0
73046|data|DCW 1; global symbol: resources|1-0
73048|data|DCW 0; local  symbol: _Z14store_passwordP13s_lex_contextP8RES_ITEMii|0-0
73050|data|DCW 0; local  symbol: _Z9store_dirP13s_lex_contextP8RES_ITEMii|0-0
73052|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
73054|data|DCW 0; local  symbol: _ZN6berrno9bstrerrorEv|0-0
73056|data|DCW 0; local  symbol: _Z15bnet_tls_clientP11TLS_ContextP5BSOCKP5alist|0-0
73058|data|DCW 1; global symbol: _Z13dump_resourceiP3RESPFvPvPKczES1_|1-0
73060|data|DCW 0; local  symbol: _Z10parse_argsPcPS_PiS0_S0_i|0-0
73062|data|DCW 0; local  symbol: _Z7sm_freePKciPv|0-0
73064|data|DCW 2; localtime_r@@GLIBC_2.4|2-0
73066|data|DCW 0; local  symbol: rl_attempted_completion_function|0-0
73068|data|DCW 0; local  symbol: readline|0-0
73070|data|DCW 0; local  symbol: _Z10store_timeP13s_lex_contextP8RES_ITEMii|0-0
73072|data|DCW 2; getpass@@GLIBC_2.4|2-0
73074|data|DCW 0; local  symbol: _Z9bsnprintfPciPKcz|0-0
73076|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_11024, 0x10, 0x20>; "libpthread.so.0"|1-0-1-0-21-10-0-0-16-0-0-0-32-0-0-0
73092|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_11024, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-17-12-0-0-0-0-0-0
73108|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_11024, 0x10, 0>; "libc.so.6"|1-0-1-0-139-10-0-0-16-0-0-0-0-0-0-0
73124|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_11024, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-17-12-0-0-0-0-0-0
73140|data|Elf32_Rel <0x26354, 0x315>; R_ARM_GLOB_DAT __gmon_start__|84-99-2-0-21-3-0-0
73148|data|Elf32_Rel <0x267F8, 0x1814>; R_ARM_COPY stdin|248-103-2-0-20-24-0-0
73156|data|Elf32_Rel <0x267FC, 0x7F14>; R_ARM_COPY working_directory|252-103-2-0-20-127-0-0
73164|data|Elf32_Rel <0x26800, 0x5814>; R_ARM_COPY optind|0-104-2-0-20-88-0-0
73172|data|Elf32_Rel <0x26804, 0x9514>; R_ARM_COPY rl_attempted_completion_function|4-104-2-0-20-149-0-0
73180|data|Elf32_Rel <0x26808, 0x4114>; R_ARM_COPY rl_line_buffer|8-104-2-0-20-65-0-0
73188|data|Elf32_Rel <0x2680C, 0x7314>; R_ARM_COPY dbg_timestamp|12-104-2-0-20-115-0-0
73196|data|Elf32_Rel <0x26810, 0x3514>; R_ARM_COPY rl_completion_entry_function|16-104-2-0-20-53-0-0
73204|data|Elf32_Rel <0x26814, 0x1314>; R_ARM_COPY optarg|20-104-2-0-20-19-0-0
73212|data|Elf32_Rel <0x26818, 0x3A14>; R_ARM_COPY stderr|24-104-2-0-20-58-0-0
73220|data|Elf32_Rel <0x2681C, 0x2214>; R_ARM_COPY rl_completion_suppress_append|28-104-2-0-20-34-0-0
73228|data|Elf32_Rel <0x26820, 0x2D14>; R_ARM_COPY history_length|32-104-2-0-20-45-0-0
73236|data|Elf32_Rel <0x26824, 0xA14>; R_ARM_COPY rl_filename_completion_desired|36-104-2-0-20-10-0-0
73244|data|Elf32_Rel <0x26828, 0x2F14>; R_ARM_COPY stdout|40-104-2-0-20-47-0-0
73252|data|Elf32_Rel <0x2682C, 0x6D14>; R_ARM_COPY debug_level|44-104-2-0-20-109-0-0
73260|data|Elf32_Rel <0x26830, 0x5214>; R_ARM_COPY rl_catch_signals|48-104-2-0-20-82-0-0
73268|data|Elf32_Rel <0x2617C, 0x6416>; R_ARM_JUMP_SLOT signal|124-97-2-0-22-100-0-0
73276|data|Elf32_Rel <0x26180, 0xC16>; R_ARM_JUMP_SLOT _Z5d_msgPKciiS0_z|128-97-2-0-22-12-0-0
73284|data|Elf32_Rel <0x26184, 0x4516>; R_ARM_JUMP_SLOT _Z8b_mallocPKcij|132-97-2-0-22-69-0-0
73292|data|Elf32_Rel <0x26188, 0x1D16>; R_ARM_JUMP_SLOT read_history|136-97-2-0-22-29-0-0
73300|data|Elf32_Rel <0x2618C, 0x9416>; R_ARM_JUMP_SLOT localtime_r|140-97-2-0-22-148-0-0
73308|data|Elf32_Rel <0x26190, 0x8616>; R_ARM_JUMP_SLOT _Z11b_UnlockResPKci|144-97-2-0-22-134-0-0
73316|data|Elf32_Rel <0x26194, 0x5A16>; R_ARM_JUMP_SLOT _Z12is_bnet_stopP5BSOCK|148-97-2-0-22-90-0-0
73324|data|Elf32_Rel <0x26198, 0x1B16>; R_ARM_JUMP_SLOT _ZN5alist6appendEPv|152-97-2-0-22-27-0-0
73332|data|Elf32_Rel <0x2619C, 0x3B16>; R_ARM_JUMP_SLOT _Z10store_boolP13s_lex_contextP8RES_ITEMii|156-97-2-0-22-59-0-0
73340|data|Elf32_Rel <0x261A0, 0x6C16>; R_ARM_JUMP_SLOT _Z11close_bpipeP5BPIPE|160-97-2-0-22-108-0-0
73348|data|Elf32_Rel <0x261A4, 0x7C16>; R_ARM_JUMP_SLOT _ZN5BSOCK4sendEv|164-97-2-0-22-124-0-0
73356|data|Elf32_Rel <0x261A8, 0x6916>; R_ARM_JUMP_SLOT _Z10bvsnprintfPciPKcSt9__va_list|168-97-2-0-22-105-0-0
73364|data|Elf32_Rel <0x261AC, 0x2916>; R_ARM_JUMP_SLOT strcasecmp|172-97-2-0-22-41-0-0
73372|data|Elf32_Rel <0x261B0, 0x3D16>; R_ARM_JUMP_SLOT _ZN5BSOCK4recvEv|176-97-2-0-22-61-0-0
73380|data|Elf32_Rel <0x261B4, 0x8416>; R_ARM_JUMP_SLOT strtol|180-97-2-0-22-132-0-0
73388|data|Elf32_Rel <0x261B8, 0x3F16>; R_ARM_JUMP_SLOT _Z12init_signalsPFviE|184-97-2-0-22-63-0-0
73396|data|Elf32_Rel <0x261BC, 0x7116>; R_ARM_JUMP_SLOT _Z10my_name_isiPPcPKc|188-97-2-0-22-113-0-0
73404|data|Elf32_Rel <0x261C0, 0x4016>; R_ARM_JUMP_SLOT strncmp|192-97-2-0-22-64-0-0
73412|data|Elf32_Rel <0x261C4, 0x4416>; R_ARM_JUMP_SLOT regcomp|196-97-2-0-22-68-0-0
73420|data|Elf32_Rel <0x261C8, 0x9016>; R_ARM_JUMP_SLOT _Z15bnet_tls_clientP11TLS_ContextP5BSOCKP5alist|200-97-2-0-22-144-0-0
73428|data|Elf32_Rel <0x261CC, 0x916>; R_ARM_JUMP_SLOT _ZN6CONFIG4initEPKcPFvS1_iP13s_lex_contextS1_zEiPviiiP9RES_TABLEPP3RES|204-97-2-0-22-9-0-0
73436|data|Elf32_Rel <0x261D0, 0x9216>; R_ARM_JUMP_SLOT _Z10parse_argsPcPS_PiS0_S0_i|208-97-2-0-22-146-0-0
73444|data|Elf32_Rel <0x261D4, 0x4816>; R_ARM_JUMP_SLOT exit|212-97-2-0-22-72-0-0
73452|data|Elf32_Rel <0x261D8, 0x1F16>; R_ARM_JUMP_SLOT printf|216-97-2-0-22-31-0-0
73460|data|Elf32_Rel <0x261DC, 0x3C16>; R_ARM_JUMP_SLOT _Z16free_tls_contextP11TLS_Context|220-97-2-0-22-60-0-0
73468|data|Elf32_Rel <0x261E0, 0x5416>; R_ARM_JUMP_SLOT _Z9pm_strcatPPcPKc|224-97-2-0-22-84-0-0
73476|data|Elf32_Rel <0x261E4, 0x2A16>; R_ARM_JUMP_SLOT regfree|228-97-2-0-22-42-0-0
73484|data|Elf32_Rel <0x261E8, 0x5F16>; R_ARM_JUMP_SLOT _Z15init_stack_dumpv|232-97-2-0-22-95-0-0
73492|data|Elf32_Rel <0x261EC, 0x2616>; R_ARM_JUMP_SLOT _Z18cram_md5_challengeP5BSOCKPKcii|236-97-2-0-22-38-0-0
73500|data|Elf32_Rel <0x261F0, 0x7716>; R_ARM_JUMP_SLOT _Z9sm_mallocPKcij|240-97-2-0-22-119-0-0
73508|data|Elf32_Rel <0x261F4, 0x4716>; R_ARM_JUMP_SLOT _Z8init_msgP3JCRP4MSGS|244-97-2-0-22-71-0-0
73516|data|Elf32_Rel <0x261F8, 0x5916>; R_ARM_JUMP_SLOT _ZN5BSOCK6signalEi|248-97-2-0-22-89-0-0
73524|data|Elf32_Rel <0x261FC, 0x7616>; R_ARM_JUMP_SLOT regexec|252-97-2-0-22-118-0-0
73532|data|Elf32_Rel <0x26200, 0x3616>; R_ARM_JUMP_SLOT _Z10init_bsockP3JCRiPKcS2_iP8sockaddr|0-98-2-0-22-54-0-0
73540|data|Elf32_Rel <0x26204, 0x6516>; R_ARM_JUMP_SLOT rl_completion_matches|4-98-2-0-22-101-0-0
73548|data|Elf32_Rel <0x26208, 0x6F16>; R_ARM_JUMP_SLOT _ZN6CONFIG14free_resourcesEv|8-98-2-0-22-111-0-0
73556|data|Elf32_Rel <0x2620C, 0x2416>; R_ARM_JUMP_SLOT textdomain|12-98-2-0-22-36-0-0
73564|data|Elf32_Rel <0x26210, 0x9816>; R_ARM_JUMP_SLOT getpass|16-98-2-0-22-152-0-0
73572|data|Elf32_Rel <0x26214, 0x8716>; R_ARM_JUMP_SLOT strftime|20-98-2-0-22-135-0-0
73580|data|Elf32_Rel <0x26218, 0x2116>; R_ARM_JUMP_SLOT memset|24-98-2-0-22-33-0-0
73588|data|Elf32_Rel <0x2621C, 0x2B16>; R_ARM_JUMP_SLOT _Z14cleanup_cryptov|28-98-2-0-22-43-0-0
73596|data|Elf32_Rel <0x26220, 0x3416>; R_ARM_JUMP_SLOT _Z9store_strP13s_lex_contextP8RES_ITEMii|32-98-2-0-22-52-0-0
73604|data|Elf32_Rel <0x26224, 0x1516>; R_ARM_JUMP_SLOT using_history|36-98-2-0-22-21-0-0
73612|data|Elf32_Rel <0x26228, 0x9316>; R_ARM_JUMP_SLOT _Z7sm_freePKciPv|40-98-2-0-22-147-0-0
73620|data|Elf32_Rel <0x2622C, 0x8816>; R_ARM_JUMP_SLOT _Z12store_pint32P13s_lex_contextP8RES_ITEMii|44-98-2-0-22-136-0-0
73628|data|Elf32_Rel <0x26230, 0x4916>; R_ARM_JUMP_SLOT _Z8bstrncpyPcPKci|48-98-2-0-22-73-0-0
73636|data|Elf32_Rel <0x26234, 0x816>; R_ARM_JUMP_SLOT abort|52-98-2-0-22-8-0-0
73644|data|Elf32_Rel <0x26238, 0x8A16>; R_ARM_JUMP_SLOT _Z9pm_strcpyR8POOL_MEMPKc|56-98-2-0-22-138-0-0
73652|data|Elf32_Rel <0x2623C, 0x3E16>; R_ARM_JUMP_SLOT _Z16stop_bsock_timerP8btimer_t|60-98-2-0-22-62-0-0
73660|data|Elf32_Rel <0x26240, 0x2C16>; R_ARM_JUMP_SLOT _Z18sm_get_pool_memoryPKcii|64-98-2-0-22-44-0-0
73668|data|Elf32_Rel <0x26244, 0x8916>; R_ARM_JUMP_SLOT strcpy|68-98-2-0-22-137-0-0
73676|data|Elf32_Rel <0x26248, 0x9616>; R_ARM_JUMP_SLOT readline|72-98-2-0-22-150-0-0
73684|data|Elf32_Rel <0x2624C, 0x3716>; R_ARM_JUMP_SLOT _Z9b_LockResPKci|76-98-2-0-22-55-0-0
73692|data|Elf32_Rel <0x26250, 0x3916>; R_ARM_JUMP_SLOT _Z25sm_check_pool_memory_sizePKciPci|80-98-2-0-22-57-0-0
73700|data|Elf32_Rel <0x26254, 0x4E16>; R_ARM_JUMP_SLOT _Z19sm_free_pool_memoryPKciPc|84-98-2-0-22-78-0-0
73708|data|Elf32_Rel <0x26258, 0x1C16>; R_ARM_JUMP_SLOT getopt|88-98-2-0-22-28-0-0
73716|data|Elf32_Rel <0x2625C, 0x8016>; R_ARM_JUMP_SLOT _Z9pm_strcpyPPcPKc|92-98-2-0-22-128-0-0
73724|data|Elf32_Rel <0x26260, 0x3316>; R_ARM_JUMP_SLOT _ZN5BSOCK8free_tlsEv|96-98-2-0-22-51-0-0
73732|data|Elf32_Rel <0x26264, 0x5D16>; R_ARM_JUMP_SLOT _ZN6CONFIG12parse_configEv|100-98-2-0-22-93-0-0
73740|data|Elf32_Rel <0x26268, 0x2E16>; R_ARM_JUMP_SLOT _Z16cram_md5_respondP5BSOCKPKcPiS3_|104-98-2-0-22-46-0-0
73748|data|Elf32_Rel <0x2626C, 0x9916>; R_ARM_JUMP_SLOT _Z9bsnprintfPciPKcz|108-98-2-0-22-153-0-0
73756|data|Elf32_Rel <0x26270, 0x8C16>; R_ARM_JUMP_SLOT _Z14store_passwordP13s_lex_contextP8RES_ITEMii|112-98-2-0-22-140-0-0
73764|data|Elf32_Rel <0x26274, 0x7416>; R_ARM_JUMP_SLOT fileno|116-98-2-0-22-116-0-0
73772|data|Elf32_Rel <0x26278, 0x1416>; R_ARM_JUMP_SLOT _Z19strip_trailing_junkPc|120-98-2-0-22-20-0-0
73780|data|Elf32_Rel <0x2627C, 0x8F16>; R_ARM_JUMP_SLOT _ZN6berrno9bstrerrorEv|124-98-2-0-22-143-0-0
73788|data|Elf32_Rel <0x26280, 0x7D16>; R_ARM_JUMP_SLOT _Z17bnet_sig_to_asciiP5BSOCK|128-98-2-0-22-125-0-0
73796|data|Elf32_Rel <0x26284, 0x7B16>; R_ARM_JUMP_SLOT _ZN5BSOCK5closeEv|132-98-2-0-22-123-0-0
73804|data|Elf32_Rel <0x26288, 0x2516>; R_ARM_JUMP_SLOT isatty|136-98-2-0-22-37-0-0
73812|data|Elf32_Rel <0x2628C, 0x4C16>; R_ARM_JUMP_SLOT _ZN5BSOCK9bstrerrorEv|140-98-2-0-22-76-0-0
73820|data|Elf32_Rel <0x26290, 0x616>; R_ARM_JUMP_SLOT _Z12bnet_connectP3JCRixxPKcPcS3_ii|144-98-2-0-22-6-0-0
73828|data|Elf32_Rel <0x26294, 0x2716>; R_ARM_JUMP_SLOT strncasecmp|148-98-2-0-22-39-0-0
73836|data|Elf32_Rel <0x26298, 0x1116>; R_ARM_JUMP_SLOT _Z6bfgetsPciP8_IO_FILE|152-98-2-0-22-17-0-0
73844|data|Elf32_Rel <0x2629C, 0x7516>; R_ARM_JUMP_SLOT add_history|156-98-2-0-22-117-0-0
73852|data|Elf32_Rel <0x262A0, 0x8216>; R_ARM_JUMP_SLOT sleep|160-98-2-0-22-130-0-0
73860|data|Elf32_Rel <0x262A4, 0x7816>; R_ARM_JUMP_SLOT bindtextdomain|164-98-2-0-22-120-0-0
73868|data|Elf32_Rel <0x262A8, 0x6616>; R_ARM_JUMP_SLOT _Z15new_tls_contextPKcS0_S0_S0_PFiPciPKvES3_S0_b|168-98-2-0-22-102-0-0
73876|data|Elf32_Rel <0x262AC, 0x1E16>; R_ARM_JUMP_SLOT _Z14start_watchdogv|172-98-2-0-22-30-0-0
73884|data|Elf32_Rel <0x262B0, 0x5E16>; R_ARM_JUMP_SLOT _Z10res_to_stri|176-98-2-0-22-94-0-0
73892|data|Elf32_Rel <0x262B4, 0x7A16>; R_ARM_JUMP_SLOT _Z21sm_sizeof_pool_memoryPKciPc|180-98-2-0-22-122-0-0
73900|data|Elf32_Rel <0x262B8, 0x5016>; R_ARM_JUMP_SLOT setlocale|184-98-2-0-22-80-0-0
73908|data|Elf32_Rel <0x262BC, 0x5B16>; R_ARM_JUMP_SLOT _Z10term_bsockP5BSOCK|188-98-2-0-22-91-0-0
73916|data|Elf32_Rel <0x262C0, 0x6116>; R_ARM_JUMP_SLOT _Z9pm_strcatR8POOL_MEMPKc|192-98-2-0-22-97-0-0
73924|data|Elf32_Rel <0x262C4, 0x716>; R_ARM_JUMP_SLOT memcpy|196-98-2-0-22-7-0-0
73932|data|Elf32_Rel <0x262C8, 0x5616>; R_ARM_JUMP_SLOT _ZN5BSOCK5fsendEPKcz|200-98-2-0-22-86-0-0
73940|data|Elf32_Rel <0x262CC, 0x4216>; R_ARM_JUMP_SLOT _Z14actuallymallocj|204-98-2-0-22-66-0-0
73948|data|Elf32_Rel <0x262D0, 0x2816>; R_ARM_JUMP_SLOT _Z11init_cryptov|208-98-2-0-22-40-0-0
73956|data|Elf32_Rel <0x262D4, 0x8316>; R_ARM_JUMP_SLOT strlen|212-98-2-0-22-131-0-0
73964|data|Elf32_Rel <0x262D8, 0x3116>; R_ARM_JUMP_SLOT _Z7bstrcmpPKcS0_|216-98-2-0-22-49-0-0
73972|data|Elf32_Rel <0x262DC, 0x8D16>; R_ARM_JUMP_SLOT _Z9store_dirP13s_lex_contextP8RES_ITEMii|220-98-2-0-22-141-0-0
73980|data|Elf32_Rel <0x262E0, 0x1616>; R_ARM_JUMP_SLOT fprintf|224-98-2-0-22-22-0-0
73988|data|Elf32_Rel <0x262E4, 0xD16>; R_ARM_JUMP_SLOT fclose|228-98-2-0-22-13-0-0
73996|data|Elf32_Rel <0x262E8, 0x6216>; R_ARM_JUMP_SLOT _Z12actuallyfreePv|232-98-2-0-22-98-0-0
74004|data|Elf32_Rel <0x262EC, 0x3816>; R_ARM_JUMP_SLOT _Z17new_config_parserv|236-98-2-0-22-56-0-0
74012|data|Elf32_Rel <0x262F0, 0x1716>; R_ARM_JUMP_SLOT history_truncate_file|240-98-2-0-22-23-0-0
74020|data|Elf32_Rel <0x262F4, 0x1216>; R_ARM_JUMP_SLOT _Z11bash_spacesPc|244-98-2-0-22-18-0-0
74028|data|Elf32_Rel <0x262F8, 0x9716>; R_ARM_JUMP_SLOT _Z10store_timeP13s_lex_contextP8RES_ITEMii|248-98-2-0-22-151-0-0
74036|data|Elf32_Rel <0x262FC, 0xB16>; R_ARM_JUMP_SLOT strcmp|252-98-2-0-22-11-0-0
74044|data|Elf32_Rel <0x26300, 0x5716>; R_ARM_JUMP_SLOT time|0-99-2-0-22-87-0-0
74052|data|Elf32_Rel <0x26304, 0x7916>; R_ARM_JUMP_SLOT gettext|4-99-2-0-22-121-0-0
74060|data|Elf32_Rel <0x26308, 0x4316>; R_ARM_JUMP_SLOT __errno_location|8-99-2-0-22-67-0-0
74068|data|Elf32_Rel <0x2630C, 0x2316>; R_ARM_JUMP_SLOT _Z17start_bsock_timerP5BSOCKj|12-99-2-0-22-35-0-0
74076|data|Elf32_Rel <0x26310, 0x5C16>; R_ARM_JUMP_SLOT _Z10open_bpipePciPKc|16-99-2-0-22-92-0-0
74084|data|Elf32_Rel <0x26314, 0x4B16>; R_ARM_JUMP_SLOT fflush|20-99-2-0-22-75-0-0
74092|data|Elf32_Rel <0x26318, 0x6E16>; R_ARM_JUMP_SLOT fopen64|24-99-2-0-22-110-0-0
74100|data|Elf32_Rel <0x2631C, 0x5116>; R_ARM_JUMP_SLOT _ZN5alist7destroyEv|28-99-2-0-22-81-0-0
74108|data|Elf32_Rel <0x26320, 0x8516>; R_ARM_JUMP_SLOT _Z13stop_watchdogv|32-99-2-0-22-133-0-0
74116|data|Elf32_Rel <0x26324, 0x6816>; R_ARM_JUMP_SLOT _Z5e_msgPKciiiS0_z|36-99-2-0-22-104-0-0
74124|data|Elf32_Rel <0x26328, 0x1916>; R_ARM_JUMP_SLOT fputs|40-99-2-0-22-25-0-0
74132|data|Elf32_Rel <0x2632C, 0x5516>; R_ARM_JUMP_SLOT getenv|44-99-2-0-22-85-0-0
74140|data|Elf32_Rel <0x26330, 0x8E16>; R_ARM_JUMP_SLOT __libc_start_main|48-99-2-0-22-142-0-0
74148|data|Elf32_Rel <0x26334, 0x1A16>; R_ARM_JUMP_SLOT write_history|52-99-2-0-22-26-0-0
74156|data|Elf32_Rel <0x26338, 0x316>; R_ARM_JUMP_SLOT __gmon_start__|56-99-2-0-22-3-0-0
74164|data|Elf32_Rel <0x2633C, 0x6316>; R_ARM_JUMP_SLOT _Z10store_nameP13s_lex_contextP8RES_ITEMii|60-99-2-0-22-99-0-0
74172|data|Elf32_Rel <0x26340, 0x6B16>; R_ARM_JUMP_SLOT _Z11is_a_numberPKc|64-99-2-0-22-107-0-0
74180|data|Elf32_Rel <0x26344, 0x516>; R_ARM_JUMP_SLOT _Z10GetNextResiP3RES|68-99-2-0-22-5-0-0
74188|data|Elf32_Rel <0x26348, 0x7E16>; R_ARM_JUMP_SLOT strchr|72-99-2-0-22-126-0-0
74196|data|Elf32_Rel <0x2634C, 0x2016>; R_ARM_JUMP_SLOT append_history|76-99-2-0-22-32-0-0
74204|data|Elf32_Rel <0x26350, 0x5316>; R_ARM_JUMP_SLOT stifle_history|80-99-2-0-22-83-0-0
74212|code|PUSH            {R3,LR}; _init|8-64-45-233
74216|code|BL              sub_13104|197-3-0-235
74220|code|POP             {R3,PC}|8-128-189-232
74224|code|PUSH            {LR}|4-224-45-229
74228|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x12200)|4-224-159-229
74232|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
74236|code|LDR             PC, [LR,#8]!|8-240-190-229
74240|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12200|112-63-1-0
74244|code|ADR             R12, 0x1220C|0-198-143-226
74248|code|ADD             R12, R12, #0x13000|19-202-140-226
74252|code|LDR             PC, [R12,#(signal_ptr - 0x2520C)]!; __imp_signal|112-255-188-229
74256|code|ADR             R12, 0x12218|0-198-143-226
74260|code|ADD             R12, R12, #0x13000|19-202-140-226
74264|code|LDR             PC, [R12,#(_Z5d_msgPKciiS0_z_ptr - 0x25218)]!; d_msg(char const*,int,int,char const*,...)|104-255-188-229
74268|code|ADR             R12, 0x12224|0-198-143-226
74272|code|ADD             R12, R12, #0x13000|19-202-140-226
74276|code|LDR             PC, [R12,#(_Z8b_mallocPKcij_ptr - 0x25224)]!; b_malloc(char const*,int,uint)|96-255-188-229
74280|code|ADR             R12, 0x12230|0-198-143-226
74284|code|ADD             R12, R12, #0x13000|19-202-140-226
74288|code|LDR             PC, [R12,#(read_history_ptr - 0x25230)]!; __imp_read_history|88-255-188-229
74292|code|ADR             R12, 0x1223C|0-198-143-226
74296|code|ADD             R12, R12, #0x13000|19-202-140-226
74300|code|LDR             PC, [R12,#(localtime_r_ptr - 0x2523C)]!; __imp_localtime_r|80-255-188-229
74304|code|ADR             R12, 0x12248|0-198-143-226
74308|code|ADD             R12, R12, #0x13000|19-202-140-226
74312|code|LDR             PC, [R12,#(_Z11b_UnlockResPKci_ptr - 0x25248)]!; b_UnlockRes(char const*,int)|72-255-188-229
74316|code|ADR             R12, 0x12254|0-198-143-226
74320|code|ADD             R12, R12, #0x13000|19-202-140-226
74324|code|LDR             PC, [R12,#(_Z12is_bnet_stopP5BSOCK_ptr - 0x25254)]!; is_bnet_stop(BSOCK *)|64-255-188-229
74328|code|ADR             R12, 0x12260|0-198-143-226
74332|code|ADD             R12, R12, #0x13000|19-202-140-226
74336|code|LDR             PC, [R12,#(_ZN5alist6appendEPv_ptr - 0x25260)]!; alist::append(void *)|56-255-188-229
74340|code|ADR             R12, 0x1226C|0-198-143-226
74344|code|ADD             R12, R12, #0x13000|19-202-140-226
74348|code|LDR             PC, [R12,#(_Z10store_boolP13s_lex_contextP8RES_ITEMii_ptr - 0x2526C)]!; store_bool(s_lex_context *,RES_ITEM *,int,int)|48-255-188-229
74352|code|ADR             R12, 0x12278|0-198-143-226
74356|code|ADD             R12, R12, #0x13000|19-202-140-226
74360|code|LDR             PC, [R12,#(_Z11close_bpipeP5BPIPE_ptr - 0x25278)]!; close_bpipe(BPIPE *)|40-255-188-229
74364|code|ADR             R12, 0x12284|0-198-143-226
74368|code|ADD             R12, R12, #0x13000|19-202-140-226
74372|code|LDR             PC, [R12,#(_ZN5BSOCK4sendEv_ptr - 0x25284)]!; BSOCK::send(void)|32-255-188-229
74376|code|ADR             R12, 0x12290|0-198-143-226
74380|code|ADD             R12, R12, #0x13000|19-202-140-226
74384|code|LDR             PC, [R12,#(_Z10bvsnprintfPciPKcSt9__va_list_ptr - 0x25290)]!; bvsnprintf(char *,int,char const*,std::__va_list)|24-255-188-229
74388|code|ADR             R12, 0x1229C|0-198-143-226
74392|code|ADD             R12, R12, #0x13000|19-202-140-226
74396|code|LDR             PC, [R12,#(strcasecmp_ptr - 0x2529C)]!; __imp_strcasecmp|16-255-188-229
74400|code|ADR             R12, 0x122A8|0-198-143-226
74404|code|ADD             R12, R12, #0x13000|19-202-140-226
74408|code|LDR             PC, [R12,#(_ZN5BSOCK4recvEv_ptr - 0x252A8)]!; BSOCK::recv(void)|8-255-188-229
74412|code|ADR             R12, 0x122B4|0-198-143-226
74416|code|ADD             R12, R12, #0x13000|19-202-140-226
74420|code|LDR             PC, [R12,#(strtol_ptr - 0x252B4)]!; __imp_strtol|0-255-188-229
74424|code|ADR             R12, 0x122C0|0-198-143-226
74428|code|ADD             R12, R12, #0x13000|19-202-140-226
74432|code|LDR             PC, [R12,#(_Z12init_signalsPFviE_ptr - 0x252C0)]!; init_signals(void (*)(int))|248-254-188-229
74436|code|ADR             R12, 0x122CC|0-198-143-226
74440|code|ADD             R12, R12, #0x13000|19-202-140-226
74444|code|LDR             PC, [R12,#(_Z10my_name_isiPPcPKc_ptr - 0x252CC)]!; my_name_is(int,char **,char const*)|240-254-188-229
74448|code|ADR             R12, 0x122D8|0-198-143-226
74452|code|ADD             R12, R12, #0x13000|19-202-140-226
74456|code|LDR             PC, [R12,#(strncmp_ptr - 0x252D8)]!; __imp_strncmp|232-254-188-229
74460|code|ADR             R12, 0x122E4|0-198-143-226
74464|code|ADD             R12, R12, #0x13000|19-202-140-226
74468|code|LDR             PC, [R12,#(regcomp_ptr - 0x252E4)]!; __imp_regcomp|224-254-188-229
74472|code|ADR             R12, 0x122F0|0-198-143-226
74476|code|ADD             R12, R12, #0x13000|19-202-140-226
74480|code|LDR             PC, [R12,#(_Z15bnet_tls_clientP11TLS_ContextP5BSOCKP5alist_ptr - 0x252F0)]!; bnet_tls_client(TLS_Context *,BSOCK *,alist *)|216-254-188-229
74484|code|ADR             R12, 0x122FC|0-198-143-226
74488|code|ADD             R12, R12, #0x13000|19-202-140-226
74492|code|LDR             PC, [R12,#(_ZN6CONFIG4initEPKcPFvS1_iP13s_lex_contextS1_zEiPviiiP9RES_TABLEPP3RES_ptr - 0x252FC)]!; CONFIG::init(char const*,void (*)(char const*,int,s_lex_context *,char const*,...),int,void *,int,int,int,RES_TABLE *,RES **)|208-254-188-229
74496|code|ADR             R12, 0x12308|0-198-143-226
74500|code|ADD             R12, R12, #0x13000|19-202-140-226
74504|code|LDR             PC, [R12,#(_Z10parse_argsPcPS_PiS0_S0_i_ptr - 0x25308)]!; parse_args(char *,char **,int *,char **,char **,int)|200-254-188-229
74508|code|ADR             R12, 0x12314|0-198-143-226
74512|code|ADD             R12, R12, #0x13000|19-202-140-226
74516|code|LDR             PC, [R12,#(exit_ptr - 0x25314)]!; __imp_exit|192-254-188-229
74520|code|BX              PC|120-71
74522|data|ALIGN 4|192-70
74524|code|ADR             R12, 0x12324|0-198-143-226
74528|code|ADD             R12, R12, #0x13000|19-202-140-226
74532|code|LDR             PC, [R12,#(printf_ptr - 0x25324)]!; __imp_printf|180-254-188-229
74536|code|ADR             R12, 0x12330|0-198-143-226
74540|code|ADD             R12, R12, #0x13000|19-202-140-226
74544|code|LDR             PC, [R12,#(_Z16free_tls_contextP11TLS_Context_ptr - 0x25330)]!; free_tls_context(TLS_Context *)|172-254-188-229
74548|code|ADR             R12, 0x1233C|0-198-143-226
74552|code|ADD             R12, R12, #0x13000|19-202-140-226
74556|code|LDR             PC, [R12,#(_Z9pm_strcatPPcPKc_ptr - 0x2533C)]!; pm_strcat(char **,char const*)|164-254-188-229
74560|code|ADR             R12, 0x12348|0-198-143-226
74564|code|ADD             R12, R12, #0x13000|19-202-140-226
74568|code|LDR             PC, [R12,#(regfree_ptr - 0x25348)]!; __imp_regfree|156-254-188-229
74572|code|ADR             R12, 0x12354|0-198-143-226
74576|code|ADD             R12, R12, #0x13000|19-202-140-226
74580|code|LDR             PC, [R12,#(_Z15init_stack_dumpv_ptr - 0x25354)]!; init_stack_dump(void)|148-254-188-229
74584|code|ADR             R12, 0x12360|0-198-143-226
74588|code|ADD             R12, R12, #0x13000|19-202-140-226
74592|code|LDR             PC, [R12,#(_Z18cram_md5_challengeP5BSOCKPKcii_ptr - 0x25360)]!; cram_md5_challenge(BSOCK *,char const*,int,int)|140-254-188-229
74596|code|ADR             R12, 0x1236C|0-198-143-226
74600|code|ADD             R12, R12, #0x13000|19-202-140-226
74604|code|LDR             PC, [R12,#(_Z9sm_mallocPKcij_ptr - 0x2536C)]!; sm_malloc(char const*,int,uint)|132-254-188-229
74608|code|ADR             R12, 0x12378|0-198-143-226
74612|code|ADD             R12, R12, #0x13000|19-202-140-226
74616|code|LDR             PC, [R12,#(_Z8init_msgP3JCRP4MSGS_ptr - 0x25378)]!; init_msg(JCR *,MSGS *)|124-254-188-229
74620|code|ADR             R12, 0x12384|0-198-143-226
74624|code|ADD             R12, R12, #0x13000|19-202-140-226
74628|code|LDR             PC, [R12,#(_ZN5BSOCK6signalEi_ptr - 0x25384)]!; BSOCK::signal(int)|116-254-188-229
74632|code|ADR             R12, 0x12390|0-198-143-226
74636|code|ADD             R12, R12, #0x13000|19-202-140-226
74640|code|LDR             PC, [R12,#(regexec_ptr - 0x25390)]!; __imp_regexec|108-254-188-229
74644|code|ADR             R12, 0x1239C|0-198-143-226
74648|code|ADD             R12, R12, #0x13000|19-202-140-226
74652|code|LDR             PC, [R12,#(_Z10init_bsockP3JCRiPKcS2_iP8sockaddr_ptr - 0x2539C)]!; init_bsock(JCR *,int,char const*,char const*,int,sockaddr *)|100-254-188-229
74656|code|ADR             R12, 0x123A8|0-198-143-226
74660|code|ADD             R12, R12, #0x13000|19-202-140-226
74664|code|LDR             PC, [R12,#(rl_completion_matches_ptr - 0x253A8)]!; __imp_rl_completion_matches|92-254-188-229
74668|code|ADR             R12, 0x123B4|0-198-143-226
74672|code|ADD             R12, R12, #0x13000|19-202-140-226
74676|code|LDR             PC, [R12,#(_ZN6CONFIG14free_resourcesEv_ptr - 0x253B4)]!; CONFIG::free_resources(void)|84-254-188-229
74680|code|ADR             R12, 0x123C0|0-198-143-226
74684|code|ADD             R12, R12, #0x13000|19-202-140-226
74688|code|LDR             PC, [R12,#(textdomain_ptr - 0x253C0)]!; __imp_textdomain|76-254-188-229
74692|code|ADR             R12, 0x123CC|0-198-143-226
74696|code|ADD             R12, R12, #0x13000|19-202-140-226
74700|code|LDR             PC, [R12,#(getpass_ptr - 0x253CC)]!; __imp_getpass|68-254-188-229
74704|code|ADR             R12, 0x123D8|0-198-143-226
74708|code|ADD             R12, R12, #0x13000|19-202-140-226
74712|code|LDR             PC, [R12,#(strftime_ptr - 0x253D8)]!; __imp_strftime|60-254-188-229
74716|code|ADR             R12, 0x123E4|0-198-143-226
74720|code|ADD             R12, R12, #0x13000|19-202-140-226
74724|code|LDR             PC, [R12,#(memset_ptr - 0x253E4)]!; __imp_memset|52-254-188-229
74728|code|ADR             R12, 0x123F0|0-198-143-226
74732|code|ADD             R12, R12, #0x13000|19-202-140-226
74736|code|LDR             PC, [R12,#(_Z14cleanup_cryptov_ptr - 0x253F0)]!; cleanup_crypto(void)|44-254-188-229
74740|code|ADR             R12, 0x123FC|0-198-143-226
74744|code|ADD             R12, R12, #0x13000|19-202-140-226
74748|code|LDR             PC, [R12,#(_Z9store_strP13s_lex_contextP8RES_ITEMii_ptr - 0x253FC)]!; store_str(s_lex_context *,RES_ITEM *,int,int)|36-254-188-229
74752|code|ADR             R12, 0x12408|0-198-143-226
74756|code|ADD             R12, R12, #0x13000|19-202-140-226
74760|code|LDR             PC, [R12,#(using_history_ptr - 0x25408)]!; __imp_using_history|28-254-188-229
74764|code|ADR             R12, 0x12414|0-198-143-226
74768|code|ADD             R12, R12, #0x13000|19-202-140-226
74772|code|LDR             PC, [R12,#(_Z7sm_freePKciPv_ptr - 0x25414)]!; sm_free(char const*,int,void *)|20-254-188-229
74776|code|ADR             R12, 0x12420|0-198-143-226
74780|code|ADD             R12, R12, #0x13000|19-202-140-226
74784|code|LDR             PC, [R12,#(_Z12store_pint32P13s_lex_contextP8RES_ITEMii_ptr - 0x25420)]!; store_pint32(s_lex_context *,RES_ITEM *,int,int)|12-254-188-229
74788|code|ADR             R12, 0x1242C|0-198-143-226
74792|code|ADD             R12, R12, #0x13000|19-202-140-226
74796|code|LDR             PC, [R12,#(_Z8bstrncpyPcPKci_ptr - 0x2542C)]!; bstrncpy(char *,char const*,int)|4-254-188-229
74800|code|ADR             R12, 0x12438|0-198-143-226
74804|code|ADD             R12, R12, #0x13000|19-202-140-226
74808|code|LDR             PC, [R12,#(abort_ptr - 0x25438)]!; __imp_abort|252-253-188-229
74812|code|ADR             R12, 0x12444|0-198-143-226
74816|code|ADD             R12, R12, #0x13000|19-202-140-226
74820|code|LDR             PC, [R12,#(_Z9pm_strcpyR8POOL_MEMPKc_ptr - 0x25444)]!; pm_strcpy(POOL_MEM &,char const*)|244-253-188-229
74824|code|BX              PC; stop_bsock_timer(btimer_t *)|120-71
74826|data|ALIGN 4|192-70
74828|code|ADR             R12, 0x12454|0-198-143-226
74832|code|ADD             R12, R12, #0x13000|19-202-140-226
74836|code|LDR             PC, [R12,#(_Z16stop_bsock_timerP8btimer_t_ptr - 0x25454)]!; stop_bsock_timer(btimer_t *)|232-253-188-229
74840|code|ADR             R12, 0x12460|0-198-143-226
74844|code|ADD             R12, R12, #0x13000|19-202-140-226
74848|code|LDR             PC, [R12,#(_Z18sm_get_pool_memoryPKcii_ptr - 0x25460)]!; sm_get_pool_memory(char const*,int,int)|224-253-188-229
74852|code|ADR             R12, 0x1246C|0-198-143-226
74856|code|ADD             R12, R12, #0x13000|19-202-140-226
74860|code|LDR             PC, [R12,#(strcpy_ptr - 0x2546C)]!; __imp_strcpy|216-253-188-229
74864|code|ADR             R12, 0x12478|0-198-143-226
74868|code|ADD             R12, R12, #0x13000|19-202-140-226
74872|code|LDR             PC, [R12,#(readline_ptr - 0x25478)]!; __imp_readline|208-253-188-229
74876|code|ADR             R12, 0x12484|0-198-143-226
74880|code|ADD             R12, R12, #0x13000|19-202-140-226
74884|code|LDR             PC, [R12,#(_Z9b_LockResPKci_ptr - 0x25484)]!; b_LockRes(char const*,int)|200-253-188-229
74888|code|ADR             R12, 0x12490|0-198-143-226
74892|code|ADD             R12, R12, #0x13000|19-202-140-226
74896|code|LDR             PC, [R12,#(_Z25sm_check_pool_memory_sizePKciPci_ptr - 0x25490)]!; sm_check_pool_memory_size(char const*,int,char *,int)|192-253-188-229
74900|code|ADR             R12, 0x1249C|0-198-143-226
74904|code|ADD             R12, R12, #0x13000|19-202-140-226
74908|code|LDR             PC, [R12,#(_Z19sm_free_pool_memoryPKciPc_ptr - 0x2549C)]!; sm_free_pool_memory(char const*,int,char *)|184-253-188-229
74924|code|ADR             R12, 0x124B4|0-198-143-226
74928|code|ADD             R12, R12, #0x13000|19-202-140-226
74932|code|LDR             PC, [R12,#(_Z9pm_strcpyPPcPKc_ptr - 0x254B4)]!; pm_strcpy(char **,char const*)|168-253-188-229
74936|code|ADR             R12, 0x124C0|0-198-143-226
74940|code|ADD             R12, R12, #0x13000|19-202-140-226
74944|code|LDR             PC, [R12,#(_ZN5BSOCK8free_tlsEv_ptr - 0x254C0)]!; BSOCK::free_tls(void)|160-253-188-229
74948|code|BX              PC; CONFIG::parse_config(void)|120-71
74950|data|ALIGN 4|192-70
74952|code|ADR             R12, 0x124D0|0-198-143-226
74956|code|ADD             R12, R12, #0x13000|19-202-140-226
74960|code|LDR             PC, [R12,#(_ZN6CONFIG12parse_configEv_ptr - 0x254D0)]!; CONFIG::parse_config(void)|148-253-188-229
74964|code|ADR             R12, 0x124DC|0-198-143-226
74968|code|ADD             R12, R12, #0x13000|19-202-140-226
74972|code|LDR             PC, [R12,#(_Z16cram_md5_respondP5BSOCKPKcPiS3__ptr - 0x254DC)]!; cram_md5_respond(BSOCK *,char const*,int *,int *)|140-253-188-229
74976|code|ADR             R12, 0x124E8|0-198-143-226
74980|code|ADD             R12, R12, #0x13000|19-202-140-226
74984|code|LDR             PC, [R12,#(_Z9bsnprintfPciPKcz_ptr - 0x254E8)]!; bsnprintf(char *,int,char const*,...)|132-253-188-229
74988|code|ADR             R12, 0x124F4|0-198-143-226
74992|code|ADD             R12, R12, #0x13000|19-202-140-226
74996|code|LDR             PC, [R12,#(_Z14store_passwordP13s_lex_contextP8RES_ITEMii_ptr - 0x254F4)]!; store_password(s_lex_context *,RES_ITEM *,int,int)|124-253-188-229
75000|code|ADR             R12, 0x12500|0-198-143-226
75004|code|ADD             R12, R12, #0x13000|19-202-140-226
75008|code|LDR             PC, [R12,#(fileno_ptr - 0x25500)]!; __imp_fileno|116-253-188-229
75012|code|ADR             R12, 0x1250C|0-198-143-226
75016|code|ADD             R12, R12, #0x13000|19-202-140-226
75020|code|LDR             PC, [R12,#(_Z19strip_trailing_junkPc_ptr - 0x2550C)]!; strip_trailing_junk(char *)|108-253-188-229
75024|code|ADR             R12, 0x12518|0-198-143-226
75028|code|ADD             R12, R12, #0x13000|19-202-140-226
75032|code|LDR             PC, [R12,#(_ZN6berrno9bstrerrorEv_ptr - 0x25518)]!; berrno::bstrerror(void)|100-253-188-229
75036|code|ADR             R12, 0x12524|0-198-143-226
75040|code|ADD             R12, R12, #0x13000|19-202-140-226
75044|code|LDR             PC, [R12,#(_Z17bnet_sig_to_asciiP5BSOCK_ptr - 0x25524)]!; bnet_sig_to_ascii(BSOCK *)|92-253-188-229
75048|code|ADR             R12, 0x12530|0-198-143-226
75052|code|ADD             R12, R12, #0x13000|19-202-140-226
75056|code|LDR             PC, [R12,#(_ZN5BSOCK5closeEv_ptr - 0x25530)]!; BSOCK::close(void)|84-253-188-229
75060|code|ADR             R12, 0x1253C|0-198-143-226
75064|code|ADD             R12, R12, #0x13000|19-202-140-226
75068|code|LDR             PC, [R12,#(isatty_ptr - 0x2553C)]!; __imp_isatty|76-253-188-229
75072|code|ADR             R12, 0x12548|0-198-143-226
75076|code|ADD             R12, R12, #0x13000|19-202-140-226
75080|code|LDR             PC, [R12,#(_ZN5BSOCK9bstrerrorEv_ptr - 0x25548)]!; BSOCK::bstrerror(void)|68-253-188-229
75084|code|ADR             R12, 0x12554|0-198-143-226
75088|code|ADD             R12, R12, #0x13000|19-202-140-226
75092|code|LDR             PC, [R12,#(_Z12bnet_connectP3JCRixxPKcPcS3_ii_ptr - 0x25554)]!; bnet_connect(JCR *,int,long long,long long,char const*,char *,char *,int,int)|60-253-188-229
75096|code|ADR             R12, 0x12560|0-198-143-226
75100|code|ADD             R12, R12, #0x13000|19-202-140-226
75104|code|LDR             PC, [R12,#(strncasecmp_ptr - 0x25560)]!; __imp_strncasecmp|52-253-188-229
75108|code|ADR             R12, 0x1256C|0-198-143-226
75112|code|ADD             R12, R12, #0x13000|19-202-140-226
75116|code|LDR             PC, [R12,#(_Z6bfgetsPciP8_IO_FILE_ptr - 0x2556C)]!; bfgets(char *,int,_IO_FILE *)|44-253-188-229
75120|code|ADR             R12, 0x12578|0-198-143-226
75124|code|ADD             R12, R12, #0x13000|19-202-140-226
75128|code|LDR             PC, [R12,#(add_history_ptr - 0x25578)]!; __imp_add_history|36-253-188-229
75132|code|ADR             R12, 0x12584|0-198-143-226
75136|code|ADD             R12, R12, #0x13000|19-202-140-226
75140|code|LDR             PC, [R12,#(sleep_ptr - 0x25584)]!; __imp_sleep|28-253-188-229
75144|code|ADR             R12, 0x12590|0-198-143-226
75148|code|ADD             R12, R12, #0x13000|19-202-140-226
75152|code|LDR             PC, [R12,#(bindtextdomain_ptr - 0x25590)]!; __imp_bindtextdomain|20-253-188-229
75156|code|ADR             R12, 0x1259C|0-198-143-226
75160|code|ADD             R12, R12, #0x13000|19-202-140-226
75164|code|LDR             PC, [R12,#(_Z15new_tls_contextPKcS0_S0_S0_PFiPciPKvES3_S0_b_ptr - 0x2559C)]!; new_tls_context(char const*,char const*,char const*,char const*,int (*)(char *,int,void const*),void const*,char const*,bool)|12-253-188-229
75168|code|ADR             R12, 0x125A8|0-198-143-226
75172|code|ADD             R12, R12, #0x13000|19-202-140-226
75176|code|LDR             PC, [R12,#(_Z14start_watchdogv_ptr - 0x255A8)]!; start_watchdog(void)|4-253-188-229
75180|code|ADR             R12, 0x125B4|0-198-143-226
75184|code|ADD             R12, R12, #0x13000|19-202-140-226
75188|code|LDR             PC, [R12,#(_Z10res_to_stri_ptr - 0x255B4)]!; res_to_str(int)|252-252-188-229
75192|code|ADR             R12, 0x125C0|0-198-143-226
75196|code|ADD             R12, R12, #0x13000|19-202-140-226
75200|code|LDR             PC, [R12,#(_Z21sm_sizeof_pool_memoryPKciPc_ptr - 0x255C0)]!; sm_sizeof_pool_memory(char const*,int,char *)|244-252-188-229
75204|code|ADR             R12, 0x125CC|0-198-143-226
75208|code|ADD             R12, R12, #0x13000|19-202-140-226
75212|code|LDR             PC, [R12,#(setlocale_ptr - 0x255CC)]!; __imp_setlocale|236-252-188-229
75216|code|ADR             R12, 0x125D8|0-198-143-226
75220|code|ADD             R12, R12, #0x13000|19-202-140-226
75224|code|LDR             PC, [R12,#(_Z10term_bsockP5BSOCK_ptr - 0x255D8)]!; term_bsock(BSOCK *)|228-252-188-229
75228|code|ADR             R12, 0x125E4|0-198-143-226
75232|code|ADD             R12, R12, #0x13000|19-202-140-226
75236|code|LDR             PC, [R12,#(_Z9pm_strcatR8POOL_MEMPKc_ptr - 0x255E4)]!; pm_strcat(POOL_MEM &,char const*)|220-252-188-229
75240|code|ADR             R12, 0x125F0|0-198-143-226
75244|code|ADD             R12, R12, #0x13000|19-202-140-226
75248|code|LDR             PC, [R12,#(memcpy_ptr - 0x255F0)]!; __imp_memcpy|212-252-188-229
75252|code|ADR             R12, 0x125FC|0-198-143-226
75256|code|ADD             R12, R12, #0x13000|19-202-140-226
75260|code|LDR             PC, [R12,#(_ZN5BSOCK5fsendEPKcz_ptr - 0x255FC)]!; BSOCK::fsend(char const*,...)|204-252-188-229
75264|code|ADR             R12, 0x12608|0-198-143-226
75268|code|ADD             R12, R12, #0x13000|19-202-140-226
75272|code|LDR             PC, [R12,#(_Z14actuallymallocj_ptr - 0x25608)]!; actuallymalloc(uint)|196-252-188-229
75276|code|ADR             R12, 0x12614|0-198-143-226
75280|code|ADD             R12, R12, #0x13000|19-202-140-226
75284|code|LDR             PC, [R12,#(_Z11init_cryptov_ptr - 0x25614)]!; init_crypto(void)|188-252-188-229
75288|code|BX              PC|120-71
75290|data|ALIGN 4|192-70
75292|code|ADR             R12, 0x12624|0-198-143-226
75296|code|ADD             R12, R12, #0x13000|19-202-140-226
75300|code|LDR             PC, [R12,#(strlen_ptr - 0x25624)]!; __imp_strlen|176-252-188-229
75304|code|ADR             R12, 0x12630|0-198-143-226
75308|code|ADD             R12, R12, #0x13000|19-202-140-226
75312|code|LDR             PC, [R12,#(_Z7bstrcmpPKcS0__ptr - 0x25630)]!; bstrcmp(char const*,char const*)|168-252-188-229
75316|code|ADR             R12, 0x1263C|0-198-143-226
75320|code|ADD             R12, R12, #0x13000|19-202-140-226
75324|code|LDR             PC, [R12,#(_Z9store_dirP13s_lex_contextP8RES_ITEMii_ptr - 0x2563C)]!; store_dir(s_lex_context *,RES_ITEM *,int,int)|160-252-188-229
75328|code|ADR             R12, 0x12648|0-198-143-226
75332|code|ADD             R12, R12, #0x13000|19-202-140-226
75336|code|LDR             PC, [R12,#(fprintf_ptr - 0x25648)]!; __imp_fprintf|152-252-188-229
75340|code|ADR             R12, 0x12654|0-198-143-226
75344|code|ADD             R12, R12, #0x13000|19-202-140-226
75348|code|LDR             PC, [R12,#(fclose_ptr - 0x25654)]!; __imp_fclose|144-252-188-229
75352|code|ADR             R12, 0x12660|0-198-143-226
75356|code|ADD             R12, R12, #0x13000|19-202-140-226
75360|code|LDR             PC, [R12,#(_Z12actuallyfreePv_ptr - 0x25660)]!; actuallyfree(void *)|136-252-188-229
75364|code|ADR             R12, 0x1266C|0-198-143-226
75368|code|ADD             R12, R12, #0x13000|19-202-140-226
75372|code|LDR             PC, [R12,#(_Z17new_config_parserv_ptr - 0x2566C)]!; new_config_parser(void)|128-252-188-229
75376|code|ADR             R12, 0x12678|0-198-143-226
75380|code|ADD             R12, R12, #0x13000|19-202-140-226
75384|code|LDR             PC, [R12,#(history_truncate_file_ptr - 0x25678)]!; __imp_history_truncate_file|120-252-188-229
75388|code|ADR             R12, 0x12684|0-198-143-226
75392|code|ADD             R12, R12, #0x13000|19-202-140-226
75396|code|LDR             PC, [R12,#(_Z11bash_spacesPc_ptr - 0x25684)]!; bash_spaces(char *)|112-252-188-229
75400|code|ADR             R12, 0x12690|0-198-143-226
75404|code|ADD             R12, R12, #0x13000|19-202-140-226
75408|code|LDR             PC, [R12,#(_Z10store_timeP13s_lex_contextP8RES_ITEMii_ptr - 0x25690)]!; store_time(s_lex_context *,RES_ITEM *,int,int)|104-252-188-229
75412|code|ADR             R12, 0x1269C|0-198-143-226
75416|code|ADD             R12, R12, #0x13000|19-202-140-226
75420|code|LDR             PC, [R12,#(strcmp_ptr - 0x2569C)]!; __imp_strcmp|96-252-188-229
75424|code|ADR             R12, 0x126A8|0-198-143-226
75428|code|ADD             R12, R12, #0x13000|19-202-140-226
75432|code|LDR             PC, [R12,#(time_ptr - 0x256A8)]!; __imp_time|88-252-188-229
75436|code|ADR             R12, 0x126B4|0-198-143-226
75440|code|ADD             R12, R12, #0x13000|19-202-140-226
75444|code|LDR             PC, [R12,#(gettext_ptr - 0x256B4)]!; __imp_gettext|80-252-188-229
75448|code|ADR             R12, 0x126C0|0-198-143-226
75452|code|ADD             R12, R12, #0x13000|19-202-140-226
75456|code|LDR             PC, [R12,#(__errno_location_ptr - 0x256C0)]!; __imp___errno_location|72-252-188-229
75460|code|ADR             R12, 0x126CC|0-198-143-226
75464|code|ADD             R12, R12, #0x13000|19-202-140-226
75468|code|LDR             PC, [R12,#(_Z17start_bsock_timerP5BSOCKj_ptr - 0x256CC)]!; start_bsock_timer(BSOCK *,uint)|64-252-188-229
75472|code|ADR             R12, 0x126D8|0-198-143-226
75476|code|ADD             R12, R12, #0x13000|19-202-140-226
75480|code|LDR             PC, [R12,#(_Z10open_bpipePciPKc_ptr - 0x256D8)]!; open_bpipe(char *,int,char const*)|56-252-188-229
75484|code|BX              PC|120-71
75486|data|ALIGN 4|192-70
75488|code|ADR             R12, 0x126E8|0-198-143-226
75492|code|ADD             R12, R12, #0x13000|19-202-140-226
75496|code|LDR             PC, [R12,#(fflush_ptr - 0x256E8)]!; __imp_fflush|44-252-188-229
75500|code|ADR             R12, 0x126F4|0-198-143-226
75504|code|ADD             R12, R12, #0x13000|19-202-140-226
75508|code|LDR             PC, [R12,#(fopen64_ptr - 0x256F4)]!; __imp_fopen64|36-252-188-229
75512|code|ADR             R12, 0x12700|0-198-143-226
75516|code|ADD             R12, R12, #0x13000|19-202-140-226
75520|code|LDR             PC, [R12,#(_ZN5alist7destroyEv_ptr - 0x25700)]!; alist::destroy(void)|28-252-188-229
75524|code|ADR             R12, 0x1270C|0-198-143-226
75528|code|ADD             R12, R12, #0x13000|19-202-140-226
75532|code|LDR             PC, [R12,#(_Z13stop_watchdogv_ptr - 0x2570C)]!; stop_watchdog(void)|20-252-188-229
75536|code|ADR             R12, 0x12718|0-198-143-226
75540|code|ADD             R12, R12, #0x13000|19-202-140-226
75544|code|LDR             PC, [R12,#(_Z5e_msgPKciiiS0_z_ptr - 0x25718)]!; e_msg(char const*,int,int,int,char const*,...)|12-252-188-229
75548|code|ADR             R12, 0x12724|0-198-143-226
75552|code|ADD             R12, R12, #0x13000|19-202-140-226
75556|code|LDR             PC, [R12,#(fputs_ptr - 0x25724)]!; __imp_fputs|4-252-188-229
75560|code|ADR             R12, 0x12730|0-198-143-226
75564|code|ADD             R12, R12, #0x13000|19-202-140-226
75568|code|LDR             PC, [R12,#(getenv_ptr - 0x25730)]!; __imp_getenv|252-251-188-229
75572|code|ADR             R12, 0x1273C|0-198-143-226
75576|code|ADD             R12, R12, #0x13000|19-202-140-226
75580|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x2573C)]!; __imp___libc_start_main|244-251-188-229
75584|code|ADR             R12, 0x12748|0-198-143-226
75588|code|ADD             R12, R12, #0x13000|19-202-140-226
75592|code|LDR             PC, [R12,#(write_history_ptr - 0x25748)]!; __imp_write_history|236-251-188-229
75596|code|ADR             R12, 0x12754|0-198-143-226
75600|code|ADD             R12, R12, #0x13000|19-202-140-226
75604|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x25754)]!; __imp___gmon_start__|228-251-188-229
75608|code|ADR             R12, 0x12760|0-198-143-226
75612|code|ADD             R12, R12, #0x13000|19-202-140-226
75616|code|LDR             PC, [R12,#(_Z10store_nameP13s_lex_contextP8RES_ITEMii_ptr - 0x25760)]!; store_name(s_lex_context *,RES_ITEM *,int,int)|220-251-188-229
75620|code|ADR             R12, 0x1276C|0-198-143-226
75624|code|ADD             R12, R12, #0x13000|19-202-140-226
75628|code|LDR             PC, [R12,#(_Z11is_a_numberPKc_ptr - 0x2576C)]!; is_a_number(char const*)|212-251-188-229
75632|code|ADR             R12, 0x12778|0-198-143-226
75636|code|ADD             R12, R12, #0x13000|19-202-140-226
75640|code|LDR             PC, [R12,#(_Z10GetNextResiP3RES_ptr - 0x25778)]!; GetNextRes(int,RES *)|204-251-188-229
75644|code|ADR             R12, 0x12784|0-198-143-226
75648|code|ADD             R12, R12, #0x13000|19-202-140-226
75652|code|LDR             PC, [R12,#(strchr_ptr - 0x25784)]!; __imp_strchr|196-251-188-229
75656|code|ADR             R12, 0x12790|0-198-143-226
75660|code|ADD             R12, R12, #0x13000|19-202-140-226
75664|code|LDR             PC, [R12,#(append_history_ptr - 0x25790)]!; __imp_append_history|188-251-188-229
75668|code|ADR             R12, 0x1279C|0-198-143-226
75672|code|ADD             R12, R12, #0x13000|19-202-140-226
75676|code|LDR             PC, [R12,#(stifle_history_ptr - 0x2579C)]!; __imp_stifle_history|180-251-188-229
75680|code|SVCMI           0xF0E92D|45-233-240-79
75684|data|DCD 0xF2AD460F, 0xF2456D9C, 0x230001E0, 0x46062201, 0x101F2C0|15-70-173-242-156-109-69-242-224-1-0-35-1-34-6-70-192-242-1-1-6-32-29-70-37-147-146-70-38-147-70-246-56-4-39-147-192-242-2-4-9-147-171-70-40-146-169-70-141-248-168-32-255-247-244-238-68-246-4-96-68-246-12-97-192-242-1-1-192-242-1-0-255-247-204-238-68-246-4-96-192-242-1-0-168-70-255-247-222-237-255-247-166-237-68-246-32-98-192-242-1-2-48-70-57-70-255-247-90-237-9-155-24-70-25-70-255-247-170-237-70-242-252-115-68-246-124-16-192-242-2-3-68-246-44-110-192-242-1-0-79-244-127-113-2-34-192-242-1-14-195-248-0-224-255-247-12-238-32-97-68-246-52-98-48-70-192-242-1-2-57-70-255-247-38-238-67-28-0-240-158-128-68-56-49-40-0-242-142-128-223-232-0-240-93-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-140-58-36-140-140-140-140-140-140-140-33-140-30-140-140-140-140-27-25-128-1-37-211-231-79-240-1-11-208-231-132-248-56-161-205-231-1-37-169-70-202-231-70-246-20-3-192-242-2-3-24-104-3-120-116-43-100-208-0-33-10-34-255-247-244-236-70-246-44-3-192-242-2-3-0-40-204-191-24-96-195-248-0-160-180-231-212-248-52-33-58-177-68-246-124-16-64-242-14-65-192-242-1-0-255-247-142-237-70-246-20-3-192-242-2-3-9-147-24-104-255-247-142-238-79-244-130-97-66-28-68-246-124-16-192-242-1-0-255-247-134-236-9-155-25-104-255-247-166-237-196-248-52-1-145-231-184-241-0-15-8-208-68-246-124-16-66-70-192-242-1-0-64-242-2-65-255-247-106-237-70-246-20-8-192-242-2-8-216-248-0-0-255-247-106-238-64-242-4-65-66-28-68-246-124-16-192-242-1-0-255-247-98-236-216-248-0-16-255-247-130-237-128-70-110-231-70-246-20-3-0-33-192-242-2-3-10-34-24-104-255-247-154-236-196-248-184-0-98-231-0-240-145-252-1-32-255-247-194-236-70-246-12-3-192-242-2-3-131-248-0-160-86-231-70-246-0-3-192-242-2-3-31-104-187-241-0-15-0-240-159-130-1-33-3-32-255-247-42-236-67-242-181-17-192-242-1-1-20-32-255-247-36-236-67-242-197-17-192-242-1-1-18-32-255-247-28-236-67-242-217-17-192-242-1-1-21-32-255-247-22-236-67-242-213-17-192-242-1-1-22-32-255-247-14-236-190-66-200-209-212-248-52-49-70-246-56-6-192-242-2-6-0-43-0-240-218-130-255-247-50-238-212-248-52-17-11-34-224-96-1-240-21-254-255-247-254-237-0-40-64-240-132-130-68-246-124-16-64-242-5-81-192-242-1-0-79-240-1-10-255-247-40-237-0-35-31-70-211-70-196-248-60-49-57-70-64-242-234-48-255-247-152-238-7-70-144-179-151-248-114-32-212-248-60-49-1-51-196-248-60-49-18-179-1-35-135-248-113-176-126-111-0-46-234-209-0-43-232-208-187-111-0-43-229-209-68-246-132-96-178-70-192-242-1-0-255-247-26-238-51-70-64-242-27-81-3-34-0-144-68-246-124-16-126-104-192-242-1-0-1-150-212-248-52-97-2-150-255-247-60-238-205-231-151-248-113-48-0-43-64-240-166-130-151-248-112-48-215-231-212-248-60-49-70-246-56-6-192-242-2-6-0-43-0-240-28-130-0-38-79-240-1-11-49-70-64-242-233-48-255-247-82-238-6-70-104-179-150-248-114-48-19-179-1-35-134-248-113-176-119-111-0-47-239-209-0-43-237-208-179-111-0-43-234-209-68-246-112-112-186-70-192-242-1-0-255-247-218-237-59-70-64-242-55-81-3-34-0-144-68-246-124-16-119-104-192-242-1-0-1-151-212-248-52-113-2-151-255-247-252-237-210-231-150-248-113-48-0-43-64-240-99-130-150-248-112-48-215-231-68-246-124-16-64-242-60-81-192-242-1-0-255-247-130-235-186-241-0-15-0-240-80-129-185-241-0-15-64-240-37-129-0-45-64-240-71-130-41-70-79-244-26-114-12-168-70-246-56-5-255-247-62-236-192-242-2-5-255-247-28-237-64-70-5-245-160-113-5-245-162-114-1-240-118-248-64-185-1-36-37-168-255-247-188-237-32-70-13-242-156-109-189-232-240-143-68-246-248-112-192-242-1-0-255-247-138-237-213-248-64-49-153-110-90-110-0-240-38-254-213-248-68-49-75-177-147-248-113-32-0-42-64-240-106-129-147-248-114-32-0-42-64-240-101-129-212-248-64-49-147-248-113-32-0-42-64-240-37-129-147-248-114-32-0-42-64-240-32-129-212-248-64-97-70-246-56-3-192-242-2-3-214-233-34-1-80-234-1-2-4-209-211-248-68-49-11-177-211-233-34-1-69-242-228-3-205-233-0-1-192-242-1-3-2-147-183-110-0-37-4-149-40-70-0-35-5-33-3-151-15-34-118-110-6-149-5-150-255-247-152-236-70-246-56-3-192-242-2-3-5-70-196-248-152-0-0-40-0-240-146-129-12-168-211-248-64-17-211-248-68-33-25-149-1-240-29-253-0-40-0-240-135-129-70-246-44-3-192-242-2-3-27-104-39-43-0-243-159-129-69-242-28-16-192-242-1-0-255-247-36-237-0-240-94-253-69-242-68-16-93-33-1-34-192-242-1-0-255-247-240-235-0-34-3-70-69-242-88-16-11-147-192-242-1-0-26-112-255-247-78-237-5-70-0-40-0-240-102-129-212-248-152-0-41-70-70-246-56-6-8-48-192-242-2-6-255-247-2-236-212-248-152-0-69-242-96-17-192-242-1-1-8-48-255-247-62-235-212-248-152-48-69-242-112-17-192-242-1-1-152-104-255-247-16-237-7-70-48-177-214-248-152-16-0-240-82-254-56-70-255-247-184-236-41-70-11-168-255-247-172-235-69-242-116-17-192-242-1-1-11-168-255-247-116-236-11-157-255-247-132-235-67-242-225-22-192-242-1-6-70-246-56-7-40-70-70-246-16-5-255-247-140-234-70-246-4-2-70-246-36-3-192-242-2-2-192-242-2-3-192-242-2-5-100-32-67-242-101-49-192-242-1-1-46-96-17-96-0-37-29-96-255-247-46-237-70-242-248-115-212-248-152-16-192-242-2-3-192-242-2-7-24-104-0-240-22-254-212-248-152-0-56-177-111-240-3-1-255-247-16-235-215-248-152-0-255-247-226-235-11-156-100-33-32-70-255-247-128-236-0-40-0-240-231-128-32-70-255-247-226-236-0-32-4-70-0-240-180-250-69-242-68-16-11-154-192-242-1-0-95-33-255-247-128-235-242-230-68-246-124-16-64-242-97-65-192-242-1-0-255-247-108-235-0-35-196-248-64-49-6-224-68-246-208-64-89-104-192-242-1-0-0-240-26-253-64-242-234-48-212-248-64-17-255-247-212-236-3-70-196-248-64-1-0-40-237-209-68-246-124-16-64-242-101-65-192-242-1-0-255-247-48-234-179-230-68-246-208-112-192-242-1-0-255-247-94-236-212-248-52-97-83-70-64-242-89-65-11-34-141-232-65-0-68-246-124-16-192-242-1-0-255-247-130-236-185-241-0-15-63-244-156-174-191-231-166-173-69-242-124-2-91-104-192-242-1-2-40-70-79-244-128-97-255-247-90-235-212-248-64-97-67-242-133-35-1-149-6-241-116-0-192-242-1-3-0-34-0-147-2-146-1-37-3-149-70-246-56-7-15-200-255-247-162-235-192-242-2-7-212-248-64-49-198-248-144-0-211-248-144-96-0-46-127-244-183-174-69-242-172-0-44-70-192-242-1-0-255-247-28-236-215-248-64-49-89-104-0-240-184-252-48-70-0-240-51-250-121-230-166-173-69-242-24-2-91-104-192-242-1-2-40-70-79-244-128-97-255-247-34-235-212-248-68-97-67-242-133-35-1-149-6-241-116-0-192-242-1-3-0-34-0-147-2-146-1-37-3-149-70-246-56-7-15-200-255-247-104-235-192-242-2-7-212-248-68-49-198-248-144-0-211-248-144-96-0-46-127-244-114-174-69-242-72-0-44-70-192-242-1-0-197-231-67-242-237-32-192-242-1-0-255-247-228-233-89-229-68-246-20-112-186-70-192-242-1-0-255-247-214-235-214-248-52-97-64-242-34-81-3-34-59-70-141-232-65-0-68-246-124-16-192-242-1-0-255-247-250-235-205-229-68-246-84-96-192-242-1-0-255-247-192-235-64-242-85-65-11-34-0-35-0-144-68-246-124-16-192-242-1-0-255-247-232-235-105-229-70-246-32-3-33-70-192-242-2-3-24-104-255-247-26-236-18-231-0-32-1-36-0-240-199-249-13-230-70-242-248-115-212-248-152-16-192-242-2-3-70-246-56-5-24-104-192-242-2-5-0-240-1-253-212-248-152-0-0-40-63-244-252-174-111-240-3-1-255-247-248-233-213-248-152-0-255-247-202-234-242-230-68-246-124-16-69-242-244-3-192-242-1-0-192-242
77732|data|DCD 0xF44F0301, 0x22286197, 0xE930F7FF, 0xF644E652, 0xF240107C|1-3-79-244-151-97-40-34-255-247-48-233-82-230-68-246-124-16-64-242-78-65-14-34-192-242-1-0-255-247-44-233-68-246-68-99-192-242-1-3-7-70-198-248-52-1-7-203-27-136-56-96-121-96-187-129-186-96-14-229-0-32-0-240-131-249-0-32-255-247-144-233-1-35-117-229-1-35-50-229
77812|data|DCB 0x46|70
77813|data|DCB 0xF6, 0x28, 2|246-40-2
77816|data|DCD 0x338F646, 0x202F2C0, 0x20F4F245, 0xF2C0B510, 0x68120302|70-246-56-3-192-242-2-2-69-242-244-32-16-181-192-242-2-3-18-104-192-242-1-0-70-242-96-52-192-242-2-4-195-248-164-32-255-247-70-235-160-96-69-242-4-48-192-242-1-0-255-247-64-235-96-97-69-242-20-48-192-242-1-0-255-247-56-235-32-98-69-242-28-48-192-242-1-0-255-247-50-235-224-98-69-242-56-48-192-242-1-0-255-247-42-235-160-99-69-242-80-48-192-242-1-0-255-247-36-235-96-100-69-242-100-48-192-242-1-0-255-247-28-235-32-101-69-242-124-48-192-242-1-0-255-247-22-235-224-101-69-242-144-48-192-242-1-0-255-247-14-235-160-102-69-242-172-48-192-242-1-0-255-247-8-235-96-103-69-242-184-48-192-242-1-0-255-247-0-235-196-248-128-0-69-242-232-48-192-242-1-0-255-247-248-234-196-248-140-0-69-242-248-48-192-242-1-0-255-247-240-234-196-248-152-0-16-189-0-191
78036|code|MOV.W           R11, #0|79-240-0-11
78040|code|MOV.W           LR, #0|79-240-0-14
78044|code|POP             {R1}; argc|2-188
78046|code|MOV             R2, SP; ubp_av|106-70
78048|code|PUSH            {R2}; stack_end|4-180
78050|code|PUSH            {R0}; rtld_fini|1-180
78052|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
78056|code|PUSH.W          {R12}; fini|77-248-4-205
78060|code|LDR             R0, =(loc_127A0+1); main|3-72
78062|code|LDR             R3, =(sub_1489C+1); init|4-75
78064|code|BLX             __libc_start_main|255-247-32-235
78068|code|BLX             abort|255-247-156-233
78072|data|DCD nullsub_1+1|221-72-1-0
78076|data|DCD loc_127A0+1|161-39-1-0
78080|data|DCD sub_1489C+1|157-72-1-0
78084|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13114)|20-48-159-229
78088|code|LDR             R2, =(__gmon_start___ptr_0 - 0x26170)|20-32-159-229
78092|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
78096|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
78100|code|CMP             R2, #0|0-0-82-227
78104|code|BXEQ            LR|30-255-47-1
78108|code|B               __gmon_start__|138-253-255-234
78112|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13114|92-48-1-0
78116|data|DCD __gmon_start___ptr_0 - 0x26170|228-1-0-0
78120|code|LDR             R3, =0x267FB|7-75
78122|code|MOV             R0, #0x267F8|70-242-248-112-192-242-2-0
78130|code|SUBS            R3, R3, R0|27-26
78132|code|CMP             R3, #6|6-43
78134|code|BLS             locret_13144|5-217
78136|code|MOV             R3, #0|64-242-0-3-192-242-0-3
78144|code|CBZ             R3, locret_13144|3-177
78146|code|BX              R3|24-71
78148|code|BX              LR|112-71
78150|data|ALIGN 4|0-191
78152|data|DCD 0x267FB|251-103-2-0
78156|code|MOVW            R3, #0x67F8|70-242-248-115
78160|code|MOVW            R0, #0x67F8|70-242-248-112
78164|code|MOVT.W          R3, #2|192-242-2-3
78168|code|MOVT.W          R0, #2|192-242-2-0
78172|code|SUBS            R1, R3, R0|25-26
78174|code|ASRS            R1, R1, #2|137-16
78176|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
78180|code|ASRS            R1, R1, #1|73-16
78182|code|BEQ             locret_13174|5-208
78184|code|MOV             R3, #0|64-242-0-3-192-242-0-3
78192|code|CBZ             R3, locret_13174|3-177
78194|code|BX              R3|24-71
78196|code|BX              LR|112-71
78198|data|ALIGN 4|0-191
78200|code|PUSH            {R4,LR}|16-181
78202|code|MOV             R4, #0x26834|70-246-52-4-192-242-2-4
78210|code|LDRB            R3, [R4]|35-120
78212|code|CBNZ            R3, locret_1318E|27-185
78214|code|BL              sub_13128|255-247-207-255
78218|code|MOVS            R3, #1|1-35
78220|code|STRB            R3, [R4]|35-112
78222|code|POP             {R4,PC}|16-189
78224|code|MOVW            R0, #0x600C|70-242-12-0
78228|code|PUSH            {R3,LR}|8-181
78230|code|MOVT.W          R0, #2|192-242-2-0
78234|code|LDR             R3, [R0]|3-104
78236|code|CBNZ            R3, loc_131A4|19-185
78238|code|POP.W           {R3,LR}|189-232-8-64
78242|code|B               sub_1314C|211-231
78244|code|MOV             R3, #0|64-242-0-3-192-242-0-3
78252|code|CMP             R3, #0|0-43
78254|code|BEQ             loc_1319E|246-208
78256|code|BLX             R3|152-71
78258|code|B               loc_1319E|244-231
78260|code|MOVW            R3, #0x6838|70-246-56-3
78264|code|MOVS            R2, #1|1-34
78266|code|MOVT.W          R3, #2|192-242-2-3
78270|code|STRB            R2, [R3]|26-112
78272|code|BX              LR|112-71
78274|data|ALIGN 4|0-191
78276|code|MOVW            R3, #0x6838|70-246-56-3
78280|code|MOVS            R2, #0|0-34
78282|code|MOVT.W          R3, #2|192-242-2-3
78286|code|STRB            R2, [R3]|26-112
78288|code|BX              LR|112-71
78290|data|ALIGN 4|0-191
78292|code|BX              LR|112-71
78294|data|ALIGN 4|0-191
78296|code|BX              LR|112-71
78298|data|ALIGN 4|0-191
78300|code|MOVS            R0, #1|1-32
78302|code|BX              LR|112-71
78304|code|MOVS            R0, #0|0-32
78306|code|BX              LR|112-71
78308|code|MOVS            R0, #0|0-32
78310|code|BX              LR|112-71
78312|code|CMP             R2, #0|0-42
78314|code|BLE             locret_13282|74-221
78316|code|PUSH.W          {R4-R9,LR}|45-233-240-67
78320|code|SUB             SP, SP, #0xAC|171-176
78322|code|MOV             R6, R2|22-70
78324|code|MOV             R4, R3|28-70
78326|code|MOVS            R2, #0x14; nmatch|20-34
78328|code|MOVS            R3, #0|0-35
78330|code|STR             R3, [SP,#0xC8+eflags]; eflags|0-147
78332|code|ADD             R3, SP, #0xC8+var_C0; pmatch|2-171
78334|code|MOV             R8, R1|136-70
78336|code|MOV             R5, R0|5-70
78338|code|BLX             regexec|255-247-194-232
78342|code|MOV             R9, R0|129-70
78344|code|CBZ             R0, loc_13210|16-177
78346|code|ADD             SP, SP, #0xAC|43-176
78348|code|POP.W           {R4-R9,PC}|189-232-240-131
78352|code|LDR             R3, [SP,#0xC8+var_B4]|5-155
78354|code|MOVW            R0, #0x497C|68-246-124-16
78358|code|LDR             R7, [SP,#0xC8+var_B8]|4-159
78360|code|MOV.W           R1, #0x1DE; int|79-244-239-113
78364|code|LDR             R2, [R4]; char *|34-104
78366|code|MOVT.W          R0, #1; char *|192-242-1-0
78370|code|SUBS            R7, R3, R7|223-27
78372|code|ADDS            R3, R7, #1; int|123-28
78374|code|BLX             _Z25sm_check_pool_memory_sizePKciPci; sm_check_pool_memory_size(char const*,int,char *,int)|255-247-48-233
78378|code|LDR             R1, [SP,#0xC8+var_B8]|4-153
78380|code|MOV             R2, R7; n|58-70
78382|code|ADD             R1, R8; src|65-68
78384|code|STR             R0, [R4]|32-96
78386|code|BLX             memcpy|255-247-218-233
78390|code|LDR             R2, [R4]|34-104
78392|code|MOV             R3, #0x26838|70-246-56-3-192-242-2-3
78400|code|STRB.W          R9, [R2,R7]|2-248-7-144
78404|code|LDR             R0, [R4]; s|32-104
78406|code|LDR             R7, [R3,#(dword_2683C - 0x26838)]|95-104
78408|code|BLX             strlen|255-247-232-233
78412|code|MOV.W           R1, #0x1E2; int|79-244-241-113
78416|code|ADDS            R2, R0, #1; unsigned int|66-28
78418|code|MOV             R0, #aConsoleC; char *|68-246-124-16-192-242-1-0
78426|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|254-247-224-239
78430|code|LDR             R1, [R4]; src|33-104
78432|code|BLX             strcpy|255-247-0-233
78436|code|MOV             R1, R0; void *|1-70
78438|code|MOV             R0, R7; this|56-70
78440|code|BLX             _ZN5alist6appendEPv; alist::append(void *)|254-247-246-239
78444|code|LDR             R2, [SP,#0xC8+var_B4]|5-154
78446|code|MOV             R0, R5|40-70
78448|code|MOV             R3, R4|35-70
78450|code|ADD.W           R1, R8, R2|8-235-2-1
78454|code|SUBS            R2, R6, R2|178-26
78456|code|BL              sub_131E8|255-247-182-255
78460|code|ADD             SP, SP, #0xAC|43-176
78462|code|POP.W           {R4-R9,PC}|189-232-240-131
78466|code|BX              LR|112-71
78468|code|PUSH            {R3-R5,LR}|56-181
78470|code|MOV             R4, R0|4-70
78472|code|MOV             R0, R2|16-70
78474|code|MOV             R5, R1|13-70
78476|code|BLX             getpass|255-247-154-232
78480|code|MOV             R2, R5|42-70
78482|code|MOV             R1, R0|1-70
78484|code|MOV             R0, R4|32-70
78486|code|BLX             _Z8bstrncpyPcPKci; bstrncpy(char *,char const*,int)|255-247-198-232
78490|code|MOV             R0, R4|32-70
78492|code|POP.W           {R3-R5,LR}|189-232-56-64
78496|code|B.W             j_strlen|255-247-186-185
78500|code|MOVW            R3, #0x6818|70-246-24-3
78504|code|MOVW            R0, #0x4988|68-246-136-16
78508|code|PUSH            {R4,R5,LR}|48-181
78510|code|MOVT.W          R3, #2|192-242-2-3
78514|code|SUB             SP, SP, #0xC|131-176
78516|code|MOVT.W          R0, #1|192-242-1-0
78520|code|LDR             R5, [R3]|29-104
78522|code|BLX             gettext|255-247-248-233
78526|code|MOVW            R4, #0x4BFC|68-246-252-52
78530|code|MOVW            R2, #0x4C04|68-246-4-66
78534|code|MOVW            R3, #0x4BE0|68-246-224-51
78538|code|MOVT.W          R4, #1|192-242-1-4
78542|code|MOVT.W          R2, #1|192-242-1-2
78546|code|STR             R4, [SP]|0-148
78548|code|STR             R2, [SP,#4]|1-146
78550|code|MOVT.W          R3, #1|192-242-1-3
78554|code|MOV.W           R2, #0x7D0|79-244-250-98
78558|code|MOV             R1, R0|1-70
78560|code|MOV             R0, R5|40-70
78562|code|BLX             fprintf|255-247-174-233
78566|code|ADD             SP, SP, #0xC|3-176
78568|code|POP             {R4,R5,PC}|48-189
78570|data|ALIGN 4|0-191
78572|code|PUSH            {R4-R6,LR}|112-181
78574|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
78582|code|LDRB            R5, [R4,#(byte_26840 - 0x26838)]|37-122
78584|code|CBNZ            R5, loc_13338|245-185
78586|code|MOVS            R3, #1|1-35
78588|code|MOV             R6, R0|6-70
78590|code|STRB            R3, [R4,#(byte_26840 - 0x26838)]|35-114
78592|code|BLX             _Z13stop_watchdogv; stop_watchdog(void)|255-247-0-234
78596|code|LDR             R0, [R4,#(dword_26844 - 0x26838)]|224-104
78598|code|BLX             _ZN6CONFIG14free_resourcesEv; CONFIG::free_resources(void)|255-247-82-232
78602|code|MOVW            R0, #0x497C|68-246-124-16
78606|code|MOVW            R1, #0x4EB|64-242-235-65
78610|code|LDR             R2, [R4,#(dword_26844 - 0x26838)]|226-104
78612|code|MOVT.W          R0, #1|192-242-1-0
78616|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|255-247-120-232
78620|code|STR             R5, [R4,#(dword_26844 - 0x26838)]|229-96
78622|code|BLX             _Z14cleanup_cryptov; cleanup_crypto(void)|255-247-100-232
78626|code|MOVW            R0, #0x497C|68-246-124-16
78630|code|LDR             R2, [R4,#(dword_26848 - 0x26838)]|34-105
78632|code|MOVT.W          R0, #1|192-242-1-0
78636|code|MOVW            R1, #0x4EE|64-242-238-65
78640|code|BLX             _Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|255-247-176-232
78644|code|CBNZ            R6, loc_13338|6-185
78646|code|POP             {R4-R6,PC}|112-189
78648|code|MOVS            R0, #1|1-32
78650|code|BLX             exit|254-247-232-239
78654|data|ALIGN 0x10|0-191
78656|code|PUSH            {R3,LR}|8-181
78658|code|MOV             R3, #0x26838|70-246-56-3-192-242-2-3
78666|code|LDR             R2, [R3,#(dword_2684C - 0x26838)]|90-105
78668|code|CMP             R2, #1|1-42
78670|code|BLE             loc_1335E|6-221
78672|code|LDR             R0, [R3,#(dword_26854 - 0x26838)]|216-105
78674|code|MOVS            R1, #0|0-33
78676|code|MOVS            R2, #0xA|10-34
78678|code|BLX             strtol|254-247-170-239
78682|code|BLX             sleep|255-247-16-233
78686|code|MOVS            R0, #1|1-32
78688|code|POP             {R3,PC}|8-189
78690|data|ALIGN 4|0-191
78692|code|CMP             R1, #0|0-41
78694|code|PUSH.W          {R3-R9,LR}|45-233-248-67
78698|code|MOV             R6, R0|6-70
78700|code|MOVW            R7, #0x6808|70-246-8-7
78704|code|BLT.W           loc_1352A|192-242-219-128
78708|code|MOVT.W          R7, #2|192-242-2-7
78712|code|MOV             R4, R1|12-70
78714|code|LDR             R5, [R7]|61-104
78716|code|ADDS            R0, R5, R1|104-24
78718|code|LDRB            R2, [R5,R1]|106-92
78720|code|CMP             R2, #0x20 ; ' '|32-42
78722|code|IT NE|24-191
78724|code|CMPNE           R2, #0x3D ; '='|61-42
78726|code|BNE             loc_13396|6-209
78728|code|B               loc_13460|106-224
78730|code|LDRB.W          R2, [R0,#-1]!|16-248-1-45
78734|code|CMP             R2, #0x20 ; ' '|32-42
78736|code|IT NE|24-191
78738|code|CMPNE           R2, #0x3D ; '='|61-42
78740|code|BEQ             loc_13460|100-208
78742|code|ADDS.W          R4, R4, #0xFFFFFFFF|20-241-255-52
78746|code|BCS             loc_1338A|246-210
78748|code|MOV.W           R9, #0|79-240-0-9
78752|code|MOV             R0, R5|40-70
78754|code|MOVS            R1, #0x20 ; ' '|32-33
78756|code|BLX             strchr|255-247-234-233
78760|code|CMP             R0, #0|0-40
78762|code|BEQ.W           loc_13526|0-240-188-128
78766|code|SUBS            R5, R0, R5|69-27
78768|code|MOVW            R0, #0x497C|68-246-124-16
78772|code|ADDS            R2, R5, #1|106-28
78774|code|MOV.W           R1, #0x17A|79-244-189-113
78778|code|MOVT.W          R0, #1|192-242-1-0
78782|code|BLX             _Z9sm_mallocPKcij; sm_malloc(char const*,int,uint)|254-247-210-239
78786|code|LDR             R1, [R7]|57-104
78788|code|MOV             R2, R5|42-70
78790|code|MOV             R8, R0|128-70
78792|code|BLX             memcpy|255-247-14-233
78796|code|MOVS            R3, #0|0-35
78798|code|STRB.W          R3, [R8,R5]|8-248-5-48
78802|code|CMP.W           R9, #0|185-241-0-15
78806|code|BEQ.W           loc_134FC|0-240-145-128
78810|code|MOVW            R7, #0x48EC|68-246-236-7
78814|code|MOVS            R4, #0|0-36
78816|code|MOVT.W          R7, #1|192-242-1-7
78820|code|LDR.W           R1, [R7,R4,LSL#3]|87-248-52-16
78824|code|MOV             R0, R9|72-70
78826|code|BLX             strcasecmp|254-247-84-239
78830|code|MOVW            R3, #0x48EC|68-246-236-3
78834|code|LSLS            R2, R4, #3|226-0
78836|code|MOVT.W          R3, #1|192-242-1-3
78840|code|ADDS            R4, #1|1-52
78842|code|MOV             R5, R0|5-70
78844|code|CMP             R0, #0|0-40
78846|code|BEQ             loc_134D6|106-208
78848|code|CMP             R4, #0x12|18-44
78850|code|BNE             loc_133E4|239-209
78852|code|MOVW            R3, #0x6838|70-246-56-3
78856|code|MOVW            R2, #0x681C|70-246-28-2
78860|code|MOVW            R1, #0x368D|67-242-141-97
78864|code|MOVT.W          R3, #2|192-242-2-3
78868|code|MOVT.W          R2, #2|192-242-2-2
78872|code|MOV             R0, R6|48-70
78874|code|MOVT.W          R1, #1|192-242-1-1
78878|code|MOVS            R4, #1|1-36
78880|code|STR.W           R8, [R3,#(dword_268C8 - 0x26838)]|195-248-144-128
78884|code|STR.W           R4, [R3,#(dword_268CC - 0x26838)]|195-248-148-64
78888|code|STR             R4, [R2]|20-96
78890|code|BLX             rl_completion_matches|254-247-186-239
78894|code|MOV             R4, R0|4-70
78896|code|MOVW            R0, #0x497C|68-246-124-16
78900|code|MOV             R2, R9|74-70
78902|code|MOVT.W          R0, #1|192-242-1-0
78906|code|MOVW            R1, #0x28F|64-242-143-33
78910|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-230-239
78914|code|CMP.W           R8, #0|184-241-0-15
78918|code|BEQ             loc_1345A|8-208
78920|code|MOVW            R0, #0x497C|68-246-124-16
78924|code|MOV             R2, R8|66-70
78926|code|MOVT.W          R0, #1|192-242-1-0
78930|code|MOVW            R1, #0x296|64-242-150-33
78934|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-218-239
78938|code|MOV             R0, R4|32-70
78940|code|POP.W           {R3-R9,PC}|189-232-248-131
78944|code|CMP             R2, #0x20 ; ' '|32-42
78946|code|BNE             loc_13478|9-209
78948|code|ADDS            R3, R5, R4|43-25
78950|code|B               loc_13470|3-224
78952|code|LDRB.W          R2, [R3,#-1]!|19-248-1-45
78956|code|CMP             R2, #0x20 ; ' '|32-42
78958|code|BNE             loc_13478|3-209
78960|code|ADDS.W          R4, R4, #0xFFFFFFFF|20-241-255-52
78964|code|BCS             loc_13468|248-210
78966|code|B               loc_1339C|145-231
78968|code|CMP             R4, #0|0-44
78970|code|BEQ             loc_13536|92-208
78972|code|ADD             R5, R4|37-68
78974|code|MOV             R3, R4|35-70
78976|code|MOVS            R1, #1|1-33
78978|code|B               loc_13488|1-224
78980|code|SUBS            R3, #1|1-59
78982|code|BEQ             loc_134D2|36-208
78984|code|LDRB.W          R2, [R5],#-1|21-248-1-41
78988|code|MOV             R8, R3|152-70
78990|code|CMP             R2, #0x22 ; '"'|34-42
78992|code|LDRB            R2, [R5]|42-120
78994|code|IT EQ|8-191
78996|code|EOREQ.W         R1, R1, #1|129-240-1-1
79000|code|CMP             R2, #0x20 ; ' '|32-42
79002|code|ITE NE|20-191
79004|code|MOVNE           R2, #0|0-34
79006|code|ANDEQ.W         R2, R1, #1|1-240-1-2
79010|code|CMP             R2, #0|0-42
79012|code|BEQ             loc_13484|238-208
79014|code|SUBS            R4, R4, R3|228-26
79016|code|MOVW            R0, #0x497C|68-246-124-16
79020|code|ADDS            R2, R4, #2|162-28
79022|code|MOV.W           R1, #0x1AC|79-244-214-113
79026|code|MOVT.W          R0, #1|192-242-1-0
79030|code|BLX             _Z9sm_mallocPKcij; sm_malloc(char const*,int,uint)|254-247-86-239
79034|code|LDR             R1, [R7]|57-104
79036|code|ADDS            R2, R4, #1|98-28
79038|code|ADD             R1, R8|65-68
79040|code|MOV             R9, R0|129-70
79042|code|BLX             memcpy|255-247-146-232
79046|code|MOVS            R2, #0|0-34
79048|code|MOV             R3, R0|3-70
79050|code|ADD             R3, R4|35-68
79052|code|STRB            R2, [R3,#1]|90-112
79054|code|LDR             R5, [R7]|61-104
79056|code|B               loc_133A0|102-231
79058|code|MOV             R8, R3|152-70
79060|code|B               loc_134A6|231-231
79062|code|ADD             R3, R2|19-68
79064|code|MOVW            R1, #0x368D|67-242-141-97
79068|code|MOVW            R2, #0x6838|70-246-56-2
79072|code|MOV             R0, R6|48-70
79074|code|LDR             R3, [R3,#4]|91-104
79076|code|MOVT.W          R2, #2|192-242-2-2
79080|code|MOVT.W          R1, #1|192-242-1-1
79084|code|STR.W           R5, [R2,#(dword_268CC - 0x26838)]|194-248-148-80
79088|code|STR.W           R3, [R2,#(dword_268C8 - 0x26838)]|194-248-144-48
79092|code|BLX             rl_completion_matches|254-247-84-239
79096|code|MOV             R4, R0|4-70
79098|code|B               loc_13430|153-231
79100|code|MOVW            R3, #0x6838|70-246-56-3
79104|code|MOVW            R1, #0x368D|67-242-141-97
79108|code|MOVT.W          R3, #2|192-242-2-3
79112|code|MOV             R0, R6|48-70
79114|code|MOVW            R2, #0x4C10|68-246-16-66
79118|code|MOVT.W          R1, #1|192-242-1-1
79122|code|MOVT.W          R2, #1|192-242-1-2
79126|code|STR.W           R9, [R3,#(dword_268CC - 0x26838)]|195-248-148-144
79130|code|STR.W           R2, [R3,#(dword_268C8 - 0x26838)]|195-248-144-32
79134|code|BLX             rl_completion_matches|254-247-64-239
79138|code|MOV             R4, R0|4-70
79140|code|B               loc_13442|141-231
79142|code|MOV             R8, R0|128-70
79144|code|B               loc_133D2|83-231
79146|code|MOVT.W          R7, #2|192-242-2-7
79150|code|MOV.W           R9, #0|79-240-0-9
79154|code|LDR             R5, [R7]|61-104
79156|code|B               loc_133A0|52-231
79158|code|MOV             R3, R4|35-70
79160|code|MOV             R8, R4|160-70
79162|code|B               loc_134A6|180-231
79164|code|PUSH            {R4-R6,LR}|112-181
79166|code|MOV             R5, #0x26838|70-246-56-5-192-242-2-5
79174|code|LDR             R6, [R5,#(dword_2683C - 0x26838)]|110-104
79176|code|CBZ             R6, loc_13562|94-177
79178|code|MOV             R0, R6; this|48-70
79180|code|BLX             _ZN5alist7destroyEv; alist::destroy(void)|255-247-212-232
79184|code|LDR             R0, [R5,#(dword_2683C - 0x26838)]|104-104
79186|code|MOVS            R3, #0|0-35
79188|code|MOVS            R2, #1|1-34
79190|code|STR             R3, [R0]|3-96
79192|code|STR             R3, [R0,#4]|67-96
79194|code|STR             R3, [R0,#8]|131-96
79196|code|STR             R2, [R0,#0xC]|194-96
79198|code|STRB            R2, [R0,#0x14]|2-117
79200|code|POP             {R4-R6,PC}|112-189
79202|code|MOVW            R0, #0x497C|68-246-124-16
79206|code|MOV.W           R1, #0x1BE; int|79-244-223-113
79210|code|MOVS            R2, #0x18; unsigned int|24-34
79212|code|MOVT.W          R0, #1; char *|192-242-1-0
79216|code|BLX             _Z9sm_mallocPKcij; sm_malloc(char const*,int,uint)|254-247-248-238
79220|code|MOV             R1, R6; c|49-70
79222|code|MOVS            R2, #0x18; n|24-34
79224|code|MOV             R4, R0|4-70
79226|code|STR             R0, [R5,#(dword_2683C - 0x26838)]|104-96
79228|code|BLX             memset|254-247-46-239
79232|code|MOV             R0, R4|32-70
79234|code|B               loc_13552|230-231
79236|code|PUSH            {R4-R6,LR}|112-181
79238|code|SUB             SP, SP, #0x28|138-176
79240|code|MOV             R4, R0|4-70
79242|code|BL              sub_1353C|255-247-215-255
79246|code|MOVW            R1, #0x4C1C|68-246-28-65
79250|code|ADD             R0, SP, #0x38+preg; preg|2-168
79252|code|MOVT.W          R1, #1; pattern|192-242-1-1
79256|code|MOVS            R2, #1; cflags|1-34
79258|code|BLX             regcomp|254-247-160-238
79262|code|CBZ             R0, loc_135A4|8-177
79264|code|ADD             SP, SP, #0x28 ; '('|10-176
79266|code|POP             {R4-R6,PC}|112-189
79268|code|MOVW            R0, #0x497C|68-246-124-16
79272|code|MOVW            R1, #0x1F5; int|64-242-245-17
79276|code|MOVS            R2, #3; int|3-34
79278|code|MOVT.W          R0, #1; char *|192-242-1-0
79282|code|BLX             _Z18sm_get_pool_memoryPKcii; sm_get_pool_memory(char const*,int,int)|254-247-82-239
79286|code|ADD             R6, SP, #0x38+var_10|10-174
79288|code|MOVW            R5, #0x6838|70-246-56-5
79292|code|MOVW            R1, #0x4C38|68-246-56-65
79296|code|MOVT.W          R5, #2|192-242-2-5
79300|code|MOV             R2, R4|34-70
79302|code|MOVT.W          R1, #1; char *|192-242-1-1
79306|code|MOV             R4, R5|44-70
79308|code|STR.W           R0, [R6,#-0x24]!|70-248-36-13
79312|code|LDR.W           R0, [R5,#(dword_268D0 - 0x26838)]; this|213-248-152-0
79316|code|BLX             _ZN5BSOCK5fsendEPKcz; BSOCK::fsend(char const*,...)|255-247-14-232
79320|code|B               loc_135F4|12-224
79322|code|LDR.W           R2, [R4,#(dword_268D0 - 0x26838)]|212-248-152-32
79326|code|LDR             R0, [R2,#8]; char *|144-104
79328|code|BLX             _Z19strip_trailing_junkPc; strip_trailing_junk(char *)|254-247-144-239
79332|code|LDR.W           R2, [R4,#(dword_268D0 - 0x26838)]|212-248-152-32
79336|code|ADD             R0, SP, #0x38+preg|2-168
79338|code|MOV             R3, R6|51-70
79340|code|LDR             R1, [R2,#8]|145-104
79342|code|LDR             R2, [R2,#0x28]|146-106
79344|code|BL              sub_131E8|255-247-250-253
79348|code|LDR.W           R0, [R5,#(dword_268D0 - 0x26838)]; this|213-248-152-0
79352|code|BLX             _ZN5BSOCK4recvEv; BSOCK::recv(void)|254-247-82-238
79356|code|CMP             R0, #0|0-40
79358|code|BGT             loc_135DA|236-220
79360|code|MOVW            R0, #0x497C|68-246-124-16
79364|code|MOVW            R1, #0x1FB; int|64-242-251-17
79368|code|LDR             R2, [SP,#0x38+var_34]; char *|1-154
79370|code|MOVT.W          R0, #1; char *|192-242-1-0
79374|code|BLX             _Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|254-247-66-239
79378|code|ADD             R0, SP, #0x38+preg; preg|2-168
79380|code|BLX             regfree|254-247-148-238
79384|code|ADD             SP, SP, #0x28 ; '('|10-176
79386|code|POP             {R4-R6,PC}|112-189
79388|code|PUSH            {R4-R6,LR}|112-181
79390|code|MOVW            R6, #0x6838|70-246-56-6
79394|code|MOV             R4, R0|4-70
79396|code|MOVT.W          R6, #2|192-242-2-6
79400|code|BL              sub_1353C|255-247-136-255
79404|code|MOVW            R1, #0x4C48|68-246-72-65
79408|code|MOV             R2, R4|34-70
79410|code|LDR.W           R0, [R6,#(dword_268D0 - 0x26838)]; this|214-248-152-0
79414|code|MOVT.W          R1, #1; char *|192-242-1-1
79418|code|MOV             R4, R6|52-70
79420|code|BLX             _ZN5BSOCK5fsendEPKcz; BSOCK::fsend(char const*,...)|254-247-218-239
79424|code|B               loc_1367C|28-224
79426|code|LDR.W           R3, [R4,#(dword_268D0 - 0x26838)]|212-248-152-48
79430|code|LDR             R0, [R3,#8]; char *|152-104
79432|code|BLX             _Z19strip_trailing_junkPc; strip_trailing_junk(char *)|254-247-92-239
79436|code|LDR.W           R3, [R4,#(dword_268D0 - 0x26838)]|212-248-152-48
79440|code|LDR             R5, [R4,#(dword_2683C - 0x26838)]|101-104
79442|code|LDR             R0, [R3,#8]; s|152-104
79444|code|BLX             strlen|254-247-226-239
79448|code|MOVW            R1, #0x207; int|64-242-7-33
79452|code|ADDS            R2, R0, #1; unsigned int|66-28
79454|code|MOV             R0, #aConsoleC; char *|68-246-124-16-192-242-1-0
79462|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|254-247-218-237
79466|code|LDR.W           R3, [R4,#(dword_268D0 - 0x26838)]|212-248-152-48
79470|code|LDR             R1, [R3,#8]; src|153-104
79472|code|BLX             strcpy|254-247-248-238
79476|code|MOV             R1, R0; void *|1-70
79478|code|MOV             R0, R5; this|40-70
79480|code|BLX             _ZN5alist6appendEPv; alist::append(void *)|254-247-238-237
79484|code|LDR.W           R0, [R6,#(dword_268D0 - 0x26838)]; this|214-248-152-0
79488|code|BLX             _ZN5BSOCK4recvEv; BSOCK::recv(void)|254-247-14-238
79492|code|CMP             R0, #0|0-40
79494|code|BGT             loc_13642|220-220
79496|code|POP             {R4-R6,PC}|112-189
79498|data|ALIGN 4|0-191
79500|code|PUSH.W          {R4-R8,LR}|45-233-240-65
79504|code|MOV             R5, #0x26838|70-246-56-5-192-242-2-5
79512|code|MOV             R8, R0|128-70
79514|code|LDR.W           R6, [R5,#(dword_268C8 - 0x26838)]|213-248-144-96
79518|code|LDR.W           R4, [R5,#(dword_268CC - 0x26838)]|213-248-148-64
79522|code|CBNZ            R1, loc_136BC|89-185
79524|code|STR.W           R1, [R5,#(dword_268D4 - 0x26838)]|197-248-156-16
79528|code|BLX             strlen|254-247-184-239
79532|code|STR.W           R0, [R5,#(dword_268D8 - 0x26838)]|197-248-160-0
79536|code|CBZ             R4, loc_13716|140-179
79538|code|CMP             R4, #1|1-44
79540|code|BNE             loc_136BC|2-209
79542|code|MOV             R0, R6|48-70
79544|code|BL              sub_13584|255-247-100-255
79548|code|LDR             R4, [R5,#(dword_2683C - 0x26838)]|108-104
79550|code|LDR.W           R7, [R5,#(dword_268D8 - 0x26838)]|213-248-160-112
79554|code|CBZ             R4, loc_1370C|28-179
79556|code|LDR.W           R3, [R5,#(dword_268D4 - 0x26838)]|213-248-156-48
79560|code|LDR             R6, [R4,#4]|102-104
79562|code|CMP             R6, R3|158-66
79564|code|BGT             loc_136D4|2-220
79566|code|MOVS            R0, #0|0-32
79568|code|POP.W           {R4-R8,PC}|189-232-240-129
79572|code|CMP             R3, #0|0-43
79574|code|BLT             loc_13712|28-219
79576|code|LDR             R2, [R4]|34-104
79578|code|LDR.W           R6, [R2,R3,LSL#2]|82-248-35-96
79582|code|MOV             R0, R6|48-70
79584|code|MOV             R1, R8|65-70
79586|code|MOV             R2, R7|58-70
79588|code|ADDS            R3, #1|1-51
79590|code|STR.W           R3, [R5,#(dword_268D4 - 0x26838)]|197-248-156-48
79594|code|BLX             strncmp|254-247-242-237
79598|code|CMP             R0, #0|0-40
79600|code|BNE             loc_136C2|231-209
79602|code|MOV             R0, R6|48-70
79604|code|BLX             strlen|254-247-146-239
79608|code|ADDS            R0, #1|1-48
79610|code|BLX             _Z14actuallymallocj; actuallymalloc(uint)|254-247-130-239
79614|code|MOV             R1, R6|49-70
79616|code|MOV             R4, R0|4-70
79618|code|BLX             strcpy|254-247-176-238
79622|code|MOV             R0, R4|32-70
79624|code|POP.W           {R4-R8,PC}|189-232-240-129
79628|code|MOV             R0, R4|32-70
79630|code|POP.W           {R4-R8,PC}|189-232-240-129
79634|code|MOVS            R6, #0|0-38
79636|code|B               loc_136DE|227-231
79638|code|MOV             R0, R6|48-70
79640|code|BL              sub_1361C|255-247-128-255
79644|code|LDR             R4, [R5,#(dword_2683C - 0x26838)]|108-104
79646|code|LDR.W           R7, [R5,#(dword_268D8 - 0x26838)]|213-248-160-112
79650|code|B               loc_136C2|206-231
79652|code|PUSH            {R3-R5,LR}|56-181
79654|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
79662|code|MOV             R5, R0|5-70
79664|code|LDR.W           R1, [R4,#(dword_268DC - 0x26838)]; stream|212-248-164-16
79668|code|BLX             fputs|254-247-242-239
79672|code|LDR.W           R0, [R4,#(dword_268DC - 0x26838)]; stream|212-248-164-0
79676|code|BLX             fflush|254-247-208-239
79680|code|LDRB.W          R3, [R4,#(byte_268E0 - 0x26838)]|148-248-168-48
79684|code|CBNZ            R3, loc_13748|3-185
79686|code|POP             {R3-R5,PC}|56-189
79688|code|MOVW            R4, #0x6828|70-246-40-4
79692|code|MOV             R0, R5; s|40-70
79694|code|MOVT.W          R4, #2|192-242-2-4
79698|code|LDR             R1, [R4]; stream|33-104
79700|code|BLX             fputs|254-247-226-239
79704|code|LDR             R0, [R4]|32-104
79706|code|POP.W           {R3-R5,LR}|189-232-56-64
79710|code|B.W             j_fflush|254-247-189-191
79714|data|ALIGN 4|0-191
79716|code|PUSH            {R3-R5,LR}|56-181
79718|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
79726|code|LDR             R3, [R4,#(dword_2684C - 0x26838)]|99-105
79728|code|CMP             R3, #1|1-43
79730|code|BLE             loc_13790|13-221
79732|code|LDR             R3, [R4,#(dword_26854 - 0x26838)]|227-105
79734|code|MOV             R0, #0x14C4C|68-246-76-64-192-242-1-0
79742|code|LDRB            R5, [R3]|29-120
79744|code|MOV             R1, R5|41-70
79746|code|BLX             strchr|254-247-252-239
79750|code|CBZ             R0, loc_1379A|64-177
79752|code|STRB.W          R5, [R4,#(byte_268E1 - 0x26838)]|132-248-169-80
79756|code|MOVS            R0, #1|1-32
79758|code|POP             {R3-R5,PC}|56-189
79760|code|ITT EQ|4-191
79762|code|MOVEQ           R3, #0|0-35
79764|code|STRBEQ.W        R3, [R4,#(byte_268E1 - 0x26838)]|132-248-169-48
79768|code|BEQ             loc_1378C|248-208
79770|code|MOV             R0, #0x14C68|68-246-104-64-192-242-1-0
79778|code|BLX             gettext|254-247-132-239
79782|code|BL              sub_13724|255-247-189-255
79786|code|MOVS            R0, #1|1-32
79788|code|POP             {R3-R5,PC}|56-189
79790|data|ALIGN 0x10|0-191
79792|code|PUSH            {LR}|0-181
79794|code|MOVS            R0, #0|0-32
79796|code|SUB             SP, SP, #0x6C ; 'l'|155-176
79798|code|BLX             time|254-247-116-239
79802|code|ADD             R3, SP, #0x68 ; 'h'|26-171
79804|code|ADD             R1, SP, #8|2-169
79806|code|STR.W           R0, [R3,#-0x64]!|67-248-100-13
79810|code|MOV             R0, R3|24-70
79812|code|BLX             localtime_r|254-247-54-237
79816|code|MOVW            R2, #0x4C88|68-246-136-66
79820|code|ADD             R3, SP, #8|2-171
79822|code|MOVT.W          R2, #1|192-242-1-2
79826|code|MOVS            R1, #0x32 ; '2'|50-33
79828|code|ADD             R0, SP, #0x34 ; '4'|13-168
79830|code|BLX             strftime|254-247-252-237
79834|code|MOV             R0, #0x14F6C|68-246-108-112-192-242-1-0
79842|code|BL              sub_13724|255-247-159-255
79846|code|MOVS            R0, #1|1-32
79848|code|ADD             SP, SP, #0x6C ; 'l'|27-176
79850|code|POP.W           {PC}|93-248-4-251
79854|data|ALIGN 0x10|0-191
79856|code|PUSH            {R0-R3}|15-180
79858|code|MOVW            R1, #0xBB8; int|64-246-184-49
79862|code|PUSH            {R4,LR}|16-181
79864|code|SUB.W           SP, SP, #0xBC0|173-245-60-109
79868|code|ADDW            R4, SP, #0xBD8+varg_r0|13-246-200-52
79872|code|ADD             R0, SP, #0xBD8+var_BD0; char *|2-168
79874|code|LDR.W           R2, [R4],#4; char *|84-248-4-43
79878|code|MOV             R3, R4; int **__attribute__((__org_typedef(__va_list)))|35-70
79880|code|STR             R4, [SP,#0xBD8+var_BD4]|1-148
79882|code|BLX             _Z10bvsnprintfPciPKcSt9__va_list; bvsnprintf(char *,int,char const*,std::__va_list)|254-247-62-237
79886|code|ADD             R0, SP, #0xBD8+var_BD0|2-168
79888|code|BL              sub_13724|255-247-136-255
79892|code|ADD.W           SP, SP, #0xBC0|13-245-60-109
79896|code|POP.W           {R4,LR}|189-232-16-64
79900|code|ADD             SP, SP, #0x10|4-176
79902|code|BX              LR|112-71
79904|code|PUSH            {R3-R5,LR}|56-181
79906|code|MOV             R4, #0x26360|70-242-96-52-192-242-2-4
79914|code|ADD.W           R5, R4, #0x9C|4-241-156-5
79918|code|MOVW            R0, #0x4C9C|68-246-156-64
79922|code|LDR             R1, [R4]; "input"|33-104
79924|code|LDR             R2, [R4,#8]|162-104
79926|code|MOVT.W          R0, #1|192-242-1-0
79930|code|ADDS            R4, #0xC|12-52
79932|code|BL              sub_137F0|255-247-216-255
79936|code|CMP             R4, R5|172-66
79938|code|BNE             loc_1382E|244-209
79940|code|MOVS            R0, #1|1-32
79942|code|POP             {R3-R5,PC}|56-189
79944|code|PUSH            {R3,LR}|8-181
79946|code|MOVW            R0, #0x4CA8|68-246-168-64
79950|code|MOVW            R1, #0x4BE0|68-246-224-49
79954|code|MOVW            R2, #0x4BFC|68-246-252-50
79958|code|MOVW            R3, #0x4C04|68-246-4-67
79962|code|MOVT.W          R0, #1|192-242-1-0
79966|code|MOVT.W          R1, #1|192-242-1-1
79970|code|MOVT.W          R2, #1|192-242-1-2
79974|code|MOVT.W          R3, #1|192-242-1-3
79978|code|BL              sub_137F0|255-247-193-255
79982|code|MOVS            R0, #1|1-32
79984|code|POP             {R3,PC}|8-189
79986|data|ALIGN 4|0-191
79988|code|PUSH.W          {R4-R10,LR}|45-233-240-71
79992|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
80000|code|MOV             R10, R0|130-70
80002|code|LDR.W           R7, [R4,#(dword_268E4 - 0x26838)]|212-248-172-112
80006|code|MOV             R9, R1|137-70
80008|code|MOV             R8, R2|144-70
80010|code|CMP             R7, #0|0-47
80012|code|BEQ             loc_1392E|79-208
80014|code|LDR.W           R5, [R4,#(dword_268EC - 0x26838)]|212-248-180-80
80018|code|CMP             R5, #0|0-45
80020|code|BEQ             loc_13954|94-208
80022|code|ADDS            R5, #1|1-53
80024|code|LDRB.W          R1, [R4,#(byte_268E1 - 0x26838)]; c|148-248-169-16
80028|code|MOV             R6, #0x26838|70-246-56-6-192-242-2-6
80036|code|CBZ             R1, loc_13904|113-179
80038|code|MOV             R0, R5; s|40-70
80040|code|BLX             strchr|254-247-104-239
80044|code|STR.W           R0, [R6,#(dword_268EC - 0x26838)]|198-248-180-0
80048|code|CBZ             R0, loc_138B6|8-177
80050|code|MOVS            R2, #0|0-34
80052|code|STRB            R2, [R0]|2-112
80054|code|CMP             R5, R7|189-66
80056|code|BEQ             loc_138D6|13-208
80058|code|MOV             R0, R10; stream|80-70
80060|code|BLX             fileno|254-247-28-238
80064|code|BLX             isatty|254-247-56-238
80068|code|CBZ             R0, loc_138D6|56-177
80070|code|MOVW            R0, #0x4CEC|68-246-236-64
80074|code|MOV             R1, R9|73-70
80076|code|MOVT.W          R0, #1|192-242-1-0
80080|code|MOV             R2, R5|42-70
80082|code|BL              sub_137F0|255-247-141-255
80086|code|MOV             R1, R5; char *|41-70
80088|code|ADD.W           R0, R8, #8; char **|8-241-8-0
80092|code|BLX             _Z9pm_strcpyPPcPKc; pm_strcpy(char **,char const*)|254-247-230-237
80096|code|STR.W           R0, [R8,#0x28]|200-248-40-0
80100|code|CBZ             R0, loc_138F0|32-177
80102|code|LDR.W           R3, [R4,#(dword_268E8 - 0x26838)]|212-248-176-48
80106|code|ADDS            R3, #1|1-51
80108|code|STR.W           R3, [R4,#(dword_268E8 - 0x26838)]|196-248-176-48
80112|code|LDR.W           R2, [R4,#(dword_268EC - 0x26838)]|212-248-180-32
80116|code|MOV             R3, #0x26838|70-246-56-3-192-242-2-3
80124|code|CBZ             R2, loc_1390A|42-177
80126|code|MOVS            R0, #1|1-32
80128|code|POP.W           {R4-R10,PC}|189-232-240-135
80132|code|STR.W           R1, [R6,#(dword_268EC - 0x26838)]|198-248-180-16
80136|code|B               loc_138B6|213-231
80138|code|LDR.W           R2, [R3,#(dword_268E8 - 0x26838)]|211-248-176-32
80142|code|CBNZ            R2, loc_13924|74-185
80144|code|LDR.W           R0, [R4,#(dword_268E4 - 0x26838)]; void *|212-248-172-0
80148|code|BLX             _Z12actuallyfreePv; actuallyfree(void *)|254-247-160-238
80152|code|MOVS            R3, #0|0-35
80154|code|MOVS            R0, #1|1-32
80156|code|STR.W           R3, [R4,#(dword_268E4 - 0x26838)]|196-248-172-48
80160|code|POP.W           {R4-R10,PC}|189-232-240-135
80164|code|LDR.W           R0, [R3,#(dword_268E4 - 0x26838)]|211-248-172-0
80168|code|BLX             add_history|254-247-34-238
80172|code|B               loc_13910|240-231
80174|code|MOVW            R3, #0x6830|70-246-48-3
80178|code|MOV             R0, R1|8-70
80180|code|MOVT.W          R3, #2|192-242-2-3
80184|code|STR.W           R7, [R4,#(dword_268E8 - 0x26838)]|196-248-176-112
80188|code|STR             R7, [R3]|31-96
80190|code|BLX             readline|254-247-152-237
80194|code|STR.W           R0, [R4,#(dword_268E4 - 0x26838)]|196-248-172-0
80198|code|CBZ             R0, loc_13974|168-177
80200|code|BLX             _Z19strip_trailing_junkPc; strip_trailing_junk(char *)|254-247-220-237
80204|code|LDR.W           R5, [R4,#(dword_268E4 - 0x26838)]|212-248-172-80
80208|code|MOV             R7, R5|47-70
80210|code|B               loc_13898|161-231
80212|code|MOV             R0, #aCommandLogicPr; msgid|68-246-212-64-192-242-1-0
80220|code|BLX             gettext|254-247-166-238
80224|code|BL              sub_13724|255-247-224-254
80228|code|LDR.W           R3, [R8,#8]|216-248-8-48
80232|code|STR.W           R5, [R8,#0x28]|200-248-40-80
80236|code|MOV             R0, R5|40-70
80238|code|STRB            R5, [R3]|29-112
80240|code|POP.W           {R4-R10,PC}|189-232-240-135
80244|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
80248|code|POP.W           {R4-R10,PC}|189-232-240-135
80252|code|PUSH.W          {R4-R11,LR}|45-233-240-79
80256|code|SUB             SP, SP, #0xC|131-176
80258|code|MOV             R4, R1|12-70
80260|code|MOV             R7, R0|7-70
80262|code|BLX             fileno|254-247-184-237
80266|code|MOVW            R10, #0x6360|70-242-96-58
80270|code|BLX             isatty|254-247-210-237
80274|code|MOVW            R5, #0x4CF4|68-246-244-69
80278|code|MOVT.W          R10, #2|192-242-2-10
80282|code|MOVT.W          R5, #1|192-242-1-5
80286|code|MOV             R8, R0|128-70
80288|code|CMP.W           R8, #0|184-241-0-15
80292|code|BEQ             loc_139DE|27-208
80294|code|MOV             R0, R7|56-70
80296|code|MOV             R1, R5|41-70
80298|code|MOV             R2, R4|34-70
80300|code|MOVS            R3, #0x1E|30-35
80302|code|BL              sub_13874|255-247-97-255
80306|code|CMP             R0, #0|0-40
80308|code|BLT.W           loc_13BCC|192-242-10-129
80312|code|BNE.W           loc_13ABE|64-240-129-128
80316|code|MOVW            R1, #0x4CF4|68-246-244-65
80320|code|MOV             R0, R5; s1|40-70
80322|code|MOVT.W          R1, #1; s2|192-242-1-1
80326|code|BLX             strcmp|254-247-102-238
80330|code|CMP             R0, #0|0-40
80332|code|BEQ.W           loc_13B88|0-240-220-128
80336|code|MOV             R5, #0x150E0|69-242-224-5-192-242-1-5
80344|code|CMP.W           R8, #0|184-241-0-15
80348|code|BNE             loc_139A6|227-209
80350|code|MOVW            R0, #0x497C|68-246-124-16
80354|code|MOV.W           R1, #0x102; int|79-244-129-113
80358|code|LDR             R2, [R4,#8]; char *|162-104
80360|code|MOVT.W          R0, #1; char *|192-242-1-0
80364|code|BLX             _Z21sm_sizeof_pool_memoryPKciPc; sm_sizeof_pool_memory(char const*,int,char *)|254-247-228-237
80368|code|MOV             R2, R7; _IO_FILE *|58-70
80370|code|SUBS            R1, R0, #1; int|65-30
80372|code|LDR             R0, [R4,#8]; char *|160-104
80374|code|BLX             _Z6bfgetsPciP8_IO_FILE; bfgets(char *,int,_IO_FILE *)|254-247-182-237
80378|code|CMP             R0, #0|0-40
80380|code|BEQ.W           loc_13BCC|0-240-230-128
80384|code|LDR             R0, [R4,#8]|160-104
80386|code|BL              sub_13724|255-247-143-254
80390|code|LDR             R0, [R4,#8]; char *|160-104
80392|code|BLX             _Z19strip_trailing_junkPc; strip_trailing_junk(char *)|254-247-124-237
80396|code|LDR             R5, [R4,#8]|165-104
80398|code|MOV             R0, R5; s|40-70
80400|code|BLX             strlen|254-247-4-238
80404|code|STR             R0, [R4,#0x28]|160-98
80406|code|LDRB            R3, [R5]|43-120
80408|code|CMP             R3, #0x40 ; '@'|64-43
80410|code|BNE             loc_13AC6|84-209
80412|code|LDR             R1, =dword_26848; char **|144-73
80414|code|MOV             R0, R5; char *|40-70
80416|code|MOVS            R5, #0x1E|30-37
80418|code|STR             R5, [SP,#0x30+var_2C]; int|1-149
80420|code|ADD.W           R3, R1, #0xAC|1-241-172-3
80424|code|ADDS            R2, R1, #4; int *|10-29
80426|code|STR             R3, [SP,#0x30+var_30]; char **|0-147
80428|code|ADD.W           R3, R1, #8; char **|1-241-8-3
80432|code|BLX             _Z10parse_argsPcPS_PiS0_S0_i; parse_args(char *,char **,int *,char **,char **,int)|254-247-102-236
80436|code|MOV             R3, #0x2682C|70-246-44-3-192-242-2-3
80444|code|LDR             R3, [R3]|27-104
80446|code|CMP             R3, #0x77 ; 'w'|119-43
80448|code|BGT.W           loc_13C0A|0-243-227-128
80452|code|MOV             R3, #0x26838|70-246-56-3-192-242-2-3
80460|code|LDR             R2, [R3,#(dword_2684C - 0x26838)]|90-105
80462|code|CBZ             R2, loc_13AB4|138-179
80464|code|LDR             R3, [R3,#(dword_26850 - 0x26838)]|155-105
80466|code|ADDS            R5, R3, #1|93-28
80468|code|LDRB            R3, [R3,#1]|91-120
80470|code|CMP             R3, #0x23 ; '#'|35-43
80472|code|BEQ             loc_13AB4|44-208
80474|code|MOV             R0, R5; s|40-70
80476|code|MOV.W           R9, #0|79-240-0-9
80480|code|BLX             strlen|254-247-220-237
80484|code|MOV             R11, R9|203-70
80486|code|MOV             R6, R0|6-70
80488|code|LDR.W           R0, [R10,R9]; msgid|90-248-9-0
80492|code|ADD.W           R9, R9, #0xC|9-241-12-9
80496|code|BLX             gettext|254-247-28-238
80500|code|MOV             R2, R6; n|50-70
80502|code|MOV             R1, R0; s2|1-70
80504|code|MOV             R0, R5; s1|40-70
80506|code|BLX             strncasecmp|254-247-110-237
80510|code|CMP             R0, #0|0-40
80512|code|BEQ.W           loc_13C32|0-240-215-128
80516|code|ADD.W           R11, R11, #1|11-241-1-11
80520|code|CMP.W           R11, #0xD|187-241-13-15
80524|code|BNE             loc_13A68|236-209
80526|code|MOV             R0, #aIsAnInvalidCom; msgid|68-246-52-80-192-242-1-0
80534|code|BLX             gettext|254-247-10-238
80538|code|MOV             R1, R0; char *|1-70
80540|code|ADD.W           R0, R4, #8; char **|4-241-8-0
80544|code|BLX             _Z9pm_strcatPPcPKc; pm_strcat(char **,char const*)|254-247-72-236
80548|code|LDR             R5, [R4,#8]|165-104
80550|code|MOV             R0, R5; s|40-70
80552|code|BLX             strlen|254-247-184-237
80556|code|STR             R0, [R4,#0x28]|160-98
80558|code|MOV             R0, R5|40-70
80560|code|BL              sub_13724|255-247-56-254
80564|code|MOV             R5, #0x14CF4|68-246-244-69-192-242-1-5
80572|code|B               loc_139A0|112-231
80574|code|LDR             R5, [R4,#8]|165-104
80576|code|LDRB            R3, [R5]|43-120
80578|code|CMP             R3, #0x40 ; '@'|64-43
80580|code|BEQ             loc_13A1C|170-208
80582|code|MOVW            R6, #0x6838|70-246-56-6
80586|code|MOV             R0, R4; BSOCK *|32-70
80588|code|MOVT.W          R6, #2|192-242-2-6
80592|code|LDR.W           R1, [R6,#(dword_268F0 - 0x26838)]; unsigned int|214-248-184-16
80596|code|BLX             _Z17start_bsock_timerP5BSOCKj; start_bsock_timer(BSOCK *,uint)|254-247-246-237
80600|code|MOV             R5, R0|5-70
80602|code|MOV             R0, R4; this|32-70
80604|code|BLX             _ZN5BSOCK4sendEv; BSOCK::send(void)|254-247-206-235
80608|code|CMP             R0, #0|0-40
80610|code|BEQ.W           loc_13C52|0-240-182-128
80614|code|MOV             R0, R5|40-70
80616|code|MOVS            R5, #0|0-37
80618|code|BLX             _Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|254-247-176-236
80622|code|LDR.W           R9, [R4,#8]|212-248-8-144
80626|code|MOV             R1, #aQuit; s2|68-246-20-81-192-242-1-1
80634|code|MOV             R0, R9; s1|72-70
80636|code|BLX             strcmp|254-247-202-237
80640|code|CMP             R0, #0|0-40
80642|code|BEQ             loc_13BCC|99-208
80644|code|MOVW            R1, #0x4D1C|68-246-28-81
80648|code|MOV             R0, R9; s1|72-70
80650|code|MOVT.W          R1, #1; s2|192-242-1-1
80654|code|BLX             strcmp|254-247-194-237
80658|code|CMP             R0, #0|0-40
80660|code|BEQ             loc_13BCC|90-208
80662|code|MOV             R0, R4; BSOCK *|32-70
80664|code|LDR.W           R1, [R6,#(dword_268F0 - 0x26838)]; unsigned int|214-248-184-16
80668|code|BLX             _Z17start_bsock_timerP5BSOCKj; start_bsock_timer(BSOCK *,uint)|254-247-210-237
80672|code|MOV             R9, R0|129-70
80674|code|B               loc_13B2A|2-224
80676|code|LDRB            R3, [R6]|51-120
80678|code|CBZ             R3, loc_13B48|123-177
80680|code|MOVS            R5, #0|0-37
80682|code|MOV             R0, R4; this|32-70
80684|code|BLX             _ZN5BSOCK4recvEv; BSOCK::recv(void)|254-247-184-235
80688|code|SUBS.W          R11, R0, #0|176-241-0-11
80692|code|BLT             loc_13B56|15-219
80694|code|CMP             R5, #0|0-45
80696|code|BNE             loc_13B24|244-209
80698|code|LDRB            R3, [R6]|51-120
80700|code|CMP             R3, #0|0-43
80702|code|BNE             loc_13B28|243-209
80704|code|LDR             R0, [R4,#8]|160-104
80706|code|BL              sub_13724|255-247-239-253
80710|code|B               loc_13B28|239-231
80712|code|MOV             R0, #0x14F6C|68-246-108-112-192-242-1-0
80720|code|BL              sub_13724|255-247-232-253
80724|code|B               loc_13B3A|241-231
80726|code|MOV             R0, R9|72-70
80728|code|BLX             _Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|254-247-120-236
80732|code|LDRB            R2, [R6]|50-120
80734|code|CBZ             R2, loc_13BB4|74-179
80736|code|MOV             R0, R4; BSOCK *|32-70
80738|code|BLX             _Z12is_bnet_stopP5BSOCK; is_bnet_stop(BSOCK *)|254-247-116-235
80742|code|CBNZ            R0, loc_13BCC|136-187
80744|code|CMP.W           R11, #0xFFFFFFFF|187-241-255-63
80748|code|BEQ             loc_13BD2|49-208
80750|code|MOVW            R3, #0x4CF4|68-246-244-67
80754|code|MOVW            R2, #0x50E0|69-242-224-2
80758|code|MOVT.W          R3, #1|192-242-1-3
80762|code|MOVT.W          R2, #1|192-242-1-2
80766|code|CMP             R5, #0|0-45
80768|code|ITE EQ|12-191
80770|code|MOVEQ           R5, R3|29-70
80772|code|MOVNE           R5, R2|21-70
80774|code|B               loc_139A0|11-231
80776|code|MOVW            R6, #0x6838|70-246-56-6
80780|code|MOV             R0, R4; BSOCK *|32-70
80782|code|MOVT.W          R6, #2|192-242-2-6
80786|code|MOVS            R5, #1|1-37
80788|code|LDR.W           R1, [R6,#(dword_268F0 - 0x26838)]; unsigned int|214-248-184-16
80792|code|BLX             _Z17start_bsock_timerP5BSOCKj; start_bsock_timer(BSOCK *,uint)|254-247-148-237
80796|code|MOV             R1, #aMessages; char *|68-246-248-65-192-242-1-1
80804|code|MOV             R9, R0|129-70
80806|code|MOV             R0, R4; this|32-70
80808|code|BLX             _ZN5BSOCK5fsendEPKcz; BSOCK::fsend(char const*,...)|254-247-36-237
80812|code|MOV             R0, R9|72-70
80814|code|BLX             _Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|254-247-78-236
80818|code|B               loc_13AEE|156-231
80820|code|MOV             R2, #0x26828|70-246-40-2-192-242-2-2
80828|code|LDR             R0, [R2]; stream|16-104
80830|code|BLX             fflush|254-247-144-237
80834|code|MOV             R0, R4; BSOCK *|32-70
80836|code|BLX             _Z12is_bnet_stopP5BSOCK; is_bnet_stop(BSOCK *)|254-247-66-235
80840|code|CMP             R0, #0|0-40
80842|code|BEQ             loc_13B68|205-208
80844|code|ADD             SP, SP, #0xC|3-176
80846|code|POP.W           {R4-R11,PC}|189-232-240-143
80850|code|LDR             R3, [R4,#0x28]|163-106
80852|code|ADDS            R3, #0x1B|27-51
80854|code|MOV             R3, #0x2682C|70-246-44-3-192-242-2-3
80862|code|LDR             R3, [R3]|27-104
80864|code|BEQ             loc_13C28|34-208
80866|code|CMP             R3, #0x63 ; 'c'|99-43
80868|code|BLE             loc_13B6E|195-221
80870|code|MOV             R0, R4; BSOCK *|32-70
80872|code|BLX             _Z17bnet_sig_to_asciiP5BSOCK; bnet_sig_to_ascii(BSOCK *)|254-247-152-236
80876|code|MOV             R3, #aGotPollS; char *|68-246-36-83-192-242-1-3
80884|code|MOVW            R1, #0x149; int|64-242-73-17
80888|code|MOVS            R2, #0x64 ; 'd'; int|100-34
80890|code|STR             R0, [SP,#0x30+var_30]|0-144
80892|code|MOV             R0, #aConsoleC; char *|68-246-124-16-192-242-1-0
80900|code|BLX             _Z5d_msgPKciiS0_z; d_msg(char const*,int,int,char const*,...)|254-247-4-235
80904|code|B               loc_13B6E|177-231
80906|code|LDR             R2, [R4,#8]|162-104
80908|code|MOVW            R0, #0x497C|68-246-124-16
80912|code|MOVW            R3, #0x4D04|68-246-4-83
80916|code|MOVT.W          R0, #1; char *|192-242-1-0
80920|code|MOVT.W          R3, #1; char *|192-242-1-3
80924|code|MOVS            R1, #0xCF; int|207-33
80926|code|STR             R2, [SP,#0x30+var_30]|0-146
80928|code|MOVS            R2, #0x78 ; 'x'; int|120-34
80930|code|BLX             _Z5d_msgPKciiS0_z; d_msg(char const*,int,int,char const*,...)|254-247-246-234
80934|code|B               loc_13A44|13-231
80936|code|CMP             R3, #0x63 ; 'c'|99-43
80938|code|BLE.W           loc_139D0|127-247-209-174
80942|code|MOVS            R5, #1|1-37
80944|code|B               loc_13BE6|217-231
80946|code|ADD.W           R3, R11, R11,LSL#1|11-235-75-3
80950|code|MOV             R2, #0x26360|70-242-96-50-192-242-2-2
80958|code|MOV             R0, R7|56-70
80960|code|ADD.W           R3, R2, R3,LSL#2|2-235-131-3
80964|code|MOV             R1, R4|33-70
80966|code|LDR             R3, [R3,#4]|91-104
80968|code|BLX             R3|152-71
80970|code|CMP             R0, #0|0-40
80972|code|BNE.W           loc_13AB4|127-244-50-175
80976|code|B               loc_13BCC|188-231
80978|code|MOV             R0, R5|40-70
80980|code|ADD             SP, SP, #0xC|3-176
80982|code|POP.W           {R4-R11,LR}|189-232-240-79
80986|code|B.W             j__Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|254-247-245-187
80990|data|ALIGN 0x10|0-191
80992|data|DCD dword_26848|72-104-2-0
80996|code|PUSH.W          {R4-R11,LR}|45-233-240-79
81000|code|MOV             R8, R0|128-70
81002|code|SUB             SP, SP, #0x1C|135-176
81004|code|MOVW            R0, #0x497C|68-246-124-16
81008|code|MOVS            R3, #0|0-35
81010|code|MOV             R10, R1|138-70
81012|code|STR             R3, [R2]|19-96
81014|code|MOVT.W          R0, #1|192-242-1-0
81018|code|STR             R3, [R1]|11-96
81020|code|MOVW            R1, #0x385|64-242-133-49
81024|code|MOV             R9, R2|145-70
81026|code|MOV             R4, R3|28-70
81028|code|STR             R3, [SP,#8]|2-147
81030|code|MOV             R6, R3|30-70
81032|code|STR             R3, [SP,#0xC]|3-147
81034|code|STR             R3, [SP,#0x10]|4-147
81036|code|STR             R3, [SP,#0x14]|5-147
81038|code|BLX             _Z9b_LockResPKci; b_LockRes(char const*,int)|254-247-246-235
81042|code|B               loc_13C96|0-224
81044|code|ADDS            R6, #1|1-54
81046|code|MOV             R1, R4|33-70
81048|code|MOVW            R0, #0x3EA|64-242-234-48
81052|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-104-237
81056|code|MOV             R4, R0|4-70
81058|code|CMP             R0, #0|0-40
81060|code|BNE             loc_13C94|246-209
81062|code|MOV             R5, R0|5-70
81064|code|MOV             R7, R0|7-70
81066|code|B               loc_13CAE|0-224
81068|code|ADDS            R7, #1|1-55
81070|code|MOV             R1, R5|41-70
81072|code|MOVW            R0, #0x3E9|64-242-233-48
81076|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-92-237
81080|code|MOV             R5, R0|5-70
81082|code|CMP             R0, #0|0-40
81084|code|BNE             loc_13CAC|246-209
81086|code|MOVW            R0, #0x497C|68-246-124-16
81090|code|MOVW            R1, #0x38E|64-242-142-49
81094|code|MOVT.W          R0, #1|192-242-1-0
81098|code|BLX             _Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|254-247-186-234
81102|code|CMP             R6, #1|1-46
81104|code|BEQ             loc_13D32|47-208
81106|code|CMP.W           R8, #0|184-241-0-15
81110|code|BEQ             loc_13D4A|56-208
81112|code|MOVW            R0, #0x497C|68-246-124-16
81116|code|MOVW            R1, #0x395|64-242-149-49
81120|code|MOVT.W          R0, #1|192-242-1-0
81124|code|BLX             _Z9b_LockResPKci; b_LockRes(char const*,int)|254-247-202-235
81128|code|B               loc_13CF6|5-224
81130|code|LDR             R0, [R4,#4]|96-104
81132|code|BLX             _Z7bstrcmpPKcS0_; bstrcmp(char const*,char const*)|254-247-156-236
81136|code|CMP             R0, #0|0-40
81138|code|BNE.W           loc_13E42|64-240-166-128
81142|code|MOV             R1, R4|33-70
81144|code|MOVW            R0, #0x3EA|64-242-234-48
81148|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-56-237
81152|code|MOV             R1, R8|65-70
81154|code|MOV             R4, R0|4-70
81156|code|CMP             R0, #0|0-40
81158|code|BNE             loc_13CEA|240-209
81160|code|MOVW            R0, #0x497C|68-246-124-16
81164|code|MOVW            R1, #0x39B|64-242-155-49
81168|code|MOVT.W          R0, #1|192-242-1-0
81172|code|BLX             _Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|254-247-148-234
81176|code|MOV             R0, #0x14DE4|68-246-228-80-192-242-1-0
81184|code|BLX             gettext|254-247-196-236
81188|code|MOV             R1, R8|65-70
81190|code|BL              sub_137F0|255-247-99-253
81194|code|MOV             R0, R4|32-70
81196|code|ADD             SP, SP, #0x1C|7-176
81198|code|POP.W           {R4-R11,PC}|189-232-240-143
81202|code|MOV             R1, R5|41-70
81204|code|MOVW            R0, #0x3EA|64-242-234-48
81208|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-26-237
81212|code|CMP.W           R8, #0|184-241-0-15
81216|code|BNE             loc_13CD8|202-209
81218|code|MOV             R4, R0|4-70
81220|code|CMP             R0, #0|0-40
81222|code|BNE.W           loc_13E52|64-240-132-128
81226|code|MOVW            R2, #0x50E0|69-242-224-2
81230|code|MOVS            R0, #0|0-32
81232|code|MOVT.W          R2, #1|192-242-1-2
81236|code|STR             R0, [SP]|0-144
81238|code|MOV             R3, R2|19-70
81240|code|MOV             R1, R0|1-70
81242|code|ADD             R4, SP, #8|2-172
81244|code|STR             R4, [SP,#4]|1-148
81246|code|BLX             _Z10init_bsockP3JCRiPKcS2_iP8sockaddr; init_bsock(JCR *,int,char const*,char const*,int,sockaddr *)|254-247-26-235
81250|code|MOV             R11, #0x267F8|70-242-248-123-192-242-2-11
81258|code|MOV             R8, R0|128-70
81260|code|MOVW            R0, #0x4D50|68-246-80-80
81264|code|MOVS            R4, #0|0-36
81266|code|MOVT.W          R0, #1|192-242-1-0
81270|code|MOV             R5, R4|37-70
81272|code|BLX             gettext|254-247-152-236
81276|code|BL              sub_13724|255-247-210-252
81280|code|MOV             R0, #0x1497C|68-246-124-16-192-242-1-0
81288|code|MOVW            R1, #0x3A6|64-242-166-49
81292|code|BLX             _Z9b_LockResPKci; b_LockRes(char const*,int)|254-247-118-235
81296|code|B               loc_13DAE|13-224
81298|code|MOVW            R0, #0x4D68|68-246-104-80
81302|code|ADDS            R5, #1|1-53
81304|code|MOVT.W          R0, #1|192-242-1-0
81308|code|BLX             gettext|254-247-134-236
81312|code|LDR             R6, [R4,#0x64]|102-110
81314|code|LDR             R2, [R4,#4]|98-104
81316|code|MOV             R1, R5|41-70
81318|code|LDR             R3, [R4,#0x68]|163-110
81320|code|STR             R6, [SP]|0-150
81322|code|BL              sub_137F0|255-247-33-253
81326|code|MOV             R1, R4|33-70
81328|code|MOVW            R0, #0x3EA|64-242-234-48
81332|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-220-236
81336|code|MOV             R4, R0|4-70
81338|code|CMP             R0, #0|0-40
81340|code|BNE             loc_13D92|233-209
81342|code|MOVW            R0, #0x497C|68-246-124-16
81346|code|MOV.W           R1, #0x3AC|79-244-107-113
81350|code|MOVT.W          R0, #1|192-242-1-0
81354|code|BLX             _Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|254-247-58-234
81358|code|MOV             R0, #0x14D7C|68-246-124-80-192-242-1-0
81366|code|LDR.W           R6, [R11]|219-248-0-96
81370|code|BLX             gettext|254-247-104-236
81374|code|MOV             R2, R8|66-70
81376|code|MOV.W           R3, #0x258|79-244-22-115
81380|code|MOV             R1, R0|1-70
81382|code|MOV             R0, R6|48-70
81384|code|BL              sub_13874|255-247-68-253
81388|code|CMP             R0, #0|0-40
81390|code|BLT             loc_13D2A|156-219
81392|code|LDR.W           R0, [R8,#8]|216-248-8-0
81396|code|BLX             _Z11is_a_numberPKc; is_a_number(char const*)|254-247-182-236
81400|code|CBNZ            R0, loc_13E12|88-185
81402|code|MOV             R0, #0x14DA4|68-246-164-80-192-242-1-0
81410|code|BLX             gettext|254-247-84-236
81414|code|MOV             R2, R5|42-70
81416|code|LDR.W           R1, [R8,#8]|216-248-8-16
81420|code|BL              sub_137F0|255-247-240-252
81424|code|B               loc_13D6C|172-231
81426|code|LDR.W           R0, [R8,#8]|216-248-8-0
81430|code|MOV             R1, R4|33-70
81432|code|MOVS            R2, #0xA|10-34
81434|code|BLX             strtol|254-247-72-234
81438|code|CMP             R0, R5|168-66
81440|code|MOV             R6, R0|6-70
81442|code|ITE LE|212-191
81444|code|MOVLE           R3, #0|0-35
81446|code|MOVGT           R3, #1|1-35
81448|code|ORRS.W          R3, R3, R0,LSR#31|83-234-208-115
81452|code|BEQ             loc_13ED4|82-208
81454|code|MOV             R0, #0x14DB8|68-246-184-80-192-242-1-0
81462|code|BLX             gettext|254-247-58-236
81466|code|MOV             R1, R5|41-70
81468|code|BL              sub_137F0|255-247-216-252
81472|code|B               loc_13D6C|148-231
81474|code|MOVW            R0, #0x497C|68-246-124-16
81478|code|MOVW            R1, #0x39B|64-242-155-49
81482|code|MOVT.W          R0, #1|192-242-1-0
81486|code|BLX             _Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|254-247-248-233
81490|code|MOVW            R0, #0x497C|68-246-124-16
81494|code|MOVW            R1, #0x3C5|64-242-197-49
81498|code|MOVT.W          R0, #1|192-242-1-0
81502|code|BLX             _Z9b_LockResPKci; b_LockRes(char const*,int)|254-247-14-235
81506|code|CBZ             R7, loc_13EC6|135-179
81508|code|MOVS            R5, #0|0-37
81510|code|MOVW            R0, #0x3E9|64-242-233-48
81514|code|MOVS            R1, #0|0-33
81516|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-128-236
81520|code|ADDS            R5, #1|1-53
81522|code|LDR.W           R3, [R0,#0x84]|208-248-132-48
81526|code|MOV             R6, R0|6-70
81528|code|MOV             R0, R3|24-70
81530|code|CBZ             R3, loc_13E84|27-177
81532|code|LDR             R1, [R4,#4]|97-104
81534|code|BLX             strcmp|254-247-10-236
81538|code|CBZ             R0, loc_13EA6|128-177
81540|code|CMP             R5, R7|189-66
81542|code|BNE             loc_13E66|238-209
81544|code|MOVS            R5, #0|0-37
81546|code|B               loc_13E90|1-224
81548|code|CMP             R5, R7|189-66
81550|code|BEQ             loc_13EC6|26-208
81552|code|MOVW            R0, #0x3E9|64-242-233-48
81556|code|MOVS            R1, #0|0-33
81558|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-108-236
81562|code|ADDS            R5, #1|1-53
81564|code|LDR.W           R3, [R0,#0x84]|208-248-132-48
81568|code|MOV             R6, R0|6-70
81570|code|CMP             R3, #0|0-43
81572|code|BNE             loc_13E8C|242-209
81574|code|MOVW            R0, #0x497C|68-246-124-16
81578|code|MOV.W           R1, #0x3DC|79-244-119-113
81582|code|MOVT.W          R0, #1|192-242-1-0
81586|code|BLX             _Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|254-247-198-233
81590|code|STR.W           R4, [R10]|202-248-0-64
81594|code|MOVS            R0, #1|1-32
81596|code|STR.W           R6, [R9]|201-248-0-96
81600|code|ADD             SP, SP, #0x1C|7-176
81602|code|POP.W           {R4-R11,PC}|189-232-240-143
81606|code|MOVW            R0, #0x3E9|64-242-233-48
81610|code|MOVS            R1, #0|0-33
81612|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-80-236
81616|code|MOV             R6, R0|6-70
81618|code|B               loc_13EA6|232-231
81620|code|MOV             R0, R8|64-70
81622|code|BLX             _Z10term_bsockP5BSOCK; term_bsock(BSOCK *)|254-247-124-235
81626|code|MOV             R0, #0x1497C|68-246-124-16-192-242-1-0
81634|code|MOVW            R1, #0x3BF|64-242-191-49
81638|code|BLX             _Z9b_LockResPKci; b_LockRes(char const*,int)|254-247-202-234
81642|code|CBZ             R6, loc_13F00|78-177
81644|code|MOV             R5, R4|37-70
81646|code|MOV             R1, R4|33-70
81648|code|MOVW            R0, #0x3EA|64-242-234-48
81652|code|BLX             _Z10GetNextResiP3RES; GetNextRes(int,RES *)|254-247-60-236
81656|code|ADDS            R5, #1|1-53
81658|code|CMP             R5, R6|181-66
81660|code|MOV             R4, R0|4-70
81662|code|BNE             loc_13EEE|246-209
81664|code|MOVW            R0, #0x497C|68-246-124-16
81668|code|MOVW            R1, #0x3C3|64-242-195-49
81672|code|MOVT.W          R0, #1|192-242-1-0
81676|code|BLX             _Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|254-247-152-233
81680|code|B               loc_13E52|159-231
81682|data|ALIGN 4|0-191
81684|code|PUSH            {R4-R6,LR}|112-181
81686|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
81694|code|SUB.W           SP, SP, #0x1380|173-245-156-93
81698|code|LDR             R3, [R4,#(dword_2684C - 0x26838)]|99-105
81700|code|SUB             SP, SP, #0x10|132-176
81702|code|CMP             R3, #3|3-43
81704|code|BGT             loc_13FDA|87-220
81706|code|IT NE|24-191
81708|code|MOVNE           R1, #0|0-33
81710|code|BEQ             loc_13FF4|97-208
81712|code|MOVW            R2, #0x540C|69-242-12-66
81716|code|LDR             R0, [R4,#(dword_26854 - 0x26838)]|224-105
81718|code|MOVT.W          R2, #1|192-242-1-2
81722|code|MOVW            R4, #0x6838|70-246-56-4
81726|code|BLX             _Z10open_bpipePciPKc; open_bpipe(char *,int,char const*)|254-247-200-235
81730|code|MOVT.W          R4, #2|192-242-2-4
81734|code|MOV             R5, R0|5-70
81736|code|CBNZ            R0, loc_13F58|48-185
81738|code|B               loc_14002|90-224
81740|code|MOV             R0, #0x14C48|68-246-72-64-192-242-1-0
81748|code|BL              sub_137F0|255-247-76-252
81752|code|MOVW            R1, #0x1388|65-242-136-49
81756|code|ADD             R0, SP, #8|2-168
81758|code|LDR             R2, [R5,#0x10]|42-105
81760|code|BLX             _Z6bfgetsPciP8_IO_FILE; bfgets(char *,int,_IO_FILE *)|254-247-0-235
81764|code|ADD             R1, SP, #8|2-169
81766|code|MOV             R4, R0|4-70
81768|code|CMP             R0, #0|0-40
81770|code|BNE             loc_13F4C|239-209
81772|code|MOV             R0, R5|40-70
81774|code|BLX             _Z11close_bpipeP5BPIPE; close_bpipe(BPIPE *)|254-247-128-233
81778|code|MOV             R5, R0|5-70
81780|code|CBNZ            R0, loc_13F80|32-185
81782|code|MOVS            R0, #1|1-32
81784|code|ADD.W           SP, SP, #0x1380|13-245-156-93
81788|code|ADD             SP, SP, #0x10|4-176
81790|code|POP             {R4-R6,PC}|112-189
81792|code|BLX             __errno_location|254-247-154-235
81796|code|MOVS            R2, #4|4-34
81798|code|MOVS            R1, #0x4D ; 'M'|77-33
81800|code|LDR             R3, [R0]|3-104
81802|code|MOV             R6, R0|6-70
81804|code|MOV             R0, #0x151C0|69-242-192-16-192-242-1-0
81812|code|STR             R3, [SP,#4]|1-147
81814|code|BLX             _Z18sm_get_pool_memoryPKcii; sm_get_pool_memory(char const*,int,int)|254-247-96-234
81818|code|STR             R0, [SP]|0-144
81820|code|STRB            R4, [R0]|4-112
81822|code|MOVW            R0, #0x51F4|69-242-244-16
81826|code|LDR             R3, [SP,#4]|1-155
81828|code|MOVT.W          R0, #1|192-242-1-0
81832|code|STR             R5, [SP,#4]|1-149
81834|code|STR             R3, [R6]|51-96
81836|code|BLX             gettext|254-247-126-235
81840|code|MOV             R4, R0|4-70
81842|code|MOV             R0, SP|104-70
81844|code|BLX             _ZN6berrno9bstrerrorEv; berrno::bstrerror(void)|254-247-172-234
81848|code|MOV             R1, R0|1-70
81850|code|MOV             R0, R4|32-70
81852|code|BL              sub_137F0|255-247-24-252
81856|code|MOVW            R0, #0x51C0|69-242-192-16
81860|code|LDR             R2, [SP]|0-154
81862|code|MOVT.W          R0, #1|192-242-1-0
81866|code|MOVS            R1, #0x54 ; 'T'|84-33
81868|code|BLX             _Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|254-247-98-234
81872|code|MOVS            R0, #1|1-32
81874|code|ADD.W           SP, SP, #0x1380|13-245-156-93
81878|code|ADD             SP, SP, #0x10|4-176
81880|code|POP             {R4-R6,PC}|112-189
81882|code|MOV             R0, #0x15188|69-242-136-16-192-242-1-0
81890|code|BLX             gettext|254-247-100-235
81894|code|BL              sub_13724|255-247-157-251
81898|code|MOVS            R0, #1|1-32
81900|code|ADD.W           SP, SP, #0x1380|13-245-156-93
81904|code|ADD             SP, SP, #0x10|4-176
81906|code|POP             {R4-R6,PC}|112-189
81908|code|MOVS            R1, #0|0-33
81910|code|LDR             R0, [R4,#(dword_26858 - 0x26838)]|32-106
81912|code|MOVS            R2, #0xA|10-34
81914|code|BLX             strtol|254-247-88-233
81918|code|MOV             R1, R0|1-70
81920|code|B               loc_13F30|150-231
81922|code|BLX             __errno_location|254-247-90-235
81926|code|MOVS            R1, #0x4D ; 'M'|77-33
81928|code|MOVS            R2, #4|4-34
81930|code|LDR             R3, [R0]|3-104
81932|code|MOV             R6, R0|6-70
81934|code|MOV             R0, #0x151C0|69-242-192-16-192-242-1-0
81942|code|STR             R3, [SP,#0xC]|3-147
81944|code|BLX             _Z18sm_get_pool_memoryPKcii; sm_get_pool_memory(char const*,int,int)|254-247-30-234
81948|code|MOV             R3, R0|3-70
81950|code|STR             R0, [SP,#8]|2-144
81952|code|STRB            R5, [R3]|29-112
81954|code|MOVW            R0, #0x51D0|69-242-208-16
81958|code|LDR             R3, [SP,#0xC]|3-155
81960|code|MOVT.W          R0, #1|192-242-1-0
81964|code|STR             R3, [R6]|51-96
81966|code|BLX             gettext|254-247-62-235
81970|code|LDR             R3, [R6]|51-104
81972|code|LDR             R4, [R4,#(dword_26854 - 0x26838)]|228-105
81974|code|STR             R3, [SP,#0xC]|3-147
81976|code|MOV             R5, R0|5-70
81978|code|ADD             R0, SP, #8|2-168
81980|code|BLX             _ZN6berrno9bstrerrorEv; berrno::bstrerror(void)|254-247-104-234
81984|code|MOV             R1, R4|33-70
81986|code|MOV             R2, R0|2-70
81988|code|MOV             R0, R5|40-70
81990|code|BL              sub_137F0|255-247-211-251
81994|code|MOVW            R0, #0x51C0|69-242-192-16
81998|code|LDR             R2, [SP,#8]|2-154
82000|code|MOVT.W          R0, #1|192-242-1-0
82004|code|MOVS            R1, #0x54 ; 'T'|84-33
82006|code|BLX             _Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|254-247-30-234
82010|code|B               loc_13F76|140-231
82012|code|PUSH            {R4-R6,LR}|112-181
82014|code|MOV             R6, #0x26838|70-246-56-6-192-242-2-6
82022|code|LDR             R3, [R6,#(dword_2684C - 0x26838)]|115-105
82024|code|CMP             R3, #1|1-43
82026|code|BLE             loc_1408A|14-221
82028|code|ADD.W           R5, R6, #0x18|6-241-24-5
82032|code|MOVS            R4, #1|1-36
82034|code|MOVW            R0, #0x5210|69-242-16-32
82038|code|LDR.W           R1, [R5,#4]!|85-248-4-31
82042|code|MOVT.W          R0, #1|192-242-1-0
82046|code|ADDS            R4, #1|1-52
82048|code|BL              sub_137F0|255-247-182-251
82052|code|LDR             R3, [R6,#(dword_2684C - 0x26838)]|115-105
82054|code|CMP             R3, R4|163-66
82056|code|BGT             loc_14072|243-220
82058|code|MOV             R0, #0x14F6C|68-246-108-112-192-242-1-0
82066|code|BL              sub_13724|255-247-71-251
82070|code|MOVS            R0, #1|1-32
82072|code|POP             {R4-R6,PC}|112-189
82074|data|ALIGN 4|0-191
82076|code|PUSH            {R4-R6,LR}|112-181
82078|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
82086|code|SUB             SP, SP, #8|130-176
82088|code|LDR             R3, [R4,#(dword_2684C - 0x26838)]|99-105
82090|code|CMP             R3, #3|3-43
82092|code|BGT             loc_14104|42-220
82094|code|CMP             R3, #1|1-43
82096|code|BEQ             loc_140DC|20-208
82098|code|CMP             R3, #3|3-43
82100|code|LDR             R0, [R4,#(dword_26854 - 0x26838)]|224-105
82102|code|ITET NE|22-191
82104|code|MOVNEW          R1, #0x5214|69-242-20-33
82108|code|LDREQ           R1, [R4,#(dword_26858 - 0x26838)]|33-106
82110|code|MOVTNE.W        R1, #1|192-242-1-1
82114|code|MOVW            R4, #0x6838|70-246-56-4
82118|code|BLX             fopen64|254-247-18-235
82122|code|MOVT.W          R4, #2|192-242-2-4
82126|code|MOV             R5, R0|5-70
82128|code|CBZ             R0, loc_1411A|24-179
82130|code|STR.W           R0, [R4,#(dword_268DC - 0x26838)]|196-248-164-0
82134|code|MOVS            R0, #1|1-32
82136|code|ADD             SP, SP, #8|2-176
82138|code|POP             {R4-R6,PC}|112-189
82140|code|MOVW            R5, #0x6828|70-246-40-5
82144|code|LDR.W           R0, [R4,#(dword_268DC - 0x26838)]; stream|212-248-164-0
82148|code|MOVT.W          R5, #2|192-242-2-5
82152|code|LDR             R3, [R5]|43-104
82154|code|CMP             R0, R3|152-66
82156|code|BEQ             loc_140D6|243-208
82158|code|BLX             fclose|254-247-174-234
82162|code|LDR             R3, [R5]|43-104
82164|code|MOVS            R2, #0|0-34
82166|code|MOVS            R0, #1|1-32
82168|code|STRB.W          R2, [R4,#(byte_268E0 - 0x26838)]|132-248-168-32
82172|code|STR.W           R3, [R4,#(dword_268DC - 0x26838)]|196-248-164-48
82176|code|ADD             SP, SP, #8|2-176
82178|code|POP             {R4-R6,PC}|112-189
82180|code|MOV             R0, #aTooManyArgumen_0; msgid|69-242-24-32-192-242-1-0
82188|code|BLX             gettext|254-247-206-234
82192|code|BL              sub_13724|255-247-8-251
82196|code|MOVS            R0, #1|1-32
82198|code|ADD             SP, SP, #8|2-176
82200|code|POP             {R4-R6,PC}|112-189
82202|code|BLX             __errno_location|254-247-206-234
82206|code|MOVS            R1, #0x4D ; 'M'; int|77-33
82208|code|MOVS            R2, #4; int|4-34
82210|code|LDR             R3, [R0]|3-104
82212|code|MOV             R6, R0|6-70
82214|code|MOV             R0, #aLibBerrnoH; char *|69-242-192-16-192-242-1-0
82222|code|STR             R3, [SP,#0x18+var_14]|1-147
82224|code|BLX             _Z18sm_get_pool_memoryPKcii; sm_get_pool_memory(char const*,int,int)|254-247-146-233
82228|code|STR             R0, [SP,#0x18+var_18]|0-144
82230|code|STRB            R5, [R0]|5-112
82232|code|MOVW            R0, #0x5244|69-242-68-32
82236|code|LDR             R3, [SP,#0x18+var_14]|1-155
82238|code|MOVT.W          R0, #1; msgid|192-242-1-0
82242|code|STR             R3, [R6]|51-96
82244|code|BLX             gettext|254-247-178-234
82248|code|LDR             R3, [R6]|51-104
82250|code|LDR             R4, [R4,#(dword_26854 - 0x26838)]|228-105
82252|code|STR             R3, [SP,#0x18+var_14]|1-147
82254|code|MOV             R5, R0|5-70
82256|code|MOV             R0, SP; this|104-70
82258|code|BLX             _ZN6berrno9bstrerrorEv; berrno::bstrerror(void)|254-247-222-233
82262|code|MOV             R1, R4|33-70
82264|code|MOV             R2, R0|2-70
82266|code|MOV             R0, R5|40-70
82268|code|BL              sub_137F0|255-247-72-251
82272|code|MOV             R0, #aLibBerrnoH; char *|69-242-192-16-192-242-1-0
82280|code|MOVS            R1, #0x54 ; 'T'; int|84-33
82282|code|LDR             R2, [SP,#0x18+var_18]; char *|0-154
82284|code|BLX             _Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|254-247-146-233
82288|code|B               loc_140D6|177-231
82290|data|ALIGN 4|0-191
82292|code|MOVW            R3, #0x6838|70-246-56-3
82296|code|MOVS            R2, #1|1-34
82298|code|MOVT.W          R3, #2|192-242-2-3
82302|code|STRB.W          R2, [R3,#(byte_268E0 - 0x26838)]|131-248-168-32
82306|code|B               sub_1409C|139-231
82308|code|MOVW            R3, #0x6838|70-246-56-3
82312|code|MOVS            R2, #0|0-34
82314|code|MOVT.W          R3, #2|192-242-2-3
82318|code|STRB.W          R2, [R3,#(byte_268E0 - 0x26838)]|131-248-168-32
82322|code|B               sub_1409C|131-231
82324|code|PUSH            {R4-R6,LR}|112-181
82326|code|MOV             R4, #0x26838|70-246-56-4-192-242-2-4
82334|code|SUB             SP, SP, #8|130-176
82336|code|LDR             R3, [R4,#(dword_2684C - 0x26838)]|99-105
82338|code|CMP             R3, #2|2-43
82340|code|BGT             loc_141D0|20-220
82342|code|CMP             R3, #1|1-43
82344|code|BEQ             loc_141E6|29-208
82346|code|MOV             R5, R1|13-70
82348|code|MOVW            R1, #0x5170|69-242-112-17
82352|code|LDR             R0, [R4,#(dword_26854 - 0x26838)]|224-105
82354|code|MOVT.W          R1, #1|192-242-1-1
82358|code|BLX             fopen64|254-247-154-234
82362|code|MOV             R6, R0|6-70
82364|code|CBZ             R0, loc_141FC|240-177
82366|code|MOV             R1, R5|41-70
82368|code|BL              sub_1397C|255-247-220-251
82372|code|MOV             R0, R6; stream|48-70
82374|code|BLX             fclose|254-247-66-234
82378|code|MOVS            R0, #1|1-32
82380|code|ADD             SP, SP, #8|2-176
82382|code|POP             {R4-R6,PC}|112-189
82384|code|MOV             R0, #aTooManyArgumen_1; msgid|69-242-108-32-192-242-1-0
82392|code|BLX             gettext|254-247-104-234
82396|code|BL              sub_13724|255-247-162-250
82400|code|MOVS            R0, #1|1-32
82402|code|ADD             SP, SP, #8|2-176
82404|code|POP             {R4-R6,PC}|112-189
82406|code|MOV             R0, #aFirstArgumentT; msgid|69-242-148-32-192-242-1-0
82414|code|BLX             gettext|254-247-94-234
82418|code|BL              sub_13724|255-247-151-250
82422|code|MOVS            R0, #1|1-32
82424|code|ADD             SP, SP, #8|2-176
82426|code|POP             {R4-R6,PC}|112-189
82428|code|BLX             __errno_location|254-247-92-234
82432|code|MOVS            R1, #0x4D ; 'M'; int|77-33
82434|code|MOVS            R2, #4; int|4-34
82436|code|LDR             R3, [R0]|3-104
82438|code|MOV             R5, R0|5-70
82440|code|MOV             R0, #aLibBerrnoH; char *|69-242-192-16-192-242-1-0
82448|code|STR             R3, [SP,#0x18+var_14]|1-147
82450|code|BLX             _Z18sm_get_pool_memoryPKcii; sm_get_pool_memory(char const*,int,int)|254-247-34-233
82454|code|STR             R0, [SP,#0x18+var_18]|0-144
82456|code|STRB            R6, [R0]|6-112
82458|code|MOVW            R0, #0x52CC|69-242-204-32
82462|code|LDR             R3, [SP,#0x18+var_14]|1-155
82464|code|MOVT.W          R0, #1; msgid|192-242-1-0
82468|code|STR             R3, [R5]|43-96
82470|code|BLX             gettext|254-247-66-234
82474|code|LDR             R4, [R4,#(dword_26854 - 0x26838)]|228-105
82476|code|MOV             R5, R0|5-70
82478|code|MOV             R0, SP; this|104-70
82480|code|BLX             _ZN6berrno9bstrerrorEv; berrno::bstrerror(void)|254-247-110-233
82484|code|MOV             R1, R4|33-70
82486|code|MOV             R2, R0|2-70
82488|code|MOV             R0, R5|40-70
82490|code|BL              sub_137F0|255-247-217-250
82494|code|MOV             R0, #aLibBerrnoH; char *|69-242-192-16-192-242-1-0
82502|code|MOVS            R1, #0x54 ; 'T'; int|84-33
82504|code|LDR             R2, [SP,#0x18+var_18]; char *|0-154
82506|code|BLX             _Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|254-247-36-233
82510|code|B               loc_141CA|188-231
82512|code|PUSH            {R4-R6,LR}|112-181
82514|code|MOV             R5, R0|5-70
82516|code|MOV             R4, R1|12-70
82518|code|CMP             R1, #0|0-41
82520|code|BEQ             loc_142C0|50-208
82522|code|CMP             R5, #0|0-45
82524|code|MOVW            R3, #0x3E9|64-242-233-51
82528|code|ITTE LT|186-191
82530|code|NEGLT           R5, R5|109-66
82532|code|MOVLT           R6, #0|0-38
82534|code|MOVGE           R6, #1|1-38
82536|code|CMP             R5, R3|157-66
82538|code|BEQ             loc_142A8|29-208
82540|code|MOVW            R3, #0x3EA|64-242-234-51
82544|code|CMP             R5, R3|157-66
82546|code|BNE             loc_14294|15-209
82548|code|MOV             R0, #aDirectorNameSA; msgid|69-242-212-80-192-242-1-0
82556|code|BLX             gettext|254-247-22-234
82560|code|LDR             R1, [R4,#4]|97-104
82562|code|LDR             R2, [R4,#0x68]|162-110
82564|code|LDR             R3, [R4,#0x64]|99-110
82566|code|BLX             printf|254-247-74-232
82570|code|CBZ             R6, locret_14292|22-177
82572|code|LDR             R4, [R4]|36-104
82574|code|CMP             R4, #0|0-44
82576|code|BNE             loc_1425A|227-209
82578|code|POP             {R4-R6,PC}|112-189
82580|code|MOV             R0, #aUnknownResourc; msgid|69-242-0-96-192-242-1-0
82588|code|BLX             gettext|254-247-6-234
82592|code|MOV             R1, R5|41-70
82594|code|BLX             printf|254-247-60-232
82598|code|B               loc_1428A|240-231
82600|code|MOV             R0, #aConsoleNameSRc; msgid|69-242-172-80-192-242-1-0
82608|code|BLX             gettext|254-247-252-233
82612|code|LDR             R1, [R4,#4]|97-104
82614|code|LDR             R2, [R4,#0x64]|98-110
82616|code|LDR             R3, [R4,#0x68]|163-110
82618|code|BLX             printf|254-247-48-232
82622|code|B               loc_1428A|228-231
82624|code|MOV             R0, #aNoRecordForDS; msgid|69-242-148-80-192-242-1-0
82632|code|BLX             gettext|254-247-240-233
82636|code|MOV             R4, R0|4-70
82638|code|MOV             R0, R5; int|40-70
82640|code|BLX             _Z10res_to_stri; res_to_str(int)|254-247-108-233
82644|code|MOV             R1, R5|41-70
82646|code|MOV             R2, R0|2-70
82648|code|MOV             R0, R4; format|32-70
82650|code|POP.W           {R4-R6,LR}|189-232-112-64
82654|code|B.W             j_printf|254-247-27-184
82658|data|ALIGN 4|0-191
82660|code|PUSH            {R4-R6,LR}|112-181
82662|code|MOV             R5, R1|13-70
82664|code|MOV             R4, R0|4-70
82666|code|CMP             R0, #0|0-40
82668|code|BNE             loc_1436C|62-209
82670|code|B               locret_14432|160-224
82672|code|LDR             R2, [R4,#0x68]; void *|162-110
82674|code|CBZ             R2, loc_14302|50-177
82676|code|MOVW            R0, #0x561C|69-242-28-96
82680|code|MOVS            R1, #0xD6; int|214-33
82682|code|MOVT.W          R0, #1; char *|192-242-1-0
82686|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-134-232
82690|code|LDR.W           R0, [R4,#0x90]|212-248-144-0
82694|code|CBZ             R0, loc_1430C|8-177
82696|code|BLX             _Z16free_tls_contextP11TLS_Context; free_tls_context(TLS_Context *)|254-247-14-232
82700|code|LDR             R2, [R4,#0x74]; void *|98-111
82702|code|CBZ             R2, loc_1431E|50-177
82704|code|MOVW            R0, #0x561C|69-242-28-96
82708|code|MOVS            R1, #0xDC; int|220-33
82710|code|MOVT.W          R0, #1; char *|192-242-1-0
82714|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-120-232
82718|code|LDR             R2, [R4,#0x78]; void *|162-111
82720|code|CBZ             R2, loc_14330|50-177
82722|code|MOVW            R0, #0x561C|69-242-28-96
82726|code|MOVS            R1, #0xDF; int|223-33
82728|code|MOVT.W          R0, #1; char *|192-242-1-0
82732|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-110-232
82736|code|LDR             R2, [R4,#0x7C]; void *|226-111
82738|code|CBZ             R2, loc_14342|50-177
82740|code|MOVW            R0, #0x561C|69-242-28-96
82744|code|MOVS            R1, #0xE2; int|226-33
82746|code|MOVT.W          R0, #1; char *|192-242-1-0
82750|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-102-232
82754|code|LDR.W           R2, [R4,#0x80]; void *|212-248-128-32
82758|code|CBZ             R2, loc_14356|50-177
82760|code|MOVW            R0, #0x561C|69-242-28-96
82764|code|MOVS            R1, #0xE5; int|229-33
82766|code|MOVT.W          R0, #1; char *|192-242-1-0
82770|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-92-232
82774|code|MOVW            R0, #0x561C|69-242-28-96
82778|code|MOV             R2, R4; void *|34-70
82780|code|MOVT.W          R0, #1; char *|192-242-1-0
82784|code|MOVS            R1, #0xEC; int|236-33
82786|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-84-232
82790|code|MOV             R4, R6|52-70
82792|code|CMP             R6, #0|0-46
82794|code|BEQ             locret_14432|98-208
82796|code|LDR             R2, [R4,#4]; void *|98-104
82798|code|LDR             R6, [R4]|38-104
82800|code|CBZ             R2, loc_14380|50-177
82802|code|MOVW            R0, #0x561C|69-242-28-96
82806|code|MOVS            R1, #0xB6; int|182-33
82808|code|MOVT.W          R0, #1; char *|192-242-1-0
82812|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-70-232
82816|code|LDR             R2, [R4,#8]; void *|162-104
82818|code|CBZ             R2, loc_14392|50-177
82820|code|MOVW            R0, #0x561C|69-242-28-96
82824|code|MOVS            R1, #0xB9; int|185-33
82826|code|MOVT.W          R0, #1; char *|192-242-1-0
82830|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-62-232
82834|code|MOVW            R3, #0x3E9|64-242-233-51
82838|code|CMP             R5, R3|157-66
82840|code|BEQ             loc_143B6|13-208
82842|code|MOVW            R3, #0x3EA|64-242-234-51
82846|code|CMP             R5, R3|157-66
82848|code|BEQ             loc_142F0|166-208
82850|code|MOV             R0, #aUnknownResourc; msgid|69-242-0-96-192-242-1-0
82858|code|BLX             gettext|254-247-128-233
82862|code|MOV             R1, R5|41-70
82864|code|BLX             printf|253-247-180-239
82868|code|B               loc_14356|207-231
82870|code|LDR             R2, [R4,#0x64]; void *|98-110
82872|code|CBZ             R2, loc_143C8|50-177
82874|code|MOVW            R0, #0x561C|69-242-28-96
82878|code|MOVS            R1, #0xBF; int|191-33
82880|code|MOVT.W          R0, #1; char *|192-242-1-0
82884|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-34-232
82888|code|LDR             R2, [R4,#0x68]; void *|162-110
82890|code|CBZ             R2, loc_143DA|50-177
82892|code|MOVW            R0, #0x561C|69-242-28-96
82896|code|MOVS            R1, #0xC2; int|194-33
82898|code|MOVT.W          R0, #1; char *|192-242-1-0
82902|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-26-232
82906|code|LDR.W           R0, [R4,#0x90]|212-248-144-0
82910|code|CBZ             R0, loc_143E4|8-177
82912|code|BLX             _Z16free_tls_contextP11TLS_Context; free_tls_context(TLS_Context *)|253-247-162-239
82916|code|LDR             R2, [R4,#0x74]; void *|98-111
82918|code|CBZ             R2, loc_143F6|50-177
82920|code|MOVW            R0, #0x561C|69-242-28-96
82924|code|MOVS            R1, #0xC8; int|200-33
82926|code|MOVT.W          R0, #1; char *|192-242-1-0
82930|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-12-232
82934|code|LDR             R2, [R4,#0x78]; void *|162-111
82936|code|CBZ             R2, loc_14408|50-177
82938|code|MOVW            R0, #0x561C|69-242-28-96
82942|code|MOVS            R1, #0xCB; int|203-33
82944|code|MOVT.W          R0, #1; char *|192-242-1-0
82948|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|254-247-2-232
82952|code|LDR             R2, [R4,#0x7C]; void *|226-111
82954|code|CBZ             R2, loc_1441A|50-177
82956|code|MOVW            R0, #0x561C|69-242-28-96
82960|code|MOVS            R1, #0xCE; int|206-33
82962|code|MOVT.W          R0, #1; char *|192-242-1-0
82966|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|253-247-250-239
82970|code|LDR.W           R2, [R4,#0x80]; void *|212-248-128-32
82974|code|CMP             R2, #0|0-42
82976|code|BEQ             loc_14356|153-208
82978|code|MOVW            R0, #0x561C|69-242-28-96
82982|code|MOVS            R1, #0xD1; int|209-33
82984|code|MOVT.W          R0, #1; char *|192-242-1-0
82988|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|253-247-238-239
82992|code|B               loc_14356|145-231
82994|code|POP             {R4-R6,PC}|112-189
82996|code|PUSH.W          {R4-R11,LR}|45-233-240-79
83000|code|MOV             R6, #0x26400|70-242-0-70-192-242-2-6
83008|code|LDR             R3, [R1]|11-104
83010|code|LDR             R5, [R6]|53-104
83012|code|SUB             SP, SP, #0x1C; char *|135-176
83014|code|MOV             R9, R0|129-70
83016|code|MOV             R10, R2|146-70
83018|code|SUBS            R5, R0, R5|69-27
83020|code|ADD.W           R11, R1, #0x20 ; ' '|1-241-32-11
83024|code|MOVS            R4, #0|0-36
83026|code|ADD.W           R8, R5, R5,LSL#1|5-235-69-8
83030|code|MOV.W           R8, R8,LSL#2|79-234-136-8
83034|code|CBNZ            R3, loc_14464|27-185
83036|code|B               loc_144CC|54-224
83038|code|LDR.W           R3, [R11],#0x20|91-248-32-59
83042|code|CBZ             R3, loc_144CC|155-179
83044|code|LDR.W           R2, [R11,#-0xC]|91-248-12-44
83048|code|MOV             R3, #0x26980|70-246-128-19-192-242-2-3
83056|code|AND.W           R1, R4, #7|4-240-7-1
83060|code|TST.W           R2, #1|18-240-1-15
83064|code|ADD.W           R3, R3, R4,ASR#3|3-235-228-3
83068|code|ADD.W           R4, R4, #1|4-241-1-4
83072|code|BEQ             loc_1445E|237-208
83074|code|LDRB            R3, [R3,#0x14]|27-125
83076|code|ASRS            R3, R1|11-65
83078|code|ANDS.W          R7, R3, #1|19-240-1-7
83082|code|BNE             loc_1445E|232-209
83084|code|MOV             R0, #aSItemIsRequire; msgid|69-242-44-96-192-242-1-0
83092|code|BLX             gettext|254-247-10-233
83096|code|ADD.W           R2, R6, R8|6-235-8-2
83100|code|ADDS            R2, #4|4-50
83102|code|MOV             R3, R7; int|59-70
83104|code|ADD.W           LR, SP, #0x40+var_38|13-241-8-14
83108|code|STR             R0, [SP,#0x40+var_40]; char *|0-144
83110|code|LDM             R2, {R0-R2}|7-202
83112|code|LDR.W           R7, [R11,#-0x20]|91-248-32-124
83116|code|STR             R7, [SP,#0x40+var_3C]|1-151
83118|code|STM.W           LR, {R0-R2}|142-232-7-0
83122|code|MOV             R0, #aConsoleConfC; char *|69-242-28-96-192-242-1-0
83130|code|MOV.W           R1, #0x104; int|79-244-130-113
83134|code|MOVS            R2, #1; int|1-34
83136|code|BLX             _Z5e_msgPKciiiS0_z; e_msg(char const*,int,int,int,char const*,...)|254-247-38-233
83140|code|LDR.W           R3, [R11],#0x20|91-248-32-59
83144|code|CMP             R3, #0|0-43
83146|code|BNE             loc_14464|203-209
83148|code|CMP.W           R10, #2|186-241-2-15
83152|code|BEQ             loc_14574|80-208
83154|code|MOV             R3, #0xFFFFFC17|111-244-122-115
83158|code|ADD             R3, R9|75-68
83160|code|CMP             R3, #1|1-43
83162|code|BHI             loc_145C8|117-216
83164|code|MOVW            R0, #0x561C|69-242-28-96
83168|code|MOV.W           R1, #0x138; int|79-244-156-113
83172|code|MOVS            R2, #0x98; unsigned int|152-34
83174|code|MOVT.W          R0, #1; char *|192-242-1-0
83178|code|BLX             _Z9sm_mallocPKcij; sm_malloc(char const*,int,uint)|253-247-60-239
83182|code|MOVW            R1, #0x6980|70-246-128-17
83186|code|MOVS            R2, #0x98; n|152-34
83188|code|MOVT.W          R1, #2; src|192-242-2-1
83192|code|MOV             R8, R0|128-70
83194|code|BLX             memcpy|254-247-118-232
83198|code|LDR             R3, [R6,#(res_head - 0x26400)]|179-106
83200|code|LDR.W           R4, [R3,R5,LSL#2]|83-248-37-64
83204|code|CMP             R4, #0|0-44
83206|code|BEQ.W           loc_14632|0-240-148-128
83210|code|ADD.W           R5, R5, R5,LSL#1|5-235-69-5
83214|code|LSLS            R5, R5, #2|173-0
83216|code|B               loc_14518|2-224
83218|code|LDR             R3, [R4]|35-104
83220|code|CBZ             R3, loc_1455C|19-179
83222|code|MOV             R4, R3|28-70
83224|code|LDR             R0, [R4,#4]; s1|96-104
83226|code|LDR.W           R1, [R8,#4]; s2|216-248-4-16
83230|code|BLX             strcmp|254-247-186-232
83234|code|MOV             R7, R0|7-70
83236|code|CMP             R0, #0|0-40
83238|code|BNE             loc_14512|244-209
83240|code|MOV             R0, #aAttemptToDefin; msgid|69-242-96-96-192-242-1-0
83248|code|BLX             gettext|254-247-188-232
83252|code|ADDS            R2, R6, R5|114-25
83254|code|MOV             R3, R7; int|59-70
83256|code|MOVW            R1, #0x143; int|64-242-67-17
83260|code|LDR             R7, [R2,#4]|87-104
83262|code|MOVS            R2, #0xB; int|11-34
83264|code|STMEA.W         SP, {R0,R7}|141-232-129-0
83268|code|MOVW            R0, #0x561C|69-242-28-96
83272|code|LDR.W           R7, [R8,#4]|216-248-4-112
83276|code|MOVT.W          R0, #1; char *|192-242-1-0
83280|code|STR             R7, [SP,#0x40+var_38]|2-151
83282|code|BLX             _Z5e_msgPKciiiS0_z; e_msg(char const*,int,int,int,char const*,...)|254-247-222-232
83286|code|LDR             R3, [R4]|35-104
83288|code|CMP             R3, #0|0-43
83290|code|BNE             loc_14516|220-209
83292|code|MOVW            R3, #0x682C|70-246-44-3
83296|code|STR.W           R8, [R4]|196-248-0-128
83300|code|MOVT.W          R3, #2|192-242-2-3
83304|code|LDR             R3, [R3]|27-104
83306|code|CMP             R3, #0x59 ; 'Y'|89-43
83308|code|BGT             loc_145E0|56-220
83310|code|ADD             SP, SP, #0x1C|7-176
83312|code|POP.W           {R4-R11,PC}|189-232-240-143
83316|code|MOV             R2, #0xFFFFFC17|111-244-122-114
83320|code|ADD.W           R3, R9, R2|9-235-2-3
83324|code|CMP             R3, #1|1-43
83326|code|BHI             loc_1460A|68-216
83328|code|MOV             R4, #0x26980|70-246-128-20-192-242-2-4
83336|code|LDR             R2, [R4,#(dword_26984 - 0x26980)]; void *|98-104
83338|code|CBZ             R2, loc_145A0|74-177
83340|code|MOVW            R0, #0x561C|69-242-28-96
83344|code|MOV.W           R1, #0x11E; int|79-244-143-113
83348|code|MOVT.W          R0, #1; char *|192-242-1-0
83352|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|253-247-56-239
83356|code|MOVS            R3, #0|0-35
83358|code|STR             R3, [R4,#(dword_26984 - 0x26980)]|99-96
83360|code|LDR             R2, [R4,#(dword_26988 - 0x26980)]; void *|162-104
83362|code|MOV             R4, #0x26980|70-246-128-20-192-242-2-4
83370|code|CMP             R2, #0|0-42
83372|code|BEQ             loc_1456E|223-208
83374|code|MOVW            R0, #0x561C|69-242-28-96
83378|code|MOV.W           R1, #0x122; int|79-244-145-113
83382|code|MOVT.W          R0, #1; char *|192-242-1-0
83386|code|BLX             _Z7sm_freePKciPv; sm_free(char const*,int,void *)|253-247-40-239
83390|code|MOVS            R3, #0|0-35
83392|code|STR             R3, [R4,#(dword_26988 - 0x26980)]|163-96
83394|code|ADD             SP, SP, #0x1C|7-176
83396|code|POP.W           {R4-R11,PC}|189-232-240-143
83400|code|MOV             R0, #aUnknownResourc; msgid|69-242-0-96-192-242-1-0
83408|code|BLX             gettext|254-247-108-232
83412|code|MOV             R1, R9|73-70
83414|code|ADD             SP, SP, #0x1C|7-176
83416|code|POP.W           {R4-R11,LR}|189-232-240-79
83420|code|B.W             j_printf|253-247-156-190
83424|code|MOV             R0, R9; int|72-70
83426|code|BLX             _Z10res_to_stri; res_to_str(int)|253-247-228-239
83430|code|MOV             R3, #aInsertingSResS; char *|69-242-164-99-192-242-1-3
83438|code|MOV.W           R1, #0x148; int|79-244-164-113
83442|code|MOVS            R2, #0x5A ; 'Z'; int|90-34
83444|code|STR             R0, [SP,#0x40+var_40]|0-144
83446|code|MOVW            R0, #0x561C|69-242-28-96
83450|code|LDR.W           R4, [R8,#4]|216-248-4-64
83454|code|MOVT.W          R0, #1; char *|192-242-1-0
83458|code|STR             R4, [SP,#0x40+var_3C]|1-148
83460|code|BLX             _Z5d_msgPKciiS0_z; d_msg(char const*,int,int,char const*,...)|253-247-4-238
83464|code|B               loc_1456E|177-231
83466|code|MOV             R0, #aUnknownResourc; msgid|69-242-0-96-192-242-1-0
83474|code|BLX             gettext|254-247-76-232
83478|code|STR.W           R9, [SP,#0x40+var_3C]|205-248-4-144
83482|code|MOV.W           R1, #0x116; int|79-244-139-113
83486|code|MOVS            R2, #4; int|4-34
83488|code|MOVS            R3, #0; int|0-35
83490|code|STR             R0, [SP,#0x40+var_40]; char *|0-144
83492|code|MOV             R0, #aConsoleConfC; char *|69-242-28-96-192-242-1-0
83500|code|BLX             _Z5e_msgPKciiiS0_z; e_msg(char const*,int,int,int,char const*,...)|254-247-112-232
83504|code|B               loc_14580|166-231
83506|code|STR.W           R8, [R3,R5,LSL#2]|67-248-37-128
83510|code|B               loc_1456E|154-231
83512|code|PUSH.W          {R4-R8,LR}|45-233-240-65
83516|code|MOV             R4, #0x26400|70-242-0-68-192-242-2-4
83524|code|MOV             R3, R2|19-70
83526|code|LDR             R2, [R4,#(dword_2642C - 0x26400)]|226-106
83528|code|SUB             SP, SP, #0x18|134-176
83530|code|ADDS            R6, R4, #4|38-29
83532|code|MOV             R5, #0x26980|70-246-128-21-192-242-2-5
83540|code|MOV             R8, R0|128-70
83542|code|STR             R2, [SP,#4]|1-146
83544|code|LDR             R2, [R4,#(r_last - 0x26400)]|34-107
83546|code|LDR             R7, [R4]|39-104
83548|code|STR             R2, [SP,#0xC]|3-146
83550|code|MOVS            R2, #0|0-34
83552|code|LDR             R4, [R4,#(res_head - 0x26400)]|164-106
83554|code|STR             R7, [SP,#8]|2-151
83556|code|STR             R6, [SP,#0x10]|4-150
83558|code|STR             R4, [SP,#0x14]|5-148
83560|code|STR             R5, [SP]|0-149
83562|code|BLX             _ZN6CONFIG4initEPKcPFvS1_iP13s_lex_contextS1_zEiPviiiP9RES_TABLEPP3RES; CONFIG::init(char const*,void (*)(char const*,int,s_lex_context *,char const*,...),int,void *,int,int,int,RES_TABLE *,RES **)|253-247-68-238
83566|code|MOV             R0, R8|64-70
83568|code|ADD             SP, SP, #0x18|6-176
83570|code|POP.W           {R4-R8,LR}|189-232-240-65
83574|code|B.W             j__ZN6CONFIG12parse_configEv; CONFIG::parse_config(void)|253-247-37-191
83578|data|ALIGN 4|0-191
83580|code|PUSH.W          {R4-R10,LR}|45-233-240-71
83584|code|SUB             SP, SP, #0x90|164-176
83586|code|LDR             R6, [R0,#0x34]|70-107
83588|code|MOVS            R3, #1|1-35
83590|code|MOVS            R0, #0|0-32
83592|code|MOV             R5, R2|21-70
83594|code|STR             R0, [SP,#8]|2-144
83596|code|STR             R3, [SP,#0xC]|3-147
83598|code|CMP             R2, #0|0-42
83600|code|BEQ.W           loc_147D2|0-240-159-128
83604|code|ADD             R7, SP, #0x10|4-175
83606|code|LDR             R1, [R2,#4]|81-104
83608|code|MOVS            R2, #0x80|128-34
83610|code|MOV             R0, R7|56-70
83612|code|BLX             _Z8bstrncpyPcPKci; bstrncpy(char *,char const*,int)|253-247-194-238
83616|code|MOV             R0, R7|56-70
83618|code|BLX             _Z11bash_spacesPc; bash_spaces(char *)|253-247-236-239
83622|code|LDRB.W          R4, [R5,#0x71]|149-248-113-64
83626|code|LDR.W           R8, [R5,#0x6C]|213-248-108-128
83630|code|CBNZ            R4, loc_14708|92-187
83632|code|LDRB.W          R9, [R5,#0x70]|149-248-112-144
83636|code|LDR.W           R10, [R5,#0x90]|213-248-144-160
83640|code|CMP.W           R9, #0|185-241-0-15
83644|code|IT NE|24-191
83646|code|MOVNE           R4, #2|2-36
83648|code|MOV.W           R1, #0x12C|79-244-150-113
83652|code|MOV             R0, R6|48-70
83654|code|BLX             _Z17start_bsock_timerP5BSOCKj; start_bsock_timer(BSOCK *,uint)|253-247-254-239
83658|code|MOVW            R1, #0x67D8|70-242-216-113
83662|code|MOV             R2, R7|58-70
83664|code|MOVT.W          R1, #2|192-242-2-1
83668|code|MOV             R5, R0|5-70
83670|code|MOV             R0, R6|48-70
83672|code|BLX             _ZN5BSOCK5fsendEPKcz; BSOCK::fsend(char const*,...)|253-247-140-239
83676|code|MOV             R0, R6|48-70
83678|code|MOV             R1, R8|65-70
83680|code|ADD             R2, SP, #8|2-170
83682|code|ADD             R3, SP, #0xC|3-171
83684|code|BLX             _Z16cram_md5_respondP5BSOCKPKcPiS3_; cram_md5_respond(BSOCK *,char const*,int *,int *)|253-247-246-238
83688|code|CBNZ            R0, loc_14716|168-185
83690|code|MOV             R0, R5|40-70
83692|code|BLX             _Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|253-247-174-238
83696|code|MOV             R0, #0x158B0|69-246-176-0-192-242-1-0
83704|code|BLX             gettext|253-247-216-239
83708|code|BL              sub_13724|255-247-18-248
83712|code|MOVS            R0, #0|0-32
83714|code|ADD             SP, SP, #0x90|36-176
83716|code|POP.W           {R4-R10,PC}|189-232-240-135
83720|code|LDRB.W          R3, [R5,#0x72]|149-248-114-48
83724|code|CMP             R3, #0|0-43
83726|code|ITE NE|20-191
83728|code|MOVNE           R4, #2|2-36
83730|code|MOVEQ           R4, #1|1-36
83732|code|B               loc_146B0|204-231
83734|code|MOV             R1, R8|65-70
83736|code|MOV             R0, R6|48-70
83738|code|MOV             R2, R4|34-70
83740|code|LDR             R3, [SP,#0xC]|3-155
83742|code|BLX             _Z18cram_md5_challengeP5BSOCKPKcii; cram_md5_challenge(BSOCK *,char const*,int,int)|253-247-28-238
83746|code|CMP             R0, #0|0-40
83748|code|BEQ             loc_146EA|225-208
83750|code|LDR             R3, [SP,#8]|2-155
83752|code|CMP             R4, R3|156-66
83754|code|BLE             loc_147A6|60-221
83756|code|CMP             R4, #1|1-44
83758|code|IT NE|24-191
83760|code|CMPNE           R3, #1|1-43
83762|code|BEQ             loc_14746|8-208
83764|code|MOV             R0, #0x157A0|69-242-160-112-192-242-1-0
83772|code|BLX             gettext|253-247-182-239
83776|code|BL              sub_13724|254-247-240-255
83780|code|B               loc_146EA|209-231
83782|code|CMP             R4, #0|0-44
83784|code|IT NE|24-191
83786|code|CMPNE           R3, #0|0-43
83788|code|BLE             loc_14766|11-221
83790|code|MOV             R0, R10|80-70
83792|code|MOV             R1, R6|49-70
83794|code|MOVS            R2, #0|0-34
83796|code|BLX             _Z15bnet_tls_clientP11TLS_ContextP5BSOCKP5alist; bnet_tls_client(TLS_Context *,BSOCK *,alist *)|253-247-200-237
83800|code|CMP             R0, #0|0-40
83802|code|BEQ.W           loc_1487C|0-240-143-128
83806|code|CMP.W           R9, #0|185-241-0-15
83810|code|BNE.W           loc_1488E|64-240-148-128
83814|code|MOV             R4, #0x2682C|70-246-44-4-192-242-2-4
83822|code|LDR             R3, [R4]|35-104
83824|code|CMP             R3, #5|5-43
83826|code|BGT             loc_14822|86-220
83828|code|MOV             R0, R6|48-70
83830|code|BLX             _ZN5BSOCK4recvEv; BSOCK::recv(void)|253-247-148-237
83834|code|CMP             R0, #0|0-40
83836|code|BLE             loc_1485E|111-221
83838|code|LDR             R3, [R4]|35-104
83840|code|CMP             R3, #9|9-43
83842|code|BGT             loc_14840|93-220
83844|code|LDR             R4, [R6,#8]|180-104
83846|code|MOVS            R2, #8|8-34
83848|code|LDR             R1, =a1000Ok; "1000 OK:"|67-73
83850|code|MOV             R0, R4|32-70
83852|code|BLX             strncmp|253-247-160-237
83856|code|CMP             R0, #0|0-40
83858|code|BEQ             loc_1480E|60-208
83860|code|MOV             R0, #0x1588C|69-246-140-0-192-242-1-0
83868|code|BLX             gettext|253-247-134-239
83872|code|BL              sub_13724|254-247-192-255
83876|code|B               loc_146EA|161-231
83878|code|CMP             R4, #1|1-44
83880|code|IT NE|24-191
83882|code|CMPNE           R4, R3|156-66
83884|code|ITE LT|180-191
83886|code|MOVLT           R2, #1|1-34
83888|code|MOVGE           R2, #0|0-34
83890|code|CMP             R3, #1|1-43
83892|code|ITE EQ|12-191
83894|code|MOVEQ           R2, #0|0-34
83896|code|ANDNE.W         R2, R2, #1|2-240-1-2
83900|code|CMP             R2, #0|0-42
83902|code|BEQ             loc_14746|194-208
83904|code|MOV             R0, #0x157F0|69-242-240-112-192-242-1-0
83912|code|BLX             gettext|253-247-112-239
83916|code|BL              sub_13724|254-247-170-255
83920|code|B               loc_146EA|139-231
83922|code|ADD             R7, SP, #0x10|4-175
83924|code|MOV             R10, R1|138-70
83926|code|MOVW            R1, #0x5794|69-242-148-113
83930|code|MOVS            R2, #0x80|128-34
83932|code|MOVT.W          R1, #1|192-242-1-1
83936|code|MOV             R0, R7|56-70
83938|code|BLX             _Z8bstrncpyPcPKci; bstrncpy(char *,char const*,int)|253-247-32-238
83942|code|LDRB.W          R4, [R10,#0x71]|154-248-113-64
83946|code|LDR.W           R8, [R10,#0x6C]|218-248-108-128
83950|code|CBZ             R4, loc_147FC|44-177
83952|code|LDRB.W          R3, [R10,#0x72]|154-248-114-48
83956|code|CMP             R3, #0|0-43
83958|code|ITE NE|20-191
83960|code|MOVNE           R4, #2|2-36
83962|code|MOVEQ           R4, #1|1-36
83964|code|LDRB.W          R9, [R10,#0x70]|154-248-112-144
83968|code|LDR.W           R10, [R10,#0x90]|218-248-144-160
83972|code|CMP.W           R9, #0|185-241-0-15
83976|code|IT NE|24-191
83978|code|MOVNE           R4, #2|2-36
83980|code|B               loc_146C0|88-231
83982|code|MOV             R0, R4|32-70
83984|code|BL              sub_13724|254-247-136-255
83988|code|MOV             R0, R5|40-70
83990|code|BLX             _Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|253-247-26-238
83994|code|MOVS            R0, #1|1-32
83996|code|ADD             SP, SP, #0x90|36-176
83998|code|POP.W           {R4-R10,PC}|189-232-240-135
84002|code|LDR             R2, [R6,#8]|178-104
84004|code|MOVW            R0, #0x583C|69-246-60-0
84008|code|MOVW            R3, #0x584C|69-246-76-3
84012|code|MOVT.W          R0, #1|192-242-1-0
84016|code|MOVT.W          R3, #1|192-242-1-3
84020|code|MOVS            R1, #0x96|150-33
84022|code|STR             R2, [SP]|0-146
84024|code|MOVS            R2, #6|6-34
84026|code|BLX             _Z5d_msgPKciiS0_z; d_msg(char const*,int,int,char const*,...)|253-247-234-236
84030|code|B               loc_14774|153-231
84032|code|LDR             R2, [R6,#8]|178-104
84034|code|MOVW            R0, #0x583C|69-246-60-0
84038|code|MOVW            R3, #0x5880|69-246-128-3
84042|code|MOVT.W          R0, #1|192-242-1-0
84046|code|MOVT.W          R3, #1|192-242-1-3
84050|code|MOVS            R1, #0x9D|157-33
84052|code|STR             R2, [SP]|0-146
84054|code|MOVS            R2, #0xA|10-34
84056|code|BLX             _Z5d_msgPKciiS0_z; d_msg(char const*,int,int,char const*,...)|253-247-218-236
84060|code|B               loc_14784|146-231
84062|code|MOV             R0, #0x15858|69-246-88-0-192-242-1-0
84070|code|BLX             gettext|253-247-34-239
84074|code|MOV             R4, R0|4-70
84076|code|MOV             R0, R6|48-70
84078|code|BLX             _ZN5BSOCK9bstrerrorEv; BSOCK::bstrerror(void)|253-247-104-238
84082|code|MOV             R1, R0|1-70
84084|code|MOV             R0, R4|32-70
84086|code|BL              sub_137F0|254-247-187-255
84090|code|B               loc_146EA|54-231
84092|code|MOV             R0, #0x15824|69-246-36-0-192-242-1-0
84100|code|BLX             gettext|253-247-18-239
84104|code|BL              sub_13724|254-247-76-255
84108|code|B               loc_146EA|45-231
84110|code|MOV             R0, R6|48-70
84112|code|BLX             _ZN5BSOCK8free_tlsEv; BSOCK::free_tls(void)|253-247-18-238
84116|code|B               loc_14766|103-231
84118|data|ALIGN 4|0-191
84120|data|DCD a1000Ok; "1000 OK:"|236-103-2-0
84124|code|PUSH.W          {R3-R9,LR}|45-233-248-67
84128|code|MOV             R7, R0|7-70
84130|code|LDR             R6, =(off_26008 - 0x148AE)|12-78
84132|code|MOV             R8, R1|136-70
84134|code|LDR             R5, =(off_26000 - 0x148B4)|12-77
84136|code|MOV             R9, R2|145-70
84138|code|ADD             R6, PC; off_26008|126-68
84140|code|BLX             .init_proc|253-247-154-236
84144|code|ADD             R5, PC; off_26000|125-68
84146|code|SUBS            R6, R6, R5|118-27
84148|code|ASRS            R6, R6, #2|182-16
84150|code|BEQ             locret_148CE|10-208
84152|code|SUBS            R5, #4|4-61
84154|code|MOVS            R4, #0|0-36
84156|code|ADDS            R4, #1|1-52
84158|code|LDR.W           R3, [R5,#4]!|85-248-4-63
84162|code|MOV             R0, R7|56-70
84164|code|MOV             R1, R8|65-70
84166|code|MOV             R2, R9|74-70
84168|code|BLX             R3|152-71
84170|code|CMP             R4, R6|180-66
84172|code|BNE             loc_148BC|246-209
84174|code|POP.W           {R3-R9,PC}|189-232-248-131
84178|data|ALIGN 4|0-191
84180|data|DCD off_26008 - 0x148AE|90-23-1-0
84184|data|DCD off_26000 - 0x148B4|76-23-1-0
84188|code|BX              LR|112-71
84190|data|ALIGN 0x10|0-191
84192|code|PUSH            {R3,LR}; _fini|8-64-45-233
84196|code|POP             {R3,PC}|8-128-189-232
88540|data|ALIGN 0x10|0-0-0-0
155648|data|DCD sub_13190+1|145-49-1-0
155652|data|DCD byte_12FF5|245-47-1-0
155656|data|DCD sub_13178+1|121-49-1-0
155660|data|DCD 0|0-0-0-0
155664|data|Elf32_Dyn <1, <1>>; DT_NEEDED libreadline.so.6|1-0-0-0-1-0-0-0
155672|data|Elf32_Dyn <1, <0x1A9>>; DT_NEEDED libhistory.so.6|1-0-0-0-169-1-0-0
155680|data|Elf32_Dyn <1, <0x1B9>>; DT_NEEDED libbaccfg-5.2.6.so|1-0-0-0-185-1-0-0
155688|data|Elf32_Dyn <1, <0x5A9>>; DT_NEEDED libbac-5.2.6.so|1-0-0-0-169-5-0-0
155696|data|Elf32_Dyn <1, <0x9F2>>; DT_NEEDED libwrap.so.0|1-0-0-0-242-9-0-0
155704|data|Elf32_Dyn <1, <0x9FF>>; DT_NEEDED libcap.so.2|1-0-0-0-255-9-0-0
155712|data|Elf32_Dyn <1, <0xA0B>>; DT_NEEDED libz.so.1|1-0-0-0-11-10-0-0
155720|data|Elf32_Dyn <1, <0xA15>>; DT_NEEDED libpthread.so.0|1-0-0-0-21-10-0-0
155728|data|Elf32_Dyn <1, <0xA36>>; DT_NEEDED libdl.so.2|1-0-0-0-54-10-0-0
155736|data|Elf32_Dyn <1, <0xA41>>; DT_NEEDED libssl.so.1.0.0|1-0-0-0-65-10-0-0
155744|data|Elf32_Dyn <1, <0xA51>>; DT_NEEDED libcrypto.so.1.0.0|1-0-0-0-81-10-0-0
155752|data|Elf32_Dyn <1, <0xA64>>; DT_NEEDED libstdc++.so.6|1-0-0-0-100-10-0-0
155760|data|Elf32_Dyn <1, <0xA73>>; DT_NEEDED libm.so.6|1-0-0-0-115-10-0-0
155768|data|Elf32_Dyn <1, <0xA7D>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-125-10-0-0
155776|data|Elf32_Dyn <1, <0xA8B>>; DT_NEEDED libc.so.6|1-0-0-0-139-10-0-0
155784|data|Elf32_Dyn <0xF, <0xC01>>; DT_RPATH /usr/lib/bacula|15-0-0-0-1-12-0-0
155792|data|Elf32_Dyn <0xC, <0x121E4>>; DT_INIT|12-0-0-0-228-33-1-0
155800|data|Elf32_Dyn <0xD, <0x148E0>>; DT_FINI|13-0-0-0-224-72-1-0
155808|data|Elf32_Dyn <0x19, <0x26000>>; DT_INIT_ARRAY|25-0-0-0-0-96-2-0
155816|data|Elf32_Dyn <0x1B, <8>>; DT_INIT_ARRAYSZ|27-0-0-0-8-0-0-0
155824|data|Elf32_Dyn <0x1A, <0x26008>>; DT_FINI_ARRAY|26-0-0-0-8-96-2-0
155832|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
155840|data|Elf32_Dyn <0x6FFFFEF5, <0x10194>>; DT_GNU_HASH|245-254-255-111-148-1-1-0
155848|data|Elf32_Dyn <5, <0x11024>>; DT_STRTAB|5-0-0-0-36-16-1-0
155856|data|Elf32_Dyn <6, <0x10684>>; DT_SYMTAB|6-0-0-0-132-6-1-0
155864|data|Elf32_Dyn <0xA, <0xC1B>>; DT_STRSZ|10-0-0-0-27-12-0-0
155872|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
155880|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
155888|data|Elf32_Dyn <3, <0x26170>>; DT_PLTGOT|3-0-0-0-112-97-2-0
155896|data|Elf32_Dyn <2, <0x3B0>>; DT_PLTRELSZ|2-0-0-0-176-3-0-0
155904|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
155912|data|Elf32_Dyn <0x17, <0x11E34>>; DT_JMPREL|23-0-0-0-52-30-1-0
155920|data|Elf32_Dyn <0x11, <0x11DB4>>; DT_REL|17-0-0-0-180-29-1-0
155928|data|Elf32_Dyn <0x12, <0x80>>; DT_RELSZ|18-0-0-0-128-0-0-0
155936|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
155944|data|Elf32_Dyn <0x6FFFFFFE, <0x11D74>>; DT_VERNEED|254-255-255-111-116-29-1-0
155952|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
155960|data|Elf32_Dyn <0x6FFFFFF0, <0x11C40>>; DT_VERSYM|240-255-255-111-64-28-1-0
155968|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
156016|data|DCD stru_26010|16-96-2-0
156020|data|DCD 0|0-0-0-0
156024|data|DCD 0|0-0-0-0
156028|data|DCD __imp_signal|76-107-2-0
156032|data|DCD __imp__Z5d_msgPKciiS0_z; d_msg(char const*,int,int,char const*,...)|60-106-2-0
156036|data|DCD __imp__Z8b_mallocPKcij; b_malloc(char const*,int,uint)|236-106-2-0
156040|data|DCD __imp_read_history|108-106-2-0
156044|data|DCD __imp_localtime_r|228-107-2-0
156048|data|DCD __imp__Z11b_UnlockResPKci; b_UnlockRes(char const*,int)|180-107-2-0
156052|data|DCD __imp__Z12is_bnet_stopP5BSOCK; is_bnet_stop(BSOCK *)|40-107-2-0
156056|data|DCD __imp__ZN5alist6appendEPv; alist::append(void *)|100-106-2-0
156060|data|DCD __imp__Z10store_boolP13s_lex_contextP8RES_ITEMii; store_bool(s_lex_context *,RES_ITEM *,int,int)|200-106-2-0
156064|data|DCD __imp__Z11close_bpipeP5BPIPE; close_bpipe(BPIPE *)|100-107-2-0
156068|data|DCD __imp__ZN5BSOCK4sendEv; BSOCK::send(void)|148-107-2-0
156072|data|DCD __imp__Z10bvsnprintfPciPKcSt9__va_list; bvsnprintf(char *,int,char const*,std::__va_list)|92-107-2-0
156076|data|DCD __imp_strcasecmp|152-106-2-0
156080|data|DCD __imp__ZN5BSOCK4recvEv; BSOCK::recv(void)|208-106-2-0
156084|data|DCD __imp_strtol|172-107-2-0
156088|data|DCD __imp__Z12init_signalsPFviE; init_signals(void (*)(int))|216-106-2-0
156092|data|DCD __imp__Z10my_name_isiPPcPKc; my_name_is(int,char **,char const*)|112-107-2-0
156096|data|DCD __imp_strncmp|220-106-2-0
156100|data|DCD __imp_regcomp|232-106-2-0
156104|data|DCD __imp__Z15bnet_tls_clientP11TLS_ContextP5BSOCKP5alist; bnet_tls_client(TLS_Context *,BSOCK *,alist *)|216-107-2-0
156108|data|DCD __imp__ZN6CONFIG4initEPKcPFvS1_iP13s_lex_contextS1_zEiPviiiP9RES_TABLEPP3RES; CONFIG::init(char const*,void (*)(char const*,int,s_lex_context *,char const*,...),int,void *,int,int,int,RES_TABLE *,RES **)|52-106-2-0
156112|data|DCD __imp__Z10parse_argsPcPS_PiS0_S0_i; parse_args(char *,char **,int *,char **,char **,int)|220-107-2-0
156116|data|DCD __imp_exit|244-106-2-0
156120|data|DCD __imp_printf|116-106-2-0
156124|data|DCD __imp__Z16free_tls_contextP11TLS_Context; free_tls_context(TLS_Context *)|204-106-2-0
156128|data|DCD __imp__Z9pm_strcatPPcPKc; pm_strcat(char **,char const*)|20-107-2-0
156132|data|DCD __imp_regfree|156-106-2-0
156136|data|DCD __imp__Z15init_stack_dumpv; init_stack_dump(void)|60-107-2-0
156140|data|DCD __imp__Z18cram_md5_challengeP5BSOCKPKcii; cram_md5_challenge(BSOCK *,char const*,int,int)|140-106-2-0
156144|data|DCD __imp__Z9sm_mallocPKcij; sm_malloc(char const*,int,uint)|128-107-2-0
156148|data|DCD __imp__Z8init_msgP3JCRP4MSGS; init_msg(JCR *,MSGS *)|240-106-2-0
156152|data|DCD __imp__ZN5BSOCK6signalEi; BSOCK::signal(int)|36-107-2-0
156156|data|DCD __imp_regexec|124-107-2-0
156160|data|DCD __imp__Z10init_bsockP3JCRiPKcS2_iP8sockaddr; init_bsock(JCR *,int,char const*,char const*,int,sockaddr *)|184-106-2-0
156164|data|DCD __imp_rl_completion_matches|80-107-2-0
156168|data|DCD __imp__ZN6CONFIG14free_resourcesEv; CONFIG::free_resources(void)|108-107-2-0
156172|data|DCD __imp_textdomain|132-106-2-0
156176|data|DCD __imp_getpass|240-107-2-0
156180|data|DCD __imp_strftime|184-107-2-0
156184|data|DCD __imp_memset|124-106-2-0
156188|data|DCD __imp__Z14cleanup_cryptov; cleanup_crypto(void)|160-106-2-0
156192|data|DCD __imp__Z9store_strP13s_lex_contextP8RES_ITEMii; store_str(s_lex_context *,RES_ITEM *,int,int)|180-106-2-0
156196|data|DCD __imp_using_history|80-106-2-0
156200|data|DCD __imp__Z7sm_freePKciPv; sm_free(char const*,int,void *)|224-107-2-0
156204|data|DCD __imp__Z12store_pint32P13s_lex_contextP8RES_ITEMii; store_pint32(s_lex_context *,RES_ITEM *,int,int)|188-107-2-0
156208|data|DCD __imp__Z8bstrncpyPcPKci; bstrncpy(char *,char const*,int)|248-106-2-0
156212|data|DCD __imp_abort|48-106-2-0
156216|data|DCD __imp__Z9pm_strcpyR8POOL_MEMPKc; pm_strcpy(POOL_MEM &,char const*)|196-107-2-0
156220|data|DCD __imp__Z16stop_bsock_timerP8btimer_t; stop_bsock_timer(btimer_t *)|212-106-2-0
156224|data|DCD __imp__Z18sm_get_pool_memoryPKcii; sm_get_pool_memory(char const*,int,int)|164-106-2-0
156228|data|DCD __imp_strcpy|192-107-2-0
156232|data|DCD __imp_readline|232-107-2-0
156236|data|DCD __imp__Z9b_LockResPKci; b_LockRes(char const*,int)|188-106-2-0
156240|data|DCD __imp__Z25sm_check_pool_memory_sizePKciPci; sm_check_pool_memory_size(char const*,int,char *,int)|196-106-2-0
156244|data|DCD __imp__Z19sm_free_pool_memoryPKciPc; sm_free_pool_memory(char const*,int,char *)|4-107-2-0
156248|data|DCD getopt|104-106-2-0
156252|data|DCD __imp__Z9pm_strcpyPPcPKc; pm_strcpy(char **,char const*)|160-107-2-0
156256|data|DCD __imp__ZN5BSOCK8free_tlsEv; BSOCK::free_tls(void)|176-106-2-0
156260|data|DCD __imp__ZN6CONFIG12parse_configEv; CONFIG::parse_config(void)|52-107-2-0
156264|data|DCD __imp__Z16cram_md5_respondP5BSOCKPKcPiS3_; cram_md5_respond(BSOCK *,char const*,int *,int *)|168-106-2-0
156268|data|DCD __imp__Z9bsnprintfPciPKcz; bsnprintf(char *,int,char const*,...)|244-107-2-0
156272|data|DCD __imp__Z14store_passwordP13s_lex_contextP8RES_ITEMii; store_password(s_lex_context *,RES_ITEM *,int,int)|200-107-2-0
156276|data|DCD __imp_fileno|116-107-2-0
156280|data|DCD __imp__Z19strip_trailing_junkPc; strip_trailing_junk(char *)|76-106-2-0
156284|data|DCD __imp__ZN6berrno9bstrerrorEv; berrno::bstrerror(void)|212-107-2-0
156288|data|DCD __imp__Z17bnet_sig_to_asciiP5BSOCK; bnet_sig_to_ascii(BSOCK *)|152-107-2-0
156292|data|DCD __imp__ZN5BSOCK5closeEv; BSOCK::close(void)|144-107-2-0
156296|data|DCD __imp_isatty|136-106-2-0
156300|data|DCD __imp__ZN5BSOCK9bstrerrorEv; BSOCK::bstrerror(void)|0-107-2-0
156304|data|DCD __imp__Z12bnet_connectP3JCRixxPKcPcS3_ii; bnet_connect(JCR *,int,long long,long long,char const*,char *,char *,int,int)|40-106-2-0
156308|data|DCD __imp_strncasecmp|144-106-2-0
156312|data|DCD __imp__Z6bfgetsPciP8_IO_FILE; bfgets(char *,int,_IO_FILE *)|68-106-2-0
156316|data|DCD __imp_add_history|120-107-2-0
156320|data|DCD __imp_sleep|164-107-2-0
156324|data|DCD __imp_bindtextdomain|132-107-2-0
156328|data|DCD __imp__Z15new_tls_contextPKcS0_S0_S0_PFiPciPKvES3_S0_b; new_tls_context(char const*,char const*,char const*,char const*,int (*)(char *,int,void const*),void const*,char const*,bool)|84-107-2-0
156332|data|DCD __imp__Z14start_watchdogv; start_watchdog(void)|112-106-2-0
156336|data|DCD __imp__Z10res_to_stri; res_to_str(int)|56-107-2-0
156340|data|DCD __imp__Z21sm_sizeof_pool_memoryPKciPc; sm_sizeof_pool_memory(char const*,int,char *)|140-107-2-0
156344|data|DCD __imp_setlocale|8-107-2-0
156348|data|DCD __imp__Z10term_bsockP5BSOCK; term_bsock(BSOCK *)|44-107-2-0
156352|data|DCD __imp__Z9pm_strcatR8POOL_MEMPKc; pm_strcat(POOL_MEM &,char const*)|64-107-2-0
156356|data|DCD __imp_memcpy|44-106-2-0
156360|data|DCD __imp__ZN5BSOCK5fsendEPKcz; BSOCK::fsend(char const*,...)|28-107-2-0
156364|data|DCD __imp__Z14actuallymallocj; actuallymalloc(uint)|224-106-2-0
156368|data|DCD __imp__Z11init_cryptov; init_crypto(void)|148-106-2-0
156372|data|DCD __imp_strlen|168-107-2-0
156376|data|DCD __imp__Z7bstrcmpPKcS0_; bstrcmp(char const*,char const*)|172-106-2-0
156380|data|DCD __imp__Z9store_dirP13s_lex_contextP8RES_ITEMii; store_dir(s_lex_context *,RES_ITEM *,int,int)|204-107-2-0
156384|data|DCD __imp_fprintf|84-106-2-0
156388|data|DCD __imp_fclose|64-106-2-0
156392|data|DCD __imp__Z12actuallyfreePv; actuallyfree(void *)|68-107-2-0
156396|data|DCD __imp__Z17new_config_parserv; new_config_parser(void)|192-106-2-0
156400|data|DCD __imp_history_truncate_file|88-106-2-0
156404|data|DCD __imp__Z11bash_spacesPc; bash_spaces(char *)|72-106-2-0
156408|data|DCD __imp__Z10store_timeP13s_lex_contextP8RES_ITEMii; store_time(s_lex_context *,RES_ITEM *,int,int)|236-107-2-0
156412|data|DCD __imp_strcmp|56-106-2-0
156416|data|DCD __imp_time|32-107-2-0
156420|data|DCD __imp_gettext|136-107-2-0
156424|data|DCD __imp___errno_location|228-106-2-0
156428|data|DCD __imp__Z17start_bsock_timerP5BSOCKj; start_bsock_timer(BSOCK *,uint)|128-106-2-0
156432|data|DCD __imp__Z10open_bpipePciPKc; open_bpipe(char *,int,char const*)|48-107-2-0
156436|data|DCD __imp_fflush|252-106-2-0
156440|data|DCD __imp_fopen64|104-107-2-0
156444|data|DCD __imp__ZN5alist7destroyEv; alist::destroy(void)|12-107-2-0
156448|data|DCD __imp__Z13stop_watchdogv; stop_watchdog(void)|176-107-2-0
156452|data|DCD __imp__Z5e_msgPKciiiS0_z; e_msg(char const*,int,int,int,char const*,...)|88-107-2-0
156456|data|DCD __imp_fputs|92-106-2-0
156460|data|DCD __imp_getenv|24-107-2-0
156464|data|DCD __imp___libc_start_main|208-107-2-0
156468|data|DCD __imp_write_history|96-106-2-0
156472|data|DCD __imp___gmon_start__|0-108-2-0
156476|data|DCD __imp__Z10store_nameP13s_lex_contextP8RES_ITEMii; store_name(s_lex_context *,RES_ITEM *,int,int)|72-107-2-0
156480|data|DCD __imp__Z11is_a_numberPKc; is_a_number(char const*)|96-107-2-0
156484|data|DCD __imp__Z10GetNextResiP3RES; GetNextRes(int,RES *)|36-106-2-0
156488|data|DCD __imp_strchr|156-107-2-0
156492|data|DCD __imp_append_history|120-106-2-0
156496|data|DCD __imp_stifle_history|16-107-2-0
156500|data|DCD __imp___gmon_start__|0-108-2-0
156504|data|ALIGN 0x10|0-0-0-0-0-0-0-0
156512|data|DCD aInput; "input"|76-85-1-0
156516|data|DCD sub_14194+1|149-65-1-0
156520|data|DCD 0|0-0-0-0
156524|data|DCD aOutput; "output"|84-85-1-0
156528|data|DCD sub_14184+1|133-65-1-0
156532|data|ALIGN 8|0-0-0-0
156536|data|DCD aQuit_0; "quit"|20-83-1-0
156540|data|DCD sub_131E4+1|229-49-1-0
156672|data|DCD 0x3E9|233-3-0-0
156676|data|DCD aConsole; "console"|188-86-1-0
156680|data|DCD off_265F8; "name"|248-101-2-0
156712|data|DCD unk_26A18|24-106-2-0
156716|data|DCD 0x98|152-0-0-0
156720|data|DCD 0x3EA|234-3-0-0
156724|data|ALIGN 8|0-0-0-0
156728|data|DCD aName; "name"|208-86-1-0
156732|data|DCD _Z10store_nameP13s_lex_contextP8RES_ITEMii; store_name(s_lex_context *,RES_ITEM *,int,int)|88-39-1-0
156736|data|DCD dword_26984|132-105-2-0
156740|data|ALIGN 8|0-0-0-0
157176|data|DCD aName; "name"|208-86-1-0
157180|data|DCD _Z10store_nameP13s_lex_contextP8RES_ITEMii; store_name(s_lex_context *,RES_ITEM *,int,int)|88-39-1-0
157184|data|DCD dword_26984|132-105-2-0
157188|data|ALIGN 8|0-0-0-0
157676|data|DCB "1000 OK:",0|49-48-48-48-32-79-75-58-0
157685|data|ALIGN 4|0-0-0
157688|data|% 4; Alternative name is '__bss_start'|255-255-255-255
157704|data|% 4; Copy of shared data|255-255-255-255
157720|data|% 4; Copy of shared data|255-255-255-255
157724|data|% 4; Copy of shared data|255-255-255-255
157736|data|% 4; Copy of shared data|255-255-255-255
157740|data|% 4; Copy of shared data|255-255-255-255
157744|data|% 4; Copy of shared data|255-255-255-255
157748|data|% 1|255
157749|data|ALIGN 4|255-255-255
157752|data|% 1|255
157753|data|ALIGN 4|255-255-255
157756|data|% 4|255-255-255-255
157760|data|% 1|255
157761|data|ALIGN 4|255-255-255
157764|data|% 4|255-255-255-255
157768|data|% 4|255-255-255-255
157772|data|% 4|255-255-255-255
157776|data|% 4|255-255-255-255
157780|data|% 4|255-255-255-255
157784|data|% 4|255-255-255-255
157896|data|% 4|255-255-255-255
157900|data|% 4|255-255-255-255
157904|data|% 4|255-255-255-255
157908|data|% 4|255-255-255-255
157912|data|% 4|255-255-255-255
157916|data|% 4|255-255-255-255
157920|data|% 1|255
157921|data|% 1|255
157922|data|ALIGN 4|255-255
157924|data|% 4|255-255-255-255
157928|data|% 4|255-255-255-255
157932|data|% 4|255-255-255-255
157936|data|% 4|255-255-255-255
158084|data|% 4|255-255-255-255
