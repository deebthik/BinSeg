address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|57-138-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x12C0; SHT file offset|192-18-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x1020; File offset|32-16-0-0
32828|data|DCD unk_9020; Virtual address|32-144-0-0
32832|data|DCD 0x9020; Physical address|32-144-0-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibLdLinuxArmh; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x19; Size in file image|25-0-0-0
32904|data|DCD 0x19; Size in memory image|25-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x102C; Size in file image|44-16-0-0
32936|data|DCD 0x102C; Size in memory image|44-16-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x102C; File offset|44-16-0-0
32956|data|DCD off_1102C; Virtual address|44-16-1-0
32960|data|DCD 0x1102C; Physical address|44-16-1-0
32964|data|DCD 0x170; Size in file image|112-1-0-0
32968|data|DCD 0x190; Size in memory image|144-1-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x1038; File offset|56-16-0-0
32988|data|DCD stru_11038; Virtual address|56-16-1-0
32992|data|DCD 0x11038; Physical address|56-16-1-0
32996|data|DCD 0xF8; Size in file image|248-0-0-0
33000|data|DCD 0xF8; Size in memory image|248-0-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x150; File offset|80-1-0-0
33020|data|DCD dword_8150; Virtual address|80-129-0-0
33024|data|DCD 0x8150; Physical address|80-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
33101|data|DCB 0, 0, 0|0-0-0
33104|data|DCD 4; Name Size|4-0-0-0
33108|data|DCD 0x10; Desc Size|16-0-0-0
33112|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33116|data|DCB "GNU",0; Name|71-78-85-0
33120|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33136|data|DCD 4; Name Size|4-0-0-0
33140|data|DCD 0x14; Desc Size|20-0-0-0
33144|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33148|data|DCB "GNU",0; Name|71-78-85-0
33152|data|DCB 0x6B, 0x8E, 0x4B, 0xF6, 0xF2, 0x48, 0x3C, 0xB1, 0x37; Desc|107-142-75-246-242-72-60-177-55-60-238-217-181-178-244-76-30-121-185-66
33172|data|DCD 0x11|17-0-0-0
33176|data|DCD 0x22|34-0-0-0
33180|data|DCD 0, 0x14, 0x13, 0xC, 0x1B, 0x1F, 0x18, 0x1D, 0x17, 7|0-0-0-0-20-0-0-0-19-0-0-0-12-0-0-0-27-0-0-0-31-0-0-0-24-0-0-0-29-0-0-0-23-0-0-0-7-0-0-0-30-0-0-0-33-0-0-0-22-0-0-0-16-0-0-0-13-0-0-0-1-0-0-0-14-0-0-0
33248|data|DCD 0, 0, 0, 0, 0, 0, 9, 0x1A, 0, 8, 0, 0, 0x1C, 0, 0|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-9-0-0-0-26-0-0-0-0-0-0-0-8-0-0-0-0-0-0-0-0-0-0-0-28-0-0-0-0-0-0-0-0-0-0-0-5-0-0-0-15-0-0-0-0-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-0-0-0-0-10-0-0-0-4-0-0-0-17-0-0-0-0-0-0-0-0-0-0-0-21-0-0-0-2-0-0-0-18-0-0-0-32-0-0-0-25-0-0-0-6-0-0-0-11-0-0-0
33384|data|DCD 0x11|17-0-0-0
33388|data|DCD 3|3-0-0-0
33392|data|DCD 8|8-0-0-0
33396|data|DCD 8|8-0-0-0
33400|data|DCD 0x88C094A1, 0xE2046100, 0x4140A02A, 0x20502000, 0x910282|161-148-192-136-0-97-4-226-42-160-64-65-0-32-80-32-130-2-145-0-8-36-33-141-128-64-3-9-0-20-8-64
33432|data|DCD 3, 4, 6, 8, 0xD, 0x11, 0x12, 0x13, 0, 0x15, 0x16, 0x17|3-0-0-0-4-0-0-0-6-0-0-0-8-0-0-0-13-0-0-0-17-0-0-0-18-0-0-0-19-0-0-0-0-0-0-0-21-0-0-0-22-0-0-0-23-0-0-0-0-0-0-0-25-0-0-0-26-0-0-0-28-0-0-0-32-0-0-0
33500|data|DCD 0xE834AF01, 0xEEFD3EA, 0x1C9395BB, 0x943C5476, 0xEF18DB9|1-175-52-232-234-211-239-14-187-149-147-28-118-84-60-148-185-141-241-14-124-237-17-15-176-74-69-75-134-240-150-124-216-113-88-28-5-108-178-205-88-239-151-121-236-222-147-28-186-227-146-124-63-126-150-124-199-14-224-61-47-78-61-246-56-242-139-28-67-69-213-236-209-123-160-198-151-169-186-218-26-159-214-189-95-150-147-28-191-218-87-27-128-116-130-13-23-47-116-15-172-112-14-175-64-77-157-124-60-173-57-13-7-47-116-15-22-234-118-254-41-29-140-28
33624|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
33640|data|Elf32_Sym <aGmonStart - byte_8578, 0, 0, 0x20, 0, 0>; "__gmon_start__"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
33656|data|Elf32_Sym <aJvRegisterclas - byte_8578, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|29-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
33672|data|Elf32_Sym <aBssEnd+1 - byte_8578, _end_0, 0, 0x10, 0, 0xFFF1>; "_bss_end__"|26-1-0-0-188-17-1-0-0-0-0-0-16-0-241-255
33688|data|Elf32_Sym <aFini - byte_8578, .term_proc+1, 0, 0x12, 0, 0xF>; "_fini"|55-0-0-0-17-143-0-0-0-0-0-0-18-0-15-0
33704|data|Elf32_Sym <aStrchr - byte_8578, strchr, 0, 0x12, 0, 0>; "strchr"|203-0-0-0-92-136-0-0-0-0-0-0-18-0-0-0
33720|data|Elf32_Sym <aBssStart_0 - byte_8578, unk_1119C, 0, 0x10, 0, 0xFFF1>; "__bss_start__"|11-1-0-0-156-17-1-0-0-0-0-0-16-0-241-255
33736|data|Elf32_Sym <aInit - byte_8578, .init_proc+1, 0, 0x12, 0, 0xC>; "_init"|49-0-0-0-9-136-0-0-0-0-0-0-18-0-12-0
33752|data|Elf32_Sym <aAbort - byte_8578, abort, 0, 0x12, 0, 0>; "abort"|124-0-0-0-40-136-0-0-0-0-0-0-18-0-0-0
33768|data|Elf32_Sym <aAssertFail - byte_8578, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|137-0-0-0-116-136-0-0-0-0-0-0-18-0-0-0
33784|data|Elf32_Sym <aFree - byte_8578, free, 0, 0x12, 0, 0>; "free"|243-0-0-0-128-136-0-0-0-0-0-0-18-0-0-0
33800|data|Elf32_Sym <aBssStart - byte_8578, unk_1119C, 0, 0x10, 0, 0xFFF1>; "__bss_start"|255-0-0-0-156-17-1-0-0-0-0-0-16-0-241-255
33816|data|Elf32_Sym <aStrdup - byte_8578, __strdup, 0, 0x12, 0, 0>; "__strdup"|107-0-0-0-248-136-0-0-0-0-0-0-18-0-0-0
33832|data|Elf32_Sym <aEnd - byte_8578, _end_0, 0, 0x10, 0, 0xFFF1>; "__end__"|37-1-0-0-188-17-1-0-0-0-0-0-16-0-241-255
33848|data|Elf32_Sym <aStrtok - byte_8578, strtok, 0, 0x12, 0, 0>; "strtok"|151-0-0-0-196-136-0-0-0-0-0-0-18-0-0-0
33864|data|Elf32_Sym <aEnd_0 - byte_8578, _end_0, 0, 0x10, 0, 0xFFF1>; "_end"|45-1-0-0-188-17-1-0-0-0-0-0-16-0-241-255
33880|data|Elf32_Sym <aExit - byte_8578, exit, 0, 0x12, 0, 0>; "exit"|85-0-0-0-28-137-0-0-0-0-0-0-18-0-0-0
33896|data|Elf32_Sym <aRealloc - byte_8578, realloc, 0, 0x12, 0, 0>; "realloc"|116-0-0-0-220-136-0-0-0-0-0-0-18-0-0-0
33912|data|Elf32_Sym <aLibcStartMain - byte_8578, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|225-0-0-0-64-136-0-0-0-0-0-0-18-0-0-0
33928|data|Elf32_Sym <aStderr - byte_8578, stderr, 4, 0x11, 0, 0x19>; "stderr"|189-0-0-0-168-17-1-0-4-0-0-0-17-0-25-0
33944|data|Elf32_Sym <aEdata - byte_8578, unk_1119C, 0, 0x10, 0, 0xFFF1>; "_edata"|248-0-0-0-156-17-1-0-0-0-0-0-16-0-241-255
33960|data|Elf32_Sym <aHtmltaglookup - byte_8578, htmlTagLookup, 0, 0x12, 0, 0>; "htmlTagLookup"|61-0-0-0-52-136-0-0-0-0-0-0-18-0-0-0
33976|data|Elf32_Sym <aIoPutc - byte_8578, _IO_putc, 0, 0x12, 0, 0>; "_IO_putc"|90-0-0-0-236-136-0-0-0-0-0-0-18-0-0-0
33992|data|Elf32_Sym <aMemmove - byte_8578, memmove, 0, 0x12, 0, 0>; "memmove"|210-0-0-0-208-136-0-0-0-0-0-0-18-0-0-0
34008|data|Elf32_Sym <aStrcmp - byte_8578, strcmp, 0, 0x12, 0, 0>; "strcmp"|218-0-0-0-16-137-0-0-0-0-0-0-18-0-0-0
34024|data|Elf32_Sym <aBssEnd - byte_8578, _end_0, 0, 0x10, 0, 0xFFF1>; "__bss_end__"|25-1-0-0-188-17-1-0-0-0-0-0-16-0-241-255
34040|data|Elf32_Sym <aMemchr - byte_8578, memchr, 0, 0x12, 0, 0>; "memchr"|130-0-0-0-4-137-0-0-0-0-0-0-18-0-0-0
34056|data|Elf32_Sym <aFputs - byte_8578, fputs, 0, 0x12, 0, 0>; "fputs"|176-0-0-0-44-137-0-0-0-0-0-0-18-0-0-0
34072|data|Elf32_Sym <aStrrchr - byte_8578, strrchr, 0, 0x12, 0, 0>; "strrchr"|99-0-0-0-104-136-0-0-0-0-0-0-18-0-0-0
34088|data|Elf32_Sym <aRead - byte_8578, read, 0, 0x12, 0, 0>; "read"|158-0-0-0-140-136-0-0-0-0-0-0-18-0-0-0
34104|data|Elf32_Sym <aMalloc - byte_8578, malloc, 0, 0x12, 0, 0>; "malloc"|182-0-0-0-168-136-0-0-0-0-0-0-18-0-0-0
34120|data|Elf32_Sym <aFputc - byte_8578, fputc, 0, 0x12, 0, 0>; "fputc"|170-0-0-0-184-136-0-0-0-0-0-0-18-0-0-0
34136|data|Elf32_Sym <aFwrite - byte_8578, fwrite, 0, 0x12, 0, 0>; "fwrite"|196-0-0-0-156-136-0-0-0-0-0-0-18-0-0-0
34152|data|Elf32_Sym <aStdout - byte_8578, stdout, 4, 0x11, 0, 0x19>; "stdout"|163-0-0-0-160-17-1-0-4-0-0-0-17-0-25-0
34168|data|DCB 0|0
34169|data|DCB "libxml2.so.2",0|108-105-98-120-109-108-50-46-115-111-46-50-0
34182|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
34197|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
34217|data|DCB "_init",0|95-105-110-105-116-0
34223|data|DCB "_fini",0|95-102-105-110-105-0
34229|data|DCB "htmlTagLookup",0|104-116-109-108-84-97-103-76-111-111-107-117-112-0
34243|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
34253|data|DCB "exit",0|101-120-105-116-0
34258|data|DCB "_IO_putc",0|95-73-79-95-112-117-116-99-0
34267|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
34275|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
34284|data|DCB "realloc",0|114-101-97-108-108-111-99-0
34292|data|DCB "abort",0|97-98-111-114-116-0
34298|data|DCB "memchr",0|109-101-109-99-104-114-0
34305|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
34319|data|DCB "strtok",0|115-116-114-116-111-107-0
34326|data|DCB "read",0|114-101-97-100-0
34331|data|DCB "stdout",0|115-116-100-111-117-116-0
34338|data|DCB "fputc",0|102-112-117-116-99-0
34344|data|DCB "fputs",0|102-112-117-116-115-0
34350|data|DCB "malloc",0|109-97-108-108-111-99-0
34357|data|DCB "stderr",0|115-116-100-101-114-114-0
34364|data|DCB "fwrite",0|102-119-114-105-116-101-0
34371|data|DCB "strchr",0|115-116-114-99-104-114-0
34378|data|DCB "memmove",0|109-101-109-109-111-118-101-0
34386|data|DCB "strcmp",0|115-116-114-99-109-112-0
34393|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
34411|data|DCB "free",0|102-114-101-101-0
34416|data|DCB "_edata",0|95-101-100-97-116-97-0
34423|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
34435|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
34449|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
34461|data|DCB "__end__",0|95-95-101-110-100-95-95-0
34469|data|DCB "_end",0|95-101-110-100-0
34474|data|DCB "LIBXML2_2.4.30",0|76-73-66-88-77-76-50-95-50-46-52-46-51-48-0
34489|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
34499|data|DCB 0|0
34500|data|DCW 0|0-0
34502|data|DCW 0; local  symbol: __gmon_start__|0-0
34504|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
34506|data|DCW 1; global symbol: _bss_end__|1-0
34508|data|DCW 1; global symbol: _fini|1-0
34510|data|DCW 2; strchr@@GLIBC_2.4|2-0
34512|data|DCW 1; global symbol: __bss_start__|1-0
34514|data|DCW 1; global symbol: _init|1-0
34516|data|DCW 2; abort@@GLIBC_2.4|2-0
34518|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
34520|data|DCW 2; free@@GLIBC_2.4|2-0
34522|data|DCW 1; global symbol: __bss_start|1-0
34524|data|DCW 2; __strdup@@GLIBC_2.4|2-0
34526|data|DCW 1; global symbol: __end__|1-0
34528|data|DCW 2; strtok@@GLIBC_2.4|2-0
34530|data|DCW 1; global symbol: _end|1-0
34532|data|DCW 2; exit@@GLIBC_2.4|2-0
34534|data|DCW 2; realloc@@GLIBC_2.4|2-0
34536|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
34538|data|DCW 2; stderr@@GLIBC_2.4|2-0
34540|data|DCW 1; global symbol: _edata|1-0
34542|data|DCW 3; htmlTagLookup@@LIBXML2_2.4.30|3-0
34544|data|DCW 2; _IO_putc@@GLIBC_2.4|2-0
34546|data|DCW 2; memmove@@GLIBC_2.4|2-0
34548|data|DCW 2; strcmp@@GLIBC_2.4|2-0
34550|data|DCW 1; global symbol: __bss_end__|1-0
34552|data|DCW 2; memchr@@GLIBC_2.4|2-0
34554|data|DCW 2; fputs@@GLIBC_2.4|2-0
34556|data|DCW 2; strrchr@@GLIBC_2.4|2-0
34558|data|DCW 2; read@@GLIBC_2.4|2-0
34560|data|DCW 2; malloc@@GLIBC_2.4|2-0
34562|data|DCW 2; fputc@@GLIBC_2.4|2-0
34564|data|DCW 2; fwrite@@GLIBC_2.4|2-0
34566|data|DCW 2; stdout@@GLIBC_2.4|2-0
34568|data|Elf32_Verneed <1, 1, aLibxml2So2 - byte_8578, 0x10, 0x20>; "libxml2.so.2"|1-0-1-0-1-0-0-0-16-0-0-0-32-0-0-0
34584|data|Elf32_Vernaux <0xF4C8BE0, 0, 3, aLibxml22430 - byte_8578, 0>; "LIBXML2_2.4.30"|224-139-76-15-0-0-3-0-50-1-0-0-0-0-0-0
34600|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_8578, 0x10, 0>; "libc.so.6"|1-0-1-0-75-0-0-0-16-0-0-0-0-0-0-0
34616|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_8578, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-65-1-0-0-0-0-0-0
34632|data|Elf32_Rel <0x11190, 0x115>; R_ARM_GLOB_DAT __gmon_start__|144-17-1-0-21-1-0-0
34640|data|Elf32_Rel <0x111A0, 0x2114>; R_ARM_COPY stdout|160-17-1-0-20-33-0-0
34648|data|Elf32_Rel <0x111A8, 0x1314>; R_ARM_COPY stderr|168-17-1-0-20-19-0-0
34656|data|Elf32_Rel <0x1113C, 0x816>; R_ARM_JUMP_SLOT abort|60-17-1-0-22-8-0-0
34664|data|Elf32_Rel <0x11140, 0x1516>; R_ARM_JUMP_SLOT htmlTagLookup|64-17-1-0-22-21-0-0
34672|data|Elf32_Rel <0x11144, 0x1216>; R_ARM_JUMP_SLOT __libc_start_main|68-17-1-0-22-18-0-0
34680|data|Elf32_Rel <0x11148, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|72-17-1-0-22-1-0-0
34688|data|Elf32_Rel <0x1114C, 0x516>; R_ARM_JUMP_SLOT strchr|76-17-1-0-22-5-0-0
34696|data|Elf32_Rel <0x11150, 0x1C16>; R_ARM_JUMP_SLOT strrchr|80-17-1-0-22-28-0-0
34704|data|Elf32_Rel <0x11154, 0x916>; R_ARM_JUMP_SLOT __assert_fail|84-17-1-0-22-9-0-0
34712|data|Elf32_Rel <0x11158, 0xA16>; R_ARM_JUMP_SLOT free|88-17-1-0-22-10-0-0
34720|data|Elf32_Rel <0x1115C, 0x1D16>; R_ARM_JUMP_SLOT read|92-17-1-0-22-29-0-0
34728|data|Elf32_Rel <0x11160, 0x2016>; R_ARM_JUMP_SLOT fwrite|96-17-1-0-22-32-0-0
34736|data|Elf32_Rel <0x11164, 0x1E16>; R_ARM_JUMP_SLOT malloc|100-17-1-0-22-30-0-0
34744|data|Elf32_Rel <0x11168, 0x1F16>; R_ARM_JUMP_SLOT fputc|104-17-1-0-22-31-0-0
34752|data|Elf32_Rel <0x1116C, 0xE16>; R_ARM_JUMP_SLOT strtok|108-17-1-0-22-14-0-0
34760|data|Elf32_Rel <0x11170, 0x1716>; R_ARM_JUMP_SLOT memmove|112-17-1-0-22-23-0-0
34768|data|Elf32_Rel <0x11174, 0x1116>; R_ARM_JUMP_SLOT realloc|116-17-1-0-22-17-0-0
34776|data|Elf32_Rel <0x11178, 0x1616>; R_ARM_JUMP_SLOT _IO_putc|120-17-1-0-22-22-0-0
34784|data|Elf32_Rel <0x1117C, 0xC16>; R_ARM_JUMP_SLOT __strdup|124-17-1-0-22-12-0-0
34792|data|Elf32_Rel <0x11180, 0x1A16>; R_ARM_JUMP_SLOT memchr|128-17-1-0-22-26-0-0
34800|data|Elf32_Rel <0x11184, 0x1816>; R_ARM_JUMP_SLOT strcmp|132-17-1-0-22-24-0-0
34808|data|Elf32_Rel <0x11188, 0x1016>; R_ARM_JUMP_SLOT exit|136-17-1-0-22-16-0-0
34816|data|Elf32_Rel <0x1118C, 0x1B16>; R_ARM_JUMP_SLOT fputs|140-17-1-0-22-27-0-0
34824|code|PUSH            {R3,LR}; _init|8-181
34826|code|BL              sub_8A70|0-240-49-249
34830|code|NOP|0-191
34832|code|POP             {R3,PC}|8-189
34834|data|DCW 0|0-0
34836|code|PUSH            {LR}|4-224-45-229
34840|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8824)|4-224-159-229
34844|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
34848|code|LDR             PC, [LR,#8]!|8-240-190-229
34852|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8824|12-137-0-0
34856|code|ADR             R12, 0x8830|0-198-143-226
34860|code|ADD             R12, R12, #0x8000|8-202-140-226
34864|code|LDR             PC, [R12,#(abort_ptr - 0x10830)]!; __imp_abort|12-249-188-229
34868|code|ADR             R12, 0x883C|0-198-143-226
34872|code|ADD             R12, R12, #0x8000|8-202-140-226
34876|code|LDR             PC, [R12,#(htmlTagLookup_ptr - 0x1083C)]!; __imp_htmlTagLookup|4-249-188-229
34880|code|ADR             R12, 0x8848|0-198-143-226
34884|code|ADD             R12, R12, #0x8000|8-202-140-226
34888|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x10848)]!; __imp___libc_start_main|252-248-188-229
34892|code|BX              PC|120-71
34894|data|ALIGN 4|192-70
34896|code|ADR             R12, 0x8858|0-198-143-226
34900|code|ADD             R12, R12, #0x8000|8-202-140-226
34904|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x10858)]!; __imp___gmon_start__|240-248-188-229
34908|code|ADR             R12, 0x8864|0-198-143-226
34912|code|ADD             R12, R12, #0x8000|8-202-140-226
34916|code|LDR             PC, [R12,#(strchr_ptr - 0x10864)]!; __imp_strchr|232-248-188-229
34920|code|ADR             R12, 0x8870|0-198-143-226
34924|code|ADD             R12, R12, #0x8000|8-202-140-226
34928|code|LDR             PC, [R12,#(strrchr_ptr - 0x10870)]!; __imp_strrchr|224-248-188-229
34932|code|ADR             R12, 0x887C|0-198-143-226
34936|code|ADD             R12, R12, #0x8000|8-202-140-226
34940|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x1087C)]!; __imp___assert_fail|216-248-188-229
34944|code|ADR             R12, 0x8888|0-198-143-226
34948|code|ADD             R12, R12, #0x8000|8-202-140-226
34952|code|LDR             PC, [R12,#(free_ptr - 0x10888)]!; __imp_free|208-248-188-229
34956|code|ADR             R12, 0x8894|0-198-143-226
34960|code|ADD             R12, R12, #0x8000|8-202-140-226
34964|code|LDR             PC, [R12,#(read_ptr - 0x10894)]!; __imp_read|200-248-188-229
34968|code|BX              PC|120-71
34970|data|ALIGN 4|192-70
34972|code|ADR             R12, 0x88A4|0-198-143-226
34976|code|ADD             R12, R12, #0x8000|8-202-140-226
34980|code|LDR             PC, [R12,#(fwrite_ptr - 0x108A4)]!; __imp_fwrite|188-248-188-229
34984|code|ADR             R12, 0x88B0|0-198-143-226
34988|code|ADD             R12, R12, #0x8000|8-202-140-226
34992|code|LDR             PC, [R12,#(malloc_ptr - 0x108B0)]!; __imp_malloc|180-248-188-229
34996|code|BX              PC|120-71
34998|data|ALIGN 4|192-70
35000|code|ADR             R12, 0x88C0|0-198-143-226
35004|code|ADD             R12, R12, #0x8000|8-202-140-226
35008|code|LDR             PC, [R12,#(fputc_ptr - 0x108C0)]!; __imp_fputc|168-248-188-229
35012|code|ADR             R12, 0x88CC|0-198-143-226
35016|code|ADD             R12, R12, #0x8000|8-202-140-226
35020|code|LDR             PC, [R12,#(strtok_ptr - 0x108CC)]!; __imp_strtok|160-248-188-229
35024|code|ADR             R12, 0x88D8|0-198-143-226
35028|code|ADD             R12, R12, #0x8000|8-202-140-226
35032|code|LDR             PC, [R12,#(memmove_ptr - 0x108D8)]!; __imp_memmove|152-248-188-229
35036|code|ADR             R12, 0x88E4|0-198-143-226
35040|code|ADD             R12, R12, #0x8000|8-202-140-226
35044|code|LDR             PC, [R12,#(realloc_ptr - 0x108E4)]!; __imp_realloc|144-248-188-229
35048|code|BX              PC|120-71
35050|data|ALIGN 4|192-70
35052|code|ADR             R12, 0x88F4|0-198-143-226
35056|code|ADD             R12, R12, #0x8000|8-202-140-226
35060|code|LDR             PC, [R12,#(_IO_putc_ptr - 0x108F4)]!; __imp__IO_putc|132-248-188-229
35064|code|ADR             R12, 0x8900|0-198-143-226
35068|code|ADD             R12, R12, #0x8000|8-202-140-226
35072|code|LDR             PC, [R12,#(__strdup_ptr - 0x10900)]!; __imp___strdup|124-248-188-229
35076|code|ADR             R12, 0x890C|0-198-143-226
35080|code|ADD             R12, R12, #0x8000|8-202-140-226
35084|code|LDR             PC, [R12,#(memchr_ptr - 0x1090C)]!; __imp_memchr|116-248-188-229
35088|code|ADR             R12, 0x8918|0-198-143-226
35092|code|ADD             R12, R12, #0x8000|8-202-140-226
35096|code|LDR             PC, [R12,#(strcmp_ptr - 0x10918)]!; __imp_strcmp|108-248-188-229
35100|code|ADR             R12, 0x8924|0-198-143-226
35104|code|ADD             R12, R12, #0x8000|8-202-140-226
35108|code|LDR             PC, [R12,#(exit_ptr - 0x10924)]!; __imp_exit|100-248-188-229
35112|code|BX              PC|120-71
35114|data|ALIGN 4|192-70
35116|code|ADR             R12, 0x8934|0-198-143-226
35120|code|ADD             R12, R12, #0x8000|8-202-140-226
35124|code|LDR             PC, [R12,#(fputs_ptr - 0x10934)]!; __imp_fputs|88-248-188-229
35128|code|MOVSMI          LR, #0xFFF4BFFF|45-233-248-67
35132|code|VST1.8          {D20-D22}, [PC],R5|5-70-79-244
35136|code|STRMI           R5, [R12],-R0,LSL#1|128-80-12-70
35140|code|SVC             0xB0F7FF|255-247-176-239
35144|code|BXJCS           R4|36-104-47-33
35148|code|STRTMI          R4, [R0],-R0,LSL#13|128-70-32-70
35152|code|SVC             0x8AF7FF|255-247-138-239
35156|code|MCRRNE          p1, 0, R11,R4,c0|0-177-68-28
35160|code|ANDLE           R2, R9, R1,LSL#26|1-45-9-208
35164|code|TSTCS           R1, PC,LSR#22|47-75-1-33
35168|code|EORCS           R4, R6, #0x2F0000|47-72-38-34
35172|data|DCD 0xF7FF681B, 0x2002EF9A, 0x83F8E8BD, 0x492C4620, 0xEFCCF7FF|27-104-255-247-154-239-2-32-189-232-248-131-32-70-44-73-255-247-204-239-0-40-51-209-42-75-29-96-0-37-79-244-128-89-47-70-8-235-5-4-0-32-197-235-9-2-33-70-255-247-122-239-0-40-44-221-69-25-68-70-8-235-5-6-3-224-31-112-92-28-0-240-227-249-53-27-32-70-10-33-42-70-255-247-166-239-3-70-32-70-0-43-241-209-64-70-33-70-42-70-255-247-130-239-169-69-219-209-79-234-73-3-64-70-77-70-25-70-153-70-255-247-126-239-128-70-209-231-32-70-17-73-255-247-146-239-0-40-181-209-13-75-24-96-196-231-0-45-4-221-0-35-64-70-35-112-0-240-184-249-10-72-0-240-213-248-10-75-10-32-25-104-255-247-108-239-0-32-189-232-248-131-0-191-168-17-1-0-248-143-0-0-232-143-0-0-184-17-1-0-240-143-0-0-180-17-1-0-160-17-1-0
35384|code|MOV.W           R11, #0|79-240-0-11
35388|code|MOV.W           LR, #0|79-240-0-14
35392|code|POP.W           {R1}; argc|93-248-4-27
35396|code|MOV             R2, SP; ubp_av|106-70
35398|code|PUSH.W          {R2}; stack_end|77-248-4-45
35402|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
35406|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
35410|code|PUSH.W          {R12}; fini|77-248-4-205
35414|code|LDR             R0, =(loc_8938+1); main|4-72
35416|code|LDR             R3, =(sub_8EC8+1); init|4-75
35418|code|BLX             __libc_start_main|255-247-242-238
35422|code|BLX             abort|255-247-228-238
35426|data|ALIGN 4|0-0
35428|data|DCD nullsub_1+1|13-143-0-0
35432|data|DCD loc_8938+1|57-137-0-0
35436|data|DCD sub_8EC8+1|201-142-0-0
35440|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8A78)|3-75
35442|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11130)|4-74
35444|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
35446|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
35448|code|CBZ             R3, locret_8A7E|11-177
35450|code|B.W             j___gmon_start__|255-247-231-190
35454|code|BX              LR|112-71
35456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8A78|184-134-0-0
35460|data|DCD __gmon_start___ptr_0 - 0x11130|96-0-0-0
35464|code|LDR             R3, =byte_111AC|2-75
35466|code|LDRB            R2, [R3]|26-120
35468|code|CBNZ            R2, locret_8A92|10-185
35470|code|MOVS            R2, #1|1-34
35472|code|STRB            R2, [R3]|26-112
35474|code|BX              LR|112-71
35476|data|DCD byte_111AC|172-17-1-0
35480|code|LDR             R0, =dword_11034|3-72
35482|code|PUSH            {R3,LR}|8-181
35484|code|LDR             R3, [R0]|3-104
35486|code|CBZ             R3, locret_8AA6|19-177
35488|code|LDR             R3, =0|2-75
35490|code|CBZ             R3, locret_8AA6|3-177
35492|code|BLX             R3|152-71
35494|code|POP             {R3,PC}|8-189
35496|data|DCD dword_11034|52-16-1-0
35500|data|DCD 0|0-0-0-0
35504|code|PUSH            {R4,LR}|16-181
35506|code|LDR             R4, =dword_111B0|5-76
35508|code|LDR             R3, [R4]|35-104
35510|code|CBZ             R3, locret_8AC6|51-177
35512|code|LDR             R3, =stdout|4-75
35514|code|MOVS            R0, #0x3E ; '>'; c|62-32
35516|code|LDR             R1, [R3]; fp|25-104
35518|code|BLX             _IO_putc|255-247-22-239
35522|code|MOVS            R3, #0|0-35
35524|code|STR             R3, [R4]|35-96
35526|code|POP             {R4,PC}|16-189
35528|data|DCD dword_111B0|176-17-1-0
35532|data|DCD stdout|160-17-1-0
35536|code|PUSH            {R4-R6,LR}|112-181
35538|code|MOV             R4, R0|4-70
35540|code|LDRB            R3, [R0]|3-120
35542|code|CMP             R3, #0x3F ; '?'|63-43
35544|code|BEQ             loc_8B42|51-208
35546|code|CMP             R3, #0x40 ; '@'|64-43
35548|code|BEQ             loc_8B2C|38-208
35550|code|CMP             R3, #0x21 ; '!'|33-43
35552|code|BEQ             loc_8B1A|27-208
35554|code|LDR             R3, =dword_111B8|42-75
35556|code|LDR             R3, [R3]|27-104
35558|code|CMP             R3, #0|0-43
35560|code|BNE             loc_8B54|52-209
35562|code|LDR             R5, =dword_111B0|41-77
35564|code|LDR             R3, [R5]|43-104
35566|code|CMP             R3, #0|0-43
35568|code|BNE             loc_8B6C|60-209
35570|code|BL              sub_8AB0|255-247-221-255
35574|code|LDR             R6, =stdout|39-78
35576|code|MOVS            R2, #2; n|2-34
35578|code|MOVS            R1, #1; size|1-33
35580|code|LDR             R0, =asc_8F40; "</"|38-72
35582|code|LDR             R3, [R6]; s|51-104
35584|code|BLX             fwrite|255-247-204-238
35588|code|LDR             R1, [R6]; stream|49-104
35590|code|MOV             R0, R4; s|32-70
35592|code|BLX             fputs|255-247-16-239
35596|code|LDR             R1, [R6]; fp|49-104
35598|code|MOVS            R0, #0x3E ; '>'; c|62-32
35600|code|BLX             _IO_putc|255-247-236-238
35604|code|MOVS            R3, #0|0-35
35606|code|STR             R3, [R5]|43-96
35608|code|POP             {R4-R6,PC}|112-189
35610|code|LDR             R3, =stdout|30-75
35612|code|MOVS            R1, #1|1-33
35614|code|LDR             R0, =asc_8F34; "-->"|31-72
35616|code|MOVS            R2, #3|3-34
35618|code|LDR             R3, [R3]|27-104
35620|code|POP.W           {R4-R6,LR}|189-232-112-64
35624|code|B.W             j_fwrite|255-247-182-190
35628|code|LDR             R3, =dword_111B0|24-75
35630|code|LDR             R3, [R3]|27-104
35632|code|CMP             R3, #0|0-43
35634|code|BEQ             loc_8B7C|35-208
35636|code|LDR             R3, =stdout|23-75
35638|code|MOVS            R0, #0x22 ; '"'|34-32
35640|code|LDR             R1, [R3]|25-104
35642|code|POP.W           {R4-R6,LR}|189-232-112-64
35646|code|B.W             j__IO_putc|255-247-211-190
35650|code|LDR             R3, =stdout|20-75
35652|code|MOVS            R1, #1|1-33
35654|code|LDR             R0, =asc_8F38; "?>"|22-72
35656|code|MOVS            R2, #2|2-34
35658|code|LDR             R3, [R3]|27-104
35660|code|POP.W           {R4-R6,LR}|189-232-112-64
35664|code|B.W             j_fwrite|255-247-162-190
35668|code|BLX             htmlTagLookup|255-247-110-238
35672|code|MOV             R5, R0|5-70
35674|code|BL              sub_8AB0|255-247-169-255
35678|code|CBZ             R5, loc_8B88|157-177
35680|code|LDR             R3, [R5,#4]|107-104
35682|code|LDR             R5, =dword_111B0|11-77
35684|code|TST.W           R3, #0xFF00FF00|19-240-255-47
35688|code|BEQ             loc_8AF6|197-208
35690|code|B               loc_8B14|211-231
35692|code|LDR             R3, =stdout|9-75
35694|code|MOVS            R1, #1; size|1-33
35696|code|MOVS            R2, #2; n|2-34
35698|code|LDR             R0, =asc_8F3C; "/>"|12-72
35700|code|LDR             R3, [R3]; s|27-104
35702|code|BLX             fwrite|255-247-146-238
35706|code|B               loc_8B14|203-231
35708|code|LDR             R0, =aInTag; "in_tag"|10-72
35710|code|MOVS            R2, #0x5D ; ']'; line|93-34
35712|code|LDR             R1, =a2xmlC; "2xml.c"|10-73
35714|code|LDR             R3, =aLeave; "leave"|11-75
35716|code|BLX             __assert_fail|255-247-118-238
35720|code|LDR             R5, =dword_111B0|1-77
35722|code|B               loc_8AF6|180-231
35724|data|DCD dword_111B8|184-17-1-0
35728|data|DCD dword_111B0|176-17-1-0
35732|data|DCD stdout|160-17-1-0
35736|data|DCD asc_8F40; "</"|64-143-0-0
35740|data|DCD asc_8F34; "-->"|52-143-0-0
35744|data|DCD asc_8F38; "?>"|56-143-0-0
35748|data|DCD asc_8F3C; "/>"|60-143-0-0
35752|data|DCD aInTag; "in_tag"|36-143-0-0
35756|data|DCD a2xmlC; "2xml.c"|44-143-0-0
35760|data|DCD aLeave; "leave"|28-143-0-0
35764|code|PUSH            {R4,LR}|16-181
35766|code|MOV             R4, R0|4-70
35768|code|LDR             R0, [R0]|0-104
35770|code|CBZ             R0, locret_8BDC|120-177
35772|code|ADDS            R0, #4|4-48
35774|code|BL              sub_8BB4|255-247-249-255
35778|code|LDR             R3, [R4]|35-104
35780|code|LDR             R0, [R3]|24-104
35782|code|BL              sub_8AD0|255-247-131-255
35786|code|LDR             R3, [R4]|35-104
35788|code|LDR             R0, [R3]; ptr|24-104
35790|code|BLX             free|255-247-88-238
35794|code|LDR             R0, [R4]; ptr|32-104
35796|code|BLX             free|255-247-84-238
35800|code|MOVS            R3, #0|0-35
35802|code|STR             R3, [R4]|35-96
35804|code|POP             {R4,PC}|16-189
35806|data|ALIGN 0x10|0-191
35808|code|PUSH            {R4-R6,LR}|112-181
35810|code|MOV             R4, R0|4-70
35812|code|LDRB            R3, [R0]|3-120
35814|code|CMP             R3, #0x40 ; '@'|64-43
35816|code|BEQ             loc_8C12|19-208
35818|code|BL              sub_8AB0|255-247-97-255
35822|code|LDRB            R3, [R4]|35-120
35824|code|CMP             R3, #0x21 ; '!'|33-43
35826|code|BEQ             loc_8C3C|35-208
35828|code|CMP             R3, #0x3F ; '?'|63-43
35830|code|BEQ             loc_8C54|45-208
35832|code|LDR             R5, =stdout|42-77
35834|code|MOVS            R0, #0x3C ; '<'; c|60-32
35836|code|LDR             R1, [R5]; stream|41-104
35838|code|BLX             fputc|255-247-92-238
35842|code|LDR             R1, [R5]; stream|41-104
35844|code|MOV             R0, R4; s|32-70
35846|code|BLX             fputs|255-247-146-238
35850|code|LDR             R3, =dword_111B0|39-75
35852|code|MOVS            R2, #1|1-34
35854|code|STR             R2, [R3]|26-96
35856|code|POP             {R4-R6,PC}|112-189
35858|code|LDR             R3, =dword_111B0|37-75
35860|code|LDR             R3, [R3]|27-104
35862|code|CMP             R3, #0|0-43
35864|code|BEQ             loc_8C76|45-208
35866|code|LDR             R5, =stdout|34-77
35868|code|MOVS            R0, #0x20 ; ' '; c|32-32
35870|code|LDR             R1, [R5]; fp|41-104
35872|code|BLX             _IO_putc|255-247-100-238
35876|code|LDR             R1, [R5]; stream|41-104
35878|code|ADDS            R0, R4, #1; s|96-28
35880|code|BLX             fputs|255-247-128-238
35884|code|LDR             R3, [R5]|43-104
35886|code|LDR             R0, =asc_8F60; "=\""|31-72
35888|code|MOVS            R1, #1|1-33
35890|code|MOVS            R2, #2|2-34
35892|code|POP.W           {R4-R6,LR}|189-232-112-64
35896|code|B.W             j_fwrite|255-247-46-190
35900|code|LDRB            R3, [R4,#1]|99-120
35902|code|CMP             R3, #0|0-43
35904|code|BNE             loc_8C9A|43-209
35906|code|LDR             R3, =stdout|24-75
35908|code|MOVS            R1, #1|1-33
35910|code|LDR             R0, =asc_8F84; "<!--"|26-72
35912|code|MOVS            R2, #4|4-34
35914|code|LDR             R3, [R3]|27-104
35916|code|POP.W           {R4-R6,LR}|189-232-112-64
35920|code|B.W             j_fwrite|255-247-34-190
35924|code|LDR             R5, =stdout|19-77
35926|code|MOVS            R2, #2; n|2-34
35928|code|MOVS            R1, #1; size|1-33
35930|code|LDR             R0, =asc_8F8C; "<?"|22-72
35932|code|LDR             R3, [R5]; s|43-104
35934|code|BLX             fwrite|255-247-30-238
35938|code|LDR             R1, [R5]; stream|41-104
35940|code|ADDS            R0, R4, #1; s|96-28
35942|code|BLX             fputs|255-247-98-238
35946|code|LDR             R1, [R5]|41-104
35948|code|MOVS            R0, #0x20 ; ' '|32-32
35950|code|POP.W           {R4-R6,LR}|189-232-112-64
35954|code|B.W             j_fputc|255-247-31-190
35958|code|LDR             R5, =stderr|16-77
35960|code|MOVS            R1, #1; size|1-33
35962|code|LDR             R0, =aErrorInvalidCo; "error: invalid context for "|16-72
35964|code|MOVS            R2, #0x1B; n|27-34
35966|code|LDR             R3, [R5]; s|43-104
35968|code|BLX             fwrite|255-247-12-238
35972|code|LDR             R1, [R5]; stream|41-104
35974|code|MOV             R0, R4; s|32-70
35976|code|BLX             fputs|255-247-80-238
35980|code|MOVS            R0, #0xA; c|10-32
35982|code|LDR             R1, [R5]; stream|41-104
35984|code|BLX             fputc|255-247-18-238
35988|code|MOVS            R0, #1; status|1-32
35990|code|BLX             exit|255-247-66-238
35994|code|LDR             R5, =stderr|7-77
35996|code|MOVS            R1, #1|1-33
35998|code|LDR             R0, =aErrorInvalidCo_0; "error: invalid comment entry "|8-72
36000|code|MOVS            R2, #0x1D|29-34
36002|code|B               loc_8C7E|236-231
36004|data|DCD stdout|160-17-1-0
36008|data|DCD dword_111B0|176-17-1-0
36012|data|DCD asc_8F60; "=\""|96-143-0-0
36016|data|DCD asc_8F84; "<!--"|132-143-0-0
36020|data|DCD asc_8F8C; "<?"|140-143-0-0
36024|data|DCD stderr|168-17-1-0
36028|data|DCD aErrorInvalidCo; "error: invalid context for "|68-143-0-0
36032|data|DCD aErrorInvalidCo_0; "error: invalid comment entry "|100-143-0-0
36036|code|CMP             R1, #0x3F ; '?'|63-41
36038|code|PUSH            {R3-R5,LR}|56-181
36040|code|MOV             R4, R0|4-70
36042|code|BEQ             loc_8D50|65-208
36044|code|CMP             R1, #0x40 ; '@'|64-41
36046|code|BEQ             loc_8CD8|3-208
36048|code|CMP             R1, #0x21 ; '!'|33-41
36050|code|BEQ             loc_8D50|61-208
36052|code|BL              sub_8AB0|255-247-236-254
36056|code|LDRB            R0, [R4]; c|32-120
36058|code|CBZ             R0, locret_8D1C|248-177
36060|code|LDR             R5, =stdout|32-77
36062|code|SUB.W           R3, R0, #0x22 ; '"'; switch 29 cases|160-241-34-3
36066|code|CMP             R3, #0x1C|28-43
36068|code|BHI             def_8CE6; jumptable 00008CE6 default case, cases 35-37,39-59,61|48-216
36070|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
36074|data|DCB 0x28; jump table for switch statement|40
36075|data|DCB 0x2F|47
36076|data|DCB 0x2F|47
36077|data|DCB 0x2F|47
36078|data|DCB 0x21|33
36079|data|DCB 0x2F|47
36080|data|DCB 0x2F|47
36081|data|DCB 0x2F|47
36082|data|DCB 0x2F|47
36083|data|DCB 0x2F|47
36084|data|DCB 0x2F|47
36085|data|DCB 0x2F|47
36086|data|DCB 0x2F|47
36087|data|DCB 0x2F|47
36088|data|DCB 0x2F|47
36089|data|DCB 0x2F|47
36090|data|DCB 0x2F|47
36091|data|DCB 0x2F|47
36092|data|DCB 0x2F|47
36093|data|DCB 0x2F|47
36094|data|DCB 0x2F|47
36095|data|DCB 0x2F|47
36096|data|DCB 0x2F|47
36097|data|DCB 0x2F|47
36098|data|DCB 0x2F|47
36099|data|DCB 0x2F|47
36100|data|DCB 0x1A|26
36101|data|DCB 0x2F|47
36102|data|DCB 0xF|15
36103|data|ALIGN 2|0
36104|code|LDR             R3, [R5]; jumptable 00008CE6 case 62|43-104
36106|code|MOVS            R1, #1; size|1-33
36108|code|LDR             R0, =aGt; "&gt;"|21-72
36110|code|MOVS            R2, #4; n|4-34
36112|code|BLX             fwrite|255-247-196-237
36116|code|LDRB.W          R0, [R4,#1]!|20-248-1-15
36120|code|CMP             R0, #0|0-40
36122|code|BNE             loc_8CDE|224-209
36124|code|POP             {R3-R5,PC}|56-189
36126|code|LDR             R3, [R5]; jumptable 00008CE6 case 60|43-104
36128|code|MOVS            R1, #1; size|1-33
36130|code|MOVS            R2, #4; n|4-34
36132|code|LDR             R0, =aLt; "&lt;"|16-72
36134|code|BLX             fwrite|255-247-186-237
36138|code|B               loc_8D14|243-231
36140|code|LDR             R3, [R5]; jumptable 00008CE6 case 38|43-104
36142|code|MOVS            R1, #1; size|1-33
36144|code|MOVS            R2, #5; n|5-34
36146|code|LDR             R0, =aAmp; "&amp;"|14-72
36148|code|BLX             fwrite|255-247-178-237
36152|code|B               loc_8D14|236-231
36154|code|LDR             R3, [R5]; jumptable 00008CE6 case 34|43-104
36156|code|MOVS            R1, #1; size|1-33
36158|code|MOVS            R2, #6; n|6-34
36160|code|LDR             R0, =aQuot; "&quot;"|11-72
36162|code|BLX             fwrite|255-247-172-237
36166|code|B               loc_8D14|229-231
36168|code|LDR             R1, [R5]; jumptable 00008CE6 default case, cases 35-37,39-59,61|41-104
36170|code|BLX             _IO_putc|255-247-208-237
36174|code|B               loc_8D14|225-231
36176|code|LDR             R3, =stdout|3-75
36178|code|MOV             R0, R4|32-70
36180|code|LDR             R1, [R3]|25-104
36182|code|POP.W           {R3-R5,LR}|189-232-56-64
36186|code|B.W             j_fputs|255-247-229-189
36190|data|ALIGN 0x10|0-191
36192|data|DCD stdout|160-17-1-0
36196|data|DCD aGt; "&gt;"|160-143-0-0
36200|data|DCD aLt; "&lt;"|152-143-0-0
36204|data|DCD aAmp; "&amp;"|144-143-0-0
36208|data|DCD aQuot; "&quot;"|168-143-0-0
36212|code|PUSH.W          {R4-R8,LR}|45-233-240-65
36216|code|MOVS            R1, #0x3D ; '='|61-33
36218|code|MOV             R4, R0|4-70
36220|code|BLX             strchr|255-247-110-237
36224|code|MOV             R7, R0|7-70
36226|code|CBZ             R0, loc_8D8A|16-177
36228|code|MOVS            R3, #0|0-35
36230|code|STRB.W          R3, [R7],#1|7-248-1-59
36234|code|LDRB            R3, [R4]|35-120
36236|code|CMP             R3, #0x2F ; '/'|47-43
36238|code|BNE             loc_8DDA|36-209
36240|code|LDRB            R6, [R4,#1]|102-120
36242|code|CMP             R6, #0|0-46
36244|code|BNE             loc_8DFC|50-209
36246|code|LDR             R4, =dword_111B4|69-76
36248|code|MOVS            R3, R7|59-28
36250|code|LDR             R2, [R4]|34-104
36252|code|IT NE|24-191
36254|code|MOVNE           R3, #1|1-35
36256|code|CMP             R2, #0|0-42
36258|code|ITE NE|20-191
36260|code|MOVNE           R3, #0|0-35
36262|code|ANDEQ.W         R3, R3, #1|3-240-1-3
36266|code|CMP             R3, #0|0-43
36268|code|BNE             loc_8E80|104-209
36270|code|MOV             R0, R4|32-70
36272|code|BL              sub_8BB4|255-247-0-255
36276|code|CBNZ            R7, loc_8DC6|63-185
36278|code|CMP             R6, #0|0-46
36280|code|BEQ             loc_8E96|109-208
36282|code|MOV             R0, R6|48-70
36284|code|BL              sub_8AD0|255-247-136-254
36288|code|MOV             R0, R6|48-70
36290|code|BL              sub_8BE0|255-247-13-255
36294|code|MOVS            R3, #0|0-35
36296|code|STR             R3, [R4]|35-96
36298|code|CMP             R7, #0|0-47
36300|code|BEQ             locret_8E7C|86-208
36302|code|LDRB            R1, [R6]|49-120
36304|code|MOV             R0, R7|56-70
36306|code|POP.W           {R4-R8,LR}|189-232-240-65
36310|code|B.W             sub_8CC4|255-247-117-191
36314|code|LDR             R5, =stderr|53-77
36316|code|MOVS            R2, #0x16|22-34
36318|code|MOVS            R1, #1|1-33
36320|code|LDR             R0, =aWarningInvalid; "warning: invalid line "|52-72
36322|code|LDR             R3, [R5]|43-104
36324|code|BLX             fwrite|255-247-90-237
36328|code|LDR             R1, [R5]|41-104
36330|code|MOV             R0, R4|32-70
36332|code|BLX             fputs|255-247-158-237
36336|code|LDR             R1, [R5]|41-104
36338|code|MOVS            R0, #0xA|10-32
36340|code|POP.W           {R4-R8,LR}|189-232-240-65
36344|code|B.W             j_fputc|255-247-92-189
36348|code|ADDS            R0, R4, #1|96-28
36350|code|LDR             R1, =asc_8FC8; "/"|46-73
36352|code|BLX             strtok|255-247-96-237
36356|code|MOV             R5, R0|5-70
36358|code|CMP             R0, #0|0-40
36360|code|BEQ             loc_8E90|66-208
36362|code|LDR             R4, =dword_111B0|44-76
36364|code|LDR             R3, [R4,#(dword_111B4 - 0x111B0)]|99-104
36366|code|CMP             R3, #0|0-43
36368|code|BEQ             loc_8E8A|59-208
36370|code|ADDS            R4, #4|4-52
36372|code|MOVS            R6, #0|0-38
36374|code|B               loc_8E30|11-224
36376|code|LDR             R1, =asc_8FC8; "/"|39-73
36378|code|BLX             strtok|255-247-84-237
36382|code|LDR             R3, [R4]|35-104
36384|code|MOV             R4, R3|28-70
36386|code|LDR.W           R6, [R4],#4|84-248-4-107
36390|code|MOV             R5, R0|5-70
36392|code|CMP             R0, #0|0-40
36394|code|BEQ             loc_8D98|181-208
36396|code|LDR             R3, [R3,#4]|91-104
36398|code|CBZ             R3, loc_8E3C|43-177
36400|code|LDR             R1, [R3]|25-104
36402|code|MOV             R0, R5|40-70
36404|code|BLX             strcmp|255-247-108-237
36408|code|CMP             R0, #0|0-40
36410|code|BEQ             loc_8E18|237-208
36412|code|MOV             R0, R4|32-70
36414|code|BL              sub_8BB4|255-247-185-254
36418|code|CMP             R5, #0|0-45
36420|code|BEQ             loc_8DC6|191-208
36422|code|MOVS            R0, #8|8-32
36424|code|BLX             malloc|255-247-46-237
36428|code|MOV             R8, R0|128-70
36430|code|MOV             R0, R5|40-70
36432|code|STR.W           R8, [R4]|196-248-0-128
36436|code|BLX             __strdup|255-247-80-237
36440|code|MOV             R6, R0|6-70
36442|code|STR.W           R6, [R8]|200-248-0-96
36446|code|BL              sub_8BE0|255-247-191-254
36450|code|MOVS            R0, #0|0-32
36452|code|LDR             R1, =asc_8FC8; "/"|20-73
36454|code|LDR             R4, [R4]|36-104
36456|code|BLX             strtok|255-247-44-237
36460|code|ADDS            R4, #4|4-52
36462|code|MOV             R5, R0|5-70
36464|code|CMP             R0, #0|0-40
36466|code|BNE             loc_8E46|232-209
36468|code|MOVS            R3, #0|0-35
36470|code|STR             R3, [R4]|35-96
36472|code|CMP             R7, #0|0-47
36474|code|BNE             loc_8DCE|168-209
36476|code|POP.W           {R4-R8,PC}|189-232-240-129
36480|code|LDRB            R1, [R6]|49-120
36482|code|LDR             R0, =asc_8FCC; "\n"|15-72
36484|code|BL              sub_8CC4|255-247-30-255
36488|code|B               loc_8DAE|145-231
36490|code|MOV             R6, R3|30-70
36492|code|ADDS            R4, #4|4-52
36494|code|B               loc_8E3C|213-231
36496|code|LDR             R4, =dword_111B4|6-76
36498|code|MOV             R6, R0|6-70
36500|code|B               loc_8D98|128-231
36502|code|LDR             R3, =stderr|6-75
36504|code|MOVS            R1, #1|1-33
36506|code|LDR             R0, =aErrorMultipleR; "error: multiple roots\n"|10-72
36508|code|MOVS            R2, #0x16|22-34
36510|code|LDR             R3, [R3]|27-104
36512|code|BLX             fwrite|255-247-252-236
36516|code|MOVS            R0, #1|1-32
36518|code|BLX             exit|255-247-58-237
36522|data|ALIGN 4|0-191
36524|data|DCD dword_111B4|180-17-1-0
36528|data|DCD stderr|168-17-1-0
36532|data|DCD aWarningInvalid; "warning: invalid line "|176-143-0-0
36536|data|DCD asc_8FC8; "/"|200-143-0-0
36540|data|DCD dword_111B0|176-17-1-0
36544|data|DCD asc_8FCC; "\n"|204-143-0-0
36548|data|DCD aErrorMultipleR; "error: multiple roots\n"|208-143-0-0
36552|code|PUSH.W          {R3-R9,LR}|45-233-248-67
36556|code|MOV             R6, R0|6-70
36558|code|LDR             R5, =(off_1102C - 0x8EDC)|13-77
36560|code|MOV             R7, R1|15-70
36562|code|LDR.W           R9, =(off_11030 - 0x8EE2)|223-248-52-144
36566|code|MOV             R8, R2|144-70
36568|code|ADD             R5, PC; off_1102C|125-68
36570|code|BL              .init_proc|255-247-149-252
36574|code|ADD             R9, PC; off_11030|249-68
36576|code|RSB.W           R9, R5, R9|197-235-9-9
36580|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
36584|code|BEQ             locret_8EFE|9-208
36586|code|MOVS            R4, #0|0-36
36588|code|LDR.W           R3, [R5],#4|85-248-4-59
36592|code|MOV             R0, R6|48-70
36594|code|MOV             R1, R7|57-70
36596|code|MOV             R2, R8|66-70
36598|code|ADDS            R4, #1|1-52
36600|code|BLX             R3; sub_8A98|152-71
36602|code|CMP             R4, R9|76-69
36604|code|BNE             loc_8EEC|246-209
36606|code|POP.W           {R3-R9,PC}|189-232-248-131
36610|data|ALIGN 4|0-191
36612|data|DCD off_1102C - 0x8EDC|80-129-0-0
36616|data|DCD off_11030 - 0x8EE2|78-129-0-0
36620|code|BX              LR|112-71
36622|data|ALIGN 0x10|0-191
36624|code|PUSH            {R3,LR}; _fini|8-181
36626|code|NOP|0-191
36628|code|POP             {R3,PC}|8-189
36630|data|DCW 0|0-0
69676|data|DCD sub_8A98+1|153-138-0-0
69680|data|DCD sub_8A88+1|137-138-0-0
69684|data|DCD 0|0-0-0-0
69688|data|Elf32_Dyn <1, <1>>; DT_NEEDED libxml2.so.2|1-0-0-0-1-0-0-0
69696|data|Elf32_Dyn <1, <0x4B>>; DT_NEEDED libc.so.6|1-0-0-0-75-0-0-0
69704|data|Elf32_Dyn <0xC, <0x8809>>; DT_INIT|12-0-0-0-9-136-0-0
69712|data|Elf32_Dyn <0xD, <0x8F11>>; DT_FINI|13-0-0-0-17-143-0-0
69720|data|Elf32_Dyn <0x19, <0x1102C>>; DT_INIT_ARRAY|25-0-0-0-44-16-1-0
69728|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
69736|data|Elf32_Dyn <0x1A, <0x11030>>; DT_FINI_ARRAY|26-0-0-0-48-16-1-0
69744|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
69752|data|Elf32_Dyn <4, <0x8194>>; DT_HASH|4-0-0-0-148-129-0-0
69760|data|Elf32_Dyn <0x6FFFFEF5, <0x8268>>; DT_GNU_HASH|245-254-255-111-104-130-0-0
69768|data|Elf32_Dyn <5, <0x8578>>; DT_STRTAB|5-0-0-0-120-133-0-0
69776|data|Elf32_Dyn <6, <0x8358>>; DT_SYMTAB|6-0-0-0-88-131-0-0
69784|data|Elf32_Dyn <0xA, <0x14B>>; DT_STRSZ|10-0-0-0-75-1-0-0
69792|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
69800|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
69808|data|Elf32_Dyn <3, <0x11130>>; DT_PLTGOT|3-0-0-0-48-17-1-0
69816|data|Elf32_Dyn <2, <0xA8>>; DT_PLTRELSZ|2-0-0-0-168-0-0-0
69824|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
69832|data|Elf32_Dyn <0x17, <0x8760>>; DT_JMPREL|23-0-0-0-96-135-0-0
69840|data|Elf32_Dyn <0x11, <0x8748>>; DT_REL|17-0-0-0-72-135-0-0
69848|data|Elf32_Dyn <0x12, <0x18>>; DT_RELSZ|18-0-0-0-24-0-0-0
69856|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
69864|data|Elf32_Dyn <0x6FFFFFFE, <0x8708>>; DT_VERNEED|254-255-255-111-8-135-0-0
69872|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
69880|data|Elf32_Dyn <0x6FFFFFF0, <0x86C4>>; DT_VERSYM|240-255-255-111-196-134-0-0
69888|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
69936|data|DCD stru_11038|56-16-1-0
69940|data|DCD 0|0-0-0-0
69944|data|DCD 0|0-0-0-0
69948|data|DCD __imp_abort|196-17-1-0
69952|data|DCD __imp_htmlTagLookup|228-17-1-0
69956|data|DCD __imp___libc_start_main|224-17-1-0
69960|data|DCD __imp___gmon_start__|16-18-1-0
69964|data|DCD __imp_strchr|192-17-1-0
69968|data|DCD __imp_strrchr|252-17-1-0
69972|data|DCD __imp___assert_fail|200-17-1-0
69976|data|DCD __imp_free|204-17-1-0
69980|data|DCD __imp_read|0-18-1-0
69984|data|DCD __imp_fwrite|12-18-1-0
69988|data|DCD __imp_malloc|4-18-1-0
69992|data|DCD __imp_fputc|8-18-1-0
69996|data|DCD __imp_strtok|212-17-1-0
70000|data|DCD __imp_memmove|236-17-1-0
70004|data|DCD __imp_realloc|220-17-1-0
70008|data|DCD __imp__IO_putc|232-17-1-0
70012|data|DCD __imp___strdup|208-17-1-0
70016|data|DCD __imp_memchr|244-17-1-0
70020|data|DCD __imp_strcmp|240-17-1-0
70024|data|DCD __imp_exit|216-17-1-0
70028|data|DCD __imp_fputs|248-17-1-0
70032|data|DCD __imp___gmon_start__|16-18-1-0
70036|data|ALIGN 8|0-0-0-0
70048|data|% 4; Copy of shared data|255-255-255-255
70052|data|ALIGN 8|255-255-255-255
70056|data|% 4; Copy of shared data|255-255-255-255
70060|data|% 1|255
70061|data|ALIGN 0x10|255-255-255
70064|data|% 4|255-255-255-255
70068|data|% 4|255-255-255-255
70072|data|% 4|255-255-255-255
70080|code|IMPORT __imp_strchr|0-0-0-0
70084|code|IMPORT __imp_abort|0-0-0-0
70088|code|IMPORT __imp___assert_fail|0-0-0-0
70092|code|IMPORT __imp_free|0-0-0-0
70096|code|IMPORT __imp___strdup|0-0-0-0
70100|code|IMPORT __imp_strtok|0-0-0-0
70104|code|IMPORT __imp_exit|0-0-0-0
70108|code|IMPORT __imp_realloc|0-0-0-0
70112|code|IMPORT __imp___libc_start_main|0-0-0-0
70116|code|IMPORT __imp_htmlTagLookup|0-0-0-0
70120|code|IMPORT __imp__IO_putc|0-0-0-0
70124|code|IMPORT __imp_memmove|0-0-0-0
70128|code|IMPORT __imp_strcmp|0-0-0-0
70132|code|IMPORT __imp_memchr|0-0-0-0
70136|code|IMPORT __imp_fputs|0-0-0-0
70140|code|IMPORT __imp_strrchr|0-0-0-0
70144|code|IMPORT __imp_read|0-0-0-0
70148|code|IMPORT __imp_malloc|0-0-0-0
70152|code|IMPORT __imp_fputc|0-0-0-0
70156|code|IMPORT __imp_fwrite|0-0-0-0
