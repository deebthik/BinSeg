address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|33-30-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x41FC; SHT file offset|252-65-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1C; Number of entries in SHT|28-0
50|data|DCW 0x1B; SHT entry index for string table|27-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x34A8; File offset|168-52-0-0
60|data|DCD unk_34A8; Virtual address|168-52-0-0
64|data|DCD 0x34A8; Physical address|168-52-0-0
68|data|DCD 0x60; Size in file image|96-0-0-0
72|data|DCD 0x60; Size in memory image|96-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x350C; Size in file image|12-53-0-0
168|data|DCD 0x350C; Size in memory image|12-53-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x3D80; File offset|128-61-0-0
188|data|DCD off_13D80; Virtual address|128-61-1-0
192|data|DCD 0x13D80; Physical address|128-61-1-0
196|data|DCD 0x348; Size in file image|72-3-0-0
200|data|DCD 0xB90; Size in memory image|144-11-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x3D90; File offset|144-61-0-0
220|data|DCD stru_13D90; Virtual address|144-61-1-0
224|data|DCD 0x13D90; Physical address|144-61-1-0
228|data|DCD 0x138; Size in file image|56-1-0-0
232|data|DCD 0x138; Size in memory image|56-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x3D80; File offset|128-61-0-0
316|data|DCD off_13D80; Virtual address|128-61-1-0
320|data|DCD 0x13D80; Physical address|128-61-1-0
324|data|DCD 0x280; Size in file image|128-2-0-0
328|data|DCD 0x280; Size in memory image|128-2-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xBF, 0xD7, 0x8F, 0x69, 0x5E, 0x53, 0x5C, 0x9C, 0x7A; Desc|191-215-143-105-94-83-92-156-122-10-42-163-207-69-51-47-115-8-90-201
436|data|DCD 3|3-0-0-0
440|data|DCD 0x4A|74-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x404C0580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-76-64
468|data|DCD 0x4A, 0x4E, 0x53|74-0-0-0-78-0-0-0-83-0-0-0
480|data|DCD 0xD643096A, 0xE834AF00, 0x7C92E3BA, 0xECD54543, 0x9EE3CDDA|106-9-67-214-0-175-52-232-186-227-146-124-67-69-213-236-218-205-227-158-190-218-87-27-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-234-211-239-14-254-105-114-21-118-84-60-148-89-239-151-121
536|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
552|data|Elf32_Sym <byte_798 - byte_798, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
568|data|Elf32_Sym <byte_798 - byte_798, dword_13D8C, 0, 3, 0, 0x15>|0-0-0-0-140-61-1-0-0-0-0-0-3-0-21-0
584|data|Elf32_Sym <aGetnameinfo - byte_798, dword_0, 0, 0x12, 0, 0>; "getnameinfo"|249-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
600|data|Elf32_Sym <aTraceCreateFil - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_create_filter"|188-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
616|data|Elf32_Sym <aWclrtobot - byte_798, dword_0, 0, 0x12, 0, 0>; "wclrtobot"|219-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
632|data|Elf32_Sym <aAeabiUl2f - byte_798, dword_0, 0, 0x12, 0, 0>; "__aeabi_ul2f"|99-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
648|data|Elf32_Sym <aTraceGetWireLe - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_get_wire_length"|125-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
664|data|Elf32_Sym <aAbort - byte_798, dword_0, 0, 0x12, 0, 0>; "abort"|215-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
680|data|Elf32_Sym <aTracePerror - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_perror"|208-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
696|data|Elf32_Sym <aTraceEtherNtoa - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_ether_ntoa"|38-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
712|data|Elf32_Sym <aStdscr - byte_798, dword_0, 0, 0x11, 0, 0>; "stdscr"|198-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
728|data|Elf32_Sym <aMemcmp - byte_798, dword_0, 0, 0x12, 0, 0>; "memcmp"|242-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
744|data|Elf32_Sym <aLibcStartMain - byte_798, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|109-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
760|data|Elf32_Sym <aAeabiUnwindCpp - byte_798, dword_0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|40-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
776|data|Elf32_Sym <aGmonStart - byte_798, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|15-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
792|data|Elf32_Sym <aJvRegisterclas - byte_798, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|30-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
808|data|Elf32_Sym <aZdlpv - byte_798, dword_0, 0, 0x12, 0, 0>; "_ZdlPv"|244-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
824|data|Elf32_Sym <aEndwin - byte_798, dword_0, 0, 0x12, 0, 0>; "endwin"|236-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
840|data|Elf32_Sym <aStrncpy - byte_798, dword_0, 0, 0x12, 0, 0>; "strncpy"|183-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
856|data|Elf32_Sym <aTraceHelp - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_help"|55-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
872|data|Elf32_Sym <aStrtod - byte_798, dword_0, 0, 0x12, 0, 0>; "strtod"|221-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
888|data|Elf32_Sym <aPrintw - byte_798, dword_0, 0, 0x12, 0, 0>; "printw"|205-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
904|data|Elf32_Sym <aTraceIsErr - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_is_err"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
920|data|Elf32_Sym <aZst18RbTreeDec - byte_798, dword_0, 0, 0x12, 0, 0>; "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_n"...|48-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
936|data|Elf32_Sym <aTraceReadPacke - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_read_packet"|251-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
952|data|Elf32_Sym <aMemset - byte_798, dword_0, 0, 0x12, 0, 0>; "memset"|235-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
968|data|Elf32_Sym <aGaiStrerror - byte_798, dword_0, 0, 0x12, 0, 0>; "gai_strerror"|134-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
984|data|Elf32_Sym <aTraceStart - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_start"|13-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1000|data|Elf32_Sym <aCxaEndCleanup - byte_798, dword_0, 0, 0x12, 0, 0>; "__cxa_end_cleanup"|96-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1016|data|Elf32_Sym <aTraceCreatePac - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_create_packet"|66-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1032|data|Elf32_Sym <aInitscr - byte_798, dword_0, 0, 0x12, 0, 0>; "initscr"|253-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1048|data|Elf32_Sym <aItmDeregistert - byte_798, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|50-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1064|data|Elf32_Sym <aWclrtoeol - byte_798, dword_0, 0, 0x12, 0, 0>; "wclrtoeol"|243-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1080|data|Elf32_Sym <aOptind - byte_798, dword_0, 0, 0x11, 0, 0>; "optind"|147-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1096|data|Elf32_Sym <aGetoptLong - byte_798, dword_0, 0, 0x12, 0, 0>; "getopt_long"|67-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1112|data|Elf32_Sym <aItmRegistertmc - byte_798, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|78-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1128|data|Elf32_Sym <aGetprotobynumb - byte_798, dword_0, 0, 0x12, 0, 0>; "getprotobynumber"|154-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1144|data|Elf32_Sym <aRefresh - byte_798, dword_0, 0, 0x12, 0, 0>; "refresh"|5-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1160|data|Elf32_Sym <aSetprotoent - byte_798, dword_0, 0, 0x12, 0, 0>; "setprotoent"|5-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1176|data|Elf32_Sym <aTraceDestroy - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_destroy"|86-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1192|data|Elf32_Sym <aZst18RbTreeInc - byte_798, dword_0, 0, 0x12, 0, 0>; "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_"...|114-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1208|data|Elf32_Sym <aMemcpy - byte_798, dword_0, 0, 0x12, 0, 0>; "memcpy"|31-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1224|data|Elf32_Sym <aStrtol - byte_798, dword_0, 0, 0x12, 0, 0>; "strtol"|228-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1240|data|Elf32_Sym <aCbreak - byte_798, dword_0, 0, 0x12, 0, 0>; "cbreak"|191-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1256|data|Elf32_Sym <aStackChkGuard - byte_798, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|147-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1272|data|Elf32_Sym <aTraceConfig - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_config"|147-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1288|data|Elf32_Sym <aEndprotoent - byte_798, dword_0, 0, 0x12, 0, 0>; "endprotoent"|122-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1304|data|Elf32_Sym <aSnprintfChk - byte_798, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|52-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1320|data|Elf32_Sym <aMemmove+3 - byte_798, dword_0, 0, 0x12, 0, 0>; "move"|104-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1336|data|Elf32_Sym <aZnwj - byte_798, dword_0, 0, 0x12, 0, 0>; "_Znwj"|42-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1352|data|Elf32_Sym <aSelect - byte_798, dword_0, 0, 0x12, 0, 0>; "select"|208-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1368|data|Elf32_Sym <aWgetch - byte_798, dword_0, 0, 0x12, 0, 0>; "wgetch"|229-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1384|data|Elf32_Sym <aTraceEvent - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_event"|135-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1400|data|Elf32_Sym <aFwrite - byte_798, dword_0, 0, 0x12, 0, 0>; "fwrite"|79-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1416|data|Elf32_Sym <aTraceGetSecond - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_get_seconds"|117-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1432|data|Elf32_Sym <aTraceGetDestin - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_get_destination_address"|221-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1448|data|Elf32_Sym <aZst29RbTreeIns - byte_798, dword_0, 0, 0x12, 0, 0>; "_ZSt29_Rb_tree_insert_and_rebalancebPSt"...|163-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1464|data|Elf32_Sym <aTraceCreate - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_create"|104-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1480|data|Elf32_Sym <aStackChkFail - byte_798, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|191-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1496|data|Elf32_Sym <aFprintfChk - byte_798, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|17-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1512|data|Elf32_Sym <aMemmove - byte_798, dword_0, 0, 0x12, 0, 0>; "memmove"|101-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1528|data|Elf32_Sym <aAeabiAtexit - byte_798, dword_0, 0, 0x12, 0, 0>; "__aeabi_atexit"|229-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1544|data|Elf32_Sym <aTraceGetSource - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_get_source_address"|100-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1560|data|Elf32_Sym <aStderr - byte_798, dword_0, 0, 0x11, 0, 0>; "stderr"|45-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1576|data|Elf32_Sym <aTraceDestroyPa - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_destroy_packet"|167-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1592|data|Elf32_Sym <aOptarg - byte_798, dword_0, 0, 0x11, 0, 0>; "optarg"|38-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1608|data|Elf32_Sym <aTraceGetTransp - byte_798, dword_0, 0, 0x12, 0, 0>; "trace_get_transport"|147-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1624|data|Elf32_Sym <aGxxPersonality - byte_798, dword_0, 0, 0x12, 0, 0>; "__gxx_personality_v0"|251-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1640|data|Elf32_Sym <aAeabiUl2d - byte_798, dword_0, 0, 0x12, 0, 0>; "__aeabi_ul2d"|86-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1656|data|Elf32_Sym <aAeabiUnwindCpp_0 - byte_798, dword_0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr1"|63-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1672|data|Elf32_Sym <aNoecho - byte_798, dword_0, 0, 0x12, 0, 0>; "noecho"|212-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1688|data|Elf32_Sym <aCxaFinalize - byte_798, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|86-4-0-0-0-0-0-0-0-0-0-0-34-0-0-0
1704|data|Elf32_Sym <aFdeltChk - byte_798, dword_0, 0, 0x12, 0, 0>; "__fdelt_chk"|171-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1720|data|Elf32_Sym <aDataStart - byte_798, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|165-4-0-0-0-64-1-0-0-0-0-0-16-0-24-0
1736|data|Elf32_Sym <aBssEnd+1 - byte_798, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|212-4-0-0-16-73-1-0-0-0-0-0-16-0-25-0
1752|data|Elf32_Sym <aEnd_0 - byte_798, _end, 0, 0x10, 0, 0x19>; "_end"|231-4-0-0-16-73-1-0-0-0-0-0-16-0-25-0
1768|data|Elf32_Sym <aEdata - byte_798, __bss_start__, 0, 0x10, 0, 0x18>; "_edata"|178-4-0-0-200-64-1-0-0-0-0-0-16-0-24-0
1784|data|Elf32_Sym <aLibcCsuInit - byte_798, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|66-5-0-0-145-47-0-0-64-0-0-0-18-0-13-0
1800|data|Elf32_Sym <aBssEnd - byte_798, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|211-4-0-0-16-73-1-0-0-0-0-0-16-0-25-0
1816|data|Elf32_Sym <aBssStart - byte_798, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start"|185-4-0-0-200-64-1-0-0-0-0-0-16-0-25-0
1832|data|Elf32_Sym <aLibcStartMain+0xD - byte_798, main+1, 0x970, 0x12, 0, 0xD>; "main"|122-4-0-0-105-20-0-0-112-9-0-0-18-0-13-0
1848|data|Elf32_Sym <aLibcCsuInit+0xA - byte_798, .init_proc, 0, 0x12, 0, 0xB>; "_init"|76-5-0-0-88-17-0-0-0-0-0-0-18-0-11-0
1864|data|Elf32_Sym <aLibcCsuFini - byte_798, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|236-4-0-0-209-47-0-0-2-0-0-0-18-0-13-0
1880|data|Elf32_Sym <aLibcCsuFini+0xA - byte_798, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|246-4-0-0-212-47-0-0-0-0-0-0-18-0-14-0
1896|data|Elf32_Sym <aZnst3mapi9flow - byte_798, \; "_ZNSt3mapI9flowkey_t10flowdata_tSt4less"... ...|252-4-0-0-145-44-0-0-14-0-0-0-34-0-13-0
1912|data|Elf32_Sym <aBssStart_0 - byte_798, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start__"|197-4-0-0-200-64-1-0-0-0-0-0-16-0-25-0
1928|data|Elf32_Sym <aEnd - byte_798, _end, 0, 0x10, 0, 0x19>; "__end__"|223-4-0-0-16-73-1-0-0-0-0-0-16-0-25-0
1944|data|DCB 0|0
1945|data|DCB "libtrace.so.3",0|108-105-98-116-114-97-99-101-46-115-111-46-51-0
1959|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1974|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1994|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
2022|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
2048|data|DCB "trace_create",0|116-114-97-99-101-95-99-114-101-97-116-101-0
2061|data|DCB "trace_get_seconds",0|116-114-97-99-101-95-103-101-116-95-115-101-99-111-110-100-115-0
2079|data|DCB "trace_event",0|116-114-97-99-101-95-101-118-101-110-116-0
2091|data|DCB "trace_get_transport",0|116-114-97-99-101-95-103-101-116-95-116-114-97-110-115-112-111-114-116-0
2111|data|DCB "trace_destroy_packet",0|116-114-97-99-101-95-100-101-115-116-114-111-121-95-112-97-99-107-101-116-0
2132|data|DCB "trace_create_filter",0|116-114-97-99-101-95-99-114-101-97-116-101-95-102-105-108-116-101-114-0
2152|data|DCB "trace_perror",0|116-114-97-99-101-95-112-101-114-114-111-114-0
2165|data|DCB "trace_get_destination_address",0|116-114-97-99-101-95-103-101-116-95-100-101-115-116-105-110-97-116-105-111-110-95-97-100-100-114-101-115-115-0
2195|data|DCB "trace_read_packet",0|116-114-97-99-101-95-114-101-97-100-95-112-97-99-107-101-116-0
2213|data|DCB "trace_start",0|116-114-97-99-101-95-115-116-97-114-116-0
2225|data|DCB "trace_is_err",0|116-114-97-99-101-95-105-115-95-101-114-114-0
2238|data|DCB "trace_ether_ntoa",0|116-114-97-99-101-95-101-116-104-101-114-95-110-116-111-97-0
2255|data|DCB "trace_help",0|116-114-97-99-101-95-104-101-108-112-0
2266|data|DCB "trace_create_packet",0|116-114-97-99-101-95-99-114-101-97-116-101-95-112-97-99-107-101-116-0
2286|data|DCB "trace_destroy",0|116-114-97-99-101-95-100-101-115-116-114-111-121-0
2300|data|DCB "trace_get_source_address",0|116-114-97-99-101-95-103-101-116-95-115-111-117-114-99-101-95-97-100-100-114-101-115-115-0
2325|data|DCB "trace_get_wire_length",0|116-114-97-99-101-95-103-101-116-95-119-105-114-101-95-108-101-110-103-116-104-0
2347|data|DCB "trace_config",0|116-114-97-99-101-95-99-111-110-102-105-103-0
2360|data|DCB "libwandio.so.1",0|108-105-98-119-97-110-100-105-111-46-115-111-46-49-0
2375|data|DCB "libncurses.so.5",0|108-105-98-110-99-117-114-115-101-115-46-115-111-46-53-0
2391|data|DCB "cbreak",0|99-98-114-101-97-107-0
2398|data|DCB "stdscr",0|115-116-100-115-99-114-0
2405|data|DCB "printw",0|112-114-105-110-116-119-0
2412|data|DCB "noecho",0|110-111-101-99-104-111-0
2419|data|DCB "wclrtobot",0|119-99-108-114-116-111-98-111-116-0
2429|data|DCB "wgetch",0|119-103-101-116-99-104-0
2436|data|DCB "endwin",0|101-110-100-119-105-110-0
2443|data|DCB "wclrtoeol",0|119-99-108-114-116-111-101-111-108-0
2453|data|DCB "initscr",0|105-110-105-116-115-99-114-0
2461|data|DCB "refresh",0|114-101-102-114-101-115-104-0
2469|data|DCB "libtinfo.so.5",0|108-105-98-116-105-110-102-111-46-115-111-46-53-0
2483|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
2498|data|DCB "_Znwj",0|95-90-110-119-106-0
2504|data|DCB "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-100-101-99-114-101-109-101-110-116-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
2552|data|DCB "__cxa_end_cleanup",0|95-95-99-120-97-95-101-110-100-95-99-108-101-97-110-117-112-0
2570|data|DCB "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-105-110-99-114-101-109-101-110-116-80-75-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
2619|data|DCB "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS"|95-90-83-116-50-57-95-82-98-95-116-114-101-101-95-105-110-115-101-114-116-95-97-110-100-95-114-101-98-97-108-97-110-99-101-98-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-83-48-95-82-83-95-0
2685|data|DCB "__aeabi_atexit",0|95-95-97-101-97-98-105-95-97-116-101-120-105-116-0
2700|data|DCB "_ZdlPv",0|95-90-100-108-80-118-0
2707|data|DCB "__gxx_personality_v0",0|95-95-103-120-120-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
2728|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
2738|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
2752|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
2775|data|DCB "__aeabi_unwind_cpp_pr1",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-49-0
2798|data|DCB "__aeabi_ul2d",0|95-95-97-101-97-98-105-95-117-108-50-100-0
2811|data|DCB "__aeabi_ul2f",0|95-95-97-101-97-98-105-95-117-108-50-102-0
2824|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
2834|data|DCB "endprotoent",0|101-110-100-112-114-111-116-111-101-110-116-0
2846|data|DCB "gai_strerror",0|103-97-105-95-115-116-114-101-114-114-111-114-0
2859|data|DCB "optind",0|111-112-116-105-110-100-0
2866|data|DCB "getprotobynumber",0|103-101-116-112-114-111-116-111-98-121-110-117-109-98-101-114-0
2883|data|DCB "__fdelt_chk",0|95-95-102-100-101-108-116-95-99-104-107-0
2895|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
2903|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
2920|data|DCB "select",0|115-101-108-101-99-116-0
2927|data|DCB "abort",0|97-98-111-114-116-0
2933|data|DCB "strtod",0|115-116-114-116-111-100-0
2940|data|DCB "strtol",0|115-116-114-116-111-108-0
2947|data|DCB "memset",0|109-101-109-115-101-116-0
2954|data|DCB "memcmp",0|109-101-109-99-109-112-0
2961|data|DCB "getnameinfo",0|103-101-116-110-97-109-101-105-110-102-111-0
2973|data|DCB "setprotoent",0|115-101-116-112-114-111-116-111-101-110-116-0
2985|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
2999|data|DCB "memcpy",0|109-101-109-99-112-121-0
3006|data|DCB "optarg",0|111-112-116-97-114-103-0
3013|data|DCB "stderr",0|115-116-100-101-114-114-0
3020|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
3035|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
3047|data|DCB "fwrite",0|102-119-114-105-116-101-0
3054|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
3069|data|DCB "memmove",0|109-101-109-109-111-118-101-0
3077|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
3095|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
3115|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
3133|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
3146|data|DCB "_edata",0|95-101-100-97-116-97-0
3153|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
3165|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
3179|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
3191|data|DCB "__end__",0|95-95-101-110-100-95-95-0
3199|data|DCB "_end",0|95-101-110-100-0
3204|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
3220|data|DCB "_ZNSt3mapI9flowkey_t10flowdata_tSt4lessIS0_ESaISt4pairIKS0_S1_EE"|95-90-78-83-116-51-109-97-112-73-57-102-108-111-119-107-101-121-95-116-49-48-102-108-111-119-100-97-116-97-95-116-83-116-52-108-101-115-115-73-83-48-95-69-83-97-73-83-116-52-112-97-105-114-73-75-83-48-95-83-49-95-69-69-69-68-49-69-118-0
3290|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
3306|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
3316|data|DCB "CXXABI_ARM_1.3.3",0|67-88-88-65-66-73-95-65-82-77-95-49-46-51-46-51-0
3333|data|DCB "CXXABI_1.3",0|67-88-88-65-66-73-95-49-46-51-0
3344|data|DCB "GLIBCXX_3.4",0|71-76-73-66-67-88-88-95-51-46-52-0
3356|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
3364|data|DCB "GLIBC_2.15",0|71-76-73-66-67-95-50-46-49-53-0
3375|data|DCB 0|0
3376|data|DCW 0|0-0
3378|data|DCW 0|0-0
3380|data|DCW 0|0-0
3382|data|DCW 2; getnameinfo@@GLIBC_2.4|2-0
3384|data|DCW 0; local  symbol: trace_create_filter|0-0
3386|data|DCW 0; local  symbol: wclrtobot|0-0
3388|data|DCW 3; __aeabi_ul2f@@GCC_3.5|3-0
3390|data|DCW 0; local  symbol: trace_get_wire_length|0-0
3392|data|DCW 2; abort@@GLIBC_2.4|2-0
3394|data|DCW 0; local  symbol: trace_perror|0-0
3396|data|DCW 0; local  symbol: trace_ether_ntoa|0-0
3398|data|DCW 0; local  symbol: stdscr|0-0
3400|data|DCW 2; memcmp@@GLIBC_2.4|2-0
3402|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
3404|data|DCW 3; __aeabi_unwind_cpp_pr0@@GCC_3.5|3-0
3406|data|DCW 0; local  symbol: __gmon_start__|0-0
3408|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
3410|data|DCW 4; _ZdlPv@@GLIBCXX_3.4|4-0
3412|data|DCW 0; local  symbol: endwin|0-0
3414|data|DCW 2; strncpy@@GLIBC_2.4|2-0
3416|data|DCW 0; local  symbol: trace_help|0-0
3418|data|DCW 2; strtod@@GLIBC_2.4|2-0
3420|data|DCW 0; local  symbol: printw|0-0
3422|data|DCW 0; local  symbol: trace_is_err|0-0
3424|data|DCW 4; _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4|4-0
3426|data|DCW 0; local  symbol: trace_read_packet|0-0
3428|data|DCW 2; memset@@GLIBC_2.4|2-0
3430|data|DCW 2; gai_strerror@@GLIBC_2.4|2-0
3432|data|DCW 0; local  symbol: trace_start|0-0
3434|data|DCW 5; __cxa_end_cleanup@@CXXABI_1.3|5-0
3436|data|DCW 0; local  symbol: trace_create_packet|0-0
3438|data|DCW 0; local  symbol: initscr|0-0
3440|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
3442|data|DCW 0; local  symbol: wclrtoeol|0-0
3444|data|DCW 2; optind@@GLIBC_2.4|2-0
3446|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
3448|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
3450|data|DCW 2; getprotobynumber@@GLIBC_2.4|2-0
3452|data|DCW 0; local  symbol: refresh|0-0
3454|data|DCW 2; setprotoent@@GLIBC_2.4|2-0
3456|data|DCW 0; local  symbol: trace_destroy|0-0
3458|data|DCW 4; _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4|4-0
3460|data|DCW 2; memcpy@@GLIBC_2.4|2-0
3462|data|DCW 2; strtol@@GLIBC_2.4|2-0
3464|data|DCW 0; local  symbol: cbreak|0-0
3466|data|DCW 6; __stack_chk_guard@@GLIBC_2.4|6-0
3468|data|DCW 0; local  symbol: trace_config|0-0
3470|data|DCW 2; endprotoent@@GLIBC_2.4|2-0
3472|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
3474|data|DCW 0; local  symbol: move|0-0
3476|data|DCW 4; _Znwj@@GLIBCXX_3.4|4-0
3478|data|DCW 2; select@@GLIBC_2.4|2-0
3480|data|DCW 0; local  symbol: wgetch|0-0
3482|data|DCW 0; local  symbol: trace_event|0-0
3484|data|DCW 2; fwrite@@GLIBC_2.4|2-0
3486|data|DCW 0; local  symbol: trace_get_seconds|0-0
3488|data|DCW 0; local  symbol: trace_get_destination_address|0-0
3490|data|DCW 4; _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4|4-0
3492|data|DCW 0; local  symbol: trace_create|0-0
3494|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
3496|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
3498|data|DCW 2; memmove@@GLIBC_2.4|2-0
3500|data|DCW 7; __aeabi_atexit@@CXXABI_ARM_1.3.3|7-0
3502|data|DCW 0; local  symbol: trace_get_source_address|0-0
3504|data|DCW 2; stderr@@GLIBC_2.4|2-0
3506|data|DCW 0; local  symbol: trace_destroy_packet|0-0
3508|data|DCW 2; optarg@@GLIBC_2.4|2-0
3510|data|DCW 0; local  symbol: trace_get_transport|0-0
3512|data|DCW 5; __gxx_personality_v0@@CXXABI_1.3|5-0
3514|data|DCW 3; __aeabi_ul2d@@GCC_3.5|3-0
3516|data|DCW 3; __aeabi_unwind_cpp_pr1@@GCC_3.5|3-0
3518|data|DCW 0; local  symbol: noecho|0-0
3520|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
3522|data|DCW 8; __fdelt_chk@@GLIBC_2.15|8-0
3524|data|DCW 1; global symbol: __data_start|1-0
3526|data|DCW 1; global symbol: _bss_end__|1-0
3528|data|DCW 1; global symbol: _end|1-0
3530|data|DCW 1; global symbol: _edata|1-0
3532|data|DCW 1; global symbol: __libc_csu_init|1-0
3534|data|DCW 1; global symbol: __bss_end__|1-0
3536|data|DCW 1; global symbol: __bss_start|1-0
3538|data|DCW 1; global symbol: main|1-0
3540|data|DCW 1; global symbol: _init|1-0
3542|data|DCW 1; global symbol: __libc_csu_fini|1-0
3544|data|DCW 1; global symbol: _fini|1-0
3546|data|DCW 1; global symbol: _ZNSt3mapI9flowkey_t10flowdata_tSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev|1-0
3548|data|DCW 1; global symbol: __bss_start__|1-0
3550|data|DCW 1; global symbol: __end__|1-0
3552|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_798, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-127-4-0-0-16-0-0-0-32-0-0-0
3568|data|Elf32_Vernaux <0xD696914, 0, 6, aGlibc24 - byte_798, 0>; "GLIBC_2.4"|20-105-105-13-0-0-6-0-82-5-0-0-0-0-0-0
3584|data|Elf32_Verneed <1, 3, aLibstdcSo6 - byte_798, 0x10, 0x40>; "libstdc++.so.6"|1-0-3-0-27-2-0-0-16-0-0-0-64-0-0-0
3600|data|Elf32_Vernaux <0x849AFA3, 0, 7, aCxxabiArm133 - byte_798, 0x10>; "CXXABI_ARM_1.3.3"|163-175-73-8-0-0-7-0-92-5-0-0-16-0-0-0
3616|data|Elf32_Vernaux <0x56BAFD3, 0, 5, aCxxabi13 - byte_798, 0x10>; "CXXABI_1.3"|211-175-107-5-0-0-5-0-109-5-0-0-16-0-0-0
3632|data|Elf32_Vernaux <0x8922974, 0, 4, aGlibcxx34 - byte_798, 0>; "GLIBCXX_3.4"|116-41-146-8-0-0-4-0-120-5-0-0-0-0-0-0
3648|data|Elf32_Verneed <1, 1, aLibgccSSo1 - byte_798, 0x10, 0x20>; "libgcc_s.so.1"|1-0-1-0-26-3-0-0-16-0-0-0-32-0-0-0
3664|data|Elf32_Vernaux <0xB792655, 0, 3, aGcc35 - byte_798, 0>; "GCC_3.5"|85-38-121-11-0-0-3-0-132-5-0-0-0-0-0-0
3680|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_798, 0x10, 0>; "libc.so.6"|1-0-2-0-112-3-0-0-16-0-0-0-0-0-0-0
3696|data|Elf32_Vernaux <0x6969195, 0, 8, aGlibc215 - byte_798, 0x10>; "GLIBC_2.15"|149-145-150-6-0-0-8-0-140-5-0-0-16-0-0-0
3712|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_798, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-82-5-0-0-0-0-0-0
3728|data|Elf32_Rel <0x13D80, 0x17>; R_ARM_RELATIVE|128-61-1-0-23-0-0-0
3736|data|Elf32_Rel <0x13D84, 0x17>; R_ARM_RELATIVE|132-61-1-0-23-0-0-0
3744|data|Elf32_Rel <0x13D88, 0x17>; R_ARM_RELATIVE|136-61-1-0-23-0-0-0
3752|data|Elf32_Rel <0x13FC8, 0x17>; R_ARM_RELATIVE|200-63-1-0-23-0-0-0
3760|data|Elf32_Rel <0x13FDC, 0x17>; R_ARM_RELATIVE|220-63-1-0-23-0-0-0
3768|data|Elf32_Rel <0x13FE8, 0x17>; R_ARM_RELATIVE|232-63-1-0-23-0-0-0
3776|data|Elf32_Rel <0x13FFC, 0x17>; R_ARM_RELATIVE|252-63-1-0-23-0-0-0
3784|data|Elf32_Rel <0x14004, 0x17>; R_ARM_RELATIVE|4-64-1-0-23-0-0-0
3792|data|Elf32_Rel <0x14018, 0x17>; R_ARM_RELATIVE|24-64-1-0-23-0-0-0
3800|data|Elf32_Rel <0x14028, 0x17>; R_ARM_RELATIVE|40-64-1-0-23-0-0-0
3808|data|Elf32_Rel <0x14038, 0x17>; R_ARM_RELATIVE|56-64-1-0-23-0-0-0
3816|data|Elf32_Rel <0x14048, 0x17>; R_ARM_RELATIVE|72-64-1-0-23-0-0-0
3824|data|Elf32_Rel <0x14058, 0x17>; R_ARM_RELATIVE|88-64-1-0-23-0-0-0
3832|data|Elf32_Rel <0x14068, 0x17>; R_ARM_RELATIVE|104-64-1-0-23-0-0-0
3840|data|Elf32_Rel <0x14078, 0x17>; R_ARM_RELATIVE|120-64-1-0-23-0-0-0
3848|data|Elf32_Rel <0x14088, 0x17>; R_ARM_RELATIVE|136-64-1-0-23-0-0-0
3856|data|Elf32_Rel <0x14098, 0x17>; R_ARM_RELATIVE|152-64-1-0-23-0-0-0
3864|data|Elf32_Rel <0x140A8, 0x17>; R_ARM_RELATIVE|168-64-1-0-23-0-0-0
3872|data|Elf32_Rel <0x13FCC, 0xB15>; R_ARM_GLOB_DAT stdscr|204-63-1-0-21-11-0-0
3880|data|Elf32_Rel <0x13FD0, 0xF15>; R_ARM_GLOB_DAT __gmon_start__|208-63-1-0-21-15-0-0
3888|data|Elf32_Rel <0x13FD4, 0x1015>; R_ARM_GLOB_DAT _Jv_RegisterClasses|212-63-1-0-21-16-0-0
3896|data|Elf32_Rel <0x13FD8, 0x2015>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-63-1-0-21-32-0-0
3904|data|Elf32_Rel <0x13FE0, 0x2215>; R_ARM_GLOB_DAT optind|224-63-1-0-21-34-0-0
3912|data|Elf32_Rel <0x13FE4, 0x2415>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|228-63-1-0-21-36-0-0
3920|data|Elf32_Rel <0x13FEC, 0x2D15>; R_ARM_GLOB_DAT __stack_chk_guard|236-63-1-0-21-45-0-0
3928|data|Elf32_Rel <0x13FF0, 0x4015>; R_ARM_GLOB_DAT stderr|240-63-1-0-21-64-0-0
3936|data|Elf32_Rel <0x13FF4, 0x4215>; R_ARM_GLOB_DAT optarg|244-63-1-0-21-66-0-0
3944|data|Elf32_Rel <0x13FF8, 0x4815>; R_ARM_GLOB_DAT __cxa_finalize|248-63-1-0-21-72-0-0
3952|data|Elf32_Rel <0x13ED4, 0x316>; R_ARM_JUMP_SLOT getnameinfo|212-62-1-0-22-3-0-0
3960|data|Elf32_Rel <0x13ED8, 0x416>; R_ARM_JUMP_SLOT trace_create_filter|216-62-1-0-22-4-0-0
3968|data|Elf32_Rel <0x13EDC, 0x516>; R_ARM_JUMP_SLOT wclrtobot|220-62-1-0-22-5-0-0
3976|data|Elf32_Rel <0x13EE0, 0x616>; R_ARM_JUMP_SLOT __aeabi_ul2f|224-62-1-0-22-6-0-0
3984|data|Elf32_Rel <0x13EE4, 0x716>; R_ARM_JUMP_SLOT trace_get_wire_length|228-62-1-0-22-7-0-0
3992|data|Elf32_Rel <0x13EE8, 0x816>; R_ARM_JUMP_SLOT abort|232-62-1-0-22-8-0-0
4000|data|Elf32_Rel <0x13EEC, 0x916>; R_ARM_JUMP_SLOT trace_perror|236-62-1-0-22-9-0-0
4008|data|Elf32_Rel <0x13EF0, 0xA16>; R_ARM_JUMP_SLOT trace_ether_ntoa|240-62-1-0-22-10-0-0
4016|data|Elf32_Rel <0x13EF4, 0xC16>; R_ARM_JUMP_SLOT memcmp|244-62-1-0-22-12-0-0
4024|data|Elf32_Rel <0x13EF8, 0xD16>; R_ARM_JUMP_SLOT __libc_start_main|248-62-1-0-22-13-0-0
4032|data|Elf32_Rel <0x13EFC, 0xF16>; R_ARM_JUMP_SLOT __gmon_start__|252-62-1-0-22-15-0-0
4040|data|Elf32_Rel <0x13F00, 0x1116>; R_ARM_JUMP_SLOT _ZdlPv|0-63-1-0-22-17-0-0
4048|data|Elf32_Rel <0x13F04, 0x1216>; R_ARM_JUMP_SLOT endwin|4-63-1-0-22-18-0-0
4056|data|Elf32_Rel <0x13F08, 0x1316>; R_ARM_JUMP_SLOT strncpy|8-63-1-0-22-19-0-0
4064|data|Elf32_Rel <0x13F0C, 0x1416>; R_ARM_JUMP_SLOT trace_help|12-63-1-0-22-20-0-0
4072|data|Elf32_Rel <0x13F10, 0x1516>; R_ARM_JUMP_SLOT strtod|16-63-1-0-22-21-0-0
4080|data|Elf32_Rel <0x13F14, 0x1616>; R_ARM_JUMP_SLOT printw|20-63-1-0-22-22-0-0
4088|data|Elf32_Rel <0x13F18, 0x1716>; R_ARM_JUMP_SLOT trace_is_err|24-63-1-0-22-23-0-0
4096|data|Elf32_Rel <0x13F1C, 0x1816>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base|28-63-1-0-22-24-0-0
4104|data|Elf32_Rel <0x13F20, 0x1916>; R_ARM_JUMP_SLOT trace_read_packet|32-63-1-0-22-25-0-0
4112|data|Elf32_Rel <0x13F24, 0x1A16>; R_ARM_JUMP_SLOT memset|36-63-1-0-22-26-0-0
4120|data|Elf32_Rel <0x13F28, 0x1B16>; R_ARM_JUMP_SLOT gai_strerror|40-63-1-0-22-27-0-0
4128|data|Elf32_Rel <0x13F2C, 0x1C16>; R_ARM_JUMP_SLOT trace_start|44-63-1-0-22-28-0-0
4136|data|Elf32_Rel <0x13F30, 0x1D16>; R_ARM_JUMP_SLOT __cxa_end_cleanup|48-63-1-0-22-29-0-0
4144|data|Elf32_Rel <0x13F34, 0x1E16>; R_ARM_JUMP_SLOT trace_create_packet|52-63-1-0-22-30-0-0
4152|data|Elf32_Rel <0x13F38, 0x1F16>; R_ARM_JUMP_SLOT initscr|56-63-1-0-22-31-0-0
4160|data|Elf32_Rel <0x13F3C, 0x2116>; R_ARM_JUMP_SLOT wclrtoeol|60-63-1-0-22-33-0-0
4168|data|Elf32_Rel <0x13F40, 0x2316>; R_ARM_JUMP_SLOT getopt_long|64-63-1-0-22-35-0-0
4176|data|Elf32_Rel <0x13F44, 0x2516>; R_ARM_JUMP_SLOT getprotobynumber|68-63-1-0-22-37-0-0
4184|data|Elf32_Rel <0x13F48, 0x2616>; R_ARM_JUMP_SLOT refresh|72-63-1-0-22-38-0-0
4192|data|Elf32_Rel <0x13F4C, 0x2716>; R_ARM_JUMP_SLOT setprotoent|76-63-1-0-22-39-0-0
4200|data|Elf32_Rel <0x13F50, 0x2816>; R_ARM_JUMP_SLOT trace_destroy|80-63-1-0-22-40-0-0
4208|data|Elf32_Rel <0x13F54, 0x2916>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base|84-63-1-0-22-41-0-0
4216|data|Elf32_Rel <0x13F58, 0x2A16>; R_ARM_JUMP_SLOT memcpy|88-63-1-0-22-42-0-0
4224|data|Elf32_Rel <0x13F5C, 0x2B16>; R_ARM_JUMP_SLOT strtol|92-63-1-0-22-43-0-0
4232|data|Elf32_Rel <0x13F60, 0x2C16>; R_ARM_JUMP_SLOT cbreak|96-63-1-0-22-44-0-0
4240|data|Elf32_Rel <0x13F64, 0x2E16>; R_ARM_JUMP_SLOT trace_config|100-63-1-0-22-46-0-0
4248|data|Elf32_Rel <0x13F68, 0x2F16>; R_ARM_JUMP_SLOT endprotoent|104-63-1-0-22-47-0-0
4256|data|Elf32_Rel <0x13F6C, 0x3016>; R_ARM_JUMP_SLOT __snprintf_chk|108-63-1-0-22-48-0-0
4264|data|Elf32_Rel <0x13F70, 0x3116>; R_ARM_JUMP_SLOT move|112-63-1-0-22-49-0-0
4272|data|Elf32_Rel <0x13F74, 0x3216>; R_ARM_JUMP_SLOT _Znwj|116-63-1-0-22-50-0-0
4280|data|Elf32_Rel <0x13F78, 0x3316>; R_ARM_JUMP_SLOT select|120-63-1-0-22-51-0-0
4288|data|Elf32_Rel <0x13F7C, 0x3416>; R_ARM_JUMP_SLOT wgetch|124-63-1-0-22-52-0-0
4296|data|Elf32_Rel <0x13F80, 0x3516>; R_ARM_JUMP_SLOT trace_event|128-63-1-0-22-53-0-0
4304|data|Elf32_Rel <0x13F84, 0x3616>; R_ARM_JUMP_SLOT fwrite|132-63-1-0-22-54-0-0
4312|data|Elf32_Rel <0x13F88, 0x3716>; R_ARM_JUMP_SLOT trace_get_seconds|136-63-1-0-22-55-0-0
4320|data|Elf32_Rel <0x13F8C, 0x3816>; R_ARM_JUMP_SLOT trace_get_destination_address|140-63-1-0-22-56-0-0
4328|data|Elf32_Rel <0x13F90, 0x3916>; R_ARM_JUMP_SLOT _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_|144-63-1-0-22-57-0-0
4336|data|Elf32_Rel <0x13F94, 0x3A16>; R_ARM_JUMP_SLOT trace_create|148-63-1-0-22-58-0-0
4344|data|Elf32_Rel <0x13F98, 0x3B16>; R_ARM_JUMP_SLOT __stack_chk_fail|152-63-1-0-22-59-0-0
4352|data|Elf32_Rel <0x13F9C, 0x3C16>; R_ARM_JUMP_SLOT __fprintf_chk|156-63-1-0-22-60-0-0
4360|data|Elf32_Rel <0x13FA0, 0x3D16>; R_ARM_JUMP_SLOT memmove|160-63-1-0-22-61-0-0
4368|data|Elf32_Rel <0x13FA4, 0x3E16>; R_ARM_JUMP_SLOT __aeabi_atexit|164-63-1-0-22-62-0-0
4376|data|Elf32_Rel <0x13FA8, 0x3F16>; R_ARM_JUMP_SLOT trace_get_source_address|168-63-1-0-22-63-0-0
4384|data|Elf32_Rel <0x13FAC, 0x4116>; R_ARM_JUMP_SLOT trace_destroy_packet|172-63-1-0-22-65-0-0
4392|data|Elf32_Rel <0x13FB0, 0x4316>; R_ARM_JUMP_SLOT trace_get_transport|176-63-1-0-22-67-0-0
4400|data|Elf32_Rel <0x13FB4, 0x4416>; R_ARM_JUMP_SLOT __gxx_personality_v0|180-63-1-0-22-68-0-0
4408|data|Elf32_Rel <0x13FB8, 0x4516>; R_ARM_JUMP_SLOT __aeabi_ul2d|184-63-1-0-22-69-0-0
4416|data|Elf32_Rel <0x13FBC, 0x4716>; R_ARM_JUMP_SLOT noecho|188-63-1-0-22-71-0-0
4424|data|Elf32_Rel <0x13FC0, 0x4816>; R_ARM_JUMP_SLOT __cxa_finalize|192-63-1-0-22-72-0-0
4432|data|Elf32_Rel <0x13FC4, 0x4916>; R_ARM_JUMP_SLOT __fdelt_chk|196-63-1-0-22-73-0-0
4440|code|PUSH            {R3,LR}; _init|8-64-45-233
4444|code|BL              sub_1E68|65-3-0-235
4448|code|POP             {R3,PC}|8-128-189-232
4452|code|PUSH            {LR}|4-224-45-229
4456|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x1174)|4-224-159-229
4460|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
4464|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
4468|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1174|84-45-1-0
4472|code|ADR             R12, 0x1180|0-198-143-226
4476|code|ADD             R12, R12, #0x12000|18-202-140-226
4480|code|LDR             PC, [R12,#(getnameinfo_ptr - 0x13180)]!; __imp_getnameinfo|84-253-188-229
4484|code|ADR             R12, 0x118C|0-198-143-226
4488|code|ADD             R12, R12, #0x12000|18-202-140-226
4492|code|LDR             PC, [R12,#(trace_create_filter_ptr - 0x1318C)]!; __imp_trace_create_filter|76-253-188-229
4496|code|ADR             R12, 0x1198|0-198-143-226
4500|code|ADD             R12, R12, #0x12000|18-202-140-226
4504|code|LDR             PC, [R12,#(wclrtobot_ptr - 0x13198)]!; __imp_wclrtobot|68-253-188-229
4508|code|ADR             R12, 0x11A4|0-198-143-226
4512|code|ADD             R12, R12, #0x12000|18-202-140-226
4516|code|LDR             PC, [R12,#(__aeabi_ul2f_ptr - 0x131A4)]!; __imp___aeabi_ul2f|60-253-188-229
4520|code|ADR             R12, 0x11B0|0-198-143-226
4524|code|ADD             R12, R12, #0x12000|18-202-140-226
4528|code|LDR             PC, [R12,#(trace_get_wire_length_ptr - 0x131B0)]!; __imp_trace_get_wire_length|52-253-188-229
4532|code|ADR             R12, 0x11BC|0-198-143-226
4536|code|ADD             R12, R12, #0x12000|18-202-140-226
4540|code|LDR             PC, [R12,#(abort_ptr - 0x131BC)]!; __imp_abort|44-253-188-229
4544|code|ADR             R12, 0x11C8|0-198-143-226
4548|code|ADD             R12, R12, #0x12000|18-202-140-226
4552|code|LDR             PC, [R12,#(trace_perror_ptr - 0x131C8)]!; __imp_trace_perror|36-253-188-229
4556|code|ADR             R12, 0x11D4|0-198-143-226
4560|code|ADD             R12, R12, #0x12000|18-202-140-226
4564|code|LDR             PC, [R12,#(trace_ether_ntoa_ptr - 0x131D4)]!; __imp_trace_ether_ntoa|28-253-188-229
4568|code|BX              PC|120-71
4570|data|ALIGN 4|192-70
4572|code|ADR             R12, 0x11E4|0-198-143-226
4576|code|ADD             R12, R12, #0x12000|18-202-140-226
4580|code|LDR             PC, [R12,#(memcmp_ptr - 0x131E4)]!; __imp_memcmp|16-253-188-229
4584|code|ADR             R12, 0x11F0|0-198-143-226
4588|code|ADD             R12, R12, #0x12000|18-202-140-226
4592|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x131F0)]!; __imp___libc_start_main|8-253-188-229
4596|code|ADR             R12, 0x11FC|0-198-143-226
4600|code|ADD             R12, R12, #0x12000|18-202-140-226
4604|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x131FC)]!; __imp___gmon_start__|0-253-188-229
4608|code|ADR             R12, 0x1208|0-198-143-226
4612|code|ADD             R12, R12, #0x12000|18-202-140-226
4616|code|LDR             PC, [R12,#(_ZdlPv_ptr - 0x13208)]!; operator delete(void *)|248-252-188-229
4620|code|ADR             R12, 0x1214|0-198-143-226
4624|code|ADD             R12, R12, #0x12000|18-202-140-226
4628|code|LDR             PC, [R12,#(endwin_ptr - 0x13214)]!; __imp_endwin|240-252-188-229
4632|code|ADR             R12, 0x1220|0-198-143-226
4636|code|ADD             R12, R12, #0x12000|18-202-140-226
4640|code|LDR             PC, [R12,#(strncpy_ptr - 0x13220)]!; __imp_strncpy|232-252-188-229
4644|code|ADR             R12, 0x122C|0-198-143-226
4648|code|ADD             R12, R12, #0x12000|18-202-140-226
4652|code|LDR             PC, [R12,#(trace_help_ptr - 0x1322C)]!; __imp_trace_help|224-252-188-229
4656|code|ADR             R12, 0x1238|0-198-143-226
4660|code|ADD             R12, R12, #0x12000|18-202-140-226
4664|code|LDR             PC, [R12,#(strtod_ptr - 0x13238)]!; __imp_strtod|216-252-188-229
4668|code|ADR             R12, 0x1244|0-198-143-226
4672|code|ADD             R12, R12, #0x12000|18-202-140-226
4676|code|LDR             PC, [R12,#(printw_ptr - 0x13244)]!; __imp_printw|208-252-188-229
4680|code|ADR             R12, 0x1250|0-198-143-226
4684|code|ADD             R12, R12, #0x12000|18-202-140-226
4688|code|LDR             PC, [R12,#(trace_is_err_ptr - 0x13250)]!; __imp_trace_is_err|200-252-188-229
4692|code|ADR             R12, 0x125C|0-198-143-226
4696|code|ADD             R12, R12, #0x12000|18-202-140-226
4700|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base_ptr - 0x1325C)]!; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|192-252-188-229
4704|code|ADR             R12, 0x1268|0-198-143-226
4708|code|ADD             R12, R12, #0x12000|18-202-140-226
4712|code|LDR             PC, [R12,#(trace_read_packet_ptr - 0x13268)]!; __imp_trace_read_packet|184-252-188-229
4716|code|BX              PC|120-71
4718|data|ALIGN 4|192-70
4720|code|ADR             R12, 0x1278|0-198-143-226
4724|code|ADD             R12, R12, #0x12000|18-202-140-226
4728|code|LDR             PC, [R12,#(memset_ptr - 0x13278)]!; __imp_memset|172-252-188-229
4732|code|ADR             R12, 0x1284|0-198-143-226
4736|code|ADD             R12, R12, #0x12000|18-202-140-226
4740|code|LDR             PC, [R12,#(gai_strerror_ptr - 0x13284)]!; __imp_gai_strerror|164-252-188-229
4744|code|ADR             R12, 0x1290|0-198-143-226
4748|code|ADD             R12, R12, #0x12000|18-202-140-226
4752|code|LDR             PC, [R12,#(trace_start_ptr - 0x13290)]!; __imp_trace_start|156-252-188-229
4756|code|ADR             R12, 0x129C|0-198-143-226
4760|code|ADD             R12, R12, #0x12000|18-202-140-226
4764|code|LDR             PC, [R12,#(__cxa_end_cleanup_ptr - 0x1329C)]!; __imp___cxa_end_cleanup|148-252-188-229
4768|code|ADR             R12, 0x12A8|0-198-143-226
4772|code|ADD             R12, R12, #0x12000|18-202-140-226
4776|code|LDR             PC, [R12,#(trace_create_packet_ptr - 0x132A8)]!; __imp_trace_create_packet|140-252-188-229
4780|code|ADR             R12, 0x12B4|0-198-143-226
4784|code|ADD             R12, R12, #0x12000|18-202-140-226
4788|code|LDR             PC, [R12,#(initscr_ptr - 0x132B4)]!; __imp_initscr|132-252-188-229
4792|code|ADR             R12, 0x12C0|0-198-143-226
4796|code|ADD             R12, R12, #0x12000|18-202-140-226
4800|code|LDR             PC, [R12,#(wclrtoeol_ptr - 0x132C0)]!; __imp_wclrtoeol|124-252-188-229
4804|code|ADR             R12, 0x12CC|0-198-143-226
4808|code|ADD             R12, R12, #0x12000|18-202-140-226
4812|code|LDR             PC, [R12,#(getopt_long_ptr - 0x132CC)]!; __imp_getopt_long|116-252-188-229
4816|code|ADR             R12, 0x12D8|0-198-143-226
4820|code|ADD             R12, R12, #0x12000|18-202-140-226
4824|code|LDR             PC, [R12,#(getprotobynumber_ptr - 0x132D8)]!; __imp_getprotobynumber|108-252-188-229
4828|code|ADR             R12, 0x12E4|0-198-143-226
4832|code|ADD             R12, R12, #0x12000|18-202-140-226
4836|code|LDR             PC, [R12,#(refresh_ptr - 0x132E4)]!; __imp_refresh|100-252-188-229
4840|code|ADR             R12, 0x12F0|0-198-143-226
4844|code|ADD             R12, R12, #0x12000|18-202-140-226
4848|code|LDR             PC, [R12,#(setprotoent_ptr - 0x132F0)]!; __imp_setprotoent|92-252-188-229
4852|code|ADR             R12, 0x12FC|0-198-143-226
4856|code|ADD             R12, R12, #0x12000|18-202-140-226
4860|code|LDR             PC, [R12,#(trace_destroy_ptr - 0x132FC)]!; __imp_trace_destroy|84-252-188-229
4864|code|ADR             R12, 0x1308|0-198-143-226
4868|code|ADD             R12, R12, #0x12000|18-202-140-226
4872|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base_ptr - 0x13308)]!; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|76-252-188-229
4876|code|ADR             R12, 0x1314|0-198-143-226
4880|code|ADD             R12, R12, #0x12000|18-202-140-226
4884|code|LDR             PC, [R12,#(memcpy_ptr - 0x13314)]!; __imp_memcpy|68-252-188-229
4888|code|ADR             R12, 0x1320|0-198-143-226
4892|code|ADD             R12, R12, #0x12000|18-202-140-226
4896|code|LDR             PC, [R12,#(strtol_ptr - 0x13320)]!; __imp_strtol|60-252-188-229
4900|code|ADR             R12, 0x132C|0-198-143-226
4904|code|ADD             R12, R12, #0x12000|18-202-140-226
4908|code|LDR             PC, [R12,#(cbreak_ptr - 0x1332C)]!; __imp_cbreak|52-252-188-229
4912|code|ADR             R12, 0x1338|0-198-143-226
4916|code|ADD             R12, R12, #0x12000|18-202-140-226
4920|code|LDR             PC, [R12,#(trace_config_ptr - 0x13338)]!; __imp_trace_config|44-252-188-229
4924|code|ADR             R12, 0x1344|0-198-143-226
4928|code|ADD             R12, R12, #0x12000|18-202-140-226
4932|code|LDR             PC, [R12,#(endprotoent_ptr - 0x13344)]!; __imp_endprotoent|36-252-188-229
4936|code|ADR             R12, 0x1350|0-198-143-226
4940|code|ADD             R12, R12, #0x12000|18-202-140-226
4944|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x13350)]!; __imp___snprintf_chk|28-252-188-229
4948|code|ADR             R12, 0x135C|0-198-143-226
4952|code|ADD             R12, R12, #0x12000|18-202-140-226
4956|code|LDR             PC, [R12,#(move_ptr - 0x1335C)]!; __imp_move|20-252-188-229
4960|code|ADR             R12, 0x1368|0-198-143-226
4964|code|ADD             R12, R12, #0x12000|18-202-140-226
4968|code|LDR             PC, [R12,#(_Znwj_ptr - 0x13368)]!; operator new(uint)|12-252-188-229
4972|code|ADR             R12, 0x1374|0-198-143-226
4976|code|ADD             R12, R12, #0x12000|18-202-140-226
4980|code|LDR             PC, [R12,#(select_ptr - 0x13374)]!; __imp_select|4-252-188-229
4984|code|ADR             R12, 0x1380|0-198-143-226
4988|code|ADD             R12, R12, #0x12000|18-202-140-226
4992|code|LDR             PC, [R12,#(wgetch_ptr - 0x13380)]!; __imp_wgetch|252-251-188-229
4996|code|ADR             R12, 0x138C|0-198-143-226
5000|code|ADD             R12, R12, #0x12000|18-202-140-226
5004|code|LDR             PC, [R12,#(trace_event_ptr - 0x1338C)]!; __imp_trace_event|244-251-188-229
5008|code|BX              PC|120-71
5010|data|ALIGN 4|192-70
5012|code|ADR             R12, 0x139C|0-198-143-226
5016|code|ADD             R12, R12, #0x12000|18-202-140-226
5020|code|LDR             PC, [R12,#(fwrite_ptr - 0x1339C)]!; __imp_fwrite|232-251-188-229
5024|code|ADR             R12, 0x13A8|0-198-143-226
5028|code|ADD             R12, R12, #0x12000|18-202-140-226
5032|code|LDR             PC, [R12,#(trace_get_seconds_ptr - 0x133A8)]!; __imp_trace_get_seconds|224-251-188-229
5036|code|ADR             R12, 0x13B4|0-198-143-226
5040|code|ADD             R12, R12, #0x12000|18-202-140-226
5044|code|LDR             PC, [R12,#(trace_get_destination_address_ptr - 0x133B4)]!; __imp_trace_get_destination_address|216-251-188-229
5048|code|ADR             R12, 0x13C0|0-198-143-226
5052|code|ADD             R12, R12, #0x12000|18-202-140-226
5056|code|LDR             PC, [R12,#(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS__ptr - 0x133C0)]!; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|208-251-188-229
5060|code|ADR             R12, 0x13CC|0-198-143-226
5064|code|ADD             R12, R12, #0x12000|18-202-140-226
5068|code|LDR             PC, [R12,#(trace_create_ptr - 0x133CC)]!; __imp_trace_create|200-251-188-229
5072|code|ADR             R12, 0x13D8|0-198-143-226
5076|code|ADD             R12, R12, #0x12000|18-202-140-226
5080|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x133D8)]!; __imp___stack_chk_fail|192-251-188-229
5084|code|ADR             R12, 0x13E4|0-198-143-226
5088|code|ADD             R12, R12, #0x12000|18-202-140-226
5092|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x133E4)]!; __imp___fprintf_chk|184-251-188-229
5096|code|ADR             R12, 0x13F0|0-198-143-226
5100|code|ADD             R12, R12, #0x12000|18-202-140-226
5104|code|LDR             PC, [R12,#(memmove_ptr - 0x133F0)]!; __imp_memmove|176-251-188-229
5108|code|BX              PC|120-71
5110|data|ALIGN 4|192-70
5112|code|ADR             R12, 0x1400|0-198-143-226
5116|code|ADD             R12, R12, #0x12000|18-202-140-226
5120|code|LDR             PC, [R12,#(__aeabi_atexit_ptr - 0x13400)]!; __imp___aeabi_atexit|164-251-188-229
5124|code|ADR             R12, 0x140C|0-198-143-226
5128|code|ADD             R12, R12, #0x12000|18-202-140-226
5132|code|LDR             PC, [R12,#(trace_get_source_address_ptr - 0x1340C)]!; __imp_trace_get_source_address|156-251-188-229
5136|code|ADR             R12, 0x1418|0-198-143-226
5140|code|ADD             R12, R12, #0x12000|18-202-140-226
5144|code|LDR             PC, [R12,#(trace_destroy_packet_ptr - 0x13418)]!; __imp_trace_destroy_packet|148-251-188-229
5148|code|ADR             R12, 0x1424|0-198-143-226
5152|code|ADD             R12, R12, #0x12000|18-202-140-226
5156|code|LDR             PC, [R12,#(trace_get_transport_ptr - 0x13424)]!; __imp_trace_get_transport|140-251-188-229
5160|code|ADR             R12, 0x1430|0-198-143-226
5164|code|ADD             R12, R12, #0x12000|18-202-140-226
5168|code|LDR             PC, [R12,#(__gxx_personality_v0_ptr - 0x13430)]!; __imp___gxx_personality_v0|132-251-188-229
5172|code|ADR             R12, 0x143C|0-198-143-226
5176|code|ADD             R12, R12, #0x12000|18-202-140-226
5180|code|LDR             PC, [R12,#(__aeabi_ul2d_ptr - 0x1343C)]!; __imp___aeabi_ul2d|124-251-188-229
5184|code|ADR             R12, 0x1448|0-198-143-226
5188|code|ADD             R12, R12, #0x12000|18-202-140-226
5192|code|LDR             PC, [R12,#(noecho_ptr - 0x13448)]!; __imp_noecho|116-251-188-229
5196|code|ADR             R12, 0x1454|0-198-143-226
5200|code|ADD             R12, R12, #0x12000|18-202-140-226
5204|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x13454)]!; __imp___cxa_finalize|108-251-188-229
5208|code|ADR             R12, 0x1460|0-198-143-226
5212|code|ADD             R12, R12, #0x12000|18-202-140-226
5216|code|LDR             PC, [R12,#(__fdelt_chk_ptr - 0x13460)]!; __imp___fdelt_chk|100-251-188-229
5220|data|ALIGN 8|0-0-0-0
5224|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5228|code|VPUSH           {D8}|45-237-2-139
5232|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x147A)|223-248-228-163
5236|code|LDR             R6, =(byte_14008 - 0x14AC)|249-78
5238|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
5240|code|LDR.W           R11, =(byte_14008 - 0x14B0)|223-248-228-179
5244|code|SUB.W           SP, SP, #0x3A4|173-245-105-125
5248|code|LDR.W           R9, =(byte_14008 - 0x14C4)|223-248-224-147
5252|code|ADD             R3, SP, #0x3AC+var_2E4|50-171
5254|code|ADD             R2, SP, #0x3AC+var_2E0|51-170
5256|code|STR             R3, [SP,#0x3AC+var_38C]|8-147
5258|code|ADD.W           R8, SP, #0x3AC+var_12C|13-245-32-120
5262|code|MOV             R4, R3|28-70
5264|code|LDR             R3, =(__stack_chk_guard_ptr - 0x13EC8)|245-75
5266|code|STR             R2, [SP,#0x3AC+var_388]|9-146
5268|code|MOV             R5, R2|21-70
5270|code|STR             R0, [SP,#0x3AC+argc]|4-144
5272|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
5276|code|STR             R1, [SP,#0x3AC+argv]|3-145
5278|code|MOVS            R0, #1; stay_open|1-32
5280|code|LDR.W           R3, [R10,R3]; __stack_chk_guard|90-248-3-48
5284|code|ADD             R7, SP, #0xE0|56-175
5286|code|STR             R2, [R4]|34-96
5288|code|ADD             R6, PC; byte_14008|126-68
5290|code|LDR             R4, =(byte_14008 - 0x14BC)|240-76
5292|code|ADD             R11, PC; byte_14008|251-68
5294|code|MOV             R1, R3|25-70
5296|code|STR             R3, [SP,#0x3AC+var_394]|6-147
5298|code|MOVS            R3, #0|0-35
5300|code|STR             R3, [SP,#0x3AC+var_390]|7-147
5302|code|LDR             R3, [R1]|11-104
5304|code|ADD             R4, PC; byte_14008|124-68
5306|code|STR             R2, [R5]|42-96
5308|code|ADDS            R4, #0x10|16-52
5310|code|LDR             R5, =(aBpfFsPHhiW1234 - 0x14CC); "BPf:Fs:p:hHi:w12345"|236-77
5312|code|ADD             R9, PC; byte_14008|249-68
5314|code|STR             R3, [SP,#0x3AC+var_10]|231-147
5316|code|BLX             setprotoent|255-247-16-239
5320|code|ADD             R5, PC; "BPf:Fs:p:hHi:w12345"|125-68
5322|code|LDR             R3, =(byte_14008 - 0x14D0)|234-75
5324|code|ADD             R3, PC; byte_14008|123-68
5326|code|STR             R3, [SP,#0x3AC+readfds]|2-147
5328|code|MOV             R1, R4; src|33-70
5330|code|MOVS            R2, #0xB0; n|176-34
5332|code|MOV             R0, R8; dest|64-70
5334|code|BLX             memcpy|255-247-26-239
5338|code|MOV             R2, R5; shortopts|42-70
5340|code|STR             R7, [SP,#0x3AC+longind]; longind|0-151
5342|code|MOV             R3, R8; longopts|67-70
5344|code|LDR             R0, [SP,#0x3AC+argc]; argc|4-152
5346|code|LDR             R1, [SP,#0x3AC+argv]; argv|3-153
5348|code|BLX             getopt_long|255-247-238-238
5352|code|ADDS            R2, R0, #1|66-28
5354|code|BEQ.W           loc_167A|0-240-198-128
5358|code|SUB.W           R3, R0, #0x31 ; '1'; switch 71 cases|160-241-49-3
5362|code|CMP             R3, #0x46|70-43
5364|code|BHI.W           def_14F8; jumptable 000014F8 default case, cases 54-65,67-69,71,73-79,81-101,103,106-111,113,114,116-118|0-242-182-128
5368|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
5372|data|DCB 0xAD; jump table for switch statement|173
5373|data|DCB 0xA6|166
5374|data|DCB 0x9F|159
5375|data|DCB 0x99|153
5376|data|DCB 0x94|148
5377|data|DCB 0xB4|180
5378|data|DCB 0xB4|180
5379|data|DCB 0xB4|180
5380|data|DCB 0xB4|180
5381|data|DCB 0xB4|180
5382|data|DCB 0xB4|180
5383|data|DCB 0xB4|180
5384|data|DCB 0xB4|180
5385|data|DCB 0xB4|180
5386|data|DCB 0xB4|180
5387|data|DCB 0xB4|180
5388|data|DCB 0xB4|180
5389|data|DCB 0x8F|143
5390|data|DCB 0xB4|180
5391|data|DCB 0xB4|180
5392|data|DCB 0xB4|180
5393|data|DCB 0x89|137
5394|data|DCB 0xB4|180
5395|data|DCB 0x86|134
5396|data|DCB 0xB4|180
5397|data|DCB 0xB4|180
5398|data|DCB 0xB4|180
5399|data|DCB 0xB4|180
5400|data|DCB 0xB4|180
5401|data|DCB 0xB4|180
5402|data|DCB 0xB4|180
5403|data|DCB 0x81|129
5404|data|DCB 0xB4|180
5405|data|DCB 0xB4|180
5406|data|DCB 0xB4|180
5407|data|DCB 0xB4|180
5408|data|DCB 0xB4|180
5409|data|DCB 0xB4|180
5410|data|DCB 0xB4|180
5411|data|DCB 0xB4|180
5412|data|DCB 0xB4|180
5413|data|DCB 0xB4|180
5414|data|DCB 0xB4|180
5415|data|DCB 0xB4|180
5416|data|DCB 0xB4|180
5417|data|DCB 0xB4|180
5418|data|DCB 0xB4|180
5419|data|DCB 0xB4|180
5420|data|DCB 0xB4|180
5421|data|DCB 0xB4|180
5422|data|DCB 0xB4|180
5423|data|DCB 0xB4|180
5424|data|DCB 0xB4|180
5425|data|DCB 0x79|121
5426|data|DCB 0xB4|180
5427|data|DCB 0x2E|46
5428|data|DCB 0x5B|91
5429|data|DCB 0xB4|180
5430|data|DCB 0xB4|180
5431|data|DCB 0xB4|180
5432|data|DCB 0xB4|180
5433|data|DCB 0xB4|180
5434|data|DCB 0xB4|180
5435|data|DCB 0x50|80
5436|data|DCB 0xB4|180
5437|data|DCB 0xB4|180
5438|data|DCB 0x45|69
5439|data|DCB 0xB4|180
5440|data|DCB 0xB4|180
5441|data|DCB 0xB4|180
5442|data|DCB 0x3F|63
5443|data|ALIGN 2|0
5444|code|LDR             R3, =(stderr_ptr - 0x13EC8)|204-75
5446|code|MOVS            R1, #1; size|1-33
5448|code|LDR             R0, =(aMissingInputUr - 0x1554); "Missing input uri\n"|204-72
5450|code|MOVS            R2, #0x12; n|18-34
5452|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5456|code|ADD             R0, PC; "Missing input uri\n"|120-68
5458|code|LDR             R3, [R3]; s|27-104
5460|code|BLX             fwrite|255-247-30-239
5464|code|LDR             R3, [SP,#0x3AC+argv]; jumptable 000014F8 case 104|3-155
5466|code|LDR             R0, [R3]|24-104
5468|code|BL              sub_1F60|0-240-0-253
5472|code|MOVS            R0, #1|1-32
5474|code|LDR             R3, [SP,#0x3AC+var_394]|6-155
5476|code|LDR             R2, [SP,#0x3AC+var_10]|231-154
5478|code|LDR             R3, [R3]|27-104
5480|code|CMP             R2, R3|154-66
5482|code|BNE.W           loc_1DC0|64-240-41-132
5486|code|ADD.W           SP, SP, #0x3A4|13-245-105-125
5490|code|VPOP            {D8}|189-236-2-139
5494|code|POP.W           {R4-R11,PC}|189-232-240-143
5498|code|LDR             R3, =(unk_140D0 - 0x1582); jumptable 000014F8 case 119|193-75
5500|code|MOVS            R2, #1|1-34
5502|code|ADD             R3, PC; unk_140D0|123-68
5504|code|STRB.W          R2, [R3,#(byte_14900 - 0x140D0)]|131-248-48-40
5508|code|B               loc_14D0|164-231
5510|code|LDR             R3, =(optarg_ptr - 0x13EC8); jumptable 000014F8 case 115|191-75
5512|code|MOVS            R1, #0; endptr|0-33
5514|code|MOVS            R2, #0xA; base|10-34
5516|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
5520|code|LDR             R0, [R3]; nptr|24-104
5522|code|BLX             strtol|255-247-194-238
5526|code|LDR             R3, [SP,#0x3AC+var_38C]|8-155
5528|code|STR             R0, [R3]|24-96
5530|code|B               loc_14D0|153-231
5532|code|LDR             R3, =(optarg_ptr - 0x13EC8); jumptable 000014F8 case 112|185-75
5534|code|MOVS            R1, #0; endptr|0-33
5536|code|MOVS            R2, #0xA; base|10-34
5538|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
5542|code|LDR             R0, [R3]; nptr|24-104
5544|code|BLX             strtol|255-247-182-238
5548|code|LDR             R3, [SP,#0x3AC+var_388]|9-155
5550|code|STR             R0, [R3]|24-96
5552|code|B               loc_14D0|142-231
5554|code|LDR             R3, =(optarg_ptr - 0x13EC8); jumptable 000014F8 case 105|180-75
5556|code|MOVS            R1, #0; endptr|0-33
5558|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
5562|code|LDR             R0, [R3]; nptr|24-104
5564|code|BLX             strtod|255-247-56-238
5568|code|LDR             R3, =(byte_14008 - 0x15C6)|177-75
5570|code|ADD             R3, PC; byte_14008|123-68
5572|code|VCVT.F32.F64    S0, D0|183-238-192-11
5576|code|VCMPE.F32       S0, #0.0|181-238-192-10
5580|code|VSTR            S0, [R3,#4]|131-237-1-10
5584|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
5588|code|BHI.W           loc_14D0|63-246-124-175
5592|code|LDR             R3, =(stderr_ptr - 0x13EC8)|167-75
5594|code|MOVS            R1, #1; size|1-33
5596|code|LDR             R0, =(aIntervalMustBe - 0x15E8); "Interval must be >0\n"|171-72
5598|code|MOVS            R2, #0x14; n|20-34
5600|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
5604|code|ADD             R0, PC; "Interval must be >0\n"|120-68
5606|code|LDR             R3, [R3]; s|27-104
5608|code|BLX             fwrite|255-247-212-238
5612|code|B               loc_1560|184-231
5614|code|LDR             R3, =(optarg_ptr - 0x13EC8); jumptable 000014F8 case 102|165-75
5616|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
5620|code|LDR             R0, [R3]|24-104
5622|code|BLX             trace_create_filter|255-247-198-237
5626|code|STR             R0, [SP,#0x3AC+var_390]|7-144
5628|code|B               loc_14D0|104-231
5630|code|LDR             R3, =(byte_14008 - 0x1606); jumptable 000014F8 case 80|164-75
5632|code|MOVS            R2, #2|2-34
5634|code|ADD             R3, PC; byte_14008|123-68
5636|code|STR             R2, [R3,#(dword_14014 - 0x14008)]|218-96
5638|code|B               loc_14D0|99-231
5640|code|BLX             trace_help; jumptable 000014F8 case 72|255-247-12-238
5644|code|B               loc_1560|168-231
5646|code|LDR             R3, =(unk_140D0 - 0x1616); jumptable 000014F8 case 70|161-75
5648|code|MOVS            R2, #1|1-34
5650|code|ADD             R3, PC; unk_140D0|123-68
5652|code|STRB.W          R2, [R3,#(byte_14901 - 0x140D0)]|131-248-49-40
5656|code|B               loc_14D0|90-231
5658|code|LDR             R3, =(byte_14008 - 0x1622); jumptable 000014F8 case 66|159-75
5660|code|MOVS            R2, #0|0-34
5662|code|ADD             R3, PC; byte_14008|123-68
5664|code|STR             R2, [R3,#(dword_14014 - 0x14008)]|218-96
5666|code|B               loc_14D0|85-231
5668|code|LDRB            R3, [R6,#(byte_14012 - 0x14008)]; jumptable 000014F8 case 53|179-122
5670|code|EOR.W           R3, R3, #1|131-240-1-3
5674|code|STRB            R3, [R6,#(byte_14012 - 0x14008)]|179-114
5676|code|B               loc_14D0|80-231
5678|code|LDR             R2, [SP,#0x3AC+readfds]; jumptable 000014F8 case 52|2-154
5680|code|LDRB            R3, [R2,#9]|83-122
5682|code|EOR.W           R3, R3, #1|131-240-1-3
5686|code|STRB            R3, [R2,#9]|83-114
5688|code|B               loc_14D0|74-231
5690|code|LDRB.W          R3, [R11,#(byte_14009 - 0x14008)]; jumptable 000014F8 case 51|155-248-1-48
5694|code|EOR.W           R3, R3, #1|131-240-1-3
5698|code|STRB.W          R3, [R11,#(byte_14009 - 0x14008)]|139-248-1-48
5702|code|B               loc_14D0|67-231
5704|code|LDRB.W          R3, [R9,#(byte_14010 - 0x14008)]; jumptable 000014F8 case 50|153-248-8-48
5708|code|EOR.W           R3, R3, #1|131-240-1-3
5712|code|STRB.W          R3, [R9,#(byte_14010 - 0x14008)]|137-248-8-48
5716|code|B               loc_14D0|60-231
5718|code|LDR             R2, =(byte_14008 - 0x165C); jumptable 000014F8 case 49|145-74
5720|code|ADD             R2, PC; byte_14008|122-68
5722|code|LDRB            R3, [R2]|19-120
5724|code|EOR.W           R3, R3, #1|131-240-1-3
5728|code|STRB            R3, [R2]|19-112
5730|code|B               loc_14D0|53-231
5732|code|LDR             R4, =(stderr_ptr - 0x13EC8); jumptable 000014F8 default case, cases 54-65,67-69,71,73-79,81-101,103,106-111,113,114,116-118|132-76
5734|code|MOV             R3, R0|3-70
5736|code|LDR             R2, =(aUnknownOptionC - 0x1674); "Unknown option: %c\n"|141-74
5738|code|MOVS            R1, #1|1-33
5740|code|LDR.W           R0, [R10,R4]; stderr|90-248-4-0
5744|code|ADD             R2, PC; "Unknown option: %c\n"|122-68
5746|code|LDR             R0, [R0]|0-104
5748|code|BLX             __fprintf_chk|255-247-178-238
5752|code|B               loc_1558; jumptable 000014F8 case 104|110-231
5754|code|LDR             R3, =(optind_ptr - 0x13EC8)|138-75
5756|code|LDR             R2, [SP,#0x3AC+argc]|4-154
5758|code|LDR.W           R3, [R10,R3]; optind|90-248-3-48
5762|code|STR             R3, [SP,#0x3AC+var_37C]|12-147
5764|code|LDR             R3, [R3]|27-104
5766|code|CMP             R2, R3|154-66
5768|code|BLE.W           loc_1544|127-247-92-175
5772|code|BLX             initscr|255-247-14-238
5776|code|BLX             cbreak|255-247-72-238
5780|code|BLX             noecho|255-247-212-238
5784|code|LDR             R3, =(unk_140D0 - 0x169E)|131-75
5786|code|ADD             R3, PC; unk_140D0|123-68
5788|code|LDRB.W          R3, [R3,#(byte_14902 - 0x140D0)]|147-248-50-56
5792|code|CMP             R3, #0|0-43
5794|code|BNE.W           loc_1B06|64-240-48-130
5798|code|LDR             R3, [SP,#0x3AC+var_37C]|12-155
5800|code|LDR             R2, [SP,#0x3AC+argc]|4-154
5802|code|LDR             R3, [R3]|27-104
5804|code|CMP             R2, R3|154-66
5806|code|BLE.W           loc_1B06|64-243-42-130
5810|code|LDR             R2, =(unk_140D0 - 0x16BC)|126-74
5812|code|VLDR            D8, =1000000.0|159-237-102-139
5816|code|ADD             R2, PC; unk_140D0|122-68
5818|code|LDR             R1, =(aIgnoring - 0x16C8); "ignoring: "|125-73
5820|code|ADDW            R2, R2, #0x808|2-246-8-2
5824|code|STR             R2, [SP,#0x3AC+var_348]|25-146
5826|code|LDR             R2, =(aIgnoring - 0x16CE); "ignoring: "|124-74
5828|code|ADD             R1, PC; "ignoring: "|121-68
5830|code|STR.W           R10, [SP,#0x3AC+var_36C]|205-248-64-160
5834|code|ADD             R2, PC; "ignoring: "|122-68
5836|code|STR             R2, [SP,#0x3AC+var_324]|34-146
5838|code|LDR             R2, =(aIgnoring - 0x16D6); "ignoring: "|122-74
5840|code|STR             R1, [SP,#0x3AC+var_328]|33-145
5842|code|ADD             R2, PC; "ignoring: "|122-68
5844|code|STR             R2, [SP,#0x3AC+var_320]|35-146
5846|code|LDR             R2, =(unk_140D0 - 0x16DC)|121-74
5848|code|ADD             R2, PC; unk_140D0|122-68
5850|code|STR             R2, [SP,#0x3AC+var_378]|13-146
5852|code|LDR             R2, =(aSettingEventRe - 0x16E2); "Setting EVENT_REALTIME option"|120-74
5854|code|ADD             R2, PC; "Setting EVENT_REALTIME option"|122-68
5856|code|STR             R2, [SP,#0x3AC+var_31C]|36-146
5858|code|LDR             R2, =(byte_14008 - 0x16E8)|120-74
5860|code|ADD             R2, PC; byte_14008|122-68
5862|code|STR             R2, [SP,#0x3AC+var_318]|37-146
5864|code|LDR             R2, =(byte_14008 - 0x16EE)|119-74
5866|code|ADD             R2, PC; byte_14008|122-68
5868|code|STR             R2, [SP,#0x3AC+var_314]|38-146
5870|code|LDR             R2, =(byte_14008 - 0x16F4)|119-74
5872|code|ADD             R2, PC; byte_14008|122-68
5874|code|STR             R2, [SP,#0x3AC+var_34C]|24-146
5876|code|LDR             R2, =(unk_140D0 - 0x16FA)|118-74
5878|code|ADD             R2, PC; unk_140D0|122-68
5880|code|STR             R2, [SP,#0x3AC+var_310]|39-146
5882|code|LDR             R2, =(byte_14008 - 0x1700)|118-74
5884|code|ADD             R2, PC; byte_14008|122-68
5886|code|STR             R2, [SP,#0x3AC+var_30C]|40-146
5888|code|LDR             R2, =(byte_14008 - 0x1706)|117-74
5890|code|ADD             R2, PC; byte_14008|122-68
5892|code|STR             R2, [SP,#0x3AC+var_308]|41-146
5894|code|LDR             R2, =(byte_14008 - 0x170C)|117-74
5896|code|ADD             R2, PC; byte_14008|122-68
5898|code|STR             R2, [SP,#0x3AC+var_304]|42-146
5900|code|LDR             R2, =(byte_14008 - 0x1712)|116-74
5902|code|ADD             R2, PC; byte_14008|122-68
5904|code|STR             R2, [SP,#0x3AC+var_300]|43-146
5906|code|LDR             R2, =(byte_14008 - 0x1718)|116-74
5908|code|ADD             R2, PC; byte_14008|122-68
5910|code|STR             R2, [SP,#0x3AC+var_2FC]|44-146
5912|code|LDR             R2, =(byte_14008 - 0x171E)|115-74
5914|code|ADD             R2, PC; byte_14008|122-68
5916|code|STR             R2, [SP,#0x3AC+var_2F8]|45-146
5918|code|LDR             R2, =(unk_140D0 - 0x1724)|115-74
5920|code|ADD             R2, PC; unk_140D0|122-68
5922|code|STR             R2, [SP,#0x3AC+var_368]|17-146
5924|code|LDR             R2, =(byte_14008 - 0x172A)|114-74
5926|code|ADD             R2, PC; byte_14008|122-68
5928|code|STR             R2, [SP,#0x3AC+var_364]|18-146
5930|code|LDR             R2, =(byte_14008 - 0x1730)|114-74
5932|code|ADD             R2, PC; byte_14008|122-68
5934|code|STR             R2, [SP,#0x3AC+var_344]|26-146
5936|code|LDR             R2, =(byte_14008 - 0x1736)|113-74
5938|code|ADD             R2, PC; byte_14008|122-68
5940|code|STR             R2, [SP,#0x3AC+var_340]|27-146
5942|code|LDR             R2, =(byte_14008 - 0x173C)|113-74
5944|code|ADD             R2, PC; byte_14008|122-68
5946|code|STR             R2, [SP,#0x3AC+var_33C]|28-146
5948|code|LDR             R2, =(byte_14008 - 0x1742)|112-74
5950|code|ADD             R2, PC; byte_14008|122-68
5952|code|STR             R2, [SP,#0x3AC+var_338]|29-146
5954|code|LDR             R2, =(byte_14008 - 0x1748)|112-74
5956|code|ADD             R2, PC; byte_14008|122-68
5958|code|STR             R2, [SP,#0x3AC+var_334]|30-146
5960|code|LDR             R2, =(unk_140D0 - 0x174E)|111-74
5962|code|ADD             R2, PC; unk_140D0|122-68
5964|code|STR             R2, [SP,#0x3AC+var_360]|19-146
5966|code|LDR             R2, =(unk_140D0 - 0x1754)|111-74
5968|code|ADD             R2, PC; unk_140D0|122-68
5970|code|STR             R2, [SP,#0x3AC+var_35C]|20-146
5972|code|LDR             R2, =(byte_14008 - 0x175A)|110-74
5974|code|ADD             R2, PC; byte_14008|122-68
5976|code|STR             R2, [SP,#0x3AC+var_330]|31-146
5978|code|LDR             R2, =(byte_14008 - 0x1760)|110-74
5980|code|ADD             R2, PC; byte_14008|122-68
5982|code|STR             R2, [SP,#0x3AC+var_2F4]|46-146
5984|code|LDR             R2, =(byte_14008 - 0x1766)|109-74
5986|code|ADD             R2, PC; byte_14008|122-68
5988|code|STR             R2, [SP,#0x3AC+var_2F0]|47-146
5990|code|LDR             R2, =(unk_140D0 - 0x176C)|109-74
5992|code|ADD             R2, PC; unk_140D0|122-68
5994|code|STR             R2, [SP,#0x3AC+var_2EC]|48-146
5996|code|LDR             R2, =(byte_14008 - 0x1772)|108-74
5998|code|ADD             R2, PC; byte_14008|122-68
6000|code|STR             R2, [SP,#0x3AC+var_374]|14-146
6002|code|LDR             R2, =(aReadingPackets - 0x1778); "Reading packets"|108-74
6004|code|ADD             R2, PC; "Reading packets"|122-68
6006|code|STR             R2, [SP,#0x3AC+var_32C]|32-146
6008|code|LDR             R2, =(unk_140D0 - 0x177E)|107-74
6010|code|ADD             R2, PC; unk_140D0|122-68
6012|code|STR             R2, [SP,#0x3AC+var_370]|15-146
6014|code|STR.W           R8, [SP,#0x3AC+dest]|205-248-196-128
6018|code|LDR             R2, [SP,#0x3AC+argv]|3-154
6020|code|LDR.W           R0, [R2,R3,LSL#2]|82-248-35-0
6024|code|BLX             trace_create|255-247-28-238
6028|code|LDR             R2, [SP,#0x3AC+var_37C]|12-154
6030|code|LDR             R3, [R2]|19-104
6032|code|ADDS            R3, #1|1-51
6034|code|STR             R3, [R2]|19-96
6036|code|MOV             R11, R0|131-70
6038|code|BLX             trace_is_err|255-247-88-237
6042|code|CMP             R0, #0|0-40
6044|code|BNE.W           loc_1DAC|64-240-6-131
6048|code|LDR             R2, [SP,#0x3AC+var_38C]|8-154
6050|code|LDR             R3, [R2]|19-104
6052|code|CMP             R3, #0|0-43
6054|code|BLE             loc_17B6|6-221
6056|code|MOV             R1, R0|1-70
6058|code|MOV             R0, R11|88-70
6060|code|BLX             trace_config|255-247-192-237
6064|code|CMP             R0, #0|0-40
6066|code|BNE.W           loc_1CC0|64-240-133-130
6070|code|LDR             R3, [SP,#0x3AC+var_390]|7-155
6072|code|CBZ             R3, loc_17CA|59-177
6074|code|MOV             R0, R11|88-70
6076|code|MOVS            R1, #2|2-33
6078|code|MOV             R2, R3|26-70
6080|code|BLX             trace_config|255-247-182-237
6084|code|CMP             R0, #0|0-40
6086|code|BNE.W           loc_1C6E|64-240-82-130
6090|code|LDR             R2, [SP,#0x3AC+var_388]|9-154
6092|code|LDR             R3, [R2]|19-104
6094|code|ADDS            R3, #1|1-51
6096|code|BEQ             loc_17E0|6-208
6098|code|MOV             R0, R11|88-70
6100|code|MOVS            R1, #1|1-33
6102|code|BLX             trace_config|255-247-172-237
6106|code|CMP             R0, #0|0-40
6108|code|BNE.W           loc_1CD6|64-240-123-130
6112|code|LDR             R3, [SP,#0x3AC+var_378]|13-155
6114|code|LDRB.W          R3, [R3,#0x831]|147-248-49-56
6118|code|CMP             R3, #0|0-43
6120|code|BNE.W           loc_1C50|64-240-50-130
6124|code|MOV             R0, R11|88-70
6126|code|BLX             trace_start|255-247-76-237
6130|code|CMP             R0, #0|0-40
6132|code|BNE.W           loc_1D92|64-240-205-130
6136|code|ADD             R3, SP, #0x3AC+var_2B8|61-171
6138|code|STR             R3, [SP,#0x3AC+var_398]|5-147
6140|code|BLX             trace_create_packet|255-247-80-237
6144|code|ADD             R4, SP, #0x3AC+var_238|93-172
6146|code|ADD             R6, SP, #0x3AC+var_2B4|62-174
6148|code|STR             R6, [SP,#0x3AC+readfds]|2-150
6150|code|MOV             R10, R0|130-70
6152|code|LDR             R3, [SP,#0x3AC+var_398]|5-155
6154|code|MOVS            R2, #0|0-34
6156|code|LDR.W           R9, [SP,#0x3AC+readfds]|221-248-8-144
6160|code|STR.W           R2, [R3,#4]!|67-248-4-47
6164|code|CMP             R3, R4|163-66
6166|code|BNE             loc_1810|251-209
6168|code|LDR.W           R3, [R9]|217-248-0-48
6172|code|MOV             R0, R7|56-70
6174|code|MOV             R1, R11|89-70
6176|code|MOV             R2, R10|82-70
6178|code|ORR.W           R3, R3, #1|67-240-1-3
6182|code|STR.W           R9, [SP,#0x3AC+readfds]|205-248-8-144
6186|code|STR.W           R3, [R9]|201-248-0-48
6190|code|BLX             trace_event|255-247-170-237
6194|code|LDM.W           R7, {R5,R8}|151-232-32-1
6198|code|LDR             R6, [R7,#0x2CC+var_2BC]|62-105
6200|code|MOV             R0, R5|40-70
6202|code|CMP             R5, #3; switch 4 cases|3-45
6204|code|BHI.W           def_1840; jumptable 00001840 default case|0-242-194-130
6208|code|TBH.W           [PC,R5,LSL#1]; switch jump|223-232-21-240
6212|data|DCW 0x167; jump table for switch statement|103-1
6214|data|DCW 0x198|152-1
6216|data|DCW 0x74|116-0
6218|data|DCW 0x14B|75-1
6220|data|DCD 0x8000F3AF|175-243-0-128
6224|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
6232|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x147A|78-42-1-0
6236|data|DCD byte_14008 - 0x14AC|92-43-1-0
6240|data|DCD byte_14008 - 0x14B0|88-43-1-0
6244|data|DCD byte_14008 - 0x14C4|68-43-1-0
6248|data|DCD __stack_chk_guard_ptr - 0x13EC8|36-1-0-0
6252|data|DCD byte_14008 - 0x14BC|76-43-1-0
6256|data|DCD aBpfFsPHhiW1234 - 0x14CC; "BPf:Fs:p:hHi:w12345"|156-30-0-0
6260|data|DCD byte_14008 - 0x14D0|56-43-1-0
6264|data|DCD stderr_ptr - 0x13EC8|40-1-0-0
6268|data|DCD aMissingInputUr - 0x1554; "Missing input uri\n"|84-30-0-0
6272|data|DCD unk_140D0 - 0x1582|78-43-1-0
6276|data|DCD optarg_ptr - 0x13EC8|44-1-0-0
6280|data|DCD byte_14008 - 0x15C6|66-42-1-0
6284|data|DCD aIntervalMustBe - 0x15E8; "Interval must be >0\n"|148-29-0-0
6288|data|DCD byte_14008 - 0x1606|2-42-1-0
6292|data|DCD unk_140D0 - 0x1616|186-42-1-0
6296|data|DCD byte_14008 - 0x1622|230-41-1-0
6300|data|DCD byte_14008 - 0x165C|172-41-1-0
6304|data|DCD aUnknownOptionC - 0x1674; "Unknown option: %c\n"|32-29-0-0
6308|data|DCD optind_ptr - 0x13EC8|24-1-0-0
6312|data|DCD unk_140D0 - 0x169E|50-42-1-0
6316|data|DCD unk_140D0 - 0x16BC|20-42-1-0
6320|data|DCD aIgnoring - 0x16C8; "ignoring: "|8-29-0-0
6324|data|DCD aIgnoring - 0x16CE; "ignoring: "|2-29-0-0
6328|data|DCD aIgnoring - 0x16D6; "ignoring: "|250-28-0-0
6332|data|DCD unk_140D0 - 0x16DC|244-41-1-0
6336|data|DCD aSettingEventRe - 0x16E2; "Setting EVENT_REALTIME option"|250-28-0-0
6340|data|DCD byte_14008 - 0x16E8|32-41-1-0
6344|data|DCD byte_14008 - 0x16EE|26-41-1-0
6348|data|DCD byte_14008 - 0x16F4|20-41-1-0
6352|data|DCD unk_140D0 - 0x16FA|214-41-1-0
6356|data|DCD byte_14008 - 0x1700|8-41-1-0
6360|data|DCD byte_14008 - 0x1706|2-41-1-0
6364|data|DCD byte_14008 - 0x170C|252-40-1-0
6368|data|DCD byte_14008 - 0x1712|246-40-1-0
6372|data|DCD byte_14008 - 0x1718|240-40-1-0
6376|data|DCD byte_14008 - 0x171E|234-40-1-0
6380|data|DCD unk_140D0 - 0x1724|172-41-1-0
6384|data|DCD byte_14008 - 0x172A|222-40-1-0
6388|data|DCD byte_14008 - 0x1730|216-40-1-0
6392|data|DCD byte_14008 - 0x1736|210-40-1-0
6396|data|DCD byte_14008 - 0x173C|204-40-1-0
6400|data|DCD byte_14008 - 0x1742|198-40-1-0
6404|data|DCD byte_14008 - 0x1748|192-40-1-0
6408|data|DCD unk_140D0 - 0x174E|130-41-1-0
6412|data|DCD unk_140D0 - 0x1754|124-41-1-0
6416|data|DCD byte_14008 - 0x175A|174-40-1-0
6420|data|DCD byte_14008 - 0x1760|168-40-1-0
6424|data|DCD byte_14008 - 0x1766|162-40-1-0
6428|data|DCD unk_140D0 - 0x176C|100-41-1-0
6432|data|DCD byte_14008 - 0x1772|150-40-1-0
6436|data|DCD aReadingPackets - 0x1778; "Reading packets"|148-28-0-0
6440|data|DCD unk_140D0 - 0x177E|82-41-1-0
6444|code|ADDS            R6, #1; jumptable 00001840 case 2|1-54
6446|code|BEQ.W           loc_1C20|0-240-119-129
6450|code|LDR             R3, [SP,#0x3AC+var_368]|17-155
6452|code|MOV             R0, R10|80-70
6454|code|ADDW            R6, R3, #0x838|3-246-56-6
6458|code|BLX             trace_get_seconds|255-247-50-237
6462|code|LDR             R3, [SP,#0x3AC+var_364]|18-155
6464|code|VLDR            D6, [R6]|150-237-0-107
6468|code|VLDR            S14, [R3,#4]|147-237-1-122
6472|code|VCVT.F64.F32    D7, S14|183-238-199-122
6476|code|VSUB.F64        D0, D0, D6|48-238-70-11
6480|code|VCMPE.F64       D0, D7|180-238-199-11
6484|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
6488|code|BGE.W           loc_1C78|128-242-142-129
6492|code|MOV             R0, R11|88-70
6494|code|MOV             R1, R10|81-70
6496|code|BLX             trace_read_packet|255-247-126-236
6500|code|CMP             R0, #0|0-40
6502|code|BLE.W           loc_1C20|64-243-91-129
6506|code|ADD.W           R8, SP, #0x3AC+var_234|13-245-188-120
6510|code|MOV             R0, R10|80-70
6512|code|MOV             R1, R8|65-70
6514|code|BLX             trace_get_source_address|255-247-72-237
6518|code|CMP             R0, #0|0-40
6520|code|BEQ.W           loc_1D8C|0-240-8-130
6524|code|ADD             R3, SP, #0x3AC+var_1B4|126-171
6526|code|MOV             R0, R10|80-70
6528|code|STR             R3, [SP,#0x3AC+var_384]|10-147
6530|code|MOV             R1, R3|25-70
6532|code|BLX             trace_get_destination_address|255-247-18-237
6536|code|CMP             R0, #0|0-40
6538|code|BEQ.W           loc_1D86|0-240-252-129
6542|code|LDR             R3, [SP,#0x3AC+var_344]|26-155
6544|code|LDRB            R3, [R3]|27-120
6546|code|CMP             R3, #0|0-43
6548|code|BEQ.W           loc_1D00|0-240-180-129
6552|code|LDR             R3, [SP,#0x3AC+var_340]|27-155
6554|code|LDRB            R3, [R3,#1]|91-120
6556|code|CMP             R3, #0|0-43
6558|code|BEQ.W           loc_1CF8|0-240-171-129
6562|code|LDR             R3, [SP,#0x3AC+var_33C]|28-155
6564|code|LDRB            R3, [R3,#8]|27-122
6566|code|CBNZ            R3, loc_19B8|59-185
6568|code|LDRH.W          R2, [R8]|184-248-0-32
6572|code|CMP             R2, #2|2-42
6574|code|BEQ             loc_19B4|1-208
6576|code|CMP             R2, #0xA|10-42
6578|code|BNE             loc_19B8|1-209
6580|code|STRH.W          R3, [R8,#2]|168-248-2-48
6584|code|LDR             R3, [SP,#0x3AC+var_338]|29-155
6586|code|LDRB            R3, [R3,#9]|91-122
6588|code|CBNZ            R3, loc_19CE|59-185
6590|code|LDRH.W          R2, [R8,#0x80]|184-248-128-32
6594|code|CMP             R2, #2|2-42
6596|code|BEQ             loc_19CA|1-208
6598|code|CMP             R2, #0xA|10-42
6600|code|BNE             loc_19CE|1-209
6602|code|STRH.W          R3, [R8,#0x82]|168-248-130-48
6606|code|LDR             R3, [SP,#0x3AC+var_334]|30-155
6608|code|LDRB            R3, [R3,#0xA]|155-122
6610|code|CMP             R3, #0|0-43
6612|code|BNE.W           loc_1CE0|64-240-132-129
6616|code|LDR             R3, [SP,#0x3AC+var_360]|19-155
6618|code|LDR.W           R6, [R3,#0x80C]|211-248-12-104
6622|code|CMP             R6, #0|0-46
6624|code|BEQ.W           loc_1C88|0-240-82-129
6628|code|LDR             R3, [SP,#0x3AC+var_360]|19-155
6630|code|STR             R7, [SP,#0x3AC+var_354]|22-151
6632|code|MOV             R7, R6|55-70
6634|code|ADDW            R3, R3, #0x808|3-246-8-3
6638|code|STR             R4, [SP,#0x3AC+var_350]|23-148
6640|code|LDR.W           R9, [SP,#0x3AC+readfds]|221-248-8-144
6644|code|LDR             R6, [SP,#0x3AC+var_34C]|24-158
6646|code|LDR             R4, [SP,#0x3AC+var_330]|31-156
6648|code|STR             R5, [SP,#0x3AC+var_358]|21-149
6650|code|MOV             R5, R3|29-70
6652|code|LDRB            R3, [R6]|51-120
6654|code|CMP             R3, #0|0-43
6656|code|BNE.W           loc_1BC8|64-240-226-128
6660|code|LDRB            R3, [R4,#1]|99-120
6662|code|CMP             R3, #0|0-43
6664|code|BNE.W           loc_1C0E|64-240-1-129
6668|code|LDRB.W          R3, [R7,#0x2CC+var_1B8]|151-248-20-49
6672|code|LDRB.W          R1, [R8,#0x104]|152-248-4-17
6676|code|CMP             R3, R1|139-66
6678|code|ITE CS|44-191
6680|code|MOVCS           R3, #0|0-35
6682|code|MOVCC           R3, #1|1-35
6684|code|CMP             R3, #0|0-43
6686|code|BNE.W           loc_1BAE|64-240-198-128
6690|code|MOV             R5, R7|61-70
6692|code|LDR             R7, [R7,#0x2CC+var_2C4]|191-104
6694|code|CMP             R7, #0|0-47
6696|code|BNE             loc_19FC|232-209
6698|code|LDR             R3, [SP,#0x3AC+var_348]|25-155
6700|code|MOV             R2, R5|42-70
6702|code|MOV             R6, R5|46-70
6704|code|LDR             R7, [SP,#0x3AC+var_354]|22-159
6706|code|CMP             R2, R3|154-66
6708|code|LDR             R5, [SP,#0x3AC+var_358]|21-157
6710|code|STR.W           R9, [SP,#0x3AC+readfds]|205-248-8-144
6714|code|LDR             R4, [SP,#0x3AC+var_350]|23-156
6716|code|BEQ.W           loc_1C88|0-240-36-129
6720|code|LDR             R3, [SP,#0x3AC+var_2F4]|46-155
6722|code|LDRB            R3, [R3]|27-120
6724|code|CMP             R3, #0|0-43
6726|code|BNE.W           loc_1D6A|64-240-144-129
6730|code|LDR             R3, [SP,#0x3AC+var_2F0]|47-155
6732|code|LDRB            R3, [R3,#1]|91-120
6734|code|CMP             R3, #0|0-43
6736|code|BNE.W           loc_1D52|64-240-127-129
6740|code|LDRB.W          R3, [R8,#0x104]|152-248-4-49
6744|code|LDRB.W          R1, [R6,#0x114]|150-248-20-17
6748|code|CMP             R3, R1|139-66
6750|code|ITE CS|44-191
6752|code|MOVCS           R3, #0|0-35
6754|code|MOVCC           R3, #1|1-35
6756|code|CMP             R3, #0|0-43
6758|code|BNE.W           loc_1C88|64-240-15-129
6762|code|MOV             R3, R2|19-70
6764|code|MOV             R0, R10|80-70
6766|code|LDRD.W          R8, R9, [R3,#0x118]!|243-233-70-137
6770|code|STR             R2, [SP,#0x3AC+var_384]|10-146
6772|code|ADDS.W          R8, R8, #1|24-241-1-8
6776|code|ADC.W           R9, R9, #0|73-241-0-9
6780|code|STRD.W          R8, R9, [R3]|195-233-0-137
6784|code|BLX             trace_get_wire_length|255-247-146-235
6788|code|LDR             R2, [SP,#0x3AC+var_384]|10-154
6790|code|MOV             R1, R2|17-70
6792|code|LDRD.W          R2, R3, [R1,#0x120]!|241-233-72-35
6796|code|STRD.W          R2, R3, [SP,#0x3AC+var_384]|205-233-10-35
6800|code|LDR             R3, [SP,#0x3AC+var_35C]|20-155
6802|code|ADDW            R6, R3, #0x828|3-246-40-6
6806|code|LDRD.W          R2, R3, [R6]|214-233-0-35
6810|code|ADDS.W          R8, R2, #1|18-241-1-8
6814|code|ADC.W           R9, R3, #0|67-241-0-9
6818|code|MOV             R2, R8|66-70
6820|code|MOV             R3, R9|75-70
6822|code|STRD.W          R2, R3, [R6]|198-233-0-35
6826|code|LDRD.W          R2, R3, [SP,#0x3AC+var_384]|221-233-10-35
6830|code|ADDS            R2, R2, R0|18-24
6832|code|MOV             R0, R10|80-70
6834|code|ADC.W           R3, R3, #0|67-241-0-3
6838|code|STRD.W          R2, R3, [R1]|193-233-0-35
6842|code|BLX             trace_get_wire_length|255-247-118-235
6846|code|LDR             R3, [SP,#0x3AC+var_35C]|20-155
6848|code|ADD.W           R1, R3, #0x820|3-245-2-97
6852|code|LDRD.W          R2, R3, [R1]|209-233-0-35
6856|code|ADDS.W          R8, R2, R0|18-235-0-8
6860|code|ADC.W           R9, R3, #0|67-241-0-9
6864|code|CMP             R5, #3|3-45
6866|code|STRD.W          R8, R9, [R1]|193-233-0-137
6870|code|BNE.W           loc_1808|127-244-151-174
6874|code|MOV             R0, R10; jumptable 00001840 case 3|80-70
6876|code|BLX             trace_destroy_packet|255-247-152-236
6880|code|MOV             R0, R11|88-70
6882|code|BLX             trace_is_err|255-247-178-235
6886|code|CMP             R0, #0|0-40
6888|code|BNE.W           loc_1C46|64-240-173-128
6892|code|MOV             R0, R11|88-70
6894|code|BLX             trace_destroy|255-247-2-236
6898|code|LDR             R3, [SP,#0x3AC+var_370]|15-155
6900|code|LDRB.W          R3, [R3,#0x832]|147-248-50-56
6904|code|CBNZ            R3, loc_1B06|43-185
6906|code|LDR             R3, [SP,#0x3AC+var_37C]|12-155
6908|code|LDR             R2, [SP,#0x3AC+argc]|4-154
6910|code|LDR             R3, [R3]|27-104
6912|code|CMP             R2, R3|154-66
6914|code|BGT.W           loc_1782|63-247-62-174
6918|code|BLX             endwin|255-247-130-235
6922|code|BLX             endprotoent|255-247-24-236
6926|code|MOVS            R0, #0|0-32
6928|code|B               loc_1562|39-229
6930|code|MOV             R0, R8; jumptable 00001840 case 0|64-70
6932|code|BLX             __fdelt_chk|255-247-160-236
6936|code|MOVS            R3, #0x8000001F|31-35-200-242-0-3
6942|code|AND.W           R3, R8, R3|8-234-3-3
6946|code|CMP             R3, #0|0-43
6948|code|LDR             R2, [SP,#0x3AC+readfds]|2-154
6950|code|IT LT|184-191
6952|code|ADDLT.W         R3, R3, #0xFFFFFFFF|3-241-255-51
6956|code|MOV.W           R1, #1|79-240-1-1
6960|code|ITT LT|188-191
6962|code|ORNLT.W         R3, R3, #0x1F|99-240-31-3
6966|code|ADDLT           R3, #1|1-51
6968|code|LSL.W           R3, R1, R3|1-250-3-243
6972|code|LDR.W           R2, [R2,R0,LSL#2]|82-248-32-32
6976|code|ORRS            R3, R2|19-67
6978|code|LDR             R2, [SP,#0x3AC+readfds]|2-154
6980|code|STR.W           R3, [R2,R0,LSL#2]|66-248-32-48
6984|code|ADD.W           R0, R8, #1; nfds|8-241-1-0
6988|code|MOVS            R3, #0|0-35
6990|code|LDR.W           R8, [SP,#0x3AC+readfds]|221-248-8-128
6994|code|MOVS            R2, #0; writefds|0-34
6996|code|STR             R3, [SP,#0x3AC+longind]; timeout|0-147
6998|code|MOV             R3, R2; exceptfds|19-70
7000|code|MOV             R1, R8; readfds|65-70
7002|code|BLX             select|255-247-8-236
7006|code|LDR.W           R3, [R8]|216-248-0-48
7010|code|LSLS            R3, R3, #0x1F|219-7
7012|code|BMI             loc_1BDC|58-212
7014|code|CMP             R5, #3|3-45
7016|code|BNE.W           loc_1808|127-244-78-174
7020|code|ADDS            R6, #1|1-54
7022|code|BEQ.W           loc_1808|63-244-75-174
7026|code|B               loc_1ADA; jumptable 00001840 case 3|178-231
7028|code|VLDR            D7, [R7,#0x2CC+var_2C4]; jumptable 00001840 case 1|151-237-2-123
7032|code|ADD             R2, SP, #0x3AC+var_2DC|52-170
7034|code|LDR             R3, [SP,#0x3AC+var_374]|14-155
7036|code|VCVT.S32.F64    S10, D7|189-238-199-91
7040|code|VLDR            S11, [R3,#4]|211-237-1-90
7044|code|VCVT.F64.S32    D6, S10|184-238-197-107
7048|code|VSTR            S10, [R2]|130-237-0-90
7052|code|VSUB.F64        D7, D7, D6|55-238-70-123
7056|code|VMUL.F64        D7, D7, D8|39-238-8-123
7060|code|VCVT.F32.S32    S10, S10|184-238-197-90
7064|code|VCVT.S32.F64    S14, D7|189-238-199-123
7068|code|VCMPE.F32       S10, S11|180-238-229-90
7072|code|VSTR            S14, [R2,#4]|130-237-1-122
7076|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
7080|code|BGT             loc_1BB8|6-220
7082|code|MOV             R3, R2|19-70
7084|code|B               loc_1B4E|207-231
7086|code|LDR             R7, [R7,#0x2CC+var_2C4+4]|255-104
7088|code|CMP             R7, #0|0-47
7090|code|BNE.W           loc_19FC|127-244-35-175
7094|code|B               loc_1A2A|56-231
7096|code|VCVT.S32.F32    S11, S11|253-238-229-90
7100|code|MOVS            R1, #0|0-33
7102|code|MOV             R3, R2|19-70
7104|code|STR             R1, [R2,#4]|81-96
7106|code|VSTR            S11, [R2]|194-237-0-90
7110|code|B               loc_1B4E|194-231
7112|code|ADD.W           R0, R7, #0x10|7-241-16-0
7116|code|MOV             R1, R8|65-70
7118|code|BL              sub_2158|0-240-195-250
7122|code|CMP             R0, #0|0-40
7124|code|BEQ.W           loc_1A04|63-244-22-175
7128|code|LSRS            R3, R0, #0x1F|195-15
7130|code|B               loc_1A1C|31-231
7132|code|LDR             R2, [SP,#0x3AC+var_36C]|16-154
7134|code|LDR             R3, =dword_104|123-75
7136|code|LDR             R3, [R2,R3]|211-88
7138|code|LDR             R0, [R3]; WINDOW *|24-104
7140|code|BLX             wgetch|255-247-200-235
7144|code|CMP             R0, #0x33 ; '3'|51-40
7146|code|BEQ.W           loc_1D10|0-240-145-128
7150|code|BLE             loc_1C2A|28-221
7152|code|CMP             R0, #0x42 ; 'B'|66-40
7154|code|BEQ.W           loc_1D08|0-240-137-128
7158|code|BGT             loc_1CCA|104-220
7160|code|CMP             R0, #0x34 ; '4'|52-40
7162|code|BEQ.W           loc_1D1C|0-240-143-128
7166|code|CMP             R0, #0x35 ; '5'|53-40
7168|code|BNE             loc_1B66|177-209
7170|code|LDR             R2, [SP,#0x3AC+var_304]|42-154
7172|code|LDRB            R3, [R2,#0xA]|147-122
7174|code|EOR.W           R3, R3, #1|131-240-1-3
7178|code|STRB            R3, [R2,#0xA]|147-114
7180|code|B               loc_1B66|171-231
7182|code|ADD.W           R0, R7, #0x90|7-241-144-0
7186|code|LDR             R1, [SP,#0x3AC+var_384]|10-153
7188|code|BL              sub_2158|0-240-160-250
7192|code|CMP             R0, #0|0-40
7194|code|BEQ.W           loc_1A0C|63-244-247-174
7198|code|B               loc_1BD8|219-231
7200|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
7204|code|MOV.W           R8, #0|79-240-0-8
7208|code|B               loc_1B48|142-231
7210|code|CMP             R0, #0x25 ; '%'|37-40
7212|code|BEQ             loc_1D28|124-208
7214|code|BLE.W           loc_1D80|64-243-167-128
7218|code|CMP             R0, #0x31 ; '1'|49-40
7220|code|BEQ             loc_1D30|124-208
7222|code|CMP             R0, #0x32 ; '2'|50-40
7224|code|BNE             loc_1B66|149-209
7226|code|LDR             R2, [SP,#0x3AC+var_2F8]|45-154
7228|code|LDRB            R3, [R2,#8]|19-122
7230|code|EOR.W           R3, R3, #1|131-240-1-3
7234|code|STRB            R3, [R2,#8]|19-114
7236|code|B               loc_1B66|143-231
7238|code|MOV             R0, R11|88-70
7240|code|LDR             R1, [SP,#0x3AC+var_32C]|32-153
7242|code|BLX             trace_perror|255-247-186-234
7246|code|B               loc_1AEC|77-231
7248|code|MOV             R0, R11|88-70
7250|code|MOVS            R1, #4|4-33
7252|code|MOV             R2, R7|58-70
7254|code|MOVS            R3, #1|1-35
7256|code|STR             R3, [R7,#0x2CC+var_2CC]|59-96
7258|code|BLX             trace_config|255-247-106-235
7262|code|CMP             R0, #0|0-40
7264|code|BEQ.W           loc_17EC|63-244-196-173
7268|code|MOV             R0, R11|88-70
7270|code|LDR             R1, [SP,#0x3AC+var_31C]|36-153
7272|code|BLX             trace_perror|255-247-170-234
7276|code|B               loc_17EC|190-229
7278|code|MOV             R0, R11|88-70
7280|code|LDR             R1, [SP,#0x3AC+var_324]|34-153
7282|code|BLX             trace_perror|255-247-166-234
7286|code|B               loc_17CA|168-229
7288|code|BL              sub_237C|0-240-128-251
7292|code|MOV             R0, R10|80-70
7294|code|BLX             trace_get_seconds|255-247-144-235
7298|code|VSTR            D0, [R6]|134-237-0-11
7302|code|B               loc_195C|105-230
7304|code|MOV             R1, R8; src|65-70
7306|code|LDR.W           R8, [SP,#0x3AC+dest]|221-248-196-128
7310|code|MOV.W           R2, #0x108; n|79-244-132-114
7314|code|ADD             R6, SP, #0x3AC+var_2D4|54-174
7316|code|MOV.W           R9, #0|79-240-0-9
7320|code|MOV             R0, R8; dest|64-70
7322|code|BLX             memcpy|255-247-56-235
7326|code|LDR             R3, [SP,#0x3AC+var_2EC]|48-155
7328|code|MOV             R2, R8|66-70
7330|code|MOV.W           R8, #0|79-240-0-8
7334|code|ADDW            R1, R3, #0x804|3-246-4-1
7338|code|ADD             R3, SP, #0x3AC+var_24|226-171
7340|code|MOV             R0, R6|48-70
7342|code|STRD.W          R8, R9, [R3]|195-233-0-137
7346|code|ADD             R3, SP, #0x3AC+var_1C|228-171
7348|code|STRD.W          R8, R9, [R3]|195-233-0-137
7352|code|BL              sub_2AB8|0-240-254-254
7356|code|LDR             R2, [R6]|50-104
7358|code|B               loc_1A6A|212-230
7360|code|MOV             R0, R11|88-70
7362|code|LDR             R1, [SP,#0x3AC+var_328]|33-153
7364|code|BLX             trace_perror|255-247-124-234
7368|code|B               loc_17B6|117-229
7370|code|CMP             R0, #0x62 ; 'b'|98-40
7372|code|BNE             loc_1D3C|54-209
7374|code|LDR             R2, [SP,#0x3AC+var_30C]|40-154
7376|code|MOVS            R3, #0|0-35
7378|code|STR             R3, [R2,#0xC]|211-96
7380|code|B               loc_1B66|71-231
7382|code|MOV             R0, R11|88-70
7384|code|LDR             R1, [SP,#0x3AC+var_320]|35-153
7386|code|BLX             trace_perror|255-247-114-234
7390|code|B               loc_17E0|127-229
7392|code|MOV             R0, R10|80-70
7394|code|ADD             R1, SP, #0x3AC+var_130|159-169
7396|code|MOVS            R2, #0|0-34
7398|code|BLX             trace_get_transport|255-247-154-235
7402|code|CMP             R0, #0|0-40
7404|code|BNE.W           loc_19D8|127-244-116-174
7408|code|MOVS            R3, #0xFF|255-35
7410|code|STRB.W          R3, [R8,#0x104]|136-248-4-49
7414|code|B               loc_19D8|111-230
7416|code|LDR             R0, [SP,#0x3AC+var_384]|10-152
7418|code|BL              sub_2104|0-240-3-250
7422|code|B               loc_19A2|80-230
7424|code|MOV             R0, R8|64-70
7426|code|BL              sub_2104|0-240-255-249
7430|code|B               loc_1998|71-230
7432|code|LDR             R2, [SP,#0x3AC+var_314]|38-154
7434|code|MOVS            R3, #1|1-35
7436|code|STR             R3, [R2,#0xC]|211-96
7438|code|B               loc_1B66|42-231
7440|code|LDR             R2, [SP,#0x3AC+var_318]|37-154
7442|code|LDRB            R3, [R2,#1]|83-120
7444|code|EOR.W           R3, R3, #1|131-240-1-3
7448|code|STRB            R3, [R2,#1]|83-112
7450|code|B               loc_1B66|36-231
7452|code|LDR             R2, [SP,#0x3AC+var_308]|41-154
7454|code|LDRB            R3, [R2,#9]|83-122
7456|code|EOR.W           R3, R3, #1|131-240-1-3
7460|code|STRB            R3, [R2,#9]|83-114
7462|code|B               loc_1B66|30-231
7464|code|LDR             R2, [SP,#0x3AC+var_300]|43-154
7466|code|MOVS            R3, #2|2-35
7468|code|STR             R3, [R2,#0xC]|211-96
7470|code|B               loc_1B66|26-231
7472|code|LDR             R2, [SP,#0x3AC+var_2FC]|44-154
7474|code|LDRB            R3, [R2]|19-120
7476|code|EOR.W           R3, R3, #1|131-240-1-3
7480|code|STRB            R3, [R2]|19-112
7482|code|B               loc_1B66|20-231
7484|code|CMP             R0, #0x71 ; 'q'|113-40
7486|code|BNE.W           loc_1B66|127-244-18-175
7490|code|LDR             R2, [SP,#0x3AC+var_310]|39-154
7492|code|MOV             R0, R10|80-70
7494|code|MOVS            R3, #1|1-35
7496|code|STRB.W          R3, [R2,#0x832]|130-248-50-56
7500|code|BLX             trace_destroy_packet|255-247-96-235
7504|code|B               loc_1AE0|198-230
7506|code|LDR             R0, [SP,#0x3AC+var_384]|10-152
7508|code|ADD.W           R1, R6, #0x90|6-241-144-1
7512|code|STR             R2, [SP,#0x3AC+var_358]|21-146
7514|code|BL              sub_2158|0-240-253-249
7518|code|LDR             R2, [SP,#0x3AC+var_358]|21-154
7520|code|CMP             R0, #0|0-40
7522|code|BEQ.W           loc_1A54|63-244-119-174
7526|code|LSRS            R3, R0, #0x1F|195-15
7528|code|B               loc_1A64|124-230
7530|code|ADD.W           R1, R2, #0x10|2-241-16-1
7534|code|MOV             R0, R8|64-70
7536|code|STR             R2, [SP,#0x3AC+var_358]|21-146
7538|code|BL              sub_2158|0-240-241-249
7542|code|LDR             R2, [SP,#0x3AC+var_358]|21-154
7544|code|CMP             R0, #0|0-40
7546|code|BEQ.W           loc_1A4A|63-244-102-174
7550|code|B               loc_1D66|242-231
7552|code|CMP             R0, #0x1B|27-40
7554|code|BEQ             loc_1D42|222-208
7556|code|B               loc_1B66|239-230
7558|code|STRH.W          R0, [R8,#0x80]|168-248-128-0
7562|code|B               loc_198E|0-230
7564|code|STRH.W          R0, [R8]|168-248-0-0
7568|code|B               loc_197C|244-229
7570|code|BLX             endwin|255-247-60-234
7574|code|LDR             R1, =(aStartingTrace - 0x1D9E); "Starting trace"|14-73
7576|code|MOV             R0, R11|88-70
7578|code|ADD             R1, PC; "Starting trace"|121-68
7580|code|BLX             trace_perror|255-247-16-234
7584|code|MOV             R0, R11|88-70
7586|code|BLX             trace_destroy|255-247-168-234
7590|code|MOVS            R0, #1|1-32
7592|code|B.W             loc_1562|255-247-219-187
7596|code|BLX             endwin|255-247-46-234
7600|code|LDR             R1, =(aOpeningTraceFi - 0x1DB8); "Opening trace file"|8-73
7602|code|MOV             R0, R11|88-70
7604|code|ADD             R1, PC; "Opening trace file"|121-68
7606|code|BLX             trace_perror|255-247-4-234
7610|code|MOVS            R0, #1|1-32
7612|code|B.W             loc_1562|255-247-209-187
7616|code|BLX             __stack_chk_fail|255-247-6-235
7620|code|MOV.W           R8, #0; jumptable 00001840 default case|79-240-0-8
7624|code|B               loc_1B48|190-230
7626|data|ALIGN 4|0-191
7628|data|DCD dword_104|4-1-0-0
7632|data|DCD aStartingTrace - 0x1D9E; "Starting trace"|94-22-0-0
7636|data|DCD aOpeningTraceFi - 0x1DB8; "Opening trace file"|4-22-0-0
7640|code|PUSH            {R4,R5}|48-180
7642|code|MOVS            R1, #0|0-33
7644|code|LDR             R3, =(unk_140D0 - 0x1DE6)|12-75
7646|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1DE8)|13-76
7648|code|LDR             R2, =(_ZNSt3mapI9flowkey_t10flowdata_tSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev_ptr - 0x13EC8)|13-74
7650|code|ADD             R3, PC; unk_140D0|123-68
7652|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
7654|code|ADDW            R5, R3, #0x808|3-246-8-5
7658|code|STR.W           R1, [R3,#(dword_148D8 - 0x140D0)]|195-248-8-24
7662|code|ADDW            R0, R3, #0x804|3-246-4-0
7666|code|STR.W           R5, [R3,#(dword_148E0 - 0x140D0)]|195-248-16-88
7670|code|STR.W           R5, [R3,#(dword_148E4 - 0x140D0)]|195-248-20-88
7674|code|STR.W           R1, [R3,#(dword_148DC - 0x140D0)]|195-248-12-24
7678|code|STR.W           R1, [R3,#(dword_148E8 - 0x140D0)]|195-248-24-24
7682|code|LDR             R1, [R4,R2]; std::map<flowkey_t,flowdata_t,std::less<flowkey_t>,std::allocator<std::pair<flowkey_t const,flowdata_t>>>::~map()|161-88
7684|code|LDR             R2, =(off_14004 - 0x1E0C)|5-74
7686|code|POP             {R4,R5}|48-188
7688|code|ADD             R2, PC; off_14004|122-68
7690|code|B.W             j___aeabi_atexit|255-247-243-186
7694|data|ALIGN 0x10|0-191
7696|data|DCD unk_140D0 - 0x1DE6|234-34-1-0
7700|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1DE8|224-32-1-0
7704|data|DCD _ZNSt3mapI9flowkey_t10flowdata_tSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev_ptr - 0x13EC8|20-1-0-0
7708|data|DCD off_14004 - 0x1E0C|248-33-1-0
7712|code|MOV.W           R11, #0|79-240-0-11
7716|code|MOV.W           LR, #0|79-240-0-14
7720|code|POP             {R1}; argc|2-188
7722|code|MOV             R2, SP; ubp_av|106-70
7724|code|PUSH            {R2}; stack_end|4-180
7726|code|PUSH            {R0}; rtld_fini|1-180
7728|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1E58)|223-248-36-160
7732|code|ADR             R3, off_1E58|8-163
7734|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
7736|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x13EC8)|223-248-32-192
7740|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
7744|code|PUSH.W          {R12}; fini|77-248-4-205
7748|code|LDR             R3, =(__libc_csu_init_ptr - 0x13EC8)|6-75
7750|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
7754|code|LDR             R0, =(main_ptr - 0x13EC8)|6-72
7756|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
7760|code|BLX             __libc_start_main|255-247-202-233
7764|code|BLX             abort|255-247-174-233
7768|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E58|112-32-1-0
7772|data|DCD __libc_csu_fini_ptr - 0x13EC8|0-1-0-0
7776|data|DCD __libc_csu_init_ptr - 0x13EC8|32-1-0-0
7780|data|DCD main_ptr - 0x13EC8|52-1-0-0
7784|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1E78)|20-48-159-229
7788|code|LDR             R2, =(__gmon_start___ptr_0 - 0x13EC8)|20-32-159-229
7792|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
7796|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
7800|code|CMP             R2, #0|0-0-82-227
7804|code|BXEQ            LR|30-255-47-1
7808|code|B               __gmon_start__|219-252-255-234
7812|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E78|80-32-1-0
7816|data|DCD __gmon_start___ptr_0 - 0x13EC8|8-1-0-0
7820|code|LDR             R3, =(__bss_start__ - 0x1E94)|7-75
7822|code|LDR             R0, =(__bss_start__ - 0x1E98)|8-72
7824|code|ADD             R3, PC; __bss_start__|123-68
7826|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1E9E)|8-74
7828|code|ADD             R0, PC; __bss_start__|120-68
7830|code|ADDS            R3, #3|3-51
7832|code|SUBS            R3, R3, R0|27-26
7834|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
7836|code|CMP             R3, #6|6-43
7838|code|BLS             locret_1EA8|3-217
7840|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x13EC8)|5-75
7842|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
7844|code|CBZ             R3, locret_1EA8|3-177
7846|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
7848|code|BX              LR|112-71
7850|data|ALIGN 4|0-191
7852|data|DCD __bss_start__ - 0x1E94|52-34-1-0
7856|data|DCD __bss_start__ - 0x1E98|48-34-1-0
7860|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E9E|42-32-1-0
7864|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x13EC8|16-1-0-0
7868|code|LDR             R1, =(__bss_start__ - 0x1EC4)|8-73
7870|code|LDR             R0, =(__bss_start__ - 0x1EC8)|9-72
7872|code|ADD             R1, PC; __bss_start__|121-68
7874|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1ECC)|9-75
7876|code|ADD             R0, PC; __bss_start__|120-68
7878|code|SUBS            R1, R1, R0|9-26
7880|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
7882|code|ASRS            R1, R1, #2|137-16
7884|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
7888|code|ASRS            R1, R1, #1|73-16
7890|code|BEQ             locret_1EDC|3-208
7892|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x13EC8)|5-74
7894|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
7896|code|CBZ             R3, locret_1EDC|3-177
7898|code|BX              R3; _ITM_registerTMCloneTable|24-71
7900|code|BX              LR|112-71
7902|data|ALIGN 0x10|0-191
7904|data|DCD __bss_start__ - 0x1EC4|4-34-1-0
7908|data|DCD __bss_start__ - 0x1EC8|0-34-1-0
7912|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1ECC|252-31-1-0
7916|data|DCD _ITM_registerTMCloneTable_ptr - 0x13EC8|28-1-0-0
7920|code|PUSH            {R3,LR}|8-181
7922|code|LDR             R3, =(__bss_start__ - 0x1EFA)|10-75
7924|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1EFC)|10-74
7926|code|ADD             R3, PC; __bss_start__|123-68
7928|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
7930|code|LDRB            R3, [R3]|27-120
7932|code|CBNZ            R3, locret_1F1A|107-185
7934|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x13EC8)|9-75
7936|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
7938|code|CBZ             R3, loc_1F0E|35-177
7940|code|LDR             R3, =(off_14004 - 0x1F0A)|8-75
7942|code|ADD             R3, PC; off_14004|123-68
7944|code|LDR             R0, [R3]; off_14004 ; void *|24-104
7946|code|BLX             __cxa_finalize|255-247-160-234
7950|code|BL              sub_1E8C|255-247-189-255
7954|code|LDR             R3, =(__bss_start__ - 0x1F1A)|6-75
7956|code|MOVS            R2, #1|1-34
7958|code|ADD             R3, PC; __bss_start__|123-68
7960|code|STRB            R2, [R3]|26-112
7962|code|POP             {R3,PC}|8-189
7964|data|DCD __bss_start__ - 0x1EFA|206-33-1-0
7968|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1EFC|204-31-1-0
7972|data|DCD __cxa_finalize_ptr_0 - 0x13EC8|48-1-0-0
7976|data|DCD off_14004 - 0x1F0A|250-32-1-0
7980|data|DCD __bss_start__ - 0x1F1A|174-33-1-0
7984|code|LDR             R0, =(dword_13D8C - 0x1F38)|7-72
7986|code|PUSH            {R3,LR}|8-181
7988|code|ADD             R0, PC; dword_13D8C|120-68
7990|code|LDR             R2, [R0]|2-104
7992|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1F3E)|6-75
7994|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
7996|code|CBNZ            R2, loc_1F44|18-185
7998|code|POP.W           {R3,LR}|189-232-8-64
8002|code|B               sub_1EBC|187-231
8004|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x13EC8)|4-74
8006|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
8008|code|CMP             R3, #0|0-43
8010|code|BEQ             loc_1F3E|248-208
8012|code|BLX             R3; _Jv_RegisterClasses|152-71
8014|code|B               loc_1F3E|246-231
8016|data|DCD dword_13D8C - 0x1F38|84-30-1-0
8020|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F3E|138-31-1-0
8024|data|DCD _Jv_RegisterClasses_ptr - 0x13EC8|12-1-0-0
8028|data|ALIGN 0x10|0-0-0-0
8032|code|PUSH            {R4-R6,LR}|112-181
8034|code|MOV             R3, R0|3-70
8036|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1F6E)|79-76
8038|code|MOVS            R1, #1|1-33
8040|code|LDR             R5, =(stderr_ptr - 0x13EC8)|79-77
8042|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
8044|code|LDR             R2, =(aUsageSOptionsL - 0x1F74); "usage: %s [options] libtraceuri...\n"|79-74
8046|code|MOV             R0, R4|32-70
8048|code|ADD             R2, PC; "usage: %s [options] libtraceuri...\n"|122-68
8050|code|LDR             R4, [R0,R5]; stderr|68-89
8052|code|LDR             R0, [R4]|32-104
8054|code|BLX             __fprintf_chk|255-247-50-234
8058|code|LDR             R0, =(aFilterBpfexpr - 0x1F86); " --filter bpfexpr\n"|77-72
8060|code|LDR             R3, [R4]; s|35-104
8062|code|MOVS            R1, #1; size|1-33
8064|code|MOVS            R2, #0x12; n|18-34
8066|code|ADD             R0, PC; " --filter bpfexpr\n"|120-68
8068|code|BLX             fwrite|255-247-6-234
8072|code|LDR             R0, =(aFBpfexpr - 0x1F94); " -f bpfexpr\n"|74-72
8074|code|LDR             R3, [R4]; s|35-104
8076|code|MOVS            R1, #1; size|1-33
8078|code|MOVS            R2, #0xC; n|12-34
8080|code|ADD             R0, PC; " -f bpfexpr\n"|120-68
8082|code|BLX             fwrite|255-247-0-234
8086|code|LDR             R0, =(aApplyABpfFilte - 0x1FA2); "\t\tApply a bpf filter expression\n"|72-72
8088|code|LDR             R3, [R4]; s|35-104
8090|code|MOVS            R1, #1; size|1-33
8092|code|MOVS            R2, #0x20 ; ' '; n|32-34
8094|code|ADD             R0, PC; "\t\tApply a bpf filter expression\n"|120-68
8096|code|BLX             fwrite|255-247-248-233
8100|code|LDR             R0, =(aSnaplenSnaplen - 0x1FB0); " --snaplen snaplen\n"|69-72
8102|code|LDR             R3, [R4]; s|35-104
8104|code|MOVS            R1, #1; size|1-33
8106|code|MOVS            R2, #0x13; n|19-34
8108|code|ADD             R0, PC; " --snaplen snaplen\n"|120-68
8110|code|BLX             fwrite|255-247-242-233
8114|code|LDR             R0, =(aSSnaplen - 0x1FBE); " -s snaplen\n"|67-72
8116|code|LDR             R3, [R4]; s|35-104
8118|code|MOVS            R1, #1; size|1-33
8120|code|MOVS            R2, #0xC; n|12-34
8122|code|ADD             R0, PC; " -s snaplen\n"|120-68
8124|code|BLX             fwrite|255-247-234-233
8128|code|LDR             R0, =(aCaptureOnlySna - 0x1FCC); "\t\tCapture only snaplen bytes\n"|64-72
8130|code|LDR             R3, [R4]; s|35-104
8132|code|MOVS            R1, #1; size|1-33
8134|code|MOVS            R2, #0x1D; n|29-34
8136|code|ADD             R0, PC; "\t\tCapture only snaplen bytes\n"|120-68
8138|code|BLX             fwrite|255-247-228-233
8142|code|LDR             R0, =(aPromisc01 - 0x1FDA); " --promisc 0|1\n"|62-72
8144|code|LDR             R3, [R4]; s|35-104
8146|code|MOVS            R1, #1; size|1-33
8148|code|MOVS            R2, #0xF; n|15-34
8150|code|ADD             R0, PC; " --promisc 0|1\n"|120-68
8152|code|BLX             fwrite|255-247-220-233
8156|code|LDR             R0, =(aP01 - 0x1FE8); " -p 0|1\n"|59-72
8158|code|LDR             R3, [R4]; s|35-104
8160|code|MOVS            R1, #1; size|1-33
8162|code|MOVS            R2, #8; n|8-34
8164|code|ADD             R0, PC; " -p 0|1\n"|120-68
8166|code|BLX             fwrite|255-247-214-233
8170|code|LDR             R0, =(aEnableDisableP - 0x1FF6); "\t\tEnable/Disable promiscuous mode\n"|57-72
8172|code|LDR             R3, [R4]; s|35-104
8174|code|MOVS            R1, #1; size|1-33
8176|code|MOVS            R2, #0x22 ; '"'; n|34-34
8178|code|ADD             R0, PC; "\t\tEnable/Disable promiscuous mode\n"|120-68
8180|code|BLX             fwrite|255-247-206-233
8184|code|LDR             R0, =(aBitsPerSec - 0x2004); " --bits-per-sec\n"|54-72
8186|code|LDR             R3, [R4]; s|35-104
8188|code|MOVS            R1, #1; size|1-33
8190|code|MOVS            R2, #0x10; n|16-34
8192|code|ADD             R0, PC; " --bits-per-sec\n"|120-68
8194|code|BLX             fwrite|255-247-200-233
8198|code|LDR             R0, =(aB - 0x2012); " -B\n"|52-72
8200|code|LDR             R3, [R4]; s|35-104
8202|code|MOVS            R1, #1; size|1-33
8204|code|MOVS            R2, #4; n|4-34
8206|code|ADD             R0, PC; " -B\n"|120-68
8208|code|BLX             fwrite|255-247-192-233
8212|code|LDR             R0, =(aDisplayUsageIn - 0x2020); "\t\tDisplay usage in bits per second, n"...|49-72
8214|code|LDR             R3, [R4]; s|35-104
8216|code|MOVS            R1, #1; size|1-33
8218|code|MOVS            R2, #0x39 ; '9'; n|57-34
8220|code|ADD             R0, PC; "\t\tDisplay usage in bits per second, n"...|120-68
8222|code|BLX             fwrite|255-247-186-233
8226|code|LDR             R0, =(aPercent - 0x202E); " --percent\n"|47-72
8228|code|LDR             R3, [R4]; s|35-104
8230|code|MOVS            R1, #1; size|1-33
8232|code|MOVS            R2, #0xB; n|11-34
8234|code|ADD             R0, PC; " --percent\n"|120-68
8236|code|BLX             fwrite|255-247-178-233
8240|code|LDR             R0, =(aP - 0x203C); " -P\n"|44-72
8242|code|LDR             R3, [R4]; s|35-104
8244|code|MOVS            R1, #1; size|1-33
8246|code|MOVS            R2, #4; n|4-34
8248|code|ADD             R0, PC; " -P\n"|120-68
8250|code|BLX             fwrite|255-247-172-233
8254|code|LDR             R0, =(aDisplayUsageIn_0 - 0x204A); "\t\tDisplay usage in percentage of tota"...|42-72
8256|code|LDR             R3, [R4]; s|35-104
8258|code|MOVS            R1, #1; size|1-33
8260|code|MOVS            R2, #0x2D ; '-'; n|45-34
8262|code|ADD             R0, PC; "\t\tDisplay usage in percentage of tota"...|120-68
8264|code|BLX             fwrite|255-247-164-233
8268|code|LDR             R0, =(aIntervalInt - 0x2058); " --interval int\n"|39-72
8270|code|LDR             R3, [R4]; s|35-104
8272|code|MOVS            R1, #1; size|1-33
8274|code|MOVS            R2, #0x10; n|16-34
8276|code|ADD             R0, PC; " --interval int\n"|120-68
8278|code|BLX             fwrite|255-247-158-233
8282|code|LDR             R0, =(aIInt - 0x2066); " -i int\n"|37-72
8284|code|LDR             R3, [R4]; s|35-104
8286|code|MOVS            R1, #1; size|1-33
8288|code|MOVS            R2, #8; n|8-34
8290|code|ADD             R0, PC; " -i int\n"|120-68
8292|code|BLX             fwrite|255-247-150-233
8296|code|LDR             R0, =(aUpdateTheDispl - 0x2074); "\t\tUpdate the display every int second"...|34-72
8298|code|LDR             R3, [R4]; s|35-104
8300|code|MOVS            R1, #1; size|1-33
8302|code|MOVS            R2, #0x27 ; '''; n|39-34
8304|code|ADD             R0, PC; "\t\tUpdate the display every int second"...|120-68
8306|code|BLX             fwrite|255-247-144-233
8310|code|LDR             R0, =(aWide - 0x2082); " --wide\n"|32-72
8312|code|LDR             R3, [R4]; s|35-104
8314|code|MOVS            R1, #1; size|1-33
8316|code|MOVS            R2, #8; n|8-34
8318|code|ADD             R0, PC; " --wide\n"|120-68
8320|code|BLX             fwrite|255-247-136-233
8324|code|LDR             R0, =(aW - 0x2090); " -w\n"|29-72
8326|code|LDR             R3, [R4]; s|35-104
8328|code|MOVS            R1, #1; size|1-33
8330|code|MOVS            R2, #4; n|4-34
8332|code|ADD             R0, PC; " -w\n"|120-68
8334|code|BLX             fwrite|255-247-130-233
8338|code|LDR             R0, =(aExpandIpAddres - 0x209C); "\t\tExpand IP address fields to fit IPv"...|27-72
8340|code|LDR             R3, [R4]; s|35-104
8342|code|MOVS            R1, #1; size|1-33
8344|code|ADD             R0, PC; "\t\tExpand IP address fields to fit IPv"...|120-68
8346|code|MOVS            R2, #0x31 ; '1'; n|49-34
8348|code|POP.W           {R4-R6,LR}|189-232-112-64
8352|code|B.W             j_fwrite|255-247-118-185
8356|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1F6E|90-31-1-0
8360|data|DCD stderr_ptr - 0x13EC8|40-1-0-0
8364|data|DCD aUsageSOptionsL - 0x1F74; "usage: %s [options] libtraceuri...\n"|108-16-0-0
8368|data|DCD aFilterBpfexpr - 0x1F86; " --filter bpfexpr\n"|126-16-0-0
8372|data|DCD aFBpfexpr - 0x1F94; " -f bpfexpr\n"|132-16-0-0
8376|data|DCD aApplyABpfFilte - 0x1FA2; "\t\tApply a bpf filter expression\n"|134-16-0-0
8380|data|DCD aSnaplenSnaplen - 0x1FB0; " --snaplen snaplen\n"|156-16-0-0
8384|data|DCD aSSnaplen - 0x1FBE; " -s snaplen\n"|162-16-0-0
8388|data|DCD aCaptureOnlySna - 0x1FCC; "\t\tCapture only snaplen bytes\n"|164-16-0-0
8392|data|DCD aPromisc01 - 0x1FDA; " --promisc 0|1\n"|182-16-0-0
8396|data|DCD aP01 - 0x1FE8; " -p 0|1\n"|184-16-0-0
8400|data|DCD aEnableDisableP - 0x1FF6; "\t\tEnable/Disable promiscuous mode\n"|182-16-0-0
8404|data|DCD aBitsPerSec - 0x2004; " --bits-per-sec\n"|204-16-0-0
8408|data|DCD aB - 0x2012; " -B\n"|210-16-0-0
8412|data|DCD aDisplayUsageIn - 0x2020; "\t\tDisplay usage in bits per second, n"...|204-16-0-0
8416|data|DCD aPercent - 0x202E; " --percent\n"|250-16-0-0
8420|data|DCD aP - 0x203C; " -P\n"|248-16-0-0
8424|data|DCD aDisplayUsageIn_0 - 0x204A; "\t\tDisplay usage in percentage of tota"...|242-16-0-0
8428|data|DCD aIntervalInt - 0x2058; " --interval int\n"|20-17-0-0
8432|data|DCD aIInt - 0x2066; " -i int\n"|26-17-0-0
8436|data|DCD aUpdateTheDispl - 0x2074; "\t\tUpdate the display every int second"...|24-17-0-0
8440|data|DCD aWide - 0x2082; " --wide\n"|50-17-0-0
8444|data|DCD aW - 0x2090; " -w\n"|48-17-0-0
8448|data|DCD aExpandIpAddres - 0x209C; "\t\tExpand IP address fields to fit IPv"...|44-17-0-0
8452|code|LDRH            R3, [R0]|3-136
8454|code|CMP             R3, #2|2-43
8456|code|BEQ             loc_211A|7-208
8458|code|CMP             R3, #0xA|10-43
8460|code|BNE             locret_2118|4-209
8462|code|ADDS            R0, #8; s|8-48
8464|code|MOVS            R1, #0; c|0-33
8466|code|MOVS            R2, #0x10; n|16-34
8468|code|B.W             j_memset|255-247-170-184
8472|code|BX              LR|112-71
8474|code|MOVS            R3, #0|0-35
8476|code|STR             R3, [R0,#4]|67-96
8478|code|BX              LR|112-71
8480|code|LDRH            R3, [R0,#2]|67-136
8482|code|LDRH            R2, [R1,#2]|74-136
8484|code|CMP             R3, R2|147-66
8486|code|BEQ             loc_212C|1-208
8488|code|SUBS            R0, R3, R2|152-26
8490|code|BX              LR|112-71
8492|code|ADDS            R0, #8|8-48
8494|code|ADDS            R1, #8|8-49
8496|code|MOVS            R2, #0x10|16-34
8498|code|B.W             j_memcmp|255-247-81-184
8502|data|ALIGN 4|0-191
8504|code|LDRH            R3, [R0,#2]|67-136
8506|code|LDRH            R2, [R1,#2]|74-136
8508|code|CMP             R3, R2|147-66
8510|code|ITEEE NE|17-191
8512|code|SUBNE           R0, R3, R2|152-26
8514|code|LDREQ           R3, [R0,#4]|67-104
8516|code|LDREQ           R0, [R1,#4]|72-104
8518|code|SUBEQ           R0, R3, R0|24-26
8520|code|BX              LR|112-71
8522|data|ALIGN 4|0-191
8524|code|MOV             R3, R1|11-70
8526|code|ADDS            R0, #0xC|12-48
8528|code|ADDS            R1, #0xC|12-49
8530|code|LDRB            R2, [R3,#0xB]|218-122
8532|code|B.W             j_memcmp|255-247-64-184
8536|code|PUSH            {R3-R5,LR}|56-181
8538|code|MOV             R4, R1|12-70
8540|code|LDRH            R3, [R0]|3-136
8542|code|LDRH            R2, [R1]|10-136
8544|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x2168)|29-77
8546|code|CMP             R3, R2|147-66
8548|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
8550|code|BEQ             loc_216C|1-208
8552|code|SUBS            R0, R3, R2|152-26
8554|code|POP             {R3-R5,PC}|56-189
8556|code|CMP             R3, #0x11; switch 18 cases|17-43
8558|code|BHI             def_2170; jumptable 00002170 default case, cases 1,3-9,11-16|40-216
8560|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
8564|data|DCB 9; jump table for switch statement|9
8565|data|DCB 0x27|39
8566|data|DCB 0x1F|31
8567|data|DCB 0x27|39
8568|data|DCB 0x27|39
8569|data|DCB 0x27|39
8570|data|DCB 0x27|39
8571|data|DCB 0x27|39
8572|data|DCB 0x27|39
8573|data|DCB 0x27|39
8574|data|DCB 0x13|19
8575|data|DCB 0x27|39
8576|data|DCB 0x27|39
8577|data|DCB 0x27|39
8578|data|DCB 0x27|39
8579|data|DCB 0x27|39
8580|data|DCB 0x27|39
8581|data|DCB 0xB|11
8582|code|MOVS            R0, #0; jumptable 00002170 case 0|0-32
8584|code|POP             {R3-R5,PC}|56-189
8586|code|ADD.W           R1, R4, #0xC; jumptable 00002170 case 17|4-241-12-1
8590|code|LDRB            R2, [R4,#0xB]; n|226-122
8592|code|ADDS            R0, #0xC; s1|12-48
8594|code|POP.W           {R3-R5,LR}|189-232-56-64
8598|code|B.W             j_memcmp|255-247-31-184
8602|code|LDRH            R3, [R0,#2]; jumptable 00002170 case 10|67-136
8604|code|LDRH            R2, [R4,#2]|98-136
8606|code|CMP             R3, R2|147-66
8608|code|BNE             loc_2168|226-209
8610|code|ADD.W           R1, R4, #8; s2|4-241-8-1
8614|code|ADDS            R0, #8; s1|8-48
8616|code|MOVS            R2, #0x10; n|16-34
8618|code|POP.W           {R3-R5,LR}|189-232-56-64
8622|code|B.W             j_memcmp|255-247-19-184
8626|code|LDRH            R3, [R0,#2]; jumptable 00002170 case 2|67-136
8628|code|LDRH            R2, [R4,#2]|98-136
8630|code|CMP             R3, R2|147-66
8632|code|BNE             loc_2168|214-209
8634|code|LDR             R3, [R0,#4]|67-104
8636|code|LDR             R0, [R4,#4]|96-104
8638|code|SUBS            R0, R3, R0|24-26
8640|code|POP             {R3-R5,PC}|56-189
8642|code|LDR             R0, =(stderr_ptr - 0x13EC8); jumptable 00002170 default case, cases 1,3-9,11-16|6-72
8644|code|MOVS            R1, #1|1-33
8646|code|LDR             R2, =(aDonTKnowHowToC - 0x21CE); "Don't know how to compare family %d\n"|6-74
8648|code|LDR             R0, [R5,R0]; stderr|40-88
8650|code|ADD             R2, PC; "Don't know how to compare family %d\n"|122-68
8652|code|LDR             R0, [R0]|0-104
8654|code|BLX             __fprintf_chk|255-247-6-233
8658|code|BLX             abort|254-247-240-239
8662|data|ALIGN 4|0-191
8664|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2168|96-29-1-0
8668|data|DCD stderr_ptr - 0x13EC8|40-1-0-0
8672|data|DCD aDonTKnowHowToC - 0x21CE; "Don't know how to compare family %d\n"|46-16-0-0
8676|code|PUSH            {R4-R7,LR}|240-181
8678|code|MOV             R6, R3|30-70
8680|code|SUB             SP, SP, #0x14|133-176
8682|code|MOV             R4, R2|20-70
8684|code|CMP             R2, #0|0-42
8686|code|BEQ             loc_2260|55-208
8688|code|LDRH            R5, [R0]|5-136
8690|code|CMP             R5, #0xA|10-45
8692|code|BEQ             loc_2254|46-208
8694|code|CMP             R5, #0x11|17-45
8696|code|BEQ             loc_2246|37-208
8698|code|CMP             R5, #2|2-45
8700|code|BEQ             loc_221A|13-208
8702|code|LDR             R7, =(aUnknownFamilyD - 0x220A); "Unknown family %d"|27-79
8704|code|MOV             R1, R6|49-70
8706|code|STR             R5, [SP,#0x28+servlen]|1-149
8708|code|MOV             R0, R4|32-70
8710|code|ADD             R7, PC; "Unknown family %d"|127-68
8712|code|MOVS            R2, #1|1-34
8714|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
8718|code|STR             R7, [SP,#0x28+serv]|0-151
8720|code|BLX             __snprintf_chk|255-247-154-232
8724|code|MOV             R0, R4; sa|32-70
8726|code|ADD             SP, SP, #0x14|5-176
8728|code|POP             {R4-R7,PC}|240-189
8730|code|MOVS            R2, #1|1-34
8732|code|MOVS            R1, #0x10; salen|16-33
8734|code|MOVS            R3, #0|0-35
8736|code|STR             R3, [SP,#0x28+serv]; serv|0-147
8738|code|STR             R3, [SP,#0x28+servlen]; servlen|1-147
8740|code|STR             R2, [SP,#0x28+flags]; flags|2-146
8742|code|MOV             R3, R6; hostlen|51-70
8744|code|MOV             R2, R4; host|34-70
8746|code|BLX             getnameinfo|254-247-166-239
8750|code|CMP             R0, #0|0-40
8752|code|BEQ             loc_2214|240-208
8754|code|BLX             gai_strerror|255-247-36-232
8758|code|MOV             R2, R6; n|50-70
8760|code|MOV             R1, R0; src|1-70
8762|code|MOV             R0, R4; dest|32-70
8764|code|BLX             strncpy|254-247-236-239
8768|code|MOV             R0, R4|32-70
8770|code|ADD             SP, SP, #0x14|5-176
8772|code|POP             {R4-R7,PC}|240-189
8774|code|MOV             R1, R4|33-70
8776|code|ADDS            R0, #0xC|12-48
8778|code|BLX             trace_ether_ntoa|254-247-192-239
8782|code|MOV             R0, R4|32-70
8784|code|ADD             SP, SP, #0x14|5-176
8786|code|POP             {R4-R7,PC}|240-189
8788|code|MOVS            R3, #0|0-35
8790|code|MOVS            R2, #1|1-34
8792|code|STR             R3, [SP,#0x28+serv]|0-147
8794|code|MOVS            R1, #0x1C|28-33
8796|code|STR             R3, [SP,#0x28+servlen]|1-147
8798|code|B               loc_2224|225-231
8800|code|LDR             R4, =(unk_140D0 - 0x226A)|3-76
8802|code|MOVW            R6, #0x401|64-242-1-70
8806|code|ADD             R4, PC; unk_140D0|124-68
8808|code|B               loc_21F0|194-231
8810|data|ALIGN 4|0-191
8812|data|DCD aUnknownFamilyD - 0x220A; "Unknown family %d"|26-16-0-0
8816|data|DCD unk_140D0 - 0x226A|102-30-1-0
8820|code|VMOV.F64        D7, #8.0|178-238-0-123
8824|code|VLDR            D6, =1.0e12|159-237-45-107
8828|code|PUSH            {R4,LR}|16-181
8830|code|SUB             SP, SP, #0x10|132-176
8832|code|VMUL.F64        D0, D0, D7|32-238-7-11
8836|code|VCMPE.F64       D0, D6|180-238-198-11
8840|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
8844|code|BGT             loc_22E2|41-220
8846|code|VLDR            D7, =1.0e9|159-237-42-123
8850|code|VCMPE.F64       D0, D7|180-238-199-11
8854|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
8858|code|BGT             loc_2322|66-220
8860|code|VLDR            D7, =1000000.0|159-237-40-123
8864|code|VCMPE.F64       D0, D7|180-238-199-11
8868|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
8872|code|BGT             loc_2306|45-220
8874|code|VLDR            D7, =1000.0|159-237-39-123
8878|code|VCMPE.F64       D0, D7|180-238-199-11
8882|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
8886|code|BGT             loc_2314|45-220
8888|code|LDR             R0, =(unk_140D0 - 0x22C6)|37-72
8890|code|MOV.W           R1, #0x400|79-244-128-97
8894|code|LDR             R4, =(a03fbS - 0x22CC); "%.03fb/s"|37-76
8896|code|MOV             R3, R1|11-70
8898|code|ADD             R0, PC; unk_140D0|120-68
8900|code|VSTR            D0, [SP,#0x18+var_10]|141-237-2-11
8904|code|ADD             R4, PC; "%.03fb/s"|124-68
8906|code|MOVS            R2, #1|1-34
8908|code|STR             R4, [SP,#0x18+var_18]|0-148
8910|code|ADDW            R0, R0, #0x404|0-242-4-64
8914|code|BLX             __snprintf_chk|255-247-58-232
8918|code|LDR             R0, =(unk_140D0 - 0x22DC)|32-72
8920|code|ADD             R0, PC; unk_140D0|120-68
8922|code|ADDW            R0, R0, #0x404|0-242-4-64
8926|code|ADD             SP, SP, #0x10|4-176
8928|code|POP             {R4,PC}|16-189
8930|code|VDIV.F64        D0, D0, D6|128-238-6-11
8934|code|LDR             R4, =(a03ftbS - 0x22EE); "%.03fTb/s"|29-76
8936|code|LDR             R0, =(unk_140D0 - 0x22F0)|29-72
8938|code|ADD             R4, PC; "%.03fTb/s"|124-68
8940|code|ADD             R0, PC; unk_140D0|120-68
8942|code|MOV.W           R1, #0x400|79-244-128-97
8946|code|MOVS            R2, #1|1-34
8948|code|MOV             R3, R1|11-70
8950|code|STR             R4, [SP,#0x18+var_18]|0-148
8952|code|VSTR            D0, [SP,#0x18+var_10]|141-237-2-11
8956|code|ADDW            R0, R0, #0x404|0-242-4-64
8960|code|BLX             __snprintf_chk|255-247-34-232
8964|code|B               loc_22D6|231-231
8966|code|LDR             R4, =(a03fmbS - 0x2312); "%.03fMb/s"|23-76
8968|code|VDIV.F64        D0, D0, D7|128-238-7-11
8972|code|LDR             R0, =(unk_140D0 - 0x2314)|22-72
8974|code|ADD             R4, PC; "%.03fMb/s"|124-68
8976|code|ADD             R0, PC; unk_140D0|120-68
8978|code|B               loc_22EE|236-231
8980|code|LDR             R4, =(a03fkbS - 0x2320); "%.03fkb/s"|21-76
8982|code|VDIV.F64        D0, D0, D7|128-238-7-11
8986|code|LDR             R0, =(unk_140D0 - 0x2322)|21-72
8988|code|ADD             R4, PC; "%.03fkb/s"|124-68
8990|code|ADD             R0, PC; unk_140D0|120-68
8992|code|B               loc_22EE|229-231
8994|code|LDR             R4, =(a03fgbS - 0x232E); "%.03fGb/s"|20-76
8996|code|VDIV.F64        D0, D0, D7|128-238-7-11
9000|code|LDR             R0, =(unk_140D0 - 0x2330)|19-72
9002|code|ADD             R4, PC; "%.03fGb/s"|124-68
9004|code|ADD             R0, PC; unk_140D0|120-68
9006|code|B               loc_22EE|222-231
9008|data|DCFD 1.0e12|0-0-0-162-148-26-109-66
9016|data|DCFD 1.0e9|0-0-0-0-101-205-205-65
9024|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
9032|data|DCFD 1000.0|0-0-0-0-0-64-143-64
9040|data|DCD unk_140D0 - 0x22C6|10-30-1-0
9044|data|DCD a03fbS - 0x22CC; "%.03fb/s"|156-15-0-0
9048|data|DCD unk_140D0 - 0x22DC|244-29-1-0
9052|data|DCD a03ftbS - 0x22EE; "%.03fTb/s"|74-15-0-0
9056|data|DCD unk_140D0 - 0x22F0|224-29-1-0
9060|data|DCD a03fmbS - 0x2312; "%.03fMb/s"|62-15-0-0
9064|data|DCD unk_140D0 - 0x2314|188-29-1-0
9068|data|DCD a03fkbS - 0x2320; "%.03fkb/s"|60-15-0-0
9072|data|DCD unk_140D0 - 0x2322|174-29-1-0
9076|data|DCD a03fgbS - 0x232E; "%.03fGb/s"|22-15-0-0
9080|data|DCD unk_140D0 - 0x2330|160-29-1-0
9084|code|PUSH.W          {R4-R11,LR}|45-233-240-79
9088|code|MOVS            R2, #0|0-34
9090|code|VPUSH           {D8-D9}|45-237-4-139
9094|code|LDR.W           R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2392)|223-248-48-54
9098|code|LDR.W           R1, =(__stack_chk_guard_ptr - 0x13EC8)|223-248-48-22
9102|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
9104|code|SUBW            SP, SP, #0xB84|173-246-132-61
9108|code|MOV             R0, R3|24-70
9110|code|ADD             R4, SP, #0xBB8+var_A80|78-172
9112|code|STR             R3, [SP,#0xBB8+var_A94]|73-147
9114|code|LDR.W           R3, =(unk_140D0 - 0x23A4)|223-248-36-54
9118|code|LDR             R1, [R0,R1]; __stack_chk_guard|65-88
9120|code|ADD             R3, PC; unk_140D0|123-68
9122|code|STR             R2, [R4]|34-96
9124|code|STR             R2, [R4,#8]|162-96
9126|code|MOV             R0, R1|8-70
9128|code|LDR.W           R5, [R3,#(dword_148E0 - 0x140D0)]|211-248-16-88
9132|code|STR             R1, [SP,#0xBB8+var_A84]|77-145
9134|code|ADDW            R1, R3, #0x808|3-246-8-1
9138|code|LDR             R3, [R0]|3-104
9140|code|CMP             R5, R1|141-66
9142|code|STR             R2, [R4,#4]|98-96
9144|code|STR.W           R3, [SP,#0xBB8+var_3C]|205-248-124-59
9148|code|BEQ             loc_249A|109-208
9150|code|LDR.W           R8, =(unk_140D0 - 0x23CE)|223-248-4-134
9154|code|MOVW            R3, #0xAF8B|74-246-139-115
9158|code|MOV             R2, R3|26-70
9160|code|ADD             R6, SP, #0xBB8+var_A70|82-174
9162|code|ADD             R8, PC; unk_140D0|248-68
9164|code|ADD.W           R11, SP, #0xBB8+var_A60|13-245-172-123
9168|code|ADDW            R3, R8, #0x808|8-246-8-3
9172|code|STR             R3, [SP,#0xBB8+var_A98]|72-147
9174|code|MOV             R3, R2|19-70
9176|code|ADD.W           R10, SP, #0xBB8+var_9E0|13-245-236-122
9180|code|MOVT.W          R3, #0x8AF8|200-246-248-35
9184|code|MOV             R7, R3|31-70
9186|code|B               loc_244A|50-224
9188|code|CBZ             R0, loc_23F2|40-177
9190|code|MOV             R1, R6; src|49-70
9192|code|MOV.W           R2, #0x118; n|79-244-140-114
9196|code|BLX             memcpy|254-247-142-239
9200|code|LDR             R0, [R4,#4]|96-104
9202|code|ADD.W           R3, R0, #0x118|0-245-140-115
9206|code|STR             R3, [R4,#4]|99-96
9208|code|MOV             R8, R3|152-70
9210|code|ADD.W           R12, SP, #0xBB8+dest|13-245-24-124
9214|code|SUB.W           R1, R8, #0x118; src|168-245-140-113
9218|code|MOV.W           R2, #0x118; n|79-244-140-114
9222|code|LDR.W           R9, [R4]|212-248-0-144
9226|code|MOV             R0, R12; dest|96-70
9228|code|BLX             memcpy|254-247-126-239
9232|code|RSB.W           R3, R9, R8|201-235-8-3
9236|code|MOV.W           R2, #0x118; n|79-244-140-114
9240|code|ASRS            R3, R3, #3|219-16
9242|code|MUL.W           R3, R7, R3|7-251-3-243
9246|code|ADD.W           R8, R3, #0xFFFFFFFF|3-241-255-56
9250|code|MOV             R1, R0; src|1-70
9252|code|MOV             R0, SP; dest|104-70
9254|code|BLX             memcpy|254-247-114-239
9258|code|MOV             R0, R9; src|72-70
9260|code|MOV.W           R2, #0|79-240-0-2
9264|code|MOV             R1, R8; int|65-70
9266|code|STRB.W          R2, [SP,#0xBB8+var_AA0]|141-248-24-33
9270|code|MOVS            R2, #0; char|0-34
9272|code|BL              sub_2DE8|0-240-214-252
9276|code|MOV             R0, R5|40-70
9278|code|BLX             _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|254-247-96-239
9282|code|LDR             R3, [SP,#0xBB8+var_A98]|72-155
9284|code|CMP             R0, R3|152-66
9286|code|MOV             R5, R0|5-70
9288|code|BEQ             loc_249A|39-208
9290|code|ADD.W           R2, R5, #0x120|5-245-144-114
9294|code|ADD.W           R3, R5, #0x118|5-245-140-115
9298|code|ADD.W           R1, R5, #0x10; src|5-241-16-1
9302|code|MOV             R0, R11; dest|88-70
9304|code|LDRD.W          R8, R9, [R2]|210-233-0-137
9308|code|MOVS            R2, #0x80; n|128-34
9310|code|STRD.W          R8, R9, [R6]|198-233-0-137
9314|code|LDRD.W          R8, R9, [R3]|211-233-0-137
9318|code|STRD.W          R8, R9, [R6,#8]|198-233-2-137
9322|code|BLX             memcpy|254-247-80-239
9326|code|MOVS            R2, #0x80; n|128-34
9328|code|MOV             R0, R10; dest|80-70
9330|code|ADD.W           R1, R5, #0x90; src|5-241-144-1
9334|code|BLX             memcpy|254-247-74-239
9338|code|LDR             R0, [R4,#4]; dest|96-104
9340|code|LDR             R3, [R4,#8]|163-104
9342|code|LDRB.W          R2, [R5,#0x114]|149-248-20-33
9346|code|CMP             R0, R3|152-66
9348|code|STRB.W          R2, [R6,#0x110]|134-248-16-33
9352|code|BNE             loc_23E4|172-209
9354|code|MOV             R1, R0|1-70
9356|code|MOV             R2, R6|50-70
9358|code|MOV             R0, R4|32-70
9360|code|BL              sub_2CA0|0-240-6-252
9364|code|LDR.W           R8, [R4,#4]|212-248-4-128
9368|code|B               loc_23FA|175-231
9370|code|LDR.W           R3, =dword_104|223-248-44-53
9374|code|MOV.W           R10, #0xFFFFFFFF|79-240-255-58
9378|code|LDR             R2, [SP,#0xBB8+var_A94]|73-154
9380|code|LDR.W           R9, [R2,R3]|82-248-3-144
9384|code|LDR.W           R3, [R9]|217-248-0-48
9388|code|CBZ             R3, loc_24B6|27-177
9390|code|LDRSH.W         R7, [R3,#4]|179-249-4-112
9394|code|ADD.W           R10, R7, #1|7-241-1-10
9398|code|MOVS            R0, #0; int|0-32
9400|code|MOV             R1, R0; int|1-70
9402|code|BLX             move|254-247-76-239
9406|code|LDR.W           R5, =(unk_140D0 - 0x24C6)|223-248-12-85
9410|code|ADD             R5, PC; unk_140D0|125-68
9412|code|ADD.W           R3, R5, #0x820|5-245-2-99
9416|code|ADDW            R5, R5, #0x828|5-246-40-5
9420|code|LDRD.W          R6, R7, [R3]|211-233-0-103
9424|code|MOV             R1, R7|57-70
9426|code|MOV             R0, R6|48-70
9428|code|BLX             __aeabi_ul2f|254-247-98-238
9432|code|LDR.W           R3, =(byte_14008 - 0x24E0)|223-248-244-52
9436|code|ADD             R3, PC; byte_14008|123-68
9438|code|VLDR            S0, [R3,#4]|147-237-1-10
9442|code|VMOV            S15, R0|7-238-144-10
9446|code|VDIV.F32        S0, S15, S0|135-238-128-10
9450|code|VCVT.F64.F32    D0, S0|183-238-192-10
9454|code|BL              sub_2274|255-247-193-254
9458|code|MOV             R2, R6|50-70
9460|code|MOV             R3, R7|59-70
9462|code|LDRD.W          R6, R7, [R5]|213-233-0-103
9466|code|STRD.W          R6, R7, [SP,#0xBB8+var_BB0]|205-233-2-103
9470|code|STR             R0, [SP,#0xBB8+var_BB8]|0-144
9472|code|LDR.W           R0, =(aTotalBytes10ll - 0x2508); "Total Bytes: %10llu (%s)\tTotal Packets"...|223-248-208-4
9476|code|ADD             R0, PC; "Total Bytes: %10llu (%s)\tTotal Packets"...|120-68
9478|code|BLX             printw|254-247-154-238
9482|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
9486|code|BLX             wclrtoeol|254-247-212-238
9490|code|LDR.W           R3, [R9]|217-248-0-48
9494|code|CBZ             R3, loc_251E|19-177
9496|code|MOV.W           R2, #0x40000|79-244-128-34
9500|code|STR             R2, [R3,#0x10]|26-97
9502|code|MOVS            R0, #1; int|1-32
9504|code|MOVS            R1, #0; int|0-33
9506|code|BLX             move|254-247-24-239
9510|code|LDR.W           R3, =(byte_14008 - 0x252E)|223-248-176-52
9514|code|ADD             R3, PC; byte_14008|123-68
9516|code|LDRB            R3, [R3]|27-120
9518|code|CBZ             R3, loc_256A|227-177
9520|code|LDR.W           R3, =(unk_140D0 - 0x253C)|223-248-168-52
9524|code|LDR.W           R0, =(aS - 0x2542); "%*s"|223-248-168-4
9528|code|ADD             R3, PC; unk_140D0|123-68
9530|code|LDR.W           R2, =(aSourceIp - 0x2548); "source ip"|223-248-168-36
9534|code|ADD             R0, PC; "%*s"|120-68
9536|code|LDRB.W          R3, [R3,#(byte_14900 - 0x140D0)]|147-248-48-56
9540|code|ADD             R2, PC; "source ip"|122-68
9542|code|CMP             R3, #0|0-43
9544|code|ITE EQ|12-191
9546|code|MOVEQ           R1, #0x14|20-33
9548|code|MOVNE           R1, #0x2A ; '*'|42-33
9550|code|BLX             printw|254-247-118-238
9554|code|LDR.W           R3, =(byte_14008 - 0x255A)|223-248-148-52
9558|code|ADD             R3, PC; byte_14008|123-68
9560|code|LDRB            R3, [R3,#(byte_14010 - 0x14008)]|27-122
9562|code|CMP             R3, #0|0-43
9564|code|BEQ.W           loc_282E|0-240-103-129
9568|code|LDR.W           R0, =(asc_32B4 - 0x2568); "/"|223-248-136-4
9572|code|ADD             R0, PC; "/"|120-68
9574|code|BLX             printw|254-247-106-238
9578|code|LDR.W           R3, =(byte_14008 - 0x2572)|223-248-132-52
9582|code|ADD             R3, PC; byte_14008|123-68
9584|code|LDRB            R3, [R3,#(byte_14010 - 0x14008)]|27-122
9586|code|CMP             R3, #0|0-43
9588|code|BNE.W           loc_297A|64-240-1-130
9592|code|LDR.W           R3, =(byte_14008 - 0x2580)|223-248-120-52
9596|code|ADD             R3, PC; byte_14008|123-68
9598|code|LDRB            R3, [R3,#(byte_14009 - 0x14008)]|91-120
9600|code|CBZ             R3, loc_25BC|227-177
9602|code|LDR.W           R3, =(unk_140D0 - 0x258E)|223-248-116-52
9606|code|LDR.W           R0, =(aS - 0x2594); "%*s"|223-248-116-4
9610|code|ADD             R3, PC; unk_140D0|123-68
9612|code|LDR.W           R2, =(aDestIp - 0x259A); "dest ip"|223-248-112-36
9616|code|ADD             R0, PC; "%*s"|120-68
9618|code|LDRB.W          R3, [R3,#(byte_14900 - 0x140D0)]|147-248-48-56
9622|code|ADD             R2, PC; "dest ip"|122-68
9624|code|CMP             R3, #0|0-43
9626|code|ITE EQ|12-191
9628|code|MOVEQ           R1, #0x14|20-33
9630|code|MOVNE           R1, #0x2A ; '*'|42-33
9632|code|BLX             printw|254-247-76-238
9636|code|LDR.W           R3, =(byte_14008 - 0x25AC)|223-248-92-52
9640|code|ADD             R3, PC; byte_14008|123-68
9642|code|LDRB            R3, [R3,#(byte_14011 - 0x14008)]|91-122
9644|code|CMP             R3, #0|0-43
9646|code|BEQ.W           loc_2824|0-240-57-129
9650|code|LDR.W           R0, =(asc_32B4 - 0x25BA); "/"|223-248-84-4
9654|code|ADD             R0, PC; "/"|120-68
9656|code|BLX             printw|254-247-64-238
9660|code|LDR.W           R3, =(byte_14008 - 0x25C4)|223-248-76-52
9664|code|ADD             R3, PC; byte_14008|123-68
9666|code|LDRB            R3, [R3,#(byte_14011 - 0x14008)]|91-122
9668|code|CMP             R3, #0|0-43
9670|code|BNE.W           loc_296C|64-240-209-129
9674|code|LDR.W           R3, =(byte_14008 - 0x25D2)|223-248-68-52
9678|code|ADD             R3, PC; byte_14008|123-68
9680|code|LDRB            R3, [R3,#(byte_14012 - 0x14008)]|155-122
9682|code|CMP             R3, #0|0-43
9684|code|BNE.W           loc_295E|64-240-195-129
9688|code|LDR.W           R3, =(byte_14008 - 0x25E0)|223-248-56-52
9692|code|ADD             R3, PC; byte_14008|123-68
9694|code|LDR             R3, [R3,#(dword_14014 - 0x14008)]|219-104
9696|code|CMP             R3, #1|1-43
9698|code|BEQ.W           loc_2992|0-240-214-129
9702|code|CMP             R3, #2|2-43
9704|code|BEQ.W           loc_2988|0-240-206-129
9708|code|CMP             R3, #0|0-43
9710|code|BEQ.W           loc_2838|0-240-35-129
9714|code|LDR.W           R0, =(aPackets - 0x25FA); "Packets"|223-248-36-4
9718|code|ADD             R0, PC; "Packets"|120-68
9720|code|BLX             printw|254-247-32-238
9724|code|LDR.W           R3, [R9]|217-248-0-48
9728|code|CBZ             R3, loc_2606|11-177
9730|code|MOVS            R2, #0|0-34
9732|code|STR             R2, [R3,#0x10]|26-97
9734|code|CMP.W           R10, #4|186-241-4-15
9738|code|BLE.W           loc_27BC|64-243-215-128
9742|code|LDM.W           R4, {R2,R3}|148-232-12-0
9746|code|CMP             R2, R3|154-66
9748|code|BEQ.W           loc_27BC|0-240-210-128
9752|code|LDR.W           R3, =(unk_140D0 - 0x262A)|223-248-0-52
9756|code|SUB.W           R7, R10, #3|170-241-3-7
9760|code|LDR.W           R8, =(byte_14008 - 0x2630)|223-248-252-131
9764|code|MOVS            R6, #1|1-38
9766|code|ADD             R3, PC; unk_140D0|123-68
9768|code|STR             R3, [SP,#0xBB8+var_A98]|72-147
9770|code|LDR             R3, =(aS - 0x2632); "%*s"|254-75
9772|code|ADD             R8, PC; byte_14008|248-68
9774|code|ADD             R3, PC; "%*s"|123-68
9776|code|STR             R3, [SP,#0xBB8+var_A94]|73-147
9778|code|LDR             R3, =(byte_14008 - 0x2638)|253-75
9780|code|ADD             R3, PC; byte_14008|123-68
9782|code|STR             R3, [SP,#0xBB8+var_A90]|74-147
9784|code|LDR             R3, =(a10s_0+4 - 0x263E); "\t"|252-75
9786|code|ADD             R3, PC; "\t"|123-68
9788|code|STR             R3, [SP,#0xBB8+var_A8C]|75-147
9790|code|LDR             R3, =(asc_32B4 - 0x2644); "/"|252-75
9792|code|ADD             R3, PC; "/"|123-68
9794|code|STR             R3, [SP,#0xBB8+var_A88]|76-147
9796|code|B               loc_264E|3-224
9798|code|LDR             R3, [R4]|35-104
9800|code|CMP             R3, R5|171-66
9802|code|BEQ.W           loc_27BC|0-240-183-128
9806|code|ADDS            R6, #1|1-54
9808|code|MOVS            R1, #0; int|0-33
9810|code|MOV             R0, R6; int|48-70
9812|code|BLX             move|254-247-126-238
9816|code|LDRB.W          R3, [R8]|152-248-0-48
9820|code|CBZ             R3, loc_2696|219-177
9822|code|LDR             R3, [SP,#0xBB8+var_A98]|72-155
9824|code|MOVS            R1, #0x80|128-33
9826|code|LDR             R0, [R4]|32-104
9828|code|ADD             R2, SP, #0xBB8+var_83C|223-170
9830|code|LDRB.W          R3, [R3,#0x830]|147-248-48-56
9834|code|ADDS            R0, #0x10|16-48
9836|code|CMP             R3, #0|0-43
9838|code|MOV.W           R3, #0x400|79-244-128-99
9842|code|ITE EQ|12-191
9844|code|MOVEQ           R5, #0x14|20-37
9846|code|MOVNE           R5, #0x2A ; '*'|42-37
9848|code|BL              sub_21E4|255-247-180-253
9852|code|MOV             R2, R0|2-70
9854|code|MOV             R1, R5|41-70
9856|code|LDR             R0, [SP,#0xBB8+var_A94]; char *|73-152
9858|code|BLX             printw|254-247-220-237
9862|code|LDR             R3, [SP,#0xBB8+var_A90]|74-155
9864|code|LDRB            R3, [R3,#8]|27-122
9866|code|CMP             R3, #0|0-43
9868|code|BEQ.W           loc_287E|0-240-247-128
9872|code|LDR             R0, [SP,#0xBB8+var_A88]; char *|76-152
9874|code|BLX             printw|254-247-212-237
9878|code|LDR             R3, =(byte_14008 - 0x269C)|231-75
9880|code|ADD             R3, PC; byte_14008|123-68
9882|code|LDRB            R3, [R3,#(byte_14010 - 0x14008)]|27-122
9884|code|CBZ             R3, loc_26B8|99-177
9886|code|LDR             R3, [R4]|35-104
9888|code|LDRH            R2, [R3,#0x10]|26-138
9890|code|CMP             R2, #2|2-42
9892|code|BEQ.W           loc_2846|0-240-207-128
9896|code|CMP             R2, #0xA|10-42
9898|code|BEQ.W           loc_2846|0-240-204-128
9902|code|MOVS            R1, #0|0-33
9904|code|LDR             R0, =(a5d - 0x26B6); "%-5d  "|225-72
9906|code|ADD             R0, PC; "%-5d  "|120-68
9908|code|BLX             printw|254-247-194-237
9912|code|LDR             R3, =(byte_14008 - 0x26BE)|224-75
9914|code|ADD             R3, PC; byte_14008|123-68
9916|code|LDRB            R3, [R3,#(byte_14009 - 0x14008)]|91-120
9918|code|CBZ             R3, loc_2702|3-179
9920|code|LDR             R5, =(unk_140D0 - 0x26CE)|223-77
9922|code|MOVS            R1, #0x80|128-33
9924|code|LDR             R0, [R4]|32-104
9926|code|ADDW            R2, SP, #0xBB8+var_43C|13-242-124-114
9930|code|ADD             R5, PC; unk_140D0|125-68
9932|code|MOV.W           R3, #0x400|79-244-128-99
9936|code|ADDS            R0, #0x90|144-48
9938|code|LDRB.W          R5, [R5,#(byte_14900 - 0x140D0)]|149-248-48-88
9942|code|CMP             R5, #0|0-45
9944|code|ITE EQ|12-191
9946|code|MOVEQ           R5, #0x14|20-37
9948|code|MOVNE           R5, #0x2A ; '*'|42-37
9950|code|BL              sub_21E4|255-247-129-253
9954|code|MOV             R2, R0|2-70
9956|code|LDR             R0, =(aS - 0x26EC); "%*s"|215-72
9958|code|MOV             R1, R5|41-70
9960|code|ADD             R0, PC; "%*s"|120-68
9962|code|BLX             printw|254-247-168-237
9966|code|LDR             R3, =(byte_14008 - 0x26F4)|214-75
9968|code|ADD             R3, PC; byte_14008|123-68
9970|code|LDRB            R3, [R3,#(byte_14011 - 0x14008)]|91-122
9972|code|CMP             R3, #0|0-43
9974|code|BEQ.W           loc_2886|0-240-198-128
9978|code|LDR             R0, =(asc_32B4 - 0x2700); "/"|212-72
9980|code|ADD             R0, PC; "/"|120-68
9982|code|BLX             printw|254-247-158-237
9986|code|LDR             R3, =(byte_14008 - 0x2708)|211-75
9988|code|ADD             R3, PC; byte_14008|123-68
9990|code|LDRB            R3, [R3,#(byte_14011 - 0x14008)]|91-122
9992|code|CBZ             R3, loc_2726|107-177
9994|code|LDR             R3, [R4]|35-104
9996|code|LDRH.W          R2, [R3,#0x90]|179-248-144-32
10000|code|CMP             R2, #2|2-42
10002|code|BEQ.W           loc_2854|0-240-159-128
10006|code|CMP             R2, #0xA|10-42
10008|code|BEQ.W           loc_2854|0-240-156-128
10012|code|MOVS            R1, #0|0-33
10014|code|LDR             R0, =(a5d - 0x2724); "%-5d  "|205-72
10016|code|ADD             R0, PC; "%-5d  "|120-68
10018|code|BLX             printw|254-247-140-237
10022|code|LDR             R3, =(byte_14008 - 0x272C)|204-75
10024|code|ADD             R3, PC; byte_14008|123-68
10026|code|LDRB            R3, [R3,#(byte_14012 - 0x14008)]|155-122
10028|code|CMP             R3, #0|0-43
10030|code|BNE.W           loc_2864|64-240-153-128
10034|code|LDR.W           R11, =(byte_14008 - 0x273A)|223-248-40-179
10038|code|ADD             R11, PC; byte_14008|251-68
10040|code|LDR.W           R3, [R11,#(dword_14014 - 0x14008)]|219-248-12-48
10044|code|CMP             R3, #1|1-43
10046|code|BEQ.W           loc_2890|0-240-167-128
10050|code|CMP             R3, #2|2-43
10052|code|BEQ.W           loc_28E4|0-240-206-128
10056|code|CMP             R3, #0|0-43
10058|code|BEQ.W           loc_28A8|0-240-173-128
10062|code|LDR.W           R10, [R4]|212-248-0-160
10066|code|LDR             R5, [R4,#4]|101-104
10068|code|RSB.W           R2, R10, R5|202-235-5-2
10072|code|CMP.W           R2, #0x230|178-245-12-127
10076|code|BLT             loc_27B0|40-219
10078|code|SUB.W           R5, R5, #0x118|165-245-140-117
10082|code|ADD.W           R11, SP, #0xBB8+dest|13-245-24-123
10086|code|MOV.W           R2, #0x118; n|79-244-140-114
10090|code|MOV             R1, R5; src|41-70
10092|code|MOV             R0, R11; dest|88-70
10094|code|BLX             memcpy|254-247-206-237
10098|code|MOV             R0, R5; dest|40-70
10100|code|RSB.W           R5, R10, R5|202-235-5-5
10104|code|MOV             R1, R10; src|81-70
10106|code|MOV.W           R2, #0x118; n|79-244-140-114
10110|code|BLX             memcpy|254-247-198-237
10114|code|ASRS            R5, R5, #3|237-16
10116|code|MOVW            LR, #0xAF8B|74-246-139-126
10120|code|MOV             R1, R11; src|89-70
10122|code|MOVT.W          LR, #0x8AF8|200-246-248-46
10126|code|MOV.W           R2, #0x118; n|79-244-140-114
10130|code|MUL.W           R5, LR, R5|14-251-5-245
10134|code|MOV             R0, SP; dest|104-70
10136|code|BLX             memcpy|254-247-184-237
10140|code|MOV.W           R3, #0|79-240-0-3
10144|code|MOV             R0, R10; src|80-70
10146|code|MOVS            R1, #0|0-33
10148|code|STRB.W          R3, [SP,#0xBB8+var_AA0]|141-248-24-49
10152|code|MOV             R2, R5|42-70
10154|code|BL              sub_2EA4|0-240-123-251
10158|code|LDR             R5, [R4,#4]|101-104
10160|code|CMP             R6, R7|190-66
10162|code|SUB.W           R5, R5, #0x118|165-245-140-117
10166|code|STR             R5, [R4,#4]|101-96
10168|code|BNE.W           loc_2646|127-244-69-175
10172|code|LDR             R5, =(unk_140D0 - 0x27C6)|168-77
10174|code|MOVS            R6, #0|0-38
10176|code|MOVS            R7, #0|0-39
10178|code|ADD             R5, PC; unk_140D0|125-68
10180|code|ADDW            R0, R5, #0x804|5-246-4-0
10184|code|LDR.W           R1, [R5,#(dword_148DC - 0x140D0)]|213-248-12-24
10188|code|BL              sub_2C70|0-240-80-250
10192|code|ADDW            R3, R5, #0x828|5-246-40-3
10196|code|ADD.W           R1, R5, #0x820|5-245-2-97
10200|code|ADDW            R2, R5, #0x808|5-246-8-2
10204|code|STRD.W          R6, R7, [R3]|195-233-0-103
10208|code|MOVS            R3, #0|0-35
10210|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
10214|code|STR.W           R2, [R5,#(dword_148E0 - 0x140D0)]|197-248-16-40
10218|code|STR.W           R2, [R5,#(dword_148E4 - 0x140D0)]|197-248-20-40
10222|code|STR.W           R3, [R5,#(dword_148DC - 0x140D0)]|197-248-12-56
10226|code|STR.W           R3, [R5,#(dword_148E8 - 0x140D0)]|197-248-24-56
10230|code|STRD.W          R6, R7, [R1]|193-233-0-103
10234|code|BLX             wclrtobot|254-247-202-236
10238|code|BLX             refresh|254-247-110-237
10242|code|LDR             R0, [R4]; void *|32-104
10244|code|CBZ             R0, loc_280A|8-177
10246|code|BLX             _ZdlPv; operator delete(void *)|254-247-252-236
10250|code|LDR             R3, [SP,#0xBB8+var_A84]|77-155
10252|code|LDR.W           R2, [SP,#0xBB8+var_3C]|221-248-124-43
10256|code|LDR             R3, [R3]|27-104
10258|code|CMP             R2, R3|154-66
10260|code|BNE.W           loc_29AC|64-240-202-128
10264|code|ADDW            SP, SP, #0xB84|13-246-132-61
10268|code|VPOP            {D8-D9}|189-236-4-139
10272|code|POP.W           {R4-R11,PC}|189-232-240-143
10276|code|LDR             R0, =(a10s_0+4 - 0x282A); "\t"|143-72
10278|code|ADD             R0, PC; "\t" ; char *|120-68
10280|code|BLX             printw|254-247-8-237
10284|code|B               loc_25BC|198-230
10286|code|LDR             R0, =(a10s_0+4 - 0x2834); "\t"|142-72
10288|code|ADD             R0, PC; "\t" ; char *|120-68
10290|code|BLX             printw|254-247-4-237
10294|code|B               loc_256A|152-230
10296|code|LDR             R0, =(a14s - 0x2840); "%14s\t"|140-72
10298|code|LDR             R1, =(aBitsSec - 0x2842); "Bits/sec"|141-73
10300|code|ADD             R0, PC; "%14s\t"|120-68
10302|code|ADD             R1, PC; "Bits/sec"|121-68
10304|code|BLX             printw|254-247-252-236
10308|code|B               loc_25F2|213-230
10310|code|LDRH            R1, [R3,#0x12]|89-138
10312|code|UBFX.W          R3, R1, #8, #8|193-243-7-35
10316|code|ORR.W           R1, R3, R1,LSL#8|67-234-1-33
10320|code|UXTH            R1, R1|137-178
10322|code|B               loc_26B0|45-231
10324|code|LDRH.W          R1, [R3,#0x92]|179-248-146-16
10328|code|UBFX.W          R3, R1, #8, #8|193-243-7-35
10332|code|ORR.W           R1, R3, R1,LSL#8|67-234-1-33
10336|code|UXTH            R1, R1|137-178
10338|code|B               loc_271E|92-231
10340|code|LDR             R3, [R4]|35-104
10342|code|LDRB.W          R0, [R3,#0x110]; proto|147-248-16-1
10346|code|BLX             getprotobynumber|254-247-50-237
10350|code|CMP             R0, #0|0-40
10352|code|BEQ             loc_294E|109-208
10354|code|LDR             R1, [R0]|1-104
10356|code|LDR             R0, =(a10s - 0x287A); "%-10s  "|127-72
10358|code|ADD             R0, PC; "%-10s  "|120-68
10360|code|BLX             printw|254-247-224-236
10364|code|B               loc_2732|89-231
10366|code|LDR             R0, [SP,#0xBB8+var_A8C]; char *|75-152
10368|code|BLX             printw|254-247-220-236
10372|code|B               loc_2696|7-231
10374|code|LDR             R0, =(a10s_0+4 - 0x288C); "\t"|124-72
10376|code|ADD             R0, PC; "\t" ; char *|120-68
10378|code|BLX             printw|254-247-216-236
10382|code|B               loc_2702|56-231
10384|code|LDR             R3, [R4]|35-104
10386|code|LDR             R0, =(a7llu7llu - 0x289C); "%7llu\t%7llu\n"|122-72
10388|code|LDRD.W          R10, R11, [R3,#8]|211-233-2-171
10392|code|ADD             R0, PC; "%7llu\t%7llu\n"|120-68
10394|code|LDRD.W          R2, R3, [R3]|211-233-0-35
10398|code|STRD.W          R10, R11, [SP,#0xBB8+var_BB8]|205-233-0-171
10402|code|BLX             printw|254-247-204-236
10406|code|B               loc_274E|82-231
10408|code|LDR.W           R10, [R4]|212-248-0-160
10412|code|LDR             R5, =(a1403fLlu - 0x28B6); "%14.03f\t%llu\n"|116-77
10414|code|LDRD.W          R0, R1, [R10]|218-233-0-1
10418|code|ADD             R5, PC; "%14.03f\t%llu\n"|125-68
10420|code|BLX             __aeabi_ul2d|254-247-190-237
10424|code|VMOV.F64        D6, #8.0|178-238-0-107
10428|code|VLDR            S14, [R11,#4]|155-237-1-122
10432|code|LDRD.W          R2, R3, [R10,#8]|218-233-2-35
10436|code|STRD.W          R2, R3, [SP,#0xBB8+var_BB8]|205-233-0-35
10440|code|VCVT.F64.F32    D7, S14|183-238-199-122
10444|code|VMOV            D5, R0, R1|65-236-21-11
10448|code|MOV             R0, R5; char *|40-70
10450|code|VMUL.F64        D6, D5, D6|37-238-6-107
10454|code|VDIV.F64        D7, D6, D7|134-238-7-123
10458|code|VMOV            R2, R3, D7|83-236-23-43
10462|code|BLX             printw|254-247-174-236
10466|code|B               loc_274E|52-231
10468|code|LDR.W           R11, [R4]|212-248-0-176
10472|code|LDR             R5, =(unk_140D0 - 0x28F6)|102-77
10474|code|VLDR            D8, =100.0|159-237-49-139
10478|code|LDRD.W          R0, R1, [R11]|219-233-0-1
10482|code|ADD             R5, PC; unk_140D0|125-68
10484|code|BLX             __aeabi_ul2d|254-247-158-237
10488|code|ADD.W           LR, R5, #0x820|5-245-2-110
10492|code|MOV             R10, R5|170-70
10494|code|LDR             R5, =(a62f62f - 0x2904); "%6.2f%%\t%6.2f%%\n"|98-77
10496|code|ADD             R5, PC; "%6.2f%%\t%6.2f%%\n"|125-68
10498|code|VMOV            D7, R0, R1|65-236-23-11
10502|code|LDRD.W          R0, R1, [LR]|222-233-0-1
10506|code|VMUL.F64        D9, D7, D8|39-238-8-155
10510|code|BLX             __aeabi_ul2d|254-247-146-237
10514|code|VMOV            D7, R0, R1|65-236-23-11
10518|code|LDRD.W          R0, R1, [R11,#8]|219-233-2-1
10522|code|VDIV.F64        D9, D9, D7|137-238-7-155
10526|code|BLX             __aeabi_ul2d|254-247-138-237
10530|code|ADDW            R3, R10, #0x828|10-246-40-3
10534|code|VMOV            D7, R0, R1|65-236-23-11
10538|code|LDRD.W          R0, R1, [R3]|211-233-0-1
10542|code|VMUL.F64        D8, D7, D8|39-238-8-139
10546|code|BLX             __aeabi_ul2d|254-247-128-237
10550|code|VMOV            R2, R3, D9|83-236-25-43
10554|code|VMOV            D7, R0, R1|65-236-23-11
10558|code|MOV             R0, R5; char *|40-70
10560|code|VDIV.F64        D8, D8, D7|136-238-7-139
10564|code|VSTR            D8, [SP,#0xBB8+var_BB8]|141-237-0-139
10568|code|BLX             printw|254-247-120-236
10572|code|B               loc_274E|255-230
10574|code|LDR             R3, [R4]|35-104
10576|code|LDR             R0, =(a10d - 0x295A); "%10d  "|78-72
10578|code|LDRB.W          R1, [R3,#0x110]|147-248-16-17
10582|code|ADD             R0, PC; "%10d  "|120-68
10584|code|BLX             printw|254-247-112-236
10588|code|B               loc_2732|233-230
10590|code|LDR             R0, =(a10s_0 - 0x2966); "%10s\t"|76-72
10592|code|LDR             R1, =(aProto - 0x2968); "proto"|76-73
10594|code|ADD             R0, PC; "%10s\t"|120-68
10596|code|ADD             R1, PC; "proto"|121-68
10598|code|BLX             printw|254-247-106-236
10602|code|B               loc_25D8|53-230
10604|code|LDR             R0, =(aS_0 - 0x2974); "%s  "|74-72
10606|code|LDR             R1, =(aDport - 0x2976); "dport"|75-73
10608|code|ADD             R0, PC; "%s  "|120-68
10610|code|ADD             R1, PC; "dport"|121-68
10612|code|BLX             printw|254-247-98-236
10616|code|B               loc_25CA|39-230
10618|code|LDR             R0, =(aS_0 - 0x2982); "%s  "|73-72
10620|code|LDR             R1, =(aSport - 0x2984); "sport"|73-73
10622|code|ADD             R0, PC; "%s  "|120-68
10624|code|ADD             R1, PC; "sport"|121-68
10626|code|BLX             printw|254-247-92-236
10630|code|B               loc_2578|247-229
10632|code|LDR             R0, =(aBytes - 0x298E); "%% bytes\t"|71-72
10634|code|ADD             R0, PC; "%% bytes\t"|120-68
10636|code|BLX             printw|254-247-86-236
10640|code|B               loc_25F2|47-230
10642|code|LDR             R0, =(a7s - 0x299A); "%7s"|70-72
10644|code|LDR             R1, =(aBytes_0 - 0x299C); "Bytes\t"|70-73
10646|code|ADD             R0, PC; "%7s"|120-68
10648|code|ADD             R1, PC; "Bytes\t"|121-68
10650|code|BLX             printw|254-247-80-236
10654|code|B               loc_25F2|40-230
10656|code|LDR             R0, [R4]; void *|32-104
10658|code|CBZ             R0, loc_29A8|8-177
10660|code|BLX             _ZdlPv; operator delete(void *)|254-247-44-236
10664|code|BLX             __cxa_end_cleanup|254-247-116-236
10668|code|BLX             __stack_chk_fail|254-247-16-237
10672|data|DCFD 100.0|0-0-0-0-0-0-89-64
10680|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2392|54-27-1-0
10684|data|DCD __stack_chk_guard_ptr - 0x13EC8|36-1-0-0
10688|data|DCD unk_140D0 - 0x23A4|44-29-1-0
10692|data|DCD unk_140D0 - 0x23CE|2-29-1-0
10696|data|DCD dword_104|4-1-0-0
10700|data|DCD unk_140D0 - 0x24C6|10-28-1-0
10704|data|DCD byte_14008 - 0x24E0|40-27-1-0
10708|data|DCD aTotalBytes10ll - 0x2508; "Total Bytes: %10llu (%s)\tTotal Packets"...|108-13-0-0
10712|data|DCD byte_14008 - 0x252E|218-26-1-0
10716|data|DCD unk_140D0 - 0x253C|148-27-1-0
10720|data|DCD aS - 0x2542; "%*s"|98-13-0-0
10724|data|DCD aSourceIp - 0x2548; "source ip"|96-13-0-0
10728|data|DCD byte_14008 - 0x255A|174-26-1-0
10732|data|DCD asc_32B4 - 0x2568; "/"|76-13-0-0
10736|data|DCD byte_14008 - 0x2572|150-26-1-0
10740|data|DCD byte_14008 - 0x2580|136-26-1-0
10744|data|DCD unk_140D0 - 0x258E|66-27-1-0
10748|data|DCD aS - 0x2594; "%*s"|16-13-0-0
10752|data|DCD aDestIp - 0x259A; "dest ip"|46-13-0-0
10756|data|DCD byte_14008 - 0x25AC|92-26-1-0
10760|data|DCD asc_32B4 - 0x25BA; "/"|250-12-0-0
10764|data|DCD byte_14008 - 0x25C4|68-26-1-0
10768|data|DCD byte_14008 - 0x25D2|54-26-1-0
10772|data|DCD byte_14008 - 0x25E0|40-26-1-0
10776|data|DCD aPackets - 0x25FA; "Packets"|26-13-0-0
10780|data|DCD unk_140D0 - 0x262A|166-26-1-0
10784|data|DCD byte_14008 - 0x2630|216-25-1-0
10788|data|DCD aS - 0x2632; "%*s"|114-12-0-0
10792|data|DCD byte_14008 - 0x2638|208-25-1-0
10796|data|DCD a10s_0+4 - 0x263E; "\t"|158-12-0-0
10800|data|DCD asc_32B4 - 0x2644; "/"|112-12-0-0
10804|data|DCD byte_14008 - 0x269C|108-25-1-0
10808|data|DCD a5d - 0x26B6; "%-5d  "|102-12-0-0
10812|data|DCD byte_14008 - 0x26BE|74-25-1-0
10816|data|DCD unk_140D0 - 0x26CE|2-26-1-0
10820|data|DCD aS - 0x26EC; "%*s"|184-11-0-0
10824|data|DCD byte_14008 - 0x26F4|20-25-1-0
10828|data|DCD asc_32B4 - 0x2700; "/"|180-11-0-0
10832|data|DCD byte_14008 - 0x2708|0-25-1-0
10836|data|DCD a5d - 0x2724; "%-5d  "|248-11-0-0
10840|data|DCD byte_14008 - 0x272C|220-24-1-0
10844|data|DCD byte_14008 - 0x273A|206-24-1-0
10848|data|DCD unk_140D0 - 0x27C6|10-25-1-0
10852|data|DCD a10s_0+4 - 0x282A; "\t"|178-10-0-0
10856|data|DCD a10s_0+4 - 0x2834; "\t"|168-10-0-0
10860|data|DCD a14s - 0x2840; "%14s\t"|180-10-0-0
10864|data|DCD aBitsSec - 0x2842; "Bits/sec"|186-10-0-0
10868|data|DCD a10s - 0x287A; "%-10s  "|170-10-0-0
10872|data|DCD a10s_0+4 - 0x288C; "\t"|80-10-0-0
10876|data|DCD a7llu7llu - 0x289C; "%7llu\t%7llu\n"|152-10-0-0
10880|data|DCD a1403fLlu - 0x28B6; "%14.03f\t%llu\n"|142-10-0-0
10884|data|DCD unk_140D0 - 0x28F6|218-23-1-0
10888|data|DCD a62f62f - 0x2904; "%6.2f%%\t%6.2f%%\n"|80-10-0-0
10892|data|DCD a10d - 0x295A; "%10d  "|210-9-0-0
10896|data|DCD a10s_0 - 0x2966; "%10s\t"|114-9-0-0
10900|data|DCD aProto - 0x2968; "proto"|120-9-0-0
10904|data|DCD aS_0 - 0x2974; "%s  "|68-9-0-0
10908|data|DCD aDport - 0x2976; "dport"|90-9-0-0
10912|data|DCD aS_0 - 0x2982; "%s  "|54-9-0-0
10916|data|DCD aSport - 0x2984; "sport"|60-9-0-0
10920|data|DCD aBytes - 0x298E; "%% bytes\t"|122-9-0-0
10924|data|DCD a7s - 0x299A; "%7s"|78-9-0-0
10928|data|DCD aBytes_0 - 0x299C; "Bytes\t"|80-9-0-0
10932|code|NOP.W|175-243-0-128
10936|code|PUSH.W          {R4-R11,LR}|45-233-240-79
10940|code|SUB             SP, SP, #0xC|131-176
10942|code|LDR.W           R11, [R1,#8]|209-248-8-176
10946|code|ADDS            R3, R1, #4|11-29
10948|code|MOV             R7, R1|15-70
10950|code|MOV             R8, R0|128-70
10952|code|MOV             R10, R2|146-70
10954|code|STR             R3, [SP,#0x30+var_2C]|1-147
10956|code|CMP.W           R11, #0|187-241-0-15
10960|code|BEQ.W           loc_2C2A|0-240-171-128
10964|code|LDR             R5, =(byte_14008 - 0x2AE0)|96-77
10966|code|ADD.W           R9, R2, #0x80|2-241-128-9
10970|code|LDR             R6, =(byte_14008 - 0x2AE2)|96-78
10972|code|ADD             R5, PC; byte_14008|125-68
10974|code|ADD             R6, PC; byte_14008|126-68
10976|code|LDRB            R3, [R5]|43-120
10978|code|CBNZ            R3, loc_2B0C|155-185
10980|code|LDRB            R3, [R6,#(byte_14009 - 0x14008)]|115-120
10982|code|CMP             R3, #0|0-43
10984|code|BNE             loc_2B72|67-209
10986|code|LDRB.W          R4, [R10,#0x104]|154-248-4-65
10990|code|LDRB.W          R0, [R11,#0x114]|155-248-20-1
10994|code|CMP             R4, R0|132-66
10996|code|ITE CS|44-191
10998|code|MOVCS           R4, #0|0-36
11000|code|MOVCC           R4, #1|1-36
11002|code|CBZ             R4, loc_2B20|140-177
11004|code|LDR.W           R3, [R11,#8]|219-248-8-48
11008|code|MOVS            R4, #1|1-36
11010|code|CBZ             R3, loc_2B28|139-177
11012|code|MOV             R11, R3|155-70
11014|code|LDRB            R3, [R5]|43-120
11016|code|CMP             R3, #0|0-43
11018|code|BEQ             loc_2AE4|235-208
11020|code|MOV             R0, R10|80-70
11022|code|ADD.W           R1, R11, #0x10|11-241-16-1
11026|code|BL              sub_2158|255-247-33-251
11030|code|CMP             R0, #0|0-40
11032|code|BEQ             loc_2AE4|228-208
11034|code|LSRS            R4, R0, #0x1F|196-15
11036|code|CMP             R4, #0|0-44
11038|code|BNE             loc_2AFC|237-209
11040|code|LDR.W           R3, [R11,#0xC]|219-248-12-48
11044|code|CMP             R3, #0|0-43
11046|code|BNE             loc_2B04|237-209
11048|code|CMP             R4, #0|0-44
11050|code|BEQ             loc_2BC4|75-208
11052|code|LDR             R3, [R7,#0xC]|251-104
11054|code|CMP             R3, R11|91-69
11056|code|BEQ             loc_2B8A|43-208
11058|code|MOV             R0, R11|88-70
11060|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|254-247-142-235
11064|code|MOV             R4, R0|4-70
11066|code|LDR             R3, =(byte_14008 - 0x2B40)|73-75
11068|code|ADD             R3, PC; byte_14008|123-68
11070|code|LDRB            R3, [R3]|27-120
11072|code|CMP             R3, #0|0-43
11074|code|BNE             loc_2BC8|65-209
11076|code|LDR             R3, =(byte_14008 - 0x2B4A)|71-75
11078|code|ADD             R3, PC; byte_14008|123-68
11080|code|LDRB            R3, [R3,#(byte_14009 - 0x14008)]|91-120
11082|code|CMP             R3, #0|0-43
11084|code|BNE             loc_2BDA|69-209
11086|code|LDRB.W          R3, [R4,#0x114]|148-248-20-49
11090|code|LDRB.W          R1, [R10,#0x104]|154-248-4-17
11094|code|CMP             R3, R1|139-66
11096|code|ITE CS|44-191
11098|code|MOVCS           R3, #0|0-35
11100|code|MOVCC           R3, #1|1-35
11102|code|CBNZ            R3, loc_2B84|139-185
11104|code|MOVS            R3, #0|0-35
11106|code|MOV             R0, R8|64-70
11108|code|STR.W           R4, [R8]|200-248-0-64
11112|code|STRB.W          R3, [R8,#4]|136-248-4-48
11116|code|ADD             SP, SP, #0xC|3-176
11118|code|POP.W           {R4-R11,PC}|189-232-240-143
11122|code|MOV             R0, R9|72-70
11124|code|ADD.W           R1, R11, #0x90|11-241-144-1
11128|code|BL              sub_2158|255-247-238-250
11132|code|CMP             R0, #0|0-40
11134|code|BEQ             loc_2AEA|180-208
11136|code|LSRS            R4, R0, #0x1F|196-15
11138|code|B               loc_2B1C|203-231
11140|code|CMP.W           R11, #0|187-241-0-15
11144|code|BEQ             loc_2C54|100-208
11146|code|LDR             R3, [SP,#0x30+var_2C]|1-155
11148|code|CMP             R3, R11|91-69
11150|code|BEQ             loc_2BEC|45-208
11152|code|LDR             R3, =(byte_14008 - 0x2B96)|53-75
11154|code|ADD             R3, PC; byte_14008|123-68
11156|code|LDRB            R3, [R3]|27-120
11158|code|CMP             R3, #0|0-43
11160|code|BNE             loc_2C30|74-209
11162|code|LDR             R3, =(byte_14008 - 0x2BA0)|52-75
11164|code|ADD             R3, PC; byte_14008|123-68
11166|code|LDRB            R3, [R3,#(byte_14009 - 0x14008)]|91-120
11168|code|CMP             R3, #0|0-43
11170|code|BNE             loc_2C42|78-209
11172|code|LDRB.W          R5, [R11,#0x114]|155-248-20-81
11176|code|LDRB.W          R3, [R10,#0x104]|154-248-4-49
11180|code|CMP             R3, R5|171-66
11182|code|ITE CS|44-191
11184|code|MOVCS           R5, #0|0-37
11186|code|MOVCC           R5, #1|1-37
11188|code|CBZ             R5, loc_2BEE|221-177
11190|code|MOV.W           R0, #0x128; unsigned int|79-244-148-112
11194|code|MOVS            R5, #1|1-37
11196|code|BLX             _Znwj; operator new(uint)|254-247-208-235
11200|code|MOV             R4, R0|4-70
11202|code|B               loc_2BF8|25-224
11204|code|MOV             R4, R11|92-70
11206|code|B               loc_2B3A|184-231
11208|code|ADD.W           R0, R4, #0x10|4-241-16-0
11212|code|MOV             R1, R10|81-70
11214|code|BL              sub_2158|255-247-195-250
11218|code|CMP             R0, #0|0-40
11220|code|BEQ             loc_2B44|182-208
11222|code|LSRS            R3, R0, #0x1F|195-15
11224|code|B               loc_2B5E|193-231
11226|code|ADD.W           R0, R4, #0x90|4-241-144-0
11230|code|ADD.W           R1, R10, #0x80|10-241-128-1
11234|code|BL              sub_2158|255-247-185-250
11238|code|CMP             R0, #0|0-40
11240|code|BEQ             loc_2B4E|177-208
11242|code|B               loc_2BD6|244-231
11244|code|MOVS            R5, #1|1-37
11246|code|MOV.W           R0, #0x128; unsigned int|79-244-148-112
11250|code|BLX             _Znwj; operator new(uint)|254-247-182-235
11254|code|MOV             R4, R0|4-70
11256|code|MOV             R1, R10; src|81-70
11258|code|ADD.W           R0, R4, #0x10; dest|4-241-16-0
11262|code|MOV.W           R2, #0x118; n|79-244-140-114
11266|code|BLX             memcpy|254-247-132-235
11270|code|MOV             R0, R5|40-70
11272|code|MOV             R2, R11|90-70
11274|code|LDR             R3, [SP,#0x30+var_2C]|1-155
11276|code|MOV             R1, R4|33-70
11278|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|254-247-212-235
11282|code|LDR             R3, [R7,#0x14]|123-105
11284|code|MOVS            R2, #1|1-34
11286|code|MOV             R0, R8|64-70
11288|code|ADD             R3, R2|19-68
11290|code|STR.W           R4, [R8]|200-248-0-64
11294|code|STRB.W          R2, [R8,#4]|136-248-4-32
11298|code|STR             R3, [R7,#0x14]|123-97
11300|code|ADD             SP, SP, #0xC|3-176
11302|code|POP.W           {R4-R11,PC}|189-232-240-143
11306|code|LDR.W           R11, [SP,#0x30+var_2C]|221-248-4-176
11310|code|B               loc_2B2C|125-231
11312|code|MOV             R0, R10|80-70
11314|code|ADD.W           R1, R11, #0x10|11-241-16-1
11318|code|BL              sub_2158|255-247-143-250
11322|code|CMP             R0, #0|0-40
11324|code|BEQ             loc_2B9A|173-208
11326|code|LSRS            R5, R0, #0x1F|197-15
11328|code|B               loc_2BB4|184-231
11330|code|ADD.W           R0, R10, #0x80|10-241-128-0
11334|code|ADD.W           R1, R11, #0x90|11-241-144-1
11338|code|BL              sub_2158|255-247-133-250
11342|code|CMP             R0, #0|0-40
11344|code|BEQ             loc_2BA4|168-208
11346|code|B               loc_2C3E|244-231
11348|code|MOV             R4, R11|92-70
11350|code|B               loc_2B60|131-231
11352|data|DCD byte_14008 - 0x2AE0|40-21-1-0
11356|data|DCD byte_14008 - 0x2AE2|38-21-1-0
11360|data|DCD byte_14008 - 0x2B40|200-20-1-0
11364|data|DCD byte_14008 - 0x2B4A|190-20-1-0
11368|data|DCD byte_14008 - 0x2B96|114-20-1-0
11372|data|DCD byte_14008 - 0x2BA0|104-20-1-0
11376|code|PUSH            {R4-R6,LR}|112-181
11378|code|MOV             R6, R0|6-70
11380|code|MOV             R4, R1|12-70
11382|code|CBZ             R1, locret_2C8E|81-177
11384|code|LDR             R1, [R4,#0xC]|225-104
11386|code|MOV             R0, R6|48-70
11388|code|BL              sub_2C70|255-247-248-255
11392|code|LDR             R5, [R4,#8]|165-104
11394|code|MOV             R0, R4; void *|32-70
11396|code|BLX             _ZdlPv; operator delete(void *)|254-247-188-234
11400|code|MOV             R4, R5|44-70
11402|code|CMP             R5, #0|0-45
11404|code|BNE             loc_2C78|244-209
11406|code|POP             {R4-R6,PC}|112-189
11408|code|PUSH            {R4,LR}|16-181
11410|code|MOV             R4, R0|4-70
11412|code|LDR             R1, [R0,#8]|129-104
11414|code|BL              sub_2C70|255-247-235-255
11418|code|MOV             R0, R4|32-70
11420|code|POP             {R4,PC}|16-189
11422|data|ALIGN 0x10|0-191
11424|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2CAE)|79-75
11426|code|PUSH.W          {R4-R10,LR}|45-233-240-71
11430|code|MOV             R5, R0|5-70
11432|code|LDR             R0, =(__stack_chk_guard_ptr - 0x13EC8)|78-72
11434|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11436|code|LDR             R4, [R5,#4]|108-104
11438|code|MOV             R8, R2|144-70
11440|code|LDR             R2, [R5,#8]|170-104
11442|code|SUB             SP, SP, #0x120|200-176
11444|code|LDR             R7, [R3,R0]; __stack_chk_guard|31-88
11446|code|MOV             R6, R1|14-70
11448|code|CMP             R4, R2|148-66
11450|code|LDR             R3, [R7]|59-104
11452|code|STR             R3, [SP,#0x140+var_24]|71-147
11454|code|BEQ             loc_2D1E|46-208
11456|code|CBZ             R4, loc_2CD2|60-177
11458|code|MOV             R0, R4; dest|32-70
11460|code|SUB.W           R1, R4, #0x118; src|164-245-140-113
11464|code|MOV.W           R2, #0x118; n|79-244-140-114
11468|code|BLX             memcpy|254-247-30-235
11472|code|LDR             R4, [R5,#4]|108-104
11474|code|ADD.W           R3, R4, #0x118|4-245-140-115
11478|code|MOV             R1, R8; src|65-70
11480|code|MOV.W           R2, #0x118; n|79-244-140-114
11484|code|STR             R3, [R5,#4]|107-96
11486|code|MOV             R0, SP; dest|104-70
11488|code|MOV             R9, SP|233-70
11490|code|BLX             memcpy|254-247-20-235
11494|code|SUB.W           R2, R4, #0x118|164-245-140-114
11498|code|SUBS            R2, R2, R6; n|146-27
11500|code|MOV             R3, #0x8AF8AF8B|74-246-139-115-200-246-248-35
11508|code|ASRS            R1, R2, #3|209-16
11510|code|MUL.W           R3, R3, R1|3-251-1-243
11514|code|CBZ             R3, loc_2D04|27-177
11516|code|SUBS            R0, R4, R2; dest|160-26
11518|code|MOV             R1, R6; src|49-70
11520|code|BLX             memmove|254-247-114-235
11524|code|MOV             R0, R6; dest|48-70
11526|code|MOV             R1, R9; src|73-70
11528|code|MOV.W           R2, #0x118; n|79-244-140-114
11532|code|BLX             memcpy|254-247-254-234
11536|code|LDR             R2, [SP,#0x140+var_24]|71-154
11538|code|LDR             R3, [R7]|59-104
11540|code|CMP             R2, R3|154-66
11542|code|BNE             loc_2DBE|82-209
11544|code|ADD             SP, SP, #0x120|72-176
11546|code|POP.W           {R4-R10,PC}|189-232-240-135
11550|code|LDR             R0, [R5]|40-104
11552|code|MOV             R3, #0x8AF8AF8B|74-246-139-115-200-246-248-35
11560|code|SUBS            R4, R4, R0|36-26
11562|code|ASRS            R4, R4, #3|228-16
11564|code|MUL.W           R4, R3, R4|3-251-4-244
11568|code|CBZ             R4, loc_2DA0|180-179
11570|code|LSLS            R3, R4, #1|99-0
11572|code|CMP             R4, R3|156-66
11574|code|BLS             loc_2DC2|68-217
11576|code|SUBS            R4, R6, R0|52-26
11578|code|MOV             R9, #0xFFFFFF00|111-240-255-9
11582|code|MOV             R0, R9; unsigned int|72-70
11584|code|BLX             _Znwj; operator new(uint)|254-247-14-235
11588|code|MOV             R10, R0|130-70
11590|code|ADDS.W          R0, R10, R4; dest|26-235-4-0
11594|code|BEQ             loc_2D56|4-208
11596|code|MOV             R1, R8; src|65-70
11598|code|MOV.W           R2, #0x118; n|79-244-140-114
11602|code|BLX             memcpy|254-247-220-234
11606|code|LDR             R1, [R5]; src|41-104
11608|code|MOV             R3, #0x8AF8AF8B|74-246-139-115-200-246-248-35
11616|code|RSB.W           R8, R1, R6|193-235-6-8
11620|code|MOV.W           R2, R8,ASR#3|79-234-232-2
11624|code|MUL.W           R3, R3, R2|3-251-2-243
11628|code|CBNZ            R3, loc_2DB4|19-187
11630|code|LDR             R4, [R5,#4]|108-104
11632|code|MOV             R3, #0x8AF8AF8B|74-246-139-115-200-246-248-35
11640|code|ADD.W           R8, R8, #0x118|8-245-140-120
11644|code|SUBS            R4, R4, R6|164-27
11646|code|ADD             R8, R10|208-68
11648|code|ASRS            R2, R4, #3|226-16
11650|code|MUL.W           R3, R3, R2|3-251-2-243
11654|code|CBNZ            R3, loc_2DA8|123-185
11656|code|LDR             R0, [R5]; void *|40-104
11658|code|ADD             R4, R8|68-68
11660|code|CBZ             R0, loc_2D92|8-177
11662|code|BLX             _ZdlPv; operator delete(void *)|254-247-56-234
11666|code|ADD.W           R3, R10, R9|10-235-9-3
11670|code|STR.W           R10, [R5]|197-248-0-160
11674|code|STR             R3, [R5,#8]|171-96
11676|code|STR             R4, [R5,#4]|108-96
11678|code|B               loc_2D10|183-231
11680|code|SUBS            R4, R1, R0|12-26
11682|code|MOV.W           R9, #0x118|79-244-140-121
11686|code|B               loc_2D3E|202-231
11688|code|MOV             R1, R6; src|49-70
11690|code|MOV             R0, R8; dest|64-70
11692|code|MOV             R2, R4; n|34-70
11694|code|BLX             memmove|254-247-28-235
11698|code|B               loc_2D88|233-231
11700|code|MOV             R0, R10; dest|80-70
11702|code|MOV             R2, R8; n|66-70
11704|code|BLX             memmove|254-247-22-235
11708|code|B               loc_2D6E|215-231
11710|code|BLX             __stack_chk_fail|254-247-8-235
11714|code|MOV             R2, #0xEA0EA0|79-244-106-98-192-242-234-2
11722|code|CMP             R3, R2|147-66
11724|code|BHI             loc_2D38|180-216
11726|code|MOV.W           R9, #0x118|79-244-140-121
11730|code|SUBS            R4, R1, R0|12-26
11732|code|MUL.W           R9, R9, R3|9-251-3-249
11736|code|MOV             R10, R3|154-70
11738|code|CMP             R3, #0|0-43
11740|code|BEQ             loc_2D46|179-208
11742|code|B               loc_2D3E|174-231
11744|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2CAE|26-18-1-0
11748|data|DCD __stack_chk_guard_ptr - 0x13EC8|36-1-0-0
11752|code|CMP             R1, R2|145-66
11754|code|PUSH.W          {R3-R11,LR}|45-233-248-79
11758|code|MOV             R10, R0|130-70
11760|code|MOV             LR, R1|142-70
11762|code|MOV             R11, R2|147-70
11764|code|BGT             loc_2E10|12-220
11766|code|ADD.W           LR, R1, R1,LSL#2|1-235-129-14
11770|code|MOV.W           R2, #0x118; n|79-244-140-114
11774|code|ADD             R1, SP, #0x28+src; src|10-169
11776|code|RSB.W           LR, LR, LR,LSL#3|206-235-206-14
11780|code|ADD.W           R0, R0, LR,LSL#3; dest|0-235-206-0
11784|code|BLX             memcpy|254-247-128-234
11788|code|POP.W           {R3-R11,PC}|189-232-248-143
11792|code|ADD.W           R9, R1, #0xFFFFFFFF|1-241-255-57
11796|code|LDRD.W          R4, R5, [SP,#0x28+src]|221-233-10-69
11800|code|ADD.W           R9, R9, R9,LSR#31|9-235-217-121
11804|code|MOV.W           R9, R9,ASR#1|79-234-105-9
11808|code|ADD.W           R8, R9, R9,LSL#2|9-235-137-8
11812|code|RSB.W           R8, R8, R8,LSL#3|200-235-200-8
11816|code|ADD.W           R8, R10, R8,LSL#3|10-235-200-8
11820|code|LDRD.W          R2, R3, [R8]|216-233-0-35
11824|code|CMP             R3, R5|171-66
11826|code|IT EQ|8-191
11828|code|CMPEQ           R2, R4|162-66
11830|code|ITE CC|52-191
11832|code|MOVCC           R3, #1|1-35
11834|code|MOVCS           R3, #0|0-35
11836|code|BNE             loc_2E52|9-209
11838|code|LDRD.W          R2, R3, [SP,#0x28+arg_8]|221-233-12-35
11842|code|LDRD.W          R6, R7, [R8,#8]|216-233-2-103
11846|code|CMP             R7, R3|159-66
11848|code|IT EQ|8-191
11850|code|CMPEQ           R6, R2|150-66
11852|code|ITE CC|52-191
11854|code|MOVCC           R3, #1|1-35
11856|code|MOVCS           R3, #0|0-35
11858|code|ADD.W           R0, LR, LR,LSL#2|14-235-142-0
11862|code|MOV             R1, R8; src|65-70
11864|code|MOV.W           R2, #0x118; n|79-244-140-114
11868|code|CBNZ            R3, loc_2E74|83-185
11870|code|RSB.W           LR, R0, R0,LSL#3|192-235-192-14
11874|code|ADD             R1, SP, #0x28+src; src|10-169
11876|code|MOV.W           R2, #0x118; n|79-244-140-114
11880|code|ADD.W           R0, R10, LR,LSL#3; dest|10-235-206-0
11884|code|BLX             memcpy|254-247-78-234
11888|code|POP.W           {R3-R11,PC}|189-232-248-143
11892|code|RSB.W           R0, R0, R0,LSL#3|192-235-192-0
11896|code|ADD.W           R0, R10, R0,LSL#3; dest|10-235-192-0
11900|code|BLX             memcpy|254-247-70-234
11904|code|ADD.W           R3, R9, #0xFFFFFFFF|9-241-255-51
11908|code|CMP             R11, R9|203-69
11910|code|MOV             LR, R9|206-70
11912|code|ADD.W           R3, R3, R3,LSR#31|3-235-211-115
11916|code|MOV.W           R3, R3,ASR#1|79-234-99-3
11920|code|MOV             R9, R3|153-70
11922|code|BLT             loc_2E20|197-219
11924|code|MOV             R0, R8; dest|64-70
11926|code|ADD             R1, SP, #0x28+src; src|10-169
11928|code|MOV.W           R2, #0x118; n|79-244-140-114
11932|code|BLX             memcpy|254-247-54-234
11936|code|POP.W           {R3-R11,PC}|189-232-248-143
11940|code|PUSH.W          {R4-R10,LR}|45-233-240-71
11944|code|ADD.W           R8, R2, #0xFFFFFFFF|2-241-255-56
11948|code|SUB             SP, SP, #0x120|200-176
11950|code|MOV             R10, R2|146-70
11952|code|ADD.W           R8, R8, R8,LSR#31|8-235-216-120
11956|code|MOV             R5, R0|5-70
11958|code|MOV             R9, R1|137-70
11960|code|MOV.W           R8, R8,ASR#1|79-234-104-8
11964|code|CMP             R1, R8|65-69
11966|code|BGE             loc_2F8C|101-218
11968|code|MOV             R0, R1|8-70
11970|code|ADDS            R1, R0, #1|65-28
11972|code|LSLS            R4, R1, #1|76-0
11974|code|ADD.W           R12, R4, #0xFFFFFFFF|4-241-255-60
11978|code|ADD.W           R1, R4, R1,LSL#3|4-235-193-1
11982|code|ADD.W           LR, R12, R12,LSL#2|12-235-140-14
11986|code|RSB.W           R1, R1, R1,LSL#3|193-235-193-1
11990|code|RSB.W           LR, LR, LR,LSL#3|206-235-206-14
11994|code|ADD.W           R1, R5, R1,LSL#3|5-235-193-1
11998|code|ADD.W           LR, R5, LR,LSL#3|5-235-206-14
12002|code|LDRD.W          R6, R7, [R1]|209-233-0-103
12006|code|LDRD.W          R2, R3, [LR]|222-233-0-35
12010|code|CMP             R7, R3|159-66
12012|code|IT EQ|8-191
12014|code|CMPEQ           R6, R2|150-66
12016|code|ITE CC|52-191
12018|code|MOVCC           R3, #1|1-35
12020|code|MOVCS           R3, #0|0-35
12022|code|BEQ             loc_2F50|43-208
12024|code|CBZ             R3, loc_2EFE|11-177
12026|code|MOV             R1, LR; src|113-70
12028|code|MOV             R4, R12|100-70
12030|code|ADD.W           R0, R0, R0,LSL#2|0-235-128-0
12034|code|MOV.W           R2, #0x118; n|79-244-140-114
12038|code|RSB.W           R0, R0, R0,LSL#3|192-235-192-0
12042|code|ADD.W           R0, R5, R0,LSL#3; dest|5-235-192-0
12046|code|BLX             memcpy|254-247-254-233
12050|code|CMP             R4, R8|68-69
12052|code|MOV             R0, R4|32-70
12054|code|BLT             loc_2EC2|212-219
12056|code|TST.W           R10, #1|26-240-1-15
12060|code|BNE             loc_2F2C|6-209
12062|code|SUB.W           R10, R10, #2|170-241-2-10
12066|code|ADD.W           R10, R10, R10,LSR#31|10-235-218-122
12070|code|CMP.W           R4, R10,ASR#1|180-235-106-15
12074|code|BEQ             loc_2F66|28-208
12076|code|ADD             R1, SP, #0x140+src; src|80-169
12078|code|MOV             R0, SP; dest|104-70
12080|code|MOV.W           R2, #0x118; n|79-244-140-114
12084|code|BLX             memcpy|254-247-234-233
12088|code|MOV.W           R3, #0|79-240-0-3
12092|code|MOV             R0, R5; src|40-70
12094|code|MOV             R1, R4; int|33-70
12096|code|MOV             R2, R9; char|74-70
12098|code|STRB.W          R3, [SP,#0x140+var_28]|141-248-24-49
12102|code|BL              sub_2DE8|255-247-79-255
12106|code|ADD             SP, SP, #0x120|72-176
12108|code|POP.W           {R4-R10,PC}|189-232-240-135
12112|code|LDRD.W          R2, R3, [LR,#8]|222-233-2-35
12116|code|LDRD.W          R6, R7, [R1,#8]|209-233-2-103
12120|code|CMP             R7, R3|159-66
12122|code|IT EQ|8-191
12124|code|CMPEQ           R6, R2|150-66
12126|code|ITE CC|52-191
12128|code|MOVCC           R3, #1|1-35
12130|code|MOVCS           R3, #0|0-35
12132|code|B               loc_2EF8|200-231
12134|code|LSLS            R3, R4, #1|99-0
12136|code|ADD.W           R0, R4, R4,LSL#2|4-235-132-0
12140|code|ADDS            R4, R3, #1|92-28
12142|code|MOV.W           R2, #0x118; n|79-244-140-114
12146|code|RSB.W           R0, R0, R0,LSL#3|192-235-192-0
12150|code|ADD.W           R1, R4, R4,LSL#2|4-235-132-1
12154|code|ADD.W           R0, R5, R0,LSL#3; dest|5-235-192-0
12158|code|RSB.W           R1, R1, R1,LSL#3|193-235-193-1
12162|code|ADD.W           R1, R5, R1,LSL#3; src|5-235-193-1
12166|code|BLX             memcpy|254-247-194-233
12170|code|B               loc_2F2C|207-231
12172|code|MOV             R4, R1|12-70
12174|code|B               loc_2F18|195-231
12176|code|PUSH.W          {R3-R9,LR}|45-233-248-67
12180|code|MOV             R7, R0|7-70
12182|code|LDR             R6, =(off_13D88 - 0x2FA2)|12-78
12184|code|MOV             R8, R1|136-70
12186|code|LDR             R5, =(off_13D80 - 0x2FA8)|12-77
12188|code|MOV             R9, R2|145-70
12190|code|ADD             R6, PC; off_13D88|126-68
12192|code|BLX             .init_proc|254-247-218-232
12196|code|ADD             R5, PC; off_13D80|125-68
12198|code|SUBS            R6, R6, R5|118-27
12200|code|ASRS            R6, R6, #2|182-16
12202|code|BEQ             locret_2FC2|10-208
12204|code|SUBS            R5, #4|4-61
12206|code|MOVS            R4, #0|0-36
12208|code|ADDS            R4, #1|1-52
12210|code|LDR.W           R3, [R5,#4]!|85-248-4-63
12214|code|MOV             R0, R7|56-70
12216|code|MOV             R1, R8|65-70
12218|code|MOV             R2, R9|74-70
12220|code|BLX             R3|152-71
12222|code|CMP             R4, R6|180-66
12224|code|BNE             loc_2FB0|246-209
12226|code|POP.W           {R3-R9,PC}|189-232-248-131
12230|data|ALIGN 4|0-191
12232|data|DCD off_13D88 - 0x2FA2|230-13-1-0
12236|data|DCD off_13D80 - 0x2FA8|216-13-1-0
12240|code|BX              LR|112-71
12242|data|ALIGN 4|0-191
12244|code|PUSH            {R3,LR}; _fini|8-64-45-233
12248|code|POP             {R3,PC}|8-128-189-232
81280|data|DCD sub_1F30+1|49-31-0-0
81284|data|DCD sub_1DD8+1|217-29-0-0
81288|data|DCD sub_1EF0+1|241-30-0-0
81292|data|DCD 0|0-0-0-0
81296|data|Elf32_Dyn <1, <1>>; DT_NEEDED libtrace.so.3|1-0-0-0-1-0-0-0
81304|data|Elf32_Dyn <1, <0x1A0>>; DT_NEEDED libwandio.so.1|1-0-0-0-160-1-0-0
81312|data|Elf32_Dyn <1, <0x1AF>>; DT_NEEDED libncurses.so.5|1-0-0-0-175-1-0-0
81320|data|Elf32_Dyn <1, <0x20D>>; DT_NEEDED libtinfo.so.5|1-0-0-0-13-2-0-0
81328|data|Elf32_Dyn <1, <0x21B>>; DT_NEEDED libstdc++.so.6|1-0-0-0-27-2-0-0
81336|data|Elf32_Dyn <1, <0x310>>; DT_NEEDED libm.so.6|1-0-0-0-16-3-0-0
81344|data|Elf32_Dyn <1, <0x31A>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-26-3-0-0
81352|data|Elf32_Dyn <1, <0x370>>; DT_NEEDED libc.so.6|1-0-0-0-112-3-0-0
81360|data|Elf32_Dyn <1, <0x47F>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-127-4-0-0
81368|data|Elf32_Dyn <0xC, <0x1158>>; DT_INIT|12-0-0-0-88-17-0-0
81376|data|Elf32_Dyn <0xD, <0x2FD4>>; DT_FINI|13-0-0-0-212-47-0-0
81384|data|Elf32_Dyn <0x19, <0x13D80>>; DT_INIT_ARRAY|25-0-0-0-128-61-1-0
81392|data|Elf32_Dyn <0x1B, <8>>; DT_INIT_ARRAYSZ|27-0-0-0-8-0-0-0
81400|data|Elf32_Dyn <0x1A, <0x13D88>>; DT_FINI_ARRAY|26-0-0-0-136-61-1-0
81408|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
81416|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
81424|data|Elf32_Dyn <5, <0x798>>; DT_STRTAB|5-0-0-0-152-7-0-0
81432|data|Elf32_Dyn <6, <0x218>>; DT_SYMTAB|6-0-0-0-24-2-0-0
81440|data|Elf32_Dyn <0xA, <0x597>>; DT_STRSZ|10-0-0-0-151-5-0-0
81448|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
81456|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
81464|data|Elf32_Dyn <3, <0x13EC8>>; DT_PLTGOT|3-0-0-0-200-62-1-0
81472|data|Elf32_Dyn <2, <0x1E8>>; DT_PLTRELSZ|2-0-0-0-232-1-0-0
81480|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
81488|data|Elf32_Dyn <0x17, <0xF70>>; DT_JMPREL|23-0-0-0-112-15-0-0
81496|data|Elf32_Dyn <0x11, <0xE90>>; DT_REL|17-0-0-0-144-14-0-0
81504|data|Elf32_Dyn <0x12, <0xE0>>; DT_RELSZ|18-0-0-0-224-0-0-0
81512|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
81520|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
81528|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
81536|data|Elf32_Dyn <0x6FFFFFFE, <0xDE0>>; DT_VERNEED|254-255-255-111-224-13-0-0
81544|data|Elf32_Dyn <0x6FFFFFFF, <4>>; DT_VERNEEDNUM|255-255-255-111-4-0-0-0
81552|data|Elf32_Dyn <0x6FFFFFF0, <0xD30>>; DT_VERSYM|240-255-255-111-48-13-0-0
81560|data|Elf32_Dyn <0x6FFFFFFA, <0x12>>; DT_RELCOUNT|250-255-255-111-18-0-0-0
81568|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
81608|data|DCD stru_13D90|144-61-1-0
81612|data|DCD 0|0-0-0-0
81616|data|DCD dword_0|0-0-0-0
81620|data|DCD __imp_getnameinfo|20-73-1-0
81624|data|DCD __imp_trace_create_filter|24-73-1-0
81628|data|DCD __imp_wclrtobot|28-73-1-0
81632|data|DCD __imp___aeabi_ul2f|32-73-1-0
81636|data|DCD __imp_trace_get_wire_length|36-73-1-0
81640|data|DCD __imp_abort|40-73-1-0
81644|data|DCD __imp_trace_perror|44-73-1-0
81648|data|DCD __imp_trace_ether_ntoa|48-73-1-0
81652|data|DCD __imp_memcmp|56-73-1-0
81656|data|DCD __imp___libc_start_main|60-73-1-0
81660|data|DCD __imp___gmon_start__|32-74-1-0
81664|data|DCD __imp__ZdlPv; operator delete(void *)|68-73-1-0
81668|data|DCD __imp_endwin|72-73-1-0
81672|data|DCD __imp_strncpy|76-73-1-0
81676|data|DCD __imp_trace_help|80-73-1-0
81680|data|DCD __imp_strtod|84-73-1-0
81684|data|DCD __imp_printw|88-73-1-0
81688|data|DCD __imp_trace_is_err|92-73-1-0
81692|data|DCD __imp__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|96-73-1-0
81696|data|DCD __imp_trace_read_packet|100-73-1-0
81700|data|DCD __imp_memset|104-73-1-0
81704|data|DCD __imp_gai_strerror|108-73-1-0
81708|data|DCD __imp_trace_start|112-73-1-0
81712|data|DCD __imp___cxa_end_cleanup|116-73-1-0
81716|data|DCD __imp_trace_create_packet|120-73-1-0
81720|data|DCD __imp_initscr|124-73-1-0
81724|data|DCD __imp_wclrtoeol|128-73-1-0
81728|data|DCD __imp_getopt_long|136-73-1-0
81732|data|DCD __imp_getprotobynumber|140-73-1-0
81736|data|DCD __imp_refresh|144-73-1-0
81740|data|DCD __imp_setprotoent|148-73-1-0
81744|data|DCD __imp_trace_destroy|152-73-1-0
81748|data|DCD __imp__ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|156-73-1-0
81752|data|DCD __imp_memcpy|160-73-1-0
81756|data|DCD __imp_strtol|164-73-1-0
81760|data|DCD __imp_cbreak|168-73-1-0
81764|data|DCD __imp_trace_config|176-73-1-0
81768|data|DCD __imp_endprotoent|180-73-1-0
81772|data|DCD __imp___snprintf_chk|184-73-1-0
81776|data|DCD __imp_move|188-73-1-0
81780|data|DCD __imp__Znwj; operator new(uint)|192-73-1-0
81784|data|DCD __imp_select|196-73-1-0
81788|data|DCD __imp_wgetch|200-73-1-0
81792|data|DCD __imp_trace_event|204-73-1-0
81796|data|DCD __imp_fwrite|208-73-1-0
81800|data|DCD __imp_trace_get_seconds|212-73-1-0
81804|data|DCD __imp_trace_get_destination_address|216-73-1-0
81808|data|DCD __imp__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|220-73-1-0
81812|data|DCD __imp_trace_create|224-73-1-0
81816|data|DCD __imp___stack_chk_fail|228-73-1-0
81820|data|DCD __imp___fprintf_chk|232-73-1-0
81824|data|DCD __imp_memmove|236-73-1-0
81828|data|DCD __imp___aeabi_atexit|240-73-1-0
81832|data|DCD __imp_trace_get_source_address|244-73-1-0
81836|data|DCD __imp_trace_destroy_packet|252-73-1-0
81840|data|DCD __imp_trace_get_transport|4-74-1-0
81844|data|DCD __imp___gxx_personality_v0|8-74-1-0
81848|data|DCD __imp___aeabi_ul2d|12-74-1-0
81852|data|DCD __imp_noecho|20-74-1-0
81856|data|DCD __imp___cxa_finalize|24-74-1-0
81860|data|DCD __imp___fdelt_chk|28-74-1-0
81864|data|DCD __libc_csu_fini+1|209-47-0-0
81868|data|DCD stdscr|52-73-1-0
81872|data|DCD __imp___gmon_start__|32-74-1-0
81876|data|DCD _Jv_RegisterClasses|36-74-1-0
81880|data|DCD _ITM_deregisterTMCloneTable|40-74-1-0
81884|data|DCD _ZNSt3mapI9flowkey_t10flowdata_tSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev+1; std::map<flowkey_t,flowdata_t,std::less<flowkey_t>,std::allocator<std::pair<flowkey_t const,flowdata_t>>>::~map()|145-44-0-0
81888|data|DCD optind|132-73-1-0
81892|data|DCD _ITM_registerTMCloneTable|44-74-1-0
81896|data|DCD __libc_csu_init+1|145-47-0-0
81900|data|DCD __stack_chk_guard|172-73-1-0
81904|data|DCD stderr|248-73-1-0
81908|data|DCD optarg|0-74-1-0
81912|data|DCD __imp___cxa_finalize|24-74-1-0
81916|data|DCD main+1|105-20-0-0
82120|data|% 1; Alternative name is '__bss_start'|255
82121|data|ALIGN 0x10|255-255-255-255-255-255-255
84184|data|% 4|255-255-255-255
84188|data|% 4|255-255-255-255
84192|data|% 4|255-255-255-255
84196|data|% 4|255-255-255-255
84200|data|% 4|255-255-255-255
84204|data|ALIGN 0x20|255-255-255-255-255-255-255-255-255-255-255-255-255-255-255-255-255-255-255-255
84224|data|% 1|255
84225|data|% 1|255
84226|data|% 1|255
