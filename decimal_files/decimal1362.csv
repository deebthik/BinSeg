address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|225-44-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x8140; SHT file offset|64-129-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x6EBC; File offset|188-110-0-0
60|data|DCD unk_6EBC; Virtual address|188-110-0-0
64|data|DCD 0x6EBC; Physical address|188-110-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x6EC8; Size in file image|200-110-0-0
168|data|DCD 0x6EC8; Size in memory image|200-110-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x7DBC; File offset|188-125-0-0
188|data|DCD off_17DBC; Virtual address|188-125-1-0
192|data|DCD 0x17DBC; Physical address|188-125-1-0
196|data|DCD 0x25C; Size in file image|92-2-0-0
200|data|DCD 0x454; Size in memory image|84-4-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x7DC8; File offset|200-125-0-0
220|data|DCD stru_17DC8; Virtual address|200-125-1-0
224|data|DCD 0x17DC8; Physical address|200-125-1-0
228|data|DCD 0x110; Size in file image|16-1-0-0
232|data|DCD 0x110; Size in memory image|16-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x7DBC; File offset|188-125-0-0
316|data|DCD off_17DBC; Virtual address|188-125-1-0
320|data|DCD 0x17DBC; Physical address|188-125-1-0
324|data|DCD 0x244; Size in file image|68-2-0-0
328|data|DCD 0x244; Size in memory image|68-2-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x9B, 0xF4, 0xE5, 0xC, 0x81, 0x2C, 0x35, 0x43, 0x6D; Desc|155-244-229-12-129-44-53-67-109-165-99-152-200-26-242-201-149-39-207-43
436|data|DCD 3|3-0-0-0
440|data|DCD 0x45|69-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x45, 0x49, 0x4E|69-0-0-0-73-0-0-0-78-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_734 - byte_734, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_734 - byte_734, dword_17DC4, 0, 3, 0, 0x14>|0-0-0-0-196-125-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aPthreadMutexUn - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aRaise - byte_734, dword_0, 0, 0x12, 0, 0>; "raise"|67-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aSgPrintCommand - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_print_command"|196-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aPthreadCondBro - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_cond_broadcast"|25-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aSgLlReadcap10 - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_ll_readcap_10"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aSgLlReadcap16 - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_ll_readcap_16"|135-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aPthreadRegiste - byte_734, dword_0, 0, 0x12, 0, 0>; "__pthread_register_cancel"|186-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aStrcmp - byte_734, dword_0, 0, 0x12, 0, 0>; "strcmp"|62-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aCxaFinalize - byte_734, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|47-3-0-0-0-0-0-0-0-0-0-0-34-0-0-0
724|data|Elf32_Sym <aItmDeregistert - byte_734, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
740|data|Elf32_Sym <aRead - byte_734, dword_0, 0, 0x12, 0, 0>; "read"|230-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aFree - byte_734, dword_0, 0, 0x12, 0, 0>; "free"|95-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aPthreadMutexLo - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|159-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aStackChkGuard - byte_734, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|120-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
804|data|Elf32_Sym <aPthreadMutexIn - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_init"|48-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aSigwait - byte_734, dword_0, 0, 0x12, 0, 0>; "sigwait"|113-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aStackChkFail - byte_734, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|122-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aPthreadCondIni - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_cond_init"|7-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aSysconf - byte_734, dword_0, 0, 0x12, 0, 0>; "sysconf"|87-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aPerror - byte_734, dword_0, 0, 0x12, 0, 0>; "perror"|96-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aSigaction - byte_734, dword_0, 0, 0x12, 0, 0>; "sigaction"|15-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aStderr - byte_734, dword_0, 0, 0x11, 0, 0>; "stderr"|248-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
932|data|Elf32_Sym <aFwrite - byte_734, dword_0, 0, 0x12, 0, 0>; "fwrite"|20-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aIoctl - byte_734, dword_0, 0, 0x12, 0, 0>; "ioctl"|255-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aLseek64 - byte_734, dword_0, 0, 0x12, 0, 0>; "lseek64"|178-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aGettimeofday - byte_734, dword_0, 0, 0x12, 0, 0>; "gettimeofday"|27-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aPthreadSigmask - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_sigmask"|143-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aPthreadCreate - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_create"|59-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aOpen64 - byte_734, dword_0, 0, 0x12, 0, 0>; "open64"|89-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aMalloc - byte_734, dword_0, 0, 0x12, 0, 0>; "malloc"|231-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aSigaddset - byte_734, dword_0, 0, 0x12, 0, 0>; "sigaddset"|197-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aLibcStartMain - byte_734, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|69-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aGmonStart - byte_734, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1108|data|Elf32_Sym <aKill - byte_734, dword_0, 0, 0x12, 0, 0>; "kill"|152-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aGetpid - byte_734, dword_0, 0, 0x12, 0, 0>; "getpid"|145-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1140|data|Elf32_Sym <aExit - byte_734, dword_0, 0, 0x12, 0, 0>; "exit"|83-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1156|data|Elf32_Sym <aStrlen - byte_734, dword_0, 0, 0x12, 0, 0>; "strlen"|157-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1172|data|Elf32_Sym <aStrchr - byte_734, dword_0, 0, 0x12, 0, 0>; "strchr"|40-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1188|data|Elf32_Sym <aSgErrCategory3 - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_err_category3"|179-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1204|data|Elf32_Sym <aOpen642 - byte_734, dword_0, 0, 0x12, 0, 0>; "__open64_2"|103-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1220|data|Elf32_Sym <aErrnoLocation - byte_734, dword_0, 0, 0x12, 0, 0>; "__errno_location"|96-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1236|data|Elf32_Sym <aMemset - byte_734, dword_0, 0, 0x12, 0, 0>; "memset"|176-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1252|data|Elf32_Sym <aPthreadUnregis - byte_734, dword_0, 0, 0x12, 0, 0>; "__pthread_unregister_cancel"|235-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1268|data|Elf32_Sym <aStrncpy - byte_734, dword_0, 0, 0x12, 0, 0>; "strncpy"|114-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1284|data|Elf32_Sym <aPthreadCancel - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_cancel"|74-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1300|data|Elf32_Sym <aFwrite+1 - byte_734, dword_0, 0, 0x12, 0, 0>; "write"|21-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1316|data|Elf32_Sym <aSgGetLlnum - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_get_llnum"|166-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1332|data|Elf32_Sym <aPthreadUnwindN - byte_734, dword_0, 0, 0x22, 0, 0>; "__pthread_unwind_next"|121-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
1348|data|Elf32_Sym <aFprintfChk - byte_734, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|183-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1364|data|Elf32_Sym <aSigemptyset - byte_734, dword_0, 0, 0x12, 0, 0>; "sigemptyset"|164-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1380|data|Elf32_Sym <aPthreadJoin - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_join"|46-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1396|data|Elf32_Sym <aSigsetjmp - byte_734, dword_0, 0, 0x12, 0, 0>; "__sigsetjmp"|207-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1412|data|Elf32_Sym <aFputc - byte_734, dword_0, 0, 0x12, 0, 0>; "fputc"|219-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1428|data|Elf32_Sym <aSafeStrerror - byte_734, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|152-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1444|data|Elf32_Sym <aJvRegisterclas - byte_734, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1460|data|Elf32_Sym <aPthreadCondWai - byte_734, dword_0, 0, 0x12, 0, 0>; "pthread_cond_wait"|212-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1476|data|Elf32_Sym <aSgGetNum - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|124-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1492|data|Elf32_Sym <aItmRegistertmc - byte_734, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1508|data|Elf32_Sym <aXstat64 - byte_734, dword_0, 0, 0x12, 0, 0>; "__xstat64"|238-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1524|data|Elf32_Sym <aSgLlSyncCache1 - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_ll_sync_cache_10"|213-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1540|data|Elf32_Sym <aFputs - byte_734, dword_0, 0, 0x12, 0, 0>; "fputs"|225-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1556|data|Elf32_Sym <aStrncmp - byte_734, dword_0, 0, 0x12, 0, 0>; "strncmp"|88-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1572|data|Elf32_Sym <aAbort - byte_734, dword_0, 0, 0x12, 0, 0>; "abort"|139-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1588|data|Elf32_Sym <aClose - byte_734, dword_0, 0, 0x12, 0, 0>; "close"|9-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1604|data|Elf32_Sym <aSnprintfChk - byte_734, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|5-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1620|data|Elf32_Sym <aSgChkNPrint3 - byte_734, dword_0, 0, 0x12, 0, 0>; "sg_chk_n_print3"|233-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1636|data|Elf32_Sym <aBssEnd+1 - byte_734, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|185-3-0-0-16-130-1-0-0-0-0-0-16-0-24-0
1652|data|Elf32_Sym <aEdata - byte_734, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|151-3-0-0-24-128-1-0-0-0-0-0-16-0-23-0
1668|data|Elf32_Sym <aDataStart - byte_734, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|138-3-0-0-0-128-1-0-0-0-0-0-16-0-23-0
1684|data|Elf32_Sym <aEnd_0 - byte_734, _end, 0, 0x10, 0, 0x18>; "_end"|204-3-0-0-16-130-1-0-0-0-0-0-16-0-24-0
1700|data|Elf32_Sym <aBssEnd - byte_734, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|184-3-0-0-16-130-1-0-0-0-0-0-16-0-24-0
1716|data|Elf32_Sym <aLibcCsuInit - byte_734, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|225-3-0-0-165-85-0-0-64-0-0-0-18-0-13-0
1732|data|Elf32_Sym <aBssStart - byte_734, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|158-3-0-0-24-128-1-0-0-0-0-0-16-0-24-0
1748|data|Elf32_Sym <aLibcStartMain+0xD - byte_734, main+1, 0x18B8, 0x12, 0, \; "main"|82-3-0-0-41-20-0-0-184-24-0-0-18-0-13-0
1764|data|Elf32_Sym <aPthreadCondIni+0xC - byte_734, .init_proc, 0, 0x12, 0, \; "_init"|19-2-0-0-160-14-0-0-0-0-0-0-18-0-11-0
1780|data|Elf32_Sym <aLibcCsuFini - byte_734, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|209-3-0-0-229-85-0-0-2-0-0-0-18-0-13-0
1796|data|Elf32_Sym <aBssStart_0 - byte_734, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|170-3-0-0-24-128-1-0-0-0-0-0-16-0-24-0
1812|data|Elf32_Sym <aLibcCsuFini+0xA - byte_734, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|219-3-0-0-232-85-0-0-0-0-0-0-18-0-14-0
1828|data|Elf32_Sym <aEnd - byte_734, _end, 0, 0x10, 0, 0x18>; "__end__"|196-3-0-0-16-130-1-0-0-0-0-0-16-0-24-0
1844|data|DCB 0|0
1845|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1862|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1890|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1905|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1925|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1951|data|DCB "sg_ll_readcap_10",0|115-103-95-108-108-95-114-101-97-100-99-97-112-95-49-48-0
1968|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1979|data|DCB "sg_ll_readcap_16",0|115-103-95-108-108-95-114-101-97-100-99-97-112-95-49-54-0
1996|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
2010|data|DCB "sg_get_llnum",0|115-103-95-103-101-116-95-108-108-110-117-109-0
2023|data|DCB "sg_err_category3",0|115-103-95-101-114-114-95-99-97-116-101-103-111-114-121-51-0
2040|data|DCB "sg_print_command",0|115-103-95-112-114-105-110-116-95-99-111-109-109-97-110-100-0
2057|data|DCB "sg_ll_sync_cache_10",0|115-103-95-108-108-95-115-121-110-99-95-99-97-99-104-101-95-49-48-0
2077|data|DCB "sg_chk_n_print3",0|115-103-95-99-104-107-95-110-95-112-114-105-110-116-51-0
2093|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
2109|data|DCB "close",0|99-108-111-115-101-0
2115|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
2125|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
2146|data|DCB "pthread_join",0|112-116-104-114-101-97-100-95-106-111-105-110-0
2159|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
2174|data|DCB "pthread_cancel",0|112-116-104-114-101-97-100-95-99-97-110-99-101-108-0
2189|data|DCB "open64",0|111-112-101-110-54-52-0
2196|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
2213|data|DCB "sigwait",0|115-105-103-119-97-105-116-0
2221|data|DCB "__pthread_unwind_next",0|95-95-112-116-104-114-101-97-100-95-117-110-119-105-110-100-95-110-101-120-116-0
2243|data|DCB "pthread_sigmask",0|112-116-104-114-101-97-100-95-115-105-103-109-97-115-107-0
2259|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
2278|data|DCB "lseek64",0|108-115-101-101-107-54-52-0
2286|data|DCB "__pthread_register_cancel",0|95-95-112-116-104-114-101-97-100-95-114-101-103-105-115-116-101-114-95-99-97-110-99-101-108-0
2312|data|DCB "pthread_cond_wait",0|112-116-104-114-101-97-100-95-99-111-110-100-95-119-97-105-116-0
2330|data|DCB "read",0|114-101-97-100-0
2335|data|DCB "__pthread_unregister_cancel",0|95-95-112-116-104-114-101-97-100-95-117-110-114-101-103-105-115-116-101-114-95-99-97-110-99-101-108-0
2363|data|DCB "pthread_cond_init",0|112-116-104-114-101-97-100-95-99-111-110-100-95-105-110-105-116-0
2381|data|DCB "pthread_cond_broadcast",0|112-116-104-114-101-97-100-95-99-111-110-100-95-98-114-111-97-100-99-97-115-116-0
2404|data|DCB "pthread_mutex_init",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-105-110-105-116-0
2423|data|DCB "raise",0|114-97-105-115-101-0
2429|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
2439|data|DCB "exit",0|101-120-105-116-0
2444|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
2452|data|DCB "perror",0|112-101-114-114-111-114-0
2459|data|DCB "__open64_2",0|95-95-111-112-101-110-54-52-95-50-0
2470|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
2478|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
2495|data|DCB "abort",0|97-98-111-114-116-0
2501|data|DCB "getpid",0|103-101-116-112-105-100-0
2508|data|DCB "kill",0|107-105-108-108-0
2513|data|DCB "strlen",0|115-116-114-108-101-110-0
2520|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
2532|data|DCB "memset",0|109-101-109-115-101-116-0
2539|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
2553|data|DCB "sigaddset",0|115-105-103-97-100-100-115-101-116-0
2563|data|DCB "__sigsetjmp",0|95-95-115-105-103-115-101-116-106-109-112-0
2575|data|DCB "fputc",0|102-112-117-116-99-0
2581|data|DCB "fputs",0|102-112-117-116-115-0
2587|data|DCB "malloc",0|109-97-108-108-111-99-0
2594|data|DCB "__xstat64",0|95-95-120-115-116-97-116-54-52-0
2604|data|DCB "stderr",0|115-116-100-101-114-114-0
2611|data|DCB "ioctl",0|105-111-99-116-108-0
2617|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
2632|data|DCB "fwrite",0|102-119-114-105-116-101-0
2639|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
2652|data|DCB "strchr",0|115-116-114-99-104-114-0
2659|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
2674|data|DCB "strcmp",0|115-116-114-99-109-112-0
2681|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
2699|data|DCB "sysconf",0|115-121-115-99-111-110-102-0
2707|data|DCB "free",0|102-114-101-101-0
2712|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
2732|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
2750|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
2763|data|DCB "_edata",0|95-101-100-97-116-97-0
2770|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2782|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2796|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2808|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2816|data|DCB "_end",0|95-101-110-100-0
2821|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2837|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2853|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2863|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
2873|data|DCB 0|0
2874|data|DCW 0|0-0
2876|data|DCW 0|0-0
2878|data|DCW 0|0-0
2880|data|DCW 2; pthread_mutex_unlock@@GLIBC_2.4|2-0
2882|data|DCW 2; raise@@GLIBC_2.4|2-0
2884|data|DCW 0; local  symbol: sg_print_command|0-0
2886|data|DCW 2; pthread_cond_broadcast@@GLIBC_2.4|2-0
2888|data|DCW 0; local  symbol: sg_ll_readcap_10|0-0
2890|data|DCW 0; local  symbol: sg_ll_readcap_16|0-0
2892|data|DCW 2; __pthread_register_cancel@@GLIBC_2.4|2-0
2894|data|DCW 3; strcmp@@GLIBC_2.4|3-0
2896|data|DCW 3; __cxa_finalize@@GLIBC_2.4|3-0
2898|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2900|data|DCW 2; read@@GLIBC_2.4|2-0
2902|data|DCW 3; free@@GLIBC_2.4|3-0
2904|data|DCW 2; pthread_mutex_lock@@GLIBC_2.4|2-0
2906|data|DCW 4; __stack_chk_guard@@GLIBC_2.4|4-0
2908|data|DCW 2; pthread_mutex_init@@GLIBC_2.4|2-0
2910|data|DCW 2; sigwait@@GLIBC_2.4|2-0
2912|data|DCW 3; __stack_chk_fail@@GLIBC_2.4|3-0
2914|data|DCW 2; pthread_cond_init@@GLIBC_2.4|2-0
2916|data|DCW 3; sysconf@@GLIBC_2.4|3-0
2918|data|DCW 3; perror@@GLIBC_2.4|3-0
2920|data|DCW 2; sigaction@@GLIBC_2.4|2-0
2922|data|DCW 3; stderr@@GLIBC_2.4|3-0
2924|data|DCW 3; fwrite@@GLIBC_2.4|3-0
2926|data|DCW 3; ioctl@@GLIBC_2.4|3-0
2928|data|DCW 2; lseek64@@GLIBC_2.4|2-0
2930|data|DCW 3; gettimeofday@@GLIBC_2.4|3-0
2932|data|DCW 2; pthread_sigmask@@GLIBC_2.4|2-0
2934|data|DCW 2; pthread_create@@GLIBC_2.4|2-0
2936|data|DCW 2; open64@@GLIBC_2.4|2-0
2938|data|DCW 3; malloc@@GLIBC_2.4|3-0
2940|data|DCW 3; sigaddset@@GLIBC_2.4|3-0
2942|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
2944|data|DCW 0; local  symbol: __gmon_start__|0-0
2946|data|DCW 3; kill@@GLIBC_2.4|3-0
2948|data|DCW 3; getpid@@GLIBC_2.4|3-0
2950|data|DCW 3; exit@@GLIBC_2.4|3-0
2952|data|DCW 3; strlen@@GLIBC_2.4|3-0
2954|data|DCW 3; strchr@@GLIBC_2.4|3-0
2956|data|DCW 0; local  symbol: sg_err_category3|0-0
2958|data|DCW 5; __open64_2@@GLIBC_2.7|5-0
2960|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
2962|data|DCW 3; memset@@GLIBC_2.4|3-0
2964|data|DCW 2; __pthread_unregister_cancel@@GLIBC_2.4|2-0
2966|data|DCW 3; strncpy@@GLIBC_2.4|3-0
2968|data|DCW 2; pthread_cancel@@GLIBC_2.4|2-0
2970|data|DCW 2; write@@GLIBC_2.4|2-0
2972|data|DCW 0; local  symbol: sg_get_llnum|0-0
2974|data|DCW 2; __pthread_unwind_next@@GLIBC_2.4|2-0
2976|data|DCW 3; __fprintf_chk@@GLIBC_2.4|3-0
2978|data|DCW 3; sigemptyset@@GLIBC_2.4|3-0
2980|data|DCW 2; pthread_join@@GLIBC_2.4|2-0
2982|data|DCW 3; __sigsetjmp@@GLIBC_2.4|3-0
2984|data|DCW 3; fputc@@GLIBC_2.4|3-0
2986|data|DCW 0; local  symbol: safe_strerror|0-0
2988|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2990|data|DCW 2; pthread_cond_wait@@GLIBC_2.4|2-0
2992|data|DCW 0; local  symbol: sg_get_num|0-0
2994|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2996|data|DCW 3; __xstat64@@GLIBC_2.4|3-0
2998|data|DCW 0; local  symbol: sg_ll_sync_cache_10|0-0
3000|data|DCW 3; fputs@@GLIBC_2.4|3-0
3002|data|DCW 3; strncmp@@GLIBC_2.4|3-0
3004|data|DCW 3; abort@@GLIBC_2.4|3-0
3006|data|DCW 2; close@@GLIBC_2.4|2-0
3008|data|DCW 3; __snprintf_chk@@GLIBC_2.4|3-0
3010|data|DCW 0; local  symbol: sg_chk_n_print3|0-0
3012|data|DCW 1; global symbol: _bss_end__|1-0
3014|data|DCW 1; global symbol: _edata|1-0
3016|data|DCW 1; global symbol: __data_start|1-0
3018|data|DCW 1; global symbol: _end|1-0
3020|data|DCW 1; global symbol: __bss_end__|1-0
3022|data|DCW 1; global symbol: __libc_csu_init|1-0
3024|data|DCW 1; global symbol: __bss_start|1-0
3026|data|DCW 1; global symbol: main|1-0
3028|data|DCW 1; global symbol: _init|1-0
3030|data|DCW 1; global symbol: __libc_csu_fini|1-0
3032|data|DCW 1; global symbol: __bss_start__|1-0
3034|data|DCW 1; global symbol: _fini|1-0
3036|data|DCW 1; global symbol: __end__|1-0
3038|data|DCW 0|0-0
3040|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_734, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-100-3-0-0-16-0-0-0-32-0-0-0
3056|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_734, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-241-3-0-0-0-0-0-0
3072|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_734, 0x10, 0x30>; "libc.so.6"|1-0-2-0-73-2-0-0-16-0-0-0-48-0-0-0
3088|data|Elf32_Vernaux <0xD696917, 0, 5, aGlibc27 - byte_734, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-5-0-251-3-0-0-16-0-0-0
3104|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_734, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-241-3-0-0-0-0-0-0
3120|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_734, 0x10, 0>; "libpthread.so.0"|1-0-1-0-249-0-0-0-16-0-0-0-0-0-0-0
3136|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_734, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-241-3-0-0-0-0-0-0
3152|data|Elf32_Rel <0x17DBC, 0x17>; R_ARM_RELATIVE|188-125-1-0-23-0-0-0
3160|data|Elf32_Rel <0x17DC0, 0x17>; R_ARM_RELATIVE|192-125-1-0-23-0-0-0
3168|data|Elf32_Rel <0x17FD8, 0x17>; R_ARM_RELATIVE|216-127-1-0-23-0-0-0
3176|data|Elf32_Rel <0x17FF0, 0x17>; R_ARM_RELATIVE|240-127-1-0-23-0-0-0
3184|data|Elf32_Rel <0x17FF4, 0x17>; R_ARM_RELATIVE|244-127-1-0-23-0-0-0
3192|data|Elf32_Rel <0x18004, 0x17>; R_ARM_RELATIVE|4-128-1-0-23-0-0-0
3200|data|Elf32_Rel <0x17FDC, 0xB15>; R_ARM_GLOB_DAT __cxa_finalize|220-127-1-0-21-11-0-0
3208|data|Elf32_Rel <0x17FE0, 0xC15>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|224-127-1-0-21-12-0-0
3216|data|Elf32_Rel <0x17FE4, 0x1015>; R_ARM_GLOB_DAT __stack_chk_guard|228-127-1-0-21-16-0-0
3224|data|Elf32_Rel <0x17FE8, 0x1815>; R_ARM_GLOB_DAT stderr|232-127-1-0-21-24-0-0
3232|data|Elf32_Rel <0x17FEC, 0x2315>; R_ARM_GLOB_DAT __gmon_start__|236-127-1-0-21-35-0-0
3240|data|Elf32_Rel <0x17FF8, 0x3915>; R_ARM_GLOB_DAT _Jv_RegisterClasses|248-127-1-0-21-57-0-0
3248|data|Elf32_Rel <0x17FFC, 0x3C15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|252-127-1-0-21-60-0-0
3256|data|Elf32_Rel <0x17EE4, 0x316>; R_ARM_JUMP_SLOT pthread_mutex_unlock|228-126-1-0-22-3-0-0
3264|data|Elf32_Rel <0x17EE8, 0x416>; R_ARM_JUMP_SLOT raise|232-126-1-0-22-4-0-0
3272|data|Elf32_Rel <0x17EEC, 0x516>; R_ARM_JUMP_SLOT sg_print_command|236-126-1-0-22-5-0-0
3280|data|Elf32_Rel <0x17EF0, 0x616>; R_ARM_JUMP_SLOT pthread_cond_broadcast|240-126-1-0-22-6-0-0
3288|data|Elf32_Rel <0x17EF4, 0x716>; R_ARM_JUMP_SLOT sg_ll_readcap_10|244-126-1-0-22-7-0-0
3296|data|Elf32_Rel <0x17EF8, 0x816>; R_ARM_JUMP_SLOT sg_ll_readcap_16|248-126-1-0-22-8-0-0
3304|data|Elf32_Rel <0x17EFC, 0x916>; R_ARM_JUMP_SLOT __pthread_register_cancel|252-126-1-0-22-9-0-0
3312|data|Elf32_Rel <0x17F00, 0xA16>; R_ARM_JUMP_SLOT strcmp|0-127-1-0-22-10-0-0
3320|data|Elf32_Rel <0x17F04, 0xB16>; R_ARM_JUMP_SLOT __cxa_finalize|4-127-1-0-22-11-0-0
3328|data|Elf32_Rel <0x17F08, 0xD16>; R_ARM_JUMP_SLOT read|8-127-1-0-22-13-0-0
3336|data|Elf32_Rel <0x17F0C, 0xE16>; R_ARM_JUMP_SLOT free|12-127-1-0-22-14-0-0
3344|data|Elf32_Rel <0x17F10, 0xF16>; R_ARM_JUMP_SLOT pthread_mutex_lock|16-127-1-0-22-15-0-0
3352|data|Elf32_Rel <0x17F14, 0x1116>; R_ARM_JUMP_SLOT pthread_mutex_init|20-127-1-0-22-17-0-0
3360|data|Elf32_Rel <0x17F18, 0x1216>; R_ARM_JUMP_SLOT sigwait|24-127-1-0-22-18-0-0
3368|data|Elf32_Rel <0x17F1C, 0x1316>; R_ARM_JUMP_SLOT __stack_chk_fail|28-127-1-0-22-19-0-0
3376|data|Elf32_Rel <0x17F20, 0x1416>; R_ARM_JUMP_SLOT pthread_cond_init|32-127-1-0-22-20-0-0
3384|data|Elf32_Rel <0x17F24, 0x1516>; R_ARM_JUMP_SLOT sysconf|36-127-1-0-22-21-0-0
3392|data|Elf32_Rel <0x17F28, 0x1616>; R_ARM_JUMP_SLOT perror|40-127-1-0-22-22-0-0
3400|data|Elf32_Rel <0x17F2C, 0x1716>; R_ARM_JUMP_SLOT sigaction|44-127-1-0-22-23-0-0
3408|data|Elf32_Rel <0x17F30, 0x1916>; R_ARM_JUMP_SLOT fwrite|48-127-1-0-22-25-0-0
3416|data|Elf32_Rel <0x17F34, 0x1A16>; R_ARM_JUMP_SLOT ioctl|52-127-1-0-22-26-0-0
3424|data|Elf32_Rel <0x17F38, 0x1B16>; R_ARM_JUMP_SLOT lseek64|56-127-1-0-22-27-0-0
3432|data|Elf32_Rel <0x17F3C, 0x1C16>; R_ARM_JUMP_SLOT gettimeofday|60-127-1-0-22-28-0-0
3440|data|Elf32_Rel <0x17F40, 0x1D16>; R_ARM_JUMP_SLOT pthread_sigmask|64-127-1-0-22-29-0-0
3448|data|Elf32_Rel <0x17F44, 0x1E16>; R_ARM_JUMP_SLOT pthread_create|68-127-1-0-22-30-0-0
3456|data|Elf32_Rel <0x17F48, 0x1F16>; R_ARM_JUMP_SLOT open64|72-127-1-0-22-31-0-0
3464|data|Elf32_Rel <0x17F4C, 0x2016>; R_ARM_JUMP_SLOT malloc|76-127-1-0-22-32-0-0
3472|data|Elf32_Rel <0x17F50, 0x2116>; R_ARM_JUMP_SLOT sigaddset|80-127-1-0-22-33-0-0
3480|data|Elf32_Rel <0x17F54, 0x2216>; R_ARM_JUMP_SLOT __libc_start_main|84-127-1-0-22-34-0-0
3488|data|Elf32_Rel <0x17F58, 0x2316>; R_ARM_JUMP_SLOT __gmon_start__|88-127-1-0-22-35-0-0
3496|data|Elf32_Rel <0x17F5C, 0x2416>; R_ARM_JUMP_SLOT kill|92-127-1-0-22-36-0-0
3504|data|Elf32_Rel <0x17F60, 0x2516>; R_ARM_JUMP_SLOT getpid|96-127-1-0-22-37-0-0
3512|data|Elf32_Rel <0x17F64, 0x2616>; R_ARM_JUMP_SLOT exit|100-127-1-0-22-38-0-0
3520|data|Elf32_Rel <0x17F68, 0x2716>; R_ARM_JUMP_SLOT strlen|104-127-1-0-22-39-0-0
3528|data|Elf32_Rel <0x17F6C, 0x2816>; R_ARM_JUMP_SLOT strchr|108-127-1-0-22-40-0-0
3536|data|Elf32_Rel <0x17F70, 0x2916>; R_ARM_JUMP_SLOT sg_err_category3|112-127-1-0-22-41-0-0
3544|data|Elf32_Rel <0x17F74, 0x2A16>; R_ARM_JUMP_SLOT __open64_2|116-127-1-0-22-42-0-0
3552|data|Elf32_Rel <0x17F78, 0x2B16>; R_ARM_JUMP_SLOT __errno_location|120-127-1-0-22-43-0-0
3560|data|Elf32_Rel <0x17F7C, 0x2C16>; R_ARM_JUMP_SLOT memset|124-127-1-0-22-44-0-0
3568|data|Elf32_Rel <0x17F80, 0x2D16>; R_ARM_JUMP_SLOT __pthread_unregister_cancel|128-127-1-0-22-45-0-0
3576|data|Elf32_Rel <0x17F84, 0x2E16>; R_ARM_JUMP_SLOT strncpy|132-127-1-0-22-46-0-0
3584|data|Elf32_Rel <0x17F88, 0x2F16>; R_ARM_JUMP_SLOT pthread_cancel|136-127-1-0-22-47-0-0
3592|data|Elf32_Rel <0x17F8C, 0x3016>; R_ARM_JUMP_SLOT write|140-127-1-0-22-48-0-0
3600|data|Elf32_Rel <0x17F90, 0x3116>; R_ARM_JUMP_SLOT sg_get_llnum|144-127-1-0-22-49-0-0
3608|data|Elf32_Rel <0x17F94, 0x3216>; R_ARM_JUMP_SLOT __pthread_unwind_next|148-127-1-0-22-50-0-0
3616|data|Elf32_Rel <0x17F98, 0x3316>; R_ARM_JUMP_SLOT __fprintf_chk|152-127-1-0-22-51-0-0
3624|data|Elf32_Rel <0x17F9C, 0x3416>; R_ARM_JUMP_SLOT sigemptyset|156-127-1-0-22-52-0-0
3632|data|Elf32_Rel <0x17FA0, 0x3516>; R_ARM_JUMP_SLOT pthread_join|160-127-1-0-22-53-0-0
3640|data|Elf32_Rel <0x17FA4, 0x3616>; R_ARM_JUMP_SLOT __sigsetjmp|164-127-1-0-22-54-0-0
3648|data|Elf32_Rel <0x17FA8, 0x3716>; R_ARM_JUMP_SLOT fputc|168-127-1-0-22-55-0-0
3656|data|Elf32_Rel <0x17FAC, 0x3816>; R_ARM_JUMP_SLOT safe_strerror|172-127-1-0-22-56-0-0
3664|data|Elf32_Rel <0x17FB0, 0x3A16>; R_ARM_JUMP_SLOT pthread_cond_wait|176-127-1-0-22-58-0-0
3672|data|Elf32_Rel <0x17FB4, 0x3B16>; R_ARM_JUMP_SLOT sg_get_num|180-127-1-0-22-59-0-0
3680|data|Elf32_Rel <0x17FB8, 0x3D16>; R_ARM_JUMP_SLOT __xstat64|184-127-1-0-22-61-0-0
3688|data|Elf32_Rel <0x17FBC, 0x3E16>; R_ARM_JUMP_SLOT sg_ll_sync_cache_10|188-127-1-0-22-62-0-0
3696|data|Elf32_Rel <0x17FC0, 0x3F16>; R_ARM_JUMP_SLOT fputs|192-127-1-0-22-63-0-0
3704|data|Elf32_Rel <0x17FC4, 0x4016>; R_ARM_JUMP_SLOT strncmp|196-127-1-0-22-64-0-0
3712|data|Elf32_Rel <0x17FC8, 0x4116>; R_ARM_JUMP_SLOT abort|200-127-1-0-22-65-0-0
3720|data|Elf32_Rel <0x17FCC, 0x4216>; R_ARM_JUMP_SLOT close|204-127-1-0-22-66-0-0
3728|data|Elf32_Rel <0x17FD0, 0x4316>; R_ARM_JUMP_SLOT __snprintf_chk|208-127-1-0-22-67-0-0
3736|data|Elf32_Rel <0x17FD4, 0x4416>; R_ARM_JUMP_SLOT sg_chk_n_print3|212-127-1-0-22-68-0-0
3744|code|PUSH            {R3,LR}; _init|8-64-45-233
3748|code|BL              sub_2D28|159-7-0-235
3752|code|POP             {R3,PC}|8-128-189-232
3756|code|PUSH            {LR}|4-224-45-229
3760|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xEBC)|4-224-159-229
3764|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
3768|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
3772|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xEBC|28-112-1-0
3776|code|BX              PC|120-71
3778|data|ALIGN 4|192-70
3780|code|ADRL            R12, 0x17ECC|0-198-143-226-23-202-140-226
3788|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x17ECC)]!; __imp_pthread_mutex_unlock|24-240-188-229
3792|code|ADRL            R12, 0x17ED8|0-198-143-226-23-202-140-226
3800|code|LDR             PC, [R12,#(raise_ptr - 0x17ED8)]!; __imp_raise|16-240-188-229
3804|code|ADRL            R12, 0x17EE4|0-198-143-226-23-202-140-226
3812|code|LDR             PC, [R12,#(sg_print_command_ptr - 0x17EE4)]!; __imp_sg_print_command|8-240-188-229
3816|code|BX              PC|120-71
3818|data|ALIGN 4|192-70
3820|code|ADR             R12, 0xEF4|0-198-143-226
3824|code|ADD             R12, R12, #0x16000|22-202-140-226
3828|code|LDR             PC, [R12,#(pthread_cond_broadcast_ptr - 0x16EF4)]!; __imp_pthread_cond_broadcast|252-255-188-229
3832|code|ADR             R12, 0xF00|0-198-143-226
3836|code|ADD             R12, R12, #0x16000|22-202-140-226
3840|code|LDR             PC, [R12,#(sg_ll_readcap_10_ptr - 0x16F00)]!; __imp_sg_ll_readcap_10|244-255-188-229
3844|code|ADR             R12, 0xF0C|0-198-143-226
3848|code|ADD             R12, R12, #0x16000|22-202-140-226
3852|code|LDR             PC, [R12,#(sg_ll_readcap_16_ptr - 0x16F0C)]!; __imp_sg_ll_readcap_16|236-255-188-229
3856|code|ADR             R12, 0xF18|0-198-143-226
3860|code|ADD             R12, R12, #0x16000|22-202-140-226
3864|code|LDR             PC, [R12,#(__pthread_register_cancel_ptr - 0x16F18)]!; __imp___pthread_register_cancel|228-255-188-229
3868|code|ADR             R12, 0xF24|0-198-143-226
3872|code|ADD             R12, R12, #0x16000|22-202-140-226
3876|code|LDR             PC, [R12,#(strcmp_ptr - 0x16F24)]!; __imp_strcmp|220-255-188-229
3880|code|ADR             R12, 0xF30|0-198-143-226
3884|code|ADD             R12, R12, #0x16000|22-202-140-226
3888|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x16F30)]!; __imp___cxa_finalize|212-255-188-229
3892|code|ADR             R12, 0xF3C|0-198-143-226
3896|code|ADD             R12, R12, #0x16000|22-202-140-226
3900|code|LDR             PC, [R12,#(read_ptr - 0x16F3C)]!; __imp_read|204-255-188-229
3904|code|ADR             R12, 0xF48|0-198-143-226
3908|code|ADD             R12, R12, #0x16000|22-202-140-226
3912|code|LDR             PC, [R12,#(free_ptr - 0x16F48)]!; __imp_free|196-255-188-229
3916|code|ADR             R12, 0xF54|0-198-143-226
3920|code|ADD             R12, R12, #0x16000|22-202-140-226
3924|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x16F54)]!; __imp_pthread_mutex_lock|188-255-188-229
3928|code|ADR             R12, 0xF60|0-198-143-226
3932|code|ADD             R12, R12, #0x16000|22-202-140-226
3936|code|LDR             PC, [R12,#(pthread_mutex_init_ptr - 0x16F60)]!; __imp_pthread_mutex_init|180-255-188-229
3940|code|ADR             R12, 0xF6C|0-198-143-226
3944|code|ADD             R12, R12, #0x16000|22-202-140-226
3948|code|LDR             PC, [R12,#(sigwait_ptr - 0x16F6C)]!; __imp_sigwait|172-255-188-229
3952|code|ADR             R12, 0xF78|0-198-143-226
3956|code|ADD             R12, R12, #0x16000|22-202-140-226
3960|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x16F78)]!; __imp___stack_chk_fail|164-255-188-229
3964|code|ADR             R12, 0xF84|0-198-143-226
3968|code|ADD             R12, R12, #0x16000|22-202-140-226
3972|code|LDR             PC, [R12,#(pthread_cond_init_ptr - 0x16F84)]!; __imp_pthread_cond_init|156-255-188-229
3976|code|ADR             R12, 0xF90|0-198-143-226
3980|code|ADD             R12, R12, #0x16000|22-202-140-226
3984|code|LDR             PC, [R12,#(sysconf_ptr - 0x16F90)]!; __imp_sysconf|148-255-188-229
3988|code|ADR             R12, 0xF9C|0-198-143-226
3992|code|ADD             R12, R12, #0x16000|22-202-140-226
3996|code|LDR             PC, [R12,#(perror_ptr - 0x16F9C)]!; __imp_perror|140-255-188-229
4000|code|ADR             R12, 0xFA8|0-198-143-226
4004|code|ADD             R12, R12, #0x16000|22-202-140-226
4008|code|LDR             PC, [R12,#(sigaction_ptr - 0x16FA8)]!; __imp_sigaction|132-255-188-229
4012|code|BX              PC|120-71
4014|data|ALIGN 4|192-70
4016|code|ADR             R12, 0xFB8|0-198-143-226
4020|code|ADD             R12, R12, #0x16000|22-202-140-226
4024|code|LDR             PC, [R12,#(fwrite_ptr - 0x16FB8)]!; __imp_fwrite|120-255-188-229
4028|code|ADR             R12, 0xFC4|0-198-143-226
4032|code|ADD             R12, R12, #0x16000|22-202-140-226
4036|code|LDR             PC, [R12,#(ioctl_ptr - 0x16FC4)]!; __imp_ioctl|112-255-188-229
4040|code|ADR             R12, 0xFD0|0-198-143-226
4044|code|ADD             R12, R12, #0x16000|22-202-140-226
4048|code|LDR             PC, [R12,#(lseek64_ptr - 0x16FD0)]!; __imp_lseek64|104-255-188-229
4052|code|ADR             R12, 0xFDC|0-198-143-226
4056|code|ADD             R12, R12, #0x16000|22-202-140-226
4060|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x16FDC)]!; __imp_gettimeofday|96-255-188-229
4064|code|ADR             R12, 0xFE8|0-198-143-226
4068|code|ADD             R12, R12, #0x16000|22-202-140-226
4072|code|LDR             PC, [R12,#(pthread_sigmask_ptr - 0x16FE8)]!; __imp_pthread_sigmask|88-255-188-229
4076|code|ADR             R12, 0xFF4|0-198-143-226
4080|code|ADD             R12, R12, #0x16000|22-202-140-226
4084|code|LDR             PC, [R12,#(pthread_create_ptr - 0x16FF4)]!; __imp_pthread_create|80-255-188-229
4088|code|ADR             R12, 0x1000|0-198-143-226
4092|code|ADD             R12, R12, #0x16000|22-202-140-226
4096|code|LDR             PC, [R12,#(open64_ptr - 0x17000)]!; __imp_open64|72-255-188-229
4100|code|ADR             R12, 0x100C|0-198-143-226
4104|code|ADD             R12, R12, #0x16000|22-202-140-226
4108|code|LDR             PC, [R12,#(malloc_ptr - 0x1700C)]!; __imp_malloc|64-255-188-229
4112|code|ADR             R12, 0x1018|0-198-143-226
4116|code|ADD             R12, R12, #0x16000|22-202-140-226
4120|code|LDR             PC, [R12,#(sigaddset_ptr - 0x17018)]!; __imp_sigaddset|56-255-188-229
4124|code|ADR             R12, 0x1024|0-198-143-226
4128|code|ADD             R12, R12, #0x16000|22-202-140-226
4132|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x17024)]!; __imp___libc_start_main|48-255-188-229
4136|code|ADR             R12, 0x1030|0-198-143-226
4140|code|ADD             R12, R12, #0x16000|22-202-140-226
4144|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x17030)]!; __imp___gmon_start__|40-255-188-229
4148|code|ADR             R12, 0x103C|0-198-143-226
4152|code|ADD             R12, R12, #0x16000|22-202-140-226
4156|code|LDR             PC, [R12,#(kill_ptr - 0x1703C)]!; __imp_kill|32-255-188-229
4160|code|ADR             R12, 0x1048|0-198-143-226
4164|code|ADD             R12, R12, #0x16000|22-202-140-226
4168|code|LDR             PC, [R12,#(getpid_ptr - 0x17048)]!; __imp_getpid|24-255-188-229
4172|code|ADR             R12, 0x1054|0-198-143-226
4176|code|ADD             R12, R12, #0x16000|22-202-140-226
4180|code|LDR             PC, [R12,#(exit_ptr - 0x17054)]!; __imp_exit|16-255-188-229
4184|code|ADR             R12, 0x1060|0-198-143-226
4188|code|ADD             R12, R12, #0x16000|22-202-140-226
4192|code|LDR             PC, [R12,#(strlen_ptr - 0x17060)]!; __imp_strlen|8-255-188-229
4196|code|ADR             R12, 0x106C|0-198-143-226
4200|code|ADD             R12, R12, #0x16000|22-202-140-226
4204|code|LDR             PC, [R12,#(strchr_ptr - 0x1706C)]!; __imp_strchr|0-255-188-229
4208|code|ADR             R12, 0x1078|0-198-143-226
4212|code|ADD             R12, R12, #0x16000|22-202-140-226
4216|code|LDR             PC, [R12,#(sg_err_category3_ptr - 0x17078)]!; __imp_sg_err_category3|248-254-188-229
4220|code|ADR             R12, 0x1084|0-198-143-226
4224|code|ADD             R12, R12, #0x16000|22-202-140-226
4228|code|LDR             PC, [R12,#(__open64_2_ptr - 0x17084)]!; __imp___open64_2|240-254-188-229
4232|code|ADR             R12, 0x1090|0-198-143-226
4236|code|ADD             R12, R12, #0x16000|22-202-140-226
4240|code|LDR             PC, [R12,#(__errno_location_ptr - 0x17090)]!; __imp___errno_location|232-254-188-229
4244|code|ADR             R12, 0x109C|0-198-143-226
4248|code|ADD             R12, R12, #0x16000|22-202-140-226
4252|code|LDR             PC, [R12,#(memset_ptr - 0x1709C)]!; __imp_memset|224-254-188-229
4256|code|ADR             R12, 0x10A8|0-198-143-226
4260|code|ADD             R12, R12, #0x16000|22-202-140-226
4264|code|LDR             PC, [R12,#(__pthread_unregister_cancel_ptr - 0x170A8)]!; __imp___pthread_unregister_cancel|216-254-188-229
4268|code|ADR             R12, 0x10B4|0-198-143-226
4272|code|ADD             R12, R12, #0x16000|22-202-140-226
4276|code|LDR             PC, [R12,#(strncpy_ptr - 0x170B4)]!; __imp_strncpy|208-254-188-229
4280|code|ADR             R12, 0x10C0|0-198-143-226
4284|code|ADD             R12, R12, #0x16000|22-202-140-226
4288|code|LDR             PC, [R12,#(pthread_cancel_ptr - 0x170C0)]!; __imp_pthread_cancel|200-254-188-229
4292|code|ADR             R12, 0x10CC|0-198-143-226
4296|code|ADD             R12, R12, #0x16000|22-202-140-226
4300|code|LDR             PC, [R12,#(write_ptr - 0x170CC)]!; __imp_write|192-254-188-229
4304|code|ADR             R12, 0x10D8|0-198-143-226
4308|code|ADD             R12, R12, #0x16000|22-202-140-226
4312|code|LDR             PC, [R12,#(sg_get_llnum_ptr - 0x170D8)]!; __imp_sg_get_llnum|184-254-188-229
4316|code|ADR             R12, 0x10E4|0-198-143-226
4320|code|ADD             R12, R12, #0x16000|22-202-140-226
4324|code|LDR             PC, [R12,#(__pthread_unwind_next_ptr - 0x170E4)]!; __imp___pthread_unwind_next|176-254-188-229
4328|code|ADR             R12, 0x10F0|0-198-143-226
4332|code|ADD             R12, R12, #0x16000|22-202-140-226
4336|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x170F0)]!; __imp___fprintf_chk|168-254-188-229
4340|code|ADR             R12, 0x10FC|0-198-143-226
4344|code|ADD             R12, R12, #0x16000|22-202-140-226
4348|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x170FC)]!; __imp_sigemptyset|160-254-188-229
4352|code|ADR             R12, 0x1108|0-198-143-226
4356|code|ADD             R12, R12, #0x16000|22-202-140-226
4360|code|LDR             PC, [R12,#(pthread_join_ptr - 0x17108)]!; __imp_pthread_join|152-254-188-229
4364|code|ADR             R12, 0x1114|0-198-143-226
4368|code|ADD             R12, R12, #0x16000|22-202-140-226
4372|code|LDR             PC, [R12,#(__sigsetjmp_ptr - 0x17114)]!; __imp___sigsetjmp|144-254-188-229
4376|code|ADR             R12, 0x1120|0-198-143-226
4380|code|ADD             R12, R12, #0x16000|22-202-140-226
4384|code|LDR             PC, [R12,#(fputc_ptr - 0x17120)]!; __imp_fputc|136-254-188-229
4388|code|ADR             R12, 0x112C|0-198-143-226
4392|code|ADD             R12, R12, #0x16000|22-202-140-226
4396|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x1712C)]!; __imp_safe_strerror|128-254-188-229
4400|code|ADR             R12, 0x1138|0-198-143-226
4404|code|ADD             R12, R12, #0x16000|22-202-140-226
4408|code|LDR             PC, [R12,#(pthread_cond_wait_ptr - 0x17138)]!; __imp_pthread_cond_wait|120-254-188-229
4412|code|ADR             R12, 0x1144|0-198-143-226
4416|code|ADD             R12, R12, #0x16000|22-202-140-226
4420|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x17144)]!; __imp_sg_get_num|112-254-188-229
4424|code|ADR             R12, 0x1150|0-198-143-226
4428|code|ADD             R12, R12, #0x16000|22-202-140-226
4432|code|LDR             PC, [R12,#(__xstat64_ptr - 0x17150)]!; __imp___xstat64|104-254-188-229
4436|code|ADR             R12, 0x115C|0-198-143-226
4440|code|ADD             R12, R12, #0x16000|22-202-140-226
4444|code|LDR             PC, [R12,#(sg_ll_sync_cache_10_ptr - 0x1715C)]!; __imp_sg_ll_sync_cache_10|96-254-188-229
4448|code|ADR             R12, 0x1168|0-198-143-226
4452|code|ADD             R12, R12, #0x16000|22-202-140-226
4456|code|LDR             PC, [R12,#(fputs_ptr - 0x17168)]!; __imp_fputs|88-254-188-229
4460|code|ADR             R12, 0x1174|0-198-143-226
4464|code|ADD             R12, R12, #0x16000|22-202-140-226
4468|code|LDR             PC, [R12,#(strncmp_ptr - 0x17174)]!; __imp_strncmp|80-254-188-229
4472|code|ADR             R12, 0x1180|0-198-143-226
4476|code|ADD             R12, R12, #0x16000|22-202-140-226
4480|code|LDR             PC, [R12,#(abort_ptr - 0x17180)]!; __imp_abort|72-254-188-229
4484|code|ADR             R12, 0x118C|0-198-143-226
4488|code|ADD             R12, R12, #0x16000|22-202-140-226
4492|code|LDR             PC, [R12,#(close_ptr - 0x1718C)]!; __imp_close|64-254-188-229
4496|code|ADR             R12, 0x1198|0-198-143-226
4500|code|ADD             R12, R12, #0x16000|22-202-140-226
4504|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x17198)]!; __imp___snprintf_chk|56-254-188-229
4508|code|ADR             R12, 0x11A4|0-198-143-226
4512|code|ADD             R12, R12, #0x16000|22-202-140-226
4516|code|LDR             PC, [R12,#(sg_chk_n_print3_ptr - 0x171A4)]!; __imp_sg_chk_n_print3|48-254-188-229
4520|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x11B0)|32-75
4522|code|PUSH            {R4-R7,LR}|240-181
4524|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4526|code|LDR             R4, =(__stack_chk_guard_ptr - 0x17ED8)|32-76
4528|code|SUB             SP, SP, #0x14|133-176
4530|code|MOV             R6, R1|14-70
4532|code|MOVW            R1, #0x1268; request|65-242-104-33
4536|code|MOV             R7, R0|7-70
4538|code|MOV             R5, R2|21-70
4540|code|LDR             R3, [R3,R4]; __stack_chk_guard|27-89
4542|code|LDR.W           LR, [R3]|211-248-0-224
4546|code|MOV             R4, R3|28-70
4548|code|STR.W           LR, [SP,#0x28+var_1C]|205-248-12-224
4552|code|BLX             ioctl|255-247-248-238
4556|code|CMP             R0, #0|0-40
4558|code|BGE             loc_11E4|9-218
4560|code|LDR             R3, [R5]|43-104
4562|code|CMP             R3, #0|0-43
4564|code|BLE             loc_11E4|6-221
4566|code|LDR             R0, =(aBlksszgetIoctl - 0x11DC); "BLKSSZGET ioctl error"|23-72
4568|code|ADD             R0, PC; "BLKSSZGET ioctl error"|120-68
4570|code|BLX             perror|255-247-220-238
4574|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
4578|code|B               loc_1218|25-224
4580|code|MOVW            R1, #0x1272|65-242-114-33
4584|code|MOV             R0, R7; fd|56-70
4586|code|MOVT.W          R1, #0x8004; request|200-242-4-1
4590|code|MOV             R2, SP|106-70
4592|code|BLX             ioctl|255-247-228-238
4596|code|CMP             R0, #0|0-40
4598|code|BGE             loc_1206|6-218
4600|code|LDR             R0, =(aBlkgetsize64Io - 0x11FE); "BLKGETSIZE64 ioctl error"|15-72
4602|code|ADD             R0, PC; "BLKGETSIZE64 ioctl error"|120-68
4604|code|BLX             perror|255-247-202-238
4608|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
4612|code|B               loc_1218|8-224
4614|code|LDR             R2, [R5]|42-104
4616|code|LDRD.W          R0, R1, [SP,#0x28+var_28]|221-233-0-1
4620|code|ASRS            R3, R2, #0x1F|211-23
4622|code|BL              sub_52A0|4-240-71-248
4626|code|MOVS            R3, #0|0-35
4628|code|STRD.W          R0, R1, [R6]|198-233-0-1
4632|code|LDR             R2, [SP,#0x28+var_1C]|3-154
4634|code|MOV             R0, R3|24-70
4636|code|LDR             R3, [R4]|35-104
4638|code|CMP             R2, R3|154-66
4640|code|BEQ             loc_1226|1-208
4642|code|BLX             __stack_chk_fail|255-247-166-238
4646|code|ADD             SP, SP, #0x14|5-176
4648|code|POP             {R4-R7,PC}|240-189
4650|data|ALIGN 4|0-191
4652|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11B0|40-109-1-0
4656|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
4660|data|DCD aBlksszgetIoctl - 0x11DC; "BLKSSZGET ioctl error"|104-68-0-0
4664|data|DCD aBlkgetsize64Io - 0x11FE; "BLKGETSIZE64 ioctl error"|94-68-0-0
4668|code|PUSH.W          {R4-R11,LR}|45-233-240-79
4672|code|SUB             SP, SP, #0x3C|143-176
4674|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1250)|72-76
4676|code|MOVS            R5, #0|0-37
4678|code|LDR             R6, =(__stack_chk_guard_ptr - 0x17ED8)|72-78
4680|code|ADD.W           R11, SP, #0x14|13-241-20-11
4684|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
4686|code|MOV.W           LR, #8|79-240-8-14
4690|code|MOV             R3, R11; resp|91-70
4692|code|MOV             R10, R1|138-70
4694|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
4696|code|MOV             R1, R5; pmi|41-70
4698|code|STR             R5, [SP,#0x3C+noisy]; noisy|1-149
4700|code|MOV             R7, R2|23-70
4702|code|STR             R5, [SP,#0x3C+verbose]; verbose|2-149
4704|code|MOV             R2, R5; lba|42-70
4706|code|LDR             R4, [R6]|52-104
4708|code|MOV             R5, R0|5-70
4710|code|STR.W           LR, [SP,#0x3C+mx_resp_len]; mx_resp_len|205-248-0-224
4714|code|STR             R4, [SP,#0x3C+var_8]|13-148
4716|code|BLX             sg_ll_readcap_10|255-247-68-238
4720|code|MOV             R3, R0|3-70
4722|code|CMP             R0, #0|0-40
4724|code|BNE             loc_1350|108-209
4726|code|LDRB.W          R4, [SP,#0x3C+var_28]|157-248-20-64
4730|code|CMP             R4, #0xFF|255-44
4732|code|BNE             loc_1308|68-209
4734|code|LDRB.W          R2, [SP,#0x3C+var_27]|157-248-21-32
4738|code|CMP             R2, #0xFF|255-42
4740|code|BNE             loc_1308|64-209
4742|code|LDRB.W          R2, [SP,#0x3C+var_26]|157-248-22-32
4746|code|CMP             R2, #0xFF|255-42
4748|code|BNE             loc_1308|60-209
4750|code|LDRB.W          R2, [SP,#0x3C+var_25]|157-248-23-32
4754|code|CMP             R2, #0xFF|255-42
4756|code|BNE             loc_1308|56-209
4758|code|STR             R3, [SP,#0x3C+verbose]; noisy|2-147
4760|code|MOV             R1, R3; pmi|25-70
4762|code|STR             R3, [SP,#0x3C+var_30]; verbose|3-147
4764|code|MOVS            R4, #0x20 ; ' '|32-36
4766|code|STR.W           R11, [SP,#0x3C+mx_resp_len]; resp|205-248-0-176
4770|code|MOV             R0, R5; sg_fd|40-70
4772|code|MOVS            R2, #0; llba|0-34
4774|code|MOVS            R3, #0; llba|0-35
4776|code|STR             R4, [SP,#0x3C+noisy]; mx_resp_len|1-148
4778|code|BLX             sg_ll_readcap_16|255-247-44-238
4782|code|CMP             R0, #0|0-40
4784|code|BNE             loc_1350|78-209
4786|code|MOVS            R2, #0|0-34
4788|code|MOVS            R3, #0|0-35
4790|code|MOV             R4, R0|4-70
4792|code|LDRB.W          R0, [R11,R4]|27-248-4-0
4796|code|ADDS            R4, #1|1-52
4798|code|MOV.W           R9, R3,LSL#8|79-234-3-41
4802|code|CMP             R4, #8|8-44
4804|code|ORR.W           R9, R9, R2,LSR#24|73-234-18-105
4808|code|MOV.W           R8, R2,LSL#8|79-234-2-40
4812|code|MOV.W           R1, #0|79-240-0-1
4816|code|ORR.W           R2, R0, R8|64-234-8-2
4820|code|ORR.W           R3, R1, R9|65-234-9-3
4824|code|BNE             loc_12B8|238-209
4826|code|ADDS            R4, R2, #1|84-28
4828|code|LDRB.W          LR, [SP,#0x3C+var_1F]|157-248-29-224
4832|code|ADC.W           R5, R3, #0|67-241-0-5
4836|code|LDRB.W          R3, [SP,#0x3C+var_20]|157-248-28-48
4840|code|LDRB.W          R1, [SP,#0x3C+var_1D]|157-248-31-16
4844|code|MOVS            R0, #0|0-32
4846|code|MOV.W           R2, LR,LSL#16|79-234-14-66
4850|code|LDRB.W          LR, [SP,#0x3C+var_1E]|157-248-30-224
4854|code|ORR.W           R3, R2, R3,LSL#24|66-234-3-99
4858|code|STRD.W          R4, R5, [R10]|202-233-0-69
4862|code|ORRS            R3, R1|11-67
4864|code|ORR.W           R3, R3, LR,LSL#8|67-234-14-35
4868|code|STR             R3, [R7]|59-96
4870|code|B               loc_1350|35-224
4872|code|LDRB.W          R5, [SP,#0x3C+var_27]|157-248-21-80
4876|code|MOVS            R0, #0|0-32
4878|code|LDRB.W          R2, [SP,#0x3C+var_25]|157-248-23-32
4882|code|LDRB.W          LR, [SP,#0x3C+var_26]|157-248-22-224
4886|code|LSLS            R5, R5, #0x10|45-4
4888|code|LDRB.W          R1, [SP,#0x3C+var_23]|157-248-25-16
4892|code|ORR.W           R4, R5, R4,LSL#24|69-234-4-100
4896|code|LDRB.W          R3, [SP,#0x3C+var_24]|157-248-24-48
4900|code|ORRS            R4, R2|20-67
4902|code|LDRB.W          R2, [SP,#0x3C+var_21]|157-248-27-32
4906|code|ORR.W           R4, R4, LR,LSL#8|68-234-14-36
4910|code|LSLS            R1, R1, #0x10|9-4
4912|code|LDRB.W          LR, [SP,#0x3C+var_22]|157-248-26-224
4916|code|ORR.W           R3, R1, R3,LSL#24|65-234-3-99
4920|code|ADDS            R4, #1|1-52
4922|code|ORR.W           R3, R3, R2|67-234-2-3
4926|code|MOV.W           R5, #0|79-240-0-5
4930|code|ADC.W           R5, R5, #0|69-241-0-5
4934|code|ORR.W           R3, R3, LR,LSL#8|67-234-14-35
4938|code|STRD.W          R4, R5, [R10]|202-233-0-69
4942|code|STR             R3, [R7]|59-96
4944|code|LDR             R2, [SP,#0x3C+var_8]|13-154
4946|code|LDR             R3, [R6]|51-104
4948|code|CMP             R2, R3|154-66
4950|code|BEQ             loc_135C|1-208
4952|code|BLX             __stack_chk_fail|255-247-10-238
4956|code|ADD             SP, SP, #0x3C ; '<'|15-176
4958|code|POP.W           {R4-R11,PC}|189-232-240-143
4962|data|ALIGN 4|0-191
4964|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1250|136-108-1-0
4968|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
4972|code|PUSH.W          {R4-R9,LR}|45-233-240-67
4976|code|SUB             SP, SP, #0xC|131-176
4978|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0x1380)|223-248-156-144
4982|code|MOV             R8, R1|136-70
4984|code|LDR             R3, =(__stack_chk_guard_ptr - 0x17ED8)|38-75
4986|code|MOV             R6, R2|22-70
4988|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
4990|code|MOVW            R1, #0x2282; request|66-242-130-33
4994|code|MOV             R2, SP|106-70
4996|code|MOV             R7, R0|7-70
4998|code|LDR.W           R3, [R9,R3]; __stack_chk_guard|89-248-3-48
5002|code|MOV             R5, SP|109-70
5004|code|LDR.W           LR, [R3]|211-248-0-224
5008|code|MOV             R4, R3|28-70
5010|code|STR.W           LR, [SP,#0x28+var_24]|205-248-4-224
5014|code|BLX             ioctl|255-247-18-238
5018|code|CMP             R0, #0|0-40
5020|code|BLT             loc_13A8|4-219
5022|code|LDR             R2, [SP,#0x28+var_28]|0-154
5024|code|MOVW            R3, #0x752F|71-242-47-83
5028|code|CMP             R2, R3|154-66
5030|code|BGT             loc_13BC|9-220
5032|code|LDR             R3, =(stderr_ptr - 0x17ED8)|27-75
5034|code|LDR             R0, =(aSgpDdSgDriverP - 0x13B4); "sgp_dd: sg driver prior to 3.x.y\n"|28-72
5036|code|LDR.W           R3, [R9,R3]; stderr|89-248-3-48
5040|code|ADD             R0, PC; "sgp_dd: sg driver prior to 3.x.y\n"|120-68
5042|code|LDR             R1, [R3]; stream|25-104
5044|code|BLX             fputs|255-247-212-238
5048|code|MOVS            R0, #1|1-32
5050|code|B               loc_13FC|31-224
5052|code|MUL.W           R6, R6, R8|6-251-8-246
5056|code|MOV             R0, R7; fd|56-70
5058|code|MOVW            R1, #0x2275; request|66-242-117-33
5062|code|MOV             R2, SP|106-70
5064|code|STR             R6, [SP,#0x28+var_28]|0-150
5066|code|BLX             ioctl|255-247-248-237
5070|code|CMP             R0, #0|0-40
5072|code|BGE             loc_13DA|3-218
5074|code|LDR             R0, =(aSgpDdSgSetRese - 0x13D8); "sgp_dd: SG_SET_RESERVED_SIZE error"|19-72
5076|code|ADD             R0, PC; "sgp_dd: SG_SET_RESERVED_SIZE error"|120-68
5078|code|BLX             perror|255-247-222-237
5082|code|MOV             R0, R7; fd|56-70
5084|code|MOV             R2, R5|42-70
5086|code|MOVW            R1, #0x227B; request|66-242-123-33
5090|code|MOVS            R3, #1|1-35
5092|code|STR             R3, [SP,#0x28+var_28]|0-147
5094|code|BLX             ioctl|255-247-234-237
5098|code|CMP             R0, #0|0-40
5100|code|BGE             loc_13FA|5-218
5102|code|LDR             R0, =(aSgpDdSgSetForc - 0x13F4); "sgp_dd: SG_SET_FORCE_PACK_ID error"|13-72
5104|code|ADD             R0, PC; "sgp_dd: SG_SET_FORCE_PACK_ID error"|120-68
5106|code|BLX             perror|255-247-208-237
5110|code|MOVS            R0, #0|0-32
5112|code|B               loc_13FC|0-224
5114|code|MOVS            R0, #0|0-32
5116|code|LDR             R2, [SP,#0x28+var_24]|1-154
5118|code|LDR             R3, [R4]|35-104
5120|code|CMP             R2, R3|154-66
5122|code|BEQ             loc_1408|1-208
5124|code|BLX             __stack_chk_fail|255-247-180-237
5128|code|ADD             SP, SP, #0xC|3-176
5130|code|POP.W           {R4-R9,PC}|189-232-240-131
5134|data|ALIGN 0x10|0-191
5136|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1380|88-107-1-0
5140|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
5144|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
5148|data|DCD aSgpDdSgDriverP - 0x13B4; "sgp_dd: sg driver prior to 3.x.y\n"|104-77-0-0
5152|data|DCD aSgpDdSgSetRese - 0x13D8; "sgp_dd: SG_SET_RESERVED_SIZE error"|104-77-0-0
5156|data|DCD aSgpDdSgSetForc - 0x13F4; "sgp_dd: SG_SET_FORCE_PACK_ID error"|112-77-0-0
5160|code|LDR.W           R3, =(_GLOBAL_OFFSET_TABLE_ - 0x143E)|223-248-208-60
5164|code|MOV.W           R2, #0x140; n|79-244-160-114
5168|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5172|code|SUB.W           SP, SP, #0x1240|173-245-146-93
5176|code|SUB             SP, SP, #0x1C|135-176
5178|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5180|code|LDR.W           R4, =(unk_18020 - 0x1450)|223-248-192-76
5184|code|ADD.W           R12, SP, #0x1280+var_40|13-245-146-92
5188|code|STR             R3, [SP,#0x1280+var_1258]|10-147
5190|code|MOV             R5, R3|29-70
5192|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x17ED8)|223-248-184-60
5196|code|ADD             R4, PC; unk_18020|124-68
5198|code|ADD.W           R12, R12, #0x14|12-241-20-12
5202|code|MOV             R7, R0|7-70
5204|code|MOV             R6, R1|14-70
5206|code|ADD.W           R0, R4, #0x18; s|4-241-24-0
5210|code|LDR             R3, [R5,R3]; __stack_chk_guard|235-88
5212|code|MOVS            R1, #0; c|0-33
5214|code|MOV             R8, R1|136-70
5216|code|STR             R1, [SP,#0x1280+var_1218]|26-145
5218|code|STR             R1, [SP,#0x1280+var_1210]|28-145
5220|code|LDR             R3, [R3]|27-104
5222|code|STR             R1, [SP,#0x1280+var_1214]|27-145
5224|code|STR             R1, [SP,#0x1280+var_120C]|29-145
5226|code|STR.W           R3, [R12]|204-248-0-48
5230|code|BLX             memset|255-247-18-238
5234|code|MOVS            R3, #1|1-35
5236|code|CMP             R7, R3|159-66
5238|code|MOV.W           R2, #0x80|79-240-128-2
5242|code|STR             R3, [R4,#(dword_18048 - 0x18020)]|163-98
5244|code|STR.W           R2, [R4,#(dword_1814C - 0x18020)]|196-248-44-33
5248|code|MOV.W           R2, #0xA|79-240-10-2
5252|code|STR.W           R3, [R4,#(dword_180B8 - 0x18020)]|196-248-152-48
5256|code|STR             R2, [R4,#(dword_1804C - 0x18020)]|226-98
5258|code|STR.W           R2, [R4,#(dword_180BC - 0x18020)]|196-248-156-32
5262|code|STRB.W          R8, [SP,#0x1280+var_A2C]|141-248-84-136
5266|code|STRB.W          R8, [SP,#0x1280+var_82C]|141-248-84-138
5270|code|BLE.W           loc_1AF2|64-243-44-131
5274|code|LDR.W           R2, =(aCount - 0x14AA); "count"|223-248-108-44
5278|code|MOV             R5, R3|29-70
5280|code|LDR.W           R9, =(aCdbsz - 0x14B2); "cdbsz"|223-248-104-156
5284|code|MOV             R11, R8|195-70
5286|code|ADD             R2, PC; "count"|122-68
5288|code|STR             R2, [SP,#0x1280+s2]|11-146
5290|code|LDR.W           R2, =(aDeb - 0x14B8); "deb"|223-248-100-44
5294|code|ADD             R9, PC; "cdbsz"|249-68
5296|code|STR.W           R8, [SP,#0x1280+var_1260]|205-248-32-128
5300|code|ADD             R2, PC; "deb"|122-68
5302|code|STR             R2, [SP,#0x1280+var_124C]|13-146
5304|code|LDR.W           R2, =(unk_18020 - 0x14C4)|223-248-88-44
5308|code|STR.W           R8, [SP,#0x1280+var_125C]|205-248-36-128
5312|code|ADD             R2, PC; unk_18020|122-68
5314|code|STR             R2, [SP,#0x1280+var_123C]|17-146
5316|code|LDR.W           R2, =(aVerb - 0x14D0); "verb"|223-248-80-44
5320|code|LDRD.W          R0, R1, [SP,#0x1280+var_1260]|221-233-8-1
5324|code|ADD             R2, PC; "verb"|122-68
5326|code|STR             R2, [SP,#0x1280+var_1240]|16-146
5328|code|LDR.W           R2, =(unk_18008 - 0x14DC)|223-248-72-44
5332|code|STR.W           R8, [SP,#0x1280+var_1250]|205-248-48-128
5336|code|ADD             R2, PC; unk_18008|122-68
5338|code|STRD.W          R0, R1, [SP,#0x1280+var_1248]|205-233-14-1
5342|code|STR             R2, [SP,#0x1280+var_1230]|20-146
5344|code|STR.W           R8, [SP,#0x1280+var_1234]|205-248-76-128
5348|code|STR.W           R8, [SP,#0x1280+var_1238]|205-248-72-128
5352|code|LDR.W           R1, [R6,#4]!; src|86-248-4-31
5356|code|CBZ             R1, loc_155E|185-179
5358|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
5362|code|MOV.W           R2, #0x400; n|79-244-128-98
5366|code|MOV             R0, R4; dest|32-70
5368|code|MOV             R8, R4|160-70
5370|code|BLX             strncpy|255-247-216-237
5374|code|LDRB            R2, [R4]|34-120
5376|code|MOVS            R3, #0|0-35
5378|code|STRB.W          R3, [R4,#0x3FF]|132-248-255-51
5382|code|CMP             R2, #0x3D ; '='|61-42
5384|code|IT NE|24-191
5386|code|CMPNE           R2, R3|154-66
5388|code|BEQ.W           loc_16F8|0-240-244-128
5392|code|LDRB.W          R3, [R8,#1]!|24-248-1-63
5396|code|CMP             R3, #0x3D ; '='|61-43
5398|code|IT NE|24-191
5400|code|CMPNE           R3, #0|0-43
5402|code|BNE             loc_1510|249-209
5404|code|CMP             R3, #0|0-43
5406|code|BEQ             loc_1616|122-208
5408|code|MOVS            R3, #0|0-35
5410|code|STRB.W          R3, [R8]|136-248-0-48
5414|code|LDRB.W          R3, [SP,#0x1280+dest]|157-248-84-62
5418|code|ADD.W           R8, R8, #1|8-241-1-8
5422|code|CMP             R3, #0x62 ; 'b'|98-43
5424|code|MOV             R10, R3|154-70
5426|code|BNE             loc_15DC|83-209
5428|code|ADDW            R2, SP, #0x1280+dest|13-246-84-98
5432|code|LDRB            R1, [R2,#1]|81-120
5434|code|CMP             R1, #0x70 ; 'p'|112-41
5436|code|BEQ             loc_15D0|72-208
5438|code|CMP             R1, #0x73 ; 's'|115-41
5440|code|BNE             loc_15DC|76-209
5442|code|LDRB            R2, [R2,#2]|146-120
5444|code|CMP             R2, #0|0-42
5446|code|BNE             loc_15DC|73-209
5448|code|MOV             R0, R8; buf|64-70
5450|code|BLX             sg_get_num|255-247-248-237
5454|code|LDR.W           R3, =(unk_18020 - 0x1556)|223-248-208-59
5458|code|ADD             R3, PC; unk_18020|123-68
5460|code|STR.W           R0, [R3,#(dword_18148 - 0x18020)]|195-248-40-1
5464|code|ADDS            R0, #1|1-48
5466|code|BEQ.W           loc_1AD8|0-240-189-130
5470|code|ADDS            R5, #1|1-53
5472|code|CMP             R5, R7|189-66
5474|code|BNE             loc_14E8|193-209
5476|code|LDR.W           R3, =(unk_18020 - 0x156C)|223-248-188-59
5480|code|ADD             R3, PC; unk_18020|123-68
5482|code|LDR.W           R3, [R3,#(dword_18148 - 0x18020)]|211-248-40-49
5486|code|CMP             R3, #0|0-43
5488|code|BLE.W           loc_1B10|64-243-206-130
5492|code|LDR             R3, [SP,#0x1280+var_1238]|18-155
5494|code|CMP             R3, #0|0-43
5496|code|BEQ.W           loc_1758|0-240-238-128
5500|code|LDR.W           R3, =(unk_18020 - 0x1586)|223-248-168-59
5504|code|LDR             R2, [SP,#0x1280+var_1238]|18-154
5506|code|ADD             R3, PC; unk_18020|123-68
5508|code|LDR.W           R3, [R3,#(dword_18148 - 0x18020)]|211-248-40-49
5512|code|CMP             R3, R2|147-66
5514|code|BEQ.W           loc_1758|0-240-229-128
5518|code|LDR.W           R0, =(aIfIbsOrObsGive - 0x159E); "If 'ibs' or 'obs' given must be same as"...|223-248-156-11
5522|code|MOVS            R1, #1; size|1-33
5524|code|LDR.W           R3, =dword_110|223-248-152-59
5528|code|MOVS            R2, #0x2D ; '-'; n|45-34
5530|code|ADD             R0, PC; "If 'ibs' or 'obs' given must be same as"...|120-68
5532|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
5534|code|LDR             R3, [R4,R3]|227-88
5536|code|LDR             R3, [R3]; s|27-104
5538|code|BLX             fwrite|255-247-6-237
5542|code|BL              sub_3040|1-240-75-253
5546|code|MOVS            R4, #1|1-36
5548|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x17ED8)|223-248-84-59
5552|code|ADD.W           R2, SP, #0x1280+var_40|13-245-146-82
5556|code|LDR             R1, [SP,#0x1280+var_1258]|10-153
5558|code|ADDS            R2, #0x14|20-50
5560|code|MOV             R0, R4|32-70
5562|code|LDR             R2, [R2]|18-104
5564|code|LDR             R3, [R1,R3]|203-88
5566|code|LDR             R3, [R3]|27-104
5568|code|CMP             R2, R3|154-66
5570|code|BNE.W           loc_1EF2|64-240-150-132
5574|code|ADD.W           SP, SP, #0x1240|13-245-146-93
5578|code|ADD             SP, SP, #0x1C|7-176
5580|code|POP.W           {R4-R11,PC}|189-232-240-143
5584|code|LDRB            R1, [R2,#2]|145-120
5586|code|CMP             R1, #0x74 ; 't'|116-41
5588|code|BNE             loc_15DC|2-209
5590|code|LDRB            R2, [R2,#3]|210-120
5592|code|CMP             R2, #0|0-42
5594|code|BEQ             loc_1660|65-208
5596|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
5600|code|MOV             R1, R9; s2|73-70
5602|code|MOV             R0, R4; s1|32-70
5604|code|BLX             strcmp|255-247-154-236
5608|code|CMP             R0, #0|0-40
5610|code|BEQ             loc_167C|71-208
5612|code|CMP.W           R10, #0x63 ; 'c'|186-241-99-15
5616|code|BNE             loc_161A|19-209
5618|code|LDRB            R2, [R4,#1]|98-120
5620|code|CMP             R2, #0x6F ; 'o'|111-42
5622|code|BNE             loc_161A|16-209
5624|code|LDRB            R2, [R4,#2]|162-120
5626|code|CMP             R2, #0x65 ; 'e'|101-42
5628|code|BNE             loc_161A|13-209
5630|code|LDRB            R2, [R4,#3]|226-120
5632|code|CBNZ            R2, loc_161A|90-185
5634|code|MOV             R0, R8; buf|64-70
5636|code|BLX             sg_get_num|255-247-154-237
5640|code|LDR.W           R3, =(unk_18020 - 0x1610)|223-248-40-59
5644|code|ADD             R3, PC; unk_18020|123-68
5646|code|STR             R0, [R3,#(dword_18054 - 0x18020)]|88-99
5648|code|STR.W           R0, [R3,#(dword_180C4 - 0x18020)]|195-248-164-0
5652|code|B               loc_155E|163-231
5654|code|MOV             R3, R2|19-70
5656|code|B               loc_152E|137-231
5658|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
5662|code|LDR             R1, [SP,#0x1280+s2]; s2|11-153
5664|code|MOV             R0, R4; s1|32-70
5666|code|BLX             strcmp|255-247-124-236
5670|code|CBNZ            R0, loc_1694|168-187
5672|code|LDRB.W          R3, [R8]|152-248-0-48
5676|code|CMP             R3, #0x2D ; '-'|45-43
5678|code|BEQ             loc_170A|108-208
5680|code|MOV             R0, R8; buf|64-70
5682|code|BLX             sg_get_llnum|255-247-78-237
5686|code|LDR             R3, [SP,#0x1280+var_1230]|20-155
5688|code|STRD.W          R0, R1, [R3]|195-233-0-1
5692|code|ADDS            R1, #1|1-49
5694|code|IT EQ|8-191
5696|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
5700|code|BNE             loc_155E|139-209
5702|code|LDR.W           R0, =(aSgpDdBadArgume - 0x1654); "sgp_dd: bad argument to 'count='\n"|223-248-240-10
5706|code|MOVS            R1, #1; size|1-33
5708|code|LDR.W           R3, =dword_110|223-248-224-58
5712|code|ADD             R0, PC; "sgp_dd: bad argument to 'count='\n"|120-68
5714|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
5716|code|MOVS            R2, #0x21 ; '!'; n|33-34
5718|code|LDR             R3, [R4,R3]|227-88
5720|code|LDR             R3, [R3]; s|27-104
5722|code|BLX             fwrite|255-247-170-236
5726|code|B               loc_15AA|164-231
5728|code|MOV             R0, R8; buf|64-70
5730|code|BLX             sg_get_num|255-247-108-237
5734|code|LDR.W           R3, =(unk_18020 - 0x166E)|223-248-212-58
5738|code|ADD             R3, PC; unk_18020|123-68
5740|code|STR.W           R0, [R3,#(dword_1814C - 0x18020)]|195-248-44-1
5744|code|ADDS            R0, #1|1-48
5746|code|BEQ.W           loc_1ABE|0-240-36-130
5750|code|MOV.W           R11, #1|79-240-1-11
5754|code|B               loc_155E|112-231
5756|code|MOV             R0, R8; buf|64-70
5758|code|MOVS            R3, #1|1-35
5760|code|STR             R3, [SP,#0x1280+var_1250]|12-147
5762|code|BLX             sg_get_num|255-247-92-237
5766|code|LDR.W           R3, =(unk_18020 - 0x168E)|223-248-184-58
5770|code|ADD             R3, PC; unk_18020|123-68
5772|code|STR             R0, [R3,#(dword_1804C - 0x18020)]|216-98
5774|code|STR.W           R0, [R3,#(dword_180BC - 0x18020)]|195-248-156-0
5778|code|B               loc_155E|100-231
5780|code|MOV             R0, R4; s1|32-70
5782|code|LDR             R1, [SP,#0x1280+var_124C]; s2|13-153
5784|code|MOVS            R2, #3; n|3-34
5786|code|BLX             strncmp|255-247-104-237
5790|code|CBZ             R0, loc_16FC|104-179
5792|code|MOV             R0, R4; s1|32-70
5794|code|LDR             R1, [SP,#0x1280+var_1240]; s2|16-153
5796|code|MOVS            R2, #4; n|4-34
5798|code|BLX             strncmp|255-247-98-237
5802|code|CBZ             R0, loc_16FC|56-179
5804|code|CMP.W           R10, #0x64 ; 'd'|186-241-100-15
5808|code|BEQ             loc_171E|53-208
5810|code|CMP.W           R10, #0x66 ; 'f'|186-241-102-15
5814|code|BNE             loc_1724|53-209
5816|code|LDRB            R2, [R4,#1]|98-120
5818|code|CMP             R2, #0x75 ; 'u'|117-42
5820|code|BNE.W           loc_17DA|64-240-141-128
5824|code|LDRB            R2, [R4,#2]|162-120
5826|code|CMP             R2, #0x61 ; 'a'|97-42
5828|code|BNE.W           loc_17DA|64-240-137-128
5832|code|LDRB            R2, [R4,#3]|226-120
5834|code|CMP             R2, #0|0-42
5836|code|BNE.W           loc_17DA|64-240-133-128
5840|code|MOV             R0, R8; buf|64-70
5842|code|BLX             sg_get_num|255-247-52-237
5846|code|LSLS            R2, R0, #0x1F|194-7
5848|code|BPL             loc_16E6|5-213
5850|code|LDR.W           R3, =(unk_18020 - 0x16E4)|223-248-104-58
5854|code|MOVS            R2, #1|1-34
5856|code|ADD             R3, PC; unk_18020|123-68
5858|code|STR.W           R2, [R3,#(dword_180DC - 0x18020)]|195-248-188-32
5862|code|LSLS            R3, R0, #0x1E|131-7
5864|code|BPL.W           loc_155E|127-245-57-175
5868|code|LDR.W           R3, =(unk_18020 - 0x16F6)|223-248-88-58
5872|code|MOVS            R2, #1|1-34
5874|code|ADD             R3, PC; unk_18020|123-68
5876|code|STR             R2, [R3,#(dword_1806C - 0x18020)]|218-100
5878|code|B               loc_155E|50-231
5880|code|MOV             R3, R2|19-70
5882|code|B               loc_151C|15-231
5884|code|MOV             R0, R8; buf|64-70
5886|code|BLX             sg_get_num|255-247-30-237
5890|code|LDR             R3, [SP,#0x1280+var_123C]|17-155
5892|code|STR.W           R0, [R3,#0x150]|195-248-80-1
5896|code|B               loc_155E|41-231
5898|code|LDRB.W          R3, [R8,#1]|152-248-1-48
5902|code|CMP             R3, #0x31 ; '1'|49-43
5904|code|BNE             loc_1630|142-209
5906|code|LDRB.W          R3, [R8,#2]|152-248-2-48
5910|code|CMP             R3, #0|0-43
5912|code|BEQ.W           loc_155E|63-244-33-175
5916|code|B               loc_1630|136-231
5918|code|LDRB            R2, [R4,#1]|98-120
5920|code|CMP             R2, #0x69 ; 'i'|105-42
5922|code|BEQ             loc_17BA|74-208
5924|code|CMP.W           R10, #0x69 ; 'i'|186-241-105-15
5928|code|BNE             loc_17DA|87-209
5930|code|ADDW            R2, SP, #0x1280+dest|13-246-84-98
5934|code|LDRB            R1, [R2,#1]|81-120
5936|code|CMP             R1, #0x62 ; 'b'|98-41
5938|code|BEQ.W           loc_1874|0-240-159-128
5942|code|CMP             R1, #0x66 ; 'f'|102-41
5944|code|BNE             loc_17DA|79-209
5946|code|LDRB            R2, [R2,#2]|146-120
5948|code|CMP             R2, #0|0-42
5950|code|BNE             loc_17DA|76-209
5952|code|ADDW            R0, SP, #0x1280+var_A2C; dest|13-246-84-0
5956|code|LDRB            R3, [R0]|3-120
5958|code|CMP             R3, #0|0-43
5960|code|BNE.W           loc_2A6E|65-240-145-129
5964|code|MOV             R1, R8; src|65-70
5966|code|MOV.W           R2, #0x200; n|79-244-0-114
5970|code|BLX             strncpy|255-247-172-236
5974|code|B               loc_155E|2-231
5976|code|LDR             R3, [SP,#0x1280+var_1234]|19-155
5978|code|CBZ             R3, loc_176E|67-177
5980|code|LDR.W           R3, =(unk_18020 - 0x1766)|223-248-236-57
5984|code|LDR             R2, [SP,#0x1280+var_1234]|19-154
5986|code|ADD             R3, PC; unk_18020|123-68
5988|code|LDR.W           R3, [R3,#(dword_18148 - 0x18020)]|211-248-40-49
5992|code|CMP             R3, R2|147-66
5994|code|BNE.W           loc_158E|127-244-16-175
5998|code|LDR             R3, [SP,#0x1280+var_125C]|9-155
6000|code|CMP             R3, #0|0-43
6002|code|BLT.W           loc_1B38|192-242-225-129
6006|code|LDR             R3, [SP,#0x1280+var_1244]|15-155
6008|code|CMP             R3, #0|0-43
6010|code|BLT.W           loc_1B38|192-242-221-129
6014|code|LDRD.W          R0, R1, [SP,#0x1280+var_1260]|221-233-8-1
6018|code|MOV             R3, R0|3-70
6020|code|ORRS            R3, R1|11-67
6022|code|ITE NE|20-191
6024|code|MOVNE           R4, #1|1-36
6026|code|MOVEQ           R4, #0|0-36
6028|code|CMP             R4, #0|0-44
6030|code|BEQ.W           loc_189C|0-240-133-128
6034|code|LDR.W           R3, =(unk_18020 - 0x179A)|223-248-188-57
6038|code|ADD             R3, PC; unk_18020|123-68
6040|code|LDR.W           R3, [R3,#(dword_180C0 - 0x18020)]|211-248-160-48
6044|code|CMP             R3, #0|0-43
6046|code|BLE             loc_189C|125-221
6048|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
6050|code|MOVS            R1, #1; size|1-33
6052|code|LDR.W           R3, =dword_110|223-248-136-57
6056|code|MOVS            R2, #0x28 ; '('; n|40-34
6058|code|LDR.W           R0, =(aCanTUseBothApp - 0x17B4); "Can't use both append and seek switches"...|223-248-168-9
6062|code|LDR             R3, [R4,R3]|227-88
6064|code|ADD             R0, PC; "Can't use both append and seek switches"...|120-68
6066|code|LDR             R3, [R3]; s|27-104
6068|code|BLX             fwrite|255-247-252-235
6072|code|B               loc_15AA|247-230
6074|code|LDRB            R2, [R4,#2]|162-120
6076|code|CMP             R2, #0x6F ; 'o'|111-42
6078|code|BNE             loc_1724|177-209
6080|code|LDRB            R2, [R4,#3]|226-120
6082|code|CMP             R2, #0|0-42
6084|code|BNE             loc_1724|174-209
6086|code|MOV             R0, R8; buf|64-70
6088|code|BLX             sg_get_num|255-247-184-236
6092|code|LDR.W           R3, =(unk_18020 - 0x17D4)|223-248-136-57
6096|code|ADD             R3, PC; unk_18020|123-68
6098|code|STR             R0, [R3,#(dword_18058 - 0x18020)]|152-99
6100|code|STR.W           R0, [R3,#(dword_180C8 - 0x18020)]|195-248-168-0
6104|code|B               loc_155E|193-230
6106|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
6110|code|LDR.W           R1, =(aIflag - 0x17E8); "iflag"|223-248-124-25
6114|code|MOV             R0, R4; s1|32-70
6116|code|ADD             R1, PC; "iflag"|121-68
6118|code|BLX             strcmp|255-247-154-235
6122|code|CMP             R0, #0|0-40
6124|code|BEQ.W           loc_1A9C|0-240-86-129
6128|code|CMP.W           R10, #0x6F ; 'o'|186-241-111-15
6132|code|BEQ.W           loc_1B46|0-240-167-129
6136|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
6140|code|LDR.W           R1, =(aOflag - 0x1806); "oflag"|223-248-96-25
6144|code|MOV             R0, R4; s1|32-70
6146|code|ADD             R1, PC; "oflag"|121-68
6148|code|BLX             strcmp|255-247-138-235
6152|code|CMP             R0, #0|0-40
6154|code|BEQ.W           loc_1B80|0-240-185-129
6158|code|LDR.W           R1, =(aSeek - 0x1818); "seek"|223-248-84-25
6162|code|MOV             R0, R4; s1|32-70
6164|code|ADD             R1, PC; "seek"|121-68
6166|code|BLX             strcmp|255-247-130-235
6170|code|CMP             R0, #0|0-40
6172|code|BEQ.W           loc_1E84|0-240-50-131
6176|code|LDR.W           R1, =(aSkip - 0x182A); "skip"|223-248-68-25
6180|code|MOV             R0, R4; s1|32-70
6182|code|ADD             R1, PC; "skip"|121-68
6184|code|BLX             strcmp|255-247-120-235
6188|code|CMP             R0, #0|0-40
6190|code|BEQ.W           loc_2AE2|1-240-88-129
6194|code|LDR.W           R1, =(aSync - 0x183C); "sync"|223-248-56-25
6198|code|MOV             R0, R4; s1|32-70
6200|code|ADD             R1, PC; "sync"|121-68
6202|code|BLX             strcmp|255-247-112-235
6206|code|CMP             R0, #0|0-40
6208|code|BEQ.W           loc_2AD0|1-240-70-129
6212|code|CMP.W           R10, #0x74 ; 't'|186-241-116-15
6216|code|BNE.W           loc_2A7A|65-240-23-129
6220|code|LDRB            R2, [R4,#1]|98-120
6222|code|CMP             R2, #0x68 ; 'h'|104-42
6224|code|BNE.W           loc_2A7A|65-240-19-129
6228|code|LDRB            R2, [R4,#2]|162-120
6230|code|CMP             R2, #0x72 ; 'r'|114-42
6232|code|BNE.W           loc_2A7A|65-240-15-129
6236|code|LDRB            R2, [R4,#3]|226-120
6238|code|CMP             R2, #0|0-42
6240|code|BNE.W           loc_2A7A|65-240-11-129
6244|code|MOV             R0, R8; buf|64-70
6246|code|BLX             sg_get_num|255-247-106-236
6250|code|LDR.W           R3, =(unk_18008 - 0x1872)|223-248-4-57
6254|code|ADD             R3, PC; unk_18008|123-68
6256|code|STR             R0, [R3,#(dword_18010 - 0x18008)]|152-96
6258|code|B               loc_155E|116-230
6260|code|LDRB            R1, [R2,#2]|145-120
6262|code|CMP             R1, #0x73 ; 's'|115-41
6264|code|BNE             loc_17DA|175-209
6266|code|LDRB            R2, [R2,#3]|210-120
6268|code|CMP             R2, #0|0-42
6270|code|BNE             loc_17DA|172-209
6272|code|MOV             R0, R8; buf|64-70
6274|code|BLX             sg_get_num|255-247-92-236
6278|code|ADDS            R3, R0, #1|67-28
6280|code|STR             R0, [SP,#0x1280+var_1238]|18-144
6282|code|BNE.W           loc_155E|127-244-104-174
6286|code|LDR.W           R0, =(aSgpDdBadArgume_0 - 0x189C); "sgp_dd: bad argument to 'ibs='\n"|223-248-228-8
6290|code|MOVS            R1, #1|1-33
6292|code|LDR.W           R3, =dword_110|223-248-152-56
6296|code|ADD             R0, PC; "sgp_dd: bad argument to 'ibs='\n"|120-68
6298|code|B               loc_1ACA|22-225
6300|code|LDR.W           R3, =(unk_18020 - 0x18A4)|223-248-216-56
6304|code|ADD             R3, PC; unk_18020|123-68
6306|code|LDR.W           R2, [R3,#(dword_1814C - 0x18020)]|211-248-44-33
6310|code|CMP             R2, #0|0-42
6312|code|BLE.W           loc_1C78|64-243-230-129
6316|code|CMP.W           R11, #0|187-241-0-15
6320|code|BNE             loc_18C2|7-209
6322|code|LDR.W           R2, [R3,#(dword_18148 - 0x18020)]|211-248-40-33
6326|code|CMP.W           R2, #0x800|178-245-0-111
6330|code|ITT GE|164-191
6332|code|MOVGE           R2, #0x20 ; ' '|32-34
6334|code|STRGE.W         R2, [R3,#(dword_1814C - 0x18020)]|195-248-44-33
6338|code|LDR.W           R2, =(unk_18008 - 0x18CA)|223-248-184-40
6342|code|ADD             R2, PC; unk_18008|122-68
6344|code|LDR             R3, [R2,#(dword_18010 - 0x18008)]|147-104
6346|code|SUBS            R3, #1|1-59
6348|code|CMP             R3, #0xF|15-43
6350|code|BHI.W           loc_1C68|0-242-203-129
6354|code|LDR.W           R3, =(unk_18020 - 0x18DA)|223-248-172-56
6358|code|ADD             R3, PC; unk_18020|123-68
6360|code|LDR.W           R3, [R3,#(dword_18170 - 0x18020)]|211-248-80-49
6364|code|CBZ             R3, loc_1916|219-177
6366|code|LDR             R5, [SP,#0x1280+var_1258]|10-157
6368|code|MOVS            R1, #1|1-33
6370|code|LDRD.W          R8, R9, [SP,#0x1280+var_1248]|221-233-14-137
6374|code|ADDW            R3, SP, #0x1280+var_A2C|13-246-84-3
6378|code|LDR.W           R0, =dword_110|223-248-68-8
6382|code|LDRD.W          R6, R7, [R2]|210-233-0-103
6386|code|LDR.W           R2, =(aSgpDdIfSSkipLl - 0x1904); "sgp_dd: if=%s skip=%lld of=%s seek=%lld"...|223-248-144-40
6390|code|LDR             R0, [R5,R0]|40-88
6392|code|ADDW            R5, SP, #0x1280+var_82C|13-246-84-37
6396|code|STRD.W          R8, R9, [SP,#0x1280+lba]|205-233-0-137
6400|code|ADD             R2, PC; "sgp_dd: if=%s skip=%lld of=%s seek=%lld"...|122-68
6402|code|LDRD.W          R8, R9, [SP,#0x1280+var_1260]|221-233-8-137
6406|code|STRD.W          R8, R9, [SP,#0x1280+var_1270]|205-233-4-137
6410|code|LDR             R0, [R0]|0-104
6412|code|STRD.W          R6, R7, [SP,#0x1280+var_1268]|205-233-6-103
6416|code|STR             R5, [SP,#0x1280+noisy]|2-149
6418|code|BLX             __fprintf_chk|255-247-234-235
6422|code|LDR.W           R6, =(sub_36C0+1 - 0x1928)|223-248-112-104
6426|code|MOVS            R0, #2|2-32
6428|code|ADDW            R8, SP, #0x1280+var_A2C|13-246-84-8
6432|code|LDR.W           R5, =(unk_18020 - 0x192C)|223-248-104-88
6436|code|ADD             R6, PC; sub_36C0|126-68
6438|code|MOVS            R7, #1|1-39
6440|code|ADD             R5, PC; unk_18020|125-68
6442|code|MOV             R1, R6|49-70
6444|code|BL              sub_2E50|1-240-144-250
6448|code|MOV             R1, R6|49-70
6450|code|MOVS            R0, #3|3-32
6452|code|BL              sub_2E50|1-240-140-250
6456|code|MOV             R1, R6|49-70
6458|code|MOVS            R0, #0xD|13-32
6460|code|BL              sub_2E50|1-240-136-250
6464|code|LDR.W           R1, =(loc_31F8+1 - 0x194A)|223-248-76-24
6468|code|MOVS            R0, #0xA|10-32
6470|code|ADD             R1, PC; loc_31F8|121-68
6472|code|BL              sub_2E50|1-240-130-250
6476|code|LDRB.W          R3, [R8]|152-248-0-48
6480|code|MOVS            R2, #0|0-34
6482|code|STR.W           R7, [R5,#(dword_180A8 - 0x18020)]|197-248-136-112
6486|code|CMP             R3, #0x2D ; '-'|45-43
6488|code|STR             R2, [R5,#(dword_18038 - 0x18020)]|170-97
6490|code|BEQ             loc_1962|2-208
6492|code|CMP             R3, #0|0-43
6494|code|BNE.W           loc_1BCE|64-240-54-129
6498|code|ADDW            R6, SP, #0x1280+var_82C|13-246-84-38
6502|code|LDRB            R3, [R6]|51-120
6504|code|CMP             R3, #0x2D ; '-'|45-43
6506|code|BEQ             loc_1972|2-208
6508|code|CMP             R3, #0|0-43
6510|code|BNE.W           loc_1D9A|64-240-20-130
6514|code|LDR.W           R3, =(unk_18020 - 0x197A)|223-248-32-56
6518|code|ADD             R3, PC; unk_18020|123-68
6520|code|LDR             R0, [R3,#(dword_18038 - 0x18020)]|152-105
6522|code|CBNZ            R0, loc_1986|32-185
6524|code|LDR.W           R4, [R3,#(dword_180A8 - 0x18020)]|211-248-136-64
6528|code|CMP             R4, #1|1-44
6530|code|BEQ.W           loc_2A48|1-240-97-128
6534|code|LDR.W           R3, =(unk_18008 - 0x198E)|223-248-16-56
6538|code|ADD             R3, PC; unk_18008|123-68
6540|code|LDRD.W          R2, R3, [R3]|211-233-0-35
6544|code|CMP             R2, #0|0-42
6546|code|SBCS.W          R1, R3, #0|115-241-0-1
6550|code|BLT.W           loc_1CDA|192-242-160-129
6554|code|LDR.W           R1, =(unk_18020 - 0x19A2)|223-248-0-24
6558|code|ADD             R1, PC; unk_18020|121-68
6560|code|LDR.W           R1, [R1,#(dword_18170 - 0x18020)]|209-248-80-17
6564|code|CMP             R1, #1|1-41
6566|code|BLE             loc_19F0|35-221
6568|code|LDR.W           R0, =(unk_18008 - 0x19B8)|223-248-244-7
6572|code|MOVS            R1, #1|1-33
6574|code|LDR             R6, [SP,#0x1280+var_1258]|10-158
6576|code|LDR.W           R3, =dword_110|223-248-124-55
6580|code|ADD             R0, PC; unk_18008|120-68
6582|code|LDRD.W          R4, R5, [SP,#0x1280+var_1218]|221-233-26-69
6586|code|LDRD.W          R8, R9, [R0]|208-233-0-137
6590|code|LDR             R3, [R6,R3]|243-88
6592|code|LDRD.W          R6, R7, [SP,#0x1280+var_1210]|221-233-28-103
6596|code|LDR.W           R2, =(aStartOfLoopCou - 0x19D0); "Start of loop, count=%lld, in_num_sect="...|223-248-220-39
6600|code|STRD.W          R4, R5, [SP,#0x1280+noisy]|205-233-2-69
6604|code|ADD             R2, PC; "Start of loop, count=%lld, in_num_sect="...|122-68
6606|code|LDR             R0, [R3]|24-104
6608|code|STRD.W          R6, R7, [SP,#0x1280+var_1270]|205-233-4-103
6612|code|STRD.W          R8, R9, [SP,#0x1280+lba]|205-233-0-137
6616|code|BLX             __fprintf_chk|255-247-134-235
6620|code|LDR.W           R3, =(unk_18008 - 0x19E4)|223-248-200-55
6624|code|ADD             R3, PC; unk_18008|123-68
6626|code|LDRD.W          R2, R3, [R3]|211-233-0-35
6630|code|CMP             R2, #0|0-42
6632|code|SBCS.W          R1, R3, #0|115-241-0-1
6636|code|BLT.W           loc_2A2E|193-242-31-128
6640|code|LDR             R1, [SP,#0x1280+var_1250]|12-153
6642|code|CBNZ            R1, loc_1A12|113-185
6644|code|LDR.W           R1, =(unk_18020 - 0x19FC)|223-248-180-23
6648|code|ADD             R1, PC; unk_18020|121-68
6650|code|LDR             R0, [R1,#(dword_18048 - 0x18020)]|136-106
6652|code|CMP             R0, #2|2-40
6654|code|BEQ.W           loc_29E8|0-240-243-135
6658|code|LDR.W           R3, =(unk_18020 - 0x1A0A)|223-248-172-55
6662|code|ADD             R3, PC; unk_18020|123-68
6664|code|LDR.W           R2, [R3,#(dword_180B8 - 0x18020)]|211-248-152-32
6668|code|CMP             R2, #2|2-42
6670|code|BEQ.W           loc_2998|0-240-195-135
6674|code|LDR.W           R3, =(unk_18008 - 0x1A20)|223-248-160-55
6678|code|MOVS            R1, #0; mutexattr|0-33
6680|code|LDR.W           R4, =(unk_18020 - 0x1A26)|223-248-156-71
6684|code|ADD             R3, PC; unk_18008|123-68
6686|code|LDRD.W          R6, R7, [SP,#0x1280+var_1248]|221-233-14-103
6690|code|ADD             R4, PC; unk_18020|124-68
6692|code|LDRD.W          R2, R3, [R3]|211-233-0-35
6696|code|ADD.W           R0, R4, #0x70 ; 'p'; mutex|4-241-112-0
6700|code|STRD.W          R6, R7, [R4,#0x20]|196-233-8-103
6704|code|ADD.W           R5, R4, #0x18|4-241-24-5
6708|code|STRD.W          R6, R7, [R4,#0x50]|196-233-20-103
6712|code|STRD.W          R2, R3, [R4,#0x58]|196-233-22-35
6716|code|STRD.W          R2, R3, [R4,#0x60]|196-233-24-35
6720|code|STRD.W          R2, R3, [R4,#0xC8]|196-233-50-35
6724|code|STRD.W          R2, R3, [R4,#0xD0]|196-233-52-35
6728|code|LDRD.W          R2, R3, [SP,#0x1280+var_1260]|221-233-8-35
6732|code|STRD.W          R2, R3, [R4,#0x90]|196-233-36-35
6736|code|STRD.W          R2, R3, [R4,#0xC0]|196-233-48-35
6740|code|BLX             pthread_mutex_init|255-247-128-234
6744|code|MOV             R1, R0; mutexattr|1-70
6746|code|CMP             R0, #0|0-40
6748|code|BEQ.W           loc_1C92|0-240-25-129
6752|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
6754|code|ADD             R1, SP, #0x1280+var_10AC|117-169
6756|code|LDR.W           R3, =dword_110|223-248-200-54
6760|code|LDR             R3, [R2,R3]|211-88
6762|code|LDR             R4, [R3]|28-104
6764|code|BL              sub_2F48|1-240-108-250
6768|code|LDR.W           R3, =(aSgFinishIo - 0x1A80); "sg_finish_io"|223-248-72-55
6772|code|MOVW            R2, #0x63A|64-242-58-98
6776|code|STR             R2, [SP,#0x1280+count]|1-146
6778|code|MOVS            R1, #1|1-33
6780|code|ADD             R3, PC; "sg_finish_io"|123-68
6782|code|LDR.W           R2, =(aSAtSDS - 0x1A8E); "%s at \"%s\":%d: %s\n"|223-248-64-39
6786|code|ADDS            R3, #0x48 ; 'H'|72-51
6788|code|STR             R3, [SP,#0x1280+lba]|0-147
6790|code|LDR.W           R3, =(aInitInMutex - 0x1A90); "init in_mutex"|223-248-60-55
6794|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
6796|code|ADD             R3, PC; "init in_mutex"|123-68
6798|code|STR             R0, [SP,#0x1280+noisy]|2-144
6800|code|MOV             R0, R4|32-70
6802|code|BLX             __fprintf_chk|255-247-42-235
6806|code|MOVS            R0, #1; status|1-32
6808|code|BLX             exit|255-247-216-234
6812|code|LDR.W           R1, =(unk_18020 - 0x1AA6)|223-248-40-23
6816|code|MOV             R0, R8; src|64-70
6818|code|ADD             R1, PC; unk_18020|121-68
6820|code|ADDS            R1, #0x30 ; '0'|48-49
6822|code|BL              sub_3754|1-240-85-254
6826|code|CMP             R0, #0|0-40
6828|code|BEQ.W           loc_155E|63-244-87-173
6832|code|LDR.W           R0, =(aSgpDdBadArgume_1 - 0x1ABE); "sgp_dd: bad argument to 'iflag='\n"|223-248-24-7
6836|code|MOVS            R1, #1|1-33
6838|code|LDR.W           R3, =dword_110|223-248-120-54
6842|code|ADD             R0, PC; "sgp_dd: bad argument to 'iflag='\n"|120-68
6844|code|B               loc_1652|201-229
6846|code|LDR.W           R0, =(aSgpDdBadArgume_2 - 0x1ACC); "sgp_dd: bad argument to 'bpt='\n"|223-248-16-7
6850|code|MOVS            R1, #1; size|1-33
6852|code|LDR.W           R3, =dword_110|223-248-104-54
6856|code|ADD             R0, PC; "sgp_dd: bad argument to 'bpt='\n"|120-68
6858|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
6860|code|MOVS            R2, #0x1F; n|31-34
6862|code|LDR             R3, [R4,R3]|227-88
6864|code|LDR             R3, [R3]; s|27-104
6866|code|BLX             fwrite|255-247-110-234
6870|code|B               loc_15AA|104-229
6872|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
6874|code|MOVS            R1, #1; size|1-33
6876|code|LDR.W           R3, =dword_110|223-248-80-54
6880|code|MOVS            R2, #0x1E; n|30-34
6882|code|LDR.W           R0, =(aSgpDdBadArgume_3 - 0x1AEC); "sgp_dd: bad argument to 'bs='\n"|223-248-240-6
6886|code|LDR             R3, [R4,R3]|227-88
6888|code|ADD             R0, PC; "sgp_dd: bad argument to 'bs='\n"|120-68
6890|code|LDR             R3, [R3]; s|27-104
6892|code|BLX             fwrite|255-247-96-234
6896|code|B               loc_15AA|91-229
6898|code|STR.W           R8, [SP,#0x1280+var_1260]|205-248-32-128
6902|code|MOV             R11, R8|195-70
6904|code|STR.W           R8, [SP,#0x1280+var_125C]|205-248-36-128
6908|code|LDRD.W          R2, R3, [SP,#0x1280+var_1260]|221-233-8-35
6912|code|STR.W           R8, [SP,#0x1280+var_1250]|205-248-48-128
6916|code|STR.W           R8, [SP,#0x1280+var_1234]|205-248-76-128
6920|code|STRD.W          R2, R3, [SP,#0x1280+var_1248]|205-233-14-35
6924|code|STR.W           R8, [SP,#0x1280+var_1238]|205-248-72-128
6928|code|LDR.W           R0, =(unk_18020 - 0x1B22)|223-248-196-6
6932|code|MOV.W           R4, #0x200|79-244-0-116
6936|code|LDR.W           R2, =dword_110|223-248-20-38
6940|code|MOV             R3, R4|35-70
6942|code|ADD             R0, PC; unk_18020|120-68
6944|code|MOVS            R1, #1|1-33
6946|code|STR.W           R4, [R0,#(dword_18148 - 0x18020)]|192-248-40-65
6950|code|LDR             R0, [SP,#0x1280+var_1258]|10-152
6952|code|LDR             R0, [R0,R2]|128-88
6954|code|LDR.W           R2, =(aAssumeDefaultB - 0x1B34); "Assume default 'bs' (block size) of %d "...|223-248-176-38
6958|code|LDR             R0, [R0]|0-104
6960|code|ADD             R2, PC; "Assume default 'bs' (block size) of %d "...|122-68
6962|code|BLX             __fprintf_chk|255-247-218-234
6966|code|B               loc_1574|29-229
6968|code|LDR.W           R0, =(aSkipAndSeekCan - 0x1B46); "skip and seek cannot be negative\n"|223-248-164-6
6972|code|MOVS            R1, #1|1-33
6974|code|LDR.W           R3, =dword_110|223-248-240-53
6978|code|ADD             R0, PC; "skip and seek cannot be negative\n"|120-68
6980|code|B               loc_1652|133-229
6982|code|LDRB            R2, [R4,#1]|98-120
6984|code|CMP             R2, #0x62 ; 'b'|98-42
6986|code|BEQ             loc_1BA2|42-208
6988|code|CMP             R2, #0x66 ; 'f'|102-42
6990|code|BNE.W           loc_17F8|127-244-83-174
6994|code|LDRB            R2, [R4,#2]|162-120
6996|code|CMP             R2, #0|0-42
6998|code|BNE.W           loc_17F8|127-244-79-174
7002|code|ADDW            R0, SP, #0x1280+var_82C|13-246-84-32
7006|code|LDRB            R3, [R0]|3-120
7008|code|CMP             R3, #0|0-43
7010|code|BEQ.W           loc_174C|63-244-243-173
7014|code|LDR.W           R0, =(aSecondOfArgume - 0x1B74); "Second 'of=' argument??\n"|223-248-124-6
7018|code|MOVS            R1, #1; size|1-33
7020|code|LDR.W           R3, =dword_110|223-248-192-53
7024|code|ADD             R0, PC; "Second 'of=' argument??\n"|120-68
7026|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
7028|code|MOVS            R2, #0x18; n|24-34
7030|code|LDR             R3, [R4,R3]|227-88
7032|code|LDR             R3, [R3]; s|27-104
7034|code|BLX             fwrite|255-247-26-234
7038|code|B               loc_15AA|20-229
7040|code|LDR.W           R1, =(unk_18020 - 0x1B8A)|223-248-100-22
7044|code|MOV             R0, R8; src|64-70
7046|code|ADD             R1, PC; unk_18020|121-68
7048|code|ADDS            R1, #0xA0|160-49
7050|code|BL              sub_3754|1-240-227-253
7054|code|CMP             R0, #0|0-40
7056|code|BEQ.W           loc_155E|63-244-229-172
7060|code|LDR.W           R0, =(aSgpDdBadArgume_4 - 0x1BA2); "sgp_dd: bad argument to 'oflag='\n"|223-248-84-6
7064|code|MOVS            R1, #1|1-33
7066|code|LDR.W           R3, =dword_110|223-248-148-53
7070|code|ADD             R0, PC; "sgp_dd: bad argument to 'oflag='\n"|120-68
7072|code|B               loc_1652|87-229
7074|code|LDRB            R2, [R4,#2]|162-120
7076|code|CMP             R2, #0x73 ; 's'|115-42
7078|code|BNE.W           loc_17F8|127-244-39-174
7082|code|LDRB            R2, [R4,#3]|226-120
7084|code|CMP             R2, #0|0-42
7086|code|BNE.W           loc_17F8|127-244-35-174
7090|code|MOV             R0, R8; buf|64-70
7092|code|BLX             sg_get_num|255-247-194-234
7096|code|ADDS            R3, R0, #1|67-28
7098|code|STR             R0, [SP,#0x1280+var_1234]|19-144
7100|code|BNE.W           loc_155E|127-244-207-172
7104|code|LDR.W           R0, =(aSgpDdBadArgume_5 - 0x1BCE); "sgp_dd: bad argument to 'obs='\n"|223-248-44-6
7108|code|MOVS            R1, #1|1-33
7110|code|LDR.W           R3, =dword_110|223-248-104-53
7114|code|ADD             R0, PC; "sgp_dd: bad argument to 'obs='\n"|120-68
7116|code|B               loc_1ACA|125-231
7118|code|MOV             R0, R8|64-70
7120|code|BL              sub_2EA0|1-240-102-249
7124|code|CMP             R0, #0x40 ; '@'|64-40
7126|code|STR             R0, [R5,#(dword_18048 - 0x18020)]|168-98
7128|code|BEQ.W           loc_2980|0-240-210-134
7132|code|CMP             R0, #0x10|16-40
7134|code|BEQ.W           loc_295C|0-240-189-134
7138|code|CMP             R0, #2|2-40
7140|code|BEQ.W           loc_290C|0-240-146-134
7144|code|LDR             R1, [R5,#(dword_1805C - 0x18020)]|233-107
7146|code|LDR             R3, [R5,#(dword_18068 - 0x18020)]|171-108
7148|code|CMP             R1, #0|0-41
7150|code|IT NE|24-191
7152|code|MOVNE.W         R1, #0x10000|79-244-128-49
7156|code|CMP             R3, #0|0-43
7158|code|BNE.W           loc_23A8|64-240-215-131
7162|code|LDR.W           R3, =(unk_18020 - 0x1C02)|223-248-248-53
7166|code|ADD             R3, PC; unk_18020|123-68
7168|code|LDR             R3, [R3,#(dword_18064 - 0x18020)]|91-108
7170|code|CBZ             R3, loc_1C0C|27-177
7172|code|ORR.W           R1, R1, #0x100000|65-244-128-17
7176|code|ORR.W           R1, R1, #0x1000|65-244-128-81
7180|code|ADDW            R5, SP, #0x1280+var_A2C|13-246-84-5
7184|code|MOV             R0, R5|40-70
7186|code|BLX             __open64_2|255-247-52-234
7190|code|LDR.W           R3, =(unk_18020 - 0x1C1E)|223-248-224-53
7194|code|ADD             R3, PC; unk_18020|123-68
7196|code|CMP             R0, #0|0-40
7198|code|STR             R0, [R3,#(dword_18038 - 0x18020)]|152-97
7200|code|BLT.W           loc_23AE|192-242-197-131
7204|code|LDRD.W          R8, R9, [SP,#0x1280+var_1248]|221-233-14-137
7208|code|MOV             R6, R8|70-70
7210|code|MOV             R7, R9|79-70
7212|code|ORRS.W          R2, R6, R7|86-234-7-2
7216|code|BEQ.W           loc_1962|63-244-151-174
7220|code|LDR.W           R2, [R3,#(dword_18148 - 0x18020)]|211-248-40-33
7224|code|MOVS            R3, #0|0-35
7226|code|STR             R3, [SP,#0x1280+lba]|0-147
7228|code|ASRS            R7, R2, #0x1F|215-23
7230|code|MUL.W           R1, R2, R9|2-251-9-241
7234|code|MLA.W           R1, R8, R7, R1|8-251-7-17
7238|code|UMULL.W         R2, R3, R2, R8|162-251-8-35
7242|code|ADD             R3, R1|11-68
7244|code|BLX             lseek64|255-247-188-233
7248|code|CMP             R0, #0|0-40
7250|code|SBCS.W          R3, R1, #0|113-241-0-3
7254|code|BGE.W           loc_1962|191-246-132-174
7258|code|LDR.W           R2, =(aSgpDdCouldnTSk - 0x1C68); "sgp_dd: couldn't skip to required posit"...|223-248-160-37
7262|code|MOV.W           R1, #0x200|79-244-0-113
7266|code|STR             R5, [SP,#0x1280+count]|1-149
7268|code|ADD             R2, PC; "sgp_dd: couldn't skip to required posit"...|122-68
7270|code|B               loc_22BE|42-227
7272|code|LDR.W           R0, =(aTooFewOrTooMan - 0x1C78); "too few or too many threads requested\n"|223-248-148-5
7276|code|MOVS            R1, #1|1-33
7278|code|LDR.W           R3, =dword_110|223-248-192-52
7282|code|MOVS            R2, #0x26 ; '&'|38-34
7284|code|ADD             R0, PC; "too few or too many threads requested\n"|120-68
7286|code|B               loc_159C|145-228
7288|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
7290|code|MOVS            R1, #1; size|1-33
7292|code|LDR.W           R3, =dword_110|223-248-176-52
7296|code|MOVS            R2, #0x1B; n|27-34
7298|code|LDR.W           R0, =(aBptMustBeGreat - 0x1C8C); "bpt must be greater than 0\n"|223-248-128-5
7302|code|LDR             R3, [R4,R3]|227-88
7304|code|ADD             R0, PC; "bpt must be greater than 0\n"|120-68
7306|code|LDR             R3, [R3]; s|27-104
7308|code|BLX             fwrite|255-247-144-233
7312|code|B               loc_15AA|139-228
7314|code|ADD.W           R0, R4, #0xE0; mutex|4-241-224-0
7318|code|BLX             pthread_mutex_init|255-247-96-233
7322|code|MOV             R1, R0; mutexattr|1-70
7324|code|CMP             R0, #0|0-40
7326|code|BEQ.W           loc_1EB6|0-240-10-129
7330|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
7332|code|ADD             R1, SP, #0x1280+var_102C|149-169
7334|code|LDR.W           R3, =dword_110|223-248-136-52
7338|code|LDR             R3, [R2,R3]|211-88
7340|code|LDR             R4, [R3]|28-104
7342|code|BL              sub_2F48|1-240-75-249
7346|code|LDR.W           R3, =(aSgFinishIo - 0x1CC2); "sg_finish_io"|223-248-84-53
7350|code|MOVW            R2, #0x63C|64-242-60-98
7354|code|STR             R2, [SP,#0x1280+count]|1-146
7356|code|MOVS            R1, #1|1-33
7358|code|ADD             R3, PC; "sg_finish_io"|123-68
7360|code|LDR.W           R2, =(aSAtSDS - 0x1CD0); "%s at \"%s\":%d: %s\n"|223-248-72-37
7364|code|ADDS            R3, #0x48 ; 'H'|72-51
7366|code|STR             R3, [SP,#0x1280+lba]|0-147
7368|code|LDR.W           R3, =(aInitOutMutex - 0x1CD2); "init out_mutex"|223-248-68-53
7372|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
7374|code|ADD             R3, PC; "init out_mutex"|123-68
7376|code|STR             R0, [SP,#0x1280+noisy]|2-144
7378|code|MOV             R0, R4|32-70
7380|code|BLX             __fprintf_chk|255-247-8-234
7384|code|B               loc_1A96|221-230
7386|code|LDR.W           R7, =(unk_18020 - 0x1CEC)|223-248-56-117
7390|code|ADD             R2, SP, #0x1280+newthread|30-170
7392|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
7396|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
7400|code|ADD             R7, PC; unk_18020|127-68
7402|code|SUB.W           R6, R2, #0x10|162-241-16-6
7406|code|STRD.W          R4, R5, [R2,#-0x10]|66-233-4-69
7410|code|LDR             R3, [R7,#(dword_18048 - 0x18020)]|187-106
7412|code|CMP             R3, #2|2-43
7414|code|BEQ.W           loc_234A|0-240-40-131
7418|code|CMP             R3, #0x20 ; ' '|32-43
7420|code|BEQ.W           loc_22E4|0-240-242-130
7424|code|LDRD.W          R2, R3, [SP,#0x1280+var_1218]|221-233-26-35
7428|code|LDRD.W          R4, R5, [SP,#0x1280+var_1248]|221-233-14-69
7432|code|CMP             R4, R2|148-66
7434|code|SBCS.W          R0, R5, R3|117-235-3-0
7438|code|BGE             loc_1D1E|6-218
7440|code|SUBS            R4, R2, R4|20-27
7442|code|SBC.W           R5, R3, R5|99-235-5-5
7446|code|MOV             R2, R4|34-70
7448|code|MOV             R3, R5|43-70
7450|code|STRD.W          R2, R3, [SP,#0x1280+var_1218]|205-233-26-35
7454|code|LDR.W           R7, =(unk_18020 - 0x1D30)|223-248-248-116
7458|code|ADD             R2, SP, #0x1280+newthread|30-170
7460|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
7464|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
7468|code|ADD             R7, PC; unk_18020|127-68
7470|code|SUB.W           R6, R2, #8|162-241-8-6
7474|code|STRD.W          R4, R5, [R2,#-8]|66-233-2-69
7478|code|LDR.W           R3, [R7,#(dword_180B8 - 0x18020)]|215-248-152-48
7482|code|CMP             R3, #2|2-43
7484|code|BEQ.W           loc_1FAC|0-240-54-129
7488|code|CMP             R3, #0x20 ; ' '|32-43
7490|code|BEQ.W           loc_2024|0-240-111-129
7494|code|LDRD.W          R2, R3, [SP,#0x1280+var_1210]|221-233-28-35
7498|code|LDRD.W          R4, R5, [SP,#0x1280+var_1260]|221-233-8-69
7502|code|CMP             R4, R2|148-66
7504|code|SBCS.W          R0, R5, R3|117-235-3-0
7508|code|BGE             loc_1D64|6-218
7510|code|SUBS            R4, R2, R4|20-27
7512|code|SBC.W           R5, R3, R5|99-235-5-5
7516|code|MOV             R2, R4|34-70
7518|code|MOV             R3, R5|43-70
7520|code|STRD.W          R2, R3, [SP,#0x1280+var_1210]|205-233-28-35
7524|code|ADD             R2, SP, #0x1280+newthread|30-170
7526|code|LDRD.W          R0, R1, [R2,#-0x10]|82-233-4-1
7530|code|CMP             R0, #1|1-40
7532|code|SBCS.W          R3, R1, #0|113-241-0-3
7536|code|BLT.W           loc_1F9E|192-242-21-129
7540|code|LDRD.W          R2, R3, [R2,#-8]|82-233-2-35
7544|code|CMP             R2, #1|1-42
7546|code|SBCS.W          R4, R3, #0|115-241-0-4
7550|code|BLT.W           loc_1F32|192-242-216-128
7554|code|LDR.W           R4, =(unk_18008 - 0x1D90)|223-248-152-68
7558|code|CMP             R0, R2|144-66
7560|code|SBCS.W          R5, R1, R3|113-235-3-5
7564|code|ADD             R4, PC; unk_18008|124-68
7566|code|ITT LT|188-191
7568|code|MOVLT           R2, R0|2-70
7570|code|MOVLT           R3, R1|11-70
7572|code|STRD.W          R2, R3, [R4]|196-233-0-35
7576|code|B               loc_1F3A|207-224
7578|code|MOV             R0, R6|48-70
7580|code|LDR.W           R5, =(unk_18020 - 0x1DA8)|223-248-128-84
7584|code|BL              sub_2EA0|1-240-126-248
7588|code|ADD             R5, PC; unk_18020|125-68
7590|code|CMP             R0, #0x10|16-40
7592|code|MOV             R2, R0|2-70
7594|code|STR.W           R0, [R5,#(dword_180B8 - 0x18020)]|197-248-152-0
7598|code|BEQ.W           loc_2430|0-240-63-131
7602|code|CMP             R0, #2|2-40
7604|code|BEQ.W           loc_23D2|0-240-13-131
7608|code|CMP             R0, #8|8-40
7610|code|BEQ.W           loc_245A|0-240-78-131
7614|code|CMP             R0, #4|4-40
7616|code|BEQ.W           loc_22A0|0-240-110-130
7620|code|LDR.W           R2, [R5,#(dword_180CC - 0x18020)]|213-248-172-32
7624|code|MOVS            R1, #0x41 ; 'A'|65-33
7626|code|LDR.W           R3, [R5,#(dword_180D8 - 0x18020)]|213-248-184-48
7630|code|MOVT.W          R1, #1|192-242-1-1
7634|code|CMP             R2, #0|0-42
7636|code|IT EQ|8-191
7638|code|MOVEQ           R1, #0x41 ; 'A'|65-33
7640|code|CBZ             R3, loc_1DDE|11-177
7642|code|ORR.W           R1, R1, #0x80|65-240-128-1
7646|code|LDR.W           R3, =(unk_18020 - 0x1DE6)|223-248-68-52
7650|code|ADD             R3, PC; unk_18020|123-68
7652|code|LDR.W           R3, [R3,#(dword_180D4 - 0x18020)]|211-248-180-48
7656|code|CBZ             R3, loc_1DF2|27-177
7658|code|ORR.W           R1, R1, #0x100000|65-244-128-17
7662|code|ORR.W           R1, R1, #0x1000|65-244-128-81
7666|code|LDR.W           R3, =(unk_18020 - 0x1DFA)|223-248-52-52
7670|code|ADD             R3, PC; unk_18020|123-68
7672|code|LDR.W           R3, [R3,#(dword_180C0 - 0x18020)]|211-248-160-48
7676|code|CBZ             R3, loc_1E02|11-177
7678|code|ORR.W           R1, R1, #0x400|65-244-128-97
7682|code|ADDW            R5, SP, #0x1280+var_82C|13-246-84-37
7686|code|MOV.W           R2, #0x1B6|79-244-219-114
7690|code|MOV             R0, R5|40-70
7692|code|BLX             open64|255-247-244-232
7696|code|LDR.W           R3, =(unk_18020 - 0x1E18)|223-248-24-52
7700|code|ADD             R3, PC; unk_18020|123-68
7702|code|CMP             R0, #0|0-40
7704|code|STR.W           R0, [R3,#(dword_180A8 - 0x18020)]|195-248-136-0
7708|code|BLT.W           loc_22D6|192-242-91-130
7712|code|CMP             R4, #0|0-44
7714|code|BEQ.W           loc_1972|63-244-166-173
7718|code|LDR.W           R3, =(unk_18020 - 0x1E32)|223-248-8-52
7722|code|MOVS            R2, #0|0-34
7724|code|STR             R2, [SP,#0x1280+lba]|0-146
7726|code|ADD             R3, PC; unk_18020|123-68
7728|code|LDRD.W          R6, R7, [SP,#0x1280+var_1260]|221-233-8-103
7732|code|LDR.W           R2, [R3,#(dword_18148 - 0x18020)]|211-248-40-33
7736|code|LDR.W           R0, [R3,#(dword_180A8 - 0x18020)]|211-248-136-0
7740|code|ASRS            R5, R2, #0x1F|213-23
7742|code|MUL.W           R1, R2, R7|2-251-7-241
7746|code|MLA.W           R1, R6, R5, R1|6-251-5-17
7750|code|UMULL.W         R2, R3, R2, R6|162-251-6-35
7754|code|ADD             R3, R1|11-68
7756|code|BLX             lseek64|255-247-188-232
7760|code|CMP             R0, #0|0-40
7762|code|SBCS.W          R3, R1, #0|113-241-0-3
7766|code|BGE.W           loc_1972|191-246-140-173
7770|code|ADDW            R4, SP, #0x1280+var_62C|13-246-84-68
7774|code|LDR             R2, =(aSgpDdCouldnTSe - 0x1E6C); "sgp_dd: couldn't seek to required posit"...|245-74
7776|code|MOV.W           R1, #0x200|79-244-0-113
7780|code|ADDW            R5, SP, #0x1280+var_82C|13-246-84-37
7784|code|ADD             R2, PC; "sgp_dd: couldn't seek to required posit"...|122-68
7786|code|MOV             R0, R4|32-70
7788|code|STR             R2, [SP,#0x1280+lba]|0-146
7790|code|MOV             R3, R1|11-70
7792|code|MOVS            R2, #1|1-34
7794|code|STR             R5, [SP,#0x1280+count]|1-149
7796|code|BLX             __snprintf_chk|255-247-140-233
7800|code|MOV             R0, R4; s|32-70
7802|code|BLX             perror|255-247-140-232
7806|code|MOVS            R4, #0xF|15-36
7808|code|B.W             loc_15AC|255-247-148-187
7812|code|MOV             R0, R8; buf|64-70
7814|code|BLX             sg_get_llnum|255-247-36-233
7818|code|MOV             R3, R1|11-70
7820|code|MOV             R2, R0|2-70
7822|code|STRD.W          R2, R3, [SP,#0x1280+var_1260]|205-233-8-35
7826|code|ADDS            R3, R1, #1|75-28
7828|code|IT EQ|8-191
7830|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
7834|code|BNE.W           loc_155E|127-244-96-171
7838|code|LDR             R0, =(aSgpDdBadArgume_6 - 0x1EA8); "sgp_dd: bad argument to 'seek='\n"|230-72
7840|code|MOVS            R1, #1; size|1-33
7842|code|LDR             R3, =dword_110|163-75
7844|code|ADD             R0, PC; "sgp_dd: bad argument to 'seek='\n"|120-68
7846|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
7848|code|MOVS            R2, #0x20 ; ' '; n|32-34
7850|code|LDR             R3, [R4,R3]|227-88
7852|code|LDR             R3, [R3]; s|27-104
7854|code|BLX             fwrite|255-247-128-232
7858|code|B.W             loc_15AA|255-247-122-187
7862|code|ADD.W           R0, R4, #0x138; mutex|4-245-156-112
7866|code|BLX             pthread_mutex_init|255-247-78-232
7870|code|MOV             R1, R0; cond_attr|1-70
7872|code|CBZ             R0, loc_1EF6|200-177
7874|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
7876|code|ADD             R1, SP, #0x1280+var_FAC|181-169
7878|code|LDR             R3, =dword_110|154-75
7880|code|LDR             R3, [R2,R3]|211-88
7882|code|LDR             R4, [R3]|28-104
7884|code|BL              sub_2F48|1-240-60-248
7888|code|LDR             R3, =(aSgFinishIo - 0x1EDE); "sg_finish_io"|218-75
7890|code|MOVW            R2, #0x63E|64-242-62-98
7894|code|STR             R2, [SP,#0x1280+count]|1-146
7896|code|MOVS            R1, #1|1-33
7898|code|ADD             R3, PC; "sg_finish_io"|123-68
7900|code|LDR             R2, =(aSAtSDS - 0x1EE8); "%s at \"%s\":%d: %s\n"|216-74
7902|code|ADDS            R3, #0x48 ; 'H'|72-51
7904|code|STR             R3, [SP,#0x1280+lba]|0-147
7906|code|LDR             R3, =(aInitAuxMutex - 0x1EEA); "init aux_mutex"|216-75
7908|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
7910|code|ADD             R3, PC; "init aux_mutex"|123-68
7912|code|STR             R0, [SP,#0x1280+noisy]|2-144
7914|code|MOV             R0, R4|32-70
7916|code|BLX             __fprintf_chk|255-247-252-232
7920|code|B               loc_1A96|209-229
7922|code|BLX             __stack_chk_fail|255-247-62-232
7926|code|ADD.W           R0, R4, #0xF8; cond|4-241-248-0
7930|code|BLX             pthread_cond_init|255-247-64-232
7934|code|MOV             R7, R0|7-70
7936|code|CBZ             R0, loc_1F4A|24-179
7938|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
7940|code|ADD             R1, SP, #0x1280+var_F2C|213-169
7942|code|LDR             R3, =dword_110|138-75
7944|code|LDR             R3, [R2,R3]|211-88
7946|code|LDR             R4, [R3]|28-104
7948|code|BL              sub_2F48|1-240-28-248
7952|code|LDR             R3, =(aSgFinishIo - 0x1F1E); "sg_finish_io"|205-75
7954|code|MOV.W           R2, #0x640|79-244-200-98
7958|code|STR             R2, [SP,#0x1280+count]|1-146
7960|code|MOVS            R1, #1|1-33
7962|code|ADD             R3, PC; "sg_finish_io"|123-68
7964|code|LDR             R2, =(aSAtSDS - 0x1F28); "%s at \"%s\":%d: %s\n"|203-74
7966|code|ADDS            R3, #0x48 ; 'H'|72-51
7968|code|STR             R3, [SP,#0x1280+lba]|0-147
7970|code|LDR             R3, =(aInitOutSyncCv - 0x1F2A); "init out_sync_cv"|203-75
7972|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
7974|code|ADD             R3, PC; "init out_sync_cv"|123-68
7976|code|STR             R0, [SP,#0x1280+noisy]|2-144
7978|code|MOV             R0, R4|32-70
7980|code|BLX             __fprintf_chk|255-247-220-232
7984|code|B               loc_1A96|177-229
7986|code|LDR             R3, =(unk_18008 - 0x1F38)|200-75
7988|code|ADD             R3, PC; unk_18008|123-68
7990|code|STRD.W          R0, R1, [R3]|195-233-0-1
7994|code|LDR             R3, =(unk_18020 - 0x1F40)|199-75
7996|code|ADD             R3, PC; unk_18020|123-68
7998|code|LDR.W           R3, [R3,#(dword_18170 - 0x18020)]|211-248-80-49
8002|code|CMP             R3, #1|1-43
8004|code|BGT.W           loc_19A8|63-247-48-173
8008|code|B               loc_19DC|72-229
8010|code|ADD.W           R6, R4, #0x164|4-245-178-118
8014|code|MOV             R0, R6; set|48-70
8016|code|BLX             sigemptyset|255-247-208-232
8020|code|MOVS            R1, #2; signo|2-33
8022|code|MOV             R0, R6; set|48-70
8024|code|BLX             sigaddset|255-247-90-232
8028|code|MOV             R1, R6; newmask|49-70
8030|code|MOV             R0, R7; how|56-70
8032|code|MOV             R2, R7; oldmask|58-70
8034|code|BLX             pthread_sigmask|255-247-62-232
8038|code|MOV             R1, R0; attr|1-70
8040|code|CMP             R0, #0|0-40
8042|code|BEQ.W           loc_2078|0-240-133-128
8046|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
8048|code|ADD             R1, SP, #0x1280+var_EAC|245-169
8050|code|LDR             R3, =dword_110|111-75
8052|code|LDR             R3, [R2,R3]|211-88
8054|code|LDR             R4, [R3]|28-104
8056|code|BL              sub_2F48|0-240-230-255
8060|code|LDR             R3, =(aSgFinishIo - 0x1F8A); "sg_finish_io"|183-75
8062|code|MOVW            R2, #0x645|64-242-69-98
8066|code|STR             R2, [SP,#0x1280+count]|1-146
8068|code|MOVS            R1, #1|1-33
8070|code|ADD             R3, PC; "sg_finish_io"|123-68
8072|code|LDR             R2, =(aSAtSDS - 0x1F94); "%s at \"%s\":%d: %s\n"|181-74
8074|code|ADDS            R3, #0x48 ; 'H'|72-51
8076|code|STR             R3, [SP,#0x1280+lba]|0-147
8078|code|LDR             R3, =(aPthreadSigmask_0 - 0x1F96); "pthread_sigmask"|181-75
8080|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
8082|code|ADD             R3, PC; "pthread_sigmask"|123-68
8084|code|STR             R0, [SP,#0x1280+noisy]|2-144
8086|code|MOV             R0, R4|32-70
8088|code|BLX             __fprintf_chk|255-247-166-232
8092|code|B               loc_1A96|123-229
8094|code|LDR             R3, =(unk_18008 - 0x1FA8)|178-75
8096|code|LDRD.W          R0, R1, [R2,#-8]|82-233-2-1
8100|code|ADD             R3, PC; unk_18008|123-68
8102|code|STRD.W          R0, R1, [R3]|195-233-0-1
8106|code|B               loc_1F3A|198-231
8108|code|SUB.W           R4, R2, #0x18|162-241-24-4
8112|code|LDR.W           R0, [R7,#(dword_180A8 - 0x18020)]|215-248-136-0
8116|code|MOV             R1, R6|49-70
8118|code|MOV             R2, R4|34-70
8120|code|BL              sub_123C|255-247-64-249
8124|code|CMP             R0, #2|2-40
8126|code|BNE             loc_1FE0|15-209
8128|code|LDR             R5, [SP,#0x1280+var_1258]|10-157
8130|code|MOVS            R1, #1; size|1-33
8132|code|LDR             R3, =dword_110|90-75
8134|code|MOVS            R2, #0x2F ; '/'; n|47-34
8136|code|LDR             R0, =(aUnitAttentionM - 0x1FD0); "Unit attention, media changed(out), con"...|168-72
8138|code|LDR             R3, [R5,R3]|235-88
8140|code|ADD             R0, PC; "Unit attention, media changed(out), con"...|120-68
8142|code|LDR             R3, [R3]; s|27-104
8144|code|BLX             fwrite|254-247-238-239
8148|code|LDR.W           R0, [R7,#(dword_180A8 - 0x18020)]|215-248-136-0
8152|code|MOV             R1, R6|49-70
8154|code|MOV             R2, R4|34-70
8156|code|BL              sub_123C|255-247-46-249
8160|code|CMP             R0, #0|0-40
8162|code|BEQ.W           loc_1D46|63-244-176-174
8166|code|CMP             R0, #9|9-40
8168|code|BEQ             loc_201A|23-208
8170|code|CMP             R0, #2|2-40
8172|code|MOV.W           R1, #1|79-240-1-1
8176|code|LDR             R0, =dword_110|79-72
8178|code|BEQ             loc_2014|15-208
8180|code|LDR             R2, =(aUnableToReadCa - 0x1FFA); "Unable to read capacity on %s\n"|158-74
8182|code|ADD             R2, PC; "Unable to read capacity on %s\n"|122-68
8184|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
8186|code|ADDW            R3, SP, #0x1280+var_82C|13-246-84-35
8190|code|LDR             R0, [R4,R0]|32-88
8192|code|LDR             R0, [R0]|0-104
8194|code|BLX             __fprintf_chk|255-247-114-232
8198|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
8202|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
8206|code|STRD.W          R0, R1, [SP,#0x1280+var_1210]|205-233-28-1
8210|code|B               loc_1D46|152-230
8212|code|LDR             R2, =(aReadCapacityFa - 0x201A); "read capacity failed, %s not ready\n"|151-74
8214|code|ADD             R2, PC; "read capacity failed, %s not ready\n"|122-68
8216|code|B               loc_1FF8|238-231
8218|code|LDR             R2, =(aReadCapacityNo - 0x2024); "read capacity not supported on %s\n"|151-74
8220|code|MOVS            R1, #1|1-33
8222|code|LDR             R0, =dword_110|68-72
8224|code|ADD             R2, PC; "read capacity not supported on %s\n"|122-68
8226|code|B               loc_1FF8|233-231
8228|code|LDR.W           R0, [R7,#(dword_180A8 - 0x18020)]|215-248-136-0
8232|code|SUBS            R2, #0x18|24-58
8234|code|MOV             R1, R6|49-70
8236|code|BL              sub_11A8|255-247-188-248
8240|code|CBZ             R0, loc_204C|96-177
8242|code|LDR             R7, [SP,#0x1280+var_1258]|10-159
8244|code|MOVS            R1, #1|1-33
8246|code|LDR             R0, =dword_110|62-72
8248|code|ADDW            R3, SP, #0x1280+var_82C|13-246-84-35
8252|code|LDR             R2, =(aUnableToReadBl - 0x2044); "Unable to read block capacity on %s\n"|143-74
8254|code|LDR             R0, [R7,R0]|56-88
8256|code|ADD             R2, PC; "Unable to read block capacity on %s\n"|122-68
8258|code|LDR             R0, [R0]|0-104
8260|code|BLX             __fprintf_chk|255-247-80-232
8264|code|STRD.W          R4, R5, [R6]|198-233-0-69
8268|code|LDR             R3, =(unk_18020 - 0x2054)|140-75
8270|code|LDR             R4, [SP,#0x1280+var_1220]|24-156
8272|code|ADD             R3, PC; unk_18020|123-68
8274|code|LDR.W           R5, [R3,#(dword_18148 - 0x18020)]|211-248-40-81
8278|code|CMP             R5, R4|165-66
8280|code|BEQ.W           loc_1D46|63-244-117-174
8284|code|LDR             R6, [SP,#0x1280+var_1258]|10-158
8286|code|MOVS            R1, #1|1-33
8288|code|LDR             R0, =dword_110|51-72
8290|code|ADDW            R3, SP, #0x1280+var_82C|13-246-84-35
8294|code|LDR             R2, =(aBlockSizeOnSCo - 0x206E); "block size on %s confusion: bs=%d, from"...|135-74
8296|code|LDR             R0, [R6,R0]|48-88
8298|code|ADD             R2, PC; "block size on %s confusion: bs=%d, from"...|122-68
8300|code|STR             R5, [SP,#0x1280+lba]|0-149
8302|code|STR             R4, [SP,#0x1280+count]|1-148
8304|code|LDR             R0, [R0]|0-104
8306|code|BLX             __fprintf_chk|255-247-58-232
8310|code|B               loc_2006|198-231
8312|code|LDR             R2, =(loc_3658+1 - 0x2084)|131-74
8314|code|MOV             R3, R5; arg|43-70
8316|code|ADD.W           R0, R4, #0x1EC; newthread|4-245-246-112
8320|code|ADD             R2, PC; loc_3658 ; start_routine|122-68
8322|code|BLX             pthread_create|254-247-180-239
8326|code|MOV             R3, R0|3-70
8328|code|CMP             R0, #0|0-40
8330|code|BNE.W           loc_284E|64-240-224-131
8334|code|LDR.W           R2, [R4,#(dword_18180 - 0x18020)]|212-248-96-33
8338|code|CMP             R2, #0|0-42
8340|code|BNE.W           loc_282C|64-240-202-131
8344|code|LDRD.W          R2, R3, [R4,#0xD0]|212-233-52-35
8348|code|CMP             R2, #1|1-42
8350|code|SBCS.W          R3, R3, #0|115-241-0-3
8354|code|BLT.W           loc_2622|192-242-190-130
8358|code|LDR             R3, =(unk_18008 - 0x20AC)|121-75
8360|code|ADD             R3, PC; unk_18008|123-68
8362|code|LDR             R3, [R3,#(dword_18010 - 0x18008)]|155-104
8364|code|CMP             R3, #0|0-43
8366|code|BLE.W           loc_2604|64-243-169-130
8370|code|LDR             R4, =(unk_18020 - 0x20B8)|119-76
8372|code|ADD             R4, PC; unk_18020|124-68
8374|code|ADD.W           R0, R4, #0xE0; mutex|4-241-224-0
8378|code|ADD.W           R5, R4, #0x18|4-241-24-5
8382|code|BLX             pthread_mutex_lock|254-247-70-239
8386|code|MOV             R1, R0; attr|1-70
8388|code|CMP             R0, #0|0-40
8390|code|BEQ.W           loc_2468|0-240-207-129
8394|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
8396|code|ADDW            R1, SP, #0x1280+var_DAC|13-242-212-65
8400|code|LDR             R3, =dword_110|23-75
8402|code|LDR             R3, [R2,R3]|211-88
8404|code|LDR             R4, [R3]|28-104
8406|code|BL              sub_2F48|0-240-55-255
8410|code|LDR             R3, =(aSgFinishIo - 0x20E8); "sg_finish_io"|110-75
8412|code|MOVW            R2, #0x654|64-242-84-98
8416|code|STR             R2, [SP,#0x1280+count]|1-146
8418|code|MOVS            R1, #1|1-33
8420|code|ADD             R3, PC; "sg_finish_io"|123-68
8422|code|LDR             R2, =(aSAtSDS - 0x20F2); "%s at \"%s\":%d: %s\n"|108-74
8424|code|ADDS            R3, #0x48 ; 'H'|72-51
8426|code|STR             R3, [SP,#0x1280+lba]|0-147
8428|code|LDR             R3, =(aLockOutMutex - 0x20F4); "lock out_mutex"|107-75
8430|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
8432|code|ADD             R3, PC; "lock out_mutex"|123-68
8434|code|STR             R0, [SP,#0x1280+noisy]|2-144
8436|code|MOV             R0, R4|32-70
8438|code|BLX             __fprintf_chk|254-247-248-239
8442|code|B               loc_1A96|204-228
8444|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x143E|154-106-1-0
8448|data|DCD unk_18020 - 0x1450|208-107-1-0
8452|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
8456|data|DCD aCount - 0x14AA; "count"|202-80-0-0
8460|data|DCD aCdbsz - 0x14B2; "cdbsz"|186-80-0-0
8464|data|DCD aDeb - 0x14B8; "deb"|232-80-0-0
8468|data|DCD unk_18020 - 0x14C4|92-107-1-0
8472|data|DCD aVerb - 0x14D0; "verb"|212-80-0-0
8476|data|DCD unk_18008 - 0x14DC|44-107-1-0
8480|data|DCD unk_18020 - 0x1556|202-106-1-0
8484|data|DCD unk_18020 - 0x156C|180-106-1-0
8488|data|DCD unk_18020 - 0x1586|154-106-1-0
8492|data|DCD aIfIbsOrObsGive - 0x159E; "If 'ibs' or 'obs' given must be same as"...|226-81-0-0
8496|data|DCD dword_110|16-1-0-0
8500|data|DCD unk_18020 - 0x1610|16-106-1-0
8504|data|DCD aSgpDdBadArgume - 0x1654; "sgp_dd: bad argument to 'count='\n"|40-79-0-0
8508|data|DCD unk_18020 - 0x166E|178-105-1-0
8512|data|DCD unk_18020 - 0x168E|146-105-1-0
8516|data|DCD unk_18020 - 0x16E4|60-105-1-0
8520|data|DCD unk_18020 - 0x16F6|42-105-1-0
8524|data|DCD unk_18020 - 0x1766|186-104-1-0
8528|data|DCD unk_18020 - 0x179A|134-104-1-0
8532|data|DCD aCanTUseBothApp - 0x17B4; "Can't use both append and seek switches"...|32-80-0-0
8536|data|DCD unk_18020 - 0x17D4|76-104-1-0
8540|data|DCD aIflag - 0x17E8; "iflag"|0-78-0-0
8544|data|DCD aOflag - 0x1806; "oflag"|74-78-0-0
8548|data|DCD aSeek - 0x1818; "seek"|100-78-0-0
8552|data|DCD aSkip - 0x182A; "skip"|126-78-0-0
8556|data|DCD aSync - 0x183C; "sync"|152-78-0-0
8560|data|DCD unk_18008 - 0x1872|150-103-1-0
8564|data|DCD aSgpDdBadArgume_0 - 0x189C; "sgp_dd: bad argument to 'ibs='\n"|16-77-0-0
8568|data|DCD unk_18020 - 0x18A4|124-103-1-0
8572|data|DCD unk_18008 - 0x18CA|62-103-1-0
8576|data|DCD unk_18020 - 0x18DA|70-103-1-0
8580|data|DCD aSgpDdIfSSkipLl - 0x1904; "sgp_dd: if=%s skip=%lld of=%s seek=%lld"...|64-79-0-0
8584|data|DCD sub_36C0+1 - 0x1928|153-29-0-0
8588|data|DCD unk_18020 - 0x192C|244-102-1-0
8592|data|DCD loc_31F8+1 - 0x194A|175-24-0-0
8596|data|DCD unk_18020 - 0x197A|166-102-1-0
8600|data|DCD unk_18008 - 0x198E|122-102-1-0
8604|data|DCD unk_18020 - 0x19A2|126-102-1-0
8608|data|DCD unk_18008 - 0x19B8|80-102-1-0
8612|data|DCD aStartOfLoopCou - 0x19D0; "Start of loop, count=%lld, in_num_sect="...|196-81-0-0
8616|data|DCD unk_18008 - 0x19E4|36-102-1-0
8620|data|DCD unk_18020 - 0x19FC|36-102-1-0
8624|data|DCD unk_18020 - 0x1A0A|22-102-1-0
8628|data|DCD unk_18008 - 0x1A20|232-101-1-0
8632|data|DCD unk_18020 - 0x1A26|250-101-1-0
8636|data|DCD aSgFinishIo - 0x1A80; "sg_finish_io"|116-59-0-0
8640|data|DCD aSAtSDS - 0x1A8E; "%s at \"%s\":%d: %s\n"|50-71-0-0
8644|data|DCD aInitInMutex - 0x1A90; "init in_mutex"|232-81-0-0
8648|data|DCD unk_18020 - 0x1AA6|122-101-1-0
8652|data|DCD aSgpDdBadArgume_1 - 0x1ABE; "sgp_dd: bad argument to 'iflag='\n"|50-75-0-0
8656|data|DCD aSgpDdBadArgume_2 - 0x1ACC; "sgp_dd: bad argument to 'bpt='\n"|96-74-0-0
8660|data|DCD aSgpDdBadArgume_3 - 0x1AEC; "sgp_dd: bad argument to 'bs='\n"|96-74-0-0
8664|data|DCD unk_18020 - 0x1B22|254-100-1-0
8668|data|DCD aAssumeDefaultB - 0x1B34; "Assume default 'bs' (block size) of %d "...|28-76-0-0
8672|data|DCD aSkipAndSeekCan - 0x1B46; "skip and seek cannot be negative\n"|106-76-0-0
8676|data|DCD aSecondOfArgume - 0x1B74; "Second 'of=' argument??\n"|192-74-0-0
8680|data|DCD unk_18020 - 0x1B8A|150-100-1-0
8684|data|DCD aSgpDdBadArgume_4 - 0x1BA2; "sgp_dd: bad argument to 'oflag='\n"|182-74-0-0
8688|data|DCD aSgpDdBadArgume_5 - 0x1BCE; "sgp_dd: bad argument to 'obs='\n"|70-74-0-0
8692|data|DCD unk_18020 - 0x1C02|30-100-1-0
8696|data|DCD unk_18020 - 0x1C1E|2-100-1-0
8700|data|DCD aSgpDdCouldnTSk - 0x1C68; "sgp_dd: couldn't skip to required posit"...|176-76-0-0
8704|data|DCD aTooFewOrTooMan - 0x1C78; "too few or too many threads requested\n"|164-75-0-0
8708|data|DCD aBptMustBeGreat - 0x1C8C; "bpt must be greater than 0\n"|116-75-0-0
8712|data|DCD aSgFinishIo - 0x1CC2; "sg_finish_io"|50-57-0-0
8716|data|DCD aSAtSDS - 0x1CD0; "%s at \"%s\":%d: %s\n"|240-68-0-0
8720|data|DCD aInitOutMutex - 0x1CD2; "init out_mutex"|182-79-0-0
8724|data|DCD unk_18020 - 0x1CEC|52-99-1-0
8728|data|DCD unk_18020 - 0x1D30|240-98-1-0
8732|data|DCD unk_18008 - 0x1D90|120-98-1-0
8736|data|DCD unk_18020 - 0x1DA8|120-98-1-0
8740|data|DCD unk_18020 - 0x1DE6|58-98-1-0
8744|data|DCD unk_18020 - 0x1DFA|38-98-1-0
8748|data|DCD unk_18020 - 0x1E18|8-98-1-0
8752|data|DCD unk_18020 - 0x1E32|238-97-1-0
8756|data|DCD aSgpDdCouldnTSe - 0x1E6C; "sgp_dd: couldn't seek to required posit"...|96-75-0-0
8760|data|DCD aSgpDdBadArgume_6 - 0x1EA8; "sgp_dd: bad argument to 'seek='\n"|220-71-0-0
8764|data|DCD aSgFinishIo - 0x1EDE; "sg_finish_io"|22-55-0-0
8768|data|DCD aSAtSDS - 0x1EE8; "%s at \"%s\":%d: %s\n"|216-66-0-0
8772|data|DCD aInitAuxMutex - 0x1EEA; "init aux_mutex"|174-77-0-0
8776|data|DCD aSgFinishIo - 0x1F1E; "sg_finish_io"|214-54-0-0
8780|data|DCD aSAtSDS - 0x1F28; "%s at \"%s\":%d: %s\n"|152-66-0-0
8784|data|DCD aInitOutSyncCv - 0x1F2A; "init out_sync_cv"|126-77-0-0
8788|data|DCD unk_18008 - 0x1F38|208-96-1-0
8792|data|DCD unk_18020 - 0x1F40|224-96-1-0
8796|data|DCD aSgFinishIo - 0x1F8A; "sg_finish_io"|106-54-0-0
8800|data|DCD aSAtSDS - 0x1F94; "%s at \"%s\":%d: %s\n"|44-66-0-0
8804|data|DCD aPthreadSigmask_0 - 0x1F96; "pthread_sigmask"|38-77-0-0
8808|data|DCD unk_18008 - 0x1FA8|96-96-1-0
8812|data|DCD aUnitAttentionM - 0x1FD0; "Unit attention, media changed(out), con"...|96-75-0-0
8816|data|DCD aUnableToReadCa - 0x1FFA; "Unable to read capacity on %s\n"|186-74-0-0
8820|data|DCD aReadCapacityFa - 0x201A; "read capacity failed, %s not ready\n"|118-74-0-0
8824|data|DCD aReadCapacityNo - 0x2024; "read capacity not supported on %s\n"|72-74-0-0
8828|data|DCD aUnableToReadBl - 0x2044; "Unable to read block capacity on %s\n"|144-74-0-0
8832|data|DCD unk_18020 - 0x2054|204-95-1-0
8836|data|DCD aBlockSizeOnSCo - 0x206E; "block size on %s confusion: bs=%d, from"...|242-74-0-0
8840|data|DCD loc_3658+1 - 0x2084|213-21-0-0
8844|data|DCD unk_18008 - 0x20AC|92-95-1-0
8848|data|DCD unk_18020 - 0x20B8|104-95-1-0
8852|data|DCD aSgFinishIo - 0x20E8; "sg_finish_io"|12-53-0-0
8856|data|DCD aSAtSDS - 0x20F2; "%s at \"%s\":%d: %s\n"|206-64-0-0
8860|data|DCD aLockOutMutex - 0x20F4; "lock out_mutex"|232-66-0-0
8864|code|MOV             R0, R6|48-70
8866|code|MOVS            R1, #1|1-33
8868|code|BLX             open64|254-247-168-238
8872|code|CMP             R0, #0|0-40
8874|code|STR.W           R0, [R5,#(dword_180A8 - 0x18020)]|197-248-136-0
8878|code|BGE.W           loc_1E20|191-246-183-173
8882|code|LDR.W           R2, =(aSgpDdCouldNotO - 0x22C0); "sgp_dd: could not open %s for raw writi"...|223-248-192-40
8886|code|MOV.W           R1, #0x200|79-244-0-113
8890|code|STR             R6, [SP,#0x1280+count]|1-150
8892|code|ADD             R2, PC; "sgp_dd: could not open %s for raw writi"...|122-68
8894|code|ADDW            R4, SP, #0x1280+var_62C|13-246-84-68
8898|code|STR             R2, [SP,#0x1280+lba]|0-146
8900|code|MOV             R3, R1|11-70
8902|code|MOVS            R2, #1|1-34
8904|code|MOV             R0, R4|32-70
8906|code|BLX             __snprintf_chk|254-247-98-239
8910|code|MOV             R0, R4; s|32-70
8912|code|BLX             perror|254-247-96-238
8916|code|B               loc_1E7E|211-229
8918|code|LDR.W           R2, =(aSgpDdCouldNotO_0 - 0x22E4); "sgp_dd: could not open %s for writing"|223-248-160-40
8922|code|MOV.W           R1, #0x200|79-244-0-113
8926|code|STR             R5, [SP,#0x1280+count]|1-149
8928|code|ADD             R2, PC; "sgp_dd: could not open %s for writing"|122-68
8930|code|B               loc_22BE|236-231
8932|code|SUBS            R2, #0x1C|28-58
8934|code|MOV             R1, R6|49-70
8936|code|BL              sub_11A8|254-247-94-255
8940|code|CBZ             R0, loc_230C|112-177
8942|code|LDR             R7, [SP,#0x1280+var_1258]|10-159
8944|code|MOVS            R1, #1|1-33
8946|code|LDR.W           R0, =dword_110|223-248-136-8
8950|code|ADDW            R3, SP, #0x1280+var_A2C|13-246-84-3
8954|code|LDR.W           R2, =(aUnableToReadBl - 0x2304); "Unable to read block capacity on %s\n"|223-248-132-40
8958|code|LDR             R0, [R7,R0]|56-88
8960|code|ADD             R2, PC; "Unable to read block capacity on %s\n"|122-68
8962|code|LDR             R0, [R0]|0-104
8964|code|BLX             __fprintf_chk|254-247-240-238
8968|code|STRD.W          R4, R5, [R6]|198-233-0-69
8972|code|LDR.W           R3, =(unk_18020 - 0x2316)|223-248-116-56
8976|code|LDR             R4, [SP,#0x1280+var_1224]|23-156
8978|code|ADD             R3, PC; unk_18020|123-68
8980|code|LDR.W           R5, [R3,#(dword_18148 - 0x18020)]|211-248-40-81
8984|code|CMP             R5, R4|165-66
8986|code|BEQ.W           loc_1D00|63-244-241-172
8990|code|LDR.W           R0, =dword_110|223-248-92-8
8994|code|MOVS            R1, #1|1-33
8996|code|LDR             R6, [SP,#0x1280+var_1258]|10-158
8998|code|ADDW            R3, SP, #0x1280+var_A2C|13-246-84-3
9002|code|LDR.W           R2, =(aBlockSizeOnSCo_0 - 0x2334); "block size on %s confusion; bs=%d, from"...|223-248-92-40
9006|code|LDR             R0, [R6,R0]|48-88
9008|code|ADD             R2, PC; "block size on %s confusion; bs=%d, from"...|122-68
9010|code|STR             R5, [SP,#0x1280+lba]|0-149
9012|code|STR             R4, [SP,#0x1280+count]|1-148
9014|code|LDR             R0, [R0]|0-104
9016|code|BLX             __fprintf_chk|254-247-214-238
9020|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
9024|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
9028|code|STRD.W          R0, R1, [SP,#0x1280+var_1218]|205-233-26-1
9032|code|B               loc_1D00|218-228
9034|code|SUB.W           R4, R2, #0x1C|162-241-28-4
9038|code|MOV             R1, R6|49-70
9040|code|MOV             R2, R4|34-70
9042|code|BL              sub_123C|254-247-115-255
9046|code|CMP             R0, #2|2-40
9048|code|BNE             loc_237C|16-209
9050|code|LDR             R5, [SP,#0x1280+var_1258]|10-157
9052|code|MOVS            R1, #1; size|1-33
9054|code|LDR.W           R3, =dword_110|223-248-28-56
9058|code|MOVS            R2, #0x2E ; '.'; n|46-34
9060|code|LDR.W           R0, =(aUnitAttentionM_0 - 0x236E); "Unit attention, media changed(in), cont"...|223-248-36-8
9064|code|LDR             R3, [R5,R3]|235-88
9066|code|ADD             R0, PC; "Unit attention, media changed(in), cont"...|120-68
9068|code|LDR             R3, [R3]; s|27-104
9070|code|BLX             fwrite|254-247-32-238
9074|code|LDR             R0, [R7,#(dword_18038 - 0x18020)]|184-105
9076|code|MOV             R1, R6|49-70
9078|code|MOV             R2, R4|34-70
9080|code|BL              sub_123C|254-247-96-255
9084|code|CMP             R0, #0|0-40
9086|code|BEQ.W           loc_1D00|63-244-191-172
9090|code|CMP             R0, #9|9-40
9092|code|BEQ             loc_23C4|30-208
9094|code|CMP             R0, #2|2-40
9096|code|MOV.W           R1, #1|79-240-1-1
9100|code|LDR.W           R0, =dword_110|223-248-236-7
9104|code|BEQ             loc_23BC|20-208
9106|code|LDR.W           R2, =(aUnableToReadCa - 0x239A); "Unable to read capacity on %s\n"|223-248-252-39
9110|code|ADD             R2, PC; "Unable to read capacity on %s\n"|122-68
9112|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
9114|code|ADDW            R3, SP, #0x1280+var_A2C|13-246-84-3
9118|code|LDR             R0, [R4,R0]|32-88
9120|code|LDR             R0, [R0]|0-104
9122|code|BLX             __fprintf_chk|254-247-162-238
9126|code|B               loc_233C|201-231
9128|code|ORR.W           R1, R1, #0x80|65-240-128-1
9132|code|B               loc_1BFA|37-228
9134|code|LDR.W           R2, =(aSgpDdCouldNotO_1 - 0x23BC); "sgp_dd: could not open %s for reading"|223-248-228-39
9138|code|MOV.W           R1, #0x200|79-244-0-113
9142|code|STR             R5, [SP,#0x1280+count]|1-149
9144|code|ADD             R2, PC; "sgp_dd: could not open %s for reading"|122-68
9146|code|B               loc_22BE|128-231
9148|code|LDR.W           R2, =(aReadCapacityFa - 0x23C4); "read capacity failed, %s not ready\n"|223-248-216-39
9152|code|ADD             R2, PC; "read capacity failed, %s not ready\n"|122-68
9154|code|B               loc_2398|233-231
9156|code|LDR.W           R2, =(aReadCapacityNo - 0x23D2); "read capacity not supported on %s\n"|223-248-212-39
9160|code|MOVS            R1, #1|1-33
9162|code|LDR.W           R0, =dword_110|223-248-176-7
9166|code|ADD             R2, PC; "read capacity not supported on %s\n"|122-68
9168|code|B               loc_2398|226-231
9170|code|LDR.W           R0, [R5,#(dword_180D8 - 0x18020)]|213-248-184-0
9174|code|MOVS            R3, #2|2-35
9176|code|LDR.W           R1, [R5,#(dword_180CC - 0x18020)]|213-248-172-16
9180|code|MOVT.W          R3, #1|192-242-1-3
9184|code|CMP             R1, #0|0-41
9186|code|ITE EQ|12-191
9188|code|MOVEQ           R1, R2|17-70
9190|code|MOVNE           R1, R3|25-70
9192|code|CBZ             R0, loc_23EE|8-177
9194|code|ORR.W           R1, R1, #0x80|65-240-128-1
9198|code|LDR.W           R3, =(unk_18020 - 0x23F6)|223-248-176-55
9202|code|ADD             R3, PC; unk_18020|123-68
9204|code|LDR.W           R3, [R3,#(dword_180D4 - 0x18020)]|211-248-180-48
9208|code|CBZ             R3, loc_2402|27-177
9210|code|ORR.W           R1, R1, #0x100000|65-244-128-17
9214|code|ORR.W           R1, R1, #0x1000|65-244-128-81
9218|code|ADDW            R4, SP, #0x1280+var_82C|13-246-84-36
9222|code|MOV             R0, R4|32-70
9224|code|BLX             __open64_2|254-247-56-238
9228|code|LDR.W           R3, =(unk_18020 - 0x2414)|223-248-148-55
9232|code|ADD             R3, PC; unk_18020|123-68
9234|code|CMP             R0, #0|0-40
9236|code|STR.W           R0, [R3,#(dword_180A8 - 0x18020)]|195-248-136-0
9240|code|BLT             loc_244C|24-219
9242|code|LDR.W           R1, [R3,#(dword_18148 - 0x18020)]|211-248-40-17
9246|code|LDR.W           R2, [R3,#(dword_1814C - 0x18020)]|211-248-44-33
9250|code|BL              sub_136C|254-247-163-255
9254|code|CMP             R0, #0|0-40
9256|code|BNE.W           loc_1E7E|127-244-41-173
9260|code|B.W             loc_1972|255-247-161-186
9264|code|LDR.W           R4, =dword_110|223-248-72-71
9268|code|MOV             R3, R6|51-70
9270|code|LDR.W           R2, =(aSgpDdUnableToU - 0x2444); "sgp_dd: unable to use scsi tape device "...|223-248-112-39
9274|code|MOVS            R1, #1|1-33
9276|code|MOV             R0, R4|32-70
9278|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
9280|code|ADD             R2, PC; "sgp_dd: unable to use scsi tape device "...|122-68
9282|code|LDR             R0, [R4,R0]|32-88
9284|code|LDR             R0, [R0]|0-104
9286|code|BLX             __fprintf_chk|254-247-80-238
9290|code|B               loc_1E7E|24-229
9292|code|LDR.W           R2, =(aSgpDdCouldNotO_2 - 0x245A); "sgp_dd: could not open %s for sg writin"...|223-248-92-39
9296|code|MOV.W           R1, #0x200|79-244-0-113
9300|code|STR             R4, [SP,#0x1280+count]|1-148
9302|code|ADD             R2, PC; "sgp_dd: could not open %s for sg writin"...|122-68
9304|code|B               loc_22BE|49-231
9306|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
9310|code|LDR             R0, [R5,#(dword_18038 - 0x18020)]|168-105
9312|code|STR.W           R3, [R5,#(dword_180A8 - 0x18020)]|197-248-136-48
9316|code|B.W             loc_1986|255-247-143-186
9320|code|LDR.W           R2, =(sub_3BC0+1 - 0x2474)|223-248-68-39
9324|code|MOV             R3, R5; arg|43-70
9326|code|ADD             R0, SP, #0x1280+newthread; newthread|30-168
9328|code|ADD             R2, PC; sub_3BC0 ; start_routine|122-68
9330|code|BLX             pthread_create|254-247-188-237
9334|code|CMP             R0, #0|0-40
9336|code|BNE.W           loc_2770|64-240-122-129
9340|code|LDR.W           R3, [R4,#(dword_18170 - 0x18020)]|212-248-80-49
9344|code|CBZ             R3, loc_249A|91-177
9346|code|LDR.W           R3, =dword_110|223-248-248-54
9350|code|MOVS            R1, #1; size|1-33
9352|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
9354|code|MOVS            R2, #0x1B; n|27-34
9356|code|LDR.W           R0, =(aStartingWorker - 0x2496); "Starting worker thread k=0\n"|223-248-36-7
9360|code|LDR             R3, [R4,R3]|227-88
9362|code|ADD             R0, PC; "Starting worker thread k=0\n"|120-68
9364|code|LDR             R3, [R3]; s|27-104
9366|code|BLX             fwrite|254-247-140-237
9370|code|LDR.W           R3, =(sub_3240+1 - 0x24A6)|223-248-28-55
9374|code|ADD             R0, SP, #0x1280+env; env|46-168
9376|code|MOVS            R1, #0; savemask|0-33
9378|code|ADD             R3, PC; sub_3240|123-68
9380|code|STR             R3, [SP,#0x1280+var_122C]|21-147
9382|code|BLX             __sigsetjmp|254-247-50-238
9386|code|CMP             R0, #0|0-40
9388|code|BNE.W           loc_275E|64-240-87-129
9392|code|ADD             R5, SP, #0x1280+env|46-173
9394|code|MOV             R0, R5; buf|40-70
9396|code|BLX             __pthread_register_cancel|254-247-44-237
9400|code|LDR.W           R0, =(unk_18020 - 0x24C0)|223-248-0-7
9404|code|ADD             R0, PC; unk_18020|120-68
9406|code|ADD.W           R4, R0, #0xE0|0-241-224-4
9410|code|ADDS            R0, #0xF8; cond|248-48
9412|code|MOV             R1, R4; mutex|33-70
9414|code|BLX             pthread_cond_wait|254-247-52-238
9418|code|CBZ             R0, loc_2508|232-177
9420|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
9422|code|ADDW            R1, SP, #0x1280+var_CAC|13-242-212-81
9426|code|LDR.W           R3, =dword_110|223-248-168-54
9430|code|LDR             R3, [R2,R3]|211-88
9432|code|LDR             R4, [R3]|28-104
9434|code|BL              sub_2F48|0-240-53-253
9438|code|LDR.W           R3, =(aSgFinishIo - 0x24EE); "sg_finish_io"|223-248-224-54
9442|code|MOVW            R2, #0x65E|64-242-94-98
9446|code|STR             R2, [SP,#0x1280+count]|1-146
9448|code|MOVS            R1, #1|1-33
9450|code|ADD             R3, PC; "sg_finish_io"|123-68
9452|code|LDR.W           R2, =(aSAtSDS - 0x24FC); "%s at \"%s\":%d: %s\n"|223-248-212-38
9456|code|ADDS            R3, #0x48 ; 'H'|72-51
9458|code|STR             R3, [SP,#0x1280+lba]|0-147
9460|code|LDR.W           R3, =(aCondOutSyncCv - 0x24FE); "cond out_sync_cv"|223-248-208-54
9464|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
9466|code|ADD             R3, PC; "cond out_sync_cv"|123-68
9468|code|STR             R0, [SP,#0x1280+noisy]|2-144
9470|code|MOV             R0, R4|32-70
9472|code|BLX             __fprintf_chk|254-247-242-237
9476|code|B.W             loc_1A96|255-247-199-186
9480|code|MOV             R0, R5; buf|40-70
9482|code|BLX             __pthread_unregister_cancel|254-247-202-237
9486|code|MOV             R0, R4; mutex|32-70
9488|code|BLX             pthread_mutex_unlock|254-247-216-236
9492|code|CMP             R0, #0|0-40
9494|code|BNE.W           loc_2722|64-240-4-129
9498|code|LDR.W           R10, =(unk_18020 - 0x2530)|223-248-176-166
9502|code|ADD.W           R9, SP, #0x1280+newthread|13-241-120-9
9506|code|LDR.W           R8, =(unk_18008 - 0x2536)|223-248-172-134
9510|code|MOVS            R4, #1|1-36
9512|code|LDR.W           R7, =(sub_3BC0+1 - 0x2538)|223-248-168-118
9516|code|ADD             R10, PC; unk_18020|250-68
9518|code|LDR.W           R5, =(aStartingWorker_0 - 0x253E); "Starting worker thread k=%d\n"|223-248-168-86
9522|code|ADD             R8, PC; unk_18008|248-68
9524|code|ADD             R7, PC; sub_3BC0|127-68
9526|code|ADD.W           R6, R10, #0x18|10-241-24-6
9530|code|ADD             R5, PC; "Starting worker thread k=%d\n"|125-68
9532|code|LDR.W           R11, [SP,#0x1280+var_1258]|221-248-40-176
9536|code|B               loc_2544|0-224
9538|code|ADDS            R4, #1|1-52
9540|code|LDR.W           R3, [R8,#(dword_18010 - 0x18008)]|216-248-8-48
9544|code|CMP             R4, R3|156-66
9546|code|BGE             loc_25B6|52-218
9548|code|ADD.W           R0, R9, R4,LSL#2; newthread|9-235-132-0
9552|code|MOVS            R1, #0; attr|0-33
9554|code|MOV             R2, R7; start_routine|58-70
9556|code|MOV             R3, R6; arg|51-70
9558|code|BLX             pthread_create|254-247-74-237
9562|code|CBNZ            R0, loc_257A|112-185
9564|code|LDR.W           R3, [R10,#(dword_18170 - 0x18020)]|218-248-80-49
9568|code|CMP             R3, #0|0-43
9570|code|BEQ             loc_2542|238-208
9572|code|LDR.W           R0, =dword_110|223-248-20-6
9576|code|MOVS            R1, #1|1-33
9578|code|MOV             R2, R5|42-70
9580|code|MOV             R3, R4|35-70
9582|code|LDR.W           R0, [R11,R0]|91-248-0-0
9586|code|LDR             R0, [R0]|0-104
9588|code|BLX             __fprintf_chk|254-247-184-237
9592|code|B               loc_2542|227-231
9594|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
9596|code|ADDW            R1, SP, #0x1280+var_BAC|13-242-212-97
9600|code|LDR.W           R3, =dword_110|223-248-248-53
9604|code|LDR             R3, [R2,R3]|211-88
9606|code|LDR             R4, [R3]|28-104
9608|code|BL              sub_2F48|0-240-222-252
9612|code|LDR.W           R3, =(aSgFinishIo - 0x259C); "sg_finish_io"|223-248-76-54
9616|code|MOVW            R2, #0x667|64-242-103-98
9620|code|STR             R2, [SP,#0x1280+count]|1-146
9622|code|MOVS            R1, #1|1-33
9624|code|ADD             R3, PC; "sg_finish_io"|123-68
9626|code|LDR.W           R2, =(aSAtSDS - 0x25AA); "%s at \"%s\":%d: %s\n"|223-248-68-38
9630|code|ADDS            R3, #0x48 ; 'H'|72-51
9632|code|STR             R3, [SP,#0x1280+lba]|0-147
9634|code|LDR.W           R3, =(aPthreadCreate_0 - 0x25AC); "pthread_create"|223-248-64-54
9638|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
9640|code|ADD             R3, PC; "pthread_create"|123-68
9642|code|STR             R0, [SP,#0x1280+noisy]|2-144
9644|code|MOV             R0, R4|32-70
9646|code|BLX             __fprintf_chk|254-247-156-237
9650|code|B.W             loc_1A96|255-247-112-186
9654|code|LDR.W           R7, =(unk_18008 - 0x25C8)|223-248-48-118
9658|code|MOVS            R4, #0|0-36
9660|code|LDR.W           R6, =(unk_18020 - 0x25CA)|223-248-44-102
9664|code|LDR.W           R5, =(aWorkerThreadKD - 0x25D0); "Worker thread k=%d terminated\n"|223-248-44-86
9668|code|ADD             R7, PC; unk_18008|127-68
9670|code|ADD             R6, PC; unk_18020|126-68
9672|code|LDR.W           R8, [SP,#0x1280+var_1258]|221-248-40-128
9676|code|ADD             R5, PC; "Worker thread k=%d terminated\n"|125-68
9678|code|B               loc_25FE|22-224
9680|code|ADD             R3, SP, #0x1280+newthread|30-171
9682|code|ADD             R1, SP, #0x1280+thread_return; thread_return|25-169
9684|code|LDR.W           R0, [R3,R4,LSL#2]; th|83-248-36-0
9688|code|BLX             pthread_join|254-247-146-237
9692|code|CMP             R0, #0|0-40
9694|code|BNE.W           loc_26E6|64-240-130-128
9698|code|LDR.W           R3, [R6,#(dword_18170 - 0x18020)]|214-248-80-49
9702|code|CBZ             R3, loc_25FC|75-177
9704|code|LDR.W           R0, =dword_110|223-248-144-5
9708|code|MOVS            R1, #1|1-33
9710|code|MOV             R2, R5|42-70
9712|code|MOV             R3, R4|35-70
9714|code|LDR.W           R0, [R8,R0]|88-248-0-0
9718|code|LDR             R0, [R0]|0-104
9720|code|BLX             __fprintf_chk|254-247-118-237
9724|code|ADDS            R4, #1|1-52
9726|code|LDR             R3, [R7,#(dword_18010 - 0x18008)]|187-104
9728|code|CMP             R4, R3|156-66
9730|code|BLT             loc_25D0|229-219
9732|code|LDR.W           R3, =(unk_18020 - 0x260C)|223-248-236-53
9736|code|ADD             R3, PC; unk_18020|123-68
9738|code|LDR.W           R2, [R3,#(dword_18180 - 0x18020)]|211-248-96-33
9742|code|CBZ             R2, loc_2622|66-177
9744|code|LDR.W           R2, [R3,#(dword_18178 - 0x18020)]|211-248-88-33
9748|code|CBNZ            R2, loc_261C|18-185
9750|code|LDR.W           R3, [R3,#(dword_1817C - 0x18020)]|211-248-92-49
9754|code|CBZ             R3, loc_2622|19-177
9756|code|MOVS            R0, #0|0-32
9758|code|BL              sub_3090|0-240-55-253
9762|code|LDR.W           R5, =(unk_18020 - 0x262A)|223-248-212-85
9766|code|ADD             R5, PC; unk_18020|125-68
9768|code|LDR.W           R3, [R5,#(dword_18208 - 0x18020)]|213-248-232-49
9772|code|CBZ             R3, loc_2638|35-177
9774|code|LDR.W           R3, [R5,#(dword_180B8 - 0x18020)]|213-248-152-48
9778|code|CMP             R3, #2|2-43
9780|code|BEQ.W           loc_2882|0-240-37-129
9784|code|LDR.W           R4, =(unk_18020 - 0x2640)|223-248-192-69
9788|code|ADD             R4, PC; unk_18020|124-68
9790|code|LDR.W           R0, [R4,#(dword_1820C - 0x18020)]; th|212-248-236-1
9794|code|BLX             pthread_cancel|254-247-58-237
9798|code|CMP             R0, #0|0-40
9800|code|BNE.W           loc_27F2|64-240-211-128
9804|code|LDR             R0, [R4,#(dword_18038 - 0x18020)]; fd|160-105
9806|code|CBZ             R0, loc_2654|8-177
9808|code|BLX             close|254-247-152-237
9812|code|LDR.W           R3, =(unk_18020 - 0x265C)|223-248-168-53
9816|code|ADD             R3, PC; unk_18020|123-68
9818|code|LDR.W           R0, [R3,#(dword_180A8 - 0x18020)]; fd|211-248-136-0
9822|code|CMP             R0, #1|1-40
9824|code|BEQ             loc_266E|5-208
9826|code|LDR.W           R3, [R3,#(dword_180B8 - 0x18020)]|211-248-152-48
9830|code|CMP             R3, #8|8-43
9832|code|BEQ             loc_266E|1-208
9834|code|BLX             close|254-247-140-237
9838|code|LDR.W           R3, =(unk_18020 - 0x2676)|223-248-148-53
9842|code|ADD             R3, PC; unk_18020|123-68
9844|code|LDRD.W          R6, R7, [R3,#0xC8]|211-233-50-103
9848|code|LDR.W           R4, [R3,#(dword_18204 - 0x18020)]|211-248-228-65
9852|code|ORRS.W          R3, R6, R7|86-234-7-3
9856|code|BEQ             loc_26A2|15-208
9858|code|LDR             R0, [SP,#0x1280+var_1258]|10-152
9860|code|MOVS            R1, #1|1-33
9862|code|LDR.W           R3, =dword_110|223-248-244-52
9866|code|LDR.W           R2, =(aSomeErrorOccur - 0x2694); ">>>> Some error occurred, remaining blo"...|223-248-124-37
9870|code|LDR             R3, [R0,R3]|195-88
9872|code|ADD             R2, PC; ">>>> Some error occurred, remaining blo"...|122-68
9874|code|STRD.W          R6, R7, [SP,#0x1280+lba]|205-233-0-103
9878|code|LDR             R0, [R3]|24-104
9880|code|BLX             __fprintf_chk|254-247-38-237
9884|code|CMP             R4, #0|0-44
9886|code|IT EQ|8-191
9888|code|MOVEQ           R4, #0x63 ; 'c'|99-36
9890|code|LDR.W           R0, =(aSgpDdBadArgume_6+0x20 - 0x26AA); ""|223-248-104-5
9894|code|ADD             R0, PC; ""|120-68
9896|code|BL              sub_2F7C|0-240-104-252
9900|code|LDR.W           R3, =(unk_18020 - 0x26B4)|223-248-96-53
9904|code|ADD             R3, PC; unk_18020|123-68
9906|code|LDR.W           R3, [R3,#(dword_18150 - 0x18020)]|211-248-48-49
9910|code|CMP             R3, #0|0-43
9912|code|BNE             loc_27AC|120-209
9914|code|LDR.W           R3, =(unk_18020 - 0x26C2)|223-248-88-53
9918|code|ADD             R3, PC; unk_18020|123-68
9920|code|LDR.W           R3, [R3,#(dword_18154 - 0x18020)]|211-248-52-49
9924|code|CBZ             R3, loc_26DC|83-177
9926|code|LDR.W           R0, =dword_110|223-248-180-4
9930|code|MOVS            R1, #1|1-33
9932|code|LDR             R5, [SP,#0x1280+var_1258]|10-157
9934|code|LDR.W           R2, =(aNonZeroSumOfRe - 0x26D8); ">> Non-zero sum of residual counts=%d\n"|223-248-72-37
9938|code|LDR             R0, [R5,R0]|40-88
9940|code|ADD             R2, PC; ">> Non-zero sum of residual counts=%d\n"|122-68
9942|code|LDR             R0, [R0]|0-104
9944|code|BLX             __fprintf_chk|254-247-6-237
9948|code|CMP             R4, #0|0-44
9950|code|IT LT|184-191
9952|code|MOVLT           R4, #0x63 ; 'c'|99-36
9954|code|B.W             loc_15AC|254-247-99-191
9958|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
9960|code|ADDW            R1, SP, #0x1280+var_B2C|13-242-84-113
9964|code|LDR.W           R3, =dword_110|223-248-140-52
9968|code|LDR             R3, [R2,R3]|211-88
9970|code|LDR             R4, [R3]|28-104
9972|code|BL              sub_2F48|0-240-40-252
9976|code|LDR.W           R3, =(aSgFinishIo - 0x2708); "sg_finish_io"|223-248-32-53
9980|code|MOVW            R2, #0x66F|64-242-111-98
9984|code|STR             R2, [SP,#0x1280+count]|1-146
9986|code|MOVS            R1, #1|1-33
9988|code|ADD             R3, PC; "sg_finish_io"|123-68
9990|code|LDR.W           R2, =(aSAtSDS - 0x2716); "%s at \"%s\":%d: %s\n"|223-248-24-37
9994|code|ADDS            R3, #0x48 ; 'H'|72-51
9996|code|STR             R3, [SP,#0x1280+lba]|0-147
9998|code|LDR.W           R3, =(aPthreadJoin_0 - 0x2718); "pthread_join"|223-248-20-53
10002|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
10004|code|ADD             R3, PC; "pthread_join"|123-68
10006|code|STR             R0, [SP,#0x1280+noisy]|2-144
10008|code|MOV             R0, R4|32-70
10010|code|BLX             __fprintf_chk|254-247-230-236
10014|code|B.W             loc_1A96|255-247-186-185
10018|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
10020|code|ADDW            R1, SP, #0x1280+var_C2C|13-242-84-97
10024|code|LDR.W           R3, =dword_110|223-248-80-52
10028|code|LDR             R3, [R2,R3]|211-88
10030|code|LDR             R4, [R3]|28-104
10032|code|BL              sub_2F48|0-240-10-252
10036|code|LDR.W           R3, =(aSgFinishIo - 0x2744); "sg_finish_io"|223-248-240-52
10040|code|MOVW            R2, #0x661|64-242-97-98
10044|code|STR             R2, [SP,#0x1280+count]|1-146
10046|code|MOVS            R1, #1|1-33
10048|code|ADD             R3, PC; "sg_finish_io"|123-68
10050|code|LDR.W           R2, =(aSAtSDS - 0x2752); "%s at \"%s\":%d: %s\n"|223-248-232-36
10054|code|ADDS            R3, #0x48 ; 'H'|72-51
10056|code|STR             R3, [SP,#0x1280+lba]|0-147
10058|code|LDR.W           R3, =(aUnlockOutMutex - 0x2754); "unlock out_mutex"|223-248-228-52
10062|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
10064|code|ADD             R3, PC; "unlock out_mutex"|123-68
10066|code|STR             R0, [SP,#0x1280+noisy]|2-144
10068|code|MOV             R0, R4|32-70
10070|code|BLX             __fprintf_chk|254-247-200-236
10074|code|B.W             loc_1A96|255-247-156-185
10078|code|LDR.W           R0, =(unk_18020 - 0x2768)|223-248-212-4
10082|code|LDR             R3, [SP,#0x1280+var_122C]|21-155
10084|code|ADD             R0, PC; unk_18020|120-68
10086|code|ADDS            R0, #0x18|24-48
10088|code|BLX             R3|152-71
10090|code|ADD             R0, SP, #0x1280+env; buf|46-168
10092|code|BLX             __pthread_unwind_next|254-247-182-236
10096|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
10098|code|ADDW            R1, SP, #0x1280+var_D2C|13-242-84-81
10102|code|LDR.W           R3, =dword_110|223-248-4-52
10106|code|LDR             R3, [R2,R3]|211-88
10108|code|LDR             R4, [R3]|28-104
10110|code|BL              sub_2F48|0-240-227-251
10114|code|LDR.W           R3, =(aSgFinishIo - 0x2792); "sg_finish_io"|223-248-180-52
10118|code|MOVW            R2, #0x657|64-242-87-98
10122|code|STR             R2, [SP,#0x1280+count]|1-146
10124|code|MOVS            R1, #1|1-33
10126|code|ADD             R3, PC; "sg_finish_io"|123-68
10128|code|LDR.W           R2, =(aSAtSDS - 0x27A0); "%s at \"%s\":%d: %s\n"|223-248-168-36
10132|code|ADDS            R3, #0x48 ; 'H'|72-51
10134|code|STR             R3, [SP,#0x1280+lba]|0-147
10136|code|LDR.W           R3, =(aPthreadCreate_0 - 0x27A2); "pthread_create"|223-248-164-52
10140|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
10142|code|ADD             R3, PC; "pthread_create"|123-68
10144|code|STR             R0, [SP,#0x1280+noisy]|2-144
10146|code|MOV             R0, R4|32-70
10148|code|BLX             __fprintf_chk|254-247-160-236
10152|code|B.W             loc_1A96|255-247-117-185
10156|code|LDR             R0, [SP,#0x1280+var_1258]|10-152
10158|code|MOVS            R1, #1|1-33
10160|code|LDR             R5, =dword_110|242-77
10162|code|LDR.W           R7, =(aProcScsiSgAllo - 0x27C0); "/proc/scsi/sg/allow_dio"|223-248-144-116
10166|code|LDR.W           R2, =(aDirectIoReques - 0x27C2); ">> Direct IO requested but incomplete %"...|223-248-144-36
10170|code|LDR             R5, [R0,R5]|69-89
10172|code|ADD             R7, PC; "/proc/scsi/sg/allow_dio"|127-68
10174|code|ADD             R2, PC; ">> Direct IO requested but incomplete %"...|122-68
10176|code|LDR             R0, [R5]|40-104
10178|code|BLX             __fprintf_chk|254-247-146-236
10182|code|MOV             R0, R7|56-70
10184|code|MOVS            R1, #0|0-33
10186|code|BLX             open64|254-247-22-236
10190|code|SUBS.W          R8, R0, #0|176-241-0-8
10194|code|BLT.W           loc_26BA|255-246-114-175
10198|code|ADD             R6, SP, #0x1280+newthread|30-174
10200|code|MOVS            R2, #1; nbytes|1-34
10202|code|SUB.W           R1, R6, #0x1D; buf|166-241-29-1
10206|code|BLX             read|254-247-170-235
10210|code|CMP             R0, #1|1-40
10212|code|MOV             R1, R0|1-70
10214|code|BEQ.W           loc_28F4|0-240-133-128
10218|code|MOV             R0, R8; fd|64-70
10220|code|BLX             close|254-247-202-236
10224|code|B               loc_26BA|99-231
10226|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
10228|code|ADDW            R1, SP, #0x1280+var_AAC|13-242-212-113
10232|code|LDR             R3, =dword_110|224-75
10234|code|LDR             R3, [R2,R3]|211-88
10236|code|LDR             R4, [R3]|28-104
10238|code|BL              sub_2F48|0-240-163-251
10242|code|LDR.W           R3, =(aSgFinishIo - 0x2812); "sg_finish_io"|223-248-72-52
10246|code|MOVW            R2, #0x687|64-242-135-98
10250|code|STR             R2, [SP,#0x1280+count]|1-146
10252|code|MOVS            R1, #1|1-33
10254|code|ADD             R3, PC; "sg_finish_io"|123-68
10256|code|LDR.W           R2, =(aSAtSDS - 0x2820); "%s at \"%s\":%d: %s\n"|223-248-60-36
10260|code|ADDS            R3, #0x48 ; 'H'|72-51
10262|code|STR             R3, [SP,#0x1280+lba]|0-147
10264|code|LDR.W           R3, =(aPthreadCancel_0 - 0x2822); "pthread_cancel"|223-248-56-52
10268|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
10270|code|ADD             R3, PC; "pthread_cancel"|123-68
10272|code|STR             R0, [SP,#0x1280+noisy]|2-144
10274|code|MOV             R0, R4|32-70
10276|code|BLX             __fprintf_chk|254-247-96-236
10280|code|B.W             loc_1A96|255-247-53-185
10284|code|MOV             R1, R0; tz|1-70
10286|code|ADD.W           R0, R4, #0x158; tv|4-245-172-112
10290|code|STR.W           R3, [R4,#(dword_18178 - 0x18020)]|196-248-88-49
10294|code|STR.W           R3, [R4,#(dword_1817C - 0x18020)]|196-248-92-49
10298|code|BLX             gettimeofday|254-247-204-235
10302|code|LDRD.W          R2, R3, [R4,#0xD0]|212-233-52-35
10306|code|CMP             R2, #1|1-42
10308|code|SBCS.W          R3, R3, #0|115-241-0-3
10312|code|BGE.W           loc_20A6|191-246-45-172
10316|code|B               loc_2604|218-230
10318|code|LDR             R2, [SP,#0x1280+var_1258]|10-154
10320|code|ADDW            R1, SP, #0x1280+var_E2C|13-242-84-65
10324|code|LDR             R3, =dword_110|201-75
10326|code|LDR             R3, [R2,R3]|211-88
10328|code|LDR             R4, [R3]|28-104
10330|code|BL              sub_2F48|0-240-117-251
10334|code|LDR             R3, =(aSgFinishIo - 0x286C); "sg_finish_io"|254-75
10336|code|MOV.W           R2, #0x648|79-244-201-98
10340|code|STR             R2, [SP,#0x1280+count]|1-146
10342|code|MOVS            R1, #1|1-33
10344|code|ADD             R3, PC; "sg_finish_io"|123-68
10346|code|LDR             R2, =(aSAtSDS - 0x2876); "%s at \"%s\":%d: %s\n"|252-74
10348|code|ADDS            R3, #0x48 ; 'H'|72-51
10350|code|STR             R3, [SP,#0x1280+lba]|0-147
10352|code|LDR             R3, =(aPthreadCreateS - 0x2878); "pthread_create, sig..."|251-75
10354|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
10356|code|ADD             R3, PC; "pthread_create, sig..."|123-68
10358|code|STR             R0, [SP,#0x1280+noisy]|2-144
10360|code|MOV             R0, R4|32-70
10362|code|BLX             __fprintf_chk|254-247-54-236
10366|code|B.W             loc_1A96|255-247-10-185
10370|code|LDR             R0, =dword_110|190-72
10372|code|MOVS            R4, #0|0-36
10374|code|LDR             R6, [SP,#0x1280+var_1258]|10-158
10376|code|MOVS            R1, #1|1-33
10378|code|LDR             R2, =(aSynchronizingC - 0x2896); ">> Synchronizing cache on %s\n"|246-74
10380|code|ADDW            R3, SP, #0x1280+var_82C|13-246-84-35
10384|code|LDR             R6, [R6,R0]|54-88
10386|code|ADD             R2, PC; ">> Synchronizing cache on %s\n"|122-68
10388|code|LDR             R0, [R6]|48-104
10390|code|BLX             __fprintf_chk|254-247-40-236
10394|code|STR             R4, [SP,#0x1280+lba]; lba|0-148
10396|code|STR             R4, [SP,#0x1280+count]; count|1-148
10398|code|MOV             R1, R4; sync_nv|33-70
10400|code|STR             R4, [SP,#0x1280+noisy]; noisy|2-148
10402|code|MOV             R2, R4; immed|34-70
10404|code|STR             R4, [SP,#0x1280+verbose]; verbose|3-148
10406|code|MOV             R3, R4; group|35-70
10408|code|LDR.W           R0, [R5,#(dword_180A8 - 0x18020)]; sg_fd|213-248-136-0
10412|code|BLX             sg_ll_sync_cache_10|254-247-82-236
10416|code|CMP             R0, #6|6-40
10418|code|BNE             loc_28D8|17-209
10420|code|LDR             R0, =(aUnitAttentionO - 0x28C0); "Unit attention(out), continuing\n"|236-72
10422|code|MOVS            R1, #1; size|1-33
10424|code|LDR             R3, [R6]; s|51-104
10426|code|MOVS            R2, #0x20 ; ' '; n|32-34
10428|code|ADD             R0, PC; "Unit attention(out), continuing\n"|120-68
10430|code|BLX             fwrite|254-247-120-235
10434|code|STR             R4, [SP,#0x1280+lba]; lba|0-148
10436|code|STR             R4, [SP,#0x1280+count]; count|1-148
10438|code|MOV             R1, R4; sync_nv|33-70
10440|code|STR             R4, [SP,#0x1280+noisy]; noisy|2-148
10442|code|MOV             R2, R4; immed|34-70
10444|code|STR             R4, [SP,#0x1280+verbose]; verbose|3-148
10446|code|MOV             R3, R4; group|35-70
10448|code|LDR.W           R0, [R5,#(dword_180A8 - 0x18020)]; sg_fd|213-248-136-0
10452|code|BLX             sg_ll_sync_cache_10|254-247-62-236
10456|code|CMP             R0, #0|0-40
10458|code|BEQ.W           loc_2638|63-244-173-174
10462|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
10464|code|MOVS            R1, #1; size|1-33
10466|code|LDR             R3, =dword_110|166-75
10468|code|MOVS            R2, #0x1C; n|28-34
10470|code|LDR             R0, =(aUnableToSynchr - 0x28EE); "Unable to synchronize cache\n"|225-72
10472|code|LDR             R3, [R4,R3]|227-88
10474|code|ADD             R0, PC; "Unable to synchronize cache\n"|120-68
10476|code|LDR             R3, [R3]; s|27-104
10478|code|BLX             fwrite|254-247-96-235
10482|code|B               loc_2638|161-230
10484|code|LDRB.W          R3, [R6,#-0x1D]|22-248-29-60
10488|code|CMP             R3, #0x30 ; '0'|48-43
10490|code|BNE.W           loc_27EA|127-244-118-175
10494|code|LDR             R2, =(aSSetTo0ButShou - 0x2908); ">>> %s set to '0' but should be set to "...|220-74
10496|code|MOV             R3, R7|59-70
10498|code|LDR             R0, [R5]|40-104
10500|code|ADD             R2, PC; ">>> %s set to '0' but should be set to "...|122-68
10502|code|BLX             __fprintf_chk|254-247-240-235
10506|code|B               loc_27EA|110-231
10508|code|LDR             R3, [R5,#(dword_1805C - 0x18020)]|235-107
10510|code|MOV             R1, R0|1-70
10512|code|CBZ             R3, loc_2916|11-177
10514|code|BFI.W           R1, R7, #0x10, #0x10|103-243-31-65
10518|code|LDR             R2, =(unk_18020 - 0x291C)|215-74
10520|code|ADD             R2, PC; unk_18020|122-68
10522|code|LDR             R2, [R2,#(dword_18068 - 0x18020)]|146-108
10524|code|CBZ             R2, loc_2922|10-177
10526|code|ORR.W           R1, R1, #0x80|65-240-128-1
10530|code|LDR             R2, =(unk_18020 - 0x2928)|213-74
10532|code|ADD             R2, PC; unk_18020|122-68
10534|code|LDR             R2, [R2,#(dword_18064 - 0x18020)]|82-108
10536|code|CBZ             R2, loc_2932|26-177
10538|code|ORR.W           R1, R1, #0x100000|65-244-128-17
10542|code|ORR.W           R1, R1, #0x1000|65-244-128-81
10546|code|ADDW            R5, SP, #0x1280+var_A2C|13-246-84-5
10550|code|MOV             R0, R5|40-70
10552|code|BLX             __open64_2|254-247-160-235
10556|code|LDR             R3, =(unk_18020 - 0x2942)|207-75
10558|code|ADD             R3, PC; unk_18020|123-68
10560|code|CMP             R0, #0|0-40
10562|code|STR             R0, [R3,#(dword_18038 - 0x18020)]|152-97
10564|code|BLT             loc_2974|22-219
10566|code|LDR.W           R1, [R3,#(dword_18148 - 0x18020)]|211-248-40-17
10570|code|LDR.W           R2, [R3,#(dword_1814C - 0x18020)]|211-248-44-33
10574|code|BL              sub_136C|254-247-13-253
10578|code|CMP             R0, #0|0-40
10580|code|BNE.W           loc_1E7E|127-244-147-170
10584|code|B.W             loc_1962|255-247-3-184
10588|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
10590|code|MOV             R1, R7|57-70
10592|code|LDR             R0, =dword_110|134-72
10594|code|MOV             R3, R8|67-70
10596|code|LDR             R2, =(aSgpDdUnableToU - 0x296C); "sgp_dd: unable to use scsi tape device "...|198-74
10598|code|LDR             R0, [R4,R0]|32-88
10600|code|ADD             R2, PC; "sgp_dd: unable to use scsi tape device "...|122-68
10602|code|LDR             R0, [R0]|0-104
10604|code|BLX             __fprintf_chk|254-247-188-235
10608|code|B.W             loc_1E7E|255-247-133-186
10612|code|LDR             R2, =(aSgpDdCouldNotO_3 - 0x2980); "sgp_dd: could not open %s for sg readin"...|195-74
10614|code|MOV.W           R1, #0x200|79-244-0-113
10618|code|STR             R5, [SP,#0x1280+count]|1-149
10620|code|ADD             R2, PC; "sgp_dd: could not open %s for sg readin"...|122-68
10622|code|B               loc_22BE|158-228
10624|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
10626|code|MOV             R1, R7|57-70
10628|code|LDR             R0, =dword_110|125-72
10630|code|MOV             R3, R8|67-70
10632|code|LDR             R2, =(aSgpDdUnableToA - 0x2990); "sgp_dd: unable to access %s\n"|191-74
10634|code|LDR             R0, [R4,R0]|32-88
10636|code|ADD             R2, PC; "sgp_dd: unable to access %s\n"|122-68
10638|code|LDR             R0, [R0]|0-104
10640|code|BLX             __fprintf_chk|254-247-170-235
10644|code|B.W             loc_1E7E|255-247-115-186
10648|code|LDR.W           R2, [R3,#(dword_180BC - 0x18020)]|211-248-156-32
10652|code|CMP             R2, #0x10|16-42
10654|code|BEQ.W           loc_1A12|63-244-56-168
10658|code|LDR             R2, =(unk_18008 - 0x29AC)|186-74
10660|code|LDRD.W          R4, R5, [SP,#0x1280+var_1260]|221-233-8-69
10664|code|ADD             R2, PC; unk_18008|122-68
10666|code|LDRD.W          R0, R1, [R2]|210-233-0-1
10670|code|ADDS            R4, R4, R0|36-24
10672|code|ADCS            R5, R1|77-65
10674|code|CMP             R4, #0|0-44
10676|code|SBCS.W          R2, R5, #1|117-241-1-2
10680|code|BGE             loc_29C6|5-218
10682|code|LDR.W           R3, [R3,#(dword_1814C - 0x18020)]|211-248-44-49
10686|code|CMP.W           R3, #0x10000|179-245-128-63
10690|code|BLT.W           loc_1A12|255-246-38-168
10694|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
10696|code|MOVS            R2, #0x39 ; '9'; n|57-34
10698|code|LDR             R3, =dword_110|108-75
10700|code|MOVS            R1, #1; size|1-33
10702|code|LDR             R0, =(aNoteScsiComman - 0x29D6); "Note: SCSI command size increased to 16"...|176-72
10704|code|LDR             R3, [R4,R3]|227-88
10706|code|ADD             R0, PC; "Note: SCSI command size increased to 16"...|120-68
10708|code|LDR             R3, [R3]; s|27-104
10710|code|BLX             fwrite|254-247-236-234
10714|code|LDR             R3, =(unk_18020 - 0x29E2)|174-75
10716|code|MOVS            R2, #0x10|16-34
10718|code|ADD             R3, PC; unk_18020|123-68
10720|code|STR.W           R2, [R3,#(dword_180BC - 0x18020)]|195-248-156-32
10724|code|B.W             loc_1A12|255-247-21-184
10728|code|LDR             R0, [R1,#(dword_1804C - 0x18020)]|200-106
10730|code|CMP             R0, #0x10|16-40
10732|code|BEQ.W           loc_1A02|63-244-9-168
10736|code|LDRD.W          R4, R5, [SP,#0x1280+var_1248]|221-233-14-69
10740|code|ADDS            R4, R4, R2|164-24
10742|code|ADCS            R5, R3|93-65
10744|code|CMP             R4, #0|0-44
10746|code|MOV             R3, R5|43-70
10748|code|SBCS.W          R3, R3, #1|115-241-1-3
10752|code|BGE             loc_2A0E|5-218
10754|code|LDR.W           R3, [R1,#(dword_1814C - 0x18020)]|209-248-44-49
10758|code|CMP.W           R3, #0x10000|179-245-128-63
10762|code|BLT.W           loc_1A02|254-246-250-175
10766|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
10768|code|MOVS            R2, #0x39 ; '9'; n|57-34
10770|code|LDR             R3, =dword_110|90-75
10772|code|MOVS            R1, #1; size|1-33
10774|code|LDR             R0, =(aNoteScsiComman_0 - 0x2A1E); "Note: SCSI command size increased to 16"...|160-72
10776|code|LDR             R3, [R4,R3]|227-88
10778|code|ADD             R0, PC; "Note: SCSI command size increased to 16"...|120-68
10780|code|LDR             R3, [R3]; s|27-104
10782|code|BLX             fwrite|254-247-200-234
10786|code|LDR             R3, =(unk_18020 - 0x2A2A)|158-75
10788|code|MOVS            R2, #0x10|16-34
10790|code|ADD             R3, PC; unk_18020|123-68
10792|code|STR             R2, [R3,#(dword_1804C - 0x18020)]|218-98
10794|code|B.W             loc_1A02|254-247-234-191
10798|code|LDR             R5, [SP,#0x1280+var_1258]|10-157
10800|code|MOVS            R1, #1; size|1-33
10802|code|LDR             R3, =dword_110|82-75
10804|code|MOVS            R2, #0x2A ; '*'; n|42-34
10806|code|LDR             R0, =(aCouldnTCalcula - 0x2A40); "Couldn't calculate count, please give o"...|154-72
10808|code|MOVS            R4, #0x63 ; 'c'|99-36
10810|code|LDR             R3, [R5,R3]|235-88
10812|code|ADD             R0, PC; "Couldn't calculate count, please give o"...|120-68
10814|code|LDR             R3, [R3]; s|27-104
10816|code|BLX             fwrite|254-247-182-234
10820|code|B.W             loc_15AC|254-247-178-189
10824|code|LDR             R5, [SP,#0x1280+var_1258]|10-157
10826|code|MOV             R1, R4; size|33-70
10828|code|LDR             R3, =dword_110|75-75
10830|code|MOVS            R2, #0x38 ; '8'; n|56-34
10832|code|LDR             R0, =(aWonTDefaultBot - 0x2A58); "Won't default both IFILE to stdin _and_"...|148-72
10834|code|LDR             R5, [R5,R3]|237-88
10836|code|ADD             R0, PC; "Won't default both IFILE to stdin _and_"...|120-68
10838|code|LDR             R3, [R5]; s|43-104
10840|code|BLX             fwrite|254-247-170-234
10844|code|LDR             R0, =(aForMoreInforma - 0x2A68); "For more information use '--help'\n"|146-72
10846|code|LDR             R3, [R5]; s|43-104
10848|code|MOV             R1, R4; size|33-70
10850|code|MOVS            R2, #0x22 ; '"'; n|34-34
10852|code|ADD             R0, PC; "For more information use '--help'\n"|120-68
10854|code|BLX             fwrite|254-247-164-234
10858|code|B.W             loc_15AC|254-247-159-189
10862|code|LDR             R0, =(aSecondIfArgume - 0x2A78); "Second 'if=' argument??\n"|143-72
10864|code|MOVS            R1, #1|1-33
10866|code|LDR             R3, =dword_110|66-75
10868|code|ADD             R0, PC; "Second 'if=' argument??\n"|120-68
10870|code|B.W             loc_1B72|255-247-124-184
10874|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
10878|code|LDR             R1, =(aTime - 0x2A86); "time"|140-73
10880|code|MOV             R0, R4; s1|32-70
10882|code|ADD             R1, PC; "time"|121-68
10884|code|BLX             strcmp|254-247-74-234
10888|code|CBNZ            R0, loc_2A9C|64-185
10890|code|MOV             R0, R8; buf|64-70
10892|code|BLX             sg_get_num|254-247-86-235
10896|code|LDR             R3, =(unk_18020 - 0x2A96)|136-75
10898|code|ADD             R3, PC; unk_18020|123-68
10900|code|STR.W           R0, [R3,#(dword_18180 - 0x18020)]|195-248-96-1
10904|code|B.W             loc_155E|254-247-97-189
10908|code|LDR             R1, =(aHelp - 0x2AA4); "--help"|134-73
10910|code|MOV             R0, R4; s1|32-70
10912|code|ADD             R1, PC; "--help"|121-68
10914|code|BLX             strcmp|254-247-60-234
10918|code|CBZ             R0, loc_2AC6|112-177
10920|code|LDR             R1, =(aH - 0x2AB2); "-h"|132-73
10922|code|MOV             R0, R4; s1|32-70
10924|code|MOVS            R2, #2; n|2-34
10926|code|ADD             R1, PC; "-h"|121-68
10928|code|BLX             strncmp|254-247-92-235
10932|code|CBZ             R0, loc_2AC6|56-177
10934|code|CMP.W           R10, #0x2D ; '-'|186-241-45-15
10938|code|BNE             loc_2B3C|63-209
10940|code|LDRB            R3, [R4,#1]|99-120
10942|code|CMP             R3, #0x3F ; '?'|63-43
10944|code|BNE             loc_2B08|34-209
10946|code|LDRB            R3, [R4,#2]|163-120
10948|code|CBNZ            R3, loc_2B08|3-187
10950|code|BL              sub_3040|0-240-187-250
10954|code|MOVS            R4, #0|0-36
10956|code|B.W             loc_15AC|254-247-110-189
10960|code|MOV             R0, R8; buf|64-70
10962|code|BLX             sg_get_num|254-247-52-235
10966|code|LDR             R3, =(unk_18020 - 0x2ADC)|122-75
10968|code|ADD             R3, PC; unk_18020|123-68
10970|code|STR.W           R0, [R3,#(dword_18208 - 0x18020)]|195-248-232-1
10974|code|B.W             loc_155E|254-247-62-189
10978|code|MOV             R0, R8; buf|64-70
10980|code|BLX             sg_get_llnum|254-247-244-234
10984|code|MOV             R3, R1|11-70
10986|code|MOV             R2, R0|2-70
10988|code|STRD.W          R2, R3, [SP,#0x1280+var_1248]|205-233-14-35
10992|code|ADDS            R3, R1, #1|75-28
10994|code|IT EQ|8-191
10996|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
11000|code|BNE.W           loc_155E|126-244-49-173
11004|code|LDR             R0, =(aSgpDdBadArgume_7 - 0x2B06); "sgp_dd: bad argument to 'skip='\n"|113-72
11006|code|MOVS            R1, #1|1-33
11008|code|LDR             R3, =dword_110|30-75
11010|code|ADD             R0, PC; "sgp_dd: bad argument to 'skip='\n"|120-68
11012|code|B.W             loc_1EA6|255-247-207-185
11016|code|ADDW            R4, SP, #0x1280+dest|13-246-84-100
11020|code|LDR             R1, =(aVers - 0x2B14); "--vers"|110-73
11022|code|MOVS            R2, #6; n|6-34
11024|code|ADD             R1, PC; "--vers"|121-68
11026|code|MOV             R0, R4; s1|32-70
11028|code|BLX             strncmp|254-247-42-235
11032|code|CBZ             R0, loc_2B24|32-177
11034|code|LDRB            R3, [R4,#1]|99-120
11036|code|CMP             R3, #0x56 ; 'V'|86-43
11038|code|BNE             loc_2B4C|21-209
11040|code|LDRB            R3, [R4,#2]|163-120
11042|code|CBNZ            R3, loc_2B4C|155-185
11044|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
11046|code|MOVS            R1, #1|1-33
11048|code|LDR             R0, =dword_110|20-72
11050|code|LDR             R2, =(aSgpDdS - 0x2B34); "sgp_dd: : %s\n"|104-74
11052|code|LDR             R3, =(a54720140516 - 0x2B36); "5.47 20140516"|104-75
11054|code|LDR             R0, [R4,R0]|32-88
11056|code|ADD             R2, PC; "sgp_dd: : %s\n"|122-68
11058|code|ADD             R3, PC; "5.47 20140516"|123-68
11060|code|LDR             R0, [R0]|0-104
11062|code|BLX             __fprintf_chk|254-247-216-234
11066|code|B               loc_2ACA|198-231
11068|code|LDR             R1, =(aVers - 0x2B46); "--vers"|101-73
11070|code|MOV             R0, R4; s1|32-70
11072|code|MOVS            R2, #6; n|6-34
11074|code|ADD             R1, PC; "--vers"|121-68
11076|code|BLX             strncmp|254-247-18-235
11080|code|CMP             R0, #0|0-40
11082|code|BEQ             loc_2B24|235-208
11084|code|LDR             R4, [SP,#0x1280+var_1258]|10-156
11086|code|ADDW            R3, SP, #0x1280+dest|13-246-84-99
11090|code|LDR             R0, =dword_110|10-72
11092|code|MOVS            R1, #1|1-33
11094|code|LDR             R2, =(aUnrecognizedOp - 0x2B5E); "Unrecognized option '%s'\n"|96-74
11096|code|LDR             R4, [R4,R0]|36-88
11098|code|ADD             R2, PC; "Unrecognized option '%s'\n"|122-68
11100|code|LDR             R0, [R4]|32-104
11102|code|BLX             __fprintf_chk|254-247-196-234
11106|code|LDR             R0, =(aForMoreInforma - 0x2B6E); "For more information use '--help'\n"|94-72
11108|code|LDR             R3, [R4]; s|35-104
11110|code|MOVS            R1, #1; size|1-33
11112|code|MOVS            R2, #0x22 ; '"'; n|34-34
11114|code|ADD             R0, PC; "For more information use '--help'\n"|120-68
11116|code|BLX             fwrite|254-247-32-234
11120|code|B.W             loc_15AA|254-247-27-189
11124|data|DCD aSgpDdCouldNotO - 0x22C0; "sgp_dd: could not open %s for raw writi"...|224-70-0-0
11128|data|DCD aSgpDdCouldNotO_0 - 0x22E4; "sgp_dd: could not open %s for writing"|148-70-0-0
11132|data|DCD dword_110|16-1-0-0
11136|data|DCD aUnableToReadBl - 0x2304; "Unable to read block capacity on %s\n"|208-71-0-0
11140|data|DCD unk_18020 - 0x2316|10-93-1-0
11144|data|DCD aBlockSizeOnSCo_0 - 0x2334; "block size on %s confusion; bs=%d, from"...|200-71-0-0
11148|data|DCD aUnitAttentionM_0 - 0x236E; "Unit attention, media changed(in), cont"...|206-70-0-0
11152|data|DCD aUnableToReadCa - 0x239A; "Unable to read capacity on %s\n"|26-71-0-0
11156|data|DCD aSgpDdCouldNotO_1 - 0x23BC; "sgp_dd: could not open %s for reading"|52-69-0-0
11160|data|DCD aReadCapacityFa - 0x23C4; "read capacity failed, %s not ready\n"|204-70-0-0
11164|data|DCD aReadCapacityNo - 0x23D2; "read capacity not supported on %s\n"|154-70-0-0
11168|data|DCD unk_18020 - 0x23F6|42-92-1-0
11172|data|DCD unk_18020 - 0x2414|12-92-1-0
11176|data|DCD aSgpDdUnableToU - 0x2444; "sgp_dd: unable to use scsi tape device "...|84-68-0-0
11180|data|DCD aSgpDdCouldNotO_2 - 0x245A; "sgp_dd: could not open %s for sg writin"...|242-68-0-0
11184|data|DCD sub_3BC0+1 - 0x2474|77-23-0-0
11188|data|DCD aStartingWorker - 0x2496; "Starting worker thread k=0\n"|94-72-0-0
11192|data|DCD sub_3240+1 - 0x24A6|155-13-0-0
11196|data|DCD unk_18020 - 0x24C0|96-91-1-0
11200|data|DCD aSgFinishIo - 0x24EE; "sg_finish_io"|6-49-0-0
11204|data|DCD aSAtSDS - 0x24FC; "%s at \"%s\":%d: %s\n"|196-60-0-0
11208|data|DCD aCondOutSyncCv - 0x24FE; "cond out_sync_cv"|238-62-0-0
11212|data|DCD unk_18020 - 0x2530|240-90-1-0
11216|data|DCD unk_18008 - 0x2536|210-90-1-0
11220|data|DCD sub_3BC0+1 - 0x2538|137-22-0-0
11224|data|DCD aStartingWorker_0 - 0x253E; "Starting worker thread k=%d\n"|210-71-0-0
11228|data|DCD aSgFinishIo - 0x259C; "sg_finish_io"|88-48-0-0
11232|data|DCD aSAtSDS - 0x25AA; "%s at \"%s\":%d: %s\n"|22-60-0-0
11236|data|DCD aPthreadCreate_0 - 0x25AC; "pthread_create"|56-71-0-0
11240|data|DCD unk_18008 - 0x25C8|64-90-1-0
11244|data|DCD unk_18020 - 0x25CA|86-90-1-0
11248|data|DCD aWorkerThreadKD - 0x25D0; "Worker thread k=%d terminated\n"|112-71-0-0
11252|data|DCD unk_18020 - 0x260C|20-90-1-0
11256|data|DCD unk_18020 - 0x262A|246-89-1-0
11260|data|DCD unk_18020 - 0x2640|224-89-1-0
11264|data|DCD unk_18020 - 0x265C|196-89-1-0
11268|data|DCD unk_18020 - 0x2676|170-89-1-0
11272|data|DCD aSomeErrorOccur - 0x2694; ">>>> Some error occurred, remaining blo"...|64-71-0-0
11276|data|DCD aSgpDdBadArgume_6+0x20 - 0x26AA; ""|250-63-0-0
11280|data|DCD unk_18020 - 0x26B4|108-89-1-0
11284|data|DCD unk_18020 - 0x26C2|94-89-1-0
11288|data|DCD aNonZeroSumOfRe - 0x26D8; ">> Non-zero sum of residual counts=%d\n"|180-71-0-0
11292|data|DCD aSgFinishIo - 0x2708; "sg_finish_io"|236-46-0-0
11296|data|DCD aSAtSDS - 0x2716; "%s at \"%s\":%d: %s\n"|170-58-0-0
11300|data|DCD aPthreadJoin_0 - 0x2718; "pthread_join"|24-70-0-0
11304|data|DCD aSgFinishIo - 0x2744; "sg_finish_io"|176-46-0-0
11308|data|DCD aSAtSDS - 0x2752; "%s at \"%s\":%d: %s\n"|110-58-0-0
11312|data|DCD aUnlockOutMutex - 0x2754; "unlock out_mutex"|172-60-0-0
11316|data|DCD unk_18020 - 0x2768|184-88-1-0
11320|data|DCD aSgFinishIo - 0x2792; "sg_finish_io"|98-46-0-0
11324|data|DCD aSAtSDS - 0x27A0; "%s at \"%s\":%d: %s\n"|32-58-0-0
11328|data|DCD aPthreadCreate_0 - 0x27A2; "pthread_create"|66-69-0-0
11332|data|DCD aProcScsiSgAllo - 0x27C0; "/proc/scsi/sg/allow_dio"|120-70-0-0
11336|data|DCD aDirectIoReques - 0x27C2; ">> Direct IO requested but incomplete %"...|70-70-0-0
11340|data|DCD aSgFinishIo - 0x2812; "sg_finish_io"|226-45-0-0
11344|data|DCD aSAtSDS - 0x2820; "%s at \"%s\":%d: %s\n"|160-57-0-0
11348|data|DCD aPthreadCancel_0 - 0x2822; "pthread_cancel"|162-69-0-0
11352|data|DCD aSgFinishIo - 0x286C; "sg_finish_io"|136-45-0-0
11356|data|DCD aSAtSDS - 0x2876; "%s at \"%s\":%d: %s\n"|74-57-0-0
11360|data|DCD aPthreadCreateS - 0x2878; "pthread_create, sig..."|84-68-0-0
11364|data|DCD aSynchronizingC - 0x2896; ">> Synchronizing cache on %s\n"|202-68-0-0
11368|data|DCD aUnitAttentionO - 0x28C0; "Unit attention(out), continuing\n"|192-68-0-0
11372|data|DCD aUnableToSynchr - 0x28EE; "Unable to synchronize cache\n"|182-68-0-0
11376|data|DCD aSSetTo0ButShou - 0x2908; ">>> %s set to '0' but should be set to "...|72-69-0-0
11380|data|DCD unk_18020 - 0x291C|4-87-1-0
11384|data|DCD unk_18020 - 0x2928|248-86-1-0
11388|data|DCD unk_18020 - 0x2942|222-86-1-0
11392|data|DCD aSgpDdUnableToU - 0x296C; "sgp_dd: unable to use scsi tape device "...|44-63-0-0
11396|data|DCD aSgpDdCouldNotO_3 - 0x2980; "sgp_dd: could not open %s for sg readin"...|68-63-0-0
11400|data|DCD aSgpDdUnableToA - 0x2990; "sgp_dd: unable to access %s\n"|232-62-0-0
11404|data|DCD unk_18008 - 0x29AC|92-86-1-0
11408|data|DCD aNoteScsiComman - 0x29D6; "Note: SCSI command size increased to 16"...|102-66-0-0
11412|data|DCD unk_18020 - 0x29E2|62-86-1-0
11416|data|DCD aNoteScsiComman_0 - 0x2A1E; "Note: SCSI command size increased to 16"...|226-65-0-0
11420|data|DCD unk_18020 - 0x2A2A|246-85-1-0
11424|data|DCD aCouldnTCalcula - 0x2A40; "Couldn't calculate count, please give o"...|148-65-0-0
11428|data|DCD aWonTDefaultBot - 0x2A58; "Won't default both IFILE to stdin _and_"...|168-63-0-0
11432|data|DCD aForMoreInforma - 0x2A68; "For more information use '--help'\n"|196-60-0-0
11436|data|DCD aSecondIfArgume - 0x2A78; "Second 'if=' argument??\n"|84-59-0-0
11440|data|DCD aTime - 0x2A86; "time"|86-60-0-0
11444|data|DCD unk_18020 - 0x2A96|138-85-1-0
11448|data|DCD aHelp - 0x2AA4; "--help"|64-60-0-0
11452|data|DCD aH - 0x2AB2; "-h"|58-60-0-0
11456|data|DCD unk_18020 - 0x2ADC|68-85-1-0
11460|data|DCD aSgpDdBadArgume_7 - 0x2B06; "sgp_dd: bad argument to 'skip='\n"|170-59-0-0
11464|data|DCD aVers - 0x2B14; "--vers"|160-67-0-0
11468|data|DCD aSgpDdS - 0x2B34; "sgp_dd: : %s\n"|188-59-0-0
11472|data|DCD a54720140516 - 0x2B36; "5.47 20140516"|202-59-0-0
11476|data|DCD aVers - 0x2B46; "--vers"|110-67-0-0
11480|data|DCD aUnrecognizedOp - 0x2B5E; "Unrecognized option '%s'\n"|178-59-0-0
11484|data|DCD aForMoreInforma - 0x2B6E; "For more information use '--help'\n"|190-59-0-0
11488|code|MOV.W           R11, #0|79-240-0-11
11492|code|MOV.W           LR, #0|79-240-0-14
11496|code|POP             {R1}; argc|2-188
11498|code|MOV             R2, SP; ubp_av|106-70
11500|code|PUSH            {R2}; stack_end|4-180
11502|code|PUSH            {R0}; rtld_fini|1-180
11504|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x2D18)|223-248-36-160
11508|code|ADR             R3, off_2D18|8-163
11510|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
11512|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x17ED8)|223-248-32-192
11516|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
11520|code|PUSH.W          {R12}; fini|77-248-4-205
11524|code|LDR             R3, =(__libc_csu_init_ptr - 0x17ED8)|6-75
11526|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
11530|code|LDR             R0, =(main_ptr - 0x17ED8)|6-72
11532|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
11536|code|BLX             __libc_start_main|254-247-132-233
11540|code|BLX             abort|254-247-48-234
11544|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2D18|192-81-1-0
11548|data|DCD __libc_csu_fini_ptr - 0x17ED8|0-1-0-0
11552|data|DCD __libc_csu_init_ptr - 0x17ED8|24-1-0-0
11556|data|DCD main_ptr - 0x17ED8|28-1-0-0
11560|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2D38)|20-48-159-229
11564|code|LDR             R2, =(__gmon_start___ptr_0 - 0x17ED8)|20-32-159-229
11568|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
11572|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
11576|code|CMP             R2, #0|0-0-82-227
11580|code|BXEQ            LR|30-255-47-1
11584|code|B               __gmon_start__|184-248-255-234
11588|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2D38|160-81-1-0
11592|data|DCD __gmon_start___ptr_0 - 0x17ED8|20-1-0-0
11596|code|LDR             R3, =(__bss_start__ - 0x2D54)|7-75
11598|code|LDR             R0, =(__bss_start__ - 0x2D58)|8-72
11600|code|ADD             R3, PC; __bss_start__|123-68
11602|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2D5E)|8-74
11604|code|ADD             R0, PC; __bss_start__|120-68
11606|code|ADDS            R3, #3|3-51
11608|code|SUBS            R3, R3, R0|27-26
11610|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
11612|code|CMP             R3, #6|6-43
11614|code|BLS             locret_2D68|3-217
11616|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x17ED8)|5-75
11618|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
11620|code|CBZ             R3, locret_2D68|3-177
11622|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
11624|code|BX              LR|112-71
11626|data|ALIGN 4|0-191
11628|data|DCD __bss_start__ - 0x2D54|196-82-1-0
11632|data|DCD __bss_start__ - 0x2D58|192-82-1-0
11636|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2D5E|122-81-1-0
11640|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x17ED8|8-1-0-0
11644|code|LDR             R1, =(__bss_start__ - 0x2D84)|8-73
11646|code|LDR             R0, =(__bss_start__ - 0x2D88)|9-72
11648|code|ADD             R1, PC; __bss_start__|121-68
11650|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2D8C)|9-75
11652|code|ADD             R0, PC; __bss_start__|120-68
11654|code|SUBS            R1, R1, R0|9-26
11656|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11658|code|ASRS            R1, R1, #2|137-16
11660|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
11664|code|ASRS            R1, R1, #1|73-16
11666|code|BEQ             locret_2D9C|3-208
11668|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x17ED8)|5-74
11670|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
11672|code|CBZ             R3, locret_2D9C|3-177
11674|code|BX              R3; _ITM_registerTMCloneTable|24-71
11676|code|BX              LR|112-71
11678|data|ALIGN 0x10|0-191
11680|data|DCD __bss_start__ - 0x2D84|148-82-1-0
11684|data|DCD __bss_start__ - 0x2D88|144-82-1-0
11688|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2D8C|76-81-1-0
11692|data|DCD _ITM_registerTMCloneTable_ptr - 0x17ED8|36-1-0-0
11696|code|PUSH            {R3,LR}|8-181
11698|code|LDR             R3, =(__bss_start__ - 0x2DBA)|10-75
11700|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2DBC)|10-74
11702|code|ADD             R3, PC; __bss_start__|123-68
11704|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
11706|code|LDRB            R3, [R3]|27-120
11708|code|CBNZ            R3, locret_2DDA|107-185
11710|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x17ED8)|9-75
11712|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
11714|code|CBZ             R3, loc_2DCE|35-177
11716|code|LDR             R3, =(off_18004 - 0x2DCA)|8-75
11718|code|ADD             R3, PC; off_18004|123-68
11720|code|LDR             R0, [R3]; off_18004 ; void *|24-104
11722|code|BLX             __cxa_finalize|254-247-174-232
11726|code|BL              sub_2D4C|255-247-189-255
11730|code|LDR             R3, =(__bss_start__ - 0x2DDA)|6-75
11732|code|MOVS            R2, #1|1-34
11734|code|ADD             R3, PC; __bss_start__|123-68
11736|code|STRB            R2, [R3]|26-112
11738|code|POP             {R3,PC}|8-189
11740|data|DCD __bss_start__ - 0x2DBA|94-82-1-0
11744|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2DBC|28-81-1-0
11748|data|DCD __cxa_finalize_ptr_0 - 0x17ED8|4-1-0-0
11752|data|DCD off_18004 - 0x2DCA|58-82-1-0
11756|data|DCD __bss_start__ - 0x2DDA|62-82-1-0
11760|code|LDR             R0, =(dword_17DC4 - 0x2DF8)|7-72
11762|code|PUSH            {R3,LR}|8-181
11764|code|ADD             R0, PC; dword_17DC4|120-68
11766|code|LDR             R2, [R0]|2-104
11768|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2DFE)|6-75
11770|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11772|code|CBNZ            R2, loc_2E04|18-185
11774|code|POP.W           {R3,LR}|189-232-8-64
11778|code|B               sub_2D7C|187-231
11780|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x17ED8)|4-74
11782|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
11784|code|CMP             R3, #0|0-43
11786|code|BEQ             loc_2DFE|248-208
11788|code|BLX             R3; _Jv_RegisterClasses|152-71
11790|code|B               loc_2DFE|246-231
11792|data|DCD dword_17DC4 - 0x2DF8|204-79-1-0
11796|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2DFE|218-80-1-0
11800|data|DCD _Jv_RegisterClasses_ptr - 0x17ED8|32-1-0-0
11804|data|ALIGN 0x10|0-0-0-0
11808|code|PUSH            {R3-R7,LR}|248-181
11810|code|ADD.W           R7, R0, #0x58 ; 'X'|0-241-88-7
11814|code|MOV             R4, R0|4-70
11816|code|ADD.W           R5, R0, #0xC8|0-241-200-5
11820|code|MOV             R0, R7; mutex|56-70
11822|code|MOVS            R6, #1|1-38
11824|code|BLX             pthread_mutex_lock|254-247-140-232
11828|code|MOV             R0, R7; mutex|56-70
11830|code|STR             R6, [R4,#0x54]|102-101
11832|code|BLX             pthread_mutex_unlock|254-247-68-232
11836|code|MOV             R0, R5; mutex|40-70
11838|code|BLX             pthread_mutex_lock|254-247-134-232
11842|code|STR.W           R6, [R4,#0xC4]|196-248-196-96
11846|code|MOV             R0, R5; mutex|40-70
11848|code|POP.W           {R3-R7,LR}|189-232-248-64
11852|code|B.W             j_pthread_mutex_unlock|254-247-56-184
11856|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2E58)|17-75
11858|code|PUSH            {R4-R7,LR}|240-181
11860|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11862|code|LDR             R4, =(__stack_chk_guard_ptr - 0x17ED8)|17-76
11864|code|SUB             SP, SP, #0x94|165-176
11866|code|MOV             R7, R1|15-70
11868|code|MOVS            R1, #0; act|0-33
11870|code|MOV             R2, SP; oact|106-70
11872|code|MOV             R6, R0|6-70
11874|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
11876|code|LDR             R3, [R4]|35-104
11878|code|STR             R3, [SP,#0xA8+var_1C]|35-147
11880|code|BLX             sigaction|254-247-154-232
11884|code|LDR             R3, [SP,#0xA8+var_A8]|0-155
11886|code|CMP             R3, #1|1-43
11888|code|BEQ             loc_2E88|10-208
11890|code|ADD             R0, SP, #0xA8+set; set|1-168
11892|code|STR             R7, [SP,#0xA8+var_A8]|0-151
11894|code|BLX             sigemptyset|254-247-62-233
11898|code|MOVS            R3, #0|0-35
11900|code|MOV             R0, R6; sig|48-70
11902|code|MOV             R1, SP; act|105-70
11904|code|MOV             R2, R3; oact|26-70
11906|code|STR             R3, [SP,#0xA8+var_24]|33-147
11908|code|BLX             sigaction|254-247-140-232
11912|code|LDR             R2, [SP,#0xA8+var_1C]|35-154
11914|code|LDR             R3, [R4]|35-104
11916|code|CMP             R2, R3|154-66
11918|code|BNE             loc_2E94|1-209
11920|code|ADD             SP, SP, #0x94|37-176
11922|code|POP             {R4-R7,PC}|240-189
11924|code|BLX             __stack_chk_fail|254-247-108-232
11928|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2E58|128-80-1-0
11932|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
11936|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2EA8)|39-75
11938|code|LDR             R2, =(__stack_chk_guard_ptr - 0x17ED8)|40-74
11940|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11942|code|PUSH            {R4,R5,LR}|48-181
11944|code|SUB             SP, SP, #0x74|157-176
11946|code|LDR             R4, [R3,R2]; __stack_chk_guard|156-88
11948|code|MOV             R5, R0|5-70
11950|code|LDR             R3, [R4]|35-104
11952|code|STR             R3, [SP,#0x80+var_14]|27-147
11954|code|BLX             strlen|254-247-210-232
11958|code|CMP             R0, #1|1-40
11960|code|BEQ             loc_2EEE|25-208
11962|code|MOV             R1, R5|41-70
11964|code|MOVS            R0, #3|3-32
11966|code|MOV             R2, SP|106-70
11968|code|BLX             __xstat64|254-247-66-233
11972|code|CMP             R0, #0|0-40
11974|code|IT LT|184-191
11976|code|MOVLT           R0, #0x40 ; '@'|64-32
11978|code|BLT             loc_2EE2|10-219
11980|code|LDR             R3, [SP,#0x80+var_70]|4-155
11982|code|AND.W           R3, R3, #0xF000|3-244-112-67
11986|code|CMP.W           R3, #0x2000|179-245-0-95
11990|code|BEQ             loc_2EF8|15-208
11992|code|CMP.W           R3, #0x6000|179-245-192-79
11996|code|ITE NE|20-191
11998|code|MOVNE           R0, #1|1-32
12000|code|MOVEQ           R0, #0x20 ; ' '|32-32
12002|code|LDR             R2, [SP,#0x80+var_14]|27-154
12004|code|LDR             R3, [R4]|35-104
12006|code|CMP             R2, R3|154-66
12008|code|BNE             loc_2F3C|40-209
12010|code|ADD             SP, SP, #0x74 ; 't'|29-176
12012|code|POP             {R4,R5,PC}|48-189
12014|code|LDRB            R3, [R5]|43-120
12016|code|CMP             R3, #0x2E ; '.'|46-43
12018|code|BNE             loc_2EBA|226-209
12020|code|MOVS            R0, #8|8-32
12022|code|B               loc_2EE2|244-231
12024|code|LDR             R1, [SP,#0x80+var_5C]|9-153
12026|code|LDR             R2, [SP,#0x80+var_60]|8-154
12028|code|BIC.W           R0, R1, #0xFF0|33-244-127-96
12032|code|BIC.W           R0, R0, #0xF|32-240-15-0
12036|code|UBFX.W          R3, R2, #8, #0xC|194-243-11-35
12040|code|ORRS            R0, R3|24-67
12042|code|CMP             R0, #1|1-40
12044|code|BEQ             loc_2F28|12-208
12046|code|CMP             R0, #0xA2|162-40
12048|code|BNE             loc_2F16|1-209
12050|code|MOVS            R0, #4|4-32
12052|code|B               loc_2EE2|229-231
12054|code|CMP             R0, #0x15|21-40
12056|code|BEQ             loc_2F24|4-208
12058|code|CMP             R0, #9|9-40
12060|code|ITE NE|20-191
12062|code|MOVNE           R0, #1|1-32
12064|code|MOVEQ           R0, #0x10|16-32
12066|code|B               loc_2EE2|222-231
12068|code|MOVS            R0, #2|2-32
12070|code|B               loc_2EE2|220-231
12072|code|LSRS            R3, R2, #0xC|19-11
12074|code|UXTB            R2, R2|210-178
12076|code|ORR.W           R3, R3, R1,LSL#20|67-234-1-83
12080|code|BIC.W           R3, R3, #0xFF|35-240-255-3
12084|code|ORRS            R2, R3|26-67
12086|code|CMP             R2, #3|3-42
12088|code|BNE             loc_2EE2|211-209
12090|code|B               loc_2EF4|219-231
12092|code|BLX             __stack_chk_fail|254-247-24-232
12096|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2EA8|48-80-1-0
12100|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
12104|code|PUSH            {R4-R6,LR}|112-181
12106|code|MOV             R6, R0|6-70
12108|code|LDR             R4, =(unk_18020 - 0x2F54)|10-76
12110|code|MOV             R5, R1|13-70
12112|code|ADD             R4, PC; unk_18020|124-68
12114|code|MOV             R0, R4; mutex|32-70
12116|code|BLX             pthread_mutex_lock|253-247-250-239
12120|code|MOV             R0, R6; errnum|48-70
12122|code|BLX             safe_strerror|254-247-228-232
12126|code|MOVS            R2, #0x80; n|128-34
12128|code|MOV             R1, R0; src|1-70
12130|code|MOV             R0, R5; dest|40-70
12132|code|BLX             strncpy|254-247-162-232
12136|code|MOV             R0, R4; mutex|32-70
12138|code|BLX             pthread_mutex_unlock|253-247-172-239
12142|code|MOVS            R3, #0|0-35
12144|code|MOV             R0, R5|40-70
12146|code|STRB.W          R3, [R5,#0x7F]|133-248-127-48
12150|code|POP             {R4-R6,PC}|112-189
12152|data|DCD unk_18020 - 0x2F54|204-80-1-0
12156|code|LDR             R3, =(unk_18020 - 0x2F86)|40-75
12158|code|PUSH.W          {R4-R11,LR}|45-233-240-79
12162|code|ADD             R3, PC; unk_18020|123-68
12164|code|MOV             R10, R0|130-70
12166|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x2F92)|39-72
12168|code|LDRD.W          R4, R5, [R3,#0xD0]|211-233-52-69
12172|code|SUB             SP, SP, #0x14|133-176
12174|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
12176|code|ORRS.W          R3, R4, R5|84-234-5-3
12180|code|LDR             R3, =(stderr_ptr - 0x17ED8)|36-75
12182|code|BNE             loc_300A|56-209
12184|code|LDR             R7, [R0,R3]; stderr|199-88
12186|code|LDR             R6, =(unk_18020 - 0x2FA8)|36-78
12188|code|MOV             R3, R10|83-70
12190|code|LDR.W           R11, =(unk_18008 - 0x2FAC)|223-248-144-176
12194|code|MOVS            R1, #1|1-33
12196|code|ADD             R6, PC; unk_18020|126-68
12198|code|LDR             R2, =(aSLldDRecordsIn - 0x2FB4); "%s%lld+%d records in\n"|35-74
12200|code|ADD             R11, PC; unk_18008|251-68
12202|code|LDR             R0, [R7]|56-104
12204|code|LDRD.W          R8, R9, [R6,#0x60]|214-233-24-137
12208|code|ADD             R2, PC; "%s%lld+%d records in\n"|122-68
12210|code|LDRD.W          R4, R5, [R11]|219-233-0-69
12214|code|LDR.W           LR, [R6,#(dword_18088 - 0x18020)]|214-248-104-224
12218|code|SUBS.W          R4, R4, R8|180-235-8-4
12222|code|SBC.W           R5, R5, R9|101-235-9-5
12226|code|SUBS.W          R4, R4, LR|180-235-14-4
12230|code|SBC.W           R5, R5, LR,ASR#31|101-235-238-117
12234|code|STR.W           LR, [SP,#0x38+var_30]|205-248-8-224
12238|code|STRD.W          R4, R5, [SP,#0x38+var_38]|205-233-0-69
12242|code|BLX             __fprintf_chk|254-247-138-232
12246|code|LDRD.W          R8, R9, [R6,#0xD0]|214-233-52-137
12250|code|LDRD.W          R4, R5, [R11]|219-233-0-69
12254|code|MOV             R3, R10|83-70
12256|code|LDR.W           R6, [R6,#(dword_180F8 - 0x18020)]|214-248-216-96
12260|code|MOVS            R1, #1|1-33
12262|code|SUBS.W          R4, R4, R8|180-235-8-4
12266|code|LDR             R2, =(aSLldDRecordsOu - 0x2FFC); "%s%lld+%d records out\n"|19-74
12268|code|SBC.W           R5, R5, R9|101-235-9-5
12272|code|SUBS            R4, R4, R6|164-27
12274|code|LDR             R0, [R7]|56-104
12276|code|SBC.W           R5, R5, R6,ASR#31|101-235-230-117
12280|code|ADD             R2, PC; "%s%lld+%d records out\n"|122-68
12282|code|STRD.W          R4, R5, [SP,#0x38+var_38]|205-233-0-69
12286|code|STR             R6, [SP,#0x38+var_30]|2-150
12288|code|BLX             __fprintf_chk|254-247-114-232
12292|code|ADD             SP, SP, #0x14|5-176
12294|code|POP.W           {R4-R11,PC}|189-232-240-143
12298|code|LDR             R7, [R0,R3]; stderr|199-88
12300|code|MOVS            R1, #1|1-33
12302|code|LDR             R2, =(aRemainingBlock - 0x3016); "  remaining block count=%lld\n"|11-74
12304|code|LDR             R0, [R7]|56-104
12306|code|ADD             R2, PC; "  remaining block count=%lld\n"|122-68
12308|code|STRD.W          R4, R5, [SP,#0x38+var_38]|205-233-0-69
12312|code|BLX             __fprintf_chk|254-247-102-232
12316|code|B               loc_2F9A|189-231
12318|data|ALIGN 0x10|0-191
12320|data|DCD unk_18020 - 0x2F86|154-80-1-0
12324|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2F92|70-79-1-0
12328|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
12332|data|DCD unk_18020 - 0x2FA8|120-80-1-0
12336|data|DCD unk_18008 - 0x2FAC|92-80-1-0
12340|data|DCD aSLldDRecordsIn - 0x2FB4; "%s%lld+%d records in\n"|228-38-0-0
12344|data|DCD aSLldDRecordsOu - 0x2FFC; "%s%lld+%d records out\n"|180-38-0-0
12348|data|DCD aRemainingBlock - 0x3016; "  remaining block count=%lld\n"|98-38-0-0
12352|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x304A)|14-75
12354|code|MOVS            R1, #1; size|1-33
12356|code|PUSH            {R4,LR}|16-181
12358|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
12360|code|LDR             R4, =(stderr_ptr - 0x17ED8)|13-76
12362|code|MOVS            R2, #0xB5; n|181-34
12364|code|LDR             R0, =(aUsageSgpDdBsBs - 0x3054); "Usage: sgp_dd  [bs=BS] [count=COUNT] [i"...|13-72
12366|code|LDR             R4, [R3,R4]; stderr|28-89
12368|code|ADD             R0, PC; "Usage: sgp_dd  [bs=BS] [count=COUNT] [i"...|120-68
12370|code|LDR             R3, [R4]; s|35-104
12372|code|BLX             fwrite|253-247-172-239
12376|code|LDR             R0, =(aBptBptCdbsz610 - 0x3066); "               [bpt=BPT] [cdbsz=6|10|12"...|11-72
12378|code|LDR             R3, [R4]; s|35-104
12380|code|MOVS            R1, #1; size|1-33
12382|code|MOV.W           R2, #0x218; n|79-244-6-114
12386|code|ADD             R0, PC; "               [bpt=BPT] [cdbsz=6|10|12"...|120-68
12388|code|BLX             fwrite|253-247-164-239
12392|code|LDR             R0, =(aDioIsDirectIo1 - 0x3072); "    dio         is direct IO, 1->attemp"...|8-72
12394|code|LDR             R3, [R4]; s|35-104
12396|code|MOVS            R1, #1; size|1-33
12398|code|ADD             R0, PC; "    dio         is direct IO, 1->attemp"...|120-68
12400|code|MOV.W           R2, #0x468; n|79-244-141-98
12404|code|POP.W           {R4,LR}|189-232-16-64
12408|code|B.W             j_fwrite|253-247-152-191
12412|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x304A|142-78-1-0
12416|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
12420|data|DCD aUsageSgpDdBsBs - 0x3054; "Usage: sgp_dd  [bs=BS] [count=COUNT] [i"...|116-38-0-0
12424|data|DCD aBptBptCdbsz610 - 0x3066; "               [bpt=BPT] [cdbsz=6|10|12"...|26-39-0-0
12428|data|DCD aDioIsDirectIo1 - 0x3072; "    dio         is direct IO, 1->attemp"...|42-41-0-0
12432|code|PUSH.W          {R4-R8,LR}|45-233-240-65
12436|code|MOVS            R1, #0; tz|0-33
12438|code|VPUSH           {D8-D9}|45-237-4-139
12442|code|MOV             R7, R0|7-70
12444|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x30A6)|223-248-48-129
12448|code|LDR             R3, =(__stack_chk_guard_ptr - 0x17ED8)|76-75
12450|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
12452|code|SUB             SP, SP, #0x18|134-176
12454|code|LDR.W           R6, [R8,R3]; __stack_chk_guard|88-248-3-96
12458|code|ADD             R0, SP, #0x40+tv; tv|3-168
12460|code|LDR             R3, [R6]|51-104
12462|code|STR             R3, [SP,#0x40+var_2C]|5-147
12464|code|BLX             gettimeofday|253-247-144-239
12468|code|LDR             R3, =(unk_18020 - 0x30BC)|72-75
12470|code|LDR             R4, [SP,#0x40+tv.tv_usec]|4-156
12472|code|ADD             R3, PC; unk_18020|123-68
12474|code|LDR             R2, [SP,#0x40+tv]|3-154
12476|code|VLDR            D5, =0.000001|159-237-60-91
12480|code|LDR.W           R5, [R3,#(dword_18178 - 0x18020)]|211-248-88-81
12484|code|LDR.W           R3, [R3,#(dword_1817C - 0x18020)]|211-248-92-49
12488|code|SUBS            R5, R2, R5|85-27
12490|code|LDR             R1, =(unk_18008 - 0x30E8)|68-73
12492|code|SUBS            R4, R4, R3|228-26
12494|code|LDR             R3, =(unk_18020 - 0x30E2)|68-75
12496|code|ITTT MI|66-191
12498|code|ADDMI.W         R4, R4, #0xF4000|4-245-116-36
12502|code|ADDMI.W         R5, R5, #0xFFFFFFFF|5-241-255-53
12506|code|ADDMI.W         R4, R4, #0x240|4-245-16-116
12510|code|ADD             R3, PC; unk_18020|123-68
12512|code|VMOV            S15, R5|7-238-144-90
12516|code|ADD             R1, PC; unk_18008|121-68
12518|code|VMOV            S13, R4|6-238-144-74
12522|code|VCVT.F64.S32    D7, S15|184-238-231-123
12526|code|LDRD.W          R0, R1, [R1]|209-233-0-1
12530|code|VLDR            S16, [R3,#0x128]|147-237-74-138
12534|code|LDRD.W          R2, R3, [R3,#0xD0]|211-233-52-35
12538|code|SUBS            R0, R0, R2|128-26
12540|code|SBC.W           R1, R1, R3|97-235-3-1
12544|code|VCVT.F64.S32    D6, S13|184-238-230-107
12548|code|VMLA.F64        D7, D6, D5|6-238-5-123
12552|code|VMOV.F64        D9, D7|176-238-71-155
12556|code|BL              sub_5244|2-240-154-248
12560|code|LDR             R3, =(stderr_ptr - 0x17ED8)|52-75
12562|code|VCVT.F64.S32    D8, S16|184-238-200-139
12566|code|LDR.W           R8, [R8,R3]; stderr|88-248-3-128
12570|code|LDR.W           R2, [R8]|216-248-0-32
12574|code|VMOV            D7, R0, R1|65-236-23-11
12578|code|VMUL.F64        D8, D8, D7|40-238-7-139
12582|code|CBNZ            R7, loc_3180|95-187
12584|code|LDR             R3, =(aWas - 0x312E); "was"|47-75
12586|code|ADD             R3, PC; "was"|123-68
12588|code|MOV             R0, R2|16-70
12590|code|LDR             R2, =(aTimeToTransfer - 0x313A); "time to transfer data %s %d.%06d secs"|47-74
12592|code|STR             R5, [SP,#0x40+var_40]|0-149
12594|code|MOVS            R1, #1|1-33
12596|code|STR             R4, [SP,#0x40+var_40+4]|1-148
12598|code|ADD             R2, PC; "time to transfer data %s %d.%06d secs"|122-68
12600|code|BLX             __fprintf_chk|253-247-214-239
12604|code|VLDR            D6, =0.00001|159-237-30-107
12608|code|VLDR            D7, =511.0|159-237-31-123
12612|code|VCMPE.F64       D9, D6|180-238-198-155
12616|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
12620|code|VCMPE.F64       D8, D7|180-238-199-139
12624|code|ITE GT|204-191
12626|code|MOVGT           R3, #1|1-35
12628|code|MOVLE           R3, #0|0-35
12630|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
12634|code|AND.W           R3, R3, #1|3-240-1-3
12638|code|IT LE|216-191
12640|code|MOVLE           R3, #0|0-35
12642|code|CBNZ            R3, loc_3186|131-185
12644|code|LDR.W           R1, [R8]; stream|216-248-0-16
12648|code|MOVS            R0, #0xA; c|10-32
12650|code|BLX             fputc|253-247-214-239
12654|code|LDR             R2, [SP,#0x40+var_2C]|5-154
12656|code|LDR             R3, [R6]|51-104
12658|code|CMP             R2, R3|154-66
12660|code|BNE             loc_31A6|23-209
12662|code|ADD             SP, SP, #0x18|6-176
12664|code|VPOP            {D8-D9}|189-236-4-139
12668|code|POP.W           {R4-R8,PC}|189-232-240-129
12672|code|LDR             R3, =(aSoFar - 0x3186); "so far"|27-75
12674|code|ADD             R3, PC; "so far"|123-68
12676|code|B               loc_312C|210-231
12678|code|VLDR            D7, =1000000.0|159-237-16-123
12682|code|MOVS            R1, #1|1-33
12684|code|LDR             R2, =(a2fMbSec - 0x3196); ", %.2f MB/sec\n"|25-74
12686|code|LDR.W           R0, [R8]|216-248-0-0
12690|code|ADD             R2, PC; ", %.2f MB/sec\n"|122-68
12692|code|VMUL.F64        D7, D9, D7|41-238-7-123
12696|code|VDIV.F64        D8, D8, D7|136-238-7-139
12700|code|VSTR            D8, [SP,#0x40+var_40]|141-237-0-139
12704|code|BLX             __fprintf_chk|253-247-162-239
12708|code|B               loc_316E|227-231
12710|code|BLX             __stack_chk_fail|253-247-228-238
12714|data|ALIGN 4|0-191
12716|data|DCD 0x8000F3AF|175-243-0-128
12720|data|DCFD 0.000001|141-237-181-160-247-198-176-62
12728|data|DCFD 0.00001|241-104-227-136-181-248-228-62
12736|data|DCFD 511.0|0-0-0-0-0-240-127-64
12744|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
12752|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x30A6|50-78-1-0
12756|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
12760|data|DCD unk_18020 - 0x30BC|100-79-1-0
12764|data|DCD unk_18008 - 0x30E8|32-79-1-0
12768|data|DCD unk_18020 - 0x30E2|62-79-1-0
12772|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
12776|data|DCD aWas - 0x312E; "was"|226-44-0-0
12780|data|DCD aTimeToTransfer - 0x313A; "time to transfer data %s %d.%06d secs"|218-44-0-0
12784|data|DCD aSoFar - 0x3186; "so far"|130-44-0-0
12788|data|DCD a2fMbSec - 0x3196; ", %.2f MB/sec\n"|166-44-0-0
12792|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x3202)|12-75
12794|code|MOVS            R1, #1|1-33
12796|code|PUSH            {R4,LR}|16-181
12798|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
12800|code|LDR             R4, =(stderr_ptr - 0x17ED8)|11-76
12802|code|MOVS            R2, #0x20 ; ' '|32-34
12804|code|LDR             R0, =(aProgressReport - 0x320C); "Progress report, continuing ...\n"|11-72
12806|code|LDR             R3, [R3,R4]; stderr|27-89
12808|code|ADD             R0, PC; "Progress report, continuing ...\n"|120-68
12810|code|LDR             R3, [R3]|27-104
12812|code|BLX             fwrite|253-247-208-238
12816|code|LDR             R3, =(unk_18020 - 0x3216)|9-75
12818|code|ADD             R3, PC; unk_18020|123-68
12820|code|LDR.W           R3, [R3,#(dword_18180 - 0x18020)]|211-248-96-49
12824|code|CBZ             R3, loc_3220|19-177
12826|code|MOVS            R0, #1|1-32
12828|code|BL              sub_3090|255-247-56-255
12832|code|LDR             R0, =(asc_5E70 - 0x322A); "  "|6-72
12834|code|POP.W           {R4,LR}|189-232-16-64
12838|code|ADD             R0, PC; "  "|120-68
12840|code|B               sub_2F7C|168-230
12842|data|ALIGN 4|0-191
12844|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3202|214-76-1-0
12848|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
12852|data|DCD aProgressReport - 0x320C; "Progress report, continuing ...\n"|64-44-0-0
12856|data|DCD unk_18020 - 0x3216|10-78-1-0
12860|data|DCD asc_5E70 - 0x322A; "  "|70-44-0-0
12864|code|PUSH            {R3-R7,LR}|248-181
12866|code|MOV             R4, R0|4-70
12868|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x3250)|16-75
12870|code|MOVS            R1, #1; size|1-33
12872|code|LDR             R5, =(stderr_ptr - 0x17ED8)|16-77
12874|code|MOVS            R2, #0x26 ; '&'; n|38-34
12876|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
12878|code|LDR             R0, =(aThreadCancelle - 0x325C); "thread cancelled while out mutex held\n"|16-72
12880|code|ADD.W           R6, R4, #0x58 ; 'X'|4-241-88-6
12884|code|MOV             R7, R1|15-70
12886|code|LDR             R3, [R3,R5]; stderr|91-89
12888|code|ADD             R0, PC; "thread cancelled while out mutex held\n"|120-68
12890|code|LDR             R3, [R3]; s|27-104
12892|code|BLX             fwrite|253-247-168-238
12896|code|STR.W           R7, [R4,#0xC4]|196-248-196-112
12900|code|ADD.W           R0, R4, #0xC8; mutex|4-241-200-0
12904|code|BLX             pthread_mutex_unlock|253-247-44-238
12908|code|MOV             R0, R6; mutex|48-70
12910|code|BLX             pthread_mutex_lock|253-247-110-238
12914|code|STR             R7, [R4,#0x54]|103-101
12916|code|MOV             R0, R6; mutex|48-70
12918|code|BLX             pthread_mutex_unlock|253-247-38-238
12922|code|ADD.W           R0, R4, #0xE0; cond|4-241-224-0
12926|code|POP.W           {R3-R7,LR}|189-232-248-64
12930|code|B.W             j_pthread_cond_broadcast|253-247-49-190
12934|data|ALIGN 4|0-191
12936|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3250|136-76-1-0
12940|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
12944|data|DCD aThreadCancelle - 0x325C; "thread cancelled while out mutex held\n"|24-44-0-0
12948|code|PUSH            {R3-R7,LR}|248-181
12950|code|MOV             R4, R0|4-70
12952|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x32A4)|16-75
12954|code|MOVS            R1, #1; size|1-33
12956|code|LDR             R5, =(stderr_ptr - 0x17ED8)|16-77
12958|code|MOVS            R2, #0x25 ; '%'; n|37-34
12960|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
12962|code|LDR             R0, =(aThreadCancelle_0 - 0x32B0); "thread cancelled while in mutex held\n"|16-72
12964|code|ADD.W           R6, R4, #0xC8|4-241-200-6
12968|code|MOV             R7, R1|15-70
12970|code|LDR             R3, [R3,R5]; stderr|91-89
12972|code|ADD             R0, PC; "thread cancelled while in mutex held\n"|120-68
12974|code|LDR             R3, [R3]; s|27-104
12976|code|BLX             fwrite|253-247-126-238
12980|code|STR             R7, [R4,#0x54]|103-101
12982|code|ADD.W           R0, R4, #0x58 ; 'X'; mutex|4-241-88-0
12986|code|BLX             pthread_mutex_unlock|253-247-4-238
12990|code|MOV             R0, R6; mutex|48-70
12992|code|BLX             pthread_mutex_lock|253-247-68-238
12996|code|STR.W           R7, [R4,#0xC4]|196-248-196-112
13000|code|MOV             R0, R6; mutex|48-70
13002|code|BLX             pthread_mutex_unlock|253-247-252-237
13006|code|ADD.W           R0, R4, #0xE0; cond|4-241-224-0
13010|code|POP.W           {R3-R7,LR}|189-232-248-64
13014|code|B.W             j_pthread_cond_broadcast|253-247-7-190
13018|data|ALIGN 4|0-191
13020|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x32A4|52-76-1-0
13024|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
13028|data|DCD aThreadCancelle_0 - 0x32B0; "thread cancelled while in mutex held\n"|236-43-0-0
13032|code|PUSH.W          {R4-R11,LR}|45-233-240-79
13036|code|SUB             SP, SP, #0x24|137-176
13038|code|LDR             R5, [R0,#8]|133-104
13040|code|MOV             R4, R0|4-70
13042|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x32FC)|205-75
13044|code|LDR.W           R8, [R0,#0xC4]|208-248-196-128
13048|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
13050|code|STR             R3, [SP,#0x48+var_30]|6-147
13052|code|LDR.W           R3, [R0,#0xC0]|208-248-192-48
13056|code|CBZ             R5, loc_3368|149-179
13058|code|LDR.W           R3, [R0,#0xF8]|208-248-248-48
13062|code|LDR.W           R6, [R0,#0x104]|208-248-4-97
13066|code|STR             R3, [SP,#0x48+var_34]|5-147
13068|code|LDR.W           R3, [R0,#0xF0]|208-248-240-48
13072|code|STR             R3, [SP,#0x48+var_2C]|7-147
13074|code|ADD.W           R9, R4, #0x64 ; 'd'|4-241-100-9
13078|code|MOVS            R1, #0; c|0-33
13080|code|MOV             R2, R8; n|66-70
13082|code|LDR             R7, [R4,#0x18]|167-105
13084|code|MOV             R0, R9; s|72-70
13086|code|LDRD.W          R10, R11, [R4,#0x10]|212-233-4-171
13090|code|BLX             memset|253-247-184-238
13094|code|LDR             R3, [SP,#0x48+var_34]|5-155
13096|code|CBZ             R3, loc_3336|43-177
13098|code|LDRB.W          R3, [R4,#0x65]|148-248-101-48
13102|code|ORR.W           R3, R3, #0x10|67-240-16-3
13106|code|STRB.W          R3, [R4,#0x65]|132-248-101-48
13110|code|CBZ             R6, loc_3344|46-177
13112|code|LDRB.W          R3, [R4,#0x65]|148-248-101-48
13116|code|ORR.W           R3, R3, #8|67-240-8-3
13120|code|STRB.W          R3, [R4,#0x65]|132-248-101-48
13124|code|SUB.W           R3, R8, #6; switch 11 cases|168-241-6-3
13128|code|CMP             R3, #0xA|10-43
13130|code|BHI.W           def_334E; jumptable 0000334E default case, cases 7-9,11,13-15|0-242-37-129
13134|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
13138|data|DCW 0xEC; jump table for switch statement|236-0
13140|data|DCW 0x123|35-1
13142|data|DCW 0x123|35-1
13144|data|DCW 0x123|35-1
13146|data|DCW 0xC1|193-0
13148|data|DCW 0x123|35-1
13150|data|DCW 0xA1|161-0
13152|data|DCW 0x123|35-1
13154|data|DCW 0x123|35-1
13156|data|DCW 0x123|35-1
13158|data|DCW 0x15|21-0
13160|code|MOV             R8, R3|152-70
13162|code|LDR.W           R3, [R0,#0xD8]|208-248-216-48
13166|code|LDR.W           R6, [R0,#0xE4]|208-248-228-96
13170|code|STR             R3, [SP,#0x48+var_34]|5-147
13172|code|LDR.W           R3, [R0,#0xD0]|208-248-208-48
13176|code|STR             R3, [SP,#0x48+var_2C]|7-147
13178|code|B               loc_3312|202-231
13180|code|CMP             R5, #0; jumptable 0000334E case 16|0-45
13182|code|MOV.W           R3, R11,ASR#24|79-234-43-99
13186|code|STRB.W          R11, [R4,#0x69]|132-248-105-176
13190|code|ITE EQ|12-191
13192|code|MOVEQ           R2, #0x88|136-34
13194|code|MOVNE           R2, #0x8A|138-34
13196|code|STRB.W          R3, [R4,#0x66]|132-248-102-48
13200|code|MOV.W           R3, R11,ASR#8|79-234-43-35
13204|code|STRB.W          R2, [R4,#0x64]|132-248-100-32
13208|code|MOV.W           R2, R11,ASR#16|79-234-43-66
13212|code|STRB.W          R3, [R4,#0x68]|132-248-104-48
13216|code|MOV.W           R3, R10,LSR#16|79-234-26-67
13220|code|STRB.W          R2, [R4,#0x67]|132-248-103-32
13224|code|MOV.W           R2, R10,LSR#24|79-234-26-98
13228|code|STRB.W          R3, [R4,#0x6B]|132-248-107-48
13232|code|LSRS            R3, R7, #0x18|59-14
13234|code|STRB.W          R2, [R4,#0x6A]|132-248-106-32
13238|code|MOV.W           R2, R10,LSR#8|79-234-26-34
13242|code|STRB.W          R3, [R4,#0x6E]|132-248-110-48
13246|code|LSRS            R3, R7, #8|59-10
13248|code|STRB.W          R2, [R4,#0x6C]|132-248-108-32
13252|code|LSRS            R2, R7, #0x10|58-12
13254|code|STRB.W          R10, [R4,#0x6D]|132-248-109-160
13258|code|STRB.W          R7, [R4,#0x71]|132-248-113-112
13262|code|STRB.W          R2, [R4,#0x6F]|132-248-111-32
13266|code|STRB.W          R3, [R4,#0x70]|132-248-112-48
13270|code|ADD.W           R6, R4, #0x24 ; '$'|4-241-36-6
13274|code|MOVS            R1, #0; c|0-33
13276|code|MOVS            R2, #0x40 ; '@'; n|64-34
13278|code|MOV             R0, R6; s|48-70
13280|code|BLX             memset|253-247-88-238
13284|code|LDR.W           R3, [R4,#0xB4]|212-248-180-48
13288|code|LDR             R2, [R4,#0x1C]|226-105
13290|code|CMP             R5, #0|0-45
13292|code|MOV.W           LR, #0x53 ; 'S'|79-240-83-14
13296|code|MOV.W           R0, #0x40 ; '@'|79-240-64-0
13300|code|MUL.W           R3, R3, R7|3-251-7-243
13304|code|ITE NE|20-191
13306|code|MOVNE           R1, #0xFFFFFFFE|111-240-1-1
13310|code|MOVEQ           R1, #0xFFFFFFFD|111-240-2-1
13314|code|STR             R2, [R4,#0x34]|98-99
13316|code|STRB.W          R8, [R4,#0x2C]|132-248-44-128
13320|code|MOVW            R2, #0xEA60|78-246-96-34
13324|code|STR.W           R9, [R4,#0x38]|196-248-56-144
13328|code|STR             R4, [R4,#0x4C]|228-100
13330|code|STR             R3, [R4,#0x30]|35-99
13332|code|LDR             R3, [SP,#0x48+var_2C]|7-155
13334|code|STR.W           R10, [R4,#0x48]|196-248-72-160
13338|code|STR.W           LR, [R4,#0x24]|196-248-36-224
13342|code|STRB.W          R0, [R4,#0x2D]|132-248-45-0
13346|code|STR             R2, [R4,#0x40]|34-100
13348|code|STR             R1, [R4,#0x28]|161-98
13350|code|ADD.W           R1, R4, #0x74 ; 't'|4-241-116-1
13354|code|STR             R1, [R4,#0x3C]|225-99
13356|code|CBZ             R3, loc_3436|27-177
13358|code|LDR             R3, [R4,#0x44]|99-108
13360|code|ORR.W           R3, R3, #1|67-240-1-3
13364|code|STR             R3, [R4,#0x44]|99-100
13366|code|LDR.W           R3, [R4,#0x108]|212-248-8-49
13370|code|CMP             R3, #8|8-43
13372|code|BLE             loc_3476|27-221
13374|code|LDR             R3, =dword_110|123-75
13376|code|LDR             R2, [SP,#0x48+var_30]|6-154
13378|code|LDR             R3, [R2,R3]|211-88
13380|code|LDR             R0, [R3]|24-104
13382|code|CMP             R5, #0|0-45
13384|code|BEQ.W           loc_35E6|0-240-205-128
13388|code|LDR             R3, =(aWrite - 0x3452); "WRITE"|120-75
13390|code|ADD             R3, PC; "WRITE"|123-68
13392|code|LDR             R2, =(aSgStartIoScsiS - 0x345E); "sg_start_io: SCSI %s, blk=%lld num_blks"...|120-74
13394|code|MOVS            R1, #1|1-33
13396|code|STRD.W          R10, R11, [SP,#0x48+var_48]|205-233-0-171
13400|code|STR             R7, [SP,#0x48+var_40]|2-151
13402|code|ADD             R2, PC; "sg_start_io: SCSI %s, blk=%lld num_blks"...|122-68
13404|code|BLX             __fprintf_chk|253-247-68-238
13408|code|LDR             R0, [R4,#0x38]; command|160-107
13410|code|BLX             sg_print_command|253-247-60-237
13414|code|B               loc_3474|5-224
13416|code|BLX             __errno_location|253-247-14-238
13420|code|LDR             R3, [R0]|3-104
13422|code|CMP             R3, #4|4-43
13424|code|BNE.W           loc_35CE|64-240-173-128
13428|code|LDR             R5, [R4,#8]|165-104
13430|code|LDR             R3, [R4]|35-104
13432|code|MOV             R1, R6; buf|49-70
13434|code|LDR             R0, [R4,#4]|96-104
13436|code|MOVS            R2, #0x40 ; '@'; n|64-34
13438|code|CMP             R5, #0|0-45
13440|code|IT EQ|8-191
13442|code|MOVEQ           R0, R3; fd|24-70
13444|code|BLX             write|253-247-30-238
13448|code|CMP             R0, #0|0-40
13450|code|BLT             loc_3468|237-219
13452|code|MOVS            R0, #0|0-32
13454|code|ADD             SP, SP, #0x24 ; '$'|9-176
13456|code|POP.W           {R4-R11,PC}|189-232-240-143
13460|code|CMP             R5, #0; jumptable 0000334E case 12|0-45
13462|code|MOV.W           R3, R10,LSR#24|79-234-26-99
13466|code|STRB.W          R10, [R4,#0x69]|132-248-105-160
13470|code|ITE EQ|12-191
13472|code|MOVEQ           R2, #0xA8|168-34
13474|code|MOVNE           R2, #0xAA|170-34
13476|code|STRB.W          R3, [R4,#0x66]|132-248-102-48
13480|code|MOV.W           R3, R10,LSR#8|79-234-26-35
13484|code|STRB.W          R2, [R4,#0x64]|132-248-100-32
13488|code|MOV.W           R2, R10,LSR#16|79-234-26-66
13492|code|STRB.W          R3, [R4,#0x68]|132-248-104-48
13496|code|LSRS            R3, R7, #0x10|59-12
13498|code|STRB.W          R2, [R4,#0x67]|132-248-103-32
13502|code|LSRS            R2, R7, #0x18|58-14
13504|code|STRB.W          R3, [R4,#0x6B]|132-248-107-48
13508|code|LSRS            R3, R7, #8|59-10
13510|code|STRB.W          R7, [R4,#0x6D]|132-248-109-112
13514|code|STRB.W          R2, [R4,#0x6A]|132-248-106-32
13518|code|STRB.W          R3, [R4,#0x6C]|132-248-108-48
13522|code|B               loc_33D6|128-231
13524|code|LSRS            R3, R7, #0x10; jumptable 0000334E case 10|59-12
13526|code|CMP             R5, #0|0-45
13528|code|MOV.W           R1, R10,LSR#24|79-234-26-97
13532|code|STRB.W          R10, [R4,#0x69]|132-248-105-160
13536|code|MOV.W           R3, R3,LSL#16|79-234-3-67
13540|code|ITE EQ|12-191
13542|code|MOVEQ           R2, #0x28 ; '('|40-34
13544|code|MOVNE           R2, #0x2A ; '*'|42-34
13546|code|STRB.W          R1, [R4,#0x66]|132-248-102-16
13550|code|STRB.W          R2, [R4,#0x64]|132-248-100-32
13554|code|MOV.W           R1, R10,LSR#8|79-234-26-33
13558|code|MOV.W           R2, R10,LSR#16|79-234-26-66
13562|code|STRB.W          R7, [R4,#0x6C]|132-248-108-112
13566|code|STRB.W          R2, [R4,#0x67]|132-248-103-32
13570|code|LSRS            R2, R7, #8|58-10
13572|code|STRB.W          R1, [R4,#0x68]|132-248-104-16
13576|code|STRB.W          R2, [R4,#0x6B]|132-248-107-32
13580|code|CMP             R3, #0|0-43
13582|code|BEQ.W           loc_33D6|63-244-98-175
13586|code|LDR             R0, =dword_110|70-72
13588|code|MOVS            R1, #1|1-33
13590|code|LDR             R5, [SP,#0x48+var_30]|6-157
13592|code|MOVW            R3, #0xFFFF|79-246-255-115
13596|code|LDR             R2, =(aSgpDdFor10Byte - 0x3524); "sgp_dd: for 10 byte commands, maximum n"...|70-74
13598|code|LDR             R5, [R5,R0]|45-88
13600|code|ADD             R2, PC; "sgp_dd: for 10 byte commands, maximum n"...|122-68
13602|code|LDR             R0, [R5]|40-104
13604|code|BLX             __fprintf_chk|253-247-224-237
13608|code|B               loc_35AC|64-224
13610|code|CMP             R5, #0; jumptable 0000334E case 6|0-45
13612|code|UBFX.W          R2, R10, #0x10, #5|202-243-4-66
13616|code|STRB.W          R10, [R4,#0x67]|132-248-103-160
13620|code|ITE EQ|12-191
13622|code|MOVEQ           R3, #8|8-35
13624|code|MOVNE           R3, #0xA|10-35
13626|code|CMP.W           R7, #0x100|183-245-128-127
13630|code|STRB.W          R3, [R4,#0x64]|132-248-100-48
13634|code|STRB.W          R2, [R4,#0x65]|132-248-101-32
13638|code|MOV.W           R3, R10,LSR#8|79-234-26-35
13642|code|STRB.W          R3, [R4,#0x66]|132-248-102-48
13646|code|BEQ             loc_35EC|77-208
13648|code|STRB.W          R7, [R4,#0x68]|132-248-104-112
13652|code|BHI             loc_35F4|78-216
13654|code|ADDS.W          R2, R10, R7|26-235-7-2
13658|code|MOV.W           R0, #0|79-240-0-0
13662|code|ADC.W           R3, R11, #0|75-241-0-3
13666|code|ADDS.W          R2, R2, #0xFFFFFFFF|18-241-255-50
13670|code|ADC.W           R3, R3, #0xFFFFFFFF|67-241-255-51
13674|code|MOVT.W          R0, #0xFFE0|207-246-224-112
13678|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
13682|code|ANDS            R2, R0|2-64
13684|code|ANDS            R3, R1|11-64
13686|code|ORRS            R3, R2|19-67
13688|code|BNE             loc_360A|71-209
13690|code|LDR             R3, [SP,#0x48+var_34]|5-155
13692|code|ORRS            R3, R6|51-67
13694|code|BEQ.W           loc_33D6|63-244-42-175
13698|code|LDR             R3, =dword_110|42-75
13700|code|MOVS            R1, #1; size|1-33
13702|code|LDR             R5, [SP,#0x48+var_30]|6-157
13704|code|MOVS            R2, #0x40 ; '@'; n|64-34
13706|code|LDR             R0, =(aSgpDdFor6ByteC - 0x3592); "sgp_dd: for 6 byte commands, neither dp"...|44-72
13708|code|LDR             R5, [R5,R3]|237-88
13710|code|ADD             R0, PC; "sgp_dd: for 6 byte commands, neither dp"...|120-68
13712|code|LDR             R3, [R5]; s|43-104
13714|code|BLX             fwrite|253-247-14-237
13718|code|B               loc_35AC|9-224
13720|code|LDR             R0, =dword_110; jumptable 0000334E default case, cases 7-9,11,13-15|36-72
13722|code|MOV             R3, R8|67-70
13724|code|LDR             R5, [SP,#0x48+var_30]|6-157
13726|code|MOVS            R1, #1|1-33
13728|code|LDR             R2, =(aSgpDdExpectedC - 0x35A8); "sgp_dd: expected cdb size of 6, 10, 12,"...|39-74
13730|code|LDR             R5, [R5,R0]|45-88
13732|code|ADD             R2, PC; "sgp_dd: expected cdb size of 6, 10, 12,"...|122-68
13734|code|LDR             R0, [R5]|40-104
13736|code|BLX             __fprintf_chk|253-247-158-237
13740|code|LDRD.W          R6, R7, [R4,#0x10]|212-233-4-103
13744|code|MOVS            R1, #1|1-33
13746|code|LDR             R3, [R4,#0x18]|163-105
13748|code|LDR             R2, =(aSgpDdBadCdbBui - 0x35BC); "sgp_dd: bad cdb build, start_blk=%lld, "...|35-74
13750|code|LDR             R0, [R5]|40-104
13752|code|ADD             R2, PC; "sgp_dd: bad cdb build, start_blk=%lld, "...|122-68
13754|code|STRD.W          R6, R7, [SP,#0x48+var_48]|205-233-0-103
13758|code|STR             R3, [SP,#0x48+var_40]|2-147
13760|code|BLX             __fprintf_chk|253-247-146-237
13764|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
13768|code|ADD             SP, SP, #0x24 ; '$'|9-176
13770|code|POP.W           {R4-R11,PC}|189-232-240-143
13774|code|CMP             R3, #0xC|12-43
13776|code|IT EQ|8-191
13778|code|MOVEQ           R0, #1|1-32
13780|code|BEQ.W           loc_348E|63-244-91-175
13784|code|LDR             R0, =(aStartingIoOnSg - 0x35DE); "starting io on sg device, error"|27-72
13786|code|ADD             R0, PC; "starting io on sg device, error"|120-68
13788|code|BLX             perror|253-247-218-236
13792|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
13796|code|B               loc_348E|83-231
13798|code|LDR             R3, =(aRead_0 - 0x35EC); "READ"|25-75
13800|code|ADD             R3, PC; "READ"|123-68
13802|code|B               loc_3450|49-231
13804|code|MOVS            R3, #0|0-35
13806|code|STRB.W          R3, [R4,#0x68]|132-248-104-48
13810|code|B               loc_3556|176-231
13812|code|LDR             R3, =dword_110|13-75
13814|code|MOVS            R1, #1; size|1-33
13816|code|LDR             R5, [SP,#0x48+var_30]|6-157
13818|code|MOVS            R2, #0x3D ; '='; n|61-34
13820|code|LDR             R0, =(aSgpDdFor6ByteC_0 - 0x3604); "sgp_dd: for 6 byte commands, maximum nu"...|20-72
13822|code|LDR             R5, [R5,R3]|237-88
13824|code|ADD             R0, PC; "sgp_dd: for 6 byte commands, maximum nu"...|120-68
13826|code|LDR             R3, [R5]; s|43-104
13828|code|BLX             fwrite|253-247-212-236
13832|code|B               loc_35AC|208-231
13834|code|LDR             R0, =dword_110|8-72
13836|code|MOVW            R3, #0xFFFF|79-246-255-115
13840|code|LDR             R5, [SP,#0x48+var_30]|6-157
13842|code|MOVT.W          R3, #0x1F|192-242-31-3
13846|code|LDR             R2, =(aSgpDdFor6ByteC_1 - 0x3620); "sgp_dd: for 6 byte commands, can't addr"...|15-74
13848|code|MOVS            R1, #1|1-33
13850|code|LDR             R5, [R5,R0]|45-88
13852|code|ADD             R2, PC; "sgp_dd: for 6 byte commands, can't addr"...|122-68
13854|code|LDR             R0, [R5]|40-104
13856|code|BLX             __fprintf_chk|253-247-98-237
13860|code|B               loc_35AC|194-231
13862|data|ALIGN 4|0-191
13864|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x32FC|220-75-1-0
13868|data|DCD dword_110|16-1-0-0
13872|data|DCD aWrite - 0x3452; "WRITE"|114-42-0-0
13876|data|DCD aSgStartIoScsiS - 0x345E; "sg_start_io: SCSI %s, blk=%lld num_blks"...|182-43-0-0
13880|data|DCD aSgpDdFor10Byte - 0x3524; "sgp_dd: for 10 byte commands, maximum n"...|116-42-0-0
13884|data|DCD aSgpDdFor6ByteC - 0x3592; "sgp_dd: for 6 byte commands, neither dp"...|194-41-0-0
13888|data|DCD aSgpDdExpectedC - 0x35A8; "sgp_dd: expected cdb size of 6, 10, 12,"...|48-42-0-0
13892|data|DCD aSgpDdBadCdbBui - 0x35BC; "sgp_dd: bad cdb build, start_blk=%lld, "...|164-42-0-0
13896|data|DCD aStartingIoOnSg - 0x35DE; "starting io on sg device, error"|98-42-0-0
13900|data|DCD aRead_0 - 0x35EC; "READ"|224-40-0-0
13904|data|DCD aSgpDdFor6ByteC_0 - 0x3604; "sgp_dd: for 6 byte commands, maximum nu"...|208-40-0-0
13908|data|DCD aSgpDdFor6ByteC_1 - 0x3620; "sgp_dd: for 6 byte commands, can't addr"...|244-40-0-0
13912|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x3660)|20-75
13914|code|LDR             R1, =(__stack_chk_guard_ptr - 0x17ED8)|21-73
13916|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
13918|code|LDR             R2, =(stderr_ptr - 0x17ED8)|21-74
13920|code|PUSH.W          {R4-R9,LR}|45-233-240-67
13924|code|SUB             SP, SP, #0xC|131-176
13926|code|LDR             R1, [R3,R1]; __stack_chk_guard|89-88
13928|code|ADD.W           R9, R0, #0xE0|0-241-224-9
13932|code|LDR             R4, =(unk_18020 - 0x367C)|18-76
13934|code|MOV             R6, R0|6-70
13936|code|LDR.W           R8, =(aSgpDdInterrupt - 0x367E); "sgp_dd: interrupted by SIGINT\n"|223-248-72-128
13940|code|MOV             R5, SP|109-70
13942|code|LDR             R1, [R1]|9-104
13944|code|ADD             R4, PC; unk_18020|124-68
13946|code|ADD             R8, PC; "sgp_dd: interrupted by SIGINT\n"|248-68
13948|code|ADD.W           R4, R4, #0x164|4-245-178-116
13952|code|STR             R1, [SP,#4]|1-145
13954|code|LDR             R7, [R3,R2]; stderr|159-88
13956|code|MOV             R0, R4|32-70
13958|code|MOV             R1, R5|41-70
13960|code|BLX             sigwait|253-247-108-236
13964|code|LDR             R3, [SP]|0-155
13966|code|CMP             R3, #2|2-43
13968|code|BNE             loc_3684|248-209
13970|code|MOVS            R1, #1|1-33
13972|code|MOVS            R2, #0x1E|30-34
13974|code|LDR             R3, [R7]|59-104
13976|code|MOV             R0, R8|64-70
13978|code|BLX             fwrite|253-247-138-236
13982|code|MOV             R0, R6|48-70
13984|code|BL              sub_2E20|255-247-190-251
13988|code|MOV             R0, R9|72-70
13990|code|BLX             pthread_cond_broadcast|253-247-34-236
13994|code|B               loc_3684|235-231
13996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3660|120-72-1-0
14000|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
14004|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
14008|data|DCD unk_18020 - 0x367C|164-73-1-0
14012|data|DCD aSgpDdInterrupt - 0x367E; "sgp_dd: interrupted by SIGINT\n"|22-42-0-0
14016|code|PUSH.W          {R4-R8,LR}|45-233-240-65
14020|code|SUB             SP, SP, #0x90|164-176
14022|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x36D2)|29-76
14024|code|ADD             R6, SP, #0xA8+var_18|36-174
14026|code|LDR             R3, =(__stack_chk_guard_ptr - 0x17ED8)|29-75
14028|code|MOVS            R5, #0|0-37
14030|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
14032|code|MOV             R7, R0|7-70
14034|code|ADD             R0, SP, #0xA8+set; set|1-168
14036|code|LDR.W           R8, [R4,R3]; __stack_chk_guard|84-248-3-128
14040|code|STR.W           R5, [R6,#-0x90]!|70-248-144-93
14044|code|LDR.W           R3, [R8]|216-248-0-48
14048|code|STR             R3, [SP,#0xA8+var_1C]|35-147
14050|code|BLX             sigemptyset|253-247-8-237
14054|code|MOV             R1, R6; act|49-70
14056|code|MOV             R2, R5; oact|42-70
14058|code|MOV             R0, R7; sig|56-70
14060|code|STR             R5, [SP,#0xA8+var_24]|33-149
14062|code|BLX             sigaction|253-247-88-236
14066|code|LDR             R3, =(stderr_ptr - 0x17ED8)|20-75
14068|code|LDR             R0, =(aInterruptedByS - 0x3700); "Interrupted by signal,"|20-72
14070|code|MOVS            R1, #1; size|1-33
14072|code|MOVS            R2, #0x16; n|22-34
14074|code|LDR             R3, [R4,R3]; stderr|227-88
14076|code|ADD             R0, PC; "Interrupted by signal,"|120-68
14078|code|LDR             R3, [R3]; s|27-104
14080|code|BLX             fwrite|253-247-86-236
14084|code|LDR             R3, =(unk_18020 - 0x370A)|17-75
14086|code|ADD             R3, PC; unk_18020|123-68
14088|code|LDR.W           R3, [R3,#(dword_18180 - 0x18020)]|211-248-96-49
14092|code|CBZ             R3, loc_3714|19-177
14094|code|MOV             R0, R5|40-70
14096|code|BL              sub_3090|255-247-190-252
14100|code|LDR             R0, =(aSgpDdBadArgume_6+0x20 - 0x371A); ""|14-72
14102|code|ADD             R0, PC; ""|120-68
14104|code|BL              sub_2F7C|255-247-48-252
14108|code|BLX             getpid|253-247-144-236
14112|code|MOV             R1, R7; sig|57-70
14114|code|BLX             kill|253-247-136-236
14118|code|LDR             R2, [SP,#0xA8+var_1C]|35-154
14120|code|LDR.W           R3, [R8]|216-248-0-48
14124|code|CMP             R2, R3|154-66
14126|code|BNE             loc_3736|2-209
14128|code|ADD             SP, SP, #0x90|36-176
14130|code|POP.W           {R4-R8,PC}|189-232-240-129
14134|code|BLX             __stack_chk_fail|253-247-28-236
14138|data|ALIGN 4|0-191
14140|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x36D2|6-72-1-0
14144|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
14148|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
14152|data|DCD aInterruptedByS - 0x3700; "Interrupted by signal,"|180-41-0-0
14156|data|DCD unk_18020 - 0x370A|22-73-1-0
14160|data|DCD aSgpDdBadArgume_6+0x20 - 0x371A; ""|138-47-0-0
14164|code|PUSH.W          {R4-R11,LR}|45-233-240-79
14168|code|SUB             SP, SP, #0x124|201-176
14170|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0x3768)|223-248-152-145
14174|code|ADD             R4, SP, #0x148+dest|7-172
14176|code|LDR             R3, =(__stack_chk_guard_ptr - 0x17ED8)|101-75
14178|code|MOV             R2, R0|2-70
14180|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
14182|code|MOV             R6, R1|14-70
14184|code|MOV             R0, R4; dest|32-70
14186|code|MOV             R1, R2; src|17-70
14188|code|LDR.W           R3, [R9,R3]; __stack_chk_guard|89-248-3-48
14192|code|MOV.W           R2, #0x100; n|79-244-128-114
14196|code|MOVS            R5, #0|0-37
14198|code|STR             R3, [SP,#0x148+var_148]|0-147
14200|code|LDR             R3, [R3]|27-104
14202|code|STR             R3, [SP,#0x148+var_2C]|71-147
14204|code|BLX             strncpy|253-247-150-236
14208|code|LDRB            R3, [R4]|35-120
14210|code|STRB.W          R5, [R4,#0xFF]|132-248-255-80
14214|code|CMP             R3, #0|0-43
14216|code|BEQ.W           loc_38A8|0-240-142-128
14220|code|LDR             R3, =(aDsync - 0x3794); "dsync"|91-75
14222|code|LDR             R7, =(aAppend - 0x379A); "append"|92-79
14224|code|ADD             R3, PC; "dsync"|123-68
14226|code|STR             R3, [SP,#0x148+s2]|1-147
14228|code|LDR             R3, =(aExcl - 0x37A0); "excl"|91-75
14230|code|ADD             R7, PC; "append"|127-68
14232|code|LDR.W           R8, =(aDirect - 0x37A6); "direct"|223-248-108-129
14236|code|ADD             R3, PC; "excl"|123-68
14238|code|STR             R3, [SP,#0x148+var_140]|2-147
14240|code|LDR             R3, =(aNull - 0x37AC); "null"|90-75
14242|code|ADD             R8, PC; "direct"|248-68
14244|code|STR.W           R9, [SP,#0x148+var_134]|205-248-20-144
14248|code|ADD             R3, PC; "null"|123-68
14250|code|STR             R3, [SP,#0x148+var_13C]|3-147
14252|code|LDR             R3, =(aDirect - 0x37B2); "direct"|88-75
14254|code|ADD             R3, PC; "direct"|123-68
14256|code|STR             R3, [SP,#0x148+var_138]|4-147
14258|code|LDR             R3, =(aDirect - 0x37B8); "direct"|88-75
14260|code|ADD             R3, PC; "direct"|123-68
14262|code|MOV             R10, R3|154-70
14264|code|MOV             R0, R4; s|32-70
14266|code|MOVS            R1, #0x2C ; ','; c|44-33
14268|code|BLX             strchr|253-247-82-236
14272|code|MOV             R11, R0|131-70
14274|code|CBZ             R0, loc_37CA|16-177
14276|code|ADD.W           R11, R0, #1|0-241-1-11
14280|code|STRB            R5, [R0]|5-112
14282|code|MOV             R0, R4; s1|32-70
14284|code|MOV             R1, R7; s2|57-70
14286|code|BLX             strcmp|253-247-166-235
14290|code|CBNZ            R0, loc_37E2|48-185
14292|code|MOVS            R3, #1|1-35
14294|code|STR             R3, [R6]|51-96
14296|code|CMP.W           R11, #0|187-241-0-15
14300|code|BEQ             loc_380C|22-208
14302|code|MOV             R4, R11|92-70
14304|code|B               loc_37B8|234-231
14306|code|LDRB.W          R9, [R4]|148-248-0-144
14310|code|CMP.W           R9, #0x63 ; 'c'|185-241-99-15
14314|code|BEQ             loc_381E|24-208
14316|code|CMP.W           R9, #0x64 ; 'd'|185-241-100-15
14320|code|BNE             loc_3870|62-209
14322|code|LDRB            R2, [R4,#1]|98-120
14324|code|CMP             R2, #0x69 ; 'i'|105-42
14326|code|BNE             loc_384E|42-209
14328|code|LDRB            R2, [R4,#2]|162-120
14330|code|CMP             R2, #0x6F ; 'o'|111-42
14332|code|BNE             loc_384E|39-209
14334|code|LDRB            R2, [R4,#3]|226-120
14336|code|CBNZ            R2, loc_384E|42-187
14338|code|MOVS            R3, #1|1-35
14340|code|STR             R3, [R6,#8]|179-96
14342|code|CMP.W           R11, #0|187-241-0-15
14346|code|BNE             loc_37DE|232-209
14348|code|MOV             R0, R11|88-70
14350|code|LDR             R3, [SP,#0x148+var_148]|0-155
14352|code|LDR             R2, [SP,#0x148+var_2C]|71-154
14354|code|LDR             R3, [R3]|27-104
14356|code|CMP             R2, R3|154-66
14358|code|BNE             loc_38EE|106-209
14360|code|ADD             SP, SP, #0x124|73-176
14362|code|POP.W           {R4-R11,PC}|189-232-240-143
14366|code|LDRB            R2, [R4,#1]|98-120
14368|code|CMP             R2, #0x6F ; 'o'|111-42
14370|code|BNE             loc_3834|7-209
14372|code|LDRB            R2, [R4,#2]|162-120
14374|code|CMP             R2, #0x65 ; 'e'|101-42
14376|code|BNE             loc_3834|4-209
14378|code|LDRB            R2, [R4,#3]|226-120
14380|code|CBNZ            R2, loc_3834|18-185
14382|code|MOVS            R3, #1|1-35
14384|code|STR             R3, [R6,#4]|115-96
14386|code|B               loc_37D8|209-231
14388|code|MOV             R0, R4; s1|32-70
14390|code|MOV             R1, R8; s2|65-70
14392|code|BLX             strcmp|253-247-112-235
14396|code|CBZ             R0, loc_387C|240-177
14398|code|MOV             R0, R4; s1|32-70
14400|code|LDR             R1, [SP,#0x148+s2]; s2|1-153
14402|code|BLX             strcmp|253-247-108-235
14406|code|CBNZ            R0, loc_3882|224-185
14408|code|MOVS            R3, #1|1-35
14410|code|STR             R3, [R6,#0x14]|115-97
14412|code|B               loc_37D8|196-231
14414|code|MOV             R0, R4; s1|32-70
14416|code|MOV             R1, R10; s2|81-70
14418|code|BLX             strcmp|253-247-100-235
14422|code|CBZ             R0, loc_387C|136-177
14424|code|LDRB            R2, [R4,#1]|98-120
14426|code|CMP             R2, #0x70 ; 'p'|112-42
14428|code|BNE             loc_383E|239-209
14430|code|LDRB            R2, [R4,#2]|162-120
14432|code|CMP             R2, #0x6F ; 'o'|111-42
14434|code|BNE             loc_383E|236-209
14436|code|LDRB            R2, [R4,#3]|226-120
14438|code|CMP             R2, #0|0-42
14440|code|BNE             loc_383E|233-209
14442|code|MOVS            R3, #1|1-35
14444|code|STR             R3, [R6,#0x10]|51-97
14446|code|B               loc_37D8|179-231
14448|code|MOV             R0, R4; s1|32-70
14450|code|LDR             R1, [SP,#0x148+var_138]; s2|4-153
14452|code|BLX             strcmp|253-247-82-235
14456|code|CMP             R0, #0|0-40
14458|code|BNE             loc_383E|224-209
14460|code|MOVS            R3, #1|1-35
14462|code|STR             R3, [R6,#0xC]|243-96
14464|code|B               loc_37D8|170-231
14466|code|MOV             R0, R4; s1|32-70
14468|code|LDR             R1, [SP,#0x148+var_140]; s2|2-153
14470|code|BLX             strcmp|253-247-74-235
14474|code|CBZ             R0, loc_38C0|200-177
14476|code|CMP.W           R9, #0x66 ; 'f'|185-241-102-15
14480|code|BNE             loc_38C6|25-209
14482|code|LDRB            R3, [R4,#1]|99-120
14484|code|CMP             R3, #0x75 ; 'u'|117-43
14486|code|BNE             loc_38C6|22-209
14488|code|LDRB            R3, [R4,#2]|163-120
14490|code|CMP             R3, #0x61 ; 'a'|97-43
14492|code|BNE             loc_38C6|19-209
14494|code|LDRB            R3, [R4,#3]|227-120
14496|code|CBNZ            R3, loc_38C6|139-185
14498|code|MOVS            R3, #1|1-35
14500|code|STR             R3, [R6,#0x1C]|243-97
14502|code|B               loc_37D8|151-231
14504|code|LDR             R3, =(stderr_ptr - 0x17ED8)|27-75
14506|code|MOVS            R1, #1; size|1-33
14508|code|LDR             R0, =(aNoFlagFound - 0x38B8); "no flag found\n"|27-72
14510|code|MOVS            R2, #0xE; n|14-34
14512|code|LDR.W           R3, [R9,R3]; stderr|89-248-3-48
14516|code|ADD             R0, PC; "no flag found\n"|120-68
14518|code|LDR             R3, [R3]; s|27-104
14520|code|BLX             fwrite|253-247-122-235
14524|code|MOVS            R0, #1|1-32
14526|code|B               loc_380E|166-231
14528|code|MOVS            R3, #1|1-35
14530|code|STR             R3, [R6,#0x18]|179-97
14532|code|B               loc_37D8|136-231
14534|code|MOV             R0, R4; s1|32-70
14536|code|LDR             R1, [SP,#0x148+var_13C]; s2|3-153
14538|code|BLX             strcmp|253-247-40-235
14542|code|CMP             R0, #0|0-40
14544|code|BEQ             loc_37D8|130-208
14546|code|LDR.W           R9, [SP,#0x148+var_134]|221-248-20-144
14550|code|MOV             R3, R4|35-70
14552|code|LDR             R0, =(stderr_ptr - 0x17ED8)|15-72
14554|code|MOVS            R1, #1|1-33
14556|code|LDR             R2, =(aUnrecognisedFl - 0x38E6); "unrecognised flag: %s\n"|16-74
14558|code|LDR.W           R0, [R9,R0]|89-248-0-0
14562|code|ADD             R2, PC; "unrecognised flag: %s\n"|122-68
14564|code|LDR             R0, [R0]|0-104
14566|code|BLX             __fprintf_chk|253-247-0-236
14570|code|MOVS            R0, #1|1-32
14572|code|B               loc_380E|143-231
14574|code|BLX             __stack_chk_fail|253-247-64-235
14578|data|ALIGN 4|0-191
14580|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3768|112-71-1-0
14584|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
14588|data|DCD aDsync - 0x3794; "dsync"|80-41-0-0
14592|data|DCD aAppend - 0x379A; "append"|66-41-0-0
14596|data|DCD aExcl - 0x37A0; "excl"|76-41-0-0
14600|data|DCD aDirect - 0x37A6; "direct"|110-41-0-0
14604|data|DCD aNull - 0x37AC; "null"|72-41-0-0
14608|data|DCD aDirect - 0x37B2; "direct"|98-41-0-0
14612|data|DCD aDirect - 0x37B8; "direct"|92-41-0-0
14616|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
14620|data|DCD aNoFlagFound - 0x38B8; "no flag found\n"|20-40-0-0
14624|data|DCD aUnrecognisedFl - 0x38E6; "unrecognised flag: %s\n"|22-40-0-0
14628|code|PUSH.W          {R4-R11,LR}|45-233-240-79
14632|code|SUB.W           SP, SP, #0x2E4|173-245-57-125
14636|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x3938)|141-79
14638|code|ADD             R6, SP, #0x308+s|7-174
14640|code|LDR             R3, =(__stack_chk_guard_ptr - 0x17ED8)|141-75
14642|code|MOV             R5, R0|5-70
14644|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
14646|code|MOV             R4, R1|12-70
14648|code|MOV             R11, R2|147-70
14650|code|MOVS            R1, #0; c|0-33
14652|code|LDR             R3, [R7,R3]; __stack_chk_guard|251-88
14654|code|MOVS            R2, #0x40 ; '@'; n|64-34
14656|code|MOV             R0, R6; s|48-70
14658|code|STR             R3, [SP,#0x308+var_2F4]|5-147
14660|code|LDR             R3, [R3]|27-104
14662|code|STR             R3, [SP,#0x308+var_2C]|183-147
14664|code|BLX             memset|253-247-164-235
14668|code|LDR             R3, [R4,#0x10]|35-105
14670|code|CMP             R5, #0|0-45
14672|code|MOV.W           R1, #0x53 ; 'S'|79-240-83-1
14676|code|ITE NE|20-191
14678|code|MOVNE           R2, #0xFFFFFFFE|111-240-1-2
14682|code|MOVEQ           R2, #0xFFFFFFFD|111-240-2-2
14686|code|STR             R3, [R6,#0x24]|115-98
14688|code|STM.W           R6, {R1,R2}|134-232-6-0
14692|code|B               loc_3972|5-224
14694|code|BLX             __errno_location|253-247-144-235
14698|code|LDR             R3, [R0]|3-104
14700|code|CMP             R3, #4|4-43
14702|code|BNE.W           loc_3ABE|64-240-166-128
14706|code|LDR             R0, [R4]|32-104
14708|code|MOV             R1, R6; buf|49-70
14710|code|LDR             R3, [R4,#4]|99-104
14712|code|MOVS            R2, #0x40 ; '@'; nbytes|64-34
14714|code|CMP             R5, #0|0-45
14716|code|IT NE|24-191
14718|code|MOVNE           R0, R3; fd|24-70
14720|code|BLX             read|253-247-216-234
14724|code|CMP             R0, #0|0-40
14726|code|BLT             loc_3966|238-219
14728|code|LDR.W           R8, [R6,#0x28]|214-248-40-128
14732|code|CMP             R8, R4|160-69
14734|code|ITTT EQ|2-191
14736|code|ADDEQ           R4, #0x24 ; '$'|36-52
14738|code|ADDEQ.W         R10, SP, #0x308+var_2AC|13-241-92-10
14742|code|MOVEQ           R9, R4|161-70
14744|code|BNE.W           loc_3B18|64-240-190-128
14748|code|MOV             LR, R6|182-70
14750|code|ADD.W           R9, R9, #0x10|9-241-16-9
14754|code|LDM.W           LR!, {R0-R3}|190-232-15-0
14758|code|ADDS            R6, #0x10|16-54
14760|code|CMP             LR, R10|214-69
14762|code|STR.W           R0, [R9,#-0x10]|73-248-16-12
14766|code|STR.W           R1, [R9,#-0xC]|73-248-12-28
14770|code|STR.W           R2, [R9,#-8]|73-248-8-44
14774|code|STR.W           R3, [R9,#-4]|73-248-4-60
14778|code|BNE             loc_399C|239-209
14780|code|MOV             R0, R4; hp|32-70
14782|code|BLX             sg_err_category3|253-247-88-235
14786|code|MOV             R6, R0|6-70
14788|code|CMP             R0, #0x15; switch 22 cases|21-40
14790|code|BHI             def_39C8; jumptable 000039C8 default case, cases 1-5,7-10,12-20|79-216
14792|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
14796|data|DCB 0x13; jump table for switch statement|19
14797|data|DCB 0x4E|78
14798|data|DCB 0x4E|78
14799|data|DCB 0x4E|78
14800|data|DCB 0x4E|78
14801|data|DCB 0x4E|78
14802|data|DCB 0x40|64
14803|data|DCB 0x4E|78
14804|data|DCB 0x4E|78
14805|data|DCB 0x4E|78
14806|data|DCB 0x4E|78
14807|data|DCB 0x40|64
14808|data|DCB 0x4E|78
14809|data|DCB 0x4E|78
14810|data|DCB 0x4E|78
14811|data|DCB 0x4E|78
14812|data|DCB 0x4E|78
14813|data|DCB 0x4E|78
14814|data|DCB 0x4E|78
14815|data|DCB 0x4E|78
14816|data|DCB 0x4E|78
14817|data|DCB 0xB|11
14818|code|CMP             R5, #0; jumptable 000039C8 case 21|0-45
14820|code|BNE             loc_3AD8|120-209
14822|code|LDR             R0, =(aReadingContinu - 0x39EC); "reading continuing"|97-72
14824|code|ADD             R0, PC; "reading continuing"|120-68
14826|code|MOV             R1, R4; hp|33-70
14828|code|MOVS            R2, #0; raw_sinfo|0-34
14830|code|BLX             sg_chk_n_print3|253-247-214-235
14834|code|CBZ             R5, loc_3A30; jumptable 000039C8 case 0|237-177
14836|code|LDR.W           R3, [R8,#0xF0]|216-248-240-48
14840|code|CBNZ            R3, loc_3A38|243-185
14842|code|MOVS            R3, #0|0-35
14844|code|STR.W           R3, [R8,#0xB8]|200-248-184-48
14848|code|LDR.W           R3, [R8,#0x108]|216-248-8-49
14852|code|LDR.W           R2, [R8,#0x58]|216-248-88-32
14856|code|CMP             R3, #8|8-43
14858|code|STR.W           R2, [R8,#0xBC]|200-248-188-32
14862|code|IT LE|216-191
14864|code|MOVLE           R0, #0|0-32
14866|code|BLE             loc_3AAC|75-221
14868|code|LDR             R3, =(stderr_ptr - 0x17ED8)|86-75
14870|code|LDR             R3, [R7,R3]; stderr|251-88
14872|code|LDR             R0, [R3]|24-104
14874|code|CMP             R5, #0|0-45
14876|code|BNE             loc_3ACC|86-209
14878|code|LDR             R3, =(aRead_0 - 0x3A24); "READ"|85-75
14880|code|ADD             R3, PC; "READ"|123-68
14882|code|LDR             R2, =(aSgFinishIoComp - 0x3A2A); "sg_finish_io: completed %s\n"|85-74
14884|code|MOVS            R1, #1|1-33
14886|code|ADD             R2, PC; "sg_finish_io: completed %s\n"|122-68
14888|code|BLX             __fprintf_chk|253-247-94-235
14892|code|MOVS            R0, #0|0-32
14894|code|B               loc_3AAC|61-224
14896|code|LDR.W           R3, [R8,#0xD0]|216-248-208-48
14900|code|CMP             R3, #0|0-43
14902|code|BEQ             loc_39FA|224-208
14904|code|LDR.W           R3, [R8,#0x60]|216-248-96-48
14908|code|AND.W           R3, R3, #6|3-240-6-3
14912|code|CMP             R3, #2|2-43
14914|code|BEQ             loc_39FA|218-208
14916|code|MOVS            R3, #1|1-35
14918|code|STR.W           R3, [R8,#0xB8]|200-248-184-48
14922|code|B               loc_3A00|217-231
14924|code|LDR.W           R3, [R8,#0x108]; jumptable 000039C8 cases 6,11|216-248-8-49
14928|code|CMP             R3, #8|8-43
14930|code|BLE             loc_3AAA|42-221
14932|code|CMP             R5, #0|0-45
14934|code|BNE             loc_3ADE|66-209
14936|code|LDR             R0, =(aReading - 0x3A5E); "reading"|72-72
14938|code|ADD             R0, PC; "reading"|120-68
14940|code|MOV             R1, R4; hp|33-70
14942|code|MOVS            R2, #0; raw_sinfo|0-34
14944|code|BLX             sg_chk_n_print3|253-247-156-235
14948|code|MOV             R0, R6|48-70
14950|code|B               loc_3AAC|33-224
14952|code|CBNZ            R5, loc_3AD2; jumptable 000039C8 default case, cases 1-5,7-10,12-20|157-187
14954|code|LDR             R3, =(aReading - 0x3A70); "reading"|69-75
14956|code|ADD             R3, PC; "reading"|123-68
14958|code|LDR             R2, =(aSBlkLld - 0x3A7C); "%s blk=%lld"|69-74
14960|code|ADD             R5, SP, #0x308+var_22C|55-173
14962|code|STR             R3, [SP,#0x308+var_304]|1-147
14964|code|MOV.W           R1, #0x200|79-244-0-113
14968|code|ADD             R2, PC; "%s blk=%lld"|122-68
14970|code|STR             R2, [SP,#0x308+var_308]|0-146
14972|code|LDRD.W          R8, R9, [R8,#0x10]|216-233-4-137
14976|code|MOVS            R2, #1|1-34
14978|code|MOV             R3, R1|11-70
14980|code|MOV             R0, R5|40-70
14982|code|STRD.W          R8, R9, [SP,#0x308+var_300]|205-233-2-137
14986|code|BLX             __snprintf_chk|253-247-130-235
14990|code|MOV             R0, R11; mutex|88-70
14992|code|BLX             pthread_mutex_lock|253-247-92-234
14996|code|MOV             R2, R0; raw_sinfo|2-70
14998|code|CBNZ            R0, loc_3AE4|40-187
15000|code|MOV             R0, R5; leadin|40-70
15002|code|MOV             R1, R4; hp|33-70
15004|code|BLX             sg_chk_n_print3|253-247-126-235
15008|code|MOV             R0, R11; mutex|88-70
15010|code|BLX             pthread_mutex_unlock|253-247-16-234
15014|code|CMP             R0, #0|0-40
15016|code|BNE             loc_3B3E|73-209
15018|code|MOV             R0, R6|48-70
15020|code|LDR             R3, [SP,#0x308+var_2F4]|5-155
15022|code|LDR             R2, [SP,#0x308+var_2C]|183-154
15024|code|LDR             R3, [R3]|27-104
15026|code|CMP             R2, R3|154-66
15028|code|BNE             loc_3B14|46-209
15030|code|ADD.W           SP, SP, #0x2E4|13-245-57-125
15034|code|POP.W           {R4-R11,PC}|189-232-240-143
15038|code|LDR             R0, =(aFinishingIoOnS - 0x3AC4); "finishing io on sg device, error"|50-72
15040|code|ADD             R0, PC; "finishing io on sg device, error"|120-68
15042|code|BLX             perror|253-247-104-234
15046|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
15050|code|B               loc_3AAC|239-231
15052|code|LDR             R3, =(aWrite - 0x3AD2); "WRITE"|47-75
15054|code|ADD             R3, PC; "WRITE"|123-68
15056|code|B               loc_3A22|167-231
15058|code|LDR             R3, =(aWriting - 0x3AD8); "writing"|47-75
15060|code|ADD             R3, PC; "writing"|123-68
15062|code|B               loc_3A6E|202-231
15064|code|LDR             R0, =(aWritingContinu - 0x3ADE); "writing continuing"|46-72
15066|code|ADD             R0, PC; "writing continuing"|120-68
15068|code|B               loc_39EA|133-231
15070|code|LDR             R0, =(aWriting - 0x3AE4); "writing"|46-72
15072|code|ADD             R0, PC; "writing"|120-68
15074|code|B               loc_3A5C|187-231
15076|code|LDR             R3, =(stderr_ptr - 0x17ED8)|34-75
15078|code|MOV             R1, R10|81-70
15080|code|LDR             R3, [R7,R3]; stderr|251-88
15082|code|LDR             R4, [R3]|28-104
15084|code|BL              sub_2F48|255-247-44-250
15088|code|LDR             R3, =(aSgFinishIo - 0x3AFE); "sg_finish_io"|42-75
15090|code|MOV.W           R2, #0x428|79-244-133-98
15094|code|STR             R2, [SP,#0x308+var_304]|1-146
15096|code|MOVS            R1, #1|1-33
15098|code|ADD             R3, PC; "sg_finish_io"|123-68
15100|code|LDR             R2, =(aSAtSDS - 0x3B06); "%s at \"%s\":%d: %s\n"|40-74
15102|code|STR             R3, [SP,#0x308+var_308]|0-147
15104|code|LDR             R3, =(aLockAuxMutex - 0x3B08); "lock aux_mutex"|40-75
15106|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
15108|code|ADD             R3, PC; "lock aux_mutex"|123-68
15110|code|STR             R0, [SP,#0x308+var_300]|2-144
15112|code|MOV             R0, R4|32-70
15114|code|BLX             __fprintf_chk|253-247-238-234
15118|code|MOVS            R0, #1; status|1-32
15120|code|BLX             exit|253-247-156-234
15124|code|BLX             __stack_chk_fail|253-247-44-234
15128|code|LDR             R3, =(stderr_ptr - 0x17ED8)|21-75
15130|code|ADD             R1, SP, #0x308+var_22C|55-169
15132|code|MOVS            R0, #0|0-32
15134|code|LDR             R3, [R7,R3]; stderr|251-88
15136|code|LDR             R4, [R3]|28-104
15138|code|BL              sub_2F48|255-247-17-250
15142|code|LDR             R3, =(aSgFinishIo - 0x3B34); "sg_finish_io"|32-75
15144|code|MOVW            R2, #0x40F|64-242-15-66
15148|code|STR             R2, [SP,#0x308+var_304]|1-146
15150|code|MOVS            R1, #1|1-33
15152|code|ADD             R3, PC; "sg_finish_io"|123-68
15154|code|LDR             R2, =(aSAtSDS - 0x3B3C); "%s at \"%s\":%d: %s\n"|30-74
15156|code|STR             R3, [SP,#0x308+var_308]|0-147
15158|code|LDR             R3, =(aSgFinishIoBadU - 0x3B3E); "sg_finish_io: bad usr_ptr, request-resp"...|30-75
15160|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
15162|code|ADD             R3, PC; "sg_finish_io: bad usr_ptr, request-resp"...|123-68
15164|code|B               loc_3B06|227-231
15166|code|LDR             R3, =(stderr_ptr - 0x17ED8)|12-75
15168|code|MOV             R1, R10|81-70
15170|code|LDR             R3, [R7,R3]; stderr|251-88
15172|code|LDR             R4, [R3]|28-104
15174|code|BL              sub_2F48|255-247-255-249
15178|code|LDR             R3, =(aSgFinishIo - 0x3B58); "sg_finish_io"|26-75
15180|code|MOVW            R2, #0x42B|64-242-43-66
15184|code|STR             R2, [SP,#0x308+var_304]|1-146
15186|code|MOVS            R1, #1|1-33
15188|code|ADD             R3, PC; "sg_finish_io"|123-68
15190|code|LDR             R2, =(aSAtSDS - 0x3B60); "%s at \"%s\":%d: %s\n"|24-74
15192|code|STR             R3, [SP,#0x308+var_308]|0-147
15194|code|LDR             R3, =(aUnlockAuxMutex - 0x3B62); "unlock aux_mutex"|24-75
15196|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
15198|code|ADD             R3, PC; "unlock aux_mutex"|123-68
15200|code|B               loc_3B06|209-231
15202|data|ALIGN 4|0-191
15204|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3938|160-69-1-0
15208|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
15212|data|DCD aReadingContinu - 0x39EC; "reading continuing"|176-39-0-0
15216|data|DCD stderr_ptr - 0x17ED8|16-1-0-0
15220|data|DCD aRead_0 - 0x3A24; "READ"|168-36-0-0
15224|data|DCD aSgFinishIoComp - 0x3A2A; "sg_finish_io: completed %s\n"|18-40-0-0
15228|data|DCD aReading - 0x3A5E; "reading"|90-39-0-0
15232|data|DCD aReading - 0x3A70; "reading"|72-39-0-0
15236|data|DCD aSBlkLld - 0x3A7C; "%s blk=%lld"|144-39-0-0
15240|data|DCD aFinishingIoOnS - 0x3AC4; "finishing io on sg device, error"|148-39-0-0
15244|data|DCD aWrite - 0x3AD2; "WRITE"|242-35-0-0
15248|data|DCD aWriting - 0x3AD8; "writing"|216-38-0-0
15252|data|DCD aWritingContinu - 0x3ADE; "writing continuing"|170-38-0-0
15256|data|DCD aWriting - 0x3AE4; "writing"|204-38-0-0
15260|data|DCD aSgFinishIo - 0x3AFE; "sg_finish_io"|246-26-0-0
15264|data|DCD aSAtSDS - 0x3B06; "%s at \"%s\":%d: %s\n"|186-38-0-0
15268|data|DCD aLockAuxMutex - 0x3B08; "lock aux_mutex"|16-39-0-0
15272|data|DCD aSgFinishIo - 0x3B34; "sg_finish_io"|192-26-0-0
15276|data|DCD aSAtSDS - 0x3B3C; "%s at \"%s\":%d: %s\n"|132-38-0-0
15280|data|DCD aSgFinishIoBadU - 0x3B3E; "sg_finish_io: bad usr_ptr, request-resp"...|150-38-0-0
15284|data|DCD aSgFinishIo - 0x3B58; "sg_finish_io"|156-26-0-0
15288|data|DCD aSAtSDS - 0x3B60; "%s at \"%s\":%d: %s\n"|96-38-0-0
15292|data|DCD aUnlockAuxMutex - 0x3B62; "unlock aux_mutex"|198-38-0-0
15296|code|LDR.W           R3, =(_GLOBAL_OFFSET_TABLE_ - 0x3BCC)|223-248-240-59
15300|code|PUSH.W          {R4-R11,LR}|45-233-240-79
15304|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
15306|code|LDR.W           R2, =(__stack_chk_guard_ptr - 0x17ED8)|223-248-236-43
15310|code|SUB.W           SP, SP, #0x13C0|173-245-158-93
15314|code|SUB             SP, SP, #0xC|131-176
15316|code|MOV             R4, R0|4-70
15318|code|MOV             R6, R3|30-70
15320|code|LDRD.W          R8, R9, [R4,#0x78]|212-233-30-137
15324|code|STR             R3, [SP,#0x13F0+var_13DC]|5-147
15326|code|ADD.W           R10, SP, #0x13F0+s|13-241-104-10
15330|code|LDR.W           R3, [R0,#0x110]|208-248-16-49
15334|code|MOVS            R7, #0|0-39
15336|code|STR             R0, [SP,#0x13F0+var_13E0]|4-144
15338|code|MOV             R1, R7; c|57-70
15340|code|LDR             R6, [R6,R2]; __stack_chk_guard|182-88
15342|code|MOV.W           R2, #0x110; n|79-244-136-114
15346|code|LDR.W           R5, [R0,#0x114]|208-248-20-81
15350|code|MOV             R0, R10; s|80-70
15352|code|STRD.W          R8, R9, [SP,#0x13F0+var_13D8]|205-233-6-137
15356|code|LDRD.W          R8, R9, [R4,#8]|212-233-2-137
15360|code|ADD.W           R4, SP, #0x13F0+var_30|13-245-158-84
15364|code|MUL.W           R5, R3, R5|3-251-5-245
15368|code|LDR             R3, [R6]|51-104
15370|code|ADDS            R4, #4|4-52
15372|code|STRD.W          R8, R9, [SP,#0x13F0+var_13D0]|205-233-8-137
15376|code|STR             R3, [R4]|35-96
15378|code|STR.W           R7, [R10,#-4]|74-248-4-124
15382|code|BLX             memset|253-247-62-234
15386|code|MOVS            R0, #0x1E; name|30-32
15388|code|BLX             sysconf|253-247-180-233
15392|code|MOV             R8, R0|128-70
15394|code|ADD             R0, R5; size|40-68
15396|code|BLX             malloc|253-247-238-233
15400|code|STR.W           R0, [R10,#0x20]|202-248-32-0
15404|code|CMP             R0, #0|0-40
15406|code|BEQ.W           loc_3FD2|0-240-208-129
15410|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
15412|code|ADD.W           R5, R0, R8|0-235-8-5
15416|code|ADD.W           R6, R10, #0xC8|10-241-200-6
15420|code|SUBS            R5, #1|1-61
15422|code|ADD.W           R7, R2, #0x18|2-241-24-7
15426|code|ADD.W           LR, R2, #0x88|2-241-136-14
15430|code|MOV             R4, R2|20-70
15432|code|RSB.W           R8, R8, #0|200-241-0-8
15436|code|LDM             R7!, {R0-R3}|15-207
15438|code|AND.W           R5, R5, R8|5-234-8-5
15442|code|STR.W           R5, [R10,#0x1C]|202-248-28-80
15446|code|ADD.W           R5, R10, #0xE8|10-241-232-5
15450|code|STM             R6!, {R0-R3}|15-198
15452|code|LDM.W           R7, {R0-R3}|151-232-15-0
15456|code|LDR.W           R7, [R4,#0x110]|212-248-16-113
15460|code|STM.W           R6, {R0-R3}|134-232-15-0
15464|code|LDR             R6, [R4]|38-104
15466|code|STR.W           R7, [R10,#0xB4]|202-248-180-112
15470|code|LDR             R7, [R4,#0x70]|39-111
15472|code|STR.W           R6, [R10]|202-248-0-96
15476|code|LDR.W           R6, [R4,#0x138]|212-248-56-97
15480|code|LDM.W           LR!, {R0-R3}|190-232-15-0
15484|code|STR.W           R7, [R10,#4]|202-248-4-112
15488|code|STR.W           R6, [R10,#0x108]|202-248-8-97
15492|code|LDR             R7, [R4,#0x14]|103-105
15494|code|LDR.W           R6, [R4,#0x84]|212-248-132-96
15498|code|LDR.W           R4, =(sub_3294+1 - 0x3C96)|223-248-48-75
15502|code|STR.W           R7, [R10,#0xC0]|202-248-192-112
15506|code|ADD             R4, PC; sub_3294|124-68
15508|code|STR.W           R6, [R10,#0xC4]|202-248-196-96
15512|code|STR             R4, [SP,#0x13F0+var_13C8]|10-148
15514|code|LDR.W           R4, =(aErrorInNormalR - 0x3CA4); "error in normal read, %s\n"|223-248-36-75
15518|code|STM             R5!, {R0-R3}|15-197
15520|code|ADD             R4, PC; "error in normal read, %s\n"|124-68
15522|code|LDM.W           LR, {R0-R3}|158-232-15-0
15526|code|STR             R4, [SP,#0x13F0+var_13C4]|11-148
15528|code|LDR.W           R4, =(aSubstitutedZer - 0x3CB0); ">> substituted zeros for in blk=%lld fo"...|223-248-24-75
15532|code|ADD             R4, PC; ">> substituted zeros for in blk=%lld fo"...|124-68
15534|code|STR             R4, [SP,#0x13F0+var_13C0]|12-148
15536|code|LDR.W           R4, =(sub_3240+1 - 0x3CBC)|223-248-20-75
15540|code|STM.W           R5, {R0-R3}|133-232-15-0
15544|code|ADD             R4, PC; sub_3240|124-68
15546|code|STR             R4, [SP,#0x13F0+var_13BC]|13-148
15548|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15550|code|ADD.W           R4, R3, #0x58 ; 'X'|3-241-88-4
15554|code|MOV             R0, R4; mutex|32-70
15556|code|BLX             pthread_mutex_lock|253-247-66-233
15560|code|CMP             R0, #0|0-40
15562|code|BNE.W           loc_3EE8|64-240-13-129
15566|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
15568|code|LDR             R3, [R2,#0x54]|83-109
15570|code|CMP             R3, #0|0-43
15572|code|BNE.W           loc_3E7A|64-240-209-128
15576|code|LDRD.W          R6, R7, [R2,#0x40]|210-233-16-103
15580|code|CMP             R6, #1|1-46
15582|code|SBCS.W          R3, R7, #0|119-241-0-3
15586|code|BLT.W           loc_3E7A|192-242-202-128
15590|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15592|code|LDR             R0, [SP,#0x13F0+var_13E0]|4-152
15594|code|LDR.W           R2, [R3,#0x114]|211-248-20-33
15598|code|LDRD.W          R4, R5, [R0,#0x38]|208-233-14-69
15602|code|CMP             R6, R2|150-66
15604|code|MOV.W           R3, R2,ASR#31|79-234-226-115
15608|code|SBCS.W          R1, R7, R3|119-235-3-1
15612|code|STRD.W          R4, R5, [SP,#0x13F0+var_1378]|205-233-30-69
15616|code|ITT LT|188-191
15618|code|MOVLT           R2, R6|50-70
15620|code|MOVLT           R3, R7|59-70
15622|code|SUBS            R6, R6, R2|182-26
15624|code|STR             R2, [SP,#0x13F0+var_1370]|32-146
15626|code|SBC.W           R7, R7, R3|103-235-3-7
15630|code|STRD.W          R6, R7, [R0,#0x40]|192-233-16-103
15634|code|ADDS            R0, R2, R4|16-25
15636|code|LDR             R7, [SP,#0x13F0+var_13E0]|4-159
15638|code|ADC.W           R1, R3, R5|67-235-5-1
15642|code|LDR             R3, [SP,#0x13F0+var_13C8]|10-155
15644|code|MOVS            R6, #0|0-38
15646|code|STR             R2, [SP,#0x13F0+var_13B8]|14-146
15648|code|STRD.W          R0, R1, [R7,#0x38]|199-233-14-1
15652|code|ADD             R0, SP, #0x13F0+env; env|94-168
15654|code|MOV             R1, R6; savemask|49-70
15656|code|STR             R6, [SP,#0x13F0+var_1380]|28-150
15658|code|STR             R3, [SP,#0x13F0+var_13B4]|15-147
15660|code|STR             R7, [SP,#0x13F0+var_13B0]|16-151
15662|code|BLX             __sigsetjmp|253-247-238-233
15666|code|CMP             R0, #0|0-40
15668|code|BNE.W           loc_46F8|64-240-224-132
15672|code|ADD             R0, SP, #0x13F0+env; buf|94-168
15674|code|BLX             __pthread_register_cancel|253-247-234-232
15678|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15680|code|LDR             R3, [R3,#0x10]|27-105
15682|code|CMP             R3, #2|2-43
15684|code|BEQ.W           loc_400E|0-240-99-129
15688|code|ADD             R5, SP, #0x13F0+s|26-173
15690|code|LDR             R7, [SP,#0x13F0+var_13B8]|14-159
15692|code|LDR             R6, [SP,#0x13F0+var_13E0]|4-158
15694|code|B               loc_3D5C|5-224
15696|code|BLX             __errno_location|253-247-154-233
15700|code|LDR             R3, [R0]|3-104
15702|code|CMP             R3, #4|4-43
15704|code|BNE.W           loc_41F0|64-240-74-130
15708|code|LDR.W           R2, [R6,#0x110]|214-248-16-33
15712|code|LDR             R0, [R6]; fd|48-104
15714|code|LDR             R1, [R5,#0x1C]; buf|233-105
15716|code|MUL.W           R2, R2, R7; nbytes|2-251-7-242
15720|code|BLX             read|253-247-228-232
15724|code|CMP             R0, #0|0-40
15726|code|BLT             loc_3D50|239-219
15728|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15730|code|MOV             R4, R0|4-70
15732|code|LDR.W           R5, [R3,#0x110]|211-248-16-81
15736|code|LDR             R3, [SP,#0x13F0+var_13B8]|14-155
15738|code|MUL.W           R3, R5, R3|5-251-3-243
15742|code|CMP             R3, R4|163-66
15744|code|BGT.W           loc_4252|0-243-103-130
15748|code|LDR             R3, [SP,#0x13F0+var_13B8]|14-155
15750|code|MOV             R4, R3|28-70
15752|code|ASRS            R5, R3, #0x1F|221-23
15754|code|MOVS            R3, #0|0-35
15756|code|LDR             R6, [SP,#0x13F0+var_13E0]|4-158
15758|code|LDRD.W          R0, R1, [R6,#0x48]|214-233-18-1
15762|code|SUBS            R0, R0, R4|0-27
15764|code|SBC.W           R1, R1, R5|97-235-5-1
15768|code|STRD.W          R0, R1, [R6,#0x48]|198-233-18-1
15772|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
15774|code|STR             R3, [SP,#0x13F0+var_138C]|25-147
15776|code|ADD.W           R0, R2, #0x58 ; 'X'; mutex|2-241-88-0
15780|code|BLX             pthread_mutex_unlock|253-247-142-232
15784|code|CMP             R0, #0|0-40
15786|code|BNE.W           loc_44D4|64-240-147-131
15790|code|ADD             R0, SP, #0x13F0+env; buf|94-168
15792|code|BLX             __pthread_unregister_cancel|253-247-118-233
15796|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15798|code|ADD.W           R0, R3, #0xC8; mutex|3-241-200-0
15802|code|BLX             pthread_mutex_lock|253-247-200-232
15806|code|CMP             R0, #0|0-40
15808|code|BNE.W           loc_42CC|64-240-132-130
15812|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15814|code|LDR.W           R3, [R3,#0x80]|211-248-128-48
15818|code|CMP             R3, #8|8-43
15820|code|BEQ.W           loc_4306|0-240-155-130
15824|code|LDR.W           R3, =(sub_3240+1 - 0x3DDC)|223-248-248-57
15828|code|LDRD.W          R0, R1, [SP,#0x13F0+var_13D0]|221-233-8-1
15832|code|ADD             R3, PC; sub_3240|123-68
15834|code|STR             R3, [SP,#0x13F0+var_139C]|21-147
15836|code|LDRD.W          R2, R3, [SP,#0x13F0+var_13D8]|221-233-6-35
15840|code|SUBS            R2, R2, R0|18-26
15842|code|SBC.W           R3, R3, R1|99-235-1-3
15846|code|STRD.W          R2, R3, [SP,#0x13F0+var_13A8]|205-233-18-35
15850|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15852|code|LDR.W           R1, [R3,#0xC4]; savemask|211-248-196-16
15856|code|CMP             R1, #0|0-41
15858|code|BNE.W           loc_42B8|64-240-97-130
15862|code|LDRD.W          R4, R5, [R3,#0xA8]|211-233-42-69
15866|code|LDRD.W          R6, R7, [SP,#0x13F0+var_13A8]|221-233-18-103
15870|code|LDRD.W          R2, R3, [SP,#0x13F0+var_1378]|221-233-30-35
15874|code|ADDS            R6, R6, R2|182-24
15876|code|ADCS            R7, R3|95-65
15878|code|CMP             R7, R5|175-66
15880|code|IT EQ|8-191
15882|code|CMPEQ           R6, R4|166-66
15884|code|BEQ.W           loc_4310|0-240-128-130
15888|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
15890|code|ADD             R0, SP, #0x13F0+var_1160; env|164-168
15892|code|STR             R3, [SP,#0x13F0+var_13A0]|20-147
15894|code|LDR             R3, [SP,#0x13F0+var_139C]|21-155
15896|code|STR             R3, [SP,#0x13F0+var_13AC]|17-147
15898|code|BLX             __sigsetjmp|253-247-120-233
15902|code|CMP             R0, #0|0-40
15904|code|BNE.W           loc_46EC|64-240-100-132
15908|code|ADD             R4, SP, #0x13F0+var_1160|164-172
15910|code|MOV             R0, R4; buf|32-70
15912|code|BLX             __pthread_register_cancel|253-247-114-232
15916|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
15918|code|ADD.W           R0, R2, #0xE0; cond|2-241-224-0
15922|code|ADD.W           R1, R2, #0xC8; mutex|2-241-200-1
15926|code|BLX             pthread_cond_wait|253-247-124-233
15930|code|CMP             R0, #0|0-40
15932|code|BEQ.W           loc_41E8|0-240-212-129
15936|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
15938|code|ADDW            R1, SP, #0x13F0+var_CAC|13-242-68-113
15942|code|LDR.W           R3, =dword_110|223-248-136-57
15946|code|LDR             R3, [R2,R3]|211-88
15948|code|LDR             R4, [R3]|28-104
15950|code|BL              sub_2F48|255-247-123-248
15954|code|LDR.W           R3, =(aSgFinishIo - 0x3E62); "sg_finish_io"|223-248-128-57
15958|code|MOVW            R2, #0x24E|64-242-78-34
15962|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
15964|code|MOVS            R1, #1|1-33
15966|code|ADD             R3, PC; "sg_finish_io"|123-68
15968|code|LDR.W           R2, =(aSAtSDS - 0x3E70); "%s at \"%s\":%d: %s\n"|223-248-116-41
15972|code|ADDS            R3, #0x10|16-51
15974|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
15976|code|LDR.W           R3, =(aCondOutSyncCv - 0x3E72); "cond out_sync_cv"|223-248-112-57
15980|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
15982|code|ADD             R3, PC; "cond out_sync_cv"|123-68
15984|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
15986|code|MOV             R0, R4|32-70
15988|code|BLX             __fprintf_chk|253-247-56-233
15992|code|B               loc_3F20|82-224
15994|code|MOV             R0, R4; mutex|32-70
15996|code|BLX             pthread_mutex_unlock|253-247-34-232
16000|code|CMP             R0, #0|0-40
16002|code|BNE             loc_3F60|109-209
16004|code|LDR             R0, [SP,#0x13F0+ptr]; ptr|34-152
16006|code|CBZ             R0, loc_3E8C|8-177
16008|code|BLX             free|253-247-90-232
16012|code|MOV             R0, R4; mutex|32-70
16014|code|BLX             pthread_mutex_lock|253-247-94-232
16018|code|CMP             R0, #0|0-40
16020|code|BNE             loc_3F26|71-209
16022|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
16024|code|LDR             R3, [R3,#0x54]|91-109
16026|code|CBNZ            R3, loc_3EA2|19-185
16028|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
16030|code|MOVS            R3, #1|1-35
16032|code|STR             R3, [R2,#0x54]|83-101
16034|code|MOV             R0, R4; mutex|32-70
16036|code|BLX             pthread_mutex_unlock|253-247-14-232
16040|code|MOV             R4, R0|4-70
16042|code|CMP             R0, #0|0-40
16044|code|BEQ             loc_3F9A|117-208
16046|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16048|code|ADDW            R1, SP, #0x13F0+var_9AC|13-246-68-33
16052|code|LDR.W           R3, =dword_110|223-248-24-57
16056|code|LDR             R3, [R2,R3]|211-88
16058|code|LDR             R4, [R3]|28-104
16060|code|BL              sub_2F48|255-247-68-248
16064|code|LDR.W           R3, =(aSgFinishIo - 0x3ED0); "sg_finish_io"|223-248-28-57
16068|code|MOVW            R2, #0x283|64-242-131-34
16072|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16074|code|MOVS            R1, #1|1-33
16076|code|ADD             R3, PC; "sg_finish_io"|123-68
16078|code|LDR.W           R2, =(aSAtSDS - 0x3EDE); "%s at \"%s\":%d: %s\n"|223-248-20-41
16082|code|ADDS            R3, #0x10|16-51
16084|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16086|code|LDR.W           R3, =(aUnlockInMutex - 0x3EE0); "unlock in_mutex"|223-248-16-57
16090|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16092|code|ADD             R3, PC; "unlock in_mutex"|123-68
16094|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16096|code|MOV             R0, R4|32-70
16098|code|BLX             __fprintf_chk|253-247-2-233
16102|code|B               loc_3F20|27-224
16104|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16106|code|ADDW            R1, SP, #0x13F0+var_EAC|13-242-68-81
16110|code|LDR.W           R3, =dword_110|223-248-224-56
16114|code|LDR             R3, [R2,R3]|211-88
16116|code|LDR             R4, [R3]|28-104
16118|code|BL              sub_2F48|255-247-39-248
16122|code|LDR.W           R3, =(aSgFinishIo - 0x3F0A); "sg_finish_io"|223-248-240-56
16126|code|MOVW            R2, #0x22E|64-242-46-34
16130|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16132|code|MOVS            R1, #1|1-33
16134|code|ADD             R3, PC; "sg_finish_io"|123-68
16136|code|LDR.W           R2, =(aSAtSDS - 0x3F18); "%s at \"%s\":%d: %s\n"|223-248-228-40
16140|code|ADDS            R3, #0x10|16-51
16142|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16144|code|LDR.W           R3, =(aLockInMutex - 0x3F1A); "lock in_mutex"|223-248-224-56
16148|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16150|code|ADD             R3, PC; "lock in_mutex"|123-68
16152|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16154|code|MOV             R0, R4|32-70
16156|code|BLX             __fprintf_chk|253-247-228-232
16160|code|MOVS            R0, #1; status|1-32
16162|code|BLX             exit|253-247-148-232
16166|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16168|code|ADDW            R1, SP, #0x13F0+var_A2C|13-246-196-17
16172|code|LDR.W           R3, =dword_110|223-248-160-56
16176|code|LDR             R3, [R2,R3]|211-88
16178|code|LDR             R4, [R3]|28-104
16180|code|BL              sub_2F48|255-247-8-248
16184|code|LDR.W           R3, =(aSgFinishIo - 0x3F48); "sg_finish_io"|223-248-188-56
16188|code|MOVW            R2, #0x27F|64-242-127-34
16192|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16194|code|MOVS            R1, #1|1-33
16196|code|ADD             R3, PC; "sg_finish_io"|123-68
16198|code|LDR.W           R2, =(aSAtSDS - 0x3F56); "%s at \"%s\":%d: %s\n"|223-248-180-40
16202|code|ADDS            R3, #0x10|16-51
16204|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16206|code|LDR.W           R3, =(aLockInMutex - 0x3F58); "lock in_mutex"|223-248-176-56
16210|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16212|code|ADD             R3, PC; "lock in_mutex"|123-68
16214|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16216|code|MOV             R0, R4|32-70
16218|code|BLX             __fprintf_chk|253-247-198-232
16222|code|B               loc_3F20|223-231
16224|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16226|code|ADDW            R1, SP, #0x13F0+var_E2C|13-242-196-81
16230|code|LDR.W           R3, =dword_110|223-248-104-56
16234|code|LDR             R3, [R2,R3]|211-88
16236|code|LDR             R4, [R3]|28-104
16238|code|BL              sub_2F48|254-247-235-255
16242|code|LDR.W           R3, =(aSgFinishIo - 0x3F82); "sg_finish_io"|223-248-144-56
16246|code|MOVW            R2, #0x232|64-242-50-34
16250|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16252|code|MOVS            R1, #1|1-33
16254|code|ADD             R3, PC; "sg_finish_io"|123-68
16256|code|LDR.W           R2, =(aSAtSDS - 0x3F90); "%s at \"%s\":%d: %s\n"|223-248-132-40
16260|code|ADDS            R3, #0x10|16-51
16262|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16264|code|LDR.W           R3, =(aUnlockInMutex - 0x3F92); "unlock in_mutex"|223-248-128-56
16268|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16270|code|ADD             R3, PC; "unlock in_mutex"|123-68
16272|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16274|code|MOV             R0, R4|32-70
16276|code|BLX             __fprintf_chk|253-247-168-232
16280|code|B               loc_3F20|194-231
16282|code|LDR             R5, [SP,#0x13F0+var_13E0]|4-157
16284|code|ADD.W           R0, R5, #0xE0; cond|5-241-224-0
16288|code|BLX             pthread_cond_broadcast|252-247-164-239
16292|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x17ED8)|223-248-16-56
16296|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16298|code|LDR             R0, [SP,#0x13F0+var_138C]|25-152
16300|code|LDR             R1, [R2,R3]|209-88
16302|code|ADD.W           R3, SP, #0x13F0+var_30|13-245-158-83
16306|code|ADDS            R3, #4|4-51
16308|code|LDR             R2, [R3]|26-104
16310|code|LDR             R3, [R1]|11-104
16312|code|MOV             R1, R5|41-70
16314|code|CMP             R0, #0|0-40
16316|code|IT NE|24-191
16318|code|MOVNE           R1, R4|33-70
16320|code|CMP             R2, R3|154-66
16322|code|MOV             R0, R1|8-70
16324|code|BNE.W           loc_495C|64-240-202-132
16328|code|ADD.W           SP, SP, #0x13C0|13-245-158-93
16332|code|ADD             SP, SP, #0xC|3-176
16334|code|POP.W           {R4-R11,PC}|189-232-240-143
16338|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16340|code|ADDW            R1, SP, #0x13F0+var_F2C|13-242-196-65
16344|code|LDR.W           R3, =dword_110|223-248-244-55
16348|code|MOVS            R0, #0xC|12-32
16350|code|LDR             R3, [R2,R3]|211-88
16352|code|LDR             R4, [R3]|28-104
16354|code|BL              sub_2F48|254-247-177-255
16358|code|LDR.W           R3, =(aSgFinishIo - 0x3FF6); "sg_finish_io"|223-248-40-56
16362|code|MOVW            R2, #0x21F|64-242-31-34
16366|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16368|code|MOVS            R1, #1|1-33
16370|code|ADD             R3, PC; "sg_finish_io"|123-68
16372|code|LDR.W           R2, =(aSAtSDS - 0x4004); "%s at \"%s\":%d: %s\n"|223-248-28-40
16376|code|ADDS            R3, #0x10|16-51
16378|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16380|code|LDR.W           R3, =(aOutOfMemoryCre - 0x4006); "out of memory creating user buffers\n"|223-248-24-56
16384|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16386|code|ADD             R3, PC; "out of memory creating user buffers\n"|123-68
16388|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16390|code|MOV             R0, R4|32-70
16392|code|BLX             __fprintf_chk|253-247-110-232
16396|code|B               loc_3F20|136-231
16398|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
16400|code|ADD             R4, SP, #0x13F0+s|26-172
16402|code|ADD.W           R6, R2, #0x58 ; 'X'|2-241-88-6
16406|code|ADD.W           R7, R2, #0x120|2-245-144-119
16410|code|MOV             R0, R4|32-70
16412|code|BL              sub_32E8|255-247-100-249
16416|code|CMP             R0, #1|1-40
16418|code|BEQ.W           loc_4B38|0-240-137-133
16422|code|CMP             R0, #0|0-40
16424|code|BLT.W           loc_4904|192-242-108-132
16428|code|MOV             R0, R6; mutex|48-70
16430|code|MOV             R8, R6|176-70
16432|code|BLX             pthread_mutex_unlock|252-247-72-239
16436|code|CMP             R0, #0|0-40
16438|code|BNE.W           loc_4B04|64-240-101-133
16442|code|MOV             R2, R7|58-70
16444|code|LDR             R0, [R4,#8]|160-104
16446|code|MOV             R1, R4|33-70
16448|code|MOV             R9, R7|185-70
16450|code|BL              sub_3924|255-247-111-252
16454|code|CMP             R0, #0xB; switch 12 cases|11-40
16456|code|BHI.W           def_404C; jumptable 0000404C default case, cases 1,2,4,5,7-10|0-242-183-128
16460|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
16464|data|DCB 0x24; jump table for switch statement|36
16465|data|DCB 0xB5|181
16466|data|DCB 0xB5|181
16467|data|DCB 0x96|150
16468|data|DCB 0xB5|181
16469|data|DCB 0xB5|181
16470|data|DCB 0x73|115
16471|data|DCB 0xB5|181
16472|data|DCB 0xB5|181
16473|data|DCB 0xB5|181
16474|data|DCB 0xB5|181
16475|data|DCB 0x73|115
16476|code|LDR             R3, [SP,#0x13F0+var_1370]|32-155
16478|code|ADD             R4, SP, #0x13F0+s|26-172
16480|code|LDR             R2, [SP,#0x13F0+var_12D4]|71-154
16482|code|MOVS            R1, #0; c|0-33
16484|code|LDR             R0, [SP,#0x13F0+var_136C]; s|33-152
16486|code|MUL.W           R2, R2, R3; n|2-251-3-242
16490|code|BLX             memset|253-247-20-232
16494|code|LDR             R0, [R4,#0x18]|160-105
16496|code|LDR.W           R3, [R4,#0xB4]|212-248-180-48
16500|code|MOVS            R1, #1|1-33
16502|code|LDR.W           R2, =dword_110|223-248-88-39
16506|code|LDRD.W          R4, R5, [R4,#0x10]|212-233-4-69
16510|code|MUL.W           R3, R3, R0|3-251-0-243
16514|code|LDR             R0, [SP,#0x13F0+var_13DC]|5-152
16516|code|LDR             R0, [R0,R2]|128-88
16518|code|LDR.W           R2, =(aSubstitutedZer_0 - 0x4090); ">> substituted zeros for in blk=%lld fo"...|223-248-148-39
16522|code|LDR             R0, [R0]|0-104
16524|code|ADD             R2, PC; ">> substituted zeros for in blk=%lld fo"...|122-68
16526|code|STRD.W          R4, R5, [SP,#0x13F0+var_13F0]|205-233-0-69
16530|code|STR             R3, [SP,#0x13F0+var_13E8]|2-147
16532|code|BLX             __fprintf_chk|253-247-40-232
16536|code|LDR             R2, [SP,#0x13F0+var_12D0]; jumptable 0000404C case 0|72-154
16538|code|CBNZ            R2, loc_40A0|10-185
16540|code|LDR             R3, [SP,#0x13F0+var_12CC]|73-155
16542|code|CBZ             R3, loc_40D2|195-177
16544|code|MOV             R0, R9; mutex|72-70
16546|code|BLX             pthread_mutex_lock|252-247-84-239
16550|code|CMP             R0, #0|0-40
16552|code|BNE.W           loc_4A2C|64-240-192-132
16556|code|LDR             R5, [SP,#0x13F0+var_13E0]|4-157
16558|code|MOV             R0, R9; mutex|72-70
16560|code|LDR             R2, [SP,#0x13F0+var_12D0]|72-154
16562|code|LDR             R3, [SP,#0x13F0+var_12CC]|73-155
16564|code|LDR.W           R4, [R5,#0x118]|213-248-24-65
16568|code|LDR.W           R1, [R5,#0x11C]|213-248-28-17
16572|code|ADD             R2, R4|34-68
16574|code|STR.W           R2, [R5,#0x118]|197-248-24-33
16578|code|ADD             R3, R1|11-68
16580|code|STR.W           R3, [R5,#0x11C]|197-248-28-49
16584|code|BLX             pthread_mutex_unlock|252-247-252-238
16588|code|CMP             R0, #0|0-40
16590|code|BNE.W           loc_4B70|64-240-79-133
16594|code|MOV             R0, R8; mutex|64-70
16596|code|BLX             pthread_mutex_lock|252-247-58-239
16600|code|CMP             R0, #0|0-40
16602|code|BNE.W           loc_4BA4|64-240-99-133
16606|code|LDR             R4, [SP,#0x13F0+var_13E0]|4-156
16608|code|MOV             R0, R8; mutex|64-70
16610|code|LDR             R1, [SP,#0x13F0+var_1370]|32-153
16612|code|LDRD.W          R2, R3, [R4,#0x48]|212-233-18-35
16616|code|SUBS            R2, R2, R1|82-26
16618|code|SBC.W           R3, R3, R1,ASR#31|99-235-225-115
16622|code|STRD.W          R2, R3, [R4,#0x48]|196-233-18-35
16626|code|BLX             pthread_mutex_unlock|252-247-232-238
16630|code|CMP             R0, #0|0-40
16632|code|BEQ.W           loc_3DAE|63-244-89-174
16636|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16638|code|ADDW            R1, SP, #0x13F0+var_5AC|13-246-68-97
16642|code|LDR.W           R3, =dword_110|223-248-204-54
16646|code|LDR             R3, [R2,R3]|211-88
16648|code|LDR             R4, [R3]|28-104
16650|code|BL              sub_2F48|254-247-29-255
16654|code|LDR.W           R3, =(aSgFinishIo - 0x411E); "sg_finish_io"|223-248-16-55
16658|code|MOVW            R2, #0x373|64-242-115-50
16662|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16664|code|MOVS            R1, #1|1-33
16666|code|ADD             R3, PC; "sg_finish_io"|123-68
16668|code|LDR.W           R2, =(aSAtSDS - 0x412C); "%s at \"%s\":%d: %s\n"|223-248-4-39
16672|code|ADDS            R3, #0x24 ; '$'|36-51
16674|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16676|code|LDR.W           R3, =(aUnlockInMutex - 0x412E); "unlock in_mutex"|223-248-0-55
16680|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16682|code|ADD             R3, PC; "unlock in_mutex"|123-68
16684|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16686|code|MOV             R0, R4|32-70
16688|code|BLX             __fprintf_chk|252-247-218-239
16692|code|B               loc_3F20|244-230
16694|code|MOV             R0, R6; jumptable 0000404C cases 6,11|48-70
16696|code|BLX             pthread_mutex_lock|252-247-8-239
16700|code|CMP             R0, #0|0-40
16702|code|BEQ.W           loc_401A|63-244-108-175
16706|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
16708|code|ADDW            R1, SP, #0x13F0+var_7AC|13-246-68-65
16712|code|LDR.W           R3, =dword_110|223-248-132-54
16716|code|LDR             R3, [R2,R3]|211-88
16718|code|LDR             R4, [R3]|28-104
16720|code|BL              sub_2F48|254-247-250-254
16724|code|LDR.W           R3, =(aSgFinishIo - 0x4164); "sg_finish_io"|223-248-212-54
16728|code|MOVW            R2, #0x357|64-242-87-50
16732|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
16734|code|MOVS            R1, #1|1-33
16736|code|ADD             R3, PC; "sg_finish_io"|123-68
16738|code|LDR.W           R2, =(aSAtSDS - 0x4172); "%s at \"%s\":%d: %s\n"|223-248-204-38
16742|code|ADDS            R3, #0x24 ; '$'|36-51
16744|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
16746|code|LDR.W           R3, =(aLockInMutex - 0x4174); "lock in_mutex"|223-248-200-54
16750|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
16752|code|ADD             R3, PC; "lock in_mutex"|123-68
16754|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
16756|code|MOV             R0, R4|32-70
16758|code|BLX             __fprintf_chk|252-247-184-239
16762|code|B               loc_3F20|209-230
16764|code|LDR             R3, [SP,#0x13F0+var_13E0]; jumptable 0000404C case 3|4-155
16766|code|LDR             R3, [R3,#0x1C]|219-105
16768|code|CMP             R3, #0|0-43
16770|code|BNE.W           loc_405C|127-244-107-175
16774|code|LDR             R4, [SP,#0x13F0+var_13DC]|5-156
16776|code|MOVS            R2, #0x27 ; '''; n|39-34
16778|code|LDR.W           R3, =dword_110|223-248-68-54
16782|code|MOVS            R1, #1; size|1-33
16784|code|LDR.W           R0, =(aErrorFinishing - 0x419A); "error finishing sg in command (medium)"...|223-248-164-6
16788|code|LDR             R3, [R4,R3]|227-88
16790|code|ADD             R0, PC; "error finishing sg in command (medium)"...|120-68
16792|code|LDR             R3, [R3]; s|27-104
16794|code|BLX             fwrite|252-247-10-239
16798|code|LDR.W           R3, =(unk_18020 - 0x41A6)|223-248-156-54
16802|code|ADD             R3, PC; unk_18020|123-68
16804|code|LDR.W           R2, [R3,#(dword_18204 - 0x18020)]|211-248-228-33
16808|code|CMP             R2, #0|0-42
16810|code|BGT             loc_41B2|2-220
16812|code|MOVS            R2, #3|3-34
16814|code|STR.W           R2, [R3,#(dword_18204 - 0x18020)]|195-248-228-33
16818|code|LDR             R0, [SP,#0x13F0+var_13E0]|4-152
16820|code|BL              sub_2E20|254-247-52-254
16824|code|B               loc_3DAE|249-229
16826|code|MOV             R5, R0; jumptable 0000404C default case, cases 1,2,4,5,7-10|5-70
16828|code|LDR             R4, [SP,#0x13F0+var_13DC]|5-156
16830|code|LDR.W           R0, =dword_110|223-248-16-6
16834|code|MOV             R3, R5|43-70
16836|code|LDR.W           R2, =(aErrorFinishing_0 - 0x41D0); "error finishing sg in command (%d)\n"|223-248-120-38
16840|code|MOVS            R1, #1|1-33
16842|code|LDR             R0, [R4,R0]|32-88
16844|code|ADD             R2, PC; "error finishing sg in command (%d)\n"|122-68
16846|code|LDR             R0, [R0]|0-104
16848|code|BLX             __fprintf_chk|252-247-138-239
16852|code|LDR.W           R3, =(unk_18020 - 0x41DC)|223-248-108-54
16856|code|ADD             R3, PC; unk_18020|123-68
16858|code|LDR.W           R2, [R3,#(dword_18204 - 0x18020)]|211-248-228-33
16862|code|CMP             R2, #0|0-42
16864|code|IT LE|216-191
16866|code|STRLE.W         R5, [R3,#(dword_18204 - 0x18020)]|195-248-228-81
16870|code|B               loc_41B2|228-231
16872|code|MOV             R0, R4; buf|32-70
16874|code|BLX             __pthread_unregister_cancel|252-247-90-239
16878|code|B               loc_3DEA|252-229
16880|code|MOV             R4, R0|4-70
16882|code|MOV             R0, R3|24-70
16884|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
16886|code|LDR             R2, [R3,#0x1C]|218-105
16888|code|CMP             R2, #0|0-42
16890|code|BEQ.W           loc_4738|0-240-157-130
16894|code|LDR             R3, [R5,#0x18]|171-105
16896|code|MOVS            R1, #0; c|0-33
16898|code|LDR.W           R2, [R5,#0xB4]|213-248-180-32
16902|code|LDR             R0, [R5,#0x1C]; s|232-105
16904|code|MUL.W           R2, R2, R3; n|2-251-3-242
16908|code|BLX             memset|252-247-66-239
16912|code|LDR             R0, [SP,#0x13F0+var_13DC]|5-152
16914|code|LDR.W           R2, =dword_110|223-248-188-37
16918|code|ADDW            R1, SP, #0x13F0+var_52C|13-246-196-97
16922|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
16926|code|LDR             R6, [R5,#0x18]|174-105
16928|code|LDR             R2, [R0,R2]|130-88
16930|code|LDR             R0, [R4]|32-104
16932|code|LDRD.W          R8, R9, [R5,#0x10]|213-233-4-137
16936|code|MUL.W           R4, R3, R6|3-251-6-244
16940|code|LDR             R6, [R2]|22-104
16942|code|BL              sub_2F48|254-247-139-254
16946|code|MOVS            R1, #1|1-33
16948|code|LDR             R2, [SP,#0x13F0+var_13C0]|12-154
16950|code|STRD.W          R8, R9, [SP,#0x13F0+var_13F0]|205-233-0-137
16954|code|STR             R4, [SP,#0x13F0+var_13E8]|2-148
16956|code|STR             R0, [SP,#0x13F0+var_13E4]|3-144
16958|code|MOV             R0, R6|48-70
16960|code|BLX             __fprintf_chk|252-247-82-239
16964|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
16966|code|LDR             R4, [R5,#0x18]|172-105
16968|code|LDR.W           R5, [R3,#0x110]|211-248-16-81
16972|code|MUL.W           R4, R4, R5|4-251-5-244
16976|code|B               loc_3D78|146-229
16978|code|MOV             R1, R5|41-70
16980|code|MOV             R0, R4|32-70
16982|code|BL              sub_4C80|0-240-19-253
16986|code|MOV             R1, R5|41-70
16988|code|MOV             R8, R0|128-70
16990|code|MOV             R0, R4|32-70
16992|code|BL              sub_4F14|0-240-88-254
16996|code|CMP             R1, #0|0-41
16998|code|BLE             loc_4274|5-221
17000|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17002|code|ADD.W           R8, R8, #1|8-241-1-8
17006|code|LDR             R3, [R2,#0x50]|19-109
17008|code|ADDS            R3, #1|1-51
17010|code|STR             R3, [R2,#0x50]|19-101
17012|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17014|code|LDR             R4, [SP,#0x13F0+var_13B8]|14-156
17016|code|STR.W           R8, [SP,#0x13F0+var_1370]|205-248-128-128
17020|code|LDRD.W          R0, R1, [R2,#0x38]|210-233-14-1
17024|code|LDRD.W          R2, R3, [R2,#0x40]|210-233-16-35
17028|code|ASRS            R7, R4, #0x1F|231-23
17030|code|SUBS            R0, R0, R4|0-27
17032|code|SBC.W           R1, R1, R7|97-235-7-1
17036|code|ADDS            R2, R2, R4|18-25
17038|code|MOV             R4, R8|68-70
17040|code|ADCS            R3, R7|123-65
17042|code|ASRS            R5, R4, #0x1F|229-23
17044|code|ADDS.W          R0, R0, R8|16-235-8-0
17048|code|ADCS            R1, R5|105-65
17050|code|SUBS.W          R6, R2, R8|178-235-8-6
17054|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17056|code|SBC.W           R7, R3, R5|99-235-5-7
17060|code|MOVS            R3, #1|1-35
17062|code|STRD.W          R0, R1, [R2,#0x38]|194-233-14-1
17066|code|STRD.W          R6, R7, [R2,#0x40]|194-233-16-103
17070|code|B               loc_3D8C|109-229
17072|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17074|code|MOVS            R3, #1|1-35
17076|code|STR.W           R3, [R2,#0xC4]|194-248-196-48
17080|code|LDR             R4, [SP,#0x13F0+var_13E0]|4-156
17082|code|ADD.W           R0, R4, #0xC8; mutex|4-241-200-0
17086|code|BLX             pthread_mutex_unlock|252-247-2-238
17090|code|CMP             R0, #0|0-40
17092|code|BNE.W           loc_4704|64-240-30-130
17096|code|ADDS            R4, #0x58 ; 'X'|88-52
17098|code|B               loc_3E84|219-229
17100|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
17102|code|ADDW            R1, SP, #0x13F0+var_D2C|13-242-196-97
17106|code|LDR.W           R3, =dword_110|223-248-252-52
17110|code|LDR             R3, [R2,R3]|211-88
17112|code|LDR             R4, [R3]|28-104
17114|code|BL              sub_2F48|254-247-53-254
17118|code|LDR.W           R3, =(aSgFinishIo - 0x42EE); "sg_finish_io"|223-248-104-53
17122|code|MOVW            R2, #0x247|64-242-71-34
17126|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
17128|code|MOVS            R1, #1|1-33
17130|code|ADD             R3, PC; "sg_finish_io"|123-68
17132|code|LDR.W           R2, =(aSAtSDS - 0x42FC); "%s at \"%s\":%d: %s\n"|223-248-92-37
17136|code|ADDS            R3, #0x10|16-51
17138|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
17140|code|LDR.W           R3, =(aLockOutMutex - 0x42FE); "lock out_mutex"|223-248-88-53
17144|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
17146|code|ADD             R3, PC; "lock out_mutex"|123-68
17148|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
17150|code|MOV             R0, R4|32-70
17152|code|BLX             __fprintf_chk|252-247-242-238
17156|code|B               loc_3F20|12-230
17158|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17160|code|LDR.W           R3, [R3,#0xC4]|211-248-196-48
17164|code|CMP             R3, #0|0-43
17166|code|BNE             loc_42B8|211-209
17168|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17170|code|LDRD.W          R0, R1, [R3,#0xB0]|211-233-44-1
17174|code|CMP             R0, #1|1-40
17176|code|SBCS.W          R3, R1, #0|113-241-0-3
17180|code|BLT             loc_42B0|200-219
17182|code|LDR             R3, [SP,#0x13F0+var_138C]|25-155
17184|code|CBZ             R3, loc_432A|27-177
17186|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17188|code|MOVS            R3, #1|1-35
17190|code|STR.W           R3, [R2,#0xC4]|194-248-196-48
17194|code|LDR             R7, [SP,#0x13F0+var_13E0]|4-159
17196|code|LDR             R3, [SP,#0x13F0+var_13B8]|14-155
17198|code|LDR             R4, [SP,#0x13F0+var_1370]|32-156
17200|code|LDRD.W          R10, R11, [R7,#0xA8]|215-233-42-171
17204|code|MOV             R8, R3|152-70
17206|code|MOV.W           R9, R3,ASR#31|79-234-227-121
17210|code|SUBS.W          R0, R0, R8|176-235-8-0
17214|code|SBC.W           R1, R1, R9|97-235-9-1
17218|code|ADDS.W          R2, R8, R10|24-235-10-2
17222|code|ADC.W           R3, R9, R11|73-235-11-3
17226|code|MOV.W           R8, #1|79-240-1-8
17230|code|STRD.W          R0, R1, [R7,#0xB0]|199-233-44-1
17234|code|STRD.W          R2, R3, [R7,#0xA8]|199-233-42-35
17238|code|STRD.W          R10, R11, [SP,#0x13F0+var_1378]|205-233-30-171
17242|code|STR.W           R8, [SP,#0x13F0+var_1380]|205-248-112-128
17246|code|CMP             R4, #0|0-44
17248|code|BEQ.W           loc_48B8|0-240-170-130
17252|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17254|code|ADD             R0, SP, #0x13F0+var_1048; env|234-168
17256|code|MOVS            R1, #0; savemask|0-33
17258|code|STR             R3, [SP,#0x13F0+var_1394]|23-147
17260|code|LDR             R3, [SP,#0x13F0+var_13BC]|13-155
17262|code|STR             R3, [SP,#0x13F0+var_1398]|22-147
17264|code|BLX             __sigsetjmp|252-247-204-238
17268|code|CMP             R0, #0|0-40
17270|code|BNE.W           loc_46E0|64-240-179-129
17274|code|ADD             R0, SP, #0x13F0+var_1048; buf|234-168
17276|code|BLX             __pthread_register_cancel|252-247-200-237
17280|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17282|code|LDR.W           R3, [R3,#0x80]|211-248-128-48
17286|code|CMP             R3, #2|2-43
17288|code|BEQ.W           loc_4538|0-240-214-128
17292|code|CMP             R3, #8|8-43
17294|code|BEQ             loc_4476|114-208
17296|code|ADD             R4, SP, #0x13F0+s|26-172
17298|code|LDR             R6, [SP,#0x13F0+var_13E0]|4-158
17300|code|B               loc_43A0|4-224
17302|code|BLX             __errno_location|252-247-120-238
17306|code|LDR             R0, [R0]|0-104
17308|code|CMP             R0, #4|4-40
17310|code|BNE             loc_4420|63-209
17312|code|LDR             R3, [R4,#0x18]|163-105
17314|code|LDR.W           R2, [R6,#0x110]|214-248-16-33
17318|code|LDR             R0, [R6,#0x70]; fd|48-111
17320|code|LDR             R1, [R4,#0x1C]; buf|225-105
17322|code|MUL.W           R2, R2, R3; n|2-251-3-242
17326|code|BLX             write|252-247-138-238
17330|code|CMP             R0, #0|0-40
17332|code|BLT             loc_4396|239-219
17334|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17336|code|MOV             R5, R0|5-70
17338|code|LDR.W           R6, [R3,#0x110]|211-248-16-97
17342|code|LDR             R3, [SP,#0x13F0+var_13B8]|14-155
17344|code|MUL.W           R3, R6, R3|6-251-3-243
17348|code|CMP             R3, R5|171-66
17350|code|BLE             loc_4472|84-221
17352|code|MOV             R1, R6|49-70
17354|code|MOV             R0, R5|40-70
17356|code|BL              sub_4C80|0-240-88-252
17360|code|MOV             R1, R6|49-70
17362|code|MOV             R4, R0|4-70
17364|code|MOV             R0, R5|40-70
17366|code|BL              sub_4F14|0-240-157-253
17370|code|CMP             R1, #0|0-41
17372|code|BLE             loc_43EC|6-221
17374|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17376|code|ADDS            R4, #1|1-52
17378|code|LDR.W           R3, [R2,#0xC0]|210-248-192-48
17382|code|ADDS            R3, #1|1-51
17384|code|STR.W           R3, [R2,#0xC0]|194-248-192-48
17388|code|STR             R4, [SP,#0x13F0+var_1370]|32-148
17390|code|LDR             R1, [SP,#0x13F0+var_13E0]|4-153
17392|code|LDRD.W          R2, R3, [R1,#0xB8]|209-233-46-35
17396|code|SUBS            R2, R2, R4|18-27
17398|code|SBC.W           R3, R3, R4,ASR#31|99-235-228-115
17402|code|STRD.W          R2, R3, [R1,#0xB8]|193-233-46-35
17406|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17408|code|ADD.W           R0, R3, #0xC8; mutex|3-241-200-0
17412|code|BLX             pthread_mutex_unlock|252-247-94-237
17416|code|CMP             R0, #0|0-40
17418|code|BNE             loc_4506|124-209
17420|code|ADD             R0, SP, #0x13F0+var_1048; buf|234-168
17422|code|BLX             __pthread_unregister_cancel|252-247-72-238
17426|code|LDR             R3, [SP,#0x13F0+var_138C]|25-155
17428|code|CMP             R3, #0|0-43
17430|code|BEQ             loc_44C6|86-208
17432|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17434|code|ADD.W           R4, R3, #0x58 ; 'X'|3-241-88-4
17438|code|B               loc_3E84|49-229
17440|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17442|code|LDR.W           R3, [R3,#0x8C]|211-248-140-48
17446|code|CMP             R3, #0|0-43
17448|code|BEQ.W           loc_4776|0-240-165-129
17452|code|LDR             R6, [SP,#0x13F0+var_13DC]|5-158
17454|code|ADD.W           R1, SP, #0x13F0+var_B0|13-245-154-81
17458|code|LDR             R2, =dword_110|231-74
17460|code|ADDS            R1, #4|4-49
17462|code|LDR.W           R3, [R4,#0xB4]|212-248-180-48
17466|code|LDR             R5, [R4,#0x18]|165-105
17468|code|LDR             R2, [R6,R2]|178-88
17470|code|LDRD.W          R6, R7, [R4,#0x10]|212-233-4-103
17474|code|MUL.W           R5, R3, R5|3-251-5-245
17478|code|LDR.W           R8, [R2]|210-248-0-128
17482|code|BL              sub_2F48|254-247-125-253
17486|code|LDR.W           R2, =(aIgnoredErrorFo - 0x445C); ">> ignored error for out blk=%lld for %"...|223-248-4-36
17490|code|MOVS            R1, #1|1-33
17492|code|STRD.W          R6, R7, [SP,#0x13F0+var_13F0]|205-233-0-103
17496|code|ADD             R2, PC; ">> ignored error for out blk=%lld for %"...|122-68
17498|code|STR             R5, [SP,#0x13F0+var_13E8]|2-149
17500|code|STR             R0, [SP,#0x13F0+var_13E4]|3-144
17502|code|MOV             R0, R8|64-70
17504|code|BLX             __fprintf_chk|252-247-66-238
17508|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17510|code|LDR             R5, [R4,#0x18]|165-105
17512|code|LDR.W           R6, [R3,#0x110]|211-248-16-97
17516|code|MUL.W           R5, R5, R6|5-251-6-245
17520|code|B               loc_43BE|165-231
17522|code|LDR             R4, [SP,#0x13F0+var_13B8]|14-156
17524|code|B               loc_43EE|187-231
17526|code|LDR             R4, [SP,#0x13F0+var_13E0]|4-156
17528|code|LDR             R1, [SP,#0x13F0+var_13B8]|14-153
17530|code|ADD.W           R0, R4, #0xC8; mutex|4-241-200-0
17534|code|LDRD.W          R2, R3, [R4,#0xB8]|212-233-46-35
17538|code|SUBS            R2, R2, R1|82-26
17540|code|SBC.W           R3, R3, R1,ASR#31|99-235-225-115
17544|code|STRD.W          R2, R3, [R4,#0xB8]|196-233-46-35
17548|code|BLX             pthread_mutex_unlock|252-247-26-237
17552|code|CMP             R0, #0|0-40
17554|code|BEQ             loc_440C|187-208
17556|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
17558|code|ADDW            R1, SP, #0x13F0+var_B2C|13-246-196-1
17562|code|LDR             R3, =dword_110|205-75
17564|code|LDR             R3, [R2,R3]|211-88
17566|code|LDR             R4, [R3]|28-104
17568|code|BL              sub_2F48|254-247-82-253
17572|code|LDR             R3, =(aSgFinishIo - 0x44B2); "sg_finish_io"|236-75
17574|code|MOV.W           R2, #0x270|79-244-28-114
17578|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
17580|code|MOVS            R1, #1|1-33
17582|code|ADD             R3, PC; "sg_finish_io"|123-68
17584|code|LDR             R2, =(aSAtSDS - 0x44BC); "%s at \"%s\":%d: %s\n"|234-74
17586|code|ADDS            R3, #0x10|16-51
17588|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
17590|code|LDR             R3, =(aUnlockOutMutex - 0x44BE); "unlock out_mutex"|234-75
17592|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
17594|code|ADD             R3, PC; "unlock out_mutex"|123-68
17596|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
17598|code|MOV             R0, R4|32-70
17600|code|BLX             __fprintf_chk|252-247-18-238
17604|code|B               loc_3F20|44-229
17606|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
17608|code|ADD.W           R0, R3, #0xE0; cond|3-241-224-0
17612|code|BLX             pthread_cond_broadcast|252-247-14-237
17616|code|B.W             loc_3CBC|255-247-244-187
17620|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
17622|code|ADDW            R1, SP, #0x13F0+var_DAC|13-242-68-97
17626|code|LDR             R3, =dword_110|189-75
17628|code|LDR             R3, [R2,R3]|211-88
17630|code|LDR             R4, [R3]|28-104
17632|code|BL              sub_2F48|254-247-50-253
17636|code|LDR             R3, =(aSgFinishIo - 0x44F2); "sg_finish_io"|223-75
17638|code|MOVW            R2, #0x242|64-242-66-34
17642|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
17644|code|MOVS            R1, #1|1-33
17646|code|ADD             R3, PC; "sg_finish_io"|123-68
17648|code|LDR             R2, =(aSAtSDS - 0x44FC); "%s at \"%s\":%d: %s\n"|221-74
17650|code|ADDS            R3, #0x10|16-51
17652|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
17654|code|LDR             R3, =(aUnlockInMutex - 0x44FE); "unlock in_mutex"|221-75
17656|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
17658|code|ADD             R3, PC; "unlock in_mutex"|123-68
17660|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
17662|code|MOV             R0, R4|32-70
17664|code|BLX             __fprintf_chk|252-247-242-237
17668|code|B               loc_3F20|12-229
17670|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
17672|code|ADDW            R1, SP, #0x13F0+var_AAC|13-246-68-17
17676|code|LDR             R3, =dword_110|176-75
17678|code|LDR             R3, [R2,R3]|211-88
17680|code|LDR             R4, [R3]|28-104
17682|code|BL              sub_2F48|254-247-25-253
17686|code|LDR             R3, =(aSgFinishIo - 0x4524); "sg_finish_io"|214-75
17688|code|MOVW            R2, #0x275|64-242-117-34
17692|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
17694|code|MOVS            R1, #1|1-33
17696|code|ADD             R3, PC; "sg_finish_io"|123-68
17698|code|LDR             R2, =(aSAtSDS - 0x452E); "%s at \"%s\":%d: %s\n"|212-74
17700|code|ADDS            R3, #0x10|16-51
17702|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
17704|code|LDR             R3, =(aUnlockOutMutex - 0x4530); "unlock out_mutex"|211-75
17706|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
17708|code|ADD             R3, PC; "unlock out_mutex"|123-68
17710|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
17712|code|MOV             R0, R4|32-70
17714|code|BLX             __fprintf_chk|252-247-218-237
17718|code|B               loc_3F20|243-228
17720|code|LDR             R2, [SP,#0x13F0+var_13E0]|4-154
17722|code|ADD             R4, SP, #0x13F0+s|26-172
17724|code|ADD.W           R6, R2, #0xC8|2-241-200-6
17728|code|ADD.W           R7, R2, #0x120|2-245-144-119
17732|code|MOV             R0, R4|32-70
17734|code|BL              sub_32E8|254-247-207-254
17738|code|CMP             R0, #1|1-40
17740|code|BEQ.W           loc_4A60|0-240-136-130
17744|code|CMP             R0, #0|0-40
17746|code|BLT.W           loc_4968|192-242-9-130
17750|code|MOV             R0, R6; mutex|48-70
17752|code|MOV             R8, R6|176-70
17754|code|BLX             pthread_mutex_unlock|252-247-180-236
17758|code|CMP             R0, #0|0-40
17760|code|BNE.W           loc_4ACE|64-240-181-130
17764|code|MOV             R2, R7|58-70
17766|code|LDR             R0, [R4,#8]|160-104
17768|code|MOV             R1, R4|33-70
17770|code|MOV             R9, R7|185-70
17772|code|BL              sub_3924|255-247-218-249
17776|code|CMP             R0, #0xB; switch 12 cases|11-40
17778|code|BHI.W           def_4576; jumptable 00004576 default case, cases 1,2,4,5,7-10|0-242-161-128
17782|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
17786|data|DCB 0x18; jump table for switch statement|24
17787|data|DCB 0x9F|159
17788|data|DCB 0x9F|159
17789|data|DCB 0x84|132
17790|data|DCB 0x9F|159
17791|data|DCB 0x9F|159
17792|data|DCB 0x64|100
17793|data|DCB 0x9F|159
17794|data|DCB 0x9F|159
17795|data|DCB 0x9F|159
17796|data|DCB 0x9F|159
17797|data|DCB 0x64|100
17798|code|LDR             R3, [SP,#0x13F0+var_12D4]|71-155
17800|code|LDR             R4, [SP,#0x13F0+var_1370]|32-156
17802|code|LDR             R1, =dword_110|145-73
17804|code|LDR             R0, [SP,#0x13F0+var_13DC]|5-152
17806|code|MUL.W           R4, R3, R4|3-251-4-244
17810|code|LDRD.W          R2, R3, [SP,#0x13F0+var_1378]|221-233-30-35
17814|code|LDR             R0, [R0,R1]|64-88
17816|code|MOVS            R1, #1|1-33
17818|code|LDR             R0, [R0]|0-104
17820|code|STRD.W          R2, R3, [SP,#0x13F0+var_13F0]|205-233-0-35
17824|code|LDR             R2, =(aIgnoredErrorFo_0 - 0x45A8); ">> ignored error for out blk=%lld for %"...|182-74
17826|code|STR             R4, [SP,#0x13F0+var_13E8]|2-148
17828|code|ADD             R2, PC; ">> ignored error for out blk=%lld for %"...|122-68
17830|code|BLX             __fprintf_chk|252-247-160-237
17834|code|LDR             R2, [SP,#0x13F0+var_12D0]; jumptable 00004576 case 0|72-154
17836|code|CBNZ            R2, loc_45B2|10-185
17838|code|LDR             R3, [SP,#0x13F0+var_12CC]|73-155
17840|code|CBZ             R3, loc_45E4|195-177
17842|code|MOV             R0, R9; mutex|72-70
17844|code|BLX             pthread_mutex_lock|252-247-202-236
17848|code|CMP             R0, #0|0-40
17850|code|BNE.W           loc_49F6|64-240-28-130
17854|code|LDR             R5, [SP,#0x13F0+var_13E0]|4-157
17856|code|MOV             R0, R9; mutex|72-70
17858|code|LDR             R2, [SP,#0x13F0+var_12D0]|72-154
17860|code|LDR             R3, [SP,#0x13F0+var_12CC]|73-155
17862|code|LDR.W           R4, [R5,#0x118]|213-248-24-65
17866|code|LDR.W           R1, [R5,#0x11C]|213-248-28-17
17870|code|ADD             R2, R4|34-68
17872|code|STR.W           R2, [R5,#0x118]|197-248-24-33
17876|code|ADD             R3, R1|11-68
17878|code|STR.W           R3, [R5,#0x11C]|197-248-28-49
17882|code|BLX             pthread_mutex_unlock|252-247-116-236
17886|code|CMP             R0, #0|0-40
17888|code|BNE.W           loc_49C0|64-240-238-129
17892|code|MOV             R0, R8; mutex|64-70
17894|code|BLX             pthread_mutex_lock|252-247-178-236
17898|code|CMP             R0, #0|0-40
17900|code|BNE.W           loc_4A98|64-240-84-130
17904|code|LDR             R4, [SP,#0x13F0+var_13E0]|4-156
17906|code|MOV             R0, R8; mutex|64-70
17908|code|LDR             R1, [SP,#0x13F0+var_1370]|32-153
17910|code|LDRD.W          R2, R3, [R4,#0xB8]|212-233-46-35
17914|code|SUBS            R2, R2, R1|82-26
17916|code|SBC.W           R3, R3, R1,ASR#31|99-235-225-115
17920|code|STRD.W          R2, R3, [R4,#0xB8]|196-233-46-35
17924|code|BLX             pthread_mutex_unlock|252-247-94-236
17928|code|CMP             R0, #0|0-40
17930|code|BEQ.W           loc_440C|63-244-255-174
17934|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
17936|code|ADD.W           R1, SP, #0x13F0+var_130|13-245-150-81
17940|code|LDR             R3, =dword_110|110-75
17942|code|ADDS            R1, #4|4-49
17944|code|LDR             R3, [R2,R3]|211-88
17946|code|LDR             R4, [R3]|28-104
17948|code|BL              sub_2F48|254-247-148-252
17952|code|LDR             R3, =(aSgFinishIo - 0x462E); "sg_finish_io"|151-75
17954|code|MOV.W           R2, #0x3B8|79-244-110-114
17958|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
17960|code|MOVS            R1, #1|1-33
17962|code|ADD             R3, PC; "sg_finish_io"|123-68
17964|code|LDR             R2, =(aSAtSDS - 0x4638); "%s at \"%s\":%d: %s\n"|149-74
17966|code|ADDS            R3, #0x34 ; '4'|52-51
17968|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
17970|code|LDR             R3, =(aUnlockOutMutex - 0x463A); "unlock out_mutex"|149-75
17972|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
17974|code|ADD             R3, PC; "unlock out_mutex"|123-68
17976|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
17978|code|MOV             R0, R4|32-70
17980|code|BLX             __fprintf_chk|252-247-84-237
17984|code|B               loc_3F20|110-228
17986|code|MOV             R0, R6; jumptable 00004576 cases 6,11|48-70
17988|code|BLX             pthread_mutex_lock|252-247-130-236
17992|code|CMP             R0, #0|0-40
17994|code|BEQ.W           loc_4544|63-244-123-175
17998|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18000|code|ADD.W           R1, SP, #0x13F0+var_330|13-245-134-81
18004|code|LDR             R3, =dword_110|94-75
18006|code|ADDS            R1, #4|4-49
18008|code|LDR             R3, [R2,R3]|211-88
18010|code|LDR             R4, [R3]|28-104
18012|code|BL              sub_2F48|254-247-116-252
18016|code|LDR             R3, =(aSgFinishIo - 0x466E); "sg_finish_io"|138-75
18018|code|MOVW            R2, #0x39E|64-242-158-50
18022|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
18024|code|MOVS            R1, #1|1-33
18026|code|ADD             R3, PC; "sg_finish_io"|123-68
18028|code|LDR             R2, =(aSAtSDS - 0x4678); "%s at \"%s\":%d: %s\n"|136-74
18030|code|ADDS            R3, #0x34 ; '4'|52-51
18032|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
18034|code|LDR             R3, =(aLockOutMutex - 0x467A); "lock out_mutex"|136-75
18036|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18038|code|ADD             R3, PC; "lock out_mutex"|123-68
18040|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18042|code|MOV             R0, R4|32-70
18044|code|BLX             __fprintf_chk|252-247-52-237
18048|code|B               loc_3F20|78-228
18050|code|LDR             R3, [SP,#0x13F0+var_13E0]; jumptable 00004576 case 3|4-155
18052|code|LDR.W           R3, [R3,#0x8C]|211-248-140-48
18056|code|CMP             R3, #0|0-43
18058|code|BNE.W           loc_4586|127-244-124-175
18062|code|LDR             R4, [SP,#0x13F0+var_13DC]|5-156
18064|code|MOVS            R2, #0x28 ; '('; n|40-34
18066|code|LDR             R3, =dword_110|79-75
18068|code|MOVS            R1, #1; size|1-33
18070|code|LDR             R0, =(aErrorFinishing_1 - 0x469E); "error finishing sg out command (medium)"...|128-72
18072|code|LDR             R3, [R4,R3]|227-88
18074|code|ADD             R0, PC; "error finishing sg out command (medium)"...|120-68
18076|code|LDR             R3, [R3]; s|27-104
18078|code|BLX             fwrite|252-247-136-236
18082|code|LDR             R3, =(unk_18020 - 0x46A8)|126-75
18084|code|ADD             R3, PC; unk_18020|123-68
18086|code|LDR.W           R2, [R3,#(dword_18204 - 0x18020)]|211-248-228-33
18090|code|CMP             R2, #0|0-42
18092|code|BLE.W           loc_4960|64-243-88-129
18096|code|LDR             R0, [SP,#0x13F0+var_13E0]|4-152
18098|code|BL              sub_2E20|254-247-181-251
18102|code|B               loc_440C|169-230
18104|code|MOV             R5, R0; jumptable 00004576 default case, cases 1,2,4,5,7-10|5-70
18106|code|LDR             R4, [SP,#0x13F0+var_13DC]|5-156
18108|code|LDR             R0, =dword_110|68-72
18110|code|MOV             R3, R5|43-70
18112|code|LDR             R2, =(aErrorFinishing_2 - 0x46CA); "error finishing sg out command (%d)\n"|119-74
18114|code|MOVS            R1, #1|1-33
18116|code|LDR             R0, [R4,R0]|32-88
18118|code|ADD             R2, PC; "error finishing sg out command (%d)\n"|122-68
18120|code|LDR             R0, [R0]|0-104
18122|code|BLX             __fprintf_chk|252-247-14-237
18126|code|LDR             R3, =(unk_18020 - 0x46D4)|117-75
18128|code|ADD             R3, PC; unk_18020|123-68
18130|code|LDR.W           R2, [R3,#(dword_18204 - 0x18020)]|211-248-228-33
18134|code|CMP             R2, #0|0-42
18136|code|IT LE|216-191
18138|code|STRLE.W         R5, [R3,#(dword_18204 - 0x18020)]|195-248-228-81
18142|code|B               loc_46B0|231-231
18144|code|LDR             R0, [SP,#0x13F0+var_1394]|23-152
18146|code|LDR             R3, [SP,#0x13F0+var_1398]|22-155
18148|code|BLX             R3|152-71
18150|code|ADD             R0, SP, #0x13F0+var_1048; buf|234-168
18152|code|BLX             __pthread_unwind_next|252-247-248-236
18156|code|LDR             R0, [SP,#0x13F0+var_13A0]|20-152
18158|code|LDR             R3, [SP,#0x13F0+var_13AC]|17-155
18160|code|BLX             R3|152-71
18162|code|ADD             R0, SP, #0x13F0+var_1160; buf|164-168
18164|code|BLX             __pthread_unwind_next|252-247-242-236
18168|code|LDR             R0, [SP,#0x13F0+var_13B0]|16-152
18170|code|LDR             R3, [SP,#0x13F0+var_13B4]|15-155
18172|code|BLX             R3|152-71
18174|code|ADD             R0, SP, #0x13F0+env; buf|94-168
18176|code|BLX             __pthread_unwind_next|252-247-236-236
18180|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18182|code|ADDW            R1, SP, #0x13F0+var_C2C|13-242-196-113
18186|code|LDR             R3, =dword_110|49-75
18188|code|LDR             R3, [R2,R3]|211-88
18190|code|LDR             R4, [R3]|28-104
18192|code|BL              sub_2F48|254-247-26-252
18196|code|LDR             R3, =(aSgFinishIo - 0x4722); "sg_finish_io"|100-75
18198|code|MOVW            R2, #0x257|64-242-87-34
18202|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
18204|code|MOVS            R1, #1|1-33
18206|code|ADD             R3, PC; "sg_finish_io"|123-68
18208|code|LDR             R2, =(aSAtSDS - 0x472C); "%s at \"%s\":%d: %s\n"|98-74
18210|code|ADDS            R3, #0x10|16-51
18212|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
18214|code|LDR             R3, =(aUnlockOutMutex - 0x472E); "unlock out_mutex"|98-75
18216|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18218|code|ADD             R3, PC; "unlock out_mutex"|123-68
18220|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18222|code|MOV             R0, R4|32-70
18224|code|BLX             __fprintf_chk|252-247-218-236
18228|code|B.W             loc_3F20|255-247-244-187
18232|code|LDR             R2, =dword_110|37-74
18234|code|ADDW            R1, SP, #0x13F0+var_52C|13-246-196-97
18238|code|LDR             R7, [SP,#0x13F0+var_13E0]|4-159
18240|code|MOVS            R4, #1|1-36
18242|code|MOV             R3, R2|19-70
18244|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18246|code|ADD.W           R5, R7, #0xC8|7-241-200-5
18250|code|LDR             R3, [R2,R3]|211-88
18252|code|LDR             R6, [R3]|30-104
18254|code|BL              sub_2F48|254-247-251-251
18258|code|MOV             R1, R4|33-70
18260|code|LDR             R2, [SP,#0x13F0+var_13C4]|11-154
18262|code|MOV             R3, R0|3-70
18264|code|MOV             R0, R6|48-70
18266|code|BLX             __fprintf_chk|252-247-198-236
18270|code|MOV             R0, R5; mutex|40-70
18272|code|STR             R4, [R7,#0x54]|124-101
18274|code|BLX             pthread_mutex_lock|252-247-244-235
18278|code|STR.W           R4, [R7,#0xC4]|199-248-196-64
18282|code|MOV             R0, R5; mutex|40-70
18284|code|BLX             pthread_mutex_unlock|252-247-170-235
18288|code|MOV             R3, R4|35-70
18290|code|B.W             loc_3D9C|255-247-19-187
18294|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18296|code|ADD.W           R1, SP, #0x13F0+var_B0|13-245-154-81
18300|code|LDR             R3, =dword_110|20-75
18302|code|ADDS            R1, #4|4-49
18304|code|LDR             R7, [SP,#0x13F0+var_13E0]|4-159
18306|code|MOVS            R5, #1|1-37
18308|code|LDR             R3, [R2,R3]|211-88
18310|code|ADD.W           R4, R7, #0x58 ; 'X'|7-241-88-4
18314|code|LDR             R6, [R3]|30-104
18316|code|BL              sub_2F48|254-247-220-251
18320|code|LDR             R2, =(aErrorNormalWri - 0x4798); "error normal write, %s\n"|72-74
18322|code|MOV             R1, R5|41-70
18324|code|ADD             R2, PC; "error normal write, %s\n"|122-68
18326|code|MOV             R3, R0|3-70
18328|code|MOV             R0, R6|48-70
18330|code|BLX             __fprintf_chk|252-247-166-236
18334|code|MOV             R0, R4; mutex|32-70
18336|code|BLX             pthread_mutex_lock|252-247-212-235
18340|code|MOV             R0, R4; mutex|32-70
18342|code|STR             R5, [R7,#0x54]|125-101
18344|code|BLX             pthread_mutex_unlock|252-247-140-235
18348|code|STR.W           R5, [R7,#0xC4]|199-248-196-80
18352|code|B               loc_43FE|37-230
18354|data|ALIGN 4|0-191
18356|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3BCC|12-67-1-0
18360|data|DCD __stack_chk_guard_ptr - 0x17ED8|12-1-0-0
18364|data|DCD sub_3294+1 - 0x3C96|255-245-255-255
18368|data|DCD aErrorInNormalR - 0x3CA4; "error in normal read, %s\n"|28-39-0-0
18372|data|DCD aSubstitutedZer - 0x3CB0; ">> substituted zeros for in blk=%lld fo"...|216-38-0-0
18376|data|DCD sub_3240+1 - 0x3CBC|133-245-255-255
18380|data|DCD sub_3240+1 - 0x3DDC|101-244-255-255
18384|data|DCD dword_110|16-1-0-0
18388|data|DCD aSgFinishIo - 0x3E62; "sg_finish_io"|146-23-0-0
18392|data|DCD aSAtSDS - 0x3E70; "%s at \"%s\":%d: %s\n"|80-35-0-0
18396|data|DCD aCondOutSyncCv - 0x3E72; "cond out_sync_cv"|122-37-0-0
18400|data|DCD aSgFinishIo - 0x3ED0; "sg_finish_io"|36-23-0-0
18404|data|DCD aSAtSDS - 0x3EDE; "%s at \"%s\":%d: %s\n"|226-34-0-0
18408|data|DCD aUnlockInMutex - 0x3EE0; "unlock in_mutex"|212-35-0-0
18412|data|DCD aSgFinishIo - 0x3F0A; "sg_finish_io"|234-22-0-0
18416|data|DCD aSAtSDS - 0x3F18; "%s at \"%s\":%d: %s\n"|168-34-0-0
18420|data|DCD aLockInMutex - 0x3F1A; "lock in_mutex"|138-35-0-0
18424|data|DCD aSgFinishIo - 0x3F48; "sg_finish_io"|172-22-0-0
18428|data|DCD aSAtSDS - 0x3F56; "%s at \"%s\":%d: %s\n"|106-34-0-0
18432|data|DCD aLockInMutex - 0x3F58; "lock in_mutex"|76-35-0-0
18436|data|DCD aSgFinishIo - 0x3F82; "sg_finish_io"|114-22-0-0
18440|data|DCD aSAtSDS - 0x3F90; "%s at \"%s\":%d: %s\n"|48-34-0-0
18444|data|DCD aUnlockInMutex - 0x3F92; "unlock in_mutex"|34-35-0-0
18448|data|DCD aSgFinishIo - 0x3FF6; "sg_finish_io"|254-21-0-0
18452|data|DCD aSAtSDS - 0x4004; "%s at \"%s\":%d: %s\n"|188-33-0-0
18456|data|DCD aOutOfMemoryCre - 0x4006; "out of memory creating user buffers\n"|118-34-0-0
18460|data|DCD aSubstitutedZer_0 - 0x4090; ">> substituted zeros for in blk=%lld fo"...|160-34-0-0
18464|data|DCD aSgFinishIo - 0x411E; "sg_finish_io"|214-20-0-0
18468|data|DCD aSAtSDS - 0x412C; "%s at \"%s\":%d: %s\n"|148-32-0-0
18472|data|DCD aUnlockInMutex - 0x412E; "unlock in_mutex"|134-33-0-0
18476|data|DCD aSgFinishIo - 0x4164; "sg_finish_io"|144-20-0-0
18480|data|DCD aSAtSDS - 0x4172; "%s at \"%s\":%d: %s\n"|78-32-0-0
18484|data|DCD aLockInMutex - 0x4174; "lock in_mutex"|48-33-0-0
18488|data|DCD aErrorFinishing - 0x419A; "error finishing sg in command (medium)"...|110-33-0-0
18492|data|DCD unk_18020 - 0x41A6|122-62-1-0
18496|data|DCD aErrorFinishing_0 - 0x41D0; "error finishing sg in command (%d)\n"|148-33-0-0
18500|data|DCD unk_18020 - 0x41DC|68-62-1-0
18504|data|DCD aSgFinishIo - 0x42EE; "sg_finish_io"|6-19-0-0
18508|data|DCD aSAtSDS - 0x42FC; "%s at \"%s\":%d: %s\n"|196-30-0-0
18512|data|DCD aLockOutMutex - 0x42FE; "lock out_mutex"|222-32-0-0
18516|data|DCD aIgnoredErrorFo - 0x445C; ">> ignored error for out blk=%lld for %"...|132-32-0-0
18520|data|DCD aSgFinishIo - 0x44B2; "sg_finish_io"|66-17-0-0
18524|data|DCD aSAtSDS - 0x44BC; "%s at \"%s\":%d: %s\n"|4-29-0-0
18528|data|DCD aUnlockOutMutex - 0x44BE; "unlock out_mutex"|66-31-0-0
18532|data|DCD aSgFinishIo - 0x44F2; "sg_finish_io"|2-17-0-0
18536|data|DCD aSAtSDS - 0x44FC; "%s at \"%s\":%d: %s\n"|196-28-0-0
18540|data|DCD aUnlockInMutex - 0x44FE; "unlock in_mutex"|182-29-0-0
18544|data|DCD aSgFinishIo - 0x4524; "sg_finish_io"|208-16-0-0
18548|data|DCD aSAtSDS - 0x452E; "%s at \"%s\":%d: %s\n"|146-28-0-0
18552|data|DCD aUnlockOutMutex - 0x4530; "unlock out_mutex"|208-30-0-0
18556|data|DCD aIgnoredErrorFo_0 - 0x45A8; ">> ignored error for out blk=%lld for %"...|224-30-0-0
18560|data|DCD aSgFinishIo - 0x462E; "sg_finish_io"|198-15-0-0
18564|data|DCD aSAtSDS - 0x4638; "%s at \"%s\":%d: %s\n"|136-27-0-0
18568|data|DCD aUnlockOutMutex - 0x463A; "unlock out_mutex"|198-29-0-0
18572|data|DCD aSgFinishIo - 0x466E; "sg_finish_io"|134-15-0-0
18576|data|DCD aSAtSDS - 0x4678; "%s at \"%s\":%d: %s\n"|72-27-0-0
18580|data|DCD aLockOutMutex - 0x467A; "lock out_mutex"|98-29-0-0
18584|data|DCD aErrorFinishing_1 - 0x469E; "error finishing sg out command (medium)"...|190-29-0-0
18588|data|DCD unk_18020 - 0x46A8|120-57-1-0
18592|data|DCD aErrorFinishing_2 - 0x46CA; "error finishing sg out command (%d)\n"|238-29-0-0
18596|data|DCD unk_18020 - 0x46D4|76-57-1-0
18600|data|DCD aSgFinishIo - 0x4722; "sg_finish_io"|210-14-0-0
18604|data|DCD aSAtSDS - 0x472C; "%s at \"%s\":%d: %s\n"|148-26-0-0
18608|data|DCD aUnlockOutMutex - 0x472E; "unlock out_mutex"|210-28-0-0
18612|data|DCD aErrorNormalWri - 0x4798; "error normal write, %s\n"|124-29-0-0
18616|code|STR.W           R8, [R7,#0xC4]|199-248-196-128
18620|code|ADD.W           R0, R7, #0xC8; mutex|7-241-200-0
18624|code|MOV             R4, R7|60-70
18626|code|STR.W           R8, [SP,#0x13F0+var_138C]|205-248-100-128
18630|code|BLX             pthread_mutex_unlock|252-247-254-234
18634|code|CMP             R0, #0|0-40
18636|code|BEQ.W           loc_42C8|63-244-252-172
18640|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18642|code|ADDW            R1, SP, #0x13F0+var_BAC|13-246-68-1
18646|code|LDR             R3, =dword_110|192-75
18648|code|MOVW            R5, #0x265|64-242-101-37
18652|code|LDR             R3, [R2,R3]|211-88
18654|code|LDR             R4, [R3]|28-104
18656|code|BL              sub_2F48|254-247-50-251
18660|code|LDR             R3, =(aSgFinishIo - 0x48EE); "sg_finish_io"|189-75
18662|code|MOV             R1, R8|65-70
18664|code|LDR             R2, =(aSAtSDS - 0x48F8); "%s at \"%s\":%d: %s\n"|189-74
18666|code|ADD             R3, PC; "sg_finish_io"|123-68
18668|code|ADDS            R3, #0x10|16-51
18670|code|STMEA.W         SP, {R3,R5}|141-232-40-0
18674|code|LDR             R3, =(aUnlockOutMutex - 0x48FA); "unlock out_mutex"|188-75
18676|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18678|code|ADD             R3, PC; "unlock out_mutex"|123-68
18680|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18682|code|MOV             R0, R4|32-70
18684|code|BLX             __fprintf_chk|252-247-244-235
18688|code|B.W             loc_3F20|255-247-14-187
18692|code|LDR             R3, =dword_110|180-75
18694|code|MOVS            R1, #1|1-33
18696|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18698|code|LDRD.W          R6, R7, [R4,#0x10]|212-233-4-103
18702|code|LDR             R4, [R2,R3]|212-88
18704|code|LDR             R2, =(aSgpDdInputting - 0x491A); "sgp_dd: inputting to sg failed, blk=%ll"...|181-74
18706|code|STRD.W          R6, R7, [SP,#0x13F0+var_13F0]|205-233-0-103
18710|code|ADD             R2, PC; "sgp_dd: inputting to sg failed, blk=%ll"...|122-68
18712|code|LDR             R0, [R4]|32-104
18714|code|BLX             __fprintf_chk|252-247-230-235
18718|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
18720|code|ADD.W           R0, R3, #0x58 ; 'X'; mutex|3-241-88-0
18724|code|BLX             pthread_mutex_unlock|252-247-206-234
18728|code|CMP             R0, #0|0-40
18730|code|BEQ.W           loc_41B2|63-244-66-172
18734|code|ADDW            R1, SP, #0x13F0+var_8AC|13-246-68-49
18738|code|LDR             R4, [R4]|36-104
18740|code|BL              sub_2F48|254-247-8-251
18744|code|LDR             R3, =(aSgFinishIo - 0x4944); "sg_finish_io"|172-75
18746|code|MOVW            R2, #0x347|64-242-71-50
18750|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
18752|code|ADD             R3, PC; "sg_finish_io"|123-68
18754|code|LDR             R2, =(aSAtSDS - 0x4950); "%s at \"%s\":%d: %s\n"|171-74
18756|code|ADDS            R3, #0x24 ; '$'|36-51
18758|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
18760|code|LDR             R3, =(aUnlockInMutex - 0x4952); "unlock in_mutex"|170-75
18762|code|MOVS            R1, #1|1-33
18764|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18766|code|ADD             R3, PC; "unlock in_mutex"|123-68
18768|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18770|code|MOV             R0, R4|32-70
18772|code|BLX             __fprintf_chk|252-247-200-235
18776|code|B.W             loc_3F20|255-247-226-186
18780|code|BLX             __stack_chk_fail|252-247-8-235
18784|code|MOVS            R2, #3|3-34
18786|code|STR.W           R2, [R3,#(dword_18204 - 0x18020)]|195-248-228-33
18790|code|B               loc_46B0|163-230
18792|code|LDR             R3, =dword_110|155-75
18794|code|MOVS            R1, #1|1-33
18796|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18798|code|LDRD.W          R6, R7, [R4,#0x10]|212-233-4-103
18802|code|LDR             R4, [R2,R3]|212-88
18804|code|LDR             R2, =(aSgpDdOutputtin - 0x497E); "sgp_dd: outputting from sg failed, blk="...|160-74
18806|code|STRD.W          R6, R7, [SP,#0x13F0+var_13F0]|205-233-0-103
18810|code|ADD             R2, PC; "sgp_dd: outputting from sg failed, blk="...|122-68
18812|code|LDR             R0, [R4]|32-104
18814|code|BLX             __fprintf_chk|252-247-180-235
18818|code|LDR             R3, [SP,#0x13F0+var_13E0]|4-155
18820|code|ADD.W           R0, R3, #0xC8; mutex|3-241-200-0
18824|code|BLX             pthread_mutex_unlock|252-247-156-234
18828|code|CMP             R0, #0|0-40
18830|code|BEQ.W           loc_46B0|63-244-143-174
18834|code|ADDW            R1, SP, #0x13F0+var_42C|13-246-196-113
18838|code|LDR             R4, [R4]|36-104
18840|code|BL              sub_2F48|254-247-214-250
18844|code|LDR             R3, =(aSgFinishIo - 0x49A8); "sg_finish_io"|151-75
18846|code|MOVW            R2, #0x38E|64-242-142-50
18850|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
18852|code|ADD             R3, PC; "sg_finish_io"|123-68
18854|code|LDR             R2, =(aSAtSDS - 0x49B4); "%s at \"%s\":%d: %s\n"|150-74
18856|code|ADDS            R3, #0x34 ; '4'|52-51
18858|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
18860|code|LDR             R3, =(aUnlockOutMutex - 0x49B6); "unlock out_mutex"|149-75
18862|code|MOVS            R1, #1|1-33
18864|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18866|code|ADD             R3, PC; "unlock out_mutex"|123-68
18868|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18870|code|MOV             R0, R4|32-70
18872|code|BLX             __fprintf_chk|252-247-150-235
18876|code|B.W             loc_3F20|255-247-176-186
18880|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18882|code|ADD.W           R1, SP, #0x13F0+var_230|13-245-142-81
18886|code|LDR             R3, =dword_110|132-75
18888|code|ADDS            R1, #4|4-49
18890|code|LDR             R3, [R2,R3]|211-88
18892|code|LDR             R4, [R3]|28-104
18894|code|BL              sub_2F48|254-247-187-250
18898|code|LDR             R3, =(aSgFinishIo - 0x49E0); "sg_finish_io"|141-75
18900|code|MOVW            R2, #0x3B2|64-242-178-50
18904|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
18906|code|MOVS            R1, #1|1-33
18908|code|ADD             R3, PC; "sg_finish_io"|123-68
18910|code|LDR             R2, =(aSAtSDS - 0x49EA); "%s at \"%s\":%d: %s\n"|139-74
18912|code|ADDS            R3, #0x34 ; '4'|52-51
18914|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
18916|code|LDR             R3, =(aUnlockAuxMutex - 0x49EC); "unlock aux_mutex"|138-75
18918|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18920|code|ADD             R3, PC; "unlock aux_mutex"|123-68
18922|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18924|code|MOV             R0, R4|32-70
18926|code|BLX             __fprintf_chk|252-247-124-235
18930|code|B.W             loc_3F20|255-247-149-186
18934|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18936|code|ADD.W           R1, SP, #0x13F0+var_2B0|13-245-138-81
18940|code|LDR             R3, =dword_110|118-75
18942|code|ADDS            R1, #4|4-49
18944|code|LDR             R3, [R2,R3]|211-88
18946|code|LDR             R4, [R3]|28-104
18948|code|BL              sub_2F48|254-247-160-250
18952|code|LDR             R3, =(aSgFinishIo - 0x4A16); "sg_finish_io"|130-75
18954|code|MOVW            R2, #0x3AE|64-242-174-50
18958|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
18960|code|MOVS            R1, #1|1-33
18962|code|ADD             R3, PC; "sg_finish_io"|123-68
18964|code|LDR             R2, =(aSAtSDS - 0x4A20); "%s at \"%s\":%d: %s\n"|128-74
18966|code|ADDS            R3, #0x34 ; '4'|52-51
18968|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
18970|code|LDR             R3, =(aLockAuxMutex - 0x4A22); "lock aux_mutex"|128-75
18972|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
18974|code|ADD             R3, PC; "lock aux_mutex"|123-68
18976|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
18978|code|MOV             R0, R4|32-70
18980|code|BLX             __fprintf_chk|252-247-96-235
18984|code|B.W             loc_3F20|255-247-122-186
18988|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
18990|code|ADDW            R1, SP, #0x13F0+var_72C|13-246-196-65
18994|code|LDR             R3, =dword_110|105-75
18996|code|LDR             R3, [R2,R3]|211-88
18998|code|LDR             R4, [R3]|28-104
19000|code|BL              sub_2F48|254-247-134-250
19004|code|LDR             R3, =(aSgFinishIo - 0x4A4A); "sg_finish_io"|120-75
19006|code|MOVW            R2, #0x369|64-242-105-50
19010|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
19012|code|MOVS            R1, #1|1-33
19014|code|ADD             R3, PC; "sg_finish_io"|123-68
19016|code|LDR             R2, =(aSAtSDS - 0x4A54); "%s at \"%s\":%d: %s\n"|118-74
19018|code|ADDS            R3, #0x24 ; '$'|36-51
19020|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
19022|code|LDR             R3, =(aLockAuxMutex - 0x4A56); "lock aux_mutex"|118-75
19024|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19026|code|ADD             R3, PC; "lock aux_mutex"|123-68
19028|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19030|code|MOV             R0, R4|32-70
19032|code|BLX             __fprintf_chk|252-247-70-235
19036|code|B.W             loc_3F20|255-247-96-186
19040|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19042|code|MOV             R5, R0|5-70
19044|code|LDR             R3, =dword_110|92-75
19046|code|ADDW            R1, SP, #0x13F0+var_4AC|13-246-68-113
19050|code|MOVS            R0, #0xC|12-32
19052|code|LDR             R3, [R2,R3]|211-88
19054|code|LDR             R4, [R3]|28-104
19056|code|BL              sub_2F48|254-247-106-250
19060|code|LDR             R3, =(aSgFinishIo - 0x4A82); "sg_finish_io"|109-75
19062|code|MOV             R1, R5|41-70
19064|code|LDR             R2, =(aSAtSDS - 0x4A8C); "%s at \"%s\":%d: %s\n"|109-74
19066|code|MOVW            R5, #0x389|64-242-137-53
19070|code|ADD             R3, PC; "sg_finish_io"|123-68
19072|code|ADDS            R3, #0x34 ; '4'|52-51
19074|code|STMEA.W         SP, {R3,R5}|141-232-40-0
19078|code|LDR             R3, =(aSgStartingOutC - 0x4A8E); "sg starting out command"|107-75
19080|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19082|code|ADD             R3, PC; "sg starting out command"|123-68
19084|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19086|code|MOV             R0, R4|32-70
19088|code|BLX             __fprintf_chk|252-247-42-235
19092|code|B.W             loc_3F20|255-247-68-186
19096|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19098|code|ADD.W           R1, SP, #0x13F0+var_1B0|13-245-146-81
19102|code|LDR             R3, =dword_110|78-75
19104|code|ADDS            R1, #4|4-49
19106|code|LDR             R3, [R2,R3]|211-88
19108|code|LDR             R4, [R3]|28-104
19110|code|BL              sub_2F48|254-247-79-250
19114|code|LDR             R3, =(aSgFinishIo - 0x4AB8); "sg_finish_io"|99-75
19116|code|MOVW            R2, #0x3B5|64-242-181-50
19120|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
19122|code|MOVS            R1, #1|1-33
19124|code|ADD             R3, PC; "sg_finish_io"|123-68
19126|code|LDR             R2, =(aSAtSDS - 0x4AC2); "%s at \"%s\":%d: %s\n"|97-74
19128|code|ADDS            R3, #0x34 ; '4'|52-51
19130|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
19132|code|LDR             R3, =(aLockOutMutex - 0x4AC4); "lock out_mutex"|96-75
19134|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19136|code|ADD             R3, PC; "lock out_mutex"|123-68
19138|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19140|code|MOV             R0, R4|32-70
19142|code|BLX             __fprintf_chk|252-247-16-235
19146|code|B.W             loc_3F20|255-247-41-186
19150|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19152|code|ADD.W           R1, SP, #0x13F0+var_3B0|13-245-130-81
19156|code|LDR             R3, =dword_110|64-75
19158|code|ADDS            R1, #4|4-49
19160|code|LDR             R3, [R2,R3]|211-88
19162|code|LDR             R4, [R3]|28-104
19164|code|BL              sub_2F48|254-247-52-250
19168|code|LDR             R3, =(aSgFinishIo - 0x4AEE); "sg_finish_io"|88-75
19170|code|MOV.W           R2, #0x394|79-244-101-114
19174|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
19176|code|MOVS            R1, #1|1-33
19178|code|ADD             R3, PC; "sg_finish_io"|123-68
19180|code|LDR             R2, =(aSAtSDS - 0x4AF8); "%s at \"%s\":%d: %s\n"|86-74
19182|code|ADDS            R3, #0x34 ; '4'|52-51
19184|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
19186|code|LDR             R3, =(aUnlockOutMutex - 0x4AFA); "unlock out_mutex"|86-75
19188|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19190|code|ADD             R3, PC; "unlock out_mutex"|123-68
19192|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19194|code|MOV             R0, R4|32-70
19196|code|BLX             __fprintf_chk|252-247-244-234
19200|code|B.W             loc_3F20|255-247-14-186
19204|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19206|code|ADDW            R1, SP, #0x13F0+var_82C|13-246-196-49
19210|code|LDR             R3, =dword_110|51-75
19212|code|LDR             R3, [R2,R3]|211-88
19214|code|LDR             R4, [R3]|28-104
19216|code|BL              sub_2F48|254-247-26-250
19220|code|LDR             R3, =(aSgFinishIo - 0x4B22); "sg_finish_io"|78-75
19222|code|MOVW            R2, #0x34D|64-242-77-50
19226|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
19228|code|MOVS            R1, #1|1-33
19230|code|ADD             R3, PC; "sg_finish_io"|123-68
19232|code|LDR             R2, =(aSAtSDS - 0x4B2C); "%s at \"%s\":%d: %s\n"|76-74
19234|code|ADDS            R3, #0x24 ; '$'|36-51
19236|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
19238|code|LDR             R3, =(aUnlockInMutex - 0x4B2E); "unlock in_mutex"|76-75
19240|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19242|code|ADD             R3, PC; "unlock in_mutex"|123-68
19244|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19246|code|MOV             R0, R4|32-70
19248|code|BLX             __fprintf_chk|252-247-218-234
19252|code|B.W             loc_3F20|255-247-244-185
19256|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19258|code|MOV             R5, R0|5-70
19260|code|LDR             R3, =dword_110|38-75
19262|code|ADDW            R1, SP, #0x13F0+var_92C|13-246-196-33
19266|code|MOVS            R0, #0xC|12-32
19268|code|LDR             R3, [R2,R3]|211-88
19270|code|LDR             R4, [R3]|28-104
19272|code|BL              sub_2F48|254-247-254-249
19276|code|LDR             R3, =(aSgFinishIo - 0x4B5A); "sg_finish_io"|67-75
19278|code|MOV             R1, R5|41-70
19280|code|LDR             R2, =(aSAtSDS - 0x4B64); "%s at \"%s\":%d: %s\n"|67-74
19282|code|MOVW            R5, #0x342|64-242-66-53
19286|code|ADD             R3, PC; "sg_finish_io"|123-68
19288|code|ADDS            R3, #0x24 ; '$'|36-51
19290|code|STMEA.W         SP, {R3,R5}|141-232-40-0
19294|code|LDR             R3, =(aSgStartingInCo - 0x4B66); "sg starting in command"|65-75
19296|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19298|code|ADD             R3, PC; "sg starting in command"|123-68
19300|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19302|code|MOV             R0, R4|32-70
19304|code|BLX             __fprintf_chk|252-247-190-234
19308|code|B.W             loc_3F20|255-247-216-185
19312|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19314|code|ADDW            R1, SP, #0x13F0+var_6AC|13-246-68-81
19318|code|LDR             R3, =dword_110|24-75
19320|code|LDR             R3, [R2,R3]|211-88
19322|code|LDR             R4, [R3]|28-104
19324|code|BL              sub_2F48|254-247-228-249
19328|code|LDR             R3, =(aSgFinishIo - 0x4B8E); "sg_finish_io"|57-75
19330|code|MOVW            R2, #0x36D|64-242-109-50
19334|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
19336|code|MOVS            R1, #1|1-33
19338|code|ADD             R3, PC; "sg_finish_io"|123-68
19340|code|LDR             R2, =(aSAtSDS - 0x4B98); "%s at \"%s\":%d: %s\n"|55-74
19342|code|ADDS            R3, #0x24 ; '$'|36-51
19344|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
19346|code|LDR             R3, =(aUnlockAuxMutex - 0x4B9A); "unlock aux_mutex"|55-75
19348|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19350|code|ADD             R3, PC; "unlock aux_mutex"|123-68
19352|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19354|code|MOV             R0, R4|32-70
19356|code|BLX             __fprintf_chk|252-247-164-234
19360|code|B.W             loc_3F20|255-247-190-185
19364|code|LDR             R2, [SP,#0x13F0+var_13DC]|5-154
19366|code|ADDW            R1, SP, #0x13F0+var_62C|13-246-196-81
19370|code|LDR             R3, =dword_110|11-75
19372|code|LDR             R3, [R2,R3]|211-88
19374|code|LDR             R4, [R3]|28-104
19376|code|BL              sub_2F48|254-247-202-249
19380|code|LDR             R3, =(aSgFinishIo - 0x4BC2); "sg_finish_io"|47-75
19382|code|MOV.W           R2, #0x370|79-244-92-114
19386|code|STR             R2, [SP,#0x13F0+var_13EC]|1-146
19388|code|MOVS            R1, #1|1-33
19390|code|ADD             R3, PC; "sg_finish_io"|123-68
19392|code|LDR             R2, =(aSAtSDS - 0x4BCC); "%s at \"%s\":%d: %s\n"|45-74
19394|code|ADDS            R3, #0x24 ; '$'|36-51
19396|code|STR             R3, [SP,#0x13F0+var_13F0]|0-147
19398|code|LDR             R3, =(aLockInMutex - 0x4BCE); "lock in_mutex"|45-75
19400|code|ADD             R2, PC; "%s at \"%s\":%d: %s\n"|122-68
19402|code|ADD             R3, PC; "lock in_mutex"|123-68
19404|code|STR             R0, [SP,#0x13F0+var_13E8]|2-144
19406|code|MOV             R0, R4|32-70
19408|code|BLX             __fprintf_chk|252-247-138-234
19412|code|B.W             loc_3F20|255-247-164-185
19416|data|DCD dword_110|16-1-0-0
19420|data|DCD aSgFinishIo - 0x48EE; "sg_finish_io"|6-13-0-0
19424|data|DCD aSAtSDS - 0x48F8; "%s at \"%s\":%d: %s\n"|200-24-0-0
19428|data|DCD aUnlockOutMutex - 0x48FA; "unlock out_mutex"|6-27-0-0
19432|data|DCD aSgpDdInputting - 0x491A; "sgp_dd: inputting to sg failed, blk=%ll"...|194-25-0-0
19436|data|DCD aSgFinishIo - 0x4944; "sg_finish_io"|176-12-0-0
19440|data|DCD aSAtSDS - 0x4950; "%s at \"%s\":%d: %s\n"|112-24-0-0
19444|data|DCD aUnlockInMutex - 0x4952; "unlock in_mutex"|98-25-0-0
19448|data|DCD aSgpDdOutputtin - 0x497E; "sgp_dd: outputting from sg failed, blk="...|174-26-0-0
19452|data|DCD aSgFinishIo - 0x49A8; "sg_finish_io"|76-12-0-0
19456|data|DCD aSAtSDS - 0x49B4; "%s at \"%s\":%d: %s\n"|12-24-0-0
19460|data|DCD aUnlockOutMutex - 0x49B6; "unlock out_mutex"|74-26-0-0
19464|data|DCD aSgFinishIo - 0x49E0; "sg_finish_io"|20-12-0-0
19468|data|DCD aSAtSDS - 0x49EA; "%s at \"%s\":%d: %s\n"|214-23-0-0
19472|data|DCD aUnlockAuxMutex - 0x49EC; "unlock aux_mutex"|60-24-0-0
19476|data|DCD aSgFinishIo - 0x4A16; "sg_finish_io"|222-11-0-0
19480|data|DCD aSAtSDS - 0x4A20; "%s at \"%s\":%d: %s\n"|160-23-0-0
19484|data|DCD aLockAuxMutex - 0x4A22; "lock aux_mutex"|246-23-0-0
19488|data|DCD aSgFinishIo - 0x4A4A; "sg_finish_io"|170-11-0-0
19492|data|DCD aSAtSDS - 0x4A54; "%s at \"%s\":%d: %s\n"|108-23-0-0
19496|data|DCD aLockAuxMutex - 0x4A56; "lock aux_mutex"|194-23-0-0
19500|data|DCD aSgFinishIo - 0x4A82; "sg_finish_io"|114-11-0-0
19504|data|DCD aSAtSDS - 0x4A8C; "%s at \"%s\":%d: %s\n"|52-23-0-0
19508|data|DCD aSgStartingOutC - 0x4A8E; "sg starting out command"|134-25-0-0
19512|data|DCD aSgFinishIo - 0x4AB8; "sg_finish_io"|60-11-0-0
19516|data|DCD aSAtSDS - 0x4AC2; "%s at \"%s\":%d: %s\n"|254-22-0-0
19520|data|DCD aLockOutMutex - 0x4AC4; "lock out_mutex"|24-25-0-0
19524|data|DCD aSgFinishIo - 0x4AEE; "sg_finish_io"|6-11-0-0
19528|data|DCD aSAtSDS - 0x4AF8; "%s at \"%s\":%d: %s\n"|200-22-0-0
19532|data|DCD aUnlockOutMutex - 0x4AFA; "unlock out_mutex"|6-25-0-0
19536|data|DCD aSgFinishIo - 0x4B22; "sg_finish_io"|210-10-0-0
19540|data|DCD aSAtSDS - 0x4B2C; "%s at \"%s\":%d: %s\n"|148-22-0-0
19544|data|DCD aUnlockInMutex - 0x4B2E; "unlock in_mutex"|134-23-0-0
19548|data|DCD aSgFinishIo - 0x4B5A; "sg_finish_io"|154-10-0-0
19552|data|DCD aSAtSDS - 0x4B64; "%s at \"%s\":%d: %s\n"|92-22-0-0
19556|data|DCD aSgStartingInCo - 0x4B66; "sg starting in command"|94-23-0-0
19560|data|DCD aSgFinishIo - 0x4B8E; "sg_finish_io"|102-10-0-0
19564|data|DCD aSAtSDS - 0x4B98; "%s at \"%s\":%d: %s\n"|40-22-0-0
19568|data|DCD aUnlockAuxMutex - 0x4B9A; "unlock aux_mutex"|142-22-0-0
19572|data|DCD aSgFinishIo - 0x4BC2; "sg_finish_io"|50-10-0-0
19576|data|DCD aSAtSDS - 0x4BCC; "%s at \"%s\":%d: %s\n"|244-21-0-0
19580|data|DCD aLockInMutex - 0x4BCE; "lock in_mutex"|214-22-0-0
19584|code|CMP             R1, #0|0-41
19586|code|BEQ.W           loc_4F02|0-240-62-129
19590|code|EOR.W           R12, R0, R1|128-234-1-12
19594|code|IT MI|72-191
19596|code|NEGMI           R1, R1|73-66
19598|code|SUBS            R2, R1, #1|74-30
19600|code|BEQ.W           loc_4ED2|0-240-31-129
19604|code|MOVS            R3, R0|3-0
19606|code|IT MI|72-191
19608|code|NEGMI           R3, R0|67-66
19610|code|CMP             R3, R1|139-66
19612|code|BLS.W           loc_4EDC|64-242-30-129
19616|code|TST             R1, R2|17-66
19618|code|BEQ.W           loc_4EEC|0-240-35-129
19622|code|CLZ.W           R2, R3|179-250-131-242
19626|code|CLZ.W           R0, R1|177-250-129-240
19630|code|SUB.W           R2, R0, R2|160-235-2-2
19634|code|RSB.W           R2, R2, #0x1F|194-241-31-2
19638|code|ADR             R0, loc_4CC8|4-160
19640|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
19644|code|MOV.W           R0, #0|79-240-0-0
19648|code|MOV             PC, R2|151-70
19650|data|ALIGN 4|0-191
19652|code|NOP.W|175-243-0-128
19656|code|CMP.W           R3, R1,LSL#31|179-235-193-127
19660|code|NOP|0-191
19662|code|ADC.W           R0, R0, R0|64-235-0-0
19666|code|IT CS|40-191
19668|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
19672|code|CMP.W           R3, R1,LSL#30|179-235-129-127
19676|code|NOP|0-191
19678|code|ADC.W           R0, R0, R0|64-235-0-0
19682|code|IT CS|40-191
19684|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
19688|code|CMP.W           R3, R1,LSL#29|179-235-65-127
19692|code|NOP|0-191
19694|code|ADC.W           R0, R0, R0|64-235-0-0
19698|code|IT CS|40-191
19700|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
19704|code|CMP.W           R3, R1,LSL#28|179-235-1-127
19708|code|NOP|0-191
19710|code|ADC.W           R0, R0, R0|64-235-0-0
19714|code|IT CS|40-191
19716|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
19720|code|CMP.W           R3, R1,LSL#27|179-235-193-111
19724|code|NOP|0-191
19726|code|ADC.W           R0, R0, R0|64-235-0-0
19730|code|IT CS|40-191
19732|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
19736|code|CMP.W           R3, R1,LSL#26|179-235-129-111
19740|code|NOP|0-191
19742|code|ADC.W           R0, R0, R0|64-235-0-0
19746|code|IT CS|40-191
19748|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
19752|code|CMP.W           R3, R1,LSL#25|179-235-65-111
19756|code|NOP|0-191
19758|code|ADC.W           R0, R0, R0|64-235-0-0
19762|code|IT CS|40-191
19764|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
19768|code|CMP.W           R3, R1,LSL#24|179-235-1-111
19772|code|NOP|0-191
19774|code|ADC.W           R0, R0, R0|64-235-0-0
19778|code|IT CS|40-191
19780|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
19784|code|CMP.W           R3, R1,LSL#23|179-235-193-95
19788|code|NOP|0-191
19790|code|ADC.W           R0, R0, R0|64-235-0-0
19794|code|IT CS|40-191
19796|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
19800|code|CMP.W           R3, R1,LSL#22|179-235-129-95
19804|code|NOP|0-191
19806|code|ADC.W           R0, R0, R0|64-235-0-0
19810|code|IT CS|40-191
19812|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
19816|code|CMP.W           R3, R1,LSL#21|179-235-65-95
19820|code|NOP|0-191
19822|code|ADC.W           R0, R0, R0|64-235-0-0
19826|code|IT CS|40-191
19828|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
19832|code|CMP.W           R3, R1,LSL#20|179-235-1-95
19836|code|NOP|0-191
19838|code|ADC.W           R0, R0, R0|64-235-0-0
19842|code|IT CS|40-191
19844|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
19848|code|CMP.W           R3, R1,LSL#19|179-235-193-79
19852|code|NOP|0-191
19854|code|ADC.W           R0, R0, R0|64-235-0-0
19858|code|IT CS|40-191
19860|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
19864|code|CMP.W           R3, R1,LSL#18|179-235-129-79
19868|code|NOP|0-191
19870|code|ADC.W           R0, R0, R0|64-235-0-0
19874|code|IT CS|40-191
19876|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
19880|code|CMP.W           R3, R1,LSL#17|179-235-65-79
19884|code|NOP|0-191
19886|code|ADC.W           R0, R0, R0|64-235-0-0
19890|code|IT CS|40-191
19892|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
19896|code|CMP.W           R3, R1,LSL#16|179-235-1-79
19900|code|NOP|0-191
19902|code|ADC.W           R0, R0, R0|64-235-0-0
19906|code|IT CS|40-191
19908|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
19912|code|CMP.W           R3, R1,LSL#15|179-235-193-63
19916|code|NOP|0-191
19918|code|ADC.W           R0, R0, R0|64-235-0-0
19922|code|IT CS|40-191
19924|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
19928|code|CMP.W           R3, R1,LSL#14|179-235-129-63
19932|code|NOP|0-191
19934|code|ADC.W           R0, R0, R0|64-235-0-0
19938|code|IT CS|40-191
19940|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
19944|code|CMP.W           R3, R1,LSL#13|179-235-65-63
19948|code|NOP|0-191
19950|code|ADC.W           R0, R0, R0|64-235-0-0
19954|code|IT CS|40-191
19956|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
19960|code|CMP.W           R3, R1,LSL#12|179-235-1-63
19964|code|NOP|0-191
19966|code|ADC.W           R0, R0, R0|64-235-0-0
19970|code|IT CS|40-191
19972|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
19976|code|CMP.W           R3, R1,LSL#11|179-235-193-47
19980|code|NOP|0-191
19982|code|ADC.W           R0, R0, R0|64-235-0-0
19986|code|IT CS|40-191
19988|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
19992|code|CMP.W           R3, R1,LSL#10|179-235-129-47
19996|code|NOP|0-191
19998|code|ADC.W           R0, R0, R0|64-235-0-0
20002|code|IT CS|40-191
20004|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
20008|code|CMP.W           R3, R1,LSL#9|179-235-65-47
20012|code|NOP|0-191
20014|code|ADC.W           R0, R0, R0|64-235-0-0
20018|code|IT CS|40-191
20020|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
20024|code|CMP.W           R3, R1,LSL#8|179-235-1-47
20028|code|NOP|0-191
20030|code|ADC.W           R0, R0, R0|64-235-0-0
20034|code|IT CS|40-191
20036|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
20040|code|CMP.W           R3, R1,LSL#7|179-235-193-31
20044|code|NOP|0-191
20046|code|ADC.W           R0, R0, R0|64-235-0-0
20050|code|IT CS|40-191
20052|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
20056|code|CMP.W           R3, R1,LSL#6|179-235-129-31
20060|code|NOP|0-191
20062|code|ADC.W           R0, R0, R0|64-235-0-0
20066|code|IT CS|40-191
20068|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
20072|code|CMP.W           R3, R1,LSL#5|179-235-65-31
20076|code|NOP|0-191
20078|code|ADC.W           R0, R0, R0|64-235-0-0
20082|code|IT CS|40-191
20084|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
20088|code|CMP.W           R3, R1,LSL#4|179-235-1-31
20092|code|NOP|0-191
20094|code|ADC.W           R0, R0, R0|64-235-0-0
20098|code|IT CS|40-191
20100|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
20104|code|CMP.W           R3, R1,LSL#3|179-235-193-15
20108|code|NOP|0-191
20110|code|ADC.W           R0, R0, R0|64-235-0-0
20114|code|IT CS|40-191
20116|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
20120|code|CMP.W           R3, R1,LSL#2|179-235-129-15
20124|code|NOP|0-191
20126|code|ADC.W           R0, R0, R0|64-235-0-0
20130|code|IT CS|40-191
20132|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
20136|code|CMP.W           R3, R1,LSL#1|179-235-65-15
20140|code|NOP|0-191
20142|code|ADC.W           R0, R0, R0|64-235-0-0
20146|code|IT CS|40-191
20148|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
20152|code|CMP.W           R3, R1|179-235-1-15
20156|code|NOP|0-191
20158|code|ADC.W           R0, R0, R0|64-235-0-0
20162|code|IT CS|40-191
20164|code|SUBCS.W         R3, R3, R1|163-235-1-3
20168|code|CMP.W           R12, #0|188-241-0-15
20172|code|IT MI|72-191
20174|code|NEGMI           R0, R0|64-66
20176|code|BX              LR|112-71
20178|code|TEQ.W           R12, R0|156-234-0-15
20182|code|IT MI|72-191
20184|code|NEGMI           R0, R0|64-66
20186|code|BX              LR|112-71
20188|code|IT CC|56-191
20190|code|MOVCC           R0, #0|0-32
20192|code|ITT EQ|4-191
20194|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
20198|code|ORREQ.W         R0, R0, #1|64-240-1-0
20202|code|BX              LR|112-71
20204|code|CLZ.W           R2, R1|177-250-129-242
20208|code|RSB.W           R2, R2, #0x1F|194-241-31-2
20212|code|CMP.W           R12, #0|188-241-0-15
20216|code|LSR.W           R0, R3, R2|35-250-2-240
20220|code|IT MI|72-191
20222|code|NEGMI           R0, R0|64-66
20224|code|BX              LR|112-71
20226|code|CMP             R0, #0|0-40
20228|code|IT GT|200-191
20230|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
20234|code|IT LT|184-191
20236|code|MOVLT.W         R0, #0x80000000|79-240-0-64
20240|code|B.W             loc_52D8|0-240-226-185
20244|code|CMP             R1, #0|0-41
20246|code|BEQ             loc_4F02|244-208
20248|code|PUSH.W          {R0,R1,LR}|45-233-3-64
20252|code|BL              sub_4C86|255-247-179-254
20256|code|POP.W           {R1,R2,LR}|189-232-6-64
20260|code|MUL.W           R3, R2, R0|2-251-0-243
20264|code|SUB.W           R1, R1, R3|161-235-3-1
20268|code|BX              LR|112-71
20270|data|ALIGN 0x10|0-191
20272|code|EOR.W           R1, R1, #0x80000000|129-240-0-65
20276|code|B               loc_4F3C|2-224
20278|data|ALIGN 4|0-191
20280|code|EOR.W           R3, R3, #0x80000000|131-240-0-67
20284|code|PUSH            {R4,R5,LR}|48-181
20286|code|MOV.W           R4, R1,LSL#1|79-234-65-4
20290|code|MOV.W           R5, R3,LSL#1|79-234-67-5
20294|code|TEQ.W           R4, R5|148-234-5-15
20298|code|IT EQ|8-191
20300|code|TEQEQ.W         R0, R2|144-234-2-15
20304|code|ITTTT NE|31-191
20306|code|ORRSNE.W        R12, R4, R0|84-234-0-12
20310|code|ORRSNE.W        R12, R5, R2|85-234-2-12
20314|code|MVNSNE.W        R12, R4,ASR#21|127-234-100-92
20318|code|MVNSNE.W        R12, R5,ASR#21|127-234-101-92
20322|code|BEQ.W           loc_512A|0-240-226-128
20326|code|MOV.W           R4, R4,LSR#21|79-234-84-84
20330|code|RSBS.W          R5, R4, R5,LSR#21|212-235-85-85
20334|code|IT LT|184-191
20336|code|NEGLT           R5, R5|109-66
20338|code|BLE             loc_4F8E|12-221
20340|code|ADD             R4, R5|44-68
20342|code|EOR.W           R2, R0, R2|128-234-2-2
20346|code|EOR.W           R3, R1, R3|129-234-3-3
20350|code|EOR.W           R0, R2, R0|130-234-0-0
20354|code|EOR.W           R1, R3, R1|131-234-1-1
20358|code|EOR.W           R2, R0, R2|128-234-2-2
20362|code|EOR.W           R3, R1, R3|129-234-3-3
20366|code|CMP             R5, #0x36 ; '6'|54-45
20368|code|IT HI|136-191
20370|code|POPHI           {R4,R5,PC}|48-189
20372|code|TST.W           R1, #0x80000000|17-240-0-79
20376|code|MOV.W           R1, R1,LSL#12|79-234-1-49
20380|code|MOV.W           R12, #0x100000|79-244-128-28
20384|code|ORR.W           R1, R12, R1,LSR#12|76-234-17-49
20388|code|BEQ             loc_4FAC|2-208
20390|code|NEGS            R0, R0|64-66
20392|code|SBC.W           R1, R1, R1,LSL#1|97-235-65-1
20396|code|TST.W           R3, #0x80000000|19-240-0-79
20400|code|MOV.W           R3, R3,LSL#12|79-234-3-51
20404|code|ORR.W           R3, R12, R3,LSR#12|76-234-19-51
20408|code|BEQ             loc_4FC0|2-208
20410|code|NEGS            R2, R2|82-66
20412|code|SBC.W           R3, R3, R3,LSL#1|99-235-67-3
20416|code|TEQ.W           R4, R5|148-234-5-15
20420|code|BEQ.W           loc_5116|0-240-167-128
20424|code|SUB.W           R4, R4, #1|164-241-1-4
20428|code|RSBS.W          LR, R5, #0x20 ; ' '|213-241-32-14
20432|code|BLT             loc_4FEE|13-219
20434|code|LSL.W           R12, R2, LR|2-250-14-252
20438|code|LSR.W           R2, R2, R5|34-250-5-242
20442|code|ADDS            R0, R0, R2|128-24
20444|code|ADC.W           R1, R1, #0|65-241-0-1
20448|code|LSL.W           R2, R3, LR|3-250-14-242
20452|code|ADDS            R0, R0, R2|128-24
20454|code|ASR.W           R3, R3, R5|67-250-5-243
20458|code|ADCS            R1, R3|89-65
20460|code|B               loc_500C|14-224
20462|code|SUB.W           R5, R5, #0x20 ; ' '|165-241-32-5
20466|code|ADD.W           LR, LR, #0x20 ; ' '|14-241-32-14
20470|code|CMP             R2, #1|1-42
20472|code|LSL.W           R12, R3, LR|3-250-14-252
20476|code|IT CS|40-191
20478|code|ORRCS.W         R12, R12, #2|76-240-2-12
20482|code|ASR.W           R3, R3, R5|67-250-5-243
20486|code|ADDS            R0, R0, R3|192-24
20488|code|ADCS.W          R1, R1, R3,ASR#31|81-235-227-113
20492|code|AND.W           R5, R1, #0x80000000|1-240-0-69
20496|code|BPL             loc_5022|7-213
20498|code|MOV.W           LR, #0|79-240-0-14
20502|code|RSBS.W          R12, R12, #0|220-241-0-12
20506|code|SBCS.W          R0, LR, R0|126-235-0-0
20510|code|SBC.W           R1, LR, R1|110-235-1-1
20514|code|CMP.W           R1, #0x100000|177-245-128-31
20518|code|BCC             loc_5060|27-211
20520|code|CMP.W           R1, #0x200000|177-245-0-31
20524|code|BCC             loc_5048|12-211
20526|code|LSRS            R1, R1, #1|73-8
20528|code|MOVS.W          R0, R0,RRX|95-234-48-0
20532|code|MOV.W           R12, R12,RRX|79-234-60-12
20536|code|ADD.W           R4, R4, #1|4-241-1-4
20540|code|MOV.W           R2, R4,LSL#21|79-234-68-82
20544|code|CMN.W           R2, #0x400000|18-245-128-15
20548|code|BCS.W           loc_517C|128-240-154-128
20552|code|CMP.W           R12, #0x80000000|188-241-0-79
20556|code|IT EQ|8-191
20558|code|MOVSEQ.W        R12, R0,LSR#1|95-234-80-12
20562|code|ADCS.W          R0, R0, #0|80-241-0-0
20566|code|ADC.W           R1, R1, R4,LSL#20|65-235-4-81
20570|code|ORR.W           R1, R1, R5|65-234-5-1
20574|code|POP             {R4,R5,PC}|48-189
20576|code|MOVS.W          R12, R12,LSL#1|95-234-76-12
20580|code|ADCS            R0, R0|64-65
20582|code|ADC.W           R1, R1, R1|65-235-1-1
20586|code|TST.W           R1, #0x100000|17-244-128-31
20590|code|SUB.W           R4, R4, #1|164-241-1-4
20594|code|BNE             loc_5048|233-209
20596|code|TEQ.W           R1, #0|145-240-0-15
20600|code|ITT EQ|4-191
20602|code|MOVEQ           R1, R0|1-70
20604|code|MOVEQ           R0, #0|0-32
20606|code|CLZ.W           R3, R1|177-250-129-243
20610|code|IT EQ|8-191
20612|code|ADDEQ           R3, #0x20 ; ' '|32-51
20614|code|SUB.W           R3, R3, #0xB|163-241-11-3
20618|code|SUBS.W          R2, R3, #0x20 ; ' '|179-241-32-2
20622|code|BGE             loc_50AA|12-218
20624|code|ADDS            R2, #0xC|12-50
20626|code|BLE             loc_50A6|8-221
20628|code|ADD.W           R12, R2, #0x14|2-241-20-12
20632|code|RSB.W           R2, R2, #0xC|194-241-12-2
20636|code|LSL.W           R0, R1, R12|1-250-12-240
20640|code|LSR.W           R1, R1, R2|33-250-2-241
20644|code|B               loc_50C0|12-224
20646|code|ADD.W           R2, R2, #0x14|2-241-20-2
20650|code|IT LE|216-191
20652|code|RSBLE.W         R12, R2, #0x20 ; ' '|194-241-32-12
20656|code|LSL.W           R1, R1, R2|1-250-2-241
20660|code|LSR.W           R12, R0, R12|32-250-12-252
20664|code|ITT LE|220-191
20666|code|ORRLE.W         R1, R1, R12|65-234-12-1
20670|code|LSLLE           R0, R2|144-64
20672|code|SUBS            R4, R4, R3|228-26
20674|code|ITTT GE|162-191
20676|code|ADDGE.W         R1, R1, R4,LSL#20|1-235-4-81
20680|code|ORRGE           R1, R5|41-67
20682|code|POPGE           {R4,R5,PC}|48-189
20684|code|MVN.W           R4, R4|111-234-4-4
20688|code|SUBS            R4, #0x1F|31-60
20690|code|BGE             loc_510E|28-218
20692|code|ADDS            R4, #0xC|12-52
20694|code|BGT             loc_50F6|14-220
20696|code|ADD.W           R4, R4, #0x14|4-241-20-4
20700|code|RSB.W           R2, R4, #0x20 ; ' '|196-241-32-2
20704|code|LSR.W           R0, R0, R4|32-250-4-240
20708|code|LSL.W           R3, R1, R2|1-250-2-243
20712|code|ORR.W           R0, R0, R3|64-234-3-0
20716|code|LSR.W           R3, R1, R4|33-250-4-243
20720|code|ORR.W           R1, R5, R3|69-234-3-1
20724|code|POP             {R4,R5,PC}|48-189
20726|code|RSB.W           R4, R4, #0xC|196-241-12-4
20730|code|RSB.W           R2, R4, #0x20 ; ' '|196-241-32-2
20734|code|LSR.W           R0, R0, R2|32-250-2-240
20738|code|LSL.W           R3, R1, R4|1-250-4-243
20742|code|ORR.W           R0, R0, R3|64-234-3-0
20746|code|MOV             R1, R5|41-70
20748|code|POP             {R4,R5,PC}|48-189
20750|code|LSR.W           R0, R1, R4|33-250-4-240
20754|code|MOV             R1, R5|41-70
20756|code|POP             {R4,R5,PC}|48-189
20758|code|TEQ.W           R4, #0|148-240-0-15
20762|code|EOR.W           R3, R3, #0x100000|131-244-128-19
20766|code|ITTE EQ|6-191
20768|code|EOREQ.W         R1, R1, #0x100000|129-244-128-17
20772|code|ADDEQ           R4, #1|1-52
20774|code|SUBNE           R5, #1|1-61
20776|code|B               loc_4FC8|78-231
20778|code|MVNS.W          R12, R4,ASR#21|127-234-100-92
20782|code|IT NE|24-191
20784|code|MVNSNE.W        R12, R5,ASR#21|127-234-101-92
20788|code|BEQ             loc_518A|41-208
20790|code|TEQ.W           R4, R5|148-234-5-15
20794|code|IT EQ|8-191
20796|code|TEQEQ.W         R0, R2|144-234-2-15
20800|code|BEQ             loc_514E|5-208
20802|code|ORRS.W          R12, R4, R0|84-234-0-12
20806|code|ITT EQ|4-191
20808|code|MOVEQ           R1, R3|25-70
20810|code|MOVEQ           R0, R2|16-70
20812|code|POP             {R4,R5,PC}|48-189
20814|code|TEQ.W           R1, R3|145-234-3-15
20818|code|ITTT NE|30-191
20820|code|MOVNE           R1, #0|0-33
20822|code|MOVNE           R0, #0|0-32
20824|code|POPNE           {R4,R5,PC}|48-189
20826|code|MOVS.W          R12, R4,LSR#21|95-234-84-92
20830|code|BNE             loc_516C|5-209
20832|code|LSLS            R0, R0, #1|64-0
20834|code|ADCS            R1, R1|73-65
20836|code|IT CS|40-191
20838|code|ORRCS.W         R1, R1, #0x80000000|65-240-0-65
20842|code|POP             {R4,R5,PC}|48-189
20844|code|ADDS.W          R4, R4, #0x400000|20-245-128-4
20848|code|ITT CC|60-191
20850|code|ADDCC.W         R1, R1, #0x100000|1-245-128-17
20854|code|POPCC           {R4,R5,PC}|48-189
20856|code|AND.W           R5, R1, #0x80000000|1-240-0-69
20860|code|ORR.W           R1, R5, #0x7F000000|69-240-254-65
20864|code|ORR.W           R1, R1, #0xF00000|65-244-112-1
20868|code|MOV.W           R0, #0|79-240-0-0
20872|code|POP             {R4,R5,PC}|48-189
20874|code|MVNS.W          R12, R4,ASR#21|127-234-100-92
20878|code|ITTE NE|26-191
20880|code|MOVNE           R1, R3|25-70
20882|code|MOVNE           R0, R2|16-70
20884|code|MVNSEQ.W        R12, R5,ASR#21|127-234-101-92
20888|code|ITT NE|28-191
20890|code|MOVNE           R3, R1|11-70
20892|code|MOVNE           R2, R0|2-70
20894|code|ORRS.W          R4, R0, R1,LSL#12|80-234-1-52
20898|code|ITTE EQ|6-191
20900|code|ORRSEQ.W        R5, R2, R3,LSL#12|82-234-3-53
20904|code|TEQEQ.W         R1, R3|145-234-3-15
20908|code|ORRNE.W         R1, R1, #0x80000|65-244-0-33
20912|code|POP             {R4,R5,PC}|48-189
20914|data|ALIGN 4|0-191
20916|code|TEQ.W           R0, #0|144-240-0-15
20920|code|ITT EQ|4-191
20922|code|MOVEQ           R1, #0|0-33
20924|code|BXEQ            LR|112-71
20926|code|PUSH            {R4,R5,LR}|48-181
20928|code|MOV             R4, #0x432|79-244-128-100-4-241-50-4
20936|code|MOV.W           R5, #0|79-240-0-5
20940|code|MOV.W           R1, #0|79-240-0-1
20944|code|B               loc_5074|80-231
20946|data|ALIGN 4|0-191
20948|code|TEQ.W           R0, #0|144-240-0-15
20952|code|ITT EQ|4-191
20954|code|MOVEQ           R1, #0|0-33
20956|code|BXEQ            LR|112-71
20958|code|PUSH            {R4,R5,LR}|48-181
20960|code|MOV             R4, #0x432|79-244-128-100-4-241-50-4
20968|code|ANDS.W          R5, R0, #0x80000000|16-240-0-69
20972|code|IT MI|72-191
20974|code|NEGMI           R0, R0|64-66
20976|code|MOV.W           R1, #0|79-240-0-1
20980|code|B               loc_5074|62-231
20982|data|ALIGN 4|0-191
20984|code|LSLS            R2, R0, #1|66-0
20986|code|MOV.W           R1, R2,ASR#3|79-234-226-1
20990|code|MOV.W           R1, R1,RRX|79-234-49-1
20994|code|MOV.W           R0, R2,LSL#28|79-234-2-112
20998|code|ITTTT NE|31-191
21000|code|ANDSNE.W        R3, R2, #0xFF000000|18-240-127-67
21004|code|TEQNE.W         R3, #0xFF000000|147-240-127-79
21008|code|EORNE.W         R1, R1, #0x38000000|129-240-96-81
21012|code|BXNE            LR|112-71
21014|code|TEQ.W           R2, #0|146-240-0-15
21018|code|ITE NE|20-191
21020|code|TEQNE.W         R3, #0xFF000000|147-240-127-79
21024|code|BXEQ            LR|112-71
21026|code|PUSH            {R4,R5,LR}|48-181
21028|code|MOV.W           R4, #0x380|79-244-96-116
21032|code|AND.W           R5, R1, #0x80000000|1-240-0-69
21036|code|BIC.W           R1, R1, #0x80000000|33-240-0-65
21040|code|B               loc_5074|32-231
21042|data|ALIGN 4|0-191
21044|code|ORRS.W          R2, R0, R1|80-234-1-2
21048|code|IT EQ|8-191
21050|code|BXEQ            LR|112-71
21052|code|PUSH            {R4,R5,LR}|48-181
21054|code|MOV.W           R5, #0|79-240-0-5
21058|code|B               loc_525A|10-224
21060|code|ORRS.W          R2, R0, R1|80-234-1-2
21064|code|IT EQ|8-191
21066|code|BXEQ            LR|112-71
21068|code|PUSH            {R4,R5,LR}|48-181
21070|code|ANDS.W          R5, R1, #0x80000000|17-240-0-69
21074|code|BPL             loc_525A|2-213
21076|code|NEGS            R0, R0|64-66
21078|code|SBC.W           R1, R1, R1,LSL#1|97-235-65-1
21082|code|MOV             R4, #0x432|79-244-128-100-4-241-50-4
21090|code|MOVS.W          R12, R1,LSR#22|95-234-145-92
21094|code|BEQ.W           loc_5022|63-244-220-174
21098|code|MOV.W           R2, #3|79-240-3-2
21102|code|MOVS.W          R12, R12,LSR#3|95-234-220-12
21106|code|IT NE|24-191
21108|code|ADDNE           R2, #3|3-50
21110|code|MOVS.W          R12, R12,LSR#3|95-234-220-12
21114|code|IT NE|24-191
21116|code|ADDNE           R2, #3|3-50
21118|code|ADD.W           R2, R2, R12,LSR#3|2-235-220-2
21122|code|RSB.W           R3, R2, #0x20 ; ' '|194-241-32-3
21126|code|LSL.W           R12, R0, R3|0-250-3-252
21130|code|LSR.W           R0, R0, R2|32-250-2-240
21134|code|LSL.W           LR, R1, R3|1-250-3-254
21138|code|ORR.W           R0, R0, LR|64-234-14-0
21142|code|LSR.W           R1, R1, R2|33-250-2-241
21146|code|ADD             R4, R2|20-68
21148|code|B               loc_5022|193-230
21150|data|ALIGN 0x10|0-191
21152|code|CBNZ            R3, loc_52C0|115-185
21154|code|CBNZ            R2, loc_52C0|106-185
21156|code|CMP             R1, #0|0-41
21158|code|IT EQ|8-191
21160|code|CMPEQ           R0, #0|0-40
21162|code|ITT LT|188-191
21164|code|MOVLT           R0, #0|0-32
21166|code|MOVLT.W         R1, #0x80000000|79-240-0-65
21170|code|ITT GT|196-191
21172|code|MOVGT           R1, #0x7FFFFFFF|111-240-0-65
21176|code|MOVGT.W         R0, #0xFFFFFFFF|79-240-255-48
21180|code|B.W             loc_52D8|0-240-12-184
21184|code|SUB             SP, SP, #8|130-176
21186|code|MOV             R12, SP|236-70
21188|code|PUSH.W          {R12,LR}|45-233-0-80
21192|code|BL              sub_52E4|0-240-12-248
21196|code|LDR.W           LR, [SP,#0x10+var_C]|221-248-4-224
21200|code|ADD             SP, SP, #8|2-176
21202|code|POP             {R2,R3}|12-188
21204|code|BX              LR|112-71
21206|data|ALIGN 4|0-191
21208|code|PUSH            {R1,LR}|2-181
21210|code|MOV.W           R0, #8; sig|79-240-8-0
21214|code|BLX             raise|251-247-248-237
21218|code|POP             {R1,PC}|2-189
21220|code|PUSH.W          {R4-R8,LR}|45-233-240-65
21224|code|MOV             R8, R3|152-70
21226|code|MOV             R4, R2|20-70
21228|code|LDR             R5, [SP,#0x18+arg_0]|6-157
21230|code|MOV             R6, R0|6-70
21232|code|MOV             R7, R1|15-70
21234|code|BL              sub_5344|0-240-39-248
21238|code|UMULL.W         R2, R3, R4, R0|164-251-0-35
21242|code|MOV             LR, R0|134-70
21244|code|MUL.W           R4, R4, R1|4-251-1-244
21248|code|SUBS            R6, R6, R2|182-26
21250|code|MLA.W           R4, R0, R8, R4|0-251-8-68
21254|code|ADD             R3, R4|35-68
21256|code|SBC.W           R7, R7, R3|103-235-3-7
21260|code|STRD.W          R6, R7, [R5]|197-233-0-103
21264|code|POP.W           {R4-R8,PC}|189-232-240-129
21268|code|PUSH.W          {R3-R9,LR}|45-233-248-67
21272|code|MOV             R7, R2|23-70
21274|code|MOV             R8, R0|128-70
21276|code|MOV             R9, R1|137-70
21278|code|MOV             R5, R3|29-70
21280|code|LDR             R6, [SP,#0x20]|8-158
21282|code|BL              sub_549C|0-240-187-248
21286|code|MUL.W           R3, R0, R5|0-251-5-243
21290|code|UMULL.W         R4, R5, R0, R7|160-251-7-69
21294|code|MLA.W           R7, R7, R1, R3|7-251-1-55
21298|code|SUBS.W          R4, R8, R4|184-235-4-4
21302|code|ADD             R5, R7|61-68
21304|code|SBC.W           R5, R9, R5|105-235-5-5
21308|code|STRD.W          R4, R5, [R6]|198-233-0-69
21312|code|POP.W           {R3-R9,PC}|189-232-248-131
21316|code|CMP             R1, #0|0-41
21318|code|PUSH.W          {R4-R11,LR}|45-233-240-79
21322|code|ITTT GE|162-191
21324|code|MOVGE           R8, R0|128-70
21326|code|MOVGE           R9, R1|137-70
21328|code|MOVGE.W         LR, #0|79-240-0-14
21332|code|BLT.W           loc_548C|192-242-154-128
21336|code|CMP             R3, #0|0-43
21338|code|ITT GE|164-191
21340|code|MOVGE           R0, R2|16-70
21342|code|MOVGE           R1, R3|25-70
21344|code|BLT.W           loc_5480|192-242-142-128
21348|code|CMP             R9, R1|137-69
21350|code|MOV             R4, R8|68-70
21352|code|IT EQ|8-191
21354|code|CMPEQ           R8, R0|128-69
21356|code|MOV             R5, R9|77-70
21358|code|ITT CC|60-191
21360|code|MOVCC           R0, #0|0-32
21362|code|MOVCC           R1, #0|0-33
21364|code|BCC             loc_5446|103-211
21366|code|CLZ.W           R2, R1|177-250-129-242
21370|code|CMP             R1, #0|0-41
21372|code|BEQ             loc_546C|118-208
21374|code|CLZ.W           R3, R9|185-250-137-243
21378|code|CMP.W           R9, #0|185-241-0-15
21382|code|BEQ             loc_5464|109-208
21384|code|SUBS            R3, R2, R3|211-26
21386|code|SUB.W           R12, R3, #0x20 ; ' '|163-241-32-12
21390|code|LSL.W           R7, R1, R3|1-250-3-247
21394|code|LSL.W           R2, R0, R12|0-250-12-242
21398|code|RSB.W           R10, R3, #0x20 ; ' '|195-241-32-10
21402|code|ORRS            R7, R2|23-67
21404|code|LSR.W           R2, R0, R10|32-250-10-242
21408|code|ORRS            R7, R2|23-67
21410|code|LSL.W           R6, R0, R3|0-250-3-246
21414|code|CMP             R9, R7|185-69
21416|code|MOV             R2, R3|26-70
21418|code|IT EQ|8-191
21420|code|CMPEQ           R8, R6|176-69
21422|code|ITT CC|60-191
21424|code|MOVCC           R0, #0|0-32
21426|code|MOVCC           R1, #0|0-33
21428|code|BCC             loc_53D0|12-211
21430|code|MOV.W           R11, #1|79-240-1-11
21434|code|LSR.W           R4, R11, R10|43-250-10-244
21438|code|LSL.W           R1, R11, R12|11-250-12-241
21442|code|ORRS            R1, R4|33-67
21444|code|SUBS.W          R4, R8, R6|184-235-6-4
21448|code|SBC.W           R5, R9, R7|105-235-7-5
21452|code|LSL.W           R0, R11, R3|11-250-3-240
21456|code|CMP             R3, #0|0-43
21458|code|BEQ             loc_5446|56-208
21460|code|LSRS            R7, R7, #1|127-8
21462|code|MOV.W           R6, R6,RRX|79-234-54-6
21466|code|B               loc_53F0|9-224
21468|code|SUBS            R4, R4, R6|164-27
21470|code|SBC.W           R5, R5, R7|101-235-7-5
21474|code|ADDS            R4, R4, R4|36-25
21476|code|ADCS            R5, R5|109-65
21478|code|ADDS            R4, #1|1-52
21480|code|ADC.W           R5, R5, #0|69-241-0-5
21484|code|SUBS            R3, #1|1-59
21486|code|BEQ             loc_5400|7-208
21488|code|CMP             R5, R7|189-66
21490|code|IT EQ|8-191
21492|code|CMPEQ           R4, R6|180-66
21494|code|BCS             loc_53DC|241-210
21496|code|ADDS            R4, R4, R4|36-25
21498|code|ADCS            R5, R5|109-65
21500|code|SUBS            R3, #1|1-59
21502|code|BNE             loc_53F0|247-209
21504|code|RSB.W           R7, R2, #0x20 ; ' '|194-241-32-7
21508|code|LSR.W           R3, R4, R2|36-250-2-243
21512|code|LSL.W           R7, R5, R7|5-250-7-247
21516|code|SUB.W           R6, R2, #0x20 ; ' '|162-241-32-6
21520|code|ORRS            R3, R7|59-67
21522|code|LSR.W           R6, R5, R6|37-250-6-246
21526|code|ORRS            R3, R6|51-67
21528|code|LSR.W           R12, R5, R2|37-250-2-252
21532|code|SUB.W           R8, R2, #0x20 ; ' '|162-241-32-8
21536|code|ADDS            R0, R0, R4|0-25
21538|code|LSL.W           R7, R12, R2|12-250-2-247
21542|code|LSL.W           R8, R3, R8|3-250-8-248
21546|code|RSB.W           R12, R2, #0x20 ; ' '|194-241-32-12
21550|code|ORR.W           R7, R7, R8|71-234-8-7
21554|code|LSR.W           R12, R3, R12|35-250-12-252
21558|code|LSL.W           R6, R3, R2|3-250-2-246
21562|code|ADCS            R1, R5|105-65
21564|code|ORR.W           R7, R7, R12|71-234-12-7
21568|code|SUBS            R0, R0, R6|128-27
21570|code|SBC.W           R1, R1, R7|97-235-7-1
21574|code|MOVS.W          R2, LR|30-241-0-2
21578|code|MOV.W           R3, #0|79-240-0-3
21582|code|IT NE|24-191
21584|code|MOVNE           R2, #1|1-34
21586|code|NEGS            R4, R2|84-66
21588|code|SBC.W           R5, R3, R3,LSL#1|99-235-67-5
21592|code|EORS            R0, R4|96-64
21594|code|EORS            R1, R5|105-64
21596|code|ADDS            R0, R0, R2|128-24
21598|code|ADCS            R1, R3|89-65
21600|code|POP.W           {R4-R11,PC}|189-232-240-143
21604|code|CLZ.W           R3, R8|184-250-136-243
21608|code|ADDS            R3, #0x20 ; ' '|32-51
21610|code|B               loc_5388|141-231
21612|code|CLZ.W           R3, R0|176-250-128-243
21616|code|ADD.W           R2, R3, #0x20 ; ' '|3-241-32-2
21620|code|CLZ.W           R3, R9|185-250-137-243
21624|code|CMP.W           R9, #0|185-241-0-15
21628|code|BNE             loc_5388|132-209
21630|code|B               loc_5464|241-231
21632|code|NEGS            R0, R2|80-66
21634|code|MVN.W           LR, LR|111-234-14-14
21638|code|SBC.W           R1, R3, R3,LSL#1|99-235-67-1
21642|code|B               loc_5364|107-231
21644|code|RSBS.W          R8, R0, #0|208-241-0-8
21648|code|MOV.W           LR, #0xFFFFFFFF|79-240-255-62
21652|code|SBC.W           R9, R1, R1,LSL#1|97-235-65-9
21656|code|B               loc_5358|94-231
21658|data|ALIGN 4|0-191
21660|code|PUSH.W          {R4-R8,LR}|45-233-240-65
21664|code|MOV             R5, R1|13-70
21666|code|CMP             R5, R3|157-66
21668|code|MOV             R4, R0|4-70
21670|code|IT EQ|8-191
21672|code|CMPEQ           R4, R2|148-66
21674|code|MOV             R0, R2|16-70
21676|code|MOV             R1, R3|25-70
21678|code|BCC             loc_5580|103-211
21680|code|CLZ.W           R2, R3|179-250-131-242
21684|code|CMP             R3, #0|0-43
21686|code|BEQ             loc_5590|107-208
21688|code|CLZ.W           R3, R5|181-250-133-243
21692|code|CMP             R5, #0|0-45
21694|code|BEQ             loc_5588|99-208
21696|code|SUBS            R3, R2, R3|211-26
21698|code|SUB.W           R2, R3, #0x20 ; ' '|163-241-32-2
21702|code|LSL.W           R7, R1, R3|1-250-3-247
21706|code|RSB.W           R12, R3, #0x20 ; ' '|195-241-32-12
21710|code|LSL.W           R1, R0, R2|0-250-2-241
21714|code|ORRS            R7, R1|15-67
21716|code|LSR.W           R1, R0, R12|32-250-12-241
21720|code|ORRS            R7, R1|15-67
21722|code|LSL.W           R6, R0, R3|0-250-3-246
21726|code|CMP             R5, R7|189-66
21728|code|MOV             LR, R3|158-70
21730|code|IT EQ|8-191
21732|code|CMPEQ           R4, R6|180-66
21734|code|ITT CC|60-191
21736|code|MOVCC           R0, #0|0-32
21738|code|MOVCC           R1, #0|0-33
21740|code|BCC             loc_5508|12-211
21742|code|MOV.W           R8, #1|79-240-1-8
21746|code|SUBS            R4, R4, R6|164-27
21748|code|LSR.W           R12, R8, R12|40-250-12-252
21752|code|LSL.W           R1, R8, R2|8-250-2-241
21756|code|ORR.W           R1, R1, R12|65-234-12-1
21760|code|SBC.W           R5, R5, R7|101-235-7-5
21764|code|LSL.W           R0, R8, R3|8-250-3-240
21768|code|CMP             R3, #0|0-43
21770|code|BEQ             locret_5584|59-208
21772|code|LSRS            R7, R7, #1|127-8
21774|code|MOV.W           R6, R6,RRX|79-234-54-6
21778|code|B               loc_5528|9-224
21780|code|SUBS            R4, R4, R6|164-27
21782|code|SBC.W           R5, R5, R7|101-235-7-5
21786|code|ADDS            R4, R4, R4|36-25
21788|code|ADCS            R5, R5|109-65
21790|code|ADDS            R4, #1|1-52
21792|code|ADC.W           R5, R5, #0|69-241-0-5
21796|code|SUBS            R3, #1|1-59
21798|code|BEQ             loc_5538|7-208
21800|code|CMP             R5, R7|189-66
21802|code|IT EQ|8-191
21804|code|CMPEQ           R4, R6|180-66
21806|code|BCS             loc_5514|241-210
21808|code|ADDS            R4, R4, R4|36-25
21810|code|ADCS            R5, R5|109-65
21812|code|SUBS            R3, #1|1-59
21814|code|BNE             loc_5528|247-209
21816|code|RSB.W           R2, LR, #0x20 ; ' '|206-241-32-2
21820|code|LSR.W           R6, R4, LR|36-250-14-246
21824|code|LSL.W           R2, R5, R2|5-250-2-242
21828|code|SUB.W           R3, LR, #0x20 ; ' '|174-241-32-3
21832|code|LSR.W           R3, R5, R3|37-250-3-243
21836|code|ORRS            R6, R2|22-67
21838|code|ORRS            R6, R3|30-67
21840|code|LSR.W           R7, R5, LR|37-250-14-247
21844|code|SUB.W           R12, LR, #0x20 ; ' '|174-241-32-12
21848|code|ADDS            R0, R0, R4|0-25
21850|code|LSL.W           R3, R7, LR|7-250-14-243
21854|code|LSL.W           R12, R6, R12|6-250-12-252
21858|code|RSB.W           R7, LR, #0x20 ; ' '|206-241-32-7
21862|code|ORR.W           R3, R3, R12|67-234-12-3
21866|code|LSR.W           R7, R6, R7|38-250-7-247
21870|code|LSL.W           R2, R6, LR|6-250-14-242
21874|code|ADCS            R1, R5|105-65
21876|code|ORRS            R3, R7|59-67
21878|code|SUBS            R0, R0, R2|128-26
21880|code|SBC.W           R1, R1, R3|97-235-3-1
21884|code|POP.W           {R4-R8,PC}|189-232-240-129
21888|code|MOVS            R0, #0|0-32
21890|code|MOVS            R1, #0|0-33
21892|code|POP.W           {R4-R8,PC}|189-232-240-129
21896|code|CLZ.W           R3, R4|180-250-132-243
21900|code|ADDS            R3, #0x20 ; ' '|32-51
21902|code|B               loc_54C0|151-231
21904|code|CLZ.W           R3, R0|176-250-128-243
21908|code|ADD.W           R2, R3, #0x20 ; ' '|3-241-32-2
21912|code|CLZ.W           R3, R5|181-250-133-243
21916|code|CMP             R5, #0|0-45
21918|code|BNE             loc_54C0|143-209
21920|code|B               loc_5588|242-231
21922|data|ALIGN 4|0-191
21924|code|PUSH.W          {R3-R9,LR}|45-233-248-67
21928|code|MOV             R7, R0|7-70
21930|code|LDR             R6, =(off_17DC0 - 0x55B6)|12-78
21932|code|MOV             R8, R1|136-70
21934|code|LDR             R5, =(off_17DBC - 0x55BC)|12-77
21936|code|MOV             R9, R2|145-70
21938|code|ADD             R6, PC; off_17DC0|126-68
21940|code|BLX             .init_proc|251-247-116-236
21944|code|ADD             R5, PC; off_17DBC|125-68
21946|code|SUBS            R6, R6, R5|118-27
21948|code|ASRS            R6, R6, #2|182-16
21950|code|BEQ             locret_55D6|10-208
21952|code|SUBS            R5, #4|4-61
21954|code|MOVS            R4, #0|0-36
21956|code|ADDS            R4, #1|1-52
21958|code|LDR.W           R3, [R5,#4]!|85-248-4-63
21962|code|MOV             R0, R7|56-70
21964|code|MOV             R1, R8|65-70
21966|code|MOV             R2, R9|74-70
21968|code|BLX             R3|152-71
21970|code|CMP             R4, R6|180-66
21972|code|BNE             loc_55C4|246-209
21974|code|POP.W           {R3-R9,PC}|189-232-248-131
21978|data|ALIGN 4|0-191
21980|data|DCD off_17DC0 - 0x55B6|10-40-1-0
21984|data|DCD off_17DBC - 0x55BC|0-40-1-0
21988|code|BX              LR|112-71
21990|data|ALIGN 4|0-191
21992|code|PUSH            {R3,LR}; _fini|8-64-45-233
21996|code|POP             {R3,PC}|8-128-189-232
28356|data|ALIGN 8|0-0-0-0
97724|data|DCD sub_2DF0+1|241-45-0-0
97728|data|DCD sub_2DB0+1|177-45-0-0
97732|data|DCD 0|0-0-0-0
97736|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
97744|data|Elf32_Dyn <1, <0xF9>>; DT_NEEDED libpthread.so.0|1-0-0-0-249-0-0-0
97752|data|Elf32_Dyn <1, <0x249>>; DT_NEEDED libc.so.6|1-0-0-0-73-2-0-0
97760|data|Elf32_Dyn <1, <0x364>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-100-3-0-0
97768|data|Elf32_Dyn <0xC, <0xEA0>>; DT_INIT|12-0-0-0-160-14-0-0
97776|data|Elf32_Dyn <0xD, <0x55E8>>; DT_FINI|13-0-0-0-232-85-0-0
97784|data|Elf32_Dyn <0x19, <0x17DBC>>; DT_INIT_ARRAY|25-0-0-0-188-125-1-0
97792|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
97800|data|Elf32_Dyn <0x1A, <0x17DC0>>; DT_FINI_ARRAY|26-0-0-0-192-125-1-0
97808|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
97816|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
97824|data|Elf32_Dyn <5, <0x734>>; DT_STRTAB|5-0-0-0-52-7-0-0
97832|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
97840|data|Elf32_Dyn <0xA, <0x405>>; DT_STRSZ|10-0-0-0-5-4-0-0
97848|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
97856|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
97864|data|Elf32_Dyn <3, <0x17ED8>>; DT_PLTGOT|3-0-0-0-216-126-1-0
97872|data|Elf32_Dyn <2, <0x1E8>>; DT_PLTRELSZ|2-0-0-0-232-1-0-0
97880|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
97888|data|Elf32_Dyn <0x17, <0xCB8>>; DT_JMPREL|23-0-0-0-184-12-0-0
97896|data|Elf32_Dyn <0x11, <0xC50>>; DT_REL|17-0-0-0-80-12-0-0
97904|data|Elf32_Dyn <0x12, <0x68>>; DT_RELSZ|18-0-0-0-104-0-0-0
97912|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
97920|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
97928|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
97936|data|Elf32_Dyn <0x6FFFFFFE, <0xBE0>>; DT_VERNEED|254-255-255-111-224-11-0-0
97944|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
97952|data|Elf32_Dyn <0x6FFFFFF0, <0xB3A>>; DT_VERSYM|240-255-255-111-58-11-0-0
97960|data|Elf32_Dyn <0x6FFFFFFA, <6>>; DT_RELCOUNT|250-255-255-111-6-0-0-0
97968|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
98008|data|DCD stru_17DC8|200-125-1-0
98012|data|DCD 0|0-0-0-0
98016|data|DCD dword_0|0-0-0-0
98020|data|DCD __imp_pthread_mutex_unlock|20-130-1-0
98024|data|DCD __imp_raise|24-130-1-0
98028|data|DCD __imp_sg_print_command|28-130-1-0
98032|data|DCD __imp_pthread_cond_broadcast|32-130-1-0
98036|data|DCD __imp_sg_ll_readcap_10|36-130-1-0
98040|data|DCD __imp_sg_ll_readcap_16|40-130-1-0
98044|data|DCD __imp___pthread_register_cancel|44-130-1-0
98048|data|DCD __imp_strcmp|48-130-1-0
98052|data|DCD __imp___cxa_finalize|52-130-1-0
98056|data|DCD __imp_read|56-130-1-0
98060|data|DCD __imp_free|60-130-1-0
98064|data|DCD __imp_pthread_mutex_lock|64-130-1-0
98068|data|DCD __imp_pthread_mutex_init|72-130-1-0
98072|data|DCD __imp_sigwait|76-130-1-0
98076|data|DCD __imp___stack_chk_fail|80-130-1-0
98080|data|DCD __imp_pthread_cond_init|84-130-1-0
98084|data|DCD __imp_sysconf|88-130-1-0
98088|data|DCD __imp_perror|92-130-1-0
98092|data|DCD __imp_sigaction|96-130-1-0
98096|data|DCD __imp_fwrite|104-130-1-0
98100|data|DCD __imp_ioctl|108-130-1-0
98104|data|DCD __imp_lseek64|112-130-1-0
98108|data|DCD __imp_gettimeofday|116-130-1-0
98112|data|DCD __imp_pthread_sigmask|120-130-1-0
98116|data|DCD __imp_pthread_create|124-130-1-0
98120|data|DCD __imp_open64|128-130-1-0
98124|data|DCD __imp_malloc|132-130-1-0
98128|data|DCD __imp_sigaddset|136-130-1-0
98132|data|DCD __imp___libc_start_main|140-130-1-0
98136|data|DCD __imp___gmon_start__|16-131-1-0
98140|data|DCD __imp_kill|144-130-1-0
98144|data|DCD __imp_getpid|148-130-1-0
98148|data|DCD __imp_exit|152-130-1-0
98152|data|DCD __imp_strlen|156-130-1-0
98156|data|DCD __imp_strchr|160-130-1-0
98160|data|DCD __imp_sg_err_category3|164-130-1-0
98164|data|DCD __imp___open64_2|168-130-1-0
98168|data|DCD __imp___errno_location|172-130-1-0
98172|data|DCD __imp_memset|176-130-1-0
98176|data|DCD __imp___pthread_unregister_cancel|180-130-1-0
98180|data|DCD __imp_strncpy|184-130-1-0
98184|data|DCD __imp_pthread_cancel|188-130-1-0
98188|data|DCD __imp_write|192-130-1-0
98192|data|DCD __imp_sg_get_llnum|196-130-1-0
98196|data|DCD __imp___pthread_unwind_next|200-130-1-0
98200|data|DCD __imp___fprintf_chk|204-130-1-0
98204|data|DCD __imp_sigemptyset|208-130-1-0
98208|data|DCD __imp_pthread_join|212-130-1-0
98212|data|DCD __imp___sigsetjmp|216-130-1-0
98216|data|DCD __imp_fputc|220-130-1-0
98220|data|DCD __imp_safe_strerror|224-130-1-0
98224|data|DCD __imp_pthread_cond_wait|228-130-1-0
98228|data|DCD __imp_sg_get_num|232-130-1-0
98232|data|DCD __imp___xstat64|236-130-1-0
98236|data|DCD __imp_sg_ll_sync_cache_10|240-130-1-0
98240|data|DCD __imp_fputs|244-130-1-0
98244|data|DCD __imp_strncmp|248-130-1-0
98248|data|DCD __imp_abort|252-130-1-0
98252|data|DCD __imp_close|0-131-1-0
98256|data|DCD __imp___snprintf_chk|4-131-1-0
98260|data|DCD __imp_sg_chk_n_print3|8-131-1-0
98264|data|DCD __libc_csu_fini+1|229-85-0-0
98268|data|DCD __imp___cxa_finalize|52-130-1-0
98272|data|DCD _ITM_deregisterTMCloneTable|12-131-1-0
98276|data|DCD __stack_chk_guard|68-130-1-0
98280|data|DCD stderr|100-130-1-0
98284|data|DCD __imp___gmon_start__|16-131-1-0
98288|data|DCD __libc_csu_init+1|165-85-0-0
98292|data|DCD main+1|41-20-0-0
98296|data|DCD _Jv_RegisterClasses|20-131-1-0
98300|data|DCD _ITM_registerTMCloneTable|24-131-1-0
98328|data|% 1; Alternative name is '__bss_start'|255
98329|data|ALIGN 0x10|255-255-255-255-255-255-255
98360|data|% 4|255-255-255-255
98376|data|% 4|255-255-255-255
98380|data|% 4|255-255-255-255
98388|data|% 4|255-255-255-255
98392|data|% 4|255-255-255-255
98396|data|% 4|255-255-255-255
98404|data|% 4|255-255-255-255
98408|data|% 4|255-255-255-255
98412|data|% 4|255-255-255-255
98440|data|% 4|255-255-255-255
98472|data|% 4|255-255-255-255
98488|data|% 4|255-255-255-255
98492|data|% 4|255-255-255-255
98496|data|% 4|255-255-255-255
98500|data|% 4|255-255-255-255
98504|data|% 4|255-255-255-255
98508|data|% 4|255-255-255-255
98516|data|% 4|255-255-255-255
98520|data|% 4|255-255-255-255
98524|data|% 4|255-255-255-255
98552|data|% 4|255-255-255-255
98632|data|% 4|255-255-255-255
98636|data|% 4|255-255-255-255
98640|data|% 4|255-255-255-255
98644|data|% 4|255-255-255-255
98672|data|% 4|255-255-255-255
98676|data|ALIGN 8|255-255-255-255
98680|data|% 4|255-255-255-255
98684|data|% 4|255-255-255-255
98688|data|% 4|255-255-255-255
98820|data|% 4|255-255-255-255
98824|data|% 4|255-255-255-255
