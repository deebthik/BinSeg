address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|37-21-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x3200; SHT file offset|0-50-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x21E8; File offset|232-33-0-0
60|data|DCD unk_21E8; Virtual address|232-33-0-0
64|data|DCD 0x21E8; Physical address|232-33-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x21F4; Size in file image|244-33-0-0
168|data|DCD 0x21F4; Size in memory image|244-33-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E4C; File offset|76-46-0-0
188|data|DCD off_12E4C; Virtual address|76-46-1-0
192|data|DCD 0x12E4C; Physical address|76-46-1-0
196|data|DCD 0x28C; Size in file image|140-2-0-0
200|data|DCD 0x290; Size in memory image|144-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E58; File offset|88-46-0-0
220|data|DCD stru_12E58; Virtual address|88-46-1-0
224|data|DCD 0x12E58; Physical address|88-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E4C; File offset|76-46-0-0
316|data|DCD off_12E4C; Virtual address|76-46-1-0
320|data|DCD 0x12E4C; Physical address|76-46-1-0
324|data|DCD 0x1B4; Size in file image|180-1-0-0
328|data|DCD 0x1B4; Size in memory image|180-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xCB, 0x10, 0xAE, 0x5B, 0xA1, 0xFC, 0xA6, 0x9C, 0xB1; Desc|203-16-174-91-161-252-166-156-177-113-100-217-186-239-175-150-245-203-66-134
436|data|DCD 3|3-0-0-0
440|data|DCD 0x23|35-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x23, 0x27, 0x2C|35-0-0-0-39-0-0-0-44-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_514 - byte_514, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_514 - byte_514, dword_12E54, 0, 3, 0, 0x14>|0-0-0-0-84-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_514, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|135-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aSmpInitiatorCl - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_initiator_close"|195-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_514, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|19-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aDstrhex - byte_514, dword_0, 0, 0x12, 0, 0>; "dStrHex"|168-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aStackChkGuard - byte_514, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|188-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
660|data|Elf32_Sym <aOptind - byte_514, dword_0, 0, 0x11, 0, 0>; "optind"|250-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
676|data|Elf32_Sym <aStackChkFail - byte_514, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|30-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aSmpIsNaa5 - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_is_naa5"|215-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aStderr - byte_514, dword_0, 0, 0x11, 0, 0>; "stderr"|102-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
724|data|Elf32_Sym <aFwrite - byte_514, dword_0, 0, 0x12, 0, 0>; "fwrite"|121-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aGetenv - byte_514, dword_0, 0, 0x12, 0, 0>; "getenv"|88-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aPuts - byte_514, dword_0, 0, 0x12, 0, 0>; "puts"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aLibcStartMain - byte_514, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|150-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aGmonStart - byte_514, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|47-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
804|data|Elf32_Sym <aGetoptLong - byte_514, dword_0, 0, 0x12, 0, 0>; "getopt_long"|109-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aStrchr - byte_514, dword_0, 0, 0x12, 0, 0>; "strchr"|128-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aSmpSendReq - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_send_req"|155-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aIsoc99Sscanf - byte_514, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|1-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aMemset - byte_514, dword_0, 0, 0x12, 0, 0>; "memset"|61-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aPutchar - byte_514, dword_0, 0, 0x12, 0, 0>; "putchar"|47-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aStrncpy - byte_514, dword_0, 0, 0x12, 0, 0>; "strncpy"|17-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aPrintfChk - byte_514, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|237-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aFprintfChk - byte_514, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|68-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aFputc - byte_514, dword_0, 0, 0x12, 0, 0>; "fputc"|82-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aJvRegisterclas - byte_514, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|62-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
980|data|Elf32_Sym <aSmpGetLlnum - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_get_llnum"|120-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aItmRegistertmc - byte_514, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|82-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1012|data|Elf32_Sym <aSmpGetFuncResS - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_get_func_res_str"|134-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aSmpGetNum - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_get_num"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aSmpInitiatorOp - byte_514, dword_0, 0, 0x12, 0, 0>; "smp_initiator_open"|176-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aOptarg - byte_514, dword_0, 0, 0x11, 0, 0>; "optarg"|95-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1076|data|Elf32_Sym <aAbort - byte_514, dword_0, 0, 0x12, 0, 0>; "abort"|55-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aBssEnd+1 - byte_514, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|253-1-0-0-220-48-1-0-0-0-0-0-16-0-24-0
1108|data|Elf32_Sym <aEdata - byte_514, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|219-1-0-0-216-48-1-0-0-0-0-0-16-0-23-0
1124|data|Elf32_Sym <aDataStart - byte_514, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|206-1-0-0-0-48-1-0-0-0-0-0-16-0-23-0
1140|data|Elf32_Sym <aEnd_0 - byte_514, _end, 0, 0x10, 0, 0x18>; "_end"|16-2-0-0-220-48-1-0-0-0-0-0-16-0-24-0
1156|data|Elf32_Sym <aBssEnd - byte_514, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|252-1-0-0-220-48-1-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aLibcCsuInit - byte_514, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|37-2-0-0-97-22-0-0-64-0-0-0-18-0-13-0
1188|data|Elf32_Sym <aBssStart - byte_514, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|226-1-0-0-216-48-1-0-0-0-0-0-16-0-24-0
1204|data|Elf32_Sym <aLibcStartMain+0xD - byte_514, main+1, 0xA28, 0x12, 0, 0xD>; "main"|163-1-0-0-253-10-0-0-40-10-0-0-18-0-13-0
1220|data|Elf32_Sym <aLibcCsuInit+0xA - byte_514, .init_proc, 0, 0x12, 0, 0xB>; "_init"|47-2-0-0-176-9-0-0-0-0-0-0-18-0-11-0
1236|data|Elf32_Sym <aLibcCsuFini - byte_514, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|21-2-0-0-161-22-0-0-2-0-0-0-18-0-13-0
1252|data|Elf32_Sym <aBssStart_0 - byte_514, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|238-1-0-0-216-48-1-0-0-0-0-0-16-0-24-0
1268|data|Elf32_Sym <aLibcCsuFini+0xA - byte_514, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|31-2-0-0-164-22-0-0-0-0-0-0-18-0-14-0
1284|data|Elf32_Sym <aEnd - byte_514, _end, 0, 0x10, 0, 0x18>; "__end__"|8-2-0-0-220-48-1-0-0-0-0-0-16-0-24-0
1300|data|DCB 0|0
1301|data|DCB "libsmputils1.so.1",0|108-105-98-115-109-112-117-116-105-108-115-49-46-115-111-46-49-0
1319|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1347|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1362|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1382|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1408|data|DCB "smp_get_num",0|115-109-112-95-103-101-116-95-110-117-109-0
1420|data|DCB "smp_get_llnum",0|115-109-112-95-103-101-116-95-108-108-110-117-109-0
1434|data|DCB "smp_get_func_res_str",0|115-109-112-95-103-101-116-95-102-117-110-99-95-114-101-115-95-115-116-114-0
1455|data|DCB "smp_send_req",0|115-109-112-95-115-101-110-100-95-114-101-113-0
1468|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1476|data|DCB "smp_initiator_open",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-111-112-101-110-0
1495|data|DCB "smp_initiator_close",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-99-108-111-115-101-0
1515|data|DCB "smp_is_naa5",0|115-109-112-95-105-115-95-110-97-97-53-0
1527|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1537|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1550|data|DCB "optind",0|111-112-116-105-110-100-0
1557|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1573|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1581|data|DCB "puts",0|112-117-116-115-0
1586|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1603|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1611|data|DCB "abort",0|97-98-111-114-116-0
1617|data|DCB "memset",0|109-101-109-115-101-116-0
1624|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1638|data|DCB "fputc",0|102-112-117-116-99-0
1644|data|DCB "getenv",0|103-101-116-101-110-118-0
1651|data|DCB "optarg",0|111-112-116-97-114-103-0
1658|data|DCB "stderr",0|115-116-100-101-114-114-0
1665|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1677|data|DCB "fwrite",0|102-119-114-105-116-101-0
1684|data|DCB "strchr",0|115-116-114-99-104-114-0
1691|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1706|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1724|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1744|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1762|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1775|data|DCB "_edata",0|95-101-100-97-116-97-0
1782|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1794|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1808|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1820|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1828|data|DCB "_end",0|95-101-110-100-0
1833|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1849|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1865|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1875|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
1885|data|DCB 0|0
1886|data|DCW 0|0-0
1888|data|DCW 0|0-0
1890|data|DCW 0|0-0
1892|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1894|data|DCW 0; local  symbol: smp_initiator_close|0-0
1896|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1898|data|DCW 0; local  symbol: dStrHex|0-0
1900|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1902|data|DCW 2; optind@@GLIBC_2.4|2-0
1904|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1906|data|DCW 0; local  symbol: smp_is_naa5|0-0
1908|data|DCW 2; stderr@@GLIBC_2.4|2-0
1910|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1912|data|DCW 2; getenv@@GLIBC_2.4|2-0
1914|data|DCW 2; puts@@GLIBC_2.4|2-0
1916|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1918|data|DCW 0; local  symbol: __gmon_start__|0-0
1920|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1922|data|DCW 2; strchr@@GLIBC_2.4|2-0
1924|data|DCW 0; local  symbol: smp_send_req|0-0
1926|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
1928|data|DCW 2; memset@@GLIBC_2.4|2-0
1930|data|DCW 2; putchar@@GLIBC_2.4|2-0
1932|data|DCW 2; strncpy@@GLIBC_2.4|2-0
1934|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
1936|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1938|data|DCW 2; fputc@@GLIBC_2.4|2-0
1940|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1942|data|DCW 0; local  symbol: smp_get_llnum|0-0
1944|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1946|data|DCW 0; local  symbol: smp_get_func_res_str|0-0
1948|data|DCW 0; local  symbol: smp_get_num|0-0
1950|data|DCW 0; local  symbol: smp_initiator_open|0-0
1952|data|DCW 2; optarg@@GLIBC_2.4|2-0
1954|data|DCW 2; abort@@GLIBC_2.4|2-0
1956|data|DCW 1; global symbol: _bss_end__|1-0
1958|data|DCW 1; global symbol: _edata|1-0
1960|data|DCW 1; global symbol: __data_start|1-0
1962|data|DCW 1; global symbol: _end|1-0
1964|data|DCW 1; global symbol: __bss_end__|1-0
1966|data|DCW 1; global symbol: __libc_csu_init|1-0
1968|data|DCW 1; global symbol: __bss_start|1-0
1970|data|DCW 1; global symbol: main|1-0
1972|data|DCW 1; global symbol: _init|1-0
1974|data|DCW 1; global symbol: __libc_csu_fini|1-0
1976|data|DCW 1; global symbol: __bss_start__|1-0
1978|data|DCW 1; global symbol: _fini|1-0
1980|data|DCW 1; global symbol: __end__|1-0
1982|data|DCW 0|0-0
1984|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_514, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-168-1-0-0-16-0-0-0-32-0-0-0
2000|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_514, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-53-2-0-0-0-0-0-0
2016|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_514, 0x10, 0>; "libc.so.6"|1-0-2-0-227-0-0-0-16-0-0-0-0-0-0-0
2032|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_514, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-63-2-0-0-16-0-0-0
2048|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_514, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-53-2-0-0-0-0-0-0
2064|data|Elf32_Rel <0x12E4C, 0x17>; R_ARM_RELATIVE|76-46-1-0-23-0-0-0
2072|data|Elf32_Rel <0x12E50, 0x17>; R_ARM_RELATIVE|80-46-1-0-23-0-0-0
2080|data|Elf32_Rel <0x12FD0, 0x17>; R_ARM_RELATIVE|208-47-1-0-23-0-0-0
2088|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2096|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2104|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2112|data|Elf32_Rel <0x13008, 0x17>; R_ARM_RELATIVE|8-48-1-0-23-0-0-0
2120|data|Elf32_Rel <0x13018, 0x17>; R_ARM_RELATIVE|24-48-1-0-23-0-0-0
2128|data|Elf32_Rel <0x13028, 0x17>; R_ARM_RELATIVE|40-48-1-0-23-0-0-0
2136|data|Elf32_Rel <0x13038, 0x17>; R_ARM_RELATIVE|56-48-1-0-23-0-0-0
2144|data|Elf32_Rel <0x13048, 0x17>; R_ARM_RELATIVE|72-48-1-0-23-0-0-0
2152|data|Elf32_Rel <0x13058, 0x17>; R_ARM_RELATIVE|88-48-1-0-23-0-0-0
2160|data|Elf32_Rel <0x13068, 0x17>; R_ARM_RELATIVE|104-48-1-0-23-0-0-0
2168|data|Elf32_Rel <0x13078, 0x17>; R_ARM_RELATIVE|120-48-1-0-23-0-0-0
2176|data|Elf32_Rel <0x13088, 0x17>; R_ARM_RELATIVE|136-48-1-0-23-0-0-0
2184|data|Elf32_Rel <0x13098, 0x17>; R_ARM_RELATIVE|152-48-1-0-23-0-0-0
2192|data|Elf32_Rel <0x130A8, 0x17>; R_ARM_RELATIVE|168-48-1-0-23-0-0-0
2200|data|Elf32_Rel <0x130B8, 0x17>; R_ARM_RELATIVE|184-48-1-0-23-0-0-0
2208|data|Elf32_Rel <0x12FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-47-1-0-21-3-0-0
2216|data|Elf32_Rel <0x12FD8, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-47-1-0-21-5-0-0
2224|data|Elf32_Rel <0x12FDC, 0x715>; R_ARM_GLOB_DAT __stack_chk_guard|220-47-1-0-21-7-0-0
2232|data|Elf32_Rel <0x12FE0, 0x815>; R_ARM_GLOB_DAT optind|224-47-1-0-21-8-0-0
2240|data|Elf32_Rel <0x12FE4, 0xB15>; R_ARM_GLOB_DAT stderr|228-47-1-0-21-11-0-0
2248|data|Elf32_Rel <0x12FE8, 0x1015>; R_ARM_GLOB_DAT __gmon_start__|232-47-1-0-21-16-0-0
2256|data|Elf32_Rel <0x12FF4, 0x1B15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-27-0-0
2264|data|Elf32_Rel <0x12FF8, 0x1D15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-29-0-0
2272|data|Elf32_Rel <0x12FFC, 0x2115>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-33-0-0
2280|data|Elf32_Rel <0x12F6C, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|108-47-1-0-22-3-0-0
2288|data|Elf32_Rel <0x12F70, 0x416>; R_ARM_JUMP_SLOT smp_initiator_close|112-47-1-0-22-4-0-0
2296|data|Elf32_Rel <0x12F74, 0x616>; R_ARM_JUMP_SLOT dStrHex|116-47-1-0-22-6-0-0
2304|data|Elf32_Rel <0x12F78, 0x916>; R_ARM_JUMP_SLOT __stack_chk_fail|120-47-1-0-22-9-0-0
2312|data|Elf32_Rel <0x12F7C, 0xA16>; R_ARM_JUMP_SLOT smp_is_naa5|124-47-1-0-22-10-0-0
2320|data|Elf32_Rel <0x12F80, 0xC16>; R_ARM_JUMP_SLOT fwrite|128-47-1-0-22-12-0-0
2328|data|Elf32_Rel <0x12F84, 0xD16>; R_ARM_JUMP_SLOT getenv|132-47-1-0-22-13-0-0
2336|data|Elf32_Rel <0x12F88, 0xE16>; R_ARM_JUMP_SLOT puts|136-47-1-0-22-14-0-0
2344|data|Elf32_Rel <0x12F8C, 0xF16>; R_ARM_JUMP_SLOT __libc_start_main|140-47-1-0-22-15-0-0
2352|data|Elf32_Rel <0x12F90, 0x1016>; R_ARM_JUMP_SLOT __gmon_start__|144-47-1-0-22-16-0-0
2360|data|Elf32_Rel <0x12F94, 0x1116>; R_ARM_JUMP_SLOT getopt_long|148-47-1-0-22-17-0-0
2368|data|Elf32_Rel <0x12F98, 0x1216>; R_ARM_JUMP_SLOT strchr|152-47-1-0-22-18-0-0
2376|data|Elf32_Rel <0x12F9C, 0x1316>; R_ARM_JUMP_SLOT smp_send_req|156-47-1-0-22-19-0-0
2384|data|Elf32_Rel <0x12FA0, 0x1416>; R_ARM_JUMP_SLOT __isoc99_sscanf|160-47-1-0-22-20-0-0
2392|data|Elf32_Rel <0x12FA4, 0x1516>; R_ARM_JUMP_SLOT memset|164-47-1-0-22-21-0-0
2400|data|Elf32_Rel <0x12FA8, 0x1616>; R_ARM_JUMP_SLOT putchar|168-47-1-0-22-22-0-0
2408|data|Elf32_Rel <0x12FAC, 0x1716>; R_ARM_JUMP_SLOT strncpy|172-47-1-0-22-23-0-0
2416|data|Elf32_Rel <0x12FB0, 0x1816>; R_ARM_JUMP_SLOT __printf_chk|176-47-1-0-22-24-0-0
2424|data|Elf32_Rel <0x12FB4, 0x1916>; R_ARM_JUMP_SLOT __fprintf_chk|180-47-1-0-22-25-0-0
2432|data|Elf32_Rel <0x12FB8, 0x1A16>; R_ARM_JUMP_SLOT fputc|184-47-1-0-22-26-0-0
2440|data|Elf32_Rel <0x12FBC, 0x1C16>; R_ARM_JUMP_SLOT smp_get_llnum|188-47-1-0-22-28-0-0
2448|data|Elf32_Rel <0x12FC0, 0x1E16>; R_ARM_JUMP_SLOT smp_get_func_res_str|192-47-1-0-22-30-0-0
2456|data|Elf32_Rel <0x12FC4, 0x1F16>; R_ARM_JUMP_SLOT smp_get_num|196-47-1-0-22-31-0-0
2464|data|Elf32_Rel <0x12FC8, 0x2016>; R_ARM_JUMP_SLOT smp_initiator_open|200-47-1-0-22-32-0-0
2472|data|Elf32_Rel <0x12FCC, 0x2216>; R_ARM_JUMP_SLOT abort|204-47-1-0-22-34-0-0
2480|code|PUSH            {R3,LR}; _init|8-64-45-233
2484|code|BL              sub_156C|236-2-0-235
2488|code|POP             {R3,PC}|8-128-189-232
2492|code|PUSH            {LR}|4-224-45-229
2496|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x9CC)|4-224-159-229
2500|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2504|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2508|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9CC|148-37-1-0
2512|code|ADR             R12, 0x9D8|0-198-143-226
2516|code|ADD             R12, R12, #0x12000|18-202-140-226
2520|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x129D8)]!; __imp___cxa_finalize|148-245-188-229
2524|code|ADR             R12, 0x9E4|0-198-143-226
2528|code|ADD             R12, R12, #0x12000|18-202-140-226
2532|code|LDR             PC, [R12,#(smp_initiator_close_ptr - 0x129E4)]!; __imp_smp_initiator_close|140-245-188-229
2536|code|ADR             R12, 0x9F0|0-198-143-226
2540|code|ADD             R12, R12, #0x12000|18-202-140-226
2544|code|LDR             PC, [R12,#(dStrHex_ptr - 0x129F0)]!; __imp_dStrHex|132-245-188-229
2548|code|ADR             R12, 0x9FC|0-198-143-226
2552|code|ADD             R12, R12, #0x12000|18-202-140-226
2556|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x129FC)]!; __imp___stack_chk_fail|124-245-188-229
2560|code|ADR             R12, 0xA08|0-198-143-226
2564|code|ADD             R12, R12, #0x12000|18-202-140-226
2568|code|LDR             PC, [R12,#(smp_is_naa5_ptr - 0x12A08)]!; __imp_smp_is_naa5|116-245-188-229
2572|code|ADR             R12, 0xA14|0-198-143-226
2576|code|ADD             R12, R12, #0x12000|18-202-140-226
2580|code|LDR             PC, [R12,#(fwrite_ptr - 0x12A14)]!; __imp_fwrite|108-245-188-229
2584|code|ADR             R12, 0xA20|0-198-143-226
2588|code|ADD             R12, R12, #0x12000|18-202-140-226
2592|code|LDR             PC, [R12,#(getenv_ptr - 0x12A20)]!; __imp_getenv|100-245-188-229
2596|code|ADR             R12, 0xA2C|0-198-143-226
2600|code|ADD             R12, R12, #0x12000|18-202-140-226
2604|code|LDR             PC, [R12,#(puts_ptr - 0x12A2C)]!; __imp_puts|92-245-188-229
2608|code|ADR             R12, 0xA38|0-198-143-226
2612|code|ADD             R12, R12, #0x12000|18-202-140-226
2616|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12A38)]!; __imp___libc_start_main|84-245-188-229
2620|code|ADR             R12, 0xA44|0-198-143-226
2624|code|ADD             R12, R12, #0x12000|18-202-140-226
2628|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12A44)]!; __imp___gmon_start__|76-245-188-229
2632|code|ADR             R12, 0xA50|0-198-143-226
2636|code|ADD             R12, R12, #0x12000|18-202-140-226
2640|code|LDR             PC, [R12,#(getopt_long_ptr - 0x12A50)]!; __imp_getopt_long|68-245-188-229
2644|code|ADR             R12, 0xA5C|0-198-143-226
2648|code|ADD             R12, R12, #0x12000|18-202-140-226
2652|code|LDR             PC, [R12,#(strchr_ptr - 0x12A5C)]!; __imp_strchr|60-245-188-229
2656|code|ADR             R12, 0xA68|0-198-143-226
2660|code|ADD             R12, R12, #0x12000|18-202-140-226
2664|code|LDR             PC, [R12,#(smp_send_req_ptr - 0x12A68)]!; __imp_smp_send_req|52-245-188-229
2668|code|ADR             R12, 0xA74|0-198-143-226
2672|code|ADD             R12, R12, #0x12000|18-202-140-226
2676|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x12A74)]!; __imp___isoc99_sscanf|44-245-188-229
2680|code|ADR             R12, 0xA80|0-198-143-226
2684|code|ADD             R12, R12, #0x12000|18-202-140-226
2688|code|LDR             PC, [R12,#(memset_ptr - 0x12A80)]!; __imp_memset|36-245-188-229
2692|code|ADR             R12, 0xA8C|0-198-143-226
2696|code|ADD             R12, R12, #0x12000|18-202-140-226
2700|code|LDR             PC, [R12,#(putchar_ptr - 0x12A8C)]!; __imp_putchar|28-245-188-229
2704|code|ADR             R12, 0xA98|0-198-143-226
2708|code|ADD             R12, R12, #0x12000|18-202-140-226
2712|code|LDR             PC, [R12,#(strncpy_ptr - 0x12A98)]!; __imp_strncpy|20-245-188-229
2716|code|ADR             R12, 0xAA4|0-198-143-226
2720|code|ADD             R12, R12, #0x12000|18-202-140-226
2724|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x12AA4)]!; __imp___printf_chk|12-245-188-229
2728|code|ADR             R12, 0xAB0|0-198-143-226
2732|code|ADD             R12, R12, #0x12000|18-202-140-226
2736|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x12AB0)]!; __imp___fprintf_chk|4-245-188-229
2740|code|ADR             R12, 0xABC|0-198-143-226
2744|code|ADD             R12, R12, #0x12000|18-202-140-226
2748|code|LDR             PC, [R12,#(fputc_ptr - 0x12ABC)]!; __imp_fputc|252-244-188-229
2752|code|ADR             R12, 0xAC8|0-198-143-226
2756|code|ADD             R12, R12, #0x12000|18-202-140-226
2760|code|LDR             PC, [R12,#(smp_get_llnum_ptr - 0x12AC8)]!; __imp_smp_get_llnum|244-244-188-229
2764|code|ADR             R12, 0xAD4|0-198-143-226
2768|code|ADD             R12, R12, #0x12000|18-202-140-226
2772|code|LDR             PC, [R12,#(smp_get_func_res_str_ptr - 0x12AD4)]!; __imp_smp_get_func_res_str|236-244-188-229
2776|code|ADR             R12, 0xAE0|0-198-143-226
2780|code|ADD             R12, R12, #0x12000|18-202-140-226
2784|code|LDR             PC, [R12,#(smp_get_num_ptr - 0x12AE0)]!; __imp_smp_get_num|228-244-188-229
2788|code|ADR             R12, 0xAEC|0-198-143-226
2792|code|ADD             R12, R12, #0x12000|18-202-140-226
2796|code|LDR             PC, [R12,#(smp_initiator_open_ptr - 0x12AEC)]!; __imp_smp_initiator_open|220-244-188-229
2800|code|ADR             R12, 0xAF8|0-198-143-226
2804|code|ADD             R12, R12, #0x12000|18-202-140-226
2808|code|LDR             PC, [R12,#(abort_ptr - 0x12AF8)]!; __imp_abort|212-244-188-229
2812|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2816|code|SUBW            SP, SP, #0x924|173-246-36-29
2820|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xB14)|223-248-16-105
2824|code|ADD             R4, SP, #0x948+var_8F4|21-172
2826|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x12F60)|223-248-16-57
2830|code|MOV             R7, R0|7-70
2832|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
2834|code|LDR.W           R2, =(off_16B0 - 0xB1E)|223-248-12-41
2838|code|STR             R4, [SP,#0x948+var_908]|16-148
2840|code|ADD             R0, SP, #0x948+var_630|198-168
2842|code|ADD             R2, PC; off_16B0|122-68
2844|code|STR             R0, [SP,#0x948+s]|5-144
2846|code|MOV             R8, R1|136-70
2848|code|ADD             R1, SP, #0x948+var_7BC|99-169
2850|code|STR             R1, [SP,#0x948+var_904]|17-145
2852|code|MOV.W           R9, #0|79-240-0-9
2856|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
2858|code|MOV             R12, R1|140-70
2860|code|LDR             R0, [R2]|16-104
2862|code|ADD             R5, SP, #0x948+var_730|134-173
2864|code|LDR             R1, [R2,#(dword_16B4 - 0x16B0)]|81-104
2866|code|MOV.W           R10, #0|79-240-0-10
2870|code|LDR             R2, [R2,#(dword_16B8 - 0x16B0)]|146-104
2872|code|MOV.W           R11, #0|79-240-0-11
2876|code|LDR.W           LR, [R3]|211-248-0-224
2880|code|ADD             R4, SP, #0x948+var_8F0|22-172
2882|code|STR             R3, [SP,#0x948+var_92C]|7-147
2884|code|STM.W           R12!, {R0-R2}|172-232-7-0
2888|code|MOV             R1, R9; c|73-70
2890|code|MOV.W           R2, #0x200; n|79-244-0-114
2894|code|LDR             R0, [SP,#0x948+s]; s|5-152
2896|code|STRD.W          R10, R11, [SP,#0x948+var_918]|205-233-12-171
2900|code|STR             R5, [SP,#0x948+ptr]|6-149
2902|code|MOV             R5, R9|77-70
2904|code|STR.W           R9, [SP,#0x948+var_8F4]|205-248-84-144
2908|code|STR.W           LR, [SP,#0x948+var_2C]|205-248-28-233
2912|code|BLX             memset|255-247-138-239
2916|code|LDR.W           R11, [SP,#0x948+ptr]|221-248-24-176
2920|code|MOV             R1, R9; c|73-70
2922|code|LDR.W           R10, =(aCEhhiIPRsTVv - 0xB7C); "c:EhHi:I:p:rs:t:vV"|223-248-184-168
2926|code|MOV.W           R2, #0x100; n|79-244-128-114
2930|code|LDR.W           R9, =(off_13008 - 0xB82); "count"|223-248-180-152
2934|code|MOV             R0, R11; s|88-70
2936|code|ADD             R10, PC; "c:EhHi:I:p:rs:t:vV"|250-68
2938|code|BLX             memset|255-247-126-239
2942|code|ADD             R9, PC; off_13008|249-68
2944|code|LDR.W           R3, =(aPhyNOptionNotN - 0xB8A); "'--phy=<n>' option not needed so ignore"...|223-248-168-56
2948|code|STR             R5, [SP,#0x948+var_90C]|15-149
2950|code|ADD             R3, PC; "'--phy=<n>' option not needed so ignore"...|123-68
2952|code|STR             R5, [SP,#0x948+var_920]|10-149
2954|code|STR             R3, [SP,#0x948+ptr]|6-147
2956|code|MOVS            R3, #1|1-35
2958|code|STR             R5, [SP,#0x948+var_910]|14-149
2960|code|STR             R5, [SP,#0x948+var_924]|9-149
2962|code|STR             R5, [SP,#0x948+var_928]|8-149
2964|code|STR             R3, [SP,#0x948+var_91C]|11-147
2966|code|STR             R4, [SP,#0x948+longind]; longind|0-148
2968|code|MOV             R1, R8; argv|65-70
2970|code|MOV.W           LR, #0|79-240-0-14
2974|code|MOV             R0, R7; argc|56-70
2976|code|MOV             R2, R10; shortopts|82-70
2978|code|MOV             R3, R9; longopts|75-70
2980|code|STR.W           LR, [R4]|196-248-0-224
2984|code|BLX             getopt_long|255-247-78-239
2988|code|ADDS            R1, R0, #1|65-28
2990|code|BEQ.W           loc_D78|0-240-227-128
2994|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
2998|code|CMP             R3, #0x37|55-43
3000|code|BHI.W           def_BBC; jumptable 00000BBC default case, cases 64-68,70,71,74-85,87-98,100-103,106-111,113,117|0-242-199-128
3004|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3008|data|DCB 0xB6; jump table for switch statement|182
3009|data|DCB 0xC5|197
3010|data|DCB 0xC5|197
3011|data|DCB 0xC5|197
3012|data|DCB 0xC5|197
3013|data|DCB 0xC5|197
3014|data|DCB 0xB2|178
3015|data|DCB 0xC5|197
3016|data|DCB 0xC5|197
3017|data|DCB 0xAE|174
3018|data|DCB 0xA1|161
3019|data|DCB 0xC5|197
3020|data|DCB 0xC5|197
3021|data|DCB 0xC5|197
3022|data|DCB 0xC5|197
3023|data|DCB 0xC5|197
3024|data|DCB 0xC5|197
3025|data|DCB 0xC5|197
3026|data|DCB 0xC5|197
3027|data|DCB 0xC5|197
3028|data|DCB 0xC5|197
3029|data|DCB 0xC5|197
3030|data|DCB 0xC5|197
3031|data|DCB 0x86|134
3032|data|DCB 0xC5|197
3033|data|DCB 0xC5|197
3034|data|DCB 0xC5|197
3035|data|DCB 0xC5|197
3036|data|DCB 0xC5|197
3037|data|DCB 0xC5|197
3038|data|DCB 0xC5|197
3039|data|DCB 0xC5|197
3040|data|DCB 0xC5|197
3041|data|DCB 0xC5|197
3042|data|DCB 0xC5|197
3043|data|DCB 0xC5|197
3044|data|DCB 0x74|116
3045|data|DCB 0xC5|197
3046|data|DCB 0xC5|197
3047|data|DCB 0xC5|197
3048|data|DCB 0xC5|197
3049|data|DCB 0xB6|182
3050|data|DCB 0x5D|93
3051|data|DCB 0xC5|197
3052|data|DCB 0xC5|197
3053|data|DCB 0xC5|197
3054|data|DCB 0xC5|197
3055|data|DCB 0xC5|197
3056|data|DCB 0xC5|197
3057|data|DCB 0x48|72
3058|data|DCB 0xC5|197
3059|data|DCB 0x44|68
3060|data|DCB 0x35|53
3061|data|DCB 0x1E|30
3062|data|DCB 0xC5|197
3063|data|DCB 0x1C|28
3064|code|ADDS            R5, #1; jumptable 00000BBC case 118|1-53
3066|code|B               loc_B96|204-231
3068|code|LDR.W           R3, =(optarg_ptr - 0x12F60); jumptable 00000BBC case 116|223-248-48-56
3072|code|LDR             R3, [R6,R3]; optarg|243-88
3074|code|LDR             R0, [R3]|24-104
3076|code|BLX             smp_get_num|255-247-104-239
3080|code|CMP             R0, #0xFF|255-40
3082|code|STR             R0, [SP,#0x948+var_90C]|15-144
3084|code|BLS             loc_B96|195-217
3086|code|LDR.W           R3, =(stderr_ptr - 0x12F60)|223-248-36-56
3090|code|MOVS            R1, #1; size|1-33
3092|code|LDR.W           R0, =(aBadArgumentToT - 0xC24); "bad argument to '--type'\n"|223-248-32-8
3096|code|MOVS            R2, #0x19; n|25-34
3098|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
3102|code|LDR             R3, [R6,R3]; stderr|243-88
3104|code|ADD             R0, PC; "bad argument to '--type'\n"|120-68
3106|code|LDR             R3, [R3]; s|27-104
3108|code|BLX             fwrite|255-247-242-238
3112|code|B               loc_CEA|95-224
3114|code|LDR.W           R3, =(optarg_ptr - 0x12F60); jumptable 00000BBC case 115|223-248-4-56
3118|code|LDR             R3, [R6,R3]; optarg|243-88
3120|code|LDR             R0, [R3]|24-104
3122|code|BLX             smp_get_llnum|255-247-70-239
3126|code|ADDS            R2, R1, #1|74-28
3128|code|IT EQ|8-191
3130|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3134|code|BEQ.W           loc_1146|0-240-130-130
3138|code|STRD.W          R0, R1, [SP,#0x948+var_918]|205-233-12-1
3142|code|B               loc_B96|166-231
3144|code|LDR             R3, [SP,#0x948+var_920]; jumptable 00000BBC case 114|10-155
3146|code|ADDS            R3, #1|1-51
3148|code|STR             R3, [SP,#0x948+var_920]|10-147
3150|code|B               loc_B96|162-231
3152|code|LDR.W           R3, =(optarg_ptr - 0x12F60); jumptable 00000BBC case 112|223-248-220-55
3156|code|LDR             R3, [R6,R3]; optarg|243-88
3158|code|LDR             R0, [R3]|24-104
3160|code|BLX             smp_get_num|255-247-62-239
3164|code|CMP             R0, #0xFE|254-40
3166|code|BHI.W           loc_115E|0-242-126-130
3170|code|CMP             R5, #0|0-45
3172|code|BEQ             loc_B96|151-208
3174|code|LDR.W           R3, =(stderr_ptr - 0x12F60)|223-248-204-55
3178|code|MOVS            R1, #1; size|1-33
3180|code|LDR             R0, [SP,#0x948+ptr]; ptr|6-152
3182|code|MOVS            R2, #0x29 ; ')'; n|41-34
3184|code|LDR             R3, [R6,R3]; stderr|243-88
3186|code|LDR             R3, [R3]; s|27-104
3188|code|BLX             fwrite|255-247-202-238
3192|code|B               loc_B96|141-231
3194|code|LDR.W           R3, =(optarg_ptr - 0x12F60); jumptable 00000BBC case 105|223-248-180-55
3198|code|LDR             R3, [R6,R3]; optarg|243-88
3200|code|LDR             R0, [R3]|24-104
3202|code|BLX             smp_get_num|255-247-42-239
3206|code|CMP             R0, #0xFF|255-40
3208|code|STR             R0, [SP,#0x948+var_910]|14-144
3210|code|BLS             loc_B96|132-217
3212|code|LDR.W           R0, =(aBadArgumentToI - 0xC9A); "bad argument to '--index'\n"|223-248-172-7
3216|code|MOVS            R1, #1; size|1-33
3218|code|LDR.W           R3, =(stderr_ptr - 0x12F60)|223-248-160-55
3222|code|ADD             R0, PC; "bad argument to '--index'\n"|120-68
3224|code|LDR             R3, [R6,R3]; stderr|243-88
3226|code|MOVS            R2, #0x1A; n|26-34
3228|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
3232|code|LDR             R3, [R3]; s|27-104
3234|code|BLX             fwrite|255-247-180-238
3238|code|B               loc_CEA|32-224
3240|code|LDR.W           R3, =(optarg_ptr - 0x12F60); jumptable 00000BBC case 99|223-248-132-55
3244|code|LDR             R3, [R6,R3]; optarg|243-88
3246|code|LDR             R0, [R3]|24-104
3248|code|BLX             smp_get_num|255-247-18-239
3252|code|SUBS            R3, R0, #1|67-30
3254|code|STR             R0, [SP,#0x948+var_91C]|11-144
3256|code|CMP             R3, #0xFE|254-43
3258|code|BLS.W           loc_B96|127-246-108-175
3262|code|LDR.W           R0, =(aBadArgumentToC - 0xCCC); "bad argument to '--count'\n"|223-248-128-7
3266|code|MOVS            R1, #1|1-33
3268|code|LDR.W           R3, =(stderr_ptr - 0x12F60)|223-248-108-55
3272|code|ADD             R0, PC; "bad argument to '--count'\n"|120-68
3274|code|B               loc_C98|229-231
3276|code|LDR.W           R0, =(stderr_ptr - 0x12F60); jumptable 00000BBC case 86|223-248-100-7
3280|code|MOVS            R1, #1|1-33
3282|code|LDR.W           R2, =(aVersionS - 0xCE4); "version: %s\n"|223-248-112-39
3286|code|MOV.W           R8, #0|79-240-0-8
3290|code|LDR.W           R3, =(a11020130604 - 0xCE6); "1.10 20130604"|223-248-108-55
3294|code|LDR             R0, [R6,R0]; stderr|48-88
3296|code|ADD             R2, PC; "version: %s\n"|122-68
3298|code|ADD             R3, PC; "1.10 20130604"|123-68
3300|code|LDR             R0, [R0]|0-104
3302|code|BLX             __fprintf_chk|255-247-224-238
3306|code|LDR             R3, [SP,#0x948+var_92C]|7-155
3308|code|MOV             R0, R8|64-70
3310|code|LDR.W           R2, [SP,#0x948+var_2C]|221-248-28-41
3314|code|LDR             R3, [R3]|27-104
3316|code|CMP             R2, R3|154-66
3318|code|BNE.W           loc_12DA|64-240-240-130
3322|code|ADDW            SP, SP, #0x924|13-246-36-29
3326|code|POP.W           {R4-R11,PC}|189-232-240-143
3330|code|LDR.W           R3, =(optarg_ptr - 0x12F60); jumptable 00000BBC case 73|223-248-44-55
3334|code|MOV             R0, R11; dest|88-70
3336|code|MOV.W           R2, #0x100; n|79-244-128-114
3340|code|LDR             R3, [R6,R3]; optarg|243-88
3342|code|LDR             R1, [R3]; src|25-104
3344|code|BLX             strncpy|255-247-190-238
3348|code|MOVS            R3, #0|0-35
3350|code|STRB.W          R3, [R11,#0xFF]|139-248-255-48
3354|code|B               loc_B96|60-231
3356|code|LDR             R3, [SP,#0x948+var_924]; jumptable 00000BBC case 72|9-155
3358|code|ADDS            R3, #1|1-51
3360|code|STR             R3, [SP,#0x948+var_924]|9-147
3362|code|B               loc_B96|56-231
3364|code|LDR             R3, [SP,#0x948+var_928]; jumptable 00000BBC case 69|8-155
3366|code|ADDS            R3, #1|1-51
3368|code|STR             R3, [SP,#0x948+var_928]|8-147
3370|code|B               loc_B96|52-231
3372|code|LDR.W           R3, =(stderr_ptr - 0x12F60); jumptable 00000BBC cases 63,104|223-248-4-55
3376|code|MOVS            R1, #1; size|1-33
3378|code|LDR.W           R0, =(aUsageSmpReadGp - 0xD44); "Usage: smp_read_gpio   [--count=CO] [--"...|223-248-24-7
3382|code|MOVW            R2, #0x44F; n|64-242-79-66
3386|code|MOV.W           R8, #0|79-240-0-8
3390|code|LDR             R3, [R6,R3]; stderr|243-88
3392|code|ADD             R0, PC; "Usage: smp_read_gpio   [--count=CO] [--"...|120-68
3394|code|LDR             R3, [R3]; s|27-104
3396|code|BLX             fwrite|255-247-98-238
3400|code|B               loc_CEA|207-231
3402|code|LDR.W           R4, =(stderr_ptr - 0x12F60); jumptable 00000BBC default case, cases 64-68,70,71,74-85,87-98,100-103,106-111,113,117|223-248-232-70
3406|code|MOV             R3, R0|3-70
3408|code|LDR.W           R2, =(aUnrecognisedSw - 0xD60); "unrecognised switch code 0x%x ??\n"|223-248-252-38
3412|code|MOVS            R1, #1|1-33
3414|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
3418|code|LDR             R4, [R6,R4]; stderr|52-89
3420|code|ADD             R2, PC; "unrecognised switch code 0x%x ??\n"|122-68
3422|code|LDR             R0, [R4]|32-104
3424|code|BLX             __fprintf_chk|255-247-162-238
3428|code|LDR.W           R0, =(aUsageSmpReadGp - 0xD74); "Usage: smp_read_gpio   [--count=CO] [--"...|223-248-236-6
3432|code|LDR             R3, [R4]; s|35-104
3434|code|MOVS            R1, #1; size|1-33
3436|code|MOVW            R2, #0x44F; n|64-242-79-66
3440|code|ADD             R0, PC; "Usage: smp_read_gpio   [--count=CO] [--"...|120-68
3442|code|BLX             fwrite|255-247-76-238
3446|code|B               loc_CEA|184-231
3448|code|LDR.W           R3, =(optind_ptr - 0x12F60)|223-248-220-54
3452|code|LDR             R2, [SP,#0x948+var_91C]|11-154
3454|code|STR.W           R11, [SP,#0x948+ptr]|205-248-24-176
3458|code|STR             R2, [SP,#0x948+var_900]|18-146
3460|code|LDR.W           R9, [R6,R3]; optind|86-248-3-144
3464|code|LDR.W           R3, [R9]|217-248-0-48
3468|code|CMP             R7, R3|159-66
3470|code|BLE             loc_E0A|60-221
3472|code|LDR             R2, [SP,#0x948+s]|5-154
3474|code|LDRB.W          R10, [R2]|146-248-0-160
3478|code|CMP.W           R10, #0|186-241-0-15
3482|code|BEQ             loc_DE6|36-208
3484|code|LDR.W           R3, =(stderr_ptr - 0x12F60)|223-248-148-54
3488|code|MOV             R5, R9|77-70
3490|code|LDR.W           R4, =(aUnexpectedExtr - 0xDAE); "Unexpected extra argument: %s\n"|223-248-184-70
3494|code|LDR.W           R10, [R6,R3]; stderr|86-248-3-160
3498|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3500|code|B               loc_DC4|10-224
3502|code|LDR.W           R3, [R8,R3,LSL#2]|88-248-35-48
3506|code|MOVS            R1, #1|1-33
3508|code|LDR.W           R0, [R10]|218-248-0-0
3512|code|MOV             R2, R4|34-70
3514|code|BLX             __fprintf_chk|255-247-118-238
3518|code|LDR             R3, [R5]|43-104
3520|code|ADDS            R3, #1|1-51
3522|code|STR             R3, [R5]|43-96
3524|code|LDR.W           R3, [R9]|217-248-0-48
3528|code|CMP             R7, R3|159-66
3530|code|BGT             loc_DAE|240-220
3532|code|LDR.W           R0, =(aUsageSmpReadGp - 0xDDE); "Usage: smp_read_gpio   [--count=CO] [--"...|223-248-144-6
3536|code|MOVS            R1, #1; size|1-33
3538|code|LDR.W           R3, [R10]; s|218-248-0-48
3542|code|MOVW            R2, #0x44F; n|64-242-79-66
3546|code|ADD             R0, PC; "Usage: smp_read_gpio   [--count=CO] [--"...|120-68
3548|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
3552|code|BLX             fwrite|255-247-20-238
3556|code|B               loc_CEA|129-231
3558|code|LDR.W           R11, [SP,#0x948+s]|221-248-20-176
3562|code|MOVW            R2, #0x1FF; n|64-242-255-18
3566|code|LDR.W           R1, [R8,R3,LSL#2]; src|88-248-35-16
3570|code|STR             R3, [SP,#0x948+var_8FC]|19-147
3572|code|MOV             R0, R11; dest|88-70
3574|code|BLX             strncpy|255-247-76-238
3578|code|LDR             R3, [SP,#0x948+var_8FC]|19-155
3580|code|STRB.W          R10, [R11,#0x1FF]|139-248-255-161
3584|code|ADDS            R3, #1|1-51
3586|code|STR.W           R3, [R9]|201-248-0-48
3590|code|CMP             R7, R3|159-66
3592|code|BGT             loc_D9C|200-220
3594|code|LDR             R3, [SP,#0x948+s]|5-155
3596|code|LDRB            R3, [R3]|27-120
3598|code|CBZ             R3, loc_E4C|235-177
3600|code|LDR             R0, [SP,#0x948+s]; s|5-152
3602|code|MOVS            R1, #0x2C ; ','; c|44-33
3604|code|BLX             strchr|255-247-30-238
3608|code|CBZ             R0, loc_E6A|56-179
3610|code|LDR.W           R1, =(aD - 0xE26); "%d"|223-248-72-22
3614|code|MOVS            R3, #0|0-35
3616|code|LDR             R2, [SP,#0x948+var_908]|16-154
3618|code|ADD             R1, PC; "%d"|121-68
3620|code|STRB.W          R3, [R0],#1|0-248-1-59
3624|code|BLX             __isoc99_sscanf|255-247-32-238
3628|code|CMP             R0, #1|1-40
3630|code|BEQ             loc_E6A|28-208
3632|code|LDR.W           R3, =(stderr_ptr - 0x12F60)|223-248-0-54
3636|code|MOVS            R1, #1; size|1-33
3638|code|LDR.W           R0, =(aExpectedNumber - 0xE46); "expected number after separator in SMP_"...|223-248-48-6
3642|code|MOVS            R2, #0x33 ; '3'; n|51-34
3644|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
3648|code|LDR             R3, [R6,R3]; stderr|243-88
3650|code|ADD             R0, PC; "expected number after separator in SMP_"...|120-68
3652|code|LDR             R3, [R3]; s|27-104
3654|code|BLX             fwrite|255-247-226-237
3658|code|B               loc_CEA|78-231
3660|code|LDR.W           R0, =(aSmpUtilsDevice - 0xE54); "SMP_UTILS_DEVICE"|223-248-28-6
3664|code|ADD             R0, PC; "SMP_UTILS_DEVICE"|120-68
3666|code|BLX             getenv|255-247-226-237
3670|code|CMP             R0, #0|0-40
3672|code|BEQ.W           loc_1176|0-240-141-129
3676|code|MOV             R1, R0; src|1-70
3678|code|MOVW            R2, #0x1FF; n|64-242-255-18
3682|code|LDR             R0, [SP,#0x948+s]; dest|5-152
3684|code|BLX             strncpy|255-247-20-238
3688|code|B               loc_E10|210-231
3690|code|LDRD.W          R2, R3, [SP,#0x948+var_918]|221-233-12-35
3694|code|ORRS            R3, R2|19-67
3696|code|BEQ.W           loc_1088|0-240-10-129
3700|code|LDRD.W          R0, R1, [SP,#0x948+var_918]|221-233-12-1
3704|code|BLX             smp_is_naa5|255-247-194-237
3708|code|CMP             R0, #0|0-40
3710|code|BEQ.W           loc_11F8|0-240-187-129
3714|code|LDRD.W          R2, R3, [SP,#0x948+var_918]|221-233-12-35
3718|code|ADD.W           R11, SP, #0x948+var_8D8|13-241-112-11
3722|code|STR             R5, [SP,#0x948+var_93C]|3-149
3724|code|LDR             R0, [SP,#0x948+s]|5-152
3726|code|STRD.W          R2, R3, [SP,#0x948+longind]|205-233-0-35
3730|code|LDR             R3, [SP,#0x948+var_908]|16-155
3732|code|LDR             R2, [SP,#0x948+ptr]|6-154
3734|code|LDR             R1, [R3]|25-104
3736|code|STR.W           R11, [SP,#0x948+var_940]|205-248-8-176
3740|code|BLX             smp_initiator_open|255-247-34-238
3744|code|CMP             R0, #0|0-40
3746|code|BLT.W           loc_1082|192-242-238-128
3750|code|LDR             R3, [SP,#0x948+var_928]|8-155
3752|code|CMP             R3, #0|0-43
3754|code|BEQ.W           loc_111C|0-240-55-129
3758|code|LDR             R1, [SP,#0x948+var_904]|17-153
3760|code|MOV.W           R8, #1|79-240-1-8
3764|code|LDRB.W          R2, [SP,#0x948+var_90C]|157-248-60-32
3768|code|LDRB.W          R3, [SP,#0x948+var_91C]|157-248-44-48
3772|code|LDRB.W          R0, [SP,#0x948+var_910]|157-248-56-0
3776|code|STRB            R2, [R1,#4]|10-113
3778|code|MOVS            R2, #7|7-34
3780|code|STRB            R3, [R1,#2]|139-112
3782|code|STRB            R0, [R1,#5]|72-113
3784|code|STRB            R2, [R1,#1]|74-112
3786|code|STRB            R3, [R1,#6]|139-113
3788|code|STRB.W          R8, [R1,#3]|129-248-3-128
3792|code|CMP             R5, #0|0-45
3794|code|BEQ.W           loc_10BC|0-240-243-128
3798|code|LDR.W           R2, =(stderr_ptr - 0x12F60)|223-248-92-37
3802|code|LDR.W           R3, =(aEnhanced - 0xEE6); " enhanced"|223-248-148-53
3806|code|LDR.W           R10, [R6,R2]; stderr|86-248-2-160
3810|code|ADD             R3, PC; " enhanced"|123-68
3812|code|LDR.W           R0, [R10]|218-248-0-0
3816|code|LDR.W           R2, =(aReadGpioRegist - 0xEF8); "    Read GPIO register%s request: "|223-248-136-37
3820|code|MOVS            R1, #1|1-33
3822|code|LDR.W           R7, =(a02x - 0xF04); "%02x "|223-248-136-117
3826|code|MOV             R8, R4|160-70
3828|code|ADD             R2, PC; "    Read GPIO register%s request: "|122-68
3830|code|MOV.W           R9, #0|79-240-0-9
3834|code|BLX             __fprintf_chk|255-247-214-237
3838|code|LDR             R4, [SP,#0x948+var_904]|17-156
3840|code|ADD             R7, PC; "%02x "|127-68
3842|code|STR             R5, [SP,#0x948+s]|5-149
3844|code|MOV             R5, R9|77-70
3846|code|MOV             R9, R10|209-70
3848|code|MOVS            R1, #1|1-33
3850|code|LDRB            R3, [R4,R5]|99-93
3852|code|LDR.W           R0, [R10]|218-248-0-0
3856|code|ADD             R5, R1|13-68
3858|code|MOV             R2, R7|58-70
3860|code|BLX             __fprintf_chk|255-247-200-237
3864|code|CMP             R5, #0xC|12-45
3866|code|BNE             loc_F08|245-209
3868|code|MOV             R4, R8|68-70
3870|code|MOV             R8, R9|200-70
3872|code|LDR.W           R1, [R8]; stream|216-248-0-16
3876|code|MOVS            R0, #0xA; c|10-32
3878|code|MOV             R9, R5|169-70
3880|code|LDR             R5, [SP,#0x948+s]|5-157
3882|code|BLX             fputc|255-247-196-237
3886|code|MOVS            R1, #0; c|0-33
3888|code|MOVS            R2, #0x18; n|24-34
3890|code|MOV             R0, R4; s|32-70
3892|code|BLX             memset|255-247-160-237
3896|code|LDR             R7, [SP,#0x948+var_904]|17-159
3898|code|MOV             R0, R11|88-70
3900|code|MOV             R1, R4|33-70
3902|code|MOV             R2, R5|42-70
3904|code|MOVW            R3, #0x404|64-242-4-67
3908|code|STR             R7, [R4,#4]|103-96
3910|code|ADD.W           R7, SP, #0x948+var_430|13-245-163-103
3914|code|STR             R3, [R4,#8]|163-96
3916|code|STR.W           R9, [R4]|196-248-0-144
3920|code|STR             R7, [R4,#0xC]|231-96
3922|code|BLX             smp_send_req|255-247-134-237
3926|code|MOV             R3, R0|3-70
3928|code|CMP             R0, #0|0-40
3930|code|BNE.W           loc_119E|64-240-32-129
3934|code|LDR.W           R8, [R4,#0x14]|212-248-20-128
3938|code|CMP.W           R8, #0|184-241-0-15
3942|code|BNE.W           loc_1228|64-240-95-129
3946|code|LDR             R4, [R4,#0x10]|36-105
3948|code|CMP             R4, #3|3-44
3950|code|BLS.W           loc_125A|64-242-116-129
3954|code|LDR             R3, [SP,#0x948+var_928]|8-155
3956|code|CBZ             R3, loc_FA0|163-177
3958|code|LDRB            R3, [R7,#3]|251-120
3960|code|STR             R3, [SP,#0x948+var_900]|18-147
3962|code|CBZ             R5, loc_FA0|141-177
3964|code|LDR             R2, [SP,#0x948+var_91C]|11-154
3966|code|CMP             R2, R3|154-66
3968|code|BEQ             loc_FA0|14-208
3970|code|LDR.W           R0, =(stderr_ptr - 0x12F60)|223-248-176-4
3974|code|MOVS            R1, #1|1-33
3976|code|LDR.W           R2, =(aRequestedDDwor - 0xF94); "requested %d dwords but received %d\n"|223-248-240-36
3980|code|LDR             R3, [SP,#0x948+var_91C]|11-155
3982|code|LDR             R0, [R6,R0]; stderr|48-88
3984|code|ADD             R2, PC; "requested %d dwords but received %d\n"|122-68
3986|code|STR             R0, [SP,#0x948+s]|5-144
3988|code|LDR             R0, [SP,#0x948+var_900]|18-152
3990|code|STR             R0, [SP,#0x948+longind]|0-144
3992|code|LDR             R0, [SP,#0x948+s]|5-152
3994|code|LDR             R0, [R0]|0-104
3996|code|BLX             __fprintf_chk|255-247-132-237
4000|code|LDR             R3, [SP,#0x948+var_900]|18-155
4002|code|ADD.W           LR, R3, #1|3-241-1-14
4006|code|MOV.W           LR, LR,LSL#2|79-234-142-14
4010|code|CMP             LR, R4|166-69
4012|code|BLE.W           loc_1256|64-243-83-129
4016|code|CMP             R4, #0|0-44
4018|code|BLT.W           loc_1256|192-242-80-129
4022|code|CBZ             R5, loc_FD2|101-177
4024|code|LDR.W           R0, =(stderr_ptr - 0x12F60)|223-248-120-4
4028|code|MOVS            R1, #1|1-33
4030|code|LDR.W           R2, =(aActualResponse - 0xFCA); "actual response length [%d] less than d"...|223-248-192-36
4034|code|MOV             R3, R4|35-70
4036|code|LDR             R0, [R6,R0]; stderr|48-88
4038|code|ADD             R2, PC; "actual response length [%d] less than d"...|122-68
4040|code|STR.W           LR, [SP,#0x948+longind]|205-248-0-224
4044|code|LDR             R0, [R0]|0-104
4046|code|BLX             __fprintf_chk|255-247-108-237
4050|code|LDR             R3, [SP,#0x948+var_920]|10-155
4052|code|LDR             R2, [SP,#0x948+var_924]|9-154
4054|code|ORRS            R3, R2|19-67
4056|code|BEQ.W           loc_123C|0-240-48-129
4060|code|CMP             R2, #0|0-42
4062|code|BEQ.W           loc_126E|0-240-70-129
4066|code|MOV             R1, R4; len|33-70
4068|code|MOV             R0, R7; str|56-70
4070|code|MOVS            R2, #1; no_ascii|1-34
4072|code|BLX             dStrHex|255-247-254-236
4076|code|LDRB            R3, [R7]|59-120
4078|code|CMP             R3, #0x41 ; 'A'|65-43
4080|code|BEQ.W           loc_12A8|0-240-90-129
4084|code|MOV             R0, R11|88-70
4086|code|MOV.W           R8, #0x61 ; 'a'|79-240-97-8
4090|code|BLX             smp_initiator_close|255-247-240-236
4094|code|CMP             R5, #0|0-45
4096|code|BEQ.W           loc_CEA|63-244-115-174
4100|code|LDR.W           R0, =(stderr_ptr - 0x12F60)|223-248-44-4
4104|code|MOVS            R1, #1|1-33
4106|code|LDR.W           R2, =(aExitStatusDInd - 0x1016); "Exit status %d indicates error detected"...|223-248-120-36
4110|code|MOV             R3, R8|67-70
4112|code|LDR             R0, [R6,R0]; stderr|48-88
4114|code|ADD             R2, PC; "Exit status %d indicates error detected"...|122-68
4116|code|LDR             R0, [R0]|0-104
4118|code|BLX             __fprintf_chk|255-247-72-237
4122|code|B               loc_CEA|102-230
4124|code|LDR             R3, [SP,#0x948+var_904]|17-155
4126|code|LDRB            R4, [R7,#1]|124-120
4128|code|LDRB            R3, [R3,#1]|91-120
4130|code|CMP             R4, R3|156-66
4132|code|BNE.W           loc_12C6|64-240-79-129
4136|code|LDRB            R3, [R7,#2]|187-120
4138|code|CMP             R3, #0|0-43
4140|code|BNE.W           loc_13E4|64-240-218-129
4144|code|LDR             R3, [SP,#0x948+var_928]|8-155
4146|code|CMP             R3, #0|0-43
4148|code|BNE.W           loc_137C|64-240-162-129
4152|code|LDR.W           R2, =(aBadArgumentToP+0x34 - 0x1040); ""|223-248-76-36
4156|code|ADD             R2, PC; ""|122-68
4158|code|LDR.W           R1, =(aReadGpioRegist_0 - 0x1048); "Read GPIO register%s response:\n"|223-248-76-20
4162|code|MOVS            R0, #1|1-32
4164|code|ADD             R1, PC; "Read GPIO register%s response:\n"|121-68
4166|code|BLX             __printf_chk|255-247-42-237
4170|code|LDR             R3, [SP,#0x948+var_90C]|15-155
4172|code|CMP             R3, #0|0-43
4174|code|BEQ.W           loc_12DE|0-240-70-129
4178|code|LDR             R3, =(stderr_ptr - 0x12F60)|248-75
4180|code|MOVS            R1, #1; size|1-33
4182|code|LDR.W           R0, =(aOnlySimpleCfgR - 0x1062); "  only simple cfg registers decoded, ot"...|223-248-56-4
4186|code|MOVS            R2, #0x3B ; ';'; n|59-34
4188|code|LDR             R4, [R6,R3]; stderr|244-88
4190|code|ADD             R0, PC; "  only simple cfg registers decoded, ot"...|120-68
4192|code|LDR             R3, [R4]; s|35-104
4194|code|BLX             fwrite|255-247-212-236
4198|code|LDR.W           R0, =(aUseEitherHexOr - 0x1072); "    use either '--hex' or '--raw' optio"...|223-248-44-4
4202|code|LDR             R3, [R4]; s|35-104
4204|code|MOVS            R1, #1; size|1-33
4206|code|ADD             R0, PC; "    use either '--hex' or '--raw' optio"...|120-68
4208|code|MOVS            R2, #0x43 ; 'C'; n|67-34
4210|code|BLX             fwrite|255-247-204-236
4214|code|MOV             R0, R11|88-70
4216|code|BLX             smp_initiator_close|255-247-176-236
4220|code|CMP             R0, #0|0-40
4222|code|BGE.W           loc_CEA|191-246-52-174
4226|code|MOV.W           R8, #0x5C ; '\'|79-240-92-8
4230|code|B               loc_CEA|48-230
4232|code|LDR.W           R0, =(aSmpUtilsSasAdd - 0x1090); "SMP_UTILS_SAS_ADDR"|223-248-12-4
4236|code|ADD             R0, PC; "SMP_UTILS_SAS_ADDR"|120-68
4238|code|BLX             getenv|255-247-196-236
4242|code|CBZ             R0, loc_10B2|112-177
4244|code|BLX             smp_get_llnum|255-247-20-237
4248|code|ADDS            R3, R1, #1|75-28
4250|code|IT EQ|8-191
4252|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
4256|code|BEQ.W           loc_1286|0-240-241-128
4260|code|MOV             R2, R0|2-70
4262|code|MOV             R3, R1|11-70
4264|code|STRD.W          R2, R3, [SP,#0x948+var_918]|205-233-12-35
4268|code|ORRS            R3, R2|19-67
4270|code|BNE.W           loc_E74|127-244-225-174
4274|code|MOVS            R2, #0|0-34
4276|code|MOVS            R3, #0|0-35
4278|code|STRD.W          R2, R3, [SP,#0x948+var_918]|205-233-12-35
4282|code|B               loc_E82|226-230
4284|code|MOV             R1, R5; c|41-70
4286|code|MOVS            R2, #0x18; n|24-34
4288|code|MOV             R0, R4; s|32-70
4290|code|ADD.W           R7, SP, #0x948+var_430|13-245-163-103
4294|code|BLX             memset|255-247-216-236
4298|code|LDR             R3, [SP,#0x948+var_904]|17-155
4300|code|MOV             R0, R11|88-70
4302|code|MOV             R1, R4|33-70
4304|code|MOV             R2, R5|42-70
4306|code|STR             R7, [R4,#0xC]|231-96
4308|code|STR             R3, [R4,#4]|99-96
4310|code|MOVS            R3, #0xC|12-35
4312|code|STR             R3, [R4]|35-96
4314|code|MOVW            R3, #0x404|64-242-4-67
4318|code|STR             R3, [R4,#8]|163-96
4320|code|BLX             smp_send_req|255-247-190-236
4324|code|MOV             R3, R0|3-70
4326|code|CMP             R0, #0|0-40
4328|code|BEQ.W           loc_F5E|63-244-57-175
4332|code|LDR             R4, =(stderr_ptr - 0x12F60)|209-76
4334|code|MOV             R1, R8|65-70
4336|code|LDR             R2, =(aSmpSendReqFail - 0x10FA); "smp_send_req failed, res=%d\n"|234-74
4338|code|LDR.W           R10, [R6,R4]; stderr|86-248-4-160
4342|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4344|code|LDR.W           R0, [R10]|218-248-0-0
4348|code|BLX             __fprintf_chk|255-247-212-236
4352|code|LDR             R0, =(aTryAddingVOpti - 0x110E); "    try adding '-v' option for more deb"...|231-72
4354|code|MOVS            R1, #1; size|1-33
4356|code|LDR.W           R3, [R10]; s|218-248-0-48
4360|code|MOVS            R2, #0x2A ; '*'; n|42-34
4362|code|ADD             R0, PC; "    try adding '-v' option for more deb"...|120-68
4364|code|BLX             fwrite|255-247-126-236
4368|code|MOV             R0, R11|88-70
4370|code|MOV.W           R8, #0x63 ; 'c'|79-240-99-8
4374|code|BLX             smp_initiator_close|255-247-98-236
4378|code|B               loc_FFE|112-231
4380|code|LDR             R2, [SP,#0x948+var_904]|17-154
4382|code|LDRB.W          R1, [SP,#0x948+var_90C]|157-248-60-16
4386|code|MOV             R3, R2|19-70
4388|code|STRB            R1, [R2,#2]|145-112
4390|code|LDRB.W          R1, [SP,#0x948+var_910]|157-248-56-16
4394|code|STRB            R1, [R2,#3]|209-112
4396|code|LDRB.W          R2, [SP,#0x948+var_91C]|157-248-44-32
4400|code|STRB            R2, [R3,#4]|26-113
4402|code|CMP             R5, #0|0-45
4404|code|BEQ             loc_11B2|61-208
4406|code|LDR             R2, =(stderr_ptr - 0x12F60)|191-74
4408|code|LDR             R3, =(aBadArgumentToP+0x34 - 0x1142); ""|218-75
4410|code|LDR.W           R10, [R6,R2]; stderr|86-248-2-160
4414|code|ADD             R3, PC; ""|123-68
4416|code|LDR.W           R0, [R10]|218-248-0-0
4420|code|B               loc_EE8|208-230
4422|code|LDR             R3, =(stderr_ptr - 0x12F60)|187-75
4424|code|MOVS            R1, #1; size|1-33
4426|code|LDR             R0, =(aBadArgumentToS - 0x1158); "bad argument to '--sa'\n"|215-72
4428|code|MOVS            R2, #0x17; n|23-34
4430|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
4434|code|LDR             R3, [R6,R3]; stderr|243-88
4436|code|ADD             R0, PC; "bad argument to '--sa'\n"|120-68
4438|code|LDR             R3, [R3]; s|27-104
4440|code|BLX             fwrite|255-247-88-236
4444|code|B               loc_CEA|197-229
4446|code|LDR             R3, =(stderr_ptr - 0x12F60)|181-75
4448|code|MOVS            R1, #1; size|1-33
4450|code|LDR             R0, =(aBadArgumentToP - 0x1170); "bad argument to '--phy', expect value f"...|210-72
4452|code|MOVS            R2, #0x34 ; '4'; n|52-34
4454|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
4458|code|LDR             R3, [R6,R3]; stderr|243-88
4460|code|ADD             R0, PC; "bad argument to '--phy', expect value f"...|120-68
4462|code|LDR             R3, [R3]; s|27-104
4464|code|BLX             fwrite|255-247-76-236
4468|code|B               loc_CEA|185-229
4470|code|LDR             R3, =(stderr_ptr - 0x12F60)|175-75
4472|code|MOVS            R1, #1; size|1-33
4474|code|LDR             R0, =(aMissingDeviceN - 0x1188); "missing device name on command line\n  "...|205-72
4476|code|MOVS            R2, #0x62 ; 'b'; n|98-34
4478|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
4482|code|LDR             R4, [R6,R3]; stderr|244-88
4484|code|ADD             R0, PC; "missing device name on command line\n  "...|120-68
4486|code|LDR             R3, [R4]; s|35-104
4488|code|BLX             fwrite|255-247-64-236
4492|code|LDR             R0, =(aUsageSmpReadGp - 0x119A); "Usage: smp_read_gpio   [--count=CO] [--"...|201-72
4494|code|LDR             R3, [R4]; s|35-104
4496|code|MOVS            R1, #1; size|1-33
4498|code|MOVW            R2, #0x44F; n|64-242-79-66
4502|code|ADD             R0, PC; "Usage: smp_read_gpio   [--count=CO] [--"...|120-68
4504|code|BLX             fwrite|255-247-56-236
4508|code|B               loc_CEA|165-229
4510|code|LDR             R2, =(aSmpSendReqFail - 0x11AA); "smp_send_req failed, res=%d\n"|198-74
4512|code|MOVS            R1, #1|1-33
4514|code|LDR.W           R0, [R8]|216-248-0-0
4518|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4520|code|BLX             __fprintf_chk|255-247-126-236
4524|code|CMP             R5, #0|0-45
4526|code|BNE             loc_1110|175-209
4528|code|B               loc_1100|166-231
4530|code|MOV             R1, R5; c|41-70
4532|code|MOVS            R2, #0x18; n|24-34
4534|code|MOV             R0, R4; s|32-70
4536|code|ADD.W           R7, SP, #0x948+var_430|13-245-163-103
4540|code|BLX             memset|255-247-92-236
4544|code|LDR             R3, [SP,#0x948+var_904]|17-155
4546|code|MOV             R0, R11|88-70
4548|code|MOV             R1, R4|33-70
4550|code|MOV             R2, R5|42-70
4552|code|STR             R7, [R4,#0xC]|231-96
4554|code|STR             R3, [R4,#4]|99-96
4556|code|MOVS            R3, #0xC|12-35
4558|code|STR             R3, [R4]|35-96
4560|code|MOVW            R3, #0x404|64-242-4-67
4564|code|STR             R3, [R4,#8]|163-96
4566|code|BLX             smp_send_req|255-247-68-236
4570|code|MOV             R3, R0|3-70
4572|code|CMP             R0, #0|0-40
4574|code|BEQ.W           loc_F5E|63-244-190-174
4578|code|LDR             R4, =(stderr_ptr - 0x12F60)|148-76
4580|code|MOVS            R1, #1|1-33
4582|code|LDR             R2, =(aSmpSendReqFail - 0x11F0); "smp_send_req failed, res=%d\n"|181-74
4584|code|LDR.W           R10, [R6,R4]; stderr|86-248-4-160
4588|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4590|code|LDR.W           R0, [R10]|218-248-0-0
4594|code|BLX             __fprintf_chk|255-247-90-236
4598|code|B               loc_1100|131-231
4600|code|LDR             R3, =(stderr_ptr - 0x12F60)|142-75
4602|code|MOVS            R1, #1; size|1-33
4604|code|LDR             R0, =(aSasTargetAddre - 0x1206); "SAS (target) address not in naa-5 forma"...|176-72
4606|code|MOVS            R2, #0x41 ; 'A'; n|65-34
4608|code|LDR             R7, [R6,R3]; stderr|247-88
4610|code|ADD             R0, PC; "SAS (target) address not in naa-5 forma"...|120-68
4612|code|LDR             R3, [R7]; s|59-104
4614|code|BLX             fwrite|255-247-2-236
4618|code|LDR             R3, [SP,#0x948+ptr]|6-155
4620|code|LDRB            R3, [R3]|27-120
4622|code|CMP             R3, #0|0-43
4624|code|BNE.W           loc_E82|127-244-55-174
4628|code|LDR             R0, =(aUseInterfaceTo - 0x1220); "    use '--interface=' to override\n"|171-72
4630|code|MOVS            R1, #1; size|1-33
4632|code|LDR             R3, [R7]; s|59-104
4634|code|MOVS            R2, #0x23 ; '#'; n|35-34
4636|code|ADD             R0, PC; "    use '--interface=' to override\n"|120-68
4638|code|MOV.W           R8, #0x5B ; '['|79-240-91-8
4642|code|BLX             fwrite|255-247-244-235
4646|code|B               loc_CEA|96-229
4648|code|LDR             R0, =(stderr_ptr - 0x12F60)|130-72
4650|code|MOV             R3, R8|67-70
4652|code|LDR             R2, =(aSmpSendReqTran - 0x1236); "smp_send_req transport_error=%d\n"|166-74
4654|code|MOVS            R1, #1|1-33
4656|code|LDR             R0, [R6,R0]; stderr|48-88
4658|code|ADD             R2, PC; "smp_send_req transport_error=%d\n"|122-68
4660|code|LDR             R0, [R0]|0-104
4662|code|BLX             __fprintf_chk|255-247-56-236
4666|code|B               loc_1110|105-231
4668|code|LDRB            R3, [R7]|59-120
4670|code|CMP             R3, #0x41 ; 'A'|65-43
4672|code|BEQ.W           loc_101C|63-244-236-174
4676|code|LDR             R0, =(stderr_ptr - 0x12F60)|123-72
4678|code|MOVS            R1, #1|1-33
4680|code|LDR             R2, =(aExpectedSmpFra - 0x1250); "expected SMP frame response type, got=0"...|160-74
4682|code|LDR             R0, [R6,R0]; stderr|48-88
4684|code|ADD             R2, PC; "expected SMP frame response type, got=0"...|122-68
4686|code|LDR             R0, [R0]|0-104
4688|code|BLX             __fprintf_chk|255-247-42-236
4692|code|B               loc_FF4|206-230
4694|code|MOV             R4, LR|116-70
4696|code|B               loc_FD2|187-230
4698|code|LDR             R0, =(stderr_ptr - 0x12F60)|118-72
4700|code|MOV             R3, R4|35-70
4702|code|LDR             R2, =(aResponseTooSho - 0x1268); "response too short, len=%d\n"|156-74
4704|code|MOVS            R1, #1|1-33
4706|code|LDR             R0, [R6,R0]; stderr|48-88
4708|code|ADD             R2, PC; "response too short, len=%d\n"|122-68
4710|code|LDR             R0, [R0]|0-104
4712|code|BLX             __fprintf_chk|255-247-30-236
4716|code|B               loc_FF4|194-230
4718|code|LDR.W           R9, [SP,#0x948+var_924]|221-248-36-144
4722|code|B               loc_1280|5-224
4724|code|LDRB.W          R0, [R7,R9]; c|23-248-9-0
4728|code|ADD.W           R9, R9, #1|9-241-1-9
4732|code|BLX             putchar|255-247-2-236
4736|code|CMP             R4, R9|76-69
4738|code|BGT             loc_1274|247-220
4740|code|B               loc_FEC|178-230
4742|code|LDR             R3, =(stderr_ptr - 0x12F60)|107-75
4744|code|MOVS            R1, #1; size|1-33
4746|code|LDR             R0, =(aBadValueInEnvi - 0x1294); "bad value in environment variable SMP_U"...|146-72
4748|code|MOVS            R2, #0x35 ; '5'; n|53-34
4750|code|LDR             R7, [R6,R3]; stderr|247-88
4752|code|ADD             R0, PC; "bad value in environment variable SMP_U"...|120-68
4754|code|LDR             R3, [R7]; s|59-104
4756|code|BLX             fwrite|255-247-186-235
4760|code|LDR             R0, =(aUse0 - 0x12A4); "    use 0\n"|143-72
4762|code|LDR             R3, [R7]; s|59-104
4764|code|MOVS            R1, #1; size|1-33
4766|code|MOVS            R2, #0xA; n|10-34
4768|code|ADD             R0, PC; "    use 0\n"|120-68
4770|code|BLX             fwrite|255-247-180-235
4774|code|B               loc_E82|236-229
4776|code|LDR             R3, [SP,#0x948+var_904]|17-155
4778|code|LDRB            R2, [R7,#1]|122-120
4780|code|LDRB            R3, [R3,#1]|91-120
4782|code|CMP             R2, R3|154-66
4784|code|BNE.W           loc_FF4|127-244-160-174
4788|code|LDRB            R3, [R7,#2]|187-120
4790|code|CMP             R3, #0|0-43
4792|code|BEQ.W           loc_1076|63-244-221-174
4796|code|MOV             R8, R3|152-70
4798|code|MOV             R0, R11|88-70
4800|code|BLX             smp_initiator_close|255-247-140-235
4804|code|B               loc_FFE|155-230
4806|code|LDR             R0, =(stderr_ptr - 0x12F60)|91-72
4808|code|MOVS            R1, #1|1-33
4810|code|LDR             R2, =(aExpectedFuncti - 0x12D2); "Expected function code=0x%x, got=0x%x\n"|132-74
4812|code|LDR             R0, [R6,R0]; stderr|48-88
4814|code|ADD             R2, PC; "Expected function code=0x%x, got=0x%x\n"|122-68
4816|code|STR             R4, [SP,#0x948+longind]|0-148
4818|code|LDR             R0, [R0]|0-104
4820|code|BLX             __fprintf_chk|255-247-232-235
4824|code|B               loc_FF4|140-230
4826|code|BLX             __stack_chk_fail|255-247-140-235
4830|code|LDR             R3, [SP,#0x948+var_910]|14-155
4832|code|CMP             R3, #0|0-43
4834|code|BEQ             loc_1382|78-208
4836|code|LDR             R3, [SP,#0x948+var_910]|14-155
4838|code|MOVS            R4, #4|4-36
4840|code|LDR.W           R10, [SP,#0x948+var_90C]|221-248-60-160
4844|code|CMP             R3, #1|1-43
4846|code|BEQ             loc_1300|7-208
4848|code|LDR             R3, [SP,#0x948+var_91C]|11-155
4850|code|CMP             R3, #1|1-43
4852|code|BLE.W           loc_1052|127-247-173-174
4856|code|LDR             R3, [SP,#0x948+var_910]|14-155
4858|code|CMP             R3, #0|0-43
4860|code|BNE.W           loc_1052|127-244-169-174
4864|code|LDR             R0, =(aGpioCfg1 - 0x130E); "  GPIO_CFG[1]:"|119-72
4866|code|ADD.W           R9, R4, #1|4-241-1-9
4870|code|ADDS            R5, R4, #2|165-28
4872|code|ADDS            R4, #3|3-52
4874|code|ADD             R0, PC; "  GPIO_CFG[1]:"|120-68
4876|code|BLX             puts|255-247-138-235
4880|code|LDRB.W          R2, [R7,R9]|23-248-9-32
4884|code|LDR             R1, =(aBlinkGenerator - 0x131C); "    blink generator rate B: %d\n"|115-73
4886|code|MOVS            R0, #1|1-32
4888|code|ADD             R1, PC; "    blink generator rate B: %d\n"|121-68
4890|code|LSRS            R2, R2, #4|18-9
4892|code|BLX             __printf_chk|255-247-190-235
4896|code|LDRB.W          R2, [R7,R9]|23-248-9-32
4900|code|LDR             R1, =(aBlinkGenerator_0 - 0x1330); "    blink generator rate A: %d\n"|112-73
4902|code|MOVS            R0, #1|1-32
4904|code|AND.W           R2, R2, #0xF|2-240-15-2
4908|code|ADD             R1, PC; "    blink generator rate A: %d\n"|121-68
4910|code|BLX             __printf_chk|255-247-182-235
4914|code|LDRB            R2, [R7,R5]|122-93
4916|code|LDR             R1, =(aForceActivityO - 0x133C); "    force activity off: %d\n"|109-73
4918|code|MOVS            R0, #1|1-32
4920|code|ADD             R1, PC; "    force activity off: %d\n"|121-68
4922|code|LSRS            R2, R2, #4|18-9
4924|code|BLX             __printf_chk|255-247-174-235
4928|code|LDRB            R2, [R7,R5]|122-93
4930|code|LDR             R1, =(aMaximumActivit - 0x134E); "    maximum activity on: %d\n"|107-73
4932|code|MOVS            R0, #1|1-32
4934|code|AND.W           R2, R2, #0xF|2-240-15-2
4938|code|ADD             R1, PC; "    maximum activity on: %d\n"|121-68
4940|code|BLX             __printf_chk|255-247-166-235
4944|code|LDRB            R2, [R7,R4]|58-93
4946|code|LDR             R1, =(aStretchActivit - 0x135A); "    stretch activity off: %d\n"|104-73
4948|code|MOVS            R0, #1|1-32
4950|code|ADD             R1, PC; "    stretch activity off: %d\n"|121-68
4952|code|LSRS            R2, R2, #4|18-9
4954|code|BLX             __printf_chk|255-247-160-235
4958|code|LDRB            R2, [R7,R4]|58-93
4960|code|LDR             R1, =(aStretchActivit_0 - 0x136C); "    stretch activity on: %d\n"|101-73
4962|code|MOVS            R0, #1|1-32
4964|code|AND.W           R2, R2, #0xF|2-240-15-2
4968|code|ADD             R1, PC; "    stretch activity on: %d\n"|121-68
4970|code|BLX             __printf_chk|255-247-152-235
4974|code|ADD.W           R3, R10, #1|10-241-1-3
4978|code|LDR             R2, [SP,#0x948+var_91C]|11-154
4980|code|CMP             R3, R2|147-66
4982|code|BGE.W           loc_1076|191-246-126-174
4986|code|B               loc_1052|106-230
4988|code|LDR             R2, =(aEnhanced - 0x1382); " enhanced"|95-74
4990|code|ADD             R2, PC; " enhanced"|122-68
4992|code|B               loc_103E|93-230
4994|code|LDR             R0, =(aGpioCfg0 - 0x1388); "  GPIO_CFG[0]:"|95-72
4996|code|ADD             R0, PC; "  GPIO_CFG[0]:"|120-68
4998|code|BLX             puts|255-247-78-235
5002|code|LDRB            R2, [R7,#5]|122-121
5004|code|LDR             R1, =(aVersionD - 0x1398); "    version: %d\n"|93-73
5006|code|MOVS            R0, #1|1-32
5008|code|AND.W           R2, R2, #0xF|2-240-15-2
5012|code|ADD             R1, PC; "    version: %d\n"|121-68
5014|code|BLX             __printf_chk|255-247-130-235
5018|code|LDRSB.W         R2, [R7,#6]|151-249-6-32
5022|code|LDR             R1, =(aGpioEnableD - 0x13A6); "    GPIO enable: %d\n"|90-73
5024|code|MOVS            R0, #1|1-32
5026|code|ADD             R1, PC; "    GPIO enable: %d\n"|121-68
5028|code|LSRS            R2, R2, #0x1F|210-15
5030|code|BLX             __printf_chk|255-247-122-235
5034|code|LDRB            R2, [R7,#6]|186-121
5036|code|LDR             R1, =(aCfgRegisterCou - 0x13B8); "    cfg register count: %d\n"|87-73
5038|code|MOVS            R0, #1|1-32
5040|code|UBFX.W          R2, R2, #4, #3|194-243-2-18
5044|code|ADD             R1, PC; "    cfg register count: %d\n"|121-68
5046|code|BLX             __printf_chk|255-247-114-235
5050|code|LDRB            R2, [R7,#6]|186-121
5052|code|LDR             R1, =(aGpRegisterCoun - 0x13C8); "    gp register count: %d\n"|84-73
5054|code|MOVS            R0, #1|1-32
5056|code|AND.W           R2, R2, #0xF|2-240-15-2
5060|code|ADD             R1, PC; "    gp register count: %d\n"|121-68
5062|code|BLX             __printf_chk|255-247-106-235
5066|code|LDR             R1, =(aSupportedDrive - 0x13D4); "    supported drive count: %d\n"|82-73
5068|code|MOVS            R0, #1|1-32
5070|code|LDRB            R2, [R7,#7]|250-121
5072|code|ADD             R1, PC; "    supported drive count: %d\n"|121-68
5074|code|BLX             __printf_chk|255-247-100-235
5078|code|LDR             R3, [SP,#0x948+var_91C]|11-155
5080|code|CMP             R3, #1|1-43
5082|code|BLE             loc_140E|24-221
5084|code|MOV.W           R10, #1|79-240-1-10
5088|code|MOVS            R4, #8|8-36
5090|code|B               loc_1300|141-231
5092|code|MOV             R0, R3|24-70
5094|code|ADD             R2, SP, #0x948+var_7B0|102-170
5096|code|MOVS            R1, #0x80|128-33
5098|code|MOV             R8, R3|152-70
5100|code|BLX             smp_get_func_res_str|255-247-110-235
5104|code|LDR             R3, =(stderr_ptr - 0x12F60)|16-75
5106|code|LDR             R3, [R6,R3]; stderr|243-88
5108|code|LDR             R2, [R3]|26-104
5110|code|LDR             R3, [SP,#0x948+var_928]|8-155
5112|code|CBNZ            R3, loc_1412|91-185
5114|code|LDR             R3, =(aBadArgumentToP+0x34 - 0x1400); ""|71-75
5116|code|ADD             R3, PC; ""|123-68
5118|code|STR             R0, [SP,#0x948+longind]|0-144
5120|code|MOV             R0, R2|16-70
5122|code|LDR             R2, =(aReadGpioRegist_1 - 0x140A); "Read gpio register%s result: %s\n"|70-74
5124|code|MOVS            R1, #1|1-33
5126|code|ADD             R2, PC; "Read gpio register%s result: %s\n"|122-68
5128|code|BLX             __fprintf_chk|255-247-78-235
5132|code|B               loc_12BE|87-231
5134|code|MOVS            R3, #1|1-35
5136|code|B               loc_1372|175-231
5138|code|LDR             R3, =(aEnhanced - 0x1418); " enhanced"|67-75
5140|code|ADD             R3, PC; " enhanced"|123-68
5142|code|B               loc_13FE|242-231
5144|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB14|76-36-1-0
5148|data|DCD __stack_chk_guard_ptr - 0x12F60|124-0-0-0
5152|data|DCD off_16B0 - 0xB1E|146-11-0-0
5156|data|DCD aCEhhiIPRsTVv - 0xB7C; "c:EhHi:I:p:rs:t:vV"|76-11-0-0
5160|data|DCD off_13008 - 0xB82; "count"|134-36-1-0
5164|data|DCD aPhyNOptionNotN - 0xB8A; "'--phy=<n>' option not needed so ignore"...|18-16-0-0
5168|data|DCD optarg_ptr - 0x12F60|156-0-0-0
5172|data|DCD stderr_ptr - 0x12F60|132-0-0-0
5176|data|DCD aBadArgumentToT - 0xC24; "bad argument to '--type'\n"|188-15-0-0
5180|data|DCD aBadArgumentToI - 0xC9A; "bad argument to '--index'\n"|174-14-0-0
5184|data|DCD aBadArgumentToC - 0xCCC; "bad argument to '--count'\n"|16-10-0-0
5188|data|DCD aVersionS - 0xCE4; "version: %s\n"|24-15-0-0
5192|data|DCD a11020130604 - 0xCE6; "1.10 20130604"|38-15-0-0
5196|data|DCD aUsageSmpReadGp - 0xD44; "Usage: smp_read_gpio   [--count=CO] [--"...|180-9-0-0
5200|data|DCD aUnrecognisedSw - 0xD60; "unrecognised switch code 0x%x ??\n"|188-14-0-0
5204|data|DCD aUsageSmpReadGp - 0xD74; "Usage: smp_read_gpio   [--count=CO] [--"...|132-9-0-0
5208|data|DCD optind_ptr - 0x12F60|128-0-0-0
5212|data|DCD aUnexpectedExtr - 0xDAE; "Unexpected extra argument: %s\n"|146-14-0-0
5216|data|DCD aUsageSmpReadGp - 0xDDE; "Usage: smp_read_gpio   [--count=CO] [--"...|26-9-0-0
5220|data|DCD aD - 0xE26; "%d"|178-14-0-0
5224|data|DCD aExpectedNumber - 0xE46; "expected number after separator in SMP_"...|150-14-0-0
5228|data|DCD aSmpUtilsDevice - 0xE54; "SMP_UTILS_DEVICE"|12-14-0-0
5232|data|DCD aEnhanced - 0xEE6; " enhanced"|214-7-0-0
5236|data|DCD aReadGpioRegist - 0xEF8; "    Read GPIO register%s request: "|216-14-0-0
5240|data|DCD a02x - 0xF04; "%02x "|240-14-0-0
5244|data|DCD aRequestedDDwor - 0xF94; "requested %d dwords but received %d\n"|244-14-0-0
5248|data|DCD aActualResponse - 0xFCA; "actual response length [%d] less than d"...|230-14-0-0
5252|data|DCD aExitStatusDInd - 0x1016; "Exit status %d indicates error detected"...|78-17-0-0
5256|data|DCD aBadArgumentToP+0x34 - 0x1040; ""|88-11-0-0
5260|data|DCD aReadGpioRegist_0 - 0x1048; "Read GPIO register%s response:\n"|28-15-0-0
5264|data|DCD aOnlySimpleCfgR - 0x1062; "  only simple cfg registers decoded, ot"...|34-15-0-0
5268|data|DCD aUseEitherHexOr - 0x1072; "    use either '--hex' or '--raw' optio"...|78-15-0-0
5272|data|DCD aSmpUtilsSasAdd - 0x1090; "SMP_UTILS_SAS_ADDR"|128-12-0-0
5276|data|DCD aSmpSendReqFail - 0x10FA; "smp_send_req failed, res=%d\n"|2-13-0-0
5280|data|DCD aTryAddingVOpti - 0x110E; "    try adding '-v' option for more deb"...|14-13-0-0
5284|data|DCD aBadArgumentToP+0x34 - 0x1142; ""|86-10-0-0
5288|data|DCD aBadArgumentToS - 0x1158; "bad argument to '--sa'\n"|112-10-0-0
5292|data|DCD aBadArgumentToP - 0x1170; "bad argument to '--phy', expect value f"...|244-9-0-0
5296|data|DCD aMissingDeviceN - 0x1188; "missing device name on command line\n  "...|236-10-0-0
5300|data|DCD aUsageSmpReadGp - 0x119A; "Usage: smp_read_gpio   [--count=CO] [--"...|94-5-0-0
5304|data|DCD aSmpSendReqFail - 0x11AA; "smp_send_req failed, res=%d\n"|82-12-0-0
5308|data|DCD aSmpSendReqFail - 0x11F0; "smp_send_req failed, res=%d\n"|12-12-0-0
5312|data|DCD aSasTargetAddre - 0x1206; "SAS (target) address not in naa-5 forma"...|98-11-0-0
5316|data|DCD aUseInterfaceTo - 0x1220; "    use '--interface=' to override\n"|140-11-0-0
5320|data|DCD aSmpSendReqTran - 0x1236; "smp_send_req transport_error=%d\n"|18-12-0-0
5324|data|DCD aExpectedSmpFra - 0x1250; "expected SMP frame response type, got=0"...|156-12-0-0
5328|data|DCD aResponseTooSho - 0x1268; "response too short, len=%d\n"|4-12-0-0
5332|data|DCD aBadValueInEnvi - 0x1294; "bad value in environment variable SMP_U"...|144-10-0-0
5336|data|DCD aUse0 - 0x12A4; "    use 0\n"|184-10-0-0
5340|data|DCD aExpectedFuncti - 0x12D2; "Expected function code=0x%x, got=0x%x\n"|70-12-0-0
5344|data|DCD aGpioCfg1 - 0x130E; "  GPIO_CFG[1]:"|138-13-0-0
5348|data|DCD aBlinkGenerator - 0x131C; "    blink generator rate B: %d\n"|140-13-0-0
5352|data|DCD aBlinkGenerator_0 - 0x1330; "    blink generator rate A: %d\n"|152-13-0-0
5356|data|DCD aForceActivityO - 0x133C; "    force activity off: %d\n"|172-13-0-0
5360|data|DCD aMaximumActivit - 0x134E; "    maximum activity on: %d\n"|182-13-0-0
5364|data|DCD aStretchActivit - 0x135A; "    stretch activity off: %d\n"|202-13-0-0
5368|data|DCD aStretchActivit_0 - 0x136C; "    stretch activity on: %d\n"|216-13-0-0
5372|data|DCD aEnhanced - 0x1382; " enhanced"|58-3-0-0
5376|data|DCD aGpioCfg0 - 0x1388; "  GPIO_CFG[0]:"|124-12-0-0
5380|data|DCD aVersionD - 0x1398; "    version: %d\n"|124-12-0-0
5384|data|DCD aGpioEnableD - 0x13A6; "    GPIO enable: %d\n"|130-12-0-0
5388|data|DCD aCfgRegisterCou - 0x13B8; "    cfg register count: %d\n"|136-12-0-0
5392|data|DCD aGpRegisterCoun - 0x13C8; "    gp register count: %d\n"|148-12-0-0
5396|data|DCD aSupportedDrive - 0x13D4; "    supported drive count: %d\n"|164-12-0-0
5400|data|DCD aBadArgumentToP+0x34 - 0x1400; ""|152-7-0-0
5404|data|DCD aReadGpioRegist_1 - 0x140A; "Read gpio register%s result: %s\n"|54-11-0-0
5408|data|DCD aEnhanced - 0x1418; " enhanced"|164-2-0-0
5412|code|MOV.W           R11, #0|79-240-0-11
5416|code|MOV.W           LR, #0|79-240-0-14
5420|code|POP             {R1}; argc|2-188
5422|code|MOV             R2, SP; ubp_av|106-70
5424|code|PUSH            {R2}; stack_end|4-180
5426|code|PUSH            {R0}; rtld_fini|1-180
5428|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x155C)|223-248-36-160
5432|code|ADR             R3, off_155C|8-163
5434|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
5436|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F60)|223-248-32-192
5440|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
5444|code|PUSH.W          {R12}; fini|77-248-4-205
5448|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F60)|6-75
5450|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
5454|code|LDR             R0, =(main_ptr - 0x12F60)|6-72
5456|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
5460|code|BLX             __libc_start_main|255-247-108-234
5464|code|BLX             abort|255-247-202-234
5468|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x155C|4-26-1-0
5472|data|DCD __libc_csu_fini_ptr - 0x12F60|112-0-0-0
5476|data|DCD __libc_csu_init_ptr - 0x12F60|140-0-0-0
5480|data|DCD main_ptr - 0x12F60|144-0-0-0
5484|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x157C)|20-48-159-229
5488|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F60)|20-32-159-229
5492|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
5496|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
5500|code|CMP             R2, #0|0-0-82-227
5504|code|BXEQ            LR|30-255-47-1
5508|code|B               __gmon_start__|44-253-255-234
5512|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x157C|228-25-1-0
5516|data|DCD __gmon_start___ptr_0 - 0x12F60|136-0-0-0
5520|code|LDR             R3, =(__bss_start__ - 0x1598)|7-75
5522|code|LDR             R0, =(__bss_start__ - 0x159C)|8-72
5524|code|ADD             R3, PC; __bss_start__|123-68
5526|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x15A2)|8-74
5528|code|ADD             R0, PC; __bss_start__|120-68
5530|code|ADDS            R3, #3|3-51
5532|code|SUBS            R3, R3, R0|27-26
5534|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5536|code|CMP             R3, #6|6-43
5538|code|BLS             locret_15AC|3-217
5540|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F60)|5-75
5542|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
5544|code|CBZ             R3, locret_15AC|3-177
5546|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
5548|code|BX              LR|112-71
5550|data|ALIGN 0x10|0-191
5552|data|DCD __bss_start__ - 0x1598|64-27-1-0
5556|data|DCD __bss_start__ - 0x159C|60-27-1-0
5560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15A2|190-25-1-0
5564|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F60|120-0-0-0
5568|code|LDR             R1, =(__bss_start__ - 0x15C8)|8-73
5570|code|LDR             R0, =(__bss_start__ - 0x15CC)|9-72
5572|code|ADD             R1, PC; __bss_start__|121-68
5574|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x15D0)|9-75
5576|code|ADD             R0, PC; __bss_start__|120-68
5578|code|SUBS            R1, R1, R0|9-26
5580|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5582|code|ASRS            R1, R1, #2|137-16
5584|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
5588|code|ASRS            R1, R1, #1|73-16
5590|code|BEQ             locret_15E0|3-208
5592|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F60)|5-74
5594|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
5596|code|CBZ             R3, locret_15E0|3-177
5598|code|BX              R3; _ITM_registerTMCloneTable|24-71
5600|code|BX              LR|112-71
5602|data|ALIGN 4|0-191
5604|data|DCD __bss_start__ - 0x15C8|16-27-1-0
5608|data|DCD __bss_start__ - 0x15CC|12-27-1-0
5612|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15D0|144-25-1-0
5616|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F60|152-0-0-0
5620|code|PUSH            {R3,LR}|8-181
5622|code|LDR             R3, =(__bss_start__ - 0x15FE)|10-75
5624|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1600)|10-74
5626|code|ADD             R3, PC; __bss_start__|123-68
5628|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5630|code|LDRB            R3, [R3]|27-120
5632|code|CBNZ            R3, locret_161E|107-185
5634|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F60)|9-75
5636|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5638|code|CBZ             R3, loc_1612|35-177
5640|code|LDR             R3, =(off_13004 - 0x160E)|8-75
5642|code|ADD             R3, PC; off_13004|123-68
5644|code|LDR             R0, [R3]; off_13004 ; void *|24-104
5646|code|BLX             __cxa_finalize|255-247-224-233
5650|code|BL              sub_1590|255-247-189-255
5654|code|LDR             R3, =(__bss_start__ - 0x161E)|6-75
5656|code|MOVS            R2, #1|1-34
5658|code|ADD             R3, PC; __bss_start__|123-68
5660|code|STRB            R2, [R3]|26-112
5662|code|POP             {R3,PC}|8-189
5664|data|DCD __bss_start__ - 0x15FE|218-26-1-0
5668|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1600|96-25-1-0
5672|data|DCD __cxa_finalize_ptr_0 - 0x12F60|116-0-0-0
5676|data|DCD off_13004 - 0x160E|246-25-1-0
5680|data|DCD __bss_start__ - 0x161E|186-26-1-0
5684|code|LDR             R0, =(dword_12E54 - 0x163C)|7-72
5686|code|PUSH            {R3,LR}|8-181
5688|code|ADD             R0, PC; dword_12E54|120-68
5690|code|LDR             R2, [R0]|2-104
5692|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1642)|6-75
5694|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5696|code|CBNZ            R2, loc_1648|18-185
5698|code|POP.W           {R3,LR}|189-232-8-64
5702|code|B               sub_15C0|187-231
5704|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F60)|4-74
5706|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5708|code|CMP             R3, #0|0-43
5710|code|BEQ             loc_1642|248-208
5712|code|BLX             R3; _Jv_RegisterClasses|152-71
5714|code|B               loc_1642|246-231
5716|data|DCD dword_12E54 - 0x163C|24-24-1-0
5720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1642|30-25-1-0
5724|data|DCD _Jv_RegisterClasses_ptr - 0x12F60|148-0-0-0
5728|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5732|code|MOV             R7, R0|7-70
5734|code|LDR             R6, =(off_12E50 - 0x1672)|12-78
5736|code|MOV             R8, R1|136-70
5738|code|LDR             R5, =(off_12E4C - 0x1678)|12-77
5740|code|MOV             R9, R2|145-70
5742|code|ADD             R6, PC; off_12E50|126-68
5744|code|BLX             .init_proc|255-247-158-233
5748|code|ADD             R5, PC; off_12E4C|125-68
5750|code|SUBS            R6, R6, R5|118-27
5752|code|ASRS            R6, R6, #2|182-16
5754|code|BEQ             locret_1692|10-208
5756|code|SUBS            R5, #4|4-61
5758|code|MOVS            R4, #0|0-36
5760|code|ADDS            R4, #1|1-52
5762|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5766|code|MOV             R0, R7|56-70
5768|code|MOV             R1, R8|65-70
5770|code|MOV             R2, R9|74-70
5772|code|BLX             R3|152-71
5774|code|CMP             R4, R6|180-66
5776|code|BNE             loc_1680|246-209
5778|code|POP.W           {R3-R9,PC}|189-232-248-131
5782|data|ALIGN 4|0-191
5784|data|DCD off_12E50 - 0x1672|222-23-1-0
5788|data|DCD off_12E4C - 0x1678|212-23-1-0
5792|code|BX              LR|112-71
5794|data|ALIGN 4|0-191
5796|code|PUSH            {R3,LR}; _fini|8-64-45-233
5800|code|POP             {R3,PC}|8-128-189-232
77388|data|DCD sub_1634+1|53-22-0-0
77392|data|DCD sub_15F4+1|245-21-0-0
77396|data|DCD 0|0-0-0-0
77400|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsmputils1.so.1|1-0-0-0-1-0-0-0
77408|data|Elf32_Dyn <1, <0xE3>>; DT_NEEDED libc.so.6|1-0-0-0-227-0-0-0
77416|data|Elf32_Dyn <1, <0x1A8>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-168-1-0-0
77424|data|Elf32_Dyn <0xC, <0x9B0>>; DT_INIT|12-0-0-0-176-9-0-0
77432|data|Elf32_Dyn <0xD, <0x16A4>>; DT_FINI|13-0-0-0-164-22-0-0
77440|data|Elf32_Dyn <0x19, <0x12E4C>>; DT_INIT_ARRAY|25-0-0-0-76-46-1-0
77448|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77456|data|Elf32_Dyn <0x1A, <0x12E50>>; DT_FINI_ARRAY|26-0-0-0-80-46-1-0
77464|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77472|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77480|data|Elf32_Dyn <5, <0x514>>; DT_STRTAB|5-0-0-0-20-5-0-0
77488|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77496|data|Elf32_Dyn <0xA, <0x249>>; DT_STRSZ|10-0-0-0-73-2-0-0
77504|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77512|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77520|data|Elf32_Dyn <3, <0x12F60>>; DT_PLTGOT|3-0-0-0-96-47-1-0
77528|data|Elf32_Dyn <2, <0xC8>>; DT_PLTRELSZ|2-0-0-0-200-0-0-0
77536|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77544|data|Elf32_Dyn <0x17, <0x8E8>>; DT_JMPREL|23-0-0-0-232-8-0-0
77552|data|Elf32_Dyn <0x11, <0x810>>; DT_REL|17-0-0-0-16-8-0-0
77560|data|Elf32_Dyn <0x12, <0xD8>>; DT_RELSZ|18-0-0-0-216-0-0-0
77568|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77576|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77584|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77592|data|Elf32_Dyn <0x6FFFFFFE, <0x7C0>>; DT_VERNEED|254-255-255-111-192-7-0-0
77600|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77608|data|Elf32_Dyn <0x6FFFFFF0, <0x75E>>; DT_VERSYM|240-255-255-111-94-7-0-0
77616|data|Elf32_Dyn <0x6FFFFFFA, <0x12>>; DT_RELCOUNT|250-255-255-111-18-0-0-0
77624|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77664|data|DCD stru_12E58|88-46-1-0
77668|data|DCD 0|0-0-0-0
77672|data|DCD dword_0|0-0-0-0
77676|data|DCD __imp___cxa_finalize|224-48-1-0
77680|data|DCD __imp_smp_initiator_close|228-48-1-0
77684|data|DCD __imp_dStrHex|232-48-1-0
77688|data|DCD __imp___stack_chk_fail|244-48-1-0
77692|data|DCD __imp_smp_is_naa5|248-48-1-0
77696|data|DCD __imp_fwrite|0-49-1-0
77700|data|DCD __imp_getenv|4-49-1-0
77704|data|DCD __imp_puts|8-49-1-0
77708|data|DCD __imp___libc_start_main|12-49-1-0
77712|data|DCD __imp___gmon_start__|84-49-1-0
77716|data|DCD __imp_getopt_long|16-49-1-0
77720|data|DCD __imp_strchr|20-49-1-0
77724|data|DCD __imp_smp_send_req|24-49-1-0
77728|data|DCD __imp___isoc99_sscanf|28-49-1-0
77732|data|DCD __imp_memset|32-49-1-0
77736|data|DCD __imp_putchar|36-49-1-0
77740|data|DCD __imp_strncpy|40-49-1-0
77744|data|DCD __imp___printf_chk|44-49-1-0
77748|data|DCD __imp___fprintf_chk|48-49-1-0
77752|data|DCD __imp_fputc|52-49-1-0
77756|data|DCD __imp_smp_get_llnum|56-49-1-0
77760|data|DCD __imp_smp_get_func_res_str|60-49-1-0
77764|data|DCD __imp_smp_get_num|64-49-1-0
77768|data|DCD __imp_smp_initiator_open|68-49-1-0
77772|data|DCD __imp_abort|76-49-1-0
77776|data|DCD __libc_csu_fini+1|161-22-0-0
77780|data|DCD __imp___cxa_finalize|224-48-1-0
77784|data|DCD _ITM_deregisterTMCloneTable|80-49-1-0
77788|data|DCD __stack_chk_guard|236-48-1-0
77792|data|DCD optind|240-48-1-0
77796|data|DCD stderr|252-48-1-0
77800|data|DCD __imp___gmon_start__|84-49-1-0
77804|data|DCD __libc_csu_init+1|97-22-0-0
77808|data|DCD main+1|253-10-0-0
77812|data|DCD _Jv_RegisterClasses|88-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|92-49-1-0
77820|data|DCD optarg|72-49-1-0
78040|data|% 1; Alternative name is '__bss_start'|255
