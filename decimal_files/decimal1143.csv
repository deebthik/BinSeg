address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|37-147-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x30AC; SHT file offset|172-48-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1D; Number of entries in SHT|29-0
32818|data|DCW 0x1C; SHT entry index for string table|28-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x2C68; File offset|104-44-0-0
32828|data|DCD unk_AC68; Virtual address|104-172-0-0
32832|data|DCD 0xAC68; Physical address|104-172-0-0
32836|data|DCD 0x110; Size in file image|16-1-0-0
32840|data|DCD 0x110; Size in memory image|16-1-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibLdLinuxArmh; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x19; Size in file image|25-0-0-0
32904|data|DCD 0x19; Size in memory image|25-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x2D7C; Size in file image|124-45-0-0
32936|data|DCD 0x2D7C; Size in memory image|124-45-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x2D7C; File offset|124-45-0-0
32956|data|DCD off_12D7C; Virtual address|124-45-1-0
32960|data|DCD 0x12D7C; Physical address|124-45-1-0
32964|data|DCD 0x200; Size in file image|0-2-0-0
32968|data|DCD 0x270; Size in memory image|112-2-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x2D88; File offset|136-45-0-0
32988|data|DCD stru_12D88; Virtual address|136-45-1-0
32992|data|DCD 0x12D88; Physical address|136-45-1-0
32996|data|DCD 0x110; Size in file image|16-1-0-0
33000|data|DCD 0x110; Size in memory image|16-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x150; File offset|80-1-0-0
33020|data|DCD dword_8150; Virtual address|80-129-0-0
33024|data|DCD 0x8150; Physical address|80-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
33101|data|DCB 0, 0, 0|0-0-0
33104|data|DCD 4; Name Size|4-0-0-0
33108|data|DCD 0x10; Desc Size|16-0-0-0
33112|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33116|data|DCB "GNU",0; Name|71-78-85-0
33120|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33136|data|DCD 4; Name Size|4-0-0-0
33140|data|DCD 0x14; Desc Size|20-0-0-0
33144|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33148|data|DCB "GNU",0; Name|71-78-85-0
33152|data|DCB 0x1B, 0xFD, 0x5F, 0x70, 0x21, 0xD8, 0x99, 0xD1, 0xAA; Desc|27-253-95-112-33-216-153-209-170-37-6-226-89-8-226-77-216-38-246-32
33172|data|DCD 0x25|37-0-0-0
33176|data|DCD 0x3C|60-0-0-0
33180|data|DCD 0, 0x2B, 0x13, 0, 0x33, 4, 5, 0, 0x36, 0x14, 0xC, 0|0-0-0-0-43-0-0-0-19-0-0-0-0-0-0-0-51-0-0-0-4-0-0-0-5-0-0-0-0-0-0-0-54-0-0-0-20-0-0-0-12-0-0-0-0-0-0-0-7-0-0-0-48-0-0-0-34-0-0-0-21-0-0-0-27-0-0-0-50-0-0-0-56-0-0-0-47-0-0-0-33-0-0-0-59-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-35-0-0-0-52-0-0-0-9-0-0-0-32-0-0-0-0-0-0-0-29-0-0-0-15-0-0-0-22-0-0-0-53-0-0-0-0-0-0-0-36-0-0-0
33328|data|DCD 0, 0x2A, 0, 0, 0x1A, 0, 0, 8, 0, 0, 0x10, 0x29, 0x18|0-0-0-0-42-0-0-0-0-0-0-0-0-0-0-0-26-0-0-0-0-0-0-0-0-0-0-0-8-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-41-0-0-0-24-0-0-0-0-0-0-0-38-0-0-0-0-0-0-0-0-0-0-0-40-0-0-0-57-0-0-0-49-0-0-0-31-0-0-0-18-0-0-0-23-0-0-0-0-0-0-0-0-0-0-0-6-0-0-0-0-0-0-0-28-0-0-0-11-0-0-0-13-0-0-0-14-0-0-0-0-0-0-0-25-0-0-0-0-0-0-0-10-0-0-0-58-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-17-0-0-0-0-0-0-0-44-0-0-0-46-0-0-0-0-0-0-0-0-0-0-0-1-0-0-0-37-0-0-0-0-0-0-0-2-0-0-0-0-0-0-0-0-0-0-0-39-0-0-0-55-0-0-0-30-0-0-0
33568|data|DCD 0x25|37-0-0-0
33572|data|DCD 5|5-0-0-0
33576|data|DCD 0x10|16-0-0-0
33580|data|DCD 9|9-0-0-0
33584|data|DCD 0x487401A1, 0x82004080, 0x48002800, 0x16151142, 0x11100080|161-1-116-72-128-64-0-130-0-40-0-72-66-17-21-22-128-0-16-17-8-32-6-0-32-80-8-16-0-170-136-0-0-128-2-40-138-65-1-82-66-0-1-4-56-0-72-33-160-17-11-36-128-32-8-128-9-37-0-48-9-16-17-64
33648|data|DCD 5, 6, 0, 8, 9, 0xA, 0xC, 0xD, 0xE, 0x10, 0x11, 0x13|5-0-0-0-6-0-0-0-0-0-0-0-8-0-0-0-9-0-0-0-10-0-0-0-12-0-0-0-13-0-0-0-14-0-0-0-16-0-0-0-17-0-0-0-19-0-0-0-22-0-0-0-23-0-0-0-28-0-0-0-0-0-0-0-29-0-0-0-0-0-0-0-30-0-0-0-0-0-0-0-33-0-0-0-34-0-0-0-35-0-0-0-36-0-0-0-37-0-0-0-40-0-0-0-42-0-0-0-44-0-0-0-0-0-0-0-46-0-0-0-47-0-0-0-49-0-0-0-0-0-0-0-50-0-0-0-52-0-0-0-55-0-0-0-57-0-0-0
33796|data|DCD 0xBAD299E1, 0xF51166DC, 0x7C9C607D, 0xE6854B87, 0xEE955CD|225-153-210-186-220-102-17-245-125-96-156-124-135-75-133-230-205-85-233-14-124-139-115-15-201-129-10-210-163-90-239-144-135-240-150-124-64-77-157-124-149-120-158-124-47-78-61-246-154-145-8-255-167-155-147-28-96-152-239-18-56-242-139-28-5-80-133-27-63-249-255-188-124-237-17-15-146-139-133-27-40-29-140-28-192-57-16-118-145-25-230-224-91-154-59-15-157-99-189-197-194-59-121-28-246-82-233-14-63-126-150-124-121-73-107-182-31-246-92-16-121-104-135-255-179-162-247-18-254-199-60-16-6-164-135-255-1-104-5-166-32-207-9-253-81-181-168-16-190-39-21-54-95-150-147-28-120-139-135-255-237-222-147-28-123-232-86-142-206-74-174-255-115-71-156-124-105-228-117-15-56-33-226-15-9-44-174-255-124-76-92-116-244-97-14-236-205-138-252-249-242-22-230-245-17-123-156-124-22-234-118-254-26-159-214-189-61-7-212-5
34016|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34032|data|Elf32_Sym <aAeabiUnwindCpp - byte_88A0, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|118-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
34048|data|Elf32_Sym <aGmonStart - byte_88A0, 0, 0, 0x20, 0, 0>; "__gmon_start__"|179-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34064|data|Elf32_Sym <aJvRegisterclas - byte_88A0, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|17-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34080|data|Elf32_Sym <aAeabiUnwindCpp_0 - byte_88A0, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr1"|141-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
34096|data|Elf32_Sym <aPthreadCreate - byte_88A0, pthread_create, 0, 0x12, 0, 0>; "pthread_create"|68-0-0-0-120-143-0-0-0-0-0-0-18-0-0-0
34112|data|Elf32_Sym <aCxaEndCleanup - byte_88A0, __cxa_end_cleanup, 0, 0x12, 0, \; "__cxa_end_cleanup"|241-0-0-0-0-143-0-0-0-0-0-0-18-0-0-0
34128|data|Elf32_Sym <aPoll - byte_88A0, poll, 0, 0x12, 0, 0>; "poll"|11-2-0-0-36-144-0-0-0-0-0-0-18-0-0-0
34144|data|Elf32_Sym <aGettimeofday - byte_88A0, gettimeofday, 0, 0x12, 0, 0>; "gettimeofday"|91-2-0-0-72-143-0-0-0-0-0-0-18-0-0-0
34160|data|Elf32_Sym <aZnwj - byte_88A0, _Znwj, 0, 0x12, 0, 0>; "_Znwj" ...|194-0-0-0-180-143-0-0-0-0-0-0-18-0-0-0
34176|data|Elf32_Sym <aFopen - byte_88A0, fopen, 0, 0x12, 0, 0>; "fopen"|199-1-0-0-244-142-0-0-0-0-0-0-18-0-0-0
34192|data|Elf32_Sym <aZtvn10Cxxabiv1_0 - byte_88A0, \; "_ZTVN10__cxxabiv117__class_type_infoE" ...|56-1-0-0-128-47-1-0-44-0-0-0-17-0-26-0
34208|data|Elf32_Sym <aLseek64 - byte_88A0, lseek64, 0, 0x12, 0, 0>; "lseek64"|145-0-0-0-12-144-0-0-0-0-0-0-18-0-0-0
34224|data|Elf32_Sym <aFree - byte_88A0, free, 0, 0x12, 0, 0>; "free"|174-2-0-0-36-143-0-0-0-0-0-0-18-0-0-0
34240|data|Elf32_Sym <aRead - byte_88A0, read, 0, 0x12, 0, 0>; "read"|153-0-0-0-48-143-0-0-0-0-0-0-18-0-0-0
34256|data|Elf32_Sym <aLocaltime+5 - byte_88A0, time, 0, 0x12, 0, 0>; "time"|109-2-0-0-232-143-0-0-0-0-0-0-18-0-0-0
34272|data|Elf32_Sym <aLibcStartMain - byte_88A0, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|156-2-0-0-156-142-0-0-0-0-0-0-18-0-0-0
34288|data|Elf32_Sym <aGetgrnam - byte_88A0, getgrnam, 0, 0x12, 0, 0>; "getgrnam"|16-2-0-0-208-142-0-0-0-0-0-0-18-0-0-0
34304|data|Elf32_Sym <aStrdup - byte_88A0, strdup, 0, 0x12, 0, 0>; "strdup"|230-1-0-0-0-144-0-0-0-0-0-0-18-0-0-0
34320|data|Elf32_Sym <aOpen64 - byte_88A0, open64, 0, 0x12, 0, 0>; "open64"|83-0-0-0-156-143-0-0-0-0-0-0-18-0-0-0
34336|data|Elf32_Sym <aStderr - byte_88A0, stderr, 4, 0x11, 0, 0x1A>; "stderr"|70-2-0-0-224-47-1-0-4-0-0-0-17-0-26-0
34352|data|Elf32_Sym <aSetgid - byte_88A0, setgid, 0, 0x12, 0, 0>; "setgid"|142-2-0-0-120-144-0-0-0-0-0-0-18-0-0-0
34368|data|Elf32_Sym <aFprintf - byte_88A0, fprintf, 0, 0x12, 0, 0>; "fprintf"|114-2-0-0-244-143-0-0-0-0-0-0-18-0-0-0
34384|data|Elf32_Sym <aAbort - byte_88A0, abort, 0, 0x12, 0, 0>; "abort"|224-1-0-0-120-142-0-0-0-0-0-0-18-0-0-0
34400|data|Elf32_Sym <aSetuid - byte_88A0, setuid, 0, 0x12, 0, 0>; "setuid"|187-1-0-0-84-143-0-0-0-0-0-0-18-0-0-0
34416|data|Elf32_Sym <aStdout - byte_88A0, stdout, 4, 0x11, 0, 0x1A>; "stdout"|25-2-0-0-220-47-1-0-4-0-0-0-17-0-26-0
34432|data|Elf32_Sym <aAeabiIdiv - byte_88A0, __aeabi_idiv, 0, 0x12, 0, 0>; "__aeabi_idiv"|164-1-0-0-84-144-0-0-0-0-0-0-18-0-0-0
34448|data|Elf32_Sym <aPthreadAttrDes - byte_88A0, pthread_attr_destroy, 0, 0x12,\; "pthread_attr_destroy"|124-0-0-0-96-144-0-0-0-0-0-0-18-0-0-0
34464|data|Elf32_Sym <aFclose+1 - byte_88A0, close, 0, 0x12, 0, 0>; "close"|43-2-0-0-196-143-0-0-0-0-0-0-18-0-0-0
34480|data|Elf32_Sym <aZtvn10Cxxabiv1 - byte_88A0, \; "_ZTVN10__cxxabiv120__si_class_type_info"... ...|200-0-0-0-176-47-1-0-44-0-0-0-17-0-26-0
34496|data|Elf32_Sym <aSscanf - byte_88A0, sscanf, 0, 0x12, 0, 0>; "sscanf"|56-2-0-0-96-143-0-0-0-0-0-0-18-0-0-0
34512|data|Elf32_Sym <aZnaj - byte_88A0, _Znaj, 0, 0x12, 0, 0>; "_Znaj" ...|3-1-0-0-220-143-0-0-0-0-0-0-18-0-0-0
34528|data|Elf32_Sym <aExit - byte_88A0, exit, 0, 0x12, 0, 0>; "exit"|194-1-0-0-168-144-0-0-0-0-0-0-18-0-0-0
34544|data|Elf32_Sym <aGxxPersonality - byte_88A0, __gxx_personality_v0, 0, 0x12,\; "__gxx_personality_v0"|35-1-0-0-132-144-0-0-0-0-0-0-18-0-0-0
34560|data|Elf32_Sym <aSleep - byte_88A0, sleep, 0, 0x12, 0, 0>; "sleep"|128-2-0-0-48-144-0-0-0-0-0-0-18-0-0-0
34576|data|Elf32_Sym <aGetgid - byte_88A0, getgid, 0, 0x12, 0, 0>; "getgid"|49-2-0-0-204-144-0-0-0-0-0-0-18-0-0-0
34592|data|Elf32_Sym <aOptarg - byte_88A0, optarg, 4, 0x11, 0, 0x1A>; "optarg"|63-2-0-0-228-47-1-0-4-0-0-0-17-0-26-0
34608|data|Elf32_Sym <aQsort - byte_88A0, qsort, 0, 0x12, 0, 0>; "qsort"|122-2-0-0-108-142-0-0-0-0-0-0-18-0-0-0
34624|data|Elf32_Sym <aGetuid - byte_88A0, getuid, 0, 0x12, 0, 0>; "getuid"|77-2-0-0-24-143-0-0-0-0-0-0-18-0-0-0
34640|data|Elf32_Sym <aCxaPureVirtual - byte_88A0, __cxa_pure_virtual, 0, 0x12, \; "__cxa_pure_virtual"|9-1-0-0-168-143-0-0-0-0-0-0-18-0-0-0
34656|data|Elf32_Sym <aFclose - byte_88A0, fclose, 0, 0x12, 0, 0>; "fclose"|42-2-0-0-196-142-0-0-0-0-0-0-18-0-0-0
34672|data|Elf32_Sym <aFwrite+1 - byte_88A0, write, 0, 0x12, 0, 0>; "write"|85-2-0-0-60-143-0-0-0-0-0-0-18-0-0-0
34688|data|Elf32_Sym <aLocaltime - byte_88A0, localtime, 0, 0x12, 0, 0>; "localtime"|104-2-0-0-132-142-0-0-0-0-0-0-18-0-0-0
34704|data|Elf32_Sym <aStrcmp - byte_88A0, strcmp, 0, 0x12, 0, 0>; "strcmp"|149-2-0-0-156-144-0-0-0-0-0-0-18-0-0-0
34720|data|Elf32_Sym <aGetopt - byte_88A0, getopt, 0, 0x12, 0, 0>; "getopt"|4-2-0-0-108-143-0-0-0-0-0-0-18-0-0-0
34736|data|Elf32_Sym <aStrtol - byte_88A0, strtol, 0, 0x12, 0, 0>; "strtol"|237-1-0-0-144-143-0-0-0-0-0-0-18-0-0-0
34752|data|Elf32_Sym <aPthreadAttrIni - byte_88A0, pthread_attr_init, 0, 0x12, 0,\; "pthread_attr_init"|37-0-0-0-24-144-0-0-0-0-0-0-18-0-0-0
34768|data|Elf32_Sym <aGetpwuid - byte_88A0, getpwuid, 0, 0x12, 0, 0>; "getpwuid"|210-1-0-0-132-143-0-0-0-0-0-0-18-0-0-0
34784|data|Elf32_Sym <aPipe - byte_88A0, pipe, 0, 0x12, 0, 0>; "pipe"|205-1-0-0-144-144-0-0-0-0-0-0-18-0-0-0
34800|data|Elf32_Sym <aFsync - byte_88A0, fsync, 0, 0x12, 0, 0>; "fsync"|158-0-0-0-12-143-0-0-0-0-0-0-18-0-0-0
34816|data|Elf32_Sym <aLseek - byte_88A0, lseek, 0, 0x12, 0, 0>; "lseek"|90-0-0-0-108-144-0-0-0-0-0-0-18-0-0-0
34832|data|Elf32_Sym <aGetpwnam - byte_88A0, getpwnam, 0, 0x12, 0, 0>; "getpwnam"|244-1-0-0-192-144-0-0-0-0-0-0-18-0-0-0
34848|data|Elf32_Sym <aPthreadAttrSet - byte_88A0, pthread_attr_setdetachstate, \; "pthread_attr_setdetachstate"|96-0-0-0-144-142-0-0-0-0-0-0-18-0-0-0
34864|data|Elf32_Sym <aZdlpv - byte_88A0, _ZdlPv, 0, 0x12, 0, 0>; "_ZdlPv" ...|28-1-0-0-184-142-0-0-0-0-0-0-18-0-0-0
34880|data|Elf32_Sym <aGetrusage - byte_88A0, getrusage, 0, 0x12, 0, 0>; "getrusage"|32-2-0-0-232-142-0-0-0-0-0-0-18-0-0-0
34896|data|Elf32_Sym <aCalloc - byte_88A0, calloc, 0, 0x12, 0, 0>; "calloc"|253-1-0-0-220-142-0-0-0-0-0-0-18-0-0-0
34912|data|Elf32_Sym <aPuts - byte_88A0, puts, 0, 0x12, 0, 0>; "puts"|219-1-0-0-72-144-0-0-0-0-0-0-18-0-0-0
34928|data|Elf32_Sym <aFwrite - byte_88A0, fwrite, 0, 0x12, 0, 0>; "fwrite"|84-2-0-0-208-143-0-0-0-0-0-0-18-0-0-0
34944|data|Elf32_Sym <aMemmove - byte_88A0, memmove, 0, 0x12, 0, 0>; "memmove"|134-2-0-0-60-144-0-0-0-0-0-0-18-0-0-0
34960|data|Elf32_Sym <aPthreadJoin - byte_88A0, pthread_join, 0, 0x12, 0, 0>; "pthread_join"|55-0-0-0-180-144-0-0-0-0-0-0-18-0-0-0
34976|data|DCB 0|0
34977|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
34993|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
35013|data|DCB "pthread_attr_init",0|112-116-104-114-101-97-100-95-97-116-116-114-95-105-110-105-116-0
35031|data|DCB "pthread_join",0|112-116-104-114-101-97-100-95-106-111-105-110-0
35044|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
35059|data|DCB "open64",0|111-112-101-110-54-52-0
35066|data|DCB "lseek",0|108-115-101-101-107-0
35072|data|DCB "pthread_attr_setdetachstate",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-100-101-116-97-99-104-115-116-97-116-101-0
35100|data|DCB "pthread_attr_destroy",0|112-116-104-114-101-97-100-95-97-116-116-114-95-100-101-115-116-114-111-121-0
35121|data|DCB "lseek64",0|108-115-101-101-107-54-52-0
35129|data|DCB "read",0|114-101-97-100-0
35134|data|DCB "fsync",0|102-115-121-110-99-0
35140|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
35155|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
35170|data|DCB "_Znwj",0|95-90-110-119-106-0
35176|data|DCB "_ZTVN10__cxxabiv120__si_class_type_infoE",0|95-90-84-86-78-49-48-95-95-99-120-120-97-98-105-118-49-50-48-95-95-115-105-95-99-108-97-115-115-95-116-121-112-101-95-105-110-102-111-69-0
35217|data|DCB "__cxa_end_cleanup",0|95-95-99-120-97-95-101-110-100-95-99-108-101-97-110-117-112-0
35235|data|DCB "_Znaj",0|95-90-110-97-106-0
35241|data|DCB "__cxa_pure_virtual",0|95-95-99-120-97-95-112-117-114-101-95-118-105-114-116-117-97-108-0
35260|data|DCB "_ZdlPv",0|95-90-100-108-80-118-0
35267|data|DCB "__gxx_personality_v0",0|95-95-103-120-120-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
35288|data|DCB "_ZTVN10__cxxabiv117__class_type_infoE",0|95-90-84-86-78-49-48-95-95-99-120-120-97-98-105-118-49-49-55-95-95-99-108-97-115-115-95-116-121-112-101-95-105-110-102-111-69-0
35326|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
35336|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
35350|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
35373|data|DCB "__aeabi_unwind_cpp_pr1",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-49-0
35396|data|DCB "__aeabi_idiv",0|95-95-97-101-97-98-105-95-105-100-105-118-0
35409|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
35419|data|DCB "setuid",0|115-101-116-117-105-100-0
35426|data|DCB "exit",0|101-120-105-116-0
35431|data|DCB "fopen",0|102-111-112-101-110-0
35437|data|DCB "pipe",0|112-105-112-101-0
35442|data|DCB "getpwuid",0|103-101-116-112-119-117-105-100-0
35451|data|DCB "puts",0|112-117-116-115-0
35456|data|DCB "abort",0|97-98-111-114-116-0
35462|data|DCB "strdup",0|115-116-114-100-117-112-0
35469|data|DCB "strtol",0|115-116-114-116-111-108-0
35476|data|DCB "getpwnam",0|103-101-116-112-119-110-97-109-0
35485|data|DCB "calloc",0|99-97-108-108-111-99-0
35492|data|DCB "getopt",0|103-101-116-111-112-116-0
35499|data|DCB "poll",0|112-111-108-108-0
35504|data|DCB "getgrnam",0|103-101-116-103-114-110-97-109-0
35513|data|DCB "stdout",0|115-116-100-111-117-116-0
35520|data|DCB "getrusage",0|103-101-116-114-117-115-97-103-101-0
35530|data|DCB "fclose",0|102-99-108-111-115-101-0
35537|data|DCB "getgid",0|103-101-116-103-105-100-0
35544|data|DCB "sscanf",0|115-115-99-97-110-102-0
35551|data|DCB "optarg",0|111-112-116-97-114-103-0
35558|data|DCB "stderr",0|115-116-100-101-114-114-0
35565|data|DCB "getuid",0|103-101-116-117-105-100-0
35572|data|DCB "fwrite",0|102-119-114-105-116-101-0
35579|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
35592|data|DCB "localtime",0|108-111-99-97-108-116-105-109-101-0
35602|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
35610|data|DCB "qsort",0|113-115-111-114-116-0
35616|data|DCB "sleep",0|115-108-101-101-112-0
35622|data|DCB "memmove",0|109-101-109-109-111-118-101-0
35630|data|DCB "setgid",0|115-101-116-103-105-100-0
35637|data|DCB "strcmp",0|115-116-114-99-109-112-0
35644|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
35662|data|DCB "free",0|102-114-101-101-0
35667|data|DCB "CXXABI_1.3",0|67-88-88-65-66-73-95-49-46-51-0
35678|data|DCB "GLIBCXX_3.4",0|71-76-73-66-67-88-88-95-51-46-52-0
35690|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
35698|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
35708|data|DCW 0|0-0
35710|data|DCW 4; __aeabi_unwind_cpp_pr0@@GCC_3.5|4-0
35712|data|DCW 0; local  symbol: __gmon_start__|0-0
35714|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
35716|data|DCW 4; __aeabi_unwind_cpp_pr1@@GCC_3.5|4-0
35718|data|DCW 3; pthread_create@@GLIBC_2.4|3-0
35720|data|DCW 6; __cxa_end_cleanup@@CXXABI_1.3|6-0
35722|data|DCW 2; poll@@GLIBC_2.4|2-0
35724|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
35726|data|DCW 5; _Znwj@@GLIBCXX_3.4|5-0
35728|data|DCW 2; fopen@@GLIBC_2.4|2-0
35730|data|DCW 6; _ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3|6-0
35732|data|DCW 3; lseek64@@GLIBC_2.4|3-0
35734|data|DCW 2; free@@GLIBC_2.4|2-0
35736|data|DCW 3; read@@GLIBC_2.4|3-0
35738|data|DCW 2; time@@GLIBC_2.4|2-0
35740|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
35742|data|DCW 2; getgrnam@@GLIBC_2.4|2-0
35744|data|DCW 2; strdup@@GLIBC_2.4|2-0
35746|data|DCW 3; open64@@GLIBC_2.4|3-0
35748|data|DCW 2; stderr@@GLIBC_2.4|2-0
35750|data|DCW 2; setgid@@GLIBC_2.4|2-0
35752|data|DCW 2; fprintf@@GLIBC_2.4|2-0
35754|data|DCW 2; abort@@GLIBC_2.4|2-0
35756|data|DCW 2; setuid@@GLIBC_2.4|2-0
35758|data|DCW 2; stdout@@GLIBC_2.4|2-0
35760|data|DCW 4; __aeabi_idiv@@GCC_3.5|4-0
35762|data|DCW 3; pthread_attr_destroy@@GLIBC_2.4|3-0
35764|data|DCW 3; close@@GLIBC_2.4|3-0
35766|data|DCW 6; _ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3|6-0
35768|data|DCW 2; sscanf@@GLIBC_2.4|2-0
35770|data|DCW 5; _Znaj@@GLIBCXX_3.4|5-0
35772|data|DCW 2; exit@@GLIBC_2.4|2-0
35774|data|DCW 6; __gxx_personality_v0@@CXXABI_1.3|6-0
35776|data|DCW 2; sleep@@GLIBC_2.4|2-0
35778|data|DCW 2; getgid@@GLIBC_2.4|2-0
35780|data|DCW 2; optarg@@GLIBC_2.4|2-0
35782|data|DCW 2; qsort@@GLIBC_2.4|2-0
35784|data|DCW 2; getuid@@GLIBC_2.4|2-0
35786|data|DCW 6; __cxa_pure_virtual@@CXXABI_1.3|6-0
35788|data|DCW 2; fclose@@GLIBC_2.4|2-0
35790|data|DCW 3; write@@GLIBC_2.4|3-0
35792|data|DCW 2; localtime@@GLIBC_2.4|2-0
35794|data|DCW 2; strcmp@@GLIBC_2.4|2-0
35796|data|DCW 2; getopt@@GLIBC_2.4|2-0
35798|data|DCW 2; strtol@@GLIBC_2.4|2-0
35800|data|DCW 3; pthread_attr_init@@GLIBC_2.4|3-0
35802|data|DCW 2; getpwuid@@GLIBC_2.4|2-0
35804|data|DCW 2; pipe@@GLIBC_2.4|2-0
35806|data|DCW 3; fsync@@GLIBC_2.4|3-0
35808|data|DCW 3; lseek@@GLIBC_2.4|3-0
35810|data|DCW 2; getpwnam@@GLIBC_2.4|2-0
35812|data|DCW 3; pthread_attr_setdetachstate@@GLIBC_2.4|3-0
35814|data|DCW 5; _ZdlPv@@GLIBCXX_3.4|5-0
35816|data|DCW 2; getrusage@@GLIBC_2.4|2-0
35818|data|DCW 2; calloc@@GLIBC_2.4|2-0
35820|data|DCW 2; puts@@GLIBC_2.4|2-0
35822|data|DCW 2; fwrite@@GLIBC_2.4|2-0
35824|data|DCW 2; memmove@@GLIBC_2.4|2-0
35826|data|DCW 3; pthread_join@@GLIBC_2.4|3-0
35828|data|Elf32_Verneed <1, 2, aLibstdcSo6 - byte_88A0, 0x10, 0x30>; "libstdc++.so.6"|1-0-2-0-164-0-0-0-16-0-0-0-48-0-0-0
35844|data|Elf32_Vernaux <0x56BAFD3, 0, 6, aCxxabi13 - byte_88A0, 0x10>; "CXXABI_1.3"|211-175-107-5-0-0-6-0-179-2-0-0-16-0-0-0
35860|data|Elf32_Vernaux <0x8922974, 0, 5, aGlibcxx34 - byte_88A0, 0>; "GLIBCXX_3.4"|116-41-146-8-0-0-5-0-190-2-0-0-0-0-0-0
35876|data|Elf32_Verneed <1, 1, aLibgccSSo1 - byte_88A0, 0x10, 0x20>; "libgcc_s.so.1"|1-0-1-0-104-1-0-0-16-0-0-0-32-0-0-0
35892|data|Elf32_Vernaux <0xB792655, 0, 4, aGcc35 - byte_88A0, 0>; "GCC_3.5"|85-38-121-11-0-0-4-0-202-2-0-0-0-0-0-0
35908|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_88A0, 0x10, 0x20>; "libpthread.so.0"|1-0-1-0-1-0-0-0-16-0-0-0-32-0-0-0
35924|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_88A0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-210-2-0-0-0-0-0-0
35940|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_88A0, 0x10, 0>; "libc.so.6"|1-0-1-0-177-1-0-0-16-0-0-0-0-0-0-0
35956|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_88A0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-210-2-0-0-0-0-0-0
35972|data|Elf32_Rel <0x12F70, 0x215>; R_ARM_GLOB_DAT __gmon_start__|112-47-1-0-21-2-0-0
35980|data|Elf32_Rel <0x12F80, 0xB14>; R_ARM_COPY _ZTVN10__cxxabiv117__class_type_infoE|128-47-1-0-20-11-0-0
35988|data|Elf32_Rel <0x12FB0, 0x1D14>; R_ARM_COPY _ZTVN10__cxxabiv120__si_class_type_infoE|176-47-1-0-20-29-0-0
35996|data|Elf32_Rel <0x12FDC, 0x1914>; R_ARM_COPY stdout|220-47-1-0-20-25-0-0
36004|data|Elf32_Rel <0x12FE0, 0x1414>; R_ARM_COPY stderr|224-47-1-0-20-20-0-0
36012|data|Elf32_Rel <0x12FE4, 0x2414>; R_ARM_COPY optarg|228-47-1-0-20-36-0-0
36020|data|Elf32_Rel <0x12EA4, 0x2516>; R_ARM_JUMP_SLOT qsort|164-46-1-0-22-37-0-0
36028|data|Elf32_Rel <0x12EA8, 0x1716>; R_ARM_JUMP_SLOT abort|168-46-1-0-22-23-0-0
36036|data|Elf32_Rel <0x12EAC, 0x2A16>; R_ARM_JUMP_SLOT localtime|172-46-1-0-22-42-0-0
36044|data|Elf32_Rel <0x12EB0, 0x3416>; R_ARM_JUMP_SLOT pthread_attr_setdetachstate|176-46-1-0-22-52-0-0
36052|data|Elf32_Rel <0x12EB4, 0x1016>; R_ARM_JUMP_SLOT __libc_start_main|180-46-1-0-22-16-0-0
36060|data|Elf32_Rel <0x12EB8, 0x216>; R_ARM_JUMP_SLOT __gmon_start__|184-46-1-0-22-2-0-0
36068|data|Elf32_Rel <0x12EBC, 0x3516>; R_ARM_JUMP_SLOT _ZdlPv|188-46-1-0-22-53-0-0
36076|data|Elf32_Rel <0x12EC0, 0x2816>; R_ARM_JUMP_SLOT fclose|192-46-1-0-22-40-0-0
36084|data|Elf32_Rel <0x12EC4, 0x1116>; R_ARM_JUMP_SLOT getgrnam|196-46-1-0-22-17-0-0
36092|data|Elf32_Rel <0x12EC8, 0x3716>; R_ARM_JUMP_SLOT calloc|200-46-1-0-22-55-0-0
36100|data|Elf32_Rel <0x12ECC, 0x3616>; R_ARM_JUMP_SLOT getrusage|204-46-1-0-22-54-0-0
36108|data|Elf32_Rel <0x12ED0, 0xA16>; R_ARM_JUMP_SLOT fopen|208-46-1-0-22-10-0-0
36116|data|Elf32_Rel <0x12ED4, 0x616>; R_ARM_JUMP_SLOT __cxa_end_cleanup|212-46-1-0-22-6-0-0
36124|data|Elf32_Rel <0x12ED8, 0x3116>; R_ARM_JUMP_SLOT fsync|216-46-1-0-22-49-0-0
36132|data|Elf32_Rel <0x12EDC, 0x2616>; R_ARM_JUMP_SLOT getuid|220-46-1-0-22-38-0-0
36140|data|Elf32_Rel <0x12EE0, 0xD16>; R_ARM_JUMP_SLOT free|224-46-1-0-22-13-0-0
36148|data|Elf32_Rel <0x12EE4, 0xE16>; R_ARM_JUMP_SLOT read|228-46-1-0-22-14-0-0
36156|data|Elf32_Rel <0x12EE8, 0x2916>; R_ARM_JUMP_SLOT write|232-46-1-0-22-41-0-0
36164|data|Elf32_Rel <0x12EEC, 0x816>; R_ARM_JUMP_SLOT gettimeofday|236-46-1-0-22-8-0-0
36172|data|Elf32_Rel <0x12EF0, 0x1816>; R_ARM_JUMP_SLOT setuid|240-46-1-0-22-24-0-0
36180|data|Elf32_Rel <0x12EF4, 0x1E16>; R_ARM_JUMP_SLOT sscanf|244-46-1-0-22-30-0-0
36188|data|Elf32_Rel <0x12EF8, 0x2C16>; R_ARM_JUMP_SLOT getopt|248-46-1-0-22-44-0-0
36196|data|Elf32_Rel <0x12EFC, 0x516>; R_ARM_JUMP_SLOT pthread_create|252-46-1-0-22-5-0-0
36204|data|Elf32_Rel <0x12F00, 0x2F16>; R_ARM_JUMP_SLOT getpwuid|0-47-1-0-22-47-0-0
36212|data|Elf32_Rel <0x12F04, 0x2D16>; R_ARM_JUMP_SLOT strtol|4-47-1-0-22-45-0-0
36220|data|Elf32_Rel <0x12F08, 0x1316>; R_ARM_JUMP_SLOT open64|8-47-1-0-22-19-0-0
36228|data|Elf32_Rel <0x12F0C, 0x2716>; R_ARM_JUMP_SLOT __cxa_pure_virtual|12-47-1-0-22-39-0-0
36236|data|Elf32_Rel <0x12F10, 0x916>; R_ARM_JUMP_SLOT _Znwj|16-47-1-0-22-9-0-0
36244|data|Elf32_Rel <0x12F14, 0x1C16>; R_ARM_JUMP_SLOT close|20-47-1-0-22-28-0-0
36252|data|Elf32_Rel <0x12F18, 0x3916>; R_ARM_JUMP_SLOT fwrite|24-47-1-0-22-57-0-0
36260|data|Elf32_Rel <0x12F1C, 0x1F16>; R_ARM_JUMP_SLOT _Znaj|28-47-1-0-22-31-0-0
36268|data|Elf32_Rel <0x12F20, 0xF16>; R_ARM_JUMP_SLOT time|32-47-1-0-22-15-0-0
36276|data|Elf32_Rel <0x12F24, 0x1616>; R_ARM_JUMP_SLOT fprintf|36-47-1-0-22-22-0-0
36284|data|Elf32_Rel <0x12F28, 0x1216>; R_ARM_JUMP_SLOT strdup|40-47-1-0-22-18-0-0
36292|data|Elf32_Rel <0x12F2C, 0xC16>; R_ARM_JUMP_SLOT lseek64|44-47-1-0-22-12-0-0
36300|data|Elf32_Rel <0x12F30, 0x2E16>; R_ARM_JUMP_SLOT pthread_attr_init|48-47-1-0-22-46-0-0
36308|data|Elf32_Rel <0x12F34, 0x716>; R_ARM_JUMP_SLOT poll|52-47-1-0-22-7-0-0
36316|data|Elf32_Rel <0x12F38, 0x2216>; R_ARM_JUMP_SLOT sleep|56-47-1-0-22-34-0-0
36324|data|Elf32_Rel <0x12F3C, 0x3A16>; R_ARM_JUMP_SLOT memmove|60-47-1-0-22-58-0-0
36332|data|Elf32_Rel <0x12F40, 0x3816>; R_ARM_JUMP_SLOT puts|64-47-1-0-22-56-0-0
36340|data|Elf32_Rel <0x12F44, 0x1A16>; R_ARM_JUMP_SLOT __aeabi_idiv|68-47-1-0-22-26-0-0
36348|data|Elf32_Rel <0x12F48, 0x1B16>; R_ARM_JUMP_SLOT pthread_attr_destroy|72-47-1-0-22-27-0-0
36356|data|Elf32_Rel <0x12F4C, 0x3216>; R_ARM_JUMP_SLOT lseek|76-47-1-0-22-50-0-0
36364|data|Elf32_Rel <0x12F50, 0x1516>; R_ARM_JUMP_SLOT setgid|80-47-1-0-22-21-0-0
36372|data|Elf32_Rel <0x12F54, 0x2116>; R_ARM_JUMP_SLOT __gxx_personality_v0|84-47-1-0-22-33-0-0
36380|data|Elf32_Rel <0x12F58, 0x3016>; R_ARM_JUMP_SLOT pipe|88-47-1-0-22-48-0-0
36388|data|Elf32_Rel <0x12F5C, 0x2B16>; R_ARM_JUMP_SLOT strcmp|92-47-1-0-22-43-0-0
36396|data|Elf32_Rel <0x12F60, 0x2016>; R_ARM_JUMP_SLOT exit|96-47-1-0-22-32-0-0
36404|data|Elf32_Rel <0x12F64, 0x3B16>; R_ARM_JUMP_SLOT pthread_join|100-47-1-0-22-59-0-0
36412|data|Elf32_Rel <0x12F68, 0x3316>; R_ARM_JUMP_SLOT getpwnam|104-47-1-0-22-51-0-0
36420|data|Elf32_Rel <0x12F6C, 0x2316>; R_ARM_JUMP_SLOT getgid|108-47-1-0-22-35-0-0
36428|code|PUSH            {R3,LR}|8-181
36430|code|BL              sub_935C|0-240-133-250
36434|code|NOP|0-191
36436|code|POP             {R3,PC}|8-189
36438|data|DCW 0|0-0
36440|code|PUSH            {LR}|4-224-45-229
36444|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8E68)|4-224-159-229
36448|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
36452|code|LDR             PC, [LR,#8]!|8-240-190-229
36456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8E68|48-160-0-0
36460|code|ADRL            R12, 0x12E74|0-198-143-226-10-202-140-226
36468|code|LDR             PC, [R12,#(qsort_ptr - 0x12E74)]!; __imp_qsort|48-240-188-229
36472|code|ADRL            R12, 0x12E80|0-198-143-226-10-202-140-226
36480|code|LDR             PC, [R12,#(abort_ptr - 0x12E80)]!; __imp_abort|40-240-188-229
36484|code|ADRL            R12, 0x12E8C|0-198-143-226-10-202-140-226
36492|code|LDR             PC, [R12,#(localtime_ptr - 0x12E8C)]!; __imp_localtime|32-240-188-229
36496|code|ADRL            R12, 0x12E98|0-198-143-226-10-202-140-226
36504|code|LDR             PC, [R12,#(pthread_attr_setdetachstate_ptr - 0x12E98)]!; __imp_pthread_attr_setdetachstate|24-240-188-229
36508|code|ADRL            R12, 0x12EA4|0-198-143-226-10-202-140-226
36516|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12EA4)]!; __imp___libc_start_main|16-240-188-229
36520|code|BX              PC|120-71
36522|data|ALIGN 4|192-70
36524|code|ADRL            R12, 0x12EB4|0-198-143-226-10-202-140-226
36532|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12EB4)]!; __imp___gmon_start__|4-240-188-229
36536|code|ADR             R12, 0x8EC0|0-198-143-226
36540|code|ADD             R12, R12, #0x9000|9-202-140-226
36544|code|LDR             PC, [R12,#(_ZdlPv_ptr - 0x11EC0)]!; operator delete(void *)|252-255-188-229
36548|code|ADR             R12, 0x8ECC|0-198-143-226
36552|code|ADD             R12, R12, #0x9000|9-202-140-226
36556|code|LDR             PC, [R12,#(fclose_ptr - 0x11ECC)]!; __imp_fclose|244-255-188-229
36560|code|ADR             R12, 0x8ED8|0-198-143-226
36564|code|ADD             R12, R12, #0x9000|9-202-140-226
36568|code|LDR             PC, [R12,#(getgrnam_ptr - 0x11ED8)]!; __imp_getgrnam|236-255-188-229
36572|code|ADR             R12, 0x8EE4|0-198-143-226
36576|code|ADD             R12, R12, #0x9000|9-202-140-226
36580|code|LDR             PC, [R12,#(calloc_ptr - 0x11EE4)]!; __imp_calloc|228-255-188-229
36584|code|ADR             R12, 0x8EF0|0-198-143-226
36588|code|ADD             R12, R12, #0x9000|9-202-140-226
36592|code|LDR             PC, [R12,#(getrusage_ptr - 0x11EF0)]!; __imp_getrusage|220-255-188-229
36596|code|ADR             R12, 0x8EFC|0-198-143-226
36600|code|ADD             R12, R12, #0x9000|9-202-140-226
36604|code|LDR             PC, [R12,#(fopen_ptr - 0x11EFC)]!; __imp_fopen|212-255-188-229
36608|code|ADR             R12, 0x8F08|0-198-143-226
36612|code|ADD             R12, R12, #0x9000|9-202-140-226
36616|code|LDR             PC, [R12,#(__cxa_end_cleanup_ptr - 0x11F08)]!; __imp___cxa_end_cleanup|204-255-188-229
36620|code|ADR             R12, 0x8F14|0-198-143-226
36624|code|ADD             R12, R12, #0x9000|9-202-140-226
36628|code|LDR             PC, [R12,#(fsync_ptr - 0x11F14)]!; __imp_fsync|196-255-188-229
36632|code|ADR             R12, 0x8F20|0-198-143-226
36636|code|ADD             R12, R12, #0x9000|9-202-140-226
36640|code|LDR             PC, [R12,#(getuid_ptr - 0x11F20)]!; __imp_getuid|188-255-188-229
36644|code|ADR             R12, 0x8F2C|0-198-143-226
36648|code|ADD             R12, R12, #0x9000|9-202-140-226
36652|code|LDR             PC, [R12,#(free_ptr - 0x11F2C)]!; __imp_free|180-255-188-229
36656|code|ADR             R12, 0x8F38|0-198-143-226
36660|code|ADD             R12, R12, #0x9000|9-202-140-226
36664|code|LDR             PC, [R12,#(read_ptr - 0x11F38)]!; __imp_read|172-255-188-229
36668|code|ADR             R12, 0x8F44|0-198-143-226
36672|code|ADD             R12, R12, #0x9000|9-202-140-226
36676|code|LDR             PC, [R12,#(write_ptr - 0x11F44)]!; __imp_write|164-255-188-229
36680|code|ADR             R12, 0x8F50|0-198-143-226
36684|code|ADD             R12, R12, #0x9000|9-202-140-226
36688|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x11F50)]!; __imp_gettimeofday|156-255-188-229
36692|code|ADR             R12, 0x8F5C|0-198-143-226
36696|code|ADD             R12, R12, #0x9000|9-202-140-226
36700|code|LDR             PC, [R12,#(setuid_ptr - 0x11F5C)]!; __imp_setuid|148-255-188-229
36704|code|ADR             R12, 0x8F68|0-198-143-226
36708|code|ADD             R12, R12, #0x9000|9-202-140-226
36712|code|LDR             PC, [R12,#(sscanf_ptr - 0x11F68)]!; __imp_sscanf|140-255-188-229
36716|code|ADR             R12, 0x8F74|0-198-143-226
36720|code|ADD             R12, R12, #0x9000|9-202-140-226
36724|code|LDR             PC, [R12,#(getopt_ptr - 0x11F74)]!; __imp_getopt|132-255-188-229
36728|code|ADR             R12, 0x8F80|0-198-143-226
36732|code|ADD             R12, R12, #0x9000|9-202-140-226
36736|code|LDR             PC, [R12,#(pthread_create_ptr - 0x11F80)]!; __imp_pthread_create|124-255-188-229
36740|code|ADR             R12, 0x8F8C|0-198-143-226
36744|code|ADD             R12, R12, #0x9000|9-202-140-226
36748|code|LDR             PC, [R12,#(getpwuid_ptr - 0x11F8C)]!; __imp_getpwuid|116-255-188-229
36752|code|ADR             R12, 0x8F98|0-198-143-226
36756|code|ADD             R12, R12, #0x9000|9-202-140-226
36760|code|LDR             PC, [R12,#(strtol_ptr - 0x11F98)]!; __imp_strtol|108-255-188-229
36764|code|ADR             R12, 0x8FA4|0-198-143-226
36768|code|ADD             R12, R12, #0x9000|9-202-140-226
36772|code|LDR             PC, [R12,#(open64_ptr - 0x11FA4)]!; __imp_open64|100-255-188-229
36776|code|ADR             R12, 0x8FB0|0-198-143-226
36780|code|ADD             R12, R12, #0x9000|9-202-140-226
36784|code|LDR             PC, [R12,#(__cxa_pure_virtual_ptr - 0x11FB0)]!; __imp___cxa_pure_virtual|92-255-188-229
36788|code|ADR             R12, 0x8FBC|0-198-143-226
36792|code|ADD             R12, R12, #0x9000|9-202-140-226
36796|code|LDR             PC, [R12,#(_Znwj_ptr - 0x11FBC)]!; operator new(uint)|84-255-188-229
36800|code|BX              PC|120-71
36802|data|ALIGN 4|192-70
36804|code|ADR             R12, 0x8FCC|0-198-143-226
36808|code|ADD             R12, R12, #0x9000|9-202-140-226
36812|code|LDR             PC, [R12,#(close_ptr - 0x11FCC)]!; __imp_close|72-255-188-229
36816|code|ADR             R12, 0x8FD8|0-198-143-226
36820|code|ADD             R12, R12, #0x9000|9-202-140-226
36824|code|LDR             PC, [R12,#(fwrite_ptr - 0x11FD8)]!; __imp_fwrite|64-255-188-229
36828|code|ADR             R12, 0x8FE4|0-198-143-226
36832|code|ADD             R12, R12, #0x9000|9-202-140-226
36836|code|LDR             PC, [R12,#(_Znaj_ptr - 0x11FE4)]!; operator new[](uint)|56-255-188-229
36840|code|ADR             R12, 0x8FF0|0-198-143-226
36844|code|ADD             R12, R12, #0x9000|9-202-140-226
36848|code|LDR             PC, [R12,#(time_ptr - 0x11FF0)]!; __imp_time|48-255-188-229
36852|code|ADR             R12, 0x8FFC|0-198-143-226
36856|code|ADD             R12, R12, #0x9000|9-202-140-226
36860|code|LDR             PC, [R12,#(fprintf_ptr - 0x11FFC)]!; __imp_fprintf|40-255-188-229
36864|code|ADR             R12, 0x9008|0-198-143-226
36868|code|ADD             R12, R12, #0x9000|9-202-140-226
36872|code|LDR             PC, [R12,#(strdup_ptr - 0x12008)]!; __imp_strdup|32-255-188-229
36876|code|ADR             R12, 0x9014|0-198-143-226
36880|code|ADD             R12, R12, #0x9000|9-202-140-226
36884|code|LDR             PC, [R12,#(lseek64_ptr - 0x12014)]!; __imp_lseek64|24-255-188-229
36888|code|ADR             R12, 0x9020|0-198-143-226
36892|code|ADD             R12, R12, #0x9000|9-202-140-226
36896|code|LDR             PC, [R12,#(pthread_attr_init_ptr - 0x12020)]!; __imp_pthread_attr_init|16-255-188-229
36900|code|ADR             R12, 0x902C|0-198-143-226
36904|code|ADD             R12, R12, #0x9000|9-202-140-226
36908|code|LDR             PC, [R12,#(poll_ptr - 0x1202C)]!; __imp_poll|8-255-188-229
36912|code|ADR             R12, 0x9038|0-198-143-226
36916|code|ADD             R12, R12, #0x9000|9-202-140-226
36920|code|LDR             PC, [R12,#(sleep_ptr - 0x12038)]!; __imp_sleep|0-255-188-229
36924|code|ADR             R12, 0x9044|0-198-143-226
36928|code|ADD             R12, R12, #0x9000|9-202-140-226
36932|code|LDR             PC, [R12,#(memmove_ptr - 0x12044)]!; __imp_memmove|248-254-188-229
36936|code|ADR             R12, 0x9050|0-198-143-226
36940|code|ADD             R12, R12, #0x9000|9-202-140-226
36944|code|LDR             PC, [R12,#(puts_ptr - 0x12050)]!; __imp_puts|240-254-188-229
36948|code|ADR             R12, 0x905C|0-198-143-226
36952|code|ADD             R12, R12, #0x9000|9-202-140-226
36956|code|LDR             PC, [R12,#(__aeabi_idiv_ptr - 0x1205C)]!; __imp___aeabi_idiv|232-254-188-229
36960|code|ADR             R12, 0x9068|0-198-143-226
36964|code|ADD             R12, R12, #0x9000|9-202-140-226
36968|code|LDR             PC, [R12,#(pthread_attr_destroy_ptr - 0x12068)]!; __imp_pthread_attr_destroy|224-254-188-229
36972|code|ADR             R12, 0x9074|0-198-143-226
36976|code|ADD             R12, R12, #0x9000|9-202-140-226
36980|code|LDR             PC, [R12,#(lseek_ptr - 0x12074)]!; __imp_lseek|216-254-188-229
36984|code|ADR             R12, 0x9080|0-198-143-226
36988|code|ADD             R12, R12, #0x9000|9-202-140-226
36992|code|LDR             PC, [R12,#(setgid_ptr - 0x12080)]!; __imp_setgid|208-254-188-229
36996|code|ADR             R12, 0x908C|0-198-143-226
37000|code|ADD             R12, R12, #0x9000|9-202-140-226
37004|code|LDR             PC, [R12,#(__gxx_personality_v0_ptr - 0x1208C)]!; __imp___gxx_personality_v0|200-254-188-229
37008|code|ADR             R12, 0x9098|0-198-143-226
37012|code|ADD             R12, R12, #0x9000|9-202-140-226
37016|code|LDR             PC, [R12,#(pipe_ptr - 0x12098)]!; __imp_pipe|192-254-188-229
37020|code|ADR             R12, 0x90A4|0-198-143-226
37024|code|ADD             R12, R12, #0x9000|9-202-140-226
37028|code|LDR             PC, [R12,#(strcmp_ptr - 0x120A4)]!; __imp_strcmp|184-254-188-229
37032|code|ADR             R12, 0x90B0|0-198-143-226
37036|code|ADD             R12, R12, #0x9000|9-202-140-226
37040|code|LDR             PC, [R12,#(exit_ptr - 0x120B0)]!; __imp_exit|176-254-188-229
37044|code|ADR             R12, 0x90BC|0-198-143-226
37048|code|ADD             R12, R12, #0x9000|9-202-140-226
37052|code|LDR             PC, [R12,#(pthread_join_ptr - 0x120BC)]!; __imp_pthread_join|168-254-188-229
37056|code|ADR             R12, 0x90C8|0-198-143-226
37060|code|ADD             R12, R12, #0x9000|9-202-140-226
37064|code|LDR             PC, [R12,#(getpwnam_ptr - 0x120C8)]!; __imp_getpwnam|160-254-188-229
37068|code|ADR             R12, 0x90D4|0-198-143-226
37072|code|ADD             R12, R12, #0x9000|9-202-140-226
37076|code|LDR             PC, [R12,#(getgid_ptr - 0x120D4)]!; __imp_getgid|152-254-188-229
37080|code|SVCMI           0xF0E92D|45-233-240-79
37084|code|STRMI           R11, [R4],-R1,LSR#1|161-176-4-70
37088|code|STRMI           R10, [LR],-R1,LSL#16|1-168-14-70
37092|data|DCD 0xF9E2F000, 0xF3402C01, 0xF8DF8109, 0xF04FB22C, 0xF8DF0800|0-240-226-249-1-44-64-243-9-129-223-248-44-178-79-240-0-8-223-248-40-146-194-70-130-77-71-70-32-70-49-70-129-74-255-247-50-239-67-28-31-208-192-178-103-40-0-240-203-128-64-216-98-40-99-208-3-216-1-40-5-208-0-240-177-249-99-40-117-208-102-40-249-209-41-104-1-168-74-70-0-240-70-251-32-70-49-70-115-74-213-248-0-176-255-247-20-239-223-248-216-145-67-28-223-209-60-28-24-191-1-36-186-241-0-15-12-191-35-70-68-240-1-3-0-43-64-240-180-128-184-241-0-15-8-208-104-75-90-70-104-73-24-104-255-247-62-239-5-32-255-247-90-239-1-168-0-240-228-249-4-70-2-32-255-247-82-239-1-168-0-240-47-249-32-70-33-176-189-232-240-143-115-40-122-208-25-216-108-40-116-208-114-40-188-209-40-104-31-170-90-73-30-171-255-247-214-238-0-40-0-240-161-128-1-40-31-155-123-208-0-43-26-147-64-243-150-128-30-155-0-43-25-147-151-220-0-240-90-249-117-40-42-208-119-40-162-209-1-35-29-147-152-70-141-231-40-104-30-170-75-73-31-171-255-247-184-238-1-40-8-191-31-144-1-208-2-40-119-209-30-154-31-155-0-42-23-146-28-147-4-221-0-43-2-221-154-66-191-246-119-175-0-240-57-249-0-33-10-34-40-104-255-247-184-238-67-30-24-144-99-43-127-246-107-175-0-240-45-249-0-47-98-209-40-104-255-247-228-238-3-120-7-70-134-70-26-28-24-191-1-34-58-43-12-191-0-34-2-240-1-2-148-70-130-177-65-28-0-34-142-70-17-248-1-59-1-50-24-28-148-70-24-191-1-32-58-43-12-191-0-32-0-240-1-0-0-40-240-209-58-43-127-244-67-175-186-241-0-15-65-209-12-241-1-12-142-248-0-160-7-235-12-10-56-231-213-248-0-144-53-231-0-33-10-34-40-104-255-247-122-238-131-30-27-144-18-43-127-246-44-175-0-240-238-248-186-241-0-15-30-209-213-248-0-160-35-231-0-43-25-147-63-247-32-175-0-240-226-248-1-168-0-240-147-248-255-247-26-238-56-70-81-70-0-34-1-240-68-248-48-185-0-44-63-244-67-175-56-70-255-247-32-238-62-231-1-36-79-231-0-240-204-248-0-240-202-248-0-240-200-248-0-240-198-248-0-240-196-248-0-240-194-248-0-240-192-248-228-47-1-0-40-168-0-0-224-47-1-0-60-168-0-0-32-168-0-0-252-169-0-0-28-168-0-0
37668|code|MOV.W           R11, #0|79-240-0-11
37672|code|MOV.W           LR, #0|79-240-0-14
37676|code|POP.W           {R1}; argc|93-248-4-27
37680|code|MOV             R2, SP; ubp_av|106-70
37682|code|PUSH.W          {R2}; stack_end|77-248-4-45
37686|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
37690|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
37694|code|PUSH.W          {R12}; fini|77-248-4-205
37698|code|LDR             R0, =(loc_90D8+1); main|4-72
37700|code|LDR             R3, =(sub_A5D0+1); init|4-75
37702|code|BLX             __libc_start_main|255-247-170-237
37706|code|BLX             abort|255-247-150-237
37710|data|ALIGN 0x10|0-0
37712|data|DCD nullsub_1+1|21-166-0-0
37716|data|DCD loc_90D8+1|217-144-0-0
37720|data|DCD sub_A5D0+1|209-165-0-0
37724|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9364)|3-75
37726|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12E98)|4-74
37728|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
37730|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
37732|code|CBZ             R3, locret_936A|11-177
37734|code|B.W             sub_8EA8|255-247-159-189
37738|code|BX              LR|112-71
37740|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9364|52-155-0-0
37744|data|DCD __gmon_start___ptr_0 - 0x12E98|216-0-0-0
37748|code|LDR             R3, =byte_12FE8|2-75
37750|code|LDRB            R2, [R3]|26-120
37752|code|CBNZ            R2, locret_937E|10-185
37754|code|MOVS            R2, #1|1-34
37756|code|STRB            R2, [R3]|26-112
37758|code|BX              LR|112-71
37760|data|DCD byte_12FE8|232-47-1-0
37764|code|LDR             R0, =dword_12D84|3-72
37766|code|PUSH            {R3,LR}|8-181
37768|code|LDR             R3, [R0]|3-104
37770|code|CBZ             R3, locret_9392|19-177
37772|code|LDR             R3, =0|2-75
37774|code|CBZ             R3, locret_9392|3-177
37776|code|BLX             R3|152-71
37778|code|POP             {R3,PC}|8-189
37780|data|DCD dword_12D84|132-45-1-0
37784|data|DCD 0|0-0-0-0
37788|code|LDR             R3, [R0,#0x54]|67-109
37790|code|PUSH.W          {R4-R9,LR}|45-233-240-67
37794|code|MOV             R5, R0|5-70
37796|code|LDR             R7, [R0,#0x58]|135-109
37798|code|SUB             SP, SP, #0xC|131-176
37800|code|LDR             R2, [R0,#0xC]|194-104
37802|code|LDR             R3, [R3]|27-104
37804|code|SUBS            R2, #1|1-58
37806|code|LDR             R0, [R0,#0x60]|0-110
37808|code|MOV             R1, R7|57-70
37810|code|LDR.W           R9, [R5,#0x5C]|213-248-92-144
37814|code|LDR.W           R4, [R3,R2,LSL#2]|83-248-34-64
37818|code|BLX             __aeabi_idiv|255-247-76-238
37822|code|LDR             R3, [R5,#0x68]|171-110
37824|code|MOV             R1, R7|57-70
37826|code|LDR             R6, [R5,#8]|174-104
37828|code|MOV             R8, R0|128-70
37830|code|LDR             R0, [R5,#0x64]|104-110
37832|code|STR             R3, [SP,#0x28+var_28]|0-147
37834|code|BLX             __aeabi_idiv|255-247-68-238
37838|code|MOV             R1, R9; whence|73-70
37840|code|MOV             R2, R8|66-70
37842|code|MOV             R3, R6|51-70
37844|code|MOV             R5, R0|5-70
37846|code|MOV             R0, R4; int|32-70
37848|code|STR             R5, [SP,#0x28+var_24]|1-149
37850|code|BL              sub_9EB8|0-240-109-253
37854|code|MOV             R5, R0|5-70
37856|code|MOV             R0, R4|32-70
37858|code|BL              sub_9C94|0-240-87-252
37862|code|MOV             R0, R5|40-70
37864|code|ADD             SP, SP, #0xC|3-176
37866|code|POP.W           {R4-R9,PC}|189-232-240-131
37870|data|ALIGN 0x10|0-191
37872|code|LDR             R3, [R0,#0xC]|195-104
37874|code|LDR             R2, =off_A630|31-74
37876|code|CMP             R3, #0|0-43
37878|code|PUSH            {R4-R6,LR}|112-181
37880|code|MOV             R5, R0|5-70
37882|code|STR             R2, [R0]|2-96
37884|code|BLE             loc_9418|12-221
37886|code|LDR             R0, [R5,#0x48]; void *|168-108
37888|code|CBZ             R0, loc_9406|8-177
37890|code|BLX             _ZdlPv; operator delete(void *)|255-247-90-237
37894|code|LDR             R0, [R5,#0x3C]; void *|232-107
37896|code|CBZ             R0, loc_940E|8-177
37898|code|BLX             _ZdlPv; operator delete(void *)|255-247-86-237
37902|code|MOV             R0, R5|40-70
37904|code|BL              sub_98AC|0-240-76-250
37908|code|MOV             R0, R5|40-70
37910|code|POP             {R4-R6,PC}|112-189
37912|code|LDR             R6, [R0,#0x54]|70-109
37914|code|LDM.W           R6, {R0,R3}|150-232-9-0
37918|code|SUBS            R2, R3, R0|26-26
37920|code|LSRS            R2, R2, #2|146-8
37922|code|BEQ             loc_9446|16-208
37924|code|LDR.W           R4, [R3,#-4]|83-248-4-76
37928|code|CBZ             R4, loc_9438|52-177
37930|code|MOV             R0, R4|32-70
37932|code|BL              sub_9BA0|0-240-184-251
37936|code|MOV             R0, R4; void *|32-70
37938|code|BLX             _ZdlPv; operator delete(void *)|255-247-66-237
37942|code|LDR             R6, [R5,#0x54]|110-109
37944|code|LDM.W           R6, {R0,R3}; void *|150-232-9-0
37948|code|SUBS            R3, #4|4-59
37950|code|STR             R3, [R6,#4]|115-96
37952|code|SUBS            R2, R3, R0|26-26
37954|code|LSRS            R2, R2, #2|146-8
37956|code|BNE             loc_9424|238-209
37958|code|CBZ             R0, loc_944C|8-177
37960|code|BLX             _ZdlPv; operator delete(void *)|255-247-54-237
37964|code|MOV             R0, R6; void *|48-70
37966|code|BLX             _ZdlPv; operator delete(void *)|255-247-52-237
37970|code|B               loc_93FE|212-231
37972|code|LDR             R0, [R5,#0x48]; void *|168-108
37974|code|CBZ             R0, loc_945C|8-177
37976|code|BLX             _ZdlPv; operator delete(void *)|255-247-46-237
37980|code|LDR             R0, [R5,#0x3C]; void *|232-107
37982|code|CBZ             R0, loc_9464|8-177
37984|code|BLX             _ZdlPv; operator delete(void *)|255-247-42-237
37988|code|MOV             R0, R5|40-70
37990|code|BL              sub_98AC|0-240-33-250
37994|code|BLX             __cxa_end_cleanup|255-247-74-237
37998|data|ALIGN 0x10|0-191
38000|data|DCD off_A630|48-166-0-0
38004|code|PUSH            {R4,LR}|16-181
38006|code|MOV             R4, R0|4-70
38008|code|BL              sub_93F0|255-247-186-255
38012|code|MOV             R0, R4; void *|32-70
38014|code|BLX             _ZdlPv; operator delete(void *)|255-247-28-237
38018|code|MOV             R0, R4|32-70
38020|code|POP             {R4,PC}|16-189
38022|data|ALIGN 4|0-191
38024|code|PUSH            {R3,LR}|8-181
38026|code|MOV             R3, #0x12FE0|66-246-224-115-192-242-1-3
38034|code|MOVW            R0, #0xA658|74-242-88-96
38038|code|MOVS            R1, #1; size|1-33
38040|code|MOVT.W          R0, #0; ptr|192-242-0-0
38044|code|LDR             R3, [R3]; s|27-104
38046|code|MOVW            R2, #0x1B5; n|64-242-181-18
38050|code|BLX             fwrite|255-247-150-237
38054|code|MOVS            R0, #1; status|1-32
38056|code|BLX             exit|255-247-254-237
38060|code|PUSH            {R4,LR}|16-181
38062|code|MOV             R4, R0|4-70
38064|code|BL              sub_991C|0-240-52-250
38068|code|LDR             R1, =off_A630|20-73
38070|code|MOVS            R3, #0|0-35
38072|code|MOVS            R2, #1|1-34
38074|code|STR             R3, [R4,#0x3C]|227-99
38076|code|STR             R3, [R4,#0x40]|35-100
38078|code|MOVS            R0, #0xC|12-32
38080|code|STR             R1, [R4]|33-96
38082|code|MOV.W           R1, #0x200|79-244-0-113
38086|code|STR             R3, [R4,#0x44]|99-100
38088|code|STR             R3, [R4,#0x48]|163-100
38090|code|STR             R3, [R4,#0x4C]|227-100
38092|code|STR             R3, [R4,#0x50]|35-101
38094|code|STR             R1, [R4,#0x58]|161-101
38096|code|STR             R2, [R4,#0x5C]|226-101
38098|code|STR             R3, [R4,#0x60]|35-102
38100|code|STR             R3, [R4,#0x64]|99-102
38102|code|STR             R2, [R4,#0x68]|162-102
38104|code|STR             R2, [R4,#0x6C]|226-102
38106|code|STR             R3, [R4,#0x70]|35-103
38108|code|BLX             _Znwj; operator new(uint)|255-247-106-237
38112|code|MOVS            R3, #0|0-35
38114|code|STR             R3, [R0]|3-96
38116|code|STR             R3, [R0,#4]|67-96
38118|code|STR             R3, [R0,#8]|131-96
38120|code|STR             R0, [R4,#0x54]|96-101
38122|code|MOV             R0, R4|32-70
38124|code|POP             {R4,PC}|16-189
38126|code|LDR             R0, [R4,#0x48]|160-108
38128|code|CBZ             R0, loc_94F6|8-177
38130|code|BLX             _ZdlPv; operator delete(void *)|255-247-226-236
38134|code|LDR             R0, [R4,#0x3C]|224-107
38136|code|CBZ             R0, loc_94FE|8-177
38138|code|BLX             _ZdlPv; operator delete(void *)|255-247-222-236
38142|code|MOV             R0, R4|32-70
38144|code|BL              sub_98AC|0-240-212-249
38148|code|BLX             __cxa_end_cleanup|255-247-252-236
38152|data|DCD off_A630|48-166-0-0
38156|code|PUSH            {R3-R7,LR}|248-181
38158|code|MOV             R4, R0|4-70
38160|code|MOV             R5, R2|21-70
38162|code|BL              sub_9940|0-240-21-250
38166|code|ADD.W           R0, R5, #0x60 ; '`'|5-241-96-0
38170|code|LDR.W           R12, [R5,#0x54]|213-248-84-192
38174|code|LDR             R7, [R5,#0x58]|175-109
38176|code|MOVS            R3, #0|0-35
38178|code|LDM             R0, {R0-R2}|7-200
38180|code|LDR             R6, [R5,#0x5C]|238-109
38182|code|LDR             R5, =off_A630|8-77
38184|code|STR             R3, [R4,#0x3C]|227-99
38186|code|STR             R0, [R4,#0x60]|32-102
38188|code|MOV             R0, R4|32-70
38190|code|STR             R5, [R4]|37-96
38192|code|STR             R3, [R4,#0x40]|35-100
38194|code|STR             R3, [R4,#0x44]|99-100
38196|code|STR             R3, [R4,#0x48]|163-100
38198|code|STR             R3, [R4,#0x4C]|227-100
38200|code|STR             R3, [R4,#0x50]|35-101
38202|code|STR.W           R12, [R4,#0x54]|196-248-84-192
38206|code|STR             R7, [R4,#0x58]|167-101
38208|code|STR             R6, [R4,#0x5C]|230-101
38210|code|STR             R1, [R4,#0x64]|97-102
38212|code|STR             R2, [R4,#0x68]|162-102
38214|code|POP             {R3-R7,PC}|248-189
38216|data|DCD off_A630|48-166-0-0
38220|code|PUSH.W          {R4-R8,LR}|45-233-240-65
38224|code|MOV             R4, R0|4-70
38226|code|LDR             R3, [R0,#0x3C]|195-107
38228|code|SUB             SP, SP, #0x18|134-176
38230|code|LDR             R6, [R0,#0x40]|6-108
38232|code|MOVS            R5, #0|0-37
38234|code|SUBS            R6, R6, R3|246-26
38236|code|ASRS            R6, R6, #2|182-16
38238|code|MOV             R8, R6|176-70
38240|code|CBNZ            R6, loc_956C|38-185
38242|code|B               loc_95DE|60-224
38244|code|ADDS            R5, #1|1-53
38246|code|CMP             R5, R6|181-66
38248|code|BEQ             loc_95A2|27-208
38250|code|LDR             R3, [R4,#0x3C]|227-107
38252|code|LDR             R2, [R4,#0x54]|98-109
38254|code|MOVS            R1, #0|0-33
38256|code|LDR             R7, [R4,#0x48]|167-108
38258|code|LDR.W           LR, [R4,#0x6C]|212-248-108-224
38262|code|LDR             R0, [R2]|16-104
38264|code|LDR.W           R12, [R7,R5,LSL#2]|87-248-37-192
38268|code|LDR             R7, [R4,#0x70]|39-111
38270|code|LDR.W           R3, [R3,R5,LSL#2]|83-248-37-48
38274|code|LDR             R2, [R4,#0x58]|162-109
38276|code|LDR.W           R0, [R0,R5,LSL#2]|80-248-37-0
38280|code|STMEA.W         SP, {R12,LR}|141-232-0-80
38284|code|STR             R7, [SP,#8]|2-151
38286|code|BL              sub_9BC8|0-240-27-251
38290|code|MOV             R3, R0|3-70
38292|code|CMP             R0, #0|0-40
38294|code|BEQ             loc_9564|229-208
38296|code|MOVS            R5, #1|1-37
38298|code|MOV             R0, R5|40-70
38300|code|ADD             SP, SP, #0x18|6-176
38302|code|POP.W           {R4-R8,PC}|189-232-240-129
38306|code|MOV             R2, R5|42-70
38308|code|MOV             R0, R4|32-70
38310|code|MOV             R1, R3|25-70
38312|code|MOV             R5, R3|29-70
38314|code|BL              sub_9974|0-240-227-249
38318|code|MOV             R6, R5|46-70
38320|code|MOVS            R2, #1|1-34
38322|code|MOVS            R3, #0|0-35
38324|code|MOV             R0, R4|32-70
38326|code|ADD.W           R1, SP, #0x17|13-241-23-1
38330|code|STRB.W          R6, [SP,#0x17]|141-248-23-96
38334|code|BL              sub_9AA8|0-240-115-250
38338|code|CMP             R0, #1|1-40
38340|code|BEQ             loc_95CC|2-208
38342|code|LDR             R0, =aCanTRead; "can't read!"|7-72
38344|code|BLX             puts|255-247-62-237
38348|code|LDRB.W          R3, [SP,#0x17]|157-248-23-48
38352|code|CMP             R5, R3|157-66
38354|code|IT LT|184-191
38356|code|MOVLT           R5, R3|29-70
38358|code|SUBS.W          R8, R8, #1|184-241-1-8
38362|code|BNE             loc_95B0|233-209
38364|code|B               loc_959A|221-231
38366|code|BL              sub_9488|255-247-83-255
38370|data|ALIGN 4|0-191
38372|data|DCD aCanTRead; "can't read!"|16-168-0-0
38376|code|PUSH            {R4-R6,LR}|112-181
38378|code|MOV             R5, R0|5-70
38380|code|MOVS            R0, #0x74 ; 't'; unsigned int|116-32
38382|code|MOV             R6, R1|14-70
38384|code|BLX             _Znwj; operator new(uint)|255-247-224-236
38388|code|MOV             R1, R6|49-70
38390|code|MOV             R2, R5|42-70
38392|code|MOV             R4, R0|4-70
38394|code|BL              sub_950C|255-247-135-255
38398|code|MOV             R0, R4|32-70
38400|code|POP             {R4-R6,PC}|112-189
38402|code|MOV             R0, R4; void *|32-70
38404|code|BLX             _ZdlPv; operator delete(void *)|255-247-88-236
38408|code|BLX             __cxa_end_cleanup|255-247-122-236
38412|code|PUSH.W          {R4-R9,LR}|45-233-240-67
38416|code|MOV             R4, R0|4-70
38418|code|LDR             R3, [R4,#8]|163-104
38420|code|SUB             SP, SP, #0xC|131-176
38422|code|LDR             R0, [R0,#4]|64-104
38424|code|MOV             R5, R1|13-70
38426|code|CMP             R0, R3|152-66
38428|code|BEQ             loc_964A|21-208
38430|code|CBZ             R0, loc_9628|24-177
38432|code|LDR.W           R3, [R0,#-4]|80-248-4-60
38436|code|STR             R3, [R0]|3-96
38438|code|LDR             R0, [R4,#4]|96-104
38440|code|SUBS            R3, R0, #4|3-31
38442|code|ADDS            R1, R0, #4|1-29
38444|code|SUBS            R3, R3, R5|91-27
38446|code|STR             R1, [R4,#4]|97-96
38448|code|LDR             R4, [R2]|20-104
38450|code|ASRS            R3, R3, #2|155-16
38452|code|BNE             loc_963E|3-209
38454|code|STR             R4, [R5]|44-96
38456|code|ADD             SP, SP, #0xC|3-176
38458|code|POP.W           {R4-R9,PC}|189-232-240-131
38462|code|LSLS            R2, R3, #2; n|154-0
38464|code|MOV             R1, R5; src|41-70
38466|code|SUBS            R0, R0, R2; dest|128-26
38468|code|BLX             memmove|255-247-250-236
38472|code|B               loc_9636|245-231
38474|code|LDR             R3, [R4]|35-104
38476|code|SUBS            R0, R0, R3|192-26
38478|code|ASRS            R0, R0, #2|128-16
38480|code|BEQ             loc_96C2|55-208
38482|code|LSLS            R1, R0, #1|65-0
38484|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
38488|code|CMP             R1, R6|177-66
38490|code|IT CC|56-191
38492|code|MOVCC           R6, R1|14-70
38494|code|LSLS            R7, R6, #2|183-0
38496|code|CMP             R0, R1|136-66
38498|code|BLS             loc_966C|3-217
38500|code|MOV             R7, #0xFFFFFFFC|111-240-3-7
38504|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
38508|code|RSB.W           R8, R3, R5|195-235-5-8
38512|code|MOV.W           R8, R8,ASR#2|79-234-168-8
38516|code|CBZ             R6, loc_9682|46-177
38518|code|MOV             R0, R7; unsigned int|56-70
38520|code|STR             R2, [SP,#0x28+var_24]|1-146
38522|code|BLX             _Znwj; operator new(uint)|255-247-156-236
38526|code|LDR             R2, [SP,#0x28+var_24]|1-154
38528|code|MOV             R6, R0|6-70
38530|code|ADD.W           R3, R6, R8,LSL#2|6-235-136-3
38534|code|CBZ             R3, loc_968E|19-177
38536|code|LDR             R3, [R2]|19-104
38538|code|STR.W           R3, [R6,R8,LSL#2]|70-248-40-48
38542|code|LDR             R1, [R4]; src|33-104
38544|code|RSB.W           R9, R1, R5|193-235-5-9
38548|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
38552|code|BNE             loc_96C8|22-209
38554|code|LDR             R3, [R4,#4]|99-104
38556|code|ADD             R9, R6|177-68
38558|code|ADD.W           R9, R9, #4|9-241-4-9
38562|code|RSB.W           R8, R5, R3|197-235-3-8
38566|code|MOVS.W          R8, R8,ASR#2|95-234-168-8
38570|code|BNE             loc_96D6|20-209
38572|code|LDR             R0, [R4]; void *|32-104
38574|code|ADD.W           R5, R9, R8|9-235-8-5
38578|code|CBZ             R0, loc_96B8|8-177
38580|code|BLX             _ZdlPv; operator delete(void *)|255-247-0-236
38584|code|ADDS            R7, R6, R7|247-25
38586|code|STR             R6, [R4]|38-96
38588|code|STR             R5, [R4,#4]|101-96
38590|code|STR             R7, [R4,#8]|167-96
38592|code|B               loc_9638|186-231
38594|code|MOVS            R7, #4|4-39
38596|code|MOVS            R6, #1|1-38
38598|code|B               loc_966C|209-231
38600|code|MOV.W           R9, R9,LSL#2|79-234-137-9
38604|code|MOV             R0, R6; dest|48-70
38606|code|MOV             R2, R9; n|74-70
38608|code|BLX             memmove|255-247-180-236
38612|code|B               loc_969A|225-231
38614|code|MOV.W           R8, R8,LSL#2|79-234-136-8
38618|code|MOV             R0, R9; dest|72-70
38620|code|MOV             R1, R5; src|41-70
38622|code|MOV             R2, R8; n|66-70
38624|code|BLX             memmove|255-247-172-236
38628|code|B               loc_96AC|226-231
38630|data|ALIGN 4|0-191
38632|code|PUSH.W          {R4-R9,LR}|45-233-240-67
38636|code|MOV             R4, R0|4-70
38638|code|LDR             R3, [R4,#8]|163-104
38640|code|SUB             SP, SP, #0xC|131-176
38642|code|LDR             R0, [R0,#4]|64-104
38644|code|MOV             R5, R1|13-70
38646|code|CMP             R0, R3|152-66
38648|code|BEQ             loc_9726|21-208
38650|code|CBZ             R0, loc_9704|24-177
38652|code|LDR.W           R3, [R0,#-4]|80-248-4-60
38656|code|STR             R3, [R0]|3-96
38658|code|LDR             R0, [R4,#4]|96-104
38660|code|SUBS            R3, R0, #4|3-31
38662|code|ADDS            R1, R0, #4|1-29
38664|code|SUBS            R3, R3, R5|91-27
38666|code|STR             R1, [R4,#4]|97-96
38668|code|LDR             R4, [R2]|20-104
38670|code|ASRS            R3, R3, #2|155-16
38672|code|BNE             loc_971A|3-209
38674|code|STR             R4, [R5]|44-96
38676|code|ADD             SP, SP, #0xC|3-176
38678|code|POP.W           {R4-R9,PC}|189-232-240-131
38682|code|LSLS            R2, R3, #2; n|154-0
38684|code|MOV             R1, R5; src|41-70
38686|code|SUBS            R0, R0, R2; dest|128-26
38688|code|BLX             memmove|255-247-140-236
38692|code|B               loc_9712|245-231
38694|code|LDR             R3, [R4]|35-104
38696|code|SUBS            R0, R0, R3|192-26
38698|code|ASRS            R0, R0, #2|128-16
38700|code|BEQ             loc_979E|55-208
38702|code|LSLS            R1, R0, #1|65-0
38704|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
38708|code|CMP             R1, R6|177-66
38710|code|IT CC|56-191
38712|code|MOVCC           R6, R1|14-70
38714|code|LSLS            R7, R6, #2|183-0
38716|code|CMP             R0, R1|136-66
38718|code|BLS             loc_9748|3-217
38720|code|MOV             R7, #0xFFFFFFFC|111-240-3-7
38724|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
38728|code|RSB.W           R8, R3, R5|195-235-5-8
38732|code|MOV.W           R8, R8,ASR#2|79-234-168-8
38736|code|CBZ             R6, loc_975E|46-177
38738|code|MOV             R0, R7; unsigned int|56-70
38740|code|STR             R2, [SP,#0x28+var_24]|1-146
38742|code|BLX             _Znwj; operator new(uint)|255-247-46-236
38746|code|LDR             R2, [SP,#0x28+var_24]|1-154
38748|code|MOV             R6, R0|6-70
38750|code|ADD.W           R3, R6, R8,LSL#2|6-235-136-3
38754|code|CBZ             R3, loc_976A|19-177
38756|code|LDR             R3, [R2]|19-104
38758|code|STR.W           R3, [R6,R8,LSL#2]|70-248-40-48
38762|code|LDR             R1, [R4]; src|33-104
38764|code|RSB.W           R9, R1, R5|193-235-5-9
38768|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
38772|code|BNE             loc_97A4|22-209
38774|code|LDR             R3, [R4,#4]|99-104
38776|code|ADD             R9, R6|177-68
38778|code|ADD.W           R9, R9, #4|9-241-4-9
38782|code|RSB.W           R8, R5, R3|197-235-3-8
38786|code|MOVS.W          R8, R8,ASR#2|95-234-168-8
38790|code|BNE             loc_97B2|20-209
38792|code|LDR             R0, [R4]; void *|32-104
38794|code|ADD.W           R5, R9, R8|9-235-8-5
38798|code|CBZ             R0, loc_9794|8-177
38800|code|BLX             _ZdlPv; operator delete(void *)|255-247-146-235
38804|code|ADDS            R7, R6, R7|247-25
38806|code|STR             R6, [R4]|38-96
38808|code|STR             R5, [R4,#4]|101-96
38810|code|STR             R7, [R4,#8]|167-96
38812|code|B               loc_9714|186-231
38814|code|MOVS            R7, #4|4-39
38816|code|MOVS            R6, #1|1-38
38818|code|B               loc_9748|209-231
38820|code|MOV.W           R9, R9,LSL#2|79-234-137-9
38824|code|MOV             R0, R6; dest|48-70
38826|code|MOV             R2, R9; n|74-70
38828|code|BLX             memmove|255-247-70-236
38832|code|B               loc_9776|225-231
38834|code|MOV.W           R8, R8,LSL#2|79-234-136-8
38838|code|MOV             R0, R9; dest|72-70
38840|code|MOV             R1, R5; src|41-70
38842|code|MOV             R2, R8; n|66-70
38844|code|BLX             memmove|255-247-62-236
38848|code|B               loc_9788|226-231
38850|data|ALIGN 4|0-191
38852|code|PUSH            {R4,R5,LR}|48-181
38854|code|SUB             SP, SP, #0x14|133-176
38856|code|LDR             R3, [R0,#0x44]|67-108
38858|code|MOV             R4, R0|4-70
38860|code|STR             R1, [SP,#4]|1-145
38862|code|LDR             R1, [R0,#0x40]|1-108
38864|code|STR             R2, [SP]|0-146
38866|code|CMP             R1, R3|153-66
38868|code|BEQ             loc_9836|47-208
38870|code|CBZ             R1, loc_97DE|17-177
38872|code|LDR             R3, [SP,#4]|1-155
38874|code|STR             R3, [R1]|11-96
38876|code|LDR             R1, [R0,#0x40]|1-108
38878|code|ADDS            R1, #4|4-49
38880|code|LDR             R3, [R4,#0x50]|35-109
38882|code|STR             R1, [R4,#0x40]|33-100
38884|code|LDR             R1, [R4,#0x4C]|225-108
38886|code|CMP             R1, R3|153-66
38888|code|BEQ             loc_9848|46-208
38890|code|CBZ             R1, loc_97F2|17-177
38892|code|LDR             R3, [SP]|0-155
38894|code|STR             R3, [R1]|11-96
38896|code|LDR             R1, [R4,#0x4C]|225-108
38898|code|ADDS            R1, #4|4-49
38900|code|STR             R1, [R4,#0x4C]|225-100
38902|code|MOVS            R0, #0x58 ; 'X'|88-32
38904|code|LDR             R5, [R4,#0x54]|101-109
38906|code|BLX             _Znwj; operator new(uint)|255-247-220-235
38910|code|MOVS            R3, #0|0-35
38912|code|MOV             R4, R0|4-70
38914|code|ADD.W           R0, R0, #0x40 ; '@'|0-241-64-0
38918|code|STR             R3, [R4,#4]|99-96
38920|code|STR             R3, [R4,#8]|163-96
38922|code|STR             R3, [R4,#0xC]|227-96
38924|code|STR             R3, [R4,#0x10]|35-97
38926|code|STR             R3, [R4,#0x14]|99-97
38928|code|STR             R3, [R4,#0x18]|163-97
38930|code|BL              sub_A528|0-240-137-254
38934|code|LDR             R2, =off_AB80|24-74
38936|code|LDR             R1, [R5,#4]|105-104
38938|code|LDR             R3, [R5,#8]|171-104
38940|code|STR             R2, [R4,#0x40]|34-100
38942|code|MOVS            R2, #0|0-34
38944|code|CMP             R1, R3|153-66
38946|code|STR             R2, [R4,#0x30]|34-99
38948|code|STR             R4, [SP,#0xC]|3-148
38950|code|BEQ             loc_9854|21-208
38952|code|CBZ             R1, loc_982E|9-177
38954|code|STR             R4, [R1]|12-96
38956|code|LDR             R1, [R5,#4]|105-104
38958|code|ADDS            R1, #4|4-49
38960|code|STR             R1, [R5,#4]|105-96
38962|code|ADD             SP, SP, #0x14|5-176
38964|code|POP             {R4,R5,PC}|48-189
38966|code|ADD.W           R0, R0, #0x3C ; '<'|0-241-60-0
38970|code|ADD             R2, SP, #4|1-170
38972|code|BL              sub_960C|255-247-230-254
38976|code|LDR             R1, [R4,#0x4C]|225-108
38978|code|LDR             R3, [R4,#0x50]|35-109
38980|code|CMP             R1, R3|153-66
38982|code|BNE             loc_97EA|208-209
38984|code|ADD.W           R0, R4, #0x48 ; 'H'|4-241-72-0
38988|code|MOV             R2, SP|106-70
38990|code|BL              sub_960C|255-247-221-254
38994|code|B               loc_97F6|208-231
38996|code|MOV             R0, R5|40-70
38998|code|ADD             R2, SP, #0xC|3-170
39000|code|BL              sub_96E8|255-247-70-255
39004|code|B               loc_9832|233-231
39006|code|LDR             R0, [R4,#0x10]|32-105
39008|code|CBZ             R0, loc_9866|8-177
39010|code|BLX             _ZdlPv; operator delete(void *)|255-247-42-235
39014|code|LDR             R0, [R4,#4]|96-104
39016|code|CBZ             R0, loc_986E|8-177
39018|code|BLX             _ZdlPv; operator delete(void *)|255-247-38-235
39022|code|MOV             R0, R4|32-70
39024|code|BLX             _ZdlPv; operator delete(void *)|255-247-34-235
39028|code|BLX             __cxa_end_cleanup|255-247-68-235
39032|data|DCD off_AB80|128-171-0-0
39036|code|PUSH            {R3-R5,LR}|56-181
39038|code|MOV             R5, R0|5-70
39040|code|LDR             R0, [R0]|0-104
39042|code|LDR             R1, [R5,#8]|169-104
39044|code|LDR             R3, [R0]|3-104
39046|code|LDR             R3, [R3,#0xC]|219-104
39048|code|BLX             R3|152-71
39050|code|LDR             R1, [R5,#4]|105-104
39052|code|LDR             R3, [R0]|3-104
39054|code|MOV             R4, R0|4-70
39056|code|LDR             R3, [R3]|27-104
39058|code|BLX             R3|152-71
39060|code|LDR             R2, [R4,#0x38]|162-107
39062|code|LDR             R3, [R4]|35-104
39064|code|LDR             R3, [R3,#8]|155-104
39066|code|MOV             R1, R0|1-70
39068|code|MOV             R0, R4|32-70
39070|code|STR             R1, [R2]|17-96
39072|code|BLX             R3|152-71
39074|code|MOV             R0, R5; void *|40-70
39076|code|BLX             _ZdlPv; operator delete(void *)|255-247-8-235
39080|code|MOVS            R0, #0|0-32
39082|code|POP             {R3-R5,PC}|56-189
39084|code|PUSH            {R3-R5,LR}|56-181
39086|code|MOV             R5, R0|5-70
39088|code|LDR             R3, [R0,#0xC]|195-104
39090|code|LDR             R2, =off_A870|20-74
39092|code|ADDS            R3, #1|1-51
39094|code|STR             R2, [R0]|2-96
39096|code|BEQ             loc_98BE|1-208
39098|code|MOV             R0, R5|40-70
39100|code|POP             {R3-R5,PC}|56-189
39102|code|LDR             R3, [R0,#0x34]|67-107
39104|code|CMP             R3, #0|0-43
39106|code|BLE             loc_98DA|10-221
39108|code|MOVS            R4, #0|0-36
39110|code|LDR             R3, [R5,#0x20]|43-106
39112|code|MOVS            R1, #0; thread_return|0-33
39114|code|LDR.W           R0, [R3,R4,LSL#2]; th|83-248-36-0
39118|code|ADDS            R4, #1|1-52
39120|code|BLX             pthread_join|255-247-240-235
39124|code|LDR             R3, [R5,#0x34]|107-107
39126|code|CMP             R4, R3|156-66
39128|code|BLT             loc_98C6|245-219
39130|code|LDR             R0, [R5,#0x20]; void *|40-106
39132|code|BLX             _ZdlPv; operator delete(void *)|255-247-236-234
39136|code|LDR             R0, [R5,#0x24]; fd|104-106
39138|code|BLX             close|255-247-112-235
39142|code|LDR             R0, [R5,#0x28]; fd|168-106
39144|code|BLX             close|255-247-108-235
39148|code|LDR             R0, [R5,#0x2C]; fd|232-106
39150|code|BLX             close|255-247-106-235
39154|code|LDR             R0, [R5,#0x30]; fd|40-107
39156|code|BLX             close|255-247-102-235
39160|code|LDR             R0, [R5,#0x38]; void *|168-107
39162|code|BLX             _ZdlPv; operator delete(void *)|255-247-222-234
39166|code|MOV             R0, R5|40-70
39168|code|POP             {R3-R5,PC}|56-189
39170|data|ALIGN 4|0-191
39172|data|DCD off_A870|112-168-0-0
39176|code|PUSH            {R4,LR}|16-181
39178|code|MOV             R4, R0|4-70
39180|code|BL              sub_98AC|255-247-206-255
39184|code|MOV             R0, R4; void *|32-70
39186|code|BLX             _ZdlPv; operator delete(void *)|255-247-210-234
39190|code|MOV             R0, R4|32-70
39192|code|POP             {R4,PC}|16-189
39194|data|ALIGN 4|0-191
39196|code|LDR             R1, =off_A870|7-73
39198|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
39202|code|MOVS            R2, #0|0-34
39204|code|STR             R3, [R0,#4]|67-96
39206|code|STR             R3, [R0,#8]|131-96
39208|code|STR             R1, [R0]|1-96
39210|code|STR             R3, [R0,#0xC]|195-96
39212|code|STR             R2, [R0,#0x20]|2-98
39214|code|STR             R3, [R0,#0x24]|67-98
39216|code|STR             R3, [R0,#0x28]|131-98
39218|code|STR             R3, [R0,#0x2C]|195-98
39220|code|STR             R3, [R0,#0x30]|3-99
39222|code|STR             R2, [R0,#0x34]|66-99
39224|code|STR             R2, [R0,#0x38]|130-99
39226|code|BX              LR|112-71
39228|data|DCD off_A870|112-168-0-0
39232|code|ADD.W           R3, R2, #0x2C ; ','|2-241-44-3
39236|code|LDR             R2, [R2,#0x38]|146-107
39238|code|PUSH            {R4-R7}|240-180
39240|code|ADD.W           R2, R2, R1,LSL#2|2-235-129-2
39244|code|LDM             R3, {R3,R4,R6}|88-203
39246|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
39250|code|LDR             R7, =off_A870|7-79
39252|code|STR             R1, [R0,#0xC]|193-96
39254|code|STR             R5, [R0,#0x24]|69-98
39256|code|STR             R3, [R0,#4]|67-96
39258|code|MOVS            R3, #0|0-35
39260|code|STR             R7, [R0]|7-96
39262|code|STR             R4, [R0,#8]|132-96
39264|code|STR             R3, [R0,#0x20]|3-98
39266|code|STR             R5, [R0,#0x28]|133-98
39268|code|STR             R5, [R0,#0x2C]|197-98
39270|code|STR             R5, [R0,#0x30]|5-99
39272|code|STR             R6, [R0,#0x34]|70-99
39274|code|STR             R2, [R0,#0x38]|130-99
39276|code|POP             {R4-R7}|240-188
39278|code|BX              LR|112-71
39280|data|DCD off_A870|112-168-0-0
39284|code|LDR             R3, [R0,#0x34]|67-107
39286|code|PUSH.W          {R4-R9,LR}|45-233-240-67
39290|code|MOV             R5, R0|5-70
39292|code|SUB             SP, SP, #0x3C|143-176
39294|code|ADDS            R3, R3, R2|155-24
39296|code|ADD             R0, SP, #0x58+pipedes; pipedes|12-168
39298|code|STR             R3, [R5,#0x34]|107-99
39300|code|MOV             R7, R2|23-70
39302|code|MOV             R8, R1|136-70
39304|code|BLX             pipe|255-247-130-235
39308|code|CBZ             R0, loc_99A2|72-177
39310|code|LDR             R3, =stderr|61-75
39312|code|MOVS            R1, #1; size|1-33
39314|code|LDR             R0, =aCanTOpenPipes; "Can't open pipes.\n"|61-72
39316|code|MOVS            R2, #0x12; n|18-34
39318|code|LDR             R3, [R3]; s|27-104
39320|code|BLX             fwrite|255-247-26-235
39324|code|MOVS            R0, #1; status|1-32
39326|code|BLX             exit|255-247-132-235
39330|code|ADD             R0, SP, #0x58+var_30; pipedes|10-168
39332|code|BLX             pipe|255-247-116-235
39336|code|CMP             R0, #0|0-40
39338|code|BNE             loc_998E|240-209
39340|code|MOVS            R1, #0x39 ; '9'|57-33
39342|code|STRH            R1, [R5,#0x14]|169-130
39344|code|MOVS            R1, #0x3C ; '<'|60-33
39346|code|STRH            R1, [R5,#0x1C]|169-131
39348|code|LDR             R1, [SP,#0x58+var_30]|10-153
39350|code|ADD             R0, SP, #0x58+attr; attr|1-168
39352|code|LDR             R2, [SP,#0x58+pipedes]|12-154
39354|code|LDR             R3, [SP,#0x58+var_30+4]|11-155
39356|code|STR             R1, [R5,#0x2C]|233-98
39358|code|LDR             R1, [SP,#0x58+pipedes+4]|13-153
39360|code|STR             R2, [R5,#0x24]|106-98
39362|code|STR             R3, [R5,#0x28]|171-98
39364|code|STR             R1, [R5,#0x30]|41-99
39366|code|STR             R2, [R5,#4]|106-96
39368|code|STR             R3, [R5,#8]|171-96
39370|code|STR             R2, [R5,#0x10]|42-97
39372|code|STR             R3, [R5,#0x18]|171-97
39374|code|BLX             pthread_attr_init|255-247-36-235
39378|code|CBZ             R0, loc_99E2|48-177
39380|code|LDR             R3, =stderr|43-75
39382|code|MOVS            R1, #1; size|1-33
39384|code|LDR             R0, =aCanTInitThread; "Can't init thread attributes.\n"|44-72
39386|code|MOVS            R2, #0x1E; n|30-34
39388|code|LDR             R3, [R3]; s|27-104
39390|code|BLX             fwrite|255-247-248-234
39394|code|ADD             R0, SP, #0x58+attr; attr|1-168
39396|code|MOVS            R1, #0; detachstate|0-33
39398|code|BLX             pthread_attr_setdetachstate|255-247-84-234
39402|code|CMP             R0, #0|0-40
39404|code|BNE             loc_9A60|56-209
39406|code|LSLS            R0, R7, #2; unsigned int|184-0
39408|code|BLX             _Znaj; operator new[](uint)|255-247-244-234
39412|code|ADDS            R3, R7, #1|123-28
39414|code|STR             R0, [R5,#0x20]|40-98
39416|code|LSLS            R0, R3, #2; unsigned int|152-0
39418|code|BLX             _Znaj; operator new[](uint)|255-247-240-234
39422|code|CMP             R7, #0|0-47
39424|code|STR             R0, [R5,#0x38]|168-99
39426|code|BLE             loc_9A3C|27-221
39428|code|MOVS            R6, #0|0-38
39430|code|MOVS            R4, #1|1-36
39432|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
39436|code|B               loc_9A10|0-224
39438|code|LDR             R0, [R5,#0x38]|168-107
39440|code|STR.W           R9, [R0,R4,LSL#2]|64-248-36-144
39444|code|MOVS            R0, #0xC; unsigned int|12-32
39446|code|BLX             _Znwj; operator new(uint)|255-247-206-234
39450|code|ADD             R1, SP, #0x58+attr; attr|1-169
39452|code|MOV             R2, R0|2-70
39454|code|LDR             R0, [R5,#0x20]|40-106
39456|code|MOV             R3, R2; arg|19-70
39458|code|STR             R5, [R2]|21-96
39460|code|STR.W           R8, [R2,#4]|194-248-4-128
39464|code|ADDS            R0, R0, R6; newthread|128-25
39466|code|STR             R4, [R2,#8]|148-96
39468|code|LDR             R2, =(sub_987C+1); start_routine|24-74
39470|code|BLX             pthread_create|255-247-164-234
39474|code|CBNZ            R0, loc_9A70|232-185
39476|code|ADDS            R4, #1|1-52
39478|code|ADDS            R6, #4|4-54
39480|code|CMP             R7, R4|167-66
39482|code|BGE             loc_9A0E|232-218
39484|code|ADD             R0, SP, #0x58+attr; attr|1-168
39486|code|BLX             pthread_attr_destroy|255-247-16-235
39490|code|CBZ             R0, loc_9A52|48-177
39492|code|LDR             R3, =stderr|15-75
39494|code|MOVS            R1, #1; size|1-33
39496|code|LDR             R0, =aCanTDestroyThr; "Can't destroy thread attributes.\n"|18-72
39498|code|MOVS            R2, #0x21 ; '!'; n|33-34
39500|code|LDR             R3, [R3]; s|27-104
39502|code|BLX             fwrite|255-247-192-234
39506|code|LDR             R2, [R5,#4]|106-104
39508|code|LDR             R3, [R5,#8]|171-104
39510|code|STR             R2, [R5,#0x10]|42-97
39512|code|STR             R3, [R5,#0x18]|171-97
39514|code|ADD             SP, SP, #0x3C ; '<'|15-176
39516|code|POP.W           {R4-R9,PC}|189-232-240-131
39520|code|LDR             R3, =stderr|8-75
39522|code|MOVS            R1, #1; size|1-33
39524|code|MOVS            R2, #0x1D; n|29-34
39526|code|LDR             R0, =aCanTSetThreadA; "Can't set thread attributes.\n"|12-72
39528|code|LDR             R3, [R3]; s|27-104
39530|code|BLX             fwrite|255-247-178-234
39534|code|B               loc_99EE|190-231
39536|code|LDR             R3, =stderr|4-75
39538|code|MOVS            R1, #1; size|1-33
39540|code|LDR             R0, =aCanTCreateAThr; "Can't create a thread.\n"|9-72
39542|code|MOVS            R2, #0x17; n|23-34
39544|code|LDR             R3, [R3]; s|27-104
39546|code|BLX             fwrite|255-247-170-234
39550|code|MOVS            R0, #1; status|1-32
39552|code|BLX             exit|255-247-18-235
39556|data|DCD stderr|224-47-1-0
39560|data|DCD aCanTOpenPipes; "Can't open pipes.\n"|144-168-0-0
39564|data|DCD aCanTInitThread; "Can't init thread attributes.\n"|164-168-0-0
39568|data|DCD sub_987C+1|125-152-0-0
39572|data|DCD aCanTDestroyThr; "Can't destroy thread attributes.\n"|252-168-0-0
39576|data|DCD aCanTSetThreadA; "Can't set thread attributes.\n"|196-168-0-0
39580|data|DCD aCanTCreateAThr; "Can't create a thread.\n"|228-168-0-0
39584|code|LDR             R3, [R0,#0x38]|131-107
39586|code|STR             R1, [R3]|25-96
39588|code|BX              LR|112-71
39590|data|ALIGN 4|0-191
39592|code|PUSH            {R4-R6,LR}|112-181
39594|code|MOV             R5, R0|5-70
39596|code|MOV             R6, R1|14-70
39598|code|MOV             R4, R2|20-70
39600|code|CBZ             R3, loc_9ACE|107-177
39602|code|MOV.W           R2, #0x3E8|79-244-122-114
39606|code|MOVS            R1, #1; nfds|1-33
39608|code|ADD.W           R0, R0, #0x10; fds|0-241-16-0
39612|code|MUL.W           R2, R2, R3; timeout|2-251-3-242
39616|code|BLX             poll|255-247-176-234
39620|code|CMP             R0, #0|0-40
39622|code|BLT             loc_9AE0|11-219
39624|code|IT EQ|8-191
39626|code|MOVEQ           R4, R0|4-70
39628|code|BEQ             loc_9ADC|6-208
39630|code|LDR             R0, [R5,#4]; fd|104-104
39632|code|MOV             R1, R6; buf|49-70
39634|code|MOV             R2, R4; nbytes|34-70
39636|code|BLX             read|255-247-44-234
39640|code|CMP             R4, R0|132-66
39642|code|BNE             loc_9AF4|11-209
39644|code|MOV             R0, R4|32-70
39646|code|POP             {R4-R6,PC}|112-189
39648|code|LDR             R3, =stderr|9-75
39650|code|MOVS            R1, #1; size|1-33
39652|code|MOVS            R2, #0x15; n|21-34
39654|code|LDR             R0, =aCanTPollReadIt; "Can't poll read ITC.\n"|9-72
39656|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
39660|code|LDR             R3, [R3]; s|27-104
39662|code|BLX             fwrite|255-247-112-234
39666|code|B               loc_9ADC|243-231
39668|code|LDR             R3, =stderr|4-75
39670|code|MOVS            R1, #1; size|1-33
39672|code|MOVS            R2, #0x1F; n|31-34
39674|code|LDR             R0, =aCanTReadDataFr; "Can't read data from ITC pipe.\n"|5-72
39676|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
39680|code|LDR             R3, [R3]; s|27-104
39682|code|BLX             fwrite|255-247-102-234
39686|code|B               loc_9ADC|233-231
39688|data|DCD stderr|224-47-1-0
39692|data|DCD aCanTPollReadIt; "Can't poll read ITC.\n"|32-169-0-0
39696|data|DCD aCanTReadDataFr; "Can't read data from ITC pipe.\n"|56-169-0-0
39700|code|PUSH            {R4-R6,LR}|112-181
39702|code|MOV             R5, R0|5-70
39704|code|MOV             R6, R1|14-70
39706|code|MOV             R4, R2|20-70
39708|code|CBZ             R3, loc_9B3A|107-177
39710|code|MOV.W           R2, #0x3E8|79-244-122-114
39714|code|MOVS            R1, #1|1-33
39716|code|ADD.W           R0, R0, #0x18|0-241-24-0
39720|code|MUL.W           R2, R2, R3|2-251-3-242
39724|code|BLX             poll|255-247-122-234
39728|code|CMP             R0, #0|0-40
39730|code|BLT             loc_9B4C|11-219
39732|code|IT EQ|8-191
39734|code|MOVEQ           R4, R0|4-70
39736|code|BEQ             loc_9B48|6-208
39738|code|LDR             R0, [R5,#8]|168-104
39740|code|MOV             R1, R6|49-70
39742|code|MOV             R2, R4|34-70
39744|code|BLX             write|255-247-252-233
39748|code|CMP             R4, R0|132-66
39750|code|BNE             loc_9B60|11-209
39752|code|MOV             R0, R4|32-70
39754|code|POP             {R4-R6,PC}|112-189
39756|code|LDR             R3, =stderr|9-75
39758|code|MOVS            R1, #1|1-33
39760|code|MOVS            R2, #0x16|22-34
39762|code|LDR             R0, =aCanTPollWriteI; "Can't poll write ITC.\n"|9-72
39764|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
39768|code|LDR             R3, [R3]|27-104
39770|code|BLX             fwrite|255-247-58-234
39774|code|B               loc_9B48|243-231
39776|code|LDR             R3, =stderr|4-75
39778|code|MOVS            R1, #1|1-33
39780|code|MOVS            R2, #0x1E|30-34
39782|code|LDR             R0, =aCanTWriteDataT; "Can't write data to ITC pipe.\n"|5-72
39784|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
39788|code|LDR             R3, [R3]|27-104
39790|code|BLX             fwrite|255-247-48-234
39794|code|B               loc_9B48|233-231
39796|data|DCD stderr|224-47-1-0
39800|data|DCD aCanTPollWriteI; "Can't poll write ITC.\n"|88-169-0-0
39804|data|DCD aCanTWriteDataT; "Can't write data to ITC pipe.\n"|112-169-0-0
39808|code|VLDR            D6, [R0]|144-237-0-107
39812|code|VLDR            D7, [R1]|145-237-0-123
39816|code|VCMPE.F64       D6, D7|180-238-199-107
39820|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
39824|code|BMI             loc_9B9A|3-212
39826|code|ITE LE|212-191
39828|code|MOVLE           R0, #0|0-32
39830|code|MOVGT           R0, #1|1-32
39832|code|BX              LR|112-71
39834|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
39838|code|BX              LR|112-71
39840|code|PUSH            {R4,LR}|16-181
39842|code|MOV             R4, R0|4-70
39844|code|LDR             R0, [R0,#0x30]; void *|0-107
39846|code|BLX             _ZdlPv; operator delete(void *)|255-247-136-233
39850|code|LDR             R3, =off_A998|6-75
39852|code|LDR             R0, [R4,#0x10]; void *|32-105
39854|code|STR             R3, [R4,#0x40]|35-100
39856|code|CBZ             R0, loc_9BB6|8-177
39858|code|BLX             _ZdlPv; operator delete(void *)|255-247-130-233
39862|code|LDR             R0, [R4,#4]; void *|96-104
39864|code|CBZ             R0, loc_9BBE|8-177
39866|code|BLX             _ZdlPv; operator delete(void *)|255-247-126-233
39870|code|MOV             R0, R4|32-70
39872|code|POP             {R4,PC}|16-189
39874|data|ALIGN 4|0-191
39876|data|DCD off_A998|152-169-0-0
39880|code|PUSH.W          {R4-R10,LR}|45-233-240-71
39884|code|MOV             R5, R0|5-70
39886|code|MOV             R0, R3; s|24-70
39888|code|LDR             R4, [SP,#0x20+arg_4]|9-156
39890|code|MOV             R6, R3|30-70
39892|code|MOV             R9, R2|145-70
39894|code|MOV             R10, R1|138-70
39896|code|LDR             R7, [SP,#0x20+arg_8]|10-159
39898|code|LDR.W           R8, [SP,#0x20+arg_0]|221-248-32-128
39902|code|BLX             strdup|255-247-16-234
39906|code|LSLS            R3, R4, #0x14|35-5
39908|code|MOVS            R1, #1; size|1-33
39910|code|STR.W           R10, [R5]|197-248-0-160
39914|code|STR.W           R9, [R5,#0x2C]|197-248-44-144
39918|code|STR             R4, [R5,#0x34]|108-99
39920|code|STR             R7, [R5,#0x38]|175-99
39922|code|STR             R0, [R5,#0x30]|40-99
39924|code|MOV             R0, R3; nmemb|24-70
39926|code|BLX             calloc|255-247-114-233
39930|code|LDR             R1, =asc_A81C; "-"|33-73
39932|code|MOV             R3, R0|3-70
39934|code|MOV             R0, R6; s1|48-70
39936|code|STR             R3, [R5,#0x1C]|235-97
39938|code|BLX             strcmp|255-247-76-234
39942|code|CBZ             R0, loc_9C2A|128-177
39944|code|MOV             R0, R6|48-70
39946|code|CBNZ            R7, loc_9C46|231-185
39948|code|MOV             R1, R7|57-70
39950|code|BLX             open64|255-247-198-233
39954|code|STR             R0, [R5,#0x20]|40-98
39956|code|ADDS            R0, #1|1-48
39958|code|BNE             loc_9C2C|9-209
39960|code|LDR             R3, =stderr|26-75
39962|code|MOV             R2, R6|50-70
39964|code|LDR             R1, =aCanTOpenS; "Can't open %s\n"|26-73
39966|code|LDR             R0, [R3]; stream|24-104
39968|code|BLX             fprintf|255-247-232-233
39972|code|MOVS            R0, #1|1-32
39974|code|POP.W           {R4-R10,PC}|189-232-240-135
39978|code|STR             R0, [R5,#0x20]|40-98
39980|code|MOV             R0, R8; s1|64-70
39982|code|LDR             R1, =asc_A81C; "-"|20-73
39984|code|BLX             strcmp|255-247-52-234
39988|code|MOV             R3, R0|3-70
39990|code|CBNZ            R0, loc_9C50|88-185
39992|code|STRB.W          R3, [R5,#0x28]|133-248-40-48
39996|code|LDR             R3, =stdout|19-75
39998|code|LDR             R3, [R3]|27-104
40000|code|STR             R3, [R5,#0x24]|107-98
40002|code|POP.W           {R4-R10,PC}|189-232-240-135
40006|code|MOVS            R1, #1|1-33
40008|code|BLX             open64|255-247-168-233
40012|code|STR             R0, [R5,#0x20]|40-98
40014|code|B               loc_9C14|225-231
40016|code|MOVS            R4, #1|1-36
40018|code|MOV             R0, R8; filename|64-70
40020|code|STRB.W          R4, [R5,#0x28]|133-248-40-64
40024|code|LDR             R1, =aW; "w"|13-73
40026|code|BLX             fopen|255-247-76-233
40030|code|STR             R0, [R5,#0x24]|104-98
40032|code|CBZ             R0, loc_9C68|16-177
40034|code|MOVS            R0, #0|0-32
40036|code|POP.W           {R4-R10,PC}|189-232-240-135
40040|code|LDR             R3, =stderr|6-75
40042|code|MOV             R2, R8|66-70
40044|code|LDR             R1, =aCanTOpenS; "Can't open %s\n"|6-73
40046|code|LDR             R0, [R3]; stream|24-104
40048|code|BLX             fprintf|255-247-192-233
40052|code|LDR             R0, [R5,#0x20]; fd|40-106
40054|code|BLX             close|255-247-166-233
40058|code|MOV             R0, R4|32-70
40060|code|POP.W           {R4-R10,PC}|189-232-240-135
40064|data|DCD asc_A81C; "-"|28-168-0-0
40068|data|DCD stderr|224-47-1-0
40072|data|DCD aCanTOpenS; "Can't open %s\n"|192-169-0-0
40076|data|DCD stdout|220-47-1-0
40080|data|DCD aW; "w"|208-169-0-0
40084|code|LDRB.W          R3, [R0,#0x28]|144-248-40-48
40088|code|PUSH            {R4,LR}|16-181
40090|code|MOV             R4, R0|4-70
40092|code|CBNZ            R3, loc_9CAC|51-185
40094|code|LDR             R0, [R4,#0x20]; fd|32-106
40096|code|CBNZ            R0, loc_9CA4|0-185
40098|code|POP             {R4,PC}|16-189
40100|code|POP.W           {R4,LR}|189-232-16-64
40104|code|B.W             j_close|255-247-138-185
40108|code|LDR             R0, [R0,#0x24]; stream|64-106
40110|code|BLX             fclose|255-247-10-233
40114|code|B               loc_9C9E|244-231
40116|code|PUSH            {LR}|0-181
40118|code|SUB             SP, SP, #0xC|131-176
40120|code|ADD             R3, SP, #0x10+var_8|2-171
40122|code|MOV             R0, R1; fd|8-70
40124|code|STRB.W          R2, [R3,#-1]!|3-248-1-45
40128|code|MOVS            R2, #1; n|1-34
40130|code|MOV             R1, R3; buf|25-70
40132|code|BLX             write|255-247-58-233
40136|code|CMP             R0, #1|1-40
40138|code|BEQ             loc_9CE0|9-208
40140|code|LDR             R3, =stderr|5-75
40142|code|MOVS            R1, #1; size|1-33
40144|code|LDR             R0, =aWriteChannelBr; "Write channel broken\n"|5-72
40146|code|MOVS            R2, #0x15; n|21-34
40148|code|LDR             R3, [R3]; s|27-104
40150|code|BLX             fwrite|255-247-124-233
40154|code|MOVS            R0, #1|1-32
40156|code|ADD             SP, SP, #0xC|3-176
40158|code|POP             {PC}|0-189
40160|code|MOVS            R0, #0|0-32
40162|code|B               loc_9CDC|251-231
40164|data|DCD stderr|224-47-1-0
40168|data|DCD aWriteChannelBr; "Write channel broken\n"|212-169-0-0
40172|code|VMOV.F64        D7, #1.0|183-238-0-123
40176|code|VMOV            S13, R2|6-238-144-42
40180|code|PUSH            {LR}|0-181
40182|code|SUB             SP, SP, #0x14|133-176
40184|code|VCMPE.F64       D0, D7|180-238-199-11
40188|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
40192|code|BMI             loc_9D3E|29-212
40194|code|VCVT.F64.S32    D7, S13|184-238-230-123
40198|code|VMOV            S11, R1|5-238-144-26
40202|code|LDR             R0, [R0,#0x24]; stream|64-106
40204|code|VSTR            D0, [SP,#0x18+var_10]|141-237-2-11
40208|code|LDR             R1, =a2f2f3f; "%.2f %.2f %.3f\n"|25-73
40210|code|VDIV.F64        D7, D7, D0|135-238-0-123
40214|code|VCVT.F32.S32    S13, S13|248-238-230-106
40218|code|VSTR            D7, [SP,#0x18+var_18]|141-237-0-123
40222|code|VLDR            D7, =0.0009765625|159-237-20-123
40226|code|VCVT.F32.S32    S12, S11|184-238-229-106
40230|code|VMUL.F32        S12, S12, S13|38-238-38-106
40234|code|VCVT.F64.F32    D6, S12|183-238-198-106
40238|code|VMUL.F64        D7, D6, D7|38-238-7-123
40242|code|VMOV            R2, R3, D7|83-236-23-43
40246|code|BLX             fprintf|255-247-94-233
40250|code|ADD             SP, SP, #0x14|5-176
40252|code|POP             {PC}|0-189
40254|code|VMOV            S11, R1|5-238-144-26
40258|code|VCVT.F32.S32    S13, S13|248-238-230-106
40262|code|LDR             R0, [R0,#0x24]; stream|64-106
40264|code|VSTR            D0, [SP,#0x18+var_18]|141-237-0-11
40268|code|LDR             R1, =a2f3f; "#%.2f ++++ %.3f\n"|11-73
40270|code|VCVT.F32.S32    S15, S11|248-238-229-122
40274|code|VMUL.F32        S12, S15, S13|39-238-166-106
40278|code|VLDR            D7, =0.0009765625|159-237-6-123
40282|code|VCVT.F64.F32    D6, S12|183-238-198-106
40286|code|VMUL.F64        D7, D6, D7|38-238-7-123
40290|code|VMOV            R2, R3, D7|83-236-23-43
40294|code|BLX             fprintf|255-247-70-233
40298|code|B               loc_9D3A|230-231
40300|data|DCD 0x8000F3AF|175-243-0-128
40304|data|DCFD 0.0009765625|0-0-0-0-0-0-80-63
40312|data|DCD a2f2f3f; "%.2f %.2f %.3f\n"|0-170-0-0
40316|data|DCD a2f3f; "#%.2f ++++ %.3f\n"|236-169-0-0
40320|code|PUSH            {R3-R5,LR}|56-181
40322|code|MOVS            R2, #8; size|8-34
40324|code|LDR             R3, =(loc_9B80+1); compar|20-75
40326|code|MOV             R4, R1|12-70
40328|code|MOV             R5, R0|5-70
40330|code|BLX             qsort|255-247-112-232
40334|code|MOV             R3, #0x55555556|69-242-86-83-197-242-85-83
40342|code|VLDR            D7, =0.0|159-237-14-123
40346|code|SMULL.W         R2, R3, R3, R4|131-251-4-35
40350|code|SUB.W           R3, R3, R4,ASR#31|163-235-228-115
40354|code|SUBS            R2, R4, R3|226-26
40356|code|CMP             R3, R2|147-66
40358|code|SUB.W           R4, R4, R3,LSL#1|164-235-67-4
40362|code|BGE             loc_9DBE|8-218
40364|code|ADD.W           R5, R5, R3,LSL#3|5-235-195-5
40368|code|ADDS            R3, #1|1-51
40370|code|VLDM            R5!, {D6}|181-236-2-107
40374|code|CMP             R3, R2|147-66
40376|code|VADD.F64        D7, D7, D6|55-238-6-123
40380|code|BNE             loc_9DB0|248-209
40382|code|VMOV            S11, R4|5-238-144-74
40386|code|VCVT.F64.S32    D6, S11|184-238-229-107
40390|code|VDIV.F64        D0, D7, D6|135-238-6-11
40394|code|POP             {R3-R5,PC}|56-189
40396|data|DCD 0x8000F3AF|175-243-0-128
40400|data|DCFD 0.0|0-0-0-0-0-0-0-0
40408|data|DCD loc_9B80+1|129-155-0-0
40412|code|PUSH            {R4-R6,LR}|112-181
40414|code|LSLS            R6, R1, #0x14|14-5
40416|code|MOV             R5, R0|5-70
40418|code|BEQ             loc_9E18|25-208
40420|code|MOVS            R4, #0|0-36
40422|code|B               loc_9DFA|8-224
40424|code|LDR             R1, [R5,#0x1C]; buf|233-105
40426|code|BLX             write|255-247-168-232
40430|code|ADDS            R3, R0, #1|67-28
40432|code|ADDS            R4, R4, R0|36-24
40434|code|CMP             R3, #1|1-43
40436|code|BLS             loc_9E12|13-217
40438|code|CMP             R6, R4|166-66
40440|code|BEQ             loc_9E1A|15-208
40442|code|LDR             R3, [R5,#0x38]|171-107
40444|code|SUBS            R2, R6, R4; nbytes|50-27
40446|code|LDR             R0, [R5,#0x20]; fd|40-106
40448|code|CMP             R3, #0|0-43
40450|code|BNE             loc_9DE8|241-209
40452|code|LDR             R1, [R5,#0x1C]; buf|233-105
40454|code|BLX             read|255-247-148-232
40458|code|ADDS            R3, R0, #1|67-28
40460|code|ADDS            R4, R4, R0|36-24
40462|code|CMP             R3, #1|1-43
40464|code|BHI             loc_9DF6|241-216
40466|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
40470|code|POP             {R4-R6,PC}|112-189
40472|code|MOV             R4, R6|52-70
40474|code|LDR             R3, [R5,#0x38]|171-107
40476|code|CBNZ            R3, loc_9E34|83-185
40478|code|MOV             R3, #0xFFFFF|79-246-255-115-192-242-15-3
40486|code|ADDS            R3, R4, R3|227-24
40488|code|BICS.W          R4, R4, R4,ASR#32|52-234-36-4
40492|code|IT CS|40-191
40494|code|MOVCS           R4, R3|28-70
40496|code|ASRS            R0, R4, #0x14|32-21
40498|code|POP             {R4-R6,PC}|112-189
40500|code|LDR             R0, [R5,#0x20]; fd|40-106
40502|code|BLX             fsync|255-247-106-232
40506|code|CMP             R0, #0|0-40
40508|code|BEQ             loc_9E1E|239-208
40510|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
40514|code|POP             {R4-R6,PC}|112-189
40516|code|PUSH            {R4-R7,LR}|240-181
40518|code|MOV             R4, R0|4-70
40520|code|SUB             SP, SP, #0xC|131-176
40522|code|CBZ             R1, loc_9E6E|129-177
40524|code|LDR             R6, [R0,#0x2C]|198-106
40526|code|MOVS            R3, #1|1-35
40528|code|LDR             R0, [R0,#0x20]|0-106
40530|code|STR             R3, [SP,#0x20+var_20]|0-147
40532|code|SMULL.W         R6, R7, R1, R6|129-251-6-103
40536|code|LSLS            R3, R7, #0x14|59-5
40538|code|LSLS            R2, R6, #0x14|50-5
40540|code|ORR.W           R3, R3, R6,LSR#12|67-234-22-51
40544|code|BLX             lseek64|255-247-212-232
40548|code|MVNS            R0, R0|192-67
40550|code|MVNS            R1, R1|201-67
40552|code|ORRS.W          R3, R0, R1|80-234-1-3
40556|code|BEQ             loc_9EA4|26-208
40558|code|ADD.W           R7, R4, #0x40 ; '@'|4-241-64-7
40562|code|MOV             R0, R7|56-70
40564|code|BL              sub_A540|0-240-100-251
40568|code|LDR             R3, [R4,#0x2C]|227-106
40570|code|CMP             R3, #0|0-43
40572|code|BLE             loc_9EAC|22-221
40574|code|LDR             R5, [R4,#0x34]|101-107
40576|code|MOVS            R6, #0|0-38
40578|code|B               loc_9E8E|4-224
40580|code|LDR             R5, [R4,#0x34]|101-107
40582|code|LDR             R3, [R4,#0x2C]|227-106
40584|code|ADDS            R6, R6, R5|118-25
40586|code|CMP             R3, R6|179-66
40588|code|BLE             loc_9EAC|14-221
40590|code|ADDS            R2, R6, R5|114-25
40592|code|MOV             R0, R4|32-70
40594|code|CMP             R2, R3|154-66
40596|code|IT GT|200-191
40598|code|RSBGT.W         R5, R6, R3|198-235-3-5
40602|code|MOV             R1, R5|41-70
40604|code|BL              sub_9DDC|255-247-158-255
40608|code|CMP             R5, R0|133-66
40610|code|BEQ             loc_9E84|239-208
40612|code|VMOV.F64        D0, #-1.0|191-238-0-11
40616|code|ADD             SP, SP, #0xC|3-176
40618|code|POP             {R4-R7,PC}|240-189
40620|code|MOV             R0, R7|56-70
40622|code|ADD             SP, SP, #0xC|3-176
40624|code|POP.W           {R4-R7,LR}|189-232-240-64
40628|code|B.W             sub_A554|0-240-78-187
40632|code|PUSH.W          {R4-R11,LR}|45-233-240-79
40636|code|VPUSH           {D8-D10}|45-237-6-139
40640|code|CMP             R1, #1|1-41
40642|code|SUB             SP, SP, #0x3C|143-176
40644|code|MOV             R4, R0|4-70
40646|code|MOV             R11, R2|147-70
40648|code|STR             R1, [SP,#0x78+var_68]|4-145
40650|code|STR             R3, [SP,#0x78+var_54]|9-147
40652|code|LDR             R6, [SP,#0x78+arg_0]|30-158
40654|code|BEQ             loc_9F2E|46-208
40656|code|LDR             R3, [SP,#0x78+var_68]|4-155
40658|code|CMP             R3, #0|0-43
40660|code|BGT             loc_9F38|48-220
40662|code|LDR             R2, [SP,#0x78+var_68]|4-154
40664|code|CMP             R2, #1|1-42
40666|code|BLE             loc_9F20|33-221
40668|code|LDR             R2, [SP,#0x78+var_68]|4-154
40670|code|LDR             R1, =aLoopsD; "#loops: %d\n"|166-73
40672|code|LDR             R0, [R4,#0x24]; stream|96-106
40674|code|BLX             fprintf|255-247-136-232
40678|code|LDR             R3, [R4,#0x24]; s|99-106
40680|code|LDR             R0, =aBlockOffsetGib; "#block offset (GiB), MiB/s, time\n"|164-72
40682|code|MOVS            R1, #1; size|1-33
40684|code|MOVS            R2, #0x21 ; '!'; n|33-34
40686|code|BLX             fwrite|255-247-112-232
40690|code|LDR             R3, [R4,#4]|99-104
40692|code|LDR             R0, [R3]|24-104
40694|code|CBZ             R0, loc_9F20|152-177
40696|code|MOVS            R7, #0|0-39
40698|code|MOVS            R5, #4|4-37
40700|code|MOV             R3, R7|59-70
40702|code|LDR             R2, [R4,#0x10]|34-105
40704|code|LDR             R1, [R2,R3]|209-88
40706|code|BL              sub_9D80|255-247-61-255
40710|code|MOV             R1, R7|57-70
40712|code|LDR             R2, [R4,#0x2C]|226-106
40714|code|MOV             R0, R4|32-70
40716|code|BL              sub_9CEC|255-247-238-254
40720|code|LDR             R1, [R4,#4]|97-104
40722|code|ADDS            R2, R5, #4|42-29
40724|code|MOV             R3, R5|43-70
40726|code|ADDS            R7, R7, R6|191-25
40728|code|LDR             R0, [R1,R5]|72-89
40730|code|MOV             R5, R2|21-70
40732|code|CMP             R0, #0|0-40
40734|code|BNE             loc_9EFE|238-209
40736|code|MOV             R0, R4|32-70
40738|code|LDR             R1, [SP,#0x78+var_54]|9-153
40740|code|MOVS            R2, #0|0-34
40742|code|BL              sub_9CB4|255-247-197-254
40746|code|MOVS            R0, #0|0-32
40748|code|B               loc_A12E|255-224
40750|code|LDR             R3, [R0,#0x24]; s|67-106
40752|code|MOVS            R2, #0x21 ; '!'; n|33-34
40754|code|LDR             R0, =aBlockOffsetGib; "#block offset (GiB), MiB/s, time\n"|146-72
40756|code|BLX             fwrite|255-247-76-232
40760|code|MOVS            R5, #0|0-37
40762|code|MOV             R10, R6|178-70
40764|code|RSB.W           R3, R5, R11|197-235-11-3
40768|code|NEGS            R2, R3|90-66
40770|code|ADC.W           R2, R2, R3|66-235-3-2
40774|code|LDR             R3, [SP,#0x78+whence]|31-155
40776|code|STR             R2, [SP,#0x78+var_64]|5-146
40778|code|CMP             R3, R11|91-69
40780|code|IT LT|184-191
40782|code|ORRLT.W         R2, R2, #1|66-240-1-2
40786|code|STR             R2, [SP,#0x78+var_5C]|7-146
40788|code|LDR             R2, [SP,#0x78+var_68]|4-154
40790|code|LSLS            R2, R2, #3|210-0
40792|code|STR             R2, [SP,#0x78+var_60]|6-146
40794|code|LDR             R3, [SP,#0x78+whence]|31-155
40796|code|CMP             R3, #0|0-43
40798|code|BEQ.W           loc_A0CC|0-240-181-128
40802|code|LDR             R3, [R4,#0x2C]|227-106
40804|code|MOVS            R7, #1|1-39
40806|code|LDR             R2, [SP,#0x78+whence]|31-154
40808|code|LDR             R0, [R4,#0x20]|32-106
40810|code|STR             R7, [SP,#0x78+var_78]|0-151
40812|code|SMULL.W         R8, R9, R2, R3|130-251-3-137
40816|code|MOV.W           R3, R9,LSL#20|79-234-9-83
40820|code|MOV.W           R2, R8,LSL#20|79-234-8-82
40824|code|ORR.W           R3, R3, R8,LSR#12|67-234-24-51
40828|code|BLX             lseek64|255-247-70-232
40832|code|MVNS            R0, R0|192-67
40834|code|MVNS            R1, R1|201-67
40836|code|ORRS.W          R3, R0, R1|80-234-1-3
40840|code|BEQ.W           loc_A14C|0-240-224-128
40844|code|LDR             R2, [SP,#0x78+var_5C]|7-154
40846|code|CMP             R2, #0|0-42
40848|code|BEQ.W           loc_A0FE|0-240-181-128
40852|code|VMOV.F64        D10, #-1.0|191-238-0-171
40856|code|LDR             R3, [SP,#0x78+whence]|31-155
40858|code|MOV.W           R9, R5,LSL#3|79-234-197-9
40862|code|VLDR            D9, =0.0|159-237-116-155
40866|code|LSLS            R7, R3, #2|159-0
40868|code|MOV             R6, R3|30-70
40870|code|MUL.W           R8, R10, R3|10-251-3-248
40874|code|ADD.W           R3, R4, #0x10|4-241-16-3
40878|code|STR             R3, [SP,#0x78+var_58]|8-147
40880|code|CMP             R5, #0|0-45
40882|code|BNE             loc_A076|96-209
40884|code|MOV             R1, R6|49-70
40886|code|CBZ             R6, loc_9FBC|14-177
40888|code|ADD.W           R1, R10, #0xFFFFFFFF|10-241-255-49
40892|code|MOV             R0, R4|32-70
40894|code|BL              sub_9E44|255-247-65-255
40898|code|VCMPE.F64       D0, #0.0|181-238-192-11
40902|code|VMOV.F64        D8, D0|176-238-64-139
40906|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
40910|code|BMI.W           loc_A10A|0-241-156-128
40914|code|LDR             R2, [SP,#0x78+var_68]|4-154
40916|code|VADD.F64        D9, D9, D0|57-238-0-155
40920|code|CMP             R2, #1|1-42
40922|code|BEQ             loc_A0C0|113-208
40924|code|CMP             R5, #0|0-45
40926|code|BEQ             loc_A08E|86-208
40928|code|LDR             R2, [R4,#4]|98-104
40930|code|LDR             R3, [R4,#0x10]|35-105
40932|code|LDR             R1, [R2,R7]|209-89
40934|code|LDR             R2, [R3,R7]|218-89
40936|code|ADD             R1, R9|73-68
40938|code|VSTR            D8, [R1]|129-237-0-139
40942|code|ADDS            R2, #1|1-50
40944|code|STR             R2, [R3,R7]|218-81
40946|code|LDR             R3, [SP,#0x78+var_64]|5-155
40948|code|ADDS            R6, #1|1-54
40950|code|ADD             R8, R10|208-68
40952|code|ADDS            R7, #4|4-55
40954|code|CMP             R11, R6|179-69
40956|code|IT GT|200-191
40958|code|ORRGT.W         R3, R3, #1|67-240-1-3
40962|code|CMP             R3, #0|0-43
40964|code|BNE             loc_9FB0|212-209
40966|code|VCVT.S32.F64    S16, D9|189-238-201-139
40970|code|MOVS            R0, #0; timer|0-32
40972|code|ADDS            R5, #1|1-53
40974|code|BLX             time|254-247-236-239
40978|code|ADD             R3, SP, #0x78+var_40|14-171
40980|code|STR.W           R0, [R3,#-4]!|67-248-4-13
40984|code|MOV             R0, R3; timer|24-70
40986|code|BLX             localtime|254-247-52-239
40990|code|MOV             R3, #0x12FE0|66-246-224-115-192-242-1-3
40998|code|MOV             R2, R5|42-70
41000|code|LDR             R1, [R0,#8]|129-104
41002|code|MOV             R7, R0|7-70
41004|code|LDR             R0, [R3]; stream|24-104
41006|code|LDR             R3, [R4,#0x30]|35-107
41008|code|STR             R1, [SP,#0x78+var_78]|0-145
41010|code|LDR.W           LR, [R7,#4]|215-248-4-224
41014|code|LDR             R1, =aFinishedLoopDO; "# Finished loop %d, on device %s at %d:"...|82-73
41016|code|STR.W           LR, [SP,#0x78+var_74]|205-248-4-224
41020|code|LDR             R7, [R7]|63-104
41022|code|STR             R7, [SP,#0x78+var_70]|2-151
41024|code|BLX             fprintf|254-247-216-239
41028|code|LDR             R2, [R4,#0x2C]|226-106
41030|code|VMOV            R3, S16|24-238-16-58
41034|code|LDR             R0, [R4,#0x24]; stream|96-106
41036|code|LDR             R1, =aReadDMegsInDSe; "# Read %d megs in %d seconds, %d megaby"...|77-73
41038|code|MUL.W           R2, R2, R6|2-251-6-242
41042|code|VMOV            S13, R2|6-238-144-42
41046|code|VCVT.F64.S32    D7, S13|184-238-230-123
41050|code|VDIV.F64        D7, D7, D9|135-238-9-123
41054|code|VCVT.S32.F64    S13, D7|253-238-199-107
41058|code|VSTR            S13, [SP,#0x78+var_78]|205-237-0-106
41062|code|BLX             fprintf|254-247-198-239
41066|code|LDR             R2, [SP,#0x78+var_68]|4-154
41068|code|CMP             R2, R5|170-66
41070|code|BGT.W           loc_9F5A|63-247-116-175
41074|code|MOV             R6, R10|86-70
41076|code|B               loc_9ED6|47-231
41078|code|LDR             R3, [R4,#4]|99-104
41080|code|LDR             R3, [R3,R7]|219-89
41082|code|CMP             R3, #0|0-43
41084|code|BEQ             loc_A006|195-208
41086|code|VLDR            D7, [R3]|147-237-0-123
41090|code|VCMP.F64        D7, D10|180-238-74-123
41094|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
41098|code|BNE             loc_9FB4|147-209
41100|code|B               loc_A006|187-231
41102|code|LDR             R0, [SP,#0x78+var_60]; unsigned int|6-152
41104|code|BLX             _Znaj; operator new[](uint)|254-247-164-239
41108|code|LDR             R1, [R4,#8]|161-104
41110|code|LDR             R3, [R4,#0xC]|227-104
41112|code|CMP             R1, R3|153-66
41114|code|STR             R0, [SP,#0x78+var_4C]|11-144
41116|code|BEQ             loc_A142|81-208
41118|code|MOV             R3, R5|43-70
41120|code|CBZ             R1, loc_A0A6|9-177
41122|code|STR             R0, [R1]|8-96
41124|code|LDR             R3, [R4,#8]|163-104
41126|code|ADDS            R3, #4|4-51
41128|code|STR             R3, [R4,#8]|163-96
41130|code|LDR             R1, [R4,#0x14]|97-105
41132|code|MOVS            R2, #0|0-34
41134|code|LDR             R3, [R4,#0x18]|163-105
41136|code|STR             R2, [SP,#0x78+var_48]|12-146
41138|code|CMP             R1, R3|153-66
41140|code|BEQ             loc_A138|64-208
41142|code|CBZ             R1, loc_A0BA|1-177
41144|code|STR             R2, [R1]|10-96
41146|code|ADDS            R1, #4|4-49
41148|code|STR             R1, [R4,#0x14]|97-97
41150|code|B               loc_9FE0|143-231
41152|code|LDR             R2, [R4,#0x2C]|226-106
41154|code|MOV             R0, R4|32-70
41156|code|MOV             R1, R8|65-70
41158|code|BL              sub_9CEC|255-247-17-254
41162|code|B               loc_9FF2|146-231
41164|code|LDR             R1, [SP,#0x78+whence]; offset|31-153
41166|code|LDR             R0, [R4,#0x20]; fd|32-106
41168|code|MOV             R2, R1; whence|10-70
41170|code|BLX             lseek|254-247-204-239
41174|code|CMP             R0, #0|0-40
41176|code|BEQ.W           loc_9F8C|63-244-88-175
41180|code|MOV             R2, #0x12FE0|66-246-224-114-192-242-1-2
41188|code|MOVS            R1, #1; size|1-33
41190|code|LDR             R0, =aCanTLseek; "Can't lseek().\n"|40-72
41192|code|LDR             R3, [R2]; s|19-104
41194|code|MOVS            R2, #0xF; n|15-34
41196|code|BLX             fwrite|254-247-112-239
41200|code|MOV             R0, R4|32-70
41202|code|LDR             R1, [SP,#0x78+var_54]|9-153
41204|code|MOVS            R2, #1|1-34
41206|code|BL              sub_9CB4|255-247-221-253
41210|code|MOVS            R0, #1|1-32
41212|code|B               loc_A12E|23-224
41214|code|VLDR            D9, =0.0|159-237-28-155
41218|code|LDR             R6, [SP,#0x78+whence]|31-158
41220|code|VLDR            S16, [SP,#0x78+var_5C]|157-237-7-138
41224|code|B               loc_A00A|127-231
41226|code|CMP             R6, #0|0-46
41228|code|BNE.W           loc_A006|127-244-123-175
41232|code|MOV             R3, #0x12FE0|66-246-224-115-192-242-1-3
41240|code|LDR             R2, [R4,#0x30]|34-107
41242|code|LDR             R0, [R3]; stream|24-104
41244|code|LDR             R1, =aDataFileDevice; "Data file/device \"%s\" too small.\n"|27-73
41246|code|BLX             fprintf|254-247-106-239
41250|code|MOV             R0, R4|32-70
41252|code|LDR             R1, [SP,#0x78+var_54]|9-153
41254|code|MOVS            R2, #2|2-34
41256|code|BL              sub_9CB4|255-247-196-253
41260|code|MOVS            R0, #1|1-32
41262|code|ADD             SP, SP, #0x3C ; '<'|15-176
41264|code|VPOP            {D8-D10}|189-236-6-139
41268|code|POP.W           {R4-R11,PC}|189-232-240-143
41272|code|LDR             R0, [SP,#0x78+var_58]|8-152
41274|code|ADD             R2, SP, #0x78+var_48|12-170
41276|code|BL              sub_A28C|0-240-166-248
41280|code|B               loc_9FE0|78-231
41282|code|ADDS            R0, R4, #4|32-29
41284|code|ADD             R2, SP, #0x78+var_4C|11-170
41286|code|BL              sub_A1B0|0-240-51-248
41290|code|B               loc_A0AA|174-231
41292|code|MOV             R2, #0x12FE0|66-246-224-114-192-242-1-2
41300|code|MOV             R1, R7; size|57-70
41302|code|LDR             R0, =aCanTLseek; "Can't lseek().\n"|12-72
41304|code|LDR             R3, [R2]; s|19-104
41306|code|MOVS            R2, #0xF; n|15-34
41308|code|BLX             fwrite|254-247-56-239
41312|code|MOV             R0, R4|32-70
41314|code|LDR             R1, [SP,#0x78+var_54]|9-153
41316|code|MOV             R2, R7|58-70
41318|code|BL              sub_9CB4|255-247-165-253
41322|code|MOV             R0, R7|56-70
41324|code|B               loc_A12E|223-231
41326|data|ALIGN 0x10|0-191
41328|data|DCFD 0.0|0-0-0-0-0-0-0-0
41336|data|DCD aLoopsD; "#loops: %d\n"|212-170-0-0
41340|data|DCD aBlockOffsetGib; "#block offset (GiB), MiB/s, time\n"|16-170-0-0
41344|data|DCD aFinishedLoopDO; "# Finished loop %d, on device %s at %d:"...|104-170-0-0
41348|data|DCD aReadDMegsInDSe; "# Read %d megs in %d seconds, %d megaby"...|156-170-0-0
41352|data|DCD aCanTLseek; "Can't lseek().\n"|52-170-0-0
41356|data|DCD aDataFileDevice; "Data file/device \"%s\" too small.\n"|68-170-0-0
41360|code|LDR             R3, =off_A998|1-75
41362|code|STR             R3, [R0]|3-96
41364|code|BX              LR|112-71
41366|data|ALIGN 4|0-191
41368|data|DCD off_A998|152-169-0-0
41372|code|LDR             R3, =off_A998|3-75
41374|code|PUSH            {R4,LR}|16-181
41376|code|MOV             R4, R0|4-70
41378|code|STR             R3, [R0]|3-96
41380|code|BLX             _ZdlPv; operator delete(void *)|254-247-136-238
41384|code|MOV             R0, R4|32-70
41386|code|POP             {R4,PC}|16-189
41388|data|DCD off_A998|152-169-0-0
41392|code|PUSH.W          {R4-R9,LR}|45-233-240-67
41396|code|MOV             R4, R0|4-70
41398|code|LDR             R3, [R4,#8]|163-104
41400|code|SUB             SP, SP, #0xC|131-176
41402|code|LDR             R0, [R0,#4]|64-104
41404|code|MOV             R5, R1|13-70
41406|code|CMP             R0, R3|152-66
41408|code|BEQ             loc_A1EE|21-208
41410|code|CBZ             R0, loc_A1CC|24-177
41412|code|LDR.W           R3, [R0,#-4]|80-248-4-60
41416|code|STR             R3, [R0]|3-96
41418|code|LDR             R0, [R4,#4]|96-104
41420|code|SUBS            R3, R0, #4|3-31
41422|code|ADDS            R1, R0, #4|1-29
41424|code|SUBS            R3, R3, R5|91-27
41426|code|STR             R1, [R4,#4]|97-96
41428|code|LDR             R4, [R2]|20-104
41430|code|ASRS            R3, R3, #2|155-16
41432|code|BNE             loc_A1E2|3-209
41434|code|STR             R4, [R5]|44-96
41436|code|ADD             SP, SP, #0xC|3-176
41438|code|POP.W           {R4-R9,PC}|189-232-240-131
41442|code|LSLS            R2, R3, #2; n|154-0
41444|code|MOV             R1, R5; src|41-70
41446|code|SUBS            R0, R0, R2; dest|128-26
41448|code|BLX             memmove|254-247-40-239
41452|code|B               loc_A1DA|245-231
41454|code|LDR             R3, [R4]|35-104
41456|code|SUBS            R0, R0, R3|192-26
41458|code|ASRS            R0, R0, #2|128-16
41460|code|BEQ             loc_A266|55-208
41462|code|LSLS            R1, R0, #1|65-0
41464|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
41468|code|CMP             R1, R6|177-66
41470|code|IT CC|56-191
41472|code|MOVCC           R6, R1|14-70
41474|code|LSLS            R7, R6, #2|183-0
41476|code|CMP             R0, R1|136-66
41478|code|BLS             loc_A210|3-217
41480|code|MOV             R7, #0xFFFFFFFC|111-240-3-7
41484|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
41488|code|RSB.W           R8, R3, R5|195-235-5-8
41492|code|MOV.W           R8, R8,ASR#2|79-234-168-8
41496|code|CBZ             R6, loc_A226|46-177
41498|code|MOV             R0, R7; unsigned int|56-70
41500|code|STR             R2, [SP,#0x28+var_24]|1-146
41502|code|BLX             _Znwj; operator new(uint)|254-247-202-238
41506|code|LDR             R2, [SP,#0x28+var_24]|1-154
41508|code|MOV             R6, R0|6-70
41510|code|ADD.W           R3, R6, R8,LSL#2|6-235-136-3
41514|code|CBZ             R3, loc_A232|19-177
41516|code|LDR             R3, [R2]|19-104
41518|code|STR.W           R3, [R6,R8,LSL#2]|70-248-40-48
41522|code|LDR             R1, [R4]; src|33-104
41524|code|RSB.W           R9, R1, R5|193-235-5-9
41528|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
41532|code|BNE             loc_A26C|22-209
41534|code|LDR             R3, [R4,#4]|99-104
41536|code|ADD             R9, R6|177-68
41538|code|ADD.W           R9, R9, #4|9-241-4-9
41542|code|RSB.W           R8, R5, R3|197-235-3-8
41546|code|MOVS.W          R8, R8,ASR#2|95-234-168-8
41550|code|BNE             loc_A27A|20-209
41552|code|LDR             R0, [R4]; void *|32-104
41554|code|ADD.W           R5, R9, R8|9-235-8-5
41558|code|CBZ             R0, loc_A25C|8-177
41560|code|BLX             _ZdlPv; operator delete(void *)|254-247-46-238
41564|code|ADDS            R7, R6, R7|247-25
41566|code|STR             R6, [R4]|38-96
41568|code|STR             R5, [R4,#4]|101-96
41570|code|STR             R7, [R4,#8]|167-96
41572|code|B               loc_A1DC|186-231
41574|code|MOVS            R7, #4|4-39
41576|code|MOVS            R6, #1|1-38
41578|code|B               loc_A210|209-231
41580|code|MOV.W           R9, R9,LSL#2|79-234-137-9
41584|code|MOV             R0, R6; dest|48-70
41586|code|MOV             R2, R9; n|74-70
41588|code|BLX             memmove|254-247-226-238
41592|code|B               loc_A23E|225-231
41594|code|MOV.W           R8, R8,LSL#2|79-234-136-8
41598|code|MOV             R0, R9; dest|72-70
41600|code|MOV             R1, R5; src|41-70
41602|code|MOV             R2, R8; n|66-70
41604|code|BLX             memmove|254-247-218-238
41608|code|B               loc_A250|226-231
41610|data|ALIGN 4|0-191
41612|code|PUSH.W          {R4-R9,LR}|45-233-240-67
41616|code|MOV             R4, R0|4-70
41618|code|LDR             R3, [R4,#8]|163-104
41620|code|SUB             SP, SP, #0xC|131-176
41622|code|LDR             R0, [R0,#4]|64-104
41624|code|MOV             R5, R1|13-70
41626|code|CMP             R0, R3|152-66
41628|code|BEQ             loc_A2C8|20-208
41630|code|CBZ             R0, loc_A2A6|16-177
41632|code|LDR.W           R3, [R0,#-4]|80-248-4-60
41636|code|STR             R3, [R0]|3-96
41638|code|SUBS            R3, R0, #4|3-31
41640|code|ADDS            R1, R0, #4|1-29
41642|code|SUBS            R3, R3, R5|91-27
41644|code|STR             R1, [R4,#4]|97-96
41646|code|LDR             R4, [R2]|20-104
41648|code|ASRS            R3, R3, #2|155-16
41650|code|BNE             loc_A2BC|3-209
41652|code|STR             R4, [R5]|44-96
41654|code|ADD             SP, SP, #0xC|3-176
41656|code|POP.W           {R4-R9,PC}|189-232-240-131
41660|code|LSLS            R2, R3, #2; n|154-0
41662|code|MOV             R1, R5; src|41-70
41664|code|SUBS            R0, R0, R2; dest|128-26
41666|code|BLX             memmove|254-247-188-238
41670|code|B               loc_A2B4|245-231
41672|code|LDR             R1, [R4]|33-104
41674|code|SUBS            R0, R0, R1|64-26
41676|code|ASRS            R0, R0, #2|128-16
41678|code|BEQ             loc_A33C|53-208
41680|code|LSLS            R3, R0, #1|67-0
41682|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
41686|code|CMP             R3, R6|179-66
41688|code|IT CC|56-191
41690|code|MOVCC           R6, R3|30-70
41692|code|LSLS            R7, R6, #2|183-0
41694|code|CMP             R0, R3|152-66
41696|code|BLS             loc_A2EA|3-217
41698|code|MOV             R7, #0xFFFFFFFC|111-240-3-7
41702|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
41706|code|SUBS            R3, R5, R1|107-26
41708|code|ASRS            R3, R3, #2|155-16
41710|code|MOV             R8, R3|152-70
41712|code|CBZ             R6, loc_A304|70-177
41714|code|MOV             R0, R7; unsigned int|56-70
41716|code|STR             R2, [SP,#0x28+var_24]|1-146
41718|code|BLX             _Znwj; operator new(uint)|254-247-94-238
41722|code|LDR             R1, [R4]; src|33-104
41724|code|LDR             R2, [SP,#0x28+var_24]|1-154
41726|code|SUBS            R3, R5, R1|107-26
41728|code|ASRS            R3, R3, #2|155-16
41730|code|MOV             R6, R0|6-70
41732|code|ADD.W           R0, R6, R8,LSL#2|6-235-136-0
41736|code|CBZ             R0, loc_A310|16-177
41738|code|LDR             R2, [R2]|18-104
41740|code|STR.W           R2, [R6,R8,LSL#2]|70-248-40-32
41744|code|MOV             R9, R3|153-70
41746|code|CBNZ            R3, loc_A342|179-185
41748|code|LDR             R3, [R4,#4]|99-104
41750|code|ADD             R9, R6|177-68
41752|code|ADD.W           R9, R9, #4|9-241-4-9
41756|code|RSB.W           R8, R5, R3|197-235-3-8
41760|code|MOVS.W          R8, R8,ASR#2|95-234-168-8
41764|code|BNE             loc_A350|20-209
41766|code|LDR             R0, [R4]; void *|32-104
41768|code|ADD.W           R5, R9, R8|9-235-8-5
41772|code|CBZ             R0, loc_A332|8-177
41774|code|BLX             _ZdlPv; operator delete(void *)|254-247-196-237
41778|code|ADDS            R7, R6, R7|247-25
41780|code|STR             R6, [R4]|38-96
41782|code|STR             R5, [R4,#4]|101-96
41784|code|STR             R7, [R4,#8]|167-96
41786|code|B               loc_A2B6|188-231
41788|code|MOVS            R7, #4|4-39
41790|code|MOVS            R6, #1|1-38
41792|code|B               loc_A2EA|211-231
41794|code|MOV.W           R9, R3,LSL#2|79-234-131-9
41798|code|MOV             R0, R6; dest|48-70
41800|code|MOV             R2, R9; n|74-70
41802|code|BLX             memmove|254-247-120-238
41806|code|B               loc_A314|225-231
41808|code|MOV.W           R8, R8,LSL#2|79-234-136-8
41812|code|MOV             R0, R9; dest|72-70
41814|code|MOV             R1, R5; src|41-70
41816|code|MOV             R2, R8; n|66-70
41818|code|BLX             memmove|254-247-112-238
41822|code|B               loc_A326|226-231
41824|code|PUSH.W          {R4-R8,LR}|45-233-240-65
41828|code|SUB             SP, SP, #8|130-176
41830|code|MOVS            R3, #0|0-35
41832|code|MOV             R5, R0|5-70
41834|code|MOV             R6, R1|14-70
41836|code|MOV             R4, R2|20-70
41838|code|STR             R3, [SP,#4]|1-147
41840|code|CMP             R0, #0|0-40
41842|code|BEQ             loc_A3EC|59-208
41844|code|LDR             R1, =aD; "%d"|60-73
41846|code|ADD             R2, SP, #4|1-170
41848|code|BLX             sscanf|254-247-242-237
41852|code|CMP             R0, #1|1-40
41854|code|MOV             R8, R0|128-70
41856|code|BEQ             loc_A414|72-208
41858|code|MOV             R0, R5|40-70
41860|code|BLX             getpwnam|254-247-156-238
41864|code|CMP             R0, #0|0-40
41866|code|BEQ             loc_A434|83-208
41868|code|LDR             R7, [R0,#8]|135-104
41870|code|MOVS            R3, #1|1-35
41872|code|LDR             R5, [R0,#0xC]|197-104
41874|code|CMP             R6, #0|0-46
41876|code|BEQ             loc_A3F6|47-208
41878|code|MOV             R0, R6|48-70
41880|code|LDR             R1, =aD; "%d"|51-73
41882|code|ADD             R2, SP, #4|1-170
41884|code|BLX             sscanf|254-247-224-237
41888|code|CMP             R0, #1|1-40
41890|code|IT EQ|8-191
41892|code|LDREQ           R5, [SP,#4]|1-157
41894|code|BEQ             loc_A3B4|5-208
41896|code|MOV             R0, R6|48-70
41898|code|BLX             getgrnam|254-247-146-237
41902|code|CMP             R0, #0|0-40
41904|code|BEQ             loc_A444|72-208
41906|code|LDR             R5, [R0,#8]|133-104
41908|code|MOV             R0, R5|40-70
41910|code|BLX             setgid|254-247-96-238
41914|code|CMP             R0, #0|0-40
41916|code|BNE             loc_A424|50-209
41918|code|MOV             R0, R7|56-70
41920|code|BLX             setuid|254-247-200-237
41924|code|CMP             R0, #0|0-40
41926|code|BNE             loc_A404|29-209
41928|code|CBNZ            R4, loc_A3E6|108-185
41930|code|LDR             R3, =stderr|40-75
41932|code|LDR             R6, [R3]|30-104
41934|code|BLX             getuid|254-247-164-237
41938|code|MOV             R5, R0|5-70
41940|code|BLX             getgid|254-247-122-238
41944|code|LDR             R1, =aUsingUidDGidD; "Using uid:%d, gid:%d.\n"|37-73
41946|code|MOV             R2, R5|42-70
41948|code|MOV             R3, R0|3-70
41950|code|MOV             R0, R6|48-70
41952|code|BLX             fprintf|254-247-8-238
41956|code|MOV             R0, R4|32-70
41958|code|ADD             SP, SP, #8|2-176
41960|code|POP.W           {R4-R8,PC}|189-232-240-129
41964|code|MOV             R3, R0|3-70
41966|code|MOV             R5, R0|5-70
41968|code|MOV             R7, R0|7-70
41970|code|CMP             R6, #0|0-46
41972|code|BNE             loc_A396|207-209
41974|code|CMP             R3, #0|0-43
41976|code|BNE             loc_A3B4|220-209
41978|code|MOV             R0, R7|56-70
41980|code|BLX             setuid|254-247-170-237
41984|code|CMP             R0, #0|0-40
41986|code|BEQ             loc_A3C8|225-208
41988|code|LDR             R3, =stderr|25-75
41990|code|MOV             R2, R7|58-70
41992|code|LDR             R1, =aCanTSetUidToD; "Can't set uid to %d.\n"|26-73
41994|code|LDR             R0, [R3]|24-104
41996|code|BLX             fprintf|254-247-242-237
42000|code|MOVS            R0, #1|1-32
42002|code|B               loc_A3E6|232-231
42004|code|LDR             R7, [SP,#4]|1-159
42006|code|MOV             R0, R7|56-70
42008|code|BLX             getpwuid|254-247-180-237
42012|code|CBZ             R0, loc_A454|208-177
42014|code|LDR             R5, [R0,#0xC]|197-104
42016|code|MOV             R3, R8|67-70
42018|code|B               loc_A392|182-231
42020|code|LDR             R3, =stderr|17-75
42022|code|MOV             R2, R5|42-70
42024|code|LDR             R1, =aCanTSetGidToD; "Can't set gid to %d.\n"|19-73
42026|code|LDR             R0, [R3]|24-104
42028|code|BLX             fprintf|254-247-226-237
42032|code|MOVS            R0, #1|1-32
42034|code|B               loc_A3E6|216-231
42036|code|LDR             R3, =stderr|13-75
42038|code|MOV             R2, R5|42-70
42040|code|LDR             R1, =aCanTFindUserS; "Can't find user %s\n"|16-73
42042|code|LDR             R0, [R3]|24-104
42044|code|BLX             fprintf|254-247-218-237
42048|code|MOVS            R0, #1|1-32
42050|code|B               loc_A3E6|208-231
42052|code|LDR             R3, =stderr|9-75
42054|code|MOV             R2, R6|50-70
42056|code|LDR             R1, =aCanTFindGroupS; "Can't find group %s\n"|13-73
42058|code|LDR             R0, [R3]|24-104
42060|code|BLX             fprintf|254-247-210-237
42064|code|MOVS            R0, #1|1-32
42066|code|B               loc_A3E6|200-231
42068|code|LDR             R0, =aNogroup; "nogroup"|11-72
42070|code|BLX             getgrnam|254-247-60-237
42074|code|MOV             R3, R0|3-70
42076|code|MOV             R5, R0|5-70
42078|code|CMP             R0, #0|0-40
42080|code|BEQ             loc_A392|151-208
42082|code|LDR             R5, [R0,#8]|133-104
42084|code|MOV             R3, R8|67-70
42086|code|B               loc_A392|148-231
42088|data|DCD aD; "%d"|224-170-0-0
42092|data|DCD stderr|224-47-1-0
42096|data|DCD aUsingUidDGidD; "Using uid:%d, gid:%d.\n"|72-171-0-0
42100|data|DCD aCanTSetUidToD; "Can't set uid to %d.\n"|48-171-0-0
42104|data|DCD aCanTSetGidToD; "Can't set gid to %d.\n"|24-171-0-0
42108|data|DCD aCanTFindUserS; "Can't find user %s\n"|236-170-0-0
42112|data|DCD aCanTFindGroupS; "Can't find group %s\n"|0-171-0-0
42116|data|DCD aNogroup; "nogroup"|228-170-0-0
42120|code|PUSH            {R4,LR}|16-181
42122|code|SUB             SP, SP, #0x48 ; 'H'|146-176
42124|code|MOV             R4, R1|12-70
42126|code|MOVS            R0, #0|0-32
42128|code|MOV             R1, SP|105-70
42130|code|BLX             getrusage|254-247-42-237
42134|code|VLDR            S7, [SP,#4]|221-237-1-58
42138|code|VLDR            S9, [SP,#0xC]|221-237-3-74
42142|code|VCVT.F64.S32    D6, S7|184-238-227-107
42146|code|VLDR            D7, =1000000.0|159-237-13-123
42150|code|VLDR            S7, [SP]|221-237-0-58
42154|code|MOVS            R0, #0|0-32
42156|code|VCVT.F64.S32    D5, S9|184-238-228-91
42160|code|VDIV.F64        D6, D6, D7|134-238-7-107
42164|code|VDIV.F64        D7, D5, D7|133-238-7-123
42168|code|VCVT.F64.S32    D5, S7|184-238-227-91
42172|code|VLDR            S7, [SP,#8]|221-237-2-58
42176|code|VCVT.F64.S32    D4, S7|184-238-227-75
42180|code|VADD.F64        D6, D5, D6|53-238-6-107
42184|code|VADD.F64        D7, D4, D7|52-238-7-123
42188|code|VADD.F64        D6, D6, D7|54-238-7-107
42192|code|VSTR            D6, [R4]|132-237-0-107
42196|code|ADD             SP, SP, #0x48 ; 'H'|18-176
42198|code|POP             {R4,PC}|16-189
42200|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
42208|code|PUSH            {R4,LR}|16-181
42210|code|SUB             SP, SP, #8|130-176
42212|code|MOV             R4, R1|12-70
42214|code|MOVS            R1, #0; tz|0-33
42216|code|MOV             R0, SP; tv|104-70
42218|code|BLX             gettimeofday|254-247-46-237
42222|code|ADDS            R0, #1|1-48
42224|code|BEQ             loc_A518|18-208
42226|code|VLDR            S11, [SP,#0x10+var_C]|221-237-1-90
42230|code|VCVT.F64.S32    D6, S11|184-238-229-107
42234|code|VLDR            D7, =1000000.0|159-237-9-123
42238|code|VLDR            S11, [SP,#0x10+var_10]|221-237-0-90
42242|code|MOVS            R0, #0|0-32
42244|code|VDIV.F64        D6, D6, D7|134-238-7-107
42248|code|VCVT.F64.S32    D7, S11|184-238-229-123
42252|code|VADD.F64        D7, D7, D6|55-238-6-123
42256|code|VSTR            D7, [R4]|132-237-0-123
42260|code|ADD             SP, SP, #8|2-176
42262|code|POP             {R4,PC}|16-189
42264|code|MOVS            R0, #1|1-32
42266|code|B               loc_A514|251-231
42268|data|DCD 0x8000F3AF|175-243-0-128
42272|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
42280|code|LDR             R1, =off_A998|4-73
42282|code|MOVS            R2, #0|0-34
42284|code|MOVS            R3, #0|0-35
42286|code|STRD.W          R2, R3, [R0,#8]|192-233-2-35
42290|code|STRD.W          R2, R3, [R0,#0x10]|192-233-4-35
42294|code|STR             R1, [R0]|1-96
42296|code|BX              LR|112-71
42298|data|ALIGN 4|0-191
42300|data|DCD off_A998|152-169-0-0
42304|code|MOV             R1, R0|1-70
42306|code|LDR.W           R3, [R1],#8|81-248-8-59
42310|code|PUSH            {R4,LR}|16-181
42312|code|MOV             R4, R0|4-70
42314|code|LDR             R3, [R3,#8]|155-104
42316|code|BLX             R3|152-71
42318|code|VLDR            D0, [R4,#8]|148-237-2-11
42322|code|POP             {R4,PC}|16-189
42324|code|LDR             R3, [R0]|3-104
42326|code|PUSH            {R4,LR}|16-181
42328|code|SUB             SP, SP, #8|130-176
42330|code|LDR             R3, [R3,#8]|155-104
42332|code|MOV             R4, R0|4-70
42334|code|MOV             R1, SP|105-70
42336|code|BLX             R3|152-71
42338|code|VLDR            D5, [R4,#8]|148-237-2-91
42342|code|VLDR            D6, [SP,#0x10+var_10]|157-237-0-107
42346|code|VSUB.F64        D6, D6, D5|54-238-69-107
42350|code|VLDR            D7, [R4,#0x10]|148-237-4-123
42354|code|VCMP.F64        D6, D7|180-238-71-107
42358|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
42362|code|IT GT|200-191
42364|code|VMOVGT.F64      D7, D6|176-238-70-123
42368|code|VMOV.F64        D0, D6|176-238-70-11
42372|code|VSTR            D7, [R4,#0x10]|132-237-4-123
42376|code|ADD             SP, SP, #8|2-176
42378|code|POP             {R4,PC}|16-189
42380|code|NOP.W|175-243-0-128
42384|code|LDR             R3, =off_A998|1-75
42386|code|STR             R3, [R0]|3-96
42388|code|BX              LR|112-71
42390|data|ALIGN 4|0-191
42392|data|DCD off_A998|152-169-0-0
42396|code|LDR             R3, =off_A998|1-75
42398|code|STR             R3, [R0]|3-96
42400|code|BX              LR|112-71
42402|data|ALIGN 4|0-191
42404|data|DCD off_A998|152-169-0-0
42408|code|LDR             R3, =off_A998|3-75
42410|code|PUSH            {R4,LR}|16-181
42412|code|MOV             R4, R0|4-70
42414|code|STR             R3, [R0]|3-96
42416|code|BLX             _ZdlPv; operator delete(void *)|254-247-130-236
42420|code|MOV             R0, R4|32-70
42422|code|POP             {R4,PC}|16-189
42424|data|DCD off_A998|152-169-0-0
42428|code|LDR             R3, =off_A998|3-75
42430|code|PUSH            {R4,LR}|16-181
42432|code|MOV             R4, R0|4-70
42434|code|STR             R3, [R0]|3-96
42436|code|BLX             _ZdlPv; operator delete(void *)|254-247-120-236
42440|code|MOV             R0, R4|32-70
42442|code|POP             {R4,PC}|16-189
42444|data|DCD off_A998|152-169-0-0
42448|code|PUSH.W          {R3-R9,LR}|45-233-248-67
42452|code|MOV             R6, R0|6-70
42454|code|LDR             R5, =(off_12D7C - 0xA5E4)|13-77
42456|code|MOV             R7, R1|15-70
42458|code|LDR.W           R9, =(off_12D80 - 0xA5EA)|223-248-52-144
42462|code|MOV             R8, R2|144-70
42464|code|ADD             R5, PC; off_12D7C|125-68
42466|code|BL              .init_proc|254-247-51-252
42470|code|ADD             R9, PC; off_12D80|249-68
42472|code|RSB.W           R9, R5, R9|197-235-9-9
42476|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
42480|code|BEQ             locret_A606|9-208
42482|code|MOVS            R4, #0|0-36
42484|code|LDR.W           R3, [R5],#4|85-248-4-59
42488|code|MOV             R0, R6|48-70
42490|code|MOV             R1, R7|57-70
42492|code|MOV             R2, R8|66-70
42494|code|ADDS            R4, #1|1-52
42496|code|BLX             R3; sub_9384|152-71
42498|code|CMP             R4, R9|76-69
42500|code|BNE             loc_A5F4|246-209
42502|code|POP.W           {R3-R9,PC}|189-232-248-131
42506|data|ALIGN 4|0-191
42508|data|DCD off_12D7C - 0xA5E4|152-135-0-0
42512|data|DCD off_12D80 - 0xA5EA|150-135-0-0
42516|code|BX              LR|112-71
42518|data|ALIGN 4|0-191
42520|code|PUSH            {R3,LR}|8-181
42522|code|NOP|0-191
42524|code|POP             {R3,PC}|8-189
42526|data|DCW 0|0-0
77180|data|DCD sub_9384+1|133-147-0-0
77184|data|DCD sub_9374+1|117-147-0-0
77188|data|DCD 0|0-0-0-0
77192|data|Elf32_Dyn <1, <1>>; DT_NEEDED libpthread.so.0|1-0-0-0-1-0-0-0
77200|data|Elf32_Dyn <1, <0xA4>>; DT_NEEDED libstdc++.so.6|1-0-0-0-164-0-0-0
77208|data|Elf32_Dyn <1, <0x15E>>; DT_NEEDED libm.so.6|1-0-0-0-94-1-0-0
77216|data|Elf32_Dyn <1, <0x168>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-104-1-0-0
77224|data|Elf32_Dyn <1, <0x1B1>>; DT_NEEDED libc.so.6|1-0-0-0-177-1-0-0
77232|data|Elf32_Dyn <0xC, <0x8E4D>>; DT_INIT|12-0-0-0-77-142-0-0
77240|data|Elf32_Dyn <0xD, <0xA619>>; DT_FINI|13-0-0-0-25-166-0-0
77248|data|Elf32_Dyn <0x19, <0x12D7C>>; DT_INIT_ARRAY|25-0-0-0-124-45-1-0
77256|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77264|data|Elf32_Dyn <0x1A, <0x12D80>>; DT_FINI_ARRAY|26-0-0-0-128-45-1-0
77272|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77280|data|Elf32_Dyn <4, <0x8194>>; DT_HASH|4-0-0-0-148-129-0-0
77288|data|Elf32_Dyn <0x6FFFFEF5, <0x8320>>; DT_GNU_HASH|245-254-255-111-32-131-0-0
77296|data|Elf32_Dyn <5, <0x88A0>>; DT_STRTAB|5-0-0-0-160-136-0-0
77304|data|Elf32_Dyn <6, <0x84E0>>; DT_SYMTAB|6-0-0-0-224-132-0-0
77312|data|Elf32_Dyn <0xA, <0x2DC>>; DT_STRSZ|10-0-0-0-220-2-0-0
77320|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77328|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77336|data|Elf32_Dyn <3, <0x12E98>>; DT_PLTGOT|3-0-0-0-152-46-1-0
77344|data|Elf32_Dyn <2, <0x198>>; DT_PLTRELSZ|2-0-0-0-152-1-0-0
77352|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77360|data|Elf32_Dyn <0x17, <0x8CB4>>; DT_JMPREL|23-0-0-0-180-140-0-0
77368|data|Elf32_Dyn <0x11, <0x8C84>>; DT_REL|17-0-0-0-132-140-0-0
77376|data|Elf32_Dyn <0x12, <0x30>>; DT_RELSZ|18-0-0-0-48-0-0-0
77384|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77392|data|Elf32_Dyn <0x6FFFFFFE, <0x8BF4>>; DT_VERNEED|254-255-255-111-244-139-0-0
77400|data|Elf32_Dyn <0x6FFFFFFF, <4>>; DT_VERNEEDNUM|255-255-255-111-4-0-0-0
77408|data|Elf32_Dyn <0x6FFFFFF0, <0x8B7C>>; DT_VERSYM|240-255-255-111-124-139-0-0
77416|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77464|data|DCD stru_12D88|136-45-1-0
77468|data|DCD 0|0-0-0-0
77472|data|DCD 0|0-0-0-0
77476|data|DCD __imp_qsort|96-48-1-0
77480|data|DCD __imp_abort|52-48-1-0
77484|data|DCD __imp_localtime|116-48-1-0
77488|data|DCD __imp_pthread_attr_setdetachstate|156-48-1-0
77492|data|DCD __imp___libc_start_main|28-48-1-0
77496|data|DCD __imp___gmon_start__|188-48-1-0
77500|data|DCD __imp__ZdlPv; operator delete(void *)|160-48-1-0
77504|data|DCD __imp_fclose|108-48-1-0
77508|data|DCD __imp_getgrnam|32-48-1-0
77512|data|DCD __imp_calloc|168-48-1-0
77516|data|DCD __imp_getrusage|164-48-1-0
77520|data|DCD __imp_fopen|8-48-1-0
77524|data|DCD __imp___cxa_end_cleanup|248-47-1-0
77528|data|DCD __imp_fsync|144-48-1-0
77532|data|DCD __imp_getuid|100-48-1-0
77536|data|DCD __imp_free|16-48-1-0
77540|data|DCD __imp_read|20-48-1-0
77544|data|DCD __imp_write|112-48-1-0
77548|data|DCD __imp_gettimeofday|0-48-1-0
77552|data|DCD __imp_setuid|56-48-1-0
77556|data|DCD __imp_sscanf|72-48-1-0
77560|data|DCD __imp_getopt|124-48-1-0
77564|data|DCD __imp_pthread_create|244-47-1-0
77568|data|DCD __imp_getpwuid|136-48-1-0
77572|data|DCD __imp_strtol|128-48-1-0
77576|data|DCD __imp_open64|40-48-1-0
77580|data|DCD __imp___cxa_pure_virtual|104-48-1-0
77584|data|DCD __imp__Znwj; operator new(uint)|4-48-1-0
77588|data|DCD __imp_close|68-48-1-0
77592|data|DCD __imp_fwrite|176-48-1-0
77596|data|DCD __imp__Znaj; operator new[](uint)|76-48-1-0
77600|data|DCD __imp_time|24-48-1-0
77604|data|DCD __imp_fprintf|48-48-1-0
77608|data|DCD __imp_strdup|36-48-1-0
77612|data|DCD __imp_lseek64|12-48-1-0
77616|data|DCD __imp_pthread_attr_init|132-48-1-0
77620|data|DCD __imp_poll|252-47-1-0
77624|data|DCD __imp_sleep|88-48-1-0
77628|data|DCD __imp_memmove|180-48-1-0
77632|data|DCD __imp_puts|172-48-1-0
77636|data|DCD __imp___aeabi_idiv|60-48-1-0
77640|data|DCD __imp_pthread_attr_destroy|64-48-1-0
77644|data|DCD __imp_lseek|148-48-1-0
77648|data|DCD __imp_setgid|44-48-1-0
77652|data|DCD __imp___gxx_personality_v0|84-48-1-0
77656|data|DCD __imp_pipe|140-48-1-0
77660|data|DCD __imp_strcmp|120-48-1-0
77664|data|DCD __imp_exit|80-48-1-0
77668|data|DCD __imp_pthread_join|184-48-1-0
77672|data|DCD __imp_getpwnam|152-48-1-0
77676|data|DCD __imp_getgid|92-48-1-0
77680|data|DCD __imp___gmon_start__|188-48-1-0
77684|data|ALIGN 8|0-0-0-0
