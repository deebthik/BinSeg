address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|21-157-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x865C; SHT file offset|92-134-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x82D4; File offset|212-130-0-0
32828|data|DCD unk_102D4; Virtual address|212-2-1-0
32832|data|DCD 0x102D4; Physical address|212-2-1-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibArmLinuxGnu; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x27; Size in file image|39-0-0-0
32904|data|DCD 0x27; Size in memory image|39-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x82E0; Size in file image|224-130-0-0
32936|data|DCD 0x82E0; Size in memory image|224-130-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x82E0; File offset|224-130-0-0
32956|data|DCD off_182E0; Virtual address|224-130-1-0
32960|data|DCD 0x182E0; Physical address|224-130-1-0
32964|data|DCD 0x258; Size in file image|88-2-0-0
32968|data|DCD 0x298; Size in memory image|152-2-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x82EC; File offset|236-130-0-0
32988|data|DCD stru_182EC; Virtual address|236-130-1-0
32992|data|DCD 0x182EC; Physical address|236-130-1-0
32996|data|DCD 0x108; Size in file image|8-1-0-0
33000|data|DCD 0x108; Size in memory image|8-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x15C; File offset|92-1-0-0
33020|data|DCD dword_815C; Virtual address|92-129-0-0
33024|data|DCD 0x815C; Physical address|92-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/arm-linux-gnueabihf/ld-linux.so.3",0|47-108-105-98-47-97-114-109-45-108-105-110-117-120-45-103-110-117-101-97-98-105-104-102-47-108-100-45-108-105-110-117-120-46-115-111-46-51-0
33115|data|DCB 0|0
33116|data|DCD 4; Name Size|4-0-0-0
33120|data|DCD 0x10; Desc Size|16-0-0-0
33124|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33128|data|DCB "GNU",0; Name|71-78-85-0
33132|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33148|data|DCD 4; Name Size|4-0-0-0
33152|data|DCD 0x14; Desc Size|20-0-0-0
33156|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33160|data|DCB "GNU",0; Name|71-78-85-0
33164|data|DCB 0x38, 0x3C, 0x11, 2, 0xD4, 0x20, 0xDA, 0x3C, 0x52; Desc|56-60-17-2-212-32-218-60-82-245-143-86-75-153-108-157-168-253-190-1
33184|data|DCD 0x43|67-0-0-0
33188|data|DCD 0x53|83-0-0-0
33192|data|DCD 0, 2, 0, 0x26, 0x4A, 0x4C, 0x17, 0x14, 0, 0x13, 0x1D|0-0-0-0-2-0-0-0-0-0-0-0-38-0-0-0-74-0-0-0-76-0-0-0-23-0-0-0-20-0-0-0-0-0-0-0-19-0-0-0-29-0-0-0-37-0-0-0-32-0-0-0-0-0-0-0-10-0-0-0-34-0-0-0-0-0-0-0-0-0-0-0-72-0-0-0-30-0-0-0-0-0-0-0-22-0-0-0-28-0-0-0-73-0-0-0-0-0-0-0-64-0-0-0-44-0-0-0-0-0-0-0-24-0-0-0-39-0-0-0-80-0-0-0-0-0-0-0-21-0-0-0-0-0-0-0-58-0-0-0-1-0-0-0-0-0-0-0-13-0-0-0-67-0-0-0-65-0-0-0-51-0-0-0-0-0-0-0-12-0-0-0-70-0-0-0-4-0-0-0-7-0-0-0-0-0-0-0-25-0-0-0-8-0-0-0-0-0-0-0-0-0-0-0-27-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-81-0-0-0-33-0-0-0-63-0-0-0-16-0-0-0-59-0-0-0-43-0-0-0-48-0-0-0-71-0-0-0-47-0-0-0-66-0-0-0-3-0-0-0-82-0-0-0
33460|data|DCD 0, 0x37, 0x36, 0, 0, 0, 0, 0xE, 0, 0, 0x2D, 0, 0, 0|0-0-0-0-55-0-0-0-54-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-14-0-0-0-0-0-0-0-0-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-56-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-5-0-0-0-57-0-0-0-40-0-0-0-0-0-0-0-36-0-0-0-0-0-0-0-46-0-0-0-49-0-0-0-0-0-0-0-78-0-0-0-0-0-0-0-53-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-41-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-61-0-0-0-0-0-0-0-6-0-0-0-79-0-0-0-9-0-0-0-0-0-0-0-0-0-0-0-35-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-75-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-52-0-0-0-42-0-0-0-50-0-0-0-31-0-0-0-60-0-0-0-0-0-0-0-0-0-0-0-11-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-15-0-0-0-17-0-0-0-0-0-0-0-0-0-0-0-69-0-0-0-0-0-0-0-77-0-0-0-0-0-0-0-68-0-0-0-0-0-0-0-0-0-0-0-26-0-0-0-62-0-0-0
33792|data|DCD 0x43|67-0-0-0
33796|data|DCD 3|3-0-0-0
33800|data|DCD 0x10|16-0-0-0
33804|data|DCD 9|9-0-0-0
33808|data|DCD 0x1C0C1A4, 0x970B6085, 0x59003854, 0x90410008, 0x15100082|164-193-192-1-133-96-11-151-84-56-0-89-8-0-65-144-130-0-16-21-32-32-7-1-128-12-64-0-16-161-68-194-130-136-130-40-19-65-64-117-66-34-129-4-211-12-64-34-162-64-1-100-0-68-160-9-99-210-180-18-40-8-16-193
33872|data|DCD 3, 5, 6, 0, 0, 0, 7, 9, 0xA, 0xB, 0x11, 0, 0x13, 0x15|3-0-0-0-5-0-0-0-6-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-7-0-0-0-9-0-0-0-10-0-0-0-11-0-0-0-17-0-0-0-0-0-0-0-19-0-0-0-21-0-0-0-22-0-0-0-23-0-0-0-0-0-0-0-25-0-0-0-26-0-0-0-28-0-0-0-0-0-0-0-30-0-0-0-34-0-0-0-36-0-0-0-38-0-0-0-0-0-0-0-0-0-0-0-40-0-0-0-42-0-0-0-0-0-0-0-43-0-0-0-0-0-0-0-46-0-0-0-48-0-0-0-49-0-0-0-50-0-0-0-0-0-0-0-0-0-0-0-51-0-0-0-52-0-0-0-0-0-0-0-0-0-0-0-53-0-0-0-55-0-0-0-58-0-0-0-59-0-0-0-0-0-0-0-62-0-0-0-63-0-0-0-65-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-66-0-0-0-0-0-0-0-67-0-0-0-69-0-0-0-71-0-0-0-73-0-0-0-75-0-0-0-76-0-0-0-77-0-0-0-79-0-0-0-80-0-0-0-82-0-0-0
34140|data|DCD 0x7C95E5C0, 0xD3764DCF, 0xD34B1D81, 0x3E48FCE9, 0x526629CE|192-229-149-124-207-77-118-211-129-29-75-211-233-252-72-62-206-41-102-82-125-237-17-15-57-242-139-28-87-211-166-4-44-50-64-253-66-8-222-50-102-85-97-16-4-108-178-205-98-62-180-100-243-190-71-62-60-173-57-13-41-29-140-28-0-35-249-164-173-112-14-175-81-181-168-16-149-120-158-124-22-227-63-15-47-78-61-246-235-113-137-194-128-116-130-13-179-162-247-18-50-196-247-18-35-190-15-175-32-98-100-7-144-117-130-13-46-3-49-28-175-111-136-11-94-150-147-28-135-240-150-124-24-220-119-137-177-74-69-75-26-159-214-189-9-172-249-143-184-43-107-21-199-195-238-28-17-123-156-124-102-73-73-34-254-199-60-16-193-179-247-18-214-148-147-28-29-87-187-214-135-75-133-230-207-107-136-11-65-77-157-124-237-222-147-28-99-172-97-160-96-151-102-67-71-88-55-15-198-14-224-61-156-187-147-28-93-240-108-15-97-51-102-15-62-126-150-124-62-249-255-188-249-44-88-190-37-117-130-13-236-136-101-7-91-154-59-15-57-64-12-175-201-57-64-31-124-96-156-124-33-49-231-75-86-219-147-28-245-241-171-186-6-174-213-39-49-184-130-13-246-228-16-209-187-149-147-28-197-111-73-62-45-180-56-82-202-150-147-28-205-205-132-124-159-251-110-15-10-15-181-165-15-132-29-230-229-255-35-225
34460|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34476|data|Elf32_Sym <aGmonStart - byte_8BCC, 0, 0, 0x20, 0, 0>; "__gmon_start__"|17-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34492|data|Elf32_Sym <aJvRegisterclas - byte_8BCC, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|32-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34508|data|Elf32_Sym <aDup2 - byte_8BCC, dup2, 0, 0x12, 0, 0>; "dup2"|6-2-0-0-148-147-0-0-0-0-0-0-18-0-0-0
34524|data|Elf32_Sym <aConnect - byte_8BCC, connect, 0, 0x12, 0, 0>; "connect"|71-1-0-0-8-150-0-0-0-0-0-0-18-0-0-0
34540|data|Elf32_Sym <aGendersNodelis - byte_8BCC, genders_nodelist_create, 0, \; "genders_nodelist_create"|92-0-0-0-36-148-0-0-0-0-0-0-18-0-0-0
34556|data|Elf32_Sym <aRegexec - byte_8BCC, regexec, 0, 0x12, 0, 0>; "regexec"|28-1-0-0-184-147-0-0-0-0-0-0-18-0-0-0
34572|data|Elf32_Sym <aFreeaddrinfo - byte_8BCC, freeaddrinfo, 0, 0x12, 0, 0>; "freeaddrinfo"|185-2-0-0-168-149-0-0-0-0-0-0-18-0-0-0
34588|data|Elf32_Sym <aAbort - byte_8BCC, abort, 0, 0x12, 0, 0>; "abort"|125-1-0-0-228-149-0-0-0-0-0-0-18-0-0-0
34604|data|Elf32_Sym <aStderr - byte_8BCC, stderr, 4, 0x11, 0, 0x19>; "stderr"|106-2-0-0-64-133-1-0-4-0-0-0-17-0-25-0
34620|data|Elf32_Sym <aTcgetattr - byte_8BCC, tcgetattr, 0, 0x12, 0, 0>; "tcgetattr"|175-2-0-0-32-150-0-0-0-0-0-0-18-0-0-0
34636|data|Elf32_Sym <aFflush - byte_8BCC, fflush, 0, 0x12, 0, 0>; "fflush"|223-0-0-0-12-147-0-0-0-0-0-0-18-0-0-0
34652|data|Elf32_Sym <aGendersQuery - byte_8BCC, genders_query, 0, 0x12, 0, 0>; "genders_query"|116-0-0-0-208-147-0-0-0-0-0-0-18-0-0-0
34668|data|Elf32_Sym <aStdin - byte_8BCC, stdin, 4, 0x11, 0, 0x19>; "stdin"|131-1-0-0-72-133-1-0-4-0-0-0-17-0-25-0
34684|data|Elf32_Sym <aStrdup - byte_8BCC, __strdup, 0, 0x12, 0, 0>; "__strdup"|36-1-0-0-0-149-0-0-0-0-0-0-18-0-0-0
34700|data|Elf32_Sym <aSigemptyset - byte_8BCC, sigemptyset, 0, 0x12, 0, 0>; "sigemptyset"|185-1-0-0-72-149-0-0-0-0-0-0-18-0-0-0
34716|data|Elf32_Sym <aRegcomp - byte_8BCC, regcomp, 0, 0x12, 0, 0>; "regcomp"|91-2-0-0-120-149-0-0-0-0-0-0-18-0-0-0
34732|data|Elf32_Sym <aMalloc - byte_8BCC, malloc, 0, 0x12, 0, 0>; "malloc"|63-2-0-0-60-148-0-0-0-0-0-0-18-0-0-0
34748|data|Elf32_Sym <aStdout - byte_8BCC, stdout, 4, 0x11, 0, 0x19>; "stdout"|32-2-0-0-76-133-1-0-4-0-0-0-17-0-25-0
34764|data|Elf32_Sym <aErrnoLocation - byte_8BCC, __errno_location, 0, 0x12, 0, \; "__errno_location"|223-1-0-0-220-148-0-0-0-0-0-0-18-0-0-0
34780|data|Elf32_Sym <aStrrchr - byte_8BCC, strrchr, 0, 0x12, 0, 0>; "strrchr"|20-1-0-0-84-149-0-0-0-0-0-0-18-0-0-0
34796|data|Elf32_Sym <aWrite - byte_8BCC, write, 0, 0x12, 0, 0>; "write"|244-2-0-0-48-149-0-0-0-0-0-0-18-0-0-0
34812|data|Elf32_Sym <aCtime+1 - byte_8BCC, time, 0, 0x12, 0, 0>; "time"|27-2-0-0-88-147-0-0-0-0-0-0-18-0-0-0
34828|data|Elf32_Sym <aCtime - byte_8BCC, ctime, 0, 0x12, 0, 0>; "ctime"|26-2-0-0-124-147-0-0-0-0-0-0-18-0-0-0
34844|data|Elf32_Sym <aLibcStartMain - byte_8BCC, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|226-2-0-0-72-148-0-0-0-0-0-0-18-0-0-0
34860|data|Elf32_Sym <aGendersHandleC - byte_8BCC, genders_handle_create, 0, \; "genders_handle_create"|148-0-0-0-204-149-0-0-0-0-0-0-18-0-0-0
34876|data|Elf32_Sym <aMemchr - byte_8BCC, memchr, 0, 0x12, 0, 0>; "memchr"|137-1-0-0-60-149-0-0-0-0-0-0-18-0-0-0
34892|data|Elf32_Sym <aOptarg - byte_8BCC, optarg, 4, 0x11, 0, 0x19>; "optarg"|99-2-0-0-84-133-1-0-4-0-0-0-17-0-25-0
34908|data|Elf32_Sym <aOptind - byte_8BCC, optind, 4, 0x11, 0, 0x19>; "optind"|13-1-0-0-60-133-1-0-4-0-0-0-17-0-25-0
34924|data|Elf32_Sym <aStrtoul - byte_8BCC, strtoul, 0, 0x12, 0, 0>; "strtoul"|55-2-0-0-148-148-0-0-0-0-0-0-18-0-0-0
34940|data|Elf32_Sym <aStackChkGuard - byte_8BCC, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|8-3-0-0-56-133-1-0-4-0-0-0-17-0-25-0
34956|data|Elf32_Sym <aMemcpy - byte_8BCC, memcpy, 0, 0x12, 0, 0>; "memcpy"|48-2-0-0-76-147-0-0-0-0-0-0-18-0-0-0
34972|data|Elf32_Sym <aSocket - byte_8BCC, socket, 0, 0x12, 0, 0>; "socket"|201-0-0-0-192-149-0-0-0-0-0-0-18-0-0-0
34988|data|Elf32_Sym <aStderr+3 - byte_8BCC, err+1, 0x1C, 0x12, 0, 0xE>; "err"|109-2-0-0-181-165-0-0-28-0-0-0-18-0-14-0
35004|data|Elf32_Sym <aStrcmp - byte_8BCC, strcmp, 0, 0x12, 0, 0>; "strcmp"|219-2-0-0-208-146-0-0-0-0-0-0-18-0-0-0
35020|data|Elf32_Sym <aRegfree+3 - byte_8BCC, free, 0, 0x12, 0, 0>; "free"|95-1-0-0-40-147-0-0-0-0-0-0-18-0-0-0
35036|data|Elf32_Sym <aGaiStrerror - byte_8BCC, gai_strerror, 0, 0x12, 0, 0>; "gai_strerror"|0-1-0-0-52-147-0-0-0-0-0-0-18-0-0-0
35052|data|Elf32_Sym <aAssertFail - byte_8BCC, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|144-1-0-0-20-150-0-0-0-0-0-0-18-0-0-0
35068|data|Elf32_Sym <aMemmove - byte_8BCC, memmove, 0, 0x12, 0, 0>; "memmove"|204-2-0-0-24-147-0-0-0-0-0-0-18-0-0-0
35084|data|Elf32_Sym <aGaiStrerror+4 - byte_8BCC, strerror, 0, 0x12, 0, 0>; "strerror"|4-1-0-0-84-148-0-0-0-0-0-0-18-0-0-0
35100|data|Elf32_Sym <aFprintf+1 - byte_8BCC, printf, 0, 0x12, 0, 0>; "printf"|162-2-0-0-232-146-0-0-0-0-0-0-18-0-0-0
35116|data|Elf32_Sym <aSyslog - byte_8BCC, syslog, 0, 0x12, 0, 0>; "syslog"|165-1-0-0-96-149-0-0-0-0-0-0-18-0-0-0
35132|data|Elf32_Sym <aPuts - byte_8BCC, puts, 0, 0x12, 0, 0>; "puts"|87-1-0-0-48-148-0-0-0-0-0-0-18-0-0-0
35148|data|Elf32_Sym <aCtypeBLoc - byte_8BCC, __ctype_b_loc, 0, 0x12, 0, 0>; "__ctype_b_loc"|77-2-0-0-124-148-0-0-0-0-0-0-18-0-0-0
35164|data|Elf32_Sym <aQsort - byte_8BCC, qsort, 0, 0x12, 0, 0>; "qsort"|169-2-0-0-144-149-0-0-0-0-0-0-18-0-0-0
35180|data|Elf32_Sym <aOpterr - byte_8BCC, opterr, 4, 0x11, 0, 0x19>; "opterr"|212-2-0-0-80-133-1-0-4-0-0-0-17-0-25-0
35196|data|Elf32_Sym <aStrcat - byte_8BCC, strcat, 0, 0x12, 0, 0>; "strcat"|70-2-0-0-232-147-0-0-0-0-0-0-18-0-0-0
35212|data|Elf32_Sym <aGendersErrorms - byte_8BCC, genders_errormsg, 0, 0x12, 0, \; "genders_errormsg"|52-0-0-0-216-149-0-0-0-0-0-0-18-0-0-0
35228|data|Elf32_Sym <aGettimeofday - byte_8BCC, gettimeofday, 0, 0x12, 0, 0>; "gettimeofday"|125-2-0-0-24-148-0-0-0-0-0-0-18-0-0-0
35244|data|Elf32_Sym <aStrdup+5 - byte_8BCC, dup, 0, 0x12, 0, 0>; "dup"|41-1-0-0-172-147-0-0-0-0-0-0-18-0-0-0
35260|data|Elf32_Sym <aRead - byte_8BCC, read, 0, 0x12, 0, 0>; "read"|250-1-0-0-0-147-0-0-0-0-0-0-18-0-0-0
35276|data|Elf32_Sym <aStrtol - byte_8BCC, strtol, 0, 0x12, 0, 0>; "strtol"|158-1-0-0-220-146-0-0-0-0-0-0-18-0-0-0
35292|data|Elf32_Sym <aTcsetattr - byte_8BCC, tcsetattr, 0, 0x12, 0, 0>; "tcsetattr"|240-1-0-0-0-148-0-0-0-0-0-0-18-0-0-0
35308|data|Elf32_Sym <aGendersHandleD - byte_8BCC, genders_handle_destroy, 0, \; "genders_handle_destroy"|69-0-0-0-100-147-0-0-0-0-0-0-18-0-0-0
35324|data|Elf32_Sym <aSigaction - byte_8BCC, sigaction, 0, 0x12, 0, 0>; "sigaction"|138-2-0-0-220-147-0-0-0-0-0-0-18-0-0-0
35340|data|Elf32_Sym <aRealloc - byte_8BCC, realloc, 0, 0x12, 0, 0>; "realloc"|117-1-0-0-160-147-0-0-0-0-0-0-18-0-0-0
35356|data|Elf32_Sym <aStrlen - byte_8BCC, strlen, 0, 0x12, 0, 0>; "strlen"|178-1-0-0-160-148-0-0-0-0-0-0-18-0-0-0
35372|data|Elf32_Sym <aFcntl - byte_8BCC, fcntl, 0, 0x12, 0, 0>; "fcntl"|198-2-0-0-196-148-0-0-0-0-0-0-18-0-0-0
35388|data|Elf32_Sym <aExecv - byte_8BCC, execv, 0, 0x12, 0, 0>; "execv"|242-0-0-0-208-148-0-0-0-0-0-0-18-0-0-0
35404|data|Elf32_Sym <aExit - byte_8BCC, exit, 0, 0x12, 0, 0>; "exit"|237-0-0-0-136-148-0-0-0-0-0-0-18-0-0-0
35420|data|Elf32_Sym <aFprintf - byte_8BCC, fprintf, 0, 0x12, 0, 0>; "fprintf"|161-2-0-0-184-148-0-0-0-0-0-0-18-0-0-0
35436|data|Elf32_Sym <aVsnprintf+1 - byte_8BCC, snprintf, 0, 0x12, 0, 0>; "snprintf"|12-2-0-0-232-148-0-0-0-0-0-0-18-0-0-0
35452|data|Elf32_Sym <aMemcmp - byte_8BCC, memcmp, 0, 0x12, 0, 0>; "memcmp"|255-1-0-0-112-147-0-0-0-0-0-0-18-0-0-0
35468|data|Elf32_Sym <aRegerror - byte_8BCC, regerror, 0, 0x12, 0, 0>; "regerror"|39-2-0-0-244-146-0-0-0-0-0-0-18-0-0-0
35484|data|Elf32_Sym <aClose - byte_8BCC, close, 0, 0x12, 0, 0>; "close"|148-2-0-0-240-149-0-0-0-0-0-0-18-0-0-0
35500|data|Elf32_Sym <aStrncpy - byte_8BCC, strncpy, 0, 0x12, 0, 0>; "strncpy"|79-1-0-0-24-149-0-0-0-0-0-0-18-0-0-0
35516|data|Elf32_Sym <aStackChkFail - byte_8BCC, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|100-1-0-0-136-147-0-0-0-0-0-0-18-0-0-0
35532|data|Elf32_Sym <aPoll - byte_8BCC, poll, 0, 0x12, 0, 0>; "poll"|21-2-0-0-196-147-0-0-0-0-0-0-18-0-0-0
35548|data|Elf32_Sym <aIsoc99Sscanf - byte_8BCC, __isoc99_sscanf, 0, 0x12, 0, 0>; "__isoc99_sscanf"|55-1-0-0-244-148-0-0-0-0-0-0-18-0-0-0
35564|data|Elf32_Sym <aStrstr - byte_8BCC, strstr, 0, 0x12, 0, 0>; "strstr"|216-1-0-0-184-146-0-0-0-0-0-0-18-0-0-0
35580|data|Elf32_Sym <aForkpty - byte_8BCC, forkpty, 0, 0x12, 0, 0>; "forkpty"|183-0-0-0-252-149-0-0-0-0-0-0-18-0-0-0
35596|data|Elf32_Sym <aGetoptLong - byte_8BCC, getopt_long, 0, 0x12, 0, 0>; "getopt_long"|113-2-0-0-112-148-0-0-0-0-0-0-18-0-0-0
35612|data|Elf32_Sym <aMemset - byte_8BCC, memset, 0, 0x12, 0, 0>; "memset"|209-1-0-0-12-149-0-0-0-0-0-0-18-0-0-0
35628|data|Elf32_Sym <aCfmakeraw - byte_8BCC, cfmakeraw, 0, 0x12, 0, 0>; "cfmakeraw"|45-1-0-0-196-146-0-0-0-0-0-0-18-0-0-0
35644|data|Elf32_Sym <aStrchr - byte_8BCC, strchr, 0, 0x12, 0, 0>; "strchr"|154-2-0-0-172-148-0-0-0-0-0-0-18-0-0-0
35660|data|Elf32_Sym <aRegfree - byte_8BCC, regfree, 0, 0x12, 0, 0>; "regfree"|92-1-0-0-244-147-0-0-0-0-0-0-18-0-0-0
35676|data|Elf32_Sym <aXpgBasename - byte_8BCC, __xpg_basename, 0, 0x12, 0, 0>; "__xpg_basename"|208-0-0-0-36-149-0-0-0-0-0-0-18-0-0-0
35692|data|Elf32_Sym <aStrcpy - byte_8BCC, strcpy, 0, 0x12, 0, 0>; "strcpy"|230-0-0-0-12-148-0-0-0-0-0-0-18-0-0-0
35708|data|Elf32_Sym <aGetaddrinfo - byte_8BCC, getaddrinfo, 0, 0x12, 0, 0>; "getaddrinfo"|197-1-0-0-180-149-0-0-0-0-0-0-18-0-0-0
35724|data|Elf32_Sym <aFgets - byte_8BCC, fgets, 0, 0x12, 0, 0>; "fgets"|172-1-0-0-64-147-0-0-0-0-0-0-18-0-0-0
35740|data|Elf32_Sym <aSprintf - byte_8BCC, sprintf, 0, 0x12, 0, 0>; "sprintf"|248-0-0-0-108-149-0-0-0-0-0-0-18-0-0-0
35756|data|Elf32_Sym <aVsnprintf - byte_8BCC, vsnprintf, 0, 0x12, 0, 0>; "vsnprintf"|11-2-0-0-132-149-0-0-0-0-0-0-18-0-0-0
35772|data|Elf32_Sym <aGendersLoadDat - byte_8BCC, genders_load_data, 0, 0x12, 0,\; "genders_load_data"|130-0-0-0-156-149-0-0-0-0-0-0-18-0-0-0
35788|data|DCB 0|0
35789|data|DCB "libgenders.so.0",0|108-105-98-103-101-110-100-101-114-115-46-115-111-46-48-0
35805|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
35820|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
35840|data|DCB "genders_errormsg",0|103-101-110-100-101-114-115-95-101-114-114-111-114-109-115-103-0
35857|data|DCB "genders_handle_destroy",0|103-101-110-100-101-114-115-95-104-97-110-100-108-101-95-100-101-115-116-114-111-121-0
35880|data|DCB "genders_nodelist_create",0|103-101-110-100-101-114-115-95-110-111-100-101-108-105-115-116-95-99-114-101-97-116-101-0
35904|data|DCB "genders_query",0|103-101-110-100-101-114-115-95-113-117-101-114-121-0
35918|data|DCB "genders_load_data",0|103-101-110-100-101-114-115-95-108-111-97-100-95-100-97-116-97-0
35936|data|DCB "genders_handle_create",0|103-101-110-100-101-114-115-95-104-97-110-100-108-101-95-99-114-101-97-116-101-0
35958|data|DCB "libutil.so.1",0|108-105-98-117-116-105-108-46-115-111-46-49-0
35971|data|DCB "forkpty",0|102-111-114-107-112-116-121-0
35979|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
35989|data|DCB "socket",0|115-111-99-107-101-116-0
35996|data|DCB "__xpg_basename",0|95-95-120-112-103-95-98-97-115-101-110-97-109-101-0
36011|data|DCB "fflush",0|102-102-108-117-115-104-0
36018|data|DCB "strcpy",0|115-116-114-99-112-121-0
36025|data|DCB "exit",0|101-120-105-116-0
36030|data|DCB "execv",0|101-120-101-99-118-0
36036|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
36044|data|DCB "gai_strerror",0|103-97-105-95-115-116-114-101-114-114-111-114-0
36057|data|DCB "optind",0|111-112-116-105-110-100-0
36064|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
36072|data|DCB "regexec",0|114-101-103-101-120-101-99-0
36080|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
36089|data|DCB "cfmakeraw",0|99-102-109-97-107-101-114-97-119-0
36099|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
36115|data|DCB "connect",0|99-111-110-110-101-99-116-0
36123|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
36131|data|DCB "puts",0|112-117-116-115-0
36136|data|DCB "regfree",0|114-101-103-102-114-101-101-0
36144|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
36161|data|DCB "realloc",0|114-101-97-108-108-111-99-0
36169|data|DCB "abort",0|97-98-111-114-116-0
36175|data|DCB "stdin",0|115-116-100-105-110-0
36181|data|DCB "memchr",0|109-101-109-99-104-114-0
36188|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
36202|data|DCB "strtol",0|115-116-114-116-111-108-0
36209|data|DCB "syslog",0|115-121-115-108-111-103-0
36216|data|DCB "fgets",0|102-103-101-116-115-0
36222|data|DCB "strlen",0|115-116-114-108-101-110-0
36229|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
36241|data|DCB "getaddrinfo",0|103-101-116-97-100-100-114-105-110-102-111-0
36253|data|DCB "memset",0|109-101-109-115-101-116-0
36260|data|DCB "strstr",0|115-116-114-115-116-114-0
36267|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
36284|data|DCB "tcsetattr",0|116-99-115-101-116-97-116-116-114-0
36294|data|DCB "read",0|114-101-97-100-0
36299|data|DCB "memcmp",0|109-101-109-99-109-112-0
36306|data|DCB "dup2",0|100-117-112-50-0
36311|data|DCB "vsnprintf",0|118-115-110-112-114-105-110-116-102-0
36321|data|DCB "poll",0|112-111-108-108-0
36326|data|DCB "ctime",0|99-116-105-109-101-0
36332|data|DCB "stdout",0|115-116-100-111-117-116-0
36339|data|DCB "regerror",0|114-101-103-101-114-114-111-114-0
36348|data|DCB "memcpy",0|109-101-109-99-112-121-0
36355|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
36363|data|DCB "malloc",0|109-97-108-108-111-99-0
36370|data|DCB "strcat",0|115-116-114-99-97-116-0
36377|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
36391|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
36399|data|DCB "optarg",0|111-112-116-97-114-103-0
36406|data|DCB "stderr",0|115-116-100-101-114-114-0
36413|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
36425|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
36438|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
36448|data|DCB "close",0|99-108-111-115-101-0
36454|data|DCB "strchr",0|115-116-114-99-104-114-0
36461|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
36469|data|DCB "qsort",0|113-115-111-114-116-0
36475|data|DCB "tcgetattr",0|116-99-103-101-116-97-116-116-114-0
36485|data|DCB "freeaddrinfo",0|102-114-101-101-97-100-100-114-105-110-102-111-0
36498|data|DCB "fcntl",0|102-99-110-116-108-0
36504|data|DCB "memmove",0|109-101-109-109-111-118-101-0
36512|data|DCB "opterr",0|111-112-116-101-114-114-0
36519|data|DCB "strcmp",0|115-116-114-99-109-112-0
36526|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
36544|data|DCB "write",0|119-114-105-116-101-0
36550|data|DCB "ld-linux.so.3",0|108-100-45-108-105-110-117-120-46-115-111-46-51-0
36564|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
36582|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
36592|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
36602|data|DCW 0|0-0
36604|data|DCW 0; local  symbol: __gmon_start__|0-0
36606|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
36608|data|DCW 2; dup2@@GLIBC_2.4|2-0
36610|data|DCW 2; connect@@GLIBC_2.4|2-0
36612|data|DCW 0; local  symbol: genders_nodelist_create|0-0
36614|data|DCW 2; regexec@@GLIBC_2.4|2-0
36616|data|DCW 2; freeaddrinfo@@GLIBC_2.4|2-0
36618|data|DCW 2; abort@@GLIBC_2.4|2-0
36620|data|DCW 2; stderr@@GLIBC_2.4|2-0
36622|data|DCW 2; tcgetattr@@GLIBC_2.4|2-0
36624|data|DCW 2; fflush@@GLIBC_2.4|2-0
36626|data|DCW 0; local  symbol: genders_query|0-0
36628|data|DCW 2; stdin@@GLIBC_2.4|2-0
36630|data|DCW 2; __strdup@@GLIBC_2.4|2-0
36632|data|DCW 2; sigemptyset@@GLIBC_2.4|2-0
36634|data|DCW 2; regcomp@@GLIBC_2.4|2-0
36636|data|DCW 2; malloc@@GLIBC_2.4|2-0
36638|data|DCW 2; stdout@@GLIBC_2.4|2-0
36640|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
36642|data|DCW 2; strrchr@@GLIBC_2.4|2-0
36644|data|DCW 2; write@@GLIBC_2.4|2-0
36646|data|DCW 2; time@@GLIBC_2.4|2-0
36648|data|DCW 2; ctime@@GLIBC_2.4|2-0
36650|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
36652|data|DCW 0; local  symbol: genders_handle_create|0-0
36654|data|DCW 2; memchr@@GLIBC_2.4|2-0
36656|data|DCW 2; optarg@@GLIBC_2.4|2-0
36658|data|DCW 2; optind@@GLIBC_2.4|2-0
36660|data|DCW 2; strtoul@@GLIBC_2.4|2-0
36662|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
36664|data|DCW 2; memcpy@@GLIBC_2.4|2-0
36666|data|DCW 2; socket@@GLIBC_2.4|2-0
36668|data|DCW 1; global symbol: err|1-0
36670|data|DCW 2; strcmp@@GLIBC_2.4|2-0
36672|data|DCW 2; free@@GLIBC_2.4|2-0
36674|data|DCW 2; gai_strerror@@GLIBC_2.4|2-0
36676|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
36678|data|DCW 2; memmove@@GLIBC_2.4|2-0
36680|data|DCW 2; strerror@@GLIBC_2.4|2-0
36682|data|DCW 2; printf@@GLIBC_2.4|2-0
36684|data|DCW 2; syslog@@GLIBC_2.4|2-0
36686|data|DCW 2; puts@@GLIBC_2.4|2-0
36688|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
36690|data|DCW 2; qsort@@GLIBC_2.4|2-0
36692|data|DCW 2; opterr@@GLIBC_2.4|2-0
36694|data|DCW 2; strcat@@GLIBC_2.4|2-0
36696|data|DCW 0; local  symbol: genders_errormsg|0-0
36698|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
36700|data|DCW 2; dup@@GLIBC_2.4|2-0
36702|data|DCW 2; read@@GLIBC_2.4|2-0
36704|data|DCW 2; strtol@@GLIBC_2.4|2-0
36706|data|DCW 2; tcsetattr@@GLIBC_2.4|2-0
36708|data|DCW 0; local  symbol: genders_handle_destroy|0-0
36710|data|DCW 2; sigaction@@GLIBC_2.4|2-0
36712|data|DCW 2; realloc@@GLIBC_2.4|2-0
36714|data|DCW 2; strlen@@GLIBC_2.4|2-0
36716|data|DCW 2; fcntl@@GLIBC_2.4|2-0
36718|data|DCW 2; execv@@GLIBC_2.4|2-0
36720|data|DCW 2; exit@@GLIBC_2.4|2-0
36722|data|DCW 2; fprintf@@GLIBC_2.4|2-0
36724|data|DCW 2; snprintf@@GLIBC_2.4|2-0
36726|data|DCW 2; memcmp@@GLIBC_2.4|2-0
36728|data|DCW 2; regerror@@GLIBC_2.4|2-0
36730|data|DCW 2; close@@GLIBC_2.4|2-0
36732|data|DCW 2; strncpy@@GLIBC_2.4|2-0
36734|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
36736|data|DCW 2; poll@@GLIBC_2.4|2-0
36738|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
36740|data|DCW 2; strstr@@GLIBC_2.4|2-0
36742|data|DCW 5; forkpty@@GLIBC_2.4|5-0
36744|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
36746|data|DCW 2; memset@@GLIBC_2.4|2-0
36748|data|DCW 2; cfmakeraw@@GLIBC_2.4|2-0
36750|data|DCW 2; strchr@@GLIBC_2.4|2-0
36752|data|DCW 2; regfree@@GLIBC_2.4|2-0
36754|data|DCW 2; __xpg_basename@@GLIBC_2.4|2-0
36756|data|DCW 2; strcpy@@GLIBC_2.4|2-0
36758|data|DCW 2; getaddrinfo@@GLIBC_2.4|2-0
36760|data|DCW 2; fgets@@GLIBC_2.4|2-0
36762|data|DCW 2; sprintf@@GLIBC_2.4|2-0
36764|data|DCW 2; vsnprintf@@GLIBC_2.4|2-0
36766|data|DCW 0; local  symbol: genders_load_data|0-0
36768|data|Elf32_Verneed <1, 1, aLibutilSo1 - byte_8BCC, 0x10, 0x20>; "libutil.so.1"|1-0-1-0-170-0-0-0-16-0-0-0-32-0-0-0
36784|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_8BCC, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-26-3-0-0-0-0-0-0
36800|data|Elf32_Verneed <1, 1, aLdLinuxSo3 - byte_8BCC, 0x10, 0x20>; "ld-linux.so.3"|1-0-1-0-250-2-0-0-16-0-0-0-32-0-0-0
36816|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_8BCC, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-26-3-0-0-0-0-0-0
36832|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_8BCC, 0x10, 0>; "libc.so.6"|1-0-2-0-191-0-0-0-16-0-0-0-0-0-0-0
36848|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_8BCC, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-36-3-0-0-16-0-0-0
36864|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_8BCC, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-26-3-0-0-0-0-0-0
36880|data|Elf32_Rel <0x18524, 0x115>; R_ARM_GLOB_DAT __gmon_start__|36-133-1-0-21-1-0-0
36888|data|Elf32_Rel <0x18538, 0x1E14>; R_ARM_COPY __stack_chk_guard|56-133-1-0-20-30-0-0
36896|data|Elf32_Rel <0x1853C, 0x1C14>; R_ARM_COPY optind|60-133-1-0-20-28-0-0
36904|data|Elf32_Rel <0x18540, 0x914>; R_ARM_COPY stderr|64-133-1-0-20-9-0-0
36912|data|Elf32_Rel <0x18548, 0xD14>; R_ARM_COPY stdin|72-133-1-0-20-13-0-0
36920|data|Elf32_Rel <0x1854C, 0x1214>; R_ARM_COPY stdout|76-133-1-0-20-18-0-0
36928|data|Elf32_Rel <0x18550, 0x2D14>; R_ARM_COPY opterr|80-133-1-0-20-45-0-0
36936|data|Elf32_Rel <0x18554, 0x1B14>; R_ARM_COPY optarg|84-133-1-0-20-27-0-0
36944|data|Elf32_Rel <0x18400, 0x4516>; R_ARM_JUMP_SLOT strstr|0-132-1-0-22-69-0-0
36952|data|Elf32_Rel <0x18404, 0x4916>; R_ARM_JUMP_SLOT cfmakeraw|4-132-1-0-22-73-0-0
36960|data|Elf32_Rel <0x18408, 0x2216>; R_ARM_JUMP_SLOT strcmp|8-132-1-0-22-34-0-0
36968|data|Elf32_Rel <0x1840C, 0x3316>; R_ARM_JUMP_SLOT strtol|12-132-1-0-22-51-0-0
36976|data|Elf32_Rel <0x18410, 0x2816>; R_ARM_JUMP_SLOT printf|16-132-1-0-22-40-0-0
36984|data|Elf32_Rel <0x18414, 0x3F16>; R_ARM_JUMP_SLOT regerror|20-132-1-0-22-63-0-0
36992|data|Elf32_Rel <0x18418, 0x3216>; R_ARM_JUMP_SLOT read|24-132-1-0-22-50-0-0
37000|data|Elf32_Rel <0x1841C, 0xB16>; R_ARM_JUMP_SLOT fflush|28-132-1-0-22-11-0-0
37008|data|Elf32_Rel <0x18420, 0x2616>; R_ARM_JUMP_SLOT memmove|32-132-1-0-22-38-0-0
37016|data|Elf32_Rel <0x18424, 0x2316>; R_ARM_JUMP_SLOT free|36-132-1-0-22-35-0-0
37024|data|Elf32_Rel <0x18428, 0x2416>; R_ARM_JUMP_SLOT gai_strerror|40-132-1-0-22-36-0-0
37032|data|Elf32_Rel <0x1842C, 0x4F16>; R_ARM_JUMP_SLOT fgets|44-132-1-0-22-79-0-0
37040|data|Elf32_Rel <0x18430, 0x1F16>; R_ARM_JUMP_SLOT memcpy|48-132-1-0-22-31-0-0
37048|data|Elf32_Rel <0x18434, 0x1616>; R_ARM_JUMP_SLOT time|52-132-1-0-22-22-0-0
37056|data|Elf32_Rel <0x18438, 0x3516>; R_ARM_JUMP_SLOT genders_handle_destroy|56-132-1-0-22-53-0-0
37064|data|Elf32_Rel <0x1843C, 0x3E16>; R_ARM_JUMP_SLOT memcmp|60-132-1-0-22-62-0-0
37072|data|Elf32_Rel <0x18440, 0x1716>; R_ARM_JUMP_SLOT ctime|64-132-1-0-22-23-0-0
37080|data|Elf32_Rel <0x18444, 0x4216>; R_ARM_JUMP_SLOT __stack_chk_fail|68-132-1-0-22-66-0-0
37088|data|Elf32_Rel <0x18448, 0x316>; R_ARM_JUMP_SLOT dup2|72-132-1-0-22-3-0-0
37096|data|Elf32_Rel <0x1844C, 0x3716>; R_ARM_JUMP_SLOT realloc|76-132-1-0-22-55-0-0
37104|data|Elf32_Rel <0x18450, 0x3116>; R_ARM_JUMP_SLOT dup|80-132-1-0-22-49-0-0
37112|data|Elf32_Rel <0x18454, 0x616>; R_ARM_JUMP_SLOT regexec|84-132-1-0-22-6-0-0
37120|data|Elf32_Rel <0x18458, 0x4316>; R_ARM_JUMP_SLOT poll|88-132-1-0-22-67-0-0
37128|data|Elf32_Rel <0x1845C, 0xC16>; R_ARM_JUMP_SLOT genders_query|92-132-1-0-22-12-0-0
37136|data|Elf32_Rel <0x18460, 0x3616>; R_ARM_JUMP_SLOT sigaction|96-132-1-0-22-54-0-0
37144|data|Elf32_Rel <0x18464, 0x2E16>; R_ARM_JUMP_SLOT strcat|100-132-1-0-22-46-0-0
37152|data|Elf32_Rel <0x18468, 0x4B16>; R_ARM_JUMP_SLOT regfree|104-132-1-0-22-75-0-0
37160|data|Elf32_Rel <0x1846C, 0x3416>; R_ARM_JUMP_SLOT tcsetattr|108-132-1-0-22-52-0-0
37168|data|Elf32_Rel <0x18470, 0x4D16>; R_ARM_JUMP_SLOT strcpy|112-132-1-0-22-77-0-0
37176|data|Elf32_Rel <0x18474, 0x3016>; R_ARM_JUMP_SLOT gettimeofday|116-132-1-0-22-48-0-0
37184|data|Elf32_Rel <0x18478, 0x516>; R_ARM_JUMP_SLOT genders_nodelist_create|120-132-1-0-22-5-0-0
37192|data|Elf32_Rel <0x1847C, 0x2A16>; R_ARM_JUMP_SLOT puts|124-132-1-0-22-42-0-0
37200|data|Elf32_Rel <0x18480, 0x1116>; R_ARM_JUMP_SLOT malloc|128-132-1-0-22-17-0-0
37208|data|Elf32_Rel <0x18484, 0x1816>; R_ARM_JUMP_SLOT __libc_start_main|132-132-1-0-22-24-0-0
37216|data|Elf32_Rel <0x18488, 0x2716>; R_ARM_JUMP_SLOT strerror|136-132-1-0-22-39-0-0
37224|data|Elf32_Rel <0x1848C, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|140-132-1-0-22-1-0-0
37232|data|Elf32_Rel <0x18490, 0x4716>; R_ARM_JUMP_SLOT getopt_long|144-132-1-0-22-71-0-0
37240|data|Elf32_Rel <0x18494, 0x2B16>; R_ARM_JUMP_SLOT __ctype_b_loc|148-132-1-0-22-43-0-0
37248|data|Elf32_Rel <0x18498, 0x3B16>; R_ARM_JUMP_SLOT exit|152-132-1-0-22-59-0-0
37256|data|Elf32_Rel <0x1849C, 0x1D16>; R_ARM_JUMP_SLOT strtoul|156-132-1-0-22-29-0-0
37264|data|Elf32_Rel <0x184A0, 0x3816>; R_ARM_JUMP_SLOT strlen|160-132-1-0-22-56-0-0
37272|data|Elf32_Rel <0x184A4, 0x4A16>; R_ARM_JUMP_SLOT strchr|164-132-1-0-22-74-0-0
37280|data|Elf32_Rel <0x184A8, 0x3C16>; R_ARM_JUMP_SLOT fprintf|168-132-1-0-22-60-0-0
37288|data|Elf32_Rel <0x184AC, 0x3916>; R_ARM_JUMP_SLOT fcntl|172-132-1-0-22-57-0-0
37296|data|Elf32_Rel <0x184B0, 0x3A16>; R_ARM_JUMP_SLOT execv|176-132-1-0-22-58-0-0
37304|data|Elf32_Rel <0x184B4, 0x1316>; R_ARM_JUMP_SLOT __errno_location|180-132-1-0-22-19-0-0
37312|data|Elf32_Rel <0x184B8, 0x3D16>; R_ARM_JUMP_SLOT snprintf|184-132-1-0-22-61-0-0
37320|data|Elf32_Rel <0x184BC, 0x4416>; R_ARM_JUMP_SLOT __isoc99_sscanf|188-132-1-0-22-68-0-0
37328|data|Elf32_Rel <0x184C0, 0xE16>; R_ARM_JUMP_SLOT __strdup|192-132-1-0-22-14-0-0
37336|data|Elf32_Rel <0x184C4, 0x4816>; R_ARM_JUMP_SLOT memset|196-132-1-0-22-72-0-0
37344|data|Elf32_Rel <0x184C8, 0x4116>; R_ARM_JUMP_SLOT strncpy|200-132-1-0-22-65-0-0
37352|data|Elf32_Rel <0x184CC, 0x4C16>; R_ARM_JUMP_SLOT __xpg_basename|204-132-1-0-22-76-0-0
37360|data|Elf32_Rel <0x184D0, 0x1516>; R_ARM_JUMP_SLOT write|208-132-1-0-22-21-0-0
37368|data|Elf32_Rel <0x184D4, 0x1A16>; R_ARM_JUMP_SLOT memchr|212-132-1-0-22-26-0-0
37376|data|Elf32_Rel <0x184D8, 0xF16>; R_ARM_JUMP_SLOT sigemptyset|216-132-1-0-22-15-0-0
37384|data|Elf32_Rel <0x184DC, 0x1416>; R_ARM_JUMP_SLOT strrchr|220-132-1-0-22-20-0-0
37392|data|Elf32_Rel <0x184E0, 0x2916>; R_ARM_JUMP_SLOT syslog|224-132-1-0-22-41-0-0
37400|data|Elf32_Rel <0x184E4, 0x5016>; R_ARM_JUMP_SLOT sprintf|228-132-1-0-22-80-0-0
37408|data|Elf32_Rel <0x184E8, 0x1016>; R_ARM_JUMP_SLOT regcomp|232-132-1-0-22-16-0-0
37416|data|Elf32_Rel <0x184EC, 0x5116>; R_ARM_JUMP_SLOT vsnprintf|236-132-1-0-22-81-0-0
37424|data|Elf32_Rel <0x184F0, 0x2C16>; R_ARM_JUMP_SLOT qsort|240-132-1-0-22-44-0-0
37432|data|Elf32_Rel <0x184F4, 0x5216>; R_ARM_JUMP_SLOT genders_load_data|244-132-1-0-22-82-0-0
37440|data|Elf32_Rel <0x184F8, 0x716>; R_ARM_JUMP_SLOT freeaddrinfo|248-132-1-0-22-7-0-0
37448|data|Elf32_Rel <0x184FC, 0x4E16>; R_ARM_JUMP_SLOT getaddrinfo|252-132-1-0-22-78-0-0
37456|data|Elf32_Rel <0x18500, 0x2016>; R_ARM_JUMP_SLOT socket|0-133-1-0-22-32-0-0
37464|data|Elf32_Rel <0x18504, 0x1916>; R_ARM_JUMP_SLOT genders_handle_create|4-133-1-0-22-25-0-0
37472|data|Elf32_Rel <0x18508, 0x2F16>; R_ARM_JUMP_SLOT genders_errormsg|8-133-1-0-22-47-0-0
37480|data|Elf32_Rel <0x1850C, 0x816>; R_ARM_JUMP_SLOT abort|12-133-1-0-22-8-0-0
37488|data|Elf32_Rel <0x18510, 0x4016>; R_ARM_JUMP_SLOT close|16-133-1-0-22-64-0-0
37496|data|Elf32_Rel <0x18514, 0x4616>; R_ARM_JUMP_SLOT forkpty|20-133-1-0-22-70-0-0
37504|data|Elf32_Rel <0x18518, 0x416>; R_ARM_JUMP_SLOT connect|24-133-1-0-22-4-0-0
37512|data|Elf32_Rel <0x1851C, 0x2516>; R_ARM_JUMP_SLOT __assert_fail|28-133-1-0-22-37-0-0
37520|data|Elf32_Rel <0x18520, 0xA16>; R_ARM_JUMP_SLOT tcgetattr|32-133-1-0-22-10-0-0
37528|code|PUSH            {R3,LR}|8-181
37530|code|BL              sub_9D4C|0-240-87-253
37534|code|NOP|0-191
37536|code|POP             {R3,PC}|8-189
37538|data|DCW 0|0-0
37540|code|PUSH            {LR}|4-224-45-229
37544|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x92B4)|4-224-159-229
37548|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
37552|code|LDR             PC, [LR,#8]!|8-240-190-229
37556|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x92B4|64-241-0-0
37560|code|ADR             R12, 0x92C0|0-198-143-226
37564|code|ADD             R12, R12, #0xF000|15-202-140-226
37568|code|LDR             PC, [R12,#(strstr_ptr - 0x182C0)]!; __imp_strstr|64-241-188-229
37572|code|ADR             R12, 0x92CC|0-198-143-226
37576|code|ADD             R12, R12, #0xF000|15-202-140-226
37580|code|LDR             PC, [R12,#(cfmakeraw_ptr - 0x182CC)]!; __imp_cfmakeraw|56-241-188-229
37584|code|ADR             R12, 0x92D8|0-198-143-226
37588|code|ADD             R12, R12, #0xF000|15-202-140-226
37592|code|LDR             PC, [R12,#(strcmp_ptr - 0x182D8)]!; __imp_strcmp|48-241-188-229
37596|code|ADRL            R12, 0x182E4|0-198-143-226-15-202-140-226
37604|code|LDR             PC, [R12,#(strtol_ptr - 0x182E4)]!; __imp_strtol|40-241-188-229
37608|code|ADRL            R12, 0x182F0|0-198-143-226-15-202-140-226
37616|code|LDR             PC, [R12,#(printf_ptr - 0x182F0)]!; __imp_printf|32-241-188-229
37620|code|ADRL            R12, 0x182FC|0-198-143-226-15-202-140-226
37628|code|LDR             PC, [R12,#(regerror_ptr - 0x182FC)]!; __imp_regerror|24-241-188-229
37632|code|ADRL            R12, 0x18308|0-198-143-226-15-202-140-226
37640|code|LDR             PC, [R12,#(read_ptr - 0x18308)]!; __imp_read|16-241-188-229
37644|code|ADRL            R12, 0x18314|0-198-143-226-15-202-140-226
37652|code|LDR             PC, [R12,#(fflush_ptr - 0x18314)]!; __imp_fflush|8-241-188-229
37656|code|ADRL            R12, 0x18320|0-198-143-226-15-202-140-226
37664|code|LDR             PC, [R12,#(memmove_ptr - 0x18320)]!; __imp_memmove|0-241-188-229
37668|code|BX              PC|120-71
37670|data|ALIGN 4|192-70
37672|code|ADRL            R12, 0x18330|0-198-143-226-15-202-140-226
37680|code|LDR             PC, [R12,#(free_ptr - 0x18330)]!; __imp_free|244-240-188-229
37684|code|ADRL            R12, 0x1833C|0-198-143-226-15-202-140-226
37692|code|LDR             PC, [R12,#(gai_strerror_ptr - 0x1833C)]!; __imp_gai_strerror|236-240-188-229
37696|code|ADRL            R12, 0x18348|0-198-143-226-15-202-140-226
37704|code|LDR             PC, [R12,#(fgets_ptr - 0x18348)]!; __imp_fgets|228-240-188-229
37708|code|ADRL            R12, 0x18354|0-198-143-226-15-202-140-226
37716|code|LDR             PC, [R12,#(memcpy_ptr - 0x18354)]!; __imp_memcpy|220-240-188-229
37720|code|ADRL            R12, 0x18360|0-198-143-226-15-202-140-226
37728|code|LDR             PC, [R12,#(time_ptr - 0x18360)]!; __imp_time|212-240-188-229
37732|code|ADRL            R12, 0x1836C|0-198-143-226-15-202-140-226
37740|code|LDR             PC, [R12,#(genders_handle_destroy_ptr - 0x1836C)]!; __imp_genders_handle_destroy|204-240-188-229
37744|code|ADRL            R12, 0x18378|0-198-143-226-15-202-140-226
37752|code|LDR             PC, [R12,#(memcmp_ptr - 0x18378)]!; __imp_memcmp|196-240-188-229
37756|code|ADRL            R12, 0x18384|0-198-143-226-15-202-140-226
37764|code|LDR             PC, [R12,#(ctime_ptr - 0x18384)]!; __imp_ctime|188-240-188-229
37768|code|ADRL            R12, 0x18390|0-198-143-226-15-202-140-226
37776|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x18390)]!; __imp___stack_chk_fail|180-240-188-229
37780|code|ADRL            R12, 0x1839C|0-198-143-226-15-202-140-226
37788|code|LDR             PC, [R12,#(dup2_ptr - 0x1839C)]!; __imp_dup2|172-240-188-229
37792|code|ADRL            R12, 0x183A8|0-198-143-226-15-202-140-226
37800|code|LDR             PC, [R12,#(realloc_ptr - 0x183A8)]!; __imp_realloc|164-240-188-229
37804|code|ADRL            R12, 0x183B4|0-198-143-226-15-202-140-226
37812|code|LDR             PC, [R12,#(dup_ptr - 0x183B4)]!; __imp_dup|156-240-188-229
37816|code|ADRL            R12, 0x183C0|0-198-143-226-15-202-140-226
37824|code|LDR             PC, [R12,#(regexec_ptr - 0x183C0)]!; __imp_regexec|148-240-188-229
37828|code|ADRL            R12, 0x183CC|0-198-143-226-15-202-140-226
37836|code|LDR             PC, [R12,#(poll_ptr - 0x183CC)]!; __imp_poll|140-240-188-229
37840|code|ADRL            R12, 0x183D8|0-198-143-226-15-202-140-226
37848|code|LDR             PC, [R12,#(genders_query_ptr - 0x183D8)]!; __imp_genders_query|132-240-188-229
37852|code|ADRL            R12, 0x183E4|0-198-143-226-15-202-140-226
37860|code|LDR             PC, [R12,#(sigaction_ptr - 0x183E4)]!; __imp_sigaction|124-240-188-229
37864|code|ADRL            R12, 0x183F0|0-198-143-226-15-202-140-226
37872|code|LDR             PC, [R12,#(strcat_ptr - 0x183F0)]!; __imp_strcat|116-240-188-229
37876|code|ADRL            R12, 0x183FC|0-198-143-226-15-202-140-226
37884|code|LDR             PC, [R12,#(regfree_ptr - 0x183FC)]!; __imp_regfree|108-240-188-229
37888|code|ADRL            R12, 0x18408|0-198-143-226-15-202-140-226
37896|code|LDR             PC, [R12,#(tcsetattr_ptr - 0x18408)]!; __imp_tcsetattr|100-240-188-229
37900|code|ADRL            R12, 0x18414|0-198-143-226-15-202-140-226
37908|code|LDR             PC, [R12,#(strcpy_ptr - 0x18414)]!; __imp_strcpy|92-240-188-229
37912|code|ADRL            R12, 0x18420|0-198-143-226-15-202-140-226
37920|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x18420)]!; __imp_gettimeofday|84-240-188-229
37924|code|ADRL            R12, 0x1842C|0-198-143-226-15-202-140-226
37932|code|LDR             PC, [R12,#(genders_nodelist_create_ptr - 0x1842C)]!; __imp_genders_nodelist_create|76-240-188-229
37936|code|ADRL            R12, 0x18438|0-198-143-226-15-202-140-226
37944|code|LDR             PC, [R12,#(puts_ptr - 0x18438)]!; __imp_puts|68-240-188-229
37948|code|ADRL            R12, 0x18444|0-198-143-226-15-202-140-226
37956|code|LDR             PC, [R12,#(malloc_ptr - 0x18444)]!; __imp_malloc|60-240-188-229
37960|code|ADRL            R12, 0x18450|0-198-143-226-15-202-140-226
37968|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x18450)]!; __imp___libc_start_main|52-240-188-229
37972|code|ADRL            R12, 0x1845C|0-198-143-226-15-202-140-226
37980|code|LDR             PC, [R12,#(strerror_ptr - 0x1845C)]!; __imp_strerror|44-240-188-229
37984|code|BX              PC|120-71
37986|data|ALIGN 4|192-70
37988|code|ADRL            R12, 0x1846C|0-198-143-226-15-202-140-226
37996|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x1846C)]!; __imp___gmon_start__|32-240-188-229
38000|code|ADRL            R12, 0x18478|0-198-143-226-15-202-140-226
38008|code|LDR             PC, [R12,#(getopt_long_ptr - 0x18478)]!; __imp_getopt_long|24-240-188-229
38012|code|ADRL            R12, 0x18484|0-198-143-226-15-202-140-226
38020|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x18484)]!; __imp___ctype_b_loc|16-240-188-229
38024|code|ADRL            R12, 0x18490|0-198-143-226-15-202-140-226
38032|code|LDR             PC, [R12,#(exit_ptr - 0x18490)]!; __imp_exit|8-240-188-229
38036|code|ADRL            R12, 0x1849C|0-198-143-226-15-202-140-226
38044|code|LDR             PC, [R12]!; __imp_strtoul|0-240-188-229
38048|code|ADR             R12, 0x94A8|0-198-143-226
38052|code|ADD             R12, R12, #0xE000|14-202-140-226
38056|code|LDR             PC, [R12,#(strlen_ptr - 0x174A8)]!; __imp_strlen|248-255-188-229
38060|code|ADR             R12, 0x94B4|0-198-143-226
38064|code|ADD             R12, R12, #0xE000|14-202-140-226
38068|code|LDR             PC, [R12,#(strchr_ptr - 0x174B4)]!; __imp_strchr|240-255-188-229
38072|code|ADR             R12, 0x94C0|0-198-143-226
38076|code|ADD             R12, R12, #0xE000|14-202-140-226
38080|code|LDR             PC, [R12,#(fprintf_ptr - 0x174C0)]!; __imp_fprintf|232-255-188-229
38084|code|ADR             R12, 0x94CC|0-198-143-226
38088|code|ADD             R12, R12, #0xE000|14-202-140-226
38092|code|LDR             PC, [R12,#(fcntl_ptr - 0x174CC)]!; __imp_fcntl|224-255-188-229
38096|code|ADR             R12, 0x94D8|0-198-143-226
38100|code|ADD             R12, R12, #0xE000|14-202-140-226
38104|code|LDR             PC, [R12,#(execv_ptr - 0x174D8)]!; __imp_execv|216-255-188-229
38108|code|ADR             R12, 0x94E4|0-198-143-226
38112|code|ADD             R12, R12, #0xE000|14-202-140-226
38116|code|LDR             PC, [R12,#(__errno_location_ptr - 0x174E4)]!; __imp___errno_location|208-255-188-229
38120|code|ADR             R12, 0x94F0|0-198-143-226
38124|code|ADD             R12, R12, #0xE000|14-202-140-226
38128|code|LDR             PC, [R12,#(snprintf_ptr - 0x174F0)]!; __imp_snprintf|200-255-188-229
38132|code|ADR             R12, 0x94FC|0-198-143-226
38136|code|ADD             R12, R12, #0xE000|14-202-140-226
38140|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x174FC)]!; __imp___isoc99_sscanf|192-255-188-229
38144|code|ADR             R12, 0x9508|0-198-143-226
38148|code|ADD             R12, R12, #0xE000|14-202-140-226
38152|code|LDR             PC, [R12,#(__strdup_ptr - 0x17508)]!; __imp___strdup|184-255-188-229
38156|code|ADR             R12, 0x9514|0-198-143-226
38160|code|ADD             R12, R12, #0xE000|14-202-140-226
38164|code|LDR             PC, [R12,#(memset_ptr - 0x17514)]!; __imp_memset|176-255-188-229
38168|code|ADR             R12, 0x9520|0-198-143-226
38172|code|ADD             R12, R12, #0xE000|14-202-140-226
38176|code|LDR             PC, [R12,#(strncpy_ptr - 0x17520)]!; __imp_strncpy|168-255-188-229
38180|code|ADR             R12, 0x952C|0-198-143-226
38184|code|ADD             R12, R12, #0xE000|14-202-140-226
38188|code|LDR             PC, [R12,#(__xpg_basename_ptr - 0x1752C)]!; __imp___xpg_basename|160-255-188-229
38192|code|ADR             R12, 0x9538|0-198-143-226
38196|code|ADD             R12, R12, #0xE000|14-202-140-226
38200|code|LDR             PC, [R12,#(write_ptr - 0x17538)]!; __imp_write|152-255-188-229
38204|code|ADR             R12, 0x9544|0-198-143-226
38208|code|ADD             R12, R12, #0xE000|14-202-140-226
38212|code|LDR             PC, [R12,#(memchr_ptr - 0x17544)]!; __imp_memchr|144-255-188-229
38216|code|ADR             R12, 0x9550|0-198-143-226
38220|code|ADD             R12, R12, #0xE000|14-202-140-226
38224|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x17550)]!; __imp_sigemptyset|136-255-188-229
38228|code|ADR             R12, 0x955C|0-198-143-226
38232|code|ADD             R12, R12, #0xE000|14-202-140-226
38236|code|LDR             PC, [R12,#(strrchr_ptr - 0x1755C)]!; __imp_strrchr|128-255-188-229
38240|code|ADR             R12, 0x9568|0-198-143-226
38244|code|ADD             R12, R12, #0xE000|14-202-140-226
38248|code|LDR             PC, [R12,#(syslog_ptr - 0x17568)]!; __imp_syslog|120-255-188-229
38252|code|ADR             R12, 0x9574|0-198-143-226
38256|code|ADD             R12, R12, #0xE000|14-202-140-226
38260|code|LDR             PC, [R12,#(sprintf_ptr - 0x17574)]!; __imp_sprintf|112-255-188-229
38264|code|ADR             R12, 0x9580|0-198-143-226
38268|code|ADD             R12, R12, #0xE000|14-202-140-226
38272|code|LDR             PC, [R12,#(regcomp_ptr - 0x17580)]!; __imp_regcomp|104-255-188-229
38276|code|ADR             R12, 0x958C|0-198-143-226
38280|code|ADD             R12, R12, #0xE000|14-202-140-226
38284|code|LDR             PC, [R12,#(vsnprintf_ptr - 0x1758C)]!; __imp_vsnprintf|96-255-188-229
38288|code|ADR             R12, 0x9598|0-198-143-226
38292|code|ADD             R12, R12, #0xE000|14-202-140-226
38296|code|LDR             PC, [R12,#(qsort_ptr - 0x17598)]!; __imp_qsort|88-255-188-229
38300|code|ADR             R12, 0x95A4|0-198-143-226
38304|code|ADD             R12, R12, #0xE000|14-202-140-226
38308|code|LDR             PC, [R12,#(genders_load_data_ptr - 0x175A4)]!; __imp_genders_load_data|80-255-188-229
38312|code|ADR             R12, 0x95B0|0-198-143-226
38316|code|ADD             R12, R12, #0xE000|14-202-140-226
38320|code|LDR             PC, [R12,#(freeaddrinfo_ptr - 0x175B0)]!; __imp_freeaddrinfo|72-255-188-229
38324|code|ADR             R12, 0x95BC|0-198-143-226
38328|code|ADD             R12, R12, #0xE000|14-202-140-226
38332|code|LDR             PC, [R12,#(getaddrinfo_ptr - 0x175BC)]!; __imp_getaddrinfo|64-255-188-229
38336|code|ADR             R12, 0x95C8|0-198-143-226
38340|code|ADD             R12, R12, #0xE000|14-202-140-226
38344|code|LDR             PC, [R12,#(socket_ptr - 0x175C8)]!; __imp_socket|56-255-188-229
38348|code|ADR             R12, 0x95D4|0-198-143-226
38352|code|ADD             R12, R12, #0xE000|14-202-140-226
38356|code|LDR             PC, [R12,#(genders_handle_create_ptr - 0x175D4)]!; __imp_genders_handle_create|48-255-188-229
38360|code|ADR             R12, 0x95E0|0-198-143-226
38364|code|ADD             R12, R12, #0xE000|14-202-140-226
38368|code|LDR             PC, [R12,#(genders_errormsg_ptr - 0x175E0)]!; __imp_genders_errormsg|40-255-188-229
38372|code|ADR             R12, 0x95EC|0-198-143-226
38376|code|ADD             R12, R12, #0xE000|14-202-140-226
38380|code|LDR             PC, [R12,#(abort_ptr - 0x175EC)]!; __imp_abort|32-255-188-229
38384|code|ADR             R12, 0x95F8|0-198-143-226
38388|code|ADD             R12, R12, #0xE000|14-202-140-226
38392|code|LDR             PC, [R12,#(close_ptr - 0x175F8)]!; __imp_close|24-255-188-229
38396|code|ADR             R12, 0x9604|0-198-143-226
38400|code|ADD             R12, R12, #0xE000|14-202-140-226
38404|code|LDR             PC, [R12,#(forkpty_ptr - 0x17604)]!; __imp_forkpty|16-255-188-229
38408|code|ADR             R12, 0x9610|0-198-143-226
38412|code|ADD             R12, R12, #0xE000|14-202-140-226
38416|code|LDR             PC, [R12,#(connect_ptr - 0x17610)]!; __imp_connect|8-255-188-229
38420|code|ADR             R12, 0x961C|0-198-143-226
38424|code|ADD             R12, R12, #0xE000|14-202-140-226
38428|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x1761C)]!; __imp___assert_fail|0-255-188-229
38432|code|ADR             R12, 0x9628|0-198-143-226
38436|code|ADD             R12, R12, #0xE000|14-202-140-226
38440|code|LDR             PC, [R12,#(tcgetattr_ptr - 0x17628)]!; __imp_tcgetattr|248-254-188-229
38444|data|DCB 0x95|149
38445|data|DCB 0x4B, 0x2D, 0xE9|75-45-233
38448|data|DCD 0xB0B94FF0, 0x4605680A, 0x460C9307, 0x46104B92, 0xB2A8F8DF|240-79-185-176-10-104-5-70-7-147-12-70-146-75-16-70-223-248-168-178-223-248-168-146-27-104-55-147-255-247-106-239-142-74-3-70-19-96-0-240-129-255-141-72-3-240-200-252-0-35-140-74-31-70-154-70-30-70-6-147-4-147-19-96-3-147-5-147-128-70-136-74-40-70-33-70-135-75-0-150-255-247-246-238-66-28-0-240-53-129-48-56-72-40-74-216-223-232-16-240-240-0-232-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-224-0-220-0-212-0-73-0-73-0-73-0-73-0-209-0-73-0-73-0-203-0-73-0-73-0-73-0-195-0-187-0-73-0-183-0-176-0-73-0-170-0-73-0-73-0-168-0-165-0-73-0-73-0-73-0-73-0-73-0-73-0-73-0-158-0-150-0-143-0-73-0-135-0-132-0-119-0-73-0-73-0-73-0-112-0-73-0-73-0-73-0-73-0-105-0-97-0-73-0-90-0-82-0-73-0-73-0-75-0-0-240-89-251-64-70-92-73-0-34-1-35-0-240-43-251-158-231-64-70-90-73-217-248-0-32-0-35-0-240-35-251-150-231-0-34-64-70-86-73-19-70-0-240-28-251-143-231-64-70-84-73-217-248-0-32-0-35-0-240-20-251-135-231-0-34-64-70-81-73-19-70-0-240-13-251-128-231-0-34-64-70-78-73-19-70-0-240-6-251-121-231-217-248-0-0-58-33-255-247-144-238-16-177-131-70-11-248-1-107-217-248-0-48-7-147-108-231-79-240-1-10-105-231-64-70-68-73-217-248-0-32-0-35-0-240-238-250-97-231-0-34-64-70-65-73-19-70-0-240-231-250-90-231-64-70-63-73-217-248-0-32-0-35-0-240-223-250-82-231-0-34-64-70-59-73-19-70-0-240-216-250-75-231-1-35-5-147-72-231-1-39-70-231-55-72-255-247-34-238-1-32-255-247-74-238-64-70-53-73-0-34-1-35-0-240-198-250-57-231-217-248-0-48-4-147-53-231-64-70-48-73-217-248-0-32-0-35-0-240-186-250-45-231-64-70-45-73-217-248-0-32-0-35-0-240-178-250-37-231-43-72-255-247-0-238-1-32-255-247-42-238-1-35-3-147-28-231-64-70-39-73-217-248-0-32-0-35-0-240-161-250-20-231-217-248-0-48-6-147-16-231-64-70-34-73-217-248-0-32-0-35-0-240-149-250-8-231-64-70-31-73-217-248-0-32-0-35-0-240-141-250-0-231-64-70-28-73-217-248-0-32-0-35-0-240-133-250-248-230-188-239-0-0-56-133-1-0-92-133-1-0-229-160-0-0-80-133-1-0-248-241-0-0-20-235-0-0-236-241-0-0-24-240-0-0-64-240-0-0-228-239-0-0-4-240-0-0-240-239-0-0-12-240-0-0-84-240-0-0-216-239-0-0-48-240-0-0-136-239-0-0-224-241-0-0-248-239-0-0-56-240-0-0-92-240-0-0-72-240-0-0-36-240-0-0-40-240-0-0-208-239-0-0-200-239-0-0-84-133-1-0-64-70-3-240-249-251-0-40-127-244-19-175-4-155-0-43-20-191-0-38-7-240-1-6-0-46-127-244-10-175-223-248-116-147-217-248-0-48-157-66-106-221-64-70-3-240-154-254-9-148-8-144-4-70-0-224-6-70-32-70-3-240-86-255-0-40-249-209-8-152-9-156-3-240-248-254-0-46-63-244-240-174-74-246-253-35-197-242-101-83-205-248-32-176-205-248-36-160-155-70-205-248-44-128-162-70-10-151-168-70-9-224-56-70-33-70-4-240-210-248-176-96-217-248-0-48-1-51-201-248-0-48-217-248-0-32-144-69-50-221-51-104-90-248-34-64-91-69-64-240-171-129-183-104-0-47-232-209-117-104-166-73-40-70-255-247-154-236-0-40-0-240-217-128-40-70-163-73-255-247-148-236-0-40-0-240-249-128-40-70-161-73-255-247-140-236-79-242-72-3-192-242-0-3-80-177-40-70-157-73-255-247-132-236-0-40-64-240-189-128-79-242-56-3-192-242-0-3-115-96-32-70-152-73-4-240-181-248-176-96-195-231-221-248-32-176-221-248-36-160-10-159-221-248-44-128-64-70-3-240-47-254-4-70-2-224-81-70-0-240-26-250-32-70-3-240-235-254-0-40-247-209-32-70-3-240-142-254-5-155-0-43-64-240-164-128-4-155-0-43-0-240-199-128-2-32-255-247-194-236-0-40-4-70-192-242-135-128-128-33-131-74-6-155-23-168-255-247-86-237-23-168-127-73-4-240-131-248-5-70-0-47-116-209-0-33-21-168-10-70-4-240-221-255-67-28-104-208-168-185-2-33-32-70-255-247-152-236-0-40-192-242-31-129-32-70-255-247-192-237-0-32-4-240-85-255-41-70-4-152-255-247-42-237-1-32-113-73-4-154-0-240-126-253-32-70-255-247-178-237-40-70-4-240-252-248-21-156-32-70-74-246-253-38-0-240-192-251-32-70-106-73-197-242-101-86-0-240-198-250-64-70-3-240-211-253-7-70-56-70-3-240-147-254-0-40-0-240-181-128-3-104-179-66-64-240-226-128-194-104-0-42-0-240-229-128-32-70-95-73-95-75-3-240-235-255-32-70-0-240-74-251-160-241-100-3-5-70-199-43-247-216-160-241-200-3-87-73-32-70-99-43-136-191-0-37-0-240-158-250-3-155-0-43-216-209-0-45-214-208-56-70-3-240-18-254-64-70-3-240-143-250-79-73-80-74-32-70-78-75-3-240-201-255-32-70-78-73-0-240-137-250-40-70-255-247-174-236-1-32-76-73-0-240-40-253-146-231-75-73-3-240-234-255-5-70-133-231-1-32-73-73-0-240-30-253-115-231-56-70-71-73-0-240-25-253-12-231-70-75-32-70-57-73-115-96-3-240-246-255-176-96-4-231-64-70-74-246-253-36-3-240-117-253-197-242-101-84-5-70-9-224-3-104-163-66-72-209-193-104-0-41-76-208-51-72-51-74-255-247-176-235-40-70-3-240-40-254-0-40-240-209-6-70-40-70-3-240-202-253-48-70-255-247-116-236-52-75-32-70-38-73-115-96-3-240-207-255-176-96-221-230-4-153-32-34-13-168-1-36-255-247-168-236-7-152-89-70-13-170-22-171-15-148-255-247-244-236-0-40-112-209-22-152-0-40-119-208-5-70-79-240-255-52-0-45-121-208-0-34-104-104-169-104-255-247-236-236-0-40-4-70-12-219-105-105-42-105-255-247-8-237-0-40-3-219-22-152-255-247-212-236-72-231-32-70-255-247-244-236-237-105-230-231-26-72-79-244-240-114-25-73-26-75-255-247-252-236-25-72-64-242-225-18-22-73-22-75-255-247-246-236-5-70-107-231-0-191-4-240-0-0-48-240-0-0-84-240-0-0-64-240-0-0-68-239-0-0-108-242-0-0-160-242-0-0-224-242-0-0-88-242-0-0-88-239-0-0-236-242-0-0-244-242-0-0-132-242-0-0-128-242-0-0-96-242-0-0-32-242-0-0-248-239-0-0-36-240-0-0-252-237-0-0-20-238-0-0-208-236-0-0-60-242-0-0-60-133-1-0-24-72-79-244-234-114-24-73-24-75-255-247-190-236-24-72-64-242-213-18-20-73-21-75-255-247-182-236-1-32-21-73-0-240-106-252-219-230-255-247-64-235-19-73-7-154-91-70-0-144-4-152-0-240-96-252-132-231-16-73-91-70-7-154-0-240-90-252-22-152-128-231-40-70-13-73-7-154-91-70-0-240-82-252-140-231-3-72-64-242-159-18-2-73-9-75-255-247-146-236-252-237-0-0-20-238-0-0-220-236-0-0-60-242-0-0-148-242-0-0-168-242-0-0-192-242-0-0-4-243-0-0-196-236-0-0
40212|code|MOV.W           R11, #0|79-240-0-11
40216|code|MOV.W           LR, #0|79-240-0-14
40220|code|POP.W           {R1}; argc|93-248-4-27
40224|code|MOV             R2, SP; ubp_av|106-70
40226|code|PUSH.W          {R2}; stack_end|77-248-4-45
40230|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
40234|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
40238|code|PUSH.W          {R12}; fini|77-248-4-205
40242|code|LDR             R0, =byte_962D; main|4-72
40244|code|LDR             R3, =(sub_EA98+1); init|4-75
40246|code|BLX             __libc_start_main|255-247-136-235
40250|code|BLX             abort|255-247-84-236
40254|data|ALIGN 0x10|0-0
40256|data|DCD nullsub_1+1|221-234-0-0
40260|data|DCD byte_962D|45-150-0-0
40264|data|DCD sub_EA98+1|153-234-0-0
40268|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9D54)|3-75
40270|code|LDR             R2, =(__gmon_start___ptr_0 - 0x183F4)|4-74
40272|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
40274|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
40276|code|CBZ             R3, locret_9D5A|11-177
40278|code|B.W             sub_9460|255-247-131-187
40282|code|BX              LR|112-71
40284|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9D54|160-230-0-0
40288|data|DCD __gmon_start___ptr_0 - 0x183F4|48-1-0-0
40292|code|LDR             R3, =byte_18558|2-75
40294|code|LDRB            R2, [R3]|26-120
40296|code|CBNZ            R2, locret_9D6E|10-185
40298|code|MOVS            R2, #1|1-34
40300|code|STRB            R2, [R3]|26-112
40302|code|BX              LR|112-71
40304|data|DCD byte_18558|88-133-1-0
40308|code|LDR             R0, =dword_182E8|3-72
40310|code|PUSH            {R3,LR}|8-181
40312|code|LDR             R3, [R0]|3-104
40314|code|CBZ             R3, locret_9D82|19-177
40316|code|LDR             R3, =0|2-75
40318|code|CBZ             R3, locret_9D82|3-177
40320|code|BLX             R3|152-71
40322|code|POP             {R3,PC}|8-189
40324|data|DCD dword_182E8|232-130-1-0
40328|data|DCD 0|0-0-0-0
40332|code|PUSH.W          {R4-R8,LR}|45-233-240-65
40336|code|MOV             R4, R0|4-70
40338|code|MOVS            R0, #0x10|16-32
40340|code|MOV             R5, R1|13-70
40342|code|MOV             R7, R2|23-70
40344|code|MOV             R8, R3|152-70
40346|code|BL              sub_E1F0|4-240-41-250
40350|code|MOVS            R3, #0|0-35
40352|code|MOV             R2, #0x5565AAFD|74-246-253-34-197-242-101-82
40360|code|MOV             R6, R0|6-70
40362|code|STR             R5, [R0,#4]|69-96
40364|code|STR             R3, [R0,#8]|131-96
40366|code|STR             R2, [R0]|2-96
40368|code|STR             R3, [R0,#0xC]|195-96
40370|code|CBZ             R7, loc_9DBE|39-177
40372|code|MOV             R0, R7|56-70
40374|code|LDR             R1, =(a103QueryComple+0x14); ""|8-73
40376|code|BL              sub_DB4C|3-240-200-254
40380|code|STR             R0, [R6,#8]|176-96
40382|code|MOV             R0, R4|32-70
40384|code|MOV             R1, R6|49-70
40386|code|CMP.W           R8, #0|184-241-0-15
40390|code|BNE             loc_9DD0|3-209
40392|code|POP.W           {R4-R8,LR}|189-232-240-65
40396|code|B.W             sub_D17C|3-240-214-185
40400|code|POP.W           {R4-R8,LR}|189-232-240-65
40404|code|B.W             sub_D1DC|3-240-2-186
40408|data|DCD a103QueryComple+0x14; ""|68-239-0-0
40412|code|PUSH            {R3,LR}|8-181
40414|code|MOV             R3, #0x1855C|72-242-92-83-192-242-1-3
40422|code|MOV             R0, #0xECEC|78-246-236-64-192-242-0-0
40430|code|LDR             R1, [R3]|25-104
40432|code|BLX             printf|255-247-122-234
40436|code|MOV             R0, #0xED0C|78-246-12-80-192-242-0-0
40444|code|BLX             puts|255-247-24-235
40448|code|MOV             R0, #0xED34|78-246-52-80-192-242-0-0
40456|code|BLX             puts|255-247-18-235
40460|code|MOV             R0, #0xED5C|78-246-92-80-192-242-0-0
40468|code|BLX             puts|255-247-12-235
40472|code|MOV             R0, #0xED88|78-246-136-80-192-242-0-0
40480|code|BLX             puts|255-247-6-235
40484|code|MOV             R0, #0xEDC0|78-246-192-80-192-242-0-0
40492|code|BLX             puts|255-247-0-235
40496|code|MOVS            R0, #1|1-32
40498|code|BLX             exit|255-247-42-235
40502|data|ALIGN 4|0-191
40504|code|PUSH.W          {R4-R11,LR}|45-233-240-79
40508|code|MOV             R6, R0|6-70
40510|code|LDR             R2, [R0]|2-104
40512|code|SUB.W           SP, SP, #0x2000|173-245-0-93
40516|code|MOV             R0, #0x18538|72-242-56-80-192-242-1-0
40524|code|SUB             SP, SP, #0x14|133-176
40526|code|MOVW            R3, #0xAAFD|74-246-253-35
40530|code|MOV             R10, R1|138-70
40532|code|MOVT.W          R3, #0x5565|197-242-101-83
40536|code|LDR             R1, [R0]|1-104
40538|code|ADD.W           R0, SP, #0x2000|13-245-0-80
40542|code|ADDS            R0, #0xC|12-48
40544|code|CMP             R2, R3|154-66
40546|code|STR             R1, [R0]|1-96
40548|code|BNE.W           loc_A000|64-240-204-128
40552|code|LDR             R5, [R6,#0xC]|245-104
40554|code|CMP             R5, #0|0-45
40556|code|BNE.W           loc_9FF2|64-240-193-128
40560|code|LDR             R3, [R6,#8]|179-104
40562|code|ADD             R4, SP, #0xC|3-172
40564|code|STRB.W          R5, [SP,#0xC]|141-248-12-80
40568|code|CBZ             R3, loc_9ECA|59-179
40570|code|MOV             R0, R5|40-70
40572|code|MOV             R4, R5|44-70
40574|code|BL              sub_C678|2-240-251-251
40578|code|ADD             R7, SP, #8|2-175
40580|code|MOV             R8, R0|128-70
40582|code|LDR             R0, [R6,#8]|176-104
40584|code|BL              sub_DAF8|3-240-54-254
40588|code|CMP             R4, R0|132-66
40590|code|BGE             loc_9EB0|15-218
40592|code|CMP.W           R10, #0|186-241-0-15
40596|code|BEQ             loc_9F72|109-208
40598|code|LDR             R0, [R6,#8]|176-104
40600|code|LDR.W           R9, [R0,R5]|80-248-5-144
40604|code|LDRB.W          R3, [R9]|153-248-0-48
40608|code|CMP             R3, #0|0-43
40610|code|BNE             loc_9EF6|40-209
40612|code|ADDS            R4, #1|1-52
40614|code|ADDS            R5, #4|4-53
40616|code|BL              sub_DAF8|3-240-38-254
40620|code|CMP             R4, R0|132-66
40622|code|BLT             loc_9E90|239-219
40624|code|ADD             R4, SP, #0xC|3-172
40626|code|MOV             R0, R8|64-70
40628|code|MOV.W           R1, #0x2000|79-244-0-81
40632|code|MOV             R2, R4|34-70
40634|code|BL              sub_B740|1-240-65-252
40638|code|ADDS            R0, #1|1-48
40640|code|BEQ.W           loc_9FDC|0-240-140-128
40644|code|MOV             R0, R8|64-70
40646|code|BL              sub_C060|2-240-203-248
40650|code|MOV             R1, R4|33-70
40652|code|LDR             R0, [R6,#4]|112-104
40654|code|BL              sub_DA90|3-240-223-253
40658|code|ADD.W           R1, SP, #0x2000|13-245-0-81
40662|code|ADDS            R1, #0xC|12-49
40664|code|LDR             R2, [R1]|10-104
40666|code|MOV             R1, #0x18538|72-242-56-81-192-242-1-1
40674|code|LDR             R3, [R1]|11-104
40676|code|CMP             R2, R3|154-66
40678|code|STR             R0, [R6,#0xC]|240-96
40680|code|BNE.W           loc_9FEE|64-240-129-128
40684|code|ADD             SP, SP, #0x14|5-176
40686|code|ADD.W           SP, SP, #0x2000|13-245-0-93
40690|code|POP.W           {R4-R11,PC}|189-232-240-143
40694|code|BLX             genders_handle_create|255-247-106-235
40698|code|MOV             R11, R0|131-70
40700|code|CMP             R0, #0|0-40
40702|code|BEQ             loc_9FE6|114-208
40704|code|MOVS            R1, #0|0-33
40706|code|MOV             R0, R11|88-70
40708|code|BLX             genders_load_data|255-247-74-235
40712|code|CMP             R0, #0|0-40
40714|code|BLT             loc_9FCA|94-219
40716|code|MOV             R0, R11|88-70
40718|code|MOV             R1, R7|57-70
40720|code|BLX             genders_nodelist_create|255-247-136-234
40724|code|CMP             R0, #0|0-40
40726|code|MOV             R3, R0|3-70
40728|code|BLT             loc_9FB4|76-219
40730|code|MOV             R2, R3|26-70
40732|code|LDR             R1, [R7]|57-104
40734|code|MOV             R3, R9|75-70
40736|code|MOV             R0, R11|88-70
40738|code|BLX             genders_query|255-247-86-234
40742|code|MOV             R9, R0|129-70
40744|code|CMP.W           R9, #0|185-241-0-15
40748|code|MOV             R0, R11|88-70
40750|code|BLT             loc_9F9C|53-219
40752|code|BLX             genders_handle_destroy|255-247-24-234
40756|code|CMP.W           R9, #0|185-241-0-15
40760|code|BEQ             loc_9F8C|40-208
40762|code|IT GT|200-191
40764|code|MOVGT.W         R11, #0|79-240-0-11
40768|code|BGT             loc_9F4C|4-220
40770|code|B               loc_9F6A|18-224
40772|code|ADD.W           R11, R11, #1|11-241-1-11
40776|code|CMP             R11, R9|203-69
40778|code|BEQ             loc_9F6A|14-208
40780|code|LDR             R3, [R7]|59-104
40782|code|MOV             R0, R8|64-70
40784|code|LDR.W           R1, [R3,R11,LSL#2]|83-248-43-16
40788|code|BL              sub_C6C4|2-240-182-251
40792|code|CMP             R0, #0|0-40
40794|code|BNE             loc_9F44|243-209
40796|code|LDR             R1, =aHostlistError; "hostlist error"|44-73
40798|code|ADD.W           R11, R11, #1|11-241-1-11
40802|code|BL              sub_A584|0-240-15-251
40806|code|CMP             R11, R9|203-69
40808|code|BNE             loc_9F4C|240-209
40810|code|LDR             R0, [R6,#8]|176-104
40812|code|ADDS            R4, #1|1-52
40814|code|ADDS            R5, #4|4-53
40816|code|B               loc_9EA8|154-231
40818|code|LDR             R3, [R6,#8]|179-104
40820|code|MOV             R0, R8|64-70
40822|code|LDR             R1, [R3,R5]|89-89
40824|code|BL              sub_C6C4|2-240-164-251
40828|code|CMP             R0, #0|0-40
40830|code|BNE             loc_9F6A|244-209
40832|code|MOV             R0, R10|80-70
40834|code|LDR             R1, =aHostlistError; "hostlist error"|35-73
40836|code|BL              sub_A584|0-240-254-250
40840|code|LDR             R0, [R6,#8]|176-104
40842|code|B               loc_9F6C|239-231
40844|code|MOV             R0, R9|72-70
40846|code|LDR             R1, =aGendersExpress; "genders expression did not match any no"...|33-73
40848|code|BL              sub_A584|0-240-248-250
40852|code|ADDS            R4, #1|1-52
40854|code|LDR             R0, [R6,#8]|176-104
40856|code|ADDS            R5, #4|4-53
40858|code|B               loc_9EA8|133-231
40860|code|BLX             genders_errormsg|255-247-28-235
40864|code|LDR             R1, =aGendersQueryS; "genders_query: %s"|29-73
40866|code|MOV             R2, R0|2-70
40868|code|MOVS            R0, #0|0-32
40870|code|BL              sub_A584|0-240-237-250
40874|code|MOV             R0, R11|88-70
40876|code|BLX             genders_handle_destroy|255-247-218-233
40880|code|LDR             R0, [R6,#8]|176-104
40882|code|B               loc_9F6C|219-231
40884|code|MOV             R0, R11|88-70
40886|code|STR             R3, [SP,#4]|1-147
40888|code|BLX             genders_errormsg|255-247-14-235
40892|code|LDR             R1, =aGendersNodelis_0; "genders_nodelist_create: %s"|23-73
40894|code|MOV             R2, R0|2-70
40896|code|MOVS            R0, #0|0-32
40898|code|BL              sub_A584|0-240-223-250
40902|code|LDR             R3, [SP,#4]|1-155
40904|code|B               loc_9F1A|167-231
40906|code|MOV             R0, R11|88-70
40908|code|BLX             genders_errormsg|255-247-4-235
40912|code|LDR             R1, =aGendersLoadDat_0; "genders_load_data: %s"|19-73
40914|code|MOV             R2, R0|2-70
40916|code|MOVS            R0, #0|0-32
40918|code|BL              sub_A584|0-240-213-250
40922|code|B               loc_9F0C|151-231
40924|code|MOVS            R0, #0|0-32
40926|code|LDR             R1, =aHostlistError; "hostlist error"|12-73
40928|code|BL              sub_A584|0-240-208-250
40932|code|B               loc_9EC4|110-231
40934|code|LDR             R1, =aGendersHandleC_0; "genders_handle_create failed"|15-73
40936|code|BL              sub_A584|0-240-204-250
40940|code|B               loc_9F00|136-231
40942|code|BLX             __stack_chk_fail|255-247-204-233
40946|code|LDR             R0, =aCpSendstrVoid0; "cp->sendstr == ((void *)0)"|13-72
40948|code|MOV.W           R2, #0x1BA|79-244-221-114
40952|code|LDR             R1, =aPowermanC; "powerman.c"|12-73
40954|code|LDR             R3, =aCmdPrepare; "_cmd_prepare"|13-75
40956|code|BLX             __assert_fail|255-247-10-235
40960|code|LDR             R0, =aCpMagic0x5565a; "cp->magic == 0x5565aafd"|12-72
40962|code|MOVW            R2, #0x1B9|64-242-185-18
40966|code|LDR             R1, =aPowermanC; "powerman.c"|9-73
40968|code|LDR             R3, =aCmdPrepare; "_cmd_prepare"|9-75
40970|code|BLX             __assert_fail|255-247-4-235
40974|data|ALIGN 0x10|0-191
40976|data|DCD aHostlistError; "hostlist error"|208-238-0-0
40980|data|DCD aGendersExpress; "genders expression did not match any no"...|164-238-0-0
40984|data|DCD aGendersQueryS; "genders_query: %s"|144-238-0-0
40988|data|DCD aGendersNodelis_0; "genders_nodelist_create: %s"|116-238-0-0
40992|data|DCD aGendersLoadDat_0; "genders_load_data: %s"|92-238-0-0
40996|data|DCD aGendersHandleC_0; "genders_handle_create failed"|60-238-0-0
41000|data|DCD aCpSendstrVoid0; "cp->sendstr == ((void *)0)"|32-238-0-0
41004|data|DCD aPowermanC; "powerman.c"|20-238-0-0
41008|data|DCD aCmdPrepare; "_cmd_prepare"|236-234-0-0
41012|data|DCD aCpMagic0x5565a; "cp->magic == 0x5565aafd"|252-237-0-0
41016|code|PUSH.W          {R4-R10,LR}|45-233-240-71
41020|code|SUB.W           SP, SP, #0x2000|173-245-0-93
41024|code|LDR.W           R9, =__stack_chk_guard|223-248-156-144
41028|code|SUB             SP, SP, #8|130-176
41030|code|ADD.W           R2, SP, #0x2000|13-245-0-82
41034|code|MOV             R8, R0|128-70
41036|code|ADDS            R2, #4|4-50
41038|code|MOV             R0, R1|8-70
41040|code|LDR.W           R3, [R9]|217-248-0-48
41044|code|MOV             R6, R1|14-70
41046|code|MOVS            R7, #0|0-39
41048|code|ADD             R4, SP, #4|1-172
41050|code|STR             R3, [R2]|19-96
41052|code|BLX             strlen|255-247-32-234
41056|code|CMP.W           R0, #0x2000|176-245-0-95
41060|code|MOV             R5, R0|5-70
41062|code|BCS             loc_A0BA|40-210
41064|code|MOV             R0, R8|64-70
41066|code|MOV             R1, R4|33-70
41068|code|MOV             R2, R5|42-70
41070|code|BL              sub_DCAC|3-240-29-254
41074|code|CMP             R0, #0|0-40
41076|code|MOV             R10, R0|130-70
41078|code|BLT             loc_A0B0|27-219
41080|code|ADD             R4, R10|84-68
41082|code|MOV             R0, R6|48-70
41084|code|ADD             R1, SP, #4|1-169
41086|code|STRB            R7, [R4]|39-112
41088|code|BLX             strcmp|255-247-38-233
41092|code|CBZ             R0, loc_A096|56-177
41094|code|RSB.W           R5, R10, R5|202-235-5-5
41098|code|CMP             R5, #0|0-45
41100|code|BGT             loc_A068|236-220
41102|code|MOVS            R0, #0|0-32
41104|code|LDR             R1, =aUnexpectedResp; "unexpected response from server"|14-73
41106|code|BL              sub_A584|0-240-119-250
41110|code|ADD.W           R3, SP, #0x2000|13-245-0-83
41114|code|ADDS            R3, #4|4-51
41116|code|LDR             R2, [R3]|26-104
41118|code|LDR.W           R3, [R9]|217-248-0-48
41122|code|CMP             R2, R3|154-66
41124|code|BNE             loc_A0C8|16-209
41126|code|ADD             SP, SP, #8|2-176
41128|code|ADD.W           SP, SP, #0x2000|13-245-0-93
41132|code|POP.W           {R4-R10,PC}|189-232-240-135
41136|code|MOVS            R0, #1|1-32
41138|code|LDR             R1, =aLostConnection; "lost connection with server"|7-73
41140|code|BL              sub_A584|0-240-102-250
41144|code|B               loc_A078|222-231
41146|code|LDR             R0, =aLenSizeofBuf; "len < sizeof(buf)"|6-72
41148|code|MOVW            R2, #0x27D|64-242-125-34
41152|code|LDR             R1, =aPowermanC; "powerman.c"|5-73
41154|code|LDR             R3, =aExpect; "_expect"|6-75
41156|code|BLX             __assert_fail|255-247-166-234
41160|code|BLX             __stack_chk_fail|255-247-94-233
41164|data|DCD aUnexpectedResp; "unexpected response from server"|16-239-0-0
41168|data|DCD aLostConnection; "lost connection with server"|244-238-0-0
41172|data|DCD aLenSizeofBuf; "len < sizeof(buf)"|224-238-0-0
41176|data|DCD aPowermanC; "powerman.c"|20-238-0-0
41180|data|DCD aExpect; "_expect"|252-234-0-0
41184|data|DCD __stack_chk_guard|56-133-1-0
41188|code|LDR             R2, [R0]|2-104
41190|code|MOV             R3, #0x5565AAFD|74-246-253-35-197-242-101-83
41198|code|CMP             R2, R3|154-66
41200|code|PUSH            {R4,LR}|16-181
41202|code|MOV             R4, R0|4-70
41204|code|BNE             loc_A114|14-209
41206|code|LDR             R0, [R0,#0xC]|192-104
41208|code|MOVS            R3, #0|0-35
41210|code|STR             R3, [R4]|35-96
41212|code|CBZ             R0, loc_A102|8-177
41214|code|BL              sub_E33C|4-240-29-249
41218|code|LDR             R0, [R4,#8]|160-104
41220|code|CBZ             R0, loc_A10A|8-177
41222|code|BL              sub_DC8C|3-240-193-253
41226|code|MOV             R0, R4|32-70
41228|code|POP.W           {R4,LR}|189-232-16-64
41232|code|B.W             sub_E33C|4-240-20-185
41236|code|LDR             R0, =aCpMagic0x5565a; "cp->magic == 0x5565aafd"|3-72
41238|code|MOVW            R2, #0x193|64-242-147-18
41242|code|LDR             R1, =aPowermanC; "powerman.c"|3-73
41244|code|LDR             R3, =aCmdDestroy; "_cmd_destroy"|3-75
41246|code|BLX             __assert_fail|255-247-122-234
41250|data|ALIGN 4|0-191
41252|data|DCD aCpMagic0x5565a; "cp->magic == 0x5565aafd"|252-237-0-0
41256|data|DCD aPowermanC; "powerman.c"|20-238-0-0
41260|data|DCD aCmdDestroy; "_cmd_destroy"|4-235-0-0
41264|code|PUSH            {R4-R6,LR}|112-181
41266|code|MOV             R6, R0|6-70
41268|code|MOV             R4, R1|12-70
41270|code|MOV.W           R5, #0x2000|79-244-0-85
41274|code|B               loc_A150|9-224
41276|code|LDRB            R3, [R4]|35-120
41278|code|CMP             R3, #0xD|13-43
41280|code|BEQ             loc_A14C|4-208
41282|code|CMP             R3, #0xA|10-43
41284|code|ADD.W           R5, R5, #0xFFFFFFFF|5-241-255-53
41288|code|BEQ             loc_A168|14-208
41290|code|ADDS            R4, #1|1-52
41292|code|CMP             R5, #1|1-45
41294|code|BLE             loc_A168|11-221
41296|code|MOVS            R2, #1; nbytes|1-34
41298|code|MOV             R1, R4; buf|33-70
41300|code|MOV             R0, R6; fd|48-70
41302|code|BL              sub_DCAC|3-240-169-253
41306|code|CMP             R0, #0|0-40
41308|code|BGT             loc_A13C|238-220
41310|code|MOVS            R0, #1|1-32
41312|code|LDR             R1, =aLostConnection; "lost connection with server"|3-73
41314|code|BL              sub_A584|0-240-15-250
41318|code|B               loc_A13C|233-231
41320|code|MOVS            R3, #0|0-35
41322|code|STRB            R3, [R4]|35-112
41324|code|POP             {R4-R6,PC}|112-189
41326|data|ALIGN 0x10|0-191
41328|data|DCD aLostConnection; "lost connection with server"|244-238-0-0
41332|code|PUSH            {R4,R5,LR}|48-181
41334|code|SUB.W           SP, SP, #0x2000|173-245-0-93
41338|code|LDR             R5, =__stack_chk_guard|36-77
41340|code|SUB             SP, SP, #0xC|131-176
41342|code|ADD.W           R2, SP, #0x2000|13-245-0-82
41346|code|ADD             R1, SP, #4|1-169
41348|code|ADDS            R2, #4|4-50
41350|code|LDR             R3, [R5]|43-104
41352|code|STR             R3, [R2]|19-96
41354|code|BL              sub_A130|255-247-209-255
41358|code|MOVS            R1, #0|0-33
41360|code|MOVS            R2, #0xA|10-34
41362|code|ADD             R0, SP, #4|1-168
41364|code|BLX             strtol|255-247-162-232
41368|code|ADD.W           R3, R0, #0x80000000|0-241-0-67
41372|code|MOV             R4, R0|4-70
41374|code|SUBS            R3, #1|1-59
41376|code|ADD             R0, SP, #4|1-168
41378|code|CMN.W           R3, #3|19-241-3-15
41382|code|IT HI|136-191
41384|code|MOVHI.W         R4, #0xFFFFFFFF|79-240-255-52
41388|code|BLX             strlen|255-247-120-233
41392|code|CMP             R0, #4|4-40
41394|code|BLS             loc_A1FC|35-217
41396|code|MOVS            R1, #0|0-33
41398|code|MOVS            R2, #0xA|10-34
41400|code|LDR             R0, =a103QueryComple; "103 Query complete\r\n"|21-72
41402|code|BLX             strtol|255-247-144-232
41406|code|CMP             R4, R0|132-66
41408|code|BEQ             loc_A1E4|16-208
41410|code|MOVS            R1, #0|0-33
41412|code|MOVS            R2, #0xA|10-34
41414|code|LDR             R0, =a104TelemetryS; "104 Telemetry %s\r\n"|19-72
41416|code|BLX             strtol|255-247-136-232
41420|code|CMP             R4, R0|132-66
41422|code|BEQ             loc_A1E4|9-208
41424|code|MOVS            R1, #0|0-33
41426|code|MOVS            R2, #0xA|10-34
41428|code|LDR             R0, =a105HostrangeEx; "105 Hostrange expansion %s\r\n"|16-72
41430|code|BLX             strtol|255-247-130-232
41434|code|CMP             R4, R0|132-66
41436|code|BEQ             loc_A1E4|2-208
41438|code|ADD             R0, SP, #8|2-168
41440|code|BLX             puts|255-247-38-233
41444|code|ADD.W           R3, SP, #0x2000|13-245-0-83
41448|code|MOV             R0, R4|32-70
41450|code|ADDS            R3, #4|4-51
41452|code|LDR             R2, [R3]|26-104
41454|code|LDR             R3, [R5]|43-104
41456|code|CMP             R2, R3|154-66
41458|code|BNE             loc_A206|8-209
41460|code|ADD             SP, SP, #0xC|3-176
41462|code|ADD.W           SP, SP, #0x2000|13-245-0-93
41466|code|POP             {R4,R5,PC}|48-189
41468|code|MOVS            R0, #0|0-32
41470|code|LDR             R1, =aUnexpectedResp; "unexpected response from server"|7-73
41472|code|BL              sub_A584|0-240-192-249
41476|code|B               loc_A1E4|238-231
41478|code|BLX             __stack_chk_fail|255-247-192-232
41482|data|ALIGN 4|0-191
41484|data|DCD __stack_chk_guard|56-133-1-0
41488|data|DCD a103QueryComple; "103 Query complete\r\n"|48-239-0-0
41492|data|DCD a104TelemetryS; "104 Telemetry %s\r\n"|72-239-0-0
41496|data|DCD a105HostrangeEx; "105 Hostrange expansion %s\r\n"|92-239-0-0
41500|data|DCD aUnexpectedResp; "unexpected response from server"|16-239-0-0
41504|code|PUSH            {R4,LR}|16-181
41506|code|SUB.W           SP, SP, #0x4000|173-245-128-77
41510|code|LDR             R4, =__stack_chk_guard|25-76
41512|code|SUB             SP, SP, #8|130-176
41514|code|ADD.W           R2, SP, #0x4000|13-245-128-66
41518|code|ADD             R1, SP, #4|1-169
41520|code|ADDS            R2, #4|4-50
41522|code|LDR             R3, [R4]|35-104
41524|code|STR             R3, [R2]|19-96
41526|code|BL              sub_A130|255-247-123-255
41530|code|ADD.W           R2, SP, #0x2000|13-245-0-82
41534|code|ADDS            R2, #4|4-50
41536|code|ADD             R0, SP, #4|1-168
41538|code|LDR             R1, =a001S; "001 %s\r\n"|19-73
41540|code|BLX             __isoc99_sscanf|255-247-86-233
41544|code|CMP             R0, #1|1-40
41546|code|BEQ             loc_A254|3-208
41548|code|MOVS            R0, #0|0-32
41550|code|LDR             R1, =aUnexpectedResp; "unexpected response from server"|17-73
41552|code|BL              sub_A584|0-240-152-249
41556|code|ADD.W           R0, SP, #0x2000|13-245-0-80
41560|code|LDR             R1, =a235; "2.3.5"|15-73
41562|code|ADDS            R0, #4|4-48
41564|code|BLX             strcmp|255-247-56-232
41568|code|CBZ             R0, loc_A272|56-177
41570|code|ADD.W           R2, SP, #0x2000|13-245-0-82
41574|code|MOVS            R0, #0|0-32
41576|code|LDR             R1, =aWarningServerV; "warning: server version (%s) != client "...|12-73
41578|code|ADDS            R2, #4|4-50
41580|code|LDR             R3, =a235; "2.3.5"|10-75
41582|code|BL              err|0-240-161-249
41586|code|ADD.W           R3, SP, #0x4000|13-245-128-67
41590|code|ADDS            R3, #4|4-51
41592|code|LDR             R2, [R3]|26-104
41594|code|LDR             R3, [R4]|35-104
41596|code|CMP             R2, R3|154-66
41598|code|BNE             loc_A288|3-209
41600|code|ADD             SP, SP, #8|2-176
41602|code|ADD.W           SP, SP, #0x4000|13-245-128-77
41606|code|POP             {R4,PC}|16-189
41608|code|BLX             __stack_chk_fail|255-247-126-232
41612|data|DCD __stack_chk_guard|56-133-1-0
41616|data|DCD a001S; "001 %s\r\n"|124-239-0-0
41620|data|DCD aUnexpectedResp; "unexpected response from server"|16-239-0-0
41624|data|DCD a235; "2.3.5"|136-239-0-0
41628|data|DCD aWarningServerV; "warning: server version (%s) != client "...|144-239-0-0
41632|code|MOV             R3, #0x18530|72-242-48-83-192-242-1-3
41640|code|MOVS            R2, #0|0-34
41642|code|STR             R2, [R3]|26-96
41644|code|BX              LR|112-71
41646|data|ALIGN 0x10|0-191
41648|code|MOV             R3, #0x18560|72-242-96-83-192-242-1-3
41656|code|STR             R0, [R3]|24-96
41658|code|BX              LR|112-71
41660|code|PUSH            {R1-R3}|14-180
41662|code|LDR             R1, =dword_18560|54-73
41664|code|PUSH            {R4-R7,LR}|240-181
41666|code|SUB.W           SP, SP, #0x418|173-245-131-109
41670|code|LDR             R5, =__stack_chk_guard|53-77
41672|code|LDR             R4, [R1]|12-104
41674|code|LDR.W           R2, [SP,#0x438+varg_r1]; format|221-248-44-36
41678|code|LDR             R3, [R5]|43-104
41680|code|ANDS            R4, R0|4-64
41682|code|CMP             R4, R0|132-66
41684|code|STR.W           R3, [SP,#0x438+var_24]|205-248-20-52
41688|code|BEQ             loc_A2F2|11-208
41690|code|LDR.W           R2, [SP,#0x438+var_24]|221-248-20-36
41694|code|LDR             R3, [R5]|43-104
41696|code|CMP             R2, R3|154-66
41698|code|BNE             loc_A394|87-209
41700|code|ADD             SP, SP, #0x18|6-176
41702|code|ADD.W           SP, SP, #0x400|13-245-128-109
41706|code|POP.W           {R4-R7,LR}|189-232-240-64
41710|code|ADD             SP, SP, #0xC|3-176
41712|code|BX              LR|112-71
41714|code|ADD.W           R6, SP, #0x438+varg_r2|13-245-134-102
41718|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
41722|code|ADD             R0, SP, #0x438+s; s|5-168
41724|code|STR             R6, [SP,#0x438+var_42C]|3-150
41726|code|MOV             R3, R6; arg|51-70
41728|code|BLX             vsnprintf|255-247-64-233
41732|code|LDR             R3, =dword_18530|38-75
41734|code|LDR             R1, [R3]|25-104
41736|code|CBNZ            R1, loc_A33C|193-185
41738|code|LDR.W           LR, =unk_F3F8|223-248-168-224
41742|code|CMP             R4, #1|1-44
41744|code|IT NE|24-191
41746|code|MOVNE           R3, LR|115-70
41748|code|BNE             loc_A31E|3-209
41750|code|B               loc_A334|13-224
41752|code|ADDS            R3, #8|8-51
41754|code|CMP             R4, R2|148-66
41756|code|BEQ             loc_A334|10-208
41758|code|LDR             R2, [R3,#8]|154-104
41760|code|ADDS            R1, #1|1-49
41762|code|CMP             R2, #0|0-42
41764|code|BNE             loc_A318|248-209
41766|code|LDR             R2, =aUnknown; "<unknown>"|31-74
41768|code|MOVS            R0, #7; pri|7-32
41770|code|LDR             R1, =aSS; "%s: %s"|31-73
41772|code|ADD             R3, SP, #0x438+s|5-171
41774|code|BLX             syslog|255-247-24-233
41778|code|B               loc_A2DA|210-231
41780|code|ADD.W           R1, LR, R1,LSL#3|14-235-193-1
41784|code|LDR             R2, [R1,#4]|74-104
41786|code|B               loc_A328|245-231
41788|code|LDR             R3, =stderr|27-75
41790|code|MOVS            R0, #0; timer|0-32
41792|code|LDR             R7, [R3]|31-104
41794|code|BLX             time|255-247-10-232
41798|code|MOV             R3, R0|3-70
41800|code|ADD             R0, SP, #0x438+timer; timer|4-168
41802|code|STR             R3, [SP,#0x438+timer]|4-147
41804|code|BLX             ctime|255-247-22-232
41808|code|MOV             R6, R0|6-70
41810|code|BLX             strlen|255-247-166-232
41814|code|LDR.W           LR, =unk_F3F8|223-248-92-224
41818|code|ADDS            R3, R6, R0|51-24
41820|code|MOVS            R0, #0|0-32
41822|code|CMP             R4, #1|1-44
41824|code|STRB.W          R0, [R3,#-1]|3-248-1-12
41828|code|IT NE|24-191
41830|code|MOVNE           R3, LR|115-70
41832|code|BNE             loc_A372|3-209
41834|code|B               loc_A38C|15-224
41836|code|ADDS            R3, #8|8-51
41838|code|CMP             R4, R2|148-66
41840|code|BEQ             loc_A38C|12-208
41842|code|LDR             R2, [R3,#8]|154-104
41844|code|ADDS            R0, #1|1-48
41846|code|CMP             R2, #0|0-42
41848|code|BNE             loc_A36C|248-209
41850|code|LDR             R3, =aUnknown; "<unknown>"|10-75
41852|code|ADD             R2, SP, #0x438+s|5-170
41854|code|MOV             R0, R7; stream|56-70
41856|code|STR             R2, [SP,#0x438+var_438]|0-146
41858|code|MOV             R2, R6|50-70
41860|code|LDR             R1, =aSSS_0; "%s %s: %s\n"|10-73
41862|code|BLX             fprintf|255-247-152-232
41866|code|B               loc_A2DA|166-231
41868|code|ADD.W           R0, LR, R0,LSL#3|14-235-192-0
41872|code|LDR             R3, [R0,#4]|67-104
41874|code|B               loc_A37C|243-231
41876|code|BLX             __stack_chk_fail|254-247-248-239
41880|data|DCD dword_18560|96-133-1-0
41884|data|DCD __stack_chk_guard|56-133-1-0
41888|data|DCD dword_18530|48-133-1-0
41892|data|DCD aUnknown; "<unknown>"|60-244-0-0
41896|data|DCD aSS; "%s: %s"|84-244-0-0
41900|data|DCD stderr|64-133-1-0
41904|data|DCD aSSS_0; "%s %s: %s\n"|72-244-0-0
41908|data|DCD unk_F3F8|248-243-0-0
41912|code|PUSH.W          {R4-R10,LR}|45-233-240-71
41916|code|MOV.W           R8, R1,LSL#2|79-234-129-8
41920|code|MOV             R9, R0|129-70
41922|code|ADD.W           R0, R8, #1|8-241-1-0
41926|code|MOV             R6, R1|14-70
41928|code|BL              sub_E1F0|3-240-18-255
41932|code|MOVS            R5, #0|0-37
41934|code|CMP             R6, #0|0-46
41936|code|MOV             R7, R0|7-70
41938|code|BLE             loc_A452|62-221
41940|code|MOV             R4, R5|44-70
41942|code|B               loc_A410|27-224
41944|code|CMP.W           R10, #0xD|186-241-13-15
41948|code|BEQ             loc_A436|43-208
41950|code|CMP.W           R10, #9|186-241-9-15
41954|code|BEQ             loc_A428|33-208
41956|code|BLX             __ctype_b_loc|255-247-74-232
41960|code|LDR             R3, [R0]|3-104
41962|code|LDRH.W          R3, [R3,R10,LSL#1]|51-248-26-48
41966|code|LSLS            R3, R3, #0x11|91-4
41968|code|BPL             loc_A444|40-213
41970|code|STRB.W          R10, [R7,R5]|7-248-5-160
41974|code|ADDS            R5, #1|1-53
41976|code|SUBS            R3, R4, R6|163-27
41978|code|IT NE|24-191
41980|code|MOVNE           R3, #1|1-35
41982|code|CMP             R5, R8|69-69
41984|code|ITE LE|212-191
41986|code|MOVLE           R3, #0|0-35
41988|code|ANDGT.W         R3, R3, #1|3-240-1-3
41992|code|CBNZ            R3, loc_A45C|67-187
41994|code|ADDS            R4, #1|1-52
41996|code|CMP             R4, R6|180-66
41998|code|BEQ             loc_A452|32-208
42000|code|LDRB.W          R10, [R9,R4]|25-248-4-160
42004|code|CMP.W           R10, #0xA|186-241-10-15
42008|code|BNE             loc_A3D8|222-209
42010|code|ADDS            R0, R7, R5|120-25
42012|code|LDR             R1, =aN; "\\n"|18-73
42014|code|MOVS            R2, #3|3-34
42016|code|ADDS            R5, #2|2-53
42018|code|BLX             memcpy|254-247-148-239
42022|code|B               loc_A3F8|231-231
42024|code|ADDS            R0, R7, R5|120-25
42026|code|LDR             R1, =aT; "\\t"|16-73
42028|code|MOVS            R2, #3|3-34
42030|code|ADDS            R5, #2|2-53
42032|code|BLX             memcpy|254-247-140-239
42036|code|B               loc_A3F8|224-231
42038|code|ADDS            R0, R7, R5|120-25
42040|code|LDR             R1, =aR; "\\r"|13-73
42042|code|MOVS            R2, #3|3-34
42044|code|ADDS            R5, #2|2-53
42046|code|BLX             memcpy|254-247-134-239
42050|code|B               loc_A3F8|217-231
42052|code|ADDS            R0, R7, R5|120-25
42054|code|LDR             R1, =a3o; "\\%.3o"|11-73
42056|code|MOV             R2, R10|82-70
42058|code|ADDS            R5, #4|4-53
42060|code|BLX             sprintf|255-247-142-232
42064|code|B               loc_A3F8|210-231
42066|code|MOVS            R3, #0|0-35
42068|code|MOV             R0, R7|56-70
42070|code|STRB            R3, [R7,R5]|123-85
42072|code|POP.W           {R4-R10,PC}|189-232-240-135
42076|code|LDR             R0, =aJStrsizeILen; "j <= strsize || i == len"|6-72
42078|code|MOVS            R2, #0x91|145-34
42080|code|LDR             R1, =aDebugC; "debug.c"|6-73
42082|code|LDR             R3, =aDbgMemstr; "dbg_memstr"|7-75
42084|code|BLX             __assert_fail|255-247-214-232
42088|data|DCD aN; "\\n"|96-244-0-0
42092|data|DCD aT; "\\t"|100-244-0-0
42096|data|DCD aR; "\\r"|92-244-0-0
42100|data|DCD a3o; "\\%.3o"|104-244-0-0
42104|data|DCD aJStrsizeILen; "j <= strsize || i == len"|112-244-0-0
42108|data|DCD aDebugC; "debug.c"|140-244-0-0
42112|data|DCD aDbgMemstr; "dbg_memstr"|48-244-0-0
42116|code|PUSH.W          {R4-R9,LR}|45-233-240-67
42120|code|SUB.W           SP, SP, #0x410|173-245-130-109
42124|code|LDR             R4, =__stack_chk_guard|40-76
42126|code|SUB             SP, SP, #4|129-176
42128|code|MOV             R6, R0|6-70
42130|code|MOV             R9, R1|137-70
42132|code|MOV             R8, R2|144-70
42134|code|LDR             R5, =dword_18564|39-77
42136|code|LDR             R3, [R4]|35-104
42138|code|STR.W           R3, [SP,#0x430+var_24]|205-248-12-52
42142|code|BLX             __errno_location|255-247-30-232
42146|code|LDR             R3, [R5]|43-104
42148|code|LDR             R7, [R0]|7-104
42150|code|CMP             R3, #0|0-43
42152|code|BEQ             loc_A520|58-208
42154|code|MOV             R3, R8; arg|67-70
42156|code|ADD             R0, SP, #0x430+s; s|3-168
42158|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
42162|code|MOV             R2, R9; format|74-70
42164|code|BLX             vsnprintf|255-247-102-232
42168|code|LDR             R3, =dword_18534|31-75
42170|code|LDR             R3, [R3]|27-104
42172|code|CBNZ            R6, loc_A4E0|134-185
42174|code|CMP             R3, #0|0-43
42176|code|BNE             loc_A510|38-209
42178|code|MOVS            R0, #3; pri|3-32
42180|code|LDR             R1, =(aRegcompFailedS+0x10); fmt|29-73
42182|code|ADD             R2, SP, #0x430+s|3-170
42184|code|BLX             syslog|255-247-74-232
42188|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
42192|code|LDR             R3, [R4]|35-104
42194|code|CMP             R2, R3|154-66
42196|code|BNE             loc_A52C|42-209
42198|code|ADD             SP, SP, #0x14|5-176
42200|code|ADD.W           SP, SP, #0x400|13-245-128-109
42204|code|POP.W           {R4-R9,PC}|189-232-240-131
42208|code|MOV             R0, R7; errnum|56-70
42210|code|CBZ             R3, loc_A4FE|99-177
42212|code|LDR             R3, =stderr|22-75
42214|code|LDR             R5, [R5]|45-104
42216|code|LDR             R6, [R3]|30-104
42218|code|BLX             strerror|254-247-180-239
42222|code|LDR             R1, =aSSS; "%s: %s: %s\n"|21-73
42224|code|MOV             R2, R5|42-70
42226|code|ADD             R3, SP, #0x430+s|3-171
42228|code|STR             R0, [SP,#0x430+var_430]|0-144
42230|code|MOV             R0, R6; stream|48-70
42232|code|BLX             fprintf|254-247-222-239
42236|code|B               loc_A4CC|230-231
42238|code|BLX             strerror|254-247-170-239
42242|code|LDR             R1, =aSS; "%s: %s"|17-73
42244|code|ADD             R2, SP, #0x430+s|3-170
42246|code|MOV             R3, R0|3-70
42248|code|MOVS            R0, #3; pri|3-32
42250|code|BLX             syslog|255-247-42-232
42254|code|B               loc_A4CC|221-231
42256|code|LDR             R3, =stderr|11-75
42258|code|LDR             R2, [R5]|42-104
42260|code|LDR             R1, =(aSSS+4); format|13-73
42262|code|LDR             R0, [R3]; stream|24-104
42264|code|ADD             R3, SP, #0x430+s|3-171
42266|code|BLX             fprintf|254-247-206-239
42270|code|B               loc_A4CC|213-231
42272|code|LDR             R0, =aErrProgVoid0; "err_prog != ((void *)0)"|11-72
42274|code|MOVS            R2, #0x49 ; 'I'; line|73-34
42276|code|LDR             R1, =aErrorC; "error.c"|11-73
42278|code|LDR             R3, =aVerr; "_verr"|12-75
42280|code|BLX             __assert_fail|255-247-116-232
42284|code|BLX             __stack_chk_fail|254-247-44-239
42288|data|DCD __stack_chk_guard|56-133-1-0
42292|data|DCD dword_18564|100-133-1-0
42296|data|DCD dword_18534|52-133-1-0
42300|data|DCD aRegcompFailedS+0x10; "%s"|180-1-1-0
42304|data|DCD stderr|64-133-1-0
42308|data|DCD aSSS; "%s: %s: %s\n"|228-244-0-0
42312|data|DCD aSS; "%s: %s"|84-244-0-0
42316|data|DCD aSSS+4; "%s: %s\n"|232-244-0-0
42320|data|DCD aErrProgVoid0; "err_prog != ((void *)0)"|196-244-0-0
42324|data|DCD aErrorC; "error.c"|220-244-0-0
42328|data|DCD aVerr; "_verr"|188-244-0-0
42332|code|PUSH            {R4,LR}|16-181
42334|code|MOVS            R1, #0x2F ; '/'|47-33
42336|code|MOV             R4, R0|4-70
42338|code|BLX             strrchr|254-247-248-239
42342|code|CBZ             R0, loc_A56A|0-177
42344|code|ADDS            R4, R0, #1|68-28
42346|code|LDR             R3, =dword_18564|1-75
42348|code|STR             R4, [R3]|28-96
42350|code|POP             {R4,PC}|16-189
42352|data|DCD dword_18564|100-133-1-0
42356|code|MOV             R3, #0x18534|72-242-52-83-192-242-1-3
42364|code|MOVS            R2, #0|0-34
42366|code|STR             R2, [R3]|26-96
42368|code|BX              LR|112-71
42370|data|ALIGN 4|0-191
42372|code|PUSH            {R1-R3}|14-180
42374|code|PUSH            {LR}|0-181
42376|code|SUB             SP, SP, #8|130-176
42378|code|ADD             R3, SP, #0x18+varg_r1|3-171
42380|code|LDR.W           R1, [R3],#4|83-248-4-27
42384|code|MOV             R2, R3|26-70
42386|code|STR             R3, [SP,#0x18+var_14]|1-147
42388|code|BL              sub_A484|255-247-118-255
42392|code|BL              sub_E1E4|3-240-36-254
42396|code|MOV             R1, #0xF4F0|79-242-240-65-192-242-0-1
42404|code|MOV             R2, R0|2-70
42406|code|MOVS            R0, #0x10|16-32
42408|code|BL              sub_A2BC|255-247-136-254
42412|code|MOVS            R0, #1; status|1-32
42414|code|BLX             exit|254-247-108-239
42418|data|ALIGN 4|0-191
42420|code|PUSH            {R1-R3}|14-180
42422|code|PUSH            {LR}|0-181
42424|code|SUB             SP, SP, #8|130-176
42426|code|ADD             R2, SP, #0x18+varg_r1|3-170
42428|code|LDR.W           R1, [R2],#4|82-248-4-27
42432|code|STR             R2, [SP,#0x18+var_14]|1-146
42434|code|BL              sub_A484|255-247-95-255
42438|code|ADD             SP, SP, #8|2-176
42440|code|POP.W           {LR}|93-248-4-235
42444|code|ADD             SP, SP, #0xC|3-176
42446|code|BX              LR|112-71
42448|code|MOVW            R1, #0x1B4|64-242-180-17
42452|code|MOVS            R0, #1|1-32
42454|code|PUSH            {R3,LR}|8-181
42456|code|MOVT.W          R1, #1|192-242-1-1
42460|code|BL              sub_A584|255-247-210-255
42464|code|MOVW            R1, #0xF514|79-242-20-81
42468|code|MOVS            R0, #0|0-32
42470|code|PUSH            {R3,LR}|8-181
42472|code|MOVT.W          R1, #0|192-242-0-1
42476|code|BL              sub_A584|255-247-202-255
42480|code|CMP             R1, R3|153-66
42482|code|PUSH.W          {R4-R9}|45-233-240-3
42486|code|BEQ             loc_A6C2|100-208
42488|code|MOV             R7, #0xCCCCCCCD|76-246-205-71-204-246-204-71
42496|code|LDR             R5, [R1]|13-104
42498|code|UMULL.W         R4, R0, R7, R0|167-251-0-64
42502|code|LSRS            R0, R0, #3|192-8
42504|code|BEQ             loc_A6C6|93-208
42506|code|MOVS            R6, #1|1-38
42508|code|MOV             R4, R0|4-70
42510|code|UMULL.W         R8, R4, R7, R4|167-251-4-132
42514|code|ADDS            R6, #1|1-54
42516|code|LSRS            R4, R4, #3|228-8
42518|code|BNE             loc_A60E|250-209
42520|code|CMP             R5, R6|181-66
42522|code|LDR             R4, [R3]|28-104
42524|code|ITE GT|204-191
42526|code|RSBGT.W         R6, R6, R5|198-235-5-6
42530|code|MOVLE           R6, #0|0-38
42532|code|MOVS            R7, #1|1-39
42534|code|CBZ             R0, loc_A63C|72-177
42536|code|MOVW            R12, #0xCCCD|76-246-205-76
42540|code|MOVS            R7, #1|1-39
42542|code|MOVT.W          R12, #0xCCCC|204-246-204-76
42546|code|UMULL.W         R9, R0, R12, R0|172-251-0-144
42550|code|ADDS            R7, #1|1-55
42552|code|LSRS            R0, R0, #3|192-8
42554|code|BNE             loc_A632|250-209
42556|code|MOV             R8, #0xCCCCCCCD|76-246-205-72-204-246-204-72
42564|code|CMP             R4, R7|188-66
42566|code|UMULL.W         R0, R2, R8, R2|168-251-2-2
42570|code|ITE GT|204-191
42572|code|RSBGT.W         R12, R7, R4|199-235-4-12
42576|code|MOVLE.W         R12, #0|79-240-0-12
42580|code|LSRS            R2, R2, #3|210-8
42582|code|BEQ             loc_A6CA|56-208
42584|code|MOVS            R7, #1|1-39
42586|code|MOV             R0, R2|16-70
42588|code|UMULL.W         R9, R0, R8, R0|168-251-0-144
42592|code|ADDS            R7, #1|1-55
42594|code|LSRS            R0, R0, #3|192-8
42596|code|BNE             loc_A65C|250-209
42598|code|CMP             R4, R7|188-66
42600|code|ITE GT|204-191
42602|code|RSBGT.W         R7, R7, R4|199-235-4-7
42606|code|MOVLE           R7, #0|0-39
42608|code|MOVS            R0, #1|1-32
42610|code|CBZ             R2, loc_A688|74-177
42612|code|MOVW            R8, #0xCCCD|76-246-205-72
42616|code|MOVS            R0, #1|1-32
42618|code|MOVT.W          R8, #0xCCCC|204-246-204-72
42622|code|UMULL.W         R9, R2, R8, R2|168-251-2-146
42626|code|ADDS            R0, #1|1-48
42628|code|LSRS            R2, R2, #3|210-8
42630|code|BNE             loc_A67E|250-209
42632|code|CMP             R5, R0|133-66
42634|code|ITE GT|204-191
42636|code|RSBGT.W         R2, R0, R5|192-235-5-2
42640|code|MOVLE           R2, #0|0-34
42642|code|SUBS.W          R6, R6, R12|182-235-12-6
42646|code|IT NE|24-191
42648|code|MOVNE           R6, #1|1-38
42650|code|CMP             R7, R2|151-66
42652|code|ITE EQ|12-191
42654|code|MOVEQ           R0, #0|0-32
42656|code|ANDNE.W         R0, R6, #1|6-240-1-0
42660|code|CBNZ            R0, loc_A6B2|40-185
42662|code|CBZ             R6, loc_A6B6|54-177
42664|code|CMP             R7, R2|151-66
42666|code|BEQ             loc_A6BC|7-208
42668|code|POP.W           {R4-R9}|189-232-240-3
42672|code|BX              LR|112-71
42674|code|MOVS            R0, #0|0-32
42676|code|B               loc_A6AC|250-231
42678|code|STR             R4, [R1]|12-96
42680|code|MOVS            R0, #1|1-32
42682|code|B               loc_A6AC|247-231
42684|code|STR             R5, [R3]|29-96
42686|code|MOVS            R0, #1|1-32
42688|code|B               loc_A6AC|244-231
42690|code|MOVS            R0, #1|1-32
42692|code|B               loc_A6AC|242-231
42694|code|MOVS            R6, #1|1-38
42696|code|B               loc_A618|166-231
42698|code|MOVS            R7, #1|1-39
42700|code|B               loc_A666|203-231
42702|data|ALIGN 0x10|0-191
42704|code|PUSH            {R4,LR}|16-181
42706|code|MOV             R4, R0|4-70
42708|code|CBZ             R0, locret_A6F4|112-177
42710|code|LDR             R0, [R0]; ptr|0-104
42712|code|MOVS            R3, #0|0-35
42714|code|STR             R3, [R4,#0xC]|227-96
42716|code|CBZ             R0, loc_A6E2|8-177
42718|code|BLX             free|254-247-36-238
42722|code|LDR             R0, [R4,#4]; ptr|96-104
42724|code|CBZ             R0, loc_A6EA|8-177
42726|code|BLX             free|254-247-32-238
42730|code|MOV             R0, R4; ptr|32-70
42732|code|POP.W           {R4,LR}|189-232-16-64
42736|code|B.W             j_free|254-247-24-190
42740|code|POP             {R4,PC}|16-189
42742|data|ALIGN 4|0-191
42744|code|PUSH            {R4,LR}|16-181
42746|code|MOV             R4, R0|4-70
42748|code|CBZ             R0, locret_A710|64-177
42750|code|LDR             R0, [R0]; ptr|0-104
42752|code|CBZ             R0, loc_A706|8-177
42754|code|BLX             free|254-247-18-238
42758|code|MOV             R0, R4; ptr|32-70
42760|code|POP.W           {R4,LR}|189-232-16-64
42764|code|B.W             j_free|254-247-10-190
42768|code|POP             {R4,PC}|16-189
42770|data|ALIGN 4|0-191
42772|code|PUSH.W          {R4-R8,LR}|45-233-240-65
42776|code|SUB             SP, SP, #8|130-176
42778|code|MOVS            R3, #0|0-35
42780|code|MOV             R5, R0|5-70
42782|code|STR             R3, [SP,#0x20+endptr]|1-147
42784|code|CMP             R0, #0|0-40
42786|code|BEQ.W           loc_A872|0-240-166-128
42790|code|MOVS            R0, #0x10; size|16-32
42792|code|BLX             malloc|254-247-136-238
42796|code|MOV             R6, R0|6-70
42798|code|CMP             R0, #0|0-40
42800|code|BEQ             loc_A7F8|98-208
42802|code|MOV             R0, R5; s|40-70
42804|code|BLX             strlen|254-247-180-238
42808|code|SUBS            R4, R0, #1|68-30
42810|code|BMI             loc_A752|10-212
42812|code|BLX             __ctype_b_loc|254-247-158-238
42816|code|LDR             R2, [R0]|2-104
42818|code|B               loc_A748|1-224
42820|code|SUBS            R4, #1|1-60
42822|code|BMI             loc_A752|4-212
42824|code|LDRB            R3, [R5,R4]|43-93
42826|code|LDRH.W          R3, [R2,R3,LSL#1]|50-248-19-48
42830|code|LSLS            R3, R3, #0x14|27-5
42832|code|BMI             loc_A744|248-212
42834|code|MOV             R0, R5|40-70
42836|code|BLX             __strdup|254-247-212-238
42840|code|MOV             R8, R0|128-70
42842|code|STR             R0, [R6]|48-96
42844|code|CMP             R0, #0|0-40
42846|code|BEQ             loc_A812|88-208
42848|code|MOVS            R3, #0|0-35
42850|code|MOV             R0, R5; s|40-70
42852|code|STR             R3, [R6,#8]|179-96
42854|code|STR             R3, [R6,#4]|115-96
42856|code|STR             R3, [R6,#0xC]|243-96
42858|code|BLX             strlen|254-247-154-238
42862|code|SUBS            R0, #1|1-56
42864|code|CMP             R4, R0|132-66
42866|code|BEQ             loc_A7B0|29-208
42868|code|ADDS            R7, R4, #1|103-28
42870|code|MOVS            R2, #0xA; base|10-34
42872|code|ADD.W           R0, R8, R7; nptr|8-235-7-0
42876|code|ADD             R1, SP, #0x20+endptr; endptr|1-169
42878|code|STR             R0, [R6,#0xC]|240-96
42880|code|BLX             strtoul|254-247-136-238
42884|code|LDR             R3, [SP,#0x20+endptr]|1-155
42886|code|STR             R0, [R6,#8]|176-96
42888|code|LDRB.W          R8, [R3]|147-248-0-128
42892|code|CMP.W           R8, #0|184-241-0-15
42896|code|BNE             loc_A798|2-209
42898|code|CMP.W           R0, #0x2000000|176-241-0-127
42902|code|BLS             loc_A7DC|33-217
42904|code|MOV             R0, R5|40-70
42906|code|BLX             __strdup|254-247-178-238
42910|code|STR             R0, [R6,#4]|112-96
42912|code|CMP             R0, #0|0-40
42914|code|BEQ             loc_A832|70-208
42916|code|MOVS            R3, #0|0-35
42918|code|STR             R3, [R6,#0xC]|243-96
42920|code|MOV             R0, R6|48-70
42922|code|ADD             SP, SP, #8|2-176
42924|code|POP.W           {R4-R8,PC}|189-232-240-129
42928|code|MOV             R0, R5|40-70
42930|code|BLX             __strdup|254-247-166-238
42934|code|STR             R0, [R6,#4]|112-96
42936|code|CMP             R0, #0|0-40
42938|code|BNE             loc_A7A8|245-209
42940|code|MOV             R0, R6; ptr|48-70
42942|code|BL              sub_A6D0|255-247-135-255
42946|code|BLX             __errno_location|254-247-140-238
42950|code|MOVS            R2, #0xC|12-34
42952|code|MOV.W           R1, #0x1FE|79-244-255-113
42956|code|MOV             R3, R0|3-70
42958|code|LDR             R0, =unk_F8A8|44-72
42960|code|STR             R2, [R3]|26-96
42962|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|44-74
42964|code|BL              sub_A5E0|255-247-4-255
42968|code|MOV             R6, R0|6-70
42970|code|B               loc_A7A8|229-231
42972|code|ADDS            R0, R4, #2; size|160-28
42974|code|BLX             malloc|254-247-46-238
42978|code|MOV             R4, R0|4-70
42980|code|STR             R0, [R6,#4]|112-96
42982|code|CMP             R0, #0|0-40
42984|code|BEQ             loc_A852|51-208
42986|code|MOV             R1, R5; src|41-70
42988|code|MOV             R2, R7; n|58-70
42990|code|BLX             memcpy|254-247-174-237
42994|code|STRB.W          R8, [R4,R7]|4-248-7-128
42998|code|B               loc_A7A8|215-231
43000|code|BLX             __errno_location|254-247-112-238
43004|code|MOVS            R2, #0xC|12-34
43006|code|MOV.W           R1, #0x1EE|79-244-247-113
43010|code|MOV             R3, R0|3-70
43012|code|LDR             R0, =unk_F8A8|30-72
43014|code|STR             R2, [R3]|26-96
43016|code|LDR             R2, =aHostnameCreate; "hostname create"|31-74
43018|code|BL              sub_A5E0|255-247-233-254
43022|code|MOV             R6, R0|6-70
43024|code|B               loc_A7A8|202-231
43026|code|MOV             R0, R6; ptr|48-70
43028|code|BLX             free|254-247-136-237
43032|code|BLX             __errno_location|254-247-96-238
43036|code|MOVS            R2, #0xC|12-34
43038|code|MOV.W           R1, #0x1F4|79-244-250-113
43042|code|MOV             R3, R0|3-70
43044|code|LDR             R0, =unk_F8A8|22-72
43046|code|STR             R2, [R3]|26-96
43048|code|LDR             R2, =aHostnameCreate; "hostname create"|23-74
43050|code|BL              sub_A5E0|255-247-217-254
43054|code|MOV             R6, R0|6-70
43056|code|B               loc_A7A8|186-231
43058|code|MOV             R0, R6; ptr|48-70
43060|code|BL              sub_A6D0|255-247-76-255
43064|code|BLX             __errno_location|254-247-80-238
43068|code|MOVS            R2, #0xC|12-34
43070|code|MOV.W           R1, #0x210|79-244-4-113
43074|code|MOV             R3, R0|3-70
43076|code|LDR             R0, =unk_F8A8|14-72
43078|code|STR             R2, [R3]|26-96
43080|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|14-74
43082|code|BL              sub_A5E0|255-247-201-254
43086|code|MOV             R6, R0|6-70
43088|code|B               loc_A7A8|170-231
43090|code|MOV             R0, R6; ptr|48-70
43092|code|BL              sub_A6D0|255-247-60-255
43096|code|BLX             __errno_location|254-247-64-238
43100|code|MOVS            R2, #0xC|12-34
43102|code|MOVW            R1, #0x209|64-242-9-33
43106|code|MOV             R3, R0|3-70
43108|code|LDR             R0, =unk_F8A8|6-72
43110|code|STR             R2, [R3]|26-96
43112|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|6-74
43114|code|BL              sub_A5E0|255-247-185-254
43118|code|MOV             R6, R0|6-70
43120|code|B               loc_A7A8|154-231
43122|code|LDR             R0, =aHostnameVoid0; "hostname != ((void *)0)"|6-72
43124|code|MOVW            R2, #0x1EB; line|64-242-235-18
43128|code|LDR             R1, =unk_F8A8; file|1-73
43130|code|LDR             R3, =aHostnameCreate_0; "hostname_create"|5-75
43132|code|BLX             __assert_fail|254-247-202-238
43136|data|DCD unk_F8A8|168-248-0-0
43140|data|DCD aHostnamePrefix; "hostname prefix create"|196-248-0-0
43144|data|DCD aHostnameCreate; "hostname create"|180-248-0-0
43148|data|DCD aHostnameVoid0; "hostname != ((void *)0)"|144-248-0-0
43152|data|DCD aHostnameCreate_0; "hostname_create"|40-245-0-0
43156|code|PUSH            {R4-R7,LR}|240-181
43158|code|MOV             R4, R0|4-70
43160|code|LDRB            R7, [R0,#0x10]|7-124
43162|code|SUB             SP, SP, #0xC|131-176
43164|code|MOV             R5, R1|13-70
43166|code|LDR             R6, [R0]|6-104
43168|code|ANDS.W          R7, R7, #1|23-240-1-7
43172|code|BEQ             loc_A8B2|5-208
43174|code|LDR             R0, [R1]; s1|8-104
43176|code|MOV             R1, R6; s2|49-70
43178|code|BLX             strcmp|254-247-18-237
43182|code|CMP             R0, #0|0-40
43184|code|BEQ             loc_A8EE|29-208
43186|code|LDR             R1, [R5,#4]; s2|105-104
43188|code|MOV             R0, R6; s1|48-70
43190|code|BLX             strcmp|254-247-12-237
43194|code|CBNZ            R0, loc_A8E8|168-185
43196|code|LDR             R3, [R5,#0xC]|235-104
43198|code|CBZ             R3, loc_A8F2|195-177
43200|code|LDR             R5, [R5,#8]|173-104
43202|code|LDR             R2, [R4,#8]|162-104
43204|code|CMP             R5, R2|149-66
43206|code|BHI             loc_A8EA|16-216
43208|code|LDR             R6, [R4,#4]|102-104
43210|code|CMP             R5, R6|181-66
43212|code|BCC             loc_A8EA|13-211
43214|code|MOV             R0, R3; s|24-70
43216|code|BLX             strlen|254-247-230-237
43220|code|ADD             R3, SP, #0x20+var_18|2-171
43222|code|ADD.W           R1, R4, #0xC|4-241-12-1
43226|code|MOV             R2, R5|42-70
43228|code|STR.W           R0, [R3,#-4]!|67-248-4-13
43232|code|MOV             R0, R6|48-70
43234|code|BL              loc_A5F0|255-247-133-254
43238|code|B               loc_A8EA|0-224
43240|code|MOVS            R0, #0|0-32
43242|code|ADD             SP, SP, #0xC|3-176
43244|code|POP             {R4-R7,PC}|240-189
43246|code|MOVS            R0, #1|1-32
43248|code|B               loc_A8EA|251-231
43250|code|MOV             R0, R7|56-70
43252|code|B               loc_A8EA|249-231
43254|data|ALIGN 4|0-191
43256|code|PUSH            {R3-R5,LR}|56-181
43258|code|MOV             R4, R0|4-70
43260|code|MOV             R5, R1|13-70
43262|code|CBZ             R0, loc_A922|128-177
43264|code|CBZ             R1, loc_A91C|97-177
43266|code|LDR             R0, [R0]; s1|0-104
43268|code|LDR             R1, [R1]; s2|9-104
43270|code|BLX             strcmp|254-247-228-236
43274|code|CBNZ            R0, locret_A920|72-185
43276|code|LDRB            R0, [R5,#0x10]|40-124
43278|code|LDRB            R3, [R4,#0x10]|35-124
43280|code|AND.W           R0, R0, #1|0-240-1-0
43284|code|AND.W           R3, R3, #1|3-240-1-3
43288|code|SUBS            R0, R0, R3|192-26
43290|code|POP             {R3-R5,PC}|56-189
43292|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
43296|code|POP             {R3-R5,PC}|56-189
43298|code|MOVS            R0, #1|1-32
43300|code|POP             {R3-R5,PC}|56-189
43302|data|ALIGN 4|0-191
43304|code|PUSH            {R2,R3}|12-180
43306|code|PUSH            {R4-R7,LR}|240-181
43308|code|SUB.W           SP, SP, #0x400|173-245-128-109
43312|code|SUB             SP, SP, #0xC|131-176
43314|code|LDR             R4, =__stack_chk_guard|21-76
43316|code|ADD.W           R7, SP, #0x428+varg_r2|13-245-132-103
43320|code|MOV             R6, R0|6-70
43322|code|MOV             R5, R1|13-70
43324|code|ADD             R0, SP, #0x428+s; s|1-168
43326|code|LDR.W           R2, [R7],#4; format|87-248-4-43
43330|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
43334|code|LDR.W           LR, [R4]|212-248-0-224
43338|code|MOV             R3, R7; arg|59-70
43340|code|STR             R7, [SP,#0x428+var_428]|0-151
43342|code|STR.W           LR, [SP,#0x428+var_24]|205-248-4-228
43346|code|BLX             vsnprintf|254-247-24-238
43350|code|CMP.W           R0, #0x400|176-245-128-111
43354|code|BLS             loc_A962|2-217
43356|code|MOVS            R3, #0|0-35
43358|code|STRB.W          R3, [SP,#0x428+var_25]|141-248-3-52
43362|code|ADD             R2, SP, #0x428+s|1-170
43364|code|MOV             R0, R6|48-70
43366|code|MOV             R1, R5|41-70
43368|code|BL              sub_A5D0|255-247-50-254
43372|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
43376|code|LDR             R3, [R4]|35-104
43378|code|CMP             R2, R3|154-66
43380|code|BNE             loc_A984|6-209
43382|code|ADD             SP, SP, #0xC|3-176
43384|code|ADD.W           SP, SP, #0x400|13-245-128-109
43388|code|POP.W           {R4-R7,LR}|189-232-240-64
43392|code|ADD             SP, SP, #8|2-176
43394|code|BX              LR|112-71
43396|code|BLX             __stack_chk_fail|254-247-0-237
43400|data|DCD __stack_chk_guard|56-133-1-0
43404|code|PUSH            {R3,LR}|8-181
43406|code|CBZ             R0, loc_A9A4|72-177
43408|code|LDRB            R3, [R0,#0x10]|3-124
43410|code|LSLS            R2, R3, #0x1F|218-7
43412|code|BMI             loc_A9A0|4-212
43414|code|LDR             R2, [R0,#8]|130-104
43416|code|LDR             R3, [R0,#4]|67-104
43418|code|ADDS            R0, R2, #1|80-28
43420|code|SUBS            R0, R0, R3|192-26
43422|code|POP             {R3,PC}|8-189
43424|code|MOVS            R0, #1|1-32
43426|code|POP             {R3,PC}|8-189
43428|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
43430|code|MOVW            R2, #0x281; line|64-242-129-34
43434|code|LDR             R1, =unk_F8A8; file|3-73
43436|code|LDR             R3, =aHostrangeCount; "hostrange_count"|3-75
43438|code|BLX             __assert_fail|254-247-50-238
43442|data|ALIGN 4|0-191
43444|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
43448|data|DCD unk_F8A8|168-248-0-0
43452|data|DCD aHostrangeCount; "hostrange_count"|56-245-0-0
43456|code|PUSH            {R4,LR}|16-181
43458|code|CBZ             R0, loc_A9DC|88-177
43460|code|CBZ             R1, loc_A9EA|137-177
43462|code|ADD.W           R4, R0, #0xC|0-241-12-4
43466|code|LDR             R2, [R1,#4]|74-104
43468|code|ADD.W           R3, R1, #0xC|1-241-12-3
43472|code|LDR             R0, [R0,#4]|64-104
43474|code|MOV             R1, R4|33-70
43476|code|POP.W           {R4,LR}|189-232-16-64
43480|code|B.W             loc_A5F0|255-247-10-190
43484|code|LDR             R0, =aH0Void0; "h0 != ((void *)0)"|6-72
43486|code|MOVW            R2, #0x2FF; line|64-242-255-34
43490|code|LDR             R1, =unk_F8A8; file|6-73
43492|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|6-75
43494|code|BLX             __assert_fail|254-247-22-238
43498|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
43500|code|MOV.W           R2, #0x300; line|79-244-64-114
43504|code|LDR             R1, =unk_F8A8; file|2-73
43506|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|3-75
43508|code|BLX             __assert_fail|254-247-14-238
43512|data|DCD aH0Void0; "h0 != ((void *)0)"|240-248-0-0
43516|data|DCD unk_F8A8|168-248-0-0
43520|data|DCD aHostrangeWidth; "hostrange_width_combine"|72-245-0-0
43524|data|DCD aH1Void0; "h1 != ((void *)0)"|4-249-0-0
43528|code|PUSH            {R3,LR}|8-181
43530|code|CBZ             R0, loc_AA24|88-177
43532|code|LDR             R3, [R0,#8]|131-104
43534|code|LDR             R2, [R0,#4]|66-104
43536|code|CMP             R3, R2|147-66
43538|code|BCC             loc_AA20|5-211
43540|code|SUB.W           R1, R3, #0xFFFFFFFF|163-241-255-49
43544|code|NEGS            R0, R1|72-66
43546|code|ADC.W           R0, R0, R1|64-235-1-0
43550|code|POP             {R3,PC}|8-189
43552|code|MOVS            R0, #1|1-32
43554|code|POP             {R3,PC}|8-189
43556|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
43558|code|MOVW            R2, #0x30A; line|64-242-10-50
43562|code|LDR             R1, =unk_F8A8; file|3-73
43564|code|LDR             R3, =aHostrangeEmpty; "hostrange_empty"|3-75
43566|code|BLX             __assert_fail|254-247-242-237
43570|data|ALIGN 4|0-191
43572|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
43576|data|DCD unk_F8A8|168-248-0-0
43580|data|DCD aHostrangeEmpty; "hostrange_empty"|96-245-0-0
43584|code|PUSH            {R3,LR}|8-181
43586|code|BLX             __errno_location|254-247-76-237
43590|code|MOV             R3, #0xF8A8|79-246-168-3-192-242-0-3
43598|code|MOVS            R1, #0xC|12-33
43600|code|MOV             R2, #0xF918|79-246-24-18-192-242-0-2
43608|code|STR             R1, [R0]|1-96
43610|code|MOV             R0, R3|24-70
43612|code|MOVW            R1, #0x23E|64-242-62-33
43616|code|POP.W           {R3,LR}|189-232-8-64
43620|code|B.W             sub_A5E0|255-247-188-189
43624|code|PUSH            {R4,LR}|16-181
43626|code|MOVS            R0, #0x18; size|24-32
43628|code|BLX             malloc|254-247-230-236
43632|code|MOV             R4, R0|4-70
43634|code|CBZ             R0, loc_AAAA|208-177
43636|code|MOVS            R0, #0x40 ; '@'; size|64-32
43638|code|MOVW            R3, #0xDEAD|77-246-173-99
43642|code|STR             R3, [R4]|35-96
43644|code|BLX             malloc|254-247-222-236
43648|code|STR             R0, [R4,#0x10]|32-97
43650|code|CBZ             R0, loc_AAA4|120-177
43652|code|MOVS            R3, #0|0-35
43654|code|MOV             R1, R3|25-70
43656|code|B               loc_AA8C|0-224
43658|code|LDR             R0, [R4,#0x10]|32-105
43660|code|STR             R1, [R0,R3]|193-80
43662|code|ADDS            R3, #4|4-51
43664|code|MOVS            R2, #0|0-34
43666|code|CMP             R3, #0x40 ; '@'|64-43
43668|code|BNE             loc_AA8A|249-209
43670|code|MOVS            R3, #0x10|16-35
43672|code|STR             R2, [R4,#8]|162-96
43674|code|STR             R3, [R4,#4]|99-96
43676|code|MOV             R0, R4|32-70
43678|code|STR             R2, [R4,#0xC]|226-96
43680|code|STR             R2, [R4,#0x14]|98-97
43682|code|POP             {R4,PC}|16-189
43684|code|MOV             R0, R4; ptr|32-70
43686|code|BLX             free|254-247-64-236
43690|code|BLX             __errno_location|254-247-24-237
43694|code|MOVS            R3, #0xC|12-35
43696|code|MOVW            R1, #0x402|64-242-2-65
43700|code|LDR             R2, =aHostlistCreate; "hostlist_create"|3-74
43702|code|STR             R3, [R0]|3-96
43704|code|LDR             R0, =unk_F8A8|3-72
43706|code|POP.W           {R4,LR}|189-232-16-64
43710|code|B.W             sub_A5E0|255-247-143-189
43714|data|ALIGN 4|0-191
43716|data|DCD aHostlistCreate; "hostlist_create"|44-249-0-0
43720|data|DCD unk_F8A8|168-248-0-0
43724|code|PUSH            {R3-R5,LR}|56-181
43726|code|MOV             R5, R0|5-70
43728|code|CMP             R0, #0|0-40
43730|code|BEQ             loc_AB28|41-208
43732|code|MOVS            R0, #0x14; size|20-32
43734|code|BLX             malloc|254-247-178-236
43738|code|MOV             R4, R0|4-70
43740|code|CMP             R0, #0|0-40
43742|code|BEQ             loc_AB1C|29-208
43744|code|MOV             R0, R5|40-70
43746|code|BLX             __strdup|254-247-14-237
43750|code|STR             R0, [R4]|32-96
43752|code|CBZ             R0, loc_AAFE|72-177
43754|code|LDRB            R2, [R4,#0x10]|34-124
43756|code|MOVS            R3, #0|0-35
43758|code|MOV             R0, R4|32-70
43760|code|STR             R3, [R4,#4]|99-96
43762|code|ORR.W           R2, R2, #1|66-240-1-2
43766|code|STR             R3, [R4,#8]|163-96
43768|code|STRB            R2, [R4,#0x10]|34-116
43770|code|STR             R3, [R4,#0xC]|227-96
43772|code|POP             {R3-R5,PC}|56-189
43774|code|MOV             R0, R4; ptr|32-70
43776|code|BLX             free|254-247-18-236
43780|code|BLX             __errno_location|254-247-234-236
43784|code|MOVS            R3, #0xC|12-35
43786|code|MOVW            R1, #0x25B|64-242-91-33
43790|code|LDR             R2, =aHostrangeCreat; "hostrange create single"|10-74
43792|code|STR             R3, [R0]|3-96
43794|code|LDR             R0, =unk_F8A8|10-72
43796|code|POP.W           {R3-R5,LR}|189-232-56-64
43800|code|B.W             sub_A5E0|255-247-98-189
43804|code|BL              sub_AA40|255-247-144-255
43808|code|MOV             R4, R0|4-70
43810|code|CMP             R0, #0|0-40
43812|code|BEQ             loc_AB04|238-208
43814|code|B               loc_AAE0|219-231
43816|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
43818|code|MOVW            R2, #0x249; line|64-242-73-34
43822|code|LDR             R1, =unk_F8A8; file|3-73
43824|code|LDR             R3, =aHostrangeCreat_0; "hostrange_create_single"|4-75
43826|code|BLX             __assert_fail|254-247-112-237
43830|data|ALIGN 4|0-191
43832|data|DCD aHostrangeCreat; "hostrange create single"|84-249-0-0
43836|data|DCD unk_F8A8|168-248-0-0
43840|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|60-249-0-0
43844|data|DCD aHostrangeCreat_0; "hostrange_create_single"|112-245-0-0
43848|code|PUSH.W          {R4-R8,LR}|45-233-240-65
43852|code|MOV             R4, R0|4-70
43854|code|MOV             R5, R1|13-70
43856|code|MOV             R6, R2|22-70
43858|code|MOV             R8, R3|152-70
43860|code|CMP             R0, #0|0-40
43862|code|BEQ             loc_ABAE|42-208
43864|code|MOVS            R0, #0x14; size|20-32
43866|code|BLX             malloc|254-247-112-236
43870|code|MOV             R7, R0|7-70
43872|code|CMP             R0, #0|0-40
43874|code|BEQ             loc_ABA2|30-208
43876|code|MOV             R0, R4|32-70
43878|code|BLX             __strdup|254-247-204-236
43882|code|STR             R0, [R7]|56-96
43884|code|CBZ             R0, loc_AB84|80-177
43886|code|LDRB            R3, [R7,#0x10]|59-124
43888|code|MOV             R0, R7|56-70
43890|code|STR             R5, [R7,#4]|125-96
43892|code|BFC.W           R3, #0, #1|111-243-0-3
43896|code|STR             R6, [R7,#8]|190-96
43898|code|STR.W           R8, [R7,#0xC]|199-248-12-128
43902|code|STRB            R3, [R7,#0x10]|59-116
43904|code|POP.W           {R4-R8,PC}|189-232-240-129
43908|code|MOV             R0, R7; ptr|56-70
43910|code|BLX             free|254-247-208-235
43914|code|BLX             __errno_location|254-247-168-236
43918|code|MOVS            R3, #0xC|12-35
43920|code|MOVW            R1, #0x279|64-242-121-33
43924|code|LDR             R2, =aHostrangeCreat_1; "hostrange create"|9-74
43926|code|STR             R3, [R0]|3-96
43928|code|LDR             R0, =unk_F8A8|9-72
43930|code|POP.W           {R4-R8,LR}|189-232-240-65
43934|code|B.W             sub_A5E0|255-247-31-189
43938|code|BL              sub_AA40|255-247-77-255
43942|code|MOV             R7, R0|7-70
43944|code|CMP             R0, #0|0-40
43946|code|BEQ             loc_AB8A|238-208
43948|code|B               loc_AB64|218-231
43950|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
43952|code|MOVW            R2, #0x266; line|64-242-102-34
43956|code|LDR             R1, =unk_F8A8; file|2-73
43958|code|LDR             R3, =aHostrangeCreat_2; "hostrange_create"|4-75
43960|code|BLX             __assert_fail|254-247-44-237
43964|data|DCD aHostrangeCreat_1; "hostrange create"|24-249-0-0
43968|data|DCD unk_F8A8|168-248-0-0
43972|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|60-249-0-0
43976|data|DCD aHostrangeCreat_2; "hostrange_create"|136-245-0-0
43980|code|PUSH            {R4,LR}|16-181
43982|code|CBZ             R0, loc_ABEA|96-177
43984|code|LDRB            R3, [R0,#0x10]|3-124
43986|code|LSLS            R3, R3, #0x1F|219-7
43988|code|BMI             loc_ABE0|4-212
43990|code|LDM             R0, {R0-R3}|15-200
43992|code|POP.W           {R4,LR}|189-232-16-64
43996|code|B.W             sub_AB48|255-247-180-191
44000|code|LDR             R0, [R0]|0-104
44002|code|POP.W           {R4,LR}|189-232-16-64
44006|code|B.W             sub_AACC|255-247-113-191
44010|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
44012|code|MOV.W           R2, #0x28C; line|79-244-35-114
44016|code|LDR             R1, =unk_F8A8; file|2-73
44018|code|LDR             R3, =aHostrangeCopy; "hostrange_copy"|3-75
44020|code|BLX             __assert_fail|254-247-14-237
44024|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
44028|data|DCD unk_F8A8|168-248-0-0
44032|data|DCD aHostrangeCopy; "hostrange_copy"|156-245-0-0
44036|code|PUSH            {R3-R5,LR}|56-181
44038|code|MOV             R4, R0|4-70
44040|code|MOV             R5, R1|13-70
44042|code|CMP             R0, #0|0-40
44044|code|BEQ             loc_AC68|44-208
44046|code|LDR             R3, [R0,#4]|67-104
44048|code|CMP             R3, R1|139-66
44050|code|BHI             loc_AC5A|34-216
44052|code|LDR             R2, [R0,#8]|130-104
44054|code|CMP             R1, R2|145-66
44056|code|BHI             loc_AC5A|31-216
44058|code|CMP             R3, R1|139-66
44060|code|BEQ             loc_AC3A|13-208
44062|code|CMP             R1, R2|145-66
44064|code|BEQ             loc_AC32|7-208
44066|code|BL              sub_ABCC|255-247-211-255
44070|code|CBZ             R0, loc_AC42|96-177
44072|code|SUBS            R3, R5, #1|107-30
44074|code|ADDS            R5, #1|1-53
44076|code|STR             R3, [R4,#8]|163-96
44078|code|STR             R5, [R0,#4]|69-96
44080|code|POP             {R3-R5,PC}|56-189
44082|code|SUBS            R5, R1, #1|77-30
44084|code|MOVS            R0, #0|0-32
44086|code|STR             R5, [R4,#8]|165-96
44088|code|POP             {R3-R5,PC}|56-189
44090|code|ADDS            R3, #1|1-51
44092|code|MOVS            R0, #0|0-32
44094|code|STR             R3, [R4,#4]|99-96
44096|code|POP             {R3-R5,PC}|56-189
44098|code|BLX             __errno_location|254-247-76-236
44102|code|MOVS            R3, #0xC|12-35
44104|code|MOV.W           R1, #0x2B4|79-244-45-113
44108|code|LDR             R2, =aHostrangeCopy_0; "hostrange copy"|10-74
44110|code|STR             R3, [R0]|3-96
44112|code|LDR             R0, =unk_F8A8|10-72
44114|code|POP.W           {R3-R5,LR}|189-232-56-64
44118|code|B.W             sub_A5E0|255-247-195-188
44122|code|LDR             R0, =aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|9-72
44124|code|MOV.W           R2, #0x2AC; line|79-244-43-114
44128|code|LDR             R1, =unk_F8A8; file|6-73
44130|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|8-75
44132|code|BLX             __assert_fail|254-247-214-236
44136|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|7-72
44138|code|MOVW            R2, #0x2AB; line|64-242-171-34
44142|code|LDR             R1, =unk_F8A8; file|3-73
44144|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|4-75
44146|code|BLX             __assert_fail|254-247-208-236
44150|data|ALIGN 4|0-191
44152|data|DCD aHostrangeCopy_0; "hostrange copy"|136-249-0-0
44156|data|DCD unk_F8A8|168-248-0-0
44160|data|DCD aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|108-249-0-0
44164|data|DCD aHostrangeDelet; "hostrange_delete_host"|172-245-0-0
44168|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
44172|code|PUSH            {R3-R5,LR}|56-181
44174|code|MOV             R4, R0|4-70
44176|code|MOV             R5, R1|13-70
44178|code|CBZ             R0, loc_ACB8|136-177
44180|code|CBZ             R1, loc_ACC6|185-177
44182|code|BL              sub_A8F8|255-247-47-254
44186|code|CBZ             R0, loc_AC9E|0-177
44188|code|POP             {R3-R5,PC}|56-189
44190|code|MOV             R0, R4|32-70
44192|code|MOV             R1, R5|41-70
44194|code|BL              sub_A9C0|255-247-141-254
44198|code|CBZ             R0, loc_ACB0|24-177
44200|code|LDR             R0, [R4,#4]|96-104
44202|code|LDR             R3, [R5,#4]|107-104
44204|code|SUBS            R0, R0, R3|192-26
44206|code|POP             {R3-R5,PC}|56-189
44208|code|LDR             R0, [R4,#0xC]|224-104
44210|code|LDR             R3, [R5,#0xC]|235-104
44212|code|SUBS            R0, R0, R3|192-26
44214|code|POP             {R3-R5,PC}|56-189
44216|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
44218|code|MOVW            R2, #0x2C7; line|64-242-199-34
44222|code|LDR             R1, =unk_F8A8; file|6-73
44224|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|6-75
44226|code|BLX             __assert_fail|254-247-168-236
44230|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|6-72
44232|code|MOV.W           R2, #0x2C8; line|79-244-50-114
44236|code|LDR             R1, =unk_F8A8; file|2-73
44238|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|3-75
44240|code|BLX             __assert_fail|254-247-160-236
44244|data|DCD aH1Void0; "h1 != ((void *)0)"|4-249-0-0
44248|data|DCD unk_F8A8|168-248-0-0
44252|data|DCD aHostrangeCmp; "hostrange_cmp"|196-245-0-0
44256|data|DCD aH2Void0; "h2 != ((void *)0)"|152-249-0-0
44260|code|LDR             R1, [R1]|9-104
44262|code|LDR             R0, [R0]|0-104
44264|code|B.W             sub_AC8C|255-247-208-191
44268|code|PUSH            {R3-R5,LR}|56-181
44270|code|MOV             R4, R0|4-70
44272|code|MOV             R5, R1|13-70
44274|code|CMP             R0, #0|0-40
44276|code|BEQ             loc_AD72|61-208
44278|code|CMP             R1, #0|0-41
44280|code|BEQ             loc_AD64|52-208
44282|code|BL              sub_AC8C|255-247-199-255
44286|code|CMP             R0, #0|0-40
44288|code|BGT             loc_AD80|62-220
44290|code|MOV             R0, R4|32-70
44292|code|MOV             R1, R5|41-70
44294|code|BL              sub_A8F8|255-247-247-253
44298|code|CMP             R0, #0|0-40
44300|code|BNE             loc_AD58|36-209
44302|code|MOV             R0, R4|32-70
44304|code|MOV             R1, R5|41-70
44306|code|BL              sub_A9C0|255-247-85-254
44310|code|CMP             R0, #0|0-40
44312|code|BEQ             loc_AD58|30-208
44314|code|LDRB            R3, [R4,#0x10]|35-124
44316|code|LSLS            R1, R3, #0x1F|217-7
44318|code|BMI             loc_AD3C|13-212
44320|code|LDR             R2, [R5,#4]|106-104
44322|code|LDR             R3, [R4,#8]|163-104
44324|code|SUBS            R1, R2, #1|81-30
44326|code|CMP             R3, R1|139-66
44328|code|BEQ             loc_AD50|18-208
44330|code|CMP             R3, R2|147-66
44332|code|BCC             loc_AD5E|23-211
44334|code|LDR             R1, [R5,#8]|169-104
44336|code|CMP             R3, R1|139-66
44338|code|BCS             loc_AD46|8-210
44340|code|ADDS            R3, #1|1-51
44342|code|STR             R1, [R4,#8]|161-96
44344|code|SUBS            R0, R3, R2|152-26
44346|code|POP             {R3-R5,PC}|56-189
44348|code|LDRB            R3, [R5,#0x10]|43-124
44350|code|LSLS            R2, R3, #0x1F|218-7
44352|code|BPL             loc_AD20|238-213
44354|code|MOVS            R0, #1|1-32
44356|code|POP             {R3-R5,PC}|56-189
44358|code|MOV             R0, R5|40-70
44360|code|POP.W           {R3-R5,LR}|189-232-56-64
44364|code|B.W             sub_A98C|255-247-30-190
44368|code|LDR             R3, [R5,#8]|171-104
44370|code|MOVS            R0, #0|0-32
44372|code|STR             R3, [R4,#8]|163-96
44374|code|POP             {R3-R5,PC}|56-189
44376|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44380|code|POP             {R3-R5,PC}|56-189
44382|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
44386|code|POP             {R3-R5,PC}|56-189
44388|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|10-72
44390|code|MOVW            R2, #0x352; line|64-242-82-50
44394|code|LDR             R1, =unk_F8A8; file|10-73
44396|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|10-75
44398|code|BLX             __assert_fail|254-247-82-236
44402|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|10-72
44404|code|MOVW            R2, #0x351; line|64-242-81-50
44408|code|LDR             R1, =unk_F8A8; file|6-73
44410|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|7-75
44412|code|BLX             __assert_fail|254-247-74-236
44416|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|7-72
44418|code|MOVW            R2, #0x353; line|64-242-83-50
44422|code|LDR             R1, =unk_F8A8; file|3-73
44424|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|3-75
44426|code|BLX             __assert_fail|254-247-68-236
44430|data|ALIGN 0x10|0-191
44432|data|DCD aH2Void0; "h2 != ((void *)0)"|152-249-0-0
44436|data|DCD unk_F8A8|168-248-0-0
44440|data|DCD aHostrangeJoin; "hostrange_join"|212-245-0-0
44444|data|DCD aH1Void0; "h1 != ((void *)0)"|4-249-0-0
44448|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|172-249-0-0
44452|code|PUSH            {R3-R5,LR}|56-181
44454|code|MOV             R4, R0|4-70
44456|code|MOV             R5, R1|13-70
44458|code|BL              sub_A8F8|255-247-165-253
44462|code|CBNZ            R0, loc_ADC4|72-185
44464|code|LDRB            R3, [R4,#0x10]|35-124
44466|code|LSLS            R3, R3, #0x1F|219-7
44468|code|BMI             locret_ADC6|7-212
44470|code|LDRB            R3, [R5,#0x10]|43-124
44472|code|TST.W           R3, #1|19-240-1-15
44476|code|ITE NE|20-191
44478|code|MOVNE           R0, #0|0-32
44480|code|MOVEQ           R0, #1|1-32
44482|code|POP             {R3-R5,PC}|56-189
44484|code|MOVS            R0, #0|0-32
44486|code|POP             {R3-R5,PC}|56-189
44488|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44492|code|SUB             SP, SP, #0x24|137-176
44494|code|LDR             R6, [R1]|14-104
44496|code|MOV             R8, R0|128-70
44498|code|STR             R3, [SP,#0x48+s]|4-147
44500|code|MOV             R5, R2|21-70
44502|code|LDR             R3, [R0,#8]|131-104
44504|code|LDR             R7, [R0,#0x10]|7-105
44506|code|MOV.W           R9, R6,LSL#2|79-234-134-9
44510|code|SUBS            R3, #1|1-59
44512|code|STR             R1, [SP,#0x48+var_30]|6-145
44514|code|CMP             R6, R3|158-66
44516|code|ADD.W           R10, R7, R9|7-235-9-10
44520|code|LDR.W           R4, [R7,R6,LSL#2]|87-248-38-64
44524|code|IT GE|168-191
44526|code|MOVGE.W         R11, #0|79-240-0-11
44530|code|BGE             loc_ADFA|2-218
44532|code|ADDS            R3, R6, #1|115-28
44534|code|LDR.W           R11, [R7,R3,LSL#2]|87-248-35-176
44538|code|MOV             R0, R4|32-70
44540|code|BL              sub_A98C|255-247-198-253
44544|code|CMP             R0, #1|1-40
44546|code|BLS.W           loc_AF44|64-242-159-128
44550|code|MOVS            R1, #1|1-33
44552|code|STR             R1, [SP,#0x48+var_34]|5-145
44554|code|LDR             R3, [R4]|35-104
44556|code|MOV             R1, R5; maxlen|41-70
44558|code|LDR             R0, [SP,#0x48+s]; s|4-152
44560|code|LDR             R2, =(aRegcompFailedS+0x10); format|87-74
44562|code|BLX             snprintf|254-247-106-235
44566|code|CMP             R0, R5|168-66
44568|code|MOV             R4, R0|4-70
44570|code|ITE LS|148-191
44572|code|MOVLS           R3, #0|0-35
44574|code|MOVHI           R3, #1|1-35
44576|code|ORRS.W          R3, R3, R0,LSR#31|83-234-208-115
44580|code|IT NE|24-191
44582|code|MOVNE           R4, R5|44-70
44584|code|BNE             loc_AF1E|121-209
44586|code|LDR             R2, [SP,#0x48+var_34]|5-154
44588|code|UXTB            R2, R2|210-178
44590|code|STR             R2, [SP,#0x48+var_2C]|7-146
44592|code|MOV             R3, R2|19-70
44594|code|CMP             R5, R4|165-66
44596|code|ITE LS|148-191
44598|code|MOVLS           R3, #0|0-35
44600|code|ANDHI.W         R3, R3, #1|3-240-1-3
44604|code|CMP             R3, #0|0-43
44606|code|BNE             loc_AF3A|124-209
44608|code|LDR.W           R7, [R7,R9]|87-248-9-112
44612|code|MOV             R11, R8|195-70
44614|code|B               loc_AE76|22-224
44616|code|ADD             R4, R8|68-68
44618|code|CMP             R5, R4|165-66
44620|code|BLS             loc_AEFA|85-217
44622|code|LDR             R3, [SP,#0x48+var_34]|5-155
44624|code|CBZ             R3, loc_AE5A|27-177
44626|code|LDR             R2, [SP,#0x48+s]|4-154
44628|code|MOVS            R1, #0x2C ; ','|44-33
44630|code|STRB            R1, [R2,R4]|17-85
44632|code|ADDS            R4, #1|1-52
44634|code|LDR.W           R3, [R11,#8]|219-248-8-48
44638|code|ADDS            R6, #1|1-54
44640|code|CMP             R6, R3|158-66
44642|code|BGE             loc_AEFA|74-218
44644|code|LDR.W           R7, [R10,#4]|218-248-4-112
44648|code|LDR.W           R1, [R10],#4|90-248-4-27
44652|code|MOV             R0, R7|56-70
44654|code|BL              sub_ADA4|255-247-153-255
44658|code|CMP             R0, #0|0-40
44660|code|BEQ             loc_AEFA|65-208
44662|code|LDR             R2, [SP,#0x48+s]|4-154
44664|code|RSB.W           R9, R4, R5|196-235-5-9
44668|code|CMP             R5, R9|77-69
44670|code|IT CC|56-191
44672|code|MOVCC.W         R9, #0|79-240-0-9
44676|code|ADDS.W          R12, R2, R4|18-235-4-12
44680|code|BEQ             loc_AF62|107-208
44682|code|LDRB            R3, [R7,#0x10]|59-124
44684|code|MOV.W           R8, #0|79-240-0-8
44688|code|AND.W           R3, R3, #1|3-240-1-3
44692|code|CMP.W           R9, #0|185-241-0-15
44696|code|IT EQ|8-191
44698|code|ORREQ.W         R3, R3, #1|67-240-1-3
44702|code|CMP             R3, #0|0-43
44704|code|BNE             loc_AE48|210-209
44706|code|LDR.W           LR, [R7,#4]|215-248-4-224
44710|code|MOV             R0, R12; s|96-70
44712|code|LDR             R3, [R7,#0xC]|251-104
44714|code|MOV             R1, R9; maxlen|73-70
44716|code|LDR             R2, =a0Lu; "%0*lu"|49-74
44718|code|STR.W           R12, [SP,#0x48+var_3C]|205-248-12-192
44722|code|STR.W           LR, [SP,#0x48+var_48]|205-248-0-224
44726|code|BLX             snprintf|254-247-24-235
44730|code|LDR.W           R12, [SP,#0x48+var_3C]|221-248-12-192
44734|code|MVN.W           R3, R0|111-234-0-3
44738|code|MOV             R8, R0|128-70
44740|code|LSRS            R3, R3, #0x1F|219-15
44742|code|CMP             R0, R9|72-69
44744|code|ITE CS|44-191
44746|code|MOVCS           R3, #0|0-35
44748|code|ANDCC.W         R3, R3, #1|3-240-1-3
44752|code|CMP             R3, #0|0-43
44754|code|BEQ             loc_AE48|185-208
44756|code|LDR             R1, [R7,#8]|185-104
44758|code|LDR             R3, [R7,#4]|123-104
44760|code|CMP             R3, R1|139-66
44762|code|BCS             loc_AE48|181-210
44764|code|RSB.W           R9, R8, R9|200-235-9-9
44768|code|LDR             R3, [R7,#0xC]|251-104
44770|code|ADD             R0, R12; s|96-68
44772|code|STR             R1, [SP,#0x48+var_48]|0-145
44774|code|LDR             R2, =a0Lu_0; "-%0*lu"|36-74
44776|code|MOV             R1, R9; maxlen|73-70
44778|code|BLX             snprintf|254-247-254-234
44782|code|CMP             R0, #0|0-40
44784|code|ITE GE|172-191
44786|code|ADDGE           R8, R0|128-68
44788|code|MOVLT.W         R8, #0xFFFFFFFF|79-240-255-56
44792|code|B               loc_AE48|166-231
44794|code|LDR             R3, [SP,#0x48+var_2C]|7-155
44796|code|CMP             R4, R5|172-66
44798|code|ITE CS|44-191
44800|code|MOVCS           R3, #0|0-35
44802|code|ANDCC.W         R3, R3, #1|3-240-1-3
44806|code|CBZ             R3, loc_AF26|115-177
44808|code|CMP             R4, #0|0-44
44810|code|BLE             loc_AF26|12-221
44812|code|LDR             R1, [SP,#0x48+s]|4-153
44814|code|MOVS            R2, #0x5D ; ']'|93-34
44816|code|ADDS            R3, R1, R4|11-25
44818|code|STRB.W          R2, [R3,#-1]|3-248-1-44
44822|code|MOVS            R3, #0|0-35
44824|code|STRB            R3, [R1,R4]|11-85
44826|code|LDR             R2, [SP,#0x48+var_30]|6-154
44828|code|STR             R6, [R2]|22-96
44830|code|MOV             R0, R4|32-70
44832|code|ADD             SP, SP, #0x24 ; '$'|9-176
44834|code|POP.W           {R4-R11,PC}|189-232-240-143
44838|code|CMP             R5, R4|165-66
44840|code|BHI             loc_AF56|21-216
44842|code|CMP             R5, #0|0-45
44844|code|BEQ             loc_AF1A|245-208
44846|code|LDR             R2, [SP,#0x48+s]|4-154
44848|code|MOVS            R3, #0|0-35
44850|code|ADDS            R5, R2, R5|85-25
44852|code|STRB.W          R3, [R5,#-1]|5-248-1-60
44856|code|B               loc_AF1A|239-231
44858|code|LDR             R1, [SP,#0x48+s]|4-153
44860|code|MOVS            R3, #0x5B ; '['|91-35
44862|code|STRB            R3, [R1,R4]|11-85
44864|code|ADDS            R4, #1|1-52
44866|code|B               loc_AE40|125-231
44868|code|MOV             R0, R4|32-70
44870|code|MOV             R1, R11|89-70
44872|code|BL              sub_ADA4|255-247-44-255
44876|code|ADDS            R0, #0|0-48
44878|code|IT NE|24-191
44880|code|MOVNE           R0, #1|1-32
44882|code|STR             R0, [SP,#0x48+var_34]|5-144
44884|code|B               loc_AE0A|89-231
44886|code|LDR             R1, [SP,#0x48+s]|4-153
44888|code|BIC.W           R3, R4, R4,ASR#31|36-234-228-115
44892|code|MOVS            R2, #0|0-34
44894|code|STRB            R2, [R1,R3]|202-84
44896|code|B               loc_AF1A|219-231
44898|code|LDR             R0, =aBufVoid0; "buf != ((void *)0)"|6-72
44900|code|MOVW            R2, #0x3CF; line|64-242-207-50
44904|code|LDR             R1, =unk_F8A8; file|5-73
44906|code|LDR             R3, =aHostrangeNumst; "hostrange_numstr"|6-75
44908|code|BLX             __assert_fail|254-247-82-235
44912|data|DCD aRegcompFailedS+0x10; "%s"|180-1-1-0
44916|data|DCD a0Lu; "%0*lu"|220-249-0-0
44920|data|DCD a0Lu_0; "-%0*lu"|228-249-0-0
44924|data|DCD aBufVoid0; "buf != ((void *)0)"|200-249-0-0
44928|data|DCD unk_F8A8|168-248-0-0
44932|data|DCD aHostrangeNumst; "hostrange_numstr"|228-245-0-0
44936|code|PUSH            {R4-R6,LR}|112-181
44938|code|MOV             R5, R0|5-70
44940|code|MOV             R6, R1|14-70
44942|code|CBZ             R0, loc_AFC6|208-177
44944|code|LDR             R2, [R0]|2-104
44946|code|MOVW            R3, #0xDEAD|77-246-173-99
44950|code|CMP             R2, R3|154-66
44952|code|BNE             loc_AFD4|28-209
44954|code|LDR             R4, [R5,#4]|108-104
44956|code|LSLS            R1, R1, #2; size|137-0
44958|code|LDR             R0, [R0,#0x10]; ptr|0-105
44960|code|STR             R6, [R5,#4]|110-96
44962|code|BLX             realloc|254-247-254-233
44966|code|STR             R0, [R5,#0x10]|40-97
44968|code|CBZ             R0, locret_AFC0|80-177
44970|code|CMP             R6, R4|166-66
44972|code|BLS             loc_AFC2|9-217
44974|code|MOVS            R3, #0|0-35
44976|code|B               loc_AFB4|0-224
44978|code|LDR             R0, [R5,#0x10]|40-105
44980|code|STR.W           R3, [R0,R4,LSL#2]|64-248-36-48
44984|code|ADDS            R4, #1|1-52
44986|code|CMP             R6, R4|166-66
44988|code|BHI             loc_AFB2|249-216
44990|code|MOVS            R0, #1|1-32
44992|code|POP             {R4-R6,PC}|112-189
44994|code|MOVS            R0, #1|1-32
44996|code|POP             {R4-R6,PC}|112-189
44998|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
45000|code|MOVW            R2, #0x411; line|64-242-17-66
45004|code|LDR             R1, =unk_F8A8; file|6-73
45006|code|LDR             R3, =aHostlistResize; "hostlist_resize"|7-75
45008|code|BLX             __assert_fail|254-247-32-235
45012|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|6-72
45014|code|MOVW            R2, #0x412; line|64-242-18-66
45018|code|LDR             R1, =unk_F8A8; file|3-73
45020|code|LDR             R3, =aHostlistResize; "hostlist_resize"|3-75
45022|code|BLX             __assert_fail|254-247-26-235
45026|data|ALIGN 4|0-191
45028|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
45032|data|DCD unk_F8A8|168-248-0-0
45036|data|DCD aHostlistResize; "hostlist_resize"|248-245-0-0
45040|data|DCD aHlMagic57005; "hl->magic == 57005"|0-250-0-0
45044|code|LDR             R1, [R0,#4]|65-104
45046|code|PUSH            {R3,LR}|8-181
45048|code|ADDS            R1, #0x10|16-49
45050|code|BL              sub_AF88|255-247-197-255
45054|code|ADDS            R0, #0|0-48
45056|code|IT NE|24-191
45058|code|MOVNE           R0, #1|1-32
45060|code|POP             {R3,PC}|8-189
45062|data|ALIGN 4|0-191
45064|code|PUSH            {R3-R7,LR}|248-181
45066|code|MOV             R4, R0|4-70
45068|code|MOV             R6, R1|14-70
45070|code|CMP             R1, #0|0-41
45072|code|BEQ             loc_B09C|68-208
45074|code|CMP             R0, #0|0-40
45076|code|BEQ             loc_B0B8|80-208
45078|code|LDR             R2, [R0]|2-104
45080|code|MOVW            R3, #0xDEAD|77-246-173-99
45084|code|CMP             R2, R3|154-66
45086|code|BNE             loc_B0AA|68-209
45088|code|LDR             R5, [R0,#8]|133-104
45090|code|LDR             R3, [R0,#0x10]|3-105
45092|code|CMP             R5, #0|0-45
45094|code|IT LE|216-191
45096|code|LDRLE           R7, [R3]|31-104
45098|code|BLE             loc_B032|2-221
45100|code|SUBS            R2, R5, #1|106-30
45102|code|LDR.W           R7, [R3,R2,LSL#2]|83-248-34-112
45106|code|LDR             R3, [R4,#4]|99-104
45108|code|CMP             R5, R3|157-66
45110|code|BEQ             loc_B080|35-208
45112|code|CMP             R5, #0|0-45
45114|code|BLE             loc_B046|4-221
45116|code|MOV             R0, R7|56-70
45118|code|MOV             R1, R6|49-70
45120|code|BL              sub_A8F8|255-247-90-252
45124|code|CBZ             R0, loc_B066|120-177
45126|code|MOV             R0, R6|48-70
45128|code|LDR             R7, [R4,#0x10]|39-105
45130|code|BL              sub_ABCC|255-247-191-253
45134|code|ADDS            R3, R5, #1|107-28
45136|code|STR.W           R0, [R7,R5,LSL#2]|71-248-37-0
45140|code|STR             R3, [R4,#8]|163-96
45142|code|CBZ             R0, loc_B090|216-177
45144|code|MOV             R0, R6|48-70
45146|code|BL              sub_A98C|255-247-151-252
45150|code|LDR             R3, [R4,#0xC]|227-104
45152|code|ADDS            R0, R0, R3|192-24
45154|code|STR             R0, [R4,#0xC]|224-96
45156|code|POP             {R3-R7,PC}|248-189
45158|code|LDR             R3, [R6,#4]|115-104
45160|code|LDR             R2, [R7,#8]|186-104
45162|code|SUBS            R3, #1|1-59
45164|code|CMP             R2, R3|154-66
45166|code|BNE             loc_B046|234-209
45168|code|MOV             R0, R7|56-70
45170|code|MOV             R1, R6|49-70
45172|code|BL              sub_A9C0|255-247-164-252
45176|code|CBZ             R0, loc_B08C|64-177
45178|code|LDR             R3, [R6,#8]|179-104
45180|code|STR             R3, [R7,#8]|187-96
45182|code|B               loc_B058|235-231
45184|code|MOV             R0, R4|32-70
45186|code|BL              sub_AFF4|255-247-183-255
45190|code|CBZ             R0, loc_B096|48-177
45192|code|LDR             R5, [R4,#8]|165-104
45194|code|B               loc_B038|213-231
45196|code|LDR             R5, [R4,#8]|165-104
45198|code|B               loc_B046|218-231
45200|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
45204|code|POP             {R3-R7,PC}|248-189
45206|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
45210|code|POP             {R3-R7,PC}|248-189
45212|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
45214|code|MOVW            R2, #0x433; line|64-242-51-66
45218|code|LDR             R1, =unk_F8A8; file|10-73
45220|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|10-75
45222|code|BLX             __assert_fail|254-247-182-234
45226|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
45228|code|MOVW            R2, #0x434; line|64-242-52-66
45232|code|LDR             R1, =unk_F8A8; file|6-73
45234|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|7-75
45236|code|BLX             __assert_fail|254-247-174-234
45240|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
45242|code|MOVW            R2, #0x434; line|64-242-52-66
45246|code|LDR             R1, =unk_F8A8; file|3-73
45248|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|3-75
45250|code|BLX             __assert_fail|254-247-168-234
45254|data|ALIGN 4|0-191
45256|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
45260|data|DCD unk_F8A8|168-248-0-0
45264|data|DCD aHostlistPushRa; "hostlist_push_range"|8-246-0-0
45268|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
45272|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
45276|code|PUSH.W          {R4-R8,LR}|45-233-240-65
45280|code|MOV             R4, R0|4-70
45282|code|SUB             SP, SP, #8|130-176
45284|code|MOV             R7, R2|23-70
45286|code|CMP             R0, #0|0-40
45288|code|BEQ             loc_B174|68-208
45290|code|LDR             R2, [R0]|2-104
45292|code|MOVW            R3, #0xDEAD|77-246-173-99
45296|code|CMP             R2, R3|154-66
45298|code|BNE             loc_B190|77-209
45300|code|CMP             R1, #0|0-41
45302|code|BEQ             loc_B182|68-208
45304|code|LDR             R3, [R0,#8]|131-104
45306|code|MOVS            R0, #0|0-32
45308|code|CMP             R3, R7|187-66
45310|code|BLT             loc_B15E|46-219
45312|code|LDR             R2, [R4,#4]|98-104
45314|code|CMP             R3, R2|147-66
45316|code|BEQ             loc_B164|46-208
45318|code|LDR.W           R8, [R4,#0x10]|212-248-16-128
45322|code|MOV             R0, R1|8-70
45324|code|MOV             R5, R7|61-70
45326|code|LDR.W           R6, [R8,R7,LSL#2]|88-248-39-96
45330|code|BL              sub_ABCC|255-247-91-253
45334|code|LDR.W           R12, [R4,#8]|212-248-8-192
45338|code|ADDS            R3, R7, #1|123-28
45340|code|CMP             R12, R3|156-69
45342|code|STR.W           R0, [R8,R7,LSL#2]|72-248-39-0
45346|code|BLT             loc_B138|9-219
45348|code|LSLS            R3, R3, #2|155-0
45350|code|B               loc_B12A|0-224
45352|code|MOV             R6, R1|14-70
45354|code|LDR             R2, [R4,#0x10]|34-105
45356|code|ADDS            R5, #1|1-53
45358|code|LDR             R1, [R2,R3]|209-88
45360|code|STR             R6, [R2,R3]|214-80
45362|code|ADDS            R3, #4|4-51
45364|code|CMP             R5, R12|101-69
45366|code|BNE             loc_B128|247-209
45368|code|LDR             R3, [R4,#0x14]|99-105
45370|code|ADD.W           R2, R12, #1|12-241-1-2
45374|code|STR             R2, [R4,#8]|162-96
45376|code|CBZ             R3, loc_B15C|99-177
45378|code|LDR             R2, [R3,#8]|154-104
45380|code|CMP             R7, R2|151-66
45382|code|BGT             loc_B156|6-220
45384|code|LDR             R1, [R3,#4]|89-104
45386|code|ADDS            R2, #1|1-50
45388|code|LDR             R1, [R1,#0x10]|9-105
45390|code|STR             R2, [R3,#8]|154-96
45392|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
45396|code|STR             R2, [R3,#0xC]|218-96
45398|code|LDR             R3, [R3,#0x14]|91-105
45400|code|CMP             R3, #0|0-43
45402|code|BNE             loc_B142|242-209
45404|code|MOVS            R0, #1|1-32
45406|code|ADD             SP, SP, #8|2-176
45408|code|POP.W           {R4-R8,PC}|189-232-240-129
45412|code|MOV             R0, R4|32-70
45414|code|STR             R1, [SP,#0x20+var_1C]|1-145
45416|code|BL              sub_AFF4|255-247-68-255
45420|code|LDR             R1, [SP,#0x20+var_1C]|1-153
45422|code|CMP             R0, #0|0-40
45424|code|BNE             loc_B106|201-209
45426|code|B               loc_B15E|244-231
45428|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
45430|code|MOV.W           R2, #0x468; line|79-244-141-98
45434|code|LDR             R1, =unk_F8A8; file|10-73
45436|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|10-75
45438|code|BLX             __assert_fail|254-247-74-234
45442|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
45444|code|MOVW            R2, #0x46A; line|64-242-106-66
45448|code|LDR             R1, =unk_F8A8; file|6-73
45450|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|7-75
45452|code|BLX             __assert_fail|254-247-66-234
45456|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
45458|code|MOVW            R2, #0x469; line|64-242-105-66
45462|code|LDR             R1, =unk_F8A8; file|3-73
45464|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|3-75
45466|code|BLX             __assert_fail|254-247-60-234
45470|data|ALIGN 0x10|0-191
45472|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
45476|data|DCD unk_F8A8|168-248-0-0
45480|data|DCD aHostlistInsert; "hostlist_insert_range"|28-246-0-0
45484|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
45488|data|DCD aHlMagic57005; "hl->magic == 57005"|0-250-0-0
45492|code|PUSH            {R3-R7,LR}|248-181
45494|code|MOV             R4, R0|4-70
45496|code|CBZ             R0, loc_B204|32-179
45498|code|LDR             R2, [R0]|2-104
45500|code|MOVW            R3, #0xDEAD|77-246-173-99
45504|code|CMP             R2, R3|154-66
45506|code|BNE             loc_B208|33-209
45508|code|BL              sub_AA68|255-247-80-252
45512|code|MOV             R5, R0|5-70
45514|code|CBZ             R0, loc_B1FA|176-177
45516|code|LDR             R1, [R4,#8]|161-104
45518|code|LDR             R3, [R0,#4]|67-104
45520|code|LDR             R2, [R4,#0xC]|226-104
45522|code|CMP             R1, R3|153-66
45524|code|STR             R1, [R0,#8]|129-96
45526|code|STR             R2, [R0,#0xC]|194-96
45528|code|BGT             loc_B1FE|17-220
45530|code|LDR             R3, [R4,#8]|163-104
45532|code|CMP             R3, #0|0-43
45534|code|BLE             loc_B1FA|12-221
45536|code|MOVS            R6, #0|0-38
45538|code|LDR             R3, [R4,#0x10]|35-105
45540|code|LDR             R7, [R5,#0x10]|47-105
45542|code|LDR.W           R0, [R3,R6,LSL#2]|83-248-38-0
45546|code|BL              sub_ABCC|255-247-239-252
45550|code|LDR             R3, [R4,#8]|163-104
45552|code|STR.W           R0, [R7,R6,LSL#2]|71-248-38-0
45556|code|ADDS            R6, #1|1-54
45558|code|CMP             R3, R6|179-66
45560|code|BGT             loc_B1E2|243-220
45562|code|MOV             R0, R5|40-70
45564|code|POP             {R3-R7,PC}|248-189
45566|code|BL              sub_AF88|255-247-195-254
45570|code|B               loc_B1DA|234-231
45572|code|MOV             R5, R0|5-70
45574|code|B               loc_B1FA|248-231
45576|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
45578|code|MOVW            R2, #0x5E2; line|64-242-226-82
45582|code|LDR             R1, =unk_F8A8; file|3-73
45584|code|LDR             R3, =aHostlistCopy; "hostlist_copy"|3-75
45586|code|BLX             __assert_fail|254-247-0-234
45590|data|ALIGN 4|0-191
45592|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
45596|data|DCD unk_F8A8|168-248-0-0
45600|data|DCD aHostlistCopy; "hostlist_copy"|52-246-0-0
45604|code|PUSH            {R4-R6,LR}|112-181
45606|code|MOV             R5, R0|5-70
45608|code|MOV             R6, R1|14-70
45610|code|MOV             R0, R1|8-70
45612|code|CBZ             R1, locret_B264|209-177
45614|code|BL              sub_A714|255-247-113-250
45618|code|MOV             R4, R0|4-70
45620|code|LDR             R0, [R0,#0xC]; s|192-104
45622|code|CBZ             R0, loc_B266|176-177
45624|code|BLX             strlen|254-247-50-233
45628|code|LDR             R6, [R4,#8]|166-104
45630|code|MOV             R1, R6|49-70
45632|code|MOV             R2, R6|50-70
45634|code|MOV             R3, R0|3-70
45636|code|LDR             R0, [R4,#4]|96-104
45638|code|BL              sub_AB48|255-247-127-252
45642|code|MOV             R6, R0|6-70
45644|code|MOV             R1, R6|49-70
45646|code|MOV             R0, R5|40-70
45648|code|BL              sub_B008|255-247-218-254
45652|code|MOV             R0, R6; ptr|48-70
45654|code|BL              sub_A6F8|255-247-79-250
45658|code|MOV             R0, R4; ptr|32-70
45660|code|BL              sub_A6D0|255-247-56-250
45664|code|MOVS            R0, #1|1-32
45666|code|POP             {R4-R6,PC}|112-189
45668|code|POP             {R4-R6,PC}|112-189
45670|code|MOV             R0, R6|48-70
45672|code|BL              sub_AACC|255-247-48-252
45676|code|MOV             R6, R0|6-70
45678|code|B               loc_B24C|237-231
45680|code|PUSH            {R3-R7,LR}|248-181
45682|code|MOV             R7, R0|7-70
45684|code|MOV             R5, R1|13-70
45686|code|CBZ             R1, loc_B2A8|185-177
45688|code|LDR             R2, [R1]|10-104
45690|code|MOVW            R3, #0xDEAD|77-246-173-99
45694|code|CMP             R2, R3|154-66
45696|code|BNE             loc_B2AE|21-209
45698|code|LDR             R3, [R1,#8]|139-104
45700|code|MOVS            R6, #0|0-38
45702|code|CMP             R3, #0|0-43
45704|code|IT GT|200-191
45706|code|MOVGT           R4, R6|52-70
45708|code|BLE             loc_B2A4|10-221
45710|code|LDR             R3, [R5,#0x10]|43-105
45712|code|MOV             R0, R7|56-70
45714|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
45718|code|ADDS            R4, #1|1-52
45720|code|BL              sub_B008|255-247-182-254
45724|code|LDR             R3, [R5,#8]|171-104
45726|code|CMP             R3, R4|163-66
45728|code|ADD             R6, R0|6-68
45730|code|BGT             loc_B28E|244-220
45732|code|MOV             R0, R6|48-70
45734|code|POP             {R3-R7,PC}|248-189
45736|code|MOV             R6, R1|14-70
45738|code|MOV             R0, R6|48-70
45740|code|POP             {R3-R7,PC}|248-189
45742|code|LDR             R0, =aH2Magic57005; "(h2)->magic == 57005"|3-72
45744|code|MOVW            R2, #0x639; line|64-242-57-98
45748|code|LDR             R1, =unk_F8A8; file|2-73
45750|code|LDR             R3, =aHostlistPushLi; "hostlist_push_list"|3-75
45752|code|BLX             __assert_fail|254-247-172-233
45756|data|DCD aH2Magic57005; "(h2)->magic == 57005"|44-250-0-0
45760|data|DCD unk_F8A8|168-248-0-0
45764|data|DCD aHostlistPushLi; "hostlist_push_list"|68-246-0-0
45768|code|PUSH.W          {R4-R9,LR}|45-233-240-67
45772|code|MOV             R4, R0|4-70
45774|code|SUB             SP, SP, #0xC|131-176
45776|code|CMP             R0, #0|0-40
45778|code|BEQ             loc_B3AA|106-208
45780|code|LDR             R2, [R0]|2-104
45782|code|MOVW            R3, #0xDEAD|77-246-173-99
45786|code|CMP             R2, R3|154-66
45788|code|BNE             loc_B39C|94-209
45790|code|LDR             R7, [R0,#0xC]|199-104
45792|code|CMP             R7, #0|0-47
45794|code|BLE             loc_B37C|75-221
45796|code|LDR             R2, [R0,#8]|130-104
45798|code|LDR             R3, [R0,#0x10]|3-105
45800|code|SUBS            R2, #1|1-58
45802|code|LDR.W           R5, [R3,R2,LSL#2]|83-248-34-80
45806|code|CMP             R5, #0|0-45
45808|code|BEQ             loc_B3B8|98-208
45810|code|LDRB            R3, [R5,#0x10]|43-124
45812|code|LSLS            R2, R3, #0x1F|218-7
45814|code|BMI             loc_B330|27-212
45816|code|MOV             R0, R5|40-70
45818|code|BL              sub_A98C|255-247-71-251
45822|code|MOV             R6, R0|6-70
45824|code|CBNZ            R0, loc_B342|248-185
45826|code|SUBS            R7, #1|1-63
45828|code|MOV             R0, R5|40-70
45830|code|STR             R7, [R4,#0xC]|231-96
45832|code|BL              sub_AA08|255-247-126-251
45836|code|CBZ             R0, loc_B328|96-177
45838|code|LDR             R3, [R4,#8]|163-104
45840|code|LDR             R2, [R4,#0x10]|34-105
45842|code|SUBS            R3, #1|1-59
45844|code|STR             R3, [R4,#8]|163-96
45846|code|LDR.W           R0, [R2,R3,LSL#2]; ptr|82-248-35-0
45850|code|BL              sub_A6F8|255-247-237-249
45854|code|LDR             R2, [R4,#8]|162-104
45856|code|LDR             R3, [R4,#0x10]|35-105
45858|code|MOVS            R1, #0|0-33
45860|code|STR.W           R1, [R3,R2,LSL#2]|67-248-34-16
45864|code|MOV             R0, R6|48-70
45866|code|ADD             SP, SP, #0xC|3-176
45868|code|POP.W           {R4-R9,PC}|189-232-240-131
45872|code|LDM.W           R5, {R0,R3}|149-232-9-0
45876|code|ADDS            R3, #1|1-51
45878|code|STR             R3, [R5,#4]|107-96
45880|code|BLX             __strdup|254-247-226-232
45884|code|LDR             R7, [R4,#0xC]|231-104
45886|code|MOV             R6, R0|6-70
45888|code|B               loc_B302|223-231
45890|code|LDR             R7, [R5]|47-104
45892|code|MOV             R0, R7; s|56-70
45894|code|BLX             strlen|254-247-172-232
45898|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
45902|code|ADD.W           R9, R8, #0x10|8-241-16-9
45906|code|ADD             R9, R0|129-68
45908|code|MOV             R0, R9; size|72-70
45910|code|BLX             malloc|254-247-114-232
45914|code|MOV             R6, R0|6-70
45916|code|CBZ             R0, loc_B380|128-177
45918|code|LDR.W           LR, [R5,#8]|213-248-8-224
45922|code|MOV             R3, R7|59-70
45924|code|MOV             R1, R9; maxlen|73-70
45926|code|LDR             R2, =aS0Lu; "%s%0*lu"|24-74
45928|code|ADD.W           R12, LR, #0xFFFFFFFF|14-241-255-60
45932|code|STR.W           R12, [R5,#8]|197-248-8-192
45936|code|STMEA.W         SP, {R8,LR}|141-232-0-65
45940|code|BLX             snprintf|254-247-184-232
45944|code|LDR             R7, [R4,#0xC]|231-104
45946|code|B               loc_B302|194-231
45948|code|MOVS            R6, #0|0-38
45950|code|B               loc_B328|211-231
45952|code|BLX             __errno_location|254-247-172-232
45956|code|MOVS            R2, #0xC|12-34
45958|code|MOV.W           R1, #0x320|79-244-72-113
45962|code|MOV             R3, R0|3-70
45964|code|LDR             R0, =unk_F8A8|15-72
45966|code|STR             R2, [R3]|26-96
45968|code|LDR             R2, =aHostrangePop; "hostrange pop"|15-74
45970|code|BL              sub_A5E0|255-247-37-249
45974|code|LDR             R7, [R4,#0xC]|231-104
45976|code|MOV             R6, R0|6-70
45978|code|B               loc_B302|178-231
45980|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|13-72
45982|code|MOV.W           R2, #0x648; line|79-244-201-98
45986|code|LDR             R1, =unk_F8A8; file|10-73
45988|code|LDR             R3, =aHostlistPop; "hostlist_pop"|12-75
45990|code|BLX             __assert_fail|254-247-54-233
45994|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|12-72
45996|code|MOV.W           R2, #0x648; line|79-244-201-98
46000|code|LDR             R1, =unk_F8A8; file|6-73
46002|code|LDR             R3, =aHostlistPop; "hostlist_pop"|9-75
46004|code|BLX             __assert_fail|254-247-46-233
46008|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|9-72
46010|code|MOV.W           R2, #0x318; line|79-244-70-114
46014|code|LDR             R1, =unk_F8A8; file|3-73
46016|code|LDR             R3, =aHostrangePop_0; "hostrange_pop"|8-75
46018|code|BLX             __assert_fail|254-247-40-233
46022|data|ALIGN 4|0-191
46024|data|DCD aS0Lu; "%s%0*lu"|84-250-0-0
46028|data|DCD unk_F8A8|168-248-0-0
46032|data|DCD aHostrangePop; "hostrange pop"|68-250-0-0
46036|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
46040|data|DCD aHostlistPop; "hostlist_pop"|88-246-0-0
46044|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
46048|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
46052|data|DCD aHostrangePop_0; "hostrange_pop"|104-246-0-0
46056|code|PUSH.W          {R4-R10,LR}|45-233-240-71
46060|code|SUB             SP, SP, #0x60 ; '`'|152-176
46062|code|LDR             R7, =__stack_chk_guard|42-79
46064|code|MOV             R6, R1|14-70
46066|code|LDR             R3, [R7]|59-104
46068|code|STR             R3, [SP,#0x5C]|23-147
46070|code|CMP             R0, #0|0-40
46072|code|BEQ             loc_B488|70-208
46074|code|LDR             R2, [R0]|2-104
46076|code|MOVW            R3, #0xDEAD|77-246-173-99
46080|code|CMP             R2, R3|154-66
46082|code|BNE             loc_B47A|58-209
46084|code|LDR.W           R10, [R0,#8]|208-248-8-160
46088|code|CMP.W           R10, #0|186-241-0-15
46092|code|BLE             loc_B466|43-221
46094|code|MOVS            R4, #0|0-36
46096|code|LDR.W           R9, [R0,#0x10]|208-248-16-144
46100|code|MOV             R8, R4|160-70
46102|code|B               loc_B422|4-224
46104|code|ADD.W           R8, R8, #1|8-241-1-8
46108|code|ADDS            R4, R4, R0|36-24
46110|code|CMP             R8, R10|208-69
46112|code|BEQ             loc_B466|33-208
46114|code|LDR.W           R5, [R9],#4|89-248-4-91
46118|code|MOV             R0, R5|40-70
46120|code|BL              sub_A98C|255-247-176-250
46124|code|SUBS            R3, R0, #1|67-30
46126|code|ADDS            R3, R3, R4|27-25
46128|code|CMP             R3, R6|179-66
46130|code|BLT             loc_B418|241-219
46132|code|LDR             R3, [R5]|43-104
46134|code|MOVS            R1, #0x4F ; 'O'|79-33
46136|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|24-74
46138|code|ADD             R0, SP, #0xC|3-168
46140|code|BLX             snprintf|254-247-84-232
46144|code|LDRB            R3, [R5,#0x10]|43-124
46146|code|LSLS            R1, R3, #0x1F|217-7
46148|code|BMI             loc_B45E|11-212
46150|code|LDR             R2, [R5,#4]|106-104
46152|code|SUBS            R4, R6, R4|52-27
46154|code|LDR             R3, [R5,#0xC]|235-104
46156|code|ADD             R5, SP, #0xC|3-173
46158|code|ADDS            R4, R4, R2|164-24
46160|code|RSB.W           R1, R0, #0x4F ; 'O'|192-241-79-1
46164|code|LDR             R2, =a0Lu; "%0*lu"|18-74
46166|code|ADDS            R0, R5, R0|40-24
46168|code|STR             R4, [SP]|0-148
46170|code|BLX             snprintf|254-247-70-232
46174|code|ADD             R0, SP, #0xC|3-168
46176|code|BLX             __strdup|254-247-78-232
46180|code|B               loc_B468|0-224
46182|code|MOVS            R0, #0|0-32
46184|code|LDR             R2, [SP,#0x5C]|23-154
46186|code|LDR             R3, [R7]|59-104
46188|code|CMP             R2, R3|154-66
46190|code|BNE             loc_B476|2-209
46192|code|ADD             SP, SP, #0x60 ; '`'|24-176
46194|code|POP.W           {R4-R10,PC}|189-232-240-135
46198|code|BLX             __stack_chk_fail|253-247-136-239
46202|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|10-72
46204|code|MOVW            R2, #0x6FD|64-242-253-98
46208|code|LDR             R1, =unk_F8A8|9-73
46210|code|LDR             R3, =aHostlistNth; "hostlist_nth"|10-75
46212|code|BLX             __assert_fail|254-247-198-232
46216|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
46218|code|MOVW            R2, #0x6FD|64-242-253-98
46222|code|LDR             R1, =unk_F8A8|6-73
46224|code|LDR             R3, =aHostlistNth; "hostlist_nth"|6-75
46226|code|BLX             __assert_fail|254-247-192-232
46230|data|ALIGN 4|0-191
46232|data|DCD __stack_chk_guard|56-133-1-0
46236|data|DCD aRegcompFailedS+0x10; "%s"|180-1-1-0
46240|data|DCD a0Lu; "%0*lu"|220-249-0-0
46244|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
46248|data|DCD unk_F8A8|168-248-0-0
46252|data|DCD aHostlistNth; "hostlist_nth"|120-246-0-0
46256|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
46260|code|PUSH            {R3,LR}|8-181
46262|code|CBZ             R0, loc_B4C6|48-177
46264|code|LDR             R2, [R0]|2-104
46266|code|MOVW            R3, #0xDEAD|77-246-173-99
46270|code|CMP             R2, R3|154-66
46272|code|BNE             loc_B4D4|8-209
46274|code|LDR             R0, [R0,#0xC]|192-104
46276|code|POP             {R3,PC}|8-189
46278|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
46280|code|MOVW            R2, #0x737; line|64-242-55-114
46284|code|LDR             R1, =unk_F8A8; file|6-73
46286|code|LDR             R3, =aHostlistCount; "hostlist_count"|7-75
46288|code|BLX             __assert_fail|254-247-160-232
46292|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
46294|code|MOVW            R2, #0x737; line|64-242-55-114
46298|code|LDR             R1, =unk_F8A8; file|3-73
46300|code|LDR             R3, =aHostlistCount; "hostlist_count"|3-75
46302|code|BLX             __assert_fail|254-247-154-232
46306|data|ALIGN 4|0-191
46308|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
46312|data|DCD unk_F8A8|168-248-0-0
46316|data|DCD aHostlistCount; "hostlist_count"|136-246-0-0
46320|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
46324|code|PUSH.W          {R4-R8,LR}|45-233-240-65
46328|code|MOV             R5, R0|5-70
46330|code|CMP             R1, #0|0-41
46332|code|BEQ             loc_B576|59-208
46334|code|MOV             R0, R1|8-70
46336|code|BL              sub_A714|255-247-8-249
46340|code|MOV             R7, R0|7-70
46342|code|CMP             R5, #0|0-45
46344|code|BEQ             loc_B58A|63-208
46346|code|LDR             R2, [R5]|42-104
46348|code|MOVW            R3, #0xDEAD|77-246-173-99
46352|code|CMP             R2, R3|154-66
46354|code|BNE             loc_B57C|51-209
46356|code|LDR             R3, [R5,#8]|171-104
46358|code|CMP             R3, #0|0-43
46360|code|BLE             loc_B566|37-221
46362|code|MOVS            R6, #0|0-38
46364|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
46368|code|MOV             R4, R6|52-70
46370|code|B               loc_B53A|10-224
46372|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
46376|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
46380|code|ADDS            R4, #1|1-52
46382|code|BL              sub_A98C|255-247-45-250
46386|code|LDR             R3, [R5,#8]|171-104
46388|code|CMP             R3, R4|163-66
46390|code|ADD             R6, R0|6-68
46392|code|BLE             loc_B566|21-221
46394|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
46398|code|MOV             R1, R7|57-70
46400|code|MOV.W           R8, R4,LSL#2|79-234-132-8
46404|code|BL              sub_A894|255-247-166-249
46408|code|CMP             R0, #0|0-40
46410|code|BEQ             loc_B524|235-208
46412|code|LDR             R3, [R7,#0xC]|251-104
46414|code|CBZ             R3, loc_B56A|99-177
46416|code|LDR             R3, [R5,#0x10]|43-105
46418|code|LDR.W           R3, [R3,R8]|83-248-8-48
46422|code|LDRB            R2, [R3,#0x10]|26-124
46424|code|LSLS            R0, R2, #0x1F|208-7
46426|code|BMI             loc_B56A|6-212
46428|code|LDR             R2, [R7,#8]|186-104
46430|code|LDR             R3, [R3,#4]|91-104
46432|code|SUBS            R3, R2, R3|211-26
46434|code|ADDS            R6, R3, R6|158-25
46436|code|B               loc_B56A|1-224
46438|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
46442|code|MOV             R0, R7; ptr|56-70
46444|code|BL              sub_A6D0|255-247-176-248
46448|code|MOV             R0, R6|48-70
46450|code|POP.W           {R4-R8,PC}|189-232-240-129
46454|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
46458|code|B               loc_B570|249-231
46460|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|6-72
46462|code|MOVW            R2, #0x747; line|64-242-71-114
46466|code|LDR             R1, =unk_F8A8; file|6-73
46468|code|LDR             R3, =aHostlistFind; "hostlist_find"|6-75
46470|code|BLX             __assert_fail|254-247-70-232
46474|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
46476|code|MOVW            R2, #0x747; line|64-242-71-114
46480|code|LDR             R1, =unk_F8A8; file|2-73
46482|code|LDR             R3, =aHostlistFind; "hostlist_find"|3-75
46484|code|BLX             __assert_fail|254-247-62-232
46488|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
46492|data|DCD unk_F8A8|168-248-0-0
46496|data|DCD aHostlistFind; "hostlist_find"|152-246-0-0
46500|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
46504|code|PUSH.W          {R4-R11,LR}|45-233-240-79
46508|code|SUB             SP, SP, #0x1C|135-176
46510|code|STR             R0, [SP,#0x10]|4-144
46512|code|STR             R1, [SP,#0xC]|3-145
46514|code|STR             R2, [SP,#0x14]|5-146
46516|code|CMP             R0, #0|0-40
46518|code|BEQ.W           loc_B708|0-240-167-128
46522|code|LDR             R4, [SP,#0x10]|4-156
46524|code|MOVW            R3, #0xDEAD|77-246-173-99
46528|code|LDR             R2, [R4]|34-104
46530|code|CMP             R2, R3|154-66
46532|code|BNE.W           loc_B71A|64-240-169-128
46536|code|LDR             R3, [R4,#8]|163-104
46538|code|CMP             R3, #0|0-43
46540|code|ITT GT|196-191
46542|code|MOVGT.W         R11, #0|79-240-0-11
46546|code|STRGT.W         R11, [SP,#8]|205-248-8-176
46550|code|BLE.W           loc_B6FE|64-243-146-128
46554|code|LDR             R4, [SP,#0xC]|3-156
46556|code|MOVS            R3, #0|0-35
46558|code|RSB.W           R8, R11, R4|203-235-4-8
46562|code|CMP             R4, R8|68-69
46564|code|BCC             loc_B672|69-211
46566|code|LDR             R4, [SP,#0x10]|4-156
46568|code|LDR             R3, [R4,#0x10]|35-105
46570|code|LDR             R4, [SP,#8]|2-156
46572|code|LDR.W           R7, [R3,R4,LSL#2]|83-248-36-112
46576|code|CMP.W           R8, #0|184-241-0-15
46580|code|BEQ.W           loc_B716|0-240-143-128
46584|code|LDRB            R6, [R7,#0x10]|62-124
46586|code|LDR             R4, [SP,#0x14]|5-156
46588|code|ANDS.W          R6, R6, #1|22-240-1-6
46592|code|ADD.W           R9, R4, R11|4-235-11-9
46596|code|BNE             loc_B6E2|109-209
46598|code|LDR             R5, [R7,#4]|125-104
46600|code|LDR             R3, [R7,#8]|187-104
46602|code|CMP             R5, R3|157-66
46604|code|BHI             loc_B6F4|114-216
46606|code|MOV.W           R10, #0x2C ; ','|79-240-44-10
46610|code|B               loc_B624|7-224
46612|code|ADDS            R0, R6, R0|48-24
46614|code|ADDS            R5, #1|1-53
46616|code|ADDS            R6, R0, #1|70-28
46618|code|STRB.W          R10, [R9,R0]|9-248-0-160
46622|code|LDR             R3, [R7,#8]|187-104
46624|code|CMP             R5, R3|157-66
46626|code|BHI             loc_B6C2|78-216
46628|code|RSB.W           R4, R6, R8|198-235-8-4
46632|code|LDR.W           LR, [R7,#0xC]|215-248-12-224
46636|code|CMP             R8, R4|160-69
46638|code|IT CC|56-191
46640|code|MOVCC           R4, #0|0-36
46642|code|LDR             R3, [R7]|59-104
46644|code|ADD.W           R0, R9, R6|9-235-6-0
46648|code|LDR             R2, =aS0Lu; "%s%0*lu"|59-74
46650|code|MOV             R1, R4|33-70
46652|code|STR.W           LR, [SP]|205-248-0-224
46656|code|STR             R5, [SP,#4]|1-149
46658|code|BLX             snprintf|253-247-82-239
46662|code|CMP             R4, R0|132-66
46664|code|ITE HI|140-191
46666|code|MOVHI           R4, #0|0-36
46668|code|MOVLS           R4, #1|1-36
46670|code|ORRS.W          R4, R4, R0,LSR#31|84-234-208-116
46674|code|BEQ             loc_B614|223-208
46676|code|ADD             R9, R8|193-68
46678|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46682|code|MOVS            R2, #1|1-34
46684|code|MOV             R0, R3|24-70
46686|code|MOVS            R1, #0|0-33
46688|code|STRB.W          R1, [R9,#-1]|9-248-1-28
46692|code|CMP             R8, R0|128-69
46694|code|ITE CS|44-191
46696|code|MOVCS           R0, R2|16-70
46698|code|ORRCC.W         R0, R2, #1|66-240-1-0
46702|code|CMP             R0, #0|0-40
46704|code|BNE             loc_B6DA|51-209
46706|code|LDR             R4, [SP,#8]|2-156
46708|code|ADD             R3, R11|91-68
46710|code|MOVS            R2, #0x2C ; ','|44-34
46712|code|ADD.W           R11, R3, #1|3-241-1-11
46716|code|ADDS            R4, #1|1-52
46718|code|STR             R4, [SP,#8]|2-148
46720|code|LDR             R4, [SP,#0x14]|5-156
46722|code|STRB            R2, [R4,R3]|226-84
46724|code|LDR             R4, [SP,#0x10]|4-156
46726|code|LDR             R3, [R4,#8]|163-104
46728|code|LDR             R4, [SP,#8]|2-156
46730|code|CMP             R3, R4|163-66
46732|code|BGT             loc_B5DA|165-220
46734|code|MOVS            R0, #0|0-32
46736|code|MOVS            R2, #0|0-34
46738|code|CMP.W           R11, #0|187-241-0-15
46742|code|MOV             R3, R11|91-70
46744|code|ITTT GT|194-191
46746|code|ADDGT.W         R11, R11, #0xFFFFFFFF|11-241-255-59
46750|code|MOVGT           R2, R11|90-70
46752|code|MOVGT           R3, R11|91-70
46754|code|LDR             R4, [SP,#0x14]|5-156
46756|code|MOVS            R1, #0|0-33
46758|code|CMP             R0, R1|136-66
46760|code|IT NE|24-191
46762|code|MOVNE.W         R11, #0xFFFFFFFF|79-240-255-59
46766|code|STRB            R1, [R4,R2]|161-84
46768|code|LDR             R4, [SP,#0xC]|3-156
46770|code|CMP             R4, R3|156-66
46772|code|IT EQ|8-191
46774|code|MOVEQ.W         R11, #0xFFFFFFFF|79-240-255-59
46778|code|MOV             R0, R11|88-70
46780|code|ADD             SP, SP, #0x1C|7-176
46782|code|POP.W           {R4-R11,PC}|189-232-240-143
46786|code|LSRS            R2, R0, #0x1F|194-15
46788|code|MOV             R3, R0|3-70
46790|code|MOVS            R1, #0|0-33
46792|code|STRB.W          R1, [R9,R0]|9-248-0-16
46796|code|CMP             R8, R0|128-69
46798|code|ITE CS|44-191
46800|code|MOVCS           R0, R2|16-70
46802|code|ORRCC.W         R0, R2, #1|66-240-1-0
46806|code|CMP             R0, #0|0-40
46808|code|BEQ             loc_B672|203-208
46810|code|LDR.W           R11, [SP,#0xC]|221-248-12-176
46814|code|MOVS            R0, #1|1-32
46816|code|B               loc_B690|214-231
46818|code|LDR             R3, [R7]|59-104
46820|code|MOV             R0, R9|72-70
46822|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|17-74
46824|code|MOV             R1, R8|65-70
46826|code|BLX             snprintf|253-247-254-238
46830|code|MOV             R3, R0|3-70
46832|code|LSRS            R2, R0, #0x1F|194-15
46834|code|B               loc_B664|183-231
46836|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46840|code|MOVS            R2, #1|1-34
46842|code|MOV             R0, R3|24-70
46844|code|B               loc_B6C6|227-231
46846|code|MOVS            R3, #0|0-35
46848|code|MOV             R0, R3|24-70
46850|code|MOV             R2, R3|26-70
46852|code|MOV             R11, R3|155-70
46854|code|B               loc_B6A2|204-231
46856|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
46858|code|MOV.W           R2, #0x7F8|79-244-255-98
46862|code|LDR             R1, =unk_F8A8|9-73
46864|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|9-75
46866|code|BLX             __assert_fail|253-247-128-239
46870|code|MOV             R3, R8|67-70
46872|code|B               loc_B672|171-231
46874|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
46876|code|MOV.W           R2, #0x7F8|79-244-255-98
46880|code|LDR             R1, =unk_F8A8|4-73
46882|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|5-75
46884|code|BLX             __assert_fail|253-247-118-239
46888|data|DCD aS0Lu; "%s%0*lu"|84-250-0-0
46892|data|DCD aRegcompFailedS+0x10; "%s"|180-1-1-0
46896|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
46900|data|DCD unk_F8A8|168-248-0-0
46904|data|DCD aHostlistDerang; "hostlist_deranged_string"|168-246-0-0
46908|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
46912|code|PUSH.W          {R4-R8,LR}|45-233-240-65
46916|code|SUB             SP, SP, #8|130-176
46918|code|MOVS            R3, #0|0-35
46920|code|MOV             R6, R0|6-70
46922|code|MOV             R5, R1|13-70
46924|code|MOV             R7, R2|23-70
46926|code|STR             R3, [SP,#0x20+var_1C]|1-147
46928|code|CMP             R0, #0|0-40
46930|code|BEQ             loc_B7F8|81-208
46932|code|LDR             R1, [R0]|1-104
46934|code|MOVW            R2, #0xDEAD|77-246-173-98
46938|code|CMP             R1, R2|145-66
46940|code|BNE             loc_B7EA|69-209
46942|code|LDR             R2, [R0,#8]|130-104
46944|code|MOV             R4, R3|28-70
46946|code|MOV.W           R8, #0x2C ; ','|79-240-44-8
46950|code|CMP             R3, R2|147-66
46952|code|ITE GE|172-191
46954|code|MOVGE           R3, #0|0-35
46956|code|MOVLT           R3, #1|1-35
46958|code|CMP             R4, R5|172-66
46960|code|ITE CS|44-191
46962|code|MOVCS           R3, #0|0-35
46964|code|ANDCC.W         R3, R3, #1|3-240-1-3
46968|code|CBZ             R3, loc_B7B6|235-177
46970|code|ADDS            R3, R7, R4|59-25
46972|code|SUBS            R2, R5, R4|42-27
46974|code|MOV             R0, R6|48-70
46976|code|ADD             R1, SP, #0x20+var_1C|1-169
46978|code|BL              sub_ADC8|255-247-33-251
46982|code|LDR             R2, [R6,#8]|178-104
46984|code|ADDS            R4, R4, R0|36-24
46986|code|CMP             R4, #0|0-44
46988|code|ITE LE|212-191
46990|code|MOVLE           R3, #0|0-35
46992|code|MOVGT           R3, #1|1-35
46994|code|CMP             R4, R5|172-66
46996|code|ITE CS|44-191
46998|code|MOVCS           R3, #0|0-35
47000|code|ANDCC.W         R3, R3, #1|3-240-1-3
47004|code|CBNZ            R3, loc_B7DA|235-185
47006|code|LDR             R3, [SP,#0x20+var_1C]|1-155
47008|code|CMP             R3, R2|147-66
47010|code|ITE GE|172-191
47012|code|MOVGE           R3, #0|0-35
47014|code|MOVLT           R3, #1|1-35
47016|code|CMP             R4, R5|172-66
47018|code|ITE CS|44-191
47020|code|MOVCS           R3, #0|0-35
47022|code|ANDCC.W         R3, R3, #1|3-240-1-3
47026|code|CMP             R3, #0|0-43
47028|code|BNE             loc_B77A|225-209
47030|code|CMP             R5, R4|165-66
47032|code|ITT HI|132-191
47034|code|BICHI.W         R2, R4, R4,ASR#31|36-234-228-114
47038|code|STRBHI          R3, [R7,R2]|187-84
47040|code|BHI             loc_B7D2|7-216
47042|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
47046|code|CBZ             R5, loc_B7D2|37-177
47048|code|ADDS            R5, R7, R5|125-25
47050|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
47054|code|STRB.W          R3, [R5,#-1]|5-248-1-60
47058|code|MOV             R0, R4|32-70
47060|code|ADD             SP, SP, #8|2-176
47062|code|POP.W           {R4-R8,PC}|189-232-240-129
47066|code|LDR             R3, [SP,#0x20+var_1C]|1-155
47068|code|CMP             R2, R3|154-66
47070|code|BLE             loc_B766|194-221
47072|code|STRB.W          R8, [R7,R4]|7-248-4-128
47076|code|ADDS            R4, #1|1-52
47078|code|LDR             R2, [R6,#8]|178-104
47080|code|B               loc_B766|189-231
47082|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47084|code|MOVW            R2, #0x851; line|64-246-81-2
47088|code|LDR             R1, =unk_F8A8; file|6-73
47090|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|7-75
47092|code|BLX             __assert_fail|253-247-14-239
47096|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
47098|code|MOVW            R2, #0x851; line|64-246-81-2
47102|code|LDR             R1, =unk_F8A8; file|3-73
47104|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|3-75
47106|code|BLX             __assert_fail|253-247-8-239
47110|data|ALIGN 4|0-191
47112|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
47116|data|DCD unk_F8A8|168-248-0-0
47120|data|DCD aHostlistRanged; "hostlist_ranged_string"|196-246-0-0
47124|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
47128|code|PUSH            {R4,LR}|16-181
47130|code|MOV             R4, R0|4-70
47132|code|MOVS            R0, #0x18|24-32
47134|code|BLX             malloc|253-247-14-238
47138|code|CBZ             R0, loc_B852|176-177
47140|code|MOVS            R3, #0|0-35
47142|code|MOVW            R2, #0xDEAD|77-246-173-98
47146|code|STR             R3, [R0,#4]|67-96
47148|code|STR             R3, [R0,#0xC]|195-96
47150|code|STR             R3, [R0,#8]|131-96
47152|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
47156|code|STR             R0, [R0,#0x14]|64-97
47158|code|STR             R3, [R0,#0x10]|3-97
47160|code|STR             R2, [R0]|2-96
47162|code|CBZ             R4, loc_B86A|180-177
47164|code|LDR             R3, [R4]|35-104
47166|code|CMP             R3, R2|147-66
47168|code|BNE             loc_B878|26-209
47170|code|LDR             R3, [R4,#0x10]|35-105
47172|code|LDR             R2, [R4,#0x14]|98-105
47174|code|STR             R4, [R0,#4]|68-96
47176|code|LDR             R3, [R3]|27-104
47178|code|STR             R2, [R0,#0x14]|66-97
47180|code|STR             R0, [R4,#0x14]|96-97
47182|code|STR             R3, [R0,#0xC]|195-96
47184|code|POP             {R4,PC}|16-189
47186|code|BLX             __errno_location|253-247-68-238
47190|code|MOVS            R3, #0xC|12-35
47192|code|MOVW            R1, #0x879|64-246-121-1
47196|code|LDR             R2, =aHostlistIterat_0; "hostlist_iterator_create"|10-74
47198|code|STR             R3, [R0]|3-96
47200|code|LDR             R0, =unk_F8A8|10-72
47202|code|POP.W           {R4,LR}|189-232-16-64
47206|code|B.W             sub_A5E0|254-247-187-190
47210|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
47212|code|MOVW            R2, #0x87B|64-246-123-2
47216|code|LDR             R1, =unk_F8A8|6-73
47218|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_create"|8-75
47220|code|BLX             __assert_fail|253-247-206-238
47224|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47226|code|MOVW            R2, #0x87B|64-246-123-2
47230|code|LDR             R1, =unk_F8A8|3-73
47232|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_create"|4-75
47234|code|BLX             __assert_fail|253-247-200-238
47238|data|ALIGN 4|0-191
47240|data|DCD aHostlistIterat_0; "hostlist_iterator_create"|92-250-0-0
47244|data|DCD unk_F8A8|168-248-0-0
47248|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
47252|data|DCD aHostlistIterat_1; "hostlist_iterator_create"|220-246-0-0
47256|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
47260|code|LDR             R0, [R0]|0-104
47262|code|B.W             loc_B818|255-247-187-191
47266|data|ALIGN 4|0-191
47268|code|PUSH            {R3,LR}|8-181
47270|code|CBZ             R0, loc_B8C6|112-177
47272|code|LDR             R2, [R0]|2-104
47274|code|MOVW            R3, #0xDEAD|77-246-173-99
47278|code|CMP             R2, R3|154-66
47280|code|BNE             loc_B8D4|16-209
47282|code|LDR             R3, [R0,#4]|67-104
47284|code|MOVS            R2, #0|0-34
47286|code|STR             R2, [R0,#8]|130-96
47288|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
47292|code|LDR             R3, [R3,#0x10]|27-105
47294|code|LDR             R3, [R3]|27-104
47296|code|STR             R2, [R0,#0x10]|2-97
47298|code|STR             R3, [R0,#0xC]|195-96
47300|code|POP             {R3,PC}|8-189
47302|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
47304|code|MOVW            R2, #0x88B; line|64-246-139-2
47308|code|LDR             R1, =unk_F8A8; file|6-73
47310|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_reset"|7-75
47312|code|BLX             __assert_fail|253-247-160-238
47316|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|6-72
47318|code|MOVW            R2, #0x88C; line|64-246-140-2
47322|code|LDR             R1, =unk_F8A8; file|3-73
47324|code|LDR             R3, =aHostlistIterat_2; "hostlist_iterator_reset"|3-75
47326|code|BLX             __assert_fail|253-247-154-238
47330|data|ALIGN 4|0-191
47332|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
47336|data|DCD unk_F8A8|168-248-0-0
47340|data|DCD aHostlistIterat_2; "hostlist_iterator_reset"|248-246-0-0
47344|data|DCD aIMagic57005; "i->magic == 57005"|140-250-0-0
47348|code|PUSH            {R4-R6,LR}|112-181
47350|code|MOV             R5, R1|13-70
47352|code|LDR             R4, [R0,#0x14]|68-105
47354|code|MOV             R6, R2|22-70
47356|code|CBNZ            R4, loc_B908|36-185
47358|code|B               locret_B92C|21-224
47360|code|CMP             R3, R5|171-66
47362|code|BEQ             loc_B92E|20-208
47364|code|LDR             R4, [R4,#0x14]|100-105
47366|code|CBZ             R4, locret_B92C|140-177
47368|code|LDR             R3, [R4,#8]|163-104
47370|code|CMP             R6, #0|0-46
47372|code|BEQ             loc_B900|248-208
47374|code|CMP             R5, R3|157-66
47376|code|RSB.W           R2, R6, R3|198-235-3-2
47380|code|BGT             loc_B904|246-220
47382|code|CMP             R2, #0|0-42
47384|code|STR             R2, [R4,#8]|162-96
47386|code|BLT             loc_B93C|15-219
47388|code|LDR             R3, [R4,#4]|99-104
47390|code|LDR             R3, [R3,#0x10]|27-105
47392|code|LDR.W           R3, [R3,R2,LSL#2]|83-248-34-48
47396|code|STR             R3, [R4,#0xC]|227-96
47398|code|LDR             R4, [R4,#0x14]|100-105
47400|code|CMP             R4, #0|0-44
47402|code|BNE             loc_B908|237-209
47404|code|POP             {R4-R6,PC}|112-189
47406|code|LDR             R3, [R4,#0x10]|35-105
47408|code|CMP             R3, #0|0-43
47410|code|ADD.W           R3, R3, #0xFFFFFFFF|3-241-255-51
47414|code|IT GE|168-191
47416|code|STRGE           R3, [R4,#0x10]|35-97
47418|code|B               loc_B904|227-231
47420|code|MOV             R0, R4|32-70
47422|code|BL              sub_B8A4|255-247-177-255
47426|code|B               loc_B904|223-231
47428|code|PUSH            {R3-R7,LR}|248-181
47430|code|CMP             R0, #0|0-40
47432|code|BEQ             loc_B9A2|43-208
47434|code|LDR             R2, [R0]|2-104
47436|code|MOVW            R3, #0xDEAD|77-246-173-99
47440|code|CMP             R2, R3|154-66
47442|code|BNE             loc_B9BE|52-209
47444|code|LDR             R7, [R0,#8]|135-104
47446|code|CMP             R7, R1|143-66
47448|code|ITE GT|204-191
47450|code|MOVGT           R3, #0|0-35
47452|code|MOVLE           R3, #1|1-35
47454|code|ORRS.W          R3, R3, R1,LSR#31|83-234-209-115
47458|code|BNE             loc_B9B0|37-209
47460|code|LDR             R2, [R0,#0x10]|2-105
47462|code|SUBS            R7, #1|1-63
47464|code|LSLS            R3, R1, #2|139-0
47466|code|CMP             R1, R7|185-66
47468|code|MOV             R5, R2|21-70
47470|code|LDR.W           R4, [R2,R1,LSL#2]|82-248-33-64
47474|code|BGE             loc_B98A|10-218
47476|code|MOV             R5, R1|13-70
47478|code|B               loc_B97A|0-224
47480|code|LDR             R2, [R0,#0x10]|2-105
47482|code|ADDS            R6, R2, R3|214-24
47484|code|ADDS            R3, #4|4-51
47486|code|ADDS            R5, #1|1-53
47488|code|LDR             R2, [R2,R3]|210-88
47490|code|CMP             R5, R7|189-66
47492|code|STR             R2, [R6]|50-96
47494|code|BLT             loc_B978|247-219
47496|code|LDR             R5, [R0,#0x10]|5-105
47498|code|STR             R7, [R0,#8]|135-96
47500|code|MOVS            R3, #0|0-35
47502|code|MOVS            R2, #1|1-34
47504|code|STR.W           R3, [R5,R7,LSL#2]|69-248-39-48
47508|code|BL              sub_B8F4|255-247-174-255
47512|code|MOV             R0, R4; ptr|32-70
47514|code|POP.W           {R3-R7,LR}|189-232-248-64
47518|code|B.W             sub_A6F8|254-247-171-190
47522|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
47524|code|MOVW            R2, #0x48F; line|64-242-143-66
47528|code|LDR             R1, =unk_F8A8; file|9-73
47530|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|10-75
47532|code|BLX             __assert_fail|253-247-50-238
47536|code|LDR             R0, =aNHlNrangesN0; "n < hl->nranges && n >= 0"|9-72
47538|code|MOVW            R2, #0x491; line|64-242-145-66
47542|code|LDR             R1, =unk_F8A8; file|6-73
47544|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|6-75
47546|code|BLX             __assert_fail|253-247-44-238
47550|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|7-72
47552|code|MOV.W           R2, #0x490; line|79-244-146-98
47556|code|LDR             R1, =unk_F8A8; file|2-73
47558|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|3-75
47560|code|BLX             __assert_fail|253-247-36-238
47564|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
47568|data|DCD unk_F8A8|168-248-0-0
47572|data|DCD aHostlistDelete; "hostlist_delete_range"|16-247-0-0
47576|data|DCD aNHlNrangesN0; "n < hl->nranges && n >= 0"|160-250-0-0
47580|data|DCD aHlMagic57005; "hl->magic == 57005"|0-250-0-0
47584|code|PUSH            {R4-R6,LR}|112-181
47586|code|MOV             R4, R0|4-70
47588|code|MOV             R5, R1|13-70
47590|code|CBZ             R0, loc_BA24|232-177
47592|code|LDR             R2, [R0]|2-104
47594|code|MOVW            R3, #0xDEAD|77-246-173-99
47598|code|CMP             R2, R3|154-66
47600|code|BNE             loc_BA4E|45-209
47602|code|CMP             R1, #0|0-41
47604|code|BLE             loc_BA40|36-221
47606|code|LDR             R3, [R0,#8]|131-104
47608|code|CMP             R1, R3|153-66
47610|code|BGE             loc_BA32|26-218
47612|code|LDR             R3, [R0,#0x10]|3-105
47614|code|SUBS            R2, R1, #1|74-30
47616|code|LDR.W           R1, [R3,R1,LSL#2]|83-248-33-16
47620|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
47624|code|BL              sub_ACEC|255-247-112-249
47628|code|CMP             R0, #0|0-40
47630|code|MOV             R6, R0|6-70
47632|code|BLT             loc_BA20|6-219
47634|code|MOV             R0, R4|32-70
47636|code|MOV             R1, R5|41-70
47638|code|BL              sub_B944|255-247-149-255
47642|code|LDR             R3, [R4,#0xC]|227-104
47644|code|SUBS            R3, R3, R6|155-27
47646|code|STR             R3, [R4,#0xC]|227-96
47648|code|MOV             R0, R6|48-70
47650|code|POP             {R4-R6,PC}|112-189
47652|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|13-72
47654|code|MOVW            R2, #0x7CE; line|64-242-206-114
47658|code|LDR             R1, =unk_F8A8; file|13-73
47660|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|13-75
47662|code|BLX             __assert_fail|253-247-242-237
47666|code|LDR             R0, =aLocHlNranges; "loc < hl->nranges"|13-72
47668|code|MOVW            R2, #0x7D1; line|64-242-209-114
47672|code|LDR             R1, =unk_F8A8; file|9-73
47674|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|10-75
47676|code|BLX             __assert_fail|253-247-234-237
47680|code|LDR             R0, =aLoc0; "loc > 0"|10-72
47682|code|MOV.W           R2, #0x7D0; line|79-244-250-98
47686|code|LDR             R1, =unk_F8A8; file|6-73
47688|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|6-75
47690|code|BLX             __assert_fail|253-247-228-237
47694|code|LDR             R0, =aHlMagic57005; "hl->magic == 57005"|8-72
47696|code|MOVW            R2, #0x7CF; line|64-242-207-114
47700|code|LDR             R1, =unk_F8A8; file|2-73
47702|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|3-75
47704|code|BLX             __assert_fail|253-247-220-237
47708|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
47712|data|DCD unk_F8A8|168-248-0-0
47716|data|DCD aAttemptRangeJo; "_attempt_range_join"|40-247-0-0
47720|data|DCD aLocHlNranges; "loc < hl->nranges"|196-250-0-0
47724|data|DCD aLoc0; "loc > 0"|188-250-0-0
47728|data|DCD aHlMagic57005; "hl->magic == 57005"|0-250-0-0
47732|code|PUSH            {R3-R5,LR}|56-181
47734|code|MOV             R4, R0|4-70
47736|code|CBZ             R0, loc_BABE|8-179
47738|code|LDR             R2, [R0]|2-104
47740|code|MOVW            R3, #0xDEAD|77-246-173-99
47744|code|CMP             R2, R3|154-66
47746|code|BNE             loc_BACC|35-209
47748|code|LDR             R1, [R0,#8]; nmemb|129-104
47750|code|CMP             R1, #1|1-41
47752|code|BLE             locret_BABC|24-221
47754|code|LDR             R0, [R0,#0x10]; base|0-105
47756|code|MOVS            R2, #4; size|4-34
47758|code|LDR             R3, =(sub_ACE4+1); compar|19-75
47760|code|MOVS            R5, #1|1-37
47762|code|BLX             qsort|253-247-126-237
47766|code|B               loc_BAA6|6-224
47768|code|MOV             R1, R5|41-70
47770|code|MOV             R0, R4|32-70
47772|code|BL              sub_B9E0|255-247-160-255
47776|code|CMP             R0, #0|0-40
47778|code|IT LT|184-191
47780|code|ADDLT           R5, #1|1-53
47782|code|LDR             R3, [R4,#8]|163-104
47784|code|CMP             R5, R3|157-66
47786|code|BLT             loc_BA98|245-219
47788|code|LDR             R4, [R4,#0x14]|100-105
47790|code|CBZ             R4, locret_BABC|44-177
47792|code|MOV             R0, R4|32-70
47794|code|BL              sub_B8A4|255-247-247-254
47798|code|LDR             R4, [R4,#0x14]|100-105
47800|code|CMP             R4, #0|0-44
47802|code|BNE             loc_BAB0|249-209
47804|code|POP             {R3-R5,PC}|56-189
47806|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|8-72
47808|code|MOVW            R2, #0x7DE; line|64-242-222-114
47812|code|LDR             R1, =unk_F8A8; file|7-73
47814|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|8-75
47816|code|BLX             __assert_fail|253-247-164-237
47820|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
47822|code|MOVW            R2, #0x7DE; line|64-242-222-114
47826|code|LDR             R1, =unk_F8A8; file|4-73
47828|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|4-75
47830|code|BLX             __assert_fail|253-247-158-237
47834|data|ALIGN 4|0-191
47836|data|DCD sub_ACE4+1|229-172-0-0
47840|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
47844|data|DCD unk_F8A8|168-248-0-0
47848|data|DCD aHostlistUniq; "hostlist_uniq"|60-247-0-0
47852|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
47856|code|PUSH.W          {R3-R11,LR}|45-233-248-79
47860|code|MOV             R8, R0|128-70
47862|code|CMP             R0, #0|0-40
47864|code|BEQ.W           loc_BD26|0-240-21-129
47868|code|LDR             R2, [R0]|2-104
47870|code|MOVW            R3, #0xDEAD|77-246-173-99
47874|code|CMP             R2, R3|154-66
47876|code|BNE.W           loc_BCE0|64-240-236-128
47880|code|LDR             R1, [R0,#8]|129-104
47882|code|CMP             R1, #1|1-41
47884|code|BLE.W           locret_BCC2|64-243-217-128
47888|code|LDR             R0, [R0,#0x10]|0-105
47890|code|MOVS            R2, #4|4-34
47892|code|LDR             R3, =(sub_ACE4+1)|140-75
47894|code|BLX             qsort|253-247-60-237
47898|code|LDR.W           R4, [R8,#0x14]|216-248-20-64
47902|code|CBZ             R4, loc_BB2C|44-177
47904|code|MOV             R0, R4|32-70
47906|code|BL              sub_B8A4|255-247-191-254
47910|code|LDR             R4, [R4,#0x14]|100-105
47912|code|CMP             R4, #0|0-44
47914|code|BNE             loc_BB20|249-209
47916|code|LDR.W           R2, [R8]|216-248-0-32
47920|code|MOVW            R3, #0xDEAD|77-246-173-99
47924|code|CMP             R2, R3|154-66
47926|code|BNE.W           loc_BD18|64-240-239-128
47930|code|LDR.W           R5, [R8,#8]|216-248-8-80
47934|code|SUBS            R5, #1|1-61
47936|code|CMP             R5, #0|0-45
47938|code|BLE.W           locret_BCC2|64-243-190-128
47942|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
47946|code|SUBS            R6, R5, #1|110-30
47948|code|B               loc_BB5C|6-224
47950|code|CMP             R6, #0|0-46
47952|code|MOV             R5, R6|53-70
47954|code|BLE.W           loc_BC84|64-243-151-128
47958|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
47962|code|SUBS            R6, #1|1-62
47964|code|LDR.W           R7, [R3,R6,LSL#2]|83-248-38-112
47968|code|MOV.W           R10, R5,LSL#2|79-234-133-10
47972|code|MOV.W           R11, R6,LSL#2|79-234-134-11
47976|code|LDR.W           R9, [R3,R5,LSL#2]|83-248-37-144
47980|code|CMP             R7, #0|0-47
47982|code|BEQ.W           loc_BD0A|0-240-204-128
47986|code|CMP.W           R9, #0|185-241-0-15
47990|code|BEQ.W           loc_BCFC|0-240-193-128
47994|code|LDRB            R3, [R7,#0x10]|59-124
47996|code|LSLS            R2, R3, #0x1F|218-7
47998|code|BMI             loc_BB4E|230-212
48000|code|LDRB.W          R3, [R9,#0x10]|153-248-16-48
48004|code|LSLS            R3, R3, #0x1F|219-7
48006|code|BMI             loc_BB4E|226-212
48008|code|MOV             R0, R7|56-70
48010|code|MOV             R1, R9|73-70
48012|code|BL              sub_AC8C|255-247-126-248
48016|code|CMP             R0, #0|0-40
48018|code|BGT.W           loc_BD38|0-243-209-128
48022|code|MOV             R0, R7|56-70
48024|code|MOV             R1, R9|73-70
48026|code|BL              sub_A8F8|254-247-173-254
48030|code|CMP             R0, #0|0-40
48032|code|BNE             loc_BB4E|213-209
48034|code|LDR             R2, [R7,#8]|186-104
48036|code|LDR.W           R3, [R9,#4]|217-248-4-48
48040|code|CMP             R2, R3|154-66
48042|code|BLS             loc_BB4E|208-217
48044|code|MOV             R0, R7|56-70
48046|code|MOV             R1, R9|73-70
48048|code|BL              sub_A9C0|254-247-6-255
48052|code|CMP             R0, #0|0-40
48054|code|BEQ             loc_BB4E|202-208
48056|code|MOV             R0, R7|56-70
48058|code|BL              sub_ABCC|255-247-7-248
48062|code|MOV             R4, R0|4-70
48064|code|CMP             R0, #0|0-40
48066|code|BEQ             loc_BB4E|196-208
48068|code|LDR.W           R0, [R8,#0x10]|216-248-16-0
48072|code|LDR             R2, [R7,#8]|186-104
48074|code|LDR.W           R1, [R9,#8]|217-248-8-16
48078|code|LDR.W           R6, [R0,R11]|80-248-11-96
48082|code|LDR.W           R3, [R9,#4]|217-248-4-48
48086|code|CMP             R1, R2|145-66
48088|code|IT CS|40-191
48090|code|MOVCS           R1, R2|17-70
48092|code|LDR.W           R7, [R0,R10]|80-248-10-112
48096|code|STR             R1, [R4,#8]|161-96
48098|code|MOV             R0, R6|48-70
48100|code|LDR             R2, [R6,#8]|178-104
48102|code|STR             R3, [R4,#4]|99-96
48104|code|CMP             R2, R1|138-66
48106|code|IT HI|136-191
48108|code|STRHI           R2, [R7,#8]|186-96
48110|code|STR             R3, [R6,#8]|179-96
48112|code|LDR.W           R9, [R4,#8]|212-248-8-144
48116|code|STR.W           R9, [R7,#4]|199-248-4-144
48120|code|BL              sub_AA08|254-247-6-255
48124|code|CBZ             R0, loc_BC0A|40-177
48126|code|MOV             R0, R8|64-70
48128|code|MOV             R1, R5|41-70
48130|code|BL              sub_B944|255-247-159-254
48134|code|LDR.W           R9, [R4,#8]|212-248-8-144
48138|code|LDR             R1, [R4,#4]|97-104
48140|code|CMP             R1, R9|73-69
48142|code|BLS             loc_BC2A|12-217
48144|code|B               loc_BC70|46-224
48146|code|LDR             R2, [R7,#4]|122-104
48148|code|CMP             R2, R3|154-66
48150|code|BHI             loc_BC52|28-216
48152|code|MOV             R0, R9|72-70
48154|code|BL              sub_A6F8|254-247-109-253
48158|code|LDR             R1, [R4,#4]|97-104
48160|code|LDR             R3, [R4,#8]|163-104
48162|code|ADDS            R1, #1|1-49
48164|code|STR             R1, [R4,#4]|97-96
48166|code|CMP             R1, R3|153-66
48168|code|BHI             loc_BC70|34-216
48170|code|LDR             R3, [R4,#0xC]|227-104
48172|code|MOV             R2, R1|10-70
48174|code|LDR             R0, [R4]|32-104
48176|code|BL              sub_AB48|254-247-138-255
48180|code|LDR             R3, [R4,#4]|99-104
48182|code|LDR             R2, [R6,#8]|178-104
48184|code|CMP             R3, R2|147-66
48186|code|MOV             R9, R0|129-70
48188|code|BLS             loc_BC12|233-217
48190|code|MOV             R2, R5|42-70
48192|code|MOV             R0, R8|64-70
48194|code|MOV             R1, R9|73-70
48196|code|ADDS            R5, #1|1-53
48198|code|BL              sub_B0DC|255-247-73-250
48202|code|LDR             R3, [R4,#4]|99-104
48204|code|LDR             R2, [R7,#4]|122-104
48206|code|CMP             R2, R3|154-66
48208|code|BLS             loc_BC18|226-217
48210|code|MOV             R2, R5|42-70
48212|code|MOV             R1, R9|73-70
48214|code|MOV             R0, R8|64-70
48216|code|ADDS            R5, #1|1-53
48218|code|BL              sub_B0DC|255-247-63-250
48222|code|MOV             R0, R9|72-70
48224|code|BL              sub_A6F8|254-247-74-253
48228|code|LDR             R1, [R4,#4]|97-104
48230|code|LDR             R3, [R4,#8]|163-104
48232|code|ADDS            R1, #1|1-49
48234|code|STR             R1, [R4,#4]|97-96
48236|code|CMP             R1, R3|153-66
48238|code|BLS             loc_BC2A|220-217
48240|code|LDR.W           R5, [R8,#8]|216-248-8-80
48244|code|MOV             R0, R4|32-70
48246|code|BL              sub_A6F8|254-247-63-253
48250|code|SUBS            R6, R5, #1|110-30
48252|code|CMP             R6, #0|0-46
48254|code|MOV             R5, R6|53-70
48256|code|BGT.W           loc_BB56|63-247-105-175
48260|code|LDR.W           R2, [R8]|216-248-0-32
48264|code|MOVW            R3, #0xDEAD|77-246-173-99
48268|code|CMP             R2, R3|154-66
48270|code|BNE             loc_BCEE|46-209
48272|code|LDR.W           R5, [R8,#8]|216-248-8-80
48276|code|SUBS            R5, #1|1-61
48278|code|CMP             R5, #0|0-45
48280|code|BLE             locret_BD34|76-221
48282|code|LSLS            R4, R5, #2|172-0
48284|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
48288|code|ADDS            R2, R3, R4|26-25
48290|code|LDR             R7, [R3,R4]|31-89
48292|code|LDR.W           R6, [R2,#-4]|82-248-4-108
48296|code|MOV             R1, R7|57-70
48298|code|MOV             R0, R6|48-70
48300|code|BL              sub_A8F8|254-247-36-254
48304|code|CBNZ            R0, loc_BCBC|32-185
48306|code|LDR             R3, [R7,#4]|123-104
48308|code|LDR             R2, [R6,#8]|178-104
48310|code|SUBS            R3, #1|1-59
48312|code|CMP             R2, R3|154-66
48314|code|BEQ             loc_BCC6|4-208
48316|code|SUBS            R4, #4|4-60
48318|code|SUBS            R5, #1|1-61
48320|code|BNE             loc_BC9C|236-209
48322|code|POP.W           {R3-R11,PC}|189-232-248-143
48326|code|MOV             R0, R6|48-70
48328|code|MOV             R1, R7|57-70
48330|code|BL              sub_A9C0|254-247-121-254
48334|code|CMP             R0, #0|0-40
48336|code|BEQ             loc_BCBC|244-208
48338|code|LDR             R3, [R7,#8]|187-104
48340|code|MOV             R0, R8|64-70
48342|code|MOV             R1, R5|41-70
48344|code|STR             R3, [R6,#8]|179-96
48346|code|BL              sub_B944|255-247-51-254
48350|code|B               loc_BCBC|237-231
48352|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|26-72
48354|code|MOV.W           R2, #0x768|79-244-237-98
48358|code|LDR             R1, =unk_F8A8|26-73
48360|code|LDR             R3, =aHostlistSort; "hostlist_sort"|26-75
48362|code|BLX             __assert_fail|253-247-148-236
48366|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|23-72
48368|code|MOVW            R2, #0x783|64-242-131-114
48372|code|LDR             R1, =unk_F8A8|22-73
48374|code|LDR             R3, =aHostlistCollap; "hostlist_collapse"|24-75
48376|code|BLX             __assert_fail|253-247-140-236
48380|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|23-72
48382|code|MOV.W           R2, #0x374|79-244-93-114
48386|code|LDR             R1, =unk_F8A8|19-73
48388|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|22-75
48390|code|BLX             __assert_fail|253-247-134-236
48394|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|22-72
48396|code|MOVW            R2, #0x373|64-242-115-50
48400|code|LDR             R1, =unk_F8A8|15-73
48402|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|19-75
48404|code|BLX             __assert_fail|253-247-126-236
48408|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
48410|code|MOVW            R2, #0x79A|64-242-154-114
48414|code|LDR             R1, =unk_F8A8|12-73
48416|code|LDR             R3, =aHostlistCoales; "hostlist_coalesce"|17-75
48418|code|BLX             __assert_fail|253-247-120-236
48422|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|17-72
48424|code|MOV.W           R2, #0x768|79-244-237-98
48428|code|LDR             R1, =unk_F8A8|8-73
48430|code|LDR             R3, =aHostlistSort; "hostlist_sort"|9-75
48432|code|BLX             __assert_fail|253-247-112-236
48436|code|POP.W           {R3-R11,PC}|189-232-248-143
48440|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|13-72
48442|code|MOVW            R2, #0x379|64-242-121-50
48446|code|LDR             R1, =unk_F8A8|4-73
48448|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|7-75
48450|code|BLX             __assert_fail|253-247-104-236
48454|data|ALIGN 4|0-191
48456|data|DCD sub_ACE4+1|229-172-0-0
48460|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
48464|data|DCD unk_F8A8|168-248-0-0
48468|data|DCD aHostlistSort; "hostlist_sort"|76-247-0-0
48472|data|DCD aHostlistCollap; "hostlist_collapse"|132-247-0-0
48476|data|DCD aH2Void0; "h2 != ((void *)0)"|152-249-0-0
48480|data|DCD aHostrangeInter; "hostrange_intersect"|112-247-0-0
48484|data|DCD aH1Void0; "h1 != ((void *)0)"|4-249-0-0
48488|data|DCD aHostlistCoales; "hostlist_coalesce"|92-247-0-0
48492|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
48496|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|172-249-0-0
48500|code|PUSH.W          {R3-R11,LR}|45-233-248-79
48504|code|MOV             R4, R0|4-70
48506|code|MOV             R9, R1|137-70
48508|code|CMP             R0, #0|0-40
48510|code|BEQ             loc_BE36|90-208
48512|code|LDR             R2, [R0]|2-104
48514|code|MOVW            R3, #0xDEAD|77-246-173-99
48518|code|CMP             R2, R3|154-66
48520|code|BNE             loc_BE28|78-209
48522|code|CMP             R1, #0|0-41
48524|code|BLT             loc_BE1A|69-219
48526|code|LDR.W           R11, [R0,#0xC]|208-248-12-176
48530|code|CMP             R1, R11|89-69
48532|code|BGT             loc_BE1A|65-220
48534|code|LDR.W           R10, [R0,#8]|208-248-8-160
48538|code|CMP.W           R10, #0|186-241-0-15
48542|code|BLE             loc_BDEE|38-221
48544|code|MOVS            R5, #0|0-37
48546|code|LDR.W           R8, [R0,#0x10]|208-248-16-128
48550|code|MOV             R6, R5|46-70
48552|code|B               loc_BDB2|3-224
48554|code|ADDS            R6, #1|1-54
48556|code|ADDS            R5, R5, R0|45-24
48558|code|CMP             R6, R10|86-69
48560|code|BEQ             loc_BDEE|29-208
48562|code|LDR.W           R7, [R8],#4|88-248-4-123
48566|code|MOV             R0, R7|56-70
48568|code|BL              sub_A98C|254-247-232-253
48572|code|SUBS            R3, R0, #1|67-30
48574|code|ADDS            R3, R3, R5|91-25
48576|code|CMP             R9, R3|153-69
48578|code|BGT             loc_BDAA|242-220
48580|code|LDRB            R3, [R7,#0x10]|59-124
48582|code|LDR             R1, [R7,#4]|121-104
48584|code|LSLS            R0, R3, #0x1F|216-7
48586|code|BMI             loc_BE02|26-212
48588|code|ADD             R1, R9|73-68
48590|code|MOV             R0, R7|56-70
48592|code|SUBS            R1, R1, R5|73-27
48594|code|BL              sub_AC04|254-247-23-255
48598|code|MOV             R5, R0|5-70
48600|code|CBZ             R0, loc_BDFA|120-177
48602|code|MOV             R1, R0|1-70
48604|code|ADDS            R2, R6, #1|114-28
48606|code|MOV             R0, R4|32-70
48608|code|BL              sub_B0DC|255-247-124-249
48612|code|MOV             R0, R5; ptr|40-70
48614|code|BL              sub_A6F8|254-247-135-252
48618|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
48622|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
48626|code|MOVS            R0, #1|1-32
48628|code|STR             R3, [R4,#0xC]|227-96
48630|code|POP.W           {R3-R11,PC}|189-232-248-143
48634|code|MOV             R0, R7|56-70
48636|code|BL              sub_AA08|254-247-4-254
48640|code|CBZ             R0, loc_BE0A|24-177
48642|code|MOV             R0, R4|32-70
48644|code|MOV             R1, R6|49-70
48646|code|BL              sub_B944|255-247-157-253
48650|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
48654|code|MOVS            R0, #1|1-32
48656|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
48660|code|STR             R3, [R4,#0xC]|227-96
48662|code|POP.W           {R3-R11,PC}|189-232-248-143
48666|code|LDR             R0, =aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|10-72
48668|code|MOVW            R2, #0x714; line|64-242-20-114
48672|code|LDR             R1, =unk_F8A8; file|9-73
48674|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|10-75
48676|code|BLX             __assert_fail|253-247-246-235
48680|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|9-72
48682|code|MOVW            R2, #0x713; line|64-242-19-114
48686|code|LDR             R1, =unk_F8A8; file|6-73
48688|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|6-75
48690|code|BLX             __assert_fail|253-247-240-235
48694|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
48696|code|MOVW            R2, #0x713; line|64-242-19-114
48700|code|LDR             R1, =unk_F8A8; file|2-73
48702|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|3-75
48704|code|BLX             __assert_fail|253-247-232-235
48708|data|DCD aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|216-250-0-0
48712|data|DCD unk_F8A8|168-248-0-0
48716|data|DCD aHostlistDelete_0; "hostlist_delete_nth"|152-247-0-0
48720|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
48724|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
48728|code|PUSH            {R3-R5,LR}|56-181
48730|code|MOV             R5, R0|5-70
48732|code|BL              sub_B4F4|255-247-74-251
48736|code|CMP             R0, #0|0-40
48738|code|MOV             R4, R0|4-70
48740|code|BLT             loc_BE6E|3-219
48742|code|MOV             R0, R5|40-70
48744|code|MOV             R1, R4|33-70
48746|code|BL              sub_BD74|255-247-131-255
48750|code|MVNS            R0, R4|224-67
48752|code|LSRS            R0, R0, #0x1F|192-15
48754|code|POP             {R3-R5,PC}|56-189
48756|code|PUSH.W          {R4-R9,LR}|45-233-240-67
48760|code|MOV             R4, R0|4-70
48762|code|SUB             SP, SP, #0xC|131-176
48764|code|CMP             R0, #0|0-40
48766|code|BEQ.W           loc_BF88|0-240-131-128
48770|code|LDR             R2, [R0]|2-104
48772|code|MOVW            R3, #0xDEAD|77-246-173-99
48776|code|CMP             R2, R3|154-66
48778|code|BNE             loc_BF7A|118-209
48780|code|LDR             R7, [R0,#0xC]|199-104
48782|code|CMP             R7, #0|0-47
48784|code|BLE             loc_BF30|78-221
48786|code|LDR             R3, [R0,#0x10]|3-105
48788|code|LDR             R5, [R3]|29-104
48790|code|CMP             R5, #0|0-45
48792|code|BEQ             loc_BF6C|104-208
48794|code|LDRB            R3, [R5,#0x10]|43-124
48796|code|LSLS            R6, R3, #0x1F|222-7
48798|code|BMI             loc_BECA|20-212
48800|code|MOV             R0, R5|40-70
48802|code|BL              sub_A98C|254-247-115-253
48806|code|MOV             R6, R0|6-70
48808|code|CMP             R0, #0|0-40
48810|code|BNE             loc_BEF6|36-209
48812|code|SUBS            R7, #1|1-63
48814|code|MOV             R0, R5|40-70
48816|code|STR             R7, [R4,#0xC]|231-96
48818|code|BL              sub_AA08|254-247-169-253
48822|code|MOV             R1, R0|1-70
48824|code|MOV             R0, R4|32-70
48826|code|CBNZ            R1, loc_BEEE|193-185
48828|code|MOV             R2, R1|10-70
48830|code|BL              sub_B8F4|255-247-25-253
48834|code|MOV             R0, R6|48-70
48836|code|ADD             SP, SP, #0xC|3-176
48838|code|POP.W           {R4-R9,PC}|189-232-240-131
48842|code|LDM.W           R5, {R0,R3}|149-232-9-0
48846|code|ADDS            R3, #1|1-51
48848|code|STR             R3, [R5,#4]|107-96
48850|code|BLX             __strdup|253-247-22-235
48854|code|MOV             R6, R0|6-70
48856|code|CBZ             R0, loc_BF34|96-179
48858|code|LDR             R7, [R4,#0xC]|231-104
48860|code|SUBS            R7, #1|1-63
48862|code|MOV             R0, R5|40-70
48864|code|STR             R7, [R4,#0xC]|231-96
48866|code|BL              sub_AA08|254-247-145-253
48870|code|MOV             R1, R0|1-70
48872|code|MOV             R0, R4|32-70
48874|code|CMP             R1, #0|0-41
48876|code|BEQ             loc_BEBC|230-208
48878|code|MOVS            R1, #0|0-33
48880|code|BL              sub_B944|255-247-40-253
48884|code|B               loc_BEC2|229-231
48886|code|LDR             R7, [R5]|47-104
48888|code|MOV             R0, R7|56-70
48890|code|BLX             strlen|253-247-210-234
48894|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
48898|code|ADD.W           R9, R8, #0x10|8-241-16-9
48902|code|ADD             R9, R0|129-68
48904|code|MOV             R0, R9|72-70
48906|code|BLX             malloc|253-247-152-234
48910|code|MOV             R6, R0|6-70
48912|code|CBZ             R0, loc_BF50|240-177
48914|code|LDR.W           LR, [R5,#4]|213-248-4-224
48918|code|MOV             R3, R7|59-70
48920|code|MOV             R1, R9|73-70
48922|code|LDR             R2, =aS0Lu; "%s%0*lu"|31-74
48924|code|ADD.W           R12, LR, #1|14-241-1-12
48928|code|STR.W           R12, [R5,#4]|197-248-4-192
48932|code|STMEA.W         SP, {R8,LR}|141-232-0-65
48936|code|BLX             snprintf|253-247-222-234
48940|code|LDR             R7, [R4,#0xC]|231-104
48942|code|B               loc_BEAC|189-231
48944|code|MOVS            R6, #0|0-38
48946|code|B               loc_BEC2|198-231
48948|code|BLX             __errno_location|253-247-210-234
48952|code|MOVS            R2, #0xC|12-34
48954|code|MOVW            R1, #0x333|64-242-51-49
48958|code|MOV             R3, R0|3-70
48960|code|LDR             R0, =unk_F8A8|22-72
48962|code|STR             R2, [R3]|26-96
48964|code|LDR             R2, =aHostrangeShift; "hostrange shift"|22-74
48966|code|BL              sub_A5E0|254-247-75-251
48970|code|LDR             R7, [R4,#0xC]|231-104
48972|code|MOV             R6, R0|6-70
48974|code|B               loc_BEDC|197-231
48976|code|BLX             __errno_location|253-247-196-234
48980|code|MOVS            R2, #0xC|12-34
48982|code|MOVW            R1, #0x337|64-242-55-49
48986|code|MOV             R3, R0|3-70
48988|code|LDR             R0, =unk_F8A8|15-72
48990|code|STR             R2, [R3]|26-96
48992|code|LDR             R2, =aHostrangeShift; "hostrange shift"|15-74
48994|code|BL              sub_A5E0|254-247-61-251
48998|code|LDR             R7, [R4,#0xC]|231-104
49000|code|MOV             R6, R0|6-70
49002|code|B               loc_BEAC|159-231
49004|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|13-72
49006|code|MOVW            R2, #0x32E|64-242-46-50
49010|code|LDR             R1, =unk_F8A8|10-73
49012|code|LDR             R3, =aHostrangeShift_0; "hostrange_shift"|12-75
49014|code|BLX             __assert_fail|253-247-78-235
49018|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|12-72
49020|code|MOVW            R2, #0x66F|64-242-111-98
49024|code|LDR             R1, =unk_F8A8|6-73
49026|code|LDR             R3, =aHostlistShift; "hostlist_shift"|11-75
49028|code|BLX             __assert_fail|253-247-70-235
49032|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
49034|code|MOVW            R2, #0x66F|64-242-111-98
49038|code|LDR             R1, =unk_F8A8|3-73
49040|code|LDR             R3, =aHostlistShift; "hostlist_shift"|7-75
49042|code|BLX             __assert_fail|253-247-64-235
49046|data|ALIGN 4|0-191
49048|data|DCD aS0Lu; "%s%0*lu"|84-250-0-0
49052|data|DCD unk_F8A8|168-248-0-0
49056|data|DCD aHostrangeShift; "hostrange shift"|244-250-0-0
49060|data|DCD aHrVoid0; "hr != ((void *)0)"|220-248-0-0
49064|data|DCD aHostrangeShift_0; "hostrange_shift"|188-247-0-0
49068|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
49072|data|DCD aHostlistShift; "hostlist_shift"|172-247-0-0
49076|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
49080|code|PUSH            {R4,LR}|16-181
49082|code|CMP             R0, #0|0-40
49084|code|BEQ             locret_C00C|38-208
49086|code|LDR             R3, [R0]|3-104
49088|code|MOVW            R2, #0xDEAD|77-246-173-98
49092|code|CMP             R3, R2|147-66
49094|code|BNE             loc_C038|55-209
49096|code|LDR             R1, [R0,#4]|65-104
49098|code|CMP             R1, #0|0-41
49100|code|BEQ             loc_C02A|45-208
49102|code|LDR             R2, [R1]|10-104
49104|code|CMP             R2, R3|154-66
49106|code|BNE             loc_C01C|35-209
49108|code|LDR             R3, [R1,#0x14]|75-105
49110|code|CBZ             R3, loc_BFFA|131-177
49112|code|LDR             R4, [R3]|28-104
49114|code|CMP             R4, R2|148-66
49116|code|BNE             loc_C00E|23-209
49118|code|ADDS            R1, #0x14|20-49
49120|code|CMP             R0, R3|152-66
49122|code|BNE             loc_BFF0|5-209
49124|code|B               loc_C006|15-224
49126|code|LDR             R2, [R3]|26-104
49128|code|CMP             R2, R4|162-66
49130|code|BNE             loc_C00E|16-209
49132|code|CMP             R0, R3|152-66
49134|code|BEQ             loc_C006|10-208
49136|code|ADD.W           R1, R3, #0x14|3-241-20-1
49140|code|LDR             R3, [R3,#0x14]|91-105
49142|code|CMP             R3, #0|0-43
49144|code|BNE             loc_BFE6|245-209
49146|code|MOVS            R3, #1|1-35
49148|code|STR             R3, [R0]|3-96
49150|code|POP.W           {R4,LR}|189-232-16-64
49154|code|B.W             j_free|253-247-143-185
49158|code|LDR             R3, [R0,#0x14]|67-105
49160|code|STR             R3, [R1]|11-96
49162|code|B               loc_BFFA|246-231
49164|code|POP             {R4,PC}|16-189
49166|code|LDR             R0, =aPiMagic57005; "(*pi)->magic == 57005"|14-72
49168|code|MOVW            R2, #0x89C; line|64-246-156-2
49172|code|LDR             R1, =unk_F8A8; file|13-73
49174|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|14-75
49176|code|BLX             __assert_fail|253-247-252-234
49180|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|13-72
49182|code|MOVW            R2, #0x89A; line|64-246-154-2
49186|code|LDR             R1, =unk_F8A8; file|10-73
49188|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|10-75
49190|code|BLX             __assert_fail|253-247-246-234
49194|code|LDR             R0, =unk_FB04; assertion|11-72
49196|code|MOVW            R2, #0x89A; line|64-246-154-2
49200|code|LDR             R1, =unk_F8A8; file|6-73
49202|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|7-75
49204|code|BLX             __assert_fail|253-247-238-234
49208|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|8-72
49210|code|MOVW            R2, #0x899; line|64-246-153-2
49214|code|LDR             R1, =unk_F8A8; file|3-73
49216|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|3-75
49218|code|BLX             __assert_fail|253-247-232-234
49222|data|ALIGN 4|0-191
49224|data|DCD aPiMagic57005; "(*pi)->magic == 57005"|52-251-0-0
49228|data|DCD unk_F8A8|168-248-0-0
49232|data|DCD aHostlistIterat; "hostlist_iterator_destroy"|204-247-0-0
49236|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|28-251-0-0
49240|data|DCD unk_FB04|4-251-0-0
49244|data|DCD aIMagic57005; "i->magic == 57005"|140-250-0-0
49248|code|PUSH            {R3-R5,LR}|56-181
49250|code|MOV             R5, R0|5-70
49252|code|CMP             R0, #0|0-40
49254|code|BEQ             locret_C0AC|33-208
49256|code|LDR             R2, [R0]|2-104
49258|code|MOVW            R3, #0xDEAD|77-246-173-99
49262|code|CMP             R2, R3|154-66
49264|code|BEQ             loc_C078|2-208
49266|code|B               loc_C0AE|28-224
49268|code|BL              sub_BFB8|255-247-160-255
49272|code|LDR             R0, [R5,#0x14]|104-105
49274|code|CMP             R0, #0|0-40
49276|code|BNE             loc_C074|250-209
49278|code|LDR             R3, [R5,#8]|171-104
49280|code|CMP             R3, #0|0-43
49282|code|BLE             loc_C098|9-221
49284|code|MOVS            R4, #0|0-36
49286|code|LDR             R3, [R5,#0x10]|43-105
49288|code|LDR.W           R0, [R3,R4,LSL#2]; ptr|83-248-36-0
49292|code|ADDS            R4, #1|1-52
49294|code|BL              sub_A6F8|254-247-51-251
49298|code|LDR             R3, [R5,#8]|171-104
49300|code|CMP             R3, R4|163-66
49302|code|BGT             loc_C086|246-220
49304|code|LDR             R0, [R5,#0x10]; ptr|40-105
49306|code|BLX             free|253-247-70-233
49310|code|MOVS            R3, #1|1-35
49312|code|MOV             R0, R5; ptr|40-70
49314|code|STR             R3, [R5]|43-96
49316|code|POP.W           {R3-R5,LR}|189-232-56-64
49320|code|B.W             j_free|253-247-60-185
49324|code|POP             {R3-R5,PC}|56-189
49326|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|3-72
49328|code|MOVW            R2, #0x5F9; line|64-242-249-82
49332|code|LDR             R1, =unk_F8A8; file|2-73
49334|code|LDR             R3, =aHostlistDestro; "hostlist_destroy"|3-75
49336|code|BLX             __assert_fail|253-247-172-234
49340|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
49344|data|DCD unk_F8A8|168-248-0-0
49348|data|DCD aHostlistDestro; "hostlist_destroy"|232-247-0-0
49352|code|PUSH.W          {R4-R9,LR}|45-233-240-67
49356|code|SUB.W           SP, SP, #0x400|173-245-128-109
49360|code|LDR             R7, =__stack_chk_guard|63-79
49362|code|SUB             SP, SP, #0xC|131-176
49364|code|MOV             R5, R0|5-70
49366|code|LDR             R3, [R7]|59-104
49368|code|STR.W           R3, [SP,#0x404]|205-248-4-52
49372|code|BL              sub_AA68|254-247-196-252
49376|code|MOV             R6, R0|6-70
49378|code|CMP             R0, #0|0-40
49380|code|BEQ             loc_C192|85-208
49382|code|CMP             R5, #0|0-45
49384|code|BEQ             loc_C1C0|106-208
49386|code|LDR             R2, [R5]|42-104
49388|code|MOVW            R3, #0xDEAD|77-246-173-99
49392|code|CMP             R2, R3|154-66
49394|code|BNE             loc_C1B2|94-209
49396|code|LDR             R4, [R5,#8]|172-104
49398|code|CMP             R4, #0|0-44
49400|code|BEQ             loc_C1A6|85-208
49402|code|LDR             R3, [R5,#0x10]|43-105
49404|code|MOVS            R4, #0|0-36
49406|code|LDR.W           R8, [R3]|211-248-0-128
49410|code|MOV             R1, R8|65-70
49412|code|MOV             R0, R6|48-70
49414|code|BL              sub_B008|254-247-127-255
49418|code|LDR             R3, [R5,#0x10]|43-105
49420|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
49424|code|ADDS            R4, #1|1-52
49426|code|BL              sub_A6F8|254-247-241-250
49430|code|LDR             R3, [R5,#8]|171-104
49432|code|CMP             R4, R3|156-66
49434|code|BGE             loc_C130|9-218
49436|code|LDR             R2, [R5,#0x10]|42-105
49438|code|LDR             R3, [R6,#0x10]|51-105
49440|code|LDR.W           R8, [R2,R4,LSL#2]|82-248-36-128
49444|code|LDR             R0, [R3]|24-104
49446|code|MOV             R1, R8|65-70
49448|code|BL              sub_ADA4|254-247-60-254
49452|code|CMP             R0, #0|0-40
49454|code|BNE             loc_C102|232-209
49456|code|LDR             R2, [R6,#8]|178-104
49458|code|MOV             R0, R5|40-70
49460|code|MOV             R1, R4|33-70
49462|code|BL              sub_B8F4|255-247-221-251
49466|code|LDR             R2, [R5,#8]|170-104
49468|code|LDR             R0, [R6,#8]|176-104
49470|code|CMP             R2, R4|162-66
49472|code|BLE             loc_C16E|21-221
49474|code|SUBS            R3, R4, R0|35-26
49476|code|MOV.W           R8, R0,LSL#2|79-234-128-8
49480|code|MOV.W           R9, #0|79-240-0-9
49484|code|LSLS            R3, R3, #2|155-0
49486|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
49490|code|ADD.W           R1, R3, R8|3-235-8-1
49494|code|ADDS            R4, #1|1-52
49496|code|LDR.W           R12, [LR,R1]|94-248-1-192
49500|code|STR.W           R12, [LR,R3]|78-248-3-192
49504|code|ADDS            R3, #4|4-51
49506|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
49510|code|CMP             R4, R2|148-66
49512|code|STR.W           R9, [LR,R1]|78-248-1-144
49516|code|BNE             loc_C14E|239-209
49518|code|LDR             R4, [R5,#0xC]|236-104
49520|code|SUBS            R0, R2, R0|16-26
49522|code|LDR             R3, [R6,#0xC]|243-104
49524|code|MOV.W           R1, #0x400|79-244-128-97
49528|code|ADD             R2, SP, #4|1-170
49530|code|STR             R0, [R5,#8]|168-96
49532|code|SUBS            R3, R4, R3|227-26
49534|code|MOV             R0, R6|48-70
49536|code|STR             R3, [R5,#0xC]|235-96
49538|code|BL              sub_B740|255-247-221-250
49542|code|MOV             R0, R6|48-70
49544|code|BL              sub_C060|255-247-106-255
49548|code|ADD             R0, SP, #4|1-168
49550|code|BLX             __strdup|253-247-184-233
49554|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
49558|code|LDR             R3, [R7]|59-104
49560|code|CMP             R2, R3|154-66
49562|code|BNE             loc_C1AE|8-209
49564|code|ADD             SP, SP, #0xC|3-176
49566|code|ADD.W           SP, SP, #0x400|13-245-128-109
49570|code|POP.W           {R4-R9,PC}|189-232-240-131
49574|code|BL              sub_C060|255-247-91-255
49578|code|MOV             R0, R4|32-70
49580|code|B               loc_C192|241-231
49582|code|BLX             __stack_chk_fail|253-247-236-232
49586|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|8-72
49588|code|MOVW            R2, #0x6AD|64-242-173-98
49592|code|LDR             R1, =unk_F8A8|7-73
49594|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|8-75
49596|code|BLX             __assert_fail|253-247-42-234
49600|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
49602|code|MOVW            R2, #0x6AD|64-242-173-98
49606|code|LDR             R1, =unk_F8A8|4-73
49608|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|4-75
49610|code|BLX             __assert_fail|253-247-36-234
49614|data|ALIGN 0x10|0-191
49616|data|DCD __stack_chk_guard|56-133-1-0
49620|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
49624|data|DCD unk_F8A8|168-248-0-0
49628|data|DCD aHostlistShiftR; "hostlist_shift_range"|252-247-0-0
49632|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
49636|code|PUSH.W          {R4-R11,LR}|45-233-240-79
49640|code|SUB.W           SP, SP, #0x400|173-245-128-109
49644|code|LDR             R7, =__stack_chk_guard|60-79
49646|code|SUB             SP, SP, #0xC|131-176
49648|code|MOV             R4, R0|4-70
49650|code|LDR             R3, [R7]|59-104
49652|code|STR.W           R3, [SP,#0x404]|205-248-4-52
49656|code|CMP             R0, #0|0-40
49658|code|BEQ             loc_C2D2|106-208
49660|code|LDR             R2, [R0]|2-104
49662|code|MOVW            R3, #0xDEAD|77-246-173-99
49666|code|CMP             R2, R3|154-66
49668|code|BNE             loc_C2C4|94-209
49670|code|LDR             R3, [R0,#8]|131-104
49672|code|MOVS            R0, #0|0-32
49674|code|CMP             R3, #0|0-43
49676|code|BLE             loc_C2AC|78-221
49678|code|BL              sub_AA68|254-247-43-252
49682|code|MOV             R6, R0|6-70
49684|code|CMP             R6, #0|0-46
49686|code|BEQ             loc_C2AC|73-208
49688|code|LDR             R5, [R4,#8]|165-104
49690|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
49694|code|SUBS            R3, R5, #1|107-30
49696|code|SUBS.W          R9, R5, #2|181-241-2-9
49700|code|ADD.W           R8, R10, R3,LSL#2|10-235-131-8
49704|code|LDR.W           R11, [R10,R3,LSL#2]|90-248-35-176
49708|code|BPL             loc_C236|3-213
49710|code|B               loc_C244|9-224
49712|code|ADDS.W          R9, R9, #0xFFFFFFFF|25-241-255-57
49716|code|BCC             loc_C244|6-211
49718|code|LDR.W           R1, [R8,#-4]!|88-248-4-29
49722|code|MOV             R0, R11|88-70
49724|code|BL              sub_ADA4|254-247-178-253
49728|code|CMP             R0, #0|0-40
49730|code|BNE             loc_C230|245-209
49732|code|ADD.W           R9, R9, #1|9-241-1-9
49736|code|CMP             R5, R9|77-69
49738|code|BLE             loc_C282|26-221
49740|code|MOV.W           R8, R9,LSL#2|79-234-137-8
49744|code|MOV.W           R11, #0|79-240-0-11
49748|code|B               loc_C25A|1-224
49750|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
49754|code|LDR.W           R1, [R10,R8]|90-248-8-16
49758|code|MOV             R0, R6|48-70
49760|code|BL              sub_B008|254-247-210-254
49764|code|LDR             R3, [R4,#0x10]|35-105
49766|code|ADD.W           R9, R9, #1|9-241-1-9
49770|code|LDR.W           R0, [R3,R8]|83-248-8-0
49774|code|BL              sub_A6F8|254-247-67-250
49778|code|LDR             R5, [R4,#8]|165-104
49780|code|LDR             R3, [R4,#0x10]|35-105
49782|code|CMP             R5, R9|77-69
49784|code|STR.W           R11, [R3,R8]|67-248-8-176
49788|code|ADD.W           R8, R8, #4|8-241-4-8
49792|code|BGT             loc_C256|233-220
49794|code|LDR             R0, [R4,#0xC]|224-104
49796|code|MOV.W           R1, #0x400|79-244-128-97
49800|code|LDR.W           LR, [R6,#8]|214-248-8-224
49804|code|MOV             R2, SP|106-70
49806|code|LDR             R3, [R6,#0xC]|243-104
49808|code|RSB.W           R5, LR, R5|206-235-5-5
49812|code|STR             R5, [R4,#8]|165-96
49814|code|SUBS            R3, R0, R3|195-26
49816|code|MOV             R0, R6|48-70
49818|code|STR             R3, [R4,#0xC]|227-96
49820|code|BL              sub_B740|255-247-80-250
49824|code|MOV             R0, R6|48-70
49826|code|BL              sub_C060|255-247-221-254
49830|code|MOV             R0, SP|104-70
49832|code|BLX             __strdup|253-247-42-233
49836|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
49840|code|LDR             R3, [R7]|59-104
49842|code|CMP             R2, R3|154-66
49844|code|BNE             loc_C2C0|4-209
49846|code|ADD             SP, SP, #0xC|3-176
49848|code|ADD.W           SP, SP, #0x400|13-245-128-109
49852|code|POP.W           {R4-R11,PC}|189-232-240-143
49856|code|BLX             __stack_chk_fail|253-247-98-232
49860|code|LDR             R0, =aHlMagic57005_0; "(hl)->magic == 57005"|7-72
49862|code|MOVW            R2, #0x68B|64-242-139-98
49866|code|LDR             R1, =unk_F8A8|7-73
49868|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|7-75
49870|code|BLX             __assert_fail|253-247-162-233
49874|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
49876|code|MOVW            R2, #0x68B|64-242-139-98
49880|code|LDR             R1, =unk_F8A8|3-73
49882|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|4-75
49884|code|BLX             __assert_fail|253-247-154-233
49888|data|DCD __stack_chk_guard|56-133-1-0
49892|data|DCD aHlMagic57005_0; "(hl)->magic == 57005"|20-250-0-0
49896|data|DCD unk_F8A8|168-248-0-0
49900|data|DCD aHostlistPopRan; "hostlist_pop_range"|20-248-0-0
49904|data|DCD aHlVoid0; "hl != ((void *)0)"|236-249-0-0
49908|code|PUSH.W          {R4-R11,LR}|45-233-240-79
49912|code|MOVW            R1, #0x8538|72-242-56-81
49916|code|SUB.W           SP, SP, #0x1F400|173-245-250-61
49920|code|MOVT.W          R1, #1|192-242-1-1
49924|code|SUB             SP, SP, #0x34|141-176
49926|code|MOV             R4, R0|4-70
49928|code|LDR             R3, [R1]|11-104
49930|code|ADD.W           R2, SP, #0x1F458+var_58|13-245-250-50
49934|code|ADDS            R2, #0x2C ; ','|44-50
49936|code|STR             R3, [R2]|19-96
49938|code|BL              sub_AA68|254-247-169-251
49942|code|MOV             R8, R0|128-70
49944|code|CBZ             R4, loc_C348|180-177
49946|code|MOV             R0, R4|32-70
49948|code|BLX             __strdup|253-247-240-232
49952|code|STR             R0, [SP,#0x1F458+ptr]|9-144
49954|code|CMP             R0, #0|0-40
49956|code|BEQ.W           loc_C664|0-240-158-129
49960|code|ADD             R3, SP, #0x1F458+var_1F430|10-171
49962|code|MOV             R5, R0|5-70
49964|code|STR             R3, [SP,#0x1F458+var_1F440]|6-147
49966|code|B               loc_C33C|5-224
49968|code|LDR             R0, =asc_FB8C; "\t, "|148-72
49970|code|MOV             R1, R4; c|33-70
49972|code|BLX             strchr|253-247-186-232
49976|code|CBZ             R0, loc_C36C|192-177
49978|code|ADDS            R5, #1|1-53
49980|code|LDRB            R4, [R5]|44-120
49982|code|CMP             R4, #0|0-44
49984|code|BNE             loc_C330|246-209
49986|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
49988|code|BLX             free|252-247-240-239
49992|code|ADD.W           R3, SP, #0x1F458+var_58|13-245-250-51
49996|code|MOVW            R1, #0x8538|72-242-56-81
50000|code|ADDS            R3, #0x2C ; ','|44-51
50002|code|MOVT.W          R1, #1|192-242-1-1
50006|code|MOV             R0, R8|64-70
50008|code|LDR             R2, [R3]|26-104
50010|code|LDR             R3, [R1]|11-104
50012|code|CMP             R2, R3|154-66
50014|code|BNE.W           loc_C670|64-240-135-129
50018|code|ADD             SP, SP, #0x34 ; '4'|13-176
50020|code|ADD.W           SP, SP, #0x1F400|13-245-250-61
50024|code|POP.W           {R4-R11,PC}|189-232-240-143
50028|code|MOV             R7, R5|47-70
50030|code|CBZ             R4, loc_C37E|52-177
50032|code|LDR             R0, =asc_FB8C; "\t, "|132-72
50034|code|MOV             R1, R4; c|33-70
50036|code|BLX             strchr|253-247-154-232
50040|code|CMP             R0, #0|0-40
50042|code|BEQ.W           loc_C530|0-240-217-128
50046|code|SUBS            R6, R7, R5|126-27
50048|code|MOV             R0, R5; s|40-70
50050|code|MOVS            R1, #0x5B ; '['; c|91-33
50052|code|MOV             R2, R6; n|50-70
50054|code|BLX             memchr|253-247-218-232
50058|code|CBZ             R0, loc_C39C|56-177
50060|code|MOV             R0, R5; s|40-70
50062|code|MOVS            R1, #0x5D ; ']'; c|93-33
50064|code|MOV             R2, R6; n|50-70
50066|code|BLX             memchr|253-247-212-232
50070|code|CMP             R0, #0|0-40
50072|code|BEQ.W           loc_C4CA|0-240-151-128
50076|code|CBZ             R4, loc_C3C2|140-177
50078|code|MOV             R6, R7|62-70
50080|code|MOV.W           R10, #0|79-240-0-10
50084|code|MOV             R9, R7|185-70
50086|code|MOV             R1, R4|33-70
50088|code|B               loc_C3B6|5-224
50090|code|STRB.W          R10, [R6],#1|6-248-1-171
50094|code|MOV             R7, R6|55-70
50096|code|LDRB.W          R1, [R9,#1]!; c|25-248-1-31
50100|code|CBZ             R1, loc_C3C2|41-177
50102|code|LDR             R0, =asc_FB8C; "\t, "|115-72
50104|code|MOV             R7, R6|55-70
50106|code|BLX             strchr|253-247-120-232
50110|code|CMP             R0, #0|0-40
50112|code|BNE             loc_C3AA|243-209
50114|code|ADD.W           R0, SP, #0x1F458+var_458|13-245-248-48
50118|code|MOV             R1, R5; src|41-70
50120|code|MOV.W           R2, #0x400; n|79-244-128-98
50124|code|ADDS            R0, #0x2C ; ','; dest|44-48
50126|code|BLX             strncpy|253-247-164-232
50130|code|MOV             R0, R5; s|40-70
50132|code|MOVS            R1, #0x5B ; '['; c|91-33
50134|code|BLX             strchr|253-247-106-232
50138|code|CMP             R0, #0|0-40
50140|code|BEQ.W           loc_C56A|0-240-197-128
50144|code|MOV             R6, R0|6-70
50146|code|MOVS            R4, #0|0-36
50148|code|MOVS            R1, #0x5D ; ']'; c|93-33
50150|code|STRB.W          R4, [R6],#1|6-248-1-75
50154|code|MOV             R0, R6; s|48-70
50156|code|BLX             strchr|253-247-94-232
50160|code|STR             R0, [SP,#0x1F458+var_1F444]|5-144
50162|code|CMP             R0, #0|0-40
50164|code|BEQ.W           loc_C56A|0-240-185-128
50168|code|STRB            R4, [R0]|4-112
50170|code|CMP             R6, #0|0-46
50172|code|BEQ.W           loc_C594|0-240-202-128
50176|code|STR             R4, [SP,#0x1F458+var_1F448]|4-148
50178|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
50180|code|STR             R5, [SP,#0x1F458+var_1F438]|8-149
50182|code|MOV             R0, R6; s|48-70
50184|code|MOVS            R1, #0x2C ; ','; c|44-33
50186|code|BLX             strchr|253-247-80-232
50190|code|MOV             R5, R0|5-70
50192|code|CBZ             R0, loc_C418|16-177
50194|code|MOVS            R2, #0|0-34
50196|code|STRB.W          R2, [R5],#1|5-248-1-43
50200|code|MOV             R0, R6|48-70
50202|code|BLX             __strdup|253-247-114-232
50206|code|MOV             R7, R0|7-70
50208|code|CMP             R0, #0|0-40
50210|code|BEQ.W           loc_C536|0-240-136-128
50214|code|MOV             R0, R6; s|48-70
50216|code|MOVS            R1, #0x2D ; '-'; c|45-33
50218|code|BLX             strchr|253-247-64-232
50222|code|MOV             R4, R0|4-70
50224|code|CBZ             R0, loc_C43E|40-177
50226|code|LDRB            R3, [R0,#1]|67-120
50228|code|MOVS            R1, #0|0-33
50230|code|STRB            R1, [R0]|1-112
50232|code|CMP             R3, #0x2D ; '-'|45-43
50234|code|BEQ             loc_C50E|104-208
50236|code|ADDS            R4, R0, #1|68-28
50238|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
50240|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
50244|code|ADDS            R1, #0x28 ; '('; endptr|40-49
50246|code|MOVS            R2, #0xA; base|10-34
50248|code|MOV             R0, R6; nptr|48-70
50250|code|ADD.W           R9, SP, #0x1F458+var_1458|13-245-240-57
50254|code|ADD.W           R11, R3, R3,LSL#1|3-235-67-11
50258|code|BLX             strtoul|253-247-32-232
50262|code|ADD.W           R9, R9, #0x30 ; '0'|9-241-48-9
50266|code|LDR             R1, [SP,#0x1F458+var_1F440]|6-153
50268|code|LDR.W           R3, [R9,#-8]|89-248-8-60
50272|code|ADD.W           R9, R1, R11,LSL#2|1-235-139-9
50276|code|CMP             R6, R3|158-66
50278|code|MOV             R10, R0|130-70
50280|code|STR.W           R0, [R1,R11,LSL#2]|65-248-43-0
50284|code|BEQ             loc_C50E|79-208
50286|code|CBZ             R4, loc_C476|20-177
50288|code|LDRB            R2, [R4]|34-120
50290|code|CMP             R2, #0|0-42
50292|code|BNE             loc_C4F0|60-209
50294|code|CMP             R3, R4|163-66
50296|code|MOV             R0, R10|80-70
50298|code|STR.W           R0, [R9,#4]|201-248-4-0
50302|code|BEQ             loc_C50E|70-208
50304|code|LDRB            R3, [R3]|27-120
50306|code|CMP             R3, #0|0-43
50308|code|BNE             loc_C50E|67-209
50310|code|CMP             R10, R0|130-69
50312|code|BHI             loc_C50E|65-216
50314|code|RSB.W           R10, R10, #1|202-241-1-10
50318|code|ADD             R0, R10|80-68
50320|code|CMP.W           R0, #0x4000|176-245-128-79
50324|code|BLS             loc_C542|85-217
50326|code|MOVW            R1, #0x551|64-242-81-81
50330|code|LDR             R2, =aTooManyHostsIn; "Too many hosts in range `%s'"|59-74
50332|code|MOV             R3, R7|59-70
50334|code|LDR             R0, =unk_F8A8|59-72
50336|code|BL              sub_A928|254-247-66-250
50340|code|MOV             R0, R7; ptr|56-70
50342|code|BLX             free|252-247-64-239
50346|code|MOV             R11, R7|187-70
50348|code|BLX             __errno_location|253-247-22-232
50352|code|MOVS            R5, #0x22 ; '"'|34-37
50354|code|MOV             R4, R0|4-70
50356|code|STR             R5, [R0]|5-96
50358|code|MOV             R0, R8|64-70
50360|code|MOV.W           R8, #0|79-240-0-8
50364|code|BL              sub_C060|255-247-208-253
50368|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
50370|code|BLX             free|252-247-50-239
50374|code|STR             R5, [R4]|37-96
50376|code|B               loc_C348|62-231
50378|code|MOV             R0, R7; s|56-70
50380|code|MOVS            R1, #0x5D ; ']'; c|93-33
50382|code|BLX             strchr|252-247-238-239
50386|code|MOV             R6, R0|6-70
50388|code|CMP             R0, #0|0-40
50390|code|BEQ.W           loc_C39C|63-244-97-175
50394|code|SUBS            R2, R0, R7; n|194-27
50396|code|MOVS            R1, #0x5B ; '['; c|91-33
50398|code|MOV             R0, R7; s|56-70
50400|code|BLX             memchr|253-247-44-232
50404|code|CMP             R0, #0|0-40
50406|code|BNE.W           loc_C39C|127-244-89-175
50410|code|ADDS            R7, R6, #1|119-28
50412|code|LDRB            R4, [R7]|60-120
50414|code|B               loc_C36E|62-231
50416|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
50420|code|MOVS            R2, #0xA; base|10-34
50422|code|ADDS            R1, #0x28 ; '('; endptr|40-49
50424|code|MOV             R0, R4; nptr|32-70
50426|code|BLX             strtoul|252-247-204-239
50430|code|ADD.W           R2, SP, #0x1F458+var_1458|13-245-240-50
50434|code|ADDS            R2, #0x28 ; '('|40-50
50436|code|LDR             R3, [R2]|19-104
50438|code|CMP             R3, R4|163-66
50440|code|STR.W           R0, [R9,#4]|201-248-4-0
50444|code|BNE             loc_C480|184-209
50446|code|MOVW            R1, #0x55B|64-242-91-81
50450|code|LDR             R2, =aInvalidRangeS; "Invalid range: `%s'"|31-74
50452|code|MOV             R3, R7|59-70
50454|code|LDR             R0, =unk_F8A8|29-72
50456|code|BL              sub_A928|254-247-6-250
50460|code|MOV             R0, R7; ptr|56-70
50462|code|BLX             free|252-247-4-239
50466|code|MOVS            R5, #0x16|22-37
50468|code|BLX             __errno_location|252-247-218-239
50472|code|MOV             R11, R7|187-70
50474|code|MOV             R4, R0|4-70
50476|code|STR             R5, [R0]|5-96
50478|code|B               loc_C4B6|194-231
50480|code|ADDS            R7, #1|1-55
50482|code|LDRB            R4, [R7]|60-120
50484|code|B               loc_C36E|27-231
50486|code|BLX             __errno_location|252-247-210-239
50490|code|MOVS            R5, #0xC|12-37
50492|code|MOV             R4, R0|4-70
50494|code|STR             R5, [R0]|5-96
50496|code|B               loc_C4B6|185-231
50498|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
50500|code|MOV             R0, R7; ptr|56-70
50502|code|ADDS            R3, #1|1-51
50504|code|STR             R3, [SP,#0x1F458+var_1F448]|4-147
50506|code|BLX             free|252-247-238-238
50510|code|MOV             R0, R6; s|48-70
50512|code|BLX             strlen|252-247-166-239
50516|code|STR.W           R0, [R9,#8]|201-248-8-0
50520|code|CMP             R5, #0|0-45
50522|code|BEQ.W           loc_C65E|0-240-128-128
50526|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
50528|code|CMP.W           R1, #0x2800|177-245-32-95
50532|code|BEQ             loc_C57A|9-208
50534|code|MOV             R6, R5|46-70
50536|code|B               loc_C406|77-231
50538|code|ADD.W           R1, SP, #0x1F458+var_458|13-245-248-49
50542|code|MOV             R0, R8|64-70
50544|code|ADDS            R1, #0x2C ; ','|44-49
50546|code|MOV             R5, R7|61-70
50548|code|BL              sub_B224|254-247-86-254
50552|code|B               loc_C33C|224-230
50554|code|BLX             __errno_location|252-247-176-239
50558|code|MOV             R4, R0|4-70
50560|code|LDR             R5, [R0]|5-104
50562|code|B               loc_C4B6|152-231
50564|data|DCD asc_FB8C; "\t, "|140-251-0-0
50568|data|DCD aTooManyHostsIn; "Too many hosts in range `%s'"|76-251-0-0
50572|data|DCD unk_F8A8|168-248-0-0
50576|data|DCD aInvalidRangeS; "Invalid range: `%s'"|108-251-0-0
50580|code|STR             R6, [SP,#0x1F458+var_1F448]|4-150
50582|code|LDR             R3, [SP,#0x1F458+var_1F444]|5-155
50584|code|ADD.W           R10, R3, #1|3-241-1-10
50588|code|LDRB            R6, [R3,#1]|94-120
50590|code|CBNZ            R6, loc_C5DC|238-185
50592|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
50594|code|CMP             R1, #0|0-41
50596|code|BEQ             loc_C65A|89-208
50598|code|ADD             R4, SP, #0x1F458+var_1F424|13-172
50600|code|MOV             R9, R7|185-70
50602|code|MOV             R7, R1|15-70
50604|code|LDR.W           R2, [R4,#-8]|84-248-8-44
50608|code|MOV             R0, R5|40-70
50610|code|LDR.W           R3, [R4,#-4]|84-248-4-60
50614|code|ADDS            R6, #1|1-54
50616|code|LDR.W           R1, [R4,#-0xC]|84-248-12-28
50620|code|ADDS            R4, #0xC|12-52
50622|code|BL              sub_AB48|254-247-195-250
50626|code|MOV             R10, R0|130-70
50628|code|MOV             R0, R8|64-70
50630|code|MOV             R1, R10|81-70
50632|code|BL              sub_B008|254-247-30-253
50636|code|MOV             R0, R10; ptr|80-70
50638|code|BL              sub_A6F8|254-247-147-248
50642|code|CMP             R6, R7|190-66
50644|code|BNE             loc_C5AC|234-209
50646|code|MOV             R7, R9|79-70
50648|code|MOV             R5, R9|77-70
50650|code|B               loc_C33C|175-230
50652|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
50654|code|CMP             R3, #0|0-43
50656|code|BEQ             loc_C65A|59-208
50658|code|ADD.W           R9, SP, #0x1F458+var_1F424|13-241-52-9
50662|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
50664|code|MOV             R7, R5|47-70
50666|code|MOVS            R2, #0|0-34
50668|code|STR             R2, [SP,#0x1F458+var_1F444]|5-146
50670|code|LDR.W           R4, [R9,#-0xC]|89-248-12-76
50674|code|LDR.W           R5, [R9,#-8]|89-248-8-92
50678|code|CMP             R5, R4|165-66
50680|code|BCC             loc_C644|36-211
50682|code|LDR.W           R6, [R9,#-4]|89-248-4-108
50686|code|MOV             R3, R6|51-70
50688|code|MOV             R6, R10|86-70
50690|code|MOV             R10, R9|202-70
50692|code|MOV             R9, R3|153-70
50694|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
50698|code|LDR             R2, =aS0LuS; "%s%0*lu%s"|26-74
50700|code|MOV             R3, R7|59-70
50702|code|MOV.W           R1, #0x1000; maxlen|79-244-128-81
50706|code|ADDS            R0, #0x2C ; ','; s|44-48
50708|code|STR             R4, [SP,#0x1F458+var_1F454]|1-148
50710|code|STR.W           R9, [SP,#0x1F458+var_1F458]|205-248-0-144
50714|code|ADDS            R4, #1|1-52
50716|code|STR             R6, [SP,#0x1F458+var_1F450]|2-150
50718|code|BLX             snprintf|252-247-100-239
50722|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
50726|code|ADDS            R0, #0x2C ; ','|44-48
50728|code|BL              sub_AACC|254-247-80-250
50732|code|MOV             R11, R0|131-70
50734|code|MOV             R0, R8|64-70
50736|code|MOV             R1, R11|89-70
50738|code|BL              sub_B008|254-247-233-252
50742|code|MOV             R0, R11; ptr|88-70
50744|code|BL              sub_A6F8|254-247-94-248
50748|code|CMP             R5, R4|165-66
50750|code|BCS             loc_C606|226-210
50752|code|MOV             R9, R10|209-70
50754|code|MOV             R10, R6|178-70
50756|code|LDR             R1, [SP,#0x1F458+var_1F444]|5-153
50758|code|ADD.W           R9, R9, #0xC|9-241-12-9
50762|code|LDR             R2, [SP,#0x1F458+var_1F448]|4-154
50764|code|ADDS            R1, #1|1-49
50766|code|STR             R1, [SP,#0x1F458+var_1F444]|5-145
50768|code|CMP             R1, R2|145-66
50770|code|BNE             loc_C5EE|204-209
50772|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
50774|code|MOV             R5, R7|61-70
50776|code|B               loc_C33C|112-230
50778|code|MOV             R5, R7|61-70
50780|code|B               loc_C33C|110-230
50782|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
50784|code|LDR             R5, [SP,#0x1F458+var_1F438]|8-157
50786|code|B               loc_C596|152-231
50788|code|MOV             R0, R8|64-70
50790|code|LDR.W           R8, [SP,#0x1F458+ptr]|221-248-36-128
50794|code|BL              sub_C060|255-247-249-252
50798|code|B               loc_C348|107-230
50800|code|BLX             __stack_chk_fail|252-247-138-238
50804|data|DCD aS0LuS; "%s%0*lu%s"|128-251-0-0
50808|code|B.W             sub_C2F4|255-247-60-190
50812|code|PUSH            {R3-R7,LR}|248-181
50814|code|MOV             R7, R0|7-70
50816|code|MOV             R0, R1|8-70
50818|code|MOVS            R5, #0|0-37
50820|code|BL              sub_C678|255-247-248-255
50824|code|MOV             R6, R0|6-70
50826|code|CBNZ            R0, loc_C69A|48-185
50828|code|B               loc_C6B4|18-224
50830|code|BL              sub_BE58|255-247-227-251
50834|code|ADDS            R5, R5, R0|45-24
50836|code|MOV             R0, R4|32-70
50838|code|BLX             free|252-247-72-238
50842|code|MOV             R0, R6|48-70
50844|code|BL              sub_B2C8|254-247-20-254
50848|code|MOV             R4, R0|4-70
50850|code|MOV             R1, R0|1-70
50852|code|MOV             R0, R7|56-70
50854|code|CMP             R4, #0|0-44
50856|code|BNE             loc_C68E|241-209
50858|code|MOV             R0, R6|48-70
50860|code|BL              sub_C060|255-247-216-252
50864|code|MOV             R0, R5|40-70
50866|code|POP             {R3-R7,PC}|248-189
50868|code|BLX             __errno_location|252-247-18-239
50872|code|MOV             R5, R6|53-70
50874|code|MOVS            R3, #0x16|22-35
50876|code|STR             R3, [R0]|3-96
50878|code|MOV             R0, R5|40-70
50880|code|POP             {R3-R7,PC}|248-189
50882|data|ALIGN 4|0-191
50884|code|PUSH            {R4-R6,LR}|112-181
50886|code|MOV             R6, R0|6-70
50888|code|MOV             R5, R1|13-70
50890|code|CBZ             R1, loc_C6E8|105-177
50892|code|MOV             R0, R1|8-70
50894|code|BL              sub_C678|255-247-211-255
50898|code|MOV             R4, R0|4-70
50900|code|MOV             R5, R0|5-70
50902|code|CBZ             R0, loc_C6E8|56-177
50904|code|LDR             R5, [R0,#0xC]|197-104
50906|code|MOV             R1, R4|33-70
50908|code|MOV             R0, R6|48-70
50910|code|BL              sub_B270|254-247-199-253
50914|code|MOV             R0, R4|32-70
50916|code|BL              sub_C060|255-247-188-252
50920|code|MOV             R0, R5|40-70
50922|code|POP             {R4-R6,PC}|112-189
50924|code|PUSH            {R4-R7,LR}|240-181
50926|code|SUB             SP, SP, #0x24 ; '$'|137-176
50928|code|LDR             R5, =__stack_chk_guard|69-77
50930|code|MOV             R4, R0|4-70
50932|code|LDR             R3, [R5]|43-104
50934|code|STR             R3, [SP,#0x1C]|7-147
50936|code|CMP             R0, #0|0-40
50938|code|BEQ             loc_C7CE|104-208
50940|code|LDR             R2, [R0]|2-104
50942|code|MOVW            R3, #0xDEAD|77-246-173-99
50946|code|CMP             R2, R3|154-66
50948|code|BNE             loc_C7F8|120-209
50950|code|LDR             R3, [R0,#4]|67-104
50952|code|CMP             R3, #0|0-43
50954|code|BEQ             loc_C7DC|103-208
50956|code|LDR             R1, [R3]|25-104
50958|code|CMP             R1, R2|145-66
50960|code|BNE             loc_C7EA|107-209
50962|code|LDR             R1, [R3,#8]|153-104
50964|code|MOVS            R7, #0|0-39
50966|code|LDR             R0, [R0,#8]|128-104
50968|code|CMP             R1, R0|129-66
50970|code|BLE             loc_C786|52-221
50972|code|LDR             R2, [R4,#0xC]|226-104
50974|code|LDR             R6, [R4,#0x10]|38-105
50976|code|LDR.W           R12, [R2,#8]|210-248-8-192
50980|code|ADDS            R6, #1|1-54
50982|code|LDR             R7, [R2,#4]|87-104
50984|code|STR             R6, [R4,#0x10]|38-97
50986|code|RSB.W           R7, R7, R12|199-235-12-7
50990|code|CMP             R6, R7|190-66
50992|code|BLS             loc_C746|9-217
50994|code|LDR             R3, [R3,#0x10]|27-105
50996|code|ADDS            R0, #1|1-48
50998|code|MOVS            R7, #0|0-39
51000|code|CMP             R1, R0|129-66
51002|code|STR             R0, [R4,#8]|160-96
51004|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
51008|code|STR             R7, [R4,#0x10]|39-97
51010|code|STR             R2, [R4,#0xC]|226-96
51012|code|BLE             loc_C786|31-221
51014|code|MOVS            R3, #0|0-35
51016|code|STRB.W          R3, [SP,#0xC]|141-248-12-48
51020|code|LDRB            R3, [R2,#0x10]|19-124
51022|code|LSLS            R7, R3, #0x1F|223-7
51024|code|IT MI|72-191
51026|code|ADDMI           R6, SP, #0xC|3-174
51028|code|BPL             loc_C794|30-213
51030|code|LDR             R0, [R2]|16-104
51032|code|BLX             strlen|252-247-162-238
51036|code|MOV             R7, R0|7-70
51038|code|MOV             R0, R6|48-70
51040|code|BLX             strlen|252-247-158-238
51044|code|ADDS            R0, R7, R0|56-24
51046|code|ADDS            R0, #1|1-48
51048|code|BLX             malloc|252-247-104-238
51052|code|MOV             R7, R0|7-70
51054|code|CMP             R0, #0|0-40
51056|code|BEQ             loc_C7B0|30-208
51058|code|MOVS            R3, #0|0-35
51060|code|STRB            R3, [R0]|3-112
51062|code|LDR             R3, [R4,#0xC]|227-104
51064|code|LDR             R1, [R3]|25-104
51066|code|BLX             strcat|252-247-54-238
51070|code|MOV             R0, R7|56-70
51072|code|MOV             R1, R6|49-70
51074|code|BLX             strcat|252-247-50-238
51078|code|LDR             R2, [SP,#0x1C]|7-154
51080|code|MOV             R0, R7|56-70
51082|code|LDR             R3, [R5]|43-104
51084|code|CMP             R2, R3|154-66
51086|code|BNE             loc_C7CA|28-209
51088|code|ADD             SP, SP, #0x24 ; '$'|9-176
51090|code|POP             {R4-R7,PC}|240-189
51092|code|ADD             R6, SP, #0xC|3-174
51094|code|LDR             R7, [R2,#4]|87-104
51096|code|LDR.W           LR, [R4,#0x10]|212-248-16-224
51100|code|MOVS            R1, #0xF|15-33
51102|code|LDR             R3, [R2,#0xC]|211-104
51104|code|MOV             R0, R6|48-70
51106|code|LDR             R2, =a0Lu; "%0*lu"|26-74
51108|code|ADD             R7, LR|119-68
51110|code|STR             R7, [SP]|0-151
51112|code|BLX             snprintf|252-247-158-238
51116|code|LDR             R2, [R4,#0xC]|226-104
51118|code|B               loc_C756|210-231
51120|code|BLX             __errno_location|252-247-148-238
51124|code|MOVS            R2, #0xC|12-34
51126|code|MOVW            R1, #0x8DF|64-246-223-1
51130|code|MOV             R3, R0|3-70
51132|code|LDR             R0, =unk_F8A8|20-72
51134|code|STR             R2, [R3]|26-96
51136|code|LDR             R2, =aHostlistNext; "hostlist_next"|20-74
51138|code|BL              sub_A5E0|253-247-13-255
51142|code|MOV             R7, R0|7-70
51144|code|B               loc_C786|221-231
51146|code|BLX             __stack_chk_fail|252-247-222-237
51150|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|18-72
51152|code|MOVW            R2, #0x8CE|64-246-206-2
51156|code|LDR             R1, =unk_F8A8|14-73
51158|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|17-75
51160|code|BLX             __assert_fail|252-247-28-239
51164|code|LDR             R0, =unk_FB04|16-72
51166|code|MOV.W           R2, #0x8D0|79-244-13-98
51170|code|LDR             R1, =unk_F8A8|11-73
51172|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|13-75
51174|code|BLX             __assert_fail|252-247-22-239
51178|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
51180|code|MOV.W           R2, #0x8D0|79-244-13-98
51184|code|LDR             R1, =unk_F8A8|7-73
51186|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|10-75
51188|code|BLX             __assert_fail|252-247-14-239
51192|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
51194|code|MOVW            R2, #0x8CF|64-246-207-2
51198|code|LDR             R1, =unk_F8A8|4-73
51200|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|6-75
51202|code|BLX             __assert_fail|252-247-8-239
51206|data|ALIGN 4|0-191
51208|data|DCD __stack_chk_guard|56-133-1-0
51212|data|DCD a0Lu; "%0*lu"|220-249-0-0
51216|data|DCD unk_F8A8|168-248-0-0
51220|data|DCD aHostlistNext; "hostlist_next"|144-251-0-0
51224|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
51228|data|DCD aHostlistNext_0; "hostlist_next"|40-248-0-0
51232|data|DCD unk_FB04|4-251-0-0
51236|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|28-251-0-0
51240|data|DCD aIMagic57005; "i->magic == 57005"|140-250-0-0
51244|code|PUSH.W          {R4-R10,LR}|45-233-240-71
51248|code|SUB.W           SP, SP, #0x410|173-245-130-109
51252|code|LDR             R6, =__stack_chk_guard|51-78
51254|code|MOV             R8, R0|128-70
51256|code|LDR             R3, [R6]|51-104
51258|code|STR.W           R3, [SP,#0x40C]|205-248-12-52
51262|code|CMP             R0, #0|0-40
51264|code|BEQ             loc_C8F4|88-208
51266|code|LDR             R3, [R0]|3-104
51268|code|MOVW            R2, #0xDEAD|77-246-173-98
51272|code|CMP             R3, R2|147-66
51274|code|BNE             loc_C8E6|76-209
51276|code|LDR             R5, [R0,#4]|69-104
51278|code|CMP             R5, #0|0-45
51280|code|BEQ             loc_C8D8|66-208
51282|code|LDR             R2, [R5]|42-104
51284|code|CMP             R2, R3|154-66
51286|code|BNE             loc_C8CA|56-209
51288|code|LDR             R3, [R0,#0x10]|3-105
51290|code|LDR.W           R9, [R5,#8]|213-248-8-144
51294|code|ADDS            R3, #1|1-51
51296|code|LDR.W           R10, [R5,#0x10]|213-248-16-160
51300|code|CMP             R3, #0|0-43
51302|code|LDR             R4, [R0,#8]|132-104
51304|code|STR             R3, [R0,#0x10]|3-97
51306|code|BLE             loc_C898|21-221
51308|code|ADD.W           R7, R10, R4,LSL#2|10-235-132-7
51312|code|B               loc_C880|6-224
51314|code|LDR.W           R1, [R7,#4]!|87-248-4-31
51318|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
51322|code|BL              sub_ADA4|254-247-147-250
51326|code|CBZ             R0, loc_C886|16-177
51328|code|ADDS            R4, #1|1-52
51330|code|CMP             R9, R4|161-69
51332|code|BGT             loc_C872|245-220
51334|code|LDR.W           R3, [R10,R4,LSL#2]|90-248-36-48
51338|code|MOVS            R2, #0|0-34
51340|code|STR.W           R4, [R8,#8]|200-248-8-64
51344|code|STR.W           R2, [R8,#0x10]|200-248-16-32
51348|code|STR.W           R3, [R8,#0xC]|200-248-12-48
51352|code|MOVS            R0, #0|0-32
51354|code|CMP             R9, R4|161-69
51356|code|BLE             loc_C8B4|10-221
51358|code|MOV.W           R2, #0x400|79-244-128-98
51362|code|ADD             R3, SP, #8|2-171
51364|code|MOV             R0, R5|40-70
51366|code|ADD             R1, SP, #4|1-169
51368|code|STR             R4, [SP,#4]|1-148
51370|code|BL              sub_ADC8|254-247-141-250
51374|code|ADD             R0, SP, #8|2-168
51376|code|BLX             __strdup|252-247-38-238
51380|code|LDR.W           R2, [SP,#0x40C]|221-248-12-36
51384|code|LDR             R3, [R6]|51-104
51386|code|CMP             R2, R3|154-66
51388|code|BNE             loc_C8C6|3-209
51390|code|ADD.W           SP, SP, #0x410|13-245-130-109
51394|code|POP.W           {R4-R10,PC}|189-232-240-135
51398|code|BLX             __stack_chk_fail|252-247-96-237
51402|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|15-72
51404|code|MOV.W           R2, #0x8F0|79-244-15-98
51408|code|LDR             R1, =unk_F8A8|14-73
51410|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|15-75
51412|code|BLX             __assert_fail|252-247-158-238
51416|code|LDR             R0, =unk_FB04|14-72
51418|code|MOV.W           R2, #0x8F0|79-244-15-98
51422|code|LDR             R1, =unk_F8A8|11-73
51424|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|11-75
51426|code|BLX             __assert_fail|252-247-152-238
51430|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|12-72
51432|code|MOVW            R2, #0x8EF|64-246-239-2
51436|code|LDR             R1, =unk_F8A8|7-73
51438|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|8-75
51440|code|BLX             __assert_fail|252-247-144-238
51444|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
51446|code|MOVW            R2, #0x8EE|64-246-238-2
51450|code|LDR             R1, =unk_F8A8|4-73
51452|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|4-75
51454|code|BLX             __assert_fail|252-247-138-238
51458|data|ALIGN 4|0-191
51460|data|DCD __stack_chk_guard|56-133-1-0
51464|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|28-251-0-0
51468|data|DCD unk_F8A8|168-248-0-0
51472|data|DCD aHostlistNextRa; "hostlist_next_range"|56-248-0-0
51476|data|DCD unk_FB04|4-251-0-0
51480|data|DCD aIMagic57005; "i->magic == 57005"|140-250-0-0
51484|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
51488|code|PUSH            {R3-R5,LR}|56-181
51490|code|MOV             R4, R0|4-70
51492|code|CMP             R0, #0|0-40
51494|code|BEQ             loc_C9D0|83-208
51496|code|LDR             R3, [R0]|3-104
51498|code|MOVW            R2, #0xDEAD|77-246-173-98
51502|code|CMP             R3, R2|147-66
51504|code|BNE             loc_C9C2|71-209
51506|code|LDR             R2, [R0,#4]|66-104
51508|code|CMP             R2, #0|0-42
51510|code|BEQ             loc_C9B4|61-208
51512|code|LDR             R2, [R2]|18-104
51514|code|CMP             R2, R3|154-66
51516|code|BNE             loc_C9A6|51-209
51518|code|LDR             R0, [R0,#0xC]|192-104
51520|code|LDR             R1, [R4,#0x10]|33-105
51522|code|LDR             R3, [R0,#4]|67-104
51524|code|ADDS            R1, R1, R3|201-24
51526|code|BL              sub_AC04|254-247-93-249
51530|code|MOV             R5, R0|5-70
51532|code|CBZ             R0, loc_C980|192-177
51534|code|LDR             R2, [R4,#8]|162-104
51536|code|MOV             R1, R0|1-70
51538|code|LDR             R0, [R4,#4]|96-104
51540|code|ADDS            R2, #1|1-50
51542|code|BL              sub_B0DC|254-247-193-251
51546|code|MOV             R0, R5|40-70
51548|code|BL              sub_A6F8|253-247-204-254
51552|code|LDR             R3, [R4,#4]|99-104
51554|code|LDR             R2, [R4,#8]|162-104
51556|code|LDR             R1, [R3,#0x10]|25-105
51558|code|ADDS            R2, #1|1-50
51560|code|STR             R2, [R4,#8]|162-96
51562|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
51566|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
51570|code|STR             R1, [R4,#0x10]|33-97
51572|code|STR             R2, [R4,#0xC]|226-96
51574|code|LDR             R2, [R3,#0xC]|218-104
51576|code|MOVS            R0, #1|1-32
51578|code|SUBS            R2, #1|1-58
51580|code|STR             R2, [R3,#0xC]|218-96
51582|code|POP             {R3-R5,PC}|56-189
51584|code|LDR             R0, [R4,#0xC]|224-104
51586|code|BL              sub_AA08|254-247-65-248
51590|code|CBNZ            R0, loc_C99A|64-185
51592|code|LDR             R3, [R4,#4]|99-104
51594|code|MOVS            R0, #1|1-32
51596|code|LDR             R2, [R4,#0x10]|34-105
51598|code|SUBS            R2, #1|1-58
51600|code|STR             R2, [R4,#0x10]|34-97
51602|code|LDR             R2, [R3,#0xC]|218-104
51604|code|SUBS            R2, #1|1-58
51606|code|STR             R2, [R3,#0xC]|218-96
51608|code|POP             {R3-R5,PC}|56-189
51610|code|LDR             R0, [R4,#4]|96-104
51612|code|LDR             R1, [R4,#8]|161-104
51614|code|BL              sub_B944|254-247-209-255
51618|code|LDR             R3, [R4,#4]|99-104
51620|code|B               loc_C976|231-231
51622|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
51624|code|MOVW            R2, #0x906|64-246-6-18
51628|code|LDR             R1, =unk_F8A8|13-73
51630|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|14-75
51632|code|BLX             __assert_fail|252-247-48-238
51636|code|LDR             R0, =unk_FB04|13-72
51638|code|MOVW            R2, #0x906|64-246-6-18
51642|code|LDR             R1, =unk_F8A8|10-73
51644|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|10-75
51646|code|BLX             __assert_fail|252-247-42-238
51650|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
51652|code|MOVW            R2, #0x905|64-246-5-18
51656|code|LDR             R1, =unk_F8A8|6-73
51658|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|7-75
51660|code|BLX             __assert_fail|252-247-34-238
51664|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|8-72
51666|code|MOVW            R2, #0x904|64-246-4-18
51670|code|LDR             R1, =unk_F8A8|3-73
51672|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|3-75
51674|code|BLX             __assert_fail|252-247-28-238
51678|data|ALIGN 0x10|0-191
51680|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|28-251-0-0
51684|data|DCD unk_F8A8|168-248-0-0
51688|data|DCD aHostlistRemove; "hostlist_remove"|76-248-0-0
51692|data|DCD unk_FB04|4-251-0-0
51696|data|DCD aIMagic57005; "i->magic == 57005"|140-250-0-0
51700|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
51704|code|PUSH            {R3-R5,LR}|56-181
51706|code|MOV             R5, R0|5-70
51708|code|MOVS            R0, #4|4-32
51710|code|BLX             malloc|252-247-30-237
51714|code|MOV             R4, R0|4-70
51716|code|CBZ             R0, loc_CA16|56-177
51718|code|MOV             R0, R5|40-70
51720|code|BL              sub_C678|255-247-54-254
51724|code|MOV             R3, R0|3-70
51726|code|STR             R0, [R4]|32-96
51728|code|CBZ             R0, loc_CA1A|24-177
51730|code|BL              sub_BA74|255-247-47-248
51734|code|MOV             R0, R4|32-70
51736|code|POP             {R3-R5,PC}|56-189
51738|code|MOV             R0, R4|32-70
51740|code|MOV             R4, R3|28-70
51742|code|BLX             free|252-247-132-236
51746|code|B               loc_CA16|248-231
51748|code|PUSH            {R3-R5,LR}|56-181
51750|code|MOV             R5, R0|5-70
51752|code|MOVS            R0, #4|4-32
51754|code|BLX             malloc|252-247-8-237
51758|code|MOV             R4, R0|4-70
51760|code|CBZ             R0, loc_CA3E|40-177
51762|code|LDR             R0, [R5]|40-104
51764|code|BL              sub_B1B4|254-247-190-251
51768|code|MOV             R3, R0|3-70
51770|code|STR             R0, [R4]|32-96
51772|code|CBZ             R0, loc_CA42|8-177
51774|code|MOV             R0, R4|32-70
51776|code|POP             {R3-R5,PC}|56-189
51778|code|MOV             R0, R4|32-70
51780|code|MOV             R4, R3|28-70
51782|code|BLX             free|252-247-112-236
51786|code|B               loc_CA3E|248-231
51788|code|PUSH            {R4,LR}|16-181
51790|code|MOV             R4, R0|4-70
51792|code|CBZ             R0, locret_CA62|56-177
51794|code|LDR             R0, [R0]|0-104
51796|code|BL              sub_C060|255-247-4-251
51800|code|MOV             R0, R4|32-70
51802|code|POP.W           {R4,LR}|189-232-16-64
51806|code|B.W             j_free|252-247-97-188
51810|code|POP             {R4,PC}|16-189
51812|code|PUSH.W          {R4-R11,LR}|45-233-240-79
51816|code|SUB             SP, SP, #0xC|131-176
51818|code|STR             R0, [SP,#4]|1-144
51820|code|MOV             R0, R1|8-70
51822|code|BL              sub_C678|255-247-3-254
51826|code|MOV             R8, R0|128-70
51828|code|CMP             R0, #0|0-40
51830|code|BEQ.W           loc_CBB0|0-240-155-128
51834|code|BL              sub_BA74|254-247-251-255
51838|code|LDR             R3, [SP,#4]|1-155
51840|code|LDR             R5, [R3]|29-104
51842|code|CMP             R5, #0|0-45
51844|code|BEQ.W           loc_CBC2|0-240-157-128
51848|code|LDR             R2, [R5]|42-104
51850|code|MOVW            R3, #0xDEAD|77-246-173-99
51854|code|CMP             R2, R3|154-66
51856|code|BNE.W           loc_CBB4|64-240-144-128
51860|code|LDR.W           R3, [R8,#8]|216-248-8-48
51864|code|MOV.W           R9, #0|79-240-0-9
51868|code|CMP             R3, #0|0-43
51870|code|IT GT|200-191
51872|code|MOVGT           R6, R9|78-70
51874|code|BLE             loc_CBA2|126-221
51876|code|LDR.W           R10, [R5,#8]|213-248-8-160
51880|code|LDR             R3, [R5,#4]|107-104
51882|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
51886|code|CMP             R3, R10|83-69
51888|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
51892|code|BEQ             loc_CB4C|74-208
51894|code|MOV             R0, R11|88-70
51896|code|BL              sub_A98C|253-247-104-255
51900|code|CMP.W           R10, #0|186-241-0-15
51904|code|MOV             R7, R0|7-70
51906|code|BLE             loc_CB6A|82-221
51908|code|MOVS            R4, #0|0-36
51910|code|B               loc_CAD2|4-224
51912|code|LDR.W           R10, [R5,#8]|213-248-8-160
51916|code|ADDS            R4, #1|1-52
51918|code|CMP             R4, R10|84-69
51920|code|BGE             loc_CB6A|75-218
51922|code|LDR             R3, [R5,#0x10]|43-105
51924|code|MOV             R0, R11|88-70
51926|code|MOV.W           R10, R4,LSL#2|79-234-132-10
51930|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
51934|code|BL              sub_AC8C|254-247-213-248
51938|code|CMP             R0, #0|0-40
51940|code|BGT             loc_CAC8|240-220
51942|code|LDR             R3, [R5,#0x10]|43-105
51944|code|MOV             R0, R11|88-70
51946|code|LDR.W           R1, [R3,R10]|83-248-10-16
51950|code|BL              sub_ACEC|254-247-253-248
51954|code|CMP             R0, #0|0-40
51956|code|MOV             R10, R0|130-70
51958|code|IT LT|184-191
51960|code|MOVLT.W         R10, #0|79-240-0-10
51964|code|BLT             loc_CB06|3-219
51966|code|MOV             R0, R5|40-70
51968|code|MOV             R1, R4|33-70
51970|code|BL              sub_B944|254-247-31-255
51974|code|MOV             R0, R5|40-70
51976|code|MOV             R1, R11|89-70
51978|code|MOV             R2, R4|34-70
51980|code|BL              sub_B0DC|254-247-230-250
51984|code|CBZ             R4, loc_CB20|52-177
51986|code|MOV             R0, R5|40-70
51988|code|MOV             R1, R4|33-70
51990|code|BL              sub_B9E0|254-247-99-255
51994|code|CMP             R0, #0|0-40
51996|code|IT GT|200-191
51998|code|ADDGT           R10, R0|130-68
52000|code|LDR             R3, [R5,#0xC]|235-104
52002|code|RSB.W           R7, R10, R7|202-235-7-7
52006|code|ADDS            R3, R3, R7|219-25
52008|code|STR             R3, [R5,#0xC]|235-96
52010|code|LDR.W           R3, [R8,#8]|216-248-8-48
52014|code|ADDS            R6, #1|1-54
52016|code|ADD             R9, R7|185-68
52018|code|CMP             R3, R6|179-66
52020|code|BLE             loc_CBA2|53-221
52022|code|LDR             R3, [SP,#4]|1-155
52024|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
52028|code|LDR             R5, [R3]|29-104
52030|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
52034|code|LDR.W           R10, [R5,#8]|213-248-8-160
52038|code|LDR             R3, [R5,#4]|107-104
52040|code|CMP             R3, R10|83-69
52042|code|BNE             loc_CAB6|180-209
52044|code|MOV             R0, R5|40-70
52046|code|BL              sub_AFF4|254-247-81-250
52050|code|MOV             R7, R0|7-70
52052|code|CMP             R0, #0|0-40
52054|code|BEQ             loc_CB2A|232-208
52056|code|MOV             R0, R11|88-70
52058|code|LDR.W           R10, [R5,#8]|213-248-8-160
52062|code|BL              sub_A98C|253-247-21-255
52066|code|CMP.W           R10, #0|186-241-0-15
52070|code|MOV             R7, R0|7-70
52072|code|BGT             loc_CAC4|172-220
52074|code|MOV             R0, R11|88-70
52076|code|LDR             R4, [R5,#0x10]|44-105
52078|code|BL              sub_ABCC|254-247-45-248
52082|code|ADD.W           R3, R10, #1|10-241-1-3
52086|code|LDR             R2, [R5,#0xC]|234-104
52088|code|CMP             R3, #1|1-43
52090|code|ADD             R2, R7|58-68
52092|code|STR.W           R0, [R4,R10,LSL#2]|68-248-42-0
52096|code|STR             R3, [R5,#8]|171-96
52098|code|STR             R2, [R5,#0xC]|234-96
52100|code|BLE             loc_CB2A|209-221
52102|code|MOV             R0, R5|40-70
52104|code|MOV             R1, R10|81-70
52106|code|BL              sub_B9E0|254-247-41-255
52110|code|LDR.W           R3, [R8,#8]|216-248-8-48
52114|code|CMP             R0, #0|0-40
52116|code|IT GT|200-191
52118|code|RSBGT.W         R7, R0, R7|192-235-7-7
52122|code|ADDS            R6, #1|1-54
52124|code|CMP             R3, R6|179-66
52126|code|ADD             R9, R7|185-68
52128|code|BGT             loc_CB36|201-220
52130|code|MOV             R0, R8|64-70
52132|code|BL              sub_C060|255-247-92-250
52136|code|MOV             R0, R9|72-70
52138|code|ADD             SP, SP, #0xC|3-176
52140|code|POP.W           {R4-R11,PC}|189-232-240-143
52144|code|MOV             R9, R0|129-70
52146|code|B               loc_CBA8|249-231
52148|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|6-72
52150|code|MOVW            R2, #0x985|64-246-133-18
52154|code|LDR             R1, =unk_F8A8|6-73
52156|code|LDR             R3, =aHostsetInsert; "hostset_insert"|6-75
52158|code|BLX             __assert_fail|252-247-42-237
52162|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|6-72
52164|code|MOVW            R2, #0x985|64-246-133-18
52168|code|LDR             R1, =unk_F8A8|2-73
52170|code|LDR             R3, =aHostsetInsert; "hostset_insert"|3-75
52172|code|BLX             __assert_fail|252-247-34-237
52176|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|184-251-0-0
52180|data|DCD unk_F8A8|168-248-0-0
52184|data|DCD aHostsetInsert; "hostset_insert"|92-248-0-0
52188|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|160-251-0-0
52192|code|PUSH.W          {R3-R11,LR}|45-233-248-79
52196|code|MOV             R6, R0|6-70
52198|code|LDR             R3, [R0]|3-104
52200|code|LDR             R4, [R3]|28-104
52202|code|MOVW            R3, #0xDEAD|77-246-173-99
52206|code|CMP             R4, R3|156-66
52208|code|BNE             loc_CC90|78-209
52210|code|MOV             R0, R1|8-70
52212|code|BL              sub_C678|255-247-64-253
52216|code|MOV             R9, R0|129-70
52218|code|CMP.W           R9, #0|185-241-0-15
52222|code|BEQ             locret_CC8C|69-208
52224|code|BL              sub_B4B4|254-247-88-252
52228|code|MOV.W           R8, #0|79-240-0-8
52232|code|MOV             R10, R4|162-70
52234|code|MOV             R11, R0|131-70
52236|code|MOV             R0, R9|72-70
52238|code|BL              sub_B2C8|254-247-91-251
52242|code|MOV             R7, R0|7-70
52244|code|CMP             R0, #0|0-40
52246|code|BEQ             loc_CC6E|42-208
52248|code|LDR             R3, [R6]|51-104
52250|code|CMP             R3, #0|0-43
52252|code|BEQ             loc_CCAC|70-208
52254|code|LDR             R3, [R3]|27-104
52256|code|CMP             R3, R10|83-69
52258|code|BNE             loc_CC9E|60-209
52260|code|MOV             R0, R7|56-70
52262|code|BL              sub_A714|253-247-117-253
52266|code|LDR             R2, [R6]|50-104
52268|code|LDR             R3, [R2,#8]|147-104
52270|code|CMP             R3, #0|0-43
52272|code|MOV             R5, R0|5-70
52274|code|BLE             loc_CC88|41-221
52276|code|MOVS            R4, #0|0-36
52278|code|B               loc_CC42|4-224
52280|code|LDR             R2, [R6]|50-104
52282|code|ADDS            R4, #1|1-52
52284|code|LDR             R3, [R2,#8]|147-104
52286|code|CMP             R4, R3|156-66
52288|code|BGE             loc_CC84|32-218
52290|code|LDR             R3, [R2,#0x10]|19-105
52292|code|MOV             R1, R5|41-70
52294|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
52298|code|BL              sub_A894|253-247-35-254
52302|code|CMP             R0, #0|0-40
52304|code|BEQ             loc_CC38|242-208
52306|code|MOVS            R3, #1|1-35
52308|code|MOV             R0, R5|40-70
52310|code|ADD             R8, R3|152-68
52312|code|BL              sub_A6D0|253-247-58-253
52316|code|MOV             R0, R7|56-70
52318|code|BLX             free|252-247-100-235
52322|code|MOV             R0, R9|72-70
52324|code|BL              sub_B2C8|254-247-48-251
52328|code|MOV             R7, R0|7-70
52330|code|CMP             R0, #0|0-40
52332|code|BNE             loc_CC18|212-209
52334|code|MOV             R0, R9|72-70
52336|code|BL              sub_C060|255-247-246-249
52340|code|RSB.W           LR, R8, R11|200-235-11-14
52344|code|RSBS.W          R0, LR, #0|222-241-0-0
52348|code|ADC.W           R0, R0, LR|64-235-14-0
52352|code|POP.W           {R3-R11,PC}|189-232-248-143
52356|code|MOV             R3, R0|3-70
52358|code|B               loc_CC54|229-231
52360|code|MOVS            R3, #0|0-35
52362|code|B               loc_CC54|227-231
52364|code|POP.W           {R3-R11,PC}|189-232-248-143
52368|code|LDR             R0, =aSetHlMagic5700_0; "set->hl->magic == 57005"|10-72
52370|code|MOVW            R2, #0x9A9|64-246-169-18
52374|code|LDR             R1, =unk_F8A8|10-73
52376|code|LDR             R3, =aHostsetWithin; "hostset_within"|10-75
52378|code|BLX             __assert_fail|252-247-188-236
52382|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|10-72
52384|code|MOVW            R2, #0x995|64-246-149-18
52388|code|LDR             R1, =unk_F8A8|6-73
52390|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|9-75
52392|code|BLX             __assert_fail|252-247-180-236
52396|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|8-72
52398|code|MOVW            R2, #0x995|64-246-149-18
52402|code|LDR             R1, =unk_F8A8|3-73
52404|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|5-75
52406|code|BLX             __assert_fail|252-247-174-236
52410|data|ALIGN 4|0-191
52412|data|DCD aSetHlMagic5700_0; "set->hl->magic == 57005"|212-251-0-0
52416|data|DCD unk_F8A8|168-248-0-0
52420|data|DCD aHostsetWithin; "hostset_within"|108-248-0-0
52424|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|184-251-0-0
52428|data|DCD aHostsetFindHos; "hostset_find_host"|124-248-0-0
52432|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|160-251-0-0
52436|code|LDR             R0, [R0]|0-104
52438|code|B.W             loc_C67C|255-247-209-188
52442|data|ALIGN 4|0-191
52444|code|LDR             R0, [R0]|0-104
52446|code|B.W             sub_BE58|255-247-187-184
52450|data|ALIGN 4|0-191
52452|code|LDR             R0, [R0]|0-104
52454|code|B.W             loc_BE74|255-247-197-184
52458|data|ALIGN 4|0-191
52460|code|LDR             R0, [R0]|0-104
52462|code|B.W             sub_B2C8|254-247-235-186
52466|data|ALIGN 4|0-191
52468|code|LDR             R0, [R0]|0-104
52470|code|B.W             loc_C0C8|255-247-231-185
52474|data|ALIGN 4|0-191
52476|code|LDR             R0, [R0]|0-104
52478|code|B.W             loc_C1E4|255-247-113-186
52482|data|ALIGN 4|0-191
52484|code|LDR             R0, [R0]|0-104
52486|code|B.W             sub_B4B4|254-247-213-187
52490|data|ALIGN 4|0-191
52492|code|LDR             R0, [R0]|0-104
52494|code|B.W             sub_B740|254-247-23-189
52498|data|ALIGN 4|0-191
52500|code|LDR             R0, [R0]|0-104
52502|code|B.W             loc_B5A8|254-247-71-188
52506|data|ALIGN 4|0-191
52508|code|CMP             R0, #3|3-40
52510|code|PUSH            {R4-R6,LR}|112-181
52512|code|MOV             R4, R0|4-70
52514|code|SUB             SP, SP, #8|130-176
52516|code|BLS             loc_CD6E|35-217
52518|code|CMP             R1, #0|0-41
52520|code|BEQ             loc_CD7C|40-208
52522|code|LDR             R5, [R1]|13-104
52524|code|CBZ             R5, loc_CD38|37-177
52526|code|LDR             R3, [R5]|43-104
52528|code|STR             R3, [R1]|11-96
52530|code|MOV             R0, R5|40-70
52532|code|ADD             SP, SP, #8|2-176
52534|code|POP             {R4-R6,PC}|112-189
52536|code|LSLS            R6, R0, #5|70-1
52538|code|STR             R1, [SP,#0x18+var_14]|1-145
52540|code|MOV             R0, R6; size|48-70
52542|code|BLX             malloc|252-247-126-235
52546|code|LDR             R1, [SP,#0x18+var_14]|1-153
52548|code|STR             R0, [R1]|8-96
52550|code|CBZ             R0, loc_CD64|104-177
52552|code|SUBS            R6, R6, R4|54-27
52554|code|ADDS            R6, R0, R6|134-25
52556|code|CMP             R0, R6|176-66
52558|code|BCC             loc_CD54|1-211
52560|code|B               loc_CD5C|4-224
52562|code|MOV             R0, R3|24-70
52564|code|ADDS            R3, R0, R4|3-25
52566|code|STR             R3, [R0]|3-96
52568|code|CMP             R6, R3|158-66
52570|code|BHI             loc_CD52|250-216
52572|code|MOVS            R3, #0|0-35
52574|code|STR             R3, [R6]|51-96
52576|code|LDR             R3, [R1]|11-104
52578|code|CBNZ            R3, loc_CD8A|147-185
52580|code|BLX             __errno_location|252-247-186-235
52584|code|MOVS            R3, #0xC|12-35
52586|code|STR             R3, [R0]|3-96
52588|code|B               loc_CD32|225-231
52590|code|LDR             R0, =aSizeSizeofVoid; "size >= sizeof(void *)"|8-72
52592|code|MOVW            R2, #0x30B; line|64-242-11-50
52596|code|LDR             R1, =aListC; "list.c"|7-73
52598|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|8-75
52600|code|BLX             __assert_fail|252-247-76-236
52604|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|7-72
52606|code|MOV.W           R2, #0x30C; line|79-244-67-114
52610|code|LDR             R1, =aListC; "list.c"|4-73
52612|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|4-75
52614|code|BLX             __assert_fail|252-247-70-236
52618|code|MOV             R5, R3|29-70
52620|code|B               loc_CD2E|207-231
52622|data|ALIGN 0x10|0-191
52624|data|DCD aSizeSizeofVoid; "size >= sizeof(void *)"|124-253-0-0
52628|data|DCD aListC; "list.c"|172-248-0-0
52632|data|DCD aListAllocAux; "list_alloc_aux"|236-251-0-0
52636|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|148-253-0-0
52640|code|PUSH            {R3-R7,LR}|248-181
52642|code|MOV             R5, R0|5-70
52644|code|MOV             R4, R1|12-70
52646|code|MOV             R6, R2|22-70
52648|code|CMP             R0, #0|0-40
52650|code|BEQ             loc_CE8C|111-208
52652|code|LDR             R2, [R0,#0x14]|66-105
52654|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
52662|code|CMP             R2, R3|154-66
52664|code|BNE             loc_CE70|90-209
52666|code|CMP             R1, #0|0-41
52668|code|BEQ             loc_CE62|81-208
52670|code|CMP             R6, #0|0-46
52672|code|BEQ             loc_CE7E|93-208
52674|code|MOVS            R0, #8|8-32
52676|code|LDR             R1, =unk_18568|53-73
52678|code|BL              sub_CD1C|255-247-169-255
52682|code|CMP             R0, #0|0-40
52684|code|BEQ             loc_CE36|51-208
52686|code|STR             R6, [R0]|6-96
52688|code|LDR             R3, [R4]|35-104
52690|code|STR             R3, [R0,#4]|67-96
52692|code|CMP             R3, #0|0-43
52694|code|BEQ             loc_CE30|43-208
52696|code|STR             R0, [R4]|32-96
52698|code|LDR             R2, [R5,#0x10]|42-105
52700|code|LDR             R3, [R5,#8]|171-104
52702|code|ADDS            R2, #1|1-50
52704|code|STR             R2, [R5,#0x10]|42-97
52706|code|CBZ             R3, loc_CE2C|27-179
52708|code|LDR             R7, [R3,#0x10]|31-105
52710|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
52718|code|CMP             R7, R2|151-66
52720|code|IT EQ|8-191
52722|code|ADDEQ.W         R12, R0, #4|0-241-4-12
52726|code|BEQ             loc_CE1C|17-208
52728|code|B               loc_CE46|37-224
52730|code|LDR             R2, [R3,#4]|90-104
52732|code|LDR             R5, [R0,#4]|69-104
52734|code|CMP             R2, R5|170-66
52736|code|ITT EQ|4-191
52738|code|STREQ           R0, [R3,#4]|88-96
52740|code|MOVEQ           R2, R0|2-70
52742|code|LDR             R1, [R1]|9-104
52744|code|CMP             R2, R1|138-66
52746|code|BEQ             loc_CE12|2-208
52748|code|LDR             R1, [R1,#4]|73-104
52750|code|CMP             R2, R1|138-66
52752|code|BNE             loc_CE54|32-209
52754|code|LDR             R3, [R3,#0xC]|219-104
52756|code|CBZ             R3, loc_CE2C|83-177
52758|code|LDR             R2, [R3,#0x10]|26-105
52760|code|CMP             R2, R7|186-66
52762|code|BNE             loc_CE46|20-209
52764|code|LDR             R1, [R3,#8]|153-104
52766|code|CMP             R1, R4|161-66
52768|code|BNE             loc_CDFA|235-209
52770|code|MOV             R1, R12|97-70
52772|code|STR.W           R12, [R3,#8]|195-248-8-192
52776|code|LDR             R2, [R3,#4]|90-104
52778|code|B               loc_CE06|236-231
52780|code|MOV             R0, R6|48-70
52782|code|POP             {R3-R7,PC}|248-189
52784|code|ADDS            R3, R0, #4|3-29
52786|code|STR             R3, [R5,#4]|107-96
52788|code|B               loc_CDD8|208-231
52790|code|LDR             R0, =aListC; "list.c"|26-72
52792|code|MOV.W           R1, #0x29C|79-244-39-113
52796|code|LDR             R2, =aListNodeCreate; "list node create"|25-74
52798|code|POP.W           {R3-R7,LR}|189-232-248-64
52802|code|B.W             sub_A5E0|253-247-205-187
52806|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|24-72
52808|code|MOVW            R2, #0x2A3; line|64-242-163-34
52812|code|LDR             R1, =aListC; "list.c"|20-73
52814|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|23-75
52816|code|BLX             __assert_fail|252-247-224-235
52820|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|22-72
52822|code|MOV.W           R2, #0x2A8; line|79-244-42-114
52826|code|LDR             R1, =aListC; "list.c"|17-73
52828|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|19-75
52830|code|BLX             __assert_fail|252-247-218-235
52834|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|20-72
52836|code|MOVW            R2, #0x299; line|64-242-153-34
52840|code|LDR             R1, =aListC; "list.c"|13-73
52842|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|16-75
52844|code|BLX             __assert_fail|252-247-210-235
52848|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|17-72
52850|code|MOVW            R2, #0x297; line|64-242-151-34
52854|code|LDR             R1, =aListC; "list.c"|10-73
52856|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|12-75
52858|code|BLX             __assert_fail|252-247-204-235
52862|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|15-72
52864|code|MOVW            R2, #0x29A; line|64-242-154-34
52868|code|LDR             R1, =aListC; "list.c"|6-73
52870|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|9-75
52872|code|BLX             __assert_fail|252-247-196-235
52876|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|12-72
52878|code|MOVW            R2, #0x296; line|64-242-150-34
52882|code|LDR             R1, =aListC; "list.c"|3-73
52884|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|5-75
52886|code|BLX             __assert_fail|252-247-190-235
52890|data|ALIGN 4|0-191
52892|data|DCD unk_18568|104-133-1-0
52896|data|DCD aListC; "list.c"|172-248-0-0
52900|data|DCD aListNodeCreate; "list node create"|220-253-0-0
52904|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
52908|data|DCD aListNodeCreate_0; "list_node_create"|252-251-0-0
52912|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|8-254-0-0
52916|data|DCD aPpVoid0; "pp != ((void *)0)"|200-253-0-0
52920|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
52924|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
52928|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
52932|code|PUSH            {R3,LR}|8-181
52934|code|CBZ             R0, loc_CED2|32-177
52936|code|CBZ             R1, loc_CEE0|81-177
52938|code|LDR             R3, [R1]|11-104
52940|code|STR             R3, [R0]|3-96
52942|code|STR             R0, [R1]|8-96
52944|code|POP             {R3,PC}|8-189
52946|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
52948|code|MOVW            R2, #0x329; line|64-242-41-50
52952|code|LDR             R1, =aListC; "list.c"|6-73
52954|code|LDR             R3, =aListFreeAux; "list_free_aux"|7-75
52956|code|BLX             __assert_fail|252-247-154-235
52960|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|6-72
52962|code|MOVW            R2, #0x32A; line|64-242-42-50
52966|code|LDR             R1, =aListC; "list.c"|3-73
52968|code|LDR             R3, =aListFreeAux; "list_free_aux"|3-75
52970|code|BLX             __assert_fail|252-247-148-235
52974|data|ALIGN 0x10|0-191
52976|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
52980|data|DCD aListC; "list.c"|172-248-0-0
52984|data|DCD aListFreeAux; "list_free_aux"|16-252-0-0
52988|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|148-253-0-0
52992|code|PUSH            {R3-R7,LR}|248-181
52994|code|CMP             R0, #0|0-40
52996|code|BEQ             loc_CFB2|85-208
52998|code|LDR             R2, [R0,#0x14]|66-105
53000|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53008|code|CMP             R2, R3|154-66
53010|code|BNE             loc_CFA4|71-209
53012|code|CMP             R1, #0|0-41
53014|code|BEQ             loc_CFC0|83-208
53016|code|LDR             R3, [R1]|11-104
53018|code|CMP             R3, #0|0-43
53020|code|BEQ             loc_CF84|50-208
53022|code|LDR             R2, [R3,#4]|90-104
53024|code|LDR             R4, [R3]|28-104
53026|code|STR             R2, [R1]|10-96
53028|code|CMP             R2, #0|0-42
53030|code|BEQ             loc_CF80|43-208
53032|code|LDR             R5, [R0,#0x10]|5-105
53034|code|LDR             R2, [R0,#8]|130-104
53036|code|SUBS            R5, #1|1-61
53038|code|STR             R5, [R0,#0x10]|5-97
53040|code|CBZ             R2, loc_CF74|2-179
53042|code|LDR             R6, [R2,#0x10]|22-105
53044|code|MOV             R0, #0xDEADBEEF|75-246-239-96-205-246-173-96
53052|code|ADDS            R7, R3, #4|31-29
53054|code|CMP             R6, R0|134-66
53056|code|BEQ             loc_CF64|16-208
53058|code|B               loc_CF88|33-224
53060|code|LDR             R5, [R2,#8]|149-104
53062|code|CMP             R5, R7|189-66
53064|code|ITT EQ|4-191
53066|code|STREQ           R1, [R2,#8]|145-96
53068|code|MOVEQ           R5, R1|13-70
53070|code|LDR             R5, [R5]|45-104
53072|code|CMP             R5, R0|133-66
53074|code|BEQ             loc_CF5A|2-208
53076|code|LDR             R5, [R5,#4]|109-104
53078|code|CMP             R5, R0|133-66
53080|code|BNE             loc_CF96|29-209
53082|code|LDR             R2, [R2,#0xC]|210-104
53084|code|CBZ             R2, loc_CF74|82-177
53086|code|LDR             R0, [R2,#0x10]|16-105
53088|code|CMP             R0, R6|176-66
53090|code|BNE             loc_CF88|17-209
53092|code|LDR             R0, [R2,#4]|80-104
53094|code|CMP             R0, R3|152-66
53096|code|BNE             loc_CF44|236-209
53098|code|LDR             R0, [R3,#4]|88-104
53100|code|MOV             R5, R1|13-70
53102|code|STR             R1, [R2,#8]|145-96
53104|code|STR             R0, [R2,#4]|80-96
53106|code|B               loc_CF4E|236-231
53108|code|MOV             R0, R3|24-70
53110|code|LDR             R1, =unk_18568|22-73
53112|code|BL              sub_CEC4|255-247-164-255
53116|code|MOV             R0, R4|32-70
53118|code|POP             {R3-R7,PC}|248-189
53120|code|STR             R1, [R0,#4]|65-96
53122|code|B               loc_CF28|209-231
53124|code|MOV             R4, R3|28-70
53126|code|B               loc_CF7C|249-231
53128|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|18-72
53130|code|MOVW            R2, #0x2C6; line|64-242-198-34
53134|code|LDR             R1, =aListC; "list.c"|18-73
53136|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|18-75
53138|code|BLX             __assert_fail|252-247-64-235
53142|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|18-72
53144|code|MOVW            R2, #0x2CB; line|64-242-203-34
53148|code|LDR             R1, =aListC; "list.c"|14-73
53150|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|15-75
53152|code|BLX             __assert_fail|252-247-56-235
53156|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|15-72
53158|code|MOV.W           R2, #0x2BC; line|79-244-47-114
53162|code|LDR             R1, =aListC; "list.c"|11-73
53164|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|11-75
53166|code|BLX             __assert_fail|252-247-50-235
53170|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|13-72
53172|code|MOVW            R2, #0x2BB; line|64-242-187-34
53176|code|LDR             R1, =aListC; "list.c"|7-73
53178|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|8-75
53180|code|BLX             __assert_fail|252-247-42-235
53184|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|10-72
53186|code|MOVW            R2, #0x2BE; line|64-242-190-34
53190|code|LDR             R1, =aListC; "list.c"|4-73
53192|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|4-75
53194|code|BLX             __assert_fail|252-247-36-235
53198|data|ALIGN 0x10|0-191
53200|data|DCD unk_18568|104-133-1-0
53204|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
53208|data|DCD aListC; "list.c"|172-248-0-0
53212|data|DCD aListNodeDestro; "list_node_destroy"|32-252-0-0
53216|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|8-254-0-0
53220|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53224|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53228|data|DCD aPpVoid0; "pp != ((void *)0)"|200-253-0-0
53232|code|PUSH            {R4,LR}|16-181
53234|code|MOV             R4, R0|4-70
53236|code|LDR             R1, =unk_1856C|11-73
53238|code|MOVS            R0, #0x18|24-32
53240|code|BL              sub_CD1C|255-247-144-254
53244|code|CBZ             R0, loc_D016|88-177
53246|code|MOVS            R3, #0|0-35
53248|code|MOVW            R2, #0xBEEF|75-246-239-98
53252|code|STR             R3, [R0]|3-96
53254|code|MOVT.W          R2, #0xDEAD|205-246-173-98
53258|code|STR             R0, [R0,#4]|64-96
53260|code|STR             R3, [R0,#8]|131-96
53262|code|STR             R4, [R0,#0xC]|196-96
53264|code|STR             R3, [R0,#0x10]|3-97
53266|code|STR             R2, [R0,#0x14]|66-97
53268|code|POP             {R4,PC}|16-189
53270|code|LDR             R0, =aListC; "list.c"|4-72
53272|code|MOVS            R1, #0xDE|222-33
53274|code|LDR             R2, =aListCreate; "list create"|4-74
53276|code|POP.W           {R4,LR}|189-232-16-64
53280|code|B.W             sub_A5E0|253-247-222-186
53284|data|DCD unk_1856C|108-133-1-0
53288|data|DCD aListC; "list.c"|172-248-0-0
53292|data|DCD aListCreate; "list create"|64-254-0-0
53296|code|PUSH            {R3-R7,LR}|248-181
53298|code|MOV             R7, R0|7-70
53300|code|CMP             R0, #0|0-40
53302|code|BEQ             loc_D0C0|67-208
53304|code|LDR             R2, [R0,#0x14]|66-105
53306|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53314|code|CMP             R2, R3|154-66
53316|code|BNE             loc_D0B4|54-209
53318|code|LDR             R0, [R0,#8]|128-104
53320|code|CBZ             R0, loc_D072|152-177
53322|code|LDR             R6, [R0,#0x10]|6-105
53324|code|CMP             R6, R2|150-66
53326|code|ITT EQ|4-191
53328|code|MOVEQW          R5, #0x4110|68-242-16-21
53332|code|MOVTEQ.W        R5, #0x2152|194-242-82-21
53336|code|BEQ             loc_D064|4-208
53338|code|B               loc_D0A8|37-224
53340|code|LDR             R3, [R4,#0x10]|35-105
53342|code|CMP             R3, R6|179-66
53344|code|BNE             loc_D0A8|34-209
53346|code|MOV             R0, R4|32-70
53348|code|LDR             R4, [R0,#0xC]|196-104
53350|code|STR             R5, [R0,#0x10]|5-97
53352|code|LDR             R1, =unk_18570|24-73
53354|code|BL              sub_CEC4|255-247-43-255
53358|code|CMP             R4, #0|0-44
53360|code|BNE             loc_D05C|244-209
53362|code|LDR             R5, [R7]|61-104
53364|code|CBNZ            R5, loc_D07A|13-185
53366|code|B               loc_D092|12-224
53368|code|MOV             R5, R4|37-70
53370|code|LDM.W           R5, {R0,R4}|149-232-17-0
53374|code|CBZ             R0, loc_D086|16-177
53376|code|LDR             R3, [R7,#0xC]|251-104
53378|code|CBZ             R3, loc_D086|3-177
53380|code|BLX             R3|152-71
53382|code|MOV             R0, R5|40-70
53384|code|LDR             R1, =unk_18568|17-73
53386|code|BL              sub_CEC4|255-247-27-255
53390|code|CMP             R4, #0|0-44
53392|code|BNE             loc_D078|242-209
53394|code|MOVW            R3, #0x4110|68-242-16-19
53398|code|MOV             R0, R7|56-70
53400|code|MOVT.W          R3, #0x2152|194-242-82-19
53404|code|LDR             R1, =unk_1856C|13-73
53406|code|STR             R3, [R7,#0x14]|123-97
53408|code|POP.W           {R3-R7,LR}|189-232-248-64
53412|code|B.W             sub_CEC4|255-247-14-191
53416|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
53418|code|MOVS            R2, #0xF5|245-34
53420|code|LDR             R1, =aListC; "list.c"|11-73
53422|code|LDR             R3, =aListDestroy; "list_destroy"|12-75
53424|code|BLX             __assert_fail|252-247-176-234
53428|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
53430|code|MOVS            R2, #0xF2|242-34
53432|code|LDR             R1, =aListC; "list.c"|8-73
53434|code|LDR             R3, =aListDestroy; "list_destroy"|9-75
53436|code|BLX             __assert_fail|252-247-170-234
53440|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|9-72
53442|code|MOVS            R2, #0xF0|240-34
53444|code|LDR             R1, =aListC; "list.c"|5-73
53446|code|LDR             R3, =aListDestroy; "list_destroy"|6-75
53448|code|BLX             __assert_fail|252-247-164-234
53452|data|DCD unk_18570|112-133-1-0
53456|data|DCD unk_18568|104-133-1-0
53460|data|DCD unk_1856C|108-133-1-0
53464|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
53468|data|DCD aListC; "list.c"|172-248-0-0
53472|data|DCD aListDestroy; "list_destroy"|52-252-0-0
53476|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53480|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53484|code|PUSH            {R3,LR}|8-181
53486|code|CBZ             R0, loc_D10A|96-177
53488|code|LDR             R2, [R0,#0x14]|66-105
53490|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53498|code|CMP             R2, R3|154-66
53500|code|BNE             loc_D118|12-209
53502|code|LDR             R0, [R0,#0x10]|0-105
53504|code|RSBS.W          R0, R0, #1|208-241-1-0
53508|code|IT CC|56-191
53510|code|MOVCC           R0, #0|0-32
53512|code|POP             {R3,PC}|8-189
53514|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
53516|code|MOV.W           R2, #0x110|79-244-136-114
53520|code|LDR             R1, =aListC; "list.c"|6-73
53522|code|LDR             R3, =aListIsEmpty; "list_is_empty"|7-75
53524|code|BLX             __assert_fail|252-247-126-234
53528|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
53530|code|MOV.W           R2, #0x112|79-244-137-114
53534|code|LDR             R1, =aListC; "list.c"|3-73
53536|code|LDR             R3, =aListIsEmpty; "list_is_empty"|3-75
53538|code|BLX             __assert_fail|252-247-120-234
53542|data|ALIGN 4|0-191
53544|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53548|data|DCD aListC; "list.c"|172-248-0-0
53552|data|DCD aListIsEmpty; "list_is_empty"|68-252-0-0
53556|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53560|code|PUSH            {R3,LR}|8-181
53562|code|CBZ             R0, loc_D14E|64-177
53564|code|LDR             R2, [R0,#0x14]|66-105
53566|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53574|code|CMP             R2, R3|154-66
53576|code|BNE             loc_D15C|8-209
53578|code|LDR             R0, [R0,#0x10]|0-105
53580|code|POP             {R3,PC}|8-189
53582|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
53584|code|MOV.W           R2, #0x11E|79-244-143-114
53588|code|LDR             R1, =aListC; "list.c"|6-73
53590|code|LDR             R3, =aListCount; "list_count"|7-75
53592|code|BLX             __assert_fail|252-247-92-234
53596|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
53598|code|MOV.W           R2, #0x120|79-244-144-114
53602|code|LDR             R1, =aListC; "list.c"|3-73
53604|code|LDR             R3, =aListCount; "list_count"|3-75
53606|code|BLX             __assert_fail|252-247-86-234
53610|data|ALIGN 4|0-191
53612|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53616|data|DCD aListC; "list.c"|172-248-0-0
53620|data|DCD aListCount; "list_count"|84-252-0-0
53624|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53628|code|PUSH            {R3,LR}|8-181
53630|code|MOV             R2, R1|10-70
53632|code|CBZ             R0, loc_D19C|96-177
53634|code|CBZ             R1, loc_D1B8|201-177
53636|code|LDR             R1, [R0,#0x14]|65-105
53638|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53646|code|CMP             R1, R3|153-66
53648|code|BNE             loc_D1AA|11-209
53650|code|LDR             R1, [R0,#4]|65-104
53652|code|POP.W           {R3,LR}|189-232-8-64
53656|code|B.W             sub_CDA0|255-247-2-190
53660|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
53662|code|MOV.W           R2, #0x12C; line|79-244-150-114
53666|code|LDR             R1, =aListC; "list.c"|10-73
53668|code|LDR             R3, =aListAppend; "list_append"|10-75
53670|code|BLX             __assert_fail|252-247-54-234
53674|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
53676|code|MOVW            R2, #0x12F; line|64-242-47-18
53680|code|LDR             R1, =aListC; "list.c"|6-73
53682|code|LDR             R3, =aListAppend; "list_append"|7-75
53684|code|BLX             __assert_fail|252-247-46-234
53688|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
53690|code|MOVW            R2, #0x12D; line|64-242-45-18
53694|code|LDR             R1, =aListC; "list.c"|3-73
53696|code|LDR             R3, =aListAppend; "list_append"|3-75
53698|code|BLX             __assert_fail|252-247-40-234
53702|data|ALIGN 4|0-191
53704|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53708|data|DCD aListC; "list.c"|172-248-0-0
53712|data|DCD aListAppend; "list_append"|96-252-0-0
53716|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53720|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
53724|code|PUSH            {R3,LR}|8-181
53726|code|MOV             R2, R1|10-70
53728|code|CBZ             R0, loc_D1FC|96-177
53730|code|CBZ             R1, loc_D218|201-177
53732|code|LDR             R1, [R0,#0x14]|65-105
53734|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53742|code|CMP             R1, R3|153-66
53744|code|BNE             loc_D20A|11-209
53746|code|MOV             R1, R0|1-70
53748|code|POP.W           {R3,LR}|189-232-8-64
53752|code|B.W             sub_CDA0|255-247-210-189
53756|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
53758|code|MOVW            R2, #0x13B; line|64-242-59-18
53762|code|LDR             R1, =aListC; "list.c"|10-73
53764|code|LDR             R3, =aListPrepend; "list_prepend"|10-75
53766|code|BLX             __assert_fail|252-247-6-234
53770|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
53772|code|MOV.W           R2, #0x13E; line|79-244-159-114
53776|code|LDR             R1, =aListC; "list.c"|6-73
53778|code|LDR             R3, =aListPrepend; "list_prepend"|7-75
53780|code|BLX             __assert_fail|252-247-254-233
53784|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
53786|code|MOV.W           R2, #0x13C; line|79-244-158-114
53790|code|LDR             R1, =aListC; "list.c"|3-73
53792|code|LDR             R3, =aListPrepend; "list_prepend"|3-75
53794|code|BLX             __assert_fail|252-247-248-233
53798|data|ALIGN 4|0-191
53800|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53804|data|DCD aListC; "list.c"|172-248-0-0
53808|data|DCD aListPrepend; "list_prepend"|108-252-0-0
53812|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53816|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
53820|code|PUSH            {R4-R6,LR}|112-181
53822|code|MOV             R4, R1|12-70
53824|code|MOV             R6, R2|22-70
53826|code|CBZ             R0, loc_D276|192-177
53828|code|CMP             R1, #0|0-41
53830|code|BEQ             loc_D292|36-208
53832|code|LDR             R2, [R0,#0x14]|66-105
53834|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53842|code|CMP             R2, R3|154-66
53844|code|BNE             loc_D284|22-209
53846|code|LDR             R5, [R0]|5-104
53848|code|CBNZ            R5, loc_D260|21-185
53850|code|B               loc_D272|10-224
53852|code|LDR             R5, [R5,#4]|109-104
53854|code|CBZ             R5, loc_D26E|53-177
53856|code|LDR             R0, [R5]|40-104
53858|code|MOV             R1, R6|49-70
53860|code|BLX             R4|160-71
53862|code|CMP             R0, #0|0-40
53864|code|BEQ             loc_D25C|248-208
53866|code|LDR             R0, [R5]|40-104
53868|code|POP             {R4-R6,PC}|112-189
53870|code|MOV             R0, R5|40-70
53872|code|POP             {R4-R6,PC}|112-189
53874|code|MOV             R0, R5|40-70
53876|code|POP             {R4-R6,PC}|112-189
53878|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
53880|code|MOVW            R2, #0x14B|64-242-75-18
53884|code|LDR             R1, =aListC; "list.c"|9-73
53886|code|LDR             R3, =aListFindFirst; "list_find_first"|10-75
53888|code|BLX             __assert_fail|252-247-200-233
53892|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|9-72
53894|code|MOV.W           R2, #0x14E|79-244-167-114
53898|code|LDR             R1, =aListC; "list.c"|6-73
53900|code|LDR             R3, =aListFindFirst; "list_find_first"|6-75
53902|code|BLX             __assert_fail|252-247-194-233
53906|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
53908|code|MOV.W           R2, #0x14C|79-244-166-114
53912|code|LDR             R1, =aListC; "list.c"|2-73
53914|code|LDR             R3, =aListFindFirst; "list_find_first"|3-75
53916|code|BLX             __assert_fail|252-247-186-233
53920|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
53924|data|DCD aListC; "list.c"|172-248-0-0
53928|data|DCD aListFindFirst; "list_find_first"|124-252-0-0
53932|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
53936|data|DCD aFVoid0; "f != ((void *)0)"|76-254-0-0
53940|code|PUSH.W          {R4-R8,LR}|45-233-240-65
53944|code|MOV             R5, R0|5-70
53946|code|MOV             R4, R1|12-70
53948|code|MOV             R7, R2|23-70
53950|code|CMP             R0, #0|0-40
53952|code|BEQ             loc_D310|38-208
53954|code|CMP             R1, #0|0-41
53956|code|BEQ             loc_D32C|50-208
53958|code|LDR             R2, [R0,#0x14]|66-105
53960|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
53968|code|CMP             R2, R3|154-66
53970|code|ITT EQ|4-191
53972|code|MOVEQ           R6, R0|6-70
53974|code|MOVEQ.W         R8, #0|79-240-0-8
53978|code|BNE             loc_D31E|32-209
53980|code|LDR             R3, [R6]|51-104
53982|code|CBZ             R3, loc_D2F2|67-177
53984|code|LDR             R0, [R3]|24-104
53986|code|MOV             R1, R7|57-70
53988|code|BLX             R4|160-71
53990|code|CBNZ            R0, loc_D2F8|56-185
53992|code|LDR             R6, [R6]|54-104
53994|code|ADDS            R6, #4|4-54
53996|code|LDR             R3, [R6]|51-104
53998|code|CMP             R3, #0|0-43
54000|code|BNE             loc_D2E0|246-209
54002|code|MOV             R0, R8|64-70
54004|code|POP.W           {R4-R8,PC}|189-232-240-129
54008|code|MOV             R0, R5|40-70
54010|code|MOV             R1, R6|49-70
54012|code|BL              sub_CF00|255-247-0-254
54016|code|CMP             R0, #0|0-40
54018|code|BEQ             loc_D2DC|235-208
54020|code|LDR             R3, [R5,#0xC]|235-104
54022|code|CBZ             R3, loc_D30A|3-177
54024|code|BLX             R3|152-71
54026|code|ADD.W           R8, R8, #1|8-241-1-8
54030|code|B               loc_D2DC|229-231
54032|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
54034|code|MOVW            R2, #0x161|64-242-97-18
54038|code|LDR             R1, =aListC; "list.c"|10-73
54040|code|LDR             R3, =aListDeleteAll; "list_delete_all"|10-75
54042|code|BLX             __assert_fail|252-247-124-233
54046|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
54048|code|MOV.W           R2, #0x164|79-244-178-114
54052|code|LDR             R1, =aListC; "list.c"|6-73
54054|code|LDR             R3, =aListDeleteAll; "list_delete_all"|7-75
54056|code|BLX             __assert_fail|252-247-116-233
54060|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
54062|code|MOV.W           R2, #0x162|79-244-177-114
54066|code|LDR             R1, =aListC; "list.c"|3-73
54068|code|LDR             R3, =aListDeleteAll; "list_delete_all"|3-75
54070|code|BLX             __assert_fail|252-247-110-233
54074|data|ALIGN 4|0-191
54076|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54080|data|DCD aListC; "list.c"|172-248-0-0
54084|data|DCD aListDeleteAll; "list_delete_all"|140-252-0-0
54088|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54092|data|DCD aFVoid0; "f != ((void *)0)"|76-254-0-0
54096|code|PUSH            {R3-R7,LR}|248-181
54098|code|MOV             R4, R1|12-70
54100|code|MOV             R7, R2|23-70
54102|code|CBZ             R0, loc_D3A4|40-179
54104|code|CBZ             R1, loc_D396|233-177
54106|code|LDR             R2, [R0,#0x14]|66-105
54108|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54116|code|CMP             R2, R3|154-66
54118|code|BNE             loc_D388|15-209
54120|code|LDR             R5, [R0]|5-104
54122|code|MOV             R6, R5|46-70
54124|code|CBZ             R5, loc_D384|85-177
54126|code|MOVS            R6, #0|0-38
54128|code|B               loc_D376|1-224
54130|code|LDR             R5, [R5,#4]|109-104
54132|code|CBZ             R5, loc_D384|53-177
54134|code|LDR             R0, [R5]|40-104
54136|code|MOV             R1, R7|57-70
54138|code|BLX             R4|160-71
54140|code|ADDS            R6, #1|1-54
54142|code|CMP             R0, #0|0-40
54144|code|BGE             loc_D372|247-218
54146|code|NEGS            R6, R6|118-66
54148|code|MOV             R0, R6|48-70
54150|code|POP             {R3-R7,PC}|248-189
54152|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
54154|code|MOV.W           R2, #0x180|79-244-192-114
54158|code|LDR             R1, =aListC; "list.c"|10-73
54160|code|LDR             R3, =aListForEach; "list_for_each"|10-75
54162|code|BLX             __assert_fail|252-247-64-233
54166|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|10-72
54168|code|MOV.W           R2, #0x17E|79-244-191-114
54172|code|LDR             R1, =aListC; "list.c"|6-73
54174|code|LDR             R3, =aListForEach; "list_for_each"|7-75
54176|code|BLX             __assert_fail|252-247-56-233
54180|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
54182|code|MOVW            R2, #0x17D|64-242-125-18
54186|code|LDR             R1, =aListC; "list.c"|3-73
54188|code|LDR             R3, =aListForEach; "list_for_each"|3-75
54190|code|BLX             __assert_fail|252-247-50-233
54194|data|ALIGN 4|0-191
54196|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54200|data|DCD aListC; "list.c"|172-248-0-0
54204|data|DCD aListForEach; "list_for_each"|156-252-0-0
54208|data|DCD aFVoid0; "f != ((void *)0)"|76-254-0-0
54212|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54216|code|PUSH.W          {R4-R8,LR}|45-233-240-65
54220|code|MOV             R8, R0|128-70
54222|code|MOV             R6, R1|14-70
54224|code|CMP             R0, #0|0-40
54226|code|BEQ             loc_D47C|83-208
54228|code|CMP             R1, #0|0-41
54230|code|BEQ             loc_D498|95-208
54232|code|LDR             R2, [R0,#0x14]|66-105
54234|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54242|code|CMP             R2, R3|154-66
54244|code|BNE             loc_D48A|81-209
54246|code|LDR             R3, [R0,#0x10]|3-105
54248|code|CMP             R3, #1|1-43
54250|code|BLE             locret_D440|41-221
54252|code|LDR             R3, [R0]|3-104
54254|code|MOV             R7, R0|7-70
54256|code|ADDS            R5, R3, #4|29-29
54258|code|LDR             R3, [R3,#4]|91-104
54260|code|CBZ             R3, loc_D412|107-177
54262|code|LDR             R2, [R7]|58-104
54264|code|LDR             R0, [R3]|24-104
54266|code|LDR             R1, [R2]|17-104
54268|code|BLX             R6|176-71
54270|code|CMP             R0, #0|0-40
54272|code|IT LT|184-191
54274|code|MOVLT           R4, R8|68-70
54276|code|BLT             loc_D448|32-219
54278|code|LDR             R3, [R5]|43-104
54280|code|MOV             R7, R5|47-70
54282|code|ADDS            R5, R3, #4|29-29
54284|code|LDR             R3, [R3,#4]|91-104
54286|code|CMP             R3, #0|0-43
54288|code|BNE             loc_D3F6|241-209
54290|code|LDR.W           R3, [R8,#8]|216-248-8-48
54294|code|STR.W           R5, [R8,#4]|200-248-4-80
54298|code|CBZ             R3, locret_D440|139-177
54300|code|LDR             R0, [R3,#0x10]|24-105
54302|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
54310|code|CMP             R0, R2|144-66
54312|code|BEQ             loc_D432|3-208
54314|code|B               loc_D46E|32-224
54316|code|LDR             R2, [R3,#0x10]|26-105
54318|code|CMP             R2, R0|130-66
54320|code|BNE             loc_D46E|29-209
54322|code|LDR             R2, [R3]|26-104
54324|code|LDR             R1, [R2]|17-104
54326|code|STR             R2, [R3,#8]|154-96
54328|code|STR             R1, [R3,#4]|89-96
54330|code|LDR             R3, [R3,#0xC]|219-104
54332|code|CMP             R3, #0|0-43
54334|code|BNE             loc_D42C|245-209
54336|code|POP.W           {R4-R8,PC}|189-232-240-129
54340|code|LDR             R4, [R4]|36-104
54342|code|ADDS            R4, #4|4-52
54344|code|LDR             R2, [R5]|42-104
54346|code|LDR             R3, [R4]|35-104
54348|code|LDR             R0, [R2]|16-104
54350|code|LDR             R1, [R3]|25-104
54352|code|BLX             R6|176-71
54354|code|CMP             R0, #0|0-40
54356|code|BGE             loc_D444|246-218
54358|code|LDR             R2, [R5]|42-104
54360|code|CMP             R7, R4|167-66
54362|code|LDR             R1, [R4]|33-104
54364|code|LDR             R3, [R2,#4]|83-104
54366|code|STR             R1, [R2,#4]|81-96
54368|code|LDR             R2, [R5]|42-104
54370|code|STR             R2, [R4]|34-96
54372|code|STR             R3, [R5]|43-96
54374|code|BNE             loc_D3F4|197-209
54376|code|LDR             R7, [R7]|63-104
54378|code|ADDS            R7, #4|4-55
54380|code|B               loc_D3F4|194-231
54382|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|14-72
54384|code|MOV.W           R2, #0x1B0|79-244-216-114
54388|code|LDR             R1, =aListC; "list.c"|13-73
54390|code|LDR             R3, =aListSort; "list_sort"|14-75
54392|code|BLX             __assert_fail|252-247-204-232
54396|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|13-72
54398|code|MOVW            R2, #0x195|64-242-149-18
54402|code|LDR             R1, =aListC; "list.c"|10-73
54404|code|LDR             R3, =aListSort; "list_sort"|10-75
54406|code|BLX             __assert_fail|252-247-198-232
54410|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
54412|code|MOV.W           R2, #0x198|79-244-204-114
54416|code|LDR             R1, =aListC; "list.c"|6-73
54418|code|LDR             R3, =aListSort; "list_sort"|7-75
54420|code|BLX             __assert_fail|252-247-190-232
54424|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|8-72
54426|code|MOV.W           R2, #0x196|79-244-203-114
54430|code|LDR             R1, =aListC; "list.c"|3-73
54432|code|LDR             R3, =aListSort; "list_sort"|3-75
54434|code|BLX             __assert_fail|252-247-184-232
54438|data|ALIGN 4|0-191
54440|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
54444|data|DCD aListC; "list.c"|172-248-0-0
54448|data|DCD aListSort; "list_sort"|172-252-0-0
54452|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54456|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54460|data|DCD aFVoid0; "f != ((void *)0)"|76-254-0-0
54464|code|PUSH            {R3,LR}|8-181
54466|code|MOV             R2, R1|10-70
54468|code|CBZ             R0, loc_D4E0|96-177
54470|code|CBZ             R1, loc_D4FC|201-177
54472|code|LDR             R1, [R0,#0x14]|65-105
54474|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54482|code|CMP             R1, R3|153-66
54484|code|BNE             loc_D4EE|11-209
54486|code|MOV             R1, R0|1-70
54488|code|POP.W           {R3,LR}|189-232-8-64
54492|code|B.W             sub_CDA0|255-247-96-188
54496|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
54498|code|MOVW            R2, #0x1BF|64-242-191-18
54502|code|LDR             R1, =aListC; "list.c"|10-73
54504|code|LDR             R3, =aListPush; "list_push"|10-75
54506|code|BLX             __assert_fail|252-247-148-232
54510|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
54512|code|MOV.W           R2, #0x1C2|79-244-225-114
54516|code|LDR             R1, =aListC; "list.c"|6-73
54518|code|LDR             R3, =aListPush; "list_push"|7-75
54520|code|BLX             __assert_fail|252-247-140-232
54524|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
54526|code|MOV.W           R2, #0x1C0|79-244-224-114
54530|code|LDR             R1, =aListC; "list.c"|3-73
54532|code|LDR             R3, =aListPush; "list_push"|3-75
54534|code|BLX             __assert_fail|252-247-134-232
54538|data|ALIGN 4|0-191
54540|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54544|data|DCD aListC; "list.c"|172-248-0-0
54548|data|DCD aListPush; "list_push"|184-252-0-0
54552|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54556|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
54560|code|PUSH            {R3,LR}|8-181
54562|code|CBZ             R0, loc_D53C|88-177
54564|code|LDR             R2, [R0,#0x14]|66-105
54566|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54574|code|CMP             R2, R3|154-66
54576|code|BNE             loc_D54A|11-209
54578|code|MOV             R1, R0|1-70
54580|code|POP.W           {R3,LR}|189-232-8-64
54584|code|B.W             sub_CF00|255-247-226-188
54588|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|6-72
54590|code|MOV.W           R2, #0x1CE|79-244-231-114
54594|code|LDR             R1, =aListC; "list.c"|6-73
54596|code|LDR             R3, =aListPop; "list_pop"|6-75
54598|code|BLX             __assert_fail|252-247-102-232
54602|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
54604|code|MOV.W           R2, #0x1D0|79-244-232-114
54608|code|LDR             R1, =aListC; "list.c"|2-73
54610|code|LDR             R3, =aListPop; "list_pop"|3-75
54612|code|BLX             __assert_fail|252-247-94-232
54616|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54620|data|DCD aListC; "list.c"|172-248-0-0
54624|data|DCD aListPop; "list_pop"|196-252-0-0
54628|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54632|code|PUSH            {R3,LR}|8-181
54634|code|CBZ             R0, loc_D582|80-177
54636|code|LDR             R2, [R0,#0x14]|66-105
54638|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54646|code|CMP             R2, R3|154-66
54648|code|BNE             loc_D590|10-209
54650|code|LDR             R0, [R0]|0-104
54652|code|CBZ             R0, locret_D580|0-177
54654|code|LDR             R0, [R0]|0-104
54656|code|POP             {R3,PC}|8-189
54658|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|7-72
54660|code|MOV.W           R2, #0x1DC|79-244-238-114
54664|code|LDR             R1, =aListC; "list.c"|6-73
54666|code|LDR             R3, =aListPeek; "list_peek"|7-75
54668|code|BLX             __assert_fail|252-247-66-232
54672|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
54674|code|MOV.W           R2, #0x1DE|79-244-239-114
54678|code|LDR             R1, =aListC; "list.c"|3-73
54680|code|LDR             R3, =aListPeek; "list_peek"|3-75
54682|code|BLX             __assert_fail|252-247-60-232
54686|data|ALIGN 0x10|0-191
54688|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54692|data|DCD aListC; "list.c"|172-248-0-0
54696|data|DCD aListPeek; "list_peek"|208-252-0-0
54700|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54704|code|PUSH            {R3,LR}|8-181
54706|code|MOV             R2, R1|10-70
54708|code|CBZ             R0, loc_D5D0|96-177
54710|code|CBZ             R1, loc_D5EC|201-177
54712|code|LDR             R1, [R0,#0x14]|65-105
54714|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54722|code|CMP             R1, R3|153-66
54724|code|BNE             loc_D5DE|11-209
54726|code|LDR             R1, [R0,#4]|65-104
54728|code|POP.W           {R3,LR}|189-232-8-64
54732|code|B.W             sub_CDA0|255-247-232-187
54736|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
54738|code|MOV.W           R2, #0x1EA|79-244-245-114
54742|code|LDR             R1, =aListC; "list.c"|10-73
54744|code|LDR             R3, =aListEnqueue; "list_enqueue"|10-75
54746|code|BLX             __assert_fail|252-247-28-232
54750|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
54752|code|MOVW            R2, #0x1ED|64-242-237-18
54756|code|LDR             R1, =aListC; "list.c"|6-73
54758|code|LDR             R3, =aListEnqueue; "list_enqueue"|7-75
54760|code|BLX             __assert_fail|252-247-20-232
54764|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
54766|code|MOVW            R2, #0x1EB|64-242-235-18
54770|code|LDR             R1, =aListC; "list.c"|3-73
54772|code|LDR             R3, =aListEnqueue; "list_enqueue"|3-75
54774|code|BLX             __assert_fail|252-247-14-232
54778|data|ALIGN 4|0-191
54780|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54784|data|DCD aListC; "list.c"|172-248-0-0
54788|data|DCD aListEnqueue; "list_enqueue"|220-252-0-0
54792|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54796|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
54800|code|PUSH            {R3,LR}|8-181
54802|code|CBZ             R0, loc_D62C|88-177
54804|code|LDR             R2, [R0,#0x14]|66-105
54806|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
54814|code|CMP             R2, R3|154-66
54816|code|BNE             loc_D63A|11-209
54818|code|MOV             R1, R0|1-70
54820|code|POP.W           {R3,LR}|189-232-8-64
54824|code|B.W             sub_CF00|255-247-106-188
54828|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|6-72
54830|code|MOVW            R2, #0x1F9|64-242-249-18
54834|code|LDR             R1, =aListC; "list.c"|6-73
54836|code|LDR             R3, =aListDequeue; "list_dequeue"|6-75
54838|code|BLX             __assert_fail|251-247-238-239
54842|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
54844|code|MOVW            R2, #0x1FB|64-242-251-18
54848|code|LDR             R1, =aListC; "list.c"|2-73
54850|code|LDR             R3, =aListDequeue; "list_dequeue"|3-75
54852|code|BLX             __assert_fail|251-247-230-239
54856|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54860|data|DCD aListC; "list.c"|172-248-0-0
54864|data|DCD aListDequeue; "list_dequeue"|236-252-0-0
54868|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54872|code|PUSH            {R4,LR}|16-181
54874|code|MOV             R4, R0|4-70
54876|code|CMP             R0, #0|0-40
54878|code|BEQ             loc_D69A|28-208
54880|code|MOVS            R0, #0x14|20-32
54882|code|LDR             R1, =unk_18570|21-73
54884|code|BL              sub_CD1C|255-247-90-251
54888|code|CBZ             R0, loc_D68A|120-177
54890|code|LDR             R3, [R4,#0x14]|99-105
54892|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
54900|code|STR             R4, [R0]|4-96
54902|code|CMP             R3, R2|147-66
54904|code|BNE             loc_D6A8|22-209
54906|code|LDR             R2, [R4,#8]|162-104
54908|code|LDR             R1, [R4]|33-104
54910|code|STR             R4, [R0,#8]|132-96
54912|code|STR             R2, [R0,#0xC]|194-96
54914|code|STR             R1, [R0,#4]|65-96
54916|code|STR             R0, [R4,#8]|160-96
54918|code|STR             R3, [R0,#0x10]|3-97
54920|code|POP             {R4,PC}|16-189
54922|code|LDR             R0, =aListC; "list.c"|12-72
54924|code|MOVW            R1, #0x209|64-242-9-33
54928|code|LDR             R2, =aListIteratorCr; "list iterator create"|11-74
54930|code|POP.W           {R4,LR}|189-232-16-64
54934|code|B.W             sub_A5E0|252-247-163-191
54938|code|LDR             R0, =aLVoid0; "l != ((void *)0)"|10-72
54940|code|MOVW            R2, #0x207|64-242-7-34
54944|code|LDR             R1, =aListC; "list.c"|6-73
54946|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|9-75
54948|code|BLX             __assert_fail|251-247-182-239
54952|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-72
54954|code|MOV.W           R2, #0x20C|79-244-3-114
54958|code|LDR             R1, =aListC; "list.c"|3-73
54960|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|5-75
54962|code|BLX             __assert_fail|251-247-176-239
54966|data|ALIGN 4|0-191
54968|data|DCD unk_18570|112-133-1-0
54972|data|DCD aListC; "list.c"|172-248-0-0
54976|data|DCD aListIteratorCr; "list iterator create"|96-254-0-0
54980|data|DCD aLVoid0; "l != ((void *)0)"|8-251-0-0
54984|data|DCD aListIteratorCr_0; "list_iterator_create"|252-252-0-0
54988|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|176-253-0-0
54992|code|PUSH            {R3,LR}|8-181
54994|code|CBZ             R0, loc_D6F2|112-177
54996|code|LDR             R2, [R0,#0x10]|2-105
54998|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55006|code|CMP             R2, R3|154-66
55008|code|BNE             loc_D70E|21-209
55010|code|LDR             R3, [R0]|3-104
55012|code|LDR             R1, [R3,#0x14]|89-105
55014|code|CMP             R1, R2|145-66
55016|code|BNE             loc_D700|10-209
55018|code|LDR             R2, [R3]|26-104
55020|code|STR             R3, [R0,#8]|131-96
55022|code|STR             R2, [R0,#4]|66-96
55024|code|POP             {R3,PC}|8-189
55026|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
55028|code|MOVW            R2, #0x21A|64-242-26-34
55032|code|LDR             R1, =aListC; "list.c"|9-73
55034|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|10-75
55036|code|BLX             __assert_fail|251-247-138-239
55040|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|9-72
55042|code|MOVW            R2, #0x21D|64-242-29-34
55046|code|LDR             R1, =aListC; "list.c"|6-73
55048|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|6-75
55050|code|BLX             __assert_fail|251-247-132-239
55054|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|7-72
55056|code|MOVW            R2, #0x21B|64-242-27-34
55060|code|LDR             R1, =aListC; "list.c"|2-73
55062|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|3-75
55064|code|BLX             __assert_fail|251-247-124-239
55068|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55072|data|DCD aListC; "list.c"|172-248-0-0
55076|data|DCD aListIteratorRe; "list_iterator_reset"|20-253-0-0
55080|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|120-254-0-0
55084|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55088|code|PUSH            {R4,LR}|16-181
55090|code|CMP             R0, #0|0-40
55092|code|BEQ             loc_D7B6|63-208
55094|code|LDR             R3, [R0,#0x10]|3-105
55096|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
55104|code|CMP             R3, R2|147-66
55106|code|BNE             loc_D7A8|49-209
55108|code|LDR             R1, [R0]|1-104
55110|code|LDR             R2, [R1,#0x14]|74-105
55112|code|CMP             R2, R3|154-66
55114|code|BNE             loc_D79A|38-209
55116|code|LDR             R3, [R1,#8]|139-104
55118|code|CBZ             R3, loc_D772|131-177
55120|code|LDR             R4, [R3,#0x10]|28-105
55122|code|CMP             R4, R2|148-66
55124|code|BNE             loc_D78C|26-209
55126|code|ADDS            R1, #8|8-49
55128|code|CMP             R0, R3|152-66
55130|code|BNE             loc_D768|5-209
55132|code|B               loc_D786|19-224
55134|code|LDR             R2, [R3,#0x10]|26-105
55136|code|CMP             R2, R4|162-66
55138|code|BNE             loc_D78C|19-209
55140|code|CMP             R0, R3|152-66
55142|code|BEQ             loc_D786|14-208
55144|code|ADD.W           R1, R3, #0xC|3-241-12-1
55148|code|LDR             R3, [R3,#0xC]|219-104
55150|code|CMP             R3, #0|0-43
55152|code|BNE             loc_D75E|245-209
55154|code|MOVW            R3, #0x4110|68-242-16-19
55158|code|LDR             R1, =unk_18570|19-73
55160|code|MOVT.W          R3, #0x2152|194-242-82-19
55164|code|STR             R3, [R0,#0x10]|3-97
55166|code|POP.W           {R4,LR}|189-232-16-64
55170|code|B.W             sub_CEC4|255-247-159-187
55174|code|LDR             R3, [R0,#0xC]|195-104
55176|code|STR             R3, [R1]|11-96
55178|code|B               loc_D772|242-231
55180|code|LDR             R0, =aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|14-72
55182|code|MOVW            R2, #0x22F|64-242-47-34
55186|code|LDR             R1, =aListC; "list.c"|14-73
55188|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|14-75
55190|code|BLX             __assert_fail|251-247-62-239
55194|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|14-72
55196|code|MOVW            R2, #0x22D|64-242-45-34
55200|code|LDR             R1, =aListC; "list.c"|10-73
55202|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|11-75
55204|code|BLX             __assert_fail|251-247-54-239
55208|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
55210|code|MOVW            R2, #0x22B|64-242-43-34
55214|code|LDR             R1, =aListC; "list.c"|7-73
55216|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|7-75
55218|code|BLX             __assert_fail|251-247-48-239
55222|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
55224|code|MOVW            R2, #0x22A|64-242-42-34
55228|code|LDR             R1, =aListC; "list.c"|3-73
55230|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|4-75
55232|code|BLX             __assert_fail|251-247-40-239
55236|data|DCD unk_18570|112-133-1-0
55240|data|DCD aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|152-254-0-0
55244|data|DCD aListC; "list.c"|172-248-0-0
55248|data|DCD aListIteratorDe; "list_iterator_destroy"|40-253-0-0
55252|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|120-254-0-0
55256|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55260|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55264|code|PUSH            {R3,LR}|8-181
55266|code|CMP             R0, #0|0-40
55268|code|BEQ             loc_D836|39-208
55270|code|LDR             R3, [R0,#0x10]|3-105
55272|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
55280|code|CMP             R3, R2|147-66
55282|code|BNE             loc_D828|25-209
55284|code|LDR             R2, [R0]|2-104
55286|code|LDR             R2, [R2,#0x14]|82-105
55288|code|CMP             R2, R3|154-66
55290|code|BNE             loc_D81A|14-209
55292|code|LDR             R3, [R0,#4]|67-104
55294|code|CBZ             R3, loc_D804|11-177
55296|code|LDR             R2, [R3,#4]|90-104
55298|code|STR             R2, [R0,#4]|66-96
55300|code|LDR             R2, [R0,#8]|130-104
55302|code|LDR             R2, [R2]|18-104
55304|code|CMP             R2, R3|154-66
55306|code|BEQ             loc_D810|1-208
55308|code|ADDS            R2, #4|4-50
55310|code|STR             R2, [R0,#8]|130-96
55312|code|CBZ             R3, loc_D816|11-177
55314|code|LDR             R0, [R3]|24-104
55316|code|POP             {R3,PC}|8-189
55318|code|MOV             R0, R3|24-70
55320|code|POP             {R3,PC}|8-189
55322|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
55324|code|MOV.W           R2, #0x244; line|79-244-17-114
55328|code|LDR             R1, =aListC; "list.c"|9-73
55330|code|LDR             R3, =aListNext; "list_next"|10-75
55332|code|BLX             __assert_fail|251-247-246-238
55336|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|9-72
55338|code|MOVW            R2, #0x242; line|64-242-66-34
55342|code|LDR             R1, =aListC; "list.c"|6-73
55344|code|LDR             R3, =aListNext; "list_next"|6-75
55346|code|BLX             __assert_fail|251-247-240-238
55350|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
55352|code|MOVW            R2, #0x241; line|64-242-65-34
55356|code|LDR             R1, =aListC; "list.c"|2-73
55358|code|LDR             R3, =aListNext; "list_next"|3-75
55360|code|BLX             __assert_fail|251-247-232-238
55364|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|120-254-0-0
55368|data|DCD aListC; "list.c"|172-248-0-0
55372|data|DCD aListNext; "list_next"|64-253-0-0
55376|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55380|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55384|code|PUSH            {R4,LR}|16-181
55386|code|MOV             R2, R1|10-70
55388|code|CBZ             R0, loc_D884|144-177
55390|code|CMP             R1, #0|0-41
55392|code|BEQ             loc_D8AE|37-208
55394|code|LDR             R1, [R0,#0x10]|1-105
55396|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55404|code|CMP             R1, R3|153-66
55406|code|BNE             loc_D8A0|23-209
55408|code|LDR             R3, [R0]|3-104
55410|code|LDR             R4, [R3,#0x14]|92-105
55412|code|CMP             R4, R1|140-66
55414|code|BNE             loc_D892|12-209
55416|code|LDR             R1, [R0,#8]|129-104
55418|code|MOV             R0, R3|24-70
55420|code|POP.W           {R4,LR}|189-232-16-64
55424|code|B.W             sub_CDA0|255-247-142-186
55428|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|13-72
55430|code|MOVW            R2, #0x253|64-242-83-34
55434|code|LDR             R1, =aListC; "list.c"|13-73
55436|code|LDR             R3, =aListInsert; "list_insert"|13-75
55438|code|BLX             __assert_fail|251-247-194-238
55442|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|13-72
55444|code|MOVW            R2, #0x257|64-242-87-34
55448|code|LDR             R1, =aListC; "list.c"|9-73
55450|code|LDR             R3, =aListInsert; "list_insert"|10-75
55452|code|BLX             __assert_fail|251-247-186-238
55456|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
55458|code|MOVW            R2, #0x255|64-242-85-34
55462|code|LDR             R1, =aListC; "list.c"|6-73
55464|code|LDR             R3, =aListInsert; "list_insert"|6-75
55466|code|BLX             __assert_fail|251-247-180-238
55470|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|8-72
55472|code|MOV.W           R2, #0x254|79-244-21-114
55476|code|LDR             R1, =aListC; "list.c"|2-73
55478|code|LDR             R3, =aListInsert; "list_insert"|3-75
55480|code|BLX             __assert_fail|251-247-172-238
55484|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55488|data|DCD aListC; "list.c"|172-248-0-0
55492|data|DCD aListInsert; "list_insert"|76-253-0-0
55496|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|120-254-0-0
55500|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55504|data|DCD aXVoid0; "x != ((void *)0)"|196-1-1-0
55508|code|PUSH            {R3-R7,LR}|248-181
55510|code|MOV             R4, R0|4-70
55512|code|MOV             R5, R1|13-70
55514|code|MOV             R7, R2|23-70
55516|code|CBZ             R0, loc_D904|144-177
55518|code|CBZ             R1, loc_D920|249-177
55520|code|LDR             R2, [R0,#0x10]|2-105
55522|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55530|code|CMP             R2, R3|154-66
55532|code|BNE             loc_D912|17-209
55534|code|MOV             R0, R4|32-70
55536|code|BL              sub_D7E0|255-247-118-255
55540|code|MOV             R6, R0|6-70
55542|code|CBZ             R0, loc_D900|24-177
55544|code|MOV             R1, R7|57-70
55546|code|BLX             R5|168-71
55548|code|CMP             R0, #0|0-40
55550|code|BEQ             loc_D8EE|246-208
55552|code|MOV             R0, R6|48-70
55554|code|POP             {R3-R7,PC}|248-189
55556|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
55558|code|MOVW            R2, #0x263|64-242-99-34
55562|code|LDR             R1, =aListC; "list.c"|10-73
55564|code|LDR             R3, =aListFind; "list_find"|10-75
55566|code|BLX             __assert_fail|251-247-130-238
55570|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
55572|code|MOVW            R2, #0x265|64-242-101-34
55576|code|LDR             R1, =aListC; "list.c"|6-73
55578|code|LDR             R3, =aListFind; "list_find"|7-75
55580|code|BLX             __assert_fail|251-247-122-238
55584|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
55586|code|MOV.W           R2, #0x264|79-244-25-114
55590|code|LDR             R1, =aListC; "list.c"|3-73
55592|code|LDR             R3, =aListFind; "list_find"|3-75
55594|code|BLX             __assert_fail|251-247-116-238
55598|data|ALIGN 0x10|0-191
55600|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55604|data|DCD aListC; "list.c"|172-248-0-0
55608|data|DCD aListFind; "list_find"|88-253-0-0
55612|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55616|data|DCD aFVoid0; "f != ((void *)0)"|76-254-0-0
55620|code|PUSH            {R3,LR}|8-181
55622|code|CMP             R0, #0|0-40
55624|code|BEQ             loc_D994|36-208
55626|code|LDR             R3, [R0,#0x10]|3-105
55628|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
55636|code|CMP             R3, R2|147-66
55638|code|BNE             loc_D986|22-209
55640|code|LDR             R2, [R0]|2-104
55642|code|LDR             R1, [R2,#0x14]|81-105
55644|code|CMP             R1, R3|153-66
55646|code|BNE             loc_D978|11-209
55648|code|LDR             R1, [R0,#8]|129-104
55650|code|LDR             R3, [R0,#4]|67-104
55652|code|LDR             R0, [R1]|8-104
55654|code|CMP             R0, R3|152-66
55656|code|BEQ             loc_D974|4-208
55658|code|MOV             R0, R2|16-70
55660|code|POP.W           {R3,LR}|189-232-8-64
55664|code|B.W             sub_CF00|255-247-198-186
55668|code|MOVS            R0, #0|0-32
55670|code|POP             {R3,PC}|8-189
55672|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
55674|code|MOVW            R2, #0x273; line|64-242-115-34
55678|code|LDR             R1, =aListC; "list.c"|10-73
55680|code|LDR             R3, =aListRemove; "list_remove"|10-75
55682|code|BLX             __assert_fail|251-247-72-238
55686|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
55688|code|MOVW            R2, #0x271; line|64-242-113-34
55692|code|LDR             R1, =aListC; "list.c"|6-73
55694|code|LDR             R3, =aListRemove; "list_remove"|7-75
55696|code|BLX             __assert_fail|251-247-64-238
55700|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
55702|code|MOV.W           R2, #0x270; line|79-244-28-114
55706|code|LDR             R1, =aListC; "list.c"|3-73
55708|code|LDR             R3, =aListRemove; "list_remove"|3-75
55710|code|BLX             __assert_fail|251-247-58-238
55714|data|ALIGN 4|0-191
55716|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|120-254-0-0
55720|data|DCD aListC; "list.c"|172-248-0-0
55724|data|DCD aListRemove; "list_remove"|100-253-0-0
55728|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55732|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55736|code|PUSH            {R4,LR}|16-181
55738|code|MOV             R4, R0|4-70
55740|code|CBZ             R0, loc_D9E2|136-177
55742|code|LDR             R2, [R0,#0x10]|2-105
55744|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
55752|code|CMP             R2, R3|154-66
55754|code|BNE             loc_D9F0|17-209
55756|code|BL              sub_D944|255-247-186-255
55760|code|CBZ             R0, locret_D9E0|48-177
55762|code|LDR             R3, [R4]|35-104
55764|code|LDR             R3, [R3,#0xC]|219-104
55766|code|CBZ             R3, loc_D9DE|19-177
55768|code|BLX             R3|152-71
55770|code|MOVS            R0, #1|1-32
55772|code|POP             {R4,PC}|16-189
55774|code|MOVS            R0, #1|1-32
55776|code|POP             {R4,PC}|16-189
55778|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
55780|code|MOV.W           R2, #0x280|79-244-32-114
55784|code|LDR             R1, =aListC; "list.c"|6-73
55786|code|LDR             R3, =aListDelete; "list_delete"|7-75
55788|code|BLX             __assert_fail|251-247-18-238
55792|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|6-72
55794|code|MOVW            R2, #0x281|64-242-129-34
55798|code|LDR             R1, =aListC; "list.c"|3-73
55800|code|LDR             R3, =aListDelete; "list_delete"|3-75
55802|code|BLX             __assert_fail|251-247-12-238
55806|data|ALIGN 0x10|0-191
55808|data|DCD aIVoid0; "i != ((void *)0)"|120-250-0-0
55812|data|DCD aListC; "list.c"|172-248-0-0
55816|data|DCD aListDelete; "list_delete"|112-253-0-0
55820|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|240-253-0-0
55824|code|PUSH.W          {R4-R9,LR}|45-233-240-67
55828|code|MOV             R8, R0|128-70
55830|code|SUB             SP, SP, #0xC|131-176
55832|code|MOV             R6, R1|14-70
55834|code|MOVS            R4, #0x50 ; 'P'|80-36
55836|code|MOVS            R5, #0|0-37
55838|code|B               loc_DA52|24-224
55840|code|MOV             R0, R4|32-70
55842|code|MOV             R7, R4|39-70
55844|code|BL              sub_E1F0|0-240-228-251
55848|code|MOV             R5, R0|5-70
55850|code|MOV             R1, R4; maxlen|33-70
55852|code|MOV             R2, R8; format|66-70
55854|code|MOV             R3, R6; arg|51-70
55856|code|MOV             R0, R5; s|40-70
55858|code|STR             R6, [SP,#0x28+var_24]|1-150
55860|code|BLX             vsnprintf|251-247-166-237
55864|code|SUB.W           R2, R0, #0xFFFFFFFF|160-241-255-50
55868|code|MOV             R9, R0|129-70
55870|code|NEGS            R3, R2|83-66
55872|code|ADC.W           R3, R3, R2|67-235-2-3
55876|code|ADDS            R4, #0x50 ; 'P'|80-52
55878|code|CMP             R0, R7|184-66
55880|code|ITE LT|180-191
55882|code|MOVLT           R7, R3|31-70
55884|code|ORRGE.W         R7, R3, #1|67-240-1-7
55888|code|CBZ             R7, loc_DA64|71-177
55890|code|CMP             R4, #0x50 ; 'P'|80-44
55892|code|BEQ             loc_DA20|228-208
55894|code|MOV             R0, R5|40-70
55896|code|MOV             R1, R4|33-70
55898|code|BL              sub_E260|0-240-1-252
55902|code|MOV             R7, R4|39-70
55904|code|MOV             R5, R0|5-70
55906|code|B               loc_DA2A|226-231
55908|code|MOV             R0, R5; s|40-70
55910|code|BLX             strlen|251-247-28-237
55914|code|CMP             R9, R0|129-69
55916|code|BNE             loc_DA76|3-209
55918|code|MOV             R0, R5|40-70
55920|code|ADD             SP, SP, #0xC|3-176
55922|code|POP.W           {R4-R9,PC}|189-232-240-131
55926|code|LDR             R0, =aLenStrlenStr; "len == strlen(str)"|3-72
55928|code|MOVS            R2, #0x39 ; '9'; line|57-34
55930|code|LDR             R1, =aHprintfC; "hprintf.c"|3-73
55932|code|LDR             R3, =aHvsprintf; "hvsprintf"|3-75
55934|code|BLX             __assert_fail|251-247-202-237
55938|data|ALIGN 4|0-191
55940|data|DCD aLenStrlenStr; "len == strlen(str)"|192-254-0-0
55944|data|DCD aHprintfC; "hprintf.c"|212-254-0-0
55948|data|DCD aHvsprintf; "hvsprintf"|180-254-0-0
55952|code|PUSH            {R0-R3}|15-180
55954|code|PUSH            {LR}|0-181
55956|code|SUB             SP, SP, #0xC|131-176
55958|code|ADD             R3, SP, #0x20+varg_r0|4-171
55960|code|LDR.W           R0, [R3],#4|83-248-4-11
55964|code|MOV             R1, R3|25-70
55966|code|STR             R3, [SP,#0x20+var_1C]|1-147
55968|code|BL              sub_DA10|255-247-182-255
55972|code|ADD             SP, SP, #0xC|3-176
55974|code|POP.W           {LR}|93-248-4-235
55978|code|ADD             SP, SP, #0x10|4-176
55980|code|BX              LR|112-71
55982|data|ALIGN 0x10|0-191
55984|code|PUSH            {R1-R3}|14-180
55986|code|PUSH            {R4-R6,LR}|112-181
55988|code|SUB             SP, SP, #0xC|131-176
55990|code|ADD             R3, SP, #0x1C|7-171
55992|code|MOV             R6, R0|6-70
55994|code|LDR.W           R0, [R3],#4|83-248-4-11
55998|code|MOV             R1, R3|25-70
56000|code|STR             R3, [SP,#4]|1-147
56002|code|BL              sub_DA10|255-247-165-255
56006|code|MOV             R5, R0|5-70
56008|code|BLX             strlen|251-247-234-236
56012|code|MOV             R4, R0|4-70
56014|code|MOV             R2, R4|34-70
56016|code|MOV             R0, R6|48-70
56018|code|MOV             R1, R5|41-70
56020|code|BL              sub_DCE8|0-240-8-249
56024|code|CMP             R0, #0|0-40
56026|code|RSB.W           R4, R0, R4|192-235-4-4
56030|code|BLT             loc_DAEC|5-219
56032|code|CMP             R4, #0|0-44
56034|code|BGT             loc_DACE|244-220
56036|code|MOV             R0, R5|40-70
56038|code|BL              sub_E33C|0-240-41-252
56042|code|MOV             R0, R4|32-70
56044|code|ADD             SP, SP, #0xC|3-176
56046|code|POP.W           {R4-R6,LR}|189-232-112-64
56050|code|ADD             SP, SP, #0xC|3-176
56052|code|BX              LR|112-71
56054|data|ALIGN 4|0-191
56056|code|LDR             R3, [R0]|3-104
56058|code|CBZ             R3, loc_DB0C|59-177
56060|code|MOV             R3, R0|3-70
56062|code|MOVS            R0, #0|0-32
56064|code|LDR.W           R2, [R3,#4]!|83-248-4-47
56068|code|ADDS            R0, #1|1-48
56070|code|CMP             R2, #0|0-42
56072|code|BNE             loc_DB00|250-209
56074|code|BX              LR|112-71
56076|code|MOV             R0, R3|24-70
56078|code|BX              LR|112-71
56080|code|PUSH            {R3-R7,LR}|248-181
56082|code|MOV             R4, R1|12-70
56084|code|LDR             R6, [R0]|6-104
56086|code|MOVS            R5, #4|4-37
56088|code|MOVS            R1, #8|8-33
56090|code|CBZ             R6, loc_DB34|94-177
56092|code|MOVS            R6, #0|0-38
56094|code|MOV             R3, R0|3-70
56096|code|LDR.W           R2, [R3,#4]!|83-248-4-47
56100|code|ADDS            R6, #1|1-54
56102|code|CMP             R2, #0|0-42
56104|code|BNE             loc_DB20|250-209
56106|code|ADDS            R1, R6, #2|177-28
56108|code|ADDS            R5, R6, #1|117-28
56110|code|LSLS            R6, R6, #2|182-0
56112|code|LSLS            R1, R1, #2|137-0
56114|code|LSLS            R5, R5, #2|173-0
56116|code|BL              sub_E260|0-240-148-251
56120|code|MOV             R7, R0|7-70
56122|code|MOV             R0, R4|32-70
56124|code|BL              sub_E3B8|0-240-60-252
56128|code|MOVS            R3, #0|0-35
56130|code|STR             R0, [R7,R6]|184-81
56132|code|MOV             R0, R7|56-70
56134|code|STR             R3, [R7,R5]|123-81
56136|code|POP             {R3-R7,PC}|248-189
56138|data|ALIGN 4|0-191
56140|code|PUSH.W          {R4-R11,LR}|45-233-240-79
56144|code|SUB             SP, SP, #0xC|131-176
56146|code|LDRB            R6, [R0]|6-120
56148|code|MOV             R5, R0|5-70
56150|code|MOV             R4, R1|12-70
56152|code|MOV             R7, R0|7-70
56154|code|MOV.W           R9, #0|79-240-0-9
56158|code|CBNZ            R6, loc_DBB6|86-187
56160|code|ADD.W           R0, R9, #1|9-241-1-0
56164|code|MOV             R8, R9|200-70
56166|code|LSLS            R0, R0, #2|128-0
56168|code|BL              sub_E1F0|0-240-66-251
56172|code|STR             R0, [SP,#0x30+var_2C]|1-144
56174|code|CMP.W           R9, #0|185-241-0-15
56178|code|BEQ             loc_DC30|93-208
56180|code|LDR.W           R10, [SP,#0x30+var_2C]|221-248-4-160
56184|code|MOV.W           R8, #0|79-240-0-8
56188|code|LDRB            R1, [R5]|41-120
56190|code|CBZ             R1, loc_DBA4|137-177
56192|code|STR             R1, [SP,#0x30+c]|0-145
56194|code|BLX             __ctype_b_loc|251-247-124-236
56198|code|LDR             R1, [SP,#0x30+c]; c|0-153
56200|code|MOV             R11, R5|171-70
56202|code|LDR             R6, [R0]|6-104
56204|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
56208|code|LSLS            R2, R3, #0x12|154-4
56210|code|BMI             loc_DB9C|3-212
56212|code|MOV             R0, R4; s|32-70
56214|code|BLX             strchr|251-247-138-236
56218|code|CBZ             R0, loc_DBDE|0-179
56220|code|LDRB.W          R1, [R11,#1]!|27-248-1-31
56224|code|CMP             R1, #0|0-41
56226|code|BNE             loc_DB8C|243-209
56228|code|MOVS            R3, #0|0-35
56230|code|STR.W           R3, [R10]|202-248-0-48
56234|code|LDR             R0, =aArgvIVoid0; "argv[i] != ((void *)0)"|53-72
56236|code|MOVS            R2, #0x70 ; 'p'; line|112-34
56238|code|LDR             R1, =aArgvC; "argv.c"|53-73
56240|code|LDR             R3, =aArgvCreate; "argv_create"|53-75
56242|code|BLX             __assert_fail|251-247-48-237
56246|code|BLX             __ctype_b_loc|251-247-98-236
56250|code|LDR.W           R8, [R0]|208-248-0-128
56254|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
56258|code|ANDS.W          R3, R3, #0x2000|19-244-0-83
56262|code|BNE             loc_DBD8|7-209
56264|code|MOV             R0, R4; s|32-70
56266|code|MOV             R1, R6; c|49-70
56268|code|STR             R3, [SP,#0x30+c]|0-147
56270|code|BLX             strchr|251-247-110-236
56274|code|LDR             R3, [SP,#0x30+c]|0-155
56276|code|CMP             R0, #0|0-40
56278|code|BEQ             loc_DC40|51-208
56280|code|LDRB            R6, [R7,#1]|126-120
56282|code|ADDS            R7, #1|1-55
56284|code|B               loc_DB5E|191-231
56286|code|LDRB.W          R1, [R11]|155-248-0-16
56290|code|CMP             R1, #0|0-41
56292|code|BEQ             loc_DBA4|222-208
56294|code|MOV             R5, R11|93-70
56296|code|B               loc_DBF8|6-224
56298|code|MOV             R0, R4; s|32-70
56300|code|BLX             strchr|251-247-94-236
56304|code|CBNZ            R0, loc_DC00|48-185
56306|code|LDRB.W          R1, [R5,#1]!; c|21-248-1-31
56310|code|CBZ             R1, loc_DC00|25-177
56312|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
56316|code|LSLS            R3, R3, #0x12|155-4
56318|code|BPL             loc_DBEA|244-213
56320|code|RSB.W           R7, R11, R5|203-235-5-7
56324|code|CMP             R7, #0|0-47
56326|code|BLE             loc_DBA4|205-221
56328|code|ADDS            R0, R7, #1|120-28
56330|code|BL              sub_E1F0|0-240-241-250
56334|code|MOV             R2, R7; n|58-70
56336|code|MOV             R1, R11; src|89-70
56338|code|MOV             R6, R0|6-70
56340|code|BLX             memcpy|251-247-154-235
56344|code|MOVS            R2, #0|0-34
56346|code|STRB            R2, [R6,R7]|242-85
56348|code|STR.W           R6, [R10],#4|74-248-4-107
56352|code|CMP             R6, #0|0-46
56354|code|BEQ             loc_DBAA|194-208
56356|code|ADD.W           R8, R8, #1|8-241-1-8
56360|code|CMP             R8, R9|200-69
56362|code|BNE             loc_DB7C|167-209
56364|code|MOV.W           R8, R8,LSL#2|79-234-136-8
56368|code|LDR             R2, [SP,#0x30+var_2C]|1-154
56370|code|MOVS            R3, #0|0-35
56372|code|MOV             R0, R2|16-70
56374|code|STR.W           R3, [R2,R8]|66-248-8-48
56378|code|ADD             SP, SP, #0xC|3-176
56380|code|POP.W           {R4-R11,PC}|189-232-240-143
56384|code|ADD.W           R10, R9, #1|9-241-1-10
56388|code|CBNZ            R3, loc_DC62|107-185
56390|code|MOV             R0, R4; s|32-70
56392|code|MOV             R1, R6; c|49-70
56394|code|BLX             strchr|251-247-48-236
56398|code|CBNZ            R0, loc_DC62|64-185
56400|code|LDRB            R6, [R7,#1]|126-120
56402|code|CBZ             R6, loc_DC6A|86-177
56404|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
56408|code|ADDS            R7, #1|1-55
56410|code|AND.W           R3, R3, #0x2000|3-244-0-83
56414|code|CMP             R3, #0|0-43
56416|code|BEQ             loc_DC46|241-208
56418|code|LDRB            R6, [R7]|62-120
56420|code|CBZ             R6, loc_DC6E|30-177
56422|code|MOV             R9, R10|209-70
56424|code|B               loc_DB5E|121-231
56426|code|MOV             R9, R10|209-70
56428|code|B               loc_DB60|120-231
56430|code|ADD.W           R0, R9, #2|9-241-2-0
56434|code|MOV             R9, R10|209-70
56436|code|LSLS            R0, R0, #2|128-0
56438|code|BL              sub_E1F0|0-240-187-250
56442|code|STR             R0, [SP,#0x30+var_2C]|1-144
56444|code|B               loc_DB74|122-231
56446|data|ALIGN 0x10|0-191
56448|data|DCD aArgvIVoid0; "argv[i] != ((void *)0)"|236-254-0-0
56452|data|DCD aArgvC; "argv.c"|4-255-0-0
56456|data|DCD aArgvCreate; "argv_create"|224-254-0-0
56460|code|PUSH            {R3-R5,LR}|56-181
56462|code|MOV             R5, R0|5-70
56464|code|LDR             R0, [R0]|0-104
56466|code|CBZ             R0, loc_DCA2|48-177
56468|code|MOV             R4, R5|44-70
56470|code|BL              sub_E33C|0-240-81-251
56474|code|LDR.W           R0, [R4,#4]!|84-248-4-15
56478|code|CMP             R0, #0|0-40
56480|code|BNE             loc_DC96|249-209
56482|code|MOV             R0, R5|40-70
56484|code|POP.W           {R3-R5,LR}|189-232-56-64
56488|code|B.W             sub_E33C|0-240-72-187
56492|code|PUSH            {R3-R7,LR}|248-181
56494|code|MOV             R6, R0|6-70
56496|code|MOV             R5, R1|13-70
56498|code|MOV             R4, R2|20-70
56500|code|MOV             R1, R5; buf|41-70
56502|code|MOV             R2, R4; nbytes|34-70
56504|code|MOV             R0, R6; fd|48-70
56506|code|BLX             read|251-247-34-235
56510|code|CMP             R0, #0|0-40
56512|code|MOV             R7, R0|7-70
56514|code|BGE             loc_DCDE|12-218
56516|code|BLX             __errno_location|251-247-10-236
56520|code|LDR             R3, [R0]|3-104
56522|code|CMP             R3, #4|4-43
56524|code|BEQ             loc_DCB4|242-208
56526|code|CMP             R3, #0xB|11-43
56528|code|BEQ             loc_DCDE|5-208
56530|code|CMP             R3, #0x68 ; 'h'|104-43
56532|code|BEQ             loc_DCDE|3-208
56534|code|MOVS            R0, #1|1-32
56536|code|LDR             R1, =aRead_0; "read"|2-73
56538|code|BL              sub_A584|252-247-83-252
56542|code|MOV             R0, R7|56-70
56544|code|POP             {R3-R7,PC}|248-189
56546|data|ALIGN 4|0-191
56548|data|DCD aRead_0; "read"|12-255-0-0
56552|code|PUSH            {R3-R7,LR}|248-181
56554|code|MOV             R6, R0|6-70
56556|code|MOV             R5, R1|13-70
56558|code|MOV             R4, R2|20-70
56560|code|MOV             R1, R5; buf|41-70
56562|code|MOV             R2, R4; n|34-70
56564|code|MOV             R0, R6; fd|48-70
56566|code|BLX             write|251-247-28-236
56570|code|CMP             R0, #0|0-40
56572|code|MOV             R7, R0|7-70
56574|code|BGE             loc_DD1E|14-218
56576|code|BLX             __errno_location|251-247-236-235
56580|code|LDR             R3, [R0]|3-104
56582|code|CMP             R3, #4|4-43
56584|code|BEQ             loc_DCF0|242-208
56586|code|CMP             R3, #0xB|11-43
56588|code|BEQ             loc_DD1E|7-208
56590|code|CMP             R3, #0x68 ; 'h'|104-43
56592|code|BEQ             loc_DD1E|5-208
56594|code|CMP             R3, #0x20 ; ' '|32-43
56596|code|BEQ             loc_DD1E|3-208
56598|code|MOVS            R0, #1|1-32
56600|code|LDR             R1, =aWrite_0; "write"|2-73
56602|code|BL              sub_A584|252-247-51-252
56606|code|MOV             R0, R7|56-70
56608|code|POP             {R3-R7,PC}|248-189
56610|data|ALIGN 4|0-191
56612|data|DCD aWrite_0; "write"|20-255-0-0
56616|code|CMP             R2, #0|0-42
56618|code|PUSH            {R3-R7,LR}|248-181
56620|code|MOV             R6, R0|6-70
56622|code|MOV             R7, R1|15-70
56624|code|MOV             R5, R2|21-70
56626|code|BLE             locret_DD58|17-221
56628|code|MOVS            R4, #0|0-36
56630|code|B               loc_DD3C|1-224
56632|code|CMP             R5, R4|165-66
56634|code|BLE             locret_DD58|13-221
56636|code|ADDS            R1, R7, R4|57-25
56638|code|SUBS            R2, R5, R4|42-27
56640|code|MOV             R0, R6|48-70
56642|code|BL              sub_DCE8|255-247-209-255
56646|code|CMP             R0, #0|0-40
56648|code|ADD             R4, R0|4-68
56650|code|BGE             loc_DD38|245-218
56652|code|MOVS            R0, #1|1-32
56654|code|LDR             R1, =aWrite_0; "write"|3-73
56656|code|BL              sub_A584|252-247-24-252
56660|code|CMP             R5, R4|165-66
56662|code|BGT             loc_DD3C|241-220
56664|code|POP             {R3-R7,PC}|248-189
56666|data|ALIGN 4|0-191
56668|data|DCD aWrite_0; "write"|20-255-0-0
56672|code|CMP             R2, #0|0-42
56674|code|PUSH.W          {R4-R8,LR}|45-233-240-65
56678|code|MOV             R6, R0|6-70
56680|code|MOV             R7, R1|15-70
56682|code|MOV             R5, R2|21-70
56684|code|BLE             locret_DD9E|23-221
56686|code|MOVS            R4, #0|0-36
56688|code|B               loc_DD80|6-224
56690|code|BNE             loc_DD7A|2-209
56692|code|LDR             R1, =aEofOnRead; "EOF on read"|11-73
56694|code|BL              sub_A584|252-247-5-252
56698|code|ADD             R4, R8|68-68
56700|code|CMP             R5, R4|165-66
56702|code|BLE             locret_DD9E|14-221
56704|code|ADDS            R1, R7, R4|57-25
56706|code|SUBS            R2, R5, R4|42-27
56708|code|MOV             R0, R6|48-70
56710|code|BL              sub_DCAC|255-247-145-255
56714|code|CMP             R0, #0|0-40
56716|code|MOV             R8, R0|128-70
56718|code|BGE             loc_DD72|240-218
56720|code|MOVS            R0, #1|1-32
56722|code|LDR             R1, =aRead_0; "read"|5-73
56724|code|ADD             R4, R8|68-68
56726|code|BL              sub_A584|252-247-245-251
56730|code|CMP             R5, R4|165-66
56732|code|BGT             loc_DD80|240-220
56734|code|POP.W           {R4-R8,PC}|189-232-240-129
56738|data|ALIGN 4|0-191
56740|data|DCD aEofOnRead; "EOF on read"|28-255-0-0
56744|data|DCD aRead_0; "read"|12-255-0-0
56748|code|PUSH            {R3-R5,LR}|56-181
56750|code|MOV             R3, R0|3-70
56752|code|MOV             R4, R1|12-70
56754|code|LDR             R0, =(aRegcompFailedS+0x10); "%s"|20-72
56756|code|MOV             R1, R3|25-70
56758|code|MOV             R5, R2|21-70
56760|code|BLX             printf|251-247-150-234
56764|code|LDR             R3, =stdout|18-75
56766|code|LDR             R0, [R3]|24-104
56768|code|BLX             fflush|251-247-164-234
56772|code|LDR             R3, =stdin|17-75
56774|code|MOV             R0, R4|32-70
56776|code|MOV             R1, R5|41-70
56778|code|LDR             R2, [R3]|26-104
56780|code|BLX             fgets|251-247-184-234
56784|code|CBZ             R0, loc_DDFE|168-177
56786|code|MOV             R0, R4|32-70
56788|code|BLX             strlen|251-247-100-235
56792|code|SUBS            R5, R0, #1|69-30
56794|code|ADDS            R5, R4, R5|101-25
56796|code|BCS             loc_DDFA|13-210
56798|code|BLX             __ctype_b_loc|251-247-78-235
56802|code|MOVS            R1, #0|0-33
56804|code|B               loc_DDEC|2-224
56806|code|CMP             R4, R5|172-66
56808|code|STRB            R1, [R5,#1]|105-112
56810|code|BHI             loc_DDFA|6-216
56812|code|LDRB.W          R2, [R5],#-1|21-248-1-41
56816|code|LDR             R3, [R0]|3-104
56818|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
56822|code|LSLS            R3, R3, #0x12|155-4
56824|code|BMI             loc_DDE6|245-212
56826|code|MOV             R0, R4|32-70
56828|code|POP             {R3-R5,PC}|56-189
56830|code|MOV             R4, R0|4-70
56832|code|B               loc_DDFA|251-231
56834|data|ALIGN 4|0-191
56836|data|DCD aRegcompFailedS+0x10; "%s"|180-1-1-0
56840|data|DCD stdout|76-133-1-0
56844|data|DCD stdin|72-133-1-0
56848|code|PUSH.W          {R4-R8,LR}|45-233-240-65
56852|code|MOV             R5, R0|5-70
56854|code|SUB             SP, SP, #0x18|134-176
56856|code|MOV             R6, R1|14-70
56858|code|MOV             R4, R1|12-70
56860|code|CBZ             R1, loc_DE36|89-177
56862|code|LDM             R1, {R0,R1}|3-201
56864|code|MOV             R4, SP|108-70
56866|code|STMEA.W         SP, {R0,R1}|141-232-3-0
56870|code|MOVS            R1, #0|0-33
56872|code|ADD             R0, SP, #8|2-168
56874|code|BLX             gettimeofday|251-247-246-234
56878|code|CMP             R0, #0|0-40
56880|code|IT GE|168-191
56882|code|MOVGE           R4, SP|108-70
56884|code|BLT             loc_DED6|79-219
56886|code|MOV             R7, #0x10624DD3|68-246-211-87-193-242-98-7
56894|code|MOV.W           R8, #0x3E8|79-244-122-120
56898|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
56902|code|CBZ             R4, loc_DE5A|68-177
56904|code|LDM.W           R4, {R2,R3}|148-232-12-0
56908|code|SMULL.W         R0, R1, R7, R3|135-251-3-1
56912|code|ASRS            R3, R3, #0x1F|219-23
56914|code|RSB.W           R3, R3, R1,ASR#6|195-235-161-19
56918|code|MLA.W           R2, R8, R2, R3|8-251-2-50
56922|code|LDR             R0, [R5,#0xC]|232-104
56924|code|LDR             R1, [R5,#4]|105-104
56926|code|BLX             poll|251-247-178-234
56930|code|CMP             R0, #0|0-40
56932|code|BLT             loc_DE6C|2-219
56934|code|ADD             SP, SP, #0x18|6-176
56936|code|POP.W           {R4-R8,PC}|189-232-240-129
56940|code|BLX             __errno_location|251-247-54-235
56944|code|LDR             R3, [R0]|3-104
56946|code|CMP             R3, #4|4-43
56948|code|BEQ             loc_DE7E|3-208
56950|code|MOVS            R0, #1|1-32
56952|code|LDR             R1, =aSelectPoll; "select/poll"|26-73
56954|code|BL              sub_A584|252-247-131-251
56958|code|CMP             R6, #0|0-46
56960|code|BEQ             loc_DE42|223-208
56962|code|MOVS            R1, #0|0-33
56964|code|ADD             R0, SP, #0x10|4-168
56966|code|BLX             gettimeofday|251-247-200-234
56970|code|CMP             R0, #0|0-40
56972|code|BLT             loc_DECC|30-219
56974|code|LDR             R2, [SP,#0x14]|5-154
56976|code|LDR             R3, [SP,#0xC]|3-155
56978|code|LDR             R1, [SP,#8]|2-153
56980|code|LDR             R0, [SP,#0x10]|4-152
56982|code|SUBS            R3, R2, R3|211-26
56984|code|RSB.W           R1, R1, R0|193-235-0-1
56988|code|BMI             loc_DEC0|16-212
56990|code|LDR             R0, [R6,#4]|112-104
56992|code|LDR             R2, [R6]|50-104
56994|code|SUBS            R3, R0, R3|195-26
56996|code|STR             R3, [R4,#4]|99-96
56998|code|CMP             R3, #0|0-43
57000|code|RSB.W           R1, R1, R2|193-235-2-1
57004|code|STR             R1, [R4]|33-96
57006|code|BGE             loc_DE42|200-218
57008|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
57012|code|SUBS            R1, #1|1-57
57014|code|ADD.W           R3, R3, #0x240|3-245-16-115
57018|code|STM.W           R4, {R1,R3}|132-232-10-0
57022|code|B               loc_DE42|192-231
57024|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
57028|code|SUBS            R1, #1|1-57
57030|code|ADD.W           R3, R3, #0x240|3-245-16-115
57034|code|B               loc_DE9E|232-231
57036|code|MOVS            R0, #1|1-32
57038|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|6-73
57040|code|BL              sub_A584|252-247-88-251
57044|code|B               loc_DE8E|219-231
57046|code|MOVS            R0, #1|1-32
57048|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|3-73
57050|code|BL              sub_A584|252-247-83-251
57054|code|MOV             R4, SP|108-70
57056|code|B               loc_DE36|169-231
57058|data|ALIGN 4|0-191
57060|data|DCD aSelectPoll; "select/poll"|128-255-0-0
57064|data|DCD aGettimeofday_0; "gettimeofday"|112-255-0-0
57068|code|PUSH            {R4,LR}|16-181
57070|code|MOVS            R0, #0x10|16-32
57072|code|BL              sub_E1F0|0-240-126-249
57076|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
57084|code|MOV             R4, R0|4-70
57086|code|LDR             R0, [R0,#8]|128-104
57088|code|STR             R3, [R4]|35-96
57090|code|ADDS            R0, #0x10|16-48
57092|code|STR             R0, [R4,#8]|160-96
57094|code|LSLS            R0, R0, #3|192-0
57096|code|BL              sub_E1F0|0-240-114-249
57100|code|MOVS            R3, #0|0-35
57102|code|STR             R3, [R4,#4]|99-96
57104|code|STR             R0, [R4,#0xC]|224-96
57106|code|MOV             R0, R4|32-70
57108|code|POP             {R4,PC}|16-189
57110|data|ALIGN 4|0-191
57112|code|LDR             R2, [R0]|2-104
57114|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
57122|code|CMP             R2, R3|154-66
57124|code|PUSH            {R4,LR}|16-181
57126|code|MOV             R4, R0|4-70
57128|code|BNE             loc_DF40|10-209
57130|code|LDR             R0, [R0,#0xC]|192-104
57132|code|MOVS            R3, #0|0-35
57134|code|STR             R3, [R4]|35-96
57136|code|CBZ             R0, loc_DF36|8-177
57138|code|BL              sub_E33C|0-240-3-250
57142|code|MOV             R0, R4|32-70
57144|code|POP.W           {R4,LR}|189-232-16-64
57148|code|B.W             sub_E33C|0-240-254-185
57152|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|2-72
57154|code|MOVS            R2, #0xBC|188-34
57156|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
57158|code|LDR             R3, =aXpollfdDestroy; "xpollfd_destroy"|3-75
57160|code|BLX             __assert_fail|251-247-100-235
57164|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|140-255-0-0
57168|data|DCD aXpollC; "xpoll.c"|168-255-0-0
57172|data|DCD aXpollfdDestroy; "xpollfd_destroy"|40-255-0-0
57176|code|LDR             R2, [R0]|2-104
57178|code|PUSH            {R3,LR}|8-181
57180|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
57188|code|CMP             R2, R3|154-66
57190|code|BNE             loc_DF6E|2-209
57192|code|MOVS            R3, #0|0-35
57194|code|STR             R3, [R0,#4]|67-96
57196|code|POP             {R3,PC}|8-189
57198|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
57200|code|MOVS            R2, #0xC8|200-34
57202|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
57204|code|LDR             R3, =aXpollfdZero; "xpollfd_zero"|3-75
57206|code|BLX             __assert_fail|251-247-78-235
57210|data|ALIGN 4|0-191
57212|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|140-255-0-0
57216|data|DCD aXpollC; "xpoll.c"|168-255-0-0
57220|data|DCD aXpollfdZero; "xpollfd_zero"|56-255-0-0
57224|code|PUSH.W          {R4-R8,LR}|45-233-240-65
57228|code|MOV             R4, R0|4-70
57230|code|LDR             R0, [R0]|0-104
57232|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
57240|code|MOV             R5, R1|13-70
57242|code|CMP             R0, R3|152-66
57244|code|MOV             R7, R2|23-70
57246|code|BNE             loc_E076|106-209
57248|code|LDR             R6, [R4,#4]|102-104
57250|code|LDR             R0, [R4,#0xC]|224-104
57252|code|CMP             R6, #0|0-46
57254|code|BEQ             loc_E072|100-208
57256|code|LDR             R3, [R0]|3-104
57258|code|MOV             R12, R0|132-70
57260|code|CMP             R3, R1|139-66
57262|code|BEQ             loc_DFD8|19-208
57264|code|ADD.W           R2, R0, #8|0-241-8-2
57268|code|MOVS            R3, #0|0-35
57270|code|B               loc_DFC2|4-224
57272|code|MOV             R12, R2|148-70
57274|code|LDR.W           R1, [R2],#8|82-248-8-27
57278|code|CMP             R1, R5|169-66
57280|code|BEQ             loc_DFDC|12-208
57282|code|ADDS            R3, #1|1-51
57284|code|CMP             R3, R6|179-66
57286|code|MOV             R8, R3|152-70
57288|code|BNE             loc_DFB8|246-209
57290|code|CMP             R6, R8|70-69
57292|code|IT EQ|8-191
57294|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
57298|code|BEQ             loc_E020|37-208
57300|code|POP.W           {R4-R8,PC}|189-232-240-129
57304|code|MOV.W           R8, #0|79-240-0-8
57308|code|UXTH            R3, R7|187-178
57310|code|LDRH.W          R1, [R12,#4]|188-248-4-16
57314|code|AND.W           R2, R3, #1|3-240-1-2
57318|code|TST.W           R3, #2|19-240-2-15
57322|code|ITT NE|28-191
57324|code|ORRNE.W         R2, R2, #4|66-240-4-2
57328|code|UXTHNE          R2, R2|146-178
57330|code|TST.W           R3, #4|19-240-4-15
57334|code|IT NE|24-191
57336|code|ORRNE.W         R2, R2, #0x10|66-240-16-2
57340|code|TST.W           R3, #8|19-240-8-15
57344|code|IT NE|24-191
57346|code|ORRNE.W         R2, R2, #8|66-240-8-2
57350|code|LSLS            R3, R3, #0x1B|219-6
57352|code|IT MI|72-191
57354|code|ORRMI.W         R2, R2, #0x20|66-240-32-2
57358|code|CMP             R6, R8|70-69
57360|code|ORR.W           R2, R2, R1|66-234-1-2
57364|code|IT EQ|8-191
57366|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
57370|code|STRH.W          R2, [R12,#4]|172-248-4-32
57374|code|BNE             locret_DFD4|217-209
57376|code|LDR             R1, [R4,#8]|161-104
57378|code|ADDS            R6, #1|1-54
57380|code|STR             R6, [R4,#4]|102-96
57382|code|CMP             R6, R1|142-66
57384|code|BLS             loc_E03C|8-217
57386|code|ADDS            R1, #0x10|16-49
57388|code|STR             R1, [R4,#8]|161-96
57390|code|LSLS            R1, R1, #3|201-0
57392|code|BL              sub_E260|0-240-22-249
57396|code|LDR             R1, [R4,#8]|161-104
57398|code|CMP             R6, R1|142-66
57400|code|STR             R0, [R4,#0xC]|224-96
57402|code|BHI             loc_E02A|246-216
57404|code|UXTH            R7, R7|191-178
57406|code|STR.W           R5, [R0,R8]|64-248-8-80
57410|code|AND.W           R3, R7, #1|7-240-1-3
57414|code|LSLS            R1, R7, #0x1E|185-7
57416|code|IT MI|72-191
57418|code|ORRMI.W         R3, R3, #4|67-240-4-3
57422|code|ADD             R0, R8|64-68
57424|code|IT MI|72-191
57426|code|UXTHMI          R3, R3|155-178
57428|code|LSLS            R2, R7, #0x1D|122-7
57430|code|IT MI|72-191
57432|code|ORRMI.W         R3, R3, #0x10|67-240-16-3
57436|code|LSLS            R1, R7, #0x1C|57-7
57438|code|IT MI|72-191
57440|code|ORRMI.W         R3, R3, #8|67-240-8-3
57444|code|LSLS            R2, R7, #0x1B|250-6
57446|code|IT MI|72-191
57448|code|ORRMI.W         R3, R3, #0x20|67-240-32-3
57452|code|STRH            R3, [R0,#4]|131-128
57454|code|POP.W           {R4-R8,PC}|189-232-240-129
57458|code|MOV             R8, R6|176-70
57460|code|B               loc_E020|212-231
57462|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
57464|code|MOVS            R2, #0xD9|217-34
57466|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
57468|code|LDR             R3, =aXpollfdSet; "xpollfd_set"|3-75
57470|code|BLX             __assert_fail|251-247-202-234
57474|data|ALIGN 4|0-191
57476|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|140-255-0-0
57480|data|DCD aXpollC; "xpoll.c"|168-255-0-0
57484|data|DCD aXpollfdSet; "xpollfd_set"|72-255-0-0
57488|code|PUSH.W          {R3-R11,LR}|45-233-248-79
57492|code|MOV             R4, R0|4-70
57494|code|LDR             R0, [R0]|0-104
57496|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
57504|code|MOV             R5, R1|13-70
57506|code|CMP             R0, R3|152-66
57508|code|MOV             R6, R2|22-70
57510|code|BNE             loc_E132|68-209
57512|code|MOV             R0, R1|8-70
57514|code|MOVS            R1, #0x2E ; '.'|46-33
57516|code|BLX             memset|251-247-46-234
57520|code|LDR             R7, [R4,#4]|103-104
57522|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
57526|code|CMP             R7, #0|0-47
57528|code|BEQ             loc_E114|44-208
57530|code|MOVS            R2, #0|0-34
57532|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
57536|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
57540|code|MOV.W           R11, #0x4F ; 'O'|79-240-79-11
57544|code|MOV             R3, R2|19-70
57546|code|MOV.W           R10, #0x49 ; 'I'|79-240-73-10
57550|code|MOV.W           R9, #0x45 ; 'E'|79-240-69-9
57554|code|B               loc_E0E8|9-224
57556|code|STRB.W          R9, [R5,R2]|5-248-2-144
57560|code|LDR             R7, [R4,#4]|103-104
57562|code|CMP             R12, R2|148-69
57564|code|IT LT|184-191
57566|code|MOVLT           R12, R2|148-70
57568|code|ADDS            R3, #1|1-51
57570|code|CMP             R3, R7|187-66
57572|code|MOV             R2, R3|26-70
57574|code|BCS             loc_E110|19-210
57576|code|LDR             R1, [R4,#0xC]|225-104
57578|code|ADD.W           R0, R1, R2,LSL#3|1-235-194-0
57582|code|LDR.W           R2, [R1,R2,LSL#3]|81-248-50-32
57586|code|LDRH            R1, [R0,#6]|193-136
57588|code|CMP             R2, R8|66-69
57590|code|BGE             loc_E0E0|243-218
57592|code|CMP             R1, #0|0-41
57594|code|BEQ             loc_E0DA|238-208
57596|code|UXTH            R1, R1|137-178
57598|code|TST.W           R1, #0x38|17-240-56-15
57602|code|BNE             loc_E0D4|231-209
57604|code|LSLS            R0, R1, #0x1F|200-7
57606|code|BPL             loc_E126|14-213
57608|code|STRB.W          R10, [R5,R2]|5-248-2-160
57612|code|LDR             R7, [R4,#4]|103-104
57614|code|B               loc_E0DA|228-231
57616|code|ADD.W           R7, R12, #1|12-241-1-7
57620|code|CMP             R6, R7|190-66
57622|code|BLE             loc_E13E|18-221
57624|code|ADD             R12, R5|172-68
57626|code|MOVS            R3, #0|0-35
57628|code|MOV             R0, R5|40-70
57630|code|STRB.W          R3, [R12,#1]|140-248-1-48
57634|code|POP.W           {R3-R11,PC}|189-232-248-143
57638|code|LSLS            R1, R1, #0x1D|73-7
57640|code|ITT MI|68-191
57642|code|STRBMI.W        R11, [R5,R2]|5-248-2-176
57646|code|LDRMI           R7, [R4,#4]|103-104
57648|code|B               loc_E0DA|211-231
57650|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|6-72
57652|code|MOVS            R2, #0xF7|247-34
57654|code|LDR             R1, =aXpollC; "xpoll.c"|6-73
57656|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|6-75
57658|code|BLX             __assert_fail|251-247-108-234
57662|code|LDR             R0, =aMaxfd1Len; "maxfd + 1 < len"|6-72
57664|code|MOVW            R2, #0x10B|64-242-11-18
57668|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
57670|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|3-75
57672|code|BLX             __assert_fail|251-247-100-234
57676|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|140-255-0-0
57680|data|DCD aXpollC; "xpoll.c"|168-255-0-0
57684|data|DCD aXpollfdStr; "xpollfd_str"|84-255-0-0
57688|data|DCD aMaxfd1Len; "maxfd + 1 < len"|176-255-0-0
57692|code|LDR             R2, [R0]|2-104
57694|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
57702|code|CMP             R2, R3|154-66
57704|code|PUSH            {R4-R6,LR}|112-181
57706|code|BNE             loc_E1C8|45-209
57708|code|LDR             R6, [R0,#4]|70-104
57710|code|CBZ             R6, loc_E192|134-177
57712|code|LDR             R5, [R0,#0xC]|197-104
57714|code|LDR             R3, [R5]|43-104
57716|code|CMP             R3, R1|139-66
57718|code|BEQ             loc_E196|14-208
57720|code|ADD.W           R2, R5, #8|5-241-8-2
57724|code|MOVS            R3, #0|0-35
57726|code|B               loc_E18A|4-224
57728|code|MOV             R5, R2|21-70
57730|code|LDR.W           R4, [R2],#8|82-248-8-75
57734|code|CMP             R4, R1|140-66
57736|code|BEQ             loc_E196|5-208
57738|code|ADDS            R3, #1|1-51
57740|code|CMP             R3, R6|179-66
57742|code|BNE             loc_E180|247-209
57744|code|MOVS            R6, #0|0-38
57746|code|SXTH            R0, R6|48-178
57748|code|POP             {R4-R6,PC}|112-189
57750|code|LDRH            R3, [R5,#6]|235-136
57752|code|AND.W           R6, R3, #1|3-240-1-6
57756|code|LSLS            R0, R3, #0x1D|88-7
57758|code|ITT MI|68-191
57760|code|ORRMI.W         R6, R6, #2|70-240-2-6
57764|code|UXTHMI          R6, R6|182-178
57766|code|LSLS            R1, R3, #0x1B|217-6
57768|code|ITT MI|68-191
57770|code|ORRMI.W         R6, R6, #4|70-240-4-6
57774|code|UXTHMI          R6, R6|182-178
57776|code|LSLS            R2, R3, #0x1C|26-7
57778|code|ITT MI|68-191
57780|code|ORRMI.W         R6, R6, #8|70-240-8-6
57784|code|UXTHMI          R6, R6|182-178
57786|code|LSLS            R3, R3, #0x1A|155-6
57788|code|ITT MI|68-191
57790|code|ORRMI.W         R6, R6, #0x10|70-240-16-6
57794|code|UXTHMI          R6, R6|182-178
57796|code|SXTH            R0, R6|48-178
57798|code|POP             {R4-R6,PC}|112-189
57800|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
57802|code|MOVW            R2, #0x123|64-242-35-18
57806|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
57808|code|LDR             R3, =aXpollfdRevents; "xpollfd_revents"|3-75
57810|code|BLX             __assert_fail|251-247-32-234
57814|data|ALIGN 4|0-191
57816|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|140-255-0-0
57820|data|DCD aXpollC; "xpoll.c"|168-255-0-0
57824|data|DCD aXpollfdRevents; "xpollfd_revents"|96-255-0-0
57828|code|MOV             R3, #0x18574|72-242-116-83-192-242-1-3
57836|code|LDR             R0, [R3]|24-104
57838|code|BX              LR|112-71
57840|code|CMP             R0, #0|0-40
57842|code|PUSH            {R3-R7,LR}|248-181
57844|code|MOV             R4, R0|4-70
57846|code|BLE             loc_E240|35-221
57848|code|ADD.W           R0, R0, #0x18; size|0-241-24-0
57852|code|BLX             malloc|251-247-30-233
57856|code|MOV             R5, R0|5-70
57858|code|CBZ             R0, loc_E238|200-177
57860|code|LDR             R3, =dword_18574|17-75
57862|code|ADD.W           R6, R5, #8|5-241-8-6
57866|code|MOVS            R1, #0; c|0-33
57868|code|MOV             R2, R4; n|34-70
57870|code|MOV             R0, R6; s|48-70
57872|code|STR             R4, [R5,#4]|108-96
57874|code|LDR.W           LR, [R3]|211-248-0-224
57878|code|MOV             R7, #0xF00FBAAB|75-246-171-39-207-242-15-7
57886|code|STR             R7, [R5]|47-96
57888|code|ADD             LR, R4|166-68
57890|code|STR.W           LR, [R3]|195-248-0-224
57894|code|BLX             memset|251-247-114-233
57898|code|ADDS            R0, R6, R4; s|48-25
57900|code|MOVS            R1, #0x55 ; 'U'; c|85-33
57902|code|MOVS            R2, #0x10; n|16-34
57904|code|BLX             memset|251-247-108-233
57908|code|MOV             R0, R6|48-70
57910|code|POP             {R3-R7,PC}|248-189
57912|code|LDR             R1, =aOutOfMemory; "out of memory"|5-73
57914|code|BL              sub_A584|252-247-163-249
57918|code|B               loc_E204|225-231
57920|code|LDR             R0, =aSize0; "size > 0"|4-72
57922|code|MOVS            R2, #0x46 ; 'F'; line|70-34
57924|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
57926|code|LDR             R3, =aXmalloc; "xmalloc"|5-75
57928|code|BLX             __assert_fail|251-247-228-233
57932|data|DCD dword_18574|116-133-1-0
57936|data|DCD aOutOfMemory; "out of memory"|24-245-0-0
57940|data|DCD aSize0; "size > 0"|220-255-0-0
57944|data|DCD aXmallocC; "xmalloc.c"|232-255-0-0
57948|data|DCD aXmalloc; "xmalloc"|192-255-0-0
57952|code|PUSH            {R4-R6,LR}|112-181
57954|code|MOV             R4, R1|12-70
57956|code|CMP             R0, #0|0-40
57958|code|BEQ             loc_E2EA|64-208
57960|code|CMP             R1, #0|0-41
57962|code|BLE             loc_E30E|80-221
57964|code|LDR.W           R2, [R0,#-8]|80-248-8-44
57968|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
57976|code|CMP             R2, R3|154-66
57978|code|BNE             loc_E2F6|60-209
57980|code|LDR.W           R6, [R0,#-4]|80-248-4-108
57984|code|MOVS            R3, #0xF|15-35
57986|code|ADDS            R1, R0, R6|129-25
57988|code|LDRB            R2, [R1,R3]|202-92
57990|code|CMP             R2, #0x55 ; 'U'|85-42
57992|code|BNE             loc_E2D4|36-209
57994|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
57998|code|BCS             loc_E284|249-210
58000|code|SUBS            R0, #8; ptr|8-56
58002|code|ADD.W           R1, R4, #0x18; size|4-241-24-1
58006|code|BLX             realloc|251-247-132-232
58010|code|MOV             R5, R0|5-70
58012|code|CBZ             R0, loc_E2E0|0-179
58014|code|LDR             R2, [R5]|42-104
58016|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
58024|code|CMP             R2, R3|154-66
58026|code|BNE             loc_E302|42-209
58028|code|LDR             R3, =dword_18574|27-75
58030|code|SUBS            R2, R4, R6; n|162-27
58032|code|STR             R4, [R5,#4]|108-96
58034|code|ADDS            R5, #8|8-53
58036|code|CMP             R4, R6|180-66
58038|code|LDR             R1, [R3]|25-104
58040|code|ADD             R1, R2|17-68
58042|code|STR             R1, [R3]|25-96
58044|code|BLE             loc_E2C6|3-221
58046|code|ADDS            R0, R5, R6; s|168-25
58048|code|MOVS            R1, #0; c|0-33
58050|code|BLX             memset|251-247-36-233
58054|code|ADDS            R0, R5, R4; s|40-25
58056|code|MOVS            R1, #0x55 ; 'U'; c|85-33
58058|code|MOVS            R2, #0x10; n|16-34
58060|code|BLX             memset|251-247-30-233
58064|code|MOV             R0, R5|40-70
58066|code|POP             {R4-R6,PC}|112-189
58068|code|LDR             R0, =aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|18-72
58070|code|MOVS            R2, #0x60 ; '`'; line|96-34
58072|code|LDR             R1, =aXmallocC; "xmalloc.c"|18-73
58074|code|LDR             R3, =aXrealloc; "xrealloc"|19-75
58076|code|BLX             __assert_fail|251-247-154-233
58080|code|MOV             R0, R5|40-70
58082|code|LDR             R1, =aOutOfMemory; "out of memory"|18-73
58084|code|BL              sub_A584|252-247-78-249
58088|code|B               loc_E29E|217-231
58090|code|LDR             R0, =aItemVoid0; "item != ((void *)0)"|17-72
58092|code|MOVS            R2, #0x5C ; '\'; line|92-34
58094|code|LDR             R1, =aXmallocC; "xmalloc.c"|13-73
58096|code|LDR             R3, =aXrealloc; "xrealloc"|13-75
58098|code|BLX             __assert_fail|251-247-144-233
58102|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|15-72
58104|code|MOVS            R2, #0x5E ; '^'; line|94-34
58106|code|LDR             R1, =aXmallocC; "xmalloc.c"|10-73
58108|code|LDR             R3, =aXrealloc; "xrealloc"|10-75
58110|code|BLX             __assert_fail|251-247-138-233
58114|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|12-72
58116|code|MOVS            R2, #0x64 ; 'd'; line|100-34
58118|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
58120|code|LDR             R3, =aXrealloc; "xrealloc"|7-75
58122|code|BLX             __assert_fail|251-247-132-233
58126|code|LDR             R0, =aNewsize0; "newsize > 0"|10-72
58128|code|MOVS            R2, #0x5D ; ']'; line|93-34
58130|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
58132|code|LDR             R3, =aXrealloc; "xrealloc"|4-75
58134|code|BLX             __assert_fail|251-247-126-233
58138|data|ALIGN 4|0-191
58140|data|DCD dword_18574|116-133-1-0
58144|data|DCD aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|40-0-1-0
58148|data|DCD aXmallocC; "xmalloc.c"|232-255-0-0
58152|data|DCD aXrealloc; "xrealloc"|200-255-0-0
58156|data|DCD aOutOfMemory; "out of memory"|24-245-0-0
58160|data|DCD aItemVoid0; "item != ((void *)0)"|244-255-0-0
58164|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|20-0-1-0
58168|data|DCD aNewsize0; "newsize > 0"|8-0-1-0
58172|code|PUSH            {R3-R5,LR}|56-181
58174|code|CMP             R0, #0|0-40
58176|code|BEQ             locret_E388|34-208
58178|code|LDR.W           R2, [R0,#-8]|80-248-8-44
58182|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
58190|code|CMP             R2, R3|154-66
58192|code|BNE             loc_E396|33-209
58194|code|LDR.W           R4, [R0,#-4]|80-248-4-76
58198|code|MOVS            R3, #0xF|15-35
58200|code|ADDS            R1, R0, R4|1-25
58202|code|LDRB            R2, [R1,R3]|202-92
58204|code|CMP             R2, #0x55 ; 'U'|85-42
58206|code|BNE             loc_E38A|20-209
58208|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
58212|code|BCS             loc_E35A|249-210
58214|code|SUB.W           R5, R0, #8|160-241-8-5
58218|code|ADD.W           R2, R4, #0x18; n|4-241-24-2
58222|code|MOVS            R1, #0; c|0-33
58224|code|MOV             R0, R5; s|40-70
58226|code|BLX             memset|251-247-204-232
58230|code|LDR             R3, =dword_18574|11-75
58232|code|MOV             R0, R5|40-70
58234|code|LDR             R2, [R3]|26-104
58236|code|SUBS            R4, R2, R4|20-27
58238|code|STR             R4, [R3]|28-96
58240|code|POP.W           {R3-R5,LR}|189-232-56-64
58244|code|B.W             j_free|250-247-206-191
58248|code|POP             {R3-R5,PC}|56-189
58250|code|LDR             R0, =aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|7-72
58252|code|MOVS            R2, #0x78 ; 'x'; line|120-34
58254|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
58256|code|LDR             R3, =aXfree; "xfree"|7-75
58258|code|BLX             __assert_fail|251-247-64-233
58262|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|7-72
58264|code|MOVS            R2, #0x76 ; 'v'; line|118-34
58266|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
58268|code|LDR             R3, =aXfree; "xfree"|4-75
58270|code|BLX             __assert_fail|251-247-58-233
58274|data|ALIGN 4|0-191
58276|data|DCD dword_18574|116-133-1-0
58280|data|DCD aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|80-0-1-0
58284|data|DCD aXmallocC; "xmalloc.c"|232-255-0-0
58288|data|DCD aXfree; "xfree"|212-255-0-0
58292|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|20-0-1-0
58296|code|PUSH            {R3-R5,LR}|56-181
58298|code|MOV             R5, R0|5-70
58300|code|BLX             strlen|251-247-112-232
58304|code|ADDS            R0, #1|1-48
58306|code|BL              sub_E1F0|255-247-21-255
58310|code|MOV             R1, R5; src|41-70
58312|code|MOV             R4, R0|4-70
58314|code|BLX             strcpy|251-247-32-232
58318|code|MOV             R0, R4|32-70
58320|code|POP             {R3-R5,PC}|56-189
58322|data|ALIGN 4|0-191
58324|code|PUSH.W          {R4-R11,LR}|45-233-240-79
58328|code|MOV             R5, R0|5-70
58330|code|SUB             SP, SP, #0xC|131-176
58332|code|MOV             R0, R2; s|16-70
58334|code|MOV             R8, R3|152-70
58336|code|MOV             R10, R2|146-70
58338|code|MOV             R9, R1|137-70
58340|code|BLX             strlen|251-247-92-232
58344|code|MOV             R7, R0|7-70
58346|code|MOV             R0, R8; s|64-70
58348|code|BLX             strlen|251-247-88-232
58352|code|RSB.W           R11, R7, R0|199-235-0-11
58356|code|MOV             R6, R0|6-70
58358|code|ADD.W           R11, R11, #1|11-241-1-11
58362|code|B               loc_E428|21-224
58364|code|MOV             R0, R5; s|40-70
58366|code|BLX             strlen|251-247-80-232
58370|code|ADD             R0, R11|88-68
58372|code|CMP             R0, R9|72-69
58374|code|BHI             loc_E43C|25-216
58376|code|ADDS            R1, R4, R7|225-25
58378|code|STR             R1, [SP,#0x30+src]|1-145
58380|code|MOV             R0, R1; s|8-70
58382|code|BLX             strlen|251-247-72-232
58386|code|ADDS            R3, R4, R6|163-25
58388|code|LDR             R1, [SP,#0x30+src]; src|1-153
58390|code|ADDS            R2, R0, #1; n|66-28
58392|code|MOV             R0, R3; dest|24-70
58394|code|BLX             memmove|250-247-126-239
58398|code|MOV             R0, R4; dest|32-70
58400|code|MOV             R1, R8; src|65-70
58402|code|MOV             R2, R6; n|50-70
58404|code|BLX             memcpy|250-247-146-239
58408|code|MOV             R0, R5; haystack|40-70
58410|code|MOV             R1, R10; needle|81-70
58412|code|BLX             strstr|250-247-68-239
58416|code|MOV             R4, R0|4-70
58418|code|CMP             R0, #0|0-40
58420|code|BNE             loc_E3FC|226-209
58422|code|ADD             SP, SP, #0xC|3-176
58424|code|POP.W           {R4-R11,PC}|189-232-240-143
58428|code|LDR             R0, =aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|2-72
58430|code|MOVS            R2, #0x5C ; '\'; line|92-34
58432|code|LDR             R1, =aXregexC; "xregex.c"|2-73
58434|code|LDR             R3, =aStrSubst; "_str_subst"|3-75
58436|code|BLX             __assert_fail|251-247-230-232
58440|data|DCD aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|8-1-1-0
58444|data|DCD aXregexC; "xregex.c"|48-1-1-0
58448|data|DCD aStrSubst; "_str_subst"|120-0-1-0
58452|code|PUSH            {R3,LR}|8-181
58454|code|MOVS            R0, #0xC|12-32
58456|code|BL              sub_E1F0|255-247-202-254
58460|code|MOVS            R2, #0|0-34
58462|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
58470|code|STR             R2, [R0,#8]|130-96
58472|code|STR             R3, [R0]|3-96
58474|code|POP             {R3,PC}|8-189
58476|code|LDR             R2, [R0]|2-104
58478|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
58486|code|CMP             R2, R3|154-66
58488|code|PUSH            {R4,LR}|16-181
58490|code|MOV             R4, R0|4-70
58492|code|BNE             loc_E49A|13-209
58494|code|LDR             R0, [R0,#8]|128-104
58496|code|CBZ             R0, loc_E48C|32-177
58498|code|BLX             regfree|250-247-184-239
58502|code|LDR             R0, [R4,#8]|160-104
58504|code|BL              sub_E33C|255-247-88-255
58508|code|MOVS            R3, #0|0-35
58510|code|MOV             R0, R4|32-70
58512|code|STR             R3, [R4]|35-96
58514|code|POP.W           {R4,LR}|189-232-16-64
58518|code|B.W             sub_E33C|255-247-81-191
58522|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|3-72
58524|code|MOVS            R2, #0x48 ; 'H'|72-34
58526|code|LDR             R1, =aXregexC; "xregex.c"|3-73
58528|code|LDR             R3, =aXregexDestroy; "xregex_destroy"|3-75
58530|code|BLX             __assert_fail|251-247-184-232
58534|data|ALIGN 4|0-191
58536|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|60-1-1-0
58540|data|DCD aXregexC; "xregex.c"|48-1-1-0
58544|data|DCD aXregexDestroy; "xregex_destroy"|132-0-1-0
58548|code|PUSH.W          {R4-R8,LR}|45-233-240-65
58552|code|SUB             SP, SP, #0x108|194-176
58554|code|LDR             R6, =__stack_chk_guard|56-78
58556|code|MOV             R4, R0|4-70
58558|code|MOV             R5, R1|13-70
58560|code|MOV             R7, R2|23-70
58562|code|LDR             R3, [R6]|51-104
58564|code|STR             R3, [SP,#0x104]|65-147
58566|code|CMP             R1, #0|0-41
58568|code|BEQ             loc_E58E|97-208
58570|code|LDR             R2, [R0]|2-104
58572|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
58580|code|CMP             R2, R3|154-66
58582|code|BNE             loc_E582|84-209
58584|code|LDR.W           R8, [R0,#8]|208-248-8-128
58588|code|CMP.W           R8, #0|184-241-0-15
58592|code|BNE             loc_E576|73-209
58594|code|MOV             R0, R1|8-70
58596|code|BLX             strlen|250-247-220-239
58600|code|CMP.W           R0, #0x100|176-245-128-127
58604|code|BHI             loc_E568|60-216
58606|code|MOVS            R0, #0x20 ; ' '|32-32
58608|code|BL              sub_E1F0|255-247-126-254
58612|code|MOVS            R3, #1|1-35
58614|code|STR             R3, [R4,#4]|99-96
58616|code|STR             R0, [R4,#8]|160-96
58618|code|CMP             R7, #0|0-47
58620|code|BEQ             loc_E562|49-208
58622|code|MOV             R0, R5|40-70
58624|code|BL              sub_E3B8|255-247-90-255
58628|code|MOV             R5, R0|5-70
58630|code|BLX             strlen|250-247-204-239
58634|code|LDR             R2, =aR; "\\r"|37-74
58636|code|LDR             R3, =asc_101A0; "\r"|37-75
58638|code|ADDS            R1, R0, #1|65-28
58640|code|MOV             R0, R5|40-70
58642|code|BL              sub_E3D4|255-247-95-255
58646|code|MOV             R0, R5|40-70
58648|code|BLX             strlen|250-247-194-239
58652|code|LDR             R3, =(a101Goodbye+0xC); "\n"|34-75
58654|code|LDR             R2, =aN; "\\n"|35-74
58656|code|ADDS            R1, R0, #1|65-28
58658|code|MOV             R0, R5|40-70
58660|code|BL              sub_E3D4|255-247-86-255
58664|code|LDR             R0, [R4,#8]|160-104
58666|code|LDR             R2, [R4,#4]|98-104
58668|code|MOV             R1, R5|41-70
58670|code|BLX             regcomp|251-247-36-232
58674|code|MOV             R7, R0|7-70
58676|code|MOV             R0, R5|40-70
58678|code|BL              sub_E33C|255-247-1-255
58682|code|CBZ             R7, loc_E554|95-177
58684|code|LDR             R1, [R4,#8]|161-104
58686|code|ADD             R2, SP, #4|1-170
58688|code|MOV             R0, R7|56-70
58690|code|MOV.W           R3, #0x100|79-244-128-115
58694|code|BLX             regerror|250-247-214-238
58698|code|MOVS            R0, #0|0-32
58700|code|LDR             R1, =aRegcompFailedS; "regcomp failed: %s"|24-73
58702|code|ADD             R2, SP, #4|1-170
58704|code|BL              sub_A584|252-247-24-248
58708|code|LDR             R2, [SP,#0x104]|65-154
58710|code|LDR             R3, [R6]|51-104
58712|code|CMP             R2, R3|154-66
58714|code|BNE             loc_E572|10-209
58716|code|ADD             SP, SP, #0x108|66-176
58718|code|POP.W           {R4-R8,PC}|189-232-240-129
58722|code|MOVS            R3, #9|9-35
58724|code|STR             R3, [R4,#4]|99-96
58726|code|B               loc_E4FE|202-231
58728|code|MOV             R0, R8|64-70
58730|code|LDR             R1, =aRefusingToComp; "refusing to compile regex > 256 bytes"|18-73
58732|code|BL              sub_A584|252-247-10-248
58736|code|B               loc_E4EE|189-231
58738|code|BLX             __stack_chk_fail|250-247-10-239
58742|code|LDR             R0, =aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|16-72
58744|code|MOVS            R2, #0x6B ; 'k'|107-34
58746|code|LDR             R1, =aXregexC; "xregex.c"|16-73
58748|code|LDR             R3, =aXregexCompile; "xregex_compile"|16-75
58750|code|BLX             __assert_fail|251-247-74-232
58754|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|16-72
58756|code|MOVS            R2, #0x6A ; 'j'|106-34
58758|code|LDR             R1, =aXregexC; "xregex.c"|13-73
58760|code|LDR             R3, =aXregexCompile; "xregex_compile"|13-75
58762|code|BLX             __assert_fail|251-247-68-232
58766|code|LDR             R0, =unk_101C0|14-72
58768|code|MOVS            R2, #0x69 ; 'i'|105-34
58770|code|LDR             R1, =aXregexC; "xregex.c"|10-73
58772|code|LDR             R3, =aXregexCompile; "xregex_compile"|10-75
58774|code|BLX             __assert_fail|251-247-62-232
58778|data|ALIGN 4|0-191
58780|data|DCD __stack_chk_guard|56-133-1-0
58784|data|DCD aR; "\\r"|92-244-0-0
58788|data|DCD asc_101A0; "\r"|160-1-1-0
58792|data|DCD a101Goodbye+0xC; "\n"|0-243-0-0
58796|data|DCD aN; "\\n"|96-244-0-0
58800|data|DCD aRegcompFailedS; "regcomp failed: %s"|164-1-1-0
58804|data|DCD aRefusingToComp; "refusing to compile regex > 256 bytes"|120-1-1-0
58808|data|DCD aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|88-1-1-0
58812|data|DCD aXregexC; "xregex.c"|48-1-1-0
58816|data|DCD aXregexCompile; "xregex_compile"|148-0-1-0
58820|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|60-1-1-0
58824|data|DCD unk_101C0|192-1-1-0
58828|code|PUSH            {R4-R6,LR}|112-181
58830|code|MOVW            R3, #0xAAAA|74-246-170-35
58834|code|LDR             R6, [R0]|6-104
58836|code|MOVT.W          R3, #0x3456|195-242-86-67
58840|code|SUB             SP, SP, #8|130-176
58842|code|MOV             R5, R1|13-70
58844|code|CMP             R6, R3|158-66
58846|code|MOV             R4, R2|20-70
58848|code|BNE             loc_E640|46-209
58850|code|LDR             R0, [R0,#8]|128-104
58852|code|CMP             R0, #0|0-40
58854|code|BEQ             loc_E64C|49-208
58856|code|CMP             R2, #0|0-42
58858|code|BEQ             loc_E632|34-208
58860|code|LDR             R2, [R2]|18-104
58862|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
58870|code|CMP             R2, R3|154-66
58872|code|BNE             loc_E664|52-209
58874|code|LDR             R3, [R4,#0x14]|99-105
58876|code|CMP             R3, #0|0-43
58878|code|BNE             loc_E658|43-209
58880|code|LDR             R3, [R4,#8]|163-104
58882|code|MOVS            R6, #2|2-38
58884|code|LDR             R2, [R4,#4]|98-104
58886|code|STR             R6, [SP]|0-150
58888|code|BLX             regexec|250-247-214-238
58892|code|MOVS            R3, #1|1-35
58894|code|STR             R3, [R4,#0x14]|99-97
58896|code|MOV             R6, R0|6-70
58898|code|STR             R0, [R4,#0x10]|32-97
58900|code|CBNZ            R0, loc_E626|56-185
58902|code|LDR             R0, [R4,#0xC]|224-104
58904|code|CBZ             R0, loc_E61E|8-177
58906|code|BL              sub_E33C|255-247-143-254
58910|code|MOV             R0, R5|40-70
58912|code|BL              sub_E3B8|255-247-202-254
58916|code|STR             R0, [R4,#0xC]|224-96
58918|code|RSBS.W          R0, R6, #1|214-241-1-0
58922|code|IT CC|56-191
58924|code|MOVCC           R0, #0|0-32
58926|code|ADD             SP, SP, #8|2-176
58928|code|POP             {R4-R6,PC}|112-189
58930|code|MOV             R3, R2|19-70
58932|code|MOVS            R4, #2|2-36
58934|code|STR             R4, [SP]|0-148
58936|code|BLX             regexec|250-247-190-238
58940|code|MOV             R6, R0|6-70
58942|code|B               loc_E626|242-231
58944|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|11-72
58946|code|MOVS            R2, #0x8C|140-34
58948|code|LDR             R1, =aXregexC; "xregex.c"|11-73
58950|code|LDR             R3, =aXregexExec; "xregex_exec"|12-75
58952|code|BLX             __assert_fail|250-247-228-239
58956|code|LDR             R0, =unk_101B8|11-72
58958|code|MOVS            R2, #0x8D|141-34
58960|code|LDR             R1, =aXregexC; "xregex.c"|8-73
58962|code|LDR             R3, =aXregexExec; "xregex_exec"|9-75
58964|code|BLX             __assert_fail|250-247-222-239
58968|code|LDR             R0, =aXmXmUsedFalse; "xm->xm_used == FALSE"|9-72
58970|code|MOVS            R2, #0x90|144-34
58972|code|LDR             R1, =aXregexC; "xregex.c"|5-73
58974|code|LDR             R3, =aXregexExec; "xregex_exec"|6-75
58976|code|BLX             __assert_fail|250-247-216-239
58980|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|7-72
58982|code|MOVS            R2, #0x8F|143-34
58984|code|LDR             R1, =aXregexC; "xregex.c"|2-73
58986|code|LDR             R3, =aXregexExec; "xregex_exec"|3-75
58988|code|BLX             __assert_fail|250-247-210-239
58992|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|60-1-1-0
58996|data|DCD aXregexC; "xregex.c"|48-1-1-0
59000|data|DCD aXregexExec; "xregex_exec"|164-0-1-0
59004|data|DCD unk_101B8|184-1-1-0
59008|data|DCD aXmXmUsedFalse; "xm->xm_used == FALSE"|244-1-1-0
59012|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|216-1-1-0
59016|code|PUSH            {R3-R5,LR}|56-181
59018|code|MOV             R5, R0|5-70
59020|code|MOVS            R0, #0x18|24-32
59022|code|ADDS            R5, #1|1-53
59024|code|BL              sub_E1F0|255-247-174-253
59028|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
59036|code|MOV             R4, R0|4-70
59038|code|STR             R5, [R0,#4]|69-96
59040|code|STR             R3, [R4]|35-96
59042|code|LSLS            R0, R5, #3|232-0
59044|code|BL              sub_E1F0|255-247-164-253
59048|code|MOVS            R3, #0|0-35
59050|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
59054|code|STR             R3, [R4,#0xC]|227-96
59056|code|STR             R2, [R4,#0x10]|34-97
59058|code|STR             R3, [R4,#0x14]|99-97
59060|code|STR             R0, [R4,#8]|160-96
59062|code|MOV             R0, R4|32-70
59064|code|POP             {R3-R5,PC}|56-189
59066|data|ALIGN 4|0-191
59068|code|LDR             R2, [R0]|2-104
59070|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
59078|code|CMP             R2, R3|154-66
59080|code|PUSH            {R4,LR}|16-181
59082|code|MOV             R4, R0|4-70
59084|code|BNE             loc_E6EA|13-209
59086|code|LDR             R0, [R0,#8]|128-104
59088|code|BL              sub_E33C|255-247-52-254
59092|code|LDR             R0, [R4,#0xC]|224-104
59094|code|CBZ             R0, loc_E6DC|8-177
59096|code|BL              sub_E33C|255-247-48-254
59100|code|MOVS            R3, #0|0-35
59102|code|MOV             R0, R4|32-70
59104|code|STR             R3, [R4]|35-96
59106|code|POP.W           {R4,LR}|189-232-16-64
59110|code|B.W             sub_E33C|255-247-41-190
59114|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|3-72
59116|code|MOVS            R2, #0xB3|179-34
59118|code|LDR             R1, =aXregexC; "xregex.c"|3-73
59120|code|LDR             R3, =aXregexMatchDes; "xregex_match_destroy"|3-75
59122|code|BLX             __assert_fail|250-247-144-239
59126|data|ALIGN 4|0-191
59128|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|216-1-1-0
59132|data|DCD aXregexC; "xregex.c"|48-1-1-0
59136|data|DCD aXregexMatchDes; "xregex_match_destroy"|176-0-1-0
59140|code|PUSH            {R4,LR}|16-181
59142|code|MOV             R4, R0|4-70
59144|code|LDR             R0, [R0,#0xC]|192-104
59146|code|CBZ             R0, loc_E714|24-177
59148|code|BL              sub_E33C|255-247-22-254
59152|code|MOVS            R3, #0|0-35
59154|code|STR             R3, [R4,#0xC]|227-96
59156|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
59160|code|STR             R3, [R4,#0x10]|35-97
59162|code|MOVS            R3, #0|0-35
59164|code|STR             R3, [R4,#0x14]|99-97
59166|code|POP             {R4,PC}|16-189
59168|code|LDR             R2, [R0]|2-104
59170|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
59178|code|CMP             R2, R3|154-66
59180|code|PUSH            {R4-R6,LR}|112-181
59182|code|MOV             R4, R0|4-70
59184|code|BNE             loc_E76E|29-209
59186|code|LDR             R3, [R0,#0x14]|67-105
59188|code|CBZ             R3, loc_E762|171-177
59190|code|LDR             R6, [R0,#0x10]|6-105
59192|code|CBNZ            R6, loc_E75C|134-185
59194|code|LDR             R3, [R0,#8]|131-104
59196|code|LDR             R0, [R3,#4]|88-104
59198|code|ADDS            R0, #1|1-48
59200|code|BL              sub_E1F0|255-247-86-253
59204|code|LDR             R1, [R4,#0xC]|225-104
59206|code|MOV             R5, R0|5-70
59208|code|CBZ             R1, loc_E77A|185-177
59210|code|LDR             R3, [R4,#8]|163-104
59212|code|LDR             R2, [R3,#4]|90-104
59214|code|BLX             memcpy|250-247-254-237
59218|code|LDR             R3, [R4,#8]|163-104
59220|code|MOV             R0, R5|40-70
59222|code|LDR             R3, [R3,#4]|91-104
59224|code|STRB            R6, [R5,R3]|238-84
59226|code|POP             {R4-R6,PC}|112-189
59228|code|MOVS            R5, #0|0-37
59230|code|MOV             R0, R5|40-70
59232|code|POP             {R4-R6,PC}|112-189
59234|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|9-72
59236|code|MOVS            R2, #0xCD|205-34
59238|code|LDR             R1, =aXregexC; "xregex.c"|9-73
59240|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|9-75
59242|code|BLX             __assert_fail|250-247-84-239
59246|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|9-72
59248|code|MOVS            R2, #0xCC|204-34
59250|code|LDR             R1, =aXregexC; "xregex.c"|6-73
59252|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|6-75
59254|code|BLX             __assert_fail|250-247-78-239
59258|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|7-72
59260|code|MOVS            R2, #0xD1|209-34
59262|code|LDR             R1, =aXregexC; "xregex.c"|3-73
59264|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|3-75
59266|code|BLX             __assert_fail|250-247-72-239
59270|data|ALIGN 4|0-191
59272|data|DCD aXmXmUsed; "xm->xm_used"|12-2-1-0
59276|data|DCD aXregexC; "xregex.c"|48-1-1-0
59280|data|DCD aXregexMatchStr; "xregex_match_strdup"|200-0-1-0
59284|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|216-1-1-0
59288|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|24-2-1-0
59292|code|LDR             R2, [R0]|2-104
59294|code|PUSH            {R3,LR}|8-181
59296|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
59304|code|CMP             R2, R3|154-66
59306|code|BNE             loc_E7B6|4-209
59308|code|LDR             R3, [R0,#0x14]|67-105
59310|code|CBZ             R3, loc_E7C2|67-177
59312|code|LDR             R3, [R0,#8]|131-104
59314|code|LDR             R0, [R3,#4]|88-104
59316|code|POP             {R3,PC}|8-189
59318|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|6-72
59320|code|MOVS            R2, #0xDB|219-34
59322|code|LDR             R1, =aXregexC; "xregex.c"|6-73
59324|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|6-75
59326|code|BLX             __assert_fail|250-247-42-239
59330|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|6-72
59332|code|MOVS            R2, #0xDC|220-34
59334|code|LDR             R1, =aXregexC; "xregex.c"|3-73
59336|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|3-75
59338|code|BLX             __assert_fail|250-247-36-239
59342|data|ALIGN 0x10|0-191
59344|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|216-1-1-0
59348|data|DCD aXregexC; "xregex.c"|48-1-1-0
59352|data|DCD aXregexMatchStr_0; "xregex_match_strlen"|220-0-1-0
59356|data|DCD aXmXmUsed; "xm->xm_used"|12-2-1-0
59360|code|LDR             R2, [R0]|2-104
59362|code|PUSH            {R3-R7,LR}|248-181
59364|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
59372|code|MOV             R6, R0|6-70
59374|code|CMP             R2, R3|154-66
59376|code|BNE             loc_E84E|45-209
59378|code|LDR             R3, [R0,#0x14]|67-105
59380|code|CMP             R3, #0|0-43
59382|code|BEQ             loc_E85A|48-208
59384|code|LDR             R4, [R0,#0x10]|4-105
59386|code|RSBS.W          R4, R4, #1|212-241-1-4
59390|code|IT CC|56-191
59392|code|MOVCC           R4, #0|0-36
59394|code|CMP             R1, #0|0-41
59396|code|ITE LT|180-191
59398|code|MOVLT           R4, #0|0-36
59400|code|ANDGE.W         R4, R4, #1|4-240-1-4
59404|code|CBZ             R4, loc_E844|212-177
59406|code|LDR             R3, [R0,#4]|67-104
59408|code|CMP             R1, R3|153-66
59410|code|BGE             loc_E848|25-218
59412|code|LDR             R3, [R0,#8]|131-104
59414|code|ADD.W           R2, R3, R1,LSL#3|3-235-193-2
59418|code|LDR.W           R7, [R3,R1,LSL#3]|83-248-49-112
59422|code|ADDS            R3, R7, #1|123-28
59424|code|BEQ             loc_E848|18-208
59426|code|LDR             R3, [R0,#0xC]|195-104
59428|code|LDR             R5, [R2,#4]|85-104
59430|code|CBZ             R3, loc_E872|35-179
59432|code|CMP             R7, R5|175-66
59434|code|BGE             loc_E866|28-218
59436|code|SUBS            R5, R5, R7|237-27
59438|code|ADDS            R0, R5, #1|104-28
59440|code|BL              sub_E1F0|255-247-222-252
59444|code|LDR             R1, [R6,#0xC]|241-104
59446|code|MOV             R2, R5|42-70
59448|code|ADDS            R1, R1, R7|201-25
59450|code|MOV             R4, R0|4-70
59452|code|BLX             memcpy|250-247-134-237
59456|code|MOVS            R3, #0|0-35
59458|code|STRB            R3, [R4,R5]|99-85
59460|code|MOV             R0, R4|32-70
59462|code|POP             {R3-R7,PC}|248-189
59464|code|MOVS            R4, #0|0-36
59466|code|MOV             R0, R4|32-70
59468|code|POP             {R3-R7,PC}|248-189
59470|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|12-72
59472|code|MOVS            R2, #0xE6|230-34
59474|code|LDR             R1, =aXregexC; "xregex.c"|12-73
59476|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|12-75
59478|code|BLX             __assert_fail|250-247-222-238
59482|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|12-72
59484|code|MOVS            R2, #0xE7|231-34
59486|code|LDR             R1, =aXregexC; "xregex.c"|9-73
59488|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|9-75
59490|code|BLX             __assert_fail|250-247-216-238
59494|code|LDR             R0, =aMRmSoMRmEo; "m.rm_so < m.rm_eo"|10-72
59496|code|MOVS            R2, #0xEE|238-34
59498|code|LDR             R1, =aXregexC; "xregex.c"|6-73
59500|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|6-75
59502|code|BLX             __assert_fail|250-247-210-238
59506|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|8-72
59508|code|MOVS            R2, #0xED|237-34
59510|code|LDR             R1, =aXregexC; "xregex.c"|3-73
59512|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|3-75
59514|code|BLX             __assert_fail|250-247-204-238
59518|data|ALIGN 0x10|0-191
59520|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|216-1-1-0
59524|data|DCD aXregexC; "xregex.c"|48-1-1-0
59528|data|DCD aXregexMatchSub; "xregex_match_sub_strdup"|240-0-1-0
59532|data|DCD aXmXmUsed; "xm->xm_used"|12-2-1-0
59536|data|DCD aMRmSoMRmEo; "m.rm_so < m.rm_eo"|52-2-1-0
59540|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|24-2-1-0
59544|code|PUSH            {R3-R5,LR}|56-181
59546|code|MOVS            R1, #3|3-33
59548|code|MOVS            R2, #0|0-34
59550|code|MOV             R4, R0|4-70
59552|code|BLX             fcntl|250-247-16-238
59556|code|CMP             R0, #0|0-40
59558|code|MOV             R5, R0|5-70
59560|code|BLT             loc_E8C8|14-219
59562|code|MOVS            R1, #4|4-33
59564|code|ORR.W           R2, R5, #0x800|69-244-0-98
59568|code|MOV             R0, R4|32-70
59570|code|BLX             fcntl|250-247-8-238
59574|code|CMP             R0, #0|0-40
59576|code|BLT             loc_E8BC|0-219
59578|code|POP             {R3-R5,PC}|56-189
59580|code|MOVS            R0, #1|1-32
59582|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
59584|code|POP.W           {R3-R5,LR}|189-232-56-64
59588|code|B.W             sub_A584|251-247-94-190
59592|code|MOVS            R0, #1|1-32
59594|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
59596|code|BL              sub_A584|251-247-90-254
59600|code|B               loc_E8AA|235-231
59602|data|ALIGN 4|0-191
59604|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|100-2-1-0
59608|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|84-2-1-0
59612|code|PUSH            {R3-R5,LR}|56-181
59614|code|MOVS            R1, #3|3-33
59616|code|MOVS            R2, #0|0-34
59618|code|MOV             R4, R0|4-70
59620|code|BLX             fcntl|250-247-238-237
59624|code|CMP             R0, #0|0-40
59626|code|MOV             R5, R0|5-70
59628|code|BLT             loc_E90C|14-219
59630|code|MOVS            R1, #4|4-33
59632|code|BIC.W           R2, R5, #0x800|37-244-0-98
59636|code|MOV             R0, R4|32-70
59638|code|BLX             fcntl|250-247-230-237
59642|code|CMP             R0, #0|0-40
59644|code|BLT             loc_E900|0-219
59646|code|POP             {R3-R5,PC}|56-189
59648|code|MOVS            R0, #1|1-32
59650|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
59652|code|POP.W           {R3-R5,LR}|189-232-56-64
59656|code|B.W             sub_A584|251-247-60-190
59660|code|MOVS            R0, #1|1-32
59662|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
59664|code|BL              sub_A584|251-247-56-254
59668|code|B               loc_E8EE|235-231
59670|data|ALIGN 4|0-191
59672|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|100-2-1-0
59676|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|84-2-1-0
59680|code|PUSH            {R4,R5,LR}|48-181
59682|code|SUB             SP, SP, #0x84|161-176
59684|code|LDR             R5, =__stack_chk_guard|53-77
59686|code|ADD             R1, SP, #4|1-169
59688|code|MOV             R4, R0|4-70
59690|code|LDR             R3, [R5]|43-104
59692|code|STR             R3, [SP,#0x7C]|31-147
59694|code|BLX             tcgetattr|250-247-120-238
59698|code|CMP             R0, #0|0-40
59700|code|BLT             loc_E9B2|61-219
59702|code|ADD             R0, SP, #4|1-168
59704|code|BLX             cfmakeraw|250-247-196-236
59708|code|MOVS            R1, #0|0-33
59710|code|MOV             R0, R4|32-70
59712|code|ADD             R2, SP, #4|1-170
59714|code|BLX             tcsetattr|250-247-94-237
59718|code|CMP             R0, #0|0-40
59720|code|BLT             loc_E9CE|65-219
59722|code|MOVS            R2, #0x3C ; '<'|60-34
59724|code|MOVS            R1, #0|0-33
59726|code|ADD             R0, SP, #0x40 ; '@'|16-168
59728|code|BLX             memset|250-247-220-237
59732|code|MOV             R0, R4|32-70
59734|code|ADD             R1, SP, #0x40 ; '@'|16-169
59736|code|BLX             tcgetattr|250-247-98-238
59740|code|CMP             R0, #0|0-40
59742|code|BLT             loc_E9EC|69-219
59744|code|MOVS            R2, #0x20 ; ' '|32-34
59746|code|ADD.W           R0, SP, #0x15|13-241-21-0
59750|code|ADD.W           R1, SP, #0x51 ; 'Q'|13-241-81-1
59754|code|BLX             memcmp|250-247-2-237
59758|code|CBNZ            R0, loc_E97C|40-185
59760|code|LDRB.W          R2, [SP,#0x1A]|157-248-26-32
59764|code|LDRB.W          R3, [SP,#0x56]|157-248-86-48
59768|code|CMP             R2, R3|154-66
59770|code|BEQ             loc_E990|9-208
59772|code|MOVS            R0, #0|0-32
59774|code|LDR             R1, =aTcsetattrFaile; "tcsetattr failed"|32-73
59776|code|BL              sub_A584|251-247-0-254
59780|code|LDR             R2, [SP,#0x7C]|31-154
59782|code|LDR             R3, [R5]|43-104
59784|code|CMP             R2, R3|154-66
59786|code|BNE             loc_E9F6|52-209
59788|code|ADD             SP, SP, #0x84|33-176
59790|code|POP             {R4,R5,PC}|48-189
59792|code|LDR             R3, [SP,#0x40]|16-155
59794|code|LDR             R2, [SP,#4]|1-154
59796|code|CMP             R2, R3|154-66
59798|code|BNE             loc_E97C|241-209
59800|code|LDR             R3, [SP,#0x44]|17-155
59802|code|LDR             R2, [SP,#8]|2-154
59804|code|CMP             R2, R3|154-66
59806|code|BNE             loc_E97C|237-209
59808|code|LDR             R3, [SP,#0x48]|18-155
59810|code|LDR             R2, [SP,#0xC]|3-154
59812|code|CMP             R2, R3|154-66
59814|code|BNE             loc_E97C|233-209
59816|code|LDR             R3, [SP,#0x4C]|19-155
59818|code|LDR             R2, [SP,#0x10]|4-154
59820|code|CMP             R2, R3|154-66
59822|code|BNE             loc_E97C|229-209
59824|code|B               loc_E984|232-231
59826|code|MOVS            R0, #1|1-32
59828|code|LDR             R1, =aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|19-73
59830|code|BL              sub_A584|251-247-229-253
59834|code|ADD             R0, SP, #4|1-168
59836|code|BLX             cfmakeraw|250-247-130-236
59840|code|MOVS            R1, #0|0-33
59842|code|MOV             R0, R4|32-70
59844|code|ADD             R2, SP, #4|1-170
59846|code|BLX             tcsetattr|250-247-28-237
59850|code|CMP             R0, #0|0-40
59852|code|BGE             loc_E94A|189-218
59854|code|MOVS            R0, #1|1-32
59856|code|LDR             R1, =aTcsetattr_0; "tcsetattr"|13-73
59858|code|BL              sub_A584|251-247-215-253
59862|code|MOVS            R2, #0x3C ; '<'|60-34
59864|code|MOVS            R1, #0|0-33
59866|code|ADD             R0, SP, #0x40 ; '@'|16-168
59868|code|BLX             memset|250-247-150-237
59872|code|MOV             R0, R4|32-70
59874|code|ADD             R1, SP, #0x40 ; '@'|16-169
59876|code|BLX             tcgetattr|250-247-28-238
59880|code|CMP             R0, #0|0-40
59882|code|BGE             loc_E960|185-218
59884|code|MOVS            R0, #1|1-32
59886|code|LDR             R1, =(aXcfmakerawTcge+0xC); "tcgetattr"|7-73
59888|code|BL              sub_A584|251-247-200-253
59892|code|B               loc_E960|180-231
59894|code|BLX             __stack_chk_fail|250-247-200-236
59898|data|ALIGN 4|0-191
59900|data|DCD __stack_chk_guard|56-133-1-0
59904|data|DCD aTcsetattrFaile; "tcsetattr failed"|152-2-1-0
59908|data|DCD aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|116-2-1-0
59912|data|DCD aTcsetattr_0; "tcsetattr"|140-2-1-0
59916|data|DCD aXcfmakerawTcge+0xC; "tcgetattr"|128-2-1-0
59920|code|PUSH            {R4-R6,LR}|112-181
59922|code|MOV             R5, R2|21-70
59924|code|MOVS            R2, #0|0-34
59926|code|MOV             R4, R1|12-70
59928|code|MOV             R3, R2|19-70
59930|code|BLX             forkpty|250-247-240-237
59934|code|MOVS            R3, R4|35-28
59936|code|IT NE|24-191
59938|code|MOVNE           R3, #1|1-35
59940|code|CMP             R0, #0|0-40
59942|code|ITE LE|212-191
59944|code|MOVLE           R3, #0|0-35
59946|code|ANDGT.W         R3, R3, #1|3-240-1-3
59950|code|MOV             R6, R0|6-70
59952|code|CBZ             R3, loc_EA3C|35-177
59954|code|MOV             R0, R4|32-70
59956|code|BLX             strlen|250-247-52-237
59960|code|CMP             R0, R5|168-66
59962|code|BCS             loc_EA40|1-210
59964|code|MOV             R0, R6|48-70
59966|code|POP             {R4-R6,PC}|112-189
59968|code|LDR             R0, =aStrlenNameLen; "strlen(name) < len"|2-72
59970|code|MOVS            R2, #0x88|136-34
59972|code|LDR             R1, =aXptyC; "xpty.c"|2-73
59974|code|LDR             R3, =aXforkpty; "xforkpty"|3-75
59976|code|BLX             __assert_fail|250-247-228-237
59980|data|DCD aStrlenNameLen; "strlen(name) < len"|172-2-1-0
59984|data|DCD aXptyC; "xpty.c"|192-2-1-0
59988|data|DCD aXforkpty; "xforkpty"|72-2-1-0
59992|code|PUSH            {R4,LR}|16-181
59994|code|SUB             SP, SP, #0x118|198-176
59996|code|MOV             R4, R0|4-70
59998|code|ADD             R0, SP, #4|1-168
60000|code|STR             R1, [SP]|0-145
60002|code|BLX             sigemptyset|250-247-114-237
60006|code|MOV             R0, R4|32-70
60008|code|MOV             R1, SP|105-70
60010|code|ADD             R2, SP, #0x8C|35-170
60012|code|CMP             R4, #0xE|14-44
60014|code|ITE EQ|12-191
60016|code|MOVEQ.W         R4, #0x20000000|79-240-0-84
60020|code|MOVNE.W         R4, #0x10000000|79-240-128-84
60024|code|STR             R4, [SP,#0x84]|33-148
60026|code|BLX             sigaction|250-247-176-236
60030|code|CMP             R0, #0|0-40
60032|code|BLT             loc_EA88|2-219
60034|code|LDR             R0, [SP,#0x8C]|35-152
60036|code|ADD             SP, SP, #0x118|70-176
60038|code|POP             {R4,PC}|16-189
60040|code|MOVS            R0, #1|1-32
60042|code|LDR             R1, =aSigaction_0; "sigaction"|2-73
60044|code|BL              sub_A584|251-247-122-253
60048|code|B               loc_EA82|247-231
60050|data|ALIGN 4|0-191
60052|data|DCD aSigaction_0; "sigaction"|200-2-1-0
60056|code|PUSH.W          {R3-R9,LR}|45-233-248-67
60060|code|MOV             R6, R0|6-70
60062|code|LDR.W           R9, =(off_182E4 - 0xEAAC)|223-248-52-144
60066|code|MOV             R7, R1|15-70
60068|code|LDR             R5, =(off_182E0 - 0xEAB2)|12-77
60070|code|MOV             R8, R2|144-70
60072|code|ADD             R9, PC; off_182E4|249-68
60074|code|BL              .init_proc|250-247-245-251
60078|code|ADD             R5, PC; off_182E0|125-68
60080|code|RSB.W           R9, R5, R9|197-235-9-9
60084|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
60088|code|BEQ             locret_EACE|9-208
60090|code|MOVS            R4, #0|0-36
60092|code|LDR.W           R3, [R5],#4|85-248-4-59
60096|code|MOV             R0, R6|48-70
60098|code|MOV             R1, R7|57-70
60100|code|MOV             R2, R8|66-70
60102|code|ADDS            R4, #1|1-52
60104|code|BLX             R3; sub_9D74|152-71
60106|code|CMP             R4, R9|76-69
60108|code|BNE             loc_EABC|246-209
60110|code|POP.W           {R3-R9,PC}|189-232-248-131
60114|data|ALIGN 4|0-191
60116|data|DCD off_182E4 - 0xEAAC|56-152-0-0
60120|data|DCD off_182E0 - 0xEAB2|46-152-0-0
60124|code|BX              LR|112-71
60126|data|ALIGN 0x10|0-191
60128|code|PUSH            {R3,LR}|8-181
60130|code|NOP|0-191
60132|code|POP             {R3,PC}|8-189
60134|data|DCW 0|0-0
66268|data|ALIGN 0x10|0-0-0-0
99040|data|DCD sub_9D74+1|117-157-0-0
99044|data|DCD sub_9D64+1|101-157-0-0
99048|data|DCD 0|0-0-0-0
99052|data|Elf32_Dyn <1, <1>>; DT_NEEDED libgenders.so.0|1-0-0-0-1-0-0-0
99060|data|Elf32_Dyn <1, <0xAA>>; DT_NEEDED libutil.so.1|1-0-0-0-170-0-0-0
99068|data|Elf32_Dyn <1, <0xBF>>; DT_NEEDED libc.so.6|1-0-0-0-191-0-0-0
99076|data|Elf32_Dyn <1, <0x2FA>>; DT_NEEDED ld-linux.so.3|1-0-0-0-250-2-0-0
99084|data|Elf32_Dyn <0xC, <0x9299>>; DT_INIT|12-0-0-0-153-146-0-0
99092|data|Elf32_Dyn <0xD, <0xEAE1>>; DT_FINI|13-0-0-0-225-234-0-0
99100|data|Elf32_Dyn <0x19, <0x182E0>>; DT_INIT_ARRAY|25-0-0-0-224-130-1-0
99108|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
99116|data|Elf32_Dyn <0x1A, <0x182E4>>; DT_FINI_ARRAY|26-0-0-0-228-130-1-0
99124|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
99132|data|Elf32_Dyn <4, <0x81A0>>; DT_HASH|4-0-0-0-160-129-0-0
99140|data|Elf32_Dyn <0x6FFFFEF5, <0x8400>>; DT_GNU_HASH|245-254-255-111-0-132-0-0
99148|data|Elf32_Dyn <5, <0x8BCC>>; DT_STRTAB|5-0-0-0-204-139-0-0
99156|data|Elf32_Dyn <6, <0x869C>>; DT_SYMTAB|6-0-0-0-156-134-0-0
99164|data|Elf32_Dyn <0xA, <0x32E>>; DT_STRSZ|10-0-0-0-46-3-0-0
99172|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
99180|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
99188|data|Elf32_Dyn <3, <0x183F4>>; DT_PLTGOT|3-0-0-0-244-131-1-0
99196|data|Elf32_Dyn <2, <0x248>>; DT_PLTRELSZ|2-0-0-0-72-2-0-0
99204|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
99212|data|Elf32_Dyn <0x17, <0x9050>>; DT_JMPREL|23-0-0-0-80-144-0-0
99220|data|Elf32_Dyn <0x11, <0x9010>>; DT_REL|17-0-0-0-16-144-0-0
99228|data|Elf32_Dyn <0x12, <0x40>>; DT_RELSZ|18-0-0-0-64-0-0-0
99236|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
99244|data|Elf32_Dyn <0x6FFFFFFE, <0x8FA0>>; DT_VERNEED|254-255-255-111-160-143-0-0
99252|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
99260|data|Elf32_Dyn <0x6FFFFFF0, <0x8EFA>>; DT_VERSYM|240-255-255-111-250-142-0-0
99268|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
99276|data|ALIGN 0x10|0-0-0-0
99316|data|DCD stru_182EC|236-130-1-0
99320|data|DCD 0|0-0-0-0
99324|data|DCD 0|0-0-0-0
99328|data|DCD __imp_strstr|96-134-1-0
99332|data|DCD __imp_cfmakeraw|112-134-1-0
99336|data|DCD __imp_strcmp|216-133-1-0
99340|data|DCD __imp_strtol|24-134-1-0
99344|data|DCD __imp_printf|240-133-1-0
99348|data|DCD __imp_regerror|72-134-1-0
99352|data|DCD __imp_read|20-134-1-0
99356|data|DCD __imp_fflush|148-133-1-0
99360|data|DCD __imp_memmove|232-133-1-0
99364|data|DCD __imp_free|220-133-1-0
99368|data|DCD __imp_gai_strerror|224-133-1-0
99372|data|DCD __imp_fgets|136-134-1-0
99376|data|DCD __imp_memcpy|208-133-1-0
99380|data|DCD __imp_time|184-133-1-0
99384|data|DCD __imp_genders_handle_destroy|32-134-1-0
99388|data|DCD __imp_memcmp|68-134-1-0
99392|data|DCD __imp_ctime|188-133-1-0
99396|data|DCD __imp___stack_chk_fail|84-134-1-0
99400|data|DCD __imp_dup2|120-133-1-0
99404|data|DCD __imp_realloc|40-134-1-0
99408|data|DCD __imp_dup|16-134-1-0
99412|data|DCD __imp_regexec|132-133-1-0
99416|data|DCD __imp_poll|88-134-1-0
99420|data|DCD __imp_genders_query|152-133-1-0
99424|data|DCD __imp_sigaction|36-134-1-0
99428|data|DCD __imp_strcat|4-134-1-0
99432|data|DCD __imp_regfree|120-134-1-0
99436|data|DCD __imp_tcsetattr|28-134-1-0
99440|data|DCD __imp_strcpy|128-134-1-0
99444|data|DCD __imp_gettimeofday|12-134-1-0
99448|data|DCD __imp_genders_nodelist_create|128-133-1-0
99452|data|DCD __imp_puts|248-133-1-0
99456|data|DCD __imp_malloc|168-133-1-0
99460|data|DCD __imp___libc_start_main|192-133-1-0
99464|data|DCD __imp_strerror|236-133-1-0
99468|data|DCD __imp___gmon_start__|152-134-1-0
99472|data|DCD __imp_getopt_long|104-134-1-0
99476|data|DCD __imp___ctype_b_loc|252-133-1-0
99480|data|DCD __imp_exit|56-134-1-0
99484|data|DCD __imp_strtoul|204-133-1-0
99488|data|DCD __imp_strlen|44-134-1-0
99492|data|DCD __imp_strchr|116-134-1-0
99496|data|DCD __imp_fprintf|60-134-1-0
99500|data|DCD __imp_fcntl|48-134-1-0
99504|data|DCD __imp_execv|52-134-1-0
99508|data|DCD __imp___errno_location|172-133-1-0
99512|data|DCD __imp_snprintf|64-134-1-0
99516|data|DCD __imp___isoc99_sscanf|92-134-1-0
99520|data|DCD __imp___strdup|156-133-1-0
99524|data|DCD __imp_memset|108-134-1-0
99528|data|DCD __imp_strncpy|80-134-1-0
99532|data|DCD __imp___xpg_basename|124-134-1-0
99536|data|DCD __imp_write|180-133-1-0
99540|data|DCD __imp_memchr|200-133-1-0
99544|data|DCD __imp_sigemptyset|160-133-1-0
99548|data|DCD __imp_strrchr|176-133-1-0
99552|data|DCD __imp_syslog|244-133-1-0
99556|data|DCD __imp_sprintf|140-134-1-0
99560|data|DCD __imp_regcomp|164-133-1-0
99564|data|DCD __imp_vsnprintf|144-134-1-0
99568|data|DCD __imp_qsort|0-134-1-0
99572|data|DCD __imp_genders_load_data|148-134-1-0
99576|data|DCD __imp_freeaddrinfo|136-133-1-0
99580|data|DCD __imp_getaddrinfo|132-134-1-0
99584|data|DCD __imp_socket|212-133-1-0
99588|data|DCD __imp_genders_handle_create|196-133-1-0
99592|data|DCD __imp_genders_errormsg|8-134-1-0
99596|data|DCD __imp_abort|140-133-1-0
99600|data|DCD __imp_close|76-134-1-0
99604|data|DCD __imp_forkpty|100-134-1-0
99608|data|DCD __imp_connect|124-133-1-0
99612|data|DCD __imp___assert_fail|228-133-1-0
99616|data|DCD __imp_tcgetattr|144-133-1-0
99620|data|DCD __imp___gmon_start__|152-134-1-0
99624|data|ALIGN 0x10|0-0-0-0-0-0-0-0
99632|data|DCD 1|1-0-0-0
99636|data|DCD 1|1-0-0-0
99640|data|% 4; Copy of shared data|255-255-255-255
99648|data|% 4; Copy of shared data|255-255-255-255
99652|data|ALIGN 8|255-255-255-255
99656|data|% 4; Copy of shared data|255-255-255-255
99660|data|% 4; Copy of shared data|255-255-255-255
99672|data|% 1|255
99673|data|ALIGN 4|255-255-255
99676|data|% 4|255-255-255-255
99680|data|% 4|255-255-255-255
99684|data|% 4|255-255-255-255
