address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|221-33-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x82C0; SHT file offset|192-130-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 9; Number of entries in PHT|9-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1C; Number of entries in SHT|28-0
65586|data|DCW 0x1B; SHT entry index for string table|27-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x7214; File offset|20-114-0-0
65596|data|DCD unk_17214; Virtual address|20-114-1-0
65600|data|DCD 0x17214; Physical address|20-114-1-0
65604|data|DCD 0x268; Size in file image|104-2-0-0
65608|data|DCD 0x268; Size in memory image|104-2-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x120; Size in file image|32-1-0-0
65640|data|DCD 0x120; Size in memory image|32-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x154; File offset|84-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|84-1-1-0
65664|data|DCD 0x10154; Physical address|84-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x7480; Size in file image|128-116-0-0
65704|data|DCD 0x7480; Size in memory image|128-116-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x7ECC; File offset|204-126-0-0
65724|data|DCD off_27ECC; Virtual address|204-126-2-0
65728|data|DCD 0x27ECC; Physical address|204-126-2-0
65732|data|DCD 0x2C0; Size in file image|192-2-0-0
65736|data|DCD 0x400; Size in memory image|0-4-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x7ED8; File offset|216-126-0-0
65756|data|DCD stru_27ED8; Virtual address|216-126-2-0
65760|data|DCD 0x27ED8; Physical address|216-126-2-0
65764|data|DCD 0x128; Size in file image|40-1-0-0
65768|data|DCD 0x128; Size in memory image|40-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x170; File offset|112-1-0-0
65788|data|DCD dword_10170; Virtual address|112-1-1-0
65792|data|DCD 0x10170; Physical address|112-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
65848|data|DCD 0x7ECC; File offset|204-126-0-0
65852|data|DCD off_27ECC; Virtual address|204-126-2-0
65856|data|DCD 0x27ECC; Physical address|204-126-2-0
65860|data|DCD 0x134; Size in file image|52-1-0-0
65864|data|DCD 0x134; Size in memory image|52-1-0-0
65868|data|DCD 4; Flags|4-0-0-0
65872|data|DCD 1; Alignment|1-0-0-0
65876|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65901|data|DCB 0, 0, 0|0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x10; Desc Size|16-0-0-0
65912|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65936|data|DCD 4; Name Size|4-0-0-0
65940|data|DCD 0x14; Desc Size|20-0-0-0
65944|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65948|data|DCB "GNU",0; Name|71-78-85-0
65952|data|DCB 0x4B, 0x77, 0x53, 0xBE, 0x1F, 0x3A, 0xFD, 0xEA, 0x3E; Desc|75-119-83-190-31-58-253-234-62-83-76-252-149-165-178-19-96-223-24-218
65972|data|DCD 0x61|97-0-0-0
65976|data|DCD 8|8-0-0-0
65980|data|DCD 0x20|32-0-0-0
65984|data|DCD 0xA|10-0-0-0
65988|data|DCD 0x40001000, 0xC116410, 0, 0x2610008, 0xD4900282, 0x11C8C0A0|0-16-0-64-16-100-17-12-0-0-0-0-8-0-97-2-130-2-144-212-160-192-200-17-0-192-0-0-17-90-0-136-0-138-18-194-0-8-0-32-72-0-66-72-64-66-204-43-16-34-69-34-40-0-0-9-0-98-34-55-0-40-16-1-0-1-64-6-83-68-8-19-32-0-2-72-4-134-128-32-136-2-0-12-0-2-205-131-48-20-72-18-4-32-0-128-163-9-81-8-1-0-0-0-132-208-194-9-64-8-128-8-9-64-0-96-0-0-32-137-4-177-16-105-0-4-16-0
66116|data|DCD 8, 0, 0, 0xA, 0, 0xC, 0, 0, 0, 0xD, 0x10, 0x11, 0|8-0-0-0-0-0-0-0-0-0-0-0-10-0-0-0-0-0-0-0-12-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-13-0-0-0-16-0-0-0-17-0-0-0-0-0-0-0-22-0-0-0-0-0-0-0-23-0-0-0-25-0-0-0-0-0-0-0-26-0-0-0-28-0-0-0-0-0-0-0-0-0-0-0-29-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-30-0-0-0-32-0-0-0-0-0-0-0-34-0-0-0-37-0-0-0-42-0-0-0-0-0-0-0-43-0-0-0-45-0-0-0-46-0-0-0-0-0-0-0-47-0-0-0-51-0-0-0-52-0-0-0-53-0-0-0-54-0-0-0-55-0-0-0-58-0-0-0-0-0-0-0-59-0-0-0-60-0-0-0-61-0-0-0-63-0-0-0-64-0-0-0-0-0-0-0-69-0-0-0-70-0-0-0-0-0-0-0-74-0-0-0-76-0-0-0-78-0-0-0-80-0-0-0-0-0-0-0-81-0-0-0-82-0-0-0-83-0-0-0-0-0-0-0-0-0-0-0-84-0-0-0-0-0-0-0-85-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-86-0-0-0-87-0-0-0-88-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-89-0-0-0-91-0-0-0-0-0-0-0-92-0-0-0-93-0-0-0-95-0-0-0-97-0-0-0-101-0-0-0-102-0-0-0-0-0-0-0-103-0-0-0-0-0-0-0-105-0-0-0-107-0-0-0-108-0-0-0-111-0-0-0-113-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66504|data|DCD 0x408B0320, 0x1C93965F, 0xD8496A9A, 0x1C93DB57, 0x169557BF|32-3-139-64-95-150-147-28-154-106-73-216-87-219-147-28-191-87-149-22-118-239-179-239-218-227-43-126-157-251-22-77-141-89-64-241-110-118-211-14-118-84-60-148-202-150-147-28-210-218-149-204-205-63-12-175-205-247-187-238-46-78-61-246-117-64-111-171-1-175-52-232-118-205-79-73-201-239-58-205-121-12-236-13-9-61-37-109-118-38-51-225-129-143-207-61-254-236-132-20-1-35-249-164-254-138-19-241-196-50-32-175-157-187-147-28-124-237-17-15-148-120-158-124-80-238-17-227-66-69-213-236-121-73-107-182-187-149-147-28-136-158-104-142-179-220-51-213-147-145-145-196-79-51-118-219-70-11-170-125-152-37-94-190-88-239-151-121-23-234-118-254-57-242-139-28-79-71-165-247-235-56-131-212-175-96-135-255-234-211-239-14-200-57-64-31-185-141-241-14-23-83-10-206-189-188-58-205-115-89-242-172-102-201-36-163-165-216-90-182-195-123-250-33-56-146-227-112-232-128-34-203-216-113-88-28-212-83-160-131-237-144-24-6-167-60-167-249-128-36-216-62-58-108-183-114-16-249-60-148-27-159-214-189-106-138-47-223-187-227-146-124-90-237-145-198-103-101-184-73-42-52-152-163-185-222-54-211-9-102-4-117-185-94-245-238-207-56-57-15-221-102-17-245-155-92-208-149-131-234-100-206-49-184-130-13-177-74-69-75-191-218-87-27-110-165-83-98-33-98-100-7-11-125-8-121-169-78-237-177-150-252-99-103-205-85-233-14-94-25-172-124-5-67-237-8-134-240-150-124-204-245-40-196-66-89-135-255-43-144-15-200-47-42-135-35-53-236-184-119-244-97-14-236-145-117-130-13-102-175-240-90-237-254-100-172-61-173-57-13-236-173-249-66-30-48-191-211-209-101-190-220-38-134-167-206-25-209-120-133-219-69-125-195
66928|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66944|data|Elf32_Sym <aAeabiUnwindCpp - byte_10C90, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|127-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66960|data|Elf32_Sym <aGmonStart - byte_10C90, 0, 0, 0x20, 0, 0>; "__gmon_start__"|42-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66976|data|Elf32_Sym <aJvRegisterclas - byte_10C90, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|57-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66992|data|Elf32_Sym <aItmDeregistert - byte_10C90, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67008|data|Elf32_Sym <aItmRegistertmc - byte_10C90, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|77-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67024|data|Elf32_Sym <aZtist9exceptio - byte_10C90, 0, 0, 0x11, 0, 0>; "_ZTISt9exception"|85-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
67040|data|Elf32_Sym <aAeabiUnwindCpp_0 - byte_10C90, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr1"|150-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67056|data|Elf32_Sym <aZnst13runtimeE - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSt13runtime_errorC1ERKSs"|75-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67072|data|Elf32_Sym <aStrcmp - byte_10C90, 0, 0, 0x12, 0, 0>; "strcmp"|166-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67088|data|Elf32_Sym <aFuseGetContext - byte_10C90, 0, 0, 0x12, 0, 0>; "fuse_get_context"|136-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67104|data|Elf32_Sym <aStrstr - byte_10C90, 0, 0, 0x12, 0, 0>; "strstr"|56-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67120|data|Elf32_Sym <aZipFileAdd - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_add"|216-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67136|data|Elf32_Sym <aFuseOptFreeArg - byte_10C90, 0, 0, 0x12, 0, 0>; "fuse_opt_free_args"|117-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67152|data|Elf32_Sym <aFuseTeardown - byte_10C90, 0, 0, 0x12, 0, 0>; "fuse_teardown"|103-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67168|data|Elf32_Sym <aZst29RbTreeIns - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt29_Rb_tree_insert_and_rebalancebPSt"...|103-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67184|data|Elf32_Sym <aZnss4Rep20SEmp - byte_10C90, \; "_ZNSs4_Rep20_S_empty_rep_storageE" ...|231-4-0-0-216-129-2-0-16-0-0-0-17-0-25-0
67200|data|Elf32_Sym <aZnst8Detail15L_0 - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSt8__detail15_List_node_base9_M_unho"...|9-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67216|data|Elf32_Sym <aBssStart_0 - byte_10C90, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|248-7-0-0-140-129-2-0-0-0-0-0-16-0-25-0
67232|data|Elf32_Sym <aStrcpy - byte_10C90, 0, 0, 0x12, 0, 0>; "strcpy"|216-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67248|data|Elf32_Sym <aZipFclose - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_fclose"|127-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67264|data|Elf32_Sym <aStrncmp - byte_10C90, 0, 0, 0x12, 0, 0>; "strncmp"|223-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67280|data|Elf32_Sym <aZipClose - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_close"|115-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67296|data|Elf32_Sym <aLibcStartMain - byte_10C90, 0, 0, 0x12, 0, 0>; "__libc_start_main"|173-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67312|data|Elf32_Sym <aZst18RbTreeInc_0 - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_n"...|37-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67328|data|Elf32_Sym <aBssEnd+1 - byte_10C90, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|7-8-0-0-204-130-2-0-0-0-0-0-16-0-25-0
67344|data|Elf32_Sym <aCxaEndCatch - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_end_catch"|207-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67360|data|Elf32_Sym <aZipFileExtraFi_2 - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_extra_field_set"|16-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67376|data|Elf32_Sym <aZtvst9badAlloc - byte_10C90, _ZTVSt9bad_alloc, 0x14, 0x11,\; "_ZTVSt9bad_alloc" ...|16-3-0-0-192-129-2-0-20-0-0-0-17-0-25-0
67392|data|Elf32_Sym <aZipSourceFree - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_source_free"|191-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67408|data|Elf32_Sym <aZipGetName - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_get_name"|221-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67424|data|Elf32_Sym <aZst18RbTreeInc - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_"...|6-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67440|data|Elf32_Sym <aPerror - byte_10C90, 0, 0, 0x12, 0, 0>; "perror"|231-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67456|data|Elf32_Sym <aErrnoLocation - byte_10C90, 0, 0, 0x12, 0, 0>; "__errno_location"|189-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67472|data|Elf32_Sym <aZipGetNumEntri - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_get_num_entries"|31-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67488|data|Elf32_Sym <aFuseOptParse - byte_10C90, 0, 0, 0x12, 0, 0>; "fuse_opt_parse"|164-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67504|data|Elf32_Sym <aStrlen - byte_10C90, 0, 0, 0x12, 0, 0>; "strlen"|34-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67520|data|Elf32_Sym <aAbort - byte_10C90, 0, 0, 0x12, 0, 0>; "abort"|14-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67536|data|Elf32_Sym <aTime - byte_10C90, 0, 0, 0x12, 0, 0>; "time"|248-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67552|data|Elf32_Sym <aFprintfChk - byte_10C90, 0, 0, 0x12, 0, 0>; "__fprintf_chk"|82-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67568|data|Elf32_Sym <aEdata - byte_10C90, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|229-7-0-0-140-129-2-0-0-0-0-0-16-0-24-0
67584|data|Elf32_Sym <aGxxPersonality - byte_10C90, 0, 0, 0x12, 0, 0>; "__gxx_personality_v0"|16-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67600|data|Elf32_Sym <aStrchr - byte_10C90, 0, 0, 0x12, 0, 0>; "strchr"|151-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67616|data|Elf32_Sym <aCxaRethrow - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_rethrow"|102-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67632|data|Elf32_Sym <aZtist13runtime - byte_10C90, _ZTISt13runtime_error, 0xC, \; "_ZTISt13runtime_error" ...|141-3-0-0-168-129-2-0-12-0-0-0-17-0-25-0
67648|data|Elf32_Sym <aCxaThrow - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_throw"|95-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67664|data|Elf32_Sym <aZipFileExtraFi_0 - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_extra_field_delete"|75-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67680|data|Elf32_Sym <aZst18RbTreeDec - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_n"...|224-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67696|data|Elf32_Sym <aZipFileStrerro - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_strerror"|57-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67712|data|Elf32_Sym <aEnd - byte_10C90, _end, 0, 0x10, 0, 0x19>; "__end__"|18-8-0-0-204-130-2-0-0-0-0-0-16-0-25-0
67728|data|Elf32_Sym <aFwrite - byte_10C90, 0, 0, 0x12, 0, 0>; "fwrite"|144-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67744|data|Elf32_Sym <aStderr - byte_10C90, stderr, 4, 0x11, 0, 0x19>; "stderr"|117-7-0-0-232-129-2-0-4-0-0-0-17-0-25-0
67760|data|Elf32_Sym <aCxaFreeExcepti - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_free_exception"|190-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67776|data|Elf32_Sym <aZnssc1epkcrksa - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSsC1EPKcRKSaIcE"|187-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67792|data|Elf32_Sym <aGetenv - byte_10C90, 0, 0, 0x12, 0, 0>; "getenv"|110-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67808|data|Elf32_Sym <aFini - byte_10C90, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|51-1-0-0-156-100-1-0-0-0-0-0-18-0-14-0
67824|data|Elf32_Sym <aStackChkFail - byte_10C90, 0, 0, 0x12, 0, 0>; "__stack_chk_fail"|253-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67840|data|Elf32_Sym <aZipStatInit+8 - byte_10C90, .init_proc, 0, 0x12, 0, 0xB>; "_init"|215-1-0-0-40-26-1-0-0-0-0-0-18-0-11-0
67856|data|Elf32_Sym <aZnss12MLeakHar - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSs12_M_leak_hardEv"|33-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67872|data|Elf32_Sym <aZipFileExtraFi_1 - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_extra_field_get"|234-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67888|data|Elf32_Sym <aZipFileReplace - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_replace"|41-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67904|data|Elf32_Sym <aZipFopenIndex - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_fopen_index"|95-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67920|data|Elf32_Sym <aZst17ThrowBadA - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt17__throw_bad_allocv"|206-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67936|data|Elf32_Sym <aZnssc1erkssjj - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSsC1ERKSsjj"|124-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67952|data|Elf32_Sym <aOpenlog - byte_10C90, 0, 0, 0x12, 0, 0>; "openlog"|41-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67968|data|Elf32_Sym <aZnss4Rep10MDes - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSs4_Rep10_M_destroyERKSaIcE"|241-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67984|data|Elf32_Sym <aBssStart - byte_10C90, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|236-7-0-0-140-129-2-0-0-0-0-0-16-0-25-0
68000|data|Elf32_Sym <aZnst13runtimeE_0 - byte_10C90, _ZNSt13runtime_errorD1Ev, \; "_ZNSt13runtime_errorD1Ev" ...|53-5-0-0-116-29-1-0-0-0-0-0-18-0-0-0
68016|data|Elf32_Sym <aZtist9badAlloc - byte_10C90, _ZTISt9bad_alloc, 0xC, 0x11, \; "_ZTISt9bad_alloc" ...|107-5-0-0-236-129-2-0-12-0-0-0-17-0-25-0
68032|data|Elf32_Sym <aZst28RbTreeReb - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt28_Rb_tree_rebalance_for_erasePSt18"...|146-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68048|data|Elf32_Sym <aZst20ThrowLeng - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZSt20__throw_length_errorPKc"|55-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68064|data|Elf32_Sym <aZipStrerror - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_strerror"|3-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68080|data|Elf32_Sym <aCxaAllocateExc - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_allocate_exception"|116-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68096|data|Elf32_Sym <aMemmove - byte_10C90, 0, 0, 0x12, 0, 0>; "memmove"|158-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68112|data|Elf32_Sym <aZipFileSetExte - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_set_external_attributes"|125-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68128|data|Elf32_Sym <aEnd_0 - byte_10C90, _end, 0, 0x10, 0, 0x19>; "_end"|26-8-0-0-204-130-2-0-0-0-0-0-16-0-25-0
68144|data|Elf32_Sym <aZipErrorToStr - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_error_to_str"|78-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68160|data|Elf32_Sym <aPthreadKeyCrea - byte_10C90, 0, 0, 0x22, 0, 0>; "__pthread_key_create"|163-2-0-0-0-0-0-0-0-0-0-0-34-0-0-0
68176|data|Elf32_Sym <aZipStatIndex - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_stat_index"|201-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68192|data|Elf32_Sym <aZipFileExtraFi - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_extra_fields_count"|249-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68208|data|Elf32_Sym <aFuseSetup - byte_10C90, 0, 0, 0x12, 0, 0>; "fuse_setup"|153-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68224|data|Elf32_Sym <aZipFread - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_fread"|21-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68240|data|Elf32_Sym <aChdir - byte_10C90, 0, 0, 0x12, 0, 0>; "chdir"|63-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68256|data|Elf32_Sym <aCxaEndCleanup - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_end_cleanup"|179-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68272|data|Elf32_Sym <aStatvfs64 - byte_10C90, 0, 0, 0x12, 0, 0>; "statvfs64"|238-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68288|data|Elf32_Sym <aMemsetChk - byte_10C90, 0, 0, 0x12, 0, 0>; "__memset_chk"|124-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68304|data|Elf32_Sym <aMemset - byte_10C90, 0, 0, 0x12, 0, 0>; "memset"|49-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68320|data|Elf32_Sym <aAssertFail - byte_10C90, 0, 0, 0x12, 0, 0>; "__assert_fail"|20-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68336|data|Elf32_Sym <aBssEnd - byte_10C90, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|6-8-0-0-204-130-2-0-0-0-0-0-16-0-25-0
68352|data|Elf32_Sym <aZipFileRename - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_rename"|111-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68368|data|Elf32_Sym <aStackChkGuard - byte_10C90, __stack_chk_guard, 4, 0x11, 0,\; "__stack_chk_guard"|211-7-0-0-184-129-2-0-4-0-0-0-17-0-25-0
68384|data|Elf32_Sym <aZnst9exception - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSt9exceptionD1Ev"|242-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68400|data|Elf32_Sym <aZipOpen - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_open"|69-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68416|data|Elf32_Sym <aZtvst9exceptio - byte_10C90, _ZTVSt9exception, 0x14, 0x11,\; "_ZTVSt9exception" ...|78-5-0-0-144-129-2-0-20-0-0-0-17-0-25-0
68432|data|Elf32_Sym <aZnwj - byte_10C90, 0, 0, 0x12, 0, 0>; "_Znwj"|184-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68448|data|Elf32_Sym <aZipFileGetExte - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_file_get_external_attributes"|158-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68464|data|Elf32_Sym <aCxaBeginCatch - byte_10C90, 0, 0, 0x12, 0, 0>; "__cxa_begin_catch"|169-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68480|data|Elf32_Sym <aZipSourceFree+0xB - byte_10C90, 0, 0, 0x12, 0, 0>; "free"|202-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68496|data|Elf32_Sym <aZipSourceFunct - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_source_function"|229-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68512|data|Elf32_Sym <aGetcwd - byte_10C90, 0, 0, 0x12, 0, 0>; "getcwd"|137-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68528|data|Elf32_Sym <aZipDelete - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_delete"|58-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68544|data|Elf32_Sym <aZnssc1erkss - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSsC1ERKSs"|211-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68560|data|Elf32_Sym <aZnss7reserveej - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSs7reserveEj"|163-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68576|data|Elf32_Sym <aZdlpv - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZdlPv"|139-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68592|data|Elf32_Sym <aMemcpy - byte_10C90, 0, 0, 0x12, 0, 0>; "memcpy"|96-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68608|data|Elf32_Sym <aZnst8Detail15L - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSt8__detail15_List_node_base7_M_hook"...|197-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68624|data|Elf32_Sym <aZnss6appendepk - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSs6appendEPKcj"|223-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68640|data|Elf32_Sym <aMalloc - byte_10C90, 0, 0, 0x12, 0, 0>; "malloc"|103-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68656|data|Elf32_Sym <aZnst9badAllocd - byte_10C90, _ZNSt9bad_allocD1Ev, 0, 0x12,\; "_ZNSt9bad_allocD1Ev" ...|55-4-0-0-184-27-1-0-0-0-0-0-18-0-0-0
68672|data|Elf32_Sym <aZipDirAdd - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_dir_add"|103-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68688|data|Elf32_Sym <aFuseLoop - byte_10C90, 0, 0, 0x12, 0, 0>; "fuse_loop"|179-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68704|data|Elf32_Sym <aZipStatInit - byte_10C90, 0, 0, 0x12, 0, 0>; "zip_stat_init"|207-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68720|data|Elf32_Sym <aSyslogChk - byte_10C90, 0, 0, 0x12, 0, 0>; "__syslog_chk"|69-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68736|data|Elf32_Sym <aZnss6assignepk - byte_10C90, 0, 0, 0x12, 0, 0>; "_ZNSs6assignEPKcj"|85-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68752|data|DCB 0|0
68753|data|DCB "libfuse.so.2",0|108-105-98-102-117-115-101-46-115-111-46-50-0
68766|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
68794|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
68809|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
68829|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
68855|data|DCB "fuse_teardown",0|102-117-115-101-95-116-101-97-114-100-111-119-110-0
68869|data|DCB "fuse_opt_free_args",0|102-117-115-101-95-111-112-116-95-102-114-101-101-95-97-114-103-115-0
68888|data|DCB "fuse_get_context",0|102-117-115-101-95-103-101-116-95-99-111-110-116-101-120-116-0
68905|data|DCB "fuse_setup",0|102-117-115-101-95-115-101-116-117-112-0
68916|data|DCB "fuse_opt_parse",0|102-117-115-101-95-111-112-116-95-112-97-114-115-101-0
68931|data|DCB "fuse_loop",0|102-117-115-101-95-108-111-111-112-0
68941|data|DCB "libzip.so.2",0|108-105-98-122-105-112-46-115-111-46-50-0
68953|data|DCB "zip_stat_index",0|122-105-112-95-115-116-97-116-95-105-110-100-101-120-0
68968|data|DCB "zip_file_add",0|122-105-112-95-102-105-108-101-95-97-100-100-0
68981|data|DCB "zip_source_function",0|122-105-112-95-115-111-117-114-99-101-95-102-117-110-99-116-105-111-110-0
69001|data|DCB "zip_file_extra_fields_count",0|122-105-112-95-102-105-108-101-95-101-120-116-114-97-95-102-105-101-108-100-115-95-99-111-117-110-116-0
69029|data|DCB "zip_fread",0|122-105-112-95-102-114-101-97-100-0
69039|data|DCB "zip_get_num_entries",0|122-105-112-95-103-101-116-95-110-117-109-95-101-110-116-114-105-101-115-0
69059|data|DCB "_fini",0|95-102-105-110-105-0
69065|data|DCB "zip_file_strerror",0|122-105-112-95-102-105-108-101-95-115-116-114-101-114-114-111-114-0
69083|data|DCB "zip_file_extra_field_delete",0|122-105-112-95-102-105-108-101-95-101-120-116-114-97-95-102-105-101-108-100-95-100-101-108-101-116-101-0
69111|data|DCB "zip_dir_add",0|122-105-112-95-100-105-114-95-97-100-100-0
69123|data|DCB "zip_close",0|122-105-112-95-99-108-111-115-101-0
69133|data|DCB "zip_file_set_external_attributes",0|122-105-112-95-102-105-108-101-95-115-101-116-95-101-120-116-101-114-110-97-108-95-97-116-116-114-105-98-117-116-101-115-0
69166|data|DCB "zip_file_get_external_attributes",0|122-105-112-95-102-105-108-101-95-103-101-116-95-101-120-116-101-114-110-97-108-95-97-116-116-114-105-98-117-116-101-115-0
69199|data|DCB "zip_source_free",0|122-105-112-95-115-111-117-114-99-101-95-102-114-101-101-0
69215|data|DCB "zip_stat_init",0|122-105-112-95-115-116-97-116-95-105-110-105-116-0
69229|data|DCB "zip_get_name",0|122-105-112-95-103-101-116-95-110-97-109-101-0
69242|data|DCB "zip_file_extra_field_get",0|122-105-112-95-102-105-108-101-95-101-120-116-114-97-95-102-105-101-108-100-95-103-101-116-0
69267|data|DCB "zip_strerror",0|122-105-112-95-115-116-114-101-114-114-111-114-0
69280|data|DCB "zip_file_extra_field_set",0|122-105-112-95-102-105-108-101-95-101-120-116-114-97-95-102-105-101-108-100-95-115-101-116-0
69305|data|DCB "zip_file_replace",0|122-105-112-95-102-105-108-101-95-114-101-112-108-97-99-101-0
69322|data|DCB "zip_delete",0|122-105-112-95-100-101-108-101-116-101-0
69333|data|DCB "zip_open",0|122-105-112-95-111-112-101-110-0
69342|data|DCB "zip_error_to_str",0|122-105-112-95-101-114-114-111-114-95-116-111-95-115-116-114-0
69359|data|DCB "zip_fopen_index",0|122-105-112-95-102-111-112-101-110-95-105-110-100-101-120-0
69375|data|DCB "zip_file_rename",0|122-105-112-95-102-105-108-101-95-114-101-110-97-109-101-0
69391|data|DCB "zip_fclose",0|122-105-112-95-102-99-108-111-115-101-0
69402|data|DCB "libz.so.1",0|108-105-98-122-46-115-111-46-49-0
69412|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
69427|data|DCB "__pthread_key_create",0|95-95-112-116-104-114-101-97-100-95-107-101-121-95-99-114-101-97-116-101-0
69448|data|DCB "_Znwj",0|95-90-110-119-106-0
69454|data|DCB "__cxa_free_exception",0|95-95-99-120-97-95-102-114-101-101-95-101-120-99-101-112-116-105-111-110-0
69475|data|DCB "_ZNSsC1ERKSs",0|95-90-78-83-115-67-49-69-82-75-83-115-0
69488|data|DCB "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-100-101-99-114-101-109-101-110-116-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
69536|data|DCB "_ZTVSt9bad_alloc",0|95-90-84-86-83-116-57-98-97-100-95-97-108-108-111-99-0
69553|data|DCB "_ZNSs12_M_leak_hardEv",0|95-90-78-83-115-49-50-95-77-95-108-101-97-107-95-104-97-114-100-69-118-0
69575|data|DCB "_ZSt20__throw_length_errorPKc",0|95-90-83-116-50-48-95-95-116-104-114-111-119-95-108-101-110-103-116-104-95-101-114-114-111-114-80-75-99-0
69605|data|DCB "_ZTISt9exception",0|95-90-84-73-83-116-57-101-120-99-101-112-116-105-111-110-0
69622|data|DCB "__cxa_rethrow",0|95-95-99-120-97-95-114-101-116-104-114-111-119-0
69636|data|DCB "__cxa_allocate_exception",0|95-95-99-120-97-95-97-108-108-111-99-97-116-101-95-101-120-99-101-112-116-105-111-110-0
69661|data|DCB "_ZTISt13runtime_error",0|95-90-84-73-83-116-49-51-114-117-110-116-105-109-101-95-101-114-114-111-114-0
69683|data|DCB "_ZNSs7reserveEj",0|95-90-78-83-115-55-114-101-115-101-114-118-101-69-106-0
69699|data|DCB "__cxa_end_cleanup",0|95-95-99-120-97-95-101-110-100-95-99-108-101-97-110-117-112-0
69717|data|DCB "_ZNSt8__detail15_List_node_base7_M_hookEPS0_",0|95-90-78-83-116-56-95-95-100-101-116-97-105-108-49-53-95-76-105-115-116-95-110-111-100-101-95-98-97-115-101-55-95-77-95-104-111-111-107-69-80-83-48-95-0
69762|data|DCB "_ZNSt9exceptionD1Ev",0|95-90-78-83-116-57-101-120-99-101-112-116-105-111-110-68-49-69-118-0
69782|data|DCB "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-105-110-99-114-101-109-101-110-116-80-75-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
69831|data|DCB "_ZNSt9bad_allocD1Ev",0|95-90-78-83-116-57-98-97-100-95-97-108-108-111-99-68-49-69-118-0
69851|data|DCB "_ZNSt13runtime_errorC1ERKSs",0|95-90-78-83-116-49-51-114-117-110-116-105-109-101-95-101-114-114-111-114-67-49-69-82-75-83-115-0
69879|data|DCB "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS"|95-90-83-116-50-57-95-82-98-95-116-114-101-101-95-105-110-115-101-114-116-95-97-110-100-95-114-101-98-97-108-97-110-99-101-98-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-83-48-95-82-83-95-0
69945|data|DCB "__cxa_begin_catch",0|95-95-99-120-97-95-98-101-103-105-110-95-99-97-116-99-104-0
69963|data|DCB "_ZNSsC1EPKcRKSaIcE",0|95-90-78-83-115-67-49-69-80-75-99-82-75-83-97-73-99-69-0
69982|data|DCB "_ZSt17__throw_bad_allocv",0|95-90-83-116-49-55-95-95-116-104-114-111-119-95-98-97-100-95-97-108-108-111-99-118-0
70007|data|DCB "_ZNSs4_Rep20_S_empty_rep_storageE",0|95-90-78-83-115-52-95-82-101-112-50-48-95-83-95-101-109-112-116-121-95-114-101-112-95-115-116-111-114-97-103-101-69-0
70041|data|DCB "_ZNSt8__detail15_List_node_base9_M_unhookEv",0|95-90-78-83-116-56-95-95-100-101-116-97-105-108-49-53-95-76-105-115-116-95-110-111-100-101-95-98-97-115-101-57-95-77-95-117-110-104-111-111-107-69-118-0
70085|data|DCB "_ZNSt13runtime_errorD1Ev",0|95-90-78-83-116-49-51-114-117-110-116-105-109-101-95-101-114-114-111-114-68-49-69-118-0
70110|data|DCB "_ZTVSt9exception",0|95-90-84-86-83-116-57-101-120-99-101-112-116-105-111-110-0
70127|data|DCB "__cxa_throw",0|95-95-99-120-97-95-116-104-114-111-119-0
70139|data|DCB "_ZTISt9bad_alloc",0|95-90-84-73-83-116-57-98-97-100-95-97-108-108-111-99-0
70156|data|DCB "_ZNSsC1ERKSsjj",0|95-90-78-83-115-67-49-69-82-75-83-115-106-106-0
70171|data|DCB "_ZdlPv",0|95-90-100-108-80-118-0
70178|data|DCB "_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_",0|95-90-83-116-50-56-95-82-98-95-116-114-101-101-95-114-101-98-97-108-97-110-99-101-95-102-111-114-95-101-114-97-115-101-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-82-83-95-0
70239|data|DCB "__cxa_end_catch",0|95-95-99-120-97-95-101-110-100-95-99-97-116-99-104-0
70255|data|DCB "_ZNSs6appendEPKcj",0|95-90-78-83-115-54-97-112-112-101-110-100-69-80-75-99-106-0
70273|data|DCB "_ZNSs4_Rep10_M_destroyERKSaIcE",0|95-90-78-83-115-52-95-82-101-112-49-48-95-77-95-100-101-115-116-114-111-121-69-82-75-83-97-73-99-69-0
70304|data|DCB "__gxx_personality_v0",0|95-95-103-120-120-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
70325|data|DCB "_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-105-110-99-114-101-109-101-110-116-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
70373|data|DCB "_ZNSs6assignEPKcj",0|95-90-78-83-115-54-97-115-115-105-103-110-69-80-75-99-106-0
70391|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
70401|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
70415|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
70438|data|DCB "__aeabi_unwind_cpp_pr1",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-49-0
70461|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
70477|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
70494|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
70504|data|DCB "strcpy",0|115-116-114-99-112-121-0
70511|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
70519|data|DCB "perror",0|112-101-114-114-111-114-0
70526|data|DCB "statvfs64",0|115-116-97-116-118-102-115-54-52-0
70536|data|DCB "time",0|116-105-109-101-0
70541|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
70558|data|DCB "abort",0|97-98-111-114-116-0
70564|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
70578|data|DCB "strlen",0|115-116-114-108-101-110-0
70585|data|DCB "openlog",0|111-112-101-110-108-111-103-0
70593|data|DCB "memset",0|109-101-109-115-101-116-0
70600|data|DCB "strstr",0|115-116-114-115-116-114-0
70607|data|DCB "chdir",0|99-104-100-105-114-0
70613|data|DCB "__syslog_chk",0|95-95-115-121-115-108-111-103-95-99-104-107-0
70626|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
70640|data|DCB "memcpy",0|109-101-109-99-112-121-0
70647|data|DCB "malloc",0|109-97-108-108-111-99-0
70654|data|DCB "getenv",0|103-101-116-101-110-118-0
70661|data|DCB "stderr",0|115-116-100-101-114-114-0
70668|data|DCB "__memset_chk",0|95-95-109-101-109-115-101-116-95-99-104-107-0
70681|data|DCB "getcwd",0|103-101-116-99-119-100-0
70688|data|DCB "fwrite",0|102-119-114-105-116-101-0
70695|data|DCB "strchr",0|115-116-114-99-104-114-0
70702|data|DCB "memmove",0|109-101-109-109-111-118-101-0
70710|data|DCB "strcmp",0|115-116-114-99-109-112-0
70717|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
70735|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
70755|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
70773|data|DCB "_edata",0|95-101-100-97-116-97-0
70780|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
70792|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
70806|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
70818|data|DCB "__end__",0|95-95-101-110-100-95-95-0
70826|data|DCB "_end",0|95-101-110-100-0
70831|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
70841|data|DCB "FUSE_2.2",0|70-85-83-69-95-50-46-50-0
70850|data|DCB "FUSE_2.6",0|70-85-83-69-95-50-46-54-0
70859|data|DCB "FUSE_2.8",0|70-85-83-69-95-50-46-56-0
70868|data|DCB "FUSE_2.5",0|70-85-83-69-95-50-46-53-0
70877|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
70885|data|DCB "CXXABI_1.3",0|67-88-88-65-66-73-95-49-46-51-0
70896|data|DCB "GLIBCXX_3.4.15",0|71-76-73-66-67-88-88-95-51-46-52-46-49-53-0
70911|data|DCB "GLIBCXX_3.4",0|71-76-73-66-67-88-88-95-51-46-52-0
70923|data|DCB 0|0
70924|data|DCW 0|0-0
70926|data|DCW 5; __aeabi_unwind_cpp_pr0@@GCC_3.5|5-0
70928|data|DCW 0; local  symbol: __gmon_start__|0-0
70930|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
70932|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
70934|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
70936|data|DCW 2; _ZTISt9exception@@GLIBCXX_3.4|2-0
70938|data|DCW 5; __aeabi_unwind_cpp_pr1@@GCC_3.5|5-0
70940|data|DCW 2; _ZNSt13runtime_errorC1ERKSs@@GLIBCXX_3.4|2-0
70942|data|DCW 3; strcmp@@GLIBC_2.4|3-0
70944|data|DCW 8; fuse_get_context@@FUSE_2.8|8-0
70946|data|DCW 3; strstr@@GLIBC_2.4|3-0
70948|data|DCW 0; local  symbol: zip_file_add|0-0
70950|data|DCW 7; fuse_opt_free_args@@FUSE_2.5|7-0
70952|data|DCW 9; fuse_teardown@@FUSE_2.6|9-0
70954|data|DCW 2; _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4|2-0
70956|data|DCW 2; _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4|2-0
70958|data|DCW 4; _ZNSt8__detail15_List_node_base9_M_unhookEv@@GLIBCXX_3.4.15|4-0
70960|data|DCW 1; global symbol: __bss_start__|1-0
70962|data|DCW 3; strcpy@@GLIBC_2.4|3-0
70964|data|DCW 0; local  symbol: zip_fclose|0-0
70966|data|DCW 3; strncmp@@GLIBC_2.4|3-0
70968|data|DCW 0; local  symbol: zip_close|0-0
70970|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
70972|data|DCW 2; _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4|2-0
70974|data|DCW 1; global symbol: _bss_end__|1-0
70976|data|DCW 6; __cxa_end_catch@@CXXABI_1.3|6-0
70978|data|DCW 0; local  symbol: zip_file_extra_field_set|0-0
70980|data|DCW 2; _ZTVSt9bad_alloc@@GLIBCXX_3.4|2-0
70982|data|DCW 0; local  symbol: zip_source_free|0-0
70984|data|DCW 0; local  symbol: zip_get_name|0-0
70986|data|DCW 2; _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4|2-0
70988|data|DCW 3; perror@@GLIBC_2.4|3-0
70990|data|DCW 0xC; __errno_location@@GLIBC_2.4|12-0
70992|data|DCW 0; local  symbol: zip_get_num_entries|0-0
70994|data|DCW 7; fuse_opt_parse@@FUSE_2.5|7-0
70996|data|DCW 3; strlen@@GLIBC_2.4|3-0
70998|data|DCW 3; abort@@GLIBC_2.4|3-0
71000|data|DCW 3; time@@GLIBC_2.4|3-0
71002|data|DCW 3; __fprintf_chk@@GLIBC_2.4|3-0
71004|data|DCW 1; global symbol: _edata|1-0
71006|data|DCW 6; __gxx_personality_v0@@CXXABI_1.3|6-0
71008|data|DCW 3; strchr@@GLIBC_2.4|3-0
71010|data|DCW 6; __cxa_rethrow@@CXXABI_1.3|6-0
71012|data|DCW 2; _ZTISt13runtime_error@@GLIBCXX_3.4|2-0
71014|data|DCW 6; __cxa_throw@@CXXABI_1.3|6-0
71016|data|DCW 0; local  symbol: zip_file_extra_field_delete|0-0
71018|data|DCW 2; _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4|2-0
71020|data|DCW 0; local  symbol: zip_file_strerror|0-0
71022|data|DCW 1; global symbol: __end__|1-0
71024|data|DCW 3; fwrite@@GLIBC_2.4|3-0
71026|data|DCW 3; stderr@@GLIBC_2.4|3-0
71028|data|DCW 6; __cxa_free_exception@@CXXABI_1.3|6-0
71030|data|DCW 2; _ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4|2-0
71032|data|DCW 3; getenv@@GLIBC_2.4|3-0
71034|data|DCW 1; global symbol: _fini|1-0
71036|data|DCW 3; __stack_chk_fail@@GLIBC_2.4|3-0
71038|data|DCW 1; global symbol: _init|1-0
71040|data|DCW 2; _ZNSs12_M_leak_hardEv@@GLIBCXX_3.4|2-0
71042|data|DCW 0; local  symbol: zip_file_extra_field_get|0-0
71044|data|DCW 0; local  symbol: zip_file_replace|0-0
71046|data|DCW 0; local  symbol: zip_fopen_index|0-0
71048|data|DCW 2; _ZSt17__throw_bad_allocv@@GLIBCXX_3.4|2-0
71050|data|DCW 2; _ZNSsC1ERKSsjj@@GLIBCXX_3.4|2-0
71052|data|DCW 3; openlog@@GLIBC_2.4|3-0
71054|data|DCW 2; _ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4|2-0
71056|data|DCW 1; global symbol: __bss_start|1-0
71058|data|DCW 2; _ZNSt13runtime_errorD1Ev@@GLIBCXX_3.4|2-0
71060|data|DCW 2; _ZTISt9bad_alloc@@GLIBCXX_3.4|2-0
71062|data|DCW 2; _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@@GLIBCXX_3.4|2-0
71064|data|DCW 2; _ZSt20__throw_length_errorPKc@@GLIBCXX_3.4|2-0
71066|data|DCW 0; local  symbol: zip_strerror|0-0
71068|data|DCW 6; __cxa_allocate_exception@@CXXABI_1.3|6-0
71070|data|DCW 3; memmove@@GLIBC_2.4|3-0
71072|data|DCW 0; local  symbol: zip_file_set_external_attributes|0-0
71074|data|DCW 1; global symbol: _end|1-0
71076|data|DCW 0; local  symbol: zip_error_to_str|0-0
71078|data|DCW 0xC; __pthread_key_create@@GLIBC_2.4|12-0
71080|data|DCW 0; local  symbol: zip_stat_index|0-0
71082|data|DCW 0; local  symbol: zip_file_extra_fields_count|0-0
71084|data|DCW 9; fuse_setup@@FUSE_2.6|9-0
71086|data|DCW 0; local  symbol: zip_fread|0-0
71088|data|DCW 3; chdir@@GLIBC_2.4|3-0
71090|data|DCW 6; __cxa_end_cleanup@@CXXABI_1.3|6-0
71092|data|DCW 3; statvfs64@@GLIBC_2.4|3-0
71094|data|DCW 3; __memset_chk@@GLIBC_2.4|3-0
71096|data|DCW 3; memset@@GLIBC_2.4|3-0
71098|data|DCW 3; __assert_fail@@GLIBC_2.4|3-0
71100|data|DCW 1; global symbol: __bss_end__|1-0
71102|data|DCW 0; local  symbol: zip_file_rename|0-0
71104|data|DCW 0xA; __stack_chk_guard@@GLIBC_2.4|10-0
71106|data|DCW 2; _ZNSt9exceptionD1Ev@@GLIBCXX_3.4|2-0
71108|data|DCW 0; local  symbol: zip_open|0-0
71110|data|DCW 2; _ZTVSt9exception@@GLIBCXX_3.4|2-0
71112|data|DCW 2; _Znwj@@GLIBCXX_3.4|2-0
71114|data|DCW 0; local  symbol: zip_file_get_external_attributes|0-0
71116|data|DCW 6; __cxa_begin_catch@@CXXABI_1.3|6-0
71118|data|DCW 3; free@@GLIBC_2.4|3-0
71120|data|DCW 0; local  symbol: zip_source_function|0-0
71122|data|DCW 3; getcwd@@GLIBC_2.4|3-0
71124|data|DCW 0; local  symbol: zip_delete|0-0
71126|data|DCW 2; _ZNSsC1ERKSs@@GLIBCXX_3.4|2-0
71128|data|DCW 2; _ZNSs7reserveEj@@GLIBCXX_3.4|2-0
71130|data|DCW 2; _ZdlPv@@GLIBCXX_3.4|2-0
71132|data|DCW 3; memcpy@@GLIBC_2.4|3-0
71134|data|DCW 4; _ZNSt8__detail15_List_node_base7_M_hookEPS0_@@GLIBCXX_3.4.15|4-0
71136|data|DCW 2; _ZNSs6appendEPKcj@@GLIBCXX_3.4|2-0
71138|data|DCW 3; malloc@@GLIBC_2.4|3-0
71140|data|DCW 2; _ZNSt9bad_allocD1Ev@@GLIBCXX_3.4|2-0
71142|data|DCW 0; local  symbol: zip_dir_add|0-0
71144|data|DCW 0xB; fuse_loop@@FUSE_2.2|11-0
71146|data|DCW 0; local  symbol: zip_stat_init|0-0
71148|data|DCW 3; __syslog_chk@@GLIBC_2.4|3-0
71150|data|DCW 2; _ZNSs6assignEPKcj@@GLIBCXX_3.4|2-0
71152|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_10C90, 0x10, 0x20>; "libpthread.so.0"|1-0-1-0-173-6-0-0-16-0-0-0-32-0-0-0
71168|data|Elf32_Vernaux <0xD696914, 0, 0xC, aGlibc24 - byte_10C90, 0>; "GLIBC_2.4"|20-105-105-13-0-0-12-0-31-8-0-0-0-0-0-0
71184|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_10C90, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-191-7-0-0-16-0-0-0-32-0-0-0
71200|data|Elf32_Vernaux <0xD696914, 0, 0xA, aGlibc24 - byte_10C90, 0>; "GLIBC_2.4"|20-105-105-13-0-0-10-0-31-8-0-0-0-0-0-0
71216|data|Elf32_Verneed <1, 4, aLibfuseSo2 - byte_10C90, 0x10, 0x50>; "libfuse.so.2"|1-0-4-0-1-0-0-0-16-0-0-0-80-0-0-0
71232|data|Elf32_Vernaux <0xA7B21A2, 0, 0xB, aFuse22 - byte_10C90, 0x10>; "FUSE_2.2"|162-33-123-10-0-0-11-0-41-8-0-0-16-0-0-0
71248|data|Elf32_Vernaux <0xA7B21A6, 0, 9, aFuse26 - byte_10C90, 0x10>; "FUSE_2.6"|166-33-123-10-0-0-9-0-50-8-0-0-16-0-0-0
71264|data|Elf32_Vernaux <0xA7B21A8, 0, 8, aFuse28 - byte_10C90, 0x10>; "FUSE_2.8"|168-33-123-10-0-0-8-0-59-8-0-0-16-0-0-0
71280|data|Elf32_Vernaux <0xA7B21A5, 0, 7, aFuse25 - byte_10C90, 0>; "FUSE_2.5"|165-33-123-10-0-0-7-0-68-8-0-0-0-0-0-0
71296|data|Elf32_Verneed <1, 1, aLibgccSSo1 - byte_10C90, 0x10, 0x20>; "libgcc_s.so.1"|1-0-1-0-113-6-0-0-16-0-0-0-32-0-0-0
71312|data|Elf32_Vernaux <0xB792655, 0, 5, aGcc35 - byte_10C90, 0>; "GCC_3.5"|85-38-121-11-0-0-5-0-77-8-0-0-0-0-0-0
71328|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_10C90, 0x10, 0x20>; "libc.so.6"|1-0-1-0-206-6-0-0-16-0-0-0-32-0-0-0
71344|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_10C90, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-31-8-0-0-0-0-0-0
71360|data|Elf32_Verneed <1, 3, aLibstdcSo6 - byte_10C90, 0x10, 0>; "libstdc++.so.6"|1-0-3-0-148-2-0-0-16-0-0-0-0-0-0-0
71376|data|Elf32_Vernaux <0x56BAFD3, 0, 6, aCxxabi13 - byte_10C90, 0x10>; "CXXABI_1.3"|211-175-107-5-0-0-6-0-85-8-0-0-16-0-0-0
71392|data|Elf32_Vernaux <0x297F865, 0, 4, aGlibcxx3415 - byte_10C90, 0x10>; "GLIBCXX_3.4.15"|101-248-151-2-0-0-4-0-96-8-0-0-16-0-0-0
71408|data|Elf32_Vernaux <0x8922974, 0, 2, aGlibcxx34 - byte_10C90, 0>; "GLIBCXX_3.4"|116-41-146-8-0-0-2-0-111-8-0-0-0-0-0-0
71424|data|Elf32_Rel <0x28178, 0x215>; R_ARM_GLOB_DAT __gmon_start__|120-129-2-0-21-2-0-0
71432|data|Elf32_Rel <0x2817C, 0x615>; R_ARM_GLOB_DAT _ZTISt9exception|124-129-2-0-21-6-0-0
71440|data|Elf32_Rel <0x28180, 0x4415>; R_ARM_GLOB_DAT _ZTISt9bad_alloc|128-129-2-0-21-68-0-0
71448|data|Elf32_Rel <0x281EC, 0x4414>; R_ARM_COPY _ZTISt9bad_alloc|236-129-2-0-20-68-0-0
71456|data|Elf32_Rel <0x28190, 0x5D14>; R_ARM_COPY _ZTVSt9exception|144-129-2-0-20-93-0-0
71464|data|Elf32_Rel <0x281A8, 0x2C14>; R_ARM_COPY _ZTISt13runtime_error|168-129-2-0-20-44-0-0
71472|data|Elf32_Rel <0x281B8, 0x5A14>; R_ARM_COPY __stack_chk_guard|184-129-2-0-20-90-0-0
71480|data|Elf32_Rel <0x281C0, 0x1C14>; R_ARM_COPY _ZTVSt9bad_alloc|192-129-2-0-20-28-0-0
71488|data|Elf32_Rel <0x281D8, 0x1014>; R_ARM_COPY _ZNSs4_Rep20_S_empty_rep_storageE|216-129-2-0-20-16-0-0
71496|data|Elf32_Rel <0x281E8, 0x3314>; R_ARM_COPY stderr|232-129-2-0-20-51-0-0
71504|data|Elf32_Rel <0x2800C, 0x4616>; R_ARM_JUMP_SLOT _ZSt20__throw_length_errorPKc|12-128-2-0-22-70-0-0
71512|data|Elf32_Rel <0x28010, 0x6F16>; R_ARM_JUMP_SLOT zip_stat_init|16-128-2-0-22-111-0-0
71520|data|Elf32_Rel <0x28014, 0x2516>; R_ARM_JUMP_SLOT abort|20-128-2-0-22-37-0-0
71528|data|Elf32_Rel <0x28018, 0x1116>; R_ARM_JUMP_SLOT _ZNSt8__detail15_List_node_base9_M_unhookEv|24-128-2-0-22-17-0-0
71536|data|Elf32_Rel <0x2801C, 0x1E16>; R_ARM_JUMP_SLOT zip_get_name|28-128-2-0-22-30-0-0
71544|data|Elf32_Rel <0x28020, 0x1716>; R_ARM_JUMP_SLOT __libc_start_main|32-128-2-0-22-23-0-0
71552|data|Elf32_Rel <0x28024, 0x4716>; R_ARM_JUMP_SLOT zip_strerror|36-128-2-0-22-71-0-0
71560|data|Elf32_Rel <0x28028, 0x3B16>; R_ARM_JUMP_SLOT zip_file_extra_field_get|40-128-2-0-22-59-0-0
71568|data|Elf32_Rel <0x2802C, 0x4C16>; R_ARM_JUMP_SLOT zip_error_to_str|44-128-2-0-22-76-0-0
71576|data|Elf32_Rel <0x28030, 0x216>; R_ARM_JUMP_SLOT __gmon_start__|48-128-2-0-22-2-0-0
71584|data|Elf32_Rel <0x28034, 0x6716>; R_ARM_JUMP_SLOT _ZdlPv|52-128-2-0-22-103-0-0
71592|data|Elf32_Rel <0x28038, 0x3616>; R_ARM_JUMP_SLOT getenv|56-128-2-0-22-54-0-0
71600|data|Elf32_Rel <0x2803C, 0x2B16>; R_ARM_JUMP_SLOT __cxa_rethrow|60-128-2-0-22-43-0-0
71608|data|Elf32_Rel <0x28040, 0x2A16>; R_ARM_JUMP_SLOT strchr|64-128-2-0-22-42-0-0
71616|data|Elf32_Rel <0x28044, 0x5916>; R_ARM_JUMP_SLOT zip_file_rename|68-128-2-0-22-89-0-0
71624|data|Elf32_Rel <0x28048, 0x2F16>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base|72-128-2-0-22-47-0-0
71632|data|Elf32_Rel <0x2804C, 0x5616>; R_ARM_JUMP_SLOT memset|76-128-2-0-22-86-0-0
71640|data|Elf32_Rel <0x28050, 0x2216>; R_ARM_JUMP_SLOT zip_get_num_entries|80-128-2-0-22-34-0-0
71648|data|Elf32_Rel <0x28054, 0x5316>; R_ARM_JUMP_SLOT __cxa_end_cleanup|84-128-2-0-22-83-0-0
71656|data|Elf32_Rel <0x28058, 0x6516>; R_ARM_JUMP_SLOT _ZNSsC1ERKSs|88-128-2-0-22-101-0-0
71664|data|Elf32_Rel <0x2805C, 0x816>; R_ARM_JUMP_SLOT _ZNSt13runtime_errorC1ERKSs|92-128-2-0-22-8-0-0
71672|data|Elf32_Rel <0x28060, 0x5416>; R_ARM_JUMP_SLOT statvfs64|96-128-2-0-22-84-0-0
71680|data|Elf32_Rel <0x28064, 0x2016>; R_ARM_JUMP_SLOT perror|100-128-2-0-22-32-0-0
71688|data|Elf32_Rel <0x28068, 0x5716>; R_ARM_JUMP_SLOT __assert_fail|104-128-2-0-22-87-0-0
71696|data|Elf32_Rel <0x2806C, 0x3F16>; R_ARM_JUMP_SLOT _ZNSsC1ERKSsjj|108-128-2-0-22-63-0-0
71704|data|Elf32_Rel <0x28070, 0x1616>; R_ARM_JUMP_SLOT zip_close|112-128-2-0-22-22-0-0
71712|data|Elf32_Rel <0x28074, 0x6116>; R_ARM_JUMP_SLOT free|116-128-2-0-22-97-0-0
71720|data|Elf32_Rel <0x28078, 0x4016>; R_ARM_JUMP_SLOT openlog|120-128-2-0-22-64-0-0
71728|data|Elf32_Rel <0x2807C, 0x4116>; R_ARM_JUMP_SLOT _ZNSs4_Rep10_M_destroyERKSaIcE|124-128-2-0-22-65-0-0
71736|data|Elf32_Rel <0x28080, 0x2316>; R_ARM_JUMP_SLOT fuse_opt_parse|128-128-2-0-22-35-0-0
71744|data|Elf32_Rel <0x28084, 0x6C16>; R_ARM_JUMP_SLOT _ZNSt9bad_allocD1Ev|132-128-2-0-22-108-0-0
71752|data|Elf32_Rel <0x28088, 0xA16>; R_ARM_JUMP_SLOT fuse_get_context|136-128-2-0-22-10-0-0
71760|data|Elf32_Rel <0x2808C, 0x2416>; R_ARM_JUMP_SLOT strlen|140-128-2-0-22-36-0-0
71768|data|Elf32_Rel <0x28090, 0x4E16>; R_ARM_JUMP_SLOT zip_stat_index|144-128-2-0-22-78-0-0
71776|data|Elf32_Rel <0x28094, 0x1F16>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base|148-128-2-0-22-31-0-0
71784|data|Elf32_Rel <0x28098, 0x6816>; R_ARM_JUMP_SLOT memcpy|152-128-2-0-22-104-0-0
71792|data|Elf32_Rel <0x2809C, 0xC16>; R_ARM_JUMP_SLOT zip_file_add|156-128-2-0-22-12-0-0
71800|data|Elf32_Rel <0x280A0, 0x3016>; R_ARM_JUMP_SLOT zip_file_strerror|160-128-2-0-22-48-0-0
71808|data|Elf32_Rel <0x280A4, 0x3516>; R_ARM_JUMP_SLOT _ZNSsC1EPKcRKSaIcE|164-128-2-0-22-53-0-0
71816|data|Elf32_Rel <0x280A8, 0x5016>; R_ARM_JUMP_SLOT fuse_setup|168-128-2-0-22-80-0-0
71824|data|Elf32_Rel <0x280AC, 0x1316>; R_ARM_JUMP_SLOT strcpy|172-128-2-0-22-19-0-0
71832|data|Elf32_Rel <0x280B0, 0x6216>; R_ARM_JUMP_SLOT zip_source_function|176-128-2-0-22-98-0-0
71840|data|Elf32_Rel <0x280B4, 0x4A16>; R_ARM_JUMP_SLOT zip_file_set_external_attributes|180-128-2-0-22-74-0-0
71848|data|Elf32_Rel <0x280B8, 0x3D16>; R_ARM_JUMP_SLOT zip_fopen_index|184-128-2-0-22-61-0-0
71856|data|Elf32_Rel <0x280BC, 0x1416>; R_ARM_JUMP_SLOT zip_fclose|188-128-2-0-22-20-0-0
71864|data|Elf32_Rel <0x280C0, 0x6916>; R_ARM_JUMP_SLOT _ZNSt8__detail15_List_node_base7_M_hookEPS0_|192-128-2-0-22-105-0-0
71872|data|Elf32_Rel <0x280C4, 0x5E16>; R_ARM_JUMP_SLOT _Znwj|196-128-2-0-22-94-0-0
71880|data|Elf32_Rel <0x280C8, 0x5116>; R_ARM_JUMP_SLOT zip_fread|200-128-2-0-22-81-0-0
71888|data|Elf32_Rel <0x280CC, 0x7016>; R_ARM_JUMP_SLOT __syslog_chk|204-128-2-0-22-112-0-0
71896|data|Elf32_Rel <0x280D0, 0xB16>; R_ARM_JUMP_SLOT strstr|208-128-2-0-22-11-0-0
71904|data|Elf32_Rel <0x280D4, 0x3216>; R_ARM_JUMP_SLOT fwrite|212-128-2-0-22-50-0-0
71912|data|Elf32_Rel <0x280D8, 0xD16>; R_ARM_JUMP_SLOT fuse_opt_free_args|216-128-2-0-22-13-0-0
71920|data|Elf32_Rel <0x280DC, 0x2616>; R_ARM_JUMP_SLOT time|220-128-2-0-22-38-0-0
71928|data|Elf32_Rel <0x280E0, 0xE16>; R_ARM_JUMP_SLOT fuse_teardown|224-128-2-0-22-14-0-0
71936|data|Elf32_Rel <0x280E4, 0xF16>; R_ARM_JUMP_SLOT _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_|228-128-2-0-22-15-0-0
71944|data|Elf32_Rel <0x280E8, 0x6B16>; R_ARM_JUMP_SLOT malloc|232-128-2-0-22-107-0-0
71952|data|Elf32_Rel <0x280EC, 0x3816>; R_ARM_JUMP_SLOT __stack_chk_fail|236-128-2-0-22-56-0-0
71960|data|Elf32_Rel <0x280F0, 0x5216>; R_ARM_JUMP_SLOT chdir|240-128-2-0-22-82-0-0
71968|data|Elf32_Rel <0x280F4, 0x4516>; R_ARM_JUMP_SLOT _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_|244-128-2-0-22-69-0-0
71976|data|Elf32_Rel <0x280F8, 0x2716>; R_ARM_JUMP_SLOT __fprintf_chk|248-128-2-0-22-39-0-0
71984|data|Elf32_Rel <0x280FC, 0x4816>; R_ARM_JUMP_SLOT __cxa_allocate_exception|252-128-2-0-22-72-0-0
71992|data|Elf32_Rel <0x28100, 0x3416>; R_ARM_JUMP_SLOT __cxa_free_exception|0-129-2-0-22-52-0-0
72000|data|Elf32_Rel <0x28104, 0x6316>; R_ARM_JUMP_SLOT getcwd|4-129-2-0-22-99-0-0
72008|data|Elf32_Rel <0x28108, 0x5C16>; R_ARM_JUMP_SLOT zip_open|8-129-2-0-22-92-0-0
72016|data|Elf32_Rel <0x2810C, 0x7116>; R_ARM_JUMP_SLOT _ZNSs6assignEPKcj|12-129-2-0-22-113-0-0
72024|data|Elf32_Rel <0x28110, 0x4916>; R_ARM_JUMP_SLOT memmove|16-129-2-0-22-73-0-0
72032|data|Elf32_Rel <0x28114, 0x4316>; R_ARM_JUMP_SLOT _ZNSt13runtime_errorD1Ev|20-129-2-0-22-67-0-0
72040|data|Elf32_Rel <0x28118, 0x2D16>; R_ARM_JUMP_SLOT __cxa_throw|24-129-2-0-22-45-0-0
72048|data|Elf32_Rel <0x2811C, 0x1816>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base|28-129-2-0-22-24-0-0
72056|data|Elf32_Rel <0x28120, 0x1A16>; R_ARM_JUMP_SLOT __cxa_end_catch|32-129-2-0-22-26-0-0
72064|data|Elf32_Rel <0x28124, 0x3E16>; R_ARM_JUMP_SLOT _ZSt17__throw_bad_allocv|36-129-2-0-22-62-0-0
72072|data|Elf32_Rel <0x28128, 0x5F16>; R_ARM_JUMP_SLOT zip_file_get_external_attributes|40-129-2-0-22-95-0-0
72080|data|Elf32_Rel <0x2812C, 0x1B16>; R_ARM_JUMP_SLOT zip_file_extra_field_set|44-129-2-0-22-27-0-0
72088|data|Elf32_Rel <0x28130, 0x6D16>; R_ARM_JUMP_SLOT zip_dir_add|48-129-2-0-22-109-0-0
72096|data|Elf32_Rel <0x28134, 0x3C16>; R_ARM_JUMP_SLOT zip_file_replace|52-129-2-0-22-60-0-0
72104|data|Elf32_Rel <0x28138, 0x6E16>; R_ARM_JUMP_SLOT fuse_loop|56-129-2-0-22-110-0-0
72112|data|Elf32_Rel <0x2813C, 0x6016>; R_ARM_JUMP_SLOT __cxa_begin_catch|60-129-2-0-22-96-0-0
72120|data|Elf32_Rel <0x28140, 0x4D16>; R_ARM_JUMP_SLOT __pthread_key_create|64-129-2-0-22-77-0-0
72128|data|Elf32_Rel <0x28144, 0x6A16>; R_ARM_JUMP_SLOT _ZNSs6appendEPKcj|68-129-2-0-22-106-0-0
72136|data|Elf32_Rel <0x28148, 0x6416>; R_ARM_JUMP_SLOT zip_delete|72-129-2-0-22-100-0-0
72144|data|Elf32_Rel <0x2814C, 0x1516>; R_ARM_JUMP_SLOT strncmp|76-129-2-0-22-21-0-0
72152|data|Elf32_Rel <0x28150, 0x1D16>; R_ARM_JUMP_SLOT zip_source_free|80-129-2-0-22-29-0-0
72160|data|Elf32_Rel <0x28154, 0x2916>; R_ARM_JUMP_SLOT __gxx_personality_v0|84-129-2-0-22-41-0-0
72168|data|Elf32_Rel <0x28158, 0x4F16>; R_ARM_JUMP_SLOT zip_file_extra_fields_count|88-129-2-0-22-79-0-0
72176|data|Elf32_Rel <0x2815C, 0x2E16>; R_ARM_JUMP_SLOT zip_file_extra_field_delete|92-129-2-0-22-46-0-0
72184|data|Elf32_Rel <0x28160, 0x3A16>; R_ARM_JUMP_SLOT _ZNSs12_M_leak_hardEv|96-129-2-0-22-58-0-0
72192|data|Elf32_Rel <0x28164, 0x916>; R_ARM_JUMP_SLOT strcmp|100-129-2-0-22-9-0-0
72200|data|Elf32_Rel <0x28168, 0x2116>; R_ARM_JUMP_SLOT __errno_location|104-129-2-0-22-33-0-0
72208|data|Elf32_Rel <0x2816C, 0x5B16>; R_ARM_JUMP_SLOT _ZNSt9exceptionD1Ev|108-129-2-0-22-91-0-0
72216|data|Elf32_Rel <0x28170, 0x5516>; R_ARM_JUMP_SLOT __memset_chk|112-129-2-0-22-85-0-0
72224|data|Elf32_Rel <0x28174, 0x6616>; R_ARM_JUMP_SLOT _ZNSs7reserveEj|116-129-2-0-22-102-0-0
72232|code|PUSH            {R3,LR}; _init|8-64-45-233
72236|code|BL              sub_1220C|246-1-0-235
72240|code|POP             {R3,PC}|8-128-189-232
72244|code|PUSH            {LR}|4-224-45-229
72248|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x11A44)|4-224-159-229
72252|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
72256|code|LDR             PC, [LR,#8]!|8-240-190-229
72260|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11A44|188-101-1-0
72264|code|ADR             R12, 0x11A50|0-198-143-226
72268|code|ADD             R12, R12, #0x16000|22-202-140-226
72272|code|LDR             PC, [R12,#(_ZSt20__throw_length_errorPKc_ptr - 0x27A50)]!; std::__throw_length_error(char const*)|188-245-188-229
72276|code|ADR             R12, 0x11A5C|0-198-143-226
72280|code|ADD             R12, R12, #0x16000|22-202-140-226
72284|code|LDR             PC, [R12,#(zip_stat_init_ptr - 0x27A5C)]!; __imp_zip_stat_init|180-245-188-229
72288|code|ADR             R12, 0x11A68|0-198-143-226
72292|code|ADD             R12, R12, #0x16000|22-202-140-226
72296|code|LDR             PC, [R12,#(abort_ptr - 0x27A68)]!; __imp_abort|172-245-188-229
72300|code|ADR             R12, 0x11A74|0-198-143-226
72304|code|ADD             R12, R12, #0x16000|22-202-140-226
72308|code|LDR             PC, [R12,#(_ZNSt8__detail15_List_node_base9_M_unhookEv_ptr - 0x27A74)]!; std::__detail::_List_node_base::_M_unhook(void)|164-245-188-229
72312|code|ADR             R12, 0x11A80|0-198-143-226
72316|code|ADD             R12, R12, #0x16000|22-202-140-226
72320|code|LDR             PC, [R12,#(zip_get_name_ptr - 0x27A80)]!; __imp_zip_get_name|156-245-188-229
72324|code|ADR             R12, 0x11A8C|0-198-143-226
72328|code|ADD             R12, R12, #0x16000|22-202-140-226
72332|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x27A8C)]!; __imp___libc_start_main|148-245-188-229
72336|code|ADR             R12, 0x11A98|0-198-143-226
72340|code|ADD             R12, R12, #0x16000|22-202-140-226
72344|code|LDR             PC, [R12,#(zip_strerror_ptr - 0x27A98)]!; __imp_zip_strerror|140-245-188-229
72348|code|ADR             R12, 0x11AA4|0-198-143-226
72352|code|ADD             R12, R12, #0x16000|22-202-140-226
72356|code|LDR             PC, [R12,#(zip_file_extra_field_get_ptr - 0x27AA4)]!; __imp_zip_file_extra_field_get|132-245-188-229
72360|code|ADR             R12, 0x11AB0|0-198-143-226
72364|code|ADD             R12, R12, #0x16000|22-202-140-226
72368|code|LDR             PC, [R12,#(zip_error_to_str_ptr - 0x27AB0)]!; __imp_zip_error_to_str|124-245-188-229
72372|code|ADR             R12, 0x11ABC|0-198-143-226
72376|code|ADD             R12, R12, #0x16000|22-202-140-226
72380|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x27ABC)]!; __imp___gmon_start__|116-245-188-229
72384|code|ADR             R12, 0x11AC8|0-198-143-226
72388|code|ADD             R12, R12, #0x16000|22-202-140-226
72392|code|LDR             PC, [R12,#(_ZdlPv_ptr - 0x27AC8)]!; operator delete(void *)|108-245-188-229
72396|code|ADR             R12, 0x11AD4|0-198-143-226
72400|code|ADD             R12, R12, #0x16000|22-202-140-226
72404|code|LDR             PC, [R12,#(getenv_ptr - 0x27AD4)]!; __imp_getenv|100-245-188-229
72408|code|ADR             R12, 0x11AE0|0-198-143-226
72412|code|ADD             R12, R12, #0x16000|22-202-140-226
72416|code|LDR             PC, [R12,#(__cxa_rethrow_ptr - 0x27AE0)]!; __imp___cxa_rethrow|92-245-188-229
72420|code|ADR             R12, 0x11AEC|0-198-143-226
72424|code|ADD             R12, R12, #0x16000|22-202-140-226
72428|code|LDR             PC, [R12,#(strchr_ptr - 0x27AEC)]!; __imp_strchr|84-245-188-229
72432|code|ADR             R12, 0x11AF8|0-198-143-226
72436|code|ADD             R12, R12, #0x16000|22-202-140-226
72440|code|LDR             PC, [R12,#(zip_file_rename_ptr - 0x27AF8)]!; __imp_zip_file_rename|76-245-188-229
72444|code|ADR             R12, 0x11B04|0-198-143-226
72448|code|ADD             R12, R12, #0x16000|22-202-140-226
72452|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base_ptr - 0x27B04)]!; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|68-245-188-229
72456|code|ADR             R12, 0x11B10|0-198-143-226
72460|code|ADD             R12, R12, #0x16000|22-202-140-226
72464|code|LDR             PC, [R12,#(memset_ptr - 0x27B10)]!; __imp_memset|60-245-188-229
72468|code|ADR             R12, 0x11B1C|0-198-143-226
72472|code|ADD             R12, R12, #0x16000|22-202-140-226
72476|code|LDR             PC, [R12,#(zip_get_num_entries_ptr - 0x27B1C)]!; __imp_zip_get_num_entries|52-245-188-229
72480|code|ADR             R12, 0x11B28|0-198-143-226
72484|code|ADD             R12, R12, #0x16000|22-202-140-226
72488|code|LDR             PC, [R12,#(__cxa_end_cleanup_ptr - 0x27B28)]!; __imp___cxa_end_cleanup|44-245-188-229
72492|code|ADR             R12, 0x11B34|0-198-143-226
72496|code|ADD             R12, R12, #0x16000|22-202-140-226
72500|code|LDR             PC, [R12,#(_ZNSsC1ERKSs_ptr - 0x27B34)]!; std::string::string(std::string const&)|36-245-188-229
72504|code|ADR             R12, 0x11B40|0-198-143-226
72508|code|ADD             R12, R12, #0x16000|22-202-140-226
72512|code|LDR             PC, [R12,#(_ZNSt13runtime_errorC1ERKSs_ptr - 0x27B40)]!; std::runtime_error::runtime_error(std::string const&)|28-245-188-229
72516|code|ADR             R12, 0x11B4C|0-198-143-226
72520|code|ADD             R12, R12, #0x16000|22-202-140-226
72524|code|LDR             PC, [R12,#(statvfs64_ptr - 0x27B4C)]!; __imp_statvfs64|20-245-188-229
72528|code|ADR             R12, 0x11B58|0-198-143-226
72532|code|ADD             R12, R12, #0x16000|22-202-140-226
72536|code|LDR             PC, [R12,#(perror_ptr - 0x27B58)]!; __imp_perror|12-245-188-229
72540|code|ADR             R12, 0x11B64|0-198-143-226
72544|code|ADD             R12, R12, #0x16000|22-202-140-226
72548|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x27B64)]!; __imp___assert_fail|4-245-188-229
72552|code|ADR             R12, 0x11B70|0-198-143-226
72556|code|ADD             R12, R12, #0x16000|22-202-140-226
72560|code|LDR             PC, [R12,#(_ZNSsC1ERKSsjj_ptr - 0x27B70)]!; std::string::string(std::string const&,uint,uint)|252-244-188-229
72564|code|ADR             R12, 0x11B7C|0-198-143-226
72568|code|ADD             R12, R12, #0x16000|22-202-140-226
72572|code|LDR             PC, [R12,#(zip_close_ptr - 0x27B7C)]!; __imp_zip_close|244-244-188-229
72576|code|BX              PC|120-71
72578|data|ALIGN 4|192-70
72580|code|ADR             R12, 0x11B8C|0-198-143-226
72584|code|ADD             R12, R12, #0x16000|22-202-140-226
72588|code|LDR             PC, [R12,#(free_ptr - 0x27B8C)]!; __imp_free|232-244-188-229
72592|code|ADR             R12, 0x11B98|0-198-143-226
72596|code|ADD             R12, R12, #0x16000|22-202-140-226
72600|code|LDR             PC, [R12,#(openlog_ptr - 0x27B98)]!; __imp_openlog|224-244-188-229
72604|code|BX              PC; std::string::_Rep::_M_destroy(std::allocator<char> const&)|120-71
72606|data|ALIGN 4|192-70
72608|code|ADR             R12, 0x11BA8|0-198-143-226
72612|code|ADD             R12, R12, #0x16000|22-202-140-226
72616|code|LDR             PC, [R12,#(_ZNSs4_Rep10_M_destroyERKSaIcE_ptr - 0x27BA8)]!; std::string::_Rep::_M_destroy(std::allocator<char> const&)|212-244-188-229
72620|code|ADR             R12, 0x11BB4|0-198-143-226
72624|code|ADD             R12, R12, #0x16000|22-202-140-226
72628|code|LDR             PC, [R12,#(fuse_opt_parse_ptr - 0x27BB4)]!; __imp_fuse_opt_parse|204-244-188-229
72632|code|ADR             R12, 0x11BC0|0-198-143-226
72636|code|ADD             R12, R12, #0x16000|22-202-140-226
72640|code|LDR             PC, [R12,#(_ZNSt9bad_allocD1Ev_ptr - 0x27BC0)]!; std::bad_alloc::~bad_alloc()|196-244-188-229
72644|code|ADR             R12, 0x11BCC|0-198-143-226
72648|code|ADD             R12, R12, #0x16000|22-202-140-226
72652|code|LDR             PC, [R12,#(fuse_get_context_ptr - 0x27BCC)]!; __imp_fuse_get_context|188-244-188-229
72656|code|ADR             R12, 0x11BD8|0-198-143-226
72660|code|ADD             R12, R12, #0x16000|22-202-140-226
72664|code|LDR             PC, [R12,#(strlen_ptr - 0x27BD8)]!; __imp_strlen|180-244-188-229
72668|code|ADR             R12, 0x11BE4|0-198-143-226
72672|code|ADD             R12, R12, #0x16000|22-202-140-226
72676|code|LDR             PC, [R12,#(zip_stat_index_ptr - 0x27BE4)]!; __imp_zip_stat_index|172-244-188-229
72680|code|ADR             R12, 0x11BF0|0-198-143-226
72684|code|ADD             R12, R12, #0x16000|22-202-140-226
72688|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base_ptr - 0x27BF0)]!; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|164-244-188-229
72692|code|ADR             R12, 0x11BFC|0-198-143-226
72696|code|ADD             R12, R12, #0x16000|22-202-140-226
72700|code|LDR             PC, [R12,#(memcpy_ptr - 0x27BFC)]!; __imp_memcpy|156-244-188-229
72704|code|ADR             R12, 0x11C08|0-198-143-226
72708|code|ADD             R12, R12, #0x16000|22-202-140-226
72712|code|LDR             PC, [R12,#(zip_file_add_ptr - 0x27C08)]!; __imp_zip_file_add|148-244-188-229
72716|code|ADR             R12, 0x11C14|0-198-143-226
72720|code|ADD             R12, R12, #0x16000|22-202-140-226
72724|code|LDR             PC, [R12,#(zip_file_strerror_ptr - 0x27C14)]!; __imp_zip_file_strerror|140-244-188-229
72728|code|ADR             R12, 0x11C20|0-198-143-226
72732|code|ADD             R12, R12, #0x16000|22-202-140-226
72736|code|LDR             PC, [R12,#(_ZNSsC1EPKcRKSaIcE_ptr - 0x27C20)]!; std::string::string(char const*,std::allocator<char> const&)|132-244-188-229
72740|code|ADR             R12, 0x11C2C|0-198-143-226
72744|code|ADD             R12, R12, #0x16000|22-202-140-226
72748|code|LDR             PC, [R12,#(fuse_setup_ptr - 0x27C2C)]!; __imp_fuse_setup|124-244-188-229
72752|code|ADR             R12, 0x11C38|0-198-143-226
72756|code|ADD             R12, R12, #0x16000|22-202-140-226
72760|code|LDR             PC, [R12,#(strcpy_ptr - 0x27C38)]!; __imp_strcpy|116-244-188-229
72764|code|ADR             R12, 0x11C44|0-198-143-226
72768|code|ADD             R12, R12, #0x16000|22-202-140-226
72772|code|LDR             PC, [R12,#(zip_source_function_ptr - 0x27C44)]!; __imp_zip_source_function|108-244-188-229
72776|code|ADR             R12, 0x11C50|0-198-143-226
72780|code|ADD             R12, R12, #0x16000|22-202-140-226
72784|code|LDR             PC, [R12,#(zip_file_set_external_attributes_ptr - 0x27C50)]!; __imp_zip_file_set_external_attributes|100-244-188-229
72788|code|ADR             R12, 0x11C5C|0-198-143-226
72792|code|ADD             R12, R12, #0x16000|22-202-140-226
72796|code|LDR             PC, [R12,#(zip_fopen_index_ptr - 0x27C5C)]!; __imp_zip_fopen_index|92-244-188-229
72800|code|ADR             R12, 0x11C68|0-198-143-226
72804|code|ADD             R12, R12, #0x16000|22-202-140-226
72808|code|LDR             PC, [R12,#(zip_fclose_ptr - 0x27C68)]!; __imp_zip_fclose|84-244-188-229
72812|code|BX              PC; std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)|120-71
72814|data|ALIGN 4|192-70
72816|code|ADR             R12, 0x11C78|0-198-143-226
72820|code|ADD             R12, R12, #0x16000|22-202-140-226
72824|code|LDR             PC, [R12,#(_ZNSt8__detail15_List_node_base7_M_hookEPS0__ptr - 0x27C78)]!; std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)|72-244-188-229
72828|code|ADR             R12, 0x11C84|0-198-143-226
72832|code|ADD             R12, R12, #0x16000|22-202-140-226
72836|code|LDR             PC, [R12,#(_Znwj_ptr - 0x27C84)]!; operator new(uint)|64-244-188-229
72840|code|ADR             R12, 0x11C90|0-198-143-226
72844|code|ADD             R12, R12, #0x16000|22-202-140-226
72848|code|LDR             PC, [R12,#(zip_fread_ptr - 0x27C90)]!; __imp_zip_fread|56-244-188-229
72852|code|BX              PC|120-71
72854|data|ALIGN 4|192-70
72856|code|ADR             R12, 0x11CA0|0-198-143-226
72860|code|ADD             R12, R12, #0x16000|22-202-140-226
72864|code|LDR             PC, [R12,#(__syslog_chk_ptr - 0x27CA0)]!; __imp___syslog_chk|44-244-188-229
72868|code|ADR             R12, 0x11CAC|0-198-143-226
72872|code|ADD             R12, R12, #0x16000|22-202-140-226
72876|code|LDR             PC, [R12,#(strstr_ptr - 0x27CAC)]!; __imp_strstr|36-244-188-229
72880|code|BX              PC|120-71
72882|data|ALIGN 4|192-70
72884|code|ADR             R12, 0x11CBC|0-198-143-226
72888|code|ADD             R12, R12, #0x16000|22-202-140-226
72892|code|LDR             PC, [R12,#(fwrite_ptr - 0x27CBC)]!; __imp_fwrite|24-244-188-229
72896|code|ADR             R12, 0x11CC8|0-198-143-226
72900|code|ADD             R12, R12, #0x16000|22-202-140-226
72904|code|LDR             PC, [R12,#(fuse_opt_free_args_ptr - 0x27CC8)]!; __imp_fuse_opt_free_args|16-244-188-229
72908|code|ADR             R12, 0x11CD4|0-198-143-226
72912|code|ADD             R12, R12, #0x16000|22-202-140-226
72916|code|LDR             PC, [R12,#(time_ptr - 0x27CD4)]!; __imp_time|8-244-188-229
72920|code|ADR             R12, 0x11CE0|0-198-143-226
72924|code|ADD             R12, R12, #0x16000|22-202-140-226
72928|code|LDR             PC, [R12,#(fuse_teardown_ptr - 0x27CE0)]!; __imp_fuse_teardown|0-244-188-229
72932|code|ADR             R12, 0x11CEC|0-198-143-226
72936|code|ADD             R12, R12, #0x16000|22-202-140-226
72940|code|LDR             PC, [R12,#(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS__ptr - 0x27CEC)]!; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|248-243-188-229
72944|code|ADR             R12, 0x11CF8|0-198-143-226
72948|code|ADD             R12, R12, #0x16000|22-202-140-226
72952|code|LDR             PC, [R12,#(malloc_ptr - 0x27CF8)]!; __imp_malloc|240-243-188-229
72956|code|ADR             R12, 0x11D04|0-198-143-226
72960|code|ADD             R12, R12, #0x16000|22-202-140-226
72964|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x27D04)]!; __imp___stack_chk_fail|232-243-188-229
72968|code|ADR             R12, 0x11D10|0-198-143-226
72972|code|ADD             R12, R12, #0x16000|22-202-140-226
72976|code|LDR             PC, [R12,#(chdir_ptr - 0x27D10)]!; __imp_chdir|224-243-188-229
72980|code|ADR             R12, 0x11D1C|0-198-143-226
72984|code|ADD             R12, R12, #0x16000|22-202-140-226
72988|code|LDR             PC, [R12,#(_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS__ptr - 0x27D1C)]!; std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|216-243-188-229
72992|code|ADR             R12, 0x11D28|0-198-143-226
72996|code|ADD             R12, R12, #0x16000|22-202-140-226
73000|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x27D28)]!; __imp___fprintf_chk|208-243-188-229
73004|code|ADR             R12, 0x11D34|0-198-143-226
73008|code|ADD             R12, R12, #0x16000|22-202-140-226
73012|code|LDR             PC, [R12,#(__cxa_allocate_exception_ptr - 0x27D34)]!; __imp___cxa_allocate_exception|200-243-188-229
73016|code|ADR             R12, 0x11D40|0-198-143-226
73020|code|ADD             R12, R12, #0x16000|22-202-140-226
73024|code|LDR             PC, [R12,#(__cxa_free_exception_ptr - 0x27D40)]!; __imp___cxa_free_exception|192-243-188-229
73028|code|ADR             R12, 0x11D4C|0-198-143-226
73032|code|ADD             R12, R12, #0x16000|22-202-140-226
73036|code|LDR             PC, [R12,#(getcwd_ptr - 0x27D4C)]!; __imp_getcwd|184-243-188-229
73040|code|ADR             R12, 0x11D58|0-198-143-226
73044|code|ADD             R12, R12, #0x16000|22-202-140-226
73048|code|LDR             PC, [R12,#(zip_open_ptr - 0x27D58)]!; __imp_zip_open|176-243-188-229
73052|code|ADR             R12, 0x11D64|0-198-143-226
73056|code|ADD             R12, R12, #0x16000|22-202-140-226
73060|code|LDR             PC, [R12,#(_ZNSs6assignEPKcj_ptr - 0x27D64)]!; std::string::assign(char const*,uint)|168-243-188-229
73064|code|ADR             R12, 0x11D70|0-198-143-226
73068|code|ADD             R12, R12, #0x16000|22-202-140-226
73072|code|LDR             PC, [R12,#(memmove_ptr - 0x27D70)]!; __imp_memmove|160-243-188-229
73076|code|ADR             R12, 0x11D7C|0-198-143-226
73080|code|ADD             R12, R12, #0x16000|22-202-140-226
73084|code|LDR             PC, [R12,#(_ZNSt13runtime_errorD1Ev_ptr - 0x27D7C)]!; std::runtime_error::~runtime_error()|152-243-188-229
73088|code|ADR             R12, 0x11D88|0-198-143-226
73092|code|ADD             R12, R12, #0x16000|22-202-140-226
73096|code|LDR             PC, [R12,#(__cxa_throw_ptr - 0x27D88)]!; __imp___cxa_throw|144-243-188-229
73100|code|ADR             R12, 0x11D94|0-198-143-226
73104|code|ADD             R12, R12, #0x16000|22-202-140-226
73108|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base_ptr - 0x27D94)]!; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|136-243-188-229
73112|code|ADR             R12, 0x11DA0|0-198-143-226
73116|code|ADD             R12, R12, #0x16000|22-202-140-226
73120|code|LDR             PC, [R12,#(__cxa_end_catch_ptr - 0x27DA0)]!; __imp___cxa_end_catch|128-243-188-229
73124|code|ADR             R12, 0x11DAC|0-198-143-226
73128|code|ADD             R12, R12, #0x16000|22-202-140-226
73132|code|LDR             PC, [R12,#(_ZSt17__throw_bad_allocv_ptr - 0x27DAC)]!; std::__throw_bad_alloc(void)|120-243-188-229
73136|code|ADR             R12, 0x11DB8|0-198-143-226
73140|code|ADD             R12, R12, #0x16000|22-202-140-226
73144|code|LDR             PC, [R12,#(zip_file_get_external_attributes_ptr - 0x27DB8)]!; __imp_zip_file_get_external_attributes|112-243-188-229
73148|code|ADR             R12, 0x11DC4|0-198-143-226
73152|code|ADD             R12, R12, #0x16000|22-202-140-226
73156|code|LDR             PC, [R12,#(zip_file_extra_field_set_ptr - 0x27DC4)]!; __imp_zip_file_extra_field_set|104-243-188-229
73160|code|ADR             R12, 0x11DD0|0-198-143-226
73164|code|ADD             R12, R12, #0x16000|22-202-140-226
73168|code|LDR             PC, [R12,#(zip_dir_add_ptr - 0x27DD0)]!; __imp_zip_dir_add|96-243-188-229
73172|code|ADR             R12, 0x11DDC|0-198-143-226
73176|code|ADD             R12, R12, #0x16000|22-202-140-226
73180|code|LDR             PC, [R12,#(zip_file_replace_ptr - 0x27DDC)]!; __imp_zip_file_replace|88-243-188-229
73184|code|ADR             R12, 0x11DE8|0-198-143-226
73188|code|ADD             R12, R12, #0x16000|22-202-140-226
73192|code|LDR             PC, [R12,#(fuse_loop_ptr - 0x27DE8)]!; __imp_fuse_loop|80-243-188-229
73196|code|ADR             R12, 0x11DF4|0-198-143-226
73200|code|ADD             R12, R12, #0x16000|22-202-140-226
73204|code|LDR             PC, [R12,#(__cxa_begin_catch_ptr - 0x27DF4)]!; __imp___cxa_begin_catch|72-243-188-229
73208|code|ADR             R12, 0x11E00|0-198-143-226
73212|code|ADD             R12, R12, #0x16000|22-202-140-226
73216|code|LDR             PC, [R12,#(__pthread_key_create_ptr - 0x27E00)]!; __imp___pthread_key_create|64-243-188-229
73220|code|ADR             R12, 0x11E0C|0-198-143-226
73224|code|ADD             R12, R12, #0x16000|22-202-140-226
73228|code|LDR             PC, [R12,#(_ZNSs6appendEPKcj_ptr - 0x27E0C)]!; std::string::append(char const*,uint)|56-243-188-229
73232|code|ADR             R12, 0x11E18|0-198-143-226
73236|code|ADD             R12, R12, #0x16000|22-202-140-226
73240|code|LDR             PC, [R12,#(zip_delete_ptr - 0x27E18)]!; __imp_zip_delete|48-243-188-229
73244|code|ADR             R12, 0x11E24|0-198-143-226
73248|code|ADD             R12, R12, #0x16000|22-202-140-226
73252|code|LDR             PC, [R12,#(strncmp_ptr - 0x27E24)]!; __imp_strncmp|40-243-188-229
73256|code|ADR             R12, 0x11E30|0-198-143-226
73260|code|ADD             R12, R12, #0x16000|22-202-140-226
73264|code|LDR             PC, [R12,#(zip_source_free_ptr - 0x27E30)]!; __imp_zip_source_free|32-243-188-229
73268|code|ADR             R12, 0x11E3C|0-198-143-226
73272|code|ADD             R12, R12, #0x16000|22-202-140-226
73276|code|LDR             PC, [R12,#(__gxx_personality_v0_ptr - 0x27E3C)]!; __imp___gxx_personality_v0|24-243-188-229
73280|code|ADR             R12, 0x11E48|0-198-143-226
73284|code|ADD             R12, R12, #0x16000|22-202-140-226
73288|code|LDR             PC, [R12,#(zip_file_extra_fields_count_ptr - 0x27E48)]!; __imp_zip_file_extra_fields_count|16-243-188-229
73292|code|ADR             R12, 0x11E54|0-198-143-226
73296|code|ADD             R12, R12, #0x16000|22-202-140-226
73300|code|LDR             PC, [R12,#(zip_file_extra_field_delete_ptr - 0x27E54)]!; __imp_zip_file_extra_field_delete|8-243-188-229
73304|code|ADR             R12, 0x11E60|0-198-143-226
73308|code|ADD             R12, R12, #0x16000|22-202-140-226
73312|code|LDR             PC, [R12,#(_ZNSs12_M_leak_hardEv_ptr - 0x27E60)]!; std::string::_M_leak_hard(void)|0-243-188-229
73316|code|ADR             R12, 0x11E6C|0-198-143-226
73320|code|ADD             R12, R12, #0x16000|22-202-140-226
73324|code|LDR             PC, [R12,#(strcmp_ptr - 0x27E6C)]!; __imp_strcmp|248-242-188-229
73328|code|ADR             R12, 0x11E78|0-198-143-226
73332|code|ADD             R12, R12, #0x16000|22-202-140-226
73336|code|LDR             PC, [R12,#(__errno_location_ptr - 0x27E78)]!; __imp___errno_location|240-242-188-229
73340|code|ADR             R12, 0x11E84|0-198-143-226
73344|code|ADD             R12, R12, #0x16000|22-202-140-226
73348|code|LDR             PC, [R12,#(_ZNSt9exceptionD1Ev_ptr - 0x27E84)]!; std::exception::~exception()|232-242-188-229
73352|code|ADR             R12, 0x11E90|0-198-143-226
73356|code|ADD             R12, R12, #0x16000|22-202-140-226
73360|code|LDR             PC, [R12,#(__memset_chk_ptr - 0x27E90)]!; __imp___memset_chk|224-242-188-229
73364|code|ADR             R12, 0x11E9C|0-198-143-226
73368|code|ADD             R12, R12, #0x16000|22-202-140-226
73372|code|LDR             PC, [R12,#(_ZNSs7reserveEj_ptr - 0x27E9C)]!; std::string::reserve(uint)|216-242-188-229
73376|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
73384|code|PUSH            {LR}|0-181
73386|code|CBZ             R3, loc_11ECC|123-177
73388|code|ADD.W           R2, R0, #8|0-241-8-2
73392|code|DMB.W           SY|191-243-95-143
73396|code|LDREX.W         R3, [R2]|82-232-0-63
73400|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
73404|code|STREX.W         R12, LR, [R2]|66-232-0-236
73408|code|CMP.W           R12, #0|188-241-0-15
73412|code|BNE             loc_11EB4|246-209
73414|code|DMB.W           SY|191-243-95-143
73418|code|B               loc_11ED2|2-224
73420|code|LDR             R3, [R0,#8]|131-104
73422|code|SUBS            R2, R3, #1|90-30
73424|code|STR             R2, [R0,#8]|130-96
73426|code|CMP             R3, #0|0-43
73428|code|BGT             locret_11EDE|3-220
73430|code|POP.W           {LR}|93-248-4-235
73434|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-95-190
73438|code|POP.W           {PC}|93-248-4-251
73442|data|ALIGN 4|0-191
73444|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
73452|code|PUSH            {LR}|0-181
73454|code|CBZ             R3, loc_11F10|123-177
73456|code|ADD.W           R2, R0, #8|0-241-8-2
73460|code|DMB.W           SY|191-243-95-143
73464|code|LDREX.W         R3, [R2]|82-232-0-63
73468|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
73472|code|STREX.W         R12, LR, [R2]|66-232-0-236
73476|code|CMP.W           R12, #0|188-241-0-15
73480|code|BNE             loc_11EF8|246-209
73482|code|DMB.W           SY|191-243-95-143
73486|code|B               loc_11F16|2-224
73488|code|LDR             R3, [R0,#8]|131-104
73490|code|SUBS            R2, R3, #1|90-30
73492|code|STR             R2, [R0,#8]|130-96
73494|code|CMP             R3, #0|0-43
73496|code|BGT             locret_11F22|3-220
73498|code|POP.W           {LR}|93-248-4-235
73502|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-61-190
73506|code|POP.W           {PC}|93-248-4-251
73510|data|ALIGN 4|0-191
73512|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
73520|code|PUSH            {LR}|0-181
73522|code|CBZ             R3, loc_11F54|123-177
73524|code|ADD.W           R2, R0, #8|0-241-8-2
73528|code|DMB.W           SY|191-243-95-143
73532|code|LDREX.W         R3, [R2]|82-232-0-63
73536|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
73540|code|STREX.W         R12, LR, [R2]|66-232-0-236
73544|code|CMP.W           R12, #0|188-241-0-15
73548|code|BNE             loc_11F3C|246-209
73550|code|DMB.W           SY|191-243-95-143
73554|code|B               loc_11F5A|2-224
73556|code|LDR             R3, [R0,#8]|131-104
73558|code|SUBS            R2, R3, #1|90-30
73560|code|STR             R2, [R0,#8]|130-96
73562|code|CMP             R3, #0|0-43
73564|code|BGT             locret_11F66|3-220
73566|code|POP.W           {LR}|93-248-4-235
73570|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-27-190
73574|code|POP.W           {PC}|93-248-4-251
73578|data|ALIGN 4|0-191
73580|code|PUSH.W          {R4-R10,LR}|45-233-240-71
73584|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
73592|code|SUB             SP, SP, #0x38|142-176
73594|code|LDR             R4, [R5]|44-104
73596|code|MOVW            R2, #0x64AC|70-242-172-66
73600|code|MOVW            R3, #0x232D|66-242-45-51
73604|code|STR             R0, [SP,#0x58+var_40]|6-144
73606|code|STR             R1, [SP,#0x58+var_3C]|7-145
73608|code|MOVT.W          R2, #1|192-242-1-2
73612|code|ADD             R0, SP, #0x58+var_40|6-168
73614|code|MOVT.W          R3, #1|192-242-1-3
73618|code|ADD             R1, SP, #0x58+var_34|9-169
73620|code|STR             R4, [SP,#0x58+var_24]|13-148
73622|code|MOVS            R4, #0|0-36
73624|code|STR             R4, [SP,#0x58+var_38]|8-148
73626|code|STRB.W          R4, [SP,#0x58+var_34]|141-248-36-64
73630|code|STRB.W          R4, [SP,#0x58+var_33]|141-248-37-64
73634|code|STRB.W          R4, [SP,#0x58+var_28]|141-248-48-64
73638|code|STR             R4, [SP,#0x58+var_30]|10-148
73640|code|STR             R4, [SP,#0x58+var_2C]|11-148
73642|code|BLX             fuse_opt_parse|255-247-0-238
73646|code|MOV             R4, R0|4-70
73648|code|CMP             R0, #0|0-40
73650|code|BNE.W           loc_121A0|64-240-245-128
73654|code|LDRB.W          R6, [SP,#0x58+var_34]|157-248-36-96
73658|code|CMP             R6, #0|0-46
73660|code|BNE.W           loc_121BC|64-240-254-128
73664|code|LDRB.W          R3, [SP,#0x58+var_33]|157-248-37-48
73668|code|CBNZ            R3, loc_11FF8|195-185
73670|code|LDR             R3, [SP,#0x58+var_2C]|11-155
73672|code|CMP             R3, #0|0-43
73674|code|BEQ.W           loc_121C8|0-240-253-128
73678|code|MOVW            R0, #0x6530|70-242-48-80
73682|code|MOVS            R1, #1; option|1-33
73684|code|MOVT.W          R0, #1; ident|192-242-1-0
73688|code|MOVS            R2, #8; facility|8-34
73690|code|BLX             openlog|255-247-218-237
73694|code|MOV             R0, #0x16530|70-242-48-80-192-242-1-0
73702|code|LDR             R1, [SP,#0x58+var_2C]|11-153
73704|code|LDRB.W          R2, [SP,#0x58+var_28]|157-248-48-32
73708|code|BL              sub_123A0|0-240-216-249
73712|code|MOV             R6, R0|6-70
73714|code|CMP             R0, #0|0-40
73716|code|BEQ.W           loc_121A0|0-240-212-128
73720|code|MOVW            R3, #0x81FC|72-242-252-19
73724|code|MOVW            R4, #0x2559|66-242-89-84
73728|code|MOVT.W          R3, #2|192-242-2-3
73732|code|MOVW            R0, #0x2581|66-242-129-80
73736|code|MOVW            R1, #0x2665|66-242-101-97
73740|code|MOVW            R2, #0x25C1|66-242-193-82
73744|code|MOVT.W          R4, #1|192-242-1-4
73748|code|MOVT.W          R0, #1|192-242-1-0
73752|code|STR             R4, [R3,#(dword_28270 - 0x281FC)]|92-103
73754|code|MOVT.W          R1, #1|192-242-1-1
73758|code|STR             R0, [R3,#(dword_28274 - 0x281FC)]|152-103
73760|code|MOVT.W          R2, #1|192-242-1-2
73764|code|STR             R1, [R3,#(dword_28264 - 0x281FC)]|153-102
73766|code|MOVW            R9, #0x26E5|66-242-229-105
73770|code|STR             R2, [R3]|26-96
73772|code|MOVW            R8, #0x275D|66-242-93-120
73776|code|MOVW            R12, #0x2869|66-246-105-12
73780|code|MOVW            LR, #0x2871|66-246-113-14
73784|code|MOVW            R7, #0x2879|66-246-121-7
73788|code|MOVW            R4, #0x28E5|66-246-229-4
73792|code|MOVW            R0, #0x291D|66-246-29-16
73796|code|MOVW            R1, #0x2965|66-246-101-17
73800|code|MOVW            R2, #0x2BB1|66-246-177-50
73804|code|LDRB.W          R10, [R3,#(byte_28294 - 0x281FC)]|147-248-152-160
73808|code|MOVT.W          R9, #1|192-242-1-9
73812|code|MOVT.W          R8, #1|192-242-1-8
73816|code|STR.W           R9, [R3,#(dword_28240 - 0x281FC)]|195-248-68-144
73820|code|MOVT.W          R12, #1|192-242-1-12
73824|code|STR.W           R8, [R3,#(dword_28234 - 0x281FC)]|195-248-56-128
73828|code|MOVT.W          LR, #1|192-242-1-14
73832|code|STR.W           R12, [R3,#(dword_28238 - 0x281FC)]|195-248-60-192
73836|code|MOVT.W          R7, #1|192-242-1-7
73840|code|STR.W           LR, [R3,#(dword_2823C - 0x281FC)]|195-248-64-224
73844|code|MOVT.W          R4, #1|192-242-1-4
73848|code|STR             R7, [R3,#(dword_28248 - 0x281FC)]|223-100
73850|code|MOVT.W          R0, #1|192-242-1-0
73854|code|STR             R4, [R3,#(dword_28210 - 0x281FC)]|92-97
73856|code|MOVT.W          R1, #1|192-242-1-1
73860|code|STR             R0, [R3,#(dword_28214 - 0x281FC)]|152-97
73862|code|MOVT.W          R2, #1|192-242-1-2
73866|code|STR             R1, [R3,#(dword_2820C - 0x281FC)]|25-97
73868|code|MOVW            R9, #0x27F5|66-242-245-121
73872|code|STR             R2, [R3,#(dword_2821C - 0x281FC)]|26-98
73874|code|MOVW            R8, #0x2A2D|66-246-45-40
73878|code|MOVW            R12, #0x2A55|66-246-85-44
73882|code|MOVW            LR, #0x2A95|66-246-149-46
73886|code|MOVW            R7, #0x2A99|66-246-153-39
73890|code|MOVW            R4, #0x2A9D|66-246-157-36
73894|code|MOVW            R0, #0x2AA1|66-246-161-32
73898|code|MOVW            R1, #0x2AA5|66-246-165-33
73902|code|MOVW            R2, #0x2AA9|66-246-169-34
73906|code|MOVT.W          R9, #1|192-242-1-9
73910|code|MOVT.W          R8, #1|192-242-1-8
73914|code|STR.W           R9, [R3,#(dword_2827C - 0x281FC)]|195-248-128-144
73918|code|STR.W           R8, [R3,#(dword_28224 - 0x281FC)]|195-248-40-128
73922|code|MOVT.W          R12, #1|192-242-1-12
73926|code|MOVT.W          LR, #1|192-242-1-14
73930|code|STR.W           R12, [R3,#(dword_28228 - 0x281FC)]|195-248-44-192
73934|code|STR.W           LR, [R3,#(dword_28244 - 0x281FC)]|195-248-72-224
73938|code|MOVT.W          R7, #1|192-242-1-7
73942|code|MOVT.W          R4, #1|192-242-1-4
73946|code|STR             R7, [R3,#(dword_2824C - 0x281FC)]|31-101
73948|code|STR             R4, [R3,#(dword_2826C - 0x281FC)]|28-103
73950|code|MOVT.W          R0, #1|192-242-1-0
73954|code|MOVT.W          R1, #1|192-242-1-1
73958|code|STR             R0, [R3,#(dword_28260 - 0x281FC)]|88-102
73960|code|STR             R1, [R3,#(dword_28268 - 0x281FC)]|217-102
73962|code|MOVT.W          R2, #1|192-242-1-2
73966|code|MOVW            R9, #0x29E5|66-246-229-25
73970|code|STR             R2, [R3,#(dword_28278 - 0x281FC)]|218-103
73972|code|MOVW            R8, #0x2881|66-246-129-8
73976|code|MOVW            R12, #0x2891|66-246-145-12
73980|code|MOVW            LR, #0x2A0D|66-246-13-46
73984|code|MOVW            R7, #0x2A15|66-246-21-39
73988|code|MOVW            R4, #0x2A1D|66-246-29-36
73992|code|MOVW            R0, #0x2A25|66-246-37-32
73996|code|MOVW            R1, #0x2AAD|66-246-173-33
74000|code|MOVW            R2, #0x2B21|66-246-33-50
74004|code|MOVT.W          R12, #1|192-242-1-12
74008|code|MOVT.W          LR, #1|192-242-1-14
74012|code|STR.W           R12, [R3,#(dword_2822C - 0x281FC)]|195-248-48-192
74016|code|MOVT.W          R7, #1|192-242-1-7
74020|code|STR.W           LR, [R3,#(dword_28250 - 0x281FC)]|195-248-84-224
74024|code|MOVT.W          R0, #1|192-242-1-0
74028|code|STR             R7, [R3,#(dword_28254 - 0x281FC)]|159-101
74030|code|MOVT.W          R1, #1|192-242-1-1
74034|code|STR             R0, [R3,#(dword_2825C - 0x281FC)]|24-102
74036|code|MOVT.W          R2, #1|192-242-1-2
74040|code|STR             R1, [R3,#(dword_28200 - 0x281FC)]|89-96
74042|code|MOVT.W          R9, #1|192-242-1-9
74046|code|STR             R2, [R3,#(dword_28218 - 0x281FC)]|218-97
74048|code|ADD             R1, SP, #0x58+var_44|5-169
74050|code|STR.W           R9, [R3,#(dword_2828C - 0x281FC)]|195-248-144-144
74054|code|MOV             R2, R3|26-70
74056|code|MOVT.W          R8, #1|192-242-1-8
74060|code|MOVT.W          R4, #1|192-242-1-4
74064|code|STR.W           R8, [R3,#(dword_28280 - 0x281FC)]|195-248-132-128
74068|code|BFC.W           R10, #0, #1|111-243-0-10
74072|code|STR             R4, [R3,#(dword_28258 - 0x281FC)]|220-101
74074|code|STRB.W          R10, [R3,#(byte_28294 - 0x281FC)]|131-248-152-160
74078|code|ADD             R3, SP, #0x58+var_48|4-171
74080|code|STR             R3, [SP,#0x58+var_58]|0-147
74082|code|MOVS            R3, #0xB4|180-35
74084|code|STR             R1, [SP,#0x58+var_54]|1-145
74086|code|STR             R6, [SP,#0x58+var_50]|2-150
74088|code|LDR             R0, [SP,#0x58+var_40]|6-152
74090|code|LDR             R1, [SP,#0x58+var_3C]|7-153
74092|code|BLX             fuse_setup|255-247-90-237
74096|code|MOV             R7, R0|7-70
74098|code|ADD             R0, SP, #0x58+var_40|6-168
74100|code|BLX             fuse_opt_free_args|255-247-164-237
74104|code|CBZ             R7, loc_121AA|191-177
74106|code|MOV             R0, R7|56-70
74108|code|BLX             fuse_loop|255-247-48-238
74112|code|LDR             R1, [SP,#0x58+var_48]|4-153
74114|code|MOV             R4, R0|4-70
74116|code|ADDS            R4, #0|0-52
74118|code|MOV             R0, R7|56-70
74120|code|IT NE|24-191
74122|code|MOVNE           R4, #1|1-36
74124|code|BLX             fuse_teardown|255-247-164-237
74128|code|LDR             R2, [SP,#0x58+var_24]|13-154
74130|code|MOV             R0, R4|32-70
74132|code|LDR             R3, [R5]|43-104
74134|code|CMP             R2, R3|154-66
74136|code|BNE             loc_121D6|29-209
74138|code|ADD             SP, SP, #0x38 ; '8'|14-176
74140|code|POP.W           {R4-R10,PC}|189-232-240-135
74144|code|ADD             R0, SP, #0x58+var_40|6-168
74146|code|MOVS            R4, #1|1-36
74148|code|BLX             fuse_opt_free_args|255-247-140-237
74152|code|B               loc_12190|242-231
74154|code|CBZ             R6, loc_121C4|94-177
74156|code|MOV             R0, R6|48-70
74158|code|MOVS            R4, #1|1-36
74160|code|BL              sub_1380C|1-240-44-251
74164|code|MOV             R0, R6; void *|48-70
74166|code|BLX             _ZdlPv; operator delete(void *)|255-247-132-236
74170|code|B               loc_12190|233-231
74172|code|ADD             R0, SP, #0x58+var_40|6-168
74174|code|BLX             fuse_opt_free_args|255-247-128-237
74178|code|B               loc_12190|229-231
74180|code|MOVS            R4, #1|1-36
74182|code|B               loc_12190|227-231
74184|code|BL              sub_122BC|0-240-120-248
74188|code|ADD             R0, SP, #0x58+var_40|6-168
74190|code|BLX             fuse_opt_free_args|255-247-120-237
74194|code|MOVS            R4, #1|1-36
74196|code|B               loc_12190|220-231
74198|code|BLX             __stack_chk_fail|255-247-146-237
74202|data|ALIGN 4|0-191
74204|code|MOV.W           R11, #0|79-240-0-11
74208|code|MOV.W           LR, #0|79-240-0-14
74212|code|POP             {R1}; argc|2-188
74214|code|MOV             R2, SP; ubp_av|106-70
74216|code|PUSH            {R2}; stack_end|4-180
74218|code|PUSH            {R0}; rtld_fini|1-180
74220|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
74224|code|PUSH.W          {R12}; fini|77-248-4-205
74228|code|LDR             R0, =(sub_11F6C+1); main|3-72
74230|code|LDR             R3, =(sub_16458+1); init|4-75
74232|code|BLX             __libc_start_main|255-247-68-236
74236|code|BLX             abort|255-247-48-236
74240|data|DCD nullsub_1+1|153-100-1-0
74244|data|DCD sub_11F6C+1|109-31-1-0
74248|data|DCD sub_16458+1|89-100-1-0
74252|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1221C)|20-48-159-229
74256|code|LDR             R2, =(__gmon_start___ptr_0 - 0x28000)|20-32-159-229
74260|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
74264|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
74268|code|CMP             R2, #0|0-0-82-227
74272|code|BXEQ            LR|30-255-47-1
74276|code|B               __gmon_start__|34-254-255-234
74280|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1221C|228-93-1-0
74284|data|DCD __gmon_start___ptr_0 - 0x28000|120-1-0-0
74288|code|LDR             R3, =unk_2818F|7-75
74290|code|MOV             R0, #0x2818C|72-242-140-16-192-242-2-0
74298|code|SUBS            R3, R3, R0|27-26
74300|code|CMP             R3, #6|6-43
74302|code|BLS             locret_1224C|5-217
74304|code|MOV             R3, #0|64-242-0-3-192-242-0-3
74312|code|CBZ             R3, locret_1224C|3-177
74314|code|BX              R3|24-71
74316|code|BX              LR|112-71
74318|data|ALIGN 0x10|0-191
74320|data|DCD unk_2818F|143-129-2-0
74324|code|MOVW            R3, #0x818C|72-242-140-19
74328|code|MOVW            R0, #0x818C|72-242-140-16
74332|code|MOVT.W          R3, #2|192-242-2-3
74336|code|MOVT.W          R0, #2|192-242-2-0
74340|code|SUBS            R1, R3, R0|25-26
74342|code|ASRS            R1, R1, #2|137-16
74344|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
74348|code|ASRS            R1, R1, #1|73-16
74350|code|BEQ             locret_1227C|5-208
74352|code|MOV             R3, #0|64-242-0-3-192-242-0-3
74360|code|CBZ             R3, locret_1227C|3-177
74362|code|BX              R3|24-71
74364|code|BX              LR|112-71
74366|data|ALIGN 0x10|0-191
74368|code|PUSH            {R4,LR}|16-181
74370|code|MOV             R4, #0x281F8|72-242-248-20-192-242-2-4
74378|code|LDRB            R3, [R4]|35-120
74380|code|CBNZ            R3, locret_12296|27-185
74382|code|BL              sub_12230|255-247-207-255
74386|code|MOVS            R3, #1|1-35
74388|code|STRB            R3, [R4]|35-112
74390|code|POP             {R4,PC}|16-189
74392|code|MOVW            R0, #0x7ED4|71-246-212-96
74396|code|PUSH            {R3,LR}|8-181
74398|code|MOVT.W          R0, #2|192-242-2-0
74402|code|LDR             R3, [R0]|3-104
74404|code|CBNZ            R3, loc_122AC|19-185
74406|code|POP.W           {R3,LR}|189-232-8-64
74410|code|B               sub_12254|211-231
74412|code|MOV             R3, #0|64-242-0-3-192-242-0-3
74420|code|CMP             R3, #0|0-43
74422|code|BEQ             loc_122A6|246-208
74424|code|BLX             R3|152-71
74426|code|B               loc_122A6|244-231
74428|code|PUSH            {R4,LR}|16-181
74430|code|MOV             R4, #0x281E8|72-242-232-20-192-242-2-4
74438|code|MOVW            R2, #0x6500|70-242-0-82
74442|code|MOVW            R3, #0x6530|70-242-48-83
74446|code|LDR             R0, [R4]|32-104
74448|code|MOVT.W          R2, #1|192-242-1-2
74452|code|MOVT.W          R3, #1|192-242-1-3
74456|code|MOVS            R1, #1|1-33
74458|code|BLX             __fprintf_chk|255-247-34-237
74462|code|MOVW            R0, #0x653C|70-242-60-80
74466|code|LDR             R3, [R4]; s|35-104
74468|code|MOVT.W          R0, #1; ptr|192-242-1-0
74472|code|MOVS            R1, #1; size|1-33
74474|code|MOV.W           R2, #0x138; n|79-244-156-114
74478|code|POP.W           {R4,LR}|189-232-16-64
74482|code|B.W             j_fwrite|255-247-221-188
74486|data|ALIGN 4|0-191
74488|code|MOVW            R3, #0x81E8|72-242-232-19
74492|code|MOVW            R1, #0x6688|70-242-136-97
74496|code|PUSH            {LR}|0-181
74498|code|MOVT.W          R3, #2|192-242-2-3
74502|code|SUB             SP, SP, #0xC|131-176
74504|code|LDR             R0, [R3]|24-104
74506|code|MOVW            R2, #0x6678|70-242-120-98
74510|code|MOVW            R3, #0x6530|70-242-48-83
74514|code|MOVT.W          R1, #1|192-242-1-1
74518|code|MOVT.W          R2, #1|192-242-1-2
74522|code|STR             R1, [SP,#0x10+var_10]|0-145
74524|code|MOVT.W          R3, #1|192-242-1-3
74528|code|MOVS            R1, #1|1-33
74530|code|BLX             __fprintf_chk|255-247-254-236
74534|code|ADD             SP, SP, #0xC|3-176
74536|code|POP.W           {PC}|93-248-4-251
74540|code|ADDS            R2, #2|2-50
74542|code|PUSH            {R4,LR}|16-181
74544|code|MOV             R4, R0|4-70
74546|code|CMP             R2, #4; switch 5 cases|4-42
74548|code|BHI             def_12336; jumptable 00012336 default case, case 1|46-216
74550|code|TBB.W           [PC,R2]; switch jump|223-232-2-240
74554|data|DCB 0x13; jump table for switch statement|19
74555|data|DCB 0x2D|45
74556|data|DCB 0xD|13
74557|data|DCB 7|7
74558|data|DCB 3|3
74559|data|ALIGN 2|0
74560|code|MOVS            R3, #1; jumptable 00012336 case 4|1-35
74562|code|STRB            R3, [R0,#0xC]|3-115
74564|code|MOV             R0, R3|24-70
74566|code|POP             {R4,PC}|16-189
74568|code|BL              sub_122F8; jumptable 00012336 case 3|255-247-214-255
74572|code|MOVS            R3, #1|1-35
74574|code|MOV             R0, R3|24-70
74576|code|STRB            R3, [R4,#1]|99-112
74578|code|POP             {R4,PC}|16-189
74580|code|BL              sub_122BC; jumptable 00012336 case 2|255-247-178-255
74584|code|MOVS            R3, #1|1-35
74586|code|MOVS            R0, #0|0-32
74588|code|STRB            R3, [R4]|35-112
74590|code|POP             {R4,PC}|16-189
74592|code|LDR             R3, [R0,#4]; jumptable 00012336 case 0|67-104
74594|code|ADDS            R3, #1|1-51
74596|code|STR             R3, [R0,#4]|67-96
74598|code|CMP             R3, #1|1-43
74600|code|BEQ             loc_12398|22-208
74602|code|CMP             R3, #2|2-43
74604|code|BEQ             def_12336; jumptable 00012336 default case, case 1|18-208
74606|code|MOVW            R1, #0x81E8|72-242-232-17
74610|code|MOVW            R2, #0x6690|70-242-144-98
74614|code|MOVT.W          R1, #2|192-242-2-1
74618|code|MOVW            R3, #0x6530|70-242-48-83
74622|code|LDR             R0, [R1]|8-104
74624|code|MOVT.W          R2, #1|192-242-1-2
74628|code|MOVT.W          R3, #1|192-242-1-3
74632|code|MOVS            R1, #1|1-33
74634|code|BLX             __fprintf_chk|255-247-202-236
74638|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
74642|code|POP             {R4,PC}|16-189
74644|code|MOVS            R0, #1; jumptable 00012336 default case, case 1|1-32
74646|code|POP             {R4,PC}|16-189
74648|code|STR             R1, [R0,#8]|129-96
74650|code|MOVS            R0, #0|0-32
74652|code|POP             {R4,PC}|16-189
74654|data|ALIGN 0x10|0-191
74656|code|PUSH.W          {R4-R10,LR}|45-233-240-71
74660|code|MOV             R4, #0x281B8|72-242-184-20-192-242-2-4
74668|code|SUB             SP, SP, #0x118|198-176
74670|code|LDR             R5, [R4]|37-104
74672|code|MOV             R7, R1|15-70
74674|code|MOV             R10, R0|130-70
74676|code|MOV             R9, R2|145-70
74678|code|MOV             R0, R1|8-70
74680|code|ADD             R2, SP, #0x138+var_12C|3-170
74682|code|MOVS            R1, #1|1-33
74684|code|STR             R5, [SP,#0x138+var_24]|69-149
74686|code|BLX             zip_open|255-247-200-236
74690|code|MOV             R6, R0|6-70
74692|code|CBZ             R0, loc_12416|56-179
74694|code|MOVW            R0, #0x1001; size|65-242-1-0
74698|code|BLX             malloc|255-247-146-236
74702|code|MOV             R8, R0|128-70
74704|code|CMP             R0, #0|0-40
74706|code|BEQ             loc_12456|64-208
74708|code|MOV.W           R1, #0x1000; size|79-244-128-81
74712|code|BLX             getcwd|255-247-180-236
74716|code|CBZ             R0, loc_1240E|184-177
74718|code|MOVS            R0, #0x28 ; '('; unsigned int|40-32
74720|code|BLX             _Znwj; operator new(uint)|255-247-76-236
74724|code|MOV             R1, R7|57-70
74726|code|MOV             R2, R6|50-70
74728|code|MOV             R3, R8|67-70
74730|code|MOV             R5, R0|5-70
74732|code|BL              sub_137B0|1-240-224-249
74736|code|MOV             R0, R8; ptr|64-70
74738|code|BLX             free|255-247-200-235
74742|code|MOV             R0, R5|40-70
74744|code|MOV             R1, R9|73-70
74746|code|BL              sub_1423C|1-240-31-255
74750|code|MOV             R0, R5|40-70
74752|code|LDR             R2, [SP,#0x138+var_24]|69-154
74754|code|LDR             R3, [R4]|35-104
74756|code|CMP             R2, R3|154-66
74758|code|BNE             loc_12452|36-209
74760|code|ADD             SP, SP, #0x118|70-176
74762|code|POP.W           {R4-R10,PC}|189-232-240-135
74766|code|BLX             perror|255-247-160-235
74770|code|MOVS            R0, #0|0-32
74772|code|B               loc_12400|244-231
74774|code|BLX             __errno_location|255-247-44-237
74778|code|LDR             R1, [SP,#0x138+var_12C]|3-153
74780|code|ADD             R5, SP, #0x138+var_124|5-173
74782|code|MOV.W           R2, #0x100|79-244-128-114
74786|code|MOVS            R3, #0|0-35
74788|code|STR             R1, [SP,#0x138+var_138]|0-145
74790|code|LDR             R1, [R0]|1-104
74792|code|MOV             R0, R5|40-70
74794|code|STR             R1, [SP,#0x138+var_134]|1-145
74796|code|BLX             zip_error_to_str|255-247-60-235
74800|code|MOV             R3, #0x281E8|72-242-232-19-192-242-2-3
74808|code|MOVW            R2, #0x66F0|70-242-240-98
74812|code|LDR             R0, [R3]|24-104
74814|code|MOVT.W          R2, #1|192-242-1-2
74818|code|MOV             R3, R10|83-70
74820|code|STR             R5, [SP,#0x138+var_134]|1-149
74822|code|STR             R7, [SP,#0x138+var_138]|0-151
74824|code|MOVS            R1, #1|1-33
74826|code|BLX             __fprintf_chk|255-247-106-236
74830|code|MOV             R0, R6|48-70
74832|code|B               loc_12400|214-231
74834|code|BLX             __stack_chk_fail|255-247-84-236
74838|code|MOVS            R0, #4; thrown_size|4-32
74840|code|BLX             __cxa_allocate_exception|255-247-104-236
74844|code|LDR             R3, =unk_281C8|61-75
74846|code|MOVW            R1, #0x81EC|72-242-236-17
74850|code|MOVW            R2, #0x1BB8|65-246-184-50
74854|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
74858|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
74862|code|STR             R3, [R0]|3-96
74864|code|BLX             __cxa_throw|255-247-134-236
74868|code|MOV             R5, R1|13-70
74870|code|CMP             R5, #1|1-45
74872|code|BEQ             loc_124F0|58-208
74874|code|CMP             R5, #2|2-45
74876|code|BEQ             loc_124A4|18-208
74878|code|BLX             __cxa_end_cleanup|255-247-80-235
74882|code|MOV             R6, R0|6-70
74884|code|MOV             R0, R5; void *|40-70
74886|code|MOV             R5, R1|13-70
74888|code|BLX             _ZdlPv; operator delete(void *)|255-247-26-235
74892|code|MOV             R0, R6; void *|48-70
74894|code|B               loc_12476|242-231
74896|code|BLX             __cxa_begin_catch|255-247-172-236
74900|code|MOV             R0, R5|40-70
74902|code|BL              sub_1380C|1-240-185-249
74906|code|MOV             R0, R5; void *|40-70
74908|code|BLX             _ZdlPv; operator delete(void *)|255-247-16-235
74912|code|BLX             __cxa_rethrow|255-247-26-235
74916|code|BLX             __cxa_begin_catch|255-247-162-236
74920|code|LDR             R3, [R0]|3-104
74922|code|MOV             R5, R0|5-70
74924|code|LDR             R3, [R3,#8]|155-104
74926|code|BLX             R3|152-71
74928|code|MOV             R2, #0x16740|70-242-64-114-192-242-1-2
74936|code|MOVS            R1, #1|1-33
74938|code|MOV             R3, R0|3-70
74940|code|MOVS            R0, #3|3-32
74942|code|BLX             __syslog_chk|255-247-236-235
74946|code|LDR             R2, [R5]|42-104
74948|code|MOV             R3, #0x281E8|72-242-232-19-192-242-2-3
74956|code|MOV             R0, R5|40-70
74958|code|LDR             R5, [R3]|29-104
74960|code|LDR             R3, [R2,#8]|147-104
74962|code|BLX             R3|152-71
74964|code|MOVW            R2, #0x675C|70-242-92-114
74968|code|MOV             R3, R10|83-70
74970|code|MOVT.W          R2, #1|192-242-1-2
74974|code|MOVS            R1, #1|1-33
74976|code|STR             R0, [SP,#0x138+var_138]|0-144
74978|code|MOV             R0, R5|40-70
74980|code|BLX             __fprintf_chk|255-247-28-236
74984|code|BLX             __cxa_end_catch|255-247-86-236
74988|code|MOVS            R0, #0; void *|0-32
74990|code|B               loc_12400|135-231
74992|code|LDR             R3, =unk_281C8|24-75
74994|code|STR             R3, [SP,#0x138+var_128]|4-147
74996|code|BLX             __cxa_begin_catch|255-247-122-236
75000|code|MOVW            R2, #0x6714|70-242-20-114
75004|code|MOV             R1, R5|41-70
75006|code|MOVT.W          R2, #1|192-242-1-2
75010|code|MOVS            R0, #3|3-32
75012|code|BLX             __syslog_chk|255-247-200-235
75016|code|MOVW            R1, #0x81E8|72-242-232-17
75020|code|MOVW            R2, #0x6728|70-242-40-114
75024|code|MOVT.W          R1, #2|192-242-2-1
75028|code|MOV             R3, R10|83-70
75030|code|LDR             R0, [R1]|8-104
75032|code|MOVT.W          R2, #1|192-242-1-2
75036|code|MOVS            R1, #1|1-33
75038|code|BLX             __fprintf_chk|255-247-0-236
75042|code|ADD             R0, SP, #0x138+var_128; this|4-168
75044|code|BLX             _ZNSt9bad_allocD1Ev; std::bad_alloc::~bad_alloc()|255-247-72-235
75048|code|BLX             __cxa_end_catch|255-247-54-236
75052|code|MOVS            R0, #0|0-32
75054|code|B               loc_12400|103-231
75056|code|MOV             R6, R0|6-70
75058|code|MOV             R5, R1|13-70
75060|code|BLX             __cxa_end_catch|255-247-48-236
75064|code|MOV             R0, R6|48-70
75066|code|B               loc_12476|156-231
75068|code|BLX             __cxa_end_catch|255-247-44-236
75072|code|BLX             __cxa_end_cleanup|255-247-238-234
75076|code|ADD             R0, SP, #0x138+var_128; this|4-168
75078|code|BLX             _ZNSt9bad_allocD1Ev; std::bad_alloc::~bad_alloc()|255-247-56-235
75082|code|BLX             __cxa_end_catch|255-247-38-236
75086|code|BLX             __cxa_end_cleanup|255-247-232-234
75090|data|ALIGN 4|0-191
75092|data|DCD unk_281C8|200-129-2-0
75096|code|PUSH            {R4,R5,LR}|48-181
75098|code|SUB             SP, SP, #0xC|131-176
75100|code|BLX             fuse_get_context|255-247-50-235
75104|code|MOV             R2, #0x16780|70-242-128-114-192-242-1-2
75112|code|MOVS            R1, #1|1-33
75114|code|LDR             R4, [R0,#0x10]|4-105
75116|code|MOVS            R0, #6|6-32
75118|code|LDR             R5, [R4,#0x24]|101-106
75120|code|LDR             R3, [R4,#0x20]|35-106
75122|code|STR             R5, [SP]|0-149
75124|code|BLX             __syslog_chk|255-247-144-235
75128|code|MOV             R0, R4|32-70
75130|code|ADD             SP, SP, #0xC|3-176
75132|code|POP             {R4,R5,PC}|48-189
75134|data|ALIGN 0x10|0-191
75136|code|PUSH            {R4,LR}|16-181
75138|code|MOV             R4, R0|4-70
75140|code|BL              sub_131FC|0-240-58-254
75144|code|CBZ             R4, loc_12596|44-177
75146|code|MOV             R0, R4|32-70
75148|code|BL              sub_1380C|1-240-62-249
75152|code|MOV             R0, R4|32-70
75154|code|BLX             _ZdlPv; operator delete(void *)|255-247-150-234
75158|code|MOVW            R2, #0x67A4|70-242-164-114
75162|code|MOVS            R0, #6|6-32
75164|code|MOVT.W          R2, #1|192-242-1-2
75168|code|MOVS            R1, #1|1-33
75170|code|POP.W           {R4,LR}|189-232-16-64
75174|code|B.W             j___syslog_chk|255-247-117-187
75178|data|ALIGN 4|0-191
75180|code|PUSH            {R4,LR}|16-181
75182|code|MOV             R4, R0|4-70
75184|code|BLX             fuse_get_context|255-247-8-235
75188|code|MOV             R1, R4|33-70
75190|code|POP.W           {R4,LR}|189-232-16-64
75194|code|LDR             R0, [R0,#0x10]|0-105
75196|code|B.W             sub_139F8|1-240-28-186
75200|code|PUSH            {R4-R6,LR}|112-181
75202|code|MOV             R4, R1|12-70
75204|code|MOV             R5, R0|5-70
75206|code|MOVS            R1, #0|0-33
75208|code|MOV             R0, R4|32-70
75210|code|MOVS            R2, #0x68 ; 'h'|104-34
75212|code|BLX             memset|255-247-156-234
75216|code|LDRB            R3, [R5]|43-120
75218|code|CMP             R3, #0|0-43
75220|code|BEQ             loc_12658|64-208
75222|code|ADDS            R0, R5, #1|104-28
75224|code|BL              sub_125AC|255-247-232-255
75228|code|MOV             R5, R0|5-70
75230|code|CMP             R0, #0|0-40
75232|code|BEQ             loc_12658|58-208
75234|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
75238|code|CBZ             R3, loc_12602|99-177
75240|code|MOV             R1, R0|1-70
75242|code|LDR.W           R3, [R1,#0x50]!|81-248-80-63
75246|code|CMP             R3, R1|139-66
75248|code|BEQ             loc_1265E|53-208
75250|code|MOVS            R2, #0|0-34
75252|code|LDR             R3, [R3]|27-104
75254|code|ADDS            R2, #1|1-50
75256|code|CMP             R1, R3|153-66
75258|code|BNE             loc_125F4|251-209
75260|code|ADDS            R2, #2|2-50
75262|code|STR             R2, [R4,#0x14]|98-97
75264|code|B               loc_12606|1-224
75266|code|MOVS            R3, #1|1-35
75268|code|STR             R3, [R4,#0x14]|99-97
75270|code|LDRD.W          R2, R3, [R5,#0x48]|213-233-18-35
75274|code|MOV.W           R6, #0x200|79-244-0-118
75278|code|LDR             R1, [R5,#0x1C]|233-105
75280|code|MOV             R0, R5|40-70
75282|code|STR             R6, [R4,#0x38]|166-99
75284|code|STRD.W          R2, R3, [R4,#0x60]|196-233-24-35
75288|code|STR             R1, [R4,#0x10]|33-97
75290|code|BL              sub_15020|2-240-1-253
75294|code|MOVW            R2, #0x1FF|64-242-255-18
75298|code|MOVS            R3, #0|0-35
75300|code|ADDS            R2, R2, R0|18-24
75302|code|MOV             R0, R5|40-70
75304|code|ADCS            R3, R1|75-65
75306|code|LSRS            R2, R2, #9|82-10
75308|code|ORR.W           R2, R2, R3,LSL#23|66-234-195-82
75312|code|LSRS            R1, R3, #9|89-10
75314|code|STR             R2, [R4,#0x40]|34-100
75316|code|STR             R1, [R4,#0x44]|97-100
75318|code|BL              sub_15020|2-240-243-252
75322|code|LDR             R6, [R5,#0x24]|110-106
75324|code|LDR             R2, [R5,#0x30]|42-107
75326|code|MOVS            R3, #0|0-35
75328|code|STR             R6, [R4,#0x48]|166-100
75330|code|LDR             R6, [R5,#0x20]|46-106
75332|code|STR             R6, [R4,#0x50]|38-101
75334|code|LDR             R6, [R5,#0x28]|174-106
75336|code|STR             R2, [R4,#0x18]|162-97
75338|code|LDR             R2, [R5,#0x34]|106-107
75340|code|STR             R6, [R4,#0x58]|166-101
75342|code|STR             R2, [R4,#0x1C]|226-97
75344|code|STRD.W          R0, R1, [R4,#0x30]|196-233-12-1
75348|code|MOV             R0, R3|24-70
75350|code|POP             {R4-R6,PC}|112-189
75352|code|MOV             R3, #0xFFFFFFFE|111-240-1-3
75356|code|B               loc_12654|250-231
75358|code|MOVS            R2, #2|2-34
75360|code|B               loc_125FE|205-231
75362|data|ALIGN 4|0-191
75364|code|LDRB            R3, [R0]|3-120
75366|code|CBZ             R3, loc_126D6|179-179
75368|code|PUSH.W          {R4-R9,LR}|45-233-240-67
75372|code|ADDS            R0, #1|1-48
75374|code|SUB             SP, SP, #0xC|131-176
75376|code|MOV             R7, R2|23-70
75378|code|MOV             R6, R1|14-70
75380|code|BL              sub_125AC|255-247-154-255
75384|code|MOV             R5, R0|5-70
75386|code|CBZ             R0, loc_126DC|120-179
75388|code|MOV.W           R9, #0|79-240-0-9
75392|code|MOV             R1, #0x167BC|70-242-188-113-192-242-1-1
75400|code|MOV             R2, R9|74-70
75402|code|STR.W           R9, [SP]|205-248-0-144
75406|code|MOV             R0, R6|48-70
75408|code|STR.W           R9, [SP,#4]|205-248-4-144
75412|code|MOV             R8, R9|200-70
75414|code|BLX             R7|184-71
75416|code|MOVW            R1, #0x67C0|70-242-192-113
75420|code|STR.W           R9, [SP]|205-248-0-144
75424|code|MOVT.W          R1, #1|192-242-1-1
75428|code|STR.W           R9, [SP,#4]|205-248-4-144
75432|code|MOV             R0, R6|48-70
75434|code|MOV             R2, R9|74-70
75436|code|BLX             R7|184-71
75438|code|LDR.W           R4, [R5,#0x50]!|85-248-80-79
75442|code|CMP             R4, R5|172-66
75444|code|BEQ             loc_126CE|11-208
75446|code|LDR             R3, [R4,#8]|163-104
75448|code|MOV             R0, R6|48-70
75450|code|MOVS            R2, #0|0-34
75452|code|LDR             R1, [R3,#0x38]|153-107
75454|code|STR.W           R9, [SP]|205-248-0-144
75458|code|STR.W           R8, [SP,#4]|205-248-4-128
75462|code|BLX             R7|184-71
75464|code|LDR             R4, [R4]|36-104
75466|code|CMP             R4, R5|172-66
75468|code|BNE             loc_126B6|243-209
75470|code|MOVS            R0, #0|0-32
75472|code|ADD             SP, SP, #0xC|3-176
75474|code|POP.W           {R4-R9,PC}|189-232-240-131
75478|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
75482|code|BX              LR|112-71
75484|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
75488|code|B               loc_126D0|246-231
75490|data|ALIGN 4|0-191
75492|code|PUSH            {R4-R7,LR}|240-181
75494|code|MOV             R4, #0x281B8|72-242-184-20-192-242-2-4
75502|code|SUB             SP, SP, #0x6C ; 'l'|155-176
75504|code|LDR             R3, [R4]|35-104
75506|code|MOV             R6, R1|14-70
75508|code|STR             R3, [SP,#0x64]|25-147
75510|code|BLX             fuse_get_context|255-247-102-234
75514|code|MOV             R1, SP|105-70
75516|code|LDR             R3, [R0,#0x10]|3-105
75518|code|LDR             R0, [R3,#0x24]|88-106
75520|code|BLX             statvfs64|255-247-32-234
75524|code|MOV             R5, R0|5-70
75526|code|CBZ             R0, loc_12718|56-177
75528|code|NEGS            R5, R0|69-66
75530|code|LDR             R2, [SP,#0x64]|25-154
75532|code|MOV             R0, R5|40-70
75534|code|LDR             R3, [R4]|35-104
75536|code|CMP             R2, R3|154-66
75538|code|BNE             loc_12758|33-209
75540|code|ADD             SP, SP, #0x6C ; 'l'|27-176
75542|code|POP             {R4-R7,PC}|240-189
75544|code|LDR             R7, [SP,#4]|1-159
75546|code|MOVS            R3, #1|1-35
75548|code|LDR             R2, [SP,#0x18]|6-154
75550|code|MOVS            R0, #0|0-32
75552|code|STR             R3, [R6]|51-96
75554|code|MOVS            R1, #0|0-33
75556|code|STRD.W          R0, R1, [R6,#0x28]|198-233-10-1
75560|code|UMULL.W         R2, R3, R2, R7|162-251-7-35
75564|code|STRD.W          R0, R1, [R6,#0x30]|198-233-12-1
75568|code|LDR             R1, [SP,#0x1C]|7-153
75570|code|MLA.W           R3, R7, R1, R3|7-251-1-51
75574|code|STRD.W          R2, R3, [R6,#0x10]|198-233-4-35
75578|code|STRD.W          R2, R3, [R6,#0x18]|198-233-6-35
75582|code|STRD.W          R2, R3, [R6,#8]|198-233-2-35
75586|code|BLX             fuse_get_context|255-247-64-234
75590|code|MOVS            R3, #0xFF|255-35
75592|code|LDR             R2, [R0,#0x10]|2-105
75594|code|LDR             R2, [R2,#0x18]|146-105
75596|code|STR             R3, [R6,#0x44]|115-100
75598|code|SUBS            R2, #1|1-58
75600|code|ASRS            R3, R2, #0x1F|211-23
75602|code|STRD.W          R2, R3, [R6,#0x20]|198-233-8-35
75606|code|B               loc_1270A|216-231
75608|code|BLX             __stack_chk_fail|255-247-208-234
75612|code|PUSH            {R4,R5,LR}|48-181
75614|code|MOV             R4, #0x281B8|72-242-184-20-192-242-2-4
75622|code|LDRB            R3, [R0]|3-120
75624|code|LDR             R2, [R4]|34-104
75626|code|SUB             SP, SP, #0xC|131-176
75628|code|STR             R2, [SP,#4]|1-146
75630|code|CBZ             R3, loc_12798|155-177
75632|code|ADDS            R0, #1|1-48
75634|code|MOV             R5, R1|13-70
75636|code|BL              sub_125AC|255-247-26-255
75640|code|MOV             R2, R0|2-70
75642|code|CBZ             R0, loc_12798|104-177
75644|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
75648|code|CBNZ            R3, loc_1279E|107-185
75650|code|ASRS            R3, R0, #0x1F|195-23
75652|code|STRD.W          R2, R3, [R5,#0x10]|197-233-4-35
75656|code|BL              sub_14DF8|2-240-54-251
75660|code|LDR             R2, [SP,#4]|1-154
75662|code|LDR             R3, [R4]|35-104
75664|code|CMP             R2, R3|154-66
75666|code|BNE             loc_127A4|7-209
75668|code|ADD             SP, SP, #0xC|3-176
75670|code|POP             {R4,R5,PC}|48-189
75672|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
75676|code|B               loc_1278C|246-231
75678|code|MOV             R0, #0xFFFFFFEB|111-240-20-0
75682|code|B               loc_1278C|243-231
75684|code|BLX             __stack_chk_fail|255-247-170-234
75688|code|CMP             R1, #1|1-41
75690|code|BEQ             loc_127B4|3-208
75692|code|CMP             R1, #2|2-41
75694|code|BEQ             loc_127D0|15-208
75696|code|BLX             __cxa_end_cleanup|255-247-182-233
75700|code|LDR             R3, =unk_281C8|13-75
75702|code|ADD             R5, SP, #8|2-173
75704|code|STR.W           R3, [R5,#-8]!|69-248-8-61
75708|code|BLX             __cxa_begin_catch|255-247-22-235
75712|code|MOV             R0, R5|40-70
75714|code|BLX             _ZNSt9bad_allocD1Ev; std::bad_alloc::~bad_alloc()|255-247-250-233
75718|code|BLX             __cxa_end_catch|255-247-232-234
75722|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
75726|code|B               loc_1278C|221-231
75728|code|LDR             R3, =0x28198|7-75
75730|code|ADD             R5, SP, #8|2-173
75732|code|STR.W           R3, [R5,#-8]!|69-248-8-61
75736|code|BLX             __cxa_begin_catch|255-247-8-235
75740|code|MOV             R0, R5|40-70
75742|code|BLX             _ZNSt9exceptionD1Ev; std::exception::~exception()|255-247-78-235
75746|code|BLX             __cxa_end_catch|255-247-218-234
75750|code|MOV             R0, #0xFFFFFFFB|111-240-4-0
75754|code|B               loc_1278C|207-231
75756|data|DCD unk_281C8|200-129-2-0
75760|data|DCD 0x28198|152-129-2-0
75764|code|LDRB            R3, [R0]|3-120
75766|code|CBZ             R3, loc_1285C|139-179
75768|code|PUSH.W          {R4-R8,LR}|45-233-240-65
75772|code|ADDS            R4, R0, #1|68-28
75774|code|SUB             SP, SP, #8|130-176
75776|code|MOV             R6, R2|22-70
75778|code|MOV             R0, R4|32-70
75780|code|MOV             R5, R1|13-70
75782|code|BL              sub_125AC|255-247-209-254
75786|code|CBNZ            R0, loc_12852|16-187
75788|code|BLX             fuse_get_context|255-247-218-233
75792|code|LDR             R3, [R0,#0x10]|3-105
75794|code|LDR             R7, [R3,#0x1C]|223-105
75796|code|BLX             fuse_get_context|255-247-214-233
75800|code|LDR.W           R8, [R0,#4]|208-248-4-128
75804|code|BLX             fuse_get_context|255-247-210-233
75808|code|MOV             R1, R4|33-70
75810|code|MOV             R2, R8|66-70
75812|code|LDR             R3, [R0,#8]|131-104
75814|code|MOV             R0, R7|56-70
75816|code|STR             R5, [SP]|0-149
75818|code|BL              sub_14CD4|2-240-83-250
75822|code|MOV             R4, R0|4-70
75824|code|CBZ             R0, loc_12862|184-177
75826|code|BLX             fuse_get_context|255-247-200-233
75830|code|MOV             R1, R4|33-70
75832|code|LDR             R0, [R0,#0x10]|0-105
75834|code|BL              sub_13AD4|1-240-75-249
75838|code|MOV             R2, R4|34-70
75840|code|ASRS            R3, R4, #0x1F|227-23
75842|code|MOV             R0, R4|32-70
75844|code|STRD.W          R2, R3, [R6,#0x10]|198-233-4-35
75848|code|ADD             SP, SP, #8|2-176
75850|code|POP.W           {R4-R8,LR}|189-232-240-65
75854|code|B.W             sub_14DF8|2-240-211-186
75858|code|MOV             R0, #0xFFFFFFEF|111-240-16-0
75862|code|ADD             SP, SP, #8|2-176
75864|code|POP.W           {R4-R8,PC}|189-232-240-129
75868|code|MOV             R0, #0xFFFFFFF3|111-240-12-0
75872|code|BX              LR|112-71
75874|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
75878|code|B               loc_12856|246-231
75880|code|LDR             R3, [SP,#8]|2-155
75882|code|LDR             R0, [R3,#0x10]|24-105
75884|code|B.W             sub_14EE8|2-240-60-187
75888|code|LDR             R3, [SP,#8]|2-155
75890|code|LDR             R0, [R3,#0x10]|24-105
75892|code|B.W             sub_14F14|2-240-78-187
75896|code|LDR             R0, [R1,#0x10]|8-105
75898|code|B.W             sub_14F4C|2-240-103-187
75902|data|ALIGN 0x10|0-191
75904|code|PUSH            {R3,LR}|8-181
75906|code|LDR             R1, [SP,#8]|2-153
75908|code|LDR             R0, [R1,#0x10]|8-105
75910|code|BL              sub_14FEC|2-240-177-251
75914|code|NEGS            R0, R0|64-66
75916|code|POP             {R3,PC}|8-189
75918|data|ALIGN 0x10|0-191
75920|code|PUSH            {R4-R6,LR}|112-181
75922|code|MOV             R5, R3|29-70
75924|code|LDRB            R3, [R0]|3-120
75926|code|CBZ             R3, loc_128D2|227-177
75928|code|ADDS            R0, #1|1-48
75930|code|MOV             R4, R2|20-70
75932|code|BL              sub_125AC|255-247-134-254
75936|code|MOV             R6, R0|6-70
75938|code|CBZ             R0, loc_128DE|224-177
75940|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
75944|code|CBNZ            R3, loc_128D8|179-185
75946|code|BL              sub_14DF8|2-240-165-250
75950|code|CBZ             R0, loc_128B2|0-177
75952|code|POP             {R4-R6,PC}|112-189
75954|code|MOV             R2, R4|34-70
75956|code|MOV             R3, R5|43-70
75958|code|MOV             R0, R6|48-70
75960|code|BL              sub_14FEC|2-240-152-251
75964|code|MOV             R4, R0|4-70
75966|code|MOV             R0, R6|48-70
75968|code|CBNZ            R4, loc_128CA|28-185
75970|code|POP.W           {R4-R6,LR}|189-232-112-64
75974|code|B.W             sub_14F4C|2-240-65-187
75978|code|BL              sub_14F4C|2-240-63-251
75982|code|NEGS            R0, R4|96-66
75984|code|POP             {R4-R6,PC}|112-189
75986|code|MOV             R0, #0xFFFFFFF3|111-240-12-0
75990|code|POP             {R4-R6,PC}|112-189
75992|code|MOV             R0, #0xFFFFFFEB|111-240-20-0
75996|code|B               locret_128B0|232-231
75998|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76002|code|POP             {R4-R6,PC}|112-189
76004|code|LDRB            R3, [R0]|3-120
76006|code|CBZ             R3, loc_1290A|131-177
76008|code|PUSH            {R4,LR}|16-181
76010|code|ADDS            R0, #1|1-48
76012|code|BL              sub_125AC|255-247-94-254
76016|code|MOV             R4, R0|4-70
76018|code|CBZ             R0, loc_12916|128-177
76020|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
76024|code|CBNZ            R3, loc_12910|83-185
76026|code|BLX             fuse_get_context|255-247-100-233
76030|code|MOV             R1, R4|33-70
76032|code|LDR             R0, [R0,#0x10]|0-105
76034|code|BL              sub_13944|1-240-31-248
76038|code|NEGS            R0, R0|64-66
76040|code|POP             {R4,PC}|16-189
76042|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76046|code|BX              LR|112-71
76048|code|MOV             R0, #0xFFFFFFEB|111-240-20-0
76052|code|POP             {R4,PC}|16-189
76054|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76058|code|POP             {R4,PC}|16-189
76060|code|LDRB            R3, [R0]|3-120
76062|code|CBZ             R3, loc_12952|195-177
76064|code|PUSH            {R4,LR}|16-181
76066|code|ADDS            R0, #1|1-48
76068|code|BL              sub_125AC|255-247-66-254
76072|code|MOV             R4, R0|4-70
76074|code|CBZ             R0, loc_1295E|192-177
76076|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
76080|code|CBZ             R3, loc_12958|147-177
76082|code|LDR             R2, [R0,#0x50]|2-109
76084|code|ADD.W           R3, R0, #0x50 ; 'P'|0-241-80-3
76088|code|CMP             R2, R3|154-66
76090|code|BNE             loc_1294C|7-209
76092|code|BLX             fuse_get_context|255-247-66-233
76096|code|MOV             R1, R4|33-70
76098|code|LDR             R0, [R0,#0x10]|0-105
76100|code|BL              sub_13944|0-240-254-255
76104|code|NEGS            R0, R0|64-66
76106|code|POP             {R4,PC}|16-189
76108|code|MOV             R0, #0xFFFFFFD9|111-240-38-0
76112|code|POP             {R4,PC}|16-189
76114|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76118|code|BX              LR|112-71
76120|code|MOV             R0, #0xFFFFFFEC|111-240-19-0
76124|code|POP             {R4,PC}|16-189
76126|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76130|code|POP             {R4,PC}|16-189
76132|code|LDRB            R3, [R0]|3-120
76134|code|CBZ             R3, loc_129D6|179-179
76136|code|PUSH.W          {R4-R9,LR}|45-233-240-67
76140|code|SUB             SP, SP, #0x14|133-176
76142|code|MOV             R5, R1|13-70
76144|code|MOV             R4, R0|4-70
76146|code|BLX             fuse_get_context|255-247-40-233
76150|code|ADDS            R4, #1|1-52
76152|code|MOV.W           R2, #0x800|79-244-0-98
76156|code|MOV             R1, R4|33-70
76158|code|LDR             R3, [R0,#0x10]|3-105
76160|code|LDR             R0, [R3,#0x1C]|216-105
76162|code|BLX             zip_dir_add|255-247-34-234
76166|code|CMP             R0, #0|0-40
76168|code|MOV             R6, R0|6-70
76170|code|SBCS.W          R3, R1, #0|113-241-0-3
76174|code|MOV             R7, R1|15-70
76176|code|BLT             loc_129DC|36-219
76178|code|BLX             fuse_get_context|255-247-24-233
76182|code|LDR             R3, [R0,#0x10]|3-105
76184|code|LDR.W           R8, [R3,#0x1C]|211-248-28-128
76188|code|BLX             fuse_get_context|255-247-18-233
76192|code|LDR.W           R9, [R0,#4]|208-248-4-144
76196|code|BLX             fuse_get_context|255-247-14-233
76200|code|MOV             R1, R4|33-70
76202|code|MOV             R2, R6|50-70
76204|code|MOV             R3, R7|59-70
76206|code|STR.W           R9, [SP]|205-248-0-144
76210|code|LDR             R4, [R0,#8]|132-104
76212|code|MOV             R0, R8|64-70
76214|code|STR             R5, [SP,#8]|2-149
76216|code|STR             R4, [SP,#4]|1-148
76218|code|BL              sub_15390|2-240-233-252
76222|code|MOV             R4, R0|4-70
76224|code|CBZ             R0, loc_129DC|96-177
76226|code|BLX             fuse_get_context|255-247-0-233
76230|code|MOV             R1, R4|33-70
76232|code|LDR             R0, [R0,#0x10]|0-105
76234|code|BL              sub_13AD4|1-240-131-248
76238|code|MOVS            R0, #0|0-32
76240|code|ADD             SP, SP, #0x14|5-176
76242|code|POP.W           {R4-R9,PC}|189-232-240-131
76246|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76250|code|BX              LR|112-71
76252|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
76256|code|B               loc_129D0|246-231
76258|data|ALIGN 4|0-191
76260|code|LDRB            R3, [R0]|3-120
76262|code|CBZ             R3, loc_12A00|91-177
76264|code|PUSH            {R4,LR}|16-181
76266|code|ADDS            R0, #1|1-48
76268|code|MOV             R4, R1|12-70
76270|code|BL              sub_125AC|255-247-221-253
76274|code|CBZ             R0, loc_12A06|64-177
76276|code|LDR             R1, [R4]|33-104
76278|code|LDR             R2, [R4,#8]|162-104
76280|code|BL              sub_1562C|2-240-24-254
76284|code|MOVS            R0, #0|0-32
76286|code|POP             {R4,PC}|16-189
76288|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76292|code|BX              LR|112-71
76294|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76298|code|POP             {R4,PC}|16-189
76300|code|MOV             R0, #0xFFFFFFA1|111-240-94-0
76304|code|BX              LR|112-71
76306|data|ALIGN 4|0-191
76308|code|MOV             R0, #0xFFFFFFA1|111-240-94-0
76312|code|BX              LR|112-71
76314|data|ALIGN 4|0-191
76316|code|MOV             R0, #0xFFFFFFA1|111-240-94-0
76320|code|BX              LR|112-71
76322|data|ALIGN 4|0-191
76324|code|MOV             R0, #0xFFFFFFA1|111-240-94-0
76328|code|BX              LR|112-71
76330|data|ALIGN 4|0-191
76332|code|LDRB            R3, [R0]|3-120
76334|code|CBZ             R3, loc_12A46|83-177
76336|code|PUSH            {R4,LR}|16-181
76338|code|ADDS            R0, #1|1-48
76340|code|MOV             R4, R1|12-70
76342|code|BL              sub_125AC|255-247-185-253
76346|code|CBZ             R0, loc_12A4C|56-177
76348|code|MOV             R1, R4|33-70
76350|code|BL              sub_15538|2-240-123-253
76354|code|MOVS            R0, #0|0-32
76356|code|POP             {R4,PC}|16-189
76358|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76362|code|BX              LR|112-71
76364|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76368|code|POP             {R4,PC}|16-189
76370|data|ALIGN 4|0-191
76372|code|LDRB            R3, [R0]|3-120
76374|code|CBZ             R3, loc_12A86|179-177
76376|code|PUSH            {R4-R6,LR}|112-181
76378|code|ADDS            R0, #1|1-48
76380|code|MOV             R4, R2|20-70
76382|code|MOV             R5, R1|13-70
76384|code|BL              sub_125AC|255-247-164-253
76388|code|MOV             R6, R0|6-70
76390|code|CBZ             R0, loc_12A8C|136-177
76392|code|ADDS            R2, R5, #1|106-28
76394|code|BEQ             loc_12A72|2-208
76396|code|MOV             R1, R5|41-70
76398|code|BL              sub_15554|2-240-113-253
76402|code|ADDS            R3, R4, #1|99-28
76404|code|BEQ             loc_12A82|5-208
76406|code|MOV             R0, R6|48-70
76408|code|MOV             R1, R4|33-70
76410|code|BL              sub_1555C|2-240-111-253
76414|code|MOVS            R0, #0|0-32
76416|code|POP             {R4-R6,PC}|112-189
76418|code|MOVS            R0, #0|0-32
76420|code|POP             {R4-R6,PC}|112-189
76422|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76426|code|BX              LR|112-71
76428|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76432|code|POP             {R4-R6,PC}|112-189
76434|data|ALIGN 4|0-191
76436|code|MOVS            R0, #0|0-32
76438|code|BX              LR|112-71
76440|code|MOVS            R0, #0|0-32
76442|code|BX              LR|112-71
76444|code|MOVS            R0, #0|0-32
76446|code|BX              LR|112-71
76448|code|MOVS            R0, #0|0-32
76450|code|BX              LR|112-71
76452|code|MOVS            R0, #0|0-32
76454|code|BX              LR|112-71
76456|code|MOVS            R0, #0|0-32
76458|code|BX              LR|112-71
76460|code|LDRB            R3, [R0]|3-120
76462|code|CBZ             R3, loc_12B14|139-179
76464|code|PUSH.W          {R4-R9,LR}|45-233-240-67
76468|code|ADDS            R0, #1|1-48
76470|code|SUB             SP, SP, #0xC|131-176
76472|code|MOV             R6, R2|22-70
76474|code|MOV             R7, R1|15-70
76476|code|BL              sub_125AC|255-247-118-253
76480|code|MOV             R5, R0|5-70
76482|code|CBZ             R0, loc_12B1A|80-179
76484|code|LDR             R3, [R0,#0x1C]|195-105
76486|code|AND.W           R3, R3, #0xF000|3-244-112-67
76490|code|CMP.W           R3, #0xA000|179-245-32-79
76494|code|IT NE|24-191
76496|code|MOVNE           R0, #0xFFFFFFEA|111-240-21-0
76500|code|BNE             loc_12AE8|8-209
76502|code|BL              sub_14DF8|2-240-143-249
76506|code|MOV             R4, R0|4-70
76508|code|CBZ             R0, loc_12AEE|56-177
76510|code|CMN.W           R0, #0x18|16-241-24-15
76514|code|IT EQ|8-191
76516|code|MOVEQ           R0, #0xFFFFFFF4|111-240-11-0
76520|code|ADD             SP, SP, #0xC|3-176
76522|code|POP.W           {R4-R9,PC}|189-232-240-131
76526|code|SUBS            R2, R6, #1|114-30
76528|code|MOV             R1, R7|57-70
76530|code|MOV.W           R8, #0|79-240-0-8
76534|code|MOV.W           R9, #0|79-240-0-9
76538|code|MOV             R0, R5|40-70
76540|code|STRD.W          R8, R9, [SP]|205-233-0-137
76544|code|BL              sub_14EE8|2-240-242-249
76548|code|STRB            R4, [R7,R0]|60-84
76550|code|MOV             R0, R5|40-70
76552|code|BL              sub_14F4C|2-240-32-250
76556|code|MOV             R0, R4|32-70
76558|code|ADD             SP, SP, #0xC|3-176
76560|code|POP.W           {R4-R9,PC}|189-232-240-131
76564|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76568|code|BX              LR|112-71
76570|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
76574|code|B               loc_12AE8|227-231
76576|code|LDRB            R3, [R1]|11-120
76578|code|CMP             R3, #0|0-43
76580|code|BEQ             loc_12BAA|65-208
76582|code|PUSH.W          {R4-R6,R8,R9,LR}|45-233-112-67
76586|code|ADDS            R4, R1, #1|76-28
76588|code|SUB             SP, SP, #8|130-176
76590|code|MOV             R5, R0|5-70
76592|code|MOV             R0, R4|32-70
76594|code|BL              sub_125AC|255-247-59-253
76598|code|CBNZ            R0, loc_12BA0|152-187
76600|code|BLX             fuse_get_context|255-247-68-232
76604|code|MOV             R1, R4|33-70
76606|code|LDR             R3, [R0,#0x10]|3-105
76608|code|LDR             R0, [R3,#0x1C]|216-105
76610|code|BL              sub_14C5C|2-240-139-248
76614|code|MOV             R6, R0|6-70
76616|code|CBZ             R0, loc_12B96|40-179
76618|code|BLX             fuse_get_context|255-247-60-232
76622|code|MOV             R1, R6|49-70
76624|code|LDR             R0, [R0,#0x10]|0-105
76626|code|BL              sub_13AD4|0-240-191-255
76630|code|MOV             R0, R6|48-70
76632|code|BL              sub_14DF8|2-240-78-249
76636|code|MOV             R4, R0|4-70
76638|code|CBZ             R0, loc_12B6E|48-177
76640|code|CMN.W           R0, #0x18|16-241-24-15
76644|code|BEQ             loc_12B96|23-208
76646|code|MOV             R0, R4|32-70
76648|code|ADD             SP, SP, #8|2-176
76650|code|POP.W           {R4-R6,R8,R9,PC}|189-232-112-131
76654|code|MOV             R0, R5|40-70
76656|code|MOV.W           R8, #0|79-240-0-8
76660|code|BLX             strlen|255-247-44-232
76664|code|MOV.W           R9, #0|79-240-0-9
76668|code|MOV             R1, R5|41-70
76670|code|STRD.W          R8, R9, [SP]|205-233-0-137
76674|code|MOV             R2, R0|2-70
76676|code|MOV             R0, R6|48-70
76678|code|BL              sub_14F14|2-240-197-249
76682|code|MOV             R5, R0|5-70
76684|code|MOV             R0, R6|48-70
76686|code|BL              sub_14F4C|2-240-221-249
76690|code|CMP             R5, #0|0-45
76692|code|BGE             loc_12B66|231-218
76694|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
76698|code|ADD             SP, SP, #8|2-176
76700|code|POP.W           {R4-R6,R8,R9,PC}|189-232-112-131
76704|code|MOV             R0, #0xFFFFFFEF|111-240-16-0
76708|code|ADD             SP, SP, #8|2-176
76710|code|POP.W           {R4-R6,R8,R9,PC}|189-232-112-131
76714|code|MOV             R0, #0xFFFFFFF3|111-240-12-0
76718|code|BX              LR|112-71
76720|code|MOVW            R3, #0x81B8|72-242-184-19
76724|code|PUSH.W          {R4-R11,LR}|45-233-240-79
76728|code|MOVT.W          R3, #2|192-242-2-3
76732|code|SUB             SP, SP, #0x74 ; 't'|157-176
76734|code|MOV             R2, R3|26-70
76736|code|LDR             R2, [R2]|18-104
76738|code|STR             R3, [SP,#0x14]|5-147
76740|code|LDRB            R3, [R0]|3-120
76742|code|STR             R2, [SP,#0x6C]|27-146
76744|code|CMP             R3, #0|0-43
76746|code|BEQ.W           loc_12F36|0-240-180-129
76750|code|ADDS            R5, R0, #1|69-28
76752|code|MOV             R7, R1|15-70
76754|code|MOV             R0, R5|40-70
76756|code|BL              sub_125AC|255-247-234-252
76760|code|STR             R0, [SP,#0xC]|3-144
76762|code|CMP             R0, #0|0-40
76764|code|BEQ.W           loc_12F36|0-240-171-129
76768|code|LDRB            R3, [R7]|59-120
76770|code|CMP             R3, #0|0-43
76772|code|BEQ.W           loc_12F3C|0-240-170-129
76776|code|ADDS            R6, R7, #1|126-28
76778|code|MOV             R0, R6|48-70
76780|code|BL              sub_125AC|255-247-222-252
76784|code|MOV             R4, R0|4-70
76786|code|CBZ             R0, loc_12C06|64-177
76788|code|BLX             fuse_get_context|254-247-230-239
76792|code|MOV             R1, R4|33-70
76794|code|LDR             R0, [R0,#0x10]|0-105
76796|code|BL              sub_13944|0-240-162-254
76800|code|NEGS            R4, R0|68-66
76802|code|CMP             R0, #0|0-40
76804|code|BNE             loc_12CF6|119-209
76806|code|MOV             R0, R7|56-70
76808|code|BLX             strlen|254-247-226-239
76812|code|MOV             R7, R0|7-70
76814|code|MOV             R0, R5|40-70
76816|code|BLX             strlen|254-247-222-239
76820|code|LDR             R2, [SP,#0xC]|3-154
76822|code|LDR             R3, =unk_281E4|179-75
76824|code|LDRB.W          R1, [R2,#0x40]|146-248-64-16
76828|code|STR             R3, [SP,#0x18]|6-147
76830|code|ADD.W           R8, R0, #1|0-241-1-8
76834|code|CMP             R1, #0|0-41
76836|code|BEQ             loc_12D0A|113-208
76838|code|MOVS            R1, #1|1-33
76840|code|MOVW            R10, #0x81D8|72-242-216-26
76844|code|ADD             R1, R7|57-68
76846|code|ADD             R0, SP, #0x18|6-168
76848|code|MOVT.W          R10, #2|192-242-2-10
76852|code|BLX             _ZNSs7reserveEj; std::string::reserve(uint)|255-247-46-233
76856|code|MOV             R0, R6|48-70
76858|code|MOVW            R10, #0x81D8|72-242-216-26
76862|code|BLX             strlen|254-247-200-239
76866|code|MOV             R1, R6|49-70
76868|code|MOVT.W          R10, #2|192-242-2-10
76872|code|MOV             R2, R0|2-70
76874|code|ADD             R0, SP, #0x18|6-168
76876|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|255-247-218-232
76880|code|LDR             R3, [SP,#0xC]|3-155
76882|code|MOV             R10, #0x281D8|72-242-216-26-192-242-2-10
76890|code|LDRB.W          R3, [R3,#0x40]|147-248-64-48
76894|code|CBZ             R3, loc_12CA8|27-179
76896|code|LDR             R3, [SP,#0x18]|6-155
76898|code|LDR.W           R2, [R3,#-0xC]|83-248-12-44
76902|code|LDR.W           R1, [R3,#-8]|83-248-8-28
76906|code|ADDS            R4, R2, #1|84-28
76908|code|CMP             R4, R1|140-66
76910|code|BLS             loc_12D10|79-217
76912|code|MOVW            R10, #0x81D8|72-242-216-26
76916|code|ADD             R0, SP, #0x18|6-168
76918|code|MOV             R1, R4|33-70
76920|code|MOVT.W          R10, #2|192-242-2-10
76924|code|BLX             _ZNSs7reserveEj; std::string::reserve(uint)|255-247-10-233
76928|code|LDR             R3, [SP,#0x18]|6-155
76930|code|LDR.W           R2, [R3,#-0xC]|83-248-12-44
76934|code|MOVS            R1, #0x2F ; '/'|47-33
76936|code|STRB            R1, [R3,R2]|153-84
76938|code|LDR             R3, [SP,#0x18]|6-155
76940|code|MOV             R10, #0x281D8|72-242-216-26-192-242-2-10
76948|code|SUB.W           R2, R3, #0xC|163-241-12-2
76952|code|CMP             R2, R10|82-69
76954|code|ITTTT NE|31-191
76956|code|STRNE.W         R4, [R3,#-0xC]|67-248-12-76
76960|code|MOVNE           R2, #0|0-34
76962|code|STRNE.W         R2, [R3,#-4]|67-248-4-44
76966|code|STRBNE          R2, [R3,R4]|26-85
76968|code|BLX             fuse_get_context|254-247-140-239
76972|code|LDR             R3, [SP,#0xC]|3-155
76974|code|LDR             R2, [R0,#0x10]|2-105
76976|code|LDRB.W          R3, [R3,#0x40]|147-248-64-48
76980|code|LDR.W           R11, [R2,#0x1C]|210-248-28-176
76984|code|CMP             R3, #0|0-43
76986|code|BNE             loc_12D4C|71-209
76988|code|LDR             R3, [SP,#0xC]|3-155
76990|code|LDRD.W          R2, R3, [R3,#0x48]|211-233-18-35
76994|code|CMP             R2, #0|0-42
76996|code|SBCS.W          R1, R3, #0|115-241-0-1
77000|code|BLT             loc_12CDA|7-219
77002|code|LDR             R1, [SP,#0x18]|6-153
77004|code|MOV.W           R4, #0x800|79-244-0-100
77008|code|MOV             R0, R11|88-70
77010|code|STMEA.W         SP, {R1,R4}|141-232-18-0
77014|code|BLX             zip_file_rename|254-247-12-239
77018|code|BLX             fuse_get_context|254-247-116-239
77022|code|LDR             R0, [R0,#0x10]|0-105
77024|code|MOVS            R3, #1|1-35
77026|code|LDR             R1, [SP,#0xC]|3-153
77028|code|LDR             R2, [SP,#0x18]|6-154
77030|code|BL              sub_13CDC|0-240-249-255
77034|code|MOVS            R4, #0|0-36
77036|code|LDR             R3, [SP,#0x18]|6-155
77038|code|SUB.W           R0, R3, #0xC|163-241-12-0
77042|code|CMP             R0, R10|80-69
77044|code|BNE             loc_12D1A|17-209
77046|code|LDR             R3, [SP,#0x14]|5-155
77048|code|MOV             R0, R4|32-70
77050|code|LDR             R2, [SP,#0x6C]|27-154
77052|code|LDR             R3, [R3]|27-104
77054|code|CMP             R2, R3|154-66
77056|code|BNE.W           loc_12FD2|64-240-103-129
77060|code|ADD             SP, SP, #0x74 ; 't'|29-176
77062|code|POP.W           {R4-R11,PC}|189-232-240-143
77066|code|SUBS            R7, #1|1-63
77068|code|MOV             R8, R0|128-70
77070|code|B               loc_12C28|139-231
77072|code|LDR.W           R1, [R3,#-4]|83-248-4-28
77076|code|CMP             R1, #0|0-41
77078|code|BGT             loc_12C70|171-220
77080|code|B               loc_12C86|181-231
77082|code|MOV             R2, #0x11DF8|65-246-248-82-192-242-1-2
77090|code|CMP             R2, #0|0-42
77092|code|BEQ.W           loc_12F42|0-240-13-129
77096|code|SUBS            R3, #4|4-59
77098|code|DMB.W           SY|191-243-95-143
77102|code|LDREX.W         R2, [R3]|83-232-0-47
77106|code|SUBS            R1, R2, #1|81-30
77108|code|STREX.W         R5, R1, [R3]|67-232-0-21
77112|code|CMP             R5, #0|0-45
77114|code|BNE             loc_12D2E|248-209
77116|code|DMB.W           SY|191-243-95-143
77120|code|CMP             R2, #0|0-42
77122|code|BGT             loc_12CF6|216-220
77124|code|ADD             R1, SP, #0x1C|7-169
77126|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-44-239
77130|code|B               loc_12CF6|212-231
77132|code|MOVS            R3, #0|0-35
77134|code|ADD             R0, SP, #0x44 ; 'D'|17-168
77136|code|MOV             R1, R3|25-70
77138|code|STR             R3, [SP,#0x44]|17-147
77140|code|STR             R3, [SP,#0x48]|18-147
77142|code|STR             R3, [SP,#0x4C]|19-147
77144|code|STR             R3, [SP,#0x50]|20-147
77146|code|STR             R3, [SP,#0x54]|21-147
77148|code|STR             R3, [SP,#0x58]|22-147
77150|code|STR             R3, [SP,#0x5C]|23-147
77152|code|STR             R3, [SP,#0x60]|24-147
77154|code|STR             R3, [SP,#0x64]|25-147
77156|code|STR             R3, [SP,#0x68]|26-147
77158|code|BL              sub_13054|0-240-117-249
77162|code|LDR             R1, [SP,#0x58]|22-153
77164|code|ADD             R0, SP, #0x1C|7-168
77166|code|LDR             R2, [SP,#0x68]|26-154
77168|code|MOVS            R5, #0|0-37
77170|code|LDR             R3, [SP,#0x5C]|23-155
77172|code|SUBS            R2, R2, R1|82-26
77174|code|LDR             R1, [SP,#0x60]|24-153
77176|code|LDR             R4, [SP,#0x54]|21-156
77178|code|SUBS            R3, R3, R1|91-26
77180|code|ASRS            R2, R2, #2|146-16
77182|code|LDR             R6, [SP,#0x4C]|19-158
77184|code|SUBS            R2, #1|1-58
77186|code|ASRS            R3, R3, #2|155-16
77188|code|STR             R5, [SP,#0x1C]|7-149
77190|code|SUBS            R1, R4, R6|161-27
77192|code|ADD.W           R3, R3, R2,LSL#7|3-235-194-19
77196|code|STR             R5, [SP,#0x20]|8-149
77198|code|ADD.W           R1, R3, R1,ASR#2|3-235-161-1
77202|code|STR             R5, [SP,#0x24]|9-149
77204|code|STR             R5, [SP,#0x28]|10-149
77206|code|STR             R5, [SP,#0x2C]|11-149
77208|code|STR             R5, [SP,#0x30]|12-149
77210|code|STR             R5, [SP,#0x34]|13-149
77212|code|STR             R5, [SP,#0x38]|14-149
77214|code|STR             R5, [SP,#0x3C]|15-149
77216|code|STR             R5, [SP,#0x40]|16-149
77218|code|BL              sub_13054|0-240-87-249
77222|code|LDR             R4, [SP,#0x58]|22-156
77224|code|LDR             R2, [SP,#0x68]|26-154
77226|code|LDR             R1, [SP,#0x60]|24-153
77228|code|LDR             R3, [SP,#0x5C]|23-155
77230|code|SUBS            R2, R2, R4|18-27
77232|code|LDR             R0, [SP,#0x4C]|19-152
77234|code|SUBS            R3, R3, R1|91-26
77236|code|ASRS            R2, R2, #2|146-16
77238|code|LDR             R5, [SP,#0x54]|21-157
77240|code|SUBS            R2, #1|1-58
77242|code|ASRS            R1, R3, #2|153-16
77244|code|LDR             R6, [SP,#0x2C]|11-158
77246|code|RSB.W           LR, R0, R5|192-235-5-14
77250|code|ADD.W           R2, R1, R2,LSL#7|1-235-194-18
77254|code|LDR             R3, [SP,#0x24]|9-155
77256|code|ADD.W           R2, R2, LR,ASR#2|2-235-174-2
77260|code|LDR.W           LR, [SP,#0x30]|221-248-48-224
77264|code|CMP             R2, #0|0-42
77266|code|BLE             loc_12DFE|20-221
77268|code|LDR.W           R1, [R0],#4|80-248-4-27
77272|code|ADDS            R3, #4|4-51
77274|code|CMP             R0, R5|168-66
77276|code|STR.W           R1, [R3,#-4]|67-248-4-28
77280|code|ITTT EQ|2-191
77282|code|LDREQ           R0, [R4,#4]|96-104
77284|code|ADDEQ           R4, #4|4-52
77286|code|ADDEQ.W         R5, R0, #0x200|0-245-0-117
77290|code|CMP             R3, R6|179-66
77292|code|ITTT EQ|2-191
77294|code|LDREQ.W         R3, [LR,#4]|222-248-4-48
77298|code|ADDEQ.W         LR, LR, #4|14-241-4-14
77302|code|ADDEQ.W         R6, R3, #0x200|3-245-0-118
77306|code|SUBS            R2, #1|1-58
77308|code|BNE             loc_12DD4|234-209
77310|code|ADD             R0, SP, #0x44 ; 'D'|17-168
77312|code|BL              sub_1302C|0-240-20-249
77316|code|LDR             R2, [SP,#0x3C]|15-154
77318|code|LDR             R3, [SP,#0x34]|13-155
77320|code|SUBS            R2, #4|4-58
77322|code|CMP             R3, R2|147-66
77324|code|BEQ.W           loc_12F6A|0-240-173-128
77328|code|CBZ             R3, loc_12E18|19-177
77330|code|LDR             R2, [SP,#0xC]|3-154
77332|code|STR             R2, [R3]|26-96
77334|code|LDR             R3, [SP,#0x34]|13-155
77336|code|ADDS            R3, #4|4-51
77338|code|STR             R3, [SP,#0x34]|13-147
77340|code|MOV             R2, #0x167C4|70-242-196-114-192-242-1-2
77348|code|STR             R2, [SP,#0x10]|4-146
77350|code|LDR             R2, [SP,#0x24]|9-154
77352|code|CMP             R2, R3|154-66
77354|code|BEQ.W           loc_12FA2|0-240-186-128
77358|code|LDR             R1, [SP,#0x2C]|11-153
77360|code|LDR             R4, [R2]|20-104
77362|code|SUBS            R1, #4|4-57
77364|code|CMP             R2, R1|138-66
77366|code|BEQ.W           loc_12F4E|0-240-138-128
77370|code|ADDS            R2, #4|4-50
77372|code|STR             R2, [SP,#0x24]|9-146
77374|code|MOV             R9, R4|161-70
77376|code|LDR.W           R6, [R9,#0x50]!|89-248-80-111
77380|code|CMP             R6, R9|78-69
77382|code|BNE             loc_12E82|28-209
77384|code|B               loc_12E26|237-231
77386|code|LDRD.W          R2, R3, [R4,#0x48]|212-233-18-35
77390|code|CMP             R2, #0|0-42
77392|code|SBCS.W          R1, R3, #0|115-241-0-1
77396|code|BLT             loc_12E64|6-219
77398|code|MOV.W           R1, #0x800|79-244-0-97
77402|code|STR             R5, [SP]|0-149
77404|code|STR             R1, [SP,#4]|1-145
77406|code|MOV             R0, R11|88-70
77408|code|BLX             zip_file_rename|254-247-70-238
77412|code|BLX             fuse_get_context|254-247-174-238
77416|code|LDR             R0, [R0,#0x10]|0-105
77418|code|MOV             R1, R4|33-70
77420|code|MOV             R2, R5|42-70
77422|code|MOVS            R3, #0|0-35
77424|code|BL              sub_13CDC|0-240-52-255
77428|code|MOV             R0, R5|40-70
77430|code|BLX             free|254-247-134-238
77434|code|LDR             R6, [R6]|54-104
77436|code|LDR             R3, [SP,#0x34]|13-155
77438|code|CMP             R6, R9|78-69
77440|code|BEQ             loc_12E26|209-208
77442|code|LDR             R2, [SP,#0x3C]|15-154
77444|code|LDR             R4, [R6,#8]|180-104
77446|code|SUBS            R2, #4|4-58
77448|code|CMP             R3, R2|147-66
77450|code|BEQ             loc_12EE8|45-208
77452|code|CBZ             R3, loc_12E92|11-177
77454|code|STR             R4, [R3]|28-96
77456|code|LDR             R3, [SP,#0x34]|13-155
77458|code|ADDS            R3, #4|4-51
77460|code|STR             R3, [SP,#0x34]|13-147
77462|code|LDR             R3, [R4,#0x3C]|227-107
77464|code|LDRB.W          R2, [R4,#0x40]|148-248-64-32
77468|code|LDR.W           R3, [R3,#-0xC]|83-248-12-60
77472|code|CMP             R2, #0|0-42
77474|code|ADD             R3, R7|59-68
77476|code|IT NE|24-191
77478|code|MOVNE           R0, #2|2-32
77480|code|RSB.W           R3, R8, R3|200-235-3-3
77484|code|IT EQ|8-191
77486|code|MOVEQ           R0, #1|1-32
77488|code|ADD             R0, R3|24-68
77490|code|BLX             malloc|254-247-30-239
77494|code|MOV             R5, R0|5-70
77496|code|CMP             R0, #0|0-40
77498|code|BEQ             loc_12F2A|54-208
77500|code|LDR             R1, [SP,#0x18]|6-153
77502|code|BLX             strcpy|254-247-184-238
77506|code|LDR             R1, [R4,#0x3C]|225-107
77508|code|ADDS            R0, R5, R7|232-25
77510|code|ADD             R1, R8|65-68
77512|code|BLX             strcpy|254-247-178-238
77516|code|LDRB.W          R3, [R4,#0x40]|148-248-64-48
77520|code|CMP             R3, #0|0-43
77522|code|BEQ             loc_12E4A|186-208
77524|code|MOV             R0, R5|40-70
77526|code|BLX             strlen|254-247-124-238
77530|code|LDR             R3, [SP,#0x10]|4-155
77532|code|LDRH            R3, [R3]|27-136
77534|code|STRH            R3, [R5,R0]|43-82
77536|code|B               loc_12E4A|179-231
77538|data|ALIGN 4|0-191
77540|data|DCD unk_281E4|228-129-2-0
77544|code|LDR             R5, [SP,#0x40]|16-157
77546|code|LDR             R2, [SP,#0x1C]|7-154
77548|code|LDR             R3, [SP,#0x20]|8-155
77550|code|SUBS            R2, R5, R2|170-26
77552|code|SUB.W           R3, R3, R2,ASR#2|163-235-162-3
77556|code|CMP             R3, #1|1-43
77558|code|BLS             loc_12F1C|17-217
77560|code|MOV.W           R0, #0x200|79-244-0-112
77564|code|BLX             _Znwj; operator new(uint)|254-247-190-238
77568|code|STR             R0, [R5,#4]|104-96
77570|code|LDR             R3, [SP,#0x34]|13-155
77572|code|CBZ             R3, loc_12F08|3-177
77574|code|STR             R4, [R3]|28-96
77576|code|LDR             R3, [SP,#0x40]|16-155
77578|code|ADDS            R2, R3, #4|26-29
77580|code|STR             R2, [SP,#0x40]|16-146
77582|code|LDR             R3, [R3,#4]|91-104
77584|code|ADD.W           R2, R3, #0x200|3-245-0-114
77588|code|STR             R2, [SP,#0x3C]|15-146
77590|code|STR             R3, [SP,#0x38]|14-147
77592|code|STR             R3, [SP,#0x34]|13-147
77594|code|B               loc_12E96|188-231
77596|code|ADD             R0, SP, #0x1C|7-168
77598|code|MOVS            R1, #1|1-33
77600|code|MOVS            R2, #0|0-34
77602|code|BL              sub_13108|0-240-241-248
77606|code|LDR             R5, [SP,#0x40]|16-157
77608|code|B               loc_12EF8|230-231
77610|code|ADD             R0, SP, #0x1C|7-168
77612|code|MOV             R4, #0xFFFFFFF4|111-240-11-4
77616|code|BL              sub_1302C|0-240-124-248
77620|code|B               loc_12CEC|218-230
77622|code|MOV             R4, #0xFFFFFFFE|111-240-1-4
77626|code|B               loc_12CF6|220-230
77628|code|MOV             R4, #0xFFFFFFEA|111-240-21-4
77632|code|B               loc_12CF6|217-230
77634|code|LDR.W           R2, [R3,#-4]|83-248-4-44
77638|code|SUBS            R1, R2, #1|81-30
77640|code|STR.W           R1, [R3,#-4]|67-248-4-28
77644|code|B               loc_12D40|248-230
77646|code|LDR             R0, [SP,#0x28]|10-152
77648|code|BLX             _ZdlPv; operator delete(void *)|254-247-182-237
77652|code|LDR             R2, [SP,#0x30]|12-154
77654|code|LDR             R3, [SP,#0x34]|13-155
77656|code|ADDS            R1, R2, #4|17-29
77658|code|STR             R1, [SP,#0x30]|12-145
77660|code|LDR             R2, [R2,#4]|82-104
77662|code|ADD.W           R1, R2, #0x200|2-245-0-113
77666|code|STR             R1, [SP,#0x2C]|11-145
77668|code|STR             R2, [SP,#0x28]|10-146
77670|code|STR             R2, [SP,#0x24]|9-146
77672|code|B               loc_12E3E|105-231
77674|code|LDR             R4, [SP,#0x40]|16-156
77676|code|LDR             R2, [SP,#0x1C]|7-154
77678|code|LDR             R3, [SP,#0x20]|8-155
77680|code|SUBS            R2, R4, R2|162-26
77682|code|SUB.W           R3, R3, R2,ASR#2|163-235-162-3
77686|code|CMP             R3, #1|1-43
77688|code|BLS             loc_12FAA|23-217
77690|code|MOV.W           R0, #0x200|79-244-0-112
77694|code|BLX             _Znwj; operator new(uint)|254-247-126-238
77698|code|STR             R0, [R4,#4]|96-96
77700|code|LDR             R3, [SP,#0x34]|13-155
77702|code|CBZ             R3, loc_12F8C|11-177
77704|code|LDR             R2, [SP,#0xC]|3-154
77706|code|STR             R2, [R3]|26-96
77708|code|LDR             R3, [SP,#0x40]|16-155
77710|code|ADDS            R2, R3, #4|26-29
77712|code|STR             R2, [SP,#0x40]|16-146
77714|code|LDR             R2, [R3,#4]|90-104
77716|code|ADD.W           R3, R2, #0x200|2-245-0-115
77720|code|STR             R3, [SP,#0x3C]|15-147
77722|code|STR             R2, [SP,#0x38]|14-146
77724|code|MOV             R3, R2|19-70
77726|code|STR             R2, [SP,#0x34]|13-146
77728|code|B               loc_12E1C|60-231
77730|code|ADD             R0, SP, #0x1C|7-168
77732|code|BL              sub_1302C|0-240-66-248
77736|code|B               loc_12CBC|136-230
77738|code|ADD             R0, SP, #0x1C|7-168
77740|code|MOVS            R1, #1|1-33
77742|code|MOVS            R2, #0|0-34
77744|code|BL              sub_13108|0-240-170-248
77748|code|LDR             R4, [SP,#0x40]|16-156
77750|code|B               loc_12F7A|224-231
77752|code|MOV             R4, R0|4-70
77754|code|ADD             R0, SP, #0x1C|7-168
77756|code|BL              sub_1302C|0-240-54-248
77760|code|MOV             R0, R4|32-70
77762|code|BLX             __cxa_begin_catch|254-247-20-239
77766|code|BLX             __cxa_end_catch|254-247-232-238
77770|code|MOV             R4, #0xFFFFFFFB|111-240-4-4
77774|code|B               loc_12CEC|141-230
77776|code|B               loc_12FC2|247-231
77778|code|BLX             __stack_chk_fail|254-247-148-238
77782|code|LDR             R2, [SP,#0x18]|6-154
77784|code|SUB.W           R0, R2, #0xC|162-241-12-0
77788|code|CMP             R0, R10|80-69
77790|code|BNE             loc_12FF0|7-209
77792|code|BLX             __cxa_end_cleanup|254-247-158-237
77796|code|MOV             R4, R0|4-70
77798|code|ADD             R0, SP, #0x44 ; 'D'|17-168
77800|code|BL              sub_1302C|0-240-32-248
77804|code|MOV             R0, R4|32-70
77806|code|B               loc_12FC2|232-231
77808|code|MOVW            R3, #0x1DF8|65-246-248-83
77812|code|SUBS            R1, R2, #4|17-31
77814|code|MOVT.W          R3, #1|192-242-1-3
77818|code|CBZ             R3, loc_1301E|131-177
77820|code|DMB.W           SY|191-243-95-143
77824|code|LDREX.W         R3, [R1]|81-232-0-63
77828|code|SUBS            R2, R3, #1|90-30
77830|code|STREX.W         R4, R2, [R1]|65-232-0-36
77834|code|CMP             R4, #0|0-44
77836|code|BNE             loc_13000|248-209
77838|code|DMB.W           SY|191-243-95-143
77842|code|CMP             R3, #0|0-43
77844|code|BGT             loc_12FE0|228-220
77846|code|ADD             R1, SP, #0x1C|7-169
77848|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-194-237
77852|code|B               loc_12FE0|224-231
77854|code|LDR.W           R3, [R2,#-4]|82-248-4-60
77858|code|SUBS            R1, R3, #1|89-30
77860|code|STR.W           R1, [R2,#-4]|66-248-4-28
77864|code|B               loc_13012|243-231
77866|data|ALIGN 4|0-191
77868|code|PUSH            {R4-R6,LR}|112-181
77870|code|MOV             R6, R0|6-70
77872|code|LDR             R0, [R0]|0-104
77874|code|CBZ             R0, loc_13050|104-177
77876|code|LDR             R5, [R6,#0x24]|117-106
77878|code|LDR             R4, [R6,#0x14]|116-105
77880|code|ADDS            R5, #4|4-53
77882|code|CMP             R4, R5|172-66
77884|code|BCS             loc_1304C|6-210
77886|code|LDR.W           R0, [R4],#4; void *|84-248-4-11
77890|code|BLX             _ZdlPv; operator delete(void *)|254-247-62-237
77894|code|CMP             R5, R4|165-66
77896|code|BHI             loc_1303E|249-216
77898|code|LDR             R0, [R6]; void *|48-104
77900|code|BLX             _ZdlPv; operator delete(void *)|254-247-56-237
77904|code|MOV             R0, R6|48-70
77906|code|POP             {R4-R6,PC}|112-189
77908|code|PUSH.W          {R4-R10,LR}|45-233-240-71
77912|code|LSRS            R5, R1, #7|205-9
77914|code|MOV             R7, R0|7-70
77916|code|ADDS            R0, R5, #3|232-28
77918|code|CMP             R0, #8|8-40
77920|code|MOV             R8, R1|136-70
77922|code|ADD.W           R5, R5, #1|5-241-1-5
77926|code|IT CC|56-191
77928|code|MOVCC           R0, #8|8-32
77930|code|STR             R0, [R7,#4]|120-96
77932|code|LSLS            R0, R0, #2; unsigned int|128-0
77934|code|BLX             _Znwj; operator new(uint)|254-247-6-238
77938|code|LDR             R6, [R7,#4]|126-104
77940|code|SUBS            R6, R6, R5|118-27
77942|code|LSRS            R6, R6, #1|118-8
77944|code|ADD.W           R9, R0, R6,LSL#2|0-235-134-9
77948|code|MOV             R10, R0|130-70
77950|code|ADD.W           R5, R9, R5,LSL#2|9-235-133-5
77954|code|STR             R0, [R7]|56-96
77956|code|CMP             R9, R5|169-69
77958|code|BCS             loc_1309A|8-210
77960|code|MOV             R4, R9|76-70
77962|code|MOV.W           R0, #0x200; unsigned int|79-244-0-112
77966|code|BLX             _Znwj; operator new(uint)|254-247-246-237
77970|code|STR.W           R0, [R4],#4|68-248-4-11
77974|code|CMP             R5, R4|165-66
77976|code|BHI             loc_1308A|247-216
77978|code|STR.W           R9, [R7,#0x14]|199-248-20-144
77982|code|SUBS            R2, R5, #4|42-31
77984|code|LDR.W           R1, [R10,R6,LSL#2]|90-248-38-16
77988|code|AND.W           R3, R8, #0x7F|8-240-127-3
77992|code|STR             R2, [R7,#0x24]|122-98
77994|code|ADD.W           R2, R1, #0x200|1-245-0-114
77998|code|STR             R2, [R7,#0x10]|58-97
78000|code|STR             R1, [R7,#0xC]|249-96
78002|code|LDR.W           R2, [R5,#-4]|85-248-4-44
78006|code|STR             R1, [R7,#8]|185-96
78008|code|ADD.W           R3, R2, R3,LSL#2|2-235-131-3
78012|code|ADD.W           R1, R2, #0x200|2-245-0-113
78016|code|STR             R3, [R7,#0x18]|187-97
78018|code|STR             R2, [R7,#0x1C]|250-97
78020|code|STR             R1, [R7,#0x20]|57-98
78022|code|POP.W           {R4-R10,PC}|189-232-240-135
78026|code|BLX             __cxa_begin_catch|254-247-144-238
78030|code|CMP             R4, R9|76-69
78032|code|BLS             loc_130DE|5-217
78034|code|LDR.W           R0, [R9],#4; void *|89-248-4-11
78038|code|BLX             _ZdlPv; operator delete(void *)|254-247-244-236
78042|code|CMP             R4, R9|76-69
78044|code|BHI             loc_130D2|249-216
78046|code|BLX             __cxa_rethrow|254-247-252-236
78050|code|MOV             R4, R0|4-70
78052|code|BLX             __cxa_end_catch|254-247-88-238
78056|code|MOV             R0, R4; void *|32-70
78058|code|BLX             __cxa_begin_catch|254-247-128-238
78062|code|LDR             R0, [R7]; void *|56-104
78064|code|BLX             _ZdlPv; operator delete(void *)|254-247-230-236
78068|code|MOVS            R3, #0|0-35
78070|code|STR             R3, [R7]|59-96
78072|code|STR             R3, [R7,#4]|123-96
78074|code|BLX             __cxa_rethrow|254-247-238-236
78078|code|BLX             __cxa_end_catch|254-247-76-238
78082|code|BLX             __cxa_end_cleanup|254-247-14-237
78086|data|ALIGN 4|0-191
78088|code|PUSH.W          {R4-R10,LR}|45-233-240-71
78092|code|MOV             R7, R0|7-70
78094|code|MOV             R9, R1|137-70
78096|code|LDR             R0, [R0,#0x24]|64-106
78098|code|LDR             R1, [R7,#0x14]; src|121-105
78100|code|MOV             R4, R2|20-70
78102|code|LDR             R5, [R7,#4]|125-104
78104|code|SUBS            R3, R0, R1|67-26
78106|code|ASRS            R3, R3, #2|155-16
78108|code|ADD.W           R8, R3, #1|3-241-1-8
78112|code|ADD.W           R6, R8, R9|8-235-9-6
78116|code|CMP.W           R5, R6,LSL#1|181-235-70-15
78120|code|BLS             loc_13152|19-217
78122|code|SUBS            R5, R5, R6|173-27
78124|code|LDR             R3, [R7]|59-104
78126|code|LSRS            R5, R5, #1|109-8
78128|code|LSLS            R5, R5, #2|173-0
78130|code|CBZ             R2, loc_13138|10-177
78132|code|MOV.W           R4, R9,LSL#2|79-234-137-4
78136|code|ADDS            R2, R4, R5|98-25
78138|code|ADDS            R4, R3, R2|156-24
78140|code|ADDS            R2, R0, #4|2-29
78142|code|CMP             R1, R4|161-66
78144|code|SUB.W           R2, R2, R1; n|162-235-1-2
78148|code|BLS             loc_131BC|58-217
78150|code|LSRS            R3, R2, #2|147-8
78152|code|BEQ             loc_13194|36-208
78154|code|MOV             R0, R4; dest|32-70
78156|code|BLX             memmove|254-247-12-238
78160|code|B               loc_13194|32-224
78162|code|ADDS            R3, R5, #2|171-28
78164|code|CMP             R9, R5|169-69
78166|code|ITE CS|44-191
78168|code|ADDCS.W         R5, R3, R9|3-235-9-5
78172|code|ADDCC           R5, R3, R5|93-25
78174|code|CMP.W           R5, #0x40000000|181-241-128-79
78178|code|BCS             loc_131D4|55-210
78180|code|LSLS            R0, R5, #2; unsigned int|168-0
78182|code|SUBS            R6, R5, R6|174-27
78184|code|BLX             _Znwj; operator new(uint)|254-247-136-237
78188|code|LSRS            R6, R6, #1|118-8
78190|code|LSLS            R6, R6, #2|182-0
78192|code|MOV             R10, R0|130-70
78194|code|CBZ             R4, loc_13178|12-177
78196|code|MOV.W           R4, R9,LSL#2|79-234-137-4
78200|code|LDR             R3, [R7,#0x24]|123-106
78202|code|ADD             R4, R6|52-68
78204|code|LDR             R1, [R7,#0x14]; src|121-105
78206|code|ADD             R4, R10|84-68
78208|code|ADDS            R2, R3, #4|26-29
78210|code|SUBS            R2, R2, R1; n|82-26
78212|code|LSRS            R3, R2, #2|147-8
78214|code|BNE             loc_131CC|33-209
78216|code|LDR             R0, [R7]; void *|56-104
78218|code|BLX             _ZdlPv; operator delete(void *)|254-247-154-236
78222|code|STR.W           R10, [R7]|199-248-0-160
78226|code|STR             R5, [R7,#4]|125-96
78228|code|STR             R4, [R7,#0x14]|124-97
78230|code|ADD.W           R3, R8, #0x40000000|8-241-128-67
78234|code|LDR             R2, [R4]|34-104
78236|code|SUBS            R3, #1|1-59
78238|code|ADD.W           R1, R2, #0x200|2-245-0-113
78242|code|ADD.W           R0, R4, R3,LSL#2|4-235-131-0
78246|code|STR             R2, [R7,#0xC]|250-96
78248|code|STR             R0, [R7,#0x24]|120-98
78250|code|STR             R1, [R7,#0x10]|57-97
78252|code|LDR.W           R3, [R4,R3,LSL#2]|84-248-35-48
78256|code|ADD.W           R2, R3, #0x200|3-245-0-114
78260|code|STR             R2, [R7,#0x20]|58-98
78262|code|STR             R3, [R7,#0x1C]|251-97
78264|code|POP.W           {R4-R10,PC}|189-232-240-135
78268|code|LSRS            R3, R2, #2|147-8
78270|code|BEQ             loc_13194|233-208
78272|code|RSB.W           R0, R2, R8,LSL#2|194-235-136-0
78276|code|ADD             R0, R4; dest|32-68
78278|code|BLX             memmove|254-247-208-237
78282|code|B               loc_13194|227-231
78284|code|MOV             R0, R4; dest|32-70
78286|code|BLX             memmove|254-247-204-237
78290|code|B               loc_13188|217-231
78292|code|BLX             _ZSt17__throw_bad_allocv; std::__throw_bad_alloc(void)|254-247-230-237
78296|code|PUSH            {R4-R6,LR}|112-181
78298|code|MOV             R6, R1|14-70
78300|code|MOV             R4, R0|4-70
78302|code|CBZ             R0, loc_131F8|88-177
78304|code|LDR             R5, [R2]|21-104
78306|code|LDR             R0, [R4,#0x10]; s1|32-105
78308|code|MOV             R1, R5; s2|41-70
78310|code|BLX             strcmp|254-247-62-238
78314|code|CMP             R0, #0|0-40
78316|code|ITET GE|170-191
78318|code|MOVGE           R6, R4|38-70
78320|code|LDRLT           R4, [R4,#0xC]|228-104
78322|code|LDRGE           R4, [R4,#8]|164-104
78324|code|CMP             R4, #0|0-44
78326|code|BNE             loc_131E2|244-209
78328|code|MOV             R0, R6|48-70
78330|code|POP             {R4-R6,PC}|112-189
78332|code|PUSH.W          {R4-R6,R8,R9,LR}|45-233-112-67
78336|code|ADD.W           R8, R0, #8|0-241-8-8
78340|code|LDR             R6, [R0,#0x10]|6-105
78342|code|SUB             SP, SP, #8|130-176
78344|code|CMP             R6, R8|70-69
78346|code|BEQ             loc_1323A|22-208
78348|code|MOVW            R9, #0x6D48|70-246-72-89
78352|code|MOV             R5, R0|5-70
78354|code|MOVT.W          R9, #1|192-242-1-9
78358|code|LDR             R4, [R6,#0x14]|116-105
78360|code|LDR             R3, [R5]|43-104
78362|code|CMP             R3, R4|163-66
78364|code|BEQ             loc_1322E|7-208
78366|code|CMP             R4, #0|0-44
78368|code|BEQ             loc_132CA|83-208
78370|code|LDR             R3, [R4,#0xC]|227-104
78372|code|LDRB            R1, [R4,#0x19]|97-126
78374|code|SUBS            R2, R3, #2|154-30
78376|code|CMP             R2, #1|1-42
78378|code|BLS             loc_13240|9-217
78380|code|CBNZ            R1, loc_13252|137-185
78382|code|MOV             R0, R6|48-70
78384|code|BLX             _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|254-247-218-236
78388|code|CMP             R0, R8|64-69
78390|code|MOV             R6, R0|6-70
78392|code|BNE             loc_13216|237-209
78394|code|ADD             SP, SP, #8|2-176
78396|code|POP.W           {R4-R6,R8,R9,PC}|189-232-112-131
78400|code|LDRB.W          R2, [R4,#0x40]|148-248-64-32
78404|code|CMP             R2, #0|0-42
78406|code|BNE             loc_1322C|241-209
78408|code|MOV             R0, R4|32-70
78410|code|BL              sub_14F80|1-240-153-254
78414|code|CBNZ            R0, loc_132B4|136-187
78416|code|LDR             R3, [R4,#0xC]|227-104
78418|code|CMP             R3, #4|4-43
78420|code|BEQ             loc_13276|15-208
78422|code|MOV             R0, R4|32-70
78424|code|BL              sub_155E8|2-240-198-249
78428|code|CMP             R0, #0|0-40
78430|code|BEQ             loc_1322E|230-208
78432|code|MOVW            R2, #0x693C|70-246-60-18
78436|code|LDR             R3, [R4,#0x3C]|227-107
78438|code|MOVT.W          R2, #1|192-242-1-2
78442|code|STR             R0, [SP,#0x20+var_20]|0-144
78444|code|MOVS            R1, #1|1-33
78446|code|MOVS            R0, #3|3-32
78448|code|BLX             __syslog_chk|254-247-18-237
78452|code|B               loc_1322E|219-231
78454|code|LDRD.W          R0, R1, [R4,#0x48]|212-233-18-1
78458|code|LDRD.W          R2, R3, [R9]|217-233-0-35
78462|code|CMP             R1, R3|153-66
78464|code|IT EQ|8-191
78466|code|CMPEQ           R0, R2|144-66
78468|code|BNE             loc_13256|231-209
78470|code|LDR             R0, [R5,#0x1C]|232-105
78472|code|MOV.W           R2, #0x800|79-244-0-98
78476|code|LDR             R1, [R4,#0x3C]|225-107
78478|code|BLX             zip_dir_add|254-247-156-237
78482|code|CMP             R0, #0|0-40
78484|code|SBCS.W          R3, R1, #0|113-241-0-3
78488|code|IT GE|168-191
78490|code|STRDGE.W        R0, R1, [R4,#0x48]|196-233-18-1
78494|code|BGE             loc_13256|218-218
78496|code|MOVW            R2, #0x6910|70-246-16-18
78500|code|LDR             R3, [R4,#0x3C]|227-107
78502|code|MOVT.W          R2, #1|192-242-1-2
78506|code|MOVS            R0, #3|3-32
78508|code|MOVS            R1, #1|1-33
78510|code|BLX             __syslog_chk|254-247-244-236
78514|code|B               loc_1322E|188-231
78516|code|MOVW            R2, #0x68E0|70-246-224-2
78520|code|LDR             R3, [R4,#0x3C]|227-107
78522|code|MOVT.W          R2, #1|192-242-1-2
78526|code|STR             R0, [SP,#0x20+var_20]|0-144
78528|code|MOVS            R1, #1|1-33
78530|code|MOVS            R0, #3|3-32
78532|code|BLX             __syslog_chk|254-247-232-236
78536|code|B               loc_1322E|177-231
78538|code|MOVW            R0, #0x68C0|70-246-192-0
78542|code|MOVW            R1, #0x68D0|70-246-208-1
78546|code|MOVW            R3, #0x67C8|70-242-200-115
78550|code|MOVT.W          R0, #1; assertion|192-242-1-0
78554|code|MOVT.W          R1, #1; file|192-242-1-1
78558|code|MOVT.W          R3, #1; function|192-242-1-3
78562|code|MOVS            R2, #0xFF; line|255-34
78564|code|BLX             __assert_fail|254-247-58-236
78568|code|PUSH            {R4-R7,LR}|240-181
78570|code|MOV             R4, #0x281B8|72-242-184-20-192-242-2-4
78578|code|LDRB            R3, [R0]|3-120
78580|code|LDR             R2, [R4]|34-104
78582|code|SUB             SP, SP, #0x1C|135-176
78584|code|MOV             R5, R0|5-70
78586|code|STR             R2, [SP,#0x30+var_1C]|5-146
78588|code|CBZ             R3, loc_13318|99-177
78590|code|MOV             R1, #asc_16988; needle|70-246-136-17-192-242-1-1
78598|code|BLX             strstr|254-247-206-236
78602|code|CBNZ            R0, loc_13366|96-187
78604|code|LDR             R2, [SP,#0x30+var_1C]|5-154
78606|code|LDR             R3, [R4]|35-104
78608|code|CMP             R2, R3|154-66
78610|code|BNE             loc_13362|38-209
78612|code|ADD             SP, SP, #0x1C|7-176
78614|code|POP             {R4-R7,PC}|240-189
78616|code|MOVS            R0, #8; thrown_size|8-32
78618|code|ADD             R6, SP, #0x30+var_20|4-174
78620|code|BLX             __cxa_allocate_exception|254-247-6-237
78624|code|MOV             R1, #0x16978|70-246-120-17-192-242-1-1
78632|code|ADD             R2, SP, #0x30+var_28|2-170
78634|code|MOV             R4, R0|4-70
78636|code|MOV             R0, R6|48-70
78638|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-116-236
78642|code|MOV             R0, R4; this|32-70
78644|code|MOV             R1, R6; std::string *|49-70
78646|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|254-247-0-236
78650|code|LDR             R3, [SP,#0x30+var_20]|4-155
78652|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
78660|code|SUB.W           R0, R3, #0xC|163-241-12-0
78664|code|CMP             R0, R2|144-66
78666|code|BNE             loc_133C0|57-209
78668|code|MOVW            R1, #0x81A8|72-242-168-17
78672|code|MOVW            R2, #0x1D74|65-246-116-82
78676|code|MOV             R0, R4; void *|32-70
78678|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
78682|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
78686|code|BLX             __cxa_throw|254-247-16-237
78690|code|BLX             __stack_chk_fail|254-247-204-236
78694|code|MOVS            R0, #8; thrown_size|8-32
78696|code|BLX             __cxa_allocate_exception|254-247-224-236
78700|code|MOV             R1, #0x1698C|70-246-140-17-192-242-1-1
78708|code|ADD             R2, SP, #0x30+var_2C|1-170
78710|code|MOV             R7, R0|7-70
78712|code|ADD             R0, SP, #0x30+var_24|3-168
78714|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-78-236
78718|code|ADD             R6, SP, #0x30+var_20|4-174
78720|code|ADD             R1, SP, #0x30+var_24|3-169
78722|code|MOV             R2, R5|42-70
78724|code|MOV             R0, R6|48-70
78726|code|BL              sub_14724|1-240-205-249
78730|code|MOV             R0, R7; this|56-70
78732|code|MOV             R1, R6; std::string *|49-70
78734|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|254-247-212-235
78738|code|LDR             R0, [SP,#0x30+var_20]|4-152
78740|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
78748|code|SUBS            R0, #0xC|12-56
78750|code|CMP             R0, R4|160-66
78752|code|BNE             loc_133D0|22-209
78754|code|LDR             R0, [SP,#0x30+var_24]|3-152
78756|code|SUBS            R0, #0xC|12-56
78758|code|CMP             R0, R4|160-66
78760|code|BNE             loc_133C8|14-209
78762|code|MOVW            R1, #0x81A8|72-242-168-17
78766|code|MOVW            R2, #0x1D74|65-246-116-82
78770|code|MOV             R0, R7; void *|56-70
78772|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
78776|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
78780|code|BLX             __cxa_throw|254-247-224-236
78784|code|ADD             R1, SP, #0x30+var_24|3-169
78786|code|BL              sub_11EA0|254-247-109-253
78790|code|B               loc_1334C|193-231
78792|code|MOV             R1, R6|49-70
78794|code|BL              sub_11EA0|254-247-105-253
78798|code|B               loc_133AA|236-231
78800|code|ADD             R1, SP, #0x30+var_28|2-169
78802|code|BL              sub_11EA0|254-247-101-253
78806|code|B               loc_133A2|228-231
78808|code|LDR             R3, [SP,#0x30+var_20]|4-155
78810|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
78818|code|SUB.W           R0, R3, #0xC|163-241-12-0
78822|code|CMP             R0, R4|160-66
78824|code|BEQ             loc_133F0|2-208
78826|code|ADD             R1, SP, #0x30+var_28|2-169
78828|code|BL              sub_11EA0|254-247-88-253
78832|code|LDR             R3, [SP,#0x30+var_24]|3-155
78834|code|SUB.W           R0, R3, #0xC|163-241-12-0
78838|code|CMP             R0, R4|160-66
78840|code|BEQ             loc_13400|2-208
78842|code|ADD             R1, SP, #0x30+var_28|2-169
78844|code|BL              sub_11EA0|254-247-80-253
78848|code|MOV             R0, R7; void *|56-70
78850|code|BLX             __cxa_free_exception|254-247-154-236
78854|code|BLX             __cxa_end_cleanup|254-247-140-235
78858|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
78866|code|B               loc_133F0|237-231
78868|code|B               loc_13400|244-231
78870|code|LDR             R3, [SP,#0x30+var_20]|4-155
78872|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
78880|code|SUB.W           R0, R3, #0xC|163-241-12-0
78884|code|CMP             R0, R2|144-66
78886|code|BEQ             loc_1342E|2-208
78888|code|ADD             R1, SP, #0x30+var_24|3-169
78890|code|BL              sub_11EA0|254-247-57-253
78894|code|MOV             R0, R4; void *|32-70
78896|code|BLX             __cxa_free_exception|254-247-130-236
78900|code|BLX             __cxa_end_cleanup|254-247-116-235
78904|code|B               loc_1342E|249-231
78906|data|ALIGN 4|0-191
78908|code|PUSH.W          {R4-R10,LR}|45-233-240-71
78912|code|MOV             R9, #0x281B8|72-242-184-25-192-242-2-9
78920|code|MOV             R10, R1|138-70
78922|code|LDR.W           R1, [R9]|217-248-0-16
78926|code|SUB             SP, SP, #0x18|134-176
78928|code|MOV             R8, R0|128-70
78930|code|MOV             R7, R3|31-70
78932|code|MOV             R5, R2|21-70
78934|code|STR             R1, [SP,#0x38+var_24]|5-145
78936|code|BL              sub_132E8|255-247-70-255
78940|code|LDRB.W          R3, [R8]|152-248-0-48
78944|code|CMP             R3, #0|0-43
78946|code|BEQ.W           loc_13674|0-240-7-129
78950|code|MOV             R0, R8; s|64-70
78952|code|BLX             strlen|254-247-178-235
78956|code|ADDS            R1, R0, #5; unsigned int|65-29
78958|code|MOV             R0, R7; this|56-70
78960|code|BLX             _ZNSs7reserveEj; std::string::reserve(uint)|254-247-16-237
78964|code|MOVW            R1, #0x6674|70-242-116-97
78968|code|MOV             R0, R7; this|56-70
78970|code|MOVS            R2, #0; unsigned int|0-34
78972|code|MOVT.W          R1, #1; char *|192-242-1-1
78976|code|BLX             _ZNSs6assignEPKcj; std::string::assign(char const*,uint)|254-247-108-236
78980|code|LDRB.W          R3, [R8]|152-248-0-48
78984|code|CMP             R3, #0x2F ; '/'|47-43
78986|code|BEQ.W           loc_135EE|0-240-176-128
78990|code|MOV             R4, R8|68-70
78992|code|MOVS            R6, #0|0-38
78994|code|B               loc_134B6|16-224
78996|code|CMP.W           R10, #0|186-241-0-15
79000|code|BEQ.W           loc_1362A|0-240-199-128
79004|code|CMP             R5, #0|0-45
79006|code|BEQ.W           loc_13612|0-240-184-128
79010|code|MOVW            R1, #0x6A4C|70-246-76-33
79014|code|MOV             R0, R7; this|56-70
79016|code|MOVT.W          R1, #1; char *|192-242-1-1
79020|code|MOVS            R2, #2; unsigned int|2-34
79022|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-170-236
79026|code|ADDS            R4, #3|3-52
79028|code|MOVS            R6, #1|1-38
79030|code|MOVW            R1, #0x6A50|70-246-80-33
79034|code|MOV             R0, R4; s1|32-70
79036|code|MOVT.W          R1, #1; s2|192-242-1-1
79040|code|MOVS            R2, #3; n|3-34
79042|code|BLX             strncmp|254-247-172-236
79046|code|CMP             R0, #0|0-40
79048|code|BEQ             loc_13494|228-208
79050|code|CMP             R5, R6|181-66
79052|code|BHI             loc_13552|65-216
79054|code|CMP             R5, #0|0-45
79056|code|BNE             loc_13562|71-209
79058|code|LDRB            R6, [R4]|38-120
79060|code|CBZ             R6, loc_13540|166-179
79062|code|CMP             R6, #0x2F ; '/'|47-46
79064|code|BEQ.W           loc_13710|0-240-26-129
79068|code|ADDS            R0, R4, #1; s|96-28
79070|code|MOVS            R1, #0x2F ; '/'; c|47-33
79072|code|BLX             strchr|254-247-0-235
79076|code|MOV             R5, R0|5-70
79078|code|CBZ             R0, loc_13508|120-177
79080|code|SUBS            R2, R0, R4|2-27
79082|code|CMP             R2, #1|1-42
79084|code|BEQ             loc_13574|66-208
79086|code|CMP             R2, #2|2-42
79088|code|IT EQ|8-191
79090|code|CMPEQ           R6, #0x2E ; '.'|46-46
79092|code|BEQ             loc_135E6|119-208
79094|code|MOV             R1, R4; char *|33-70
79096|code|ADDS            R2, #1; unsigned int|1-50
79098|code|MOV             R0, R7; this|56-70
79100|code|ADDS            R4, R5, #1|108-28
79102|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-130-236
79106|code|LDRB            R6, [R5,#1]|110-120
79108|code|CMP             R6, #0|0-46
79110|code|BNE             loc_134DC|233-209
79112|code|MOVW            R1, #0x67BC|70-242-188-113
79116|code|MOV             R0, R4; s1|32-70
79118|code|MOVT.W          R1, #1; s2|192-242-1-1
79122|code|BLX             strcmp|254-247-168-236
79126|code|CMP             R0, #0|0-40
79128|code|BEQ.W           loc_1368C|0-240-184-128
79132|code|MOVW            R1, #0x67C0|70-242-192-113
79136|code|MOV             R0, R4; s1|32-70
79138|code|MOVT.W          R1, #1; s2|192-242-1-1
79142|code|BLX             strcmp|254-247-158-236
79146|code|CMP             R0, #0|0-40
79148|code|BEQ.W           loc_1368C|0-240-174-128
79152|code|MOV             R0, R4; s|32-70
79154|code|BLX             strlen|254-247-78-235
79158|code|MOV             R1, R4; char *|33-70
79160|code|MOV             R2, R0; unsigned int|2-70
79162|code|MOV             R0, R7; this|56-70
79164|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-98-236
79168|code|LDR             R2, [SP,#0x38+var_24]|5-154
79170|code|LDR.W           R3, [R9]|217-248-0-48
79174|code|CMP             R2, R3|154-66
79176|code|BNE.W           loc_136BC|64-240-184-128
79180|code|ADD             SP, SP, #0x18|6-176
79182|code|POP.W           {R4-R10,PC}|189-232-240-135
79186|code|MOVW            R1, #0x6A54|70-246-84-33
79190|code|MOV             R0, R7; this|56-70
79192|code|MOVT.W          R1, #1; char *|192-242-1-1
79196|code|MOVS            R2, #3; unsigned int|3-34
79198|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-82-236
79202|code|MOVW            R1, #0x67C4|70-242-196-113
79206|code|MOV             R0, R7; this|56-70
79208|code|MOVT.W          R1, #1; char *|192-242-1-1
79212|code|MOVS            R2, #1; unsigned int|1-34
79214|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-74-236
79218|code|B               loc_134D2|174-231
79220|code|CMP             R6, #0x2E ; '.'|46-46
79222|code|BNE             loc_134F6|190-209
79224|code|MOVS            R0, #8; thrown_size|8-32
79226|code|ADD             R4, SP, #0x38+var_2C|3-172
79228|code|BLX             __cxa_allocate_exception|254-247-214-235
79232|code|MOV             R1, #0x16A68|70-246-104-33-192-242-1-1
79240|code|ADD             R2, SP, #0x38+var_34|1-170
79242|code|MOV             R6, R0|6-70
79244|code|MOV             R0, R4|32-70
79246|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-68-235
79250|code|ADD             R5, SP, #0x38+var_28|4-173
79252|code|MOV             R1, R4; std::string *|33-70
79254|code|MOV             R0, R5; this|40-70
79256|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-200-234
79260|code|MOV             R0, R8; s|64-70
79262|code|BLX             strlen|254-247-24-235
79266|code|MOV             R1, R8; char *|65-70
79268|code|MOV             R2, R0; unsigned int|2-70
79270|code|MOV             R0, R5; this|40-70
79272|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-44-236
79276|code|MOV             R0, R6; this|48-70
79278|code|MOV             R1, R5; std::string *|41-70
79280|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|254-247-194-234
79284|code|LDR             R0, [SP,#0x38+var_28]|4-152
79286|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
79294|code|SUBS            R0, #0xC|12-56
79296|code|CMP             R0, R4|160-66
79298|code|BNE.W           loc_1379C|64-240-235-128
79302|code|LDR             R0, [SP,#0x38+var_2C]|3-152
79304|code|SUBS            R0, #0xC|12-56
79306|code|CMP             R0, R4|160-66
79308|code|BNE.W           loc_13794|64-240-226-128
79312|code|MOVW            R1, #0x81A8|72-242-168-17
79316|code|MOVW            R2, #0x1D74|65-246-116-82
79320|code|MOV             R0, R6; void *|48-70
79322|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
79326|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
79330|code|BLX             __cxa_throw|254-247-206-235
79334|code|LDRB            R3, [R4,#1]|99-120
79336|code|CMP             R3, #0x2E ; '.'|46-43
79338|code|BNE             loc_134F6|132-209
79340|code|B               loc_13578|196-231
79342|code|CMP.W           R10, #0|186-241-0-15
79346|code|BEQ.W           loc_13754|0-240-175-128
79350|code|CMP             R5, #0|0-45
79352|code|BEQ.W           loc_13778|0-240-190-128
79356|code|MOVW            R1, #0x69FC|70-246-252-17
79360|code|MOV             R0, R7; this|56-70
79362|code|MOVT.W          R1, #1; char *|192-242-1-1
79366|code|MOVS            R2, #4; unsigned int|4-34
79368|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|254-247-252-235
79372|code|ADD.W           R4, R8, #1|8-241-1-4
79376|code|B               loc_13562|167-231
79378|code|MOVW            R0, #0x69F0|70-246-240-16
79382|code|MOVW            R1, #0x68D0|70-246-208-1
79386|code|MOVT.W          R0, #1; assertion|192-242-1-0
79390|code|MOVT.W          R1, #1; file|192-242-1-1
79394|code|MOVS            R2, #0xA4; line|164-34
79396|code|LDR             R3, =aStaticVoidFuse; "static void FuseZipData::convertFileNam"...|97-75
79398|code|BLX             __assert_fail|254-247-154-234
79402|code|MOVS            R0, #8; thrown_size|8-32
79404|code|ADD             R5, SP, #0x38+var_28|4-173
79406|code|BLX             __cxa_allocate_exception|254-247-126-235
79410|code|MOV             R1, #0x16A04|70-246-4-33-192-242-1-1
79418|code|ADD             R2, SP, #0x38+var_30|2-170
79420|code|MOV             R4, R0|4-70
79422|code|MOV             R0, R5|40-70
79424|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-234-234
79428|code|MOV             R0, R4; this|32-70
79430|code|MOV             R1, R5; std::string *|41-70
79432|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|254-247-118-234
79436|code|LDR             R3, [SP,#0x38+var_28]|4-155
79438|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
79446|code|SUB.W           R0, R3, #0xC|163-241-12-0
79450|code|CMP             R0, R2|144-66
79452|code|BNE             loc_13728|100-209
79454|code|MOVW            R1, #0x81A8|72-242-168-17
79458|code|MOVW            R2, #0x1D74|65-246-116-82
79462|code|MOV             R0, R4; void *|32-70
79464|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
79468|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
79472|code|BLX             __cxa_throw|254-247-134-235
79476|code|MOVW            R0, #0x69AC|70-246-172-16
79480|code|MOVW            R1, #0x68D0|70-246-208-1
79484|code|MOVT.W          R0, #1; assertion|192-242-1-0
79488|code|MOVT.W          R1, #1; file|192-242-1-1
79492|code|MOVS            R2, #0x91; line|145-34
79494|code|LDR             R3, =aStaticVoidFuse; "static void FuseZipData::convertFileNam"...|73-75
79496|code|BLX             __assert_fail|254-247-104-234
79500|code|MOVS            R0, #8; thrown_size|8-32
79502|code|ADD             R4, SP, #0x38+var_2C|3-172
79504|code|BLX             __cxa_allocate_exception|254-247-76-235
79508|code|MOV             R1, #0x16A68|70-246-104-33-192-242-1-1
79516|code|ADD             R2, SP, #0x38+var_34|1-170
79518|code|MOV             R6, R0|6-70
79520|code|MOV             R0, R4|32-70
79522|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-186-234
79526|code|ADD             R5, SP, #0x38+var_28|4-173
79528|code|MOV             R1, R4|33-70
79530|code|MOV             R2, R8|66-70
79532|code|MOV             R0, R5|40-70
79534|code|BL              sub_14724|1-240-57-248
79538|code|MOV             R0, R6; this|48-70
79540|code|MOV             R1, R5; std::string *|41-70
79542|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|254-247-64-234
79546|code|B               loc_135B4|123-231
79548|code|BLX             __stack_chk_fail|254-247-30-235
79552|code|LDR             R3, [SP,#0x38+var_28]|4-155
79554|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
79562|code|SUB.W           R0, R3, #0xC|163-241-12-0
79566|code|CMP             R0, R4|160-66
79568|code|BNE             loc_136FC|20-209
79570|code|LDR             R3, [SP,#0x38+var_2C]|3-155
79572|code|SUB.W           R0, R3, #0xC|163-241-12-0
79576|code|CMP             R0, R4|160-66
79578|code|BEQ             loc_136E2|2-208
79580|code|ADD             R1, SP, #0x38+var_30|2-169
79582|code|BL              sub_11EA0|254-247-223-251
79586|code|MOV             R0, R6; void *|48-70
79588|code|BLX             __cxa_free_exception|254-247-40-235
79592|code|BLX             __cxa_end_cleanup|254-247-26-234
79596|code|LDR             R0, [SP,#0x38+var_28]|4-152
79598|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
79606|code|SUBS            R0, #0xC|12-56
79608|code|CMP             R0, R4|160-66
79610|code|BEQ             loc_136D2|234-208
79612|code|ADD             R1, SP, #0x38+var_30|2-169
79614|code|BL              sub_11EA0|254-247-207-251
79618|code|B               loc_136D2|230-231
79620|code|MOV             R4, #0x281D8|72-242-216-20-192-242-2-4
79628|code|B               loc_136D2|225-231
79630|code|B               loc_136E2|232-231
79632|code|MOVW            R0, #0x6A58|70-246-88-32
79636|code|MOVW            R1, #0x68D0|70-246-208-1
79640|code|MOVT.W          R0, #1; assertion|192-242-1-0
79644|code|MOVT.W          R1, #1; file|192-242-1-1
79648|code|MOVS            R2, #0xB3; line|179-34
79650|code|LDR             R3, =aStaticVoidFuse; "static void FuseZipData::convertFileNam"...|34-75
79652|code|BLX             __assert_fail|254-247-26-234
79656|code|ADD             R1, SP, #0x38+var_2C|3-169
79658|code|BL              sub_11EA0|254-247-185-251
79662|code|B               loc_1365E|150-231
79664|code|LDR             R3, [SP,#0x38+var_28]|4-155
79666|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
79674|code|SUB.W           R0, R3, #0xC|163-241-12-0
79678|code|CMP             R0, R2|144-66
79680|code|BEQ             loc_13748|2-208
79682|code|ADD             R1, SP, #0x38+var_2C|3-169
79684|code|BL              sub_11EA0|254-247-172-251
79688|code|MOV             R0, R4; void *|32-70
79690|code|BLX             __cxa_free_exception|254-247-246-234
79694|code|BLX             __cxa_end_cleanup|254-247-232-233
79698|code|B               loc_13748|249-231
79700|code|MOVS            R0, #8; thrown_size|8-32
79702|code|ADD             R5, SP, #0x38+var_28|4-173
79704|code|BLX             __cxa_allocate_exception|254-247-232-234
79708|code|MOV             R1, #0x169BC|70-246-188-17-192-242-1-1
79716|code|ADD             R2, SP, #0x38+var_30|2-170
79718|code|MOV             R4, R0|4-70
79720|code|MOV             R0, R5|40-70
79722|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-86-234
79726|code|MOV             R0, R4; this|32-70
79728|code|MOV             R1, R5; std::string *|41-70
79730|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|254-247-226-233
79734|code|B               loc_1364C|105-231
79736|code|MOVW            R0, #0x69F0|70-246-240-16
79740|code|MOVW            R1, #0x68D0|70-246-208-1
79744|code|MOVT.W          R0, #1; assertion|192-242-1-0
79748|code|MOVT.W          R1, #1; file|192-242-1-1
79752|code|MOVS            R2, #0x9B; line|155-34
79754|code|LDR             R3, =aStaticVoidFuse; "static void FuseZipData::convertFileNam"...|8-75
79756|code|BLX             __assert_fail|254-247-230-233
79760|code|B               loc_13730|206-231
79762|code|B               loc_13748|217-231
79764|code|MOV             R1, R5|41-70
79766|code|BL              sub_11EA0|254-247-131-251
79770|code|B               loc_135D0|25-231
79772|code|ADD             R1, SP, #0x38+var_30|2-169
79774|code|BL              sub_11EA0|254-247-127-251
79778|code|B               loc_135C6|16-231
79780|code|B               loc_136C0|140-231
79782|code|B               loc_13704|173-231
79784|code|B               loc_136E2|155-231
79786|data|ALIGN 4|0-191
79788|data|DCD aStaticVoidFuse; "static void FuseZipData::convertFileNam"...|228-103-1-0
79792|code|PUSH.W          {R4-R8,LR}|45-233-240-65
79796|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
79804|code|SUB             SP, SP, #8|130-176
79806|code|LDR.W           LR, [R5]|213-248-0-224
79810|code|MOV             R4, R0|4-70
79812|code|ADD.W           R8, R0, #4|0-241-4-8
79816|code|STR             R2, [R0,#0x1C]|194-97
79818|code|STR             R1, [R0,#0x20]|1-98
79820|code|MOVS            R6, #0|0-38
79822|code|ADD.W           R7, R8, #4|8-241-4-7
79826|code|ADDS            R0, #0x24 ; '$'|36-48
79828|code|MOV             R1, R3|25-70
79830|code|STR             R7, [R4,#0x10]|39-97
79832|code|STR             R7, [R4,#0x14]|103-97
79834|code|MOV             R2, SP|106-70
79836|code|STR             R6, [R4,#8]|166-96
79838|code|STR             R6, [R4,#0xC]|230-96
79840|code|STR             R6, [R4,#0x18]|166-97
79842|code|STR.W           LR, [SP,#0x20+var_1C]|205-248-4-224
79846|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-24-234
79850|code|LDR             R2, [SP,#0x20+var_1C]|1-154
79852|code|MOV             R0, R4|32-70
79854|code|LDR             R3, [R5]|43-104
79856|code|CMP             R2, R3|154-66
79858|code|BNE             loc_137FA|2-209
79860|code|ADD             SP, SP, #8|2-176
79862|code|POP.W           {R4-R8,PC}|189-232-240-129
79866|code|BLX             __stack_chk_fail|254-247-128-234
79870|code|MOV             R0, R8|64-70
79872|code|LDR             R1, [R4,#0xC]|225-104
79874|code|BL              sub_14778|0-240-185-255
79878|code|BLX             __cxa_end_cleanup|254-247-140-233
79882|data|ALIGN 4|0-191
79884|code|PUSH.W          {R4-R9,LR}|45-233-240-67
79888|code|MOV             R9, #0x281B8|72-242-184-25-192-242-2-9
79896|code|SUB             SP, SP, #0xC|131-176
79898|code|LDR.W           R3, [R9]|217-248-0-48
79902|code|MOV             R7, R0|7-70
79904|code|LDR             R0, [R0,#0x24]; path|64-106
79906|code|STR             R3, [SP,#0x28+var_24]|1-147
79908|code|BLX             chdir|254-247-112-234
79912|code|CBZ             R0, loc_13854|160-177
79914|code|MOVW            R2, #0x6A78|70-246-120-34
79918|code|MOVS            R0, #3|3-32
79920|code|MOVT.W          R2, #1|192-242-1-2
79924|code|MOVS            R1, #1|1-33
79926|code|LDR             R3, [R7,#0x24]|123-106
79928|code|ADD.W           R8, R7, #4|7-241-4-8
79932|code|BLX             __syslog_chk|254-247-44-234
79936|code|MOV             R0, #aTmp_0; name|70-246-196-32-192-242-1-0
79944|code|BLX             getenv|254-247-64-233
79948|code|BLX             chdir|254-247-92-234
79952|code|CMP             R0, #0|0-40
79954|code|BNE             loc_138D4|63-209
79956|code|LDR             R0, [R7,#0x1C]|248-105
79958|code|ADD.W           R8, R7, #4|7-241-4-8
79962|code|BLX             zip_close|254-247-140-233
79966|code|CBNZ            R0, loc_138B6|80-187
79968|code|ADD.W           R8, R7, #4|7-241-4-8
79972|code|LDR             R4, [R7,#0x10]|60-105
79974|code|ADD.W           R6, R8, #4|8-241-4-6
79978|code|CMP             R4, R6|180-66
79980|code|BEQ             loc_1388A|13-208
79982|code|LDR             R5, [R4,#0x14]|101-105
79984|code|CBZ             R5, loc_1387E|45-177
79986|code|MOV             R0, R5|40-70
79988|code|BL              sub_14A74|1-240-254-248
79992|code|MOV             R0, R5; void *|40-70
79994|code|BLX             _ZdlPv; operator delete(void *)|254-247-34-233
79998|code|MOV             R0, R4|32-70
80000|code|BLX             _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|254-247-132-234
80004|code|CMP             R0, R6|176-66
80006|code|MOV             R4, R0|4-70
80008|code|BNE             loc_1386E|241-209
80010|code|LDR             R2, [R7,#0x24]|122-106
80012|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
80020|code|SUB.W           R0, R2, #0xC|162-241-12-0
80024|code|CMP             R0, R3|152-66
80026|code|BNE             loc_138E2|34-209
80028|code|MOV             R0, R8|64-70
80030|code|LDR             R1, [R7,#0xC]|249-104
80032|code|BL              sub_14778|0-240-106-255
80036|code|LDR             R2, [SP,#0x28+var_24]|1-154
80038|code|LDR.W           R3, [R9]|217-248-0-48
80042|code|MOV             R0, R7|56-70
80044|code|CMP             R2, R3|154-66
80046|code|BNE             loc_1393E|70-209
80048|code|ADD             SP, SP, #0xC|3-176
80050|code|POP.W           {R4-R9,PC}|189-232-240-131
80054|code|LDR             R0, [R7,#0x1C]|248-105
80056|code|ADD.W           R8, R7, #4|7-241-4-8
80060|code|BLX             zip_strerror|254-247-232-232
80064|code|MOVW            R2, #0x6AC8|70-246-200-34
80068|code|MOV             R3, R0|3-70
80070|code|MOVT.W          R2, #1|192-242-1-2
80074|code|MOVS            R0, #3|3-32
80076|code|MOVS            R1, #1|1-33
80078|code|BLX             __syslog_chk|254-247-228-233
80082|code|B               loc_13860|197-231
80084|code|MOV             R0, #aTmp; path|70-246-188-32-192-242-1-0
80092|code|BLX             chdir|254-247-20-234
80096|code|B               loc_13854|184-231
80098|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
80106|code|CBZ             R3, loc_13910|139-177
80108|code|SUBS            R2, #4|4-58
80110|code|DMB.W           SY|191-243-95-143
80114|code|LDREX.W         R3, [R2]|82-232-0-63
80118|code|SUBS            R1, R3, #1|89-30
80120|code|STREX.W         R4, R1, [R2]|66-232-0-20
80124|code|CMP             R4, #0|0-44
80126|code|BNE             loc_138F2|248-209
80128|code|DMB.W           SY|191-243-95-143
80132|code|CMP             R3, #0|0-43
80134|code|BGT             loc_1389C|201-220
80136|code|MOV             R1, SP|105-70
80138|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-74-233
80142|code|B               loc_1389C|197-231
80144|code|LDR.W           R3, [R2,#-4]|82-248-4-60
80148|code|SUBS            R1, R3, #1|89-30
80150|code|STR.W           R1, [R2,#-4]|66-248-4-28
80154|code|B               loc_13904|243-231
80156|code|LDR             R0, [R7,#0x24]|120-106
80158|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
80166|code|SUBS            R0, #0xC|12-56
80168|code|CMP             R0, R3|152-66
80170|code|BEQ             loc_13932|2-208
80172|code|MOV             R1, SP|105-70
80174|code|BL              sub_11EA0|254-247-183-250
80178|code|MOV             R0, R8|64-70
80180|code|LDR             R1, [R7,#0xC]|249-104
80182|code|BL              sub_14778|0-240-31-255
80186|code|BLX             __cxa_end_cleanup|254-247-242-232
80190|code|BLX             __stack_chk_fail|254-247-222-233
80194|data|ALIGN 4|0-191
80196|code|PUSH.W          {R4-R9,LR}|45-233-240-67
80200|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
80208|code|SUB             SP, SP, #0xC|131-176
80210|code|LDR             R3, [R5]|43-104
80212|code|STR             R3, [SP,#0x28+var_24]|1-147
80214|code|CMP             R1, #0|0-41
80216|code|BEQ             loc_139D6|61-208
80218|code|MOV             R6, R0|6-70
80220|code|LDR             R0, [R1,#0x58]; this|136-109
80222|code|MOV             R4, R1|12-70
80224|code|CBZ             R0, loc_139BE|104-179
80226|code|BL              sub_14D74|1-240-7-250
80230|code|MOVS            R0, #0; timer|0-32
80232|code|LDR             R7, [R4,#0x58]|167-109
80234|code|BLX             time|254-247-176-233
80238|code|MOV             R1, R0|1-70
80240|code|MOV             R0, R7|56-70
80242|code|BL              sub_15638|1-240-97-254
80246|code|LDR             R3, [R4,#0x3C]|227-107
80248|code|ADD             R1, SP, #0x28+var_20|2-169
80250|code|ADDS            R0, R6, #4|48-29
80252|code|STR.W           R3, [R1,#-8]!|65-248-8-61
80256|code|BL              sub_147C4|0-240-32-255
80260|code|LDRD.W          R8, R9, [R4,#0x48]|212-233-18-137
80264|code|MOV             R0, R4|32-70
80266|code|BL              sub_14A74|1-240-115-248
80270|code|MOV             R0, R4; void *|32-70
80272|code|BLX             _ZdlPv; operator delete(void *)|254-247-150-232
80276|code|CMP.W           R8, #0|184-241-0-15
80280|code|SBCS.W          R3, R9, #0|121-241-0-3
80284|code|BLT             loc_139AA|5-219
80286|code|LDR             R0, [R6,#0x1C]|240-105
80288|code|MOV             R2, R8|66-70
80290|code|MOV             R3, R9|75-70
80292|code|BLX             zip_delete|254-247-52-234
80296|code|CBNZ            R0, loc_139BA|56-185
80298|code|MOVS            R0, #0|0-32
80300|code|LDR             R2, [SP,#0x28+var_24]|1-154
80302|code|LDR             R3, [R5]|43-104
80304|code|CMP             R2, R3|154-66
80306|code|BNE             loc_139EE|28-209
80308|code|ADD             SP, SP, #0xC|3-176
80310|code|POP.W           {R4-R9,PC}|189-232-240-131
80314|code|MOVS            R0, #2|2-32
80316|code|B               loc_139AC|246-231
80318|code|MOVW            R0, #0x6AE8|70-246-232-32
80322|code|MOVW            R1, #0x68D0|70-246-208-1
80326|code|MOVT.W          R0, #1; assertion|192-242-1-0
80330|code|MOVT.W          R1, #1; file|192-242-1-1
80334|code|MOVS            R2, #0x72 ; 'r'; line|114-34
80336|code|LDR             R3, =aIntFusezipdata; "int FuseZipData::removeNode(FileNode*)"|8-75
80338|code|BLX             __assert_fail|254-247-196-232
80342|code|MOVW            R0, #0x68C0|70-246-192-0
80346|code|MOVW            R1, #0x68D0|70-246-208-1
80350|code|MOVT.W          R0, #1; assertion|192-242-1-0
80354|code|MOVT.W          R1, #1; file|192-242-1-1
80358|code|MOVS            R2, #0x71 ; 'q'; line|113-34
80360|code|LDR             R3, =aIntFusezipdata; "int FuseZipData::removeNode(FileNode*)"|2-75
80362|code|BLX             __assert_fail|254-247-184-232
80366|code|BLX             __stack_chk_fail|254-247-134-233
80370|data|ALIGN 4|0-191
80372|data|DCD aIntFusezipdata; "int FuseZipData::removeNode(FileNode*)"|52-104-1-0
80376|code|PUSH            {R4,LR}|16-181
80378|code|SUB             SP, SP, #8|130-176
80380|code|ADD             R3, SP, #0x10+var_8|2-171
80382|code|ADDS            R4, R0, #4|4-29
80384|code|STR.W           R1, [R3,#-4]!|67-248-4-29
80388|code|MOV             R0, R4|32-70
80390|code|MOV             R1, R3|25-70
80392|code|ADDS            R4, #4|4-52
80394|code|BL              sub_148C4|0-240-91-255
80398|code|CMP             R0, R4|160-66
80400|code|ITE NE|20-191
80402|code|LDRNE           R0, [R0,#0x14]|64-105
80404|code|MOVEQ           R0, #0|0-32
80406|code|ADD             SP, SP, #8|2-176
80408|code|POP             {R4,PC}|16-189
80410|data|ALIGN 4|0-191
80412|code|PUSH            {R4-R6,LR}|112-181
80414|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
80422|code|LDR             R3, [R1,#0x38]|139-107
80424|code|LDR             R2, [R1,#0x3C]|202-107
80426|code|SUB             SP, SP, #0x10|132-176
80428|code|LDR             R6, [R5]|46-104
80430|code|MOV             R4, R0|4-70
80432|code|CMP             R3, R2|147-66
80434|code|STR             R6, [SP,#0x20+var_14]|3-150
80436|code|BHI             loc_13A80|36-216
80438|code|ADD             R6, SP, #0x20+var_18|2-174
80440|code|MOV             R1, #0x16674|70-242-116-97-192-242-1-1
80448|code|ADD             R0, SP, #0x20+var_1C|1-168
80450|code|MOV             R2, R6|50-70
80452|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-232-232
80456|code|LDR             R3, [SP,#0x20+var_1C]|1-155
80458|code|ADDS            R4, #4|4-52
80460|code|MOV             R1, R6|49-70
80462|code|MOV             R0, R4|32-70
80464|code|ADDS            R4, #4|4-52
80466|code|STR             R3, [SP,#0x20+var_18]|2-147
80468|code|BL              sub_148C4|0-240-54-255
80472|code|LDR             R2, [SP,#0x20+var_1C]|1-154
80474|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
80482|code|SUB.W           R1, R2, #0xC|162-241-12-1
80486|code|CMP             R0, R4|160-66
80488|code|ITE NE|20-191
80490|code|LDRNE           R4, [R0,#0x14]|68-105
80492|code|MOVEQ           R4, #0|0-36
80494|code|CMP             R1, R3|153-66
80496|code|BNE             loc_13A92|15-209
80498|code|LDR             R2, [SP,#0x20+var_14]|3-154
80500|code|MOV             R0, R4|32-70
80502|code|LDR             R3, [R5]|43-104
80504|code|CMP             R2, R3|154-66
80506|code|BNE             loc_13ACE|40-209
80508|code|ADD             SP, SP, #0x10|4-176
80510|code|POP             {R4-R6,PC}|112-189
80512|code|SUBS            R3, R3, R2|155-26
80514|code|ADDS            R1, #0x3C ; '<'; std::string *|60-49
80516|code|SUBS            R3, #1; unsigned int|1-59
80518|code|ADD             R0, SP, #0x20+var_1C; this|1-168
80520|code|MOVS            R2, #0; unsigned int|0-34
80522|code|ADD             R6, SP, #0x20+var_18|2-174
80524|code|BLX             _ZNSsC1ERKSsjj; std::string::string(std::string const&,uint,uint)|254-247-108-232
80528|code|B               loc_13A48|218-231
80530|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
80538|code|CBZ             R3, loc_13AC2|147-177
80540|code|SUBS            R2, #4|4-58
80542|code|DMB.W           SY|191-243-95-143
80546|code|LDREX.W         R3, [R2]|82-232-0-63
80550|code|SUBS            R0, R3, #1|88-30
80552|code|STREX.W         R6, R0, [R2]|66-232-0-6
80556|code|CMP             R6, #0|0-46
80558|code|BNE             loc_13AA2|248-209
80560|code|DMB.W           SY|191-243-95-143
80564|code|CMP             R3, #0|0-43
80566|code|BGT             loc_13A72|220-220
80568|code|MOV             R0, R1|8-70
80570|code|MOV             R1, SP|105-70
80572|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-112-232
80576|code|B               loc_13A72|215-231
80578|code|LDR.W           R3, [R2,#-4]|82-248-4-60
80582|code|SUBS            R0, R3, #1|88-30
80584|code|STR.W           R0, [R2,#-4]|66-248-4-12
80588|code|B               loc_13AB4|242-231
80590|code|BLX             __stack_chk_fail|254-247-22-233
80594|data|ALIGN 4|0-191
80596|code|PUSH.W          {R4-R11,LR}|45-233-240-79
80600|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
80608|code|SUB             SP, SP, #0x24|137-176
80610|code|LDR             R3, [R5]|43-104
80612|code|MOV             R8, R0|128-70
80614|code|MOV             R4, R1|12-70
80616|code|STR             R3, [SP,#0x48+var_2C]|7-147
80618|code|BL              sub_13A1C|255-247-151-255
80622|code|CMP             R0, #0|0-40
80624|code|BEQ.W           loc_13CBC|0-240-228-128
80628|code|MOV             R6, R0|6-70
80630|code|MOV             R1, R4|33-70
80632|code|BL              sub_14D58|1-240-46-249
80636|code|MOV             R0, R6|48-70
80638|code|STR             R6, [R4,#0x58]|166-101
80640|code|ADD.W           R9, R8, #4|8-241-4-9
80644|code|LDR             R1, [R4,#0x28]|161-106
80646|code|ADD             R7, SP, #0x48+var_28|8-175
80648|code|BL              sub_15638|1-240-150-253
80652|code|LDR             R3, [R4,#0x3C]|227-107
80654|code|MOV             R0, R9|72-70
80656|code|ADD.W           R6, R9, #4|9-241-4-6
80660|code|STR.W           R3, [R7,#-0xC]!|71-248-12-61
80664|code|MOV             R1, R7|57-70
80666|code|BL              sub_14798|0-240-61-254
80670|code|CMP             R6, R0|134-66
80672|code|BNE.W           loc_13CA4|64-240-192-128
80676|code|LDR             R3, [R4,#0x3C]|227-107
80678|code|ADD             R2, SP, #0x48+var_28|8-170
80680|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
80684|code|MOV             R1, R6|49-70
80686|code|STR.W           R3, [R2,#-0x18]!|66-248-24-61
80690|code|BL              sub_131D8|255-247-81-251
80694|code|CMP             R6, R0|134-66
80696|code|MOV             R11, R0|131-70
80698|code|BEQ             loc_13BEA|86-208
80700|code|LDR             R3, [R0,#0x10]|3-105
80702|code|LDR.W           R10, [SP,#0x48+s1]|221-248-8-160
80706|code|MOV             R1, R3; s2|25-70
80708|code|STR             R3, [SP,#0x48+s2]|0-147
80710|code|MOV             R0, R10; s1|80-70
80712|code|BLX             strcmp|254-247-140-233
80716|code|LDR             R3, [SP,#0x48+s2]|0-155
80718|code|CMP             R0, #0|0-40
80720|code|BLT             loc_13B66|9-219
80722|code|LDR             R2, [SP,#0x48+var_2C]|7-154
80724|code|LDR             R3, [R5]|43-104
80726|code|STR.W           R4, [R11,#0x14]|203-248-20-64
80730|code|CMP             R2, R3|154-66
80732|code|BNE.W           loc_13CD4|64-240-186-128
80736|code|ADD             SP, SP, #0x24 ; '$'|9-176
80738|code|POP.W           {R4-R11,PC}|189-232-240-143
80742|code|MOV             R1, R3; s2|25-70
80744|code|MOV             R0, R10; s1|80-70
80746|code|STR             R3, [SP,#0x48+s2]|0-147
80748|code|MOVS            R2, #0|0-34
80750|code|STR.W           R10, [SP,#0x48+var_3C]|205-248-12-160
80754|code|STR             R2, [SP,#0x48+var_38]|4-146
80756|code|BLX             strcmp|254-247-118-233
80760|code|SUBS            R3, R0, #0|3-30
80762|code|STR             R3, [SP,#0x48+var_44]|1-147
80764|code|LDR             R3, [SP,#0x48+s2]|0-155
80766|code|BLT             loc_13BBC|29-219
80768|code|MOV             R0, R3; s1|24-70
80770|code|MOV             R1, R10; s2|81-70
80772|code|BLX             strcmp|254-247-110-233
80776|code|CMP             R0, #0|0-40
80778|code|BGE             loc_13B52|226-218
80780|code|LDR.W           R3, [R8,#0x14]|216-248-20-48
80784|code|CMP             R11, R3|155-69
80786|code|BEQ             loc_13C94|127-208
80788|code|MOV             R0, R11|88-70
80790|code|BLX             _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|254-247-250-232
80794|code|MOV             R2, R0|2-70
80796|code|MOV             R0, R10; s1|80-70
80798|code|LDR             R1, [R2,#0x10]; s2|17-105
80800|code|STR             R2, [SP,#0x48+s2]|0-146
80802|code|BLX             strcmp|254-247-96-233
80806|code|CMP             R0, #0|0-40
80808|code|BGE             loc_13C0E|49-218
80810|code|LDR.W           R3, [R11,#0xC]|219-248-12-48
80814|code|CMP             R3, #0|0-43
80816|code|BEQ             loc_13C9C|116-208
80818|code|LDR             R2, [SP,#0x48+s2]|0-154
80820|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
80824|code|MOV             R11, R2|147-70
80826|code|B               loc_13C26|52-224
80828|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
80832|code|CMP             R11, R2|147-69
80834|code|BEQ             loc_13C80|93-208
80836|code|MOV             R0, R11|88-70
80838|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|253-247-154-239
80842|code|MOV             R1, R10; s2|81-70
80844|code|MOV             R2, R0|2-70
80846|code|LDR             R0, [R0,#0x10]; s1|0-105
80848|code|STR             R2, [SP,#0x48+s2]|0-146
80850|code|BLX             strcmp|254-247-72-233
80854|code|CMP             R0, #0|0-40
80856|code|BGE             loc_13C0E|25-218
80858|code|LDR             R2, [SP,#0x48+s2]|0-154
80860|code|LDR             R3, [R2,#0xC]|211-104
80862|code|CMP             R3, #0|0-43
80864|code|BEQ             loc_13C8C|84-208
80866|code|MOV             R2, R11|90-70
80868|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
80872|code|B               loc_13C26|29-224
80874|code|LDR             R1, [SP,#0x48+s1]; s2|2-153
80876|code|MOV.W           R10, #0|79-240-0-10
80880|code|LDR.W           R3, [R8,#0x18]|216-248-24-48
80884|code|STR.W           R10, [SP,#0x48+var_38]|205-248-16-160
80888|code|STR             R1, [SP,#0x48+var_3C]|3-145
80890|code|CBZ             R3, loc_13C0E|67-177
80892|code|LDR.W           R2, [R8,#0x14]|216-248-20-32
80896|code|LDR             R0, [R2,#0x10]; s1|16-105
80898|code|STR             R2, [SP,#0x48+s2]|0-146
80900|code|BLX             strcmp|254-247-46-233
80904|code|LDR             R2, [SP,#0x48+s2]|0-154
80906|code|CMP             R0, #0|0-40
80908|code|BLT             loc_13C7E|55-219
80910|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
80914|code|MOV             R0, R7|56-70
80916|code|MOV             R1, R9|73-70
80918|code|MOV             R2, R10|82-70
80920|code|BL              sub_14900|0-240-114-254
80924|code|LDR             R2, [SP,#0x48+var_30]|6-154
80926|code|LDR.W           R11, [SP,#0x48+var_34]|221-248-20-176
80930|code|CMP             R2, #0|0-42
80932|code|BEQ             loc_13B52|149-208
80934|code|SUBS            R3, R6, R2|179-26
80936|code|CLZ.W           R3, R3|179-250-131-243
80940|code|LSRS            R3, R3, #5|91-9
80942|code|CMP.W           R11, #0|187-241-0-15
80946|code|IT NE|24-191
80948|code|ORRNE.W         R3, R3, #1|67-240-1-3
80952|code|CBNZ            R3, loc_13C86|43-187
80954|code|LDR             R1, [R2,#0x10]; s2|17-105
80956|code|LDR             R0, [SP,#0x48+var_3C]; s1|3-152
80958|code|STR             R2, [SP,#0x48+s2]|0-146
80960|code|BLX             strcmp|254-247-16-233
80964|code|LDR             R2, [SP,#0x48+s2]|0-154
80966|code|STR             R0, [SP,#0x48+var_44]|1-144
80968|code|LDR             R3, [SP,#0x48+var_44]|1-155
80970|code|MOV.W           R9, R3,LSR#31|79-234-211-121
80974|code|MOVS            R0, #0x18; unsigned int|24-32
80976|code|STR             R2, [SP,#0x48+s2]|0-146
80978|code|BLX             _Znwj; operator new(uint)|254-247-20-232
80982|code|MOV             R3, R6|51-70
80984|code|LDR             R2, [SP,#0x48+s2]|0-154
80986|code|MOV             R7, R0|7-70
80988|code|LDM.W           R10, {R0,R1}|154-232-3-0
80992|code|ADD.W           LR, R7, #0x10|7-241-16-14
80996|code|MOV             R11, R7|187-70
80998|code|STM.W           LR, {R0,R1}|142-232-3-0
81002|code|MOV             R0, R9|72-70
81004|code|MOV             R1, R7|57-70
81006|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|254-247-58-232
81010|code|LDR.W           R3, [R8,#0x18]|216-248-24-48
81014|code|ADDS            R3, #1|1-51
81016|code|STR.W           R3, [R8,#0x18]|200-248-24-48
81020|code|B               loc_13B52|105-231
81022|code|MOV             R11, R10|211-70
81024|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
81028|code|B               loc_13C26|207-231
81030|code|MOV.W           R9, #1|79-240-1-9
81034|code|B               loc_13C4E|224-231
81036|code|MOV             R11, R3|155-70
81038|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
81042|code|B               loc_13C26|200-231
81044|code|MOV             R2, R11|90-70
81046|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
81050|code|B               loc_13C48|213-231
81052|code|ADD.W           R10, SP, #0x48+var_3C|13-241-12-10
81056|code|MOV             R2, R11|90-70
81058|code|B               loc_13C48|209-231
81060|code|MOVW            R0, #0x6B14|70-246-20-48
81064|code|MOVW            R1, #0x68D0|70-246-208-1
81068|code|MOVT.W          R0, #1; assertion|192-242-1-0
81072|code|MOVT.W          R1, #1; file|192-242-1-1
81076|code|MOVS            R2, #0xD0; line|208-34
81078|code|LDR             R3, =aVoidFusezipdat; "void FuseZipData::insertNode(FileNode*)"|8-75
81080|code|BLX             __assert_fail|253-247-80-239
81084|code|MOVW            R0, #0x6B00|70-246-0-48
81088|code|MOVW            R1, #0x68D0|70-246-208-1
81092|code|MOVT.W          R0, #1; assertion|192-242-1-0
81096|code|MOVT.W          R1, #1; file|192-242-1-1
81100|code|MOVS            R2, #0xCC; line|204-34
81102|code|LDR             R3, =aVoidFusezipdat; "void FuseZipData::insertNode(FileNode*)"|2-75
81104|code|BLX             __assert_fail|253-247-68-239
81108|code|BLX             __stack_chk_fail|254-247-18-232
81112|data|DCD aVoidFusezipdat; "void FuseZipData::insertNode(FileNode*)"|92-104-1-0
81116|code|PUSH.W          {R4-R11,LR}|45-233-240-79
81120|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
81128|code|MOV             R7, R0|7-70
81130|code|LDR             R0, [R5]|40-104
81132|code|SUB             SP, SP, #0x2C|139-176
81134|code|STR             R0, [SP,#0x50+var_2C]|9-144
81136|code|CMP             R1, #0|0-41
81138|code|BEQ.W           loc_13EF0|0-240-253-128
81142|code|MOV             R11, R2|147-70
81144|code|CMP             R2, #0|0-42
81146|code|BEQ.W           loc_13ED8|0-240-237-128
81150|code|MOV             R10, R3|154-70
81152|code|LDR             R3, [R1,#0x58]|139-109
81154|code|MOV             R4, R1|12-70
81156|code|STR             R3, [SP,#0x50+var_4C]|1-147
81158|code|CMP             R3, #0|0-43
81160|code|BEQ.W           loc_13F08|0-240-254-128
81164|code|CMP.W           R10, #0|186-241-0-15
81168|code|BNE             loc_13D7A|51-209
81170|code|LDR             R3, [R4,#0x3C]|227-107
81172|code|ADD.W           R9, R7, #4|7-241-4-9
81176|code|ADD             R6, SP, #0x50+var_28|10-174
81178|code|ADD.W           R8, R9, #4|9-241-4-8
81182|code|MOV             R0, R9|72-70
81184|code|STR.W           R3, [R6,#-0xC]!|70-248-12-61
81188|code|MOV             R1, R6|49-70
81190|code|BL              sub_147C4|0-240-77-253
81194|code|MOV             R1, R11|89-70
81196|code|MOV             R0, R4|32-70
81198|code|BL              sub_14DD4|1-240-81-248
81202|code|LDR             R3, [R4,#0x3C]|227-107
81204|code|ADD             R2, SP, #0x50+var_28|10-170
81206|code|MOV             R1, R8|65-70
81208|code|LDR             R0, [R7,#0xC]|248-104
81210|code|STR.W           R3, [R2,#-0x18]!|66-248-24-61
81214|code|BL              sub_131D8|255-247-75-250
81218|code|CMP             R8, R0|128-69
81220|code|MOV             R11, R0|131-70
81222|code|BEQ             loc_13E3A|120-208
81224|code|LDR             R3, [SP,#0x50+s1]|4-155
81226|code|MOV             R0, R3; s1|24-70
81228|code|STR             R3, [SP,#0x50+var_48]|2-147
81230|code|LDR.W           R3, [R11,#0x10]|219-248-16-48
81234|code|MOV             R1, R3; s2|25-70
81236|code|STR             R3, [SP,#0x50+s2]|0-147
81238|code|BLX             strcmp|254-247-134-232
81242|code|LDR             R3, [SP,#0x50+s2]|0-155
81244|code|CMP             R0, #0|0-40
81246|code|BLT             loc_13DBA|44-219
81248|code|STR.W           R4, [R11,#0x14]|203-248-20-64
81252|code|CMP.W           R10, #0|186-241-0-15
81256|code|BNE             loc_13D82|11-209
81258|code|LDR             R2, [SP,#0x50+var_2C]|9-154
81260|code|LDR             R3, [R5]|43-104
81262|code|CMP             R2, R3|154-66
81264|code|BNE.W           loc_13F20|64-240-214-128
81268|code|ADD             SP, SP, #0x2C ; ','|11-176
81270|code|POP.W           {R4-R11,PC}|189-232-240-143
81274|code|LDR             R0, [SP,#0x50+var_4C]; this|1-152
81276|code|BL              sub_14D74|0-240-250-255
81280|code|B               loc_13D12|199-231
81282|code|MOV             R0, R7|56-70
81284|code|MOV             R1, R4|33-70
81286|code|BL              sub_13A1C|255-247-73-254
81290|code|MOV             R6, R0|6-70
81292|code|CMP             R0, #0|0-40
81294|code|BEQ.W           loc_13F24|0-240-201-128
81298|code|MOV             R1, R4|33-70
81300|code|BL              sub_14D58|0-240-224-255
81304|code|LDR             R7, [SP,#0x50+var_4C]|1-159
81306|code|STR             R6, [R4,#0x58]|166-101
81308|code|CMP             R7, R6|183-66
81310|code|BEQ             loc_13D6A|228-208
81312|code|MOVS            R0, #0; timer|0-32
81314|code|BLX             time|253-247-148-239
81318|code|MOV             R4, R0|4-70
81320|code|MOV             R0, R7|56-70
81322|code|MOV             R1, R4|33-70
81324|code|BL              sub_15638|1-240-68-252
81328|code|MOV             R0, R6|48-70
81330|code|MOV             R1, R4|33-70
81332|code|BL              sub_15638|1-240-64-252
81336|code|B               loc_13D6A|215-231
81338|code|LDR             R2, [SP,#0x50+var_48]|2-154
81340|code|MOV             R1, R3; s2|25-70
81342|code|STR             R3, [SP,#0x50+s2]|0-147
81344|code|MOV             R0, R2; s1|16-70
81346|code|STR             R2, [SP,#0x50+var_3C]|5-146
81348|code|MOVS            R2, #0|0-34
81350|code|STR             R2, [SP,#0x50+var_38]|6-146
81352|code|BLX             strcmp|254-247-76-232
81356|code|SUBS            R3, R0, #0|3-30
81358|code|STR             R3, [SP,#0x50+var_44]|3-147
81360|code|LDR             R3, [SP,#0x50+s2]|0-155
81362|code|BLT             loc_13E0E|28-219
81364|code|MOV             R0, R3; s1|24-70
81366|code|LDR             R1, [SP,#0x50+var_48]; s2|2-153
81368|code|BLX             strcmp|254-247-68-232
81372|code|CMP             R0, #0|0-40
81374|code|BGE             loc_13D60|191-218
81376|code|LDR             R3, [R7,#0x14]|123-105
81378|code|CMP             R11, R3|155-69
81380|code|BEQ             loc_13ED2|117-208
81382|code|MOV             R0, R11|88-70
81384|code|BLX             _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|253-247-208-239
81388|code|MOV             R3, R0|3-70
81390|code|LDR             R0, [SP,#0x50+var_48]; s1|2-152
81392|code|LDR             R1, [R3,#0x10]; s2|25-105
81394|code|STR             R3, [SP,#0x50+s2]|0-147
81396|code|BLX             strcmp|254-247-54-232
81400|code|CMP             R0, #0|0-40
81402|code|BGE             loc_13E5A|46-218
81404|code|LDR.W           R2, [R11,#0xC]|219-248-12-32
81408|code|LDR             R3, [SP,#0x50+s2]|0-155
81410|code|CMP             R2, #0|0-42
81412|code|BEQ             loc_13ED2|101-208
81414|code|ADD             R2, SP, #0x50+var_3C|5-170
81416|code|MOV             R11, R3|155-70
81418|code|STR             R2, [SP,#0x50+s2]|0-146
81420|code|B               loc_13E74|50-224
81422|code|LDR             R3, [R7,#0x10]|59-105
81424|code|CMP             R11, R3|155-69
81426|code|BEQ             loc_13EC8|89-208
81428|code|MOV             R0, R11|88-70
81430|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|253-247-114-238
81434|code|LDR             R1, [SP,#0x50+var_48]; s2|2-153
81436|code|MOV             R2, R0|2-70
81438|code|LDR             R0, [R0,#0x10]; s1|0-105
81440|code|STR             R2, [SP,#0x50+s2]|0-146
81442|code|BLX             strcmp|254-247-32-232
81446|code|CMP             R0, #0|0-40
81448|code|BGE             loc_13E5A|23-218
81450|code|LDR             R2, [SP,#0x50+s2]|0-154
81452|code|LDR             R3, [R2,#0xC]|211-104
81454|code|CMP             R3, #0|0-43
81456|code|BEQ             loc_13EC6|73-208
81458|code|ADD             R2, SP, #0x50+var_3C|5-170
81460|code|MOV             R3, R11|91-70
81462|code|STR             R2, [SP,#0x50+s2]|0-146
81464|code|B               loc_13E74|28-224
81466|code|LDR             R1, [SP,#0x50+s1]; s2|4-153
81468|code|MOVS            R3, #0|0-35
81470|code|LDR             R2, [R7,#0x18]|186-105
81472|code|STR             R3, [SP,#0x50+var_38]|6-147
81474|code|STR             R1, [SP,#0x50+var_3C]|5-145
81476|code|CBZ             R2, loc_13E5A|74-177
81478|code|LDR.W           R11, [R7,#0x14]|215-248-20-176
81482|code|STR             R3, [SP,#0x50+s2]|0-147
81484|code|LDR.W           R0, [R11,#0x10]; s1|219-248-16-0
81488|code|BLX             strcmp|254-247-8-232
81492|code|LDR             R3, [SP,#0x50+s2]|0-155
81494|code|CMP             R0, #0|0-40
81496|code|BLT             loc_13EC8|54-219
81498|code|ADD             R3, SP, #0x50+var_3C|5-171
81500|code|MOV             R0, R6|48-70
81502|code|MOV             R1, R9|73-70
81504|code|STR             R3, [SP,#0x50+s2]|0-147
81506|code|MOV             R2, R3|26-70
81508|code|BL              sub_14900|0-240-76-253
81512|code|LDR.W           R11, [SP,#0x50+var_30]|221-248-32-176
81516|code|LDR             R3, [SP,#0x50+var_34]|7-155
81518|code|CMP.W           R11, #0|187-241-0-15
81522|code|BEQ             loc_13F3C|99-208
81524|code|RSB.W           R2, R11, R8|203-235-8-2
81528|code|CLZ.W           R2, R2|178-250-130-242
81532|code|LSRS            R2, R2, #5|82-9
81534|code|CMP             R3, #0|0-43
81536|code|ITE EQ|12-191
81538|code|MOVEQ           R3, R2|19-70
81540|code|ORRNE.W         R3, R2, #1|66-240-1-3
81544|code|CBNZ            R3, loc_13ECE|11-187
81546|code|LDR             R0, [SP,#0x50+var_3C]; s1|5-152
81548|code|LDR.W           R1, [R11,#0x10]; s2|219-248-16-16
81552|code|BLX             strcmp|253-247-232-239
81556|code|STR             R0, [SP,#0x50+var_44]|3-144
81558|code|LDR             R3, [SP,#0x50+var_44]|3-155
81560|code|LSRS            R6, R3, #0x1F|222-15
81562|code|MOVS            R0, #0x18; unsigned int|24-32
81564|code|BLX             _Znwj; operator new(uint)|253-247-238-238
81568|code|LDR             R3, [SP,#0x50+s2]|0-155
81570|code|MOV             R2, R11|90-70
81572|code|MOV             LR, R0|134-70
81574|code|LDM.W           R3, {R0,R1}|147-232-3-0
81578|code|ADD.W           R9, LR, #0x10|14-241-16-9
81582|code|MOV             R3, R8|67-70
81584|code|MOV             R11, LR|243-70
81586|code|STM.W           R9, {R0,R1}|137-232-3-0
81590|code|MOV             R0, R6|48-70
81592|code|MOV             R1, LR|113-70
81594|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|253-247-20-239
81598|code|LDR             R3, [R7,#0x18]|187-105
81600|code|ADDS            R3, #1|1-51
81602|code|STR             R3, [R7,#0x18]|187-97
81604|code|B               loc_13D60|76-231
81606|code|MOV             R11, R2|147-70
81608|code|ADD             R2, SP, #0x50+var_3C|5-170
81610|code|STR             R2, [SP,#0x50+s2]|0-146
81612|code|B               loc_13E74|210-231
81614|code|MOVS            R6, #1|1-38
81616|code|B               loc_13E9A|227-231
81618|code|ADD             R3, SP, #0x50+var_3C|5-171
81620|code|STR             R3, [SP,#0x50+s2]|0-147
81622|code|B               loc_13E96|222-231
81624|code|MOVW            R0, #0x6B48|70-246-72-48
81628|code|MOVW            R1, #0x68D0|70-246-208-1
81632|code|MOVT.W          R0, #1; assertion|192-242-1-0
81636|code|MOVT.W          R1, #1; file|192-242-1-1
81640|code|MOVS            R2, #0xD7; line|215-34
81642|code|LDR             R3, =aVoidFusezipdat_0; "void FuseZipData::renameNode(FileNode*,"...|21-75
81644|code|BLX             __assert_fail|253-247-54-238
81648|code|MOVW            R0, #0x68C0|70-246-192-0
81652|code|MOVW            R1, #0x68D0|70-246-208-1
81656|code|MOVT.W          R0, #1; assertion|192-242-1-0
81660|code|MOVT.W          R1, #1; file|192-242-1-1
81664|code|MOVS            R2, #0xD6; line|214-34
81666|code|LDR             R3, =aVoidFusezipdat_0; "void FuseZipData::renameNode(FileNode*,"...|15-75
81668|code|BLX             __assert_fail|253-247-42-238
81672|code|MOVW            R0, #0x6B5C|70-246-92-48
81676|code|MOVW            R1, #0x68D0|70-246-208-1
81680|code|MOVT.W          R0, #1; assertion|192-242-1-0
81684|code|MOVT.W          R1, #1; file|192-242-1-1
81688|code|MOVS            R2, #0xD9; line|217-34
81690|code|LDR             R3, =aVoidFusezipdat_0; "void FuseZipData::renameNode(FileNode*,"...|9-75
81692|code|BLX             __assert_fail|253-247-30-238
81696|code|BLX             __stack_chk_fail|253-247-236-238
81700|code|MOVW            R0, #0x6B70|70-246-112-48
81704|code|MOVW            R1, #0x68D0|70-246-208-1
81708|code|MOVT.W          R0, #1; assertion|192-242-1-0
81712|code|MOVT.W          R1, #1; file|192-242-1-1
81716|code|MOVS            R2, #0xE4; line|228-34
81718|code|LDR             R3, =aVoidFusezipdat_0; "void FuseZipData::renameNode(FileNode*,"...|2-75
81720|code|BLX             __assert_fail|253-247-16-238
81724|code|MOV             R11, R3|155-70
81726|code|B               loc_13D60|15-231
81728|data|DCD aVoidFusezipdat_0; "void FuseZipData::renameNode(FileNode*,"...|132-104-1-0
81732|code|PUSH.W          {R4-R11,LR}|45-233-240-79
81736|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
81744|code|SUB             SP, SP, #0x24|137-176
81746|code|LDR             R3, [R5]|43-104
81748|code|MOV             R7, R0|7-70
81750|code|MOV             R6, R1|14-70
81752|code|STR             R3, [SP,#0x48+var_2C]|7-147
81754|code|BL              sub_13A1C|255-247-95-253
81758|code|MOV             R4, R0|4-70
81760|code|CBZ             R0, loc_13F86|136-177
81762|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
81766|code|CMP             R3, #0|0-43
81768|code|BEQ.W           loc_14182|0-240-11-129
81772|code|STR             R4, [R6,#0x58]|180-101
81774|code|MOV             R0, R4|32-70
81776|code|MOV             R1, R6|49-70
81778|code|BL              sub_14D58|0-240-241-254
81782|code|LDR             R2, [SP,#0x48+var_2C]|7-154
81784|code|LDR             R3, [R5]|43-104
81786|code|CMP             R2, R3|154-66
81788|code|BNE.W           loc_1417E|64-240-255-128
81792|code|ADD             SP, SP, #0x24 ; '$'|9-176
81794|code|POP.W           {R4-R11,PC}|189-232-240-143
81798|code|LDR             R3, [R6,#0x38]|179-107
81800|code|ADD.W           R10, SP, #0x48+var_34|13-241-20-10
81804|code|LDR             R2, [R6,#0x3C]|242-107
81806|code|LDR.W           R8, [R7,#0x1C]|215-248-28-128
81810|code|CMP             R3, R2|147-66
81812|code|BHI             loc_1400C|58-216
81814|code|MOVW            R1, #0x6674|70-242-116-97
81818|code|ADD             R2, SP, #0x48+var_3C|3-170
81820|code|MOVT.W          R1, #1|192-242-1-1
81824|code|MOV             R0, R10|80-70
81826|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|253-247-58-238
81830|code|MOV             R0, R8|64-70
81832|code|LDR             R1, [SP,#0x48+var_34]|5-153
81834|code|BL              sub_14BF8|0-240-37-254
81838|code|LDR             R2, [SP,#0x48+var_34]|5-154
81840|code|MOV             R4, R0|4-70
81842|code|MOVW            R3, #0x81D8|72-242-216-19
81846|code|SUB.W           R0, R2, #0xC|162-241-12-0
81850|code|MOVT.W          R3, #2|192-242-2-3
81854|code|CMP             R0, R3|152-66
81856|code|BNE             loc_1401E|45-209
81858|code|CMP             R4, #0|0-44
81860|code|BEQ.W           loc_141EE|0-240-19-129
81864|code|LDR             R3, [R4,#0x3C]|227-107
81866|code|ADDS            R2, R7, #4|58-29
81868|code|ADD.W           R8, R7, #8|7-241-8-8
81872|code|STR             R2, [SP,#0x48+var_44]|1-146
81874|code|ADD             R2, SP, #0x48+var_28|8-170
81876|code|LDR             R0, [R7,#0xC]|248-104
81878|code|MOV             R1, R8|65-70
81880|code|STR.W           R3, [R2,#-0x18]!|66-248-24-61
81884|code|BL              sub_131D8|255-247-252-248
81888|code|CMP             R8, R0|128-69
81890|code|MOV             R11, R0|131-70
81892|code|BEQ.W           loc_140F4|0-240-134-128
81896|code|LDR             R3, [R0,#0x10]|3-105
81898|code|LDR.W           R9, [SP,#0x48+s1]|221-248-8-144
81902|code|MOV             R1, R3; s2|25-70
81904|code|STR             R3, [SP,#0x48+s2]|0-147
81906|code|MOV             R0, R9; s1|72-70
81908|code|BLX             strcmp|253-247-54-239
81912|code|LDR             R3, [SP,#0x48+s2]|0-155
81914|code|CMP             R0, #0|0-40
81916|code|BLT             loc_14052|41-219
81918|code|STR.W           R4, [R11,#0x14]|203-248-20-64
81922|code|MOV             R0, R7|56-70
81924|code|MOV             R1, R4|33-70
81926|code|BL              sub_13F44|255-247-157-255
81930|code|B               loc_13F6C|175-231
81932|code|SUBS            R3, R3, R2|155-26
81934|code|ADD.W           R1, R6, #0x3C ; '<'; std::string *|6-241-60-1
81938|code|MOV             R2, R0; unsigned int|2-70
81940|code|SUBS            R3, #1; unsigned int|1-59
81942|code|MOV             R0, R10; this|80-70
81944|code|BLX             _ZNSsC1ERKSsjj; std::string::string(std::string const&,uint,uint)|253-247-166-237
81948|code|B               loc_13FA6|195-231
81950|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
81958|code|CMP             R3, #0|0-43
81960|code|BEQ.W           loc_1415C|0-240-152-128
81964|code|SUBS            R2, #4|4-58
81966|code|DMB.W           SY|191-243-95-143
81970|code|LDREX.W         R3, [R2]|82-232-0-63
81974|code|SUBS            R1, R3, #1|89-30
81976|code|STREX.W         LR, R1, [R2]|66-232-0-30
81980|code|CMP.W           LR, #0|190-241-0-15
81984|code|BNE             loc_14032|247-209
81986|code|DMB.W           SY|191-243-95-143
81990|code|CMP             R3, #0|0-43
81992|code|BGT             loc_13FC2|187-220
81994|code|ADD             R1, SP, #0x48+var_3C|3-169
81996|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-168-237
82000|code|B               loc_13FC2|183-231
82002|code|MOV             R1, R3; s2|25-70
82004|code|MOV             R0, R9; s1|72-70
82006|code|STR             R3, [SP,#0x48+s2]|0-147
82008|code|MOVS            R2, #0|0-34
82010|code|STR.W           R9, [SP,#0x48+var_3C]|205-248-12-144
82014|code|STR             R2, [SP,#0x48+var_38]|4-146
82016|code|BLX             strcmp|253-247-0-239
82020|code|LDR             R3, [SP,#0x48+s2]|0-155
82022|code|CMP             R0, #0|0-40
82024|code|BLT             loc_14132|99-219
82026|code|MOV             R0, R3; s1|24-70
82028|code|MOV             R1, R9; s2|73-70
82030|code|BLX             strcmp|253-247-250-238
82034|code|CMP             R0, #0|0-40
82036|code|BGE             loc_13FFE|195-218
82038|code|LDR             R3, [R7,#0x14]|123-105
82040|code|CMP             R11, R3|155-69
82042|code|BEQ             loc_14170|121-208
82044|code|MOV             R0, R11|88-70
82046|code|BLX             _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|253-247-134-238
82050|code|MOV             R3, R0|3-70
82052|code|MOV             R0, R9; s1|72-70
82054|code|LDR             R1, [R3,#0x10]; s2|25-105
82056|code|STR             R3, [SP,#0x48+s2]|0-147
82058|code|BLX             strcmp|253-247-236-238
82062|code|CMP             R0, #0|0-40
82064|code|BGE             loc_14114|64-218
82066|code|LDR.W           R2, [R11,#0xC]|219-248-12-32
82070|code|LDR             R3, [SP,#0x48+s2]|0-155
82072|code|CMP             R2, #0|0-42
82074|code|BEQ             loc_14170|105-208
82076|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
82080|code|MOV             R11, R3|155-70
82082|code|RSB.W           R2, R11, R8|203-235-8-2
82086|code|CLZ.W           R2, R2|178-250-130-242
82090|code|LSRS            R2, R2, #5|82-9
82092|code|CMP             R3, #0|0-43
82094|code|ITE EQ|12-191
82096|code|MOVEQ           R3, R2|19-70
82098|code|ORRNE.W         R3, R2, #1|66-240-1-3
82102|code|CMP             R3, #0|0-43
82104|code|BNE.W           loc_141CE|64-240-137-128
82108|code|LDR             R0, [SP,#0x48+var_3C]; s1|3-152
82110|code|LDR.W           R1, [R11,#0x10]; s2|219-248-16-16
82114|code|BLX             strcmp|253-247-208-238
82118|code|MOV.W           R10, R0,LSR#31|79-234-208-122
82122|code|MOVS            R0, #0x18; unsigned int|24-32
82124|code|BLX             _Znwj; operator new(uint)|253-247-214-237
82128|code|MOV             R2, R11|90-70
82130|code|MOV             R3, R8|67-70
82132|code|MOV             LR, R0|134-70
82134|code|LDM.W           R9, {R0,R1}|153-232-3-0
82138|code|ADD.W           R9, LR, #0x10|14-241-16-9
82142|code|MOV             R11, LR|243-70
82144|code|STM.W           R9, {R0,R1}|137-232-3-0
82148|code|MOV             R0, R10|80-70
82150|code|MOV             R1, LR|113-70
82152|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|253-247-252-237
82156|code|LDR             R3, [R7,#0x18]|187-105
82158|code|ADDS            R3, #1|1-51
82160|code|STR             R3, [R7,#0x18]|187-97
82162|code|B               loc_13FFE|132-231
82164|code|LDR             R1, [SP,#0x48+s1]; s2|2-153
82166|code|MOV.W           R9, #0|79-240-0-9
82170|code|LDR             R3, [R7,#0x18]|187-105
82172|code|STR.W           R9, [SP,#0x48+var_38]|205-248-16-144
82176|code|STR             R1, [SP,#0x48+var_3C]|3-145
82178|code|CBZ             R3, loc_14114|59-177
82180|code|LDR.W           R11, [R7,#0x14]|215-248-20-176
82184|code|LDR.W           R0, [R11,#0x10]; s1|219-248-16-0
82188|code|BLX             strcmp|253-247-170-238
82192|code|CMP             R0, #0|0-40
82194|code|BLT             loc_14168|41-219
82196|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
82200|code|MOV             R0, R10|80-70
82202|code|LDR             R1, [SP,#0x48+var_44]|1-153
82204|code|MOV             R2, R9|74-70
82206|code|BL              sub_14900|0-240-239-251
82210|code|LDR.W           R11, [SP,#0x48+var_30]|221-248-24-176
82214|code|LDR             R3, [SP,#0x48+var_34]|5-155
82216|code|CMP.W           R11, #0|187-241-0-15
82220|code|BNE             loc_140A2|185-209
82222|code|MOV             R11, R3|155-70
82224|code|B               loc_13FFE|101-231
82226|code|LDR             R3, [R7,#0x10]|59-105
82228|code|CMP             R11, R3|155-69
82230|code|BEQ             loc_1416A|24-208
82232|code|MOV             R0, R11|88-70
82234|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|253-247-224-236
82238|code|MOV             R1, R9; s2|73-70
82240|code|MOV             R2, R0|2-70
82242|code|LDR             R0, [R0,#0x10]; s1|0-105
82244|code|STR             R2, [SP,#0x48+s2]|0-146
82246|code|BLX             strcmp|253-247-142-238
82250|code|CMP             R0, #0|0-40
82252|code|BGE             loc_14114|226-218
82254|code|LDR             R2, [SP,#0x48+s2]|0-154
82256|code|LDR             R3, [R2,#0xC]|211-104
82258|code|CBZ             R3, loc_14176|131-177
82260|code|MOV             R3, R11|91-70
82262|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
82266|code|B               loc_140A2|162-231
82268|code|LDR.W           R3, [R2,#-4]|82-248-4-60
82272|code|SUBS            R1, R3, #1|89-30
82274|code|STR.W           R1, [R2,#-4]|66-248-4-28
82278|code|B               loc_14046|110-231
82280|code|MOV             R3, R9|75-70
82282|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
82286|code|B               loc_140A2|152-231
82288|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
82292|code|B               loc_140BC|162-231
82294|code|MOV             R11, R2|147-70
82296|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
82300|code|B               loc_140A2|145-231
82302|code|BLX             __stack_chk_fail|253-247-190-237
82306|code|MOVS            R0, #8; thrown_size|8-32
82308|code|ADD.W           R10, SP, #0x48+var_34|13-241-20-10
82312|code|BLX             __cxa_allocate_exception|253-247-208-237
82316|code|MOV             R1, #0x16B84|70-246-132-49-192-242-1-1
82324|code|ADD             R2, SP, #0x48+s1|2-170
82326|code|MOV             R4, R0|4-70
82328|code|MOV             R0, R10|80-70
82330|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|253-247-62-237
82334|code|MOV             R0, R4; this|32-70
82336|code|MOV             R1, R10; std::string *|81-70
82338|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|253-247-202-236
82342|code|LDR             R3, [SP,#0x48+var_34]|5-155
82344|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
82352|code|SUB.W           R0, R3, #0xC|163-241-12-0
82356|code|CMP             R0, R2|144-66
82358|code|BNE             loc_1420C|41-209
82360|code|MOVW            R1, #0x81A8|72-242-168-17
82364|code|MOVW            R2, #0x1D74|65-246-116-82
82368|code|MOV             R0, R4; void *|32-70
82370|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
82374|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
82378|code|BLX             __cxa_throw|253-247-218-237
82382|code|MOV.W           R10, #1|79-240-1-10
82386|code|B               loc_140CA|122-231
82388|code|LDR             R0, [SP,#0x48+var_34]|5-152
82390|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
82398|code|SUBS            R0, #0xC|12-56
82400|code|CMP             R0, R3|152-66
82402|code|BEQ             loc_141EA|2-208
82404|code|ADD             R1, SP, #0x48+var_3C|3-169
82406|code|BL              sub_11EA0|253-247-91-254
82410|code|BLX             __cxa_end_cleanup|253-247-154-236
82414|code|MOVS            R0, #4; thrown_size|4-32
82416|code|BLX             __cxa_allocate_exception|253-247-156-237
82420|code|LDR             R3, =unk_281C8|16-75
82422|code|MOVW            R1, #0x81EC|72-242-236-17
82426|code|MOVW            R2, #0x1BB8|65-246-184-50
82430|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
82434|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
82438|code|STR             R3, [R0]|3-96
82440|code|BLX             __cxa_throw|253-247-186-237
82444|code|ADD             R1, SP, #0x48+var_3C|3-169
82446|code|BL              sub_11EA0|253-247-71-254
82450|code|B               loc_141B8|209-231
82452|code|LDR             R3, [SP,#0x48+var_34]|5-155
82454|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
82462|code|SUB.W           R0, R3, #0xC|163-241-12-0
82466|code|CMP             R0, R2|144-66
82468|code|BEQ             loc_1422C|2-208
82470|code|ADD             R1, SP, #0x48+var_3C|3-169
82472|code|BL              sub_11EA0|253-247-58-254
82476|code|MOV             R0, R4; void *|32-70
82478|code|BLX             __cxa_free_exception|253-247-132-237
82482|code|B               loc_141EA|218-231
82484|code|B               loc_1422C|250-231
82486|data|ALIGN 4|0-191
82488|data|DCD unk_281C8|200-129-2-0
82492|code|PUSH.W          {R4-R11,LR}|45-233-240-79
82496|code|MOVW            R3, #0x81B8|72-242-184-19
82500|code|SUB             SP, SP, #0x64|153-176
82502|code|MOVT.W          R3, #2|192-242-2-3
82506|code|MOV             R6, R0|6-70
82508|code|STR             R3, [SP,#0x88+var_5C]|11-147
82510|code|LDR             R3, [R3]|27-104
82512|code|STR             R1, [SP,#0x88+var_70]|6-145
82514|code|STR             R3, [SP,#0x88+var_2C]|23-147
82516|code|BL              sub_14A10|0-240-220-251
82520|code|STR             R0, [R6]|48-96
82522|code|CMP             R0, #0|0-40
82524|code|BEQ.W           loc_146D4|0-240-58-130
82528|code|LDR             R3, [R0,#0x3C]|195-107
82530|code|ADDS            R2, R6, #4|50-29
82532|code|ADD.W           R8, R6, #8|6-241-8-8
82536|code|STR             R2, [SP,#0x88+var_7C]|3-146
82538|code|ADD             R2, SP, #0x88+var_28|24-170
82540|code|MOVS            R4, #0|0-36
82542|code|MOV             R1, R8|65-70
82544|code|STR             R4, [R0,#0x58]|132-101
82546|code|STR.W           R3, [R2,#-0x14]!|66-248-20-61
82550|code|LDR             R0, [R6,#0xC]|240-104
82552|code|STR             R2, [SP,#0x88+var_68]|8-146
82554|code|BL              sub_131D8|254-247-173-255
82558|code|CMP             R8, R0|128-69
82560|code|MOV             R9, R0|129-70
82562|code|BEQ.W           loc_145AE|0-240-148-129
82566|code|LDR.W           R10, [R0,#0x10]|208-248-16-160
82570|code|LDR             R5, [SP,#0x88+s1]|19-157
82572|code|MOV             R1, R10; s2|81-70
82574|code|MOV             R0, R5; s1|40-70
82576|code|BLX             strcmp|253-247-232-237
82580|code|CMP             R0, R4|160-66
82582|code|BLT.W           loc_1453E|192-242-82-129
82586|code|LDR             R3, [R6]|51-104
82588|code|MOVS            R1, #0|0-33
82590|code|STR.W           R3, [R9,#0x14]|201-248-20-48
82594|code|LDR             R0, [R6,#0x1C]|240-105
82596|code|BLX             zip_get_num_entries|253-247-54-236
82600|code|LDR             R3, [SP,#0x88+var_70]|6-155
82602|code|STRD.W          R0, R1, [SP,#0x88+var_78]|205-233-4-1
82606|code|CMP             R3, #0|0-43
82608|code|BEQ             loc_1433E|69-208
82610|code|CMP             R0, #1|1-40
82612|code|MOV             R3, R1|11-70
82614|code|SBCS.W          R3, R3, #0|115-241-0-3
82618|code|BLT             loc_1430C|39-219
82620|code|LDRD.W          R10, R11, [SP,#0x88+var_78]|221-233-4-171
82624|code|MOVS            R3, #0|0-35
82626|code|MOVS            R4, #0|0-36
82628|code|MOVS            R5, #0|0-37
82630|code|MOVS            R7, #0x40 ; '@'|64-39
82632|code|MOV             R9, R3|153-70
82634|code|LDR             R0, [R6,#0x1C]|240-105
82636|code|MOV             R3, R5|43-70
82638|code|MOV             R2, R4|34-70
82640|code|STR             R7, [SP,#0x88+var_88]|0-151
82642|code|BLX             zip_get_name|253-247-210-235
82646|code|LDRB            R3, [R0]|3-120
82648|code|CMP             R3, #0x2F ; '/'|47-43
82650|code|IT EQ|8-191
82652|code|MOVEQ.W         R9, #1|79-240-1-9
82656|code|BEQ             loc_142F8|10-208
82658|code|MOVW            R1, #0x6A50|70-246-80-33
82662|code|MOVS            R2, #3; n|3-34
82664|code|MOVT.W          R1, #1; s2|192-242-1-1
82668|code|BLX             strncmp|253-247-150-237
82672|code|CMP             R0, #0|0-40
82674|code|IT EQ|8-191
82676|code|MOVEQ.W         R9, #1|79-240-1-9
82680|code|ADDS            R4, #1|1-52
82682|code|ADC.W           R5, R5, #0|69-241-0-5
82686|code|CMP             R5, R11|93-69
82688|code|IT EQ|8-191
82690|code|CMPEQ           R4, R10|84-69
82692|code|BNE             loc_142CA|225-209
82694|code|STR.W           R9, [SP,#0x88+var_6C]|205-248-28-144
82698|code|B               loc_1434E|32-224
82700|code|LDR             R4, [R6,#0x10]|52-105
82702|code|CMP             R4, R8|68-69
82704|code|BEQ             loc_1432C|12-208
82706|code|LDR             R1, [R4,#0x14]|97-105
82708|code|LDR             R3, [R6]|51-104
82710|code|CMP             R3, R1|139-66
82712|code|BEQ             loc_14320|2-208
82714|code|MOV             R0, R6|48-70
82716|code|BL              sub_13F44|255-247-18-254
82720|code|MOV             R0, R4|32-70
82722|code|BLX             _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|253-247-98-236
82726|code|CMP             R0, R8|64-69
82728|code|MOV             R4, R0|4-70
82730|code|BNE             loc_14312|242-209
82732|code|LDR             R3, [SP,#0x88+var_5C]|11-155
82734|code|LDR             R2, [SP,#0x88+var_2C]|23-154
82736|code|LDR             R3, [R3]|27-104
82738|code|CMP             R2, R3|154-66
82740|code|BNE.W           loc_146D0|64-240-204-129
82744|code|ADD             SP, SP, #0x64 ; 'd'|25-176
82746|code|POP.W           {R4-R11,PC}|189-232-240-143
82750|code|LDRD.W          R2, R3, [SP,#0x88+var_78]|221-233-4-35
82754|code|CMP             R2, #1|1-42
82756|code|SBCS.W          R3, R3, #0|115-241-0-3
82760|code|BLT             loc_1430C|224-219
82762|code|LDR             R3, [SP,#0x88+var_70]|6-155
82764|code|STR             R3, [SP,#0x88+var_6C]|7-147
82766|code|MOVW            R3, #0x1DF8|65-246-248-83
82770|code|MOVS            R4, #0|0-36
82772|code|MOVT.W          R3, #1|192-242-1-3
82776|code|MOVS            R5, #0|0-37
82778|code|STR             R3, [SP,#0x88+var_60]|10-147
82780|code|B               loc_14388|20-224
82782|code|LDR             R3, [SP,#0x88+var_50]|14-155
82784|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
82792|code|STR.W           R7, [R11,#0x14]|203-248-20-112
82796|code|SUB.W           R0, R3, #0xC|163-241-12-0
82800|code|CMP             R0, R2|144-66
82802|code|BNE.W           loc_144CE|64-240-172-128
82806|code|LDRD.W          R2, R3, [SP,#0x88+var_78]|221-233-4-35
82810|code|ADDS            R4, #1|1-52
82812|code|ADC.W           R5, R5, #0|69-241-0-5
82816|code|CMP             R4, R2|148-66
82818|code|SBCS.W          R3, R5, R3|117-235-3-3
82822|code|BGE             loc_1430C|193-218
82824|code|LDR             R7, =unk_281E4|193-79
82826|code|MOVS            R1, #0x40 ; '@'|64-33
82828|code|LDR             R0, [R6,#0x1C]|240-105
82830|code|MOV             R2, R4|34-70
82832|code|MOV             R3, R5|43-70
82834|code|STR             R1, [SP,#0x88+var_88]|0-145
82836|code|BLX             zip_get_name|253-247-112-235
82840|code|LDR             R1, [SP,#0x88+var_70]|6-153
82842|code|LDR             R2, [SP,#0x88+var_6C]|7-154
82844|code|ADD             R3, SP, #0x88+var_50|14-171
82846|code|STR             R7, [SP,#0x88+var_50]|14-151
82848|code|BL              sub_1343C|255-247-76-248
82852|code|LDR             R3, [SP,#0x88+var_50]|14-155
82854|code|ADD             R1, SP, #0x88+var_4C|15-169
82856|code|LDR             R0, [SP,#0x88+var_7C]|3-152
82858|code|STR             R3, [SP,#0x88+var_4C]|15-147
82860|code|BL              sub_14798|0-240-244-249
82864|code|CMP             R8, R0|128-69
82866|code|BNE.W           loc_1463A|64-240-66-129
82870|code|LDR             R0, [R6,#0x1C]|240-105
82872|code|MOV             R2, R4|34-70
82874|code|MOV             R3, R5|43-70
82876|code|LDR             R1, [SP,#0x88+var_4C]|15-153
82878|code|BL              sub_152D8|0-240-139-255
82882|code|MOV             R7, R0|7-70
82884|code|CMP             R0, #0|0-40
82886|code|BEQ.W           loc_146AE|0-240-114-129
82890|code|LDR             R3, [R0,#0x3C]|195-107
82892|code|ADD             R2, SP, #0x88+var_28|24-170
82894|code|LDR             R0, [R6,#0xC]|240-104
82896|code|MOV             R1, R8|65-70
82898|code|STR.W           R3, [R2,#-0x20]!|66-248-32-61
82902|code|BL              sub_131D8|254-247-255-254
82906|code|CMP             R8, R0|128-69
82908|code|MOV             R11, R0|131-70
82910|code|BEQ             loc_14494|89-208
82912|code|LDR.W           R10, [R0,#0x10]|208-248-16-160
82916|code|LDR.W           R9, [SP,#0x88+s2]|221-248-64-144
82920|code|MOV             R1, R10; s2|81-70
82922|code|MOV             R0, R9; s1|72-70
82924|code|BLX             strcmp|253-247-58-237
82928|code|CMP             R0, #0|0-40
82930|code|BGE             loc_1435E|180-218
82932|code|MOV             R0, R9; s1|72-70
82934|code|MOV             R1, R10; s2|81-70
82936|code|MOVS            R3, #0|0-35
82938|code|STR.W           R9, [SP,#0x88+s1]|205-248-76-144
82942|code|STR             R3, [SP,#0x88+var_38]|20-147
82944|code|BLX             strcmp|253-247-48-237
82948|code|SUBS            R3, R0, #0|3-30
82950|code|STR             R3, [SP,#0x88+var_64]|9-147
82952|code|BLT             loc_144F8|118-219
82954|code|MOV             R0, R10; s1|80-70
82956|code|MOV             R1, R9; s2|73-70
82958|code|BLX             strcmp|253-247-42-237
82962|code|CMP             R0, #0|0-40
82964|code|BGE             loc_1435E|163-218
82966|code|LDR             R3, [R6,#0x14]|115-105
82968|code|CMP             R11, R3|155-69
82970|code|BEQ.W           loc_14530|0-240-137-128
82974|code|MOV             R0, R11|88-70
82976|code|BLX             _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|253-247-180-236
82980|code|MOV             R10, R0|130-70
82982|code|MOV             R0, R9; s1|72-70
82984|code|LDR.W           R1, [R10,#0x10]; s2|218-248-16-16
82988|code|BLX             strcmp|253-247-26-237
82992|code|CMP             R0, #0|0-40
82994|code|BGE             loc_144B4|63-218
82996|code|LDR.W           R3, [R11,#0xC]|219-248-12-48
83000|code|CMP             R3, #0|0-43
83002|code|BEQ             loc_14530|121-208
83004|code|MOV             R11, R10|211-70
83006|code|RSB.W           R3, R10, R8|202-235-8-3
83010|code|CLZ.W           R3, R3|179-250-131-243
83014|code|LSRS            R3, R3, #5|91-9
83016|code|CMP.W           R11, #0|187-241-0-15
83020|code|IT NE|24-191
83022|code|ORRNE.W         R3, R3, #1|67-240-1-3
83026|code|CMP             R3, #0|0-43
83028|code|BNE             loc_14538|112-209
83030|code|LDR             R0, [SP,#0x88+s1]; s1|19-152
83032|code|LDR.W           R1, [R10,#0x10]; s2|218-248-16-16
83036|code|BLX             strcmp|253-247-2-237
83040|code|STR             R0, [SP,#0x88+var_64]|9-144
83042|code|LDR             R3, [SP,#0x88+var_64]|9-155
83044|code|MOV.W           R11, R3,LSR#31|79-234-211-123
83048|code|MOVS            R0, #0x18; unsigned int|24-32
83050|code|BLX             _Znwj; operator new(uint)|253-247-8-236
83054|code|LDR             R3, [SP,#0x88+var_68]|8-155
83056|code|MOV             LR, R0|134-70
83058|code|ADD.W           R12, LR, #0x10|14-241-16-12
83062|code|MOV             R2, R10|82-70
83064|code|LDM.W           R3, {R0,R1}|147-232-3-0
83068|code|MOV             R3, R8|67-70
83070|code|STM.W           R12, {R0,R1}|140-232-3-0
83074|code|MOV             R0, R11|88-70
83076|code|MOV             R1, LR|113-70
83078|code|MOV             R11, LR|243-70
83080|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|253-247-44-236
83084|code|LDR             R3, [R6,#0x18]|179-105
83086|code|ADDS            R3, #1|1-51
83088|code|STR             R3, [R6,#0x18]|179-97
83090|code|B               loc_1435E|100-231
83092|code|LDR             R1, [SP,#0x88+s2]; s2|16-153
83094|code|MOV.W           R9, #0|79-240-0-9
83098|code|LDR             R3, [R6,#0x18]|179-105
83100|code|STR.W           R9, [SP,#0x88+var_38]|205-248-80-144
83104|code|STR             R1, [SP,#0x88+s1]|19-145
83106|code|CBZ             R3, loc_144B4|59-177
83108|code|LDR.W           R10, [R6,#0x14]|214-248-20-160
83112|code|LDR.W           R0, [R10,#0x10]; s1|218-248-16-0
83116|code|BLX             strcmp|253-247-218-236
83120|code|CMP             R0, #0|0-40
83122|code|BLT             loc_14534|63-219
83124|code|ADD             R0, SP, #0x88+var_34|21-168
83126|code|LDR             R1, [SP,#0x88+var_7C]|3-153
83128|code|LDR             R2, [SP,#0x88+var_68]|8-154
83130|code|BL              sub_14900|0-240-33-250
83134|code|LDR.W           R10, [SP,#0x88+var_30]|221-248-88-160
83138|code|LDR.W           R11, [SP,#0x88+var_34]|221-248-84-176
83142|code|CMP.W           R10, #0|186-241-0-15
83146|code|BNE             loc_1443E|184-209
83148|code|B               loc_1435E|71-231
83150|code|LDR             R2, [SP,#0x88+var_60]|10-154
83152|code|CBZ             R2, loc_14524|66-179
83154|code|SUBS            R3, #4|4-59
83156|code|DMB.W           SY|191-243-95-143
83160|code|LDREX.W         R2, [R3]|83-232-0-47
83164|code|SUBS            R1, R2, #1|81-30
83166|code|STREX.W         R7, R1, [R3]|67-232-0-23
83170|code|CMP             R7, #0|0-47
83172|code|BNE             loc_144D8|248-209
83174|code|DMB.W           SY|191-243-95-143
83178|code|CMP             R2, #0|0-42
83180|code|BGT.W           loc_14376|63-247-67-175
83184|code|LDR             R1, [SP,#0x88+var_68]|8-153
83186|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-86-235
83190|code|B               loc_14376|62-231
83192|code|LDR.W           R10, [R6,#0x10]|214-248-16-160
83196|code|CMP             R11, R10|211-69
83198|code|BEQ             loc_1443E|158-208
83200|code|MOV             R0, R11|88-70
83202|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|253-247-252-234
83206|code|MOV             R1, R9; s2|73-70
83208|code|MOV             R10, R0|130-70
83210|code|LDR             R0, [R0,#0x10]; s1|0-105
83212|code|BLX             strcmp|253-247-170-236
83216|code|CMP             R0, #0|0-40
83218|code|BGE             loc_144B4|207-218
83220|code|LDR.W           R3, [R10,#0xC]|218-248-12-48
83224|code|CMP             R3, #0|0-43
83226|code|ITE NE|20-191
83228|code|MOVNE           R10, R11|218-70
83230|code|MOVEQ.W         R11, #0|79-240-0-11
83234|code|B               loc_1443E|140-231
83236|code|LDR.W           R2, [R3,#-4]|83-248-4-44
83240|code|SUBS            R1, R2, #1|81-30
83242|code|STR.W           R1, [R3,#-4]|67-248-4-28
83246|code|B               loc_144EA|220-231
83248|code|MOV             R10, R11|218-70
83250|code|B               loc_14462|150-231
83252|code|MOV             R11, R9|203-70
83254|code|B               loc_1443E|130-231
83256|code|MOV.W           R11, #1|79-240-1-11
83260|code|B               loc_14468|148-231
83262|code|MOV             R0, R5; s1|40-70
83264|code|MOV             R1, R10; s2|81-70
83266|code|STR             R5, [SP,#0x88+var_34]|21-149
83268|code|STR             R4, [SP,#0x88+var_30]|22-148
83270|code|BLX             strcmp|253-247-142-236
83274|code|SUBS            R7, R0, #0|7-30
83276|code|BLT             loc_14588|28-219
83278|code|MOV             R0, R10; s1|80-70
83280|code|MOV             R1, R5; s2|41-70
83282|code|BLX             strcmp|253-247-136-236
83286|code|CMP             R0, #0|0-40
83288|code|BGE.W           loc_1429A|191-246-159-174
83292|code|LDR             R3, [R6,#0x14]|115-105
83294|code|CMP             R9, R3|153-69
83296|code|BEQ.W           loc_146CC|0-240-180-128
83300|code|MOV             R0, R9|72-70
83302|code|BLX             _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|253-247-18-236
83306|code|MOV             R4, R0|4-70
83308|code|MOV             R0, R5; s1|40-70
83310|code|LDR             R1, [R4,#0x10]; s2|33-105
83312|code|BLX             strcmp|253-247-120-236
83316|code|CMP             R0, #0|0-40
83318|code|BGE             loc_145C8|39-218
83320|code|LDR.W           R3, [R9,#0xC]|217-248-12-48
83324|code|CMP             R3, #0|0-43
83326|code|BEQ.W           loc_146CC|0-240-165-128
83330|code|MOV             R9, R4|161-70
83332|code|ADD             R5, SP, #0x88+var_34|21-173
83334|code|B               loc_145E2|44-224
83336|code|LDR             R4, [R6,#0x10]|52-105
83338|code|CMP             R9, R4|161-69
83340|code|BEQ             loc_14632|81-208
83342|code|MOV             R0, R9|72-70
83344|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|253-247-180-234
83348|code|MOV             R1, R5; s2|41-70
83350|code|MOV             R7, R0|7-70
83352|code|LDR             R0, [R0,#0x10]; s1|0-105
83354|code|BLX             strcmp|253-247-100-236
83358|code|CMP             R0, #0|0-40
83360|code|BGE             loc_145C8|18-218
83362|code|LDR             R4, [R7,#0xC]|252-104
83364|code|CMP             R4, #0|0-44
83366|code|BEQ             loc_14630|67-208
83368|code|MOV             R4, R9|76-70
83370|code|ADD             R5, SP, #0x88+var_34|21-173
83372|code|B               loc_145E2|25-224
83374|code|LDR             R1, [SP,#0x88+s1]; s2|19-153
83376|code|LDR             R3, [R6,#0x18]|179-105
83378|code|STR             R4, [SP,#0x88+var_30]|22-148
83380|code|STR             R1, [SP,#0x88+var_34]|21-145
83382|code|CBZ             R3, loc_145C8|59-177
83384|code|LDR.W           R9, [R6,#0x14]|214-248-20-144
83388|code|LDR.W           R0, [R9,#0x10]; s1|217-248-16-0
83392|code|BLX             strcmp|253-247-80-236
83396|code|CMP             R0, #0|0-40
83398|code|BLT             loc_14632|52-219
83400|code|ADD             R5, SP, #0x88+var_34|21-173
83402|code|ADD             R0, SP, #0x88+var_44|17-168
83404|code|LDR             R1, [SP,#0x88+var_7C]|3-153
83406|code|MOV             R2, R5|42-70
83408|code|BL              sub_14900|0-240-150-249
83412|code|LDR.W           R9, [SP,#0x88+var_40]|221-248-72-144
83416|code|LDR             R4, [SP,#0x88+var_44]|17-156
83418|code|CMP.W           R9, #0|185-241-0-15
83422|code|BEQ.W           loc_146F2|0-240-136-128
83426|code|RSB.W           R3, R9, R8|201-235-8-3
83430|code|CLZ.W           R3, R3|179-250-131-243
83434|code|LSRS            R3, R3, #5|91-9
83436|code|CMP             R4, #0|0-44
83438|code|ITE EQ|12-191
83440|code|MOVEQ           R4, R3|28-70
83442|code|ORRNE.W         R4, R3, #1|67-240-1-4
83446|code|CBNZ            R4, loc_14636|244-185
83448|code|LDR             R0, [SP,#0x88+var_34]; s1|21-152
83450|code|LDR.W           R1, [R9,#0x10]; s2|217-248-16-16
83454|code|BLX             strcmp|253-247-50-236
83458|code|MOV             R7, R0|7-70
83460|code|LSRS            R7, R7, #0x1F|255-15
83462|code|MOVS            R0, #0x18; unsigned int|24-32
83464|code|BLX             _Znwj; operator new(uint)|253-247-56-235
83468|code|MOV             R2, R9|74-70
83470|code|MOV             R3, R8|67-70
83472|code|MOV             R4, R0|4-70
83474|code|LDM.W           R5, {R0,R1}|149-232-3-0
83478|code|ADD.W           R5, R4, #0x10|4-241-16-5
83482|code|MOV             R9, R4|161-70
83484|code|STM.W           R5, {R0,R1}|133-232-3-0
83488|code|MOV             R0, R7|56-70
83490|code|MOV             R1, R4|33-70
83492|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|253-247-94-235
83496|code|LDR             R3, [R6,#0x18]|179-105
83498|code|ADDS            R3, #1|1-51
83500|code|STR             R3, [R6,#0x18]|179-97
83502|code|B               loc_1429A|52-230
83504|code|MOV             R9, R7|185-70
83506|code|ADD             R5, SP, #0x88+var_34|21-173
83508|code|B               loc_145E2|213-231
83510|code|MOVS            R7, #1|1-39
83512|code|B               loc_14606|229-231
83514|code|MOVW            R2, #0x6B9C|70-246-156-50
83518|code|MOVS            R0, #3|3-32
83520|code|MOVT.W          R2, #1|192-242-1-2
83524|code|MOVS            R1, #1|1-33
83526|code|LDR             R3, [SP,#0x88+var_4C]|15-155
83528|code|BLX             __syslog_chk|253-247-38-235
83532|code|MOVS            R0, #8; thrown_size|8-32
83534|code|BLX             __cxa_allocate_exception|253-247-110-235
83538|code|MOV             R1, #0x16BB8|70-246-184-49-192-242-1-1
83546|code|ADD             R2, SP, #0x88+var_54|13-170
83548|code|MOV             R4, R0|4-70
83550|code|ADD             R0, SP, #0x88+s2|16-168
83552|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|253-247-218-234
83556|code|MOV             R0, R4; this|32-70
83558|code|ADD             R1, SP, #0x88+s2; std::string *|16-169
83560|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|253-247-102-234
83564|code|LDR             R3, [SP,#0x88+s2]|16-155
83566|code|SUB.W           R0, R3, #0xC|163-241-12-0
83570|code|SUB.W           R3, R7, #0xC|167-241-12-3
83574|code|CMP             R0, R3|152-66
83576|code|BNE             loc_146FE|65-209
83578|code|MOVW            R1, #0x81A8|72-242-168-17
83582|code|MOVW            R2, #0x1D74|65-246-116-82
83586|code|MOV             R0, R4; void *|32-70
83588|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
83592|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
83596|code|BLX             __cxa_throw|253-247-120-235
83600|data|DCD unk_281E4|228-129-2-0
83604|code|LDR             R0, [SP,#0x88+var_50]|14-152
83606|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
83614|code|SUBS            R0, #0xC|12-56
83616|code|CMP             R0, R3|152-66
83618|code|BEQ             loc_146AA|2-208
83620|code|ADD             R1, SP, #0x88+var_54|13-169
83622|code|BL              sub_11EA0|253-247-251-251
83626|code|BLX             __cxa_end_cleanup|253-247-58-234
83630|code|MOVS            R0, #4; thrown_size|4-32
83632|code|BLX             __cxa_allocate_exception|253-247-60-235
83636|code|LDR             R3, =unk_281C8|26-75
83638|code|MOVW            R1, #0x81EC|72-242-236-17
83642|code|MOVW            R2, #0x1BB8|65-246-184-50
83646|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
83650|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
83654|code|STR             R3, [R0]|3-96
83656|code|BLX             __cxa_throw|253-247-90-235
83660|code|ADD             R5, SP, #0x88+var_34|21-173
83662|code|B               loc_14604|153-231
83664|code|BLX             __stack_chk_fail|253-247-20-235
83668|code|MOVS            R0, #4; thrown_size|4-32
83670|code|BLX             __cxa_allocate_exception|253-247-42-235
83674|code|LDR             R3, =unk_281C8|17-75
83676|code|MOVW            R1, #0x81EC|72-242-236-17
83680|code|MOVW            R2, #0x1BB8|65-246-184-50
83684|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
83688|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
83692|code|STR             R3, [R0]|3-96
83694|code|BLX             __cxa_throw|253-247-72-235
83698|code|MOV             R9, R4|161-70
83700|code|B               loc_1429A|209-229
83702|code|MOV             R0, R4; void *|32-70
83704|code|BLX             __cxa_free_exception|253-247-30-235
83708|code|B               loc_14694|202-231
83710|code|LDR             R1, [SP,#0x88+var_68]|8-153
83712|code|BL              sub_11EA0|253-247-206-251
83716|code|B               loc_1467A|185-231
83718|code|LDR             R3, [SP,#0x88+s2]|16-155
83720|code|SUB.W           R0, R3, #0xC|163-241-12-0
83724|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
83732|code|CMP             R0, R3|152-66
83734|code|BEQ             loc_146F6|238-208
83736|code|LDR             R1, [SP,#0x88+var_68]|8-153
83738|code|BL              sub_11EA0|253-247-193-251
83742|code|B               loc_146F6|234-231
83744|data|DCD unk_281C8|200-129-2-0
83748|code|PUSH            {R4-R6,LR}|112-181
83750|code|MOV             R4, #0x281B8|72-242-184-20-192-242-2-4
83758|code|SUB             SP, SP, #8|130-176
83760|code|LDR             R3, [R4]|35-104
83762|code|MOV             R6, R2|22-70
83764|code|MOV             R5, R0|5-70
83766|code|STR             R3, [SP,#0x18+var_14]|1-147
83768|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|253-247-248-233
83772|code|MOV             R0, R6; s|48-70
83774|code|BLX             strlen|253-247-72-234
83778|code|MOV             R1, R6; char *|49-70
83780|code|MOV             R2, R0; unsigned int|2-70
83782|code|MOV             R0, R5; this|40-70
83784|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|253-247-92-235
83788|code|LDR             R2, [SP,#0x18+var_14]|1-154
83790|code|MOV             R0, R5|40-70
83792|code|LDR             R3, [R4]|35-104
83794|code|CMP             R2, R3|154-66
83796|code|BNE             loc_1475A|1-209
83798|code|ADD             SP, SP, #8|2-176
83800|code|POP             {R4-R6,PC}|112-189
83802|code|BLX             __stack_chk_fail|253-247-208-234
83806|code|LDR             R0, [R5]|40-104
83808|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
83816|code|SUBS            R0, #0xC|12-56
83818|code|CMP             R0, R3|152-66
83820|code|BEQ             loc_14774|2-208
83822|code|MOV             R1, SP|105-70
83824|code|BL              sub_11EA0|253-247-150-251
83828|code|BLX             __cxa_end_cleanup|253-247-212-233
83832|code|PUSH            {R4-R6,LR}|112-181
83834|code|MOV             R6, R0|6-70
83836|code|MOV             R4, R1|12-70
83838|code|CBZ             R1, locret_14796|81-177
83840|code|LDR             R1, [R4,#0xC]|225-104
83842|code|MOV             R0, R6|48-70
83844|code|BL              sub_14778|255-247-248-255
83848|code|LDR             R5, [R4,#8]|165-104
83850|code|MOV             R0, R4; void *|32-70
83852|code|BLX             _ZdlPv; operator delete(void *)|253-247-152-233
83856|code|MOV             R4, R5|44-70
83858|code|CMP             R5, #0|0-45
83860|code|BNE             loc_14780|244-209
83862|code|POP             {R4-R6,PC}|112-189
83864|code|PUSH            {R4-R6,LR}|112-181
83866|code|ADDS            R5, R0, #4|5-29
83868|code|MOV             R6, R1|14-70
83870|code|LDR             R0, [R0,#8]|128-104
83872|code|MOV             R1, R5|41-70
83874|code|MOV             R2, R6|50-70
83876|code|BL              sub_131D8|254-247-24-253
83880|code|CMP             R0, R5|168-66
83882|code|MOV             R4, R0|4-70
83884|code|BEQ             loc_147BE|7-208
83886|code|LDR             R0, [R6]; s1|48-104
83888|code|LDR             R1, [R4,#0x10]; s2|33-105
83890|code|BLX             strcmp|253-247-88-235
83894|code|CMP             R0, #0|0-40
83896|code|BLT             loc_147BE|1-219
83898|code|MOV             R0, R4|32-70
83900|code|POP             {R4-R6,PC}|112-189
83902|code|MOV             R0, R5|40-70
83904|code|POP             {R4-R6,PC}|112-189
83906|data|ALIGN 4|0-191
83908|code|PUSH.W          {R3-R11,LR}|45-233-248-79
83912|code|MOV             R5, R0|5-70
83914|code|LDR.W           R8, [R0,#8]|208-248-8-128
83918|code|ADDS            R6, R0, #4|6-29
83920|code|CMP.W           R8, #0|184-241-0-15
83924|code|BEQ             loc_148A4|102-208
83926|code|LDR.W           R11, [R1]|209-248-0-176
83930|code|MOV             R10, R1|138-70
83932|code|MOV             R4, R8|68-70
83934|code|MOV             R7, R6|55-70
83936|code|LDR.W           R9, [R4,#0x10]|212-248-16-144
83940|code|MOV             R1, R11; s2|89-70
83942|code|MOV             R0, R9; s1|72-70
83944|code|BLX             strcmp|253-247-60-235
83948|code|MOV             R1, R9; s2|73-70
83950|code|CMP             R0, #0|0-40
83952|code|MOV             R0, R11; s1|88-70
83954|code|IT LT|184-191
83956|code|LDRLT           R4, [R4,#0xC]|228-104
83958|code|BLT             loc_14804|5-219
83960|code|BLX             strcmp|253-247-52-235
83964|code|CMP             R0, #0|0-40
83966|code|BGE             loc_14828|19-218
83968|code|MOV             R7, R4|39-70
83970|code|LDR             R4, [R4,#8]|164-104
83972|code|CMP             R4, #0|0-44
83974|code|BNE             loc_147E0|235-209
83976|code|SUBS            R3, R6, R7|243-27
83978|code|CLZ.W           R3, R3|179-250-131-243
83982|code|LSRS            R3, R3, #5|91-9
83984|code|LDR             R0, [R5,#0xC]|232-104
83986|code|LDR             R4, [R5,#0x14]|108-105
83988|code|CMP             R7, R0|135-66
83990|code|ITE NE|20-191
83992|code|MOVNE           R3, #0|0-35
83994|code|ANDEQ.W         R3, R3, #1|3-240-1-3
83998|code|CMP             R3, #0|0-43
84000|code|BNE             loc_148AA|67-209
84002|code|MOV             R0, R3|24-70
84004|code|POP.W           {R3-R11,PC}|189-232-248-143
84008|code|MOV             R1, R4|33-70
84010|code|LDR             R0, [R4,#8]|160-104
84012|code|MOV             R2, R10|82-70
84014|code|LDR.W           R8, [R4,#0xC]|212-248-12-128
84018|code|BL              sub_131D8|254-247-209-252
84022|code|MOV             R9, R0|129-70
84024|code|CMP.W           R8, #0|184-241-0-15
84028|code|BEQ             loc_14860|16-208
84030|code|LDR.W           R4, [R10]|218-248-0-64
84034|code|LDR.W           R1, [R8,#0x10]; s2|216-248-16-16
84038|code|MOV             R0, R4; s1|32-70
84040|code|BLX             strcmp|253-247-12-235
84044|code|CMP             R0, #0|0-40
84046|code|ITET LT|182-191
84048|code|MOVLT           R7, R8|71-70
84050|code|LDRGE.W         R8, [R8,#0xC]|216-248-12-128
84054|code|LDRLT.W         R8, [R8,#8]|216-248-8-128
84058|code|CMP.W           R8, #0|184-241-0-15
84062|code|BNE             loc_14842|240-209
84064|code|LDR             R2, [R5,#0xC]|234-104
84066|code|MOV             R8, R9|200-70
84068|code|LDR             R4, [R5,#0x14]|108-105
84070|code|CMP             R2, R9|74-69
84072|code|IT EQ|8-191
84074|code|CMPEQ           R6, R7|190-66
84076|code|ITET EQ|10-191
84078|code|MOVEQ           R3, #1|1-35
84080|code|MOVNE           R3, #0|0-35
84082|code|LDREQ.W         R8, [R5,#8]|213-248-8-128
84086|code|BEQ             loc_148AA|24-208
84088|code|CMP             R9, R7|185-69
84090|code|BEQ             loc_14822|210-208
84092|code|MOV             R0, R8|64-70
84094|code|BLX             _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|253-247-180-233
84098|code|MOV             R1, R6|49-70
84100|code|MOV             R9, R0|129-70
84102|code|MOV             R0, R8|64-70
84104|code|BLX             _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_; std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|253-247-68-234
84108|code|MOV             R8, R9|200-70
84110|code|BLX             _ZdlPv; operator delete(void *)|253-247-24-233
84114|code|LDR             R3, [R5,#0x14]|107-105
84116|code|CMP             R9, R7|185-69
84118|code|ADD.W           R3, R3, #0xFFFFFFFF|3-241-255-51
84122|code|STR             R3, [R5,#0x14]|107-97
84124|code|BNE             loc_1487C|238-209
84126|code|SUBS            R0, R4, R3|224-26
84128|code|POP.W           {R3-R11,PC}|189-232-248-143
84132|code|MOV             R7, R6|55-70
84134|code|MOVS            R3, #1|1-35
84136|code|B               loc_14810|178-231
84138|code|MOV             R0, R5|40-70
84140|code|MOV             R1, R8|65-70
84142|code|BL              sub_14778|255-247-99-255
84146|code|MOVS            R2, #0|0-34
84148|code|MOV             R0, R4|32-70
84150|code|STR             R6, [R5,#0xC]|238-96
84152|code|STR             R6, [R5,#0x10]|46-97
84154|code|STR             R2, [R5,#8]|170-96
84156|code|STR             R2, [R5,#0x14]|106-97
84158|code|POP.W           {R3-R11,PC}|189-232-248-143
84162|data|ALIGN 4|0-191
84164|code|PUSH            {R3-R7,LR}|248-181
84166|code|ADDS            R7, R0, #4|7-29
84168|code|LDR             R4, [R0,#8]|132-104
84170|code|CBZ             R4, loc_148FA|180-177
84172|code|LDR             R6, [R1]|14-104
84174|code|MOV             R5, R7|61-70
84176|code|LDR             R0, [R4,#0x10]; s1|32-105
84178|code|MOV             R1, R6; s2|49-70
84180|code|BLX             strcmp|253-247-198-234
84184|code|CMP             R0, #0|0-40
84186|code|ITET GE|170-191
84188|code|MOVGE           R5, R4|37-70
84190|code|LDRLT           R4, [R4,#0xC]|228-104
84192|code|LDRGE           R4, [R4,#8]|164-104
84194|code|CMP             R4, #0|0-44
84196|code|BNE             loc_148D0|244-209
84198|code|CMP             R7, R5|175-66
84200|code|BEQ             loc_148FA|7-208
84202|code|MOV             R0, R6; s1|48-70
84204|code|LDR             R1, [R5,#0x10]; s2|41-105
84206|code|BLX             strcmp|253-247-186-234
84210|code|CMP             R0, #0|0-40
84212|code|BLT             loc_148FA|1-219
84214|code|MOV             R0, R5|40-70
84216|code|POP             {R3-R7,PC}|248-189
84218|code|MOV             R0, R7|56-70
84220|code|POP             {R3-R7,PC}|248-189
84222|data|ALIGN 0x10|0-191
84224|code|PUSH.W          {R4-R10,LR}|45-233-240-71
84228|code|MOV             R9, R1|137-70
84230|code|LDR             R4, [R1,#8]|140-104
84232|code|MOV             R8, R0|128-70
84234|code|MOV             R10, R2|146-70
84236|code|CBZ             R4, loc_1495A|44-179
84238|code|LDR             R7, [R2]|23-104
84240|code|B               loc_14914|0-224
84242|code|MOV             R4, R3|28-70
84244|code|LDR             R5, [R4,#0x10]|37-105
84246|code|MOV             R0, R7; s1|56-70
84248|code|MOVS            R6, #0|0-38
84250|code|MOV             R1, R5; s2|41-70
84252|code|BLX             strcmp|253-247-162-234
84256|code|CMP             R0, R6|176-66
84258|code|ITTE LT|186-191
84260|code|LDRLT           R3, [R4,#8]|163-104
84262|code|MOVLT           R6, #1|1-38
84264|code|LDRGE           R3, [R4,#0xC]|227-104
84266|code|CMP             R3, #0|0-43
84268|code|BNE             loc_14912|241-209
84270|code|CBNZ            R6, loc_1495C|174-185
84272|code|MOV             R0, R5; s1|40-70
84274|code|MOV             R6, R4|38-70
84276|code|MOV             R1, R7; s2|57-70
84278|code|BLX             strcmp|253-247-150-234
84282|code|CMP             R0, #0|0-40
84284|code|ITETE LT|181-191
84286|code|STRLT.W         R6, [R8,#4]|200-248-4-96
84290|code|STRGE.W         R4, [R8]|200-248-0-64
84294|code|MOVLT           R3, #0|0-35
84296|code|MOVGE           R3, #0|0-35
84298|code|ITE LT|180-191
84300|code|STRLT.W         R3, [R8]|200-248-0-48
84304|code|STRGE.W         R3, [R8,#4]|200-248-4-48
84308|code|MOV             R0, R8|64-70
84310|code|POP.W           {R4-R10,PC}|189-232-240-135
84314|code|ADDS            R4, R1, #4|12-29
84316|code|LDR.W           R3, [R9,#0xC]|217-248-12-48
84320|code|CMP             R3, R4|163-66
84322|code|ITTT EQ|2-191
84324|code|STREQ.W         R4, [R8,#4]|200-248-4-64
84328|code|MOVEQ           R3, #0|0-35
84330|code|STREQ.W         R3, [R8]|200-248-0-48
84334|code|BEQ             loc_14954|241-208
84336|code|MOV             R0, R4|32-70
84338|code|MOV             R6, R4|38-70
84340|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|253-247-194-232
84344|code|LDR.W           R7, [R10]|218-248-0-112
84348|code|MOV             R4, R0|4-70
84350|code|LDR             R0, [R0,#0x10]|0-105
84352|code|B               loc_14934|216-231
84354|data|ALIGN 4|0-191
84356|code|PUSH.W          {R4-R9,LR}|45-233-240-67
84360|code|MOVW            R5, #0x81B8|72-242-184-21
84364|code|LDR             R7, =unk_281E4|31-79
84366|code|MOVT.W          R5, #2|192-242-2-5
84370|code|LDR             R3, [R5]|43-104
84372|code|MOV             R4, R0|4-70
84374|code|SUB             SP, SP, #0xC|131-176
84376|code|MOV             R6, R2|22-70
84378|code|STR             R1, [R0,#4]|65-96
84380|code|MOVS            R2, #0|0-34
84382|code|STR             R7, [R0,#0x3C]|199-99
84384|code|ADD.W           R7, R0, #0x50 ; 'P'|0-241-80-7
84388|code|STRB            R2, [R0,#0x19]|66-118
84390|code|MOV             R0, R6; s|48-70
84392|code|STR             R7, [R4,#0x50]|39-101
84394|code|STR             R7, [R4,#0x54]|103-101
84396|code|STR             R3, [SP,#0x28+var_24]|1-147
84398|code|BLX             strlen|253-247-16-233
84402|code|MOV             R1, R6; char *|49-70
84404|code|LDRD.W          R8, R9, [SP,#0x28+arg_0]|221-233-10-137
84408|code|MOV             R2, R0; unsigned int|2-70
84410|code|ADD.W           R0, R4, #0x3C ; '<'; this|4-241-60-0
84414|code|BLX             _ZNSs6assignEPKcj; std::string::assign(char const*,uint)|253-247-206-233
84418|code|LDR             R1, [SP,#0x28+var_24]|1-153
84420|code|MOVS            R3, #0|0-35
84422|code|LDR             R2, [R5]|42-104
84424|code|MOV             R0, R4|32-70
84426|code|STRD.W          R8, R9, [R4,#0x48]|196-233-18-137
84430|code|CMP             R1, R2|145-66
84432|code|STR             R3, [R4,#0x30]|35-99
84434|code|STR             R3, [R4,#0x34]|99-99
84436|code|BNE             loc_149DC|2-209
84438|code|ADD             SP, SP, #0xC|3-176
84440|code|POP.W           {R4-R9,PC}|189-232-240-131
84444|code|BLX             __stack_chk_fail|253-247-142-233
84448|code|LDR             R0, [R4,#0x50]; void *|32-109
84450|code|CMP             R7, R0|135-66
84452|code|BEQ             loc_149F0|4-208
84454|code|LDR             R5, [R0]|5-104
84456|code|BLX             _ZdlPv; operator delete(void *)|253-247-106-232
84460|code|MOV             R0, R5|40-70
84462|code|B               loc_149E2|248-231
84464|code|LDR             R0, [R4,#0x3C]|224-107
84466|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
84474|code|SUBS            R0, #0xC|12-56
84476|code|CMP             R0, R3|152-66
84478|code|BEQ             loc_14A06|2-208
84480|code|MOV             R1, SP|105-70
84482|code|BL              sub_11EE4|253-247-111-250
84486|code|BLX             __cxa_end_cleanup|253-247-140-232
84490|data|ALIGN 4|0-191
84492|data|DCD unk_281E4|228-129-2-0
84496|code|PUSH            {R4-R7,LR}|240-181
84498|code|MOVS            R0, #0x60 ; '`'; unsigned int|96-32
84500|code|SUB             SP, SP, #0xC|131-176
84502|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
84506|code|BLX             _Znwj; operator new(uint)|253-247-48-233
84510|code|MOVW            R2, #0x6674|70-242-116-98
84514|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
84518|code|MOVT.W          R2, #1; s|192-242-1-2
84522|code|STRD.W          R6, R7, [SP,#0x20+var_20]; char|205-233-0-103
84526|code|MOVS            R1, #0; int|0-33
84528|code|MOV             R4, R0|4-70
84530|code|BL              sub_14984|255-247-167-255
84534|code|MOVS            R5, #1|1-37
84536|code|MOVS            R3, #4|4-35
84538|code|STRB.W          R5, [R4,#0x40]|132-248-64-80
84542|code|MOVS            R0, #0; timer|0-32
84544|code|STR             R3, [R4,#0xC]|227-96
84546|code|MOVS            R6, #0|0-38
84548|code|BLX             time|253-247-66-233
84552|code|LDR             R2, [R4,#0x3C]|226-107
84554|code|MOVS            R7, #0|0-39
84556|code|MOVW            R3, #0x41FD|68-242-253-19
84560|code|STRB            R5, [R4,#0x18]|37-118
84562|code|STR             R2, [R4,#0x38]|162-99
84564|code|STRD.W          R6, R7, [R4,#0x10]|196-233-4-103
84568|code|STR             R3, [R4,#0x1C]|227-97
84570|code|STR             R0, [R4,#0x2C]|224-98
84572|code|STR             R0, [R4,#0x28]|160-98
84574|code|STR             R0, [R4,#0x24]|96-98
84576|code|STR             R0, [R4,#0x20]|32-98
84578|code|MOV             R0, R4|32-70
84580|code|ADD             SP, SP, #0xC|3-176
84582|code|POP             {R4-R7,PC}|240-189
84584|code|MOV             R0, R4; void *|32-70
84586|code|BLX             _ZdlPv; operator delete(void *)|253-247-42-232
84590|code|BLX             __cxa_end_cleanup|253-247-88-232
84594|data|ALIGN 4|0-191
84596|code|PUSH            {R4-R7,LR}|240-181
84598|code|MOVW            R7, #0x81B8|72-242-184-23
84602|code|LDR             R3, [R0,#0xC]|195-104
84604|code|MOVT.W          R7, #2|192-242-2-7
84608|code|LDR             R2, [R7]|58-104
84610|code|SUB             SP, SP, #0xC|131-176
84612|code|SUBS            R3, #1|1-59
84614|code|MOV             R6, R0|6-70
84616|code|CMP             R3, #2|2-43
84618|code|STR             R2, [SP,#0x20+var_1C]|1-146
84620|code|BHI             loc_14A9E|7-216
84622|code|LDR             R4, [R0]|4-104
84624|code|CBZ             R4, loc_14A9E|44-177
84626|code|MOV             R0, R4|32-70
84628|code|BL              sub_15658|0-240-224-253
84632|code|MOV             R0, R4; void *|32-70
84634|code|BLX             _ZdlPv; operator delete(void *)|253-247-18-232
84638|code|MOV             R5, R6|53-70
84640|code|LDR.W           R0, [R5,#0x50]!; void *|85-248-80-15
84644|code|CMP             R0, R5|168-66
84646|code|BEQ             loc_14AB4|5-208
84648|code|LDR             R4, [R0]|4-104
84650|code|BLX             _ZdlPv; operator delete(void *)|253-247-10-232
84654|code|CMP             R4, R5|172-66
84656|code|MOV             R0, R4|32-70
84658|code|BNE             loc_14AA8|249-209
84660|code|LDR             R2, [R6,#0x3C]|242-107
84662|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
84670|code|SUB.W           R0, R2, #0xC|162-241-12-0
84674|code|CMP             R0, R3|152-66
84676|code|BNE             loc_14AD4|6-209
84678|code|LDR             R2, [SP,#0x20+var_1C]|1-154
84680|code|MOV             R0, R6|48-70
84682|code|LDR             R3, [R7]|59-104
84684|code|CMP             R2, R3|154-66
84686|code|BNE             loc_14B0E|30-209
84688|code|ADD             SP, SP, #0xC|3-176
84690|code|POP             {R4-R7,PC}|240-189
84692|code|MOV             R3, #0x11DF8|65-246-248-83-192-242-1-3
84700|code|CBZ             R3, loc_14B02|139-177
84702|code|SUBS            R2, #4|4-58
84704|code|DMB.W           SY|191-243-95-143
84708|code|LDREX.W         R3, [R2]|82-232-0-63
84712|code|SUBS            R1, R3, #1|89-30
84714|code|STREX.W         R4, R1, [R2]|66-232-0-20
84718|code|CMP             R4, #0|0-44
84720|code|BNE             loc_14AE4|248-209
84722|code|DMB.W           SY|191-243-95-143
84726|code|CMP             R3, #0|0-43
84728|code|BGT             loc_14AC6|229-220
84730|code|MOV             R1, SP|105-70
84732|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-80-232
84736|code|B               loc_14AC6|225-231
84738|code|LDR.W           R3, [R2,#-4]|82-248-4-60
84742|code|SUBS            R1, R3, #1|89-30
84744|code|STR.W           R1, [R2,#-4]|66-248-4-28
84748|code|B               loc_14AF6|243-231
84750|code|BLX             __stack_chk_fail|253-247-246-232
84754|code|MOV             R4, R6|52-70
84756|code|LDR.W           R0, [R4,#0x50]!; void *|84-248-80-15
84760|code|CMP             R0, R4|160-66
84762|code|BEQ             loc_14B28|5-208
84764|code|LDR             R5, [R0]|5-104
84766|code|BLX             _ZdlPv; operator delete(void *)|252-247-208-239
84770|code|CMP             R5, R4|165-66
84772|code|MOV             R0, R5|40-70
84774|code|BNE             loc_14B1C|249-209
84776|code|LDR             R0, [R6,#0x3C]|240-107
84778|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
84786|code|SUBS            R0, #0xC|12-56
84788|code|CMP             R0, R3|152-66
84790|code|BEQ             loc_14B3E|2-208
84792|code|MOV             R1, SP|105-70
84794|code|BL              sub_11EE4|253-247-211-249
84798|code|BLX             __cxa_end_cleanup|252-247-240-239
84802|data|ALIGN 4|0-191
84804|code|LDR             R2, [R0,#0x3C]|194-107
84806|code|PUSH            {R3-R7,LR}|248-181
84808|code|MOV             R6, R0|6-70
84810|code|LDR.W           R0, [R2,#-0xC]|82-248-12-12
84814|code|MOV             R4, R2|20-70
84816|code|CBNZ            R0, loc_14B56|8-185
84818|code|B               loc_14BD8|65-224
84820|code|MOV             R4, R3|28-70
84822|code|MOV             R3, R4|35-70
84824|code|LDRB.W          R1, [R3],#1|19-248-1-27
84828|code|CMP             R1, #0|0-41
84830|code|BNE             loc_14B54|249-209
84832|code|CMP             R4, R2|148-66
84834|code|BLS             loc_14BB6|40-217
84836|code|SUBS            R4, #1|1-60
84838|code|CMP             R4, R2|148-66
84840|code|MOV             R5, R4|37-70
84842|code|BEQ             loc_14BAE|32-208
84844|code|LDRB            R3, [R4]|35-120
84846|code|SUBS            R4, #1|1-60
84848|code|CMP             R3, #0x2F ; '/'|47-43
84850|code|BNE             loc_14B66|248-209
84852|code|MOV             R4, R5|44-70
84854|code|LDRB            R3, [R4,#1]|99-120
84856|code|CBNZ            R3, loc_14BA8|179-185
84858|code|LDR.W           R3, [R2,#-4]|82-248-4-60
84862|code|SUBS            R7, R0, #1|71-30
84864|code|CMP             R3, #0|0-43
84866|code|BLT             loc_14B8E|4-219
84868|code|ADD.W           R0, R6, #0x3C ; '<'; this|6-241-60-0
84872|code|BLX             _ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|253-247-102-233
84876|code|LDR             R2, [R6,#0x3C]|242-107
84878|code|MOVS            R3, #0|0-35
84880|code|STRB            R3, [R2,R7]|211-85
84882|code|LDR             R3, [R6,#0x3C]|243-107
84884|code|MOVS            R2, #1|1-34
84886|code|STRB.W          R2, [R6,#0x40]|134-248-64-32
84890|code|CMP             R3, R4|163-66
84892|code|BCC             loc_14BBE|15-211
84894|code|LDRB            R3, [R5]|43-120
84896|code|CMP             R3, #0x2F ; '/'|47-43
84898|code|IT NE|24-191
84900|code|MOVNE           R4, R5|44-70
84902|code|BNE             loc_14BB6|6-209
84904|code|ADDS            R4, R5, #1|108-28
84906|code|STR             R4, [R6,#0x38]|180-99
84908|code|POP             {R3-R7,PC}|248-189
84910|code|LDRB            R3, [R2]|19-120
84912|code|MOV             R4, R2|20-70
84914|code|CMP             R3, #0x2F ; '/'|47-43
84916|code|BEQ             loc_14BBA|1-208
84918|code|STR             R4, [R6,#0x38]|180-99
84920|code|POP             {R3-R7,PC}|248-189
84922|code|MOV             R5, R2|21-70
84924|code|B               loc_14B76|219-231
84926|code|LDRB            R2, [R4]|34-120
84928|code|CMP             R2, #0x2F ; '/'|47-42
84930|code|BEQ             loc_14BA8|241-208
84932|code|SUBS            R4, #1|1-60
84934|code|CMP             R4, R3|156-66
84936|code|MOV             R5, R4|37-70
84938|code|BEQ             loc_14B9E|232-208
84940|code|LDRB            R2, [R4]|34-120
84942|code|SUBS            R4, #1|1-60
84944|code|CMP             R2, #0x2F ; '/'|47-42
84946|code|BNE             loc_14BC6|248-209
84948|code|ADDS            R4, R5, #1|108-28
84950|code|B               loc_14BAA|232-231
84952|code|MOVW            R0, #0x6D58|70-246-88-80
84956|code|MOVW            R1, #0x6D6C|70-246-108-81
84960|code|MOVW            R3, #0x6BD0|70-246-208-51
84964|code|MOVT.W          R0, #1; assertion|192-242-1-0
84968|code|MOVT.W          R1, #1; file|192-242-1-1
84972|code|MOVT.W          R3, #1; function|192-242-1-3
84976|code|MOVS            R2, #0xB7; line|183-34
84978|code|BLX             __assert_fail|252-247-180-239
84982|data|ALIGN 4|0-191
84984|code|PUSH            {R4-R7,LR}|240-181
84986|code|MOV             R6, R0|6-70
84988|code|SUB             SP, SP, #0xC|131-176
84990|code|MOVS            R0, #0x60 ; '`'; unsigned int|96-32
84992|code|MOV             R5, R1|13-70
84994|code|BLX             _Znwj; operator new(uint)|253-247-60-232
84998|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
85002|code|MOV             R1, R6; int|49-70
85004|code|MOV             R2, R5; s|42-70
85006|code|MOV             R6, #0xFFFFFFFE|111-240-1-6
85010|code|STRD.W          R6, R7, [SP,#0x20+var_20]; char|205-233-0-103
85014|code|MOV             R4, R0|4-70
85016|code|BL              sub_14984|255-247-180-254
85020|code|MOVS            R3, #1|1-35
85022|code|MOVS            R2, #4|4-34
85024|code|STRB.W          R3, [R4,#0x40]|132-248-64-48
85028|code|MOVS            R0, #0; timer|0-32
85030|code|STR             R2, [R4,#0xC]|226-96
85032|code|MOVS            R6, #0|0-38
85034|code|STRB            R3, [R4,#0x18]|35-118
85036|code|MOVS            R7, #0|0-39
85038|code|BLX             time|253-247-78-232
85042|code|MOVW            R2, #0x41FD|68-242-253-18
85046|code|STRD.W          R6, R7, [R4,#0x10]|196-233-4-103
85050|code|STR             R2, [R4,#0x1C]|226-97
85052|code|MOV             R3, R0|3-70
85054|code|STR             R0, [R4,#0x2C]|224-98
85056|code|STR             R0, [R4,#0x28]|160-98
85058|code|STR             R0, [R4,#0x24]|96-98
85060|code|MOV             R0, R4|32-70
85062|code|STR             R3, [R4,#0x20]|35-98
85064|code|BL              sub_14B44|255-247-124-255
85068|code|MOV             R0, R4|32-70
85070|code|ADD             SP, SP, #0xC|3-176
85072|code|POP             {R4-R7,PC}|240-189
85074|code|MOV             R0, R4; void *|32-70
85076|code|BLX             _ZdlPv; operator delete(void *)|252-247-52-239
85080|code|BLX             __cxa_end_cleanup|252-247-98-239
85084|code|PUSH            {R4-R7,LR}|240-181
85086|code|MOV             R6, R0|6-70
85088|code|SUB             SP, SP, #0xC|131-176
85090|code|MOVS            R0, #0x60 ; '`'; unsigned int|96-32
85092|code|MOV             R5, R1|13-70
85094|code|BLX             _Znwj; operator new(uint)|253-247-10-232
85098|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
85102|code|MOV             R1, R6; int|49-70
85104|code|MOV             R2, R5; s|42-70
85106|code|MOV             R6, #0xFFFFFFFE|111-240-1-6
85110|code|STRD.W          R6, R7, [SP,#0x20+var_20]; char|205-233-0-103
85114|code|MOV             R4, R0|4-70
85116|code|BL              sub_14984|255-247-130-254
85120|code|MOVS            R2, #3|3-34
85122|code|MOVS            R3, #0|0-35
85124|code|STR             R2, [R4,#0xC]|226-96
85126|code|MOVS            R0, #0x18; unsigned int|24-32
85128|code|STRB.W          R3, [R4,#0x40]|132-248-64-48
85132|code|BLX             _Znwj; operator new(uint)|252-247-246-239
85136|code|MOV             R5, R0|5-70
85138|code|BL              sub_15640|0-240-213-252
85142|code|MOVS            R3, #1|1-35
85144|code|STR             R5, [R4]|37-96
85146|code|STRB            R3, [R4,#0x18]|35-118
85148|code|MOVS            R0, #0; timer|0-32
85150|code|BLX             time|253-247-22-232
85154|code|MOV             R3, R0|3-70
85156|code|MOV             R0, R4|32-70
85158|code|STR             R3, [R4,#0x2C]|227-98
85160|code|STR             R3, [R4,#0x28]|163-98
85162|code|STR             R3, [R4,#0x24]|99-98
85164|code|STR             R3, [R4,#0x20]|35-98
85166|code|BL              sub_14B44|255-247-73-255
85170|code|MOVW            R3, #0xA1FF|74-242-255-19
85174|code|MOV             R0, R4|32-70
85176|code|STR             R3, [R4,#0x1C]|227-97
85178|code|ADD             SP, SP, #0xC|3-176
85180|code|POP             {R4-R7,PC}|240-189
85182|code|MOV             R0, R4; void *|32-70
85184|code|BLX             _ZdlPv; operator delete(void *)|252-247-254-238
85188|code|BLX             __cxa_end_cleanup|252-247-44-239
85192|code|MOV             R0, R5; void *|40-70
85194|code|BLX             _ZdlPv; operator delete(void *)|252-247-250-238
85198|code|BLX             __cxa_end_cleanup|252-247-40-239
85202|data|ALIGN 4|0-191
85204|code|PUSH.W          {R4-R9,LR}|45-233-240-67
85208|code|MOV             R6, R0|6-70
85210|code|SUB             SP, SP, #0xC|131-176
85212|code|MOVS            R0, #0x60 ; '`'; unsigned int|96-32
85214|code|MOV             R5, R1|13-70
85216|code|MOV             R9, R2|145-70
85218|code|MOV             R8, R3|152-70
85220|code|BLX             _Znwj; operator new(uint)|252-247-202-239
85224|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
85228|code|MOV             R1, R6; int|49-70
85230|code|MOV             R2, R5; s|42-70
85232|code|MOV             R6, #0xFFFFFFFE|111-240-1-6
85236|code|STRD.W          R6, R7, [SP,#0x28+var_28]; char|205-233-0-103
85240|code|MOV             R4, R0|4-70
85242|code|BL              sub_14984|255-247-67-254
85246|code|MOVS            R2, #3|3-34
85248|code|MOVS            R3, #0|0-35
85250|code|STR             R2, [R4,#0xC]|226-96
85252|code|MOVS            R0, #0x18; unsigned int|24-32
85254|code|STRB.W          R3, [R4,#0x40]|132-248-64-48
85258|code|BLX             _Znwj; operator new(uint)|252-247-184-239
85262|code|MOV             R5, R0|5-70
85264|code|BL              sub_15640|0-240-150-252
85268|code|MOVS            R3, #1|1-35
85270|code|STR             R5, [R4]|37-96
85272|code|STRB            R3, [R4,#0x18]|35-118
85274|code|MOVS            R0, #0; timer|0-32
85276|code|BLX             time|252-247-214-239
85280|code|MOV             R1, R0|1-70
85282|code|MOV             R0, R4|32-70
85284|code|STR             R1, [R4,#0x2C]|225-98
85286|code|STR             R1, [R4,#0x28]|161-98
85288|code|STR             R1, [R4,#0x24]|97-98
85290|code|STR             R1, [R4,#0x20]|33-98
85292|code|BL              sub_14B44|255-247-10-255
85296|code|LDR             R3, [SP,#0x28+arg_0]|10-155
85298|code|MOV             R0, R4|32-70
85300|code|STR.W           R9, [R4,#0x30]|196-248-48-144
85304|code|STR.W           R8, [R4,#0x34]|196-248-52-128
85308|code|STR             R3, [R4,#0x1C]|227-97
85310|code|ADD             SP, SP, #0xC|3-176
85312|code|POP.W           {R4-R9,PC}|189-232-240-131
85316|code|MOV             R0, R4; void *|32-70
85318|code|BLX             _ZdlPv; operator delete(void *)|252-247-188-238
85322|code|BLX             __cxa_end_cleanup|252-247-234-238
85326|code|MOV             R0, R5; void *|40-70
85328|code|BLX             _ZdlPv; operator delete(void *)|252-247-182-238
85332|code|BLX             __cxa_end_cleanup|252-247-228-238
85336|code|PUSH            {R3-R5,LR}|56-181
85338|code|MOV             R5, R0|5-70
85340|code|MOVS            R0, #0xC; unsigned int|12-32
85342|code|MOV             R4, R1|12-70
85344|code|BLX             _Znwj; operator new(uint)|252-247-140-239
85348|code|ADD.W           R1, R5, #0x50 ; 'P'; std::__detail::_List_node_base *|5-241-80-1
85352|code|STR             R4, [R0,#8]|132-96
85354|code|POP.W           {R3-R5,LR}|189-232-56-64
85358|code|B.W             j__ZNSt8__detail15_List_node_base7_M_hookEPS0_; std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)|252-247-125-191
85362|data|ALIGN 4|0-191
85364|code|PUSH.W          {R4-R9,LR}|45-233-240-67
85368|code|MOV             R6, R0|6-70
85370|code|LDR.W           R4, [R6,#0x50]!|86-248-80-79
85374|code|SUB             SP, SP, #0xC|131-176
85376|code|CMP             R4, R6|180-66
85378|code|STR             R1, [SP,#0x28+var_24]|1-145
85380|code|BEQ             loc_14DCC|34-208
85382|code|ADD.W           R9, SP, #0x28+var_24|13-241-4-9
85386|code|MOV             R7, R1|15-70
85388|code|MOV             R8, R6|176-70
85390|code|B               loc_14D96|2-224
85392|code|CMP             R6, R5|174-66
85394|code|MOV             R4, R5|44-70
85396|code|BEQ             loc_14DBC|18-208
85398|code|LDR             R3, [R4,#8]|163-104
85400|code|LDR             R5, [R4]|37-104
85402|code|CMP             R3, R7|187-66
85404|code|BNE             loc_14D90|248-209
85406|code|ADD.W           R3, R4, #8|4-241-8-3
85410|code|MOV             R0, R4; this|32-70
85412|code|CMP             R9, R3|153-69
85414|code|IT EQ|8-191
85416|code|MOVEQ           R8, R4|160-70
85418|code|BEQ             loc_14D90|241-208
85420|code|BLX             _ZNSt8__detail15_List_node_base9_M_unhookEv; std::__detail::_List_node_base::_M_unhook(void)|252-247-94-238
85424|code|MOV             R0, R4; void *|32-70
85426|code|BLX             _ZdlPv; operator delete(void *)|252-247-134-238
85430|code|CMP             R6, R5|174-66
85432|code|MOV             R4, R5|44-70
85434|code|BNE             loc_14D96|236-209
85436|code|CMP             R6, R8|70-69
85438|code|BEQ             loc_14DCC|5-208
85440|code|MOV             R0, R8; this|64-70
85442|code|BLX             _ZNSt8__detail15_List_node_base9_M_unhookEv; std::__detail::_List_node_base::_M_unhook(void)|252-247-84-238
85446|code|MOV             R0, R8; void *|64-70
85448|code|BLX             _ZdlPv; operator delete(void *)|252-247-122-238
85452|code|ADD             SP, SP, #0xC|3-176
85454|code|POP.W           {R4-R9,PC}|189-232-240-131
85458|data|ALIGN 4|0-191
85460|code|PUSH            {R3-R5,LR}|56-181
85462|code|MOV             R4, R0|4-70
85464|code|MOV             R0, R1; s|8-70
85466|code|MOV             R5, R1|13-70
85468|code|BLX             strlen|252-247-248-238
85472|code|MOV             R1, R5; char *|41-70
85474|code|MOV             R2, R0; unsigned int|2-70
85476|code|ADD.W           R0, R4, #0x3C ; '<'; this|4-241-60-0
85480|code|BLX             _ZNSs6assignEPKcj; std::string::assign(char const*,uint)|252-247-184-239
85484|code|MOV             R0, R4|32-70
85486|code|POP.W           {R3-R5,LR}|189-232-56-64
85490|code|B.W             sub_14B44|255-247-167-190
85494|data|ALIGN 4|0-191
85496|code|PUSH.W          {R4-R9,LR}|45-233-240-67
85500|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
85508|code|LDR             R3, [R0,#0xC]|195-104
85510|code|LDR             R2, [R5]|42-104
85512|code|SUB             SP, SP, #0x14|133-176
85514|code|CMP             R3, #3|3-43
85516|code|MOV             R4, R0|4-70
85518|code|STR             R2, [SP,#0x30+var_24]|3-146
85520|code|BEQ             loc_14E50|30-208
85522|code|CMP             R3, #1|1-43
85524|code|BEQ             loc_14E54|30-208
85526|code|CBNZ            R3, loc_14E50|219-185
85528|code|LDR             R3, [R0,#4]|67-104
85530|code|MOVS            R2, #1|1-34
85532|code|STR             R2, [R0,#8]|130-96
85534|code|CBZ             R3, loc_14E70|59-179
85536|code|MOVS            R0, #0x18; unsigned int|24-32
85538|code|BLX             _Znwj; operator new(uint)|252-247-44-239
85542|code|LDRD.W          R8, R9, [R4,#0x10]|212-233-4-137
85546|code|MOV             R6, R0|6-70
85548|code|LDR             R1, [R4,#4]|97-104
85550|code|LDRD.W          R2, R3, [R4,#0x48]|212-233-18-35
85554|code|STRD.W          R8, R9, [SP,#0x30+var_30]|205-233-0-137
85558|code|BL              sub_15864|0-240-21-253
85562|code|MOVS            R0, #0|0-32
85564|code|MOVS            R3, #1|1-35
85566|code|STR             R6, [R4]|38-96
85568|code|STR             R3, [R4,#0xC]|227-96
85570|code|LDR             R2, [SP,#0x30+var_24]|3-154
85572|code|LDR             R3, [R5]|43-104
85574|code|CMP             R2, R3|154-66
85576|code|BNE             loc_14E6C|16-209
85578|code|ADD             SP, SP, #0x14|5-176
85580|code|POP.W           {R4-R9,PC}|189-232-240-131
85584|code|MOVS            R0, #0|0-32
85586|code|B               loc_14E42|246-231
85588|code|LDR             R3, [R0,#8]|131-104
85590|code|MOV             R2, #0x7FFFFFFF|111-240-0-66
85594|code|CMP             R3, R2|147-66
85596|code|BEQ             loc_14E66|3-208
85598|code|ADDS            R3, #1|1-51
85600|code|MOVS            R0, #0|0-32
85602|code|STR             R3, [R4,#8]|163-96
85604|code|B               loc_14E42|237-231
85606|code|MOV             R0, #0xFFFFFFE8|111-240-23-0
85610|code|B               loc_14E42|234-231
85612|code|BLX             __stack_chk_fail|252-247-70-239
85616|code|MOVW            R0, #0x6D7C|70-246-124-80
85620|code|MOVW            R1, #0x6D6C|70-246-108-81
85624|code|MOVT.W          R0, #1; assertion|192-242-1-0
85628|code|MOVT.W          R1, #1; file|192-242-1-1
85632|code|MOVS            R2, #0xEB; line|235-34
85634|code|LDR             R3, =aIntFilenodeOpe; "int FileNode::open()"|22-75
85636|code|BLX             __assert_fail|252-247-106-238
85640|code|CMP             R1, #1|1-41
85642|code|BEQ             loc_14EC0|25-208
85644|code|CMP             R1, #2|2-41
85646|code|BEQ             loc_14EA4|9-208
85648|code|BLX             __cxa_end_cleanup|252-247-70-238
85652|code|MOV             R4, R0|4-70
85654|code|MOV             R7, R1|15-70
85656|code|MOV             R0, R6; void *|48-70
85658|code|BLX             _ZdlPv; operator delete(void *)|252-247-18-238
85662|code|MOV             R0, R4; void *|32-70
85664|code|MOV             R1, R7|57-70
85666|code|B               loc_14E88|241-231
85668|code|LDR             R3, =0x28198|14-75
85670|code|ADD             R4, SP, #0x30+var_20|4-172
85672|code|STR.W           R3, [R4,#-8]!|68-248-8-61
85676|code|BLX             __cxa_begin_catch|252-247-158-239
85680|code|MOV             R0, R4; this|32-70
85682|code|BLX             _ZNSt9exceptionD1Ev; std::exception::~exception()|252-247-228-239
85686|code|BLX             __cxa_end_catch|252-247-112-239
85690|code|MOV             R0, #0xFFFFFFFB|111-240-4-0
85694|code|B               loc_14E42|192-231
85696|code|LDR             R3, =unk_281C8|8-75
85698|code|ADD             R4, SP, #0x30+var_20|4-172
85700|code|STR.W           R3, [R4,#-8]!|68-248-8-61
85704|code|BLX             __cxa_begin_catch|252-247-144-239
85708|code|MOV             R0, R4; this|32-70
85710|code|BLX             _ZNSt9bad_allocD1Ev; std::bad_alloc::~bad_alloc()|252-247-116-238
85714|code|BLX             __cxa_end_catch|252-247-98-239
85718|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
85722|code|B               loc_14E42|178-231
85724|data|DCD aIntFilenodeOpe; "int FileNode::open()"|236-107-1-0
85728|data|DCD 0x28198|152-129-2-0
85732|data|DCD unk_281C8|200-129-2-0
85736|code|PUSH.W          {R4-R8,LR}|45-233-240-65
85740|code|MOV             R4, R0|4-70
85742|code|MOVS            R0, #0; timer|0-32
85744|code|MOV             R8, R1|136-70
85746|code|MOV             R5, R2|21-70
85748|code|LDRD.W          R6, R7, [SP,#0x18+arg_0]|221-233-6-103
85752|code|BLX             time|252-247-232-238
85756|code|LDR             R3, [R4]; int|35-104
85758|code|MOV             R1, R8; s|65-70
85760|code|MOV             R2, R5; int|42-70
85762|code|STRD.W          R6, R7, [SP,#0x18+arg_0]; char|205-233-6-103
85766|code|STR             R0, [R4,#0x24]|96-98
85768|code|MOV             R0, R3; int|24-70
85770|code|POP.W           {R4-R8,LR}|189-232-240-65
85774|code|B.W             sub_15684|0-240-185-187
85778|data|ALIGN 4|0-191
85780|code|LDR             R3, [R0,#0xC]|195-104
85782|code|PUSH.W          {R4-R8,LR}|45-233-240-65
85786|code|CMP             R3, #1|1-43
85788|code|MOV             R4, R0|4-70
85790|code|MOV             R8, R1|136-70
85792|code|ITT EQ|4-191
85794|code|MOVEQ           R3, #2|2-35
85796|code|STREQ           R3, [R0,#0xC]|195-96
85798|code|MOVS            R0, #0; timer|0-32
85800|code|MOV             R5, R2|21-70
85802|code|LDRD.W          R6, R7, [SP,#0x18+arg_0]|221-233-6-103
85806|code|BLX             time|252-247-206-238
85810|code|LDR             R3, [R4]; int|35-104
85812|code|MOV             R1, R8; src|65-70
85814|code|MOV             R2, R5; n|42-70
85816|code|MOVS            R5, #1|1-37
85818|code|STRD.W          R6, R7, [SP,#0x18+arg_0]; int|205-233-6-103
85822|code|STRB            R5, [R4,#0x19]|101-118
85824|code|STR             R0, [R4,#0x20]|32-98
85826|code|MOV             R0, R3; int|24-70
85828|code|POP.W           {R4-R8,LR}|189-232-240-65
85832|code|B.W             sub_15D0C|0-240-224-190
85836|code|PUSH            {R3-R7,LR}|248-181
85838|code|LDR             R5, [R0]|5-104
85840|code|LDR             R3, [R0,#0xC]|195-104
85842|code|LDRD.W          R6, R7, [R5,#0x10]|213-233-4-103
85846|code|CMP             R3, #1|1-43
85848|code|STRD.W          R6, R7, [R0,#0x10]|192-233-4-103
85852|code|BEQ             loc_14F62|1-208
85854|code|MOVS            R0, #0|0-32
85856|code|POP             {R3-R7,PC}|248-189
85858|code|LDR             R6, [R0,#8]|134-104
85860|code|SUBS            R6, #1|1-62
85862|code|STR             R6, [R0,#8]|134-96
85864|code|CMP             R6, #0|0-46
85866|code|BNE             loc_14F5E|248-209
85868|code|MOV             R4, R0|4-70
85870|code|MOV             R0, R5|40-70
85872|code|BL              sub_15658|0-240-114-251
85876|code|MOV             R0, R5; void *|40-70
85878|code|BLX             _ZdlPv; operator delete(void *)|252-247-164-237
85882|code|STR             R6, [R4,#0xC]|230-96
85884|code|MOVS            R0, #0|0-32
85886|code|POP             {R3-R7,PC}|248-189
85888|code|LDRB.W          R3, [R0,#0x40]|144-248-64-48
85892|code|PUSH            {R4-R6,LR}|112-181
85894|code|SUB             SP, SP, #8|130-176
85896|code|CBNZ            R3, loc_14FB2|155-185
85898|code|LDR             R2, [R0,#4]|66-104
85900|code|CBZ             R2, loc_14FCC|242-177
85902|code|LDR             R4, [R0,#0xC]|196-104
85904|code|ADD.W           R5, R0, #0x48 ; 'H'|0-241-72-5
85908|code|LDR             R6, [R0]|6-104
85910|code|SUB.W           R4, R4, #3|164-241-3-4
85914|code|LDR             R1, [R0,#0x20]|1-106
85916|code|CLZ.W           R4, R4|180-250-132-244
85920|code|LDR             R3, [R0,#0x3C]|195-107
85922|code|MOV             R0, R6|48-70
85924|code|STR             R5, [SP,#0x18+var_14]|1-149
85926|code|LSRS            R4, R4, #5|100-9
85928|code|STR             R4, [SP,#0x18+var_18]|0-148
85930|code|BL              sub_157B8|0-240-5-252
85934|code|ADD             SP, SP, #8|2-176
85936|code|POP             {R4-R6,PC}|112-189
85938|code|MOVW            R0, #0x6D8C|70-246-140-80
85942|code|MOVW            R1, #0x6D6C|70-246-108-81
85946|code|MOVT.W          R0, #1; assertion|192-242-1-0
85950|code|MOVT.W          R1, #1; file|192-242-1-1
85954|code|MOVW            R2, #0x111; line|64-242-17-18
85958|code|LDR             R3, =aIntFilenodeSav; "int FileNode::save()"|8-75
85960|code|BLX             __assert_fail|252-247-200-237
85964|code|MOVW            R0, #0x6D7C|70-246-124-80
85968|code|MOVW            R1, #0x6D6C|70-246-108-81
85972|code|MOVT.W          R0, #1; assertion|192-242-1-0
85976|code|MOVT.W          R1, #1; file|192-242-1-1
85980|code|MOVW            R2, #0x113; line|64-242-19-18
85984|code|LDR             R3, =aIntFilenodeSav; "int FileNode::save()"|1-75
85986|code|BLX             __assert_fail|252-247-188-237
85990|data|ALIGN 4|0-191
85992|data|DCD aIntFilenodeSav; "int FileNode::save()"|4-108-1-0
85996|code|PUSH            {R3-R5,LR}|56-181
85998|code|MOV             R5, R3|29-70
86000|code|LDR             R3, [R0,#0xC]|195-104
86002|code|CBNZ            R3, loc_14FF8|11-185
86004|code|MOVS            R0, #9|9-32
86006|code|POP             {R3-R5,PC}|56-189
86008|code|CMP             R3, #3|3-43
86010|code|ITT NE|28-191
86012|code|MOVNE           R3, #2|2-35
86014|code|STRNE           R3, [R0,#0xC]|195-96
86016|code|MOV             R3, R5|43-70
86018|code|LDR             R0, [R0]|0-104
86020|code|BL              sub_15C24|0-240-14-254
86024|code|MOVS            R0, #0|0-32
86026|code|POP             {R3-R5,PC}|56-189
86028|code|CMP             R1, #1|1-41
86030|code|BEQ             loc_15014|1-208
86032|code|BLX             __cxa_end_cleanup|252-247-134-237
86036|code|BLX             __cxa_begin_catch|252-247-234-238
86040|code|BLX             __cxa_end_catch|252-247-190-238
86044|code|MOVS            R0, #5|5-32
86046|code|POP             {R3-R5,PC}|56-189
86048|code|LDR             R3, [R0,#0xC]|195-104
86050|code|SUBS            R3, #1|1-59
86052|code|CMP             R3, #2|2-43
86054|code|ITTE LS|154-191
86056|code|LDRLS           R3, [R0]|3-104
86058|code|LDRDLS.W        R0, R1, [R3,#0x10]|211-233-4-1
86062|code|LDRDHI.W        R0, R1, [R0,#0x10]|208-233-4-1
86066|code|BX              LR|112-71
86068|code|PUSH            {R4-R6,LR}|112-181
86070|code|MOV             R5, #0x281B8|72-242-184-21-192-242-2-5
86078|code|LDRD.W          R2, R3, [R0,#0x48]|208-233-18-35
86082|code|LDR             R1, [R5]|41-104
86084|code|SUB             SP, SP, #0x20|136-176
86086|code|CMP             R2, #0|0-42
86088|code|MOV             R4, R0|4-70
86090|code|STR             R1, [SP,#0x30+var_14]|7-145
86092|code|SBCS.W          R1, R3, #0|115-241-0-1
86096|code|BLT             loc_1510C|92-219
86098|code|LDR             R0, [R0,#4]|64-104
86100|code|CMP             R0, #0|0-40
86102|code|BEQ             loc_150F2|76-208
86104|code|MOVS            R1, #0|0-33
86106|code|ADD.W           R6, SP, #0x30+var_19|13-241-23-6
86110|code|STR             R1, [SP,#0x30+var_30]|0-145
86112|code|ADD             R1, SP, #0x30+var_18|6-169
86114|code|STR             R6, [SP,#0x30+var_2C]|1-150
86116|code|STR             R1, [SP,#0x30+var_28]|2-145
86118|code|BLX             zip_file_get_external_attributes|252-247-164-238
86122|code|LDRB.W          R3, [SP,#0x30+var_19]|157-248-23-48
86126|code|CMP             R3, #0xB; switch 12 cases|11-43
86128|code|BHI             def_15072; jumptable 00015072 default case, cases 1,2,4-9|37-216
86130|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
86134|data|DCB 0x12; jump table for switch statement|18
86135|data|DCB 0x24|36
86136|data|DCB 0x24|36
86137|data|DCB 6|6
86138|data|DCB 0x24|36
86139|data|DCB 0x24|36
86140|data|DCB 0x24|36
86141|data|DCB 0x24|36
86142|data|DCB 0x24|36
86143|data|DCB 0x24|36
86144|data|DCB 0x12|18
86145|data|DCB 0x12|18
86146|code|LDRH.W          R3, [SP,#0x30+var_18+2]; jumptable 00015072 case 3|189-248-26-48
86150|code|LDRB.W          R2, [R4,#0x40]|148-248-64-32
86154|code|STR             R3, [R4,#0x1C]|227-97
86156|code|CBZ             R2, loc_150DE|58-179
86158|code|BIC.W           R3, R3, #0xF000|35-244-112-67
86162|code|ORR.W           R3, R3, #0x4000|67-244-128-67
86166|code|STR             R3, [R4,#0x1C]|227-97
86168|code|B               loc_150CA|23-224
86170|code|LDR             R2, [SP,#0x30+var_18]; jumptable 00015072 cases 0,10,11|6-154
86172|code|MOV.W           R3, #0x124|79-244-146-115
86176|code|STR             R3, [R4,#0x1C]|227-97
86178|code|LSLS            R2, R2, #0x1F|210-7
86180|code|LDRB.W          R2, [R4,#0x40]|148-248-64-32
86184|code|ITT PL|92-191
86186|code|MOVPL.W         R3, #0x1B4|79-244-218-115
86190|code|STRPL           R3, [R4,#0x1C]|227-97
86192|code|CBZ             R2, loc_150D6|138-177
86194|code|ORR.W           R3, R3, #0x4000|67-244-128-67
86198|code|ORR.W           R3, R3, #0x49|67-240-73-3
86202|code|STR             R3, [R4,#0x1C]|227-97
86204|code|B               loc_150CA|5-224
86206|code|LDRB.W          R3, [R4,#0x40]; jumptable 00015072 default case, cases 1,2,4-9|148-248-64-48
86210|code|CBNZ            R3, loc_150E6|131-185
86212|code|MOVW            R3, #0x81B4|72-242-180-19
86216|code|STR             R3, [R4,#0x1C]|227-97
86218|code|LDR             R2, [SP,#0x30+var_14]|7-154
86220|code|LDR             R3, [R5]|43-104
86222|code|CMP             R2, R3|154-66
86224|code|BNE             loc_150EE|13-209
86226|code|ADD             SP, SP, #0x20 ; ' '|8-176
86228|code|POP             {R4-R6,PC}|112-189
86230|code|ORR.W           R3, R3, #0x8000|67-244-0-67
86234|code|STR             R3, [R4,#0x1C]|227-97
86236|code|B               loc_150CA|245-231
86238|code|BIC.W           R3, R3, #0x4000|35-244-128-67
86242|code|STR             R3, [R4,#0x1C]|227-97
86244|code|B               loc_150CA|241-231
86246|code|MOVW            R3, #0x41FD|68-242-253-19
86250|code|STR             R3, [R4,#0x1C]|227-97
86252|code|B               loc_150CA|237-231
86254|code|BLX             __stack_chk_fail|252-247-6-238
86258|code|MOVW            R0, #0x6D7C|70-246-124-80
86262|code|MOVW            R1, #0x6D6C|70-246-108-81
86266|code|MOVT.W          R0, #1; assertion|192-242-1-0
86270|code|MOVT.W          R1, #1; file|192-242-1-1
86274|code|MOVW            R2, #0x13F; line|64-242-63-18
86278|code|LDR             R3, =aVoidFilenodePr; "void FileNode::processExternalAttribute"...|8-75
86280|code|BLX             __assert_fail|252-247-40-237
86284|code|MOVW            R0, #0x6D94|70-246-148-80
86288|code|MOVW            R1, #0x6D6C|70-246-108-81
86292|code|MOVT.W          R0, #1; assertion|192-242-1-0
86296|code|MOVT.W          R1, #1; file|192-242-1-1
86300|code|MOV.W           R2, #0x13E; line|79-244-159-114
86304|code|LDR             R3, =aVoidFilenodePr; "void FileNode::processExternalAttribute"...|1-75
86306|code|BLX             __assert_fail|252-247-28-237
86310|data|ALIGN 4|0-191
86312|data|DCD aVoidFilenodePr; "void FileNode::processExternalAttribute"...|28-108-1-0
86316|code|MOVW            R3, #0x81B8|72-242-184-19
86320|code|PUSH.W          {R4-R11,LR}|45-233-240-79
86324|code|MOVT.W          R3, #2|192-242-2-3
86328|code|SUB             SP, SP, #0x4C|147-176
86330|code|MOV             R1, R3|25-70
86332|code|LDR             R1, [R1]|9-104
86334|code|MOV             R4, R0|4-70
86336|code|STR             R3, [SP,#0x70+var_4C]|9-147
86338|code|LDRD.W          R2, R3, [R0,#0x48]|208-233-18-35
86342|code|STR             R1, [SP,#0x70+var_2C]|17-145
86344|code|CMP             R2, #0|0-42
86346|code|SBCS.W          R1, R3, #0|115-241-0-1
86350|code|BLT.W           loc_1529C|192-242-165-128
86354|code|LDR             R0, [R0,#4]|64-104
86356|code|CMP             R0, #0|0-40
86358|code|BEQ.W           loc_152BA|0-240-176-128
86362|code|MOV.W           R5, #0x100|79-244-128-117
86366|code|STR             R5, [SP,#0x70+var_70]|0-149
86368|code|BLX             zip_file_extra_fields_count|252-247-110-238
86372|code|SUBS            R6, R0, #0|6-30
86374|code|BLE.W           loc_1528C|64-243-145-128
86378|code|MOV.W           R11, #0|79-240-0-11
86382|code|ADD.W           R9, SP, #0x70+var_40|13-241-48-9
86386|code|ADD.W           R8, SP, #0x70+var_3E|13-241-50-8
86390|code|ADD.W           R10, SP, #0x70+var_34|13-241-60-10
86394|code|STR.W           R11, [SP,#0x70+var_50]|205-248-32-176
86398|code|MOVW            R7, #0x5855|69-246-85-7
86402|code|STR.W           R11, [SP,#0x70+var_54]|205-248-28-176
86406|code|STR.W           R11, [SP,#0x70+var_58]|205-248-24-176
86410|code|B               loc_151F2|50-224
86412|code|CMP             R0, #0xD|13-40
86414|code|BEQ             loc_15228|75-208
86416|code|MOVW            R1, #0x5455|69-242-85-65
86420|code|CMP             R0, R1|136-66
86422|code|BNE             loc_151E6|38-209
86424|code|ADD             R3, SP, #0x70+var_38|14-171
86426|code|MOV             R1, R2|17-70
86428|code|LDRH.W          R0, [SP,#0x70+var_3E]|189-248-50-0
86432|code|ADD.W           R2, SP, #0x70+var_41|13-241-47-2
86436|code|STR.W           R10, [SP,#0x70+var_68]|205-248-8-160
86440|code|STMEA.W         SP, {R2,R3}|141-232-12-0
86444|code|ADD             R3, SP, #0x70+var_30|16-171
86446|code|ADD.W           R2, SP, #0x70+var_42|13-241-46-2
86450|code|STR             R3, [SP,#0x70+var_64]|3-147
86452|code|ADD             R3, SP, #0x70+var_3C|13-171
86454|code|BL              sub_16180|0-240-227-255
86458|code|CBZ             R0, loc_151E6|160-177
86460|code|LDRB.W          R3, [SP,#0x70+var_42]|157-248-46-48
86464|code|CBZ             R3, loc_151CA|27-177
86466|code|LDR             R3, [SP,#0x70+var_3C]|13-155
86468|code|MOVS            R2, #1|1-34
86470|code|STR             R2, [SP,#0x70+var_58]|6-146
86472|code|STR             R3, [R4,#0x20]|35-98
86474|code|LDRB.W          R3, [SP,#0x70+var_41]|157-248-47-48
86478|code|CBZ             R3, loc_151D8|27-177
86480|code|LDR             R3, [SP,#0x70+var_38]|14-155
86482|code|MOVS            R2, #1|1-34
86484|code|STR             R2, [SP,#0x70+var_54]|7-146
86486|code|STR             R3, [R4,#0x24]|99-98
86488|code|LDRB.W          R3, [SP,#0x70+var_34]|157-248-60-48
86492|code|CBZ             R3, loc_151E6|27-177
86494|code|LDR             R3, [SP,#0x70+var_30]|16-155
86496|code|MOVS            R2, #1|1-34
86498|code|STRB            R2, [R4,#0x18]|34-118
86500|code|STR             R3, [R4,#0x2C]|227-98
86502|code|ADD.W           R11, R11, #1|11-241-1-11
86506|code|SXTH.W          R3, R11|15-250-139-243
86510|code|CMP             R6, R3|158-66
86512|code|BLE             loc_1528C|76-221
86514|code|LDRD.W          R2, R3, [R4,#0x48]|212-233-18-35
86518|code|UXTH.W          R1, R11|31-250-139-241
86522|code|LDR             R0, [R4,#4]|96-104
86524|code|STR.W           R9, [SP,#0x70+var_6C]|205-248-4-144
86528|code|STR.W           R8, [SP,#0x70+var_68]|205-248-8-128
86532|code|STR             R5, [SP,#0x70+var_64]|3-149
86534|code|STR             R1, [SP,#0x70+var_70]|0-145
86536|code|BLX             zip_file_extra_field_get|252-247-72-236
86540|code|MOV             R2, R0|2-70
86542|code|LDRH.W          R0, [SP,#0x70+var_40]|189-248-48-0
86546|code|CMP             R0, R7|184-66
86548|code|BEQ             loc_15228|8-208
86550|code|BLS             loc_1518C|185-217
86552|code|MOVW            R1, #0x7855|71-246-85-1
86556|code|CMP             R0, R1|136-66
86558|code|BEQ             loc_15228|3-208
86560|code|MOVW            R1, #0x7875|71-246-117-1
86564|code|CMP             R0, R1|136-66
86566|code|BNE             loc_151E6|222-209
86568|code|ADD             R3, SP, #0x70+var_30|16-171
86570|code|LDRH.W          R1, [SP,#0x70+var_3E]|189-248-50-16
86574|code|STR             R3, [SP,#0x70+var_70]|0-147
86576|code|ADD.W           R3, SP, #0x70+var_42|13-241-46-3
86580|code|STR             R3, [SP,#0x70+var_6C]|1-147
86582|code|ADD             R3, SP, #0x70+var_3C|13-171
86584|code|STR             R3, [SP,#0x70+var_68]|2-147
86586|code|ADD.W           R3, SP, #0x70+var_41|13-241-47-3
86590|code|STR             R3, [SP,#0x70+var_64]|3-147
86592|code|ADD             R3, SP, #0x70+var_38|14-171
86594|code|STR             R3, [SP,#0x70+var_60]|4-147
86596|code|MOV             R3, R10|83-70
86598|code|BL              sub_16280|1-240-27-248
86602|code|CMP             R0, #0|0-40
86604|code|BEQ             loc_151E6|203-208
86606|code|LDRH.W          R3, [SP,#0x70+var_40]|189-248-48-48
86610|code|ADD.W           R11, R11, #1|11-241-1-11
86614|code|LDR             R2, [SP,#0x70+var_50]|8-154
86616|code|CMP             R3, R2|147-66
86618|code|ITTTT GE|161-191
86620|code|STRGE           R3, [SP,#0x70+var_50]|8-147
86622|code|LDRGE           R2, [SP,#0x70+var_34]|15-154
86624|code|LDRGE           R3, [SP,#0x70+var_30]|16-155
86626|code|STRGE           R2, [R4,#0x30]|34-99
86628|code|IT GE|168-191
86630|code|STRGE           R3, [R4,#0x34]|99-99
86632|code|LDR             R2, [SP,#0x70+var_58]|6-154
86634|code|LDRB.W          R3, [SP,#0x70+var_42]|157-248-46-48
86638|code|CMP             R3, R2|147-66
86640|code|LDR             R2, [SP,#0x70+var_54]|7-154
86642|code|ITT HI|132-191
86644|code|LDRHI           R3, [SP,#0x70+var_3C]|13-155
86646|code|STRHI           R3, [R4,#0x20]|35-98
86648|code|LDRB.W          R3, [SP,#0x70+var_41]|157-248-47-48
86652|code|CMP             R3, R2|147-66
86654|code|ITT HI|132-191
86656|code|LDRHI           R3, [SP,#0x70+var_38]|14-155
86658|code|STRHI           R3, [R4,#0x24]|99-98
86660|code|SXTH.W          R3, R11|15-250-139-243
86664|code|CMP             R6, R3|158-66
86666|code|BGT             loc_151F2|178-220
86668|code|LDR             R3, [SP,#0x70+var_4C]|9-155
86670|code|LDR             R2, [SP,#0x70+var_2C]|17-154
86672|code|LDR             R3, [R3]|27-104
86674|code|CMP             R2, R3|154-66
86676|code|BNE             loc_152B6|15-209
86678|code|ADD             SP, SP, #0x4C ; 'L'|19-176
86680|code|POP.W           {R4-R11,PC}|189-232-240-143
86684|code|MOVW            R0, #0x6D94|70-246-148-80
86688|code|MOVW            R1, #0x6D6C|70-246-108-81
86692|code|MOVT.W          R0, #1; assertion|192-242-1-0
86696|code|MOVT.W          R1, #1; file|192-242-1-1
86700|code|MOVW            R2, #0x179; line|64-242-121-18
86704|code|LDR             R3, =aVoidFilenodePr_0; "void FileNode::processExtraFields()"|8-75
86706|code|BLX             __assert_fail|252-247-84-236
86710|code|BLX             __stack_chk_fail|252-247-34-237
86714|code|MOVW            R0, #0x6D7C|70-246-124-80
86718|code|MOVW            R1, #0x6D6C|70-246-108-81
86722|code|MOVT.W          R0, #1; assertion|192-242-1-0
86726|code|MOVT.W          R1, #1; file|192-242-1-1
86730|code|MOV.W           R2, #0x17A; line|79-244-189-114
86734|code|LDR             R3, =aVoidFilenodePr_0; "void FileNode::processExtraFields()"|1-75
86736|code|BLX             __assert_fail|252-247-68-236
86740|data|DCD aVoidFilenodePr_0; "void FileNode::processExtraFields()"|72-108-1-0
86744|code|PUSH.W          {R4-R9,LR}|45-233-240-67
86748|code|MOV             R6, #0x281B8|72-242-184-22-192-242-2-6
86756|code|MOV             R7, R1|15-70
86758|code|LDR             R1, [R6]|49-104
86760|code|SUB             SP, SP, #0x4C|147-176
86762|code|MOV             R5, R0|5-70
86764|code|MOVS            R0, #0x60 ; '`'; unsigned int|96-32
86766|code|MOV             R8, R2|144-70
86768|code|MOV             R9, R3|153-70
86770|code|STR             R1, [SP,#0x68+var_24]|17-145
86772|code|BLX             _Znwj; operator new(uint)|252-247-194-236
86776|code|STRD.W          R8, R9, [SP,#0x68+var_68]; char|205-233-0-137
86780|code|MOV             R2, R7; s|58-70
86782|code|MOV             R1, R5; int|41-70
86784|code|MOV             R4, R0|4-70
86786|code|BL              sub_14984|255-247-63-251
86790|code|MOV             R0, R5|40-70
86792|code|MOV             R2, R8|66-70
86794|code|MOVS            R5, #0|0-37
86796|code|MOV             R3, R9|75-70
86798|code|STRB.W          R5, [R4,#0x40]|132-248-64-80
86802|code|ADD             R1, SP, #0x68+var_60|2-169
86804|code|STR             R5, [R4,#8]|165-96
86806|code|STR             R5, [R4,#0xC]|229-96
86808|code|STR             R5, [SP,#0x68+var_68]|0-149
86810|code|STR             R1, [SP,#0x68+var_64]|1-145
86812|code|BLX             zip_stat_index|252-247-94-236
86816|code|LDRD.W          R2, R3, [SP,#0x68+var_60]|221-233-2-35
86820|code|MOVS            R3, #0|0-35
86822|code|CMP             R3, #0|0-43
86824|code|AND.W           R2, R2, #0x17|2-240-23-2
86828|code|IT EQ|8-191
86830|code|CMPEQ           R2, #0x17|23-42
86832|code|BNE             loc_15366|25-209
86834|code|LDR             R1, [SP,#0x68+var_38]|12-153
86836|code|MOV             R0, R4|32-70
86838|code|LDRD.W          R2, R3, [SP,#0x68+var_48]|221-233-8-35
86842|code|STRB            R5, [R4,#0x18]|37-118
86844|code|STR             R1, [R4,#0x28]|161-98
86846|code|STRD.W          R2, R3, [R4,#0x10]|196-233-4-35
86850|code|STR             R1, [R4,#0x24]|97-98
86852|code|STR             R1, [R4,#0x20]|33-98
86854|code|BL              sub_14B44|255-247-253-251
86858|code|MOV             R0, R4|32-70
86860|code|BL              sub_15034|255-247-114-254
86864|code|MOV             R0, R4|32-70
86866|code|BL              sub_1512C|255-247-235-254
86870|code|LDR             R2, [SP,#0x68+var_24]|17-154
86872|code|LDR             R3, [R6]|51-104
86874|code|MOV             R0, R4|32-70
86876|code|CMP             R2, R3|154-66
86878|code|BNE             loc_1537E|14-209
86880|code|ADD             SP, SP, #0x4C ; 'L'|19-176
86882|code|POP.W           {R4-R9,PC}|189-232-240-131
86886|code|MOVW            R0, #0x6D9C|70-246-156-80
86890|code|MOVW            R1, #0x6D6C|70-246-108-81
86894|code|MOVT.W          R0, #1; assertion|192-242-1-0
86898|code|MOVT.W          R1, #1; file|192-242-1-1
86902|code|MOVS            R2, #0xA1; line|161-34
86904|code|LDR             R3, =aStaticFilenode; "static FileNode* FileNode::createNodeFo"...|4-75
86906|code|BLX             __assert_fail|252-247-240-235
86910|code|BLX             __stack_chk_fail|252-247-190-236
86914|code|MOV             R0, R4; void *|32-70
86916|code|BLX             _ZdlPv; operator delete(void *)|252-247-156-235
86920|code|BLX             __cxa_end_cleanup|252-247-202-235
86924|data|DCD aStaticFilenode; "static FileNode* FileNode::createNodeFo"...|108-108-1-0
86928|code|PUSH            {R4,LR}|16-181
86930|code|BL              sub_152D8|255-247-161-255
86934|code|CBZ             R0, locret_153B8|120-177
86936|code|LDR             R3, [SP,#8+arg_0]|2-155
86938|code|MOVS            R2, #1|1-34
86940|code|LDR             R4, [R0,#0x20]|4-106
86942|code|MOVS            R1, #0|0-33
86944|code|STRB            R2, [R0,#0x18]|2-118
86946|code|STR             R3, [R0,#0x30]|3-99
86948|code|LDR             R3, [SP,#8+arg_4]|3-155
86950|code|STR             R4, [R0,#0x2C]|196-98
86952|code|STR             R1, [R0,#0xC]|193-96
86954|code|STR             R3, [R0,#0x34]|67-99
86956|code|LDR             R3, [SP,#8+arg_8]|4-155
86958|code|STRB.W          R2, [R0,#0x40]|128-248-64-32
86962|code|ORR.W           R3, R3, #0x4000|67-244-128-67
86966|code|STR             R3, [R0,#0x1C]|195-97
86968|code|POP             {R4,PC}|16-189
86970|data|ALIGN 4|0-191
86972|code|PUSH.W          {R4-R11,LR}|45-233-240-79
86976|code|MOVW            R3, #0x81B8|72-242-184-19
86980|code|SUB             SP, SP, #0x2C|139-176
86982|code|MOVT.W          R3, #2|192-242-2-3
86986|code|LDRD.W          R4, R5, [R0,#0x48]|208-233-18-69
86990|code|MOV             R11, R0|131-70
86992|code|STR             R3, [SP,#0x50+var_34]|7-147
86994|code|LDR             R3, [R3]|27-104
86996|code|CMP             R4, #0|0-44
86998|code|STR             R3, [SP,#0x50+var_2C]|9-147
87000|code|SBCS.W          R3, R5, #0|117-241-0-3
87004|code|BLT.W           loc_15514|192-242-154-128
87008|code|LDR             R0, [R0,#4]|64-104
87010|code|CMP             R0, #0|0-40
87012|code|BEQ.W           loc_154FA|0-240-137-128
87016|code|LDR.W           R10, =dword_16CE8|223-248-72-161
87020|code|ADD.W           R6, SP, #0x50+var_2E|13-241-34-6
87024|code|MOV             R2, R4|34-70
87026|code|MOV             R3, R5|43-70
87028|code|MOVW            R8, #0x7875|71-246-117-8
87032|code|MOVS            R7, #0|0-39
87034|code|LDR.W           R5, [R10],#4|90-248-4-91
87038|code|STR             R5, [SP,#0x50+var_50]|0-149
87040|code|BLX             zip_file_extra_fields_count|252-247-30-237
87044|code|SUBS            R4, R0, #0|4-30
87046|code|IT GE|168-191
87048|code|MOVGEW          R9, #0x5455|69-242-85-73
87052|code|BLT             loc_15462|41-219
87054|code|LDR.W           R0, [R11,#4]|219-248-4-0
87058|code|UXTH            R4, R4|164-178
87060|code|LDRD.W          R2, R3, [R11,#0x48]|219-233-18-35
87064|code|STMEA.W         SP, {R4,R6,R7}|141-232-208-0
87068|code|STR             R5, [SP,#0x50+var_44]|3-149
87070|code|BLX             zip_file_extra_field_get|252-247-62-235
87074|code|CBZ             R0, loc_15458|200-177
87076|code|LDRH.W          R3, [SP,#0x50+var_2E]|189-248-34-48
87080|code|MOVW            R1, #0x5855|69-246-85-1
87084|code|CMP             R3, R9|75-69
87086|code|IT NE|24-191
87088|code|CMPNE           R3, R8|67-69
87090|code|BIC.W           R3, R3, #0x2000|35-244-0-83
87094|code|ITE EQ|12-191
87096|code|MOVEQ           R2, #1|1-34
87098|code|MOVNE           R2, #0|0-34
87100|code|CMP             R3, R1|139-66
87102|code|ITE NE|20-191
87104|code|MOVNE           R3, R2|19-70
87106|code|ORREQ.W         R3, R2, #1|66-240-1-3
87110|code|CBZ             R3, loc_15458|59-177
87112|code|LDR.W           R0, [R11,#4]|219-248-4-0
87116|code|LDRD.W          R2, R3, [R11,#0x48]|219-233-18-35
87120|code|STMEA.W         SP, {R4,R5}|141-232-48-0
87124|code|BLX             zip_file_extra_field_delete|252-247-250-236
87128|code|SUBS            R4, #1|1-60
87130|code|UXTH            R4, R4|164-178
87132|code|SXTH            R3, R4|35-178
87134|code|ADDS            R3, #1|1-51
87136|code|BNE             loc_1540E|213-209
87138|code|LDR.W           LR, [R11,#0x2C]|219-248-44-224
87142|code|MOV             R0, R5|40-70
87144|code|LDR.W           R1, [R11,#0x20]|219-248-32-16
87148|code|MOVW            R4, #0xFFFF|79-246-255-116
87152|code|LDR.W           R2, [R11,#0x24]|219-248-36-32
87156|code|LDRB.W          R3, [R11,#0x18]|155-248-24-48
87160|code|STR.W           LR, [SP,#0x50+var_50]|205-248-0-224
87164|code|STR             R6, [SP,#0x50+var_4C]|1-150
87166|code|BL              sub_16200|0-240-191-254
87170|code|LDR.W           R1, [R11,#4]|219-248-4-16
87174|code|LDRH.W          R9, [SP,#0x50+var_2E]|189-248-34-144
87178|code|MOVW            LR, #0x5455|69-242-85-78
87182|code|LDRD.W          R2, R3, [R11,#0x48]|219-233-18-35
87186|code|STR             R5, [SP,#0x50+var_40]|4-149
87188|code|STR.W           R9, [SP,#0x50+var_44]|205-248-12-144
87192|code|STR.W           LR, [SP,#0x50+var_50]|205-248-0-224
87196|code|STR             R4, [SP,#0x50+var_4C]|1-148
87198|code|STR             R0, [SP,#0x50+var_48]|2-144
87200|code|MOV             R0, R1|8-70
87202|code|BLX             zip_file_extra_field_set|252-247-140-236
87206|code|CBNZ            R0, loc_154E6|240-185
87208|code|MOV             R2, R6|50-70
87210|code|LDR.W           R1, [R11,#0x34]|219-248-52-16
87214|code|LDR.W           R0, [R11,#0x30]|219-248-48-0
87218|code|BL              sub_163EC|0-240-155-255
87222|code|LDR.W           R1, [R11,#4]|219-248-4-16
87226|code|LDRH.W          LR, [SP,#0x50+var_2E]|189-248-34-224
87230|code|LDRD.W          R2, R3, [R11,#0x48]|219-233-18-35
87234|code|STR.W           R8, [SP,#0x50+var_50]|205-248-0-128
87238|code|STR             R4, [SP,#0x50+var_4C]|1-148
87240|code|STR             R5, [SP,#0x50+var_40]|4-149
87242|code|STR.W           LR, [SP,#0x50+var_44]|205-248-12-224
87246|code|STR             R0, [SP,#0x50+var_48]|2-144
87248|code|MOV             R0, R1|8-70
87250|code|BLX             zip_file_extra_field_set|252-247-116-236
87254|code|CBNZ            R0, loc_154E6|48-185
87256|code|LDR.W           R0, [R11,#4]|219-248-4-0
87260|code|LDR.W           R2, [R11,#0x48]|219-248-72-32
87264|code|LDR.W           R3, [R11,#0x4C]|219-248-76-48
87268|code|B               loc_153FA|137-231
87270|code|LDR             R3, [SP,#0x50+var_34]|7-155
87272|code|LDR             R2, [SP,#0x50+var_2C]|9-154
87274|code|LDR             R3, [R3]|27-104
87276|code|CMP             R2, R3|154-66
87278|code|BNE             loc_154F6|2-209
87280|code|ADD             SP, SP, #0x2C ; ','|11-176
87282|code|POP.W           {R4-R11,PC}|189-232-240-143
87286|code|BLX             __stack_chk_fail|252-247-2-236
87290|code|MOVW            R0, #0x6D7C|70-246-124-80
87294|code|MOVW            R1, #0x6D6C|70-246-108-81
87298|code|MOVT.W          R0, #1; assertion|192-242-1-0
87302|code|MOVT.W          R1, #1; file|192-242-1-1
87306|code|MOV.W           R2, #0x1B8; line|79-244-220-114
87310|code|LDR             R3, =aIntFilenodeUpd; "int FileNode::updateExtraFields() const"|8-75
87312|code|BLX             __assert_fail|252-247-36-235
87316|code|MOVW            R0, #0x6D94|70-246-148-80
87320|code|MOVW            R1, #0x6D6C|70-246-108-81
87324|code|MOVT.W          R0, #1; assertion|192-242-1-0
87328|code|MOVT.W          R1, #1; file|192-242-1-1
87332|code|MOVW            R2, #0x1B7; line|64-242-183-18
87336|code|LDR             R3, =aIntFilenodeUpd; "int FileNode::updateExtraFields() const"|1-75
87338|code|BLX             __assert_fail|252-247-24-235
87342|data|ALIGN 0x10|0-191
87344|data|DCD aIntFilenodeUpd; "int FileNode::updateExtraFields() const"|192-108-1-0
87348|data|DCD dword_16CE8|232-108-1-0
87352|code|PUSH            {R4,LR}|16-181
87354|code|MOV             R4, R0|4-70
87356|code|LDR             R3, [R4,#0x1C]|227-105
87358|code|MOVS            R0, #0; timer|0-32
87360|code|AND.W           R3, R3, #0xF000|3-244-112-67
87364|code|ORRS            R1, R3|25-67
87366|code|STR             R1, [R4,#0x1C]|225-97
87368|code|BLX             time|252-247-192-235
87372|code|MOVS            R3, #1|1-35
87374|code|STRB            R3, [R4,#0x19]|99-118
87376|code|STR             R0, [R4,#0x28]|160-98
87378|code|POP             {R4,PC}|16-189
87380|code|MOVS            R3, #1|1-35
87382|code|STR             R1, [R0,#0x30]|1-99
87384|code|STRB            R3, [R0,#0x19]|67-118
87386|code|BX              LR|112-71
87388|code|MOVS            R3, #1|1-35
87390|code|STR             R1, [R0,#0x34]|65-99
87392|code|STRB            R3, [R0,#0x19]|67-118
87394|code|BX              LR|112-71
87396|code|PUSH            {R4,R5,LR}|48-181
87398|code|SUB             SP, SP, #0x14|133-176
87400|code|LDRD.W          R4, R5, [R0,#0x48]|208-233-18-69
87404|code|CMP             R4, #0|0-44
87406|code|SBCS.W          R3, R5, #0|117-241-0-3
87410|code|BLT             loc_155CA|42-219
87412|code|LDR             R2, [R0,#4]|66-104
87414|code|CBZ             R2, loc_155B0|218-177
87416|code|LDR             R3, [R0,#0x1C]|195-105
87418|code|LDRB.W          R1, [R0,#0x40]|144-248-64-16
87422|code|LSLS            R3, R3, #0x10|27-4
87424|code|CBZ             R1, loc_15586|9-177
87426|code|ORR.W           R3, R3, #0x10|67-240-16-3
87430|code|LDR             R1, [R0,#0x38]|129-107
87432|code|MOV             R0, R2|16-70
87434|code|MOV             R2, R4|34-70
87436|code|MOVS            R4, #3|3-36
87438|code|LDRB            R1, [R1]|9-120
87440|code|CMP             R1, #0x2E ; '.'|46-41
87442|code|MOV.W           R1, #0|79-240-0-1
87446|code|IT EQ|8-191
87448|code|ORREQ.W         R3, R3, #2|67-240-2-3
87452|code|STMEA.W         SP, {R1,R4}|141-232-18-0
87456|code|ORR.W           R3, R3, #1|67-240-1-3
87460|code|STR             R3, [SP,#0x20+var_18]|2-147
87462|code|MOV             R3, R5|43-70
87464|code|BLX             zip_file_set_external_attributes|252-247-78-235
87468|code|ADD             SP, SP, #0x14|5-176
87470|code|POP             {R4,R5,PC}|48-189
87472|code|MOVW            R0, #0x6D7C|70-246-124-80
87476|code|MOVW            R1, #0x6D6C|70-246-108-81
87480|code|MOVT.W          R0, #1; assertion|192-242-1-0
87484|code|MOVT.W          R1, #1; file|192-242-1-1
87488|code|MOV.W           R2, #0x1F8; line|79-244-252-114
87492|code|LDR             R3, =aIntFilenodeUpd_0; "int FileNode::updateExternalAttributes("...|7-75
87494|code|BLX             __assert_fail|252-247-202-234
87498|code|MOVW            R0, #0x6D94|70-246-148-80
87502|code|MOVW            R1, #0x6D6C|70-246-108-81
87506|code|MOVT.W          R0, #1; assertion|192-242-1-0
87510|code|MOVT.W          R1, #1; file|192-242-1-1
87514|code|MOVW            R2, #0x1F7; line|64-242-247-18
87518|code|LDR             R3, =aIntFilenodeUpd_0; "int FileNode::updateExternalAttributes("...|1-75
87520|code|BLX             __assert_fail|252-247-188-234
87524|data|DCD aIntFilenodeUpd_0; "int FileNode::updateExternalAttributes("...|240-108-1-0
87528|code|LDRD.W          R2, R3, [R0,#0x48]|208-233-18-35
87532|code|PUSH            {R4,LR}|16-181
87534|code|CMP             R2, #0|0-42
87536|code|SBCS.W          R3, R3, #0|115-241-0-3
87540|code|MOV             R4, R0|4-70
87542|code|BLT             loc_1560C|9-219
87544|code|BL              sub_153BC|255-247-224-254
87548|code|CBZ             R0, locret_1560A|40-177
87550|code|MOV             R0, R4|32-70
87552|code|BL              sub_15564|255-247-176-255
87556|code|ADDS            R0, #0|0-48
87558|code|IT NE|24-191
87560|code|MOVNE           R0, #1|1-32
87562|code|POP             {R4,PC}|16-189
87564|code|MOVW            R0, #0x6D94|70-246-148-80
87568|code|MOVW            R1, #0x6D6C|70-246-108-81
87572|code|MOVT.W          R0, #1; assertion|192-242-1-0
87576|code|MOVT.W          R1, #1; file|192-242-1-1
87580|code|MOVW            R2, #0x119; line|64-242-25-18
87584|code|LDR             R3, =aIntFilenodeSav_0; "int FileNode::saveMetadata() const"|1-75
87586|code|BLX             __assert_fail|252-247-156-234
87590|data|ALIGN 4|0-191
87592|data|DCD aIntFilenodeSav_0; "int FileNode::saveMetadata() const"|32-109-1-0
87596|code|MOVS            R3, #1|1-35
87598|code|STR             R1, [R0,#0x24]|65-98
87600|code|STR             R2, [R0,#0x20]|2-98
87602|code|STRB            R3, [R0,#0x19]|67-118
87604|code|BX              LR|112-71
87606|data|ALIGN 4|0-191
87608|code|MOVS            R3, #1|1-35
87610|code|STR             R1, [R0,#0x28]|129-98
87612|code|STRB            R3, [R0,#0x19]|67-118
87614|code|BX              LR|112-71
87616|code|PUSH            {R4,R5}|48-180
87618|code|MOVS            R2, #0|0-34
87620|code|MOVS            R4, #0|0-36
87622|code|MOVS            R5, #0|0-37
87624|code|STR             R2, [R0]|2-96
87626|code|STRD.W          R4, R5, [R0,#0x10]|192-233-4-69
87630|code|STR             R2, [R0,#4]|66-96
87632|code|STR             R2, [R0,#8]|130-96
87634|code|POP             {R4,R5}|48-188
87636|code|BX              LR|112-71
87638|data|ALIGN 4|0-191
87640|code|PUSH            {R4-R6,LR}|112-181
87642|code|MOV             R6, R0|6-70
87644|code|LDM.W           R0, {R4,R5}|144-232-48-0
87648|code|CMP             R4, R5|172-66
87650|code|BEQ             loc_15676|8-208
87652|code|LDR.W           R3, [R4],#4|84-248-4-59
87656|code|MOV             R0, R3; ptr|24-70
87658|code|CBZ             R3, loc_15670|11-177
87660|code|BLX             free|252-247-138-234
87664|code|CMP             R5, R4|165-66
87666|code|BNE             loc_15664|247-209
87668|code|LDR             R5, [R6]|53-104
87670|code|CBZ             R5, loc_1567E|21-177
87672|code|MOV             R0, R5; void *|40-70
87674|code|BLX             _ZdlPv; operator delete(void *)|252-247-34-234
87678|code|MOV             R0, R6|48-70
87680|code|POP             {R4-R6,PC}|112-189
87682|data|ALIGN 4|0-191
87684|code|PUSH.W          {R4-R11,LR}|45-233-240-79
87688|code|SUB             SP, SP, #0xC|131-176
87690|code|LDRD.W          R4, R5, [R0,#0x10]|208-233-4-69
87694|code|LDRD.W          R6, R7, [SP,#0x30+arg_0]|221-233-12-103
87698|code|STR             R0, [SP,#0x30+var_30]|0-144
87700|code|CMP             R5, R7|189-66
87702|code|IT EQ|8-191
87704|code|CMPEQ           R4, R6|180-66
87706|code|IT CC|56-191
87708|code|MOVCC           R0, #0|0-32
87710|code|BCC             loc_1571E|62-211
87712|code|SUBS            R4, R4, R6|164-27
87714|code|MOV.W           R8, R6,LSR#12|79-234-22-56
87718|code|CMP             R4, R2|148-66
87720|code|MOV             R9, R1|137-70
87722|code|ORR.W           R8, R8, R7,LSL#20|72-234-7-88
87726|code|UBFX.W          R1, R6, #0, #0xC|198-243-11-1
87730|code|IT CS|40-191
87732|code|MOVCS           R4, R2|20-70
87734|code|STR             R4, [SP,#0x30+var_2C]|1-148
87736|code|CMP             R4, #0|0-44
87738|code|BEQ             loc_15724|51-208
87740|code|MOV.W           R8, R8,LSL#2|79-234-136-8
87744|code|B               loc_156D0|6-224
87746|code|BLX             memcpy|252-247-152-234
87750|code|ADD             R9, R5|169-68
87752|code|ADD.W           R8, R8, #4|8-241-4-8
87756|code|MOVS            R1, #0|0-33
87758|code|CBZ             R4, loc_1571C|44-179
87760|code|LDR             R3, [SP,#0x30+var_30]|0-155
87762|code|ADDS            R6, R1, R4|14-25
87764|code|MOV.W           R7, R1,ASR#31|79-234-225-119
87768|code|MOV.W           R11, #0|79-240-0-11
87772|code|ADC.W           R7, R7, #0|71-241-0-7
87776|code|MOV.W           R10, #0x1000|79-244-128-90
87780|code|LDR             R2, [R3]|26-104
87782|code|CMP             R11, R7|187-69
87784|code|IT EQ|8-191
87786|code|CMPEQ           R10, R6|178-69
87788|code|MOV             R5, R4|37-70
87790|code|ADD             R2, R8|66-68
87792|code|ITTE CC|58-191
87794|code|RSBCC.W         R5, R1, #0x1000|193-245-128-85
87798|code|SUBCC           R4, R4, R5|100-27
87800|code|MOVCS           R4, #0|0-36
87802|code|LDR             R6, [R2]|22-104
87804|code|MOV             R0, R9; dest|72-70
87806|code|MOV             R2, R5; n|42-70
87808|code|ADD             R1, R6; src|49-68
87810|code|CMP             R6, #0|0-46
87812|code|BNE             loc_156C2|221-209
87814|code|MOV             R1, R6; c|49-70
87816|code|MOV             R0, R9; s|72-70
87818|code|MOV             R2, R5; n|42-70
87820|code|ADD             R9, R5|169-68
87822|code|BLX             memset|252-247-252-233
87826|code|ADD.W           R8, R8, #4|8-241-4-8
87830|code|MOVS            R1, #0|0-33
87832|code|CMP             R4, #0|0-44
87834|code|BNE             loc_156D0|217-209
87836|code|LDR             R0, [SP,#0x30+var_2C]|1-152
87838|code|ADD             SP, SP, #0xC|3-176
87840|code|POP.W           {R4-R11,PC}|189-232-240-143
87844|code|MOV             R0, R4|32-70
87846|code|B               loc_1571E|250-231
87848|code|PUSH            {R4-R7,LR}|240-181
87850|code|SUB             SP, SP, #0x14|133-176
87852|code|MOV             R4, R0|4-70
87854|code|LDR             R3, [SP,#0x28]|10-155
87856|code|CMP             R3, #5; switch 6 cases|5-43
87858|code|BHI             def_15734; jumptable 00015734 default case, cases 2,4|59-216
87860|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
87864|data|DCB 0x32; jump table for switch statement|50
87865|data|DCB 0x22|34
87866|data|DCB 0x3A|58
87867|data|DCB 0xC|12
87868|data|DCB 0x3A|58
87869|data|DCB 3|3
87870|code|MOV             R0, R4; jumptable 00015734 case 5|32-70
87872|code|BLX             _ZdlPv; operator delete(void *)|252-247-190-233
87876|code|MOVS            R2, #0|0-34
87878|code|MOVS            R3, #0|0-35
87880|code|MOV             R0, R2|16-70
87882|code|MOV             R1, R3|25-70
87884|code|ADD             SP, SP, #0x14|5-176
87886|code|POP             {R4-R7,PC}|240-189
87888|code|MOV             R0, R1; jumptable 00015734 case 3|8-70
87890|code|STR             R1, [SP,#0xC]|3-145
87892|code|BLX             zip_stat_init|252-247-126-233
87896|code|LDR             R5, [R4,#4]|101-104
87898|code|LDR             R0, [R4,#8]|160-104
87900|code|MOVS            R2, #0x38 ; '8'|56-34
87902|code|LDR             R1, [SP,#0xC]|3-153
87904|code|MOVS            R3, #0|0-35
87906|code|LDRD.W          R4, R5, [R5,#0x10]|213-233-4-69
87910|code|MOVS            R6, #0x14|20-38
87912|code|MOVS            R7, #0|0-39
87914|code|STR             R0, [R1,#0x28]|136-98
87916|code|MOV             R0, R2|16-70
87918|code|STRD.W          R6, R7, [R1]|193-233-0-103
87922|code|STRD.W          R4, R5, [R1,#0x18]|193-233-6-69
87926|code|MOV             R1, R3|25-70
87928|code|ADD             SP, SP, #0x14|5-176
87930|code|POP             {R4-R7,PC}|240-189
87932|code|LDR             R3, [R4]; jumptable 00015734 case 1|35-104
87934|code|MOVS            R5, #0|0-37
87936|code|LDR             R0, [R4,#4]|96-104
87938|code|STMEA.W         SP, {R3,R5}|141-232-40-0
87942|code|BL              sub_15684|255-247-125-255
87946|code|LDR             R1, [R4]|33-104
87948|code|ASRS            R3, R0, #0x1F|195-23
87950|code|MOV             R2, R0|2-70
87952|code|ADD             R0, R1|8-68
87954|code|STR             R0, [R4]|32-96
87956|code|MOV             R1, R3|25-70
87958|code|MOV             R0, R2|16-70
87960|code|ADD             SP, SP, #0x14|5-176
87962|code|POP             {R4-R7,PC}|240-189
87964|code|MOVS            R2, #0; jumptable 00015734 case 0|0-34
87966|code|MOVS            R3, #0|0-35
87968|code|MOVS            R1, #0|0-33
87970|code|MOV             R0, R2|16-70
87972|code|STR             R1, [R4]|33-96
87974|code|MOV             R1, R3|25-70
87976|code|ADD             SP, SP, #0x14|5-176
87978|code|POP             {R4-R7,PC}|240-189
87980|code|MOVS            R2, #0; jumptable 00015734 default case, cases 2,4|0-34
87982|code|MOVS            R3, #0|0-35
87984|code|MOV             R0, R2|16-70
87986|code|MOV             R1, R3|25-70
87988|code|ADD             SP, SP, #0x14|5-176
87990|code|POP             {R4-R7,PC}|240-189
87992|code|PUSH.W          {R4-R9,LR}|45-233-240-67
87996|code|SUB             SP, SP, #0xC|131-176
87998|code|MOV             R8, R0|128-70
88000|code|MOVS            R0, #0xC; unsigned int|12-32
88002|code|MOV             R6, R1|14-70
88004|code|MOV             R7, R2|23-70
88006|code|MOV             R9, R3|153-70
88008|code|LDRB.W          R5, [SP,#0x28+arg_0]|157-248-40-80
88012|code|BLX             _Znwj; operator new(uint)|252-247-86-234
88016|code|MOV             R1, #0x15729|69-242-41-113-192-242-1-1
88024|code|MOV             R4, R0|4-70
88026|code|MOV             R0, R7|56-70
88028|code|STR.W           R8, [R4,#4]|196-248-4-128
88032|code|MOV             R2, R4|34-70
88034|code|STR             R6, [R4,#8]|166-96
88036|code|MOV.W           R8, #0|79-240-0-8
88040|code|STR.W           R8, [R4]|196-248-0-128
88044|code|BLX             zip_source_function|252-247-38-234
88048|code|MOV             R6, R0|6-70
88050|code|CBZ             R0, loc_15856|128-179
88052|code|CBNZ            R5, loc_15818|133-185
88054|code|LDR             R3, [SP,#0x28+arg_4]|11-155
88056|code|MOV.W           R1, #0x800|79-244-0-97
88060|code|MOV             R0, R7|56-70
88062|code|LDRD.W          R2, R3, [R3]|211-233-0-35
88066|code|STR             R6, [SP,#0x28+var_28]|0-150
88068|code|STR             R1, [SP,#0x28+var_24]|1-145
88070|code|BLX             zip_file_replace|252-247-230-234
88074|code|CMP             R0, #0|0-40
88076|code|IT GE|168-191
88078|code|MOVGE           R0, R5|40-70
88080|code|BLT             loc_15840|22-219
88082|code|ADD             SP, SP, #0xC|3-176
88084|code|POP.W           {R4-R9,PC}|189-232-240-131
88088|code|MOV             R2, R6|50-70
88090|code|MOV.W           R3, #0x800|79-244-0-99
88094|code|MOV             R0, R7|56-70
88096|code|MOV             R1, R9|73-70
88098|code|BLX             zip_file_add|252-247-238-233
88102|code|CMP             R0, #0|0-40
88104|code|MOV             R3, R1|11-70
88106|code|SBCS.W          R1, R3, #0|115-241-0-1
88110|code|MOV             R2, R0|2-70
88112|code|BLT             loc_15840|6-219
88114|code|LDR             R1, [SP,#0x28+arg_4]|11-153
88116|code|MOV             R0, R8|64-70
88118|code|STRD.W          R2, R3, [R1]|193-233-0-35
88122|code|ADD             SP, SP, #0xC|3-176
88124|code|POP.W           {R4-R9,PC}|189-232-240-131
88128|code|MOV             R0, R4; void *|32-70
88130|code|BLX             _ZdlPv; operator delete(void *)|252-247-62-233
88134|code|MOV             R0, R6|48-70
88136|code|BLX             zip_source_free|252-247-238-234
88140|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
88144|code|ADD             SP, SP, #0xC|3-176
88146|code|POP.W           {R4-R9,PC}|189-232-240-131
88150|code|MOV             R0, R4; void *|32-70
88152|code|BLX             _ZdlPv; operator delete(void *)|252-247-50-233
88156|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
88160|code|B               loc_15812|215-231
88162|data|ALIGN 4|0-191
88164|code|PUSH.W          {R4-R11,LR}|45-233-240-79
88168|code|SUB             SP, SP, #0x3C|143-176
88170|code|MOVW            R6, #0x81B8|72-242-184-22
88174|code|MOV             R10, R0|130-70
88176|code|MOVT.W          R6, #2|192-242-2-6
88180|code|LDRD.W          R4, R5, [SP,#0x60+arg_0]|221-233-24-69
88184|code|STR             R6, [SP,#0x60+var_48]|6-150
88186|code|MOV             R0, R1|8-70
88188|code|LDR             R6, [R6]|54-104
88190|code|STR             R1, [SP,#0x60+var_44]|7-145
88192|code|MOVS            R1, #0|0-33
88194|code|STRD.W          R4, R5, [R10,#0x10]|202-233-4-69
88198|code|STR.W           R1, [R10]|202-248-0-16
88202|code|STR.W           R1, [R10,#4]|202-248-4-16
88206|code|STR.W           R1, [R10,#8]|202-248-8-16
88210|code|STR             R1, [SP,#0x60+var_60]|0-145
88212|code|STRD.W          R2, R3, [SP,#0x60+var_40]|205-233-8-35
88216|code|STR             R6, [SP,#0x60+var_2C]|13-150
88218|code|BLX             zip_fopen_index|252-247-220-233
88222|code|MOV             R7, R0|7-70
88224|code|CMP             R0, #0|0-40
88226|code|BEQ.W           loc_15B3C|0-240-75-129
88230|code|LDM.W           R10, {R6,R9}|154-232-64-2
88234|code|MOVW            R0, #0xFFF|64-246-255-112
88238|code|ADDS            R0, R0, R4|0-25
88240|code|MOV.W           R1, #0|79-240-0-1
88244|code|RSB.W           R2, R6, R9|198-235-9-2
88248|code|ADCS            R1, R5|105-65
88250|code|MOV.W           R11, R0,LSR#12|79-234-16-59
88254|code|MOVS            R3, #0|0-35
88256|code|ORR.W           R11, R11, R1,LSL#20|75-234-1-91
88260|code|ASRS            R2, R2, #2|146-16
88262|code|CMP             R11, R2|147-69
88264|code|STR             R3, [SP,#0x60+ptr]|12-147
88266|code|BHI             loc_15996|100-216
88268|code|BCC             loc_1596E|79-211
88270|code|ORRS.W          R3, R4, R5|84-234-5-3
88274|code|ITTT NE|30-191
88276|code|MOVNEW          R8, #0xFFF|64-246-255-120
88280|code|MOVNE.W         R9, #0|79-240-0-9
88284|code|MOVNE           R6, #0|0-38
88286|code|BEQ             loc_15920|31-208
88288|code|LDR.W           R12, [R10]|218-248-0-192
88292|code|CMP             R9, R5|169-69
88294|code|IT EQ|8-191
88296|code|CMPEQ           R8, R4|160-69
88298|code|LDR.W           R1, [R12,R6,LSL#2]|92-248-38-16
88302|code|ITTEE CS|39-191
88304|code|MOVCS           R2, R4|34-70
88306|code|MOVCS           R3, R5|43-70
88308|code|MOVCC.W         R2, #0x1000|79-244-128-82
88312|code|MOVCC           R3, #0|0-35
88314|code|CBZ             R1, loc_15948|41-179
88316|code|MOV             R0, R7|56-70
88318|code|BLX             zip_fread|252-247-196-233
88322|code|CMP             R0, #0|0-40
88324|code|BLT             loc_159AC|82-219
88326|code|SUBS            R4, R4, R0|36-26
88328|code|ADD.W           R6, R6, #1|6-241-1-6
88332|code|SBC.W           R5, R5, R0,ASR#31|101-235-224-117
88336|code|CMP             R6, R11|94-69
88338|code|IT NE|24-191
88340|code|CMPNE           R0, #0|0-40
88342|code|BNE             loc_15940|19-209
88344|code|ORRS.W          R3, R4, R5|84-234-5-3
88348|code|BNE.W           loc_15A38|64-240-140-128
88352|code|MOV             R0, R7|56-70
88354|code|BLX             zip_fclose|252-247-158-233
88358|code|CMP             R0, #0|0-40
88360|code|BNE.W           loc_15AB0|64-240-194-128
88364|code|LDR             R3, [SP,#0x60+var_48]|6-155
88366|code|MOV             R0, R10|80-70
88368|code|LDR             R2, [SP,#0x60+var_2C]|13-154
88370|code|LDR             R3, [R3]|27-104
88372|code|CMP             R2, R3|154-66
88374|code|BNE.W           loc_15AAC|64-240-185-128
88378|code|ADD             SP, SP, #0x3C ; '<'|15-176
88380|code|POP.W           {R4-R11,PC}|189-232-240-143
88384|code|ORRS.W          R3, R4, R5|84-234-5-3
88388|code|BNE             loc_158E0|204-209
88390|code|B               loc_15920|235-231
88392|code|MOV.W           R0, #0x1000; size|79-244-128-80
88396|code|STR             R3, [SP,#0x60+var_4C]|5-147
88398|code|STR             R2, [SP,#0x60+var_50]|4-146
88400|code|STR.W           R12, [SP,#0x60+var_54]|205-248-12-192
88404|code|BLX             malloc|252-247-204-233
88408|code|LDR.W           R12, [SP,#0x60+var_54]|221-248-12-192
88412|code|LDR             R2, [SP,#0x60+var_50]|4-154
88414|code|LDR             R3, [SP,#0x60+var_4C]|5-155
88416|code|STR.W           R0, [R12,R6,LSL#2]|76-248-38-0
88420|code|CMP             R0, #0|0-40
88422|code|BEQ.W           loc_15BD6|0-240-54-129
88426|code|MOV             R1, R0|1-70
88428|code|B               loc_158FC|198-231
88430|code|ADD.W           R6, R6, R11,LSL#2|6-235-139-6
88434|code|CMP             R9, R6|177-69
88436|code|BEQ             loc_159A8|24-208
88438|code|MOV             R8, R6|176-70
88440|code|LDR.W           R0, [R8],#4; ptr|88-248-4-11
88444|code|CBZ             R0, loc_15982|8-177
88446|code|BLX             free|252-247-2-233
88450|code|CMP             R9, R8|193-69
88452|code|BNE             loc_15978|248-209
88454|code|LDR             R0, [SP,#0x60+ptr]; ptr|12-152
88456|code|STR.W           R6, [R10,#4]|202-248-4-96
88460|code|CMP             R0, #0|0-40
88462|code|BEQ             loc_158CE|158-208
88464|code|BLX             free|252-247-248-232
88468|code|B               loc_158CE|155-231
88470|code|MOV             R1, R9|73-70
88472|code|RSB.W           R2, R2, R11|194-235-11-2
88476|code|MOV             R0, R10|80-70
88478|code|ADD             R3, SP, #0x60+ptr|12-171
88480|code|BL              sub_15EDC|0-240-156-250
88484|code|LDR             R0, [SP,#0x60+ptr]|12-152
88486|code|B               loc_1598C|241-231
88488|code|MOV             R0, R3|24-70
88490|code|B               loc_15988|237-231
88492|code|MOV             R0, R7|56-70
88494|code|BLX             zip_file_strerror|252-247-46-233
88498|code|ADD             R5, SP, #0x60+ptr|12-173
88500|code|ADD             R4, SP, #0x60+var_34|11-172
88502|code|MOV             R1, R0|1-70
88504|code|MOV             R2, R4|34-70
88506|code|MOV             R0, R5|40-70
88508|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-44-233
88512|code|MOVW            R2, #0x6758|70-242-88-114
88516|code|MOVS            R0, #4|4-32
88518|code|MOVT.W          R2, #1|192-242-1-2
88522|code|MOVS            R1, #1|1-33
88524|code|LDR             R3, [SP,#0x60+ptr]|12-155
88526|code|BLX             __syslog_chk|252-247-100-233
88530|code|MOV             R0, R7|56-70
88532|code|BLX             zip_fclose|252-247-68-233
88536|code|MOVS            R0, #8; thrown_size|8-32
88538|code|BLX             __cxa_allocate_exception|252-247-168-233
88542|code|MOV             R1, R5; std::string *|41-70
88544|code|MOV             R6, R0|6-70
88546|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|252-247-170-232
88550|code|MOVW            R1, #0x81A8|72-242-168-17
88554|code|MOVW            R2, #0x1D74|65-246-116-82
88558|code|MOV             R0, R6; void *|48-70
88560|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
88564|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
88568|code|BLX             __cxa_throw|252-247-194-233
88572|code|LDR             R0, [SP,#0x60+ptr]|12-152
88574|code|MOV             R3, #0x281D8|72-242-216-19-192-242-2-3
88582|code|SUBS            R0, #0xC|12-56
88584|code|CMP             R0, R3|152-66
88586|code|BEQ             loc_15A12|2-208
88588|code|MOV             R1, R4|33-70
88590|code|BL              sub_11F28|252-247-139-250
88594|code|LDM.W           R10, {R4,R5}|154-232-48-0
88598|code|CMP             R4, R5|172-66
88600|code|BEQ             loc_15A2C|8-208
88602|code|LDR.W           R0, [R4],#4; ptr|84-248-4-11
88606|code|CBZ             R0, loc_15A24|8-177
88608|code|BLX             free|252-247-176-232
88612|code|CMP             R5, R4|165-66
88614|code|BNE             loc_15A1A|248-209
88616|code|LDR.W           R5, [R10]|218-248-0-80
88620|code|CBZ             R5, loc_15A34|21-177
88622|code|MOV             R0, R5; void *|40-70
88624|code|BLX             _ZdlPv; operator delete(void *)|252-247-70-232
88628|code|BLX             __cxa_end_cleanup|252-247-116-232
88632|code|MOV             R0, R7|56-70
88634|code|BLX             zip_fclose|252-247-18-233
88638|code|MOVS            R1, #0x40 ; '@'|64-33
88640|code|LDR             R0, [SP,#0x60+var_44]|7-152
88642|code|LDRD.W          R2, R3, [SP,#0x60+var_40]|221-233-8-35
88646|code|STR             R1, [SP,#0x60+var_60]|0-145
88648|code|BLX             zip_get_name|252-247-22-232
88652|code|MOVW            R2, #0x6DDC|70-246-220-82
88656|code|MOV             R3, R0|3-70
88658|code|MOVT.W          R2, #1|192-242-1-2
88662|code|MOVS            R0, #4|4-32
88664|code|MOVS            R1, #1|1-33
88666|code|BLX             __syslog_chk|252-247-30-233
88670|code|MOVS            R0, #8; thrown_size|8-32
88672|code|ADD             R4, SP, #0x60+var_34|11-172
88674|code|BLX             __cxa_allocate_exception|252-247-100-233
88678|code|MOV             R1, #0x16E08|70-246-8-97-192-242-1-1
88686|code|ADD             R2, SP, #0x60+var_38|10-170
88688|code|MOV             R5, R0|5-70
88690|code|MOV             R0, R4|32-70
88692|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-208-232
88696|code|MOV             R0, R5; this|40-70
88698|code|MOV             R1, R4; std::string *|33-70
88700|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|252-247-92-232
88704|code|LDR             R3, [SP,#0x60+var_34]|11-155
88706|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
88714|code|SUB.W           R0, R3, #0xC|163-241-12-0
88718|code|CMP             R0, R2|144-66
88720|code|BNE.W           loc_15BF4|64-240-176-128
88724|code|MOVW            R1, #0x81A8|72-242-168-17
88728|code|MOVW            R2, #0x1D74|65-246-116-82
88732|code|MOV             R0, R5; void *|40-70
88734|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
88738|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
88742|code|BLX             __cxa_throw|252-247-108-233
88746|code|B               loc_15A12|178-231
88748|code|BLX             __stack_chk_fail|252-247-38-233
88752|code|LDR             R5, [SP,#0x60+var_44]|7-157
88754|code|MOV             R0, R5|40-70
88756|code|BLX             zip_strerror|251-247-236-239
88760|code|MOVW            R2, #0x6758|70-242-88-114
88764|code|MOV             R3, R0|3-70
88766|code|MOVT.W          R2, #1|192-242-1-2
88770|code|MOVS            R0, #4|4-32
88772|code|MOVS            R1, #1|1-33
88774|code|BLX             __syslog_chk|252-247-232-232
88778|code|MOVS            R0, #8; thrown_size|8-32
88780|code|BLX             __cxa_allocate_exception|252-247-46-233
88784|code|MOV             R4, R0|4-70
88786|code|MOV             R0, R5|40-70
88788|code|BLX             zip_strerror|251-247-220-239
88792|code|ADD             R5, SP, #0x60+ptr|12-173
88794|code|MOV             R1, R0|1-70
88796|code|ADD             R2, SP, #0x60+var_38|10-170
88798|code|MOV             R0, R5|40-70
88800|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-154-232
88804|code|MOV             R0, R4; this|32-70
88806|code|MOV             R1, R5; std::string *|41-70
88808|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|252-247-38-232
88812|code|LDR             R3, [SP,#0x60+ptr]|12-155
88814|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
88822|code|SUB.W           R0, R3, #0xC|163-241-12-0
88826|code|CMP             R0, R2|144-66
88828|code|BEQ             loc_15B04|2-208
88830|code|ADD             R1, SP, #0x60+var_34|11-169
88832|code|BL              sub_11F28|252-247-18-250
88836|code|MOVW            R1, #0x81A8|72-242-168-17
88840|code|MOVW            R2, #0x1D74|65-246-116-82
88844|code|MOV             R0, R4; void *|32-70
88846|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
88850|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
88854|code|BLX             __cxa_throw|252-247-52-233
88858|code|LDR             R3, [SP,#0x60+ptr]|12-155
88860|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
88868|code|SUB.W           R0, R3, #0xC|163-241-12-0
88872|code|CMP             R0, R2|144-66
88874|code|BEQ             loc_15B32|2-208
88876|code|ADD             R1, SP, #0x60+var_34|11-169
88878|code|BL              sub_11F28|252-247-251-249
88882|code|MOV             R0, R4; void *|32-70
88884|code|BLX             __cxa_free_exception|252-247-0-233
88888|code|B               loc_15A12|107-231
88890|code|B               loc_15B32|250-231
88892|code|LDR             R5, [SP,#0x60+var_44]|7-157
88894|code|MOV             R0, R5|40-70
88896|code|BLX             zip_strerror|251-247-166-239
88900|code|MOVW            R2, #0x6758|70-242-88-114
88904|code|MOV             R3, R0|3-70
88906|code|MOVT.W          R2, #1|192-242-1-2
88910|code|MOVS            R0, #4|4-32
88912|code|MOVS            R1, #1|1-33
88914|code|BLX             __syslog_chk|252-247-162-232
88918|code|MOVS            R0, #8; thrown_size|8-32
88920|code|BLX             __cxa_allocate_exception|252-247-232-232
88924|code|MOV             R4, R0|4-70
88926|code|MOV             R0, R5|40-70
88928|code|BLX             zip_strerror|251-247-150-239
88932|code|MOV             R1, R0|1-70
88934|code|ADD             R2, SP, #0x60+var_34|11-170
88936|code|ADD             R0, SP, #0x60+var_38|10-168
88938|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-86-232
88942|code|MOV             R0, R4; this|32-70
88944|code|ADD             R1, SP, #0x60+var_38; std::string *|10-169
88946|code|BLX             _ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|251-247-226-239
88950|code|LDR             R3, [SP,#0x60+var_38]|10-155
88952|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
88960|code|SUB.W           R0, R3, #0xC|163-241-12-0
88964|code|CMP             R0, R2|144-66
88966|code|BEQ             loc_15B8E|2-208
88968|code|ADD             R1, SP, #0x60+ptr|12-169
88970|code|BL              sub_11F28|252-247-205-249
88974|code|MOVW            R1, #0x81A8|72-242-168-17
88978|code|MOVW            R2, #0x1D74|65-246-116-82
88982|code|MOV             R0, R4; void *|32-70
88984|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
88988|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
88992|code|BLX             __cxa_throw|252-247-238-232
88996|code|LDR             R3, [SP,#0x60+var_38]|10-155
88998|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
89006|code|SUB.W           R0, R3, #0xC|163-241-12-0
89010|code|CMP             R0, R2|144-66
89012|code|BEQ             loc_15B32|189-208
89014|code|ADD             R1, SP, #0x60+ptr|12-169
89016|code|BL              sub_11F28|252-247-182-249
89020|code|B               loc_15B32|185-231
89022|code|B               loc_15B32|184-231
89024|code|LDR             R0, [SP,#0x60+ptr]; ptr|12-152
89026|code|CMP             R0, #0|0-40
89028|code|BEQ.W           loc_15A12|63-244-37-175
89032|code|BLX             free|251-247-220-239
89036|code|B               loc_15A12|33-231
89038|code|MOV             R0, R6; void *|48-70
89040|code|BLX             __cxa_free_exception|252-247-178-232
89044|code|B               loc_159FC|18-231
89046|code|MOVS            R0, #4; thrown_size|4-32
89048|code|BLX             __cxa_allocate_exception|252-247-168-232
89052|code|LDR             R3, =unk_281C8|16-75
89054|code|MOVW            R1, #0x81EC|72-242-236-17
89058|code|MOVW            R2, #0x1BB8|65-246-184-50
89062|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
89066|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
89070|code|STR             R3, [R0]|3-96
89072|code|BLX             __cxa_throw|252-247-198-232
89076|code|ADD             R1, SP, #0x60+ptr|12-169
89078|code|BL              sub_11F28|252-247-151-249
89082|code|B               loc_15A94|75-231
89084|code|LDR             R3, [SP,#0x60+var_34]|11-155
89086|code|MOV             R2, #0x281D8|72-242-216-18-192-242-2-2
89094|code|SUB.W           R0, R3, #0xC|163-241-12-0
89098|code|CMP             R0, R2|144-66
89100|code|BEQ             loc_15C14|2-208
89102|code|ADD             R1, SP, #0x60+ptr|12-169
89104|code|BL              sub_11F28|252-247-138-249
89108|code|MOV             R0, R5; void *|40-70
89110|code|BLX             __cxa_free_exception|252-247-144-232
89114|code|B               loc_15A12|250-230
89116|code|B               loc_15C14|250-231
89118|data|ALIGN 0x10|0-191
89120|data|DCD unk_281C8|200-129-2-0
89124|code|PUSH.W          {R4-R11,LR}|45-233-240-79
89128|code|MOVW            R10, #0xFFF|64-246-255-122
89132|code|LDM.W           R0, {R4,R5}|144-232-48-0
89136|code|ADDS.W          R10, R10, R2|26-235-2-10
89140|code|MOV             R6, R2|22-70
89142|code|MOV.W           R11, #0|79-240-0-11
89146|code|MOVW            R9, #0x81B8|72-242-184-25
89150|code|ADC.W           R11, R11, R3|75-235-3-11
89154|code|SUBS            R2, R5, R4|42-27
89156|code|MOV             R7, R3|31-70
89158|code|MOVT.W          R9, #2|192-242-2-9
89162|code|MOV.W           R3, R10,LSR#12|79-234-26-51
89166|code|LDR.W           LR, [R9]|217-248-0-224
89170|code|ORR.W           R3, R3, R11,LSL#20|67-234-11-83
89174|code|ASRS            R2, R2, #2|146-16
89176|code|SUB             SP, SP, #0xC|131-176
89178|code|CMP             R3, R2|147-66
89180|code|MOV.W           R1, #0|79-240-0-1
89184|code|MOV             R8, R0|128-70
89186|code|STR.W           LR, [SP,#0x30+var_2C]|205-248-4-224
89190|code|STR             R1, [SP,#0x30+ptr]|0-145
89192|code|BHI             loc_15CEA|63-216
89194|code|BCC             loc_15C9E|24-211
89196|code|LDRD.W          R2, R3, [R8,#0x10]|216-233-4-35
89200|code|CMP             R3, R7|187-66
89202|code|IT EQ|8-191
89204|code|CMPEQ           R2, R6|178-66
89206|code|ITE CC|52-191
89208|code|MOVCC           R1, #1|1-33
89210|code|MOVCS           R1, #0|0-33
89212|code|ORRS.W          R0, R2, R3|82-234-3-0
89216|code|AND.W           R1, R1, #1|1-240-1-1
89220|code|IT EQ|8-191
89222|code|MOVEQ           R1, #0|0-33
89224|code|CBNZ            R1, loc_15CC6|233-185
89226|code|LDR             R2, [SP,#0x30+var_2C]|1-154
89228|code|LDR.W           R3, [R9]|217-248-0-48
89232|code|STRD.W          R6, R7, [R8,#0x10]|200-233-4-103
89236|code|CMP             R2, R3|154-66
89238|code|BNE             loc_15CFC|49-209
89240|code|ADD             SP, SP, #0xC|3-176
89242|code|POP.W           {R4-R11,PC}|189-232-240-143
89246|code|ADD.W           R10, R4, R3,LSL#2|4-235-131-10
89250|code|CMP             R5, R10|85-69
89252|code|BEQ             loc_15CF8|40-208
89254|code|MOV             R4, R10|84-70
89256|code|LDR.W           R0, [R4],#4; ptr|84-248-4-11
89260|code|CBZ             R0, loc_15CB2|8-177
89262|code|BLX             free|251-247-106-239
89266|code|CMP             R5, R4|165-66
89268|code|BNE             loc_15CA8|248-209
89270|code|LDR             R0, [SP,#0x30+ptr]; ptr|0-152
89272|code|STR.W           R10, [R8,#4]|200-248-4-160
89276|code|CMP             R0, #0|0-40
89278|code|BEQ             loc_15C6C|213-208
89280|code|BLX             free|251-247-96-239
89284|code|B               loc_15C6C|210-231
89286|code|LSRS            R1, R2, #0xC|17-11
89288|code|LDR.W           R0, [R8]|216-248-0-0
89292|code|ORR.W           R1, R1, R3,LSL#20|65-234-3-81
89296|code|LDR.W           R0, [R0,R1,LSL#2]|80-248-33-0
89300|code|CMP             R0, #0|0-40
89302|code|BEQ             loc_15C8A|216-208
89304|code|UBFX.W          R2, R2, #0, #0xC|194-243-11-2
89308|code|MOVS            R1, #0; c|0-33
89310|code|ADD             R0, R2; s|16-68
89312|code|RSB.W           R2, R2, #0x1000; n|194-245-128-82
89316|code|BLX             memset|251-247-16-239
89320|code|B               loc_15C8A|207-231
89322|code|SUBS            R2, R3, R2|154-26
89324|code|MOV             R1, R5|41-70
89326|code|MOV             R3, SP|107-70
89328|code|BL              sub_15EDC|0-240-244-248
89332|code|LDR             R0, [SP,#0x30+ptr]|0-152
89334|code|B               loc_15CBC|225-231
89336|code|MOV             R0, R1|8-70
89338|code|B               loc_15CB8|221-231
89340|code|BLX             __stack_chk_fail|251-247-254-239
89344|code|LDR             R0, [SP,#0x30+ptr]; ptr|0-152
89346|code|CBZ             R0, loc_15D08|8-177
89348|code|BLX             free|251-247-62-239
89352|code|BLX             __cxa_end_cleanup|251-247-10-239
89356|code|PUSH.W          {R4-R11,LR}|45-233-240-79
89360|code|SUB             SP, SP, #0x1C|135-176
89362|code|MOVW            R11, #0x81B8|72-242-184-27
89366|code|MOV             R9, R0|129-70
89368|code|LDR             R4, [SP,#0x40+arg_0]|16-156
89370|code|MOVT.W          R11, #2|192-242-2-11
89374|code|LDR.W           R0, [R11]|219-248-0-0
89378|code|MOV             R8, R1|136-70
89380|code|LDR             R1, [SP,#0x40+arg_4]|17-153
89382|code|MOV             R5, R2|21-70
89384|code|LSRS            R6, R4, #0xC|38-11
89386|code|LDRD.W          R2, R3, [R9,#0x10]|217-233-4-35
89390|code|STR             R0, [SP,#0x40+var_2C]|5-144
89392|code|UBFX.W          R7, R4, #0, #0xC|196-243-11-7
89396|code|ORR.W           R6, R6, R1,LSL#20|70-234-1-86
89400|code|LDRD.W          R0, R1, [SP,#0x40+arg_0]|221-233-16-1
89404|code|STR             R5, [SP,#0x40+var_38]|2-149
89406|code|CMP             R3, R1|139-66
89408|code|IT EQ|8-191
89410|code|CMPEQ           R2, R0|130-66
89412|code|BCS             loc_15DF8|88-210
89414|code|ORRS.W          R1, R2, R3|82-234-3-1
89418|code|BNE.W           loc_15E7E|64-240-152-128
89422|code|LDR.W           R4, [R9]|217-248-0-64
89426|code|LDRD.W          R2, R3, [SP,#0x40+arg_0]|221-233-16-35
89430|code|ADDS            R2, R2, R5|82-25
89432|code|ADC.W           R3, R3, #0|67-241-0-3
89436|code|STRD.W          R2, R3, [R9,#0x10]|201-233-4-35
89440|code|LDR.W           R10, [R9,#4]|217-248-4-160
89444|code|MOVW            R0, #0xFFF|64-246-255-112
89448|code|ADDS            R0, R0, R2|128-24
89450|code|MOV.W           R1, #0|79-240-0-1
89454|code|RSB.W           LR, R4, R10|196-235-10-14
89458|code|ADCS            R1, R3|89-65
89460|code|LSRS            R3, R0, #0xC|3-11
89462|code|MOVS            R2, #0|0-34
89464|code|ORR.W           R3, R3, R1,LSL#20|67-234-1-83
89468|code|MOV.W           R0, LR,ASR#2|79-234-174-0
89472|code|CMP             R3, R0|131-66
89474|code|STR             R2, [SP,#0x40+ptr]|4-146
89476|code|BHI             loc_15E6E|115-216
89478|code|BCC             loc_15E42|92-211
89480|code|CBZ             R5, loc_15DE6|109-179
89482|code|LSLS            R6, R6, #2|182-0
89484|code|STR.W           R11, [SP,#0x40+var_34]|205-248-12-176
89488|code|B               loc_15DB0|14-224
89490|code|RSB.W           R4, R7, #0x1000|199-245-128-84
89494|code|CMP             R0, #0|0-40
89496|code|BEQ             loc_15E16|61-208
89498|code|ADD             R0, R7; dest|56-68
89500|code|MOV             R1, R8; src|65-70
89502|code|MOV             R2, R4; n|34-70
89504|code|ADDS            R6, #4|4-54
89506|code|BLX             memcpy|251-247-40-239
89510|code|SUBS            R5, R5, R4|45-27
89512|code|ADD             R8, R4|160-68
89514|code|MOV.W           R7, #0|79-240-0-7
89518|code|BEQ             loc_15E3C|69-208
89520|code|ADDS            R2, R7, R5|122-25
89522|code|MOV.W           R3, R7,ASR#31|79-234-231-115
89526|code|ADC.W           R3, R3, #0|67-241-0-3
89530|code|LDR.W           R1, [R9]|217-248-0-16
89534|code|MOV.W           R11, #0|79-240-0-11
89538|code|CMP             R11, R3|155-69
89540|code|MOV.W           R10, #0x1000|79-244-128-90
89544|code|IT EQ|8-191
89546|code|CMPEQ           R10, R2|146-69
89548|code|ADD.W           R0, R1, R6|1-235-6-0
89552|code|STR             R0, [SP,#0x40+var_3C]|1-144
89554|code|LDR             R0, [R1,R6]|136-89
89556|code|BCC             loc_15D92|221-211
89558|code|CBZ             R0, loc_15E14|232-177
89560|code|ADD             R0, R7; dest|56-68
89562|code|MOV             R1, R8; src|65-70
89564|code|MOV             R2, R5; n|42-70
89566|code|LDR.W           R11, [SP,#0x40+var_34]|221-248-12-176
89570|code|BLX             memcpy|251-247-8-239
89574|code|LDR             R2, [SP,#0x40+var_2C]|5-154
89576|code|LDR.W           R3, [R11]|219-248-0-48
89580|code|LDR             R0, [SP,#0x40+var_38]|2-152
89582|code|CMP             R2, R3|154-66
89584|code|BNE             loc_15ED2|111-209
89586|code|ADD             SP, SP, #0x1C|7-176
89588|code|POP.W           {R4-R11,PC}|189-232-240-143
89592|code|LDR             R1, [SP,#0x40+arg_0]|16-153
89594|code|LDR.W           R4, [R9]|217-248-0-64
89598|code|SUBS            R1, R2, R1|81-26
89600|code|CMP             R5, R1|141-66
89602|code|BLS             loc_15D60|173-217
89604|code|LDRD.W          R2, R3, [SP,#0x40+arg_0]|221-233-16-35
89608|code|ADDS            R2, R2, R5|82-25
89610|code|ADC.W           R3, R3, #0|67-241-0-3
89614|code|STRD.W          R2, R3, [R9,#0x10]|201-233-4-35
89618|code|B               loc_15D60|165-231
89620|code|MOV             R4, R5|44-70
89622|code|MOV.W           R0, #0x1000; size|79-244-128-80
89626|code|BLX             malloc|251-247-106-239
89630|code|LDR             R2, [SP,#0x40+var_3C]|1-154
89632|code|STR             R0, [R2]|16-96
89634|code|CMP             R0, #0|0-40
89636|code|BEQ             loc_15EA8|64-208
89638|code|CMP             R7, #0|0-47
89640|code|BEQ             loc_15D9A|183-208
89642|code|MOV.W           R3, #0x1000|79-244-128-83
89646|code|MOVS            R1, #0|0-33
89648|code|MOV             R2, R7|58-70
89650|code|BLX             __memset_chk|252-247-42-232
89654|code|LDR             R3, [SP,#0x40+var_3C]|1-155
89656|code|LDR             R0, [R3]|24-104
89658|code|B               loc_15D9A|174-231
89660|code|LDR.W           R11, [SP,#0x40+var_34]|221-248-12-176
89664|code|B               loc_15DE6|209-231
89666|code|ADD.W           R3, R4, R3,LSL#2|4-235-131-3
89670|code|STR             R3, [SP,#0x40+var_3C]|1-147
89672|code|CMP             R10, R3|154-69
89674|code|BEQ             loc_15EA4|43-208
89676|code|MOV             R4, R3|28-70
89678|code|LDR.W           R0, [R4],#4; ptr|84-248-4-11
89682|code|CBZ             R0, loc_15E58|8-177
89684|code|BLX             free|251-247-150-238
89688|code|CMP             R10, R4|162-69
89690|code|BNE             loc_15E4E|248-209
89692|code|LDR             R0, [SP,#0x40+ptr]; ptr|4-152
89694|code|LDR             R3, [SP,#0x40+var_3C]|1-155
89696|code|STR.W           R3, [R9,#4]|201-248-4-48
89700|code|CMP             R0, #0|0-40
89702|code|BEQ             loc_15D88|143-208
89704|code|BLX             free|251-247-140-238
89708|code|B               loc_15D88|140-231
89710|code|SUBS            R2, R3, R0|26-26
89712|code|MOV             R1, R10|81-70
89714|code|MOV             R0, R9|72-70
89716|code|ADD             R3, SP, #0x40+ptr|4-171
89718|code|BL              sub_15EDC|0-240-49-248
89722|code|LDR             R0, [SP,#0x40+ptr]|4-152
89724|code|B               loc_15E64|242-231
89726|code|LSRS            R1, R2, #0xC|17-11
89728|code|LDR.W           R4, [R9]|217-248-0-64
89732|code|ORR.W           R1, R1, R3,LSL#20|65-234-3-81
89736|code|LDR.W           R0, [R4,R1,LSL#2]|84-248-33-0
89740|code|CMP             R0, #0|0-40
89742|code|BEQ.W           loc_15D52|63-244-96-175
89746|code|UBFX.W          R2, R2, #0, #0xC|194-243-11-2
89750|code|MOVS            R1, #0; c|0-33
89752|code|ADD             R0, R2; s|16-68
89754|code|RSB.W           R2, R2, #0x1000; n|194-245-128-82
89758|code|BLX             memset|251-247-52-238
89762|code|B               loc_15D4E|84-231
89764|code|MOV             R0, R2|16-70
89766|code|B               loc_15E5E|218-231
89768|code|MOVS            R0, #4; thrown_size|4-32
89770|code|BLX             __cxa_allocate_exception|251-247-64-239
89774|code|LDR             R3, =unk_281C8|10-75
89776|code|MOVW            R1, #0x81EC|72-242-236-17
89780|code|MOVW            R2, #0x1BB8|65-246-184-50
89784|code|MOVT.W          R1, #2; lptinfo|192-242-2-1
89788|code|MOVT.W          R2, #1; void (__cdecl *)(void *)|192-242-1-2
89792|code|STR             R3, [R0]|3-96
89794|code|BLX             __cxa_throw|251-247-94-239
89798|code|LDR             R0, [SP,#0x40+ptr]; ptr|4-152
89800|code|CBZ             R0, loc_15ECE|8-177
89802|code|BLX             free|251-247-92-238
89806|code|BLX             __cxa_end_cleanup|251-247-40-238
89810|code|BLX             __stack_chk_fail|251-247-20-239
89814|data|ALIGN 4|0-191
89816|data|DCD unk_281C8|200-129-2-0
89820|code|PUSH.W          {R4-R11,LR}|45-233-240-79
89824|code|MOV             R11, #0x281B8|72-242-184-27-192-242-2-11
89832|code|MOV             R8, R0|128-70
89834|code|LDR.W           R0, [R11]|219-248-0-0
89838|code|SUB             SP, SP, #0x1C|135-176
89840|code|STR             R0, [SP,#0x40+var_2C]|5-144
89842|code|CMP             R2, #0|0-42
89844|code|BEQ.W           loc_1609C|0-240-210-128
89848|code|LDR.W           R4, [R8,#4]|216-248-4-64
89852|code|LDR.W           R0, [R8,#8]|216-248-8-0
89856|code|SUBS            R0, R0, R4|0-27
89858|code|CMP.W           R2, R0,ASR#2|178-235-160-15
89862|code|BHI             loc_15FA6|78-216
89864|code|LDR             R5, [R3]|29-104
89866|code|MOVS            R0, #0|0-32
89868|code|STR             R0, [R3]|24-96
89870|code|LDR.W           R3, [R8,#4]|216-248-4-48
89874|code|STR             R5, [SP,#0x40+var_30]|4-149
89876|code|RSB.W           LR, R1, R3|193-235-3-14
89880|code|MOV.W           R3, LR,ASR#2|79-234-174-3
89884|code|CMP             R2, R3|154-66
89886|code|BCS.W           loc_160AC|128-240-197-128
89890|code|MOV.W           LR, R2,LSL#2|79-234-130-14
89894|code|RSB.W           R6, LR, R4|206-235-4-6
89898|code|CMP             R4, R6|180-66
89900|code|ITT NE|28-191
89902|code|MOVNE           R3, R6|51-70
89904|code|MOVNE           R2, R4|34-70
89906|code|BEQ             loc_15F44|7-208
89908|code|CBZ             R2, loc_15F3C|18-177
89910|code|LDR             R7, [R3]|31-104
89912|code|STR             R7, [R2]|23-96
89914|code|STR             R0, [R3]|24-96
89916|code|ADDS            R3, #4|4-51
89918|code|ADDS            R2, #4|4-50
89920|code|CMP             R4, R3|156-66
89922|code|BNE             loc_15F34|247-209
89924|code|SUBS            R2, R6, R1|114-26
89926|code|ADD.W           R3, R4, LR|4-235-14-3
89930|code|CMP             R2, #3|3-42
89932|code|STR.W           R3, [R8,#4]|200-248-4-48
89936|code|ITT GT|196-191
89938|code|SUBGT           R2, R4, R2|162-26
89940|code|MOVGT           R0, #0|0-32
89942|code|BLE             loc_15F6A|8-221
89944|code|SUBS            R4, #4|4-60
89946|code|SUBS            R6, #4|4-62
89948|code|CMP             R4, R6|180-66
89950|code|ITTT NE|30-191
89952|code|LDRNE           R3, [R6]|51-104
89954|code|STRNE           R3, [R4]|35-96
89956|code|STRNE           R0, [R6]|48-96
89958|code|CMP             R4, R2|148-66
89960|code|BNE             loc_15F58|246-209
89962|code|ADD.W           R2, R1, LR|1-235-14-2
89966|code|CMP             R1, R2|145-66
89968|code|IT NE|24-191
89970|code|ADDNE           R3, SP, #0x40+var_30|4-171
89972|code|BEQ             loc_15F88|8-208
89974|code|CMP             R1, R3|153-66
89976|code|ADD.W           R1, R1, #4|1-241-4-1
89980|code|ITT NE|28-191
89982|code|STRNE.W         R5, [R1,#-4]|65-248-4-92
89986|code|MOVNE           R5, #0|0-37
89988|code|CMP             R2, R1|138-66
89990|code|BNE             loc_15F76|246-209
89992|code|CMP             R5, #0|0-45
89994|code|BEQ.W           loc_1609C|0-240-135-128
89998|code|LDR             R2, [SP,#0x40+var_2C]|5-154
90000|code|LDR.W           R3, [R11]|219-248-0-48
90004|code|CMP             R2, R3|154-66
90006|code|BNE.W           loc_16124|64-240-197-128
90010|code|MOV             R0, R5; ptr|40-70
90012|code|ADD             SP, SP, #0x1C|7-176
90014|code|POP.W           {R4-R11,LR}|189-232-240-79
90018|code|B.W             j_free|251-247-237-189
90022|code|LDR.W           R6, [R8]|216-248-0-96
90026|code|MOV             R5, #0x3FFFFFFF|79-246-255-117-195-246-255-117
90034|code|MOV             LR, #0x3FFFFFFF|111-240-64-78
90038|code|SUBS            R0, R4, R6|160-27
90040|code|ASRS            R0, R0, #2|128-16
90042|code|SUBS            R5, R5, R0|45-26
90044|code|CMP             R2, R5|170-66
90046|code|BHI.W           loc_16128|0-242-179-128
90050|code|CMP             R0, R2|144-66
90052|code|ITE CS|44-191
90054|code|ADDCS           R5, R0, R0|5-24
90056|code|ADDCC           R5, R0, R2|133-24
90058|code|CMP             R5, LR|117-69
90060|code|IT LS|152-191
90062|code|CMPLS           R0, R5|168-66
90064|code|ITT HI|132-191
90066|code|RSBHI.W         R9, R6, R1|198-235-1-9
90070|code|MOVHI           R5, #0xFFFFFFFC|111-240-3-5
90074|code|BLS.W           loc_16114|64-242-155-128
90078|code|MOV             R0, R5; unsigned int|40-70
90080|code|STR             R3, [SP,#0x40+var_34]|3-147
90082|code|STR             R2, [SP,#0x40+var_38]|2-146
90084|code|STR             R1, [SP,#0x40+var_3C]|1-145
90086|code|BLX             _Znwj; operator new(uint)|251-247-74-238
90090|code|ADD             R1, SP, #0x40+var_3C|1-169
90092|code|LDR.W           R4, [R8,#4]|216-248-4-64
90096|code|LDR.W           LR, [R8]|216-248-0-224
90100|code|LDM             R1, {R1-R3}|14-201
90102|code|MOV             R6, R0|6-70
90104|code|ADD             R9, R6|177-68
90106|code|MOV             R12, R2|148-70
90108|code|MOVS            R0, #0|0-32
90110|code|CMP.W           R9, #0|185-241-0-15
90114|code|BEQ             loc_1600C|3-208
90116|code|LDR             R7, [R3]|31-104
90118|code|STR.W           R7, [R9]|201-248-0-112
90122|code|STR             R0, [R3]|24-96
90124|code|SUBS.W          R12, R12, #1|188-241-1-12
90128|code|ADD.W           R9, R9, #4|9-241-4-9
90132|code|BNE             loc_15FFE|243-209
90134|code|CMP             LR, R1|142-69
90136|code|BEQ.W           loc_16120|0-240-130-128
90140|code|MOV             R0, LR|112-70
90142|code|MOV             R3, R6|51-70
90144|code|CBZ             R3, loc_1602A|27-177
90146|code|LDR             R7, [R0]|7-104
90148|code|STR             R7, [R3]|31-96
90150|code|STR.W           R12, [R0]|192-248-0-192
90154|code|ADDS            R0, #4|4-48
90156|code|ADDS            R3, #4|4-51
90158|code|CMP             R1, R0|129-66
90160|code|BNE             loc_16020|246-209
90162|code|ADD.W           R9, LR, #4|14-241-4-9
90166|code|RSB.W           R9, R9, R1|201-235-1-9
90170|code|BIC.W           R9, R9, #3|41-240-3-9
90174|code|ADD.W           R9, R9, #4|9-241-4-9
90178|code|ADD             R9, R6|177-68
90180|code|CMP             R1, R4|161-66
90182|code|ADD.W           R9, R9, R2,LSL#2|9-235-130-9
90186|code|BEQ             loc_1606E|16-208
90188|code|MOV             R3, R1|11-70
90190|code|MOV             R0, R9|72-70
90192|code|MOVS            R2, #0|0-34
90194|code|CBZ             R0, loc_1605A|16-177
90196|code|LDR             R7, [R3]|31-104
90198|code|STR             R7, [R0]|7-96
90200|code|STR             R2, [R3]|26-96
90202|code|ADDS            R3, #4|4-51
90204|code|ADDS            R0, #4|4-48
90206|code|CMP             R4, R3|156-66
90208|code|BNE             loc_16052|247-209
90210|code|ADDS            R1, #4|4-49
90212|code|SUBS            R3, R4, R1|99-26
90214|code|BIC.W           R3, R3, #3|35-240-3-3
90218|code|ADDS            R3, #4|4-51
90220|code|ADD             R9, R3|153-68
90222|code|CMP             LR, R4|166-69
90224|code|BEQ             loc_16086|9-208
90226|code|MOV             R10, LR|242-70
90228|code|LDR.W           R0, [R10],#4; ptr|90-248-4-11
90232|code|CBZ             R0, loc_1607E|8-177
90234|code|BLX             free|251-247-132-237
90238|code|CMP             R4, R10|84-69
90240|code|BNE             loc_16074|248-209
90242|code|LDR.W           R4, [R8]|216-248-0-64
90246|code|CBZ             R4, loc_1608E|20-177
90248|code|MOV             R0, R4; void *|32-70
90250|code|BLX             _ZdlPv; operator delete(void *)|251-247-26-237
90254|code|ADD             R5, R6|53-68
90256|code|STR.W           R6, [R8]|200-248-0-96
90260|code|STR.W           R5, [R8,#8]|200-248-8-80
90264|code|STR.W           R9, [R8,#4]|200-248-4-144
90268|code|LDR             R2, [SP,#0x40+var_2C]|5-154
90270|code|LDR.W           R3, [R11]|219-248-0-48
90274|code|CMP             R2, R3|154-66
90276|code|BNE             loc_16124|62-209
90278|code|ADD             SP, SP, #0x1C|7-176
90280|code|POP.W           {R4-R11,PC}|189-232-240-143
90284|code|SUBS            R2, R2, R3|210-26
90286|code|ITT NE|28-191
90288|code|MOVNE           R6, R2|22-70
90290|code|MOVNE           R3, R4|35-70
90292|code|BEQ             loc_160C6|7-208
90294|code|CBZ             R3, loc_160BC|11-177
90296|code|STR             R5, [R3]|29-96
90298|code|MOVS            R5, #0|0-37
90300|code|SUBS            R6, #1|1-62
90302|code|ADD.W           R3, R3, #4|3-241-4-3
90306|code|BNE             loc_160B6|248-209
90308|code|STR             R5, [SP,#0x40+var_30]|4-149
90310|code|CMP             R4, R1|140-66
90312|code|ADD.W           R2, R4, R2,LSL#2|4-235-130-2
90316|code|STR.W           R2, [R8,#4]|200-248-4-32
90320|code|ITTT NE|30-191
90322|code|MOVNE           R3, R1|11-70
90324|code|MOVNE           R0, R2|16-70
90326|code|MOVNE           R6, #0|0-38
90328|code|BEQ             loc_1610A|23-208
90330|code|CBZ             R0, loc_160E2|16-177
90332|code|LDR             R5, [R3]|29-104
90334|code|STR             R5, [R0]|5-96
90336|code|STR             R6, [R3]|30-96
90338|code|ADDS            R3, #4|4-51
90340|code|ADDS            R0, #4|4-48
90342|code|CMP             R4, R3|156-66
90344|code|BNE             loc_160DA|247-209
90346|code|ADD             R3, SP, #0x40+var_28|6-171
90348|code|ADD             R2, LR|114-68
90350|code|STR.W           R2, [R8,#4]|200-248-4-32
90354|code|LDR.W           R5, [R3,#-8]!|83-248-8-93
90358|code|CMP             R1, R3|153-66
90360|code|ADD.W           R1, R1, #4|1-241-4-1
90364|code|ITT NE|28-191
90366|code|STRNE.W         R5, [R1,#-4]|65-248-4-92
90370|code|MOVNE           R5, #0|0-37
90372|code|CMP             R4, R1|140-66
90374|code|BNE             loc_160F6|246-209
90376|code|B               loc_15F88|62-231
90378|code|ADD             R2, LR|114-68
90380|code|LDR             R5, [SP,#0x40+var_30]|4-157
90382|code|STR.W           R2, [R8,#4]|200-248-4-32
90386|code|B               loc_15F88|57-231
90388|code|RSB.W           R9, R6, R1|198-235-1-9
90392|code|CBNZ            R5, loc_16134|101-185
90394|code|MOV             LR, R6|182-70
90396|code|MOV             R6, R5|46-70
90398|code|B               loc_15FF8|107-231
90400|code|MOV             R9, R6|177-70
90402|code|B               loc_16044|143-231
90404|code|BLX             __stack_chk_fail|251-247-234-237
90408|code|MOV             R0, #aVectorMFillIns; char *|70-246-196-80-192-242-1-0
90416|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|251-247-138-236
90420|code|LSLS            R5, R5, #2|173-0
90422|code|B               loc_15FDE|82-231
90424|code|LDR             R3, [R0]|3-104
90426|code|PUSH            {R4-R6}|112-180
90428|code|ADDS            R2, R3, #1|90-28
90430|code|STR             R2, [R0]|2-96
90432|code|MOV             R2, R3|26-70
90434|code|LDRB.W          R1, [R2],#2|18-248-2-27
90438|code|ADDS            R6, R3, #3|222-28
90440|code|ADDS            R5, R3, #4|29-29
90442|code|STR             R2, [R0]|2-96
90444|code|LDRB            R4, [R3,#1]|92-120
90446|code|STR             R6, [R0]|6-96
90448|code|LDRB            R2, [R3,#2]|154-120
90450|code|STR             R5, [R0]|5-96
90452|code|LDRB            R0, [R3,#3]|216-120
90454|code|LSLS            R2, R2, #0x10|18-4
90456|code|ADD.W           R3, R2, R4,LSL#8|2-235-4-35
90460|code|ADD             R3, R1|11-68
90462|code|ADD.W           R0, R3, R0,LSL#24|3-235-0-96
90466|code|POP             {R4-R6}|112-188
90468|code|BX              LR|112-71
90470|data|ALIGN 4|0-191
90472|code|LDR             R2, [R0]|2-104
90474|code|ADDS            R3, R2, #1|83-28
90476|code|STR             R3, [R0]|3-96
90478|code|MOV             R1, R2|17-70
90480|code|LDRB.W          R3, [R1],#2|17-248-2-59
90484|code|STR             R1, [R0]|1-96
90486|code|LDRB            R0, [R2,#1]|80-120
90488|code|ADD.W           R0, R3, R0,LSL#8|3-235-0-32
90492|code|UXTH            R0, R0|128-178
90494|code|BX              LR|112-71
90496|code|PUSH            {R4-R7,LR}|240-181
90498|code|SUB             SP, SP, #0xC|131-176
90500|code|LDR             R5, [SP,#0x20+arg_0]|8-157
90502|code|CBZ             R0, loc_161B6|176-177
90504|code|ADDS            R4, R1, #1|76-28
90506|code|STR             R4, [SP,#0x20+var_1C]|1-148
90508|code|ADD             R4, R0|4-68
90510|code|LDRB            R0, [R1]|8-120
90512|code|MOV             R6, R3|30-70
90514|code|AND.W           R7, R0, #1|0-240-1-7
90518|code|UBFX.W          R3, R0, #1, #1|192-243-64-3
90522|code|STRB            R7, [R2]|23-112
90524|code|UBFX.W          R0, R0, #2, #1|192-243-128-0
90528|code|STRB            R3, [R5]|43-112
90530|code|LDR             R3, [SP,#0x20+arg_8]|10-155
90532|code|STRB            R0, [R3]|24-112
90534|code|LDRB            R3, [R2]|19-120
90536|code|CBNZ            R3, loc_161BE|75-185
90538|code|LDRB            R3, [R5]|43-120
90540|code|CBZ             R3, loc_161D2|139-177
90542|code|LDR             R3, [SP,#0x20+var_1C]|1-155
90544|code|ADDS            R3, #4|4-51
90546|code|CMP             R4, R3|156-66
90548|code|BCS             loc_161F4|30-210
90550|code|MOVS            R5, #0|0-37
90552|code|MOV             R0, R5|40-70
90554|code|ADD             SP, SP, #0xC|3-176
90556|code|POP             {R4-R7,PC}|240-189
90558|code|ADDS            R1, #5|5-49
90560|code|CMP             R4, R1|140-66
90562|code|BCC             loc_161B6|248-211
90564|code|ADD             R0, SP, #0x20+var_1C|1-168
90566|code|BL              sub_16138|255-247-183-255
90570|code|LDRB            R3, [R5]|43-120
90572|code|STR             R0, [R6]|48-96
90574|code|CMP             R3, #0|0-43
90576|code|BNE             loc_161AE|237-209
90578|code|LDR             R3, [SP,#0x20+arg_8]|10-155
90580|code|LDRB            R5, [R3]|29-120
90582|code|CBZ             R5, loc_161EC|77-177
90584|code|LDR             R3, [SP,#0x20+var_1C]|1-155
90586|code|ADDS            R3, #4|4-51
90588|code|CMP             R4, R3|156-66
90590|code|BCC             loc_161B6|234-211
90592|code|ADD             R0, SP, #0x20+var_1C|1-168
90594|code|BL              sub_16138|255-247-169-255
90598|code|LDR             R3, [SP,#0x20+arg_C]|11-155
90600|code|STR             R0, [R3]|24-96
90602|code|B               loc_161B8|229-231
90604|code|MOVS            R5, #1|1-37
90606|code|MOV             R0, R5|40-70
90608|code|ADD             SP, SP, #0xC|3-176
90610|code|POP             {R4-R7,PC}|240-189
90612|code|ADD             R0, SP, #0x20+var_1C|1-168
90614|code|BL              sub_16138|255-247-159-255
90618|code|LDR             R3, [SP,#0x20+arg_4]|9-155
90620|code|STR             R0, [R3]|24-96
90622|code|B               loc_161D2|232-231
90624|code|PUSH            {R4-R7,LR}|240-181
90626|code|MOVW            R7, #0x82B0|72-242-176-39
90630|code|LDR             R4, [SP,#0x14+arg_4]|6-156
90632|code|MOVT.W          R7, #2|192-242-2-7
90636|code|LDR.W           R12, [SP,#0x14+arg_0]|221-248-20-192
90640|code|MOVS            R5, #4|4-37
90642|code|MOV.W           LR, #1|79-240-1-14
90646|code|CMP             R3, #0|0-43
90648|code|ITE EQ|12-191
90650|code|MOVEQ           R6, #3|3-38
90652|code|MOVNE           R6, #7|7-38
90654|code|STRH.W          LR, [R4]|164-248-0-224
90658|code|STRB            R6, [R7]|62-112
90660|code|LDRH            R6, [R4]|38-136
90662|code|SUBS            R5, #1|1-61
90664|code|ADD.W           LR, R6, #1|6-241-1-14
90668|code|STRH.W          LR, [R4]|164-248-0-224
90672|code|STRB            R1, [R7,R6]|185-85
90674|code|MOV.W           R1, R1,ASR#8|79-234-33-33
90678|code|BNE             loc_16224|245-209
90680|code|CMP.W           R0, #0x100|176-245-128-127
90684|code|BEQ             loc_16248|4-208
90686|code|MOV             R0, #0x282B0|72-242-176-32-192-242-2-0
90694|code|POP             {R4-R7,PC}|240-189
90696|code|MOVS            R1, #4|4-33
90698|code|LDRH            R0, [R4]|32-136
90700|code|SUBS            R1, #1|1-57
90702|code|ADD.W           R5, R0, #1|0-241-1-5
90706|code|STRH            R5, [R4]|37-128
90708|code|STRB            R2, [R7,R0]|58-84
90710|code|MOV.W           R2, R2,ASR#8|79-234-34-34
90714|code|BNE             loc_1624A|246-209
90716|code|CMP             R3, #0|0-43
90718|code|BEQ             loc_1623E|238-208
90720|code|MOVS            R3, #4|4-35
90722|code|LDRH            R2, [R4]|34-136
90724|code|SUBS            R3, #1|1-59
90726|code|ADD.W           R1, R2, #1|2-241-1-1
90730|code|STRH            R1, [R4]|33-128
90732|code|STRB.W          R12, [R7,R2]|7-248-2-192
90736|code|MOV.W           R12, R12,ASR#8|79-234-44-44
90740|code|BNE             loc_16262|245-209
90742|code|MOV             R0, #0x282B0|72-242-176-32-192-242-2-0
90750|code|POP             {R4-R7,PC}|240-189
90752|code|PUSH            {R4-R7,LR}|240-181
90754|code|MOVW            R4, #0x5855|69-246-85-4
90758|code|SUB             SP, SP, #0xC|131-176
90760|code|CMP             R0, R4|160-66
90762|code|ADD.W           R5, R2, R1|2-235-1-5
90766|code|STR             R2, [SP,#0x20+var_1C]|1-146
90768|code|BEQ             loc_1636A|107-208
90770|code|BLS             loc_16366|104-217
90772|code|MOVW            R4, #0x7855|71-246-85-4
90776|code|CMP             R0, R4|160-66
90778|code|BEQ             loc_1634E|88-208
90780|code|MOVW            R4, #0x7875|71-246-117-4
90784|code|CMP             R0, R4|160-66
90786|code|BNE             loc_1635E|92-209
90788|code|LDR             R4, [SP,#0x20+arg_C]|11-156
90790|code|MOVS            R0, #0|0-32
90792|code|STRB            R0, [R4]|32-112
90794|code|LDR             R4, [SP,#0x20+arg_4]|9-156
90796|code|STRB            R0, [R4]|32-112
90798|code|CMP             R1, #0|0-41
90800|code|BEQ             loc_1635E|85-208
90802|code|ADDS            R6, R2, #1|86-28
90804|code|STR             R6, [SP,#0x20+var_1C]|1-150
90806|code|LDRB            R1, [R2]|17-120
90808|code|CMP             R1, #1|1-41
90810|code|BNE             loc_1635E|80-209
90812|code|ADD.W           LR, R2, #2|2-241-2-14
90816|code|CMP             R5, LR|117-69
90818|code|BCC             loc_1635E|76-211
90820|code|STR.W           LR, [SP,#0x20+var_1C]|205-248-4-224
90824|code|LDRB.W          R12, [R2,#1]|146-248-1-192
90828|code|ADD.W           R7, LR, R12|14-235-12-7
90832|code|CMP             R5, R7|189-66
90834|code|BCC             loc_1635E|68-211
90836|code|SUBS            R2, R7, #1|122-30
90838|code|STR             R0, [R3]|24-96
90840|code|CMP             LR, R2|150-69
90842|code|RSB.W           R0, R12, #4|204-241-4-0
90846|code|BHI             loc_16302|16-216
90848|code|CMP             R0, #0|0-40
90850|code|IT LE|216-191
90852|code|LDRBLE          R1, [R2]|17-120
90854|code|BLE             loc_162F0|3-221
90856|code|LDRB            R4, [R2]|20-120
90858|code|MOV             R1, R4|33-70
90860|code|CMP             R4, #0|0-44
90862|code|BNE             loc_1635E|54-209
90864|code|LDR             R4, [R3]|28-104
90866|code|SUBS            R2, #1|1-58
90868|code|CMP             R2, R6|178-66
90870|code|ADD.W           R0, R0, #0xFFFFFFFF|0-241-255-48
90874|code|ADD.W           R1, R1, R4,LSL#8|1-235-4-33
90878|code|STR             R1, [R3]|25-96
90880|code|BNE             loc_162E0|238-209
90882|code|ADDS            R2, R7, #1|122-28
90884|code|CMP             R5, R2|149-66
90886|code|BCC             loc_1635E|42-211
90888|code|STR             R2, [SP,#0x20+var_1C]|1-146
90890|code|LDRB.W          R1, [LR,R12]|30-248-12-16
90894|code|ADDS            R3, R2, R1|83-24
90896|code|CMP             R5, R3|157-66
90898|code|BCC             loc_1635E|36-211
90900|code|SUBS            R3, #1|1-59
90902|code|LDR             R4, [SP,#0x20+arg_0]|8-156
90904|code|CMP             R2, R3|154-66
90906|code|MOV.W           R0, #0|79-240-0-0
90910|code|RSB.W           R1, R1, #4|193-241-4-1
90914|code|STR             R0, [R4]|32-96
90916|code|BHI             loc_1634A|17-216
90918|code|CMP             R1, #0|0-41
90920|code|IT LE|216-191
90922|code|LDRBLE          R2, [R3]|26-120
90924|code|BLE             loc_16334|2-221
90926|code|LDRB            R0, [R3]|24-120
90928|code|MOV             R2, R0|2-70
90930|code|CBNZ            R0, loc_1635E|160-185
90932|code|LDR             R0, [SP,#0x20+arg_0]|8-152
90934|code|SUBS            R3, #1|1-59
90936|code|CMP             R3, R7|187-66
90938|code|ADD.W           R1, R1, #0xFFFFFFFF|1-241-255-49
90942|code|LDR             R0, [R0]|0-104
90944|code|ADD.W           R2, R2, R0,LSL#8|2-235-0-34
90948|code|LDR             R0, [SP,#0x20+arg_0]|8-152
90950|code|STR             R2, [R0]|2-96
90952|code|BNE             loc_16326|237-209
90954|code|MOVS            R1, #1|1-33
90956|code|B               loc_16360|8-224
90958|code|LDR             R4, [SP,#0x20+arg_C]|11-156
90960|code|MOVS            R1, #0|0-33
90962|code|ADDS            R0, R2, #4|16-29
90964|code|CMP             R5, R0|133-66
90966|code|STRB            R1, [R4]|33-112
90968|code|LDR             R4, [SP,#0x20+arg_4]|9-156
90970|code|STRB            R1, [R4]|33-112
90972|code|BCS             loc_163BE|47-210
90974|code|MOVS            R1, #0|0-33
90976|code|MOV             R0, R1|8-70
90978|code|ADD             SP, SP, #0xC|3-176
90980|code|POP             {R4-R7,PC}|240-189
90982|code|CMP             R0, #0xD|13-40
90984|code|BNE             loc_1635E|249-209
90986|code|LDR             R1, [SP,#0x20+arg_C]|11-153
90988|code|MOVS            R4, #1|1-36
90990|code|ADDS            R2, #0xC|12-50
90992|code|CMP             R5, R2|149-66
90994|code|STRB            R4, [R1]|12-112
90996|code|LDR             R1, [SP,#0x20+arg_4]|9-153
90998|code|STRB            R4, [R1]|12-112
91000|code|BCC             loc_1635E|241-211
91002|code|ADD             R0, SP, #0x20+var_1C|1-168
91004|code|MOV             R6, R3|30-70
91006|code|BL              sub_16138|255-247-219-254
91010|code|LDR             R3, [SP,#0x20+arg_10]|12-155
91012|code|STR             R0, [R3]|24-96
91014|code|ADD             R0, SP, #0x20+var_1C|1-168
91016|code|BL              sub_16138|255-247-214-254
91020|code|LDR             R2, [SP,#0x20+var_1C]|1-154
91022|code|MOV             R1, R4|33-70
91024|code|ADDS            R3, R2, #1|83-28
91026|code|STR             R3, [SP,#0x20+var_1C]|1-147
91028|code|LDR             R3, [SP,#0x20+arg_8]|10-155
91030|code|MOV             R4, R2|20-70
91032|code|ADDS            R7, R2, #3|215-28
91034|code|ADDS            R5, R2, #4|21-29
91036|code|STR             R0, [R3]|24-96
91038|code|LDRB.W          R0, [R4],#2|20-248-2-11
91042|code|STR             R4, [SP,#0x20+var_1C]|1-148
91044|code|LDRB            R3, [R2,#1]|83-120
91046|code|STR             R7, [SP,#0x20+var_1C]|1-151
91048|code|ADD.W           R0, R0, R3,LSL#8|0-235-3-32
91052|code|STR             R0, [R6]|48-96
91054|code|LDRB            R3, [R2,#2]|147-120
91056|code|STR             R5, [SP,#0x20+var_1C]|1-149
91058|code|LDRB            R2, [R2,#3]|210-120
91060|code|ADD.W           R3, R3, R2,LSL#8|3-235-2-35
91064|code|LDR             R2, [SP,#0x20+arg_0]|8-154
91066|code|STR             R3, [R2]|19-96
91068|code|B               loc_16360|208-231
91070|code|MOV             R5, R2|21-70
91072|code|ADDS            R1, R2, #1|81-28
91074|code|STR             R1, [SP,#0x20+var_1C]|1-145
91076|code|ADDS            R6, R2, #3|214-28
91078|code|LDRB.W          R4, [R5],#2|21-248-2-75
91082|code|MOVS            R1, #1|1-33
91084|code|STR             R5, [SP,#0x20+var_1C]|1-149
91086|code|LDRB            R5, [R2,#1]|85-120
91088|code|STR             R6, [SP,#0x20+var_1C]|1-150
91090|code|ADD.W           R4, R4, R5,LSL#8|4-235-5-36
91094|code|STR             R4, [R3]|28-96
91096|code|LDRB            R3, [R2,#2]|147-120
91098|code|STR             R0, [SP,#0x20+var_1C]|1-144
91100|code|MOV             R0, R1|8-70
91102|code|LDRB            R2, [R2,#3]|210-120
91104|code|ADD.W           R3, R3, R2,LSL#8|3-235-2-35
91108|code|LDR             R2, [SP,#0x20+arg_0]|8-154
91110|code|STR             R3, [R2]|19-96
91112|code|ADD             SP, SP, #0xC|3-176
91114|code|POP             {R4-R7,PC}|240-189
91116|code|PUSH            {R4-R7}|240-180
91118|code|MOV             R5, #0x282B0|72-242-176-37-192-242-2-5
91126|code|MOVS            R3, #1|1-35
91128|code|STRH            R3, [R2]|19-128
91130|code|MOVS            R4, #4|4-36
91132|code|STRB            R3, [R5,#(byte_282C0 - 0x282B0)]|43-116
91134|code|MOV             R6, R4|38-70
91136|code|LDRH            R3, [R2]|19-136
91138|code|ADDS            R7, R5, R3|239-24
91140|code|ADDS            R3, #1|1-51
91142|code|STRH            R3, [R2]|19-128
91144|code|STRB            R4, [R7,#0x10]|60-116
91146|code|LDRH            R3, [R2]|19-136
91148|code|SUBS            R6, #1|1-62
91150|code|MOVW            R4, #0x82B0|72-242-176-36
91154|code|ADD.W           R7, R5, R3|5-235-3-7
91158|code|MOVT.W          R4, #2|192-242-2-4
91162|code|ADD.W           R3, R3, #1|3-241-1-3
91166|code|STRH            R3, [R2]|19-128
91168|code|STRB            R0, [R7,#0x10]|56-116
91170|code|MOV.W           R0, R0,LSR#8|79-234-16-32
91174|code|BNE             loc_1640A|240-209
91176|code|LDRH            R3, [R2]|19-136
91178|code|MOVS            R6, #4|4-38
91180|code|MOV             R0, R6|48-70
91182|code|ADD             R4, R3|28-68
91184|code|ADDS            R3, #1|1-51
91186|code|STRH            R3, [R2]|19-128
91188|code|STRB            R6, [R4,#0x10]|38-116
91190|code|LDRH            R3, [R2]|19-136
91192|code|SUBS            R0, #1|1-56
91194|code|ADD.W           R4, R5, R3|5-235-3-4
91198|code|ADD.W           R3, R3, #1|3-241-1-3
91202|code|STRH            R3, [R2]|19-128
91204|code|STRB            R1, [R4,#0x10]|33-116
91206|code|MOV.W           R1, R1,LSR#8|79-234-17-33
91210|code|BNE             loc_16436|244-209
91212|code|LDR             R0, =byte_282C0|1-72
91214|code|POP             {R4-R7}|240-188
91216|code|BX              LR|112-71
91218|data|ALIGN 4|0-191
91220|data|DCD byte_282C0|192-130-2-0
91224|code|PUSH.W          {R3-R9,LR}|45-233-248-67
91228|code|MOV             R7, R0|7-70
91230|code|LDR             R6, =(off_27ED0 - 0x1646A)|12-78
91232|code|MOV             R8, R1|136-70
91234|code|LDR             R5, =(off_27ECC - 0x16470)|12-77
91236|code|MOV             R9, R2|145-70
91238|code|ADD             R6, PC; off_27ED0|126-68
91240|code|BLX             .init_proc|251-247-222-234
91244|code|ADD             R5, PC; off_27ECC|125-68
91246|code|SUBS            R6, R6, R5|118-27
91248|code|ASRS            R6, R6, #2|182-16
91250|code|BEQ             locret_1648A|10-208
91252|code|SUBS            R5, #4|4-61
91254|code|MOVS            R4, #0|0-36
91256|code|ADDS            R4, #1|1-52
91258|code|LDR.W           R3, [R5,#4]!|85-248-4-63
91262|code|MOV             R0, R7|56-70
91264|code|MOV             R1, R8|65-70
91266|code|MOV             R2, R9|74-70
91268|code|BLX             R3|152-71
91270|code|CMP             R4, R6|180-66
91272|code|BNE             loc_16478|246-209
91274|code|POP.W           {R3-R9,PC}|189-232-248-131
91278|data|ALIGN 0x10|0-191
91280|data|DCD off_27ED0 - 0x1646A|102-26-1-0
91284|data|DCD off_27ECC - 0x16470|92-26-1-0
91288|code|BX              LR|112-71
91290|data|ALIGN 4|0-191
91292|code|PUSH            {R3,LR}; _fini|8-64-45-233
91296|code|POP             {R3,PC}|8-128-189-232
91300|data|ALIGN 8|0-0-0-0
95356|data|ALIGN 0x10|0-0-0-0
163532|data|DCD sub_12298+1|153-34-1-0
163536|data|DCD sub_12280+1|129-34-1-0
163540|data|DCD 0|0-0-0-0
163544|data|Elf32_Dyn <1, <1>>; DT_NEEDED libfuse.so.2|1-0-0-0-1-0-0-0
163552|data|Elf32_Dyn <1, <0xBD>>; DT_NEEDED libzip.so.2|1-0-0-0-189-0-0-0
163560|data|Elf32_Dyn <1, <0x28A>>; DT_NEEDED libz.so.1|1-0-0-0-138-2-0-0
163568|data|Elf32_Dyn <1, <0x294>>; DT_NEEDED libstdc++.so.6|1-0-0-0-148-2-0-0
163576|data|Elf32_Dyn <1, <0x667>>; DT_NEEDED libm.so.6|1-0-0-0-103-6-0-0
163584|data|Elf32_Dyn <1, <0x671>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-113-6-0-0
163592|data|Elf32_Dyn <1, <0x6AD>>; DT_NEEDED libpthread.so.0|1-0-0-0-173-6-0-0
163600|data|Elf32_Dyn <1, <0x6CE>>; DT_NEEDED libc.so.6|1-0-0-0-206-6-0-0
163608|data|Elf32_Dyn <1, <0x7BF>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-191-7-0-0
163616|data|Elf32_Dyn <0xC, <0x11A28>>; DT_INIT|12-0-0-0-40-26-1-0
163624|data|Elf32_Dyn <0xD, <0x1649C>>; DT_FINI|13-0-0-0-156-100-1-0
163632|data|Elf32_Dyn <0x19, <0x27ECC>>; DT_INIT_ARRAY|25-0-0-0-204-126-2-0
163640|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
163648|data|Elf32_Dyn <0x1A, <0x27ED0>>; DT_FINI_ARRAY|26-0-0-0-208-126-2-0
163656|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
163664|data|Elf32_Dyn <0x6FFFFEF5, <0x101B4>>; DT_GNU_HASH|245-254-255-111-180-1-1-0
163672|data|Elf32_Dyn <5, <0x10C90>>; DT_STRTAB|5-0-0-0-144-12-1-0
163680|data|Elf32_Dyn <6, <0x10570>>; DT_SYMTAB|6-0-0-0-112-5-1-0
163688|data|Elf32_Dyn <0xA, <0x87B>>; DT_STRSZ|10-0-0-0-123-8-0-0
163696|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
163704|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
163712|data|Elf32_Dyn <3, <0x28000>>; DT_PLTGOT|3-0-0-0-0-128-2-0
163720|data|Elf32_Dyn <2, <0x2D8>>; DT_PLTRELSZ|2-0-0-0-216-2-0-0
163728|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
163736|data|Elf32_Dyn <0x17, <0x11750>>; DT_JMPREL|23-0-0-0-80-23-1-0
163744|data|Elf32_Dyn <0x11, <0x11700>>; DT_REL|17-0-0-0-0-23-1-0
163752|data|Elf32_Dyn <0x12, <0x50>>; DT_RELSZ|18-0-0-0-80-0-0-0
163760|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
163768|data|Elf32_Dyn <0x6FFFFFFE, <0x115F0>>; DT_VERNEED|254-255-255-111-240-21-1-0
163776|data|Elf32_Dyn <0x6FFFFFFF, <6>>; DT_VERNEEDNUM|255-255-255-111-6-0-0-0
163784|data|Elf32_Dyn <0x6FFFFFF0, <0x1150C>>; DT_VERSYM|240-255-255-111-12-21-1-0
163792|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
163800|data|ALIGN 0x40|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
163840|data|DCD stru_27ED8|216-126-2-0
163844|data|DCD 0|0-0-0-0
163848|data|DCD 0|0-0-0-0
163852|data|DCD __imp__ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|164-131-2-0
163856|data|DCD __imp_zip_stat_init|56-132-2-0
163860|data|DCD __imp_abort|64-131-2-0
163864|data|DCD __imp__ZNSt8__detail15_List_node_base9_M_unhookEv; std::__detail::_List_node_base::_M_unhook(void)|252-130-2-0
163868|data|DCD __imp_zip_get_name|36-131-2-0
163872|data|DCD __imp___libc_start_main|16-131-2-0
163876|data|DCD __imp_zip_strerror|168-131-2-0
163880|data|DCD __imp_zip_file_extra_field_get|128-131-2-0
163884|data|DCD __imp_zip_error_to_str|184-131-2-0
163888|data|DCD __imp___gmon_start__|68-132-2-0
163892|data|DCD __imp__ZdlPv; operator delete(void *)|24-132-2-0
163896|data|DCD __imp_getenv|116-131-2-0
163900|data|DCD __imp___cxa_rethrow|84-131-2-0
163904|data|DCD __imp_strchr|80-131-2-0
163908|data|DCD __imp_zip_file_rename|232-131-2-0
163912|data|DCD __imp__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|96-131-2-0
163916|data|DCD __imp_memset|224-131-2-0
163920|data|DCD __imp_zip_get_num_entries|52-131-2-0
163924|data|DCD __imp___cxa_end_cleanup|212-131-2-0
163928|data|DCD __imp__ZNSsC1ERKSs; std::string::string(std::string const&)|16-132-2-0
163932|data|DCD __imp__ZNSt13runtime_errorC1ERKSs; std::runtime_error::runtime_error(std::string const&)|220-130-2-0
163936|data|DCD __imp_statvfs64|216-131-2-0
163940|data|DCD __imp_perror|44-131-2-0
163944|data|DCD __imp___assert_fail|228-131-2-0
163948|data|DCD __imp__ZNSsC1ERKSsjj; std::string::string(std::string const&,uint,uint)|144-131-2-0
163952|data|DCD __imp_zip_close|12-131-2-0
163956|data|DCD __imp_free|0-132-2-0
163960|data|DCD __imp_openlog|148-131-2-0
163964|data|DCD __imp__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|152-131-2-0
163968|data|DCD __imp_fuse_opt_parse|56-131-2-0
163972|data|DCD __imp__ZNSt9bad_allocD1Ev; std::bad_alloc::~bad_alloc()|44-132-2-0
163976|data|DCD __imp_fuse_get_context|228-130-2-0
163980|data|DCD __imp_strlen|60-131-2-0
163984|data|DCD __imp_zip_stat_index|192-131-2-0
163988|data|DCD __imp__ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|40-131-2-0
163992|data|DCD __imp_memcpy|28-132-2-0
163996|data|DCD __imp_zip_file_add|236-130-2-0
164000|data|DCD __imp_zip_file_strerror|100-131-2-0
164004|data|DCD __imp__ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|112-131-2-0
164008|data|DCD __imp_fuse_setup|200-131-2-0
164012|data|DCD __imp_strcpy|0-131-2-0
164016|data|DCD __imp_zip_source_function|4-132-2-0
164020|data|DCD __imp_zip_file_set_external_attributes|180-131-2-0
164024|data|DCD __imp_zip_fopen_index|136-131-2-0
164028|data|DCD __imp_zip_fclose|4-131-2-0
164032|data|DCD __imp__ZNSt8__detail15_List_node_base7_M_hookEPS0_; std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)|32-132-2-0
164036|data|DCD __imp__Znwj; operator new(uint)|244-131-2-0
164040|data|DCD __imp_zip_fread|204-131-2-0
164044|data|DCD __imp___syslog_chk|60-132-2-0
164048|data|DCD __imp_strstr|232-130-2-0
164052|data|DCD __imp_fwrite|104-131-2-0
164056|data|DCD __imp_fuse_opt_free_args|240-130-2-0
164060|data|DCD __imp_time|68-131-2-0
164064|data|DCD __imp_fuse_teardown|244-130-2-0
164068|data|DCD __imp__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|248-130-2-0
164072|data|DCD __imp_malloc|40-132-2-0
164076|data|DCD __imp___stack_chk_fail|120-131-2-0
164080|data|DCD __imp_chdir|208-131-2-0
164084|data|DCD __imp__ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_; std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|160-131-2-0
164088|data|DCD __imp___fprintf_chk|72-131-2-0
164092|data|DCD __imp___cxa_allocate_exception|172-131-2-0
164096|data|DCD __imp___cxa_free_exception|108-131-2-0
164100|data|DCD __imp_getcwd|8-132-2-0
164104|data|DCD __imp_zip_open|240-131-2-0
164108|data|DCD __imp__ZNSs6assignEPKcj; std::string::assign(char const*,uint)|64-132-2-0
164112|data|DCD __imp_memmove|176-131-2-0
164116|data|DCD __imp__ZNSt13runtime_errorD1Ev; std::runtime_error::~runtime_error()|156-131-2-0
164120|data|DCD __imp___cxa_throw|88-131-2-0
164124|data|DCD __imp__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base *)|20-131-2-0
164128|data|DCD __imp___cxa_end_catch|24-131-2-0
164132|data|DCD __imp__ZSt17__throw_bad_allocv; std::__throw_bad_alloc(void)|140-131-2-0
164136|data|DCD __imp_zip_file_get_external_attributes|248-131-2-0
164140|data|DCD __imp_zip_file_extra_field_set|28-131-2-0
164144|data|DCD __imp_zip_dir_add|48-132-2-0
164148|data|DCD __imp_zip_file_replace|132-131-2-0
164152|data|DCD __imp_fuse_loop|52-132-2-0
164156|data|DCD __imp___cxa_begin_catch|252-131-2-0
164160|data|DCD __imp___pthread_key_create|188-131-2-0
164164|data|DCD __imp__ZNSs6appendEPKcj; std::string::append(char const*,uint)|36-132-2-0
164168|data|DCD __imp_zip_delete|12-132-2-0
164172|data|DCD __imp_strncmp|8-131-2-0
164176|data|DCD __imp_zip_source_free|32-131-2-0
164180|data|DCD __imp___gxx_personality_v0|76-131-2-0
164184|data|DCD __imp_zip_file_extra_fields_count|196-131-2-0
164188|data|DCD __imp_zip_file_extra_field_delete|92-131-2-0
164192|data|DCD __imp__ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|124-131-2-0
164196|data|DCD __imp_strcmp|224-130-2-0
164200|data|DCD __imp___errno_location|48-131-2-0
164204|data|DCD __imp__ZNSt9exceptionD1Ev; std::exception::~exception()|236-131-2-0
164208|data|DCD __imp___memset_chk|220-131-2-0
164212|data|DCD __imp__ZNSs7reserveEj; std::string::reserve(uint)|20-132-2-0
164216|data|DCD __imp___gmon_start__|68-132-2-0
164220|data|DCD _ZTISt9exception; `typeinfo for'std::exception|212-130-2-0
164224|data|DCD _ZTISt9bad_alloc; `typeinfo for'std::bad_alloc|236-129-2-0
