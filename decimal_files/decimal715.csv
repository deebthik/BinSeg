address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|101-11-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x3130; SHT file offset|48-49-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x24C4; File offset|196-36-0-0
60|data|DCD unk_24C4; Virtual address|196-36-0-0
64|data|DCD 0x24C4; Physical address|196-36-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x24D0; Size in file image|208-36-0-0
168|data|DCD 0x24D0; Size in memory image|208-36-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E50; File offset|80-46-0-0
188|data|DCD off_12E50; Virtual address|80-46-1-0
192|data|DCD 0x12E50; Physical address|80-46-1-0
196|data|DCD 0x1B8; Size in file image|184-1-0-0
200|data|DCD 0x1C0; Size in memory image|192-1-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E5C; File offset|92-46-0-0
220|data|DCD stru_12E5C; Virtual address|92-46-1-0
224|data|DCD 0x12E5C; Physical address|92-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E50; File offset|80-46-0-0
316|data|DCD off_12E50; Virtual address|80-46-1-0
320|data|DCD 0x12E50; Physical address|80-46-1-0
324|data|DCD 0x1B0; Size in file image|176-1-0-0
328|data|DCD 0x1B0; Size in memory image|176-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x50, 0xCA, 0x2F, 0xAC, 0x41, 0x2B, 0x4F, 0x31, 0x42; Desc|80-202-47-172-65-43-79-49-66-7-14-214-79-192-65-191-135-203-78-156
436|data|DCD 3|3-0-0-0
440|data|DCD 0x22|34-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x22, 0x26, 0x2B|34-0-0-0-38-0-0-0-43-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_504 - byte_504, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_504 - byte_504, dword_12E58, 0, 3, 0, 0x14>|0-0-0-0-88-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aGetxattr - byte_504, dword_0, 0, 0x12, 0, 0>; "getxattr"|103-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aStrcmp - byte_504, dword_0, 0, 0x12, 0, 0>; "strcmp"|76-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aCxaFinalize - byte_504, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|61-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
628|data|Elf32_Sym <aItmDeregistert - byte_504, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
644|data|Elf32_Sym <aFflush - byte_504, dword_0, 0, 0x12, 0, 0>; "fflush"|137-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aFree - byte_504, dword_0, 0, 0x12, 0, 0>; "free"|101-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aStackChkGuard - byte_504, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|126-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aMemcpy - byte_504, dword_0, 0, 0x12, 0, 0>; "memcpy"|3-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aStackChkFail - byte_504, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|184-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aPerror - byte_504, dword_0, 0, 0x12, 0, 0>; "perror"|172-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aStderr - byte_504, dword_0, 0, 0x11, 0, 0>; "stderr"|27-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
756|data|Elf32_Sym <aFwrite - byte_504, dword_0, 0, 0x12, 0, 0>; "fwrite"|34-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aStrcpy - byte_504, dword_0, 0, 0x12, 0, 0>; "strcpy"|144-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aStrcpyChk - byte_504, dword_0, 0, 0x12, 0, 0>; "__strcpy_chk"|48-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aPuts - byte_504, dword_0, 0, 0x12, 0, 0>; "puts"|179-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aMalloc - byte_504, dword_0, 0, 0x12, 0, 0>; "malloc"|10-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aLibcStartMain - byte_504, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|83-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aGmonStart - byte_504, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|42-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
868|data|Elf32_Sym <aStrlen - byte_504, dword_0, 0, 0x12, 0, 0>; "strlen"|207-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aStrchr - byte_504, dword_0, 0, 0x12, 0, 0>; "strchr"|41-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aErrnoLocation - byte_504, dword_0, 0, 0x12, 0, 0>; "__errno_location"|221-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aMemset - byte_504, dword_0, 0, 0x12, 0, 0>; "memset"|214-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aXpgBasename - byte_504, dword_0, 0, 0x12, 0, 0>; "__xpg_basename"|122-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aPrintfChk - byte_504, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|151-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aFprintfChk - byte_504, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|238-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aStdout - byte_504, dword_0, 0, 0x11, 0, 0>; "stdout"|252-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
996|data|Elf32_Sym <aJvRegisterclas - byte_504, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|57-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1012|data|Elf32_Sym <aItmRegistertmc - byte_504, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|77-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1028|data|Elf32_Sym <aXstat64 - byte_504, dword_0, 0, 0x12, 0, 0>; "__xstat64"|17-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aStrncmp - byte_504, dword_0, 0, 0x12, 0, 0>; "strncmp"|164-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aAbort - byte_504, dword_0, 0, 0x12, 0, 0>; "abort"|201-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aBssEnd+1 - byte_504, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|191-1-0-0-16-48-1-0-0-0-0-0-16-0-24-0
1092|data|Elf32_Sym <aEdata - byte_504, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|157-1-0-0-8-48-1-0-0-0-0-0-16-0-23-0
1108|data|Elf32_Sym <aDataStart - byte_504, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|144-1-0-0-0-48-1-0-0-0-0-0-16-0-23-0
1124|data|Elf32_Sym <aEnd_0 - byte_504, _end, 0, 0x10, 0, 0x18>; "_end"|210-1-0-0-16-48-1-0-0-0-0-0-16-0-24-0
1140|data|Elf32_Sym <aBssEnd - byte_504, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|190-1-0-0-16-48-1-0-0-0-0-0-16-0-24-0
1156|data|Elf32_Sym <aLibcCsuInit - byte_504, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|231-1-0-0-157-27-0-0-64-0-0-0-18-0-13-0
1172|data|Elf32_Sym <aBssStart - byte_504, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|164-1-0-0-8-48-1-0-0-0-0-0-16-0-24-0
1188|data|Elf32_Sym <aLibcStartMain+0xD - byte_504, main+1, 0x10C, 0x12, 0, 0xD>; "main"|96-1-0-0-89-10-0-0-12-1-0-0-18-0-13-0
1204|data|Elf32_Sym <aLibcCsuInit+0xA - byte_504, .init_proc, 0, 0x12, 0, 0xB>; "_init"|241-1-0-0-4-9-0-0-0-0-0-0-18-0-11-0
1220|data|Elf32_Sym <aLibcCsuFini - byte_504, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|215-1-0-0-221-27-0-0-2-0-0-0-18-0-13-0
1236|data|Elf32_Sym <aBssStart_0 - byte_504, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|176-1-0-0-8-48-1-0-0-0-0-0-16-0-24-0
1252|data|Elf32_Sym <aLibcCsuFini+0xA - byte_504, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|225-1-0-0-224-27-0-0-0-0-0-0-18-0-14-0
1268|data|Elf32_Sym <aEnd - byte_504, _end, 0, 0x10, 0, 0x18>; "__end__"|202-1-0-0-16-48-1-0-0-0-0-0-16-0-24-0
1284|data|DCB 0|0
1285|data|DCB "libattr.so.1",0|108-105-98-97-116-116-114-46-115-111-46-49-0
1298|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1326|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1341|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1361|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1387|data|DCB "getxattr",0|103-101-116-120-97-116-116-114-0
1396|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1406|data|DCB "__xpg_basename",0|95-95-120-112-103-95-98-97-115-101-110-97-109-101-0
1421|data|DCB "fflush",0|102-102-108-117-115-104-0
1428|data|DCB "strcpy",0|115-116-114-99-112-121-0
1435|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1448|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
1456|data|DCB "perror",0|112-101-114-114-111-114-0
1463|data|DCB "puts",0|112-117-116-115-0
1468|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1485|data|DCB "abort",0|97-98-111-114-116-0
1491|data|DCB "strlen",0|115-116-114-108-101-110-0
1498|data|DCB "memset",0|109-101-109-115-101-116-0
1505|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1522|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1536|data|DCB "stdout",0|115-116-100-111-117-116-0
1543|data|DCB "memcpy",0|109-101-109-99-112-121-0
1550|data|DCB "malloc",0|109-97-108-108-111-99-0
1557|data|DCB "__xstat64",0|95-95-120-115-116-97-116-54-52-0
1567|data|DCB "stderr",0|115-116-100-101-114-114-0
1574|data|DCB "fwrite",0|102-119-114-105-116-101-0
1581|data|DCB "strchr",0|115-116-114-99-104-114-0
1588|data|DCB "__strcpy_chk",0|95-95-115-116-114-99-112-121-95-99-104-107-0
1601|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1616|data|DCB "strcmp",0|115-116-114-99-109-112-0
1623|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1641|data|DCB "free",0|102-114-101-101-0
1646|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1666|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1684|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1697|data|DCB "_edata",0|95-101-100-97-116-97-0
1704|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1716|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1730|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1742|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1750|data|DCB "_end",0|95-101-110-100-0
1755|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1771|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1787|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1797|data|DCB "ATTR_1.0",0|65-84-84-82-95-49-46-48-0
1806|data|DCW 0|0-0
1808|data|DCW 0|0-0
1810|data|DCW 0|0-0
1812|data|DCW 2; getxattr@@ATTR_1.0|2-0
1814|data|DCW 3; strcmp@@GLIBC_2.4|3-0
1816|data|DCW 3; __cxa_finalize@@GLIBC_2.4|3-0
1818|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1820|data|DCW 3; fflush@@GLIBC_2.4|3-0
1822|data|DCW 3; free@@GLIBC_2.4|3-0
1824|data|DCW 4; __stack_chk_guard@@GLIBC_2.4|4-0
1826|data|DCW 3; memcpy@@GLIBC_2.4|3-0
1828|data|DCW 3; __stack_chk_fail@@GLIBC_2.4|3-0
1830|data|DCW 3; perror@@GLIBC_2.4|3-0
1832|data|DCW 3; stderr@@GLIBC_2.4|3-0
1834|data|DCW 3; fwrite@@GLIBC_2.4|3-0
1836|data|DCW 3; strcpy@@GLIBC_2.4|3-0
1838|data|DCW 3; __strcpy_chk@@GLIBC_2.4|3-0
1840|data|DCW 3; puts@@GLIBC_2.4|3-0
1842|data|DCW 3; malloc@@GLIBC_2.4|3-0
1844|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
1846|data|DCW 0; local  symbol: __gmon_start__|0-0
1848|data|DCW 3; strlen@@GLIBC_2.4|3-0
1850|data|DCW 3; strchr@@GLIBC_2.4|3-0
1852|data|DCW 3; __errno_location@@GLIBC_2.4|3-0
1854|data|DCW 3; memset@@GLIBC_2.4|3-0
1856|data|DCW 3; __xpg_basename@@GLIBC_2.4|3-0
1858|data|DCW 3; __printf_chk@@GLIBC_2.4|3-0
1860|data|DCW 3; __fprintf_chk@@GLIBC_2.4|3-0
1862|data|DCW 3; stdout@@GLIBC_2.4|3-0
1864|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1866|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1868|data|DCW 3; __xstat64@@GLIBC_2.4|3-0
1870|data|DCW 3; strncmp@@GLIBC_2.4|3-0
1872|data|DCW 3; abort@@GLIBC_2.4|3-0
1874|data|DCW 1; global symbol: _bss_end__|1-0
1876|data|DCW 1; global symbol: _edata|1-0
1878|data|DCW 1; global symbol: __data_start|1-0
1880|data|DCW 1; global symbol: _end|1-0
1882|data|DCW 1; global symbol: __bss_end__|1-0
1884|data|DCW 1; global symbol: __libc_csu_init|1-0
1886|data|DCW 1; global symbol: __bss_start|1-0
1888|data|DCW 1; global symbol: main|1-0
1890|data|DCW 1; global symbol: _init|1-0
1892|data|DCW 1; global symbol: __libc_csu_fini|1-0
1894|data|DCW 1; global symbol: __bss_start__|1-0
1896|data|DCW 1; global symbol: _fini|1-0
1898|data|DCW 1; global symbol: __end__|1-0
1900|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_504, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-106-1-0-0-16-0-0-0-32-0-0-0
1916|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_504, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-247-1-0-0-0-0-0-0
1932|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_504, 0x10, 0x20>; "libc.so.6"|1-0-1-0-112-0-0-0-16-0-0-0-32-0-0-0
1948|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_504, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-247-1-0-0-0-0-0-0
1964|data|Elf32_Verneed <1, 1, aLibattrSo1 - byte_504, 0x10, 0>; "libattr.so.1"|1-0-1-0-1-0-0-0-16-0-0-0-0-0-0-0
1980|data|Elf32_Vernaux <0x9982870, 0, 2, aAttr10 - byte_504, 0>; "ATTR_1.0"|112-40-152-9-0-0-2-0-1-2-0-0-0-0-0-0
1996|data|Elf32_Rel <0x12E50, 0x17>; R_ARM_RELATIVE|80-46-1-0-23-0-0-0
2004|data|Elf32_Rel <0x12E54, 0x17>; R_ARM_RELATIVE|84-46-1-0-23-0-0-0
2012|data|Elf32_Rel <0x12FD4, 0x17>; R_ARM_RELATIVE|212-47-1-0-23-0-0-0
2020|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2028|data|Elf32_Rel <0x12FF4, 0x17>; R_ARM_RELATIVE|244-47-1-0-23-0-0-0
2036|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2044|data|Elf32_Rel <0x12FD8, 0x515>; R_ARM_GLOB_DAT __cxa_finalize|216-47-1-0-21-5-0-0
2052|data|Elf32_Rel <0x12FDC, 0x615>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|220-47-1-0-21-6-0-0
2060|data|Elf32_Rel <0x12FE0, 0x915>; R_ARM_GLOB_DAT __stack_chk_guard|224-47-1-0-21-9-0-0
2068|data|Elf32_Rel <0x12FE4, 0xD15>; R_ARM_GLOB_DAT stderr|228-47-1-0-21-13-0-0
2076|data|Elf32_Rel <0x12FE8, 0x1415>; R_ARM_GLOB_DAT __gmon_start__|232-47-1-0-21-20-0-0
2084|data|Elf32_Rel <0x12FF0, 0x1C15>; R_ARM_GLOB_DAT stdout|240-47-1-0-21-28-0-0
2092|data|Elf32_Rel <0x12FF8, 0x1D15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|248-47-1-0-21-29-0-0
2100|data|Elf32_Rel <0x12FFC, 0x1E15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|252-47-1-0-21-30-0-0
2108|data|Elf32_Rel <0x12F70, 0x316>; R_ARM_JUMP_SLOT getxattr|112-47-1-0-22-3-0-0
2116|data|Elf32_Rel <0x12F74, 0x416>; R_ARM_JUMP_SLOT strcmp|116-47-1-0-22-4-0-0
2124|data|Elf32_Rel <0x12F78, 0x516>; R_ARM_JUMP_SLOT __cxa_finalize|120-47-1-0-22-5-0-0
2132|data|Elf32_Rel <0x12F7C, 0x716>; R_ARM_JUMP_SLOT fflush|124-47-1-0-22-7-0-0
2140|data|Elf32_Rel <0x12F80, 0x816>; R_ARM_JUMP_SLOT free|128-47-1-0-22-8-0-0
2148|data|Elf32_Rel <0x12F84, 0xA16>; R_ARM_JUMP_SLOT memcpy|132-47-1-0-22-10-0-0
2156|data|Elf32_Rel <0x12F88, 0xB16>; R_ARM_JUMP_SLOT __stack_chk_fail|136-47-1-0-22-11-0-0
2164|data|Elf32_Rel <0x12F8C, 0xC16>; R_ARM_JUMP_SLOT perror|140-47-1-0-22-12-0-0
2172|data|Elf32_Rel <0x12F90, 0xE16>; R_ARM_JUMP_SLOT fwrite|144-47-1-0-22-14-0-0
2180|data|Elf32_Rel <0x12F94, 0xF16>; R_ARM_JUMP_SLOT strcpy|148-47-1-0-22-15-0-0
2188|data|Elf32_Rel <0x12F98, 0x1016>; R_ARM_JUMP_SLOT __strcpy_chk|152-47-1-0-22-16-0-0
2196|data|Elf32_Rel <0x12F9C, 0x1116>; R_ARM_JUMP_SLOT puts|156-47-1-0-22-17-0-0
2204|data|Elf32_Rel <0x12FA0, 0x1216>; R_ARM_JUMP_SLOT malloc|160-47-1-0-22-18-0-0
2212|data|Elf32_Rel <0x12FA4, 0x1316>; R_ARM_JUMP_SLOT __libc_start_main|164-47-1-0-22-19-0-0
2220|data|Elf32_Rel <0x12FA8, 0x1416>; R_ARM_JUMP_SLOT __gmon_start__|168-47-1-0-22-20-0-0
2228|data|Elf32_Rel <0x12FAC, 0x1516>; R_ARM_JUMP_SLOT strlen|172-47-1-0-22-21-0-0
2236|data|Elf32_Rel <0x12FB0, 0x1616>; R_ARM_JUMP_SLOT strchr|176-47-1-0-22-22-0-0
2244|data|Elf32_Rel <0x12FB4, 0x1716>; R_ARM_JUMP_SLOT __errno_location|180-47-1-0-22-23-0-0
2252|data|Elf32_Rel <0x12FB8, 0x1816>; R_ARM_JUMP_SLOT memset|184-47-1-0-22-24-0-0
2260|data|Elf32_Rel <0x12FBC, 0x1916>; R_ARM_JUMP_SLOT __xpg_basename|188-47-1-0-22-25-0-0
2268|data|Elf32_Rel <0x12FC0, 0x1A16>; R_ARM_JUMP_SLOT __printf_chk|192-47-1-0-22-26-0-0
2276|data|Elf32_Rel <0x12FC4, 0x1B16>; R_ARM_JUMP_SLOT __fprintf_chk|196-47-1-0-22-27-0-0
2284|data|Elf32_Rel <0x12FC8, 0x1F16>; R_ARM_JUMP_SLOT __xstat64|200-47-1-0-22-31-0-0
2292|data|Elf32_Rel <0x12FCC, 0x2016>; R_ARM_JUMP_SLOT strncmp|204-47-1-0-22-32-0-0
2300|data|Elf32_Rel <0x12FD0, 0x2116>; R_ARM_JUMP_SLOT abort|208-47-1-0-22-33-0-0
2308|code|PUSH            {R3,LR}; _init|8-64-45-233
2312|code|BL              sub_BAC|167-0-0-235
2316|code|POP             {R3,PC}|8-128-189-232
2320|code|PUSH            {LR}|4-224-45-229
2324|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x920)|4-224-159-229
2328|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2332|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2336|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x920|68-38-1-0
2340|code|ADR             R12, 0x92C|0-198-143-226
2344|code|ADD             R12, R12, #0x12000|18-202-140-226
2348|code|LDR             PC, [R12,#(getxattr_ptr - 0x1292C)]!; __imp_getxattr|68-246-188-229
2352|code|ADR             R12, 0x938|0-198-143-226
2356|code|ADD             R12, R12, #0x12000|18-202-140-226
2360|code|LDR             PC, [R12,#(strcmp_ptr - 0x12938)]!; __imp_strcmp|60-246-188-229
2364|code|ADR             R12, 0x944|0-198-143-226
2368|code|ADD             R12, R12, #0x12000|18-202-140-226
2372|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12944)]!; __imp___cxa_finalize|52-246-188-229
2376|code|ADR             R12, 0x950|0-198-143-226
2380|code|ADD             R12, R12, #0x12000|18-202-140-226
2384|code|LDR             PC, [R12,#(fflush_ptr - 0x12950)]!; __imp_fflush|44-246-188-229
2388|code|BX              PC|120-71
2390|data|ALIGN 4|192-70
2392|code|ADR             R12, 0x960|0-198-143-226
2396|code|ADD             R12, R12, #0x12000|18-202-140-226
2400|code|LDR             PC, [R12,#(free_ptr - 0x12960)]!; __imp_free|32-246-188-229
2404|code|ADR             R12, 0x96C|0-198-143-226
2408|code|ADD             R12, R12, #0x12000|18-202-140-226
2412|code|LDR             PC, [R12,#(memcpy_ptr - 0x1296C)]!; __imp_memcpy|24-246-188-229
2416|code|ADR             R12, 0x978|0-198-143-226
2420|code|ADD             R12, R12, #0x12000|18-202-140-226
2424|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x12978)]!; __imp___stack_chk_fail|16-246-188-229
2428|code|ADR             R12, 0x984|0-198-143-226
2432|code|ADD             R12, R12, #0x12000|18-202-140-226
2436|code|LDR             PC, [R12,#(perror_ptr - 0x12984)]!; __imp_perror|8-246-188-229
2440|code|ADR             R12, 0x990|0-198-143-226
2444|code|ADD             R12, R12, #0x12000|18-202-140-226
2448|code|LDR             PC, [R12,#(fwrite_ptr - 0x12990)]!; __imp_fwrite|0-246-188-229
2452|code|ADR             R12, 0x99C|0-198-143-226
2456|code|ADD             R12, R12, #0x12000|18-202-140-226
2460|code|LDR             PC, [R12,#(strcpy_ptr - 0x1299C)]!; __imp_strcpy|248-245-188-229
2464|code|ADR             R12, 0x9A8|0-198-143-226
2468|code|ADD             R12, R12, #0x12000|18-202-140-226
2472|code|LDR             PC, [R12,#(__strcpy_chk_ptr - 0x129A8)]!; __imp___strcpy_chk|240-245-188-229
2476|code|ADR             R12, 0x9B4|0-198-143-226
2480|code|ADD             R12, R12, #0x12000|18-202-140-226
2484|code|LDR             PC, [R12,#(puts_ptr - 0x129B4)]!; __imp_puts|232-245-188-229
2488|code|ADR             R12, 0x9C0|0-198-143-226
2492|code|ADD             R12, R12, #0x12000|18-202-140-226
2496|code|LDR             PC, [R12,#(malloc_ptr - 0x129C0)]!; __imp_malloc|224-245-188-229
2500|code|ADR             R12, 0x9CC|0-198-143-226
2504|code|ADD             R12, R12, #0x12000|18-202-140-226
2508|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x129CC)]!; __imp___libc_start_main|216-245-188-229
2512|code|ADR             R12, 0x9D8|0-198-143-226
2516|code|ADD             R12, R12, #0x12000|18-202-140-226
2520|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x129D8)]!; __imp___gmon_start__|208-245-188-229
2524|code|ADR             R12, 0x9E4|0-198-143-226
2528|code|ADD             R12, R12, #0x12000|18-202-140-226
2532|code|LDR             PC, [R12,#(strlen_ptr - 0x129E4)]!; __imp_strlen|200-245-188-229
2536|code|ADR             R12, 0x9F0|0-198-143-226
2540|code|ADD             R12, R12, #0x12000|18-202-140-226
2544|code|LDR             PC, [R12,#(strchr_ptr - 0x129F0)]!; __imp_strchr|192-245-188-229
2548|code|ADR             R12, 0x9FC|0-198-143-226
2552|code|ADD             R12, R12, #0x12000|18-202-140-226
2556|code|LDR             PC, [R12,#(__errno_location_ptr - 0x129FC)]!; __imp___errno_location|184-245-188-229
2560|code|ADR             R12, 0xA08|0-198-143-226
2564|code|ADD             R12, R12, #0x12000|18-202-140-226
2568|code|LDR             PC, [R12,#(memset_ptr - 0x12A08)]!; __imp_memset|176-245-188-229
2572|code|ADR             R12, 0xA14|0-198-143-226
2576|code|ADD             R12, R12, #0x12000|18-202-140-226
2580|code|LDR             PC, [R12,#(__xpg_basename_ptr - 0x12A14)]!; __imp___xpg_basename|168-245-188-229
2584|code|ADR             R12, 0xA20|0-198-143-226
2588|code|ADD             R12, R12, #0x12000|18-202-140-226
2592|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x12A20)]!; __imp___printf_chk|160-245-188-229
2596|code|BX              PC|120-71
2598|data|ALIGN 4|192-70
2600|code|ADR             R12, 0xA30|0-198-143-226
2604|code|ADD             R12, R12, #0x12000|18-202-140-226
2608|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x12A30)]!; __imp___fprintf_chk|148-245-188-229
2612|code|ADR             R12, 0xA3C|0-198-143-226
2616|code|ADD             R12, R12, #0x12000|18-202-140-226
2620|code|LDR             PC, [R12,#(__xstat64_ptr - 0x12A3C)]!; __imp___xstat64|140-245-188-229
2624|code|ADR             R12, 0xA48|0-198-143-226
2628|code|ADD             R12, R12, #0x12000|18-202-140-226
2632|code|LDR             PC, [R12,#(strncmp_ptr - 0x12A48)]!; __imp_strncmp|132-245-188-229
2636|code|ADR             R12, 0xA54|0-198-143-226
2640|code|ADD             R12, R12, #0x12000|18-202-140-226
2644|code|LDR             PC, [R12,#(abort_ptr - 0x12A54)]!; __imp_abort|124-245-188-229
2648|code|PUSH.W          {R4-R8,LR}|45-233-240-65
2652|code|MOV             R5, R0|5-70
2654|code|LDR             R0, [R1]; path|8-104
2656|code|MOV             R6, R1|14-70
2658|code|BLX             __xpg_basename|255-247-212-239
2662|code|LDR             R4, =(dword_1300C - 0xA72)|52-76
2664|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0xA74)|223-248-208-128
2668|code|CMP             R5, #1|1-45
2670|code|ADD             R4, PC; dword_1300C|124-68
2672|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
2674|code|MOV             R7, R0|7-70
2676|code|STR             R0, [R4]|32-96
2678|code|BLE             loc_B0E|74-221
2680|code|CMP             R5, #2|2-45
2682|code|BNE             loc_AEE|56-209
2684|code|LDR             R5, [R6,#4]|117-104
2686|code|LDRB            R1, [R5]|41-120
2688|code|RSBS.W          R4, R1, #0x2D ; '-'|209-241-45-4
2692|code|BEQ             loc_AC2|29-208
2694|code|LDR             R1, =(aHelp - 0xA8E); "--help"|46-73
2696|code|MOV             R0, R5; s1|40-70
2698|code|ADD             R1, PC; "--help"|121-68
2700|code|BLX             strcmp|255-247-80-239
2704|code|CBZ             R0, loc_ACE|232-177
2706|code|CBNZ            R4, loc_A9E|36-185
2708|code|LDRB            R6, [R5,#1]|110-120
2710|code|CMP             R6, #0x48 ; 'H'|72-46
2712|code|BNE             loc_A9E|1-209
2714|code|LDRB            R3, [R5,#2]|171-120
2716|code|CBZ             R3, loc_AAC|51-177
2718|code|LDR             R1, =(aMoreHelp - 0xAA6); "--more-help"|41-73
2720|code|MOV             R0, R5; s1|40-70
2722|code|ADD             R1, PC; "--more-help"|121-68
2724|code|BLX             strcmp|255-247-68-239
2728|code|CMP             R0, #0|0-40
2730|code|BNE             loc_B1A|54-209
2732|code|LDR             R1, =(aSSGetNfsv4File - 0xAB8); "%s %s -- get NFSv4 file or directory ac"...|38-73
2734|code|MOV             R2, R7|58-70
2736|code|LDR             R3, =(a033 - 0xABA); "0.3.3"|38-75
2738|code|MOVS            R0, #1|1-32
2740|code|ADD             R1, PC; "%s %s -- get NFSv4 file or directory ac"...|121-68
2742|code|ADD             R3, PC; "0.3.3"|123-68
2744|code|BLX             __printf_chk|255-247-174-239
2748|code|MOVS            R0, #0|0-32
2750|code|POP.W           {R4-R8,PC}|189-232-240-129
2754|code|LDRB            R6, [R5,#1]|110-120
2756|code|CMP             R6, #0x3F ; '?'|63-46
2758|code|BNE             loc_ADA|8-209
2760|code|LDRB            R3, [R5,#2]|171-120
2762|code|CMP             R3, #0|0-43
2764|code|BNE             loc_A86|219-209
2766|code|MOVS            R0, #1|1-32
2768|code|BL              sub_CA0|0-240-230-248
2772|code|MOVS            R0, #0|0-32
2774|code|POP.W           {R4-R8,PC}|189-232-240-129
2778|code|CMP             R6, #0x68 ; 'h'|104-46
2780|code|BEQ             loc_AC8|244-208
2782|code|LDR             R1, =(aHelp - 0xAE6); "--help"|28-73
2784|code|MOV             R0, R5; s1|40-70
2786|code|ADD             R1, PC; "--help"|121-68
2788|code|BLX             strcmp|255-247-36-239
2792|code|CMP             R0, #0|0-40
2794|code|BNE             loc_A96|212-209
2796|code|B               loc_ACE|239-231
2798|code|LDR             R2, =(aSCurrentlyYouM - 0xAFA); "%s: currently, you may only specify a s"...|25-74
2800|code|MOV             R3, R7|59-70
2802|code|LDR             R0, =(stderr_ptr - 0x12F64)|25-72
2804|code|MOVS            R1, #1|1-33
2806|code|ADD             R2, PC; "%s: currently, you may only specify a s"...|122-68
2808|code|LDR.W           R0, [R8,R0]; stderr|88-248-0-0
2812|code|LDR             R0, [R0]|0-104
2814|code|BLX             __fprintf_chk|255-247-148-239
2818|code|MOVS            R0, #0|0-32
2820|code|BL              sub_CA0|0-240-204-248
2824|code|MOVS            R0, #1|1-32
2826|code|POP.W           {R4-R8,PC}|189-232-240-129
2830|code|LDR             R2, =(aSYouMustSpecif - 0xB1A); "%s: you must specify a path.\n"|19-74
2832|code|MOV             R3, R7|59-70
2834|code|LDR             R0, =(stderr_ptr - 0x12F64)|17-72
2836|code|MOVS            R1, #1|1-33
2838|code|ADD             R2, PC; "%s: you must specify a path.\n"|122-68
2840|code|B               loc_AF8|238-231
2842|code|MOV             R0, R5|40-70
2844|code|BL              sub_DB8|0-240-76-249
2848|code|CMP             R0, #0|0-40
2850|code|BEQ             loc_B08|241-208
2852|code|LDR             R3, =(stdout_ptr - 0x12F64)|14-75
2854|code|MOV             R1, R0|1-70
2856|code|LDR.W           R3, [R8,R3]; stdout|88-248-3-48
2860|code|LDR             R0, [R3]|24-104
2862|code|BL              sub_E70|0-240-159-249
2866|code|MOVS            R0, #0|0-32
2868|code|POP.W           {R4-R8,PC}|189-232-240-129
2872|data|DCD dword_1300C - 0xA72|154-37-1-0
2876|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA74|240-36-1-0
2880|data|DCD aHelp - 0xA8E; "--help"|98-18-0-0
2884|data|DCD aMoreHelp - 0xAA6; "--more-help"|82-18-0-0
2888|data|DCD aSSGetNfsv4File - 0xAB8; "%s %s -- get NFSv4 file or directory ac"...|76-18-0-0
2892|data|DCD a033 - 0xABA; "0.3.3"|110-17-0-0
2896|data|DCD aHelp - 0xAE6; "--help"|10-18-0-0
2900|data|DCD aSCurrentlyYouM - 0xAFA; "%s: currently, you may only specify a s"...|194-17-0-0
2904|data|DCD stderr_ptr - 0x12F64|128-0-0-0
2908|data|DCD aSYouMustSpecif - 0xB1A; "%s: you must specify a path.\n"|130-17-0-0
2912|data|DCD stdout_ptr - 0x12F64|140-0-0-0
2916|code|MOV.W           R11, #0|79-240-0-11
2920|code|MOV.W           LR, #0|79-240-0-14
2924|code|POP             {R1}; argc|2-188
2926|code|MOV             R2, SP; ubp_av|106-70
2928|code|PUSH            {R2}; stack_end|4-180
2930|code|PUSH            {R0}; rtld_fini|1-180
2932|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xB9C)|223-248-36-160
2936|code|ADR             R3, off_B9C|8-163
2938|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
2940|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F64)|223-248-32-192
2944|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
2948|code|PUSH.W          {R12}; fini|77-248-4-205
2952|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F64)|6-75
2954|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
2958|code|LDR             R0, =(main_ptr - 0x12F64)|6-72
2960|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
2964|code|BLX             __libc_start_main|255-247-22-239
2968|code|BLX             abort|255-247-88-239
2972|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB9C|200-35-1-0
2976|data|DCD __libc_csu_fini_ptr - 0x12F64|112-0-0-0
2980|data|DCD __libc_csu_init_ptr - 0x12F64|136-0-0-0
2984|data|DCD main_ptr - 0x12F64|144-0-0-0
2988|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xBBC)|20-48-159-229
2992|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F64)|20-32-159-229
2996|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
3000|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
3004|code|CMP             R2, #0|0-0-82-227
3008|code|BXEQ            LR|30-255-47-1
3012|code|B               __gmon_start__|129-255-255-234
3016|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBBC|168-35-1-0
3020|data|DCD __gmon_start___ptr_0 - 0x12F64|132-0-0-0
3024|code|LDR             R3, =(__bss_start__ - 0xBD8)|7-75
3026|code|LDR             R0, =(__bss_start__ - 0xBDC)|8-72
3028|code|ADD             R3, PC; __bss_start__|123-68
3030|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xBE2)|8-74
3032|code|ADD             R0, PC; __bss_start__|120-68
3034|code|ADDS            R3, #3|3-51
3036|code|SUBS            R3, R3, R0|27-26
3038|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3040|code|CMP             R3, #6|6-43
3042|code|BLS             locret_BEC|3-217
3044|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F64)|5-75
3046|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
3048|code|CBZ             R3, locret_BEC|3-177
3050|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
3052|code|BX              LR|112-71
3054|data|ALIGN 0x10|0-191
3056|data|DCD __bss_start__ - 0xBD8|48-36-1-0
3060|data|DCD __bss_start__ - 0xBDC|44-36-1-0
3064|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xBE2|130-35-1-0
3068|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F64|120-0-0-0
3072|code|LDR             R1, =(__bss_start__ - 0xC08)|8-73
3074|code|LDR             R0, =(__bss_start__ - 0xC0C)|9-72
3076|code|ADD             R1, PC; __bss_start__|121-68
3078|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC10)|9-75
3080|code|ADD             R0, PC; __bss_start__|120-68
3082|code|SUBS            R1, R1, R0|9-26
3084|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3086|code|ASRS            R1, R1, #2|137-16
3088|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
3092|code|ASRS            R1, R1, #1|73-16
3094|code|BEQ             locret_C20|3-208
3096|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F64)|5-74
3098|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
3100|code|CBZ             R3, locret_C20|3-177
3102|code|BX              R3; _ITM_registerTMCloneTable|24-71
3104|code|BX              LR|112-71
3106|data|ALIGN 4|0-191
3108|data|DCD __bss_start__ - 0xC08|0-36-1-0
3112|data|DCD __bss_start__ - 0xC0C|252-35-1-0
3116|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC10|84-35-1-0
3120|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F64|152-0-0-0
3124|code|PUSH            {R3,LR}|8-181
3126|code|LDR             R3, =(__bss_start__ - 0xC3E)|10-75
3128|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xC40)|10-74
3130|code|ADD             R3, PC; __bss_start__|123-68
3132|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3134|code|LDRB            R3, [R3]|27-120
3136|code|CBNZ            R3, locret_C5E|107-185
3138|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F64)|9-75
3140|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
3142|code|CBZ             R3, loc_C52|35-177
3144|code|LDR             R3, =(off_13004 - 0xC4E)|8-75
3146|code|ADD             R3, PC; off_13004|123-68
3148|code|LDR             R0, [R3]; off_13004 ; void *|24-104
3150|code|BLX             __cxa_finalize|255-247-118-238
3154|code|BL              sub_BD0|255-247-189-255
3158|code|LDR             R3, =(__bss_start__ - 0xC5E)|6-75
3160|code|MOVS            R2, #1|1-34
3162|code|ADD             R3, PC; __bss_start__|123-68
3164|code|STRB            R2, [R3]|26-112
3166|code|POP             {R3,PC}|8-189
3168|data|DCD __bss_start__ - 0xC3E|202-35-1-0
3172|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC40|36-35-1-0
3176|data|DCD __cxa_finalize_ptr_0 - 0x12F64|116-0-0-0
3180|data|DCD off_13004 - 0xC4E|182-35-1-0
3184|data|DCD __bss_start__ - 0xC5E|170-35-1-0
3188|code|LDR             R0, =(dword_12E58 - 0xC7C)|7-72
3190|code|PUSH            {R3,LR}|8-181
3192|code|ADD             R0, PC; dword_12E58|120-68
3194|code|LDR             R2, [R0]|2-104
3196|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xC82)|6-75
3198|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3200|code|CBNZ            R2, loc_C88|18-185
3202|code|POP.W           {R3,LR}|189-232-8-64
3206|code|B               sub_C00|187-231
3208|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F64)|4-74
3210|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
3212|code|CMP             R3, #0|0-43
3214|code|BEQ             loc_C82|248-208
3216|code|BLX             R3; _Jv_RegisterClasses|152-71
3218|code|B               loc_C82|246-231
3220|data|DCD dword_12E58 - 0xC7C|220-33-1-0
3224|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC82|226-34-1-0
3228|data|DCD _Jv_RegisterClasses_ptr - 0x12F64|148-0-0-0
3232|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xCA8)|16-75
3234|code|PUSH            {R4,R5,LR}|48-181
3236|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3238|code|SUB             SP, SP, #0xC|131-176
3240|code|LDR             R2, =(stderr_ptr - 0x12F64)|15-74
3242|code|CBNZ            R0, loc_CC6|96-185
3244|code|LDR             R4, [R3,R2]; stderr|156-88
3246|code|LDR             R3, =(dword_1300C - 0xCB8)|15-75
3248|code|MOVS            R1, #1|1-33
3250|code|LDR             R2, =(aUsageSFileHMor - 0xCBC); "Usage: %s file\n  -H, --more-help\tdisp"...|15-74
3252|code|ADD             R3, PC; dword_1300C|123-68
3254|code|LDR             R0, [R4]|32-104
3256|code|ADD             R2, PC; "Usage: %s file\n  -H, --more-help\tdisp"...|122-68
3258|code|LDR             R3, [R3]|27-104
3260|code|ADD             SP, SP, #0xC|3-176
3262|code|POP.W           {R4,R5,LR}|189-232-48-64
3266|code|B.W             j___fprintf_chk|255-247-175-190
3270|code|LDR             R0, =(dword_1300C - 0xCD0)|11-72
3272|code|MOVS            R1, #1|1-33
3274|code|LDR             R4, [R3,R2]; stderr|156-88
3276|code|ADD             R0, PC; dword_1300C|120-68
3278|code|LDR             R5, =(a033 - 0xCD6); "0.3.3"|10-77
3280|code|LDR             R2, =(aSSGetNfsv4File_0 - 0xCDA); "%s %s -- get NFSv4 file or directory ac"...|10-74
3282|code|ADD             R5, PC; "0.3.3"|125-68
3284|code|STR             R5, [SP,#0x18+var_18]|0-149
3286|code|ADD             R2, PC; "%s %s -- get NFSv4 file or directory ac"...|122-68
3288|code|LDR             R3, [R0]|3-104
3290|code|LDR             R0, [R4]|32-104
3292|code|BLX             __fprintf_chk|255-247-164-238
3296|code|B               loc_CAE|229-231
3298|data|ALIGN 4|0-191
3300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xCA8|188-34-1-0
3304|data|DCD stderr_ptr - 0x12F64|128-0-0-0
3308|data|DCD dword_1300C - 0xCB8|84-35-1-0
3312|data|DCD aUsageSFileHMor - 0xCBC; "Usage: %s file\n  -H, --more-help\tdisp"...|116-15-0-0
3316|data|DCD dword_1300C - 0xCD0|60-35-1-0
3320|data|DCD a033 - 0xCD6; "0.3.3"|82-15-0-0
3324|data|DCD aSSGetNfsv4File_0 - 0xCDA; "%s %s -- get NFSv4 file or directory ac"...|18-15-0-0
3328|code|PUSH            {R3-R5,LR}|56-181
3330|code|MOV             R3, R2; size|19-70
3332|code|MOV             R2, R1; value|10-70
3334|code|LDR             R1, =(aSystemNfs4Acl - 0xD0E); "system.nfs4_acl"|36-73
3336|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0xD1C)|36-77
3338|code|ADD             R1, PC; "system.nfs4_acl"|121-68
3340|code|BLX             getxattr|255-247-10-238
3344|code|MOV             R3, #0xFFFFD8F0|77-246-240-3-207-246-255-115
3352|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
3354|code|CMP             R0, R3|152-66
3356|code|MOV             R4, R0|4-70
3358|code|BLT             loc_D46|18-219
3360|code|CMP             R0, #0|0-40
3362|code|BLT             loc_D28|1-219
3364|code|MOV             R0, R4|32-70
3366|code|POP             {R3-R5,PC}|56-189
3368|code|BLX             __errno_location|255-247-100-238
3372|code|LDR             R3, [R0]|3-104
3374|code|CMP             R3, #0x3D ; '='|61-43
3376|code|BEQ             loc_D70|30-208
3378|code|CMP             R3, #0x79 ; 'y'|121-43
3380|code|BEQ             loc_D84|38-208
3382|code|CMP             R3, #0x5F ; '_'|95-43
3384|code|BEQ             loc_D5C|16-208
3386|code|LDR             R0, =(aFailedGetxattr - 0xD40); "Failed getxattr operation"|25-72
3388|code|ADD             R0, PC; "Failed getxattr operation"|120-68
3390|code|BLX             perror|255-247-30-238
3394|code|MOV             R0, R4|32-70
3396|code|POP             {R3-R5,PC}|56-189
3398|code|LDR             R0, =(stderr_ptr - 0x12F64)|23-72
3400|code|MOVS            R1, #1|1-33
3402|code|LDR             R2, =(aAnInternalNfsS - 0xD54); "An internal NFS server error code (%d) "...|23-74
3404|code|MOV             R3, R4|35-70
3406|code|LDR             R0, [R5,R0]; stderr|40-88
3408|code|ADD             R2, PC; "An internal NFS server error code (%d) "...|122-68
3410|code|LDR             R0, [R0]|0-104
3412|code|BLX             __fprintf_chk|255-247-104-238
3416|code|MOV             R0, R4|32-70
3418|code|POP             {R3-R5,PC}|56-189
3420|code|LDR             R3, =(stderr_ptr - 0x12F64)|17-75
3422|code|MOVS            R1, #1; size|1-33
3424|code|LDR             R0, =(aOperationToReq - 0xD6A); "Operation to request attribute not supp"...|18-72
3426|code|MOVS            R2, #0x2E ; '.'; n|46-34
3428|code|LDR             R3, [R5,R3]; stderr|235-88
3430|code|ADD             R0, PC; "Operation to request attribute not supp"...|120-68
3432|code|LDR             R3, [R3]; s|27-104
3434|code|BLX             fwrite|255-247-14-238
3438|code|B               loc_D24|217-231
3440|code|LDR             R3, =(stderr_ptr - 0x12F64)|12-75
3442|code|MOVS            R1, #1; size|1-33
3444|code|LDR             R0, =(aAttributeNotFo - 0xD7E); "Attribute not found on file.\n"|14-72
3446|code|MOVS            R2, #0x1D; n|29-34
3448|code|LDR             R3, [R5,R3]; stderr|235-88
3450|code|ADD             R0, PC; "Attribute not found on file.\n"|120-68
3452|code|LDR             R3, [R3]; s|27-104
3454|code|BLX             fwrite|255-247-4-238
3458|code|B               loc_D24|207-231
3460|code|LDR             R3, =(stderr_ptr - 0x12F64)|7-75
3462|code|MOVS            R1, #1; size|1-33
3464|code|LDR             R0, =(aAnNfsServerErr - 0xD92); "An NFS server error occurred.\n"|10-72
3466|code|MOVS            R2, #0x1E; n|30-34
3468|code|LDR             R3, [R5,R3]; stderr|235-88
3470|code|ADD             R0, PC; "An NFS server error occurred.\n"|120-68
3472|code|LDR             R3, [R3]; s|27-104
3474|code|BLX             fwrite|255-247-250-237
3478|code|B               loc_D24|197-231
3480|data|DCD aSystemNfs4Acl - 0xD0E; "system.nfs4_acl"|2-21-0-0
3484|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xD1C|72-34-1-0
3488|data|DCD aFailedGetxattr - 0xD40; "Failed getxattr operation"|160-21-0-0
3492|data|DCD stderr_ptr - 0x12F64|128-0-0-0
3496|data|DCD aAnInternalNfsS - 0xD54; "An internal NFS server error code (%d) "...|204-20-0-0
3500|data|DCD aOperationToReq - 0xD6A; "Operation to request attribute not supp"...|70-21-0-0
3504|data|DCD aAttributeNotFo - 0xD7E; "Attribute not found on file.\n"|242-20-0-0
3508|data|DCD aAnNfsServerErr - 0xD92; "An NFS server error occurred.\n"|254-20-0-0
3512|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xDC0)|40-75
3514|code|LDR             R2, =(__stack_chk_guard_ptr - 0x12F64)|41-74
3516|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3518|code|PUSH.W          {R4-R8,LR}|45-233-240-65
3522|code|SUB             SP, SP, #0x70|156-176
3524|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
3526|code|MOV             R4, R0|4-70
3528|code|LDR             R3, [R6]|51-104
3530|code|STR             R3, [SP,#0x88+var_1C]|27-147
3532|code|CBZ             R0, loc_E2C|112-179
3534|code|MOVS            R0, #3|3-32
3536|code|MOV             R1, R4|33-70
3538|code|MOV             R2, SP|106-70
3540|code|BLX             __xstat64|255-247-46-238
3544|code|CMP             R0, #0|0-40
3546|code|BLT             loc_E46|52-219
3548|code|MOVS            R1, #0|0-33
3550|code|MOV             R0, R4|32-70
3552|code|MOV             R2, R1|10-70
3554|code|LDR.W           R8, [SP,#0x88+var_78]|221-248-16-128
3558|code|BL              sub_D00|255-247-139-255
3562|code|SUBS            R7, R0, #0|7-30
3564|code|BLT             loc_E2C|30-219
3566|code|BLX             malloc|255-247-228-237
3570|code|MOV             R5, R0|5-70
3572|code|CBZ             R0, loc_E3A|8-179
3574|code|MOV             R0, R4|32-70
3576|code|MOV             R1, R5|41-70
3578|code|MOV             R2, R7|58-70
3580|code|BL              sub_D00|255-247-128-255
3584|code|SUBS            R1, R0, #0|1-30
3586|code|IT LT|184-191
3588|code|MOVLT           R4, #0|0-36
3590|code|BLT             loc_E16|6-219
3592|code|UBFX.W          R2, R8, #0xE, #1|200-243-128-50
3596|code|MOV             R0, R5|40-70
3598|code|BL              sub_10D0|0-240-95-249
3602|code|MOV             R4, R0|4-70
3604|code|CBZ             R0, loc_E30|96-177
3606|code|MOV             R0, R5; ptr|40-70
3608|code|BLX             free|255-247-158-237
3612|code|LDR             R2, [SP,#0x88+var_1C]|27-154
3614|code|MOV             R0, R4|32-70
3616|code|LDR             R3, [R6]|51-104
3618|code|CMP             R2, R3|154-66
3620|code|BNE             loc_E56|23-209
3622|code|ADD             SP, SP, #0x70 ; 'p'|28-176
3624|code|POP.W           {R4-R8,PC}|189-232-240-129
3628|code|MOVS            R4, #0|0-36
3630|code|B               loc_E1C|245-231
3632|code|LDR             R0, =(aFailedToExtrac - 0xE36); "Failed to extract nfs4acl from xattr"|12-72
3634|code|ADD             R0, PC; "Failed to extract nfs4acl from xattr"|120-68
3636|code|BLX             perror|255-247-162-237
3640|code|B               loc_E16|237-231
3642|code|LDR             R0, =(aFailedToAlloca - 0xE42); "Failed to allocate memory"|11-72
3644|code|MOV             R4, R5|44-70
3646|code|ADD             R0, PC; "Failed to allocate memory"|120-68
3648|code|BLX             puts|255-247-180-237
3652|code|B               loc_E1C|234-231
3654|code|LDR             R1, =(aInvalidFilenam - 0xE52); "Invalid filename: %s\n"|9-73
3656|code|MOV             R2, R4|34-70
3658|code|MOVS            R0, #1|1-32
3660|code|MOVS            R4, #0|0-36
3662|code|ADD             R1, PC; "Invalid filename: %s\n"|121-68
3664|code|BLX             __printf_chk|255-247-226-237
3668|code|B               loc_E1C|226-231
3670|code|BLX             __stack_chk_fail|255-247-140-237
3674|data|ALIGN 4|0-191
3676|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDC0|164-33-1-0
3680|data|DCD __stack_chk_guard_ptr - 0x12F64|124-0-0-0
3684|data|DCD aFailedToExtrac - 0xE36; "Failed to extract nfs4acl from xattr"|250-20-0-0
3688|data|DCD aFailedToAlloca - 0xE42; "Failed to allocate memory"|210-20-0-0
3692|data|DCD aInvalidFilenam - 0xE52; "Invalid filename: %s\n"|170-20-0-0
3696|code|PUSH.W          {R4-R9,LR}|45-233-240-67
3700|code|SUB             SP, SP, #0xC|131-176
3702|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0xE84)|223-248-116-128
3706|code|MOV             R6, R0|6-70
3708|code|LDR             R3, =(__stack_chk_guard_ptr - 0x12F64)|28-75
3710|code|MOV             R0, R1|8-70
3712|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
3714|code|MOV             R5, R1|13-70
3716|code|MOV             R7, SP|111-70
3718|code|MOVS            R4, #1|1-36
3720|code|LDR.W           R9, [R8,R3]; __stack_chk_guard|88-248-3-144
3724|code|LDR.W           R3, [R9]|217-248-0-48
3728|code|STR             R3, [SP,#0x28+var_24]|1-147
3730|code|BL              sub_11E8|0-240-169-249
3734|code|MOV             R1, R0|1-70
3736|code|STR             R0, [SP,#0x28+var_28]|0-144
3738|code|CBZ             R0, loc_EE4|24-179
3740|code|LDR             R2, [R5,#4]|106-104
3742|code|MOV             R0, R6|48-70
3744|code|BL              sub_EFC|0-240-44-248
3748|code|MOV             R0, R7|56-70
3750|code|BL              sub_11F0|0-240-163-249
3754|code|LDR             R1, [SP,#0x28+var_28]|0-153
3756|code|ADDS            R4, #1|1-52
3758|code|CMP             R1, #0|0-41
3760|code|BNE             loc_E9C|244-209
3762|code|LDR             R3, [R5]|43-104
3764|code|CMP             R4, R3|156-66
3766|code|BCS             loc_EDC|17-210
3768|code|LDR             R3, =(stderr_ptr - 0x12F64)|14-75
3770|code|MOVS            R1, #1; size|1-33
3772|code|LDR             R0, =(aAnUnexpectedFa - 0xEC8); "An unexpected failure has occurred. \n"|14-72
3774|code|MOVS            R2, #0x25 ; '%'; n|37-34
3776|code|LDR.W           R3, [R8,R3]; stderr|88-248-3-48
3780|code|ADD             R0, PC; "An unexpected failure has occurred. \n"|120-68
3782|code|LDR             R3, [R3]; s|27-104
3784|code|BLX             fwrite|255-247-94-237
3788|code|LDR             R2, [SP,#0x28+var_24]|1-154
3790|code|LDR.W           R3, [R9]|217-248-0-48
3794|code|CMP             R2, R3|154-66
3796|code|BNE             loc_EE8|8-209
3798|code|ADD             SP, SP, #0xC|3-176
3800|code|POP.W           {R4-R9,PC}|189-232-240-131
3804|code|MOV             R0, R6; stream|48-70
3806|code|BLX             fflush|255-247-52-237
3810|code|B               loc_ECC|243-231
3812|code|MOVS            R4, #1|1-36
3814|code|B               loc_EB2|228-231
3816|code|BLX             __stack_chk_fail|255-247-66-237
3820|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xE84|224-32-1-0
3824|data|DCD __stack_chk_guard_ptr - 0x12F64|124-0-0-0
3828|data|DCD stderr_ptr - 0x12F64|128-0-0-0
3832|data|DCD aAnUnexpectedFa - 0xEC8; "An unexpected failure has occurred. \n"|144-20-0-0
3836|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3840|code|SUB             SP, SP, #0x1C|135-176
3842|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0xF0E)|47-79
3844|code|ADD             R6, SP, #0x40+var_3C|1-174
3846|code|LDR             R5, =(__stack_chk_guard_ptr - 0x12F64)|47-77
3848|code|MOV             R4, R1|12-70
3850|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
3852|code|MOV             R8, R0|128-70
3854|code|MOV             R9, R2|145-70
3856|code|MOV             R0, R1|8-70
3858|code|LDR.W           R10, [R7,R5]; __stack_chk_guard|87-248-5-160
3862|code|MOV             R1, R6|49-70
3864|code|MOVS            R2, #0|0-34
3866|code|LDR.W           R3, [R10]|218-248-0-48
3870|code|STR             R3, [SP,#0x40+var_2C]|5-147
3872|code|BL              sub_1594|0-240-56-251
3876|code|CMP             R0, #0|0-40
3878|code|BEQ             loc_FAE|66-208
3880|code|LDR.W           R11, =(aS - 0xF36); "%s:"|223-248-156-176
3884|code|MOV             R3, R6|51-70
3886|code|MOVS            R1, #1|1-33
3888|code|MOV             R0, R8|64-70
3890|code|ADD             R11, PC; "%s:"|251-68
3892|code|MOV             R2, R11|90-70
3894|code|BLX             __fprintf_chk|255-247-120-237
3898|code|MOV             R1, R6|49-70
3900|code|MOV             R0, R4|32-70
3902|code|BL              sub_1524|0-240-241-250
3906|code|MOV             R2, R11|90-70
3908|code|MOVS            R1, #1|1-33
3910|code|MOV             R3, R0|3-70
3912|code|MOV             R0, R8|64-70
3914|code|BLX             __fprintf_chk|255-247-110-237
3918|code|MOV             R0, R4|32-70
3920|code|MOVS            R1, #0|0-33
3922|code|MOV             R2, SP|106-70
3924|code|BL              sub_FDC|0-240-66-248
3928|code|MOV             R5, R0|5-70
3930|code|CBZ             R0, loc_F80|136-177
3932|code|LDR             R3, =(stderr_ptr - 0x12F64)|27-75
3934|code|MOVS            R1, #1; size|1-33
3936|code|LDR             R0, =(aErrorWhilePrin - 0xF6A); "Error while printing ACE.\n"|27-72
3938|code|MOVS            R2, #0x1A; n|26-34
3940|code|LDR             R3, [R7,R3]; stderr|251-88
3942|code|ADD             R0, PC; "Error while printing ACE.\n"|120-68
3944|code|LDR             R3, [R3]; s|27-104
3946|code|BLX             fwrite|255-247-14-237
3950|code|MOVS            R0, #1|1-32
3952|code|LDR             R2, [SP,#0x40+var_2C]|5-154
3954|code|LDR.W           R3, [R10]|218-248-0-48
3958|code|CMP             R2, R3|154-66
3960|code|BNE             loc_FBC|32-209
3962|code|ADD             SP, SP, #0x1C|7-176
3964|code|POP.W           {R4-R11,PC}|189-232-240-143
3968|code|LDR             R3, [SP,#0x40+ptr]|0-155
3970|code|MOV             R2, R11|90-70
3972|code|MOVS            R1, #1|1-33
3974|code|MOV             R0, R8|64-70
3976|code|BLX             __fprintf_chk|255-247-78-237
3980|code|MOV             R1, R6|49-70
3982|code|MOV             R2, R9|74-70
3984|code|MOV             R0, R4|32-70
3986|code|BL              sub_145C|0-240-99-250
3990|code|LDR             R2, =(aS_0 - 0xF9E); "%s\n"|15-74
3992|code|MOVS            R1, #1|1-33
3994|code|ADD             R2, PC; "%s\n"|122-68
3996|code|MOV             R3, R0|3-70
3998|code|MOV             R0, R8|64-70
4000|code|BLX             __fprintf_chk|255-247-66-237
4004|code|LDR             R0, [SP,#0x40+ptr]; ptr|0-152
4006|code|BLX             free|255-247-216-236
4010|code|MOV             R0, R5|40-70
4012|code|B               loc_F70|224-231
4014|code|LDR             R1, =(aBadAceTypeD - 0xFB8); "Bad Ace Type:%d\n"|10-73
4016|code|MOVS            R0, #1|1-32
4018|code|LDR             R2, [R4]|34-104
4020|code|ADD             R1, PC; "Bad Ace Type:%d\n"|121-68
4022|code|BLX             __printf_chk|255-247-48-237
4026|code|B               loc_F5C|207-231
4028|code|BLX             __stack_chk_fail|255-247-216-236
4032|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF0E|86-32-1-0
4036|data|DCD __stack_chk_guard_ptr - 0x12F64|124-0-0-0
4040|data|DCD aS - 0xF36; "%s:"|94-20-0-0
4044|data|DCD stderr_ptr - 0x12F64|128-0-0-0
4048|data|DCD aErrorWhilePrin - 0xF6A; "Error while printing ACE.\n"|50-20-0-0
4052|data|DCD aS_0 - 0xF9E; "%s\n"|250-19-0-0
4056|data|DCD aBadAceTypeD - 0xFB8; "Bad Ace Type:%d\n"|200-19-0-0
4060|code|PUSH            {R4-R6,LR}|112-181
4062|code|CBZ             R0, def_FF8; jumptable 00000FF8 default case|224-177
4064|code|ADD.W           R4, R0, #0x10|0-241-16-4
4068|code|MOV             R6, R1|14-70
4070|code|MOV             R5, R2|21-70
4072|code|MOV             R0, R4|32-70
4074|code|BL              sub_1064|0-240-59-248
4078|code|CBZ             R6, loc_FF2|6-177
4080|code|STR             R0, [R6]|48-96
4082|code|CBZ             R5, loc_1016|133-177
4084|code|CMP             R0, #3; switch 4 cases|3-40
4086|code|BHI             def_FF8; jumptable 00000FF8 default case|16-216
4088|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
4092|data|DCB 0x1F; jump table for switch statement|31
4093|data|DCB 0x1B|27
4094|data|DCB 0x17|23
4095|data|DCB 2|2
4096|code|LDR             R4, =(aEveryone - 0x1008); jumptable 00000FF8 case 3|21-76
4098|code|MOVS            R0, #0xA; size|10-32
4100|code|ADD             R4, PC; "EVERYONE@"|124-68
4102|code|BLX             malloc|255-247-216-236
4106|code|STR             R0, [R5]|40-96
4108|code|CBZ             R0, loc_1048|224-177
4110|code|MOV             R1, R4; src|33-70
4112|code|MOVS            R5, #0|0-37
4114|code|BLX             strcpy|255-247-192-236
4118|code|MOV             R0, R5|40-70
4120|code|POP             {R4-R6,PC}|112-189
4122|code|BLX             __errno_location; jumptable 00000FF8 default case|255-247-236-236
4126|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
4130|code|MOVS            R3, #0x16|22-35
4132|code|STR             R3, [R0]|3-96
4134|code|MOV             R0, R5|40-70
4136|code|POP             {R4-R6,PC}|112-189
4138|code|LDR             R4, =(aGroup - 0x1032); jumptable 00000FF8 case 2|12-76
4140|code|MOVS            R0, #7|7-32
4142|code|ADD             R4, PC; "GROUP@"|124-68
4144|code|B               loc_1006|233-231
4146|code|LDR             R4, =(aOwner - 0x103A); jumptable 00000FF8 case 1|11-76
4148|code|MOVS            R0, #7|7-32
4150|code|ADD             R4, PC; "OWNER@"|124-68
4152|code|B               loc_1006|229-231
4154|code|MOV             R0, R4; jumptable 00000FF8 case 0|32-70
4156|code|BLX             strlen|255-247-206-236
4160|code|CMP             R0, #0|0-40
4162|code|BLT             def_FF8; jumptable 00000FF8 default case|234-219
4164|code|ADDS            R0, #1|1-48
4166|code|B               loc_1006|222-231
4168|code|BLX             __errno_location|255-247-212-236
4172|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
4176|code|MOVS            R3, #0xC|12-35
4178|code|STR             R3, [R0]|3-96
4180|code|B               loc_1016|223-231
4182|data|ALIGN 4|0-191
4184|data|DCD aEveryone - 0x1008; "EVERYONE@"|176-19-0-0
4188|data|DCD aGroup - 0x1032; "GROUP@"|146-19-0-0
4192|data|DCD aOwner - 0x103A; "OWNER@"|146-19-0-0
4196|code|LDR             R1, =(aOwner - 0x106C); "OWNER@"|23-73
4198|code|PUSH            {R3-R5,LR}|56-181
4200|code|ADD             R1, PC; "OWNER@"|121-68
4202|code|MOV             R4, R0|4-70
4204|code|BLX             strcmp|255-247-96-236
4208|code|CBNZ            R0, loc_1090|112-185
4210|code|MOV             R0, R4; s|32-70
4212|code|BLX             strlen|255-247-178-236
4216|code|CMP             R0, #6|6-40
4218|code|BEQ             loc_10BE|32-208
4220|code|LDR             R1, =(aEveryone - 0x1084); "EVERYONE@"|18-73
4222|code|MOV             R0, R4; s1|32-70
4224|code|ADD             R1, PC; "EVERYONE@"|121-68
4226|code|BLX             strcmp|255-247-86-236
4230|code|MOV             R5, R0|5-70
4232|code|CBZ             R0, loc_10AE|136-177
4234|code|MOVS            R5, #0|0-37
4236|code|MOV             R0, R5|40-70
4238|code|POP             {R3-R5,PC}|56-189
4240|code|LDR             R1, =(aGroup - 0x1098); "GROUP@"|14-73
4242|code|MOV             R0, R4; s1|32-70
4244|code|ADD             R1, PC; "GROUP@"|121-68
4246|code|BLX             strcmp|255-247-76-236
4250|code|CMP             R0, #0|0-40
4252|code|BNE             loc_107C|238-209
4254|code|MOV             R0, R4; s|32-70
4256|code|BLX             strlen|255-247-156-236
4260|code|CMP             R0, #6|6-40
4262|code|IT EQ|8-191
4264|code|MOVEQ           R5, #2|2-37
4266|code|BNE             loc_107C|231-209
4268|code|B               loc_108C|238-231
4270|code|MOV             R0, R4; s|32-70
4272|code|BLX             strlen|255-247-148-236
4276|code|CMP             R0, #9|9-40
4278|code|IT EQ|8-191
4280|code|MOVEQ           R5, #3|3-37
4282|code|MOV             R0, R5|40-70
4284|code|POP             {R3-R5,PC}|56-189
4286|code|MOVS            R5, #1|1-37
4288|code|B               loc_108C|228-231
4290|data|ALIGN 4|0-191
4292|data|DCD aOwner - 0x106C; "OWNER@"|96-19-0-0
4296|data|DCD aEveryone - 0x1084; "EVERYONE@"|52-19-0-0
4300|data|DCD aGroup - 0x1098; "GROUP@"|44-19-0-0
4304|code|PUSH.W          {R4-R11,LR}|45-233-240-79
4308|code|CMP             R1, #3|3-41
4310|code|SUB             SP, SP, #0x1C|135-176
4312|code|MOV             R4, R1|12-70
4314|code|STR             R2, [SP,#0x40+var_30]|4-146
4316|code|BLS             loc_11BE|111-217
4318|code|MOV             R5, R0|5-70
4320|code|LDR             R0, [SP,#0x40+var_30]|4-152
4322|code|BL              sub_1644|0-240-175-250
4326|code|MOV             R11, R0|131-70
4328|code|CMP             R0, #0|0-40
4330|code|BEQ             loc_11DC|119-208
4332|code|LDR.W           R3, [R5],#4|85-248-4-59
4336|code|SUBS            R4, #4|4-60
4338|code|REV             R3, R3|27-186
4340|code|STR             R3, [SP,#0x40+var_2C]|5-147
4342|code|CMP             R3, #0|0-43
4344|code|BEQ             loc_11AE|89-208
4346|code|CMP             R4, #0|0-44
4348|code|IT GT|200-191
4350|code|MOVGT.W         R10, #0|79-240-0-10
4354|code|BGT             loc_1194|71-220
4356|code|B               loc_119C|74-224
4358|code|LDR             R3, [R5,#4]|107-104
4360|code|CMP             R4, #8|8-44
4362|code|REV.W           R8, R3|147-250-131-248
4366|code|BLE             loc_119C|69-221
4368|code|LDR             R3, [R5,#8]|171-104
4370|code|CMP             R4, #0xC|12-44
4372|code|REV             R3, R3|27-186
4374|code|STR             R3, [SP,#0x40+var_34]|3-147
4376|code|BLE             loc_119C|64-221
4378|code|SUBS            R4, #0x10|16-60
4380|code|LDR             R3, [R5,#0xC]|235-104
4382|code|CMP             R4, #0|0-44
4384|code|ADD.W           R5, R5, #0x10|5-241-16-5
4388|code|REV.W           R9, R3|147-250-131-249
4392|code|BLE             loc_119C|56-221
4394|code|ADD.W           R0, R9, #1; size|9-241-1-0
4398|code|BLX             malloc|255-247-68-236
4402|code|MOV             R6, R0|6-70
4404|code|CMP             R0, #0|0-40
4406|code|BEQ             loc_11D2|76-208
4408|code|MOV             R1, R5; src|41-70
4410|code|MOV             R2, R9; n|74-70
4412|code|BLX             memcpy|255-247-18-236
4416|code|TST.W           R9, #3|25-240-3-15
4420|code|BIC.W           R2, R9, #3|41-240-3-2
4424|code|MOV.W           R3, #0|79-240-0-3
4428|code|STRB.W          R3, [R6,R9]|6-248-9-48
4432|code|ITE NE|20-191
4434|code|ADDNE           R3, R2, #4|19-29
4436|code|MOVEQ           R3, R2|19-70
4438|code|SUBS            R4, R4, R3|228-26
4440|code|ADD             R5, R3|29-68
4442|code|BMI             loc_11B6|44-212
4444|code|MOV             R0, R6|48-70
4446|code|BL              sub_1064|255-247-129-255
4450|code|STR             R6, [SP,#0x40+var_3C]|1-150
4452|code|MOV             R1, R7|57-70
4454|code|MOV             R2, R8|66-70
4456|code|LDR             R3, [SP,#0x40+var_34]|3-155
4458|code|STR             R0, [SP,#0x40+var_40]|0-144
4460|code|LDR             R0, [SP,#0x40+var_30]|4-152
4462|code|BL              sub_1660|0-240-119-250
4466|code|CBZ             R0, loc_11B6|0-179
4468|code|MOV             R1, R0|1-70
4470|code|LDR.W           R2, [R11]|219-248-0-32
4474|code|MOV             R0, R11|88-70
4476|code|BL              sub_1224|0-240-82-248
4480|code|CBNZ            R0, loc_11B6|200-185
4482|code|MOV             R0, R6; ptr|48-70
4484|code|ADD.W           R10, R10, #1|10-241-1-10
4488|code|BLX             free|255-247-230-235
4492|code|LDR             R3, [SP,#0x40+var_2C]|5-155
4494|code|CMP             R10, R3|154-69
4496|code|BEQ             loc_11AE|13-208
4498|code|CBZ             R4, loc_119C|28-177
4500|code|LDR             R7, [R5]|47-104
4502|code|CMP             R4, #4|4-44
4504|code|REV             R7, R7|63-186
4506|code|BGT             loc_1106|180-220
4508|code|BLX             __errno_location|255-247-42-236
4512|code|MOVS            R3, #0x16|22-35
4514|code|STR             R3, [R0]|3-96
4516|code|MOV             R0, R11; ptr|88-70
4518|code|MOV.W           R11, #0|79-240-0-11
4522|code|BL              sub_1620|0-240-57-250
4526|code|MOV             R0, R11|88-70
4528|code|ADD             SP, SP, #0x1C|7-176
4530|code|POP.W           {R4-R11,PC}|189-232-240-143
4534|code|MOV             R0, R6; ptr|48-70
4536|code|BLX             free|255-247-206-235
4540|code|B               loc_11A4|242-231
4542|code|BLX             __errno_location|255-247-26-236
4546|code|MOV.W           R11, #0|79-240-0-11
4550|code|MOVS            R3, #0x16|22-35
4552|code|STR             R3, [R0]|3-96
4554|code|MOV             R0, R11|88-70
4556|code|ADD             SP, SP, #0x1C|7-176
4558|code|POP.W           {R4-R11,PC}|189-232-240-143
4562|code|BLX             __errno_location|255-247-16-236
4566|code|MOVS            R3, #0xC|12-35
4568|code|STR             R3, [R0]|3-96
4570|code|B               loc_11A4|227-231
4572|code|BLX             __errno_location|255-247-10-236
4576|code|MOVS            R3, #0xC|12-35
4578|code|STR             R3, [R0]|3-96
4580|code|B               loc_11AE|227-231
4582|data|ALIGN 4|0-191
4584|code|CBZ             R0, locret_11EC|0-177
4586|code|LDR             R0, [R0,#8]|128-104
4588|code|BX              LR|112-71
4590|data|ALIGN 0x10|0-191
4592|code|CBZ             R0, loc_1200|48-177
4594|code|LDR             R3, [R0]|3-104
4596|code|CBZ             R3, loc_11FC|19-177
4598|code|LDR.W           R3, [R3,#0x194]|211-248-148-49
4602|code|STR             R3, [R0]|3-96
4604|code|MOV             R0, R3|24-70
4606|code|BX              LR|112-71
4608|code|MOV             R3, R0|3-70
4610|code|B               loc_11FC|251-231
4612|code|LDR             R3, [R0]|3-104
4614|code|CMP             R3, R1|139-66
4616|code|BLS             loc_121E|9-217
4618|code|LDR             R0, [R0,#8]|128-104
4620|code|CBZ             R1, locret_1220|65-177
4622|code|MOVS            R3, #0|0-35
4624|code|ADDS            R3, #1|1-51
4626|code|CBZ             R0, loc_1218|8-177
4628|code|LDR.W           R0, [R0,#0x194]|208-248-148-1
4632|code|CMP             R3, R1|139-66
4634|code|BNE             loc_1210|249-209
4636|code|BX              LR|112-71
4638|code|MOVS            R0, #0|0-32
4640|code|BX              LR|112-71
4642|data|ALIGN 4|0-191
4644|code|CMP             R1, #0|0-41
4646|code|IT NE|24-191
4648|code|CMPNE           R0, #0|0-40
4650|code|PUSH            {R4-R6,LR}|112-181
4652|code|ITE EQ|12-191
4654|code|MOVEQ           R6, #1|1-38
4656|code|MOVNE           R6, #0|0-38
4658|code|BEQ             loc_12A8|57-208
4660|code|LDR             R3, [R0]|3-104
4662|code|MOV             R5, R0|5-70
4664|code|CMP             R3, R2|147-66
4666|code|BCC             loc_12A8|53-211
4668|code|MOV             R4, R1|12-70
4670|code|CBNZ            R2, loc_125E|114-185
4672|code|LDR             R3, [R0,#8]|131-104
4674|code|STR.W           R3, [R4,#0x194]|196-248-148-49
4678|code|CBZ             R3, loc_12AE|147-179
4680|code|LDR             R3, [R0,#8]|131-104
4682|code|ADD.W           R2, R4, #0x194|4-245-202-114
4686|code|STR.W           R2, [R3,#0x198]|195-248-152-33
4690|code|MOV             R3, R5|43-70
4692|code|STR.W           R4, [R3,#8]!|67-248-8-79
4696|code|STR.W           R3, [R4,#0x198]|196-248-152-49
4700|code|B               loc_1276|11-224
4702|code|CMP             R3, R2|147-66
4704|code|BNE             loc_1280|14-209
4706|code|STR.W           R6, [R4,#0x194]|196-248-148-97
4710|code|ADD.W           R3, R4, #0x194|4-245-202-115
4714|code|LDR             R2, [R0,#0xC]|194-104
4716|code|STR.W           R2, [R4,#0x198]|196-248-152-33
4720|code|LDR             R2, [R0,#0xC]|194-104
4722|code|STR             R4, [R2]|20-96
4724|code|STR             R3, [R0,#0xC]|195-96
4726|code|LDR             R3, [R5]|43-104
4728|code|MOVS            R0, #0|0-32
4730|code|ADDS            R3, #1|1-51
4732|code|STR             R3, [R5]|43-96
4734|code|POP             {R4-R6,PC}|112-189
4736|code|SUBS            R1, R2, #1|81-30
4738|code|BL              sub_1204|255-247-191-255
4742|code|CBZ             R0, loc_12A8|120-177
4744|code|LDR.W           R3, [R0,#0x194]|208-248-148-49
4748|code|STR.W           R3, [R4,#0x194]|196-248-148-49
4752|code|CBZ             R3, loc_12B6|139-177
4754|code|ADD.W           R2, R4, #0x194|4-245-202-114
4758|code|STR.W           R2, [R3,#0x198]|195-248-152-33
4762|code|STR.W           R4, [R0,#0x194]|192-248-148-65
4766|code|ADD.W           R0, R0, #0x194|0-245-202-112
4770|code|STR.W           R0, [R4,#0x198]|196-248-152-1
4774|code|B               loc_1276|230-231
4776|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
4780|code|POP             {R4-R6,PC}|112-189
4782|code|ADD.W           R3, R4, #0x194|4-245-202-115
4786|code|STR             R3, [R0,#0xC]|195-96
4788|code|B               loc_1252|205-231
4790|code|ADD.W           R3, R4, #0x194|4-245-202-115
4794|code|STR             R3, [R5,#0xC]|235-96
4796|code|B               loc_129A|237-231
4798|data|ALIGN 0x10|0-191
4800|code|CMP             R1, #0|0-41
4802|code|IT NE|24-191
4804|code|CMPNE           R0, #0|0-40
4806|code|BEQ             loc_12FC|25-208
4808|code|LDR.W           R3, [R1,#0x194]|209-248-148-49
4812|code|PUSH            {R4,LR}|16-181
4814|code|CBZ             R3, loc_12F4|139-177
4816|code|LDR.W           R2, [R1,#0x198]|209-248-152-33
4820|code|STR.W           R2, [R3,#0x198]|195-248-152-33
4824|code|LDR.W           R3, [R1,#0x198]|209-248-152-49
4828|code|MOV             R4, R0|4-70
4830|code|LDR.W           R2, [R1,#0x194]|209-248-148-33
4834|code|MOV             R0, R1; ptr|8-70
4836|code|STR             R2, [R3]|26-96
4838|code|BLX             free|255-247-56-235
4842|code|LDR             R3, [R4]|35-104
4844|code|MOVS            R0, #0|0-32
4846|code|SUBS            R3, #1|1-59
4848|code|STR             R3, [R4]|35-96
4850|code|POP             {R4,PC}|16-189
4852|code|LDR.W           R3, [R1,#0x198]|209-248-152-49
4856|code|STR             R3, [R0,#0xC]|195-96
4858|code|B               loc_12D8|237-231
4860|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
4864|code|BX              LR|112-71
4866|data|ALIGN 4|0-191
4868|code|PUSH            {R4,LR}|16-181
4870|code|MOV             R4, R0|4-70
4872|code|BL              sub_1204|255-247-124-255
4876|code|MOV             R1, R0|1-70
4878|code|MOV             R0, R4|32-70
4880|code|POP.W           {R4,LR}|189-232-16-64
4884|code|B.W             sub_12C0|255-247-212-191
4888|code|CMP             R2, #0|0-42
4890|code|IT NE|24-191
4892|code|CMPNE           R1, #0|0-41
4894|code|ITE EQ|12-191
4896|code|MOVEQ           R3, #1|1-35
4898|code|MOVNE           R3, #0|0-35
4900|code|CMP             R0, #0|0-40
4902|code|IT EQ|8-191
4904|code|ORREQ.W         R3, R3, #1|67-240-1-3
4908|code|CBNZ            R3, loc_137E|59-187
4910|code|LDR.W           R3, [R1,#0x194]|209-248-148-49
4914|code|PUSH            {R4}|16-180
4916|code|STR.W           R3, [R2,#0x194]|194-248-148-49
4920|code|CBZ             R3, loc_136E|203-177
4922|code|ADD.W           R4, R2, #0x194|2-245-202-116
4926|code|STR.W           R4, [R3,#0x198]|195-248-152-65
4930|code|STR.W           R2, [R1,#0x194]|193-248-148-33
4934|code|ADD.W           R3, R1, #0x194|1-245-202-115
4938|code|STR.W           R3, [R2,#0x198]|194-248-152-49
4942|code|LDR.W           R3, [R1,#0x194]|209-248-148-49
4946|code|CBZ             R3, loc_1376|131-177
4948|code|LDR.W           R2, [R1,#0x198]|209-248-152-33
4952|code|STR.W           R2, [R3,#0x198]|195-248-152-33
4956|code|LDR.W           R3, [R1,#0x198]|209-248-152-49
4960|code|MOVS            R0, #0|0-32
4962|code|LDR.W           R2, [R1,#0x194]|209-248-148-33
4966|code|STR             R2, [R3]|26-96
4968|code|POP.W           {R4}|93-248-4-75
4972|code|BX              LR|112-71
4974|code|ADD.W           R3, R2, #0x194|2-245-202-115
4978|code|STR             R3, [R0,#0xC]|195-96
4980|code|B               loc_1342|229-231
4982|code|LDR.W           R3, [R1,#0x198]|209-248-152-49
4986|code|STR             R3, [R0,#0xC]|195-96
4988|code|B               loc_135C|238-231
4990|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
4994|code|BX              LR|112-71
4996|code|PUSH            {R3,LR}|8-181
4998|code|LDR             R2, [R0]|2-104
5000|code|LDR             R3, [R1]|11-104
5002|code|CMP             R2, R3|154-66
5004|code|BEQ             loc_1392|1-208
5006|code|MOVS            R0, #1|1-32
5008|code|POP             {R3,PC}|8-189
5010|code|LDR             R2, [R0,#8]|130-104
5012|code|LDR             R3, [R1,#8]|139-104
5014|code|CMP             R2, R3|154-66
5016|code|BNE             loc_138E|249-209
5018|code|LDR             R2, [R0,#0xC]|194-104
5020|code|LDR             R3, [R1,#0xC]|203-104
5022|code|CMP             R2, R3|154-66
5024|code|BNE             loc_138E|245-209
5026|code|ADDS            R1, #0x10; s2|16-49
5028|code|MOV.W           R2, #0x182; n|79-244-193-114
5032|code|ADDS            R0, #0x10; s1|16-48
5034|code|BLX             strncmp|255-247-74-235
5038|code|ADDS            R0, #0|0-48
5040|code|IT NE|24-191
5042|code|MOVNE           R0, #1|1-32
5044|code|POP             {R3,PC}|8-189
5046|data|ALIGN 4|0-191
5048|code|PUSH.W          {R4-R9,LR}|45-233-240-67
5052|code|SUB             SP, SP, #0xC|131-176
5054|code|CMP             R0, #0|0-40
5056|code|BEQ             loc_1454|72-208
5058|code|MOV             R8, R0|128-70
5060|code|MOV             R0, R1|8-70
5062|code|LDR.W           R1, [R8,#4]|216-248-4-16
5066|code|MOV             R4, R2|20-70
5068|code|BL              sub_1848|0-240-60-250
5072|code|MOV             R6, R0|6-70
5074|code|CMP             R0, #0|0-40
5076|code|BEQ             loc_1454|62-208
5078|code|MOV             R0, R4|32-70
5080|code|LDR.W           R1, [R8,#4]|216-248-4-16
5084|code|BL              sub_1848|0-240-52-250
5088|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
5092|code|MOV             R5, R0|5-70
5094|code|CBZ             R0, loc_1440|88-179
5096|code|LDR.W           R4, [R8,#8]|216-248-8-64
5100|code|ADD.W           R9, R0, #0x10|0-241-16-9
5104|code|CBNZ            R4, loc_13FA|28-185
5106|code|B               loc_1438|33-224
5108|code|LDR.W           R4, [R4,#0x194]|212-248-148-65
5112|code|CBZ             R4, loc_1438|244-177
5114|code|MOV             R0, R6|48-70
5116|code|MOV             R1, R4|33-70
5118|code|BL              sub_1384|255-247-193-255
5122|code|CMP             R0, #0|0-40
5124|code|BNE             loc_13F4|246-209
5126|code|LDR             R7, [R5,#4]|111-104
5128|code|LDR             R1, [R5]|41-104
5130|code|LDR             R2, [R5,#8]|170-104
5132|code|LDR.W           R0, [R8,#4]|216-248-4-0
5136|code|LDR             R3, [R5,#0xC]|235-104
5138|code|STMEA.W         SP, {R7,R9}|141-232-128-2
5142|code|BL              sub_1660|0-240-35-249
5146|code|MOV             R1, R4|33-70
5148|code|MOV             R7, R0|7-70
5150|code|MOV             R2, R0|2-70
5152|code|CBZ             R0, loc_144E|168-177
5154|code|MOV             R0, R8|64-70
5156|code|BL              sub_1318|255-247-120-255
5160|code|MOV             R0, R4|32-70
5162|code|MOV             R4, R7|60-70
5164|code|BLX             free|255-247-148-234
5168|code|LDR.W           R4, [R4,#0x194]|212-248-148-65
5172|code|CMP             R4, #0|0-44
5174|code|BNE             loc_13FA|224-209
5176|code|MOVS            R4, #0|0-36
5178|code|MOV             R0, R5|40-70
5180|code|BLX             free|255-247-140-234
5184|code|MOV             R0, R6|48-70
5186|code|BLX             free|255-247-138-234
5190|code|MOV             R0, R4|32-70
5192|code|ADD             SP, SP, #0xC|3-176
5194|code|POP.W           {R4-R9,PC}|189-232-240-131
5198|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
5202|code|B               loc_143A|242-231
5204|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
5208|code|B               loc_1446|245-231
5210|data|ALIGN 4|0-191
5212|code|PUSH            {R4}|16-180
5214|code|LDR             R4, [R0,#0xC]|196-104
5216|code|CMP             R2, #0|0-42
5218|code|BEQ             loc_1500|77-208
5220|code|LSLS            R0, R4, #0x1F|224-7
5222|code|ITTET MI|69-191
5224|code|ADDMI           R3, R1, #1|75-28
5226|code|MOVMI           R2, #0x72 ; 'r'|114-34
5228|code|MOVPL           R3, R1|11-70
5230|code|STRBMI          R2, [R1]|10-112
5232|code|LSLS            R2, R4, #0x1E|162-7
5234|code|ITTT MI|66-191
5236|code|MOVMI           R2, #0x77 ; 'w'|119-34
5238|code|STRBMI          R2, [R3]|26-112
5240|code|ADDMI           R3, #1|1-51
5242|code|LSLS            R0, R4, #0x1D|96-7
5244|code|ITTT MI|66-191
5246|code|MOVMI           R2, #0x61 ; 'a'|97-34
5248|code|STRBMI          R2, [R3]|26-112
5250|code|ADDMI           R3, #1|1-51
5252|code|LSLS            R2, R4, #0x19|98-6
5254|code|BPL             loc_1490|3-213
5256|code|MOVS            R2, #0x44 ; 'D'|68-34
5258|code|ADDS            R3, #1|1-51
5260|code|STRB.W          R2, [R3,#-1]|3-248-1-44
5264|code|LSLS            R0, R4, #0xF|224-3
5266|code|ITTT MI|66-191
5268|code|MOVMI           R2, #0x64 ; 'd'|100-34
5270|code|STRBMI          R2, [R3]|26-112
5272|code|ADDMI           R3, #1|1-51
5274|code|LSLS            R2, R4, #0x1A|162-6
5276|code|ITTT MI|66-191
5278|code|MOVMI           R2, #0x78 ; 'x'|120-34
5280|code|STRBMI          R2, [R3]|26-112
5282|code|ADDMI           R3, #1|1-51
5284|code|LSLS            R0, R4, #0x18|32-6
5286|code|ITTT MI|66-191
5288|code|MOVMI           R2, #0x74 ; 't'|116-34
5290|code|STRBMI          R2, [R3]|26-112
5292|code|ADDMI           R3, #1|1-51
5294|code|LSLS            R2, R4, #0x17|226-5
5296|code|ITTT MI|66-191
5298|code|MOVMI           R2, #0x54 ; 'T'|84-34
5300|code|STRBMI          R2, [R3]|26-112
5302|code|ADDMI           R3, #1|1-51
5304|code|LSLS            R0, R4, #0x1C|32-7
5306|code|ITTT MI|66-191
5308|code|MOVMI           R2, #0x6E ; 'n'|110-34
5310|code|STRBMI          R2, [R3]|26-112
5312|code|ADDMI           R3, #1|1-51
5314|code|LSLS            R2, R4, #0x1B|226-6
5316|code|ITTT MI|66-191
5318|code|MOVMI           R2, #0x4E ; 'N'|78-34
5320|code|STRBMI          R2, [R3]|26-112
5322|code|ADDMI           R3, #1|1-51
5324|code|LSLS            R0, R4, #0xE|160-3
5326|code|ITTT MI|66-191
5328|code|MOVMI           R2, #0x63 ; 'c'|99-34
5330|code|STRBMI          R2, [R3]|26-112
5332|code|ADDMI           R3, #1|1-51
5334|code|LSLS            R2, R4, #0xD|98-3
5336|code|ITTT MI|66-191
5338|code|MOVMI           R2, #0x43 ; 'C'|67-34
5340|code|STRBMI          R2, [R3]|26-112
5342|code|ADDMI           R3, #1|1-51
5344|code|LSLS            R0, R4, #0xC|32-3
5346|code|MOV             R0, R1|8-70
5348|code|ITTT MI|66-191
5350|code|MOVMI           R2, #0x6F ; 'o'|111-34
5352|code|STRBMI          R2, [R3]|26-112
5354|code|ADDMI           R3, #1|1-51
5356|code|LSLS            R2, R4, #0xB|226-2
5358|code|ITTT MI|66-191
5360|code|MOVMI           R2, #0x79 ; 'y'|121-34
5362|code|STRBMI          R2, [R3]|26-112
5364|code|ADDMI           R3, #1|1-51
5366|code|MOVS            R2, #0|0-34
5368|code|STRB            R2, [R3]|26-112
5370|code|POP.W           {R4}|93-248-4-75
5374|code|BX              LR|112-71
5376|code|LSLS            R3, R4, #0x1F|227-7
5378|code|ITTET MI|69-191
5380|code|ADDMI           R3, R1, #1|75-28
5382|code|MOVMI           R2, #0x72 ; 'r'|114-34
5384|code|MOVPL           R3, R1|11-70
5386|code|STRBMI          R2, [R1]|10-112
5388|code|LSLS            R0, R4, #0x1E|160-7
5390|code|ITTT MI|66-191
5392|code|MOVMI           R2, #0x77 ; 'w'|119-34
5394|code|STRBMI          R2, [R3]|26-112
5396|code|ADDMI           R3, #1|1-51
5398|code|LSLS            R2, R4, #0x1D|98-7
5400|code|ITTT MI|66-191
5402|code|MOVMI           R2, #0x61 ; 'a'|97-34
5404|code|STRBMI          R2, [R3]|26-112
5406|code|ADDMI           R3, #1|1-51
5408|code|B               loc_1490|182-231
5410|data|ALIGN 4|0-191
5412|code|LDR             R2, [R0,#8]|130-104
5414|code|LSLS            R3, R2, #0x1F|211-7
5416|code|ITTET MI|69-191
5418|code|ADDMI           R3, R1, #1|75-28
5420|code|MOVMI           R0, #0x66 ; 'f'|102-32
5422|code|MOVPL           R3, R1|11-70
5424|code|STRBMI          R0, [R1]|8-112
5426|code|LSLS            R0, R2, #0x1E|144-7
5428|code|ITTT MI|66-191
5430|code|MOVMI           R0, #0x64 ; 'd'|100-32
5432|code|STRBMI          R0, [R3]|24-112
5434|code|ADDMI           R3, #1|1-51
5436|code|LSLS            R0, R2, #0x1D|80-7
5438|code|ITTT MI|66-191
5440|code|MOVMI           R0, #0x6E ; 'n'|110-32
5442|code|STRBMI          R0, [R3]|24-112
5444|code|ADDMI           R3, #1|1-51
5446|code|LSLS            R0, R2, #0x1C|16-7
5448|code|ITTT MI|66-191
5450|code|MOVMI           R0, #0x69 ; 'i'|105-32
5452|code|STRBMI          R0, [R3]|24-112
5454|code|ADDMI           R3, #1|1-51
5456|code|LSLS            R0, R2, #0x1B|208-6
5458|code|ITTT MI|66-191
5460|code|MOVMI           R0, #0x53 ; 'S'|83-32
5462|code|STRBMI          R0, [R3]|24-112
5464|code|ADDMI           R3, #1|1-51
5466|code|LSLS            R0, R2, #0x1A|144-6
5468|code|ITTT MI|66-191
5470|code|MOVMI           R0, #0x46 ; 'F'|70-32
5472|code|STRBMI          R0, [R3]|24-112
5474|code|ADDMI           R3, #1|1-51
5476|code|LSLS            R0, R2, #0x19|80-6
5478|code|ITTT MI|66-191
5480|code|MOVMI           R0, #0x67 ; 'g'|103-32
5482|code|STRBMI          R0, [R3]|24-112
5484|code|ADDMI           R3, #1|1-51
5486|code|LSLS            R0, R2, #0x18|16-6
5488|code|ITTT MI|66-191
5490|code|MOVMI           R0, #0x4F ; 'O'|79-32
5492|code|STRBMI          R0, [R3]|24-112
5494|code|ADDMI           R3, #1|1-51
5496|code|LSLS            R0, R2, #0x17|208-5
5498|code|ITTT MI|66-191
5500|code|MOVMI           R0, #0x47 ; 'G'|71-32
5502|code|STRBMI          R0, [R3]|24-112
5504|code|ADDMI           R3, #1|1-51
5506|code|LSLS            R2, R2, #0x16|146-5
5508|code|MOV             R0, R1|8-70
5510|code|ITTT MI|66-191
5512|code|MOVMI           R2, #0x45 ; 'E'|69-34
5514|code|STRBMI          R2, [R3]|26-112
5516|code|ADDMI           R3, #1|1-51
5518|code|MOVS            R2, #0|0-34
5520|code|STRB            R2, [R3]|26-112
5522|code|BX              LR|112-71
5524|code|LDR             R3, [R0]|3-104
5526|code|CBZ             R2, loc_15BC|138-177
5528|code|CBZ             R3, loc_15F2|91-179
5530|code|CMP             R3, #1|1-43
5532|code|BEQ             loc_15F8|44-208
5534|code|CMP             R3, #2|2-43
5536|code|BEQ             loc_1608|50-208
5538|code|CMP             R3, #3|3-43
5540|code|IT NE|24-191
5542|code|MOVNE           R2, #0|0-34
5544|code|BNE             loc_15CA|15-209
5546|code|LDR             R3, =(aAlarm - 0x15B0); "ALARM"|25-75
5548|code|ADD             R3, PC; "ALARM"|123-68
5550|code|LDR             R0, [R3]; "ALLOW" ...|24-104
5552|code|MOV             R2, R1|10-70
5554|code|LDRH            R3, [R3,#4]; "W" ...|155-136
5556|code|STR             R0, [R1]|8-96
5558|code|MOV             R0, R2|16-70
5560|code|STRH            R3, [R1,#4]|139-128
5562|code|BX              LR|112-71
5564|code|CBNZ            R3, loc_15CE|59-185
5566|code|ADDS            R0, R1, #1|72-28
5568|code|MOVS            R3, #0x41 ; 'A'|65-35
5570|code|STRB            R3, [R1]|11-112
5572|code|MOV             R2, R1|10-70
5574|code|MOVS            R3, #0|0-35
5576|code|STRB            R3, [R0]|3-112
5578|code|MOV             R0, R2|16-70
5580|code|BX              LR|112-71
5582|code|CMP             R3, #1|1-43
5584|code|ITTT EQ|2-191
5586|code|ADDEQ           R0, R1, #1|72-28
5588|code|MOVEQ           R3, #0x44 ; 'D'|68-35
5590|code|STRBEQ          R3, [R1]|11-112
5592|code|BEQ             loc_15C4|244-208
5594|code|CMP             R3, #2|2-43
5596|code|ITTT EQ|2-191
5598|code|ADDEQ           R0, R1, #1|72-28
5600|code|MOVEQ           R3, #0x55 ; 'U'|85-35
5602|code|STRBEQ          R3, [R1]|11-112
5604|code|BEQ             loc_15C4|238-208
5606|code|CMP             R3, #3|3-43
5608|code|BNE             loc_15CA|239-209
5610|code|MOVS            R3, #0x4C ; 'L'|76-35
5612|code|ADDS            R0, R1, #1|72-28
5614|code|STRB            R3, [R1]|11-112
5616|code|B               loc_15C4|232-231
5618|code|LDR             R3, =(aAllow - 0x15F8); "ALLOW"|8-75
5620|code|ADD             R3, PC; "ALLOW"|123-68
5622|code|B               loc_15AE|218-231
5624|code|LDR             R3, =(aDeny - 0x1600); "DENY"|7-75
5626|code|MOV             R2, R1|10-70
5628|code|ADD             R3, PC; "DENY"|123-68
5630|code|LDR             R0, [R3]; "DENY"|24-104
5632|code|LDRB            R3, [R3,#(aDeny+4 - 0x23DC)]; ""|27-121
5634|code|STR             R0, [R1]|8-96
5636|code|STRB            R3, [R1,#4]|11-113
5638|code|B               loc_15CA|224-231
5640|code|LDR             R3, =(aAudit - 0x160E); "AUDIT"|4-75
5642|code|ADD             R3, PC; "AUDIT"|123-68
5644|code|B               loc_15AE|207-231
5646|data|ALIGN 0x10|0-191
5648|data|DCD aAlarm - 0x15B0; "ALARM"|60-14-0-0
5652|data|DCD aAllow - 0x15F8; "ALLOW"|220-13-0-0
5656|data|DCD aDeny - 0x1600; "DENY"|220-13-0-0
5660|data|DCD aAudit - 0x160E; "AUDIT"|214-13-0-0
5664|code|CBZ             R0, locret_1640|112-177
5666|code|PUSH            {R4,LR}|16-181
5668|code|MOV             R4, R0|4-70
5670|code|LDR             R1, [R0,#8]|129-104
5672|code|CBZ             R1, loc_1636|41-177
5674|code|MOV             R0, R4|32-70
5676|code|BL              sub_12C0|255-247-72-254
5680|code|LDR             R1, [R4,#8]|161-104
5682|code|CMP             R1, #0|0-41
5684|code|BNE             loc_162A|249-209
5686|code|MOV             R0, R4; ptr|32-70
5688|code|POP.W           {R4,LR}|189-232-16-64
5692|code|B.W             j_free|255-247-138-185
5696|code|BX              LR|112-71
5698|data|ALIGN 4|0-191
5700|code|PUSH            {R4,LR}|16-181
5702|code|MOV             R4, R0|4-70
5704|code|MOVS            R0, #0x10; size|16-32
5706|code|BLX             malloc|255-247-182-233
5710|code|CBZ             R0, locret_165E|48-177
5712|code|MOV             R3, R0|3-70
5714|code|MOVS            R2, #0|0-34
5716|code|STR             R4, [R0,#4]|68-96
5718|code|STR             R2, [R0]|2-96
5720|code|STR.W           R2, [R3,#8]!|67-248-8-47
5724|code|STR             R3, [R0,#0xC]|195-96
5726|code|POP             {R4,PC}|16-189
5728|code|PUSH.W          {R4-R8,LR}|45-233-240-65
5732|code|MOV             R7, R0|7-70
5734|code|MOV.W           R0, #0x19C; size|79-244-206-112
5738|code|MOV             R5, R1|13-70
5740|code|MOV             R8, R2|144-70
5742|code|MOV             R6, R3|30-70
5744|code|BLX             malloc|255-247-162-233
5748|code|MOV             R4, R0|4-70
5750|code|CBZ             R0, loc_16B4|232-177
5752|code|CMP             R5, #1|1-45
5754|code|STR             R5, [R0]|5-96
5756|code|IT EQ|8-191
5758|code|BICEQ.W         R6, R6, #0x90000|38-244-16-38
5762|code|STR.W           R8, [R0,#8]|192-248-8-128
5766|code|IT EQ|8-191
5768|code|BICEQ.W         R6, R6, #0x18|38-240-24-6
5772|code|CBZ             R7, loc_16AE|127-177
5774|code|MOVW            R5, #0x1FF|64-242-255-21
5778|code|MOV             R0, R4|32-70
5780|code|MOVT.W          R5, #0x1F|192-242-31-5
5784|code|LDR             R1, [SP,#0x18+arg_0]|6-153
5786|code|ANDS            R5, R6|53-64
5788|code|LDR             R2, [SP,#0x18+arg_4]|7-154
5790|code|STR             R5, [R4,#0xC]|229-96
5792|code|BL              sub_16C8|0-240-18-248
5796|code|CMP             R0, #0|0-40
5798|code|BLT             loc_16BE|10-219
5800|code|MOV             R0, R4|32-70
5802|code|POP.W           {R4-R8,PC}|189-232-240-129
5806|code|BIC.W           R6, R6, #0x40|38-240-64-6
5810|code|B               loc_168E|236-231
5812|code|BLX             __errno_location|255-247-158-233
5816|code|MOVS            R3, #0xC|12-35
5818|code|STR             R3, [R0]|3-96
5820|code|B               loc_16A8|244-231
5822|code|MOV             R0, R4; ptr|32-70
5824|code|MOVS            R4, #0|0-36
5826|code|BLX             free|255-247-74-233
5830|code|B               loc_16A8|239-231
5832|code|PUSH            {R3-R7,LR}|248-181
5834|code|MOV             R5, R0|5-70
5836|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x16D2)|30-75
5838|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5840|code|CBZ             R0, def_16DA; jumptable 000016DA default case|32-179
5842|code|MOV             R4, R1|12-70
5844|code|MOV             R6, R2|22-70
5846|code|CMP             R4, #3; switch 4 cases|3-44
5848|code|BHI             def_16DA; jumptable 000016DA default case|32-216
5850|code|TBB.W           [PC,R4]; switch jump|223-232-4-240
5854|data|DCB 0x27; jump table for switch statement|39
5855|data|DCB 2|2
5856|data|DCB 0x2F|47
5857|data|DCB 0x32|50
5858|code|LDR             R6, =(aOwner - 0x16E8); jumptable 000016DA case 1|26-78
5860|code|ADD             R6, PC; "OWNER@"|126-68
5862|code|ADD.W           R7, R5, #0x10|5-241-16-7
5866|code|MOVS            R1, #0; c|0-33
5868|code|MOV.W           R2, #0x182; n|79-244-193-114
5872|code|MOV             R0, R7; s|56-70
5874|code|BLX             memset|255-247-134-233
5878|code|MOV             R0, R7|56-70
5880|code|MOV             R1, R6|49-70
5882|code|MOV.W           R2, #0x182|79-244-193-114
5886|code|BLX             __strcpy_chk|255-247-80-233
5890|code|MOVS            R3, #0|0-35
5892|code|STR             R4, [R5,#4]|108-96
5894|code|MOV             R0, R3|24-70
5896|code|POP             {R3-R7,PC}|248-189
5898|code|LDR             R4, =(stderr_ptr - 0x12F64)|17-76
5900|code|MOVS            R1, #1; size|1-33
5902|code|LDR             R0, =(aErrorNamedUser - 0x1718); "ERROR: named user seems to have no name"...|17-72
5904|code|MOVS            R2, #0x29 ; ')'; n|41-34
5906|code|LDR             R3, [R3,R4]; stderr|27-89
5908|code|ADD             R0, PC; "ERROR: named user seems to have no name"...|120-68
5910|code|LDR             R3, [R3]; s|27-104
5912|code|BLX             fwrite|255-247-54-233
5916|code|BLX             __errno_location; jumptable 000016DA default case|255-247-106-233
5920|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
5924|code|MOVS            R2, #0x16|22-34
5926|code|STR             R2, [R0]|2-96
5928|code|MOV             R0, R3|24-70
5930|code|POP             {R3-R7,PC}|248-189
5932|code|CMP             R6, #0; jumptable 000016DA case 0|0-46
5934|code|BEQ             loc_170A|236-208
5936|code|MOV             R0, R6; s|48-70
5938|code|BLX             strlen|255-247-84-233
5942|code|CMP             R0, #0|0-40
5944|code|BGT             loc_16E6|213-220
5946|code|B               def_16DA; jumptable 000016DA default case|239-231
5948|code|LDR             R6, =(aGroup - 0x1742); jumptable 000016DA case 2|6-78
5950|code|ADD             R6, PC; "GROUP@"|126-68
5952|code|B               loc_16E6|209-231
5954|code|LDR             R6, =(aEveryone - 0x1748); jumptable 000016DA case 3|6-78
5956|code|ADD             R6, PC; "EVERYONE@"|126-68
5958|code|B               loc_16E6|206-231
5960|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x16D2|146-24-1-0
5964|data|DCD aOwner - 0x16E8; "OWNER@"|228-12-0-0
5968|data|DCD stderr_ptr - 0x12F64|128-0-0-0
5972|data|DCD aErrorNamedUser - 0x1718; "ERROR: named user seems to have no name"...|220-12-0-0
5976|data|DCD aGroup - 0x1742; "GROUP@"|130-12-0-0
5980|data|DCD aEveryone - 0x1748; "EVERYONE@"|112-12-0-0
5984|code|PUSH            {R3-R5,LR}|56-181
5986|code|MOV             R4, R1|12-70
5988|code|MOV             R5, R2|21-70
5990|code|B               loc_176A|0-224
5992|code|STRB            R5, [R0]|5-112
5994|code|MOV             R1, R4; c|33-70
5996|code|BLX             strchr|255-247-60-233
6000|code|CMP             R0, #0|0-40
6002|code|BNE             loc_1768|249-209
6004|code|POP             {R3-R5,PC}|56-189
6006|data|ALIGN 4|0-191
6008|code|PUSH            {R3-R5,LR}|56-181
6010|code|SUBS            R4, R0, #4|4-31
6012|code|ADD.W           R5, R0, #0xC|0-241-12-5
6016|code|LDR.W           R3, [R4,#4]!|84-248-4-63
6020|code|MOV             R0, R3; ptr|24-70
6022|code|CBZ             R3, loc_178C|11-177
6024|code|BLX             free|255-247-230-232
6028|code|CMP             R4, R5|172-66
6030|code|BNE             loc_1780|247-209
6032|code|POP             {R3-R5,PC}|56-189
6034|data|ALIGN 4|0-191
6036|code|PUSH.W          {R3-R11,LR}|45-233-248-79
6040|code|MOV             R5, R0|5-70
6042|code|CMP             R0, #0|0-40
6044|code|BEQ             loc_1840|80-208
6046|code|MOV             R3, R1|11-70
6048|code|MOVS            R4, #0|0-36
6050|code|STRB.W          R4, [R3],#1|3-248-1-75
6054|code|ADDS            R3, #1|1-51
6056|code|STRB            R4, [R1,#1]|76-112
6058|code|MOV             R7, R1|15-70
6060|code|STRB.W          R4, [R3],#1|3-248-1-75
6064|code|MOV             R2, R0|2-70
6066|code|STRB            R4, [R3]|28-112
6068|code|LDRB            R3, [R0]|3-120
6070|code|CMP             R3, #0|0-43
6072|code|BEQ             loc_1832|59-208
6074|code|CMP             R3, #0x3A ; ':'|58-43
6076|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
6080|code|IT EQ|8-191
6082|code|ADDEQ           R4, #1|1-52
6084|code|CMP             R3, #0|0-43
6086|code|BNE             loc_17BA|248-209
6088|code|CMP             R4, #3|3-44
6090|code|BNE             loc_1832|50-209
6092|code|SUB.W           R9, R7, #4|167-241-4-9
6096|code|ADD.W           R10, R7, #0xC|7-241-12-10
6100|code|MOV             R4, R3|28-70
6102|code|MOVS            R1, #0x3A ; ':'; c|58-33
6104|code|MOV             R0, R5; s|40-70
6106|code|MOV             R11, R5|171-70
6108|code|CBZ             R5, loc_17EA|45-177
6110|code|BLX             strchr|255-247-4-233
6114|code|ADD.W           R11, R0, #1|0-241-1-11
6118|code|CBZ             R0, loc_182E|16-179
6120|code|STRB            R4, [R0]|4-112
6122|code|MOV             R0, R5; s|40-70
6124|code|BLX             strlen|255-247-246-232
6128|code|MOV             R6, R0|6-70
6130|code|ADDS            R0, #1; size|1-48
6132|code|BLX             malloc|255-247-224-232
6136|code|MOV             R1, R5; src|41-70
6138|code|MOV             R2, R6; n|50-70
6140|code|MOV             R5, R11|93-70
6142|code|MOV             R8, R0|128-70
6144|code|STR.W           R0, [R9,#4]!|73-248-4-15
6148|code|CBZ             R0, loc_1832|168-177
6150|code|CMP             R6, #0|0-46
6152|code|BLE             loc_180E|1-221
6154|code|BLX             memcpy|255-247-172-232
6158|code|CMP             R9, R10|209-69
6160|code|STRB.W          R4, [R8,R6]|8-248-6-64
6164|code|BNE             loc_17D6|223-209
6166|code|LDR             R3, [R7]|59-104
6168|code|LDRB            R3, [R3]|27-120
6170|code|CBZ             R3, loc_1832|83-177
6172|code|LDR             R3, [R7,#8]|187-104
6174|code|LDRB            R3, [R3]|27-120
6176|code|CBZ             R3, loc_1832|59-177
6178|code|LDR             R3, [R7,#0xC]|251-104
6180|code|LDRB            R3, [R3]|27-120
6182|code|CBZ             R3, loc_1832|35-177
6184|code|MOVS            R0, #0|0-32
6186|code|POP.W           {R3-R11,PC}|189-232-248-143
6190|code|MOV             R11, R0|131-70
6192|code|B               loc_17EA|219-231
6194|code|MOV             R0, R7|56-70
6196|code|BL              sub_1778|255-247-160-255
6200|code|MOV             R0, #0xFFFFFFF4|111-240-11-0
6204|code|POP.W           {R3-R11,PC}|189-232-248-143
6208|code|MOV             R0, #0xFFFFFFEA|111-240-21-0
6212|code|POP.W           {R3-R11,PC}|189-232-248-143
6216|code|PUSH.W          {R4-R11,LR}|45-233-240-79
6220|code|SUB             SP, SP, #0x24|137-176
6222|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x185A)|200-77
6224|code|MOV             R9, R0|129-70
6226|code|LDR             R4, =(__stack_chk_guard_ptr - 0x12F64)|200-76
6228|code|MOVS            R2, #0|0-34
6230|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
6232|code|MOV             R8, R1|136-70
6234|code|MOVS            R1, #0xA|10-33
6236|code|LDR             R6, [R5,R4]; __stack_chk_guard|46-89
6238|code|LDR             R3, [R6]|51-104
6240|code|STR             R3, [SP,#0x48+var_2C]|7-147
6242|code|BL              sub_1760|255-247-125-255
6246|code|LDRB.W          R2, [R9]|153-248-0-32
6250|code|CMP             R2, #0|0-42
6252|code|IT NE|24-191
6254|code|CMPNE           R2, #0x23 ; '#'|35-42
6256|code|ITET EQ|10-191
6258|code|MOVEQ           R4, #1|1-36
6260|code|MOVNE           R4, #0|0-36
6262|code|MOVEQ           R0, #0|0-32
6264|code|BEQ             loc_191A|79-208
6266|code|MOV             R0, R9; s|72-70
6268|code|ADD             R7, SP, #0x48+var_3C|3-175
6270|code|BLX             strlen|255-247-174-232
6274|code|ADD.W           R11, R0, #1|0-241-1-11
6278|code|MOV             R0, R11; size|88-70
6280|code|BLX             malloc|255-247-150-232
6284|code|MOV             R10, R0|130-70
6286|code|CMP             R0, #0|0-40
6288|code|BEQ.W           loc_1B32|0-240-79-129
6292|code|MOV             R2, R11; n|90-70
6294|code|MOV             R1, R9; src|73-70
6296|code|BLX             memcpy|255-247-100-232
6300|code|MOV             R1, R7|57-70
6302|code|MOV             R0, R10; s|80-70
6304|code|BL              sub_1794|255-247-120-255
6308|code|MOV             R11, R0|131-70
6310|code|MOV             R0, R10; ptr|80-70
6312|code|BLX             free|255-247-86-232
6316|code|CMP.W           R11, #0|187-241-0-15
6320|code|BLT.W           loc_1B36|192-242-65-129
6324|code|LDR.W           R10, [SP,#0x48+s]|221-248-20-160
6328|code|MOV             R0, R10; s|80-70
6330|code|BLX             strlen|255-247-144-232
6334|code|CMP.W           R0, #0x182|176-245-193-127
6338|code|BHI             loc_1900|29-216
6340|code|LDR             R3, [SP,#0x48+var_3C]|3-155
6342|code|LDRB            R3, [R3]|27-120
6344|code|SUB.W           R2, R3, #0x41 ; 'A'; switch 21 cases|163-241-65-2
6348|code|CMP             R2, #0x14|20-42
6350|code|BHI.W           def_18D2; jumptable 000018D2 default case, cases 66,67,69-75,77-84|0-242-28-129
6354|code|TBH.W           [PC,R2,LSL#1]; switch jump|223-232-18-240
6358|data|DCW 0xB9; jump table for switch statement|185-0
6360|data|DCW 0x11A|26-1
6362|data|DCW 0x11A|26-1
6364|data|DCW 0xB6|182-0
6366|data|DCW 0x11A|26-1
6368|data|DCW 0x11A|26-1
6370|data|DCW 0x11A|26-1
6372|data|DCW 0x11A|26-1
6374|data|DCW 0x11A|26-1
6376|data|DCW 0x11A|26-1
6378|data|DCW 0x11A|26-1
6380|data|DCW 0xB3|179-0
6382|data|DCW 0x11A|26-1
6384|data|DCW 0x11A|26-1
6386|data|DCW 0x11A|26-1
6388|data|DCW 0x11A|26-1
6390|data|DCW 0x11A|26-1
6392|data|DCW 0x11A|26-1
6394|data|DCW 0x11A|26-1
6396|data|DCW 0x11A|26-1
6398|data|DCW 0x2A|42-0
6400|code|LDR             R0, =(stderr_ptr - 0x12F64)|157-72
6402|code|MOV             R3, R10|83-70
6404|code|LDR             R2, =(aPrincipalSIsTo - 0x190E); "Principal '%s' is too large.\n"|157-74
6406|code|MOVS            R1, #1|1-33
6408|code|LDR             R0, [R5,R0]; stderr|40-88
6410|code|ADD             R2, PC; "Principal '%s' is too large.\n"|122-68
6412|code|LDR             R0, [R0]|0-104
6414|code|BLX             __fprintf_chk|255-247-140-232
6418|code|MOV             R0, R7|56-70
6420|code|BL              sub_1778|255-247-48-255
6424|code|MOV             R0, R4|32-70
6426|code|LDR             R2, [SP,#0x48+var_2C]|7-154
6428|code|LDR             R3, [R6]|51-104
6430|code|CMP             R2, R3|154-66
6432|code|BNE.W           loc_1B6A|64-240-35-129
6436|code|ADD             SP, SP, #0x24 ; '$'|9-176
6438|code|POP.W           {R4-R11,PC}|189-232-240-143
6442|code|MOV.W           R9, #2; jumptable 000018D2 case 85|79-240-2-9
6446|code|LDR             R4, [SP,#0x48+var_38]|4-156
6448|code|MOV             R0, R4; s|32-70
6450|code|BLX             strlen|255-247-84-232
6454|code|CMP             R0, #0|0-40
6456|code|BLE.W           loc_1B60|64-243-18-129
6460|code|ADD             R0, R4|32-68
6462|code|MOV.W           R11, #0|79-240-0-11
6466|code|LDRB.W          R3, [R4],#1|20-248-1-59
6470|code|SUB.W           R1, R3, #0x45 ; 'E'; switch 42 cases|163-241-69-1
6474|code|CMP             R1, #0x29|41-41
6476|code|BHI             def_194E; jumptable 0000194E default case, cases 72-78,80-82,84-99,101,104,106-109|108-216
6478|code|TBB.W           [PC,R1]; switch jump|223-232-1-240
6482|data|DCB 0x68; jump table for switch statement|104
6483|data|DCB 0x65|101
6484|data|DCB 0x62|98
6485|data|DCB 0x6B|107
6486|data|DCB 0x6B|107
6487|data|DCB 0x6B|107
6488|data|DCB 0x6B|107
6489|data|DCB 0x6B|107
6490|data|DCB 0x6B|107
6491|data|DCB 0x6B|107
6492|data|DCB 0x5F|95
6493|data|DCB 0x6B|107
6494|data|DCB 0x6B|107
6495|data|DCB 0x6B|107
6496|data|DCB 0x5C|92
6497|data|DCB 0x6B|107
6498|data|DCB 0x6B|107
6499|data|DCB 0x6B|107
6500|data|DCB 0x6B|107
6501|data|DCB 0x6B|107
6502|data|DCB 0x6B|107
6503|data|DCB 0x6B|107
6504|data|DCB 0x6B|107
6505|data|DCB 0x6B|107
6506|data|DCB 0x6B|107
6507|data|DCB 0x6B|107
6508|data|DCB 0x6B|107
6509|data|DCB 0x6B|107
6510|data|DCB 0x6B|107
6511|data|DCB 0x6B|107
6512|data|DCB 0x6B|107
6513|data|DCB 0x59|89
6514|data|DCB 0x6B|107
6515|data|DCB 0x56|86
6516|data|DCB 0x53|83
6517|data|DCB 0x6B|107
6518|data|DCB 0x50|80
6519|data|DCB 0x6B|107
6520|data|DCB 0x6B|107
6521|data|DCB 0x6B|107
6522|data|DCB 0x6B|107
6523|data|DCB 0x15|21
6524|code|ORR.W           R11, R11, #4; jumptable 0000194E case 110|75-240-4-11
6528|code|CMP             R4, R0|132-66
6530|code|BNE             loc_1942|222-209
6532|code|LDR             R1, =(aGroup - 0x198C); "GROUP@"|126-73
6534|code|MOV             R0, R10; s1|80-70
6536|code|ADD             R1, PC; "GROUP@"|121-68
6538|code|BLX             strcmp|254-247-210-239
6542|code|CBNZ            R0, loc_1994|8-185
6544|code|ORR.W           R11, R11, #0x40|75-240-64-11
6548|code|LDR             R4, [SP,#0x48+var_30]|6-156
6550|code|MOV             R0, R4; s|32-70
6552|code|BLX             strlen|255-247-32-232
6556|code|CMP             R0, #0|0-40
6558|code|BLE.W           loc_1B66|64-243-226-128
6562|code|MOV             R2, R4|34-70
6564|code|ADD             R0, R4|32-68
6566|code|MOVS            R4, #0|0-36
6568|code|LDRB.W          R3, [R2],#1|18-248-1-59
6572|code|SUB.W           R1, R3, #0x43 ; 'C'; switch 55 cases|163-241-67-1
6576|code|CMP             R1, #0x36|54-41
6578|code|BHI.W           def_19B6; jumptable 000019B6 default case, cases 69-77,79-81,83,85,86,89-96,98,101-109,112,113,115,117,118|0-242-180-128
6582|code|TBB.W           [PC,R1]; switch jump|223-232-1-240
6586|data|DCB 0x4A; jump table for switch statement|74
6587|data|DCB 0x8D|141
6588|data|DCB 0xB2|178
6589|data|DCB 0xB2|178
6590|data|DCB 0xB2|178
6591|data|DCB 0xB2|178
6592|data|DCB 0xB2|178
6593|data|DCB 0xB2|178
6594|data|DCB 0xB2|178
6595|data|DCB 0xB2|178
6596|data|DCB 0xB2|178
6597|data|DCB 0x8A|138
6598|data|DCB 0xB2|178
6599|data|DCB 0xB2|178
6600|data|DCB 0xB2|178
6601|data|DCB 0x85|133
6602|data|DCB 0xB2|178
6603|data|DCB 0x82|130
6604|data|DCB 0xB2|178
6605|data|DCB 0xB2|178
6606|data|DCB 0x7D|125
6607|data|DCB 0x78|120
6608|data|DCB 0xB2|178
6609|data|DCB 0xB2|178
6610|data|DCB 0xB2|178
6611|data|DCB 0xB2|178
6612|data|DCB 0xB2|178
6613|data|DCB 0xB2|178
6614|data|DCB 0xB2|178
6615|data|DCB 0xB2|178
6616|data|DCB 0x75|117
6617|data|DCB 0xB2|178
6618|data|DCB 0x72|114
6619|data|DCB 0x9C|156
6620|data|DCB 0xB2|178
6621|data|DCB 0xB2|178
6622|data|DCB 0xB2|178
6623|data|DCB 0xB2|178
6624|data|DCB 0xB2|178
6625|data|DCB 0xB2|178
6626|data|DCB 0xB2|178
6627|data|DCB 0xB2|178
6628|data|DCB 0xB2|178
6629|data|DCB 0x99|153
6630|data|DCB 0x96|150
6631|data|DCB 0xB2|178
6632|data|DCB 0xB2|178
6633|data|DCB 0x93|147
6634|data|DCB 0xB2|178
6635|data|DCB 0xA2|162
6636|data|DCB 0xB2|178
6637|data|DCB 0xB2|178
6638|data|DCB 0x9F|159
6639|data|DCB 0xA5|165
6640|data|DCB 0x6F|111
6641|data|ALIGN 2|0
6642|code|ORR.W           R11, R11, #8; jumptable 0000194E case 105|75-240-8-11
6646|code|B               loc_1980|195-231
6648|code|ORR.W           R11, R11, #0x40; jumptable 0000194E case 103|75-240-64-11
6652|code|B               loc_1980|192-231
6654|code|ORR.W           R11, R11, #1; jumptable 0000194E case 102|75-240-1-11
6658|code|B               loc_1980|189-231
6660|code|ORR.W           R11, R11, #2; jumptable 0000194E case 100|75-240-2-11
6664|code|B               loc_1980|186-231
6666|code|ORR.W           R11, R11, #0x10; jumptable 0000194E case 83|75-240-16-11
6670|code|B               loc_1980|183-231
6672|code|ORR.W           R11, R11, #0x80; jumptable 0000194E case 79|75-240-128-11
6676|code|B               loc_1980|180-231
6678|code|ORR.W           R11, R11, #0x100; jumptable 0000194E case 71|75-244-128-123
6682|code|B               loc_1980|177-231
6684|code|ORR.W           R11, R11, #0x20; jumptable 0000194E case 70|75-240-32-11
6688|code|B               loc_1980|174-231
6690|code|ORR.W           R11, R11, #0x200; jumptable 0000194E case 69|75-244-0-123
6694|code|B               loc_1980|171-231
6696|code|LDR             R0, =(stderr_ptr - 0x12F64); jumptable 0000194E default case, cases 72-78,80-82,84-99,101,104,106-109|83-72
6698|code|MOVS            R1, #1|1-33
6700|code|LDR             R2, =(aBadAceFlagC - 0x1A36); "Bad Ace Flag:%c\n"|85-74
6702|code|MOVS            R4, #0|0-36
6704|code|LDR             R0, [R5,R0]; stderr|40-88
6706|code|ADD             R2, PC; "Bad Ace Flag:%c\n"|122-68
6708|code|LDR             R0, [R0]|0-104
6710|code|BLX             __fprintf_chk|254-247-248-239
6714|code|B               loc_1912|106-231
6716|code|MOV.W           R9, #3; jumptable 000018D2 case 76|79-240-3-9
6720|code|B               loc_192E|117-231
6722|code|MOV.W           R9, #1; jumptable 000018D2 case 68|79-240-1-9
6726|code|B               loc_192E|114-231
6728|code|MOV.W           R9, #0; jumptable 000018D2 case 65|79-240-0-9
6732|code|B               loc_192E|111-231
6734|code|ORR.W           R4, R4, #0x40000; jumptable 000019B6 case 67|68-244-128-36
6738|code|CMP             R2, R0|130-66
6740|code|BNE             loc_19A8|168-209
6742|code|MOV             R0, R10|80-70
6744|code|BL              sub_1064|255-247-4-251
6748|code|MOV             R3, R4|35-70
6750|code|LDR             R4, [SP,#0x48+s]|5-156
6752|code|MOV             R1, R9|73-70
6754|code|MOV             R2, R11|90-70
6756|code|STMEA.W         SP, {R0,R4}|141-232-17-0
6760|code|MOV             R0, R8|64-70
6762|code|BL              sub_1660|255-247-249-253
6766|code|MOV             R4, R0|4-70
6768|code|CMP             R0, #0|0-40
6770|code|BEQ             loc_1B4C|107-208
6772|code|ADDS            R0, #0x10; s|16-48
6774|code|BLX             strlen|254-247-178-239
6778|code|ADDS            R0, #0xC|12-48
6780|code|CMP.W           R0, #0x19C|176-245-206-127
6784|code|BCC.W           loc_1912|255-244-71-175
6788|code|LDR             R3, =(stderr_ptr - 0x12F64)|60-75
6790|code|MOVS            R1, #1; size|1-33
6792|code|LDR             R0, =(aAceIsTooLarge - 0x1A92); "ACE is too large.\n"|63-72
6794|code|MOVS            R2, #0x12; n|18-34
6796|code|LDR             R3, [R5,R3]; stderr|235-88
6798|code|ADD             R0, PC; "ACE is too large.\n"|120-68
6800|code|LDR             R3, [R3]; s|27-104
6802|code|BLX             fwrite|254-247-122-239
6806|code|B               loc_1912|60-231
6808|code|ORR.W           R4, R4, #0x100000; jumptable 000019B6 case 121|68-244-128-20
6812|code|B               loc_1A52|217-231
6814|code|ORR.W           R4, R4, #0x20000; jumptable 000019B6 case 99|68-244-0-52
6818|code|B               loc_1A52|214-231
6820|code|ORR.W           R4, R4, #4; jumptable 000019B6 case 97|68-240-4-4
6824|code|B               loc_1A52|211-231
6826|code|ORR.W           R4, R4, #0x120000; jumptable 000019B6 case 88|68-244-144-20
6830|code|ORR.W           R4, R4, #0xA0|68-240-160-4
6834|code|B               loc_1A52|206-231
6836|code|ORR.W           R4, R4, #0x160000; jumptable 000019B6 case 87|68-244-176-20
6840|code|ORR.W           R4, R4, #0x1D6|68-244-235-116
6844|code|B               loc_1A52|201-231
6846|code|ORR.W           R4, R4, #0x100; jumptable 000019B6 case 84|68-244-128-116
6850|code|B               loc_1A52|198-231
6852|code|ORR.W           R4, R4, #0x120000; jumptable 000019B6 case 82|68-244-144-20
6856|code|ORR.W           R4, R4, #0x89|68-240-137-4
6860|code|B               loc_1A52|193-231
6862|code|ORR.W           R4, R4, #0x10; jumptable 000019B6 case 78|68-240-16-4
6866|code|B               loc_1A52|190-231
6868|code|CMP.W           R8, #0; jumptable 000019B6 case 68|184-241-0-15
6872|code|BEQ             loc_1A52|187-208
6874|code|ORR.W           R4, R4, #0x40|68-240-64-4
6878|code|B               loc_1A52|184-231
6880|code|ORR.W           R4, R4, #1; jumptable 000019B6 case 114|68-240-1-4
6884|code|B               loc_1A52|181-231
6886|code|ORR.W           R4, R4, #0x80000; jumptable 000019B6 case 111|68-244-0-36
6890|code|B               loc_1A52|178-231
6892|code|ORR.W           R4, R4, #8; jumptable 000019B6 case 110|68-240-8-4
6896|code|B               loc_1A52|175-231
6898|code|ORR.W           R4, R4, #0x10000; jumptable 000019B6 case 100|68-244-128-52
6902|code|B               loc_1A52|172-231
6904|code|ORR.W           R4, R4, #2; jumptable 000019B6 case 119|68-240-2-4
6908|code|B               loc_1A52|169-231
6910|code|ORR.W           R4, R4, #0x80; jumptable 000019B6 case 116|68-240-128-4
6914|code|B               loc_1A52|166-231
6916|code|ORR.W           R4, R4, #0x20; jumptable 000019B6 case 120|68-240-32-4
6920|code|B               loc_1A52|163-231
6922|code|LDR             R0, =(stderr_ptr - 0x12F64); jumptable 000018D2 default case, cases 66,67,69-75,77-84|27-72
6924|code|MOVS            R1, #1|1-33
6926|code|LDR             R2, =(aBadAceTypeC - 0x1B18); "Bad Ace Type:%c\n"|31-74
6928|code|MOVS            R4, #0|0-36
6930|code|LDR             R0, [R5,R0]; stderr|40-88
6932|code|ADD             R2, PC; "Bad Ace Type:%c\n"|122-68
6934|code|LDR             R0, [R0]|0-104
6936|code|BLX             __fprintf_chk|254-247-134-239
6940|code|B               loc_1912|249-230
6942|code|LDR             R0, =(stderr_ptr - 0x12F64); jumptable 000019B6 default case, cases 69-77,79-81,83,85,86,89-96,98,101-109,112,113,115,117,118|22-72
6944|code|MOVS            R1, #1|1-33
6946|code|LDR             R2, =(aBadAceMaskC - 0x1B2C); "Bad Ace Mask:%c\n"|27-74
6948|code|MOVS            R4, #0|0-36
6950|code|LDR             R0, [R5,R0]; stderr|40-88
6952|code|ADD             R2, PC; "Bad Ace Mask:%c\n"|122-68
6954|code|LDR             R0, [R0]|0-104
6956|code|BLX             __fprintf_chk|254-247-124-239
6960|code|B               loc_1912|239-230
6962|code|MOV             R4, R0|4-70
6964|code|B               loc_1912|237-230
6966|code|LDR             R0, =(stderr_ptr - 0x12F64)|16-72
6968|code|MOV             R3, R9|75-70
6970|code|LDR             R2, =(aScanningAceStr - 0x1B44); "Scanning ACE string '%s' failed.\n"|22-74
6972|code|MOVS            R1, #1|1-33
6974|code|LDR             R0, [R5,R0]; stderr|40-88
6976|code|ADD             R2, PC; "Scanning ACE string '%s' failed.\n"|122-68
6978|code|LDR             R0, [R0]|0-104
6980|code|BLX             __fprintf_chk|254-247-112-239
6984|code|MOV             R0, R4|32-70
6986|code|B               loc_191A|230-230
6988|code|LDR             R3, =(stderr_ptr - 0x12F64)|10-75
6990|code|MOVS            R1, #1; size|1-33
6992|code|LDR             R0, =(aAceIsNull - 0x1B5A); "ACE is NULL.\n"|17-72
6994|code|MOVS            R2, #0xD; n|13-34
6996|code|LDR             R3, [R5,R3]; stderr|235-88
6998|code|ADD             R0, PC; "ACE is NULL.\n"|120-68
7000|code|LDR             R3, [R3]; s|27-104
7002|code|BLX             fwrite|254-247-22-239
7006|code|B               loc_1912|216-230
7008|code|MOV.W           R11, #0|79-240-0-11
7012|code|B               loc_1984|14-231
7014|code|MOVS            R4, #0|0-36
7016|code|B               loc_1A56|117-231
7018|code|BLX             __stack_chk_fail|254-247-2-239
7022|data|ALIGN 0x10|0-191
7024|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x185A|10-23-1-0
7028|data|DCD __stack_chk_guard_ptr - 0x12F64|124-0-0-0
7032|data|DCD stderr_ptr - 0x12F64|128-0-0-0
7036|data|DCD aPrincipalSIsTo - 0x190E; "Principal '%s' is too large.\n"|54-11-0-0
7040|data|DCD aGroup - 0x198C; "GROUP@"|56-10-0-0
7044|data|DCD aBadAceFlagC - 0x1A36; "Bad Ace Flag:%c\n"|66-10-0-0
7048|data|DCD aAceIsTooLarge - 0x1A92; "ACE is too large.\n"|30-10-0-0
7052|data|DCD aBadAceTypeC - 0x1B18; "Bad Ace Type:%c\n"|76-9-0-0
7056|data|DCD aBadAceMaskC - 0x1B2C; "Bad Ace Mask:%c\n"|96-9-0-0
7060|data|DCD aScanningAceStr - 0x1B44; "Scanning ACE string '%s' failed.\n"|220-8-0-0
7064|data|DCD aAceIsNull - 0x1B5A; "ACE is NULL.\n"|70-9-0-0
7068|code|PUSH.W          {R3-R9,LR}|45-233-248-67
7072|code|MOV             R7, R0|7-70
7074|code|LDR             R6, =(off_12E54 - 0x1BAE)|12-78
7076|code|MOV             R8, R1|136-70
7078|code|LDR             R5, =(off_12E50 - 0x1BB4)|12-77
7080|code|MOV             R9, R2|145-70
7082|code|ADD             R6, PC; off_12E54|126-68
7084|code|BLX             .init_proc|254-247-170-238
7088|code|ADD             R5, PC; off_12E50|125-68
7090|code|SUBS            R6, R6, R5|118-27
7092|code|ASRS            R6, R6, #2|182-16
7094|code|BEQ             locret_1BCE|10-208
7096|code|SUBS            R5, #4|4-61
7098|code|MOVS            R4, #0|0-36
7100|code|ADDS            R4, #1|1-52
7102|code|LDR.W           R3, [R5,#4]!|85-248-4-63
7106|code|MOV             R0, R7|56-70
7108|code|MOV             R1, R8|65-70
7110|code|MOV             R2, R9|74-70
7112|code|BLX             R3|152-71
7114|code|CMP             R4, R6|180-66
7116|code|BNE             loc_1BBC|246-209
7118|code|POP.W           {R3-R9,PC}|189-232-248-131
7122|data|ALIGN 4|0-191
7124|data|DCD off_12E54 - 0x1BAE|166-18-1-0
7128|data|DCD off_12E50 - 0x1BB4|156-18-1-0
7132|code|BX              LR|112-71
7134|data|ALIGN 0x10|0-191
7136|code|PUSH            {R3,LR}; _fini|8-64-45-233
7140|code|POP             {R3,PC}|8-128-189-232
9420|data|ALIGN 0x10|0-0-0-0
77392|data|DCD sub_C74+1|117-12-0-0
77396|data|DCD sub_C34+1|53-12-0-0
77400|data|DCD 0|0-0-0-0
77404|data|Elf32_Dyn <1, <1>>; DT_NEEDED libattr.so.1|1-0-0-0-1-0-0-0
77412|data|Elf32_Dyn <1, <0x70>>; DT_NEEDED libc.so.6|1-0-0-0-112-0-0-0
77420|data|Elf32_Dyn <1, <0x16A>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-106-1-0-0
77428|data|Elf32_Dyn <0xC, <0x904>>; DT_INIT|12-0-0-0-4-9-0-0
77436|data|Elf32_Dyn <0xD, <0x1BE0>>; DT_FINI|13-0-0-0-224-27-0-0
77444|data|Elf32_Dyn <0x19, <0x12E50>>; DT_INIT_ARRAY|25-0-0-0-80-46-1-0
77452|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77460|data|Elf32_Dyn <0x1A, <0x12E54>>; DT_FINI_ARRAY|26-0-0-0-84-46-1-0
77468|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77476|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77484|data|Elf32_Dyn <5, <0x504>>; DT_STRTAB|5-0-0-0-4-5-0-0
77492|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77500|data|Elf32_Dyn <0xA, <0x20A>>; DT_STRSZ|10-0-0-0-10-2-0-0
77508|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77516|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77524|data|Elf32_Dyn <3, <0x12F64>>; DT_PLTGOT|3-0-0-0-100-47-1-0
77532|data|Elf32_Dyn <2, <0xC8>>; DT_PLTRELSZ|2-0-0-0-200-0-0-0
77540|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77548|data|Elf32_Dyn <0x17, <0x83C>>; DT_JMPREL|23-0-0-0-60-8-0-0
77556|data|Elf32_Dyn <0x11, <0x7CC>>; DT_REL|17-0-0-0-204-7-0-0
77564|data|Elf32_Dyn <0x12, <0x70>>; DT_RELSZ|18-0-0-0-112-0-0-0
77572|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77580|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77588|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77596|data|Elf32_Dyn <0x6FFFFFFE, <0x76C>>; DT_VERNEED|254-255-255-111-108-7-0-0
77604|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
77612|data|Elf32_Dyn <0x6FFFFFF0, <0x70E>>; DT_VERSYM|240-255-255-111-14-7-0-0
77620|data|Elf32_Dyn <0x6FFFFFFA, <6>>; DT_RELCOUNT|250-255-255-111-6-0-0-0
77628|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77636|data|ALIGN 8|0-0-0-0
77668|data|DCD stru_12E5C|92-46-1-0
77672|data|DCD 0|0-0-0-0
77676|data|DCD dword_0|0-0-0-0
77680|data|DCD __imp_getxattr|20-48-1-0
77684|data|DCD __imp_strcmp|24-48-1-0
77688|data|DCD __imp___cxa_finalize|28-48-1-0
77692|data|DCD __imp_fflush|32-48-1-0
77696|data|DCD __imp_free|36-48-1-0
77700|data|DCD __imp_memcpy|44-48-1-0
77704|data|DCD __imp___stack_chk_fail|48-48-1-0
77708|data|DCD __imp_perror|52-48-1-0
77712|data|DCD __imp_fwrite|60-48-1-0
77716|data|DCD __imp_strcpy|64-48-1-0
77720|data|DCD __imp___strcpy_chk|68-48-1-0
77724|data|DCD __imp_puts|72-48-1-0
77728|data|DCD __imp_malloc|76-48-1-0
77732|data|DCD __imp___libc_start_main|80-48-1-0
77736|data|DCD __imp___gmon_start__|132-48-1-0
77740|data|DCD __imp_strlen|84-48-1-0
77744|data|DCD __imp_strchr|88-48-1-0
77748|data|DCD __imp___errno_location|92-48-1-0
77752|data|DCD __imp_memset|96-48-1-0
77756|data|DCD __imp___xpg_basename|100-48-1-0
77760|data|DCD __imp___printf_chk|104-48-1-0
77764|data|DCD __imp___fprintf_chk|108-48-1-0
77768|data|DCD __imp___xstat64|116-48-1-0
77772|data|DCD __imp_strncmp|120-48-1-0
77776|data|DCD __imp_abort|124-48-1-0
77780|data|DCD __libc_csu_fini+1|221-27-0-0
77784|data|DCD __imp___cxa_finalize|28-48-1-0
77788|data|DCD _ITM_deregisterTMCloneTable|128-48-1-0
77792|data|DCD __stack_chk_guard|40-48-1-0
77796|data|DCD stderr|56-48-1-0
77800|data|DCD __imp___gmon_start__|132-48-1-0
77804|data|DCD __libc_csu_init+1|157-27-0-0
77808|data|DCD stdout|112-48-1-0
77812|data|DCD main+1|89-10-0-0
77816|data|DCD _Jv_RegisterClasses|136-48-1-0
77820|data|DCD _ITM_registerTMCloneTable|140-48-1-0
77832|data|% 1; Alternative name is '__bss_start'|255
77833|data|ALIGN 4|255-255-255
