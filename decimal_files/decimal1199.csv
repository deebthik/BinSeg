address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|197-39-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0xC398; SHT file offset|152-195-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0xB964; File offset|100-185-0-0
60|data|DCD unk_B964; Virtual address|100-185-0-0
64|data|DCD 0xB964; Physical address|100-185-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0xB970; Size in file image|112-185-0-0
168|data|DCD 0xB970; Size in memory image|112-185-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0xBC90; File offset|144-188-0-0
188|data|DCD off_1BC90; Virtual address|144-188-1-0
192|data|DCD 0x1BC90; Physical address|144-188-1-0
196|data|DCD 0x5E0; Size in file image|224-5-0-0
200|data|DCD 0x1664; Size in memory image|100-22-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0xBC9C; File offset|156-188-0-0
220|data|DCD stru_1BC9C; Virtual address|156-188-1-0
224|data|DCD 0x1BC9C; Physical address|156-188-1-0
228|data|DCD 0x128; Size in file image|40-1-0-0
232|data|DCD 0x128; Size in memory image|40-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0xBC90; File offset|144-188-0-0
316|data|DCD off_1BC90; Virtual address|144-188-1-0
320|data|DCD 0x1BC90; Physical address|144-188-1-0
324|data|DCD 0x370; Size in file image|112-3-0-0
328|data|DCD 0x370; Size in memory image|112-3-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xB1, 0xA7, 0xA8, 0xF1, 0xC2, 0x7B, 0x6E, 0x7A, 0x25; Desc|177-167-168-241-194-123-110-122-37-107-87-110-171-210-36-207-187-59-231-81
436|data|DCD 0x25|37-0-0-0
440|data|DCD 0x71|113-0-0-0
444|data|DCD 8|8-0-0-0
448|data|DCD 8|8-0-0-0
452|data|DCD 0x2010B481, 0xA00C128, 0x83008028, 0xE050868A, 0x30010A00|129-180-16-32-40-193-0-10-40-128-0-131-138-134-80-224-0-10-1-48-11-97-164-173-7-40-11-5-2-45-8-0
484|data|DCD 0x71, 0x72, 0, 0, 0x73, 0x74, 0x75, 0x76, 0, 0, 0x79|113-0-0-0-114-0-0-0-0-0-0-0-0-0-0-0-115-0-0-0-116-0-0-0-117-0-0-0-118-0-0-0-0-0-0-0-0-0-0-0-121-0-0-0-122-0-0-0-123-0-0-0-124-0-0-0-125-0-0-0-128-0-0-0-129-0-0-0-131-0-0-0-0-0-0-0-0-0-0-0-132-0-0-0-135-0-0-0-0-0-0-0-0-0-0-0-136-0-0-0-137-0-0-0-138-0-0-0-0-0-0-0-0-0-0-0-139-0-0-0-140-0-0-0-142-0-0-0-143-0-0-0-144-0-0-0-146-0-0-0-147-0-0-0-149-0-0-0
632|data|DCD 0x2A63ED1D, 0x20D51E6F, 0x654DD5A1, 0xEEFD3EB, 0xE834AF01|29-237-99-42-111-30-213-32-161-213-77-101-235-211-239-14-1-175-52-232-56-197-150-241-218-205-227-158-137-221-167-14-107-9-67-214-125-65-213-68-99-103-249-83-7-106-32-159-12-20-226-158-36-78-98-240-139-144-26-159-217-2-14-127-210-240-78-208-89-239-151-121-97-73-84-53-88-191-196-96-106-127-154-124-179-189-83-55-41-15-239-213-217-113-88-28-187-227-146-124-225-203-40-116-161-151-100-216-66-69-213-236-233-109-1-130-169-104-220-245-193-128-169-181-34-155-232-152-203-48-11-228-139-220-224-198-190-218-87-27-185-141-241-14-118-84-60-148-175-65-189-65
784|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
800|data|Elf32_Sym <byte_C80 - byte_C80, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
816|data|Elf32_Sym <byte_C80 - byte_C80, dword_1BC98, 0, 3, 0, 0x14>|0-0-0-0-152-188-1-0-0-0-0-0-3-0-20-0
832|data|Elf32_Sym <aPthreadMutexUn - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|109-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
848|data|Elf32_Sym <aRaise - byte_C80, dword_0, 0, 0x12, 0, 0>; "raise"|39-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
864|data|Elf32_Sym <aSetbuf - byte_C80, dword_0, 0, 0x12, 0, 0>; "setbuf"|145-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
880|data|Elf32_Sym <aStrcmp - byte_C80, dword_0, 0, 0x12, 0, 0>; "strcmp"|152-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
896|data|Elf32_Sym <aCxaFinalize - byte_C80, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|122-4-0-0-0-0-0-0-0-0-0-0-34-0-0-0
912|data|Elf32_Sym <aItmDeregistert - byte_C80, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|17-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
928|data|Elf32_Sym <aIsoc99Fscanf - byte_C80, dword_0, 0, 0x12, 0, 0>; "__isoc99_fscanf"|247-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
944|data|Elf32_Sym <aFopen - byte_C80, dword_0, 0, 0x12, 0, 0>; "fopen"|80-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
960|data|Elf32_Sym <aRead - byte_C80, dword_0, 0, 0x12, 0, 0>; "read"|11-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
976|data|Elf32_Sym <aFflush - byte_C80, dword_0, 0, 0x12, 0, 0>; "fflush"|55-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
992|data|Elf32_Sym <aWattrOn - byte_C80, dword_0, 0, 0x12, 0, 0>; "wattr_on"|101-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1008|data|Elf32_Sym <aHasColors - byte_C80, dword_0, 0, 0x12, 0, 0>; "has_colors"|163-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1024|data|Elf32_Sym <aWaddch - byte_C80, dword_0, 0, 0x12, 0, 0>; "waddch"|87-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1040|data|Elf32_Sym <aFree - byte_C80, dword_0, 0, 0x12, 0, 0>; "free"|186-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1056|data|Elf32_Sym <aAcsMap - byte_C80, dword_0, 0, 0x11, 0, 0>; "acs_map"|253-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1072|data|Elf32_Sym <aInitColor - byte_C80, dword_0, 0, 0x12, 0, 0>; "init_color"|127-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1088|data|Elf32_Sym <aPthreadMutexLo - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|248-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1104|data|Elf32_Sym <aNocbreak+2 - byte_C80, dword_0, 0, 0x12, 0, 0>; "cbreak"|55-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1120|data|Elf32_Sym <aPedDeviceGetNe - byte_C80, dword_0, 0, 0x12, 0, 0>; "ped_device_get_next"|65-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1136|data|Elf32_Sym <aStackChkGuard - byte_C80, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|211-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1152|data|Elf32_Sym <aVsnprintfChk - byte_C80, dword_0, 0, 0x12, 0, 0>; "__vsnprintf_chk"|21-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1168|data|Elf32_Sym <aMemcpy - byte_C80, dword_0, 0, 0x12, 0, 0>; "memcpy"|7-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1184|data|Elf32_Sym <aSigwait - byte_C80, dword_0, 0, 0x12, 0, 0>; "sigwait"|190-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1200|data|Elf32_Sym <aGmtime+2 - byte_C80, dword_0, 0, 0x12, 0, 0>; "time"|168-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1216|data|Elf32_Sym <aLseek - byte_C80, dword_0, 0, 0x12, 0, 0>; "lseek"|214-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1232|data|Elf32_Sym <aMemcmp - byte_C80, dword_0, 0, 0x12, 0, 0>; "memcmp"|209-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1248|data|Elf32_Sym <aHidePanel - byte_C80, dword_0, 0, 0x12, 0, 0>; "hide_panel"|215-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1264|data|Elf32_Sym <aWborder - byte_C80, dword_0, 0, 0x12, 0, 0>; "wborder"|155-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1280|data|Elf32_Sym <aOptind - byte_C80, dword_0, 0, 0x11, 0, 0>; "optind"|86-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1296|data|Elf32_Sym <aWbkgdset - byte_C80, dword_0, 0, 0x12, 0, 0>; "wbkgdset"|235-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1312|data|Elf32_Sym <aInitPair - byte_C80, dword_0, 0, 0x12, 0, 0>; "init_pair"|217-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1328|data|Elf32_Sym <aStackChkFail - byte_C80, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|129-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1344|data|Elf32_Sym <aWrefresh - byte_C80, dword_0, 0, 0x12, 0, 0>; "wrefresh"|181-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1360|data|Elf32_Sym <aUpdatePanels - byte_C80, dword_0, 0, 0x12, 0, 0>; "update_panels"|191-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1376|data|Elf32_Sym <aKeypad - byte_C80, dword_0, 0, 0x12, 0, 0>; "keypad"|24-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1392|data|Elf32_Sym <aInitscr - byte_C80, dword_0, 0, 0x12, 0, 0>; "initscr"|227-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1408|data|Elf32_Sym <aRealloc - byte_C80, dword_0, 0, 0x12, 0, 0>; "realloc"|146-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1424|data|Elf32_Sym <aStartColor - byte_C80, dword_0, 0, 0x12, 0, 0>; "start_color"|244-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1440|data|Elf32_Sym <aPerror - byte_C80, dword_0, 0, 0x12, 0, 0>; "perror"|93-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1456|data|Elf32_Sym <aNewwin - byte_C80, dword_0, 0, 0x12, 0, 0>; "newwin"|204-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1472|data|Elf32_Sym <aStderr - byte_C80, dword_0, 0, 0x11, 0, 0>; "stderr"|51-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1488|data|Elf32_Sym <aFwrite - byte_C80, dword_0, 0, 0x12, 0, 0>; "fwrite"|115-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1504|data|Elf32_Sym <aIoctl - byte_C80, dword_0, 0, 0x12, 0, 0>; "ioctl"|58-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1520|data|Elf32_Sym <aPthreadSigmask - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_sigmask"|198-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1536|data|Elf32_Sym <aPthreadCreate - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_create"|143-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1552|data|Elf32_Sym <aPuts - byte_C80, dword_0, 0, 0x12, 0, 0>; "puts"|124-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1568|data|Elf32_Sym <aMalloc - byte_C80, dword_0, 0, 0x12, 0, 0>; "malloc"|37-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1584|data|Elf32_Sym <aDelPanel - byte_C80, dword_0, 0, 0x12, 0, 0>; "del_panel"|181-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1600|data|Elf32_Sym <aSigaddset - byte_C80, dword_0, 0, 0x12, 0, 0>; "sigaddset"|230-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1616|data|Elf32_Sym <aLibcStartMain - byte_C80, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|168-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1632|data|Elf32_Sym <aStrerror - byte_C80, dword_0, 0, 0x12, 0, 0>; "strerror"|159-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1648|data|Elf32_Sym <aFxstat - byte_C80, dword_0, 0, 0x12, 0, 0>; "__fxstat"|91-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1664|data|Elf32_Sym <aNewPanel - byte_C80, dword_0, 0, 0x12, 0, 0>; "new_panel"|205-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1680|data|Elf32_Sym <aGmonStart - byte_C80, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|50-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1696|data|Elf32_Sym <aPedDeviceOpen - byte_C80, dword_0, 0, 0x12, 0, 0>; "ped_device_open"|106-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1712|data|Elf32_Sym <aPedDeviceOpen+0xB - byte_C80, dword_0, 0, 0x12, 0, 0>; "open"|117-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1728|data|Elf32_Sym <aGetoptLong - byte_C80, dword_0, 0, 0x12, 0, 0>; "getopt_long"|79-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1744|data|Elf32_Sym <aDelwin - byte_C80, dword_0, 0, 0x12, 0, 0>; "delwin"|80-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1760|data|Elf32_Sym <aExit - byte_C80, dword_0, 0, 0x12, 0, 0>; "exit"|75-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1776|data|Elf32_Sym <aFlock - byte_C80, dword_0, 0, 0x12, 0, 0>; "flock"|160-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1792|data|Elf32_Sym <aCols - byte_C80, dword_0, 0, 0x11, 0, 0>; "COLS"|5-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1808|data|Elf32_Sym <aHalfdelay - byte_C80, dword_0, 0, 0x12, 0, 0>; "halfdelay"|14-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1824|data|Elf32_Sym <aStrlen - byte_C80, dword_0, 0, 0x12, 0, 0>; "strlen"|183-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1840|data|Elf32_Sym <aMvwprintw+2 - byte_C80, dword_0, 0, 0x12, 0, 0>; "wprintw"|147-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1856|data|Elf32_Sym <aResetProgMode - byte_C80, dword_0, 0, 0x12, 0, 0>; "reset_prog_mode"|10-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1872|data|Elf32_Sym <aStdscr - byte_C80, dword_0, 0, 0x11, 0, 0>; "stdscr"|26-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1888|data|Elf32_Sym <aPthreadAttrIni - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_attr_init"|91-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1904|data|Elf32_Sym <aNodelay - byte_C80, dword_0, 0, 0x12, 0, 0>; "nodelay"|31-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1920|data|Elf32_Sym <aErrnoLocation - byte_C80, dword_0, 0, 0x12, 0, 0>; "__errno_location"|173-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1936|data|Elf32_Sym <aIsoc99Sscanf - byte_C80, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|100-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1952|data|Elf32_Sym <aMemset - byte_C80, dword_0, 0, 0x12, 0, 0>; "memset"|202-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1968|data|Elf32_Sym <aStrncpy - byte_C80, dword_0, 0, 0x12, 0, 0>; "strncpy"|116-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1984|data|Elf32_Sym <aPthreadCancel - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_cancel"|158-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2000|data|Elf32_Sym <aPedDeviceClose - byte_C80, dword_0, 0, 0x12, 0, 0>; "ped_device_close"|135-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2016|data|Elf32_Sym <aGmtime - byte_C80, dword_0, 0, 0x12, 0, 0>; "gmtime"|166-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2032|data|Elf32_Sym <aPrintfChk - byte_C80, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|62-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2048|data|Elf32_Sym <aFwrite+1 - byte_C80, dword_0, 0, 0x12, 0, 0>; "write"|116-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2064|data|Elf32_Sym <aFileno - byte_C80, dword_0, 0, 0x12, 0, 0>; "fileno"|108-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2080|data|Elf32_Sym <aCanChangeColor - byte_C80, dword_0, 0, 0x12, 0, 0>; "can_change_color"|110-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2096|data|Elf32_Sym <aDefProgMode - byte_C80, dword_0, 0, 0x12, 0, 0>; "def_prog_mode"|33-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2112|data|Elf32_Sym <aShowPanel - byte_C80, dword_0, 0, 0x12, 0, 0>; "show_panel"|226-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2128|data|Elf32_Sym <aFprintfChk - byte_C80, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|216-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2144|data|Elf32_Sym <aStdout - byte_C80, dword_0, 0, 0x11, 0, 0>; "stdout"|240-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2160|data|Elf32_Sym <aFclose - byte_C80, dword_0, 0, 0x12, 0, 0>; "fclose"|14-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2176|data|Elf32_Sym <aEndwin - byte_C80, dword_0, 0, 0x12, 0, 0>; "endwin"|174-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2192|data|Elf32_Sym <aSigemptyset - byte_C80, dword_0, 0, 0x12, 0, 0>; "sigemptyset"|190-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2208|data|Elf32_Sym <aWgetch - byte_C80, dword_0, 0, 0x12, 0, 0>; "wgetch"|138-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2224|data|Elf32_Sym <aLines - byte_C80, dword_0, 0, 0x11, 0, 0>; "LINES"|47-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2240|data|Elf32_Sym <aWclear - byte_C80, dword_0, 0, 0x12, 0, 0>; "wclear"|197-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2256|data|Elf32_Sym <aMvwprintw - byte_C80, dword_0, 0, 0x12, 0, 0>; "mvwprintw"|145-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2272|data|Elf32_Sym <aPthreadJoin - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_join"|130-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2288|data|Elf32_Sym <aPedDeviceGet - byte_C80, dword_0, 0, 0x12, 0, 0>; "ped_device_get"|152-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2304|data|Elf32_Sym <aNocbreak - byte_C80, dword_0, 0, 0x12, 0, 0>; "nocbreak"|53-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2320|data|Elf32_Sym <aJvRegisterclas - byte_C80, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|45-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2336|data|Elf32_Sym <aNoecho - byte_C80, dword_0, 0, 0x12, 0, 0>; "noecho"|94-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2352|data|Elf32_Sym <aDoupdate - byte_C80, dword_0, 0, 0x12, 0, 0>; "doupdate"|71-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2368|data|Elf32_Sym <aFopen64 - byte_C80, dword_0, 0, 0x12, 0, 0>; "fopen64"|137-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2384|data|Elf32_Sym <aItmRegistertmc - byte_C80, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|65-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2400|data|Elf32_Sym <aPedDeviceProbe - byte_C80, dword_0, 0, 0x12, 0, 0>; "ped_device_probe_all"|85-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2416|data|Elf32_Sym <aWmove - byte_C80, dword_0, 0, 0x12, 0, 0>; "wmove"|211-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2432|data|Elf32_Sym <aPthreadTestcan - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_testcancel"|16-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2448|data|Elf32_Sym <aOptarg - byte_C80, dword_0, 0, 0x11, 0, 0>; "optarg"|44-4-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2464|data|Elf32_Sym <aStrncat - byte_C80, dword_0, 0, 0x12, 0, 0>; "strncat"|100-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2480|data|Elf32_Sym <aPthreadAttrSet - byte_C80, dword_0, 0, 0x12, 0, 0>; "pthread_attr_setdetachstate"|220-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2496|data|Elf32_Sym <aCursSet - byte_C80, dword_0, 0, 0x12, 0, 0>; "curs_set"|62-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2512|data|Elf32_Sym <aFdatasync - byte_C80, dword_0, 0, 0x12, 0, 0>; "fdatasync"|173-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2528|data|Elf32_Sym <aAbort - byte_C80, dword_0, 0, 0x12, 0, 0>; "abort"|154-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2544|data|Elf32_Sym <aPedDeviceClose+0xB - byte_C80, dword_0, 0, 0x12, 0, 0>; "close"|146-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2560|data|Elf32_Sym <aWerase - byte_C80, dword_0, 0, 0x12, 0, 0>; "werase"|190-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2576|data|Elf32_Sym <aSnprintfChk - byte_C80, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|64-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2592|data|Elf32_Sym <aProgramName - byte_C80, program_name, 4, 0x11, 0, 0x17>; "program_name"|122-1-0-0-104-194-1-0-4-0-0-0-17-0-23-0
2608|data|Elf32_Sym <aNwipeGuiStatus - byte_C80, nwipe_gui_status+1, 0xA68, \; "nwipe_gui_status"|91-5-0-0-193-76-0-0-104-10-0-0-18-0-13-0
2624|data|Elf32_Sym <aLogLines - byte_C80, log_lines, 4, 0x11, 0, 0x18>; "log_lines"|49-6-0-0-200-194-1-0-4-0-0-0-17-0-24-0
2640|data|Elf32_Sym <aLibcCsuFini+0xA - byte_C80, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|54-5-0-0-28-136-0-0-0-0-0-0-18-0-14-0
2656|data|Elf32_Sym <aBssEnd+1 - byte_C80, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|20-5-0-0-244-210-1-0-0-0-0-0-16-0-24-0
2672|data|Elf32_Sym <aMainPanel - byte_C80, main_panel, 4, 0x11, 0, 0x18>; "main_panel"|121-5-0-0-168-194-1-0-4-0-0-0-17-0-24-0
2688|data|Elf32_Sym <aLibcCsuInit - byte_C80, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|211-5-0-0-217-135-0-0-64-0-0-0-18-0-13-0
2704|data|Elf32_Sym <aMutex1 - byte_C80, mutex1, 0x18, 0x11, 0, 0x18>; "mutex1"|239-5-0-0-128-194-1-0-24-0-0-0-17-0-24-0
2720|data|Elf32_Sym <aDataStart - byte_C80, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|229-4-0-0-0-192-1-0-0-0-0-0-16-0-23-0
2736|data|Elf32_Sym <aHeaderPanel - byte_C80, header_panel, 4, 0x11, 0, 0x18>; "header_panel"|246-5-0-0-180-194-1-0-4-0-0-0-17-0-24-0
2752|data|Elf32_Sym <aStatsPanel - byte_C80, stats_panel, 4, 0x11, 0, 0x18>; "stats_panel"|227-5-0-0-176-194-1-0-4-0-0-0-17-0-24-0
2768|data|Elf32_Sym <aNwipeZero - byte_C80, nwipe_zero+1, 0x40, 0x12, 0, 0xD>; "nwipe_zero"|200-5-0-0-41-113-0-0-64-0-0-0-18-0-13-0
2784|data|Elf32_Sym <aLibcCsuFini - byte_C80, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|44-5-0-0-25-136-0-0-2-0-0-0-18-0-13-0
2800|data|Elf32_Sym <aHeaderWindow - byte_C80, header_window, 4, 0x11, 0, 0x18>; "header_window"|60-5-0-0-160-194-1-0-4-0-0-0-17-0-24-0
2816|data|Elf32_Sym <aNwipeOps2 - byte_C80, nwipe_ops2+1, 0x1BC, 0x12, 0, 0xD>; "nwipe_ops2"|3-6-0-0-97-116-0-0-188-1-0-0-18-0-13-0
2832|data|Elf32_Sym <aNwipeDod522022 - byte_C80, nwipe_dod522022m+1, 0xE8, 0x12,\; "nwipe_dod522022m"|74-5-0-0-105-113-0-0-232-0-0-0-18-0-13-0
2848|data|Elf32_Sym <aNwipeOptions - byte_C80, nwipe_options, 0x1028, 0x11, 0, \; "nwipe_options"|132-5-0-0-204-194-1-0-40-16-0-0-17-0-24-0
2864|data|Elf32_Sym <aEnd - byte_C80, _end, 0, 0x10, 0, 0x18>; "__end__"|31-5-0-0-244-210-1-0-0-0-0-0-16-0-24-0
2880|data|Elf32_Sym <aMainWindow - byte_C80, main_window, 4, 0x11, 0, 0x18>; "main_window"|88-6-0-0-192-194-1-0-4-0-0-0-17-0-24-0
2896|data|Elf32_Sym <aNwipeTwister - byte_C80, nwipe_twister, 0xC, 0x11, 0, \; "nwipe_twister"|186-5-0-0-76-194-1-0-12-0-0-0-17-0-23-0
2912|data|Elf32_Sym <aLibcStartMain+0xD - byte_C80, main+1, 0x77C, 0x12, 0, 0xD>; "main"|181-4-0-0-73-32-0-0-124-7-0-0-18-0-13-0
2928|data|Elf32_Sym <aLogCurrentElem - byte_C80, log_current_element, 4, 0x11, \; "log_current_element"|14-6-0-0-152-194-1-0-4-0-0-0-17-0-24-0
2944|data|Elf32_Sym <aNwipeRandom - byte_C80, nwipe_random+1, 0x54, 0x12, 0, \; "nwipe_random"|159-5-0-0-29-118-0-0-84-0-0-0-18-0-13-0
2960|data|Elf32_Sym <aBssStart - byte_C80, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|249-4-0-0-112-194-1-0-0-0-0-0-16-0-24-0
2976|data|Elf32_Sym <aEnd_0 - byte_C80, _end, 0, 0x10, 0, 0x18>; "_end"|39-5-0-0-244-210-1-0-0-0-0-0-16-0-24-0
2992|data|Elf32_Sym <aNwipeGutmann - byte_C80, nwipe_gutmann+1, 0x14C, 0x12, 0, \; "nwipe_gutmann"|172-5-0-0-21-115-0-0-76-1-0-0-18-0-13-0
3008|data|Elf32_Sym <aOptionsPanel - byte_C80, options_panel, 4, 0x11, 0, 0x18>; "options_panel"|59-6-0-0-184-194-1-0-4-0-0-0-17-0-24-0
3024|data|Elf32_Sym <aEdata - byte_C80, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|242-4-0-0-112-194-1-0-0-0-0-0-16-0-23-0
3040|data|Elf32_Sym <aNwipeIsaac - byte_C80, nwipe_isaac, 0xC, 0x11, 0, 0x17>; "nwipe_isaac"|129-6-0-0-64-194-1-0-12-0-0-0-17-0-23-0
3056|data|Elf32_Sym <aOptionsWindow - byte_C80, options_window, 4, 0x11, 0, \; "options_window"|73-6-0-0-188-194-1-0-4-0-0-0-17-0-24-0
3072|data|Elf32_Sym <aVersionString - byte_C80, version_string, 4, 0x11, 0, \; "version_string"|34-6-0-0-108-194-1-0-4-0-0-0-17-0-23-0
3088|data|Elf32_Sym <aFooterPanel - byte_C80, footer_panel, 4, 0x11, 0, 0x18>; "footer_panel"|108-5-0-0-164-194-1-0-4-0-0-0-17-0-24-0
3104|data|Elf32_Sym <aStatsWindow - byte_C80, stats_window, 4, 0x11, 0, 0x18>; "stats_window"|146-5-0-0-172-194-1-0-4-0-0-0-17-0-24-0
3120|data|Elf32_Sym <aFooterWindow - byte_C80, footer_window, 4, 0x11, 0, 0x18>; "footer_window"|115-6-0-0-196-194-1-0-4-0-0-0-17-0-24-0
3136|data|Elf32_Sym <aBssEnd - byte_C80, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|19-5-0-0-244-210-1-0-0-0-0-0-16-0-24-0
3152|data|Elf32_Sym <aPthreadAttrIni+0xC - byte_C80, .init_proc, 0, 0x12, 0, \; "_init"|103-0-0-0-128-27-0-0-0-0-0-0-18-0-11-0
3168|data|Elf32_Sym <aBssStart_0 - byte_C80, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|5-5-0-0-112-194-1-0-0-0-0-0-16-0-24-0
3184|data|Elf32_Sym <aNwipeDodshort - byte_C80, nwipe_dodshort+1, 0xC4, 0x12, 0,\; "nwipe_dodshort"|100-6-0-0-81-114-0-0-196-0-0-0-18-0-13-0
3200|data|DCB 0|0
3201|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
3217|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
3245|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
3265|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
3291|data|DCB "pthread_attr_init",0|112-116-104-114-101-97-100-95-97-116-116-114-95-105-110-105-116-0
3309|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
3330|data|DCB "pthread_join",0|112-116-104-114-101-97-100-95-106-111-105-110-0
3343|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
3358|data|DCB "pthread_cancel",0|112-116-104-114-101-97-100-95-99-97-110-99-101-108-0
3373|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
3390|data|DCB "sigwait",0|115-105-103-119-97-105-116-0
3398|data|DCB "pthread_sigmask",0|112-116-104-114-101-97-100-95-115-105-103-109-97-115-107-0
3414|data|DCB "lseek",0|108-115-101-101-107-0
3420|data|DCB "pthread_attr_setdetachstate",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-100-101-116-97-99-104-115-116-97-116-101-0
3448|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
3467|data|DCB "read",0|114-101-97-100-0
3472|data|DCB "pthread_testcancel",0|112-116-104-114-101-97-100-95-116-101-115-116-99-97-110-99-101-108-0
3491|data|DCB "libparted.so.2",0|108-105-98-112-97-114-116-101-100-46-115-111-46-50-0
3506|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
3521|data|DCB "ped_device_get_next",0|112-101-100-95-100-101-118-105-99-101-95-103-101-116-95-110-101-120-116-0
3541|data|DCB "ped_device_probe_all",0|112-101-100-95-100-101-118-105-99-101-95-112-114-111-98-101-95-97-108-108-0
3562|data|DCB "ped_device_open",0|112-101-100-95-100-101-118-105-99-101-95-111-112-101-110-0
3578|data|DCB "program_name",0|112-114-111-103-114-97-109-95-110-97-109-101-0
3591|data|DCB "ped_device_close",0|112-101-100-95-100-101-118-105-99-101-95-99-108-111-115-101-0
3608|data|DCB "ped_device_get",0|112-101-100-95-100-101-118-105-99-101-95-103-101-116-0
3623|data|DCB "libpanel.so.5",0|108-105-98-112-97-110-101-108-46-115-111-46-53-0
3637|data|DCB "del_panel",0|100-101-108-95-112-97-110-101-108-0
3647|data|DCB "update_panels",0|117-112-100-97-116-101-95-112-97-110-101-108-115-0
3661|data|DCB "new_panel",0|110-101-119-95-112-97-110-101-108-0
3671|data|DCB "hide_panel",0|104-105-100-101-95-112-97-110-101-108-0
3682|data|DCB "show_panel",0|115-104-111-119-95-112-97-110-101-108-0
3693|data|DCB "libncurses.so.5",0|108-105-98-110-99-117-114-115-101-115-46-115-111-46-53-0
3709|data|DCB "acs_map",0|97-99-115-95-109-97-112-0
3717|data|DCB "COLS",0|67-79-76-83-0
3722|data|DCB "reset_prog_mode",0|114-101-115-101-116-95-112-114-111-103-95-109-111-100-101-0
3738|data|DCB "stdscr",0|115-116-100-115-99-114-0
3745|data|DCB "def_prog_mode",0|100-101-102-95-112-114-111-103-95-109-111-100-101-0
3759|data|DCB "LINES",0|76-73-78-69-83-0
3765|data|DCB "nocbreak",0|110-111-99-98-114-101-97-107-0
3774|data|DCB "curs_set",0|99-117-114-115-95-115-101-116-0
3783|data|DCB "doupdate",0|100-111-117-112-100-97-116-101-0
3792|data|DCB "delwin",0|100-101-108-119-105-110-0
3799|data|DCB "waddch",0|119-97-100-100-99-104-0
3806|data|DCB "noecho",0|110-111-101-99-104-111-0
3813|data|DCB "wattr_on",0|119-97-116-116-114-95-111-110-0
3822|data|DCB "can_change_color",0|99-97-110-95-99-104-97-110-103-101-95-99-111-108-111-114-0
3839|data|DCB "init_color",0|105-110-105-116-95-99-111-108-111-114-0
3850|data|DCB "wgetch",0|119-103-101-116-99-104-0
3857|data|DCB "mvwprintw",0|109-118-119-112-114-105-110-116-119-0
3867|data|DCB "wborder",0|119-98-111-114-100-101-114-0
3875|data|DCB "has_colors",0|104-97-115-95-99-111-108-111-114-115-0
3886|data|DCB "endwin",0|101-110-100-119-105-110-0
3893|data|DCB "wrefresh",0|119-114-101-102-114-101-115-104-0
3902|data|DCB "werase",0|119-101-114-97-115-101-0
3909|data|DCB "wclear",0|119-99-108-101-97-114-0
3916|data|DCB "newwin",0|110-101-119-119-105-110-0
3923|data|DCB "wmove",0|119-109-111-118-101-0
3929|data|DCB "init_pair",0|105-110-105-116-95-112-97-105-114-0
3939|data|DCB "initscr",0|105-110-105-116-115-99-114-0
3947|data|DCB "wbkgdset",0|119-98-107-103-100-115-101-116-0
3956|data|DCB "start_color",0|115-116-97-114-116-95-99-111-108-111-114-0
3968|data|DCB "libtinfo.so.5",0|108-105-98-116-105-110-102-111-46-115-111-46-53-0
3982|data|DCB "halfdelay",0|104-97-108-102-100-101-108-97-121-0
3992|data|DCB "keypad",0|107-101-121-112-97-100-0
3999|data|DCB "nodelay",0|110-111-100-101-108-97-121-0
4007|data|DCB "raise",0|114-97-105-115-101-0
4013|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
4023|data|DCB "fflush",0|102-102-108-117-115-104-0
4030|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
4043|data|DCB "exit",0|101-120-105-116-0
4048|data|DCB "fopen",0|102-111-112-101-110-0
4054|data|DCB "optind",0|111-112-116-105-110-100-0
4061|data|DCB "perror",0|112-101-114-114-111-114-0
4068|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
4084|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
4092|data|DCB "puts",0|112-117-116-115-0
4097|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
4114|data|DCB "realloc",0|114-101-97-108-108-111-99-0
4122|data|DCB "abort",0|97-98-111-114-116-0
4128|data|DCB "flock",0|102-108-111-99-107-0
4134|data|DCB "gmtime",0|103-109-116-105-109-101-0
4141|data|DCB "fdatasync",0|102-100-97-116-97-115-121-110-99-0
4151|data|DCB "strlen",0|115-116-114-108-101-110-0
4158|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
4170|data|DCB "memset",0|109-101-109-115-101-116-0
4177|data|DCB "memcmp",0|109-101-109-99-109-112-0
4184|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
4198|data|DCB "sigaddset",0|115-105-103-97-100-100-115-101-116-0
4208|data|DCB "stdout",0|115-116-100-111-117-116-0
4215|data|DCB "__isoc99_fscanf",0|95-95-105-115-111-99-57-57-95-102-115-99-97-110-102-0
4231|data|DCB "memcpy",0|109-101-109-99-112-121-0
4238|data|DCB "fclose",0|102-99-108-111-115-101-0
4245|data|DCB "__vsnprintf_chk",0|95-95-118-115-110-112-114-105-110-116-102-95-99-104-107-0
4261|data|DCB "malloc",0|109-97-108-108-111-99-0
4268|data|DCB "optarg",0|111-112-116-97-114-103-0
4275|data|DCB "stderr",0|115-116-100-101-114-114-0
4282|data|DCB "ioctl",0|105-111-99-116-108-0
4288|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
4303|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
4315|data|DCB "__fxstat",0|95-95-102-120-115-116-97-116-0
4324|data|DCB "strncat",0|115-116-114-110-99-97-116-0
4332|data|DCB "fileno",0|102-105-108-101-110-111-0
4339|data|DCB "fwrite",0|102-119-114-105-116-101-0
4346|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
4361|data|DCB "fopen64",0|102-111-112-101-110-54-52-0
4369|data|DCB "setbuf",0|115-101-116-98-117-102-0
4376|data|DCB "strcmp",0|115-116-114-99-109-112-0
4383|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
4392|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
4410|data|DCB "free",0|102-114-101-101-0
4415|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
4435|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
4453|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
4466|data|DCB "_edata",0|95-101-100-97-116-97-0
4473|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
4485|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
4499|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
4511|data|DCB "__end__",0|95-95-101-110-100-95-95-0
4519|data|DCB "_end",0|95-101-110-100-0
4524|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
4540|data|DCB "header_window",0|104-101-97-100-101-114-95-119-105-110-100-111-119-0
4554|data|DCB "nwipe_dod522022m",0|110-119-105-112-101-95-100-111-100-53-50-50-48-50-50-109-0
4571|data|DCB "nwipe_gui_status",0|110-119-105-112-101-95-103-117-105-95-115-116-97-116-117-115-0
4588|data|DCB "footer_panel",0|102-111-111-116-101-114-95-112-97-110-101-108-0
4601|data|DCB "main_panel",0|109-97-105-110-95-112-97-110-101-108-0
4612|data|DCB "nwipe_options",0|110-119-105-112-101-95-111-112-116-105-111-110-115-0
4626|data|DCB "stats_window",0|115-116-97-116-115-95-119-105-110-100-111-119-0
4639|data|DCB "nwipe_random",0|110-119-105-112-101-95-114-97-110-100-111-109-0
4652|data|DCB "nwipe_gutmann",0|110-119-105-112-101-95-103-117-116-109-97-110-110-0
4666|data|DCB "nwipe_twister",0|110-119-105-112-101-95-116-119-105-115-116-101-114-0
4680|data|DCB "nwipe_zero",0|110-119-105-112-101-95-122-101-114-111-0
4691|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
4707|data|DCB "stats_panel",0|115-116-97-116-115-95-112-97-110-101-108-0
4719|data|DCB "mutex1",0|109-117-116-101-120-49-0
4726|data|DCB "header_panel",0|104-101-97-100-101-114-95-112-97-110-101-108-0
4739|data|DCB "nwipe_ops2",0|110-119-105-112-101-95-111-112-115-50-0
4750|data|DCB "log_current_element",0|108-111-103-95-99-117-114-114-101-110-116-95-101-108-101-109-101-110-116-0
4770|data|DCB "version_string",0|118-101-114-115-105-111-110-95-115-116-114-105-110-103-0
4785|data|DCB "log_lines",0|108-111-103-95-108-105-110-101-115-0
4795|data|DCB "options_panel",0|111-112-116-105-111-110-115-95-112-97-110-101-108-0
4809|data|DCB "options_window",0|111-112-116-105-111-110-115-95-119-105-110-100-111-119-0
4824|data|DCB "main_window",0|109-97-105-110-95-119-105-110-100-111-119-0
4836|data|DCB "nwipe_dodshort",0|110-119-105-112-101-95-100-111-100-115-104-111-114-116-0
4851|data|DCB "footer_window",0|102-111-111-116-101-114-95-119-105-110-100-111-119-0
4865|data|DCB "nwipe_isaac",0|110-119-105-112-101-95-105-115-97-97-99-0
4877|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
4887|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
4897|data|DCB 0|0
4898|data|DCW 0|0-0
4900|data|DCW 0|0-0
4902|data|DCW 0|0-0
4904|data|DCW 2; pthread_mutex_unlock@@GLIBC_2.4|2-0
4906|data|DCW 2; raise@@GLIBC_2.4|2-0
4908|data|DCW 3; setbuf@@GLIBC_2.4|3-0
4910|data|DCW 3; strcmp@@GLIBC_2.4|3-0
4912|data|DCW 3; __cxa_finalize@@GLIBC_2.4|3-0
4914|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
4916|data|DCW 4; __isoc99_fscanf@@GLIBC_2.7|4-0
4918|data|DCW 3; fopen@@GLIBC_2.4|3-0
4920|data|DCW 2; read@@GLIBC_2.4|2-0
4922|data|DCW 3; fflush@@GLIBC_2.4|3-0
4924|data|DCW 0; local  symbol: wattr_on|0-0
4926|data|DCW 0; local  symbol: has_colors|0-0
4928|data|DCW 0; local  symbol: waddch|0-0
4930|data|DCW 3; free@@GLIBC_2.4|3-0
4932|data|DCW 0; local  symbol: acs_map|0-0
4934|data|DCW 0; local  symbol: init_color|0-0
4936|data|DCW 2; pthread_mutex_lock@@GLIBC_2.4|2-0
4938|data|DCW 0; local  symbol: cbreak|0-0
4940|data|DCW 0; local  symbol: ped_device_get_next|0-0
4942|data|DCW 5; __stack_chk_guard@@GLIBC_2.4|5-0
4944|data|DCW 3; __vsnprintf_chk@@GLIBC_2.4|3-0
4946|data|DCW 3; memcpy@@GLIBC_2.4|3-0
4948|data|DCW 2; sigwait@@GLIBC_2.4|2-0
4950|data|DCW 3; time@@GLIBC_2.4|3-0
4952|data|DCW 2; lseek@@GLIBC_2.4|2-0
4954|data|DCW 3; memcmp@@GLIBC_2.4|3-0
4956|data|DCW 0; local  symbol: hide_panel|0-0
4958|data|DCW 0; local  symbol: wborder|0-0
4960|data|DCW 3; optind@@GLIBC_2.4|3-0
4962|data|DCW 0; local  symbol: wbkgdset|0-0
4964|data|DCW 0; local  symbol: init_pair|0-0
4966|data|DCW 3; __stack_chk_fail@@GLIBC_2.4|3-0
4968|data|DCW 0; local  symbol: wrefresh|0-0
4970|data|DCW 0; local  symbol: update_panels|0-0
4972|data|DCW 0; local  symbol: keypad|0-0
4974|data|DCW 0; local  symbol: initscr|0-0
4976|data|DCW 3; realloc@@GLIBC_2.4|3-0
4978|data|DCW 0; local  symbol: start_color|0-0
4980|data|DCW 3; perror@@GLIBC_2.4|3-0
4982|data|DCW 0; local  symbol: newwin|0-0
4984|data|DCW 3; stderr@@GLIBC_2.4|3-0
4986|data|DCW 3; fwrite@@GLIBC_2.4|3-0
4988|data|DCW 3; ioctl@@GLIBC_2.4|3-0
4990|data|DCW 2; pthread_sigmask@@GLIBC_2.4|2-0
4992|data|DCW 2; pthread_create@@GLIBC_2.4|2-0
4994|data|DCW 3; puts@@GLIBC_2.4|3-0
4996|data|DCW 3; malloc@@GLIBC_2.4|3-0
4998|data|DCW 0; local  symbol: del_panel|0-0
5000|data|DCW 3; sigaddset@@GLIBC_2.4|3-0
5002|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
5004|data|DCW 3; strerror@@GLIBC_2.4|3-0
5006|data|DCW 3; __fxstat@@GLIBC_2.4|3-0
5008|data|DCW 0; local  symbol: new_panel|0-0
5010|data|DCW 0; local  symbol: __gmon_start__|0-0
5012|data|DCW 0; local  symbol: ped_device_open|0-0
5014|data|DCW 2; open@@GLIBC_2.4|2-0
5016|data|DCW 3; getopt_long@@GLIBC_2.4|3-0
5018|data|DCW 0; local  symbol: delwin|0-0
5020|data|DCW 3; exit@@GLIBC_2.4|3-0
5022|data|DCW 3; flock@@GLIBC_2.4|3-0
5024|data|DCW 0; local  symbol: COLS|0-0
5026|data|DCW 0; local  symbol: halfdelay|0-0
5028|data|DCW 3; strlen@@GLIBC_2.4|3-0
5030|data|DCW 0; local  symbol: wprintw|0-0
5032|data|DCW 0; local  symbol: reset_prog_mode|0-0
5034|data|DCW 0; local  symbol: stdscr|0-0
5036|data|DCW 2; pthread_attr_init@@GLIBC_2.4|2-0
5038|data|DCW 0; local  symbol: nodelay|0-0
5040|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
5042|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
5044|data|DCW 3; memset@@GLIBC_2.4|3-0
5046|data|DCW 3; strncpy@@GLIBC_2.4|3-0
5048|data|DCW 2; pthread_cancel@@GLIBC_2.4|2-0
5050|data|DCW 0; local  symbol: ped_device_close|0-0
5052|data|DCW 3; gmtime@@GLIBC_2.4|3-0
5054|data|DCW 3; __printf_chk@@GLIBC_2.4|3-0
5056|data|DCW 2; write@@GLIBC_2.4|2-0
5058|data|DCW 3; fileno@@GLIBC_2.4|3-0
5060|data|DCW 0; local  symbol: can_change_color|0-0
5062|data|DCW 0; local  symbol: def_prog_mode|0-0
5064|data|DCW 0; local  symbol: show_panel|0-0
5066|data|DCW 3; __fprintf_chk@@GLIBC_2.4|3-0
5068|data|DCW 3; stdout@@GLIBC_2.4|3-0
5070|data|DCW 3; fclose@@GLIBC_2.4|3-0
5072|data|DCW 0; local  symbol: endwin|0-0
5074|data|DCW 3; sigemptyset@@GLIBC_2.4|3-0
5076|data|DCW 0; local  symbol: wgetch|0-0
5078|data|DCW 0; local  symbol: LINES|0-0
5080|data|DCW 0; local  symbol: wclear|0-0
5082|data|DCW 0; local  symbol: mvwprintw|0-0
5084|data|DCW 2; pthread_join@@GLIBC_2.4|2-0
5086|data|DCW 0; local  symbol: ped_device_get|0-0
5088|data|DCW 0; local  symbol: nocbreak|0-0
5090|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
5092|data|DCW 0; local  symbol: noecho|0-0
5094|data|DCW 0; local  symbol: doupdate|0-0
5096|data|DCW 3; fopen64@@GLIBC_2.4|3-0
5098|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
5100|data|DCW 0; local  symbol: ped_device_probe_all|0-0
5102|data|DCW 0; local  symbol: wmove|0-0
5104|data|DCW 2; pthread_testcancel@@GLIBC_2.4|2-0
5106|data|DCW 3; optarg@@GLIBC_2.4|3-0
5108|data|DCW 3; strncat@@GLIBC_2.4|3-0
5110|data|DCW 2; pthread_attr_setdetachstate@@GLIBC_2.4|2-0
5112|data|DCW 0; local  symbol: curs_set|0-0
5114|data|DCW 3; fdatasync@@GLIBC_2.4|3-0
5116|data|DCW 3; abort@@GLIBC_2.4|3-0
5118|data|DCW 2; close@@GLIBC_2.4|2-0
5120|data|DCW 0; local  symbol: werase|0-0
5122|data|DCW 3; __snprintf_chk@@GLIBC_2.4|3-0
5124|data|DCW 1; global symbol: program_name|1-0
5126|data|DCW 1; global symbol: nwipe_gui_status|1-0
5128|data|DCW 1; global symbol: log_lines|1-0
5130|data|DCW 1; global symbol: _fini|1-0
5132|data|DCW 1; global symbol: _bss_end__|1-0
5134|data|DCW 1; global symbol: main_panel|1-0
5136|data|DCW 1; global symbol: __libc_csu_init|1-0
5138|data|DCW 1; global symbol: mutex1|1-0
5140|data|DCW 1; global symbol: __data_start|1-0
5142|data|DCW 1; global symbol: header_panel|1-0
5144|data|DCW 1; global symbol: stats_panel|1-0
5146|data|DCW 1; global symbol: nwipe_zero|1-0
5148|data|DCW 1; global symbol: __libc_csu_fini|1-0
5150|data|DCW 1; global symbol: header_window|1-0
5152|data|DCW 1; global symbol: nwipe_ops2|1-0
5154|data|DCW 1; global symbol: nwipe_dod522022m|1-0
5156|data|DCW 1; global symbol: nwipe_options|1-0
5158|data|DCW 1; global symbol: __end__|1-0
5160|data|DCW 1; global symbol: main_window|1-0
5162|data|DCW 1; global symbol: nwipe_twister|1-0
5164|data|DCW 1; global symbol: main|1-0
5166|data|DCW 1; global symbol: log_current_element|1-0
5168|data|DCW 1; global symbol: nwipe_random|1-0
5170|data|DCW 1; global symbol: __bss_start|1-0
5172|data|DCW 1; global symbol: _end|1-0
5174|data|DCW 1; global symbol: nwipe_gutmann|1-0
5176|data|DCW 1; global symbol: options_panel|1-0
5178|data|DCW 1; global symbol: _edata|1-0
5180|data|DCW 1; global symbol: nwipe_isaac|1-0
5182|data|DCW 1; global symbol: options_window|1-0
5184|data|DCW 1; global symbol: version_string|1-0
5186|data|DCW 1; global symbol: footer_panel|1-0
5188|data|DCW 1; global symbol: stats_window|1-0
5190|data|DCW 1; global symbol: footer_window|1-0
5192|data|DCW 1; global symbol: __bss_end__|1-0
5194|data|DCW 1; global symbol: _init|1-0
5196|data|DCW 1; global symbol: __bss_start__|1-0
5198|data|DCW 1; global symbol: nwipe_dodshort|1-0
5200|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_C80, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-191-4-0-0-16-0-0-0-32-0-0-0
5216|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_C80, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-141-6-0-0-0-0-0-0
5232|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_C80, 0x10, 0x30>; "libc.so.6"|1-0-2-0-45-3-0-0-16-0-0-0-48-0-0-0
5248|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_C80, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-151-6-0-0-16-0-0-0
5264|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_C80, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-141-6-0-0-0-0-0-0
5280|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_C80, 0x10, 0>; "libpthread.so.0"|1-0-1-0-1-0-0-0-16-0-0-0-0-0-0-0
5296|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_C80, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-141-6-0-0-0-0-0-0
5312|data|Elf32_Rel <0x1BC90, 0x17>; R_ARM_RELATIVE|144-188-1-0-23-0-0-0
5320|data|Elf32_Rel <0x1BC94, 0x17>; R_ARM_RELATIVE|148-188-1-0-23-0-0-0
5328|data|Elf32_Rel <0x1BF58, 0x17>; R_ARM_RELATIVE|88-191-1-0-23-0-0-0
5336|data|Elf32_Rel <0x1BF5C, 0x17>; R_ARM_RELATIVE|92-191-1-0-23-0-0-0
5344|data|Elf32_Rel <0x1BF6C, 0x17>; R_ARM_RELATIVE|108-191-1-0-23-0-0-0
5352|data|Elf32_Rel <0x1BF74, 0x17>; R_ARM_RELATIVE|116-191-1-0-23-0-0-0
5360|data|Elf32_Rel <0x1BF78, 0x17>; R_ARM_RELATIVE|120-191-1-0-23-0-0-0
5368|data|Elf32_Rel <0x1BF7C, 0x17>; R_ARM_RELATIVE|124-191-1-0-23-0-0-0
5376|data|Elf32_Rel <0x1BF84, 0x17>; R_ARM_RELATIVE|132-191-1-0-23-0-0-0
5384|data|Elf32_Rel <0x1BF88, 0x17>; R_ARM_RELATIVE|136-191-1-0-23-0-0-0
5392|data|Elf32_Rel <0x1BF90, 0x17>; R_ARM_RELATIVE|144-191-1-0-23-0-0-0
5400|data|Elf32_Rel <0x1BF94, 0x17>; R_ARM_RELATIVE|148-191-1-0-23-0-0-0
5408|data|Elf32_Rel <0x1BF9C, 0x17>; R_ARM_RELATIVE|156-191-1-0-23-0-0-0
5416|data|Elf32_Rel <0x1BFA4, 0x17>; R_ARM_RELATIVE|164-191-1-0-23-0-0-0
5424|data|Elf32_Rel <0x1BFA8, 0x17>; R_ARM_RELATIVE|168-191-1-0-23-0-0-0
5432|data|Elf32_Rel <0x1BFB0, 0x17>; R_ARM_RELATIVE|176-191-1-0-23-0-0-0
5440|data|Elf32_Rel <0x1BFB4, 0x17>; R_ARM_RELATIVE|180-191-1-0-23-0-0-0
5448|data|Elf32_Rel <0x1BFBC, 0x17>; R_ARM_RELATIVE|188-191-1-0-23-0-0-0
5456|data|Elf32_Rel <0x1BFC4, 0x17>; R_ARM_RELATIVE|196-191-1-0-23-0-0-0
5464|data|Elf32_Rel <0x1BFC8, 0x17>; R_ARM_RELATIVE|200-191-1-0-23-0-0-0
5472|data|Elf32_Rel <0x1BFCC, 0x17>; R_ARM_RELATIVE|204-191-1-0-23-0-0-0
5480|data|Elf32_Rel <0x1BFD4, 0x17>; R_ARM_RELATIVE|212-191-1-0-23-0-0-0
5488|data|Elf32_Rel <0x1BFD8, 0x17>; R_ARM_RELATIVE|216-191-1-0-23-0-0-0
5496|data|Elf32_Rel <0x1BFDC, 0x17>; R_ARM_RELATIVE|220-191-1-0-23-0-0-0
5504|data|Elf32_Rel <0x1BFE0, 0x17>; R_ARM_RELATIVE|224-191-1-0-23-0-0-0
5512|data|Elf32_Rel <0x1BFE4, 0x17>; R_ARM_RELATIVE|228-191-1-0-23-0-0-0
5520|data|Elf32_Rel <0x1BFEC, 0x17>; R_ARM_RELATIVE|236-191-1-0-23-0-0-0
5528|data|Elf32_Rel <0x1BFF4, 0x17>; R_ARM_RELATIVE|244-191-1-0-23-0-0-0
5536|data|Elf32_Rel <0x1BFF8, 0x17>; R_ARM_RELATIVE|248-191-1-0-23-0-0-0
5544|data|Elf32_Rel <0x1BFFC, 0x17>; R_ARM_RELATIVE|252-191-1-0-23-0-0-0
5552|data|Elf32_Rel <0x1C004, 0x17>; R_ARM_RELATIVE|4-192-1-0-23-0-0-0
5560|data|Elf32_Rel <0x1C008, 0x17>; R_ARM_RELATIVE|8-192-1-0-23-0-0-0
5568|data|Elf32_Rel <0x1C00C, 0x17>; R_ARM_RELATIVE|12-192-1-0-23-0-0-0
5576|data|Elf32_Rel <0x1C010, 0x17>; R_ARM_RELATIVE|16-192-1-0-23-0-0-0
5584|data|Elf32_Rel <0x1C014, 0x17>; R_ARM_RELATIVE|20-192-1-0-23-0-0-0
5592|data|Elf32_Rel <0x1C018, 0x17>; R_ARM_RELATIVE|24-192-1-0-23-0-0-0
5600|data|Elf32_Rel <0x1C020, 0x17>; R_ARM_RELATIVE|32-192-1-0-23-0-0-0
5608|data|Elf32_Rel <0x1C028, 0x17>; R_ARM_RELATIVE|40-192-1-0-23-0-0-0
5616|data|Elf32_Rel <0x1C030, 0x17>; R_ARM_RELATIVE|48-192-1-0-23-0-0-0
5624|data|Elf32_Rel <0x1C038, 0x17>; R_ARM_RELATIVE|56-192-1-0-23-0-0-0
5632|data|Elf32_Rel <0x1C040, 0x17>; R_ARM_RELATIVE|64-192-1-0-23-0-0-0
5640|data|Elf32_Rel <0x1C048, 0x17>; R_ARM_RELATIVE|72-192-1-0-23-0-0-0
5648|data|Elf32_Rel <0x1C050, 0x17>; R_ARM_RELATIVE|80-192-1-0-23-0-0-0
5656|data|Elf32_Rel <0x1C058, 0x17>; R_ARM_RELATIVE|88-192-1-0-23-0-0-0
5664|data|Elf32_Rel <0x1C060, 0x17>; R_ARM_RELATIVE|96-192-1-0-23-0-0-0
5672|data|Elf32_Rel <0x1C068, 0x17>; R_ARM_RELATIVE|104-192-1-0-23-0-0-0
5680|data|Elf32_Rel <0x1C070, 0x17>; R_ARM_RELATIVE|112-192-1-0-23-0-0-0
5688|data|Elf32_Rel <0x1C078, 0x17>; R_ARM_RELATIVE|120-192-1-0-23-0-0-0
5696|data|Elf32_Rel <0x1C080, 0x17>; R_ARM_RELATIVE|128-192-1-0-23-0-0-0
5704|data|Elf32_Rel <0x1C088, 0x17>; R_ARM_RELATIVE|136-192-1-0-23-0-0-0
5712|data|Elf32_Rel <0x1C090, 0x17>; R_ARM_RELATIVE|144-192-1-0-23-0-0-0
5720|data|Elf32_Rel <0x1C098, 0x17>; R_ARM_RELATIVE|152-192-1-0-23-0-0-0
5728|data|Elf32_Rel <0x1C0A0, 0x17>; R_ARM_RELATIVE|160-192-1-0-23-0-0-0
5736|data|Elf32_Rel <0x1C0A8, 0x17>; R_ARM_RELATIVE|168-192-1-0-23-0-0-0
5744|data|Elf32_Rel <0x1C0B0, 0x17>; R_ARM_RELATIVE|176-192-1-0-23-0-0-0
5752|data|Elf32_Rel <0x1C0B8, 0x17>; R_ARM_RELATIVE|184-192-1-0-23-0-0-0
5760|data|Elf32_Rel <0x1C0C0, 0x17>; R_ARM_RELATIVE|192-192-1-0-23-0-0-0
5768|data|Elf32_Rel <0x1C0C8, 0x17>; R_ARM_RELATIVE|200-192-1-0-23-0-0-0
5776|data|Elf32_Rel <0x1C0D0, 0x17>; R_ARM_RELATIVE|208-192-1-0-23-0-0-0
5784|data|Elf32_Rel <0x1C0D8, 0x17>; R_ARM_RELATIVE|216-192-1-0-23-0-0-0
5792|data|Elf32_Rel <0x1C0E0, 0x17>; R_ARM_RELATIVE|224-192-1-0-23-0-0-0
5800|data|Elf32_Rel <0x1C0E8, 0x17>; R_ARM_RELATIVE|232-192-1-0-23-0-0-0
5808|data|Elf32_Rel <0x1C0F0, 0x17>; R_ARM_RELATIVE|240-192-1-0-23-0-0-0
5816|data|Elf32_Rel <0x1C0F8, 0x17>; R_ARM_RELATIVE|248-192-1-0-23-0-0-0
5824|data|Elf32_Rel <0x1C100, 0x17>; R_ARM_RELATIVE|0-193-1-0-23-0-0-0
5832|data|Elf32_Rel <0x1C108, 0x17>; R_ARM_RELATIVE|8-193-1-0-23-0-0-0
5840|data|Elf32_Rel <0x1C110, 0x17>; R_ARM_RELATIVE|16-193-1-0-23-0-0-0
5848|data|Elf32_Rel <0x1C118, 0x17>; R_ARM_RELATIVE|24-193-1-0-23-0-0-0
5856|data|Elf32_Rel <0x1C120, 0x17>; R_ARM_RELATIVE|32-193-1-0-23-0-0-0
5864|data|Elf32_Rel <0x1C128, 0x17>; R_ARM_RELATIVE|40-193-1-0-23-0-0-0
5872|data|Elf32_Rel <0x1C130, 0x17>; R_ARM_RELATIVE|48-193-1-0-23-0-0-0
5880|data|Elf32_Rel <0x1C138, 0x17>; R_ARM_RELATIVE|56-193-1-0-23-0-0-0
5888|data|Elf32_Rel <0x1C148, 0x17>; R_ARM_RELATIVE|72-193-1-0-23-0-0-0
5896|data|Elf32_Rel <0x1C154, 0x17>; R_ARM_RELATIVE|84-193-1-0-23-0-0-0
5904|data|Elf32_Rel <0x1C158, 0x17>; R_ARM_RELATIVE|88-193-1-0-23-0-0-0
5912|data|Elf32_Rel <0x1C15C, 0x17>; R_ARM_RELATIVE|92-193-1-0-23-0-0-0
5920|data|Elf32_Rel <0x1C160, 0x17>; R_ARM_RELATIVE|96-193-1-0-23-0-0-0
5928|data|Elf32_Rel <0x1C164, 0x17>; R_ARM_RELATIVE|100-193-1-0-23-0-0-0
5936|data|Elf32_Rel <0x1C168, 0x17>; R_ARM_RELATIVE|104-193-1-0-23-0-0-0
5944|data|Elf32_Rel <0x1C16C, 0x17>; R_ARM_RELATIVE|108-193-1-0-23-0-0-0
5952|data|Elf32_Rel <0x1C170, 0x17>; R_ARM_RELATIVE|112-193-1-0-23-0-0-0
5960|data|Elf32_Rel <0x1C180, 0x17>; R_ARM_RELATIVE|128-193-1-0-23-0-0-0
5968|data|Elf32_Rel <0x1C190, 0x17>; R_ARM_RELATIVE|144-193-1-0-23-0-0-0
5976|data|Elf32_Rel <0x1C1A0, 0x17>; R_ARM_RELATIVE|160-193-1-0-23-0-0-0
5984|data|Elf32_Rel <0x1C1B0, 0x17>; R_ARM_RELATIVE|176-193-1-0-23-0-0-0
5992|data|Elf32_Rel <0x1C1C0, 0x17>; R_ARM_RELATIVE|192-193-1-0-23-0-0-0
6000|data|Elf32_Rel <0x1C1D0, 0x17>; R_ARM_RELATIVE|208-193-1-0-23-0-0-0
6008|data|Elf32_Rel <0x1C1E0, 0x17>; R_ARM_RELATIVE|224-193-1-0-23-0-0-0
6016|data|Elf32_Rel <0x1C1F0, 0x17>; R_ARM_RELATIVE|240-193-1-0-23-0-0-0
6024|data|Elf32_Rel <0x1C200, 0x17>; R_ARM_RELATIVE|0-194-1-0-23-0-0-0
6032|data|Elf32_Rel <0x1C210, 0x17>; R_ARM_RELATIVE|16-194-1-0-23-0-0-0
6040|data|Elf32_Rel <0x1C220, 0x17>; R_ARM_RELATIVE|32-194-1-0-23-0-0-0
6048|data|Elf32_Rel <0x1C240, 0x17>; R_ARM_RELATIVE|64-194-1-0-23-0-0-0
6056|data|Elf32_Rel <0x1C244, 0x17>; R_ARM_RELATIVE|68-194-1-0-23-0-0-0
6064|data|Elf32_Rel <0x1C248, 0x17>; R_ARM_RELATIVE|72-194-1-0-23-0-0-0
6072|data|Elf32_Rel <0x1C24C, 0x17>; R_ARM_RELATIVE|76-194-1-0-23-0-0-0
6080|data|Elf32_Rel <0x1C250, 0x17>; R_ARM_RELATIVE|80-194-1-0-23-0-0-0
6088|data|Elf32_Rel <0x1C254, 0x17>; R_ARM_RELATIVE|84-194-1-0-23-0-0-0
6096|data|Elf32_Rel <0x1C258, 0x17>; R_ARM_RELATIVE|88-194-1-0-23-0-0-0
6104|data|Elf32_Rel <0x1C25C, 0x17>; R_ARM_RELATIVE|92-194-1-0-23-0-0-0
6112|data|Elf32_Rel <0x1C260, 0x17>; R_ARM_RELATIVE|96-194-1-0-23-0-0-0
6120|data|Elf32_Rel <0x1C264, 0x17>; R_ARM_RELATIVE|100-194-1-0-23-0-0-0
6128|data|Elf32_Rel <0x1C268, 0x17>; R_ARM_RELATIVE|104-194-1-0-23-0-0-0
6136|data|Elf32_Rel <0x1C26C, 0x17>; R_ARM_RELATIVE|108-194-1-0-23-0-0-0
6144|data|Elf32_Rel <0x1BF60, 0x715>; R_ARM_GLOB_DAT __cxa_finalize|96-191-1-0-21-7-0-0
6152|data|Elf32_Rel <0x1BF64, 0x815>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|100-191-1-0-21-8-0-0
6160|data|Elf32_Rel <0x1BF68, 0x1115>; R_ARM_GLOB_DAT acs_map|104-191-1-0-21-17-0-0
6168|data|Elf32_Rel <0x1BF70, 0x1615>; R_ARM_GLOB_DAT __stack_chk_guard|112-191-1-0-21-22-0-0
6176|data|Elf32_Rel <0x1BF80, 0x1F15>; R_ARM_GLOB_DAT optind|128-191-1-0-21-31-0-0
6184|data|Elf32_Rel <0x1BF8C, 0x2B15>; R_ARM_GLOB_DAT stderr|140-191-1-0-21-43-0-0
6192|data|Elf32_Rel <0x1BF98, 0x3815>; R_ARM_GLOB_DAT __gmon_start__|152-191-1-0-21-56-0-0
6200|data|Elf32_Rel <0x1BFA0, 0x3F15>; R_ARM_GLOB_DAT COLS|160-191-1-0-21-63-0-0
6208|data|Elf32_Rel <0x1BFAC, 0x4415>; R_ARM_GLOB_DAT stdscr|172-191-1-0-21-68-0-0
6216|data|Elf32_Rel <0x1BFB8, 0x5515>; R_ARM_GLOB_DAT stdout|184-191-1-0-21-85-0-0
6224|data|Elf32_Rel <0x1BFC0, 0x5A15>; R_ARM_GLOB_DAT LINES|192-191-1-0-21-90-0-0
6232|data|Elf32_Rel <0x1BFD0, 0x6015>; R_ARM_GLOB_DAT _Jv_RegisterClasses|208-191-1-0-21-96-0-0
6240|data|Elf32_Rel <0x1BFE8, 0x6415>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|232-191-1-0-21-100-0-0
6248|data|Elf32_Rel <0x1BFF0, 0x6815>; R_ARM_GLOB_DAT optarg|240-191-1-0-21-104-0-0
6256|data|Elf32_Rel <0x1BDD0, 0x316>; R_ARM_JUMP_SLOT pthread_mutex_unlock|208-189-1-0-22-3-0-0
6264|data|Elf32_Rel <0x1BDD4, 0x416>; R_ARM_JUMP_SLOT raise|212-189-1-0-22-4-0-0
6272|data|Elf32_Rel <0x1BDD8, 0x516>; R_ARM_JUMP_SLOT setbuf|216-189-1-0-22-5-0-0
6280|data|Elf32_Rel <0x1BDDC, 0x616>; R_ARM_JUMP_SLOT strcmp|220-189-1-0-22-6-0-0
6288|data|Elf32_Rel <0x1BDE0, 0x716>; R_ARM_JUMP_SLOT __cxa_finalize|224-189-1-0-22-7-0-0
6296|data|Elf32_Rel <0x1BDE4, 0x916>; R_ARM_JUMP_SLOT __isoc99_fscanf|228-189-1-0-22-9-0-0
6304|data|Elf32_Rel <0x1BDE8, 0xA16>; R_ARM_JUMP_SLOT fopen|232-189-1-0-22-10-0-0
6312|data|Elf32_Rel <0x1BDEC, 0xB16>; R_ARM_JUMP_SLOT read|236-189-1-0-22-11-0-0
6320|data|Elf32_Rel <0x1BDF0, 0xC16>; R_ARM_JUMP_SLOT fflush|240-189-1-0-22-12-0-0
6328|data|Elf32_Rel <0x1BDF4, 0xD16>; R_ARM_JUMP_SLOT wattr_on|244-189-1-0-22-13-0-0
6336|data|Elf32_Rel <0x1BDF8, 0xE16>; R_ARM_JUMP_SLOT has_colors|248-189-1-0-22-14-0-0
6344|data|Elf32_Rel <0x1BDFC, 0xF16>; R_ARM_JUMP_SLOT waddch|252-189-1-0-22-15-0-0
6352|data|Elf32_Rel <0x1BE00, 0x1016>; R_ARM_JUMP_SLOT free|0-190-1-0-22-16-0-0
6360|data|Elf32_Rel <0x1BE04, 0x1216>; R_ARM_JUMP_SLOT init_color|4-190-1-0-22-18-0-0
6368|data|Elf32_Rel <0x1BE08, 0x1316>; R_ARM_JUMP_SLOT pthread_mutex_lock|8-190-1-0-22-19-0-0
6376|data|Elf32_Rel <0x1BE0C, 0x1416>; R_ARM_JUMP_SLOT cbreak|12-190-1-0-22-20-0-0
6384|data|Elf32_Rel <0x1BE10, 0x1516>; R_ARM_JUMP_SLOT ped_device_get_next|16-190-1-0-22-21-0-0
6392|data|Elf32_Rel <0x1BE14, 0x1716>; R_ARM_JUMP_SLOT __vsnprintf_chk|20-190-1-0-22-23-0-0
6400|data|Elf32_Rel <0x1BE18, 0x1816>; R_ARM_JUMP_SLOT memcpy|24-190-1-0-22-24-0-0
6408|data|Elf32_Rel <0x1BE1C, 0x1916>; R_ARM_JUMP_SLOT sigwait|28-190-1-0-22-25-0-0
6416|data|Elf32_Rel <0x1BE20, 0x1A16>; R_ARM_JUMP_SLOT time|32-190-1-0-22-26-0-0
6424|data|Elf32_Rel <0x1BE24, 0x1B16>; R_ARM_JUMP_SLOT lseek|36-190-1-0-22-27-0-0
6432|data|Elf32_Rel <0x1BE28, 0x1C16>; R_ARM_JUMP_SLOT memcmp|40-190-1-0-22-28-0-0
6440|data|Elf32_Rel <0x1BE2C, 0x1D16>; R_ARM_JUMP_SLOT hide_panel|44-190-1-0-22-29-0-0
6448|data|Elf32_Rel <0x1BE30, 0x1E16>; R_ARM_JUMP_SLOT wborder|48-190-1-0-22-30-0-0
6456|data|Elf32_Rel <0x1BE34, 0x2016>; R_ARM_JUMP_SLOT wbkgdset|52-190-1-0-22-32-0-0
6464|data|Elf32_Rel <0x1BE38, 0x2116>; R_ARM_JUMP_SLOT init_pair|56-190-1-0-22-33-0-0
6472|data|Elf32_Rel <0x1BE3C, 0x2216>; R_ARM_JUMP_SLOT __stack_chk_fail|60-190-1-0-22-34-0-0
6480|data|Elf32_Rel <0x1BE40, 0x2316>; R_ARM_JUMP_SLOT wrefresh|64-190-1-0-22-35-0-0
6488|data|Elf32_Rel <0x1BE44, 0x2416>; R_ARM_JUMP_SLOT update_panels|68-190-1-0-22-36-0-0
6496|data|Elf32_Rel <0x1BE48, 0x2516>; R_ARM_JUMP_SLOT keypad|72-190-1-0-22-37-0-0
6504|data|Elf32_Rel <0x1BE4C, 0x2616>; R_ARM_JUMP_SLOT initscr|76-190-1-0-22-38-0-0
6512|data|Elf32_Rel <0x1BE50, 0x2716>; R_ARM_JUMP_SLOT realloc|80-190-1-0-22-39-0-0
6520|data|Elf32_Rel <0x1BE54, 0x2816>; R_ARM_JUMP_SLOT start_color|84-190-1-0-22-40-0-0
6528|data|Elf32_Rel <0x1BE58, 0x2916>; R_ARM_JUMP_SLOT perror|88-190-1-0-22-41-0-0
6536|data|Elf32_Rel <0x1BE5C, 0x2A16>; R_ARM_JUMP_SLOT newwin|92-190-1-0-22-42-0-0
6544|data|Elf32_Rel <0x1BE60, 0x2C16>; R_ARM_JUMP_SLOT fwrite|96-190-1-0-22-44-0-0
6552|data|Elf32_Rel <0x1BE64, 0x2D16>; R_ARM_JUMP_SLOT ioctl|100-190-1-0-22-45-0-0
6560|data|Elf32_Rel <0x1BE68, 0x2E16>; R_ARM_JUMP_SLOT pthread_sigmask|104-190-1-0-22-46-0-0
6568|data|Elf32_Rel <0x1BE6C, 0x2F16>; R_ARM_JUMP_SLOT pthread_create|108-190-1-0-22-47-0-0
6576|data|Elf32_Rel <0x1BE70, 0x3016>; R_ARM_JUMP_SLOT puts|112-190-1-0-22-48-0-0
6584|data|Elf32_Rel <0x1BE74, 0x3116>; R_ARM_JUMP_SLOT malloc|116-190-1-0-22-49-0-0
6592|data|Elf32_Rel <0x1BE78, 0x3216>; R_ARM_JUMP_SLOT del_panel|120-190-1-0-22-50-0-0
6600|data|Elf32_Rel <0x1BE7C, 0x3316>; R_ARM_JUMP_SLOT sigaddset|124-190-1-0-22-51-0-0
6608|data|Elf32_Rel <0x1BE80, 0x3416>; R_ARM_JUMP_SLOT __libc_start_main|128-190-1-0-22-52-0-0
6616|data|Elf32_Rel <0x1BE84, 0x3516>; R_ARM_JUMP_SLOT strerror|132-190-1-0-22-53-0-0
6624|data|Elf32_Rel <0x1BE88, 0x3616>; R_ARM_JUMP_SLOT __fxstat|136-190-1-0-22-54-0-0
6632|data|Elf32_Rel <0x1BE8C, 0x3716>; R_ARM_JUMP_SLOT new_panel|140-190-1-0-22-55-0-0
6640|data|Elf32_Rel <0x1BE90, 0x3816>; R_ARM_JUMP_SLOT __gmon_start__|144-190-1-0-22-56-0-0
6648|data|Elf32_Rel <0x1BE94, 0x3916>; R_ARM_JUMP_SLOT ped_device_open|148-190-1-0-22-57-0-0
6656|data|Elf32_Rel <0x1BE98, 0x3A16>; R_ARM_JUMP_SLOT open|152-190-1-0-22-58-0-0
6664|data|Elf32_Rel <0x1BE9C, 0x3B16>; R_ARM_JUMP_SLOT getopt_long|156-190-1-0-22-59-0-0
6672|data|Elf32_Rel <0x1BEA0, 0x3C16>; R_ARM_JUMP_SLOT delwin|160-190-1-0-22-60-0-0
6680|data|Elf32_Rel <0x1BEA4, 0x3D16>; R_ARM_JUMP_SLOT exit|164-190-1-0-22-61-0-0
6688|data|Elf32_Rel <0x1BEA8, 0x3E16>; R_ARM_JUMP_SLOT flock|168-190-1-0-22-62-0-0
6696|data|Elf32_Rel <0x1BEAC, 0x4016>; R_ARM_JUMP_SLOT halfdelay|172-190-1-0-22-64-0-0
6704|data|Elf32_Rel <0x1BEB0, 0x4116>; R_ARM_JUMP_SLOT strlen|176-190-1-0-22-65-0-0
6712|data|Elf32_Rel <0x1BEB4, 0x4216>; R_ARM_JUMP_SLOT wprintw|180-190-1-0-22-66-0-0
6720|data|Elf32_Rel <0x1BEB8, 0x4316>; R_ARM_JUMP_SLOT reset_prog_mode|184-190-1-0-22-67-0-0
6728|data|Elf32_Rel <0x1BEBC, 0x4516>; R_ARM_JUMP_SLOT pthread_attr_init|188-190-1-0-22-69-0-0
6736|data|Elf32_Rel <0x1BEC0, 0x4616>; R_ARM_JUMP_SLOT nodelay|192-190-1-0-22-70-0-0
6744|data|Elf32_Rel <0x1BEC4, 0x4716>; R_ARM_JUMP_SLOT __errno_location|196-190-1-0-22-71-0-0
6752|data|Elf32_Rel <0x1BEC8, 0x4816>; R_ARM_JUMP_SLOT __isoc99_sscanf|200-190-1-0-22-72-0-0
6760|data|Elf32_Rel <0x1BECC, 0x4916>; R_ARM_JUMP_SLOT memset|204-190-1-0-22-73-0-0
6768|data|Elf32_Rel <0x1BED0, 0x4A16>; R_ARM_JUMP_SLOT strncpy|208-190-1-0-22-74-0-0
6776|data|Elf32_Rel <0x1BED4, 0x4B16>; R_ARM_JUMP_SLOT pthread_cancel|212-190-1-0-22-75-0-0
6784|data|Elf32_Rel <0x1BED8, 0x4C16>; R_ARM_JUMP_SLOT ped_device_close|216-190-1-0-22-76-0-0
6792|data|Elf32_Rel <0x1BEDC, 0x4D16>; R_ARM_JUMP_SLOT gmtime|220-190-1-0-22-77-0-0
6800|data|Elf32_Rel <0x1BEE0, 0x4E16>; R_ARM_JUMP_SLOT __printf_chk|224-190-1-0-22-78-0-0
6808|data|Elf32_Rel <0x1BEE4, 0x4F16>; R_ARM_JUMP_SLOT write|228-190-1-0-22-79-0-0
6816|data|Elf32_Rel <0x1BEE8, 0x5016>; R_ARM_JUMP_SLOT fileno|232-190-1-0-22-80-0-0
6824|data|Elf32_Rel <0x1BEEC, 0x5116>; R_ARM_JUMP_SLOT can_change_color|236-190-1-0-22-81-0-0
6832|data|Elf32_Rel <0x1BEF0, 0x5216>; R_ARM_JUMP_SLOT def_prog_mode|240-190-1-0-22-82-0-0
6840|data|Elf32_Rel <0x1BEF4, 0x5316>; R_ARM_JUMP_SLOT show_panel|244-190-1-0-22-83-0-0
6848|data|Elf32_Rel <0x1BEF8, 0x5416>; R_ARM_JUMP_SLOT __fprintf_chk|248-190-1-0-22-84-0-0
6856|data|Elf32_Rel <0x1BEFC, 0x5616>; R_ARM_JUMP_SLOT fclose|252-190-1-0-22-86-0-0
6864|data|Elf32_Rel <0x1BF00, 0x5716>; R_ARM_JUMP_SLOT endwin|0-191-1-0-22-87-0-0
6872|data|Elf32_Rel <0x1BF04, 0x5816>; R_ARM_JUMP_SLOT sigemptyset|4-191-1-0-22-88-0-0
6880|data|Elf32_Rel <0x1BF08, 0x5916>; R_ARM_JUMP_SLOT wgetch|8-191-1-0-22-89-0-0
6888|data|Elf32_Rel <0x1BF0C, 0x5B16>; R_ARM_JUMP_SLOT wclear|12-191-1-0-22-91-0-0
6896|data|Elf32_Rel <0x1BF10, 0x5C16>; R_ARM_JUMP_SLOT mvwprintw|16-191-1-0-22-92-0-0
6904|data|Elf32_Rel <0x1BF14, 0x5D16>; R_ARM_JUMP_SLOT pthread_join|20-191-1-0-22-93-0-0
6912|data|Elf32_Rel <0x1BF18, 0x5E16>; R_ARM_JUMP_SLOT ped_device_get|24-191-1-0-22-94-0-0
6920|data|Elf32_Rel <0x1BF1C, 0x5F16>; R_ARM_JUMP_SLOT nocbreak|28-191-1-0-22-95-0-0
6928|data|Elf32_Rel <0x1BF20, 0x6116>; R_ARM_JUMP_SLOT noecho|32-191-1-0-22-97-0-0
6936|data|Elf32_Rel <0x1BF24, 0x6216>; R_ARM_JUMP_SLOT doupdate|36-191-1-0-22-98-0-0
6944|data|Elf32_Rel <0x1BF28, 0x6316>; R_ARM_JUMP_SLOT fopen64|40-191-1-0-22-99-0-0
6952|data|Elf32_Rel <0x1BF2C, 0x6516>; R_ARM_JUMP_SLOT ped_device_probe_all|44-191-1-0-22-101-0-0
6960|data|Elf32_Rel <0x1BF30, 0x6616>; R_ARM_JUMP_SLOT wmove|48-191-1-0-22-102-0-0
6968|data|Elf32_Rel <0x1BF34, 0x6716>; R_ARM_JUMP_SLOT pthread_testcancel|52-191-1-0-22-103-0-0
6976|data|Elf32_Rel <0x1BF38, 0x6916>; R_ARM_JUMP_SLOT strncat|56-191-1-0-22-105-0-0
6984|data|Elf32_Rel <0x1BF3C, 0x6A16>; R_ARM_JUMP_SLOT pthread_attr_setdetachstate|60-191-1-0-22-106-0-0
6992|data|Elf32_Rel <0x1BF40, 0x6B16>; R_ARM_JUMP_SLOT curs_set|64-191-1-0-22-107-0-0
7000|data|Elf32_Rel <0x1BF44, 0x6C16>; R_ARM_JUMP_SLOT fdatasync|68-191-1-0-22-108-0-0
7008|data|Elf32_Rel <0x1BF48, 0x6D16>; R_ARM_JUMP_SLOT abort|72-191-1-0-22-109-0-0
7016|data|Elf32_Rel <0x1BF4C, 0x6E16>; R_ARM_JUMP_SLOT close|76-191-1-0-22-110-0-0
7024|data|Elf32_Rel <0x1BF50, 0x6F16>; R_ARM_JUMP_SLOT werase|80-191-1-0-22-111-0-0
7032|data|Elf32_Rel <0x1BF54, 0x7016>; R_ARM_JUMP_SLOT __snprintf_chk|84-191-1-0-22-112-0-0
7040|code|PUSH            {R3,LR}; _init|8-64-45-233
7044|code|BL              sub_280C|32-3-0-235
7048|code|POP             {R3,PC}|8-128-189-232
7052|code|PUSH            {LR}|4-224-45-229
7056|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x1B9C)|4-224-159-229
7060|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
7064|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
7068|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1B9C|40-162-1-0
7072|code|ADR             R12, 0x1BA8|0-198-143-226
7076|code|ADD             R12, R12, #0x1A000|26-202-140-226
7080|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x1BBA8)]!; __imp_pthread_mutex_unlock|40-242-188-229
7084|code|ADR             R12, 0x1BB4|0-198-143-226
7088|code|ADD             R12, R12, #0x1A000|26-202-140-226
7092|code|LDR             PC, [R12,#(raise_ptr - 0x1BBB4)]!; __imp_raise|32-242-188-229
7096|code|ADR             R12, 0x1BC0|0-198-143-226
7100|code|ADD             R12, R12, #0x1A000|26-202-140-226
7104|code|LDR             PC, [R12,#(setbuf_ptr - 0x1BBC0)]!; __imp_setbuf|24-242-188-229
7108|code|ADR             R12, 0x1BCC|0-198-143-226
7112|code|ADD             R12, R12, #0x1A000|26-202-140-226
7116|code|LDR             PC, [R12,#(strcmp_ptr - 0x1BBCC)]!; __imp_strcmp|16-242-188-229
7120|code|ADR             R12, 0x1BD8|0-198-143-226
7124|code|ADD             R12, R12, #0x1A000|26-202-140-226
7128|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x1BBD8)]!; __imp___cxa_finalize|8-242-188-229
7132|code|ADR             R12, 0x1BE4|0-198-143-226
7136|code|ADD             R12, R12, #0x1A000|26-202-140-226
7140|code|LDR             PC, [R12,#(__isoc99_fscanf_ptr - 0x1BBE4)]!; __imp___isoc99_fscanf|0-242-188-229
7144|code|ADR             R12, 0x1BF0|0-198-143-226
7148|code|ADD             R12, R12, #0x1A000|26-202-140-226
7152|code|LDR             PC, [R12,#(fopen_ptr - 0x1BBF0)]!; __imp_fopen|248-241-188-229
7156|code|ADR             R12, 0x1BFC|0-198-143-226
7160|code|ADD             R12, R12, #0x1A000|26-202-140-226
7164|code|LDR             PC, [R12,#(read_ptr - 0x1BBFC)]!; __imp_read|240-241-188-229
7168|code|ADR             R12, 0x1C08|0-198-143-226
7172|code|ADD             R12, R12, #0x1A000|26-202-140-226
7176|code|LDR             PC, [R12,#(fflush_ptr - 0x1BC08)]!; __imp_fflush|232-241-188-229
7180|code|ADR             R12, 0x1C14|0-198-143-226
7184|code|ADD             R12, R12, #0x1A000|26-202-140-226
7188|code|LDR             PC, [R12,#(wattr_on_ptr - 0x1BC14)]!; __imp_wattr_on|224-241-188-229
7192|code|ADR             R12, 0x1C20|0-198-143-226
7196|code|ADD             R12, R12, #0x1A000|26-202-140-226
7200|code|LDR             PC, [R12,#(has_colors_ptr - 0x1BC20)]!; __imp_has_colors|216-241-188-229
7204|code|ADR             R12, 0x1C2C|0-198-143-226
7208|code|ADD             R12, R12, #0x1A000|26-202-140-226
7212|code|LDR             PC, [R12,#(waddch_ptr - 0x1BC2C)]!; __imp_waddch|208-241-188-229
7216|code|ADR             R12, 0x1C38|0-198-143-226
7220|code|ADD             R12, R12, #0x1A000|26-202-140-226
7224|code|LDR             PC, [R12,#(free_ptr - 0x1BC38)]!; __imp_free|200-241-188-229
7228|code|ADR             R12, 0x1C44|0-198-143-226
7232|code|ADD             R12, R12, #0x1A000|26-202-140-226
7236|code|LDR             PC, [R12,#(init_color_ptr - 0x1BC44)]!; __imp_init_color|192-241-188-229
7240|code|ADR             R12, 0x1C50|0-198-143-226
7244|code|ADD             R12, R12, #0x1A000|26-202-140-226
7248|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x1BC50)]!; __imp_pthread_mutex_lock|184-241-188-229
7252|code|ADR             R12, 0x1C5C|0-198-143-226
7256|code|ADD             R12, R12, #0x1A000|26-202-140-226
7260|code|LDR             PC, [R12,#(cbreak_ptr - 0x1BC5C)]!; __imp_cbreak|176-241-188-229
7264|code|ADR             R12, 0x1C68|0-198-143-226
7268|code|ADD             R12, R12, #0x1A000|26-202-140-226
7272|code|LDR             PC, [R12,#(ped_device_get_next_ptr - 0x1BC68)]!; __imp_ped_device_get_next|168-241-188-229
7276|code|ADR             R12, 0x1C74|0-198-143-226
7280|code|ADD             R12, R12, #0x1A000|26-202-140-226
7284|code|LDR             PC, [R12,#(__vsnprintf_chk_ptr - 0x1BC74)]!; __imp___vsnprintf_chk|160-241-188-229
7288|code|ADR             R12, 0x1C80|0-198-143-226
7292|code|ADD             R12, R12, #0x1A000|26-202-140-226
7296|code|LDR             PC, [R12,#(memcpy_ptr - 0x1BC80)]!; __imp_memcpy|152-241-188-229
7300|code|ADR             R12, 0x1C8C|0-198-143-226
7304|code|ADD             R12, R12, #0x1A000|26-202-140-226
7308|code|LDR             PC, [R12,#(sigwait_ptr - 0x1BC8C)]!; __imp_sigwait|144-241-188-229
7312|code|ADRL            R12, 0x1BC98|0-198-143-226-26-202-140-226
7320|code|LDR             PC, [R12,#(time_ptr - 0x1BC98)]!; __imp_time|136-241-188-229
7324|code|ADRL            R12, 0x1BCA4|0-198-143-226-26-202-140-226
7332|code|LDR             PC, [R12,#(lseek_ptr - 0x1BCA4)]!; __imp_lseek|128-241-188-229
7336|code|ADRL            R12, 0x1BCB0|0-198-143-226-26-202-140-226
7344|code|LDR             PC, [R12,#(memcmp_ptr - 0x1BCB0)]!; __imp_memcmp|120-241-188-229
7348|code|ADRL            R12, 0x1BCBC|0-198-143-226-26-202-140-226
7356|code|LDR             PC, [R12,#(hide_panel_ptr - 0x1BCBC)]!; __imp_hide_panel|112-241-188-229
7360|code|ADRL            R12, 0x1BCC8|0-198-143-226-26-202-140-226
7368|code|LDR             PC, [R12,#(wborder_ptr - 0x1BCC8)]!; __imp_wborder|104-241-188-229
7372|code|ADRL            R12, 0x1BCD4|0-198-143-226-26-202-140-226
7380|code|LDR             PC, [R12,#(wbkgdset_ptr - 0x1BCD4)]!; __imp_wbkgdset|96-241-188-229
7384|code|ADRL            R12, 0x1BCE0|0-198-143-226-26-202-140-226
7392|code|LDR             PC, [R12,#(init_pair_ptr - 0x1BCE0)]!; __imp_init_pair|88-241-188-229
7396|code|ADRL            R12, 0x1BCEC|0-198-143-226-26-202-140-226
7404|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x1BCEC)]!; __imp___stack_chk_fail|80-241-188-229
7408|code|BX              PC|120-71
7410|data|ALIGN 4|192-70
7412|code|ADRL            R12, 0x1BCFC|0-198-143-226-26-202-140-226
7420|code|LDR             PC, [R12,#(wrefresh_ptr - 0x1BCFC)]!; __imp_wrefresh|68-241-188-229
7424|code|ADRL            R12, 0x1BD08|0-198-143-226-26-202-140-226
7432|code|LDR             PC, [R12,#(update_panels_ptr - 0x1BD08)]!; __imp_update_panels|60-241-188-229
7436|code|ADRL            R12, 0x1BD14|0-198-143-226-26-202-140-226
7444|code|LDR             PC, [R12,#(keypad_ptr - 0x1BD14)]!; __imp_keypad|52-241-188-229
7448|code|ADRL            R12, 0x1BD20|0-198-143-226-26-202-140-226
7456|code|LDR             PC, [R12,#(initscr_ptr - 0x1BD20)]!; __imp_initscr|44-241-188-229
7460|code|ADRL            R12, 0x1BD2C|0-198-143-226-26-202-140-226
7468|code|LDR             PC, [R12,#(realloc_ptr - 0x1BD2C)]!; __imp_realloc|36-241-188-229
7472|code|ADRL            R12, 0x1BD38|0-198-143-226-26-202-140-226
7480|code|LDR             PC, [R12,#(start_color_ptr - 0x1BD38)]!; __imp_start_color|28-241-188-229
7484|code|ADRL            R12, 0x1BD44|0-198-143-226-26-202-140-226
7492|code|LDR             PC, [R12,#(perror_ptr - 0x1BD44)]!; __imp_perror|20-241-188-229
7496|code|ADRL            R12, 0x1BD50|0-198-143-226-26-202-140-226
7504|code|LDR             PC, [R12,#(newwin_ptr - 0x1BD50)]!; __imp_newwin|12-241-188-229
7508|code|ADRL            R12, 0x1BD5C|0-198-143-226-26-202-140-226
7516|code|LDR             PC, [R12,#(fwrite_ptr - 0x1BD5C)]!; __imp_fwrite|4-241-188-229
7520|code|ADRL            R12, 0x1BD68|0-198-143-226-26-202-140-226
7528|code|LDR             PC, [R12,#(ioctl_ptr - 0x1BD68)]!; __imp_ioctl|252-240-188-229
7532|code|ADRL            R12, 0x1BD74|0-198-143-226-26-202-140-226
7540|code|LDR             PC, [R12,#(pthread_sigmask_ptr - 0x1BD74)]!; __imp_pthread_sigmask|244-240-188-229
7544|code|ADRL            R12, 0x1BD80|0-198-143-226-26-202-140-226
7552|code|LDR             PC, [R12,#(pthread_create_ptr - 0x1BD80)]!; __imp_pthread_create|236-240-188-229
7556|code|ADRL            R12, 0x1BD8C|0-198-143-226-26-202-140-226
7564|code|LDR             PC, [R12,#(puts_ptr - 0x1BD8C)]!; __imp_puts|228-240-188-229
7568|code|ADRL            R12, 0x1BD98|0-198-143-226-26-202-140-226
7576|code|LDR             PC, [R12,#(malloc_ptr - 0x1BD98)]!; __imp_malloc|220-240-188-229
7580|code|ADRL            R12, 0x1BDA4|0-198-143-226-26-202-140-226
7588|code|LDR             PC, [R12,#(del_panel_ptr - 0x1BDA4)]!; __imp_del_panel|212-240-188-229
7592|code|ADRL            R12, 0x1BDB0|0-198-143-226-26-202-140-226
7600|code|LDR             PC, [R12,#(sigaddset_ptr - 0x1BDB0)]!; __imp_sigaddset|204-240-188-229
7604|code|ADRL            R12, 0x1BDBC|0-198-143-226-26-202-140-226
7612|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x1BDBC)]!; __imp___libc_start_main|196-240-188-229
7616|code|ADRL            R12, 0x1BDC8|0-198-143-226-26-202-140-226
7624|code|LDR             PC, [R12,#(strerror_ptr - 0x1BDC8)]!; __imp_strerror|188-240-188-229
7628|code|ADRL            R12, 0x1BDD4|0-198-143-226-26-202-140-226
7636|code|LDR             PC, [R12,#(__fxstat_ptr - 0x1BDD4)]!; __imp___fxstat|180-240-188-229
7640|code|ADRL            R12, 0x1BDE0|0-198-143-226-26-202-140-226
7648|code|LDR             PC, [R12,#(new_panel_ptr - 0x1BDE0)]!; __imp_new_panel|172-240-188-229
7652|code|ADRL            R12, 0x1BDEC|0-198-143-226-26-202-140-226
7660|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x1BDEC)]!; __imp___gmon_start__|164-240-188-229
7664|code|ADRL            R12, 0x1BDF8|0-198-143-226-26-202-140-226
7672|code|LDR             PC, [R12,#(ped_device_open_ptr - 0x1BDF8)]!; __imp_ped_device_open|156-240-188-229
7676|code|ADRL            R12, 0x1BE04|0-198-143-226-26-202-140-226
7684|code|LDR             PC, [R12,#(open_ptr - 0x1BE04)]!; __imp_open|148-240-188-229
7688|code|ADRL            R12, 0x1BE10|0-198-143-226-26-202-140-226
7696|code|LDR             PC, [R12,#(getopt_long_ptr - 0x1BE10)]!; __imp_getopt_long|140-240-188-229
7700|code|ADRL            R12, 0x1BE1C|0-198-143-226-26-202-140-226
7708|code|LDR             PC, [R12,#(delwin_ptr - 0x1BE1C)]!; __imp_delwin|132-240-188-229
7712|code|ADRL            R12, 0x1BE28|0-198-143-226-26-202-140-226
7720|code|LDR             PC, [R12,#(exit_ptr - 0x1BE28)]!; __imp_exit|124-240-188-229
7724|code|ADRL            R12, 0x1BE34|0-198-143-226-26-202-140-226
7732|code|LDR             PC, [R12,#(flock_ptr - 0x1BE34)]!; __imp_flock|116-240-188-229
7736|code|ADRL            R12, 0x1BE40|0-198-143-226-26-202-140-226
7744|code|LDR             PC, [R12,#(halfdelay_ptr - 0x1BE40)]!; __imp_halfdelay|108-240-188-229
7748|code|ADRL            R12, 0x1BE4C|0-198-143-226-26-202-140-226
7756|code|LDR             PC, [R12,#(strlen_ptr - 0x1BE4C)]!; __imp_strlen|100-240-188-229
7760|code|ADRL            R12, 0x1BE58|0-198-143-226-26-202-140-226
7768|code|LDR             PC, [R12,#(wprintw_ptr - 0x1BE58)]!; __imp_wprintw|92-240-188-229
7772|code|ADRL            R12, 0x1BE64|0-198-143-226-26-202-140-226
7780|code|LDR             PC, [R12,#(reset_prog_mode_ptr - 0x1BE64)]!; __imp_reset_prog_mode|84-240-188-229
7784|code|ADRL            R12, 0x1BE70|0-198-143-226-26-202-140-226
7792|code|LDR             PC, [R12,#(pthread_attr_init_ptr - 0x1BE70)]!; __imp_pthread_attr_init|76-240-188-229
7796|code|ADRL            R12, 0x1BE7C|0-198-143-226-26-202-140-226
7804|code|LDR             PC, [R12,#(nodelay_ptr - 0x1BE7C)]!; __imp_nodelay|68-240-188-229
7808|code|ADRL            R12, 0x1BE88|0-198-143-226-26-202-140-226
7816|code|LDR             PC, [R12,#(__errno_location_ptr - 0x1BE88)]!; __imp___errno_location|60-240-188-229
7820|code|ADRL            R12, 0x1BE94|0-198-143-226-26-202-140-226
7828|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x1BE94)]!; __imp___isoc99_sscanf|52-240-188-229
7832|code|ADRL            R12, 0x1BEA0|0-198-143-226-26-202-140-226
7840|code|LDR             PC, [R12,#(memset_ptr - 0x1BEA0)]!; __imp_memset|44-240-188-229
7844|code|ADRL            R12, 0x1BEAC|0-198-143-226-26-202-140-226
7852|code|LDR             PC, [R12,#(strncpy_ptr - 0x1BEAC)]!; __imp_strncpy|36-240-188-229
7856|code|ADRL            R12, 0x1BEB8|0-198-143-226-26-202-140-226
7864|code|LDR             PC, [R12,#(pthread_cancel_ptr - 0x1BEB8)]!; __imp_pthread_cancel|28-240-188-229
7868|code|ADRL            R12, 0x1BEC4|0-198-143-226-26-202-140-226
7876|code|LDR             PC, [R12,#(ped_device_close_ptr - 0x1BEC4)]!; __imp_ped_device_close|20-240-188-229
7880|code|ADRL            R12, 0x1BED0|0-198-143-226-26-202-140-226
7888|code|LDR             PC, [R12,#(gmtime_ptr - 0x1BED0)]!; __imp_gmtime|12-240-188-229
7892|code|ADRL            R12, 0x1BEDC|0-198-143-226-26-202-140-226
7900|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x1BEDC)]!; __imp___printf_chk|4-240-188-229
7904|code|ADR             R12, 0x1EE8|0-198-143-226
7908|code|ADD             R12, R12, #0x19000|25-202-140-226
7912|code|LDR             PC, [R12,#(write_ptr - 0x1AEE8)]!; __imp_write|252-255-188-229
7916|code|ADR             R12, 0x1EF4|0-198-143-226
7920|code|ADD             R12, R12, #0x19000|25-202-140-226
7924|code|LDR             PC, [R12,#(fileno_ptr - 0x1AEF4)]!; __imp_fileno|244-255-188-229
7928|code|ADR             R12, 0x1F00|0-198-143-226
7932|code|ADD             R12, R12, #0x19000|25-202-140-226
7936|code|LDR             PC, [R12,#(can_change_color_ptr - 0x1AF00)]!; __imp_can_change_color|236-255-188-229
7940|code|ADR             R12, 0x1F0C|0-198-143-226
7944|code|ADD             R12, R12, #0x19000|25-202-140-226
7948|code|LDR             PC, [R12,#(def_prog_mode_ptr - 0x1AF0C)]!; __imp_def_prog_mode|228-255-188-229
7952|code|ADR             R12, 0x1F18|0-198-143-226
7956|code|ADD             R12, R12, #0x19000|25-202-140-226
7960|code|LDR             PC, [R12,#(show_panel_ptr - 0x1AF18)]!; __imp_show_panel|220-255-188-229
7964|code|ADR             R12, 0x1F24|0-198-143-226
7968|code|ADD             R12, R12, #0x19000|25-202-140-226
7972|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x1AF24)]!; __imp___fprintf_chk|212-255-188-229
7976|code|ADR             R12, 0x1F30|0-198-143-226
7980|code|ADD             R12, R12, #0x19000|25-202-140-226
7984|code|LDR             PC, [R12,#(fclose_ptr - 0x1AF30)]!; __imp_fclose|204-255-188-229
7988|code|BX              PC|120-71
7990|data|ALIGN 4|192-70
7992|code|ADR             R12, 0x1F40|0-198-143-226
7996|code|ADD             R12, R12, #0x19000|25-202-140-226
8000|code|LDR             PC, [R12,#(endwin_ptr - 0x1AF40)]!; __imp_endwin|192-255-188-229
8004|code|ADR             R12, 0x1F4C|0-198-143-226
8008|code|ADD             R12, R12, #0x19000|25-202-140-226
8012|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x1AF4C)]!; __imp_sigemptyset|184-255-188-229
8016|code|ADR             R12, 0x1F58|0-198-143-226
8020|code|ADD             R12, R12, #0x19000|25-202-140-226
8024|code|LDR             PC, [R12,#(wgetch_ptr - 0x1AF58)]!; __imp_wgetch|176-255-188-229
8028|code|ADR             R12, 0x1F64|0-198-143-226
8032|code|ADD             R12, R12, #0x19000|25-202-140-226
8036|code|LDR             PC, [R12,#(wclear_ptr - 0x1AF64)]!; __imp_wclear|168-255-188-229
8040|code|ADR             R12, 0x1F70|0-198-143-226
8044|code|ADD             R12, R12, #0x19000|25-202-140-226
8048|code|LDR             PC, [R12,#(mvwprintw_ptr - 0x1AF70)]!; __imp_mvwprintw|160-255-188-229
8052|code|ADR             R12, 0x1F7C|0-198-143-226
8056|code|ADD             R12, R12, #0x19000|25-202-140-226
8060|code|LDR             PC, [R12,#(pthread_join_ptr - 0x1AF7C)]!; __imp_pthread_join|152-255-188-229
8064|code|ADR             R12, 0x1F88|0-198-143-226
8068|code|ADD             R12, R12, #0x19000|25-202-140-226
8072|code|LDR             PC, [R12,#(ped_device_get_ptr - 0x1AF88)]!; __imp_ped_device_get|144-255-188-229
8076|code|ADR             R12, 0x1F94|0-198-143-226
8080|code|ADD             R12, R12, #0x19000|25-202-140-226
8084|code|LDR             PC, [R12,#(nocbreak_ptr - 0x1AF94)]!; __imp_nocbreak|136-255-188-229
8088|code|ADR             R12, 0x1FA0|0-198-143-226
8092|code|ADD             R12, R12, #0x19000|25-202-140-226
8096|code|LDR             PC, [R12,#(noecho_ptr - 0x1AFA0)]!; __imp_noecho|128-255-188-229
8100|code|ADR             R12, 0x1FAC|0-198-143-226
8104|code|ADD             R12, R12, #0x19000|25-202-140-226
8108|code|LDR             PC, [R12,#(doupdate_ptr - 0x1AFAC)]!; __imp_doupdate|120-255-188-229
8112|code|ADR             R12, 0x1FB8|0-198-143-226
8116|code|ADD             R12, R12, #0x19000|25-202-140-226
8120|code|LDR             PC, [R12,#(fopen64_ptr - 0x1AFB8)]!; __imp_fopen64|112-255-188-229
8124|code|ADR             R12, 0x1FC4|0-198-143-226
8128|code|ADD             R12, R12, #0x19000|25-202-140-226
8132|code|LDR             PC, [R12,#(ped_device_probe_all_ptr - 0x1AFC4)]!; __imp_ped_device_probe_all|104-255-188-229
8136|code|ADR             R12, 0x1FD0|0-198-143-226
8140|code|ADD             R12, R12, #0x19000|25-202-140-226
8144|code|LDR             PC, [R12,#(wmove_ptr - 0x1AFD0)]!; __imp_wmove|96-255-188-229
8148|code|ADR             R12, 0x1FDC|0-198-143-226
8152|code|ADD             R12, R12, #0x19000|25-202-140-226
8156|code|LDR             PC, [R12,#(pthread_testcancel_ptr - 0x1AFDC)]!; __imp_pthread_testcancel|88-255-188-229
8160|code|ADR             R12, 0x1FE8|0-198-143-226
8164|code|ADD             R12, R12, #0x19000|25-202-140-226
8168|code|LDR             PC, [R12,#(strncat_ptr - 0x1AFE8)]!; __imp_strncat|80-255-188-229
8172|code|ADR             R12, 0x1FF4|0-198-143-226
8176|code|ADD             R12, R12, #0x19000|25-202-140-226
8180|code|LDR             PC, [R12,#(pthread_attr_setdetachstate_ptr - 0x1AFF4)]!; __imp_pthread_attr_setdetachstate|72-255-188-229
8184|code|BX              PC|120-71
8186|data|ALIGN 4|192-70
8188|code|ADR             R12, 0x2004|0-198-143-226
8192|code|ADD             R12, R12, #0x19000|25-202-140-226
8196|code|LDR             PC, [R12,#(curs_set_ptr - 0x1B004)]!; __imp_curs_set|60-255-188-229
8200|code|ADR             R12, 0x2010|0-198-143-226
8204|code|ADD             R12, R12, #0x19000|25-202-140-226
8208|code|LDR             PC, [R12,#(fdatasync_ptr - 0x1B010)]!; __imp_fdatasync|52-255-188-229
8212|code|ADR             R12, 0x201C|0-198-143-226
8216|code|ADD             R12, R12, #0x19000|25-202-140-226
8220|code|LDR             PC, [R12,#(abort_ptr - 0x1B01C)]!; __imp_abort|44-255-188-229
8224|code|ADR             R12, 0x2028|0-198-143-226
8228|code|ADD             R12, R12, #0x19000|25-202-140-226
8232|code|LDR             PC, [R12,#(close_ptr - 0x1B028)]!; __imp_close|36-255-188-229
8236|code|ADR             R12, 0x2034|0-198-143-226
8240|code|ADD             R12, R12, #0x19000|25-202-140-226
8244|code|LDR             PC, [R12,#(werase_ptr - 0x1B034)]!; __imp_werase|28-255-188-229
8248|code|ADR             R12, 0x2040|0-198-143-226
8252|code|ADD             R12, R12, #0x19000|25-202-140-226
8256|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x1B040)]!; __imp___snprintf_chk|20-255-188-229
8260|data|ALIGN 8|0-0-0-0
8264|code|PUSH.W          {R4-R11,LR}|45-233-240-79
8268|code|SUB             SP, SP, #0x134|205-176
8270|code|LDR.W           R11, =(_GLOBAL_OFFSET_TABLE_ - 0x205E)|223-248-188-182
8274|code|MOV             R4, R0|4-70
8276|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x1BDC4)|223-248-184-54
8280|code|MOVS            R0, #0; size|0-32
8282|code|ADD             R11, PC; _GLOBAL_OFFSET_TABLE_|251-68
8284|code|MOV             R5, R1|13-70
8286|code|LDR.W           R3, [R11,R3]; __stack_chk_guard|91-248-3-48
8290|code|STR             R0, [SP,#0x158+var_114]|17-144
8292|code|STR             R3, [SP,#0x158+var_140]|6-147
8294|code|LDR             R3, [R3]|27-104
8296|code|STR             R3, [SP,#0x158+var_2C]|75-147
8298|code|BLX             malloc|255-247-146-238
8302|code|MOV             R1, R5|41-70
8304|code|STR             R0, [SP,#0x158+var_14C]|3-144
8306|code|MOV             R0, R4|32-70
8308|code|BL              sub_7908|5-240-72-252
8312|code|CMP             R0, R4|160-66
8314|code|BEQ.W           loc_2618|0-240-205-130
8318|code|ADD.W           R1, R5, R0,LSL#2|5-235-128-1
8322|code|SUBS            R2, R4, R0|34-26
8324|code|ADD             R0, SP, #0x158+var_114|17-168
8326|code|BL              sub_6444|4-240-221-249
8330|code|MOV             R7, R0|7-70
8332|code|CMP             R0, #0|0-40
8334|code|BEQ             loc_2190|127-208
8336|code|LDR.W           R4, =(aDevUrandom - 0x209A); "/dev/urandom"|223-248-128-70
8340|code|MOVS            R1, #0; oflag|0-33
8342|code|ADD             R4, PC; "/dev/urandom"|124-68
8344|code|MOV             R0, R4; file|32-70
8346|code|BLX             open|255-247-176-238
8350|code|SUBS            R6, R0, #0|6-30
8352|code|BLT.W           loc_2668|192-242-226-130
8356|code|LDR.W           R1, =(aOpenedEntropyS - 0x20B2); "Opened entropy source '%s'."|223-248-112-22
8360|code|MOV             R2, R4|34-70
8362|code|ADD             R4, SP, #0x158+var_AC|43-172
8364|code|MOVS            R0, #3|3-32
8366|code|ADD             R1, PC; "Opened entropy source '%s'."|121-68
8368|code|BL              sub_66B0|4-240-254-250
8372|code|MOV             R0, R4; set|32-70
8374|code|BLX             sigemptyset|255-247-70-239
8378|code|MOVS            R1, #1; signo|1-33
8380|code|MOV             R0, R4; set|32-70
8382|code|BLX             sigaddset|255-247-116-238
8386|code|MOVS            R1, #0xF; signo|15-33
8388|code|MOV             R0, R4; set|32-70
8390|code|BLX             sigaddset|255-247-112-238
8394|code|MOVS            R1, #3; signo|3-33
8396|code|MOV             R0, R4; set|32-70
8398|code|BLX             sigaddset|255-247-108-238
8402|code|MOVS            R1, #2; signo|2-33
8404|code|MOV             R0, R4; set|32-70
8406|code|BLX             sigaddset|255-247-104-238
8410|code|MOVS            R1, #0xA; signo|10-33
8412|code|MOV             R0, R4; set|32-70
8414|code|BLX             sigaddset|255-247-100-238
8418|code|MOVS            R2, #0; oldmask|0-34
8420|code|MOV             R1, R4; newmask|33-70
8422|code|MOVS            R0, #2; how|2-32
8424|code|BLX             pthread_sigmask|255-247-64-238
8428|code|LDR.W           R3, =(nwipe_options_ptr - 0x1BDC4)|223-248-44-54
8432|code|LDR             R2, [SP,#0x158+var_14C]|3-154
8434|code|STR             R7, [SP,#0x158+var_D8]|32-151
8436|code|STR             R2, [SP,#0x158+arg]|18-146
8438|code|LDR.W           R10, [R11,R3]; nwipe_options|91-248-3-160
8442|code|LDR.W           R3, [R10,#(dword_1C2D8 - 0x1C2CC)]|218-248-12-48
8446|code|CMP             R3, #0|0-43
8448|code|BEQ.W           loc_2534|0-240-24-130
8452|code|ADD             R4, SP, #0x158+attr|23-172
8454|code|ADD             R3, SP, #0x158+var_D8|32-171
8456|code|STR             R3, [SP,#0x158+var_124]|13-147
8458|code|MOV             R0, R4; attr|32-70
8460|code|STR             R3, [SP,#0x158+var_10C]|19-147
8462|code|BLX             pthread_attr_init|255-247-172-238
8466|code|MOVS            R1, #1; detachstate|1-33
8468|code|MOV             R0, R4; attr|32-70
8470|code|BLX             pthread_attr_setdetachstate|255-247-106-239
8474|code|LDR.W           R2, =(sub_2D68+1 - 0x2126)|223-248-4-38
8478|code|MOV             R1, R4; attr|33-70
8480|code|ADD             R0, SP, #0x158+newthread; newthread|16-168
8482|code|ADD             R2, PC; sub_2D68 ; start_routine|122-68
8484|code|ADD             R3, SP, #0x158+arg; arg|18-171
8486|code|BLX             pthread_create|255-247-40-238
8490|code|CMP             R7, #0|0-47
8492|code|BLE             loc_2178|36-221
8494|code|MOVW            R2, #(dword_1D2E4 - 0x1C2CC)|65-242-24-2
8498|code|LDR             R3, [SP,#0x158+var_114]|17-155
8500|code|LDR.W           R9, [R10,R2]|90-248-2-144
8504|code|MOV.W           R8, #3|79-240-3-8
8508|code|LDR.W           R12, [R10]|218-248-0-192
8512|code|ADD.W           LR, R3, R7,LSL#2|3-235-135-14
8516|code|MOVS            R0, #1|1-32
8518|code|MOVS            R4, #0|0-36
8520|code|MOV             R5, R9|77-70
8522|code|LDR             R2, [R3]|26-104
8524|code|CMP.W           R12, #0|188-241-0-15
8528|code|ITE EQ|12-191
8530|code|MOVEQ           R9, R8|193-70
8532|code|MOVNE           R9, R0|129-70
8534|code|STR.W           R5, [R2,#0x2C8]|194-248-200-82
8538|code|LDR             R1, [R3]|25-104
8540|code|STR.W           R9, [R2,#0x308]|194-248-8-147
8544|code|STR.W           R6, [R2,#0x298]|194-248-152-98
8548|code|STR.W           R4, [R1,#0x2D0]|193-248-208-66
8552|code|LDR.W           R2, [R3],#4|83-248-4-43
8556|code|STR.W           R4, [R1,#0x2CC]|193-248-204-66
8560|code|CMP             R3, LR|115-69
8562|code|STR.W           R4, [R2,#0x2D4]|194-248-212-66
8566|code|BNE             loc_214A|232-209
8568|code|LDR.W           R3, [R10,#(dword_1C2D8 - 0x1C2CC)]|218-248-12-48
8572|code|CBZ             R3, loc_2196|91-177
8574|code|LDR.W           R3, [R10]|218-248-0-48
8578|code|CMP             R3, #1|1-43
8580|code|BEQ             loc_21B4|22-208
8582|code|LDR.W           R0, =(aNoguiOptionMus - 0x218E); "--nogui option must be used with autonu"...|223-248-156-5
8586|code|ADD             R0, PC; "--nogui option must be used with autonu"...|120-68
8588|code|BLX             puts|255-247-250-237
8592|code|MOVS            R0, #1; status|1-32
8594|code|BLX             exit|255-247-70-238
8598|code|BL              sub_2FF8|0-240-47-255
8602|code|LDR.W           R3, [R10]|218-248-0-48
8606|code|CMP             R3, #1|1-43
8608|code|LDR.W           R3, [R10,#(dword_1C2D8 - 0x1C2CC)]|218-248-12-48
8612|code|BEQ.W           loc_2632|0-240-69-130
8616|code|CMP             R3, #0|0-43
8618|code|BNE             loc_2186|236-209
8620|code|MOV             R0, R7|56-70
8622|code|LDR             R1, [SP,#0x158+var_114]|17-153
8624|code|BL              sub_4384|2-240-232-248
8628|code|CMP             R7, #0|0-47
8630|code|BLE.W           loc_2690|64-243-107-130
8634|code|LDR             R3, [SP,#0x158+var_114]|17-155
8636|code|MOVS            R6, #0|0-38
8638|code|ADD.W           R1, R3, R7,LSL#2|3-235-135-1
8642|code|MOV             R2, R3|26-70
8644|code|LDR.W           R0, [R2],#4|82-248-4-11
8648|code|LDR.W           R0, [R0,#0x308]|208-248-8-3
8652|code|CMP             R0, #1|1-40
8654|code|IT EQ|8-191
8656|code|ADDEQ           R6, #1|1-54
8658|code|CMP             R2, R1|138-66
8660|code|BNE             loc_21C4|246-209
8662|code|LDR             R5, [SP,#0x158+var_14C]|3-157
8664|code|MOV             R7, R6|55-70
8666|code|MOVS            R4, #0|0-36
8668|code|STR             R6, [SP,#0x158+var_D4]|33-150
8670|code|LDR.W           R2, [R3],#4|83-248-4-43
8674|code|LDR.W           R0, [R2,#0x308]|210-248-8-3
8678|code|CMP             R0, #1|1-40
8680|code|ITT EQ|4-191
8682|code|STREQ.W         R2, [R5,R4,LSL#2]|69-248-36-32
8686|code|ADDEQ           R4, #1|1-52
8688|code|CMP             R1, R3|153-66
8690|code|BNE             loc_21DE|244-209
8692|code|CMP             R6, #0|0-46
8694|code|BEQ.W           loc_2694|0-240-77-130
8698|code|LDR             R3, [SP,#0x158+var_14C]|3-155
8700|code|MOVS            R5, #0|0-37
8702|code|LDR.W           R2, =(aDeviceSIsSizeL - 0x220A); "Device '%s' is size %llu."|223-248-40-37
8706|code|SUBS            R3, #4|4-59
8708|code|STR             R3, [SP,#0x158+var_12C]|11-147
8710|code|ADD             R2, PC; "Device '%s' is size %llu."|122-68
8712|code|STR             R2, [SP,#0x158+var_148]|4-146
8714|code|MOV             R4, R3|28-70
8716|code|LDR.W           R3, =(aLseek_0 - 0x2218); "lseek"|223-248-28-53
8720|code|LDR.W           R2, =(aDeviceSIsSizeL - 0x2220); "Device '%s' is size %llu."|223-248-28-37
8724|code|ADD             R3, PC; "lseek"|123-68
8726|code|STR             R3, [SP,#0x158+var_134]|9-147
8728|code|LDR.W           R3, =(aUnableToDeterm - 0x2224); "Unable to determine the size of '%s'."|223-248-24-53
8732|code|ADD             R2, PC; "Device '%s' is size %llu."|122-68
8734|code|STR             R2, [SP,#0x158+var_144]|5-146
8736|code|ADD             R3, PC; "Unable to determine the size of '%s'."|123-68
8738|code|LDR.W           R2, =(aMain - 0x2230); "main"|223-248-20-37
8742|code|STR             R3, [SP,#0x158+var_130]|10-147
8744|code|LDR.W           R3, =(aErrorBlkgetsiz - 0x2234); "Error: BLKGETSIZE64 failed  on '%s'.\n"|223-248-16-53
8748|code|ADD             R2, PC; "main"|122-68
8750|code|STR             R7, [SP,#0x158+var_128]|12-151
8752|code|ADD             R3, PC; "Error: BLKGETSIZE64 failed  on '%s'.\n"|123-68
8754|code|STR             R2, [SP,#0x158+var_138]|8-146
8756|code|STR             R3, [SP,#0x158+var_13C]|7-147
8758|code|B               loc_226E|26-224
8760|code|ADD.W           R2, R2, #0x230; stat_buf|2-245-12-114
8764|code|MOVS            R0, #3; ver|3-32
8766|code|BLX             __fxstat|255-247-198-237
8770|code|CMP             R0, #0|0-40
8772|code|BNE.W           loc_2434|64-240-246-128
8776|code|LDR             R3, [R4]|35-104
8778|code|LDR.W           R2, [R3,#0x240]|211-248-64-34
8782|code|AND.W           R2, R2, #0xF000|2-244-112-66
8786|code|CMP.W           R2, #0x6000|178-245-192-79
8790|code|BEQ             loc_2328|103-208
8792|code|LDR.W           R1, =(aSIsNotABlockDe - 0x2266); "'%s' is not a block device."|223-248-228-20
8796|code|MOVS            R0, #5|5-32
8798|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
8802|code|ADD             R1, PC; "'%s' is not a block device."|121-68
8804|code|BL              sub_66B0|4-240-36-250
8808|code|ADDS            R5, #1|1-53
8810|code|CMP             R6, R5|174-66
8812|code|BEQ             loc_22BE|39-208
8814|code|LDR.W           R7, [R4,#4]!|84-248-4-127
8818|code|MOVS            R1, #2; oflag|2-33
8820|code|LDR.W           R0, [R7,#0x220]; file|215-248-32-2
8824|code|BLX             open|255-247-192-237
8828|code|LDR             R2, [R4]|34-104
8830|code|STR             R0, [R7,#8]|184-96
8832|code|LDR             R1, [R2,#8]; fildes|145-104
8834|code|CMP             R1, #0|0-41
8836|code|BGE             loc_2238|216-218
8838|code|BLX             __errno_location|255-247-252-237
8842|code|LDR.W           R1, =(aMain - 0x2298); "main"|223-248-184-20
8846|code|LDR.W           R2, =(aOpen - 0x229A); "open"|223-248-184-36
8850|code|ADDS            R5, #1|1-53
8852|code|ADD             R1, PC; "main"|121-68
8854|code|ADD             R2, PC; "open"|122-68
8856|code|LDR             R0, [R0]|0-104
8858|code|BL              sub_6A4C|4-240-215-251
8862|code|LDR             R3, [R4]|35-104
8864|code|LDR.W           R1, =(aUnableToOpenDe - 0x22AE); "Unable to open device '%s'."|223-248-168-20
8868|code|MOVS            R0, #4|4-32
8870|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
8874|code|ADD             R1, PC; "Unable to open device '%s'."|121-68
8876|code|BL              sub_66B0|4-240-0-250
8880|code|LDR             R3, [R4]|35-104
8882|code|CMP             R6, R5|174-66
8884|code|MOV.W           R2, #5|79-240-5-2
8888|code|STR.W           R2, [R3,#0x308]|195-248-8-35
8892|code|BNE             loc_226E|215-209
8894|code|LDR.W           R3, =(stdscr_ptr - 0x1BDC4)|223-248-144-52
8898|code|MOVS            R1, #0; _Bool|0-33
8900|code|LDR             R7, [SP,#0x158+var_128]|12-159
8902|code|LDR.W           R4, [R11,R3]; stdscr|91-248-3-64
8906|code|LDR             R0, [R4]; WINDOW *|32-104
8908|code|BLX             nodelay|255-247-210-237
8912|code|MOVS            R0, #0xA; int|10-32
8914|code|BLX             halfdelay|255-247-178-237
8918|code|LDR.W           R8, [R10,#(dword_1C2D8 - 0x1C2CC)]|218-248-12-128
8922|code|CMP.W           R8, #0|184-241-0-15
8926|code|BEQ.W           loc_263E|0-240-174-129
8930|code|LDR.W           R8, [SP,#0x158+var_12C]|221-248-44-128
8934|code|MOVS            R5, #0|0-37
8936|code|B               loc_22F0|2-224
8938|code|ADDS            R5, #1|1-53
8940|code|CMP             R6, R5|174-66
8942|code|BLE             loc_2312|16-221
8944|code|LDR.W           R3, [R8,#4]!|88-248-4-63
8948|code|LDR.W           R0, [R3,#0x49C]; th|211-248-156-4
8952|code|CMP             R0, #0|0-40
8954|code|BEQ             loc_22EA|246-208
8956|code|MOVS            R1, #0; thread_return|0-33
8958|code|ADDS            R5, #1|1-53
8960|code|BLX             pthread_join|255-247-56-238
8964|code|LDR.W           R3, [R8]|216-248-0-48
8968|code|LDR             R0, [R3,#8]; fd|152-104
8970|code|BLX             close|255-247-138-238
8974|code|CMP             R6, R5|174-66
8976|code|BGT             loc_22F0|238-220
8978|code|LDR             R3, [SP,#0x158+th]|15-155
8980|code|CMP             R3, #0|0-43
8982|code|BNE.W           loc_2552|64-240-28-129
8986|code|LDR.W           R1, =(aNwipeExited - 0x2324); "Nwipe exited."|223-248-56-20
8990|code|MOVS            R0, #3|3-32
8992|code|ADD             R1, PC; "Nwipe exited."|121-68
8994|code|BL              sub_66B0|4-240-197-249
8998|code|B               loc_2578|39-225
9000|code|LDRB.W          R2, [R3,#0x4C4]|147-248-196-36
9004|code|CMP             R2, #0|0-42
9006|code|BNE.W           loc_24BE|64-240-198-128
9010|code|LDR             R0, [R3,#8]; fd|152-104
9012|code|ADD.W           R2, R3, #0x304|3-245-65-114
9016|code|MOVW            R1, #0x1268; request|65-242-104-33
9020|code|BLX             ioctl|255-247-16-237
9024|code|LDR             R3, [R4]|35-104
9026|code|MOV             R9, R0|129-70
9028|code|CMP             R0, #0|0-40
9030|code|BNE.W           loc_2458|64-240-135-128
9034|code|LDR.W           R1, =(aDeviceSHasSect - 0x2358); "Device '%s' has sector size %i."|223-248-12-20
9038|code|MOVS            R0, #2|2-32
9040|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9044|code|ADD             R1, PC; "Device '%s' has sector size %i."|121-68
9046|code|LDR.W           R3, [R3,#0x304]|211-248-4-51
9050|code|BL              sub_66B0|4-240-169-249
9054|code|LDR             R2, [R4]|34-104
9056|code|MOV             R1, #0x80041270; request|65-242-112-33-200-242-4-1
9064|code|LDR             R0, [R2,#8]; fd|144-104
9066|code|BLX             ioctl|255-247-250-236
9070|code|CMP             R0, #0|0-40
9072|code|BNE.W           loc_251A|64-240-211-128
9076|code|LDR.W           R8, [R4]|212-248-0-128
9080|code|LDR.W           R3, [R8]|216-248-0-48
9084|code|LDR.W           R1, [R8,#0x304]|216-248-4-19
9088|code|CMP             R3, R1|139-66
9090|code|BEQ             loc_23BA|26-208
9092|code|LDR.W           R2, [R8,#0x220]|216-248-32-34
9096|code|MOVS            R0, #4|4-32
9098|code|STR             R1, [SP,#0x158+var_158]|0-145
9100|code|LDR             R1, =(aChangingSBlock - 0x2392); "Changing '%s' block size from %i to %i."|243-73
9102|code|ADD             R1, PC; "Changing '%s' block size from %i to %i."|121-68
9104|code|BL              sub_66B0|4-240-142-249
9108|code|LDR             R3, [R4]|35-104
9110|code|MOVW            R1, #0x1271|65-242-113-33
9114|code|ADD.W           R2, R3, #0x304|3-245-65-114
9118|code|MOVT.W          R1, #0x4004; request|196-242-4-1
9122|code|LDR             R0, [R3,#8]; fd|152-104
9124|code|BLX             ioctl|255-247-220-236
9128|code|CMP             R0, #0|0-40
9130|code|BNE.W           loc_253A|64-240-198-128
9134|code|LDR.W           R8, [R4]|212-248-0-128
9138|code|LDR.W           R3, [R8,#0x304]|216-248-4-51
9142|code|STR.W           R3, [R8]|200-248-0-48
9146|code|LDR.W           R0, [R8,#8]; fd|216-248-8-0
9150|code|MOVS            R1, #0; offset|0-33
9152|code|MOVS            R2, #2; whence|2-34
9154|code|BLX             lseek|255-247-108-236
9158|code|LDR             R3, [R4]|35-104
9160|code|ADD.W           LR, R8, #0x228|8-245-10-126
9164|code|MOV             R1, #0x80041272; request|65-242-114-33-200-242-4-1
9172|code|ADD             R2, SP, #0x158+var_108|20-170
9174|code|MOV             R8, R0|128-70
9176|code|MOV.W           R9, R0,ASR#31|79-234-224-121
9180|code|LDR             R0, [R3,#8]; fd|152-104
9182|code|STRD.W          R8, R9, [LR]|206-233-0-137
9186|code|BLX             ioctl|255-247-190-236
9190|code|CMP             R0, #0|0-40
9192|code|BNE             loc_24D4|116-209
9194|code|LDR             R0, [R4]|32-104
9196|code|LDRD.W          R2, R3, [SP,#0x158+var_108]|221-233-20-35
9200|code|ADD.W           R1, R0, #0x228|0-245-10-113
9204|code|STRD.W          R2, R3, [R1]|193-233-0-35
9208|code|ADDS            R3, #1|1-51
9210|code|IT EQ|8-191
9212|code|CMPEQ.W         R2, #0xFFFFFFFF|178-241-255-63
9216|code|BEQ             loc_24FC|124-208
9218|code|MOVS            R1, #0; offset|0-33
9220|code|LDR             R0, [R0,#8]; fd|128-104
9222|code|MOV             R2, R1; whence|10-70
9224|code|BLX             lseek|255-247-72-236
9228|code|ADDS            R0, #1|1-48
9230|code|BEQ.W           loc_25E0|0-240-231-128
9234|code|LDR             R3, [R4]|35-104
9236|code|ADD.W           R2, R3, #0x228|3-245-10-114
9240|code|LDRD.W          R8, R9, [R2]|210-233-0-137
9244|code|ORRS.W          R2, R8, R9|88-234-9-2
9248|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9252|code|BNE             loc_2476|39-209
9254|code|MOVS            R0, #5|5-32
9256|code|STRD.W          R8, R9, [SP,#0x158+var_158]|205-233-0-137
9260|code|LDR             R1, [SP,#0x158+var_144]|5-153
9262|code|BL              sub_66B0|4-240-63-249
9266|code|B               loc_2268|25-231
9268|code|BLX             __errno_location|255-247-36-237
9272|code|LDR             R1, =(aMain - 0x2440); "main"|201-73
9274|code|LDR             R2, =(aFstat - 0x2442); "fstat"|202-74
9276|code|ADD             R1, PC; "main"|121-68
9278|code|ADD             R2, PC; "fstat"|122-68
9280|code|LDR             R0, [R0]|0-104
9282|code|BL              sub_6A4C|4-240-3-251
9286|code|LDR             R3, [R4]|35-104
9288|code|LDR             R1, =(aUnableToStatFi - 0x2450); "Unable to stat file '%s'."|199-73
9290|code|MOVS            R0, #5|5-32
9292|code|ADD             R1, PC; "Unable to stat file '%s'."|121-68
9294|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9298|code|BL              sub_66B0|4-240-45-249
9302|code|B               loc_2268|7-231
9304|code|LDR             R1, =(aDeviceSFailedB - 0x2464); "Device '%s' failed BLKSSZGET ioctl."|196-73
9306|code|MOVS            R0, #4|4-32
9308|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9312|code|ADD             R1, PC; "Device '%s' failed BLKSSZGET ioctl."|121-68
9314|code|BL              sub_66B0|4-240-37-249
9318|code|LDR.W           R8, [R4]|212-248-0-128
9322|code|MOVS            R3, #0|0-35
9324|code|STR.W           R3, [R8,#0x304]|200-248-4-51
9328|code|STR.W           R3, [R8]|200-248-0-48
9332|code|B               loc_23BA|161-231
9334|code|LDR             R1, [SP,#0x158+var_148]|4-153
9336|code|MOVS            R0, #2|2-32
9338|code|STRD.W          R8, R9, [SP,#0x158+var_158]|205-233-0-137
9342|code|BL              sub_66B0|4-240-23-249
9346|code|BLX             __errno_location|255-247-254-236
9350|code|LDR             R3, [R4]; arg|35-104
9352|code|MOVS            R1, #0; attr|0-33
9354|code|LDR.W           R2, [R10,#(dword_1C2E0 - 0x1C2CC)]; start_routine|218-248-20-32
9358|code|MOV             R8, R0|128-70
9360|code|ADDW            R0, R3, #0x49C; newthread|3-242-156-64
9364|code|BLX             pthread_create|255-247-112-236
9368|code|STR.W           R0, [R8]|200-248-0-0
9372|code|CMP             R0, #0|0-40
9374|code|BEQ.W           loc_2268|63-244-227-174
9378|code|LDR             R1, =(aMain - 0x24AA); "main"|179-73
9380|code|LDR             R2, =(aPthreadCreate_0 - 0x24AC); "pthread_create"|179-74
9382|code|ADD             R1, PC; "main"|121-68
9384|code|ADD             R2, PC; "pthread_create"|122-68
9386|code|BL              sub_6A4C|4-240-207-250
9390|code|LDR.W           R3, [R10,#(dword_1C2D8 - 0x1C2CC)]|218-248-12-48
9394|code|CBNZ            R3, loc_24B8|11-185
9396|code|BL              sub_3350|0-240-76-255
9400|code|LDR.W           R0, [R8]|216-248-0-0
9404|code|B               loc_2608|164-224
9406|code|LDR             R1, =(aDeviceSHasSeri - 0x24CE); "Device %s has serial number %s"|174-73
9408|code|MOVS            R0, #2|2-32
9410|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9414|code|ADDW            R3, R3, #0x4C4|3-242-196-67
9418|code|ADD             R1, PC; "Device %s has serial number %s"|121-68
9420|code|BL              sub_66B0|4-240-240-248
9424|code|LDR             R3, [R4]|35-104
9426|code|B               loc_2332|46-231
9428|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|169-72
9430|code|MOVS            R1, #1|1-33
9432|code|LDR             R3, [R4]|35-104
9434|code|LDR             R2, [SP,#0x158+var_13C]|7-154
9436|code|LDR.W           R0, [R11,R0]; stderr|91-248-0-0
9440|code|LDR.W           R3, [R3,#0x220]|211-248-32-50
9444|code|LDR             R0, [R0]|0-104
9446|code|BLX             __fprintf_chk|255-247-26-237
9450|code|LDR             R3, [R4]|35-104
9452|code|LDR             R1, =(aBlkgetsize64Fa - 0x24F4); "BLKGETSIZE64 failed  on '%s'.\n"|164-73
9454|code|MOVS            R0, #5|5-32
9456|code|ADD             R1, PC; "BLKGETSIZE64 failed  on '%s'.\n"|121-68
9458|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9462|code|BL              sub_66B0|4-240-219-248
9466|code|B               loc_23EA|118-231
9468|code|BLX             __errno_location|255-247-192-236
9472|code|LDR             R1, [SP,#0x158+var_138]|8-153
9474|code|LDR             R2, [SP,#0x158+var_134]|9-154
9476|code|LDR             R0, [R0]|0-104
9478|code|BL              sub_6A4C|4-240-161-250
9482|code|LDR             R3, [R4]|35-104
9484|code|MOVS            R0, #5|5-32
9486|code|LDR             R1, [SP,#0x158+var_130]|10-153
9488|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9492|code|BL              sub_66B0|4-240-204-248
9496|code|B               loc_2412|123-231
9498|code|LDR             R3, [R4]|35-104
9500|code|MOVS            R0, #4|4-32
9502|code|LDR             R1, =(aDeviceSFailedB_0 - 0x2528); "Device '%s' failed BLKBSZGET ioctl."|153-73
9504|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9508|code|ADD             R1, PC; "Device '%s' failed BLKBSZGET ioctl."|121-68
9510|code|BL              sub_66B0|4-240-195-248
9514|code|LDR.W           R8, [R4]|212-248-0-128
9518|code|STR.W           R9, [R8]|200-248-0-144
9522|code|B               loc_23BA|66-231
9524|code|ADD             R3, SP, #0x158+th|15-171
9526|code|STR             R3, [SP,#0x158+var_B8]|40-147
9528|code|B               loc_2104|228-229
9530|code|LDR             R3, [R4]|35-104
9532|code|MOVS            R0, #4|4-32
9534|code|LDR             R1, =(aDeviceSFailedB_1 - 0x2548); "Device '%s' failed BLKBSZSET ioctl."|146-73
9536|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9540|code|ADD             R1, PC; "Device '%s' failed BLKBSZSET ioctl."|121-68
9542|code|BL              sub_66B0|4-240-179-248
9546|code|LDR.W           R8, [R4]|212-248-0-128
9550|code|B               loc_23BA|52-231
9552|code|MOVS            R7, #0|0-39
9554|code|MOV             R0, R3; th|24-70
9556|code|MOVS            R1, #0; thread_return|0-33
9558|code|BLX             pthread_join|255-247-14-237
9562|code|BLX             nocbreak|255-247-24-237
9566|code|LDR.W           R3, [R10,#(dword_1C2D4 - 0x1C2CC)]|218-248-8-48
9570|code|CMP             R3, #0|0-43
9572|code|BEQ             loc_2660|124-208
9574|code|BL              sub_3350|0-240-243-254
9578|code|LDR             R1, =(aNwipeExited - 0x2572); "Nwipe exited."|136-73
9580|code|MOVS            R0, #3|3-32
9582|code|ADD             R1, PC; "Nwipe exited."|121-68
9584|code|BL              sub_66B0|4-240-158-248
9588|code|CMP             R7, #0|0-47
9590|code|BLE             loc_25B6|30-221
9592|code|LDR             R4, [SP,#0x158+var_14C]|3-156
9594|code|LDR             R3, [R4]|35-104
9596|code|LDR.W           R0, [R3,#0x2D8]|211-248-216-2
9600|code|CMP             R0, #0|0-40
9602|code|BLT             loc_2604|63-219
9604|code|MOVS            R3, #0|0-35
9606|code|MOV             R2, R4|34-70
9608|code|B               loc_2596|5-224
9610|code|LDR.W           R1, [R2,#4]!|82-248-4-31
9614|code|LDR.W           R1, [R1,#0x2D8]|209-248-216-18
9618|code|CMP             R1, #0|0-41
9620|code|BLT             loc_2604|54-219
9622|code|ADDS            R3, #1|1-51
9624|code|CMP             R7, R3|159-66
9626|code|BGT             loc_258A|246-220
9628|code|CMP             R0, #0|0-40
9630|code|BNE             loc_268C|117-209
9632|code|MOV             R3, R0|3-70
9634|code|B               loc_25B0|5-224
9636|code|LDR.W           R2, [R4,#4]!|84-248-4-47
9640|code|LDR.W           R2, [R2,#0x2D8]|210-248-216-34
9644|code|CMP             R2, #0|0-42
9646|code|BGT             loc_268C|109-220
9648|code|ADDS            R3, #1|1-51
9650|code|CMP             R7, R3|159-66
9652|code|BGT             loc_25A4|246-220
9654|code|LDR             R3, =(log_current_element_ptr - 0x1BDC4)|118-75
9656|code|LDR.W           R5, [R11,R3]; log_current_element|91-248-3-80
9660|code|LDR             R3, [R5]|43-104
9662|code|CMP             R3, #0|0-43
9664|code|BLE             loc_25DC|12-221
9666|code|LDR             R3, =(log_lines_ptr - 0x1BDC4)|116-75
9668|code|MOVS            R4, #0|0-36
9670|code|LDR.W           R6, [R11,R3]; log_lines|91-248-3-96
9674|code|LDR             R3, [R6]|51-104
9676|code|LDR.W           R0, [R3,R4,LSL#2]; s|83-248-36-0
9680|code|ADDS            R4, #1|1-52
9682|code|BLX             puts|255-247-216-235
9686|code|LDR             R3, [R5]|43-104
9688|code|CMP             R3, R4|163-66
9690|code|BGT             loc_25CA|246-220
9692|code|MOVS            R0, #0|0-32
9694|code|B               loc_2608|19-224
9696|code|BLX             __errno_location|255-247-78-236
9700|code|LDR             R1, =(aMain - 0x25EC); "main"|108-73
9702|code|LDR             R2, =(aLseek_0 - 0x25EE); "lseek"|109-74
9704|code|ADD             R1, PC; "main"|121-68
9706|code|ADD             R2, PC; "lseek"|122-68
9708|code|LDR             R0, [R0]|0-104
9710|code|BL              sub_6A4C|4-240-45-250
9714|code|LDR             R3, [R4]|35-104
9716|code|LDR             R1, =(aUnableToResetT - 0x25FC); "Unable to reset the '%s' file offset."|106-73
9718|code|MOVS            R0, #5|5-32
9720|code|ADD             R1, PC; "Unable to reset the '%s' file offset."|121-68
9722|code|LDR.W           R2, [R3,#0x220]|211-248-32-34
9726|code|BL              sub_66B0|4-240-87-248
9730|code|B               loc_2412|6-231
9732|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
9736|code|LDR             R3, [SP,#0x158+var_140]|6-155
9738|code|LDR             R2, [SP,#0x158+var_2C]|75-154
9740|code|LDR             R3, [R3]|27-104
9742|code|CMP             R2, R3|154-66
9744|code|BNE             loc_2706|121-209
9746|code|ADD             SP, SP, #0x134|77-176
9748|code|POP.W           {R4-R11,PC}|189-232-240-143
9752|code|ADD             R0, SP, #0x158+var_114|17-168
9754|code|BL              sub_6408|3-240-245-254
9758|code|MOV             R7, R0|7-70
9760|code|CMP             R0, #0|0-40
9762|code|BEQ             loc_26F6|104-208
9764|code|LDR             R1, =(aAutomaticallyE - 0x262E); "Automatically enumerated %i devices."|95-73
9766|code|MOVS            R0, #2|2-32
9768|code|MOV             R2, R7|58-70
9770|code|ADD             R1, PC; "Automatically enumerated %i devices."|121-68
9772|code|BL              sub_66B0|4-240-64-248
9776|code|B               loc_2090|46-229
9778|code|CMP             R3, #0|0-43
9780|code|BNE.W           loc_21B4|127-244-190-173
9784|code|BL              sub_33F0|0-240-218-254
9788|code|B               loc_21B4|186-229
9790|code|LDR             R3, [SP,#0x158+var_14C]|3-155
9792|code|STR             R3, [SP,#0x158+var_108]|20-147
9794|code|LDR             R3, [SP,#0x158+var_124]|13-155
9796|code|STR             R3, [SP,#0x158+var_104]|21-147
9798|code|BLX             __errno_location|255-247-28-236
9802|code|LDR             R2, =(nwipe_gui_status_ptr - 0x1BDC4)|87-74
9804|code|MOV             R1, R8; attr|65-70
9806|code|ADD             R3, SP, #0x158+var_108; arg|20-171
9808|code|LDR.W           R2, [R11,R2]; nwipe_gui_status ; start_routine|91-248-2-32
9812|code|MOV             R5, R0|5-70
9814|code|ADD             R0, SP, #0x158+th; newthread|15-168
9816|code|BLX             pthread_create|255-247-142-235
9820|code|STR             R0, [R5]|40-96
9822|code|B               loc_22E2|64-230
9824|code|LDR             R0, [R4]; WINDOW *|32-104
9826|code|BLX             wgetch|255-247-118-236
9830|code|B               loc_2566|126-231
9832|code|BLX             __errno_location|255-247-10-236
9836|code|LDR             R1, =(aMain - 0x2674); "main"|79-73
9838|code|LDR             R2, =(aOpen - 0x2676); "open"|80-74
9840|code|ADD             R1, PC; "main"|121-68
9842|code|ADD             R2, PC; "open"|122-68
9844|code|MOV             R5, R0|5-70
9846|code|LDR             R0, [R0]|0-104
9848|code|BL              sub_6A4C|4-240-232-249
9852|code|LDR             R1, =(aUnableToOpenEn - 0x2686); "Unable to open entropy source %s."|77-73
9854|code|MOVS            R0, #6|6-32
9856|code|MOV             R2, R4|34-70
9858|code|ADD             R1, PC; "Unable to open entropy source %s."|121-68
9860|code|BL              sub_66B0|4-240-20-248
9864|code|LDR             R0, [R5]|40-104
9866|code|B               loc_2608|189-231
9868|code|MOVS            R0, #1|1-32
9870|code|B               loc_2608|187-231
9872|code|MOVS            R3, #0|0-35
9874|code|STR             R3, [SP,#0x158+var_D4]|33-147
9876|code|LDR             R3, =(stdscr_ptr - 0x1BDC4)|46-75
9878|code|MOVS            R1, #0; _Bool|0-33
9880|code|LDR.W           R4, [R11,R3]; stdscr|91-248-3-64
9884|code|LDR             R0, [R4]; WINDOW *|32-104
9886|code|BLX             nodelay|255-247-234-235
9890|code|MOVS            R0, #0xA; int|10-32
9892|code|BLX             halfdelay|255-247-200-235
9896|code|LDR.W           R7, [R10,#(dword_1C2D8 - 0x1C2CC)]|218-248-12-112
9900|code|CBZ             R7, loc_26C2|79-177
9902|code|LDR             R3, [SP,#0x158+th]|15-155
9904|code|CMP             R3, #0|0-43
9906|code|BNE.W           loc_2550|127-244-77-175
9910|code|LDR             R1, =(aNwipeExited - 0x26BE); "Nwipe exited."|64-73
9912|code|MOVS            R0, #3|3-32
9914|code|ADD             R1, PC; "Nwipe exited."|121-68
9916|code|BL              sub_66B0|3-240-248-255
9920|code|B               loc_25B6|121-231
9922|code|LDR             R3, [SP,#0x158+var_14C]|3-155
9924|code|STR             R3, [SP,#0x158+var_108]|20-147
9926|code|LDR             R3, [SP,#0x158+var_124]|13-155
9928|code|STR             R3, [SP,#0x158+var_104]|21-147
9930|code|BLX             __errno_location|255-247-218-235
9934|code|LDR             R2, =(nwipe_gui_status_ptr - 0x1BDC4)|54-74
9936|code|ADD             R3, SP, #0x158+var_108; arg|20-171
9938|code|MOV             R1, R7; attr|57-70
9940|code|LDR.W           R2, [R11,R2]; nwipe_gui_status ; start_routine|91-248-2-32
9944|code|MOV             R5, R0|5-70
9946|code|ADD             R0, SP, #0x158+th; newthread|15-168
9948|code|BLX             pthread_create|255-247-76-235
9952|code|LDR             R3, [SP,#0x158+th]|15-155
9954|code|STR             R0, [R5]|40-96
9956|code|CMP             R3, #0|0-43
9958|code|BNE.W           loc_2552|127-244-52-175
9962|code|LDR             R1, =(aNwipeExited - 0x26F2); "Nwipe exited."|52-73
9964|code|MOVS            R0, #3|3-32
9966|code|ADD             R1, PC; "Nwipe exited."|121-68
9968|code|BL              sub_66B0|3-240-222-255
9972|code|B               loc_25B6|95-231
9974|code|LDR             R1, =(aStorageDevices - 0x26FE); "Storage devices not found."|50-73
9976|code|MOVS            R0, #5|5-32
9978|code|ADD             R1, PC; "Storage devices not found."|121-68
9980|code|BL              sub_66B0|3-240-216-255
9984|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
9988|code|B               loc_2608|128-231
9990|code|BLX             __stack_chk_fail|255-247-238-234
9994|data|ALIGN 4|0-191
9996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x205E|102-157-1-0
10000|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
10004|data|DCD aDevUrandom - 0x209A; "/dev/urandom"|174-104-0-0
10008|data|DCD aOpenedEntropyS - 0x20B2; "Opened entropy source '%s'."|210-104-0-0
10012|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
10016|data|DCD sub_2D68+1 - 0x2126|67-12-0-0
10020|data|DCD aNoguiOptionMus - 0x218E; "--nogui option must be used with autonu"...|18-104-0-0
10024|data|DCD aDeviceSIsSizeL - 0x220A; "Device '%s' is size %llu."|154-105-0-0
10028|data|DCD aLseek_0 - 0x2218; "lseek"|52-105-0-0
10032|data|DCD aDeviceSIsSizeL - 0x2220; "Device '%s' is size %llu."|132-105-0-0
10036|data|DCD aUnableToDeterm - 0x2224; "Unable to determine the size of '%s'."|48-105-0-0
10040|data|DCD aMain - 0x2230; "main"|248-101-0-0
10044|data|DCD aErrorBlkgetsiz - 0x2234; "Error: BLKGETSIZE64 failed  on '%s'.\n"|208-104-0-0
10048|data|DCD aSIsNotABlockDe - 0x2266; "'%s' is not a block device."|174-103-0-0
10052|data|DCD aMain - 0x2298; "main"|144-101-0-0
10056|data|DCD aOpen - 0x229A; "open"|190-102-0-0
10060|data|DCD aUnableToOpenDe - 0x22AE; "Unable to open device '%s'."|38-103-0-0
10064|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
10068|data|DCD aNwipeExited - 0x2324; "Nwipe exited."|172-104-0-0
10072|data|DCD aDeviceSHasSect - 0x2358; "Device '%s' has sector size %i."|248-102-0-0
10076|data|DCD aChangingSBlock - 0x2392; "Changing '%s' block size from %i to %i."|222-102-0-0
10080|data|DCD aMain - 0x2440; "main"|232-99-0-0
10084|data|DCD aFstat - 0x2442; "fstat"|174-101-0-0
10088|data|DCD aUnableToStatFi - 0x2450; "Unable to stat file '%s'."|168-101-0-0
10092|data|DCD aDeviceSFailedB - 0x2464; "Device '%s' failed BLKSSZGET ioctl."|124-102-0-0
10096|data|DCD aMain - 0x24AA; "main"|126-99-0-0
10100|data|DCD aPthreadCreate_0 - 0x24AC; "pthread_create"|20-103-0-0
10104|data|DCD aDeviceSHasSeri - 0x24CE; "Device %s has serial number %s"|98-101-0-0
10108|data|DCD stderr_ptr - 0x1BDC4|200-1-0-0
10112|data|DCD aBlkgetsize64Fa - 0x24F4; "BLKGETSIZE64 failed  on '%s'.\n"|56-102-0-0
10116|data|DCD aDeviceSFailedB_0 - 0x2528; "Device '%s' failed BLKBSZGET ioctl."|148-101-0-0
10120|data|DCD aDeviceSFailedB_1 - 0x2548; "Device '%s' failed BLKBSZSET ioctl."|80-101-0-0
10124|data|DCD aNwipeExited - 0x2572; "Nwipe exited."|94-102-0-0
10128|data|DCD log_current_element_ptr - 0x1BDC4|16-2-0-0
10132|data|DCD log_lines_ptr - 0x1BDC4|24-2-0-0
10136|data|DCD aMain - 0x25EC; "main"|60-98-0-0
10140|data|DCD aLseek_0 - 0x25EE; "lseek"|94-101-0-0
10144|data|DCD aUnableToResetT - 0x25FC; "Unable to reset the '%s' file offset."|128-101-0-0
10148|data|DCD aAutomaticallyE - 0x262E; "Automatically enumerated %i devices."|242-98-0-0
10152|data|DCD nwipe_gui_status_ptr - 0x1BDC4|176-1-0-0
10156|data|DCD aMain - 0x2674; "main"|180-97-0-0
10160|data|DCD aOpen - 0x2676; "open"|226-98-0-0
10164|data|DCD aUnableToOpenEn - 0x2686; "Unable to open entropy source %s."|218-98-0-0
10168|data|DCD aNwipeExited - 0x26BE; "Nwipe exited."|18-101-0-0
10172|data|DCD aNwipeExited - 0x26F2; "Nwipe exited."|222-100-0-0
10176|data|DCD aStorageDevices - 0x26FE; "Storage devices not found."|6-98-0-0
10180|code|MOV.W           R11, #0|79-240-0-11
10184|code|MOV.W           LR, #0|79-240-0-14
10188|code|POP             {R1}; argc|2-188
10190|code|MOV             R2, SP; ubp_av|106-70
10192|code|PUSH            {R2}; stack_end|4-180
10194|code|PUSH            {R0}; rtld_fini|1-180
10196|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x27FC)|223-248-36-160
10200|code|ADR             R3, off_27FC|8-163
10202|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
10204|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x1BDC4)|223-248-32-192
10208|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
10212|code|PUSH.W          {R12}; fini|77-248-4-205
10216|code|LDR             R3, =(__libc_csu_init_ptr - 0x1BDC4)|6-75
10218|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
10222|code|LDR             R0, =(main_ptr - 0x1BDC4)|6-72
10224|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
10228|code|BLX             __libc_start_main|255-247-222-234
10232|code|BLX             abort|255-247-12-236
10236|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x27FC|200-149-1-0
10240|data|DCD __libc_csu_fini_ptr - 0x1BDC4|148-1-0-0
10244|data|DCD __libc_csu_init_ptr - 0x1BDC4|228-1-0-0
10248|data|DCD main_ptr - 0x1BDC4|248-1-0-0
10252|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x281C)|20-48-159-229
10256|code|LDR             R2, =(__gmon_start___ptr_0 - 0x1BDC4)|20-32-159-229
10260|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
10264|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
10268|code|CMP             R2, #0|0-0-82-227
10272|code|BXEQ            LR|30-255-47-1
10276|code|B               __gmon_start__|110-253-255-234
10280|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x281C|168-149-1-0
10284|data|DCD __gmon_start___ptr_0 - 0x1BDC4|212-1-0-0
10288|code|LDR             R3, =(__bss_start__ - 0x2838)|7-75
10290|code|LDR             R0, =(__bss_start__ - 0x283C)|8-72
10292|code|ADD             R3, PC; __bss_start__|123-68
10294|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2842)|8-74
10296|code|ADD             R0, PC; __bss_start__|120-68
10298|code|ADDS            R3, #3|3-51
10300|code|SUBS            R3, R3, R0|27-26
10302|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
10304|code|CMP             R3, #6|6-43
10306|code|BLS             locret_284C|3-217
10308|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x1BDC4)|5-75
10310|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
10312|code|CBZ             R3, locret_284C|3-177
10314|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
10316|code|BX              LR|112-71
10318|data|ALIGN 0x10|0-191
10320|data|DCD __bss_start__ - 0x2838|56-154-1-0
10324|data|DCD __bss_start__ - 0x283C|52-154-1-0
10328|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2842|130-149-1-0
10332|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x1BDC4|160-1-0-0
10336|code|LDR             R1, =(__bss_start__ - 0x2868)|8-73
10338|code|LDR             R0, =(__bss_start__ - 0x286C)|9-72
10340|code|ADD             R1, PC; __bss_start__|121-68
10342|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2870)|9-75
10344|code|ADD             R0, PC; __bss_start__|120-68
10346|code|SUBS            R1, R1, R0|9-26
10348|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
10350|code|ASRS            R1, R1, #2|137-16
10352|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
10356|code|ASRS            R1, R1, #1|73-16
10358|code|BEQ             locret_2880|3-208
10360|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x1BDC4)|5-74
10362|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
10364|code|CBZ             R3, locret_2880|3-177
10366|code|BX              R3; _ITM_registerTMCloneTable|24-71
10368|code|BX              LR|112-71
10370|data|ALIGN 4|0-191
10372|data|DCD __bss_start__ - 0x2868|8-154-1-0
10376|data|DCD __bss_start__ - 0x286C|4-154-1-0
10380|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2870|84-149-1-0
10384|data|DCD _ITM_registerTMCloneTable_ptr - 0x1BDC4|36-2-0-0
10388|code|PUSH            {R3,LR}|8-181
10390|code|LDR             R3, =(__bss_start__ - 0x289E)|10-75
10392|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x28A0)|10-74
10394|code|ADD             R3, PC; __bss_start__|123-68
10396|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
10398|code|LDRB            R3, [R3]|27-120
10400|code|CBNZ            R3, locret_28BE|107-185
10402|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x1BDC4)|9-75
10404|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
10406|code|CBZ             R3, loc_28B2|35-177
10408|code|LDR             R3, =(off_1C004 - 0x28AE)|8-75
10410|code|ADD             R3, PC; off_1C004|123-68
10412|code|LDR             R0, [R3]; off_1C004 ; void *|24-104
10414|code|BLX             __cxa_finalize|255-247-144-233
10418|code|BL              sub_2830|255-247-189-255
10422|code|LDR             R3, =(__bss_start__ - 0x28BE)|6-75
10424|code|MOVS            R2, #1|1-34
10426|code|ADD             R3, PC; __bss_start__|123-68
10428|code|STRB            R2, [R3]|26-112
10430|code|POP             {R3,PC}|8-189
10432|data|DCD __bss_start__ - 0x289E|210-153-1-0
10436|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x28A0|36-149-1-0
10440|data|DCD __cxa_finalize_ptr_0 - 0x1BDC4|156-1-0-0
10444|data|DCD off_1C004 - 0x28AE|86-151-1-0
10448|data|DCD __bss_start__ - 0x28BE|178-153-1-0
10452|code|LDR             R0, =(dword_1BC98 - 0x28DC)|7-72
10454|code|PUSH            {R3,LR}|8-181
10456|code|ADD             R0, PC; dword_1BC98|120-68
10458|code|LDR             R2, [R0]|2-104
10460|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x28E2)|6-75
10462|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
10464|code|CBNZ            R2, loc_28E8|18-185
10466|code|POP.W           {R3,LR}|189-232-8-64
10470|code|B               sub_2860|187-231
10472|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x1BDC4)|4-74
10474|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
10476|code|CMP             R3, #0|0-43
10478|code|BEQ             loc_28E2|248-208
10480|code|BLX             R3; _Jv_RegisterClasses|152-71
10482|code|B               loc_28E2|246-231
10484|data|DCD dword_1BC98 - 0x28DC|188-147-1-0
10488|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x28E2|226-148-1-0
10492|data|DCD _Jv_RegisterClasses_ptr - 0x1BDC4|12-2-0-0
10496|code|PUSH.W          {R4-R11,LR}|45-233-240-79
10500|code|ADDW            R2, R0, #0x404|0-242-4-66
10504|code|LDR.W           R1, [R0,#0x80C]|208-248-12-24
10508|code|ADDW            R7, R0, #0x604|0-242-4-103
10512|code|MOV             R3, R0|3-70
10514|code|LDR.W           R4, [R0,#0x808]|208-248-8-72
10518|code|SUB             SP, SP, #0xC|131-176
10520|code|CMP             R2, R7|186-66
10522|code|MOV             R5, R3|29-70
10524|code|ADD.W           R1, R1, #1|1-241-1-1
10528|code|ADD.W           LR, R3, #4|3-241-4-14
10532|code|STR             R0, [SP,#0x30+var_2C]|1-144
10534|code|LDR.W           R3, [R3,#0x804]|211-248-4-56
10538|code|ADD.W           R12, R1, R4|1-235-4-12
10542|code|STR.W           R1, [R5,#0x80C]|197-248-12-24
10546|code|BCS.W           loc_2AE4|128-240-215-128
10550|code|ADDW            R8, R0, #0x414|0-242-20-72
10554|code|ADDW            R5, R0, #0x614|0-242-20-101
10558|code|ADD.W           R4, R0, #0x14|0-241-20-4
10562|code|MOV             R1, R8|65-70
10564|code|LDR.W           R10, [R1,#-0x10]|81-248-16-172
10568|code|EOR.W           R3, R3, R3,LSL#13|131-234-67-51
10572|code|LDR.W           R6, [R5,#-0x10]|85-248-16-108
10576|code|CMP             R7, R1|143-66
10578|code|AND.W           R11, R10, #0x3FC|10-244-127-123
10582|code|ADD.W           R5, R5, #0x10|5-241-16-5
10586|code|ADD             R6, R3|30-68
10588|code|ADD.W           R4, R4, #0x10|4-241-16-4
10592|code|LDR.W           R3, [R2,R11]|82-248-11-48
10596|code|ADD.W           R1, R1, #0x10|1-241-16-1
10600|code|EOR.W           R11, R6, R6,LSR#6|134-234-150-27
10604|code|ADD             R3, R6|51-68
10606|code|ADD             R3, R12|99-68
10608|code|STR.W           R3, [R1,#-0x20]|65-248-32-60
10612|code|MOV.W           R3, R3,LSR#8|79-234-19-35
10616|code|AND.W           R3, R3, #0x3FC|3-244-127-115
10620|code|LDR             R6, [R2,R3]|214-88
10622|code|ADD             R6, R10|86-68
10624|code|STR.W           R6, [R4,#-0x20]|68-248-32-108
10628|code|LDR.W           R12, [R1,#-0x1C]|81-248-28-204
10632|code|LDR.W           R3, [R5,#-0x1C]|85-248-28-60
10636|code|AND.W           R10, R12, #0x3FC|12-244-127-122
10640|code|ADD             R3, R11|91-68
10642|code|LDR.W           R10, [R2,R10]|82-248-10-160
10646|code|EOR.W           R11, R3, R3,LSL#2|131-234-131-11
10650|code|ADD             R3, R10|83-68
10652|code|ADD             R6, R3|30-68
10654|code|STR.W           R6, [R1,#-0x1C]|65-248-28-108
10658|code|MOV.W           R6, R6,LSR#8|79-234-22-38
10662|code|AND.W           R6, R6, #0x3FC|6-244-127-118
10666|code|LDR             R3, [R2,R6]|147-89
10668|code|ADD.W           R6, R12, R3|12-235-3-6
10672|code|STR.W           R6, [R4,#-0x1C]|68-248-28-108
10676|code|LDR.W           R12, [R1,#-0x18]|81-248-24-204
10680|code|LDR.W           R3, [R5,#-0x18]|85-248-24-60
10684|code|AND.W           R10, R12, #0x3FC|12-244-127-122
10688|code|ADD             R3, R11|91-68
10690|code|LDR.W           R11, [R2,R10]|82-248-10-176
10694|code|EOR.W           R10, R3, R3,LSR#16|131-234-19-74
10698|code|ADD             R3, R11|91-68
10700|code|ADD             R3, R6|51-68
10702|code|STR.W           R3, [R1,#-0x18]|65-248-24-60
10706|code|MOV.W           R3, R3,LSR#8|79-234-19-35
10710|code|AND.W           R3, R3, #0x3FC|3-244-127-115
10714|code|LDR             R6, [R2,R3]|214-88
10716|code|ADD             R6, R12|102-68
10718|code|STR.W           R6, [R4,#-0x18]|68-248-24-108
10722|code|LDR.W           R12, [R1,#-0x14]|81-248-20-204
10726|code|LDR.W           R3, [R5,#-0x14]|85-248-20-60
10730|code|AND.W           R11, R12, #0x3FC|12-244-127-123
10734|code|ADD             R3, R10|83-68
10736|code|LDR.W           R10, [R2,R11]|82-248-11-160
10740|code|ADD             R10, R3|154-68
10742|code|ADD             R6, R10|86-68
10744|code|STR.W           R6, [R1,#-0x14]|65-248-20-108
10748|code|MOV.W           R6, R6,LSR#8|79-234-22-38
10752|code|AND.W           R6, R6, #0x3FC|6-244-127-118
10756|code|LDR             R6, [R2,R6]|150-89
10758|code|ADD             R12, R6|180-68
10760|code|STR.W           R12, [R4,#-0x14]|68-248-20-204
10764|code|BHI             loc_2944|154-216
10766|code|ADD.W           R5, R7, #0xF|7-241-15-5
10770|code|MOV             R6, R2|22-70
10772|code|RSB.W           R5, R8, R5|200-235-5-5
10776|code|BIC.W           R5, R5, #0xF|37-240-15-5
10780|code|ADDS            R5, #0x20 ; ' '|32-53
10782|code|ADD             LR, R5|174-68
10784|code|ADD             R5, R2|21-68
10786|code|LDR.W           R4, [R5,#-0x10]|85-248-16-76
10790|code|EOR.W           R3, R3, R3,LSL#13|131-234-67-51
10794|code|LDR             R1, [R6]|49-104
10796|code|ADDS            R6, #0x10|16-54
10798|code|AND.W           R8, R4, #0x3FC|4-244-127-120
10802|code|ADDS            R5, #0x10|16-53
10804|code|ADD             R3, R1|11-68
10806|code|ADD.W           LR, LR, #0x10|14-241-16-14
10810|code|LDR.W           R1, [R2,R8]|82-248-8-16
10814|code|EOR.W           R8, R3, R3,LSR#6|131-234-147-24
10818|code|ADD             R3, R1|11-68
10820|code|ADD             R3, R12|99-68
10822|code|STR.W           R3, [R5,#-0x20]|69-248-32-60
10826|code|LSRS            R3, R3, #8|27-10
10828|code|AND.W           R3, R3, #0x3FC|3-244-127-115
10832|code|LDR             R1, [R2,R3]|209-88
10834|code|ADD             R4, R1|12-68
10836|code|STR.W           R4, [LR,#-0x20]|78-248-32-76
10840|code|LDR.W           R3, [R5,#-0x1C]|85-248-28-60
10844|code|LDR.W           R0, [R6,#-0xC]|86-248-12-12
10848|code|AND.W           R1, R3, #0x3FC|3-244-127-113
10852|code|ADD             R8, R0|128-68
10854|code|LDR             R1, [R2,R1]|81-88
10856|code|EOR.W           R12, R8, R8,LSL#2|136-234-136-12
10860|code|ADD             R8, R1|136-68
10862|code|ADD.W           R1, R8, R4|8-235-4-1
10866|code|STR.W           R1, [R5,#-0x1C]|69-248-28-28
10870|code|LSRS            R1, R1, #8|9-10
10872|code|AND.W           R1, R1, #0x3FC|1-244-127-113
10876|code|LDR             R4, [R2,R1]|84-88
10878|code|ADD             R4, R3|28-68
10880|code|STR.W           R4, [LR,#-0x1C]|78-248-28-76
10884|code|LDR.W           R9, [R5,#-0x18]|85-248-24-156
10888|code|LDR.W           R3, [R6,#-8]|86-248-8-60
10892|code|CMP             R6, R7|190-66
10894|code|AND.W           R1, R9, #0x3FC|9-244-127-113
10898|code|ADD             R3, R12|99-68
10900|code|LDR             R1, [R2,R1]|81-88
10902|code|EOR.W           R8, R3, R3,LSR#16|131-234-19-72
10906|code|ADD             R3, R1|11-68
10908|code|ADD             R3, R4|35-68
10910|code|STR.W           R3, [R5,#-0x18]|69-248-24-60
10914|code|MOV.W           R12, R3,LSR#8|79-234-19-44
10918|code|AND.W           R12, R12, #0x3FC|12-244-127-124
10922|code|LDR.W           R1, [R2,R12]|82-248-12-16
10926|code|ADD.W           R4, R9, R1|9-235-1-4
10930|code|STR.W           R4, [LR,#-0x18]|78-248-24-76
10934|code|LDR.W           R12, [R5,#-0x14]|85-248-20-204
10938|code|LDR.W           R1, [R6,#-4]|86-248-4-28
10942|code|AND.W           R9, R12, #0x3FC|12-244-127-121
10946|code|ADD.W           R3, R8, R1|8-235-1-3
10950|code|LDR.W           R1, [R2,R9]|82-248-9-16
10954|code|ADD             R1, R3|25-68
10956|code|ADD             R1, R4|33-68
10958|code|STR.W           R1, [R5,#-0x14]|69-248-20-28
10962|code|MOV.W           R1, R1,LSR#8|79-234-17-33
10966|code|AND.W           R1, R1, #0x3FC|1-244-127-113
10970|code|LDR             R1, [R2,R1]|81-88
10972|code|ADD             R12, R1|140-68
10974|code|STR.W           R12, [LR,#-0x14]|78-248-20-204
10978|code|BCC             loc_2A22|158-211
10980|code|LDR             R2, [SP,#0x30+var_2C]|1-154
10982|code|STR.W           R12, [R2,#0x808]|194-248-8-200
10986|code|STR.W           R3, [R2,#0x804]|194-248-4-56
10990|code|ADD             SP, SP, #0xC|3-176
10992|code|POP.W           {R4-R11,PC}|189-232-240-143
10996|code|MOVW            R3, #0x79B9|71-246-185-19
11000|code|MOV.W           R12, #4|79-240-4-12
11004|code|PUSH.W          {R4-R11,LR}|45-233-240-79
11008|code|MOVT.W          R3, #0x9E37|201-246-55-99
11012|code|SUB             SP, SP, #0xC|131-176
11014|code|MOV             R5, R0|5-70
11016|code|ADDW            LR, R0, #0x404|0-242-4-78
11020|code|MOV             R8, R1|136-70
11022|code|MOV             R7, R3|31-70
11024|code|MOV             R0, R3|24-70
11026|code|MOV             R6, R3|30-70
11028|code|MOV             R2, R3|26-70
11030|code|MOV             R9, R3|153-70
11032|code|MOV             R1, R3|25-70
11034|code|MOV             R4, R3|28-70
11036|code|MOV.W           R10, #0|79-240-0-10
11040|code|STR             R5, [SP,#0x30+var_2C]|1-149
11042|code|STR.W           R10, [R5,#0x80C]|197-248-12-168
11046|code|STR.W           R10, [R5,#0x808]|197-248-8-168
11050|code|STR.W           R10, [R5,#0x804]|197-248-4-168
11054|code|EOR.W           R4, R4, R1,LSL#11|132-234-193-36
11058|code|ADD             R1, R9|73-68
11060|code|ADD             R2, R4|34-68
11062|code|EOR.W           R1, R1, R9,LSR#2|129-234-153-1
11066|code|ADD             R6, R1|14-68
11068|code|ADD             R9, R2|145-68
11070|code|EOR.W           R9, R9, R2,LSL#8|137-234-2-41
11074|code|ADD             R2, R6|50-68
11076|code|ADD             R0, R9|72-68
11078|code|EOR.W           R2, R2, R6,LSR#16|130-234-22-66
11082|code|ADD             R7, R2|23-68
11084|code|ADD             R6, R0|6-68
11086|code|EOR.W           R6, R6, R0,LSL#10|134-234-128-38
11090|code|ADD             R0, R7|56-68
11092|code|ADD             R3, R6|51-68
11094|code|EOR.W           R0, R0, R7,LSR#4|128-234-23-16
11098|code|ADD             R4, R0|4-68
11100|code|ADD             R7, R3|31-68
11102|code|EOR.W           R7, R7, R3,LSL#8|135-234-3-39
11106|code|SUBS.W          R12, R12, #1|188-241-1-12
11110|code|ADD             R3, R4|35-68
11112|code|ADD             R1, R7|57-68
11114|code|EOR.W           R3, R3, R4,LSR#9|131-234-84-35
11118|code|ADD             R4, R1|12-68
11120|code|ADD             R9, R3|153-68
11122|code|BNE             loc_2B2E|220-209
11124|code|LDR             R5, [SP,#0x30+var_2C]|1-157
11126|code|CMP.W           R8, #0|184-241-0-15
11130|code|BEQ.W           loc_2CF8|0-240-189-128
11134|code|ADD.W           R8, R5, #8|5-241-8-8
11138|code|ADDW            R11, R5, #0x804|5-246-4-11
11142|code|MOV             R12, LR|244-70
11144|code|MOV             R5, R9|77-70
11146|code|STR             R3, [SP,#0x30+var_30]|0-147
11148|code|LDR.W           R3, [R8]|216-248-0-48
11152|code|ADD.W           R12, R12, #0x20 ; ' '|12-241-32-12
11156|code|ADD.W           R8, R8, #0x20 ; ' '|8-241-32-8
11160|code|ADD             R1, R3|25-68
11162|code|LDR.W           R3, [R8,#-0x24]|88-248-36-60
11166|code|ADD             R4, R3|28-68
11168|code|LDR.W           R3, [R8,#-0x1C]|88-248-28-60
11172|code|EOR.W           R4, R4, R1,LSL#11|132-234-193-36
11176|code|ADD             R5, R3|29-68
11178|code|LDR.W           R3, [R8,#-0x18]|88-248-24-60
11182|code|ADD             R1, R5|41-68
11184|code|ADD.W           R9, R4, R3|4-235-3-9
11188|code|LDR.W           R3, [R8,#-0x14]|88-248-20-60
11192|code|ADD             R9, R2|145-68
11194|code|EOR.W           R1, R1, R5,LSR#2|129-234-149-1
11198|code|LDR.W           R2, [R8,#-0x10]|88-248-16-44
11202|code|ADD.W           R10, R1, R3|1-235-3-10
11206|code|ADD             R5, R9|77-68
11208|code|ADD             R6, R10|86-68
11210|code|EOR.W           R5, R5, R9,LSL#8|133-234-9-37
11214|code|LDR.W           R3, [R8,#-0xC]|88-248-12-60
11218|code|ADD.W           R10, R5, R2|5-235-2-10
11222|code|ADD.W           R2, R6, R9|6-235-9-2
11226|code|EOR.W           R2, R2, R6,LSR#16|130-234-22-66
11230|code|ADD.W           R9, R10, R0|10-235-0-9
11234|code|ADD             R6, R9|78-68
11236|code|LDR.W           R0, [R8,#-8]|88-248-8-12
11240|code|ADD.W           R10, R2, R3|2-235-3-10
11244|code|EOR.W           R6, R6, R9,LSL#10|134-234-137-38
11248|code|ADD             R7, R10|87-68
11250|code|LDR             R3, [SP,#0x30+var_30]|0-155
11252|code|ADD.W           R10, R6, R0|6-235-0-10
11256|code|ADD.W           R0, R7, R9|7-235-9-0
11260|code|ADD             R3, R10|83-68
11262|code|EOR.W           R0, R0, R7,LSR#4|128-234-23-16
11266|code|ADD             R4, R0|4-68
11268|code|ADD             R7, R3|31-68
11270|code|EOR.W           R7, R7, R3,LSL#8|135-234-3-39
11274|code|ADD             R3, R4|35-68
11276|code|EOR.W           R3, R3, R4,LSR#9|131-234-84-35
11280|code|ADD             R1, R7|57-68
11282|code|STR.W           R7, [R12,#-8]|76-248-8-124
11286|code|ADD             R4, R1|12-68
11288|code|STR.W           R1, [R12,#-0x1C]|76-248-28-28
11292|code|ADD             R5, R3|29-68
11294|code|STR.W           R4, [R12,#-0x20]|76-248-32-76
11298|code|STR.W           R5, [R12,#-0x18]|76-248-24-92
11302|code|STR.W           R3, [R12,#-4]|76-248-4-60
11306|code|STR.W           R0, [R12,#-0xC]|76-248-12-12
11310|code|STR.W           R6, [R12,#-0x10]|76-248-16-108
11314|code|STR.W           R2, [R12,#-0x14]|76-248-20-44
11318|code|CMP             R12, R11|220-69
11320|code|STR             R3, [SP,#0x30+var_30]|0-147
11322|code|BNE             loc_2B8C|167-209
11324|code|MOV             R8, R5|168-70
11326|code|MOV             R5, R4|37-70
11328|code|LDR.W           R4, [LR,#4]|222-248-4-64
11332|code|ADD.W           LR, LR, #0x20 ; ' '|14-241-32-14
11336|code|ADD.W           R9, R1, R4|1-235-4-9
11340|code|LDR.W           R1, [LR,#-0x18]|94-248-24-28
11344|code|LDR.W           R4, [LR,#-0x20]|94-248-32-76
11348|code|ADD             R8, R1|136-68
11350|code|LDR.W           R1, [LR,#-0x14]|94-248-20-28
11354|code|ADD.W           R12, R5, R4|5-235-4-12
11358|code|LDR.W           R5, [LR,#-0x10]|94-248-16-92
11362|code|EOR.W           R12, R12, R9,LSL#11|140-234-201-44
11366|code|ADD             R9, R8|193-68
11368|code|ADD.W           R4, R12, R1|12-235-1-4
11372|code|EOR.W           R9, R9, R8,LSR#2|137-234-152-9
11376|code|ADD             R4, R2|20-68
11378|code|ADD             R5, R9|77-68
11380|code|LDR.W           R2, [LR,#-0xC]|94-248-12-44
11384|code|ADD             R8, R4|160-68
11386|code|ADD             R6, R5|46-68
11388|code|EOR.W           R8, R8, R4,LSL#8|136-234-4-40
11392|code|ADD.W           R1, R8, R2|8-235-2-1
11396|code|ADDS            R2, R6, R4|50-25
11398|code|LDR.W           R4, [LR,#-8]|94-248-8-76
11402|code|ADD             R0, R1|8-68
11404|code|EOR.W           R2, R2, R6,LSR#16|130-234-22-66
11408|code|LDR.W           R1, [LR,#-4]|94-248-4-28
11412|code|ADD             R6, R0|6-68
11414|code|ADD             R4, R2|20-68
11416|code|EOR.W           R6, R6, R0,LSL#10|134-234-128-38
11420|code|ADD             R7, R4|39-68
11422|code|ADD             R1, R6|49-68
11424|code|ADD             R0, R7|56-68
11426|code|ADD             R3, R1|11-68
11428|code|EOR.W           R0, R0, R7,LSR#4|128-234-23-16
11432|code|ADD             R12, R0|132-68
11434|code|ADD             R7, R3|31-68
11436|code|EOR.W           R7, R7, R3,LSL#8|135-234-3-39
11440|code|ADD             R3, R12|99-68
11442|code|ADD.W           R1, R7, R9|7-235-9-1
11446|code|EOR.W           R3, R3, R12,LSR#9|131-234-92-35
11450|code|STR.W           R6, [LR,#-0x10]|78-248-16-108
11454|code|ADD.W           R5, R1, R12|1-235-12-5
11458|code|STR.W           R2, [LR,#-0x14]|78-248-20-44
11462|code|ADD             R8, R3|152-68
11464|code|STR.W           R1, [LR,#-0x1C]|78-248-28-28
11468|code|STR.W           R5, [LR,#-0x20]|78-248-32-92
11472|code|STR.W           R8, [LR,#-0x18]|78-248-24-140
11476|code|STR.W           R7, [LR,#-8]|78-248-8-124
11480|code|STR.W           R3, [LR,#-4]|78-248-4-60
11484|code|STR.W           R0, [LR,#-0xC]|78-248-12-12
11488|code|CMP             R11, LR|243-69
11490|code|BNE             loc_2C40|173-209
11492|code|LDR             R4, [SP,#0x30+var_2C]|1-156
11494|code|MOV             R0, R4|32-70
11496|code|BL              sub_2900|255-247-10-254
11500|code|MOV.W           R3, #0x100|79-244-128-115
11504|code|STR             R3, [R4]|35-96
11506|code|ADD             SP, SP, #0xC|3-176
11508|code|POP.W           {R4-R11,PC}|189-232-240-143
11512|code|ADDW            R12, R5, #0x804|5-246-4-12
11516|code|MOV             R5, R9|77-70
11518|code|EOR.W           R4, R4, R1,LSL#11|132-234-193-36
11522|code|ADD             R1, R5|41-68
11524|code|ADD             R2, R4|34-68
11526|code|EOR.W           R1, R1, R5,LSR#2|129-234-149-1
11530|code|ADD             R6, R1|14-68
11532|code|ADD             R5, R2|21-68
11534|code|EOR.W           R5, R5, R2,LSL#8|133-234-2-37
11538|code|ADD             R2, R6|50-68
11540|code|ADD             R0, R5|40-68
11542|code|EOR.W           R2, R2, R6,LSR#16|130-234-22-66
11546|code|ADD             R7, R2|23-68
11548|code|ADD             R6, R0|6-68
11550|code|EOR.W           R6, R6, R0,LSL#10|134-234-128-38
11554|code|ADD             R0, R7|56-68
11556|code|ADD             R3, R6|51-68
11558|code|EOR.W           R0, R0, R7,LSR#4|128-234-23-16
11562|code|ADD             R4, R0|4-68
11564|code|ADD             R7, R3|31-68
11566|code|EOR.W           R7, R7, R3,LSL#8|135-234-3-39
11570|code|ADD             R3, R4|35-68
11572|code|EOR.W           R3, R3, R4,LSR#9|131-234-84-35
11576|code|ADD             R1, R7|57-68
11578|code|STR.W           R3, [LR,#0x1C]|206-248-28-48
11582|code|ADD             R5, R3|29-68
11584|code|STR.W           R1, [LR,#4]|206-248-4-16
11588|code|ADD             R4, R1|12-68
11590|code|STR.W           R5, [LR,#8]|206-248-8-80
11594|code|ADD.W           LR, LR, #0x20 ; ' '|14-241-32-14
11598|code|STR.W           R4, [LR,#-0x20]|78-248-32-76
11602|code|STR.W           R7, [LR,#-8]|78-248-8-124
11606|code|STR.W           R0, [LR,#-0xC]|78-248-12-12
11610|code|STR.W           R6, [LR,#-0x10]|78-248-16-108
11614|code|STR.W           R2, [LR,#-0x14]|78-248-20-44
11618|code|CMP             LR, R12|230-69
11620|code|BNE             loc_2CFE|203-209
11622|code|B               loc_2CE4|189-231
11624|code|PUSH.W          {R4-R11,LR}|45-233-240-79
11628|code|SUB             SP, SP, #0xCC|179-176
11630|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x2D7E)|223-248-16-162
11634|code|ADD             R7, SP, #0x44|17-175
11636|code|LDR             R2, =(aSFailureCodeI - 0x2D80); "%s: Failure: code %i"|131-74
11638|code|MOV             R4, R0|4-70
11640|code|LDR             R3, =(__stack_chk_guard_ptr - 0x1BDC4)|131-75
11642|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
11644|code|ADD             R2, PC; "%s: Failure: code %i"|122-68
11646|code|STR             R2, [SP,#0xCC+var_A4]|10-146
11648|code|LDR             R2, =(aSFailureSignal - 0x2D8A); "%s: Failure: signal %i"|130-74
11650|code|STR             R0, [SP,#0xCC+var_98]|13-144
11652|code|MOV             R0, R7; set|56-70
11654|code|ADD             R2, PC; "%s: Failure: signal %i"|122-68
11656|code|STR             R2, [SP,#0xCC+var_A0]|11-146
11658|code|ADD             R2, SP, #0xCC+var_8C|16-170
11660|code|STR             R2, [SP,#0xCC+sig]|8-146
11662|code|LDR.W           R3, [R10,R3]; __stack_chk_guard|90-248-3-48
11666|code|LDR             R2, =(aSSuccess - 0x2D9E); "%s: Success"|127-74
11668|code|LDR.W           R8, =(aS052fRoundIOfI - 0x2DA2); "%s: %05.2f%%, round %i of %i, pass %i o"...|223-248-252-129
11672|code|LDR             R3, [R3]|27-104
11674|code|ADD             R2, PC; "%s: Success"|122-68
11676|code|STR             R2, [SP,#0xCC+var_9C]|12-146
11678|code|ADD             R8, PC; "%s: %05.2f%%, round %i of %i, pass %i o"...|248-68
11680|code|STR             R3, [SP,#0xCC+var_8]|49-147
11682|code|BLX             sigemptyset|255-247-208-232
11686|code|MOVS            R1, #1; signo|1-33
11688|code|MOV             R0, R7; set|56-70
11690|code|BLX             sigaddset|254-247-254-239
11694|code|MOVS            R1, #0xF; signo|15-33
11696|code|MOV             R0, R7; set|56-70
11698|code|BLX             sigaddset|254-247-250-239
11702|code|MOVS            R1, #3; signo|3-33
11704|code|MOV             R0, R7; set|56-70
11706|code|BLX             sigaddset|254-247-246-239
11710|code|MOVS            R1, #2; signo|2-33
11712|code|MOV             R0, R7; set|56-70
11714|code|BLX             sigaddset|254-247-242-239
11718|code|MOV             R0, R7; set|56-70
11720|code|MOVS            R1, #0xA; signo|10-33
11722|code|BLX             sigaddset|254-247-238-239
11726|code|LDR             R3, [R4]|35-104
11728|code|LDR             R6, [R4,#4]|102-104
11730|code|STR             R3, [SP,#0xCC+var_A8]|9-147
11732|code|MOV             R0, R7; jumptable 00002DEC default case, cases 4-9,11-14|56-70
11734|code|LDR             R1, [SP,#0xCC+sig]; sig|8-153
11736|code|BLX             sigwait|254-247-84-239
11740|code|LDR             R3, [SP,#0xCC+var_8C]|16-155
11742|code|SUBS            R3, #1; switch 15 cases|1-59
11744|code|CMP             R3, #0xE|14-43
11746|code|BHI             def_2DEC; jumptable 00002DEC default case, cases 4-9,11-14|247-216
11748|code|ADR             R2, jpt_2DEC|2-162
11750|code|LDR.W           R3, [R2,R3,LSL#2]|82-248-35-48
11754|code|ADD             R2, R3|26-68
11756|code|BX              R2; switch jump|16-71
11758|data|ALIGN 0x10|0-191
11760|data|DCD loc_2EC4+1 - 0x2DF0; jump table for switch statement|213-0-0-0
11764|data|DCD loc_2EC4+1 - 0x2DF0; jumptable 00002DEC cases 1-3,15|213-0-0-0
11768|data|DCD loc_2EC4+1 - 0x2DF0; jumptable 00002DEC cases 1-3,15|213-0-0-0
11772|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11776|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11780|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11784|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11788|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11792|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11796|data|DCD loc_2E2C+1 - 0x2DF0; jumptable 00002DEC case 10|61-0-0-0
11800|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11804|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11808|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11812|data|DCD def_2DEC+1 - 0x2DF0; jumptable 00002DEC default case, cases 4-9,11-14|229-255-255-255
11816|data|DCD loc_2EC4+1 - 0x2DF0; jumptable 00002DEC cases 1-3,15|213-0-0-0
11820|code|LDR             R0, [SP,#0xCC+var_98]; jumptable 00002DEC case 10|13-152
11822|code|BL              sub_4B3C|1-240-133-254
11826|code|LDR             R3, [R6,#4]|115-104
11828|code|CMP             R3, #0|0-43
11830|code|BLE             def_2DEC; jumptable 00002DEC default case, cases 4-9,11-14|205-221
11832|code|LDR             R3, [SP,#0xCC+var_A8]|9-155
11834|code|MOVS            R4, #0|0-36
11836|code|LDR.W           R9, =(aSyncing - 0x2E4A); "[syncing]"|223-248-88-145
11840|code|SUB.W           R11, R3, #4|163-241-4-11
11844|code|LDR             R3, =(aVerifying - 0x2E4E); "[verifying]"|85-75
11846|code|ADD             R9, PC; "[syncing]"|249-68
11848|code|STR             R7, [SP,#0xCC+var_90]|15-151
11850|code|ADD             R3, PC; "[verifying]"|123-68
11852|code|STR             R3, [SP,#0xCC+var_94]|14-147
11854|code|LDR.W           R7, [R11,#4]!|91-248-4-127
11858|code|LDR.W           R3, [R7,#0x88+arg_3F0]|215-248-156-52
11862|code|CMP             R3, #0|0-43
11864|code|BEQ             loc_2F46|117-208
11866|code|LDR.W           R3, [R7,#0x88+arg_214]|215-248-192-50
11870|code|SUBS            R3, #1; switch 4 cases|1-59
11872|code|CMP             R3, #3|3-43
11874|code|BHI             def_2E64; jumptable 00002E64 default case|5-216
11876|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
11880|data|DCB 0x2B; jump table for switch statement|43
11881|data|DCB 0x29|41
11882|data|DCB 2|2
11883|data|DCB 0x26|38
11884|code|LDR             R5, =(aBlanking - 0x2E72); jumptable 00002E64 case 3|76-77
11886|code|ADD             R5, PC; "[blanking]"|125-68
11888|code|VLDR            D7, [R7,#0x88+arg_24C]; jumptable 00002E64 default case|151-237-190-123
11892|code|MOVS            R0, #2|2-32
11894|code|LDRSH.W         R3, [R7,#0x88+arg_3EC]|183-249-152-52
11898|code|MOV             R1, R8|65-70
11900|code|LDR.W           R2, [R7,#0x88+arg_174]|215-248-32-34
11904|code|CMP             R3, #0|0-43
11906|code|VSTR            D7, [SP,#0xCC+var_CC]|141-237-0-123
11910|code|LDR.W           R3, [R7,#0x88+arg_254]|215-248-0-51
11914|code|IT NE|24-191
11916|code|MOVNE           R5, R9|77-70
11918|code|STR             R3, [SP,#0xCC+var_C4]|2-147
11920|code|LDR.W           R3, [R7,#0x88+arg_230]|215-248-220-50
11924|code|STR             R3, [SP,#0xCC+var_C0]|3-147
11926|code|LDR.W           R3, [R7,#0x88+arg_218]|215-248-196-50
11930|code|STR             R3, [SP,#0xCC+var_BC]|4-147
11932|code|LDR.W           R3, [R7,#0x88+arg_1F4]|215-248-160-50
11936|code|STR             R5, [SP,#0xCC+var_B4]|6-149
11938|code|STR             R3, [SP,#0xCC+var_B8]|5-147
11940|code|BL              sub_66B0|3-240-4-252
11944|code|LDR             R3, [R6,#4]|115-104
11946|code|ADDS            R4, #1|1-52
11948|code|CMP             R3, R4|163-66
11950|code|BGT             loc_2E4E|206-220
11952|code|LDR             R7, [SP,#0xCC+var_90]|15-159
11954|code|B               def_2DEC; jumptable 00002DEC default case, cases 4-9,11-14|143-231
11956|code|LDR             R5, =(aOpsIiFinal - 0x2EBA); jumptable 00002E64 case 4|59-77
11958|code|ADD             R5, PC; "[OPS-II final]"|125-68
11960|code|B               def_2E64; jumptable 00002E64 default case|218-231
11962|code|LDR             R5, [SP,#0xCC+var_94]; jumptable 00002E64 case 2|14-157
11964|code|B               def_2E64; jumptable 00002E64 default case|216-231
11966|code|LDR             R5, =(aWriting - 0x2EC4); jumptable 00002E64 case 1|58-77
11968|code|ADD             R5, PC; "[writing]"|125-68
11970|code|B               def_2E64; jumptable 00002E64 default case|213-231
11972|code|LDR             R2, [R6,#4]; jumptable 00002DEC cases 1-3,15|114-104
11974|code|CMP             R2, #0|0-42
11976|code|BLE             loc_2EF0|18-221
11978|code|LDR             R3, [SP,#0xCC+var_A8]|9-155
11980|code|MOVS            R4, #0|0-36
11982|code|SUBS            R5, R3, #4|29-31
11984|code|B               loc_2ED8|2-224
11986|code|ADDS            R4, #1|1-52
11988|code|CMP             R2, R4|162-66
11990|code|BLE             loc_2EF0|11-221
11992|code|LDR.W           R3, [R5,#4]!|85-248-4-63
11996|code|LDR.W           R0, [R3,#0x49C]; th|211-248-156-4
12000|code|CMP             R0, #0|0-40
12002|code|BEQ             loc_2ED2|246-208
12004|code|BLX             pthread_cancel|254-247-228-239
12008|code|LDR             R2, [R6,#4]|114-104
12010|code|ADDS            R4, #1|1-52
12012|code|CMP             R2, R4|162-66
12014|code|BGT             loc_2ED8|243-220
12016|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|46-75
12018|code|LDR.W           R5, [R10,R3]; nwipe_options|90-248-3-80
12022|code|LDR             R4, [R5,#(dword_1C2D8 - 0x1C2CC)]|236-104
12024|code|CBNZ            R4, loc_2F0E|76-185
12026|code|LDR             R3, [R6,#0x20]|51-106
12028|code|CMP             R3, #0|0-43
12030|code|BEQ             loc_2F7A|60-208
12032|code|LDR             R0, [R3]; th|24-104
12034|code|BLX             pthread_cancel|254-247-214-239
12038|code|LDR             R2, [R6,#0x20]|50-106
12040|code|LDR             R3, [R5,#(dword_1C2D8 - 0x1C2CC)]|235-104
12042|code|STR             R4, [R2]|20-96
12044|code|CBZ             R3, loc_2F7A|171-179
12046|code|LDR             R3, =(log_current_element_ptr - 0x1BDC4)|40-75
12048|code|LDR.W           R5, [R10,R3]; log_current_element|90-248-3-80
12052|code|LDR             R3, [R5]|43-104
12054|code|CMP             R3, #0|0-43
12056|code|BLE             loc_2F34|12-221
12058|code|LDR             R3, =(log_lines_ptr - 0x1BDC4)|38-75
12060|code|MOVS            R4, #0|0-36
12062|code|LDR.W           R6, [R10,R3]; log_lines|90-248-3-96
12066|code|LDR             R3, [R6]|51-104
12068|code|LDR.W           R0, [R3,R4,LSL#2]; s|83-248-36-0
12072|code|ADDS            R4, #1|1-52
12074|code|BLX             puts|254-247-44-239
12078|code|LDR             R3, [R5]|43-104
12080|code|CMP             R3, R4|163-66
12082|code|BGT             loc_2F22|246-220
12084|code|LDR             R1, =(aProgramInterru - 0x2F3E); "Program interrupted (caught signal %d)"...|32-73
12086|code|MOVS            R0, #1|1-32
12088|code|LDR             R2, [SP,#0xCC+var_8C]|16-154
12090|code|ADD             R1, PC; "Program interrupted (caught signal %d)"...|121-68
12092|code|BLX             __printf_chk|254-247-202-239
12096|code|MOVS            R0, #0; status|0-32
12098|code|BLX             exit|254-247-110-239
12102|code|LDR.W           R3, [R7,#0x88+arg_22C]|215-248-216-50
12106|code|CBZ             R3, loc_2F6C|123-177
12108|code|LDR.W           R1, [R7,#0x88+arg_260]|215-248-12-19
12112|code|LDR.W           R2, [R7,#0x88+arg_174]|215-248-32-34
12116|code|CBZ             R1, loc_2F62|41-177
12118|code|MOV             R3, R1|11-70
12120|code|MOVS            R0, #2|2-32
12122|code|LDR             R1, [SP,#0xCC+var_A0]|11-153
12124|code|BL              sub_66B0|3-240-168-251
12128|code|B               loc_2EA8|162-231
12130|code|MOVS            R0, #2|2-32
12132|code|LDR             R1, [SP,#0xCC+var_A4]|10-153
12134|code|BL              sub_66B0|3-240-163-251
12138|code|B               loc_2EA8|157-231
12140|code|LDR.W           R2, [R7,#0x88+arg_174]|215-248-32-34
12144|code|MOVS            R0, #2|2-32
12146|code|LDR             R1, [SP,#0xCC+var_9C]|12-153
12148|code|BL              sub_66B0|3-240-156-251
12152|code|B               loc_2EA8|150-231
12154|code|BL              sub_3350|0-240-233-249
12158|code|B               loc_2F0E|198-231
12160|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2D7E|70-144-1-0
12164|data|DCD aSFailureCodeI - 0x2D80; "%s: Failure: code %i"|68-91-0-0
12168|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
12172|data|DCD aSFailureSignal - 0x2D8A; "%s: Failure: signal %i"|34-91-0-0
12176|data|DCD aSSuccess - 0x2D9E; "%s: Success"|2-91-0-0
12180|data|DCD aS052fRoundIOfI - 0x2DA2; "%s: %05.2f%%, round %i of %i, pass %i o"...|206-90-0-0
12184|data|DCD aSyncing - 0x2E4A; "[syncing]"|26-90-0-0
12188|data|DCD aVerifying - 0x2E4E; "[verifying]"|10-90-0-0
12192|data|DCD aBlanking - 0x2E72; "[blanking]"|190-89-0-0
12196|data|DCD aOpsIiFinal - 0x2EBA; "[OPS-II final]"|130-89-0-0
12200|data|DCD aWriting - 0x2EC4; "[writing]"|136-89-0-0
12204|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
12208|data|DCD log_current_element_ptr - 0x1BDC4|16-2-0-0
12212|data|DCD log_lines_ptr - 0x1BDC4|24-2-0-0
12216|data|DCD aProgramInterru - 0x2F3E; "Program interrupted (caught signal %d)"...|158-89-0-0
12220|data|ALIGN 0x10|0-0-0-0
12224|code|PUSH            {R4-R6,LR}|112-181
12226|code|MOV             R6, R1|14-70
12228|code|SUB             SP, SP, #8|130-176
12230|code|MOV             R5, R0|5-70
12232|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
12236|code|CBZ             R0, loc_2FD4|16-177
12238|code|LDRSH.W         R4, [R0,#6]|176-249-6-64
12242|code|ADDS            R4, #1|1-52
12244|code|MOV             R0, R6; s|48-70
12246|code|BLX             strlen|254-247-54-239
12250|code|LDR             R3, =(aSSS_0+8 - 0x2FE4); "%s"|6-75
12252|code|STR             R6, [SP,#0x18+var_18]|0-150
12254|code|MOVS            R1, #0; int|0-33
12256|code|ADD             R3, PC; "%s" ; char *|123-68
12258|code|SUBS            R2, R4, R0|34-26
12260|code|MOV             R0, R5; WINDOW *|40-70
12262|code|BIC.W           R2, R2, R2,ASR#31|34-234-226-114
12266|code|ASRS            R2, R2, #1; int|82-16
12268|code|BLX             mvwprintw|254-247-188-239
12272|code|ADD             SP, SP, #8|2-176
12274|code|POP             {R4-R6,PC}|112-189
12276|data|DCD aSSS_0+8 - 0x2FE4; "%s"|204-119-0-0
12280|code|PUSH.W          {R4-R11,LR}|45-233-240-79
12284|code|SUB             SP, SP, #0x24|137-176
12286|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x3012)|191-76
12288|code|BLX             initscr|254-247-138-238
12292|code|BLX             cbreak|254-247-38-238
12296|code|BLX             noecho|254-247-198-239
12300|code|LDR             R3, =(stdscr_ptr - 0x1BDC4)|188-75
12302|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
12304|code|MOVS            R1, #1; _Bool|1-33
12306|code|LDR.W           R9, [R4,R3]; stdscr|84-248-3-144
12310|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
12314|code|BLX             keypad|254-247-120-238
12318|code|BLX             has_colors|254-247-252-237
12322|code|CMP             R0, #0|0-40
12324|code|BNE.W           loc_328E|64-240-51-129
12328|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
12332|code|BLX             wclear|254-247-150-239
12336|code|LDR             R1, =(COLS_ptr - 0x1BDC4)|180-73
12338|code|MOVS            R2, #0; int|0-34
12340|code|MOVS            R0, #1; int|1-32
12342|code|MOV             R3, R2; int|19-70
12344|code|LDR.W           R10, [R4,R1]; COLS|84-248-1-160
12348|code|LDR.W           R1, [R10]; int|218-248-0-16
12352|code|BLX             newwin|254-247-130-238
12356|code|LDR             R3, =(header_window_ptr - 0x1BDC4)|176-75
12358|code|LDR             R7, [R4,R3]; header_window|231-88
12360|code|STR             R0, [R7]|56-96
12362|code|BLX             new_panel|254-247-198-238
12366|code|LDR             R3, =(header_panel_ptr - 0x1BDC4)|175-75
12368|code|LDR             R3, [R4,R3]; header_panel|227-88
12370|code|STR             R0, [R3]|24-96
12372|code|BLX             has_colors|254-247-224-237
12376|code|CMP             R0, #0|0-40
12378|code|BNE.W           loc_3282|64-240-18-129
12382|code|LDR             R0, [R7]; WINDOW *|56-104
12384|code|BLX             wclear|254-247-124-239
12388|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|170-75
12390|code|LDR             R0, [R7]|56-104
12392|code|LDR             R3, [R4,R3]; nwipe_options|227-88
12394|code|LDR             R1, [R3,#(dword_1C2DC - 0x1C2CC)]|25-105
12396|code|BL              sub_2FC0|255-247-168-255
12400|code|LDR             R2, =(LINES_ptr - 0x1BDC4)|168-74
12402|code|LDR.W           R1, [R10]; int|218-248-0-16
12406|code|MOVS            R3, #0; int|0-35
12408|code|MOVS            R0, #1; int|1-32
12410|code|LDR             R2, [R4,R2]; LINES|162-88
12412|code|STR             R2, [SP,#0x48+var_2C]|7-146
12414|code|LDR             R2, [R2]|18-104
12416|code|SUBS            R2, #1; int|1-58
12418|code|BLX             newwin|254-247-98-238
12422|code|LDR             R3, =(footer_window_ptr - 0x1BDC4)|164-75
12424|code|LDR.W           R8, [R4,R3]; footer_window|84-248-3-128
12428|code|STR.W           R0, [R8]|200-248-0-0
12432|code|BLX             new_panel|254-247-162-238
12436|code|LDR             R3, =(footer_panel_ptr - 0x1BDC4)|161-75
12438|code|LDR             R3, [R4,R3]; footer_panel|227-88
12440|code|STR             R0, [R3]|24-96
12442|code|BLX             has_colors|254-247-190-237
12446|code|CMP             R0, #0|0-40
12448|code|BNE.W           loc_3274|64-240-232-128
12452|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
12456|code|BLX             wclear|254-247-88-239
12460|code|MOVS            R1, #0x2C ; ','; int|44-33
12462|code|MOVS            R2, #1; int|1-34
12464|code|MOVS            R3, #0; int|0-35
12466|code|MOVS            R0, #7; int|7-32
12468|code|BLX             newwin|254-247-72-238
12472|code|LDR             R3, =(options_window_ptr - 0x1BDC4)|153-75
12474|code|LDR             R6, [R4,R3]; options_window|230-88
12476|code|STR             R0, [R6]|48-96
12478|code|BLX             new_panel|254-247-140-238
12482|code|LDR             R3, =(options_panel_ptr - 0x1BDC4)|152-75
12484|code|LDR             R3, [R4,R3]; options_panel|227-88
12486|code|STR             R0, [R3]|24-96
12488|code|BLX             has_colors|254-247-166-237
12492|code|CMP             R0, #0|0-40
12494|code|BNE.W           loc_325C|64-240-197-128
12498|code|MOV.W           R11, #0|79-240-0-11
12502|code|LDR             R0, [R6]; WINDOW *|48-104
12504|code|BLX             wclear|254-247-64-239
12508|code|LDR             R0, [R6]; WINDOW *|48-104
12510|code|MOV             R1, R11; chtype|89-70
12512|code|MOV             R2, R11; chtype|90-70
12514|code|MOV             R3, R11; chtype|91-70
12516|code|STR.W           R11, [SP,#0x48+var_48]; chtype|205-248-0-176
12520|code|STR.W           R11, [SP,#0x48+var_44]; chtype|205-248-4-176
12524|code|STR.W           R11, [SP,#0x48+var_40]; chtype|205-248-8-176
12528|code|STR.W           R11, [SP,#0x48+var_3C]; chtype|205-248-12-176
12532|code|STR.W           R11, [SP,#0x48+var_38]; chtype|205-248-16-176
12536|code|BLX             wborder|254-247-226-237
12540|code|MOVS            R1, #0x24 ; '$'; int|36-33
12542|code|MOVS            R2, #1; int|1-34
12544|code|MOVS            R3, #0x2C ; ','; int|44-35
12546|code|MOVS            R0, #7; int|7-32
12548|code|BLX             newwin|254-247-32-238
12552|code|LDR             R3, =(stats_window_ptr - 0x1BDC4)|135-75
12554|code|LDR             R5, [R4,R3]; stats_window|229-88
12556|code|STR             R0, [R5]|40-96
12558|code|BLX             new_panel|254-247-100-238
12562|code|LDR             R3, =(stats_panel_ptr - 0x1BDC4)|134-75
12564|code|LDR             R3, [R4,R3]; stats_panel|227-88
12566|code|STR             R0, [R3]|24-96
12568|code|BLX             has_colors|254-247-126-237
12572|code|CMP             R0, #0|0-40
12574|code|BNE.W           loc_3244|64-240-145-128
12578|code|MOV.W           R11, #0|79-240-0-11
12582|code|LDR             R0, [R5]; WINDOW *|40-104
12584|code|BLX             wclear|254-247-24-239
12588|code|LDR             R0, [R5]; WINDOW *|40-104
12590|code|MOV             R2, R11; chtype|90-70
12592|code|MOV             R1, R11; chtype|89-70
12594|code|MOV             R3, R11; chtype|91-70
12596|code|STR.W           R11, [SP,#0x48+var_48]; chtype|205-248-0-176
12600|code|STR.W           R11, [SP,#0x48+var_44]; chtype|205-248-4-176
12604|code|STR.W           R11, [SP,#0x48+var_40]; chtype|205-248-8-176
12608|code|STR.W           R11, [SP,#0x48+var_3C]; chtype|205-248-12-176
12612|code|STR.W           R11, [SP,#0x48+var_38]; chtype|205-248-16-176
12616|code|BLX             wborder|254-247-186-237
12620|code|LDR             R3, =(off_1C008 - 0x3154); " Statistics "|120-75
12622|code|LDR             R0, [R5]|40-104
12624|code|ADD             R3, PC; off_1C008|123-68
12626|code|LDR             R1, [R3]; " Statistics "|25-104
12628|code|BL              sub_2FC0|255-247-52-255
12632|code|LDR             R3, =(aRuntime - 0x3164); "Runtime:       "|118-75
12634|code|MOVS            R1, #1; int|1-33
12636|code|LDR             R0, [R5]; WINDOW *|40-104
12638|code|MOV             R2, R1; int|10-70
12640|code|ADD             R3, PC; "Runtime:       "|123-68
12642|code|BLX             mvwprintw|254-247-2-239
12646|code|LDR             R3, =(aRemaining - 0x3170); "Remaining:     "|116-75
12648|code|MOVS            R1, #2; int|2-33
12650|code|MOVS            R2, #1; int|1-34
12652|code|ADD             R3, PC; "Remaining:     "|123-68
12654|code|LDR             R0, [R5]; WINDOW *|40-104
12656|code|BLX             mvwprintw|254-247-250-238
12660|code|LDR             R3, =(aLoadAverages - 0x317E); "Load Averages: "|113-75
12662|code|MOVS            R1, #3; int|3-33
12664|code|MOVS            R2, #1; int|1-34
12666|code|ADD             R3, PC; "Load Averages: "|123-68
12668|code|LDR             R0, [R5]; WINDOW *|40-104
12670|code|BLX             mvwprintw|254-247-244-238
12674|code|LDR             R3, =(aThroughput - 0x318C); "Throughput:    "|111-75
12676|code|MOVS            R1, #4; int|4-33
12678|code|MOVS            R2, #1; int|1-34
12680|code|ADD             R3, PC; "Throughput:    "|123-68
12682|code|LDR             R0, [R5]; WINDOW *|40-104
12684|code|BLX             mvwprintw|254-247-236-238
12688|code|LDR             R3, =(aErrors - 0x319A); "Errors:        "|108-75
12690|code|MOVS            R1, #5; int|5-33
12692|code|MOVS            R2, #1; int|1-34
12694|code|ADD             R3, PC; "Errors:        "|123-68
12696|code|LDR             R0, [R5]; WINDOW *|40-104
12698|code|BLX             mvwprintw|254-247-230-238
12702|code|LDR             R3, [SP,#0x48+var_2C]|7-155
12704|code|LDR.W           R1, [R10]; int|218-248-0-16
12708|code|MOVS            R2, #8; int|8-34
12710|code|LDR             R0, [R3]|24-104
12712|code|MOV             R3, R11; int|91-70
12714|code|SUBS            R0, #9; int|9-56
12716|code|BLX             newwin|254-247-204-237
12720|code|LDR             R3, =(main_window_ptr - 0x1BDC4)|101-75
12722|code|LDR.W           R10, [R4,R3]; main_window|84-248-3-160
12726|code|STR.W           R0, [R10]|202-248-0-0
12730|code|BLX             new_panel|254-247-14-238
12734|code|LDR             R3, =(main_panel_ptr - 0x1BDC4)|99-75
12736|code|LDR             R3, [R4,R3]; main_panel|227-88
12738|code|STR             R0, [R3]|24-96
12740|code|BLX             has_colors|254-247-40-237
12744|code|CBZ             R0, loc_31E4|96-177
12746|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
12750|code|MOV.W           R1, #0x120; chtype|79-244-144-113
12754|code|BLX             wbkgdset|254-247-124-237
12758|code|MOV             R2, R11; void *|90-70
12760|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
12764|code|MOV.W           R1, #0x100; attr_t|79-244-128-113
12768|code|BLX             wattr_on|254-247-20-237
12772|code|MOVS            R4, #0|0-36
12774|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
12778|code|BLX             werase|254-247-32-239
12782|code|MOV             R1, R4; chtype|33-70
12784|code|MOV             R2, R4; chtype|34-70
12786|code|MOV             R3, R4; chtype|35-70
12788|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
12792|code|STR             R4, [SP,#0x48+var_48]; chtype|0-148
12794|code|STR             R4, [SP,#0x48+var_44]; chtype|1-148
12796|code|STR             R4, [SP,#0x48+var_40]; chtype|2-148
12798|code|STR             R4, [SP,#0x48+var_3C]; chtype|3-148
12800|code|STR             R4, [SP,#0x48+var_38]; chtype|4-148
12802|code|BLX             wborder|254-247-94-237
12806|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
12810|code|BLX             wrefresh|254-247-116-237
12814|code|LDR             R0, [R7]; WINDOW *|56-104
12816|code|BLX             wrefresh|254-247-112-237
12820|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
12824|code|BLX             wrefresh|254-247-108-237
12828|code|LDR             R0, [R6]; WINDOW *|48-104
12830|code|BLX             wrefresh|254-247-106-237
12834|code|LDR             R0, [R5]; WINDOW *|40-104
12836|code|BLX             wrefresh|254-247-102-237
12840|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
12844|code|BLX             wrefresh|254-247-98-237
12848|code|BLX             update_panels|254-247-102-237
12852|code|BLX             doupdate|254-247-182-238
12856|code|MOV             R0, R4; int|32-70
12858|code|ADD             SP, SP, #0x24 ; '$'|9-176
12860|code|POP.W           {R4-R11,LR}|189-232-240-79
12864|code|B.W             j_curs_set|254-247-218-190
12868|code|LDR             R0, [R5]; WINDOW *|40-104
12870|code|MOV.W           R1, #0x120; chtype|79-244-144-113
12874|code|BLX             wbkgdset|254-247-64-237
12878|code|MOV             R2, R11; void *|90-70
12880|code|LDR             R0, [R5]; WINDOW *|40-104
12882|code|MOV.W           R1, #0x100; attr_t|79-244-128-113
12886|code|BLX             wattr_on|254-247-218-236
12890|code|B               loc_3122|98-231
12892|code|LDR             R0, [R6]; WINDOW *|48-104
12894|code|MOV.W           R1, #0x120; chtype|79-244-144-113
12898|code|BLX             wbkgdset|254-247-52-237
12902|code|LDR             R0, [R6]; WINDOW *|48-104
12904|code|MOV.W           R1, #0x100; attr_t|79-244-128-113
12908|code|MOVS            R2, #0; void *|0-34
12910|code|BLX             wattr_on|254-247-206-236
12914|code|B               loc_30D2|46-231
12916|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
12920|code|MOV.W           R1, #0x420; chtype|79-244-132-97
12924|code|BLX             wbkgdset|254-247-38-237
12928|code|B               loc_30A4|16-231
12930|code|LDR             R0, [R7]; WINDOW *|56-104
12932|code|MOV.W           R1, #0x420; chtype|79-244-132-97
12936|code|BLX             wbkgdset|254-247-32-237
12940|code|B               loc_305E|231-230
12942|code|BLX             start_color|254-247-80-237
12946|code|BLX             can_change_color|254-247-50-238
12950|code|CBNZ            R0, loc_32EC|72-187
12952|code|MOVS            R1, #7; __int16|7-33
12954|code|MOVS            R2, #4; __int16|4-34
12956|code|MOVS            R0, #1; __int16|1-32
12958|code|BLX             init_pair|254-247-28-237
12962|code|MOVS            R1, #6; __int16|6-33
12964|code|MOVS            R2, #4; __int16|4-34
12966|code|MOVS            R0, #2; __int16|2-32
12968|code|BLX             init_pair|254-247-22-237
12972|code|MOVS            R1, #1; __int16|1-33
12974|code|MOVS            R2, #4; __int16|4-34
12976|code|MOVS            R0, #3; __int16|3-32
12978|code|BLX             init_pair|254-247-18-237
12982|code|MOVS            R0, #4; __int16|4-32
12984|code|MOV             R1, R0; __int16|1-70
12986|code|MOVS            R2, #7; __int16|7-34
12988|code|BLX             init_pair|254-247-12-237
12992|code|MOVS            R1, #7; __int16|7-33
12994|code|MOVS            R2, #2; __int16|2-34
12996|code|MOVS            R0, #5; __int16|5-32
12998|code|BLX             init_pair|254-247-8-237
13002|code|MOVS            R1, #7; __int16|7-33
13004|code|MOVS            R2, #1; __int16|1-34
13006|code|MOVS            R0, #6; __int16|6-32
13008|code|BLX             init_pair|254-247-2-237
13012|code|MOVS            R1, #0; __int16|0-33
13014|code|MOV             R2, R1; __int16|10-70
13016|code|MOVS            R0, #7; __int16|7-32
13018|code|BLX             init_pair|254-247-254-236
13022|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
13026|code|MOV.W           R1, #0x120; chtype|79-244-144-113
13030|code|BLX             wbkgdset|254-247-242-236
13034|code|B               loc_3028|157-230
13036|code|MOVS            R1, #0x80; __int16|128-33
13038|code|MOVS            R0, #6; __int16|6-32
13040|code|MOV             R2, R1; __int16|10-70
13042|code|MOV             R3, R1; __int16|11-70
13044|code|BLX             init_color|254-247-162-236
13048|code|B               loc_3298|206-231
13050|data|ALIGN 4|0-191
13052|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3012|178-141-1-0
13056|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
13060|data|DCD COLS_ptr - 0x1BDC4|220-1-0-0
13064|data|DCD header_window_ptr - 0x1BDC4|152-1-0-0
13068|data|DCD header_panel_ptr - 0x1BDC4|0-2-0-0
13072|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
13076|data|DCD LINES_ptr - 0x1BDC4|252-1-0-0
13080|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
13084|data|DCD footer_panel_ptr - 0x1BDC4|180-1-0-0
13088|data|DCD options_window_ptr - 0x1BDC4|32-2-0-0
13092|data|DCD options_panel_ptr - 0x1BDC4|28-2-0-0
13096|data|DCD stats_window_ptr - 0x1BDC4|196-1-0-0
13100|data|DCD stats_panel_ptr - 0x1BDC4|236-1-0-0
13104|data|DCD off_1C008 - 0x3154; " Statistics "|180-142-1-0
13108|data|DCD aRuntime - 0x3164; "Runtime:       "|124-90-0-0
13112|data|DCD aRemaining - 0x3170; "Remaining:     "|128-90-0-0
13116|data|DCD aLoadAverages - 0x317E; "Load Averages: "|130-90-0-0
13120|data|DCD aThroughput - 0x318C; "Throughput:    "|132-90-0-0
13124|data|DCD aErrors - 0x319A; "Errors:        "|134-90-0-0
13128|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
13132|data|DCD main_panel_ptr - 0x1BDC4|184-1-0-0
13136|code|PUSH            {R4,LR}|16-181
13138|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x335A)|28-76
13140|code|LDR             R3, =(footer_panel_ptr - 0x1BDC4)|28-75
13142|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
13144|code|LDR             R3, [R4,R3]; footer_panel|227-88
13146|code|LDR             R0, [R3]; PANEL *|24-104
13148|code|BLX             del_panel|254-247-30-237
13152|code|LDR             R3, =(header_panel_ptr - 0x1BDC4)|26-75
13154|code|LDR             R3, [R4,R3]; header_panel|227-88
13156|code|LDR             R0, [R3]; PANEL *|24-104
13158|code|BLX             del_panel|254-247-26-237
13162|code|LDR             R3, =(main_panel_ptr - 0x1BDC4)|25-75
13164|code|LDR             R3, [R4,R3]; main_panel|227-88
13166|code|LDR             R0, [R3]; PANEL *|24-104
13168|code|BLX             del_panel|254-247-20-237
13172|code|LDR             R3, =(options_panel_ptr - 0x1BDC4)|23-75
13174|code|LDR             R3, [R4,R3]; options_panel|227-88
13176|code|LDR             R0, [R3]; PANEL *|24-104
13178|code|BLX             del_panel|254-247-16-237
13182|code|LDR             R3, =(stats_panel_ptr - 0x1BDC4)|22-75
13184|code|LDR             R3, [R4,R3]; stats_panel|227-88
13186|code|LDR             R0, [R3]; PANEL *|24-104
13188|code|BLX             del_panel|254-247-10-237
13192|code|LDR             R3, =(footer_window_ptr - 0x1BDC4)|20-75
13194|code|LDR             R3, [R4,R3]; footer_window|227-88
13196|code|LDR             R0, [R3]; WINDOW *|24-104
13198|code|BLX             delwin|254-247-66-237
13202|code|LDR             R3, =(header_window_ptr - 0x1BDC4)|19-75
13204|code|LDR             R3, [R4,R3]; header_window|227-88
13206|code|LDR             R0, [R3]; WINDOW *|24-104
13208|code|BLX             delwin|254-247-60-237
13212|code|LDR             R3, =(main_window_ptr - 0x1BDC4)|17-75
13214|code|LDR             R3, [R4,R3]; main_window|227-88
13216|code|LDR             R0, [R3]; WINDOW *|24-104
13218|code|BLX             delwin|254-247-56-237
13222|code|LDR             R3, =(options_window_ptr - 0x1BDC4)|16-75
13224|code|LDR             R3, [R4,R3]; options_window|227-88
13226|code|LDR             R0, [R3]; WINDOW *|24-104
13228|code|BLX             delwin|254-247-50-237
13232|code|LDR             R3, =(stats_window_ptr - 0x1BDC4)|14-75
13234|code|LDR             R3, [R4,R3]; stats_window|227-88
13236|code|LDR             R0, [R3]; WINDOW *|24-104
13238|code|BLX             delwin|254-247-46-237
13242|code|POP.W           {R4,LR}|189-232-16-64
13246|code|B.W             j_endwin|254-247-185-189
13250|data|ALIGN 4|0-191
13252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x335A|106-138-1-0
13256|data|DCD footer_panel_ptr - 0x1BDC4|180-1-0-0
13260|data|DCD header_panel_ptr - 0x1BDC4|0-2-0-0
13264|data|DCD main_panel_ptr - 0x1BDC4|184-1-0-0
13268|data|DCD options_panel_ptr - 0x1BDC4|28-2-0-0
13272|data|DCD stats_panel_ptr - 0x1BDC4|236-1-0-0
13276|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
13280|data|DCD header_window_ptr - 0x1BDC4|152-1-0-0
13284|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
13288|data|DCD options_window_ptr - 0x1BDC4|32-2-0-0
13292|data|DCD stats_window_ptr - 0x1BDC4|196-1-0-0
13296|code|PUSH            {R4-R6,LR}|112-181
13298|code|SUB             SP, SP, #0x18|134-176
13300|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x3400)|63-77
13302|code|MOVW            R6, #(dword_1D2E4 - 0x1C2CC)|65-242-24-6
13306|code|LDR             R3, =(options_window_ptr - 0x1BDC4)|63-75
13308|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
13310|code|LDR             R4, [R5,R3]; options_window|236-88
13312|code|LDR             R0, [R4]; WINDOW *|32-104
13314|code|BLX             werase|254-247-20-238
13318|code|LDR             R3, =(aEntropyLinuxKe - 0x3412); "Entropy: Linux Kernel (urandom)"|61-75
13320|code|MOVS            R1, #1; int|1-33
13322|code|LDR             R0, [R4]; WINDOW *|32-104
13324|code|MOV             R2, R1; int|10-70
13326|code|ADD             R3, PC; "Entropy: Linux Kernel (urandom)"|123-68
13328|code|BLX             mvwprintw|254-247-170-237
13332|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|58-75
13334|code|MOVS            R1, #2; int|2-33
13336|code|MOVS            R2, #1; int|1-34
13338|code|LDR             R0, [R4]; WINDOW *|32-104
13340|code|LDR             R5, [R5,R3]; nwipe_options|237-88
13342|code|LDR             R3, =(aPrngS - 0x3426); "PRNG:    %s"|57-75
13344|code|LDR             R6, [R5,R6]|174-89
13346|code|ADD             R3, PC; "PRNG:    %s"|123-68
13348|code|LDR             R6, [R6]|54-104
13350|code|STR             R6, [SP,#0x28+var_28]|0-150
13352|code|BLX             mvwprintw|254-247-158-237
13356|code|LDR             R0, [R5,#(dword_1C2E0 - 0x1C2CC)]|104-105
13358|code|LDR             R6, [R4]|38-104
13360|code|BL              sub_6A70|3-240-30-251
13364|code|LDR             R3, =(aMethodS - 0x343E); "Method:  %s"|52-75
13366|code|MOVS            R1, #3; int|3-33
13368|code|MOVS            R2, #1; int|1-34
13370|code|ADD             R3, PC; "Method:  %s"|123-68
13372|code|STR             R0, [SP,#0x28+var_28]|0-144
13374|code|MOV             R0, R6; WINDOW *|48-70
13376|code|BLX             mvwprintw|254-247-146-237
13380|code|LDR             R3, =(aVerify - 0x344E); "Verify:  "|49-75
13382|code|MOVS            R2, #1; int|1-34
13384|code|LDR             R0, [R4]; WINDOW *|32-104
13386|code|ADD             R3, PC; "Verify:  "|123-68
13388|code|MOVS            R1, #4; int|4-33
13390|code|BLX             mvwprintw|254-247-140-237
13394|code|MOVW            R3, #(dword_1D2F0 - 0x1C2CC)|65-242-36-3
13398|code|LDR             R2, [R5,R3]|234-88
13400|code|CMP             R2, #1|1-42
13402|code|BEQ             loc_34E8|69-208
13404|code|BCC             loc_34DC|62-211
13406|code|CMP             R2, #2|2-42
13408|code|BEQ             loc_34BE|45-208
13410|code|LDR             R1, =(aUnknownI - 0x346A); "Unknown %i"|43-73
13412|code|LDR             R0, [R4]; WINDOW *|32-104
13414|code|ADD             R1, PC; "Unknown %i"|121-68
13416|code|BLX             wprintw|254-247-242-236
13420|code|LDR             R3, =(aRounds - 0x3478); "Rounds:  "|41-75
13422|code|MOVS            R1, #5; int|5-33
13424|code|LDR             R0, [R4]; WINDOW *|32-104
13426|code|MOVS            R2, #1; int|1-34
13428|code|ADD             R3, PC; "Rounds:  "|123-68
13430|code|BLX             mvwprintw|254-247-120-237
13434|code|LDR             R3, [R5,#(dword_1C2D0 - 0x1C2CC)]|107-104
13436|code|CBNZ            R3, loc_34CA|43-187
13438|code|LDR             R1, =(aIPlusBlankingP - 0x348C); "%i (plus blanking pass)"|38-73
13440|code|MOVW            R3, #(dword_1D2E8 - 0x1C2CC)|65-242-28-3
13444|code|LDR             R0, [R4]; WINDOW *|32-104
13446|code|LDR             R2, [R5,R3]|234-88
13448|code|ADD             R1, PC; "%i (plus blanking pass)"|121-68
13450|code|BLX             wprintw|254-247-226-236
13454|code|MOVS            R5, #0|0-37
13456|code|LDR             R0, [R4]; WINDOW *|32-104
13458|code|MOV             R1, R5; chtype|41-70
13460|code|MOV             R2, R5; chtype|42-70
13462|code|MOV             R3, R5; chtype|43-70
13464|code|STR             R5, [SP,#0x28+var_28]; chtype|0-149
13466|code|STR             R5, [SP,#0x28+var_24]; chtype|1-149
13468|code|STR             R5, [SP,#0x28+var_20]; chtype|2-149
13470|code|STR             R5, [SP,#0x28+var_1C]; chtype|3-149
13472|code|STR             R5, [SP,#0x28+var_18]; chtype|4-149
13474|code|BLX             wborder|254-247-14-236
13478|code|LDR             R3, =(off_1C008 - 0x34AE); " Statistics "|29-75
13480|code|LDR             R0, [R4]|32-104
13482|code|ADD             R3, PC; off_1C008|123-68
13484|code|LDR             R1, [R3,#(off_1C00C - 0x1C008)]; " Options "|89-104
13486|code|BL              sub_2FC0|255-247-135-253
13490|code|LDR             R0, [R4]; WINDOW *|32-104
13492|code|ADD             SP, SP, #0x18|6-176
13494|code|POP.W           {R4-R6,LR}|189-232-112-64
13498|code|B.W             sub_1CF0|254-247-25-188
13502|code|LDR             R1, =(aAllPasses - 0x34C6); "All Passes"|24-73
13504|code|LDR             R0, [R4]; WINDOW *|32-104
13506|code|ADD             R1, PC; "All Passes"|121-68
13508|code|BLX             wprintw|254-247-196-236
13512|code|B               loc_346C|208-231
13514|code|LDR             R1, =(aINoFinalBlanki - 0x34D8); "%i (no final blanking pass)"|22-73
13516|code|MOVW            R3, #(dword_1D2E8 - 0x1C2CC)|65-242-28-3
13520|code|LDR             R0, [R4]; WINDOW *|32-104
13522|code|LDR             R2, [R5,R3]|234-88
13524|code|ADD             R1, PC; "%i (no final blanking pass)"|121-68
13526|code|BLX             wprintw|254-247-188-236
13530|code|B               loc_348E|216-231
13532|code|LDR             R1, =(aOff - 0x34E4); "Off"|18-73
13534|code|LDR             R0, [R4]; WINDOW *|32-104
13536|code|ADD             R1, PC; "Off"|121-68
13538|code|BLX             wprintw|254-247-182-236
13542|code|B               loc_346C|193-231
13544|code|LDR             R1, =(aLastPass - 0x34F0); "Last Pass"|16-73
13546|code|LDR             R0, [R4]; WINDOW *|32-104
13548|code|ADD             R1, PC; "Last Pass"|121-68
13550|code|BLX             wprintw|254-247-176-236
13554|code|B               loc_346C|187-231
13556|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3400|196-137-1-0
13560|data|DCD options_window_ptr - 0x1BDC4|32-2-0-0
13564|data|DCD aEntropyLinuxKe - 0x3412; "Entropy: Linux Kernel (urandom)"|30-88-0-0
13568|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
13572|data|DCD aPrngS - 0x3426; "PRNG:    %s"|42-88-0-0
13576|data|DCD aMethodS - 0x343E; "Method:  %s"|30-88-0-0
13580|data|DCD aVerify - 0x344E; "Verify:  "|26-88-0-0
13584|data|DCD aUnknownI - 0x346A; "Unknown %i"|38-88-0-0
13588|data|DCD aRounds - 0x3478; "Rounds:  "|36-88-0-0
13592|data|DCD aIPlusBlankingP - 0x348C; "%i (plus blanking pass)"|56-88-0-0
13596|data|DCD off_1C008 - 0x34AE; " Statistics "|90-139-1-0
13600|data|DCD aAllPasses - 0x34C6; "All Passes"|190-87-0-0
13604|data|DCD aINoFinalBlanki - 0x34D8; "%i (no final blanking pass)"|208-87-0-0
13608|data|DCD aOff - 0x34E4; "Off"|144-87-0-0
13612|data|DCD aLastPass - 0x34F0; "Last Pass"|136-87-0-0
13616|code|PUSH.W          {R4-R11,LR}|45-233-240-79
13620|code|SUB             SP, SP, #0x2C|139-176
13622|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x3542)|79-78
13624|code|MOVW            R1, #(dword_1D2E8 - 0x1C2CC)|65-242-28-1
13628|code|LDR             R2, =(footer_window_ptr - 0x1BDC4)|78-74
13630|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
13632|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|78-75
13634|code|LDR.W           R9, =(aRounds_0 - 0x354E); " Rounds "|223-248-60-145
13638|code|LDR             R4, [R6,R2]; footer_window|180-88
13640|code|LDR             R3, [R6,R3]; nwipe_options|243-88
13642|code|ADD             R9, PC; " Rounds "|249-68
13644|code|LDR.W           R8, =(aThisIsTheNumbe - 0x3558); "This is the number of times to run the "...|223-248-52-129
13648|code|LDR             R0, [R4]; WINDOW *|32-104
13650|code|STR             R3, [SP,#0x50+var_2C]|9-147
13652|code|ADD             R8, PC; "This is the number of times to run the "...|248-68
13654|code|LDR             R5, [R3,R1]|93-88
13656|code|BLX             werase|254-247-104-237
13660|code|LDR             R0, [R4]; WINDOW *|32-104
13662|code|BLX             wrefresh|254-247-202-235
13666|code|LDR             R3, =(stdscr_ptr - 0x1BDC4)|73-75
13668|code|LDR             R2, =(main_window_ptr - 0x1BDC4)|73-74
13670|code|LDR             R7, =(aErrorUnknownVe+0x28 - 0x3572); ""|74-79
13672|code|LDR.W           R10, =(aSyslinuxCfgNuk_10 - 0x3576); "syslinux.cfg:  nuke=\"nwipe --rounds %i"...|223-248-40-161
13676|code|LDR             R4, [R6,R2]; main_window|180-88
13678|code|ADD             R7, PC; ""|127-68
13680|code|LDR             R6, [R6,R3]; stdscr|246-88
13682|code|ADD             R10, PC; "syslinux.cfg:  nuke=\"nwipe --rounds %i"...|250-68
13684|code|LDR             R3, =(aTheNumberOfRou - 0x357A); "The number of rounds must be a non-nega"...|72-75
13686|code|ADD             R3, PC; "The number of rounds must be a non-nega"...|123-68
13688|code|STR             R3, [SP,#0x50+var_34]|7-147
13690|code|LDR             R3, =(asc_8D94 - 0x3580); "> "|72-75
13692|code|ADD             R3, PC; "> "|123-68
13694|code|STR             R3, [SP,#0x50+var_30]|8-147
13696|code|B               loc_35B0|22-224
13698|code|SUB.W           R2, R0, #0x30 ; '0'|160-241-48-2
13702|code|CMP             R2, #9|9-42
13704|code|BHI             loc_359E|9-216
13706|code|MOV             R1, #0x5F5E0FF|78-242-255-1-192-242-245-81
13714|code|CMP             R5, R1|141-66
13716|code|ITT LE|220-191
13718|code|ADDLE.W         R5, R5, R5,LSL#2|5-235-133-5
13722|code|ADDLE.W         R5, R2, R5,LSL#1|2-235-69-5
13726|code|MOVS            R0, #0; int|0-32
13728|code|BLX             curs_set|254-247-44-237
13732|code|CMP.W           R11, #0xFFFFFFFF|187-241-255-63
13736|code|IT NE|24-191
13738|code|CMPNE.W         R11, #0xA|187-241-10-15
13742|code|BEQ             loc_3662|88-208
13744|code|LDR             R0, [R4]; WINDOW *|32-104
13746|code|BLX             werase|254-247-60-237
13750|code|MOVS            R1, #0; chtype|0-33
13752|code|LDR             R0, [R4]; WINDOW *|32-104
13754|code|MOV             R2, R1; chtype|10-70
13756|code|MOV             R3, R1; chtype|11-70
13758|code|STR             R1, [SP,#0x50+var_50]; chtype|0-145
13760|code|STR             R1, [SP,#0x50+var_4C]; chtype|1-145
13762|code|STR             R1, [SP,#0x50+var_48]; chtype|2-145
13764|code|STR             R1, [SP,#0x50+var_44]; chtype|3-145
13766|code|STR             R1, [SP,#0x50+var_40]; chtype|4-145
13768|code|BLX             wborder|254-247-122-235
13772|code|LDR             R0, [R4]|32-104
13774|code|MOV             R1, R9|73-70
13776|code|BL              sub_2FC0|255-247-246-252
13780|code|MOVS            R1, #4; int|4-33
13782|code|MOVS            R2, #2; int|2-34
13784|code|MOV             R3, R8; char *|67-70
13786|code|LDR             R0, [R4]; WINDOW *|32-104
13788|code|BLX             mvwprintw|254-247-196-236
13792|code|MOVS            R1, #5; int|5-33
13794|code|LDR             R0, [R4]; WINDOW *|32-104
13796|code|MOVS            R2, #2; int|2-34
13798|code|MOV             R3, R7; char *|59-70
13800|code|BLX             mvwprintw|254-247-190-236
13804|code|CMP             R5, #0|0-45
13806|code|LDR             R0, [R4]; WINDOW *|32-104
13808|code|MOV.W           R1, #6; int|79-240-6-1
13812|code|BLE             loc_364C|42-221
13814|code|MOVS            R2, #2; int|2-34
13816|code|MOV             R3, R10; char *|83-70
13818|code|STR             R5, [SP,#0x50+var_50]|0-149
13820|code|BLX             mvwprintw|254-247-180-236
13824|code|LDR             R3, =(aI - 0x360E); "> %i"|39-75
13826|code|MOVS            R1, #2; int|2-33
13828|code|LDR             R0, [R4]; WINDOW *|32-104
13830|code|MOV             R2, R1; int|10-70
13832|code|STR             R5, [SP,#0x50+var_50]|0-149
13834|code|ADD             R3, PC; "> %i"|123-68
13836|code|BLX             mvwprintw|254-247-172-236
13840|code|MOVS            R0, #1; int|1-32
13842|code|BLX             curs_set|254-247-244-236
13846|code|LDR             R0, [R4]; WINDOW *|32-104
13848|code|BLX             wrefresh|254-247-108-235
13852|code|LDR             R0, [R6]; WINDOW *|48-104
13854|code|BLX             wgetch|254-247-152-236
13858|code|CMP             R0, #0x7F|127-40
13860|code|MOV             R11, R0|131-70
13862|code|BEQ             loc_3638|7-208
13864|code|BLE             loc_3582|171-221
13866|code|CMP.W           R0, #0x104|176-245-130-127
13870|code|BEQ             loc_3638|3-208
13872|code|MOVW            R2, #0x107|64-242-7-18
13876|code|CMP             R0, R2|144-66
13878|code|BNE             loc_359E|178-209
13880|code|MOVW            R0, #0x6667|70-242-103-96
13884|code|ASRS            R2, R5, #0x1F|234-23
13886|code|MOVT.W          R0, #0x6666|198-242-102-96
13890|code|SMULL.W         R0, R1, R5, R0|133-251-0-1
13894|code|RSB.W           R5, R2, R1,ASR#2|194-235-161-5
13898|code|B               loc_359E|168-231
13900|code|LDR             R3, [SP,#0x50+var_34]; char *|7-155
13902|code|MOVS            R2, #2; int|2-34
13904|code|BLX             mvwprintw|254-247-138-236
13908|code|MOVS            R1, #2; int|2-33
13910|code|MOV             R2, R1; int|10-70
13912|code|LDR             R0, [R4]; WINDOW *|32-104
13914|code|LDR             R3, [SP,#0x50+var_30]; char *|8-155
13916|code|BLX             mvwprintw|254-247-132-236
13920|code|B               loc_3610|214-231
13922|code|CMP             R5, #0|0-45
13924|code|ITTT GT|194-191
13926|code|LDRGT           R2, [SP,#0x50+var_2C]|9-154
13928|code|MOVGTW          R3, #0x101C|65-242-28-3
13932|code|STRGT           R5, [R2,R3]|213-80
13934|code|ADD             SP, SP, #0x2C ; ','|11-176
13936|code|POP.W           {R4-R11,PC}|189-232-240-143
13940|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3542|130-136-1-0
13944|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
13948|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
13952|data|DCD aRounds_0 - 0x354E; " Rounds "|142-87-0-0
13956|data|DCD aThisIsTheNumbe - 0x3558; "This is the number of times to run the "...|144-87-0-0
13960|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
13964|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
13968|data|DCD aErrorUnknownVe+0x28 - 0x3572; ""|242-128-0-0
13972|data|DCD aSyslinuxCfgNuk_10 - 0x3576; "syslinux.cfg:  nuke=\"nwipe --rounds %i"...|182-87-0-0
13976|data|DCD aTheNumberOfRou - 0x357A; "The number of rounds must be a non-nega"...|226-87-0-0
13980|data|DCD asc_8D94 - 0x3580; "> "|20-88-0-0
13984|data|DCD aI - 0x360E; "> %i"|70-87-0-0
13988|code|PUSH.W          {R4-R11,LR}|45-233-240-79
13992|code|SUB             SP, SP, #0x3C|143-176
13994|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x36B2)|148-77
13996|code|LDR             R3, =(footer_window_ptr - 0x1BDC4)|148-75
13998|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
14000|code|LDR             R6, =(aErrorUnknownVe+0x28 - 0x36BC); ""|148-78
14002|code|LDR.W           R8, =(aS_0 - 0x36C0); "  %s"|223-248-84-130
14006|code|LDR             R4, [R5,R3]; footer_window|236-88
14008|code|ADD             R6, PC; ""|126-68
14010|code|LDR             R3, =(aSyslinuxCfgNuk_2 - 0x36C2); "syslinux.cfg:  nuke=\"nwipe --prng isaa"...|148-75
14012|code|ADD             R8, PC; "  %s"|248-68
14014|code|ADD             R3, PC; "syslinux.cfg:  nuke=\"nwipe --prng isaa"...|123-68
14016|code|STR             R3, [SP,#0x60+var_3C]|9-147
14018|code|LDR             R3, =(aIsaacByBobJenk - 0x36CA); "ISAAC, by Bob Jenkins, is a PRNG derive"...|147-75
14020|code|LDR             R0, [R4]; WINDOW *|32-104
14022|code|ADD             R3, PC; "ISAAC, by Bob Jenkins, is a PRNG derive"...|123-68
14024|code|STR             R3, [SP,#0x60+var_38]|10-147
14026|code|BLX             werase|254-247-176-236
14030|code|LDR             R3, =(off_1C008 - 0x36D6); " Statistics "|145-75
14032|code|LDR             R2, =(a240AndAnExpect - 0x36DA); "2^40 and an expected period of 2^8295. "...|145-74
14034|code|ADD             R3, PC; off_1C008|123-68
14036|code|LDR             R0, [R4]|32-104
14038|code|ADD             R2, PC; "2^40 and an expected period of 2^8295. "...|122-68
14040|code|STR             R2, [SP,#0x60+var_34]|11-146
14042|code|LDR             R1, [R3,#(off_1C010 - 0x1C008)]; " J=Up K=Down Space=Select"|153-104
14044|code|BL              sub_2FC0|255-247-112-252
14048|code|LDR             R0, [R4]; WINDOW *|32-104
14050|code|BLX             wrefresh|254-247-8-235
14054|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|141-75
14056|code|LDR             R0, =(nwipe_isaac_ptr - 0x1BDC4)|141-72
14058|code|MOVW            R4, #(dword_1D2E4 - 0x1C2CC)|65-242-24-4
14062|code|LDR             R1, =(main_window_ptr - 0x1BDC4)|141-73
14064|code|LDR             R3, [R5,R3]; nwipe_options|235-88
14066|code|LDR             R2, =(nwipe_twister_ptr - 0x1BDC4)|141-74
14068|code|MOV             R7, R3|31-70
14070|code|STR             R3, [SP,#0x60+var_2C]|13-147
14072|code|LDR             R7, [R7,R4]|63-89
14074|code|LDR.W           R9, [R5,R0]; nwipe_isaac|85-248-0-144
14078|code|LDR             R3, =(stdscr_ptr - 0x1BDC4)|139-75
14080|code|RSB.W           R7, R9, R7|201-235-7-7
14084|code|LDR             R4, [R5,R1]; main_window|108-88
14086|code|CLZ.W           R7, R7|183-250-135-247
14090|code|LDR.W           R11, [R5,R2]; nwipe_twister|85-248-2-176
14094|code|LDR             R3, [R5,R3]; stdscr|235-88
14096|code|LSRS            R7, R7, #5|127-9
14098|code|STR             R5, [SP,#0x60+var_40]|8-149
14100|code|ADD.W           R10, R7, #4|7-241-4-10
14104|code|STR             R3, [SP,#0x60+var_48]|6-147
14106|code|LDR             R3, =(aInitialPrngSta - 0x3720); "initial PRNG state by cryptanalysis of "...|133-75
14108|code|ADD             R3, PC; "initial PRNG state by cryptanalysis of "...|123-68
14110|code|STR             R3, [SP,#0x60+var_30]|12-147
14112|code|LDR             R0, [R4]; WINDOW *|32-104
14114|code|BLX             werase|254-247-132-236
14118|code|MOVS            R1, #2; int|2-33
14120|code|MOV             R2, R1; int|10-70
14122|code|MOV             R3, R6; char *|51-70
14124|code|LDR             R0, [R4]; WINDOW *|32-104
14126|code|BLX             mvwprintw|254-247-28-236
14130|code|MOVS            R1, #3; int|3-33
14132|code|MOVS            R2, #2; int|2-34
14134|code|MOV             R3, R6; char *|51-70
14136|code|LDR             R0, [R4]; WINDOW *|32-104
14138|code|BLX             mvwprintw|254-247-22-236
14142|code|LDR.W           R5, [R11]; "Mersenne Twister (mt19937ar-cok)"|219-248-0-80
14146|code|LDR             R0, [R4]; WINDOW *|32-104
14148|code|MOVS            R1, #4; int|4-33
14150|code|MOVS            R2, #2; int|2-34
14152|code|MOV             R3, R8; char *|67-70
14154|code|STR             R5, [SP,#0x60+var_60]|0-149
14156|code|BLX             mvwprintw|254-247-12-236
14160|code|LDR.W           R5, [R9]; "ISAAC (rand.c 20010626)"|217-248-0-80
14164|code|LDR             R0, [R4]; WINDOW *|32-104
14166|code|MOVS            R1, #5; int|5-33
14168|code|MOVS            R2, #2; int|2-34
14170|code|MOV             R3, R8; char *|67-70
14172|code|STR             R5, [SP,#0x60+var_60]|0-149
14174|code|BLX             mvwprintw|254-247-4-236
14178|code|MOVS            R1, #6; int|6-33
14180|code|MOVS            R2, #2; int|2-34
14182|code|MOV             R3, R6; char *|51-70
14184|code|LDR             R0, [R4]; WINDOW *|32-104
14186|code|BLX             mvwprintw|254-247-254-235
14190|code|LDR             R0, [R4]; WINDOW *|32-104
14192|code|MOV             R1, R10; int|81-70
14194|code|MOVS            R2, #2; int|2-34
14196|code|BLX             wmove|254-247-40-236
14200|code|ADDS            R0, #1|1-48
14202|code|BEQ             loc_378C|7-208
14204|code|LDR             R3, =(byte_1A0+4)|109-75
14206|code|LDR             R2, [SP,#0x60+var_40]|8-154
14208|code|LDR             R0, [R4]; WINDOW *|32-104
14210|code|LDR             R3, [R2,R3]|211-88
14212|code|LDR.W           R1, [R3,#0xAC]; chtype|211-248-172-16
14216|code|BLX             waddch|254-247-76-234
14220|code|LDR             R0, [R4]; WINDOW *|32-104
14222|code|MOVS            R1, #2; int|2-33
14224|code|MOVS            R2, #0x1E; int|30-34
14226|code|CMP             R7, #0|0-47
14228|code|BEQ             loc_3856|95-208
14230|code|LDR             R3, [SP,#0x60+var_3C]; char *|9-155
14232|code|BLX             mvwprintw|254-247-230-235
14236|code|MOVS            R1, #7; int|7-33
14238|code|MOVS            R2, #2; int|2-34
14240|code|LDR             R3, [SP,#0x60+var_38]; char *|10-155
14242|code|LDR             R0, [R4]; WINDOW *|32-104
14244|code|BLX             mvwprintw|254-247-224-235
14248|code|MOVS            R1, #8; int|8-33
14250|code|MOVS            R2, #2; int|2-34
14252|code|LDR             R3, [SP,#0x60+var_34]; char *|11-155
14254|code|LDR             R0, [R4]; WINDOW *|32-104
14256|code|BLX             mvwprintw|254-247-218-235
14260|code|MOVS            R1, #9; int|9-33
14262|code|MOVS            R2, #2; int|2-34
14264|code|LDR             R3, [SP,#0x60+var_30]; char *|12-155
14266|code|LDR             R0, [R4]; WINDOW *|32-104
14268|code|BLX             mvwprintw|254-247-212-235
14272|code|LDR             R3, =(unk_8EBC - 0x37CC)|93-75
14274|code|LDR             R0, [R4]; WINDOW *|32-104
14276|code|MOVS            R1, #0xA; int|10-33
14278|code|MOVS            R2, #2; int|2-34
14280|code|ADD             R3, PC; unk_8EBC ; char *|123-68
14282|code|BLX             mvwprintw|254-247-206-235
14286|code|MOV.W           LR, #0|79-240-0-14
14290|code|LDR             R0, [R4]; WINDOW *|32-104
14292|code|MOV             R1, LR; chtype|113-70
14294|code|MOV             R3, LR; chtype|115-70
14296|code|STR.W           LR, [SP,#0x60+var_60]; chtype|205-248-0-224
14300|code|MOV             R2, LR; chtype|114-70
14302|code|STR.W           LR, [SP,#0x60+var_5C]; chtype|205-248-4-224
14306|code|STR.W           LR, [SP,#0x60+var_58]; chtype|205-248-8-224
14310|code|STR.W           LR, [SP,#0x60+var_54]; chtype|205-248-12-224
14314|code|STR.W           LR, [SP,#0x60+var_50]; chtype|205-248-16-224
14318|code|BLX             wborder|254-247-104-234
14322|code|LDR             R1, =(aPseudoRandomNu - 0x37FA); " Pseudo Random Number Generator "|82-73
14324|code|LDR             R0, [R4]|32-104
14326|code|ADD             R1, PC; " Pseudo Random Number Generator "|121-68
14328|code|BL              sub_2FC0|255-247-226-251
14332|code|LDR             R0, [R4]; WINDOW *|32-104
14334|code|BLX             wrefresh|254-247-122-234
14338|code|LDR             R3, [SP,#0x60+var_48]|6-155
14340|code|LDR             R0, [R3]; WINDOW *|24-104
14342|code|BLX             wgetch|254-247-164-235
14346|code|CMP             R0, #0x6B ; 'k'|107-40
14348|code|BEQ             loc_38EA|109-208
14350|code|BLE             loc_3834|17-221
14352|code|MOVW            R3, #0x103|64-242-3-19
14356|code|CMP             R0, R3|152-66
14358|code|BEQ             loc_38EA|104-208
14360|code|CMP.W           R0, #0x104|176-245-130-127
14364|code|BGE             loc_38C2|81-218
14366|code|MOVW            R3, #0x101|64-242-1-19
14370|code|CMP             R0, R3|152-66
14372|code|BEQ             loc_3850|20-208
14374|code|CMP.W           R0, #0x102|176-245-129-127
14378|code|BNE             loc_38D2|82-209
14380|code|MOVS            R7, #1|1-39
14382|code|MOV.W           R10, #5|79-240-5-10
14386|code|B               loc_3720|117-231
14388|code|CMP             R0, #0x4A ; 'J'|74-40
14390|code|BEQ             loc_382C|249-208
14392|code|BGT             loc_38DA|79-220
14394|code|CMP             R0, #0xA|10-40
14396|code|BEQ             loc_3842|1-208
14398|code|CMP             R0, #0x20 ; ' '|32-40
14400|code|BNE             loc_38D2|71-209
14402|code|MOVW            R3, #0x1018|65-242-24-3
14406|code|LDR             R2, [SP,#0x60+var_2C]|13-154
14408|code|CMP             R7, #0|0-47
14410|code|BNE             loc_38F2|82-209
14412|code|STR.W           R11, [R2,R3]|66-248-3-176
14416|code|ADD             SP, SP, #0x3C ; '<'|15-176
14418|code|POP.W           {R4-R11,PC}|189-232-240-143
14422|code|LDR             R3, =(aSyslinuxCfgNuk_3 - 0x385C); "syslinux.cfg:  nuke=\"nwipe --prng twis"...|58-75
14424|code|ADD             R3, PC; "syslinux.cfg:  nuke=\"nwipe --prng twis"...|123-68
14426|code|BLX             mvwprintw|254-247-134-235
14430|code|LDR             R3, =(aTheMersenneTwi - 0x386E); "The Mersenne Twister, by Makoto Matsumo"...|57-75
14432|code|LDR.W           R12, =(unk_8EBC - 0x3870)|223-248-228-192
14436|code|MOVS            R1, #7; int|7-33
14438|code|LDR             R0, [R4]; WINDOW *|32-104
14440|code|MOVS            R2, #2; int|2-34
14442|code|ADD             R3, PC; "The Mersenne Twister, by Makoto Matsumo"...|123-68
14444|code|ADD             R12, PC; unk_8EBC|252-68
14446|code|STR.W           R12, [SP,#0x60+var_44]|205-248-28-192
14450|code|BLX             mvwprintw|254-247-122-235
14454|code|LDR             R3, =(aGeneralizedFee - 0x3882); "generalized feedback shift register PRN"...|53-75
14456|code|MOVS            R1, #8; int|8-33
14458|code|LDR             R0, [R4]; WINDOW *|32-104
14460|code|MOVS            R2, #2; int|2-34
14462|code|ADD             R3, PC; "generalized feedback shift register PRN"...|123-68
14464|code|BLX             mvwprintw|254-247-114-235
14468|code|LDR             R3, =(aEquidistribute - 0x3890); "equidistributed in 623-dimensions with "...|50-75
14470|code|LDR             R0, [R4]; WINDOW *|32-104
14472|code|MOVS            R1, #9; int|9-33
14474|code|MOVS            R2, #2; int|2-34
14476|code|ADD             R3, PC; "equidistributed in 623-dimensions with "...|123-68
14478|code|BLX             mvwprintw|254-247-108-235
14482|code|LDR.W           R12, [SP,#0x60+var_44]|221-248-28-192
14486|code|LDR             R0, [R4]; WINDOW *|32-104
14488|code|MOVS            R1, #0xA; int|10-33
14490|code|MOVS            R2, #2; int|2-34
14492|code|MOV             R3, R12; char *|99-70
14494|code|BLX             mvwprintw|254-247-100-235
14498|code|LDR             R3, =(aThisImplementa - 0x38AE); "This implementation passes the Marsagli"...|44-75
14500|code|LDR             R0, [R4]; WINDOW *|32-104
14502|code|MOVS            R1, #0xB; int|11-33
14504|code|MOVS            R2, #2; int|2-34
14506|code|ADD             R3, PC; "This implementation passes the Marsagli"...|123-68
14508|code|BLX             mvwprintw|254-247-92-235
14512|code|LDR.W           R12, [SP,#0x60+var_44]|221-248-28-192
14516|code|LDR             R0, [R4]; WINDOW *|32-104
14518|code|MOVS            R1, #0xC; int|12-33
14520|code|MOVS            R2, #2; int|2-34
14522|code|MOV             R3, R12; char *|99-70
14524|code|BLX             mvwprintw|254-247-84-235
14528|code|B               loc_37CE|133-231
14530|code|MOVW            R3, #0x107|64-242-7-19
14534|code|CMP             R0, R3|152-66
14536|code|BEQ             loc_3850|194-208
14538|code|MOVW            R3, #0x157|64-242-87-19
14542|code|CMP             R0, R3|152-66
14544|code|BEQ             loc_3842|183-208
14546|code|ADDS            R0, #1|1-48
14548|code|BNE.W           loc_3720|127-244-36-175
14552|code|B               loc_3850|186-231
14554|code|CMP             R0, #0x4B ; 'K'|75-40
14556|code|BEQ             loc_38EA|5-208
14558|code|CMP             R0, #0x6A ; 'j'|106-40
14560|code|BNE             loc_38D2|247-209
14562|code|MOVS            R7, #1|1-39
14564|code|MOV.W           R10, #5|79-240-5-10
14568|code|B               loc_3720|26-231
14570|code|MOVS            R7, #0|0-39
14572|code|MOV.W           R10, #4|79-240-4-10
14576|code|B               loc_3720|22-231
14578|code|STR.W           R9, [R2,R3]|66-248-3-144
14582|code|ADD             SP, SP, #0x3C ; '<'|15-176
14584|code|POP.W           {R4-R11,PC}|189-232-240-143
14588|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x36B2|18-135-1-0
14592|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
14596|data|DCD aErrorUnknownVe+0x28 - 0x36BC; ""|168-127-0-0
14600|data|DCD aS_0 - 0x36C0; "  %s"|216-86-0-0
14604|data|DCD aSyslinuxCfgNuk_2 - 0x36C2; "syslinux.cfg:  nuke=\"nwipe --prng isaa"...|154-88-0-0
14608|data|DCD aIsaacByBobJenk - 0x36CA; "ISAAC, by Bob Jenkins, is a PRNG derive"...|190-88-0-0
14612|data|DCD off_1C008 - 0x36D6; " Statistics "|50-137-1-0
14616|data|DCD a240AndAnExpect - 0x36DA; "2^40 and an expected period of 2^8295. "...|254-88-0-0
14620|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
14624|data|DCD nwipe_isaac_ptr - 0x1BDC4|56-2-0-0
14628|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
14632|data|DCD nwipe_twister_ptr - 0x1BDC4|216-1-0-0
14636|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
14640|data|DCD aInitialPrngSta - 0x3720; "initial PRNG state by cryptanalysis of "...|8-89-0-0
14644|data|DCD byte_1A0+4|164-1-0-0
14648|data|DCD unk_8EBC - 0x37CC|240-86-0-0
14652|data|DCD aPseudoRandomNu - 0x37FA; " Pseudo Random Number Generator "|126-88-0-0
14656|data|DCD aSyslinuxCfgNuk_3 - 0x385C; "syslinux.cfg:  nuke=\"nwipe --prng twis"...|68-85-0-0
14660|data|DCD aTheMersenneTwi - 0x386E; "The Mersenne Twister, by Makoto Matsumo"...|94-85-0-0
14664|data|DCD unk_8EBC - 0x3870|76-86-0-0
14668|data|DCD aGeneralizedFee - 0x3882; "generalized feedback shift register PRN"...|154-85-0-0
14672|data|DCD aEquidistribute - 0x3890; "equidistributed in 623-dimensions with "...|220-85-0-0
14676|data|DCD aThisImplementa - 0x38AE; "This implementation passes the Marsagli"...|94-86-0-0
14680|code|PUSH.W          {R4-R11,LR}|45-233-240-79
14684|code|SUB             SP, SP, #0x2C|139-176
14686|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x396A)|141-78
14688|code|MOVW            R1, #(dword_1D2F0 - 0x1C2CC)|65-242-36-1
14692|code|LDR             R2, =(footer_window_ptr - 0x1BDC4)|140-74
14694|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
14696|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|140-75
14698|code|LDR.W           R11, =(aVerificationOf - 0x3976); "  Verification Off  "|223-248-52-178
14702|code|LDR             R4, [R6,R2]; footer_window|180-88
14704|code|LDR             R3, [R6,R3]; nwipe_options|243-88
14706|code|ADD             R11, PC; "  Verification Off  "|251-68
14708|code|LDR.W           R10, =(aVerifyLastPass - 0x3980); "  Verify Last Pass  "|223-248-44-162
14712|code|LDR             R0, [R4]; WINDOW *|32-104
14714|code|LDR             R5, [R3,R1]|93-88
14716|code|ADD             R10, PC; "  Verify Last Pass  "|250-68
14718|code|STR             R3, [SP,#0x50+var_34]|7-147
14720|code|BLX             werase|254-247-84-235
14724|code|LDR             R3, =(off_1C008 - 0x398E); " Statistics "|136-75
14726|code|ADDS            R7, R5, #2|175-28
14728|code|LDR             R0, [R4]|32-104
14730|code|ADD             R3, PC; off_1C008|123-68
14732|code|LDR.W           R9, =(aVerifyAllPasse - 0x399A); "  Verify All Passes "|223-248-28-146
14736|code|LDR.W           R8, =(asc_8EF4 - 0x39AA); "                    "|223-248-28-130
14740|code|LDR             R1, [R3,#(off_1C010 - 0x1C008)]; " J=Up K=Down Space=Select"|153-104
14742|code|ADD             R9, PC; "  Verify All Passes "|249-68
14744|code|BL              sub_2FC0|255-247-18-251
14748|code|LDR             R0, [R4]; WINDOW *|32-104
14750|code|BLX             wrefresh|254-247-170-233
14754|code|LDR             R3, =(stdscr_ptr - 0x1BDC4)|132-75
14756|code|LDR             R2, =(main_window_ptr - 0x1BDC4)|132-74
14758|code|ADD             R8, PC; "                    "|248-68
14760|code|LDR             R3, [R6,R3]; stdscr|243-88
14762|code|LDR             R4, [R6,R2]; main_window|180-88
14764|code|STR             R3, [SP,#0x50+var_38]|6-147
14766|code|LDR             R3, =(aSyslinuxCfgNuk - 0x39B4); "syslinux.cfg:  nuke=\"nwipe --verify la"...|131-75
14768|code|ADD             R3, PC; "syslinux.cfg:  nuke=\"nwipe --verify la"...|123-68
14770|code|STR             R3, [SP,#0x50+var_30]|8-147
14772|code|LDR             R3, =(aCheckWhetherTh - 0x39BA); "Check whether the device is actually em"...|130-75
14774|code|ADD             R3, PC; "Check whether the device is actually em"...|123-68
14776|code|STR             R3, [SP,#0x50+var_2C]|9-147
14778|code|LDR             R0, [R4]; WINDOW *|32-104
14780|code|BLX             werase|254-247-54-235
14784|code|MOVS            R1, #2; int|2-33
14786|code|MOV             R2, R1; int|10-70
14788|code|MOV             R3, R11; char *|91-70
14790|code|LDR             R0, [R4]; WINDOW *|32-104
14792|code|BLX             mvwprintw|254-247-206-234
14796|code|MOVS            R1, #3; int|3-33
14798|code|MOVS            R2, #2; int|2-34
14800|code|MOV             R3, R10; char *|83-70
14802|code|LDR             R0, [R4]; WINDOW *|32-104
14804|code|BLX             mvwprintw|254-247-200-234
14808|code|MOVS            R1, #4; int|4-33
14810|code|MOVS            R2, #2; int|2-34
14812|code|MOV             R3, R9; char *|75-70
14814|code|LDR             R0, [R4]; WINDOW *|32-104
14816|code|BLX             mvwprintw|254-247-194-234
14820|code|MOVS            R1, #5; int|5-33
14822|code|MOVS            R2, #2; int|2-34
14824|code|MOV             R3, R8; char *|67-70
14826|code|LDR             R0, [R4]; WINDOW *|32-104
14828|code|BLX             mvwprintw|254-247-188-234
14832|code|LDR             R0, [R4]; WINDOW *|32-104
14834|code|MOV             R1, R7; int|57-70
14836|code|MOVS            R2, #2; int|2-34
14838|code|BLX             wmove|254-247-232-234
14842|code|ADDS            R0, #1|1-48
14844|code|BEQ             loc_3A0C|6-208
14846|code|LDR             R3, =(acs_map_ptr - 0x1BDC4)|113-75
14848|code|LDR             R0, [R4]; WINDOW *|32-104
14850|code|LDR             R3, [R6,R3]; acs_map|243-88
14852|code|LDR.W           R1, [R3,#0xAC]; chtype|211-248-172-16
14856|code|BLX             waddch|254-247-12-233
14860|code|CMP             R5, #1|1-45
14862|code|BEQ.W           loc_3B36|0-240-146-128
14866|code|CMP             R5, #2|2-45
14868|code|BEQ             loc_3AE0|100-208
14870|code|CBNZ            R5, loc_3A42|165-185
14872|code|LDR             R3, =(aSyslinuxCfgNuk_0 - 0x3A24); "syslinux.cfg:  nuke=\"nwipe --verify of"...|107-75
14874|code|MOVS            R1, #2; int|2-33
14876|code|MOVS            R2, #0x1E; int|30-34
14878|code|LDR             R0, [R4]; WINDOW *|32-104
14880|code|ADD             R3, PC; "syslinux.cfg:  nuke=\"nwipe --verify of"...|123-68
14882|code|BLX             mvwprintw|254-247-162-234
14886|code|LDR             R3, =(aDoNotVerifyPas - 0x3A30); "Do not verify passes. The wipe will be "...|105-75
14888|code|MOVS            R1, #6; int|6-33
14890|code|MOVS            R2, #2; int|2-34
14892|code|ADD             R3, PC; "Do not verify passes. The wipe will be "...|123-68
14894|code|LDR             R0, [R4]; WINDOW *|32-104
14896|code|BLX             mvwprintw|254-247-154-234
14900|code|LDR             R3, =(unk_8EBC - 0x3A40)|102-75
14902|code|LDR             R0, [R4]; WINDOW *|32-104
14904|code|MOVS            R1, #7; int|7-33
14906|code|MOVS            R2, #2; int|2-34
14908|code|ADD             R3, PC; unk_8EBC ; char *|123-68
14910|code|BLX             mvwprintw|254-247-148-234
14914|code|MOV.W           LR, #0|79-240-0-14
14918|code|LDR             R0, [R4]; WINDOW *|32-104
14920|code|MOV             R1, LR; chtype|113-70
14922|code|MOV             R3, LR; chtype|115-70
14924|code|STR.W           LR, [SP,#0x50+var_50]; chtype|205-248-0-224
14928|code|MOV             R2, LR; chtype|114-70
14930|code|STR.W           LR, [SP,#0x50+var_4C]; chtype|205-248-4-224
14934|code|STR.W           LR, [SP,#0x50+var_48]; chtype|205-248-8-224
14938|code|STR.W           LR, [SP,#0x50+var_44]; chtype|205-248-12-224
14942|code|STR.W           LR, [SP,#0x50+var_40]; chtype|205-248-16-224
14946|code|BLX             wborder|254-247-46-233
14950|code|LDR             R1, =(aVerificationMo - 0x3A6E); " Verification Mode "|91-73
14952|code|LDR             R0, [R4]|32-104
14954|code|ADD             R1, PC; " Verification Mode "|121-68
14956|code|BL              sub_2FC0|255-247-168-250
14960|code|LDR             R0, [R4]; WINDOW *|32-104
14962|code|BLX             wrefresh|254-247-64-233
14966|code|LDR             R3, [SP,#0x50+var_38]|6-155
14968|code|LDR             R0, [R3]; WINDOW *|24-104
14970|code|BLX             wgetch|254-247-106-234
14974|code|CMP             R0, #0x6B ; 'k'|107-40
14976|code|BEQ.W           loc_3B88|0-240-130-128
14980|code|BLE             loc_3AAC|18-221
14982|code|MOVW            R3, #0x103|64-242-3-19
14986|code|CMP             R0, R3|152-66
14988|code|BEQ             loc_3B88|124-208
14990|code|CMP.W           R0, #0x104|176-245-130-127
14994|code|BGE             loc_3B5E|100-218
14996|code|MOVW            R3, #0x101|64-242-1-19
15000|code|CMP             R0, R3|152-66
15002|code|BEQ             loc_3ADA|30-208
15004|code|CMP.W           R0, #0x102|176-245-129-127
15008|code|BNE             loc_3B6E|101-209
15010|code|CMP             R5, #1|1-45
15012|code|ITT LE|220-191
15014|code|ADDLE           R5, #1|1-53
15016|code|ADDLE           R7, R5, #2|175-28
15018|code|B               loc_39BA|134-231
15020|code|CMP             R0, #0x4A ; 'J'|74-40
15022|code|BEQ             loc_3AA2|248-208
15024|code|BGT             loc_3B76|97-220
15026|code|CMP             R0, #0xA|10-40
15028|code|BEQ             loc_3ABA|1-208
15030|code|CMP             R0, #0x20 ; ' '|32-40
15032|code|BNE             loc_3B6E|89-209
15034|code|CMP             R5, #2|2-45
15036|code|ITTEE HI|135-191
15038|code|LDRHI           R2, [SP,#0x50+var_34]|7-154
15040|code|MOVHIW          R3, #0x1024|65-242-36-3
15044|code|LDRLS           R1, [SP,#0x50+var_34]|7-153
15046|code|MOVLSW          R2, #0x1024|65-242-36-2
15050|code|ITET LS|150-191
15052|code|MOVLS           R3, R5|43-70
15054|code|LDRHI           R3, [R2,R3]|211-88
15056|code|STRLS           R5, [R1,R2]|141-80
15058|code|CBZ             R3, loc_3ADA|19-177
15060|code|LDR             R2, [SP,#0x50+var_34]|7-154
15062|code|MOVS            R3, #0|0-35
15064|code|STR             R3, [R2,#4]|83-96
15066|code|ADD             SP, SP, #0x2C ; ','|11-176
15068|code|POP.W           {R4-R11,PC}|189-232-240-143
15072|code|LDR             R3, =(aSyslinuxCfgNuk_1 - 0x3AEC); "syslinux.cfg:  nuke=\"nwipe --verify al"...|61-75
15074|code|MOV             R1, R5; int|41-70
15076|code|LDR             R0, [R4]; WINDOW *|32-104
15078|code|MOVS            R2, #0x1E; int|30-34
15080|code|ADD             R3, PC; "syslinux.cfg:  nuke=\"nwipe --verify al"...|123-68
15082|code|BLX             mvwprintw|254-247-62-234
15086|code|LDR             R3, =(aAfterEveryPass - 0x3AFA); "After every pass, read back the pattern"...|59-75
15088|code|MOV             R2, R5; int|42-70
15090|code|LDR             R0, [R4]; WINDOW *|32-104
15092|code|MOVS            R1, #6; int|6-33
15094|code|ADD             R3, PC; "After every pass, read back the pattern"...|123-68
15096|code|BLX             mvwprintw|254-247-54-234
15100|code|LDR             R3, =(unk_8EBC - 0x3B08)|56-75
15102|code|MOV             R2, R5; int|42-70
15104|code|LDR             R0, [R4]; WINDOW *|32-104
15106|code|MOVS            R1, #7; int|7-33
15108|code|ADD             R3, PC; unk_8EBC ; char *|123-68
15110|code|BLX             mvwprintw|254-247-48-234
15114|code|LDR             R3, =(aThisProgramWri - 0x3B16); "This program writes the entire length o"...|54-75
15116|code|MOV             R2, R5; int|42-70
15118|code|LDR             R0, [R4]; WINDOW *|32-104
15120|code|MOVS            R1, #8; int|8-33
15122|code|ADD             R3, PC; "This program writes the entire length o"...|123-68
15124|code|BLX             mvwprintw|254-247-40-234
15128|code|LDR             R3, =(aForVerificatio - 0x3B24); "for verification, even for random patte"...|51-75
15130|code|MOV             R2, R5; int|42-70
15132|code|LDR             R0, [R4]; WINDOW *|32-104
15134|code|MOVS            R1, #9; int|9-33
15136|code|ADD             R3, PC; "for verification, even for random patte"...|123-68
15138|code|BLX             mvwprintw|254-247-34-234
15142|code|LDR             R3, =(aHardwareCaches - 0x3B32); "hardware caches are actually flushed.  "...|49-75
15144|code|LDR             R0, [R4]; WINDOW *|32-104
15146|code|MOVS            R1, #0xA; int|10-33
15148|code|MOV             R2, R5; int|42-70
15150|code|ADD             R3, PC; "hardware caches are actually flushed.  "...|123-68
15152|code|BLX             mvwprintw|254-247-26-234
15156|code|B               loc_3A42|133-231
15158|code|LDR             R3, [SP,#0x50+var_30]; char *|8-155
15160|code|MOVS            R1, #2; int|2-33
15162|code|LDR             R0, [R4]; WINDOW *|32-104
15164|code|MOVS            R2, #0x1E; int|30-34
15166|code|BLX             mvwprintw|254-247-20-234
15170|code|LDR             R3, [SP,#0x50+var_2C]; char *|9-155
15172|code|LDR             R0, [R4]; WINDOW *|32-104
15174|code|MOVS            R1, #6; int|6-33
15176|code|MOVS            R2, #2; int|2-34
15178|code|BLX             mvwprintw|254-247-14-234
15182|code|LDR             R3, =(aDeviceWithZero - 0x3B5A); "device with zeros.                     "...|40-75
15184|code|LDR             R0, [R4]; WINDOW *|32-104
15186|code|MOVS            R1, #7; int|7-33
15188|code|MOVS            R2, #2; int|2-34
15190|code|ADD             R3, PC; "device with zeros.                     "...|123-68
15192|code|BLX             mvwprintw|254-247-6-234
15196|code|B               loc_3A42|113-231
15198|code|MOVW            R3, #0x107|64-242-7-19
15202|code|CMP             R0, R3|152-66
15204|code|BEQ             loc_3ADA|185-208
15206|code|MOVW            R3, #0x157|64-242-87-19
15210|code|CMP             R0, R3|152-66
15212|code|BEQ             loc_3ABA|165-208
15214|code|ADDS            R0, #1|1-48
15216|code|BNE.W           loc_39BA|127-244-35-175
15220|code|B               loc_3ADA|177-231
15222|code|CMP             R0, #0x4B ; 'K'|75-40
15224|code|BEQ             loc_3B88|6-208
15226|code|CMP             R0, #0x6A ; 'j'|106-40
15228|code|BNE             loc_3B6E|247-209
15230|code|CMP             R5, #1|1-45
15232|code|ITT LE|220-191
15234|code|ADDLE           R5, #1|1-53
15236|code|ADDLE           R7, R5, #2|175-28
15238|code|B               loc_39BA|24-231
15240|code|CMP             R5, #0|0-45
15242|code|BLE.W           loc_39BA|127-247-22-175
15246|code|SUBS            R5, #1|1-61
15248|code|ADDS            R7, R5, #2|175-28
15250|code|B               loc_39BA|18-231
15252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x396A|90-132-1-0
15256|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
15260|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
15264|data|DCD aVerificationOf - 0x3976; "  Verification Off  "|38-87-0-0
15268|data|DCD aVerifyLastPass - 0x3980; "  Verify Last Pass  "|52-87-0-0
15272|data|DCD off_1C008 - 0x398E; " Statistics "|122-134-1-0
15276|data|DCD aVerifyAllPasse - 0x399A; "  Verify All Passes "|50-87-0-0
15280|data|DCD asc_8EF4 - 0x39AA; "                    "|74-85-0-0
15284|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
15288|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
15292|data|DCD aSyslinuxCfgNuk - 0x39B4; "syslinux.cfg:  nuke=\"nwipe --verify la"...|172-87-0-0
15296|data|DCD aCheckWhetherTh - 0x39BA; "Check whether the device is actually em"...|210-87-0-0
15300|data|DCD acs_map_ptr - 0x1BDC4|164-1-0-0
15304|data|DCD aSyslinuxCfgNuk_0 - 0x3A24; "syslinux.cfg:  nuke=\"nwipe --verify of"...|192-86-0-0
15308|data|DCD aDoNotVerifyPas - 0x3A30; "Do not verify passes. The wipe will be "...|224-86-0-0
15312|data|DCD unk_8EBC - 0x3A40|124-84-0-0
15316|data|DCD aVerificationMo - 0x3A6E; " Verification Mode "|42-89-0-0
15320|data|DCD aSyslinuxCfgNuk_1 - 0x3AEC; "syslinux.cfg:  nuke=\"nwipe --verify al"...|64-87-0-0
15324|data|DCD aAfterEveryPass - 0x3AFA; "After every pass, read back the pattern"...|94-87-0-0
15328|data|DCD unk_8EBC - 0x3B08|180-83-0-0
15332|data|DCD aThisProgramWri - 0x3B16; "This program writes the entire length o"...|146-87-0-0
15336|data|DCD aForVerificatio - 0x3B24; "for verification, even for random patte"...|212-87-0-0
15340|data|DCD aHardwareCaches - 0x3B32; "hardware caches are actually flushed.  "...|22-88-0-0
15344|data|DCD aDeviceWithZero - 0x3B5A; "device with zeros.                     "...|130-86-0-0
15348|code|PUSH.W          {R4-R11,LR}|45-233-240-79
15352|code|SUB             SP, SP, #0x2C|139-176
15354|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x3C02)|113-78
15356|code|LDR             R2, =(footer_window_ptr - 0x1BDC4)|113-74
15358|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
15360|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|113-75
15362|code|LDR.W           R10, =(aPerformAFinalB - 0x3C0E); "  Perform a final blanking pass       "|223-248-200-161
15366|code|LDR             R4, [R6,R2]; footer_window|180-88
15368|code|LDR             R3, [R6,R3]; nwipe_options|243-88
15370|code|ADD             R10, PC; "  Perform a final blanking pass       "|250-68
15372|code|LDR.W           R9, =(aDoNotPerformFi - 0x3C18); "  Do not perform final blanking pass  "|223-248-192-145
15376|code|LDR             R0, [R4]; WINDOW *|32-104
15378|code|LDR             R5, [R3,#(dword_1C2D0 - 0x1C2CC)]|93-104
15380|code|ADD             R9, PC; "  Do not perform final blanking pass  "|249-68
15382|code|STR             R3, [SP,#0x50+var_2C]|9-147
15384|code|BLX             werase|254-247-8-234
15388|code|LDR             R3, =(off_1C008 - 0x3C26); " Statistics "|109-75
15390|code|ADDS            R7, R5, #2|175-28
15392|code|LDR             R0, [R4]|32-104
15394|code|ADD             R3, PC; off_1C008|123-68
15396|code|LDR.W           R8, =(aUtilityPreserv+0x20 - 0x3C2E); "                                      "|223-248-176-129
15400|code|LDR             R1, [R3,#(off_1C010 - 0x1C008)]; " J=Up K=Down Space=Select"|153-104
15402|code|ADD             R8, PC; "                                      "|248-68
15404|code|BL              sub_2FC0|255-247-200-249
15408|code|LDR             R0, [R4]; WINDOW *|32-104
15410|code|BLX             wrefresh|254-247-96-232
15414|code|LDR             R3, =(stdscr_ptr - 0x1BDC4)|105-75
15416|code|LDR             R1, =(aSyslinuxCfgNuk_11 - 0x3C40); "syslinux.cfg:  nuke=\"nwipe\""|105-73
15418|code|LDR             R2, =(main_window_ptr - 0x1BDC4)|106-74
15420|code|ADD             R1, PC; "syslinux.cfg:  nuke=\"nwipe\""|121-68
15422|code|STR             R1, [SP,#0x50+var_38]|6-145
15424|code|LDR.W           R11, [R6,R3]; stdscr|86-248-3-176
15428|code|LDR             R3, =(aPerformAFinalB_0 - 0x3C4C); "Perform a final blanking pass after the"...|104-75
15430|code|LDR             R4, [R6,R2]; main_window|180-88
15432|code|ADD             R3, PC; "Perform a final blanking pass after the"...|123-68
15434|code|STR             R3, [SP,#0x50+var_34]|7-147
15436|code|LDR             R3, =(unk_8EBC - 0x3C52)|103-75
15438|code|ADD             R3, PC; unk_8EBC|123-68
15440|code|STR             R3, [SP,#0x50+var_30]|8-147
15442|code|LDR             R0, [R4]; WINDOW *|32-104
15444|code|BLX             werase|254-247-234-233
15448|code|MOVS            R1, #2; int|2-33
15450|code|MOV             R2, R1; int|10-70
15452|code|MOV             R3, R10; char *|83-70
15454|code|LDR             R0, [R4]; WINDOW *|32-104
15456|code|BLX             mvwprintw|254-247-130-233
15460|code|MOVS            R1, #3; int|3-33
15462|code|MOVS            R2, #2; int|2-34
15464|code|MOV             R3, R9; char *|75-70
15466|code|LDR             R0, [R4]; WINDOW *|32-104
15468|code|BLX             mvwprintw|254-247-124-233
15472|code|MOVS            R1, #4; int|4-33
15474|code|MOVS            R2, #2; int|2-34
15476|code|MOV             R3, R8; char *|67-70
15478|code|LDR             R0, [R4]; WINDOW *|32-104
15480|code|BLX             mvwprintw|254-247-118-233
15484|code|LDR             R0, [R4]; WINDOW *|32-104
15486|code|MOV             R1, R7; int|57-70
15488|code|MOVS            R2, #2; int|2-34
15490|code|BLX             wmove|254-247-162-233
15494|code|ADDS            R0, #1|1-48
15496|code|BEQ             loc_3C98|6-208
15498|code|LDR             R3, =(acs_map_ptr - 0x1BDC4)|89-75
15500|code|LDR             R0, [R4]; WINDOW *|32-104
15502|code|LDR             R3, [R6,R3]; acs_map|243-88
15504|code|LDR.W           R1, [R3,#0xAC]; chtype|211-248-172-16
15508|code|BLX             waddch|253-247-198-239
15512|code|CMP             R5, #0|0-45
15514|code|BEQ             loc_3D62|98-208
15516|code|CMP             R5, #1|1-45
15518|code|BNE             loc_3CCA|20-209
15520|code|LDR             R3, =(aSyslinuxCfgNuk_12 - 0x3CAC); "syslinux.cfg:  nuke=\"nwipe -b\""|84-75
15522|code|MOVS            R1, #2; int|2-33
15524|code|MOVS            R2, #0x28 ; '('; int|40-34
15526|code|LDR             R0, [R4]; WINDOW *|32-104
15528|code|ADD             R3, PC; "syslinux.cfg:  nuke=\"nwipe -b\""|123-68
15530|code|BLX             mvwprintw|254-247-94-233
15534|code|LDR             R3, =(aDoNotPerformAF - 0x3CB8); "Do not perform a final blanking pass. L"...|82-75
15536|code|MOVS            R1, #5; int|5-33
15538|code|MOVS            R2, #2; int|2-34
15540|code|ADD             R3, PC; "Do not perform a final blanking pass. L"...|123-68
15542|code|LDR             R0, [R4]; WINDOW *|32-104
15544|code|BLX             mvwprintw|254-247-86-233
15548|code|LDR             R3, =(aAnyVerificatio - 0x3CC8); "Any verification options will be ignore"...|79-75
15550|code|LDR             R0, [R4]; WINDOW *|32-104
15552|code|MOVS            R1, #6; int|6-33
15554|code|MOVS            R2, #2; int|2-34
15556|code|ADD             R3, PC; "Any verification options will be ignore"...|123-68
15558|code|BLX             mvwprintw|254-247-80-233
15562|code|MOV.W           LR, #0|79-240-0-14
15566|code|LDR             R0, [R4]; WINDOW *|32-104
15568|code|MOV             R1, LR; chtype|113-70
15570|code|STR.W           LR, [SP,#0x50+var_50]; chtype|205-248-0-224
15574|code|STR.W           LR, [SP,#0x50+var_4C]; chtype|205-248-4-224
15578|code|MOV             R2, LR; chtype|114-70
15580|code|STR.W           LR, [SP,#0x50+var_48]; chtype|205-248-8-224
15584|code|MOV             R3, LR; chtype|115-70
15586|code|STR.W           LR, [SP,#0x50+var_44]; chtype|205-248-12-224
15590|code|STR.W           LR, [SP,#0x50+var_40]; chtype|205-248-16-224
15594|code|BLX             wborder|253-247-234-239
15598|code|LDR             R1, =(aFinalBlankingP - 0x3CF6); " Final Blanking Pass "|68-73
15600|code|LDR             R0, [R4]|32-104
15602|code|ADD             R1, PC; " Final Blanking Pass "|121-68
15604|code|BL              sub_2FC0|255-247-100-249
15608|code|LDR             R0, [R4]; WINDOW *|32-104
15610|code|BLX             wrefresh|253-247-252-239
15614|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
15618|code|BLX             wgetch|254-247-38-233
15622|code|CMP             R0, #0x6B ; 'k'|107-40
15624|code|BEQ             loc_3DB2|83-208
15626|code|BLE             loc_3D32|18-221
15628|code|MOVW            R3, #0x103|64-242-3-19
15632|code|CMP             R0, R3|152-66
15634|code|BEQ             loc_3DB2|78-208
15636|code|CMP.W           R0, #0x104|176-245-130-127
15640|code|BGE             loc_3D88|54-218
15642|code|MOVW            R3, #0x101|64-242-1-19
15646|code|CMP             R0, R3|152-66
15648|code|BEQ             loc_3D5C|28-208
15650|code|CMP.W           R0, #0x102|176-245-129-127
15654|code|BNE             loc_3D98|55-209
15656|code|CMP             R5, #0|0-45
15658|code|ITT LE|220-191
15660|code|ADDLE           R5, #1|1-53
15662|code|ADDLE           R7, R5, #2|175-28
15664|code|B               loc_3C52|143-231
15666|code|CMP             R0, #0x4A ; 'J'|74-40
15668|code|BEQ             loc_3D28|248-208
15670|code|BGT             loc_3DA0|51-220
15672|code|CMP             R0, #0xA|10-40
15674|code|BEQ             loc_3D40|1-208
15676|code|CMP             R0, #0x20 ; ' '|32-40
15678|code|BNE             loc_3D98|43-209
15680|code|CMP             R5, #1|1-45
15682|code|ITEET HI|141-191
15684|code|LDRHI           R3, [SP,#0x50+var_2C]|9-155
15686|code|MOVLS           R3, R5|43-70
15688|code|LDRLS           R2, [SP,#0x50+var_2C]|9-154
15690|code|LDRHI           R3, [R3,#4]|91-104
15692|code|IT LS|152-191
15694|code|STRLS           R5, [R2,#4]|85-96
15696|code|CBZ             R3, loc_3D5C|35-177
15698|code|LDR             R1, [SP,#0x50+var_2C]|9-153
15700|code|MOVW            R3, #0x1024|65-242-36-3
15704|code|MOVS            R2, #0|0-34
15706|code|STR             R2, [R1,R3]|202-80
15708|code|ADD             SP, SP, #0x2C ; ','|11-176
15710|code|POP.W           {R4-R11,PC}|189-232-240-143
15714|code|LDR             R3, [SP,#0x50+var_38]; char *|6-155
15716|code|MOVS            R1, #2; int|2-33
15718|code|LDR             R0, [R4]; WINDOW *|32-104
15720|code|MOVS            R2, #0x28 ; '('; int|40-34
15722|code|BLX             mvwprintw|254-247-254-232
15726|code|LDR             R3, [SP,#0x50+var_34]; char *|7-155
15728|code|LDR             R0, [R4]; WINDOW *|32-104
15730|code|MOVS            R1, #5; int|5-33
15732|code|MOVS            R2, #2; int|2-34
15734|code|BLX             mvwprintw|254-247-248-232
15738|code|LDR             R0, [R4]; WINDOW *|32-104
15740|code|MOVS            R1, #6; int|6-33
15742|code|MOVS            R2, #2; int|2-34
15744|code|LDR             R3, [SP,#0x50+var_30]; char *|8-155
15746|code|BLX             mvwprintw|254-247-242-232
15750|code|B               loc_3CCA|160-231
15752|code|MOVW            R3, #0x107|64-242-7-19
15756|code|CMP             R0, R3|152-66
15758|code|BEQ             loc_3D5C|229-208
15760|code|MOVW            R3, #0x157|64-242-87-19
15764|code|CMP             R0, R3|152-66
15766|code|BEQ             loc_3D40|211-208
15768|code|ADDS            R0, #1|1-48
15770|code|BNE.W           loc_3C52|127-244-90-175
15774|code|B               loc_3D5C|221-231
15776|code|CMP             R0, #0x4B ; 'K'|75-40
15778|code|BEQ             loc_3DB2|6-208
15780|code|CMP             R0, #0x6A ; 'j'|106-40
15782|code|BNE             loc_3D98|247-209
15784|code|CMP             R5, #0|0-45
15786|code|ITT LE|220-191
15788|code|ADDLE           R5, #1|1-53
15790|code|ADDLE           R7, R5, #2|175-28
15792|code|B               loc_3C52|79-231
15794|code|CMP             R5, #0|0-45
15796|code|BLE.W           loc_3C52|127-247-77-175
15800|code|SUBS            R5, #1|1-61
15802|code|ADDS            R7, R5, #2|175-28
15804|code|B               loc_3C52|73-231
15806|data|ALIGN 0x10|0-191
15808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3C02|194-129-1-0
15812|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
15816|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
15820|data|DCD aPerformAFinalB - 0x3C0E; "  Perform a final blanking pass       "|158-87-0-0
15824|data|DCD aDoNotPerformFi - 0x3C18; "  Do not perform final blanking pass  "|188-87-0-0
15828|data|DCD off_1C008 - 0x3C26; " Statistics "|226-131-1-0
15832|data|DCD aUtilityPreserv+0x20 - 0x3C2E; "                                      "|14-91-0-0
15836|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
15840|data|DCD aSyslinuxCfgNuk_11 - 0x3C40; "syslinux.cfg:  nuke=\"nwipe\""|188-87-0-0
15844|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
15848|data|DCD aPerformAFinalB_0 - 0x3C4C; "Perform a final blanking pass after the"...|204-87-0-0
15852|data|DCD unk_8EBC - 0x3C52|106-82-0-0
15856|data|DCD acs_map_ptr - 0x1BDC4|164-1-0-0
15860|data|DCD aSyslinuxCfgNuk_12 - 0x3CAC; "syslinux.cfg:  nuke=\"nwipe -b\""|188-87-0-0
15864|data|DCD aDoNotPerformAF - 0x3CB8; "Do not perform a final blanking pass. L"...|208-87-0-0
15868|data|DCD aAnyVerificatio - 0x3CC8; "Any verification options will be ignore"...|16-88-0-0
15872|data|DCD aFinalBlankingP - 0x3CF6; " Final Blanking Pass "|50-88-0-0
15876|code|PUSH.W          {R4-R11,LR}|45-233-240-79
15880|code|SUB             SP, SP, #0x4C|147-176
15882|code|LDR.W           R7, =(_GLOBAL_OFFSET_TABLE_ - 0x3E1A)|223-248-172-116
15886|code|LDR.W           R3, =(footer_window_ptr - 0x1BDC4)|223-248-172-52
15890|code|LDR.W           R2, =(asc_964C - 0x3E20); "                                       "...|223-248-172-36
15894|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
15896|code|LDR.W           R5, =(aS_0 - 0x3E26); "  %s"|223-248-168-84
15900|code|ADD             R2, PC; "                                       "...|122-68
15902|code|STR             R2, [SP,#0x70+var_3C]|13-146
15904|code|LDR             R4, [R7,R3]; footer_window|252-88
15906|code|ADD             R5, PC; "  %s"|125-68
15908|code|LDR.W           R3, =(aWipeMethod - 0x3E34); " Wipe Method "|223-248-160-52
15912|code|MOV             R9, R7|185-70
15914|code|LDR.W           R11, =(aWipeMethod - 0x3E40); " Wipe Method "|223-248-160-180
15918|code|LDR             R0, [R4]; WINDOW *|32-104
15920|code|ADD             R3, PC; " Wipe Method "|123-68
15922|code|STR             R3, [SP,#0x70+var_38]|14-147
15924|code|BLX             werase|254-247-250-232
15928|code|LDR.W           R3, =(off_1C008 - 0x3E46); " Statistics "|223-248-148-52
15932|code|ADD             R11, PC; " Wipe Method "|251-68
15934|code|LDR.W           R2, =(aSyslinuxCfgNuk_4 - 0x3E4A); "syslinux.cfg: nuke=\"nwipe --method ran"...|223-248-148-36
15938|code|ADD             R3, PC; off_1C008|123-68
15940|code|LDR             R0, [R4]|32-104
15942|code|ADD             R2, PC; "syslinux.cfg: nuke=\"nwipe --method ran"...|122-68
15944|code|STR             R2, [SP,#0x70+var_34]|15-146
15946|code|LDR             R1, [R3,#(off_1C010 - 0x1C008)]; " J=Up K=Down Space=Select"|153-104
15948|code|BL              sub_2FC0|255-247-184-248
15952|code|LDR             R0, [R4]; WINDOW *|32-104
15954|code|BLX             wrefresh|253-247-80-239
15958|code|LDR.W           R2, =(nwipe_options_ptr - 0x1BDC4)|223-248-128-36
15962|code|LDR.W           R3, =(nwipe_ops2_ptr - 0x1BDC4)|223-248-128-52
15966|code|LDR.W           R0, =(nwipe_dodshort_ptr - 0x1BDC4)|223-248-128-4
15970|code|LDR             R2, [R7,R2]; nwipe_options|186-88
15972|code|LDR.W           R1, =(nwipe_dod522022m_ptr - 0x1BDC4)|223-248-124-20
15976|code|STR             R2, [SP,#0x70+var_2C]|17-146
15978|code|LDR             R3, [R7,R3]; nwipe_ops2|251-88
15980|code|STR             R3, [SP,#0x70+var_48]|10-147
15982|code|MOV             R4, R3|28-70
15984|code|LDR             R0, [R7,R0]; nwipe_dodshort|56-88
15986|code|LDR             R3, [R2,#(dword_1C2E0 - 0x1C2CC)]|83-105
15988|code|LDR.W           R2, =(nwipe_gutmann_ptr - 0x1BDC4)|223-248-112-36
15992|code|STR             R0, [SP,#0x70+var_50]|8-144
15994|code|SUBS            R6, R3, R4|30-27
15996|code|LDR             R1, [R7,R1]; nwipe_dod522022m|121-88
15998|code|CLZ.W           R6, R6|182-250-134-246
16002|code|LDR.W           R4, =(nwipe_random_ptr - 0x1BDC4)|223-248-104-68
16006|code|LDR             R0, [SP,#0x70+var_50]|8-152
16008|code|LSRS            R6, R6, #5|118-9
16010|code|STR             R1, [SP,#0x70+var_40]|12-145
16012|code|LDR             R2, [R7,R2]; nwipe_gutmann|186-88
16014|code|CMP             R3, R0|131-66
16016|code|IT EQ|8-191
16018|code|MOVEQ           R6, #2|2-38
16020|code|LDR.W           R0, =(main_window_ptr - 0x1BDC4)|223-248-88-4
16024|code|CMP             R3, R1|139-66
16026|code|IT EQ|8-191
16028|code|MOVEQ           R6, #3|3-38
16030|code|LDR.W           R1, =(nwipe_zero_ptr - 0x1BDC4)|223-248-84-20
16034|code|CMP             R3, R2|147-66
16036|code|IT EQ|8-191
16038|code|MOVEQ           R6, #4|4-38
16040|code|STR             R2, [SP,#0x70+var_4C]|9-146
16042|code|LDR             R4, [R7,R4]; nwipe_random|60-89
16044|code|LDR.W           R2, =(stdscr_ptr - 0x1BDC4)|223-248-72-36
16048|code|STR             R4, [SP,#0x70+var_54]|7-148
16050|code|LDR             R4, [R7,R0]; main_window|60-88
16052|code|LDR             R0, [SP,#0x70+var_54]|7-152
16054|code|CMP             R3, R0|131-66
16056|code|IT EQ|8-191
16058|code|MOVEQ           R6, #5|5-38
16060|code|LDR             R3, [R7,R1]; nwipe_zero|123-88
16062|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
16066|code|STR             R3, [SP,#0x70+var_44]|11-147
16068|code|LDR.W           R3, =(aSecurityLevelD - 0x3ED0); "Security Level: Depends on Rounds"|223-248-52-52
16072|code|LDR.W           R10, [R7,R2]; stdscr|87-248-2-160
16076|code|ADD             R3, PC; "Security Level: Depends on Rounds"|123-68
16078|code|STR             R3, [SP,#0x70+var_30]|16-147
16080|code|LDR             R0, [R4]; WINDOW *|32-104
16082|code|BLX             werase|254-247-172-232
16086|code|LDR             R0, [SP,#0x70+var_44]|11-152
16088|code|LDR             R7, [R4]|39-104
16090|code|BL              sub_6A70|2-240-201-253
16094|code|MOVS            R1, #2; int|2-33
16096|code|MOV             R3, R5; char *|43-70
16098|code|MOV             R2, R1; int|10-70
16100|code|STR             R0, [SP,#0x70+var_70]|0-144
16102|code|MOV             R0, R7; WINDOW *|56-70
16104|code|BLX             mvwprintw|254-247-62-232
16108|code|LDR             R0, [SP,#0x70+var_48]|10-152
16110|code|LDR             R7, [R4]|39-104
16112|code|BL              sub_6A70|2-240-190-253
16116|code|MOVS            R1, #3; int|3-33
16118|code|MOVS            R2, #2; int|2-34
16120|code|MOV             R3, R5; char *|43-70
16122|code|STR             R0, [SP,#0x70+var_70]|0-144
16124|code|MOV             R0, R7; WINDOW *|56-70
16126|code|BLX             mvwprintw|254-247-52-232
16130|code|LDR             R0, [SP,#0x70+var_50]|8-152
16132|code|LDR             R7, [R4]|39-104
16134|code|BL              sub_6A70|2-240-179-253
16138|code|MOVS            R1, #4; int|4-33
16140|code|MOVS            R2, #2; int|2-34
16142|code|MOV             R3, R5; char *|43-70
16144|code|STR             R0, [SP,#0x70+var_70]|0-144
16146|code|MOV             R0, R7; WINDOW *|56-70
16148|code|BLX             mvwprintw|254-247-40-232
16152|code|LDR             R0, [SP,#0x70+var_40]|12-152
16154|code|LDR             R7, [R4]|39-104
16156|code|BL              sub_6A70|2-240-168-253
16160|code|MOVS            R1, #5; int|5-33
16162|code|MOVS            R2, #2; int|2-34
16164|code|MOV             R3, R5; char *|43-70
16166|code|STR             R0, [SP,#0x70+var_70]|0-144
16168|code|MOV             R0, R7; WINDOW *|56-70
16170|code|BLX             mvwprintw|254-247-30-232
16174|code|LDR             R0, [SP,#0x70+var_4C]|9-152
16176|code|LDR             R7, [R4]|39-104
16178|code|BL              sub_6A70|2-240-157-253
16182|code|MOVS            R1, #6; int|6-33
16184|code|MOVS            R2, #2; int|2-34
16186|code|MOV             R3, R5; char *|43-70
16188|code|STR             R0, [SP,#0x70+var_70]|0-144
16190|code|MOV             R0, R7; WINDOW *|56-70
16192|code|BLX             mvwprintw|254-247-18-232
16196|code|LDR             R0, [SP,#0x70+var_54]|7-152
16198|code|LDR             R7, [R4]|39-104
16200|code|BL              sub_6A70|2-240-146-253
16204|code|MOVS            R1, #7; int|7-33
16206|code|MOVS            R2, #2; int|2-34
16208|code|MOV             R3, R5; char *|43-70
16210|code|STR             R0, [SP,#0x70+var_70]|0-144
16212|code|MOV             R0, R7; WINDOW *|56-70
16214|code|BLX             mvwprintw|254-247-8-232
16218|code|MOVS            R1, #8; int|8-33
16220|code|MOVS            R2, #2; int|2-34
16222|code|LDR             R3, [SP,#0x70+var_3C]; char *|13-155
16224|code|LDR             R0, [R4]; WINDOW *|32-104
16226|code|BLX             mvwprintw|254-247-2-232
16230|code|LDR             R0, [R4]; WINDOW *|32-104
16232|code|ADDS            R1, R6, #2; int|177-28
16234|code|MOVS            R2, #2; int|2-34
16236|code|BLX             wmove|254-247-44-232
16240|code|ADDS            R0, #1|1-48
16242|code|BEQ             loc_3F84|7-208
16244|code|LDR             R3, =(acs_map_ptr - 0x1BDC4)|226-75
16246|code|LDR             R0, [R4]; WINDOW *|32-104
16248|code|LDR.W           R3, [R9,R3]; acs_map|89-248-3-48
16252|code|LDR.W           R1, [R3,#0xAC]; chtype|211-248-172-16
16256|code|BLX             waddch|253-247-80-238
16260|code|CMP.W           R8, #4; switch 5 cases|184-241-4-15
16264|code|BHI.W           def_3F8C; jumptable 00003F8C default case|0-242-190-128
16268|code|TBH.W           [PC,R8,LSL#1]; switch jump|223-232-24-240
16272|data|DCW 0x8A; jump table for switch statement|138-0
16274|data|DCW 0x6D|109-0
16276|data|DCW 0x50|80-0
16278|data|DCW 5|5-0
16280|data|DCW 0x146|70-1
16282|code|LDR             R3, =(aSyslinuxCfgNuk_5 - 0x3FA6); jumptable 00003F8C case 3|218-75
16284|code|MOVS            R1, #2; int|2-33
16286|code|MOVS            R2, #0x1E; int|30-34
16288|code|LDR             R0, [R4]; WINDOW *|32-104
16290|code|ADD             R3, PC; "syslinux.cfg: nuke=\"nwipe --method gut"...|123-68
16292|code|BLX             mvwprintw|253-247-224-239
16296|code|LDR             R3, =(aSecurityLevelH - 0x3FB2); "Security Level: High (35 passes)"|215-75
16298|code|MOVS            R1, #3; int|3-33
16300|code|MOVS            R2, #0x1E; int|30-34
16302|code|ADD             R3, PC; "Security Level: High (35 passes)"|123-68
16304|code|LDR             R0, [R4]; WINDOW *|32-104
16306|code|BLX             mvwprintw|253-247-218-239
16310|code|LDR             R3, =(aThisIsTheMetho - 0x3FC0); "This is the method described by Peter G"...|213-75
16312|code|MOVS            R1, #9; int|9-33
16314|code|MOVS            R2, #2; int|2-34
16316|code|ADD             R3, PC; "This is the method described by Peter G"...|123-68
16318|code|LDR             R0, [R4]; WINDOW *|32-104
16320|code|BLX             mvwprintw|253-247-210-239
16324|code|LDR             R3, =(aSecureDeletion - 0x3FD0); "\"Secure Deletion of Data from Magnetic"...|210-75
16326|code|LDR             R0, [R4]; WINDOW *|32-104
16328|code|MOVS            R1, #0xA; int|10-33
16330|code|MOVS            R2, #2; int|2-34
16332|code|ADD             R3, PC; "\"Secure Deletion of Data from Magnetic"...|123-68
16334|code|BLX             mvwprintw|253-247-204-239
16338|code|MOVS            R7, #0|0-39
16340|code|LDR             R0, [R4]; WINDOW *|32-104
16342|code|MOV             R2, R7; chtype|58-70
16344|code|MOV             R3, R7; chtype|59-70
16346|code|MOV             R1, R7; chtype|57-70
16348|code|STR             R7, [SP,#0x70+var_70]; chtype|0-151
16350|code|STR             R7, [SP,#0x70+var_6C]; chtype|1-151
16352|code|STR             R7, [SP,#0x70+var_68]; chtype|2-151
16354|code|STR             R7, [SP,#0x70+var_64]; chtype|3-151
16356|code|STR             R7, [SP,#0x70+var_60]; chtype|4-151
16358|code|BLX             wborder|253-247-108-238
16362|code|LDR             R1, [SP,#0x70+var_38]|14-153
16364|code|LDR             R0, [R4]|32-104
16366|code|BL              sub_2FC0|254-247-231-255
16370|code|LDR             R0, [R4]; WINDOW *|32-104
16372|code|BLX             wrefresh|253-247-126-238
16376|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
16380|code|BLX             wgetch|253-247-168-239
16384|code|CMP             R0, #0x6B ; 'k'|107-40
16386|code|BEQ.W           loc_4202|0-240-254-128
16390|code|BLE.W           loc_420E|64-243-2-129
16394|code|CMP.W           R0, #0x102|176-245-129-127
16398|code|BEQ.W           loc_41B8|0-240-211-128
16402|code|BLE.W           loc_41F4|64-243-239-128
16406|code|MOVW            R3, #0x103|64-242-3-19
16410|code|CMP             R0, R3|152-66
16412|code|BEQ.W           loc_4202|0-240-241-128
16416|code|MOVW            R3, #0x107|64-242-7-19
16420|code|CMP             R0, R3|152-66
16422|code|BNE.W           loc_41E6|64-240-222-128
16426|code|ADD             SP, SP, #0x4C ; 'L'|19-176
16428|code|POP.W           {R4-R11,PC}|189-232-240-143
16432|code|LDR             R3, =(aSyslinuxCfgNuk_6 - 0x403C); jumptable 00003F8C case 2|184-75
16434|code|MOVS            R1, #2; int|2-33
16436|code|LDR             R0, [R4]; WINDOW *|32-104
16438|code|MOVS            R2, #0x1E; int|30-34
16440|code|ADD             R3, PC; "syslinux.cfg: nuke=\"nwipe --method dod"...|123-68
16442|code|BLX             mvwprintw|253-247-150-239
16446|code|LDR             R3, =(aSecurityLevelM - 0x404A); "Security Level: Medium (7 passes)"|182-75
16448|code|LDR             R0, [R4]; WINDOW *|32-104
16450|code|MOVS            R1, #3; int|3-33
16452|code|MOVS            R2, #0x1E; int|30-34
16454|code|ADD             R3, PC; "Security Level: Medium (7 passes)"|123-68
16456|code|BLX             mvwprintw|253-247-142-239
16460|code|LDR             R3, =(aTheAmericanDep - 0x4058); "The American Department of Defense 5220"...|179-75
16462|code|LDR             R0, [R4]; WINDOW *|32-104
16464|code|MOVS            R1, #9; int|9-33
16466|code|MOVS            R2, #2; int|2-34
16468|code|ADD             R3, PC; "The American Department of Defense 5220"...|123-68
16470|code|BLX             mvwprintw|253-247-136-239
16474|code|LDR             R3, =(aThisImplementa_0 - 0x4066); "This implementation uses the same algor"...|177-75
16476|code|LDR             R0, [R4]; WINDOW *|32-104
16478|code|MOVS            R1, #0xA; int|10-33
16480|code|MOVS            R2, #2; int|2-34
16482|code|ADD             R3, PC; "This implementation uses the same algor"...|123-68
16484|code|BLX             mvwprintw|253-247-128-239
16488|code|B               loc_3FD2|179-231
16490|code|LDR             R3, =(aSyslinuxCfgNuk_7 - 0x4076); jumptable 00003F8C case 1|174-75
16492|code|MOVS            R1, #2; int|2-33
16494|code|LDR             R0, [R4]; WINDOW *|32-104
16496|code|MOVS            R2, #0x1E; int|30-34
16498|code|ADD             R3, PC; "syslinux.cfg: nuke=\"nwipe --method dod"...|123-68
16500|code|BLX             mvwprintw|253-247-120-239
16504|code|LDR             R3, =(aSecurityLevelM_0 - 0x4084); "Security Level: Medium (3 passes)"|171-75
16506|code|LDR             R0, [R4]; WINDOW *|32-104
16508|code|MOVS            R1, #3; int|3-33
16510|code|MOVS            R2, #0x1E; int|30-34
16512|code|ADD             R3, PC; "Security Level: Medium (3 passes)"|123-68
16514|code|BLX             mvwprintw|253-247-114-239
16518|code|LDR             R3, =(aTheAmericanDep_0 - 0x4092); "The American Department of Defense 5220"...|169-75
16520|code|LDR             R0, [R4]; WINDOW *|32-104
16522|code|MOVS            R1, #9; int|9-33
16524|code|MOVS            R2, #2; int|2-34
16526|code|ADD             R3, PC; "The American Department of Defense 5220"...|123-68
16528|code|BLX             mvwprintw|253-247-106-239
16532|code|LDR             R3, =(aThisMethodIsCo - 0x40A0); "This method is composed of passes 1,2,7"...|166-75
16534|code|LDR             R0, [R4]; WINDOW *|32-104
16536|code|MOVS            R1, #0xA; int|10-33
16538|code|MOVS            R2, #2; int|2-34
16540|code|ADD             R3, PC; "This method is composed of passes 1,2,7"...|123-68
16542|code|BLX             mvwprintw|253-247-100-239
16546|code|B               loc_3FD2|150-231
16548|code|LDR             R3, =(aSyslinuxCfgNuk_8 - 0x40B0); jumptable 00003F8C case 0|163-75
16550|code|MOVS            R1, #2; int|2-33
16552|code|LDR             R0, [R4]; WINDOW *|32-104
16554|code|MOVS            R2, #0x1E; int|30-34
16556|code|ADD             R3, PC; "syslinux.cfg: nuke=\"nwipe --method ops"...|123-68
16558|code|BLX             mvwprintw|253-247-92-239
16562|code|LDR             R3, =(aSecurityLevelM_1 - 0x40BE); "Security Level: Medium (8 passes)"|161-75
16564|code|LDR             R0, [R4]; WINDOW *|32-104
16566|code|MOVS            R1, #3; int|3-33
16568|code|MOVS            R2, #0x1E; int|30-34
16570|code|ADD             R3, PC; "Security Level: Medium (8 passes)"|123-68
16572|code|BLX             mvwprintw|253-247-84-239
16576|code|LDR             R3, =(aTheRoyalCanadi - 0x40CC); "The Royal Canadian Mounted Police Techn"...|158-75
16578|code|LDR             R0, [R4]; WINDOW *|32-104
16580|code|MOVS            R1, #9; int|9-33
16582|code|MOVS            R2, #2; int|2-34
16584|code|ADD             R3, PC; "The Royal Canadian Mounted Police Techn"...|123-68
16586|code|BLX             mvwprintw|253-247-78-239
16590|code|LDR             R3, =(aInformationTec - 0x40DA); "Information Technology, Appendix OPS-II"...|156-75
16592|code|LDR             R0, [R4]; WINDOW *|32-104
16594|code|MOVS            R1, #0xA; int|10-33
16596|code|MOVS            R2, #2; int|2-34
16598|code|ADD             R3, PC; "Information Technology, Appendix OPS-II"...|123-68
16600|code|BLX             mvwprintw|253-247-70-239
16604|code|LDR             R3, =(unk_962C - 0x40E8)|153-75
16606|code|LDR             R0, [R4]; WINDOW *|32-104
16608|code|MOVS            R1, #0xB; int|11-33
16610|code|MOVS            R2, #2; int|2-34
16612|code|ADD             R3, PC; unk_962C ; char *|123-68
16614|code|BLX             mvwprintw|253-247-64-239
16618|code|LDR             R3, =(aThisImplementa_1 - 0x40F6); "This implementation, with regards to pa"...|151-75
16620|code|LDR             R0, [R4]; WINDOW *|32-104
16622|code|MOVS            R1, #0xC; int|12-33
16624|code|MOVS            R2, #2; int|2-34
16626|code|ADD             R3, PC; "This implementation, with regards to pa"...|123-68
16628|code|BLX             mvwprintw|253-247-56-239
16632|code|LDR             R3, =(aUsesAPatternTh - 0x4104); "uses a pattern that is one random byte "...|148-75
16634|code|LDR             R0, [R4]; WINDOW *|32-104
16636|code|MOVS            R1, #0xD; int|13-33
16638|code|MOVS            R2, #2; int|2-34
16640|code|ADD             R3, PC; "uses a pattern that is one random byte "...|123-68
16642|code|BLX             mvwprintw|253-247-50-239
16646|code|B               loc_3FD2|100-231
16648|code|LDR             R3, =(aSyslinuxCfgNuk_9 - 0x4114); jumptable 00003F8C default case|145-75
16650|code|MOVS            R1, #2; int|2-33
16652|code|MOVS            R2, #0x1E; int|30-34
16654|code|LDR             R0, [R4]; WINDOW *|32-104
16656|code|ADD             R3, PC; "syslinux.cfg: nuke=\"nwipe --method zer"...|123-68
16658|code|BLX             mvwprintw|253-247-42-239
16662|code|LDR             R3, =(aSecurityLevelL - 0x4120); "Security Level: Low (1 pass)"|143-75
16664|code|MOVS            R1, #3; int|3-33
16666|code|MOVS            R2, #0x1E; int|30-34
16668|code|ADD             R3, PC; "Security Level: Low (1 pass)"|123-68
16670|code|LDR             R0, [R4]; WINDOW *|32-104
16672|code|BLX             mvwprintw|253-247-34-239
16676|code|LDR             R3, =(aThisMethodFill - 0x412E); "This method fills the device with zeros"...|140-75
16678|code|MOVS            R1, #9; int|9-33
16680|code|MOVS            R2, #2; int|2-34
16682|code|ADD             R3, PC; "This method fills the device with zeros"...|123-68
16684|code|LDR             R0, [R4]; WINDOW *|32-104
16686|code|BLX             mvwprintw|253-247-28-239
16690|code|LDR             R3, =(aNotApplyToThis - 0x413C); "not apply to this method. This method a"...|138-75
16692|code|MOVS            R1, #0xA; int|10-33
16694|code|MOVS            R2, #2; int|2-34
16696|code|ADD             R3, PC; "not apply to this method. This method a"...|123-68
16698|code|LDR             R0, [R4]; WINDOW *|32-104
16700|code|BLX             mvwprintw|253-247-20-239
16704|code|LDR             R3, =(unk_962C - 0x414A)|135-75
16706|code|MOVS            R1, #0xB; int|11-33
16708|code|MOVS            R2, #2; int|2-34
16710|code|ADD             R3, PC; unk_962C ; char *|123-68
16712|code|LDR             R0, [R4]; WINDOW *|32-104
16714|code|BLX             mvwprintw|253-247-14-239
16718|code|LDR             R3, =(aUseThisMethodT - 0x4158); "Use this method to blank disks before i"...|133-75
16720|code|MOVS            R1, #0xC; int|12-33
16722|code|MOVS            R2, #2; int|2-34
16724|code|ADD             R3, PC; "Use this method to blank disks before i"...|123-68
16726|code|LDR             R0, [R4]; WINDOW *|32-104
16728|code|BLX             mvwprintw|253-247-6-239
16732|code|LDR             R3, =(aReinstallingMi - 0x4166); "reinstalling Microsoft Windows to remov"...|130-75
16734|code|MOVS            R1, #0xD; int|13-33
16736|code|MOVS            R2, #2; int|2-34
16738|code|ADD             R3, PC; "reinstalling Microsoft Windows to remov"...|123-68
16740|code|LDR             R0, [R4]; WINDOW *|32-104
16742|code|BLX             mvwprintw|253-247-0-239
16746|code|LDR             R3, =(aUtilityPreserv - 0x4176); "utility preserves.                     "...|128-75
16748|code|LDR             R0, [R4]; WINDOW *|32-104
16750|code|MOVS            R1, #0xE; int|14-33
16752|code|MOVS            R2, #2; int|2-34
16754|code|ADD             R3, PC; "utility preserves.                     "...|123-68
16756|code|BLX             mvwprintw|253-247-248-238
16760|code|MOVS            R7, #0|0-39
16762|code|LDR             R0, [R4]; WINDOW *|32-104
16764|code|MOV             R2, R7; chtype|58-70
16766|code|MOV             R3, R7; chtype|59-70
16768|code|MOV             R1, R7; chtype|57-70
16770|code|STR             R7, [SP,#0x70+var_70]; chtype|0-151
16772|code|STR             R7, [SP,#0x70+var_6C]; chtype|1-151
16774|code|STR             R7, [SP,#0x70+var_68]; chtype|2-151
16776|code|STR             R7, [SP,#0x70+var_64]; chtype|3-151
16778|code|STR             R7, [SP,#0x70+var_60]; chtype|4-151
16780|code|BLX             wborder|253-247-152-237
16784|code|MOV             R1, R11|89-70
16786|code|LDR             R0, [R4]|32-104
16788|code|BL              sub_2FC0|254-247-20-255
16792|code|LDR             R0, [R4]; WINDOW *|32-104
16794|code|BLX             wrefresh|253-247-172-237
16798|code|LDR.W           R0, [R10]; WINDOW *|218-248-0-0
16802|code|BLX             wgetch|253-247-214-238
16806|code|CMP             R0, #0x6B ; 'k'|107-40
16808|code|BEQ             loc_4202|43-208
16810|code|BLE             loc_41DA|22-221
16812|code|CMP.W           R0, #0x102|176-245-129-127
16816|code|BNE.W           loc_4012|127-244-47-175
16820|code|CMP             R6, #5|5-46
16822|code|BEQ             loc_41BE|2-208
16824|code|ADDS            R6, #1|1-54
16826|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
16830|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
16834|code|IT NE|24-191
16836|code|CMPNE           R0, #0xA|10-40
16838|code|BNE.W           loc_3ED0|127-244-131-174
16842|code|CMP.W           R8, #4; switch 5 cases|184-241-4-15
16846|code|BHI             def_41D0; jumptable 000041D0 default case|105-216
16848|code|TBB.W           [PC,R8]; switch jump|223-232-8-240
16852|data|DCB 0x63; jump table for switch statement|99
16853|data|DCB 0x5E|94
16854|data|DCB 0x59|89
16855|data|DCB 0x54|84
16856|data|DCB 0x6D|109
16857|data|ALIGN 2|0
16858|code|CMP             R0, #0x4B ; 'K'|75-40
16860|code|BEQ             loc_4202|17-208
16862|code|CMP             R0, #0x6A ; 'j'|106-40
16864|code|BEQ             loc_41B4|232-208
16866|code|CMP             R0, #0x4A ; 'J'|74-40
16868|code|BEQ             loc_41B4|230-208
16870|code|MOVW            R3, #0x157|64-242-87-19
16874|code|CMP             R0, #0x20 ; ' '|32-40
16876|code|IT NE|24-191
16878|code|CMPNE           R0, R3|152-66
16880|code|BNE             loc_41BE|229-209
16882|code|B               loc_41CA|234-231
16884|code|MOVW            R3, #0x101|64-242-1-19
16888|code|CMP             R0, R3|152-66
16890|code|BNE             loc_41E6|244-209
16892|code|ADD             SP, SP, #0x4C ; 'L'|19-176
16894|code|POP.W           {R4-R11,PC}|189-232-240-143
16898|code|CMP             R6, #0|0-46
16900|code|BEQ             loc_41BE|219-208
16902|code|MOV             R6, R8|70-70
16904|code|ADD.W           R8, R8, #0xFFFFFFFF|8-241-255-56
16908|code|B               loc_41BE|215-231
16910|code|CMP             R0, #0x4B ; 'K'|75-40
16912|code|BEQ             loc_4202|247-208
16914|code|CMP             R0, #0x6A ; 'j'|106-40
16916|code|BEQ             loc_41B8|208-208
16918|code|CMP             R0, #0x4A ; 'J'|74-40
16920|code|BNE             loc_41E6|229-209
16922|code|B               loc_41B8|205-231
16924|code|LDR             R3, [SP,#0x70+var_34]; jumptable 00003F8C case 4|15-155
16926|code|MOVS            R1, #2; int|2-33
16928|code|LDR             R0, [R4]; WINDOW *|32-104
16930|code|MOVS            R2, #0x1E; int|30-34
16932|code|BLX             mvwprintw|253-247-160-238
16936|code|LDR             R3, [SP,#0x70+var_30]; char *|16-155
16938|code|LDR             R0, [R4]; WINDOW *|32-104
16940|code|MOVS            R1, #3; int|3-33
16942|code|MOVS            R2, #0x1E; int|30-34
16944|code|BLX             mvwprintw|253-247-154-238
16948|code|LDR             R3, =(aThisMethodFill_0 - 0x4240); "This method fills the device with a str"...|78-75
16950|code|LDR             R0, [R4]; WINDOW *|32-104
16952|code|MOVS            R1, #9; int|9-33
16954|code|MOVS            R2, #2; int|2-34
16956|code|ADD             R3, PC; "This method fills the device with a str"...|123-68
16958|code|BLX             mvwprintw|253-247-148-238
16962|code|LDR             R3, =(aBestMethodToUs - 0x424E); "best method to use on modern hard disk "...|76-75
16964|code|LDR             R0, [R4]; WINDOW *|32-104
16966|code|MOVS            R1, #0xA; int|10-33
16968|code|MOVS            R2, #2; int|2-34
16970|code|ADD             R3, PC; "best method to use on modern hard disk "...|123-68
16972|code|BLX             mvwprintw|253-247-140-238
16976|code|LDR             R3, =(unk_962C - 0x425C)|73-75
16978|code|LDR             R0, [R4]; WINDOW *|32-104
16980|code|MOVS            R1, #0xB; int|11-33
16982|code|MOVS            R2, #2; int|2-34
16984|code|ADD             R3, PC; unk_962C ; char *|123-68
16986|code|BLX             mvwprintw|253-247-134-238
16990|code|LDR             R3, =(aThisMethodHasA - 0x426A); "This method has a medium security level"...|71-75
16992|code|LDR             R0, [R4]; WINDOW *|32-104
16994|code|MOVS            R1, #0xC; int|12-33
16996|code|MOVS            R2, #2; int|2-34
16998|code|ADD             R3, PC; "This method has a medium security level"...|123-68
17000|code|BLX             mvwprintw|253-247-126-238
17004|code|LDR             R3, =(aLevelWith8Roun - 0x4278); "level with 8 rounds.                   "...|68-75
17006|code|LDR             R0, [R4]; WINDOW *|32-104
17008|code|MOVS            R1, #0xD; int|13-33
17010|code|MOVS            R2, #2; int|2-34
17012|code|ADD             R3, PC; "level with 8 rounds.                   "...|123-68
17014|code|BLX             mvwprintw|253-247-120-238
17018|code|B               loc_4178|125-231
17020|code|LDR             R3, [SP,#0x70+var_2C]; jumptable 000041D0 case 3|17-155
17022|code|MOV             R2, R3|26-70
17024|code|LDR             R3, [SP,#0x70+var_4C]|9-155
17026|code|STR             R3, [R2,#0x14]|83-97
17028|code|B               loc_402A|209-230
17030|code|LDR             R3, [SP,#0x70+var_2C]; jumptable 000041D0 case 2|17-155
17032|code|MOV             R2, R3|26-70
17034|code|LDR             R3, [SP,#0x70+var_40]|12-155
17036|code|STR             R3, [R2,#0x14]|83-97
17038|code|B               loc_402A|204-230
17040|code|LDR             R3, [SP,#0x70+var_2C]; jumptable 000041D0 case 1|17-155
17042|code|MOV             R2, R3|26-70
17044|code|LDR             R3, [SP,#0x70+var_50]|8-155
17046|code|STR             R3, [R2,#0x14]|83-97
17048|code|B               loc_402A|199-230
17050|code|LDR             R3, [SP,#0x70+var_2C]; jumptable 000041D0 case 0|17-155
17052|code|MOV             R2, R3|26-70
17054|code|LDR             R3, [SP,#0x70+var_48]|10-155
17056|code|STR             R3, [R2,#0x14]|83-97
17058|code|B               loc_402A|194-230
17060|code|LDR             R3, [SP,#0x70+var_2C]; jumptable 000041D0 default case|17-155
17062|code|MOV             R2, R3|26-70
17064|code|LDR             R3, [SP,#0x70+var_44]|11-155
17066|code|STR             R3, [R2,#0x14]|83-97
17068|code|B               loc_402A|189-230
17070|code|LDR             R3, [SP,#0x70+var_2C]; jumptable 000041D0 case 4|17-155
17072|code|MOV             R2, R3|26-70
17074|code|LDR             R3, [SP,#0x70+var_54]|7-155
17076|code|STR             R3, [R2,#0x14]|83-97
17078|code|B               loc_402A|184-230
17080|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3E1A|170-127-1-0
17084|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
17088|data|DCD asc_964C - 0x3E20; "                                       "...|44-88-0-0
17092|data|DCD aS_0 - 0x3E26; "  %s"|114-79-0-0
17096|data|DCD aWipeMethod - 0x3E34; " Wipe Method "|36-95-0-0
17100|data|DCD aWipeMethod - 0x3E40; " Wipe Method "|24-95-0-0
17104|data|DCD off_1C008 - 0x3E46; " Statistics "|194-129-1-0
17108|data|DCD aSyslinuxCfgNuk_4 - 0x3E4A; "syslinux.cfg: nuke=\"nwipe --method ran"...|126-93-0-0
17112|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
17116|data|DCD nwipe_ops2_ptr - 0x1BDC4|8-2-0-0
17120|data|DCD nwipe_dodshort_ptr - 0x1BDC4|48-2-0-0
17124|data|DCD nwipe_dod522022m_ptr - 0x1BDC4|168-1-0-0
17128|data|DCD nwipe_gutmann_ptr - 0x1BDC4|208-1-0-0
17132|data|DCD nwipe_random_ptr - 0x1BDC4|204-1-0-0
17136|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
17140|data|DCD nwipe_zero_ptr - 0x1BDC4|224-1-0-0
17144|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
17148|data|DCD aSecurityLevelD - 0x3ED0; "Security Level: Depends on Rounds"|36-93-0-0
17152|data|DCD acs_map_ptr - 0x1BDC4|164-1-0-0
17156|data|DCD aSyslinuxCfgNuk_5 - 0x3FA6; "syslinux.cfg: nuke=\"nwipe --method gut"...|54-91-0-0
17160|data|DCD aSecurityLevelH - 0x3FB2; "Security Level: High (35 passes)"|86-91-0-0
17164|data|DCD aThisIsTheMetho - 0x3FC0; "This is the method described by Peter G"...|108-91-0-0
17168|data|DCD aSecureDeletion - 0x3FD0; "\"Secure Deletion of Data from Magnetic"...|172-91-0-0
17172|data|DCD aSyslinuxCfgNuk_6 - 0x403C; "syslinux.cfg: nuke=\"nwipe --method dod"...|172-89-0-0
17176|data|DCD aSecurityLevelM - 0x404A; "Security Level: Medium (7 passes)"|206-89-0-0
17180|data|DCD aTheAmericanDep - 0x4058; "The American Department of Defense 5220"...|228-89-0-0
17184|data|DCD aThisImplementa_0 - 0x4066; "This implementation uses the same algor"...|38-90-0-0
17188|data|DCD aSyslinuxCfgNuk_7 - 0x4076; "syslinux.cfg: nuke=\"nwipe --method dod"...|126-88-0-0
17192|data|DCD aSecurityLevelM_0 - 0x4084; "Security Level: Medium (3 passes)"|160-88-0-0
17196|data|DCD aTheAmericanDep_0 - 0x4092; "The American Department of Defense 5220"...|182-88-0-0
17200|data|DCD aThisMethodIsCo - 0x40A0; "This method is composed of passes 1,2,7"...|248-88-0-0
17204|data|DCD aSyslinuxCfgNuk_8 - 0x40B0; "syslinux.cfg: nuke=\"nwipe --method ops"...|180-86-0-0
17208|data|DCD aSecurityLevelM_1 - 0x40BE; "Security Level: Medium (8 passes)"|210-86-0-0
17212|data|DCD aTheRoyalCanadi - 0x40CC; "The Royal Canadian Mounted Police Techn"...|232-86-0-0
17216|data|DCD aInformationTec - 0x40DA; "Information Technology, Appendix OPS-II"...|42-87-0-0
17220|data|DCD unk_962C - 0x40E8|68-85-0-0
17224|data|DCD aThisImplementa_1 - 0x40F6; "This implementation, with regards to pa"...|94-87-0-0
17228|data|DCD aUsesAPatternTh - 0x4104; "uses a pattern that is one random byte "...|160-87-0-0
17232|data|DCD aSyslinuxCfgNuk_9 - 0x4114; "syslinux.cfg: nuke=\"nwipe --method zer"...|44-84-0-0
17236|data|DCD aSecurityLevelL - 0x4120; "Security Level: Low (1 pass)"|76-84-0-0
17240|data|DCD aThisMethodFill - 0x412E; "This method fills the device with zeros"...|94-84-0-0
17244|data|DCD aNotApplyToThis - 0x413C; "not apply to this method. This method a"...|160-84-0-0
17248|data|DCD unk_962C - 0x414A|226-84-0-0
17252|data|DCD aUseThisMethodT - 0x4158; "Use this method to blank disks before i"...|36-85-0-0
17256|data|DCD aReinstallingMi - 0x4166; "reinstalling Microsoft Windows to remov"...|102-85-0-0
17260|data|DCD aUtilityPreserv - 0x4176; "utility preserves.                     "...|166-85-0-0
17264|data|DCD aThisMethodFill_0 - 0x4240; "This method fills the device with a str"...|216-89-0-0
17268|data|DCD aBestMethodToUs - 0x424E; "best method to use on modern hard disk "...|26-90-0-0
17272|data|DCD unk_962C - 0x425C|208-83-0-0
17276|data|DCD aThisMethodHasA - 0x426A; "This method has a medium security level"...|78-90-0-0
17280|data|DCD aLevelWith8Roun - 0x4278; "level with 8 rounds.                   "...|144-90-0-0
17284|code|PUSH.W          {R4-R11,LR}|45-233-240-79
17288|code|SUB             SP, SP, #0x64|153-176
17290|code|LDR.W           R7, =(_GLOBAL_OFFSET_TABLE_ - 0x4398)|223-248-228-117
17294|code|MOV             R6, R0|6-70
17296|code|LDR.W           R3, =(main_window_ptr - 0x1BDC4)|223-248-224-53
17300|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
17302|code|STR             R1, [SP,#0x88+var_44]|17-145
17304|code|LDR.W           R8, [R7,R3]; main_window|87-248-3-128
17308|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17312|code|CMP             R0, #0|0-40
17314|code|BEQ.W           loc_4952|0-240-214-130
17318|code|CMP             R6, #0|0-46
17320|code|LDRSH.W         R3, [R0,#4]|176-249-4-48
17324|code|ITE LE|212-191
17326|code|MOVLE           R2, #0|0-34
17328|code|MOVGT           R2, #1|1-34
17330|code|MOV             R1, R2|17-70
17332|code|STR             R2, [SP,#0x88+var_2C]|23-146
17334|code|LDRSH.W         R2, [R0,#6]|176-249-6-32
17338|code|SUBS            R4, R3, #3|220-30
17340|code|ADDS            R3, #1|1-51
17342|code|STR             R4, [SP,#0x88+var_6C]|7-148
17344|code|STR             R3, [SP,#0x88+var_30]|22-147
17346|code|MOV             R3, R1|11-70
17348|code|CMP             R4, #0|0-44
17350|code|ITE LE|212-191
17352|code|MOVLE           R3, #0|0-35
17354|code|ANDGT.W         R3, R3, #1|3-240-1-3
17358|code|STR             R3, [SP,#0x88+var_3C]|19-147
17360|code|ADDS            R3, R2, #1|83-28
17362|code|STR             R3, [SP,#0x88+var_34]|21-147
17364|code|LDR.W           R2, =(footer_window_ptr - 0x1BDC4)|223-248-160-37
17368|code|MOV.W           R10, #0|79-240-0-10
17372|code|LDR.W           R1, =(off_1C008 - 0x43E8); " Statistics "|223-248-156-21
17376|code|LDR.W           R3, =(stdscr_ptr - 0x1BDC4)|223-248-156-53
17380|code|ADD             R1, PC; off_1C008|121-68
17382|code|STR             R1, [SP,#0x88+var_38]|20-145
17384|code|LDR             R2, [R7,R2]; footer_window|186-88
17386|code|STR             R2, [SP,#0x88+var_48]|16-146
17388|code|LDR             R3, [R7,R3]; stdscr|251-88
17390|code|STR             R3, [SP,#0x88+var_40]|18-147
17392|code|LDR.W           R3, =(asc_964C+0x2C - 0x43F8); " "|223-248-144-53
17396|code|ADD             R3, PC; " "|123-68
17398|code|STR             R3, [SP,#0x88+var_68]|8-147
17400|code|LDR.W           R3, =(aS - 0x4400); " [????] %s"|223-248-140-53
17404|code|ADD             R3, PC; " [????] %s"|123-68
17406|code|STR             R3, [SP,#0x88+var_50]|14-147
17408|code|LDR.W           R3, =(aUnrecognizedDe - 0x4408); "Unrecognized Device"|223-248-136-53
17412|code|ADD             R3, PC; "Unrecognized Device"|123-68
17414|code|STR             R3, [SP,#0x88+var_4C]|15-147
17416|code|MOV             R3, R6|51-70
17418|code|MOV             R6, R10|86-70
17420|code|MOV             R9, R3|153-70
17422|code|BLX             werase|253-247-14-238
17426|code|LDR             R4, [SP,#0x88+var_48]|16-156
17428|code|LDR             R0, [R4]; WINDOW *|32-104
17430|code|BLX             werase|253-247-10-238
17434|code|LDR             R3, [SP,#0x88+var_38]|20-155
17436|code|LDR             R0, [R4]|32-104
17438|code|LDR             R1, [R3,#0xC]|217-104
17440|code|BL              sub_2FC0|254-247-206-253
17444|code|LDR             R0, [R4]; WINDOW *|32-104
17446|code|BLX             wrefresh|253-247-102-236
17450|code|BL              sub_33F0|254-247-225-255
17454|code|LDR             R3, [SP,#0x88+var_3C]|19-155
17456|code|CMP             R3, #0|0-43
17458|code|BEQ             loc_44EA|90-208
17460|code|LDR             R2, [SP,#0x88+var_44]|17-154
17462|code|ADDS            R4, R6, #1|116-28
17464|code|LDR.W           R3, =(aISSSLldBytes - 0x444A); " [----] %i. %s - %s %s (%lld bytes)"|223-248-84-53
17468|code|MOV.W           R11, #0|79-240-0-11
17472|code|ADD.W           R5, R2, R6,LSL#2|2-235-134-5
17476|code|STR             R6, [SP,#0x88+var_70]|6-150
17478|code|ADD             R3, PC; " [----] %i. %s - %s %s (%lld bytes)"|123-68
17480|code|STR             R3, [SP,#0x88+var_5C]|11-147
17482|code|ADD.W           R3, R2, R10,LSL#2|2-235-138-3
17486|code|STR             R3, [SP,#0x88+var_60]|10-147
17488|code|LDR.W           R3, =(aISSSLldBytes_0 - 0x445A); " [****] %i. %s - %s %s (%lld bytes)"|223-248-64-53
17492|code|STR             R7, [SP,#0x88+var_64]|9-151
17494|code|ADD             R3, PC; " [****] %i. %s - %s %s (%lld bytes)"|123-68
17496|code|STR             R3, [SP,#0x88+var_58]|12-147
17498|code|LDR.W           R3, =(aISSSLldBytes_1 - 0x4462); " [    ] %i. %s - %s %s (%lld bytes)"|223-248-60-53
17502|code|ADD             R3, PC; " [    ] %i. %s - %s %s (%lld bytes)"|123-68
17504|code|STR             R3, [SP,#0x88+var_54]|13-147
17506|code|LDR             R3, [SP,#0x88+var_68]; char *|8-155
17508|code|ADD.W           R1, R11, #2; int|11-241-2-1
17512|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17516|code|MOVS            R2, #1; int|1-34
17518|code|BLX             mvwprintw|253-247-124-237
17522|code|LDR             R3, [SP,#0x88+var_70]|6-155
17524|code|ADD             R3, R11|91-68
17526|code|CMP             R3, R10|83-69
17528|code|BNE.W           loc_4636|64-240-221-128
17532|code|LDR             R3, [SP,#0x88+var_60]|10-155
17534|code|LDR             R2, [SP,#0x88+var_64]|9-154
17536|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17540|code|LDR             R3, [R3]|27-104
17542|code|LDR.W           R3, [R3,#0x308]|211-248-8-51
17546|code|BIC.W           R3, R3, #2|35-240-2-3
17550|code|CMP             R3, #1|1-43
17552|code|LDR.W           R3, =(byte_1A0+4)|223-248-8-53
17556|code|LDR             R3, [R2,R3]|211-88
17558|code|ITE EQ|12-191
17560|code|LDREQ.W         R1, [R3,#0xAC]|211-248-172-16
17564|code|LDRNE.W         R1, [R3,#0x180]; chtype|211-248-128-17
17568|code|BLX             waddch|253-247-192-235
17572|code|LDR.W           R2, [R5],#4|85-248-4-43
17576|code|LDR.W           R3, [R2,#0x308]|210-248-8-51
17580|code|SUBS            R3, #1; switch 5 cases|1-59
17582|code|CMP             R3, #4|4-43
17584|code|BHI             def_44B2; jumptable 000044B2 default case|10-216
17586|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
17590|data|DCB 0x94; jump table for switch statement|148
17591|data|DCB 0xB5|181
17592|data|DCB 0xAA|170
17593|data|DCB 0x7E|126
17594|data|DCB 3|3
17595|data|ALIGN 2|0
17596|code|LDR.W           R0, [R8]; jumptable 000044B2 case 5|216-248-0-0
17600|code|LDR             R1, [SP,#0x88+var_50]; char *|14-153
17602|code|LDR             R2, [SP,#0x88+var_4C]|15-154
17604|code|BLX             wprintw|253-247-196-236
17608|code|LDR             R3, [SP,#0x88+var_6C]; jumptable 000044B2 default case|7-155
17610|code|ADD.W           R11, R11, #1|11-241-1-11
17614|code|CMP             R9, R11|217-69
17616|code|ADD.W           R4, R4, #1|4-241-1-4
17620|code|MOV             R2, R3|26-70
17622|code|ITE LE|212-191
17624|code|MOVLE           R3, #0|0-35
17626|code|MOVGT           R3, #1|1-35
17628|code|CMP             R11, R2|147-69
17630|code|IT GE|168-191
17632|code|MOVGE           R3, #0|0-35
17634|code|CMP             R3, #0|0-43
17636|code|BNE             loc_4462|189-209
17638|code|LDR             R6, [SP,#0x88+var_70]|6-158
17640|code|LDR             R7, [SP,#0x88+var_64]|9-159
17642|code|CBZ             R6, loc_4514|158-177
17644|code|LDR             R3, [SP,#0x88+var_34]|21-155
17646|code|MOVS            R1, #1; int|1-33
17648|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17652|code|SUB.W           R2, R3, #8; int|163-241-8-2
17656|code|LDR.W           R3, =(aMore - 0x4500); " More "|223-248-164-52
17660|code|ADD             R3, PC; " More "|123-68
17662|code|BLX             mvwprintw|253-247-52-237
17666|code|LDR.W           R3, =(byte_1A0+4)|223-248-152-52
17670|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17674|code|LDR             R3, [R7,R3]|251-88
17676|code|LDR.W           R1, [R3,#0xB4]; chtype|211-248-180-16
17680|code|BLX             waddch|253-247-136-235
17684|code|LDR             R2, [SP,#0x88+var_6C]|7-154
17686|code|RSB.W           R3, R6, R9|198-235-9-3
17690|code|CMP             R3, R2|147-66
17692|code|BGT.W           loc_4664|0-243-162-128
17696|code|MOVS            R4, #0|0-36
17698|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17702|code|MOV             R2, R4; chtype|34-70
17704|code|MOV             R3, R4; chtype|35-70
17706|code|MOV             R1, R4; chtype|33-70
17708|code|STR             R4, [SP,#0x88+var_88]; chtype|0-148
17710|code|STR             R4, [SP,#0x88+var_84]; chtype|1-148
17712|code|STR             R4, [SP,#0x88+var_80]; chtype|2-148
17714|code|STR             R4, [SP,#0x88+var_7C]; chtype|3-148
17716|code|STR             R4, [SP,#0x88+var_78]; chtype|4-148
17718|code|BLX             wborder|253-247-196-235
17722|code|LDR.W           R1, =(aDisksAndPartit - 0x4546); " Disks and Partitions "|223-248-104-20
17726|code|LDR.W           R0, [R8]|216-248-0-0
17730|code|ADD             R1, PC; " Disks and Partitions "|121-68
17732|code|BL              sub_2FC0|254-247-60-253
17736|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17740|code|BLX             wrefresh|253-247-210-235
17744|code|LDR             R3, [SP,#0x88+var_40]|18-155
17746|code|LDR             R0, [R3]; WINDOW *|24-104
17748|code|BLX             wgetch|253-247-252-236
17752|code|CMP             R0, #0x62 ; 'b'|98-40
17754|code|MOV             R4, R0|4-70
17756|code|BEQ.W           loc_4784|0-240-18-129
17760|code|BGT             loc_4642|111-220
17762|code|CMP             R0, #0x4B ; 'K'|75-40
17764|code|BEQ.W           loc_475A|0-240-249-128
17768|code|BLE.W           loc_472C|64-243-224-128
17772|code|CMP             R0, #0x50 ; 'P'|80-40
17774|code|BEQ             loc_465E|118-208
17776|code|BLE.W           loc_4772|64-243-255-128
17780|code|CMP             R0, #0x52 ; 'R'|82-40
17782|code|BEQ.W           loc_477E|0-240-2-129
17786|code|CMP             R0, #0x56 ; 'V'|86-40
17788|code|BNE             loc_4582|1-209
17790|code|BL              sub_3958|255-247-235-249
17794|code|CMP.W           R4, #0xFFFFFFFF|180-241-255-63
17798|code|IT NE|24-191
17800|code|CMPNE           R4, #0x53 ; 'S'|83-44
17802|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17806|code|BNE.W           loc_440E|127-244-62-175
17810|code|BLX             werase|253-247-76-237
17814|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17818|code|BLX             wrefresh|253-247-172-235
17822|code|LDR             R4, [SP,#0x88+var_48]|16-156
17824|code|LDR             R0, [R4]; WINDOW *|32-104
17826|code|BLX             werase|253-247-68-237
17830|code|LDR             R0, [R4]; WINDOW *|32-104
17832|code|ADD             SP, SP, #0x64 ; 'd'|25-176
17834|code|POP.W           {R4-R11,LR}|189-232-240-79
17838|code|B.W             sub_1CF0|253-247-159-187
17842|code|LDR             R1, [SP,#0x88+var_5C]; jumptable 000044B2 case 4|11-153
17844|code|ADD.W           R0, R2, #0x228|2-245-10-112
17848|code|LDR.W           LR, [R2,#0x29C]|210-248-156-226
17852|code|LDR.W           R3, [R2,#0x220]|210-248-32-50
17856|code|ADDW            R2, R2, #0x4C4|2-242-196-66
17860|code|STR             R2, [SP,#0x88+var_84]|1-146
17862|code|STR.W           LR, [SP,#0x88+var_88]|205-248-0-224
17866|code|MOV             R2, R4|34-70
17868|code|LDRD.W          R6, R7, [R0]|208-233-0-103
17872|code|STRD.W          R6, R7, [SP,#0x88+var_80]|205-233-2-103
17876|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17880|code|BLX             wprintw|253-247-58-236
17884|code|B               def_44B2; jumptable 000044B2 default case|116-231
17886|code|LDR.W           R0, [R2,#0x29C]; jumptable 000044B2 case 1|210-248-156-2
17890|code|ADD.W           R1, R2, #0x228|2-245-10-113
17894|code|LDR.W           R3, [R2,#0x220]|210-248-32-50
17898|code|ADDW            R2, R2, #0x4C4|2-242-196-66
17902|code|STR             R2, [SP,#0x88+var_84]|1-146
17904|code|MOV             R2, R4|34-70
17906|code|STR             R0, [SP,#0x88+var_88]|0-144
17908|code|LDRD.W          R0, R1, [R1]|209-233-0-1
17912|code|STRD.W          R0, R1, [SP,#0x88+var_80]|205-233-2-1
17916|code|LDR             R1, =(aWipeISSSLldByt - 0x4606); " [wipe] %i. %s - %s %s (%lld bytes)"|234-73
17918|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17922|code|ADD             R1, PC; " [wipe] %i. %s - %s %s (%lld bytes)"|121-68
17924|code|BLX             wprintw|253-247-36-236
17928|code|B               def_44B2; jumptable 000044B2 default case|94-231
17930|code|LDR.W           LR, [R2,#0x29C]; jumptable 000044B2 case 3|210-248-156-226
17934|code|ADD.W           R0, R2, #0x228|2-245-10-112
17938|code|LDR.W           R3, [R2,#0x220]|210-248-32-50
17942|code|ADDW            R2, R2, #0x4C4|2-242-196-66
17946|code|LDR             R1, [SP,#0x88+var_54]|13-153
17948|code|STR             R2, [SP,#0x88+var_84]|1-146
17950|code|B               loc_45C6|210-231
17952|code|LDR.W           LR, [R2,#0x29C]; jumptable 000044B2 case 2|210-248-156-226
17956|code|ADD.W           R0, R2, #0x228|2-245-10-112
17960|code|LDR.W           R3, [R2,#0x220]|210-248-32-50
17964|code|ADDW            R2, R2, #0x4C4|2-242-196-66
17968|code|LDR             R1, [SP,#0x88+var_58]|12-153
17970|code|STR             R2, [SP,#0x88+var_84]|1-146
17972|code|B               loc_45C6|199-231
17974|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
17978|code|MOVS            R1, #0x20 ; ' '; chtype|32-33
17980|code|BLX             waddch|253-247-242-234
17984|code|B               loc_44A4|48-231
17986|code|CMP             R0, #0x72 ; 'r'|114-40
17988|code|BEQ.W           loc_477E|0-240-155-128
17992|code|BGT             loc_468C|32-220
17994|code|CMP             R0, #0x6B ; 'k'|107-40
17996|code|BEQ.W           loc_475A|0-240-133-128
18000|code|BLE.W           loc_4814|64-243-224-128
18004|code|CMP             R0, #0x6D ; 'm'|109-40
18006|code|BEQ.W           loc_4778|0-240-143-128
18010|code|CMP             R0, #0x70 ; 'p'|112-40
18012|code|BNE             loc_4582|145-209
18014|code|BL              sub_36A4|255-247-33-248
18018|code|B               loc_4582|142-231
18020|code|LDR             R3, [SP,#0x88+var_30]|22-155
18022|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
18026|code|SUBS            R1, R3, #2; int|153-30
18028|code|LDR             R3, [SP,#0x88+var_34]|21-155
18030|code|SUB.W           R2, R3, #8; int|163-241-8-2
18034|code|LDR             R3, =(aMore - 0x4678); " More "|206-75
18036|code|ADD             R3, PC; " More "|123-68
18038|code|BLX             mvwprintw|253-247-120-236
18042|code|LDR             R3, =(byte_1A0+4)|200-75
18044|code|LDR.W           R0, [R8]; WINDOW *|216-248-0-0
18048|code|LDR             R3, [R7,R3]|251-88
18050|code|LDR.W           R1, [R3,#0xB8]; chtype|211-248-184-16
18054|code|BLX             waddch|253-247-206-234
18058|code|B               loc_4520|73-231
18060|code|CMP.W           R0, #0x102|176-245-129-127
18064|code|BEQ             loc_473C|84-208
18066|code|BLE             loc_478A|122-221
18068|code|MOVW            R3, #0x103|64-242-3-19
18072|code|CMP             R0, R3|152-66
18074|code|BEQ             loc_475A|94-208
18076|code|MOVW            R3, #0x157|64-242-87-19
18080|code|CMP             R0, R3|152-66
18082|code|BNE.W           loc_4582|127-244-110-175
18086|code|LDR             R3, [SP,#0x88+var_44]|17-155
18088|code|LDR.W           R1, [R3,R10,LSL#2]|83-248-42-16
18092|code|LDR.W           R3, [R1,#0x308]|209-248-8-51
18096|code|CMP             R3, #1|1-43
18098|code|BEQ             loc_47A6|120-208
18100|code|CMP             R3, #3|3-43
18102|code|BNE.W           loc_4582|127-244-100-175
18106|code|LDR.W           R0, [R1,#0x21C]|209-248-28-2
18110|code|MOVS            R3, #1|1-35
18112|code|STR.W           R3, [R1,#0x308]|193-248-8-51
18116|code|LDR             R3, [SP,#0x88+var_2C]|23-155
18118|code|CMP             R0, #0|0-40
18120|code|BNE.W           loc_488A|64-240-223-128
18124|code|CMP             R3, #0|0-43
18126|code|BEQ.W           loc_4582|63-244-88-175
18130|code|LDR             R3, [SP,#0x88+var_44]|17-155
18132|code|MOVS            R2, #2|2-34
18134|code|LDR.W           R12, [R1,#0x288]|209-248-136-194
18138|code|MOV             R11, R6|179-70
18140|code|SUBS            R5, R3, #4|29-31
18142|code|MOV             LR, R4|166-70
18144|code|B               loc_46E8|2-224
18146|code|CMP             R9, R0|129-69
18148|code|BLE.W           loc_48EA|64-243-1-129
18152|code|LDR.W           R3, [R5,#4]!|85-248-4-63
18156|code|ADDS            R0, #1|1-48
18158|code|LDR.W           R4, [R3,#0x288]|211-248-136-66
18162|code|CMP             R4, R12|100-69
18164|code|BNE             loc_46E2|245-209
18166|code|LDR             R6, [R3,#0xC]|222-104
18168|code|LDR             R4, [R1,#0xC]|204-104
18170|code|CMP             R6, R4|166-66
18172|code|BNE             loc_46E2|241-209
18174|code|LDR             R6, [R3,#4]|94-104
18176|code|LDR             R4, [R1,#4]|76-104
18178|code|CMP             R6, R4|166-66
18180|code|BNE             loc_46E2|237-209
18182|code|LDR.W           R6, [R3,#0x28C]|211-248-140-98
18186|code|LDR.W           R4, [R1,#0x28C]|209-248-140-66
18190|code|CMP             R6, R4|166-66
18192|code|BNE             loc_46E2|231-209
18194|code|LDR.W           R6, [R3,#0x210]|211-248-16-98
18198|code|LDR.W           R4, [R1,#0x210]|209-248-16-66
18202|code|CMP             R6, R4|166-66
18204|code|BNE             loc_46E2|225-209
18206|code|LDR.W           R4, [R3,#0x21C]|211-248-28-66
18210|code|CMP             R4, #0|0-44
18212|code|IT GT|200-191
18214|code|STRGT.W         R2, [R3,#0x308]|195-248-8-35
18218|code|B               loc_46E2|218-231
18220|code|CMP             R0, #0x20 ; ' '|32-40
18222|code|BEQ             loc_46A6|186-208
18224|code|BLE             loc_4792|47-221
18226|code|CMP             R0, #0x42 ; 'B'|66-40
18228|code|BEQ             loc_4784|38-208
18230|code|CMP             R0, #0x4A ; 'J'|74-40
18232|code|BNE.W           loc_4582|127-244-35-175
18236|code|ADD.W           R10, R10, #1|10-241-1-10
18240|code|CMP             R9, R10|209-69
18242|code|IT LE|216-191
18244|code|ADDLE.W         R10, R9, #0xFFFFFFFF|9-241-255-58
18248|code|BLE.W           loc_4582|127-247-27-175
18252|code|LDR             R2, [SP,#0x88+var_6C]|7-154
18254|code|RSB.W           R3, R6, R10|198-235-10-3
18258|code|CMP             R3, R2|147-66
18260|code|IT GE|168-191
18262|code|ADDGE           R6, #1|1-54
18264|code|B               loc_4582|19-231
18266|code|SUBS.W          R10, R10, #1|186-241-1-10
18270|code|IT MI|72-191
18272|code|MOVMI.W         R10, #0|79-240-0-10
18276|code|BMI.W           loc_4582|63-245-13-175
18280|code|CMP             R6, R10|86-69
18282|code|IT GT|200-191
18284|code|ADDGT.W         R6, R6, #0xFFFFFFFF|6-241-255-54
18288|code|B               loc_4582|7-231
18290|code|CMP             R0, #0x4D ; 'M'|77-40
18292|code|BNE.W           loc_4582|127-244-5-175
18296|code|BL              sub_3E04|255-247-68-251
18300|code|B               loc_4582|1-231
18302|code|BL              sub_3530|254-247-215-254
18306|code|B               loc_4582|254-230
18308|code|BL              sub_3BF4|255-247-54-250
18312|code|B               loc_4582|251-230
18314|code|CMP             R0, #0x76 ; 'v'|118-40
18316|code|BEQ.W           loc_457E|63-244-247-174
18320|code|B               loc_4582|247-230
18322|code|CMP             R0, #0xA|10-40
18324|code|BNE.W           loc_4582|127-244-245-174
18328|code|LDR             R3, [SP,#0x88+var_44]|17-155
18330|code|LDR.W           R1, [R3,R10,LSL#2]|83-248-42-16
18334|code|LDR.W           R3, [R1,#0x308]|209-248-8-51
18338|code|CMP             R3, #1|1-43
18340|code|BNE             loc_46B4|134-209
18342|code|LDR.W           R0, [R1,#0x21C]|209-248-28-2
18346|code|MOVS            R3, #3|3-35
18348|code|STR.W           R3, [R1,#0x308]|193-248-8-51
18352|code|CBNZ            R0, loc_481A|152-187
18354|code|LDR             R2, [SP,#0x88+var_2C]|23-154
18356|code|CMP             R2, #0|0-42
18358|code|BEQ.W           loc_4582|63-244-228-174
18362|code|LDR             R2, [SP,#0x88+var_44]|17-154
18364|code|MOV             R11, R6|179-70
18366|code|LDR.W           R12, [R1,#0x288]|209-248-136-194
18370|code|MOV             LR, R4|166-70
18372|code|SUBS            R5, R2, #4|21-31
18374|code|MOV             R2, R3|26-70
18376|code|B               loc_47D0|2-224
18378|code|CMP             R9, R0|129-69
18380|code|BLE.W           loc_48EA|64-243-141-128
18384|code|LDR.W           R3, [R5,#4]!|85-248-4-63
18388|code|ADDS            R0, #1|1-48
18390|code|LDR.W           R4, [R3,#0x288]|211-248-136-66
18394|code|CMP             R4, R12|100-69
18396|code|BNE             loc_47CA|245-209
18398|code|LDR             R6, [R3,#0xC]|222-104
18400|code|LDR             R4, [R1,#0xC]|204-104
18402|code|CMP             R6, R4|166-66
18404|code|BNE             loc_47CA|241-209
18406|code|LDR             R6, [R3,#4]|94-104
18408|code|LDR             R4, [R1,#4]|76-104
18410|code|CMP             R6, R4|166-66
18412|code|BNE             loc_47CA|237-209
18414|code|LDR.W           R6, [R3,#0x28C]|211-248-140-98
18418|code|LDR.W           R4, [R1,#0x28C]|209-248-140-66
18422|code|CMP             R6, R4|166-66
18424|code|BNE             loc_47CA|231-209
18426|code|LDR.W           R6, [R3,#0x210]|211-248-16-98
18430|code|LDR.W           R4, [R1,#0x210]|209-248-16-66
18434|code|CMP             R6, R4|166-66
18436|code|BNE             loc_47CA|225-209
18438|code|LDR.W           R4, [R3,#0x21C]|211-248-28-66
18442|code|CMP             R4, #0|0-44
18444|code|IT GT|200-191
18446|code|STRGT.W         R2, [R3,#0x308]|195-248-8-35
18450|code|B               loc_47CA|218-231
18452|code|CMP             R0, #0x6A ; 'j'|106-40
18454|code|BEQ             loc_473C|145-208
18456|code|B               loc_4582|179-230
18458|code|LDR             R3, [SP,#0x88+var_2C]|23-155
18460|code|CMP             R3, #0|0-43
18462|code|BEQ.W           loc_4582|63-244-176-174
18466|code|LDR             R3, [SP,#0x88+var_44]|17-155
18468|code|MOVS            R2, #0|0-34
18470|code|MOV             R11, R10|211-70
18472|code|STR             R6, [SP,#0x88+var_70]|6-150
18474|code|SUB.W           LR, R3, #4|163-241-4-14
18478|code|LDR.W           R12, [R1,#0x288]|209-248-136-194
18482|code|MOV             R0, R2|16-70
18484|code|MOV             R10, R4|162-70
18486|code|MOV             R5, LR|117-70
18488|code|MOV             R6, R2|22-70
18490|code|B               loc_4840|1-224
18492|code|CMP             R9, R0|129-69
18494|code|BLE             loc_48F0|87-221
18496|code|LDR.W           R3, [R5,#4]!|85-248-4-63
18500|code|ADDS            R0, #1|1-48
18502|code|LDR.W           R4, [R3,#0x288]|211-248-136-66
18506|code|CMP             R4, R12|100-69
18508|code|BNE             loc_483C|246-209
18510|code|LDR             R4, [R3,#0xC]|220-104
18512|code|LDR             R2, [R1,#0xC]|202-104
18514|code|CMP             R4, R2|148-66
18516|code|BNE             loc_483C|242-209
18518|code|LDR             R4, [R3,#4]|92-104
18520|code|LDR             R2, [R1,#4]|74-104
18522|code|CMP             R4, R2|148-66
18524|code|BNE             loc_483C|238-209
18526|code|LDR.W           R4, [R3,#0x28C]|211-248-140-66
18530|code|LDR.W           R2, [R1,#0x28C]|209-248-140-34
18534|code|CMP             R4, R2|148-66
18536|code|BNE             loc_483C|232-209
18538|code|LDR.W           R4, [R3,#0x210]|211-248-16-66
18542|code|LDR.W           R2, [R1,#0x210]|209-248-16-34
18546|code|CMP             R4, R2|148-66
18548|code|BNE             loc_483C|226-209
18550|code|LDR.W           R4, [R3,#0x21C]|211-248-28-66
18554|code|CMP             R4, #0|0-44
18556|code|BLE             loc_483C|222-221
18558|code|LDR.W           R3, [R3,#0x308]|211-248-8-51
18562|code|CMP             R3, #1|1-43
18564|code|IT EQ|8-191
18566|code|ADDEQ           R6, #1|1-54
18568|code|B               loc_483C|216-231
18570|code|CMP             R3, #0|0-43
18572|code|BEQ.W           loc_4582|63-244-121-174
18576|code|LDR             R3, [SP,#0x88+var_44]|17-155
18578|code|MOVS            R5, #0|0-37
18580|code|LDR.W           R12, [R1,#0x288]|209-248-136-194
18584|code|MOVS            R0, #4|4-32
18586|code|SUBS            R2, R3, #4|26-31
18588|code|MOV             R11, R6|179-70
18590|code|MOV             LR, R4|166-70
18592|code|B               loc_48A6|1-224
18594|code|CMP             R9, R5|169-69
18596|code|BLE             loc_48EA|33-221
18598|code|LDR.W           R3, [R2,#4]!|82-248-4-63
18602|code|ADDS            R5, #1|1-53
18604|code|LDR.W           R4, [R3,#0x288]|211-248-136-66
18608|code|CMP             R4, R12|100-69
18610|code|BNE             loc_48A2|246-209
18612|code|LDR             R6, [R3,#0xC]|222-104
18614|code|LDR             R4, [R1,#0xC]|204-104
18616|code|CMP             R6, R4|166-66
18618|code|BNE             loc_48A2|242-209
18620|code|LDR             R6, [R3,#4]|94-104
18622|code|LDR             R4, [R1,#4]|76-104
18624|code|CMP             R6, R4|166-66
18626|code|BNE             loc_48A2|238-209
18628|code|LDR.W           R6, [R3,#0x28C]|211-248-140-98
18632|code|LDR.W           R4, [R1,#0x28C]|209-248-140-66
18636|code|CMP             R6, R4|166-66
18638|code|BNE             loc_48A2|232-209
18640|code|LDR.W           R6, [R3,#0x210]|211-248-16-98
18644|code|LDR.W           R4, [R1,#0x210]|209-248-16-66
18648|code|CMP             R6, R4|166-66
18650|code|BNE             loc_48A2|226-209
18652|code|LDR.W           R4, [R3,#0x21C]|211-248-28-66
18656|code|CMP             R4, #0|0-44
18658|code|BNE             loc_48A2|222-209
18660|code|STR.W           R0, [R3,#0x308]|195-248-8-3
18664|code|B               loc_48A2|219-231
18666|code|MOV             R6, R11|94-70
18668|code|MOV             R4, LR|116-70
18670|code|B               loc_4582|72-230
18672|code|MOV             R2, R6|50-70
18674|code|MOV             R4, R10|84-70
18676|code|LDR             R6, [SP,#0x88+var_70]|6-158
18678|code|MOV             R10, R11|218-70
18680|code|CMP             R2, #0|0-42
18682|code|BNE.W           loc_4582|127-244-66-174
18686|code|MOV             R5, LR|117-70
18688|code|MOV             R0, R2|16-70
18690|code|MOV             R11, R6|179-70
18692|code|MOVS            R2, #3|3-34
18694|code|MOV             LR, R4|166-70
18696|code|B               loc_490E|1-224
18698|code|CMP             R9, R0|129-69
18700|code|BLE             loc_48EA|237-221
18702|code|LDR.W           R3, [R5,#4]!|85-248-4-63
18706|code|ADDS            R0, #1|1-48
18708|code|LDR.W           R4, [R3,#0x288]|211-248-136-66
18712|code|CMP             R4, R12|100-69
18714|code|BNE             loc_490A|246-209
18716|code|LDR             R6, [R3,#0xC]|222-104
18718|code|LDR             R4, [R1,#0xC]|204-104
18720|code|CMP             R6, R4|166-66
18722|code|BNE             loc_490A|242-209
18724|code|LDR             R6, [R3,#4]|94-104
18726|code|LDR             R4, [R1,#4]|76-104
18728|code|CMP             R6, R4|166-66
18730|code|BNE             loc_490A|238-209
18732|code|LDR.W           R6, [R3,#0x28C]|211-248-140-98
18736|code|LDR.W           R4, [R1,#0x28C]|209-248-140-66
18740|code|CMP             R6, R4|166-66
18742|code|BNE             loc_490A|232-209
18744|code|LDR.W           R6, [R3,#0x210]|211-248-16-98
18748|code|LDR.W           R4, [R1,#0x210]|209-248-16-66
18752|code|CMP             R6, R4|166-66
18754|code|BNE             loc_490A|226-209
18756|code|LDR.W           R4, [R3,#0x21C]|211-248-28-66
18760|code|CMP             R4, #0|0-44
18762|code|BNE             loc_490A|222-209
18764|code|STR.W           R2, [R3,#0x308]|195-248-8-35
18768|code|B               loc_490A|219-231
18770|code|CMP             R6, #0|0-46
18772|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
18776|code|STR             R0, [SP,#0x88+var_3C]|19-144
18778|code|STR             R3, [SP,#0x88+var_30]|22-147
18780|code|ITE LE|212-191
18782|code|MOVLE           R2, #0|0-34
18784|code|MOVGT           R2, #1|1-34
18786|code|STR             R3, [SP,#0x88+var_34]|21-147
18788|code|STR             R2, [SP,#0x88+var_2C]|23-146
18790|code|MOV             R3, #0xFFFFFFFB|111-240-4-3
18794|code|STR             R3, [SP,#0x88+var_6C]|7-147
18796|code|B               loc_43D4|50-229
18798|data|ALIGN 0x10|0-191
18800|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4398|44-122-1-0
18804|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
18808|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
18812|data|DCD off_1C008 - 0x43E8; " Statistics "|32-124-1-0
18816|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
18820|data|DCD asc_964C+0x2C - 0x43F8; " "|128-82-0-0
18824|data|DCD aS - 0x4400; " [????] %s"|248-89-0-0
18828|data|DCD aUnrecognizedDe - 0x4408; "Unrecognized Device"|252-89-0-0
18832|data|DCD aISSSLldBytes - 0x444A; " [----] %i. %s - %s %s (%lld bytes)"|138-89-0-0
18836|data|DCD aISSSLldBytes_0 - 0x445A; " [****] %i. %s - %s %s (%lld bytes)"|86-89-0-0
18840|data|DCD aISSSLldBytes_1 - 0x4462; " [    ] %i. %s - %s %s (%lld bytes)"|42-89-0-0
18844|data|DCD byte_1A0+4|164-1-0-0
18848|data|DCD aMore - 0x4500; " More "|24-89-0-0
18852|data|DCD aDisksAndPartit - 0x4546; " Disks and Partitions "|218-88-0-0
18856|data|DCD aWipeISSSLldByt - 0x4606; " [wipe] %i. %s - %s %s (%lld bytes)"|98-87-0-0
18860|data|DCD aMore - 0x4678; " More "|160-87-0-0
18864|code|PUSH            {R4-R7,LR}|240-181
18866|code|SUB             SP, SP, #0x2C|139-176
18868|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x49BC)|48-77
18870|code|LDR             R3, =(__stack_chk_guard_ptr - 0x1BDC4)|49-75
18872|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
18874|code|LDR             R0, =(aProcLoadavg - 0x49C4); "/proc/loadavg"|49-72
18876|code|LDR             R1, =(aR - 0x49C6); "r"|49-73
18878|code|LDR             R7, [R5,R3]; __stack_chk_guard|239-88
18880|code|ADD             R0, PC; "/proc/loadavg"|120-68
18882|code|ADD             R1, PC; "r"|121-68
18884|code|LDR             R4, =(stats_window_ptr - 0x1BDC4)|48-76
18886|code|LDR             R3, [R7]|59-104
18888|code|STR             R3, [SP,#0x40+var_1C]|9-147
18890|code|BLX             fopen|253-247-14-233
18894|code|LDR             R4, [R5,R4]; stats_window|44-89
18896|code|MOVS            R1, #3; int|3-33
18898|code|LDR             R3, =(aLoadAverages_0 - 0x49DA); "Load Averages:"|46-75
18900|code|MOVS            R2, #1; int|1-34
18902|code|ADD             R3, PC; "Load Averages:"|123-68
18904|code|MOV             R6, R0|6-70
18906|code|LDR             R0, [R4]; WINDOW *|32-104
18908|code|BLX             mvwprintw|253-247-196-234
18912|code|CMP             R6, #0|0-46
18914|code|BEQ             loc_4A58|57-208
18916|code|LDR             R1, =(aFFF - 0x49F2); "%f %f %f"|42-73
18918|code|ADD             R3, SP, #0x40+var_20|8-171
18920|code|MOV             R0, R6|48-70
18922|code|STR             R3, [SP,#0x40+var_40]|0-147
18924|code|ADD             R2, SP, #0x40+var_28|6-170
18926|code|ADD             R1, PC; "%f %f %f"|121-68
18928|code|ADD             R3, SP, #0x40+var_24|7-171
18930|code|BLX             __isoc99_fscanf|253-247-244-232
18934|code|CMP             R0, #3|3-40
18936|code|BEQ             loc_4A24|20-208
18938|code|BLX             __errno_location|253-247-66-234
18942|code|LDR             R5, [R4]|37-104
18944|code|LDR             R3, =(aFscanfErrorI - 0x4A0A); "(fscanf error %i)"|36-75
18946|code|MOVS            R1, #3; int|3-33
18948|code|MOVS            R2, #0x10; int|16-34
18950|code|ADD             R3, PC; "(fscanf error %i)"|123-68
18952|code|LDR             R4, [R0]|4-104
18954|code|MOV             R0, R5; WINDOW *|40-70
18956|code|STR             R4, [SP,#0x40+var_40]|0-148
18958|code|BLX             mvwprintw|253-247-172-234
18962|code|MOV             R0, R6; stream|48-70
18964|code|BLX             fclose|253-247-136-234
18968|code|LDR             R2, [SP,#0x40+var_1C]|9-154
18970|code|LDR             R3, [R7]|59-104
18972|code|CMP             R2, R3|154-66
18974|code|BNE             loc_4A72|40-209
18976|code|ADD             SP, SP, #0x2C ; ','|11-176
18978|code|POP             {R4-R7,PC}|240-189
18980|code|VLDR            S10, [SP,#0x40+var_28]|157-237-6-90
18984|code|MOV             R1, R0; int|1-70
18986|code|LDR             R3, =(a042f042f042f - 0x4A38); "%04.2f %04.2f %04.2f"|27-75
18988|code|MOVS            R2, #0x10; int|16-34
18990|code|LDR             R0, [R4]; WINDOW *|32-104
18992|code|VLDR            S12, [SP,#0x40+var_24]|157-237-7-106
18996|code|ADD             R3, PC; "%04.2f %04.2f %04.2f"|123-68
18998|code|VLDR            S14, [SP,#0x40+var_20]|157-237-8-122
19002|code|VCVT.F64.F32    D5, S10|183-238-197-90
19006|code|VCVT.F64.F32    D6, S12|183-238-198-106
19010|code|VSTR            D5, [SP,#0x40+var_40]|141-237-0-91
19014|code|VCVT.F64.F32    D7, S14|183-238-199-122
19018|code|VSTR            D6, [SP,#0x40+var_38]|141-237-2-107
19022|code|VSTR            D7, [SP,#0x40+var_30]|141-237-4-123
19026|code|BLX             mvwprintw|253-247-138-234
19030|code|B               loc_4A12|220-231
19032|code|BLX             __errno_location|253-247-18-234
19036|code|LDR             R5, [R4]|37-104
19038|code|LDR             R3, =(aFopenErrorI - 0x4A68); "(fopen error %i)"|15-75
19040|code|MOVS            R1, #3; int|3-33
19042|code|MOVS            R2, #0x10; int|16-34
19044|code|ADD             R3, PC; "(fopen error %i)"|123-68
19046|code|LDR             R4, [R0]|4-104
19048|code|MOV             R0, R5; WINDOW *|40-70
19050|code|STR             R4, [SP,#0x40+var_40]|0-148
19052|code|BLX             mvwprintw|253-247-124-234
19056|code|B               loc_4A18|210-231
19058|code|BLX             __stack_chk_fail|253-247-56-233
19062|data|ALIGN 4|0-191
19064|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x49BC|8-116-1-0
19068|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
19072|data|DCD aProcLoadavg - 0x49C4; "/proc/loadavg"|116-84-0-0
19076|data|DCD aR - 0x49C6; "r"|130-84-0-0
19080|data|DCD stats_window_ptr - 0x1BDC4|196-1-0-0
19084|data|DCD aLoadAverages_0 - 0x49DA; "Load Averages:"|114-84-0-0
19088|data|DCD aFFF - 0x49F2; "%f %f %f"|106-84-0-0
19092|data|DCD aFscanfErrorI - 0x4A0A; "(fscanf error %i)"|118-84-0-0
19096|data|DCD a042f042f042f - 0x4A38; "%04.2f %04.2f %04.2f"|48-84-0-0
19100|data|DCD aFopenErrorI - 0x4A68; "(fopen error %i)"|44-84-0-0
19104|code|PUSH.W          {R4-R11,LR}|45-233-240-79
19108|code|MOV             R9, R3|153-70
19110|code|LDR.W           R3, [R0,#0x17C]|208-248-124-49
19114|code|SUB             SP, SP, #0xC|131-176
19116|code|LDR             R6, [SP,#0x30+arg_0]|12-158
19118|code|CMP             R3, #0|0-43
19120|code|BEQ             loc_4B30|62-208
19122|code|SUBS            R3, R6, R3|243-26
19124|code|CMP             R3, #9|9-43
19126|code|BLE             loc_4B2A|56-221
19128|code|LDR.W           R1, [R0,#0x180]|208-248-128-17
19132|code|MOV             R8, R2|144-70
19134|code|LDRD.W          R4, R5, [R0,#0xF8]|208-233-62-69
19138|code|ADDS            R7, R1, #1|79-28
19140|code|LDR.W           R2, [R0,#0x178]|208-248-120-33
19144|code|ADD.W           LR, R0, R1,LSL#3|0-235-193-14
19148|code|SUBS.W          R10, R8, R4|184-235-4-10
19152|code|SBC.W           R11, R9, R5|105-235-5-11
19156|code|STRD.W          R10, R11, [SP,#0x30+var_30]|205-233-0-171
19160|code|LDRD.W          R4, R5, [LR]|222-233-0-69
19164|code|ADD.W           R1, R0, R1,LSL#2|0-235-129-1
19168|code|LDRD.W          R10, R11, [R0,#0xF0]|208-233-60-171
19172|code|LDR.W           R12, [R1,#0x100]|209-248-0-193
19176|code|SUBS.W          R10, R10, R4|186-235-4-10
19180|code|SBC.W           R11, R11, R5|107-235-5-11
19184|code|LDRD.W          R4, R5, [SP,#0x30+var_30]|221-233-0-69
19188|code|RSB.W           R2, R12, R2|204-235-2-2
19192|code|ADD             R2, R3|26-68
19194|code|STRD.W          R4, R5, [LR]|206-233-0-69
19198|code|ADDS.W          R4, R4, R10|20-235-10-4
19202|code|ADC.W           R5, R5, R11|69-235-11-5
19206|code|CMP             R7, #0x1D|29-47
19208|code|STR.W           R3, [R1,#0x100]|193-248-0-49
19212|code|IT HI|136-191
19214|code|MOVHI           R3, #0|0-35
19216|code|STRD.W          R4, R5, [R0,#0xF0]|192-233-60-69
19220|code|STR.W           R2, [R0,#0x178]|192-248-120-33
19224|code|STRD.W          R8, R9, [R0,#0xF8]|192-233-62-137
19228|code|STR.W           R6, [R0,#0x17C]|192-248-124-97
19232|code|ITE LS|148-191
19234|code|STRLS.W         R7, [R0,#0x180]|192-248-128-113
19238|code|STRHI.W         R3, [R0,#0x180]|192-248-128-49
19242|code|ADD             SP, SP, #0xC|3-176
19244|code|POP.W           {R4-R11,PC}|189-232-240-143
19248|code|STR.W           R6, [R0,#0x17C]|192-248-124-97
19252|code|ADD             SP, SP, #0xC|3-176
19254|code|POP.W           {R4-R11,PC}|189-232-240-143
19258|data|ALIGN 4|0-191
19260|code|MOV             R3, R0|3-70
19262|code|MOVS            R0, #0; timer|0-32
19264|code|PUSH.W          {R4-R11,LR}|45-233-240-79
19268|code|LDM.W           R3, {R4,R7}|147-232-144-0
19272|code|VPUSH           {D8-D9}|45-237-4-139
19276|code|LDR.W           R8, [R7,#4]|215-248-4-128
19280|code|SUB             SP, SP, #0x24|137-176
19282|code|BLX             time|253-247-158-232
19286|code|CMP.W           R8, #0|184-241-0-15
19290|code|BLE.W           loc_4CB2|64-243-170-128
19294|code|MOV.W           R11, #0|79-240-0-11
19298|code|VLDR            D9, =100.0|159-237-85-155
19302|code|SUBS            R6, R4, #4|38-31
19304|code|MOV             R10, R11|218-70
19306|code|MOV             R5, R8|69-70
19308|code|STR             R0, [SP,#0x58+var_3C]|7-144
19310|code|B               loc_4B9C|21-224
19312|code|ADD.W           R3, R4, #0x2B0|4-245-44-115
19316|code|ADD.W           R4, R4, #0x4A8|4-245-149-100
19320|code|LDRD.W          R8, R9, [R7,#0x18]|215-233-6-137
19324|code|ADD.W           R11, R11, #1|11-241-1-11
19328|code|LDRD.W          R0, R1, [R3]|211-233-0-1
19332|code|LDRD.W          R2, R3, [R4]|212-233-0-35
19336|code|ADDS.W          R0, R0, R8|16-235-8-0
19340|code|ADC.W           R1, R1, R9|65-235-9-1
19344|code|ADDS            R2, R2, R0|18-24
19346|code|ADCS            R3, R1|75-65
19348|code|CMP             R11, R5|171-69
19350|code|STRD.W          R2, R3, [R7,#0x18]|199-233-6-35
19354|code|BEQ             loc_4C7E|112-208
19356|code|LDR.W           R4, [R6,#4]!|86-248-4-79
19360|code|LDR.W           R3, [R4,#0x49C]|212-248-156-52
19364|code|CMP             R3, #0|0-43
19366|code|BEQ             loc_4B70|227-208
19368|code|LDR             R1, [SP,#0x58+var_3C]|7-153
19370|code|ADD.W           R3, R4, #0x2E0|4-245-56-115
19374|code|ADD.W           R0, R4, #0x310|4-245-68-112
19378|code|ADD.W           R10, R10, #1|10-241-1-10
19382|code|LDRD.W          R2, R3, [R3]|211-233-0-35
19386|code|STR             R1, [SP,#0x58+var_58]|0-145
19388|code|BL              sub_4AA0|255-247-112-255
19392|code|LDR             R4, [R6]|52-104
19394|code|ADD.W           R0, R4, #0x400|4-245-128-96
19398|code|LDR.W           R1, [R4,#0x488]|212-248-136-20
19402|code|CMP             R1, #0|0-41
19404|code|MOV             R2, R1|10-70
19406|code|MOV.W           R3, R1,ASR#31|79-234-225-115
19410|code|BLE             loc_4C8C|91-221
19412|code|LDRD.W          R0, R1, [R0]|208-233-0-1
19416|code|BL              sub_84E0|3-240-130-252
19420|code|ADD.W           LR, R4, #0x2E0|4-245-56-126
19424|code|MOV             R2, R0|2-70
19426|code|MOV             R3, R1|11-70
19428|code|STRD.W          R2, R3, [SP,#0x58+var_50]|205-233-2-35
19432|code|ORRS            R3, R2|19-67
19434|code|ADD.W           R2, R4, #0x4A0|4-245-148-98
19438|code|ITTET EQ|5-191
19440|code|MOVEQ           R0, #1|1-32
19442|code|MOVEQ           R1, #0|0-33
19444|code|STRDNE.W        R0, R1, [R2]|194-233-0-1
19448|code|STRDEQ.W        R0, R1, [SP,#0x58+var_50]|205-233-2-1
19452|code|IT EQ|8-191
19454|code|STRDEQ.W        R0, R1, [R2]|194-233-0-1
19458|code|ADD.W           R0, R4, #0x2F0|4-245-60-112
19462|code|LDRD.W          R2, R3, [SP,#0x58+var_50]|221-233-2-35
19466|code|LDRD.W          R0, R1, [R0]|208-233-0-1
19470|code|STRD.W          R0, R1, [SP,#0x58+var_48]|205-233-4-1
19474|code|LDRD.W          R0, R1, [LR]|222-233-0-1
19478|code|MOV             R8, R0|128-70
19480|code|MOV             R9, R1|137-70
19482|code|LDRD.W          R0, R1, [SP,#0x58+var_48]|221-233-4-1
19486|code|SUBS.W          R0, R0, R8|176-235-8-0
19490|code|SBC.W           R1, R1, R9|97-235-9-1
19494|code|BL              sub_84E0|3-240-91-252
19498|code|LDR             R2, [R7,#8]|186-104
19500|code|ADD.W           LR, R4, #0x290|4-245-36-126
19504|code|ASRS            R3, R2, #0x1F|211-23
19506|code|CMP             R3, R1|139-66
19508|code|STRD.W          R0, R1, [LR]|206-233-0-1
19512|code|IT EQ|8-191
19514|code|CMPEQ           R2, R0|130-66
19516|code|IT CC|56-191
19518|code|STRCC           R0, [R7,#8]|184-96
19520|code|MOV             R0, R8|64-70
19522|code|MOV             R1, R9|73-70
19524|code|BL              sub_8474|3-240-22-252
19528|code|VMOV            D8, R0, R1|65-236-24-11
19532|code|LDRD.W          R0, R1, [SP,#0x58+var_48]|221-233-4-1
19536|code|BL              sub_8474|3-240-16-252
19540|code|LDRD.W          R2, R3, [R7,#0x10]|215-233-4-35
19544|code|LDRD.W          R8, R9, [SP,#0x58+var_50]|221-233-2-137
19548|code|ADDS.W          R8, R8, R2|24-235-2-8
19552|code|ADC.W           R9, R9, R3|73-235-3-9
19556|code|MOV             R2, R8|66-70
19558|code|MOV             R3, R9|75-70
19560|code|VMOV            D7, R0, R1|65-236-23-11
19564|code|VDIV.F64        D8, D8, D7|136-238-7-139
19568|code|VMUL.F64        D8, D8, D9|40-238-9-139
19572|code|VSTR            D8, [R4,#0x2F8]|132-237-190-139
19576|code|STRD.W          R2, R3, [R7,#0x10]|199-233-4-35
19580|code|B               loc_4B70|120-231
19582|code|MOV             R3, R10|83-70
19584|code|MOV             R0, R3|24-70
19586|code|ADD             SP, SP, #0x24 ; '$'|9-176
19588|code|VPOP            {D8-D9}|189-236-4-139
19592|code|POP.W           {R4-R11,PC}|189-232-240-143
19596|code|ADD.W           R1, R4, #0x2F0|4-245-60-113
19600|code|ADD.W           R2, R4, #0x2E0|4-245-56-114
19604|code|ADD.W           R3, R4, #0x4A0|4-245-148-99
19608|code|LDRD.W          R0, R1, [R1]|209-233-0-1
19612|code|STRD.W          R0, R1, [SP,#0x58+var_48]|205-233-4-1
19616|code|LDRD.W          R0, R1, [R2]|210-233-0-1
19620|code|LDRD.W          R2, R3, [R3]|211-233-0-35
19624|code|MOV             R8, R0|128-70
19626|code|MOV             R9, R1|137-70
19628|code|STRD.W          R2, R3, [SP,#0x58+var_50]|205-233-2-35
19632|code|B               loc_4C40|198-231
19634|code|MOVS            R3, #0|0-35
19636|code|B               loc_4C80|228-231
19638|data|ALIGN 4|0-191
19640|data|DCFD 100.0|0-0-0-0-0-0-89-64
19648|code|PUSH.W          {R4-R11,LR}|45-233-240-79
19652|code|SUB             SP, SP, #0x7C|159-176
19654|code|LDR.W           R4, =(dword_1C274 - 0x4CD4)|223-248-96-73
19658|code|ADD             R7, SP, #0x18|6-175
19660|code|LDR             R3, [R0,#4]|67-104
19662|code|MOVS            R1, #0|0-33
19664|code|ADD             R4, PC; dword_1C274|124-68
19666|code|STR             R0, [R7,#0x64+var_50]|120-97
19668|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x4CE4)|223-248-84-169
19672|code|MOVS            R2, #0|0-34
19674|code|MOV             R6, R3|30-70
19676|code|STR             R3, [R7,#0x64+var_2C]|187-99
19678|code|LDR             R3, [R0]|3-104
19680|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
19682|code|STR             R1, [R6,#8]|177-96
19684|code|LDR             R0, [R4]; timer|32-104
19686|code|LDR             R1, [R6,#4]|113-104
19688|code|STR             R3, [R7,#0x64+var_54]|59-97
19690|code|MOVS            R3, #0|0-35
19692|code|STRD.W          R2, R3, [R6,#0x10]|198-233-4-35
19696|code|STR             R1, [R7,#0x64+var_30]|121-99
19698|code|STRD.W          R2, R3, [R6,#0x18]|198-233-6-35
19702|code|CMP             R0, #0|0-40
19704|code|BEQ.W           loc_55B6|0-240-93-132
19708|code|LDR.W           R3, =(main_window_ptr - 0x1BDC4)|223-248-48-57
19712|code|LDR.W           R9, [R10,R3]; main_window|90-248-3-144
19716|code|LDR.W           R3, [R9]|217-248-0-48
19720|code|CMP             R3, #0|0-43
19722|code|BEQ.W           loc_55CE|0-240-96-132
19726|code|LDRSH.W         R0, [R3,#4]|179-249-4-0
19730|code|MOVW            R2, #0x5556|69-242-86-82
19734|code|LDRSH.W         R3, [R3,#6]|179-249-6-48
19738|code|MOVT.W          R2, #0x5555|197-242-85-82
19742|code|SUBS            R1, R0, #3|193-30
19744|code|ADDS            R0, #1|1-48
19746|code|ADDS            R3, #1|1-51
19748|code|STR             R3, [R7,#0x64+var_58]|251-96
19750|code|SMULL.W         R2, R3, R1, R2|129-251-2-35
19754|code|STR             R0, [R7,#0x64+var_64]|56-96
19756|code|SUB.W           R3, R3, R1,ASR#31|163-235-225-115
19760|code|STR             R3, [R7,#0x64+var_34]|59-99
19762|code|LDR.W           R2, =(footer_window_ptr - 0x1BDC4)|223-248-0-41
19766|code|MOVS            R3, #1|1-35
19768|code|LDR.W           R1, =(dword_1C274 - 0x4D46)|223-248-252-24
19772|code|STR             R3, [R7,#0x64+var_1C]|187-100
19774|code|LDR.W           R3, =(off_1C008 - 0x4D4A); " Statistics "|223-248-252-56
19778|code|ADD             R1, PC; dword_1C274|121-68
19780|code|STR             R1, [R7,#0x64+var_38]|249-98
19782|code|ADD             R3, PC; off_1C008|123-68
19784|code|LDR.W           R2, [R10,R2]; footer_window|90-248-2-32
19788|code|LDR             R1, [R3,#(off_1C018 - 0x1C008)]; " B=Blank screen, ctrl-c=Quit"|25-105
19790|code|LDR.W           R3, =(dword_1C274 - 0x4D5A)|223-248-240-56
19794|code|MOV             R4, R2|20-70
19796|code|LDR             R0, [R2]|16-104
19798|code|ADD             R3, PC; dword_1C274|123-68
19800|code|STR             R2, [R7,#0x64+var_5C]|186-96
19802|code|STR             R3, [R7,#0x64+var_60]|123-96
19804|code|BL              sub_2FC0|254-247-48-249
19808|code|LDR             R0, [R4]; WINDOW *|32-104
19810|code|BLX             wrefresh|252-247-200-239
19814|code|LDR.W           R2, =(stdscr_ptr - 0x1BDC4)|223-248-220-40
19818|code|LDR.W           R1, =(stats_window_ptr - 0x1BDC4)|223-248-220-24
19822|code|LDR.W           R3, =(nwipe_options_ptr - 0x1BDC4)|223-248-220-56
19826|code|LDR.W           R2, [R10,R2]; stdscr|90-248-2-32
19830|code|LDR.W           R11, [R10,R1]; stats_window|90-248-1-176
19834|code|STR             R2, [R7,#0x64+var_18]|250-100
19836|code|LDR.W           R3, [R10,R3]; nwipe_options|90-248-3-48
19840|code|STR             R3, [R7,#0x64+var_24]|59-100
19842|code|LDR.W           R3, =(aFailureCodeI - 0x4D8A); "(failure, code %i) "|223-248-204-56
19846|code|ADD             R3, PC; "(failure, code %i) "|123-68
19848|code|STR             R3, [R7,#0x64+var_40]|123-98
19850|code|LDR.W           R3, =(aFailureSignalI - 0x4D92); "(failure, signal %i) "|223-248-200-56
19854|code|ADD             R3, PC; "(failure, signal %i) "|123-68
19856|code|STR             R3, [R7,#0x64+var_44]|59-98
19858|code|MOVS            R0, #0; timer|0-32
19860|code|BLX             time|252-247-124-239
19864|code|STR             R0, [R7,#0x64+var_20]|120-100
19866|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
19870|code|BLX             werase|253-247-70-233
19874|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
19878|code|BLX             werase|253-247-66-233
19882|code|LDR             R3, [R7,#0x64+var_18]|251-108
19884|code|LDR             R0, [R3]; WINDOW *|24-104
19886|code|BLX             wgetch|253-247-208-232
19890|code|CMP             R0, #0|0-40
19892|code|BLE.W           loc_546A|64-243-89-131
19896|code|LDR             R3, [R7,#0x64+var_38]|251-106
19898|code|LDR             R3, [R3,#4]|91-104
19900|code|CMP             R3, #1|1-43
19902|code|BEQ.W           loc_54CA|0-240-132-131
19906|code|CMP             R0, #0x62 ; 'b'|98-40
19908|code|BEQ             loc_4E52|69-208
19910|code|BGT.W           loc_4FB8|0-243-247-128
19914|code|CMP             R0, #0x4A ; 'J'|74-40
19916|code|BEQ.W           loc_5478|0-240-84-131
19920|code|CMP             R0, #0x4B ; 'K'|75-40
19922|code|BEQ.W           loc_4FD2|0-240-254-128
19926|code|CMP             R0, #0x42 ; 'B'|66-40
19928|code|BEQ             loc_4E52|59-208
19930|code|CMP             R3, #0|0-43
19932|code|BEQ             loc_4EB6|107-208
19934|code|LDR             R3, [R7,#0x64+var_24]|59-108
19936|code|LDRB            R5, [R3,#0x18]|29-126
19938|code|CMP             R5, #0|0-45
19940|code|BEQ.W           loc_4FE4|0-240-254-128
19944|code|BLX             pthread_testcancel|253-247-244-232
19948|code|LDR             R3, [R7,#0x64+var_1C]|187-108
19950|code|CMP             R3, #0|0-43
19952|code|BNE             loc_4D92|207-209
19954|code|LDR             R3, [R7,#0x64+var_24]|59-108
19956|code|LDRB            R3, [R3,#0x18]|27-126
19958|code|CMP             R3, #0|0-43
19960|code|BEQ.W           loc_55A8|0-240-214-131
19964|code|LDR.W           R1, =(elf_gnu_hash_indexes+0x18)|223-248-88-24
19968|code|MOV             R5, SP|109-70
19970|code|LDR             R6, [R7,#0x64+var_24]|62-108
19972|code|MOVS            R2, #1|1-34
19974|code|LDR.W           R4, =(aWipeFinishedPr - 0x4E18); "Wipe finished - press enter to exit. Lo"...|223-248-84-72
19978|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
19982|code|LDR.W           R1, [R10,R1]|90-248-1-16
19986|code|ADDS            R6, #0x18|24-54
19988|code|ADD             R4, PC; "Wipe finished - press enter to exit. Lo"...|124-68
19990|code|LDR             R1, [R1]|9-104
19992|code|ADDS            R0, R1, #7|200-29
19994|code|BIC.W           R0, R0, #7|32-240-7-0
19998|code|SUB.W           SP, SP, R0|173-235-0-13
20002|code|ADD.W           R8, SP, #0x7C+var_64|13-241-24-8
20006|code|STMEA.W         SP, {R4,R6}|141-232-80-0
20010|code|MOV             R0, R8|64-70
20012|code|BLX             __snprintf_chk|253-247-4-233
20016|code|LDR             R3, [R7,#0x64+var_5C]|187-104
20018|code|MOV             R1, R8|65-70
20020|code|LDR             R0, [R3]|24-104
20022|code|BL              sub_2FC0|254-247-195-248
20026|code|MOV             SP, R5|173-70
20028|code|LDR             R3, [R7,#0x64+var_5C]|187-104
20030|code|LDR             R0, [R3]; WINDOW *|24-104
20032|code|BLX             wrefresh|252-247-88-239
20036|code|LDR             R3, [R7,#0x64+var_2C]|187-107
20038|code|MOVS            R0, #0|0-32
20040|code|ADDS            R7, #0x64 ; 'd'|100-55
20042|code|STR             R0, [R3,#0x20]|24-98
20044|code|MOV             SP, R7|189-70
20046|code|POP.W           {R4-R11,PC}|189-232-240-143
20050|code|LDR             R4, [R7,#0x64+var_60]|124-104
20052|code|MOVS            R2, #1|1-34
20054|code|LDR.W           R3, =(elf_gnu_hash_bucket+0x1C)|223-248-8-56
20058|code|STR             R2, [R4,#4]|98-96
20060|code|LDR.W           R3, [R10,R3]|90-248-3-48
20064|code|LDR             R0, [R3]; PANEL *|24-104
20066|code|BLX             hide_panel|252-247-40-239
20070|code|LDR.W           R3, =elf_gnu_hash_nbuckets|223-248-252-55
20074|code|LDR.W           R3, [R10,R3]|90-248-3-48
20078|code|LDR             R0, [R3]; PANEL *|24-104
20080|code|BLX             hide_panel|252-247-32-239
20084|code|LDR.W           R3, =(elf_gnu_hash_bucket+8)|223-248-240-55
20088|code|LDR.W           R3, [R10,R3]|90-248-3-48
20092|code|LDR             R0, [R3]; PANEL *|24-104
20094|code|BLX             hide_panel|252-247-26-239
20098|code|LDR.W           R3, =(elf_gnu_hash_bucket+0x38)|223-248-232-55
20102|code|LDR.W           R3, [R10,R3]|90-248-3-48
20106|code|LDR             R0, [R3]; PANEL *|24-104
20108|code|BLX             hide_panel|252-247-18-239
20112|code|LDR.W           R3, =elf_gnu_hash_symbias|223-248-220-55
20116|code|LDR.W           R3, [R10,R3]|90-248-3-48
20120|code|LDR             R0, [R3]; PANEL *|24-104
20122|code|BLX             hide_panel|252-247-12-239
20126|code|LDR             R5, [R7,#0x64+var_18]|253-108
20128|code|MOV.W           R1, #0x700; chtype|79-244-224-97
20132|code|LDR             R0, [R5]; WINDOW *|40-104
20134|code|BLX             wbkgdset|252-247-18-239
20138|code|LDR             R0, [R5]; WINDOW *|40-104
20140|code|BLX             wclear|253-247-86-232
20144|code|LDR             R3, [R4,#4]|99-104
20146|code|CMP             R3, #0|0-43
20148|code|BNE             loc_4DDE|147-209
20150|code|LDR             R0, [R7,#0x64+var_50]|120-105
20152|code|BL              sub_4B3C|255-247-64-254
20156|code|LDR.W           R3, =(dword_1C274 - 0x4EC6)|223-248-180-55
20160|code|LDR             R2, [R7,#0x64+var_34]|58-107
20162|code|ADD             R3, PC; dword_1C274|123-68
20164|code|LDR             R1, [R7,#0x64+var_30]|121-107
20166|code|LDR             R5, [R3,#(dword_1C27C - 0x1C274)]|157-104
20168|code|MOV             R3, R1|11-70
20170|code|STR             R0, [R7,#0x64+var_1C]|184-100
20172|code|ADDS            R0, R5, R2|168-24
20174|code|CMP             R5, R0|133-66
20176|code|ITE GE|172-191
20178|code|MOVGE           R3, #0|0-35
20180|code|MOVLT           R3, #1|1-35
20182|code|CMP             R1, R5|169-66
20184|code|IT LE|216-191
20186|code|MOVLE           R3, #0|0-35
20188|code|CMP             R3, #0|0-43
20190|code|BEQ.W           loc_55FA|0-240-140-131
20194|code|LDR.W           R3, =(aSS - 0x4EF2); "%s - %s"|223-248-148-55
20198|code|MOVS            R6, #4|4-38
20200|code|STR.W           R10, [R7,#0x64+var_48]|199-248-28-160
20204|code|MOV             R10, R1|138-70
20206|code|ADD             R3, PC; "%s - %s"|123-68
20208|code|STR             R3, [R7,#0x64+var_10]|123-101
20210|code|LDR             R3, [R7,#0x64+var_54]|59-105
20212|code|STR.W           R11, [R7,#0x64+var_4C]|199-248-24-176
20216|code|MOV             R11, R2|147-70
20218|code|ADD.W           R4, R3, R5,LSL#2|3-235-133-4
20222|code|LDR.W           R3, =(aSSS - 0x4F08); "%s - %s (%s)"|223-248-124-55
20226|code|STR             R5, [R7,#0x64+var_C]|189-101
20228|code|ADD             R3, PC; "%s - %s (%s)"|123-68
20230|code|STR             R3, [R7,#0x64+var_14]|59-101
20232|code|LDR.W           R3, =(aSuccess - 0x4F10); "(success) "|223-248-116-55
20236|code|ADD             R3, PC; "(success) "|123-68
20238|code|STR             R3, [R7,#0x64+var_3C]|187-98
20240|code|LDR.W           R3, =(a052fRoundIOfIP - 0x4F18); "[%05.2f%%, round %i of %i, pass %i of %"...|223-248-112-55
20244|code|ADD             R3, PC; "[%05.2f%%, round %i of %i, pass %i of %"...|123-68
20246|code|STR             R3, [R7,#0x64+var_28]|251-99
20248|code|LDR.W           LR, [R4]|212-248-0-224
20252|code|SUBS            R1, R6, #2; int|177-30
20254|code|LDRB.W          R3, [LR,#0x4C4]|158-248-196-52
20258|code|CMP             R3, #0|0-43
20260|code|BEQ.W           loc_536E|0-240-35-130
20264|code|LDR.W           R3, [LR,#0x220]|222-248-32-50
20268|code|ADDW            R12, LR, #0x4C4|14-242-196-76
20272|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20276|code|MOVS            R2, #2; int|2-34
20278|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
20282|code|STR             R3, [SP,#0x7C+var_7C]|0-147
20284|code|LDR.W           R5, [LR,#0x29C]|222-248-156-82
20288|code|LDR             R3, [R7,#0x64+var_14]; char *|59-109
20290|code|STR.W           R12, [SP,#0x7C+var_74]|205-248-8-192
20294|code|STR             R5, [SP,#0x7C+var_7C+4]|1-149
20296|code|BLX             mvwprintw|253-247-14-232
20300|code|LDR.W           LR, [R4]|212-248-0-224
20304|code|LDR.W           R3, [LR,#0x49C]|222-248-156-52
20308|code|CMP             R3, #0|0-43
20310|code|BNE.W           loc_5398|64-240-31-130
20314|code|LDR.W           R3, [LR,#0x2D8]|222-248-216-50
20318|code|CMP             R3, #0|0-43
20320|code|BEQ.W           loc_5430|0-240-102-130
20324|code|LDR.W           R2, [LR,#0x30C]|222-248-12-35
20328|code|MOV             R1, R8; int|65-70
20330|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20334|code|CMP             R2, #0|0-42
20336|code|BEQ.W           loc_540C|0-240-76-130
20340|code|STR             R2, [SP,#0x7C+var_7C]|0-146
20342|code|MOVS            R2, #4; int|4-34
20344|code|LDR             R3, [R7,#0x64+var_44]; char *|59-106
20346|code|BLX             mvwprintw|252-247-246-239
20350|code|LDR.W           R3, [R4],#4|84-248-4-59
20354|code|ADD.W           R2, R3, #0x4A8|3-245-149-98
20358|code|LDRD.W          R0, R1, [R2]|210-233-0-1
20362|code|ORRS.W          R2, R0, R1|80-234-1-2
20366|code|BNE.W           loc_53DE|64-240-38-130
20370|code|ADD.W           R2, R3, #0x2B0|3-245-44-114
20374|code|LDRD.W          R0, R1, [R2]|210-233-0-1
20378|code|ORRS.W          R2, R0, R1|80-234-1-2
20382|code|BNE.W           loc_53C8|64-240-19-130
20386|code|LDR.W           R2, [R3,#0x2C0]|211-248-192-34
20390|code|SUBS            R2, #1; switch 4 cases|1-58
20392|code|CMP             R2, #3|3-42
20394|code|BHI             def_4FAC; jumptable 00004FAC default case|91-216
20396|code|TBH.W           [PC,R2,LSL#1]; switch jump|223-232-18-240
20400|data|DCW 0x1D6; jump table for switch statement|214-1
20402|data|DCW 0x1CD|205-1
20404|data|DCW 0x51|81-0
20406|data|DCW 0x1B7|183-1
20408|code|CMP             R0, #0x6B ; 'k'|107-40
20410|code|BEQ             loc_4FD2|10-208
20412|code|BLE.W           loc_5472|64-243-89-130
20416|code|CMP.W           R0, #0x102|176-245-129-127
20420|code|BEQ.W           loc_5478|0-240-88-130
20424|code|MOVW            R2, #0x103|64-242-3-18
20428|code|CMP             R0, R2|144-66
20430|code|BNE.W           loc_4DDA|127-244-4-175
20434|code|LDR.W           R1, =(dword_1C274 - 0x4FDA)|223-248-180-22
20438|code|ADD             R1, PC; dword_1C274|121-68
20440|code|LDR             R2, [R1,#(dword_1C27C - 0x1C274)]|138-104
20442|code|SUBS            R2, #1|1-58
20444|code|IT MI|72-191
20446|code|MOVMI           R2, #0|0-34
20448|code|STR             R2, [R1,#(dword_1C27C - 0x1C274)]|138-96
20450|code|B               loc_4DDA|250-230
20452|code|BLX             def_prog_mode|252-247-142-239
20456|code|BLX             endwin|252-247-166-239
20460|code|LDR.W           R3, =(elf_gnu_hash_bucket+0x10)|223-248-156-54
20464|code|LDR.W           R4, [R10,R3]|90-248-3-64
20468|code|LDR             R0, [R4]; stream|32-104
20470|code|BLX             fflush|252-247-4-238
20474|code|LDR             R0, [R4]; stream|32-104
20476|code|MOV             R1, R5; buf|41-70
20478|code|BLX             setbuf|252-247-220-237
20482|code|LDR.W           R3, =(elf_gnu_hash_bucket+0xC)|223-248-140-54
20486|code|LDR.W           R4, [R10,R3]|90-248-3-64
20490|code|MOV             R0, R4; mutex|32-70
20492|code|BLX             pthread_mutex_lock|252-247-28-238
20496|code|LDR.W           R3, =(elf_gnu_hash_bucket+0x2C)|223-248-128-54
20500|code|LDR.W           R6, [R10,R3]|90-248-3-96
20504|code|LDR             R3, [R6]|51-104
20506|code|CMP             R3, #0|0-43
20508|code|BLE             loc_503A|13-221
20510|code|LDR.W           R3, =(elf_gnu_hash_bucket+0x34)|223-248-120-54
20514|code|LDR.W           R8, [R10,R3]|90-248-3-128
20518|code|LDR.W           R3, [R8]|216-248-0-48
20522|code|LDR.W           R0, [R3,R5,LSL#2]; s|83-248-37-0
20526|code|ADDS            R5, #1|1-53
20528|code|BLX             puts|252-247-168-238
20532|code|LDR             R3, [R6]|51-104
20534|code|CMP             R3, R5|171-66
20536|code|BGT             loc_5026|245-220
20538|code|MOV             R0, R4; mutex|32-70
20540|code|MOVS            R3, #0|0-35
20542|code|STR             R3, [R6]|51-96
20544|code|BLX             pthread_mutex_unlock|252-247-174-237
20548|code|BLX             reset_prog_mode|252-247-10-239
20552|code|LDR             R3, [R7,#0x64+var_18]|251-108
20554|code|LDR             R0, [R3]; WINDOW *|24-104
20556|code|BLX             wrefresh|252-247-82-238
20560|code|B               loc_4DE8|202-230
20562|code|LDR.W           R1, =(aBlanking_0 - 0x505E); jumptable 00004FAC case 3|223-248-72-22
20566|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20570|code|ADD             R1, PC; "[blanking] "|121-68
20572|code|BLX             wprintw|252-247-248-238
20576|code|LDR.W           R3, [R4,#-4]|84-248-4-60
20580|code|LDRSH.W         R2, [R3,#0x498]; jumptable 00004FAC default case|179-249-152-36
20584|code|CMP             R2, #0|0-42
20586|code|BNE.W           loc_5338|64-240-101-129
20590|code|ADD.W           R3, R3, #0x4A0|3-245-148-99
20594|code|ADR.W           R1, dword_5600|15-242-140-81
20598|code|LDRD.W          R0, R1, [R1]|209-233-0-1
20602|code|LDRD.W          R2, R3, [R3]|211-233-0-35
20606|code|CMP             R1, R3|153-66
20608|code|IT EQ|8-191
20610|code|CMPEQ           R0, R2|144-66
20612|code|BCC.W           loc_53F4|192-240-182-129
20616|code|ADR.W           R1, dword_5608|15-242-124-81
20620|code|LDRD.W          R0, R1, [R1]|209-233-0-1
20624|code|CMP             R1, R3|153-66
20626|code|IT EQ|8-191
20628|code|CMPEQ           R0, R2|144-66
20630|code|BCC.W           loc_5418|192-240-191-129
20634|code|ADR.W           R1, dword_5610|15-242-116-81
20638|code|LDRD.W          R0, R1, [R1]|209-233-0-1
20642|code|CMP             R1, R3|153-66
20644|code|IT EQ|8-191
20646|code|CMPEQ           R0, R2|144-66
20648|code|BCC.W           loc_544E|192-240-209-129
20652|code|MOVW            R0, #0x423F|68-242-63-32
20656|code|MOVS            R1, #0|0-33
20658|code|CMP             R1, R3|153-66
20660|code|MOVT.W          R0, #0xF|192-242-15-0
20664|code|IT EQ|8-191
20666|code|CMPEQ           R0, R2|144-66
20668|code|BCS.W           loc_5440|128-240-192-129
20672|code|MOV             R1, R3|25-70
20674|code|LDR.W           R8, =(aLluKbS - 0x50D0); "[%llu KB/s] "|223-248-220-133
20678|code|LDR.W           R3, [R9]|217-248-0-48
20682|code|MOV             R0, R2|16-70
20684|code|ADD             R8, PC; "[%llu KB/s] "|248-68
20686|code|MOV.W           R2, #0x3E8|79-244-122-114
20690|code|MOV             R5, R3|29-70
20692|code|MOVS            R3, #0|0-35
20694|code|BL              sub_84E0|3-240-3-250
20698|code|MOV             R2, R0|2-70
20700|code|MOV             R3, R1|11-70
20702|code|MOV             R0, R5; WINDOW *|40-70
20704|code|MOV             R1, R8; char *|65-70
20706|code|BLX             wprintw|252-247-182-238
20710|code|LDR.W           R3, =(dword_1C274 - 0x50F2)|223-248-188-53
20714|code|ADDS            R6, #3|3-54
20716|code|LDR             R1, [R7,#0x64+var_C]|185-109
20718|code|ADD             R3, PC; dword_1C274|123-68
20720|code|ADDS            R1, #1|1-49
20722|code|STR             R1, [R7,#0x64+var_C]|185-101
20724|code|LDR             R3, [R3,#(dword_1C27C - 0x1C274)]|155-104
20726|code|ADD.W           R2, R3, R11|3-235-11-2
20730|code|CMP             R2, R1|138-66
20732|code|IT GT|200-191
20734|code|CMPGT           R10, R1|138-69
20736|code|BGT.W           loc_4F18|63-247-10-175
20740|code|LDR.W           R10, [R7,#0x64+var_48]|215-248-28-160
20744|code|LDR.W           R11, [R7,#0x64+var_4C]|215-248-24-176
20748|code|CMP             R3, #0|0-43
20750|code|BLE             loc_513A|20-221
20752|code|LDR             R3, [R7,#0x64+var_58]|251-104
20754|code|MOVS            R1, #1; int|1-33
20756|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20760|code|SUB.W           R2, R3, #8; int|163-241-8-2
20764|code|LDR.W           R3, =(aMore - 0x5124); " More "|223-248-136-53
20768|code|ADD             R3, PC; " More "|123-68
20770|code|BLX             mvwprintw|252-247-34-239
20774|code|LDR.W           R3, =(byte_1A0+4)|223-248-132-53
20778|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20782|code|LDR.W           R3, [R10,R3]|90-248-3-48
20786|code|LDR.W           R1, [R3,#0xB4]; chtype|211-248-180-16
20790|code|BLX             waddch|252-247-118-237
20794|code|LDR.W           R3, =(dword_1C274 - 0x5144)|223-248-116-53
20798|code|LDR             R2, [R7,#0x64+var_30]|122-107
20800|code|ADD             R3, PC; dword_1C274|123-68
20802|code|LDR             R3, [R3,#(dword_1C27C - 0x1C274)]|155-104
20804|code|SUBS            R3, R2, R3|211-26
20806|code|LDR             R2, [R7,#0x64+var_34]|58-107
20808|code|CMP             R3, R2|147-66
20810|code|BGT.W           loc_552A|0-243-238-129
20814|code|MOVS            R4, #0|0-36
20816|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20820|code|MOV             R2, R4; chtype|34-70
20822|code|MOV             R3, R4; chtype|35-70
20824|code|MOV             R1, R4; chtype|33-70
20826|code|STR             R4, [SP,#0x7C+var_7C]; chtype|0-148
20828|code|STR             R4, [SP,#0x7C+var_7C+4]; chtype|1-148
20830|code|STR             R4, [SP,#0x7C+var_74]; chtype|2-148
20832|code|STR             R4, [SP,#0x7C+var_70]; chtype|3-148
20834|code|STR             R4, [SP,#0x7C+var_6C]; chtype|4-148
20836|code|BLX             wborder|252-247-172-237
20840|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
20844|code|BLX             wrefresh|252-247-194-237
20848|code|BL              sub_49B0|255-247-30-252
20852|code|LDR             R3, [R7,#0x64+var_2C]|187-107
20854|code|LDRD.W          R4, R5, [R3,#0x10]|211-233-4-69
20858|code|ADR.W           R3, dword_5600|15-242-132-67
20862|code|LDRD.W          R2, R3, [R3]|211-233-0-35
20866|code|CMP             R3, R5|171-66
20868|code|IT EQ|8-191
20870|code|CMPEQ           R2, R4|162-66
20872|code|BCS.W           loc_54A4|128-240-140-129
20876|code|MOV             R0, R4|32-70
20878|code|MOV             R1, R5|41-70
20880|code|ADR.W           R3, dword_5618|15-242-132-67
20884|code|LDRD.W          R2, R3, [R3]|211-233-0-35
20888|code|BL              sub_84E0|3-240-162-249
20892|code|LDR.W           R6, =(aLluTbS - 0x51A4); "%llu TB/s"|223-248-20-101
20896|code|ADD             R6, PC; "%llu TB/s"|126-68
20898|code|MOV             R4, R0|4-70
20900|code|MOV             R5, R1|13-70
20902|code|LDR.W           R3, =(aThroughput_0 - 0x51B6); "Throughput:"|223-248-16-53
20906|code|MOVS            R1, #4; int|4-33
20908|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
20912|code|MOVS            R2, #1; int|1-34
20914|code|ADD             R3, PC; "Throughput:"|123-68
20916|code|BLX             mvwprintw|252-247-216-238
20920|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
20924|code|MOV             R3, R6; char *|51-70
20926|code|STRD.W          R4, R5, [SP,#0x7C+var_7C]|205-233-0-69
20930|code|MOVS            R1, #4; int|4-33
20932|code|MOVS            R2, #0x10; int|16-34
20934|code|BLX             mvwprintw|252-247-208-238
20938|code|LDR.W           R3, =(dword_1C274 - 0x51DC)|223-248-240-52
20942|code|MOV             R12, #0x91A2B3C5|75-242-197-60-201-242-162-28
20950|code|MOVS            R1, #1; int|1-33
20952|code|ADD             R3, PC; dword_1C274|123-68
20954|code|MOVW            R8, #0x8889|72-246-137-8
20958|code|MOV             R2, R1; int|10-70
20960|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
20964|code|LDR             R6, [R3]|30-104
20966|code|MOVT.W          R8, #0x8888|200-246-136-8
20970|code|LDR             R3, [R7,#0x64+var_20]|123-108
20972|code|STR.W           R12, [R7,#0x64+var_10]|199-248-84-192
20976|code|SUBS            R6, R3, R6|158-27
20978|code|LDR.W           R3, =(aRuntime_0 - 0x5200); "Runtime:"|223-248-204-52
20982|code|SMULL.W         R4, R5, R6, R12|134-251-12-69
20986|code|ASRS            R4, R6, #0x1F|244-23
20988|code|ADD             R3, PC; "Runtime:"|123-68
20990|code|ADD             R5, R6|53-68
20992|code|RSB.W           R5, R4, R5,ASR#11|196-235-229-37
20996|code|RSB.W           LR, R5, R5,LSL#4|197-235-5-30
21000|code|MOV             R4, R5|44-70
21002|code|RSB.W           LR, LR, LR,LSL#4|206-235-14-30
21006|code|SUB.W           R5, R6, LR,LSL#4|166-235-14-21
21010|code|BLX             mvwprintw|252-247-170-238
21014|code|LDR.W           R6, =(a02i02i02i - 0x5228); "%02i:%02i:%02i"|223-248-172-100
21018|code|MOVS            R1, #1; int|1-33
21020|code|SMULL.W         R2, R3, R5, R8|133-251-8-35
21024|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21028|code|ADD             R6, PC; "%02i:%02i:%02i"|126-68
21030|code|STRD.W          R2, R3, [R7,#0x64+var_C]|199-233-22-35
21034|code|ASRS            R3, R5, #0x1F|235-23
21036|code|LDR             R2, [R7,#0x64+var_8]|250-109
21038|code|STR             R4, [SP,#0x7C+var_7C]|0-148
21040|code|ADDS            R2, R5, R2|170-24
21042|code|RSB.W           R2, R3, R2,ASR#5|195-235-98-18
21046|code|MOV             R3, R6; char *|51-70
21048|code|STR             R2, [SP,#0x7C+var_7C+4]|1-146
21050|code|RSB.W           R4, R2, R2,LSL#4|194-235-2-20
21054|code|MOVS            R2, #0x10; int|16-34
21056|code|SUB.W           R5, R5, R4,LSL#2|165-235-132-5
21060|code|STR             R5, [SP,#0x7C+var_74]|2-149
21062|code|BLX             mvwprintw|252-247-144-238
21066|code|LDR.W           R3, =(aRemaining_0 - 0x5258); "Remaining:"|223-248-124-52
21070|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21074|code|MOVS            R1, #2; int|2-33
21076|code|ADD             R3, PC; "Remaining:"|123-68
21078|code|MOVS            R2, #1; int|1-34
21080|code|BLX             mvwprintw|252-247-134-238
21084|code|LDR             R3, [R7,#0x64+var_2C]|187-107
21086|code|LDR             R4, [R3,#8]|156-104
21088|code|CMP             R4, #0|0-44
21090|code|BLE             loc_52A8|33-221
21092|code|LDR.W           R12, [R7,#0x64+var_10]|215-248-84-192
21096|code|MOV             R3, R6; char *|51-70
21098|code|ASRS            R2, R4, #0x1F|226-23
21100|code|SMULL.W         R0, R1, R4, R12|132-251-12-1
21104|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21108|code|ADDS            R6, R4, R1|102-24
21110|code|MOVS            R1, #2; int|2-33
21112|code|RSB.W           R6, R2, R6,ASR#11|194-235-230-38
21116|code|STR             R6, [SP,#0x7C+var_7C]|0-150
21118|code|RSB.W           R2, R6, R6,LSL#4|198-235-6-18
21122|code|RSB.W           R6, R2, R2,LSL#4|194-235-2-22
21126|code|MOVS            R2, #0x10; int|16-34
21128|code|SUB.W           R6, R4, R6,LSL#4|164-235-6-22
21132|code|SMULL.W         R4, R5, R6, R8|134-251-8-69
21136|code|ASRS            R4, R6, #0x1F|244-23
21138|code|ADD             R5, R6|53-68
21140|code|RSB.W           R4, R4, R5,ASR#5|196-235-101-20
21144|code|STR             R4, [SP,#0x7C+var_7C+4]|1-148
21146|code|RSB.W           R4, R4, R4,LSL#4|196-235-4-20
21150|code|SUB.W           R6, R6, R4,LSL#2|166-235-132-6
21154|code|STR             R6, [SP,#0x7C+var_74]|2-150
21156|code|BLX             mvwprintw|252-247-96-238
21160|code|LDR.W           R3, =(aErrors_0 - 0x52B8); "Errors:"|223-248-32-52
21164|code|MOVS            R1, #5; int|5-33
21166|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21170|code|MOVS            R2, #1; int|1-34
21172|code|ADD             R3, PC; "Errors:"|123-68
21174|code|BLX             mvwprintw|252-247-88-238
21178|code|LDR             R3, [R7,#0x64+var_2C]|187-107
21180|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21184|code|MOVS            R1, #5; int|5-33
21186|code|MOVS            R2, #0x10; int|16-34
21188|code|LDRD.W          R4, R5, [R3,#0x18]|211-233-6-69
21192|code|LDR.W           R3, =(aLlu - 0x52D4); "%llu"|223-248-4-52
21196|code|STRD.W          R4, R5, [SP,#0x7C+var_7C]|205-233-0-69
21200|code|ADD             R3, PC; "%llu"|123-68
21202|code|MOVS            R4, #0|0-36
21204|code|BLX             mvwprintw|252-247-72-238
21208|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21212|code|MOV             R1, R4; chtype|33-70
21214|code|MOV             R2, R4; chtype|34-70
21216|code|MOV             R3, R4; chtype|35-70
21218|code|STR             R4, [SP,#0x7C+var_7C]; chtype|0-148
21220|code|STR             R4, [SP,#0x7C+var_7C+4]; chtype|1-148
21222|code|STR             R4, [SP,#0x7C+var_74]; chtype|2-148
21224|code|STR             R4, [SP,#0x7C+var_70]; chtype|3-148
21226|code|STR             R4, [SP,#0x7C+var_6C]; chtype|4-148
21228|code|BLX             wborder|252-247-232-236
21232|code|LDR             R3, =(off_1C008 - 0x52F6); " Statistics "|248-75
21234|code|ADD             R3, PC; off_1C008|123-68
21236|code|LDR             R5, [R3]; " Statistics "|29-104
21238|code|MOV             R0, R5; s|40-70
21240|code|BLX             strlen|252-247-164-237
21244|code|LDR.W           R6, [R11]|219-248-0-96
21248|code|LDR             R3, =(aSSS_0+8 - 0x530A); "%s"|245-75
21250|code|MOV             R1, R4; int|33-70
21252|code|STR             R5, [SP,#0x7C+var_7C]|0-149
21254|code|ADD             R3, PC; "%s" ; char *|123-68
21256|code|RSB.W           R2, R0, #0x24 ; '$'|192-241-36-2
21260|code|MOV             R0, R6; WINDOW *|48-70
21262|code|LSRS            R2, R2, #1; int|82-8
21264|code|BLX             mvwprintw|252-247-42-238
21268|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21272|code|BLX             wrefresh|252-247-236-236
21276|code|B               loc_4DDE|95-229
21278|code|LDR             R1, =(aOpsIiFinal_0 - 0x5328); jumptable 00004FAC case 4|239-73
21280|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21284|code|ADD             R1, PC; "[OPS-II final] "|121-68
21286|code|BLX             wprintw|252-247-148-237
21290|code|LDR.W           R3, [R4,#-4]|84-248-4-60
21294|code|LDRSH.W         R2, [R3,#0x498]|179-249-152-36
21298|code|CMP             R2, #0|0-42
21300|code|BEQ.W           loc_506E|63-244-155-174
21304|code|LDR             R1, =(aSyncing_0 - 0x5342); "[syncing] "|233-73
21306|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21310|code|ADD             R1, PC; "[syncing] "|121-68
21312|code|BLX             wprintw|252-247-134-237
21316|code|LDR.W           R3, [R4,#-4]|84-248-4-60
21320|code|B               loc_506E|145-230
21322|code|LDR             R1, =(aVerifying_0 - 0x5354); jumptable 00004FAC case 2|230-73
21324|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21328|code|ADD             R1, PC; "[verifying] "|121-68
21330|code|BLX             wprintw|252-247-126-237
21334|code|LDR.W           R3, [R4,#-4]|84-248-4-60
21338|code|B               def_4FAC; jumptable 00004FAC default case|131-230
21340|code|LDR             R1, =(aWriting_0 - 0x5366); jumptable 00004FAC case 1|226-73
21342|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21346|code|ADD             R1, PC; "[writing] "|121-68
21348|code|BLX             wprintw|252-247-116-237
21352|code|LDR.W           R3, [R4,#-4]|84-248-4-60
21356|code|B               def_4FAC; jumptable 00004FAC default case|122-230
21358|code|LDR.W           R5, [LR,#0x220]|222-248-32-82
21362|code|MOVS            R2, #2; int|2-34
21364|code|LDR             R3, [R7,#0x64+var_10]; char *|123-109
21366|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
21370|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21374|code|STR             R5, [SP,#0x7C+var_7C]|0-149
21376|code|LDR.W           R5, [LR,#0x29C]|222-248-156-82
21380|code|STR             R5, [SP,#0x7C+var_7C+4]|1-149
21382|code|BLX             mvwprintw|252-247-240-237
21386|code|LDR.W           LR, [R4]|212-248-0-224
21390|code|LDR.W           R3, [LR,#0x49C]|222-248-156-52
21394|code|CMP             R3, #0|0-43
21396|code|BEQ.W           loc_4F5A|63-244-225-173
21400|code|VLDR            D7, [LR,#0x2F8]|158-237-190-123
21404|code|MOV             R1, R8; int|65-70
21406|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21410|code|MOVS            R2, #4; int|4-34
21412|code|LDR             R3, [R7,#0x64+var_28]; char *|251-107
21414|code|VSTR            D7, [SP,#0x7C+var_7C]|141-237-0-123
21418|code|LDR.W           R5, [LR,#0x300]|222-248-0-83
21422|code|STR             R5, [SP,#0x7C+var_74]|2-149
21424|code|LDR.W           R5, [LR,#0x2DC]|222-248-220-82
21428|code|STR             R5, [SP,#0x7C+var_70]|3-149
21430|code|LDR.W           R5, [LR,#0x2C4]|222-248-196-82
21434|code|STR             R5, [SP,#0x7C+var_6C]|4-149
21436|code|LDR.W           R5, [LR,#0x2A0]|222-248-160-82
21440|code|STR             R5, [SP,#0x7C+var_68]|5-149
21442|code|BLX             mvwprintw|252-247-210-237
21446|code|B               loc_4F7E|218-229
21448|code|MOV             R3, R1|11-70
21450|code|LDR             R1, =(aPassErrorsLlu - 0x53D6); "[pass errors: %llu] "|200-73
21452|code|MOV             R2, R0|2-70
21454|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21458|code|ADD             R1, PC; "[pass errors: %llu] "|121-68
21460|code|BLX             wprintw|252-247-60-237
21464|code|LDR.W           R3, [R4,#-4]|84-248-4-60
21468|code|B               loc_4FA2|225-229
21470|code|MOV             R3, R1|11-70
21472|code|LDR             R1, =(aVerifyErrorsLl - 0x53EC); "[verify errors: %llu] "|195-73
21474|code|MOV             R2, R0|2-70
21476|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21480|code|ADD             R1, PC; "[verify errors: %llu] "|121-68
21482|code|BLX             wprintw|252-247-50-237
21486|code|LDR.W           R3, [R4,#-4]|84-248-4-60
21490|code|B               loc_4F92|206-229
21492|code|MOV             R1, R3|25-70
21494|code|LDR.W           R3, [R9]|217-248-0-48
21498|code|LDR.W           R8, =(aLluTbS_0 - 0x5406); "[%llu TB/s] "|223-248-248-130
21502|code|MOV             R0, R2|16-70
21504|code|MOV             R5, R3|29-70
21506|code|ADD             R8, PC; "[%llu TB/s] "|248-68
21508|code|ADR             R3, dword_5618|132-163
21510|code|LDRD.W          R2, R3, [R3]|211-233-0-35
21514|code|B               loc_50D6|100-230
21516|code|STR             R3, [SP,#0x7C+var_7C]|0-147
21518|code|MOVS            R2, #4; int|4-34
21520|code|LDR             R3, [R7,#0x64+var_40]; char *|123-106
21522|code|BLX             mvwprintw|252-247-170-237
21526|code|B               loc_4F7E|178-229
21528|code|MOV             R1, R3|25-70
21530|code|LDR.W           R3, [R9]|217-248-0-48
21534|code|LDR.W           R8, =(aLluGbS - 0x542A); "[%llu GB/s] "|223-248-216-130
21538|code|MOV             R0, R2|16-70
21540|code|MOV             R5, R3|29-70
21542|code|ADD             R8, PC; "[%llu GB/s] "|248-68
21544|code|ADR             R3, dword_5620|125-163
21546|code|LDRD.W          R2, R3, [R3]|211-233-0-35
21550|code|B               loc_50D6|82-230
21552|code|MOV             R1, R8; int|65-70
21554|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21558|code|MOVS            R2, #4; int|4-34
21560|code|LDR             R3, [R7,#0x64+var_3C]; char *|187-106
21562|code|BLX             mvwprintw|252-247-150-237
21566|code|B               loc_4F7E|158-229
21568|code|LDR             R1, =(aLluBS - 0x544A); "[%llu B/s] "|174-73
21570|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21574|code|ADD             R1, PC; "[%llu B/s] "|121-68
21576|code|BLX             wprintw|252-247-2-237
21580|code|B               loc_50E6|75-230
21582|code|MOV             R1, R3|25-70
21584|code|LDR.W           R3, [R9]|217-248-0-48
21588|code|LDR.W           R8, =(aLluMbS - 0x5464); "[%llu MB/s] "|223-248-168-130
21592|code|MOV             R0, R2|16-70
21594|code|MOVW            R2, #0x4240|68-242-64-34
21598|code|MOV             R5, R3|29-70
21600|code|ADD             R8, PC; "[%llu MB/s] "|248-68
21602|code|MOVT.W          R2, #0xF|192-242-15-2
21606|code|MOVS            R3, #0|0-35
21608|code|B               loc_50D6|53-230
21610|code|LDR             R3, =(dword_1C274 - 0x5470)|166-75
21612|code|ADD             R3, PC; dword_1C274|123-68
21614|code|LDR             R3, [R3,#(dword_1C278 - 0x1C274)]|91-104
21616|code|B               loc_4DDA|179-228
21618|code|CMP             R0, #0x6A ; 'j'|106-40
21620|code|BNE.W           loc_4DDA|127-244-177-172
21624|code|LDR             R2, =(dword_1C274 - 0x5480)|163-74
21626|code|LDR             R0, [R7,#0x64+var_30]|120-107
21628|code|ADD             R2, PC; dword_1C274|122-68
21630|code|LDR             R4, [R7,#0x64+var_34]|60-107
21632|code|LDR             R1, [R2,#(dword_1C27C - 0x1C274)]|145-104
21634|code|CMP             R0, R4|160-66
21636|code|ITT LT|188-191
21638|code|MOVLT           R1, #0|0-33
21640|code|STRLT           R1, [R2,#(dword_1C27C - 0x1C274)]|145-96
21642|code|BLT.W           loc_4DDA|255-246-166-172
21646|code|LDR             R0, [R7,#0x64+var_34]|56-107
21648|code|ADDS            R1, #1|1-49
21650|code|LDR             R4, [R7,#0x64+var_30]|124-107
21652|code|ADDS            R0, R1, R0|8-24
21654|code|CMP             R4, R0|132-66
21656|code|ITTT LT|190-191
21658|code|LDRLT           R1, [R7,#0x64+var_30]|121-107
21660|code|LDRLT           R0, [R7,#0x64+var_34]|56-107
21662|code|SUBLT           R1, R1, R0|9-26
21664|code|STR             R1, [R2,#(dword_1C27C - 0x1C274)]|145-96
21666|code|B               loc_4DDA|154-228
21668|code|ADR             R3, dword_5608|88-163
21670|code|LDRD.W          R2, R3, [R3]|211-233-0-35
21674|code|CMP             R3, R5|171-66
21676|code|IT EQ|8-191
21678|code|CMPEQ           R2, R4|162-66
21680|code|BCS             loc_5554|80-210
21682|code|MOV             R0, R4|32-70
21684|code|MOV             R1, R5|41-70
21686|code|ADR             R3, dword_5620|90-163
21688|code|LDRD.W          R2, R3, [R3]|211-233-0-35
21692|code|BL              sub_84E0|3-240-16-248
21696|code|LDR             R6, =(aLluGbS_0 - 0x54C6); "%llu GB/s"|146-78
21698|code|ADD             R6, PC; "%llu GB/s"|126-68
21700|code|MOV             R4, R0|4-70
21702|code|MOV             R5, R1|13-70
21704|code|B               loc_51A6|109-230
21706|code|LDR             R4, [R7,#0x64+var_18]|252-108
21708|code|MOV.W           R1, #0x100; chtype|79-244-128-113
21712|code|LDR             R5, [R7,#0x64+var_38]|253-106
21714|code|MOVS            R3, #0|0-35
21716|code|LDR             R0, [R4]; WINDOW *|32-104
21718|code|STR             R3, [R5,#4]|107-96
21720|code|BLX             wbkgdset|252-247-248-235
21724|code|LDR             R0, [R4]; WINDOW *|32-104
21726|code|BLX             wclear|252-247-62-237
21730|code|LDR             R3, =(elf_gnu_hash_bucket+0x1C)|95-75
21732|code|LDR.W           R3, [R10,R3]|90-248-3-48
21736|code|LDR             R0, [R3]; PANEL *|24-104
21738|code|BLX             show_panel|252-247-18-237
21742|code|LDR             R3, =elf_gnu_hash_nbuckets|93-75
21744|code|LDR.W           R3, [R10,R3]|90-248-3-48
21748|code|LDR             R0, [R3]; PANEL *|24-104
21750|code|BLX             show_panel|252-247-12-237
21754|code|LDR             R3, =(elf_gnu_hash_bucket+8)|91-75
21756|code|LDR.W           R3, [R10,R3]|90-248-3-48
21760|code|LDR             R0, [R3]; PANEL *|24-104
21762|code|BLX             show_panel|252-247-6-237
21766|code|LDR             R3, =(elf_gnu_hash_bucket+0x38)|89-75
21768|code|LDR.W           R3, [R10,R3]|90-248-3-48
21772|code|LDR             R0, [R3]; PANEL *|24-104
21774|code|BLX             show_panel|252-247-0-237
21778|code|LDR             R3, =elf_gnu_hash_symbias|87-75
21780|code|LDR.W           R3, [R10,R3]|90-248-3-48
21784|code|LDR             R0, [R3]; PANEL *|24-104
21786|code|BLX             show_panel|252-247-250-236
21790|code|BLX             update_panels|252-247-240-235
21794|code|BLX             doupdate|252-247-64-237
21798|code|LDR             R3, [R5,#4]|107-104
21800|code|B               loc_4DDA|87-228
21802|code|LDR             R3, [R7,#0x64+var_64]|59-104
21804|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21808|code|SUBS            R1, R3, #2; int|153-30
21810|code|LDR             R3, [R7,#0x64+var_58]|251-104
21812|code|SUB.W           R2, R3, #8; int|163-241-8-2
21816|code|LDR             R3, =(aMore - 0x553E); " More "|117-75
21818|code|ADD             R3, PC; " More "|123-68
21820|code|BLX             mvwprintw|252-247-20-237
21824|code|LDR             R3, =(byte_1A0+4)|90-75
21826|code|LDR.W           R0, [R9]; WINDOW *|217-248-0-0
21830|code|LDR.W           R3, [R10,R3]|90-248-3-48
21834|code|LDR.W           R1, [R3,#0xB8]; chtype|211-248-184-16
21838|code|BLX             waddch|252-247-106-235
21842|code|B               loc_514E|252-229
21844|code|ADR             R3, dword_5610|46-163
21846|code|LDRD.W          R2, R3, [R3]|211-233-0-35
21850|code|CMP             R3, R5|171-66
21852|code|IT EQ|8-191
21854|code|CMPEQ           R2, R4|162-66
21856|code|BCS             loc_557E|13-210
21858|code|MOVW            R2, #0x4240|68-242-64-34
21862|code|MOV             R0, R4|32-70
21864|code|MOV             R1, R5|41-70
21866|code|MOVT.W          R2, #0xF|192-242-15-2
21870|code|MOVS            R3, #0|0-35
21872|code|LDR             R6, =(aLluMbS_0 - 0x557A); "%llu MB/s"|104-78
21874|code|BL              sub_84E0|2-240-181-255
21878|code|ADD             R6, PC; "%llu MB/s"|126-68
21880|code|MOV             R4, R0|4-70
21882|code|MOV             R5, R1|13-70
21884|code|B               loc_51A6|19-230
21886|code|MOVW            R2, #0x423F|68-242-63-34
21890|code|MOVS            R3, #0|0-35
21892|code|CMP             R3, R5|171-66
21894|code|MOVT.W          R2, #0xF|192-242-15-2
21898|code|IT EQ|8-191
21900|code|CMPEQ           R2, R4|162-66
21902|code|BCS             loc_55DC|37-210
21904|code|MOV             R0, R4|32-70
21906|code|MOV             R1, R5|41-70
21908|code|MOV.W           R2, #0x3E8|79-244-122-114
21912|code|MOVS            R3, #0|0-35
21914|code|BL              sub_84E0|2-240-161-255
21918|code|LDR             R6, =(aLluKbS_0 - 0x55A4); "%llu KB/s"|94-78
21920|code|ADD             R6, PC; "%llu KB/s"|126-68
21922|code|MOV             R4, R0|4-70
21924|code|MOV             R5, R1|13-70
21926|code|B               loc_51A6|254-229
21928|code|LDR             R3, [R7,#0x64+var_5C]|187-104
21930|code|LDR             R1, =(aWipeFinishedPr_0 - 0x55B2); "Wipe finished - press enter to exit. Lo"...|92-73
21932|code|LDR             R0, [R3]|24-104
21934|code|ADD             R1, PC; "Wipe finished - press enter to exit. Lo"...|121-68
21936|code|BL              sub_2FC0|253-247-6-253
21940|code|B               loc_4E3C|66-228
21942|code|BLX             time|252-247-108-235
21946|code|LDR             R3, =(main_window_ptr - 0x1BDC4)|29-75
21948|code|SUBS            R0, #1|1-56
21950|code|STR             R0, [R4]|32-96
21952|code|LDR.W           R9, [R10,R3]; main_window|90-248-3-144
21956|code|LDR.W           R3, [R9]|217-248-0-48
21960|code|CMP             R3, #0|0-43
21962|code|BNE.W           loc_4D0E|127-244-160-171
21966|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
21970|code|STR             R3, [R7,#0x64+var_34]|59-99
21972|code|STR             R3, [R7,#0x64+var_64]|59-96
21974|code|STR             R3, [R7,#0x64+var_58]|251-96
21976|code|B.W             loc_4D32|255-247-171-187
21980|code|LDR             R3, =(aThroughput_0 - 0x55EA); "Throughput:"|80-75
21982|code|MOVS            R1, #4; int|4-33
21984|code|LDR.W           R0, [R11]; WINDOW *|219-248-0-0
21988|code|MOVS            R2, #1; int|1-34
21990|code|ADD             R3, PC; "Throughput:"|123-68
21992|code|BLX             mvwprintw|252-247-190-236
21996|code|ORRS.W          R3, R4, R5|84-234-5-3
22000|code|BEQ.W           loc_51CA|63-244-235-173
22004|code|LDR             R6, =(aLluBS_0 - 0x55FA); "%llu B/s"|75-78
22006|code|ADD             R6, PC; "%llu B/s"|126-68
22008|code|B               loc_51B8|222-229
22010|code|MOV             R3, R5|43-70
22012|code|B               loc_510C|134-229
22014|data|ALIGN 0x10|0-191
22016|data|DCD 0xA4C67FFF, 0x38D7E|255-127-198-164-126-141-3-0
22024|data|DCD 0xD4A50FFF, 0xE8|255-15-165-212-232-0-0-0
22032|data|DCD 0x3B9AC9FF, 0|255-201-154-59-0-0-0-0
22040|data|DCD 0xD4A51000, 0xE8|0-16-165-212-232-0-0-0
22048|data|DCD 0x3B9ACA00, 0|0-202-154-59-0-0-0-0
22056|data|DCD dword_1C274 - 0x4CD4|160-117-1-0
22060|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4CE4|224-112-1-0
22064|data|DCD main_window_ptr - 0x1BDC4|40-2-0-0
22068|data|DCD footer_window_ptr - 0x1BDC4|52-2-0-0
22072|data|DCD dword_1C274 - 0x4D46|46-117-1-0
22076|data|DCD off_1C008 - 0x4D4A; " Statistics "|190-114-1-0
22080|data|DCD dword_1C274 - 0x4D5A|26-117-1-0
22084|data|DCD stdscr_ptr - 0x1BDC4|232-1-0-0
22088|data|DCD stats_window_ptr - 0x1BDC4|196-1-0-0
22092|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
22096|data|DCD aFailureCodeI - 0x4D8A; "(failure, code %i) "|194-81-0-0
22100|data|DCD aFailureSignalI - 0x4D92; "(failure, signal %i) "|162-81-0-0
22104|data|DCD elf_gnu_hash_indexes+0x18|220-1-0-0
22108|data|DCD aWipeFinishedPr - 0x4E18; "Wipe finished - press enter to exit. Lo"...|132-82-0-0
22112|data|DCD elf_gnu_hash_bucket+0x1C|0-2-0-0
22116|data|DCD elf_gnu_hash_nbuckets|180-1-0-0
22120|data|DCD elf_gnu_hash_bucket+8|236-1-0-0
22124|data|DCD elf_gnu_hash_bucket+0x38|28-2-0-0
22128|data|DCD elf_gnu_hash_symbias|184-1-0-0
22132|data|DCD dword_1C274 - 0x4EC6|174-115-1-0
22136|data|DCD aSS - 0x4EF2; "%s - %s"|2-80-0-0
22140|data|DCD aSSS - 0x4F08; "%s - %s (%s)"|220-79-0-0
22144|data|DCD aSuccess - 0x4F10; "(success) "|24-80-0-0
22148|data|DCD a052fRoundIOfIP - 0x4F18; "[%05.2f%%, round %i of %i, pass %i of %"...|228-79-0-0
22152|data|DCD dword_1C274 - 0x4FDA|154-114-1-0
22156|data|DCD elf_gnu_hash_bucket+0x10|244-1-0-0
22160|data|DCD elf_gnu_hash_bucket+0xC|240-1-0-0
22164|data|DCD elf_gnu_hash_bucket+0x2C|16-2-0-0
22168|data|DCD elf_gnu_hash_bucket+0x34|24-2-0-0
22172|data|DCD aBlanking_0 - 0x505E; "[blanking] "|50-79-0-0
22176|data|DCD aLluKbS - 0x50D0; "[%llu KB/s] "|52-79-0-0
22180|data|DCD dword_1C274 - 0x50F2|130-113-1-0
22184|data|DCD aMore - 0x5124; " More "|244-76-0-0
22188|data|DCD byte_1A0+4|164-1-0-0
22192|data|DCD dword_1C274 - 0x5144|48-113-1-0
22196|data|DCD aLluTbS - 0x51A4; "%llu TB/s"|52-77-0-0
22200|data|DCD aThroughput_0 - 0x51B6; "Throughput:"|106-78-0-0
22204|data|DCD dword_1C274 - 0x51DC|152-112-1-0
22208|data|DCD aRuntime_0 - 0x5200; "Runtime:"|44-78-0-0
22212|data|DCD a02i02i02i - 0x5228; "%02i:%02i:%02i"|16-78-0-0
22216|data|DCD aRemaining_0 - 0x5258; "Remaining:"|240-77-0-0
22220|data|DCD aErrors_0 - 0x52B8; "Errors:"|156-77-0-0
22224|data|DCD aLlu - 0x52D4; "%llu"|136-77-0-0
22228|data|DCD off_1C008 - 0x52F6; " Statistics "|18-109-1-0
22232|data|DCD aSSS_0+8 - 0x530A; "%s"|166-84-0-0
22236|data|DCD aOpsIiFinal_0 - 0x5328; "[OPS-II final] "|116-76-0-0
22240|data|DCD aSyncing_0 - 0x5342; "[syncing] "|134-76-0-0
22244|data|DCD aVerifying_0 - 0x5354; "[verifying] "|100-76-0-0
22248|data|DCD aWriting_0 - 0x5366; "[writing] "|70-76-0-0
22252|data|DCD aPassErrorsLlu - 0x53D6; "[pass errors: %llu] "|162-75-0-0
22256|data|DCD aVerifyErrorsLl - 0x53EC; "[verify errors: %llu] "|116-75-0-0
22260|data|DCD aLluTbS_0 - 0x5406; "[%llu TB/s] "|206-75-0-0
22264|data|DCD aLluGbS - 0x542A; "[%llu GB/s] "|186-75-0-0
22268|data|DCD aLluBS - 0x544A; "[%llu B/s] "|202-75-0-0
22272|data|DCD aLluMbS - 0x5464; "[%llu MB/s] "|144-75-0-0
22276|data|DCD dword_1C274 - 0x5470|4-110-1-0
22280|data|DCD dword_1C274 - 0x5480|244-109-1-0
22284|data|DCD aLluGbS_0 - 0x54C6; "%llu GB/s"|6-74-0-0
22288|data|DCD aMore - 0x553E; " More "|218-72-0-0
22292|data|DCD aLluMbS_0 - 0x557A; "%llu MB/s"|70-73-0-0
22296|data|DCD aLluKbS_0 - 0x55A4; "%llu KB/s"|16-73-0-0
22300|data|DCD aWipeFinishedPr_0 - 0x55B2; "Wipe finished - press enter to exit. Lo"...|178-74-0-0
22304|data|DCD aThroughput_0 - 0x55EA; "Throughput:"|54-74-0-0
22308|data|DCD aLluBS_0 - 0x55FA; "%llu B/s"|174-72-0-0
22312|code|LDR.W           R3, [R0,#0x2D0]|208-248-208-50
22316|code|ADD.W           R2, R0, #0x228|0-245-10-114
22320|code|PUSH.W          {R4-R11,LR}|45-233-240-79
22324|code|MOV             R4, R0|4-70
22326|code|SUB             SP, SP, #0x34|141-176
22328|code|LDRD.W          R8, R9, [R2]|210-233-0-137
22332|code|CMP             R3, #0|0-43
22334|code|BEQ.W           loc_59E6|0-240-82-129
22338|code|LDR.W           R2, [R0,#0x2CC]|208-248-204-34
22342|code|CMP             R2, #0|0-42
22344|code|BEQ.W           loc_5958|0-240-6-129
22348|code|LDR.W           R5, [R0,#0x260]|208-248-96-82
22352|code|MOV             R0, R5; size|40-70
22354|code|BLX             malloc|252-247-30-235
22358|code|STR             R0, [SP,#0x58+ptr]|11-144
22360|code|CMP             R0, #0|0-40
22362|code|BEQ.W           loc_597C|0-240-15-129
22366|code|MOV             R0, R5; size|40-70
22368|code|BLX             malloc|252-247-22-235
22372|code|STR             R0, [SP,#0x58+s2]|5-144
22374|code|CMP             R0, #0|0-40
22376|code|BEQ.W           loc_599E|0-240-25-129
22380|code|MOVS            R1, #0; offset|0-33
22382|code|LDR             R0, [R4,#8]; fd|160-104
22384|code|MOV             R2, R1; whence|10-70
22386|code|MOV             R5, R4|37-70
22388|code|BLX             lseek|252-247-146-234
22392|code|MOVS            R2, #0|0-34
22394|code|MOVS            R3, #0|0-35
22396|code|STRD.W          R2, R3, [R5,#0x2A8]!|229-233-170-35
22400|code|ASRS            R1, R0, #0x1F|193-23
22402|code|ADDS            R2, R1, #1|74-28
22404|code|IT EQ|8-191
22406|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
22410|code|BEQ.W           loc_59C0|0-240-25-129
22414|code|ORRS.W          R3, R0, R1|80-234-1-3
22418|code|BNE.W           loc_5968|64-240-233-128
22422|code|MOVS            R3, #1|1-35
22424|code|LDR             R0, [R4,#8]; fildes|160-104
22426|code|STRH.W          R3, [R4,#0x498]|164-248-152-52
22430|code|BLX             fdatasync|252-247-52-236
22434|code|MOVS            R3, #0|0-35
22436|code|STRH.W          R3, [R4,#0x498]|164-248-152-52
22440|code|CMP             R0, #0|0-40
22442|code|BNE.W           loc_590E|64-240-176-128
22446|code|LDR.W           R3, [R4,#0x2C8]|212-248-200-50
22450|code|ADD.W           R2, R4, #0x2D4|4-245-53-114
22454|code|ADD.W           R1, R4, #0x2CC|4-245-51-113
22458|code|STR             R2, [SP,#0x58+var_3C]|7-146
22460|code|MOV             R0, R2|16-70
22462|code|LDR             R3, [R3,#4]|91-104
22464|code|BLX             R3|152-71
22466|code|ORRS.W          R3, R8, R9|88-234-9-3
22470|code|BEQ.W           loc_58D0|0-240-131-128
22474|code|LDR             R3, =(aSTheSizeOfSIsN - 0x57D4); "%s: The size of '%s' is not a multiple "...|139-75
22476|code|STRD.W          R8, R9, [SP,#0x58+var_50]|205-233-2-137
22480|code|ADD             R3, PC; "%s: The size of '%s' is not a multiple "...|123-68
22482|code|STR             R3, [SP,#0x58+var_34]|9-147
22484|code|LDR             R3, =(aNwipeRandomVer - 0x57DE); "nwipe_random_verify"|137-75
22486|code|LDR.W           R8, [SP,#0x58+ptr]|221-248-44-128
22490|code|ADD             R3, PC; "nwipe_random_verify"|123-68
22492|code|STR             R3, [SP,#0x58+var_30]|10-147
22494|code|LDR             R3, =(aSPartialReadFr - 0x57E4); "%s: Partial read from '%s', %i bytes sh"...|136-75
22496|code|ADD             R3, PC; "%s: Partial read from '%s', %i bytes sh"...|123-68
22498|code|STR             R3, [SP,#0x58+var_38]|8-147
22500|code|LDR             R3, =(aNwipeRandomVer - 0x57EA); "nwipe_random_verify"|135-75
22502|code|ADD             R3, PC; "nwipe_random_verify"|123-68
22504|code|STR             R3, [SP,#0x58+var_40]|6-147
22506|code|B               loc_58A6|92-224
22508|code|LDR.W           R3, [R4,#0x2C8]|212-248-200-50
22512|code|MOV             R2, R9|74-70
22514|code|LDR             R1, [SP,#0x58+s2]|5-153
22516|code|LDR             R0, [SP,#0x58+var_3C]|7-152
22518|code|LDR             R3, [R3,#8]|155-104
22520|code|BLX             R3|152-71
22522|code|MOV             R1, R8; buf|65-70
22524|code|MOV             R2, R9; nbytes|74-70
22526|code|LDR             R0, [R4,#8]; fd|160-104
22528|code|BLX             read|252-247-248-233
22532|code|LDR             R1, [SP,#0x58+var_38]|8-153
22534|code|LDR             R2, [SP,#0x58+var_40]|6-154
22536|code|SUBS            R7, R0, #0|7-30
22538|code|MOV.W           R0, #4|79-240-4-0
22542|code|RSB.W           R6, R7, R9|199-235-9-6
22546|code|BLT             loc_58E4|103-219
22548|code|CMP             R7, R9|79-69
22550|code|BEQ             loc_5844|21-208
22552|code|LDR.W           R3, [R4,#0x220]|212-248-32-50
22556|code|STR             R6, [SP,#0x58+var_58]|0-150
22558|code|BL              sub_66B0|0-240-71-255
22562|code|ADD.W           R3, R4, #0x4A8|4-245-149-99
22566|code|LDR             R0, [R4,#8]; fd|160-104
22568|code|MOV             R1, R6; offset|49-70
22570|code|LDRD.W          R10, R11, [R3]|211-233-0-171
22574|code|MOVS            R2, #1; whence|1-34
22576|code|ADDS.W          R10, R10, #1|26-241-1-10
22580|code|ADC.W           R11, R11, #0|75-241-0-11
22584|code|STRD.W          R10, R11, [R3]|195-233-0-171
22588|code|BLX             lseek|252-247-46-234
22592|code|ADDS            R3, R0, #1|67-28
22594|code|BEQ             loc_5930|117-208
22596|code|MOV             R2, R9; n|74-70
22598|code|MOV             R0, R8; s1|64-70
22600|code|LDR             R1, [SP,#0x58+s2]; s2|5-153
22602|code|MOV             R6, R4|38-70
22604|code|BLX             memcmp|252-247-44-234
22608|code|LDRD.W          R10, R11, [SP,#0x58+var_50]|221-233-2-171
22612|code|ASRS            R3, R7, #0x1F|251-23
22614|code|MOV             R2, R7|58-70
22616|code|SUBS.W          R10, R10, R7|186-235-7-10
22620|code|ADD.W           LR, R4, #0x4A8|4-245-149-110
22624|code|SBC.W           R11, R11, R3|107-235-3-11
22628|code|STRD.W          R10, R11, [SP,#0x58+var_50]|205-233-2-171
22632|code|CBZ             R0, loc_587A|56-177
22634|code|LDRD.W          R0, R1, [LR]|222-233-0-1
22638|code|ADDS.W          R10, R0, #1|16-241-1-10
22642|code|ADC.W           R11, R1, #0|65-241-0-11
22646|code|STRD.W          R10, R11, [LR]|206-233-0-171
22650|code|LDRD.W          R0, R1, [R6,#0x2E0]!|246-233-184-1
22654|code|ADDS.W          R10, R0, R2|16-235-2-10
22658|code|ADC.W           R11, R1, R3|65-235-3-11
22662|code|LDRD.W          R0, R1, [R5]|213-233-0-1
22666|code|ADDS            R0, R0, R2|128-24
22668|code|ADCS            R1, R3|89-65
22670|code|MOV             R2, R0|2-70
22672|code|MOV             R3, R1|11-70
22674|code|STRD.W          R2, R3, [R5]|197-233-0-35
22678|code|STRD.W          R10, R11, [R6]|198-233-0-171
22682|code|BLX             pthread_testcancel|252-247-156-235
22686|code|LDRD.W          R2, R3, [SP,#0x58+var_50]|221-233-2-35
22690|code|ORRS            R3, R2|19-67
22692|code|BEQ             loc_58D0|20-208
22694|code|LDR.W           R2, [R4,#0x260]|212-248-96-34
22698|code|LDRD.W          R6, R7, [SP,#0x58+var_50]|221-233-2-103
22702|code|ASRS            R1, R2, #0x1F|209-23
22704|code|MOV             R9, R2|145-70
22706|code|CMP             R7, R1|143-66
22708|code|IT EQ|8-191
22710|code|CMPEQ           R6, R2|150-66
22712|code|BCS             loc_57EC|152-210
22714|code|LDR.W           R3, [R4,#0x220]|212-248-32-50
22718|code|MOVS            R0, #4|4-32
22720|code|STR             R2, [SP,#0x58+var_58]|0-146
22722|code|LDR             R1, [SP,#0x58+var_34]|9-153
22724|code|LDR             R2, [SP,#0x58+var_30]|10-154
22726|code|LDR.W           R9, [SP,#0x58+var_50]|221-248-8-144
22730|code|BL              sub_66B0|0-240-241-254
22734|code|B               loc_57EC|141-231
22736|code|LDR             R0, [SP,#0x58+ptr]; ptr|11-152
22738|code|BLX             free|252-247-174-233
22742|code|LDR             R0, [SP,#0x58+s2]; ptr|5-152
22744|code|BLX             free|252-247-170-233
22748|code|MOVS            R0, #0|0-32
22750|code|ADD             SP, SP, #0x34 ; '4'|13-176
22752|code|POP.W           {R4-R11,PC}|189-232-240-143
22756|code|BLX             __errno_location|252-247-204-234
22760|code|LDR             R1, =(aNwipeRandomVer - 0x58F0); "nwipe_random_verify"|71-73
22762|code|LDR             R2, =(aRead_0 - 0x58F2); "read"|72-74
22764|code|ADD             R1, PC; "nwipe_random_verify"|121-68
22766|code|ADD             R2, PC; "read"|122-68
22768|code|LDR             R0, [R0]|0-104
22770|code|BL              sub_6A4C|1-240-171-248
22774|code|LDR             R1, =(aUnableToReadFr - 0x5902); "Unable to read from '%s'."|70-73
22776|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
22780|code|MOVS            R0, #5|5-32
22782|code|ADD             R1, PC; "Unable to read from '%s'."|121-68
22784|code|BL              sub_66B0|0-240-214-254
22788|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
22792|code|ADD             SP, SP, #0x34 ; '4'|13-176
22794|code|POP.W           {R4-R11,PC}|189-232-240-143
22798|code|BLX             __errno_location|252-247-184-234
22802|code|LDR             R1, =(aNwipeRandomVer - 0x591A); "nwipe_random_verify"|64-73
22804|code|LDR             R2, =(aFdatasync_0 - 0x591C); "fdatasync"|64-74
22806|code|ADD             R1, PC; "nwipe_random_verify"|121-68
22808|code|ADD             R2, PC; "fdatasync"|122-68
22810|code|LDR             R0, [R0]|0-104
22812|code|BL              sub_6A4C|1-240-150-248
22816|code|LDR             R1, =(aBufferFlushFai - 0x592C); "Buffer flush failure on '%s'."|62-73
22818|code|MOVS            R0, #4|4-32
22820|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
22824|code|ADD             R1, PC; "Buffer flush failure on '%s'."|121-68
22826|code|BL              sub_66B0|0-240-193-254
22830|code|B               loc_57AE|62-231
22832|code|MOV             R6, R0|6-70
22834|code|BLX             __errno_location|252-247-166-234
22838|code|LDR             R2, =(aLseek_0 - 0x593E); "lseek"|58-74
22840|code|LDR             R1, [SP,#0x58+var_40]|6-153
22842|code|ADD             R2, PC; "lseek"|122-68
22844|code|LDR             R0, [R0]|0-104
22846|code|BL              sub_6A4C|1-240-133-248
22850|code|LDR             R1, =(aUnableToBumpTh_0 - 0x594E); "Unable to bump the '%s' file offset aft"...|56-73
22852|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
22856|code|MOVS            R0, #5|5-32
22858|code|ADD             R1, PC; "Unable to bump the '%s' file offset aft"...|121-68
22860|code|BL              sub_66B0|0-240-176-254
22864|code|MOV             R0, R6|48-70
22866|code|ADD             SP, SP, #0x34 ; '4'|13-176
22868|code|POP.W           {R4-R11,PC}|189-232-240-143
22872|code|LDR             R1, =(aTheEntropyLeng - 0x5960); "The entropy length member is %i."|51-73
22874|code|MOVS            R0, #7|7-32
22876|code|ADD             R1, PC; "The entropy length member is %i."|121-68
22878|code|BL              sub_66B0|0-240-167-254
22882|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
22886|code|B               loc_58DE|186-231
22888|code|LDR             R1, =(aLseekReturnedA - 0x5974); "lseek() returned a bogus offset on '%s'"...|48-73
22890|code|MOVS            R0, #7|7-32
22892|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
22896|code|ADD             R1, PC; "lseek() returned a bogus offset on '%s'"...|121-68
22898|code|BL              sub_66B0|0-240-157-254
22902|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
22906|code|B               loc_58DE|176-231
22908|code|BLX             __errno_location|252-247-128-234
22912|code|LDR             R1, =(aNwipeRandomVer - 0x5988); "nwipe_random_verify"|43-73
22914|code|LDR             R2, =(aMalloc_0 - 0x598A); "malloc"|44-74
22916|code|ADD             R1, PC; "nwipe_random_verify"|121-68
22918|code|ADD             R2, PC; "malloc"|122-68
22920|code|LDR             R0, [R0]|0-104
22922|code|BL              sub_6A4C|1-240-95-248
22926|code|LDR             R1, =(aUnableToAlloca_1 - 0x5996); "Unable to allocate memory for the input"...|42-73
22928|code|MOVS            R0, #6|6-32
22930|code|ADD             R1, PC; "Unable to allocate memory for the input"...|121-68
22932|code|BL              sub_66B0|0-240-140-254
22936|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
22940|code|B               loc_58DE|159-231
22942|code|BLX             __errno_location|252-247-112-234
22946|code|LDR             R1, =(aNwipeRandomVer - 0x59AA); "nwipe_random_verify"|38-73
22948|code|LDR             R2, =(aMalloc_0 - 0x59AC); "malloc"|38-74
22950|code|ADD             R1, PC; "nwipe_random_verify"|121-68
22952|code|ADD             R2, PC; "malloc"|122-68
22954|code|LDR             R0, [R0]|0-104
22956|code|BL              sub_6A4C|1-240-78-248
22960|code|LDR             R1, =(aUnableToAlloca - 0x59B8); "Unable to allocate memory for the patte"...|36-73
22962|code|MOVS            R0, #6|6-32
22964|code|ADD             R1, PC; "Unable to allocate memory for the patte"...|121-68
22966|code|BL              sub_66B0|0-240-123-254
22970|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
22974|code|B               loc_58DE|142-231
22976|code|BLX             __errno_location|252-247-94-234
22980|code|LDR             R1, =(aNwipeRandomVer - 0x59CC); "nwipe_random_verify"|32-73
22982|code|LDR             R2, =(aLseek_0 - 0x59CE); "lseek"|33-74
22984|code|ADD             R1, PC; "nwipe_random_verify"|121-68
22986|code|ADD             R2, PC; "lseek"|122-68
22988|code|LDR             R0, [R0]|0-104
22990|code|BL              sub_6A4C|1-240-61-248
22994|code|LDR             R1, =(aUnableToResetT - 0x59DE); "Unable to reset the '%s' file offset."|31-73
22996|code|MOVS            R0, #6|6-32
22998|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
23002|code|ADD             R1, PC; "Unable to reset the '%s' file offset."|121-68
23004|code|BL              sub_66B0|0-240-104-254
23008|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23012|code|B               loc_58DE|123-231
23014|code|LDR             R1, =(aNullSeedPointe - 0x59EE); "Null seed pointer."|27-73
23016|code|MOVS            R0, #7|7-32
23018|code|ADD             R1, PC; "Null seed pointer."|121-68
23020|code|BL              sub_66B0|0-240-96-254
23024|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23028|code|B               loc_58DE|115-231
23030|data|ALIGN 4|0-191
23032|data|DCD aSTheSizeOfSIsN - 0x57D4; "%s: The size of '%s' is not a multiple "...|244-74-0-0
23036|data|DCD aNwipeRandomVer - 0x57DE; "nwipe_random_verify"|158-73-0-0
23040|data|DCD aSPartialReadFr - 0x57E4; "%s: Partial read from '%s', %i bytes sh"...|72-75-0-0
23044|data|DCD aNwipeRandomVer - 0x57EA; "nwipe_random_verify"|146-73-0-0
23048|data|DCD aNwipeRandomVer - 0x58F0; "nwipe_random_verify"|140-72-0-0
23052|data|DCD aRead_0 - 0x58F2; "read"|22-74-0-0
23056|data|DCD aUnableToReadFr - 0x5902; "Unable to read from '%s'."|14-74-0-0
23060|data|DCD aNwipeRandomVer - 0x591A; "nwipe_random_verify"|98-72-0-0
23064|data|DCD aFdatasync_0 - 0x591C; "fdatasync"|128-73-0-0
23068|data|DCD aBufferFlushFai - 0x592C; "Buffer flush failure on '%s'."|124-73-0-0
23072|data|DCD aLseek_0 - 0x593E; "lseek"|14-50-0-0
23076|data|DCD aUnableToBumpTh_0 - 0x594E; "Unable to bump the '%s' file offset aft"...|10-74-0-0
23080|data|DCD aTheEntropyLeng - 0x5960; "The entropy length member is %i."|128-72-0-0
23084|data|DCD aLseekReturnedA - 0x5974; "lseek() returned a bogus offset on '%s'"...|252-72-0-0
23088|data|DCD aNwipeRandomVer - 0x5988; "nwipe_random_verify"|244-71-0-0
23092|data|DCD aMalloc_0 - 0x598A; "malloc"|122-72-0-0
23096|data|DCD aUnableToAlloca_1 - 0x5996; "Unable to allocate memory for the input"...|118-72-0-0
23100|data|DCD aNwipeRandomVer - 0x59AA; "nwipe_random_verify"|210-71-0-0
23104|data|DCD aMalloc_0 - 0x59AC; "malloc"|88-72-0-0
23108|data|DCD aUnableToAlloca - 0x59B8; "Unable to allocate memory for the patte"...|132-72-0-0
23112|data|DCD aNwipeRandomVer - 0x59CC; "nwipe_random_verify"|176-71-0-0
23116|data|DCD aLseek_0 - 0x59CE; "lseek"|126-49-0-0
23120|data|DCD aUnableToResetT - 0x59DE; "Unable to reset the '%s' file offset."|158-49-0-0
23124|data|DCD aNullSeedPointe - 0x59EE; "Null seed pointer."|222-71-0-0
23128|code|ADD.W           R2, R0, #0x228|0-245-10-114
23132|code|LDR.W           R3, [R0,#0x2D0]|208-248-208-50
23136|code|PUSH.W          {R4-R11,LR}|45-233-240-79
23140|code|MOV             R7, R0|7-70
23142|code|LDRD.W          R0, R1, [R2]|210-233-0-1
23146|code|SUB             SP, SP, #0x24|137-176
23148|code|STRD.W          R0, R1, [SP,#0x48+var_40]|205-233-2-1
23152|code|CMP             R3, #0|0-43
23154|code|BEQ.W           loc_5CB2|0-240-30-129
23158|code|LDR.W           R2, [R7,#0x2CC]|215-248-204-34
23162|code|CMP             R2, #0|0-42
23164|code|BEQ.W           loc_5C42|0-240-225-128
23168|code|LDR.W           R0, [R7,#0x260]; size|215-248-96-2
23172|code|BLX             malloc|252-247-132-233
23176|code|MOV             R8, R0|128-70
23178|code|CMP             R0, #0|0-40
23180|code|BEQ.W           loc_5C66|0-240-235-128
23184|code|LDR.W           R3, [R7,#0x2C8]|215-248-200-50
23188|code|ADD.W           R11, R7, #0x2D4|7-245-53-123
23192|code|ADD.W           R1, R7, #0x2CC|7-245-51-113
23196|code|MOV             R9, R7|185-70
23198|code|MOV             R0, R11|88-70
23200|code|LDR             R3, [R3,#4]|91-104
23202|code|BLX             R3|152-71
23204|code|MOVS            R1, #0; offset|0-33
23206|code|MOV             R2, R1; whence|10-70
23208|code|LDR             R0, [R7,#8]; fd|184-104
23210|code|BLX             lseek|252-247-248-232
23214|code|MOVS            R2, #0|0-34
23216|code|MOVS            R3, #0|0-35
23218|code|STRD.W          R2, R3, [R9,#0x2A8]!|233-233-170-35
23222|code|ASRS            R1, R0, #0x1F|193-23
23224|code|ADDS            R2, R1, #1|74-28
23226|code|IT EQ|8-191
23228|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
23232|code|BEQ.W           loc_5C8A|0-240-227-128
23236|code|ORRS.W          R3, R0, R1|80-234-1-3
23240|code|BNE.W           loc_5C52|64-240-195-128
23244|code|LDRD.W          R2, R3, [SP,#0x48+var_40]|221-233-2-35
23248|code|ORRS            R3, R2|19-67
23250|code|BEQ             loc_5BA6|104-208
23252|code|LDR             R2, =(aSTheSizeOfSIsN - 0x5ADC); "%s: The size of '%s' is not a multiple "...|123-74
23254|code|LDR             R3, =(aNwipeRandomVer - 0x5AE2); "nwipe_random_verify"|124-75
23256|code|ADD             R2, PC; "%s: The size of '%s' is not a multiple "...|122-68
23258|code|STR             R2, [SP,#0x48+var_30]|6-146
23260|code|LDR             R2, =(aPartialWriteOn - 0x5AEA); "Partial write on '%s', %i bytes short."|123-74
23262|code|ADD             R3, PC; "nwipe_random_verify"|123-68
23264|code|ADDS            R3, #0x14|20-51
23266|code|STR.W           R11, [SP,#0x48+var_34]|205-248-20-176
23270|code|ADD             R2, PC; "Partial write on '%s', %i bytes short."|122-68
23272|code|STR             R3, [SP,#0x48+var_2C]|7-147
23274|code|STR             R2, [SP,#0x48+var_38]|4-146
23276|code|B               loc_5B7C|70-224
23278|code|LDR.W           R3, [R7,#0x2C8]|215-248-200-50
23282|code|MOV             R1, R8|65-70
23284|code|MOV             R2, R10|82-70
23286|code|LDR             R0, [SP,#0x48+var_34]|5-152
23288|code|MOV             R6, R7|62-70
23290|code|LDR             R3, [R3,#8]|155-104
23292|code|BLX             R3|152-71
23294|code|MOV             R1, R8; buf|65-70
23296|code|LDR             R0, [R7,#8]; fd|184-104
23298|code|MOV             R2, R10; n|82-70
23300|code|BLX             write|252-247-236-233
23304|code|LDR             R1, [SP,#0x48+var_38]|4-153
23306|code|SUBS            R5, R0, #0|5-30
23308|code|MOV.W           R0, #4|79-240-4-0
23312|code|RSB.W           R4, R5, R10|197-235-10-4
23316|code|BLT             loc_5BEA|105-219
23318|code|CMP             R5, R10|85-69
23320|code|MOV             R3, R4|35-70
23322|code|BEQ             loc_5B42|18-208
23324|code|LDRD.W          R10, R11, [R6,#0x2B0]!|246-233-172-171
23328|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
23332|code|ADDS.W          R10, R10, R4|26-235-4-10
23336|code|ADC.W           R11, R11, R4,ASR#31|75-235-228-123
23340|code|STRD.W          R10, R11, [R6]|198-233-0-171
23344|code|BL              sub_66B0|0-240-190-253
23348|code|MOV             R1, R4; offset|33-70
23350|code|LDR             R0, [R7,#8]; fd|184-104
23352|code|MOVS            R2, #1; whence|1-34
23354|code|BLX             lseek|252-247-176-232
23358|code|ADDS            R3, R0, #1|67-28
23360|code|BEQ             loc_5C16|105-208
23362|code|MOV             R2, R5|42-70
23364|code|ASRS            R3, R5, #0x1F|235-23
23366|code|LDRD.W          R4, R5, [SP,#0x48+var_40]|221-233-2-69
23370|code|MOV             R6, R7|62-70
23372|code|LDRD.W          R0, R1, [R9]|217-233-0-1
23376|code|LDRD.W          R10, R11, [R6,#0x2E0]!|246-233-184-171
23380|code|SUBS            R4, R4, R2|164-26
23382|code|SBC.W           R5, R5, R3|101-235-3-5
23386|code|ADDS            R0, R0, R2|128-24
23388|code|ADCS            R1, R3|89-65
23390|code|ADDS.W          R2, R2, R10|18-235-10-2
23394|code|ADC.W           R3, R3, R11|67-235-11-3
23398|code|STRD.W          R0, R1, [R9]|201-233-0-1
23402|code|STRD.W          R2, R3, [R6]|198-233-0-35
23406|code|STRD.W          R4, R5, [SP,#0x48+var_40]|205-233-2-69
23410|code|BLX             pthread_testcancel|252-247-48-234
23414|code|ORRS.W          R3, R4, R5|84-234-5-3
23418|code|BEQ             loc_5BA6|20-208
23420|code|LDR.W           R2, [R7,#0x260]|215-248-96-34
23424|code|LDRD.W          R4, R5, [SP,#0x48+var_40]|221-233-2-69
23428|code|ASRS            R1, R2, #0x1F|209-23
23430|code|MOV             R10, R2|146-70
23432|code|CMP             R5, R1|141-66
23434|code|IT EQ|8-191
23436|code|CMPEQ           R4, R2|148-66
23438|code|BCS             loc_5AEE|174-210
23440|code|LDR.W           R3, [R7,#0x220]|215-248-32-50
23444|code|MOVS            R0, #4|4-32
23446|code|STR             R2, [SP,#0x48+var_48]|0-146
23448|code|LDR             R1, [SP,#0x48+var_30]|6-153
23450|code|LDR             R2, [SP,#0x48+var_2C]|7-154
23452|code|LDR.W           R10, [SP,#0x48+var_40]|221-248-8-160
23456|code|BL              sub_66B0|0-240-134-253
23460|code|B               loc_5AEE|163-231
23462|code|MOV             R0, R8; ptr|64-70
23464|code|MOVS            R4, #0|0-36
23466|code|BLX             free|252-247-66-232
23470|code|MOVS            R3, #1|1-35
23472|code|LDR             R0, [R7,#8]; fildes|184-104
23474|code|STRH.W          R3, [R7,#0x498]|167-248-152-52
23478|code|BLX             fdatasync|252-247-40-234
23482|code|STRH.W          R4, [R7,#0x498]|167-248-152-68
23486|code|CBZ             R0, loc_5BE4|136-177
23488|code|BLX             __errno_location|252-247-94-233
23492|code|LDR             R1, =(aNwipeRandomVer - 0x5BCC); "nwipe_random_verify"|66-73
23494|code|LDR             R2, =(aFdatasync_0 - 0x5BCE); "fdatasync"|67-74
23496|code|ADD             R1, PC; "nwipe_random_verify"|121-68
23498|code|ADD             R2, PC; "fdatasync"|122-68
23500|code|ADDS            R1, #0x14|20-49
23502|code|LDR             R0, [R0]|0-104
23504|code|BL              sub_6A4C|0-240-60-255
23508|code|LDR             R1, =(aBufferFlushFai - 0x5BE0); "Buffer flush failure on '%s'."|64-73
23510|code|MOVS            R0, #4|4-32
23512|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
23516|code|ADD             R1, PC; "Buffer flush failure on '%s'."|121-68
23518|code|BL              sub_66B0|0-240-103-253
23522|code|MOV             R0, R4|32-70
23524|code|ADD             SP, SP, #0x24 ; '$'|9-176
23526|code|POP.W           {R4-R11,PC}|189-232-240-143
23530|code|BLX             __errno_location|252-247-74-233
23534|code|LDR             R1, =(aNwipeRandomVer - 0x5BF6); "nwipe_random_verify"|59-73
23536|code|LDR             R2, =(aWrite - 0x5BF8); "write"|59-74
23538|code|ADD             R1, PC; "nwipe_random_verify"|121-68
23540|code|ADD             R2, PC; "write"|122-68
23542|code|ADDS            R1, #0x14|20-49
23544|code|LDR             R0, [R0]|0-104
23546|code|BL              sub_6A4C|0-240-39-255
23550|code|LDR             R1, =(aUnableToReadFr - 0x5C0A); "Unable to read from '%s'."|57-73
23552|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
23556|code|MOVS            R0, #6|6-32
23558|code|ADD             R1, PC; "Unable to read from '%s'."|121-68
23560|code|BL              sub_66B0|0-240-82-253
23564|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23568|code|ADD             SP, SP, #0x24 ; '$'|9-176
23570|code|POP.W           {R4-R11,PC}|189-232-240-143
23574|code|MOV             R4, R0|4-70
23576|code|BLX             __errno_location|252-247-50-233
23580|code|LDR             R1, =(aNwipeRandomVer - 0x5C24); "nwipe_random_verify"|50-73
23582|code|LDR             R2, =(aLseek_0 - 0x5C26); "lseek"|51-74
23584|code|ADD             R1, PC; "nwipe_random_verify"|121-68
23586|code|ADD             R2, PC; "lseek"|122-68
23588|code|ADDS            R1, #0x14|20-49
23590|code|LDR             R0, [R0]|0-104
23592|code|BL              sub_6A4C|0-240-16-255
23596|code|LDR             R1, =(aUnableToBumpTh - 0x5C38); "Unable to bump the '%s' file offset aft"...|48-73
23598|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
23602|code|MOVS            R0, #5|5-32
23604|code|ADD             R1, PC; "Unable to bump the '%s' file offset aft"...|121-68
23606|code|BL              sub_66B0|0-240-59-253
23610|code|MOV             R0, R4|32-70
23612|code|ADD             SP, SP, #0x24 ; '$'|9-176
23614|code|POP.W           {R4-R11,PC}|189-232-240-143
23618|code|LDR             R1, =(aFunctionTheEnt - 0x5C4A); "__FUNCTION__: The entropy length member"...|44-73
23620|code|MOVS            R0, #7|7-32
23622|code|ADD             R1, PC; "__FUNCTION__: The entropy length member"...|121-68
23624|code|BL              sub_66B0|0-240-50-253
23628|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23632|code|B               loc_5BE4|200-231
23634|code|LDR             R1, =(aFunctionLseekR - 0x5C5E); "__FUNCTION__: lseek() returned a bogus "...|41-73
23636|code|MOVS            R0, #7|7-32
23638|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
23642|code|ADD             R1, PC; "__FUNCTION__: lseek() returned a bogus "...|121-68
23644|code|BL              sub_66B0|0-240-40-253
23648|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23652|code|B               loc_5BE4|190-231
23654|code|BLX             __errno_location|252-247-12-233
23658|code|LDR             R1, =(aNwipeRandomVer - 0x5C72); "nwipe_random_verify"|36-73
23660|code|LDR             R2, =(aMalloc_0 - 0x5C74); "malloc"|36-74
23662|code|ADD             R1, PC; "nwipe_random_verify"|121-68
23664|code|ADD             R2, PC; "malloc"|122-68
23666|code|ADDS            R1, #0x14|20-49
23668|code|LDR             R0, [R0]|0-104
23670|code|BL              sub_6A4C|0-240-233-254
23674|code|LDR             R1, =(aUnableToAlloca_0 - 0x5C82); "Unable to allocate memory for the outpu"...|34-73
23676|code|MOVS            R0, #6|6-32
23678|code|ADD             R1, PC; "Unable to allocate memory for the outpu"...|121-68
23680|code|BL              sub_66B0|0-240-22-253
23684|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23688|code|B               loc_5BE4|172-231
23690|code|BLX             __errno_location|252-247-250-232
23694|code|LDR             R1, =(aNwipeRandomVer - 0x5C96); "nwipe_random_verify"|30-73
23696|code|LDR             R2, =(aLseek_0 - 0x5C98); "lseek"|30-74
23698|code|ADD             R1, PC; "nwipe_random_verify"|121-68
23700|code|ADD             R2, PC; "lseek"|122-68
23702|code|ADDS            R1, #0x14|20-49
23704|code|LDR             R0, [R0]|0-104
23706|code|BL              sub_6A4C|0-240-215-254
23710|code|LDR             R1, =(aUnableToResetT - 0x5CAA); "Unable to reset the '%s' file offset."|28-73
23712|code|MOVS            R0, #6|6-32
23714|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
23718|code|ADD             R1, PC; "Unable to reset the '%s' file offset."|121-68
23720|code|BL              sub_66B0|0-240-2-253
23724|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23728|code|B               loc_5BE4|152-231
23730|code|LDR             R1, =(aFunctionNullSe - 0x5CBA); "__FUNCTION__: Null seed pointer."|24-73
23732|code|MOVS            R0, #7|7-32
23734|code|ADD             R1, PC; "__FUNCTION__: Null seed pointer."|121-68
23736|code|BL              sub_66B0|0-240-250-252
23740|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23744|code|B               loc_5BE4|144-231
23746|data|ALIGN 4|0-191
23748|data|DCD aSTheSizeOfSIsN - 0x5ADC; "%s: The size of '%s' is not a multiple "...|236-71-0-0
23752|data|DCD aNwipeRandomVer - 0x5AE2; "nwipe_random_verify"|154-70-0-0
23756|data|DCD aPartialWriteOn - 0x5AEA; "Partial write on '%s', %i bytes short."|114-73-0-0
23760|data|DCD aNwipeRandomVer - 0x5BCC; "nwipe_random_verify"|176-69-0-0
23764|data|DCD aFdatasync_0 - 0x5BCE; "fdatasync"|206-70-0-0
23768|data|DCD aBufferFlushFai - 0x5BE0; "Buffer flush failure on '%s'."|200-70-0-0
23772|data|DCD aNwipeRandomVer - 0x5BF6; "nwipe_random_verify"|134-69-0-0
23776|data|DCD aWrite - 0x5BF8; "write"|92-72-0-0
23780|data|DCD aUnableToReadFr - 0x5C0A; "Unable to read from '%s'."|6-71-0-0
23784|data|DCD aNwipeRandomVer - 0x5C24; "nwipe_random_verify"|88-69-0-0
23788|data|DCD aLseek_0 - 0x5C26; "lseek"|38-47-0-0
23792|data|DCD aUnableToBumpTh - 0x5C38; "Unable to bump the '%s' file offset aft"...|76-72-0-0
23796|data|DCD aFunctionTheEnt - 0x5C4A; "__FUNCTION__: The entropy length member"...|110-71-0-0
23800|data|DCD aFunctionLseekR - 0x5C5E; "__FUNCTION__: lseek() returned a bogus "...|190-71-0-0
23804|data|DCD aNwipeRandomVer - 0x5C72; "nwipe_random_verify"|10-69-0-0
23808|data|DCD aMalloc_0 - 0x5C74; "malloc"|144-69-0-0
23812|data|DCD aUnableToAlloca_0 - 0x5C82; "Unable to allocate memory for the outpu"...|102-71-0-0
23816|data|DCD aNwipeRandomVer - 0x5C96; "nwipe_random_verify"|230-68-0-0
23820|data|DCD aLseek_0 - 0x5C98; "lseek"|180-46-0-0
23824|data|DCD aUnableToResetT - 0x5CAA; "Unable to reset the '%s' file offset."|210-46-0-0
23828|data|DCD aFunctionNullSe - 0x5CBA; "__FUNCTION__: Null seed pointer."|218-70-0-0
23832|code|ADD.W           R3, R0, #0x228|0-245-10-115
23836|code|PUSH.W          {R4-R11,LR}|45-233-240-79
23840|code|SUB             SP, SP, #0x2C|139-176
23842|code|LDRD.W          R2, R3, [R3]|211-233-0-35
23846|code|MOV             R7, R0|7-70
23848|code|STR             R1, [SP,#0x50+var_40]|4-145
23850|code|STRD.W          R2, R3, [SP,#0x50+var_48]|205-233-2-35
23854|code|CMP             R1, #0|0-41
23856|code|BEQ.W           loc_5FF2|0-240-95-129
23860|code|LDR             R3, [SP,#0x50+var_40]|4-155
23862|code|LDR             R6, [R3]|30-104
23864|code|CMP             R6, #0|0-46
23866|code|BLE.W           loc_5F5C|64-243-15-129
23870|code|LDR.W           R4, [R0,#0x260]|208-248-96-66
23874|code|MOV             R0, R4; size|32-70
23876|code|BLX             malloc|252-247-36-232
23880|code|MOV             R11, R0|131-70
23882|code|CMP             R0, #0|0-40
23884|code|BEQ.W           loc_5F82|0-240-25-129
23888|code|ADD.W           R0, R4, R6,LSL#1; size|4-235-70-0
23892|code|BLX             malloc|252-247-28-232
23896|code|STR             R0, [SP,#0x50+dest]|5-144
23898|code|CMP             R0, #0|0-40
23900|code|BEQ.W           loc_5FCE|0-240-55-129
23904|code|ADD             R4, R6|52-68
23906|code|ADD             R4, R0|4-68
23908|code|CMP             R0, R4|160-66
23910|code|BCS             loc_5D80|11-210
23912|code|LDR             R3, [SP,#0x50+var_40]|4-155
23914|code|LDR.W           R8, [SP,#0x50+dest]|221-248-20-128
23918|code|LDR             R5, [R3,#4]|93-104
23920|code|MOV             R0, R8; dest|64-70
23922|code|MOV             R1, R5; src|41-70
23924|code|ADD             R8, R6|176-68
23926|code|MOV             R2, R6; n|50-70
23928|code|BLX             memcpy|251-247-126-239
23932|code|CMP             R8, R4|160-69
23934|code|BCC             loc_5D70|247-211
23936|code|MOVS            R3, #1|1-35
23938|code|LDR             R0, [R7,#8]; fildes|184-104
23940|code|STRH.W          R3, [R7,#0x498]|167-248-152-52
23944|code|BLX             fdatasync|252-247-62-233
23948|code|MOVS            R3, #0|0-35
23950|code|STRH.W          R3, [R7,#0x498]|167-248-152-52
23954|code|CMP             R0, #0|0-40
23956|code|BNE.W           loc_5F38|64-240-208-128
23960|code|MOVS            R1, #0; offset|0-33
23962|code|LDR             R0, [R7,#8]; fd|184-104
23964|code|MOV             R2, R1; whence|10-70
23966|code|MOV             R9, R7|185-70
23968|code|BLX             lseek|251-247-124-239
23972|code|MOVS            R2, #0|0-34
23974|code|MOVS            R3, #0|0-35
23976|code|STRD.W          R2, R3, [R9,#0x2A8]!|233-233-170-35
23980|code|ASRS            R1, R0, #0x1F|193-23
23982|code|ADDS            R2, R1, #1|74-28
23984|code|IT EQ|8-191
23986|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
23990|code|BEQ.W           loc_5FA6|0-240-246-128
23994|code|ORRS.W          R3, R0, R1|80-234-1-3
23998|code|BNE.W           loc_5F6E|64-240-214-128
24002|code|LDRD.W          R2, R3, [SP,#0x50+var_48]|221-233-2-35
24006|code|ORRS            R3, R2|19-67
24008|code|BEQ.W           loc_5EF8|0-240-150-128
24012|code|LDR             R2, =(aSTheSizeOfSIsN - 0x5DD8); "%s: The size of '%s' is not a multiple "...|141-74
24014|code|MOV.W           R8, #0|79-240-0-8
24018|code|LDR             R3, =(aNwipeRandomVer - 0x5DDE); "nwipe_random_verify"|141-75
24020|code|ADD             R2, PC; "%s: The size of '%s' is not a multiple "...|122-68
24022|code|STR             R2, [SP,#0x50+var_30]|8-146
24024|code|LDR             R2, =(aPartialReadOnS - 0x5DE6); "Partial read on '%s', %i bytes short."|140-74
24026|code|ADD             R3, PC; "nwipe_random_verify"|123-68
24028|code|ADDS            R3, #0x28 ; '('|40-51
24030|code|STR.W           R11, [SP,#0x50+buf]|205-248-24-176
24034|code|ADD             R2, PC; "Partial read on '%s', %i bytes short."|122-68
24036|code|STR             R3, [SP,#0x50+var_2C]|9-147
24038|code|STR             R2, [SP,#0x50+var_34]|7-146
24040|code|B               loc_5E4C|48-224
24042|code|BLX             memcmp|251-247-94-239
24046|code|ADD.W           R1, R7, #0x4A8|7-245-149-97
24050|code|CBZ             R0, loc_5E02|48-177
24052|code|LDRD.W          R2, R3, [R1]|209-233-0-35
24056|code|ADDS            R2, #1|1-50
24058|code|ADC.W           R3, R3, #0|67-241-0-3
24062|code|STRD.W          R2, R3, [R1]|193-233-0-35
24066|code|LDR             R3, [SP,#0x50+var_40]|4-155
24068|code|MOV             R6, R7|62-70
24070|code|LDR.W           R0, [R7,#0x260]|215-248-96-2
24074|code|LDR             R1, [R3]|25-104
24076|code|ADD             R0, R8|64-68
24078|code|BL              sub_8154|2-240-161-249
24082|code|MOV             R2, R5|42-70
24084|code|ASRS            R3, R5, #0x1F|235-23
24086|code|LDRD.W          R4, R5, [SP,#0x50+var_48]|221-233-2-69
24090|code|LDRD.W          R10, R11, [R6,#0x2E0]!|246-233-184-171
24094|code|SUBS            R4, R4, R2|164-26
24096|code|SBC.W           R5, R5, R3|101-235-3-5
24100|code|STRD.W          R4, R5, [SP,#0x50+var_48]|205-233-2-69
24104|code|MOV             R8, R1|136-70
24106|code|LDRD.W          R0, R1, [R9]|217-233-0-1
24110|code|ADDS            R0, R0, R2|128-24
24112|code|ADCS            R1, R3|89-65
24114|code|ADDS.W          R2, R2, R10|18-235-10-2
24118|code|ADC.W           R3, R3, R11|67-235-11-3
24122|code|STRD.W          R0, R1, [R9]|201-233-0-1
24126|code|STRD.W          R2, R3, [R6]|198-233-0-35
24130|code|BLX             pthread_testcancel|252-247-200-232
24134|code|ORRS.W          R3, R4, R5|84-234-5-3
24138|code|BEQ             loc_5EF4|83-208
24140|code|LDR.W           R2, [R7,#0x260]|215-248-96-34
24144|code|LDRD.W          R4, R5, [SP,#0x50+var_48]|221-233-2-69
24148|code|ASRS            R1, R2, #0x1F|209-23
24150|code|MOV             R10, R2|146-70
24152|code|CMP             R5, R1|141-66
24154|code|IT EQ|8-191
24156|code|CMPEQ           R4, R2|148-66
24158|code|BCC             loc_5EDE|62-211
24160|code|LDR             R4, [SP,#0x50+buf]|6-156
24162|code|MOV             R2, R10; nbytes|82-70
24164|code|LDR             R0, [R7,#8]; fd|184-104
24166|code|ADD.W           R6, R7, #0x4A8|7-245-149-102
24170|code|MOV             R1, R4; buf|33-70
24172|code|BLX             read|251-247-194-238
24176|code|LDR             R3, [SP,#0x50+dest]|5-155
24178|code|MOV             R2, R10; n|82-70
24180|code|ADD.W           R1, R3, R8; s2|3-235-8-1
24184|code|SUBS            R5, R0, #0|5-30
24186|code|MOV             R0, R4; s1|32-70
24188|code|RSB.W           R4, R5, R10|197-235-10-4
24192|code|BLT             loc_5F0C|68-219
24194|code|CMP             R5, R10|85-69
24196|code|MOV             R3, R4|35-70
24198|code|BEQ             loc_5DEA|176-208
24200|code|LDRD.W          R10, R11, [R6]|214-233-0-171
24204|code|MOVS            R0, #4|4-32
24206|code|LDR             R1, [SP,#0x50+var_34]|7-153
24208|code|ADDS.W          R10, R10, #1|26-241-1-10
24212|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24216|code|ADC.W           R11, R11, #0|75-241-0-11
24220|code|STRD.W          R10, R11, [R6]|198-233-0-171
24224|code|BL              sub_66B0|0-240-6-252
24228|code|MOV             R1, R4; offset|33-70
24230|code|LDR             R0, [R7,#8]; fd|184-104
24232|code|MOVS            R2, #1; whence|1-34
24234|code|BLX             lseek|251-247-248-238
24238|code|ADDS            R3, R0, #1|67-28
24240|code|BNE             loc_5E02|167-209
24242|code|MOV             R4, R0|4-70
24244|code|BLX             __errno_location|251-247-228-239
24248|code|LDR             R1, =(aNwipeRandomVer - 0x5EC0); "nwipe_random_verify"|85-73
24250|code|LDR             R2, =(aLseek_0 - 0x5EC2); "lseek"|86-74
24252|code|ADD             R1, PC; "nwipe_random_verify"|121-68
24254|code|ADD             R2, PC; "lseek"|122-68
24256|code|ADDS            R1, #0x28 ; '('|40-49
24258|code|LDR             R0, [R0]|0-104
24260|code|BL              sub_6A4C|0-240-194-253
24264|code|LDR             R1, =(aUnableToBumpTh_0 - 0x5ED4); "Unable to bump the '%s' file offset aft"...|83-73
24266|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24270|code|MOVS            R0, #5|5-32
24272|code|ADD             R1, PC; "Unable to bump the '%s' file offset aft"...|121-68
24274|code|BL              sub_66B0|0-240-237-251
24278|code|MOV             R0, R4|32-70
24280|code|ADD             SP, SP, #0x2C ; ','|11-176
24282|code|POP.W           {R4-R11,PC}|189-232-240-143
24286|code|LDR.W           R3, [R7,#0x220]|215-248-32-50
24290|code|MOVS            R0, #4|4-32
24292|code|STR             R2, [SP,#0x50+var_50]|0-146
24294|code|LDR             R1, [SP,#0x50+var_30]|8-153
24296|code|LDR             R2, [SP,#0x50+var_2C]|9-154
24298|code|LDR.W           R10, [SP,#0x50+var_48]|221-248-8-160
24302|code|BL              sub_66B0|0-240-223-251
24306|code|B               loc_5E60|181-231
24308|code|LDR.W           R11, [SP,#0x50+buf]|221-248-24-176
24312|code|MOV             R0, R11; ptr|88-70
24314|code|BLX             free|251-247-154-238
24318|code|LDR             R0, [SP,#0x50+dest]; ptr|5-152
24320|code|BLX             free|251-247-150-238
24324|code|MOVS            R0, #0|0-32
24326|code|ADD             SP, SP, #0x2C ; ','|11-176
24328|code|POP.W           {R4-R11,PC}|189-232-240-143
24332|code|BLX             __errno_location|251-247-184-239
24336|code|LDR             R1, =(aNwipeRandomVer - 0x5F18); "nwipe_random_verify"|66-73
24338|code|LDR             R2, =(aRead_0 - 0x5F1A); "read"|67-74
24340|code|ADD             R1, PC; "nwipe_random_verify"|121-68
24342|code|ADD             R2, PC; "read"|122-68
24344|code|ADDS            R1, #0x28 ; '('|40-49
24346|code|LDR             R0, [R0]|0-104
24348|code|BL              sub_6A4C|0-240-150-253
24352|code|LDR             R1, =(aUnableToReadFr - 0x5F2C); "Unable to read from '%s'."|64-73
24354|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24358|code|MOVS            R0, #5|5-32
24360|code|ADD             R1, PC; "Unable to read from '%s'."|121-68
24362|code|BL              sub_66B0|0-240-193-251
24366|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24370|code|ADD             SP, SP, #0x2C ; ','|11-176
24372|code|POP.W           {R4-R11,PC}|189-232-240-143
24376|code|BLX             __errno_location|251-247-162-239
24380|code|LDR             R1, =(aNwipeRandomVer - 0x5F44); "nwipe_random_verify"|58-73
24382|code|LDR             R2, =(aFdatasync_0 - 0x5F46); "fdatasync"|59-74
24384|code|ADD             R1, PC; "nwipe_random_verify"|121-68
24386|code|ADD             R2, PC; "fdatasync"|122-68
24388|code|ADDS            R1, #0x28 ; '('|40-49
24390|code|LDR             R0, [R0]|0-104
24392|code|BL              sub_6A4C|0-240-128-253
24396|code|LDR             R1, =(aBufferFlushFai - 0x5F58); "Buffer flush failure on '%s'."|56-73
24398|code|MOVS            R0, #4|4-32
24400|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24404|code|ADD             R1, PC; "Buffer flush failure on '%s'."|121-68
24406|code|BL              sub_66B0|0-240-171-251
24410|code|B               loc_5D98|29-231
24412|code|LDR             R1, =(aNwipeStaticVer - 0x5F66); "nwipe_static_verify: The pattern length"...|53-73
24414|code|MOVS            R0, #7|7-32
24416|code|MOV             R2, R6|50-70
24418|code|ADD             R1, PC; "nwipe_static_verify: The pattern length"...|121-68
24420|code|BL              sub_66B0|0-240-164-251
24424|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24428|code|B               loc_5F06|203-231
24430|code|LDR             R1, =(aNwipeStaticVer_0 - 0x5F7A); "nwipe_static_verify: lseek() returned a"...|50-73
24432|code|MOVS            R0, #7|7-32
24434|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24438|code|ADD             R1, PC; "nwipe_static_verify: lseek() returned a"...|121-68
24440|code|BL              sub_66B0|0-240-154-251
24444|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24448|code|B               loc_5F06|193-231
24450|code|BLX             __errno_location|251-247-126-239
24454|code|LDR             R1, =(aNwipeRandomVer - 0x5F8E); "nwipe_random_verify"|45-73
24456|code|LDR             R2, =(aMalloc_0 - 0x5F90); "malloc"|45-74
24458|code|ADD             R1, PC; "nwipe_random_verify"|121-68
24460|code|ADD             R2, PC; "malloc"|122-68
24462|code|ADDS            R1, #0x28 ; '('|40-49
24464|code|LDR             R0, [R0]|0-104
24466|code|BL              sub_6A4C|0-240-91-253
24470|code|LDR             R1, =(aUnableToAlloca_1 - 0x5F9E); "Unable to allocate memory for the input"...|43-73
24472|code|MOVS            R0, #6|6-32
24474|code|ADD             R1, PC; "Unable to allocate memory for the input"...|121-68
24476|code|BL              sub_66B0|0-240-136-251
24480|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24484|code|B               loc_5F06|175-231
24486|code|BLX             __errno_location|251-247-108-239
24490|code|LDR             R1, =(aNwipeRandomVer - 0x5FB2); "nwipe_random_verify"|39-73
24492|code|LDR             R2, =(aLseek_0 - 0x5FB4); "lseek"|39-74
24494|code|ADD             R1, PC; "nwipe_random_verify"|121-68
24496|code|ADD             R2, PC; "lseek"|122-68
24498|code|ADDS            R1, #0x28 ; '('|40-49
24500|code|LDR             R0, [R0]|0-104
24502|code|BL              sub_6A4C|0-240-73-253
24506|code|LDR             R1, =(aUnableToResetT - 0x5FC6); "Unable to reset the '%s' file offset."|37-73
24508|code|MOVS            R0, #6|6-32
24510|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24514|code|ADD             R1, PC; "Unable to reset the '%s' file offset."|121-68
24516|code|BL              sub_66B0|0-240-116-251
24520|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24524|code|B               loc_5F06|155-231
24526|code|BLX             __errno_location|251-247-88-239
24530|code|LDR             R1, =(aNwipeRandomVer - 0x5FDA); "nwipe_random_verify"|32-73
24532|code|LDR             R2, =(aMalloc_0 - 0x5FDC); "malloc"|32-74
24534|code|ADD             R1, PC; "nwipe_random_verify"|121-68
24536|code|ADD             R2, PC; "malloc"|122-68
24538|code|ADDS            R1, #0x28 ; '('|40-49
24540|code|LDR             R0, [R0]|0-104
24542|code|BL              sub_6A4C|0-240-53-253
24546|code|LDR             R1, =(aUnableToAlloca - 0x5FEA); "Unable to allocate memory for the patte"...|30-73
24548|code|MOVS            R0, #6|6-32
24550|code|ADD             R1, PC; "Unable to allocate memory for the patte"...|121-68
24552|code|BL              sub_66B0|0-240-98-251
24556|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24560|code|B               loc_5F06|137-231
24562|code|LDR             R1, =(aNwipeStaticVer_1 - 0x5FFA); "nwipe_static_verify: Null entropy point"...|27-73
24564|code|MOVS            R0, #7|7-32
24566|code|ADD             R1, PC; "nwipe_static_verify: Null entropy point"...|121-68
24568|code|BL              sub_66B0|0-240-90-251
24572|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
24576|code|B               loc_5F06|129-231
24578|data|ALIGN 4|0-191
24580|data|DCD aSTheSizeOfSIsN - 0x5DD8; "%s: The size of '%s' is not a multiple "...|240-68-0-0
24584|data|DCD aNwipeRandomVer - 0x5DDE; "nwipe_random_verify"|158-67-0-0
24588|data|DCD aPartialReadOnS - 0x5DE6; "Partial read on '%s', %i bytes short."|126-71-0-0
24592|data|DCD aNwipeRandomVer - 0x5EC0; "nwipe_random_verify"|188-66-0-0
24596|data|DCD aLseek_0 - 0x5EC2; "lseek"|138-44-0-0
24600|data|DCD aUnableToBumpTh_0 - 0x5ED4; "Unable to bump the '%s' file offset aft"...|132-68-0-0
24604|data|DCD aNwipeRandomVer - 0x5F18; "nwipe_random_verify"|100-66-0-0
24608|data|DCD aRead_0 - 0x5F1A; "read"|238-67-0-0
24612|data|DCD aUnableToReadFr - 0x5F2C; "Unable to read from '%s'."|228-67-0-0
24616|data|DCD aNwipeRandomVer - 0x5F44; "nwipe_random_verify"|56-66-0-0
24620|data|DCD aFdatasync_0 - 0x5F46; "fdatasync"|86-67-0-0
24624|data|DCD aBufferFlushFai - 0x5F58; "Buffer flush failure on '%s'."|80-67-0-0
24628|data|DCD aNwipeStaticVer - 0x5F66; "nwipe_static_verify: The pattern length"...|134-69-0-0
24632|data|DCD aNwipeStaticVer_0 - 0x5F7A; "nwipe_static_verify: lseek() returned a"...|170-69-0-0
24636|data|DCD aNwipeRandomVer - 0x5F8E; "nwipe_random_verify"|238-65-0-0
24640|data|DCD aMalloc_0 - 0x5F90; "malloc"|116-66-0-0
24644|data|DCD aUnableToAlloca_1 - 0x5F9E; "Unable to allocate memory for the input"...|110-66-0-0
24648|data|DCD aNwipeRandomVer - 0x5FB2; "nwipe_random_verify"|202-65-0-0
24652|data|DCD aLseek_0 - 0x5FB4; "lseek"|152-43-0-0
24656|data|DCD aUnableToResetT - 0x5FC6; "Unable to reset the '%s' file offset."|182-43-0-0
24660|data|DCD aNwipeRandomVer - 0x5FDA; "nwipe_random_verify"|162-65-0-0
24664|data|DCD aMalloc_0 - 0x5FDC; "malloc"|40-66-0-0
24668|data|DCD aUnableToAlloca - 0x5FEA; "Unable to allocate memory for the patte"...|82-66-0-0
24672|data|DCD aNwipeStaticVer_1 - 0x5FFA; "nwipe_static_verify: Null entropy point"...|198-68-0-0
24676|code|ADD.W           R3, R0, #0x228|0-245-10-115
24680|code|PUSH.W          {R4-R11,LR}|45-233-240-79
24684|code|SUB             SP, SP, #0x2C|139-176
24686|code|LDRD.W          R2, R3, [R3]|211-233-0-35
24690|code|MOV             R7, R0|7-70
24692|code|STR             R1, [SP,#0x50+var_3C]|5-145
24694|code|STRD.W          R2, R3, [SP,#0x50+var_48]|205-233-2-35
24698|code|CMP             R1, #0|0-41
24700|code|BEQ.W           loc_62E6|0-240-51-129
24704|code|LDR             R3, [SP,#0x50+var_3C]|5-155
24706|code|LDR.W           R8, [R3]|211-248-0-128
24710|code|CMP.W           R8, #0|184-241-0-15
24714|code|BLE.W           loc_6274|64-243-243-128
24718|code|LDR.W           R5, [R0,#0x260]|208-248-96-82
24722|code|ADD.W           R0, R5, R8,LSL#1; size|5-235-72-0
24726|code|BLX             malloc|251-247-124-238
24730|code|MOV             R11, R0|131-70
24732|code|CMP             R0, #0|0-40
24734|code|BEQ.W           loc_62C2|0-240-16-129
24738|code|ADD             R5, R8|69-68
24740|code|ADD             R5, R0|5-68
24742|code|CMP             R0, R5|168-66
24744|code|BCS             loc_60C0|10-210
24746|code|LDR             R3, [SP,#0x50+var_3C]|5-155
24748|code|MOV             R4, R0|4-70
24750|code|LDR             R6, [R3,#4]|94-104
24752|code|MOV             R0, R4; dest|32-70
24754|code|MOV             R1, R6; src|49-70
24756|code|ADD             R4, R8|68-68
24758|code|MOV             R2, R8; n|66-70
24760|code|BLX             memcpy|251-247-222-237
24764|code|CMP             R4, R5|172-66
24766|code|BCC             loc_60B0|247-211
24768|code|MOVS            R1, #0; offset|0-33
24770|code|LDR             R0, [R7,#8]; fd|184-104
24772|code|MOV             R2, R1; whence|10-70
24774|code|MOV             R9, R7|185-70
24776|code|BLX             lseek|251-247-232-237
24780|code|MOVS            R2, #0|0-34
24782|code|MOVS            R3, #0|0-35
24784|code|STRD.W          R2, R3, [R9,#0x2A8]!|233-233-170-35
24788|code|ASRS            R1, R0, #0x1F|193-23
24790|code|ADDS            R2, R1, #1|74-28
24792|code|IT EQ|8-191
24794|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
24798|code|BEQ.W           loc_629A|0-240-220-128
24802|code|ORRS.W          R3, R0, R1|80-234-1-3
24806|code|BNE.W           loc_6286|64-240-206-128
24810|code|LDRD.W          R2, R3, [SP,#0x50+var_48]|221-233-2-35
24814|code|ORRS            R3, R2|19-67
24816|code|BEQ             loc_61D6|113-208
24818|code|LDR             R2, =(aSTheSizeOfSIsN - 0x60FE); "%s: The size of '%s' is not a multiple "...|129-74
24820|code|MOV.W           R8, #0|79-240-0-8
24824|code|LDR             R3, =(aNwipeRandomVer - 0x6104); "nwipe_random_verify"|128-75
24826|code|ADD             R2, PC; "%s: The size of '%s' is not a multiple "...|122-68
24828|code|STR             R2, [SP,#0x50+var_30]|8-146
24830|code|LDR             R2, =(aPartialWriteOn - 0x610C); "Partial write on '%s', %i bytes short."|128-74
24832|code|ADD             R3, PC; "nwipe_random_verify"|123-68
24834|code|ADDS            R3, #0x3C ; '<'|60-51
24836|code|STR.W           R11, [SP,#0x50+var_38]|205-248-24-176
24840|code|ADD             R2, PC; "Partial write on '%s', %i bytes short."|122-68
24842|code|STR             R3, [SP,#0x50+var_2C]|9-147
24844|code|STR             R2, [SP,#0x50+var_34]|7-146
24846|code|B               loc_61A8|75-224
24848|code|LDR             R3, [SP,#0x50+var_38]|6-155
24850|code|MOV             R2, R10; n|82-70
24852|code|LDR             R0, [R7,#8]; fd|184-104
24854|code|MOV             R6, R7|62-70
24856|code|ADD.W           R1, R3, R8; buf|3-235-8-1
24860|code|BLX             write|251-247-224-238
24864|code|LDR             R1, [SP,#0x50+var_34]|7-153
24866|code|SUBS            R5, R0, #0|5-30
24868|code|MOV.W           R0, #4|79-240-4-0
24872|code|RSB.W           R4, R5, R10|197-235-10-4
24876|code|BLT             loc_61F8|100-219
24878|code|CMP             R5, R10|85-69
24880|code|MOV             R3, R4|35-70
24882|code|BEQ             loc_615A|18-208
24884|code|LDRD.W          R10, R11, [R6,#0x2B0]!|246-233-172-171
24888|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
24892|code|ADDS.W          R10, R10, R4|26-235-4-10
24896|code|ADC.W           R11, R11, R4,ASR#31|75-235-228-123
24900|code|STRD.W          R10, R11, [R6]|198-233-0-171
24904|code|BL              sub_66B0|0-240-178-250
24908|code|MOV             R1, R4; offset|33-70
24910|code|LDR             R0, [R7,#8]; fd|184-104
24912|code|MOVS            R2, #1; whence|1-34
24914|code|BLX             lseek|251-247-164-237
24918|code|ADDS            R3, R0, #1|67-28
24920|code|BEQ             loc_6224|100-208
24922|code|LDR             R3, [SP,#0x50+var_3C]|5-155
24924|code|MOV             R6, R7|62-70
24926|code|LDR.W           R0, [R7,#0x260]|215-248-96-2
24930|code|LDR             R1, [R3]|25-104
24932|code|ADD             R0, R8|64-68
24934|code|BL              sub_8154|1-240-245-255
24938|code|MOV             R2, R5|42-70
24940|code|ASRS            R3, R5, #0x1F|235-23
24942|code|LDRD.W          R4, R5, [SP,#0x50+var_48]|221-233-2-69
24946|code|LDRD.W          R10, R11, [R9]|217-233-0-171
24950|code|SUBS            R4, R4, R2|164-26
24952|code|SBC.W           R5, R5, R3|101-235-3-5
24956|code|STRD.W          R4, R5, [SP,#0x50+var_48]|205-233-2-69
24960|code|ADDS.W          R4, R2, R10|18-235-10-4
24964|code|ADC.W           R5, R3, R11|67-235-11-5
24968|code|MOV             R8, R1|136-70
24970|code|LDRD.W          R0, R1, [R6,#0x2E0]!|246-233-184-1
24974|code|STRD.W          R4, R5, [R9]|201-233-0-69
24978|code|ADDS            R2, R2, R0|18-24
24980|code|ADCS            R3, R1|75-65
24982|code|STRD.W          R2, R3, [R6]|198-233-0-35
24986|code|BLX             pthread_testcancel|251-247-28-239
24990|code|LDRD.W          R4, R5, [SP,#0x50+var_48]|221-233-2-69
24994|code|ORRS.W          R3, R4, R5|84-234-5-3
24998|code|BEQ             loc_61D2|20-208
25000|code|LDR.W           R2, [R7,#0x260]|215-248-96-34
25004|code|LDRD.W          R4, R5, [SP,#0x50+var_48]|221-233-2-69
25008|code|ASRS            R1, R2, #0x1F|209-23
25010|code|MOV             R10, R2|146-70
25012|code|CMP             R5, R1|141-66
25014|code|IT EQ|8-191
25016|code|CMPEQ           R4, R2|148-66
25018|code|BCS             loc_6110|169-210
25020|code|LDR.W           R3, [R7,#0x220]|215-248-32-50
25024|code|MOVS            R0, #4|4-32
25026|code|STR             R2, [SP,#0x50+var_50]|0-146
25028|code|LDR             R1, [SP,#0x50+var_30]|8-153
25030|code|LDR             R2, [SP,#0x50+var_2C]|9-154
25032|code|LDR.W           R10, [SP,#0x50+var_48]|221-248-8-160
25036|code|BL              sub_66B0|0-240-112-250
25040|code|B               loc_6110|158-231
25042|code|LDR.W           R11, [SP,#0x50+var_38]|221-248-24-176
25046|code|MOVS            R3, #1|1-35
25048|code|LDR             R0, [R7,#8]; fildes|184-104
25050|code|STRH.W          R3, [R7,#0x498]|167-248-152-52
25054|code|BLX             fdatasync|251-247-20-239
25058|code|MOVS            R3, #0|0-35
25060|code|STRH.W          R3, [R7,#0x498]|167-248-152-52
25064|code|CBNZ            R0, loc_6250|144-187
25066|code|MOV             R0, R11; ptr|88-70
25068|code|BLX             free|251-247-32-237
25072|code|MOVS            R0, #0|0-32
25074|code|ADD             SP, SP, #0x2C ; ','|11-176
25076|code|POP.W           {R4-R11,PC}|189-232-240-143
25080|code|BLX             __errno_location|251-247-66-238
25084|code|LDR             R1, =(aNwipeRandomVer - 0x6204); "nwipe_random_verify"|65-73
25086|code|LDR             R2, =(aWrite - 0x6206); "write"|66-74
25088|code|ADD             R1, PC; "nwipe_random_verify"|121-68
25090|code|ADD             R2, PC; "write"|122-68
25092|code|ADDS            R1, #0x3C ; '<'|60-49
25094|code|LDR             R0, [R0]|0-104
25096|code|BL              sub_6A4C|0-240-32-252
25100|code|LDR             R1, =(aUnableToWriteT - 0x6218); "Unable to write to '%s'."|63-73
25102|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
25106|code|MOVS            R0, #6|6-32
25108|code|ADD             R1, PC; "Unable to write to '%s'."|121-68
25110|code|BL              sub_66B0|0-240-75-250
25114|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
25118|code|ADD             SP, SP, #0x2C ; ','|11-176
25120|code|POP.W           {R4-R11,PC}|189-232-240-143
25124|code|MOV             R4, R0|4-70
25126|code|BLX             __errno_location|251-247-44-238
25130|code|LDR             R1, =(aNwipeRandomVer - 0x6232); "nwipe_random_verify"|57-73
25132|code|LDR             R2, =(aLseek_0 - 0x6234); "lseek"|57-74
25134|code|ADD             R1, PC; "nwipe_random_verify"|121-68
25136|code|ADD             R2, PC; "lseek"|122-68
25138|code|ADDS            R1, #0x3C ; '<'|60-49
25140|code|LDR             R0, [R0]|0-104
25142|code|BL              sub_6A4C|0-240-9-252
25146|code|LDR             R1, =(aUnableToBumpTh - 0x6246); "Unable to bump the '%s' file offset aft"...|55-73
25148|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
25152|code|MOVS            R0, #5|5-32
25154|code|ADD             R1, PC; "Unable to bump the '%s' file offset aft"...|121-68
25156|code|BL              sub_66B0|0-240-52-250
25160|code|MOV             R0, R4|32-70
25162|code|ADD             SP, SP, #0x2C ; ','|11-176
25164|code|POP.W           {R4-R11,PC}|189-232-240-143
25168|code|BLX             __errno_location|251-247-22-238
25172|code|LDR             R1, =(aNwipeRandomVer - 0x625C); "nwipe_random_verify"|49-73
25174|code|LDR             R2, =(aFdatasync_0 - 0x625E); "fdatasync"|50-74
25176|code|ADD             R1, PC; "nwipe_random_verify"|121-68
25178|code|ADD             R2, PC; "fdatasync"|122-68
25180|code|ADDS            R1, #0x3C ; '<'|60-49
25182|code|LDR             R0, [R0]|0-104
25184|code|BL              sub_6A4C|0-240-244-251
25188|code|LDR             R1, =(aBufferFlushFai - 0x6270); "Buffer flush failure on '%s'."|47-73
25190|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
25194|code|MOVS            R0, #4|4-32
25196|code|ADD             R1, PC; "Buffer flush failure on '%s'."|121-68
25198|code|BL              sub_66B0|0-240-31-250
25202|code|B               loc_61EA|186-231
25204|code|LDR             R1, =(aFunctionThePat - 0x627E); "__FUNCTION__: The pattern length member"...|44-73
25206|code|MOVS            R0, #7|7-32
25208|code|MOV             R2, R8|66-70
25210|code|ADD             R1, PC; "__FUNCTION__: The pattern length member"...|121-68
25212|code|BL              sub_66B0|0-240-24-250
25216|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
25220|code|B               loc_61F2|181-231
25222|code|LDR             R1, =(aFunctionLseekR - 0x6292); "__FUNCTION__: lseek() returned a bogus "...|41-73
25224|code|MOVS            R0, #7|7-32
25226|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
25230|code|ADD             R1, PC; "__FUNCTION__: lseek() returned a bogus "...|121-68
25232|code|BL              sub_66B0|0-240-14-250
25236|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
25240|code|B               loc_61F2|171-231
25242|code|BLX             __errno_location|251-247-242-237
25246|code|LDR             R1, =(aNwipeRandomVer - 0x62A6); "nwipe_random_verify"|36-73
25248|code|LDR             R2, =(aLseek_0 - 0x62A8); "lseek"|36-74
25250|code|ADD             R1, PC; "nwipe_random_verify"|121-68
25252|code|ADD             R2, PC; "lseek"|122-68
25254|code|ADDS            R1, #0x3C ; '<'|60-49
25256|code|LDR             R0, [R0]|0-104
25258|code|BL              sub_6A4C|0-240-207-251
25262|code|LDR             R1, =(aUnableToResetT - 0x62BA); "Unable to reset the '%s' file offset."|34-73
25264|code|MOVS            R0, #6|6-32
25266|code|LDR.W           R2, [R7,#0x220]|215-248-32-34
25270|code|ADD             R1, PC; "Unable to reset the '%s' file offset."|121-68
25272|code|BL              sub_66B0|0-240-250-249
25276|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
25280|code|B               loc_61F2|151-231
25282|code|BLX             __errno_location|251-247-222-237
25286|code|LDR             R1, =(aNwipeRandomVer - 0x62CE); "nwipe_random_verify"|29-73
25288|code|LDR             R2, =(aMalloc_0 - 0x62D0); "malloc"|29-74
25290|code|ADD             R1, PC; "nwipe_random_verify"|121-68
25292|code|ADD             R2, PC; "malloc"|122-68
25294|code|ADDS            R1, #0x3C ; '<'|60-49
25296|code|LDR             R0, [R0]|0-104
25298|code|BL              sub_6A4C|0-240-187-251
25302|code|LDR             R1, =(aUnableToAlloca - 0x62DE); "Unable to allocate memory for the patte"...|27-73
25304|code|MOVS            R0, #6|6-32
25306|code|ADD             R1, PC; "Unable to allocate memory for the patte"...|121-68
25308|code|BL              sub_66B0|0-240-232-249
25312|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
25316|code|B               loc_61F2|133-231
25318|code|LDR             R1, =(aFunctionNullPa - 0x62EE); "__FUNCTION__: Null pattern pointer."|24-73
25320|code|MOVS            R0, #7|7-32
25322|code|ADD             R1, PC; "__FUNCTION__: Null pattern pointer."|121-68
25324|code|BL              sub_66B0|0-240-224-249
25328|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
25332|code|B               loc_61F2|125-231
25334|data|ALIGN 4|0-191
25336|data|DCD aSTheSizeOfSIsN - 0x60FE; "%s: The size of '%s' is not a multiple "...|202-65-0-0
25340|data|DCD aNwipeRandomVer - 0x6104; "nwipe_random_verify"|120-64-0-0
25344|data|DCD aPartialWriteOn - 0x610C; "Partial write on '%s', %i bytes short."|80-67-0-0
25348|data|DCD aNwipeRandomVer - 0x6204; "nwipe_random_verify"|120-63-0-0
25352|data|DCD aWrite - 0x6206; "write"|78-66-0-0
25356|data|DCD aUnableToWriteT - 0x6218; "Unable to write to '%s'."|200-67-0-0
25360|data|DCD aNwipeRandomVer - 0x6232; "nwipe_random_verify"|74-63-0-0
25364|data|DCD aLseek_0 - 0x6234; "lseek"|24-41-0-0
25368|data|DCD aUnableToBumpTh - 0x6246; "Unable to bump the '%s' file offset aft"...|62-66-0-0
25372|data|DCD aNwipeRandomVer - 0x625C; "nwipe_random_verify"|32-63-0-0
25376|data|DCD aFdatasync_0 - 0x625E; "fdatasync"|62-64-0-0
25380|data|DCD aBufferFlushFai - 0x6270; "Buffer flush failure on '%s'."|56-64-0-0
25384|data|DCD aFunctionThePat - 0x627E; "__FUNCTION__: The pattern length member"...|50-67-0-0
25388|data|DCD aFunctionLseekR - 0x6292; "__FUNCTION__: lseek() returned a bogus "...|138-65-0-0
25392|data|DCD aNwipeRandomVer - 0x62A6; "nwipe_random_verify"|214-62-0-0
25396|data|DCD aLseek_0 - 0x62A8; "lseek"|164-40-0-0
25400|data|DCD aUnableToResetT - 0x62BA; "Unable to reset the '%s' file offset."|194-40-0-0
25404|data|DCD aNwipeRandomVer - 0x62CE; "nwipe_random_verify"|174-62-0-0
25408|data|DCD aMalloc_0 - 0x62D0; "malloc"|52-63-0-0
25412|data|DCD aUnableToAlloca - 0x62DE; "Unable to allocate memory for the patte"...|94-63-0-0
25416|data|DCD aFunctionNullPa - 0x62EE; "__FUNCTION__: Null pattern pointer."|158-66-0-0
25420|code|PUSH.W          {R3-R9,LR}|45-233-248-67
25424|code|MOV             R8, R0|128-70
25426|code|MOV             R0, R1|8-70
25428|code|MOV             R4, R1|12-70
25430|code|MOV             R5, R2|21-70
25432|code|BLX             ped_device_open|251-247-74-237
25436|code|CBNZ            R0, loc_6362|8-185
25438|code|POP.W           {R3-R9,PC}|189-232-248-131
25442|code|ADDS            R5, #1|1-53
25444|code|MOV             R0, R4|32-70
25446|code|BLX             ped_device_close|251-247-170-237
25450|code|LDR.W           R0, [R8]; ptr|216-248-0-0
25454|code|LSLS            R5, R5, #2|173-0
25456|code|MOV             R1, R5; size|41-70
25458|code|BLX             realloc|251-247-216-236
25462|code|STR.W           R0, [R8]|200-248-0-0
25466|code|MOV.W           R0, #0x6B0; size|79-244-214-96
25470|code|BLX             malloc|251-247-8-237
25474|code|MOV             R9, R0|129-70
25476|code|CBZ             R0, loc_63DA|72-179
25478|code|MOVS            R1, #0; c|0-33
25480|code|MOV.W           R2, #0x6B0; n|79-244-214-98
25484|code|BLX             memset|251-247-132-237
25488|code|LDR             R3, [R4,#0x14]|99-105
25490|code|LDR             R7, [R4,#0x20]|39-106
25492|code|ADD.W           LR, R9, #0x228|9-245-10-126
25496|code|LDR             R6, [R4,#0x10]|38-105
25498|code|MOVW            R1, #0x30D; request|64-242-13-49
25502|code|LDR             R0, [R4,#0x24]|96-106
25504|code|ADD.W           R2, R9, #0x4B0|9-245-150-98
25508|code|MUL.W           R12, R7, R3|7-251-3-252
25512|code|LDR             R3, [R4,#4]|99-104
25514|code|MLA.W           R0, R6, R0, R12|6-251-0-192
25518|code|LDR             R4, [R4,#8]|164-104
25520|code|UMULL.W         R6, R7, R7, R6|167-251-6-103
25524|code|STR.W           R3, [R9,#0x29C]|201-248-156-50
25528|code|STR.W           R4, [R9,#0x220]|201-248-32-66
25532|code|ADD             R7, R0|7-68
25534|code|LDR.W           R0, [R9,#8]; fd|217-248-8-0
25538|code|STRD.W          R6, R7, [LR]|206-233-0-103
25542|code|BLX             ioctl|251-247-204-236
25546|code|LDR.W           R3, [R8]|216-248-0-48
25550|code|MOVS            R0, #1|1-32
25552|code|ADD             R5, R3|29-68
25554|code|STR.W           R9, [R5,#-4]|69-248-4-156
25558|code|POP.W           {R3-R9,PC}|189-232-248-131
25562|code|BLX             __errno_location|251-247-82-237
25566|code|LDR             R1, =(aCheckDevice - 0x63E6); "check_device"|7-73
25568|code|LDR             R2, =(aMalloc_0 - 0x63E8); "malloc"|7-74
25570|code|ADD             R1, PC; "check_device"|121-68
25572|code|ADD             R2, PC; "malloc"|122-68
25574|code|LDR             R0, [R0]|0-104
25576|code|BL              sub_6A4C|0-240-48-251
25580|code|LDR             R1, =(aUnableToCreate - 0x63F4); "Unable to create the array of enumerati"...|5-73
25582|code|MOVS            R0, #6|6-32
25584|code|ADD             R1, PC; "Unable to create the array of enumerati"...|121-68
25586|code|BL              sub_66B0|0-240-93-249
25590|code|MOV             R0, R9|72-70
25592|code|POP.W           {R3-R9,PC}|189-232-248-131
25596|data|DCD aCheckDevice - 0x63E6; "check_device"|22-66-0-0
25600|data|DCD aMalloc_0 - 0x63E8; "malloc"|28-62-0-0
25604|data|DCD aUnableToCreate - 0x63F4; "Unable to create the array of enumerati"...|24-66-0-0
25608|code|PUSH            {R4-R6,LR}|112-181
25610|code|MOVS            R5, #0|0-37
25612|code|MOV             R6, R0|6-70
25614|code|MOV             R4, R5|44-70
25616|code|BLX             ped_device_probe_all|251-247-212-237
25620|code|MOV             R0, R4|32-70
25622|code|BLX             ped_device_get_next|251-247-36-236
25626|code|MOV             R2, R5|42-70
25628|code|MOV             R4, R0|4-70
25630|code|MOV             R1, R0|1-70
25632|code|CBZ             R0, loc_643E|104-177
25634|code|MOV             R0, R6|48-70
25636|code|BL              sub_634C|255-247-146-255
25640|code|CMP             R0, #0|0-40
25642|code|BEQ             loc_6414|243-208
25644|code|MOV             R0, R4|32-70
25646|code|ADDS            R5, #1|1-53
25648|code|BLX             ped_device_get_next|251-247-22-236
25652|code|MOV             R2, R5|42-70
25654|code|MOV             R4, R0|4-70
25656|code|MOV             R1, R0|1-70
25658|code|CMP             R0, #0|0-40
25660|code|BNE             loc_6422|241-209
25662|code|MOV             R0, R5|40-70
25664|code|POP             {R4-R6,PC}|112-189
25666|data|ALIGN 4|0-191
25668|code|CMP             R2, #0|0-42
25670|code|PUSH.W          {R4-R8,LR}|45-233-240-65
25674|code|BLE             loc_647E|24-221
25676|code|MOVS            R6, #0|0-38
25678|code|MOV             R8, R2|144-70
25680|code|MOV             R7, R0|7-70
25682|code|SUBS            R5, R1, #4|13-31
25684|code|MOV             R4, R6|52-70
25686|code|B               loc_6466|6-224
25688|code|MOV             R0, R7|56-70
25690|code|BL              sub_634C|255-247-119-255
25694|code|CBZ             R0, loc_6462|0-177
25696|code|ADDS            R6, #1|1-54
25698|code|CMP             R4, R8|68-69
25700|code|BEQ             loc_6478|8-208
25702|code|LDR.W           R0, [R5,#4]!|85-248-4-15
25706|code|ADDS            R4, #1|1-52
25708|code|BLX             ped_device_get|251-247-136-237
25712|code|MOV             R2, R6|50-70
25714|code|MOV             R1, R0|1-70
25716|code|CMP             R0, #0|0-40
25718|code|BNE             loc_6458|239-209
25720|code|MOV             R0, R6|48-70
25722|code|POP.W           {R4-R8,PC}|189-232-240-129
25726|code|MOVS            R6, #0|0-38
25728|code|B               loc_6478|250-231
25730|data|ALIGN 4|0-191
25732|code|PUSH            {R4,R5}|48-180
25734|code|MOVW            R5, #0x8965|72-246-101-21
25738|code|MOV             R4, R0|4-70
25740|code|MOV             R3, R1|11-70
25742|code|MOVT.W          R5, #0x6C07|198-246-7-69
25746|code|MOVS            R2, #1|1-34
25748|code|STR.W           R1, [R4],#4|68-248-4-27
25752|code|EOR.W           R3, R3, R3,LSR#30|131-234-147-115
25756|code|ADDS            R4, #4|4-52
25758|code|MLA.W           R3, R5, R3, R2|5-251-3-35
25762|code|ADDS            R2, #1|1-50
25764|code|CMP.W           R2, #0x270|178-245-28-127
25768|code|STR.W           R3, [R4,#-4]|68-248-4-60
25772|code|BNE             loc_6498|244-209
25774|code|MOVS            R3, #1|1-35
25776|code|STR.W           R3, [R0,#0x9C0]|192-248-192-57
25780|code|STR.W           R3, [R0,#0x9C4]|192-248-196-57
25784|code|POP             {R4,R5}|48-188
25786|code|BX              LR|112-71
25788|code|PUSH            {R4-R7,LR}|240-181
25790|code|CMP.W           R2, #0x270|178-245-28-127
25794|code|MOVW            LR, #0xD6AA|77-242-170-110
25798|code|MOVW            R6, #0x8965|72-246-101-22
25802|code|MOVT.W          LR, #0x12B|192-242-43-30
25806|code|MOV             R7, R2|23-70
25808|code|MOV             R5, R0|5-70
25810|code|IT CC|56-191
25812|code|MOVCC.W         R7, #0x270|79-244-28-119
25816|code|MOV             R3, LR|115-70
25818|code|MOVT.W          R6, #0x6C07|198-246-7-70
25822|code|MOVS            R4, #1|1-36
25824|code|STR.W           LR, [R5],#4|69-248-4-235
25828|code|EOR.W           R3, R3, R3,LSR#30|131-234-147-115
25832|code|ADDS            R5, #4|4-53
25834|code|MLA.W           R3, R6, R3, R4|6-251-3-67
25838|code|ADDS            R4, #1|1-52
25840|code|CMP.W           R4, #0x270|180-245-28-127
25844|code|STR.W           R3, [R5,#-4]|69-248-4-60
25848|code|BNE             loc_64E4|244-209
25850|code|LDR             R4, [R0]|4-104
25852|code|MOVS            R5, #1|1-37
25854|code|MOVW            R12, #0x660D|70-242-13-108
25858|code|MOV             R3, R5|43-70
25860|code|MOVT.W          R12, #0x19|192-242-25-12
25864|code|MOV.W           LR, #0|79-240-0-14
25868|code|STR.W           R5, [R0,#0x9C0]|192-248-192-89
25872|code|STR.W           R5, [R0,#0x9C4]|192-248-196-89
25876|code|EOR.W           R4, R4, R4,LSR#30|132-234-148-116
25880|code|LDR.W           R6, [R0,R3,LSL#2]|80-248-35-96
25884|code|LDR.W           R5, [R1,LR,LSL#2]|81-248-46-80
25888|code|MUL.W           R4, R12, R4|12-251-4-244
25892|code|EORS            R4, R6|116-64
25894|code|ADD             R4, R5|44-68
25896|code|ADD             R4, LR|116-68
25898|code|STR.W           R4, [R0,R3,LSL#2]|64-248-35-64
25902|code|ADDS            R3, #1|1-51
25904|code|ADD.W           LR, LR, #1|14-241-1-14
25908|code|CMP.W           R3, #0x270|179-245-28-127
25912|code|ITTT GE|162-191
25914|code|LDRGE.W         R4, [R0,#0x9BC]|208-248-188-73
25918|code|MOVGE           R3, #1|1-35
25920|code|STRGE           R4, [R0]|4-96
25922|code|CMP             R2, LR|114-69
25924|code|IT LS|152-191
25926|code|MOVLS.W         LR, #0|79-240-0-14
25930|code|SUBS            R7, #1|1-63
25932|code|BNE             loc_6514|226-209
25934|code|MOVW            R5, #0x8B65|72-246-101-53
25938|code|MOVW            R1, #0x26F|64-242-111-33
25942|code|MOVT.W          R5, #0x5D58|197-246-88-85
25946|code|B               loc_6560|1-224
25948|code|LDR.W           R4, [R0,R2,LSL#2]|80-248-34-64
25952|code|EOR.W           R4, R4, R4,LSR#30|132-234-148-116
25956|code|LDR.W           R2, [R0,R3,LSL#2]|80-248-35-32
25960|code|MUL.W           R4, R5, R4|5-251-4-244
25964|code|EORS            R4, R2|84-64
25966|code|SUBS            R4, R4, R3|228-26
25968|code|STR.W           R4, [R0,R3,LSL#2]|64-248-35-64
25972|code|ADDS            R3, #1|1-51
25974|code|CMP.W           R3, #0x270|179-245-28-127
25978|code|ITTT GE|162-191
25980|code|LDRGE.W         R2, [R0,#0x9BC]|208-248-188-41
25984|code|MOVGE           R3, #1|1-35
25986|code|STRGE           R2, [R0]|2-96
25988|code|SUBS            R1, #1|1-57
25990|code|ADD.W           R2, R3, #0xFFFFFFFF|3-241-255-50
25994|code|BNE             loc_655C|231-209
25996|code|MOV.W           R3, #0x80000000|79-240-0-67
26000|code|STR             R3, [R0]|3-96
26002|code|POP             {R4-R7,PC}|240-189
26004|code|LDR.W           R3, [R0,#0x9C0]|208-248-192-57
26008|code|PUSH            {R4-R7,LR}|240-181
26010|code|SUBS            R3, #1|1-59
26012|code|STR.W           R3, [R0,#0x9C0]|192-248-192-57
26016|code|CBZ             R3, loc_65D4|195-177
26018|code|LDR.W           R4, [R0,#0x9C8]|208-248-200-73
26022|code|LDR             R3, [R4]|35-104
26024|code|MOV.W           R1, #0x5680|79-244-173-65
26028|code|ADDS            R4, #4|4-52
26030|code|STR.W           R4, [R0,#0x9C8]|192-248-200-73
26034|code|MOVT.W          R1, #0x9D2C|201-246-44-81
26038|code|MOVS            R2, #0|0-34
26040|code|EOR.W           R3, R3, R3,LSR#11|131-234-211-35
26044|code|MOVT.W          R2, #0xEFC6|206-246-198-114
26048|code|LSLS            R0, R3, #7|216-1
26050|code|ANDS            R1, R0|1-64
26052|code|EORS            R3, R1|75-64
26054|code|LSLS            R1, R3, #0xF|217-3
26056|code|ANDS            R2, R1|10-64
26058|code|EOR.W           R0, R2, R3|130-234-3-0
26062|code|EOR.W           R0, R0, R0,LSR#18|128-234-144-64
26066|code|POP             {R4-R7,PC}|240-189
26068|code|LDR.W           R3, [R0,#0x9C4]|208-248-196-57
26072|code|CBNZ            R3, loc_660C|195-185
26074|code|MOVW            R5, #0x1571|65-242-113-85
26078|code|MOVW            R4, #0x8965|72-246-101-20
26082|code|MOV             R1, R0|1-70
26084|code|MOV             R3, R5|43-70
26086|code|MOVT.W          R4, #0x6C07|198-246-7-68
26090|code|MOVS            R2, #1|1-34
26092|code|STR.W           R5, [R1],#4|65-248-4-91
26096|code|EOR.W           R3, R3, R3,LSR#30|131-234-147-115
26100|code|ADDS            R1, #4|4-49
26102|code|MLA.W           R3, R4, R3, R2|4-251-3-35
26106|code|ADDS            R2, #1|1-50
26108|code|CMP.W           R2, #0x270|178-245-28-127
26112|code|STR.W           R3, [R1,#-4]|65-248-4-60
26116|code|BNE             loc_65F0|244-209
26118|code|MOVS            R3, #1|1-35
26120|code|STR.W           R3, [R0,#0x9C4]|192-248-196-57
26124|code|LDR             R3, [R0]|3-104
26126|code|ADD.W           LR, R0, #0x630|0-245-198-110
26130|code|ADD.W           R1, R0, #0x38C|0-245-99-113
26134|code|MOV             R4, R0|4-70
26136|code|MOV.W           R2, #0x270|79-244-28-114
26140|code|STR.W           R2, [R0,#0x9C0]|192-248-192-41
26144|code|AND.W           R5, R3, #0x80000000|3-240-0-69
26148|code|LDR             R3, [R4,#4]|99-104
26150|code|LDR.W           R6, [LR,#4]!|94-248-4-111
26154|code|MOVW            R7, #0xB0DF|75-242-223-7
26158|code|BIC.W           R12, R3, #0x80000000|35-240-0-76
26162|code|ANDS.W          R2, R3, #1|19-240-1-2
26166|code|ORR.W           R5, R12, R5|76-234-5-5
26170|code|MOVT.W          R7, #0x9908|201-246-8-23
26174|code|IT NE|24-191
26176|code|MOVNE           R2, R7|58-70
26178|code|EOR.W           R5, R6, R5,LSR#1|134-234-85-5
26182|code|EORS            R2, R5|106-64
26184|code|STR.W           R2, [R4],#4|68-248-4-43
26188|code|CMP             R4, R1|140-66
26190|code|BNE             loc_6620|231-209
26192|code|SUBS            R7, R0, #4|7-31
26194|code|ADDW            R12, R0, #0x9BC|0-246-188-28
26198|code|AND.W           R4, R3, #0x80000000|3-240-0-68
26202|code|LDR             R3, [R1,#4]|75-104
26204|code|LDR.W           R5, [R7,#4]!|87-248-4-95
26208|code|MOVW            R6, #0xB0DF|75-242-223-6
26212|code|BIC.W           LR, R3, #0x80000000|35-240-0-78
26216|code|ANDS.W          R2, R3, #1|19-240-1-2
26220|code|ORR.W           R4, LR, R4|78-234-4-4
26224|code|MOVT.W          R6, #0x9908|201-246-8-22
26228|code|IT NE|24-191
26230|code|MOVNE           R2, R6|50-70
26232|code|EOR.W           R4, R5, R4,LSR#1|133-234-84-4
26236|code|EORS            R2, R4|98-64
26238|code|STR.W           R2, [R1],#4|65-248-4-43
26242|code|CMP             R1, R12|97-69
26244|code|BNE             loc_6656|231-209
26246|code|LDR             R2, [R0]|2-104
26248|code|AND.W           R3, R3, #0x80000000|3-240-0-67
26252|code|LDR.W           R1, [R0,#0x630]|208-248-48-22
26256|code|MOV             R4, R0|4-70
26258|code|BIC.W           R5, R2, #0x80000000|34-240-0-69
26262|code|ANDS.W          R2, R2, #1|18-240-1-2
26266|code|ORR.W           R3, R3, R5|67-234-5-3
26270|code|IT NE|24-191
26272|code|MOVNE           R2, R6|50-70
26274|code|EOR.W           R1, R1, R3,LSR#1|129-234-83-1
26278|code|EORS            R2, R1|74-64
26280|code|STR.W           R2, [R0,#0x9BC]|192-248-188-41
26284|code|B               loc_65A6|123-231
26286|data|ALIGN 0x10|0-191
26288|code|PUSH            {R1-R3}|14-180
26290|code|PUSH.W          {R4-R11,LR}|45-233-240-79
26294|code|SUB             SP, SP, #0x38|142-176
26296|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x66C6)|194-76
26298|code|MOV             R9, R0|129-70
26300|code|LDR             R2, [SP,#0x68+varg_r1]|23-154
26302|code|MOVS            R0, #0; timer|0-32
26304|code|LDR             R3, =(__stack_chk_guard_ptr - 0x1BDC4)|193-75
26306|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
26308|code|LDR.W           R11, =(mutex1 - 0x66D0)|223-248-4-179
26312|code|STR             R2, [SP,#0x68+var_48]|8-146
26314|code|LDR             R6, [R4,R3]; __stack_chk_guard|230-88
26316|code|ADD             R11, PC; mutex1|251-68
26318|code|LDR             R3, [R6]|51-104
26320|code|STR             R3, [SP,#0x68+var_34]|13-147
26322|code|BLX             time|251-247-222-234
26326|code|ADD             R3, SP, #0x68+var_30|14-171
26328|code|STR.W           R0, [R3,#-0xC]!|67-248-12-13
26332|code|MOV             R0, R3; timer|24-70
26334|code|BLX             gmtime|251-247-244-235
26338|code|MOV             R10, R0|130-70
26340|code|MOV             R0, R11; mutex|88-70
26342|code|BLX             pthread_mutex_lock|251-247-176-234
26346|code|LDR.W           R3, [R11,#(dword_1C29C - 0x1C280)]|219-248-28-48
26350|code|LDR.W           R5, [R11,#(log_current_element - 0x1C280)]|219-248-24-80
26354|code|CMP             R5, R3|157-66
26356|code|LDR             R3, =(log_lines_ptr - 0x1BDC4)|182-75
26358|code|BEQ.W           loc_692A|0-240-24-129
26362|code|LDR.W           R8, [R4,R3]; log_lines|84-248-3-128
26366|code|LSLS            R5, R5, #2|173-0
26368|code|LDR.W           R0, [R8]|216-248-0-0
26372|code|MOVS            R2, #1|1-34
26374|code|LDR.W           LR, =(aI02i02i02i02i0 - 0x6718); "[%i/%02i/%02i %02i:%02i:%02i] nwipe: "|223-248-204-226
26378|code|MOV.W           R1, #0x200|79-244-0-113
26382|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
26386|code|LDR             R0, [R0,R5]|64-89
26388|code|ADD             LR, PC; "[%i/%02i/%02i %02i:%02i:%02i] nwipe: "|254-68
26390|code|STR.W           LR, [SP,#0x68+var_68]|205-248-0-224
26394|code|LDR.W           R5, [R10,#0x14]|218-248-20-80
26398|code|ADDW            R5, R5, #0x76C|5-242-108-117
26402|code|STR             R5, [SP,#0x68+var_64]|1-149
26404|code|LDR.W           R5, [R10,#0x10]|218-248-16-80
26408|code|ADD             R5, R2|21-68
26410|code|STR             R5, [SP,#0x68+var_60]|2-149
26412|code|LDR.W           R5, [R10,#0xC]|218-248-12-80
26416|code|STR             R5, [SP,#0x68+var_5C]|3-149
26418|code|LDR.W           R5, [R10,#8]|218-248-8-80
26422|code|STR             R5, [SP,#0x68+var_58]|4-149
26424|code|LDR.W           R5, [R10,#4]|218-248-4-80
26428|code|STR             R5, [SP,#0x68+var_54]|5-149
26430|code|LDR.W           R5, [R10]|218-248-0-80
26434|code|STR             R5, [SP,#0x68+var_50]|6-149
26436|code|BLX             __snprintf_chk|251-247-120-236
26440|code|MOV             R10, R0|130-70
26442|code|CMP.W           R9, #7; switch 8 cases|185-241-7-15
26446|code|BHI.W           def_6752; jumptable 00006752 default case|0-242-6-129
26450|code|TBH.W           [PC,R9,LSL#1]; switch jump|223-232-25-240
26454|data|DCW 0x19; jump table for switch statement|25-0
26456|data|DCW 8|8-0
26458|data|DCW 0xA0|160-0
26460|data|DCW 0xB5|181-0
26462|data|DCW 0xBA|186-0
26464|data|DCW 0xCE|206-0
26466|data|DCW 0xD5|213-0
26468|data|DCW 0x8C|140-0
26470|code|LDR             R1, =(mutex1 - 0x6772); jumptable 00006752 case 1|156-73
26472|code|LDR             R3, =(aDebug - 0x6774); "debug: "|156-75
26474|code|LDR.W           R2, [R8]|216-248-0-32
26478|code|ADD             R1, PC; mutex1|121-68
26480|code|ADD             R3, PC; "debug: "|123-68
26482|code|LDR             R5, [R1,#(log_current_element - 0x1C280)]|141-105
26484|code|LDM             R3!, {R0,R1}; "fatal: "|3-203
26486|code|LDR.W           R3, [R2,R5,LSL#2]|82-248-37-48
26490|code|ADD.W           R2, R3, R10|3-235-10-2
26494|code|STR.W           R0, [R3,R10]|67-248-10-0
26498|code|ADD.W           R10, R10, #7|10-241-7-10
26502|code|STR             R1, [R2,#4]|81-96
26504|code|LDR.W           R9, =(mutex1 - 0x679A); jumptable 00006752 case 0|223-248-84-146
26508|code|ADD             R5, SP, #0x68+varg_r2|24-173
26510|code|LDR.W           R7, [R8]|216-248-0-112
26514|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
26518|code|ADD             R9, PC; mutex1|249-68
26520|code|MOV.W           R1, #0x200|79-244-0-113
26524|code|MOVS            R2, #1|1-34
26526|code|STR             R5, [SP,#0x68+var_38]|12-149
26528|code|LDR.W           R0, [R9,#(log_current_element - 0x1C280)]|217-248-24-0
26532|code|LDR.W           R0, [R7,R0,LSL#2]|87-248-32-0
26536|code|LDR             R7, [SP,#0x68+var_48]|8-159
26538|code|STR             R5, [SP,#0x68+var_64]|1-149
26540|code|ADD             R0, R10|80-68
26542|code|STR             R7, [SP,#0x68+var_68]|0-151
26544|code|BLX             __vsnprintf_chk|251-247-92-234
26548|code|LDR             R3, =(nwipe_options_ptr - 0x1BDC4)|139-75
26550|code|LDR             R5, [R4,R3]; nwipe_options|229-88
26552|code|LDRB            R3, [R5,#(byte_1C2E4 - 0x1C2CC)]|43-126
26554|code|CBNZ            R3, loc_67E8|171-185
26556|code|LDR             R3, [R5,#(dword_1C2D8 - 0x1C2CC)]|235-104
26558|code|CMP             R3, #0|0-43
26560|code|BNE             loc_685C|76-209
26562|code|LDR.W           R3, [R9,#(log_current_element - 0x1C280)]|217-248-24-48
26566|code|ADDS            R3, #1|1-51
26568|code|STR.W           R3, [R9,#(log_current_element - 0x1C280)]|201-248-24-48
26572|code|LDR             R0, =(mutex1 - 0x67D2)|134-72
26574|code|ADD             R0, PC; mutex1 ; mutex|120-68
26576|code|BLX             pthread_mutex_unlock|251-247-230-233
26580|code|LDR             R2, [SP,#0x68+var_34]|13-154
26582|code|LDR             R3, [R6]|51-104
26584|code|CMP             R2, R3|154-66
26586|code|BNE.W           loc_69BE|64-240-240-128
26590|code|ADD             SP, SP, #0x38 ; '8'|14-176
26592|code|POP.W           {R4-R11,LR}|189-232-240-79
26596|code|ADD             SP, SP, #0xC|3-176
26598|code|BX              LR|112-71
26600|code|ADD.W           R7, R5, #0x18|5-241-24-7
26604|code|LDR             R1, =(aA - 0x67F4); "a"|127-73
26606|code|MOV             R0, R7|56-70
26608|code|ADD             R1, PC; "a"|121-68
26610|code|BLX             fopen64|251-247-222-235
26614|code|MOV             R10, R0|130-70
26616|code|CMP             R0, #0|0-40
26618|code|BEQ.W           loc_698E|0-240-200-128
26622|code|BLX             fileno|251-247-118-235
26626|code|MOVS            R1, #2; operation|2-33
26628|code|MOV             R11, R0|131-70
26630|code|BLX             flock|251-247-18-235
26634|code|CMP             R0, #0|0-40
26636|code|BNE             loc_690E|127-209
26638|code|LDR.W           LR, [R9,#(log_current_element - 0x1C280)]|217-248-24-224
26642|code|MOVS            R1, #1|1-33
26644|code|LDR.W           R3, [R8]|216-248-0-48
26648|code|MOV             R0, R10|80-70
26650|code|LDR             R2, =(aS_1 - 0x6824); "%s\n"|117-74
26652|code|LDR.W           R3, [R3,LR,LSL#2]|83-248-46-48
26656|code|ADD             R2, PC; "%s\n"|122-68
26658|code|BLX             __fprintf_chk|251-247-124-235
26662|code|MOV             R0, R11; fd|88-70
26664|code|MOVS            R1, #8; operation|8-33
26666|code|BLX             flock|251-247-0-235
26670|code|CMP             R0, #0|0-40
26672|code|BNE.W           loc_69A2|64-240-183-128
26676|code|MOV             R0, R10; stream|80-70
26678|code|BLX             fclose|251-247-120-235
26682|code|CMP             R0, #0|0-40
26684|code|BEQ             loc_67CC|198-208
26686|code|LDR             R0, =(aNwipeLogFclose - 0x6844); "nwipe_log: fclose:"|109-72
26688|code|ADD             R0, PC; "nwipe_log: fclose:"|120-68
26690|code|BLX             perror|251-247-124-234
26694|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|108-72
26696|code|LDR             R2, =(aErrorUnableToC - 0x6856); "Error: Unable to close '%s' after loggi"...|108-74
26698|code|ADD.W           R3, R5, #0x18|5-241-24-3
26702|code|MOVS            R1, #1|1-33
26704|code|LDR             R0, [R4,R0]; stderr|32-88
26706|code|ADD             R2, PC; "Error: Unable to close '%s' after loggi"...|122-68
26708|code|LDR             R0, [R0]|0-104
26710|code|BLX             __fprintf_chk|251-247-98-235
26714|code|B               loc_67CC|183-231
26716|code|LDR.W           R2, [R9,#(log_current_element - 0x1C280)]|217-248-24-32
26720|code|LDR.W           R3, [R8]|216-248-0-48
26724|code|LDR.W           R0, [R3,R2,LSL#2]; s|83-248-34-0
26728|code|BLX             puts|251-247-140-234
26732|code|B               loc_67CC|174-231
26734|code|LDR             R1, =(mutex1 - 0x6876); jumptable 00006752 case 7|100-73
26736|code|LDR             R3, =(aSanity - 0x6878); "sanity: "|100-75
26738|code|ADD             R1, PC; mutex1|121-68
26740|code|ADD             R3, PC; "sanity: "|123-68
26742|code|LDR             R5, [R1,#(log_current_element - 0x1C280)]|141-105
26744|code|LDR.W           R2, [R8]|216-248-0-32
26748|code|LDM             R3!, {R0,R1}; "sanity: "|3-203
26750|code|LDR.W           R2, [R2,R5,LSL#2]|82-248-37-32
26754|code|LDRB            R5, [R3]; "" ...|29-120
26756|code|ADD.W           R3, R2, R10|2-235-10-3
26760|code|STR.W           R0, [R2,R10]|66-248-10-0
26764|code|ADD.W           R10, R10, #8|10-241-8-10
26768|code|STR             R1, [R3,#4]|89-96
26770|code|STRB            R5, [R3,#8]|29-114
26772|code|B               loc_6788; jumptable 00006752 case 0|120-231
26774|code|LDR             R1, =(mutex1 - 0x68A0); jumptable 00006752 case 2|92-73
26776|code|LDR.W           R2, [R8]|216-248-0-32
26780|code|ADD             R1, PC; mutex1|121-68
26782|code|LDR             R3, =(aInfo - 0x68A6); "info: "|91-75
26784|code|LDR             R1, [R1,#(log_current_element - 0x1C280)]|137-105
26786|code|ADD             R3, PC; "info: "|123-68
26788|code|LDR             R0, [R3]; "info: "|24-104
26790|code|LDR.W           R2, [R2,R1,LSL#2]|82-248-33-32
26794|code|LDRH            R5, [R3,#(aInfo+4 - 0xA674)]; ": "|157-136
26796|code|LDRB            R1, [R3,#(aInfo+6 - 0xA674)]; ""|153-121
26798|code|ADD.W           R3, R2, R10|2-235-10-3
26802|code|STR.W           R0, [R2,R10]|66-248-10-0
26806|code|ADD.W           R10, R10, #6|10-241-6-10
26810|code|STRH            R5, [R3,#4]|157-128
26812|code|STRB            R1, [R3,#6]|153-113
26814|code|B               loc_6788; jumptable 00006752 case 0|99-231
26816|code|LDR             R1, =(mutex1 - 0x68C8); jumptable 00006752 case 3|83-73
26818|code|LDR             R3, =(aNotice - 0x68CA); "notice: "|84-75
26820|code|ADD             R1, PC; mutex1|121-68
26822|code|ADD             R3, PC; "notice: "|123-68
26824|code|B               loc_6876|213-231
26826|code|LDR             R1, =(mutex1 - 0x68D2); jumptable 00006752 case 4|83-73
26828|code|LDR             R3, =(aWarning - 0x68D8); "warning: "|83-75
26830|code|ADD             R1, PC; mutex1|121-68
26832|code|LDR.W           R2, [R8]|216-248-0-32
26836|code|ADD             R3, PC; "warning: "|123-68
26838|code|LDR             R5, [R1,#(log_current_element - 0x1C280)]|141-105
26840|code|LDM             R3!, {R0,R1}; "warning: "|3-203
26842|code|LDR.W           R2, [R2,R5,LSL#2]|82-248-37-32
26846|code|LDRH            R5, [R3]; " "|29-136
26848|code|ADD.W           R3, R2, R10|2-235-10-3
26852|code|STR.W           R0, [R2,R10]|66-248-10-0
26856|code|ADD.W           R10, R10, #9|10-241-9-10
26860|code|STR             R1, [R3,#4]|89-96
26862|code|STRH            R5, [R3,#8]|29-129
26864|code|B               loc_6788; jumptable 00006752 case 0|74-231
26866|code|LDR             R1, =(mutex1 - 0x68FA); jumptable 00006752 case 5|75-73
26868|code|LDR             R3, =(aError - 0x6900); "error: "|75-75
26870|code|ADD             R1, PC; mutex1|121-68
26872|code|LDR.W           R2, [R8]|216-248-0-32
26876|code|ADD             R3, PC; "error: "|123-68
26878|code|B               loc_6772|56-231
26880|code|LDR             R1, =(mutex1 - 0x6908); jumptable 00006752 case 6|73-73
26882|code|LDR             R3, =(aFatal - 0x690E); "fatal: "|74-75
26884|code|ADD             R1, PC; mutex1|121-68
26886|code|LDR.W           R2, [R8]|216-248-0-32
26890|code|ADD             R3, PC; "fatal: "|123-68
26892|code|B               loc_6772|49-231
26894|code|LDR             R0, =(aNwipeLogFlock - 0x6914); "nwipe_log: flock:"|72-72
26896|code|ADD             R0, PC; "nwipe_log: flock:"|120-68
26898|code|BLX             perror|251-247-20-234
26902|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|56-72
26904|code|LDR             R2, =(aNwipeLogUnable - 0x6924); "nwipe_log: Unable to lock '%s' for logg"...|70-74
26906|code|MOV             R3, R7|59-70
26908|code|MOVS            R1, #1|1-33
26910|code|LDR             R0, [R4,R0]; stderr|32-88
26912|code|ADD             R2, PC; "nwipe_log: Unable to lock '%s' for logg"...|122-68
26914|code|LDR             R0, [R0]|0-104
26916|code|BLX             __fprintf_chk|251-247-250-234
26920|code|B               loc_67D4|84-231
26922|code|ADDS            R1, R5, #1|105-28
26924|code|STR.W           R1, [R11,#(dword_1C29C - 0x1C280)]|203-248-28-16
26928|code|LDR.W           R8, [R4,R3]; log_lines|84-248-3-128
26932|code|LSLS            R1, R1, #2; size|137-0
26934|code|LDR.W           R0, [R8]; ptr|216-248-0-0
26938|code|BLX             realloc|251-247-244-233
26942|code|LDR.W           R11, [R11,#(log_current_element - 0x1C280)]|219-248-24-176
26946|code|MOV.W           R5, R11,LSL#2|79-234-139-5
26950|code|MOV             R3, R0|3-70
26952|code|MOV.W           R0, #0x200; size|79-244-0-112
26956|code|STR.W           R3, [R8]|200-248-0-48
26960|code|STR             R3, [SP,#0x68+var_44]|9-147
26962|code|BLX             malloc|251-247-30-234
26966|code|LDR             R3, [SP,#0x68+var_44]|9-155
26968|code|STR.W           R0, [R3,R11,LSL#2]|67-248-43-0
26972|code|B               loc_6700|208-230
26974|code|LDR.W           LR, =(mutex1 - 0x6970); jumptable 00006752 default case|223-248-216-224
26978|code|MOV.W           R1, #0x200|79-244-0-113
26982|code|LDR.W           R0, [R8]|216-248-0-0
26986|code|MOVS            R2, #1|1-34
26988|code|ADD             LR, PC; mutex1|254-68
26990|code|LDR             R5, =(aLevelI - 0x697C); "level %i: "|51-77
26992|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
26996|code|LDR.W           LR, [LR,#(log_current_element - 0x1C280)]|222-248-24-224
27000|code|ADD             R5, PC; "level %i: "|125-68
27002|code|LDR.W           R0, [R0,LR,LSL#2]|80-248-46-0
27006|code|STR.W           R9, [SP,#0x68+var_64]|205-248-4-144
27010|code|ADD             R0, R10|80-68
27012|code|STR             R5, [SP,#0x68+var_68]|0-149
27014|code|BLX             __snprintf_chk|251-247-88-235
27018|code|ADD             R10, R0|130-68
27020|code|B               loc_6788; jumptable 00006752 case 0|252-230
27022|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|26-72
27024|code|MOV             R3, R7|59-70
27026|code|LDR             R2, =(aNwipeLogUnable_0 - 0x699C); "nwipe_log: Unable to open '%s' for logg"...|43-74
27028|code|MOVS            R1, #1|1-33
27030|code|LDR             R0, [R4,R0]; stderr|32-88
27032|code|ADD             R2, PC; "nwipe_log: Unable to open '%s' for logg"...|122-68
27034|code|LDR             R0, [R0]|0-104
27036|code|BLX             __fprintf_chk|251-247-190-234
27040|code|B               loc_67D4|24-231
27042|code|LDR             R0, =(aNwipeLogFlock - 0x69A8); "nwipe_log: flock:"|40-72
27044|code|ADD             R0, PC; "nwipe_log: flock:"|120-68
27046|code|BLX             perror|251-247-202-233
27050|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|19-72
27052|code|LDR             R2, =(aErrorUnableToU - 0x69B8); "Error: Unable to unlock '%s' after logg"...|38-74
27054|code|MOV             R3, R7|59-70
27056|code|MOVS            R1, #1|1-33
27058|code|LDR             R0, [R4,R0]; stderr|32-88
27060|code|ADD             R2, PC; "Error: Unable to unlock '%s' after logg"...|122-68
27062|code|LDR             R0, [R0]|0-104
27064|code|BLX             __fprintf_chk|251-247-176-234
27068|code|B               loc_6834|58-231
27070|code|BLX             __stack_chk_fail|251-247-146-233
27074|data|ALIGN 4|0-191
27076|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x66C6|254-86-1-0
27080|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
27084|data|DCD mutex1 - 0x66D0|176-91-1-0
27088|data|DCD log_lines_ptr - 0x1BDC4|24-2-0-0
27092|data|DCD aI02i02i02i02i0 - 0x6718; "[%i/%02i/%02i %02i:%02i:%02i] nwipe: "|44-63-0-0
27096|data|DCD mutex1 - 0x6772|14-91-1-0
27100|data|DCD aDebug - 0x6774; "debug: "|248-62-0-0
27104|data|DCD mutex1 - 0x679A|230-90-1-0
27108|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
27112|data|DCD mutex1 - 0x67D2|174-90-1-0
27116|data|DCD aA - 0x67F4; "a"|200-62-0-0
27120|data|DCD aS_1 - 0x6824; "%s\n"|16-63-0-0
27124|data|DCD aNwipeLogFclose - 0x6844; "nwipe_log: fclose:"|36-63-0-0
27128|data|DCD stderr_ptr - 0x1BDC4|200-1-0-0
27132|data|DCD aErrorUnableToC - 0x6856; "Error: Unable to close '%s' after loggi"...|38-63-0-0
27136|data|DCD mutex1 - 0x6876|10-90-1-0
27140|data|DCD aSanity - 0x6878; "sanity: "|44-62-0-0
27144|data|DCD mutex1 - 0x68A0|224-89-1-0
27148|data|DCD aInfo - 0x68A6; "info: "|206-61-0-0
27152|data|DCD mutex1 - 0x68C8|184-89-1-0
27156|data|DCD aNotice - 0x68CA; "notice: "|178-61-0-0
27160|data|DCD mutex1 - 0x68D2|174-89-1-0
27164|data|DCD aWarning - 0x68D8; "warning: "|176-61-0-0
27168|data|DCD mutex1 - 0x68FA|134-89-1-0
27172|data|DCD aError - 0x6900; "error: "|148-61-0-0
27176|data|DCD mutex1 - 0x6908|120-89-1-0
27180|data|DCD aFatal - 0x690E; "fatal: "|142-61-0-0
27184|data|DCD aNwipeLogFlock - 0x6914; "nwipe_log: flock:"|220-61-0-0
27188|data|DCD aNwipeLogUnable - 0x6924; "nwipe_log: Unable to lock '%s' for logg"...|224-61-0-0
27192|data|DCD mutex1 - 0x6970|16-89-1-0
27196|data|DCD aLevelI - 0x697C; "level %i: "|52-61-0-0
27200|data|DCD aNwipeLogUnable_0 - 0x699C; "nwipe_log: Unable to open '%s' for logg"...|36-61-0-0
27204|data|DCD aNwipeLogFlock - 0x69A8; "nwipe_log: flock:"|72-61-0-0
27208|data|DCD aErrorUnableToU - 0x69B8; "Error: Unable to unlock '%s' after logg"...|128-61-0-0
27212|code|PUSH            {R4,R5,LR}|48-181
27214|code|SUB             SP, SP, #0xC|131-176
27216|code|MOV             R5, R1|13-70
27218|code|MOV             R4, R2|20-70
27220|code|BLX             strerror|251-247-180-233
27224|code|LDR             R1, =(aSSS_0 - 0x6A62); "%s: %s: %s"|4-73
27226|code|MOV             R2, R5|42-70
27228|code|MOV             R3, R4|35-70
27230|code|ADD             R1, PC; "%s: %s: %s"|121-68
27232|code|STR             R0, [SP,#0x18+var_18]|0-144
27234|code|MOVS            R0, #5|5-32
27236|code|BL              sub_66B0|255-247-36-254
27240|code|ADD             SP, SP, #0xC|3-176
27242|code|POP             {R4,R5,PC}|48-189
27244|data|DCD aSSS_0 - 0x6A62; "%s: %s: %s"|70-61-0-0
27248|code|LDR             R3, =(nwipe_dod522022m+1 - 0x6A76)|25-75
27250|code|ADD             R3, PC; nwipe_dod522022m|123-68
27252|code|CMP             R0, R3|152-66
27254|code|BEQ             loc_6AA8|23-208
27256|code|LDR             R3, =(nwipe_dodshort+1 - 0x6A7E)|24-75
27258|code|ADD             R3, PC; nwipe_dodshort|123-68
27260|code|CMP             R0, R3|152-66
27262|code|BEQ             loc_6AB0|23-208
27264|code|LDR             R3, =(nwipe_gutmann+1 - 0x6A86)|23-75
27266|code|ADD             R3, PC; nwipe_gutmann|123-68
27268|code|CMP             R0, R3|152-66
27270|code|BEQ             loc_6AB8|23-208
27272|code|LDR             R3, =(nwipe_ops2+1 - 0x6A8E)|22-75
27274|code|ADD             R3, PC; nwipe_ops2|123-68
27276|code|CMP             R0, R3|152-66
27278|code|BEQ             loc_6AC0|23-208
27280|code|LDR             R3, =(nwipe_random+1 - 0x6A96)|21-75
27282|code|ADD             R3, PC; nwipe_random|123-68
27284|code|CMP             R0, R3|152-66
27286|code|BEQ             loc_6AC8|23-208
27288|code|LDR             R3, =(nwipe_zero+1 - 0x6A9E)|20-75
27290|code|ADD             R3, PC; nwipe_zero|123-68
27292|code|CMP             R0, R3|152-66
27294|code|BEQ             loc_6AD0|23-208
27296|code|LDR             R3, =(off_1C154 - 0x6AA6); "DoD 5220.22-M"|19-75
27298|code|ADD             R3, PC; off_1C154|123-68
27300|code|LDR             R0, [R3,#(off_1C16C - 0x1C154)]; "Unknown Method (FIXME)"|152-105
27302|code|BX              LR|112-71
27304|code|LDR             R3, =(off_1C154 - 0x6AAE); "DoD 5220.22-M"|18-75
27306|code|ADD             R3, PC; off_1C154|123-68
27308|code|LDR             R0, [R3]; "DoD 5220.22-M"|24-104
27310|code|BX              LR|112-71
27312|code|LDR             R3, =(off_1C154 - 0x6AB6); "DoD 5220.22-M"|17-75
27314|code|ADD             R3, PC; off_1C154|123-68
27316|code|LDR             R0, [R3,#(off_1C158 - 0x1C154)]; "DoD Short"|88-104
27318|code|BX              LR|112-71
27320|code|LDR             R3, =(off_1C154 - 0x6ABE); "DoD 5220.22-M"|16-75
27322|code|ADD             R3, PC; off_1C154|123-68
27324|code|LDR             R0, [R3,#(off_1C15C - 0x1C154)]; "Gutmann Wipe"|152-104
27326|code|BX              LR|112-71
27328|code|LDR             R3, =(off_1C154 - 0x6AC6); "DoD 5220.22-M"|15-75
27330|code|ADD             R3, PC; off_1C154|123-68
27332|code|LDR             R0, [R3,#(off_1C160 - 0x1C154)]; "RCMP TSSIT OPS-II"|216-104
27334|code|BX              LR|112-71
27336|code|LDR             R3, =(off_1C154 - 0x6ACE); "DoD 5220.22-M"|14-75
27338|code|ADD             R3, PC; off_1C154|123-68
27340|code|LDR             R0, [R3,#(off_1C164 - 0x1C154)]; "PRNG Stream"|24-105
27342|code|BX              LR|112-71
27344|code|LDR             R3, =(off_1C154 - 0x6AD6); "DoD 5220.22-M"|13-75
27346|code|ADD             R3, PC; off_1C154|123-68
27348|code|LDR             R0, [R3,#(off_1C168 - 0x1C154)]; "Quick Erase"|88-105
27350|code|BX              LR|112-71
27352|data|DCD nwipe_dod522022m+1 - 0x6A76|243-6-0-0
27356|data|DCD nwipe_dodshort+1 - 0x6A7E|211-7-0-0
27360|data|DCD nwipe_gutmann+1 - 0x6A86|143-8-0-0
27364|data|DCD nwipe_ops2+1 - 0x6A8E|211-9-0-0
27368|data|DCD nwipe_random+1 - 0x6A96|135-11-0-0
27372|data|DCD nwipe_zero+1 - 0x6A9E|139-6-0-0
27376|data|DCD off_1C154 - 0x6AA6; "DoD 5220.22-M"|174-86-1-0
27380|data|DCD off_1C154 - 0x6AAE; "DoD 5220.22-M"|166-86-1-0
27384|data|DCD off_1C154 - 0x6AB6; "DoD 5220.22-M"|158-86-1-0
27388|data|DCD off_1C154 - 0x6ABE; "DoD 5220.22-M"|150-86-1-0
27392|data|DCD off_1C154 - 0x6AC6; "DoD 5220.22-M"|142-86-1-0
27396|data|DCD off_1C154 - 0x6ACE; "DoD 5220.22-M"|134-86-1-0
27400|data|DCD off_1C154 - 0x6AD6; "DoD 5220.22-M"|126-86-1-0
27404|code|PUSH.W          {R4-R11,LR}|45-233-240-79
27408|code|SUB             SP, SP, #0x4C|147-176
27410|code|LDR.W           R5, =(_GLOBAL_OFFSET_TABLE_ - 0x6B22)|223-248-128-85
27414|code|MOV             R11, R1|139-70
27416|code|LDR.W           R2, =(__stack_chk_guard_ptr - 0x1BDC4)|223-248-124-37
27420|code|ADD             R1, SP, #0x70+var_34|15-169
27422|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
27424|code|LDR.W           R3, =(unk_1C01C - 0x6B2E)|223-248-120-53
27428|code|STR             R1, [SP,#0x70+var_3C]|13-145
27430|code|MOV             R4, R0|4-70
27432|code|LDR             R2, [R5,R2]; __stack_chk_guard|170-88
27434|code|ADD             R3, PC; unk_1C01C|123-68
27436|code|MOV             R7, R1|15-70
27438|code|MOV.W           R6, #0x200|79-244-0-118
27442|code|LDM.W           R3, {R0,R1}|147-232-3-0
27446|code|LDR             R3, [R2]|19-104
27448|code|STR.W           R6, [R4,#0x2CC]|196-248-204-98
27452|code|STM.W           R7, {R0,R1}|135-232-3-0
27456|code|MOV             R0, R6; size|48-70
27458|code|STR             R2, [SP,#0x70+var_44]|11-146
27460|code|STR             R3, [SP,#0x70+var_2C]|17-147
27462|code|BLX             malloc|251-247-36-233
27466|code|STR.W           R0, [R4,#0x2D0]|196-248-208-2
27470|code|CMP             R0, #0|0-40
27472|code|BEQ.W           loc_6FF6|0-240-81-130
27476|code|LDR.W           R7, [R11]|219-248-0-112
27480|code|MOVS            R2, #0|0-34
27482|code|MOVS            R3, #0|0-35
27484|code|CBZ             R7, loc_6B6E|63-177
27486|code|MOVS            R7, #0|0-39
27488|code|ADDS            R7, #1|1-55
27490|code|LDR.W           R3, [R11,R7,LSL#3]|91-248-55-48
27494|code|CMP             R3, #0|0-43
27496|code|BNE             loc_6B60|250-209
27498|code|ASRS            R3, R7, #0x1F|251-23
27500|code|MOV             R2, R7|58-70
27502|code|LDR.W           R12, [R4,#0x22C]|212-248-44-194
27506|code|MOV             R1, R4|33-70
27508|code|LDR.W           LR, [R4,#0x228]|212-248-40-226
27512|code|MOVW            R0, #(dword_1D2F0 - 0x1C2CC)|65-242-36-0
27516|code|STR.W           R7, [R4,#0x2A0]|196-248-160-114
27520|code|MUL.W           R8, R2, R12|2-251-12-248
27524|code|LDR.W           R6, =(nwipe_options_ptr - 0x1BDC4)|223-248-24-101
27528|code|MLA.W           R7, LR, R3, R8|14-251-3-135
27532|code|UMULL.W         R2, R3, R2, LR|162-251-14-35
27536|code|ADD             R3, R7|59-68
27538|code|STRD.W          R2, R3, [R1,#0x2B8]!|225-233-174-35
27542|code|LDR.W           R10, [R5,R6]; nwipe_options|85-248-6-160
27546|code|LDR.W           R0, [R10,R0]|90-248-0-0
27550|code|CMP             R0, #2|2-40
27552|code|BEQ.W           loc_6EEE|0-240-165-129
27556|code|MOVW            R1, #(dword_1D2E8 - 0x1C2CC)|65-242-28-1
27560|code|LDR.W           R5, [R10,R1]|90-248-1-80
27564|code|MOV             R1, R4|33-70
27566|code|ASRS            R7, R5, #0x1F|239-23
27568|code|STR.W           R5, [R4,#0x2DC]|196-248-220-82
27572|code|MUL.W           R6, R2, R7|2-251-7-246
27576|code|MLA.W           R6, R5, R3, R6|5-251-3-102
27580|code|UMULL.W         R2, R3, R2, R5|162-251-5-35
27584|code|LDR.W           R5, [R10,#(dword_1C2D0 - 0x1C2CC)]|218-248-4-80
27588|code|ADD             R3, R6|51-68
27590|code|STRD.W          R2, R3, [R1,#0x2F0]!|225-233-188-35
27594|code|CMP             R5, #0|0-45
27596|code|BNE.W           loc_6ED4|64-240-130-129
27600|code|ADDS.W          R8, R2, LR|18-235-14-8
27604|code|ADD.W           R0, R0, #0xFFFFFFFF|0-241-255-48
27608|code|ADC.W           R9, R3, R12|67-235-12-9
27612|code|CMP             R0, #1|1-40
27614|code|STRD.W          R8, R9, [R1]|193-233-0-137
27618|code|STR.W           R8, [R4,#0x2D8]|196-248-216-130
27622|code|BHI             loc_6BF4|5-216
27624|code|ADDS.W          R2, R8, LR|24-235-14-2
27628|code|ADC.W           R3, R9, R12|73-235-12-3
27632|code|STRD.W          R2, R3, [R1]|193-233-0-35
27636|code|MOVS            R3, #0|0-35
27638|code|LDR.W           R0, [R10,#(dword_1C2E0 - 0x1C2CC)]|218-248-20-0
27642|code|STR.W           R3, [R4,#0x300]|196-248-0-51
27646|code|BL              sub_6A70|255-247-55-255
27650|code|LDR.W           R1, =(aInvokingMethod - 0x6C0E); "Invoking method '%s' on device '%s'."|223-248-160-20
27654|code|LDR.W           R3, [R4,#0x220]|212-248-32-50
27658|code|ADD             R1, PC; "Invoking method '%s' on device '%s'."|121-68
27660|code|MOV             R2, R0|2-70
27662|code|MOVS            R0, #3|3-32
27664|code|BL              sub_66B0|255-247-78-253
27668|code|LDR.W           R2, [R4,#0x300]|212-248-0-35
27672|code|LDR.W           R3, [R4,#0x2DC]|212-248-220-50
27676|code|CMP             R3, R2|147-66
27678|code|BLE.W           loc_6E66|64-243-34-129
27682|code|LDR.W           R1, =(aStartingRoundI - 0x6C2E); "Starting round %i of %i on device '%s'."|223-248-132-20
27686|code|LDR.W           R9, =(aStartingPassIO - 0x6C36); "Starting pass %i of %i, round %i of %i,"...|223-248-132-148
27690|code|ADD             R1, PC; "Starting round %i of %i on device '%s'."|121-68
27692|code|STR             R1, [SP,#0x70+var_4C]|9-145
27694|code|LDR.W           R1, =(aLluBytesWritte - 0x6C38); "%llu bytes written to device '%s'."|223-248-128-20
27698|code|ADD             R9, PC; "Starting pass %i of %i, round %i of %i,"...|249-68
27700|code|ADD             R1, PC; "%llu bytes written to device '%s'."|121-68
27702|code|STR             R1, [SP,#0x70+var_54]|7-145
27704|code|LDR.W           R1, =(aVerifyingPassI - 0x6C40); "Verifying pass %i of %i, round %i of %i"...|223-248-120-20
27708|code|ADD             R1, PC; "Verifying pass %i of %i, round %i of %i"...|121-68
27710|code|STR             R1, [SP,#0x70+var_40]|12-145
27712|code|LDR.W           R1, [R4,#0x220]|212-248-32-18
27716|code|ADDS            R2, #1|1-50
27718|code|MOVS            R0, #3|3-32
27720|code|STR.W           R2, [R4,#0x300]|196-248-0-35
27724|code|STR             R1, [SP,#0x70+var_70]|0-145
27726|code|LDR             R1, [SP,#0x70+var_4C]|9-153
27728|code|BL              sub_66B0|255-247-46-253
27732|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
27736|code|MOVS            R2, #0|0-34
27738|code|STR.W           R2, [R4,#0x2C4]|196-248-196-34
27742|code|CMP             R3, R2|147-66
27744|code|BLE.W           loc_6E40|64-243-238-128
27748|code|LDR.W           R1, =(aVerifiedPassIO - 0x6C72); "Verified pass %i of %i, round %i of %i,"...|223-248-80-20
27752|code|MOV             R5, R2|21-70
27754|code|STR.W           R11, [SP,#0x70+var_5C]|205-248-20-176
27758|code|ADD             R1, PC; "Verified pass %i of %i, round %i of %i,"...|121-68
27760|code|STR             R1, [SP,#0x70+var_48]|10-145
27762|code|LDR.W           R1, =(aLluBytesWritte - 0x6C7A); "%llu bytes written to device '%s'."|223-248-72-20
27766|code|ADD             R1, PC; "%llu bytes written to device '%s'."|121-68
27768|code|STR             R1, [SP,#0x70+var_58]|6-145
27770|code|LDR.W           R1, =(aVerifyingPassI - 0x6C82); "Verifying pass %i of %i, round %i of %i"...|223-248-68-20
27774|code|ADD             R1, PC; "Verifying pass %i of %i, round %i of %i"...|121-68
27776|code|STR             R1, [SP,#0x70+var_50]|8-145
27778|code|B               loc_6CFE|60-224
27780|code|STR.W           R3, [R4,#0x2C0]|196-248-192-50
27784|code|MOV             R0, R4|32-70
27786|code|LDR             R1, [SP,#0x70+var_5C]|5-153
27788|code|MOVS            R7, #0|0-39
27790|code|BL              sub_6064|255-247-233-249
27794|code|LDR.W           R6, [R4,#0x220]|212-248-32-98
27798|code|ADD.W           R3, R4, #0x2A8|4-245-42-115
27802|code|LDR             R1, [SP,#0x70+var_58]|6-153
27804|code|LDRD.W          R2, R3, [R3]|211-233-0-35
27808|code|STR             R6, [SP,#0x70+var_70]|0-150
27810|code|STR.W           R7, [R4,#0x2C0]|196-248-192-114
27814|code|MOV             R8, R0|128-70
27816|code|MOVS            R0, #3|3-32
27818|code|BL              sub_66B0|255-247-1-253
27822|code|CMP             R8, R7|184-69
27824|code|BLT.W           loc_6EEA|192-242-27-129
27828|code|ADD.W           R3, R10, #0x1020|10-245-129-83
27832|code|LDR.W           R8, [R3,#(dword_1D2F0 - 0x1D2EC)]|211-248-4-128
27836|code|CMP.W           R8, #2|184-241-2-15
27840|code|BEQ.W           loc_6DE6|0-240-145-128
27844|code|LDR             R1, [SP,#0x70+var_5C]|5-153
27846|code|MOVS            R0, #3|3-32
27848|code|LDR.W           R7, [R4,#0x220]|212-248-32-114
27852|code|ADDS            R5, #1|1-53
27854|code|ADDS            R1, #8|8-49
27856|code|STR             R1, [SP,#0x70+var_5C]|5-145
27858|code|LDR.W           R1, [R4,#0x2DC]|212-248-220-18
27862|code|LDR.W           R6, [R4,#0x300]|212-248-0-99
27866|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
27870|code|LDR.W           R2, [R4,#0x2C4]|212-248-196-34
27874|code|STR             R1, [SP,#0x70+var_6C]|1-145
27876|code|LDR             R1, =(aFinishedPassIO - 0x6CEE); "Finished pass %i of %i, round %i of %i,"...|247-73
27878|code|STR             R6, [SP,#0x70+var_70]|0-150
27880|code|STR             R7, [SP,#0x70+var_68]|2-151
27882|code|ADD             R1, PC; "Finished pass %i of %i, round %i of %i,"...|121-68
27884|code|BL              sub_66B0|255-247-224-252
27888|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
27892|code|CMP             R3, R5|171-66
27894|code|BLE.W           loc_6E40|64-243-163-128
27898|code|LDR.W           R2, [R4,#0x2C4]|212-248-196-34
27902|code|LDR.W           R0, [R4,#0x300]|212-248-0-3
27906|code|ADDS            R2, #1|1-50
27908|code|LDR.W           R1, [R4,#0x2DC]|212-248-220-18
27912|code|LDR.W           R7, [R4,#0x220]|212-248-32-114
27916|code|STR.W           R2, [R4,#0x2C4]|196-248-196-34
27920|code|STR             R0, [SP,#0x70+var_70]|0-144
27922|code|MOVS            R0, #3|3-32
27924|code|STR             R1, [SP,#0x70+var_6C]|1-145
27926|code|MOV             R1, R9|73-70
27928|code|STR             R7, [SP,#0x70+var_68]|2-151
27930|code|BL              sub_66B0|255-247-201-252
27934|code|LDR.W           R3, [R11,R5,LSL#3]|91-248-53-48
27938|code|CMP             R3, #0|0-43
27940|code|BEQ.W           loc_6EDA|0-240-217-128
27944|code|MOV.W           R3, #1|79-240-1-3
27948|code|BGT             loc_6C84|170-220
27950|code|LDR.W           R0, [R4,#0x298]; fd|212-248-152-2
27954|code|STR.W           R3, [R4,#0x2C0]|196-248-192-50
27958|code|LDR.W           R1, [R4,#0x2D0]; buf|212-248-208-18
27962|code|LDR.W           R2, [R4,#0x2CC]; nbytes|212-248-204-34
27966|code|BLX             read|250-247-90-239
27970|code|CMP             R0, #0|0-40
27972|code|BLT.W           loc_6EF8|192-242-216-128
27976|code|LDR.W           R3, [R4,#0x2CC]|212-248-204-50
27980|code|CMP             R0, R3|152-66
27982|code|BNE.W           loc_6F20|64-240-231-128
27986|code|MOV             R0, R4|32-70
27988|code|MOVS            R7, #0|0-39
27990|code|BL              sub_5A58|254-247-127-254
27994|code|LDR.W           R6, [R4,#0x220]|212-248-32-98
27998|code|ADD.W           R3, R4, #0x2A8|4-245-42-115
28002|code|STR.W           R7, [R4,#0x2C0]|196-248-192-114
28006|code|LDR             R1, [SP,#0x70+var_54]|7-153
28008|code|LDRD.W          R2, R3, [R3]|211-233-0-35
28012|code|STR             R6, [SP,#0x70+var_70]|0-150
28014|code|MOV             R8, R0|128-70
28016|code|MOVS            R0, #3|3-32
28018|code|BL              sub_66B0|255-247-157-252
28022|code|CMP             R8, R7|184-69
28024|code|BLT.W           loc_6EEA|192-242-183-128
28028|code|ADD.W           R3, R10, #0x1020|10-245-129-83
28032|code|LDR.W           R8, [R3,#(dword_1D2F0 - 0x1D2EC)]|211-248-4-128
28036|code|CMP.W           R8, #2|184-241-2-15
28040|code|BNE             loc_6CC4|156-209
28042|code|LDR.W           R12, [R4,#0x2DC]|212-248-220-194
28046|code|MOVS            R0, #3|3-32
28048|code|LDR.W           LR, [R4,#0x220]|212-248-32-226
28052|code|LDR.W           R6, [R4,#0x300]|212-248-0-99
28056|code|LDR.W           R2, [R4,#0x2C4]|212-248-196-34
28060|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
28064|code|LDR             R1, [SP,#0x70+var_40]|12-153
28066|code|STMEA.W         SP, {R6,R12,LR}|141-232-64-80
28070|code|BL              sub_66B0|255-247-131-252
28074|code|MOV             R0, R4|32-70
28076|code|STR.W           R8, [R4,#0x2C0]|196-248-192-130
28080|code|BL              sub_5728|254-247-186-252
28084|code|STR.W           R7, [R4,#0x2C0]|196-248-192-114
28088|code|CMP             R0, #0|0-40
28090|code|BLT.W           loc_6EC2|192-242-130-128
28094|code|LDR.W           R0, [R10,#(dword_1C2E0 - 0x1C2CC)]|218-248-20-0
28098|code|BL              sub_6A70|255-247-85-254
28102|code|LDR.W           R7, [R4,#0x2DC]|212-248-220-114
28106|code|LDR.W           R6, [R4,#0x300]|212-248-0-99
28110|code|LDR.W           R2, [R4,#0x2C4]|212-248-196-34
28114|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
28118|code|LDR             R1, [SP,#0x70+var_48]|10-153
28120|code|STMEA.W         SP, {R6,R7}|141-232-192-0
28124|code|STR             R0, [SP,#0x70+var_68]|2-144
28126|code|MOVS            R0, #3|3-32
28128|code|BL              sub_66B0|255-247-102-252
28132|code|B               loc_6CC4|110-231
28134|code|LDR.W           R12, [R4,#0x2DC]|212-248-220-194
28138|code|MOVS            R0, #3|3-32
28140|code|LDR.W           LR, [R4,#0x220]|212-248-32-226
28144|code|LDR.W           R6, [R4,#0x300]|212-248-0-99
28148|code|LDR.W           R2, [R4,#0x2C4]|212-248-196-34
28152|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
28156|code|LDR             R1, [SP,#0x70+var_50]|8-153
28158|code|STMEA.W         SP, {R6,R12,LR}|141-232-64-80
28162|code|BL              sub_66B0|255-247-85-252
28166|code|MOV             R0, R4|32-70
28168|code|STR.W           R8, [R4,#0x2C0]|196-248-192-130
28172|code|LDR             R1, [SP,#0x70+var_5C]|5-153
28174|code|BL              sub_5D18|254-247-131-255
28178|code|STR.W           R7, [R4,#0x2C0]|196-248-192-114
28182|code|CMP             R0, #0|0-40
28184|code|BLT             loc_6EC2|83-219
28186|code|LDR.W           R1, [R4,#0x2DC]|212-248-220-18
28190|code|MOVS            R0, #3|3-32
28192|code|LDR.W           R7, [R4,#0x220]|212-248-32-114
28196|code|LDR.W           R6, [R4,#0x300]|212-248-0-99
28200|code|LDR.W           R2, [R4,#0x2C4]|212-248-196-34
28204|code|LDR.W           R3, [R4,#0x2A0]|212-248-160-50
28208|code|STR             R1, [SP,#0x70+var_6C]|1-145
28210|code|LDR             R1, =(aVerifiedPassIO - 0x6E3C); "Verified pass %i of %i, round %i of %i,"...|165-73
28212|code|STR             R6, [SP,#0x70+var_70]|0-150
28214|code|STR             R7, [SP,#0x70+var_68]|2-151
28216|code|ADD             R1, PC; "Verified pass %i of %i, round %i of %i,"...|121-68
28218|code|BL              sub_66B0|255-247-57-252
28222|code|B               loc_6CC4|65-231
28224|code|LDR.W           R5, [R4,#0x220]|212-248-32-82
28228|code|MOVS            R0, #3|3-32
28230|code|LDR             R1, =(aFinishedRoundI - 0x6E54); "Finished round %i of %i on device '%s'."|161-73
28232|code|LDR.W           R2, [R4,#0x300]|212-248-0-35
28236|code|LDR.W           R3, [R4,#0x2DC]|212-248-220-50
28240|code|ADD             R1, PC; "Finished round %i of %i on device '%s'."|121-68
28242|code|STR             R5, [SP,#0x70+var_70]|0-149
28244|code|BL              sub_66B0|255-247-44-252
28248|code|LDR.W           R2, [R4,#0x300]|212-248-0-35
28252|code|LDR.W           R3, [R4,#0x2DC]|212-248-220-50
28256|code|CMP             R2, R3|154-66
28258|code|BLT.W           loc_6C40|255-246-237-174
28262|code|LDR             R3, =(nwipe_ops2+1 - 0x6E70)|154-75
28264|code|LDR.W           R2, [R10,#(dword_1C2E0 - 0x1C2CC)]|218-248-20-32
28268|code|ADD             R3, PC; nwipe_ops2|123-68
28270|code|CMP             R2, R3|154-66
28272|code|BEQ.W           loc_6F9C|0-240-148-128
28276|code|LDR.W           R3, [R10,#(dword_1C2D0 - 0x1C2CC)]|218-248-4-48
28280|code|CMP             R3, #0|0-43
28282|code|BEQ             loc_6F5E|112-208
28284|code|ADD.W           R7, R4, #0x4A8|4-245-149-103
28288|code|MOVS            R5, #0|0-37
28290|code|LDR.W           R0, [R4,#0x2D0]; ptr|212-248-208-2
28294|code|STR.W           R5, [R4,#0x2CC]|196-248-204-82
28298|code|BLX             free|250-247-210-238
28302|code|LDRD.W          R2, R3, [R7]|215-233-0-35
28306|code|STR.W           R5, [R4,#0x2C0]|196-248-192-82
28310|code|ORRS.W          R1, R2, R3|82-234-3-1
28314|code|BNE             loc_6F4C|87-209
28316|code|MOV             R5, R4|37-70
28318|code|LDRD.W          R2, R3, [R5,#0x2B0]!|245-233-172-35
28322|code|ORRS.W          R1, R2, R3|82-234-3-1
28326|code|BNE             loc_6F30|67-209
28328|code|ADD.W           R3, R4, #0x2E8|4-245-58-115
28332|code|LDRD.W          R2, R3, [R3]|211-233-0-35
28336|code|ORRS            R3, R2|19-67
28338|code|BNE             loc_6F48|73-209
28340|code|LDR.W           R2, [R4,#0x4A8]|212-248-168-36
28344|code|LDR             R3, [R7,#4]|123-104
28346|code|ORRS            R3, R2|19-67
28348|code|ITE NE|20-191
28350|code|MOVNE           R0, #1|1-32
28352|code|MOVEQ           R0, #0|0-32
28354|code|LDR             R3, [SP,#0x70+var_44]|11-155
28356|code|LDR             R2, [SP,#0x70+var_2C]|17-154
28358|code|LDR             R3, [R3]|27-104
28360|code|CMP             R2, R3|154-66
28362|code|BNE.W           loc_7044|64-240-187-128
28366|code|ADD             SP, SP, #0x4C ; 'L'|19-176
28368|code|POP.W           {R4-R11,PC}|189-232-240-143
28372|code|STR.W           R2, [R4,#0x2D8]|196-248-216-34
28376|code|B               loc_6BF4|140-230
28378|code|LDR             R1, =(aNwipeRunmethod - 0x6EE2); "nwipe_runmethod: A non-terminating patt"...|126-73
28380|code|MOVS            R0, #7|7-32
28382|code|ADD             R1, PC; "nwipe_runmethod: A non-terminating patt"...|121-68
28384|code|BL              sub_66B0|255-247-230-251
28388|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
28392|code|B               loc_6EC2|235-231
28394|code|MOV             R0, R8|64-70
28396|code|B               loc_6EC2|233-231
28398|code|ADDS            R2, R2, R2|146-24
28400|code|ADCS            R3, R3|91-65
28402|code|STRD.W          R2, R3, [R1]|193-233-0-35
28406|code|B               loc_6BA4|85-230
28408|code|MOVS            R3, #0|0-35
28410|code|STR.W           R3, [R4,#0x2C0]|196-248-192-50
28414|code|BLX             __errno_location|250-247-192-239
28418|code|LDR             R1, =(aNwipeRunmethod_0 - 0x6F0A); "nwipe_runmethod"|117-73
28420|code|LDR             R2, =(aRead_0 - 0x6F0C); "read"|117-74
28422|code|ADD             R1, PC; "nwipe_runmethod"|121-68
28424|code|ADD             R2, PC; "read"|122-68
28426|code|LDR             R0, [R0]|0-104
28428|code|BL              sub_6A4C|255-247-158-253
28432|code|LDR             R1, =(aUnableToSeedTh - 0x6F18); "Unable to seed the PRNG."|115-73
28434|code|MOVS            R0, #6|6-32
28436|code|ADD             R1, PC; "Unable to seed the PRNG."|121-68
28438|code|BL              sub_66B0|255-247-203-251
28442|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
28446|code|B               loc_6EC2|208-231
28448|code|LDR             R1, =(aInsufficientEn - 0x6F28); "Insufficient entropy is available."|112-73
28450|code|MOVS            R0, #6|6-32
28452|code|ADD             R1, PC; "Insufficient entropy is available."|121-68
28454|code|BL              sub_66B0|255-247-195-251
28458|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
28462|code|B               loc_6EC2|200-231
28464|code|LDR.W           R6, [R4,#0x220]|212-248-32-98
28468|code|MOVS            R0, #5|5-32
28470|code|LDR             R1, =(aLluWipeErrorsO - 0x6F3E); "%llu wipe errors on device '%s'."|108-73
28472|code|STR             R6, [SP,#0x70+var_70]|0-150
28474|code|ADD             R1, PC; "%llu wipe errors on device '%s'."|121-68
28476|code|BL              sub_66B0|255-247-184-251
28480|code|LDRD.W          R2, R3, [R5]|213-233-0-35
28484|code|ORRS            R3, R2|19-67
28486|code|BEQ             loc_6EA8|175-208
28488|code|MOVS            R0, #1|1-32
28490|code|B               loc_6EC2|186-231
28492|code|LDR.W           R5, [R4,#0x220]|212-248-32-82
28496|code|MOVS            R0, #5|5-32
28498|code|LDR             R1, =(aLluVerificatio - 0x6F5A); "%llu verification errors on device '%s'"...|102-73
28500|code|STR             R5, [SP,#0x70+var_70]|0-149
28502|code|ADD             R1, PC; "%llu verification errors on device '%s'"...|121-68
28504|code|BL              sub_66B0|255-247-170-251
28508|code|B               loc_6E9C|158-231
28510|code|LDR             R1, =(aBlankingDevice - 0x6F6C); "Blanking device '%s'."|100-73
28512|code|MOVS            R5, #3|3-37
28514|code|MOV             R0, R5|40-70
28516|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28520|code|ADD             R1, PC; "Blanking device '%s'."|121-68
28522|code|STR.W           R5, [R4,#0x2C0]|196-248-192-82
28526|code|BL              sub_66B0|255-247-159-251
28530|code|MOV             R0, R4|32-70
28532|code|LDR             R1, [SP,#0x70+var_3C]|13-153
28534|code|BL              sub_6064|255-247-117-248
28538|code|CMP             R0, #0|0-40
28540|code|BLT             loc_6EC2|161-219
28542|code|MOVW            R3, #(dword_1D2F0 - 0x1C2CC)|65-242-36-3
28546|code|LDR.W           R3, [R10,R3]|90-248-3-48
28550|code|SUBS            R3, #1|1-59
28552|code|CMP             R3, #1|1-43
28554|code|BLS             loc_7018|69-217
28556|code|LDR             R1, =(aBlankedDeviceS - 0x6F98); "Blanked device '%s'."|89-73
28558|code|MOVS            R0, #3|3-32
28560|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28564|code|ADD             R1, PC; "Blanked device '%s'."|121-68
28566|code|BL              sub_66B0|255-247-139-251
28570|code|B               loc_6E7C|111-231
28572|code|MOVS            R3, #4|4-35
28574|code|LDR.W           R0, [R4,#0x298]; fd|212-248-152-2
28578|code|STR.W           R3, [R4,#0x2C0]|196-248-192-50
28582|code|LDR.W           R1, [R4,#0x2D0]; buf|212-248-208-18
28586|code|LDR.W           R2, [R4,#0x2CC]; nbytes|212-248-204-34
28590|code|BLX             read|250-247-34-238
28594|code|CMP             R0, #0|0-40
28596|code|BLT             loc_7072|93-219
28598|code|LDR.W           R3, [R4,#0x2CC]|212-248-204-50
28602|code|CMP             R0, R3|152-66
28604|code|BNE             loc_6F20|176-209
28606|code|LDR             R1, =(aWritingFinalRa - 0x6FCA); "Writing final random pattern to '%s'."|78-73
28608|code|MOVS            R0, #3|3-32
28610|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28614|code|ADD             R1, PC; "Writing final random pattern to '%s'."|121-68
28616|code|BL              sub_66B0|255-247-114-251
28620|code|MOV             R0, R4|32-70
28622|code|BL              sub_5A58|254-247-67-253
28626|code|CMP             R0, #0|0-40
28628|code|BLT.W           loc_6EC2|255-246-117-175
28632|code|MOVW            R3, #(dword_1D2F0 - 0x1C2CC)|65-242-36-3
28636|code|LDR.W           R3, [R10,R3]|90-248-3-48
28640|code|SUBS            R3, #1|1-59
28642|code|CMP             R3, #1|1-43
28644|code|BLS             loc_7048|48-217
28646|code|LDR             R1, =(aWroteFinalRand - 0x6FF2); "Wrote final random pattern to '%s'."|69-73
28648|code|MOVS            R0, #3|3-32
28650|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28654|code|ADD             R1, PC; "Wrote final random pattern to '%s'."|121-68
28656|code|BL              sub_66B0|255-247-94-251
28660|code|B               loc_6E7C|66-231
28662|code|BLX             __errno_location|250-247-68-239
28666|code|LDR             R1, =(aNwipeRunmethod_0 - 0x7002); "nwipe_runmethod"|65-73
28668|code|LDR             R2, =(aMalloc_0 - 0x7004); "malloc"|65-74
28670|code|ADD             R1, PC; "nwipe_runmethod"|121-68
28672|code|ADD             R2, PC; "malloc"|122-68
28674|code|LDR             R0, [R0]|0-104
28676|code|BL              sub_6A4C|255-247-34-253
28680|code|LDR             R1, =(aUnableToAlloca_2 - 0x7010); "Unable to allocate memory for the prng "...|63-73
28682|code|MOVS            R0, #6|6-32
28684|code|ADD             R1, PC; "Unable to allocate memory for the prng "...|121-68
28686|code|BL              sub_66B0|255-247-79-251
28690|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
28694|code|B               loc_6EC2|84-231
28696|code|LDR             R1, =(aVerifyingThatS - 0x7024); "Verifying that '%s' is empty."|60-73
28698|code|MOV             R0, R5|40-70
28700|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28704|code|ADD             R1, PC; "Verifying that '%s' is empty."|121-68
28706|code|BL              sub_66B0|255-247-69-251
28710|code|MOV             R0, R4|32-70
28712|code|LDR             R1, [SP,#0x70+var_3C]|13-153
28714|code|BL              sub_5D18|254-247-117-254
28718|code|CMP             R0, #0|0-40
28720|code|BLT.W           loc_6EC2|255-246-71-175
28724|code|LDR             R1, =(aVerifiedThatSI - 0x7040); "Verified that '%s' is empty."|54-73
28726|code|MOV             R0, R5|40-70
28728|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28732|code|ADD             R1, PC; "Verified that '%s' is empty."|121-68
28734|code|BL              sub_66B0|255-247-55-251
28738|code|B               loc_6F8C|163-231
28740|code|BLX             __stack_chk_fail|250-247-78-238
28744|code|LDR             R1, =(aVerifyingTheFi - 0x7054); "Verifying the final random pattern on '"...|50-73
28746|code|MOVS            R0, #3|3-32
28748|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28752|code|ADD             R1, PC; "Verifying the final random pattern on '"...|121-68
28754|code|BL              sub_66B0|255-247-45-251
28758|code|MOV             R0, R4|32-70
28760|code|BL              sub_5728|254-247-102-251
28764|code|CMP             R0, #0|0-40
28766|code|BLT.W           loc_6EC2|255-246-48-175
28770|code|LDR             R1, =(aVerifiedTheFin - 0x706E); "Verified the final random pattern on '%"...|45-73
28772|code|MOVS            R0, #3|3-32
28774|code|LDR.W           R2, [R4,#0x220]|212-248-32-34
28778|code|ADD             R1, PC; "Verified the final random pattern on '%"...|121-68
28780|code|BL              sub_66B0|255-247-32-251
28784|code|B               loc_6FE6|185-231
28786|code|BLX             __errno_location|250-247-6-239
28790|code|LDR             R1, =(aNwipeRunmethod_0 - 0x707E); "nwipe_runmethod"|41-73
28792|code|LDR             R2, =(aRead_0 - 0x7080); "read"|41-74
28794|code|ADD             R1, PC; "nwipe_runmethod"|121-68
28796|code|ADD             R2, PC; "read"|122-68
28798|code|LDR             R0, [R0]|0-104
28800|code|BL              sub_6A4C|255-247-228-252
28804|code|LDR             R1, =(aUnableToSeedTh - 0x708C); "Unable to seed the PRNG."|39-73
28806|code|MOVS            R0, #6|6-32
28808|code|ADD             R1, PC; "Unable to seed the PRNG."|121-68
28810|code|BL              sub_66B0|255-247-17-251
28814|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
28818|code|B               loc_6EC2|22-231
28820|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6B22|162-82-1-0
28824|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
28828|data|DCD unk_1C01C - 0x6B2E|238-84-1-0
28832|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
28836|data|DCD aInvokingMethod - 0x6C0E; "Invoking method '%s' on device '%s'."|50-60-0-0
28840|data|DCD aStartingRoundI - 0x6C2E; "Starting round %i of %i on device '%s'."|58-60-0-0
28844|data|DCD aStartingPassIO - 0x6C36; "Starting pass %i of %i, round %i of %i,"...|130-60-0-0
28848|data|DCD aLluBytesWritte - 0x6C38; "%llu bytes written to device '%s'."|252-60-0-0
28852|data|DCD aVerifyingPassI - 0x6C40; "Verifying pass %i of %i, round %i of %i"...|24-61-0-0
28856|data|DCD aVerifiedPassIO - 0x6C72; "Verified pass %i of %i, round %i of %i,"...|34-61-0-0
28860|data|DCD aLluBytesWritte - 0x6C7A; "%llu bytes written to device '%s'."|186-60-0-0
28864|data|DCD aVerifyingPassI - 0x6C82; "Verifying pass %i of %i, round %i of %i"...|214-60-0-0
28868|data|DCD aFinishedPassIO - 0x6CEE; "Finished pass %i of %i, round %i of %i,"...|30-61-0-0
28872|data|DCD aVerifiedPassIO - 0x6E3C; "Verified pass %i of %i, round %i of %i,"...|88-59-0-0
28876|data|DCD aFinishedRoundI - 0x6E54; "Finished round %i of %i on device '%s'."|60-58-0-0
28880|data|DCD nwipe_ops2+1 - 0x6E70|241-5-0-0
28884|data|DCD aNwipeRunmethod - 0x6EE2; "nwipe_runmethod: A non-terminating patt"...|14-58-0-0
28888|data|DCD aNwipeRunmethod_0 - 0x6F0A; "nwipe_runmethod"|170-56-0-0
28892|data|DCD aRead_0 - 0x6F0C; "read"|252-51-0-0
28896|data|DCD aUnableToSeedTh - 0x6F18; "Unable to seed the PRNG."|180-58-0-0
28900|data|DCD aInsufficientEn - 0x6F28; "Insufficient entropy is available."|192-58-0-0
28904|data|DCD aLluWipeErrorsO - 0x6F3E; "%llu wipe errors on device '%s'."|90-60-0-0
28908|data|DCD aLluVerificatio - 0x6F5A; "%llu verification errors on device '%s'"...|18-60-0-0
28912|data|DCD aBlankingDevice - 0x6F6C; "Blanking device '%s'."|144-59-0-0
28916|data|DCD aBlankedDeviceS - 0x6F98; "Blanked device '%s'."|188-59-0-0
28920|data|DCD aWritingFinalRa - 0x6FCA; "Writing final random pattern to '%s'."|122-58-0-0
28924|data|DCD aWroteFinalRand - 0x6FF2; "Wrote final random pattern to '%s'."|230-58-0-0
28928|data|DCD aNwipeRunmethod_0 - 0x7002; "nwipe_runmethod"|178-55-0-0
28932|data|DCD aMalloc_0 - 0x7004; "malloc"|0-50-0-0
28936|data|DCD aUnableToAlloca_2 - 0x7010; "Unable to allocate memory for the prng "...|252-55-0-0
28940|data|DCD aVerifyingThatS - 0x7024; "Verifying that '%s' is empty."|240-58-0-0
28944|data|DCD aVerifiedThatSI - 0x7040; "Verified that '%s' is empty."|244-58-0-0
28948|data|DCD aVerifyingTheFi - 0x7054; "Verifying the final random pattern on '"...|24-58-0-0
28952|data|DCD aVerifiedTheFin - 0x706E; "Verified the final random pattern on '%"...|54-58-0-0
28956|data|DCD aNwipeRunmethod_0 - 0x707E; "nwipe_runmethod"|54-55-0-0
28960|data|DCD aRead_0 - 0x7080; "read"|136-50-0-0
28964|data|DCD aUnableToSeedTh - 0x708C; "Unable to seed the PRNG."|64-57-0-0
28968|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7130)|13-75
28970|code|LDR             R2, =(__stack_chk_guard_ptr - 0x1BDC4)|14-74
28972|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
28974|code|PUSH            {R4-R6,LR}|112-181
28976|code|SUB             SP, SP, #0x10|132-176
28978|code|LDR             R6, [R3,R2]; __stack_chk_guard|158-88
28980|code|ADD             R1, SP, #0x20+var_1C|1-169
28982|code|MOVS            R4, #0|0-36
28984|code|MOV             R5, R0|5-70
28986|code|STR             R4, [SP,#0x20+var_1C]|1-148
28988|code|LDR             R3, [R6]|51-104
28990|code|STR             R4, [SP,#0x20+var_18]|2-148
28992|code|STR             R3, [SP,#0x20+var_14]|3-147
28994|code|BL              sub_6B0C|255-247-227-252
28998|code|LDR             R2, [SP,#0x20+var_14]|3-154
29000|code|LDR             R3, [R6]|51-104
29002|code|STR.W           R4, [R5,#0x49C]|197-248-156-68
29006|code|CMP             R2, R3|154-66
29008|code|STR.W           R0, [R5,#0x2D8]|197-248-216-2
29012|code|BNE             loc_715C|2-209
29014|code|MOV             R0, R4|32-70
29016|code|ADD             SP, SP, #0x10|4-176
29018|code|POP             {R4-R6,PC}|112-189
29020|code|BLX             __stack_chk_fail|250-247-194-237
29024|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7130|148-76-1-0
29028|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
29032|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7170)|50-75
29034|code|PUSH            {R4-R7,LR}|240-181
29036|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
29038|code|LDR             R6, =(__stack_chk_guard_ptr - 0x1BDC4)|50-78
29040|code|SUB             SP, SP, #0x5C|151-176
29042|code|ADD             R2, SP, #0x70+buf|19-170
29044|code|LDR             R4, =(aErrorUnknownVe+0x28 - 0x718A); ""|49-76
29046|code|STR             R2, [SP,#0x70+var_6C]|1-146
29048|code|MOV             R5, R0|5-70
29050|code|LDR             R6, [R3,R6]; __stack_chk_guard|158-89
29052|code|MOV             R1, R2; buf|17-70
29054|code|LDR.W           R0, [R0,#0x298]; fd|208-248-152-2
29058|code|MOVS            R2, #7; nbytes|7-34
29060|code|MOVS            R3, #1|1-35
29062|code|ADD             R4, PC; ""|124-68
29064|code|LDR.W           LR, [R6]|214-248-0-224
29068|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
29072|code|STR             R4, [SP,#0x70+var_50]|8-148
29074|code|STR             R4, [SP,#0x70+var_30]|16-148
29076|code|MOVS            R4, #0|0-36
29078|code|STR             R3, [SP,#0x70+var_64]|3-147
29080|code|STR             R3, [SP,#0x70+var_5C]|5-147
29082|code|STR             R3, [SP,#0x70+var_4C]|9-147
29084|code|STR             R3, [SP,#0x70+var_44]|11-147
29086|code|STR             R3, [SP,#0x70+var_3C]|13-147
29088|code|ADD.W           R3, SP, #0x70+var_23|13-241-77-3
29092|code|STR             R1, [SP,#0x70+var_60]|4-145
29094|code|STR             R3, [SP,#0x70+var_58]|6-147
29096|code|ADD.W           R3, SP, #0x70+var_21|13-241-79-3
29100|code|STR.W           LR, [SP,#0x70+var_1C]|205-248-84-224
29104|code|STR             R3, [SP,#0x70+var_48]|10-147
29106|code|ADD             R3, SP, #0x70+var_20|20-171
29108|code|STR             R7, [SP,#0x70+var_54]|7-151
29110|code|STR             R3, [SP,#0x70+var_40]|12-147
29112|code|ADD.W           R3, SP, #0x70+var_1F|13-241-81-3
29116|code|STR             R7, [SP,#0x70+var_34]|15-151
29118|code|STR             R3, [SP,#0x70+var_38]|14-147
29120|code|STR             R4, [SP,#0x70+var_2C]|17-148
29122|code|STR             R4, [SP,#0x70+var_28]|18-148
29124|code|BLX             read|250-247-22-237
29128|code|CMP             R0, #7|7-40
29130|code|BEQ             loc_720A|30-208
29132|code|BLX             __errno_location|250-247-88-238
29136|code|LDR             R1, =(aNwipeRunmethod_0 - 0x71D8); "nwipe_runmethod"|27-73
29138|code|LDR             R2, =(aRead_0 - 0x71DA); "read"|28-74
29140|code|ADD             R1, PC; "nwipe_runmethod"|121-68
29142|code|ADD             R2, PC; "read"|122-68
29144|code|ADDS            R1, #0x10|16-49
29146|code|LDR             R4, [R0]|4-104
29148|code|MOV             R0, R4|32-70
29150|code|BL              sub_6A4C|255-247-53-252
29154|code|LDR             R3, =(off_1C154 - 0x71EC); "DoD 5220.22-M"|25-75
29156|code|LDR             R1, =(aUnableToSeedTh_0 - 0x71EE); "Unable to seed the %s method."|25-73
29158|code|MOVS            R0, #6|6-32
29160|code|ADD             R3, PC; off_1C154|123-68
29162|code|ADD             R1, PC; "Unable to seed the %s method."|121-68
29164|code|LDR             R2, [R3]; "DoD 5220.22-M"|26-104
29166|code|BL              sub_66B0|255-247-95-250
29170|code|CMP             R4, #0|0-44
29172|code|IT GE|168-191
29174|code|MOVGE           R4, R7|60-70
29176|code|STR.W           R4, [R5,#0x2D8]|197-248-216-66
29180|code|LDR             R2, [SP,#0x70+var_1C]|21-154
29182|code|MOVS            R0, #0|0-32
29184|code|LDR             R3, [R6]|51-104
29186|code|CMP             R2, R3|154-66
29188|code|BNE             loc_7230|20-209
29190|code|ADD             SP, SP, #0x5C ; '\'|23-176
29192|code|POP             {R4-R7,PC}|240-189
29194|code|LDRB.W          R2, [SP,#0x70+buf]|157-248-76-32
29198|code|MOV             R0, R5|40-70
29200|code|LDRB.W          R3, [SP,#0x70+var_20]|157-248-80-48
29204|code|ADD             R1, SP, #0x70+var_64|3-169
29206|code|MVNS            R2, R2|210-67
29208|code|STRB.W          R2, [SP,#0x70+var_23]|141-248-77-32
29212|code|MVNS            R3, R3|219-67
29214|code|STRB.W          R3, [SP,#0x70+var_1F]|141-248-81-48
29218|code|BL              sub_6B0C|255-247-115-252
29222|code|STR.W           R4, [R5,#0x49C]|197-248-156-68
29226|code|STR.W           R0, [R5,#0x2D8]|197-248-216-2
29230|code|B               loc_71FC|229-231
29232|code|BLX             __stack_chk_fail|250-247-88-237
29236|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7170|84-76-1-0
29240|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
29244|data|DCD aErrorUnknownVe+0x28 - 0x718A; ""|218-68-0-0
29248|data|DCD aNwipeRunmethod_0 - 0x71D8; "nwipe_runmethod"|220-53-0-0
29252|data|DCD aRead_0 - 0x71DA; "read"|46-49-0-0
29256|data|DCD off_1C154 - 0x71EC; "DoD 5220.22-M"|104-79-1-0
29260|data|DCD aUnableToSeedTh_0 - 0x71EE; "Unable to seed the %s method."|206-57-0-0
29264|code|PUSH            {R4-R7,LR}|240-181
29266|code|SUB             SP, SP, #0x2C|139-176
29268|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x7260)|40-76
29270|code|ADD             R3, SP, #0x40+buf|8-171
29272|code|LDR             R6, =(__stack_chk_guard_ptr - 0x1BDC4)|40-78
29274|code|MOV             R5, R0|5-70
29276|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
29278|code|MOV             R1, R3; buf|25-70
29280|code|LDR             R7, =(aErrorUnknownVe+0x28 - 0x7270); ""|39-79
29282|code|MOVS            R2, #3; nbytes|3-34
29284|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
29286|code|MOV.W           LR, #1|79-240-1-14
29290|code|STR             R3, [SP,#0x40+var_3C]|1-147
29292|code|ADD             R7, PC; ""|127-68
29294|code|LDR.W           R0, [R0,#0x298]; fd|208-248-152-2
29298|code|MOVS            R4, #0|0-36
29300|code|LDR             R3, [R6]|51-104
29302|code|STR             R7, [SP,#0x40+var_2C]|5-151
29304|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
29308|code|STR.W           LR, [SP,#0x40+var_40]|205-248-0-224
29312|code|STR             R3, [SP,#0x40+var_1C]|9-147
29314|code|ADD.W           R3, SP, #0x40+var_1F|13-241-33-3
29318|code|STR.W           LR, [SP,#0x40+var_38]|205-248-8-224
29322|code|STR             R3, [SP,#0x40+var_34]|3-147
29324|code|STR             R7, [SP,#0x40+var_30]|4-151
29326|code|STR             R4, [SP,#0x40+var_28]|6-148
29328|code|STR             R4, [SP,#0x40+var_24]|7-148
29330|code|BLX             read|250-247-176-236
29334|code|CMP             R0, #3|3-40
29336|code|BEQ             loc_72D8|30-208
29338|code|BLX             __errno_location|250-247-242-237
29342|code|LDR             R1, =(aNwipeRunmethod_0 - 0x72A6); "nwipe_runmethod"|25-73
29344|code|LDR             R2, =(aRead_0 - 0x72A8); "read"|25-74
29346|code|ADD             R1, PC; "nwipe_runmethod"|121-68
29348|code|ADD             R2, PC; "read"|122-68
29350|code|ADDS            R1, #0x24 ; '$'|36-49
29352|code|LDR             R4, [R0]|4-104
29354|code|MOV             R0, R4|32-70
29356|code|BL              sub_6A4C|255-247-206-251
29360|code|LDR             R3, =(off_1C154 - 0x72BA); "DoD 5220.22-M"|22-75
29362|code|LDR             R1, =(aUnableToSeedTh_0 - 0x72BC); "Unable to seed the %s method."|23-73
29364|code|MOVS            R0, #6|6-32
29366|code|ADD             R3, PC; off_1C154|123-68
29368|code|ADD             R1, PC; "Unable to seed the %s method."|121-68
29370|code|LDR             R2, [R3,#(off_1C158 - 0x1C154)]; "DoD Short"|90-104
29372|code|BL              sub_66B0|255-247-248-249
29376|code|CMP             R4, #0|0-44
29378|code|IT GE|168-191
29380|code|MOVGE           R4, R7|60-70
29382|code|STR.W           R4, [R5,#0x2D8]|197-248-216-66
29386|code|LDR             R2, [SP,#0x40+var_1C]|9-154
29388|code|MOVS            R0, #0|0-32
29390|code|LDR             R3, [R6]|51-104
29392|code|CMP             R2, R3|154-66
29394|code|BNE             loc_72F4|15-209
29396|code|ADD             SP, SP, #0x2C ; ','|11-176
29398|code|POP             {R4-R7,PC}|240-189
29400|code|LDRB.W          R3, [SP,#0x40+buf]|157-248-32-48
29404|code|MOV             R0, R5|40-70
29406|code|MOV             R1, SP|105-70
29408|code|MVNS            R3, R3|219-67
29410|code|STRB.W          R3, [SP,#0x40+var_1F]|141-248-33-48
29414|code|BL              sub_6B0C|255-247-17-252
29418|code|STR.W           R4, [R5,#0x49C]|197-248-156-68
29422|code|STR.W           R0, [R5,#0x2D8]|197-248-216-2
29426|code|B               loc_72CA|234-231
29428|code|BLX             __stack_chk_fail|250-247-246-236
29432|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7260|100-75-1-0
29436|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
29440|data|DCD aErrorUnknownVe+0x28 - 0x7270; ""|244-67-0-0
29444|data|DCD aNwipeRunmethod_0 - 0x72A6; "nwipe_runmethod"|14-53-0-0
29448|data|DCD aRead_0 - 0x72A8; "read"|96-48-0-0
29452|data|DCD off_1C154 - 0x72BA; "DoD 5220.22-M"|154-78-1-0
29456|data|DCD aUnableToSeedTh_0 - 0x72BC; "Unable to seed the %s method."|0-57-0-0
29460|code|PUSH.W          {R4-R11,LR}|45-233-240-79
29464|code|MOV.W           R2, #0x120; n|79-244-144-114
29468|code|VPUSH           {D8}|45-237-2-139
29472|code|MOV             R7, R0|7-70
29474|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x732A)|71-75
29476|code|LDR             R4, =(__stack_chk_guard_ptr - 0x1BDC4)|71-76
29478|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
29480|code|LDR             R1, =(unk_1C01C - 0x7336)|71-73
29482|code|SUB.W           SP, SP, #0x29C|173-245-39-125
29486|code|LDR             R3, [R3,R4]; __stack_chk_guard|27-89
29488|code|ADD             R5, SP, #0x2C8+dest|21-173
29490|code|ADD             R1, PC; unk_1C01C|121-68
29492|code|ADDS            R1, #8; src|8-49
29494|code|MOV             R0, R5; dest|40-70
29496|code|STR             R3, [SP,#0x2C8+var_2C4]|1-147
29498|code|LDR             R3, [R3]|27-104
29500|code|STR             R3, [SP,#0x2C8+var_34]|165-147
29502|code|BLX             memcpy|250-247-156-236
29506|code|LDR.W           R0, [R7,#0x298]; fd|215-248-152-2
29510|code|ADD             R1, SP, #0x2C8+buf; buf|3-169
29512|code|MOVS            R2, #0x46 ; 'F'; nbytes|70-34
29514|code|BLX             read|250-247-84-236
29518|code|CMP             R0, #0x46 ; 'F'|70-40
29520|code|BEQ             loc_73A0|38-208
29522|code|BLX             __errno_location|250-247-150-237
29526|code|LDR             R1, =(aNwipeRunmethod_0 - 0x735E); "nwipe_runmethod"|61-73
29528|code|LDR             R2, =(aRead_0 - 0x7360); "read"|61-74
29530|code|ADD             R1, PC; "nwipe_runmethod"|121-68
29532|code|ADD             R2, PC; "read"|122-68
29534|code|ADDS            R1, #0x34 ; '4'|52-49
29536|code|LDR             R4, [R0]|4-104
29538|code|MOV             R0, R4|32-70
29540|code|BL              sub_6A4C|255-247-114-251
29544|code|LDR             R3, =(off_1C154 - 0x7372); "DoD 5220.22-M"|58-75
29546|code|LDR             R1, =(aUnableToSeedTh_0 - 0x7374); "Unable to seed the %s method."|59-73
29548|code|MOVS            R0, #6|6-32
29550|code|ADD             R3, PC; off_1C154|123-68
29552|code|ADD             R1, PC; "Unable to seed the %s method."|121-68
29554|code|LDR             R2, [R3,#(off_1C15C - 0x1C154)]; "Gutmann Wipe"|154-104
29556|code|BL              sub_66B0|255-247-156-249
29560|code|CMP             R4, #0|0-44
29562|code|ITEE LT|178-191
29564|code|STRLT.W         R4, [R7,#0x2D8]|199-248-216-66
29568|code|MOVGE.W         R3, #0xFFFFFFFF|79-240-255-51
29572|code|STRGE.W         R3, [R7,#0x2D8]|199-248-216-50
29576|code|LDR             R3, [SP,#0x2C8+var_2C4]|1-155
29578|code|MOVS            R0, #0|0-32
29580|code|LDR             R2, [SP,#0x2C8+var_34]|165-154
29582|code|LDR             R3, [R3]|27-104
29584|code|CMP             R2, R3|154-66
29586|code|BNE             loc_7434|79-209
29588|code|ADD.W           SP, SP, #0x29C|13-245-39-125
29592|code|VPOP            {D8}|189-236-2-139
29596|code|POP.W           {R4-R11,PC}|189-232-240-143
29600|code|LDR.W           R10, =(aNwipeGutmannSe - 0x73B4); "nwipe_gutmann: Set patterns[%i] = book["...|223-248-184-160
29604|code|ADD.W           R11, SP, #0x2C8+var_276|13-241-82-11
29608|code|VLDR            D8, =0.0000152587891|159-237-35-139
29612|code|ADD.W           R8, SP, #0x2C8+var_154|13-245-186-120
29616|code|ADD             R10, PC; "nwipe_gutmann: Set patterns[%i] = book["...|250-68
29618|code|MOVS            R6, #0x22 ; '"'|34-38
29620|code|LDRH.W          R3, [R11,#-2]!|59-248-2-61
29624|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
29628|code|VMOV            S14, R3|7-238-16-58
29632|code|ADDS            R3, R6, #1|115-28
29634|code|VMOV            S15, R3|7-238-144-58
29638|code|VCVT.F64.S32    D6, S15|184-238-231-107
29642|code|VCVT.F64.U32    D7, S14|184-238-71-123
29646|code|VMUL.F64        D7, D7, D8|39-238-8-123
29650|code|VMUL.F64        D7, D7, D6|39-238-6-123
29654|code|VCVT.S32.F64    S15, D7|253-238-199-123
29658|code|VMOV            R2, S15|23-238-144-42
29662|code|CMP             R2, #0|0-42
29664|code|BLT             loc_73F2|7-219
29666|code|ADDS            R4, #1|1-52
29668|code|LDR.W           R3, [R5,R4,LSL#3]|85-248-52-48
29672|code|CMP             R3, #0|0-43
29674|code|BEQ             loc_73E2|250-208
29676|code|SUBS            R2, #1|1-58
29678|code|CMP             R2, #0|0-42
29680|code|BGE             loc_73E2|247-218
29682|code|ADD.W           R1, R5, R4,LSL#3|5-235-196-1
29686|code|ADD.W           LR, R8, R6,LSL#3|8-235-198-14
29690|code|MOV             R3, R4|35-70
29692|code|MOV             R2, R6|50-70
29694|code|LDM             R1, {R0,R1}|3-201
29696|code|SUBS            R6, #1|1-62
29698|code|MOV.W           R9, #0|79-240-0-9
29702|code|STR.W           R9, [R5,R4,LSL#3]|69-248-52-144
29706|code|STM.W           LR, {R0,R1}|142-232-3-0
29710|code|MOVS            R0, #1|1-32
29712|code|MOV             R1, R10|81-70
29714|code|BL              sub_66B0|255-247-77-249
29718|code|ADDS            R3, R6, #1|115-28
29720|code|BNE             loc_73B4|204-209
29722|code|MOV             R1, R8|65-70
29724|code|MOV             R0, R7|56-70
29726|code|STR.W           R9, [R8,#0x118]|200-248-24-145
29730|code|STR.W           R9, [R8,#0x11C]|200-248-28-145
29734|code|BL              sub_6B0C|255-247-113-251
29738|code|STR.W           R9, [R7,#0x49C]|199-248-156-148
29742|code|STR.W           R0, [R7,#0x2D8]|199-248-216-2
29746|code|B               loc_7388|169-231
29748|code|BLX             __stack_chk_fail|250-247-86-236
29752|data|DCFD 0.0000152587891|0-0-0-0-0-0-240-62
29760|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x732A|154-74-1-0
29764|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
29768|data|DCD unk_1C01C - 0x7336|230-76-1-0
29772|data|DCD aNwipeRunmethod_0 - 0x735E; "nwipe_runmethod"|86-52-0-0
29776|data|DCD aRead_0 - 0x7360; "read"|168-47-0-0
29780|data|DCD off_1C154 - 0x7372; "DoD 5220.22-M"|226-77-1-0
29784|data|DCD aUnableToSeedTh_0 - 0x7374; "Unable to seed the %s method."|72-56-0-0
29788|data|DCD aNwipeGutmannSe - 0x73B4; "nwipe_gutmann: Set patterns[%i] = book["...|40-56-0-0
29792|code|PUSH.W          {R3-R11,LR}|45-233-248-79
29796|code|MOVW            R1, #(dword_1D2E8 - 0x1C2CC)|65-242-28-1
29800|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7472)|96-75
29802|code|MOV             R8, R0|128-70
29804|code|LDR             R2, =(nwipe_options_ptr - 0x1BDC4)|96-74
29806|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
29808|code|LDR             R3, [R3,R2]; nwipe_options|155-88
29810|code|LDR             R4, [R3,R1]|92-88
29812|code|MOV             R0, R4; size|32-70
29814|code|BLX             malloc|250-247-140-236
29818|code|MOV             R7, R0|7-70
29820|code|CMP             R0, #0|0-40
29822|code|BEQ.W           loc_7598|0-240-139-128
29826|code|MOV             R0, R4; size|32-70
29828|code|MOV.W           R9, R4,LSL#3|79-234-196-9
29832|code|BLX             malloc|250-247-130-236
29836|code|MOV             R10, R0|130-70
29838|code|ADD.W           R0, R9, #1|9-241-1-0
29842|code|LSLS            R0, R0, #3; size|192-0
29844|code|BLX             malloc|250-247-124-236
29848|code|MOV             R11, R0|131-70
29850|code|CMP             R0, #0|0-40
29852|code|BEQ.W           loc_75C4|0-240-146-128
29856|code|MOV             R1, R7; buf|57-70
29858|code|LDR.W           R0, [R8,#0x298]; fd|216-248-152-2
29862|code|MOV             R2, R4; nbytes|34-70
29864|code|BLX             read|250-247-164-235
29868|code|CMP             R0, R4|160-66
29870|code|MOV             R1, R0|1-70
29872|code|BEQ             loc_74EE|29-208
29874|code|BLX             __errno_location|250-247-230-236
29878|code|LDR             R1, =(aNwipeRunmethod_0 - 0x74BE); "nwipe_runmethod"|79-73
29880|code|LDR             R2, =(aRead_0 - 0x74C0); "read"|79-74
29882|code|ADD             R1, PC; "nwipe_runmethod"|121-68
29884|code|ADD             R2, PC; "read"|122-68
29886|code|ADDS            R1, #0x44 ; 'D'|68-49
29888|code|LDR             R4, [R0]|4-104
29890|code|MOV             R0, R4|32-70
29892|code|BL              sub_6A4C|255-247-194-250
29896|code|LDR             R3, =(off_1C154 - 0x74D2); "DoD 5220.22-M"|76-75
29898|code|LDR             R1, =(aUnableToSeedTh_0 - 0x74D4); "Unable to seed the %s method."|77-73
29900|code|MOVS            R0, #6|6-32
29902|code|ADD             R3, PC; off_1C154|123-68
29904|code|ADD             R1, PC; "Unable to seed the %s method."|121-68
29906|code|LDR             R2, [R3,#(off_1C160 - 0x1C154)]; "RCMP TSSIT OPS-II"|218-104
29908|code|BL              sub_66B0|255-247-236-248
29912|code|CMP             R4, #0|0-44
29914|code|ITEE LT|178-191
29916|code|STRLT.W         R4, [R8,#0x2D8]|200-248-216-66
29920|code|MOVGE.W         R3, #0xFFFFFFFF|79-240-255-51
29924|code|STRGE.W         R3, [R8,#0x2D8]|200-248-216-50
29928|code|MOVS            R0, #0|0-32
29930|code|POP.W           {R3-R11,PC}|189-232-248-143
29934|code|ADD.W           R0, R10, #0xFFFFFFFF|10-241-255-48
29938|code|ADDS            R4, R7, R1|124-24
29940|code|MOV             R2, R7|58-70
29942|code|CBZ             R1, loc_7558|121-179
29944|code|LDRB.W          R3, [R2],#1|18-248-1-59
29948|code|CMP             R2, R4|162-66
29950|code|MVN.W           R3, R3|111-234-3-3
29954|code|STRB.W          R3, [R0,#1]!|0-248-1-63
29958|code|BNE             loc_74F8|247-209
29960|code|MOV             R3, R11|91-70
29962|code|MOVS            R4, #0|0-36
29964|code|MOVS            R2, #1|1-34
29966|code|ADDS            R6, R7, R4|62-25
29968|code|ADD.W           R5, R10, R4|10-235-4-5
29972|code|ADDS            R4, #8|8-52
29974|code|STR             R2, [R3]|26-96
29976|code|CMP             R1, R4|161-66
29978|code|STR             R2, [R3,#0x10]|26-97
29980|code|STR             R2, [R3,#0x20]|26-98
29982|code|ADD.W           R3, R3, #0x100|3-245-128-115
29986|code|STR.W           R2, [R3,#-0xD0]|67-248-208-44
29990|code|STR.W           R2, [R3,#-0xF8]|67-248-248-44
29994|code|STR.W           R2, [R3,#-0xE8]|67-248-232-44
29998|code|STR.W           R2, [R3,#-0xD8]|67-248-216-44
30002|code|STR.W           R2, [R3,#-0xC8]|67-248-200-44
30006|code|STR.W           R6, [R3,#-0xFC]|67-248-252-108
30010|code|STR.W           R6, [R3,#-0xEC]|67-248-236-108
30014|code|STR.W           R6, [R3,#-0xDC]|67-248-220-108
30018|code|STR.W           R6, [R3,#-0xCC]|67-248-204-108
30022|code|STR.W           R5, [R3,#-0xF4]|67-248-244-92
30026|code|STR.W           R5, [R3,#-0xE4]|67-248-228-92
30030|code|STR.W           R5, [R3,#-0xD4]|67-248-212-92
30034|code|STR.W           R5, [R3,#-0xC4]|67-248-196-92
30038|code|BHI             loc_750E|218-216
30040|code|ADD.W           R9, R9, #0x20000000|9-241-0-89
30044|code|MOV             R1, R11|89-70
30046|code|MOVS            R4, #0|0-36
30048|code|MOV             R0, R8|64-70
30050|code|ADD.W           R3, R11, R9,LSL#3|11-235-201-3
30054|code|STR.W           R4, [R11,R9,LSL#3]|75-248-57-64
30058|code|STR             R4, [R3,#4]|92-96
30060|code|BL              sub_6B0C|255-247-206-250
30064|code|MOV             R0, R7; ptr|56-70
30066|code|BLX             free|250-247-94-235
30070|code|MOV             R0, R10; ptr|80-70
30072|code|BLX             free|250-247-90-235
30076|code|MOV             R0, R11; ptr|88-70
30078|code|BLX             free|250-247-88-235
30082|code|MOV             R0, R8|64-70
30084|code|MOV             R1, R11|89-70
30086|code|BL              sub_6B0C|255-247-193-250
30090|code|STR.W           R4, [R8,#0x49C]|200-248-156-68
30094|code|STR.W           R0, [R8,#0x2D8]|200-248-216-2
30098|code|MOVS            R0, #0|0-32
30100|code|POP.W           {R3-R11,PC}|189-232-248-143
30104|code|BLX             __errno_location|250-247-114-236
30108|code|LDR             R1, =(aNwipeRunmethod_0 - 0x75A4); "nwipe_runmethod"|25-73
30110|code|LDR             R2, =(aMalloc_0 - 0x75A6); "malloc"|26-74
30112|code|ADD             R1, PC; "nwipe_runmethod"|121-68
30114|code|ADD             R2, PC; "malloc"|122-68
30116|code|ADDS            R1, #0x44 ; 'D'|68-49
30118|code|LDR             R0, [R0]|0-104
30120|code|BL              sub_6A4C|255-247-80-250
30124|code|LDR             R1, =(aUnableToAlloca_3 - 0x75B4); "Unable to allocate the random character"...|23-73
30126|code|MOVS            R0, #6|6-32
30128|code|ADD             R1, PC; "Unable to allocate the random character"...|121-68
30130|code|BL              sub_66B0|255-247-125-248
30134|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
30138|code|MOVS            R0, #0|0-32
30140|code|STR.W           R3, [R8,#0x2D8]|200-248-216-50
30144|code|POP.W           {R3-R11,PC}|189-232-248-143
30148|code|BLX             __errno_location|250-247-92-236
30152|code|LDR             R1, =(aNwipeRunmethod_0 - 0x75D0); "nwipe_runmethod"|17-73
30154|code|LDR             R2, =(aMalloc_0 - 0x75D2); "malloc"|18-74
30156|code|ADD             R1, PC; "nwipe_runmethod"|121-68
30158|code|ADD             R2, PC; "malloc"|122-68
30160|code|ADDS            R1, #0x44 ; 'D'|68-49
30162|code|LDR             R0, [R0]|0-104
30164|code|BL              sub_6A4C|255-247-58-250
30168|code|LDR             R1, =(aUnableToAlloca_4 - 0x75E0); "Unable to allocate the pattern array."|15-73
30170|code|MOVS            R0, #6|6-32
30172|code|ADD             R1, PC; "Unable to allocate the pattern array."|121-68
30174|code|BL              sub_66B0|255-247-103-248
30178|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
30182|code|STR.W           R3, [R8,#0x2D8]|200-248-216-50
30186|code|B               loc_74E8|125-231
30188|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7472|82-73-1-0
30192|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
30196|data|DCD aNwipeRunmethod_0 - 0x74BE; "nwipe_runmethod"|246-50-0-0
30200|data|DCD aRead_0 - 0x74C0; "read"|72-46-0-0
30204|data|DCD off_1C154 - 0x74D2; "DoD 5220.22-M"|130-76-1-0
30208|data|DCD aUnableToSeedTh_0 - 0x74D4; "Unable to seed the %s method."|232-54-0-0
30212|data|DCD aNwipeRunmethod_0 - 0x75A4; "nwipe_runmethod"|16-50-0-0
30216|data|DCD aMalloc_0 - 0x75A6; "malloc"|94-44-0-0
30220|data|DCD aUnableToAlloca_3 - 0x75B4; "Unable to allocate the random character"...|84-54-0-0
30224|data|DCD aNwipeRunmethod_0 - 0x75D0; "nwipe_runmethod"|228-49-0-0
30228|data|DCD aMalloc_0 - 0x75D2; "malloc"|50-44-0-0
30232|data|DCD aUnableToAlloca_4 - 0x75E0; "Unable to allocate the pattern array."|88-54-0-0
30236|code|LDR             R3, =(unk_1C01C - 0x7624)|17-75
30238|code|PUSH            {R4-R7,LR}|240-181
30240|code|ADD             R3, PC; unk_1C01C|123-68
30242|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x7630)|17-76
30244|code|ADD.W           R3, R3, #0x128|3-245-148-115
30248|code|LDR             R6, =(__stack_chk_guard_ptr - 0x1BDC4)|16-78
30250|code|MOV             R5, R0|5-70
30252|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
30254|code|SUB             SP, SP, #0x1C|135-176
30256|code|LDM             R3, {R0-R3}|15-203
30258|code|LDR             R6, [R4,R6]; __stack_chk_guard|166-89
30260|code|ADD             R4, SP, #0x30+var_2C|1-172
30262|code|LDR             R7, [R6]|55-104
30264|code|STM.W           R4, {R0-R3}|132-232-15-0
30268|code|MOV             R1, R4|33-70
30270|code|MOV             R0, R5|40-70
30272|code|STR             R7, [SP,#0x30+var_1C]|5-151
30274|code|BL              sub_6B0C|255-247-99-250
30278|code|LDR             R1, [SP,#0x30+var_1C]|5-153
30280|code|LDR             R2, [R6]|50-104
30282|code|MOVS            R3, #0|0-35
30284|code|STR.W           R3, [R5,#0x49C]|197-248-156-52
30288|code|CMP             R1, R2|145-66
30290|code|STR.W           R0, [R5,#0x2D8]|197-248-216-2
30294|code|BNE             loc_765E|2-209
30296|code|MOV             R0, R3|24-70
30298|code|ADD             SP, SP, #0x1C|7-176
30300|code|POP             {R4-R7,PC}|240-189
30302|code|BLX             __stack_chk_fail|250-247-66-235
30306|data|ALIGN 4|0-191
30308|data|DCD unk_1C01C - 0x7624|248-73-1-0
30312|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7630|148-71-1-0
30316|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
30320|code|LDR             R1, =(aProgramOptions - 0x767A); "Program options are set as follows..."|61-73
30322|code|MOVS            R0, #3|3-32
30324|code|PUSH            {R4,LR}|16-181
30326|code|ADD             R1, PC; "Program options are set as follows..."|121-68
30328|code|BL              sub_66B0|255-247-26-248
30332|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7686)|59-75
30334|code|LDR             R2, =(nwipe_options_ptr - 0x1BDC4)|60-74
30336|code|MOVS            R0, #3|3-32
30338|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
30340|code|LDR             R4, [R3,R2]; nwipe_options|156-88
30342|code|LDR             R2, [R4]|34-104
30344|code|CMP             R2, #0|0-42
30346|code|BEQ             loc_7702|58-208
30348|code|LDR             R1, =(aAutonukeIOn - 0x7692); "  autonuke = %i (on)"|57-73
30350|code|ADD             R1, PC; "  autonuke = %i (on)"|121-68
30352|code|BL              sub_66B0|255-247-14-248
30356|code|LDR             R3, [R4,#(dword_1C2D0 - 0x1C2CC)]|99-104
30358|code|CMP             R3, #0|0-43
30360|code|BNE             loc_7710|58-209
30362|code|LDR             R3, [R4,#(dword_1C2D4 - 0x1C2CC)]|163-104
30364|code|CMP             R3, #0|0-43
30366|code|BNE             loc_7720|63-209
30368|code|LDR             R3, [R4,#(dword_1C2D8 - 0x1C2CC)]|227-104
30370|code|CMP             R3, #0|0-43
30372|code|BNE             loc_7730|68-209
30374|code|LDR             R1, =(aBannerS - 0x76B0); "  banner   = %s"|52-73
30376|code|MOVS            R0, #3|3-32
30378|code|LDR             R2, [R4,#(dword_1C2DC - 0x1C2CC)]|34-105
30380|code|ADD             R1, PC; "  banner   = %s"|121-68
30382|code|BL              sub_66B0|254-247-255-255
30386|code|LDR             R0, [R4,#(dword_1C2E0 - 0x1C2CC)]|96-105
30388|code|BL              sub_6A70|255-247-220-249
30392|code|LDR             R1, =(aMethodS_0 - 0x76BE); "  method   = %s"|48-73
30394|code|ADD             R1, PC; "  method   = %s"|121-68
30396|code|MOV             R2, R0|2-70
30398|code|MOVS            R0, #3|3-32
30400|code|BL              sub_66B0|254-247-246-255
30404|code|LDR             R1, =(aRoundsI - 0x76D2); "  rounds   = %i"|46-73
30406|code|MOVW            R3, #(dword_1D2E8 - 0x1C2CC)|65-242-28-3
30410|code|MOVS            R0, #3|3-32
30412|code|LDR             R2, [R4,R3]|226-88
30414|code|ADD             R1, PC; "  rounds   = %i"|121-68
30416|code|BL              sub_66B0|254-247-238-255
30420|code|ADD.W           R3, R4, #0x1020|4-245-129-83
30424|code|LDR             R1, =(aSyncI - 0x76E2); "  sync     = %i"|42-73
30426|code|MOVS            R0, #3|3-32
30428|code|LDR             R2, [R3]|26-104
30430|code|ADD             R1, PC; "  sync     = %i"|121-68
30432|code|BL              sub_66B0|254-247-230-255
30436|code|MOVW            R3, #(dword_1D2F0 - 0x1C2CC)|65-242-36-3
30440|code|LDR             R2, [R4,R3]|226-88
30442|code|CMP             R2, #1|1-42
30444|code|BEQ             loc_775A|53-208
30446|code|BCC             loc_774A|44-211
30448|code|CMP             R2, #2|2-42
30450|code|BNE             loc_773C|35-209
30452|code|LDR             R1, =(aVerifyIAllPass - 0x7700); "  verify   = %i (all passes)"|36-73
30454|code|MOVS            R0, #3|3-32
30456|code|POP.W           {R4,LR}|189-232-16-64
30460|code|ADD             R1, PC; "  verify   = %i (all passes)"|121-68
30462|code|B.W             sub_66B0|254-247-215-191
30466|code|LDR             R1, =(aAutonukeIOff - 0x7708); "  autonuke = %i (off)"|34-73
30468|code|ADD             R1, PC; "  autonuke = %i (off)"|121-68
30470|code|BL              sub_66B0|254-247-211-255
30474|code|LDR             R3, [R4,#(dword_1C2D0 - 0x1C2CC)]|99-104
30476|code|CMP             R3, #0|0-43
30478|code|BEQ             loc_769A|196-208
30480|code|LDR             R1, =(aDoNotPerformAF_0 - 0x7718); "  do not perform a final blank pass"|31-73
30482|code|MOVS            R0, #3|3-32
30484|code|ADD             R1, PC; "  do not perform a final blank pass"|121-68
30486|code|BL              sub_66B0|254-247-203-255
30490|code|LDR             R3, [R4,#(dword_1C2D4 - 0x1C2CC)]|163-104
30492|code|CMP             R3, #0|0-43
30494|code|BEQ             loc_76A0|191-208
30496|code|LDR             R1, =(aDoNotWaitForAK - 0x7728); "  do not wait for a key before exiting"|28-73
30498|code|MOVS            R0, #3|3-32
30500|code|ADD             R1, PC; "  do not wait for a key before exiting"|121-68
30502|code|BL              sub_66B0|254-247-195-255
30506|code|LDR             R3, [R4,#(dword_1C2D8 - 0x1C2CC)]|227-104
30508|code|CMP             R3, #0|0-43
30510|code|BEQ             loc_76A6|186-208
30512|code|LDR             R1, =(aDoNotShowGuiIn - 0x7738); "  do not show GUI interface"|25-73
30514|code|MOVS            R0, #3|3-32
30516|code|ADD             R1, PC; "  do not show GUI interface"|121-68
30518|code|BL              sub_66B0|254-247-187-255
30522|code|B               loc_76A6|180-231
30524|code|LDR             R1, =(aVerifyI - 0x7748); "  verify   = %i"|23-73
30526|code|MOVS            R0, #3|3-32
30528|code|POP.W           {R4,LR}|189-232-16-64
30532|code|ADD             R1, PC; "  verify   = %i"|121-68
30534|code|B.W             sub_66B0|254-247-179-191
30538|code|LDR             R1, =(aVerifyIOff - 0x7754); "  verify   = %i (off)"|21-73
30540|code|MOVS            R0, #3|3-32
30542|code|MOVS            R2, #0|0-34
30544|code|ADD             R1, PC; "  verify   = %i (off)"|121-68
30546|code|POP.W           {R4,LR}|189-232-16-64
30550|code|B.W             sub_66B0|254-247-171-191
30554|code|LDR             R1, =(aVerifyILastPas - 0x7766); "  verify   = %i (last pass)"|18-73
30556|code|MOVS            R0, #3|3-32
30558|code|POP.W           {R4,LR}|189-232-16-64
30562|code|ADD             R1, PC; "  verify   = %i (last pass)"|121-68
30564|code|B.W             sub_66B0|254-247-164-191
30568|data|DCD aProgramOptions - 0x767A; "Program options are set as follows..."|170-54-0-0
30572|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7686|62-71-1-0
30576|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
30580|data|DCD aAutonukeIOn - 0x7692; "  autonuke = %i (on)"|186-54-0-0
30584|data|DCD aBannerS - 0x76B0; "  banner   = %s"|52-55-0-0
30588|data|DCD aMethodS_0 - 0x76BE; "  method   = %s"|54-55-0-0
30592|data|DCD aRoundsI - 0x76D2; "  rounds   = %i"|50-55-0-0
30596|data|DCD aSyncI - 0x76E2; "  sync     = %i"|50-55-0-0
30600|data|DCD aVerifyIAllPass - 0x7700; "  verify   = %i (all passes)"|88-55-0-0
30604|data|DCD aAutonukeIOff - 0x7708; "  autonuke = %i (off)"|92-54-0-0
30608|data|DCD aDoNotPerformAF_0 - 0x7718; "  do not perform a final blank pass"|100-54-0-0
30612|data|DCD aDoNotWaitForAK - 0x7728; "  do not wait for a key before exiting"|120-54-0-0
30616|data|DCD aDoNotShowGuiIn - 0x7738; "  do not show GUI interface"|144-54-0-0
30620|data|DCD aVerifyI - 0x7748; "  verify   = %i"|48-55-0-0
30624|data|DCD aVerifyIOff - 0x7754; "  verify   = %i (off)"|208-54-0-0
30628|data|DCD aVerifyILastPas - 0x7766; "  verify   = %i (last pass)"|214-54-0-0
30632|code|PUSH            {R3,LR}|8-181
30634|code|MOVS            R0, #1|1-32
30636|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x77B4)|57-75
30638|code|LDR             R2, =(program_name_ptr - 0x1BDC4)|58-74
30640|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
30642|code|LDR             R1, =(aUsageSOptionsD - 0x77BA); "Usage: %s [options] [device1] [device2]"...|58-73
30644|code|LDR             R3, [R3,R2]; program_name|155-88
30646|code|ADD             R1, PC; "Usage: %s [options] [device1] [device2]"...|121-68
30648|code|LDR             R2, [R3]; "nwipe"|26-104
30650|code|BLX             __printf_chk|250-247-140-235
30654|code|LDR             R0, =(aOptions - 0x77C4); "Options:"|56-72
30656|code|ADD             R0, PC; "Options:"|120-68
30658|code|BLX             puts|250-247-224-234
30662|code|LDR             R0, =(aVVersionPrints - 0x77CC); "  -V, --version           Prints the ve"...|55-72
30664|code|ADD             R0, PC; "  -V, --version           Prints the ve"...|120-68
30666|code|BLX             puts|250-247-220-234
30670|code|LDR             R0, =(aHHelpPrintsThi - 0x77D4); "  -h, --help              Prints this h"...|54-72
30672|code|ADD             R0, PC; "  -h, --help              Prints this h"...|120-68
30674|code|BLX             puts|250-247-216-234
30678|code|LDR             R0, =(aAutonukeIfNoDe - 0x77DC); "      --autonuke          If no devices"...|53-72
30680|code|ADD             R0, PC; "      --autonuke          If no devices"...|120-68
30682|code|BLX             puts|250-247-212-234
30686|code|LDR             R0, =(aDevicesImmedia - 0x77E4); "                          devices immed"...|52-72
30688|code|ADD             R0, PC; "                          devices immed"...|120-68
30690|code|BLX             puts|250-247-208-234
30694|code|LDR             R0, =(aThoseSpecified - 0x77EC); "                          those specifi"...|51-72
30696|code|ADD             R0, PC; "                          those specifi"...|120-68
30698|code|BLX             puts|250-247-204-234
30702|code|LDR             R0, =(aSyncOpenDevice - 0x77F4); "      --sync              Open devices "...|50-72
30704|code|ADD             R0, PC; "      --sync              Open devices "...|120-68
30706|code|BLX             puts|250-247-200-234
30710|code|LDR             R0, =(aVerifyTypeWhet - 0x77FC); "      --verify=TYPE       Whether to pe"...|49-72
30712|code|ADD             R0, PC; "      --verify=TYPE       Whether to pe"...|120-68
30714|code|BLX             puts|250-247-196-234
30718|code|LDR             R0, =(aOffDoNotVerify - 0x7804); "                          off   - Do no"...|48-72
30720|code|ADD             R0, PC; "                          off   - Do no"...|120-68
30722|code|BLX             puts|250-247-192-234
30726|code|LDR             R0, =(aLastVerifyAfte - 0x780C); "                          last  - Verif"...|47-72
30728|code|ADD             R0, PC; "                          last  - Verif"...|120-68
30730|code|BLX             puts|250-247-188-234
30734|code|LDR             R0, =(aAllVerifyEvery - 0x7814); "                          all   - Verif"...|46-72
30736|code|ADD             R0, PC; "                          all   - Verif"...|120-68
30738|code|BLX             puts|250-247-184-234
30742|code|LDR             R0, =(aMMethodMethodT - 0x781C); "  -m, --method=METHOD     The wiping me"...|45-72
30744|code|ADD             R0, PC; "  -m, --method=METHOD     The wiping me"...|120-68
30746|code|BLX             puts|250-247-180-234
30750|code|LDR             R0, =(aDod522022mDod7 - 0x7824); "                          dod522022m / "...|44-72
30752|code|ADD             R0, PC; "                          dod522022m / "...|120-68
30754|code|BLX             puts|250-247-176-234
30758|code|LDR             R0, =(aDodshortDod3pa - 0x782C); "                          dodshort / do"...|43-72
30760|code|ADD             R0, PC; "                          dodshort / do"...|120-68
30762|code|BLX             puts|250-247-172-234
30766|code|LDR             R0, =(aGutmannPeterGu - 0x7834); "                          gutmann      "...|42-72
30768|code|ADD             R0, PC; "                          gutmann      "...|120-68
30770|code|BLX             puts|250-247-168-234
30774|code|LDR             R0, =(aOps2RcmpTssitO - 0x783C); "                          ops2         "...|41-72
30776|code|ADD             R0, PC; "                          ops2         "...|120-68
30778|code|BLX             puts|250-247-164-234
30782|code|LDR             R0, =(aRandomPrngStre - 0x7844); "                          random / prng"...|40-72
30784|code|ADD             R0, PC; "                          random / prng"...|120-68
30786|code|BLX             puts|250-247-160-234
30790|code|LDR             R0, =(aZeroQuickOverw - 0x784C); "                          zero / quick "...|39-72
30792|code|ADD             R0, PC; "                          zero / quick "...|120-68
30794|code|BLX             puts|250-247-156-234
30798|code|LDR             R0, =(aLLogfileFileFi - 0x7854); "  -l, --logfile=FILE      Filename to l"...|38-72
30800|code|ADD             R0, PC; "  -l, --logfile=FILE      Filename to l"...|120-68
30802|code|BLX             puts|250-247-152-234
30806|code|LDR             R0, =(aPPrngMethodPrn - 0x785C); "  -p, --prng=METHOD       PRNG option ("...|37-72
30808|code|ADD             R0, PC; "  -p, --prng=METHOD       PRNG option ("...|120-68
30810|code|BLX             puts|250-247-148-234
30814|code|LDR             R0, =(aRRoundsNumNumb - 0x7864); "  -r, --rounds=NUM        Number of tim"...|36-72
30816|code|ADD             R0, PC; "  -r, --rounds=NUM        Number of tim"...|120-68
30818|code|BLX             puts|250-247-144-234
30822|code|LDR             R0, =(aNoblankDoNotBl - 0x786C); "      --noblank           Do not blank "...|35-72
30824|code|ADD             R0, PC; "      --noblank           Do not blank "...|120-68
30826|code|BLX             puts|250-247-140-234
30830|code|LDR             R0, =(aNowaitDoNotWai - 0x7874); "      --nowait            Do not wait f"...|34-72
30832|code|ADD             R0, PC; "      --nowait            Do not wait f"...|120-68
30834|code|BLX             puts|250-247-136-234
30838|code|LDR             R0, =(aNoguiDoNotShow - 0x787C); "      --nogui             Do not show t"...|33-72
30840|code|ADD             R0, PC; "      --nogui             Do not show t"...|120-68
30842|code|BLX             puts|250-247-132-234
30846|code|LDR             R0, =(aMustBeUsedWith - 0x7884); "                          Must be used "...|32-72
30848|code|ADD             R0, PC; "                          Must be used "...|120-68
30850|code|BLX             puts|250-247-128-234
30854|code|LDR             R0, =(aErrorUnknownVe+0x28 - 0x788C); ""|31-72
30856|code|ADD             R0, PC; "" ; s|120-68
30858|code|BLX             puts|250-247-124-234
30862|code|MOVS            R0, #0; status|0-32
30864|code|BLX             exit|250-247-198-234
30868|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x77B4|16-70-1-0
30872|data|DCD program_name_ptr - 0x1BDC4|4-2-0-0
30876|data|DCD aUsageSOptionsD - 0x77BA; "Usage: %s [options] [device1] [device2]"...|206-54-0-0
30880|data|DCD aOptions - 0x77C4; "Options:"|244-54-0-0
30884|data|DCD aVVersionPrints - 0x77CC; "  -V, --version           Prints the ve"...|248-54-0-0
30888|data|DCD aHHelpPrintsThi - 0x77D4; "  -h, --help              Prints this h"...|36-55-0-0
30892|data|DCD aAutonukeIfNoDe - 0x77DC; "      --autonuke          If no devices"...|72-55-0-0
30896|data|DCD aDevicesImmedia - 0x77E4; "                          devices immed"...|164-55-0-0
30900|data|DCD aThoseSpecified - 0x77EC; "                          those specifi"...|0-56-0-0
30904|data|DCD aSyncOpenDevice - 0x77F4; "      --sync              Open devices "...|56-56-0-0
30908|data|DCD aVerifyTypeWhet - 0x77FC; "      --verify=TYPE       Whether to pe"...|100-56-0-0
30912|data|DCD aOffDoNotVerify - 0x7804; "                          off   - Do no"...|180-56-0-0
30916|data|DCD aLastVerifyAfte - 0x780C; "                          last  - Verif"...|220-56-0-0
30920|data|DCD aAllVerifyEvery - 0x7814; "                          all   - Verif"...|20-57-0-0
30924|data|DCD aMMethodMethodT - 0x781C; "  -m, --method=METHOD     The wiping me"...|64-57-0-0
30928|data|DCD aDod522022mDod7 - 0x7824; "                          dod522022m / "...|152-57-0-0
30932|data|DCD aDodshortDod3pa - 0x782C; "                          dodshort / do"...|224-57-0-0
30936|data|DCD aGutmannPeterGu - 0x7834; "                          gutmann      "...|32-58-0-0
30940|data|DCD aOps2RcmpTssitO - 0x783C; "                          ops2         "...|104-58-0-0
30944|data|DCD aRandomPrngStre - 0x7844; "                          random / prng"...|168-58-0-0
30948|data|DCD aZeroQuickOverw - 0x784C; "                          zero / quick "...|224-58-0-0
30952|data|DCD aLLogfileFileFi - 0x7854; "  -l, --logfile=FILE      Filename to l"...|32-59-0-0
30956|data|DCD aPPrngMethodPrn - 0x785C; "  -p, --prng=METHOD       PRNG option ("...|88-59-0-0
30960|data|DCD aRRoundsNumNumb - 0x7864; "  -r, --rounds=NUM        Number of tim"...|144-59-0-0
30964|data|DCD aNoblankDoNotBl - 0x786C; "      --noblank           Do not blank "...|236-59-0-0
30968|data|DCD aNowaitDoNotWai - 0x7874; "      --nowait            Do not wait f"...|72-60-0-0
30972|data|DCD aNoguiDoNotShow - 0x787C; "      --nogui             Do not show t"...|148-60-0-0
30976|data|DCD aMustBeUsedWith - 0x7884; "                          Must be used "...|240-60-0-0
30980|data|DCD aErrorUnknownVe+0x28 - 0x788C; ""|216-61-0-0
30984|code|PUSH.W          {R4-R11,LR}|45-233-240-79
30988|code|SUB             SP, SP, #0x54|149-176
30990|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x791A)|251-77
30992|code|MOV             R11, R0|131-70
30994|code|LDR             R2, =(__stack_chk_guard_ptr - 0x1BDC4)|251-74
30996|code|MOV             R10, R1|138-70
30998|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
31000|code|LDR             R3, =(aVhlHmPR - 0x7926); "Vhl:hm:p:r:"|250-75
31002|code|ADD             R6, SP, #0x78+var_38|16-174
31004|code|LDR.W           R8, =(off_1C170 - 0x7928); "autonuke"|223-248-232-131
31008|code|LDR             R2, [R5,R2]; __stack_chk_guard|170-88
31010|code|ADD             R3, PC; "Vhl:hm:p:r:"|123-68
31012|code|ADD             R8, PC; off_1C170|248-68
31014|code|ADD.W           R9, SP, #0x78+var_3C|13-241-60-9
31018|code|MOV             R4, R2|20-70
31020|code|STR             R2, [SP,#0x78+var_54]|9-146
31022|code|LDM.W           R3, {R0-R2}; "Vhl:hm:p:r:"|147-232-7-0
31026|code|LDR             R3, [R4]|35-104
31028|code|LDR             R4, =(aDod522022m - 0x793A); "dod522022m"|245-76
31030|code|ADD             R4, PC; "dod522022m"|124-68
31032|code|STR             R4, [SP,#0x78+s2]|3-148
31034|code|LDR             R4, =(aDodshort - 0x7946); "dodshort"|245-76
31036|code|STM.W           R6, {R0-R2}|134-232-7-0
31040|code|MOVS            R0, #0x51 ; 'Q'; size|81-32
31042|code|ADD             R4, PC; "dodshort"|124-68
31044|code|STR             R3, [SP,#0x78+var_2C]|19-147
31046|code|STR             R4, [SP,#0x78+var_5C]|7-148
31048|code|BLX             malloc|250-247-34-234
31052|code|LDR             R1, =(nwipe_options_ptr - 0x1BDC4)|241-73
31054|code|MOVS            R2, #0x51 ; 'Q'; n|81-34
31056|code|LDR             R4, =(aDod3pass - 0x7958); "dod3pass"|241-76
31058|code|LDR             R3, =(program_name_ptr - 0x1BDC4)|242-75
31060|code|ADD             R4, PC; "dod3pass"|124-68
31062|code|STR             R4, [SP,#0x78+var_50]|10-148
31064|code|LDR             R4, [R5,R1]; nwipe_options|108-88
31066|code|LDR             R1, =(aGutmann - 0x7960); "gutmann"|241-73
31068|code|ADD             R1, PC; "gutmann"|121-68
31070|code|STR             R1, [SP,#0x78+var_4C]|11-145
31072|code|STR             R0, [R4,#(dword_1C2DC - 0x1C2CC)]|32-97
31074|code|MOV             R7, R0|7-70
31076|code|LDR             R3, [R5,R3]; program_name|235-88
31078|code|LDR             R1, [R3]; "nwipe"|25-104
31080|code|STR             R3, [SP,#0x78+var_68]|4-147
31082|code|BLX             strncpy|250-247-156-234
31086|code|MOV             R0, R7; s|56-70
31088|code|BLX             strlen|250-247-104-234
31092|code|LDR             R1, =(asc_964C+0x2C - 0x797C); " "|235-73
31094|code|LDR             R3, =(aOps2 - 0x797E); "ops2"|236-75
31096|code|ADD             R1, PC; " " ; src|121-68
31098|code|ADD             R3, PC; "ops2"|123-68
31100|code|STR             R3, [SP,#0x78+var_48]|12-147
31102|code|RSB.W           R2, R0, #0x50 ; 'P'; n|192-241-80-2
31106|code|MOV             R0, R7; dest|56-70
31108|code|BLX             strncat|250-247-44-235
31112|code|MOV             R0, R7; s|56-70
31114|code|BLX             strlen|250-247-92-234
31118|code|LDR             R3, =(version_string_ptr - 0x1BDC4)|231-75
31120|code|LDR             R3, [R5,R3]; version_string|235-88
31122|code|LDR             R1, [R3]; "0.17"|25-104
31124|code|STR             R3, [SP,#0x78+var_64]|5-147
31126|code|RSB.W           R2, R0, #0x50 ; 'P'; n|192-241-80-2
31130|code|MOV             R0, R7; dest|56-70
31132|code|BLX             strncat|250-247-32-235
31136|code|LDR             R7, [R4,#(dword_1C2DC - 0x1C2CC)]|39-105
31138|code|MOV             R0, R7; s|56-70
31140|code|BLX             strlen|250-247-78-234
31144|code|LDR             R1, =(aBasedOnDbanSDw - 0x79AE); " (based on DBAN's dwipe - Darik's Wipe)"|225-73
31146|code|ADD             R1, PC; " (based on DBAN's dwipe - Darik's Wipe)"|121-68
31148|code|RSB.W           R2, R0, #0x50 ; 'P'; n|192-241-80-2
31152|code|MOV             R0, R7; dest|56-70
31154|code|BLX             strncat|250-247-22-235
31158|code|LDR             R2, =(nwipe_dodshort_ptr - 0x1BDC4)|223-74
31160|code|MOVS            R1, #0; c|0-33
31162|code|LDR             R3, =(nwipe_twister_ptr - 0x1BDC4)|223-75
31164|code|STR             R1, [R4]|33-96
31166|code|MOVW            R0, #(dword_1D2E4 - 0x1C2CC)|65-242-24-0
31170|code|LDR             R2, [R5,R2]; nwipe_dodshort|170-88
31172|code|MOV             R7, R2|23-70
31174|code|STR             R2, [SP,#0x78+var_58]|8-146
31176|code|STR             R7, [R4,#(dword_1C2E0 - 0x1C2CC)]|103-97
31178|code|MOVW            R2, #(dword_1D2E8 - 0x1C2CC)|65-242-28-2
31182|code|LDR             R3, [R5,R3]; nwipe_twister|235-88
31184|code|ADD.W           R7, R4, #0x1020|4-245-129-87
31188|code|STR             R1, [R4,#(dword_1C2D0 - 0x1C2CC)]|97-96
31190|code|STR             R1, [R4,#(dword_1C2D4 - 0x1C2CC)]|161-96
31192|code|STR             R3, [R4,R0]|35-80
31194|code|ADD.W           R0, R4, #0x18; s|4-241-24-0
31198|code|STR             R3, [SP,#0x78+var_60]|6-147
31200|code|MOVS            R3, #1|1-35
31202|code|STR             R3, [R4,R2]|163-80
31204|code|MOVW            R2, #(dword_1D2F0 - 0x1C2CC)|65-242-36-2
31208|code|STR             R3, [R4,R2]|163-80
31210|code|MOV.W           R2, #0x1000; n|79-244-128-82
31214|code|STR             R1, [R4,#(dword_1C2D8 - 0x1C2CC)]|225-96
31216|code|STR             R1, [R7]|57-96
31218|code|BLX             memset|250-247-82-234
31222|code|STR.W           R9, [SP,#0x78+longind]; longind|205-248-0-144
31226|code|MOV             R0, R11; argc|88-70
31228|code|MOV             R1, R10; argv|81-70
31230|code|MOV             R2, R6; shortopts|50-70
31232|code|MOV             R3, R8; longopts|67-70
31234|code|BLX             getopt_long|250-247-2-234
31238|code|CMP             R0, #0|0-40
31240|code|BLT.W           loc_7B94|192-242-196-128
31244|code|CMP             R0, #0x6C ; 'l'|108-40
31246|code|BEQ.W           loc_7B1E|0-240-134-128
31250|code|BGT             loc_7A24|7-220
31252|code|CMP             R0, #0x56 ; 'V'|86-40
31254|code|BEQ             loc_7AC2|84-208
31256|code|CMP             R0, #0x68 ; 'h'|104-40
31258|code|BEQ             loc_7A20|1-208
31260|code|CMP             R0, #0|0-40
31262|code|BEQ             loc_7A98|59-208
31264|code|BL              sub_77A8|255-247-194-254
31268|code|CMP             R0, #0x70 ; 'p'|112-40
31270|code|BEQ             loc_7ADA|88-208
31272|code|CMP             R0, #0x72 ; 'r'|114-40
31274|code|BEQ             loc_7A60|25-208
31276|code|CMP             R0, #0x6D ; 'm'|109-40
31278|code|BNE             loc_7A20|247-209
31280|code|LDR             R3, =(optarg_ptr - 0x1BDC4)|194-75
31282|code|LDR             R1, [SP,#0x78+s2]; s2|3-153
31284|code|LDR             R3, [R5,R3]; optarg|235-88
31286|code|LDR             R7, [R3]|31-104
31288|code|MOV             R0, R7; s1|56-70
31290|code|BLX             strcmp|250-247-196-232
31294|code|CBZ             R0, loc_7A58|88-177
31296|code|LDRB            R3, [R7]|59-120
31298|code|CMP             R3, #0x64 ; 'd'|100-43
31300|code|BNE             loc_7B46|127-209
31302|code|LDRB            R3, [R7,#1]|123-120
31304|code|CMP             R3, #0x6F ; 'o'|111-43
31306|code|BNE             loc_7B46|124-209
31308|code|LDRB            R3, [R7,#2]|187-120
31310|code|CMP             R3, #0x64 ; 'd'|100-43
31312|code|BNE             loc_7B46|121-209
31314|code|LDRB            R3, [R7,#3]|251-120
31316|code|CMP             R3, #0|0-43
31318|code|BNE             loc_7B46|118-209
31320|code|LDR             R3, =(nwipe_dod522022m_ptr - 0x1BDC4)|185-75
31322|code|LDR             R3, [R5,R3]; nwipe_dod522022m|235-88
31324|code|STR             R3, [R4,#(dword_1C2E0 - 0x1C2CC)]|99-97
31326|code|B               loc_79F6|202-231
31328|code|LDR             R3, =(optarg_ptr - 0x1BDC4)|182-75
31330|code|ADD.W           R7, R4, #0x1000|4-245-128-87
31334|code|ADDS            R7, #0x1C|28-55
31336|code|LDR             R1, =(aSyncI+0xC - 0x7A70); " %i"|182-73
31338|code|LDR             R3, [R5,R3]; optarg|235-88
31340|code|ADD             R1, PC; " %i"|121-68
31342|code|MOV             R2, R7|58-70
31344|code|LDR             R0, [R3]|24-104
31346|code|BLX             __isoc99_sscanf|250-247-12-234
31350|code|CMP             R0, #1|1-40
31352|code|BNE             loc_7A80|2-209
31354|code|LDR             R3, [R7]|59-104
31356|code|CMP             R3, #0|0-43
31358|code|BGT             loc_79F6|186-220
31360|code|LDR             R3, =(stderr_ptr - 0x1BDC4)|177-75
31362|code|MOVS            R1, #1; size|1-33
31364|code|LDR             R0, =(aErrorTheRounds - 0x7A8E); "Error: The rounds argument must be a po"...|177-72
31366|code|MOVS            R2, #0x36 ; '6'; n|54-34
31368|code|LDR             R3, [R5,R3]; stderr|235-88
31370|code|ADD             R0, PC; "Error: The rounds argument must be a po"...|120-68
31372|code|LDR             R3, [R3]; s|27-104
31374|code|BLX             fwrite|250-247-98-233
31378|code|MOVS            R0, #0x16; status|22-32
31380|code|BLX             exit|250-247-196-233
31384|code|LDR             R3, [SP,#0x78+var_3C]|15-155
31386|code|LDR             R1, =(aAutonuke - 0x7AA2); "autonuke"|173-73
31388|code|LSLS            R3, R3, #4|27-1
31390|code|ADD             R1, PC; "autonuke"|121-68
31392|code|LDR.W           R7, [R8,R3]|88-248-3-112
31396|code|MOV             R0, R7; s1|56-70
31398|code|BLX             strcmp|250-247-142-232
31402|code|CMP             R0, #0|0-40
31404|code|BEQ             loc_7B40|72-208
31406|code|LDR             R1, =(aNoblank - 0x7AB6); "noblank"|169-73
31408|code|MOV             R0, R7; s1|56-70
31410|code|ADD             R1, PC; "noblank"|121-68
31412|code|BLX             strcmp|250-247-134-232
31416|code|CMP             R0, #0|0-40
31418|code|BNE             loc_7B74|91-209
31420|code|MOVS            R3, #1|1-35
31422|code|STR             R3, [R4,#(dword_1C2D0 - 0x1C2CC)]|99-96
31424|code|B               loc_79F6|153-231
31426|code|LDR             R3, [SP,#0x78+var_68]|4-155
31428|code|MOVS            R0, #1|1-32
31430|code|LDR             R1, =(aSVersionS - 0x7ACE); "%s version %s\n"|164-73
31432|code|LDR             R2, [R3]|26-104
31434|code|ADD             R1, PC; "%s version %s\n"|121-68
31436|code|LDR             R3, [SP,#0x78+var_64]|5-155
31438|code|LDR             R3, [R3]|27-104
31440|code|BLX             __printf_chk|250-247-0-234
31444|code|MOVS            R0, #0; status|0-32
31446|code|BLX             exit|250-247-164-233
31450|code|LDR             R3, =(optarg_ptr - 0x1BDC4)|152-75
31452|code|LDR             R1, =(aMersenne - 0x7AE4); "mersenne"|159-73
31454|code|LDR             R3, [R5,R3]; optarg|235-88
31456|code|ADD             R1, PC; "mersenne"|121-68
31458|code|LDR             R7, [R3]|31-104
31460|code|MOV             R0, R7; s1|56-70
31462|code|BLX             strcmp|250-247-110-232
31466|code|CBZ             R0, loc_7B14|152-177
31468|code|LDR             R1, =(aTwister - 0x7AF4); "twister"|156-73
31470|code|MOV             R0, R7; s1|56-70
31472|code|ADD             R1, PC; "twister"|121-68
31474|code|BLX             strcmp|250-247-104-232
31478|code|CBZ             R0, loc_7B14|104-177
31480|code|LDR             R1, =(aIsaac - 0x7B00); "isaac"|154-73
31482|code|MOV             R0, R7; s1|56-70
31484|code|ADD             R1, PC; "isaac"|121-68
31486|code|BLX             strcmp|250-247-98-232
31490|code|CMP             R0, #0|0-40
31492|code|BNE.W           loc_7CE2|64-240-237-128
31496|code|LDR             R2, =(nwipe_isaac_ptr - 0x1BDC4)|151-74
31498|code|ADD.W           R3, R4, #0x1000|4-245-128-83
31502|code|LDR             R2, [R5,R2]; nwipe_isaac|170-88
31504|code|STR             R2, [R3,#(dword_1D2E4 - 0x1D2CC)]|154-97
31506|code|B               loc_79F6|112-231
31508|code|LDR             R2, [SP,#0x78+var_60]|6-154
31510|code|ADD.W           R3, R4, #0x1000|4-245-128-83
31514|code|STR             R2, [R3,#(dword_1D2E4 - 0x1D2CC)]|154-97
31516|code|B               loc_79F6|107-231
31518|code|LDR             R3, =(optarg_ptr - 0x1BDC4)|135-75
31520|code|LDR             R3, [R5,R3]; optarg|235-88
31522|code|LDR             R7, [R3]|31-104
31524|code|MOV             R0, R7; s|56-70
31526|code|BLX             strlen|250-247-142-233
31530|code|MOV             R1, R7; src|57-70
31532|code|MOV.W           R2, #0x1000; n|79-244-128-82
31536|code|MOVS            R7, #0|0-39
31538|code|ADDS            R3, R4, R0|35-24
31540|code|ADD.W           R0, R4, #0x18; dest|4-241-24-0
31544|code|STRB            R7, [R3,#0x18]|31-118
31546|code|BLX             strncpy|250-247-180-233
31550|code|B               loc_79F6|90-231
31552|code|MOVS            R3, #1|1-35
31554|code|STR             R3, [R4]|35-96
31556|code|B               loc_79F6|87-231
31558|code|MOV             R0, R7; s1|56-70
31560|code|LDR             R1, [SP,#0x78+var_5C]; s2|7-153
31562|code|BLX             strcmp|250-247-60-232
31566|code|CBZ             R0, loc_7B6E|112-177
31568|code|MOV             R0, R7; s1|56-70
31570|code|LDR             R1, [SP,#0x78+var_50]; s2|10-153
31572|code|BLX             strcmp|250-247-54-232
31576|code|CBZ             R0, loc_7B6E|72-177
31578|code|MOV             R0, R7; s1|56-70
31580|code|LDR             R1, [SP,#0x78+var_4C]; s2|11-153
31582|code|BLX             strcmp|250-247-50-232
31586|code|CMP             R0, #0|0-40
31588|code|BNE             loc_7BC8|48-209
31590|code|LDR             R3, =(nwipe_gutmann_ptr - 0x1BDC4)|129-75
31592|code|LDR             R3, [R5,R3]; nwipe_gutmann|235-88
31594|code|STR             R3, [R4,#(dword_1C2E0 - 0x1C2CC)]|99-97
31596|code|B               loc_79F6|67-231
31598|code|LDR             R3, [SP,#0x78+var_58]|8-155
31600|code|STR             R3, [R4,#(dword_1C2E0 - 0x1C2CC)]|99-97
31602|code|B               loc_79F6|64-231
31604|code|LDR             R1, =(aNowait - 0x7B7C); "nowait"|126-73
31606|code|MOV             R0, R7; s1|56-70
31608|code|ADD             R1, PC; "nowait"|121-68
31610|code|BLX             strcmp|250-247-36-232
31614|code|CBZ             R0, loc_7BAC|168-177
31616|code|LDR             R1, =(aNogui - 0x7B88); "nogui"|124-73
31618|code|MOV             R0, R7; s1|56-70
31620|code|ADD             R1, PC; "nogui"|121-68
31622|code|BLX             strcmp|250-247-30-232
31626|code|CBNZ            R0, loc_7BB2|144-185
31628|code|MOVS            R3, #1|1-35
31630|code|STR             R3, [R4,#(dword_1C2D8 - 0x1C2CC)]|227-96
31632|code|STR             R3, [R4,#(dword_1C2D4 - 0x1C2CC)]|163-96
31634|code|B               loc_79F6|48-231
31636|code|LDR             R2, [SP,#0x78+var_54]|9-154
31638|code|LDR             R3, =(optind_ptr - 0x1BDC4)|120-75
31640|code|LDR             R1, [SP,#0x78+var_2C]|19-153
31642|code|LDR             R2, [R2]|18-104
31644|code|LDR             R3, [R5,R3]; optind|235-88
31646|code|CMP             R1, R2|145-66
31648|code|LDR             R0, [R3]|24-104
31650|code|BNE.W           loc_7CDE|64-240-156-128
31654|code|ADD             SP, SP, #0x54 ; 'T'|21-176
31656|code|POP.W           {R4-R11,PC}|189-232-240-143
31660|code|MOVS            R3, #1|1-35
31662|code|STR             R3, [R4,#(dword_1C2D4 - 0x1C2CC)]|163-96
31664|code|B               loc_79F6|33-231
31666|code|LDR             R1, =(aSync - 0x7BBA); "sync"|114-73
31668|code|MOV             R0, R7; s1|56-70
31670|code|ADD             R1, PC; "sync"|121-68
31672|code|BLX             strcmp|250-247-4-232
31676|code|CBNZ            R0, loc_7BDA|104-185
31678|code|ADD.W           R3, R4, #0x1020|4-245-129-83
31682|code|MOVS            R2, #1|1-34
31684|code|STR             R2, [R3]|26-96
31686|code|B               loc_79F6|22-231
31688|code|MOV             R0, R7; s1|56-70
31690|code|LDR             R1, [SP,#0x78+var_48]; s2|12-153
31692|code|BLX             strcmp|249-247-250-239
31696|code|CBNZ            R0, loc_7C06|200-185
31698|code|LDR             R3, =(nwipe_ops2_ptr - 0x1BDC4)|107-75
31700|code|LDR             R3, [R5,R3]; nwipe_ops2|235-88
31702|code|STR             R3, [R4,#(dword_1C2E0 - 0x1C2CC)]|99-97
31704|code|B               loc_79F6|13-231
31706|code|LDR             R1, =(aVerify_0 - 0x7BE2); "verify"|106-73
31708|code|MOV             R0, R7; s1|56-70
31710|code|ADD             R1, PC; "verify"|121-68
31712|code|BLX             strcmp|249-247-240-239
31716|code|CMP             R0, #0|0-40
31718|code|BNE.W           loc_7A30|127-244-35-175
31722|code|LDR             R3, =(optarg_ptr - 0x1BDC4)|84-75
31724|code|LDR             R3, [R5,R3]; optarg|235-88
31726|code|LDR             R7, [R3]|31-104
31728|code|LDRB            R3, [R7]|59-120
31730|code|CMP             R3, #0x30 ; '0'|48-43
31732|code|BNE             loc_7C54|46-209
31734|code|LDRB            R2, [R7,#1]|122-120
31736|code|CMP             R2, #0|0-42
31738|code|BNE             loc_7C7C|63-209
31740|code|ADD.W           R3, R4, #0x1020|4-245-129-83
31744|code|MOVS            R2, #0|0-34
31746|code|STR             R2, [R3,#(dword_1D2F0 - 0x1D2EC)]|90-96
31748|code|B               loc_79F6|247-230
31750|code|LDR             R1, =(aRandom - 0x7C0E); "random"|96-73
31752|code|MOV             R0, R7; s1|56-70
31754|code|ADD             R1, PC; "random"|121-68
31756|code|BLX             strcmp|249-247-218-239
31760|code|CBZ             R0, loc_7C4C|224-177
31762|code|LDR             R1, =(aPrng - 0x7C1A); "prng"|94-73
31764|code|MOV             R0, R7; s1|56-70
31766|code|ADD             R1, PC; "prng"|121-68
31768|code|BLX             strcmp|249-247-212-239
31772|code|CBZ             R0, loc_7C4C|176-177
31774|code|LDR             R1, =(aStream - 0x7C26); "stream"|92-73
31776|code|MOV             R0, R7; s1|56-70
31778|code|ADD             R1, PC; "stream"|121-68
31780|code|BLX             strcmp|249-247-206-239
31784|code|CBZ             R0, loc_7C4C|128-177
31786|code|LDR             R1, =(aZero - 0x7C32); "zero"|90-73
31788|code|MOV             R0, R7; s1|56-70
31790|code|ADD             R1, PC; "zero"|121-68
31792|code|BLX             strcmp|249-247-200-239
31796|code|CBZ             R0, loc_7C44|48-177
31798|code|LDR             R1, =(aQuick - 0x7C3E); "quick"|88-73
31800|code|MOV             R0, R7; s1|56-70
31802|code|ADD             R1, PC; "quick"|121-68
31804|code|BLX             strcmp|249-247-194-239
31808|code|CMP             R0, #0|0-40
31810|code|BNE             loc_7CEE|84-209
31812|code|LDR             R3, =(nwipe_zero_ptr - 0x1BDC4)|85-75
31814|code|LDR             R3, [R5,R3]; nwipe_zero|235-88
31816|code|STR             R3, [R4,#(dword_1C2E0 - 0x1C2CC)]|99-97
31818|code|B               loc_79F6|212-230
31820|code|LDR             R3, =(nwipe_random_ptr - 0x1BDC4)|84-75
31822|code|LDR             R3, [R5,R3]; nwipe_random|235-88
31824|code|STR             R3, [R4,#(dword_1C2E0 - 0x1C2CC)]|99-97
31826|code|B               loc_79F6|208-230
31828|code|CMP             R3, #0x6F ; 'o'|111-43
31830|code|BEQ             loc_7C6A|8-208
31832|code|CMP             R3, #0x31 ; '1'|49-43
31834|code|BNE             loc_7C7C|15-209
31836|code|LDRB            R3, [R7,#1]|123-120
31838|code|CBNZ            R3, loc_7CA0|251-185
31840|code|ADD.W           R3, R4, #0x1020|4-245-129-83
31844|code|MOVS            R2, #1|1-34
31846|code|STR             R2, [R3,#(dword_1D2F0 - 0x1D2EC)]|90-96
31848|code|B               loc_79F6|197-230
31850|code|LDRB            R2, [R7,#1]|122-120
31852|code|CMP             R2, #0x66 ; 'f'|102-42
31854|code|BNE             loc_7C7C|5-209
31856|code|LDRB            R2, [R7,#2]|186-120
31858|code|CMP             R2, #0x66 ; 'f'|102-42
31860|code|BNE             loc_7C7C|2-209
31862|code|LDRB            R2, [R7,#3]|250-120
31864|code|CMP             R2, #0|0-42
31866|code|BEQ             loc_7BFC|191-208
31868|code|LDR             R1, =(aLast - 0x7C86); "last"|73-73
31870|code|MOV             R0, R7; s1|56-70
31872|code|STR             R3, [SP,#0x78+var_44]|13-147
31874|code|ADD             R1, PC; "last"|121-68
31876|code|BLX             strcmp|249-247-158-239
31880|code|LDR             R3, [SP,#0x78+var_44]|13-155
31882|code|CMP             R0, #0|0-40
31884|code|BEQ             loc_7C60|232-208
31886|code|CMP             R3, #0x32 ; '2'|50-43
31888|code|BNE             loc_7CC6|25-209
31890|code|LDRB            R3, [R7,#1]|123-120
31892|code|CBNZ            R3, loc_7CAE|91-185
31894|code|ADD.W           R3, R4, #0x1020|4-245-129-83
31898|code|MOVS            R2, #2|2-34
31900|code|STR             R2, [R3,#(dword_1D2F0 - 0x1D2EC)]|90-96
31902|code|B               loc_79F6|170-230
31904|code|LDR             R1, =(aLast - 0x7CA8); "last"|65-73
31906|code|MOV             R0, R7; s1|56-70
31908|code|ADD             R1, PC; "last"|121-68
31910|code|BLX             strcmp|249-247-142-239
31914|code|CMP             R0, #0|0-40
31916|code|BEQ             loc_7C60|216-208
31918|code|LDR             R2, =(aErrorUnknownVe - 0x7CBA); "Error: Unknown verification level '%s'."...|63-74
31920|code|MOV             R3, R7|59-70
31922|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|37-72
31924|code|MOVS            R1, #1|1-33
31926|code|ADD             R2, PC; "Error: Unknown verification level '%s'."...|122-68
31928|code|LDR             R0, [R5,R0]; stderr|40-88
31930|code|LDR             R0, [R0]|0-104
31932|code|BLX             __fprintf_chk|250-247-46-233
31936|code|MOVS            R0, #0x16; status|22-32
31938|code|BLX             exit|250-247-174-232
31942|code|CMP             R3, #0x61 ; 'a'|97-43
31944|code|BNE             loc_7CAE|241-209
31946|code|LDRB            R3, [R7,#1]|123-120
31948|code|CMP             R3, #0x6C ; 'l'|108-43
31950|code|BNE             loc_7CAE|238-209
31952|code|LDRB            R3, [R7,#2]|187-120
31954|code|CMP             R3, #0x6C ; 'l'|108-43
31956|code|BNE             loc_7CAE|235-209
31958|code|LDRB            R3, [R7,#3]|251-120
31960|code|CMP             R3, #0|0-43
31962|code|BEQ             loc_7C96|220-208
31964|code|B               loc_7CAE|231-231
31966|code|BLX             __stack_chk_fail|250-247-2-232
31970|code|LDR             R2, =(aErrorUnknownPr - 0x7CEE); "Error: Unknown prng '%s'.\n"|51-74
31972|code|MOV             R3, R7|59-70
31974|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|24-72
31976|code|MOVS            R1, #1|1-33
31978|code|ADD             R2, PC; "Error: Unknown prng '%s'.\n"|122-68
31980|code|B               loc_7CB8|228-231
31982|code|LDR             R2, =(aErrorUnknownWi - 0x7CFA); "Error: Unknown wipe method '%s'.\n"|49-74
31984|code|MOV             R3, R7|59-70
31986|code|LDR             R0, =(stderr_ptr - 0x1BDC4)|21-72
31988|code|MOVS            R1, #1|1-33
31990|code|ADD             R2, PC; "Error: Unknown wipe method '%s'.\n"|122-68
31992|code|B               loc_7CB8|222-231
31994|data|ALIGN 4|0-191
31996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x791A|170-68-1-0
32000|data|DCD __stack_chk_guard_ptr - 0x1BDC4|172-1-0-0
32004|data|DCD aVhlHmPR - 0x7926; "Vhl:hm:p:r:"|66-62-0-0
32008|data|DCD off_1C170 - 0x7928; "autonuke"|72-72-1-0
32012|data|DCD aDod522022m - 0x793A; "dod522022m"|46-61-0-0
32016|data|DCD aDodshort - 0x7946; "dodshort"|46-61-0-0
32020|data|DCD nwipe_options_ptr - 0x1BDC4|192-1-0-0
32024|data|DCD aDod3pass - 0x7958; "dod3pass"|40-61-0-0
32028|data|DCD program_name_ptr - 0x1BDC4|4-2-0-0
32032|data|DCD aGutmann - 0x7960; "gutmann"|44-61-0-0
32036|data|DCD asc_964C+0x2C - 0x797C; " "|252-28-0-0
32040|data|DCD aOps2 - 0x797E; "ops2"|22-61-0-0
32044|data|DCD version_string_ptr - 0x1BDC4|20-2-0-0
32048|data|DCD aBasedOnDbanSDw - 0x79AE; " (based on DBAN's dwipe - Darik's Wipe)"|42-60-0-0
32052|data|DCD nwipe_dodshort_ptr - 0x1BDC4|48-2-0-0
32056|data|DCD nwipe_twister_ptr - 0x1BDC4|216-1-0-0
32060|data|DCD optarg_ptr - 0x1BDC4|44-2-0-0
32064|data|DCD nwipe_dod522022m_ptr - 0x1BDC4|168-1-0-0
32068|data|DCD aSyncI+0xC - 0x7A70; " %i"|176-51-0-0
32072|data|DCD stderr_ptr - 0x1BDC4|200-1-0-0
32076|data|DCD aErrorTheRounds - 0x7A8E; "Error: The rounds argument must be a po"...|146-60-0-0
32080|data|DCD aAutonuke - 0x7AA2; "autonuke"|94-59-0-0
32084|data|DCD aNoblank - 0x7AB6; "noblank"|86-59-0-0
32088|data|DCD aSVersionS - 0x7ACE; "%s version %s\n"|138-60-0-0
32092|data|DCD aMersenne - 0x7AE4; "mersenne"|4-60-0-0
32096|data|DCD aTwister - 0x7AF4; "twister"|0-60-0-0
32100|data|DCD aIsaac - 0x7B00; "isaac"|252-59-0-0
32104|data|DCD nwipe_isaac_ptr - 0x1BDC4|56-2-0-0
32108|data|DCD nwipe_gutmann_ptr - 0x1BDC4|208-1-0-0
32112|data|DCD aNowait - 0x7B7C; "nowait"|152-58-0-0
32116|data|DCD aNogui - 0x7B88; "nogui"|148-58-0-0
32120|data|DCD optind_ptr - 0x1BDC4|188-1-0-0
32124|data|DCD aSync - 0x7BBA; "sync"|106-58-0-0
32128|data|DCD nwipe_ops2_ptr - 0x1BDC4|8-2-0-0
32132|data|DCD aVerify_0 - 0x7BE2; "verify"|74-58-0-0
32136|data|DCD aRandom - 0x7C0E; "random"|142-58-0-0
32140|data|DCD aPrng - 0x7C1A; "prng"|138-58-0-0
32144|data|DCD aStream - 0x7C26; "stream"|134-58-0-0
32148|data|DCD aZero - 0x7C32; "zero"|130-58-0-0
32152|data|DCD aQuick - 0x7C3E; "quick"|126-58-0-0
32156|data|DCD nwipe_zero_ptr - 0x1BDC4|224-1-0-0
32160|data|DCD nwipe_random_ptr - 0x1BDC4|204-1-0-0
32164|data|DCD aLast - 0x7C86; "last"|174-57-0-0
32168|data|DCD aLast - 0x7CA8; "last"|140-57-0-0
32172|data|DCD aErrorUnknownVe - 0x7CBA; "Error: Unknown verification level '%s'."...|130-57-0-0
32176|data|DCD aErrorUnknownPr - 0x7CEE; "Error: Unknown prng '%s'.\n"|22-58-0-0
32180|data|DCD aErrorUnknownWi - 0x7CFA; "Error: Unknown wipe method '%s'.\n"|202-57-0-0
32184|code|MOVS            R0, #0|0-32
32186|code|BX              LR|112-71
32188|code|PUSH            {R4,LR}|16-181
32190|code|MOV             R4, R0|4-70
32192|code|LDR             R0, [R0]|0-104
32194|code|SUB             SP, SP, #8|130-176
32196|code|CBZ             R0, loc_7DD6|56-177
32198|code|LDR             R2, [R1]|10-104
32200|code|LDR             R1, [R1,#4]|73-104
32202|code|LSRS            R2, R2, #2|146-8
32204|code|BL              sub_64BC|254-247-118-251
32208|code|MOVS            R0, #0|0-32
32210|code|ADD             SP, SP, #8|2-176
32212|code|POP             {R4,PC}|16-189
32214|code|MOVW            R0, #0x9CC; size|64-246-204-16
32218|code|STR             R1, [SP,#0x10+var_C]|1-145
32220|code|BLX             malloc|249-247-216-239
32224|code|LDR             R1, [SP,#0x10+var_C]|1-153
32226|code|STR             R0, [R4]|32-96
32228|code|B               loc_7DC6|239-231
32230|data|ALIGN 4|0-191
32232|code|PUSH.W          {R3-R9,LR}|45-233-248-67
32236|code|LSRS            R7, R2, #2|151-8
32238|code|MOV             R5, R2|21-70
32240|code|MOV             R6, R0|6-70
32242|code|MOV             R9, R1|137-70
32244|code|AND.W           R8, R2, #3|2-240-3-8
32248|code|ITT NE|28-191
32250|code|ADDNE.W         R7, R1, R7,LSL#2|1-235-135-7
32254|code|MOVNE           R4, R1|12-70
32256|code|BEQ             loc_7E10|6-208
32258|code|LDR             R0, [R6]|48-104
32260|code|BL              sub_6594|254-247-198-251
32264|code|STR.W           R0, [R4],#4|68-248-4-11
32268|code|CMP             R4, R7|188-66
32270|code|BNE             loc_7E02|248-209
32272|code|ADD             R5, R9|77-68
32274|code|MOVS            R4, #1|1-36
32276|code|CMP.W           R8, #0|184-241-0-15
32280|code|BEQ             loc_7E2A|7-208
32282|code|LDR             R0, [R6]|48-104
32284|code|ADDS            R4, #1|1-52
32286|code|BL              sub_6594|254-247-185-251
32290|code|CMP             R8, R4|160-69
32292|code|STRB.W          R0, [R5,#-1]!|5-248-1-13
32296|code|BCS             loc_7E1A|247-210
32298|code|MOVS            R0, #0|0-32
32300|code|POP.W           {R3-R9,PC}|189-232-248-131
32304|code|PUSH            {R3-R7,LR}|248-181
32306|code|MOV             R4, R0|4-70
32308|code|LDR             R5, [R0]|5-104
32310|code|MOV             R6, R1|14-70
32312|code|CBZ             R5, loc_7E7E|13-179
32314|code|LDR             R3, [R6]|51-104
32316|code|ADDS            R7, R5, #4|47-29
32318|code|CMP.W           R3, #0x400|179-245-128-111
32322|code|IT HI|136-191
32324|code|MOVHI.W         R4, #0x400|79-244-128-100
32328|code|BLS             loc_7E60|10-217
32330|code|LDR             R1, [R6,#4]; src|113-104
32332|code|MOV             R2, R4; n|34-70
32334|code|MOV             R0, R7; dest|56-70
32336|code|BLX             memcpy|249-247-18-239
32340|code|MOV             R0, R5|40-70
32342|code|MOVS            R1, #1|1-33
32344|code|BL              sub_2AF4|250-247-76-254
32348|code|MOVS            R0, #0|0-32
32350|code|POP             {R3-R7,PC}|248-189
32352|code|MOVS            R1, #0; c|0-33
32354|code|MOV.W           R2, #0x400; n|79-244-128-98
32358|code|MOV             R0, R7; s|56-70
32360|code|BLX             memset|250-247-22-232
32364|code|LDR             R4, [R6]|52-104
32366|code|CMP             R4, #0|0-44
32368|code|BNE             loc_7E4A|235-209
32370|code|MOV             R0, R5|40-70
32372|code|MOV             R1, R4|33-70
32374|code|BL              sub_2AF4|250-247-61-254
32378|code|MOV             R0, R4|32-70
32380|code|POP             {R3-R7,PC}|248-189
32382|code|MOV.W           R0, #0x810; size|79-244-1-96
32386|code|BLX             malloc|249-247-134-239
32390|code|MOV             R5, R0|5-70
32392|code|STR             R0, [R4]|32-96
32394|code|CMP             R0, #0|0-40
32396|code|BNE             loc_7E3A|213-209
32398|code|BLX             __errno_location|249-247-248-239
32402|code|LDR             R1, =(aNwipeIsaacInit - 0x7E9A); "nwipe_isaac_init"|7-73
32404|code|LDR             R2, =(aMalloc_0 - 0x7E9C); "malloc"|7-74
32406|code|ADD             R1, PC; "nwipe_isaac_init"|121-68
32408|code|ADD             R2, PC; "malloc"|122-68
32410|code|LDR             R0, [R0]|0-104
32412|code|BL              sub_6A4C|254-247-214-253
32416|code|LDR             R1, =(aUnableToAlloca_5 - 0x7EA8); "Unable to allocate memory for the isaac"...|5-73
32418|code|MOVS            R0, #6|6-32
32420|code|ADD             R1, PC; "Unable to allocate memory for the isaac"...|121-68
32422|code|BL              sub_66B0|254-247-3-252
32426|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
32430|code|POP             {R3-R7,PC}|248-189
32432|data|DCD aNwipeIsaacInit - 0x7E9A; "nwipe_isaac_init"|250-56-0-0
32436|data|DCD aMalloc_0 - 0x7E9C; "malloc"|104-35-0-0
32440|data|DCD aUnableToAlloca_5 - 0x7EA8; "Unable to allocate memory for the isaac"...|0-57-0-0
32444|data|ALIGN 0x10|0-0-0-0
32448|code|CMP             R1, #0|0-41
32450|code|BEQ.W           loc_8142|0-240-62-129
32454|code|EOR.W           R12, R0, R1|128-234-1-12
32458|code|IT MI|72-191
32460|code|NEGMI           R1, R1|73-66
32462|code|SUBS            R2, R1, #1|74-30
32464|code|BEQ.W           loc_8112|0-240-31-129
32468|code|MOVS            R3, R0|3-0
32470|code|IT MI|72-191
32472|code|NEGMI           R3, R0|67-66
32474|code|CMP             R3, R1|139-66
32476|code|BLS.W           loc_811C|64-242-30-129
32480|code|TST             R1, R2|17-66
32482|code|BEQ.W           loc_812C|0-240-35-129
32486|code|CLZ.W           R2, R3|179-250-131-242
32490|code|CLZ.W           R0, R1|177-250-129-240
32494|code|SUB.W           R2, R0, R2|160-235-2-2
32498|code|RSB.W           R2, R2, #0x1F|194-241-31-2
32502|code|ADR             R0, loc_7F08|4-160
32504|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
32508|code|MOV.W           R0, #0|79-240-0-0
32512|code|MOV             PC, R2|151-70
32514|data|ALIGN 4|0-191
32516|code|NOP.W|175-243-0-128
32520|code|CMP.W           R3, R1,LSL#31|179-235-193-127
32524|code|NOP|0-191
32526|code|ADC.W           R0, R0, R0|64-235-0-0
32530|code|IT CS|40-191
32532|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
32536|code|CMP.W           R3, R1,LSL#30|179-235-129-127
32540|code|NOP|0-191
32542|code|ADC.W           R0, R0, R0|64-235-0-0
32546|code|IT CS|40-191
32548|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
32552|code|CMP.W           R3, R1,LSL#29|179-235-65-127
32556|code|NOP|0-191
32558|code|ADC.W           R0, R0, R0|64-235-0-0
32562|code|IT CS|40-191
32564|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
32568|code|CMP.W           R3, R1,LSL#28|179-235-1-127
32572|code|NOP|0-191
32574|code|ADC.W           R0, R0, R0|64-235-0-0
32578|code|IT CS|40-191
32580|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
32584|code|CMP.W           R3, R1,LSL#27|179-235-193-111
32588|code|NOP|0-191
32590|code|ADC.W           R0, R0, R0|64-235-0-0
32594|code|IT CS|40-191
32596|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
32600|code|CMP.W           R3, R1,LSL#26|179-235-129-111
32604|code|NOP|0-191
32606|code|ADC.W           R0, R0, R0|64-235-0-0
32610|code|IT CS|40-191
32612|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
32616|code|CMP.W           R3, R1,LSL#25|179-235-65-111
32620|code|NOP|0-191
32622|code|ADC.W           R0, R0, R0|64-235-0-0
32626|code|IT CS|40-191
32628|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
32632|code|CMP.W           R3, R1,LSL#24|179-235-1-111
32636|code|NOP|0-191
32638|code|ADC.W           R0, R0, R0|64-235-0-0
32642|code|IT CS|40-191
32644|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
32648|code|CMP.W           R3, R1,LSL#23|179-235-193-95
32652|code|NOP|0-191
32654|code|ADC.W           R0, R0, R0|64-235-0-0
32658|code|IT CS|40-191
32660|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
32664|code|CMP.W           R3, R1,LSL#22|179-235-129-95
32668|code|NOP|0-191
32670|code|ADC.W           R0, R0, R0|64-235-0-0
32674|code|IT CS|40-191
32676|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
32680|code|CMP.W           R3, R1,LSL#21|179-235-65-95
32684|code|NOP|0-191
32686|code|ADC.W           R0, R0, R0|64-235-0-0
32690|code|IT CS|40-191
32692|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
32696|code|CMP.W           R3, R1,LSL#20|179-235-1-95
32700|code|NOP|0-191
32702|code|ADC.W           R0, R0, R0|64-235-0-0
32706|code|IT CS|40-191
32708|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
32712|code|CMP.W           R3, R1,LSL#19|179-235-193-79
32716|code|NOP|0-191
32718|code|ADC.W           R0, R0, R0|64-235-0-0
32722|code|IT CS|40-191
32724|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
32728|code|CMP.W           R3, R1,LSL#18|179-235-129-79
32732|code|NOP|0-191
32734|code|ADC.W           R0, R0, R0|64-235-0-0
32738|code|IT CS|40-191
32740|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
32744|code|CMP.W           R3, R1,LSL#17|179-235-65-79
32748|code|NOP|0-191
32750|code|ADC.W           R0, R0, R0|64-235-0-0
32754|code|IT CS|40-191
32756|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
32760|code|CMP.W           R3, R1,LSL#16|179-235-1-79
32764|code|NOP|0-191
32766|code|ADC.W           R0, R0, R0|64-235-0-0
32770|code|IT CS|40-191
32772|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
32776|code|CMP.W           R3, R1,LSL#15|179-235-193-63
32780|code|NOP|0-191
32782|code|ADC.W           R0, R0, R0|64-235-0-0
32786|code|IT CS|40-191
32788|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
32792|code|CMP.W           R3, R1,LSL#14|179-235-129-63
32796|code|NOP|0-191
32798|code|ADC.W           R0, R0, R0|64-235-0-0
32802|code|IT CS|40-191
32804|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
32808|code|CMP.W           R3, R1,LSL#13|179-235-65-63
32812|code|NOP|0-191
32814|code|ADC.W           R0, R0, R0|64-235-0-0
32818|code|IT CS|40-191
32820|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
32824|code|CMP.W           R3, R1,LSL#12|179-235-1-63
32828|code|NOP|0-191
32830|code|ADC.W           R0, R0, R0|64-235-0-0
32834|code|IT CS|40-191
32836|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
32840|code|CMP.W           R3, R1,LSL#11|179-235-193-47
32844|code|NOP|0-191
32846|code|ADC.W           R0, R0, R0|64-235-0-0
32850|code|IT CS|40-191
32852|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
32856|code|CMP.W           R3, R1,LSL#10|179-235-129-47
32860|code|NOP|0-191
32862|code|ADC.W           R0, R0, R0|64-235-0-0
32866|code|IT CS|40-191
32868|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
32872|code|CMP.W           R3, R1,LSL#9|179-235-65-47
32876|code|NOP|0-191
32878|code|ADC.W           R0, R0, R0|64-235-0-0
32882|code|IT CS|40-191
32884|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
32888|code|CMP.W           R3, R1,LSL#8|179-235-1-47
32892|code|NOP|0-191
32894|code|ADC.W           R0, R0, R0|64-235-0-0
32898|code|IT CS|40-191
32900|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
32904|code|CMP.W           R3, R1,LSL#7|179-235-193-31
32908|code|NOP|0-191
32910|code|ADC.W           R0, R0, R0|64-235-0-0
32914|code|IT CS|40-191
32916|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
32920|code|CMP.W           R3, R1,LSL#6|179-235-129-31
32924|code|NOP|0-191
32926|code|ADC.W           R0, R0, R0|64-235-0-0
32930|code|IT CS|40-191
32932|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
32936|code|CMP.W           R3, R1,LSL#5|179-235-65-31
32940|code|NOP|0-191
32942|code|ADC.W           R0, R0, R0|64-235-0-0
32946|code|IT CS|40-191
32948|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
32952|code|CMP.W           R3, R1,LSL#4|179-235-1-31
32956|code|NOP|0-191
32958|code|ADC.W           R0, R0, R0|64-235-0-0
32962|code|IT CS|40-191
32964|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
32968|code|CMP.W           R3, R1,LSL#3|179-235-193-15
32972|code|NOP|0-191
32974|code|ADC.W           R0, R0, R0|64-235-0-0
32978|code|IT CS|40-191
32980|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
32984|code|CMP.W           R3, R1,LSL#2|179-235-129-15
32988|code|NOP|0-191
32990|code|ADC.W           R0, R0, R0|64-235-0-0
32994|code|IT CS|40-191
32996|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
33000|code|CMP.W           R3, R1,LSL#1|179-235-65-15
33004|code|NOP|0-191
33006|code|ADC.W           R0, R0, R0|64-235-0-0
33010|code|IT CS|40-191
33012|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
33016|code|CMP.W           R3, R1|179-235-1-15
33020|code|NOP|0-191
33022|code|ADC.W           R0, R0, R0|64-235-0-0
33026|code|IT CS|40-191
33028|code|SUBCS.W         R3, R3, R1|163-235-1-3
33032|code|CMP.W           R12, #0|188-241-0-15
33036|code|IT MI|72-191
33038|code|NEGMI           R0, R0|64-66
33040|code|BX              LR|112-71
33042|code|TEQ.W           R12, R0|156-234-0-15
33046|code|IT MI|72-191
33048|code|NEGMI           R0, R0|64-66
33050|code|BX              LR|112-71
33052|code|IT CC|56-191
33054|code|MOVCC           R0, #0|0-32
33056|code|ITT EQ|4-191
33058|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
33062|code|ORREQ.W         R0, R0, #1|64-240-1-0
33066|code|BX              LR|112-71
33068|code|CLZ.W           R2, R1|177-250-129-242
33072|code|RSB.W           R2, R2, #0x1F|194-241-31-2
33076|code|CMP.W           R12, #0|188-241-0-15
33080|code|LSR.W           R0, R3, R2|35-250-2-240
33084|code|IT MI|72-191
33086|code|NEGMI           R0, R0|64-66
33088|code|BX              LR|112-71
33090|code|CMP             R0, #0|0-40
33092|code|IT GT|200-191
33094|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
33098|code|IT LT|184-191
33100|code|MOVLT.W         R0, #0x80000000|79-240-0-64
33104|code|B.W             loc_850C|0-240-220-185
33108|code|CMP             R1, #0|0-41
33110|code|BEQ             loc_8142|244-208
33112|code|PUSH.W          {R0,R1,LR}|45-233-3-64
33116|code|BL              sub_7EC6|255-247-179-254
33120|code|POP.W           {R1,R2,LR}|189-232-6-64
33124|code|MUL.W           R3, R2, R0|2-251-0-243
33128|code|SUB.W           R1, R1, R3|161-235-3-1
33132|code|BX              LR|112-71
33134|data|ALIGN 0x10|0-191
33136|code|EOR.W           R1, R1, #0x80000000|129-240-0-65
33140|code|B               loc_817C|2-224
33142|data|ALIGN 4|0-191
33144|code|EOR.W           R3, R3, #0x80000000|131-240-0-67
33148|code|PUSH            {R4,R5,LR}|48-181
33150|code|MOV.W           R4, R1,LSL#1|79-234-65-4
33154|code|MOV.W           R5, R3,LSL#1|79-234-67-5
33158|code|TEQ.W           R4, R5|148-234-5-15
33162|code|IT EQ|8-191
33164|code|TEQEQ.W         R0, R2|144-234-2-15
33168|code|ITTTT NE|31-191
33170|code|ORRSNE.W        R12, R4, R0|84-234-0-12
33174|code|ORRSNE.W        R12, R5, R2|85-234-2-12
33178|code|MVNSNE.W        R12, R4,ASR#21|127-234-100-92
33182|code|MVNSNE.W        R12, R5,ASR#21|127-234-101-92
33186|code|BEQ.W           loc_836A|0-240-226-128
33190|code|MOV.W           R4, R4,LSR#21|79-234-84-84
33194|code|RSBS.W          R5, R4, R5,LSR#21|212-235-85-85
33198|code|IT LT|184-191
33200|code|NEGLT           R5, R5|109-66
33202|code|BLE             loc_81CE|12-221
33204|code|ADD             R4, R5|44-68
33206|code|EOR.W           R2, R0, R2|128-234-2-2
33210|code|EOR.W           R3, R1, R3|129-234-3-3
33214|code|EOR.W           R0, R2, R0|130-234-0-0
33218|code|EOR.W           R1, R3, R1|131-234-1-1
33222|code|EOR.W           R2, R0, R2|128-234-2-2
33226|code|EOR.W           R3, R1, R3|129-234-3-3
33230|code|CMP             R5, #0x36 ; '6'|54-45
33232|code|IT HI|136-191
33234|code|POPHI           {R4,R5,PC}|48-189
33236|code|TST.W           R1, #0x80000000|17-240-0-79
33240|code|MOV.W           R1, R1,LSL#12|79-234-1-49
33244|code|MOV.W           R12, #0x100000|79-244-128-28
33248|code|ORR.W           R1, R12, R1,LSR#12|76-234-17-49
33252|code|BEQ             loc_81EC|2-208
33254|code|NEGS            R0, R0|64-66
33256|code|SBC.W           R1, R1, R1,LSL#1|97-235-65-1
33260|code|TST.W           R3, #0x80000000|19-240-0-79
33264|code|MOV.W           R3, R3,LSL#12|79-234-3-51
33268|code|ORR.W           R3, R12, R3,LSR#12|76-234-19-51
33272|code|BEQ             loc_8200|2-208
33274|code|NEGS            R2, R2|82-66
33276|code|SBC.W           R3, R3, R3,LSL#1|99-235-67-3
33280|code|TEQ.W           R4, R5|148-234-5-15
33284|code|BEQ.W           loc_8356|0-240-167-128
33288|code|SUB.W           R4, R4, #1|164-241-1-4
33292|code|RSBS.W          LR, R5, #0x20 ; ' '|213-241-32-14
33296|code|BLT             loc_822E|13-219
33298|code|LSL.W           R12, R2, LR|2-250-14-252
33302|code|LSR.W           R2, R2, R5|34-250-5-242
33306|code|ADDS            R0, R0, R2|128-24
33308|code|ADC.W           R1, R1, #0|65-241-0-1
33312|code|LSL.W           R2, R3, LR|3-250-14-242
33316|code|ADDS            R0, R0, R2|128-24
33318|code|ASR.W           R3, R3, R5|67-250-5-243
33322|code|ADCS            R1, R3|89-65
33324|code|B               loc_824C|14-224
33326|code|SUB.W           R5, R5, #0x20 ; ' '|165-241-32-5
33330|code|ADD.W           LR, LR, #0x20 ; ' '|14-241-32-14
33334|code|CMP             R2, #1|1-42
33336|code|LSL.W           R12, R3, LR|3-250-14-252
33340|code|IT CS|40-191
33342|code|ORRCS.W         R12, R12, #2|76-240-2-12
33346|code|ASR.W           R3, R3, R5|67-250-5-243
33350|code|ADDS            R0, R0, R3|192-24
33352|code|ADCS.W          R1, R1, R3,ASR#31|81-235-227-113
33356|code|AND.W           R5, R1, #0x80000000|1-240-0-69
33360|code|BPL             loc_8262|7-213
33362|code|MOV.W           LR, #0|79-240-0-14
33366|code|RSBS.W          R12, R12, #0|220-241-0-12
33370|code|SBCS.W          R0, LR, R0|126-235-0-0
33374|code|SBC.W           R1, LR, R1|110-235-1-1
33378|code|CMP.W           R1, #0x100000|177-245-128-31
33382|code|BCC             loc_82A0|27-211
33384|code|CMP.W           R1, #0x200000|177-245-0-31
33388|code|BCC             loc_8288|12-211
33390|code|LSRS            R1, R1, #1|73-8
33392|code|MOVS.W          R0, R0,RRX|95-234-48-0
33396|code|MOV.W           R12, R12,RRX|79-234-60-12
33400|code|ADD.W           R4, R4, #1|4-241-1-4
33404|code|MOV.W           R2, R4,LSL#21|79-234-68-82
33408|code|CMN.W           R2, #0x400000|18-245-128-15
33412|code|BCS.W           loc_83BC|128-240-154-128
33416|code|CMP.W           R12, #0x80000000|188-241-0-79
33420|code|IT EQ|8-191
33422|code|MOVSEQ.W        R12, R0,LSR#1|95-234-80-12
33426|code|ADCS.W          R0, R0, #0|80-241-0-0
33430|code|ADC.W           R1, R1, R4,LSL#20|65-235-4-81
33434|code|ORR.W           R1, R1, R5|65-234-5-1
33438|code|POP             {R4,R5,PC}|48-189
33440|code|MOVS.W          R12, R12,LSL#1|95-234-76-12
33444|code|ADCS            R0, R0|64-65
33446|code|ADC.W           R1, R1, R1|65-235-1-1
33450|code|TST.W           R1, #0x100000|17-244-128-31
33454|code|SUB.W           R4, R4, #1|164-241-1-4
33458|code|BNE             loc_8288|233-209
33460|code|TEQ.W           R1, #0|145-240-0-15
33464|code|ITT EQ|4-191
33466|code|MOVEQ           R1, R0|1-70
33468|code|MOVEQ           R0, #0|0-32
33470|code|CLZ.W           R3, R1|177-250-129-243
33474|code|IT EQ|8-191
33476|code|ADDEQ           R3, #0x20 ; ' '|32-51
33478|code|SUB.W           R3, R3, #0xB|163-241-11-3
33482|code|SUBS.W          R2, R3, #0x20 ; ' '|179-241-32-2
33486|code|BGE             loc_82EA|12-218
33488|code|ADDS            R2, #0xC|12-50
33490|code|BLE             loc_82E6|8-221
33492|code|ADD.W           R12, R2, #0x14|2-241-20-12
33496|code|RSB.W           R2, R2, #0xC|194-241-12-2
33500|code|LSL.W           R0, R1, R12|1-250-12-240
33504|code|LSR.W           R1, R1, R2|33-250-2-241
33508|code|B               loc_8300|12-224
33510|code|ADD.W           R2, R2, #0x14|2-241-20-2
33514|code|IT LE|216-191
33516|code|RSBLE.W         R12, R2, #0x20 ; ' '|194-241-32-12
33520|code|LSL.W           R1, R1, R2|1-250-2-241
33524|code|LSR.W           R12, R0, R12|32-250-12-252
33528|code|ITT LE|220-191
33530|code|ORRLE.W         R1, R1, R12|65-234-12-1
33534|code|LSLLE           R0, R2|144-64
33536|code|SUBS            R4, R4, R3|228-26
33538|code|ITTT GE|162-191
33540|code|ADDGE.W         R1, R1, R4,LSL#20|1-235-4-81
33544|code|ORRGE           R1, R5|41-67
33546|code|POPGE           {R4,R5,PC}|48-189
33548|code|MVN.W           R4, R4|111-234-4-4
33552|code|SUBS            R4, #0x1F|31-60
33554|code|BGE             loc_834E|28-218
33556|code|ADDS            R4, #0xC|12-52
33558|code|BGT             loc_8336|14-220
33560|code|ADD.W           R4, R4, #0x14|4-241-20-4
33564|code|RSB.W           R2, R4, #0x20 ; ' '|196-241-32-2
33568|code|LSR.W           R0, R0, R4|32-250-4-240
33572|code|LSL.W           R3, R1, R2|1-250-2-243
33576|code|ORR.W           R0, R0, R3|64-234-3-0
33580|code|LSR.W           R3, R1, R4|33-250-4-243
33584|code|ORR.W           R1, R5, R3|69-234-3-1
33588|code|POP             {R4,R5,PC}|48-189
33590|code|RSB.W           R4, R4, #0xC|196-241-12-4
33594|code|RSB.W           R2, R4, #0x20 ; ' '|196-241-32-2
33598|code|LSR.W           R0, R0, R2|32-250-2-240
33602|code|LSL.W           R3, R1, R4|1-250-4-243
33606|code|ORR.W           R0, R0, R3|64-234-3-0
33610|code|MOV             R1, R5|41-70
33612|code|POP             {R4,R5,PC}|48-189
33614|code|LSR.W           R0, R1, R4|33-250-4-240
33618|code|MOV             R1, R5|41-70
33620|code|POP             {R4,R5,PC}|48-189
33622|code|TEQ.W           R4, #0|148-240-0-15
33626|code|EOR.W           R3, R3, #0x100000|131-244-128-19
33630|code|ITTE EQ|6-191
33632|code|EOREQ.W         R1, R1, #0x100000|129-244-128-17
33636|code|ADDEQ           R4, #1|1-52
33638|code|SUBNE           R5, #1|1-61
33640|code|B               loc_8208|78-231
33642|code|MVNS.W          R12, R4,ASR#21|127-234-100-92
33646|code|IT NE|24-191
33648|code|MVNSNE.W        R12, R5,ASR#21|127-234-101-92
33652|code|BEQ             loc_83CA|41-208
33654|code|TEQ.W           R4, R5|148-234-5-15
33658|code|IT EQ|8-191
33660|code|TEQEQ.W         R0, R2|144-234-2-15
33664|code|BEQ             loc_838E|5-208
33666|code|ORRS.W          R12, R4, R0|84-234-0-12
33670|code|ITT EQ|4-191
33672|code|MOVEQ           R1, R3|25-70
33674|code|MOVEQ           R0, R2|16-70
33676|code|POP             {R4,R5,PC}|48-189
33678|code|TEQ.W           R1, R3|145-234-3-15
33682|code|ITTT NE|30-191
33684|code|MOVNE           R1, #0|0-33
33686|code|MOVNE           R0, #0|0-32
33688|code|POPNE           {R4,R5,PC}|48-189
33690|code|MOVS.W          R12, R4,LSR#21|95-234-84-92
33694|code|BNE             loc_83AC|5-209
33696|code|LSLS            R0, R0, #1|64-0
33698|code|ADCS            R1, R1|73-65
33700|code|IT CS|40-191
33702|code|ORRCS.W         R1, R1, #0x80000000|65-240-0-65
33706|code|POP             {R4,R5,PC}|48-189
33708|code|ADDS.W          R4, R4, #0x400000|20-245-128-4
33712|code|ITT CC|60-191
33714|code|ADDCC.W         R1, R1, #0x100000|1-245-128-17
33718|code|POPCC           {R4,R5,PC}|48-189
33720|code|AND.W           R5, R1, #0x80000000|1-240-0-69
33724|code|ORR.W           R1, R5, #0x7F000000|69-240-254-65
33728|code|ORR.W           R1, R1, #0xF00000|65-244-112-1
33732|code|MOV.W           R0, #0|79-240-0-0
33736|code|POP             {R4,R5,PC}|48-189
33738|code|MVNS.W          R12, R4,ASR#21|127-234-100-92
33742|code|ITTE NE|26-191
33744|code|MOVNE           R1, R3|25-70
33746|code|MOVNE           R0, R2|16-70
33748|code|MVNSEQ.W        R12, R5,ASR#21|127-234-101-92
33752|code|ITT NE|28-191
33754|code|MOVNE           R3, R1|11-70
33756|code|MOVNE           R2, R0|2-70
33758|code|ORRS.W          R4, R0, R1,LSL#12|80-234-1-52
33762|code|ITTE EQ|6-191
33764|code|ORRSEQ.W        R5, R2, R3,LSL#12|82-234-3-53
33768|code|TEQEQ.W         R1, R3|145-234-3-15
33772|code|ORRNE.W         R1, R1, #0x80000|65-244-0-33
33776|code|POP             {R4,R5,PC}|48-189
33778|data|ALIGN 4|0-191
33780|code|TEQ.W           R0, #0|144-240-0-15
33784|code|ITT EQ|4-191
33786|code|MOVEQ           R1, #0|0-33
33788|code|BXEQ            LR|112-71
33790|code|PUSH            {R4,R5,LR}|48-181
33792|code|MOV             R4, #0x432|79-244-128-100-4-241-50-4
33800|code|MOV.W           R5, #0|79-240-0-5
33804|code|MOV.W           R1, #0|79-240-0-1
33808|code|B               loc_82B4|80-231
33810|data|ALIGN 4|0-191
33812|code|TEQ.W           R0, #0|144-240-0-15
33816|code|ITT EQ|4-191
33818|code|MOVEQ           R1, #0|0-33
33820|code|BXEQ            LR|112-71
33822|code|PUSH            {R4,R5,LR}|48-181
33824|code|MOV             R4, #0x432|79-244-128-100-4-241-50-4
33832|code|ANDS.W          R5, R0, #0x80000000|16-240-0-69
33836|code|IT MI|72-191
33838|code|NEGMI           R0, R0|64-66
33840|code|MOV.W           R1, #0|79-240-0-1
33844|code|B               loc_82B4|62-231
33846|data|ALIGN 4|0-191
33848|code|LSLS            R2, R0, #1|66-0
33850|code|MOV.W           R1, R2,ASR#3|79-234-226-1
33854|code|MOV.W           R1, R1,RRX|79-234-49-1
33858|code|MOV.W           R0, R2,LSL#28|79-234-2-112
33862|code|ITTTT NE|31-191
33864|code|ANDSNE.W        R3, R2, #0xFF000000|18-240-127-67
33868|code|TEQNE.W         R3, #0xFF000000|147-240-127-79
33872|code|EORNE.W         R1, R1, #0x38000000|129-240-96-81
33876|code|BXNE            LR|112-71
33878|code|TEQ.W           R2, #0|146-240-0-15
33882|code|ITE NE|20-191
33884|code|TEQNE.W         R3, #0xFF000000|147-240-127-79
33888|code|BXEQ            LR|112-71
33890|code|PUSH            {R4,R5,LR}|48-181
33892|code|MOV.W           R4, #0x380|79-244-96-116
33896|code|AND.W           R5, R1, #0x80000000|1-240-0-69
33900|code|BIC.W           R1, R1, #0x80000000|33-240-0-65
33904|code|B               loc_82B4|32-231
33906|data|ALIGN 4|0-191
33908|code|ORRS.W          R2, R0, R1|80-234-1-2
33912|code|IT EQ|8-191
33914|code|BXEQ            LR|112-71
33916|code|PUSH            {R4,R5,LR}|48-181
33918|code|MOV.W           R5, #0|79-240-0-5
33922|code|B               loc_849A|10-224
33924|code|ORRS.W          R2, R0, R1|80-234-1-2
33928|code|IT EQ|8-191
33930|code|BXEQ            LR|112-71
33932|code|PUSH            {R4,R5,LR}|48-181
33934|code|ANDS.W          R5, R1, #0x80000000|17-240-0-69
33938|code|BPL             loc_849A|2-213
33940|code|NEGS            R0, R0|64-66
33942|code|SBC.W           R1, R1, R1,LSL#1|97-235-65-1
33946|code|MOV             R4, #0x432|79-244-128-100-4-241-50-4
33954|code|MOVS.W          R12, R1,LSR#22|95-234-145-92
33958|code|BEQ.W           loc_8262|63-244-220-174
33962|code|MOV.W           R2, #3|79-240-3-2
33966|code|MOVS.W          R12, R12,LSR#3|95-234-220-12
33970|code|IT NE|24-191
33972|code|ADDNE           R2, #3|3-50
33974|code|MOVS.W          R12, R12,LSR#3|95-234-220-12
33978|code|IT NE|24-191
33980|code|ADDNE           R2, #3|3-50
33982|code|ADD.W           R2, R2, R12,LSR#3|2-235-220-2
33986|code|RSB.W           R3, R2, #0x20 ; ' '|194-241-32-3
33990|code|LSL.W           R12, R0, R3|0-250-3-252
33994|code|LSR.W           R0, R0, R2|32-250-2-240
33998|code|LSL.W           LR, R1, R3|1-250-3-254
34002|code|ORR.W           R0, R0, LR|64-234-14-0
34006|code|LSR.W           R1, R1, R2|33-250-2-241
34010|code|ADD             R4, R2|20-68
34012|code|B               loc_8262|193-230
34014|data|ALIGN 0x10|0-191
34016|code|CBNZ            R3, loc_84F6|75-185
34018|code|CBNZ            R2, loc_84F6|66-185
34020|code|CMP             R1, #0|0-41
34022|code|IT EQ|8-191
34024|code|CMPEQ           R0, #0|0-40
34026|code|BEQ             loc_84F2|2-208
34028|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
34032|code|MOV             R0, R1|8-70
34034|code|B.W             loc_850C|0-240-11-184
34038|code|SUB             SP, SP, #8|130-176
34040|code|MOV             R12, SP|236-70
34042|code|PUSH.W          {R12,LR}|45-233-0-80
34046|code|BL              sub_8548|0-240-35-248
34050|code|LDR.W           LR, [SP,#0x10+var_C]|221-248-4-224
34054|code|ADD             SP, SP, #8|2-176
34056|code|POP             {R2,R3}|12-188
34058|code|BX              LR|112-71
34060|code|PUSH            {R1,LR}|2-181
34062|code|MOV.W           R0, #8; sig|79-240-8-0
34066|code|BLX             raise|249-247-76-235
34070|code|POP             {R1,PC}|2-189
34072|code|PUSH.W          {R4-R8,LR}|45-233-240-65
34076|code|MOV             R8, R3|152-70
34078|code|MOV             R4, R2|20-70
34080|code|LDR             R5, [SP,#0x18]|6-157
34082|code|MOV             R6, R0|6-70
34084|code|MOV             R7, R1|15-70
34086|code|BL              sub_8578|0-240-39-248
34090|code|UMULL.W         R2, R3, R4, R0|164-251-0-35
34094|code|MOV             LR, R0|134-70
34096|code|MUL.W           R4, R4, R1|4-251-1-244
34100|code|SUBS            R6, R6, R2|182-26
34102|code|MLA.W           R4, R0, R8, R4|0-251-8-68
34106|code|ADD             R3, R4|35-68
34108|code|SBC.W           R7, R7, R3|103-235-3-7
34112|code|STRD.W          R6, R7, [R5]|197-233-0-103
34116|code|POP.W           {R4-R8,PC}|189-232-240-129
34120|code|PUSH.W          {R3-R9,LR}|45-233-248-67
34124|code|MOV             R7, R2|23-70
34126|code|MOV             R8, R0|128-70
34128|code|MOV             R9, R1|137-70
34130|code|MOV             R5, R3|29-70
34132|code|LDR             R6, [SP,#0x20+arg_0]|8-158
34134|code|BL              sub_86D0|0-240-187-248
34138|code|MUL.W           R3, R0, R5|0-251-5-243
34142|code|UMULL.W         R4, R5, R0, R7|160-251-7-69
34146|code|MLA.W           R7, R7, R1, R3|7-251-1-55
34150|code|SUBS.W          R4, R8, R4|184-235-4-4
34154|code|ADD             R5, R7|61-68
34156|code|SBC.W           R5, R9, R5|105-235-5-5
34160|code|STRD.W          R4, R5, [R6]|198-233-0-69
34164|code|POP.W           {R3-R9,PC}|189-232-248-131
34168|code|CMP             R1, #0|0-41
34170|code|PUSH.W          {R4-R11,LR}|45-233-240-79
34174|code|ITTT GE|162-191
34176|code|MOVGE           R8, R0|128-70
34178|code|MOVGE           R9, R1|137-70
34180|code|MOVGE.W         LR, #0|79-240-0-14
34184|code|BLT.W           loc_86C0|192-242-154-128
34188|code|CMP             R3, #0|0-43
34190|code|ITT GE|164-191
34192|code|MOVGE           R0, R2|16-70
34194|code|MOVGE           R1, R3|25-70
34196|code|BLT.W           loc_86B4|192-242-142-128
34200|code|CMP             R9, R1|137-69
34202|code|MOV             R4, R8|68-70
34204|code|IT EQ|8-191
34206|code|CMPEQ           R8, R0|128-69
34208|code|MOV             R5, R9|77-70
34210|code|ITT CC|60-191
34212|code|MOVCC           R0, #0|0-32
34214|code|MOVCC           R1, #0|0-33
34216|code|BCC             loc_867A|103-211
34218|code|CLZ.W           R2, R1|177-250-129-242
34222|code|CMP             R1, #0|0-41
34224|code|BEQ             loc_86A0|118-208
34226|code|CLZ.W           R3, R9|185-250-137-243
34230|code|CMP.W           R9, #0|185-241-0-15
34234|code|BEQ             loc_8698|109-208
34236|code|SUBS            R3, R2, R3|211-26
34238|code|SUB.W           R12, R3, #0x20 ; ' '|163-241-32-12
34242|code|LSL.W           R7, R1, R3|1-250-3-247
34246|code|LSL.W           R2, R0, R12|0-250-12-242
34250|code|RSB.W           R10, R3, #0x20 ; ' '|195-241-32-10
34254|code|ORRS            R7, R2|23-67
34256|code|LSR.W           R2, R0, R10|32-250-10-242
34260|code|ORRS            R7, R2|23-67
34262|code|LSL.W           R6, R0, R3|0-250-3-246
34266|code|CMP             R9, R7|185-69
34268|code|MOV             R2, R3|26-70
34270|code|IT EQ|8-191
34272|code|CMPEQ           R8, R6|176-69
34274|code|ITT CC|60-191
34276|code|MOVCC           R0, #0|0-32
34278|code|MOVCC           R1, #0|0-33
34280|code|BCC             loc_8604|12-211
34282|code|MOV.W           R11, #1|79-240-1-11
34286|code|LSR.W           R4, R11, R10|43-250-10-244
34290|code|LSL.W           R1, R11, R12|11-250-12-241
34294|code|ORRS            R1, R4|33-67
34296|code|SUBS.W          R4, R8, R6|184-235-6-4
34300|code|SBC.W           R5, R9, R7|105-235-7-5
34304|code|LSL.W           R0, R11, R3|11-250-3-240
34308|code|CMP             R3, #0|0-43
34310|code|BEQ             loc_867A|56-208
34312|code|LSRS            R7, R7, #1|127-8
34314|code|MOV.W           R6, R6,RRX|79-234-54-6
34318|code|B               loc_8624|9-224
34320|code|SUBS            R4, R4, R6|164-27
34322|code|SBC.W           R5, R5, R7|101-235-7-5
34326|code|ADDS            R4, R4, R4|36-25
34328|code|ADCS            R5, R5|109-65
34330|code|ADDS            R4, #1|1-52
34332|code|ADC.W           R5, R5, #0|69-241-0-5
34336|code|SUBS            R3, #1|1-59
34338|code|BEQ             loc_8634|7-208
34340|code|CMP             R5, R7|189-66
34342|code|IT EQ|8-191
34344|code|CMPEQ           R4, R6|180-66
34346|code|BCS             loc_8610|241-210
34348|code|ADDS            R4, R4, R4|36-25
34350|code|ADCS            R5, R5|109-65
34352|code|SUBS            R3, #1|1-59
34354|code|BNE             loc_8624|247-209
34356|code|RSB.W           R7, R2, #0x20 ; ' '|194-241-32-7
34360|code|LSR.W           R3, R4, R2|36-250-2-243
34364|code|LSL.W           R7, R5, R7|5-250-7-247
34368|code|SUB.W           R6, R2, #0x20 ; ' '|162-241-32-6
34372|code|ORRS            R3, R7|59-67
34374|code|LSR.W           R6, R5, R6|37-250-6-246
34378|code|ORRS            R3, R6|51-67
34380|code|LSR.W           R12, R5, R2|37-250-2-252
34384|code|SUB.W           R8, R2, #0x20 ; ' '|162-241-32-8
34388|code|ADDS            R0, R0, R4|0-25
34390|code|LSL.W           R7, R12, R2|12-250-2-247
34394|code|LSL.W           R8, R3, R8|3-250-8-248
34398|code|RSB.W           R12, R2, #0x20 ; ' '|194-241-32-12
34402|code|ORR.W           R7, R7, R8|71-234-8-7
34406|code|LSR.W           R12, R3, R12|35-250-12-252
34410|code|LSL.W           R6, R3, R2|3-250-2-246
34414|code|ADCS            R1, R5|105-65
34416|code|ORR.W           R7, R7, R12|71-234-12-7
34420|code|SUBS            R0, R0, R6|128-27
34422|code|SBC.W           R1, R1, R7|97-235-7-1
34426|code|MOVS.W          R2, LR|30-241-0-2
34430|code|MOV.W           R3, #0|79-240-0-3
34434|code|IT NE|24-191
34436|code|MOVNE           R2, #1|1-34
34438|code|NEGS            R4, R2|84-66
34440|code|SBC.W           R5, R3, R3,LSL#1|99-235-67-5
34444|code|EORS            R0, R4|96-64
34446|code|EORS            R1, R5|105-64
34448|code|ADDS            R0, R0, R2|128-24
34450|code|ADCS            R1, R3|89-65
34452|code|POP.W           {R4-R11,PC}|189-232-240-143
34456|code|CLZ.W           R3, R8|184-250-136-243
34460|code|ADDS            R3, #0x20 ; ' '|32-51
34462|code|B               loc_85BC|141-231
34464|code|CLZ.W           R3, R0|176-250-128-243
34468|code|ADD.W           R2, R3, #0x20 ; ' '|3-241-32-2
34472|code|CLZ.W           R3, R9|185-250-137-243
34476|code|CMP.W           R9, #0|185-241-0-15
34480|code|BNE             loc_85BC|132-209
34482|code|B               loc_8698|241-231
34484|code|NEGS            R0, R2|80-66
34486|code|MVN.W           LR, LR|111-234-14-14
34490|code|SBC.W           R1, R3, R3,LSL#1|99-235-67-1
34494|code|B               loc_8598|107-231
34496|code|RSBS.W          R8, R0, #0|208-241-0-8
34500|code|MOV.W           LR, #0xFFFFFFFF|79-240-255-62
34504|code|SBC.W           R9, R1, R1,LSL#1|97-235-65-9
34508|code|B               loc_858C|94-231
34510|data|ALIGN 0x10|0-191
34512|code|PUSH.W          {R4-R8,LR}|45-233-240-65
34516|code|MOV             R5, R1|13-70
34518|code|CMP             R5, R3|157-66
34520|code|MOV             R4, R0|4-70
34522|code|IT EQ|8-191
34524|code|CMPEQ           R4, R2|148-66
34526|code|MOV             R0, R2|16-70
34528|code|MOV             R1, R3|25-70
34530|code|BCC             loc_87B4|103-211
34532|code|CLZ.W           R2, R3|179-250-131-242
34536|code|CMP             R3, #0|0-43
34538|code|BEQ             loc_87C4|107-208
34540|code|CLZ.W           R3, R5|181-250-133-243
34544|code|CMP             R5, #0|0-45
34546|code|BEQ             loc_87BC|99-208
34548|code|SUBS            R3, R2, R3|211-26
34550|code|SUB.W           R2, R3, #0x20 ; ' '|163-241-32-2
34554|code|LSL.W           R7, R1, R3|1-250-3-247
34558|code|RSB.W           R12, R3, #0x20 ; ' '|195-241-32-12
34562|code|LSL.W           R1, R0, R2|0-250-2-241
34566|code|ORRS            R7, R1|15-67
34568|code|LSR.W           R1, R0, R12|32-250-12-241
34572|code|ORRS            R7, R1|15-67
34574|code|LSL.W           R6, R0, R3|0-250-3-246
34578|code|CMP             R5, R7|189-66
34580|code|MOV             LR, R3|158-70
34582|code|IT EQ|8-191
34584|code|CMPEQ           R4, R6|180-66
34586|code|ITT CC|60-191
34588|code|MOVCC           R0, #0|0-32
34590|code|MOVCC           R1, #0|0-33
34592|code|BCC             loc_873C|12-211
34594|code|MOV.W           R8, #1|79-240-1-8
34598|code|SUBS            R4, R4, R6|164-27
34600|code|LSR.W           R12, R8, R12|40-250-12-252
34604|code|LSL.W           R1, R8, R2|8-250-2-241
34608|code|ORR.W           R1, R1, R12|65-234-12-1
34612|code|SBC.W           R5, R5, R7|101-235-7-5
34616|code|LSL.W           R0, R8, R3|8-250-3-240
34620|code|CMP             R3, #0|0-43
34622|code|BEQ             locret_87B8|59-208
34624|code|LSRS            R7, R7, #1|127-8
34626|code|MOV.W           R6, R6,RRX|79-234-54-6
34630|code|B               loc_875C|9-224
34632|code|SUBS            R4, R4, R6|164-27
34634|code|SBC.W           R5, R5, R7|101-235-7-5
34638|code|ADDS            R4, R4, R4|36-25
34640|code|ADCS            R5, R5|109-65
34642|code|ADDS            R4, #1|1-52
34644|code|ADC.W           R5, R5, #0|69-241-0-5
34648|code|SUBS            R3, #1|1-59
34650|code|BEQ             loc_876C|7-208
34652|code|CMP             R5, R7|189-66
34654|code|IT EQ|8-191
34656|code|CMPEQ           R4, R6|180-66
34658|code|BCS             loc_8748|241-210
34660|code|ADDS            R4, R4, R4|36-25
34662|code|ADCS            R5, R5|109-65
34664|code|SUBS            R3, #1|1-59
34666|code|BNE             loc_875C|247-209
34668|code|RSB.W           R2, LR, #0x20 ; ' '|206-241-32-2
34672|code|LSR.W           R6, R4, LR|36-250-14-246
34676|code|LSL.W           R2, R5, R2|5-250-2-242
34680|code|SUB.W           R3, LR, #0x20 ; ' '|174-241-32-3
34684|code|LSR.W           R3, R5, R3|37-250-3-243
34688|code|ORRS            R6, R2|22-67
34690|code|ORRS            R6, R3|30-67
34692|code|LSR.W           R7, R5, LR|37-250-14-247
34696|code|SUB.W           R12, LR, #0x20 ; ' '|174-241-32-12
34700|code|ADDS            R0, R0, R4|0-25
34702|code|LSL.W           R3, R7, LR|7-250-14-243
34706|code|LSL.W           R12, R6, R12|6-250-12-252
34710|code|RSB.W           R7, LR, #0x20 ; ' '|206-241-32-7
34714|code|ORR.W           R3, R3, R12|67-234-12-3
34718|code|LSR.W           R7, R6, R7|38-250-7-247
34722|code|LSL.W           R2, R6, LR|6-250-14-242
34726|code|ADCS            R1, R5|105-65
34728|code|ORRS            R3, R7|59-67
34730|code|SUBS            R0, R0, R2|128-26
34732|code|SBC.W           R1, R1, R3|97-235-3-1
34736|code|POP.W           {R4-R8,PC}|189-232-240-129
34740|code|MOVS            R0, #0|0-32
34742|code|MOVS            R1, #0|0-33
34744|code|POP.W           {R4-R8,PC}|189-232-240-129
34748|code|CLZ.W           R3, R4|180-250-132-243
34752|code|ADDS            R3, #0x20 ; ' '|32-51
34754|code|B               loc_86F4|151-231
34756|code|CLZ.W           R3, R0|176-250-128-243
34760|code|ADD.W           R2, R3, #0x20 ; ' '|3-241-32-2
34764|code|CLZ.W           R3, R5|181-250-133-243
34768|code|CMP             R5, #0|0-45
34770|code|BNE             loc_86F4|143-209
34772|code|B               loc_87BC|242-231
34774|data|ALIGN 4|0-191
34776|code|PUSH.W          {R3-R9,LR}|45-233-248-67
34780|code|MOV             R7, R0|7-70
34782|code|LDR             R6, =(off_1BC94 - 0x87EA)|12-78
34784|code|MOV             R8, R1|136-70
34786|code|LDR             R5, =(off_1BC90 - 0x87F0)|12-77
34788|code|MOV             R9, R2|145-70
34790|code|ADD             R6, PC; off_1BC94|126-68
34792|code|BLX             .init_proc|249-247-202-233
34796|code|ADD             R5, PC; off_1BC90|125-68
34798|code|SUBS            R6, R6, R5|118-27
34800|code|ASRS            R6, R6, #2|182-16
34802|code|BEQ             locret_880A|10-208
34804|code|SUBS            R5, #4|4-61
34806|code|MOVS            R4, #0|0-36
34808|code|ADDS            R4, #1|1-52
34810|code|LDR.W           R3, [R5,#4]!|85-248-4-63
34814|code|MOV             R0, R7|56-70
34816|code|MOV             R1, R8|65-70
34818|code|MOV             R2, R9|74-70
34820|code|BLX             R3|152-71
34822|code|CMP             R4, R6|180-66
34824|code|BNE             loc_87F8|246-209
34826|code|POP.W           {R3-R9,PC}|189-232-248-131
34830|data|ALIGN 0x10|0-191
34832|data|DCD off_1BC94 - 0x87EA|170-52-1-0
34836|data|DCD off_1BC90 - 0x87F0|160-52-1-0
34840|code|BX              LR|112-71
34842|data|ALIGN 4|0-191
34844|code|PUSH            {R3,LR}; _fini|8-64-45-233
34848|code|POP             {R3,PC}|8-128-189-232
47468|data|ALIGN 0x10|0-0-0-0
113808|data|DCD sub_28D4+1|213-40-0-0
113812|data|DCD sub_2894+1|149-40-0-0
113816|data|DCD 0|0-0-0-0
113820|data|Elf32_Dyn <1, <1>>; DT_NEEDED libpthread.so.0|1-0-0-0-1-0-0-0
113828|data|Elf32_Dyn <1, <0x123>>; DT_NEEDED libparted.so.2|1-0-0-0-35-1-0-0
113836|data|Elf32_Dyn <1, <0x1A7>>; DT_NEEDED libpanel.so.5|1-0-0-0-167-1-0-0
113844|data|Elf32_Dyn <1, <0x1ED>>; DT_NEEDED libncurses.so.5|1-0-0-0-237-1-0-0
113852|data|Elf32_Dyn <1, <0x300>>; DT_NEEDED libtinfo.so.5|1-0-0-0-0-3-0-0
113860|data|Elf32_Dyn <1, <0x32D>>; DT_NEEDED libc.so.6|1-0-0-0-45-3-0-0
113868|data|Elf32_Dyn <1, <0x4BF>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-191-4-0-0
113876|data|Elf32_Dyn <0xC, <0x1B80>>; DT_INIT|12-0-0-0-128-27-0-0
113884|data|Elf32_Dyn <0xD, <0x881C>>; DT_FINI|13-0-0-0-28-136-0-0
113892|data|Elf32_Dyn <0x19, <0x1BC90>>; DT_INIT_ARRAY|25-0-0-0-144-188-1-0
113900|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
113908|data|Elf32_Dyn <0x1A, <0x1BC94>>; DT_FINI_ARRAY|26-0-0-0-148-188-1-0
113916|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
113924|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
113932|data|Elf32_Dyn <5, <0xC80>>; DT_STRTAB|5-0-0-0-128-12-0-0
113940|data|Elf32_Dyn <6, <0x310>>; DT_SYMTAB|6-0-0-0-16-3-0-0
113948|data|Elf32_Dyn <0xA, <0x6A1>>; DT_STRSZ|10-0-0-0-161-6-0-0
113956|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
113964|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
113972|data|Elf32_Dyn <3, <0x1BDC4>>; DT_PLTGOT|3-0-0-0-196-189-1-0
113980|data|Elf32_Dyn <2, <0x310>>; DT_PLTRELSZ|2-0-0-0-16-3-0-0
113988|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
113996|data|Elf32_Dyn <0x17, <0x1870>>; DT_JMPREL|23-0-0-0-112-24-0-0
114004|data|Elf32_Dyn <0x11, <0x14C0>>; DT_REL|17-0-0-0-192-20-0-0
114012|data|Elf32_Dyn <0x12, <0x3B0>>; DT_RELSZ|18-0-0-0-176-3-0-0
114020|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
114028|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
114036|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
114044|data|Elf32_Dyn <0x6FFFFFFE, <0x1450>>; DT_VERNEED|254-255-255-111-80-20-0-0
114052|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
114060|data|Elf32_Dyn <0x6FFFFFF0, <0x1322>>; DT_VERSYM|240-255-255-111-34-19-0-0
114068|data|Elf32_Dyn <0x6FFFFFFA, <0x68>>; DT_RELCOUNT|250-255-255-111-104-0-0-0
114076|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
114084|data|ALIGN 8|0-0-0-0
114116|data|DCD stru_1BC9C|156-188-1-0
114120|data|DCD 0|0-0-0-0
114124|data|DCD dword_0|0-0-0-0
114128|data|DCD __imp_pthread_mutex_unlock|248-210-1-0
114132|data|DCD __imp_raise|252-210-1-0
114136|data|DCD __imp_setbuf|0-211-1-0
114140|data|DCD __imp_strcmp|4-211-1-0
114144|data|DCD __imp___cxa_finalize|8-211-1-0
114148|data|DCD __imp___isoc99_fscanf|12-211-1-0
114152|data|DCD __imp_fopen|16-211-1-0
114156|data|DCD __imp_read|20-211-1-0
114160|data|DCD __imp_fflush|24-211-1-0
114164|data|DCD __imp_wattr_on|28-211-1-0
114168|data|DCD __imp_has_colors|32-211-1-0
114172|data|DCD __imp_waddch|36-211-1-0
114176|data|DCD __imp_free|40-211-1-0
114180|data|DCD __imp_init_color|48-211-1-0
114184|data|DCD __imp_pthread_mutex_lock|52-211-1-0
114188|data|DCD __imp_cbreak|56-211-1-0
114192|data|DCD __imp_ped_device_get_next|60-211-1-0
114196|data|DCD __imp___vsnprintf_chk|68-211-1-0
114200|data|DCD __imp_memcpy|72-211-1-0
114204|data|DCD __imp_sigwait|76-211-1-0
114208|data|DCD __imp_time|80-211-1-0
114212|data|DCD __imp_lseek|84-211-1-0
114216|data|DCD __imp_memcmp|88-211-1-0
114220|data|DCD __imp_hide_panel|92-211-1-0
114224|data|DCD __imp_wborder|96-211-1-0
114228|data|DCD __imp_wbkgdset|104-211-1-0
114232|data|DCD __imp_init_pair|108-211-1-0
114236|data|DCD __imp___stack_chk_fail|112-211-1-0
114240|data|DCD __imp_wrefresh|116-211-1-0
114244|data|DCD __imp_update_panels|120-211-1-0
114248|data|DCD __imp_keypad|124-211-1-0
114252|data|DCD __imp_initscr|128-211-1-0
114256|data|DCD __imp_realloc|132-211-1-0
114260|data|DCD __imp_start_color|136-211-1-0
114264|data|DCD __imp_perror|140-211-1-0
114268|data|DCD __imp_newwin|144-211-1-0
114272|data|DCD __imp_fwrite|152-211-1-0
114276|data|DCD __imp_ioctl|156-211-1-0
114280|data|DCD __imp_pthread_sigmask|160-211-1-0
114284|data|DCD __imp_pthread_create|164-211-1-0
114288|data|DCD __imp_puts|168-211-1-0
114292|data|DCD __imp_malloc|172-211-1-0
114296|data|DCD __imp_del_panel|176-211-1-0
114300|data|DCD __imp_sigaddset|180-211-1-0
114304|data|DCD __imp___libc_start_main|184-211-1-0
114308|data|DCD __imp_strerror|188-211-1-0
114312|data|DCD __imp___fxstat|192-211-1-0
114316|data|DCD __imp_new_panel|196-211-1-0
114320|data|DCD __imp___gmon_start__|164-212-1-0
114324|data|DCD __imp_ped_device_open|200-211-1-0
114328|data|DCD __imp_open|204-211-1-0
114332|data|DCD __imp_getopt_long|208-211-1-0
114336|data|DCD __imp_delwin|212-211-1-0
114340|data|DCD __imp_exit|216-211-1-0
114344|data|DCD __imp_flock|220-211-1-0
114348|data|DCD __imp_halfdelay|228-211-1-0
114352|data|DCD __imp_strlen|232-211-1-0
114356|data|DCD __imp_wprintw|236-211-1-0
114360|data|DCD __imp_reset_prog_mode|240-211-1-0
114364|data|DCD __imp_pthread_attr_init|248-211-1-0
114368|data|DCD __imp_nodelay|252-211-1-0
114372|data|DCD __imp___errno_location|0-212-1-0
114376|data|DCD __imp___isoc99_sscanf|4-212-1-0
114380|data|DCD __imp_memset|8-212-1-0
114384|data|DCD __imp_strncpy|12-212-1-0
114388|data|DCD __imp_pthread_cancel|16-212-1-0
114392|data|DCD __imp_ped_device_close|20-212-1-0
114396|data|DCD __imp_gmtime|24-212-1-0
114400|data|DCD __imp___printf_chk|28-212-1-0
114404|data|DCD __imp_write|32-212-1-0
114408|data|DCD __imp_fileno|36-212-1-0
114412|data|DCD __imp_can_change_color|40-212-1-0
114416|data|DCD __imp_def_prog_mode|44-212-1-0
114420|data|DCD __imp_show_panel|48-212-1-0
114424|data|DCD __imp___fprintf_chk|52-212-1-0
114428|data|DCD __imp_fclose|60-212-1-0
114432|data|DCD __imp_endwin|64-212-1-0
114436|data|DCD __imp_sigemptyset|68-212-1-0
114440|data|DCD __imp_wgetch|72-212-1-0
114444|data|DCD __imp_wclear|80-212-1-0
114448|data|DCD __imp_mvwprintw|84-212-1-0
114452|data|DCD __imp_pthread_join|88-212-1-0
114456|data|DCD __imp_ped_device_get|92-212-1-0
114460|data|DCD __imp_nocbreak|96-212-1-0
114464|data|DCD __imp_noecho|100-212-1-0
114468|data|DCD __imp_doupdate|104-212-1-0
114472|data|DCD __imp_fopen64|108-212-1-0
114476|data|DCD __imp_ped_device_probe_all|112-212-1-0
114480|data|DCD __imp_wmove|116-212-1-0
114484|data|DCD __imp_pthread_testcancel|120-212-1-0
114488|data|DCD __imp_strncat|128-212-1-0
114492|data|DCD __imp_pthread_attr_setdetachstate|132-212-1-0
114496|data|DCD __imp_curs_set|136-212-1-0
114500|data|DCD __imp_fdatasync|140-212-1-0
114504|data|DCD __imp_abort|144-212-1-0
114508|data|DCD __imp_close|148-212-1-0
114512|data|DCD __imp_werase|152-212-1-0
114516|data|DCD __imp___snprintf_chk|156-212-1-0
114520|data|DCD __libc_csu_fini+1|25-136-0-0
114524|data|DCD header_window|160-194-1-0
114528|data|DCD __imp___cxa_finalize|8-211-1-0
114532|data|DCD _ITM_deregisterTMCloneTable|160-212-1-0
114536|data|DCD acs_map|44-211-1-0
114540|data|DCD nwipe_dod522022m+1|105-113-0-0
114544|data|DCD __stack_chk_guard|64-211-1-0
114548|data|DCD nwipe_gui_status+1|193-76-0-0
114552|data|DCD footer_panel|164-194-1-0
114556|data|DCD main_panel|168-194-1-0
114560|data|DCD optind|100-211-1-0
114564|data|DCD nwipe_options|204-194-1-0
114568|data|DCD stats_window|172-194-1-0
114572|data|DCD stderr|148-211-1-0
114576|data|DCD nwipe_random+1|29-118-0-0
114580|data|DCD nwipe_gutmann+1|21-115-0-0
114584|data|DCD __imp___gmon_start__|164-212-1-0
114588|data|DCD nwipe_twister|76-194-1-0
114592|data|DCD COLS|224-211-1-0
114596|data|DCD nwipe_zero+1|41-113-0-0
114600|data|DCD __libc_csu_init+1|217-135-0-0
114604|data|DCD stdscr|244-211-1-0
114608|data|DCD stats_panel|176-194-1-0
114612|data|DCD mutex1|128-194-1-0
114616|data|DCD stdout|56-212-1-0
114620|data|DCD main+1|73-32-0-0
114624|data|DCD LINES|76-212-1-0
114628|data|DCD header_panel|180-194-1-0
114632|data|DCD program_name|104-194-1-0
114636|data|DCD nwipe_ops2+1|97-116-0-0
114640|data|DCD _Jv_RegisterClasses|168-212-1-0
114644|data|DCD log_current_element|152-194-1-0
114648|data|DCD version_string|108-194-1-0
114652|data|DCD log_lines|200-194-1-0
114656|data|DCD options_panel|184-194-1-0
114660|data|DCD options_window|188-194-1-0
114664|data|DCD _ITM_registerTMCloneTable|172-212-1-0
114668|data|DCD main_window|192-194-1-0
114672|data|DCD optarg|124-212-1-0
114676|data|DCD nwipe_dodshort+1|81-114-0-0
114680|data|DCD footer_window|196-194-1-0
114684|data|DCD nwipe_isaac|64-194-1-0
115312|data|% 1; Alternative name is '_edata'|255
115313|data|ALIGN 4|255-255-255
115316|data|% 4|255-255-255-255
115320|data|% 4|255-255-255-255
115324|data|% 4|255-255-255-255
115352|data|% 4|255-255-255-255
115356|data|% 4|255-255-255-255
115360|data|% 4|255-255-255-255
115364|data|% 4|255-255-255-255
115368|data|% 4|255-255-255-255
115372|data|% 4|255-255-255-255
115376|data|% 4|255-255-255-255
115380|data|% 4|255-255-255-255
115384|data|% 4|255-255-255-255
115388|data|% 4|255-255-255-255
115392|data|% 4|255-255-255-255
115396|data|% 4|255-255-255-255
115400|data|% 4|255-255-255-255
115404|data|% 4|255-255-255-255
115408|data|% 4|255-255-255-255
115412|data|% 4|255-255-255-255
115416|data|% 4|255-255-255-255
115420|data|% 4|255-255-255-255
115424|data|% 4|255-255-255-255
115428|data|% 1|255
119524|data|% 4|255-255-255-255
119528|data|% 4|255-255-255-255
119532|data|% 4|255-255-255-255
