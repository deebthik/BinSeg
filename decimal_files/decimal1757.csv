address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|33-156-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x42B0; SHT file offset|176-66-0-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 9; Number of entries in PHT|9-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1D; Number of entries in SHT|29-0
32818|data|DCW 0x1C; SHT entry index for string table|28-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x3BD8; File offset|216-59-0-0
32828|data|DCD unk_BBD8; Virtual address|216-187-0-0
32832|data|DCD 0xBBD8; Physical address|216-187-0-0
32836|data|DCD 0xE8; Size in file image|232-0-0-0
32840|data|DCD 0xE8; Size in memory image|232-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x120; Size in file image|32-1-0-0
32872|data|DCD 0x120; Size in memory image|32-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x154; File offset|84-1-0-0
32892|data|DCD aLibLdLinuxArmh; Virtual address|84-129-0-0
32896|data|DCD 0x8154; Physical address|84-129-0-0
32900|data|DCD 0x19; Size in file image|25-0-0-0
32904|data|DCD 0x19; Size in memory image|25-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x3CC4; Size in file image|196-60-0-0
32936|data|DCD 0x3CC4; Size in memory image|196-60-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x3EE4; File offset|228-62-0-0
32956|data|DCD off_13EE4; Virtual address|228-62-1-0
32960|data|DCD 0x13EE4; Physical address|228-62-1-0
32964|data|DCD 0x298; Size in file image|152-2-0-0
32968|data|DCD 0x2CC; Size in memory image|204-2-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x3EF0; File offset|240-62-0-0
32988|data|DCD stru_13EF0; Virtual address|240-62-1-0
32992|data|DCD 0x13EF0; Physical address|240-62-1-0
32996|data|DCD 0x110; Size in file image|16-1-0-0
33000|data|DCD 0x110; Size in memory image|16-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x170; File offset|112-1-0-0
33020|data|DCD dword_8170; Virtual address|112-129-0-0
33024|data|DCD 0x8170; Physical address|112-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
33080|data|DCD 0x3EE4; File offset|228-62-0-0
33084|data|DCD off_13EE4; Virtual address|228-62-1-0
33088|data|DCD 0x13EE4; Physical address|228-62-1-0
33092|data|DCD 0x11C; Size in file image|28-1-0-0
33096|data|DCD 0x11C; Size in memory image|28-1-0-0
33100|data|DCD 4; Flags|4-0-0-0
33104|data|DCD 1; Alignment|1-0-0-0
33108|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
33133|data|DCB 0, 0, 0|0-0-0
33136|data|DCD 4; Name Size|4-0-0-0
33140|data|DCD 0x10; Desc Size|16-0-0-0
33144|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33148|data|DCB "GNU",0; Name|71-78-85-0
33152|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
33168|data|DCD 4; Name Size|4-0-0-0
33172|data|DCD 0x14; Desc Size|20-0-0-0
33176|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33180|data|DCB "GNU",0; Name|71-78-85-0
33184|data|DCB 0x90, 0xE2, 0xB9, 0xF3, 0x36, 4, 0x4C, 0x35, 0xE8; Desc|144-226-185-243-54-4-76-53-232-150-75-168-161-36-49-232-99-28-214-193
33204|data|DCD 0x25|37-0-0-0
33208|data|DCD 0x39|57-0-0-0
33212|data|DCD 0x19, 5, 0x10, 0, 0x35, 0xA, 0, 0, 0x1E, 0x15, 0, 0x14|25-0-0-0-5-0-0-0-16-0-0-0-0-0-0-0-53-0-0-0-10-0-0-0-0-0-0-0-0-0-0-0-30-0-0-0-21-0-0-0-0-0-0-0-20-0-0-0-0-0-0-0-45-0-0-0-24-0-0-0-49-0-0-0-26-0-0-0-29-0-0-0-51-0-0-0-27-0-0-0-36-0-0-0-0-0-0-0-0-0-0-0-9-0-0-0-15-0-0-0-7-0-0-0-55-0-0-0-28-0-0-0-11-0-0-0-31-0-0-0-33-0-0-0-0-0-0-0-8-0-0-0-52-0-0-0-47-0-0-0-0-0-0-0-40-0-0-0
33360|data|DCD 0, 0, 0, 0, 0, 3, 0, 0, 0x20, 0x2E, 0, 0x30, 0x12|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-3-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0-46-0-0-0-0-0-0-0-48-0-0-0-18-0-0-0-2-0-0-0-50-0-0-0-0-0-0-0-34-0-0-0-0-0-0-0-0-0-0-0-41-0-0-0-35-0-0-0-17-0-0-0-0-0-0-0-39-0-0-0-38-0-0-0-0-0-0-0-0-0-0-0-23-0-0-0-37-0-0-0-0-0-0-0-13-0-0-0-56-0-0-0-0-0-0-0-44-0-0-0-6-0-0-0-14-0-0-0-0-0-0-0-0-0-0-0-42-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-12-0-0-0-19-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-54-0-0-0-0-0-0-0-0-0-0-0-22-0-0-0-1-0-0-0-43-0-0-0-0-0-0-0-4-0-0-0
33588|data|DCD 0x25|37-0-0-0
33592|data|DCD 4|4-0-0-0
33596|data|DCD 0x10|16-0-0-0
33600|data|DCD 9|9-0-0-0
33604|data|DCD 0xE20880, 0x922B4285, 0x820000, 0, 0x424C202, 0x60220|128-8-226-0-133-66-43-146-0-0-130-0-0-0-0-0-2-194-36-4-32-2-6-0-0-0-8-16-1-170-64-144-34-130-66-40-178-10-32-4-161-0-0-0-112-40-195-49-129-48-1-36-132-68-4-64-0-54-32-16-0-0-17-0
33668|data|DCD 0, 4, 6, 8, 9, 0xC, 0xF, 0x11, 0, 0x12, 0x13, 0x14|0-0-0-0-4-0-0-0-6-0-0-0-8-0-0-0-9-0-0-0-12-0-0-0-15-0-0-0-17-0-0-0-0-0-0-0-18-0-0-0-19-0-0-0-20-0-0-0-0-0-0-0-22-0-0-0-25-0-0-0-0-0-0-0-27-0-0-0-29-0-0-0-31-0-0-0-32-0-0-0-34-0-0-0-37-0-0-0-0-0-0-0-39-0-0-0-0-0-0-0-41-0-0-0-42-0-0-0-43-0-0-0-44-0-0-0-45-0-0-0-0-0-0-0-0-0-0-0-46-0-0-0-0-0-0-0-47-0-0-0-50-0-0-0-52-0-0-0
33816|data|DCD 0xF51166DC, 0x5FFA8FBF, 0xCB2280E8, 0x4D16FB9D, 0xB52C9C29|220-102-17-245-191-143-250-95-232-128-34-203-157-251-22-77-41-156-44-181-174-213-49-25-168-138-97-204-205-85-233-14-124-139-115-15-46-42-135-35-33-98-100-7-70-11-170-125-37-19-147-59-113-47-105-131-47-78-61-246-255-236-132-20-140-89-64-241-57-242-139-28-124-237-17-15-162-37-145-121-71-1-117-15-50-142-117-15-81-238-17-227-50-196-247-18-7-174-213-39-34-190-15-175-53-23-84-146-63-126-150-124-48-184-130-13-5-67-237-8-144-117-130-13-118-205-79-73-121-73-107-182-136-158-104-142-205-235-137-125-36-117-130-13-179-162-247-18-33-207-9-253-129-143-207-61-237-222-147-28-201-57-64-31-11-226-235-180-129-36-216-62-244-97-14-236-124-27-118-15-149-92-126-195-146-180-99-87-17-123-156-124-112-87-50-29-234-56-131-212-22-234-118-254-26-159-214-189-23-83-10-206
34028|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34044|data|Elf32_Sym <aAeabiUnwindCpp - byte_887C, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|231-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
34060|data|Elf32_Sym <aGmonStart - byte_887C, 0, 0, 0x20, 0, 0>; "__gmon_start__"|16-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34076|data|Elf32_Sym <aJvRegisterclas - byte_887C, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|31-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
34092|data|Elf32_Sym <aCxaEndCleanup - byte_887C, __cxa_end_cleanup, 0, 0x12, 0, \; "__cxa_end_cleanup"|89-1-0-0-52-144-0-0-0-0-0-0-18-0-0-0
34108|data|Elf32_Sym <aZnss15MReplace - byte_887C, _ZNSs15_M_replace_safeEjjPKcj,\; "_ZNSs15_M_replace_safeEjjPKcj" ...|74-2-0-0-148-145-0-0-0-0-0-0-18-0-0-0
34124|data|Elf32_Sym <aZnss4Rep10MDes - byte_887C, \; "_ZNSs4_Rep10_M_destroyERKSaIcE" ...|155-2-0-0-112-144-0-0-0-0-0-0-18-0-0-0
34140|data|Elf32_Sym <aZst29RbTreeIns - byte_887C, \; "_ZSt29_Rb_tree_insert_and_rebalancebPSt"... ...|156-1-0-0-16-145-0-0-0-0-0-0-18-0-0-0
34156|data|Elf32_Sym <aZnss9MMutateej - byte_887C, _ZNSs9_M_mutateEjjj, 0, 0x12, \; "_ZNSs9_M_mutateEjjj" ...|69-1-0-0-4-145-0-0-0-0-0-0-18-0-0-0
34172|data|Elf32_Sym <aRewind - byte_887C, rewind, 0, 0x12, 0, 0>; "rewind"|80-3-0-0-208-143-0-0-0-0-0-0-18-0-0-0
34188|data|Elf32_Sym <aZnkss4findepkc - byte_887C, _ZNKSs4findEPKcjj, 0, 0x12, 0,\; "_ZNKSs4findEPKcjj" ...|137-2-0-0-136-144-0-0-0-0-0-0-18-0-0-0
34204|data|Elf32_Sym <aZnwj - byte_887C, _Znwj, 0, 0x12, 0, 0>; "_Znwj" ...|51-0-0-0-232-144-0-0-0-0-0-0-18-0-0-0
34220|data|Elf32_Sym <aFopen - byte_887C, fopen, 0, 0x12, 0, 0>; "fopen"|26-3-0-0-12-144-0-0-0-0-0-0-18-0-0-0
34236|data|Elf32_Sym <aZnssc1erkss - byte_887C, _ZNSsC1ERKSs, 0, 0x12, 0, 0>; "_ZNSsC1ERKSs" ...|104-0-0-0-64-144-0-0-0-0-0-0-18-0-0-0
34252|data|Elf32_Sym <aStackChkGuard - byte_887C, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|235-3-0-0-136-65-1-0-4-0-0-0-17-0-26-0
34268|data|Elf32_Sym <aZst18RbTreeDec - byte_887C, \; "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_n"... ...|117-0-0-0-24-144-0-0-0-0-0-0-18-0-0-0
34284|data|Elf32_Sym <aZnss4Rep9SCrea - byte_887C, \; "_ZNSs4_Rep9_S_createEjjRKSaIcE" ...|57-0-0-0-112-145-0-0-0-0-0-0-18-0-0-0
34300|data|Elf32_Sym <aZnss14MReplace - byte_887C, _ZNSs14_M_replace_auxEjjjc, 0,\; "_ZNSs14_M_replace_auxEjjjc" ...|28-1-0-0-52-145-0-0-0-0-0-0-18-0-0-0
34316|data|Elf32_Sym <aLibcStartMain - byte_887C, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|197-3-0-0-172-143-0-0-0-0-0-0-18-0-0-0
34332|data|Elf32_Sym <aPerror - byte_887C, perror, 0, 0x12, 0, 0>; "perror"|39-3-0-0-76-144-0-0-0-0-0-0-18-0-0-0
34348|data|Elf32_Sym <aZnss4Rep20SEmp - byte_887C, \; "_ZNSs4_Rep20_S_empty_rep_storageE" ...|40-2-0-0-140-65-1-0-16-0-0-0-161-0-26-0
34364|data|Elf32_Sym <aStderr - byte_887C, stderr, 4, 0x11, 0, 0x1A>; "stderr"|157-3-0-0-160-65-1-0-4-0-0-0-17-0-26-0
34380|data|Elf32_Sym <aAbort - byte_887C, abort, 0, 0x12, 0, 0>; "abort"|74-3-0-0-136-143-0-0-0-0-0-0-18-0-0-0
34396|data|Elf32_Sym <aZnssd1ev - byte_887C, _ZNSsD1Ev, 0, 0x12, 0, 0>; "_ZNSsD1Ev" ...|104-2-0-0-88-144-0-0-0-0-0-0-18-0-0-0
34412|data|Elf32_Sym <aFread - byte_887C, fread, 0, 0x12, 0, 0>; "fread"|183-3-0-0-160-145-0-0-0-0-0-0-18-0-0-0
34428|data|Elf32_Sym <aFseek - byte_887C, fseek, 0, 0x12, 0, 0>; "fseek"|101-3-0-0-124-144-0-0-0-0-0-0-18-0-0-0
34444|data|Elf32_Sym <aFprintfChk - byte_887C, __fprintf_chk, 0, 0x12, 0, 0>; "__fprintf_chk"|114-3-0-0-40-145-0-0-0-0-0-0-18-0-0-0
34460|data|Elf32_Sym <aOptind - byte_887C, optind, 4, 0x11, 0, 0x1A>; "optind"|32-3-0-0-128-65-1-0-4-0-0-0-17-0-26-0
34476|data|Elf32_Sym <aGetoptLong - byte_887C, getopt_long, 0, 0x12, 0, 0>; "getopt_long"|164-3-0-0-100-144-0-0-0-0-0-0-18-0-0-0
34492|data|Elf32_Sym <aStrtoul - byte_887C, strtoul, 0, 0x12, 0, 0>; "strtoul"|142-3-0-0-148-144-0-0-0-0-0-0-18-0-0-0
34508|data|Elf32_Sym <aZnssc1epkcjrks - byte_887C, _ZNSsC1EPKcjRKSaIcE, 0, 0x12, \; "_ZNSsC1EPKcjRKSaIcE" ...|239-1-0-0-124-145-0-0-0-0-0-0-18-0-0-0
34524|data|Elf32_Sym <aExit - byte_887C, exit, 0, 0x12, 0, 0>; "exit"|21-3-0-0-196-145-0-0-0-0-0-0-18-0-0-0
34540|data|Elf32_Sym <aMemset - byte_887C, memset, 0, 0x12, 0, 0>; "memset"|94-3-0-0-40-144-0-0-0-0-0-0-18-0-0-0
34556|data|Elf32_Sym <aCxaBeginCatch - byte_887C, __cxa_begin_catch, 0, 0x12, 0, \; "__cxa_begin_catch"|3-2-0-0-136-145-0-0-0-0-0-0-18-0-0-0
34572|data|Elf32_Sym <aMemcpy - byte_887C, memcpy, 0, 0x12, 0, 0>; "memcpy"|128-3-0-0-172-144-0-0-0-0-0-0-18-0-0-0
34588|data|Elf32_Sym <aCxaEndCatch - byte_887C, __cxa_end_catch, 0, 0x12, 0, 0>; "__cxa_end_catch"|121-2-0-0-100-145-0-0-0-0-0-0-18-0-0-0
34604|data|Elf32_Sym <aGxxPersonality - byte_887C, __gxx_personality_v0, 0, 0x12,\; "__gxx_personality_v0"|186-2-0-0-172-145-0-0-0-0-0-0-18-0-0-0
34620|data|Elf32_Sym <aCxaRethrow - byte_887C, __cxa_rethrow, 0, 0x12, 0, 0>; "__cxa_rethrow"|55-1-0-0-0-144-0-0-0-0-0-0-18-0-0-0
34636|data|Elf32_Sym <aZnss6resizeejc - byte_887C, _ZNSs6resizeEjc, 0, 0x12, 0, \; "_ZNSs6resizeEjc" ...|88-0-0-0-184-144-0-0-0-0-0-0-18-0-0-0
34652|data|Elf32_Sym <aMemcmp - byte_887C, memcmp, 0, 0x12, 0, 0>; "memcmp"|107-3-0-0-160-143-0-0-0-0-0-0-18-0-0-0
34668|data|Elf32_Sym <aOptarg - byte_887C, optarg, 4, 0x11, 0, 0x1A>; "optarg"|150-3-0-0-168-65-1-0-4-0-0-0-17-0-26-0
34684|data|Elf32_Sym <aFclose - byte_887C, fclose, 0, 0x12, 0, 0>; "fclose"|135-3-0-0-232-143-0-0-0-0-0-0-18-0-0-0
34700|data|Elf32_Sym <aZst18RbTreeInc - byte_887C, \; "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_"... ...|107-1-0-0-160-144-0-0-0-0-0-0-18-0-0-0
34716|data|Elf32_Sym <aStrtol - byte_887C, strtol, 0, 0x12, 0, 0>; "strtol"|87-3-0-0-220-144-0-0-0-0-0-0-18-0-0-0
34732|data|Elf32_Sym <aStackChkFail - byte_887C, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|57-3-0-0-28-145-0-0-0-0-0-0-18-0-0-0
34748|data|Elf32_Sym <aPrintfChk - byte_887C, __printf_chk, 0, 0x12, 0, 0>; "__printf_chk"|8-3-0-0-244-143-0-0-0-0-0-0-18-0-0-0
34764|data|Elf32_Sym <aZst20ThrowLeng - byte_887C, _ZSt20__throw_length_errorPKc,\; "_ZSt20__throw_length_errorPKc" ...|254-0-0-0-124-143-0-0-0-0-0-0-18-0-0-0
34780|data|Elf32_Sym <aZdlpv - byte_887C, _ZdlPv, 0, 0x12, 0, 0>; "_ZdlPv" ...|114-2-0-0-220-143-0-0-0-0-0-0-18-0-0-0
34796|data|Elf32_Sym <aFtell - byte_887C, ftell, 0, 0x12, 0, 0>; "ftell"|46-3-0-0-208-144-0-0-0-0-0-0-18-0-0-0
34812|data|Elf32_Sym <aZnss6assignerk - byte_887C, _ZNSs6assignERKSs, 0, 0x12, 0,\; "_ZNSs6assignERKSs" ...|236-0-0-0-64-145-0-0-0-0-0-0-18-0-0-0
34828|data|Elf32_Sym <aZst18RbTreeDec_0 - byte_887C, \; "_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_"... ...|187-0-0-0-148-143-0-0-0-0-0-0-18-0-0-0
34844|data|Elf32_Sym <aPuts - byte_887C, puts, 0, 0x12, 0, 0>; "puts"|52-3-0-0-88-145-0-0-0-0-0-0-18-0-0-0
34860|data|Elf32_Sym <aZnss6assignepk - byte_887C, _ZNSs6assignEPKc, 0, 0x12, 0, \; "_ZNSs6assignEPKc" ...|222-1-0-0-184-143-0-0-0-0-0-0-18-0-0-0
34876|data|Elf32_Sym <aZnssc1epkcrksa - byte_887C, _ZNSsC1EPKcRKSaIcE, 0, 0x12, \; "_ZNSsC1EPKcRKSaIcE" ...|21-2-0-0-196-144-0-0-0-0-0-0-18-0-0-0
34892|data|Elf32_Sym <aFwrite - byte_887C, fwrite, 0, 0x12, 0, 0>; "fwrite"|176-3-0-0-244-144-0-0-0-0-0-0-18-0-0-0
34908|data|Elf32_Sym <aMemmove - byte_887C, memmove, 0, 0x12, 0, 0>; "memmove"|189-3-0-0-76-145-0-0-0-0-0-0-18-0-0-0
34924|data|Elf32_Sym <aZnss12MLeakHar - byte_887C, _ZNSs12_M_leak_hardEv, 0, \; "_ZNSs12_M_leak_hardEv" ...|165-0-0-0-184-145-0-0-0-0-0-0-18-0-0-0
34940|data|DCB 0|0
34941|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
34956|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
34971|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
34991|data|DCB "_Znwj",0|95-90-110-119-106-0
34997|data|DCB "_ZNSs4_Rep9_S_createEjjRKSaIcE",0|95-90-78-83-115-52-95-82-101-112-57-95-83-95-99-114-101-97-116-101-69-106-106-82-75-83-97-73-99-69-0
35028|data|DCB "_ZNSs6resizeEjc",0|95-90-78-83-115-54-114-101-115-105-122-101-69-106-99-0
35044|data|DCB "_ZNSsC1ERKSs",0|95-90-78-83-115-67-49-69-82-75-83-115-0
35057|data|DCB "_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-100-101-99-114-101-109-101-110-116-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
35105|data|DCB "_ZNSs12_M_leak_hardEv",0|95-90-78-83-115-49-50-95-77-95-108-101-97-107-95-104-97-114-100-69-118-0
35127|data|DCB "_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-100-101-99-114-101-109-101-110-116-80-75-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
35176|data|DCB "_ZNSs6assignERKSs",0|95-90-78-83-115-54-97-115-115-105-103-110-69-82-75-83-115-0
35194|data|DCB "_ZSt20__throw_length_errorPKc",0|95-90-83-116-50-48-95-95-116-104-114-111-119-95-108-101-110-103-116-104-95-101-114-114-111-114-80-75-99-0
35224|data|DCB "_ZNSs14_M_replace_auxEjjjc",0|95-90-78-83-115-49-52-95-77-95-114-101-112-108-97-99-101-95-97-117-120-69-106-106-106-99-0
35251|data|DCB "__cxa_rethrow",0|95-95-99-120-97-95-114-101-116-104-114-111-119-0
35265|data|DCB "_ZNSs9_M_mutateEjjj",0|95-90-78-83-115-57-95-77-95-109-117-116-97-116-101-69-106-106-106-0
35285|data|DCB "__cxa_end_cleanup",0|95-95-99-120-97-95-101-110-100-95-99-108-101-97-110-117-112-0
35303|data|DCB "_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base",0|95-90-83-116-49-56-95-82-98-95-116-114-101-101-95-105-110-99-114-101-109-101-110-116-80-75-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-0
35352|data|DCB "_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS"|95-90-83-116-50-57-95-82-98-95-116-114-101-101-95-105-110-115-101-114-116-95-97-110-100-95-114-101-98-97-108-97-110-99-101-98-80-83-116-49-56-95-82-98-95-116-114-101-101-95-110-111-100-101-95-98-97-115-101-83-48-95-82-83-95-0
35418|data|DCB "_ZNSs6assignEPKc",0|95-90-78-83-115-54-97-115-115-105-103-110-69-80-75-99-0
35435|data|DCB "_ZNSsC1EPKcjRKSaIcE",0|95-90-78-83-115-67-49-69-80-75-99-106-82-75-83-97-73-99-69-0
35455|data|DCB "__cxa_begin_catch",0|95-95-99-120-97-95-98-101-103-105-110-95-99-97-116-99-104-0
35473|data|DCB "_ZNSsC1EPKcRKSaIcE",0|95-90-78-83-115-67-49-69-80-75-99-82-75-83-97-73-99-69-0
35492|data|DCB "_ZNSs4_Rep20_S_empty_rep_storageE",0|95-90-78-83-115-52-95-82-101-112-50-48-95-83-95-101-109-112-116-121-95-114-101-112-95-115-116-111-114-97-103-101-69-0
35526|data|DCB "_ZNSs15_M_replace_safeEjjPKcj",0|95-90-78-83-115-49-53-95-77-95-114-101-112-108-97-99-101-95-115-97-102-101-69-106-106-80-75-99-106-0
35556|data|DCB "_ZNSsD1Ev",0|95-90-78-83-115-68-49-69-118-0
35566|data|DCB "_ZdlPv",0|95-90-100-108-80-118-0
35573|data|DCB "__cxa_end_catch",0|95-95-99-120-97-95-101-110-100-95-99-97-116-99-104-0
35589|data|DCB "_ZNKSs4findEPKcjj",0|95-90-78-75-83-115-52-102-105-110-100-69-80-75-99-106-106-0
35607|data|DCB "_ZNSs4_Rep10_M_destroyERKSaIcE",0|95-90-78-83-115-52-95-82-101-112-49-48-95-77-95-100-101-115-116-114-111-121-69-82-75-83-97-73-99-69-0
35638|data|DCB "__gxx_personality_v0",0|95-95-103-120-120-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
35659|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
35669|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
35683|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
35706|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
35716|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
35729|data|DCB "exit",0|101-120-105-116-0
35734|data|DCB "fopen",0|102-111-112-101-110-0
35740|data|DCB "optind",0|111-112-116-105-110-100-0
35747|data|DCB "perror",0|112-101-114-114-111-114-0
35754|data|DCB "ftell",0|102-116-101-108-108-0
35760|data|DCB "puts",0|112-117-116-115-0
35765|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
35782|data|DCB "abort",0|97-98-111-114-116-0
35788|data|DCB "rewind",0|114-101-119-105-110-100-0
35795|data|DCB "strtol",0|115-116-114-116-111-108-0
35802|data|DCB "memset",0|109-101-109-115-101-116-0
35809|data|DCB "fseek",0|102-115-101-101-107-0
35815|data|DCB "memcmp",0|109-101-109-99-109-112-0
35822|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
35836|data|DCB "memcpy",0|109-101-109-99-112-121-0
35843|data|DCB "fclose",0|102-99-108-111-115-101-0
35850|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
35858|data|DCB "optarg",0|111-112-116-97-114-103-0
35865|data|DCB "stderr",0|115-116-100-101-114-114-0
35872|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
35884|data|DCB "fwrite",0|102-119-114-105-116-101-0
35891|data|DCB "fread",0|102-114-101-97-100-0
35897|data|DCB "memmove",0|109-101-109-109-111-118-101-0
35905|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
35923|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
35943|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
35961|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
35971|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
35979|data|DCB "CXXABI_1.3",0|67-88-88-65-66-73-95-49-46-51-0
35990|data|DCB "GLIBCXX_3.4",0|71-76-73-66-67-88-88-95-51-46-52-0
36002|data|DCW 0|0-0
36004|data|DCW 4; __aeabi_unwind_cpp_pr0@@GCC_3.5|4-0
36006|data|DCW 0; local  symbol: __gmon_start__|0-0
36008|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
36010|data|DCW 5; __cxa_end_cleanup@@CXXABI_1.3|5-0
36012|data|DCW 2; _ZNSs15_M_replace_safeEjjPKcj@@GLIBCXX_3.4|2-0
36014|data|DCW 2; _ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4|2-0
36016|data|DCW 2; _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4|2-0
36018|data|DCW 2; _ZNSs9_M_mutateEjjj@@GLIBCXX_3.4|2-0
36020|data|DCW 3; rewind@@GLIBC_2.4|3-0
36022|data|DCW 2; _ZNKSs4findEPKcjj@@GLIBCXX_3.4|2-0
36024|data|DCW 2; _Znwj@@GLIBCXX_3.4|2-0
36026|data|DCW 3; fopen@@GLIBC_2.4|3-0
36028|data|DCW 2; _ZNSsC1ERKSs@@GLIBCXX_3.4|2-0
36030|data|DCW 6; __stack_chk_guard@@GLIBC_2.4|6-0
36032|data|DCW 2; _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4|2-0
36034|data|DCW 2; _ZNSs4_Rep9_S_createEjjRKSaIcE@@GLIBCXX_3.4|2-0
36036|data|DCW 2; _ZNSs14_M_replace_auxEjjjc@@GLIBCXX_3.4|2-0
36038|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
36040|data|DCW 3; perror@@GLIBC_2.4|3-0
36042|data|DCW 2; _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4|2-0
36044|data|DCW 3; stderr@@GLIBC_2.4|3-0
36046|data|DCW 3; abort@@GLIBC_2.4|3-0
36048|data|DCW 2; _ZNSsD1Ev@@GLIBCXX_3.4|2-0
36050|data|DCW 3; fread@@GLIBC_2.4|3-0
36052|data|DCW 3; fseek@@GLIBC_2.4|3-0
36054|data|DCW 3; __fprintf_chk@@GLIBC_2.4|3-0
36056|data|DCW 3; optind@@GLIBC_2.4|3-0
36058|data|DCW 3; getopt_long@@GLIBC_2.4|3-0
36060|data|DCW 3; strtoul@@GLIBC_2.4|3-0
36062|data|DCW 2; _ZNSsC1EPKcjRKSaIcE@@GLIBCXX_3.4|2-0
36064|data|DCW 3; exit@@GLIBC_2.4|3-0
36066|data|DCW 3; memset@@GLIBC_2.4|3-0
36068|data|DCW 5; __cxa_begin_catch@@CXXABI_1.3|5-0
36070|data|DCW 3; memcpy@@GLIBC_2.4|3-0
36072|data|DCW 5; __cxa_end_catch@@CXXABI_1.3|5-0
36074|data|DCW 5; __gxx_personality_v0@@CXXABI_1.3|5-0
36076|data|DCW 5; __cxa_rethrow@@CXXABI_1.3|5-0
36078|data|DCW 2; _ZNSs6resizeEjc@@GLIBCXX_3.4|2-0
36080|data|DCW 3; memcmp@@GLIBC_2.4|3-0
36082|data|DCW 3; optarg@@GLIBC_2.4|3-0
36084|data|DCW 3; fclose@@GLIBC_2.4|3-0
36086|data|DCW 2; _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4|2-0
36088|data|DCW 3; strtol@@GLIBC_2.4|3-0
36090|data|DCW 3; __stack_chk_fail@@GLIBC_2.4|3-0
36092|data|DCW 3; __printf_chk@@GLIBC_2.4|3-0
36094|data|DCW 2; _ZSt20__throw_length_errorPKc@@GLIBCXX_3.4|2-0
36096|data|DCW 2; _ZdlPv@@GLIBCXX_3.4|2-0
36098|data|DCW 3; ftell@@GLIBC_2.4|3-0
36100|data|DCW 2; _ZNSs6assignERKSs@@GLIBCXX_3.4|2-0
36102|data|DCW 2; _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4|2-0
36104|data|DCW 3; puts@@GLIBC_2.4|3-0
36106|data|DCW 2; _ZNSs6assignEPKc@@GLIBCXX_3.4|2-0
36108|data|DCW 2; _ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4|2-0
36110|data|DCW 3; fwrite@@GLIBC_2.4|3-0
36112|data|DCW 3; memmove@@GLIBC_2.4|3-0
36114|data|DCW 2; _ZNSs12_M_leak_hardEv@@GLIBCXX_3.4|2-0
36116|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_887C, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-215-3-0-0-16-0-0-0-32-0-0-0
36132|data|Elf32_Vernaux <0xD696914, 0, 6, aGlibc24 - byte_887C, 0>; "GLIBC_2.4"|20-105-105-13-0-0-6-0-253-3-0-0-0-0-0-0
36148|data|Elf32_Verneed <1, 1, aLibgccSSo1 - byte_887C, 0x10, 0x20>; "libgcc_s.so.1"|1-0-1-0-217-2-0-0-16-0-0-0-32-0-0-0
36164|data|Elf32_Vernaux <0xB792655, 0, 4, aGcc35 - byte_887C, 0>; "GCC_3.5"|85-38-121-11-0-0-4-0-7-4-0-0-0-0-0-0
36180|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_887C, 0x10, 0x20>; "libc.so.6"|1-0-1-0-254-2-0-0-16-0-0-0-32-0-0-0
36196|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_887C, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-253-3-0-0-0-0-0-0
36212|data|Elf32_Verneed <1, 2, aLibstdcSo6 - byte_887C, 0x10, 0>; "libstdc++.so.6"|1-0-2-0-1-0-0-0-16-0-0-0-0-0-0-0
36228|data|Elf32_Vernaux <0x56BAFD3, 0, 5, aCxxabi13 - byte_887C, 0x10>; "CXXABI_1.3"|211-175-107-5-0-0-5-0-15-4-0-0-16-0-0-0
36244|data|Elf32_Vernaux <0x8922974, 0, 2, aGlibcxx34 - byte_887C, 0>; "GLIBCXX_3.4"|116-41-146-8-0-0-2-0-26-4-0-0-0-0-0-0
36260|data|Elf32_Rel <0x140D0, 0x215>; R_ARM_GLOB_DAT __gmon_start__|208-64-1-0-21-2-0-0
36268|data|Elf32_Rel <0x14180, 0x1B14>; R_ARM_COPY optind|128-65-1-0-20-27-0-0
36276|data|Elf32_Rel <0x14188, 0xE14>; R_ARM_COPY __stack_chk_guard|136-65-1-0-20-14-0-0
36284|data|Elf32_Rel <0x1418C, 0x1414>; R_ARM_COPY _ZNSs4_Rep20_S_empty_rep_storageE|140-65-1-0-20-20-0-0
36292|data|Elf32_Rel <0x141A0, 0x1514>; R_ARM_COPY stderr|160-65-1-0-20-21-0-0
36300|data|Elf32_Rel <0x141A8, 0x2814>; R_ARM_COPY optarg|168-65-1-0-20-40-0-0
36308|data|Elf32_Rel <0x1400C, 0x2E16>; R_ARM_JUMP_SLOT _ZSt20__throw_length_errorPKc|12-64-1-0-22-46-0-0
36316|data|Elf32_Rel <0x14010, 0x1616>; R_ARM_JUMP_SLOT abort|16-64-1-0-22-22-0-0
36324|data|Elf32_Rel <0x14014, 0x3216>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base|20-64-1-0-22-50-0-0
36332|data|Elf32_Rel <0x14018, 0x2716>; R_ARM_JUMP_SLOT memcmp|24-64-1-0-22-39-0-0
36340|data|Elf32_Rel <0x1401C, 0x1216>; R_ARM_JUMP_SLOT __libc_start_main|28-64-1-0-22-18-0-0
36348|data|Elf32_Rel <0x14020, 0x3416>; R_ARM_JUMP_SLOT _ZNSs6assignEPKc|32-64-1-0-22-52-0-0
36356|data|Elf32_Rel <0x14024, 0x216>; R_ARM_JUMP_SLOT __gmon_start__|36-64-1-0-22-2-0-0
36364|data|Elf32_Rel <0x14028, 0x916>; R_ARM_JUMP_SLOT rewind|40-64-1-0-22-9-0-0
36372|data|Elf32_Rel <0x1402C, 0x2F16>; R_ARM_JUMP_SLOT _ZdlPv|44-64-1-0-22-47-0-0
36380|data|Elf32_Rel <0x14030, 0x2916>; R_ARM_JUMP_SLOT fclose|48-64-1-0-22-41-0-0
36388|data|Elf32_Rel <0x14034, 0x2D16>; R_ARM_JUMP_SLOT __printf_chk|52-64-1-0-22-45-0-0
36396|data|Elf32_Rel <0x14038, 0x2516>; R_ARM_JUMP_SLOT __cxa_rethrow|56-64-1-0-22-37-0-0
36404|data|Elf32_Rel <0x1403C, 0xC16>; R_ARM_JUMP_SLOT fopen|60-64-1-0-22-12-0-0
36412|data|Elf32_Rel <0x14040, 0xF16>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base|64-64-1-0-22-15-0-0
36420|data|Elf32_Rel <0x14044, 0x2016>; R_ARM_JUMP_SLOT memset|68-64-1-0-22-32-0-0
36428|data|Elf32_Rel <0x14048, 0x416>; R_ARM_JUMP_SLOT __cxa_end_cleanup|72-64-1-0-22-4-0-0
36436|data|Elf32_Rel <0x1404C, 0xD16>; R_ARM_JUMP_SLOT _ZNSsC1ERKSs|76-64-1-0-22-13-0-0
36444|data|Elf32_Rel <0x14050, 0x1316>; R_ARM_JUMP_SLOT perror|80-64-1-0-22-19-0-0
36452|data|Elf32_Rel <0x14054, 0x1716>; R_ARM_JUMP_SLOT _ZNSsD1Ev|84-64-1-0-22-23-0-0
36460|data|Elf32_Rel <0x14058, 0x1C16>; R_ARM_JUMP_SLOT getopt_long|88-64-1-0-22-28-0-0
36468|data|Elf32_Rel <0x1405C, 0x616>; R_ARM_JUMP_SLOT _ZNSs4_Rep10_M_destroyERKSaIcE|92-64-1-0-22-6-0-0
36476|data|Elf32_Rel <0x14060, 0x1916>; R_ARM_JUMP_SLOT fseek|96-64-1-0-22-25-0-0
36484|data|Elf32_Rel <0x14064, 0xA16>; R_ARM_JUMP_SLOT _ZNKSs4findEPKcjj|100-64-1-0-22-10-0-0
36492|data|Elf32_Rel <0x14068, 0x1D16>; R_ARM_JUMP_SLOT strtoul|104-64-1-0-22-29-0-0
36500|data|Elf32_Rel <0x1406C, 0x2A16>; R_ARM_JUMP_SLOT _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base|108-64-1-0-22-42-0-0
36508|data|Elf32_Rel <0x14070, 0x2216>; R_ARM_JUMP_SLOT memcpy|112-64-1-0-22-34-0-0
36516|data|Elf32_Rel <0x14074, 0x2616>; R_ARM_JUMP_SLOT _ZNSs6resizeEjc|116-64-1-0-22-38-0-0
36524|data|Elf32_Rel <0x14078, 0x3516>; R_ARM_JUMP_SLOT _ZNSsC1EPKcRKSaIcE|120-64-1-0-22-53-0-0
36532|data|Elf32_Rel <0x1407C, 0x3016>; R_ARM_JUMP_SLOT ftell|124-64-1-0-22-48-0-0
36540|data|Elf32_Rel <0x14080, 0x2B16>; R_ARM_JUMP_SLOT strtol|128-64-1-0-22-43-0-0
36548|data|Elf32_Rel <0x14084, 0xB16>; R_ARM_JUMP_SLOT _Znwj|132-64-1-0-22-11-0-0
36556|data|Elf32_Rel <0x14088, 0x3616>; R_ARM_JUMP_SLOT fwrite|136-64-1-0-22-54-0-0
36564|data|Elf32_Rel <0x1408C, 0x816>; R_ARM_JUMP_SLOT _ZNSs9_M_mutateEjjj|140-64-1-0-22-8-0-0
36572|data|Elf32_Rel <0x14090, 0x716>; R_ARM_JUMP_SLOT _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_|144-64-1-0-22-7-0-0
36580|data|Elf32_Rel <0x14094, 0x2C16>; R_ARM_JUMP_SLOT __stack_chk_fail|148-64-1-0-22-44-0-0
36588|data|Elf32_Rel <0x14098, 0x1A16>; R_ARM_JUMP_SLOT __fprintf_chk|152-64-1-0-22-26-0-0
36596|data|Elf32_Rel <0x1409C, 0x1116>; R_ARM_JUMP_SLOT _ZNSs14_M_replace_auxEjjjc|156-64-1-0-22-17-0-0
36604|data|Elf32_Rel <0x140A0, 0x3116>; R_ARM_JUMP_SLOT _ZNSs6assignERKSs|160-64-1-0-22-49-0-0
36612|data|Elf32_Rel <0x140A4, 0x3716>; R_ARM_JUMP_SLOT memmove|164-64-1-0-22-55-0-0
36620|data|Elf32_Rel <0x140A8, 0x3316>; R_ARM_JUMP_SLOT puts|168-64-1-0-22-51-0-0
36628|data|Elf32_Rel <0x140AC, 0x2316>; R_ARM_JUMP_SLOT __cxa_end_catch|172-64-1-0-22-35-0-0
36636|data|Elf32_Rel <0x140B0, 0x1016>; R_ARM_JUMP_SLOT _ZNSs4_Rep9_S_createEjjRKSaIcE|176-64-1-0-22-16-0-0
36644|data|Elf32_Rel <0x140B4, 0x1E16>; R_ARM_JUMP_SLOT _ZNSsC1EPKcjRKSaIcE|180-64-1-0-22-30-0-0
36652|data|Elf32_Rel <0x140B8, 0x2116>; R_ARM_JUMP_SLOT __cxa_begin_catch|184-64-1-0-22-33-0-0
36660|data|Elf32_Rel <0x140BC, 0x516>; R_ARM_JUMP_SLOT _ZNSs15_M_replace_safeEjjPKcj|188-64-1-0-22-5-0-0
36668|data|Elf32_Rel <0x140C0, 0x1816>; R_ARM_JUMP_SLOT fread|192-64-1-0-22-24-0-0
36676|data|Elf32_Rel <0x140C4, 0x2416>; R_ARM_JUMP_SLOT __gxx_personality_v0|196-64-1-0-22-36-0-0
36684|data|Elf32_Rel <0x140C8, 0x3816>; R_ARM_JUMP_SLOT _ZNSs12_M_leak_hardEv|200-64-1-0-22-56-0-0
36692|data|Elf32_Rel <0x140CC, 0x1F16>; R_ARM_JUMP_SLOT exit|204-64-1-0-22-31-0-0
36700|code|PUSH            {R3,LR}|8-64-45-233
36704|code|BL              sub_9C58|60-3-0-235
36708|code|POP             {R3,PC}|8-128-189-232
36712|code|PUSH            {LR}|4-224-45-229
36716|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8F78)|4-224-159-229
36720|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
36724|code|LDR             PC, [LR,#8]!|8-240-190-229
36728|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8F78|136-176-0-0
36732|code|ADRL            R12, 0x13F84|0-198-143-226-11-202-140-226
36740|code|LDR             PC, [R12,#(_ZSt20__throw_length_errorPKc_ptr - 0x13F84)]!; std::__throw_length_error(char const*)|136-240-188-229
36744|code|ADRL            R12, 0x13F90|0-198-143-226-11-202-140-226
36752|code|LDR             PC, [R12,#(abort_ptr - 0x13F90)]!; __imp_abort|128-240-188-229
36756|code|ADRL            R12, 0x13F9C|0-198-143-226-11-202-140-226
36764|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base_ptr - 0x13F9C)]!; std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)|120-240-188-229
36768|code|ADRL            R12, 0x13FA8|0-198-143-226-11-202-140-226
36776|code|LDR             PC, [R12,#(memcmp_ptr - 0x13FA8)]!; __imp_memcmp|112-240-188-229
36780|code|ADRL            R12, 0x13FB4|0-198-143-226-11-202-140-226
36788|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x13FB4)]!; __imp___libc_start_main|104-240-188-229
36792|code|ADRL            R12, 0x13FC0|0-198-143-226-11-202-140-226
36800|code|LDR             PC, [R12,#(_ZNSs6assignEPKc_ptr - 0x13FC0)]!; std::string::assign(char const*)|96-240-188-229
36804|code|ADRL            R12, 0x13FCC|0-198-143-226-11-202-140-226
36812|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x13FCC)]!; __imp___gmon_start__|88-240-188-229
36816|code|ADRL            R12, 0x13FD8|0-198-143-226-11-202-140-226
36824|code|LDR             PC, [R12,#(rewind_ptr - 0x13FD8)]!; __imp_rewind|80-240-188-229
36828|code|ADRL            R12, 0x13FE4|0-198-143-226-11-202-140-226
36836|code|LDR             PC, [R12,#(_ZdlPv_ptr - 0x13FE4)]!; operator delete(void *)|72-240-188-229
36840|code|ADRL            R12, 0x13FF0|0-198-143-226-11-202-140-226
36848|code|LDR             PC, [R12,#(fclose_ptr - 0x13FF0)]!; __imp_fclose|64-240-188-229
36852|code|ADRL            R12, 0x13FFC|0-198-143-226-11-202-140-226
36860|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x13FFC)]!; __imp___printf_chk|56-240-188-229
36864|code|ADRL            R12, 0x14008|0-198-143-226-11-202-140-226
36872|code|LDR             PC, [R12,#(__cxa_rethrow_ptr - 0x14008)]!; __imp___cxa_rethrow|48-240-188-229
36876|code|ADRL            R12, 0x14014|0-198-143-226-11-202-140-226
36884|code|LDR             PC, [R12,#(fopen_ptr - 0x14014)]!; __imp_fopen|40-240-188-229
36888|code|ADRL            R12, 0x14020|0-198-143-226-11-202-140-226
36896|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base_ptr - 0x14020)]!; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|32-240-188-229
36900|code|BX              PC|120-71
36902|data|ALIGN 4|192-70
36904|code|ADRL            R12, 0x14030|0-198-143-226-11-202-140-226
36912|code|LDR             PC, [R12,#(memset_ptr - 0x14030)]!; __imp_memset|20-240-188-229
36916|code|ADRL            R12, 0x1403C|0-198-143-226-11-202-140-226
36924|code|LDR             PC, [R12,#(__cxa_end_cleanup_ptr - 0x1403C)]!; __imp___cxa_end_cleanup|12-240-188-229
36928|code|ADRL            R12, 0x14048|0-198-143-226-11-202-140-226
36936|code|LDR             PC, [R12,#(_ZNSsC1ERKSs_ptr - 0x14048)]!; std::string::string(std::string const&)|4-240-188-229
36940|code|ADR             R12, 0x9054|0-198-143-226
36944|code|ADD             R12, R12, #0xA000|10-202-140-226
36948|code|LDR             PC, [R12,#(perror_ptr - 0x13054)]!; __imp_perror|252-255-188-229
36952|code|ADR             R12, 0x9060|0-198-143-226
36956|code|ADD             R12, R12, #0xA000|10-202-140-226
36960|code|LDR             PC, [R12,#(_ZNSsD1Ev_ptr - 0x13060)]!; std::string::~string()|244-255-188-229
36964|code|ADR             R12, 0x906C|0-198-143-226
36968|code|ADD             R12, R12, #0xA000|10-202-140-226
36972|code|LDR             PC, [R12,#(getopt_long_ptr - 0x1306C)]!; __imp_getopt_long|236-255-188-229
36976|code|ADR             R12, 0x9078|0-198-143-226
36980|code|ADD             R12, R12, #0xA000|10-202-140-226
36984|code|LDR             PC, [R12,#(_ZNSs4_Rep10_M_destroyERKSaIcE_ptr - 0x13078)]!; std::string::_Rep::_M_destroy(std::allocator<char> const&)|228-255-188-229
36988|code|ADR             R12, 0x9084|0-198-143-226
36992|code|ADD             R12, R12, #0xA000|10-202-140-226
36996|code|LDR             PC, [R12,#(fseek_ptr - 0x13084)]!; __imp_fseek|220-255-188-229
37000|code|ADR             R12, 0x9090|0-198-143-226
37004|code|ADD             R12, R12, #0xA000|10-202-140-226
37008|code|LDR             PC, [R12,#(_ZNKSs4findEPKcjj_ptr - 0x13090)]!; std::string::find(char const*,uint,uint)|212-255-188-229
37012|code|ADR             R12, 0x909C|0-198-143-226
37016|code|ADD             R12, R12, #0xA000|10-202-140-226
37020|code|LDR             PC, [R12,#(strtoul_ptr - 0x1309C)]!; __imp_strtoul|204-255-188-229
37024|code|ADR             R12, 0x90A8|0-198-143-226
37028|code|ADD             R12, R12, #0xA000|10-202-140-226
37032|code|LDR             PC, [R12,#(_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base_ptr - 0x130A8)]!; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|196-255-188-229
37036|code|ADR             R12, 0x90B4|0-198-143-226
37040|code|ADD             R12, R12, #0xA000|10-202-140-226
37044|code|LDR             PC, [R12,#(memcpy_ptr - 0x130B4)]!; __imp_memcpy|188-255-188-229
37048|code|ADR             R12, 0x90C0|0-198-143-226
37052|code|ADD             R12, R12, #0xA000|10-202-140-226
37056|code|LDR             PC, [R12,#(_ZNSs6resizeEjc_ptr - 0x130C0)]!; std::string::resize(uint,char)|180-255-188-229
37060|code|ADR             R12, 0x90CC|0-198-143-226
37064|code|ADD             R12, R12, #0xA000|10-202-140-226
37068|code|LDR             PC, [R12,#(_ZNSsC1EPKcRKSaIcE_ptr - 0x130CC)]!; std::string::string(char const*,std::allocator<char> const&)|172-255-188-229
37072|code|ADR             R12, 0x90D8|0-198-143-226
37076|code|ADD             R12, R12, #0xA000|10-202-140-226
37080|code|LDR             PC, [R12,#(ftell_ptr - 0x130D8)]!; __imp_ftell|164-255-188-229
37084|code|ADR             R12, 0x90E4|0-198-143-226
37088|code|ADD             R12, R12, #0xA000|10-202-140-226
37092|code|LDR             PC, [R12,#(strtol_ptr - 0x130E4)]!; __imp_strtol|156-255-188-229
37096|code|ADR             R12, 0x90F0|0-198-143-226
37100|code|ADD             R12, R12, #0xA000|10-202-140-226
37104|code|LDR             PC, [R12,#(_Znwj_ptr - 0x130F0)]!; operator new(uint)|148-255-188-229
37108|code|ADR             R12, 0x90FC|0-198-143-226
37112|code|ADD             R12, R12, #0xA000|10-202-140-226
37116|code|LDR             PC, [R12,#(fwrite_ptr - 0x130FC)]!; __imp_fwrite|140-255-188-229
37120|code|BX              PC; std::string::_M_mutate(uint,uint,uint)|120-71
37122|data|ALIGN 4|192-70
37124|code|ADR             R12, 0x910C|0-198-143-226
37128|code|ADD             R12, R12, #0xA000|10-202-140-226
37132|code|LDR             PC, [R12,#(_ZNSs9_M_mutateEjjj_ptr - 0x1310C)]!; std::string::_M_mutate(uint,uint,uint)|128-255-188-229
37136|code|ADR             R12, 0x9118|0-198-143-226
37140|code|ADD             R12, R12, #0xA000|10-202-140-226
37144|code|LDR             PC, [R12,#(_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS__ptr - 0x13118)]!; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|120-255-188-229
37148|code|ADR             R12, 0x9124|0-198-143-226
37152|code|ADD             R12, R12, #0xA000|10-202-140-226
37156|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x13124)]!; __imp___stack_chk_fail|112-255-188-229
37160|code|ADR             R12, 0x9130|0-198-143-226
37164|code|ADD             R12, R12, #0xA000|10-202-140-226
37168|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x13130)]!; __imp___fprintf_chk|104-255-188-229
37172|code|ADR             R12, 0x913C|0-198-143-226
37176|code|ADD             R12, R12, #0xA000|10-202-140-226
37180|code|LDR             PC, [R12,#(_ZNSs14_M_replace_auxEjjjc_ptr - 0x1313C)]!; std::string::_M_replace_aux(uint,uint,uint,char)|96-255-188-229
37184|code|ADR             R12, 0x9148|0-198-143-226
37188|code|ADD             R12, R12, #0xA000|10-202-140-226
37192|code|LDR             PC, [R12,#(_ZNSs6assignERKSs_ptr - 0x13148)]!; std::string::assign(std::string const&)|88-255-188-229
37196|code|ADR             R12, 0x9154|0-198-143-226
37200|code|ADD             R12, R12, #0xA000|10-202-140-226
37204|code|LDR             PC, [R12,#(memmove_ptr - 0x13154)]!; __imp_memmove|80-255-188-229
37208|code|ADR             R12, 0x9160|0-198-143-226
37212|code|ADD             R12, R12, #0xA000|10-202-140-226
37216|code|LDR             PC, [R12,#(puts_ptr - 0x13160)]!; __imp_puts|72-255-188-229
37220|code|ADR             R12, 0x916C|0-198-143-226
37224|code|ADD             R12, R12, #0xA000|10-202-140-226
37228|code|LDR             PC, [R12,#(__cxa_end_catch_ptr - 0x1316C)]!; __imp___cxa_end_catch|64-255-188-229
37232|code|ADR             R12, 0x9178|0-198-143-226
37236|code|ADD             R12, R12, #0xA000|10-202-140-226
37240|code|LDR             PC, [R12,#(_ZNSs4_Rep9_S_createEjjRKSaIcE_ptr - 0x13178)]!; std::string::_Rep::_S_create(uint,uint,std::allocator<char> const&)|56-255-188-229
37244|code|ADR             R12, 0x9184|0-198-143-226
37248|code|ADD             R12, R12, #0xA000|10-202-140-226
37252|code|LDR             PC, [R12,#(_ZNSsC1EPKcjRKSaIcE_ptr - 0x13184)]!; std::string::string(char const*,uint,std::allocator<char> const&)|48-255-188-229
37256|code|ADR             R12, 0x9190|0-198-143-226
37260|code|ADD             R12, R12, #0xA000|10-202-140-226
37264|code|LDR             PC, [R12,#(__cxa_begin_catch_ptr - 0x13190)]!; __imp___cxa_begin_catch|40-255-188-229
37268|code|ADR             R12, 0x919C|0-198-143-226
37272|code|ADD             R12, R12, #0xA000|10-202-140-226
37276|code|LDR             PC, [R12,#(_ZNSs15_M_replace_safeEjjPKcj_ptr - 0x1319C)]!; std::string::_M_replace_safe(uint,uint,char const*,uint)|32-255-188-229
37280|code|ADR             R12, 0x91A8|0-198-143-226
37284|code|ADD             R12, R12, #0xA000|10-202-140-226
37288|code|LDR             PC, [R12,#(fread_ptr - 0x131A8)]!; __imp_fread|24-255-188-229
37292|code|ADR             R12, 0x91B4|0-198-143-226
37296|code|ADD             R12, R12, #0xA000|10-202-140-226
37300|code|LDR             PC, [R12,#(__gxx_personality_v0_ptr - 0x131B4)]!; __imp___gxx_personality_v0|16-255-188-229
37304|code|ADR             R12, 0x91C0|0-198-143-226
37308|code|ADD             R12, R12, #0xA000|10-202-140-226
37312|code|LDR             PC, [R12,#(_ZNSs12_M_leak_hardEv_ptr - 0x131C0)]!; std::string::_M_leak_hard(void)|8-255-188-229
37316|code|ADR             R12, 0x91CC|0-198-143-226
37320|code|ADD             R12, R12, #0xA000|10-202-140-226
37324|code|LDR             PC, [R12,#(exit_ptr - 0x131CC)]!; __imp_exit|0-255-188-229
37328|code|SVCMI           0xF0E92D|45-233-240-79
37332|data|DCD 0xF8DF460C, 0xB0CFB284, 0x46066809, 0xA82A4D94, 0x3000F8DB|12-70-223-248-132-178-207-176-9-104-6-70-148-77-42-168-219-248-0-48-16-175-3-145-13-241-20-9-170-70-77-147-0-240-236-253-143-74-0-35-205-248-28-144-5-147-6-147-9-147-205-248-32-144-11-146-12-146-13-147-14-147-15-147-141-248-42-48-141-248-41-48-141-248-40-48-134-75-48-70-33-70-134-74-0-151-255-247-28-239-0-40-3-70-192-242-111-129-163-241-76-2-39-42-0-242-68-129-223-232-18-240-14-1-66-1-66-1-66-1-66-1-66-1-215-0-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-66-1-183-0-121-0-66-1-66-1-66-1-117-0-66-1-82-0-66-1-51-0-66-1-66-1-66-1-44-0-66-1-66-1-66-1-40-0-1-35-141-248-41-48-193-231-41-104-12-168-13-241-44-8-255-247-136-238-186-231-41-104-19-168-30-170-255-247-8-239-4-168-1-33-19-170-1-240-71-250-128-70-19-168-255-247-202-238-184-241-0-15-169-209-93-75-1-33-93-72-49-34-13-241-44-8-27-104-255-247-12-239-3-152-13-241-44-8-0-240-236-252-41-104-18-168-87-75-29-170-0-41-8-191-25-70-255-247-230-238-4-168-0-33-18-170-1-240-36-250-128-70-18-168-255-247-166-238-184-241-0-15-134-209-76-75-1-33-78-72-46-34-13-241-44-8-27-104-255-247-232-238-3-152-13-241-44-8-0-240-201-252-1-35-141-248-40-48-116-231-41-104-1-35-141-248-42-48-11-120-0-43-0-240-216-128-17-168-28-170-13-241-44-8-255-247-186-238-17-152-0-35-22-147-80-248-12-60-0-43-0-240-35-129-13-241-88-8-8-224-1-177-8-96-4-49-14-145-90-120-88-28-0-42-0-240-182-128-0-34-65-70-255-247-174-238-22-155-25-144-26-120-17-28-24-191-1-33-44-42-12-191-0-34-1-240-1-2-0-42-64-240-5-129-14-153-15-154-145-66-224-209-13-168-25-170-1-240-107-250-22-155-222-231-41-104-20-168-31-170-255-247-132-238-4-168-2-33-20-170-1-240-195-249-128-70-20-168-255-247-70-238-184-241-0-15-127-244-37-175-27-75-1-33-30-72-47-34-13-241-44-8-27-104-255-247-134-238-3-152-13-241-44-8-0-240-103-252-41-104-21-168-32-170-255-247-100-238-4-168-3-33-21-170-1-240-163-249-128-70-21-168-255-247-38-238-184-241-0-15-127-244-5-175-11-75-1-33-15-72-54-34-13-241-44-8-27-104-255-247-102-238-3-152-13-241-44-8-0-240-71-252-0-191-168-65-1-0-152-65-1-0-220-64-1-0-176-182-0-0-160-65-1-0-168-181-0-0-20-179-0-0-120-181-0-0-220-181-0-0-12-182-0-0-136-65-1-0-40-104-22-144-0-40-60-208-13-241-88-8-0-34-65-70-255-247-16-238-218-248-0-48-22-154-154-66-1-70-0-240-172-131-43-104-23-168-0-43-0-240-145-128-0-240-10-252-4-168-79-240-255-49-23-170-1-240-88-249-128-70-23-168-255-247-218-237-184-241-0-15-127-244-186-174-159-75-1-33-159-72-47-34-13-241-44-8-27-104-255-247-28-238-3-152-13-241-44-8-0-240-252-251-152-74-1-33-13-241-44-8-16-104-152-74-255-247-40-238-3-152-13-241-44-8-0-240-239-251-1-70-205-231-144-70-17-168-255-247-182-237-184-241-0-15-63-244-149-174-141-75-1-33-143-74-13-241-44-8-24-104-142-75-27-104-255-247-16-238-3-152-13-241-44-8-0-240-214-251-138-74-12-155-21-104-83-248-12-28-115-27-4-235-133-2-17-185-2-43-0-240-241-128-1-43-64-240-64-131-13-241-44-8-84-248-37-16-64-70-255-247-60-237-157-248-42-48-0-43-55-208-157-248-40-48-0-43-39-209-157-248-41-48-0-43-35-209-9-155-0-43-0-240-8-129-120-72-255-247-250-237-1-36-13-152-8-177-255-247-54-237-12-168-42-174-255-247-112-237-64-70-255-247-110-237-4-168-129-104-1-240-233-249-74-168-255-247-102-237-77-154-219-248-0-48-32-70-154-66-64-240-10-131-79-176-189-232-240-143-105-72-255-247-218-237-222-231-79-240-1-8-156-231-103-73-33-170-255-247-136-237-107-231-157-248-40-32-157-248-41-48-147-66-82-208-157-248-40-48-0-43-84-209-157-248-42-48-0-43-108-209-42-168-11-153-1-240-28-248-0-40-0-240-155-129-157-248-40-48-0-43-0-240-209-128-9-155-0-43-0-240-189-129-7-157-223-248-52-161-46-224-107-105-83-248-12-60-0-43-64-240-25-130-26-168-42-169-50-70-0-240-183-254-27-168-42-169-50-70-0-240-48-254-108-105-26-159-84-248-12-60-0-43-86-209-1-32-1-54-97-208-72-73-58-70-27-155-255-247-222-236-27-155-70-78-163-241-12-0-176-66-64-240-37-130-26-155-163-241-12-0-176-66-64-240-68-130-40-70-255-247-36-237-5-70-77-69-99-208-46-105-0-46-203-208-114-28-207-209-200-231-0-43-64-240-91-129-1-35-141-248-40-48-12-155-83-248-12-60-0-43-165-208-53-72-255-247-106-237-110-231-13-152-8-177-255-247-166-236-12-168-255-247-226-236-64-70-255-247-222-236-4-168-129-104-1-240-90-249-74-168-255-247-216-236-255-247-196-236-42-168-13-169-0-240-159-251-0-40-63-244-85-175-42-171-12-152-3-241-128-1-0-240-18-251-64-187-1-32-35-73-12-154-255-247-144-236-71-231-32-70-27-169-0-240-7-251-120-185-0-148-1-33-218-248-0-0-59-70-29-74-255-247-28-237-162-231-27-155-58-70-27-73-27-104-255-247-124-236-155-231-1-32-25-73-58-70-35-70-255-247-116-236-148-231-12-168-81-104-13-241-44-8-255-247-80-236-10-231-1-32-19-73-12-154-255-247-104-236-0-36-30-231-0-191-160-65-1-0-100-182-0-0-148-182-0-0-80-181-0-0-168-65-1-0-128-65-1-0-28-183-0-0-228-182-0-0-20-179-0-0-92-184-0-0-140-65-1-0-116-183-0-0-164-183-0-0-100-184-0-0-80-184-0-0-140-184-0-0-200-183-0-0-13-154-14-155-154-66-63-244-243-174-12-155-83-248-12-60-0-43-148-209-12-168-65-70-255-247-218-236-26-231-9-155-0-43-0-240-231-128-7-157-223-248-240-162-170-79-77-69-0-240-197-128-46-105-52-70-22-177-116-28-24-191-1-36-27-168-42-169-50-70-0-240-227-253-60-179-1-32-163-73-27-154-107-105-255-247-22-236-26-168-105-105-0-240-184-254-26-155-83-248-12-60-0-43-61-209-157-72-255-247-188-236-26-155-0-36-155-78-163-241-12-0-176-66-64-240-249-128-27-155-163-241-12-0-176-66-64-240-216-128-0-44-0-240-172-128-40-70-255-247-76-236-5-70-200-231-26-168-42-169-50-70-0-240-51-253-5-241-20-2-42-168-49-70-0-240-93-252-1-54-4-70-64-208-106-105-0-40-12-191-83-70-59-70-137-73-1-32-141-232-12-0-27-154-26-155-255-247-218-235-26-155-131-78-163-241-12-0-124-177-176-66-64-240-133-129-1-36-204-231-42-168-49-70-26-170-0-240-62-252-0-40-50-209-125-72-255-247-120-236-185-231-176-66-191-208-123-74-0-42-0-240-143-129-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-4-67-232-0-66-146-240-0-15-246-209-164-235-1-2-191-243-95-143-0-36-0-42-166-220-39-169-255-247-228-235-162-231-107-105-0-40-12-191-81-70-57-70-1-32-26-104-26-155-27-104-1-145-0-146-104-73-27-154-255-247-150-235-187-231-103-72-255-247-68-236-26-155-96-78-163-241-12-0-176-66-186-208-96-74-0-42-0-240-22-129-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-4-67-232-0-66-146-240-0-15-246-209-164-235-1-2-191-243-95-143-1-36-0-42-63-247-112-175-37-169-255-247-174-235-107-231-1-32-84-73-11-154-255-247-106-235-2-36-32-230-82-72-255-247-22-236-27-230-12-155-83-248-12-60-27-185-12-168-65-70-255-247-2-236-42-171-12-152-3-241-128-1-0-240-209-249-240-185-1-32-73-73-12-154-255-247-80-235-4-36-6-230-71-72-255-247-252-235-3-36-1-230-69-72-255-247-248-235-3-36-252-229-24-168-67-73-34-170-255-247-166-235-4-168-0-33-24-170-0-240-229-254-24-168-255-247-104-235-52-230-1-32-61-73-12-154-255-247-48-235-0-36-231-229-17-168-13-241-44-8-255-247-92-235-113-230-27-168-255-247-88-235-109-230-44-74-162-179-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-6-67-232-0-98-146-240-0-15-246-209-166-235-1-2-191-243-95-143
39380|data|DCD 0xF73F2A00, 0xA929AF11, 0xEB48F7FF, 0x4A1FE70C, 0x3B04B1FA|0-42-63-247-17-175-41-169-255-247-72-235-12-231-31-74-250-177-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-4-67-232-0-66-146-240-0-15-246-209-164-235-1-2-191-243-95-143-0-36-0-42-63-247-239-174-38-169-255-247-44-235-234-230-83-248-4-44-81-30-67-248-4-28-214-231-83-248-4-44-81-30-67-248-4-28-235-231-26-168-255-247-16-235-38-230-19-72-255-247-140-235-3-152-0-240-61-249-0-191-64-181-0-0-196-184-0-0-220-184-0-0-140-65-1-0-56-185-0-0-236-184-0-0-0-0-0-0
39524|data|DCD aSChangedFrom0x; " - %s changed from 0x%08x to 0x%08x: %s"...|12-185-0-0
39528|data|DCD aSuccess; "success."|0-185-0-0
39532|data|DCD aErrorCannotLoa; "error: cannot load valid BIOS file: %s"...|240-183-0-0
39536|data|DCD aErrorPleaseAss; "error: please assign either get or set "...|68-183-0-0
39540|data|DCD aErrorCannotSav; "error: cannot save to file: %s\n"|136-185-0-0
39544|data|DCD aErrorCannotSet; "error: cannot set properties. abort."|96-185-0-0
39548|data|DCD aNothingToChang; "nothing to change. abort."|168-184-0-0
39552|data|DCD aErrorInvalidGb+0x24; ""|20-179-0-0
39556|data|DCD aSuccessfullySa; "successfully saved new image to: %s\n"|168-185-0-0
39560|data|DCD aErrorCannotAss; "error: cannot assign value for --hwid/f"...|24-184-0-0
39564|data|DCD aFailed; "failed"|72-181-0-0
39568|data|DCD 0xB1E24A5F, 0xF04F3B04, 0xF3BF31FF, 0xE8538F5F, 0xEB022F00|95-74-226-177-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-4-67-232-0-66-146-240-0-15-246-209-164-235-1-2-191-243-95-143-0-42-63-247-196-173-35-169-255-247-214-234-191-229-27-168-255-247-198-234-177-231-83-248-4-44-81-30-67-248-4-28-238-231-77-74-242-177-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-6-67-232-0-98-146-240-0-15-246-209-166-235-1-2-191-243-95-143-0-42-63-247-165-173-36-169-255-247-178-234-160-229-83-248-4-44-81-30-67-248-4-28-245-230-83-248-4-44-81-30-67-248-4-28-236-231-13-241-44-8-172-229-19-168-13-241-44-8-255-247-144-234-166-229-245-231-18-168-13-241-44-8-255-247-138-234-159-229-21-168-13-241-44-8-255-247-132-234-153-229-26-168-255-247-128-234-35-231-44-74-2-179-4-59-79-240-255-49-191-243-95-143-83-232-0-47-2-235-1-4-67-232-0-66-146-240-0-15-246-209-164-235-1-2-191-243-95-143-1-36-0-42-63-247-50-174-40-169-255-247-112-234-45-230-222-231-83-248-4-44-81-30-67-248-4-28-124-230-83-248-4-44-81-30-67-248-4-28-234-231-255-247-182-234-24-74-1-33-13-241-44-8-16-104-22-74-255-247-180-234-3-152-13-241-44-8-0-240-122-248-23-168-13-241-44-8-255-247-66-234-87-229-166-231-14-75-1-33-15-72-29-34-13-241-44-8-27-104-255-247-132-234-3-152-13-241-44-8-0-240-101-248-151-231-20-168-13-241-44-8-255-247-44-234-65-229-144-231-24-168-255-247-38-234-60-229-59-229-0-0-0-0
39956|data|DCD 0x141A0, 0xB6C0, 0xB644|160-65-1-0-192-182-0-0-68-182-0-0
39968|code|MOV.W           R11, #0|79-240-0-11
39972|code|MOV.W           LR, #0|79-240-0-14
39976|code|POP.W           {R1}; argc|93-248-4-27
39980|code|MOV             R2, SP; ubp_av|106-70
39982|code|PUSH.W          {R2}; stack_end|77-248-4-45
39986|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
39990|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
39994|code|PUSH.W          {R12}; fini|77-248-4-205
39998|code|LDR             R0, =(loc_91D0+1); main|4-72
40000|code|LDR             R3, =(sub_ADA0+1); init|4-75
40002|code|BLX             __libc_start_main|255-247-180-233
40006|code|BLX             abort|255-247-160-233
40010|data|ALIGN 4|0-0
40012|data|DCD nullsub_1+1|225-173-0-0
40016|data|DCD loc_91D0+1|209-145-0-0
40020|data|DCD sub_ADA0+1|161-173-0-0
40024|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9C68)|20-48-159-229
40028|code|LDR             R2, =(__gmon_start___ptr_0 - 0x14000)|20-32-159-229
40032|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
40036|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
40040|code|CMP             R2, #0|0-0-82-227
40044|code|BXEQ            LR|30-255-47-1
40048|code|B               __gmon_start__|211-252-255-234
40052|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9C68|152-163-0-0
40056|data|DCD __gmon_start___ptr_0 - 0x14000|208-0-0-0
40060|data|DCB 2|2
40061|data|DCB 0x4B, 0x1A, 0x78|75-26-120
40064|data|DCD 0x2201B90A, 0x4770701A, 0x141AC|10-185-1-34-26-112-112-71-172-65-1-0
40076|code|LDR             R0, =dword_13EEC|3-72
40078|code|PUSH            {R3,LR}|8-181
40080|code|LDR             R3, [R0]|3-104
40082|code|CBZ             R3, locret_9C9A|19-177
40084|code|LDR             R3, =0|2-75
40086|code|CBZ             R3, locret_9C9A|3-177
40088|code|BLX             R3|152-71
40090|code|POP             {R3,PC}|8-189
40092|data|DCD dword_13EEC|236-62-1-0
40096|data|DCD 0|0-0-0-0
40100|code|PUSH            {R4,LR}|16-181
40102|code|SUB             SP, SP, #0x10|132-176
40104|code|ADD             R3, SP, #0x18+var_8|4-171
40106|code|MOV             R4, R0|4-70
40108|code|MOVS            R2, #4|4-34
40110|code|STR.W           R1, [R3,#-0xC]!|67-248-12-29
40114|code|MOV             R1, R3|25-70
40116|code|ADD             R3, SP, #0x18+var_C|3-171
40118|code|BLX             _ZNSsC1EPKcjRKSaIcE; std::string::string(char const*,uint,std::allocator<char> const&)|255-247-98-234
40122|code|MOV             R0, R4|32-70
40124|code|ADD             SP, SP, #0x10|4-176
40126|code|POP             {R4,PC}|16-189
40128|code|MOV             R3, #0x141A0|68-242-160-19-192-242-1-3
40136|code|PUSH            {LR}|0-181
40138|code|SUB             SP, SP, #0x14|133-176
40140|code|LDR             R1, [R3]|25-104
40142|code|MOVW            R2, #0xADF0|74-246-240-82
40146|code|MOV             R3, R0|3-70
40148|code|STR             R0, [SP]|0-144
40150|code|STR             R0, [SP,#4]|1-144
40152|code|MOVT.W          R2, #0|192-242-0-2
40156|code|STR             R0, [SP,#8]|2-144
40158|code|MOV             R0, R1|8-70
40160|code|MOVS            R1, #1|1-33
40162|code|BLX             __fprintf_chk|255-247-34-234
40166|code|MOVS            R0, #1|1-32
40168|code|BLX             exit|255-247-108-234
40172|code|PUSH            {R4-R6,LR}|112-181
40174|code|MOV             R6, R1|14-70
40176|code|LDR             R1, =unk_B22C|16-73
40178|code|MOV             R5, R0|5-70
40180|code|BLX             fopen|255-247-138-233
40184|code|MOV             R4, R0|4-70
40186|code|CBZ             R0, loc_9D28|168-177
40188|code|LDR             R0, [R6]|48-104
40190|code|MOVS            R2, #1|1-34
40192|code|MOV             R3, R4|35-70
40194|code|LDR.W           R1, [R0,#-0xC]|80-248-12-28
40198|code|BLX             fwrite|255-247-246-233
40202|code|MOV             R6, R0|6-70
40204|code|MOV             R0, R4|32-70
40206|code|BLX             fclose|255-247-108-233
40210|code|CMP             R6, #1|1-46
40212|code|BEQ             loc_9D1C|2-208
40214|code|MOV             R0, R5|40-70
40216|code|BLX             perror|255-247-152-233
40220|code|SUB.W           R3, R6, #1|166-241-1-3
40224|code|NEGS            R0, R3|88-66
40226|code|ADC.W           R0, R0, R3|64-235-3-0
40230|code|POP             {R4-R6,PC}|112-189
40232|code|MOV             R0, R5|40-70
40234|code|BLX             perror|255-247-144-233
40238|code|MOV             R0, R4|32-70
40240|code|POP             {R4-R6,PC}|112-189
40242|data|ALIGN 4|0-191
40244|data|DCD unk_B22C|44-178-0-0
40248|code|LDR.W           R3, [R0,#0x80]|208-248-128-48
40252|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|21-74
40254|code|PUSH            {R4,R5,LR}|48-181
40256|code|MOV             R4, R0|4-70
40258|code|SUB.W           R0, R3, #0xC|163-241-12-0
40262|code|SUB             SP, SP, #0xC|131-176
40264|code|CMP             R0, R2|144-66
40266|code|BNE             loc_9D52|2-209
40268|code|MOV             R0, R4|32-70
40270|code|ADD             SP, SP, #0xC|3-176
40272|code|POP             {R4,R5,PC}|48-189
40274|code|LDR             R2, =0|17-74
40276|code|CBZ             R2, loc_9D86|186-177
40278|code|SUBS            R3, #4|4-59
40280|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
40284|code|DMB.W           SY|191-243-95-143
40288|code|LDREX.W         R2, [R3]|83-232-0-47
40292|code|ADD.W           R5, R2, R1|2-235-1-5
40296|code|STREX.W         R2, R5, [R3]|67-232-0-82
40300|code|TEQ.W           R2, #0|146-240-0-15
40304|code|BNE             loc_9D60|246-209
40306|code|SUB.W           R2, R5, R1|165-235-1-2
40310|code|DMB.W           SY|191-243-95-143
40314|code|CMP             R2, #0|0-42
40316|code|BGT             loc_9D4C|230-220
40318|code|ADD             R1, SP, #4|1-169
40320|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-118-233
40324|code|B               loc_9D4C|226-231
40326|code|LDR.W           R2, [R3,#-4]|83-248-4-44
40330|code|SUBS            R1, R2, #1|81-30
40332|code|STR.W           R1, [R3,#-4]|67-248-4-28
40336|code|B               loc_9D7A|243-231
40338|data|ALIGN 4|0-191
40340|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
40344|data|DCD 0|0-0-0-0
40348|code|PUSH            {R4-R6,LR}|112-181
40350|code|MOVS            R5, #0|0-37
40352|code|MOV             R4, R0|4-70
40354|code|MOVS            R3, #1|1-35
40356|code|MOV             R1, R5; c|41-70
40358|code|MOVS            R2, #0x80; n|128-34
40360|code|STRB.W          R3, [R4,#0x89]|132-248-137-48
40364|code|STRB.W          R5, [R0,#0x88]|128-248-136-80
40368|code|STR.W           R5, [R4,#0x84]|196-248-132-80
40372|code|BLX             memset|255-247-56-233
40376|code|LDR.W           R3, [R4,#0x80]|212-248-128-48
40380|code|ADD.W           R0, R4, #0x80; this|4-241-128-0
40384|code|MOV             R1, R5; unsigned int|41-70
40386|code|LDR.W           R2, [R3,#-0xC]; unsigned int|83-248-12-44
40390|code|MOV             R3, R5; unsigned int|43-70
40392|code|POP.W           {R4-R6,LR}|189-232-112-64
40396|code|B.W             j__ZNSs9_M_mutateEjjj; std::string::_M_mutate(uint,uint,uint)|255-247-152-185
40400|code|LDR             R3, =unk_14198|7-75
40402|code|PUSH            {R4,LR}|16-181
40404|code|MOV             R4, R0|4-70
40406|code|STR.W           R3, [R0,#0x80]|192-248-128-48
40410|code|BL              sub_9D9C|255-247-223-255
40414|code|MOV             R0, R4|32-70
40416|code|POP             {R4,PC}|16-189
40418|code|ADD.W           R0, R4, #0x80|4-241-128-0
40422|code|BLX             _ZNSsD1Ev; std::string::~string()|255-247-56-233
40426|code|BLX             __cxa_end_cleanup|255-247-36-233
40430|data|ALIGN 0x10|0-191
40432|data|DCD unk_14198|152-65-1-0
40436|code|PUSH            {R3-R7,LR}|248-181
40438|code|MOVS            R3, #0xE|14-35
40440|code|LDR             R7, [R1]|15-104
40442|code|MOV             R6, R1|14-70
40444|code|LDR             R2, [R1,#4]|74-104
40446|code|MOV             R5, R0|5-70
40448|code|ADD.W           R4, R0, #0x10|0-241-16-4
40452|code|SUBS            R2, R2, R7|210-27
40454|code|CMP.W           R3, R2,ASR#2|179-235-162-15
40458|code|BHI             loc_9E16|4-216
40460|code|LDRB.W          R0, [R0,#0x89]|144-248-137-0
40464|code|CMP             R0, #0|0-40
40466|code|BNE             loc_9E78|49-209
40468|code|POP             {R3-R7,PC}|248-189
40470|code|BL              sub_9D9C|255-247-193-255
40474|code|LDR             R1, =aGbb; "$GBB"|27-73
40476|code|MOVS            R2, #4|4-34
40478|code|MOV             R0, R5|40-70
40480|code|BLX             memcpy|255-247-68-233
40484|code|MOVS            R3, #1|1-35
40486|code|MOVS            R1, #0x80|128-33
40488|code|STRH            R3, [R5,#4]|171-128
40490|code|STRH            R3, [R5,#6]|235-128
40492|code|STR             R1, [R5,#8]|169-96
40494|code|LDR             R2, [R6,#4]|114-104
40496|code|B               loc_9E40|6-224
40498|code|STR             R1, [R4]|33-96
40500|code|LDR             R3, [R7]|59-104
40502|code|STR             R3, [R4,#4]|99-96
40504|code|ADDS            R4, #8|8-52
40506|code|LDR.W           R3, [R7],#4|87-248-4-59
40510|code|ADDS            R1, R1, R3|201-24
40512|code|CMP             R2, R7|186-66
40514|code|BNE             loc_9E32|246-209
40516|code|ADD.W           R4, R5, #0x80|5-241-128-4
40520|code|MOVS            R2, #0|0-34
40522|code|MOV             R0, R4|32-70
40524|code|BLX             _ZNSs6resizeEjc; std::string::resize(uint,char)|255-247-52-233
40528|code|LDR.W           R0, [R5,#0x80]|213-248-128-0
40532|code|LDR.W           R3, [R0,#-4]|80-248-4-60
40536|code|CMP             R3, #0|0-43
40538|code|BLT             loc_9E66|4-219
40540|code|MOV             R0, R4|32-70
40542|code|BLX             _ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|255-247-172-233
40546|code|LDR.W           R0, [R5,#0x80]|213-248-128-0
40550|code|MOV             R1, R5|41-70
40552|code|MOVS            R2, #0x80|128-34
40554|code|BLX             memmove|255-247-112-233
40558|code|MOVS            R3, #1|1-35
40560|code|STRB.W          R3, [R5,#0x88]|133-248-136-48
40564|code|MOV             R0, R3|24-70
40566|code|POP             {R3-R7,PC}|248-189
40568|code|LDR             R0, =stderr|4-72
40570|code|MOVS            R1, #1|1-33
40572|code|LDR             R2, =aErrorCreationP; "error: creation parameters cannot excee"...|4-74
40574|code|LDR             R0, [R0]|0-104
40576|code|BLX             __fprintf_chk|255-247-82-233
40580|code|MOVS            R0, #0|0-32
40582|code|POP             {R3-R7,PC}|248-189
40584|data|DCD aGbb; "$GBB"|104-178-0-0
40588|data|DCD stderr|160-65-1-0
40592|data|DCD aErrorCreationP; "error: creation parameters cannot excee"...|48-178-0-0
40596|code|ADD.W           R3, R0, #0x80|0-241-128-3
40600|code|MOV             R0, R1|8-70
40602|code|MOV             R1, R3|25-70
40604|code|B.W             loc_9CEC|255-247-38-191
40608|code|MOVS            R3, #0|0-35
40610|code|PUSH            {R4-R6,LR}|112-181
40612|code|MOV             R6, R2|22-70
40614|code|MOV             R4, R3|28-70
40616|code|ADD.W           R5, R0, #0x80|0-241-128-5
40620|code|B               loc_9EB2|1-224
40622|code|ADDS            R4, #1|1-52
40624|code|STR             R0, [R6]|48-96
40626|code|MOV             R2, R3; unsigned int|26-70
40628|code|MOV             R0, R5; this|40-70
40630|code|MOVS            R3, #4; unsigned int|4-35
40632|code|LDR             R1, =aGbb; "$GBB"|4-73
40634|code|BLX             _ZNKSs4findEPKcjj; std::string::find(char const*,uint,uint)|255-247-230-232
40638|code|ADDS            R2, R0, #1|66-28
40640|code|ADD.W           R3, R0, #1|0-241-1-3
40644|code|BNE             loc_9EAE|243-209
40646|code|MOV             R0, R4|32-70
40648|code|POP             {R4-R6,PC}|112-189
40650|data|ALIGN 4|0-191
40652|data|DCD aGbb; "$GBB"|104-178-0-0
40656|code|PUSH            {R4-R6,LR}|112-181
40658|code|MOV             R4, R1|12-70
40660|code|ADDS            R1, #1|1-49
40662|code|LDR             R5, [SP,#0x10+arg_0]|4-157
40664|code|CMP             R1, #4; switch 5 cases|4-41
40666|code|BHI             def_9EDC; jumptable 00009EDC default case|13-216
40668|code|TBB.W           [PC,R1]; switch jump|223-232-1-240
40672|data|DCB 0x11; jump table for switch statement|17
40673|data|DCB 0x1B|27
40674|data|DCB 0x25|37
40675|data|DCB 0x2E|46
40676|data|DCB 3|3
40677|data|ALIGN 2|0
40678|code|LDR             R1, [R0,#0x28]; jumptable 00009EDC case 4|129-106
40680|code|STR             R1, [R2]|17-96
40682|code|LDR             R2, [R0,#0x2C]|194-106
40684|code|MOVS            R0, #1|1-32
40686|code|STR             R2, [R3]|26-96
40688|code|CBZ             R5, locret_9F00|53-177
40690|code|LDR             R3, =aRecoveryKey; "recovery_key"|29-75
40692|code|STR             R3, [R5]|43-96
40694|code|POP             {R4-R6,PC}|112-189
40696|code|LDRB.W          R0, [R0,#0x89]; jumptable 00009EDC default case|144-248-137-0
40700|code|CMP             R0, #0|0-40
40702|code|BNE             loc_9F4E|38-209
40704|code|POP             {R4-R6,PC}|112-189
40706|code|MOVS            R1, #0xC; jumptable 00009EDC case 0|12-33
40708|code|MOVS            R0, #1|1-32
40710|code|STR             R1, [R2]|17-96
40712|code|MOVS            R2, #4|4-34
40714|code|STR             R2, [R3]|26-96
40716|code|CMP             R5, #0|0-45
40718|code|BEQ             locret_9F60|39-208
40720|code|LDR             R3, =aFlags; "flags"|22-75
40722|code|STR             R3, [R5]|43-96
40724|code|POP             {R4-R6,PC}|112-189
40726|code|LDR             R1, [R0,#0x10]; jumptable 00009EDC case 1|1-105
40728|code|STR             R1, [R2]|17-96
40730|code|LDR             R2, [R0,#0x14]|66-105
40732|code|MOVS            R0, #1|1-32
40734|code|STR             R2, [R3]|26-96
40736|code|CMP             R5, #0|0-45
40738|code|BEQ             locret_9F66|32-208
40740|code|LDR             R3, =aHardwareId; "hardware_id"|18-75
40742|code|STR             R3, [R5]|43-96
40744|code|POP             {R4-R6,PC}|112-189
40746|code|LDR             R1, [R0,#0x18]; jumptable 00009EDC case 2|129-105
40748|code|STR             R1, [R2]|17-96
40750|code|LDR             R2, [R0,#0x1C]|194-105
40752|code|MOVS            R0, #1|1-32
40754|code|STR             R2, [R3]|26-96
40756|code|CBZ             R5, locret_9F64|181-177
40758|code|LDR             R3, =aRootKey; "root_key"|15-75
40760|code|STR             R3, [R5]|43-96
40762|code|POP             {R4-R6,PC}|112-189
40764|code|LDR             R1, [R0,#0x20]; jumptable 00009EDC case 3|1-106
40766|code|STR             R1, [R2]|17-96
40768|code|LDR             R2, [R0,#0x24]|66-106
40770|code|MOVS            R0, #1|1-32
40772|code|STR             R2, [R3]|26-96
40774|code|CBZ             R5, locret_9F62|101-177
40776|code|LDR             R3, =aBmpFv; "bmp_fv"|11-75
40778|code|STR             R3, [R5]|43-96
40780|code|POP             {R4-R6,PC}|112-189
40782|code|LDR             R0, =stderr|11-72
40784|code|MOVS            R1, #1|1-33
40786|code|LDR             R2, =aInternalErrorU; " internal error: unknown property (%d)."...|11-74
40788|code|MOV             R3, R4|35-70
40790|code|LDR             R0, [R0]|0-104
40792|code|BLX             __fprintf_chk|255-247-230-232
40796|code|MOVS            R0, #0|0-32
40798|code|POP             {R4-R6,PC}|112-189
40800|code|POP             {R4-R6,PC}|112-189
40802|code|POP             {R4-R6,PC}|112-189
40804|code|POP             {R4-R6,PC}|112-189
40806|code|POP             {R4-R6,PC}|112-189
40808|data|DCD aRecoveryKey; "recovery_key"|152-178-0-0
40812|data|DCD aFlags; "flags"|112-178-0-0
40816|data|DCD aHardwareId; "hardware_id"|120-178-0-0
40820|data|DCD aRootKey; "root_key"|132-178-0-0
40824|data|DCD aBmpFv; "bmp_fv"|144-178-0-0
40828|data|DCD stderr|160-65-1-0
40832|data|DCD aInternalErrorU; " internal error: unknown property (%d)."...|168-178-0-0
40836|code|LDR             R1, [R1]|9-104
40838|code|PUSH.W          {R4-R10,LR}|45-233-240-71
40842|code|MOV             R4, R3|28-70
40844|code|LDR.W           R3, [R1,#-0xC]|81-248-12-60
40848|code|MOV             R6, R2|22-70
40850|code|ADD.W           R2, R2, #0x80|2-241-128-2
40854|code|SUB             SP, SP, #0x18|134-176
40856|code|CMP             R2, R3|154-66
40858|code|MOV             R5, R0|5-70
40860|code|BLS             loc_9FAC|6-217
40862|code|LDRB.W          R0, [R0,#0x89]|144-248-137-0
40866|code|CMP             R0, #0|0-40
40868|code|BNE             loc_9FE6|31-209
40870|code|ADD             SP, SP, #0x18|6-176
40872|code|POP.W           {R4-R10,PC}|189-232-240-135
40876|code|MOVS            R2, #0x80; n|128-34
40878|code|ADDS            R1, R1, R6; src|137-25
40880|code|MOV             R0, R4; dest|32-70
40882|code|SUBS            R6, R3, R6|158-27
40884|code|BLX             memmove|255-247-202-232
40888|code|LDRB            R2, [R4,#5]|98-121
40890|code|LDRB            R3, [R4,#4]|35-121
40892|code|ORR.W           R3, R3, R2,LSL#8|67-234-2-35
40896|code|CMP             R3, #1|1-43
40898|code|BEQ             loc_9FF8|25-208
40900|code|LDRB.W          R0, [R5,#0x89]|149-248-137-0
40904|code|CMP             R0, #0|0-40
40906|code|BEQ             loc_9FA6|236-208
40908|code|LDR             R2, =stderr|60-74
40910|code|MOVS            R1, #1|1-33
40912|code|LDRB            R5, [R4,#7]|229-121
40914|code|LDRB            R4, [R4,#6]|164-121
40916|code|LDR             R0, [R2]|16-104
40918|code|LDR             R2, =aErrorInvalidGb; " error: invalid GBB version (%d.%d)\n"|59-74
40920|code|ORR.W           R4, R4, R5,LSL#8|68-234-5-36
40924|code|STR             R4, [SP,#0x38+var_38]|0-148
40926|code|BLX             __fprintf_chk|255-247-164-232
40930|code|MOVS            R0, #0|0-32
40932|code|B               loc_9FA6|223-231
40934|code|LDR             R3, =stderr|54-75
40936|code|MOVS            R1, #1; size|1-33
40938|code|LDR             R0, =aErrorIncomplet; " error: incomplete GBB.\n"|55-72
40940|code|MOVS            R2, #0x18; n|24-34
40942|code|LDR             R3, [R3]; s|27-104
40944|code|BLX             fwrite|255-247-128-232
40948|code|MOVS            R0, #0|0-32
40950|code|B               loc_9FA6|214-231
40952|code|LDRB            R7, [R4,#9]|103-122
40954|code|LDRB            R0, [R4,#8]|32-122
40956|code|LDRB            R1, [R4,#0xA]|161-122
40958|code|LDRB            R2, [R4,#0xB]|226-122
40960|code|ORR.W           R7, R0, R7,LSL#8|64-234-7-39
40964|code|ORR.W           R7, R7, R1,LSL#16|71-234-1-71
40968|code|ORR.W           R7, R7, R2,LSL#24|71-234-2-103
40972|code|CMP             R7, #0x7F|127-47
40974|code|BHI             loc_A02E|14-216
40976|code|LDRB.W          R0, [R5,#0x89]|149-248-137-0
40980|code|CMP             R0, #0|0-40
40982|code|BEQ             loc_9FA6|198-208
40984|code|MOVS            R0, #0x80|128-32
40986|code|STR             R0, [SP,#0x38+var_38]|0-144
40988|code|LDR             R0, =stderr|40-72
40990|code|MOV             R1, R3|25-70
40992|code|LDR             R2, =aErrorIncompati; " error: incompatible header size (%d < "...|42-74
40994|code|MOV             R3, R7|59-70
40996|code|LDR             R0, [R0]|0-104
40998|code|BLX             __fprintf_chk|255-247-128-232
41002|code|MOVS            R0, #0|0-32
41004|code|B               loc_9FA6|187-231
41006|code|LDR.W           R9, =stderr|223-248-144-144
41010|code|ADD.W           R8, SP, #0x38+var_24|13-241-20-8
41014|code|MOVS            R7, #0|0-39
41016|code|MOV             R1, R7|57-70
41018|code|ADD             R2, SP, #0x38+var_2C|3-170
41020|code|ADD             R3, SP, #0x38+var_28|4-171
41022|code|MOV             R0, R5|40-70
41024|code|STR.W           R8, [SP,#0x38+var_38]|205-248-0-128
41028|code|BL              sub_9ED0|255-247-68-255
41032|code|CMP             R0, #0|0-40
41034|code|BEQ             loc_9FA6|172-208
41036|code|LDRB            R2, [R4,#9]|98-122
41038|code|LDRB            R3, [R4,#8]|35-122
41040|code|LDRB.W          R12, [R4,#0xA]|148-248-10-192
41044|code|ORR.W           R3, R3, R2,LSL#8|67-234-2-35
41048|code|LDR             R1, [SP,#0x38+var_28]|4-153
41050|code|LDR             R2, [SP,#0x38+var_2C]|3-154
41052|code|LDRB            R0, [R4,#0xB]|224-122
41054|code|ORR.W           R3, R3, R12,LSL#16|67-234-12-67
41058|code|ADD.W           R12, R1, R2|1-235-2-12
41062|code|ORRS            R1, R2|17-67
41064|code|ORR.W           R10, R3, R0,LSL#24|67-234-0-106
41068|code|LDR             R3, [SP,#0x38+var_24]|5-155
41070|code|LDRB.W          R0, [R5,#0x89]|149-248-137-0
41074|code|BNE             loc_A080|5-209
41076|code|CBNZ            R0, loc_A0B0|224-185
41078|code|ADDS            R7, #1|1-55
41080|code|CMP             R7, #4|4-47
41082|code|BNE             loc_A038|221-209
41084|code|MOVS            R0, #1|1-32
41086|code|B               loc_9FA6|146-231
41088|code|CMP             R6, R12|102-69
41090|code|BCS             loc_A098|9-210
41092|code|CMP             R0, #0|0-40
41094|code|BEQ             loc_9FA6|142-208
41096|code|LDR             R0, =stderr|13-72
41098|code|MOVS            R1, #1|1-33
41100|code|LDR             R2, =aErrorPropertyS; " error: property %s exceed GBB.\n"|16-74
41102|code|LDR             R0, [R0]|0-104
41104|code|BLX             __fprintf_chk|255-247-74-232
41108|code|MOVS            R0, #0|0-32
41110|code|B               loc_9FA6|134-231
41112|code|CMP             R2, R10|82-69
41114|code|BCS             loc_A076|236-210
41116|code|CMP             R0, #0|0-40
41118|code|BEQ             loc_9FA6|130-208
41120|code|LDR             R0, =stderr|7-72
41122|code|MOVS            R1, #1|1-33
41124|code|LDR             R2, =aErrorPropertyS_0; " error: property %s overlap GBB header."...|11-74
41126|code|LDR             R0, [R0]|0-104
41128|code|BLX             __fprintf_chk|255-247-62-232
41132|code|MOVS            R0, #0|0-32
41134|code|B               loc_9FA6|122-231
41136|code|LDR.W           R0, [R9]|217-248-0-0
41140|code|MOVS            R1, #1|1-33
41142|code|LDR             R2, =aWarningPropert; " warning: property %s is EMPTY.\n"|8-74
41144|code|BLX             __fprintf_chk|255-247-54-232
41148|code|B               loc_A076|219-231
41150|data|ALIGN 0x10|0-191
41152|data|DCD stderr|160-65-1-0
41156|data|DCD aErrorInvalidGb; " error: invalid GBB version (%d.%d)\n"|240-178-0-0
41160|data|DCD aErrorIncomplet; " error: incomplete GBB.\n"|212-178-0-0
41164|data|DCD aErrorIncompati; " error: incompatible header size (%d < "...|24-179-0-0
41168|data|DCD aErrorPropertyS; " error: property %s exceed GBB.\n"|104-179-0-0
41172|data|DCD aErrorPropertyS_0; " error: property %s overlap GBB header."...|140-179-0-0
41176|data|DCD aWarningPropert; " warning: property %s is EMPTY.\n"|68-179-0-0
41180|code|PUSH.W          {R4-R8,LR}|45-233-240-65
41184|code|SUB             SP, SP, #0x20|136-176
41186|code|MOV             R6, R2|22-70
41188|code|ADD             R3, SP, #0x20+var_14|3-171
41190|code|ADD             R2, SP, #0x20+var_10|4-170
41192|code|ADD             R7, SP, #0x14|5-175
41194|code|MOV             R4, R0|4-70
41196|code|MOV             R5, R1|13-70
41198|code|STR             R7, [SP,#0x20+var_20]|0-151
41200|code|BL              sub_9ED0|255-247-238-254
41204|code|CMP             R0, #0|0-40
41206|code|BEQ             loc_A16A|56-208
41208|code|LDRB            R2, [R4,#5]|98-121
41210|code|LDRB            R3, [R4,#4]|35-121
41212|code|ORR.W           R3, R3, R2,LSL#8|67-234-2-35
41216|code|CMP             R3, #1|1-43
41218|code|ITTT EQ|2-191
41220|code|LDRBEQ          R2, [R4,#7]|226-121
41222|code|LDRBEQ          R3, [R4,#6]|163-121
41224|code|ORREQ.W         R3, R3, R2,LSL#8|67-234-2-35
41228|code|SUBS            R3, #1|1-59
41230|code|CMP             R3, #0|0-43
41232|code|BLT             loc_A18E|61-219
41234|code|LDR             R2, [R6]|50-104
41236|code|LDR             R7, [SP,#0x20+var_14]|3-159
41238|code|LDR.W           R3, [R2,#-0xC]|82-248-12-60
41242|code|CMP             R7, R3|159-66
41244|code|BCC             loc_A170|40-211
41246|code|ADDS            R1, R5, #1|105-28
41248|code|BEQ             loc_A1EA|99-208
41250|code|CBNZ            R5, loc_A128|13-185
41252|code|CMP             R7, R3|159-66
41254|code|BEQ             loc_A1F0|99-208
41256|code|LDR.W           R1, [R4,#0x80]|212-248-128-16
41260|code|ADD.W           R5, R4, #0x80|4-241-128-5
41264|code|LDR.W           R3, [R1,#-4]|81-248-4-60
41268|code|CMP             R3, #0|0-43
41270|code|BLT             loc_A144|5-219
41272|code|MOV             R0, R5; this|40-70
41274|code|BLX             _ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|255-247-62-232
41278|code|LDR.W           R1, [R4,#0x80]|212-248-128-16
41282|code|LDR             R7, [SP,#0x20+var_14]|3-159
41284|code|LDR.W           R4, [R4,#0x84]|212-248-132-64
41288|code|MOV             R2, R7; unsigned int|58-70
41290|code|LDR             R3, [SP,#0x20+var_10]|4-155
41292|code|MOV             R0, R5; this|40-70
41294|code|ADDS            R4, R1, R4|12-25
41296|code|MOVS            R5, #0|0-37
41298|code|ADDS            R4, R4, R3|228-24
41300|code|MOV             R3, R7; unsigned int|59-70
41302|code|SUBS            R1, R4, R1; unsigned int|97-26
41304|code|STR             R5, [SP,#0x20+var_20]; char|0-149
41306|code|BLX             _ZNSs14_M_replace_auxEjjjc; std::string::_M_replace_aux(uint,uint,uint,char)|254-247-236-239
41310|code|LDR             R1, [R6]; src|49-104
41312|code|MOVS            R0, #1|1-32
41314|code|LDR.W           R2, [R1,#-0xC]; n|81-248-12-44
41318|code|CMP             R2, #0|0-42
41320|code|BNE             loc_A1E0|58-209
41322|code|ADD             SP, SP, #0x20 ; ' '|8-176
41324|code|POP.W           {R4-R8,PC}|189-232-240-129
41328|code|LDRB.W          R0, [R4,#0x89]|148-248-137-0
41332|code|CMP             R0, #0|0-40
41334|code|BEQ             loc_A16A|248-208
41336|code|LDR             R0, =stderr|58-72
41338|code|MOVS            R1, #1|1-33
41340|code|LDR             R4, [SP,#0x20+var_C]|5-156
41342|code|LDR             R2, =aErrorValueSize; "error: value size (%zu) exceed property"...|58-74
41344|code|LDR             R0, [R0]|0-104
41346|code|STR             R7, [SP,#0x20+var_20]|0-151
41348|code|STR             R4, [SP,#0x20+var_1C]|1-148
41350|code|BLX             __fprintf_chk|254-247-208-239
41354|code|MOVS            R0, #0|0-32
41356|code|B               loc_A16A|237-231
41358|code|ADDS            R0, R5, #1|104-28
41360|code|BNE             loc_A112|191-209
41362|code|MOVS            R1, #0|0-33
41364|code|ADD             R0, SP, #0x20+s1|6-168
41366|code|BL              sub_9CA4|255-247-133-253
41370|code|LDR.W           R8, [SP,#0x20+s1]|221-248-24-128
41374|code|LDR             R1, [R6]; s2|49-104
41376|code|MOVS            R7, #0|0-39
41378|code|LDR.W           R2, [R8,#-0xC]; n|88-248-12-44
41382|code|LDR.W           R3, [R1,#-0xC]|81-248-12-60
41386|code|CMP             R2, R3|154-66
41388|code|BEQ             loc_A210|48-208
41390|code|LDR             R3, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|47-75
41392|code|SUB.W           R0, R8, #0xC|168-241-12-0
41396|code|CMP             R0, R3|152-66
41398|code|BNE             loc_A220|51-209
41400|code|CMP             R7, #0|0-47
41402|code|BNE             loc_A112|170-209
41404|code|LDRB.W          R3, [R4,#0x89]|148-248-137-48
41408|code|MOV             R0, R7|56-70
41410|code|CMP             R3, #0|0-43
41412|code|BEQ             loc_A16A|209-208
41414|code|LDR             R3, =stderr|39-75
41416|code|MOVS            R1, #1|1-33
41418|code|LDRH            R5, [R4,#4]|165-136
41420|code|LDRH            R4, [R4,#6]|228-136
41422|code|LDR             R0, [R3]|24-104
41424|code|LDR             R2, =aErrorPropertyS_1; "error: property %s is not supported on "...|39-74
41426|code|LDR             R3, [SP,#0x20+var_C]|5-155
41428|code|STR             R5, [SP,#0x20+var_20]|0-149
41430|code|STR             R4, [SP,#0x20+var_1C]|1-148
41432|code|BLX             __fprintf_chk|254-247-166-239
41436|code|MOV             R0, R7|56-70
41438|code|B               loc_A16A|196-231
41440|code|MOV             R0, R4; dest|32-70
41442|code|BLX             memmove|254-247-180-239
41446|code|MOVS            R0, #1|1-32
41448|code|B               loc_A16A|191-231
41450|code|LDR             R3, [R2]|19-104
41452|code|STR             R3, [R4,#0xC]|227-96
41454|code|B               loc_A128|155-231
41456|code|LDRB.W          R3, [R4,#0x89]|148-248-137-48
41460|code|MOV             R0, R5|40-70
41462|code|CMP             R3, #0|0-43
41464|code|BEQ             loc_A16A|183-208
41466|code|LDR             R0, =stderr|26-72
41468|code|MOVS            R1, #1|1-33
41470|code|LDR             R4, [SP,#0x20+var_C]|5-156
41472|code|MOV             R3, R7|59-70
41474|code|LDR             R2, =aErrorNulTermin; "error: NUL-terminated string exceed cap"...|28-74
41476|code|LDR             R0, [R0]|0-104
41478|code|STR             R4, [SP,#0x20+var_20]|0-148
41480|code|BLX             __fprintf_chk|254-247-142-239
41484|code|MOV             R0, R5|40-70
41486|code|B               loc_A16A|172-231
41488|code|MOV             R0, R8; s1|64-70
41490|code|BLX             memcmp|254-247-198-238
41494|code|RSBS.W          R7, R0, #1|208-241-1-7
41498|code|IT CC|56-191
41500|code|MOVCC           R7, #0|0-39
41502|code|B               loc_A1AE|198-231
41504|code|LDR             R3, =0|21-75
41506|code|CBZ             R3, loc_A256|195-177
41508|code|SUB.W           R8, R8, #4|168-241-4-8
41512|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
41516|code|DMB.W           SY|191-243-95-143
41520|code|LDREX.W         R3, [R8]|88-232-0-63
41524|code|ADD.W           R1, R3, R2|3-235-2-1
41528|code|STREX.W         R3, R1, [R8]|72-232-0-19
41532|code|TEQ.W           R3, #0|147-240-0-15
41536|code|BNE             loc_A230|246-209
41538|code|SUB.W           R3, R1, R2|161-235-2-3
41542|code|DMB.W           SY|191-243-95-143
41546|code|CMP             R3, #0|0-43
41548|code|BGT             loc_A1B8|180-220
41550|code|ADD             R1, SP, #0x20+var_4|7-169
41552|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-14-239
41556|code|B               loc_A1B8|176-231
41558|code|LDR.W           R3, [R8,#-4]|88-248-4-60
41562|code|SUBS            R2, R3, #1|90-30
41564|code|STR.W           R2, [R8,#-4]|72-248-4-44
41568|code|B               loc_A24A|243-231
41570|data|ALIGN 4|0-191
41572|data|DCD stderr|160-65-1-0
41576|data|DCD aErrorValueSize; "error: value size (%zu) exceed property"...|244-179-0-0
41580|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
41584|data|DCD aErrorPropertyS_1; "error: property %s is not supported on "...|184-179-0-0
41588|data|DCD aErrorNulTermin; "error: NUL-terminated string exceed cap"...|48-180-0-0
41592|data|DCD 0|0-0-0-0
41596|code|PUSH.W          {R4-R10,LR}|45-233-240-71
41600|code|MOV             R6, R1|14-70
41602|code|SUB             SP, SP, #0x20|136-176
41604|code|MOV             R7, R2|23-70
41606|code|MOV             R4, R0|4-70
41608|code|MOV             R1, R2|17-70
41610|code|MOV             R0, R6|48-70
41612|code|ADD             R2, SP, #0x40+var_34|3-170
41614|code|ADD             R3, SP, #0x40+var_38|2-171
41616|code|ADD             R5, SP, #0x40+var_30|4-173
41618|code|STR             R5, [SP,#0x40+var_40]|0-149
41620|code|BL              sub_9ED0|255-247-28-254
41624|code|CMP             R0, #0|0-40
41626|code|BEQ             loc_A2FA|46-208
41628|code|LDR             R5, [SP,#0x40+var_34]|3-157
41630|code|CBNZ            R5, loc_A2B8|93-185
41632|code|LDR             R3, [SP,#0x40+var_38]|2-155
41634|code|CBNZ            R3, loc_A2B8|75-185
41636|code|LDRB.W          R3, [R6,#0x89]|150-248-137-48
41640|code|CMP             R3, #0|0-43
41642|code|BNE             loc_A356|84-209
41644|code|MOV             R0, R4|32-70
41646|code|LDR             R1, =(aErrorInvalidGb+0x24); ""|47-73
41648|code|ADD             R2, SP, #0x40+var_28|6-170
41650|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-8-239
41654|code|B               loc_A2F2|28-224
41656|code|LDRB            R2, [R6,#5]|114-121
41658|code|LDRB            R3, [R6,#4]|51-121
41660|code|ORR.W           R3, R3, R2,LSL#8|67-234-2-35
41664|code|CMP             R3, #1|1-43
41666|code|ITTT EQ|2-191
41668|code|LDRBEQ          R2, [R6,#7]|242-121
41670|code|LDRBEQ          R3, [R6,#6]|179-121
41672|code|ORREQ.W         R3, R3, R2,LSL#8|67-234-2-35
41676|code|SUBS            R3, #1|1-59
41678|code|CMP             R3, #0|0-43
41680|code|BLT             loc_A340|54-219
41682|code|LDR.W           R3, [R6,#0x84]|214-248-132-48
41686|code|LDR.W           R2, [R6,#0x80]|214-248-128-32
41690|code|ADD.W           R8, R2, R3|2-235-3-8
41694|code|LDR             R3, [SP,#0x40+var_38]|2-155
41696|code|ADD.W           R6, R8, R5|8-235-5-6
41700|code|ADD.W           R9, R6, R3|6-235-3-9
41704|code|CMP             R6, R9|78-69
41706|code|IT EQ|8-191
41708|code|LDREQ           R7, =unk_14198|32-79
41710|code|BNE             loc_A306|10-209
41712|code|STR             R7, [R4]|39-96
41714|code|MOV             R0, R4|32-70
41716|code|ADD             SP, SP, #0x20 ; ' '|8-176
41718|code|POP.W           {R4-R10,PC}|189-232-240-135
41722|code|MOV             R0, R4|32-70
41724|code|LDR             R1, =(aErrorInvalidGb+0x24); ""|27-73
41726|code|ADD             R2, SP, #0x40+var_2C|5-170
41728|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-224-238
41732|code|B               loc_A2F2|245-231
41734|code|RSB.W           R9, R6, R9|198-235-9-9
41738|code|MOVS            R1, #0|0-33
41740|code|ADD             R2, SP, #0x40+var_24|7-170
41742|code|MOV             R0, R9|72-70
41744|code|BLX             _ZNSs4_Rep9_S_createEjjRKSaIcE; std::string::_Rep::_S_create(uint,uint,std::allocator<char> const&)|254-247-46-239
41748|code|CMP.W           R9, #1|185-241-1-15
41752|code|MOV             R10, R0|130-70
41754|code|ADD.W           R7, R0, #0xC|0-241-12-7
41758|code|BEQ             loc_A34E|22-208
41760|code|MOV             R0, R7; dest|56-70
41762|code|MOV             R1, R6; src|49-70
41764|code|MOV             R2, R9; n|74-70
41766|code|BLX             memcpy|254-247-194-238
41770|code|LDR             R3, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|18-75
41772|code|CMP             R10, R3|154-69
41774|code|BEQ             loc_A2F0|223-208
41776|code|MOVS            R3, #0|0-35
41778|code|STR.W           R9, [R10]|202-248-0-144
41782|code|STR.W           R3, [R10,#8]|202-248-8-48
41786|code|STRB.W          R3, [R7,R9]|7-248-9-48
41790|code|B               loc_A2F0|215-231
41792|code|ADDS            R3, R7, #1|123-28
41794|code|BNE             loc_A2D2|198-209
41796|code|MOV             R0, R4|32-70
41798|code|MOVS            R1, #0|0-33
41800|code|BL              sub_9CA4|255-247-172-252
41804|code|B               loc_A2F2|209-231
41806|code|LDRB.W          R3, [R8,R5]|24-248-5-48
41810|code|STRB            R3, [R0,#0xC]|3-115
41812|code|B               loc_A32A|233-231
41814|code|LDR             R3, =stderr|8-75
41816|code|MOVS            R1, #1|1-33
41818|code|LDR             R2, =aWarningEmptyPr; " warning: empty property (%d): %s.\n"|8-74
41820|code|LDR             R0, [R3]|24-104
41822|code|LDR             R3, [SP,#0x40+var_30]|4-155
41824|code|STR             R3, [SP,#0x40+var_40]|0-147
41826|code|MOV             R3, R7|59-70
41828|code|BLX             __fprintf_chk|254-247-224-238
41832|code|B               loc_A2AC|160-231
41834|data|ALIGN 4|0-191
41836|data|DCD aErrorInvalidGb+0x24; ""|20-179-0-0
41840|data|DCD unk_14198|152-65-1-0
41844|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
41848|data|DCD stderr|160-65-1-0
41852|data|DCD aWarningEmptyPr; " warning: empty property (%d): %s.\n"|104-180-0-0
41856|code|PUSH            {R4,R5,LR}|48-181
41858|code|MOV             R3, R1|11-70
41860|code|SUB             SP, SP, #0x24 ; '$'|137-176
41862|code|MOV             R4, R0|4-70
41864|code|MOV             R1, R2|17-70
41866|code|MOV             R0, R3|24-70
41868|code|ADD             R2, SP, #0xC|3-170
41870|code|ADD             R3, SP, #0x10|4-171
41872|code|ADD             R5, SP, #0x14|5-173
41874|code|STR             R5, [SP]|0-149
41876|code|BL              sub_9ED0|255-247-156-253
41880|code|CBZ             R0, loc_A3AA|56-177
41882|code|MOV             R0, R4|32-70
41884|code|LDR             R1, [SP,#0x14]|5-153
41886|code|ADD             R2, SP, #0x1C|7-170
41888|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-144-238
41892|code|MOV             R0, R4|32-70
41894|code|ADD             SP, SP, #0x24 ; '$'|9-176
41896|code|POP             {R4,R5,PC}|48-189
41898|code|MOV             R0, R4|32-70
41900|code|LDR             R1, =(aErrorInvalidGb+0x24); ""|2-73
41902|code|ADD             R2, SP, #0x18|6-170
41904|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-136-238
41908|code|B               loc_A3A4|246-231
41910|data|ALIGN 4|0-191
41912|data|DCD aErrorInvalidGb+0x24; ""|20-179-0-0
41916|code|PUSH            {R4,R5,LR}|48-181
41918|code|SUB             SP, SP, #0xC|131-176
41920|code|MOV             R1, R0|1-70
41922|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
41926|code|MOV             R0, SP|104-70
41928|code|BL              sub_A27C|255-247-88-255
41932|code|LDR             R3, [SP]|0-155
41934|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|20-74
41936|code|MOV             R0, R3|24-70
41938|code|LDR.W           R4, [R0],#-0xC|80-248-12-73
41942|code|CMP             R0, R2|144-66
41944|code|BNE             loc_A3E0|2-209
41946|code|MOV             R0, R4|32-70
41948|code|ADD             SP, SP, #0xC|3-176
41950|code|POP             {R4,R5,PC}|48-189
41952|code|LDR             R2, =0|16-74
41954|code|CBZ             R2, loc_A414|186-177
41956|code|SUBS            R3, #4|4-59
41958|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
41962|code|DMB.W           SY|191-243-95-143
41966|code|LDREX.W         R2, [R3]|83-232-0-47
41970|code|ADD.W           R5, R2, R1|2-235-1-5
41974|code|STREX.W         R2, R5, [R3]|67-232-0-82
41978|code|TEQ.W           R2, #0|146-240-0-15
41982|code|BNE             loc_A3EE|246-209
41984|code|SUB.W           R2, R5, R1|165-235-1-2
41988|code|DMB.W           SY|191-243-95-143
41992|code|CMP             R2, #0|0-42
41994|code|BGT             loc_A3DA|230-220
41996|code|ADD             R1, SP, #4|1-169
41998|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-48-238
42002|code|B               loc_A3DA|226-231
42004|code|LDR.W           R2, [R3,#-4]|83-248-4-44
42008|code|SUBS            R1, R2, #1|81-30
42010|code|STR.W           R1, [R3,#-4]|67-248-4-28
42014|code|B               loc_A408|243-231
42016|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
42020|data|DCD 0|0-0-0-0
42024|code|PUSH            {R4,R5,LR}|48-181
42026|code|SUB             SP, SP, #0xC|131-176
42028|code|MOV             R4, R0|4-70
42030|code|MOV             R0, SP|104-70
42032|code|BL              sub_9CA4|255-247-56-252
42036|code|MOV             R0, R4|32-70
42038|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
42042|code|MOV             R2, SP|106-70
42044|code|BL              sub_A0DC|255-247-78-254
42048|code|LDR             R3, [SP]|0-155
42050|code|MOV             R4, R0|4-70
42052|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|22-74
42054|code|SUB.W           R0, R3, #0xC|163-241-12-0
42058|code|CMP             R0, R2|144-66
42060|code|BNE             loc_A454|2-209
42062|code|MOV             R0, R4|32-70
42064|code|ADD             SP, SP, #0xC|3-176
42066|code|POP             {R4,R5,PC}|48-189
42068|code|LDR             R2, =0|19-74
42070|code|CBZ             R2, loc_A492|226-177
42072|code|SUBS            R3, #4|4-59
42074|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
42078|code|DMB.W           SY|191-243-95-143
42082|code|LDREX.W         R2, [R3]|83-232-0-47
42086|code|ADD.W           R5, R2, R1|2-235-1-5
42090|code|STREX.W         R2, R5, [R3]|67-232-0-82
42094|code|TEQ.W           R2, #0|146-240-0-15
42098|code|BNE             loc_A462|246-209
42100|code|SUB.W           R2, R5, R1|165-235-1-2
42104|code|DMB.W           SY|191-243-95-143
42108|code|CMP             R2, #0|0-42
42110|code|BGT             loc_A44E|230-220
42112|code|ADD             R1, SP, #4|1-169
42114|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-246-237
42118|code|B               loc_A44E|226-231
42120|code|MOV             R0, SP|104-70
42122|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-230-237
42126|code|BLX             __cxa_end_cleanup|254-247-210-237
42130|code|LDR.W           R2, [R3,#-4]|83-248-4-44
42134|code|SUBS            R1, R2, #1|81-30
42136|code|STR.W           R1, [R3,#-4]|67-248-4-28
42140|code|B               loc_A47C|238-231
42142|data|ALIGN 0x10|0-191
42144|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
42148|data|DCD 0|0-0-0-0
42152|code|PUSH            {R4,R5,LR}|48-181
42154|code|SUB             SP, SP, #0x14|133-176
42156|code|MOV             R4, R0|4-70
42158|code|ADD             R2, SP, #8|2-170
42160|code|ADD             R0, SP, #4|1-168
42162|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|254-247-8-238
42166|code|MOV             R0, R4|32-70
42168|code|MOVS            R1, #0|0-33
42170|code|ADD             R2, SP, #4|1-170
42172|code|BL              sub_A0DC|255-247-14-254
42176|code|LDR             R3, [SP,#4]|1-155
42178|code|MOV             R4, R0|4-70
42180|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|22-74
42182|code|SUB.W           R0, R3, #0xC|163-241-12-0
42186|code|CMP             R0, R2|144-66
42188|code|BNE             loc_A4D4|2-209
42190|code|MOV             R0, R4|32-70
42192|code|ADD             SP, SP, #0x14|5-176
42194|code|POP             {R4,R5,PC}|48-189
42196|code|LDR             R2, =0|19-74
42198|code|CBZ             R2, loc_A512|226-177
42200|code|SUBS            R3, #4|4-59
42202|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
42206|code|DMB.W           SY|191-243-95-143
42210|code|LDREX.W         R2, [R3]|83-232-0-47
42214|code|ADD.W           R5, R2, R1|2-235-1-5
42218|code|STREX.W         R2, R5, [R3]|67-232-0-82
42222|code|TEQ.W           R2, #0|146-240-0-15
42226|code|BNE             loc_A4E2|246-209
42228|code|SUB.W           R2, R5, R1|165-235-1-2
42232|code|DMB.W           SY|191-243-95-143
42236|code|CMP             R2, #0|0-42
42238|code|BGT             loc_A4CE|230-220
42240|code|ADD             R1, SP, #0xC|3-169
42242|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-182-237
42246|code|B               loc_A4CE|226-231
42248|code|ADD             R0, SP, #4|1-168
42250|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-166-237
42254|code|BLX             __cxa_end_cleanup|254-247-146-237
42258|code|LDR.W           R2, [R3,#-4]|83-248-4-44
42262|code|SUBS            R1, R2, #1|81-30
42264|code|STR.W           R1, [R3,#-4]|67-248-4-28
42268|code|B               loc_A4FC|238-231
42270|data|ALIGN 0x10|0-191
42272|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
42276|data|DCD 0|0-0-0-0
42280|code|MOV             R2, R1|10-70
42282|code|MOVS            R1, #1|1-33
42284|code|B.W             sub_A0DC|255-247-214-189
42288|code|MOV             R2, R1|10-70
42290|code|MOVS            R1, #2|2-33
42292|code|B.W             sub_A0DC|255-247-210-189
42296|code|MOV             R2, R1|10-70
42298|code|MOVS            R1, #3|3-33
42300|code|B.W             sub_A0DC|255-247-206-189
42304|code|LDR             R2, =unk_14198|50-74
42306|code|MOVS            R3, #0|0-35
42308|code|PUSH            {R4-R6,LR}|112-181
42310|code|SUB             SP, SP, #0x18|134-176
42312|code|MOV             R5, R0|5-70
42314|code|MOV             R6, R1|14-70
42316|code|STR             R2, [R0]|2-96
42318|code|MOV             R0, R1; filename|8-70
42320|code|LDR             R1, =aRb; "rb"|47-73
42322|code|STR             R3, [SP,#0x28+ptr]|2-147
42324|code|STR             R3, [SP,#0x28+var_1C]|3-147
42326|code|STR             R3, [SP,#0x28+var_18]|4-147
42328|code|BLX             fopen|254-247-88-237
42332|code|MOV             R4, R0|4-70
42334|code|CMP             R0, #0|0-40
42336|code|BEQ             loc_A5F0|70-208
42338|code|MOVS            R1, #0; off|0-33
42340|code|MOVS            R2, #2; whence|2-34
42342|code|BLX             fseek|254-247-138-237
42346|code|CMP             R0, #0|0-40
42348|code|BEQ             loc_A5BE|39-208
42350|code|LDR             R0, [SP,#0x28+ptr]; ptr|2-152
42352|code|LDR             R1, [SP,#0x28+var_1C]|3-153
42354|code|CMP             R0, R1|136-66
42356|code|BEQ             loc_A58E|11-208
42358|code|SUBS            R1, R1, R0; size|9-26
42360|code|MOVS            R2, #1; n|1-34
42362|code|MOV             R3, R4; stream|35-70
42364|code|BLX             fread|254-247-16-238
42368|code|CMP             R0, #1|1-40
42370|code|BEQ             loc_A5A2|14-208
42372|code|MOV             R0, R6; s|48-70
42374|code|BLX             perror|254-247-98-237
42378|code|LDR             R3, [SP,#0x28+ptr]|2-155
42380|code|STR             R3, [SP,#0x28+var_1C]|3-147
42382|code|MOV             R0, R4; stream|32-70
42384|code|BLX             fclose|254-247-42-237
42388|code|LDR             R0, [SP,#0x28+ptr]; void *|2-152
42390|code|CBZ             R0, loc_A59C|8-177
42392|code|BLX             _ZdlPv; operator delete(void *)|254-247-32-237
42396|code|MOV             R0, R5|40-70
42398|code|ADD             SP, SP, #0x18|6-176
42400|code|POP             {R4-R6,PC}|112-189
42402|code|LDR             R1, [R5]; int|41-104
42404|code|MOVS            R3, #0|0-35
42406|code|MOV             R0, R5; this|40-70
42408|code|LDR.W           R2, [R1,#-0xC]|81-248-12-44
42412|code|STRB.W          R3, [SP,#0x28+var_24]|141-248-4-48
42416|code|LDR             R3, [SP,#0x28+var_1C]|3-155
42418|code|ADDS            R2, R1, R2; int|138-24
42420|code|STR             R3, [SP,#0x28+var_28]; int|0-147
42422|code|LDR             R3, [SP,#0x28+ptr]; int|2-155
42424|code|BL              sub_AB14|0-240-172-250
42428|code|B               loc_A58E|231-231
42430|code|MOV             R0, R4; stream|32-70
42432|code|BLX             ftell|254-247-134-237
42436|code|LDR             R1, [SP,#0x28+var_1C]|3-153
42438|code|MOVS            R2, #0|0-34
42440|code|LDR             R3, [SP,#0x28+ptr]|2-155
42442|code|STRB.W          R2, [SP,#0x28+var_11]|141-248-23-32
42446|code|SUBS            R2, R1, R3|202-26
42448|code|CMP             R0, R2|144-66
42450|code|BHI             loc_A5E2|6-216
42452|code|ITT CC|60-191
42454|code|ADDCC           R3, R3, R0|27-24
42456|code|STRCC           R3, [SP,#0x28+var_1C]|3-147
42458|code|MOV             R0, R4; stream|32-70
42460|code|BLX             rewind|254-247-248-236
42464|code|B               loc_A56E|197-231
42466|code|SUBS            R2, R0, R2|130-26
42468|code|ADD.W           R3, SP, #0x28+var_11|13-241-23-3
42472|code|ADD             R0, SP, #0x28+ptr|2-168
42474|code|BL              sub_A9DC|0-240-247-249
42478|code|B               loc_A5DA|244-231
42480|code|MOV             R0, R6; s|48-70
42482|code|BLX             perror|254-247-44-237
42486|code|B               loc_A594|205-231
42488|code|LDR             R0, [SP,#0x28+ptr]; void *|2-152
42490|code|CBZ             R0, loc_A600|8-177
42492|code|BLX             _ZdlPv; operator delete(void *)|254-247-238-236
42496|code|MOV             R0, R5; this|40-70
42498|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-42-237
42502|code|BLX             __cxa_end_cleanup|254-247-22-237
42506|data|ALIGN 4|0-191
42508|data|DCD unk_14198|152-65-1-0
42512|data|DCD aRb; "rb"|200-180-0-0
42516|code|PUSH            {R4-R6,LR}|112-181
42518|code|SUB             SP, SP, #8|130-176
42520|code|ADD.W           R5, R0, #0x80|0-241-128-5
42524|code|MOVS            R3, #0|0-35
42526|code|MOV             R4, R0|4-70
42528|code|STRB.W          R3, [R0,#0x88]|128-248-136-48
42532|code|MOV             R0, SP|104-70
42534|code|BL              sub_A540|255-247-139-255
42538|code|MOV             R0, R5|40-70
42540|code|MOV             R1, SP|105-70
42542|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|254-247-136-237
42546|code|LDR             R3, [SP]|0-155
42548|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|63-74
42550|code|SUB.W           R0, R3, #0xC|163-241-12-0
42554|code|CMP             R0, R2|144-66
42556|code|BNE             loc_A6E8|84-209
42558|code|LDR.W           R3, [R4,#0x80]|212-248-128-48
42562|code|LDR.W           R6, [R3,#-0xC]|83-248-12-108
42566|code|MOV             R0, R6|48-70
42568|code|CBNZ            R6, loc_A64E|14-185
42570|code|ADD             SP, SP, #8|2-176
42572|code|POP             {R4-R6,PC}|112-189
42574|code|ADD.W           R2, R4, #0x84|4-241-132-2
42578|code|MOV             R0, R4|32-70
42580|code|MOV             R1, R5|41-70
42582|code|BL              sub_9EA0|255-247-35-252
42586|code|MOV             R6, R0|6-70
42588|code|CBZ             R0, loc_A690|192-177
42590|code|CMP             R0, #1|1-40
42592|code|BEQ             loc_A6A8|34-208
42594|code|LDRB.W          R3, [R4,#0x89]|148-248-137-48
42598|code|CMP             R3, #0|0-43
42600|code|BNE             loc_A6D8|54-209
42602|code|LDR.W           R3, [R4,#0x80]|212-248-128-48
42606|code|MOVS            R1, #0|0-33
42608|code|MOV             R0, R5|40-70
42610|code|LDR.W           R2, [R3,#-0xC]|83-248-12-44
42614|code|MOV             R3, R1|11-70
42616|code|BLX             _ZNSs9_M_mutateEjjj; std::string::_M_mutate(uint,uint,uint)|254-247-68-237
42620|code|LDRB.W          R0, [R4,#0x88]|148-248-136-0
42624|code|CMP             R0, #0|0-40
42626|code|BNE             loc_A64A|226-209
42628|code|MOV             R0, R4|32-70
42630|code|BL              sub_9D9C|255-247-137-251
42634|code|LDRB.W          R0, [R4,#0x88]|148-248-136-0
42638|code|B               loc_A64A|220-231
42640|code|LDRB.W          R3, [R4,#0x89]|148-248-137-48
42644|code|CMP             R3, #0|0-43
42646|code|BEQ             loc_A67C|241-208
42648|code|LDR             R3, =stderr|39-75
42650|code|MOVS            R1, #1|1-33
42652|code|MOVS            R2, #0x27 ; '''|39-34
42654|code|LDR             R0, =aErrorCannotFin; " error: cannot find any GBB signature."...|39-72
42656|code|LDR             R3, [R3]|27-104
42658|code|BLX             fwrite|254-247-40-237
42662|code|B               loc_A67C|233-231
42664|code|LDR.W           R2, [R4,#0x84]|212-248-132-32
42668|code|MOV             R0, R4|32-70
42670|code|MOV             R1, R5|41-70
42672|code|MOV             R3, R4|35-70
42674|code|BL              sub_9F84|255-247-103-252
42678|code|CBNZ            R0, loc_A6D0|88-185
42680|code|LDRB.W          R3, [R4,#0x89]|148-248-137-48
42684|code|CMP             R3, #0|0-43
42686|code|BEQ             loc_A67C|221-208
42688|code|LDR             R3, =stderr|29-75
42690|code|MOV             R1, R6|49-70
42692|code|MOVS            R2, #0x23 ; '#'|35-34
42694|code|LDR             R0, =aErrorInvalidGb_0; " error: invalid GBB in image file.\n"|30-72
42696|code|LDR             R3, [R3]|27-104
42698|code|BLX             fwrite|254-247-20-237
42702|code|B               loc_A67C|213-231
42704|code|STRB.W          R6, [R4,#0x88]|132-248-136-96
42708|code|MOV             R0, R6|48-70
42710|code|B               loc_A64A|184-231
42712|code|LDR             R3, =stderr|23-75
42714|code|MOVS            R1, #1|1-33
42716|code|MOVS            R2, #0x27 ; '''|39-34
42718|code|LDR             R0, =aErrorFoundMult; " error: found multiple GBB signatures."...|25-72
42720|code|LDR             R3, [R3]|27-104
42722|code|BLX             fwrite|254-247-8-237
42726|code|B               loc_A66A|192-231
42728|code|LDR             R2, =0|23-74
42730|code|CBZ             R2, loc_A726|226-177
42732|code|SUBS            R3, #4|4-59
42734|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
42738|code|DMB.W           SY|191-243-95-143
42742|code|LDREX.W         R2, [R3]|83-232-0-47
42746|code|ADD.W           R6, R2, R1|2-235-1-6
42750|code|STREX.W         R2, R6, [R3]|67-232-0-98
42754|code|TEQ.W           R2, #0|146-240-0-15
42758|code|BNE             loc_A6F6|246-209
42760|code|SUB.W           R2, R6, R1|166-235-1-2
42764|code|DMB.W           SY|191-243-95-143
42768|code|CMP             R2, #0|0-42
42770|code|BGT             loc_A63E|148-220
42772|code|ADD             R1, SP, #4|1-169
42774|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-172-236
42778|code|B               loc_A63E|144-231
42780|code|MOV             R0, SP|104-70
42782|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-156-236
42786|code|BLX             __cxa_end_cleanup|254-247-136-236
42790|code|LDR.W           R2, [R3,#-4]|83-248-4-44
42794|code|SUBS            R1, R2, #1|81-30
42796|code|STR.W           R1, [R3,#-4]|67-248-4-28
42800|code|B               loc_A710|238-231
42802|data|ALIGN 4|0-191
42804|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
42808|data|DCD stderr|160-65-1-0
42812|data|DCD aErrorCannotFin; " error: cannot find any GBB signature."...|204-180-0-0
42816|data|DCD aErrorInvalidGb_0; " error: invalid GBB in image file.\n"|244-180-0-0
42820|data|DCD aErrorFoundMult; " error: found multiple GBB signatures."...|24-181-0-0
42824|data|DCD 0|0-0-0-0
42828|code|PUSH            {R4-R7,LR}|240-181
42830|code|ADDS            R7, R0, #4|7-29
42832|code|LDR             R3, [R0,#8]|131-104
42834|code|SUB             SP, SP, #0x1C|135-176
42836|code|MOV             R4, R0|4-70
42838|code|MOV             R6, R2|22-70
42840|code|MOV             R5, R7|61-70
42842|code|CBZ             R3, loc_A76E|67-177
42844|code|MOV             R2, R3|26-70
42846|code|LDR             R0, [R2,#0x10]|16-105
42848|code|CMP             R0, R1|136-66
42850|code|ITET GE|170-191
42852|code|MOVGE           R5, R2|21-70
42854|code|LDRLT           R2, [R2,#0xC]|210-104
42856|code|LDRGE           R2, [R2,#8]|146-104
42858|code|CMP             R2, #0|0-42
42860|code|BNE             loc_A75E|247-209
42862|code|CMP             R7, R5|175-66
42864|code|IT EQ|8-191
42866|code|MOVEQ           R5, R7|61-70
42868|code|BEQ             loc_A77E|3-208
42870|code|LDR             R2, [R5,#0x10]|42-105
42872|code|CMP             R1, R2|145-66
42874|code|IT LT|184-191
42876|code|MOVLT           R5, R7|61-70
42878|code|MOVS            R0, #0|0-32
42880|code|CMP             R7, R5|175-66
42882|code|BEQ             loc_A788|1-208
42884|code|ADD             SP, SP, #0x1C|7-176
42886|code|POP             {R4-R7,PC}|240-189
42888|code|MOV             R5, R7|61-70
42890|code|CBZ             R3, loc_A79C|59-177
42892|code|LDR             R2, [R3,#0x10]|26-105
42894|code|CMP             R1, R2|145-66
42896|code|ITET LE|214-191
42898|code|MOVLE           R5, R3|29-70
42900|code|LDRGT           R3, [R3,#0xC]|219-104
42902|code|LDRLE           R3, [R3,#8]|155-104
42904|code|CMP             R3, #0|0-43
42906|code|BNE             loc_A78C|247-209
42908|code|CMP             R7, R5|175-66
42910|code|BEQ             loc_A7A6|2-208
42912|code|LDR             R3, [R5,#0x10]|43-105
42914|code|CMP             R1, R3|153-66
42916|code|BGE             loc_A7D6|23-218
42918|code|LDR             R3, =unk_14198|52-75
42920|code|ADD             R0, SP, #8|2-168
42922|code|STR             R1, [SP,#4]|1-145
42924|code|ADD             R1, SP, #0xC|3-169
42926|code|STR             R3, [SP,#0xC]|3-147
42928|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-70-236
42932|code|MOV             R0, R4|32-70
42934|code|MOV             R1, R5|41-70
42936|code|ADD             R2, SP, #4|1-170
42938|code|BL              sub_ACD4|0-240-139-250
42942|code|LDR             R3, [SP,#8]|2-155
42944|code|MOV             R5, R0|5-70
42946|code|LDR             R4, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|46-76
42948|code|SUB.W           R0, R3, #0xC|163-241-12-0
42952|code|CMP             R0, R4|160-66
42954|code|BNE             loc_A824|43-209
42956|code|LDR             R3, [SP,#0xC]|3-155
42958|code|SUB.W           R0, R3, #0xC|163-241-12-0
42962|code|CMP             R0, R4|160-66
42964|code|BNE             loc_A7EE|11-209
42966|code|ADD.W           R0, R5, #0x14|5-241-20-0
42970|code|MOV             R1, R6|49-70
42972|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|254-247-176-236
42976|code|MOVS            R0, #1|1-32
42978|code|B               loc_A784|207-231
42980|code|ADD             R0, SP, #0xC|3-168
42982|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-56-236
42986|code|BLX             __cxa_end_cleanup|254-247-36-236
42990|code|LDR             R2, =0|36-74
42992|code|CMP             R2, #0|0-42
42994|code|BEQ             loc_A860|53-208
42996|code|SUBS            R3, #4|4-59
42998|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
43002|code|DMB.W           SY|191-243-95-143
43006|code|LDREX.W         R2, [R3]|83-232-0-47
43010|code|ADD.W           R4, R2, R1|2-235-1-4
43014|code|STREX.W         R2, R4, [R3]|67-232-0-66
43018|code|TEQ.W           R2, #0|146-240-0-15
43022|code|BNE             loc_A7FE|246-209
43024|code|SUB.W           R2, R4, R1|164-235-1-2
43028|code|DMB.W           SY|191-243-95-143
43032|code|CMP             R2, #0|0-42
43034|code|BGT             loc_A7D6|220-220
43036|code|ADD             R1, SP, #0x14|5-169
43038|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-40-236
43042|code|B               loc_A7D6|216-231
43044|code|LDR             R2, =0|22-74
43046|code|CBZ             R2, loc_A86C|10-179
43048|code|SUBS            R3, #4|4-59
43050|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
43054|code|DMB.W           SY|191-243-95-143
43058|code|LDREX.W         R2, [R3]|83-232-0-47
43062|code|ADD.W           R7, R2, R1|2-235-1-7
43066|code|STREX.W         R2, R7, [R3]|67-232-0-114
43070|code|TEQ.W           R2, #0|146-240-0-15
43074|code|BNE             loc_A832|246-209
43076|code|SUB.W           R2, R7, R1|167-235-1-2
43080|code|DMB.W           SY|191-243-95-143
43084|code|CMP             R2, #0|0-42
43086|code|BGT             loc_A7CC|189-220
43088|code|ADD             R1, SP, #0x10|4-169
43090|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-14-236
43094|code|B               loc_A7CC|185-231
43096|code|ADD             R0, SP, #8|2-168
43098|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-254-235
43102|code|B               loc_A7E4|193-231
43104|code|LDR.W           R2, [R3,#-4]|83-248-4-44
43108|code|SUBS            R1, R2, #1|81-30
43110|code|STR.W           R1, [R3,#-4]|67-248-4-28
43114|code|B               loc_A818|213-231
43116|code|LDR.W           R2, [R3,#-4]|83-248-4-44
43120|code|SUBS            R1, R2, #1|81-30
43122|code|STR.W           R1, [R3,#-4]|67-248-4-28
43126|code|B               loc_A84C|233-231
43128|data|DCD unk_14198|152-65-1-0
43132|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
43136|data|DCD 0|0-0-0-0
43140|code|PUSH.W          {R4-R9,LR}|45-233-240-67
43144|code|MOV             R4, R0|4-70
43146|code|LDR             R3, [R4,#8]|163-104
43148|code|SUB             SP, SP, #0xC|131-176
43150|code|LDR             R0, [R0,#4]|64-104
43152|code|MOV             R5, R1|13-70
43154|code|CMP             R0, R3|152-66
43156|code|BEQ             loc_A8C0|20-208
43158|code|CBZ             R0, loc_A89E|16-177
43160|code|LDR.W           R3, [R0,#-4]|80-248-4-60
43164|code|STR             R3, [R0]|3-96
43166|code|SUBS            R3, R0, #4|3-31
43168|code|ADDS            R1, R0, #4|1-29
43170|code|SUBS            R3, R3, R5|91-27
43172|code|STR             R1, [R4,#4]|97-96
43174|code|LDR             R4, [R2]|20-104
43176|code|ASRS            R3, R3, #2|155-16
43178|code|BNE             loc_A8B4|3-209
43180|code|STR             R4, [R5]|44-96
43182|code|ADD             SP, SP, #0xC|3-176
43184|code|POP.W           {R4-R9,PC}|189-232-240-131
43188|code|LSLS            R2, R3, #2|154-0
43190|code|MOV             R1, R5|41-70
43192|code|SUBS            R0, R0, R2|128-26
43194|code|BLX             memmove|254-247-72-236
43198|code|B               loc_A8AC|245-231
43200|code|LDR             R1, [R4]|33-104
43202|code|SUBS            R0, R0, R1|64-26
43204|code|ASRS            R0, R0, #2|128-16
43206|code|BEQ             loc_A934|53-208
43208|code|LSLS            R3, R0, #1|67-0
43210|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
43214|code|CMP             R3, R6|179-66
43216|code|IT CC|56-191
43218|code|MOVCC           R6, R3|30-70
43220|code|LSLS            R7, R6, #2|183-0
43222|code|CMP             R0, R3|152-66
43224|code|BLS             loc_A8E2|3-217
43226|code|MOV             R7, #0xFFFFFFFC|111-240-3-7
43230|code|MOV             R6, #0x3FFFFFFF|111-240-64-70
43234|code|SUBS            R3, R5, R1|107-26
43236|code|ASRS            R3, R3, #2|155-16
43238|code|MOV             R8, R3|152-70
43240|code|CBZ             R6, loc_A8FC|70-177
43242|code|MOV             R0, R7|56-70
43244|code|STR             R2, [SP,#4]|1-146
43246|code|BLX             _Znwj; operator new(uint)|254-247-252-235
43250|code|LDR             R1, [R4]|33-104
43252|code|LDR             R2, [SP,#4]|1-154
43254|code|SUBS            R3, R5, R1|107-26
43256|code|ASRS            R3, R3, #2|155-16
43258|code|MOV             R6, R0|6-70
43260|code|ADD.W           R0, R6, R8,LSL#2|6-235-136-0
43264|code|CBZ             R0, loc_A908|16-177
43266|code|LDR             R2, [R2]|18-104
43268|code|STR.W           R2, [R6,R8,LSL#2]|70-248-40-32
43272|code|MOV             R9, R3|153-70
43274|code|CBNZ            R3, loc_A93A|179-185
43276|code|LDR             R3, [R4,#4]|99-104
43278|code|ADD             R9, R6|177-68
43280|code|ADD.W           R9, R9, #4|9-241-4-9
43284|code|RSB.W           R8, R5, R3|197-235-3-8
43288|code|MOVS.W          R8, R8,ASR#2|95-234-168-8
43292|code|BNE             loc_A948|20-209
43294|code|LDR             R0, [R4]|32-104
43296|code|ADD.W           R5, R9, R8|9-235-8-5
43300|code|CBZ             R0, loc_A92A|8-177
43302|code|BLX             _ZdlPv; operator delete(void *)|254-247-90-235
43306|code|ADDS            R7, R6, R7|247-25
43308|code|STR             R6, [R4]|38-96
43310|code|STR             R5, [R4,#4]|101-96
43312|code|STR             R7, [R4,#8]|167-96
43314|code|B               loc_A8AE|188-231
43316|code|MOVS            R7, #4|4-39
43318|code|MOVS            R6, #1|1-38
43320|code|B               loc_A8E2|211-231
43322|code|MOV.W           R9, R3,LSL#2|79-234-131-9
43326|code|MOV             R0, R6|48-70
43328|code|MOV             R2, R9|74-70
43330|code|BLX             memmove|254-247-4-236
43334|code|B               loc_A90C|225-231
43336|code|MOV.W           R8, R8,LSL#2|79-234-136-8
43340|code|MOV             R0, R9|72-70
43342|code|MOV             R1, R5|41-70
43344|code|MOV             R2, R8|66-70
43346|code|BLX             memmove|254-247-252-235
43350|code|B               loc_A91E|226-231
43352|code|PUSH.W          {R4-R9,LR}|45-233-240-67
43356|code|MOV             R6, R0|6-70
43358|code|SUB             SP, SP, #0xC|131-176
43360|code|MOV             R4, R1|12-70
43362|code|CBZ             R1, loc_A98E|161-177
43364|code|LDR             R7, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|27-79
43366|code|MOV.W           R8, #0xFFFFFFFF|79-240-255-56
43370|code|LDR.W           R9, =0|223-248-108-144
43374|code|MOV             R0, R6|48-70
43376|code|LDR             R1, [R4,#0xC]|225-104
43378|code|BL              sub_A958|255-247-241-255
43382|code|LDR             R3, [R4,#0x14]|99-105
43384|code|LDR             R5, [R4,#8]|165-104
43386|code|SUB.W           R0, R3, #0xC|163-241-12-0
43390|code|CMP             R0, R7|184-66
43392|code|BNE             loc_A994|8-209
43394|code|MOV             R0, R4; void *|32-70
43396|code|MOV             R4, R5|44-70
43398|code|BLX             _ZdlPv; operator delete(void *)|254-247-42-235
43402|code|CMP             R5, #0|0-45
43404|code|BNE             loc_A96E|239-209
43406|code|ADD             SP, SP, #0xC|3-176
43408|code|POP.W           {R4-R9,PC}|189-232-240-131
43412|code|SUBS            R1, R3, #4|25-31
43414|code|CMP.W           R9, #0|185-241-0-15
43418|code|BEQ             loc_A9C6|20-208
43420|code|DMB.W           SY|191-243-95-143
43424|code|LDREX.W         R2, [R1]|81-232-0-47
43428|code|ADD.W           R3, R2, R8|2-235-8-3
43432|code|STREX.W         R2, R3, [R1]|65-232-0-50
43436|code|TEQ.W           R2, #0|146-240-0-15
43440|code|BNE             loc_A9A0|246-209
43442|code|SUB.W           R2, R3, R8|163-235-8-2
43446|code|DMB.W           SY|191-243-95-143
43450|code|CMP             R2, #0|0-42
43452|code|BGT             loc_A982|225-220
43454|code|ADD             R1, SP, #0x28+var_24|1-169
43456|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-86-235
43460|code|B               loc_A982|221-231
43462|code|LDR.W           R2, [R3,#-4]|83-248-4-44
43466|code|SUBS            R1, R2, #1|81-30
43468|code|STR.W           R1, [R3,#-4]|67-248-4-28
43472|code|B               loc_A9BA|243-231
43474|data|ALIGN 4|0-191
43476|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
43480|data|DCD 0|0-0-0-0
43484|code|PUSH.W          {R4-R10,LR}|45-233-240-71
43488|code|MOV             R4, R0|4-70
43490|code|SUB             SP, SP, #8|130-176
43492|code|MOV             R6, R1|14-70
43494|code|MOV             R5, R2|21-70
43496|code|CMP             R2, #0|0-42
43498|code|BEQ             loc_AA56|52-208
43500|code|LDR             R7, [R0,#4]|71-104
43502|code|LDR             R2, [R0,#8]|130-104
43504|code|SUBS            R2, R2, R7|210-27
43506|code|CMP             R5, R2|149-66
43508|code|BLS             loc_AA5C|50-217
43510|code|LDR             R2, [R0]|2-104
43512|code|SUBS            R7, R7, R2|191-26
43514|code|MVNS            R1, R7|249-67
43516|code|CMP             R5, R1|141-66
43518|code|BHI.W           loc_AB08|0-242-131-128
43522|code|CMP             R7, R5|175-66
43524|code|ITE CS|44-191
43526|code|ADDCS.W         R8, R7, R7|7-235-7-8
43530|code|ADDCC.W         R8, R7, R5|7-235-5-8
43534|code|RSB.W           R9, R2, R6|194-235-6-9
43538|code|CMP             R7, R8|71-69
43540|code|IT HI|136-191
43542|code|MOVHI.W         R8, #0xFFFFFFFF|79-240-255-56
43546|code|MOV             R7, R8|71-70
43548|code|CMP.W           R8, #0|184-241-0-15
43552|code|BNE             loc_AAFA|107-209
43554|code|LDRB            R1, [R3]; c|25-120
43556|code|ADD.W           R0, R7, R9; s|7-235-9-0
43560|code|MOV             R2, R5; n|42-70
43562|code|BLX             memset|254-247-254-234
43566|code|LDR             R1, [R4]; src|33-104
43568|code|SUBS.W          R10, R6, R1|182-235-1-10
43572|code|BNE             loc_AADA|81-209
43574|code|LDR             R3, [R4,#4]|99-104
43576|code|ADD             R10, R7|186-68
43578|code|ADD             R5, R10|85-68
43580|code|SUBS.W          R9, R3, R6|179-235-6-9
43584|code|BNE             loc_AAEE|85-209
43586|code|LDR             R0, [R4]; void *|32-104
43588|code|ADD             R5, R9|77-68
43590|code|CBZ             R0, loc_AA4C|8-177
43592|code|BLX             _ZdlPv; operator delete(void *)|254-247-200-234
43596|code|ADD.W           R3, R7, R8|7-235-8-3
43600|code|STR             R7, [R4]|39-96
43602|code|STR             R5, [R4,#4]|101-96
43604|code|STR             R3, [R4,#8]|163-96
43606|code|ADD             SP, SP, #8|2-176
43608|code|POP.W           {R4-R10,PC}|189-232-240-135
43612|code|RSB.W           R8, R1, R7|193-235-7-8
43616|code|LDRB.W          R9, [R3]|147-248-0-144
43620|code|CMP             R5, R8|69-69
43622|code|BCS             loc_AAA2|28-210
43624|code|RSB.W           R8, R5, R7|197-235-7-8
43628|code|SUBS.W          R2, R7, R8; n|183-235-8-2
43632|code|IT EQ|8-191
43634|code|MOVEQ           R3, R7|59-70
43636|code|BEQ             loc_AA80|4-208
43638|code|MOV             R0, R7; dest|56-70
43640|code|MOV             R1, R8; src|65-70
43642|code|BLX             memmove|254-247-104-235
43646|code|LDR             R3, [R4,#4]|99-104
43648|code|SUBS.W          R2, R8, R6; n|184-235-6-2
43652|code|ADD             R3, R5|43-68
43654|code|STR             R3, [R4,#4]|99-96
43656|code|BEQ             loc_AA92|3-208
43658|code|SUBS            R0, R7, R2; dest|184-26
43660|code|MOV             R1, R6; src|49-70
43662|code|BLX             memmove|254-247-94-235
43666|code|MOV             R2, R5; n|42-70
43668|code|MOV             R0, R6; s|48-70
43670|code|MOV             R1, R9; c|73-70
43672|code|ADD             SP, SP, #8|2-176
43674|code|POP.W           {R4-R10,LR}|189-232-240-71
43678|code|B.W             j_memset|254-247-193-186
43682|code|RSB.W           R5, R8, R5|200-235-5-5
43686|code|MOV             R0, R7; s|56-70
43688|code|MOV             R1, R9; c|73-70
43690|code|MOV             R2, R5; n|42-70
43692|code|BLX             memset|254-247-188-234
43696|code|LDR             R0, [R4,#4]|96-104
43698|code|ADDS            R0, R0, R5; dest|64-25
43700|code|STR             R0, [R4,#4]|96-96
43702|code|CMP.W           R8, #0|184-241-0-15
43706|code|BEQ             loc_AAC6|4-208
43708|code|MOV             R1, R6; src|49-70
43710|code|MOV             R2, R8; n|66-70
43712|code|BLX             memmove|254-247-68-235
43716|code|LDR             R0, [R4,#4]|96-104
43718|code|ADD             R0, R8|64-68
43720|code|MOV             R1, R9; c|73-70
43722|code|STR             R0, [R4,#4]|96-96
43724|code|MOV             R2, R8; n|66-70
43726|code|MOV             R0, R6; s|48-70
43728|code|ADD             SP, SP, #8|2-176
43730|code|POP.W           {R4-R10,LR}|189-232-240-71
43734|code|B.W             j_memset|254-247-165-186
43738|code|MOV             R2, R10; n|82-70
43740|code|MOV             R0, R7; dest|56-70
43742|code|BLX             memmove|254-247-54-235
43746|code|LDR             R3, [R4,#4]|99-104
43748|code|ADD             R10, R7|186-68
43750|code|SUBS.W          R9, R3, R6|179-235-6-9
43754|code|ADD             R5, R10|85-68
43756|code|BEQ             loc_AA42|169-208
43758|code|MOV             R0, R5; dest|40-70
43760|code|MOV             R1, R6; src|49-70
43762|code|MOV             R2, R9; n|74-70
43764|code|BLX             memmove|254-247-42-235
43768|code|B               loc_AA42|163-231
43770|code|MOV             R0, R8; unsigned int|64-70
43772|code|STR             R3, [SP,#0x28+var_24]|1-147
43774|code|BLX             _Znwj; operator new(uint)|254-247-244-234
43778|code|LDR             R3, [SP,#0x28+var_24]|1-155
43780|code|MOV             R7, R0|7-70
43782|code|B               loc_AA22|140-231
43784|code|LDR             R0, =aVectorMFillIns; "vector::_M_fill_insert"|1-72
43786|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|254-247-56-234
43790|data|ALIGN 0x10|0-191
43792|data|DCD aVectorMFillIns; "vector::_M_fill_insert"|140-180-0-0
43796|code|PUSH.W          {R4-R9,LR}|45-233-240-67
43800|code|SUB             SP, SP, #0x1C|135-176
43802|code|MOV             R8, R3|152-70
43804|code|MOV             R5, R0|5-70
43806|code|LDR             R4, [SP,#0x38+arg_0]|14-156
43808|code|MOV             R6, R1|14-70
43810|code|MOV             R7, R2|23-70
43812|code|CMP             R4, R3|156-66
43814|code|IT EQ|8-191
43816|code|LDREQ           R3, =unk_14198; char *|49-75
43818|code|BNE             loc_AB6A|30-209
43820|code|LDR             R1, [R5]|41-104
43822|code|SUBS            R2, R7, R6; unsigned int|186-27
43824|code|MOV             R0, #0x3FFFFFFC|79-246-252-112-195-246-255-112
43832|code|LDR.W           R4, [R3,#-0xC]; std::string::_Rep::_S_empty_rep_storage|83-248-12-76
43836|code|LDR.W           R7, [R1,#-0xC]|81-248-12-124
43840|code|STR             R3, [SP,#0x38+var_2C]|3-147
43842|code|SUBS            R0, R0, R7|192-27
43844|code|ADDS            R0, R0, R2|128-24
43846|code|CMP             R4, R0|132-66
43848|code|BHI             loc_ABD2|67-216
43850|code|SUBS            R1, R6, R1; unsigned int|113-26
43852|code|MOV             R0, R5; this|40-70
43854|code|STR             R4, [SP,#0x38+var_38]; unsigned int|0-148
43856|code|BLX             _ZNSs15_M_replace_safeEjjPKcj; std::string::_M_replace_safe(uint,uint,char const*,uint)|254-247-32-235
43860|code|LDR             R3, [SP,#0x38+var_2C]|3-155
43862|code|MOV             R4, R0|4-70
43864|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|38-74
43866|code|SUB.W           R0, R3, #0xC|163-241-12-0
43870|code|CMP             R0, R2|144-66
43872|code|BNE             loc_AB9E|29-209
43874|code|MOV             R0, R4|32-70
43876|code|ADD             SP, SP, #0x1C|7-176
43878|code|POP.W           {R4-R9,PC}|189-232-240-131
43882|code|RSB.W           R9, R8, R4|200-235-4-9
43886|code|ADD             R2, SP, #0x38+var_28|4-170
43888|code|MOVS            R1, #0|0-33
43890|code|MOV             R0, R9|72-70
43892|code|BLX             _ZNSs4_Rep9_S_createEjjRKSaIcE; std::string::_Rep::_S_create(uint,uint,std::allocator<char> const&)|254-247-252-234
43896|code|ADD.W           R3, R0, #0xC|0-241-12-3
43900|code|MOV             R2, R3|26-70
43902|code|LDRB.W          R1, [R8],#1|24-248-1-27
43906|code|CMP             R8, R4|160-69
43908|code|STRB.W          R1, [R2],#1|2-248-1-27
43912|code|BNE             loc_AB7E|249-209
43914|code|LDR             R2, =_ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|26-74
43916|code|CMP             R0, R2|144-66
43918|code|BEQ             loc_AB2C|205-208
43920|code|MOVS            R2, #0|0-34
43922|code|STR.W           R9, [R0]|192-248-0-144
43926|code|STR             R2, [R0,#8]|130-96
43928|code|STRB.W          R2, [R3,R9]|3-248-9-32
43932|code|B               loc_AB2C|198-231
43934|code|LDR             R2, =0|22-74
43936|code|CBZ             R2, loc_ABE2|250-177
43938|code|SUBS            R3, #4|4-59
43940|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
43944|code|DMB.W           SY|191-243-95-143
43948|code|LDREX.W         R2, [R3]|83-232-0-47
43952|code|ADD.W           R5, R2, R1|2-235-1-5
43956|code|STREX.W         R2, R5, [R3]|67-232-0-82
43960|code|TEQ.W           R2, #0|146-240-0-15
43964|code|BNE             loc_ABAC|246-209
43966|code|SUB.W           R2, R5, R1|165-235-1-2
43970|code|DMB.W           SY|191-243-95-143
43974|code|CMP             R2, #0|0-42
43976|code|BGT             loc_AB62|203-220
43978|code|ADD             R1, SP, #0x38+var_24|5-169
43980|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|254-247-80-234
43984|code|B               loc_AB62|199-231
43986|code|LDR             R0, =aBasicStringMRe; "basic_string::_M_replace_dispatch"|10-72
43988|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|254-247-210-233
43992|code|ADD             R0, SP, #0x38+var_2C; this|3-168
43994|code|BLX             _ZNSsD1Ev; std::string::~string()|254-247-62-234
43998|code|BLX             __cxa_end_cleanup|254-247-42-234
44002|code|LDR.W           R2, [R3,#-4]|83-248-4-44
44006|code|SUBS            R1, R2, #1|81-30
44008|code|STR.W           R1, [R3,#-4]|67-248-4-28
44012|code|B               loc_ABC6|235-231
44014|data|ALIGN 0x10|0-191
44016|data|DCD unk_14198|152-65-1-0
44020|data|DCD _ZNSs4_Rep20_S_empty_rep_storageE; std::string::_Rep::_S_empty_rep_storage|140-65-1-0
44024|data|DCD 0|0-0-0-0
44028|data|DCD aBasicStringMRe; "basic_string::_M_replace_dispatch"|164-180-0-0
44032|code|PUSH.W          {R4-R8,LR}|45-233-240-65
44036|code|MOV             R5, R0|5-70
44038|code|MOV             R6, R2|22-70
44040|code|MOV             R8, R3|152-70
44042|code|CBZ             R1, loc_AC44|217-177
44044|code|MOVS            R7, #1|1-39
44046|code|MOVS            R0, #0x18; unsigned int|24-32
44048|code|BLX             _Znwj; operator new(uint)|254-247-106-234
44052|code|CMN.W           R0, #0x10|16-241-16-15
44056|code|MOV             R4, R0|4-70
44058|code|BEQ             loc_AC2C|7-208
44060|code|MOV             R1, R8|65-70
44062|code|ADD.W           R0, R0, #0x14; this|0-241-20-0
44066|code|LDR.W           R3, [R1],#4; std::string *|81-248-4-59
44070|code|STR             R3, [R4,#0x10]|35-97
44072|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|254-247-10-234
44076|code|ADDS            R3, R5, #4|43-29
44078|code|MOV             R0, R7|56-70
44080|code|MOV             R1, R4|33-70
44082|code|MOV             R2, R6|50-70
44084|code|BLX             _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|254-247-108-234
44088|code|LDR             R3, [R5,#0x14]|107-105
44090|code|MOV             R0, R4; void *|32-70
44092|code|ADDS            R3, #1|1-51
44094|code|STR             R3, [R5,#0x14]|107-97
44096|code|POP.W           {R4-R8,PC}|189-232-240-129
44100|code|ADDS            R3, R0, #4|3-29
44102|code|CMP             R2, R3|154-66
44104|code|BEQ             loc_AC0C|224-208
44106|code|LDR.W           R7, [R8]|216-248-0-112
44110|code|LDR             R3, [R2,#0x10]|19-105
44112|code|CMP             R7, R3|159-66
44114|code|ITE GE|172-191
44116|code|MOVGE           R7, #0|0-39
44118|code|MOVLT           R7, #1|1-39
44120|code|B               loc_AC0E|217-231
44122|code|BLX             __cxa_begin_catch|254-247-150-234
44126|code|MOV             R0, R4; void *|32-70
44128|code|BLX             _ZdlPv; operator delete(void *)|254-247-188-233
44132|code|BLX             __cxa_rethrow|254-247-204-233
44136|code|BLX             __cxa_end_catch|254-247-124-234
44140|code|BLX             __cxa_end_cleanup|254-247-226-233
44144|code|PUSH            {R3-R7,LR}|248-181
44146|code|MOV             R6, R1|14-70
44148|code|LDR             R7, [R1,#8]|143-104
44150|code|MOV             R4, R0|4-70
44152|code|MOV             R5, R2|21-70
44154|code|CBZ             R7, loc_ACA6|167-177
44156|code|LDR             R0, [R2]|16-104
44158|code|B               loc_AC82|0-224
44160|code|MOV             R7, R3|31-70
44162|code|LDR             R2, [R7,#0x10]|58-105
44164|code|MOVS            R1, #1|1-33
44166|code|CMP             R2, R0|130-66
44168|code|ITEE GT|206-191
44170|code|LDRGT           R3, [R7,#8]|187-104
44172|code|LDRLE           R3, [R7,#0xC]|251-104
44174|code|MOVLE           R1, #0|0-33
44176|code|CMP             R3, #0|0-43
44178|code|BNE             loc_AC80|245-209
44180|code|MOV             R3, R7|59-70
44182|code|CBNZ            R1, loc_ACA8|57-185
44184|code|CMP             R2, R0|130-66
44186|code|BLT             loc_ACBE|16-219
44188|code|STR             R3, [R4]|35-96
44190|code|MOV             R0, R4|32-70
44192|code|MOVS            R3, #0|0-35
44194|code|STRB            R3, [R4,#4]|35-113
44196|code|POP             {R3-R7,PC}|248-189
44198|code|ADDS            R7, R1, #4|15-29
44200|code|LDR             R3, [R6,#0xC]|243-104
44202|code|CMP             R7, R3|159-66
44204|code|BEQ             loc_ACBE|7-208
44206|code|MOV             R0, R7|56-70
44208|code|BLX             _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|254-247-178-233
44212|code|MOV             R3, R0|3-70
44214|code|LDR             R0, [R5]|40-104
44216|code|LDR             R2, [R3,#0x10]|26-105
44218|code|CMP             R2, R0|130-66
44220|code|BGE             loc_AC9C|238-218
44222|code|MOV             R3, R5|43-70
44224|code|MOV             R0, R6|48-70
44226|code|MOVS            R1, #0|0-33
44228|code|MOV             R2, R7|58-70
44230|code|BL              sub_AC00|255-247-155-255
44234|code|MOVS            R3, #1|1-35
44236|code|STRB            R3, [R4,#4]|35-113
44238|code|STR             R0, [R4]|32-96
44240|code|MOV             R0, R4|32-70
44242|code|POP             {R3-R7,PC}|248-189
44244|code|ADDS            R3, R0, #4|3-29
44246|code|CMP             R1, R3|153-66
44248|code|PUSH            {R4-R7,LR}|240-181
44250|code|MOV             R5, R0|5-70
44252|code|SUB             SP, SP, #0x1C|135-176
44254|code|MOV             R4, R1|12-70
44256|code|MOV             R6, R2|22-70
44258|code|BEQ             loc_AD42|46-208
44260|code|LDR             R7, [R2]|23-104
44262|code|LDR             R3, [R1,#0x10]|11-105
44264|code|CMP             R7, R3|159-66
44266|code|BGE             loc_AD16|20-218
44268|code|LDR             R1, [R0,#0xC]|193-104
44270|code|CMP             R1, R4|161-66
44272|code|BEQ             loc_AD08|10-208
44274|code|MOV             R0, R4|32-70
44276|code|BLX             _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)|254-247-78-233
44280|code|LDR             R3, [R0,#0x10]|3-105
44282|code|MOV             R2, R0|2-70
44284|code|CMP             R7, R3|159-66
44286|code|BLE             loc_AD6A|52-221
44288|code|LDR             R1, [R0,#0xC]|193-104
44290|code|CMP             R1, #0|0-41
44292|code|BEQ             loc_AD86|63-208
44294|code|MOV             R1, R4|33-70
44296|code|MOV             R0, R5|40-70
44298|code|MOV             R2, R1|10-70
44300|code|MOV             R3, R6|51-70
44302|code|BL              sub_AC00|255-247-119-255
44306|code|ADD             SP, SP, #0x1C|7-176
44308|code|POP             {R4-R7,PC}|240-189
44310|code|IT LE|216-191
44312|code|MOVLE           R0, R1|8-70
44314|code|BLE             loc_AD12|250-221
44316|code|LDR             R2, [R5,#0x10]|42-105
44318|code|CMP             R2, R1|138-66
44320|code|BEQ             loc_AD50|22-208
44322|code|MOV             R0, R1|8-70
44324|code|BLX             _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|254-247-188-233
44328|code|LDR             R3, [R0,#0x10]|3-105
44330|code|CMP             R7, R3|159-66
44332|code|BGE             loc_AD78|36-218
44334|code|LDR             R3, [R4,#0xC]|227-104
44336|code|CMP             R3, #0|0-43
44338|code|BEQ             loc_AD90|45-208
44340|code|MOV             R1, R0|1-70
44342|code|MOV             R3, R6|51-70
44344|code|MOV             R0, R5|40-70
44346|code|MOV             R2, R1|10-70
44348|code|BL              sub_AC00|255-247-96-255
44352|code|B               loc_AD12|231-231
44354|code|LDR             R3, [R0,#0x14]|67-105
44356|code|CBZ             R3, loc_AD5C|83-177
44358|code|LDR             R2, [R0,#0x10]|2-105
44360|code|LDR             R3, [R6]|51-104
44362|code|LDR             R1, [R2,#0x10]|17-105
44364|code|CMP             R1, R3|153-66
44366|code|BGE             loc_AD5C|5-218
44368|code|MOV             R0, R5|40-70
44370|code|MOVS            R1, #0|0-33
44372|code|MOV             R3, R6|51-70
44374|code|BL              sub_AC00|255-247-83-255
44378|code|B               loc_AD12|218-231
44380|code|MOV             R0, SP|104-70
44382|code|MOV             R1, R5|41-70
44384|code|MOV             R2, R6|50-70
44386|code|BL              sub_AC70|255-247-133-255
44390|code|LDR             R0, [SP,#0x30+var_30]|0-152
44392|code|B               loc_AD12|211-231
44394|code|ADD             R0, SP, #0x30+var_28|2-168
44396|code|MOV             R1, R5|41-70
44398|code|MOV             R2, R6|50-70
44400|code|BL              sub_AC70|255-247-126-255
44404|code|LDR             R0, [SP,#0x30+var_28]|2-152
44406|code|B               loc_AD12|204-231
44408|code|ADD             R0, SP, #0x30+var_20|4-168
44410|code|MOV             R1, R5|41-70
44412|code|MOV             R2, R6|50-70
44414|code|BL              sub_AC70|255-247-119-255
44418|code|LDR             R0, [SP,#0x30+var_20]|4-152
44420|code|B               loc_AD12|197-231
44422|code|MOV             R0, R5|40-70
44424|code|MOV             R3, R6|51-70
44426|code|BL              sub_AC00|255-247-57-255
44430|code|B               loc_AD12|192-231
44432|code|MOV             R1, R3|25-70
44434|code|MOV             R0, R5|40-70
44436|code|MOV             R2, R4|34-70
44438|code|MOV             R3, R6|51-70
44440|code|BL              sub_AC00|255-247-50-255
44444|code|B               loc_AD12|185-231
44446|data|ALIGN 0x10|0-191
44448|code|PUSH.W          {R3-R9,LR}|45-233-248-67
44452|code|MOV             R7, R0|7-70
44454|code|LDR             R5, =(off_13EE4 - 0xADB2)|12-77
44456|code|MOV             R8, R1|136-70
44458|code|LDR             R6, =(off_13EE8 - 0xADB8)|12-78
44460|code|MOV             R9, R2|145-70
44462|code|ADD             R5, PC; off_13EE4|125-68
44464|code|BLX             .init_proc|254-247-212-232
44468|code|ADD             R6, PC; off_13EE8|126-68
44470|code|SUBS            R6, R6, R5|118-27
44472|code|ASRS            R6, R6, #2|182-16
44474|code|BEQ             locret_ADD2|10-208
44476|code|SUBS            R5, #4|4-61
44478|code|MOVS            R4, #0|0-36
44480|code|LDR.W           R3, [R5,#4]!|85-248-4-63
44484|code|MOV             R0, R7|56-70
44486|code|MOV             R1, R8|65-70
44488|code|MOV             R2, R9|74-70
44490|code|ADDS            R4, #1|1-52
44492|code|BLX             R3; sub_9C8C|152-71
44494|code|CMP             R4, R6|180-66
44496|code|BNE             loc_ADC0|246-209
44498|code|POP.W           {R3-R9,PC}|189-232-248-131
44502|data|ALIGN 4|0-191
44504|data|DCD off_13EE4 - 0xADB2|50-145-0-0
44508|data|DCD off_13EE8 - 0xADB8|48-145-0-0
44512|code|BX              LR|112-71
44514|data|ALIGN 4|0-191
44516|code|PUSH            {R3,LR}|8-64-45-233
44520|code|POP             {R3,PC}|8-128-189-232
81636|data|DCD sub_9C8C+1|141-156-0-0
81640|data|DCD byte_9C7D|125-156-0-0
81644|data|DCD 0|0-0-0-0
81648|data|Elf32_Dyn <1, <1>>; DT_NEEDED libstdc++.so.6|1-0-0-0-1-0-0-0
81656|data|Elf32_Dyn <1, <0x2CF>>; DT_NEEDED libm.so.6|1-0-0-0-207-2-0-0
81664|data|Elf32_Dyn <1, <0x2D9>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-217-2-0-0
81672|data|Elf32_Dyn <1, <0x2FE>>; DT_NEEDED libc.so.6|1-0-0-0-254-2-0-0
81680|data|Elf32_Dyn <1, <0x3D7>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-215-3-0-0
81688|data|Elf32_Dyn <0xC, <0x8F5C>>; DT_INIT|12-0-0-0-92-143-0-0
81696|data|Elf32_Dyn <0xD, <0xADE4>>; DT_FINI|13-0-0-0-228-173-0-0
81704|data|Elf32_Dyn <0x19, <0x13EE4>>; DT_INIT_ARRAY|25-0-0-0-228-62-1-0
81712|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
81720|data|Elf32_Dyn <0x1A, <0x13EE8>>; DT_FINI_ARRAY|26-0-0-0-232-62-1-0
81728|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
81736|data|Elf32_Dyn <4, <0x81B4>>; DT_HASH|4-0-0-0-180-129-0-0
81744|data|Elf32_Dyn <0x6FFFFEF5, <0x8334>>; DT_GNU_HASH|245-254-255-111-52-131-0-0
81752|data|Elf32_Dyn <5, <0x887C>>; DT_STRTAB|5-0-0-0-124-136-0-0
81760|data|Elf32_Dyn <6, <0x84EC>>; DT_SYMTAB|6-0-0-0-236-132-0-0
81768|data|Elf32_Dyn <0xA, <0x426>>; DT_STRSZ|10-0-0-0-38-4-0-0
81776|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
81784|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
81792|data|Elf32_Dyn <3, <0x14000>>; DT_PLTGOT|3-0-0-0-0-64-1-0
81800|data|Elf32_Dyn <2, <0x188>>; DT_PLTRELSZ|2-0-0-0-136-1-0-0
81808|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
81816|data|Elf32_Dyn <0x17, <0x8DD4>>; DT_JMPREL|23-0-0-0-212-141-0-0
81824|data|Elf32_Dyn <0x11, <0x8DA4>>; DT_REL|17-0-0-0-164-141-0-0
81832|data|Elf32_Dyn <0x12, <0x30>>; DT_RELSZ|18-0-0-0-48-0-0-0
81840|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
81848|data|Elf32_Dyn <0x6FFFFFFE, <0x8D14>>; DT_VERNEED|254-255-255-111-20-141-0-0
81856|data|Elf32_Dyn <0x6FFFFFFF, <4>>; DT_VERNEEDNUM|255-255-255-111-4-0-0-0
81864|data|Elf32_Dyn <0x6FFFFFF0, <0x8CA2>>; DT_VERSYM|240-255-255-111-162-140-0-0
81872|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
81880|data|ALIGN 0x40|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
81920|data|DCD stru_13EF0|240-62-1-0
81924|data|DCD 0|0-0-0-0
81928|data|DCD 0|0-0-0-0
81932|data|DCD __imp__ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|72-66-1-0
81936|data|DCD __imp_abort|240-65-1-0
81940|data|DCD __imp__ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)|88-66-1-0
81944|data|DCD __imp_memcmp|48-66-1-0
81948|data|DCD __imp___libc_start_main|232-65-1-0
81952|data|DCD __imp__ZNSs6assignEPKc; std::string::assign(char const*)|96-66-1-0
81956|data|DCD __imp___gmon_start__|116-66-1-0
81960|data|DCD __imp_rewind|200-65-1-0
81964|data|DCD __imp__ZdlPv; operator delete(void *)|76-66-1-0
81968|data|DCD __imp_fclose|52-66-1-0
81972|data|DCD __imp___printf_chk|68-66-1-0
81976|data|DCD __imp___cxa_rethrow|40-66-1-0
81980|data|DCD __imp_fopen|212-65-1-0
81984|data|DCD __imp__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base; std::_Rb_tree_decrement(std::_Rb_tree_node_base *)|220-65-1-0
81988|data|DCD __imp_memset|20-66-1-0
81992|data|DCD __imp___cxa_end_cleanup|180-65-1-0
81996|data|DCD __imp__ZNSsC1ERKSs; std::string::string(std::string const&)|216-65-1-0
82000|data|DCD __imp_perror|236-65-1-0
82004|data|DCD __imp__ZNSsD1Ev; std::string::~string()|244-65-1-0
82008|data|DCD __imp_getopt_long|4-66-1-0
82012|data|DCD __imp__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|188-65-1-0
82016|data|DCD __imp_fseek|252-65-1-0
82020|data|DCD __imp__ZNKSs4findEPKcjj; std::string::find(char const*,uint,uint)|204-65-1-0
82024|data|DCD __imp_strtoul|8-66-1-0
82028|data|DCD __imp__ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base; std::_Rb_tree_increment(std::_Rb_tree_node_base const*)|56-66-1-0
82032|data|DCD __imp_memcpy|28-66-1-0
82036|data|DCD __imp__ZNSs6resizeEjc; std::string::resize(uint,char)|44-66-1-0
82040|data|DCD __imp__ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|100-66-1-0
82044|data|DCD __imp_ftell|80-66-1-0
82048|data|DCD __imp_strtol|60-66-1-0
82052|data|DCD __imp__Znwj; operator new(uint)|208-65-1-0
82056|data|DCD __imp_fwrite|104-66-1-0
82060|data|DCD __imp__ZNSs9_M_mutateEjjj; std::string::_M_mutate(uint,uint,uint)|196-65-1-0
82064|data|DCD __imp__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_; std::_Rb_tree_insert_and_rebalance(bool,std::_Rb_tree_node_base *,std::_Rb_tree_node_base *,std::_Rb_tree_node_base&)|192-65-1-0
82068|data|DCD __imp___stack_chk_fail|64-66-1-0
82072|data|DCD __imp___fprintf_chk|0-66-1-0
82076|data|DCD __imp__ZNSs14_M_replace_auxEjjjc; std::string::_M_replace_aux(uint,uint,uint,char)|228-65-1-0
82080|data|DCD __imp__ZNSs6assignERKSs; std::string::assign(std::string const&)|84-66-1-0
82084|data|DCD __imp_memmove|108-66-1-0
82088|data|DCD __imp_puts|92-66-1-0
82092|data|DCD __imp___cxa_end_catch|32-66-1-0
82096|data|DCD __imp__ZNSs4_Rep9_S_createEjjRKSaIcE; std::string::_Rep::_S_create(uint,uint,std::allocator<char> const&)|224-65-1-0
82100|data|DCD __imp__ZNSsC1EPKcjRKSaIcE; std::string::string(char const*,uint,std::allocator<char> const&)|12-66-1-0
82104|data|DCD __imp___cxa_begin_catch|24-66-1-0
82108|data|DCD __imp__ZNSs15_M_replace_safeEjjPKcj; std::string::_M_replace_safe(uint,uint,char const*,uint)|184-65-1-0
82112|data|DCD __imp_fread|248-65-1-0
82116|data|DCD __imp___gxx_personality_v0|36-66-1-0
82120|data|DCD __imp__ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|112-66-1-0
82124|data|DCD __imp_exit|16-66-1-0
82128|data|DCD __imp___gmon_start__|116-66-1-0
82132|data|ALIGN 8|0-0-0-0
