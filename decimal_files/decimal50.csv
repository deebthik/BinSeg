address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|13-162-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x14B34; SHT file offset|52-75-1-0
32804|data|DCD 0x5000002; Processor-specific flags|2-0-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1C; Number of entries in SHT|28-0
32818|data|DCW 0x1B; SHT entry index for string table|27-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x14640; File offset|64-70-1-0
32828|data|DCD unk_1C640; Virtual address|64-198-1-0
32832|data|DCD 0x1C640; Physical address|64-198-1-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibArmLinuxGnu; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x27; Size in file image|39-0-0-0
32904|data|DCD 0x27; Size in memory image|39-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x1464C; Size in file image|76-70-1-0
32936|data|DCD 0x1464C; Size in memory image|76-70-1-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x1464C; File offset|76-70-1-0
32956|data|DCD off_2464C; Virtual address|76-70-2-0
32960|data|DCD 0x2464C; Physical address|76-70-2-0
32964|data|DCD 0x3C4; Size in file image|196-3-0-0
32968|data|DCD 0x32570; Size in memory image|112-37-3-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x14658; File offset|88-70-1-0
32988|data|DCD stru_24658; Virtual address|88-70-2-0
32992|data|DCD 0x24658; Physical address|88-70-2-0
32996|data|DCD 0x108; Size in file image|8-1-0-0
33000|data|DCD 0x108; Size in memory image|8-1-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x15C; File offset|92-1-0-0
33020|data|DCD dword_815C; Virtual address|92-129-0-0
33024|data|DCD 0x815C; Physical address|92-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 4; Alignment|4-0-0-0
33076|data|DCB "/lib/arm-linux-gnueabihf/ld-linux.so.3",0|47-108-105-98-47-97-114-109-45-108-105-110-117-120-45-103-110-117-101-97-98-105-104-102-47-108-100-45-108-105-110-117-120-46-115-111-46-51-0
33115|data|DCB 0|0
33116|data|DCD 4; Name Size|4-0-0-0
33120|data|DCD 0x10; Desc Size|16-0-0-0
33124|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33128|data|DCB "GNU",0; Name|71-78-85-0
33132|data|DCD 0, 2, 6, 0x1A; ABI: Linux 2.6.26|0-0-0-0-2-0-0-0-6-0-0-0-26-0-0-0
33148|data|DCD 4; Name Size|4-0-0-0
33152|data|DCD 0x14; Desc Size|20-0-0-0
33156|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33160|data|DCB "GNU",0; Name|71-78-85-0
33164|data|DCB 0xEF, 0xB3, 0xCD, 0xBD, 0x36, 0x20, 0xC6, 0x45, 0x68; Desc|239-179-205-189-54-32-198-69-104-76-40-92-112-185-7-252-182-246-203-121
33184|data|DCD 0x61|97-0-0-0
33188|data|DCD 0x75|117-0-0-0
33192|data|DCD 0x22, 0, 0x5A, 7, 0x2B, 0x60, 0x1F, 0x27, 0x6F, 0x39|34-0-0-0-0-0-0-0-90-0-0-0-7-0-0-0-43-0-0-0-96-0-0-0-31-0-0-0-39-0-0-0-111-0-0-0-57-0-0-0-0-0-0-0-92-0-0-0-37-0-0-0-6-0-0-0-54-0-0-0-17-0-0-0-109-0-0-0-50-0-0-0-89-0-0-0-33-0-0-0-46-0-0-0-23-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-83-0-0-0-19-0-0-0-80-0-0-0-18-0-0-0-0-0-0-0-74-0-0-0-24-0-0-0-3-0-0-0-76-0-0-0-2-0-0-0-79-0-0-0-58-0-0-0-67-0-0-0-103-0-0-0-63-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-47-0-0-0-14-0-0-0-0-0-0-0-77-0-0-0-72-0-0-0-0-0-0-0-84-0-0-0-113-0-0-0-51-0-0-0-27-0-0-0-0-0-0-0-106-0-0-0-0-0-0-0-1-0-0-0-12-0-0-0-112-0-0-0-0-0-0-0-114-0-0-0-61-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-107-0-0-0-97-0-0-0-9-0-0-0-99-0-0-0-52-0-0-0-0-0-0-0-13-0-0-0-45-0-0-0-0-0-0-0-20-0-0-0-8-0-0-0-0-0-0-0-41-0-0-0-62-0-0-0-70-0-0-0-0-0-0-0-81-0-0-0-102-0-0-0-93-0-0-0-38-0-0-0-0-0-0-0-0-0-0-0-29-0-0-0-0-0-0-0-73-0-0-0-68-0-0-0-85-0-0-0-0-0-0-0-0-0-0-0-22-0-0-0-4-0-0-0-86-0-0-0
33580|data|DCD 0, 0x42, 0x1C, 0, 0x6C, 0, 0, 0, 0, 0, 0xB, 0, 0x38|0-0-0-0-66-0-0-0-28-0-0-0-0-0-0-0-108-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-11-0-0-0-0-0-0-0-56-0-0-0-5-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-55-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-104-0-0-0-65-0-0-0-0-0-0-0-0-0-0-0-60-0-0-0-15-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-21-0-0-0-94-0-0-0-30-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-82-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-25-0-0-0-0-0-0-0-53-0-0-0-0-0-0-0-48-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-100-0-0-0-59-0-0-0-75-0-0-0-0-0-0-0-69-0-0-0-35-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-10-0-0-0-0-0-0-0-98-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-16-0-0-0-88-0-0-0-115-0-0-0-91-0-0-0-71-0-0-0-101-0-0-0-0-0-0-0-26-0-0-0-78-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-110-0-0-0-42-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-40-0-0-0-0-0-0-0-105-0-0-0-36-0-0-0-0-0-0-0-0-0-0-0-116-0-0-0-0-0-0-0-44-0-0-0-0-0-0-0-64-0-0-0-87-0-0-0-49-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-95-0-0-0
34048|data|DCD 0x61|97-0-0-0
34052|data|DCD 3|3-0-0-0
34056|data|DCD 0x20|32-0-0-0
34060|data|DCD 0xA|10-0-0-0
34064|data|DCD 0xD918922, 0x7014000, 0x105882C0, 0x11600808, 0x70100082|34-137-145-13-0-64-1-7-192-130-88-16-8-8-96-17-130-0-16-112-0-32-0-16-32-192-64-0-4-41-66-130-4-0-2-0-145-25-0-96-139-32-11-0-192-0-164-42-0-0-1-32-40-129-32-13-0-214-8-17-68-0-16-16-160-8-68-100-21-240-8-147-96-0-0-72-24-128-144-0-0-0-0-0-0-1-101-129-172-4-0-0-32-176-140-0-143-41-130-73-3-64-137-0-0-0-208-9-5-16-160-32-129-64-4-96-0-68-0-9-96-0-1-8-0-5-82-66
34192|data|DCD 3, 0, 0, 5, 7, 0, 8, 0xA, 0xB, 0xC, 0xE, 0xF, 0x13|3-0-0-0-0-0-0-0-0-0-0-0-5-0-0-0-7-0-0-0-0-0-0-0-8-0-0-0-10-0-0-0-11-0-0-0-12-0-0-0-14-0-0-0-15-0-0-0-19-0-0-0-20-0-0-0-24-0-0-0-25-0-0-0-28-0-0-0-29-0-0-0-0-0-0-0-32-0-0-0-0-0-0-0-33-0-0-0-34-0-0-0-36-0-0-0-38-0-0-0-0-0-0-0-40-0-0-0-42-0-0-0-43-0-0-0-44-0-0-0-46-0-0-0-51-0-0-0-0-0-0-0-53-0-0-0-0-0-0-0-0-0-0-0-54-0-0-0-55-0-0-0-59-0-0-0-62-0-0-0-63-0-0-0-64-0-0-0-65-0-0-0-0-0-0-0-68-0-0-0-69-0-0-0-70-0-0-0-71-0-0-0-72-0-0-0-73-0-0-0-0-0-0-0-77-0-0-0-78-0-0-0-0-0-0-0-80-0-0-0-0-0-0-0-81-0-0-0-0-0-0-0-82-0-0-0-0-0-0-0-83-0-0-0-85-0-0-0-0-0-0-0-86-0-0-0-0-0-0-0-0-0-0-0-87-0-0-0-0-0-0-0-89-0-0-0-0-0-0-0-91-0-0-0-92-0-0-0-93-0-0-0-0-0-0-0-94-0-0-0-95-0-0-0-98-0-0-0-99-0-0-0-0-0-0-0-101-0-0-0-103-0-0-0-104-0-0-0-105-0-0-0-0-0-0-0-107-0-0-0-0-0-0-0-108-0-0-0-0-0-0-0-110-0-0-0-112-0-0-0-0-0-0-0-0-0-0-0-115-0-0-0-116-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
34580|data|DCD 0x1C93965E, 0x10A8B551, 0x1C93DB56, 0xFF878EC3, 0xFD3156B5|94-150-147-28-81-181-168-16-86-219-147-28-195-142-135-255-181-86-49-253-44-50-64-253-199-195-238-28-249-44-88-190-159-251-110-15-128-116-130-13-21-64-121-11-233-252-72-62-118-84-60-148-202-150-147-28-92-240-108-15-87-211-166-4-247-35-206-32-54-195-242-122-8-172-249-143-18-22-1-169-185-66-140-96-33-49-231-75-26-192-9-145-46-78-61-246-175-111-136-11-1-175-52-232-246-228-16-209-232-68-109-119-245-241-171-186-85-204-10-131-63-249-255-188-102-85-97-16-57-64-12-175-198-14-224-61-63-126-150-124-196-111-73-62-245-231-223-15-102-73-73-34-17-131-133-27-1-35-249-164-25-220-119-137-124-139-115-15-157-187-147-28-66-69-213-236-148-120-158-124-30-118-181-218-98-172-97-160-125-237-17-15-186-149-147-28-91-154-59-15-65-77-157-124-173-112-14-175-22-234-118-254-88-239-151-121-254-199-60-16-207-77-118-211-116-18-236-167-56-242-139-28-15-132-29-230-71-88-55-15-229-222-147-28-35-190-15-175-234-211-239-14-200-57-64-31-185-141-241-14-185-43-107-21-125-96-156-124-57-232-68-16-237-222-147-28-237-222-147-28-216-113-88-28-56-146-227-112-70-164-129-16-99-222-36-5-179-162-247-18-26-159-214-189-169-189-240-187-187-227-146-124-97-51-102-15-135-75-133-230-206-56-57-15-17-123-156-124-207-41-102-82-119-229-150-124-242-22-230-245-17-137-153-124-40-29-140-28-33-207-9-253-49-184-130-13-177-74-69-75-191-218-87-27-79-156-18-202-36-117-130-13-86-211-3-182-3-55-118-253-33-98-100-7-22-227-63-15-71-1-117-15-236-136-101-7-99-62-180-100-11-15-181-165-7-174-213-39-134-240-150-124-119-215-155-124-205-205-132-124-144-117-130-13-159-131-186-43-180-233-90-241-5-108-178-205-60-173-57-13-226-153-148-124-47-3-49-28-243-190-71-62-215-148-147-28
35036|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
35052|data|Elf32_Sym <aGmonStart - byte_902C, 0, 0, 0x20, 0, 0>; "__gmon_start__"|14-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
35068|data|Elf32_Sym <aJvRegisterclas - byte_902C, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|29-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
35084|data|Elf32_Sym <aStrcmp - byte_902C, strcmp, 0, 0x12, 0, 0>; "strcmp"|86-3-0-0-252-152-0-0-0-0-0-0-18-0-0-0
35100|data|Elf32_Sym <aFwrite+1 - byte_902C, write, 0, 0x12, 0, 0>; "write"|198-2-0-0-28-156-0-0-0-0-0-0-18-0-0-0
35116|data|Elf32_Sym <aStrstr - byte_902C, strstr, 0, 0x12, 0, 0>; "strstr"|215-1-0-0-216-152-0-0-0-0-0-0-18-0-0-0
35132|data|Elf32_Sym <aGetpid - byte_902C, getpid, 0, 0x12, 0, 0>; "getpid"|77-1-0-0-44-155-0-0-0-0-0-0-18-0-0-0
35148|data|Elf32_Sym <aFerror - byte_902C, ferror, 0, 0x12, 0, 0>; "ferror"|111-3-0-0-144-153-0-0-0-0-0-0-18-0-0-0
35164|data|Elf32_Sym <aFflush - byte_902C, fflush, 0, 0x12, 0, 0>; "fflush"|138-0-0-0-80-153-0-0-0-0-0-0-18-0-0-0
35180|data|Elf32_Sym <aSyslog - byte_902C, syslog, 0, 0x12, 0, 0>; "syslog"|131-1-0-0-164-156-0-0-0-0-0-0-18-0-0-0
35196|data|Elf32_Sym <aVsnprintf+1 - byte_902C, snprintf, 0, 0x12, 0, 0>; "snprintf"|35-2-0-0-188-155-0-0-0-0-0-0-18-0-0-0
35212|data|Elf32_Sym <aFgets - byte_902C, fgets, 0, 0x12, 0, 0>; "fgets"|150-1-0-0-132-153-0-0-0-0-0-0-18-0-0-0
35228|data|Elf32_Sym <aMemchr - byte_902C, memchr, 0, 0x12, 0, 0>; "memchr"|70-1-0-0-52-156-0-0-0-0-0-0-18-0-0-0
35244|data|Elf32_Sym <aListen - byte_902C, listen, 0, 0x12, 0, 0>; "listen"|43-1-0-0-148-156-0-0-0-0-0-0-18-0-0-0
35260|data|Elf32_Sym <aRegexec - byte_902C, regexec, 0, 0x12, 0, 0>; "regexec"|198-0-0-0-252-153-0-0-0-0-0-0-18-0-0-0
35276|data|Elf32_Sym <aBssStart_0 - byte_902C, __stack_chk_guard, 0, 0x10, 0, \; "__bss_start__"|169-3-0-0-16-74-2-0-0-0-0-0-16-0-241-255
35292|data|Elf32_Sym <aStrcpy - byte_902C, strcpy, 0, 0x12, 0, 0>; "strcpy"|145-0-0-0-152-154-0-0-0-0-0-0-18-0-0-0
35308|data|Elf32_Sym <aFcntl - byte_902C, fcntl, 0, 0x12, 0, 0>; "fcntl"|43-3-0-0-140-155-0-0-0-0-0-0-18-0-0-0
35324|data|Elf32_Sym <aTcgetattr - byte_902C, tcgetattr, 0, 0x12, 0, 0>; "tcgetattr"|13-3-0-0-100-157-0-0-0-0-0-0-18-0-0-0
35340|data|Elf32_Sym <aUnlink - byte_902C, unlink, 0, 0x12, 0, 0>; "unlink"|36-1-0-0-228-153-0-0-0-0-0-0-18-0-0-0
35356|data|Elf32_Sym <aXstat - byte_902C, __xstat, 0, 0x12, 0, 0>; "__xstat"|61-3-0-0-20-154-0-0-0-0-0-0-18-0-0-0
35372|data|Elf32_Sym <aGaiStrerror+4 - byte_902C, strerror, 0, 0x12, 0, 0>; "strerror"|181-0-0-0-224-154-0-0-0-0-0-0-18-0-0-0
35388|data|Elf32_Sym <aGetnameinfo - byte_902C, getnameinfo, 0, 0x12, 0, 0>; "getnameinfo"|11-2-0-0-112-156-0-0-0-0-0-0-18-0-0-0
35404|data|Elf32_Sym <aHostsCtl - byte_902C, hosts_ctl, 0, 0x12, 0, 0>; "hosts_ctl"|84-0-0-0-124-156-0-0-0-0-0-0-18-0-0-0
35420|data|Elf32_Sym <aIsoc99Sscanf - byte_902C, __isoc99_sscanf, 0, 0x12, 0, 0>; "__isoc99_sscanf"|225-0-0-0-200-155-0-0-0-0-0-0-18-0-0-0
35436|data|Elf32_Sym <aCfsetospeed - byte_902C, cfsetospeed, 0, 0x12, 0, 0>; "cfsetospeed"|49-3-0-0-56-154-0-0-0-0-0-0-18-0-0-0
35452|data|Elf32_Sym <aLibcStartMain - byte_902C, __libc_start_main, 0, 0x12, 0, \; "__libc_start_main"|93-3-0-0-212-154-0-0-0-0-0-0-18-0-0-0
35468|data|Elf32_Sym <aStderr+3 - byte_902C, err+1, 0x1C, 0x12, 0, 0xE>; "err"|162-2-0-0-245-42-1-0-28-0-0-0-18-0-14-0
35484|data|Elf32_Sym <aBssEnd+1 - byte_902C, _end_0, 0, 0x10, 0, 0xFFF1>; "_bss_end__"|184-3-0-0-188-107-5-0-0-0-0-0-16-0-241-255
35500|data|Elf32_Sym <aCfmakeraw - byte_902C, cfmakeraw, 0, 0x12, 0, 0>; "cfmakeraw"|215-0-0-0-240-152-0-0-0-0-0-0-18-0-0-0
35516|data|Elf32_Sym <aGetsockopt - byte_902C, getsockopt, 0, 0x12, 0, 0>; "getsockopt"|23-2-0-0-104-154-0-0-0-0-0-0-18-0-0-0
35532|data|Elf32_Sym <aForkpty - byte_902C, forkpty, 0, 0x12, 0, 0>; "forkpty"|113-0-0-0-64-157-0-0-0-0-0-0-18-0-0-0
35548|data|Elf32_Sym <aCfsetispeed - byte_902C, cfsetispeed, 0, 0x12, 0, 0>; "cfsetispeed"|138-1-0-0-128-155-0-0-0-0-0-0-18-0-0-0
35564|data|Elf32_Sym <aFprintf - byte_902C, fprintf, 0, 0x12, 0, 0>; "fprintf"|248-2-0-0-116-155-0-0-0-0-0-0-18-0-0-0
35580|data|Elf32_Sym <aStdin - byte_902C, stdin, 4, 0x11, 0, 0x19>; "stdin"|64-1-0-0-32-74-2-0-4-0-0-0-17-0-25-0
35596|data|Elf32_Sym <aStrncpy - byte_902C, strncpy, 0, 0x12, 0, 0>; "strncpy"|249-0-0-0-4-156-0-0-0-0-0-0-18-0-0-0
35612|data|Elf32_Sym <aRealloc - byte_902C, realloc, 0, 0x12, 0, 0>; "realloc"|50-1-0-0-240-153-0-0-0-0-0-0-18-0-0-0
35628|data|Elf32_Sym <aExit - byte_902C, exit, 0, 0x12, 0, 0>; "exit"|152-0-0-0-56-155-0-0-0-0-0-0-18-0-0-0
35644|data|Elf32_Sym <aRegfree - byte_902C, regfree, 0, 0x12, 0, 0>; "regfree"|11-1-0-0-116-154-0-0-0-0-0-0-18-0-0-0
35660|data|Elf32_Sym <aLockf - byte_902C, lockf, 0, 0x12, 0, 0>; "lockf"|170-1-0-0-236-155-0-0-0-0-0-0-18-0-0-0
35676|data|Elf32_Sym <aCtypeBLoc - byte_902C, __ctype_b_loc, 0, 0x12, 0, 0>; "__ctype_b_loc"|130-2-0-0-32-155-0-0-0-0-0-0-18-0-0-0
35692|data|Elf32_Sym <aSetsid - byte_902C, setsid, 0, 0x12, 0, 0>; "setsid"|36-3-0-0-92-155-0-0-0-0-0-0-18-0-0-0
35708|data|Elf32_Sym <aErrnoLocation - byte_902C, __errno_location, 0, 0x12, 0, \; "__errno_location"|222-1-0-0-164-155-0-0-0-0-0-0-18-0-0-0
35724|data|Elf32_Sym <aGaiStrerror - byte_902C, gai_strerror, 0, 0x12, 0, 0>; "gai_strerror"|177-0-0-0-120-153-0-0-0-0-0-0-18-0-0-0
35740|data|Elf32_Sym <aFopen - byte_902C, fopen, 0, 0x12, 0, 0>; "fopen"|171-0-0-0-44-153-0-0-0-0-0-0-18-0-0-0
35756|data|Elf32_Sym <aStrlen - byte_902C, strlen, 0, 0x12, 0, 0>; "strlen"|163-1-0-0-80-155-0-0-0-0-0-0-18-0-0-0
35772|data|Elf32_Sym <aEdata - byte_902C, __stack_chk_guard, 0, 0x10, 0, 0xFFF1>; "_edata"|150-3-0-0-16-74-2-0-0-0-0-0-16-0-241-255
35788|data|Elf32_Sym <aCtime+1 - byte_902C, time, 0, 0x12, 0, 0>; "time"|50-2-0-0-168-153-0-0-0-0-0-0-18-0-0-0
35804|data|Elf32_Sym <aIoGetc - byte_902C, _IO_getc, 0, 0x12, 0, 0>; "_IO_getc"|77-3-0-0-180-153-0-0-0-0-0-0-18-0-0-0
35820|data|Elf32_Sym <aTcsetattr - byte_902C, tcsetattr, 0, 0x12, 0, 0>; "tcsetattr"|239-1-0-0-140-154-0-0-0-0-0-0-18-0-0-0
35836|data|Elf32_Sym <aAbort - byte_902C, abort, 0, 0x12, 0, 0>; "abort"|58-1-0-0-40-157-0-0-0-0-0-0-18-0-0-0
35852|data|Elf32_Sym <aStrchr - byte_902C, strchr, 0, 0x12, 0, 0>; "strchr"|241-2-0-0-104-155-0-0-0-0-0-0-18-0-0-0
35868|data|Elf32_Sym <aFclose+1 - byte_902C, close, 0, 0x12, 0, 0>; "close"|79-2-0-0-52-157-0-0-0-0-0-0-18-0-0-0
35884|data|Elf32_Sym <aFread+1 - byte_902C, read, 0, 0x12, 0, 0>; "read"|205-2-0-0-68-153-0-0-0-0-0-0-18-0-0-0
35900|data|Elf32_Sym <aStrrchr - byte_902C, strrchr, 0, 0x12, 0, 0>; "strrchr"|190-0-0-0-136-156-0-0-0-0-0-0-18-0-0-0
35916|data|Elf32_Sym <aFwrite - byte_902C, fwrite, 0, 0x12, 0, 0>; "fwrite"|197-2-0-0-80-154-0-0-0-0-0-0-18-0-0-0
35932|data|Elf32_Sym <aEnd - byte_902C, _end_0, 0, 0x10, 0, 0xFFF1>; "__end__"|195-3-0-0-188-107-5-0-0-0-0-0-16-0-241-255
35948|data|Elf32_Sym <aQsort - byte_902C, qsort, 0, 0x12, 0, 0>; "qsort"|0-3-0-0-224-156-0-0-0-0-0-0-18-0-0-0
35964|data|Elf32_Sym <aConnect - byte_902C, connect, 0, 0x12, 0, 0>; "connect"|241-0-0-0-76-157-0-0-0-0-0-0-18-0-0-0
35980|data|Elf32_Sym <aSetsockopt - byte_902C, setsockopt, 0, 0x12, 0, 0>; "setsockopt"|93-2-0-0-20-153-0-0-0-0-0-0-18-0-0-0
35996|data|Elf32_Sym <aStderr - byte_902C, stderr, 4, 0x11, 0, 0x19>; "stderr"|159-2-0-0-24-74-2-0-4-0-0-0-17-0-25-0
36012|data|Elf32_Sym <aVsnprintf - byte_902C, vsnprintf, 0, 0x12, 0, 0>; "vsnprintf"|34-2-0-0-212-156-0-0-0-0-0-0-18-0-0-0
36028|data|Elf32_Sym <aSigaction - byte_902C, sigaction, 0, 0x12, 0, 0>; "sigaction"|223-2-0-0-68-154-0-0-0-0-0-0-18-0-0-0
36044|data|Elf32_Sym <aStrtod - byte_902C, strtod, 0, 0x12, 0, 0>; "strtod"|103-1-0-0-16-156-0-0-0-0-0-0-18-0-0-0
36060|data|Elf32_Sym <aStrtoul - byte_902C, strtoul, 0, 0x12, 0, 0>; "strtoul"|85-2-0-0-68-155-0-0-0-0-0-0-18-0-0-0
36076|data|Elf32_Sym <aFini - byte_902C, .term_proc+1, 0, 0x12, 0, 0xF>; "_fini"|49-0-0-0-93-117-1-0-0-0-0-0-18-0-15-0
36092|data|Elf32_Sym <aStackChkFail - byte_902C, __stack_chk_fail, 0, 0x12, 0, 0>; "__stack_chk_fail"|19-1-0-0-216-153-0-0-0-0-0-0-18-0-0-0
36108|data|Elf32_Sym <aInit - byte_902C, .init_proc+1, 0, 0x12, 0, 0xC>; "_init"|94-0-0-0-173-152-0-0-0-0-0-0-18-0-12-0
36124|data|Elf32_Sym <aFprintf+1 - byte_902C, printf, 0, 0x12, 0, 0>; "printf"|249-2-0-0-32-153-0-0-0-0-0-0-18-0-0-0
36140|data|Elf32_Sym <aPoll - byte_902C, poll, 0, 0x12, 0, 0>; "poll"|44-2-0-0-32-154-0-0-0-0-0-0-18-0-0-0
36156|data|Elf32_Sym <aRaise - byte_902C, raise, 0, 0x12, 0, 0>; "raise"|124-2-0-0-228-152-0-0-0-0-0-0-18-0-0-0
36172|data|Elf32_Sym <aStrtok - byte_902C, strtok, 0, 0x12, 0, 0>; "strtok"|110-1-0-0-76-156-0-0-0-0-0-0-18-0-0-0
36188|data|Elf32_Sym <aStrtol - byte_902C, strtol, 0, 0x12, 0, 0>; "strtol"|117-1-0-0-8-153-0-0-0-0-0-0-18-0-0-0
36204|data|Elf32_Sym <aBssStart - byte_902C, __stack_chk_guard, 0, 0x10, 0, \; "__bss_start"|157-3-0-0-16-74-2-0-0-0-0-0-16-0-241-255
36220|data|Elf32_Sym <aOpenlog - byte_902C, openlog, 0, 0x12, 0, 0>; "openlog"|188-1-0-0-188-156-0-0-0-0-0-0-18-0-0-0
36236|data|Elf32_Sym <aUmask - byte_902C, umask, 0, 0x12, 0, 0>; "umask"|118-2-0-0-16-157-0-0-0-0-0-0-18-0-0-0
36252|data|Elf32_Sym <aIsatty - byte_902C, isatty, 0, 0x12, 0, 0>; "isatty"|124-1-0-0-28-157-0-0-0-0-0-0-18-0-0-0
36268|data|Elf32_Sym <aOptarg - byte_902C, optarg, 4, 0x11, 0, 0x19>; "optarg"|152-2-0-0-40-74-2-0-4-0-0-0-17-0-25-0
36284|data|Elf32_Sym <aMemmove - byte_902C, memmove, 0, 0x12, 0, 0>; "memmove"|69-3-0-0-92-153-0-0-0-0-0-0-18-0-0-0
36300|data|Elf32_Sym <aStrncasecmp - byte_902C, strncasecmp, 0, 0x12, 0, 0>; "strncasecmp"|178-2-0-0-176-155-0-0-0-0-0-0-18-0-0-0
36316|data|Elf32_Sym <aEnd_0 - byte_902C, _end_0, 0, 0x10, 0, 0xFFF1>; "_end"|203-3-0-0-188-107-5-0-0-0-0-0-16-0-241-255
36332|data|Elf32_Sym <aExecv - byte_902C, execv, 0, 0x12, 0, 0>; "execv"|157-0-0-0-152-155-0-0-0-0-0-0-18-0-0-0
36348|data|Elf32_Sym <aGettimeofday - byte_902C, gettimeofday, 0, 0x12, 0, 0>; "gettimeofday"|210-2-0-0-164-154-0-0-0-0-0-0-18-0-0-0
36364|data|Elf32_Sym <aChdir - byte_902C, chdir, 0, 0x12, 0, 0>; "chdir"|254-1-0-0-8-154-0-0-0-0-0-0-18-0-0-0
36380|data|Elf32_Sym <aPuts - byte_902C, puts, 0, 0x12, 0, 0>; "puts"|1-1-0-0-188-154-0-0-0-0-0-0-18-0-0-0
36396|data|Elf32_Sym <aFreeaddrinfo - byte_902C, freeaddrinfo, 0, 0x12, 0, 0>; "freeaddrinfo"|23-3-0-0-236-156-0-0-0-0-0-0-18-0-0-0
36412|data|Elf32_Sym <aFork - byte_902C, fork, 0, 0x12, 0, 0>; "fork"|6-1-0-0-100-156-0-0-0-0-0-0-18-0-0-0
36428|data|Elf32_Sym <aCalloc - byte_902C, calloc, 0, 0x12, 0, 0>; "calloc"|156-1-0-0-204-152-0-0-0-0-0-0-18-0-0-0
36444|data|Elf32_Sym <aKill - byte_902C, kill, 0, 0x12, 0, 0>; "kill"|84-1-0-0-20-155-0-0-0-0-0-0-18-0-0-0
36460|data|Elf32_Sym <aStdout - byte_902C, stdout, 4, 0x11, 0, 0x19>; "stdout"|55-2-0-0-36-74-2-0-4-0-0-0-17-0-25-0
36476|data|Elf32_Sym <aFclose - byte_902C, fclose, 0, 0x12, 0, 0>; "fclose"|78-2-0-0-64-156-0-0-0-0-0-0-18-0-0-0
36492|data|Elf32_Sym <aMemset - byte_902C, memset, 0, 0x12, 0, 0>; "memset"|208-1-0-0-248-155-0-0-0-0-0-0-18-0-0-0
36508|data|Elf32_Sym <aAssertFail - byte_902C, __assert_fail, 0, 0x12, 0, 0>; "__assert_fail"|89-1-0-0-88-157-0-0-0-0-0-0-18-0-0-0
36524|data|Elf32_Sym <aBssEnd - byte_902C, _end_0, 0, 0x10, 0, 0xFFF1>; "__bss_end__"|183-3-0-0-188-107-5-0-0-0-0-0-16-0-241-255
36540|data|Elf32_Sym <aDenySeverity - byte_902C, deny_severity, 4, 0x11, 0, 0x18>; "deny_severity"|55-0-0-0-4-73-2-0-4-0-0-0-17-0-24-0
36556|data|Elf32_Sym <aMemcmp - byte_902C, memcmp, 0, 0x12, 0, 0>; "memcmp"|4-2-0-0-192-153-0-0-0-0-0-0-18-0-0-0
36572|data|Elf32_Sym <aWaitpid - byte_902C, waitpid, 0, 0x12, 0, 0>; "waitpid"|233-2-0-0-128-154-0-0-0-0-0-0-18-0-0-0
36588|data|Elf32_Sym <aFileno - byte_902C, fileno, 0, 0x12, 0, 0>; "fileno"|190-2-0-0-40-156-0-0-0-0-0-0-18-0-0-0
36604|data|Elf32_Sym <aStackChkGuard - byte_902C, __stack_chk_guard, 4, 0x11, 0, \; "__stack_chk_guard"|132-3-0-0-16-74-2-0-4-0-0-0-17-0-25-0
36620|data|Elf32_Sym <aCtime - byte_902C, ctime, 0, 0x12, 0, 0>; "ctime"|49-2-0-0-204-153-0-0-0-0-0-0-18-0-0-0
36636|data|Elf32_Sym <aFread - byte_902C, fread, 0, 0x12, 0, 0>; "fread"|204-2-0-0-176-154-0-0-0-0-0-0-18-0-0-0
36652|data|Elf32_Sym <aRegerror - byte_902C, regerror, 0, 0x12, 0, 0>; "regerror"|62-2-0-0-56-153-0-0-0-0-0-0-18-0-0-0
36668|data|Elf32_Sym <aSigemptyset - byte_902C, sigemptyset, 0, 0x12, 0, 0>; "sigemptyset"|176-1-0-0-88-156-0-0-0-0-0-0-18-0-0-0
36684|data|Elf32_Sym <aSprintf - byte_902C, sprintf, 0, 0x12, 0, 0>; "sprintf"|163-0-0-0-176-156-0-0-0-0-0-0-18-0-0-0
36700|data|Elf32_Sym <aGetoptLong - byte_902C, getopt_long, 0, 0x12, 0, 0>; "getopt_long"|166-2-0-0-8-155-0-0-0-0-0-0-18-0-0-0
36716|data|Elf32_Sym <aRegfree+3 - byte_902C, free, 0, 0x12, 0, 0>; "free"|14-1-0-0-108-153-0-0-0-0-0-0-18-0-0-0
36732|data|Elf32_Sym <aFopen+1 - byte_902C, open, 0, 0x12, 0, 0>; "open"|172-0-0-0-252-154-0-0-0-0-0-0-18-0-0-0
36748|data|Elf32_Sym <aGetaddrinfo - byte_902C, getaddrinfo, 0, 0x12, 0, 0>; "getaddrinfo"|196-1-0-0-248-156-0-0-0-0-0-0-18-0-0-0
36764|data|Elf32_Sym <aMemcpy - byte_902C, memcpy, 0, 0x12, 0, 0>; "memcpy"|71-2-0-0-156-153-0-0-0-0-0-0-18-0-0-0
36780|data|Elf32_Sym <aAllowSeverity - byte_902C, allow_severity, 4, 0x11, 0, \; "allow_severity"|69-0-0-0-8-73-2-0-4-0-0-0-17-0-24-0
36796|data|Elf32_Sym <aAccept - byte_902C, accept, 0, 0x12, 0, 0>; "accept"|6-3-0-0-44-154-0-0-0-0-0-0-18-0-0-0
36812|data|Elf32_Sym <aStrdup - byte_902C, __strdup, 0, 0x12, 0, 0>; "__strdup"|206-0-0-0-212-155-0-0-0-0-0-0-18-0-0-0
36828|data|Elf32_Sym <aMalloc - byte_902C, malloc, 0, 0x12, 0, 0>; "malloc"|104-2-0-0-200-154-0-0-0-0-0-0-18-0-0-0
36844|data|Elf32_Sym <aBind - byte_902C, bind, 0, 0x12, 0, 0>; "bind"|249-1-0-0-224-155-0-0-0-0-0-0-18-0-0-0
36860|data|Elf32_Sym <aSocket - byte_902C, socket, 0, 0x12, 0, 0>; "socket"|131-0-0-0-4-157-0-0-0-0-0-0-18-0-0-0
36876|data|Elf32_Sym <aRegcomp - byte_902C, regcomp, 0, 0x12, 0, 0>; "regcomp"|144-2-0-0-200-156-0-0-0-0-0-0-18-0-0-0
36892|data|Elf32_Sym <aStrcat - byte_902C, strcat, 0, 0x12, 0, 0>; "strcat"|111-2-0-0-92-154-0-0-0-0-0-0-18-0-0-0
36908|data|DCB 0|0
36909|data|DCB "libwrap.so.0",0|108-105-98-119-114-97-112-46-115-111-46-48-0
36922|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
36937|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
36957|data|DCB "_fini",0|95-102-105-110-105-0
36963|data|DCB "deny_severity",0|100-101-110-121-95-115-101-118-101-114-105-116-121-0
36977|data|DCB "allow_severity",0|97-108-108-111-119-95-115-101-118-101-114-105-116-121-0
36992|data|DCB "hosts_ctl",0|104-111-115-116-115-95-99-116-108-0
37002|data|DCB "_init",0|95-105-110-105-116-0
37008|data|DCB "libutil.so.1",0|108-105-98-117-116-105-108-46-115-111-46-49-0
37021|data|DCB "forkpty",0|102-111-114-107-112-116-121-0
37029|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
37039|data|DCB "socket",0|115-111-99-107-101-116-0
37046|data|DCB "fflush",0|102-102-108-117-115-104-0
37053|data|DCB "strcpy",0|115-116-114-99-112-121-0
37060|data|DCB "exit",0|101-120-105-116-0
37065|data|DCB "execv",0|101-120-101-99-118-0
37071|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
37079|data|DCB "fopen",0|102-111-112-101-110-0
37085|data|DCB "gai_strerror",0|103-97-105-95-115-116-114-101-114-114-111-114-0
37098|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
37106|data|DCB "regexec",0|114-101-103-101-120-101-99-0
37114|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
37123|data|DCB "cfmakeraw",0|99-102-109-97-107-101-114-97-119-0
37133|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
37149|data|DCB "connect",0|99-111-110-110-101-99-116-0
37157|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
37165|data|DCB "puts",0|112-117-116-115-0
37170|data|DCB "fork",0|102-111-114-107-0
37175|data|DCB "regfree",0|114-101-103-102-114-101-101-0
37183|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
37200|data|DCB "unlink",0|117-110-108-105-110-107-0
37207|data|DCB "listen",0|108-105-115-116-101-110-0
37214|data|DCB "realloc",0|114-101-97-108-108-111-99-0
37222|data|DCB "abort",0|97-98-111-114-116-0
37228|data|DCB "stdin",0|115-116-100-105-110-0
37234|data|DCB "memchr",0|109-101-109-99-104-114-0
37241|data|DCB "getpid",0|103-101-116-112-105-100-0
37248|data|DCB "kill",0|107-105-108-108-0
37253|data|DCB "__assert_fail",0|95-95-97-115-115-101-114-116-95-102-97-105-108-0
37267|data|DCB "strtod",0|115-116-114-116-111-100-0
37274|data|DCB "strtok",0|115-116-114-116-111-107-0
37281|data|DCB "strtol",0|115-116-114-116-111-108-0
37288|data|DCB "isatty",0|105-115-97-116-116-121-0
37295|data|DCB "syslog",0|115-121-115-108-111-103-0
37302|data|DCB "cfsetispeed",0|99-102-115-101-116-105-115-112-101-101-100-0
37314|data|DCB "fgets",0|102-103-101-116-115-0
37320|data|DCB "calloc",0|99-97-108-108-111-99-0
37327|data|DCB "strlen",0|115-116-114-108-101-110-0
37334|data|DCB "lockf",0|108-111-99-107-102-0
37340|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
37352|data|DCB "openlog",0|111-112-101-110-108-111-103-0
37360|data|DCB "getaddrinfo",0|103-101-116-97-100-100-114-105-110-102-111-0
37372|data|DCB "memset",0|109-101-109-115-101-116-0
37379|data|DCB "strstr",0|115-116-114-115-116-114-0
37386|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
37403|data|DCB "tcsetattr",0|116-99-115-101-116-97-116-116-114-0
37413|data|DCB "bind",0|98-105-110-100-0
37418|data|DCB "chdir",0|99-104-100-105-114-0
37424|data|DCB "memcmp",0|109-101-109-99-109-112-0
37431|data|DCB "getnameinfo",0|103-101-116-110-97-109-101-105-110-102-111-0
37443|data|DCB "getsockopt",0|103-101-116-115-111-99-107-111-112-116-0
37454|data|DCB "vsnprintf",0|118-115-110-112-114-105-110-116-102-0
37464|data|DCB "poll",0|112-111-108-108-0
37469|data|DCB "ctime",0|99-116-105-109-101-0
37475|data|DCB "stdout",0|115-116-100-111-117-116-0
37482|data|DCB "regerror",0|114-101-103-101-114-114-111-114-0
37491|data|DCB "memcpy",0|109-101-109-99-112-121-0
37498|data|DCB "fclose",0|102-99-108-111-115-101-0
37505|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
37513|data|DCB "setsockopt",0|115-101-116-115-111-99-107-111-112-116-0
37524|data|DCB "malloc",0|109-97-108-108-111-99-0
37531|data|DCB "strcat",0|115-116-114-99-97-116-0
37538|data|DCB "umask",0|117-109-97-115-107-0
37544|data|DCB "raise",0|114-97-105-115-101-0
37550|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
37564|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
37572|data|DCB "optarg",0|111-112-116-97-114-103-0
37579|data|DCB "stderr",0|115-116-100-101-114-114-0
37586|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
37598|data|DCB "strncasecmp",0|115-116-114-110-99-97-115-101-99-109-112-0
37610|data|DCB "fileno",0|102-105-108-101-110-111-0
37617|data|DCB "fwrite",0|102-119-114-105-116-101-0
37624|data|DCB "fread",0|102-114-101-97-100-0
37630|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
37643|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
37653|data|DCB "waitpid",0|119-97-105-116-112-105-100-0
37661|data|DCB "strchr",0|115-116-114-99-104-114-0
37668|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
37676|data|DCB "qsort",0|113-115-111-114-116-0
37682|data|DCB "accept",0|97-99-99-101-112-116-0
37689|data|DCB "tcgetattr",0|116-99-103-101-116-97-116-116-114-0
37699|data|DCB "freeaddrinfo",0|102-114-101-101-97-100-100-114-105-110-102-111-0
37712|data|DCB "setsid",0|115-101-116-115-105-100-0
37719|data|DCB "fcntl",0|102-99-110-116-108-0
37725|data|DCB "cfsetospeed",0|99-102-115-101-116-111-115-112-101-101-100-0
37737|data|DCB "__xstat",0|95-95-120-115-116-97-116-0
37745|data|DCB "memmove",0|109-101-109-109-111-118-101-0
37753|data|DCB "_IO_getc",0|95-73-79-95-103-101-116-99-0
37762|data|DCB "strcmp",0|115-116-114-99-109-112-0
37769|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
37787|data|DCB "ferror",0|102-101-114-114-111-114-0
37794|data|DCB "ld-linux.so.3",0|108-100-45-108-105-110-117-120-46-115-111-46-51-0
37808|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
37826|data|DCB "_edata",0|95-101-100-97-116-97-0
37833|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
37845|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
37859|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
37871|data|DCB "__end__",0|95-95-101-110-100-95-95-0
37879|data|DCB "_end",0|95-101-110-100-0
37884|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
37894|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
37904|data|DCW 0|0-0
37906|data|DCW 0; local  symbol: __gmon_start__|0-0
37908|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
37910|data|DCW 2; strcmp@@GLIBC_2.4|2-0
37912|data|DCW 2; write@@GLIBC_2.4|2-0
37914|data|DCW 2; strstr@@GLIBC_2.4|2-0
37916|data|DCW 2; getpid@@GLIBC_2.4|2-0
37918|data|DCW 2; ferror@@GLIBC_2.4|2-0
37920|data|DCW 2; fflush@@GLIBC_2.4|2-0
37922|data|DCW 2; syslog@@GLIBC_2.4|2-0
37924|data|DCW 2; snprintf@@GLIBC_2.4|2-0
37926|data|DCW 2; fgets@@GLIBC_2.4|2-0
37928|data|DCW 2; memchr@@GLIBC_2.4|2-0
37930|data|DCW 2; listen@@GLIBC_2.4|2-0
37932|data|DCW 2; regexec@@GLIBC_2.4|2-0
37934|data|DCW 1; global symbol: __bss_start__|1-0
37936|data|DCW 2; strcpy@@GLIBC_2.4|2-0
37938|data|DCW 2; fcntl@@GLIBC_2.4|2-0
37940|data|DCW 2; tcgetattr@@GLIBC_2.4|2-0
37942|data|DCW 2; unlink@@GLIBC_2.4|2-0
37944|data|DCW 2; __xstat@@GLIBC_2.4|2-0
37946|data|DCW 2; strerror@@GLIBC_2.4|2-0
37948|data|DCW 2; getnameinfo@@GLIBC_2.4|2-0
37950|data|DCW 0; local  symbol: hosts_ctl|0-0
37952|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
37954|data|DCW 2; cfsetospeed@@GLIBC_2.4|2-0
37956|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
37958|data|DCW 1; global symbol: err|1-0
37960|data|DCW 1; global symbol: _bss_end__|1-0
37962|data|DCW 2; cfmakeraw@@GLIBC_2.4|2-0
37964|data|DCW 2; getsockopt@@GLIBC_2.4|2-0
37966|data|DCW 5; forkpty@@GLIBC_2.4|5-0
37968|data|DCW 2; cfsetispeed@@GLIBC_2.4|2-0
37970|data|DCW 2; fprintf@@GLIBC_2.4|2-0
37972|data|DCW 2; stdin@@GLIBC_2.4|2-0
37974|data|DCW 2; strncpy@@GLIBC_2.4|2-0
37976|data|DCW 2; realloc@@GLIBC_2.4|2-0
37978|data|DCW 2; exit@@GLIBC_2.4|2-0
37980|data|DCW 2; regfree@@GLIBC_2.4|2-0
37982|data|DCW 2; lockf@@GLIBC_2.4|2-0
37984|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
37986|data|DCW 2; setsid@@GLIBC_2.4|2-0
37988|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
37990|data|DCW 2; gai_strerror@@GLIBC_2.4|2-0
37992|data|DCW 2; fopen@@GLIBC_2.4|2-0
37994|data|DCW 2; strlen@@GLIBC_2.4|2-0
37996|data|DCW 1; global symbol: _edata|1-0
37998|data|DCW 2; time@@GLIBC_2.4|2-0
38000|data|DCW 2; _IO_getc@@GLIBC_2.4|2-0
38002|data|DCW 2; tcsetattr@@GLIBC_2.4|2-0
38004|data|DCW 2; abort@@GLIBC_2.4|2-0
38006|data|DCW 2; strchr@@GLIBC_2.4|2-0
38008|data|DCW 2; close@@GLIBC_2.4|2-0
38010|data|DCW 2; read@@GLIBC_2.4|2-0
38012|data|DCW 2; strrchr@@GLIBC_2.4|2-0
38014|data|DCW 2; fwrite@@GLIBC_2.4|2-0
38016|data|DCW 1; global symbol: __end__|1-0
38018|data|DCW 2; qsort@@GLIBC_2.4|2-0
38020|data|DCW 2; connect@@GLIBC_2.4|2-0
38022|data|DCW 2; setsockopt@@GLIBC_2.4|2-0
38024|data|DCW 2; stderr@@GLIBC_2.4|2-0
38026|data|DCW 2; vsnprintf@@GLIBC_2.4|2-0
38028|data|DCW 2; sigaction@@GLIBC_2.4|2-0
38030|data|DCW 2; strtod@@GLIBC_2.4|2-0
38032|data|DCW 2; strtoul@@GLIBC_2.4|2-0
38034|data|DCW 1; global symbol: _fini|1-0
38036|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
38038|data|DCW 1; global symbol: _init|1-0
38040|data|DCW 2; printf@@GLIBC_2.4|2-0
38042|data|DCW 2; poll@@GLIBC_2.4|2-0
38044|data|DCW 2; raise@@GLIBC_2.4|2-0
38046|data|DCW 2; strtok@@GLIBC_2.4|2-0
38048|data|DCW 2; strtol@@GLIBC_2.4|2-0
38050|data|DCW 1; global symbol: __bss_start|1-0
38052|data|DCW 2; openlog@@GLIBC_2.4|2-0
38054|data|DCW 2; umask@@GLIBC_2.4|2-0
38056|data|DCW 2; isatty@@GLIBC_2.4|2-0
38058|data|DCW 2; optarg@@GLIBC_2.4|2-0
38060|data|DCW 2; memmove@@GLIBC_2.4|2-0
38062|data|DCW 2; strncasecmp@@GLIBC_2.4|2-0
38064|data|DCW 1; global symbol: _end|1-0
38066|data|DCW 2; execv@@GLIBC_2.4|2-0
38068|data|DCW 2; gettimeofday@@GLIBC_2.4|2-0
38070|data|DCW 2; chdir@@GLIBC_2.4|2-0
38072|data|DCW 2; puts@@GLIBC_2.4|2-0
38074|data|DCW 2; freeaddrinfo@@GLIBC_2.4|2-0
38076|data|DCW 2; fork@@GLIBC_2.4|2-0
38078|data|DCW 2; calloc@@GLIBC_2.4|2-0
38080|data|DCW 2; kill@@GLIBC_2.4|2-0
38082|data|DCW 2; stdout@@GLIBC_2.4|2-0
38084|data|DCW 2; fclose@@GLIBC_2.4|2-0
38086|data|DCW 2; memset@@GLIBC_2.4|2-0
38088|data|DCW 2; __assert_fail@@GLIBC_2.4|2-0
38090|data|DCW 1; global symbol: __bss_end__|1-0
38092|data|DCW 1; global symbol: deny_severity|1-0
38094|data|DCW 2; memcmp@@GLIBC_2.4|2-0
38096|data|DCW 2; waitpid@@GLIBC_2.4|2-0
38098|data|DCW 2; fileno@@GLIBC_2.4|2-0
38100|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
38102|data|DCW 2; ctime@@GLIBC_2.4|2-0
38104|data|DCW 2; fread@@GLIBC_2.4|2-0
38106|data|DCW 2; regerror@@GLIBC_2.4|2-0
38108|data|DCW 2; sigemptyset@@GLIBC_2.4|2-0
38110|data|DCW 2; sprintf@@GLIBC_2.4|2-0
38112|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
38114|data|DCW 2; free@@GLIBC_2.4|2-0
38116|data|DCW 2; open@@GLIBC_2.4|2-0
38118|data|DCW 2; getaddrinfo@@GLIBC_2.4|2-0
38120|data|DCW 2; memcpy@@GLIBC_2.4|2-0
38122|data|DCW 1; global symbol: allow_severity|1-0
38124|data|DCW 2; accept@@GLIBC_2.4|2-0
38126|data|DCW 2; __strdup@@GLIBC_2.4|2-0
38128|data|DCW 2; malloc@@GLIBC_2.4|2-0
38130|data|DCW 2; bind@@GLIBC_2.4|2-0
38132|data|DCW 2; socket@@GLIBC_2.4|2-0
38134|data|DCW 2; regcomp@@GLIBC_2.4|2-0
38136|data|DCW 2; strcat@@GLIBC_2.4|2-0
38138|data|DCW 0|0-0
38140|data|Elf32_Verneed <1, 1, aLibutilSo1 - byte_902C, 0x10, 0x20>; "libutil.so.1"|1-0-1-0-100-0-0-0-16-0-0-0-32-0-0-0
38156|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_902C, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-208-3-0-0-0-0-0-0
38172|data|Elf32_Verneed <1, 1, aLdLinuxSo3 - byte_902C, 0x10, 0x20>; "ld-linux.so.3"|1-0-1-0-118-3-0-0-16-0-0-0-32-0-0-0
38188|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_902C, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-208-3-0-0-0-0-0-0
38204|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_902C, 0x10, 0>; "libc.so.6"|1-0-2-0-121-0-0-0-16-0-0-0-0-0-0-0
38220|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_902C, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-218-3-0-0-16-0-0-0
38236|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_902C, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-208-3-0-0-0-0-0-0
38252|data|Elf32_Rel <0x248F4, 0x115>; R_ARM_GLOB_DAT __gmon_start__|244-72-2-0-21-1-0-0
38260|data|Elf32_Rel <0x24A10, 0x6214>; R_ARM_COPY __stack_chk_guard|16-74-2-0-20-98-0-0
38268|data|Elf32_Rel <0x24A18, 0x3C14>; R_ARM_COPY stderr|24-74-2-0-20-60-0-0
38276|data|Elf32_Rel <0x24A20, 0x2214>; R_ARM_COPY stdin|32-74-2-0-20-34-0-0
38284|data|Elf32_Rel <0x24A24, 0x5914>; R_ARM_COPY stdout|36-74-2-0-20-89-0-0
38292|data|Elf32_Rel <0x24A28, 0x4D14>; R_ARM_COPY optarg|40-74-2-0-20-77-0-0
38300|data|Elf32_Rel <0x2476C, 0x5716>; R_ARM_JUMP_SLOT calloc|108-71-2-0-22-87-0-0
38308|data|Elf32_Rel <0x24770, 0x516>; R_ARM_JUMP_SLOT strstr|112-71-2-0-22-5-0-0
38316|data|Elf32_Rel <0x24774, 0x4616>; R_ARM_JUMP_SLOT raise|116-71-2-0-22-70-0-0
38324|data|Elf32_Rel <0x24778, 0x1D16>; R_ARM_JUMP_SLOT cfmakeraw|120-71-2-0-22-29-0-0
38332|data|Elf32_Rel <0x2477C, 0x316>; R_ARM_JUMP_SLOT strcmp|124-71-2-0-22-3-0-0
38340|data|Elf32_Rel <0x24780, 0x4816>; R_ARM_JUMP_SLOT strtol|128-71-2-0-22-72-0-0
38348|data|Elf32_Rel <0x24784, 0x3B16>; R_ARM_JUMP_SLOT setsockopt|132-71-2-0-22-59-0-0
38356|data|Elf32_Rel <0x24788, 0x4416>; R_ARM_JUMP_SLOT printf|136-71-2-0-22-68-0-0
38364|data|Elf32_Rel <0x2478C, 0x2C16>; R_ARM_JUMP_SLOT fopen|140-71-2-0-22-44-0-0
38372|data|Elf32_Rel <0x24790, 0x6516>; R_ARM_JUMP_SLOT regerror|144-71-2-0-22-101-0-0
38380|data|Elf32_Rel <0x24794, 0x3516>; R_ARM_JUMP_SLOT read|148-71-2-0-22-53-0-0
38388|data|Elf32_Rel <0x24798, 0x816>; R_ARM_JUMP_SLOT fflush|152-71-2-0-22-8-0-0
38396|data|Elf32_Rel <0x2479C, 0x4E16>; R_ARM_JUMP_SLOT memmove|156-71-2-0-22-78-0-0
38404|data|Elf32_Rel <0x247A0, 0x6916>; R_ARM_JUMP_SLOT free|160-71-2-0-22-105-0-0
38412|data|Elf32_Rel <0x247A4, 0x2B16>; R_ARM_JUMP_SLOT gai_strerror|164-71-2-0-22-43-0-0
38420|data|Elf32_Rel <0x247A8, 0xB16>; R_ARM_JUMP_SLOT fgets|168-71-2-0-22-11-0-0
38428|data|Elf32_Rel <0x247AC, 0x716>; R_ARM_JUMP_SLOT ferror|172-71-2-0-22-7-0-0
38436|data|Elf32_Rel <0x247B0, 0x6C16>; R_ARM_JUMP_SLOT memcpy|176-71-2-0-22-108-0-0
38444|data|Elf32_Rel <0x247B4, 0x2F16>; R_ARM_JUMP_SLOT time|180-71-2-0-22-47-0-0
38452|data|Elf32_Rel <0x247B8, 0x3016>; R_ARM_JUMP_SLOT _IO_getc|184-71-2-0-22-48-0-0
38460|data|Elf32_Rel <0x247BC, 0x5F16>; R_ARM_JUMP_SLOT memcmp|188-71-2-0-22-95-0-0
38468|data|Elf32_Rel <0x247C0, 0x6316>; R_ARM_JUMP_SLOT ctime|192-71-2-0-22-99-0-0
38476|data|Elf32_Rel <0x247C4, 0x4216>; R_ARM_JUMP_SLOT __stack_chk_fail|196-71-2-0-22-66-0-0
38484|data|Elf32_Rel <0x247C8, 0x1316>; R_ARM_JUMP_SLOT unlink|200-71-2-0-22-19-0-0
38492|data|Elf32_Rel <0x247CC, 0x2416>; R_ARM_JUMP_SLOT realloc|204-71-2-0-22-36-0-0
38500|data|Elf32_Rel <0x247D0, 0xE16>; R_ARM_JUMP_SLOT regexec|208-71-2-0-22-14-0-0
38508|data|Elf32_Rel <0x247D4, 0x5316>; R_ARM_JUMP_SLOT chdir|212-71-2-0-22-83-0-0
38516|data|Elf32_Rel <0x247D8, 0x1416>; R_ARM_JUMP_SLOT __xstat|216-71-2-0-22-20-0-0
38524|data|Elf32_Rel <0x247DC, 0x4516>; R_ARM_JUMP_SLOT poll|220-71-2-0-22-69-0-0
38532|data|Elf32_Rel <0x247E0, 0x6E16>; R_ARM_JUMP_SLOT accept|224-71-2-0-22-110-0-0
38540|data|Elf32_Rel <0x247E4, 0x1916>; R_ARM_JUMP_SLOT cfsetospeed|228-71-2-0-22-25-0-0
38548|data|Elf32_Rel <0x247E8, 0x3E16>; R_ARM_JUMP_SLOT sigaction|232-71-2-0-22-62-0-0
38556|data|Elf32_Rel <0x247EC, 0x3716>; R_ARM_JUMP_SLOT fwrite|236-71-2-0-22-55-0-0
38564|data|Elf32_Rel <0x247F0, 0x7416>; R_ARM_JUMP_SLOT strcat|240-71-2-0-22-116-0-0
38572|data|Elf32_Rel <0x247F4, 0x1E16>; R_ARM_JUMP_SLOT getsockopt|244-71-2-0-22-30-0-0
38580|data|Elf32_Rel <0x247F8, 0x2616>; R_ARM_JUMP_SLOT regfree|248-71-2-0-22-38-0-0
38588|data|Elf32_Rel <0x247FC, 0x6016>; R_ARM_JUMP_SLOT waitpid|252-71-2-0-22-96-0-0
38596|data|Elf32_Rel <0x24800, 0x3116>; R_ARM_JUMP_SLOT tcsetattr|0-72-2-0-22-49-0-0
38604|data|Elf32_Rel <0x24804, 0x1016>; R_ARM_JUMP_SLOT strcpy|4-72-2-0-22-16-0-0
38612|data|Elf32_Rel <0x24808, 0x5216>; R_ARM_JUMP_SLOT gettimeofday|8-72-2-0-22-82-0-0
38620|data|Elf32_Rel <0x2480C, 0x6416>; R_ARM_JUMP_SLOT fread|12-72-2-0-22-100-0-0
38628|data|Elf32_Rel <0x24810, 0x5416>; R_ARM_JUMP_SLOT puts|16-72-2-0-22-84-0-0
38636|data|Elf32_Rel <0x24814, 0x7016>; R_ARM_JUMP_SLOT malloc|20-72-2-0-22-112-0-0
38644|data|Elf32_Rel <0x24818, 0x1A16>; R_ARM_JUMP_SLOT __libc_start_main|24-72-2-0-22-26-0-0
38652|data|Elf32_Rel <0x2481C, 0x1516>; R_ARM_JUMP_SLOT strerror|28-72-2-0-22-21-0-0
38660|data|Elf32_Rel <0x24820, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|32-72-2-0-22-1-0-0
38668|data|Elf32_Rel <0x24824, 0x6A16>; R_ARM_JUMP_SLOT open|36-72-2-0-22-106-0-0
38676|data|Elf32_Rel <0x24828, 0x6816>; R_ARM_JUMP_SLOT getopt_long|40-72-2-0-22-104-0-0
38684|data|Elf32_Rel <0x2482C, 0x5816>; R_ARM_JUMP_SLOT kill|44-72-2-0-22-88-0-0
38692|data|Elf32_Rel <0x24830, 0x2816>; R_ARM_JUMP_SLOT __ctype_b_loc|48-72-2-0-22-40-0-0
38700|data|Elf32_Rel <0x24834, 0x616>; R_ARM_JUMP_SLOT getpid|52-72-2-0-22-6-0-0
38708|data|Elf32_Rel <0x24838, 0x2516>; R_ARM_JUMP_SLOT exit|56-72-2-0-22-37-0-0
38716|data|Elf32_Rel <0x2483C, 0x4016>; R_ARM_JUMP_SLOT strtoul|60-72-2-0-22-64-0-0
38724|data|Elf32_Rel <0x24840, 0x2D16>; R_ARM_JUMP_SLOT strlen|64-72-2-0-22-45-0-0
38732|data|Elf32_Rel <0x24844, 0x2916>; R_ARM_JUMP_SLOT setsid|68-72-2-0-22-41-0-0
38740|data|Elf32_Rel <0x24848, 0x3316>; R_ARM_JUMP_SLOT strchr|72-72-2-0-22-51-0-0
38748|data|Elf32_Rel <0x2484C, 0x2116>; R_ARM_JUMP_SLOT fprintf|76-72-2-0-22-33-0-0
38756|data|Elf32_Rel <0x24850, 0x2016>; R_ARM_JUMP_SLOT cfsetispeed|80-72-2-0-22-32-0-0
38764|data|Elf32_Rel <0x24854, 0x1116>; R_ARM_JUMP_SLOT fcntl|84-72-2-0-22-17-0-0
38772|data|Elf32_Rel <0x24858, 0x5116>; R_ARM_JUMP_SLOT execv|88-72-2-0-22-81-0-0
38780|data|Elf32_Rel <0x2485C, 0x2A16>; R_ARM_JUMP_SLOT __errno_location|92-72-2-0-22-42-0-0
38788|data|Elf32_Rel <0x24860, 0x4F16>; R_ARM_JUMP_SLOT strncasecmp|96-72-2-0-22-79-0-0
38796|data|Elf32_Rel <0x24864, 0xA16>; R_ARM_JUMP_SLOT snprintf|100-72-2-0-22-10-0-0
38804|data|Elf32_Rel <0x24868, 0x1816>; R_ARM_JUMP_SLOT __isoc99_sscanf|104-72-2-0-22-24-0-0
38812|data|Elf32_Rel <0x2486C, 0x6F16>; R_ARM_JUMP_SLOT __strdup|108-72-2-0-22-111-0-0
38820|data|Elf32_Rel <0x24870, 0x7116>; R_ARM_JUMP_SLOT bind|112-72-2-0-22-113-0-0
38828|data|Elf32_Rel <0x24874, 0x2716>; R_ARM_JUMP_SLOT lockf|116-72-2-0-22-39-0-0
38836|data|Elf32_Rel <0x24878, 0x5B16>; R_ARM_JUMP_SLOT memset|120-72-2-0-22-91-0-0
38844|data|Elf32_Rel <0x2487C, 0x2316>; R_ARM_JUMP_SLOT strncpy|124-72-2-0-22-35-0-0
38852|data|Elf32_Rel <0x24880, 0x3F16>; R_ARM_JUMP_SLOT strtod|128-72-2-0-22-63-0-0
38860|data|Elf32_Rel <0x24884, 0x416>; R_ARM_JUMP_SLOT write|132-72-2-0-22-4-0-0
38868|data|Elf32_Rel <0x24888, 0x6116>; R_ARM_JUMP_SLOT fileno|136-72-2-0-22-97-0-0
38876|data|Elf32_Rel <0x2488C, 0xC16>; R_ARM_JUMP_SLOT memchr|140-72-2-0-22-12-0-0
38884|data|Elf32_Rel <0x24890, 0x5A16>; R_ARM_JUMP_SLOT fclose|144-72-2-0-22-90-0-0
38892|data|Elf32_Rel <0x24894, 0x4716>; R_ARM_JUMP_SLOT strtok|148-72-2-0-22-71-0-0
38900|data|Elf32_Rel <0x24898, 0x6616>; R_ARM_JUMP_SLOT sigemptyset|152-72-2-0-22-102-0-0
38908|data|Elf32_Rel <0x2489C, 0x5616>; R_ARM_JUMP_SLOT fork|156-72-2-0-22-86-0-0
38916|data|Elf32_Rel <0x248A0, 0x1616>; R_ARM_JUMP_SLOT getnameinfo|160-72-2-0-22-22-0-0
38924|data|Elf32_Rel <0x248A4, 0x1716>; R_ARM_JUMP_SLOT hosts_ctl|164-72-2-0-22-23-0-0
38932|data|Elf32_Rel <0x248A8, 0x3616>; R_ARM_JUMP_SLOT strrchr|168-72-2-0-22-54-0-0
38940|data|Elf32_Rel <0x248AC, 0xD16>; R_ARM_JUMP_SLOT listen|172-72-2-0-22-13-0-0
38948|data|Elf32_Rel <0x248B0, 0x916>; R_ARM_JUMP_SLOT syslog|176-72-2-0-22-9-0-0
38956|data|Elf32_Rel <0x248B4, 0x6716>; R_ARM_JUMP_SLOT sprintf|180-72-2-0-22-103-0-0
38964|data|Elf32_Rel <0x248B8, 0x4A16>; R_ARM_JUMP_SLOT openlog|184-72-2-0-22-74-0-0
38972|data|Elf32_Rel <0x248BC, 0x7316>; R_ARM_JUMP_SLOT regcomp|188-72-2-0-22-115-0-0
38980|data|Elf32_Rel <0x248C0, 0x3D16>; R_ARM_JUMP_SLOT vsnprintf|192-72-2-0-22-61-0-0
38988|data|Elf32_Rel <0x248C4, 0x3916>; R_ARM_JUMP_SLOT qsort|196-72-2-0-22-57-0-0
38996|data|Elf32_Rel <0x248C8, 0x5516>; R_ARM_JUMP_SLOT freeaddrinfo|200-72-2-0-22-85-0-0
39004|data|Elf32_Rel <0x248CC, 0x6B16>; R_ARM_JUMP_SLOT getaddrinfo|204-72-2-0-22-107-0-0
39012|data|Elf32_Rel <0x248D0, 0x7216>; R_ARM_JUMP_SLOT socket|208-72-2-0-22-114-0-0
39020|data|Elf32_Rel <0x248D4, 0x4B16>; R_ARM_JUMP_SLOT umask|212-72-2-0-22-75-0-0
39028|data|Elf32_Rel <0x248D8, 0x4C16>; R_ARM_JUMP_SLOT isatty|216-72-2-0-22-76-0-0
39036|data|Elf32_Rel <0x248DC, 0x3216>; R_ARM_JUMP_SLOT abort|220-72-2-0-22-50-0-0
39044|data|Elf32_Rel <0x248E0, 0x3416>; R_ARM_JUMP_SLOT close|224-72-2-0-22-52-0-0
39052|data|Elf32_Rel <0x248E4, 0x1F16>; R_ARM_JUMP_SLOT forkpty|228-72-2-0-22-31-0-0
39060|data|Elf32_Rel <0x248E8, 0x3A16>; R_ARM_JUMP_SLOT connect|232-72-2-0-22-58-0-0
39068|data|Elf32_Rel <0x248EC, 0x5C16>; R_ARM_JUMP_SLOT __assert_fail|236-72-2-0-22-92-0-0
39076|data|Elf32_Rel <0x248F0, 0x1216>; R_ARM_JUMP_SLOT tcgetattr|240-72-2-0-22-18-0-0
39084|code|PUSH            {R3,LR}; _init|8-181
39086|code|BL              sub_A244|0-240-201-252
39090|code|NOP|0-191
39092|code|POP             {R3,PC}|8-189
39094|data|DCW 0|0-0
39096|code|PUSH            {LR}|4-224-45-229
39100|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x98C8)|4-224-159-229
39104|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
39108|code|LDR             PC, [LR,#8]!|8-240-190-229
39112|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x98C8|152-174-1-0
39116|code|ADR             R12, 0x98D4|0-198-143-226
39120|code|ADD             R12, R12, #0x1A000|26-202-140-226
39124|code|LDR             PC, [R12,#(calloc_ptr - 0x238D4)]!; __imp_calloc|152-254-188-229
39128|code|ADR             R12, 0x98E0|0-198-143-226
39132|code|ADD             R12, R12, #0x1A000|26-202-140-226
39136|code|LDR             PC, [R12,#(strstr_ptr - 0x238E0)]!; __imp_strstr|144-254-188-229
39140|code|ADR             R12, 0x98EC|0-198-143-226
39144|code|ADD             R12, R12, #0x1A000|26-202-140-226
39148|code|LDR             PC, [R12,#(raise_ptr - 0x238EC)]!; __imp_raise|136-254-188-229
39152|code|ADR             R12, 0x98F8|0-198-143-226
39156|code|ADD             R12, R12, #0x1A000|26-202-140-226
39160|code|LDR             PC, [R12,#(cfmakeraw_ptr - 0x238F8)]!; __imp_cfmakeraw|128-254-188-229
39164|code|ADR             R12, 0x9904|0-198-143-226
39168|code|ADD             R12, R12, #0x1A000|26-202-140-226
39172|code|LDR             PC, [R12,#(strcmp_ptr - 0x23904)]!; __imp_strcmp|120-254-188-229
39176|code|ADR             R12, 0x9910|0-198-143-226
39180|code|ADD             R12, R12, #0x1A000|26-202-140-226
39184|code|LDR             PC, [R12,#(strtol_ptr - 0x23910)]!; __imp_strtol|112-254-188-229
39188|code|ADR             R12, 0x991C|0-198-143-226
39192|code|ADD             R12, R12, #0x1A000|26-202-140-226
39196|code|LDR             PC, [R12,#(setsockopt_ptr - 0x2391C)]!; __imp_setsockopt|104-254-188-229
39200|code|ADR             R12, 0x9928|0-198-143-226
39204|code|ADD             R12, R12, #0x1A000|26-202-140-226
39208|code|LDR             PC, [R12,#(printf_ptr - 0x23928)]!; __imp_printf|96-254-188-229
39212|code|ADR             R12, 0x9934|0-198-143-226
39216|code|ADD             R12, R12, #0x1A000|26-202-140-226
39220|code|LDR             PC, [R12,#(fopen_ptr - 0x23934)]!; __imp_fopen|88-254-188-229
39224|code|ADR             R12, 0x9940|0-198-143-226
39228|code|ADD             R12, R12, #0x1A000|26-202-140-226
39232|code|LDR             PC, [R12,#(regerror_ptr - 0x23940)]!; __imp_regerror|80-254-188-229
39236|code|ADR             R12, 0x994C|0-198-143-226
39240|code|ADD             R12, R12, #0x1A000|26-202-140-226
39244|code|LDR             PC, [R12,#(read_ptr - 0x2394C)]!; __imp_read|72-254-188-229
39248|code|ADR             R12, 0x9958|0-198-143-226
39252|code|ADD             R12, R12, #0x1A000|26-202-140-226
39256|code|LDR             PC, [R12,#(fflush_ptr - 0x23958)]!; __imp_fflush|64-254-188-229
39260|code|ADR             R12, 0x9964|0-198-143-226
39264|code|ADD             R12, R12, #0x1A000|26-202-140-226
39268|code|LDR             PC, [R12,#(memmove_ptr - 0x23964)]!; __imp_memmove|56-254-188-229
39272|code|BX              PC|120-71
39274|data|ALIGN 4|192-70
39276|code|ADR             R12, 0x9974|0-198-143-226
39280|code|ADD             R12, R12, #0x1A000|26-202-140-226
39284|code|LDR             PC, [R12,#(free_ptr - 0x23974)]!; __imp_free|44-254-188-229
39288|code|ADR             R12, 0x9980|0-198-143-226
39292|code|ADD             R12, R12, #0x1A000|26-202-140-226
39296|code|LDR             PC, [R12,#(gai_strerror_ptr - 0x23980)]!; __imp_gai_strerror|36-254-188-229
39300|code|ADR             R12, 0x998C|0-198-143-226
39304|code|ADD             R12, R12, #0x1A000|26-202-140-226
39308|code|LDR             PC, [R12,#(fgets_ptr - 0x2398C)]!; __imp_fgets|28-254-188-229
39312|code|ADR             R12, 0x9998|0-198-143-226
39316|code|ADD             R12, R12, #0x1A000|26-202-140-226
39320|code|LDR             PC, [R12,#(ferror_ptr - 0x23998)]!; __imp_ferror|20-254-188-229
39324|code|ADR             R12, 0x99A4|0-198-143-226
39328|code|ADD             R12, R12, #0x1A000|26-202-140-226
39332|code|LDR             PC, [R12,#(memcpy_ptr - 0x239A4)]!; __imp_memcpy|12-254-188-229
39336|code|ADR             R12, 0x99B0|0-198-143-226
39340|code|ADD             R12, R12, #0x1A000|26-202-140-226
39344|code|LDR             PC, [R12,#(time_ptr - 0x239B0)]!; __imp_time|4-254-188-229
39348|code|ADR             R12, 0x99BC|0-198-143-226
39352|code|ADD             R12, R12, #0x1A000|26-202-140-226
39356|code|LDR             PC, [R12,#(_IO_getc_ptr - 0x239BC)]!; __imp__IO_getc|252-253-188-229
39360|code|ADR             R12, 0x99C8|0-198-143-226
39364|code|ADD             R12, R12, #0x1A000|26-202-140-226
39368|code|LDR             PC, [R12,#(memcmp_ptr - 0x239C8)]!; __imp_memcmp|244-253-188-229
39372|code|ADR             R12, 0x99D4|0-198-143-226
39376|code|ADD             R12, R12, #0x1A000|26-202-140-226
39380|code|LDR             PC, [R12,#(ctime_ptr - 0x239D4)]!; __imp_ctime|236-253-188-229
39384|code|ADR             R12, 0x99E0|0-198-143-226
39388|code|ADD             R12, R12, #0x1A000|26-202-140-226
39392|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x239E0)]!; __imp___stack_chk_fail|228-253-188-229
39396|code|ADR             R12, 0x99EC|0-198-143-226
39400|code|ADD             R12, R12, #0x1A000|26-202-140-226
39404|code|LDR             PC, [R12,#(unlink_ptr - 0x239EC)]!; __imp_unlink|220-253-188-229
39408|code|ADR             R12, 0x99F8|0-198-143-226
39412|code|ADD             R12, R12, #0x1A000|26-202-140-226
39416|code|LDR             PC, [R12,#(realloc_ptr - 0x239F8)]!; __imp_realloc|212-253-188-229
39420|code|ADR             R12, 0x9A04|0-198-143-226
39424|code|ADD             R12, R12, #0x1A000|26-202-140-226
39428|code|LDR             PC, [R12,#(regexec_ptr - 0x23A04)]!; __imp_regexec|204-253-188-229
39432|code|ADR             R12, 0x9A10|0-198-143-226
39436|code|ADD             R12, R12, #0x1A000|26-202-140-226
39440|code|LDR             PC, [R12,#(chdir_ptr - 0x23A10)]!; __imp_chdir|196-253-188-229
39444|code|ADR             R12, 0x9A1C|0-198-143-226
39448|code|ADD             R12, R12, #0x1A000|26-202-140-226
39452|code|LDR             PC, [R12,#(__xstat_ptr - 0x23A1C)]!; __imp___xstat|188-253-188-229
39456|code|ADR             R12, 0x9A28|0-198-143-226
39460|code|ADD             R12, R12, #0x1A000|26-202-140-226
39464|code|LDR             PC, [R12,#(poll_ptr - 0x23A28)]!; __imp_poll|180-253-188-229
39468|code|ADR             R12, 0x9A34|0-198-143-226
39472|code|ADD             R12, R12, #0x1A000|26-202-140-226
39476|code|LDR             PC, [R12,#(accept_ptr - 0x23A34)]!; __imp_accept|172-253-188-229
39480|code|ADR             R12, 0x9A40|0-198-143-226
39484|code|ADD             R12, R12, #0x1A000|26-202-140-226
39488|code|LDR             PC, [R12,#(cfsetospeed_ptr - 0x23A40)]!; __imp_cfsetospeed|164-253-188-229
39492|code|ADR             R12, 0x9A4C|0-198-143-226
39496|code|ADD             R12, R12, #0x1A000|26-202-140-226
39500|code|LDR             PC, [R12,#(sigaction_ptr - 0x23A4C)]!; __imp_sigaction|156-253-188-229
39504|code|ADR             R12, 0x9A58|0-198-143-226
39508|code|ADD             R12, R12, #0x1A000|26-202-140-226
39512|code|LDR             PC, [R12,#(fwrite_ptr - 0x23A58)]!; __imp_fwrite|148-253-188-229
39516|code|ADR             R12, 0x9A64|0-198-143-226
39520|code|ADD             R12, R12, #0x1A000|26-202-140-226
39524|code|LDR             PC, [R12,#(strcat_ptr - 0x23A64)]!; __imp_strcat|140-253-188-229
39528|code|ADR             R12, 0x9A70|0-198-143-226
39532|code|ADD             R12, R12, #0x1A000|26-202-140-226
39536|code|LDR             PC, [R12,#(getsockopt_ptr - 0x23A70)]!; __imp_getsockopt|132-253-188-229
39540|code|ADR             R12, 0x9A7C|0-198-143-226
39544|code|ADD             R12, R12, #0x1A000|26-202-140-226
39548|code|LDR             PC, [R12,#(regfree_ptr - 0x23A7C)]!; __imp_regfree|124-253-188-229
39552|code|ADR             R12, 0x9A88|0-198-143-226
39556|code|ADD             R12, R12, #0x1A000|26-202-140-226
39560|code|LDR             PC, [R12,#(waitpid_ptr - 0x23A88)]!; __imp_waitpid|116-253-188-229
39564|code|ADR             R12, 0x9A94|0-198-143-226
39568|code|ADD             R12, R12, #0x1A000|26-202-140-226
39572|code|LDR             PC, [R12,#(tcsetattr_ptr - 0x23A94)]!; __imp_tcsetattr|108-253-188-229
39576|code|ADR             R12, 0x9AA0|0-198-143-226
39580|code|ADD             R12, R12, #0x1A000|26-202-140-226
39584|code|LDR             PC, [R12,#(strcpy_ptr - 0x23AA0)]!; __imp_strcpy|100-253-188-229
39588|code|ADR             R12, 0x9AAC|0-198-143-226
39592|code|ADD             R12, R12, #0x1A000|26-202-140-226
39596|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x23AAC)]!; __imp_gettimeofday|92-253-188-229
39600|code|ADR             R12, 0x9AB8|0-198-143-226
39604|code|ADD             R12, R12, #0x1A000|26-202-140-226
39608|code|LDR             PC, [R12,#(fread_ptr - 0x23AB8)]!; __imp_fread|84-253-188-229
39612|code|ADR             R12, 0x9AC4|0-198-143-226
39616|code|ADD             R12, R12, #0x1A000|26-202-140-226
39620|code|LDR             PC, [R12,#(puts_ptr - 0x23AC4)]!; __imp_puts|76-253-188-229
39624|code|ADR             R12, 0x9AD0|0-198-143-226
39628|code|ADD             R12, R12, #0x1A000|26-202-140-226
39632|code|LDR             PC, [R12,#(malloc_ptr - 0x23AD0)]!; __imp_malloc|68-253-188-229
39636|code|ADR             R12, 0x9ADC|0-198-143-226
39640|code|ADD             R12, R12, #0x1A000|26-202-140-226
39644|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x23ADC)]!; __imp___libc_start_main|60-253-188-229
39648|code|ADR             R12, 0x9AE8|0-198-143-226
39652|code|ADD             R12, R12, #0x1A000|26-202-140-226
39656|code|LDR             PC, [R12,#(strerror_ptr - 0x23AE8)]!; __imp_strerror|52-253-188-229
39660|code|BX              PC|120-71
39662|data|ALIGN 4|192-70
39664|code|ADR             R12, 0x9AF8|0-198-143-226
39668|code|ADD             R12, R12, #0x1A000|26-202-140-226
39672|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x23AF8)]!; __imp___gmon_start__|40-253-188-229
39676|code|ADR             R12, 0x9B04|0-198-143-226
39680|code|ADD             R12, R12, #0x1A000|26-202-140-226
39684|code|LDR             PC, [R12,#(open_ptr - 0x23B04)]!; __imp_open|32-253-188-229
39688|code|ADR             R12, 0x9B10|0-198-143-226
39692|code|ADD             R12, R12, #0x1A000|26-202-140-226
39696|code|LDR             PC, [R12,#(getopt_long_ptr - 0x23B10)]!; __imp_getopt_long|24-253-188-229
39700|code|ADR             R12, 0x9B1C|0-198-143-226
39704|code|ADD             R12, R12, #0x1A000|26-202-140-226
39708|code|LDR             PC, [R12,#(kill_ptr - 0x23B1C)]!; __imp_kill|16-253-188-229
39712|code|ADR             R12, 0x9B28|0-198-143-226
39716|code|ADD             R12, R12, #0x1A000|26-202-140-226
39720|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x23B28)]!; __imp___ctype_b_loc|8-253-188-229
39724|code|ADR             R12, 0x9B34|0-198-143-226
39728|code|ADD             R12, R12, #0x1A000|26-202-140-226
39732|code|LDR             PC, [R12,#(getpid_ptr - 0x23B34)]!; __imp_getpid|0-253-188-229
39736|code|ADR             R12, 0x9B40|0-198-143-226
39740|code|ADD             R12, R12, #0x1A000|26-202-140-226
39744|code|LDR             PC, [R12,#(exit_ptr - 0x23B40)]!; __imp_exit|248-252-188-229
39748|code|ADR             R12, 0x9B4C|0-198-143-226
39752|code|ADD             R12, R12, #0x1A000|26-202-140-226
39756|code|LDR             PC, [R12,#(strtoul_ptr - 0x23B4C)]!; __imp_strtoul|240-252-188-229
39760|code|ADR             R12, 0x9B58|0-198-143-226
39764|code|ADD             R12, R12, #0x1A000|26-202-140-226
39768|code|LDR             PC, [R12,#(strlen_ptr - 0x23B58)]!; __imp_strlen|232-252-188-229
39772|code|ADR             R12, 0x9B64|0-198-143-226
39776|code|ADD             R12, R12, #0x1A000|26-202-140-226
39780|code|LDR             PC, [R12,#(setsid_ptr - 0x23B64)]!; __imp_setsid|224-252-188-229
39784|code|ADR             R12, 0x9B70|0-198-143-226
39788|code|ADD             R12, R12, #0x1A000|26-202-140-226
39792|code|LDR             PC, [R12,#(strchr_ptr - 0x23B70)]!; __imp_strchr|216-252-188-229
39796|code|ADR             R12, 0x9B7C|0-198-143-226
39800|code|ADD             R12, R12, #0x1A000|26-202-140-226
39804|code|LDR             PC, [R12,#(fprintf_ptr - 0x23B7C)]!; __imp_fprintf|208-252-188-229
39808|code|ADR             R12, 0x9B88|0-198-143-226
39812|code|ADD             R12, R12, #0x1A000|26-202-140-226
39816|code|LDR             PC, [R12,#(cfsetispeed_ptr - 0x23B88)]!; __imp_cfsetispeed|200-252-188-229
39820|code|ADR             R12, 0x9B94|0-198-143-226
39824|code|ADD             R12, R12, #0x1A000|26-202-140-226
39828|code|LDR             PC, [R12,#(fcntl_ptr - 0x23B94)]!; __imp_fcntl|192-252-188-229
39832|code|ADR             R12, 0x9BA0|0-198-143-226
39836|code|ADD             R12, R12, #0x1A000|26-202-140-226
39840|code|LDR             PC, [R12,#(execv_ptr - 0x23BA0)]!; __imp_execv|184-252-188-229
39844|code|ADR             R12, 0x9BAC|0-198-143-226
39848|code|ADD             R12, R12, #0x1A000|26-202-140-226
39852|code|LDR             PC, [R12,#(__errno_location_ptr - 0x23BAC)]!; __imp___errno_location|176-252-188-229
39856|code|ADR             R12, 0x9BB8|0-198-143-226
39860|code|ADD             R12, R12, #0x1A000|26-202-140-226
39864|code|LDR             PC, [R12,#(strncasecmp_ptr - 0x23BB8)]!; __imp_strncasecmp|168-252-188-229
39868|code|ADR             R12, 0x9BC4|0-198-143-226
39872|code|ADD             R12, R12, #0x1A000|26-202-140-226
39876|code|LDR             PC, [R12,#(snprintf_ptr - 0x23BC4)]!; __imp_snprintf|160-252-188-229
39880|code|ADR             R12, 0x9BD0|0-198-143-226
39884|code|ADD             R12, R12, #0x1A000|26-202-140-226
39888|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x23BD0)]!; __imp___isoc99_sscanf|152-252-188-229
39892|code|ADR             R12, 0x9BDC|0-198-143-226
39896|code|ADD             R12, R12, #0x1A000|26-202-140-226
39900|code|LDR             PC, [R12,#(__strdup_ptr - 0x23BDC)]!; __imp___strdup|144-252-188-229
39904|code|ADR             R12, 0x9BE8|0-198-143-226
39908|code|ADD             R12, R12, #0x1A000|26-202-140-226
39912|code|LDR             PC, [R12,#(bind_ptr - 0x23BE8)]!; __imp_bind|136-252-188-229
39916|code|ADR             R12, 0x9BF4|0-198-143-226
39920|code|ADD             R12, R12, #0x1A000|26-202-140-226
39924|code|LDR             PC, [R12,#(lockf_ptr - 0x23BF4)]!; __imp_lockf|128-252-188-229
39928|code|ADR             R12, 0x9C00|0-198-143-226
39932|code|ADD             R12, R12, #0x1A000|26-202-140-226
39936|code|LDR             PC, [R12,#(memset_ptr - 0x23C00)]!; __imp_memset|120-252-188-229
39940|code|ADR             R12, 0x9C0C|0-198-143-226
39944|code|ADD             R12, R12, #0x1A000|26-202-140-226
39948|code|LDR             PC, [R12,#(strncpy_ptr - 0x23C0C)]!; __imp_strncpy|112-252-188-229
39952|code|ADR             R12, 0x9C18|0-198-143-226
39956|code|ADD             R12, R12, #0x1A000|26-202-140-226
39960|code|LDR             PC, [R12,#(strtod_ptr - 0x23C18)]!; __imp_strtod|104-252-188-229
39964|code|ADR             R12, 0x9C24|0-198-143-226
39968|code|ADD             R12, R12, #0x1A000|26-202-140-226
39972|code|LDR             PC, [R12,#(write_ptr - 0x23C24)]!; __imp_write|96-252-188-229
39976|code|ADR             R12, 0x9C30|0-198-143-226
39980|code|ADD             R12, R12, #0x1A000|26-202-140-226
39984|code|LDR             PC, [R12,#(fileno_ptr - 0x23C30)]!; __imp_fileno|88-252-188-229
39988|code|ADR             R12, 0x9C3C|0-198-143-226
39992|code|ADD             R12, R12, #0x1A000|26-202-140-226
39996|code|LDR             PC, [R12,#(memchr_ptr - 0x23C3C)]!; __imp_memchr|80-252-188-229
40000|code|ADR             R12, 0x9C48|0-198-143-226
40004|code|ADD             R12, R12, #0x1A000|26-202-140-226
40008|code|LDR             PC, [R12,#(fclose_ptr - 0x23C48)]!; __imp_fclose|72-252-188-229
40012|code|ADR             R12, 0x9C54|0-198-143-226
40016|code|ADD             R12, R12, #0x1A000|26-202-140-226
40020|code|LDR             PC, [R12,#(strtok_ptr - 0x23C54)]!; __imp_strtok|64-252-188-229
40024|code|ADR             R12, 0x9C60|0-198-143-226
40028|code|ADD             R12, R12, #0x1A000|26-202-140-226
40032|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x23C60)]!; __imp_sigemptyset|56-252-188-229
40036|code|ADR             R12, 0x9C6C|0-198-143-226
40040|code|ADD             R12, R12, #0x1A000|26-202-140-226
40044|code|LDR             PC, [R12,#(fork_ptr - 0x23C6C)]!; __imp_fork|48-252-188-229
40048|code|ADR             R12, 0x9C78|0-198-143-226
40052|code|ADD             R12, R12, #0x1A000|26-202-140-226
40056|code|LDR             PC, [R12,#(getnameinfo_ptr - 0x23C78)]!; __imp_getnameinfo|40-252-188-229
40060|code|ADR             R12, 0x9C84|0-198-143-226
40064|code|ADD             R12, R12, #0x1A000|26-202-140-226
40068|code|LDR             PC, [R12,#(hosts_ctl_ptr - 0x23C84)]!; __imp_hosts_ctl|32-252-188-229
40072|code|ADR             R12, 0x9C90|0-198-143-226
40076|code|ADD             R12, R12, #0x1A000|26-202-140-226
40080|code|LDR             PC, [R12,#(strrchr_ptr - 0x23C90)]!; __imp_strrchr|24-252-188-229
40084|code|ADR             R12, 0x9C9C|0-198-143-226
40088|code|ADD             R12, R12, #0x1A000|26-202-140-226
40092|code|LDR             PC, [R12,#(listen_ptr - 0x23C9C)]!; __imp_listen|16-252-188-229
40096|code|BX              PC|120-71
40098|data|ALIGN 4|192-70
40100|code|ADR             R12, 0x9CAC|0-198-143-226
40104|code|ADD             R12, R12, #0x1A000|26-202-140-226
40108|code|LDR             PC, [R12,#(syslog_ptr - 0x23CAC)]!; __imp_syslog|4-252-188-229
40112|code|ADR             R12, 0x9CB8|0-198-143-226
40116|code|ADD             R12, R12, #0x1A000|26-202-140-226
40120|code|LDR             PC, [R12,#(sprintf_ptr - 0x23CB8)]!; __imp_sprintf|252-251-188-229
40124|code|ADR             R12, 0x9CC4|0-198-143-226
40128|code|ADD             R12, R12, #0x1A000|26-202-140-226
40132|code|LDR             PC, [R12,#(openlog_ptr - 0x23CC4)]!; __imp_openlog|244-251-188-229
40136|code|ADR             R12, 0x9CD0|0-198-143-226
40140|code|ADD             R12, R12, #0x1A000|26-202-140-226
40144|code|LDR             PC, [R12,#(regcomp_ptr - 0x23CD0)]!; __imp_regcomp|236-251-188-229
40148|code|ADR             R12, 0x9CDC|0-198-143-226
40152|code|ADD             R12, R12, #0x1A000|26-202-140-226
40156|code|LDR             PC, [R12,#(vsnprintf_ptr - 0x23CDC)]!; __imp_vsnprintf|228-251-188-229
40160|code|ADR             R12, 0x9CE8|0-198-143-226
40164|code|ADD             R12, R12, #0x1A000|26-202-140-226
40168|code|LDR             PC, [R12,#(qsort_ptr - 0x23CE8)]!; __imp_qsort|220-251-188-229
40172|code|ADR             R12, 0x9CF4|0-198-143-226
40176|code|ADD             R12, R12, #0x1A000|26-202-140-226
40180|code|LDR             PC, [R12,#(freeaddrinfo_ptr - 0x23CF4)]!; __imp_freeaddrinfo|212-251-188-229
40184|code|ADR             R12, 0x9D00|0-198-143-226
40188|code|ADD             R12, R12, #0x1A000|26-202-140-226
40192|code|LDR             PC, [R12,#(getaddrinfo_ptr - 0x23D00)]!; __imp_getaddrinfo|204-251-188-229
40196|code|ADR             R12, 0x9D0C|0-198-143-226
40200|code|ADD             R12, R12, #0x1A000|26-202-140-226
40204|code|LDR             PC, [R12,#(socket_ptr - 0x23D0C)]!; __imp_socket|196-251-188-229
40208|code|ADR             R12, 0x9D18|0-198-143-226
40212|code|ADD             R12, R12, #0x1A000|26-202-140-226
40216|code|LDR             PC, [R12,#(umask_ptr - 0x23D18)]!; __imp_umask|188-251-188-229
40220|code|ADR             R12, 0x9D24|0-198-143-226
40224|code|ADD             R12, R12, #0x1A000|26-202-140-226
40228|code|LDR             PC, [R12,#(isatty_ptr - 0x23D24)]!; __imp_isatty|180-251-188-229
40232|code|ADR             R12, 0x9D30|0-198-143-226
40236|code|ADD             R12, R12, #0x1A000|26-202-140-226
40240|code|LDR             PC, [R12,#(abort_ptr - 0x23D30)]!; __imp_abort|172-251-188-229
40244|code|ADR             R12, 0x9D3C|0-198-143-226
40248|code|ADD             R12, R12, #0x1A000|26-202-140-226
40252|code|LDR             PC, [R12,#(close_ptr - 0x23D3C)]!; __imp_close|164-251-188-229
40256|code|ADR             R12, 0x9D48|0-198-143-226
40260|code|ADD             R12, R12, #0x1A000|26-202-140-226
40264|code|LDR             PC, [R12,#(forkpty_ptr - 0x23D48)]!; __imp_forkpty|156-251-188-229
40268|code|ADR             R12, 0x9D54|0-198-143-226
40272|code|ADD             R12, R12, #0x1A000|26-202-140-226
40276|code|LDR             PC, [R12,#(connect_ptr - 0x23D54)]!; __imp_connect|148-251-188-229
40280|code|ADR             R12, 0x9D60|0-198-143-226
40284|code|ADD             R12, R12, #0x1A000|26-202-140-226
40288|code|LDR             PC, [R12,#(__assert_fail_ptr - 0x23D60)]!; __imp___assert_fail|140-251-188-229
40292|code|ADR             R12, 0x9D6C|0-198-143-226
40296|code|ADD             R12, R12, #0x1A000|26-202-140-226
40300|code|LDR             PC, [R12,#(tcgetattr_ptr - 0x23D6C)]!; __imp_tcgetattr|132-251-188-229
40304|code|LDR             R3, =__stack_chk_guard|87-75
40306|code|PUSH.W          {R4-R11,LR}|45-233-240-79
40310|code|SUB.W           SP, SP, #0x2000|173-245-0-93
40314|code|SUB             SP, SP, #0x24|137-176
40316|code|MOV             R10, R0|130-70
40318|code|LDR             R3, [R3]|27-104
40320|code|ADD.W           R0, SP, #0x2048+var_48|13-245-0-80
40324|code|ADDS            R0, #0x1C|28-48
40326|code|MOV             R4, R1|12-70
40328|code|STR             R3, [R0]|3-96
40330|code|BL              sub_E4F8|4-240-181-251
40334|code|CMP             R0, #0|0-40
40336|code|BEQ.W           loc_9EAA|0-240-139-128
40340|code|BL              sub_15B98|11-240-0-255
40344|code|ADD             R6, SP, #0x2048+var_202C|7-174
40346|code|MOV             R5, R0|5-70
40348|code|B               loc_9E96|123-224
40350|code|LDR.W           R9, [R8,#0xB8]|216-248-184-144
40354|code|CBZ             R4, loc_9DEC|28-179
40356|code|MOV             R0, R4|32-70
40358|code|BL              sub_14BB8|10-240-7-255
40362|code|MOV             R7, R0|7-70
40364|code|CMP             R0, #0|0-40
40366|code|BEQ             loc_9E96|114-208
40368|code|LDR.W           R0, [R8,#0x30]|216-248-48-0
40372|code|BL              sub_124D8|8-240-144-251
40376|code|MOV             R11, R0|131-70
40378|code|B               loc_9DC8|5-224
40380|code|MOV             R0, R7|56-70
40382|code|LDR             R1, [R3,#4]|89-104
40384|code|BL              sub_13A34|9-240-56-254
40388|code|ADDS            R0, #1|1-48
40390|code|BNE             loc_9DD6|6-209
40392|code|MOV             R0, R11|88-70
40394|code|BL              sub_12550|8-240-193-251
40398|code|MOV             R3, R0|3-70
40400|code|CMP             R0, #0|0-40
40402|code|BNE             loc_9DBC|243-209
40404|code|B               loc_9DD8|0-224
40406|code|MOVS            R3, #1|1-35
40408|code|MOV             R0, R11|88-70
40410|code|STR             R3, [SP,#0x2048+var_2034]|5-147
40412|code|BL              sub_124FC|8-240-142-251
40416|code|MOV             R0, R7|56-70
40418|code|BL              sub_145A0|10-240-221-251
40422|code|LDR             R3, [SP,#0x2048+var_2034]|5-155
40424|code|CMP             R3, #0|0-43
40426|code|BEQ             loc_9E96|84-208
40428|code|MOVS            R0, #0|0-32
40430|code|BL              sub_14BB8|10-240-227-254
40434|code|MOV             R7, R0|7-70
40436|code|CMP             R0, #0|0-40
40438|code|BEQ             loc_9E96|78-208
40440|code|LDR.W           R0, [R8,#0x30]|216-248-48-0
40444|code|BL              sub_124D8|8-240-108-251
40448|code|MOV             R11, R0|131-70
40450|code|B               loc_9E1E|12-224
40452|code|LDR             R2, [R3]|26-104
40454|code|CBNZ            R2, loc_9E16|50-185
40456|code|LDR             R0, =aPlugNameVoid0; "plug->name != ((void *)0)"|50-72
40458|code|MOVW            R2, #0x127; line|64-242-39-18
40462|code|LDR             R1, =aClientC; "client.c"|50-73
40464|code|LDR             R3, =aMakePluglist; "_make_pluglist"|50-75
40466|code|BLX             __assert_fail|255-247-162-239
40470|code|MOV             R0, R7|56-70
40472|code|LDR             R1, [R3,#4]|89-104
40474|code|BL              sub_14C04|10-240-243-254
40478|code|MOV             R0, R11|88-70
40480|code|BL              sub_12550|8-240-150-251
40484|code|MOV             R3, R0|3-70
40486|code|CMP             R0, #0|0-40
40488|code|BNE             loc_9E04|236-209
40490|code|MOV             R0, R11|88-70
40492|code|BL              sub_124FC|8-240-102-251
40496|code|MOV             R0, R7|56-70
40498|code|BL              sub_14030|10-240-253-248
40502|code|MOV.W           R1, #0x2000|79-244-0-81
40506|code|MOV             R2, R6|50-70
40508|code|MOV             R0, R7|56-70
40510|code|BL              sub_13C80|9-240-31-255
40514|code|MOV             R11, R0|131-70
40516|code|MOV             R0, R7|56-70
40518|code|BL              sub_145A0|10-240-171-251
40522|code|CMP.W           R11, #0xFFFFFFFF|187-241-255-63
40526|code|BEQ             loc_9E96|34-208
40528|code|LDR.W           R3, [R8,#0xC]|216-248-12-48
40532|code|LDR.W           R2, [R8,#4]|216-248-4-32
40536|code|CMP             R3, #2|2-43
40538|code|IT EQ|8-191
40540|code|LDREQ           R3, =aConnected; "connected"|32-75
40542|code|BEQ             loc_9E72|8-208
40544|code|LDR             R1, =aConnecting; "connecting"|32-73
40546|code|MOV             R0, #0x198E8|73-246-232-0-192-242-1-0
40554|code|CMP             R3, #1|1-43
40556|code|IT EQ|8-191
40558|code|MOVEQ           R0, R1|8-70
40560|code|MOV             R3, R0|3-70
40562|code|CMP.W           R9, #0|185-241-0-15
40566|code|MOV             R0, R10|80-70
40568|code|ITE GT|204-191
40570|code|ADDGT.W         R1, R9, #0xFFFFFFFF|9-241-255-49
40574|code|MOVLE           R1, #0|0-33
40576|code|STR             R1, [SP,#0x2048+var_2048]|0-145
40578|code|LDR.W           R1, [R8,#0xBC]|216-248-188-16
40582|code|STR             R1, [SP,#0x2048+var_2044]|1-145
40584|code|LDR.W           R1, [R8,#8]|216-248-8-16
40588|code|STR             R6, [SP,#0x2048+var_203C]|3-150
40590|code|STR             R1, [SP,#0x2048+var_2040]|2-145
40592|code|LDR             R1, =a304SStateSReco; "304 %s: state=%s reconnects=%-3.3d acti"...|21-73
40594|code|BL              sub_C580|2-240-117-251
40598|code|MOV             R0, R5|40-70
40600|code|BL              sub_15D20|11-240-66-255
40604|code|MOV             R8, R0|128-70
40606|code|CMP             R0, #0|0-40
40608|code|BNE.W           loc_9D9E|127-244-125-175
40612|code|MOV             R0, R5|40-70
40614|code|BL              sub_15C70|11-240-227-254
40618|code|MOV             R0, R10|80-70
40620|code|LDR             R1, =a103QueryComple; "103 Query complete\r\n"|15-73
40622|code|BL              sub_C580|2-240-103-251
40626|code|ADD.W           R3, SP, #0x2048+var_48|13-245-0-83
40630|code|ADDS            R3, #0x1C|28-51
40632|code|LDR             R2, [R3]|26-104
40634|code|LDR             R3, =__stack_chk_guard|5-75
40636|code|LDR             R3, [R3]|27-104
40638|code|CMP             R2, R3|154-66
40640|code|BEQ             loc_9EC6|1-208
40642|code|BLX             __stack_chk_fail|255-247-138-237
40646|code|ADD             SP, SP, #0x24 ; '$'|9-176
40648|code|ADD.W           SP, SP, #0x2000|13-245-0-93
40652|code|POP.W           {R4-R11,PC}|189-232-240-143
40656|data|DCD __stack_chk_guard|16-74-2-0
40660|data|DCD aPlugNameVoid0; "plug->name != ((void *)0)"|96-132-1-0
40664|data|DCD aClientC; "client.c"|76-130-1-0
40668|data|DCD aMakePluglist; "_make_pluglist"|144-129-1-0
40672|data|DCD aConnected; "connected"|192-151-1-0
40676|data|DCD aConnecting; "connecting"|228-151-1-0
40680|data|DCD a304SStateSReco; "304 %s: state=%s reconnects=%-3.3d acti"...|124-132-1-0
40684|data|DCD a103QueryComple; "103 Query complete\r\n"|196-131-1-0
40688|code|LDR             R2, =dword_54A50|31-74
40690|code|PUSH.W          {R4-R10}|45-233-240-7
40694|code|MOVW            R7, #0x111|64-242-17-23
40698|code|LDM.W           R2, {R0,R10}|146-232-1-4
40702|code|LDR.W           R9, [R2,#(dword_54A58 - 0x54A50)]|210-248-8-144
40706|code|LDR.W           R8, [R2,#(dword_54A5C - 0x54A50)]|210-248-12-128
40710|code|LDR             R2, =dword_56BA8|27-74
40712|code|LDR             R3, =unk_19C9C|27-75
40714|code|LDR.W           R12, [R2]|210-248-0-192
40718|code|B               loc_9F5A|36-224
40720|code|LDRB.W          R2, [R12],#1|28-248-1-43
40724|code|MOVS            R1, #1|1-33
40726|code|CBZ             R2, loc_9F1C|10-177
40728|code|LDRB.W          R1, [R3,R2,LSL#2]|19-248-34-16
40732|code|ADD.W           R2, R3, R0,LSL#1|3-235-64-2
40736|code|LDRSH.W         R2, [R2,#0x400]|178-249-0-36
40740|code|CMP             R2, #0|0-42
40742|code|IT NE|24-191
40744|code|MOVNE           R8, R4|160-70
40746|code|IT NE|24-191
40748|code|MOVNE           R9, R0|129-70
40750|code|B               loc_9F3C|5-224
40752|code|LDRSH.W         R0, [R2,#0x624]|178-249-36-6
40756|code|CMP             R0, R7|184-66
40758|code|IT GT|200-191
40760|code|LDRBGT.W        R1, [R6,#0x854]|150-248-84-24
40764|code|ADD.W           R2, R3, R0,LSL#1|3-235-64-2
40768|code|ADD.W           R6, R3, R1,LSL#2|3-235-129-6
40772|code|LDRSH.W         R4, [R2,#0x8E8]|178-249-232-72
40776|code|ADDS            R4, R4, R1|100-24
40778|code|ADD.W           R4, R3, R4,LSL#1|3-235-68-4
40782|code|LDRSH.W         R5, [R4,#0xB18]|180-249-24-91
40786|code|CMP             R5, R0|133-66
40788|code|BNE             loc_9F30|236-209
40790|code|LDRSH.W         R0, [R4,#0xDC8]|180-249-200-13
40794|code|CMP             R12, R10|212-69
40796|code|MOV             R4, R12|100-70
40798|code|BCC             loc_9F10|215-211
40800|code|LDR             R3, =dword_54A50|3-75
40802|code|STR.W           R9, [R3,#(dword_54A58 - 0x54A50)]|195-248-8-144
40806|code|STR.W           R8, [R3,#(dword_54A5C - 0x54A50)]|195-248-12-128
40810|code|POP.W           {R4-R10}|189-232-240-7
40814|code|BX              LR|112-71
40816|data|DCD dword_54A50|80-74-5-0
40820|data|DCD dword_56BA8|168-107-5-0
40824|data|DCD unk_19C9C|156-156-1-0
40828|code|LDR             R3, [R1]|11-104
40830|code|PUSH.W          {R4-R11,LR}|45-233-240-79
40834|code|MOVS            R6, #0|0-38
40836|code|MOV             R7, R0|7-70
40838|code|SUB             SP, SP, #0x1C|135-176
40840|code|MOV             R0, R3|24-70
40842|code|MOV             R5, R1|13-70
40844|code|MOV             R11, R6|179-70
40846|code|MOV             R9, R6|177-70
40848|code|MOV.W           R10, #1|79-240-1-10
40852|code|MOV             R8, R6|176-70
40854|code|BL              sub_12A9C|8-240-129-253
40858|code|LDR             R3, =off_17568; "conf"|134-75
40860|code|MOV             R0, R7|56-70
40862|code|MOV             R1, R5|41-70
40864|code|LDR             R2, =aCFhdVsy1; "c:fhd:VsY1"|133-74
40866|code|MOVS            R4, #0|0-36
40868|code|STR             R4, [SP]|0-148
40870|code|BLX             getopt_long|255-247-176-237
40874|code|ADDS            R3, R0, #1|67-28
40876|code|BEQ             loc_A0A2|121-208
40878|code|SUBS            R0, #0x31 ; '1'; switch 67 cases|49-56
40880|code|CMP             R0, #0x42|66-40
40882|code|BHI             def_9FB4; jumptable 00009FB4 default case, cases 50-85,87,88,90-98,101,103-114|83-216
40884|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
40888|data|DCB 0x50; jump table for switch statement|80
40889|data|DCB 0x52|82
40890|data|DCB 0x52|82
40891|data|DCB 0x52|82
40892|data|DCB 0x52|82
40893|data|DCB 0x52|82
40894|data|DCB 0x52|82
40895|data|DCB 0x52|82
40896|data|DCB 0x52|82
40897|data|DCB 0x52|82
40898|data|DCB 0x52|82
40899|data|DCB 0x52|82
40900|data|DCB 0x52|82
40901|data|DCB 0x52|82
40902|data|DCB 0x52|82
40903|data|DCB 0x52|82
40904|data|DCB 0x52|82
40905|data|DCB 0x52|82
40906|data|DCB 0x52|82
40907|data|DCB 0x52|82
40908|data|DCB 0x52|82
40909|data|DCB 0x52|82
40910|data|DCB 0x52|82
40911|data|DCB 0x52|82
40912|data|DCB 0x52|82
40913|data|DCB 0x52|82
40914|data|DCB 0x52|82
40915|data|DCB 0x52|82
40916|data|DCB 0x52|82
40917|data|DCB 0x52|82
40918|data|DCB 0x52|82
40919|data|DCB 0x52|82
40920|data|DCB 0x52|82
40921|data|DCB 0x52|82
40922|data|DCB 0x52|82
40923|data|DCB 0x52|82
40924|data|DCB 0x52|82
40925|data|DCB 0x4A|74
40926|data|DCB 0x52|82
40927|data|DCB 0x52|82
40928|data|DCB 0x47|71
40929|data|DCB 0x52|82
40930|data|DCB 0x52|82
40931|data|DCB 0x52|82
40932|data|DCB 0x52|82
40933|data|DCB 0x52|82
40934|data|DCB 0x52|82
40935|data|DCB 0x52|82
40936|data|DCB 0x52|82
40937|data|DCB 0x52|82
40938|data|DCB 0x3B|59
40939|data|DCB 0x28|40
40940|data|DCB 0x52|82
40941|data|DCB 0x25|37
40942|data|DCB 0x52|82
40943|data|DCB 0x52|82
40944|data|DCB 0x52|82
40945|data|DCB 0x52|82
40946|data|DCB 0x52|82
40947|data|DCB 0x52|82
40948|data|DCB 0x52|82
40949|data|DCB 0x52|82
40950|data|DCB 0x52|82
40951|data|DCB 0x52|82
40952|data|DCB 0x52|82
40953|data|DCB 0x52|82
40954|data|DCB 0x22|34
40955|data|ALIGN 2|0
40956|code|MOVS            R6, #1; jumptable 00009FB4 case 115|1-38
40958|code|MOV             R9, R6|177-70
40960|code|B               loc_9F9A|203-231
40962|code|MOV.W           R10, #0; jumptable 00009FB4 case 102|79-240-0-10
40966|code|B               loc_9F9A|200-231
40968|code|MOVS            R1, #0; jumptable 00009FB4 case 100|0-33
40970|code|MOV             R3, #0x24A28|68-246-40-35-192-242-2-3
40978|code|MOV             R2, R1|10-70
40980|code|LDR             R0, [R3]|24-104
40982|code|BLX             strtol|255-247-120-236
40986|code|ADD.W           R3, R0, #0x80000000|0-241-0-67
40990|code|MOV             R4, R0|4-70
40992|code|ADDS            R3, #1|1-51
40994|code|CMP             R3, #1|1-43
40996|code|BLS             loc_A08E|51-217
40998|code|MOV             R0, R4|32-70
41000|code|BL              sub_127F0|8-240-226-251
41004|code|B               loc_9F9A|181-231
41006|code|CMP.W           R8, #0; jumptable 00009FB4 case 99|184-241-0-15
41010|code|BNE             loc_9F9A|178-209
41012|code|MOV             R3, #0x24A28|68-246-40-35-192-242-2-3
41020|code|LDR             R0, [R3]|24-104
41022|code|BL              sub_168F8|12-240-91-252
41026|code|MOV             R8, R0|128-70
41028|code|B               loc_9F9A|169-231
41030|code|MOV.W           R11, #1; jumptable 00009FB4 case 89|79-240-1-11
41034|code|B               loc_9F9A|166-231
41036|code|LDR             R0, =a235; jumptable 00009FB4 case 86|91-72
41038|code|BLX             puts|255-247-54-237
41042|code|MOVS            R0, #0|0-32
41044|code|BLX             exit|255-247-112-237
41048|code|MOVS            R6, #1; jumptable 00009FB4 case 49|1-38
41050|code|B               loc_9F9A|158-231
41052|code|LDR             R1, [R5]; jumptable 00009FB4 default case, cases 50-85,87,88,90-98,101,103-114|41-104
41054|code|LDR             R0, =aUsageSOptions; "Usage: %s [OPTIONS]\n"|88-72
41056|code|BLX             printf|255-247-94-236
41060|code|LDR             R0, =aCConfFilenameS; "  -c --conf <filename>   Specify config"...|87-72
41062|code|BLX             puts|255-247-42-237
41066|code|LDR             R0, =aDDebugMaskSetD; "  -d --debug <mask>      Set debug mask"...|87-72
41068|code|BLX             puts|255-247-38-237
41072|code|LDR             R0, =aFForegroundDon; "  -f --foreground        Don't daemoniz"...|86-72
41074|code|BLX             puts|255-247-36-237
41078|code|LDR             R0, =aVVersionReport; "  -V --version           Report powerma"...|86-72
41080|code|BLX             puts|255-247-32-237
41084|code|LDR             R0, =aSStdioTalkToCl; "  -s --stdio             Talk to client"...|85-72
41086|code|BLX             puts|255-247-30-237
41090|code|LDR             R0, =a1OneClientTerm; "  -1 --one-client        Terminate when"...|85-72
41092|code|BLX             puts|255-247-26-237
41096|code|MOVS            R0, #0|0-32
41098|code|BLX             exit|255-247-86-237
41102|code|BLX             __errno_location|255-247-138-237
41106|code|LDR             R3, [R0]|3-104
41108|code|CMP             R3, #0x22 ; '"'|34-43
41110|code|BNE             loc_A026|198-209
41112|code|MOVS            R0, #1|1-32
41114|code|LDR             R1, =aStrtolOnDebugM; "strtol on debug mask"|80-73
41116|code|BL              sub_12AC4|8-240-18-253
41120|code|B               loc_A026|193-231
41122|code|TST.W           R10, R9|26-234-9-15
41126|code|BNE             loc_A158|87-209
41128|code|CMP.W           R8, #0|184-241-0-15
41132|code|BEQ             loc_A1A4|122-208
41134|code|MOV             R0, R11|88-70
41136|code|BL              sub_E4B8|4-240-2-250
41140|code|BL              sub_D258|3-240-208-248
41144|code|MOV             R0, R8|64-70
41146|code|BL              sub_120C0|8-240-1-248
41150|code|MOV             R0, R8|64-70
41152|code|BL              sub_1687C|12-240-220-251
41156|code|LDR             R1, =(locret_A284+1)|70-73
41158|code|MOVS            R0, #1|1-32
41160|code|BL              sub_16F98|12-240-102-255
41164|code|LDR             R1, =(sub_A288+1)|69-73
41166|code|MOVS            R0, #0xF|15-32
41168|code|BL              sub_16F98|12-240-98-255
41172|code|LDR             R1, =(sub_A288+1)|67-73
41174|code|MOVS            R0, #2|2-32
41176|code|BL              sub_16F98|12-240-94-255
41180|code|MOVS            R1, #1|1-33
41182|code|MOVS            R0, #0xD|13-32
41184|code|BL              sub_16F98|12-240-90-255
41188|code|MOV             R0, R9|72-70
41190|code|MOV             R1, R6|49-70
41192|code|BL              sub_D708|3-240-14-251
41196|code|CMP.W           R10, #0|186-241-0-15
41200|code|BNE             loc_A162|55-209
41202|code|BL              sub_1642C|12-240-155-249
41206|code|ADD             R5, SP, #0x18|6-173
41208|code|MOVS            R3, #0|0-35
41210|code|STR             R3, [SP,#0xC]|3-147
41212|code|STR.W           R3, [R5,#-0x10]!|69-248-16-61
41216|code|MOV             R6, R3|30-70
41218|code|MOV             R4, R0|4-70
41220|code|BL              sub_E7D0|4-240-100-251
41224|code|MOV             R0, R4|32-70
41226|code|BL              sub_16498|12-240-197-249
41230|code|MOV             R0, R4|32-70
41232|code|BL              sub_D284|3-240-184-248
41236|code|MOV             R0, R4|32-70
41238|code|BL              sub_E818|4-240-127-251
41242|code|LDR             R3, [SP,#8]|2-155
41244|code|MOV             R1, R5|41-70
41246|code|CBNZ            R3, loc_A12A|35-185
41248|code|LDR             R1, [SP,#0xC]|3-153
41250|code|CMP             R1, #0|0-41
41252|code|ITE NE|20-191
41254|code|MOVNE           R1, R5|41-70
41256|code|MOVEQ           R1, #0|0-33
41258|code|MOV             R0, R4|32-70
41260|code|BL              sub_16350|12-240-16-249
41264|code|MOV             R0, R4|32-70
41266|code|STR             R6, [SP,#0xC]|3-150
41268|code|STR             R6, [SP,#8]|2-150
41270|code|BL              sub_D320|3-240-243-248
41274|code|MOV             R0, R4|32-70
41276|code|MOV             R1, R5|41-70
41278|code|BL              sub_E87C|4-240-157-251
41282|code|BL              sub_D6FC|3-240-219-250
41286|code|CMP             R0, #0|0-40
41288|code|BEQ             loc_A108|222-208
41290|code|MOV             R0, R4|32-70
41292|code|BL              sub_16458|12-240-132-249
41296|code|MOVS            R0, #0|0-32
41298|code|ADD             SP, SP, #0x1C|7-176
41300|code|POP.W           {R4-R11,PC}|189-232-240-143
41304|code|MOV             R0, R4|32-70
41306|code|LDR             R1, =aStdioShouldOnl; "--stdio should only be used with --fore"...|35-73
41308|code|BL              sub_12AC4|8-240-178-252
41312|code|B               loc_A0A8|162-231
41314|code|LDR             R1, =aVar; "/var"|34-73
41316|code|LDR             R0, =aSRunPowerman; "%s/run/powerman"|34-72
41318|code|BL              sub_15FD0|11-240-51-255
41322|code|MOV             R4, R0|4-70
41324|code|MOV             R1, R0|1-70
41326|code|LDR             R0, =aSPowermandPid; "%s/powermand.pid"|33-72
41328|code|BL              sub_15FD0|11-240-46-255
41332|code|ADD             R1, SP, #0x14|5-169
41334|code|MOV             R5, R0|5-70
41336|code|ADD             R0, SP, #0x10|4-168
41338|code|BL              sub_D6E8|3-240-181-250
41342|code|LDR             R3, =aPowermand; "powermand"|30-75
41344|code|LDR             R1, [SP,#0x14]|5-153
41346|code|MOV             R2, R4|34-70
41348|code|LDR             R0, [SP,#0x10]|4-152
41350|code|STR             R3, [SP]|0-147
41352|code|MOV             R3, R5|43-70
41354|code|BL              sub_D9F8|3-240-53-252
41358|code|MOV             R0, R4|32-70
41360|code|BL              sub_1687C|12-240-116-251
41364|code|MOV             R0, R5|40-70
41366|code|BL              sub_1687C|12-240-113-251
41370|code|BL              sub_12AB4|8-240-139-252
41374|code|BL              sub_127E0|8-240-31-251
41378|code|B               loc_A0F2|166-231
41380|code|LDR             R0, =aSSS_1; "%s/%s/%s"|21-72
41382|code|LDR             R1, =aEtc; "/etc"|22-73
41384|code|LDR             R2, =aPowerman_0; "powerman"|22-74
41386|code|LDR             R3, =aPowermanConf; "powerman.conf"|23-75
41388|code|BL              sub_15FD0|11-240-16-255
41392|code|MOV             R8, R0|128-70
41394|code|B               loc_A0AE|124-231
41396|data|DCD off_17568; "conf"|104-117-1-0
41400|data|DCD aCFhdVsy1; "c:fhd:VsY1"|124-119-1-0
41404|data|DCD a235; "2.3.5"|40-118-1-0
41408|data|DCD aUsageSOptions; "Usage: %s [OPTIONS]\n"|48-118-1-0
41412|data|DCD aCConfFilenameS; "  -c --conf <filename>   Specify config"...|72-118-1-0
41416|data|DCD aDDebugMaskSetD; "  -d --debug <mask>      Set debug mask"...|124-118-1-0
41420|data|DCD aFForegroundDon; "  -f --foreground        Don't daemoniz"...|168-118-1-0
41424|data|DCD aVVersionReport; "  -V --version           Report powerma"...|212-118-1-0
41428|data|DCD aSStdioTalkToCl; "  -s --stdio             Talk to client"...|8-119-1-0
41432|data|DCD a1OneClientTerm; "  -1 --one-client        Terminate when"...|64-119-1-0
41436|data|DCD aStrtolOnDebugM; "strtol on debug mask"|16-118-1-0
41440|data|DCD locret_A284+1|133-162-0-0
41444|data|DCD sub_A288+1|137-162-0-0
41448|data|DCD aStdioShouldOnl; "--stdio should only be used with --fore"...|136-119-1-0
41452|data|DCD aVar; "/var"|248-119-1-0
41456|data|DCD aSRunPowerman; "%s/run/powerman"|232-119-1-0
41460|data|DCD aSPowermandPid; "%s/powermand.pid"|0-120-1-0
41464|data|DCD aPowermand; "powermand"|20-120-1-0
41468|data|DCD aSSS_1; "%s/%s/%s"|184-119-1-0
41472|data|DCD aEtc; "/etc"|196-119-1-0
41476|data|DCD aPowerman_0; "powerman"|204-119-1-0
41480|data|DCD aPowermanConf; "powerman.conf"|216-119-1-0
41484|code|MOV.W           R11, #0|79-240-0-11
41488|code|MOV.W           LR, #0|79-240-0-14
41492|code|POP.W           {R1}; argc|93-248-4-27
41496|code|MOV             R2, SP; ubp_av|106-70
41498|code|PUSH.W          {R2}; stack_end|77-248-4-45
41502|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
41506|code|LDR.W           R12, =(nullsub_1+1)|223-248-20-192
41510|code|PUSH.W          {R12}; fini|77-248-4-205
41514|code|LDR             R0, =(loc_9F7C+1); main|4-72
41516|code|LDR             R3, =(sub_1750C+1); init|4-75
41518|code|BLX             __libc_start_main|255-247-82-236
41522|code|BLX             abort|255-247-122-237
41526|data|ALIGN 4|0-0
41528|data|DCD nullsub_1+1|81-117-1-0
41532|data|DCD loc_9F7C+1|125-159-0-0
41536|data|DCD sub_1750C+1|13-117-1-0
41540|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xA24C)|3-75
41542|code|LDR             R2, =(__gmon_start___ptr_0 - 0x24760)|4-74
41544|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
41546|code|LDR             R3, [R3,R2]; __imp___gmon_start__|155-88
41548|code|CBZ             R3, locret_A252|11-177
41550|code|B.W             j___gmon_start__|255-247-77-188
41554|code|BX              LR|112-71
41556|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA24C|20-165-1-0
41560|data|DCD __gmon_start___ptr_0 - 0x24760|148-1-0-0
41564|code|LDR             R3, =byte_24A2C|2-75
41566|code|LDRB            R2, [R3]|26-120
41568|code|CBNZ            R2, locret_A266|10-185
41570|code|MOVS            R2, #1|1-34
41572|code|STRB            R2, [R3]|26-112
41574|code|BX              LR|112-71
41576|data|DCD byte_24A2C|44-74-2-0
41580|code|LDR             R0, =dword_24654|3-72
41582|code|PUSH            {R3,LR}|8-181
41584|code|LDR             R3, [R0]|3-104
41586|code|CBZ             R3, locret_A27A|19-177
41588|code|LDR             R3, =0|2-75
41590|code|CBZ             R3, locret_A27A|3-177
41592|code|BLX             R3|152-71
41594|code|POP             {R3,PC}|8-189
41596|data|DCD dword_24654|84-70-2-0
41600|data|DCD 0|0-0-0-0
41604|code|BX              LR|112-71
41606|data|ALIGN 4|0-191
41608|code|PUSH            {R4,LR}|16-181
41610|code|MOV             R4, R0|4-70
41612|code|BL              sub_D274|2-240-242-255
41616|code|BL              sub_E4D8|4-240-34-249
41620|code|BL              sub_12094|7-240-254-254
41624|code|MOVW            R1, #0x75F8|71-242-248-81
41628|code|MOVS            R0, #0|0-32
41630|code|MOVT.W          R1, #1|192-242-1-1
41634|code|MOV             R2, R4|34-70
41636|code|POP.W           {R4,LR}|189-232-16-64
41640|code|B.W             sub_12AC4|8-240-12-188
41644|code|PUSH            {R4,LR}|16-181
41646|code|MOV             R4, R0|4-70
41648|code|CBZ             R0, loc_A2CC|96-177
41650|code|LDR             R0, [R0]|0-104
41652|code|CBZ             R0, loc_A2D8|128-177
41654|code|BL              sub_1687C|12-240-225-250
41658|code|LDR             R0, [R4,#4]|96-104
41660|code|CBZ             R0, loc_A2C2|8-177
41662|code|BL              sub_1687C|12-240-221-250
41666|code|MOV             R0, R4|32-70
41668|code|POP.W           {R4,LR}|189-232-16-64
41672|code|B.W             sub_1687C|12-240-216-186
41676|code|LDR             R0, =aArgVoid0; "arg != ((void *)0)"|5-72
41678|code|MOVS            R2, #0x45 ; 'E'; line|69-34
41680|code|LDR             R1, =aArglistC; "arglist.c"|5-73
41682|code|LDR             R3, =aDestroyArg; "_destroy_arg"|6-75
41684|code|BLX             __assert_fail|255-247-64-237
41688|code|LDR             R0, =aArgNodeVoid0; "arg->node != ((void *)0)"|5-72
41690|code|MOVS            R2, #0x46 ; 'F'; line|70-34
41692|code|LDR             R1, =aArglistC; "arglist.c"|2-73
41694|code|LDR             R3, =aDestroyArg; "_destroy_arg"|3-75
41696|code|BLX             __assert_fail|255-247-58-237
41700|data|DCD aArgVoid0; "arg != ((void *)0)"|132-120-1-0
41704|data|DCD aArglistC; "arglist.c"|152-120-1-0
41708|data|DCD aDestroyArg; "_destroy_arg"|116-120-1-0
41712|data|DCD aArgNodeVoid0; "arg->node != ((void *)0)"|164-120-1-0
41716|code|LDR             R3, [R0,#8]|131-104
41718|code|PUSH            {R4,LR}|16-181
41720|code|SUBS            R3, #1|1-59
41722|code|MOV             R4, R0|4-70
41724|code|STR             R3, [R0,#8]|131-96
41726|code|CBZ             R3, loc_A302|3-177
41728|code|POP             {R4,PC}|16-189
41730|code|LDR             R0, [R0]|0-104
41732|code|BL              sub_FE54|5-240-166-253
41736|code|LDR             R0, [R4,#4]|96-104
41738|code|BL              sub_145A0|10-240-73-249
41742|code|MOV             R0, R4|32-70
41744|code|POP.W           {R4,LR}|189-232-16-64
41748|code|B.W             sub_1687C|12-240-178-186
41752|code|PUSH.W          {R3-R9,LR}|45-233-248-67
41756|code|MOV             R5, R0|5-70
41758|code|MOVS            R0, #0xC|12-32
41760|code|BL              sub_16730|12-240-6-250
41764|code|MOVS            R3, #1|1-35
41766|code|MOV             R4, R0|4-70
41768|code|MOV             R0, R5|40-70
41770|code|STR             R3, [R4,#8]|163-96
41772|code|BL              sub_139F4|9-240-98-251
41776|code|LDR             R1, =(sub_102E4+1)|27-73
41778|code|LDR             R2, =strcmp|28-74
41780|code|LDR             R3, =(sub_A2AC+1)|28-75
41782|code|BL              sub_FDB0|5-240-59-253
41786|code|MOV             R3, R0|3-70
41788|code|MOV             R0, R5|40-70
41790|code|STR             R3, [R4]|35-96
41792|code|BL              sub_13D58|9-240-10-253
41796|code|MOV             R8, R0|128-70
41798|code|CBZ             R0, loc_A396|48-179
41800|code|MOVS            R7, #0|0-39
41802|code|B               loc_A374|19-224
41804|code|BL              sub_16730|12-240-240-249
41808|code|MOV             R9, R0|129-70
41810|code|MOV             R0, R6|48-70
41812|code|BL              sub_168F8|12-240-208-250
41816|code|MOV             R2, R9|74-70
41818|code|MOV             R1, R0|1-70
41820|code|LDR             R0, [R4]|32-104
41822|code|STR.W           R1, [R9]|201-248-0-16
41826|code|STR.W           R7, [R9,#8]|201-248-8-112
41830|code|STR.W           R7, [R9,#4]|201-248-4-112
41834|code|BL              sub_FFF0|5-240-65-254
41838|code|MOV             R0, R6; ptr|48-70
41840|code|BLX             free|255-247-252-234
41844|code|MOV             R0, R8|64-70
41846|code|BL              sub_14C2C|10-240-89-252
41850|code|MOV             R6, R0|6-70
41852|code|MOVS            R0, #0xC|12-32
41854|code|CMP             R6, #0|0-46
41856|code|BNE             loc_A34C|228-209
41858|code|MOV             R0, R8|64-70
41860|code|BL              sub_144F8|10-240-184-248
41864|code|MOV             R0, R5|40-70
41866|code|BL              sub_136F4|9-240-179-249
41870|code|STR             R0, [R4,#4]|96-96
41872|code|MOV             R0, R4|32-70
41874|code|POP.W           {R3-R9,PC}|189-232-248-131
41878|code|MOV             R0, R4|32-70
41880|code|MOV             R4, R8|68-70
41882|code|BL              sub_A2F4|255-247-171-255
41886|code|B               loc_A390|247-231
41888|data|DCD sub_102E4+1|229-2-1-0
41892|data|DCD strcmp|252-152-0-0
41896|data|DCD sub_A2AC+1|173-162-0-0
41900|code|LDR             R3, [R0,#8]|131-104
41902|code|ADDS            R3, #1|1-51
41904|code|STR             R3, [R0,#8]|131-96
41906|code|BX              LR|112-71
41908|code|CBZ             R1, loc_A3BC|17-177
41910|code|LDR             R0, [R0]|0-104
41912|code|B.W             sub_FF64|5-240-212-189
41916|code|MOV             R0, R1|8-70
41918|code|BX              LR|112-71
41920|code|PUSH            {R3-R5,LR}|56-181
41922|code|MOV             R5, R0|5-70
41924|code|MOVS            R0, #8|8-32
41926|code|BL              sub_16730|12-240-179-249
41930|code|MOV             R4, R0|4-70
41932|code|LDR             R0, [R5,#4]|104-104
41934|code|STR             R5, [R4,#4]|101-96
41936|code|BL              sub_13D58|9-240-194-252
41940|code|STR             R0, [R4]|32-96
41942|code|MOV             R0, R4|32-70
41944|code|POP             {R3-R5,PC}|56-189
41946|data|ALIGN 4|0-191
41948|code|PUSH            {R4,LR}|16-181
41950|code|MOV             R4, R0|4-70
41952|code|LDR             R0, [R0]|0-104
41954|code|BL              sub_144F8|10-240-137-248
41958|code|MOV             R0, R4|32-70
41960|code|POP.W           {R4,LR}|189-232-16-64
41964|code|B.W             sub_1687C|12-240-70-186
41968|code|PUSH            {R3-R5,LR}|56-181
41970|code|MOV             R5, R0|5-70
41972|code|LDR             R0, [R0]|0-104
41974|code|BL              sub_14C2C|10-240-25-252
41978|code|MOV             R4, R0|4-70
41980|code|CBZ             R0, loc_A414|80-177
41982|code|LDR             R3, [R5,#4]|107-104
41984|code|MOV             R1, R0|1-70
41986|code|LDR             R0, [R3]|24-104
41988|code|BL              sub_FF64|5-240-174-253
41992|code|MOV             R5, R0|5-70
41994|code|MOV             R0, R4; ptr|32-70
41996|code|BLX             free|255-247-174-234
42000|code|MOV             R0, R5|40-70
42002|code|POP             {R3-R5,PC}|56-189
42004|code|MOV             R5, R0|5-70
42006|code|B               loc_A410|251-231
42008|code|PUSH.W          {R3-R11,LR}|45-233-248-79
42012|code|MOV             R4, R0|4-70
42014|code|MOV             R6, R1|14-70
42016|code|MOV             R5, R2|21-70
42018|code|MOV             R9, R3|153-70
42020|code|CMP             R0, #0|0-40
42022|code|BEQ             loc_A50C|113-208
42024|code|CMP             R1, #0|0-41
42026|code|BLE             loc_A4F0|97-221
42028|code|CMP             R2, #0|0-42
42030|code|BEQ             loc_A4E2|88-208
42032|code|CMP             R3, #0|0-43
42034|code|BEQ             loc_A4D4|79-208
42036|code|LDR             R3, [R0,#0x10]|3-105
42038|code|LDR             R7, [R0,#0x24]|71-106
42040|code|LDR             R0, [R0,#0x28]|128-106
42042|code|ADD.W           R8, R3, #1|3-241-1-8
42046|code|SUBS            R0, R7, R0|56-26
42048|code|MOV             R1, R8|65-70
42050|code|ADD             R0, R8|64-68
42052|code|BL              sub_174E4|13-240-78-248
42056|code|CMP             R1, R6|177-66
42058|code|ITE LT|180-191
42060|code|MOVLT           R10, R1|138-70
42062|code|MOVGE           R10, R6|178-70
42064|code|CMP.W           R10, #0|186-241-0-15
42068|code|BEQ             loc_A4BE|51-208
42070|code|BLE             loc_A4CC|57-221
42072|code|RSB.W           R7, R10, R7|202-235-7-7
42076|code|MOV             R1, R8|65-70
42078|code|ADD.W           R0, R8, R7|8-235-7-0
42082|code|MOV             R6, R10|86-70
42084|code|BL              sub_174E4|13-240-62-248
42088|code|MOV             R7, R1|15-70
42090|code|B               loc_A476|4-224
42092|code|CMP             R6, #0|0-46
42094|code|BLE             loc_A4C4|41-221
42096|code|LDR             R3, [R4,#0x10]|35-105
42098|code|ADD.W           R8, R3, #1|3-241-1-8
42102|code|RSB.W           R8, R7, R8|199-235-8-8
42106|code|LDR             R0, [R4,#0x2C]|224-106
42108|code|CMP             R8, R6|176-69
42110|code|IT GE|168-191
42112|code|MOVGE           R8, R6|176-70
42114|code|MOV             R1, R9|73-70
42116|code|ADDS            R0, R0, R7|192-25
42118|code|MOV             R2, R8|66-70
42120|code|BLX             R5|168-71
42122|code|CMP             R0, #0|0-40
42124|code|MOV             R11, R0|131-70
42126|code|BLE             loc_A4A0|7-221
42128|code|LDR             R1, [R4,#0x10]|33-105
42130|code|ADDS            R0, R7, R0|56-24
42132|code|RSB.W           R6, R11, R6|203-235-6-6
42136|code|ADDS            R1, #1|1-49
42138|code|BL              sub_174E4|13-240-35-248
42142|code|MOV             R7, R1|15-70
42144|code|CMP             R8, R11|216-69
42146|code|BEQ             loc_A46C|227-208
42148|code|RSB.W           R0, R6, R10|198-235-10-0
42152|code|LSRS            R3, R0, #0x1F|195-15
42154|code|CMP             R10, R0|130-69
42156|code|IT LT|184-191
42158|code|ORRLT.W         R3, R3, #1|67-240-1-3
42162|code|CBNZ            R3, loc_A4FE|35-187
42164|code|CMP             R0, #0|0-40
42166|code|IT EQ|8-191
42168|code|MOVEQ           R0, R11|88-70
42170|code|POP.W           {R3-R11,PC}|189-232-248-143
42174|code|MOV             R0, R10|80-70
42176|code|POP.W           {R3-R11,PC}|189-232-248-143
42180|code|RSB.W           R0, R6, R10|198-235-10-0
42184|code|MOVS            R3, #0|0-35
42186|code|B               loc_A4AA|238-231
42188|code|MOVS            R3, #0|0-35
42190|code|MOV             R0, R3|24-70
42192|code|MOV             R11, R3|155-70
42194|code|B               loc_A4AA|234-231
42196|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|17-72
42198|code|MOVW            R2, #0x5F4; line|64-242-244-82
42202|code|LDR             R1, =aCbufC; "cbuf.c"|17-73
42204|code|LDR             R3, =aCbufReplayer; "cbuf_replayer"|17-75
42206|code|BLX             __assert_fail|255-247-60-236
42210|code|LDR             R0, =aPutfVoid0; "putf != ((void *)0)"|17-72
42212|code|MOVW            R2, #0x5F3; line|64-242-243-82
42216|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
42218|code|LDR             R3, =aCbufReplayer; "cbuf_replayer"|14-75
42220|code|BLX             __assert_fail|255-247-52-236
42224|code|LDR             R0, =aLen0; "len > 0"|14-72
42226|code|MOVW            R2, #0x5F2; line|64-242-242-82
42230|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
42232|code|LDR             R3, =aCbufReplayer; "cbuf_replayer"|10-75
42234|code|BLX             __assert_fail|255-247-46-236
42238|code|LDR             R0, =aN0NLen; "(n >= 0) && (n <= len)"|12-72
42240|code|MOVW            R2, #0x613; line|64-242-19-98
42244|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
42246|code|LDR             R3, =aCbufReplayer; "cbuf_replayer"|7-75
42248|code|BLX             __assert_fail|255-247-38-236
42252|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|9-72
42254|code|MOVW            R2, #0x5F1; line|64-242-241-82
42258|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
42260|code|LDR             R3, =aCbufReplayer; "cbuf_replayer"|3-75
42262|code|BLX             __assert_fail|255-247-32-236
42266|data|ALIGN 4|0-191
42268|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
42272|data|DCD aCbufC; "cbuf.c"|100-123-1-0
42276|data|DCD aCbufReplayer; "cbuf_replayer"|192-120-1-0
42280|data|DCD aPutfVoid0; "putf != ((void *)0)"|116-123-1-0
42284|data|DCD aLen0; "len > 0"|108-123-1-0
42288|data|DCD aN0NLen; "(n >= 0) && (n <= len)"|156-123-1-0
42292|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
42296|code|PUSH.W          {R3-R11,LR}|45-233-248-79
42300|code|MOV             R4, R0|4-70
42302|code|MOV             R5, R2|21-70
42304|code|MOV             R9, R3|153-70
42306|code|CMP             R0, #0|0-40
42308|code|BEQ             loc_A60A|97-208
42310|code|CMP             R1, #0|0-41
42312|code|BLE             loc_A5EE|81-221
42314|code|CMP             R2, #0|0-42
42316|code|BEQ             loc_A5E0|72-208
42318|code|CMP             R3, #0|0-43
42320|code|BEQ             loc_A5D2|63-208
42322|code|LDR             R3, [R0,#0x14]|67-105
42324|code|CMP             R1, R3|153-66
42326|code|ITE LT|180-191
42328|code|MOVLT           R10, R1|138-70
42330|code|MOVGE           R10, R3|154-70
42332|code|CMP.W           R10, #0|186-241-0-15
42336|code|BEQ             loc_A5BC|44-208
42338|code|LDR             R7, [R0,#0x24]|71-106
42340|code|BLE             loc_A5CA|49-221
42342|code|MOV             R6, R10|86-70
42344|code|B               loc_A56E|1-224
42346|code|CMP             R6, #0|0-46
42348|code|BLE             loc_A5C2|41-221
42350|code|LDR             R3, [R4,#0x10]|35-105
42352|code|MOV             R1, R9|73-70
42354|code|LDR             R0, [R4,#0x2C]|224-106
42356|code|ADD.W           R8, R3, #1|3-241-1-8
42360|code|RSB.W           R8, R7, R8|199-235-8-8
42364|code|ADDS            R0, R0, R7|192-25
42366|code|CMP             R8, R6|176-69
42368|code|IT GE|168-191
42370|code|MOVGE           R8, R6|176-70
42372|code|MOV             R2, R8|66-70
42374|code|BLX             R5|168-71
42376|code|CMP             R0, #0|0-40
42378|code|MOV             R11, R0|131-70
42380|code|BLE             loc_A59E|7-221
42382|code|LDR             R1, [R4,#0x10]|33-105
42384|code|ADDS            R0, R7, R0|56-24
42386|code|RSB.W           R6, R11, R6|203-235-6-6
42390|code|ADDS            R1, #1|1-49
42392|code|BL              sub_174E4|12-240-164-255
42396|code|MOV             R7, R1|15-70
42398|code|CMP             R8, R11|216-69
42400|code|BEQ             loc_A56A|227-208
42402|code|RSB.W           R0, R6, R10|198-235-10-0
42406|code|LSRS            R3, R0, #0x1F|195-15
42408|code|CMP             R10, R0|130-69
42410|code|IT LT|184-191
42412|code|ORRLT.W         R3, R3, #1|67-240-1-3
42416|code|CBNZ            R3, loc_A5FC|35-187
42418|code|CMP             R0, #0|0-40
42420|code|IT EQ|8-191
42422|code|MOVEQ           R0, R11|88-70
42424|code|POP.W           {R3-R11,PC}|189-232-248-143
42428|code|MOV             R0, R10|80-70
42430|code|POP.W           {R3-R11,PC}|189-232-248-143
42434|code|RSB.W           R0, R6, R10|198-235-10-0
42438|code|MOVS            R3, #0|0-35
42440|code|B               loc_A5A8|238-231
42442|code|MOVS            R3, #0|0-35
42444|code|MOV             R0, R3|24-70
42446|code|MOV             R11, R3|155-70
42448|code|B               loc_A5A8|234-231
42450|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|17-72
42452|code|MOVW            R2, #0x5BC; line|64-242-188-82
42456|code|LDR             R1, =aCbufC; "cbuf.c"|16-73
42458|code|LDR             R3, =aCbufReader; "cbuf_reader"|17-75
42460|code|BLX             __assert_fail|255-247-188-235
42464|code|LDR             R0, =aPutfVoid0; "putf != ((void *)0)"|16-72
42466|code|MOVW            R2, #0x5BB; line|64-242-187-82
42470|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
42472|code|LDR             R3, =aCbufReader; "cbuf_reader"|13-75
42474|code|BLX             __assert_fail|255-247-182-235
42478|code|LDR             R0, =aLen0; "len > 0"|14-72
42480|code|MOVW            R2, #0x5BA; line|64-242-186-82
42484|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
42486|code|LDR             R3, =aCbufReader; "cbuf_reader"|10-75
42488|code|BLX             __assert_fail|255-247-174-235
42492|code|LDR             R0, =aN0NLen; "(n >= 0) && (n <= len)"|11-72
42494|code|MOVW            R2, #0x5DA; line|64-242-218-82
42498|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
42500|code|LDR             R3, =aCbufReader; "cbuf_reader"|6-75
42502|code|BLX             __assert_fail|255-247-168-235
42506|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|9-72
42508|code|MOVW            R2, #0x5B9; line|64-242-185-82
42512|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
42514|code|LDR             R3, =aCbufReader; "cbuf_reader"|3-75
42516|code|BLX             __assert_fail|255-247-160-235
42520|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
42524|data|DCD aCbufC; "cbuf.c"|100-123-1-0
42528|data|DCD aCbufReader; "cbuf_reader"|208-120-1-0
42532|data|DCD aPutfVoid0; "putf != ((void *)0)"|116-123-1-0
42536|data|DCD aLen0; "len > 0"|108-123-1-0
42540|data|DCD aN0NLen; "(n >= 0) && (n <= len)"|156-123-1-0
42544|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
42548|code|PUSH.W          {R4-R11,LR}|45-233-240-79
42552|code|MOV             R4, R0|4-70
42554|code|SUB             SP, SP, #0x14|133-176
42556|code|MOV             R5, R2|21-70
42558|code|CMP             R0, #0|0-40
42560|code|BEQ.W           loc_A78E|0-240-165-128
42564|code|CMP             R2, #0|0-42
42566|code|BEQ.W           loc_A780|0-240-155-128
42570|code|LDR             R6, [R2]|22-104
42572|code|ADDS            R2, R6, #1|114-28
42574|code|BLT.W           loc_A772|192-242-144-128
42578|code|MOVS            R2, #0|0-34
42580|code|STR             R2, [R5]|42-96
42582|code|CBZ             R3, loc_A65A|3-177
42584|code|STR             R2, [R3]|26-96
42586|code|CMP             R6, #0|0-46
42588|code|BEQ             loc_A74E|119-208
42590|code|CMP             R1, #0|0-41
42592|code|ITE GT|204-191
42594|code|MOVGT.W         R10, #0|79-240-0-10
42598|code|MOVLE.W         R10, #1|79-240-1-10
42602|code|ANDS.W          R10, R10, R6,LSR#31|26-234-214-122
42606|code|BNE             loc_A742|104-209
42608|code|LDR             R7, [R4,#0x24]|103-106
42610|code|LDR.W           R11, [R4,#0x28]|212-248-40-176
42614|code|CMP             R7, R11|95-69
42616|code|BEQ             loc_A746|101-208
42618|code|CMP             R6, #0|0-46
42620|code|IT LE|216-191
42622|code|ADDLE.W         R8, R1, #1|1-241-1-8
42626|code|LDR             R1, [R4,#0x10]|33-105
42628|code|IT GT|200-191
42630|code|MOVGT.W         R8, #0xFFFFFFFF|79-240-255-56
42634|code|STR             R3, [SP,#0x38+var_34]|1-147
42636|code|ADDS            R0, R7, R1|120-24
42638|code|ADDS            R1, #1|1-49
42640|code|BL              sub_174E4|12-240-40-255
42644|code|LDR             R2, [R4,#0x2C]|226-106
42646|code|LDR             R3, [SP,#0x38+var_34]|1-155
42648|code|STR             R2, [SP,#0x38+var_30]|2-146
42650|code|LDRB            R2, [R2,R1]|82-92
42652|code|CMP             R2, #0xA|10-42
42654|code|BEQ             loc_A758|91-208
42656|code|CBZ             R3, loc_A6AC|35-177
42658|code|MOVS            R2, #1|1-34
42660|code|STR             R2, [R3]|26-96
42662|code|LDR             R7, [R4,#0x24]|103-106
42664|code|LDR.W           R11, [R4,#0x28]|212-248-40-176
42668|code|ADD.W           R8, R8, #0xFFFFFFFF|8-241-255-56
42672|code|MOVS            R3, #0|0-35
42674|code|STR             R3, [SP,#0x38+var_2C]|3-147
42676|code|MOV.W           R10, #0|79-240-0-10
42680|code|MOV             R9, R10|209-70
42682|code|B               loc_A6D0|9-224
42684|code|RSBS.W          R3, R8, #1|216-241-1-3
42688|code|IT CC|56-191
42690|code|MOVCC           R3, #0|0-35
42692|code|CMP             R6, #0|0-46
42694|code|IT EQ|8-191
42696|code|ORREQ.W         R3, R3, #1|67-240-1-3
42700|code|CBNZ            R3, loc_A718|35-187
42702|code|MOV             R9, R2|145-70
42704|code|CMP             R7, R11|95-69
42706|code|BEQ             loc_A76E|76-208
42708|code|LDR             R1, [R4,#0x10]|33-105
42710|code|ADDS            R0, R1, R7|200-25
42712|code|ADDS            R1, #1|1-49
42714|code|BL              sub_174E4|12-240-3-255
42718|code|LDR             R0, [SP,#0x38+var_30]|2-152
42720|code|CMP.W           R8, #0|184-241-0-15
42724|code|ADD.W           R2, R9, #1|9-241-1-2
42728|code|IT GT|200-191
42730|code|ADDGT.W         R8, R8, #0xFFFFFFFF|8-241-255-56
42734|code|LDRB            R3, [R0,R1]|67-92
42736|code|MOV             R7, R1|15-70
42738|code|CMP             R3, #0xA|10-43
42740|code|BNE             loc_A6BC|226-209
42742|code|LDR             R3, [SP,#0x38+var_2C]|3-155
42744|code|CMP             R6, #0|0-46
42746|code|IT GT|200-191
42748|code|SUBGT           R6, #1|1-62
42750|code|MOV             R10, R9|202-70
42752|code|ADDS            R3, #1|1-51
42754|code|STR             R3, [SP,#0x38+var_2C]|3-147
42756|code|RSBS.W          R3, R8, #1|216-241-1-3
42760|code|IT CC|56-191
42762|code|MOVCC           R3, #0|0-35
42764|code|CMP             R6, #0|0-46
42766|code|IT EQ|8-191
42768|code|ORREQ.W         R3, R3, #1|67-240-1-3
42772|code|CMP             R3, #0|0-43
42774|code|BEQ             loc_A6CE|218-208
42776|code|LDR             R3, [R4,#0x1C]|227-105
42778|code|CBNZ            R3, loc_A73E|131-185
42780|code|CMP             R6, #0|0-46
42782|code|ITE LE|212-191
42784|code|MOVLE           R3, #0|0-35
42786|code|MOVGT           R3, #1|1-35
42788|code|CMP.W           R8, #0|184-241-0-15
42792|code|ITE LE|212-191
42794|code|MOVLE           R1, R3|25-70
42796|code|ORRGT.W         R1, R3, #1|67-240-1-1
42800|code|CBZ             R1, loc_A752|121-177
42802|code|CBZ             R3, loc_A736|3-177
42804|code|SUBS            R6, #1|1-62
42806|code|LDR             R3, [SP,#0x38+var_2C]|3-155
42808|code|MOV             R10, R2|146-70
42810|code|ADDS            R3, #1|1-51
42812|code|STR             R3, [SP,#0x38+var_2C]|3-147
42814|code|CMP             R6, #0|0-46
42816|code|BLE             loc_A752|7-221
42818|code|MOV.W           R10, #0|79-240-0-10
42822|code|MOV             R0, R10|80-70
42824|code|ADD             SP, SP, #0x14|5-176
42826|code|POP.W           {R4-R11,PC}|189-232-240-143
42830|code|MOV             R10, R6|178-70
42832|code|B               loc_A746|249-231
42834|code|LDR             R2, [SP,#0x38+var_2C]|3-154
42836|code|STR             R2, [R5]|42-96
42838|code|B               loc_A746|246-231
42840|code|CMP             R6, #0|0-46
42842|code|ITT LE|220-191
42844|code|MOVLE.W         R3, #0xFFFFFFFF|79-240-255-51
42848|code|STRLE           R3, [SP,#0x38+var_2C]|3-147
42850|code|BLE             loc_A6B4|167-221
42852|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
42856|code|ADDS            R6, #1|1-54
42858|code|STR             R2, [SP,#0x38+var_2C]|3-146
42860|code|B               loc_A6B4|162-231
42862|code|MOV             R2, R9|74-70
42864|code|B               loc_A718|210-231
42866|code|LDR             R0, =aNlines1; "*nlines >= -1"|10-72
42868|code|MOVW            R2, #0x46B; line|64-242-107-66
42872|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
42874|code|LDR             R3, =aCbufFindReplay; "cbuf_find_replay_line"|10-75
42876|code|BLX             __assert_fail|255-247-236-234
42880|code|LDR             R0, =aNlinesVoid0; "nlines != ((void *)0)"|9-72
42882|code|MOVW            R2, #0x46A; line|64-242-106-66
42886|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
42888|code|LDR             R3, =aCbufFindReplay; "cbuf_find_replay_line"|6-75
42890|code|BLX             __assert_fail|255-247-230-234
42894|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|7-72
42896|code|MOVW            R2, #0x469; line|64-242-105-66
42900|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
42902|code|LDR             R3, =aCbufFindReplay; "cbuf_find_replay_line"|3-75
42904|code|BLX             __assert_fail|255-247-222-234
42908|data|DCD aNlines1; "*nlines >= -1"|224-123-1-0
42912|data|DCD aCbufC; "cbuf.c"|100-123-1-0
42916|data|DCD aCbufFindReplay; "cbuf_find_replay_line"|220-120-1-0
42920|data|DCD aNlinesVoid0; "nlines != ((void *)0)"|200-123-1-0
42924|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
42928|code|PUSH.W          {R4-R11,LR}|45-233-240-79
42932|code|MOV             R5, R0|5-70
42934|code|SUB             SP, SP, #0xC|131-176
42936|code|MOV             R4, R1|12-70
42938|code|MOV             R8, R2|144-70
42940|code|CMP             R0, #0|0-40
42942|code|BEQ             loc_A87C|93-208
42944|code|CMP             R2, #0|0-42
42946|code|BEQ             loc_A898|105-208
42948|code|LDR             R6, [R2]|22-104
42950|code|ADDS            R1, R6, #1|113-28
42952|code|BLT             loc_A88A|95-219
42954|code|MOVS            R3, #0|0-35
42956|code|MOV             R9, R6|177-70
42958|code|STR             R3, [R2]|19-96
42960|code|CMP             R6, #0|0-46
42962|code|BEQ             loc_A868|73-208
42964|code|CMP             R4, R3|156-66
42966|code|ITE GT|204-191
42968|code|MOVGT           R2, #0|0-34
42970|code|MOVLE           R2, #1|1-34
42972|code|ANDS.W          R2, R2, R6,LSR#31|18-234-214-114
42976|code|BNE             loc_A870|70-209
42978|code|LDR             R3, [R0,#0x14]|67-105
42980|code|CMP             R3, #0|0-43
42982|code|BEQ             loc_A870|67-208
42984|code|LDR             R1, [R0,#0x24]|65-106
42986|code|CMP             R6, #0|0-46
42988|code|IT GT|200-191
42990|code|MOVGT.W         R4, #0xFFFFFFFF|79-240-255-52
42994|code|LDR.W           R10, [R0,#0x20]|208-248-32-160
42998|code|CMP             R1, R10|81-69
43000|code|ITT EQ|4-191
43002|code|STREQ           R2, [SP,#0x30+var_2C]|1-146
43004|code|MOVEQ           R9, R2|145-70
43006|code|BEQ             loc_A85E|46-208
43008|code|LDR.W           R11, [R0,#0x2C]|208-248-44-176
43012|code|MOV             R9, R2|145-70
43014|code|STR             R2, [SP,#0x30+var_2C]|1-146
43016|code|MOV             R7, R2|23-70
43018|code|B               loc_A82C|15-224
43020|code|RSBS.W          R3, R4, #1|212-241-1-3
43024|code|IT CC|56-191
43026|code|MOVCC           R3, #0|0-35
43028|code|CMP             R6, #0|0-46
43030|code|IT EQ|8-191
43032|code|ORREQ.W         R3, R3, #1|67-240-1-3
43036|code|CBNZ            R3, loc_A85E|251-185
43038|code|LDR             R3, [R5,#0x10]|43-105
43040|code|ADDS            R0, R1, #1|72-28
43042|code|ADDS            R1, R3, #1|89-28
43044|code|BL              sub_174E4|12-240-94-254
43048|code|CMP             R1, R10|81-69
43050|code|BEQ             loc_A85E|24-208
43052|code|LDRB.W          R3, [R11,R1]|27-248-1-48
43056|code|ADDS            R7, #1|1-55
43058|code|CMP             R4, #0|0-44
43060|code|IT GT|200-191
43062|code|SUBGT           R4, #1|1-60
43064|code|CMP             R3, #0xA|10-43
43066|code|BNE             loc_A80C|231-209
43068|code|LDR             R3, [SP,#0x30+var_2C]|1-155
43070|code|CMP             R6, #0|0-46
43072|code|IT GT|200-191
43074|code|SUBGT           R6, #1|1-62
43076|code|MOV             R9, R7|185-70
43078|code|ADDS            R3, #1|1-51
43080|code|STR             R3, [SP,#0x30+var_2C]|1-147
43082|code|RSBS.W          R3, R4, #1|212-241-1-3
43086|code|IT CC|56-191
43088|code|MOVCC           R3, #0|0-35
43090|code|CMP             R6, #0|0-46
43092|code|IT EQ|8-191
43094|code|ORREQ.W         R3, R3, #1|67-240-1-3
43098|code|CMP             R3, #0|0-43
43100|code|BEQ             loc_A81E|223-208
43102|code|CMP             R6, #0|0-46
43104|code|IT GT|200-191
43106|code|MOVGT.W         R9, #0|79-240-0-9
43110|code|BLE             loc_A874|5-221
43112|code|MOV             R0, R9|72-70
43114|code|ADD             SP, SP, #0xC|3-176
43116|code|POP.W           {R4-R11,PC}|189-232-240-143
43120|code|MOV             R9, R3|153-70
43122|code|B               loc_A868|249-231
43124|code|LDR             R3, [SP,#0x30+var_2C]|1-155
43126|code|STR.W           R3, [R8]|200-248-0-48
43130|code|B               loc_A868|245-231
43132|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|10-72
43134|code|MOVW            R2, #0x4C5; line|64-242-197-66
43138|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
43140|code|LDR             R3, =aCbufFindUnread; "cbuf_find_unread_line"|10-75
43142|code|BLX             __assert_fail|255-247-104-234
43146|code|LDR             R0, =aNlines1; "*nlines >= -1"|10-72
43148|code|MOVW            R2, #0x4C7; line|64-242-199-66
43152|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
43154|code|LDR             R3, =aCbufFindUnread; "cbuf_find_unread_line"|7-75
43156|code|BLX             __assert_fail|255-247-96-234
43160|code|LDR             R0, =aNlinesVoid0; "nlines != ((void *)0)"|7-72
43162|code|MOVW            R2, #0x4C6; line|64-242-198-66
43166|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
43168|code|LDR             R3, =aCbufFindUnread; "cbuf_find_unread_line"|3-75
43170|code|BLX             __assert_fail|255-247-90-234
43174|data|ALIGN 4|0-191
43176|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
43180|data|DCD aCbufC; "cbuf.c"|100-123-1-0
43184|data|DCD aCbufFindUnread; "cbuf_find_unread_line"|244-120-1-0
43188|data|DCD aNlines1; "*nlines >= -1"|224-123-1-0
43192|data|DCD aNlinesVoid0; "nlines != ((void *)0)"|200-123-1-0
43196|code|PUSH            {R3-R7,LR}|248-181
43198|code|MOV             R4, R0|4-70
43200|code|CMP             R0, #0|0-40
43202|code|BEQ.W           loc_AAE2|0-240-14-129
43206|code|LDR             R6, [R0,#0x2C]|198-106
43208|code|CMP             R6, #0|0-46
43210|code|BEQ.W           loc_AAD4|0-240-3-129
43214|code|LDR             R2, [R0]|2-104
43216|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
43224|code|CMP             R2, R3|154-66
43226|code|BNE.W           loc_AAC6|64-240-244-128
43230|code|SUBS            R0, R6, #4; s1|48-31
43232|code|MOV             R1, R4; s2|33-70
43234|code|MOVS            R2, #4; n|4-34
43236|code|BLX             memcmp|255-247-108-232
43240|code|CMP             R0, #0|0-40
43242|code|BNE.W           loc_AAB8|64-240-229-128
43246|code|LDR             R5, [R4,#0x10]|37-105
43248|code|MOV             R1, R4; s2|33-70
43250|code|MOVS            R2, #4; n|4-34
43252|code|ADDS            R7, R5, #1|111-28
43254|code|ADDS            R0, R6, R7; s1|240-25
43256|code|BLX             memcmp|255-247-98-232
43260|code|CMP             R0, #0|0-40
43262|code|BNE.W           loc_AAAA|64-240-212-128
43266|code|LDR             R3, [R4,#4]|99-104
43268|code|CMP             R3, #0|0-43
43270|code|BLE.W           loc_AA9C|64-243-201-128
43274|code|CMP             R5, R3|157-66
43276|code|BGE.W           loc_AA8E|128-242-191-128
43280|code|CMP             R5, #0|0-45
43282|code|BLE.W           loc_AA80|64-243-181-128
43286|code|LDR             R3, [R4,#8]|163-104
43288|code|CMP             R5, R3|157-66
43290|code|BLT             loc_AA02|114-219
43292|code|LDR             R2, [R4,#0xC]|226-104
43294|code|CMP             R5, R2|149-66
43296|code|BGT             loc_A9F4|104-220
43298|code|CMP             R3, #0|0-43
43300|code|BLE             loc_A9E6|95-221
43302|code|CMP             R2, #0|0-42
43304|code|BLE             loc_A9D8|86-221
43306|code|LDR             R1, [R4,#0x14]|97-105
43308|code|CMP             R1, #0|0-41
43310|code|BLT             loc_AA1E|118-219
43312|code|CMP             R5, R1|141-66
43314|code|BLT             loc_AA10|109-219
43316|code|LDR             R3, [R4,#0x18]|163-105
43318|code|CMP             R3, #2|2-43
43320|code|BHI             loc_A9AE|57-216
43322|code|LDR             R3, [R4,#0x1C]|227-105
43324|code|CBZ             R3, loc_A984|19-179
43326|code|LDR             R3, [R4,#0x20]|35-106
43328|code|CMP             R3, #0|0-43
43330|code|BLT.W           loc_AA72|192-242-150-128
43334|code|CMP             R5, R3|157-66
43336|code|BLT.W           loc_AA64|192-242-140-128
43340|code|LDR             R0, [R4,#0x24]|96-106
43342|code|CMP             R0, #0|0-40
43344|code|BLT.W           loc_AA56|192-242-129-128
43348|code|CMP             R5, R0|133-66
43350|code|BLT             loc_AA48|119-219
43352|code|LDR             R2, [R4,#0x28]|162-106
43354|code|CMP             R2, #0|0-42
43356|code|BLT             loc_AA3A|109-219
43358|code|CMP             R5, R2|149-66
43360|code|BLT             loc_AA2C|100-219
43362|code|CMP             R3, R0|131-66
43364|code|BGE             loc_A998|24-218
43366|code|CMP             R3, R2|147-66
43368|code|BGE             loc_A9BC|40-218
43370|code|CMP             R0, R2|144-66
43372|code|BLT             loc_A9BC|38-219
43374|code|SUBS            R0, R0, R3|192-26
43376|code|SUBS            R5, R5, R1|109-26
43378|code|SUBS            R0, #1|1-56
43380|code|MOV             R1, R7|57-70
43382|code|ADDS            R0, R0, R7|192-25
43384|code|BL              sub_174E4|12-240-180-253
43388|code|CMP             R5, R1|141-66
43390|code|BNE             loc_A9CA|36-209
43392|code|MOVS            R0, #1|1-32
43394|code|POP             {R3-R7,PC}|248-189
43396|code|LDR             R3, [R4,#0x28]|163-106
43398|code|CMP             R3, #0|0-43
43400|code|BEQ             loc_A93E|217-208
43402|code|LDR             R0, =aCbGotWrapCbIRe; "cb->got_wrap || !cb->i_rep"|89-72
43404|code|MOV.W           R2, #0x708; line|79-244-225-98
43408|code|LDR             R1, =aCbufC; "cbuf.c"|88-73
43410|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|89-75
43412|code|BLX             __assert_fail|255-247-224-233
43416|code|CMP             R3, R2|147-66
43418|code|BLT             loc_A96E|232-219
43420|code|CMP             R0, R2|144-66
43422|code|BGE             loc_A96E|230-218
43424|code|LDR             R0, =aCbIRepCbIInCbI; "(cb->i_rep > cb->i_in) || (cb->i_rep <="...|86-72
43426|code|MOVW            R2, #0x711; line|64-242-17-114
43430|code|LDR             R1, =aCbufC; "cbuf.c"|83-73
43432|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|83-75
43434|code|BLX             __assert_fail|255-247-214-233
43438|code|LDR             R0, =aCbOverwriteCbu; "cb->overwrite == CBUF_NO_DROP || cb->ov"...|84-72
43440|code|MOVW            R2, #0x707; line|64-242-7-114
43444|code|LDR             R1, =aCbufC; "cbuf.c"|79-73
43446|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|80-75
43448|code|BLX             __assert_fail|255-247-206-233
43452|code|LDR             R0, =aCbIRepCbIInCbI_0; "(cb->i_rep > cb->i_in) && (cb->i_rep <="...|81-72
43454|code|MOVW            R2, #0x714; line|64-242-20-114
43458|code|LDR             R1, =aCbufC; "cbuf.c"|76-73
43460|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|76-75
43462|code|BLX             __assert_fail|255-247-200-233
43466|code|LDR             R0, =aCbSizeCbUsedNf; "cb->size - cb->used == nfree"|79-72
43468|code|MOVW            R2, #0x717; line|64-242-23-114
43472|code|LDR             R1, =aCbufC; "cbuf.c"|72-73
43474|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|73-75
43476|code|BLX             __assert_fail|255-247-192-233
43480|code|LDR             R0, =aCbMaxsize0; "cb->maxsize > 0"|76-72
43482|code|MOVW            R2, #0x702; line|64-242-2-114
43486|code|LDR             R1, =aCbufC; "cbuf.c"|69-73
43488|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|69-75
43490|code|BLX             __assert_fail|255-247-186-233
43494|code|LDR             R0, =aCbMinsize0; "cb->minsize > 0"|74-72
43496|code|MOVW            R2, #0x701; line|64-242-1-114
43500|code|LDR             R1, =aCbufC; "cbuf.c"|65-73
43502|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|66-75
43504|code|BLX             __assert_fail|255-247-178-233
43508|code|LDR             R0, =aCbSizeCbMaxsiz; "cb->size <= cb->maxsize"|71-72
43510|code|MOV.W           R2, #0x700; line|79-244-224-98
43514|code|LDR             R1, =aCbufC; "cbuf.c"|62-73
43516|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|62-75
43518|code|BLX             __assert_fail|255-247-172-233
43522|code|LDR             R0, =aCbSizeCbMinsiz; "cb->size >= cb->minsize"|69-72
43524|code|MOVW            R2, #0x6FF; line|64-242-255-98
43528|code|LDR             R1, =aCbufC; "cbuf.c"|58-73
43530|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|59-75
43532|code|BLX             __assert_fail|255-247-164-233
43536|code|LDR             R0, =aCbUsedCbSize; "cb->used <= cb->size"|66-72
43538|code|MOVW            R2, #0x704; line|64-242-4-114
43542|code|LDR             R1, =aCbufC; "cbuf.c"|55-73
43544|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|55-75
43546|code|BLX             __assert_fail|255-247-158-233
43550|code|LDR             R0, =aCbUsed0; "cb->used >= 0"|64-72
43552|code|MOVW            R2, #0x703; line|64-242-3-114
43556|code|LDR             R1, =aCbufC; "cbuf.c"|51-73
43558|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|52-75
43560|code|BLX             __assert_fail|255-247-150-233
43564|code|LDR             R0, =aCbIRepCbSize; "cb->i_rep <= cb->size"|61-72
43566|code|MOVW            R2, #0x70E; line|64-242-14-114
43570|code|LDR             R1, =aCbufC; "cbuf.c"|48-73
43572|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|48-75
43574|code|BLX             __assert_fail|255-247-144-233
43578|code|LDR             R0, =aCbIRep0; "cb->i_rep >= 0"|59-72
43580|code|MOVW            R2, #0x70D; line|64-242-13-114
43584|code|LDR             R1, =aCbufC; "cbuf.c"|44-73
43586|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|45-75
43588|code|BLX             __assert_fail|255-247-136-233
43592|code|LDR             R0, =aCbIOutCbSize; "cb->i_out <= cb->size"|56-72
43594|code|MOVW            R2, #0x70C; line|64-242-12-114
43598|code|LDR             R1, =aCbufC; "cbuf.c"|41-73
43600|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|41-75
43602|code|BLX             __assert_fail|255-247-130-233
43606|code|LDR             R0, =aCbIOut0; "cb->i_out >= 0"|54-72
43608|code|MOVW            R2, #0x70B; line|64-242-11-114
43612|code|LDR             R1, =aCbufC; "cbuf.c"|37-73
43614|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|38-75
43616|code|BLX             __assert_fail|255-247-122-233
43620|code|LDR             R0, =aCbIInCbSize; "cb->i_in <= cb->size"|51-72
43622|code|MOVW            R2, #0x70A; line|64-242-10-114
43626|code|LDR             R1, =aCbufC; "cbuf.c"|34-73
43628|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|34-75
43630|code|BLX             __assert_fail|255-247-116-233
43634|code|LDR             R0, =aCbIIn0; "cb->i_in >= 0"|49-72
43636|code|MOVW            R2, #0x709; line|64-242-9-114
43640|code|LDR             R1, =aCbufC; "cbuf.c"|30-73
43642|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|31-75
43644|code|BLX             __assert_fail|255-247-108-233
43648|code|LDR             R0, =unk_17D04; assertion|46-72
43650|code|MOVW            R2, #0x6FE; line|64-242-254-98
43654|code|LDR             R1, =aCbufC; "cbuf.c"|27-73
43656|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|27-75
43658|code|BLX             __assert_fail|255-247-102-233
43662|code|LDR             R0, =aCbAllocCbSize; "cb->alloc > cb->size"|44-72
43664|code|MOVW            R2, #0x6FD; line|64-242-253-98
43668|code|LDR             R1, =aCbufC; "cbuf.c"|23-73
43670|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|24-75
43672|code|BLX             __assert_fail|255-247-94-233
43676|code|LDR             R0, =aCbAlloc0; "cb->alloc > 0"|41-72
43678|code|MOVW            R2, #0x6FC; line|64-242-252-98
43682|code|LDR             R1, =aCbufC; "cbuf.c"|20-73
43684|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|20-75
43686|code|BLX             __assert_fail|255-247-88-233
43690|code|LDR             R0, =aMemcmpCbDataCb; "memcmp (cb->data + cb->size + 1, (void "...|39-72
43692|code|MOVW            R2, #0x6FA; line|64-242-250-98
43696|code|LDR             R1, =aCbufC; "cbuf.c"|16-73
43698|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|17-75
43700|code|BLX             __assert_fail|255-247-80-233
43704|code|LDR             R0, =aMemcmpCbDataSi; "memcmp (cb->data - (sizeof (unsigned lo"...|36-72
43706|code|MOV.W           R2, #0x6F8; line|79-244-223-98
43710|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
43712|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|13-75
43714|code|BLX             __assert_fail|255-247-74-233
43718|code|LDR             R0, =aCbMagic0xdeadb; "cb->magic == 0xDEADBEEF"|34-72
43720|code|MOVW            R2, #0x6F3; line|64-242-243-98
43724|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
43726|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|10-75
43728|code|BLX             __assert_fail|255-247-66-233
43732|code|LDR             R0, =aCbDataVoid0; "cb->data != ((void *)0)"|31-72
43734|code|MOVW            R2, #0x6F2; line|64-242-242-98
43738|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
43740|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|6-75
43742|code|BLX             __assert_fail|255-247-60-233
43746|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|29-72
43748|code|MOV.W           R2, #0x6F0; line|79-244-222-98
43752|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
43754|code|LDR             R3, =aCbufIsValid; "cbuf_is_valid"|3-75
43756|code|BLX             __assert_fail|255-247-52-233
43760|data|DCD aCbGotWrapCbIRe; "cb->got_wrap || !cb->i_rep"|240-125-1-0
43764|data|DCD aCbufC; "cbuf.c"|100-123-1-0
43768|data|DCD aCbufIsValid; "cbuf_is_valid"|12-121-1-0
43772|data|DCD aCbIRepCbIInCbI; "(cb->i_rep > cb->i_in) || (cb->i_rep <="...|132-126-1-0
43776|data|DCD aCbOverwriteCbu; "cb->overwrite == CBUF_NO_DROP || cb->ov"...|140-125-1-0
43780|data|DCD aCbIRepCbIInCbI_0; "(cb->i_rep > cb->i_in) && (cb->i_rep <="...|184-126-1-0
43784|data|DCD aCbSizeCbUsedNf; "cb->size - cb->used == nfree"|236-126-1-0
43788|data|DCD aCbMaxsize0; "cb->maxsize > 0"|84-125-1-0
43792|data|DCD aCbMinsize0; "cb->minsize > 0"|68-125-1-0
43796|data|DCD aCbSizeCbMaxsiz; "cb->size <= cb->maxsize"|44-125-1-0
43800|data|DCD aCbSizeCbMinsiz; "cb->size >= cb->minsize"|20-125-1-0
43804|data|DCD aCbUsedCbSize; "cb->used <= cb->size"|116-125-1-0
43808|data|DCD aCbUsed0; "cb->used >= 0"|100-125-1-0
43812|data|DCD aCbIRepCbSize; "cb->i_rep <= cb->size"|108-126-1-0
43816|data|DCD aCbIRep0; "cb->i_rep >= 0"|92-126-1-0
43820|data|DCD aCbIOutCbSize; "cb->i_out <= cb->size"|68-126-1-0
43824|data|DCD aCbIOut0; "cb->i_out >= 0"|52-126-1-0
43828|data|DCD aCbIInCbSize; "cb->i_in <= cb->size"|28-126-1-0
43832|data|DCD aCbIIn0; "cb->i_in >= 0"|12-126-1-0
43836|data|DCD unk_17D04|4-125-1-0
43840|data|DCD aCbAllocCbSize; "cb->alloc > cb->size"|236-124-1-0
43844|data|DCD aCbAlloc0; "cb->alloc > 0"|220-124-1-0
43848|data|DCD aMemcmpCbDataCb; "memcmp (cb->data + cb->size + 1, (void "...|132-124-1-0
43852|data|DCD aMemcmpCbDataSi; "memcmp (cb->data - (sizeof (unsigned lo"...|32-124-1-0
43856|data|DCD aCbMagic0xdeadb; "cb->magic == 0xDEADBEEF"|8-124-1-0
43860|data|DCD aCbDataVoid0; "cb->data != ((void *)0)"|240-123-1-0
43864|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
43868|code|PUSH            {R3-R7,LR}|248-181
43870|code|MOV             R4, R0|4-70
43872|code|CMP             R0, #0|0-40
43874|code|BEQ             loc_AC1C|91-208
43876|code|CMP             R1, #0|0-41
43878|code|BLE             loc_AC0E|82-221
43880|code|LDR             R5, [R0,#0x10]|5-105
43882|code|LDR             R3, [R0,#0xC]|195-104
43884|code|CMP             R5, R3|157-66
43886|code|BEQ             loc_ABE2|56-208
43888|code|LDR             R2, [R0,#4]|66-104
43890|code|SUBS            R7, R2, R5|87-27
43892|code|CMP             R7, #0|0-47
43894|code|BLE             loc_AC46|102-221
43896|code|ADDS            R1, R1, R2|137-24
43898|code|MOV             R0, #0x10624DD3|68-246-211-80-193-242-98-0
43906|code|ADDS            R3, R3, R7|219-25
43908|code|ASRS            R6, R1, #0x1F|206-23
43910|code|SMULL.W         LR, R0, R0, R1|128-251-1-224
43914|code|RSB.W           R0, R6, R0,ASR#6|198-235-160-16
43918|code|MOV.W           R6, #0x3E8|79-244-122-118
43922|code|MLS.W           R6, R6, R0, R1|6-251-16-22
43926|code|RSB.W           R6, R6, #0x3E8|198-245-122-118
43930|code|ADDS            R1, R6, R1|113-24
43932|code|CMP             R1, R3|153-66
43934|code|ITE LT|180-191
43936|code|MOVLT           R6, R1|14-70
43938|code|MOVGE           R6, R3|30-70
43940|code|CMP             R2, R6|178-66
43942|code|BGE             loc_AC38|71-218
43944|code|LDR             R0, [R4,#0x2C]|224-106
43946|code|MOV             R1, R6; size|49-70
43948|code|SUBS            R0, #4; ptr|4-56
43950|code|BLX             realloc|254-247-32-239
43954|code|CBZ             R0, locret_ABE4|184-177
43956|code|SUBS            R7, R6, R7|247-27
43958|code|ADDS            R3, R0, #4|3-29
43960|code|ADDS            R0, R7, #1|120-28
43962|code|STR             R3, [R4,#0x2C]|227-98
43964|code|ADDS            R0, R3, R0; dest|24-24
43966|code|MOV             R1, R4; src|33-70
43968|code|MOVS            R2, #4; n|4-34
43970|code|STR             R6, [R4,#4]|102-96
43972|code|STR             R7, [R4,#0x10]|39-97
43974|code|BLX             memcpy|254-247-234-238
43978|code|LDR             R1, [R4,#0x28]|161-106
43980|code|LDR             R3, [R4,#0x20]|35-106
43982|code|CMP             R1, R3|153-66
43984|code|BGT             loc_ABE6|9-220
43986|code|MOV             R0, R4; s2|32-70
43988|code|BL              sub_A8BC|255-247-114-254
43992|code|CMP             R0, #0|0-40
43994|code|BEQ             loc_AC2A|38-208
43996|code|LDR             R0, [R4,#0x10]|32-105
43998|code|SUBS            R0, R0, R5|64-27
44000|code|POP             {R3-R7,PC}|248-189
44002|code|MOVS            R0, #0|0-32
44004|code|POP             {R3-R7,PC}|248-189
44006|code|LDR             R6, [R4,#0x10]|38-105
44008|code|ADDS            R2, R5, #1|106-28
44010|code|SUBS            R2, R2, R1; n|82-26
44012|code|LDR             R0, [R4,#0x2C]|224-106
44014|code|ADDS            R6, #1|1-54
44016|code|SUBS            R6, R6, R2|182-26
44018|code|ADDS            R1, R0, R1; src|65-24
44020|code|ADDS            R0, R0, R6; dest|128-25
44022|code|BLX             memmove|254-247-178-238
44026|code|LDR             R2, [R4,#0x28]|162-106
44028|code|LDR             R3, [R4,#0x24]|99-106
44030|code|STR             R6, [R4,#0x28]|166-98
44032|code|CMP             R3, R2|147-66
44034|code|ITTT GE|162-191
44036|code|RSBGE.W         R2, R2, R6|194-235-6-2
44040|code|ADDGE           R3, R3, R2|155-24
44042|code|STRGE           R3, [R4,#0x24]|99-98
44044|code|B               loc_ABD2|225-231
44046|code|LDR             R0, =aN0; "n > 0"|17-72
44048|code|MOVW            R2, #0x681; line|64-242-129-98
44052|code|LDR             R1, =aCbufC; "cbuf.c"|16-73
44054|code|LDR             R3, =aCbufGrow; "cbuf_grow"|17-75
44056|code|BLX             __assert_fail|255-247-158-232
44060|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|16-72
44062|code|MOV.W           R2, #0x680; line|79-244-208-98
44066|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
44068|code|LDR             R3, =aCbufGrow; "cbuf_grow"|13-75
44070|code|BLX             __assert_fail|255-247-152-232
44074|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|14-72
44076|code|MOVW            R2, #0x6BB; line|64-242-187-98
44080|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
44082|code|LDR             R3, =aCbufGrow; "cbuf_grow"|10-75
44084|code|BLX             __assert_fail|255-247-144-232
44088|code|LDR             R0, =aMCbAlloc; "m > cb->alloc"|11-72
44090|code|MOV.W           R2, #0x690; line|79-244-210-98
44094|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
44096|code|LDR             R3, =aCbufGrow; "cbuf_grow"|6-75
44098|code|BLX             __assert_fail|255-247-138-232
44102|code|LDR             R0, =aSizeMeta0; "size_meta > 0"|9-72
44104|code|MOVW            R2, #0x689; line|64-242-137-98
44108|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
44110|code|LDR             R3, =aCbufGrow; "cbuf_grow"|3-75
44112|code|BLX             __assert_fail|255-247-130-232
44116|data|DCD aN0; "n > 0"|12-127-1-0
44120|data|DCD aCbufC; "cbuf.c"|100-123-1-0
44124|data|DCD aCbufGrow; "cbuf_grow"|28-121-1-0
44128|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
44132|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
44136|data|DCD aMCbAlloc; "m > cb->alloc"|36-127-1-0
44140|data|DCD aSizeMeta0; "size_meta > 0"|20-127-1-0
44144|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44148|code|MOV             R5, R0|5-70
44150|code|SUB             SP, SP, #0x14|133-176
44152|code|MOV             R4, R1|12-70
44154|code|CMP             R0, #0|0-40
44156|code|BEQ.W           loc_AE26|0-240-211-128
44160|code|CMP             R1, #0|0-41
44162|code|BEQ.W           loc_AE18|0-240-201-128
44166|code|CMP             R2, #0|0-42
44168|code|BLE.W           loc_AE0A|64-243-191-128
44172|code|LDR             R1, [R0,#0x14]|65-105
44174|code|CMP             R2, R1|138-66
44176|code|IT GE|168-191
44178|code|MOVGE           R2, R1|10-70
44180|code|STR             R2, [SP,#0x38+var_34]|1-146
44182|code|CMP             R2, #0|0-42
44184|code|BEQ.W           loc_ADC2|0-240-147-128
44188|code|LDR.W           R11, [R4,#0x10]|212-248-16-176
44192|code|LDR             R2, [R4,#0x14]|98-105
44194|code|LDR             R0, [SP,#0x38+var_34]|1-152
44196|code|RSB.W           R2, R2, R11|194-235-11-2
44200|code|STR             R2, [SP,#0x38+var_2C]|3-146
44202|code|CMP             R0, R2|144-66
44204|code|BLE             loc_ACB6|3-221
44206|code|LDR             R2, [R4,#0xC]|226-104
44208|code|CMP             R11, R2|147-69
44210|code|BLT.W           loc_ADE0|192-242-149-128
44214|code|LDR             R2, [R4,#0x18]|162-105
44216|code|CMP             R2, #0|0-42
44218|code|BNE.W           loc_ADCA|64-240-134-128
44222|code|LDR             R2, [R4,#0x14]|98-105
44224|code|LDR             R0, [SP,#0x38+var_34]|1-152
44226|code|RSB.W           R2, R2, R11|194-235-11-2
44230|code|CMP             R0, R2|144-66
44232|code|IT GE|168-191
44234|code|MOVGE           R0, R2|16-70
44236|code|STR             R0, [SP,#0x38+var_34]|1-144
44238|code|CMP             R0, #0|0-40
44240|code|BEQ.W           loc_ADFA|0-240-147-128
44244|code|CBZ             R3, loc_ACEA|75-177
44246|code|LDR             R1, [SP,#0x38+var_34]|1-153
44248|code|LDR             R2, [R4,#0x14]|98-105
44250|code|RSB.W           R11, R11, R1|203-235-1-11
44254|code|ADD             R2, R11|90-68
44256|code|BIC.W           R2, R2, R2,ASR#31|34-234-226-114
44260|code|STR             R2, [R3]|26-96
44262|code|LDR.W           R11, [R4,#0x10]|212-248-16-176
44266|code|LDR             R3, [SP,#0x38+var_34]|1-155
44268|code|LDR.W           R8, [R5,#0x24]|213-248-36-128
44272|code|CMP             R3, R11|91-69
44274|code|LDR             R7, [R4,#0x20]|39-106
44276|code|BLE             loc_ADDA|113-221
44278|code|LDR             R1, [R5,#0x10]|41-105
44280|code|RSB.W           R0, R11, R3|203-235-3-0
44284|code|ADD             R0, R8|64-68
44286|code|STR.W           R11, [SP,#0x38+n]|205-248-8-176
44290|code|ADDS            R1, #1|1-49
44292|code|BL              sub_174E4|12-240-238-251
44296|code|MOV             R8, R1|136-70
44298|code|LDR             R3, [SP,#0x38+n]|2-155
44300|code|CMP             R3, #0|0-43
44302|code|BLE             loc_ADC2|88-221
44304|code|LDR             R3, [R5,#0x10]|43-105
44306|code|ADD.W           R6, R11, #1|11-241-1-6
44310|code|LDR.W           R9, [SP,#0x38+n]|221-248-8-144
44314|code|ADD.W           R10, R3, #1|3-241-1-10
44318|code|RSB.W           R10, R8, R10|200-235-10-10
44322|code|SUBS            R6, R6, R7|246-27
44324|code|CMP             R10, R6|178-69
44326|code|IT LT|184-191
44328|code|MOVLT           R6, R10|86-70
44330|code|LDR             R0, [R4,#0x2C]|224-106
44332|code|CMP             R6, R9|78-69
44334|code|IT GE|168-191
44336|code|MOVGE           R6, R9|78-70
44338|code|LDR             R1, [R5,#0x2C]|233-106
44340|code|ADDS            R0, R0, R7; dest|192-25
44342|code|RSB.W           R9, R6, R9|198-235-9-9
44346|code|MOV             R2, R6; n|50-70
44348|code|ADD             R1, R8; src|65-68
44350|code|BLX             memcpy|254-247-46-238
44354|code|LDR             R3, [R5,#0x10]|43-105
44356|code|ADD.W           R0, R8, R6|8-235-6-0
44360|code|ADD.W           R10, R3, #1|3-241-1-10
44364|code|MOV             R1, R10|81-70
44366|code|BL              sub_174E4|12-240-201-251
44370|code|LDR.W           R11, [R4,#0x10]|212-248-16-176
44374|code|ADDS            R0, R7, R6|184-25
44376|code|ADD.W           R6, R11, #1|11-241-1-6
44380|code|MOV             R8, R1|136-70
44382|code|MOV             R1, R6|49-70
44384|code|BL              sub_174E4|12-240-192-251
44388|code|CMP.W           R9, #0|185-241-0-15
44392|code|MOV             R7, R1|15-70
44394|code|BGT             loc_AD1E|216-220
44396|code|LDR             R2, [SP,#0x38+n]|2-154
44398|code|MOV             R1, R6|49-70
44400|code|LDR             R3, [R4,#0x14]|99-105
44402|code|LDR             R0, [R4,#0x20]|32-106
44404|code|ADDS            R3, R2, R3|211-24
44406|code|CMP             R11, R3|155-69
44408|code|ITE LE|212-191
44410|code|STRLE.W         R11, [R4,#0x14]|196-248-20-176
44414|code|STRGT           R3, [R4,#0x14]|99-97
44416|code|ADDS            R0, R2, R0|16-24
44418|code|LDR             R5, [R4,#0x24]|101-106
44420|code|BL              sub_174E4|12-240-174-251
44424|code|LDR.W           R8, [R4,#0x28]|212-248-40-128
44428|code|CMP             R1, R7|185-66
44430|code|BNE             loc_AE34|81-209
44432|code|RSB.W           R5, R8, R5|200-235-5-5
44436|code|STR             R7, [R4,#0x20]|39-98
44438|code|ADDS            R0, R5, R6|168-25
44440|code|MOV             R1, R6|49-70
44442|code|BL              sub_174E4|12-240-163-251
44446|code|LDR             R3, [SP,#0x38+var_2C]|3-155
44448|code|SUBS            R1, R3, R1|89-26
44450|code|LDR             R3, [SP,#0x38+n]|2-155
44452|code|CMP             R3, R1|139-66
44454|code|BLE             loc_ADB6|6-221
44456|code|MOVS            R3, #1|1-35
44458|code|ADDS            R0, R7, #1|120-28
44460|code|MOV             R1, R6|49-70
44462|code|STR             R3, [R4,#0x1C]|227-97
44464|code|BL              sub_174E4|12-240-152-251
44468|code|STR             R1, [R4,#0x28]|161-98
44470|code|LDR             R3, [SP,#0x38+n]|2-155
44472|code|LDR             R0, [SP,#0x38+var_2C]|3-152
44474|code|CMP             R3, R0|131-66
44476|code|ITT GT|196-191
44478|code|LDRGT           R3, [R4,#0x28]|163-106
44480|code|STRGT           R3, [R4,#0x24]|99-98
44482|code|LDR             R0, [SP,#0x38+var_34]|1-152
44484|code|ADD             SP, SP, #0x14|5-176
44486|code|POP.W           {R4-R11,PC}|189-232-240-143
44490|code|CMP             R2, #1|1-42
44492|code|BNE             loc_ACD4|130-209
44494|code|LDR             R0, [SP,#0x38+var_34]|1-152
44496|code|CMP             R0, R11|88-69
44498|code|IT GE|168-191
44500|code|MOVGE           R0, R11|88-70
44502|code|STR             R0, [SP,#0x38+var_34]|1-144
44504|code|B               loc_ACD4|124-231
44506|code|LDR             R3, [SP,#0x38+var_34]|1-155
44508|code|STR             R3, [SP,#0x38+n]|2-147
44510|code|B               loc_AD0A|148-231
44512|code|LDR             R2, [SP,#0x38+var_2C]|3-154
44514|code|STR             R3, [SP,#0x38+var_38]|0-147
44516|code|SUBS            R1, R0, R2|129-26
44518|code|MOV             R0, R4|32-70
44520|code|BL              sub_AB5C|255-247-184-254
44524|code|LDR             R1, [SP,#0x38+var_2C]|3-153
44526|code|LDR.W           R11, [R4,#0x10]|212-248-16-176
44530|code|LDR             R3, [SP,#0x38+var_38]|0-155
44532|code|ADDS            R1, R1, R0|9-24
44534|code|STR             R1, [SP,#0x38+var_2C]|3-145
44536|code|B               loc_ACB6|93-231
44538|code|BLX             __errno_location|254-247-212-238
44542|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
44546|code|STR             R3, [SP,#0x38+var_34]|1-147
44548|code|MOVS            R3, #0x1C|28-35
44550|code|STR             R3, [R0]|3-96
44552|code|B               loc_ADC2|219-231
44554|code|LDR             R0, =aLen0; "len > 0"|14-72
44556|code|MOVW            R2, #0x549; line|64-242-73-82
44560|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
44562|code|LDR             R3, =aCbufCopier; "cbuf_copier"|14-75
44564|code|BLX             __assert_fail|254-247-160-239
44568|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|13-72
44570|code|MOV.W           R2, #0x548; line|79-244-169-98
44574|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
44576|code|LDR             R3, =aCbufCopier; "cbuf_copier"|10-75
44578|code|BLX             __assert_fail|254-247-154-239
44582|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|11-72
44584|code|MOVW            R2, #0x547; line|64-242-71-82
44588|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
44590|code|LDR             R3, =aCbufCopier; "cbuf_copier"|7-75
44592|code|BLX             __assert_fail|254-247-146-239
44596|code|LDR             R0, =aIDstDstIInNcop; "i_dst == (dst->i_in + ncopy) % (dst->si"...|8-72
44598|code|MOVW            R2, #0x585; line|64-242-133-82
44602|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
44604|code|LDR             R3, =aCbufCopier; "cbuf_copier"|3-75
44606|code|BLX             __assert_fail|254-247-140-239
44610|data|ALIGN 4|0-191
44612|data|DCD aLen0; "len > 0"|108-123-1-0
44616|data|DCD aCbufC; "cbuf.c"|100-123-1-0
44620|data|DCD aCbufCopier; "cbuf_copier"|40-121-1-0
44624|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
44628|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
44632|data|DCD aIDstDstIInNcop; "i_dst == (dst->i_in + ncopy) % (dst->si"...|72-127-1-0
44636|code|PUSH.W          {R4-R11,LR}|45-233-240-79
44640|code|MOV             R4, R0|4-70
44642|code|SUB             SP, SP, #0xC|131-176
44644|code|MOV             R6, R1|14-70
44646|code|MOV             R5, R2|21-70
44648|code|MOV             R8, R3|152-70
44650|code|CMP             R0, #0|0-40
44652|code|BEQ.W           loc_AFFC|0-240-198-128
44656|code|CMP             R1, #0|0-41
44658|code|BLE.W           loc_AFEE|64-243-188-128
44662|code|CMP             R2, #0|0-42
44664|code|BEQ.W           loc_AFD2|0-240-171-128
44668|code|CMP             R3, #0|0-43
44670|code|BEQ.W           loc_AFC4|0-240-161-128
44674|code|LDR             R3, [R0,#0x10]|3-105
44676|code|LDR             R2, [R0,#0x14]|66-105
44678|code|SUBS            R2, R3, R2|154-26
44680|code|STR             R2, [SP,#0x30+var_2C]|1-146
44682|code|CMP             R1, R2|145-66
44684|code|BLE             loc_AE94|2-221
44686|code|LDR             R2, [R0,#0xC]|194-104
44688|code|CMP             R3, R2|147-66
44690|code|BLT             loc_AF8C|123-219
44692|code|LDR             R2, [R4,#0x18]|162-105
44694|code|CMP             R2, #0|0-42
44696|code|BNE             loc_AF7A|111-209
44698|code|LDR             R2, [R4,#0x14]|98-105
44700|code|RSB.W           R10, R2, R3|194-235-3-10
44704|code|CMP             R10, R6|178-69
44706|code|IT GE|168-191
44708|code|MOVGE           R10, R6|178-70
44710|code|CMP.W           R10, #0|186-241-0-15
44714|code|BEQ.W           loc_AFB6|0-240-132-128
44718|code|CMP.W           R10, #0|186-241-0-15
44722|code|LDR             R7, [R4,#0x20]|39-106
44724|code|BLE             loc_AFAE|123-221
44726|code|MOV             R6, R10|86-70
44728|code|B               loc_AEC0|2-224
44730|code|CMP             R6, #0|0-46
44732|code|BLE             loc_AF84|98-221
44734|code|LDR             R3, [R4,#0x10]|35-105
44736|code|ADD.W           R9, R3, #1|3-241-1-9
44740|code|LDR             R0, [R4,#0x2C]|224-106
44742|code|RSB.W           R9, R7, R9|199-235-9-9
44746|code|MOV             R1, R8|65-70
44748|code|CMP             R9, R6|177-69
44750|code|IT GE|168-191
44752|code|MOVGE           R9, R6|177-70
44754|code|ADDS            R0, R0, R7|192-25
44756|code|MOV             R2, R9|74-70
44758|code|BLX             R5|168-71
44760|code|CMP             R0, #0|0-40
44762|code|MOV             R11, R0|131-70
44764|code|BLE             loc_AEEE|7-221
44766|code|LDR             R1, [R4,#0x10]|33-105
44768|code|ADDS            R0, R7, R0|56-24
44770|code|RSB.W           R6, R11, R6|203-235-6-6
44774|code|ADDS            R1, #1|1-49
44776|code|BL              sub_174E4|12-240-252-250
44780|code|MOV             R7, R1|15-70
44782|code|CMP             R9, R11|217-69
44784|code|BEQ             loc_AEBA|227-208
44786|code|RSB.W           R5, R6, R10|198-235-10-5
44790|code|LSRS            R6, R5, #0x1F|238-15
44792|code|CMP             R5, R10|85-69
44794|code|IT GT|200-191
44796|code|ORRGT.W         R6, R6, #1|70-240-1-6
44800|code|CMP             R6, #0|0-46
44802|code|BNE             loc_AFE0|109-209
44804|code|CMP             R5, #0|0-45
44806|code|BEQ             loc_AF72|52-208
44808|code|BLE             loc_AF5E|41-221
44810|code|LDR             R3, [R4,#0x10]|35-105
44812|code|LDR             R2, [R4,#0x14]|98-105
44814|code|ADDS            R6, R3, #1|94-28
44816|code|LDR             R0, [R4,#0x20]|32-106
44818|code|ADDS            R2, R5, R2|170-24
44820|code|CMP             R2, R3|154-66
44822|code|ITE LE|212-191
44824|code|STRLE           R2, [R4,#0x14]|98-97
44826|code|STRGT           R3, [R4,#0x14]|99-97
44828|code|ADDS            R0, R5, R0|40-24
44830|code|MOV             R1, R6|49-70
44832|code|BL              sub_174E4|12-240-224-250
44836|code|LDR.W           R8, [R4,#0x24]|212-248-36-128
44840|code|LDR             R0, [R4,#0x28]|160-106
44842|code|CMP             R1, R7|185-66
44844|code|BNE             loc_B00A|109-209
44846|code|RSB.W           R8, R0, R8|192-235-8-8
44850|code|STR             R7, [R4,#0x20]|39-98
44852|code|ADD.W           R0, R8, R6|8-235-6-0
44856|code|MOV             R1, R6|49-70
44858|code|BL              sub_174E4|12-240-211-250
44862|code|LDR             R3, [SP,#0x30+var_2C]|1-155
44864|code|SUBS            R1, R3, R1|89-26
44866|code|CMP             R1, R5|169-66
44868|code|BGE             loc_AF54|6-218
44870|code|MOVS            R3, #1|1-35
44872|code|ADDS            R0, R7, #1|120-28
44874|code|MOV             R1, R6|49-70
44876|code|STR             R3, [R4,#0x1C]|227-97
44878|code|BL              sub_174E4|12-240-201-250
44882|code|STR             R1, [R4,#0x28]|161-98
44884|code|LDR             R3, [SP,#0x30+var_2C]|1-155
44886|code|CMP             R3, R5|171-66
44888|code|ITT LT|188-191
44890|code|LDRLT           R3, [R4,#0x28]|163-106
44892|code|STRLT           R3, [R4,#0x24]|99-98
44894|code|LDR             R3, [SP,#0x30+arg_0]|12-155
44896|code|MOV             R11, R5|171-70
44898|code|CBZ             R3, loc_AF72|51-177
44900|code|LDR             R2, [SP,#0x30+var_2C]|1-154
44902|code|MOV             R11, R5|171-70
44904|code|SUBS            R3, R5, R2|171-26
44906|code|LDR             R2, [SP,#0x30+arg_0]|12-154
44908|code|BIC.W           R3, R3, R3,ASR#31|35-234-227-115
44912|code|STR             R3, [R2]|19-96
44914|code|MOV             R0, R11|88-70
44916|code|ADD             SP, SP, #0xC|3-176
44918|code|POP.W           {R4-R11,PC}|189-232-240-143
44922|code|CMP             R2, #1|1-42
44924|code|BEQ             loc_AFA4|18-208
44926|code|LDR             R7, [R4,#0x20]|39-106
44928|code|MOV             R10, R6|178-70
44930|code|B               loc_AEB6|152-231
44932|code|RSB.W           R5, R6, R10|198-235-10-5
44936|code|MOVS            R6, #0|0-38
44938|code|B               loc_AEF8|181-231
44940|code|LDR             R3, [SP,#0x30+var_2C]|1-155
44942|code|SUBS            R1, R1, R3|201-26
44944|code|BL              sub_AB5C|255-247-228-253
44948|code|LDR             R2, [SP,#0x30+var_2C]|1-154
44950|code|LDR             R3, [R4,#0x10]|35-105
44952|code|ADDS            R2, R2, R0|18-24
44954|code|STR             R2, [SP,#0x30+var_2C]|1-146
44956|code|LDR             R2, [R4,#0x18]|162-105
44958|code|CMP             R2, #0|0-42
44960|code|BNE             loc_AF7A|235-209
44962|code|B               loc_AE9A|122-231
44964|code|CMP             R3, R6|179-66
44966|code|ITE LT|180-191
44968|code|MOVLT           R10, R3|154-70
44970|code|MOVGE           R10, R6|178-70
44972|code|B               loc_AEAE|127-231
44974|code|MOVS            R6, #0|0-38
44976|code|MOV             R5, R6|53-70
44978|code|MOV             R11, R6|179-70
44980|code|B               loc_AEF8|160-231
44982|code|BLX             __errno_location|254-247-246-237
44986|code|MOV.W           R11, #0xFFFFFFFF|79-240-255-59
44990|code|MOVS            R3, #0x1C|28-35
44992|code|STR             R3, [R0]|3-96
44994|code|B               loc_AF72|214-231
44996|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|20-72
44998|code|MOVW            R2, #0x62E; line|64-242-46-98
45002|code|LDR             R1, =aCbufC; "cbuf.c"|20-73
45004|code|LDR             R3, =aCbufWriter; "cbuf_writer"|20-75
45006|code|BLX             __assert_fail|254-247-196-238
45010|code|LDR             R0, =aGetfVoid0; "getf != ((void *)0)"|20-72
45012|code|MOVW            R2, #0x62D; line|64-242-45-98
45016|code|LDR             R1, =aCbufC; "cbuf.c"|16-73
45018|code|LDR             R3, =aCbufWriter; "cbuf_writer"|17-75
45020|code|BLX             __assert_fail|254-247-188-238
45024|code|LDR             R0, =aN0NLen; "(n >= 0) && (n <= len)"|17-72
45026|code|MOV.W           R2, #0x658; line|79-244-203-98
45030|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
45032|code|LDR             R3, =aCbufWriter; "cbuf_writer"|13-75
45034|code|BLX             __assert_fail|254-247-182-238
45038|code|LDR             R0, =aLen0; "len > 0"|15-72
45040|code|MOVW            R2, #0x62C; line|64-242-44-98
45044|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
45046|code|LDR             R3, =aCbufWriter; "cbuf_writer"|10-75
45048|code|BLX             __assert_fail|254-247-174-238
45052|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|12-72
45054|code|MOVW            R2, #0x62B; line|64-242-43-98
45058|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
45060|code|LDR             R3, =aCbufWriter; "cbuf_writer"|6-75
45062|code|BLX             __assert_fail|254-247-168-238
45066|code|LDR             R0, =aIDstDstIInNDst; "i_dst == (dst->i_in + n) % (dst->size +"...|10-72
45068|code|MOVW            R2, #0x664; line|64-242-100-98
45072|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
45074|code|LDR             R3, =aCbufWriter; "cbuf_writer"|3-75
45076|code|BLX             __assert_fail|254-247-160-238
45080|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
45084|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45088|data|DCD aCbufWriter; "cbuf_writer"|52-121-1-0
45092|data|DCD aGetfVoid0; "getf != ((void *)0)"|120-127-1-0
45096|data|DCD aN0NLen; "(n >= 0) && (n <= len)"|156-123-1-0
45100|data|DCD aLen0; "len > 0"|108-123-1-0
45104|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
45108|data|DCD aIDstDstIInNDst; "i_dst == (dst->i_in + n) % (dst->size +"...|140-127-1-0
45112|code|PUSH            {R3-R7,LR}|248-181
45114|code|MOV             R4, R0|4-70
45116|code|MOV             R5, R1|13-70
45118|code|CMP             R0, #0|0-40
45120|code|BEQ             loc_B0A2|47-208
45122|code|CMP             R1, #0|0-41
45124|code|BLE             loc_B094|38-221
45126|code|LDR             R7, [R0,#0x14]|71-105
45128|code|CMP             R1, R7|185-66
45130|code|BGT             loc_B086|28-220
45132|code|LDR             R6, [R0,#0x10]|6-105
45134|code|SUBS            R7, R7, R1|127-26
45136|code|LDR             R0, [R0,#0x24]|64-106
45138|code|ADDS            R1, R6, #1|113-28
45140|code|STR             R7, [R4,#0x14]|103-97
45142|code|ADDS            R0, R5, R0|40-24
45144|code|SUBS            R7, R6, R7|247-27
45146|code|BL              sub_174E4|12-240-67-250
45150|code|CMP.W           R7, #0x3E8|183-245-122-127
45154|code|STR             R1, [R4,#0x24]|97-98
45156|code|BLE             loc_B074|6-221
45158|code|LDR             R3, [R4,#8]|163-104
45160|code|CMP             R6, R3|158-66
45162|code|BLE             loc_B074|3-221
45164|code|MOV             R0, R4; s2|32-70
45166|code|BL              sub_A8BC|255-247-37-252
45170|code|CBZ             R0, loc_B078|8-177
45172|code|MOV             R0, R5|40-70
45174|code|POP             {R3-R7,PC}|248-189
45176|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|13-72
45178|code|MOVW            R2, #0x6C7; line|64-242-199-98
45182|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
45184|code|LDR             R3, =aCbufShrink; "cbuf_shrink"|13-75
45186|code|BLX             __assert_fail|254-247-106-238
45190|code|LDR             R0, =aLenCbUsed; "len <= cb->used"|13-72
45192|code|MOVW            R2, #0x59B; line|64-242-155-82
45196|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
45198|code|LDR             R3, =aCbufDropper; "cbuf_dropper"|12-75
45200|code|BLX             __assert_fail|254-247-98-238
45204|code|LDR             R0, =aLen0; "len > 0"|11-72
45206|code|MOVW            R2, #0x59A; line|64-242-154-82
45210|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
45212|code|LDR             R3, =aCbufDropper; "cbuf_dropper"|8-75
45214|code|BLX             __assert_fail|254-247-92-238
45218|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|9-72
45220|code|MOVW            R2, #0x599; line|64-242-153-82
45224|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
45226|code|LDR             R3, =aCbufDropper; "cbuf_dropper"|5-75
45228|code|BLX             __assert_fail|254-247-84-238
45232|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
45236|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45240|data|DCD aCbufShrink; "cbuf_shrink"|80-121-1-0
45244|data|DCD aLenCbUsed; "len <= cb->used"|184-127-1-0
45248|data|DCD aCbufDropper; "cbuf_dropper"|64-121-1-0
45252|data|DCD aLen0; "len > 0"|108-123-1-0
45256|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
45260|code|PUSH            {R3-R7,LR}|248-181
45262|code|MOV             R4, R0|4-70
45264|code|MOV             R6, R1|14-70
45266|code|MOV             R5, R2|21-70
45268|code|CBZ             R0, loc_B104|176-177
45270|code|CMP             R1, #0|0-41
45272|code|BEQ             loc_B12E|41-208
45274|code|LDR             R0, [R1]|8-104
45276|code|CMP             R0, #0|0-40
45278|code|BLT             loc_B120|31-219
45280|code|CMP             R2, #0|0-42
45282|code|BGT             loc_B0E8|1-220
45284|code|B               loc_B112|21-224
45286|code|LDR             R0, [R6]; fd|48-104
45288|code|MOV             R1, R4; buf|33-70
45290|code|MOV             R2, R5; nbytes|42-70
45292|code|BLX             read|254-247-42-236
45296|code|CMP             R0, #0|0-40
45298|code|MOV             R7, R0|7-70
45300|code|BGE             loc_B100|4-218
45302|code|BLX             __errno_location|254-247-86-237
45306|code|LDR             R3, [R0]|3-104
45308|code|CMP             R3, #4|4-43
45310|code|BEQ             loc_B0E6|242-208
45312|code|MOV             R0, R7|56-70
45314|code|POP             {R3-R7,PC}|248-189
45316|code|LDR             R0, =aDstbufVoid0; "dstbuf != ((void *)0)"|13-72
45318|code|MOVW            R2, #0x4FA; line|64-242-250-66
45322|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
45324|code|LDR             R3, =aCbufGetFd; "cbuf_get_fd"|13-75
45326|code|BLX             __assert_fail|254-247-36-238
45330|code|LDR             R0, =aLen0; "len > 0"|13-72
45332|code|MOVW            R2, #0x4FD; line|64-242-253-66
45336|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
45338|code|LDR             R3, =aCbufGetFd; "cbuf_get_fd"|10-75
45340|code|BLX             __assert_fail|254-247-28-238
45344|code|LDR             R0, =aPsrcfd0; "*psrcfd >= 0"|10-72
45346|code|MOVW            R2, #0x4FC; line|64-242-252-66
45350|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
45352|code|LDR             R3, =aCbufGetFd; "cbuf_get_fd"|6-75
45354|code|BLX             __assert_fail|254-247-22-238
45358|code|LDR             R0, =aPsrcfdVoid0; "psrcfd != ((void *)0)"|8-72
45360|code|MOVW            R2, #0x4FB; line|64-242-251-66
45364|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
45366|code|LDR             R3, =aCbufGetFd; "cbuf_get_fd"|3-75
45368|code|BLX             __assert_fail|254-247-14-238
45372|data|DCD aDstbufVoid0; "dstbuf != ((void *)0)"|200-127-1-0
45376|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45380|data|DCD aCbufGetFd; "cbuf_get_fd"|92-121-1-0
45384|data|DCD aLen0; "len > 0"|108-123-1-0
45388|data|DCD aPsrcfd0; "*psrcfd >= 0"|248-127-1-0
45392|data|DCD aPsrcfdVoid0; "psrcfd != ((void *)0)"|224-127-1-0
45396|code|PUSH            {R3-R7,LR}|248-181
45398|code|MOV             R4, R0|4-70
45400|code|MOV             R6, R1|14-70
45402|code|MOV             R5, R2|21-70
45404|code|CBZ             R0, loc_B18C|176-177
45406|code|CMP             R1, #0|0-41
45408|code|BEQ             loc_B1B6|41-208
45410|code|LDR             R0, [R1]|8-104
45412|code|CMP             R0, #0|0-40
45414|code|BLT             loc_B1A8|31-219
45416|code|CMP             R2, #0|0-42
45418|code|BGT             loc_B170|1-220
45420|code|B               loc_B19A|21-224
45422|code|LDR             R0, [R6]; fd|48-104
45424|code|MOV             R1, R4; buf|33-70
45426|code|MOV             R2, R5; n|42-70
45428|code|BLX             write|254-247-82-237
45432|code|CMP             R0, #0|0-40
45434|code|MOV             R7, R0|7-70
45436|code|BGE             loc_B188|4-218
45438|code|BLX             __errno_location|254-247-18-237
45442|code|LDR             R3, [R0]|3-104
45444|code|CMP             R3, #4|4-43
45446|code|BEQ             loc_B16E|242-208
45448|code|MOV             R0, R7|56-70
45450|code|POP             {R3-R7,PC}|248-189
45452|code|LDR             R0, =aSrcbufVoid0; "srcbuf != ((void *)0)"|13-72
45454|code|MOV.W           R2, #0x520; line|79-244-164-98
45458|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
45460|code|LDR             R3, =aCbufPutFd; "cbuf_put_fd"|13-75
45462|code|BLX             __assert_fail|254-247-224-237
45466|code|LDR             R0, =aLen0; "len > 0"|13-72
45468|code|MOVW            R2, #0x523; line|64-242-35-82
45472|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
45474|code|LDR             R3, =aCbufPutFd; "cbuf_put_fd"|10-75
45476|code|BLX             __assert_fail|254-247-216-237
45480|code|LDR             R0, =aPdstfd0; "*pdstfd >= 0"|10-72
45482|code|MOVW            R2, #0x522; line|64-242-34-82
45486|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
45488|code|LDR             R3, =aCbufPutFd; "cbuf_put_fd"|6-75
45490|code|BLX             __assert_fail|254-247-210-237
45494|code|LDR             R0, =aPdstfdVoid0; "pdstfd != ((void *)0)"|8-72
45496|code|MOVW            R2, #0x521; line|64-242-33-82
45500|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
45502|code|LDR             R3, =aCbufPutFd; "cbuf_put_fd"|3-75
45504|code|BLX             __assert_fail|254-247-202-237
45508|data|DCD aSrcbufVoid0; "srcbuf != ((void *)0)"|8-128-1-0
45512|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45516|data|DCD aCbufPutFd; "cbuf_put_fd"|104-121-1-0
45520|data|DCD aLen0; "len > 0"|108-123-1-0
45524|data|DCD aPdstfd0; "*pdstfd >= 0"|56-128-1-0
45528|data|DCD aPdstfdVoid0; "pdstfd != ((void *)0)"|32-128-1-0
45532|code|PUSH            {R3-R5,LR}|56-181
45534|code|MOV             R4, R1|12-70
45536|code|MOV             R5, R2|21-70
45538|code|CBZ             R0, loc_B1FC|88-177
45540|code|CBZ             R1, loc_B226|249-177
45542|code|LDR             R1, [R1]; src|9-104
45544|code|CBZ             R1, loc_B218|177-177
45546|code|CMP             R2, #0|0-42
45548|code|BLE             loc_B20A|13-221
45550|code|BLX             memcpy|254-247-214-235
45554|code|LDR             R3, [R4]|35-104
45556|code|MOV             R0, R5|40-70
45558|code|ADDS            R3, R3, R5|91-25
45560|code|STR             R3, [R4]|35-96
45562|code|POP             {R3-R5,PC}|56-189
45564|code|LDR             R0, =aDstbufVoid0; "dstbuf != ((void *)0)"|13-72
45566|code|MOVW            R2, #0x50C; line|64-242-12-82
45570|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
45572|code|LDR             R3, =aCbufGetMem; "cbuf_get_mem"|13-75
45574|code|BLX             __assert_fail|254-247-168-237
45578|code|LDR             R0, =aLen0; "len > 0"|13-72
45580|code|MOVW            R2, #0x50F; line|64-242-15-82
45584|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
45586|code|LDR             R3, =aCbufGetMem; "cbuf_get_mem"|10-75
45588|code|BLX             __assert_fail|254-247-160-237
45592|code|LDR             R0, =aPsrcbufVoid0; "*psrcbuf != ((void *)0)"|10-72
45594|code|MOVW            R2, #0x50E; line|64-242-14-82
45598|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
45600|code|LDR             R3, =aCbufGetMem; "cbuf_get_mem"|6-75
45602|code|BLX             __assert_fail|254-247-154-237
45606|code|LDR             R0, =aPsrcbufVoid0_0; "psrcbuf != ((void *)0)"|8-72
45608|code|MOVW            R2, #0x50D; line|64-242-13-82
45612|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
45614|code|LDR             R3, =aCbufGetMem; "cbuf_get_mem"|3-75
45616|code|BLX             __assert_fail|254-247-146-237
45620|data|DCD aDstbufVoid0; "dstbuf != ((void *)0)"|200-127-1-0
45624|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45628|data|DCD aCbufGetMem; "cbuf_get_mem"|116-121-1-0
45632|data|DCD aLen0; "len > 0"|108-123-1-0
45636|data|DCD aPsrcbufVoid0; "*psrcbuf != ((void *)0)"|96-128-1-0
45640|data|DCD aPsrcbufVoid0_0; "psrcbuf != ((void *)0)"|72-128-1-0
45644|code|PUSH            {R3-R5,LR}|56-181
45646|code|MOV             R3, R0|3-70
45648|code|MOV             R4, R1|12-70
45650|code|MOV             R5, R2|21-70
45652|code|CBZ             R0, loc_B270|96-177
45654|code|CBZ             R1, loc_B29A|1-179
45656|code|LDR             R0, [R1]; dest|8-104
45658|code|CBZ             R0, loc_B28C|184-177
45660|code|CMP             R2, #0|0-42
45662|code|BLE             loc_B27E|14-221
45664|code|MOV             R1, R3; src|25-70
45666|code|BLX             memcpy|254-247-156-235
45670|code|LDR             R3, [R4]|35-104
45672|code|MOV             R0, R5|40-70
45674|code|ADDS            R3, R3, R5|91-25
45676|code|STR             R3, [R4]|35-96
45678|code|POP             {R3-R5,PC}|56-189
45680|code|LDR             R0, =aSrcbufVoid0; "srcbuf != ((void *)0)"|13-72
45682|code|MOVW            R2, #0x532; line|64-242-50-82
45686|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
45688|code|LDR             R3, =aCbufPutMem; "cbuf_put_mem"|13-75
45690|code|BLX             __assert_fail|254-247-110-237
45694|code|LDR             R0, =aLen0; "len > 0"|13-72
45696|code|MOVW            R2, #0x535; line|64-242-53-82
45700|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
45702|code|LDR             R3, =aCbufPutMem; "cbuf_put_mem"|10-75
45704|code|BLX             __assert_fail|254-247-102-237
45708|code|LDR             R0, =aPdstbufVoid0; "*pdstbuf != ((void *)0)"|10-72
45710|code|MOVW            R2, #0x534; line|64-242-52-82
45714|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
45716|code|LDR             R3, =aCbufPutMem; "cbuf_put_mem"|6-75
45718|code|BLX             __assert_fail|254-247-96-237
45722|code|LDR             R0, =aPdstbufVoid0_0; "pdstbuf != ((void *)0)"|8-72
45724|code|MOVW            R2, #0x533; line|64-242-51-82
45728|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
45730|code|LDR             R3, =aCbufPutMem; "cbuf_put_mem"|3-75
45732|code|BLX             __assert_fail|254-247-88-237
45736|data|DCD aSrcbufVoid0; "srcbuf != ((void *)0)"|8-128-1-0
45740|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45744|data|DCD aCbufPutMem; "cbuf_put_mem"|132-121-1-0
45748|data|DCD aLen0; "len > 0"|108-123-1-0
45752|data|DCD aPdstbufVoid0; "*pdstbuf != ((void *)0)"|144-128-1-0
45756|data|DCD aPdstbufVoid0_0; "pdstbuf != ((void *)0)"|120-128-1-0
45760|code|CMP             R0, #0|0-40
45762|code|PUSH.W          {R4-R8,LR}|45-233-240-65
45766|code|MOV             R5, R0|5-70
45768|code|MOV             R7, R1|15-70
45770|code|BLE             loc_B354|67-221
45772|code|MOVS            R0, #0x30 ; '0'; size|48-32
45774|code|BLX             malloc|254-247-252-235
45778|code|MOV             R4, R0|4-70
45780|code|MOV             R6, R0|6-70
45782|code|CMP             R0, #0|0-40
45784|code|BEQ             loc_B33E|49-208
45786|code|ADD.W           R0, R5, #9; size|5-241-9-0
45790|code|STR             R0, [R4,#4]|96-96
45792|code|BLX             malloc|254-247-242-235
45796|code|ADD.W           R8, R5, #1|5-241-1-8
45800|code|MOV             LR, R0|134-70
45802|code|STR             R0, [R4,#0x2C]|224-98
45804|code|CMP             R0, #0|0-40
45806|code|BEQ             loc_B360|55-208
45808|code|ADD.W           R12, R0, #4|0-241-4-12
45812|code|MOVS            R3, #0|0-35
45814|code|CMP             R7, R5|175-66
45816|code|ITE GE|172-191
45818|code|STRGE           R7, [R4,#0xC]|231-96
45820|code|STRLT           R5, [R4,#0xC]|229-96
45822|code|MOV             R1, R4; src|33-70
45824|code|STR             R5, [R4,#8]|165-96
45826|code|ADD.W           R0, R12, R8; dest|12-235-8-0
45830|code|STR             R5, [R4,#0x10]|37-97
45832|code|MOVS            R2, #4; n|4-34
45834|code|STR             R3, [R4,#0x14]|99-97
45836|code|MOVW            R5, #0xBEEF|75-246-239-101
45840|code|STR             R3, [R4,#0x1C]|227-97
45842|code|MOVT.W          R5, #0xDEAD|205-246-173-101
45846|code|STR             R3, [R4,#0x28]|163-98
45848|code|MOVS            R7, #2|2-39
45850|code|STR             R3, [R4,#0x24]|99-98
45852|code|STR             R7, [R4,#0x18]|167-97
45854|code|STR             R3, [R4,#0x20]|35-98
45856|code|STR.W           R12, [R4,#0x2C]|196-248-44-192
45860|code|STR             R5, [R4]|37-96
45862|code|STR.W           R5, [LR]|206-248-0-80
45866|code|BLX             memcpy|254-247-56-235
45870|code|MOV             R0, R4; s2|32-70
45872|code|BL              sub_A8BC|255-247-196-250
45876|code|CMP             R0, #0|0-40
45878|code|BEQ             loc_B37C|33-208
45880|code|MOV             R0, R6|48-70
45882|code|POP.W           {R4-R8,PC}|189-232-240-129
45886|code|BLX             __errno_location|254-247-50-236
45890|code|MOVS            R3, #0xC|12-35
45892|code|MOVS            R1, #0xE5|229-33
45894|code|LDR             R2, =aCbufStruct; "cbuf struct"|17-74
45896|code|STR             R3, [R0]|3-96
45898|code|LDR             R0, =aCbufC; "cbuf.c"|17-72
45900|code|POP.W           {R4-R8,LR}|189-232-240-65
45904|code|B.W             sub_12B20|7-240-230-187
45908|code|BLX             __errno_location|254-247-38-236
45912|code|MOVS            R6, #0|0-38
45914|code|MOVS            R3, #0x16|22-35
45916|code|STR             R3, [R0]|3-96
45918|code|B               loc_B338|235-231
45920|code|MOV             R0, R4; ptr|32-70
45922|code|BLX             free|254-247-4-235
45926|code|BLX             __errno_location|254-247-30-236
45930|code|MOVS            R3, #0xC|12-35
45932|code|MOVS            R1, #0xF5|245-33
45934|code|LDR             R2, =aCbufData; "cbuf data"|9-74
45936|code|STR             R3, [R0]|3-96
45938|code|LDR             R0, =aCbufC; "cbuf.c"|7-72
45940|code|POP.W           {R4-R8,LR}|189-232-240-65
45944|code|B.W             sub_12B20|7-240-210-187
45948|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
45950|code|MOV.W           R2, #0x110; line|79-244-136-114
45954|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
45956|code|LDR             R3, =aCbufCreate; "cbuf_create"|5-75
45958|code|BLX             __assert_fail|254-247-232-236
45962|data|ALIGN 4|0-191
45964|data|DCD aCbufStruct; "cbuf struct"|168-128-1-0
45968|data|DCD aCbufC; "cbuf.c"|100-123-1-0
45972|data|DCD aCbufData; "cbuf data"|180-128-1-0
45976|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
45980|data|DCD aCbufCreate; "cbuf_create"|148-121-1-0
45984|code|PUSH            {R4,LR}|16-181
45986|code|MOV             R4, R0|4-70
45988|code|CBZ             R0, loc_B3E8|0-179
45990|code|BL              sub_A8BC|255-247-137-250
45994|code|CMP             R0, #0|0-40
45996|code|BEQ             loc_B3F6|35-208
45998|code|LDR             R0, [R4,#0x2C]|224-106
46000|code|MOV             R1, R4; src|33-70
46002|code|MOVS            R2, #4; n|4-34
46004|code|MOVW            R3, #0x4110|68-242-16-19
46008|code|SUBS            R0, #4; dest|4-56
46010|code|MOVT.W          R3, #0x2152|194-242-82-19
46014|code|STR             R3, [R4]|35-96
46016|code|BLX             memcpy|254-247-236-234
46020|code|LDR             R0, [R4,#0x10]|32-105
46022|code|LDR             R3, [R4,#0x2C]|227-106
46024|code|MOV             R1, R4; src|33-70
46026|code|ADDS            R0, #1|1-48
46028|code|MOVS            R2, #4; n|4-34
46030|code|ADDS            R0, R3, R0; dest|24-24
46032|code|BLX             memcpy|254-247-228-234
46036|code|LDR             R0, [R4,#0x2C]|224-106
46038|code|SUBS            R0, #4; ptr|4-56
46040|code|STR             R0, [R4,#0x2C]|224-98
46042|code|BLX             free|254-247-200-234
46046|code|MOV             R0, R4|32-70
46048|code|POP.W           {R4,LR}|189-232-16-64
46052|code|B.W             j_free|254-247-192-186
46056|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46058|code|MOVW            R2, #0x11B; line|64-242-27-18
46062|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46064|code|LDR             R3, =aCbufDestroy; "cbuf_destroy"|6-75
46066|code|BLX             __assert_fail|254-247-178-236
46070|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46072|code|MOVW            R2, #0x11D; line|64-242-29-18
46076|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46078|code|LDR             R3, =aCbufDestroy; "cbuf_destroy"|3-75
46080|code|BLX             __assert_fail|254-247-170-236
46084|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46088|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46092|data|DCD aCbufDestroy; "cbuf_destroy"|160-121-1-0
46096|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46100|code|PUSH            {R4,LR}|16-181
46102|code|MOV             R4, R0|4-70
46104|code|CBZ             R0, loc_B436|104-177
46106|code|BL              sub_A8BC|255-247-79-250
46110|code|CBZ             R0, loc_B452|192-177
46112|code|MOVS            R3, #0|0-35
46114|code|MOV             R0, R4; s2|32-70
46116|code|STR             R3, [R4,#0x14]|99-97
46118|code|STR             R3, [R4,#0x1C]|227-97
46120|code|STR             R3, [R4,#0x28]|163-98
46122|code|STR             R3, [R4,#0x24]|99-98
46124|code|STR             R3, [R4,#0x20]|35-98
46126|code|BL              sub_A8BC|255-247-69-250
46130|code|CBZ             R0, loc_B444|56-177
46132|code|POP             {R4,PC}|16-189
46134|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|10-72
46136|code|MOV.W           R2, #0x134; line|79-244-154-114
46140|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
46142|code|LDR             R3, =aCbufFlush; "cbuf_flush"|10-75
46144|code|BLX             __assert_fail|254-247-138-236
46148|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|9-72
46150|code|MOVW            R2, #0x13D; line|64-242-61-18
46154|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46156|code|LDR             R3, =aCbufFlush; "cbuf_flush"|6-75
46158|code|BLX             __assert_fail|254-247-132-236
46162|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46164|code|MOV.W           R2, #0x136; line|79-244-155-114
46168|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46170|code|LDR             R3, =aCbufFlush; "cbuf_flush"|3-75
46172|code|BLX             __assert_fail|254-247-124-236
46176|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46180|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46184|data|DCD aCbufFlush; "cbuf_flush"|176-121-1-0
46188|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46192|code|PUSH            {R4,LR}|16-181
46194|code|MOV             R4, R0|4-70
46196|code|CBZ             R0, loc_B480|32-177
46198|code|BL              sub_A8BC|255-247-33-250
46202|code|CBZ             R0, loc_B48E|64-177
46204|code|LDR             R0, [R4,#0xC]|224-104
46206|code|POP             {R4,PC}|16-189
46208|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46210|code|MOV.W           R2, #0x148|79-244-164-114
46214|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46216|code|LDR             R3, =aCbufSize; "cbuf_size"|6-75
46218|code|BLX             __assert_fail|254-247-102-236
46222|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46224|code|MOV.W           R2, #0x14A|79-244-165-114
46228|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46230|code|LDR             R3, =aCbufSize; "cbuf_size"|3-75
46232|code|BLX             __assert_fail|254-247-94-236
46236|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46240|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46244|data|DCD aCbufSize; "cbuf_size"|188-121-1-0
46248|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46252|code|PUSH            {R4,LR}|16-181
46254|code|MOV             R4, R0|4-70
46256|code|CBZ             R0, loc_B4C0|48-177
46258|code|BL              sub_A8BC|255-247-3-250
46262|code|CBZ             R0, loc_B4CE|80-177
46264|code|LDR             R0, [R4,#0xC]|224-104
46266|code|LDR             R3, [R4,#0x14]|99-105
46268|code|SUBS            R0, R0, R3|192-26
46270|code|POP             {R4,PC}|16-189
46272|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46274|code|MOV.W           R2, #0x156|79-244-171-114
46278|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46280|code|LDR             R3, =aCbufFree; "cbuf_free"|6-75
46282|code|BLX             __assert_fail|254-247-70-236
46286|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46288|code|MOV.W           R2, #0x158|79-244-172-114
46292|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46294|code|LDR             R3, =aCbufFree; "cbuf_free"|3-75
46296|code|BLX             __assert_fail|254-247-62-236
46300|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46304|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46308|data|DCD aCbufFree; "cbuf_free"|200-121-1-0
46312|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46316|code|PUSH            {R4,LR}|16-181
46318|code|MOV             R4, R0|4-70
46320|code|CBZ             R0, loc_B4FC|32-177
46322|code|BL              sub_A8BC|255-247-227-249
46326|code|CBZ             R0, loc_B50A|64-177
46328|code|LDR             R0, [R4,#0x14]|96-105
46330|code|POP             {R4,PC}|16-189
46332|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46334|code|MOV.W           R2, #0x164; line|79-244-178-114
46338|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46340|code|LDR             R3, =aCbufUsed; "cbuf_used"|6-75
46342|code|BLX             __assert_fail|254-247-40-236
46346|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46348|code|MOV.W           R2, #0x166; line|79-244-179-114
46352|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46354|code|LDR             R3, =aCbufUsed; "cbuf_used"|3-75
46356|code|BLX             __assert_fail|254-247-32-236
46360|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46364|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46368|data|DCD aCbufUsed; "cbuf_used"|212-121-1-0
46372|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46376|code|PUSH            {R4,LR}|16-181
46378|code|SUB             SP, SP, #8|130-176
46380|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46384|code|MOV             R4, R0|4-70
46386|code|STR             R3, [SP,#4]|1-147
46388|code|CBZ             R0, loc_B54C|80-177
46390|code|BL              sub_A8BC|255-247-193-249
46394|code|CBZ             R0, loc_B55A|112-177
46396|code|LDR             R1, [R4,#0x10]|33-105
46398|code|MOV             R0, R4|32-70
46400|code|ADD             R2, SP, #4|1-170
46402|code|BL              sub_A7B0|255-247-53-249
46406|code|LDR             R0, [SP,#4]|1-152
46408|code|ADD             SP, SP, #8|2-176
46410|code|POP             {R4,PC}|16-189
46412|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46414|code|MOV.W           R2, #0x172|79-244-185-114
46418|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46420|code|LDR             R3, =aCbufLinesUsed; "cbuf_lines_used"|6-75
46422|code|BLX             __assert_fail|254-247-0-236
46426|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46428|code|MOV.W           R2, #0x174|79-244-186-114
46432|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46434|code|LDR             R3, =aCbufLinesUsed; "cbuf_lines_used"|3-75
46436|code|BLX             __assert_fail|254-247-248-235
46440|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46444|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46448|data|DCD aCbufLinesUsed; "cbuf_lines_used"|224-121-1-0
46452|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46456|code|PUSH            {R4,LR}|16-181
46458|code|MOV             R4, R0|4-70
46460|code|CBZ             R0, loc_B59A|104-177
46462|code|BL              sub_A8BC|255-247-157-249
46466|code|CBZ             R0, loc_B5A8|136-177
46468|code|LDR             R3, [R4,#0x10]|35-105
46470|code|LDR             R2, [R4,#0x28]|162-106
46472|code|LDR             R0, [R4,#0x24]|96-106
46474|code|ADDS            R3, #1|1-51
46476|code|SUBS            R0, R0, R2|128-26
46478|code|MOV             R1, R3|25-70
46480|code|ADDS            R0, R0, R3|192-24
46482|code|BL              sub_174E4|11-240-167-255
46486|code|MOV             R0, R1|8-70
46488|code|POP             {R4,PC}|16-189
46490|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|7-72
46492|code|MOV.W           R2, #0x186|79-244-195-114
46496|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46498|code|LDR             R3, =aCbufReused; "cbuf_reused"|7-75
46500|code|BLX             __assert_fail|254-247-216-235
46504|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46506|code|MOV.W           R2, #0x188|79-244-196-114
46510|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
46512|code|LDR             R3, =aCbufReused; "cbuf_reused"|3-75
46514|code|BLX             __assert_fail|254-247-210-235
46518|data|ALIGN 4|0-191
46520|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46524|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46528|data|DCD aCbufReused; "cbuf_reused"|240-121-1-0
46532|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46536|code|PUSH            {R4,LR}|16-181
46538|code|SUB             SP, SP, #8|130-176
46540|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
46544|code|MOV             R4, R0|4-70
46546|code|STR             R3, [SP,#4]|1-147
46548|code|CBZ             R0, loc_B5EE|88-177
46550|code|BL              sub_A8BC|255-247-113-249
46554|code|CBZ             R0, loc_B5FC|120-177
46556|code|LDR             R1, [R4,#0x10]|33-105
46558|code|MOV             R0, R4|32-70
46560|code|MOVS            R3, #0|0-35
46562|code|ADD             R2, SP, #4|1-170
46564|code|BL              sub_A634|255-247-38-248
46568|code|LDR             R0, [SP,#4]|1-152
46570|code|ADD             SP, SP, #8|2-176
46572|code|POP             {R4,PC}|16-189
46574|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|7-72
46576|code|MOV.W           R2, #0x194|79-244-202-114
46580|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46582|code|LDR             R3, =aCbufLinesReuse; "cbuf_lines_reused"|7-75
46584|code|BLX             __assert_fail|254-247-174-235
46588|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46590|code|MOV.W           R2, #0x196|79-244-203-114
46594|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
46596|code|LDR             R3, =aCbufLinesReuse; "cbuf_lines_reused"|3-75
46598|code|BLX             __assert_fail|254-247-168-235
46602|data|ALIGN 4|0-191
46604|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46608|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46612|data|DCD aCbufLinesReuse; "cbuf_lines_reused"|252-121-1-0
46616|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46620|code|PUSH            {R4,LR}|16-181
46622|code|MOV             R4, R0|4-70
46624|code|CBZ             R0, loc_B634|64-177
46626|code|BL              sub_A8BC|255-247-75-249
46630|code|CBZ             R0, loc_B642|96-177
46632|code|LDR             R0, [R4,#0x14]|96-105
46634|code|RSBS.W          R0, R0, #1|208-241-1-0
46638|code|IT CC|56-191
46640|code|MOVCC           R0, #0|0-32
46642|code|POP             {R4,PC}|16-189
46644|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46646|code|MOV.W           R2, #0x1A2; line|79-244-209-114
46650|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46652|code|LDR             R3, =aCbufIsEmpty; "cbuf_is_empty"|6-75
46654|code|BLX             __assert_fail|254-247-140-235
46658|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46660|code|MOV.W           R2, #0x1A4; line|79-244-210-114
46664|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46666|code|LDR             R3, =aCbufIsEmpty; "cbuf_is_empty"|3-75
46668|code|BLX             __assert_fail|254-247-132-235
46672|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46676|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46680|data|DCD aCbufIsEmpty; "cbuf_is_empty"|16-122-1-0
46684|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46688|code|PUSH            {R4-R6,LR}|112-181
46690|code|MOV             R4, R0|4-70
46692|code|MOV             R5, R1|13-70
46694|code|MOV             R6, R2|22-70
46696|code|CBZ             R0, loc_B6AA|248-177
46698|code|CBZ             R2, loc_B68C|122-177
46700|code|BL              sub_A8BC|255-247-38-249
46704|code|CBZ             R0, loc_B69C|160-177
46706|code|CBNZ            R5, loc_B67C|29-185
46708|code|LDR             R3, [R4,#0x18]|163-105
46710|code|MOV             R0, R5|40-70
46712|code|STR             R3, [R6]|51-96
46714|code|POP             {R4-R6,PC}|112-189
46716|code|BLX             __errno_location|254-247-146-234
46720|code|MOVS            R2, #0x16|22-34
46722|code|MOV             R3, R0|3-70
46724|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
46728|code|STR             R2, [R3]|26-96
46730|code|POP             {R4-R6,PC}|112-189
46732|code|BLX             __errno_location|254-247-138-234
46736|code|MOVS            R2, #0x16|22-34
46738|code|MOV             R3, R0|3-70
46740|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
46744|code|STR             R2, [R3]|26-96
46746|code|POP             {R4-R6,PC}|112-189
46748|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|6-72
46750|code|MOVW            R2, #0x1B7|64-242-183-18
46754|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46756|code|LDR             R3, =aCbufOptGet; "cbuf_opt_get"|6-75
46758|code|BLX             __assert_fail|254-247-88-235
46762|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46764|code|MOV.W           R2, #0x1B0|79-244-216-114
46768|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
46770|code|LDR             R3, =aCbufOptGet; "cbuf_opt_get"|3-75
46772|code|BLX             __assert_fail|254-247-80-235
46776|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46780|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46784|data|DCD aCbufOptGet; "cbuf_opt_get"|32-122-1-0
46788|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46792|code|PUSH            {R4-R6,LR}|112-181
46794|code|MOV             R4, R0|4-70
46796|code|MOV             R5, R1|13-70
46798|code|MOV             R6, R2|22-70
46800|code|CBZ             R0, loc_B718|16-179
46802|code|BL              sub_A8BC|255-247-243-248
46806|code|CBZ             R0, loc_B70A|192-177
46808|code|CBNZ            R5, loc_B6EE|77-185
46810|code|CMP             R6, #2|2-46
46812|code|IT LS|152-191
46814|code|STRLS           R6, [R4,#0x18]|166-97
46816|code|BHI             loc_B6EE|5-216
46818|code|MOV             R0, R4|32-70
46820|code|BL              sub_A8BC|255-247-234-248
46824|code|CBZ             R0, loc_B6FC|64-177
46826|code|MOV             R0, R5|40-70
46828|code|POP             {R4-R6,PC}|112-189
46830|code|BLX             __errno_location|254-247-90-234
46834|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
46838|code|MOVS            R3, #0x16|22-35
46840|code|STR             R3, [R0]|3-96
46842|code|B               loc_B6E2|242-231
46844|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|10-72
46846|code|MOV.W           R2, #0x1DC|79-244-238-114
46850|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
46852|code|LDR             R3, =aCbufOptSet; "cbuf_opt_set"|10-75
46854|code|BLX             __assert_fail|254-247-40-235
46858|code|LDR             R0, =aCbufIsValidCb; "cbuf_is_valid (cb)"|7-72
46860|code|MOV.W           R2, #0x1CC|79-244-230-114
46864|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
46866|code|LDR             R3, =aCbufOptSet; "cbuf_opt_set"|7-75
46868|code|BLX             __assert_fail|254-247-32-235
46872|code|LDR             R0, =aCbVoid0; "cb != ((void *)0)"|6-72
46874|code|MOVW            R2, #0x1C9|64-242-201-18
46878|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
46880|code|LDR             R3, =aCbufOptSet; "cbuf_opt_set"|3-75
46882|code|BLX             __assert_fail|254-247-26-235
46886|data|ALIGN 4|0-191
46888|data|DCD aCbufIsValidCb; "cbuf_is_valid (cb)"|52-127-1-0
46892|data|DCD aCbufC; "cbuf.c"|100-123-1-0
46896|data|DCD aCbufOptSet; "cbuf_opt_set"|48-122-1-0
46900|data|DCD aCbVoid0; "cb != ((void *)0)"|180-123-1-0
46904|code|PUSH            {R3-R5,LR}|56-181
46906|code|MOV             R5, R0|5-70
46908|code|MOV             R4, R1|12-70
46910|code|CMP             R0, #0|0-40
46912|code|BEQ             loc_B7A0|46-208
46914|code|ADDS            R3, R1, #1|75-28
46916|code|BLT             loc_B792|37-219
46918|code|CBNZ            R1, loc_B74C|9-185
46920|code|MOV             R0, R4; s2|32-70
46922|code|POP             {R3-R5,PC}|56-189
46924|code|BL              sub_A8BC|255-247-182-248
46928|code|CMP             R0, #0|0-40
46930|code|BEQ             loc_B7AE|44-208
46932|code|ADDS            R0, R4, #1|96-28
46934|code|IT EQ|8-191
46936|code|LDREQ           R4, [R5,#0x14]|108-105
46938|code|BEQ             loc_B764|3-208
46940|code|LDR             R3, [R5,#0x14]|107-105
46942|code|CMP             R4, R3|156-66
46944|code|IT GE|168-191
46946|code|MOVGE           R4, R3|28-70
46948|code|CMP             R4, #0|0-44
46950|code|BLE             loc_B788|15-221
46952|code|MOV             R1, R4|33-70
46954|code|MOV             R0, R5|40-70
46956|code|BL              sub_B038|255-247-100-252
46960|code|MOV             R0, R5; s2|40-70
46962|code|BL              sub_A8BC|255-247-163-248
46966|code|CMP             R0, #0|0-40
46968|code|BNE             loc_B748|230-209
46970|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|16-72
46972|code|MOV.W           R2, #0x1FA; line|79-244-253-114
46976|code|LDR             R1, =aCbufC; "cbuf.c"|15-73
46978|code|LDR             R3, =aCbufDrop; "cbuf_drop"|16-75
46980|code|BLX             __assert_fail|254-247-232-234
46984|code|MOV             R0, R5; s2|40-70
46986|code|BL              sub_A8BC|255-247-151-248
46990|code|MOV             R0, R4|32-70
46992|code|POP             {R3-R5,PC}|56-189
46994|code|BLX             __errno_location|254-247-8-234
46998|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
47002|code|MOVS            R3, #0x16|22-35
47004|code|STR             R3, [R0]|3-96
47006|code|B               loc_B748|211-231
47008|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|9-72
47010|code|MOVW            R2, #0x1E5; line|64-242-229-18
47014|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
47016|code|LDR             R3, =aCbufDrop; "cbuf_drop"|6-75
47018|code|BLX             __assert_fail|254-247-214-234
47022|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|3-72
47024|code|MOVW            R2, #0x1EF; line|64-242-239-18
47028|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
47030|code|LDR             R3, =aCbufDrop; "cbuf_drop"|3-75
47032|code|BLX             __assert_fail|254-247-206-234
47036|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
47040|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47044|data|DCD aCbufDrop; "cbuf_drop"|64-122-1-0
47048|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
47052|code|PUSH            {R4,R5,LR}|48-181
47054|code|SUB             SP, SP, #0xC|131-176
47056|code|MOV             R4, R0|4-70
47058|code|MOV             R5, R2|21-70
47060|code|STR             R1, [SP,#0x18+var_14]|1-145
47062|code|CMP             R0, #0|0-40
47064|code|BEQ             loc_B82C|40-208
47066|code|LDR             R3, [SP,#0x18+var_14]|1-155
47068|code|RSBS.W          R3, R3, #1|211-241-1-3
47072|code|IT CC|56-191
47074|code|MOVCC           R3, #0|0-35
47076|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
47080|code|BNE             loc_B81E|25-209
47082|code|CBNZ            R2, loc_B7F2|18-185
47084|code|MOV             R0, R5; s2|40-70
47086|code|ADD             SP, SP, #0xC|3-176
47088|code|POP             {R4,R5,PC}|48-189
47090|code|BL              sub_A8BC|255-247-99-248
47094|code|CBZ             R0, loc_B83A|0-179
47096|code|MOV             R1, R5|41-70
47098|code|LDR             R2, =(sub_B24C+1)|19-74
47100|code|MOV             R0, R4|32-70
47102|code|ADD             R3, SP, #0x18+var_14|1-171
47104|code|BL              sub_A538|254-247-154-254
47108|code|MOV             R5, R0|5-70
47110|code|MOV             R0, R4; s2|32-70
47112|code|BL              sub_A8BC|255-247-88-248
47116|code|CMP             R0, #0|0-40
47118|code|BNE             loc_B7EC|237-209
47120|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|14-72
47122|code|MOVW            R2, #0x211; line|64-242-17-34
47126|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
47128|code|LDR             R3, =aCbufPeek; "cbuf_peek"|14-75
47130|code|BLX             __assert_fail|254-247-158-234
47134|code|BLX             __errno_location|254-247-194-233
47138|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
47142|code|MOVS            R3, #0x16|22-35
47144|code|STR             R3, [R0]|3-96
47146|code|B               loc_B7EC|223-231
47148|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|10-72
47150|code|MOVW            R2, #0x205; line|64-242-5-34
47154|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
47156|code|LDR             R3, =aCbufPeek; "cbuf_peek"|7-75
47158|code|BLX             __assert_fail|254-247-144-234
47162|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|4-72
47164|code|MOVW            R2, #0x20F; line|64-242-15-34
47168|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
47170|code|LDR             R3, =aCbufPeek; "cbuf_peek"|4-75
47172|code|BLX             __assert_fail|254-247-136-234
47176|data|DCD sub_B24C+1|77-178-0-0
47180|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
47184|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47188|data|DCD aCbufPeek; "cbuf_peek"|76-122-1-0
47192|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
47196|code|PUSH            {R4,R5,LR}|48-181
47198|code|SUB             SP, SP, #0xC|131-176
47200|code|MOV             R4, R0|4-70
47202|code|MOV             R5, R2|21-70
47204|code|STR             R1, [SP,#4]|1-145
47206|code|CMP             R0, #0|0-40
47208|code|BEQ             loc_B8C8|46-208
47210|code|LDR             R3, [SP,#4]|1-155
47212|code|RSBS.W          R3, R3, #1|211-241-1-3
47216|code|IT CC|56-191
47218|code|MOVCC           R3, #0|0-35
47220|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
47224|code|BNE             loc_B8BA|31-209
47226|code|CBNZ            R2, loc_B882|18-185
47228|code|MOV             R0, R5|40-70
47230|code|ADD             SP, SP, #0xC|3-176
47232|code|POP             {R4,R5,PC}|48-189
47234|code|BL              sub_A8BC|255-247-27-248
47238|code|CBZ             R0, loc_B8D6|48-179
47240|code|MOV             R1, R5|41-70
47242|code|MOV             R0, R4|32-70
47244|code|LDR             R2, =(sub_B24C+1)|21-74
47246|code|ADD             R3, SP, #4|1-171
47248|code|BL              sub_A538|254-247-82-254
47252|code|CMP             R0, #0|0-40
47254|code|MOV             R5, R0|5-70
47256|code|BLE             loc_B8A2|3-221
47258|code|MOV             R0, R4|32-70
47260|code|MOV             R1, R5|41-70
47262|code|BL              sub_B038|255-247-203-251
47266|code|MOV             R0, R4|32-70
47268|code|BL              sub_A8BC|255-247-10-248
47272|code|CMP             R0, #0|0-40
47274|code|BNE             loc_B87C|231-209
47276|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|14-72
47278|code|MOVW            R2, #0x22B|64-242-43-34
47282|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
47284|code|LDR             R3, =aCbufRead; "cbuf_read"|14-75
47286|code|BLX             __assert_fail|254-247-80-234
47290|code|BLX             __errno_location|254-247-116-233
47294|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
47298|code|MOVS            R3, #0x16|22-35
47300|code|STR             R3, [R0]|3-96
47302|code|B               loc_B87C|217-231
47304|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|10-72
47306|code|MOV.W           R2, #0x21C|79-244-7-114
47310|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
47312|code|LDR             R3, =aCbufRead; "cbuf_read"|7-75
47314|code|BLX             __assert_fail|254-247-66-234
47318|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|4-72
47320|code|MOVW            R2, #0x226|64-242-38-34
47324|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
47326|code|LDR             R3, =aCbufRead; "cbuf_read"|4-75
47328|code|BLX             __assert_fail|254-247-58-234
47332|data|DCD sub_B24C+1|77-178-0-0
47336|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
47340|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47344|data|DCD aCbufRead; "cbuf_read"|88-122-1-0
47348|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
47352|code|PUSH            {R4,R5,LR}|48-181
47354|code|SUB             SP, SP, #0xC|131-176
47356|code|MOV             R4, R0|4-70
47358|code|MOV             R5, R2|21-70
47360|code|STR             R1, [SP,#4]|1-145
47362|code|CMP             R0, #0|0-40
47364|code|BEQ             loc_B958|40-208
47366|code|LDR             R3, [SP,#4]|1-155
47368|code|RSBS.W          R3, R3, #1|211-241-1-3
47372|code|IT CC|56-191
47374|code|MOVCC           R3, #0|0-35
47376|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
47380|code|BNE             loc_B94A|25-209
47382|code|CBNZ            R2, loc_B91E|18-185
47384|code|MOV             R0, R5|40-70
47386|code|ADD             SP, SP, #0xC|3-176
47388|code|POP             {R4,R5,PC}|48-189
47390|code|BL              sub_A8BC|254-247-205-255
47394|code|CBZ             R0, loc_B966|0-179
47396|code|MOV             R1, R5|41-70
47398|code|LDR             R2, =(sub_B24C+1)|19-74
47400|code|MOV             R0, R4|32-70
47402|code|ADD             R3, SP, #4|1-171
47404|code|BL              sub_A418|254-247-116-253
47408|code|MOV             R5, R0|5-70
47410|code|MOV             R0, R4|32-70
47412|code|BL              sub_A8BC|254-247-194-255
47416|code|CMP             R0, #0|0-40
47418|code|BNE             loc_B918|237-209
47420|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|14-72
47422|code|MOVW            R2, #0x242|64-242-66-34
47426|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
47428|code|LDR             R3, =aCbufReplay; "cbuf_replay"|14-75
47430|code|BLX             __assert_fail|254-247-8-234
47434|code|BLX             __errno_location|254-247-44-233
47438|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
47442|code|MOVS            R3, #0x16|22-35
47444|code|STR             R3, [R0]|3-96
47446|code|B               loc_B918|223-231
47448|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|10-72
47450|code|MOVW            R2, #0x236|64-242-54-34
47454|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
47456|code|LDR             R3, =aCbufReplay; "cbuf_replay"|7-75
47458|code|BLX             __assert_fail|254-247-250-233
47462|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|4-72
47464|code|MOV.W           R2, #0x240|79-244-16-114
47468|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
47470|code|LDR             R3, =aCbufReplay; "cbuf_replay"|4-75
47472|code|BLX             __assert_fail|254-247-242-233
47476|data|DCD sub_B24C+1|77-178-0-0
47480|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
47484|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47488|data|DCD aCbufReplay; "cbuf_replay"|100-122-1-0
47492|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
47496|code|PUSH            {R3-R7,LR}|248-181
47498|code|MOV             R5, R0|5-70
47500|code|MOV             R4, R1|12-70
47502|code|CMP             R0, #0|0-40
47504|code|BEQ             loc_BA0A|59-208
47506|code|ADDS            R1, #1|1-49
47508|code|BLT             loc_B9FC|50-219
47510|code|CBNZ            R4, loc_B99C|12-185
47512|code|MOV             R0, R4|32-70
47514|code|POP             {R3-R7,PC}|248-189
47516|code|BL              sub_A8BC|254-247-142-255
47520|code|CMP             R0, #0|0-40
47522|code|BEQ             loc_BA18|57-208
47524|code|LDR             R6, [R5,#0x10]|46-105
47526|code|LDR             R7, [R5,#0x24]|111-106
47528|code|LDR             R0, [R5,#0x28]|168-106
47530|code|ADDS            R6, #1|1-54
47532|code|SUBS            R0, R7, R0|56-26
47534|code|MOV             R1, R6|49-70
47536|code|ADDS            R0, R0, R6|128-25
47538|code|BL              sub_174E4|11-240-151-253
47542|code|ADDS            R2, R4, #1|98-28
47544|code|IT EQ|8-191
47546|code|MOVEQ           R4, R1|12-70
47548|code|BEQ             loc_B9C4|2-208
47550|code|CMP             R4, R1|140-66
47552|code|IT GE|168-191
47554|code|MOVGE           R4, R1|12-70
47556|code|CMP             R4, #0|0-44
47558|code|BLE             loc_B9F2|20-221
47560|code|LDR             R3, [R5,#0x14]|107-105
47562|code|SUBS            R7, R7, R4|63-27
47564|code|ADDS            R0, R6, R7|240-25
47566|code|MOV             R1, R6|49-70
47568|code|ADDS            R3, R3, R4|27-25
47570|code|STR             R3, [R5,#0x14]|107-97
47572|code|BL              sub_174E4|11-240-134-253
47576|code|MOV             R0, R5|40-70
47578|code|STR             R1, [R5,#0x24]|105-98
47580|code|BL              sub_A8BC|254-247-110-255
47584|code|CMP             R0, #0|0-40
47586|code|BNE             loc_B998|217-209
47588|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|16-72
47590|code|MOV.W           R2, #0x264|79-244-25-114
47594|code|LDR             R1, =aCbufC; "cbuf.c"|16-73
47596|code|LDR             R3, =aCbufRewind; "cbuf_rewind"|16-75
47598|code|BLX             __assert_fail|254-247-180-233
47602|code|MOV             R0, R5|40-70
47604|code|BL              sub_A8BC|254-247-98-255
47608|code|MOV             R0, R4|32-70
47610|code|POP             {R3-R7,PC}|248-189
47612|code|BLX             __errno_location|254-247-210-232
47616|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
47620|code|MOVS            R3, #0x16|22-35
47622|code|STR             R3, [R0]|3-96
47624|code|B               loc_B998|198-231
47626|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|10-72
47628|code|MOVW            R2, #0x24D|64-242-77-34
47632|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
47634|code|LDR             R3, =aCbufRewind; "cbuf_rewind"|7-75
47636|code|BLX             __assert_fail|254-247-160-233
47640|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|3-72
47642|code|MOVW            R2, #0x257|64-242-87-34
47646|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
47648|code|LDR             R3, =aCbufRewind; "cbuf_rewind"|3-75
47650|code|BLX             __assert_fail|254-247-154-233
47654|data|ALIGN 4|0-191
47656|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
47660|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47664|data|DCD aCbufRewind; "cbuf_rewind"|112-122-1-0
47668|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
47672|code|PUSH            {R4-R6,LR}|112-181
47674|code|SUB             SP, SP, #0x10|132-176
47676|code|MOV             R5, R0|5-70
47678|code|MOV             R6, R2|22-70
47680|code|STR             R1, [SP,#0x20+var_14]|3-145
47682|code|MOV             R4, R3|28-70
47684|code|CMP             R0, #0|0-40
47686|code|BEQ             loc_BAA4|45-208
47688|code|CBZ             R3, loc_BA4E|11-177
47690|code|MOVS            R3, #0|0-35
47692|code|STR             R3, [R4]|35-96
47694|code|LDR             R3, [SP,#0x20+var_14]|3-155
47696|code|RSBS.W          R3, R3, #1|211-241-1-3
47700|code|IT CC|56-191
47702|code|MOVCC           R3, #0|0-35
47704|code|ORRS.W          R3, R3, R6,LSR#31|83-234-214-115
47708|code|BNE             loc_BA96|27-209
47710|code|CBNZ            R6, loc_BA66|22-185
47712|code|MOV             R0, R6|48-70
47714|code|ADD             SP, SP, #0x10|4-176
47716|code|POP             {R4-R6,PC}|112-189
47718|code|MOV             R0, R5; s2|40-70
47720|code|BL              sub_A8BC|254-247-40-255
47724|code|CBZ             R0, loc_BAB2|8-179
47726|code|MOV             R1, R6|49-70
47728|code|LDR             R2, =(sub_B1DC+1)|19-74
47730|code|MOV             R0, R5|40-70
47732|code|ADD             R3, SP, #0x20+var_14|3-171
47734|code|STR             R4, [SP,#0x20+var_20]|0-148
47736|code|BL              sub_AE5C|255-247-240-249
47740|code|MOV             R6, R0|6-70
47742|code|MOV             R0, R5; s2|40-70
47744|code|BL              sub_A8BC|254-247-28-255
47748|code|CMP             R0, #0|0-40
47750|code|BNE             loc_BA60|235-209
47752|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|14-72
47754|code|MOVW            R2, #0x27E; line|64-242-126-34
47758|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
47760|code|LDR             R3, =aCbufWrite; "cbuf_write"|14-75
47762|code|BLX             __assert_fail|254-247-98-233
47766|code|BLX             __errno_location|254-247-134-232
47770|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
47774|code|MOVS            R3, #0x16|22-35
47776|code|STR             R3, [R0]|3-96
47778|code|B               loc_BA60|221-231
47780|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|10-72
47782|code|MOVW            R2, #0x26F; line|64-242-111-34
47786|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
47788|code|LDR             R3, =aCbufWrite; "cbuf_write"|7-75
47790|code|BLX             __assert_fail|254-247-84-233
47794|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|4-72
47796|code|MOV.W           R2, #0x27C; line|79-244-31-114
47800|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
47802|code|LDR             R3, =aCbufWrite; "cbuf_write"|4-75
47804|code|BLX             __assert_fail|254-247-76-233
47808|data|DCD sub_B1DC+1|221-177-0-0
47812|data|DCD aCbufIsValidDst; "cbuf_is_valid (dst)"|212-128-1-0
47816|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47820|data|DCD aCbufWrite; "cbuf_write"|124-122-1-0
47824|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
47828|code|PUSH            {R4-R6,LR}|112-181
47830|code|SUB             SP, SP, #8|130-176
47832|code|MOV             R4, R0|4-70
47834|code|MOV             R6, R1|14-70
47836|code|STR             R2, [SP,#4]|1-146
47838|code|CMP             R0, #0|0-40
47840|code|BEQ             loc_BB40|46-208
47842|code|LDR             R5, [SP,#4]|1-157
47844|code|ADDS            R0, R5, #1|104-28
47846|code|ITE GE|172-191
47848|code|MOVGE           R3, #0|0-35
47850|code|MOVLT           R3, #1|1-35
47852|code|ORRS.W          R3, R3, R1,LSR#31|83-234-209-115
47856|code|BNE             loc_BB32|31-209
47858|code|CBNZ            R5, loc_BAFA|21-185
47860|code|MOV             R0, R5|40-70
47862|code|ADD             SP, SP, #8|2-176
47864|code|POP             {R4-R6,PC}|112-189
47866|code|MOV             R0, R4|32-70
47868|code|BL              sub_A8BC|254-247-222-254
47872|code|CBZ             R0, loc_BB4E|40-179
47874|code|MOV             R0, R4|32-70
47876|code|MOV             R1, R6|49-70
47878|code|ADD             R2, SP, #4|1-170
47880|code|BL              sub_A7B0|254-247-82-254
47884|code|CMP             R0, #0|0-40
47886|code|MOV             R5, R0|5-70
47888|code|BLE             loc_BB1A|3-221
47890|code|MOV             R0, R4|32-70
47892|code|MOV             R1, R5|41-70
47894|code|BL              sub_B038|255-247-143-250
47898|code|MOV             R0, R4|32-70
47900|code|BL              sub_A8BC|254-247-206-254
47904|code|CMP             R0, #0|0-40
47906|code|BNE             loc_BAF4|231-209
47908|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|13-72
47910|code|MOVW            R2, #0x299|64-242-153-34
47914|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
47916|code|LDR             R3, =aCbufDropLine; "cbuf_drop_line"|13-75
47918|code|BLX             __assert_fail|254-247-20-233
47922|code|BLX             __errno_location|254-247-56-232
47926|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
47930|code|MOVS            R3, #0x16|22-35
47932|code|STR             R3, [R0]|3-96
47934|code|B               loc_BAF4|217-231
47936|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|9-72
47938|code|MOVW            R2, #0x289|64-242-137-34
47942|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
47944|code|LDR             R3, =aCbufDropLine; "cbuf_drop_line"|6-75
47946|code|BLX             __assert_fail|254-247-6-233
47950|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|3-72
47952|code|MOVW            R2, #0x293|64-242-147-34
47956|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
47958|code|LDR             R3, =aCbufDropLine; "cbuf_drop_line"|3-75
47960|code|BLX             __assert_fail|254-247-254-232
47964|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
47968|data|DCD aCbufC; "cbuf.c"|100-123-1-0
47972|data|DCD aCbufDropLine; "cbuf_drop_line"|136-122-1-0
47976|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
47980|code|PUSH.W          {R4-R8,LR}|45-233-240-65
47984|code|SUB             SP, SP, #0x10|132-176
47986|code|MOV             R4, R0|4-70
47988|code|MOV             R7, R1|15-70
47990|code|MOV             R5, R2|21-70
47992|code|STR             R3, [SP,#4]|1-147
47994|code|CMP             R0, #0|0-40
47996|code|BEQ             loc_BC0E|71-208
47998|code|RSBS.W          R3, R1, #1|209-241-1-3
48002|code|IT CC|56-191
48004|code|MOVCC           R3, #0|0-35
48006|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
48010|code|BNE             loc_BC00|57-209
48012|code|LDR             R6, [SP,#4]|1-158
48014|code|ADDS            R3, R6, #1|115-28
48016|code|BLT             loc_BC00|54-219
48018|code|CBNZ            R6, loc_BB9C|30-185
48020|code|MOV             R0, R6|48-70
48022|code|ADD             SP, SP, #0x10|4-176
48024|code|POP.W           {R4-R8,PC}|189-232-240-129
48028|code|BL              sub_A8BC|254-247-142-254
48032|code|CMP             R0, #0|0-40
48034|code|BEQ             loc_BC1C|59-208
48036|code|ADD.W           R8, R5, #0xFFFFFFFF|5-241-255-56
48040|code|MOV             R0, R4|32-70
48042|code|ADD             R2, SP, #4|1-170
48044|code|MOV             R1, R8|65-70
48046|code|BL              sub_A7B0|254-247-255-253
48050|code|CMP             R0, #0|0-40
48052|code|MOV             R6, R0|6-70
48054|code|BLE             loc_BBE0|19-221
48056|code|CBZ             R5, loc_BBE0|149-177
48058|code|CMP             R5, R0|133-66
48060|code|IT GT|200-191
48062|code|MOVGT           R8, R0|128-70
48064|code|BLE             loc_BBF8|26-221
48066|code|ADD             R3, SP, #0x10|4-171
48068|code|MOV             R0, R4|32-70
48070|code|MOV             R1, R8|65-70
48072|code|LDR             R2, =(sub_B24C+1)|31-74
48074|code|STR.W           R7, [R3,#-4]!|67-248-4-125
48078|code|BL              sub_A538|254-247-179-252
48082|code|CMP             R8, R0|128-69
48084|code|BNE             loc_BC38|48-209
48086|code|CMP             R5, R8|69-69
48088|code|BLE             loc_BC2A|39-221
48090|code|MOVS            R3, #0|0-35
48092|code|STRB.W          R3, [R7,R8]|7-248-8-48
48096|code|MOV             R0, R4|32-70
48098|code|BL              sub_A8BC|254-247-107-254
48102|code|CMP             R0, #0|0-40
48104|code|BNE             loc_BB94|212-209
48106|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|24-72
48108|code|MOVW            R2, #0x2BD|64-242-189-34
48112|code|LDR             R1, =aCbufC; "cbuf.c"|23-73
48114|code|LDR             R3, =aCbufPeekLine; "cbuf_peek_line"|24-75
48116|code|BLX             __assert_fail|254-247-176-232
48120|code|CMP.W           R8, #0|184-241-0-15
48124|code|BLE             loc_BBDA|237-221
48126|code|B               loc_BBC2|224-231
48128|code|BLX             __errno_location|253-247-208-239
48132|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
48136|code|MOVS            R3, #0x16|22-35
48138|code|STR             R3, [R0]|3-96
48140|code|B               loc_BB94|194-231
48142|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|18-72
48144|code|MOVW            R2, #0x2A5|64-242-165-34
48148|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
48150|code|LDR             R3, =aCbufPeekLine; "cbuf_peek_line"|15-75
48152|code|BLX             __assert_fail|254-247-158-232
48156|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|11-72
48158|code|MOVW            R2, #0x2AF|64-242-175-34
48162|code|LDR             R1, =aCbufC; "cbuf.c"|11-73
48164|code|LDR             R3, =aCbufPeekLine; "cbuf_peek_line"|11-75
48166|code|BLX             __assert_fail|254-247-152-232
48170|code|LDR             R0, =aMLen; "m < len"|12-72
48172|code|MOVW            R2, #0x2B9|64-242-185-34
48176|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
48178|code|LDR             R3, =aCbufPeekLine; "cbuf_peek_line"|8-75
48180|code|BLX             __assert_fail|254-247-144-232
48184|code|LDR             R0, =aLM; "l == m"|9-72
48186|code|MOVW            R2, #0x2B7|64-242-183-34
48190|code|LDR             R1, =aCbufC; "cbuf.c"|4-73
48192|code|LDR             R3, =aCbufPeekLine; "cbuf_peek_line"|4-75
48194|code|BLX             __assert_fail|254-247-138-232
48198|data|ALIGN 4|0-191
48200|data|DCD sub_B24C+1|77-178-0-0
48204|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
48208|data|DCD aCbufC; "cbuf.c"|100-123-1-0
48212|data|DCD aCbufPeekLine; "cbuf_peek_line"|152-122-1-0
48216|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
48220|data|DCD aMLen; "m < len"|240-128-1-0
48224|data|DCD aLM; "l == m"|232-128-1-0
48228|code|PUSH.W          {R4-R8,LR}|45-233-240-65
48232|code|SUB             SP, SP, #0x10|132-176
48234|code|MOV             R4, R0|4-70
48236|code|MOV             R7, R1|15-70
48238|code|MOV             R5, R2|21-70
48240|code|STR             R3, [SP,#0x28+s2]|1-147
48242|code|CMP             R0, #0|0-40
48244|code|BEQ             loc_BD0E|75-208
48246|code|RSBS.W          R3, R1, #1|209-241-1-3
48250|code|IT CC|56-191
48252|code|MOVCC           R3, #0|0-35
48254|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
48258|code|BNE             loc_BD00|61-209
48260|code|LDR             R6, [SP,#0x28+s2]|1-158
48262|code|ADDS            R2, R6, #1|114-28
48264|code|BLT             loc_BD00|58-219
48266|code|CBNZ            R6, loc_BC94|30-185
48268|code|MOV             R0, R6; s2|48-70
48270|code|ADD             SP, SP, #0x10|4-176
48272|code|POP.W           {R4-R8,PC}|189-232-240-129
48276|code|BL              sub_A8BC|254-247-18-254
48280|code|CMP             R0, #0|0-40
48282|code|BEQ             loc_BD1C|63-208
48284|code|ADD.W           R8, R5, #0xFFFFFFFF|5-241-255-56
48288|code|MOV             R0, R4|32-70
48290|code|ADD             R2, SP, #0x28+s2|1-170
48292|code|MOV             R1, R8|65-70
48294|code|BL              sub_A7B0|254-247-131-253
48298|code|CMP             R0, #0|0-40
48300|code|MOV             R6, R0|6-70
48302|code|BLE             loc_BCE0|23-221
48304|code|CBZ             R5, loc_BCD8|149-177
48306|code|CMP             R5, R0|133-66
48308|code|IT GT|200-191
48310|code|MOVGT           R8, R0|128-70
48312|code|BLE             loc_BCF8|30-221
48314|code|ADD             R3, SP, #0x28+var_18|4-171
48316|code|MOV             R0, R4|32-70
48318|code|MOV             R1, R8|65-70
48320|code|LDR             R2, =(sub_B24C+1)|33-74
48322|code|STR.W           R7, [R3,#-4]!|67-248-4-125
48326|code|BL              sub_A538|254-247-55-252
48330|code|CMP             R8, R0|128-69
48332|code|BNE             loc_BD38|52-209
48334|code|CMP             R5, R8|69-69
48336|code|BLE             loc_BD2A|43-221
48338|code|MOVS            R3, #0|0-35
48340|code|STRB.W          R3, [R7,R8]|7-248-8-48
48344|code|MOV             R0, R4|32-70
48346|code|MOV             R1, R6|49-70
48348|code|BL              sub_B038|255-247-172-249
48352|code|MOV             R0, R4; s2|32-70
48354|code|BL              sub_A8BC|254-247-235-253
48358|code|CMP             R0, #0|0-40
48360|code|BNE             loc_BC8C|208-209
48362|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|24-72
48364|code|MOVW            R2, #0x2E2; line|64-242-226-34
48368|code|LDR             R1, =aCbufC; "cbuf.c"|23-73
48370|code|LDR             R3, =aCbufReadLine; "cbuf_read_line"|24-75
48372|code|BLX             __assert_fail|254-247-48-232
48376|code|CMP.W           R8, #0|184-241-0-15
48380|code|BLE             loc_BCD2|233-221
48382|code|B               loc_BCBA|220-231
48384|code|BLX             __errno_location|253-247-80-239
48388|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
48392|code|MOVS            R3, #0x16|22-35
48394|code|STR             R3, [R0]|3-96
48396|code|B               loc_BC8C|190-231
48398|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|18-72
48400|code|MOVW            R2, #0x2C9; line|64-242-201-34
48404|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
48406|code|LDR             R3, =aCbufReadLine; "cbuf_read_line"|15-75
48408|code|BLX             __assert_fail|254-247-30-232
48412|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|11-72
48414|code|MOVW            R2, #0x2D3; line|64-242-211-34
48418|code|LDR             R1, =aCbufC; "cbuf.c"|11-73
48420|code|LDR             R3, =aCbufReadLine; "cbuf_read_line"|11-75
48422|code|BLX             __assert_fail|254-247-24-232
48426|code|LDR             R0, =aMLen; "m < len"|12-72
48428|code|MOVW            R2, #0x2DD; line|64-242-221-34
48432|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
48434|code|LDR             R3, =aCbufReadLine; "cbuf_read_line"|8-75
48436|code|BLX             __assert_fail|254-247-16-232
48440|code|LDR             R0, =aLM; "l == m"|9-72
48442|code|MOVW            R2, #0x2DB; line|64-242-219-34
48446|code|LDR             R1, =aCbufC; "cbuf.c"|4-73
48448|code|LDR             R3, =aCbufReadLine; "cbuf_read_line"|4-75
48450|code|BLX             __assert_fail|254-247-10-232
48454|data|ALIGN 4|0-191
48456|data|DCD sub_B24C+1|77-178-0-0
48460|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
48464|data|DCD aCbufC; "cbuf.c"|100-123-1-0
48468|data|DCD aCbufReadLine; "cbuf_read_line"|168-122-1-0
48472|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
48476|data|DCD aMLen; "m < len"|240-128-1-0
48480|data|DCD aLM; "l == m"|232-128-1-0
48484|code|PUSH.W          {R4-R8,LR}|45-233-240-65
48488|code|SUB             SP, SP, #0x10|132-176
48490|code|MOV             R4, R0|4-70
48492|code|MOV             R8, R1|136-70
48494|code|MOV             R5, R2|21-70
48496|code|STR             R3, [SP,#4]|1-147
48498|code|CMP             R0, #0|0-40
48500|code|BEQ             loc_BE2E|91-208
48502|code|RSBS.W          R3, R1, #1|209-241-1-3
48506|code|IT CC|56-191
48508|code|MOVCC           R3, #0|0-35
48510|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
48514|code|BNE             loc_BE20|77-209
48516|code|LDR             R6, [SP,#4]|1-158
48518|code|ADDS            R1, R6, #1|113-28
48520|code|BLT             loc_BE20|74-219
48522|code|CBNZ            R6, loc_BD94|30-185
48524|code|MOV             R0, R6|48-70
48526|code|ADD             SP, SP, #0x10|4-176
48528|code|POP.W           {R4-R8,PC}|189-232-240-129
48532|code|BL              sub_A8BC|254-247-146-253
48536|code|CMP             R0, #0|0-40
48538|code|BEQ             loc_BE3C|79-208
48540|code|SUBS            R7, R5, #1|111-30
48542|code|MOV             R0, R4|32-70
48544|code|ADD             R2, SP, #4|1-170
48546|code|ADD             R3, SP, #8|2-171
48548|code|MOV             R1, R7|57-70
48550|code|BL              sub_A634|254-247-69-252
48554|code|CMP             R0, #0|0-40
48556|code|MOV             R6, R0|6-70
48558|code|BLE             loc_BDFE|38-221
48560|code|CBZ             R5, loc_BDFE|45-179
48562|code|LDR             R3, [SP,#8]|2-155
48564|code|CMP             R3, #1|1-43
48566|code|BHI             loc_BE58|79-216
48568|code|SUBS            R7, R7, R3|255-26
48570|code|CMP             R0, R7|184-66
48572|code|IT LT|184-191
48574|code|MOVLT           R7, R0|7-70
48576|code|BIC.W           R7, R7, R7,ASR#31|39-234-231-119
48580|code|CBZ             R7, loc_BDDE|95-177
48582|code|ADD             R3, SP, #0x10|4-171
48584|code|MOV             R0, R4|32-70
48586|code|MOV             R1, R7|57-70
48588|code|LDR             R2, =(sub_B24C+1)|41-74
48590|code|STR.W           R8, [R3,#-4]!|67-248-4-141
48594|code|BL              sub_A418|254-247-33-251
48598|code|CMP             R0, R7|184-66
48600|code|IT EQ|8-191
48602|code|LDREQ           R3, [SP,#8]|2-155
48604|code|BNE             loc_BE66|67-209
48606|code|CMP             R5, #1|1-45
48608|code|ITE LE|212-191
48610|code|MOVLE           R2, #0|0-34
48612|code|MOVGT           R2, #1|1-34
48614|code|CMP             R3, #0|0-43
48616|code|ITE EQ|12-191
48618|code|MOVEQ           R2, #0|0-34
48620|code|ANDNE.W         R2, R2, #1|2-240-1-2
48624|code|CBNZ            R2, loc_BE16|138-185
48626|code|CMP             R7, R5|175-66
48628|code|BGE             loc_BE4A|41-218
48630|code|ADDS            R6, R6, R3|246-24
48632|code|MOVS            R3, #0|0-35
48634|code|STRB.W          R3, [R8,R7]|8-248-7-48
48638|code|MOV             R0, R4|32-70
48640|code|BL              sub_A8BC|254-247-92-253
48644|code|CMP             R0, #0|0-40
48646|code|BNE             loc_BD8C|193-209
48648|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|27-72
48650|code|MOVW            R2, #0x30F|64-242-15-50
48654|code|LDR             R1, =aCbufC; "cbuf.c"|27-73
48656|code|LDR             R3, =aCbufReplayLine; "cbuf_replay_line"|27-75
48658|code|BLX             __assert_fail|253-247-162-239
48662|code|MOVS            R2, #0xA|10-34
48664|code|STRB.W          R2, [R8,R7]|8-248-7-32
48668|code|ADDS            R7, #1|1-55
48670|code|B               loc_BDF2|232-231
48672|code|BLX             __errno_location|253-247-192-238
48676|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
48680|code|MOVS            R3, #0x16|22-35
48682|code|STR             R3, [R0]|3-96
48684|code|B               loc_BD8C|174-231
48686|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|21-72
48688|code|MOVW            R2, #0x2EF|64-242-239-34
48692|code|LDR             R1, =aCbufC; "cbuf.c"|17-73
48694|code|LDR             R3, =aCbufReplayLine; "cbuf_replay_line"|18-75
48696|code|BLX             __assert_fail|253-247-142-239
48700|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|14-72
48702|code|MOVW            R2, #0x2F9|64-242-249-34
48706|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
48708|code|LDR             R3, =aCbufReplayLine; "cbuf_replay_line"|14-75
48710|code|BLX             __assert_fail|253-247-136-239
48714|code|LDR             R0, =aMLen; "m < len"|15-72
48716|code|MOVW            R2, #0x30A|64-242-10-50
48720|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
48722|code|LDR             R3, =aCbufReplayLine; "cbuf_replay_line"|11-75
48724|code|BLX             __assert_fail|253-247-128-239
48728|code|LDR             R0, =aNl0Nl1; "(nl == 0) || (nl == 1)"|12-72
48730|code|MOVW            R2, #0x2FD|64-242-253-34
48734|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
48736|code|LDR             R3, =aCbufReplayLine; "cbuf_replay_line"|7-75
48738|code|BLX             __assert_fail|253-247-122-239
48742|code|LDR             R0, =aLM; "l == m"|10-72
48744|code|MOVW            R2, #0x303|64-242-3-50
48748|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
48750|code|LDR             R3, =aCbufReplayLine; "cbuf_replay_line"|4-75
48752|code|BLX             __assert_fail|253-247-114-239
48756|data|DCD sub_B24C+1|77-178-0-0
48760|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
48764|data|DCD aCbufC; "cbuf.c"|100-123-1-0
48768|data|DCD aCbufReplayLine; "cbuf_replay_line"|184-122-1-0
48772|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
48776|data|DCD aMLen; "m < len"|240-128-1-0
48780|data|DCD aNl0Nl1; "(nl == 0) || (nl == 1)"|248-128-1-0
48784|data|DCD aLM; "l == m"|232-128-1-0
48788|code|PUSH            {R4-R6,LR}|112-181
48790|code|SUB             SP, SP, #8|130-176
48792|code|MOV             R4, R0|4-70
48794|code|MOV             R5, R1|13-70
48796|code|STR             R2, [SP,#4]|1-146
48798|code|CMP             R0, #0|0-40
48800|code|BEQ             loc_BF14|56-208
48802|code|LDR             R3, [SP,#4]|1-155
48804|code|ADDS            R0, R3, #1|88-28
48806|code|ITE GE|172-191
48808|code|MOVGE           R6, #0|0-38
48810|code|MOVLT           R6, #1|1-38
48812|code|ORRS.W          R6, R6, R1,LSR#31|86-234-209-118
48816|code|BNE             loc_BF06|41-209
48818|code|CBNZ            R3, loc_BEBC|27-185
48820|code|MOV             R5, R3|29-70
48822|code|MOV             R0, R5|40-70
48824|code|ADD             SP, SP, #8|2-176
48826|code|POP             {R4-R6,PC}|112-189
48828|code|MOV             R0, R4|32-70
48830|code|BL              sub_A8BC|254-247-253-252
48834|code|CMP             R0, #0|0-40
48836|code|BEQ             loc_BF22|45-208
48838|code|MOV             R1, R5|41-70
48840|code|MOV             R0, R4|32-70
48842|code|MOV             R3, R6|51-70
48844|code|ADD             R2, SP, #4|1-170
48846|code|BL              sub_A634|254-247-177-251
48850|code|CMP             R0, #0|0-40
48852|code|MOV             R5, R0|5-70
48854|code|BLE             loc_BEEE|10-221
48856|code|LDR             R0, [R4,#0x24]|96-106
48858|code|LDR             R1, [R4,#0x10]|33-105
48860|code|LDR             R3, [R4,#0x14]|99-105
48862|code|SUBS            R0, R0, R5|64-27
48864|code|ADDS            R1, #1|1-49
48866|code|ADDS            R3, R3, R5|91-25
48868|code|ADDS            R0, R0, R1|64-24
48870|code|STR             R3, [R4,#0x14]|99-97
48872|code|BL              sub_174E4|11-240-252-250
48876|code|STR             R1, [R4,#0x24]|97-98
48878|code|MOV             R0, R4|32-70
48880|code|BL              sub_A8BC|254-247-228-252
48884|code|CMP             R0, #0|0-40
48886|code|BNE             loc_BEB6|222-209
48888|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|13-72
48890|code|MOVW            R2, #0x32B|64-242-43-50
48894|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
48896|code|LDR             R3, =aCbufRewindLine; "cbuf_rewind_line"|13-75
48898|code|BLX             __assert_fail|253-247-42-239
48902|code|BLX             __errno_location|253-247-78-238
48906|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
48910|code|MOVS            R3, #0x16|22-35
48912|code|STR             R3, [R0]|3-96
48914|code|B               loc_BEB6|208-231
48916|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|9-72
48918|code|MOVW            R2, #0x31A|64-242-26-50
48922|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
48924|code|LDR             R3, =aCbufRewindLine; "cbuf_rewind_line"|6-75
48926|code|BLX             __assert_fail|253-247-28-239
48930|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|3-72
48932|code|MOV.W           R2, #0x324|79-244-73-114
48936|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
48938|code|LDR             R3, =aCbufRewindLine; "cbuf_rewind_line"|3-75
48940|code|BLX             __assert_fail|253-247-20-239
48944|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
48948|data|DCD aCbufC; "cbuf.c"|100-123-1-0
48952|data|DCD aCbufRewindLine; "cbuf_rewind_line"|204-122-1-0
48956|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
48960|code|LDR             R3, =(a201UnknownComm+0x14); "\n"|92-75
48962|code|PUSH.W          {R4-R10,LR}|45-233-240-71
48966|code|SUB             SP, SP, #0x18|134-176
48968|code|MOV             R6, R1|14-70
48970|code|MOV             R4, R0|4-70
48972|code|MOV             R7, R2|23-70
48974|code|STR             R1, [SP,#0x10]|4-145
48976|code|STR             R3, [SP,#0x14]|5-147
48978|code|CMP             R0, #0|0-40
48980|code|BEQ.W           loc_C082|0-240-149-128
48984|code|CBZ             R2, loc_BF5E|10-177
48986|code|MOVS            R3, #0|0-35
48988|code|STR             R3, [R2]|19-96
48990|code|CMP             R6, #0|0-46
48992|code|BEQ             loc_C058|122-208
48994|code|MOV             R0, R6|48-70
48996|code|BLX             strlen|253-247-244-237
49000|code|MOV             R10, R0|130-70
49002|code|MOV             R9, R0|129-70
49004|code|CMP             R0, #0|0-40
49006|code|BNE             loc_C014|81-209
49008|code|ADD.W           R5, R10, #1|10-241-1-5
49012|code|MOV             R0, R4|32-70
49014|code|BL              sub_A8BC|254-247-161-252
49018|code|CMP             R0, #0|0-40
49020|code|BEQ             loc_C074|122-208
49022|code|LDR             R3, [R4,#0x10]|35-105
49024|code|LDR             R1, [R4,#0x14]|97-105
49026|code|SUBS            R1, R3, R1|89-26
49028|code|CMP             R5, R1|141-66
49030|code|BLE             loc_BF8E|2-221
49032|code|LDR             R2, [R4,#0xC]|226-104
49034|code|CMP             R3, R2|147-66
49036|code|BLT             loc_C040|88-219
49038|code|LDR             R3, [R4,#0x18]|163-105
49040|code|CMP             R3, #0|0-43
49042|code|BEQ             loc_C024|71-208
49044|code|CMP             R3, #1|1-43
49046|code|BEQ             loc_C050|91-208
49048|code|CMP             R5, #0|0-45
49050|code|BLE.W           loc_C0AC|64-243-135-128
49054|code|LDR             R3, [R4,#0x10]|35-105
49056|code|CMP             R5, R3|157-66
49058|code|ITTTE GT|195-191
49060|code|RSBGT.W         R8, R3, R5|195-235-5-8
49064|code|LDRGT           R3, [SP,#0x10]|4-155
49066|code|RSBGT.W         R9, R8, R10|200-235-10-9
49070|code|MOVLE.W         R8, #0|79-240-0-8
49074|code|ITT GT|196-191
49076|code|ADDGT           R3, R8|67-68
49078|code|STRGT           R3, [SP,#0x10]|4-147
49080|code|CMP.W           R9, #0|185-241-0-15
49084|code|BLE             loc_BFDA|13-221
49086|code|MOV             R0, R4|32-70
49088|code|MOV             R1, R9|73-70
49090|code|LDR             R2, =(sub_B1DC+1)|61-74
49092|code|ADD             R3, SP, #0x10|4-171
49094|code|ADD.W           LR, SP, #0xC|13-241-12-14
49098|code|STR.W           LR, [SP]|205-248-0-224
49102|code|BL              sub_AE5C|254-247-69-255
49106|code|CMP             R0, R9|72-69
49108|code|BNE             loc_C09E|99-209
49110|code|LDR             R3, [SP,#0xC]|3-155
49112|code|ADD             R8, R3|152-68
49114|code|ADDS            R6, R6, R5|118-25
49116|code|LDRB.W          R3, [R6,#-1]|22-248-1-60
49120|code|CMP             R3, #0xA|10-43
49122|code|BEQ             loc_BFFC|11-208
49124|code|MOVS            R1, #1|1-33
49126|code|MOV             R0, R4|32-70
49128|code|LDR             R2, =(sub_B1DC+1)|51-74
49130|code|ADD             R3, SP, #0x14|5-171
49132|code|ADD             R6, SP, #0xC|3-174
49134|code|STR             R6, [SP]|0-150
49136|code|BL              sub_AE5C|254-247-52-255
49140|code|CMP             R0, #1|1-40
49142|code|BNE             loc_C090|75-209
49144|code|LDR             R3, [SP,#0xC]|3-155
49146|code|ADD             R8, R3|152-68
49148|code|MOV             R0, R4|32-70
49150|code|BL              sub_A8BC|254-247-93-252
49154|code|CMP             R0, #0|0-40
49156|code|BEQ             loc_C066|47-208
49158|code|CBZ             R7, loc_C00C|15-177
49160|code|STR.W           R8, [R7]|199-248-0-128
49164|code|MOV             R0, R5|40-70
49166|code|ADD             SP, SP, #0x18|6-176
49168|code|POP.W           {R4-R10,PC}|189-232-240-135
49172|code|ADDS            R3, R6, R0|51-24
49174|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
49178|code|CMP             R3, #0xA|10-43
49180|code|IT EQ|8-191
49182|code|MOVEQ           R5, R0|5-70
49184|code|BNE             loc_BF70|166-209
49186|code|B               loc_BF74|167-231
49188|code|LDR             R2, [R4,#0x10]|34-105
49190|code|LDR             R3, [R4,#0x14]|99-105
49192|code|SUBS            R3, R2, R3|211-26
49194|code|CMP             R5, R3|157-66
49196|code|BLE             loc_BF98|180-221
49198|code|BLX             __errno_location|253-247-186-237
49202|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
49206|code|MOVS            R3, #0x1C|28-35
49208|code|MOV.W           R8, #0|79-240-0-8
49212|code|STR             R3, [R0]|3-96
49214|code|B               loc_BFFC|221-231
49216|code|SUBS            R1, R5, R1|105-26
49218|code|MOV             R0, R4|32-70
49220|code|BL              sub_AB5C|254-247-138-253
49224|code|LDR             R3, [R4,#0x18]|163-105
49226|code|CMP             R3, #0|0-43
49228|code|BNE             loc_BF94|162-209
49230|code|B               loc_C024|233-231
49232|code|LDR             R3, [R4,#0x10]|35-105
49234|code|CMP             R5, R3|157-66
49236|code|BLE             loc_BF98|160-221
49238|code|B               loc_C02E|234-231
49240|code|BLX             __errno_location|253-247-164-237
49244|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
49248|code|MOVS            R3, #0x16|22-35
49250|code|STR             R3, [R0]|3-96
49252|code|B               loc_C00C|210-231
49254|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|21-72
49256|code|MOVW            R2, #0x379|64-242-121-50
49260|code|LDR             R1, =aCbufC; "cbuf.c"|20-73
49262|code|LDR             R3, =aCbufWriteLine; "cbuf_write_line"|21-75
49264|code|BLX             __assert_fail|253-247-114-238
49268|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|17-72
49270|code|MOVW            R2, #0x34B|64-242-75-50
49274|code|LDR             R1, =aCbufC; "cbuf.c"|17-73
49276|code|LDR             R3, =aCbufWriteLine; "cbuf_write_line"|17-75
49278|code|BLX             __assert_fail|253-247-108-238
49282|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|17-72
49284|code|MOVW            R2, #0x33A|64-242-58-50
49288|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
49290|code|LDR             R3, =aCbufWriteLine; "cbuf_write_line"|14-75
49292|code|BLX             __assert_fail|253-247-100-238
49296|code|LDR             R0, =aN1; "n == 1"|14-72
49298|code|MOVW            R2, #0x375|64-242-117-50
49302|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
49304|code|LDR             R3, =aCbufWriteLine; "cbuf_write_line"|10-75
49306|code|BLX             __assert_fail|253-247-94-238
49310|code|LDR             R0, =aNNcopy; "n == ncopy"|12-72
49312|code|MOVW            R2, #0x36E|64-242-110-50
49316|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
49318|code|LDR             R3, =aCbufWriteLine; "cbuf_write_line"|7-75
49320|code|BLX             __assert_fail|253-247-86-238
49324|code|MOV.W           R8, #0|79-240-0-8
49328|code|B               loc_BFFC|164-231
49330|data|ALIGN 4|0-191
49332|data|DCD a201UnknownComm+0x14; "\n"|224-136-1-0
49336|data|DCD sub_B1DC+1|221-177-0-0
49340|data|DCD aCbufIsValidDst; "cbuf_is_valid (dst)"|212-128-1-0
49344|data|DCD aCbufC; "cbuf.c"|100-123-1-0
49348|data|DCD aCbufWriteLine; "cbuf_write_line"|224-122-1-0
49352|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
49356|data|DCD aN1; "n == 1"|28-129-1-0
49360|data|DCD aNNcopy; "n == ncopy"|16-129-1-0
49364|code|PUSH            {R4,R5,LR}|48-181
49366|code|SUB             SP, SP, #0xC|131-176
49368|code|MOV             R4, R0|4-70
49370|code|MOV             R5, R2|21-70
49372|code|STR             R1, [SP,#4]|1-145
49374|code|CMP             R0, #0|0-40
49376|code|BEQ             loc_C146|49-208
49378|code|ADDS            R2, #1|1-50
49380|code|LDR             R2, [SP,#4]|1-154
49382|code|ITE GE|172-191
49384|code|MOVGE           R3, #0|0-35
49386|code|MOVLT           R3, #1|1-35
49388|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
49392|code|BNE             loc_C12A|27-209
49394|code|BL              sub_A8BC|254-247-227-251
49398|code|CMP             R0, #0|0-40
49400|code|BEQ             loc_C154|44-208
49402|code|ADDS            R3, R5, #1|107-28
49404|code|IT EQ|8-191
49406|code|LDREQ           R5, [R4,#0x14]|101-105
49408|code|CMP             R5, #0|0-45
49410|code|BLE             loc_C120|13-221
49412|code|MOV             R1, R5|41-70
49414|code|LDR             R2, =(sub_B154+1)|23-74
49416|code|MOV             R0, R4|32-70
49418|code|ADD             R3, SP, #4|1-171
49420|code|BL              sub_A538|254-247-20-250
49424|code|MOV             R5, R0|5-70
49426|code|MOV             R0, R4|32-70
49428|code|BL              sub_A8BC|254-247-210-251
49432|code|CBZ             R0, loc_C138|112-177
49434|code|MOV             R0, R5|40-70
49436|code|ADD             SP, SP, #0xC|3-176
49438|code|POP             {R4,R5,PC}|48-189
49440|code|MOV             R0, R4|32-70
49442|code|MOVS            R5, #0|0-37
49444|code|BL              sub_A8BC|254-247-202-251
49448|code|B               loc_C11A|247-231
49450|code|BLX             __errno_location|253-247-60-237
49454|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
49458|code|MOVS            R3, #0x16|22-35
49460|code|STR             R3, [R0]|3-96
49462|code|B               loc_C11A|240-231
49464|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|11-72
49466|code|MOVW            R2, #0x395|64-242-149-50
49470|code|LDR             R1, =aCbufC; "cbuf.c"|11-73
49472|code|LDR             R3, =aCbufPeekToFd; "cbuf_peek_to_fd"|11-75
49474|code|BLX             __assert_fail|253-247-10-238
49478|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|11-72
49480|code|MOVW            R2, #0x387|64-242-135-50
49484|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
49486|code|LDR             R3, =aCbufPeekToFd; "cbuf_peek_to_fd"|8-75
49488|code|BLX             __assert_fail|253-247-2-238
49492|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|4-72
49494|code|MOVW            R2, #0x38E|64-242-142-50
49498|code|LDR             R1, =aCbufC; "cbuf.c"|4-73
49500|code|LDR             R3, =aCbufPeekToFd; "cbuf_peek_to_fd"|4-75
49502|code|BLX             __assert_fail|253-247-252-237
49506|data|ALIGN 4|0-191
49508|data|DCD sub_B154+1|85-177-0-0
49512|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
49516|data|DCD aCbufC; "cbuf.c"|100-123-1-0
49520|data|DCD aCbufPeekToFd; "cbuf_peek_to_fd"|240-122-1-0
49524|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
49528|code|PUSH            {R4,R5,LR}|48-181
49530|code|SUB             SP, SP, #0xC|131-176
49532|code|MOV             R4, R0|4-70
49534|code|MOV             R5, R2|21-70
49536|code|STR             R1, [SP,#0x18+var_14]|1-145
49538|code|CMP             R0, #0|0-40
49540|code|BEQ             loc_C1F6|55-208
49542|code|ADDS            R0, R2, #1|80-28
49544|code|LDR             R2, [SP,#0x18+var_14]|1-154
49546|code|ITE GE|172-191
49548|code|MOVGE           R3, #0|0-35
49550|code|MOVLT           R3, #1|1-35
49552|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
49556|code|BNE             loc_C1DA|33-209
49558|code|MOV             R0, R4; s2|32-70
49560|code|BL              sub_A8BC|254-247-144-251
49564|code|CMP             R0, #0|0-40
49566|code|BEQ             loc_C204|49-208
49568|code|ADDS            R1, R5, #1|105-28
49570|code|MOV             R0, R4; s2|32-70
49572|code|IT EQ|8-191
49574|code|LDREQ           R5, [R4,#0x14]|101-105
49576|code|CMP             R5, #0|0-45
49578|code|BLE             loc_C1D2|18-221
49580|code|MOV             R1, R5|41-70
49582|code|LDR             R2, =(sub_B154+1)|25-74
49584|code|ADD             R3, SP, #0x18+var_14|1-171
49586|code|BL              sub_A538|254-247-193-249
49590|code|CMP             R0, #0|0-40
49592|code|MOV             R5, R0|5-70
49594|code|BLE             loc_C1C4|3-221
49596|code|MOV             R0, R4|32-70
49598|code|MOV             R1, R5|41-70
49600|code|BL              sub_B038|254-247-58-255
49604|code|MOV             R0, R4; s2|32-70
49606|code|BL              sub_A8BC|254-247-121-251
49610|code|CBZ             R0, loc_C1E8|104-177
49612|code|MOV             R0, R5|40-70
49614|code|ADD             SP, SP, #0xC|3-176
49616|code|POP             {R4,R5,PC}|48-189
49618|code|MOVS            R5, #0|0-37
49620|code|BL              sub_A8BC|254-247-114-251
49624|code|B               loc_C1CC|248-231
49626|code|BLX             __errno_location|253-247-228-236
49630|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
49634|code|MOVS            R3, #0x16|22-35
49636|code|STR             R3, [R0]|3-96
49638|code|B               loc_C1CC|241-231
49640|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|11-72
49642|code|MOVW            R2, #0x3B1; line|64-242-177-50
49646|code|LDR             R1, =aCbufC; "cbuf.c"|11-73
49648|code|LDR             R3, =aCbufReadToFd; "cbuf_read_to_fd"|11-75
49650|code|BLX             __assert_fail|253-247-178-237
49654|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|11-72
49656|code|MOV.W           R2, #0x3A0; line|79-244-104-114
49660|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
49662|code|LDR             R3, =aCbufReadToFd; "cbuf_read_to_fd"|8-75
49664|code|BLX             __assert_fail|253-247-170-237
49668|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|4-72
49670|code|MOVW            R2, #0x3A7; line|64-242-167-50
49674|code|LDR             R1, =aCbufC; "cbuf.c"|4-73
49676|code|LDR             R3, =aCbufReadToFd; "cbuf_read_to_fd"|4-75
49678|code|BLX             __assert_fail|253-247-164-237
49682|data|ALIGN 4|0-191
49684|data|DCD sub_B154+1|85-177-0-0
49688|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
49692|data|DCD aCbufC; "cbuf.c"|100-123-1-0
49696|data|DCD aCbufReadToFd; "cbuf_read_to_fd"|0-123-1-0
49700|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
49704|code|PUSH            {R4,R5,LR}|48-181
49706|code|SUB             SP, SP, #0xC|131-176
49708|code|MOV             R4, R0|4-70
49710|code|MOV             R5, R2|21-70
49712|code|STR             R1, [SP,#4]|1-145
49714|code|CMP             R0, #0|0-40
49716|code|BEQ             loc_C2A0|52-208
49718|code|ADDS            R2, #1|1-50
49720|code|LDR             R2, [SP,#4]|1-154
49722|code|ITE GE|172-191
49724|code|MOVGE           R3, #0|0-35
49726|code|MOVLT           R3, #1|1-35
49728|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
49732|code|BNE             loc_C284|30-209
49734|code|BL              sub_A8BC|254-247-57-251
49738|code|CMP             R0, #0|0-40
49740|code|BEQ             loc_C2AE|47-208
49742|code|ADDS            R3, R5, #1|107-28
49744|code|ITTT EQ|2-191
49746|code|LDREQ           R5, [R4,#0x10]|37-105
49748|code|LDREQ           R3, [R4,#0x14]|99-105
49750|code|RSBEQ.W         R5, R3, R5|195-235-5-5
49754|code|CMP             R5, #0|0-45
49756|code|BLE             loc_C27A|13-221
49758|code|MOV             R1, R5|41-70
49760|code|LDR             R2, =(sub_B154+1)|22-74
49762|code|MOV             R0, R4|32-70
49764|code|ADD             R3, SP, #4|1-171
49766|code|BL              sub_A418|254-247-215-248
49770|code|MOV             R5, R0|5-70
49772|code|MOV             R0, R4|32-70
49774|code|BL              sub_A8BC|254-247-37-251
49778|code|CBZ             R0, loc_C292|112-177
49780|code|MOV             R0, R5|40-70
49782|code|ADD             SP, SP, #0xC|3-176
49784|code|POP             {R4,R5,PC}|48-189
49786|code|MOV             R0, R4|32-70
49788|code|MOVS            R5, #0|0-37
49790|code|BL              sub_A8BC|254-247-29-251
49794|code|B               loc_C274|247-231
49796|code|BLX             __errno_location|253-247-142-236
49800|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
49804|code|MOVS            R3, #0x16|22-35
49806|code|STR             R3, [R0]|3-96
49808|code|B               loc_C274|240-231
49810|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|11-72
49812|code|MOVW            R2, #0x3CA|64-242-202-50
49816|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
49818|code|LDR             R3, =aCbufReplayToFd; "cbuf_replay_to_fd"|11-75
49820|code|BLX             __assert_fail|253-247-92-237
49824|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|10-72
49826|code|MOV.W           R2, #0x3BC|79-244-111-114
49830|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
49832|code|LDR             R3, =aCbufReplayToFd; "cbuf_replay_to_fd"|7-75
49834|code|BLX             __assert_fail|253-247-86-237
49838|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|4-72
49840|code|MOVW            R2, #0x3C3|64-242-195-50
49844|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
49846|code|LDR             R3, =aCbufReplayToFd; "cbuf_replay_to_fd"|4-75
49848|code|BLX             __assert_fail|253-247-78-237
49852|data|DCD sub_B154+1|85-177-0-0
49856|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
49860|data|DCD aCbufC; "cbuf.c"|100-123-1-0
49864|data|DCD aCbufReplayToFd; "cbuf_replay_to_fd"|16-123-1-0
49868|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
49872|code|PUSH            {R4-R6,LR}|112-181
49874|code|SUB             SP, SP, #0x10|132-176
49876|code|MOV             R4, R0|4-70
49878|code|MOV             R6, R2|22-70
49880|code|STR             R1, [SP,#0x20+var_14]|3-145
49882|code|MOV             R5, R3|29-70
49884|code|CMP             R0, #0|0-40
49886|code|BEQ             loc_C368|67-208
49888|code|CBZ             R3, loc_C2E6|11-177
49890|code|MOVS            R3, #0|0-35
49892|code|STR             R3, [R5]|43-96
49894|code|ADDS            R0, R6, #1|112-28
49896|code|LDR             R2, [SP,#0x20+var_14]|3-154
49898|code|ITE GE|172-191
49900|code|MOVGE           R3, #0|0-35
49902|code|MOVLT           R3, #1|1-35
49904|code|ORRS.W          R3, R3, R2,LSR#31|83-234-210-115
49908|code|BNE             loc_C34C|42-209
49910|code|MOV             R0, R4; s2|32-70
49912|code|BL              sub_A8BC|254-247-224-250
49916|code|CMP             R0, #0|0-40
49918|code|BEQ             loc_C35A|44-208
49920|code|ADDS            R1, R6, #1|113-28
49922|code|BEQ             loc_C316|8-208
49924|code|CMP             R6, #0|0-46
49926|code|BGT             loc_C324|13-220
49928|code|MOV             R0, R4; s2|32-70
49930|code|MOVS            R5, #0|0-37
49932|code|BL              sub_A8BC|254-247-214-250
49936|code|MOV             R0, R5|40-70
49938|code|ADD             SP, SP, #0x10|4-176
49940|code|POP             {R4-R6,PC}|112-189
49942|code|LDR             R6, [R4,#0x10]|38-105
49944|code|LDR             R3, [R4,#0x14]|99-105
49946|code|SUBS            R6, R6, R3|246-26
49948|code|IT EQ|8-191
49950|code|MOVEQ.W         R6, #0x3E8|79-244-122-118
49954|code|BNE             loc_C304|239-209
49956|code|MOV             R1, R6|49-70
49958|code|LDR             R2, =(sub_B0CC+1)|20-74
49960|code|MOV             R0, R4|32-70
49962|code|ADD             R3, SP, #0x20+var_14|3-171
49964|code|STR             R5, [SP,#0x20+var_20]|0-149
49966|code|BL              sub_AE5C|254-247-149-253
49970|code|MOV             R5, R0|5-70
49972|code|MOV             R0, R4; s2|32-70
49974|code|BL              sub_A8BC|254-247-193-250
49978|code|CMP             R0, #0|0-40
49980|code|BNE             loc_C310|232-209
49982|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|15-72
49984|code|MOVW            R2, #0x3ED; line|64-242-237-50
49988|code|LDR             R1, =aCbufC; "cbuf.c"|14-73
49990|code|LDR             R3, =aCbufWriteFromF; "cbuf_write_from_fd"|15-75
49992|code|BLX             __assert_fail|253-247-6-237
49996|code|BLX             __errno_location|253-247-42-236
50000|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
50004|code|MOVS            R3, #0x16|22-35
50006|code|STR             R3, [R0]|3-96
50008|code|B               loc_C310|218-231
50010|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|8-72
50012|code|MOVW            R2, #0x3DF; line|64-242-223-50
50016|code|LDR             R1, =aCbufC; "cbuf.c"|7-73
50018|code|LDR             R3, =aCbufWriteFromF; "cbuf_write_from_fd"|8-75
50020|code|BLX             __assert_fail|253-247-248-236
50024|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|7-72
50026|code|MOVW            R2, #0x3D5; line|64-242-213-50
50030|code|LDR             R1, =aCbufC; "cbuf.c"|4-73
50032|code|LDR             R3, =aCbufWriteFromF; "cbuf_write_from_fd"|4-75
50034|code|BLX             __assert_fail|253-247-242-236
50038|data|ALIGN 4|0-191
50040|data|DCD sub_B0CC+1|205-176-0-0
50044|data|DCD aCbufIsValidDst; "cbuf_is_valid (dst)"|212-128-1-0
50048|data|DCD aCbufC; "cbuf.c"|100-123-1-0
50052|data|DCD aCbufWriteFromF; "cbuf_write_from_fd"|36-123-1-0
50056|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
50060|code|PUSH            {R3-R7,LR}|248-181
50062|code|MOV             R4, R0|4-70
50064|code|MOV             R5, R1|13-70
50066|code|MOV             R6, R2|22-70
50068|code|MOV             R7, R3|31-70
50070|code|CMP             R0, #0|0-40
50072|code|BEQ             loc_C41A|63-208
50074|code|CMP             R1, #0|0-41
50076|code|BEQ             loc_C428|68-208
50078|code|CBZ             R3, loc_C3A4|11-177
50080|code|MOVS            R3, #0|0-35
50082|code|STR             R3, [R7]|59-96
50084|code|CMP             R4, R5|172-66
50086|code|BEQ             loc_C40C|49-208
50088|code|ADDS            R2, R6, #1|114-28
50090|code|BLT             loc_C40C|47-219
50092|code|CBNZ            R6, loc_C3B2|14-185
50094|code|MOV             R0, R6|48-70
50096|code|POP             {R3-R7,PC}|248-189
50098|code|MOV             R0, R4|32-70
50100|code|BL              sub_A8BC|254-247-130-250
50104|code|CMP             R0, #0|0-40
50106|code|BEQ             loc_C452|74-208
50108|code|MOV             R0, R5|40-70
50110|code|BL              sub_A8BC|254-247-125-250
50114|code|CMP             R0, #0|0-40
50116|code|BEQ             loc_C436|55-208
50118|code|ADDS            R3, R6, #1|115-28
50120|code|IT EQ|8-191
50122|code|LDREQ           R6, [R4,#0x14]|102-105
50124|code|CMP             R6, #0|0-46
50126|code|BLE             loc_C400|23-221
50128|code|MOV             R2, R6|50-70
50130|code|MOV             R1, R5|41-70
50132|code|MOV             R3, R7|59-70
50134|code|MOV             R0, R4|32-70
50136|code|BL              sub_AC70|254-247-74-252
50140|code|MOV             R6, R0|6-70
50142|code|MOV             R0, R4|32-70
50144|code|BL              sub_A8BC|254-247-108-250
50148|code|CMP             R0, #0|0-40
50150|code|BEQ             loc_C444|45-208
50152|code|MOV             R0, R5|40-70
50154|code|BL              sub_A8BC|254-247-103-250
50158|code|CMP             R0, #0|0-40
50160|code|BNE             loc_C3AE|221-209
50162|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|27-72
50164|code|MOVW            R2, #0x41D|64-242-29-66
50168|code|LDR             R1, =aCbufC; "cbuf.c"|26-73
50170|code|LDR             R3, =aCbufCopy; "cbuf_copy"|27-75
50172|code|BLX             __assert_fail|253-247-172-236
50176|code|MOVS            R6, #0|0-38
50178|code|MOV             R0, R4|32-70
50180|code|BL              sub_A8BC|254-247-90-250
50184|code|MOV             R0, R6|48-70
50186|code|POP             {R3-R7,PC}|248-189
50188|code|BLX             __errno_location|253-247-202-235
50192|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
50196|code|MOVS            R3, #0x16|22-35
50198|code|STR             R3, [R0]|3-96
50200|code|B               loc_C3AE|201-231
50202|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|20-72
50204|code|MOV.W           R2, #0x3F8|79-244-126-114
50208|code|LDR             R1, =aCbufC; "cbuf.c"|16-73
50210|code|LDR             R3, =aCbufCopy; "cbuf_copy"|17-75
50212|code|BLX             __assert_fail|253-247-152-236
50216|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|17-72
50218|code|MOVW            R2, #0x3F9|64-242-249-50
50222|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
50224|code|LDR             R3, =aCbufCopy; "cbuf_copy"|13-75
50226|code|BLX             __assert_fail|253-247-146-236
50230|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|10-72
50232|code|MOVW            R2, #0x414|64-242-20-66
50236|code|LDR             R1, =aCbufC; "cbuf.c"|9-73
50238|code|LDR             R3, =aCbufCopy; "cbuf_copy"|10-75
50240|code|BLX             __assert_fail|253-247-138-236
50244|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|11-72
50246|code|MOVW            R2, #0x41C|64-242-28-66
50250|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
50252|code|LDR             R3, =aCbufCopy; "cbuf_copy"|6-75
50254|code|BLX             __assert_fail|253-247-132-236
50258|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|8-72
50260|code|MOVW            R2, #0x413|64-242-19-66
50264|code|LDR             R1, =aCbufC; "cbuf.c"|2-73
50266|code|LDR             R3, =aCbufCopy; "cbuf_copy"|3-75
50268|code|BLX             __assert_fail|253-247-124-236
50272|data|DCD aCbufIsValidDst; "cbuf_is_valid (dst)"|212-128-1-0
50276|data|DCD aCbufC; "cbuf.c"|100-123-1-0
50280|data|DCD aCbufCopy; "cbuf_copy"|56-123-1-0
50284|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
50288|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
50292|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
50296|code|PUSH            {R3-R7,LR}|248-181
50298|code|MOV             R4, R0|4-70
50300|code|MOV             R5, R1|13-70
50302|code|MOV             R6, R2|22-70
50304|code|MOV             R7, R3|31-70
50306|code|CMP             R0, #0|0-40
50308|code|BEQ             loc_C510|68-208
50310|code|CMP             R1, #0|0-41
50312|code|BEQ             loc_C51E|73-208
50314|code|CBZ             R3, loc_C490|11-177
50316|code|MOVS            R3, #0|0-35
50318|code|STR             R3, [R7]|59-96
50320|code|CMP             R4, R5|172-66
50322|code|BEQ             loc_C502|54-208
50324|code|ADDS            R0, R6, #1|112-28
50326|code|BLT             loc_C502|52-219
50328|code|CBNZ            R6, loc_C49E|14-185
50330|code|MOV             R0, R6|48-70
50332|code|POP             {R3-R7,PC}|248-189
50334|code|MOV             R0, R4|32-70
50336|code|BL              sub_A8BC|254-247-12-250
50340|code|CMP             R0, #0|0-40
50342|code|BEQ             loc_C548|79-208
50344|code|MOV             R0, R5|40-70
50346|code|BL              sub_A8BC|254-247-7-250
50350|code|CMP             R0, #0|0-40
50352|code|BEQ             loc_C52C|60-208
50354|code|ADDS            R1, R6, #1|113-28
50356|code|MOV             R0, R4|32-70
50358|code|IT EQ|8-191
50360|code|LDREQ           R6, [R4,#0x14]|102-105
50362|code|CMP             R6, #0|0-46
50364|code|BLE             loc_C4F8|28-221
50366|code|MOV             R2, R6|50-70
50368|code|MOV             R1, R5|41-70
50370|code|MOV             R3, R7|59-70
50372|code|BL              sub_AC70|254-247-212-251
50376|code|CMP             R0, #0|0-40
50378|code|MOV             R6, R0|6-70
50380|code|BLE             loc_C4D6|3-221
50382|code|MOV             R0, R4|32-70
50384|code|MOV             R1, R6|49-70
50386|code|BL              sub_B038|254-247-177-253
50390|code|MOV             R0, R4|32-70
50392|code|BL              sub_A8BC|254-247-240-249
50396|code|CMP             R0, #0|0-40
50398|code|BEQ             loc_C53A|44-208
50400|code|MOV             R0, R5|40-70
50402|code|BL              sub_A8BC|254-247-235-249
50406|code|CMP             R0, #0|0-40
50408|code|BNE             loc_C49A|215-209
50410|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|27-72
50412|code|MOVW            R2, #0x451|64-242-81-66
50416|code|LDR             R1, =aCbufC; "cbuf.c"|26-73
50418|code|LDR             R3, =aCbufMove; "cbuf_move"|27-75
50420|code|BLX             __assert_fail|253-247-48-236
50424|code|MOVS            R6, #0|0-38
50426|code|BL              sub_A8BC|254-247-223-249
50430|code|MOV             R0, R6|48-70
50432|code|POP             {R3-R7,PC}|248-189
50434|code|BLX             __errno_location|253-247-80-235
50438|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
50442|code|MOVS            R3, #0x16|22-35
50444|code|STR             R3, [R0]|3-96
50446|code|B               loc_C49A|196-231
50448|code|LDR             R0, =aSrcVoid0; "src != ((void *)0)"|20-72
50450|code|MOVW            R2, #0x429|64-242-41-66
50454|code|LDR             R1, =aCbufC; "cbuf.c"|17-73
50456|code|LDR             R3, =aCbufMove; "cbuf_move"|17-75
50458|code|BLX             __assert_fail|253-247-30-236
50462|code|LDR             R0, =aDstVoid0; "dst != ((void *)0)"|18-72
50464|code|MOVW            R2, #0x42A|64-242-42-66
50468|code|LDR             R1, =aCbufC; "cbuf.c"|13-73
50470|code|LDR             R3, =aCbufMove; "cbuf_move"|14-75
50472|code|BLX             __assert_fail|253-247-22-236
50476|code|LDR             R0, =aCbufIsValidDst; "cbuf_is_valid (dst)"|10-72
50478|code|MOVW            R2, #0x445|64-242-69-66
50482|code|LDR             R1, =aCbufC; "cbuf.c"|10-73
50484|code|LDR             R3, =aCbufMove; "cbuf_move"|10-75
50486|code|BLX             __assert_fail|253-247-16-236
50490|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|12-72
50492|code|MOV.W           R2, #0x450|79-244-138-98
50496|code|LDR             R1, =aCbufC; "cbuf.c"|6-73
50498|code|LDR             R3, =aCbufMove; "cbuf_move"|7-75
50500|code|BLX             __assert_fail|253-247-8-236
50504|code|LDR             R0, =aCbufIsValidSrc; "cbuf_is_valid (src)"|8-72
50506|code|MOVW            R2, #0x444|64-242-68-66
50510|code|LDR             R1, =aCbufC; "cbuf.c"|3-73
50512|code|LDR             R3, =aCbufMove; "cbuf_move"|3-75
50514|code|BLX             __assert_fail|253-247-2-236
50518|data|ALIGN 4|0-191
50520|data|DCD aCbufIsValidDst; "cbuf_is_valid (dst)"|212-128-1-0
50524|data|DCD aCbufC; "cbuf.c"|100-123-1-0
50528|data|DCD aCbufMove; "cbuf_move"|68-123-1-0
50532|data|DCD aSrcVoid0; "src != ((void *)0)"|80-123-1-0
50536|data|DCD aDstVoid0; "dst != ((void *)0)"|136-123-1-0
50540|data|DCD aCbufIsValidSrc; "cbuf_is_valid (src)"|192-128-1-0
50544|code|LDR             R0, [R0,#0x24]|64-106
50546|code|LDR             R3, [R1]|11-104
50548|code|SUBS            R3, R0, R3|195-26
50550|code|NEGS            R0, R3|88-66
50552|code|ADC.W           R0, R0, R3|64-235-3-0
50556|code|BX              LR|112-71
50558|data|ALIGN 0x10|0-191
50560|code|PUSH            {R1-R3}|14-180
50562|code|PUSH            {R4,R5,LR}|48-181
50564|code|SUB             SP, SP, #8|130-176
50566|code|ADD             R3, SP, #0x20+varg_r1|5-171
50568|code|MOV             R5, R0|5-70
50570|code|LDR.W           R0, [R3],#4|83-248-4-11
50574|code|MOV             R1, R3|25-70
50576|code|STR             R3, [SP,#0x20+var_1C]|1-147
50578|code|BL              sub_15F50|9-240-221-252
50582|code|MOV             R4, R0|4-70
50584|code|BLX             strlen|253-247-218-234
50588|code|MOV             R1, R4|33-70
50590|code|MOV             R3, SP|107-70
50592|code|MOV             R2, R0|2-70
50594|code|LDR             R0, [R5,#0x18]; s2|168-105
50596|code|BL              sub_BA38|255-247-72-250
50600|code|CMP             R0, #0|0-40
50602|code|MOV             R2, R0|2-70
50604|code|BLT             loc_C5CC|14-219
50606|code|LDR             R2, [SP,#0x20+var_20]|0-154
50608|code|CMP             R2, #0|0-42
50610|code|BLE             loc_C5BC|3-221
50612|code|MOVS            R0, #0|0-32
50614|code|LDR             R1, =aClientPrintfCb; "_client_printf: cbuf_write dropped %d c"...|8-73
50616|code|BL              err|6-240-156-250
50620|code|MOV             R0, R4|32-70
50622|code|BL              sub_1687C|10-240-93-249
50626|code|ADD             SP, SP, #8|2-176
50628|code|POP.W           {R4,R5,LR}|189-232-48-64
50632|code|ADD             SP, SP, #0xC|3-176
50634|code|BX              LR|112-71
50636|code|MOVS            R0, #1|1-32
50638|code|LDR             R1, =aClientPrintfCb_0; "_client_printf: cbuf_write returned %d"|3-73
50640|code|BL              err|6-240-144-250
50644|code|B               loc_C5BC|242-231
50646|data|ALIGN 4|0-191
50648|data|DCD aClientPrintfCb; "_client_printf: cbuf_write dropped %d c"...|8-130-1-0
50652|data|DCD aClientPrintfCb_0; "_client_printf: cbuf_write returned %d"|224-129-1-0
50656|code|PUSH            {R4,LR}|16-181
50658|code|MOV             R4, R0|4-70
50660|code|LDR             R0, [R0,#4]|64-104
50662|code|CBZ             R0, loc_C5EC|8-177
50664|code|BL              sub_145A0|7-240-218-255
50668|code|LDR             R0, [R4,#0x10]|32-105
50670|code|CBZ             R0, loc_C5F4|8-177
50672|code|BL              sub_A2F4|253-247-128-254
50676|code|MOV             R0, R4|32-70
50678|code|POP.W           {R4,LR}|189-232-16-64
50682|code|B.W             sub_1687C|10-240-63-185
50686|data|ALIGN 0x10|0-191
50688|code|LDR             R3, [R0]|3-104
50690|code|PUSH            {R4,LR}|16-181
50692|code|CMP.W           R3, #0xDADADADA|179-241-218-63
50696|code|MOV             R4, R0|4-70
50698|code|BNE             loc_C69A|70-209
50700|code|LDR             R2, [R0,#4]|66-104
50702|code|ADDS            R0, R2, #1|80-28
50704|code|BEQ             loc_C62A|11-208
50706|code|MOVS            R0, #4|4-32
50708|code|LDR             R1, =aDestroyClientC; "_destroy_client: closing fd %d"|36-73
50710|code|BL              sub_127FC|6-240-241-248
50714|code|LDR             R0, [R4,#4]; fd|96-104
50716|code|BLX             close|253-247-138-235
50720|code|CMP             R0, #0|0-40
50722|code|BLT             loc_C68E|52-219
50724|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
50728|code|STR             R3, [R4,#4]|99-96
50730|code|LDR             R2, [R4,#8]|162-104
50732|code|ADDS            R1, R2, #1|81-28
50734|code|BEQ             loc_C648|11-208
50736|code|MOVS            R0, #4|4-32
50738|code|LDR             R1, =aDestroyClientC; "_destroy_client: closing fd %d"|29-73
50740|code|BL              sub_127FC|6-240-226-248
50744|code|LDR             R0, [R4,#8]; fd|160-104
50746|code|BLX             close|253-247-124-235
50750|code|CMP             R0, #0|0-40
50752|code|BLT             loc_C682|31-219
50754|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
50758|code|STR             R3, [R4,#8]|163-96
50760|code|LDR             R0, [R4,#0x18]|160-105
50762|code|CBZ             R0, loc_C650|8-177
50764|code|BL              sub_B3A0|254-247-168-254
50768|code|LDR             R0, [R4,#0x1C]|224-105
50770|code|CBZ             R0, loc_C658|8-177
50772|code|BL              sub_B3A0|254-247-164-254
50776|code|LDR             R0, [R4,#0x20]|32-106
50778|code|CBZ             R0, loc_C660|8-177
50780|code|BL              sub_C5E0|255-247-192-255
50784|code|LDR             R0, [R4,#0xC]|224-104
50786|code|CBZ             R0, loc_C668|8-177
50788|code|BL              sub_1687C|10-240-10-249
50792|code|LDR             R0, [R4,#0x14]|96-105
50794|code|CBZ             R0, loc_C670|8-177
50796|code|BL              sub_1687C|10-240-6-249
50800|code|MOV             R0, R4|32-70
50802|code|BL              sub_1687C|10-240-3-249
50806|code|LDR             R3, =dword_24A30|13-75
50808|code|LDR             R2, [R3]|26-104
50810|code|CBZ             R2, locret_C680|10-177
50812|code|MOVS            R2, #1|1-34
50814|code|STR             R2, [R3,#(dword_24A34 - 0x24A30)]|90-96
50816|code|POP             {R4,PC}|16-189
50818|code|LDR             R2, [R4,#8]|162-104
50820|code|MOVS            R0, #1|1-32
50822|code|LDR             R1, =aCloseFdD; "close fd %d"|10-73
50824|code|BL              err|6-240-52-250
50828|code|B               loc_C642|217-231
50830|code|LDR             R2, [R4,#4]|98-104
50832|code|MOVS            R0, #1|1-32
50834|code|LDR             R1, =aCloseFdD; "close fd %d"|7-73
50836|code|BL              err|6-240-46-250
50840|code|B               loc_C624|196-231
50842|code|LDR             R0, =aCMagic0xdadada; "c->magic == 0xdadadada"|6-72
50844|code|MOVW            R2, #0x2CE; line|64-242-206-34
50848|code|LDR             R1, =aClientC; "client.c"|5-73
50850|code|LDR             R3, =aDestroyClient; "_destroy_client"|6-75
50852|code|BLX             __assert_fail|253-247-88-235
50856|data|DCD aDestroyClientC; "_destroy_client: closing fd %d"|88-130-1-0
50860|data|DCD dword_24A30|48-74-2-0
50864|data|DCD aCloseFdD; "close fd %d"|120-130-1-0
50868|data|DCD aCMagic0xdadada; "c->magic == 0xdadadada"|52-130-1-0
50872|data|DCD aClientC; "client.c"|76-130-1-0
50876|data|DCD aDestroyClient; "_destroy_client"|36-129-1-0
50880|code|PUSH.W          {R4-R11,LR}|45-233-240-79
50884|code|SUB.W           SP, SP, #0x2000|173-245-0-93
50888|code|LDR             R7, =__stack_chk_guard|73-79
50890|code|SUB             SP, SP, #0x14|133-176
50892|code|ADD.W           R2, SP, #0x2038+var_38|13-245-0-82
50896|code|MOV             R8, R0|128-70
50898|code|ADDS            R2, #0xC|12-50
50900|code|MOV             R0, R1|8-70
50902|code|LDR             R3, [R7]|59-104
50904|code|MOV             R9, R1|137-70
50906|code|STR             R3, [R2]|19-96
50908|code|BL              sub_14BB8|8-240-108-250
50912|code|MOV             R5, R0|5-70
50914|code|CMP             R0, #0|0-40
50916|code|BEQ             loc_C75E|59-208
50918|code|BL              sub_122C4|5-240-237-253
50922|code|MOVS            R0, #0|0-32
50924|code|BL              sub_14BB8|8-240-100-250
50928|code|MOV             R6, R0|6-70
50930|code|CMP             R0, #0|0-40
50932|code|BEQ             loc_C7C6|103-208
50934|code|MOV             R0, R5|40-70
50936|code|BL              sub_13D58|7-240-46-251
50940|code|MOV             R4, R0|4-70
50942|code|CMP             R0, #0|0-40
50944|code|BEQ             loc_C7D6|105-208
50946|code|MOVS            R3, #1|1-35
50948|code|STR             R3, [SP,#0x2038+var_2034]|1-147
50950|code|B               loc_C70E|2-224
50952|code|MOV             R0, R10; ptr|80-70
50954|code|BLX             free|253-247-48-233
50958|code|MOV             R0, R4|32-70
50960|code|BL              sub_14C2C|8-240-140-250
50964|code|MOV             R10, R0|130-70
50966|code|CBZ             R0, loc_C732|96-177
50968|code|MOV             R0, R10|80-70
50970|code|BL              sub_120A4|5-240-195-252
50974|code|MOV             R11, R0|131-70
50976|code|CMP             R0, #0|0-40
50978|code|BNE             loc_C708|241-209
50980|code|MOV             R0, R6|48-70
50982|code|MOV             R1, R10|81-70
50984|code|BL              sub_13764|7-240-28-248
50988|code|STR.W           R11, [SP,#0x2038+var_2034]|205-248-4-176
50992|code|B               loc_C708|234-231
50994|code|LDR             R2, [SP,#0x2038+var_2034]|1-154
50996|code|CMP             R2, #0|0-42
50998|code|BEQ             loc_C794|45-208
51000|code|MOV             R0, R4|32-70
51002|code|BL              sub_144F8|7-240-221-254
51006|code|MOV             R0, R6|48-70
51008|code|BL              sub_145A0|7-240-46-255
51012|code|ADD.W           R3, SP, #0x2038+var_38|13-245-0-83
51016|code|MOV             R0, R5|40-70
51018|code|ADDS            R3, #0xC|12-51
51020|code|LDR             R2, [R3]|26-104
51022|code|LDR             R3, [R7]|59-104
51024|code|CMP             R2, R3|154-66
51026|code|BNE             loc_C7EC|75-209
51028|code|ADD             SP, SP, #0x14|5-176
51030|code|ADD.W           SP, SP, #0x2000|13-245-0-93
51034|code|POP.W           {R4-R11,PC}|189-232-240-143
51038|code|BLX             __errno_location|253-247-34-234
51042|code|LDR             R3, [R0]|3-104
51044|code|MOV             R0, R8|64-70
51046|code|SUB.W           LR, R3, #0x22 ; '"'|163-241-34-14
51050|code|RSBS.W          R2, LR, #0|222-241-0-2
51054|code|ADC.W           R2, R2, LR|66-235-14-2
51058|code|CMP             R3, #0x16|22-43
51060|code|ITE NE|20-191
51062|code|MOVNE           R3, R2|19-70
51064|code|ORREQ.W         R3, R2, #1|66-240-1-3
51068|code|CBZ             R3, loc_C788|35-177
51070|code|LDR             R1, =a205HostlistErr; "205 Hostlist error: %s\r\n"|29-73
51072|code|LDR             R2, =aInvalidRange; "invalid range"|29-74
51074|code|BL              sub_C580|255-247-253-254
51078|code|B               loc_C744|221-231
51080|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|28-73
51082|code|MOVS            R3, #0xCE|206-35
51084|code|LDR             R2, =aClientC; "client.c"|28-74
51086|code|BL              sub_C580|255-247-247-254
51090|code|B               loc_C744|215-231
51092|code|ADD             R2, SP, #0x2038+var_202C|3-170
51094|code|MOV.W           R1, #0x2000|79-244-0-81
51098|code|MOV             R0, R6|48-70
51100|code|BL              sub_13C80|7-240-112-250
51104|code|LDR             R1, =a209NoSuchNodes; "209 No such nodes: %s\r\n"|24-73
51106|code|ADDS            R0, #1|1-48
51108|code|MOV             R0, R8|64-70
51110|code|ITE NE|20-191
51112|code|ADDNE           R2, SP, #0x2038+var_202C|3-170
51114|code|MOVEQ           R2, R9|74-70
51116|code|BL              sub_C580|255-247-232-254
51120|code|MOV             R0, R4|32-70
51122|code|BL              sub_144F8|7-240-161-254
51126|code|MOV             R0, R5|40-70
51128|code|BL              sub_145A0|7-240-242-254
51132|code|MOV             R0, R6|48-70
51134|code|BL              sub_145A0|7-240-239-254
51138|code|MOVS            R5, #0|0-37
51140|code|B               loc_C744|190-231
51142|code|MOV             R0, R8|64-70
51144|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|12-73
51146|code|LDR             R2, =aClientC; "client.c"|13-74
51148|code|MOVS            R3, #0xD4|212-35
51150|code|BL              sub_C580|255-247-215-254
51154|code|MOV             R5, R6|53-70
51156|code|B               loc_C744|182-231
51158|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|9-73
51160|code|MOVS            R3, #0xD8|216-35
51162|code|LDR             R2, =aClientC; "client.c"|9-74
51164|code|MOV             R0, R8|64-70
51166|code|BL              sub_C580|255-247-207-254
51170|code|MOV             R0, R5|40-70
51172|code|BL              sub_145A0|7-240-220-254
51176|code|MOV             R5, R4|37-70
51178|code|B               loc_C744|171-231
51180|code|BLX             __stack_chk_fail|253-247-244-232
51184|data|DCD __stack_chk_guard|16-74-2-0
51188|data|DCD a205HostlistErr; "205 Hostlist error: %s\r\n"|132-130-1-0
51192|data|DCD aInvalidRange; "invalid range"|160-130-1-0
51196|data|DCD a204InternalPow; "204 Internal powermand error: %s::%d\r"...|176-130-1-0
51200|data|DCD aClientC; "client.c"|76-130-1-0
51204|data|DCD a209NoSuchNodes; "209 No such nodes: %s\r\n"|216-130-1-0
51208|code|PUSH            {R3-R7,LR}|248-181
51210|code|MOV             R5, R0|5-70
51212|code|MOVS            R0, #0x14|20-32
51214|code|MOV             R6, R1|14-70
51216|code|MOV             R7, R2|23-70
51218|code|BL              sub_16730|9-240-141-255
51222|code|MOVS            R3, #0|0-35
51224|code|MOV             R4, R0|4-70
51226|code|STR             R6, [R0]|6-96
51228|code|STR             R3, [R0,#0xC]|195-96
51230|code|STR             R3, [R0,#8]|131-96
51232|code|STR             R3, [R0,#4]|67-96
51234|code|STR             R3, [R0,#0x10]|3-97
51236|code|CBZ             R7, loc_C864|247-177
51238|code|MOV             R0, R5|40-70
51240|code|MOV             R1, R7|57-70
51242|code|BL              sub_C6C0|255-247-73-255
51246|code|MOV             R3, R0|3-70
51248|code|STR             R0, [R4,#4]|96-96
51250|code|CBZ             R0, loc_C870|232-177
51252|code|LDM.W           R4, {R0,R1}|148-232-3-0
51256|code|BL              sub_E5DC|1-240-208-254
51260|code|MOV             R3, R0|3-70
51262|code|CBZ             R0, loc_C850|56-177
51264|code|LDR             R0, [R4,#4]|96-104
51266|code|BL              sub_A318|253-247-105-253
51270|code|MOV             R3, R0|3-70
51272|code|STR             R0, [R4,#0x10]|32-97
51274|code|CBZ             R0, loc_C87A|176-177
51276|code|MOV             R0, R4|32-70
51278|code|POP             {R3-R7,PC}|248-189
51280|code|MOV             R0, R4|32-70
51282|code|MOV             R4, R3|28-70
51284|code|BL              sub_C5E0|255-247-196-254
51288|code|MOV             R0, R5|40-70
51290|code|LDR             R1, =a213CommandCann; "213 Command cannot be handled by power "...|14-73
51292|code|BL              sub_C580|255-247-144-254
51296|code|MOV             R0, R4|32-70
51298|code|POP             {R3-R7,PC}|248-189
51300|code|BL              sub_12278|5-240-8-253
51304|code|BL              sub_136F4|6-240-68-255
51308|code|STR             R0, [R4,#4]|96-96
51310|code|B               loc_C834|225-231
51312|code|MOV             R0, R4|32-70
51314|code|MOV             R4, R3|28-70
51316|code|BL              sub_C5E0|255-247-180-254
51320|code|B               loc_C84C|232-231
51322|code|MOV             R0, R4|32-70
51324|code|MOV             R4, R3|28-70
51326|code|BL              sub_C5E0|255-247-175-254
51330|code|MOV             R0, R5|40-70
51332|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|4-73
51334|code|MOV.W           R3, #0x204|79-244-1-115
51338|code|LDR             R2, =aClientC; "client.c"|4-74
51340|code|BL              sub_C580|255-247-120-254
51344|code|B               loc_C84C|220-231
51346|data|ALIGN 4|0-191
51348|data|DCD a213CommandCann; "213 Command cannot be handled by power "...|240-130-1-0
51352|data|DCD a204InternalPow; "204 Internal powermand error: %s::%d\r"...|176-130-1-0
51356|data|DCD aClientC; "client.c"|76-130-1-0
51360|code|PUSH            {R1-R3}|14-180
51362|code|LDR             R3, =dword_24A30|15-75
51364|code|PUSH            {R4,R5,LR}|48-181
51366|code|SUB             SP, SP, #8|130-176
51368|code|ADD             R2, SP, #0x20+var_18|2-170
51370|code|LDR             R1, =(sub_C570+1)|14-73
51372|code|STR.W           R0, [R2,#-4]!|66-248-4-13
51376|code|LDR             R0, [R3,#(dword_24A38 - 0x24A30)]|152-104
51378|code|BL              sub_1577C|8-240-99-255
51382|code|MOV             R5, R0|5-70
51384|code|CBZ             R0, loc_C8D6|104-177
51386|code|ADD             R1, SP, #0x20+varg_r2|6-169
51388|code|LDR             R0, [SP,#0x20+varg_r1]|5-152
51390|code|STR             R1, [SP,#0x20+var_20]|0-145
51392|code|BL              sub_15F50|9-240-70-251
51396|code|LDR             R1, =a305S; "305 %s\r\n"|8-73
51398|code|MOV             R4, R0|4-70
51400|code|MOV             R0, R5|40-70
51402|code|MOV             R2, R4|34-70
51404|code|BL              sub_C580|255-247-88-254
51408|code|MOV             R0, R4|32-70
51410|code|BL              sub_1687C|9-240-211-255
51414|code|ADD             SP, SP, #8|2-176
51416|code|POP.W           {R4,R5,LR}|189-232-48-64
51420|code|ADD             SP, SP, #0xC|3-176
51422|code|BX              LR|112-71
51424|data|DCD dword_24A30|48-74-2-0
51428|data|DCD sub_C570+1|113-197-0-0
51432|data|DCD a305S; "305 %s\r\n"|44-131-1-0
51436|code|PUSH.W          {R4-R10,LR}|45-233-240-71
51440|code|SUB.W           SP, SP, #0x6000|173-245-192-77
51444|code|LDR             R7, =__stack_chk_guard|100-79
51446|code|SUB             SP, SP, #0x10|132-176
51448|code|MOV             R10, R1|138-70
51450|code|ADD.W           R1, SP, #0x6030+var_30|13-245-192-65
51454|code|ADDS            R1, #0xC|12-49
51456|code|LDR             R3, [R0,#0x20]|3-106
51458|code|LDR             R2, [R7]|58-104
51460|code|MOV             R4, R0|4-70
51462|code|STR             R2, [R1]|10-96
51464|code|CMP             R3, #0|0-43
51466|code|BEQ.W           loc_CA74|0-240-179-128
51470|code|LDR.W           R8, [R0,#0x2C]|208-248-44-128
51474|code|CMP.W           R8, #0|184-241-0-15
51478|code|BEQ             loc_C97A|48-208
51480|code|LDR             R0, [R3,#0x10]|24-105
51482|code|BL              sub_A3C0|253-247-81-253
51486|code|LDR             R6, =aUnknown_0; "unknown"|91-78
51488|code|MOV             R5, R0|5-70
51490|code|B               loc_C942|14-224
51492|code|LDR             R3, [R0,#8]|131-104
51494|code|LDR             R2, [R0]|2-104
51496|code|CMP             R3, #2|2-43
51498|code|IT EQ|8-191
51500|code|LDREQ           R3, =(aBeacon+4); "on"|88-75
51502|code|BEQ             loc_C93A|4-208
51504|code|LDR             R1, =aOff; "off"|88-73
51506|code|CMP             R3, #1|1-43
51508|code|ITE NE|20-191
51510|code|MOVNE           R3, R6|51-70
51512|code|MOVEQ           R3, R1|11-70
51514|code|MOV             R0, R4|32-70
51516|code|LDR             R1, =a303SS; "303 %s: %s\r\n"|86-73
51518|code|BL              sub_C580|255-247-31-254
51522|code|MOV             R0, R5|40-70
51524|code|BL              sub_A3F0|253-247-84-253
51528|code|CMP             R0, #0|0-40
51530|code|BNE             loc_C924|235-209
51532|code|MOV             R0, R5|40-70
51534|code|BL              sub_A3DC|253-247-69-253
51538|code|MOV             R0, R4|32-70
51540|code|CMP.W           R10, #0|186-241-0-15
51544|code|BNE             loc_CA44|116-209
51546|code|LDR             R1, =a103QueryComple; "103 Query complete\r\n"|80-73
51548|code|BL              sub_C580|255-247-16-254
51552|code|ADD.W           R1, SP, #0x6030+var_30|13-245-192-65
51556|code|ADDS            R1, #0xC|12-49
51558|code|LDR             R2, [R1]|10-104
51560|code|LDR             R3, [R7]|59-104
51562|code|CMP             R2, R3|154-66
51564|code|BNE.W           loc_CA82|64-240-137-128
51568|code|ADD             SP, SP, #0x10|4-176
51570|code|ADD.W           SP, SP, #0x6000|13-245-192-77
51574|code|POP.W           {R4-R10,PC}|189-232-240-135
51578|code|MOV             R0, R8|64-70
51580|code|BL              sub_14BB8|8-240-28-249
51584|code|MOV             R6, R0|6-70
51586|code|MOV             R0, R8|64-70
51588|code|BL              sub_14BB8|8-240-24-249
51592|code|MOV             R5, R0|5-70
51594|code|MOV             R0, R8|64-70
51596|code|BL              sub_14BB8|8-240-20-249
51600|code|LDR             R3, [R4,#0x20]|35-106
51602|code|MOV             R8, R0|128-70
51604|code|LDR             R0, [R3,#0x10]|24-105
51606|code|BL              sub_A3C0|253-247-19-253
51610|code|MOV             R9, R0|129-70
51612|code|MOV             R0, R9|72-70
51614|code|BL              sub_A3F0|253-247-39-253
51618|code|CBZ             R0, loc_C9BE|96-177
51620|code|LDR             R3, [R0,#8]|131-104
51622|code|CMP             R3, #1|1-43
51624|code|BEQ             loc_CA5A|87-208
51626|code|BCS             loc_CA4C|79-210
51628|code|LDR             R1, [R0]|1-104
51630|code|MOV             R0, R8|64-70
51632|code|BL              sub_14C04|8-240-40-249
51636|code|MOV             R0, R9|72-70
51638|code|BL              sub_A3F0|253-247-27-253
51642|code|CMP             R0, #0|0-40
51644|code|BNE             loc_C9A4|242-209
51646|code|MOV             R0, R9|72-70
51648|code|BL              sub_A3DC|253-247-12-253
51652|code|MOV             R0, R8|64-70
51654|code|BL              sub_14030|7-240-51-251
51658|code|MOV             R0, R6|48-70
51660|code|BL              sub_14030|7-240-48-251
51664|code|MOV             R0, R5|40-70
51666|code|BL              sub_14030|7-240-45-251
51670|code|ADD.W           R2, SP, #0x6030+var_2030|13-245-128-66
51674|code|ADDS            R2, #0xC|12-50
51676|code|MOV.W           R1, #0x2000|79-244-0-81
51680|code|MOV             R0, R8|64-70
51682|code|BL              sub_13C80|7-240-77-249
51686|code|MOV.W           R1, #0x2000|79-244-0-81
51690|code|ADD             R2, SP, #0x6030+var_6024|3-170
51692|code|MOV             R9, R0|129-70
51694|code|MOV             R0, R6|48-70
51696|code|BL              sub_13C80|7-240-70-249
51700|code|ADD.W           R2, SP, #0x6030+var_4030|13-245-0-82
51704|code|ADDS            R2, #0xC|12-50
51706|code|MOV.W           R1, #0x2000|79-244-0-81
51710|code|ORR.W           R9, R0, R9|64-234-9-9
51714|code|MOV             R0, R5|40-70
51716|code|BL              sub_13C80|7-240-60-249
51720|code|ORR.W           R9, R9, R0|73-234-0-9
51724|code|MOV             R0, R8|64-70
51726|code|BL              sub_145A0|7-240-199-253
51730|code|MOV             R0, R6|48-70
51732|code|BL              sub_145A0|7-240-196-253
51736|code|MOV             R0, R5|40-70
51738|code|BL              sub_145A0|7-240-193-253
51742|code|CMP.W           R9, #0xFFFFFFFF|185-241-255-63
51746|code|BEQ             loc_CA64|31-208
51748|code|ADD.W           R3, SP, #0x6030+var_2030|13-245-128-67
51752|code|MOV             R0, R4|32-70
51754|code|ADDS            R3, #0xC|12-51
51756|code|STR             R3, [SP,#0x6030+var_6030]|0-147
51758|code|ADD.W           R3, SP, #0x6030+var_4030|13-245-0-83
51762|code|LDR             R1, =a302OnS302OffS3; "302 on:      %s\r\n302 off:     %s\r\n3"...|27-73
51764|code|ADD             R2, SP, #0x6030+var_6024|3-170
51766|code|ADDS            R3, #0xC|12-51
51768|code|BL              sub_C580|255-247-162-253
51772|code|MOV             R0, R4|32-70
51774|code|CMP.W           R10, #0|186-241-0-15
51778|code|BEQ             loc_C95A|138-208
51780|code|LDR             R1, =a211QueryComple; "211 Query completed with errors\r\n"|23-73
51782|code|BL              sub_C580|255-247-155-253
51786|code|B               loc_C960|137-231
51788|code|CMP             R3, #2|2-43
51790|code|BNE             loc_C99C|165-209
51792|code|LDR             R1, [R0]|1-104
51794|code|MOV             R0, R6|48-70
51796|code|BL              sub_14C04|8-240-214-248
51800|code|B               loc_C99C|160-231
51802|code|LDR             R1, [R0]|1-104
51804|code|MOV             R0, R5|40-70
51806|code|BL              sub_14C04|8-240-209-248
51810|code|B               loc_C99C|155-231
51812|code|MOV             R0, R4|32-70
51814|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|16-73
51816|code|LDR             R2, =aClientC; "client.c"|16-74
51818|code|MOV.W           R3, #0x1AA|79-244-213-115
51822|code|BL              sub_C580|255-247-135-253
51826|code|B               loc_C960|117-231
51828|code|LDR             R0, =aCCmdVoid0; "c->cmd != ((void *)0)"|14-72
51830|code|MOVW            R2, #0x179; line|64-242-121-18
51834|code|LDR             R1, =aClientC; "client.c"|12-73
51836|code|LDR             R3, =aClientQuerySta; "_client_query_status_reply"|13-75
51838|code|BLX             __assert_fail|253-247-108-233
51842|code|BLX             __stack_chk_fail|252-247-170-239
51846|data|ALIGN 4|0-191
51848|data|DCD __stack_chk_guard|16-74-2-0
51852|data|DCD aUnknown_0; "unknown"|56-131-1-0
51856|data|DCD aBeacon+4; "on"|188-136-1-0
51860|data|DCD aOff; "off"|64-131-1-0
51864|data|DCD a303SS; "303 %s: %s\r\n"|92-131-1-0
51868|data|DCD a103QueryComple; "103 Query complete\r\n"|196-131-1-0
51872|data|DCD a302OnS302OffS3; "302 on:      %s\r\n302 off:     %s\r\n3"...|108-131-1-0
51876|data|DCD a211QueryComple; "211 Query completed with errors\r\n"|160-131-1-0
51880|data|DCD a204InternalPow; "204 Internal powermand error: %s::%d\r"...|176-130-1-0
51884|data|DCD aClientC; "client.c"|76-130-1-0
51888|data|DCD aCCmdVoid0; "c->cmd != ((void *)0)"|68-131-1-0
51892|data|DCD aClientQuerySta; "_client_query_status_reply"|52-129-1-0
51896|code|PUSH.W          {R4-R9,LR}|45-233-240-67
51900|code|SUB.W           SP, SP, #0x2000|173-245-0-93
51904|code|LDR.W           R8, =__stack_chk_guard|223-248-252-128
51908|code|SUB             SP, SP, #0xC|131-176
51910|code|ADD.W           R2, SP, #0x2028+var_28|13-245-0-82
51914|code|MOV             R5, R0|5-70
51916|code|ADDS            R2, #4|4-50
51918|code|MOVS            R0, #0|0-32
51920|code|LDR.W           R3, [R8]|216-248-0-48
51924|code|MOV             R9, R1|137-70
51926|code|STR             R3, [R2]|19-96
51928|code|BL              sub_14BB8|8-240-110-248
51932|code|LDR             R3, [R5,#0x20]|43-106
51934|code|MOV             R7, R0|7-70
51936|code|CMP             R3, #0|0-43
51938|code|BEQ             loc_CB90|85-208
51940|code|LDR             R0, [R3,#0x10]|24-105
51942|code|BL              sub_A3C0|253-247-107-252
51946|code|MOV             R6, R0|6-70
51948|code|B               loc_CB00|8-224
51950|code|LDR             R3, [R4,#4]|99-104
51952|code|MOV             R0, R5|40-70
51954|code|LDR             R2, [R4]|34-104
51956|code|LDR             R1, =a303SS; "303 %s: %s\r\n"|42-73
51958|code|BL              sub_C580|255-247-67-253
51962|code|LDR             R3, [R4,#4]|99-104
51964|code|CMP             R3, #0|0-43
51966|code|BEQ             loc_CB48|35-208
51968|code|MOV             R0, R6|48-70
51970|code|BL              sub_A3F0|253-247-117-252
51974|code|MOV             R4, R0|4-70
51976|code|CMP             R0, #0|0-40
51978|code|BNE             loc_CAEE|240-209
51980|code|MOV             R0, R6|48-70
51982|code|BL              sub_A3DC|253-247-101-252
51986|code|MOV             R0, R7|56-70
51988|code|BL              sub_139F4|6-240-110-255
51992|code|CBNZ            R0, loc_CB5A|248-185
51994|code|MOV             R0, R5|40-70
51996|code|CMP.W           R9, #0|185-241-0-15
52000|code|BNE             loc_CB52|23-209
52002|code|LDR             R1, =a103QueryComple; "103 Query complete\r\n"|32-73
52004|code|BL              sub_C580|255-247-44-253
52008|code|MOV             R0, R7|56-70
52010|code|BL              sub_145A0|7-240-57-253
52014|code|ADD.W           R3, SP, #0x2028+var_28|13-245-0-83
52018|code|ADDS            R3, #4|4-51
52020|code|LDR             R2, [R3]|26-104
52022|code|LDR.W           R3, [R8]|216-248-0-48
52026|code|CMP             R2, R3|154-66
52028|code|BNE             loc_CB8C|38-209
52030|code|ADD             SP, SP, #0xC|3-176
52032|code|ADD.W           SP, SP, #0x2000|13-245-0-93
52036|code|POP.W           {R4-R9,PC}|189-232-240-131
52040|code|LDR             R1, [R4]|33-104
52042|code|MOV             R0, R7|56-70
52044|code|BL              sub_14C04|8-240-90-248
52048|code|B               loc_CB00|214-231
52050|code|LDR             R1, =a211QueryComple; "211 Query completed with errors\r\n"|21-73
52052|code|BL              sub_C580|255-247-20-253
52056|code|B               loc_CB28|230-231
52058|code|MOV             R0, R7|56-70
52060|code|BL              sub_14030|7-240-104-250
52064|code|MOV             R0, R7|56-70
52066|code|MOV.W           R1, #0x2000|79-244-0-81
52070|code|ADD             R2, SP, #0x2028+var_2024|1-170
52072|code|BL              sub_13C80|7-240-138-248
52076|code|ADDS            R0, #1|1-48
52078|code|MOV             R0, R5|40-70
52080|code|BEQ             loc_CB7E|5-208
52082|code|LDR             R1, =a303SS; "303 %s: %s\r\n"|11-73
52084|code|ADD             R2, SP, #0x2028+var_2024|1-170
52086|code|LDR             R3, =aUnknown_0; "unknown"|13-75
52088|code|BL              sub_C580|255-247-2-253
52092|code|B               loc_CB1A|205-231
52094|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|12-73
52096|code|MOV.W           R3, #0x1D0|79-244-232-115
52100|code|LDR             R2, =aClientC; "client.c"|11-74
52102|code|BL              sub_C580|255-247-251-252
52106|code|B               loc_CB28|205-231
52108|code|BLX             __stack_chk_fail|252-247-36-239
52112|code|LDR             R0, =aCCmdVoid0; "c->cmd != ((void *)0)"|9-72
52114|code|MOV.W           R2, #0x1C2; line|79-244-225-114
52118|code|LDR             R1, =aClientC; "client.c"|7-73
52120|code|LDR             R3, =aClientQuerySta_0; "_client_query_status_reply_nointerp"|8-75
52122|code|BLX             __assert_fail|253-247-222-232
52126|data|ALIGN 0x10|0-191
52128|data|DCD a303SS; "303 %s: %s\r\n"|92-131-1-0
52132|data|DCD a103QueryComple; "103 Query complete\r\n"|196-131-1-0
52136|data|DCD a211QueryComple; "211 Query completed with errors\r\n"|160-131-1-0
52140|data|DCD aUnknown_0; "unknown"|56-131-1-0
52144|data|DCD a204InternalPow; "204 Internal powermand error: %s::%d\r"...|176-130-1-0
52148|data|DCD aClientC; "client.c"|76-130-1-0
52152|data|DCD aCCmdVoid0; "c->cmd != ((void *)0)"|68-131-1-0
52156|data|DCD aClientQuerySta_0; "_client_query_status_reply_nointerp"|80-129-1-0
52160|data|DCD __stack_chk_guard|16-74-2-0
52164|code|PUSH            {R2,R3}|12-180
52166|code|LDR             R3, =dword_24A30|60-75
52168|code|PUSH            {R4,R5,LR}|48-181
52170|code|SUB             SP, SP, #0xC|131-176
52172|code|ADD             R2, SP, #0x20+var_18|2-170
52174|code|MOV             R5, R1|13-70
52176|code|LDR             R1, =(sub_C570+1)|58-73
52178|code|STR.W           R0, [R2,#-4]!|66-248-4-13
52182|code|LDR             R0, [R3,#(dword_24A38 - 0x24A30)]|152-104
52184|code|BL              sub_1577C|8-240-208-253
52188|code|MOV             R4, R0|4-70
52190|code|CMP             R0, #0|0-40
52192|code|BEQ             loc_CC44|48-208
52194|code|LDR             R3, [R0]|3-104
52196|code|CMP.W           R3, #0xDADADADA|179-241-218-63
52200|code|BNE             loc_CC9C|88-209
52202|code|LDR             R3, [R0,#0x20]|3-106
52204|code|CMP             R3, #0|0-43
52206|code|BEQ             loc_CCAA|92-208
52208|code|CMP             R5, #0|0-45
52210|code|BNE             loc_CC4E|44-209
52212|code|LDR             R2, [R3,#8]|154-104
52214|code|SUBS            R2, #1|1-58
52216|code|STR             R2, [R3,#8]|154-96
52218|code|CBNZ            R2, loc_CC44|26-187
52220|code|LDR             R2, [R3]|26-104
52222|code|CMP             R2, #0x18|24-42
52224|code|BLS             loc_CC10|6-217
52226|code|LDR             R0, =aFalse; "FALSE"|47-72
52228|code|MOVW            R2, #0x2BD; line|64-242-189-34
52232|code|LDR             R1, =aClientC; "client.c"|46-73
52234|code|LDR             R3, =aActFinish; "_act_finish"|47-75
52236|code|BLX             __assert_fail|253-247-164-232
52240|code|MOVS            R0, #1|1-32
52242|code|MOV             R1, #0x1812480|79-244-18-81-192-242-129-17
52250|code|LSLS.W          R2, R0, R2|16-250-2-242
52254|code|ANDS            R1, R2|17-64
52256|code|CMP             R1, #0|0-41
52258|code|BEQ             loc_CC72|38-208
52260|code|LDR             R3, [R3,#0xC]|219-104
52262|code|MOV             R0, R4|32-70
52264|code|CMP             R3, #0|0-43
52266|code|BEQ             loc_CC94|51-208
52268|code|LDR             R1, =a210CommandComp; "210 Command completed with errors\r\n"|39-73
52270|code|BL              sub_C580|255-247-167-252
52274|code|LDR             R0, [R4,#0x20]|32-106
52276|code|BL              sub_C5E0|255-247-212-252
52280|code|MOVS            R3, #0|0-35
52282|code|MOV             R0, R4|32-70
52284|code|STR             R3, [R4,#0x20]|35-98
52286|code|LDR             R1, =aPowerman; "powerman> "|36-73
52288|code|BL              sub_C580|255-247-158-252
52292|code|ADD             SP, SP, #0xC|3-176
52294|code|POP.W           {R4,R5,LR}|189-232-48-64
52298|code|ADD             SP, SP, #8|2-176
52300|code|BX              LR|112-71
52302|code|ADD             R1, SP, #0x20+varg_r3|7-169
52304|code|LDR             R0, [SP,#0x20+varg_r2]|6-152
52306|code|STR             R1, [SP,#0x20+var_20]|0-145
52308|code|BL              sub_15F50|9-240-124-249
52312|code|LDR             R1, =a308S; "308 %s\r\n"|30-73
52314|code|MOV             R5, R0|5-70
52316|code|MOV             R0, R4|32-70
52318|code|MOV             R2, R5|42-70
52320|code|BL              sub_C580|255-247-142-252
52324|code|MOV             R0, R5|40-70
52326|code|BL              sub_1687C|9-240-9-254
52330|code|LDR             R3, [R4,#0x20]|35-106
52332|code|MOVS            R2, #1|1-34
52334|code|STR             R2, [R3,#0xC]|218-96
52336|code|B               loc_CBF4|192-231
52338|code|MOVS            R1, #0x200004|4-33-192-242-32-1
52344|code|ANDS            R1, R2|17-64
52346|code|CBNZ            R1, loc_CC8A|49-185
52348|code|LSLS            R2, R2, #0xC|18-3
52350|code|BPL             loc_CC02|192-213
52352|code|LDR             R1, [R3,#0xC]|217-104
52354|code|MOV             R0, R4|32-70
52356|code|BL              sub_CAB8|255-247-24-255
52360|code|B               loc_CC32|211-231
52362|code|LDR             R1, [R3,#0xC]|217-104
52364|code|MOV             R0, R4|32-70
52366|code|BL              sub_C8EC|255-247-45-254
52370|code|B               loc_CC32|206-231
52372|code|LDR             R1, =a102CommandComp; "102 Command completed successfully\r\n"|16-73
52374|code|BL              sub_C580|255-247-115-252
52378|code|B               loc_CC32|202-231
52380|code|LDR             R0, =aCMagic0xdadada; "c->magic == 0xdadadada"|15-72
52382|code|MOVW            R2, #0x299; line|64-242-153-34
52386|code|LDR             R1, =aClientC; "client.c"|8-73
52388|code|LDR             R3, =aActFinish; "_act_finish"|8-75
52390|code|BLX             __assert_fail|253-247-88-232
52394|code|LDR             R0, =aCCmdVoid0; "c->cmd != ((void *)0)"|13-72
52396|code|MOVW            R2, #0x29A; line|64-242-154-34
52400|code|LDR             R1, =aClientC; "client.c"|4-73
52402|code|LDR             R3, =aActFinish; "_act_finish"|5-75
52404|code|BLX             __assert_fail|253-247-80-232
52408|data|DCD dword_24A30|48-74-2-0
52412|data|DCD sub_C570+1|113-197-0-0
52416|data|DCD aFalse; "FALSE"|52-132-1-0
52420|data|DCD aClientC; "client.c"|76-130-1-0
52424|data|DCD aActFinish; "_act_finish"|116-129-1-0
52428|data|DCD a210CommandComp; "210 Command completed with errors\r\n"|232-131-1-0
52432|data|DCD aPowerman; "powerman> "|60-132-1-0
52436|data|DCD a308S; "308 %s\r\n"|220-131-1-0
52440|data|DCD a102CommandComp; "102 Command completed successfully\r\n"|12-132-1-0
52444|data|DCD aCMagic0xdadada; "c->magic == 0xdadadada"|52-130-1-0
52448|data|DCD aCCmdVoid0; "c->cmd != ((void *)0)"|68-131-1-0
52452|code|PUSH            {R3-R5,LR}|56-181
52454|code|MOV             R4, R0|4-70
52456|code|LDR             R5, [R0,#8]|133-104
52458|code|LDR             R3, [R0]|3-104
52460|code|ADDS            R1, R5, #1|105-28
52462|code|IT EQ|8-191
52464|code|LDREQ           R5, [R0,#4]|69-104
52466|code|CMP.W           R3, #0xDADADADA|179-241-218-63
52470|code|BNE             loc_CD32|28-209
52472|code|LDR             R3, [R0,#0x30]|3-107
52474|code|CBNZ            R3, loc_CD0E|67-185
52476|code|LDR             R0, [R4,#0x18]; s2|160-105
52478|code|MOV             R1, R5|41-70
52480|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
52484|code|BL              sub_C178|255-247-56-250
52488|code|CMP             R0, #0|0-40
52490|code|BLT             loc_CD24|11-219
52492|code|POP             {R3-R5,PC}|56-189
52494|code|MOV             R0, R5|40-70
52496|code|BL              sub_16E1C|10-240-132-248
52500|code|LDR             R0, [R4,#0x18]; s2|160-105
52502|code|MOV             R1, R5|41-70
52504|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
52508|code|BL              sub_C178|255-247-44-250
52512|code|CMP             R0, #0|0-40
52514|code|BGE             locret_CD0C|243-218
52516|code|MOVS            R0, #1|1-32
52518|code|LDR             R1, =aWriteErrorOnCl; "write error on client"|6-73
52520|code|BL              err|5-240-228-254
52524|code|MOVS            R3, #1|1-35
52526|code|STR             R3, [R4,#0x30]|35-99
52528|code|POP             {R3-R5,PC}|56-189
52530|code|LDR             R0, =aCMagic0xdadada; "c->magic == 0xdadadada"|4-72
52532|code|MOVW            R2, #0x3ED; line|64-242-237-50
52536|code|LDR             R1, =aClientC; "client.c"|3-73
52538|code|LDR             R3, =aHandleWrite; "_handle_write"|4-75
52540|code|BLX             __assert_fail|253-247-12-232
52544|data|DCD aWriteErrorOnCl; "write error on client"|72-132-1-0
52548|data|DCD aCMagic0xdadada; "c->magic == 0xdadadada"|52-130-1-0
52552|data|DCD aClientC; "client.c"|76-130-1-0
52556|data|DCD aHandleWrite; "_handle_write"|128-129-1-0
52560|code|PUSH.W          {R4-R8,LR}|45-233-240-65
52564|code|SUB.W           SP, SP, #0x104000|173-245-130-29
52568|code|SUB             SP, SP, #0x18|134-176
52570|code|LDR             R7, =__stack_chk_guard|110-79
52572|code|ADD.W           R2, SP, #0x104030+var_4030|13-245-128-18
52576|code|MOV             R4, R0|4-70
52578|code|ADDS            R2, #0x18|24-50
52580|code|SUBS            R6, R2, #4|22-31
52582|code|LDR             R3, [R7]|59-104
52584|code|ADD.W           R2, SP, #0x104030+var_30|13-245-130-18
52588|code|ADDS            R2, #0x14|20-50
52590|code|STR             R3, [R2]|19-96
52592|code|MOV.W           R2, #0x100000|79-244-128-18
52596|code|MOVS            R3, #1|1-35
52598|code|LDR             R0, [R4,#0x1C]|224-105
52600|code|ADD             R1, SP, #0x104030+s|5-169
52602|code|BL              sub_BC64|254-247-115-255
52606|code|CMP             R0, #0|0-40
52608|code|MOV             R2, R0|2-70
52610|code|BLE             loc_CE16|72-221
52612|code|ADD             R0, SP, #0x104030+s; s|5-168
52614|code|ADD             R5, SP, #0x104030+s|5-173
52616|code|BLX             strlen|252-247-226-238
52620|code|LDRB.W          R3, [SP,#0x104030+s]|157-248-20-48
52624|code|ADD             R2, SP, #0x104030+s|5-170
52626|code|ADD.W           R8, R0, #0xFFFFFFFF|0-241-255-56
52630|code|ADD             R8, R2|144-68
52632|code|CBZ             R3, loc_CDBA|123-177
52634|code|STR             R3, [SP,#0x104030+var_104024]|3-147
52636|code|BLX             __ctype_b_loc|252-247-192-238
52640|code|ADD             R2, SP, #0x104030+s|5-170
52642|code|LDR             R3, [SP,#0x104030+var_104024]|3-155
52644|code|MOV             R5, R2|21-70
52646|code|LDR             R1, [R0]|1-104
52648|code|B               loc_CDB2|3-224
52650|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
52654|code|ADDS            R5, #1|1-53
52656|code|CBZ             R3, loc_CDBA|27-177
52658|code|LDRH.W          R3, [R1,R3,LSL#1]|49-248-19-48
52662|code|LSLS            R3, R3, #0x12|155-4
52664|code|BMI             loc_CDAA|247-212
52666|code|CMP             R8, R5|168-69
52668|code|BLS             loc_CDDC|14-217
52670|code|BLX             __ctype_b_loc|252-247-176-238
52674|code|MOVS            R1, #0|0-33
52676|code|LDR             R2, [R0]|2-104
52678|code|B               loc_CDD0|3-224
52680|code|CMP             R8, R5|168-69
52682|code|STRB.W          R1, [R8,#1]|136-248-1-16
52686|code|BEQ             loc_CDDC|5-208
52688|code|LDRB.W          R3, [R8],#-1|24-248-1-57
52692|code|LDRH.W          R3, [R2,R3,LSL#1]|50-248-19-48
52696|code|LSLS            R0, R3, #0x12|152-4
52698|code|BMI             loc_CDC8|245-212
52700|code|MOVS            R1, #0; c|0-33
52702|code|MOV.W           R2, #0x2000; n|79-244-0-82
52706|code|MOV             R0, R6; s|48-70
52708|code|BLX             memset|252-247-8-239
52712|code|MOV             R0, R5; s|40-70
52714|code|BLX             strlen|252-247-178-238
52718|code|CMP.W           R0, #0x2000|176-245-0-95
52722|code|BCS             loc_CE34|31-210
52724|code|LDR             R3, [R4,#0x20]|35-106
52726|code|CMP             R3, #0|0-43
52728|code|BEQ             loc_CE4C|40-208
52730|code|MOV             R0, R4|32-70
52732|code|LDR             R1, =a208CommandInPr; "208 Command in progress\r\n"|70-73
52734|code|BL              sub_C580|255-247-191-251
52738|code|MOV.W           R2, #0x100000|79-244-128-18
52742|code|MOVS            R3, #1|1-35
52744|code|LDR             R0, [R4,#0x1C]|224-105
52746|code|ADD             R1, SP, #0x104030+s|5-169
52748|code|BL              sub_BC64|254-247-42-255
52752|code|CMP             R0, #0|0-40
52754|code|MOV             R2, R0|2-70
52756|code|BGT             loc_CD84|182-220
52758|code|BNE.W           loc_D072|64-240-44-129
52762|code|ADD.W           R3, SP, #0x104030+var_30|13-245-130-19
52766|code|ADDS            R3, #0x14|20-51
52768|code|LDR             R2, [R3]|26-104
52770|code|LDR             R3, [R7]|59-104
52772|code|CMP             R2, R3|154-66
52774|code|BNE.W           loc_D1C4|64-240-205-129
52778|code|ADD             SP, SP, #0x18|6-176
52780|code|ADD.W           SP, SP, #0x104000|13-245-130-29
52784|code|POP.W           {R4-R8,PC}|189-232-240-129
52788|code|MOV             R0, R4|32-70
52790|code|LDR             R1, =a203CommandTooL; "203 Command too long\r\n"|57-73
52792|code|BL              sub_C580|255-247-162-251
52796|code|LDR             R3, [R4,#0x30]|35-107
52798|code|CMP             R3, #0|0-43
52800|code|BNE             loc_CD70|150-209
52802|code|MOV             R0, R4|32-70
52804|code|LDR             R1, =aPowerman; "powerman> "|54-73
52806|code|BL              sub_C580|255-247-155-251
52810|code|B               loc_CD70|145-231
52812|code|MOV             R0, R5; s1|40-70
52814|code|LDR             R1, =aHelp; "help"|53-73
52816|code|MOVS            R2, #4; n|4-34
52818|code|BLX             strncasecmp|252-247-174-238
52822|code|CBZ             R0, loc_CE92|224-177
52824|code|MOV             R0, R5; s1|40-70
52826|code|LDR             R1, =aNodes; "nodes"|51-73
52828|code|MOVS            R2, #5; n|5-34
52830|code|BLX             strncasecmp|252-247-168-238
52834|code|CMP             R0, #0|0-40
52836|code|BEQ             loc_CED2|53-208
52838|code|MOV             R0, R5; s1|40-70
52840|code|LDR             R1, =aTelemetry; "telemetry"|48-73
52842|code|MOVS            R2, #9; n|9-34
52844|code|BLX             strncasecmp|252-247-160-238
52848|code|CBNZ            R0, loc_CEA4|192-185
52850|code|LDR             R3, [R4,#0x28]|163-106
52852|code|MOV             R0, R4|32-70
52854|code|LDR             R1, =aOff_0; "OFF"|46-73
52856|code|RSBS.W          R3, R3, #1|211-241-1-3
52860|code|LDR             R2, =(aAuthentication+0xC); "ON"|45-74
52862|code|IT CC|56-191
52864|code|MOVCC           R3, #0|0-35
52866|code|CMP             R3, #0|0-43
52868|code|IT EQ|8-191
52870|code|MOVEQ           R2, R1|10-70
52872|code|STR             R3, [R4,#0x28]|163-98
52874|code|LDR             R1, =a104TelemetryS; "104 Telemetry %s\r\n"|43-73
52876|code|BL              sub_C580|255-247-120-251
52880|code|B               loc_CE3C|212-231
52882|code|MOV             R0, R4|32-70
52884|code|LDR             R1, =a301NodesQueryN; "301 nodes              - query node lis"...|41-73
52886|code|BL              sub_C580|255-247-115-251
52890|code|MOV             R0, R4|32-70
52892|code|LDR             R1, =a103QueryComple; "103 Query complete\r\n"|40-73
52894|code|BL              sub_C580|255-247-111-251
52898|code|B               loc_CE3C|203-231
52900|code|MOV             R0, R5; s1|40-70
52902|code|LDR             R1, =aExprange; "exprange"|39-73
52904|code|MOVS            R2, #8; n|8-34
52906|code|BLX             strncasecmp|252-247-130-238
52910|code|CMP             R0, #0|0-40
52912|code|BNE             loc_CF50|78-209
52914|code|LDR             R3, [R4,#0x2C]|227-106
52916|code|MOV             R0, R4|32-70
52918|code|LDR             R1, =aOff_0; "OFF"|30-73
52920|code|RSBS.W          R3, R3, #1|211-241-1-3
52924|code|LDR             R2, =(aAuthentication+0xC); "ON"|29-74
52926|code|IT CC|56-191
52928|code|MOVCC           R3, #0|0-35
52930|code|CMP             R3, #0|0-43
52932|code|IT EQ|8-191
52934|code|MOVEQ           R2, R1|10-70
52936|code|STR             R3, [R4,#0x2C]|227-98
52938|code|LDR             R1, =a105HostrangeEx; "105 Hostrange expansion %s\r\n"|31-73
52940|code|BL              sub_C580|255-247-88-251
52944|code|B               loc_CE3C|180-231
52946|code|BL              sub_12278|5-240-209-249
52950|code|MOV             R5, R0|5-70
52952|code|BL              sub_14030|7-240-170-248
52956|code|LDR             R3, [R4,#0x2C]|227-106
52958|code|MOV             R0, R5|40-70
52960|code|CMP             R3, #0|0-43
52962|code|BEQ.W           loc_D040|0-240-173-128
52966|code|BL              sub_13D58|6-240-55-255
52970|code|MOV             R8, R0|128-70
52972|code|CBNZ            R0, loc_CF00|64-185
52974|code|B               loc_D12C|29-225
52976|code|MOV             R0, R4|32-70
52978|code|LDR             R1, =a307S; "307 %s\r\n"|22-73
52980|code|MOV             R2, R5|42-70
52982|code|BL              sub_C580|255-247-67-251
52986|code|MOV             R0, R5; ptr|40-70
52988|code|BLX             free|252-247-54-237
52992|code|MOV             R0, R8|64-70
52994|code|BL              sub_14C2C|7-240-147-254
52998|code|MOV             R5, R0|5-70
53000|code|CMP             R0, #0|0-40
53002|code|BNE             loc_CEF0|241-209
53004|code|MOV             R0, R8|64-70
53006|code|BL              sub_144F8|7-240-243-250
53010|code|B               loc_D068|169-224
53012|data|DCD __stack_chk_guard|16-74-2-0
53016|data|DCD a208CommandInPr; "208 Command in progress\r\n"|224-132-1-0
53020|data|DCD a203CommandTooL; "203 Command too long\r\n"|200-132-1-0
53024|data|DCD aPowerman; "powerman> "|60-132-1-0
53028|data|DCD aHelp; "help"|52-120-1-0
53032|data|DCD aNodes; "nodes"|8-180-1-0
53036|data|DCD aTelemetry; "telemetry"|236-135-1-0
53040|data|DCD aOff_0; "OFF"|196-132-1-0
53044|data|DCD aAuthentication+0xC; "ON"|60-155-1-0
53048|data|DCD a104TelemetryS; "104 Telemetry %s\r\n"|248-135-1-0
53052|data|DCD a301NodesQueryN; "301 nodes              - query node lis"...|252-132-1-0
53056|data|DCD a103QueryComple; "103 Query complete\r\n"|196-131-1-0
53060|data|DCD aExprange; "exprange"|12-136-1-0
53064|data|DCD a105HostrangeEx; "105 Hostrange expansion %s\r\n"|24-136-1-0
53068|data|DCD a307S; "307 %s\r\n"|212-135-1-0
53072|code|MOV             R0, R5; s1|40-70
53074|code|LDR             R1, =aQuit; "quit"|164-73
53076|code|MOVS            R2, #4; n|4-34
53078|code|BLX             strncasecmp|252-247-44-238
53082|code|CMP             R0, #0|0-40
53084|code|BEQ.W           loc_D07C|0-240-142-128
53088|code|MOV             R0, R5|40-70
53090|code|LDR             R1, =aOnS; "on %s"|161-73
53092|code|MOV             R2, R6|50-70
53094|code|BLX             __isoc99_sscanf|252-247-48-238
53098|code|CMP             R0, #1|1-40
53100|code|BEQ.W           loc_D09E|0-240-151-128
53104|code|MOV             R0, R5|40-70
53106|code|LDR             R1, =aOffS; "off %s"|158-73
53108|code|MOV             R2, R6|50-70
53110|code|BLX             __isoc99_sscanf|252-247-40-238
53114|code|CMP             R0, #1|1-40
53116|code|BEQ.W           loc_D0CC|0-240-166-128
53120|code|MOV             R0, R5|40-70
53122|code|LDR             R1, =aCycleS; "cycle %s"|155-73
53124|code|MOV             R2, R6|50-70
53126|code|BLX             __isoc99_sscanf|252-247-32-238
53130|code|CMP             R0, #1|1-40
53132|code|BEQ.W           loc_D0DA|0-240-165-128
53136|code|MOV             R0, R5|40-70
53138|code|LDR             R1, =aResetS; "reset %s"|152-73
53140|code|MOV             R2, R6|50-70
53142|code|BLX             __isoc99_sscanf|252-247-24-238
53146|code|CMP             R0, #1|1-40
53148|code|BEQ.W           loc_D0E8|0-240-164-128
53152|code|MOV             R0, R5|40-70
53154|code|LDR             R1, =aFlashS; "flash %s"|149-73
53156|code|MOV             R2, R6|50-70
53158|code|BLX             __isoc99_sscanf|252-247-16-238
53162|code|CMP             R0, #1|1-40
53164|code|BEQ.W           loc_D0BE|0-240-135-128
53168|code|MOV             R0, R5|40-70
53170|code|LDR             R1, =aUnflashS; "unflash %s"|146-73
53172|code|MOV             R2, R6|50-70
53174|code|BLX             __isoc99_sscanf|252-247-8-238
53178|code|CMP             R0, #1|1-40
53180|code|BEQ.W           loc_D11E|0-240-175-128
53184|code|MOV             R0, R5|40-70
53186|code|LDR             R1, =aStatusS; "status %s"|143-73
53188|code|MOV             R2, R6|50-70
53190|code|BLX             __isoc99_sscanf|252-247-0-238
53194|code|CMP             R0, #1|1-40
53196|code|BEQ.W           loc_D1B6|0-240-243-128
53200|code|MOVS            R2, #6; n|6-34
53202|code|MOV             R0, R5; s1|40-70
53204|code|LDR             R1, =aStatus; "status"|139-73
53206|code|BLX             strncasecmp|252-247-236-237
53210|code|MOV             R2, R0|2-70
53212|code|CMP             R0, #0|0-40
53214|code|BNE.W           loc_D0F6|64-240-138-128
53218|code|MOV             R0, R4|32-70
53220|code|MOVS            R1, #2|2-33
53222|code|BL              sub_C808|255-247-15-252
53226|code|MOV             R5, R0|5-70
53228|code|CMP             R5, #0|0-45
53230|code|BEQ.W           loc_CE3C|63-244-37-175
53234|code|LDR             R3, [R5,#4]|107-104
53236|code|CMP             R3, #0|0-43
53238|code|BEQ.W           loc_D1D6|0-240-238-128
53242|code|MOVS            R0, #4|4-32
53244|code|LDR             R1, =aParseInputEnqu; "_parse_input: enqueuing actions"|130-73
53246|code|BL              sub_127FC|5-240-253-251
53250|code|LDR             R2, [R4,#0x24]|98-106
53252|code|LDR.W           LR, [R4,#0x28]|212-248-40-224
53256|code|LDR             R3, =(sub_C8A0+1)|128-75
53258|code|LDM.W           R5, {R0,R1}|149-232-3-0
53262|code|CMP.W           LR, #0|190-241-0-15
53266|code|IT EQ|8-191
53268|code|MOVEQ           R3, #0|0-35
53270|code|STR             R2, [SP,#0x104030+var_104030]|0-146
53272|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
53276|code|LDR             R2, =(sub_CBC4+1)|124-74
53278|code|STR.W           LR, [SP,#0x104030+var_10402C]|205-248-4-224
53282|code|BL              sub_E66C|1-240-35-251
53286|code|MOV             R8, R0|128-70
53288|code|STR             R0, [R5,#8]|168-96
53290|code|CMP             R0, #0|0-40
53292|code|BEQ             loc_D0AC|62-208
53294|code|LDR             R3, [R4,#0x20]|35-106
53296|code|CMP             R3, #0|0-43
53298|code|BNE.W           loc_D1C8|64-240-201-128
53302|code|STR             R5, [R4,#0x20]|37-98
53304|code|CMP             R5, #0|0-45
53306|code|BNE.W           loc_CD70|127-244-153-174
53310|code|B               loc_CE3C|253-230
53312|code|MOV             R2, #0x102014|66-242-20-2-192-242-16-2
53320|code|MOV.W           R1, #0x2000|79-244-0-81
53324|code|ADD             R2, SP|106-68
53326|code|BL              sub_13C80|6-240-23-254
53330|code|ADDS            R0, #1|1-48
53332|code|MOV             R0, R4|32-70
53334|code|BEQ             loc_D090|27-208
53336|code|MOV             R2, #0x102014|66-242-20-2-192-242-16-2
53344|code|LDR             R1, =a306S; "306 %s\r\n"|108-73
53346|code|ADD             R2, SP|106-68
53348|code|BL              sub_C580|255-247-140-250
53352|code|MOV             R0, R4|32-70
53354|code|LDR             R1, =a103QueryComple; "103 Query complete\r\n"|107-73
53356|code|BL              sub_C580|255-247-136-250
53360|code|B               loc_CE3C|228-230
53362|code|MOVS            R0, #1|1-32
53364|code|LDR             R1, =aClientCbufRead; "client cbuf_read_line returned %d"|105-73
53366|code|BL              err|5-240-61-253
53370|code|B               loc_CE1A|206-230
53372|code|MOVS            R3, #1|1-35
53374|code|MOV             R0, R4|32-70
53376|code|STR             R3, [R4,#0x30]|35-99
53378|code|LDR             R1, =a101Goodbye; "101 Goodbye\r\n"|103-73
53380|code|BL              sub_C580|255-247-124-250
53384|code|MOV             R0, R4|32-70
53386|code|BL              sub_CCE4|255-247-43-254
53390|code|B               loc_CE3C|213-230
53392|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|100-73
53394|code|MOVW            R3, #0x10F|64-242-15-19
53398|code|LDR             R2, =aClientC; "client.c"|100-74
53400|code|BL              sub_C580|255-247-114-250
53404|code|B               loc_CE3C|206-230
53406|code|MOV             R0, R4|32-70
53408|code|MOVS            R1, #7|7-33
53410|code|MOV             R2, R6|50-70
53412|code|BL              sub_C808|255-247-176-251
53416|code|MOV             R5, R0|5-70
53418|code|B               loc_CFEC|159-231
53420|code|LDR             R1, =a213CommandCann; "213 Command cannot be handled by power "...|95-73
53422|code|MOV             R0, R4|32-70
53424|code|BL              sub_C580|255-247-102-250
53428|code|MOV             R0, R5|40-70
53430|code|BL              sub_C5E0|255-247-147-250
53434|code|MOV             R5, R8|69-70
53436|code|B               loc_D02E|183-231
53438|code|MOV             R0, R4|32-70
53440|code|MOVS            R1, #0x17|23-33
53442|code|MOV             R2, R6|50-70
53444|code|BL              sub_C808|255-247-160-251
53448|code|MOV             R5, R0|5-70
53450|code|B               loc_CFEC|143-231
53452|code|MOV             R0, R4|32-70
53454|code|MOVS            R1, #0xA|10-33
53456|code|MOV             R2, R6|50-70
53458|code|BL              sub_C808|255-247-153-251
53462|code|MOV             R5, R0|5-70
53464|code|B               loc_CFEC|136-231
53466|code|MOV             R0, R4|32-70
53468|code|MOVS            R1, #0xD|13-33
53470|code|MOV             R2, R6|50-70
53472|code|BL              sub_C808|255-247-146-251
53476|code|MOV             R5, R0|5-70
53478|code|B               loc_CFEC|129-231
53480|code|MOV             R0, R4|32-70
53482|code|MOVS            R1, #0x10|16-33
53484|code|MOV             R2, R6|50-70
53486|code|BL              sub_C808|255-247-139-251
53490|code|MOV             R5, R0|5-70
53492|code|B               loc_CFEC|122-231
53494|code|MOV             R0, R5|40-70
53496|code|LDR             R1, =aTempS; "temp %s"|77-73
53498|code|MOV             R2, R6|50-70
53500|code|BLX             __isoc99_sscanf|252-247-100-237
53504|code|CMP             R0, #1|1-40
53506|code|BEQ             loc_D164|47-208
53508|code|MOVS            R2, #4; n|4-34
53510|code|MOV             R0, R5; s1|40-70
53512|code|LDR             R1, =aTemp; "temp"|74-73
53514|code|BLX             strncasecmp|252-247-82-237
53518|code|MOV             R2, R0|2-70
53520|code|CBNZ            R0, loc_D13C|160-185
53522|code|MOV             R0, R4|32-70
53524|code|MOVS            R1, #0x13|19-33
53526|code|BL              sub_C808|255-247-119-251
53530|code|MOV             R5, R0|5-70
53532|code|B               loc_CFEC|102-231
53534|code|MOV             R0, R4|32-70
53536|code|MOVS            R1, #0x18|24-33
53538|code|MOV             R2, R6|50-70
53540|code|BL              sub_C808|255-247-112-251
53544|code|MOV             R5, R0|5-70
53546|code|B               loc_CFEC|95-231
53548|code|MOV             R0, R4|32-70
53550|code|LDR             R1, =a204InternalPow; "204 Internal powermand error: %s::%d\r"...|61-73
53552|code|LDR             R2, =aClientC; "client.c"|61-74
53554|code|MOV.W           R3, #0x102|79-244-129-115
53558|code|BL              sub_C580|255-247-35-250
53562|code|B               loc_CE3C|127-230
53564|code|MOV             R0, R5|40-70
53566|code|LDR             R1, =aBeaconS; "beacon %s"|62-73
53568|code|MOV             R2, R6|50-70
53570|code|BLX             __isoc99_sscanf|252-247-66-237
53574|code|CMP             R0, #1|1-40
53576|code|BEQ             loc_D196|37-208
53578|code|MOVS            R2, #6; n|6-34
53580|code|MOV             R0, R5; s1|40-70
53582|code|LDR             R1, =aBeacon; "beacon"|59-73
53584|code|BLX             strncasecmp|252-247-46-237
53588|code|MOV             R2, R0|2-70
53590|code|CBNZ            R0, loc_D172|96-185
53592|code|MOV             R0, R4|32-70
53594|code|MOVS            R1, #0x15|21-33
53596|code|BL              sub_C808|255-247-84-251
53600|code|MOV             R5, R0|5-70
53602|code|B               loc_CFEC|67-231
53604|code|MOV             R0, R4|32-70
53606|code|MOVS            R1, #0x13|19-33
53608|code|MOV             R2, R6|50-70
53610|code|BL              sub_C808|255-247-77-251
53614|code|MOV             R5, R0|5-70
53616|code|B               loc_CFEC|60-231
53618|code|MOV             R0, R5|40-70
53620|code|LDR             R1, =aDeviceS; "device %s"|50-73
53622|code|MOV             R2, R6|50-70
53624|code|BLX             __isoc99_sscanf|252-247-38-237
53628|code|CMP             R0, #1|1-40
53630|code|BEQ             loc_D1AC|21-208
53632|code|LDR             R1, =aDevice; "device"|48-73
53634|code|MOV             R0, R5; s1|40-70
53636|code|MOVS            R2, #6; n|6-34
53638|code|BLX             strncasecmp|252-247-20-237
53642|code|MOV             R1, R0|1-70
53644|code|MOV             R0, R4|32-70
53646|code|CBNZ            R1, loc_D1A4|73-185
53648|code|BL              sub_9D70|252-247-238-253
53652|code|B               loc_CE3C|82-230
53654|code|MOV             R0, R4|32-70
53656|code|MOVS            R1, #0x15|21-33
53658|code|MOV             R2, R6|50-70
53660|code|BL              sub_C808|255-247-52-251
53664|code|MOV             R5, R0|5-70
53666|code|B               loc_CFEC|35-231
53668|code|LDR             R1, =a201UnknownComm; "201 Unknown command\r\n"|40-73
53670|code|BL              sub_C580|255-247-235-249
53674|code|B               loc_CE3C|71-230
53676|code|MOV             R0, R4|32-70
53678|code|MOV             R1, R6|49-70
53680|code|BL              sub_9D70|252-247-222-253
53684|code|B               loc_CE3C|66-230
53686|code|MOV             R0, R4|32-70
53688|code|MOVS            R1, #2|2-33
53690|code|MOV             R2, R6|50-70
53692|code|BL              sub_C808|255-247-36-251
53696|code|MOV             R5, R0|5-70
53698|code|B               loc_CFEC|19-231
53700|code|BLX             __stack_chk_fail|252-247-8-236
53704|code|LDR             R0, =aCCmdVoid0_0; "c->cmd == ((void *)0)"|32-72
53706|code|MOVW            R2, #0x272; line|64-242-114-34
53710|code|LDR             R1, =aClientC; "client.c"|22-73
53712|code|LDR             R3, =aParseInput; "_parse_input"|31-75
53714|code|BLX             __assert_fail|252-247-194-237
53718|code|LDR             R0, =aCmdHlVoid0; "cmd->hl != ((void *)0)"|31-72
53720|code|MOV.W           R2, #0x268; line|79-244-26-114
53724|code|LDR             R1, =aClientC; "client.c"|18-73
53726|code|LDR             R3, =aParseInput; "_parse_input"|28-75
53728|code|BLX             __assert_fail|252-247-186-237
53732|data|DCD aQuit; "quit"|56-136-1-0
53736|data|DCD aOnS; "on %s"|180-144-1-0
53740|data|DCD aOffS; "off %s"|80-136-1-0
53744|data|DCD aCycleS; "cycle %s"|88-136-1-0
53748|data|DCD aResetS; "reset %s"|100-136-1-0
53752|data|DCD aFlashS; "flash %s"|112-136-1-0
53756|data|DCD aUnflashS; "unflash %s"|124-136-1-0
53760|data|DCD aStatusS; "status %s"|136-136-1-0
53764|data|DCD aStatus; "status"|148-136-1-0
53768|data|DCD aParseInputEnqu; "_parse_input: enqueuing actions"|252-136-1-0
53772|data|DCD sub_C8A0+1|161-200-0-0
53776|data|DCD sub_CBC4+1|197-203-0-0
53780|data|DCD a306S; "306 %s\r\n"|224-135-1-0
53784|data|DCD a103QueryComple; "103 Query complete\r\n"|196-131-1-0
53788|data|DCD aClientCbufRead; "client cbuf_read_line returned %d"|52-137-1-0
53792|data|DCD a101Goodbye; "101 Goodbye\r\n"|64-136-1-0
53796|data|DCD a204InternalPow; "204 Internal powermand error: %s::%d\r"...|176-130-1-0
53800|data|DCD aClientC; "client.c"|76-130-1-0
53804|data|DCD a213CommandCann; "213 Command cannot be handled by power "...|240-130-1-0
53808|data|DCD aTempS; "temp %s"|156-136-1-0
53812|data|DCD aTemp; "temp"|164-136-1-0
53816|data|DCD aBeaconS; "beacon %s"|172-136-1-0
53820|data|DCD aBeacon; "beacon"|184-136-1-0
53824|data|DCD aDeviceS; "device %s"|192-136-1-0
53828|data|DCD aDevice; "device"|156-179-1-0
53832|data|DCD a201UnknownComm; "201 Unknown command\r\n"|204-136-1-0
53836|data|DCD aCCmdVoid0_0; "c->cmd == ((void *)0)"|28-137-1-0
53840|data|DCD aParseInput; "_parse_input"|160-129-1-0
53844|data|DCD aCmdHlVoid0; "cmd->hl != ((void *)0)"|228-136-1-0
53848|code|PUSH            {R3,LR}|8-181
53850|code|MOV             R0, #0xC601|76-242-1-96-192-242-0-0
53858|code|BL              sub_15530|8-240-101-249
53862|code|MOV             R3, #0x24A30|68-246-48-35-192-242-2-3
53870|code|STR             R0, [R3,#(dword_24A38 - 0x24A30)]|152-96
53872|code|POP             {R3,PC}|8-189
53874|data|ALIGN 4|0-191
53876|code|MOV             R3, #0x24A30|68-246-48-35-192-242-2-3
53884|code|LDR             R0, [R3,#(dword_24A38 - 0x24A30)]|152-104
53886|code|B.W             sub_15570|8-240-119-185
53890|data|ALIGN 4|0-191
53892|code|PUSH            {R4-R6,LR}|112-181
53894|code|MOV             R6, R0|6-70
53896|code|LDR             R5, =dword_24A30|33-77
53898|code|LDR             R3, [R5,#(dword_24A3C - 0x24A30)]|235-104
53900|code|CMP             R3, #0|0-43
53902|code|BLE             loc_D2B0|15-221
53904|code|MOVS            R4, #0|0-36
53906|code|LDR             R3, [R5,#(dword_24A40 - 0x24A30)]|43-105
53908|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
53912|code|ADDS            R0, R1, #1|72-28
53914|code|BEQ             loc_D2A0|1-208
53916|code|CMP             R1, #0|0-41
53918|code|BLT             loc_D300|47-219
53920|code|MOVS            R2, #1|1-34
53922|code|MOV             R0, R6|48-70
53924|code|ADDS            R4, R4, R2|164-24
53926|code|BL              sub_164C8|9-240-15-249
53930|code|LDR             R3, [R5,#(dword_24A3C - 0x24A30)]|235-104
53932|code|CMP             R3, R4|163-66
53934|code|BGT             loc_D292|240-220
53936|code|LDR             R0, [R5,#(dword_24A38 - 0x24A30)]|168-104
53938|code|BL              sub_15B98|8-240-113-252
53942|code|MOV             R5, R0|5-70
53944|code|MOV             R0, R5|40-70
53946|code|BL              sub_15D20|8-240-49-253
53950|code|MOV             R4, R0|4-70
53952|code|CBZ             R0, loc_D2F6|200-177
53954|code|LDR             R1, [R4,#4]|97-104
53956|code|CMP             R1, #0|0-41
53958|code|BLT             loc_D2B8|247-219
53960|code|MOV             R0, R6|48-70
53962|code|MOVS            R2, #1|1-34
53964|code|BL              sub_164C8|9-240-252-248
53968|code|LDR             R0, [R4,#0x18]|160-105
53970|code|BL              sub_B61C|254-247-163-249
53974|code|CMP             R0, #0|0-40
53976|code|BNE             loc_D2B8|238-209
53978|code|LDR             R1, [R4,#8]|161-104
53980|code|MOV             R0, R6|48-70
53982|code|ADDS            R2, R1, #1|74-28
53984|code|IT EQ|8-191
53986|code|LDREQ           R1, [R4,#4]|97-104
53988|code|MOVS            R2, #2|2-34
53990|code|BL              sub_164C8|9-240-239-248
53994|code|MOV             R0, R5|40-70
53996|code|BL              sub_15D20|8-240-24-253
54000|code|MOV             R4, R0|4-70
54002|code|CMP             R0, #0|0-40
54004|code|BNE             loc_D2C2|229-209
54006|code|MOV             R0, R5|40-70
54008|code|POP.W           {R4-R6,LR}|189-232-112-64
54012|code|B.W             sub_15C70|8-240-184-188
54016|code|LDR             R0, =aListenFdsI0; "listen_fds[i] >= 0"|4-72
54018|code|MOVW            R2, #0x40D; line|64-242-13-66
54022|code|LDR             R1, =aClientC; "client.c"|4-73
54024|code|LDR             R3, =aCliPrePoll; "cli_pre_poll"|4-75
54026|code|BLX             __assert_fail|252-247-38-237
54030|data|ALIGN 0x10|0-191
54032|data|DCD dword_24A30|48-74-2-0
54036|data|DCD aListenFdsI0; "listen_fds[i] >= 0"|88-137-1-0
54040|data|DCD aClientC; "client.c"|76-130-1-0
54044|data|DCD aCliPrePoll; "cli_pre_poll"|176-129-1-0
54048|code|PUSH.W          {R4-R11,LR}|45-233-240-79
54052|code|SUB             SP, SP, #0xE4|185-176
54054|code|LDR             R5, =dword_24A30|164-77
54056|code|MOV             R7, R0|7-70
54058|code|LDR.W           R11, =__stack_chk_guard|223-248-176-178
54062|code|LDR             R3, [R5,#(dword_24A3C - 0x24A30)]|235-104
54064|code|LDR.W           R2, [R11]|219-248-0-32
54068|code|CMP             R3, #0|0-43
54070|code|STR             R2, [SP,#0x108+var_2C]|55-146
54072|code|BLE.W           loc_D470|64-243-154-128
54076|code|MOVS            R4, #0|0-36
54078|code|MOV             R9, R5|169-70
54080|code|B               loc_D34C|4-224
54082|code|LDR             R3, [R5,#(dword_24A3C - 0x24A30)]|235-104
54084|code|ADDS            R4, #1|1-52
54086|code|CMP             R3, R4|163-66
54088|code|BLE.W           loc_D470|64-243-146-128
54092|code|LDR             R3, [R5,#(dword_24A40 - 0x24A30)]|43-105
54094|code|LSLS            R6, R4, #2|166-0
54096|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
54100|code|ADDS            R2, R1, #1|74-28
54102|code|BEQ             loc_D342|244-208
54104|code|MOV             R0, R7|56-70
54106|code|BL              sub_1669C|9-240-159-249
54110|code|LSLS            R3, R0, #0x1F|195-7
54112|code|BPL             loc_D342|239-213
54114|code|LDR.W           R3, [R9,#(dword_24A40 - 0x24A30)]|217-248-16-48
54118|code|MOVS            R0, #0x34 ; '4'|52-32
54120|code|LDR.W           R8, [R3,R6]|83-248-6-128
54124|code|MOVS            R3, #0x80|128-35
54126|code|STR             R3, [SP,#0x108+addr_len]|4-147
54128|code|BL              sub_16730|9-240-222-249
54132|code|LDR             R1, =dword_24900|145-73
54134|code|MOVS            R3, #0|0-35
54136|code|LDR             R2, [R1]|10-104
54138|code|MOV             R6, R0|6-70
54140|code|STR             R3, [R0,#0x18]|131-97
54142|code|STR             R3, [R6,#0x1C]|243-97
54144|code|MOV.W           R0, #0xDADADADA|79-240-218-48
54148|code|STR             R3, [R6,#0x20]|51-98
54150|code|MOV             R3, #0x7FFFFFFF|111-240-0-67
54154|code|CMP             R2, R3|154-66
54156|code|STR             R0, [R6]|48-96
54158|code|BEQ.W           loc_D672|0-240-112-129
54162|code|ADDS            R3, R2, #1|83-28
54164|code|STR             R3, [R1]|11-96
54166|code|MOVS            R3, #0|0-35
54168|code|STR             R2, [R6,#0x24]|114-98
54170|code|STR             R3, [R6,#0x28]|179-98
54172|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
54176|code|STR             R3, [R6,#0x2C]|243-98
54178|code|MOV             R0, R8; fd|64-70
54180|code|STR             R2, [R6,#8]|178-96
54182|code|ADD             R1, SP, #0x108+addr; addr|5-169
54184|code|STR             R3, [R6,#0x30]|51-99
54186|code|ADD             R2, SP, #0x108+addr_len; addr_len|4-170
54188|code|BLX             accept|252-247-62-235
54192|code|CMP             R0, #0|0-40
54194|code|STR             R0, [R6,#4]|112-96
54196|code|BLT.W           loc_D588|192-242-232-128
54200|code|ADD             R0, SP, #0x108+addr; sa|5-168
54202|code|MOVS            R3, #0x40 ; '@'; hostlen|64-35
54204|code|ADD             R2, SP, #0x108+host; host|37-170
54206|code|LDR             R1, [SP,#0x108+addr_len]; salen|4-153
54208|code|MOV.W           LR, #6|79-240-6-14
54212|code|ADD.W           R10, SP, #0x108+var_34|13-241-212-10
54216|code|STR.W           LR, [SP,#0x108+servlen]; servlen|205-248-4-224
54220|code|MOV.W           LR, #3|79-240-3-14
54224|code|STR.W           R10, [SP,#0x108+serv]; serv|205-248-0-160
54228|code|STR.W           LR, [SP,#0x108+flags]; flags|205-248-8-224
54232|code|BLX             getnameinfo|252-247-74-236
54236|code|MOV             R8, R0|128-70
54238|code|CMP             R0, #0|0-40
54240|code|BNE.W           loc_D678|64-240-74-129
54244|code|ADD             R0, SP, #0x108+host|37-168
54246|code|BL              sub_168F8|9-240-135-250
54250|code|MOV             R1, R8; endptr|65-70
54252|code|MOVS            R2, #0xA; base|10-34
54254|code|STR             R0, [R6,#0xC]|240-96
54256|code|MOV             R0, R10; nptr|80-70
54258|code|BLX             strtoul|252-247-168-235
54262|code|ADD             R2, SP, #0x108+host; host|37-170
54264|code|LDR             R1, [SP,#0x108+addr_len]; salen|4-153
54266|code|MOV.W           LR, #8|79-240-8-14
54270|code|MOV             R3, R0|3-70
54272|code|ADD             R0, SP, #0x108+addr; sa|5-168
54274|code|STRH            R3, [R6,#0x10]|51-130
54276|code|MOVS            R3, #0x40 ; '@'; hostlen|64-35
54278|code|STR.W           R8, [SP,#0x108+serv]; serv|205-248-0-128
54282|code|STR.W           R8, [SP,#0x108+servlen]; servlen|205-248-4-128
54286|code|STR.W           LR, [SP,#0x108+flags]; flags|205-248-8-224
54290|code|BLX             getnameinfo|252-247-46-236
54294|code|CMP             R0, #0|0-40
54296|code|BNE.W           loc_D5EC|64-240-232-128
54300|code|ADD             R0, SP, #0x108+host|37-168
54302|code|BL              sub_168F8|9-240-107-250
54306|code|STR             R0, [R6,#0x14]|112-97
54308|code|BL              sub_12284|4-240-46-255
54312|code|CMP             R0, #0|0-40
54314|code|BEQ.W           loc_D604|0-240-235-128
54318|code|LDR             R1, [R6,#0x14]|113-105
54320|code|MOV             R3, #0x18338|72-242-56-51-192-242-1-3
54328|code|LDR             R2, [R6,#0xC]|242-104
54330|code|CMP             R1, #0|0-41
54332|code|IT EQ|8-191
54334|code|MOVEQ           R1, R3|25-70
54336|code|LDR             R0, =aPowermand; "powermand"|95-72
54338|code|LDR             R3, =aUnknown_0; "unknown"|96-75
54340|code|BLX             hosts_ctl|252-247-26-236
54344|code|CMP             R0, #0|0-40
54346|code|BNE.W           loc_D604|64-240-219-128
54350|code|LDR             R2, [R6,#0x14]|114-105
54352|code|CMP             R2, #0|0-42
54354|code|BEQ.W           loc_D6A2|0-240-38-129
54358|code|LDRH            R3, [R6,#0x10]|51-138
54360|code|MOVS            R0, #0|0-32
54362|code|LDR             R1, =aCreateClientTc; "_create_client: tcp wrappers denies %s:"...|91-73
54364|code|ADDS            R4, #1|1-52
54366|code|BL              err|5-240-73-251
54370|code|MOV             R0, R6|48-70
54372|code|BL              sub_C600|255-247-204-248
54376|code|LDR             R3, [R5,#0xC]|235-104
54378|code|CMP             R3, R4|163-66
54380|code|BGT.W           loc_D34C|63-247-110-175
54384|code|LDR             R0, [R5,#(dword_24A38 - 0x24A30)]|168-104
54386|code|MOV.W           R9, #1|79-240-1-9
54390|code|BL              sub_15B98|8-240-143-251
54394|code|MOV             R6, R0|6-70
54396|code|MOV             R0, R6|48-70
54398|code|BL              sub_15D20|8-240-79-252
54402|code|MOV             R4, R0|4-70
54404|code|CMP             R0, #0|0-40
54406|code|BEQ             loc_D522|76-208
54408|code|LDR             R1, [R4,#4]|97-104
54410|code|ADDS            R0, R1, #1|72-28
54412|code|BEQ             loc_D4DA|37-208
54414|code|MOV             R0, R7|56-70
54416|code|BL              sub_1669C|9-240-4-249
54420|code|UXTH            R5, R0|133-178
54422|code|LSLS            R2, R5, #0x1C|42-7
54424|code|BMI             loc_D56E|105-212
54426|code|LSLS            R3, R5, #0x1D|107-7
54428|code|BMI             loc_D558|92-212
54430|code|LSLS            R0, R5, #0x1B|232-6
54432|code|BMI             loc_D564|96-212
54434|code|ANDS.W          R8, R5, #0x1C|21-240-28-8
54438|code|BNE             loc_D510|51-209
54440|code|LSLS            R1, R5, #0x1F|233-7
54442|code|BPL             loc_D4D6|20-213
54444|code|LDR             R3, [R4]|35-104
54446|code|CMP.W           R3, #0xDADADADA|179-241-218-63
54450|code|BNE.W           loc_D6AA|64-240-250-128
54454|code|LDR             R0, [R4,#0x1C]; s2|224-105
54456|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
54460|code|LDR             R1, [R4,#4]|97-104
54462|code|ADD             R3, SP, #0x108+addr_len|4-171
54464|code|BL              sub_C2D0|254-247-6-255
54468|code|CMP             R0, #0|0-40
54470|code|BLT.W           loc_D690|192-242-227-128
54474|code|BEQ.W           loc_D5E0|0-240-137-128
54478|code|LDR             R2, [SP,#0x108+addr_len]|4-154
54480|code|CMP             R2, #0|0-42
54482|code|BNE.W           loc_D668|64-240-201-128
54486|code|LSLS            R2, R5, #0x1E|170-7
54488|code|BMI             loc_D578|78-212
54490|code|LDR             R1, [R4,#8]|161-104
54492|code|ADDS            R3, R1, #1|75-28
54494|code|BEQ             loc_D504|17-208
54496|code|MOV             R0, R7|56-70
54498|code|BL              sub_1669C|9-240-219-248
54502|code|UXTH            R5, R0|133-178
54504|code|LSLS            R0, R5, #0x1C|40-7
54506|code|BMI             loc_D54E|48-212
54508|code|LSLS            R1, R5, #0x1D|105-7
54510|code|BMI             loc_D544|41-212
54512|code|LSLS            R2, R5, #0x1B|234-6
54514|code|BMI             loc_D53A|34-212
54516|code|TST.W           R5, #0x1C|21-240-28-15
54520|code|BNE             loc_D510|10-209
54522|code|LDR             R3, [R4,#4]|99-104
54524|code|ADDS            R3, #1|1-51
54526|code|BEQ             loc_D510|7-208
54528|code|LSLS            R3, R5, #0x1E|171-7
54530|code|BMI             loc_D580|61-212
54532|code|MOV             R0, R4|32-70
54534|code|BL              sub_CD50|255-247-35-252
54538|code|LDR             R3, [R4,#0x30]|35-107
54540|code|CMP             R3, #0|0-43
54542|code|BEQ             loc_D47C|181-208
54544|code|MOV             R0, R6|48-70
54546|code|BL              sub_15EF8|8-240-241-252
54550|code|MOV             R0, R6|48-70
54552|code|BL              sub_15D20|8-240-2-252
54556|code|MOV             R4, R0|4-70
54558|code|CMP             R0, #0|0-40
54560|code|BNE             loc_D488|178-209
54562|code|MOV             R0, R6|48-70
54564|code|BL              sub_15C70|8-240-164-251
54568|code|LDR             R2, [SP,#0x108+var_2C]|55-154
54570|code|LDR.W           R3, [R11]|219-248-0-48
54574|code|CMP             R2, R3|154-66
54576|code|BNE.W           loc_D6A6|64-240-185-128
54580|code|ADD             SP, SP, #0xE4|57-176
54582|code|POP.W           {R4-R11,PC}|189-232-240-143
54586|code|MOVS            R0, #0|0-32
54588|code|LDR             R1, =aClientPollFdNo; "client poll: fd not open"|35-73
54590|code|BL              err|5-240-217-250
54594|code|B               loc_D4F4|215-231
54596|code|MOVS            R0, #0|0-32
54598|code|LDR             R1, =aClientPollHang; "client poll: hangup"|34-73
54600|code|BL              err|5-240-212-250
54604|code|B               loc_D4F0|208-231
54606|code|MOVS            R0, #0|0-32
54608|code|LDR             R1, =aClientPollErro; "client poll: error"|32-73
54610|code|BL              err|5-240-207-250
54614|code|B               loc_D4EC|201-231
54616|code|MOVS            R0, #0|0-32
54618|code|LDR             R1, =aClientPollHang; "client poll: hangup"|29-73
54620|code|BL              err|5-240-202-250
54624|code|LSLS            R0, R5, #0x1B|232-6
54626|code|BPL             loc_D4A2|158-213
54628|code|MOVS            R0, #0|0-32
54630|code|LDR             R1, =aClientPollFdNo; "client poll: fd not open"|25-73
54632|code|BL              err|5-240-196-250
54636|code|B               loc_D4A2|153-231
54638|code|MOVS            R0, #0|0-32
54640|code|LDR             R1, =aClientPollErro; "client poll: error"|24-73
54642|code|BL              err|5-240-191-250
54646|code|B               loc_D49A|144-231
54648|code|MOV             R0, R4|32-70
54650|code|BL              sub_CCE4|255-247-179-251
54654|code|B               loc_D4DA|172-231
54656|code|MOV             R0, R4|32-70
54658|code|BL              sub_CCE4|255-247-175-251
54662|code|B               loc_D504|189-231
54664|code|BLX             __errno_location|252-247-12-235
54668|code|LDR             R3, [R0]|3-104
54670|code|SUB.W           LR, R3, #0xB|163-241-11-14
54674|code|RSBS.W          R2, LR, #0|222-241-0-2
54678|code|ADC.W           R2, R2, LR|66-235-14-2
54682|code|CMP             R3, #0x67 ; 'g'|103-43
54684|code|IT EQ|8-191
54686|code|ORREQ.W         R2, R2, #1|66-240-1-2
54690|code|CMP             R2, #0|0-42
54692|code|BNE             loc_D658|88-209
54694|code|CMP             R3, #0x47 ; 'G'|71-43
54696|code|BEQ             loc_D658|86-208
54698|code|CMP             R3, #4|4-43
54700|code|BEQ             loc_D658|84-208
54702|code|MOVS            R0, #1|1-32
54704|code|LDR             R1, =aAccept_0; "accept"|9-73
54706|code|BL              sub_12AC4|5-240-135-250
54710|code|B               loc_D3B8|255-230
54712|data|DCD dword_24A30|48-74-2-0
54716|data|DCD dword_24900|0-73-2-0
54720|data|DCD aPowermand; "powermand"|20-120-1-0
54724|data|DCD aUnknown_0; "unknown"|56-131-1-0
54728|data|DCD aCreateClientTc; "_create_client: tcp wrappers denies %s:"...|164-137-1-0
54732|data|DCD aClientPollFdNo; "client poll: fd not open"|24-138-1-0
54736|data|DCD aClientPollHang; "client poll: hangup"|4-138-1-0
54740|data|DCD aClientPollErro; "client poll: error"|240-137-1-0
54744|data|DCD aAccept_0; "accept"|124-137-1-0
54748|data|DCD __stack_chk_guard|16-74-2-0
54752|code|STR.W           R9, [R4,#0x30]|196-248-48-144
54756|code|LDR             R1, =aClientReadRetu; "client read returned EOF"|52-73
54758|code|BL              err|5-240-133-250
54762|code|B               loc_D4D6|116-231
54764|code|BLX             gai_strerror|252-247-196-233
54768|code|LDR             R1, =aCreateClientGe; "_create_client: getnameinfo: %s"|50-73
54770|code|MOV             R2, R0|2-70
54772|code|MOV             R0, R8|64-70
54774|code|BL              err|5-240-125-250
54778|code|BL              sub_12284|4-240-67-254
54782|code|CMP             R0, #0|0-40
54784|code|BNE.W           loc_D42E|127-244-21-175
54788|code|MOV.W           R1, #0x100000|79-244-128-17
54792|code|MOV.W           R0, #0x400|79-244-128-96
54796|code|BL              sub_B2C0|253-247-88-254
54800|code|MOV.W           R1, #0x100000|79-244-128-17
54804|code|STR             R0, [R6,#0x18]|176-97
54806|code|MOV.W           R0, #0x400|79-244-128-96
54810|code|BL              sub_B2C0|253-247-81-254
54814|code|LDR             R3, [R6,#4]|115-104
54816|code|STR             R0, [R6,#0x1C]|240-97
54818|code|MOV             R0, R3|24-70
54820|code|BL              sub_16DD8|9-240-216-251
54824|code|LDR             R0, [R5,#(dword_24A38 - 0x24A30)]|168-104
54826|code|MOV             R1, R6|49-70
54828|code|BL              sub_156BC|8-240-70-248
54832|code|LDR             R2, [R6,#0x14]|114-105
54834|code|CMP             R2, #0|0-42
54836|code|BEQ             loc_D69E|51-208
54838|code|LDR             R1, [R6,#4]|113-104
54840|code|MOVS            R0, #4|4-32
54842|code|LDRH            R3, [R6,#0x10]|51-138
54844|code|STR             R1, [SP,#0x108+serv]|0-145
54846|code|LDR             R1, =aConnectSDFdD; "connect %s:%d fd %d"|32-73
54848|code|BL              sub_127FC|5-240-220-248
54852|code|MOV             R0, R6|48-70
54854|code|LDR             R1, =a001S; "001 %s\r\n"|31-73
54856|code|LDR             R2, =a235; "2.3.5"|31-74
54858|code|BL              sub_C580|254-247-153-255
54862|code|MOV             R0, R6|48-70
54864|code|LDR             R1, =aPowerman; "powerman> "|30-73
54866|code|BL              sub_C580|254-247-149-255
54870|code|B               loc_D342|116-230
54872|code|MOV             R0, R6|48-70
54874|code|BL              sub_C600|254-247-209-255
54878|code|MOVS            R0, #1|1-32
54880|code|LDR             R1, =unk_1896C|27-73
54882|code|BL              err|5-240-71-250
54886|code|B               loc_D342|108-230
54888|code|MOV             R0, R8|64-70
54890|code|LDR             R1, =aDroppedDBytesO; "dropped %d bytes of client input"|26-73
54892|code|BL              err|5-240-66-250
54896|code|B               loc_D4D6|49-231
54898|code|MOVS            R3, #1|1-35
54900|code|STR             R3, [R1]|11-96
54902|code|B               loc_D396|142-230
54904|code|MOV             R0, R6|48-70
54906|code|BL              sub_C600|254-247-193-255
54910|code|MOV             R0, R8; ecode|64-70
54912|code|BLX             gai_strerror|252-247-122-233
54916|code|LDR             R1, =aCreateClientGe; "_create_client: getnameinfo: %s"|13-73
54918|code|MOV             R2, R0|2-70
54920|code|MOVS            R0, #1|1-32
54922|code|BL              err|5-240-51-250
54926|code|B               loc_D342|88-230
54928|code|STR.W           R9, [R4,#0x30]|196-248-48-144
54932|code|MOVS            R0, #1|1-32
54934|code|LDR             R1, =aClientReadErro; "client read error"|16-73
54936|code|BL              err|5-240-44-250
54940|code|B               loc_D4D6|27-231
54942|code|LDR             R2, [R6,#0xC]|242-104
54944|code|B               loc_D636|201-231
54946|code|LDR             R2, [R6,#0xC]|242-104
54948|code|B               loc_D456|215-230
54950|code|BLX             __stack_chk_fail|252-247-152-233
54954|code|LDR             R0, =aCMagic0xdadada; "c->magic == 0xdadadada"|12-72
54956|code|MOVW            R2, #0x3D5; line|64-242-213-50
54960|code|LDR             R1, =aClientC; "client.c"|11-73
54962|code|LDR             R3, =aHandleRead; "_handle_read"|12-75
54964|code|BLX             __assert_fail|252-247-80-235
54968|data|DCD aClientReadRetu; "client read returned EOF"|72-138-1-0
54972|data|DCD aCreateClientGe; "_create_client: getnameinfo: %s"|132-137-1-0
54976|data|DCD aConnectSDFdD; "connect %s:%d fd %d"|208-137-1-0
54980|data|DCD a001S; "001 %s\r\n"|228-137-1-0
54984|data|DCD a235; "2.3.5"|40-118-1-0
54988|data|DCD aPowerman; "powerman> "|60-132-1-0
54992|data|DCD unk_1896C|108-137-1-0
54996|data|DCD aDroppedDBytesO; "dropped %d bytes of client input"|100-138-1-0
55000|data|DCD aClientReadErro; "client read error"|52-138-1-0
55004|data|DCD aCMagic0xdadada; "c->magic == 0xdadadada"|52-130-1-0
55008|data|DCD aClientC; "client.c"|76-130-1-0
55012|data|DCD aHandleRead; "_handle_read"|192-129-1-0
55016|code|MOV             R3, #0x24A30|68-246-48-35-192-242-2-3
55024|code|LDR             R2, [R3,#(dword_24A40 - 0x24A30)]|26-105
55026|code|LDR             R3, [R3,#(dword_24A3C - 0x24A30)]|219-104
55028|code|STR             R2, [R0]|2-96
55030|code|STR             R3, [R1]|11-96
55032|code|BX              LR|112-71
55034|data|ALIGN 4|0-191
55036|code|MOV             R3, #0x24A30|68-246-48-35-192-242-2-3
55044|code|LDR             R0, [R3,#(dword_24A34 - 0x24A30)]|88-104
55046|code|BX              LR|112-71
55048|code|PUSH.W          {R4-R11,LR}|45-233-240-79
55052|code|SUB             SP, SP, #0x44|145-176
55054|code|MOV             R4, R0|4-70
55056|code|STR             R1, [SP,#0x68+var_54]|5-145
55058|code|CMP             R0, #0|0-40
55060|code|BNE.W           loc_D906|64-240-247-128
55064|code|BL              sub_1229C|4-240-192-253
55068|code|LDR             R7, =dword_24A30|162-79
55070|code|BL              sub_15B98|8-240-59-250
55074|code|STR             R4, [SP,#0x68+var_5C]|3-148
55076|code|MOV             R9, R4|161-70
55078|code|LDR.W           R10, =aNothing; "nothing"|223-248-188-162
55082|code|MOV             R8, R4|160-70
55084|code|MOV             R11, R7|187-70
55086|code|STR             R0, [SP,#0x68+var_58]|4-144
55088|code|LDR             R0, [SP,#0x68+var_58]|4-152
55090|code|BL              sub_15D20|8-240-245-250
55094|code|MOV             R5, R0|5-70
55096|code|CMP             R0, #0|0-40
55098|code|BEQ.W           loc_D848|0-240-133-128
55102|code|MOV             R0, R5; s|40-70
55104|code|MOVS            R1, #0x3A ; ':'; c|58-33
55106|code|BLX             strchr|252-247-18-234
55110|code|MOV             R4, R0|4-70
55112|code|CMP             R0, #0|0-40
55114|code|BEQ.W           loc_D8E8|0-240-205-128
55118|code|MOV             R1, R4|33-70
55120|code|MOV             R0, R5; name|40-70
55122|code|MOVS            R4, #0|0-36
55124|code|ADD             R2, SP, #0x68+req; req|6-170
55126|code|STRB.W          R4, [R1],#1; service|1-248-1-75
55130|code|ADD             R3, SP, #0x68+pai; pai|15-171
55132|code|MOVS            R6, #1|1-38
55134|code|STR             R4, [SP,#0x68+req]|6-148
55136|code|STR             R4, [SP,#0x68+req.ai_family]|7-148
55138|code|STR             R4, [SP,#0x68+req.ai_protocol]|9-148
55140|code|STR             R4, [SP,#0x68+req.ai_addrlen]|10-148
55142|code|STR             R4, [SP,#0x68+req.ai_addr]|11-148
55144|code|STR             R4, [SP,#0x68+req.ai_canonname]|12-148
55146|code|STR             R4, [SP,#0x68+req.ai_next]|13-148
55148|code|STR             R6, [SP,#0x68+req.ai_socktype]|8-150
55150|code|BLX             getaddrinfo|252-247-196-234
55154|code|CMP             R0, #0|0-40
55156|code|BNE.W           loc_D8D8|64-240-176-128
55160|code|LDR             R0, [SP,#0x68+pai]|15-152
55162|code|CMP             R0, #0|0-40
55164|code|BEQ             loc_D868|116-208
55166|code|LDR             R1, [R7,#(dword_24A3C - 0x24A30)]|249-104
55168|code|LDR             R0, [R0,#0x1C]|192-105
55170|code|ADDS            R1, #1|1-49
55172|code|CMP             R0, #0|0-40
55174|code|BNE             loc_D780|251-209
55176|code|LDR             R0, [R7,#(dword_24A40 - 0x24A30)]|56-105
55178|code|STR             R1, [R7,#(dword_24A3C - 0x24A30)]|249-96
55180|code|CMP             R0, #0|0-40
55182|code|BEQ             loc_D87E|118-208
55184|code|LSLS            R1, R1, #2|137-0
55186|code|BL              sub_167A0|9-240-5-248
55190|code|LDR             R4, [SP,#0x68+pai]|15-156
55192|code|STR.W           R0, [R11,#(dword_24A40 - 0x24A30)]|203-248-16-0
55196|code|CMP             R4, #0|0-44
55198|code|BEQ             loc_D88E|118-208
55200|code|LDR             R3, [R7,#(dword_24A3C - 0x24A30)]|251-104
55202|code|CMP             R8, R3|152-69
55204|code|BGE.W           loc_D99A|128-242-249-128
55208|code|MOV.W           R6, R8,LSL#2|79-234-136-6
55212|code|B               loc_D806|43-224
55214|code|ADD             R3, SP, #0x68+var_28|16-171
55216|code|MOVS            R1, #1; level|1-33
55218|code|MOVS            R2, #2; optname|2-34
55220|code|MOV.W           LR, #4|79-240-4-14
55224|code|STR.W           R1, [R3,#-8]!; optval|67-248-8-29
55228|code|STR.W           LR, [SP,#0x68+optlen]; optlen|205-248-0-224
55232|code|BLX             setsockopt|252-247-168-232
55236|code|CMP             R0, #0|0-40
55238|code|BLT             loc_D896|102-219
55240|code|MOV             R0, R5|40-70
55242|code|BL              sub_16DD8|9-240-5-251
55246|code|LDR             R1, [R4,#0x14]; addr|97-105
55248|code|LDR             R2, [R4,#0x10]; len|34-105
55250|code|MOV             R0, R5; fd|40-70
55252|code|BLX             bind|252-247-4-234
55256|code|CMP             R0, #0|0-40
55258|code|BLT             loc_D8AC|103-219
55260|code|MOVS            R1, #5; n|5-33
55262|code|MOV             R0, R5; fd|40-70
55264|code|BLX             listen|252-247-88-234
55268|code|CMP             R0, #0|0-40
55270|code|BLT             loc_D8C2|108-219
55272|code|LDR.W           R3, [R11,#(dword_24A40 - 0x24A30)]|219-248-16-48
55276|code|LDR             R2, [SP,#0x68+var_5C]|3-154
55278|code|STR             R5, [R3,R6]|157-81
55280|code|ADDS            R2, #1|1-50
55282|code|STR             R2, [SP,#0x68+var_5C]|3-146
55284|code|LDR             R4, [R4,#0x1C]|228-105
55286|code|ADD.W           R8, R8, #1|8-241-1-8
55290|code|CBZ             R4, loc_D834|220-177
55292|code|LDR             R3, [R7,#(dword_24A3C - 0x24A30)]|251-104
55294|code|ADDS            R6, #4|4-54
55296|code|CMP             R3, R8|67-69
55298|code|BLE.W           loc_D99A|64-243-202-128
55302|code|LDR             R3, [R7,#(dword_24A40 - 0x24A30)]|59-105
55304|code|MOVS            R2, #0; protocol|0-34
55306|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
55310|code|STR             R1, [R3,R6]|153-81
55312|code|LDR             R0, [R4,#4]; domain|96-104
55314|code|LDR             R1, [R4,#8]; type|161-104
55316|code|BLX             socket|252-247-118-234
55320|code|CMP             R0, #0|0-40
55322|code|MOV             R5, R0|5-70
55324|code|BGE             loc_D7AE|199-218
55326|code|BLX             __errno_location|252-247-194-233
55330|code|LDR             R4, [R4,#0x1C]|228-105
55332|code|LDR.W           R10, =aSocket_0; "socket"|223-248-192-161
55336|code|ADD.W           R8, R8, #1|8-241-1-8
55340|code|LDR.W           R9, [R0]|208-248-0-144
55344|code|CMP             R4, #0|0-44
55346|code|BNE             loc_D7FC|227-209
55348|code|LDR             R0, [SP,#0x68+pai]; ai|15-152
55350|code|BLX             freeaddrinfo|252-247-90-234
55354|code|LDR             R0, [SP,#0x68+var_58]|4-152
55356|code|BL              sub_15D20|8-240-112-250
55360|code|MOV             R5, R0|5-70
55362|code|CMP             R0, #0|0-40
55364|code|BNE.W           loc_D73E|127-244-123-175
55368|code|LDR             R0, [SP,#0x68+var_58]|4-152
55370|code|BL              sub_15C70|8-240-17-250
55374|code|LDR             R3, [SP,#0x68+var_5C]|3-155
55376|code|CMP             R3, #0|0-43
55378|code|BEQ             loc_D8F2|78-208
55380|code|MOVS            R0, #4|4-32
55382|code|LDR             R1, =aListeningOnDSo; "listening on %d sockets"|85-73
55384|code|LDR             R2, [SP,#0x68+var_5C]|3-154
55386|code|BL              sub_127FC|4-240-207-255
55390|code|LDR             R2, [SP,#0x68+var_54]|5-154
55392|code|STR             R2, [R7]|58-96
55394|code|ADD             SP, SP, #0x44 ; 'D'|17-176
55396|code|POP.W           {R4-R11,PC}|189-232-240-143
55400|code|LDR             R1, =aListenAddressH; "listen address has no addrinfo: %s"|81-73
55402|code|MOV             R2, R5|42-70
55404|code|BL              sub_12AC4|5-240-42-249
55408|code|LDR             R0, [SP,#0x68+pai]|15-152
55410|code|CMP             R0, #0|0-40
55412|code|BNE             loc_D77E|131-209
55414|code|LDR             R0, [R7,#0x10]|56-105
55416|code|LDR             R1, [R7,#0xC]|249-104
55418|code|CMP             R0, #0|0-40
55420|code|BNE             loc_D790|136-209
55422|code|LSLS            R0, R1, #2|136-0
55424|code|BL              sub_16730|8-240-86-255
55428|code|LDR             R4, [SP,#0x68+pai]|15-156
55430|code|STR.W           R0, [R11,#(dword_24A40 - 0x24A30)]|203-248-16-0
55434|code|CMP             R4, #0|0-44
55436|code|BNE             loc_D7A0|136-209
55438|code|MOV             R0, R4; ai|32-70
55440|code|BLX             freeaddrinfo|252-247-44-234
55444|code|B               loc_D83A|209-231
55446|code|BLX             __errno_location|252-247-134-233
55450|code|LDR.W           R10, =aSetsockopt_0; "setsockopt"|223-248-80-161
55454|code|MOV             R3, R0|3-70
55456|code|MOV             R0, R5; fd|40-70
55458|code|LDR.W           R9, [R3]|211-248-0-144
55462|code|BLX             close|252-247-70-234
55466|code|B               loc_D7F4|163-231
55468|code|BLX             __errno_location|252-247-122-233
55472|code|LDR.W           R10, =aBind_0; "bind"|223-248-60-161
55476|code|MOV             R3, R0|3-70
55478|code|MOV             R0, R5; fd|40-70
55480|code|LDR.W           R9, [R3]|211-248-0-144
55484|code|BLX             close|252-247-58-234
55488|code|B               loc_D7F4|152-231
55490|code|BLX             __errno_location|252-247-112-233
55494|code|LDR.W           R10, =aListen_0; "listen"|223-248-44-161
55498|code|MOV             R3, R0|3-70
55500|code|MOV             R0, R5; fd|40-70
55502|code|LDR.W           R9, [R3]|211-248-0-144
55506|code|BLX             close|252-247-48-234
55510|code|B               loc_D7F4|141-231
55512|code|BLX             gai_strerror|252-247-78-232
55516|code|LDR             R1, =aGetaddrinfoS; "getaddrinfo: %s"|53-73
55518|code|MOV             R2, R0|2-70
55520|code|MOV             R0, R4|32-70
55522|code|BL              sub_12AC4|5-240-239-248
55526|code|B               loc_D778|71-231
55528|code|LDR             R1, =aErrorParsingLi; "error parsing listen address: %s"|51-73
55530|code|MOV             R2, R5|42-70
55532|code|BL              sub_12AC4|5-240-234-248
55536|code|B               loc_D74E|45-231
55538|code|BLX             __errno_location|252-247-88-233
55542|code|LDR             R1, =(aRegcompFailedS+0x10); "%s"|49-73
55544|code|MOV             R2, R10|82-70
55546|code|STR.W           R9, [R0]|192-248-0-144
55550|code|MOVS            R0, #1|1-32
55552|code|BL              sub_12AC4|5-240-224-248
55556|code|B               loc_D854|166-231
55558|code|MOVS            R0, #0x34 ; '4'|52-32
55560|code|BL              sub_16730|8-240-18-255
55564|code|LDR             R2, =dword_24900|44-74
55566|code|MOV.W           R3, #0xDADADADA|79-240-218-51
55570|code|MOV             R1, #0x7FFFFFFF|111-240-0-65
55574|code|STR             R3, [R0]|3-96
55576|code|MOVS            R3, #0|0-35
55578|code|STR             R3, [R0,#0x20]|3-98
55580|code|MOV             R4, R0|4-70
55582|code|LDR             R3, [R2]|19-104
55584|code|CMP             R3, R1|139-66
55586|code|BEQ             loc_D994|55-208
55588|code|ADDS            R1, R3, #1|89-28
55590|code|STR             R1, [R2]|17-96
55592|code|MOVS            R5, #0|0-37
55594|code|STR             R3, [R4,#0x24]|99-98
55596|code|STR             R5, [R4,#0x28]|165-98
55598|code|MOVS            R3, #1|1-35
55600|code|STR             R5, [R4,#0x2C]|229-98
55602|code|STR             R3, [R4,#8]|163-96
55604|code|STR             R5, [R4,#0x30]|37-99
55606|code|STR             R5, [R4,#4]|101-96
55608|code|LDR             R0, =aLocalhost; "localhost"|34-72
55610|code|BL              sub_168F8|8-240-221-255
55614|code|LDR             R7, =dword_24A30|26-79
55616|code|MOV             R3, R0|3-70
55618|code|LDR             R0, =a127001; "127.0.0.1"|33-72
55620|code|STR             R3, [R4,#0x14]|99-97
55622|code|BL              sub_168F8|8-240-215-255
55626|code|STRH            R5, [R4,#0x10]|37-130
55628|code|MOV.W           R1, #0x100000|79-244-128-17
55632|code|STR             R0, [R4,#0xC]|224-96
55634|code|MOV.W           R0, #0x400|79-244-128-96
55638|code|BL              sub_B2C0|253-247-179-252
55642|code|MOV.W           R1, #0x100000|79-244-128-17
55646|code|STR             R0, [R4,#0x18]|160-97
55648|code|MOV.W           R0, #0x400|79-244-128-96
55652|code|BL              sub_B2C0|253-247-172-252
55656|code|LDR             R3, [R4,#4]|99-104
55658|code|STR             R0, [R4,#0x1C]|224-97
55660|code|MOV             R0, R3|24-70
55662|code|BL              sub_16DD8|9-240-51-250
55666|code|LDR             R0, [R4,#8]|160-104
55668|code|BL              sub_16DD8|9-240-48-250
55672|code|MOV             R1, R4|33-70
55674|code|LDR             R0, [R7,#(dword_24A38 - 0x24A30)]|184-104
55676|code|BL              sub_156BC|7-240-158-254
55680|code|MOV             R0, R4|32-70
55682|code|LDR             R1, =a001S; "001 %s\r\n"|18-73
55684|code|LDR             R2, =a235; "2.3.5"|18-74
55686|code|BL              sub_C580|254-247-251-253
55690|code|MOV             R0, R4|32-70
55692|code|LDR             R1, =aPowerman; "powerman> "|17-73
55694|code|BL              sub_C580|254-247-247-253
55698|code|B               loc_D85E|100-231
55700|code|MOVS            R1, #1|1-33
55702|code|STR             R1, [R2]|17-96
55704|code|B               loc_D928|198-231
55706|code|LDR             R0, =aIListenFdsLen; "i < listen_fds_len"|15-72
55708|code|MOVW            R2, #0x32B; line|64-242-43-50
55712|code|LDR             R1, =aClientC; "client.c"|14-73
55714|code|LDR             R3, =aListenClient; "_listen_client"|15-75
55716|code|BLX             __assert_fail|252-247-216-233
55720|data|DCD dword_24A30|48-74-2-0
55724|data|DCD aListeningOnDSo; "listening on %d sockets"|56-139-1-0
55728|data|DCD aListenAddressH; "listen address has no addrinfo: %s"|0-139-1-0
55732|data|DCD aGetaddrinfoS; "getaddrinfo: %s"|240-138-1-0
55736|data|DCD aErrorParsingLi; "error parsing listen address: %s"|204-138-1-0
55740|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
55744|data|DCD dword_24900|0-73-2-0
55748|data|DCD aLocalhost; "localhost"|180-138-1-0
55752|data|DCD a127001; "127.0.0.1"|192-138-1-0
55756|data|DCD a001S; "001 %s\r\n"|228-137-1-0
55760|data|DCD a235; "2.3.5"|40-118-1-0
55764|data|DCD aPowerman; "powerman> "|60-132-1-0
55768|data|DCD aIListenFdsLen; "i < listen_fds_len"|36-139-1-0
55772|data|DCD aClientC; "client.c"|76-130-1-0
55776|data|DCD aListenClient; "_listen_client"|208-129-1-0
55780|data|DCD aNothing; "nothing"|172-138-1-0
55784|data|DCD aSocket_0; "socket"|136-138-1-0
55788|data|DCD aSetsockopt_0; "setsockopt"|144-138-1-0
55792|data|DCD aBind_0; "bind"|156-138-1-0
55796|data|DCD aListen_0; "listen"|164-138-1-0
55800|code|PUSH.W          {R4-R8,LR}|45-233-240-65
55804|code|MOV             R7, R2|23-70
55806|code|MOV             R5, R0|5-70
55808|code|MOV             R4, R1|12-70
55810|code|MOV             R6, R3|30-70
55812|code|LDR.W           R8, [SP,#0x18+arg_0]|221-248-24-128
55816|code|BLX             fork|252-247-44-233
55820|code|ADDS            R2, R0, #1|66-28
55822|code|BEQ             loc_DABC|85-208
55824|code|CMP             R0, #0|0-40
55826|code|BNE             loc_DAAC|75-209
55828|code|BLX             setsid|252-247-162-232
55832|code|CMP             R0, #0|0-40
55834|code|BLT             loc_DACC|87-219
55836|code|MOVS            R1, #1|1-33
55838|code|MOV             R0, R1|8-70
55840|code|BL              sub_16F98|9-240-186-250
55844|code|BLX             fork|252-247-30-233
55848|code|ADDS            R3, R0, #1|67-28
55850|code|BEQ             loc_DAB2|66-208
55852|code|CMP             R0, #0|0-40
55854|code|BNE             loc_DAAC|61-209
55856|code|MOV             R0, R7; path|56-70
55858|code|BLX             chdir|251-247-234-239
55862|code|CMP             R0, #0|0-40
55864|code|BLT             loc_DB06|101-219
55866|code|MOVS            R0, #0x12; mask|18-32
55868|code|BLX             umask|252-247-104-233
55872|code|MOV             R0, R6; name|48-70
55874|code|BLX             unlink|251-247-208-239
55878|code|MOV             R0, R6; filename|48-70
55880|code|LDR             R1, =(aDoubleValueWou+0x20); modes|50-73
55882|code|BLX             fopen|251-247-112-239
55886|code|MOV             R7, R0|7-70
55888|code|CMP             R0, #0|0-40
55890|code|BEQ             loc_DAFA|82-208
55892|code|BLX             getpid|252-247-106-232
55896|code|LDR             R1, =(aErrExitMemoryN+0x20); format|47-73
55898|code|MOV             R2, R0|2-70
55900|code|MOV             R0, R7; stream|56-70
55902|code|BLX             fprintf|252-247-138-232
55906|code|ADDS            R0, #1|1-48
55908|code|BEQ             loc_DAE8|64-208
55910|code|MOV             R0, R7; stream|56-70
55912|code|BLX             fclose|252-247-234-232
55916|code|ADDS            R0, #1|1-48
55918|code|BEQ             loc_DAD6|50-208
55920|code|MOVS            R6, #0|0-38
55922|code|ADD.W           R5, R5, R4,LSL#2|5-235-132-5
55926|code|MOV             R2, R5|42-70
55928|code|MOV             R3, R4|35-70
55930|code|B               loc_DA84|3-224
55932|code|LDR.W           R1, [R2,#-4]!|82-248-4-29
55936|code|CMP             R6, R1|142-66
55938|code|BEQ             loc_DA8E|4-208
55940|code|SUBS            R3, #1|1-59
55942|code|BPL             loc_DA7C|249-213
55944|code|MOV             R0, R6; fd|48-70
55946|code|BLX             close|252-247-84-233
55950|code|ADDS            R6, #1|1-54
55952|code|CMP.W           R6, #0x100|182-245-128-127
55956|code|BNE             loc_DA76|239-209
55958|code|MOV             R0, R8; ident|64-70
55960|code|MOVS            R1, #9; option|9-33
55962|code|MOVS            R2, #0x18; facility|24-34
55964|code|BLX             openlog|252-247-14-233
55968|code|MOVS            R0, #5; pri|5-32
55970|code|LDR             R1, =aStarted; "started"|30-73
55972|code|POP.W           {R4-R8,LR}|189-232-240-65
55976|code|B.W             j_syslog|252-247-250-184
55980|code|MOVS            R0, #0; status|0-32
55982|code|BLX             exit|252-247-68-232
55986|code|MOVS            R0, #1|1-32
55988|code|LDR             R1, =aFork_0; "fork"|26-73
55990|code|BL              sub_12AC4|5-240-5-248
55994|code|B               loc_DA30|185-231
55996|code|MOVS            R0, #1|1-32
55998|code|LDR             R1, =aFork_0; "fork"|24-73
56000|code|BL              sub_12AC4|5-240-0-248
56004|code|BLX             setsid|252-247-74-232
56008|code|CMP             R0, #0|0-40
56010|code|BGE             loc_DA1C|167-218
56012|code|MOVS            R0, #1|1-32
56014|code|LDR             R1, =aSetsid_0; "setsid"|21-73
56016|code|BL              sub_12AC4|4-240-248-255
56020|code|B               loc_DA1C|162-231
56022|code|MOV             R0, R6; name|48-70
56024|code|BLX             unlink|251-247-132-239
56028|code|MOVS            R0, #1|1-32
56030|code|LDR             R1, =aFcloseS; "fclose %s"|18-73
56032|code|MOV             R2, R6|50-70
56034|code|BL              sub_12AC4|4-240-239-255
56038|code|B               loc_DA70|195-231
56040|code|MOV             R0, R6; name|48-70
56042|code|BLX             unlink|251-247-124-239
56046|code|MOVS            R0, #1|1-32
56048|code|LDR             R1, =aFwriteS; "fwrite %s"|14-73
56050|code|MOV             R2, R6|50-70
56052|code|BL              sub_12AC4|4-240-230-255
56056|code|B               loc_DA66|181-231
56058|code|MOVS            R0, #1|1-32
56060|code|LDR             R1, =aFopenS; "fopen %s"|12-73
56062|code|MOV             R2, R6|50-70
56064|code|BL              sub_12AC4|4-240-224-255
56068|code|B               loc_DA54|166-231
56070|code|MOVS            R0, #1|1-32
56072|code|LDR             R1, =aChdirS; "chdir %s"|10-73
56074|code|MOV             R2, R7|58-70
56076|code|BL              sub_12AC4|4-240-218-255
56080|code|B               loc_DA3A|147-231
56082|data|ALIGN 4|0-191
56084|data|DCD aDoubleValueWou+0x20; "w"|96-180-1-0
56088|data|DCD aErrExitMemoryN+0x20; "%d\n"|192-184-1-0
56092|data|DCD aStarted; "started"|144-139-1-0
56096|data|DCD aFork_0; "fork"|80-139-1-0
56100|data|DCD aSetsid_0; "setsid"|88-139-1-0
56104|data|DCD aFcloseS; "fclose %s"|132-139-1-0
56108|data|DCD aFwriteS; "fwrite %s"|120-139-1-0
56112|data|DCD aFopenS; "fopen %s"|108-139-1-0
56116|data|DCD aChdirS; "chdir %s"|96-139-1-0
56120|code|SUBS            R1, #2; switch 20 cases|2-57
56122|code|CMP             R1, #0x13|19-41
56124|code|BHI             def_DB3E; jumptable 0000DB3E default case, cases 3-6,8,9,11,12,14,15,17,18,20|19-216
56126|code|TBB.W           [PC,R1]; switch jump|223-232-1-240
56130|data|DCB 0x15; jump table for switch statement|21
56131|data|DCB 0x12|18
56132|data|DCB 0x12|18
56133|data|DCB 0x12|18
56134|data|DCB 0x12|18
56135|data|DCB 0x1C|28
56136|data|DCB 0x12|18
56137|data|DCB 0x12|18
56138|data|DCB 0x23|35
56139|data|DCB 0x12|18
56140|data|DCB 0x12|18
56141|data|DCB 0x2A|42
56142|data|DCB 0x12|18
56143|data|DCB 0x12|18
56144|data|DCB 0x31|49
56145|data|DCB 0x12|18
56146|data|DCB 0x12|18
56147|data|DCB 0x38|56
56148|data|DCB 0x12|18
56149|data|DCB 0xA|10
56150|code|LDR.W           R0, [R0,#0x8C]; jumptable 0000DB3E case 21|208-248-140-0
56154|code|CMP             R0, #0|0-40
56156|code|ITE NE|20-191
56158|code|MOVNE           R0, #0x16|22-32
56160|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56164|code|BX              LR|112-71
56166|code|MOV.W           R0, #0xFFFFFFFF; jumptable 0000DB3E default case, cases 3-6,8,9,11,12,14,15,17,18,20|79-240-255-48
56170|code|BX              LR|112-71
56172|code|LDR             R0, [R0,#0x40]; jumptable 0000DB3E case 2|0-108
56174|code|CMP             R0, #0|0-40
56176|code|ITE NE|20-191
56178|code|MOVNE           R0, #3|3-32
56180|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56184|code|BX              LR|112-71
56186|code|LDR             R0, [R0,#0x58]; jumptable 0000DB3E case 7|128-109
56188|code|CMP             R0, #0|0-40
56190|code|ITE NE|20-191
56192|code|MOVNE           R0, #9|9-32
56194|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56198|code|BX              LR|112-71
56200|code|LDR             R0, [R0,#0x64]; jumptable 0000DB3E case 10|64-110
56202|code|CMP             R0, #0|0-40
56204|code|ITE NE|20-191
56206|code|MOVNE           R0, #0xC|12-32
56208|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56212|code|BX              LR|112-71
56214|code|LDR             R0, [R0,#0x70]; jumptable 0000DB3E case 13|0-111
56216|code|CMP             R0, #0|0-40
56218|code|ITE NE|20-191
56220|code|MOVNE           R0, #0xF|15-32
56222|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56226|code|BX              LR|112-71
56228|code|LDR             R0, [R0,#0x7C]; jumptable 0000DB3E case 16|192-111
56230|code|CMP             R0, #0|0-40
56232|code|ITE NE|20-191
56234|code|MOVNE           R0, #0x12|18-32
56236|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56240|code|BX              LR|112-71
56242|code|LDR.W           R0, [R0,#0x84]; jumptable 0000DB3E case 19|208-248-132-0
56246|code|CMP             R0, #0|0-40
56248|code|ITE NE|20-191
56250|code|MOVNE           R0, #0x14|20-32
56252|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56256|code|BX              LR|112-71
56258|data|ALIGN 4|0-191
56260|code|SUBS            R1, #7; switch 10 cases|7-57
56262|code|CMP             R1, #9|9-41
56264|code|BHI             def_DBCA; jumptable 0000DBCA default case, cases 8,9,11,12,14,15|34-216
56266|code|TBB.W           [PC,R1]; switch jump|223-232-1-240
56270|data|DCB 0x1A; jump table for switch statement|26
56271|data|DCB 0x21|33
56272|data|DCB 0x21|33
56273|data|DCB 0x13|19
56274|data|DCB 0x21|33
56275|data|DCB 0x21|33
56276|data|DCB 0xC|12
56277|data|DCB 0x21|33
56278|data|DCB 0x21|33
56279|data|DCB 5|5
56280|code|LDR             R0, [R0,#0x78]; jumptable 0000DBCA case 16|128-111
56282|code|CMP             R0, #0|0-40
56284|code|ITE NE|20-191
56286|code|MOVNE           R0, #0x11|17-32
56288|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56292|code|BX              LR|112-71
56294|code|LDR             R0, [R0,#0x6C]; jumptable 0000DBCA case 13|192-110
56296|code|CMP             R0, #0|0-40
56298|code|ITE NE|20-191
56300|code|MOVNE           R0, #0xE|14-32
56302|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56306|code|BX              LR|112-71
56308|code|LDR             R0, [R0,#0x60]; jumptable 0000DBCA case 10|0-110
56310|code|CMP             R0, #0|0-40
56312|code|ITE NE|20-191
56314|code|MOVNE           R0, #0xB|11-32
56316|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56320|code|BX              LR|112-71
56322|code|LDR             R0, [R0,#0x54]; jumptable 0000DBCA case 7|64-109
56324|code|CMP             R0, #0|0-40
56326|code|ITE NE|20-191
56328|code|MOVNE           R0, #8|8-32
56330|code|MOVEQ.W         R0, #0xFFFFFFFF|79-240-255-48
56334|code|BX              LR|112-71
56336|code|MOV.W           R0, #0xFFFFFFFF; jumptable 0000DBCA default case, cases 8,9,11,12,14,15|79-240-255-48
56340|code|BX              LR|112-71
56342|data|ALIGN 4|0-191
56344|code|PUSH            {R4,LR}|16-181
56346|code|LDR             R4, [R0,#0xC]|196-104
56348|code|CMP             R4, #0|0-44
56350|code|BEQ             loc_DC6A|36-208
56352|code|LDR             R3, [R0,#0x18]|131-105
56354|code|CMP             R3, #4; switch 5 cases|4-43
56356|code|BHI             def_DC26; jumptable 0000DC26 default case|8-216
56358|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
56362|data|DCB 3; jump table for switch statement|3
56363|data|DCB 0xE|14
56364|data|DCB 0x14|20
56365|data|DCB 0x1A|26
56366|data|DCB 8|8
56367|data|ALIGN 2|0
56368|code|MOVS            R1, #0; jumptable 0000DC26 case 0|0-33
56370|code|LDR             R0, [R0,#0x14]|64-105
56372|code|MOV             R2, R1|10-70
56374|code|BLX             R4|160-71
56376|code|POP             {R4,PC}; jumptable 0000DC26 default case|16-189
56378|code|LDR             R3, [R1,#4]; jumptable 0000DC26 case 4|75-104
56380|code|MOVS            R1, #4|4-33
56382|code|LDR             R0, [R0,#0x14]|64-105
56384|code|LDR             R2, =aSLoginTimeout; "%s: login timeout"|13-74
56386|code|BLX             R4|160-71
56388|code|POP             {R4,PC}|16-189
56390|code|LDR             R3, [R1,#4]; jumptable 0000DC26 case 1|75-104
56392|code|MOVS            R1, #1|1-33
56394|code|LDR             R0, [R0,#0x14]|64-105
56396|code|LDR             R2, =aSActionTimedOu; "%s: action timed out waiting for expect"...|11-74
56398|code|BLX             R4|160-71
56400|code|POP             {R4,PC}|16-189
56402|code|LDR             R3, [R1,#4]; jumptable 0000DC26 case 2|75-104
56404|code|MOVS            R1, #2|2-33
56406|code|LDR             R0, [R0,#0x14]|64-105
56408|code|LDR             R2, =aSActionAborted; "%s: action aborted due to previous acti"...|9-74
56410|code|BLX             R4|160-71
56412|code|POP             {R4,PC}|16-189
56414|code|LDR             R3, [R1,#4]; jumptable 0000DC26 case 3|75-104
56416|code|MOVS            R1, #3|3-33
56418|code|LDR             R0, [R0,#0x14]|64-105
56420|code|LDR             R2, =aSConnectTimeou; "%s: connect timeout"|7-74
56422|code|BLX             R4|160-71
56424|code|POP             {R4,PC}|16-189
56426|code|LDR             R0, =aActCompleteFun; "act->complete_fun != ((void *)0)"|7-72
56428|code|MOVW            R2, #0x305; line|64-242-5-50
56432|code|LDR             R1, =aDeviceC; "device.c"|6-73
56434|code|LDR             R3, =aActCompletion; "_act_completion"|7-75
56436|code|BLX             __assert_fail|252-247-112-232
56440|data|DCD aSLoginTimeout; "%s: login timeout"|16-141-1-0
56444|data|DCD aSActionTimedOu; "%s: action timed out waiting for expect"...|36-141-1-0
56448|data|DCD aSActionAborted; "%s: action aborted due to previous acti"...|88-141-1-0
56452|data|DCD aSConnectTimeou; "%s: connect timeout"|252-140-1-0
56456|data|DCD aActCompleteFun; "act->complete_fun != ((void *)0)"|204-140-1-0
56460|data|DCD aDeviceC; "device.c"|240-140-1-0
56464|data|DCD aActCompletion; "_act_completion"|152-139-1-0
56468|code|PUSH            {R4,LR}|16-181
56470|code|MOV             R4, R0|4-70
56472|code|LDR             R0, [R0,#8]|128-104
56474|code|CBZ             R0, loc_DCA0|8-177
56476|code|BL              sub_15C70|7-240-232-255
56480|code|LDR             R0, [R4]|32-104
56482|code|MOVS            R3, #0|0-35
56484|code|STR             R3, [R4,#8]|163-96
56486|code|STR             R3, [R4,#0xC]|227-96
56488|code|CBZ             R0, loc_DCAE|8-177
56490|code|BL              sub_15570|7-240-97-252
56494|code|MOVS            R3, #0|0-35
56496|code|MOV             R0, R4|32-70
56498|code|STR             R3, [R4]|35-96
56500|code|POP.W           {R4,LR}|189-232-16-64
56504|code|B.W             sub_1687C|8-240-224-189
56508|code|PUSH            {R3-R5,LR}|56-181
56510|code|MOV             R5, R1|13-70
56512|code|LDR             R0, [R0,#0x30]|0-107
56514|code|BL              sub_124D8|4-240-9-252
56518|code|MOV             R4, R0|4-70
56520|code|B               loc_DCCE|1-224
56522|code|LDR             R1, [R0,#4]|65-104
56524|code|CBNZ            R1, loc_DCE4|81-185
56526|code|MOV             R0, R4|32-70
56528|code|BL              sub_12550|4-240-62-252
56532|code|CMP             R0, #0|0-40
56534|code|BNE             loc_DCCA|248-209
56536|code|MOV             R5, R0|5-70
56538|code|MOV             R0, R4|32-70
56540|code|BL              sub_124FC|4-240-14-252
56544|code|MOV             R0, R5|40-70
56546|code|POP             {R3-R5,PC}|56-189
56548|code|MOV             R0, R5|40-70
56550|code|BL              sub_13A34|5-240-165-254
56554|code|ADDS            R0, #1|1-48
56556|code|BEQ             loc_DCCE|239-208
56558|code|MOVS            R5, #1|1-37
56560|code|B               loc_DCDA|243-231
56562|data|ALIGN 4|0-191
56564|code|PUSH            {R4-R7,LR}|240-181
56566|code|MOVW            R3, #0x423F|68-242-63-35
56570|code|LDR             R7, [R0,#4]|71-104
56572|code|MOVT.W          R3, #0xF|192-242-15-3
56576|code|LDR             R4, [R1,#4]|76-104
56578|code|SUB             SP, SP, #0xC|131-176
56580|code|LDR             R0, [R0]|0-104
56582|code|MOV             R6, R2|22-70
56584|code|ADDS            R4, R7, R4|60-25
56586|code|LDR             R5, [R1]|13-104
56588|code|CMP             R4, R3|156-66
56590|code|ADD             R5, R0|5-68
56592|code|BLE             loc_DD1C|4-221
56594|code|SUB.W           R4, R4, #0xF4000|164-245-116-36
56598|code|ADDS            R5, #1|1-53
56600|code|SUB.W           R4, R4, #0x240|164-245-16-116
56604|code|MOVS            R1, #0; tz|0-33
56606|code|MOV             R0, SP; tv|104-70
56608|code|BLX             gettimeofday|251-247-192-238
56612|code|CMP             R0, #0|0-40
56614|code|BLT             loc_DD6E|34-219
56616|code|LDR             R3, [SP,#0x20+var_20]|0-155
56618|code|CMP             R3, R5|171-66
56620|code|BEQ             loc_DD52|17-208
56622|code|ITE LT|180-191
56624|code|MOVLT           R0, #0|0-32
56626|code|MOVGE           R0, #1|1-32
56628|code|CBNZ            R0, loc_DD48|64-185
56630|code|SUBS            R5, R5, R3|237-26
56632|code|LDR             R3, [SP,#0x20+var_1C]|1-155
56634|code|STR             R5, [R6]|53-96
56636|code|SUBS            R4, R4, R3|228-26
56638|code|STR             R4, [R6,#4]|116-96
56640|code|CMP             R4, #0|0-44
56642|code|BLT             loc_DD5E|12-219
56644|code|ADD             SP, SP, #0xC|3-176
56646|code|POP             {R4-R7,PC}|240-189
56648|code|MOVS            R3, #0|0-35
56650|code|MOVS            R0, #1|1-32
56652|code|STR             R3, [R6,#4]|115-96
56654|code|STR             R3, [R6]|51-96
56656|code|B               loc_DD44|248-231
56658|code|LDR             R0, [SP,#0x20+var_1C]|1-152
56660|code|CMP             R0, R4|160-66
56662|code|ITE LT|180-191
56664|code|MOVLT           R0, #0|0-32
56666|code|MOVGE           R0, #1|1-32
56668|code|B               loc_DD34|234-231
56670|code|ADD.W           R4, R4, #0xF4000|4-245-116-36
56674|code|SUBS            R5, #1|1-61
56676|code|ADD.W           R4, R4, #0x240|4-245-16-116
56680|code|STR             R5, [R6]|53-96
56682|code|STR             R4, [R6,#4]|116-96
56684|code|B               loc_DD44|234-231
56686|code|MOVS            R0, #1|1-32
56688|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|1-73
56690|code|BL              sub_12AC4|4-240-167-254
56694|code|B               loc_DD28|215-231
56696|data|DCD aGettimeofday_0; "gettimeofday"|140-141-1-0
56700|code|PUSH            {R4-R7,LR}|240-181
56702|code|SUB.W           SP, SP, #0x400|173-245-128-109
56706|code|LDR             R5, =__stack_chk_guard|30-77
56708|code|SUB             SP, SP, #0xC|131-176
56710|code|MOV             R6, R0|6-70
56712|code|LDR             R0, [R0,#0x1C]|192-105
56714|code|MOVS            R2, #0|0-34
56716|code|STRB.W          R2, [SP,#0x420+s]|141-248-4-32
56720|code|LDR             R3, [R5]|43-104
56722|code|STR.W           R3, [SP,#0x420+var_1C]|205-248-4-52
56726|code|BL              sub_15B98|7-240-255-254
56730|code|MOV             R4, R0|4-70
56732|code|B               loc_DDB4|10-224
56734|code|ADD             R0, SP, #0x420+s; s|1-168
56736|code|BLX             strlen|251-247-214-238
56740|code|ADD             R2, SP, #0x420+s|1-170
56742|code|LDR             R3, [R7,#4]|123-104
56744|code|RSB.W           R1, R0, #0x400; maxlen|192-245-128-97
56748|code|ADDS            R0, R2, R0; s|16-24
56750|code|LDR             R2, =aD; "%d,"|20-74
56752|code|BLX             snprintf|251-247-4-239
56756|code|MOV             R0, R4|32-70
56758|code|BL              sub_15D20|7-240-179-255
56762|code|MOV             R7, R0|7-70
56764|code|CMP             R0, #0|0-40
56766|code|BNE             loc_DD9E|238-209
56768|code|MOV             R0, R4|32-70
56770|code|BL              sub_15C70|7-240-85-255
56774|code|LDRB.W          R3, [SP,#0x420+s]|157-248-4-48
56778|code|CBZ             R3, loc_DDDA|51-177
56780|code|ADD             R0, SP, #0x420+s; s|1-168
56782|code|BLX             strlen|251-247-192-238
56786|code|ADD             R3, SP, #0x420+s|1-171
56788|code|ADDS            R0, R3, R0|24-24
56790|code|STRB.W          R7, [R0,#-1]|0-248-1-124
56794|code|LDR             R2, [R6,#4]|114-104
56796|code|MOVS            R0, #8|8-32
56798|code|ADD             R3, SP, #0x420+s|1-171
56800|code|LDR             R1, =aSS; "%s: %s"|8-73
56802|code|BL              sub_127FC|4-240-11-253
56806|code|LDR.W           R2, [SP,#0x420+var_1C]|221-248-4-36
56810|code|LDR             R3, [R5]|43-104
56812|code|CMP             R2, R3|154-66
56814|code|BNE             loc_DDF8|3-209
56816|code|ADD             SP, SP, #0xC|3-176
56818|code|ADD.W           SP, SP, #0x400|13-245-128-109
56822|code|POP             {R4-R7,PC}|240-189
56824|code|BLX             __stack_chk_fail|251-247-238-237
56828|data|DCD __stack_chk_guard|16-74-2-0
56832|data|DCD aD; "%d,"|156-141-1-0
56836|data|DCD aSS; "%s: %s"|160-141-1-0
56840|code|PUSH.W          {R4-R10,LR}|45-233-240-71
56844|code|SUB.W           SP, SP, #0x2000|173-245-0-93
56848|code|LDR             R7, =__stack_chk_guard|107-79
56850|code|SUB             SP, SP, #8|130-176
56852|code|MOV             R4, R2|20-70
56854|code|LDR             R5, [R2,#0x14]|85-105
56856|code|ADD.W           R2, SP, #0x2028+var_28|13-245-0-82
56860|code|MOV             R6, R0|6-70
56862|code|LDR             R3, [R7]|59-104
56864|code|ADDS            R2, #4|4-50
56866|code|MOV             R10, R1|138-70
56868|code|STR             R3, [R2]|19-96
56870|code|CMP             R5, #0|0-45
56872|code|BNE             loc_DED6|85-209
56874|code|LDR             R0, [R4]|32-104
56876|code|STR             R5, [SP,#0x2028+var_2028]|0-149
56878|code|CMP             R0, #0|0-40
56880|code|BEQ             loc_DEFC|100-208
56882|code|BL              sub_15678|7-240-33-252
56886|code|CMP             R0, #0|0-40
56888|code|BLE             loc_DEFC|96-221
56890|code|LDR             R0, [R4]|32-104
56892|code|BL              sub_15678|7-240-28-252
56896|code|CMP             R0, #1|1-40
56898|code|BLE             loc_DF38|121-221
56900|code|MOV             R0, R5|40-70
56902|code|BL              sub_14BB8|6-240-183-254
56906|code|MOV             R8, R0|128-70
56908|code|CMP             R0, #0|0-40
56910|code|BEQ.W           loc_DF62|0-240-136-128
56914|code|LDR             R0, [R4]|32-104
56916|code|BL              sub_15B98|7-240-160-254
56920|code|MOV             R9, R0|129-70
56922|code|CMP             R0, #0|0-40
56924|code|BEQ.W           loc_DF94|0-240-154-128
56928|code|MOV             R0, R9|72-70
56930|code|BL              sub_15D20|7-240-93-255
56934|code|MOV             R5, R0|5-70
56936|code|CMP             R0, #0|0-40
56938|code|BEQ.W           loc_DF70|0-240-129-128
56942|code|LDR             R1, [R5]|41-104
56944|code|MOV             R0, R8|64-70
56946|code|BL              sub_14C04|6-240-199-254
56950|code|MOV             R5, R0|5-70
56952|code|CMP             R0, #0|0-40
56954|code|BNE             loc_DE60|241-209
56956|code|LDR             R2, [R6,#4]|114-104
56958|code|MOVS            R0, #1|1-32
56960|code|LDR             R1, =aProcessSendSHo; "_process_send(%s): hostlist_push"|80-73
56962|code|BL              err|4-240-55-254
56966|code|MOV             R0, R9|72-70
56968|code|BL              sub_15C70|7-240-242-254
56972|code|MOV             R0, R8|64-70
56974|code|BL              sub_145A0|6-240-135-251
56978|code|CBZ             R5, loc_DECC|221-177
56980|code|MOV             R0, R5; s|40-70
56982|code|BLX             strlen|251-247-92-238
56986|code|MOV             R1, R5|41-70
56988|code|MOV             R3, SP|107-70
56990|code|MOV             R2, R0|2-70
56992|code|LDR             R0, [R6,#0x28]; s2|176-106
56994|code|BL              sub_BA38|253-247-201-253
56998|code|CMP             R0, #0|0-40
57000|code|MOV             R8, R0|128-70
57002|code|BLT             loc_DF54|83-219
57004|code|LDR             R3, [SP,#0x2028+var_2028]|0-155
57006|code|CMP             R3, #0|0-43
57008|code|BLE             loc_DF0A|43-221
57010|code|LDR             R2, [R6,#4]|114-104
57012|code|MOVS            R0, #0|0-32
57014|code|LDR             R1, =aProcessSendSBu; "_process_send(%s): buffer overrun, %d d"...|68-73
57016|code|BL              err|4-240-28-254
57020|code|MOV             R0, R5; s|40-70
57022|code|BLX             strlen|251-247-72-238
57026|code|LDR             R3, [SP,#0x2028+var_2028]|0-155
57028|code|RSB.W           R8, R8, R0|200-235-0-8
57032|code|CMP             R3, R8|67-69
57034|code|BNE             loc_DFB2|114-209
57036|code|MOVS            R3, #1|1-35
57038|code|MOV             R0, R5|40-70
57040|code|STR             R3, [R4,#0x14]|99-97
57042|code|BL              sub_1687C|8-240-211-252
57046|code|LDR             R0, [R6,#0x28]|176-106
57048|code|BL              sub_B61C|253-247-160-251
57052|code|CBZ             R0, loc_DEE4|16-177
57054|code|MOVS            R0, #1|1-32
57056|code|MOVS            R3, #0|0-35
57058|code|STR             R3, [R4,#0x14]|99-97
57060|code|ADD.W           R3, SP, #0x2028+var_28|13-245-0-83
57064|code|ADDS            R3, #4|4-51
57066|code|LDR             R2, [R3]|26-104
57068|code|LDR             R3, [R7]|59-104
57070|code|CMP             R2, R3|154-66
57072|code|BNE             loc_DFAE|93-209
57074|code|ADD             SP, SP, #8|2-176
57076|code|ADD.W           SP, SP, #0x2000|13-245-0-93
57080|code|POP.W           {R4-R10,PC}|189-232-240-135
57084|code|LDR             R3, [R4,#0xC]|227-104
57086|code|MOVS            R1, #0|0-33
57088|code|LDR             R0, [R3,#4]|88-104
57090|code|BL              sub_15FD0|8-240-101-248
57094|code|MOV             R5, R0|5-70
57096|code|B               loc_DE92|195-231
57098|code|MOV             R0, R5; s|40-70
57100|code|BLX             strlen|251-247-32-238
57104|code|MOV             R1, R0|1-70
57106|code|MOV             R0, R5|40-70
57108|code|BL              sub_128F8|4-240-240-252
57112|code|LDR.W           R12, [R10,#0x10]|218-248-16-192
57116|code|MOV             R9, R0|129-70
57118|code|CMP.W           R12, #0|188-241-0-15
57122|code|BEQ             loc_DF30|5-208
57124|code|LDR             R2, [R6,#4]|114-104
57126|code|MOV             R3, R9|75-70
57128|code|LDR.W           R0, [R10,#0x14]|218-248-20-0
57132|code|LDR             R1, =aSendSS; "send(%s): '%s'"|39-73
57134|code|BLX             R12|224-71
57136|code|MOV             R0, R9|72-70
57138|code|BL              sub_1687C|8-240-163-252
57142|code|B               loc_DEBC|193-231
57144|code|LDR             R0, [R4]|32-104
57146|code|BL              sub_15AA8|7-240-181-253
57150|code|LDR             R3, [R4,#0xC]|227-104
57152|code|LDR             R1, [R0]|1-104
57154|code|LDR             R0, [R3,#4]|88-104
57156|code|LDR             R3, =aUnresolved; "[unresolved]"|34-75
57158|code|CMP             R1, #0|0-41
57160|code|IT EQ|8-191
57162|code|MOVEQ           R1, R3|25-70
57164|code|BL              sub_15FD0|8-240-64-248
57168|code|MOV             R5, R0|5-70
57170|code|B               loc_DE92|158-231
57172|code|LDR             R2, [R6,#4]|114-104
57174|code|MOVS            R0, #1|1-32
57176|code|LDR             R1, =aProcessSendSCb; "_process_send(%s): cbuf_write returned "...|30-73
57178|code|MOV             R3, R8|67-70
57180|code|BL              err|4-240-202-253
57184|code|B               loc_DECC|180-231
57186|code|LDR             R2, [R6,#4]|114-104
57188|code|MOVS            R0, #1|1-32
57190|code|LDR             R1, =aProcessSendSHo_0; "_process_send(%s): hostlist_create"|28-73
57192|code|MOV             R5, R8|69-70
57194|code|BL              err|4-240-195-253
57198|code|B               loc_DECC|173-231
57200|code|MOV             R0, R8|64-70
57202|code|BL              sub_14030|6-240-93-248
57206|code|MOV             R0, R8|64-70
57208|code|MOV.W           R1, #0x2000|79-244-0-81
57212|code|ADD             R2, SP, #0x2028+var_2024|1-170
57214|code|BL              sub_13C80|5-240-127-254
57218|code|CMP             R0, #0|0-40
57220|code|BLT             loc_DFA2|13-219
57222|code|LDR             R3, [R4,#0xC]|227-104
57224|code|ADD             R1, SP, #0x2028+var_2024|1-169
57226|code|LDR             R0, [R3,#4]|88-104
57228|code|BL              sub_15FD0|8-240-32-248
57232|code|MOV             R5, R0|5-70
57234|code|B               loc_DE86|120-231
57236|code|LDR             R2, [R6,#4]|114-104
57238|code|MOVS            R0, #1|1-32
57240|code|LDR             R1, =aProcessSendSLi; "_process_send(%s): list_iterator_create"|16-73
57242|code|MOV             R5, R9|77-70
57244|code|BL              err|4-240-170-253
57248|code|B               loc_DE8C|116-231
57250|code|LDR             R2, [R6,#4]|114-104
57252|code|MOVS            R0, #1|1-32
57254|code|LDR             R1, =aProcessSendSHo_1; "_process_send(%s): hostlist_ranged_stri"...|14-73
57256|code|BL              err|4-240-164-253
57260|code|B               loc_DE86|107-231
57262|code|BLX             __stack_chk_fail|251-247-20-237
57266|code|LDR             R0, =aWritten0Droppe; "written < 0 || (dropped == strlen(str) "...|12-72
57268|code|MOVW            R2, #0x4BB; line|64-242-187-66
57272|code|LDR             R1, =aDeviceC; "device.c"|11-73
57274|code|LDR             R3, =aProcessSend; "_process_send"|12-75
57276|code|BLX             __assert_fail|251-247-204-238
57280|data|DCD __stack_chk_guard|16-74-2-0
57284|data|DCD aProcessSendSHo; "_process_send(%s): hostlist_push"|4-142-1-0
57288|data|DCD aProcessSendSBu; "_process_send(%s): buffer overrun, %d d"...|128-142-1-0
57292|data|DCD aSendSS; "send(%s): '%s'"|176-142-1-0
57296|data|DCD aUnresolved; "[unresolved]"|168-141-1-0
57300|data|DCD aProcessSendSCb; "_process_send(%s): cbuf_write returned "...|84-142-1-0
57304|data|DCD aProcessSendSHo_0; "_process_send(%s): hostlist_create"|184-141-1-0
57308|data|DCD aProcessSendSLi; "_process_send(%s): list_iterator_create"|220-141-1-0
57312|data|DCD aProcessSendSHo_1; "_process_send(%s): hostlist_ranged_stri"...|40-142-1-0
57316|data|DCD aWritten0Droppe; "written < 0 || (dropped == strlen(str) "...|192-142-1-0
57320|data|DCD aDeviceC; "device.c"|240-140-1-0
57324|data|DCD aProcessSend; "_process_send"|168-139-1-0
57328|code|LDR             R2, [R0]|2-104
57330|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
57338|code|CMP             R2, R3|154-66
57340|code|PUSH            {R4-R6,LR}|112-181
57342|code|MOV             R6, R0|6-70
57344|code|BNE             loc_E07C|60-209
57346|code|LDR             R3, [R0,#0xC]|195-104
57348|code|MOVS            R2, #0|0-34
57350|code|STR             R2, [R0]|2-96
57352|code|CMP             R3, #2|2-43
57354|code|BEQ             loc_E066|44-208
57356|code|LDR             R0, [R6,#4]|112-104
57358|code|BL              sub_1687C|8-240-53-252
57362|code|LDR             R0, [R6,#8]|176-104
57364|code|BL              sub_1687C|8-240-50-252
57368|code|LDR.W           R0, [R6,#0xD4]|214-248-212-0
57372|code|CBZ             R0, loc_E028|32-177
57374|code|LDR.W           R3, [R6,#0xD0]|214-248-208-48
57378|code|CMP             R3, #0|0-43
57380|code|BEQ             loc_E06E|35-208
57382|code|BLX             R3|152-71
57384|code|LDR             R0, [R6,#0x1C]|240-105
57386|code|BL              sub_15570|7-240-161-250
57390|code|LDR             R0, [R6,#0x30]|48-107
57392|code|CBZ             R0, loc_E036|8-177
57394|code|BL              sub_12488|4-240-41-250
57398|code|ADD.W           R5, R6, #0x30 ; '0'|6-241-48-5
57402|code|MOVS            R4, #0x1A|26-36
57404|code|LDR.W           R0, [R5,#4]!|85-248-4-15
57408|code|CBZ             R0, loc_E046|8-177
57410|code|BL              sub_15570|7-240-149-250
57414|code|SUBS            R4, #1|1-60
57416|code|BNE             loc_E03C|248-209
57418|code|LDR             R0, [R6,#0x28]|176-106
57420|code|BL              sub_B3A0|253-247-168-249
57424|code|LDR             R0, [R6,#0x2C]|240-106
57426|code|BL              sub_B3A0|253-247-165-249
57430|code|LDR             R0, [R6,#0x14]|112-105
57432|code|BL              sub_16BFC|8-240-208-253
57436|code|MOV             R0, R6|48-70
57438|code|POP.W           {R4-R6,LR}|189-232-112-64
57442|code|B.W             sub_1687C|8-240-11-188
57446|code|LDR.W           R3, [R0,#0xCC]|208-248-204-48
57450|code|BLX             R3|152-71
57452|code|B               loc_E00C|206-231
57454|code|LDR             R0, =aDevDestroyVoid; "dev->destroy != ((void *)0)"|7-72
57456|code|MOV.W           R2, #0x520|79-244-164-98
57460|code|LDR             R1, =aDeviceC; "device.c"|6-73
57462|code|LDR             R3, =aDevDestroy; "dev_destroy"|7-75
57464|code|BLX             __assert_fail|251-247-110-238
57468|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|6-72
57470|code|MOVW            R2, #0x517|64-242-23-82
57474|code|LDR             R1, =aDeviceC; "device.c"|3-73
57476|code|LDR             R3, =aDevDestroy; "dev_destroy"|3-75
57478|code|BLX             __assert_fail|251-247-104-238
57482|data|ALIGN 4|0-191
57484|data|DCD aDevDestroyVoid; "dev->destroy != ((void *)0)"|16-143-1-0
57488|data|DCD aDeviceC; "device.c"|240-140-1-0
57492|data|DCD aDevDestroy; "dev_destroy"|184-139-1-0
57496|data|DCD aDevMagic0xbeef; "dev->magic == 0xbeefb111"|244-142-1-0
57500|code|PUSH            {R3,LR}|8-181
57502|code|LDR             R0, [R0,#4]|64-104
57504|code|BLX             strcmp|251-247-44-236
57508|code|RSBS.W          R0, R0, #1|208-241-1-0
57512|code|IT CC|56-191
57514|code|MOVCC           R0, #0|0-32
57516|code|POP             {R3,PC}|8-189
57518|data|ALIGN 0x10|0-191
57520|code|PUSH            {R4-R6,LR}|112-181
57522|code|MOV             R4, R0|4-70
57524|code|MOVS            R0, #0x18|24-32
57526|code|MOV             R6, R1|14-70
57528|code|BL              sub_16730|8-240-58-251
57532|code|MOV             R5, R0|5-70
57534|code|MOV             R0, R4|32-70
57536|code|BL              sub_15B98|7-240-106-253
57540|code|MOV             R3, R0|3-70
57542|code|STR             R3, [R5,#8]|171-96
57544|code|BL              sub_15D20|7-240-42-254
57548|code|MOVS            R3, #0|0-35
57550|code|STR             R4, [R5,#4]|108-96
57552|code|STR             R6, [R5]|46-96
57554|code|STR             R3, [R5,#0x10]|43-97
57556|code|STR             R3, [R5,#0x14]|107-97
57558|code|STR             R0, [R5,#0xC]|232-96
57560|code|MOV             R0, R5|40-70
57562|code|POP             {R4-R6,PC}|112-189
57564|code|PUSH.W          {R3-R9,LR}|45-233-248-67
57568|code|MOV             R4, R1|12-70
57570|code|MOV             R5, R0|5-70
57572|code|LDR             R1, =aCreateActionD; "_create_action: %d"|29-73
57574|code|MOV             R6, R2|22-70
57576|code|MOVS            R0, #8|8-32
57578|code|MOV             R2, R4|34-70
57580|code|MOV             R8, R3|152-70
57582|code|LDR             R7, [SP,#0x20+arg_8]|10-159
57584|code|BL              sub_127FC|4-240-132-251
57588|code|MOVS            R0, #0x30 ; '0'|48-32
57590|code|BL              sub_16730|8-240-27-251
57594|code|MOV             R3, #0xB00BB000|79-244-48-67-203-242-11-3
57602|code|STR             R3, [R0]|3-96
57604|code|MOV             R9, R0|129-70
57606|code|LDR             R3, [SP,#0x20+arg_0]|8-155
57608|code|STR             R4, [R0,#4]|68-96
57610|code|STR.W           R8, [R0,#0xC]|192-248-12-128
57614|code|STR             R3, [R0,#0x10]|3-97
57616|code|LDR             R3, [SP,#0x20+arg_4]|9-155
57618|code|STR             R3, [R0,#0x14]|67-97
57620|code|LDR             R0, =(sub_DC94+1)|18-72
57622|code|BL              sub_15530|7-240-11-250
57626|code|LDR.W           R3, [R9,#4]|217-248-4-48
57630|code|MOV             R1, R6|49-70
57632|code|ADD.W           R5, R5, R3,LSL#2|5-235-131-5
57636|code|STR.W           R0, [R9,#8]|201-248-8-0
57640|code|LDR             R0, [R5,#0x34]|104-107
57642|code|BL              sub_E0B0|255-247-193-255
57646|code|LDR.W           R3, [R9,#8]|217-248-8-48
57650|code|MOV             R1, R0|1-70
57652|code|MOV             R0, R3|24-70
57654|code|BL              sub_15A00|7-240-99-252
57658|code|MOVS            R3, #0|0-35
57660|code|MOV             R0, R7|56-70
57662|code|STR.W           R3, [R9,#0x18]|201-248-24-48
57666|code|CBZ             R7, loc_E148|15-177
57668|code|BL              sub_A3AC|252-247-50-249
57672|code|MOVS            R3, #0|0-35
57674|code|STR.W           R0, [R9,#0x2C]|201-248-44-0
57678|code|STR.W           R3, [R9,#0x20]|201-248-32-48
57682|code|MOV             R0, R9|72-70
57684|code|STR.W           R3, [R9,#0x1C]|201-248-28-48
57688|code|POP.W           {R3-R9,PC}|189-232-248-131
57692|data|DCD aCreateActionD; "_create_action: %d"|44-143-1-0
57696|data|DCD sub_DC94+1|149-220-0-0
57700|code|PUSH.W          {R4-R11,LR}|45-233-240-79
57704|code|CMP             R1, #0x18|24-41
57706|code|SUB             SP, SP, #0x24|137-176
57708|code|MOV             R5, R0|5-70
57710|code|MOV             R7, R1|15-70
57712|code|MOV             R6, R2|22-70
57714|code|STR             R3, [SP,#0x48+var_34]|5-147
57716|code|BLS             loc_E184|6-217
57718|code|LDR             R0, =aFalse; "FALSE"|147-72
57720|code|MOVW            R2, #0x22A; line|64-242-42-34
57724|code|LDR             R1, =aDeviceC; "device.c"|146-73
57726|code|LDR             R3, =aEnqueueActions; "_enqueue_actions"|147-75
57728|code|BLX             __assert_fail|251-247-234-237
57732|code|MOV.W           R9, #1|79-240-1-9
57736|code|MOVW            R2, #0x2484|66-242-132-66
57740|code|LSL.W           R3, R9, R1|9-250-1-243
57744|code|MOVT.W          R2, #0x1A9|192-242-169-18
57748|code|ANDS            R2, R3|26-64
57750|code|CMP             R2, #0|0-42
57752|code|BEQ.W           loc_E29E|0-240-129-128
57756|code|LDR             R0, =(sub_E3F8+1)|140-72
57758|code|BL              sub_15530|7-240-199-249
57762|code|STR             R0, [SP,#0x48+var_2C]|7-144
57764|code|CMP             R6, #0|0-46
57766|code|BEQ.W           loc_E3B6|0-240-6-129
57770|code|MOVS            R0, #0|0-32
57772|code|BL              sub_15530|7-240-192-249
57776|code|STR             R0, [SP,#0x48+var_30]|6-144
57778|code|CMP             R0, #0|0-40
57780|code|BEQ.W           loc_E306|0-240-167-128
57784|code|LDR             R0, [R5,#0x30]|40-107
57786|code|ADD.W           R8, R7, #0xC|7-241-12-8
57790|code|BL              sub_124D8|4-240-139-249
57794|code|STR             R5, [SP,#0x48+var_38]|4-149
57796|code|ADD.W           R8, R5, R8,LSL#2|5-235-136-8
57800|code|MOV             R4, R0|4-70
57802|code|MOV             R0, R4|32-70
57804|code|BL              sub_12550|4-240-192-249
57808|code|MOV             R10, R0|130-70
57810|code|CMP             R0, #0|0-40
57812|code|BEQ             loc_E244|54-208
57814|code|LDR.W           R1, [R10,#4]|218-248-4-16
57818|code|CMP             R1, #0|0-41
57820|code|BEQ.W           loc_E35E|0-240-191-128
57824|code|MOV             R0, R6|48-70
57826|code|BL              sub_13A34|5-240-39-252
57830|code|ADDS            R0, #1|1-48
57832|code|BEQ.W           loc_E358|0-240-182-128
57836|code|LDR             R0, [SP,#0x48+var_30]|6-152
57838|code|MOV             R1, R10|81-70
57840|code|BL              sub_156BC|7-240-100-250
57844|code|CMP             R0, #0|0-40
57846|code|BEQ.W           loc_E306|0-240-134-128
57850|code|LDR.W           R3, [R8,#4]|216-248-4-48
57854|code|CMP             R3, #0|0-43
57856|code|BEQ             loc_E1CA|227-208
57858|code|MOVS            R0, #0|0-32
57860|code|BL              sub_15530|7-240-148-249
57864|code|MOV             R11, R0|131-70
57866|code|CMP             R0, #0|0-40
57868|code|BEQ             loc_E306|123-208
57870|code|MOV             R1, R10|81-70
57872|code|BL              sub_156BC|7-240-84-250
57876|code|CMP             R0, #0|0-40
57878|code|BEQ             loc_E300|115-208
57880|code|LDR             R5, [SP,#0x48+arg_0]|18-157
57882|code|MOV             R2, R11|90-70
57884|code|LDR             R3, [SP,#0x48+var_34]|5-155
57886|code|MOV             R1, R7|57-70
57888|code|LDR             R0, [SP,#0x48+var_38]|4-152
57890|code|STR             R5, [SP,#0x48+var_48]|0-149
57892|code|LDR             R5, [SP,#0x48+arg_4]|19-157
57894|code|STR             R5, [SP,#0x48+var_44]|1-149
57896|code|LDR             R5, [SP,#0x48+arg_8]|20-157
57898|code|STR             R5, [SP,#0x48+var_40]|2-149
57900|code|BL              sub_E0DC|255-247-86-255
57904|code|MOV             R1, R0|1-70
57906|code|LDR             R0, [SP,#0x48+var_2C]|7-152
57908|code|BL              sub_156BC|7-240-66-250
57912|code|MOV             R0, R4|32-70
57914|code|BL              sub_12550|4-240-137-249
57918|code|MOV             R10, R0|130-70
57920|code|CMP             R0, #0|0-40
57922|code|BNE             loc_E1D6|200-209
57924|code|MOV             R0, R4|32-70
57926|code|LDR             R5, [SP,#0x48+var_38]|4-157
57928|code|BL              sub_124FC|4-240-88-249
57932|code|CMP.W           R9, #0|185-241-0-15
57936|code|BNE             loc_E318|98-209
57938|code|CMP             R7, #0x16|22-47
57940|code|BHI             loc_E266|7-216
57942|code|MOVS            R2, #1|1-34
57944|code|MOVS            R3, #0x78000C|12-35-192-242-120-3
57950|code|LSLS            R2, R7|186-64
57952|code|ANDS            R3, R2|19-64
57954|code|CMP             R3, #0|0-43
57956|code|BNE             loc_E318|88-209
57958|code|MOV             R1, R7|57-70
57960|code|MOV             R0, R5|40-70
57962|code|BL              sub_DBC4|255-247-171-252
57966|code|ADDS            R3, R0, #1|67-28
57968|code|MOV             R1, R0|1-70
57970|code|BNE.W           loc_E3A8|64-240-153-128
57974|code|MOV.W           R9, #0|79-240-0-9
57978|code|LDR             R4, [SP,#0x48+var_2C]|7-156
57980|code|B               loc_E28C|6-224
57982|code|LDR             R3, [R5,#0x1C]|235-105
57984|code|MOV             R1, R0|1-70
57986|code|ADD.W           R9, R9, #1|9-241-1-9
57990|code|MOV             R0, R3|24-70
57992|code|BL              sub_156BC|7-240-24-250
57996|code|MOV             R0, R4|32-70
57998|code|BL              sub_15A60|7-240-231-251
58002|code|CMP             R0, #0|0-40
58004|code|BNE             loc_E27E|243-209
58006|code|LDR             R0, [SP,#0x48+var_2C]|7-152
58008|code|BL              sub_15570|7-240-106-249
58012|code|B               loc_E310|56-224
58014|code|TST.W           R3, #0x42|19-240-66-15
58018|code|BNE             loc_E2DC|27-209
58020|code|LSLS            R1, R3, #0x1F|217-7
58022|code|BPL.W           loc_E176|127-245-102-175
58026|code|LDR             R0, [R0,#0x1C]|192-105
58028|code|BL              sub_1562C|7-240-190-249
58032|code|CMP             R0, #0|0-40
58034|code|BEQ             loc_E362|86-208
58036|code|LDR             R4, [SP,#0x48+arg_0]|18-156
58038|code|MOVS            R1, #0|0-33
58040|code|LDR             R6, [SP,#0x48+arg_4]|19-158
58042|code|MOV             R0, R5|40-70
58044|code|MOV             R2, R1|10-70
58046|code|LDR             R3, [SP,#0x48+var_34]|5-155
58048|code|STR             R4, [SP,#0x48+var_48]|0-148
58050|code|MOV.W           R9, #1|79-240-1-9
58054|code|LDR             R4, [SP,#0x48+arg_8]|20-156
58056|code|STR             R6, [SP,#0x48+var_44]|1-150
58058|code|STR             R4, [SP,#0x48+var_40]|2-148
58060|code|BL              sub_E0DC|255-247-6-255
58064|code|LDR             R3, [R5,#0x1C]|235-105
58066|code|MOV             R1, R0|1-70
58068|code|MOV             R0, R3|24-70
58070|code|BL              sub_1571C|7-240-33-250
58074|code|B               loc_E2F8|13-224
58076|code|LDR             R6, [SP,#0x48+arg_0]|18-158
58078|code|LDR             R4, [SP,#0x48+arg_4]|19-156
58080|code|LDR             R3, [SP,#0x48+var_34]|5-155
58082|code|STR             R6, [SP,#0x48+var_48]|0-150
58084|code|LDR             R6, [SP,#0x48+arg_8]|20-158
58086|code|STR             R4, [SP,#0x48+var_44]|1-148
58088|code|STR             R6, [SP,#0x48+var_40]|2-150
58090|code|BL              sub_E0DC|255-247-247-254
58094|code|LDR             R3, [R5,#0x1C]|235-105
58096|code|MOV             R1, R0|1-70
58098|code|MOV             R0, R3|24-70
58100|code|BL              sub_156BC|7-240-226-249
58104|code|MOV             R0, R9|72-70
58106|code|ADD             SP, SP, #0x24 ; '$'|9-176
58108|code|POP.W           {R4-R11,PC}|189-232-240-143
58112|code|MOV             R0, R11|88-70
58114|code|BL              sub_15570|7-240-53-249
58118|code|LDR             R0, [SP,#0x48+var_2C]|7-152
58120|code|MOV.W           R9, #0|79-240-0-9
58124|code|BL              sub_15570|7-240-48-249
58128|code|LDR             R0, [SP,#0x48+var_30]|6-152
58130|code|BL              sub_15570|7-240-45-249
58134|code|B               loc_E2F8|239-231
58136|code|MOV             R0, R5|40-70
58138|code|MOV             R1, R7|57-70
58140|code|BL              sub_DB38|255-247-12-252
58144|code|ADDS            R2, R0, #1|66-28
58146|code|BEQ             loc_E266|160-208
58148|code|MOVS            R2, #0|0-34
58150|code|LDR             R6, [SP,#0x48+arg_0]|18-158
58152|code|LDR             R3, [SP,#0x48+var_34]|5-155
58154|code|MOV             R1, R0|1-70
58156|code|MOV             R4, R2|20-70
58158|code|MOV             R0, R5|40-70
58160|code|STR             R6, [SP,#0x48+var_48]|0-150
58162|code|LDR             R6, [SP,#0x48+arg_4]|19-158
58164|code|MOV.W           R9, #1|79-240-1-9
58168|code|STR             R6, [SP,#0x48+var_44]|1-150
58170|code|LDR             R6, [SP,#0x48+arg_8]|20-158
58172|code|STR             R6, [SP,#0x48+var_40]|2-150
58174|code|BL              sub_E0DC|255-247-205-254
58178|code|LDR             R3, [R5,#0x1C]|235-105
58180|code|MOV             R1, R0|1-70
58182|code|MOV             R0, R3|24-70
58184|code|BL              sub_156BC|7-240-184-249
58188|code|LDR             R0, [SP,#0x48+var_2C]|7-152
58190|code|BL              sub_15570|7-240-15-249
58194|code|CMP             R4, #0|0-44
58196|code|BNE             loc_E2F8|208-209
58198|code|B               loc_E310|219-231
58200|code|MOV.W           R9, #0|79-240-0-9
58204|code|B               loc_E1CA|53-231
58206|code|MOV             R9, R1|137-70
58208|code|B               loc_E1CA|51-231
58210|code|LDR             R0, [R5,#0x1C]|232-105
58212|code|BL              sub_15AA8|7-240-160-251
58216|code|MOV             R6, R0|6-70
58218|code|B               loc_E37A|6-224
58220|code|LDR             R0, [R6,#8]|176-104
58222|code|BL              sub_1562C|7-240-93-249
58226|code|CBNZ            R0, loc_E390|104-185
58228|code|MOV             R0, R4|32-70
58230|code|BL              sub_DC94|255-247-141-252
58234|code|LDR             R0, [R6,#8]|176-104
58236|code|BL              sub_15A60|7-240-112-251
58240|code|MOV             R4, R0|4-70
58242|code|CMP             R0, #0|0-40
58244|code|BNE             loc_E36C|242-209
58246|code|MOVS            R0, #8|8-32
58248|code|LDR             R1, =aResettingItera; "resetting iterator for non-login action"|18-73
58250|code|BL              sub_127FC|4-240-55-250
58254|code|B               loc_E2B4|145-231
58256|code|MOV             R1, R4|33-70
58258|code|LDR             R0, [R6,#8]|176-104
58260|code|BL              sub_15A00|7-240-52-251
58264|code|LDR             R0, [R4,#8]|160-104
58266|code|BL              sub_15C10|7-240-57-252
58270|code|LDR             R0, [R4,#8]|160-104
58272|code|BL              sub_15D20|7-240-190-252
58276|code|STR             R0, [R4,#0xC]|224-96
58278|code|B               loc_E386|238-231
58280|code|LDR             R4, [SP,#0x48+arg_0]|18-156
58282|code|MOV             R0, R5|40-70
58284|code|LDR             R2, [SP,#0x48+var_30]|6-154
58286|code|LDR             R3, [SP,#0x48+var_34]|5-155
58288|code|STR             R4, [SP,#0x48+var_48]|0-148
58290|code|MOVS            R4, #1|1-36
58292|code|B               loc_E332|189-231
58294|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|8-72
58296|code|MOVW            R2, #0x293; line|64-242-147-34
58300|code|LDR             R1, =aDeviceC; "device.c"|2-73
58302|code|LDR             R3, =aEnqueueTargett; "_enqueue_targetted_actions"|7-75
58304|code|BLX             __assert_fail|251-247-202-236
58308|data|DCD aFalse; "FALSE"|52-132-1-0
58312|data|DCD aDeviceC; "device.c"|240-140-1-0
58316|data|DCD aEnqueueActions; "_enqueue_actions"|224-139-1-0
58320|data|DCD sub_E3F8+1|249-227-0-0
58324|data|DCD aResettingItera; "resetting iterator for non-login action"|64-143-1-0
58328|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
58332|data|DCD aEnqueueTargett; "_enqueue_targetted_actions"|196-139-1-0
58336|code|MOVS            R1, #0|0-33
58338|code|PUSH            {LR}|0-181
58340|code|SUB             SP, SP, #0x14|133-176
58342|code|MOV             R2, R1|10-70
58344|code|MOV             R3, R1|11-70
58346|code|STR             R1, [SP,#0x18+var_18]|0-145
58348|code|STR             R1, [SP,#0x18+var_14]|1-145
58350|code|STR             R1, [SP,#0x18+var_10]|2-145
58352|code|BL              sub_E164|255-247-184-254
58356|code|ADD             SP, SP, #0x14|5-176
58358|code|POP             {PC}|0-189
58360|code|LDR             R2, [R0]|2-104
58362|code|MOV             R3, #0xB00BB000|79-244-48-67-203-242-11-3
58370|code|CMP             R2, R3|154-66
58372|code|PUSH            {R4,LR}|16-181
58374|code|MOV             R4, R0|4-70
58376|code|BNE             loc_E43A|23-209
58378|code|LDR             R2, [R0,#4]|66-104
58380|code|MOVS            R3, #0|0-35
58382|code|MOVS            R0, #8|8-32
58384|code|STR             R3, [R4]|35-96
58386|code|LDR             R1, =aDestroyActionD; "_destroy_action: %d"|13-73
58388|code|BL              sub_127FC|4-240-242-249
58392|code|LDR             R0, [R4,#8]|160-104
58394|code|CBZ             R0, loc_E420|8-177
58396|code|BL              sub_15570|7-240-168-248
58400|code|LDR             R0, [R4,#0x2C]|224-106
58402|code|MOVS            R3, #0|0-35
58404|code|STR             R3, [R4,#8]|163-96
58406|code|CBZ             R0, loc_E42C|8-177
58408|code|BL              sub_A2F4|251-247-100-255
58412|code|MOVS            R3, #0|0-35
58414|code|MOV             R0, R4|32-70
58416|code|STR             R3, [R4,#0x2C]|227-98
58418|code|POP.W           {R4,LR}|189-232-16-64
58422|code|B.W             sub_1687C|8-240-33-186
58426|code|LDR             R0, =aActMagic0xb00b; "act->magic == 0xb00bb000"|4-72
58428|code|MOV.W           R2, #0x12E; line|79-244-151-114
58432|code|LDR             R1, =aDeviceC; "device.c"|3-73
58434|code|LDR             R3, =aDestroyAction; "_destroy_action"|4-75
58436|code|BLX             __assert_fail|251-247-136-236
58440|data|DCD aDestroyActionD; "_destroy_action: %d"|152-143-1-0
58444|data|DCD aActMagic0xb00b; "act->magic == 0xb00bb000"|124-143-1-0
58448|data|DCD aDeviceC; "device.c"|240-140-1-0
58452|data|DCD aDestroyAction; "_destroy_action"|244-139-1-0
58456|code|PUSH            {R3-R5,LR}|56-181
58458|code|MOV             R4, R0|4-70
58460|code|LDR.W           R3, [R0,#0xC0]|208-248-192-48
58464|code|CBZ             R3, loc_E49A|219-177
58466|code|MOVS            R1, #0; tz|0-33
58468|code|ADD.W           R0, R0, #0x9C; tv|0-241-156-0
58472|code|BLX             gettimeofday|251-247-28-235
58476|code|CMP             R0, #0|0-40
58478|code|BLT             loc_E490|15-219
58480|code|LDR.W           R2, [R4,#0xA4]|212-248-164-32
58484|code|MOV             R0, R4|32-70
58486|code|LDR.W           R3, [R4,#0xC0]|212-248-192-48
58490|code|ADDS            R2, #1|1-50
58492|code|STR.W           R2, [R4,#0xA4]|196-248-164-32
58496|code|BLX             R3|152-71
58498|code|MOV             R5, R0|5-70
58500|code|CBZ             R0, loc_E48C|16-177
58502|code|MOV             R0, R4|32-70
58504|code|BL              sub_E3E0|255-247-170-255
58508|code|MOV             R0, R5|40-70
58510|code|POP             {R3-R5,PC}|56-189
58512|code|MOVS            R0, #1|1-32
58514|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|5-73
58516|code|BL              sub_12AC4|4-240-22-251
58520|code|B               loc_E470|234-231
58522|code|LDR             R0, =aDevConnectVoid; "dev->connect != ((void *)0)"|4-72
58524|code|MOV.W           R2, #0x19A; line|79-244-205-114
58528|code|LDR             R1, =aDeviceC; "device.c"|3-73
58530|code|LDR             R3, =aConnect_0; "_connect"|4-75
58532|code|BLX             __assert_fail|251-247-88-236
58536|data|DCD aGettimeofday_0; "gettimeofday"|140-141-1-0
58540|data|DCD aDevConnectVoid; "dev->connect != ((void *)0)"|172-143-1-0
58544|data|DCD aDeviceC; "device.c"|240-140-1-0
58548|data|DCD aConnect_0; "_connect"|4-140-1-0
58552|code|MOV             R3, #0xDFF1|77-246-241-115-192-242-0-3
58560|code|PUSH            {R4,LR}|16-181
58562|code|MOV             R4, R0|4-70
58564|code|MOV             R0, R3|24-70
58566|code|BL              sub_15530|7-240-51-248
58570|code|MOV             R3, #0x24A44|68-246-68-35-192-242-2-3
58578|code|STM.W           R3, {R0,R4}|131-232-17-0
58582|code|POP             {R4,PC}|16-189
58584|code|MOV             R3, #0x24A44|68-246-68-35-192-242-2-3
58592|code|LDR             R0, [R3]|24-104
58594|code|B.W             sub_15570|7-240-69-184
58598|data|ALIGN 4|0-191
58600|code|MOV             R3, #0x24A44|68-246-68-35-192-242-2-3
58608|code|MOV             R1, R0|1-70
58610|code|LDR             R0, [R3]|24-104
58612|code|B.W             sub_156BC|7-240-226-184
58616|code|MOV             R3, #0x24A44|68-246-68-35-192-242-2-3
58624|code|LDR             R0, [R3]|24-104
58626|code|BX              LR|112-71
58628|code|MOV             R3, R0|3-70
58630|code|LDR             R0, [R1]|8-104
58632|code|LDR             R2, [R3]|26-104
58634|code|PUSH            {R4}|16-180
58636|code|CMP             R0, R2|144-66
58638|code|BEQ             loc_E51C|5-208
58640|code|BGE             loc_E524|8-218
58642|code|LDM             R1, {R0,R1}|3-201
58644|code|STM.W           R3, {R0,R1}|131-232-3-0
58648|code|POP             {R4}|16-188
58650|code|BX              LR|112-71
58652|code|LDR             R4, [R1,#4]|76-104
58654|code|LDR             R0, [R3,#4]|88-104
58656|code|CMP             R4, R0|132-66
58658|code|BLT             loc_E512|246-219
58660|code|CMP             R2, #0|0-42
58662|code|BNE             loc_E518|247-209
58664|code|LDR             R2, [R3,#4]|90-104
58666|code|CMP             R2, #0|0-42
58668|code|BEQ             loc_E512|241-208
58670|code|B               loc_E518|243-231
58672|code|LDR             R3, [R0,#0xC]|195-104
58674|code|PUSH            {R4-R6,LR}|112-181
58676|code|MOV             R4, R0|4-70
58678|code|SUB             SP, SP, #0x10|132-176
58680|code|MOV             R5, R1|13-70
58682|code|CBZ             R3, loc_E566|163-177
58684|code|LDR.W           R3, [R0,#0xCC]|208-248-204-48
58688|code|CMP             R3, #0|0-43
58690|code|BEQ             loc_E5BE|60-208
58692|code|BLX             R3|152-71
58694|code|LDR             R0, [R4,#0x2C]|224-106
58696|code|BL              sub_B414|252-247-100-255
58700|code|LDR             R0, [R4,#0x28]|160-106
58702|code|BL              sub_B414|252-247-97-255
58706|code|MOVS            R3, #0|0-35
58708|code|LDR             R0, [R4,#0x1C]|224-105
58710|code|STR             R3, [R4,#0xC]|227-96
58712|code|STR             R3, [R4,#0x10]|35-97
58714|code|BL              sub_15AA8|7-240-165-250
58718|code|CBZ             R0, loc_E566|16-177
58720|code|LDR             R3, [R0,#4]|67-104
58722|code|CMP             R3, #0|0-43
58724|code|BEQ             loc_E5B2|37-208
58726|code|LDR.W           R3, [R4,#0xA4]|212-248-164-48
58730|code|CMP             R3, #0|0-43
58732|code|BLE             loc_E598|20-221
58734|code|SUBS            R3, #1|1-59
58736|code|LDR             R2, =aActCompletion; "_act_completion"|22-74
58738|code|CMP             R3, #6|6-43
58740|code|IT GE|168-191
58742|code|MOVGE           R3, #6|6-35
58744|code|ADD             R1, SP, #0x20+var_10|4-169
58746|code|ADD.W           R0, R4, #0x9C|4-241-156-0
58750|code|MOVS            R6, #0|0-38
58752|code|ADD.W           R3, R2, R3,LSL#2|2-235-131-3
58756|code|MOV             R2, SP|106-70
58758|code|STR             R6, [SP,#0x20+var_14]|3-150
58760|code|LDR.W           R3, [R3,#0x84]|211-248-132-48
58764|code|STR.W           R3, [R1,#-8]!|65-248-8-61
58768|code|BL              sub_DCF4|255-247-176-251
58772|code|MOV             R6, R0|6-70
58774|code|CBZ             R0, loc_E5A2|32-177
58776|code|MOV             R0, R4|32-70
58778|code|BL              sub_E458|255-247-93-255
58782|code|ADD             SP, SP, #0x10|4-176
58784|code|POP             {R4-R6,PC}|112-189
58786|code|MOV             R0, R5|40-70
58788|code|CMP             R5, #0|0-45
58790|code|BEQ             loc_E59E|250-208
58792|code|MOV             R1, SP|105-70
58794|code|BL              sub_E504|255-247-171-255
58798|code|MOV             R0, R6|48-70
58800|code|B               loc_E59E|245-231
58802|code|LDR             R0, [R4,#0x1C]|224-105
58804|code|BL              sub_15B50|7-240-204-250
58808|code|BL              sub_E3F8|255-247-30-255
58812|code|B               loc_E566|211-231
58814|code|LDR             R0, =aDevDisconnectV; "dev->disconnect != ((void *)0)"|4-72
58816|code|MOVW            R2, #0x2F3; line|64-242-243-34
58820|code|LDR             R1, =aDeviceC; "device.c"|3-73
58822|code|LDR             R3, =aDisconnect; "_disconnect"|4-75
58824|code|BLX             __assert_fail|251-247-198-235
58828|data|DCD aActCompletion; "_act_completion"|152-139-1-0
58832|data|DCD aDevDisconnectV; "dev->disconnect != ((void *)0)"|200-143-1-0
58836|data|DCD aDeviceC; "device.c"|240-140-1-0
58840|data|DCD aDisconnect; "_disconnect"|16-140-1-0
58844|code|PUSH.W          {R3-R9,LR}|45-233-248-67
58848|code|MOV             R9, R0|129-70
58850|code|MOV             R6, R1|14-70
58852|code|CMP             R1, #0|0-41
58854|code|BEQ             loc_E64C|49-208
58856|code|LDR             R3, =dword_24A44|28-75
58858|code|ADD.W           R8, R9, #0xC|9-241-12-8
58862|code|MOV.W           R8, R8,LSL#2|79-234-136-8
58866|code|LDR             R0, [R3]|24-104
58868|code|BL              sub_15B98|7-240-208-250
58872|code|MOV             R5, R0|5-70
58874|code|MOV             R0, R5|40-70
58876|code|BL              sub_15D20|7-240-144-251
58880|code|MOV             R4, R0|4-70
58882|code|CBZ             R0, loc_E63E|224-177
58884|code|MOV             R0, R4|32-70
58886|code|MOV             R1, R6|49-70
58888|code|BL              sub_DCBC|255-247-88-251
58892|code|CMP             R0, #0|0-40
58894|code|BEQ             loc_E5FA|244-208
58896|code|ADD.W           R3, R4, R8|4-235-8-3
58900|code|LDR             R7, [R3,#4]|95-104
58902|code|CMP             R7, #0|0-47
58904|code|BNE             loc_E5FA|239-209
58906|code|MOV             R0, R4|32-70
58908|code|MOV             R1, R9|73-70
58910|code|BL              sub_DB38|255-247-139-250
58914|code|ADDS            R0, #1|1-48
58916|code|BNE             loc_E5FA|233-209
58918|code|MOV             R0, R4|32-70
58920|code|MOV             R1, R9|73-70
58922|code|BL              sub_DBC4|255-247-203-250
58926|code|ADDS            R0, #1|1-48
58928|code|BEQ             loc_E640|6-208
58930|code|MOV             R0, R5|40-70
58932|code|BL              sub_15D20|7-240-116-251
58936|code|MOV             R4, R0|4-70
58938|code|CMP             R0, #0|0-40
58940|code|BNE             loc_E604|226-209
58942|code|MOVS            R7, #1|1-39
58944|code|MOV             R0, R5|40-70
58946|code|BL              sub_15C70|7-240-21-251
58950|code|MOV             R0, R7|56-70
58952|code|POP.W           {R3-R9,PC}|189-232-248-131
58956|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|4-72
58958|code|MOVW            R2, #0x1D1; line|64-242-209-18
58962|code|LDR             R1, =aDeviceC; "device.c"|4-73
58964|code|LDR             R3, =aDevCheckAction; "dev_check_actions"|4-75
58966|code|BLX             __assert_fail|251-247-128-235
58970|data|ALIGN 4|0-191
58972|data|DCD dword_24A44|68-74-2-0
58976|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
58980|data|DCD aDeviceC; "device.c"|240-140-1-0
58984|data|DCD aDevCheckAction; "dev_check_actions"|56-140-1-0
58988|code|PUSH.W          {R4-R11,LR}|45-233-240-79
58992|code|MOV             R11, R3|155-70
58994|code|LDR             R3, =dword_24A44|40-75
58996|code|SUB             SP, SP, #0x1C|135-176
58998|code|MOV             R9, R0|129-70
59000|code|MOV             R5, R1|13-70
59002|code|MOV             R10, R2|146-70
59004|code|ADD.W           R8, R9, #0xC|9-241-12-8
59008|code|LDR             R0, [R3]|24-104
59010|code|MOVS            R6, #0|0-38
59012|code|BL              sub_15B98|7-240-136-250
59016|code|MOV.W           R8, R8,LSL#2|79-234-136-8
59020|code|STR             R0, [SP,#0x40+var_2C]|5-144
59022|code|LDR             R0, [SP,#0x40+var_2C]|5-152
59024|code|BL              sub_15D20|7-240-70-251
59028|code|MOV             R4, R0|4-70
59030|code|ADD.W           R3, R0, R8|0-235-8-3
59034|code|CBZ             R0, loc_E6EA|48-179
59036|code|LDR             R3, [R3,#4]|91-104
59038|code|CMP             R3, #0|0-43
59040|code|BEQ             loc_E6FA|43-208
59042|code|MOV             R1, R5|41-70
59044|code|MOV             R0, R4|32-70
59046|code|CBZ             R5, loc_E6B0|29-177
59048|code|BL              sub_DCBC|255-247-8-251
59052|code|CMP             R0, #0|0-40
59054|code|BEQ             loc_E68E|238-208
59056|code|LDR             R7, [SP,#0x40+arg_0]|16-159
59058|code|MOV             R0, R4|32-70
59060|code|MOV             R1, R9|73-70
59062|code|MOV             R2, R5|42-70
59064|code|MOV             R3, R10|83-70
59066|code|STR.W           R11, [SP,#0x40+var_40]|205-248-0-176
59070|code|STR             R7, [SP,#0x40+var_3C]|1-151
59072|code|LDR             R7, [SP,#0x40+arg_4]|17-159
59074|code|STR             R7, [SP,#0x40+var_38]|2-151
59076|code|BL              sub_E164|255-247-78-253
59080|code|CMP             R0, #0|0-40
59082|code|ADD             R6, R0|6-68
59084|code|BLE             loc_E68E|223-221
59086|code|LDR             R3, [R4,#0xC]|227-104
59088|code|CMP             R3, #2|2-43
59090|code|BEQ             loc_E68E|220-208
59092|code|MOVS            R3, #0|0-35
59094|code|LDR             R0, [SP,#0x40+var_2C]|5-152
59096|code|STR.W           R3, [R4,#0xA4]|196-248-164-48
59100|code|BL              sub_15D20|7-240-32-251
59104|code|MOV             R4, R0|4-70
59106|code|ADD.W           R3, R0, R8|0-235-8-3
59110|code|CMP             R0, #0|0-40
59112|code|BNE             loc_E69C|216-209
59114|code|LDR             R7, [SP,#0x40+var_2C]|5-159
59116|code|MOV             R0, R7|56-70
59118|code|BL              sub_15C70|7-240-191-250
59122|code|MOV             R0, R6|48-70
59124|code|ADD             SP, SP, #0x1C|7-176
59126|code|POP.W           {R4-R11,PC}|189-232-240-143
59130|code|MOV             R1, R9|73-70
59132|code|MOV             R0, R4|32-70
59134|code|BL              sub_DB38|255-247-27-250
59138|code|ADDS            R0, #1|1-48
59140|code|BNE             loc_E6A2|205-209
59142|code|MOV             R1, R9|73-70
59144|code|MOV             R0, R4|32-70
59146|code|BL              sub_DBC4|255-247-91-250
59150|code|ADDS            R0, #1|1-48
59152|code|BNE             loc_E6A2|199-209
59154|code|B               loc_E68E|188-231
59156|data|DCD dword_24A44|68-74-2-0
59160|code|PUSH            {R3-R5,LR}|56-181
59162|code|MOV             R5, R0|5-70
59164|code|MOVS            R0, #0xD8|216-32
59166|code|BL              sub_16730|8-240-7-248
59170|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
59178|code|MOV             R4, R0|4-70
59180|code|MOV             R0, R5|40-70
59182|code|STR             R3, [R4]|35-96
59184|code|MOVS            R5, #0|0-37
59186|code|BL              sub_168F8|8-240-225-248
59190|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
59194|code|STR             R5, [R4,#0xC]|229-96
59196|code|STR             R3, [R4,#0x18]|163-97
59198|code|STR             R0, [R4,#4]|96-96
59200|code|LDR             R0, =(sub_E3F8+1)|27-72
59202|code|BL              sub_15530|6-240-245-254
59206|code|MOV             R3, R0|3-70
59208|code|MOVS            R0, #0x14|20-32
59210|code|STR             R3, [R4,#0x1C]|227-97
59212|code|BL              sub_16BC8|8-240-60-250
59216|code|MOV.W           R1, #0x10000|79-244-128-49
59220|code|STR.W           R5, [R4,#0xD4]|196-248-212-80
59224|code|STR             R5, [R4,#0x24]|101-98
59226|code|STR             R5, [R4,#0x20]|37-98
59228|code|STR.W           R5, [R4,#0xA0]|196-248-160-80
59232|code|STR.W           R5, [R4,#0x9C]|196-248-156-80
59236|code|STR.W           R5, [R4,#0xAC]|196-248-172-80
59240|code|STR.W           R5, [R4,#0xA8]|196-248-168-80
59244|code|STR.W           R5, [R4,#0xB4]|196-248-180-80
59248|code|STR.W           R5, [R4,#0xB0]|196-248-176-80
59252|code|STR             R0, [R4,#0x14]|96-97
59254|code|MOV.W           R0, #0x400|79-244-128-96
59258|code|BL              sub_B2C0|252-247-161-253
59262|code|MOV.W           R1, #0x10000|79-244-128-49
59266|code|STR             R0, [R4,#0x28]|160-98
59268|code|MOV.W           R0, #0x400|79-244-128-96
59272|code|BL              sub_B2C0|252-247-154-253
59276|code|ADD.W           R2, R4, #0x30 ; '0'|4-241-48-2
59280|code|MOVS            R3, #0x1A|26-35
59282|code|STR             R0, [R4,#0x2C]|224-98
59284|code|SUBS            R3, #1|1-59
59286|code|STR.W           R5, [R2,#4]!|66-248-4-95
59290|code|BNE             loc_E794|251-209
59292|code|STR             R3, [R4,#0x30]|35-99
59294|code|MOV             R0, R4|32-70
59296|code|STR.W           R3, [R4,#0xA4]|196-248-164-48
59300|code|STR.W           R3, [R4,#0xB8]|196-248-184-48
59304|code|STR.W           R3, [R4,#0xBC]|196-248-188-48
59308|code|POP             {R3-R5,PC}|56-189
59310|data|ALIGN 0x10|0-191
59312|data|DCD sub_E3F8+1|249-227-0-0
59316|code|MOV             R3, #0x24A44|68-246-68-35-192-242-2-3
59324|code|MOV             R2, R0|2-70
59326|code|MOVW            R1, #0xE09D|78-242-157-1
59330|code|LDR             R3, [R3]|27-104
59332|code|MOVT.W          R1, #0|192-242-0-1
59336|code|MOV             R0, R3|24-70
59338|code|B.W             sub_1577C|6-240-215-191
59342|data|ALIGN 0x10|0-191
59344|code|LDR             R3, =dword_24A44|13-75
59346|code|PUSH            {R4,LR}|16-181
59348|code|LDR             R0, [R3]|24-104
59350|code|BL              sub_15B98|7-240-223-249
59354|code|MOV             R4, R0|4-70
59356|code|B               loc_E7E6|3-224
59358|code|LDR             R3, [R0,#0xC]|195-104
59360|code|CBNZ            R3, loc_E7FA|91-185
59362|code|BL              sub_E458|255-247-57-254
59366|code|MOV             R0, R4|32-70
59368|code|BL              sub_15D20|7-240-154-250
59372|code|CMP             R0, #0|0-40
59374|code|BNE             loc_E7DE|246-209
59376|code|MOV             R0, R4|32-70
59378|code|POP.W           {R4,LR}|189-232-16-64
59382|code|B.W             sub_15C70|7-240-59-186
59386|code|LDR             R0, =aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|4-72
59388|code|MOVW            R2, #0x549; line|64-242-73-82
59392|code|LDR             R1, =aDeviceC; "device.c"|3-73
59394|code|LDR             R3, =aDevInitialConn; "dev_initial_connect"|4-75
59396|code|BLX             __assert_fail|251-247-168-234
59400|data|DCD dword_24A44|68-74-2-0
59404|data|DCD aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|232-143-1-0
59408|data|DCD aDeviceC; "device.c"|240-140-1-0
59412|data|DCD aDevInitialConn; "dev_initial_connect"|76-140-1-0
59416|code|LDR             R3, =dword_24A44|23-75
59418|code|PUSH            {R4-R6,LR}|112-181
59420|code|MOV             R5, R0|5-70
59422|code|LDR             R0, [R3]|24-104
59424|code|BL              sub_15B98|7-240-186-249
59428|code|MOV             R4, R0|4-70
59430|code|MOV             R0, R4|32-70
59432|code|BL              sub_15D20|7-240-122-250
59436|code|MOV             R6, R0|6-70
59438|code|CBZ             R0, loc_E858|152-177
59440|code|LDR             R1, [R6,#0x18]|177-105
59442|code|MOVS            R2, #1|1-34
59444|code|CMP             R1, #0|0-41
59446|code|BLT             loc_E826|246-219
59448|code|LDR             R3, [R6,#0xC]|243-104
59450|code|CMP             R3, #2|2-43
59452|code|BEQ             loc_E862|17-208
59454|code|CMP             R3, #1|1-43
59456|code|IT EQ|8-191
59458|code|MOVEQ           R2, #3|3-34
59460|code|MOV             R0, R5|40-70
59462|code|SXTH            R2, R2|18-178
59464|code|BL              sub_164C8|7-240-62-254
59468|code|MOV             R0, R4|32-70
59470|code|BL              sub_15D20|7-240-103-250
59474|code|MOV             R6, R0|6-70
59476|code|CMP             R0, #0|0-40
59478|code|BNE             loc_E830|235-209
59480|code|MOV             R0, R4|32-70
59482|code|POP.W           {R4-R6,LR}|189-232-112-64
59486|code|B.W             sub_15C70|7-240-7-186
59490|code|LDR             R0, [R6,#0x28]|176-106
59492|code|BL              sub_B61C|252-247-218-254
59496|code|LDR             R3, [R6,#0xC]|243-104
59498|code|CBZ             R0, loc_E872|16-177
59500|code|MOVS            R2, #1|1-34
59502|code|LDR             R1, [R6,#0x18]|177-105
59504|code|B               loc_E83E|229-231
59506|code|MOVS            R2, #3|3-34
59508|code|LDR             R1, [R6,#0x18]|177-105
59510|code|B               loc_E83E|226-231
59512|data|DCD dword_24A44|68-74-2-0
59516|code|PUSH.W          {R4-R11,LR}|45-233-240-79
59520|code|SUB             SP, SP, #0x44|145-176
59522|code|STR             R1, [SP,#0x68+var_58]|4-145
59524|code|MOV             R1, #0x24A44|68-246-68-33-192-242-2-1
59532|code|STR             R0, [SP,#0x68+var_4C]|7-144
59534|code|LDR             R0, [R1]|8-104
59536|code|BL              sub_15B98|7-240-130-249
59540|code|STR             R0, [SP,#0x68+var_50]|6-144
59542|code|LDR             R0, [SP,#0x68+var_50]|6-152
59544|code|BL              sub_15D20|7-240-66-250
59548|code|MOV             R4, R0|4-70
59550|code|CMP             R0, #0|0-40
59552|code|BEQ.W           loc_EA2A|0-240-195-128
59556|code|LDR             R1, [R4,#0x18]|161-105
59558|code|ADDS            R3, R1, #1|75-28
59560|code|BEQ             loc_E914|52-208
59562|code|LDR             R0, [SP,#0x68+var_4C]|7-152
59564|code|BL              sub_1669C|7-240-246-254
59568|code|CBZ             R0, loc_E914|128-179
59570|code|LDR             R3, [R4,#0xC]|227-104
59572|code|CMP             R3, #0|0-43
59574|code|BEQ.W           loc_F06A|0-240-216-131
59578|code|LDR             R1, [R4,#0x18]|161-105
59580|code|ADDS            R5, R1, #1|77-28
59582|code|BEQ.W           loc_F078|0-240-219-131
59586|code|UXTH            R5, R0|133-178
59588|code|ANDS.W          R6, R5, #4|21-240-4-6
59592|code|BNE.W           loc_EF40|64-240-58-131
59596|code|ANDS.W          R0, R5, #8|21-240-8-0
59600|code|BNE.W           loc_EF9A|64-240-99-131
59604|code|LSLS            R2, R5, #0x1B|234-6
59606|code|BMI.W           loc_EFA6|0-241-102-131
59610|code|LSLS            R2, R5, #0x1E|170-7
59612|code|BPL             loc_E90E|23-213
59614|code|CMP             R3, #1|1-43
59616|code|BEQ.W           loc_EFBA|0-240-107-131
59620|code|CMP             R3, #2|2-43
59622|code|BNE.W           loc_F092|64-240-212-131
59626|code|LDR             R2, [R4]|34-104
59628|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
59636|code|CMP             R2, R3|154-66
59638|code|BNE.W           loc_F05C|64-240-177-131
59642|code|LDR             R0, [R4,#0x28]; s2|160-106
59644|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
59648|code|BL              sub_C178|253-247-58-252
59652|code|CMP             R0, #0|0-40
59654|code|BLT.W           loc_EFDE|192-242-106-131
59658|code|BEQ.W           loc_EFEA|0-240-110-131
59662|code|LSLS            R3, R5, #0x1F|235-7
59664|code|BMI.W           loc_EF4C|0-241-28-131
59668|code|LDR             R3, [R4,#0xC]|227-104
59670|code|CBNZ            R3, loc_E922|35-185
59672|code|MOV             R0, R4|32-70
59674|code|LDR             R1, [SP,#0x68+var_58]|4-153
59676|code|BL              sub_E530|255-247-8-254
59680|code|LDR             R3, [R4,#0xC]|227-104
59682|code|CMP             R3, #2|2-43
59684|code|BEQ.W           loc_EA36|0-240-135-128
59688|code|MOV.W           R8, #0|79-240-0-8
59692|code|LDR             R0, [R4,#0x1C]|224-105
59694|code|BL              sub_15AA8|7-240-187-248
59698|code|MOV             R5, R0|5-70
59700|code|CMP             R0, #0|0-40
59702|code|BEQ             loc_E896|174-208
59704|code|CMP.W           R8, #0|184-241-0-15
59708|code|BNE             loc_E896|171-209
59710|code|LDR             R0, [R5,#8]|168-104
59712|code|BL              sub_15AA8|7-240-178-248
59716|code|MOV             R6, R0|6-70
59718|code|CMP             R0, #0|0-40
59720|code|BEQ.W           loc_F00A|0-240-95-131
59724|code|LDR             R2, [R5,#4]|106-104
59726|code|MOVS            R0, #8|8-32
59728|code|LDR             R1, =aProcessActionP; "_process_action: processing action %d"|146-73
59730|code|ADD.W           R7, R5, #0x1C|5-241-28-7
59734|code|BL              sub_127FC|3-240-81-255
59738|code|MOV             R0, R4|32-70
59740|code|BL              sub_DD7C|255-247-14-250
59744|code|LDR             R3, [R5,#0x1C]|235-105
59746|code|CBNZ            R3, loc_E970|43-185
59748|code|LDR             R3, [R5,#0x20]|43-106
59750|code|ADD.W           R7, R5, #0x1C|5-241-28-7
59754|code|CMP             R3, #0|0-43
59756|code|BEQ.W           loc_EB00|0-240-200-128
59760|code|ADD.W           R1, R4, #0x20 ; ' '|4-241-32-1
59764|code|MOV             R0, R7|56-70
59766|code|ADD             R2, SP, #0x68+var_44|9-170
59768|code|BL              sub_DCF4|255-247-188-249
59772|code|LDR             R3, [R4,#0xC]|227-104
59774|code|CMP             R0, #0|0-40
59776|code|BEQ.W           loc_EA92|0-240-135-128
59780|code|CMP             R3, #2|2-43
59782|code|BEQ.W           loc_EB18|0-240-199-128
59786|code|MOVS            R3, #3|3-35
59788|code|STR             R3, [R5,#0x18]|171-97
59790|code|LDR             R3, [R5,#0x10]|43-105
59792|code|CBZ             R3, loc_E9C0|179-177
59794|code|MOV.W           R2, #0x10000|79-244-128-50
59798|code|LDR             R1, =unk_24A4C|130-73
59800|code|LDR             R0, [R4,#0x2C]|224-106
59802|code|BL              sub_B7CC|252-247-23-255
59806|code|MOV             R1, R0|1-70
59808|code|LDR             R0, =unk_24A4C|127-72
59810|code|BL              sub_128F8|3-240-169-255
59814|code|LDR             R3, [R4,#0xC]|227-104
59816|code|LDR             R2, [R4,#4]|98-104
59818|code|CMP             R3, #2|2-43
59820|code|MOV             R9, R0|129-70
59822|code|LDR             R0, [R5,#0x14]|104-105
59824|code|BEQ.W           loc_EDE2|0-240-23-130
59828|code|LDR             R3, [R5,#0x10]|43-105
59830|code|LDR             R1, =aConnectSTimeou; "connect(%s): timeout"|123-73
59832|code|BLX             R3|152-71
59834|code|MOV             R0, R9|72-70
59836|code|BL              sub_1687C|7-240-94-255
59840|code|LDR             R7, [R5,#0x18]|175-105
59842|code|CMP             R7, #0|0-47
59844|code|BEQ             loc_EAA4|110-208
59846|code|LDR             R3, [R5,#0xC]|235-104
59848|code|CBZ             R3, loc_E9D2|27-177
59850|code|MOV             R0, R5|40-70
59852|code|MOV             R1, R4|33-70
59854|code|BL              sub_DC18|255-247-35-249
59858|code|LDR             R0, [R4,#0x1C]|224-105
59860|code|CMP             R7, #1|1-47
59862|code|ITE NE|20-191
59864|code|MOVNE           R6, R7|62-70
59866|code|MOVEQ           R6, #2|2-38
59868|code|BL              sub_15B50|7-240-184-248
59872|code|BL              sub_E3F8|255-247-10-253
59876|code|B               loc_E9FA|9-224
59878|code|LDR             R3, [R5,#0xC]|235-104
59880|code|STR             R6, [R5,#0x18]|174-97
59882|code|CBZ             R3, loc_E9F4|27-177
59884|code|MOV             R0, R5|40-70
59886|code|MOV             R1, R4|33-70
59888|code|BL              sub_DC18|255-247-18-249
59892|code|MOV             R0, R5|40-70
59894|code|BL              sub_E3F8|255-247-255-252
59898|code|LDR             R0, [R4,#0x1C]|224-105
59900|code|BL              sub_15B50|7-240-168-248
59904|code|MOV             R5, R0|5-70
59906|code|CMP             R0, #0|0-40
59908|code|BNE             loc_E9E6|239-209
59910|code|LDR             R3, [R4,#0xC]|227-104
59912|code|CMP             R3, #2|2-43
59914|code|BNE             loc_E92C|143-209
59916|code|MOVS            R0, #1|1-32
59918|code|LDR             R1, =aProcessActionD; "_process_action: disconnecting due to e"...|102-73
59920|code|BL              sub_127FC|3-240-244-254
59924|code|MOV             R0, R4|32-70
59926|code|LDR             R1, [SP,#0x68+var_58]|4-153
59928|code|BL              sub_E530|255-247-138-253
59932|code|LDR             R0, [SP,#0x68+var_50]|6-152
59934|code|BL              sub_15D20|7-240-127-249
59938|code|MOV             R4, R0|4-70
59940|code|CMP             R0, #0|0-40
59942|code|BNE.W           loc_E8A4|127-244-61-175
59946|code|LDR             R0, [SP,#0x68+var_50]|6-152
59948|code|BL              sub_15C70|7-240-32-249
59952|code|ADD             SP, SP, #0x44 ; 'D'|17-176
59954|code|POP.W           {R4-R11,PC}|189-232-240-143
59958|code|LDR             R3, [R4,#0x4C]|227-108
59960|code|CMP             R3, #0|0-43
59962|code|BEQ.W           loc_E928|63-244-117-175
59966|code|LDR.W           R3, [R4,#0xB0]|212-248-176-48
59970|code|CBNZ            R3, loc_EA4E|35-185
59972|code|LDR.W           R3, [R4,#0xB4]|212-248-180-48
59976|code|CMP             R3, #0|0-43
59978|code|BEQ.W           loc_E928|63-244-109-175
59982|code|ADD.W           R6, R4, #0xA8|4-241-168-6
59986|code|ADD.W           R1, R4, #0xB0|4-241-176-1
59990|code|ADD             R2, SP, #0x68+var_44|9-170
59992|code|MOV             R0, R6|48-70
59994|code|BL              sub_DCF4|255-247-75-249
59998|code|CMP             R0, #0|0-40
60000|code|BEQ.W           loc_EF90|0-240-150-130
60004|code|MOVS            R5, #0|0-37
60006|code|MOVS            R1, #6|6-33
60008|code|MOV             R0, R4|32-70
60010|code|STR             R5, [SP,#0x68+var_68]|0-149
60012|code|MOV             R2, R5|42-70
60014|code|MOV             R3, R5|43-70
60016|code|STR             R5, [SP,#0x68+var_64]|1-149
60018|code|STR             R5, [SP,#0x68+var_60]|2-149
60020|code|BL              sub_E164|255-247-118-251
60024|code|MOV             R0, R6; tv|48-70
60026|code|MOV             R1, R5; tz|41-70
60028|code|BLX             gettimeofday|251-247-18-232
60032|code|CMP             R0, R5|168-66
60034|code|BLT.W           loc_EFF4|192-242-183-130
60038|code|LDR             R2, [R4,#4]|98-104
60040|code|MOVS            R0, #8|8-32
60042|code|LDR             R1, =aSEnqeuuingPing; "%s: enqeuuing ping"|72-73
60044|code|BL              sub_127FC|3-240-182-254
60048|code|B               loc_E928|74-231
60050|code|CMP             R3, #2|2-43
60052|code|BEQ             loc_EB26|71-208
60054|code|LDR             R0, [SP,#0x68+var_58]|4-152
60056|code|ADD             R1, SP, #0x68+var_44|9-169
60058|code|BL              sub_E504|255-247-51-253
60062|code|MOV.W           R8, #1|79-240-1-8
60066|code|B               loc_E92C|67-231
60068|code|LDR             R0, [R6,#8]|176-104
60070|code|BL              sub_15D20|7-240-59-249
60074|code|STR             R0, [R6,#0xC]|240-96
60076|code|CBZ             R0, loc_EADE|184-177
60078|code|CMP             R6, #0|0-46
60080|code|BNE.W           loc_E92C|127-244-60-175
60084|code|LDR             R3, [R5,#4]|107-104
60086|code|CBNZ            R3, loc_EABC|11-185
60088|code|MOVS            R3, #1|1-35
60090|code|STR             R3, [R4,#0x10]|35-97
60092|code|LDR             R3, [R5,#0xC]|235-104
60094|code|CBZ             R3, loc_EAC8|27-177
60096|code|MOV             R0, R5|40-70
60098|code|MOV             R1, R4|33-70
60100|code|BL              sub_DC18|255-247-168-248
60104|code|LDR             R0, [R4,#0x1C]|224-105
60106|code|BL              sub_15B50|7-240-65-248
60110|code|BL              sub_E3F8|255-247-147-252
60114|code|LDR.W           R3, [R4,#0xBC]|212-248-188-48
60118|code|ADDS            R3, #1|1-51
60120|code|STR.W           R3, [R4,#0xBC]|196-248-188-48
60124|code|B               loc_E92C|38-231
60126|code|LDR             R0, [R5,#8]|168-104
60128|code|BL              sub_15A60|6-240-190-255
60132|code|CMP             R6, R0|134-66
60134|code|BNE.W           loc_F032|64-240-164-130
60138|code|MOV             R0, R6|48-70
60140|code|BL              sub_DC94|255-247-210-248
60144|code|LDR             R0, [R5,#8]|168-104
60146|code|BL              sub_15AA8|6-240-217-255
60150|code|MOV             R6, R0|6-70
60152|code|CMP             R6, #0|0-46
60154|code|BNE.W           loc_E92C|127-244-23-175
60158|code|B               loc_EAB4|217-231
60160|code|MOV             R1, R8; tz|65-70
60162|code|MOV             R0, R7; tv|56-70
60164|code|BLX             gettimeofday|250-247-206-239
60168|code|CMP             R0, #0|0-40
60170|code|BGE.W           loc_E970|191-246-49-175
60174|code|MOVS            R0, #1|1-32
60176|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|39-73
60178|code|BL              sub_12AC4|3-240-215-255
60182|code|B               loc_E970|43-231
60184|code|LDR             R3, [R4,#0x10]|35-105
60186|code|CMP             R3, #0|0-43
60188|code|BNE.W           loc_EDEC|64-240-102-129
60192|code|MOVS            R3, #4|4-35
60194|code|STR             R3, [R5,#0x18]|171-97
60196|code|B               loc_E98E|51-231
60198|code|STR.W           R8, [SP,#0x68+var_54]|205-248-20-128
60202|code|LDR             R0, [R5,#8]|168-104
60204|code|BL              sub_15AA8|6-240-188-255
60208|code|LDR             R2, [R0,#0xC]|194-104
60210|code|MOV             R6, R0|6-70
60212|code|LDR             R3, [R2]|19-104
60214|code|CMP             R3, #7; switch 8 cases|7-43
60216|code|BHI             def_EB3A; jumptable 0000EB3A default case|21-216
60218|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
60222|data|DCW 0x148; jump table for switch statement|72-1
60224|data|DCW 0xE3|227-0
60226|data|DCW 0x8F|143-0
60228|data|DCW 0x68|104-0
60230|data|DCW 0x3B|59-0
60232|data|DCW 0x3B|59-0
60234|data|DCW 0x20|32-0
60236|data|DCW 0x20|32-0
60238|code|ADD.W           R0, R5, #0x24 ; '$'|5-241-36-0
60242|code|MOV             R1, R8|65-70
60244|code|ADD             R2, SP, #0x68+var_34|13-170
60246|code|BL              sub_DCF4|255-247-205-248
60250|code|CMP             R0, #0|0-40
60252|code|BNE             loc_EC56|123-209
60254|code|LDR             R0, [SP,#0x68+var_58]|4-152
60256|code|ADD             R1, SP, #0x68+var_34|13-169
60258|code|BL              sub_E504|255-247-207-252
60262|code|MOVS            R7, #1; jumptable 0000EB3A default case|1-39
60264|code|LDR             R0, [R5,#8]|168-104
60266|code|BL              sub_15AA8|6-240-157-255
60270|code|CMP             R6, R0|134-66
60272|code|BNE             loc_EB2A|219-209
60274|code|LDR.W           R8, [SP,#0x68+var_54]|221-248-20-128
60278|code|CMP             R7, #0|0-47
60280|code|BEQ.W           loc_E9C0|63-244-34-175
60284|code|B               loc_EA96|139-231
60286|code|LDR             R3, [R0,#0x14]; jumptable 0000EB3A cases 6,7|67-105
60288|code|CMP             R3, #0|0-43
60290|code|BNE             loc_EC56|104-209
60292|code|LDR             R0, [R0]|0-104
60294|code|CBZ             R0, loc_EB92|32-177
60296|code|BL              sub_15678|6-240-118-253
60300|code|CMP             R0, #0|0-40
60302|code|BGT.W           loc_EDF8|0-243-51-129
60306|code|MOVS            R2, #1|1-34
60308|code|STR             R2, [R5,#0x18]|170-97
60310|code|MOVS            R7, #0|0-39
60312|code|B               loc_EB68|230-231
60314|data|ALIGN 4|0-191
60316|data|DCD aProcessActionP; "_process_action: processing action %d"|60-145-1-0
60320|data|DCD unk_24A4C|76-74-2-0
60324|data|DCD aConnectSTimeou; "connect(%s): timeout"|100-145-1-0
60328|data|DCD aProcessActionD; "_process_action: disconnecting due to e"...|24-146-1-0
60332|data|DCD aSEnqeuuingPing; "%s: enqeuuing ping"|40-145-1-0
60336|data|DCD aGettimeofday_0; "gettimeofday"|140-141-1-0
60340|code|LDR             R2, [R0,#0x10]; jumptable 0000EB3A cases 4,5|2-105
60342|code|CMP             R2, #0|0-42
60344|code|BEQ.W           loc_EEB2|0-240-123-129
60348|code|CMP             R3, #4|4-43
60350|code|BEQ.W           loc_EE76|0-240-90-129
60354|code|CMP             R3, #5|5-43
60356|code|BNE.W           loc_F040|64-240-60-130
60360|code|LDR             R0, [R6,#0x10]|48-105
60362|code|BL              sub_12550|3-240-193-252
60366|code|CMP             R0, #0|0-40
60368|code|BEQ.W           loc_EE84|0-240-88-129
60372|code|LDR             R3, [R0,#4]|67-104
60374|code|CMP             R3, #0|0-43
60376|code|BEQ             loc_EBC8|246-208
60378|code|MOV             R8, R0|128-70
60380|code|MOVS            R0, #0|0-32
60382|code|BL              sub_15530|6-240-167-252
60386|code|MOV             R7, R0|7-70
60388|code|CMP             R0, #0|0-40
60390|code|BEQ             loc_EB68|191-208
60392|code|MOV             R1, R8|65-70
60394|code|BL              sub_156BC|6-240-103-253
60398|code|MOV             R3, R0|3-70
60400|code|CMP             R0, #0|0-40
60402|code|BEQ.W           loc_EEA8|0-240-89-129
60406|code|LDR             R3, [R6,#0xC]|243-104
60408|code|MOV             R1, R7|57-70
60410|code|MOVS            R7, #0|0-39
60412|code|LDR             R0, [R3,#4]|88-104
60414|code|BL              sub_E0B0|255-247-87-250
60418|code|LDR             R3, [R5,#8]|171-104
60420|code|MOV             R1, R0|1-70
60422|code|MOV             R0, R3|24-70
60424|code|BL              sub_15A00|6-240-250-254
60428|code|B               loc_EB68|172-231
60430|code|ADDS            R2, #4; jumptable 0000EB3A case 3|4-50
60432|code|LDR             R3, [R0,#0x14]|67-105
60434|code|ADD.W           R8, SP, #0x68+var_3C|13-241-44-8
60438|code|LDM.W           R2, {R0,R1}|146-232-3-0
60442|code|STM.W           R8, {R0,R1}|136-232-3-0
60446|code|CBNZ            R3, loc_EC46|147-185
60448|code|LDR             R7, [R5,#0x10]|47-105
60450|code|CBZ             R7, loc_EC32|55-177
60452|code|LDR             R3, [SP,#0x68+var_38]|12-155
60454|code|LDR             R2, [R4,#4]|98-104
60456|code|LDR             R0, [R5,#0x14]|104-105
60458|code|LDR             R1, =aDelaySLd66ld; "delay(%s): %ld.%-6.6ld"|168-73
60460|code|STR             R3, [SP,#0x68+var_68]|0-147
60462|code|LDR             R3, [SP,#0x68+var_3C]|11-155
60464|code|BLX             R7|184-71
60466|code|MOVS            R2, #1|1-34
60468|code|MOVS            R1, #0; tz|0-33
60470|code|ADD.W           R0, R5, #0x24 ; '$'; tv|5-241-36-0
60474|code|STR             R2, [R6,#0x14]|114-97
60476|code|BLX             gettimeofday|250-247-50-239
60480|code|CMP             R0, #0|0-40
60482|code|BLT.W           loc_EEC0|192-242-61-129
60486|code|MOV             R1, #0x24A44|68-246-68-33-192-242-2-1
60494|code|LDR             R3, [R1,#(dword_24A48 - 0x24A44)]|75-104
60496|code|CMP             R3, #0|0-43
60498|code|BEQ.W           loc_EB4E|63-244-124-175
60502|code|MOVS            R7, #0|0-39
60504|code|STR             R7, [R6,#0x14]|119-97
60506|code|B               loc_EB68|133-231
60508|code|LDR             R0, [R2,#4]; jumptable 0000EB3A case 2|80-104
60510|code|CMP             R0, #0|0-40
60512|code|BEQ.W           loc_EEE2|0-240-63-129
60516|code|BL              sub_168F8|7-240-72-254
60520|code|MOV             R10, R0|130-70
60522|code|CMP             R0, #0|0-40
60524|code|BEQ.W           loc_EEE0|0-240-56-129
60528|code|LDR             R3, [R6,#0xC]|243-104
60530|code|LDR             R0, [R4,#0x14]|96-105
60532|code|LDR             R1, [R3,#0xC]|217-104
60534|code|BL              sub_16D20|8-240-83-248
60538|code|MOV             R1, R10|81-70
60540|code|MOV             R8, R0|128-70
60542|code|LDR             R0, [R4,#0x30]|32-107
60544|code|BL              sub_1277C|3-240-124-253
60548|code|MOVS.W          R3, R8|24-241-0-3
60552|code|IT NE|24-191
60554|code|MOVNE           R3, #1|1-35
60556|code|CMP             R0, #0|0-40
60558|code|ITE EQ|12-191
60560|code|MOVEQ           R2, #0|0-34
60562|code|ANDNE.W         R2, R3, #1|3-240-1-2
60566|code|MOV             R11, R0|131-70
60568|code|CMP             R2, #0|0-42
60570|code|BEQ.W           loc_EDF2|0-240-170-128
60574|code|LDR             R3, [R0,#4]|67-104
60576|code|CBZ             R3, loc_ECF4|67-179
60578|code|LDR             R3, [R6,#0xC]|243-104
60580|code|LDR             R0, [R3,#0x10]|24-105
60582|code|BL              sub_15B98|6-240-119-255
60586|code|MOV             R9, R0|129-70
60588|code|B               loc_ECBE|7-224
60590|code|LDR             R0, [R7,#0xC]|248-104
60592|code|MOV             R1, R8|65-70
60594|code|MOVS            R2, #0|0-34
60596|code|BL              sub_16B0C|7-240-42-255
60600|code|CMP             R0, #0|0-40
60602|code|BNE.W           loc_EEA4|64-240-243-128
60606|code|MOV             R0, R9|72-70
60608|code|BL              sub_15D20|7-240-46-248
60612|code|MOV             R7, R0|7-70
60614|code|CMP             R0, #0|0-40
60616|code|BNE             loc_ECAE|241-209
60618|code|MOV             R0, R9|72-70
60620|code|BL              sub_15C70|6-240-208-255
60624|code|LDR             R0, [R5,#0x2C]|232-106
60626|code|LDR.W           R1, [R11,#4]|219-248-4-16
60630|code|BL              sub_A3B4|251-247-109-251
60634|code|MOV             R9, R0|129-70
60636|code|CBZ             R0, loc_ECF4|80-177
60638|code|LDR             R0, [R0,#4]|64-104
60640|code|STR.W           R7, [R9,#8]|201-248-8-112
60644|code|CBZ             R0, loc_ECEA|8-177
60646|code|BL              sub_1687C|7-240-201-253
60650|code|MOV             R0, R8|64-70
60652|code|BL              sub_168F8|7-240-4-254
60656|code|STR.W           R0, [R9,#4]|201-248-4-0
60660|code|MOV             R0, R8|64-70
60662|code|BL              sub_1687C|7-240-193-253
60666|code|MOV             R0, R10|80-70
60668|code|MOVS            R7, #0|0-39
60670|code|BL              sub_1687C|7-240-189-253
60674|code|B               loc_EB68|49-231
60676|code|LDR             R0, [R4,#0x14]; jumptable 0000EB3A case 1|96-105
60678|code|BL              sub_16C44|7-240-157-255
60682|code|LDR.W           R9, [R4,#0x2C]|212-248-44-144
60686|code|LDR             R3, [R6,#0xC]|243-104
60688|code|LDR.W           R10, [R4,#0x14]|212-248-20-160
60692|code|MOV             R0, R9|72-70
60694|code|LDR.W           R11, [R3,#4]|211-248-4-176
60698|code|BL              sub_B4EC|252-247-231-251
60702|code|MOV             R7, R0|7-70
60704|code|ADDS            R0, #1|1-48
60706|code|BL              sub_16730|7-240-5-253
60710|code|MOV             R2, R7|58-70
60712|code|MOV             R8, R0|128-70
60714|code|MOV             R0, R9|72-70
60716|code|MOV             R1, R8|65-70
60718|code|BL              sub_B7CC|252-247-77-253
60722|code|CMP             R0, #0|0-40
60724|code|MOV             R2, R0|2-70
60726|code|BLE.W           loc_EE92|64-243-172-128
60730|code|CMP             R7, R0|135-66
60732|code|BLT.W           loc_F086|192-242-163-129
60736|code|ADD             R0, R8|64-68
60738|code|MOV             R3, R8|67-70
60740|code|LDRB.W          R1, [R3],#1|19-248-1-27
60744|code|CBNZ            R1, loc_ED52|25-185
60746|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
60750|code|STRB.W          R1, [R3,#-1]|3-248-1-28
60754|code|CMP             R3, R0|131-66
60756|code|BNE             loc_ED44|246-209
60758|code|MOVS            R3, #0|0-35
60760|code|MOV             R0, R11|88-70
60762|code|STRB.W          R3, [R8,R2]|8-248-2-48
60766|code|MOV             R1, R8|65-70
60768|code|MOV             R2, R10|82-70
60770|code|BL              sub_16B0C|7-240-211-254
60774|code|CMP             R0, #0|0-40
60776|code|BEQ.W           loc_EE9C|0-240-152-128
60780|code|MOV             R0, R10|80-70
60782|code|BL              sub_16CDC|7-240-181-255
60786|code|MOV             R7, R0|7-70
60788|code|MOV             R0, R9|72-70
60790|code|MOV             R1, R7|57-70
60792|code|BL              sub_B738|252-247-222-252
60796|code|CMP             R7, R0|135-66
60798|code|MOV             R2, R0|2-70
60800|code|BEQ             loc_ED8A|3-208
60802|code|LSRS            R0, R0, #0x1F|192-15
60804|code|LDR             R1, =aGetregexBufCbu; "_getregex_buf: cbuf_drop returned %d"|82-73
60806|code|BL              err|3-240-181-254
60810|code|CMP.W           R8, #0|184-241-0-15
60814|code|BEQ.W           def_EB3A; jumptable 0000EB3A default case|63-244-234-174
60818|code|LDR             R3, [R5,#0x10]|43-105
60820|code|CBZ             R3, loc_EDC4|179-177
60822|code|LDR             R0, [R4,#0x14]|96-105
60824|code|BL              sub_16C60|7-240-98-255
60828|code|MOV             R9, R0|129-70
60830|code|BLX             strlen|250-247-216-238
60834|code|MOV             R1, R0|1-70
60836|code|MOV             R0, R9|72-70
60838|code|BL              sub_128F8|3-240-167-253
60842|code|LDR             R2, [R4,#4]|98-104
60844|code|LDR             R1, =aRecvSS; "recv(%s): '%s'"|73-73
60846|code|LDR             R7, [R5,#0x10]|47-105
60848|code|MOV             R10, R0|130-70
60850|code|LDR             R0, [R5,#0x14]|104-105
60852|code|MOV             R3, R10|83-70
60854|code|BLX             R7|184-71
60856|code|MOV             R0, R10|80-70
60858|code|BL              sub_1687C|7-240-95-253
60862|code|MOV             R0, R9|72-70
60864|code|BL              sub_1687C|7-240-92-253
60868|code|MOV             R0, R8|64-70
60870|code|MOVS            R7, #0|0-39
60872|code|BL              sub_1687C|7-240-88-253
60876|code|B               loc_EB68|204-230
60878|code|MOV             R0, R4; jumptable 0000EB3A case 0|32-70
60880|code|MOV             R1, R5|41-70
60882|code|MOV             R2, R6|50-70
60884|code|BL              sub_DE08|255-247-24-248
60888|code|RSBS.W          R7, R0, #1|208-241-1-7
60892|code|IT CC|56-191
60894|code|MOVCC           R7, #0|0-39
60896|code|B               loc_EB68|194-230
60898|code|LDR             R7, [R5,#0x10]|47-105
60900|code|MOV             R3, R9|75-70
60902|code|LDR             R1, =aRecvSS; "recv(%s): '%s'"|59-73
60904|code|BLX             R7|184-71
60906|code|B               loc_E9BA|230-229
60908|code|MOVS            R3, #1|1-35
60910|code|STR             R3, [R5,#0x18]|171-97
60912|code|B               loc_E98E|205-229
60914|code|CMP             R3, #0|0-43
60916|code|BEQ             loc_ECFA|129-208
60918|code|B               loc_ECF4|125-231
60920|code|LDR             R0, [R6]|48-104
60922|code|BL              sub_15AA8|6-240-85-254
60926|code|LDR             R3, [R5,#0x2C]|235-106
60928|code|LDR             R1, [R0,#4]|65-104
60930|code|MOV             R0, R3|24-70
60932|code|BL              sub_A3B4|251-247-214-250
60936|code|CMP             R0, #0|0-40
60938|code|BEQ.W           loc_EB92|63-244-194-174
60942|code|LDR             R2, [R6,#0xC]|242-104
60944|code|LDR             R3, [R0,#8]|131-104
60946|code|LDR             R2, [R2]|18-104
60948|code|SUB.W           R7, R2, #7|162-241-7-7
60952|code|NEGS            R1, R7|121-66
60954|code|ADC.W           R1, R1, R7|65-235-7-1
60958|code|CMP             R3, #2|2-43
60960|code|ITE NE|20-191
60962|code|MOVNE           R1, #0|0-33
60964|code|ANDEQ.W         R1, R1, #1|1-240-1-1
60968|code|CMP             R1, #0|0-41
60970|code|BEQ.W           loc_F0A0|0-240-57-129
60974|code|MOVS            R3, #1|1-35
60976|code|MOVS            R0, #0|0-32
60978|code|STR             R3, [R6,#0x14]|115-97
60980|code|BL              sub_15530|6-240-124-251
60984|code|MOV             R7, R0|7-70
60986|code|CMP             R0, #0|0-40
60988|code|BEQ.W           loc_EB68|63-244-148-174
60992|code|LDR             R0, [R6]|48-104
60994|code|BL              sub_15B98|6-240-169-254
60998|code|MOV             R8, R0|128-70
61000|code|CMP             R0, #0|0-40
61002|code|BEQ.W           loc_EFB0|0-240-177-128
61006|code|MOV             R0, R8|64-70
61008|code|BL              sub_15D20|6-240-102-255
61012|code|MOV             R1, R0|1-70
61014|code|CMP             R0, #0|0-40
61016|code|BEQ             loc_EF22|99-208
61018|code|MOV             R0, R7|56-70
61020|code|BL              sub_156BC|6-240-46-252
61024|code|CMP             R0, #0|0-40
61026|code|BNE             loc_EE4E|244-209
61028|code|MOV             R3, R0|3-70
61030|code|MOV             R0, R7|56-70
61032|code|MOV             R7, R3|31-70
61034|code|BL              sub_15570|6-240-129-251
61038|code|MOV             R0, R8|64-70
61040|code|BL              sub_15C70|6-240-254-254
61044|code|B               loc_EB68|120-230
61046|code|LDR             R0, [R6,#0x10]|48-105
61048|code|BL              sub_12550|3-240-106-251
61052|code|MOV             R8, R0|128-70
61054|code|CMP             R0, #0|0-40
61056|code|BNE.W           loc_EBDC|127-244-172-174
61060|code|LDR             R0, [R6,#0x10]|48-105
61062|code|BL              sub_124FC|3-240-57-251
61066|code|MOVS            R3, #0|0-35
61068|code|STR             R3, [R6,#0x10]|51-97
61070|code|MOV             R7, R3|31-70
61072|code|B               loc_EB68|106-230
61074|code|BEQ             loc_EE9C|3-208
61076|code|MOVS            R0, #1|1-32
61078|code|LDR             R1, =aGetregexBufCbu_0; "_getregex_buf: cbuf_peek returned %d"|16-73
61080|code|BL              err|3-240-44-254
61084|code|MOV             R0, R8|64-70
61086|code|BL              sub_1687C|7-240-237-252
61090|code|B               def_EB3A; jumptable 0000EB3A default case|96-230
61092|code|LDR             R7, [R7,#4]|127-104
61094|code|B               loc_ECCA|16-231
61096|code|MOV             R0, R7|56-70
61098|code|MOV             R7, R3|31-70
61100|code|BL              sub_15570|6-240-96-251
61104|code|B               loc_EB68|90-230
61106|code|LDR             R0, [R4,#0x30]|32-107
61108|code|BL              sub_124D8|3-240-16-251
61112|code|LDR             R3, [R6,#0xC]|243-104
61114|code|LDR             R3, [R3]|27-104
61116|code|STR             R0, [R6,#0x10]|48-97
61118|code|B               loc_EBBC|125-230
61120|code|MOVS            R0, #1|1-32
61122|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|6-73
61124|code|BL              sub_12AC4|3-240-254-253
61128|code|B               loc_EC46|189-230
61130|data|ALIGN 4|0-191
61132|data|DCD aDelaySLd66ld; "delay(%s): %ld.%-6.6ld"|248-145-1-0
61136|data|DCD aGetregexBufCbu; "_getregex_buf: cbuf_drop returned %d"|208-145-1-0
61140|data|DCD aRecvSS; "recv(%s): '%s'"|124-145-1-0
61144|data|DCD aGetregexBufCbu_0; "_getregex_buf: cbuf_peek returned %d"|140-145-1-0
61148|data|DCD aGettimeofday_0; "gettimeofday"|140-141-1-0
61152|code|LDR             R2, [R6,#0xC]|242-104
61154|code|LDR             R0, [R4,#0x14]|96-105
61156|code|LDR             R1, [R2,#8]|145-104
61158|code|BL              sub_16D20|7-240-27-255
61162|code|MOV             R10, R0|130-70
61164|code|CMP             R0, #0|0-40
61166|code|BNE.W           loc_EC70|127-244-191-174
61170|code|LDR             R0, [R6]|48-104
61172|code|CMP             R0, #0|0-40
61174|code|BEQ.W           loc_EB96|63-244-78-174
61178|code|BL              sub_15678|6-240-189-251
61182|code|CMP             R0, #0|0-40
61184|code|BLE.W           loc_EB96|127-247-73-174
61188|code|LDR             R0, [R6]|48-104
61190|code|BL              sub_15AA8|6-240-207-253
61194|code|LDR             R0, [R0]|0-104
61196|code|CMP             R0, #0|0-40
61198|code|BEQ.W           loc_EB96|63-244-66-174
61202|code|BL              sub_168F8|7-240-241-252
61206|code|MOV             R10, R0|130-70
61208|code|MOV             R7, R0|7-70
61210|code|CMP             R0, #0|0-40
61212|code|BEQ.W           loc_EB68|63-244-36-174
61216|code|B               loc_EC70|166-230
61218|code|LDR             R2, [R6,#0xC]|242-104
61220|code|MOV             R1, R7|57-70
61222|code|MOV             R7, R0|7-70
61224|code|LDR             R0, [R2,#4]|80-104
61226|code|BL              sub_E0B0|255-247-193-248
61230|code|LDR             R3, [R5,#8]|171-104
61232|code|MOV             R1, R0|1-70
61234|code|MOV             R0, R3|24-70
61236|code|BL              sub_15A00|6-240-100-253
61240|code|MOV             R0, R8|64-70
61242|code|BL              sub_15C70|6-240-153-254
61246|code|B               loc_EB68|19-230
61248|code|LDR             R2, [R4,#4]|98-104
61250|code|MOVS            R0, #0|0-32
61252|code|LDR             R1, =aSPollHangup; "%s: poll: hangup"|95-73
61254|code|BL              err|3-240-213-253
61258|code|B               loc_E918|229-228
61260|code|LDR             R2, [R4]|34-104
61262|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
61270|code|CMP             R2, R3|154-66
61272|code|BNE             loc_F024|100-209
61274|code|LDR             R0, [R4,#0x2C]; s2|224-106
61276|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
61280|code|LDR             R1, [R4,#0x18]|161-105
61282|code|ADD             R3, SP, #0x68+var_2C|15-171
61284|code|BL              sub_C2D0|253-247-180-249
61288|code|CMP             R0, #0|0-40
61290|code|BLT             loc_F018|85-219
61292|code|BEQ             loc_EFFE|71-208
61294|code|LDR             R3, [SP,#0x68+var_2C]|15-155
61296|code|CMP             R3, #0|0-43
61298|code|BLE             loc_EF7E|4-221
61300|code|LDR             R2, [R4,#4]|98-104
61302|code|MOVS            R0, #0|0-32
61304|code|LDR             R1, =aSLostDCharsDue; "%s lost %d chars due to buffer wrap"|83-73
61306|code|BL              err|3-240-187-253
61310|code|LDR.W           R3, [R4,#0xC8]|212-248-200-48
61314|code|CMP             R3, #0|0-43
61316|code|BEQ.W           loc_E914|63-244-198-172
61320|code|MOV             R0, R4|32-70
61322|code|BLX             R3|152-71
61324|code|LDR             R3, [R4,#0xC]|227-104
61326|code|B               loc_E916|194-228
61328|code|LDR             R0, [SP,#0x68+var_58]|4-152
61330|code|ADD             R1, SP, #0x68+var_44|9-169
61332|code|BL              sub_E504|255-247-182-250
61336|code|B               loc_E928|198-228
61338|code|LDR             R2, [R4,#4]|98-104
61340|code|MOV             R0, R6|48-70
61342|code|LDR             R1, =aSPollError; "%s: poll: error"|75-73
61344|code|BL              err|3-240-168-253
61348|code|B               loc_E918|184-228
61350|code|LDR             R2, [R4,#4]|98-104
61352|code|LDR             R1, =aSPollFdNotOpen; "%s: poll: fd not open"|73-73
61354|code|BL              err|3-240-163-253
61358|code|B               loc_E918|179-228
61360|code|MOV             R0, R7|56-70
61362|code|MOV             R7, R8|71-70
61364|code|BL              sub_15570|6-240-220-250
61368|code|B               loc_EB68|214-229
61370|code|LDR.W           R3, [R4,#0xC4]|212-248-196-48
61374|code|CMP             R3, #0|0-43
61376|code|BEQ             loc_F04E|69-208
61378|code|MOV             R0, R4|32-70
61380|code|BLX             R3|152-71
61382|code|CMP             R0, #0|0-40
61384|code|BEQ.W           loc_E918|63-244-166-172
61388|code|LDR             R3, [R4,#0xC]|227-104
61390|code|CMP             R3, #2|2-43
61392|code|BNE.W           loc_E916|127-244-161-172
61396|code|MOV             R0, R4|32-70
61398|code|BL              sub_E3E0|255-247-3-250
61402|code|LDR             R3, [R4,#0xC]|227-104
61404|code|B               loc_E916|155-228
61406|code|LDR             R2, [R4,#4]|98-104
61408|code|MOVS            R0, #1|1-32
61410|code|LDR             R1, =unk_190A8|60-73
61412|code|BL              err|3-240-134-253
61416|code|B               loc_E918|150-228
61418|code|LDR             R2, [R4,#4]|98-104
61420|code|LDR             R1, =aWriteSentNoDat; "write sent no data on %s"|58-73
61422|code|BL              err|3-240-129-253
61426|code|B               loc_E918|145-228
61428|code|MOVS            R0, #1|1-32
61430|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|57-73
61432|code|BL              sub_12AC4|3-240-100-253
61436|code|B               loc_EA86|67-229
61438|code|LDR             R2, [R4,#4]|98-104
61440|code|MOVS            R0, #1|1-32
61442|code|LDR             R1, =aReadReturnedEo; "read returned EOF on %s"|55-73
61444|code|BL              sub_127FC|3-240-250-251
61448|code|B               loc_E918|134-228
61450|code|LDR             R0, =(aArgNodeVoid0+8); assertion|54-72
61452|code|MOV.W           R2, #0x32C; line|79-244-75-114
61456|code|LDR             R1, =aDeviceC; "device.c"|53-73
61458|code|LDR             R3, =aProcessAction; "_process_action"|54-75
61460|code|BLX             __assert_fail|250-247-160-238
61464|code|LDR             R2, [R4,#4]|98-104
61466|code|MOVS            R0, #1|1-32
61468|code|LDR             R1, =aReadErrorOnS; "read error on %s"|52-73
61470|code|BL              err|3-240-105-253
61474|code|B               loc_E918|121-228
61476|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|51-72
61478|code|MOVW            R2, #0x557; line|64-242-87-82
61482|code|LDR             R1, =aDeviceC; "device.c"|47-73
61484|code|LDR             R3, =aHandleRead_0; "_handle_read"|50-75
61486|code|BLX             __assert_fail|250-247-148-238
61490|code|LDR             R0, =aE2E; "e2 == e"|50-72
61492|code|MOVW            R2, #0x36A; line|64-242-106-50
61496|code|LDR             R1, =aDeviceC; "device.c"|43-73
61498|code|LDR             R3, =aProcessAction; "_process_action"|44-75
61500|code|BLX             __assert_fail|250-247-140-238
61504|code|LDR             R0, =(aCbUsed0+0xC); assertion|47-72
61506|code|MOV.W           R2, #0x3C8; line|79-244-114-114
61510|code|LDR             R1, =aDeviceC; "device.c"|40-73
61512|code|LDR             R3, =aProcessForeach; "_process_foreach"|46-75
61514|code|BLX             __assert_fail|250-247-134-238
61518|code|LDR             R0, =aDevFinishConne; "dev->finish_connect != ((void *)0)"|46-72
61520|code|MOVW            R2, #0x595; line|64-242-149-82
61524|code|LDR             R1, =aDeviceC; "device.c"|36-73
61526|code|LDR             R3, =aHandleReadyDev; "_handle_ready_device"|45-75
61528|code|BLX             __assert_fail|250-247-126-238
61532|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|37-72
61534|code|MOVW            R2, #0x56F; line|64-242-111-82
61538|code|LDR             R1, =aDeviceC; "device.c"|33-73
61540|code|LDR             R3, =aHandleWrite_0; "_handle_write"|42-75
61542|code|BLX             __assert_fail|250-247-120-238
61546|code|LDR             R0, =aDevConnectStat_0; "dev->connect_state != DEV_NOT_CONNECTED"|42-72
61548|code|MOVW            R2, #0x582; line|64-242-130-82
61552|code|LDR             R1, =aDeviceC; "device.c"|29-73
61554|code|LDR             R3, =aHandleReadyDev; "_handle_ready_device"|38-75
61556|code|BLX             __assert_fail|250-247-112-238
61560|code|LDR             R0, =aDevFd1; "dev->fd != (-1)"|39-72
61562|code|MOVW            R2, #0x583; line|64-242-131-82
61566|code|LDR             R1, =aDeviceC; "device.c"|26-73
61568|code|LDR             R3, =aHandleReadyDev; "_handle_ready_device"|34-75
61570|code|BLX             __assert_fail|250-247-106-238
61574|code|LDR             R0, =aBytesPeekedMax; "bytes_peeked <= maxpeeksize"|37-72
61576|code|MOVS            R2, #0xD7; line|215-34
61578|code|LDR             R1, =aDeviceC; "device.c"|23-73
61580|code|LDR             R3, =aGetregexBuf; "_getregex_buf"|36-75
61582|code|BLX             __assert_fail|250-247-100-238
61586|code|LDR             R0, =aDevConnectStat_1; "dev->connect_state == DEV_CONNECTED"|36-72
61588|code|MOVW            R2, #0x59C; line|64-242-156-82
61592|code|LDR             R1, =aDeviceC; "device.c"|19-73
61594|code|LDR             R3, =aHandleReadyDev; "_handle_ready_device"|28-75
61596|code|BLX             __assert_fail|250-247-92-238
61600|code|SUB.W           R0, R2, #6|162-241-6-0
61604|code|NEGS            R2, R0|66-66
61606|code|ADC.W           R2, R2, R0|66-235-0-2
61610|code|CMP             R3, #1|1-43
61612|code|ITE NE|20-191
61614|code|MOVNE           R2, #0|0-34
61616|code|ANDEQ.W         R2, R2, #1|2-240-1-2
61620|code|CMP             R2, #0|0-42
61622|code|BNE.W           loc_EE2E|127-244-186-174
61626|code|CMP             R3, #0|0-43
61628|code|BEQ.W           loc_EB92|63-244-105-173
61632|code|MOVS            R7, #0|0-39
61634|code|B               loc_EB68|81-229
61636|data|DCD aSPollHangup; "%s: poll: hangup"|72-144-1-0
61640|data|DCD aSLostDCharsDue; "%s lost %d chars due to buffer wrap"|4-145-1-0
61644|data|DCD aSPollError; "%s: poll: error"|92-144-1-0
61648|data|DCD aSPollFdNotOpen; "%s: poll: fd not open"|108-144-1-0
61652|data|DCD unk_190A8|168-144-1-0
61656|data|DCD aWriteSentNoDat; "write sent no data on %s"|188-144-1-0
61660|data|DCD aGettimeofday_0; "gettimeofday"|140-141-1-0
61664|data|DCD aReadReturnedEo; "read returned EOF on %s"|236-144-1-0
61668|data|DCD aArgNodeVoid0+8; "e != ((void *)0)"|172-120-1-0
61672|data|DCD aDeviceC; "device.c"|240-140-1-0
61676|data|DCD aProcessAction; "_process_action"|152-140-1-0
61680|data|DCD aReadErrorOnS; "read error on %s"|216-144-1-0
61684|data|DCD aDevMagic0xbeef; "dev->magic == 0xbeefb111"|244-142-1-0
61688|data|DCD aHandleRead_0; "_handle_read"|136-140-1-0
61692|data|DCD aE2E; "e2 == e"|16-146-1-0
61696|data|DCD aCbUsed0+0xC; "0"|112-125-1-0
61700|data|DCD aProcessForeach; "_process_foreach"|184-140-1-0
61704|data|DCD aDevFinishConne; "dev->finish_connect != ((void *)0)"|132-144-1-0
61708|data|DCD aHandleReadyDev; "_handle_ready_device"|96-140-1-0
61712|data|DCD aHandleWrite_0; "_handle_write"|120-140-1-0
61716|data|DCD aDevConnectStat_0; "dev->connect_state != DEV_NOT_CONNECTED"|16-144-1-0
61720|data|DCD aDevFd1; "dev->fd != (-1)"|56-144-1-0
61724|data|DCD aBytesPeekedMax; "bytes_peeked <= maxpeeksize"|180-145-1-0
61728|data|DCD aGetregexBuf; "_getregex_buf"|168-140-1-0
61732|data|DCD aDevConnectStat_1; "dev->connect_state == DEV_CONNECTED"|116-152-1-0
61736|code|PUSH            {R3-R5,LR}|56-181
61738|code|MOV             R5, R0|5-70
61740|code|MOVS            R0, #8|8-32
61742|code|BL              sub_16730|7-240-255-250
61746|code|MOV             R1, #0x19264|73-242-100-33-192-242-1-1
61754|code|MOV             R4, R0|4-70
61756|code|MOV             R0, R5|40-70
61758|code|BL              sub_1608C|6-240-165-255
61762|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
61766|code|STR             R3, [R4,#4]|99-96
61768|code|STR             R0, [R4]|32-96
61770|code|MOV             R0, R4|32-70
61772|code|POP             {R3-R5,PC}|56-189
61774|data|ALIGN 0x10|0-191
61776|code|PUSH            {R4,LR}|16-181
61778|code|MOV             R4, R0|4-70
61780|code|LDR             R0, [R0]|0-104
61782|code|BL              sub_161CC|7-240-57-248
61786|code|MOV             R0, R4|32-70
61788|code|POP.W           {R4,LR}|189-232-16-64
61792|code|B.W             sub_1687C|7-240-140-187
61796|code|PUSH.W          {R4-R8,LR}|45-233-240-65
61800|code|SUB             SP, SP, #0x48|146-176
61802|code|LDR             R5, =__stack_chk_guard|43-77
61804|code|MOV             R4, R0|4-70
61806|code|LDR             R6, [R0,#0xC]|198-104
61808|code|LDR.W           R7, [R0,#0xD4]|208-248-212-112
61812|code|LDR             R3, [R5]|43-104
61814|code|STR             R3, [SP,#0x60+var_1C]|17-147
61816|code|CMP             R6, #0|0-46
61818|code|BNE             loc_F20C|71-209
61820|code|LDR             R3, [R0,#0x18]|131-105
61822|code|ADDS            R3, #1|1-51
61824|code|BNE             loc_F200|62-209
61826|code|MOVS            R2, #0x40 ; '@'|64-34
61828|code|MOV             R0, SP|104-70
61830|code|ADD             R1, SP, #0x60+var_5C|1-169
61832|code|BL              sub_16F50|7-240-226-254
61836|code|CMP             R0, #0|0-40
61838|code|MOV             R8, R0|128-70
61840|code|BLT             loc_F1F0|46-219
61842|code|BEQ             loc_F1D6|32-208
61844|code|LDR             R0, [SP,#0x60+var_60]|0-152
61846|code|BL              sub_16DD8|7-240-31-254
61850|code|LDR             R1, [SP,#0x60+var_60]|0-153
61852|code|LDR.W           R3, [R4,#0xB8]|212-248-184-48
61856|code|MOV             R0, R6|48-70
61858|code|LDR             R2, [R4,#4]|98-104
61860|code|STR             R1, [R4,#0x18]|161-97
61862|code|ADDS            R3, #1|1-51
61864|code|MOVS            R1, #2|2-33
61866|code|STR.W           R3, [R4,#0xB8]|196-248-184-48
61870|code|STR             R1, [R4,#0xC]|225-96
61872|code|ADD             R3, SP, #0x60+var_5C|1-171
61874|code|STR.W           R8, [R7,#4]|199-248-4-128
61878|code|LDR             R1, =aPipeConnectSOp; "_pipe_connect(%s): opened on %s"|25-73
61880|code|BL              err|3-240-156-252
61884|code|LDR             R0, [R4,#0xC]|224-104
61886|code|LDR             R2, [SP,#0x60+var_1C]|17-154
61888|code|SUB.W           R3, R0, #2|160-241-2-3
61892|code|NEGS            R0, R3|88-66
61894|code|ADC.W           R0, R0, R3|64-235-3-0
61898|code|LDR             R3, [R5]|43-104
61900|code|CMP             R2, R3|154-66
61902|code|BNE             loc_F1FC|21-209
61904|code|ADD             SP, SP, #0x48 ; 'H'|18-176
61906|code|POP.W           {R4-R8,PC}|189-232-240-129
61910|code|BL              sub_16E60|7-240-67-254
61914|code|LDR             R1, [R7]; argv|57-104
61916|code|LDR             R0, [R1]; path|8-104
61918|code|BLX             execv|250-247-220-236
61922|code|LDR             R3, [R7]|59-104
61924|code|MOVS            R0, #1|1-32
61926|code|LDR             R1, =aExecS; "exec %s"|14-73
61928|code|LDR             R2, [R3]|26-104
61930|code|BL              sub_12AC4|3-240-107-252
61934|code|B               loc_F1BC|229-231
61936|code|LDR             R2, [R4,#4]|98-104
61938|code|MOVS            R0, #1|1-32
61940|code|LDR             R1, =aPipeConnectSFo; "_pipe_connect(%s): forkpty error"|11-73
61942|code|BL              sub_12AC4|3-240-101-252
61946|code|B               loc_F1BC|223-231
61948|code|BLX             __stack_chk_fail|250-247-236-235
61952|code|LDR             R0, =aDevFd1_0; "dev->fd == (-1)"|9-72
61954|code|MOVS            R2, #0x65 ; 'e'; line|101-34
61956|code|LDR             R1, =aDevicePipeC; "device_pipe.c"|9-73
61958|code|LDR             R3, =aPipeConnect; "pipe_connect"|10-75
61960|code|BLX             __assert_fail|250-247-166-237
61964|code|LDR             R0, =aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|9-72
61966|code|MOVS            R2, #0x64 ; 'd'; line|100-34
61968|code|LDR             R1, =aDevicePipeC; "device_pipe.c"|6-73
61970|code|LDR             R3, =aPipeConnect; "pipe_connect"|7-75
61972|code|BLX             __assert_fail|250-247-160-237
61976|data|DCD __stack_chk_guard|16-74-2-0
61980|data|DCD aPipeConnectSOp; "_pipe_connect(%s): opened on %s"|180-146-1-0
61984|data|DCD aExecS; "exec %s"|172-146-1-0
61988|data|DCD aPipeConnectSFo; "_pipe_connect(%s): forkpty error"|136-146-1-0
61992|data|DCD aDevFd1_0; "dev->fd == (-1)"|120-146-1-0
61996|data|DCD aDevicePipeC; "device_pipe.c"|104-146-1-0
62000|data|DCD aPipeConnect; "pipe_connect"|68-146-1-0
62004|data|DCD aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|232-143-1-0
62008|code|LDR             R3, [R0,#0xC]|195-104
62010|code|PUSH            {R4-R6,LR}|112-181
62012|code|CMP             R3, #2|2-43
62014|code|SUB             SP, SP, #0x10|132-176
62016|code|MOV             R4, R0|4-70
62018|code|LDR.W           R5, [R0,#0xD4]|208-248-212-80
62022|code|BNE             loc_F2E6|78-209
62024|code|LDR             R2, [R0,#4]|66-104
62026|code|MOVS            R0, #1|1-32
62028|code|LDR             R3, [R4,#0x18]|163-105
62030|code|LDR             R1, =aPipeDisconnect; "_pipe_disconnect: %s on fd %d"|41-73
62032|code|BL              sub_127FC|3-240-212-250
62036|code|LDR             R0, [R4,#0x18]; fd|160-105
62038|code|CMP             R0, #0|0-40
62040|code|BLT             loc_F268|6-219
62042|code|BLX             close|250-247-108-237
62046|code|CMP             R0, #0|0-40
62048|code|BLT             loc_F2C2|47-219
62050|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
62054|code|STR             R3, [R4,#0x18]|163-97
62056|code|LDR             R0, [R5,#4]; pid|104-104
62058|code|CMP             R0, #0|0-40
62060|code|BLE             loc_F2AA|29-221
62062|code|MOVS            R1, #0xF; sig|15-33
62064|code|BLX             kill|250-247-80-236
62068|code|MOVS            R2, #0; options|0-34
62070|code|LDR             R0, [R5,#4]; pid|104-104
62072|code|ADD             R1, SP, #0x20+stat_loc; stat_loc|3-169
62074|code|BLX             waitpid|250-247-2-236
62078|code|CMP             R0, #0|0-40
62080|code|BLT             loc_F2DA|43-219
62082|code|LDR             R3, [SP,#0x20+stat_loc]|3-155
62084|code|ANDS.W          R0, R3, #0x7F|19-240-127-0
62088|code|BEQ             loc_F2AE|17-208
62090|code|ADDS            R3, R0, #1|67-28
62092|code|LDR             R2, [R4,#4]|98-104
62094|code|SBFX.W          R3, R3, #1, #7|67-243-70-3
62098|code|CMP             R3, #0|0-43
62100|code|LDR             R3, [R5]|43-104
62102|code|LDR             R3, [R3]|27-104
62104|code|BLE             loc_F2D0|26-221
62106|code|STR             R0, [SP,#0x20+var_20]|0-144
62108|code|MOVS            R0, #0|0-32
62110|code|LDR             R1, =aPipeDisconnect_0; "_pipe_disconnect(%s): %s terminated wit"...|22-73
62112|code|BL              err|3-240-40-252
62116|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
62120|code|STR             R3, [R5,#4]|107-96
62122|code|ADD             SP, SP, #0x10|4-176
62124|code|POP             {R4-R6,PC}|112-189
62126|code|LDR             R6, [R5]|46-104
62128|code|UBFX.W          R1, R3, #8, #8|195-243-7-33
62132|code|LDR             R2, [R4,#4]|98-104
62134|code|LDR             R3, [R6]|51-104
62136|code|STR             R1, [SP,#0x20+var_20]|0-145
62138|code|LDR             R1, =aPipeDisconnect_1; "_pipe_disconnect(%s): %s exited with st"...|16-73
62140|code|BL              err|3-240-26-252
62144|code|B               loc_F2A4|240-231
62146|code|LDR             R2, [R4,#4]|98-104
62148|code|MOVS            R0, #1|1-32
62150|code|LDR             R3, [R4,#0x18]|163-105
62152|code|LDR             R1, =aPipeDisconnect_2; "_pipe_disconnect: %s close fd %d"|13-73
62154|code|BL              err|3-240-19-252
62158|code|B               loc_F262|200-231
62160|code|MOVS            R0, #0|0-32
62162|code|LDR             R1, =aPipeDisconnect_3; "_pipe_disconnect(%s): %s terminated"|12-73
62164|code|BL              err|3-240-14-252
62168|code|B               loc_F2A4|228-231
62170|code|LDR             R2, [R4,#4]|98-104
62172|code|MOVS            R0, #1|1-32
62174|code|LDR             R1, =aPipeDisconnect_4; "_pipe_disconnect(%s): wait"|10-73
62176|code|BL              err|3-240-8-252
62180|code|B               loc_F282|205-231
62182|code|LDR             R0, =aDevConnectStat_1; "dev->connect_state == DEV_CONNECTED"|9-72
62184|code|MOVS            R2, #0x85; line|133-34
62186|code|LDR             R1, =aDevicePipeC; "device_pipe.c"|9-73
62188|code|LDR             R3, =aPipeDisconnect_5; "pipe_disconnect"|9-75
62190|code|BLX             __assert_fail|250-247-52-237
62194|data|ALIGN 4|0-191
62196|data|DCD aPipeDisconnect; "_pipe_disconnect: %s on fd %d"|212-146-1-0
62200|data|DCD aPipeDisconnect_0; "_pipe_disconnect(%s): %s terminated wit"...|100-147-1-0
62204|data|DCD aPipeDisconnect_1; "_pipe_disconnect(%s): %s exited with st"...|52-147-1-0
62208|data|DCD aPipeDisconnect_2; "_pipe_disconnect: %s close fd %d"|244-146-1-0
62212|data|DCD aPipeDisconnect_3; "_pipe_disconnect(%s): %s terminated"|152-147-1-0
62216|data|DCD aPipeDisconnect_4; "_pipe_disconnect(%s): wait"|24-147-1-0
62220|data|DCD aDevConnectStat_1; "dev->connect_state == DEV_CONNECTED"|116-152-1-0
62224|data|DCD aDevicePipeC; "device_pipe.c"|104-146-1-0
62228|data|DCD aPipeDisconnect_5; "pipe_disconnect"|84-146-1-0
62232|code|PUSH            {R4-R6,LR}|112-181
62234|code|MOV             R4, R0|4-70
62236|code|MOVS            R0, #8|8-32
62238|code|MOV             R6, R1|14-70
62240|code|BL              sub_16730|7-240-6-250
62244|code|MOV             R5, R0|5-70
62246|code|MOV             R0, R4|32-70
62248|code|BL              sub_168F8|7-240-230-250
62252|code|MOV             R3, R0|3-70
62254|code|MOV             R0, R6|48-70
62256|code|STR             R3, [R5]|43-96
62258|code|BL              sub_168F8|7-240-225-250
62262|code|STR             R0, [R5,#4]|104-96
62264|code|MOV             R0, R5|40-70
62266|code|POP             {R4-R6,PC}|112-189
62268|code|PUSH            {R4,LR}|16-181
62270|code|MOV             R4, R0|4-70
62272|code|LDR             R0, [R0]|0-104
62274|code|CBZ             R0, loc_F348|8-177
62276|code|BL              sub_1687C|7-240-154-250
62280|code|LDR             R0, [R4,#4]|96-104
62282|code|CBZ             R0, loc_F350|8-177
62284|code|BL              sub_1687C|7-240-150-250
62288|code|MOV             R0, R4|32-70
62290|code|POP.W           {R4,LR}|189-232-16-64
62294|code|B.W             sub_1687C|7-240-145-186
62298|data|ALIGN 4|0-191
62300|code|PUSH.W          {R4-R11,LR}|45-233-240-79
62304|code|SUB             SP, SP, #0x64|153-176
62306|code|LDR             R5, =__stack_chk_guard|148-77
62308|code|MOVW            R3, #0xB111|75-242-17-19
62312|code|LDR             R2, [R0]|2-104
62314|code|MOVT.W          R3, #0xBEEF|203-246-239-99
62318|code|MOVS            R6, #1|1-38
62320|code|MOV             R4, R0|4-70
62322|code|LDR             R1, [R5]|41-104
62324|code|MOV.W           R0, #0x2580|79-244-22-80
62328|code|STR             R0, [SP,#0x88+var_78]|4-144
62330|code|MOVS            R0, #8|8-32
62332|code|STR             R6, [SP,#0x88+var_70]|6-150
62334|code|STR             R1, [SP,#0x88+var_2C]|23-145
62336|code|MOVS            R1, #0x4E ; 'N'|78-33
62338|code|CMP             R2, R3|154-66
62340|code|STR             R0, [SP,#0x88+var_74]|5-144
62342|code|STRB.W          R1, [SP,#0x88+var_69]|141-248-31-16
62346|code|BNE.W           loc_F61C|64-240-71-129
62350|code|LDR             R7, [R4,#0xC]|231-104
62352|code|CMP             R7, #0|0-47
62354|code|BNE.W           loc_F610|64-240-61-129
62358|code|LDR             R3, [R4,#0x18]|163-105
62360|code|ADDS            R3, #1|1-51
62362|code|BNE.W           loc_F604|64-240-51-129
62366|code|LDR.W           R8, [R4,#0xD4]|212-248-212-128
62370|code|MOVW            R1, #0x902; oflag|64-246-2-17
62374|code|LDR.W           R0, [R8]; file|216-248-0-0
62378|code|BLX             open|250-247-168-235
62382|code|CMP             R0, #0|0-40
62384|code|STR             R0, [R4,#0x18]|160-97
62386|code|BLT             loc_F474|95-219
62388|code|BLX             isatty|250-247-178-236
62392|code|CBNZ            R0, loc_F3EA|184-185
62394|code|LDR             R2, [R4,#4]|98-104
62396|code|LDR             R1, =aSerialConnectS; "_serial_connect(%s): not a tty"|126-73
62398|code|BL              err|3-240-153-251
62402|code|LDR             R0, [R4,#0x18]; fd|160-105
62404|code|CMP             R0, #0|0-40
62406|code|BLT             loc_F470|83-219
62408|code|BLX             close|250-247-180-236
62412|code|CMP             R0, #0|0-40
62414|code|BLT.W           loc_F4F6|192-242-146-128
62418|code|MOVS            R0, #0|0-32
62420|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
62424|code|STR             R3, [R4,#0x18]|163-97
62426|code|LDR             R2, [SP,#0x88+var_2C]|23-154
62428|code|LDR             R3, [R5]|43-104
62430|code|CMP             R2, R3|154-66
62432|code|BNE.W           loc_F5F4|64-240-8-129
62436|code|ADD             SP, SP, #0x64 ; 'd'|25-176
62438|code|POP.W           {R4-R11,PC}|189-232-240-143
62442|code|LDR             R0, [R4,#0x18]|160-105
62444|code|BL              sub_16DD8|7-240-244-252
62448|code|MOVS            R1, #2; cmd|2-33
62450|code|LDR             R0, [R4,#0x18]; fd|160-105
62452|code|MOV             R2, R7; len|58-70
62454|code|BLX             lockf|250-247-250-235
62458|code|CMP             R0, #0|0-40
62460|code|BLT             loc_F484|66-219
62462|code|LDR.W           R0, [R8,#4]|216-248-4-0
62466|code|ADD             R2, SP, #0x88+var_78|4-170
62468|code|LDR             R1, =aDDCD; "%d,%d%c%d"|109-73
62470|code|ADD             R3, SP, #0x88+var_74|5-171
62472|code|ADD.W           LR, SP, #0x88+var_69|13-241-31-14
62476|code|STR.W           LR, [SP,#0x88+var_88]|205-248-0-224
62480|code|ADD.W           LR, SP, #0x88+var_70|13-241-24-14
62484|code|STR.W           LR, [SP,#0x88+var_84]|205-248-4-224
62488|code|BLX             __isoc99_sscanf|250-247-214-235
62492|code|CMP             R0, #4|4-40
62494|code|BHI.W           loc_F628|0-242-3-129
62498|code|LDR             R3, [R4,#4]|99-104
62500|code|ADD             R1, SP, #0x88+termios_p; termios_p|8-169
62502|code|LDR.W           R11, [R4,#0x18]|212-248-24-176
62506|code|LDR.W           R8, [SP,#0x88+var_78]|221-248-16-128
62510|code|STR             R3, [SP,#0x88+var_80]|2-147
62512|code|LDRB.W          R3, [SP,#0x88+var_69]|157-248-31-48
62516|code|MOV             R0, R11; fd|88-70
62518|code|LDR.W           R9, [SP,#0x88+var_74]|221-248-20-144
62522|code|LDR.W           R10, [SP,#0x88+var_70]|221-248-24-160
62526|code|STR             R3, [SP,#0x88+var_7C]|3-147
62528|code|BLX             tcgetattr|250-247-144-236
62532|code|CMP             R0, #0|0-40
62534|code|BLT.W           loc_F5E8|192-242-207-128
62538|code|CMP.W           R8, #0x12C|184-245-150-127
62542|code|IT NE|24-191
62544|code|LDRNE           R3, =unk_193CC|91-75
62546|code|BEQ             loc_F490|29-208
62548|code|LDR             R2, [R3,#8]|154-104
62550|code|CMP             R8, R2|144-69
62552|code|BEQ             loc_F492|27-208
62554|code|ADDS            R6, #1|1-54
62556|code|ADDS            R3, #8|8-51
62558|code|CMP             R6, #0xB|11-46
62560|code|BNE             loc_F454|248-209
62562|code|MOVS            R0, #0|0-32
62564|code|LDR             R1, =aSErrorSettingB; "%s: error setting baud rate to %d"|87-73
62566|code|LDR             R2, [SP,#0x88+var_80]|2-154
62568|code|MOV             R3, R8|67-70
62570|code|BL              err|3-240-67-251
62574|code|B               loc_F3C2|168-231
62576|code|MOVS            R0, #0|0-32
62578|code|B               loc_F3DA|178-231
62580|code|LDR             R2, [R4,#4]|98-104
62582|code|MOV             R0, R6|48-70
62584|code|LDR.W           R3, [R8]|216-248-0-48
62588|code|LDR             R1, =aSerialConnectS_0; "_serial_connect(%s): open %s"|82-73
62590|code|BL              err|3-240-57-251
62594|code|B               loc_F3C2|158-231
62596|code|LDR             R2, [R4,#4]|98-104
62598|code|MOV             R0, R6|48-70
62600|code|LDR             R1, =aSerialConnectS_1; "_serial_connect(%s): could not lock dev"...|80-73
62602|code|BL              err|3-240-51-251
62606|code|B               loc_F3C2|152-231
62608|code|MOV             R6, R7|62-70
62610|code|LDR             R3, =aSerialConnect; "serial_connect"|79-75
62612|code|ADD             R0, SP, #0x88+termios_p; termios_p|8-168
62614|code|ADD.W           R6, R3, R6,LSL#3|3-235-198-6
62618|code|LDR             R6, [R6,#0x14]|118-105
62620|code|MOV             R1, R6; speed|49-70
62622|code|BLX             cfsetispeed|250-247-112-235
62626|code|CMP             R0, #0|0-40
62628|code|BEQ.W           loc_F5AA|0-240-129-128
62632|code|CMP             R0, #0|0-40
62634|code|BLT             loc_F462|218-219
62636|code|CMP.W           R9, #7|185-241-7-15
62640|code|BEQ             loc_F4C6|9-208
62642|code|CMP.W           R9, #8|185-241-8-15
62646|code|BEQ             loc_F4EC|25-208
62648|code|MOVS            R0, #0|0-32
62650|code|LDR             R1, =aSErrorSettingD; "%s: error setting data bits to %d"|70-73
62652|code|LDR             R2, [SP,#0x88+var_80]|2-154
62654|code|MOV             R3, R9|75-70
62656|code|BL              err|3-240-24-251
62660|code|B               loc_F3C2|125-231
62662|code|LDR             R3, [SP,#0x88+termios_p.c_cflag]|10-155
62664|code|BIC.W           R3, R3, #0x30|35-240-48-3
62668|code|ORR.W           R3, R3, #0x20|67-240-32-3
62672|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62674|code|CMP.W           R10, #1|186-241-1-15
62678|code|BEQ             loc_F542|52-208
62680|code|CMP.W           R10, #2|186-241-2-15
62684|code|BEQ             loc_F502|17-208
62686|code|MOVS            R0, #0|0-32
62688|code|LDR             R1, =aSErrorSettingS; "%s: error setting stop bits to %d"|61-73
62690|code|LDR             R2, [SP,#0x88+var_80]|2-154
62692|code|MOV             R3, R10|83-70
62694|code|BL              err|3-240-5-251
62698|code|B               loc_F3C2|106-231
62700|code|LDR             R3, [SP,#0x88+termios_p.c_cflag]|10-155
62702|code|ORR.W           R3, R3, #0x30|67-240-48-3
62706|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62708|code|B               loc_F4D2|237-231
62710|code|LDR             R2, [R4,#4]|98-104
62712|code|MOVS            R0, #1|1-32
62714|code|LDR             R1, =aSerialConnectS_3; "_serial_connect(%s): close"|56-73
62716|code|BL              err|3-240-250-250
62720|code|B               loc_F3D2|103-231
62722|code|ORR.W           R3, R3, #0x40|67-240-64-3
62726|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62728|code|LDR             R1, [SP,#0x88+var_7C]|3-153
62730|code|SUB.W           R2, R1, #0x45 ; 'E'; switch 43 cases|161-241-69-2
62734|code|CMP             R2, #0x2A|42-42
62736|code|BHI             def_F512; jumptable 0000F512 default case, cases 70-77,80-100,102-109|62-216
62738|code|TBB.W           [PC,R2]; switch jump|223-232-2-240
62742|data|DCB 0x44; jump table for switch statement|68
62743|data|DCB 0x3D|61
62744|data|DCB 0x3D|61
62745|data|DCB 0x3D|61
62746|data|DCB 0x3D|61
62747|data|DCB 0x3D|61
62748|data|DCB 0x3D|61
62749|data|DCB 0x3D|61
62750|data|DCB 0x3D|61
62751|data|DCB 0x39|57
62752|data|DCB 0x1A|26
62753|data|DCB 0x3D|61
62754|data|DCB 0x3D|61
62755|data|DCB 0x3D|61
62756|data|DCB 0x3D|61
62757|data|DCB 0x3D|61
62758|data|DCB 0x3D|61
62759|data|DCB 0x3D|61
62760|data|DCB 0x3D|61
62761|data|DCB 0x3D|61
62762|data|DCB 0x3D|61
62763|data|DCB 0x3D|61
62764|data|DCB 0x3D|61
62765|data|DCB 0x3D|61
62766|data|DCB 0x3D|61
62767|data|DCB 0x3D|61
62768|data|DCB 0x3D|61
62769|data|DCB 0x3D|61
62770|data|DCB 0x3D|61
62771|data|DCB 0x3D|61
62772|data|DCB 0x3D|61
62773|data|DCB 0x3D|61
62774|data|DCB 0x44|68
62775|data|DCB 0x3D|61
62776|data|DCB 0x3D|61
62777|data|DCB 0x3D|61
62778|data|DCB 0x3D|61
62779|data|DCB 0x3D|61
62780|data|DCB 0x3D|61
62781|data|DCB 0x3D|61
62782|data|DCB 0x3D|61
62783|data|DCB 0x39|57
62784|data|DCB 0x1A|26
62785|data|ALIGN 2|0
62786|code|BIC.W           R3, R3, #0x40|35-240-64-3
62790|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62792|code|B               loc_F508|222-231
62794|code|ORR.W           R3, R3, #0x300; jumptable 0000F512 cases 79,111|67-244-64-115
62798|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62800|code|MOVS            R6, #0|0-38
62802|code|LDR             R3, [SP,#0x88+termios_p.c_oflag]|9-155
62804|code|MOV             R0, R11; fd|88-70
62806|code|ADD             R2, SP, #0x88+termios_p; termios_p|8-170
62808|code|MOV             R1, R6; optional_actions|49-70
62810|code|BIC.W           R3, R3, #1|35-240-1-3
62814|code|STR             R6, [SP,#0x88+termios_p.c_lflag]|11-150
62816|code|STR             R3, [SP,#0x88+termios_p.c_oflag]|9-147
62818|code|STR             R6, [SP,#0x88+termios_p]|8-150
62820|code|BLX             tcsetattr|250-247-146-234
62824|code|CMP             R0, R6|176-66
62826|code|BLT             loc_F5F8|69-219
62828|code|LDR.W           R3, [R4,#0xB8]|212-248-184-48
62832|code|MOV             R0, R6|48-70
62834|code|MOVS            R1, #2|2-33
62836|code|LDR             R2, [R4,#4]|98-104
62838|code|STR             R1, [R4,#0xC]|225-96
62840|code|ADDS            R3, #1|1-51
62842|code|LDR             R1, =aSerialConnectS_2; "_serial_connect(%s): opened"|25-73
62844|code|STR.W           R3, [R4,#0xB8]|196-248-184-48
62848|code|BL              err|3-240-184-250
62852|code|MOVS            R0, #1|1-32
62854|code|B               loc_F3DA|40-231
62856|code|BIC.W           R3, R3, #0x100; jumptable 0000F512 cases 78,110|35-244-128-115
62860|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62862|code|B               loc_F550|223-231
62864|code|MOVS            R0, #0; jumptable 0000F512 default case, cases 70-77,80-100,102-109|0-32
62866|code|LDR             R1, =aSErrorSettingP; "%s: error setting parity to %c"|20-73
62868|code|LDR             R2, [SP,#0x88+var_80]|2-154
62870|code|LDR             R3, [SP,#0x88+var_7C]|3-155
62872|code|BL              err|3-240-172-250
62876|code|B               loc_F3C2|17-231
62878|code|ORR.W           R3, R3, #0x100; jumptable 0000F512 cases 69,101|67-244-128-115
62882|code|BIC.W           R3, R3, #0x200|35-244-0-115
62886|code|STR             R3, [SP,#0x88+termios_p.c_cflag]|10-147
62888|code|B               loc_F550|210-231
62890|code|ADD             R0, SP, #0x88+termios_p; termios_p|8-168
62892|code|MOV             R1, R6; speed|49-70
62894|code|BLX             cfsetospeed|250-247-68-234
62898|code|B               loc_F4A8|121-231
62900|data|DCD __stack_chk_guard|16-74-2-0
62904|data|DCD aSerialConnectS; "_serial_connect(%s): not a tty"|104-148-1-0
62908|data|DCD aDDCD; "%d,%d%c%d"|180-148-1-0
62912|data|DCD unk_193CC|204-147-1-0
62916|data|DCD aSErrorSettingB; "%s: error setting baud rate to %d"|248-148-1-0
62920|data|DCD aSerialConnectS_0; "_serial_connect(%s): open %s"|72-148-1-0
62924|data|DCD aSerialConnectS_1; "_serial_connect(%s): could not lock dev"...|136-148-1-0
62928|data|DCD aSerialConnect; "serial_connect"|188-147-1-0
62932|data|DCD aSErrorSettingD; "%s: error setting data bits to %d"|28-149-1-0
62936|data|DCD aSErrorSettingS; "%s: error setting stop bits to %d"|64-149-1-0
62940|data|DCD aSerialConnectS_3; "_serial_connect(%s): close"|168-149-1-0
62944|data|DCD aSerialConnectS_2; "_serial_connect(%s): opened"|196-149-1-0
62948|data|DCD aSErrorSettingP; "%s: error setting parity to %c"|100-149-1-0
62952|code|MOV             R0, R6|48-70
62954|code|LDR             R1, =aSErrorGettingS; "%s: error getting serial attributes"|18-73
62956|code|LDR             R2, [SP,#0x88+var_80]|2-154
62958|code|BL              err|3-240-129-250
62962|code|B               loc_F3C2|230-230
62964|code|BLX             __stack_chk_fail|250-247-240-233
62968|code|MOVS            R0, #1|1-32
62970|code|LDR             R1, =aSErrorSettingS_0; "%s: error setting serial attributes"|15-73
62972|code|LDR             R2, [SP,#0x88+var_80]|2-154
62974|code|BL              err|3-240-121-250
62978|code|B               loc_F3C2|222-230
62980|code|LDR             R0, =aDevFd1_0; "dev->fd == (-1)"|13-72
62982|code|MOVS            R2, #0xD0; line|208-34
62984|code|LDR             R1, =aDeviceSerialC; "device_serial.c"|13-73
62986|code|LDR             R3, =aSerialConnect; "serial_connect"|14-75
62988|code|BLX             __assert_fail|250-247-164-235
62992|code|LDR             R0, =aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|13-72
62994|code|MOVS            R2, #0xCF; line|207-34
62996|code|LDR             R1, =aDeviceSerialC; "device_serial.c"|10-73
62998|code|LDR             R3, =aSerialConnect; "serial_connect"|11-75
63000|code|BLX             __assert_fail|250-247-158-235
63004|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|11-72
63006|code|MOVS            R2, #0xCE; line|206-34
63008|code|LDR             R1, =aDeviceSerialC; "device_serial.c"|7-73
63010|code|LDR             R3, =aSerialConnect; "serial_connect"|8-75
63012|code|BLX             __assert_fail|250-247-152-235
63016|code|LDR             R0, =aN0N4; "n >= 0 && n <= 4"|9-72
63018|code|MOVS            R2, #0xF0; line|240-34
63020|code|LDR             R1, =aDeviceSerialC; "device_serial.c"|4-73
63022|code|LDR             R3, =aSerialConnect; "serial_connect"|5-75
63024|code|BLX             __assert_fail|250-247-146-235
63028|data|DCD aSErrorGettingS; "%s: error getting serial attributes"|212-148-1-0
63032|data|DCD aSErrorSettingS_0; "%s: error setting serial attributes"|132-149-1-0
63036|data|DCD aDevFd1_0; "dev->fd == (-1)"|120-146-1-0
63040|data|DCD aDeviceSerialC; "device_serial.c"|56-148-1-0
63044|data|DCD aSerialConnect; "serial_connect"|188-147-1-0
63048|data|DCD aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|232-143-1-0
63052|data|DCD aDevMagic0xbeef; "dev->magic == 0xbeefb111"|244-142-1-0
63056|data|DCD aN0N4; "n >= 0 && n <= 4"|192-148-1-0
63060|code|LDR             R3, [R0,#0xC]|195-104
63062|code|PUSH            {R4,LR}|16-181
63064|code|CMP             R3, #2|2-43
63066|code|MOV             R4, R0|4-70
63068|code|BNE             loc_F698|28-209
63070|code|LDR             R2, [R0,#4]|66-104
63072|code|MOVS            R0, #1|1-32
63074|code|LDR             R3, [R4,#0x18]|163-105
63076|code|LDR             R1, =aSerialDisconne; "_serial_disconnect: %s on fd %d"|16-73
63078|code|BL              sub_127FC|3-240-201-248
63082|code|LDR             R0, [R4,#0x18]; fd|160-105
63084|code|CMP             R0, #0|0-40
63086|code|BLT             loc_F67E|6-219
63088|code|BLX             close|250-247-96-235
63092|code|CMP             R0, #0|0-40
63094|code|BLT             loc_F68C|9-219
63096|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
63100|code|STR             R3, [R4,#0x18]|163-97
63102|code|LDR             R2, [R4,#4]|98-104
63104|code|MOVS            R0, #0|0-32
63106|code|LDR             R1, =aSerialDisconne_0; "_serial_disconnect(%s): closed"|10-73
63108|code|POP.W           {R4,LR}|189-232-16-64
63112|code|B.W             err|3-240-52-186
63116|code|LDR             R2, [R4,#4]|98-104
63118|code|MOVS            R0, #1|1-32
63120|code|LDR             R1, =aSerialDisconne_1; "_serial_disconnect(%s): close"|7-73
63122|code|BL              err|3-240-47-250
63126|code|B               loc_F678|239-231
63128|code|LDR             R0, =aDevConnectStat_1; "dev->connect_state == DEV_CONNECTED"|6-72
63130|code|MOV.W           R2, #0x10A; line|79-244-133-114
63134|code|LDR             R1, =aDeviceSerialC; "device_serial.c"|6-73
63136|code|LDR             R3, =aSerialDisconne_2; "serial_disconnect"|6-75
63138|code|BLX             __assert_fail|250-247-90-235
63142|data|ALIGN 4|0-191
63144|data|DCD aSerialDisconne; "_serial_disconnect: %s on fd %d"|224-149-1-0
63148|data|DCD aSerialDisconne_0; "_serial_disconnect(%s): closed"|32-150-1-0
63152|data|DCD aSerialDisconne_1; "_serial_disconnect(%s): close"|0-150-1-0
63156|data|DCD aDevConnectStat_1; "dev->connect_state == DEV_CONNECTED"|116-152-1-0
63160|data|DCD aDeviceSerialC; "device_serial.c"|56-148-1-0
63164|data|DCD aSerialDisconne_2; "serial_disconnect"|36-148-1-0
63168|code|PUSH            {R4-R6,LR}|112-181
63170|code|SUB             SP, SP, #0x10|132-176
63172|code|SUB.W           R3, R1, #0xEC|161-241-236-3
63176|code|LDR             R6, [R0,#4]|70-104
63178|code|STRB.W          R1, [SP,#0x20+var_13]|141-248-13-16
63182|code|MOVS            R1, #0xFF|255-33
63184|code|CMP             R3, #0x13|19-43
63186|code|STRB.W          R1, [SP,#0x20+var_14]|141-248-12-16
63190|code|STRB.W          R2, [SP,#0x20+var_12]|141-248-14-32
63194|code|MOV             R4, R0|4-70
63196|code|ITET LS|150-191
63198|code|LDRLS           R1, =off_2490C; "EOF"|16-73
63200|code|LDRHI           R3, =aUnknown; "<unknown>"|16-75
63202|code|LDRLS.W         R3, [R1,R3,LSL#2]|81-248-35-48
63206|code|CMP             R2, #0x27 ; '''|39-42
63208|code|ITET LS|150-191
63210|code|LDRLS           R1, =off_2490C; "EOF"|13-73
63212|code|LDRHI           R5, =aUnknown; "<unknown>"|13-77
63214|code|ADDLS.W         R2, R1, R2,LSL#2|1-235-130-2
63218|code|LDR             R1, =aSTelnetSendopt; "%s: _telnet_sendopt: %s %s"|13-73
63220|code|IT LS|152-191
63222|code|LDRLS           R5, [R2,#0x54]|85-109
63224|code|MOVS            R0, #0x20 ; ' '|32-32
63226|code|MOV             R2, R6|50-70
63228|code|STR             R5, [SP,#0x20+var_20]|0-149
63230|code|BL              sub_127FC|3-240-125-248
63234|code|MOVS            R2, #3|3-34
63236|code|MOVS            R3, #0|0-35
63238|code|LDR             R0, [R4,#0x28]; s2|160-106
63240|code|ADD             R1, SP, #0x20+var_14|3-169
63242|code|BL              sub_BA38|252-247-149-249
63246|code|CMP             R0, #2|2-40
63248|code|MOV             R2, R0|2-70
63250|code|BGT             loc_F71C|3-220
63252|code|LSRS            R0, R0, #0x1F|192-15
63254|code|LDR             R1, =aTelnetSendoptC; "_telnet_sendopt: cbuf_write returned %d"|5-73
63256|code|BL              err|3-240-236-249
63260|code|ADD             SP, SP, #0x10|4-176
63262|code|POP             {R4-R6,PC}|112-189
63264|data|DCD off_2490C; "EOF"|12-73-2-0
63268|data|DCD aUnknown; "<unknown>"|128-150-1-0
63272|data|DCD aSTelnetSendopt; "%s: _telnet_sendopt: %s %s"|140-150-1-0
63276|data|DCD aTelnetSendoptC; "_telnet_sendopt: cbuf_write returned %d"|168-150-1-0
63280|code|PUSH            {R4-R6,LR}|112-181
63282|code|MOVS            R5, #4|4-37
63284|code|SUB             SP, SP, #0x10|132-176
63286|code|MOVS            R1, #1; level|1-33
63288|code|MOV             R2, R5; optname|42-70
63290|code|ADD             R3, SP, #0x20+optval; optval|2-171
63292|code|MOV             R4, R0|4-70
63294|code|LDR             R0, [R0,#0x18]; fd|128-105
63296|code|MOVS            R6, #0|0-38
63298|code|STR             R5, [SP,#0x20+var_14]|3-149
63300|code|STR             R6, [SP,#0x20+optval]|2-150
63302|code|ADD             R5, SP, #0x20+var_14|3-173
63304|code|STR             R5, [SP,#0x20+optlen]; optlen|0-149
63306|code|BLX             getsockopt|250-247-142-233
63310|code|CMP             R0, R6|176-66
63312|code|IT GE|168-191
63314|code|LDRGE           R3, [SP,#0x20+optval]|2-155
63316|code|BLT             loc_F776|15-219
63318|code|MOVS            R0, #0|0-32
63320|code|CBNZ            R3, loc_F772|91-185
63322|code|LDR.W           R2, [R4,#0xD4]|212-248-212-32
63326|code|MOVS            R0, #1|1-32
63328|code|LDR.W           R1, [R4,#0xB8]|212-248-184-16
63332|code|MOVS            R5, #2|2-37
63334|code|STR             R5, [R4,#0xC]|229-96
63336|code|ADDS            R1, R1, R0|9-24
63338|code|STR.W           R1, [R4,#0xB8]|196-248-184-16
63342|code|STR             R3, [R2,#8]|147-96
63344|code|STRB            R3, [R2,#0xC]|19-115
63346|code|ADD             SP, SP, #0x10|4-176
63348|code|POP             {R4-R6,PC}|112-189
63350|code|BLX             __errno_location|250-247-22-234
63354|code|LDR             R3, [R0]|3-104
63356|code|B               loc_F756|235-231
63358|data|ALIGN 0x10|0-191
63360|code|LDR.W           R3, [R0,#0xD4]|208-248-212-48
63364|code|PUSH            {R4-R7,LR}|240-181
63366|code|MOV             R4, R0|4-70
63368|code|LDR             R3, [R3,#0x18]|155-105
63370|code|SUB             SP, SP, #0x14|133-176
63372|code|MOV             R5, R1|13-70
63374|code|CMP             R3, #0|0-43
63376|code|BEQ             loc_F7F4|48-208
63378|code|LDR             R0, [R1,#4]; domain|72-104
63380|code|MOVS            R2, #0; protocol|0-34
63382|code|LDR             R1, [R1,#8]; type|137-104
63384|code|BLX             socket|250-247-180-234
63388|code|CMP             R0, #0|0-40
63390|code|STR             R0, [R4,#0x18]|160-97
63392|code|BLT             loc_F7F0|38-219
63394|code|MOVS            R6, #1|1-38
63396|code|ADD             R3, SP, #0x28+var_18|4-171
63398|code|MOVS            R2, #2; optname|2-34
63400|code|MOVS            R7, #4|4-39
63402|code|STR.W           R6, [R3,#-4]!; optval|67-248-4-109
63406|code|MOV             R1, R6; level|49-70
63408|code|STR             R7, [SP,#0x28+optlen]; optlen|0-151
63410|code|BLX             setsockopt|250-247-176-232
63414|code|CMP             R0, #0|0-40
63416|code|LDR             R0, [R4,#0x18]|160-105
63418|code|BLT             loc_F7DE|16-219
63420|code|BL              sub_16DD8|7-240-12-251
63424|code|LDR             R0, [R4,#0x18]; fd|160-105
63426|code|LDR             R1, [R5,#0x14]; addr|105-105
63428|code|LDR             R2, [R5,#0x10]; len|42-105
63430|code|BLX             connect|250-247-194-234
63434|code|CMP             R0, #0|0-40
63436|code|BGE             loc_F7E6|11-218
63438|code|BLX             __errno_location|250-247-234-233
63442|code|LDR             R3, [R0]|3-104
63444|code|CMP             R3, #0x73 ; 's'|115-43
63446|code|IT EQ|8-191
63448|code|MOVEQ           R0, R6|48-70
63450|code|BEQ             loc_F7EC|7-208
63452|code|LDR             R0, [R4,#0x18]; fd|160-105
63454|code|BLX             close|250-247-170-234
63458|code|MOVS            R0, #0|0-32
63460|code|B               loc_F7EC|2-224
63462|code|MOV             R0, R4|32-70
63464|code|BL              sub_F730|255-247-162-255
63468|code|ADD             SP, SP, #0x14|5-176
63470|code|POP             {R4-R7,PC}|240-189
63472|code|MOVS            R0, #0|0-32
63474|code|B               loc_F7EC|251-231
63476|code|LDR             R0, =aTcpCurVoid0; "tcp->cur != ((void *)0)"|2-72
63478|code|MOVS            R2, #0xB6; line|182-34
63480|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|2-73
63482|code|LDR             R3, =aTcpConnectOne; "tcp_connect_one"|3-75
63484|code|BLX             __assert_fail|250-247-172-234
63488|data|DCD aTcpCurVoid0; "tcp->cur != ((void *)0)"|208-150-1-0
63492|data|DCD aDeviceTcpC; "device_tcp.c"|232-150-1-0
63496|data|DCD aTcpConnectOne; "tcp_connect_one"|64-150-1-0
63500|code|PUSH            {R4-R7,LR}|240-181
63502|code|MOV             R5, R0|5-70
63504|code|SUB             SP, SP, #0x2C|139-176
63506|code|MOVS            R0, #0x1C|28-32
63508|code|MOV             R6, R1|14-70
63510|code|MOV             R7, R2|23-70
63512|code|BL              sub_16730|6-240-138-255
63516|code|MOV             R4, R0|4-70
63518|code|MOV             R0, R5|40-70
63520|code|BL              sub_168F8|7-240-106-248
63524|code|MOV             R3, R0|3-70
63526|code|MOV             R0, R6|48-70
63528|code|STR             R3, [R4]|35-96
63530|code|BL              sub_168F8|7-240-101-248
63534|code|MOVS            R3, #0|0-35
63536|code|STR             R3, [R4,#8]|163-96
63538|code|STRB            R3, [R4,#0xC]|35-115
63540|code|STR             R3, [R4,#0x10]|35-97
63542|code|STR             R0, [R4,#4]|96-96
63544|code|CBZ             R7, loc_F888|55-179
63546|code|MOV             R0, R7|56-70
63548|code|BL              sub_168F8|7-240-92-248
63552|code|LDR             R1, =asc_196F8; delim|40-73
63554|code|MOV             R6, R0|6-70
63556|code|BLX             strtok|250-247-2-234
63560|code|MOV             R7, R0|7-70
63562|code|CBZ             R0, loc_F882|208-177
63564|code|MOVS            R5, #1|1-37
63566|code|B               loc_F85E|6-224
63568|code|STR             R5, [R4,#0x10]|37-97
63570|code|MOVS            R0, #0; s|0-32
63572|code|LDR             R1, =asc_196F8; delim|35-73
63574|code|BLX             strtok|250-247-250-233
63578|code|MOV             R7, R0|7-70
63580|code|CBZ             R0, loc_F882|136-177
63582|code|MOV             R0, R7; s1|56-70
63584|code|LDR             R1, =aQuiet; "quiet"|33-73
63586|code|BLX             strcmp|250-247-76-232
63590|code|CMP             R0, #0|0-40
63592|code|BEQ             loc_F850|242-208
63594|code|MOV             R2, R7|58-70
63596|code|MOVS            R0, #0|0-32
63598|code|LDR             R1, =aBadDeviceOptio; "bad device option: %s\n"|31-73
63600|code|BL              sub_12AC4|3-240-40-249
63604|code|MOVS            R0, #0; s|0-32
63606|code|LDR             R1, =asc_196F8; ","|27-73
63608|code|BLX             strtok|250-247-232-233
63612|code|MOV             R7, R0|7-70
63614|code|CMP             R0, #0|0-40
63616|code|BNE             loc_F85E|237-209
63618|code|MOV             R0, R6|48-70
63620|code|BL              sub_1687C|6-240-250-255
63624|code|MOVS            R5, #0|0-37
63626|code|ADD.W           R3, R4, #0x14; pai|4-241-20-3
63630|code|STR             R5, [SP,#0x40+req]|2-149
63632|code|ADD             R2, SP, #0x40+req; req|2-170
63634|code|STR             R5, [SP,#0x40+req.ai_family]|3-149
63636|code|MOVS            R6, #1|1-38
63638|code|STR             R5, [SP,#0x40+req.ai_protocol]|5-149
63640|code|STR             R5, [SP,#0x40+req.ai_addrlen]|6-149
63642|code|STR             R5, [SP,#0x40+req.ai_addr]|7-149
63644|code|STR             R5, [SP,#0x40+req.ai_canonname]|8-149
63646|code|STR             R5, [SP,#0x40+req.ai_next]|9-149
63648|code|LDM.W           R4, {R0,R1}; service|148-232-3-0
63652|code|STR             R6, [SP,#0x40+req.ai_socktype]|4-150
63654|code|BLX             getaddrinfo|250-247-40-234
63658|code|CBNZ            R0, loc_F8B8|40-185
63660|code|LDR             R0, [R4,#0x14]|96-105
63662|code|CBZ             R0, loc_F8D4|136-177
63664|code|STR             R0, [R4,#0x18]|160-97
63666|code|MOV             R0, R4|32-70
63668|code|ADD             SP, SP, #0x2C ; ','|11-176
63670|code|POP             {R4-R7,PC}|240-189
63672|code|LDR             R7, [R4]|39-104
63674|code|LDR             R6, [R4,#4]|102-104
63676|code|BLX             gai_strerror|250-247-92-232
63680|code|LDR             R1, =aGetaddrinfoSSS; "getaddrinfo %s:%s: %s"|11-73
63682|code|MOV             R2, R7|58-70
63684|code|MOV             R3, R6|51-70
63686|code|STR             R0, [SP,#0x40+var_40]|0-144
63688|code|MOV             R0, R5|40-70
63690|code|BL              sub_12AC4|3-240-251-248
63694|code|LDR             R0, [R4,#0x14]|96-105
63696|code|CMP             R0, #0|0-40
63698|code|BNE             loc_F8B0|237-209
63700|code|LDM.W           R4, {R2,R3}|148-232-12-0
63704|code|LDR             R1, =aNoAddressesFor; "no addresses for server %s:%s"|6-73
63706|code|BL              sub_12AC4|3-240-243-248
63710|code|LDR             R0, [R4,#0x14]|96-105
63712|code|B               loc_F8B0|230-231
63714|data|ALIGN 4|0-191
63716|data|DCD asc_196F8; ","|248-150-1-0
63720|data|DCD aQuiet; "quiet"|252-150-1-0
63724|data|DCD aBadDeviceOptio; "bad device option: %s\n"|4-151-1-0
63728|data|DCD aGetaddrinfoSSS; "getaddrinfo %s:%s: %s"|28-151-1-0
63732|data|DCD aNoAddressesFor; "no addresses for server %s:%s"|52-151-1-0
63736|code|PUSH            {R4,LR}|16-181
63738|code|MOV             R4, R0|4-70
63740|code|LDR             R0, [R0]|0-104
63742|code|CBZ             R0, loc_F904|8-177
63744|code|BL              sub_1687C|6-240-188-255
63748|code|LDR             R0, [R4,#4]|96-104
63750|code|CBZ             R0, loc_F90C|8-177
63752|code|BL              sub_1687C|6-240-184-255
63756|code|LDR             R0, [R4,#0x14]; ai|96-105
63758|code|CBZ             R0, loc_F914|8-177
63760|code|BLX             freeaddrinfo|250-247-236-233
63764|code|MOV             R0, R4|32-70
63766|code|POP.W           {R4,LR}|189-232-16-64
63770|code|B.W             sub_1687C|6-240-175-191
63774|data|ALIGN 0x10|0-191
63776|code|LDR             R2, [R0]|2-104
63778|code|PUSH            {R3-R5,LR}|56-181
63780|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
63788|code|MOV             R4, R0|4-70
63790|code|CMP             R2, R3|154-66
63792|code|BNE             loc_F9AE|61-209
63794|code|LDR             R3, [R0,#0xC]|195-104
63796|code|CMP             R3, #1|1-43
63798|code|BNE             loc_F9BA|64-209
63800|code|LDR.W           R5, [R4,#0xD4]|212-248-212-80
63804|code|BL              sub_F730|255-247-248-254
63808|code|CBZ             R0, loc_F960|112-177
63810|code|LDR             R3, [R4,#0xC]|227-104
63812|code|CMP             R3, #1|1-43
63814|code|BEQ             loc_F982|28-208
63816|code|BCC             loc_F96E|17-211
63818|code|CMP             R3, #2|2-43
63820|code|BEQ             loc_F994|34-208
63822|code|MOVS            R0, R3|24-28
63824|code|IT NE|24-191
63826|code|MOVNE           R0, #1|1-32
63828|code|POP             {R3-R5,PC}|56-189
63830|code|MOV             R0, R4|32-70
63832|code|BL              sub_F780|255-247-18-255
63836|code|CMP             R0, #0|0-40
63838|code|BNE             loc_F9A6|34-209
63840|code|LDR             R3, [R5,#0x18]|171-105
63842|code|LDR             R1, [R3,#0x1C]|217-105
63844|code|STR             R1, [R5,#0x18]|169-97
63846|code|CMP             R1, #0|0-41
63848|code|BNE             loc_F956|245-209
63850|code|MOVS            R3, #0|0-35
63852|code|STR             R3, [R4,#0xC]|227-96
63854|code|LDR             R2, [R4,#4]|98-104
63856|code|MOVS            R0, #0|0-32
63858|code|LDR             R1, =aTcpFinishConne; "tcp_finish_connect(%s): connection refu"...|21-73
63860|code|BL              err|3-240-190-248
63864|code|LDR             R3, [R4,#0xC]|227-104
63866|code|MOVS            R0, R3|24-28
63868|code|IT NE|24-191
63870|code|MOVNE           R0, #1|1-32
63872|code|POP             {R3-R5,PC}|56-189
63874|code|LDR             R0, [R5,#0x10]|40-105
63876|code|CMP             R0, #0|0-40
63878|code|BNE             loc_F94E|226-209
63880|code|LDR             R2, [R4,#4]|98-104
63882|code|LDR             R1, =unk_197CC|16-73
63884|code|BL              err|3-240-178-248
63888|code|LDR             R3, [R4,#0xC]|227-104
63890|code|B               loc_F94E|220-231
63892|code|LDR             R0, [R5,#0x10]|40-105
63894|code|CMP             R0, #0|0-40
63896|code|BNE             loc_F94E|217-209
63898|code|LDR             R2, [R4,#4]|98-104
63900|code|LDR             R1, =unk_197A8|12-73
63902|code|BL              err|3-240-169-248
63906|code|LDR             R3, [R4,#0xC]|227-104
63908|code|B               loc_F94E|211-231
63910|code|LDR             R3, [R5,#0x18]|171-105
63912|code|CMP             R3, #0|0-43
63914|code|BNE             loc_F942|202-209
63916|code|B               loc_F96A|221-231
63918|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|9-72
63920|code|MOVS            R2, #0xD3; line|211-34
63922|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|9-73
63924|code|LDR             R3, =aTcpFinishConne_0; "tcp_finish_connect"|9-75
63926|code|BLX             __assert_fail|250-247-208-233
63930|code|LDR             R0, =aDevConnectStat_2; "dev->connect_state == DEV_CONNECTING"|9-72
63932|code|MOVS            R2, #0xD4; line|212-34
63934|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|6-73
63936|code|LDR             R3, =aTcpFinishConne_0; "tcp_finish_connect"|6-75
63938|code|BLX             __assert_fail|250-247-202-233
63942|data|ALIGN 4|0-191
63944|data|DCD aTcpFinishConne; "tcp_finish_connect(%s): connection refu"...|124-151-1-0
63948|data|DCD unk_197CC|204-151-1-0
63952|data|DCD unk_197A8|168-151-1-0
63956|data|DCD aDevMagic0xbeef; "dev->magic == 0xbeefb111"|244-142-1-0
63960|data|DCD aDeviceTcpC; "device_tcp.c"|232-150-1-0
63964|data|DCD aTcpFinishConne_0; "tcp_finish_connect"|80-150-1-0
63968|data|DCD aDevConnectStat_2; "dev->connect_state == DEV_CONNECTING"|84-151-1-0
63972|code|LDR             R2, [R0]|2-104
63974|code|PUSH            {R3-R5,LR}|56-181
63976|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
63984|code|MOV             R4, R0|4-70
63986|code|CMP             R2, R3|154-66
63988|code|BNE             loc_FA8E|75-209
63990|code|LDR             R3, [R0,#0xC]|195-104
63992|code|CMP             R3, #0|0-43
63994|code|BNE             loc_FA82|66-209
63996|code|LDR             R3, [R0,#0x18]|131-105
63998|code|ADDS            R3, #1|1-51
64000|code|BNE             loc_FA76|57-209
64002|code|LDR.W           R5, [R0,#0xD4]|208-248-212-80
64006|code|MOVS            R3, #1|1-35
64008|code|STR             R3, [R0,#0xC]|195-96
64010|code|LDR             R1, [R5,#0x18]|169-105
64012|code|CBNZ            R1, loc_FA18|33-185
64014|code|B               loc_FA70|47-224
64016|code|LDR             R1, [R3,#0x1C]|217-105
64018|code|STR             R1, [R5,#0x18]|169-97
64020|code|CMP             R1, #0|0-41
64022|code|BEQ             loc_FA70|43-208
64024|code|MOV             R0, R4|32-70
64026|code|BL              sub_F780|255-247-177-254
64030|code|LDR             R3, [R5,#0x18]|171-105
64032|code|CMP             R0, #0|0-40
64034|code|BEQ             loc_FA10|245-208
64036|code|CMP             R3, #0|0-43
64038|code|BEQ             loc_FA70|35-208
64040|code|LDR             R3, [R4,#0xC]|227-104
64042|code|CMP             R3, #1|1-43
64044|code|BEQ             loc_FA5E|23-208
64046|code|BCS             loc_FA48|11-210
64048|code|LDR             R2, [R4,#4]|98-104
64050|code|MOVS            R0, #0|0-32
64052|code|LDR             R1, =aTcpConnectSCon; "tcp_connect(%s): connection refused"|25-73
64054|code|BL              err|3-240-93-248
64058|code|LDR             R3, [R4,#0xC]|227-104
64060|code|SUB.W           R3, R3, #2|163-241-2-3
64064|code|NEGS            R0, R3|88-66
64066|code|ADC.W           R0, R0, R3|64-235-3-0
64070|code|POP             {R3-R5,PC}|56-189
64072|code|CMP             R3, #2|2-43
64074|code|BNE             loc_FA3C|247-209
64076|code|LDR             R0, [R5,#0x10]|40-105
64078|code|CMP             R0, #0|0-40
64080|code|BNE             loc_FA3C|244-209
64082|code|LDR             R2, [R4,#4]|98-104
64084|code|LDR             R1, =aTcpConnectSCon_0; "tcp_connect(%s): connected"|18-73
64086|code|BL              err|3-240-77-248
64090|code|LDR             R3, [R4,#0xC]|227-104
64092|code|B               loc_FA3C|238-231
64094|code|LDR             R0, [R5,#0x10]|40-105
64096|code|CMP             R0, #0|0-40
64098|code|BNE             loc_FA3C|235-209
64100|code|LDR             R2, [R4,#4]|98-104
64102|code|LDR             R1, =aTcpConnectSCon_1; "tcp_connect(%s): connecting"|15-73
64104|code|BL              err|3-240-68-248
64108|code|LDR             R3, [R4,#0xC]|227-104
64110|code|B               loc_FA3C|229-231
64112|code|MOVS            R3, #0|0-35
64114|code|STR             R3, [R4,#0xC]|227-96
64116|code|B               loc_FA30|220-231
64118|code|LDR             R0, =aDevFd1_0; "dev->fd == (-1)"|12-72
64120|code|MOVS            R2, #0xFA; line|250-34
64122|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|12-73
64124|code|LDR             R3, =aTcpConnect; "tcp_connect"|12-75
64126|code|BLX             __assert_fail|250-247-108-233
64130|code|LDR             R0, =aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|12-72
64132|code|MOVS            R2, #0xF9; line|249-34
64134|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|9-73
64136|code|LDR             R3, =aTcpConnect; "tcp_connect"|9-75
64138|code|BLX             __assert_fail|250-247-102-233
64142|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|10-72
64144|code|MOVS            R2, #0xF8; line|248-34
64146|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|6-73
64148|code|LDR             R3, =aTcpConnect; "tcp_connect"|6-75
64150|code|BLX             __assert_fail|250-247-96-233
64154|data|ALIGN 4|0-191
64156|data|DCD aTcpConnectSCon; "tcp_connect(%s): connection refused"|240-151-1-0
64160|data|DCD aTcpConnectSCon_0; "tcp_connect(%s): connected"|20-152-1-0
64164|data|DCD aTcpConnectSCon_1; "tcp_connect(%s): connecting"|48-152-1-0
64168|data|DCD aDevFd1_0; "dev->fd == (-1)"|120-146-1-0
64172|data|DCD aDeviceTcpC; "device_tcp.c"|232-150-1-0
64176|data|DCD aTcpConnect; "tcp_connect"|100-150-1-0
64180|data|DCD aDevConnectStat; "dev->connect_state == DEV_NOT_CONNECTED"|232-143-1-0
64184|data|DCD aDevMagic0xbeef; "dev->magic == 0xbeefb111"|244-142-1-0
64188|code|LDR             R2, [R0]|2-104
64190|code|PUSH            {R3-R5,LR}|56-181
64192|code|MOV             R3, #0xBEEFB111|75-242-17-19-203-246-239-99
64200|code|MOV             R4, R0|4-70
64202|code|CMP             R2, R3|154-66
64204|code|BNE             loc_FB1A|37-209
64206|code|LDR             R3, [R0,#0xC]|195-104
64208|code|SUBS            R3, #1|1-59
64210|code|CMP             R3, #1|1-43
64212|code|BHI             loc_FB28|40-216
64214|code|LDR             R2, [R0,#4]|66-104
64216|code|MOVS            R0, #1|1-32
64218|code|LDR             R3, [R4,#0x18]|163-105
64220|code|LDR             R1, =aTcpDisconnectS; "tcp_disconnect: %s on fd %d"|22-73
64222|code|LDR.W           R5, [R4,#0xD4]|212-248-212-80
64226|code|BL              sub_127FC|2-240-139-254
64230|code|LDR             R0, [R4,#0x18]; fd|160-105
64232|code|CMP             R0, #0|0-40
64234|code|BLT             loc_FAFA|6-219
64236|code|BLX             close|250-247-34-233
64240|code|CMP             R0, #0|0-40
64242|code|BLT             loc_FB0C|11-219
64244|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
64248|code|STR             R3, [R4,#0x18]|163-97
64250|code|LDR             R0, [R5,#0x10]|40-105
64252|code|CBZ             R0, loc_FB00|0-177
64254|code|POP             {R3-R5,PC}|56-189
64256|code|LDR             R2, [R4,#4]|98-104
64258|code|LDR             R1, =aTcpDisconnectS_0; "tcp_disconnect(%s): disconnected"|14-73
64260|code|POP.W           {R3-R5,LR}|189-232-56-64
64264|code|B.W             err|2-240-244-191
64268|code|LDR             R2, [R4,#4]|98-104
64270|code|MOVS            R0, #1|1-32
64272|code|LDR             R3, [R4,#0x18]|163-105
64274|code|LDR             R1, =aTcpDisconnectS_1; "tcp_disconnect: %s close fd %d"|11-73
64276|code|BL              err|2-240-238-255
64280|code|B               loc_FAF4|236-231
64282|code|LDR             R0, =aDevMagic0xbeef; "dev->magic == 0xbeefb111"|10-72
64284|code|MOV.W           R2, #0x11C; line|79-244-142-114
64288|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|9-73
64290|code|LDR             R3, =aTcpDisconnect; "tcp_disconnect"|10-75
64292|code|BLX             __assert_fail|250-247-24-233
64296|code|LDR             R0, =unk_1984C; assertion|9-72
64298|code|MOV.W           R2, #0x11E; line|79-244-143-114
64302|code|LDR             R1, =aDeviceTcpC; "device_tcp.c"|6-73
64304|code|LDR             R3, =aTcpDisconnect; "tcp_disconnect"|6-75
64306|code|BLX             __assert_fail|250-247-18-233
64310|data|ALIGN 4|0-191
64312|data|DCD aTcpDisconnectS; "tcp_disconnect: %s on fd %d"|152-152-1-0
64316|data|DCD aTcpDisconnectS_0; "tcp_disconnect(%s): disconnected"|212-152-1-0
64320|data|DCD aTcpDisconnectS_1; "tcp_disconnect: %s close fd %d"|180-152-1-0
64324|data|DCD aDevMagic0xbeef; "dev->magic == 0xbeefb111"|244-142-1-0
64328|data|DCD aDeviceTcpC; "device_tcp.c"|232-150-1-0
64332|data|DCD aTcpDisconnect; "tcp_disconnect"|112-150-1-0
64336|data|DCD unk_1984C|76-152-1-0
64340|code|PUSH.W          {R4-R11,LR}|45-233-240-79
64344|code|MOV.W           R2, #0x10000|79-244-128-50
64348|code|MOV             R9, R0|129-70
64350|code|SUB             SP, SP, #0x14|133-176
64352|code|LDR             R1, =unk_34A4C|114-73
64354|code|LDR             R0, [R0,#0x2C]|192-106
64356|code|LDR.W           R5, [R9,#0xD4]|217-248-212-80
64360|code|BL              sub_B7CC|251-247-48-254
64364|code|CMP             R0, #0|0-40
64366|code|MOV             R7, R0|7-70
64368|code|BLE             loc_FC0C|76-221
64370|code|MOV.W           R8, #0|79-240-0-8
64374|code|LDR.W           R10, =unk_34A4C|223-248-180-161
64378|code|MOV             R4, R8|68-70
64380|code|B               loc_FB9A|13-224
64382|code|LDRB.W          R3, [R4,R10]|20-248-10-48
64386|code|CMP             R3, #0xFF|255-43
64388|code|BEQ.W           loc_FCE8|0-240-176-128
64392|code|LDR             R2, =unk_448D4|105-74
64394|code|ADD             R2, R8|66-68
64396|code|ADD.W           R8, R8, #1|8-241-1-8
64400|code|STRB.W          R3, [R2,#0x178]|130-248-120-49
64404|code|ADDS            R4, #1|1-52
64406|code|CMP             R4, R7|188-66
64408|code|BEQ             loc_FC08|54-208
64410|code|LDR             R3, [R5,#8]|171-104
64412|code|CMP             R3, #1|1-43
64414|code|BEQ             loc_FC12|56-208
64416|code|BCC             loc_FB7E|237-211
64418|code|CMP             R3, #2|2-43
64420|code|BNE             loc_FB94|246-209
64422|code|LDRB.W          R11, [R5,#0xC]|149-248-12-176
64426|code|LDRB.W          R6, [R4,R10]|20-248-10-96
64430|code|SUB.W           R12, R11, #0xEC|171-241-236-12
64434|code|LDR.W           R1, [R9,#0xD4]|217-248-212-16
64438|code|CMP.W           R12, #0x13|188-241-19-15
64442|code|LDR.W           R2, [R9,#4]|217-248-4-32
64446|code|ITTET LS|155-191
64448|code|MOVLSW          R0, #0x490C|68-246-12-16
64452|code|MOVTLS.W        R0, #2|192-242-2-0
64456|code|LDRHI           R3, =aUnknown; "<unknown>"|90-75
64458|code|LDRLS.W         R3, [R0,R12,LSL#2]|80-248-44-48
64462|code|CMP             R6, #0x27 ; '''|39-46
64464|code|STR             R1, [SP,#0x38+var_2C]|3-145
64466|code|ITTTE LS|157-191
64468|code|MOVLSW          R0, #0x490C|68-246-12-16
64472|code|MOVTLS.W        R0, #2|192-242-2-0
64476|code|ADDLS.W         R1, R0, R6,LSL#2|0-235-134-1
64480|code|LDRHI           R1, =aUnknown; "<unknown>"|84-73
64482|code|IT LS|152-191
64484|code|LDRLS           R1, [R1,#(aTcpCurVoid0+4 - 0x19680)]; ">cur != ((void *)0)"|73-109
64486|code|MOVS            R0, #0x20 ; ' '|32-32
64488|code|STR.W           R12, [SP,#0x38+var_30]|205-248-8-192
64492|code|STR             R1, [SP,#0x38+var_38]|0-145
64494|code|LDR             R1, =aSTelnetRecvopt; "%s: _telnet_recvopt: %s %s"|82-73
64496|code|BL              sub_127FC|2-240-4-254
64500|code|CMP.W           R11, #0xFD|187-241-253-15
64504|code|LDR.W           R12, [SP,#0x38+var_30]|221-248-8-192
64508|code|BEQ             loc_FC40|32-208
64510|code|ADDS            R4, #1|1-52
64512|code|MOVS            R3, #0|0-35
64514|code|CMP             R4, R7|188-66
64516|code|STR             R3, [R5,#8]|171-96
64518|code|BNE             loc_FB9A|200-209
64520|code|CMP             R4, R8|68-69
64522|code|BGT             loc_FCEE|112-220
64524|code|ADD             SP, SP, #0x14|5-176
64526|code|POP.W           {R4-R11,PC}|189-232-240-143
64530|code|LDRB.W          R3, [R4,R10]|20-248-10-48
64534|code|CMP             R3, #0xFB|251-43
64536|code|BCS             loc_FCC8|86-210
64538|code|SUBS            R3, #0xEC|236-59
64540|code|LDR.W           R2, [R9,#4]|217-248-4-32
64544|code|CMP             R3, #0x13|19-43
64546|code|LDR             R1, =aSTelnetRecvcmd; "%s: _telnet_recvcmd: %s"|70-73
64548|code|ITTET LS|155-191
64550|code|MOVLSW          R0, #0x490C|68-246-12-16
64554|code|MOVTLS.W        R0, #2|192-242-2-0
64558|code|LDRHI           R3, =aUnknown; "<unknown>"|65-75
64560|code|LDRLS.W         R3, [R0,R3,LSL#2]|80-248-35-48
64564|code|MOVS            R0, #0x20 ; ' '|32-32
64566|code|BL              sub_127FC|2-240-225-253
64570|code|MOVS            R3, #0|0-35
64572|code|STR             R3, [R5,#8]|171-96
64574|code|B               loc_FB94|169-231
64576|code|CMP             R6, #0x27; switch 40 cases|39-46
64578|code|BHI             def_FC44; jumptable 0000FC44 default case, cases 2,4,5,7-23,25-30,34,36-38|33-216
64580|code|TBB.W           [PC,R6]; switch jump|223-232-6-240
64584|data|DCB 0x1A; jump table for switch statement|26
64585|data|DCB 0x1A|26
64586|data|DCB 0x20|32
64587|data|DCB 0x14|20
64588|data|DCB 0x20|32
64589|data|DCB 0x20|32
64590|data|DCB 0x14|20
64591|data|DCB 0x20|32
64592|data|DCB 0x20|32
64593|data|DCB 0x20|32
64594|data|DCB 0x20|32
64595|data|DCB 0x20|32
64596|data|DCB 0x20|32
64597|data|DCB 0x20|32
64598|data|DCB 0x20|32
64599|data|DCB 0x20|32
64600|data|DCB 0x20|32
64601|data|DCB 0x20|32
64602|data|DCB 0x20|32
64603|data|DCB 0x20|32
64604|data|DCB 0x20|32
64605|data|DCB 0x20|32
64606|data|DCB 0x20|32
64607|data|DCB 0x20|32
64608|data|DCB 0x1A|26
64609|data|DCB 0x20|32
64610|data|DCB 0x20|32
64611|data|DCB 0x20|32
64612|data|DCB 0x20|32
64613|data|DCB 0x20|32
64614|data|DCB 0x20|32
64615|data|DCB 0x1A|26
64616|data|DCB 0x1A|26
64617|data|DCB 0x1A|26
64618|data|DCB 0x20|32
64619|data|DCB 0x1A|26
64620|data|DCB 0x20|32
64621|data|DCB 0x20|32
64622|data|DCB 0x20|32
64623|data|DCB 0x1A|26
64624|code|MOV             R0, R9; jumptable 0000FC44 cases 3,6|72-70
64626|code|MOVS            R1, #0xFB|251-33
64628|code|MOV             R2, R6|50-70
64630|code|BL              sub_F6C0|255-247-35-253
64634|code|B               loc_FBFE|192-231
64636|code|MOV             R0, R9; jumptable 0000FC44 cases 0,1,24,31-33,35,39|72-70
64638|code|MOVS            R1, #0xFC|252-33
64640|code|MOV             R2, R6|50-70
64642|code|BL              sub_F6C0|255-247-29-253
64646|code|B               loc_FBFE|186-231
64648|code|LDR             R2, [SP,#0x38+var_2C]; jumptable 0000FC44 default case, cases 2,4,5,7-23,25-30,34,36-38|3-154
64650|code|LDR             R3, [R2,#0x10]|19-105
64652|code|CMP             R3, #0|0-43
64654|code|BNE             loc_FBFE|182-209
64656|code|CMP.W           R12, #0x13|188-241-19-15
64660|code|LDR.W           R2, [R9,#4]|217-248-4-32
64664|code|ITTET LS|155-191
64666|code|MOVLSW          R0, #0x490C|68-246-12-16
64670|code|MOVTLS.W        R0, #2|192-242-2-0
64674|code|LDRHI           R3, =aUnknown; "<unknown>"|36-75
64676|code|LDRLS           R3, [R0,#(off_24950 - 0x2490C)]; "DO"|67-108
64678|code|CMP             R6, #0x27 ; '''|39-46
64680|code|ITTTE LS|157-191
64682|code|MOVLSW          R1, #0x490C|68-246-12-17
64686|code|MOVTLS.W        R1, #2|192-242-2-1
64690|code|ADDLS.W         R6, R1, R6,LSL#2|1-235-134-6
64694|code|LDRHI           R1, =aUnknown; "<unknown>"|31-73
64696|code|IT LS|152-191
64698|code|LDRLS           R1, [R6,#0x54]|113-109
64700|code|MOVS            R0, #0|0-32
64702|code|STR             R1, [SP,#0x38+var_38]|0-145
64704|code|LDR             R1, =aSTelnetRecvopt_0; "%s: _telnet_recvopt: ignoring %s %s"|31-73
64706|code|BL              err|2-240-23-255
64710|code|B               loc_FBFE|154-231
64712|code|CMP             R3, #0xFE|254-43
64714|code|BLS             loc_FCE0|9-217
64716|code|LDR             R3, =unk_448D4|24-75
64718|code|MOVS            R2, #0xFF|255-34
64720|code|ADD             R3, R8|67-68
64722|code|ADD.W           R8, R8, #1|8-241-1-8
64726|code|STRB.W          R2, [R3,#0x178]|131-248-120-33
64730|code|MOVS            R3, #0|0-35
64732|code|STR             R3, [R5,#8]|171-96
64734|code|B               loc_FB94|89-231
64736|code|STRB            R3, [R5,#0xC]|43-115
64738|code|MOVS            R3, #2|2-35
64740|code|STR             R3, [R5,#8]|171-96
64742|code|B               loc_FB94|85-231
64744|code|MOVS            R3, #1|1-35
64746|code|STR             R3, [R5,#8]|171-96
64748|code|B               loc_FB94|82-231
64750|code|LDR.W           R0, [R9,#0x2C]|217-248-44-0
64754|code|MOV             R1, R4|33-70
64756|code|BL              sub_B738|251-247-32-253
64760|code|CMP             R4, R0|132-66
64762|code|MOV             R2, R0|2-70
64764|code|BGT             loc_FD22|17-220
64766|code|MOV             R2, R8|66-70
64768|code|MOVS            R3, #0|0-35
64770|code|LDR.W           R0, [R9,#0x2C]; s2|217-248-44-0
64774|code|LDR             R1, =unk_44A4C|15-73
64776|code|BL              sub_BA38|251-247-150-254
64780|code|CMP             R0, R8|64-69
64782|code|MOV             R2, R0|2-70
64784|code|BGE.W           loc_FC0C|191-246-124-175
64788|code|LSRS            R0, R0, #0x1F|192-15
64790|code|LDR             R1, =aTelnetPreproce; "_telnet_preprocess: cbuf_write returned"...|12-73
64792|code|ADD             SP, SP, #0x14|5-176
64794|code|POP.W           {R4-R11,LR}|189-232-240-79
64798|code|B.W             err|2-240-233-190
64802|code|LSRS            R0, R0, #0x1F|192-15
64804|code|LDR             R1, =aTelnetPreproce_0; "_telnet_preprocess: cbuf_drop returned "...|9-73
64806|code|BL              err|2-240-229-254
64810|code|B               loc_FCFE|232-231
64812|data|DCD unk_34A4C|76-74-3-0
64816|data|DCD unk_448D4|212-72-4-0
64820|data|DCD aUnknown; "<unknown>"|128-150-1-0
64824|data|DCD aSTelnetRecvopt; "%s: _telnet_recvopt: %s %s"|16-153-1-0
64828|data|DCD aSTelnetRecvcmd; "%s: _telnet_recvcmd: %s"|248-152-1-0
64832|data|DCD aSTelnetRecvopt_0; "%s: _telnet_recvopt: ignoring %s %s"|44-153-1-0
64836|data|DCD unk_44A4C|76-74-4-0
64840|data|DCD aTelnetPreproce; "_telnet_preprocess: cbuf_write returned"...|124-153-1-0
64844|data|DCD aTelnetPreproce_0; "_telnet_preprocess: cbuf_drop returned "...|80-153-1-0
64848|code|PUSH            {R3,LR}|8-181
64850|code|CBZ             R0, loc_FD90|232-177
64852|code|MOV             R3, R0|3-70
64854|code|LDR             R1, =dword_54A4C|18-73
64856|code|MOVS            R2, #0|0-34
64858|code|STRB.W          R2, [R3],#1|3-248-1-43
64862|code|ADDS            R3, #1|1-51
64864|code|STRB            R2, [R0,#1]|66-112
64866|code|STRB.W          R2, [R3],#1|3-248-1-43
64870|code|STRB.W          R2, [R3],#1|3-248-1-43
64874|code|STRB.W          R2, [R3],#1|3-248-1-43
64878|code|STRB.W          R2, [R3],#1|3-248-1-43
64882|code|STRB.W          R2, [R3],#1|3-248-1-43
64886|code|STRB.W          R2, [R3],#1|3-248-1-43
64890|code|STRB.W          R2, [R3],#1|3-248-1-43
64894|code|STRB.W          R2, [R3],#1|3-248-1-43
64898|code|STRB.W          R2, [R3],#1|3-248-1-43
64902|code|STRB            R2, [R3]|26-112
64904|code|LDR             R3, [R1]|11-104
64906|code|STR             R0, [R1]|8-96
64908|code|STR             R3, [R0]|3-96
64910|code|POP             {R3,PC}|8-189
64912|code|LDR             R0, =aNodeVoid0; "node != ((void *)0)"|4-72
64914|code|MOVW            R2, #0x1AF; line|64-242-175-18
64918|code|LDR             R1, =aHashC; "hash.c"|4-73
64920|code|LDR             R3, =aHashNodeFree; "hash_node_free"|4-75
64922|code|BLX             __assert_fail|249-247-222-239
64926|data|ALIGN 0x10|0-191
64928|data|DCD dword_54A4C|76-74-5-0
64932|data|DCD aNodeVoid0; "node != ((void *)0)"|60-156-1-0
64936|data|DCD aHashC; "hash.c"|80-156-1-0
64940|data|DCD aHashNodeFree; "hash_node_free"|188-155-1-0
64944|code|PUSH.W          {R3-R9,LR}|45-233-248-67
64948|code|RSBS.W          R7, R1, #1|209-241-1-7
64952|code|MOV             R4, R1|12-70
64954|code|MOV             R6, R2|22-70
64956|code|IT CC|56-191
64958|code|MOVCC           R7, #0|0-39
64960|code|CMP             R2, #0|0-42
64962|code|IT EQ|8-191
64964|code|ORREQ.W         R7, R7, #1|71-240-1-7
64968|code|MOV             R5, R0|5-70
64970|code|MOV             R9, R3|153-70
64972|code|CBNZ            R7, loc_FE18|39-187
64974|code|MOVS            R0, #0x1C; size|28-32
64976|code|MOVW            R3, #0x4BD|64-242-189-67
64980|code|CMP             R5, #0|0-45
64982|code|IT LE|216-191
64984|code|MOVLE           R5, R3|29-70
64986|code|BLX             malloc|249-247-118-238
64990|code|MOV             R8, R0|128-70
64992|code|CBZ             R0, loc_FE2A|24-179
64994|code|MOV             R0, R5; nmemb|40-70
64996|code|MOVS            R1, #4; size|4-33
64998|code|BLX             calloc|249-247-114-237
65002|code|STR.W           R0, [R8,#8]|200-248-8-0
65006|code|CMP             R0, #0|0-40
65008|code|BEQ             loc_FE38|34-208
65010|code|MOVW            R3, #0xBEEF|75-246-239-99
65014|code|STR.W           R7, [R8]|200-248-0-112
65018|code|MOVT.W          R3, #0xDEAD|205-246-173-99
65022|code|STR.W           R5, [R8,#4]|200-248-4-80
65026|code|STR.W           R6, [R8,#0xC]|200-248-12-96
65030|code|MOV             R0, R8|64-70
65032|code|STR.W           R9, [R8,#0x10]|200-248-16-144
65036|code|STR.W           R4, [R8,#0x14]|200-248-20-64
65040|code|STR.W           R3, [R8,#0x18]|200-248-24-48
65044|code|POP.W           {R3-R9,PC}|189-232-248-131
65048|code|BLX             __errno_location|249-247-196-238
65052|code|MOV.W           R8, #0|79-240-0-8
65056|code|MOVS            R3, #0x16|22-35
65058|code|STR             R3, [R0]|3-96
65060|code|MOV             R0, R8|64-70
65062|code|POP.W           {R3-R9,PC}|189-232-248-131
65066|code|LDR             R0, =aHashC; "hash.c"|8-72
65068|code|MOVS            R1, #0x91|145-33
65070|code|LDR             R2, =aHashCreate; "hash_create"|8-74
65072|code|POP.W           {R3-R9,LR}|189-232-248-67
65076|code|B.W             sub_12B20|2-240-116-190
65080|code|MOV             R0, R8; ptr|64-70
65082|code|BLX             free|249-247-152-237
65086|code|LDR             R0, =aHashC; "hash.c"|3-72
65088|code|MOVS            R1, #0x95|149-33
65090|code|LDR             R2, =aHashCreate; "hash_create"|3-74
65092|code|POP.W           {R3-R9,LR}|189-232-248-67
65096|code|B.W             sub_12B20|2-240-106-190
65100|data|DCD aHashC; "hash.c"|80-156-1-0
65104|data|DCD aHashCreate; "hash_create"|88-156-1-0
65108|code|PUSH            {R3-R7,LR}|248-181
65110|code|MOV             R6, R0|6-70
65112|code|CMP             R0, #0|0-40
65114|code|BEQ             loc_FEB4|43-208
65116|code|LDR             R2, [R0,#0x18]|130-105
65118|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
65126|code|CMP             R2, R3|154-66
65128|code|BNE             loc_FEC0|42-209
65130|code|LDR             R3, [R0,#4]|67-104
65132|code|LDR             R0, [R0,#8]|128-104
65134|code|CMP             R3, #0|0-43
65136|code|BLE             loc_FE9C|20-221
65138|code|MOVS            R7, #0|0-39
65140|code|LDR.W           R4, [R0,R7,LSL#2]|80-248-39-64
65144|code|CBNZ            R4, loc_FE7E|12-185
65146|code|B               loc_FE96|12-224
65148|code|MOV             R4, R5|44-70
65150|code|LDR             R3, [R6,#0x10]|51-105
65152|code|LDR             R5, [R4]|37-104
65154|code|CBZ             R3, loc_FE88|11-177
65156|code|LDR             R0, [R4,#4]|96-104
65158|code|BLX             R3|152-71
65160|code|MOV             R0, R4|32-70
65162|code|BL              sub_FD50|255-247-97-255
65166|code|CMP             R5, #0|0-45
65168|code|BNE             loc_FE7C|244-209
65170|code|LDR             R3, [R6,#4]|115-104
65172|code|LDR             R0, [R6,#8]; ptr|176-104
65174|code|ADDS            R7, #1|1-55
65176|code|CMP             R3, R7|187-66
65178|code|BGT             loc_FE74|235-220
65180|code|MOV             R3, #0x21524110|68-242-16-19-194-242-82-19
65188|code|STR             R3, [R6,#0x18]|179-97
65190|code|BLX             free|249-247-98-237
65194|code|MOV             R0, R6|48-70
65196|code|POP.W           {R3-R7,LR}|189-232-248-64
65200|code|B.W             j_free|249-247-90-189
65204|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|5-72
65206|code|MOVS            R2, #0xA8; line|168-34
65208|code|LDR             R1, =aHashC; "hash.c"|5-73
65210|code|LDR             R3, =aHashDestroy; "hash_destroy"|6-75
65212|code|BLX             __assert_fail|249-247-76-239
65216|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|5-72
65218|code|MOVS            R2, #0xAA; line|170-34
65220|code|LDR             R1, =aHashC; "hash.c"|2-73
65222|code|LDR             R3, =aHashDestroy; "hash_destroy"|3-75
65224|code|BLX             __assert_fail|249-247-70-239
65228|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
65232|data|DCD aHashC; "hash.c"|80-156-1-0
65236|data|DCD aHashDestroy; "hash_destroy"|204-155-1-0
65240|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
65244|code|PUSH            {R3,LR}|8-181
65246|code|CBZ             R0, loc_FEFA|96-177
65248|code|LDR             R2, [R0,#0x18]|130-105
65250|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
65258|code|CMP             R2, R3|154-66
65260|code|BNE             loc_FF06|11-209
65262|code|LDR             R0, [R0]|0-104
65264|code|RSBS.W          R0, R0, #1|208-241-1-0
65268|code|IT CC|56-191
65270|code|MOVCC           R0, #0|0-32
65272|code|POP             {R3,PC}|8-189
65274|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|6-72
65276|code|MOVS            R2, #0xC1|193-34
65278|code|LDR             R1, =aHashC; "hash.c"|6-73
65280|code|LDR             R3, =aHashIsEmpty; "hash_is_empty"|6-75
65282|code|BLX             __assert_fail|249-247-42-239
65286|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
65288|code|MOVS            R2, #0xC3|195-34
65290|code|LDR             R1, =aHashC; "hash.c"|3-73
65292|code|LDR             R3, =aHashIsEmpty; "hash_is_empty"|3-75
65294|code|BLX             __assert_fail|249-247-36-239
65298|data|ALIGN 4|0-191
65300|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
65304|data|DCD aHashC; "hash.c"|80-156-1-0
65308|data|DCD aHashIsEmpty; "hash_is_empty"|220-155-1-0
65312|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
65316|code|PUSH            {R3,LR}|8-181
65318|code|CBZ             R0, loc_FF3A|64-177
65320|code|LDR             R2, [R0,#0x18]|130-105
65322|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
65330|code|CMP             R2, R3|154-66
65332|code|BNE             loc_FF46|7-209
65334|code|LDR             R0, [R0]|0-104
65336|code|POP             {R3,PC}|8-189
65338|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|6-72
65340|code|MOVS            R2, #0xCF|207-34
65342|code|LDR             R1, =aHashC; "hash.c"|6-73
65344|code|LDR             R3, =aHashCount; "hash_count"|6-75
65346|code|BLX             __assert_fail|249-247-10-239
65350|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
65352|code|MOVS            R2, #0xD1|209-34
65354|code|LDR             R1, =aHashC; "hash.c"|3-73
65356|code|LDR             R3, =aHashCount; "hash_count"|3-75
65358|code|BLX             __assert_fail|249-247-4-239
65362|data|ALIGN 4|0-191
65364|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
65368|data|DCD aHashC; "hash.c"|80-156-1-0
65372|data|DCD aHashCount; "hash_count"|236-155-1-0
65376|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
65380|code|PUSH            {R4-R6,LR}|112-181
65382|code|MOV             R5, R0|5-70
65384|code|MOV             R6, R1|14-70
65386|code|CMP             R0, #0|0-40
65388|code|BEQ             loc_FFC8|44-208
65390|code|CMP             R1, #0|0-41
65392|code|BEQ             loc_FFBA|35-208
65394|code|BLX             __errno_location|249-247-24-238
65398|code|MOVS            R3, #0|0-35
65400|code|STR             R3, [R0]|3-96
65402|code|MOVW            R3, #0xBEEF|75-246-239-99
65406|code|LDR             R2, [R5,#0x18]|170-105
65408|code|MOVT.W          R3, #0xDEAD|205-246-173-99
65412|code|CMP             R2, R3|154-66
65414|code|BNE             loc_FFD4|37-209
65416|code|LDR             R3, [R5,#0x14]|107-105
65418|code|MOV             R0, R6|48-70
65420|code|BLX             R3|152-71
65422|code|LDR             R1, [R5,#4]|105-104
65424|code|BL              sub_17234|7-240-80-249
65428|code|LDR             R3, [R5,#8]|171-104
65430|code|LDR.W           R4, [R3,R1,LSL#2]|83-248-33-64
65434|code|CBNZ            R4, loc_FFA2|20-185
65436|code|B               loc_FFB6|11-224
65438|code|LDR             R4, [R4]|36-104
65440|code|CBZ             R4, loc_FFB2|60-177
65442|code|LDR             R0, [R4,#8]|160-104
65444|code|MOV             R1, R6|49-70
65446|code|LDR             R3, [R5,#0xC]|235-104
65448|code|BLX             R3|152-71
65450|code|CMP             R0, #0|0-40
65452|code|BNE             loc_FF9E|247-209
65454|code|LDR             R0, [R4,#4]|96-104
65456|code|POP             {R4-R6,PC}|112-189
65458|code|MOV             R0, R4|32-70
65460|code|POP             {R4-R6,PC}|112-189
65462|code|MOV             R0, R4|32-70
65464|code|POP             {R4-R6,PC}|112-189
65466|code|BLX             __errno_location|249-247-244-237
65470|code|MOVS            R2, #0x16|22-34
65472|code|MOV             R3, R0|3-70
65474|code|MOV             R0, R6|48-70
65476|code|STR             R2, [R3]|26-96
65478|code|POP             {R4-R6,PC}|112-189
65480|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|5-72
65482|code|MOVS            R2, #0xDF; line|223-34
65484|code|LDR             R1, =aHashC; "hash.c"|5-73
65486|code|LDR             R3, =aHashFind; "hash_find"|6-75
65488|code|BLX             __assert_fail|249-247-194-238
65492|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|5-72
65494|code|MOVS            R2, #0xE6; line|230-34
65496|code|LDR             R1, =aHashC; "hash.c"|2-73
65498|code|LDR             R3, =aHashFind; "hash_find"|3-75
65500|code|BLX             __assert_fail|249-247-188-238
65504|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
65508|data|DCD aHashC; "hash.c"|80-156-1-0
65512|data|DCD aHashFind; "hash_find"|248-155-1-0
65516|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
65520|code|PUSH.W          {R4-R8,LR}|45-233-240-65
65524|code|MOV             R4, R0|4-70
65526|code|SUB             SP, SP, #8|130-176
65528|code|MOV             R5, R1|13-70
65530|code|MOV             R7, R2|23-70
65532|code|CMP             R0, #0|0-40
65534|code|BEQ             loc_100DA|108-208
65536|code|RSBS.W          R3, R1, #1|209-241-1-3
65540|code|IT CC|56-191
65542|code|MOVCC           R3, #0|0-35
65544|code|CMP             R2, #0|0-42
65546|code|IT EQ|8-191
65548|code|ORREQ.W         R3, R3, #1|67-240-1-3
65552|code|CMP             R3, #0|0-43
65554|code|BNE             loc_10086|56-209
65556|code|LDR             R2, [R0,#0x18]|130-105
65558|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
65566|code|CMP             R2, R3|154-66
65568|code|BNE             loc_100CE|85-209
65570|code|LDR             R3, [R0,#0x14]|67-105
65572|code|MOV             R0, R1|8-70
65574|code|BLX             R3|152-71
65576|code|LDR             R1, [R4,#4]|97-104
65578|code|BL              sub_17234|7-240-3-249
65582|code|LDR             R3, [R4,#8]|163-104
65584|code|LDR.W           R6, [R3,R1,LSL#2]|83-248-33-96
65588|code|MOV             R8, R1|136-70
65590|code|CBNZ            R6, loc_1003E|22-185
65592|code|B               loc_10060|18-224
65594|code|LDR             R6, [R6]|54-104
65596|code|CBZ             R6, loc_10060|134-177
65598|code|LDR             R0, [R6,#8]|176-104
65600|code|MOV             R1, R5|41-70
65602|code|LDR             R3, [R4,#0xC]|227-104
65604|code|BLX             R3|152-71
65606|code|CMP             R0, #0|0-40
65608|code|BNE             loc_1003A|247-209
65610|code|STR             R0, [SP,#0x20+var_1C]|1-144
65612|code|BLX             __errno_location|249-247-170-237
65616|code|LDR             R3, [SP,#0x20+var_1C]|1-155
65618|code|MOV             R7, R3|31-70
65620|code|MOVS            R3, #0x11|17-35
65622|code|STR             R3, [R0]|3-96
65624|code|MOV             R0, R7|56-70
65626|code|ADD             SP, SP, #8|2-176
65628|code|POP.W           {R4-R8,PC}|189-232-240-129
65632|code|LDR             R6, =dword_54A4C|33-78
65634|code|LDR             R0, [R6]|48-104
65636|code|CBZ             R0, loc_10092|168-177
65638|code|LDR             R3, [R4,#8]|163-104
65640|code|LDR.W           R12, [R0]|208-248-0-192
65644|code|STR             R5, [R0,#8]|133-96
65646|code|STR             R7, [R0,#4]|71-96
65648|code|LDR.W           R1, [R3,R8,LSL#2]|83-248-40-16
65652|code|LDR             R2, [R4]|34-104
65654|code|STR.W           R12, [R6]|198-248-0-192
65658|code|STR             R1, [R0]|1-96
65660|code|ADDS            R2, #1|1-50
65662|code|STR.W           R0, [R3,R8,LSL#2]|67-248-40-0
65666|code|STR             R2, [R4]|34-96
65668|code|B               loc_10058|232-231
65670|code|BLX             __errno_location|249-247-142-237
65674|code|MOVS            R7, #0|0-39
65676|code|MOVS            R3, #0x16|22-35
65678|code|STR             R3, [R0]|3-96
65680|code|B               loc_10058|226-231
65682|code|MOV.W           R0, #0xC00; size|79-244-64-96
65686|code|BLX             malloc|249-247-24-237
65690|code|STR             R0, [R6]|48-96
65692|code|CBZ             R0, loc_100B4|80-177
65694|code|ADD.W           R3, R0, #0xC|0-241-12-3
65698|code|MOVS            R2, #0xFF|255-34
65700|code|STR.W           R3, [R3,#-0xC]|67-248-12-60
65704|code|ADDS            R3, #0xC|12-51
65706|code|SUBS            R2, #1|1-58
65708|code|BNE             loc_100A4|250-209
65710|code|STR.W           R2, [R0,#0xBF4]|192-248-244-43
65714|code|B               loc_10066|216-231
65716|code|BLX             __errno_location|249-247-118-237
65720|code|MOVS            R3, #0xC|12-35
65722|code|MOVW            R1, #0x109|64-242-9-17
65726|code|LDR             R2, =aHashInsert; "hash_insert"|11-74
65728|code|STR             R3, [R0]|3-96
65730|code|LDR             R0, =aHashC; "hash.c"|11-72
65732|code|ADD             SP, SP, #8|2-176
65734|code|POP.W           {R4-R8,LR}|189-232-240-65
65738|code|B.W             sub_12B20|2-240-41-189
65742|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|9-72
65744|code|MOVS            R2, #0xFF; line|255-34
65746|code|LDR             R1, =aHashC; "hash.c"|7-73
65748|code|LDR             R3, =aHashInsert_0; "hash_insert"|8-75
65750|code|BLX             __assert_fail|249-247-64-238
65754|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|8-72
65756|code|MOVS            R2, #0xF9; line|249-34
65758|code|LDR             R1, =aHashC; "hash.c"|4-73
65760|code|LDR             R3, =aHashInsert_0; "hash_insert"|5-75
65762|code|BLX             __assert_fail|249-247-58-238
65766|data|ALIGN 4|0-191
65768|data|DCD dword_54A4C|76-74-5-0
65772|data|DCD aHashInsert; "hash_insert"|144-156-1-0
65776|data|DCD aHashC; "hash.c"|80-156-1-0
65780|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
65784|data|DCD aHashInsert_0; "hash_insert"|4-156-1-0
65788|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
65792|code|PUSH            {R3-R7,LR}|248-181
65794|code|MOV             R6, R0|6-70
65796|code|MOV             R7, R1|15-70
65798|code|CMP             R0, #0|0-40
65800|code|BEQ             loc_10180|58-208
65802|code|CMP             R1, #0|0-41
65804|code|BEQ             loc_10166|43-208
65806|code|BLX             __errno_location|249-247-74-237
65810|code|MOVS            R3, #0|0-35
65812|code|STR             R3, [R0]|3-96
65814|code|MOVW            R3, #0xBEEF|75-246-239-99
65818|code|LDR             R2, [R6,#0x18]|178-105
65820|code|MOVT.W          R3, #0xDEAD|205-246-173-99
65824|code|CMP             R2, R3|154-66
65826|code|BNE             loc_10172|38-209
65828|code|LDR             R3, [R6,#0x14]|115-105
65830|code|MOV             R0, R7|56-70
65832|code|BLX             R3|152-71
65834|code|LDR             R1, [R6,#4]|113-104
65836|code|BL              sub_17234|7-240-130-248
65840|code|LDR             R3, [R6,#8]|179-104
65842|code|LDR.W           R4, [R3,R1,LSL#2]|83-248-33-64
65846|code|ADD.W           R5, R3, R1,LSL#2|3-235-129-5
65850|code|CBNZ            R4, loc_10144|28-185
65852|code|B               loc_10162|17-224
65854|code|LDR             R5, [R5]|45-104
65856|code|LDR             R4, [R5]|44-104
65858|code|CBZ             R4, loc_10162|116-177
65860|code|LDR             R0, [R4,#8]|160-104
65862|code|MOV             R1, R7|57-70
65864|code|LDR             R3, [R6,#0xC]|243-104
65866|code|BLX             R3|152-71
65868|code|CMP             R0, #0|0-40
65870|code|BNE             loc_1013E|246-209
65872|code|LDR             R3, [R4]|35-104
65874|code|MOV             R0, R4|32-70
65876|code|LDR             R4, [R4,#4]|100-104
65878|code|STR             R3, [R5]|43-96
65880|code|BL              sub_FD50|255-247-250-253
65884|code|LDR             R3, [R6]|51-104
65886|code|SUBS            R3, #1|1-59
65888|code|STR             R3, [R6]|51-96
65890|code|MOV             R0, R4|32-70
65892|code|POP             {R3-R7,PC}|248-189
65894|code|BLX             __errno_location|249-247-30-237
65898|code|MOV             R4, R7|60-70
65900|code|MOVS            R3, #0x16|22-35
65902|code|STR             R3, [R0]|3-96
65904|code|B               loc_10162|247-231
65906|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|7-72
65908|code|MOVW            R2, #0x127|64-242-39-18
65912|code|LDR             R1, =aHashC; "hash.c"|6-73
65914|code|LDR             R3, =aHashRemove; "hash_remove"|7-75
65916|code|BLX             __assert_fail|249-247-236-237
65920|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|6-72
65922|code|MOV.W           R2, #0x120|79-244-144-114
65926|code|LDR             R1, =aHashC; "hash.c"|3-73
65928|code|LDR             R3, =aHashRemove; "hash_remove"|3-75
65930|code|BLX             __assert_fail|249-247-230-237
65934|data|ALIGN 0x10|0-191
65936|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
65940|data|DCD aHashC; "hash.c"|80-156-1-0
65944|data|DCD aHashRemove; "hash_remove"|16-156-1-0
65948|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
65952|code|PUSH.W          {R4-R10,LR}|45-233-240-71
65956|code|MOV             R4, R0|4-70
65958|code|MOV             R5, R1|13-70
65960|code|MOV             R9, R2|145-70
65962|code|CMP             R0, #0|0-40
65964|code|BEQ             loc_10226|59-208
65966|code|CMP             R1, #0|0-41
65968|code|BEQ             loc_10218|50-208
65970|code|LDR             R2, [R0,#0x18]|130-105
65972|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
65980|code|CMP             R2, R3|154-66
65982|code|BNE             loc_10234|57-209
65984|code|LDR             R3, [R0,#4]|67-104
65986|code|MOV.W           R8, #0|79-240-0-8
65990|code|CMP             R3, #0|0-43
65992|code|IT GT|200-191
65994|code|MOVGT           R10, R8|194-70
65996|code|BLE             loc_10212|33-221
65998|code|LDR             R7, [R4,#8]|167-104
66000|code|ADD.W           R7, R7, R10,LSL#2|7-235-138-7
66004|code|LDR             R6, [R7]|62-104
66006|code|CBZ             R6, loc_10208|190-177
66008|code|LDR             R0, [R6,#4]|112-104
66010|code|MOV             R1, R9|73-70
66012|code|BLX             R5|168-71
66014|code|CMP             R0, #0|0-40
66016|code|IT LE|216-191
66018|code|MOVLE           R7, R6|55-70
66020|code|BLE             loc_101D4|246-221
66022|code|LDR             R3, [R4,#0x10]|35-105
66024|code|CBZ             R3, loc_101EE|11-177
66026|code|LDR             R0, [R6,#4]|112-104
66028|code|BLX             R3|152-71
66030|code|LDR             R3, [R6]|51-104
66032|code|MOV             R0, R6|48-70
66034|code|ADD.W           R8, R8, #1|8-241-1-8
66038|code|STR             R3, [R7]|59-96
66040|code|BL              sub_FD50|255-247-170-253
66044|code|LDR             R3, [R4]|35-104
66046|code|LDR             R6, [R7]|62-104
66048|code|SUBS            R3, #1|1-59
66050|code|STR             R3, [R4]|35-96
66052|code|CMP             R6, #0|0-46
66054|code|BNE             loc_101D8|231-209
66056|code|LDR             R3, [R4,#4]|99-104
66058|code|ADD.W           R10, R10, #1|10-241-1-10
66062|code|CMP             R3, R10|83-69
66064|code|BGT             loc_101CE|221-220
66066|code|MOV             R0, R8|64-70
66068|code|POP.W           {R4-R10,PC}|189-232-240-135
66072|code|BLX             __errno_location|249-247-196-236
66076|code|MOV.W           R8, #0xFFFFFFFF|79-240-255-56
66080|code|MOVS            R3, #0x16|22-35
66082|code|STR             R3, [R0]|3-96
66084|code|B               loc_10212|245-231
66086|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|7-72
66088|code|MOVW            R2, #0x13F|64-242-63-18
66092|code|LDR             R1, =aHashC; "hash.c"|6-73
66094|code|LDR             R3, =aHashDeleteIf; "hash_delete_if"|7-75
66096|code|BLX             __assert_fail|249-247-146-237
66100|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
66102|code|MOVW            R2, #0x145|64-242-69-18
66106|code|LDR             R1, =aHashC; "hash.c"|3-73
66108|code|LDR             R3, =aHashDeleteIf; "hash_delete_if"|3-75
66110|code|BLX             __assert_fail|249-247-140-237
66114|data|ALIGN 4|0-191
66116|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
66120|data|DCD aHashC; "hash.c"|80-156-1-0
66124|data|DCD aHashDeleteIf; "hash_delete_if"|28-156-1-0
66128|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
66132|code|PUSH.W          {R3-R9,LR}|45-233-248-67
66136|code|MOV             R5, R0|5-70
66138|code|MOV             R4, R1|12-70
66140|code|MOV             R8, R2|144-70
66142|code|CMP             R0, #0|0-40
66144|code|BEQ             loc_102B6|41-208
66146|code|CBZ             R1, loc_102A8|9-179
66148|code|LDR             R2, [R0,#0x18]|130-105
66150|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
66158|code|CMP             R2, R3|154-66
66160|code|BNE             loc_102C4|40-209
66162|code|LDR             R3, [R0,#4]|67-104
66164|code|MOVS            R7, #0|0-39
66166|code|CMP             R3, #0|0-43
66168|code|IT GT|200-191
66170|code|MOVGT           R9, R7|185-70
66172|code|BLE             loc_102A2|17-221
66174|code|LDR             R2, [R5,#8]|170-104
66176|code|LDR.W           R6, [R2,R9,LSL#2]|82-248-41-96
66180|code|CBZ             R6, loc_1029A|78-177
66182|code|LDR             R0, [R6,#4]|112-104
66184|code|MOV             R1, R8|65-70
66186|code|BLX             R4|160-71
66188|code|LDR             R6, [R6]|54-104
66190|code|CMP             R0, #0|0-40
66192|code|IT GT|200-191
66194|code|ADDGT           R7, #1|1-55
66196|code|CMP             R6, #0|0-46
66198|code|BNE             loc_10286|246-209
66200|code|LDR             R3, [R5,#4]|107-104
66202|code|ADD.W           R9, R9, #1|9-241-1-9
66206|code|CMP             R3, R9|75-69
66208|code|BGT             loc_1027E|237-220
66210|code|MOV             R0, R7|56-70
66212|code|POP.W           {R3-R9,PC}|189-232-248-131
66216|code|BLX             __errno_location|249-247-124-236
66220|code|MOV.W           R7, #0xFFFFFFFF|79-240-255-55
66224|code|MOVS            R3, #0x16|22-35
66226|code|STR             R3, [R0]|3-96
66228|code|B               loc_102A2|245-231
66230|code|LDR             R0, =aHVoid0; "h != ((void *)0)"|7-72
66232|code|MOV.W           R2, #0x162|79-244-177-114
66236|code|LDR             R1, =aHashC; "hash.c"|6-73
66238|code|LDR             R3, =aHashForEach; "hash_for_each"|7-75
66240|code|BLX             __assert_fail|249-247-74-237
66244|code|LDR             R0, =aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|6-72
66246|code|MOV.W           R2, #0x168|79-244-180-114
66250|code|LDR             R1, =aHashC; "hash.c"|3-73
66252|code|LDR             R3, =aHashForEach; "hash_for_each"|3-75
66254|code|BLX             __assert_fail|249-247-68-237
66258|data|ALIGN 4|0-191
66260|data|DCD aHVoid0; "h != ((void *)0)"|100-156-1-0
66264|data|DCD aHashC; "hash.c"|80-156-1-0
66268|data|DCD aHashForEach; "hash_for_each"|44-156-1-0
66272|data|DCD aHMagic0xdeadbe; "h->magic == 0xDEADBEEF"|120-156-1-0
66276|code|LDRB            R3, [R0]|3-120
66278|code|CBZ             R3, loc_102FA|67-177
66280|code|MOV             R2, R0|2-70
66282|code|MOVS            R0, #0|0-32
66284|code|ADD.W           R0, R3, R0,LSL#5|3-235-64-16
66288|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
66292|code|CMP             R3, #0|0-43
66294|code|BNE             loc_102EC|249-209
66296|code|BX              LR|112-71
66298|code|MOV             R0, R3|24-70
66300|code|BX              LR|112-71
66302|data|ALIGN 0x10|0-191
66304|code|B.W             sub_1687C|6-240-188-186
66308|code|PUSH            {R3,LR}|8-181
66310|code|MOV             R3, #0x24A18|68-246-24-35-192-242-2-3
66318|code|MOV             R2, R0|2-70
66320|code|MOV             R1, #(aSSS+8); format|75-246-156-1-192-242-1-1
66328|code|LDR             R3, [R3]|27-104
66330|code|MOV             R0, R3; stream|24-70
66332|code|BLX             fprintf|249-247-42-236
66336|code|MOVS            R0, #2; status|2-32
66338|code|BLX             exit|249-247-10-236
66342|data|ALIGN 4|0-191
66344|code|MOV             R3, #0x54A50|68-246-80-35-192-242-5-3
66352|code|PUSH            {R4}|16-180
66354|code|MOVW            R1, #0x6BA8|70-246-168-49
66358|code|LDR             R0, [R3,#(dword_54A60 - 0x54A50)]|24-105
66360|code|MOVT.W          R1, #5|192-242-5-1
66364|code|LDR             R2, [R0,#8]|130-104
66366|code|LDR             R4, [R0]|4-104
66368|code|LDR             R0, [R0,#0x10]|0-105
66370|code|STR             R2, [R1]|10-96
66372|code|STR             R4, [R3,#(dword_54A68 - 0x54A50)]|156-97
66374|code|LDRB            R1, [R2]|17-120
66376|code|STR             R0, [R3,#(dword_54A64 - 0x54A50)]|88-97
66378|code|STR             R2, [R3,#(dword_54A54 - 0x54A50)]|90-96
66380|code|STRB            R1, [R3,#(byte_54A6C - 0x54A50)]|25-119
66382|code|POP             {R4}|16-188
66384|code|BX              LR|112-71
66386|data|ALIGN 4|0-191
66388|code|PUSH            {R3-R5,LR}|56-181
66390|code|LDR             R4, =dword_54A50|8-76
66392|code|LDR             R3, [R4,#(dword_54A60 - 0x54A50)]|35-105
66394|code|CMP             R3, R0|131-66
66396|code|BEQ             locret_10376|11-208
66398|code|CBZ             R3, loc_1036C|43-177
66400|code|LDR             R2, [R4,#(dword_54A54 - 0x54A50)]|98-104
66402|code|LDRB            R5, [R4,#(byte_54A6C - 0x54A50)]|37-127
66404|code|LDR             R1, [R4,#(dword_54A64 - 0x54A50)]|97-105
66406|code|STRB            R5, [R2]|21-112
66408|code|STR             R2, [R3,#8]|154-96
66410|code|STR             R1, [R3,#0x10]|25-97
66412|code|STR             R0, [R4,#(dword_54A60 - 0x54A50)]|32-97
66414|code|BL              sub_10328|255-247-219-255
66418|code|MOVS            R3, #1|1-35
66420|code|STR             R3, [R4,#(dword_54A70 - 0x54A50)]|35-98
66422|code|POP             {R3-R5,PC}|56-189
66424|data|DCD dword_54A50|80-74-5-0
66428|code|PUSH            {R4,LR}|16-181
66430|code|MOV             R4, R0|4-70
66432|code|CBZ             R0, locret_103A6|136-177
66434|code|LDR             R3, =dword_54A50|9-75
66436|code|LDR             R2, [R3,#(dword_54A60 - 0x54A50)]|26-105
66438|code|CMP             R0, R2|144-66
66440|code|BEQ             loc_103A0|10-208
66442|code|LDR             R3, [R4,#0x14]|99-105
66444|code|CBNZ            R3, loc_10398|35-185
66446|code|MOV             R0, R4|32-70
66448|code|POP.W           {R4,LR}|189-232-16-64
66452|code|B.W             j_free|249-247-232-186
66456|code|LDR             R0, [R4,#4]; ptr|96-104
66458|code|BLX             free|249-247-232-234
66462|code|B               loc_1038E|246-231
66464|code|MOVS            R2, #0|0-34
66466|code|STR             R2, [R3,#(dword_54A60 - 0x54A50)]|26-97
66468|code|B               loc_1038A|241-231
66470|code|POP             {R4,PC}|16-189
66472|data|DCD dword_54A50|80-74-5-0
66476|code|PUSH            {R4}|16-180
66478|code|CBZ             R0, loc_103CE|112-177
66480|code|LDR             R2, [R0,#4]|66-104
66482|code|MOVS            R3, #0|0-35
66484|code|STR             R3, [R0,#0x10]|3-97
66486|code|MOVS            R4, #1|1-36
66488|code|STRB            R3, [R2]|19-112
66490|code|LDR             R2, =dword_54A50|7-74
66492|code|LDR             R1, [R0,#4]|65-104
66494|code|LDR             R2, [R2,#(dword_54A60 - 0x54A50)]|18-105
66496|code|STRB            R3, [R1,#1]|75-112
66498|code|LDR             R1, [R0,#4]|65-104
66500|code|CMP             R0, R2|144-66
66502|code|STR             R4, [R0,#0x1C]|196-97
66504|code|STR             R3, [R0,#0x24]|67-98
66506|code|STR             R1, [R0,#8]|129-96
66508|code|BEQ             loc_103D2|1-208
66510|code|POP             {R4}|16-188
66512|code|BX              LR|112-71
66514|code|POP             {R4}|16-188
66516|code|B.W             sub_10328|255-247-168-191
66520|data|DCD dword_54A50|80-74-5-0
66524|code|PUSH            {R3-R5,LR}|56-181
66526|code|MOV             R4, R0|4-70
66528|code|MOV             R5, R1|13-70
66530|code|BL              sub_103AC|255-247-227-255
66534|code|MOVS            R3, #1|1-35
66536|code|STR             R5, [R4]|37-96
66538|code|STR             R3, [R4,#0x20]|35-98
66540|code|CBZ             R5, loc_10400|69-177
66542|code|MOV             R0, R5; stream|40-70
66544|code|BLX             fileno|249-247-26-236
66548|code|BLX             isatty|249-247-146-236
66552|code|CMP             R0, #0|0-40
66554|code|ITE LE|212-191
66556|code|MOVLE           R5, #0|0-37
66558|code|MOVGT           R5, #1|1-37
66560|code|STR             R5, [R4,#0x18]|165-97
66562|code|POP             {R3-R5,PC}|56-189
66564|code|PUSH            {R4-R6,LR}|112-181
66566|code|MOV             R5, R0|5-70
66568|code|MOVS            R0, #0x28 ; '('; size|40-32
66570|code|MOV             R6, R1|14-70
66572|code|BLX             malloc|249-247-92-235
66576|code|MOV             R4, R0|4-70
66578|code|CBZ             R0, loc_10430|104-177
66580|code|ADDS            R0, R6, #2; size|176-28
66582|code|STR             R6, [R4,#0xC]|230-96
66584|code|BLX             malloc|249-247-86-235
66588|code|STR             R0, [R4,#4]|96-96
66590|code|CBZ             R0, loc_10430|56-177
66592|code|MOV             R0, R4|32-70
66594|code|MOV             R1, R5|41-70
66596|code|MOVS            R3, #1|1-35
66598|code|STR             R3, [R4,#0x14]|99-97
66600|code|BL              sub_103DC|255-247-216-255
66604|code|MOV             R0, R4|32-70
66606|code|POP             {R4-R6,PC}|112-189
66608|code|LDR             R0, =aOutOfDynamicMe; "out of dynamic memory in yy_create_buff"...|1-72
66610|code|BL              sub_10304|255-247-103-255
66614|data|ALIGN 4|0-191
66616|data|DCD aOutOfDynamicMe; "out of dynamic memory in yy_create_buff"...|20-173-1-0
66620|code|PUSH            {R3-R5,LR}|56-181
66622|code|MOV             R5, R0|5-70
66624|code|LDR             R4, =dword_54A50|8-76
66626|code|LDR             R0, [R4,#(dword_54A60 - 0x54A50)]|32-105
66628|code|CBZ             R0, loc_10454|48-177
66630|code|MOV             R1, R5|41-70
66632|code|BL              sub_103DC|255-247-200-255
66636|code|POP.W           {R3-R5,LR}|189-232-56-64
66640|code|B.W             sub_10328|255-247-106-191
66644|code|LDR             R0, [R4,#(dword_54A68 - 0x54A50)]|160-105
66646|code|MOV.W           R1, #0x4000|79-244-128-65
66650|code|BL              sub_10404|255-247-211-255
66654|code|STR             R0, [R4,#(dword_54A60 - 0x54A50)]|32-97
66656|code|B               loc_10446|241-231
66658|data|ALIGN 4|0-191
66660|data|DCD dword_54A50|80-74-5-0
66664|code|LDR             R3, =dword_24A04|169-75
66666|code|PUSH.W          {R4-R11,LR}|45-233-240-79
66670|code|SUB             SP, SP, #0x1C|135-176
66672|code|LDR             R2, [R3]|26-104
66674|code|LDR.W           R8, =dword_54A50|223-248-160-130
66678|code|CBZ             R2, loc_104AC|202-177
66680|code|MOVS            R2, #0|0-34
66682|code|STR             R2, [R3]|26-96
66684|code|LDR.W           R3, [R8]|216-248-0-48
66688|code|CBNZ            R3, loc_10488|19-185
66690|code|MOVS            R3, #1|1-35
66692|code|STR.W           R3, [R8]|200-248-0-48
66696|code|LDR.W           R3, [R8,#(dword_54A68 - 0x54A50)]|216-248-24-48
66700|code|CMP             R3, #0|0-43
66702|code|BEQ.W           loc_10630|0-240-207-128
66706|code|LDR.W           R3, [R8,#(dword_54A74 - 0x54A50)]|216-248-36-48
66710|code|CMP             R3, #0|0-43
66712|code|BEQ.W           loc_10626|0-240-197-128
66716|code|LDR.W           R3, [R8,#(dword_54A60 - 0x54A50)]|216-248-16-48
66720|code|LDR             R4, =dword_54A50|156-76
66722|code|CMP             R3, #0|0-43
66724|code|BEQ.W           loc_1064E|0-240-211-128
66728|code|BL              sub_10328|255-247-62-255
66732|code|LDR             R4, =unk_19C9C|154-76
66734|code|MOVW            R6, #0x111|64-242-17-22
66738|code|LDR.W           R3, [R8]|216-248-0-48
66742|code|MOV             R10, R8|194-70
66744|code|MOV             R5, R4|37-70
66746|code|MOV             R11, R4|163-70
66748|code|LDR.W           R7, [R10,#4]|218-248-4-112
66752|code|LDRB.W          R0, [R10,#0x1C]|154-248-28-0
66756|code|STR             R7, [SP,#0x40+var_3C]|1-151
66758|code|STRB            R0, [R7]|56-112
66760|code|LSLS            R2, R3, #1|90-0
66762|code|LDR.W           R8, [R10,#8]|218-248-8-128
66766|code|ADDS            R1, R4, R2|161-24
66768|code|LDR.W           R12, [R10,#0xC]|218-248-12-192
66772|code|LDRSH.W         R1, [R1,#0x8E8]|177-249-232-24
66776|code|ADD.W           R9, R4, R2|4-235-2-9
66780|code|LDRB.W          R0, [R4,R0,LSL#2]|20-248-32-0
66784|code|LDRSH.W         R9, [R9,#0x400]|185-249-0-148
66788|code|CMP.W           R9, #0|185-241-0-15
66792|code|MOV             R9, R7|185-70
66794|code|IT NE|24-191
66796|code|MOVNE           R12, R7|188-70
66798|code|IT NE|24-191
66800|code|MOVNE           R8, R3|152-70
66802|code|B               loc_1050E|12-224
66804|code|ADDS            R2, R5, R2|170-24
66806|code|LDRSH.W         R3, [R2,#0x624]|178-249-36-54
66810|code|CMP             R3, R6|179-66
66812|code|ITT GT|196-191
66814|code|ADDGT.W         R0, R5, R0,LSL#2|5-235-128-0
66818|code|LDRBGT.W        R0, [R0,#0x854]|144-248-84-8
66822|code|LSLS            R2, R3, #1|90-0
66824|code|ADDS            R1, R4, R2|161-24
66826|code|LDRSH.W         R1, [R1,#0x8E8]|177-249-232-24
66830|code|ADDS            R1, R1, R0|9-24
66832|code|ADD.W           R1, R4, R1,LSL#1|4-235-65-1
66836|code|LDRSH.W         R7, [R1,#0xB18]|177-249-24-123
66840|code|CMP             R7, R3|159-66
66842|code|BNE             loc_104F4|235-209
66844|code|LDRSH.W         R3, [R1,#0xDC8]|177-249-200-61
66848|code|MOV             R7, R9|79-70
66850|code|ADDS            R7, #1|1-55
66852|code|LSLS            R2, R3, #1|90-0
66854|code|ADD.W           R0, R11, R2|11-235-2-0
66858|code|LDRSH.W         R1, [R0,#0x8E8]|176-249-232-24
66862|code|CMP.W           R1, #0x132|177-245-153-127
66866|code|BEQ             loc_10538|1-208
66868|code|LDRB            R0, [R7]|56-120
66870|code|B               loc_104D8|207-231
66872|code|STR.W           R8, [R10,#8]|202-248-8-128
66876|code|LDRH.W          R2, [R0,#0x400]|176-248-0-36
66880|code|LDR.W           R8, =dword_54A50|223-248-208-129
66884|code|STR.W           R12, [R10,#0xC]|202-248-12-192
66888|code|SXTH            R3, R2|19-178
66890|code|CBNZ            R3, loc_1055C|59-185
66892|code|LDR.W           R3, [R10,#8]|218-248-8-48
66896|code|LDR.W           R7, [R10,#0xC]|218-248-12-112
66900|code|ADD.W           R3, R4, R3,LSL#1|4-235-67-3
66904|code|LDRSH.W         R3, [R3,#0x400]|179-249-0-52
66908|code|LDR             R0, [SP,#0x40+var_3C]|1-152
66910|code|MOVW            R1, #0x6BA8|70-246-168-49
66914|code|MOVW            R12, #0x6BAC|70-246-172-60
66918|code|MOVT.W          R1, #5|192-242-5-1
66922|code|MOVT.W          R12, #5|192-242-5-12
66926|code|SUBS            R2, R7, R0|58-26
66928|code|STR             R0, [R1]|8-96
66930|code|MOVS            R1, #0|0-33
66932|code|STR.W           R2, [R12]|204-248-0-32
66936|code|LDRB            R2, [R7]|58-120
66938|code|STR.W           R7, [R10,#4]|202-248-4-112
66942|code|STRB            R1, [R7]|57-112
66944|code|STRB.W          R2, [R10,#0x1C]|138-248-28-32
66948|code|CMP             R3, #0x4B; switch 76 cases|75-43
66950|code|BHI.W           def_1058A; jumptable 0001058A default case|0-242-148-130
66954|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
66958|data|DCW 0x1DF; jump table for switch statement|223-1
66960|data|DCW 0x56|86-0
66962|data|DCW 0x289|137-2
66964|data|DCW 0x56|86-0
66966|data|DCW 0x17B|123-1
66968|data|DCW 0x178|120-1
66970|data|DCW 0x170|112-1
66972|data|DCW 0x14F|79-1
66974|data|DCW 0x145|69-1
66976|data|DCW 0x13B|59-1
66978|data|DCW 0x131|49-1
66980|data|DCW 0x127|39-1
66982|data|DCW 0xD5|213-0
66984|data|DCW 0xCB|203-0
66986|data|DCW 0xB7|183-0
66988|data|DCW 0xAD|173-0
66990|data|DCW 0xA8|168-0
66992|data|DCW 0x95|149-0
66994|data|DCW 0x86|134-0
66996|data|DCW 0x6F|111-0
66998|data|DCW 0x6C|108-0
67000|data|DCW 0x67|103-0
67002|data|DCW 0x194|148-1
67004|data|DCW 0x191|145-1
67006|data|DCW 0x18E|142-1
67008|data|DCW 0x18B|139-1
67010|data|DCW 0x188|136-1
67012|data|DCW 0x185|133-1
67014|data|DCW 0x28F|143-2
67016|data|DCW 0x28C|140-2
67018|data|DCW 0x225|37-2
67020|data|DCW 0x222|34-2
67022|data|DCW 0x21F|31-2
67024|data|DCW 0x21C|28-2
67026|data|DCW 0x219|25-2
67028|data|DCW 0x216|22-2
67030|data|DCW 0x213|19-2
67032|data|DCW 0x210|16-2
67034|data|DCW 0x11E|30-1
67036|data|DCW 0x11B|27-1
67038|data|DCW 0x118|24-1
67040|data|DCW 0x115|21-1
67042|data|DCW 0x112|18-1
67044|data|DCW 0x10F|15-1
67046|data|DCW 0x10C|12-1
67048|data|DCW 0x109|9-1
67050|data|DCW 0x106|6-1
67052|data|DCW 0x103|3-1
67054|data|DCW 0x100|0-1
67056|data|DCW 0xFD|253-0
67058|data|DCW 0xFA|250-0
67060|data|DCW 0xF7|247-0
67062|data|DCW 0xF4|244-0
67064|data|DCW 0xF1|241-0
67066|data|DCW 0xEE|238-0
67068|data|DCW 0xEB|235-0
67070|data|DCW 0xE8|232-0
67072|data|DCW 0xE5|229-0
67074|data|DCW 0xE2|226-0
67076|data|DCW 0xDF|223-0
67078|data|DCW 0x124|36-1
67080|data|DCW 0x121|33-1
67082|data|DCW 0x20D|13-2
67084|data|DCW 0x20A|10-2
67086|data|DCW 0x207|7-2
67088|data|DCW 0x204|4-2
67090|data|DCW 0x200|0-2
67092|data|DCW 0x289|137-2
67094|data|DCW 0x56|86-0
67096|data|DCW 0x22B|43-2
67098|data|DCW 0x228|40-2
67100|data|DCW 0x276|118-2
67102|data|DCW 0x197|151-1
67104|data|DCW 0x1EB|235-1
67106|data|DCW 0x1EB|235-1
67108|data|DCW 0x1EB|235-1
67110|code|LDR             R3, =stdout|61-75
67112|code|LDR             R2, [R3]|26-104
67114|code|LDR             R3, =dword_54A50|58-75
67116|code|STR             R2, [R3,#(dword_54A74 - 0x54A50)]|90-98
67118|code|B               loc_1049C|53-231
67120|code|LDR             R3, =stdin|59-75
67122|code|LDR             R2, [R3]|26-104
67124|code|LDR             R3, =dword_54A50|55-75
67126|code|STR             R2, [R3,#(dword_54A68 - 0x54A50)]|154-97
67128|code|B               loc_10492|43-231
67130|code|LDR.W           R2, [R10,#0x28]; jumptable 0001058A cases 1,3,68|218-248-40-32
67134|code|LDR.W           R3, [R10]|218-248-0-48
67138|code|ADD.W           R2, R10, R2,LSL#2|10-235-130-2
67142|code|LDR             R1, [R2,#0x2C]|209-106
67144|code|ADDS            R1, #1|1-49
67146|code|STR             R1, [R2,#0x2C]|209-98
67148|code|B               loc_104BC|54-231
67150|code|LDR             R0, [R4,#(dword_54A68 - 0x54A50)]|160-105
67152|code|MOV.W           R1, #0x4000|79-244-128-65
67156|code|BL              sub_10404|255-247-214-254
67160|code|STR             R0, [R4,#(dword_54A60 - 0x54A50)]|32-97
67162|code|B               loc_104A8|37-231
67164|code|MOVW            R0, #0x12D; jumptable 0001058A case 21|64-242-45-16
67168|code|ADD             SP, SP, #0x1C|7-176
67170|code|POP.W           {R4-R11,PC}|189-232-240-143
67174|code|MOV.W           R0, #0x12E; jumptable 0001058A case 20|79-244-151-112
67178|code|B               loc_10660|249-231
67180|code|MOV             R12, #0x56BA8; jumptable 0001058A case 19|70-246-168-60-192-242-5-12
67188|code|LDR.W           R1, [R12]|220-248-0-16
67192|code|LDRB            R3, [R1]|11-120
67194|code|CMP             R3, #0|0-43
67196|code|BEQ.W           loc_10AA0; jumptable 0001058A cases 2,67|0-240-16-130
67200|code|LDR.W           R2, [R10,#0x54]|218-248-84-32
67204|code|STRB.W          R3, [R2],#1|2-248-1-59
67208|code|LDRB.W          R3, [R1,#1]!|17-248-1-63
67212|code|CMP             R3, #0|0-43
67214|code|BNE             loc_10684|249-209
67216|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67220|code|LDR.W           R3, [R10]|218-248-0-48
67224|code|B               loc_104BC|16-231
67226|code|MOV             R3, #0x56BA8; jumptable 0001058A case 18|70-246-168-51-192-242-5-3
67234|code|LDR.W           R2, [R10,#0x54]|218-248-84-32
67238|code|LDR             R1, [R3]|25-104
67240|code|LDR.W           R3, [R10]|218-248-0-48
67244|code|LDRB            R1, [R1,#1]|73-120
67246|code|STRB.W          R1, [R2],#1|2-248-1-27
67250|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67254|code|B               loc_104BC|1-231
67256|code|MOV             R2, #0x56BA8; jumptable 0001058A case 17|70-246-168-50-192-242-5-2
67264|code|MOVS            R1, #0; endptr|0-33
67266|code|LDR.W           R7, [R10,#0x54]|218-248-84-112
67270|code|LDR             R0, [R2]|16-104
67272|code|MOVS            R2, #8; base|8-34
67274|code|ADDS            R0, #1; nptr|1-48
67276|code|BLX             strtol|249-247-28-233
67280|code|LDR.W           R3, [R10]|218-248-0-48
67284|code|STRB.W          R0, [R7],#1|7-248-1-11
67288|code|STR.W           R7, [R10,#0x54]|202-248-84-112
67292|code|B               loc_104BC|238-230
67294|code|BL              sub_116A4; jumptable 0001058A case 16|0-240-225-255
67298|code|LDR.W           R3, [R10]|218-248-0-48
67302|code|B               loc_104BC|233-230
67304|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 15|218-248-84-32
67308|code|MOVS            R1, #0xB|11-33
67310|code|LDR.W           R3, [R10]|218-248-0-48
67314|code|STRB.W          R1, [R2],#1|2-248-1-27
67318|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67322|code|B               loc_104BC|223-230
67324|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 14|218-248-84-32
67328|code|MOVS            R1, #9|9-33
67330|code|LDR.W           R3, [R10]|218-248-0-48
67334|code|STRB.W          R1, [R2],#1|2-248-1-27
67338|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67342|code|B               loc_104BC|213-230
67344|data|DCD dword_24A04|4-74-2-0
67348|data|DCD dword_54A50|80-74-5-0
67352|data|DCD unk_19C9C|156-156-1-0
67356|data|DCD stdout|36-74-2-0
67360|data|DCD stdin|32-74-2-0
67364|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 13|218-248-84-32
67368|code|MOVS            R1, #0xD|13-33
67370|code|LDR.W           R3, [R10]|218-248-0-48
67374|code|STRB.W          R1, [R2],#1|2-248-1-27
67378|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67382|code|B               loc_104BC|193-230
67384|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 12|218-248-84-32
67388|code|MOVS            R1, #0xA|10-33
67390|code|LDR.W           R3, [R10]|218-248-0-48
67394|code|STRB.W          R1, [R2],#1|2-248-1-27
67398|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67402|code|B               loc_104BC|183-230
67404|code|MOV.W           R0, #0x132; jumptable 0001058A case 59|79-244-153-112
67408|code|B               loc_10660|134-231
67410|code|MOVW            R0, #0x12B; jumptable 0001058A case 58|64-242-43-16
67414|code|B               loc_10660|131-231
67416|code|MOV.W           R0, #0x128; jumptable 0001058A case 57|79-244-148-112
67420|code|B               loc_10660|128-231
67422|code|MOV.W           R0, #0x12A; jumptable 0001058A case 56|79-244-149-112
67426|code|B               loc_10660|125-231
67428|code|MOVW            R0, #0x10B; jumptable 0001058A case 55|64-242-11-16
67432|code|B               loc_10660|122-231
67434|code|MOV.W           R0, #0x10A; jumptable 0001058A case 54|79-244-133-112
67438|code|B               loc_10660|119-231
67440|code|MOVW            R0, #0x109; jumptable 0001058A case 53|64-242-9-16
67444|code|B               loc_10660|116-231
67446|code|MOV.W           R0, #0x108; jumptable 0001058A case 52|79-244-132-112
67450|code|B               loc_10660|113-231
67452|code|MOVW            R0, #0x107; jumptable 0001058A case 51|64-242-7-16
67456|code|B               loc_10660|110-231
67458|code|MOV.W           R0, #0x106; jumptable 0001058A case 50|79-244-131-112
67462|code|B               loc_10660|107-231
67464|code|MOV.W           R0, #0x118; jumptable 0001058A case 49|79-244-140-112
67468|code|B               loc_10660|104-231
67470|code|MOVW            R0, #0x117; jumptable 0001058A case 48|64-242-23-16
67474|code|B               loc_10660|101-231
67476|code|MOV.W           R0, #0x116; jumptable 0001058A case 47|79-244-139-112
67480|code|B               loc_10660|98-231
67482|code|MOVW            R0, #0x115; jumptable 0001058A case 46|64-242-21-16
67486|code|B               loc_10660|95-231
67488|code|MOV.W           R0, #0x114; jumptable 0001058A case 45|79-244-138-112
67492|code|B               loc_10660|92-231
67494|code|MOVW            R0, #0x113; jumptable 0001058A case 44|64-242-19-16
67498|code|B               loc_10660|89-231
67500|code|MOV.W           R0, #0x112; jumptable 0001058A case 43|79-244-137-112
67504|code|B               loc_10660|86-231
67506|code|MOVW            R0, #0x111; jumptable 0001058A case 42|64-242-17-16
67510|code|B               loc_10660|83-231
67512|code|MOV.W           R0, #0x110; jumptable 0001058A case 41|79-244-136-112
67516|code|B               loc_10660|80-231
67518|code|MOVW            R0, #0x10F; jumptable 0001058A case 40|64-242-15-16
67522|code|B               loc_10660|77-231
67524|code|MOV.W           R0, #0x10E; jumptable 0001058A case 39|79-244-135-112
67528|code|B               loc_10660|74-231
67530|code|MOVW            R0, #0x10D; jumptable 0001058A case 38|64-242-13-16
67534|code|B               loc_10660|71-231
67536|code|MOV.W           R0, #0x134; jumptable 0001058A case 61|79-244-154-112
67540|code|B               loc_10660|68-231
67542|code|MOVW            R0, #0x133; jumptable 0001058A case 60|64-242-51-16
67546|code|B               loc_10660|65-231
67548|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 11|218-248-84-32
67552|code|MOVS            R1, #0xC|12-33
67554|code|LDR.W           R3, [R10]|218-248-0-48
67558|code|STRB.W          R1, [R2],#1|2-248-1-27
67562|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67566|code|B               loc_104BC|101-230
67568|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 10|218-248-84-32
67572|code|MOVS            R1, #0x1B|27-33
67574|code|LDR.W           R3, [R10]|218-248-0-48
67578|code|STRB.W          R1, [R2],#1|2-248-1-27
67582|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67586|code|B               loc_104BC|91-230
67588|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 9|218-248-84-32
67592|code|MOVS            R1, #8|8-33
67594|code|LDR.W           R3, [R10]|218-248-0-48
67598|code|STRB.W          R1, [R2],#1|2-248-1-27
67602|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67606|code|B               loc_104BC|81-230
67608|code|LDR.W           R2, [R10,#0x54]; jumptable 0001058A case 8|218-248-84-32
67612|code|MOVS            R1, #7|7-33
67614|code|LDR.W           R3, [R10]|218-248-0-48
67618|code|STRB.W          R1, [R2],#1|2-248-1-27
67622|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67626|code|B               loc_104BC|71-230
67628|code|LDR.W           R3, [R10,#0x54]; jumptable 0001058A case 7|218-248-84-48
67632|code|MOVS            R2, #1|1-34
67634|code|MOVS            R6, #0|0-38
67636|code|STR.W           R2, [R10]|202-248-0-32
67640|code|LDR             R0, =unk_54AA8; s|177-72
67642|code|MOV             R8, R10|208-70
67644|code|STRB            R6, [R3]|30-112
67646|code|BLX             strlen|249-247-136-233
67650|code|LDR             R5, =dword_56BB8|176-77
67652|code|MOV             R4, R0|4-70
67654|code|ADDS            R0, #1|1-48
67656|code|BL              sub_16730|5-240-114-255
67660|code|LDR             R3, =unk_55B48|174-75
67662|code|MOV             R1, R0|1-70
67664|code|STR             R0, [R5]|40-96
67666|code|LDR.W           R0, [R3,#(dword_56AA8 - 0x55B48)]|211-248-96-15
67670|code|BL              sub_156BC|4-240-49-255
67674|code|LDR             R0, [R5]; dest|40-104
67676|code|LDR             R1, =unk_54AA8; src|168-73
67678|code|MOV             R2, R4; n|34-70
67680|code|BLX             strncpy|249-247-208-233
67684|code|LDR             R3, [R5]|43-104
67686|code|MOV.W           R0, #0x130|79-244-152-112
67690|code|STRB            R6, [R3,R4]|30-85
67692|code|B               loc_10660|248-230
67694|code|MOVS            R2, #5; jumptable 0001058A case 6|5-34
67696|code|STR.W           R2, [R10]|202-248-0-32
67700|code|MOV             R3, R2|19-70
67702|code|LDR             R2, =unk_54AA8|162-74
67704|code|STR.W           R2, [R10,#0x54]|202-248-84-32
67708|code|B               loc_104BC|30-230
67710|code|MOVW            R0, #0x12F; jumptable 0001058A case 5|64-242-47-16
67714|code|B               loc_10660|237-230
67716|code|MOV             R1, #0x56BA8; jumptable 0001058A case 4|70-246-168-49-192-242-5-1
67724|code|LDR             R3, =dword_56BB8|157-75
67726|code|MOVW            R0, #0x131|64-242-49-16
67730|code|LDR             R2, [R1]|10-104
67732|code|STR             R2, [R3]|26-96
67734|code|B               loc_10660|227-230
67736|code|MOVW            R0, #0x11F; jumptable 0001058A case 27|64-242-31-16
67740|code|B               loc_10660|224-230
67742|code|MOVW            R0, #0x11B; jumptable 0001058A case 26|64-242-27-16
67746|code|B               loc_10660|221-230
67748|code|MOV.W           R0, #0x11A; jumptable 0001058A case 25|79-244-141-112
67752|code|B               loc_10660|218-230
67754|code|MOVW            R0, #0x119; jumptable 0001058A case 24|64-242-25-16
67758|code|B               loc_10660|215-230
67760|code|MOVW            R0, #0x127; jumptable 0001058A case 23|64-242-39-16
67764|code|B               loc_10660|212-230
67766|code|MOV.W           R0, #0x126; jumptable 0001058A case 22|79-244-147-112
67770|code|B               loc_10660|209-230
67772|code|LDRB.W          R3, [R10,#0x1C]; jumptable 0001058A case 72|154-248-28-48
67776|code|MOVW            R0, #0x6BA8|70-246-168-48
67780|code|LDR.W           R9, [R10,#0x10]|218-248-16-144
67784|code|MOVT.W          R0, #5|192-242-5-0
67788|code|LDR             R2, [R0]|2-104
67790|code|STRB            R3, [R7]|59-112
67792|code|LDR.W           R3, [R9,#0x24]|217-248-36-48
67796|code|SUBS            R2, R7, R2|186-26
67798|code|SUBS            R2, #1|1-58
67800|code|STR             R2, [SP,#0x40+var_34]|3-146
67802|code|CMP             R3, #0|0-43
67804|code|BEQ.W           loc_10BDE|0-240-127-129
67808|code|MOV             R1, #0x54A50|68-246-80-33-192-242-5-1
67816|code|LDR             R0, [R1,#(dword_54A64 - 0x54A50)]|72-105
67818|code|LDR.W           R12, [R9,#4]|217-248-4-192
67822|code|LDR.W           R3, [R10,#4]|218-248-4-48
67826|code|ADD.W           R1, R12, R0|12-235-0-1
67830|code|CMP             R1, R3|153-66
67832|code|BCS.W           loc_10C04|128-240-132-129
67836|code|ADDS            R0, #1|1-48
67838|code|STR             R0, [SP,#0x40+var_38]|2-144
67840|code|MOV             R0, #0x56BA8|70-246-168-48-192-242-5-0
67848|code|LDR             R2, [R0]|2-104
67850|code|LDR             R0, [SP,#0x40+var_38]|2-152
67852|code|ADD             R0, R12|96-68
67854|code|STR             R0, [SP,#0x40+var_38]|2-144
67856|code|CMP             R3, R0|131-66
67858|code|BHI.W           loc_10D12|0-242-254-129
67862|code|LDR.W           R0, [R9,#0x20]|217-248-32-0
67866|code|CMP             R0, #0|0-40
67868|code|BNE.W           loc_10AB8|64-240-204-128
67872|code|SUBS            R3, R3, R2|155-26
67874|code|CMP             R3, #1|1-43
67876|code|BEQ.W           loc_10CE8|0-240-224-129
67880|code|STR.W           R1, [R10,#4]|202-248-4-16
67884|code|STR             R1, [SP,#0x40+var_40]|0-145
67886|code|BL              sub_9EF0|249-247-223-250
67890|code|MOV             R2, #0x56BA8|70-246-168-50-192-242-5-2
67898|code|LDR             R1, [SP,#0x40+var_40]|0-153
67900|code|LDR             R2, [R2]|18-104
67902|code|MOV             R7, R1|15-70
67904|code|STR             R2, [SP,#0x40+var_3C]|1-146
67906|code|ADD.W           R3, R4, R0,LSL#1|4-235-64-3
67910|code|LDRH.W          R2, [R3,#0x400]|179-248-0-36
67914|code|B               loc_10548|253-229
67916|code|LDR.W           R3, [R10,#8]; jumptable 0001058A case 0|218-248-8-48
67920|code|LDRB.W          R2, [R10,#0x1C]|154-248-28-32
67924|code|ADD.W           R3, R4, R3,LSL#1|4-235-67-3
67928|code|STRB            R2, [R7]|58-112
67930|code|LDRH.W          R2, [R3,#0x400]|179-248-0-36
67934|code|LDR.W           R7, [R10,#0xC]|218-248-12-112
67938|code|B               loc_10548|241-229
67940|code|LDR.W           R0, [R10,#0x28]; jumptable 0001058A cases 73-75|218-248-40-0
67944|code|LDR             R7, =dword_54A50|104-79
67946|code|CMP             R0, #0|0-40
67948|code|BEQ.W           loc_10660|63-244-120-174
67952|code|LDR             R0, [R7,#(dword_54A60 - 0x54A50)]|56-105
67954|code|BL              sub_1037C|255-247-3-253
67958|code|LDR             R3, [R7,#(dword_54A78 - 0x54A50)]|187-106
67960|code|LDR             R2, =unk_55B48|99-74
67962|code|SUBS            R3, #1|1-59
67964|code|STR             R3, [R7,#(dword_54A78 - 0x54A50)]|187-98
67966|code|ADD.W           R3, R2, R3,LSL#2|2-235-131-3
67970|code|LDR.W           R0, [R3,#0xF64]|211-248-100-15
67974|code|BL              sub_10354|255-247-229-252
67978|code|LDR             R3, [R7]|59-104
67980|code|B               loc_104BC|150-229
67982|code|MOVS            R3, #3; jumptable 0001058A case 66|3-35
67984|code|STR.W           R3, [R10]|202-248-0-48
67988|code|B               loc_104BC|146-229
67990|code|MOV.W           R0, #0x12C; jumptable 0001058A case 65|79-244-150-112
67994|code|B               loc_10660|97-230
67996|code|MOVW            R0, #0x129; jumptable 0001058A case 64|64-242-41-16
68000|code|B               loc_10660|94-230
68002|code|MOVW            R0, #0x137; jumptable 0001058A case 63|64-242-55-16
68006|code|B               loc_10660|91-230
68008|code|MOVW            R0, #0x135; jumptable 0001058A case 62|64-242-53-16
68012|code|B               loc_10660|88-230
68014|code|MOV.W           R0, #0x10C; jumptable 0001058A case 37|79-244-134-112
68018|code|B               loc_10660|85-230
68020|code|MOVW            R0, #0x105; jumptable 0001058A case 36|64-242-5-16
68024|code|B               loc_10660|82-230
68026|code|MOV.W           R0, #0x104; jumptable 0001058A case 35|79-244-130-112
68030|code|B               loc_10660|79-230
68032|code|MOVW            R0, #0x103; jumptable 0001058A case 34|64-242-3-16
68036|code|B               loc_10660|76-230
68038|code|MOV.W           R0, #0x102; jumptable 0001058A case 33|79-244-129-112
68042|code|B               loc_10660|73-230
68044|code|MOVW            R0, #0x11D; jumptable 0001058A case 32|64-242-29-16
68048|code|B               loc_10660|70-230
68050|code|MOV.W           R0, #0x11C; jumptable 0001058A case 31|79-244-142-112
68054|code|B               loc_10660|67-230
68056|code|MOVW            R0, #0x121; jumptable 0001058A case 30|64-242-33-16
68060|code|B               loc_10660|64-230
68062|code|MOV.W           R0, #0x136; jumptable 0001058A case 70|79-244-155-112
68066|code|B               loc_10660|61-230
68068|code|MOV             LR, #0x56BA8; jumptable 0001058A case 69|70-246-168-62-192-242-5-14
68076|code|LDR.W           R7, [LR]|222-248-0-112
68080|code|MOV             R0, R7; s|56-70
68082|code|BLX             strlen|249-247-174-232
68086|code|LDR.W           R3, [R10,#0x28]|218-248-40-48
68090|code|ADDS            R7, R7, R0|63-24
68092|code|MOVS            R0, #0|0-32
68094|code|CMP             R3, #8|8-43
68096|code|STRB.W          R0, [R7,#-1]|7-248-1-12
68100|code|BLE             loc_10A10|4-221
68102|code|LDR             R1, =aIncludesNested; "Includes nested too deeply"|66-73
68104|code|BL              sub_12AC4|2-240-92-248
68108|code|LDR             R3, =dword_54A50|63-75
68110|code|LDR             R3, [R3,#(dword_54A78 - 0x54A50)]|155-106
68112|code|MOVW            R1, #0x6BA8|70-246-168-49
68116|code|LDR             R7, =unk_55B48|60-79
68118|code|MOVT.W          R1, #5|192-242-5-1
68122|code|LDR.W           R2, [R10,#0x10]|218-248-16-32
68126|code|ADD.W           LR, R3, #1|3-241-1-14
68130|code|ADD.W           R3, R7, R3,LSL#2|7-235-131-3
68134|code|LDR             R0, [R1]|8-104
68136|code|STR.W           LR, [R10,#0x28]|202-248-40-224
68140|code|ADDS            R0, #1; filename|1-48
68142|code|LDR             R1, =(aClientReadErro+0x10); modes|57-73
68144|code|STR.W           R2, [R3,#0xF64]|195-248-100-47
68148|code|BLX             fopen|248-247-122-239
68152|code|STR.W           R0, [R10,#0x18]|202-248-24-0
68156|code|CMP             R0, #0|0-40
68158|code|BEQ.W           loc_10D02|0-240-96-129
68162|code|MOV             R2, #0x56BA8|70-246-168-50-192-242-5-2
68170|code|LDR.W           R8, [R10,#0x28]|218-248-40-128
68174|code|LDR             R0, [R2]|16-104
68176|code|ADDS            R0, #1|1-48
68178|code|ADD.W           R7, R7, R8,LSL#2|7-235-136-7
68182|code|BL              sub_168F8|5-240-79-255
68186|code|LDR.W           R3, [R10,#0x18]|218-248-24-48
68190|code|MOV.W           R1, #0x4000|79-244-128-65
68194|code|STR.W           R0, [R7,#0xF8C]|199-248-140-15
68198|code|MOV             R0, R3|24-70
68200|code|BL              sub_10404|255-247-204-252
68204|code|BL              sub_10354|255-247-114-252
68208|code|MOVS            R2, #1|1-34
68210|code|STR.W           R2, [R10]|202-248-0-32
68214|code|MOV             R3, R2|19-70
68216|code|B               loc_104BC|32-229
68218|code|MOVW            R3, #0x6BA8; jumptable 0001058A case 71|70-246-168-51
68222|code|MOVW            R12, #0x6BAC|70-246-172-60
68226|code|MOVT.W          R3, #5|192-242-5-3
68230|code|MOVT.W          R12, #5|192-242-5-12
68234|code|MOVS            R2, #1; n|1-34
68236|code|LDR             R0, [R3]; ptr|24-104
68238|code|LDR.W           R1, [R12]; size|220-248-0-16
68242|code|LDR.W           R3, [R10,#0x24]; s|218-248-36-48
68246|code|BLX             fwrite|248-247-220-239
68250|code|LDR.W           R3, [R10]|218-248-0-48
68254|code|B               loc_104BC|13-229
68256|code|LDR.W           R3, [R10]; jumptable 0001058A cases 2,67|218-248-0-48
68260|code|B               loc_104BC|10-229
68262|code|MOV.W           R0, #0x120; jumptable 0001058A case 29|79-244-144-112
68266|code|B               loc_10660|217-229
68268|code|MOV.W           R0, #0x11E; jumptable 0001058A case 28|79-244-143-112
68272|code|B               loc_10660|214-229
68274|code|LDR             R0, =aFatalFlexScann; jumptable 0001058A default case|25-72
68276|code|BL              sub_10304|255-247-38-252
68280|code|SUBS            R1, R3, R2|153-26
68282|code|STR             R1, [SP,#0x40+var_30]|4-145
68284|code|SUBS            R0, R1, #1|72-30
68286|code|STR             R0, [SP,#0x40+var_38]|2-144
68288|code|CMP             R0, #0|0-40
68290|code|BLE             loc_10AD4|7-221
68292|code|MOVS            R0, #0|0-32
68294|code|LDRB            R1, [R2,R0]|17-92
68296|code|STRB.W          R1, [R12,R0]|12-248-0-16
68300|code|ADDS            R0, #1|1-48
68302|code|LDR             R1, [SP,#0x40+var_38]|2-153
68304|code|CMP             R1, R0|129-66
68306|code|BGT             loc_10AC6|248-220
68308|code|LDR.W           R2, [R9,#0x24]|217-248-36-32
68312|code|CMP             R2, #2|2-42
68314|code|BEQ.W           loc_10C4C|0-240-183-128
68318|code|LDR.W           R0, [R9,#0xC]|217-248-12-0
68322|code|LDR             R2, [SP,#0x40+var_38]|2-154
68324|code|ADD.W           R12, R0, #0xFFFFFFFF|0-241-255-60
68328|code|RSB.W           R12, R2, R12|194-235-12-12
68332|code|CMP.W           R12, #0|188-241-0-15
68336|code|BGT             loc_10B74|64-220
68338|code|LDR.W           R2, [R9,#4]|217-248-4-32
68342|code|STR             R7, [SP,#0x40+var_2C]|5-151
68344|code|MOV             R7, R3|31-70
68346|code|MOV             R3, R10|83-70
68348|code|MOV             R10, R2|146-70
68350|code|B               loc_10B5E|46-224
68352|data|DCD unk_54AA8|168-74-5-0
68356|data|DCD dword_56BB8|184-107-5-0
68360|data|DCD unk_55B48|72-91-5-0
68364|data|DCD dword_54A50|80-74-5-0
68368|data|DCD aIncludesNested; "Includes nested too deeply"|64-173-1-0
68372|data|DCD aClientReadErro+0x10; "r"|68-138-1-0
68376|data|DCD aFatalFlexScann; "fatal flex scanner internal error--no a"...|224-173-1-0
68380|code|LSLS            R1, R0, #1|65-0
68382|code|CMP             R1, #0|0-41
68384|code|IT LE|216-191
68386|code|ADDLE.W         R1, R0, R0,LSR#3|0-235-208-1
68390|code|MOV             R0, R10; ptr|80-70
68392|code|STR.W           R1, [R9,#0xC]|201-248-12-16
68396|code|ADDS            R1, #2; size|2-49
68398|code|STR             R3, [SP,#0x40+var_40]|0-147
68400|code|BLX             realloc|248-247-94-239
68404|code|LDR             R3, [SP,#0x40+var_40]|0-155
68406|code|MOV             R1, R0|1-70
68408|code|STR.W           R0, [R9,#4]|201-248-4-0
68412|code|CBZ             R0, loc_10B6A|168-177
68414|code|LDR.W           R0, [R9,#0xC]|217-248-12-0
68418|code|RSB.W           R7, R10, R7|202-235-7-7
68422|code|LDR.W           LR, [SP,#0x40+var_38]|221-248-8-224
68426|code|ADDS            R7, R1, R7|207-25
68428|code|ADD.W           R12, R0, #0xFFFFFFFF|0-241-255-60
68432|code|STR             R7, [R3,#4]|95-96
68434|code|RSB.W           R12, LR, R12|206-235-12-12
68438|code|CMP.W           R12, #0|188-241-0-15
68442|code|BGT             loc_10B70|9-220
68444|code|MOV             R10, R1|138-70
68446|code|LDR.W           R1, [R9,#0x14]|217-248-20-16
68450|code|CMP             R1, #0|0-41
68452|code|BNE             loc_10B1C|218-209
68454|code|STR.W           R1, [R9,#4]|201-248-4-16
68458|code|LDR             R0, =aFatalErrorScan; "fatal error - scanner input buffer over"...|147-72
68460|code|BL              sub_10304|255-247-202-251
68464|code|LDR             R7, [SP,#0x40+var_2C]|5-159
68466|code|MOV             R10, R3|154-70
68468|code|LDR.W           R3, [R9,#0x18]|217-248-24-48
68472|code|CMP.W           R12, #0x2000|188-245-0-95
68476|code|IT GE|168-191
68478|code|MOVGE.W         R12, #0x2000|79-244-0-92
68482|code|CMP             R3, #0|0-43
68484|code|BEQ.W           loc_10D42|0-240-221-128
68488|code|MOV             R2, R7|58-70
68490|code|MOV.W           R9, #0|79-240-0-9
68494|code|MOV             R7, R12|103-70
68496|code|B               loc_10BB8|18-224
68498|code|CMP             R0, #0xA|10-40
68500|code|BEQ.W           loc_10CD0|0-240-156-128
68504|code|MOV             R1, #0x54A50|68-246-80-33-192-242-5-1
68512|code|LDR.W           R12, [SP,#0x40+var_30]|221-248-16-192
68516|code|LDR             R3, [R1,#(dword_54A60 - 0x54A50)]|11-105
68518|code|LDR             R1, [R3,#4]|89-104
68520|code|ADD             R1, R12|97-68
68522|code|ADD             R1, R9|73-68
68524|code|ADD.W           R9, R9, #1|9-241-1-9
68528|code|CMP             R9, R7|185-69
68530|code|STRB.W          R0, [R1,#-1]|1-248-1-12
68534|code|BGE             loc_10CB8|127-218
68536|code|LDR.W           R0, [R10,#0x18]; fp|218-248-24-0
68540|code|STR             R2, [SP,#0x40+var_40]|0-146
68542|code|BLX             _IO_getc|248-247-250-238
68546|code|LDR             R2, [SP,#0x40+var_40]|0-154
68548|code|ADDS            R3, R0, #1|67-28
68550|code|BNE             loc_10B92|228-209
68552|code|LDR.W           R0, [R8,#(dword_54A68 - 0x54A50)]; stream|216-248-24-0
68556|code|MOV             R7, R2|23-70
68558|code|BLX             ferror|248-247-224-238
68562|code|CMP             R0, #0|0-40
68564|code|BNE.W           loc_10DB2|64-240-237-128
68568|code|LDR.W           R3, [R8,#(dword_54A60 - 0x54A50)]|216-248-16-48
68572|code|B               loc_10CBA|109-224
68574|code|MOV             R2, #0x54A50|68-246-80-34-192-242-5-2
68582|code|LDR.W           R0, [R9,#0x10]|217-248-16-0
68586|code|MOVW            R12, #0x4A50|68-246-80-44
68590|code|LDR             R3, [R2,#(dword_54A68 - 0x54A50)]|147-105
68592|code|MOVT.W          R12, #5|192-242-5-12
68596|code|MOVS            R2, #1|1-34
68598|code|STR.W           R2, [R9,#0x24]|201-248-36-32
68602|code|STR.W           R0, [R12,#(dword_54A64 - 0x54A50)]|204-248-20-0
68606|code|STR.W           R3, [R9]|201-248-0-48
68610|code|B               loc_108EA|114-230
68612|code|MOV             LR, #0x56BA8|70-246-168-62-192-242-5-14
68620|code|LDR.W           R12, [SP,#0x40+var_34]|221-248-12-192
68624|code|LDR.W           R7, [LR]|222-248-0-112
68628|code|ADD             R7, R12|103-68
68630|code|STR.W           R7, [R8,#(dword_54A54 - 0x54A50)]|200-248-4-112
68634|code|BL              sub_9EF0|249-247-105-249
68638|code|LSLS            R3, R0, #1|67-0
68640|code|ADDS            R2, R4, R3|226-24
68642|code|LDRH.W          R2, [R2,#0x400]|178-248-0-36
68646|code|CBZ             R2, loc_10C30|26-177
68648|code|STR.W           R0, [R8,#(dword_54A58 - 0x54A50)]|200-248-8-0
68652|code|STR.W           R7, [R8,#(dword_54A5C - 0x54A50)]|200-248-12-112
68656|code|ADDS            R1, R4, R3|225-24
68658|code|LDRSH.W         R1, [R1,#0x8E8]|177-249-232-24
68662|code|ADD.W           R12, R4, R1,LSL#1|4-235-65-12
68666|code|LDRSH.W         R12, [R12,#0xB1A]|188-249-26-203
68670|code|CMP             R0, R12|96-69
68672|code|BEQ             loc_10D18|106-208
68674|code|ADDS            R3, R4, R3|227-24
68676|code|LDRSH.W         R0, [R3,#0x624]|179-249-36-6
68680|code|LSLS            R3, R0, #1|67-0
68682|code|B               loc_10C30|241-231
68684|code|MOVS            R3, #0|0-35
68686|code|STR.W           R3, [R10,#0x14]|202-248-20-48
68690|code|STR.W           R3, [R9,#0x10]|201-248-16-48
68694|code|LDR             R2, [SP,#0x40+var_38]|2-154
68696|code|CMP             R2, #0|0-42
68698|code|BEQ.W           loc_10D9E|0-240-160-128
68702|code|LDR.W           R3, [R10,#0x10]|218-248-16-48
68706|code|MOV.W           R9, #0|79-240-0-9
68710|code|MOVS            R0, #2|2-32
68712|code|STR             R0, [R3,#0x24]|88-98
68714|code|LDR.W           R12, [SP,#0x40+var_38]|221-248-8-192
68718|code|CMP             R0, #1|1-40
68720|code|LDR             R2, [R3,#4]|90-104
68722|code|ADD.W           R1, R12, R9|12-235-9-1
68726|code|MOV.W           R12, #0|79-240-0-12
68730|code|STR.W           R1, [R10,#0x14]|202-248-20-16
68734|code|STRB.W          R12, [R2,R1]|2-248-1-192
68738|code|LDR             R2, [R3,#4]|90-104
68740|code|ADD             R2, R1|10-68
68742|code|STRB.W          R12, [R2,#1]|130-248-1-192
68746|code|LDR             R2, [R3,#4]|90-104
68748|code|MOV             R3, #0x56BA8|70-246-168-51-192-242-5-3
68756|code|STR             R2, [R3]|26-96
68758|code|BEQ             loc_10CE8|39-208
68760|code|CMP             R0, #2|2-40
68762|code|BEQ             loc_10D3E|80-208
68764|code|LDR             R3, =dword_54A50|71-75
68766|code|LDR.W           R12, [SP,#0x40+var_34]|221-248-12-192
68770|code|ADD.W           R7, R2, R12|2-235-12-7
68774|code|STR             R7, [R3,#(dword_54A54 - 0x54A50)]|95-96
68776|code|BL              sub_9EF0|249-247-34-249
68780|code|LDR             R2, =dword_56BA8|68-74
68782|code|LDR             R2, [R2]|18-104
68784|code|STR             R2, [SP,#0x40+var_3C]|1-146
68786|code|MOV             R3, R0|3-70
68788|code|LDRB            R0, [R7]|56-120
68790|code|B               loc_104C8|7-228
68792|code|MOV             R7, R2|23-70
68794|code|STR.W           R9, [R10,#0x14]|202-248-20-144
68798|code|STR.W           R9, [R3,#0x10]|195-248-16-144
68802|code|CMP.W           R9, #0|185-241-0-15
68806|code|BEQ             loc_10C56|198-208
68808|code|LDR.W           R3, [R10,#0x10]|218-248-16-48
68812|code|MOVS            R0, #0|0-32
68814|code|B               loc_10C6A|204-231
68816|code|LDR.W           R3, [R8,#(dword_54A60 - 0x54A50)]|216-248-16-48
68820|code|MOV             R7, R2|23-70
68822|code|LDR.W           R12, [SP,#0x40+var_38]|221-248-8-192
68826|code|LDR             R2, [R3,#4]|90-104
68828|code|ADD             R2, R12|98-68
68830|code|STRB.W          R0, [R2,R9]|2-248-9-0
68834|code|ADD.W           R9, R9, #1|9-241-1-9
68838|code|B               loc_10CBA|232-231
68840|code|LDR.W           R3, [R10]|218-248-0-48
68844|code|STR.W           R2, [R10,#4]|202-248-4-32
68848|code|MOVS            R2, #0|0-34
68850|code|SUBS            R3, #1|1-59
68852|code|STR.W           R2, [R10,#0x20]|202-248-32-32
68856|code|ADD.W           R3, R3, R3,LSR#31|3-235-211-115
68860|code|ASRS            R3, R3, #1|91-16
68862|code|ADDS            R3, #0x49 ; 'I'|73-51
68864|code|B               loc_10584|64-228
68866|code|LDR             R3, =dword_56BA8|47-75
68868|code|MOVS            R0, #1|1-32
68870|code|LDR             R1, =(aRegcompFailedS+0x10); "%s"|47-73
68872|code|LDR             R2, [R3]|26-104
68874|code|ADDS            R2, #1|1-50
68876|code|BL              sub_12AC4|1-240-218-254
68880|code|B               loc_10A42|151-230
68882|code|LDR             R0, =aFatalFlexScann_0; "fatal flex scanner internal error--end "...|45-72
68884|code|BL              sub_10304|255-247-246-250
68888|code|ADD.W           R1, R4, R1,LSL#1|4-235-65-1
68892|code|LDRSH.W         R3, [R1,#0xDCA]|177-249-202-61
68896|code|CMP             R3, R6|179-66
68898|code|BEQ             loc_10D6C|35-208
68900|code|MOV             R0, #0x56BA8|70-246-168-48-192-242-5-0
68908|code|LDR             R0, [R0]|0-104
68910|code|STR             R0, [SP,#0x40+var_3C]|1-144
68912|code|CMP             R3, #0|0-43
68914|code|BEQ.W           loc_10548|63-244-9-172
68918|code|ADDS            R7, #1|1-55
68920|code|STR.W           R7, [R10,#4]|202-248-4-112
68924|code|B               loc_10CB4|186-231
68926|code|ADDS            R1, R2, R1|81-24
68928|code|B               loc_10928|242-229
68930|code|LDR.W           R0, [R9,#4]|217-248-4-0
68934|code|MOV             R2, R12; n|98-70
68936|code|LDR.W           R12, [SP,#0x40+var_38]|221-248-8-192
68940|code|MOVS            R1, #1; size|1-33
68942|code|LDR.W           R3, [R10,#0x18]; stream|218-248-24-48
68946|code|ADD             R0, R12; ptr|96-68
68948|code|BLX             fread|248-247-172-238
68952|code|MOV             R9, R0|129-70
68954|code|STR.W           R0, [R10,#0x14]|202-248-20-0
68958|code|CBZ             R0, loc_10D7C|104-177
68960|code|MOV             R1, #0x54A50|68-246-80-33-192-242-5-1
68968|code|LDR             R3, [R1,#(dword_54A60 - 0x54A50)]|11-105
68970|code|B               loc_10CBE|168-231
68972|code|MOV             R3, #0x56BA8|70-246-168-51-192-242-5-3
68980|code|LDR             R3, [R3]|27-104
68982|code|STR             R3, [SP,#0x40+var_3C]|1-147
68984|code|B.W             loc_10548|255-247-230-187
68988|code|MOV             LR, #0x54A50|68-246-80-46-192-242-5-14
68996|code|LDR.W           R0, [LR,#(dword_54A68 - 0x54A50)]; stream|222-248-24-0
69000|code|BLX             ferror|248-247-2-238
69004|code|CBNZ            R0, loc_10DB2|136-185
69006|code|MOV             R0, #0x54A50|68-246-80-32-192-242-5-0
69014|code|LDR.W           R9, [R0,#(dword_54A64 - 0x54A50)]|208-248-20-144
69018|code|LDR             R3, [R0,#(dword_54A60 - 0x54A50)]|3-105
69020|code|B               loc_10CBE|143-231
69022|code|LDR.W           R0, [R10,#0x18]|218-248-24-0
69026|code|BL              sub_1043C|255-247-75-251
69030|code|LDR.W           R9, [R10,#0x14]|218-248-20-144
69034|code|LDR.W           R3, [R10,#0x10]|218-248-16-48
69038|code|MOVS            R0, #1|1-32
69040|code|B               loc_10C6A|91-231
69042|code|LDR             R0, =aInputInFlexSca; "input in flex scanner failed"|6-72
69044|code|BL              sub_10304|255-247-166-250
69048|data|DCD aFatalErrorScan; "fatal error - scanner input buffer over"...|148-173-1-0
69052|data|DCD dword_54A50|80-74-5-0
69056|data|DCD dword_56BA8|168-107-5-0
69060|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
69064|data|DCD aFatalFlexScann_0; "fatal flex scanner internal error--end "...|92-173-1-0
69068|data|DCD aInputInFlexSca; "input in flex scanner failed"|192-173-1-0
69072|code|CMP             R1, #1|1-41
69074|code|PUSH            {R3-R7,LR}|248-181
69076|code|MOV             R4, R0|4-70
69078|code|MOV             R7, R1|15-70
69080|code|BLS             loc_10E12|27-217
69082|code|ADDS            R3, R0, R1|67-24
69084|code|LDRB.W          R5, [R3,#-2]|19-248-2-92
69088|code|CBNZ            R5, loc_10E12|189-185
69090|code|LDRB.W          R6, [R3,#-1]|19-248-1-108
69094|code|CBNZ            R6, loc_10E0E|150-185
69096|code|MOVS            R0, #0x28 ; '('; size|40-32
69098|code|BLX             malloc|248-247-110-238
69102|code|MOV             R5, R0|5-70
69104|code|CBZ             R0, loc_10E18|144-177
69106|code|SUBS            R7, #2|2-63
69108|code|MOVS            R3, #1|1-35
69110|code|STR             R4, [R0,#4]|68-96
69112|code|STR             R7, [R0,#0xC]|199-96
69114|code|STR             R4, [R0,#8]|132-96
69116|code|STR             R6, [R0,#0x14]|70-97
69118|code|STR             R6, [R0]|6-96
69120|code|STR             R7, [R0,#0x10]|7-97
69122|code|STR             R6, [R0,#0x18]|134-97
69124|code|STR             R3, [R0,#0x1C]|195-97
69126|code|STR             R6, [R0,#0x20]|6-98
69128|code|STR             R6, [R0,#0x24]|70-98
69130|code|BL              sub_10354|255-247-163-250
69134|code|MOV             R0, R5|40-70
69136|code|POP             {R3-R7,PC}|248-189
69138|code|MOVS            R5, #0|0-37
69140|code|MOV             R0, R5|40-70
69142|code|POP             {R3-R7,PC}|248-189
69144|code|LDR             R0, =aOutOfDynamicMe_0; "out of dynamic memory in yy_scan_buffer"...|1-72
69146|code|BL              sub_10304|255-247-115-250
69150|data|ALIGN 0x10|0-191
69152|data|DCD aOutOfDynamicMe_0; "out of dynamic memory in yy_scan_buffer"...|20-174-1-0
69156|code|PUSH            {R4-R6,LR}|112-181
69158|code|ADDS            R6, R1, #2|142-28
69160|code|MOV             R5, R0|5-70
69162|code|MOV             R4, R1|12-70
69164|code|MOV             R0, R6|48-70
69166|code|BLX             malloc|248-247-76-238
69170|code|MOV             R3, R0|3-70
69172|code|CBZ             R0, loc_10E5E|152-177
69174|code|MOVS            R2, #0|0-34
69176|code|CMP             R4, #0|0-44
69178|code|BLE             loc_10E46|4-221
69180|code|LDRB            R1, [R5,R2]|169-92
69182|code|STRB            R1, [R3,R2]|153-84
69184|code|ADDS            R2, #1|1-50
69186|code|CMP             R2, R4|162-66
69188|code|BNE             loc_10E3C|250-209
69190|code|ADDS            R5, R3, R4|29-25
69192|code|MOVS            R2, #0|0-34
69194|code|MOV             R0, R3|24-70
69196|code|MOV             R1, R6|49-70
69198|code|STRB            R2, [R5,#1]|106-112
69200|code|STRB            R2, [R3,R4]|26-85
69202|code|BL              sub_10DD0|255-247-189-255
69206|code|CBZ             R0, loc_10E64|40-177
69208|code|MOVS            R3, #1|1-35
69210|code|STR             R3, [R0,#0x14]|67-97
69212|code|POP             {R4-R6,PC}|112-189
69214|code|LDR             R0, =aOutOfDynamicMe_1; "out of dynamic memory in yy_scan_bytes("...|3-72
69216|code|BL              sub_10304|255-247-80-250
69220|code|LDR             R0, =aBadBufferInYyS; "bad buffer in yy_scan_bytes()"|2-72
69222|code|BL              sub_10304|255-247-77-250
69226|data|ALIGN 4|0-191
69228|data|DCD aOutOfDynamicMe_1; "out of dynamic memory in yy_scan_bytes("...|64-174-1-0
69232|data|DCD aBadBufferInYyS; "bad buffer in yy_scan_bytes()"|108-174-1-0
69236|code|LDRB            R1, [R0]|1-120
69238|code|CBZ             R1, loc_10E86|49-177
69240|code|MOVS            R1, #0|0-33
69242|code|MOV             R3, R0|3-70
69244|code|LDRB.W          R2, [R3,#1]!|19-248-1-47
69248|code|ADDS            R1, #1|1-49
69250|code|CMP             R2, #0|0-42
69252|code|BNE             loc_10E7C|250-209
69254|code|B.W             loc_10E24|255-247-205-191
69258|data|ALIGN 4|0-191
69260|code|MOVS            R0, #1|1-32
69262|code|BX              LR|112-71
69264|code|MOV             R3, #0x54A50|68-246-80-35-192-242-5-3
69272|code|LDR             R2, [R3,#(dword_54A78 - 0x54A50)]|154-106
69274|code|ADD.W           R3, R3, R2,LSL#2|3-235-130-3
69278|code|LDR             R0, [R3,#0x2C]|216-106
69280|code|BX              LR|112-71
69282|data|ALIGN 4|0-191
69284|code|MOV             R2, #0x54A50|68-246-80-34-192-242-5-2
69292|code|MOV             R3, #0x55B48|69-246-72-51-192-242-5-3
69300|code|LDR             R2, [R2,#(dword_54A78 - 0x54A50)]|146-106
69302|code|ADD.W           R3, R3, R2,LSL#2|3-235-130-3
69306|code|LDR.W           R0, [R3,#0xF8C]|211-248-140-15
69310|code|BX              LR|112-71
69312|code|MOVS            R3, #0|0-35
69314|code|LDR             R1, =unk_54A7C|11-73
69316|code|LDR             R2, =dword_56AD4|11-74
69318|code|PUSH            {R4-R6,LR}|112-181
69320|code|MOVS            R6, #1|1-38
69322|code|MOV             R5, R3|29-70
69324|code|STR             R6, [R1,R3]|206-80
69326|code|STR             R5, [R2,R3]|213-80
69328|code|ADDS            R3, #4|4-51
69330|code|CMP             R3, #0x28 ; '('|40-43
69332|code|LDR             R4, =unk_55B48|8-76
69334|code|BNE             loc_10ECC|249-209
69336|code|BL              sub_168F8|5-240-14-253
69340|code|MOV             R3, R0|3-70
69342|code|LDR             R0, =(sub_10300+1)|7-72
69344|code|STR.W           R3, [R4,#(dword_56AD4 - 0x55B48)]|196-248-140-63
69348|code|BL              sub_15530|4-240-36-251
69352|code|STR.W           R0, [R4,#(dword_56AA8 - 0x55B48)]|196-248-96-15
69356|code|POP             {R4-R6,PC}|112-189
69358|data|ALIGN 0x10|0-191
69360|data|DCD unk_54A7C|124-74-5-0
69364|data|DCD dword_56AD4|212-106-5-0
69368|data|DCD unk_55B48|72-91-5-0
69372|data|DCD sub_10300+1|1-3-1-0
69376|code|PUSH            {R3-R5,LR}|56-181
69378|code|LDR             R4, =unk_56AD0|8-76
69380|code|ADD.W           R5, R4, #0x28 ; '('|4-241-40-5
69384|code|LDR.W           R0, [R4,#4]!|84-248-4-15
69388|code|CBZ             R0, loc_10F12|8-177
69390|code|BL              sub_1687C|5-240-181-252
69394|code|CMP             R4, R5|172-66
69396|code|BNE             loc_10F08|248-209
69398|code|LDR             R3, =unk_55B48|4-75
69400|code|LDR.W           R0, [R3,#(dword_56AA8 - 0x55B48)]|211-248-96-15
69404|code|POP.W           {R3-R5,LR}|189-232-56-64
69408|code|B.W             sub_15570|4-240-38-187
69412|data|DCD unk_56AD0|208-106-5-0
69416|data|DCD unk_55B48|72-91-5-0
69420|data|ALIGN 0x10|0-0-0-0
69424|code|PUSH            {R4,R5,LR}|48-181
69426|code|SUB             SP, SP, #0xC|131-176
69428|code|MOV             R5, R0|5-70
69430|code|BL              sub_10EA4|255-247-181-255
69434|code|MOV             R4, R0|4-70
69436|code|BL              sub_10E90|255-247-168-255
69440|code|MOVW            R1, #0xB300|75-242-0-49
69444|code|MOV             R2, R5|42-70
69446|code|MOVT.W          R1, #1|192-242-1-1
69450|code|MOV             R3, R4|35-70
69452|code|STR             R0, [SP,#0x18+var_18]|0-144
69454|code|MOVS            R0, #0|0-32
69456|code|BL              sub_12AC4|1-240-184-253
69460|code|ADD             SP, SP, #0xC|3-176
69462|code|POP             {R4,R5,PC}|48-189
69464|code|PUSH            {R4-R6,LR}|112-181
69466|code|ADDS            R5, R0, #6|133-29
69468|code|LDR             R4, =dword_56AFC|5-76
69470|code|MOV             R6, R1|14-70
69472|code|LDR.W           R3, [R4,R5,LSL#2]|84-248-37-48
69476|code|CBZ             R3, loc_10F6C|19-177
69478|code|LDR             R0, =aDuplicateScrip; "duplicate script"|4-72
69480|code|BL              sub_10F30|255-247-226-255
69484|code|STR.W           R6, [R4,R5,LSL#2]|68-248-37-96
69488|code|POP             {R4-R6,PC}|112-189
69490|data|ALIGN 4|0-191
69492|data|DCD dword_56AFC|252-106-5-0
69496|data|DCD aDuplicateScrip; "duplicate script"|12-179-1-0
69500|code|PUSH            {R4-R6,LR}|112-181
69502|code|MOV             R6, R0|6-70
69504|code|LDR             R0, [R0]|0-104
69506|code|CBZ             R0, loc_10F88|8-177
69508|code|BL              sub_1687C|5-240-122-252
69512|code|LDR             R0, [R6,#0x14]|112-105
69514|code|CBZ             R0, loc_10F90|8-177
69516|code|BL              sub_15570|4-240-240-250
69520|code|ADD.W           R5, R6, #0x14|6-241-20-5
69524|code|MOVS            R4, #0x1A|26-36
69526|code|LDR.W           R0, [R5,#4]!|85-248-4-15
69530|code|CBZ             R0, loc_10FA0|8-177
69532|code|BL              sub_15570|4-240-232-250
69536|code|SUBS            R4, #1|1-60
69538|code|BNE             loc_10F96|248-209
69540|code|MOV             R0, R6|48-70
69542|code|POP.W           {R4-R6,LR}|189-232-112-64
69546|code|B.W             sub_1687C|5-240-103-188
69550|data|ALIGN 0x10|0-191
69552|code|PUSH            {R3,LR}|8-181
69554|code|LDR             R0, [R0]; s1|0-104
69556|code|BLX             strcmp|248-247-162-236
69560|code|RSBS.W          R0, R0, #1|208-241-1-0
69564|code|IT CC|56-191
69566|code|MOVCC           R0, #0|0-32
69568|code|POP             {R3,PC}|8-189
69570|data|ALIGN 4|0-191
69572|code|PUSH            {R4-R6,LR}|112-181
69574|code|MOV             R4, R0|4-70
69576|code|MOVS            R0, #0x10|16-32
69578|code|MOV             R6, R1|14-70
69580|code|BL              sub_16730|5-240-176-251
69584|code|MOV             R3, #0x13434550|68-242-80-83-193-242-67-51
69592|code|MOV             R5, R0|5-70
69594|code|MOV             R0, R6|48-70
69596|code|STR             R3, [R5]|43-96
69598|code|BL              sub_168F8|5-240-139-252
69602|code|STR             R0, [R5,#8]|168-96
69604|code|BL              sub_16994|5-240-214-252
69608|code|STR             R4, [R5,#4]|108-96
69610|code|STR             R0, [R5,#0xC]|232-96
69612|code|MOV             R0, R5|40-70
69614|code|POP             {R4-R6,PC}|112-189
69616|code|LDR             R2, [R0]|2-104
69618|code|MOV             R3, #0x89786756|70-242-86-115-200-246-120-19
69626|code|CMP             R2, R3|154-66
69628|code|PUSH.W          {R4-R8,LR}|45-233-240-65
69632|code|MOV             R4, R0|4-70
69634|code|BNE.W           loc_1118C|64-240-195-128
69638|code|MOVS            R0, #0x14|20-32
69640|code|BL              sub_16730|5-240-146-251
69644|code|LDR             R3, [R4,#4]|99-104
69646|code|MOV             R5, R0|5-70
69648|code|STR             R3, [R0]|3-96
69650|code|CMP             R3, #7; switch 8 cases|7-43
69652|code|BHI             def_11016; jumptable 00011016 default case|9-216
69654|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
69658|data|DCB 4; jump table for switch statement|4
69659|data|DCB 0x2E|46
69660|data|DCB 0x38|56
69661|data|DCB 0x71|113
69662|data|DCB 0x7A|122
69663|data|DCB 0x7A|122
69664|data|DCB 0xB|11
69665|data|DCB 0xB|11
69666|code|LDR             R0, [R4,#8]; jumptable 00011016 case 0|160-104
69668|code|BL              sub_168F8|5-240-104-252
69672|code|STR             R0, [R5,#4]|104-96
69674|code|MOV             R0, R5; jumptable 00011016 default case|40-70
69676|code|POP.W           {R4-R8,PC}|189-232-240-129
69680|code|LDR             R0, =(sub_11600+1); jumptable 00011016 cases 6,7|90-72
69682|code|MOVW            R6, #0x6756|70-242-86-118
69686|code|BL              sub_15530|4-240-123-250
69690|code|MOVT.W          R6, #0x8978|200-246-120-22
69694|code|STR             R0, [R5,#4]|104-96
69696|code|LDR             R0, [R4,#0x1C]|224-105
69698|code|BL              sub_15B98|4-240-169-253
69702|code|MOV             R4, R0|4-70
69704|code|B               loc_11060|10-224
69706|code|LDR             R3, [R0]|3-104
69708|code|CMP             R3, R6|179-66
69710|code|BNE.W           loc_11170|64-240-143-128
69714|code|LDR             R7, [R5,#4]|111-104
69716|code|BL              sub_10FF0|255-247-204-255
69720|code|MOV             R1, R0|1-70
69722|code|MOV             R0, R7|56-70
69724|code|BL              sub_156BC|4-240-46-251
69728|code|MOV             R0, R4|32-70
69730|code|BL              sub_15D20|4-240-93-254
69734|code|CMP             R0, #0|0-40
69736|code|BNE             loc_1104A|239-209
69738|code|MOV             R0, R4|32-70
69740|code|BL              sub_15C70|4-240-0-254
69744|code|MOV             R0, R5|40-70
69746|code|POP.W           {R4-R8,PC}|189-232-240-129
69750|code|BL              sub_16994; jumptable 00011016 case 1|5-240-141-252
69754|code|MOVS            R2, #1|1-34
69756|code|STR             R0, [R5,#4]|104-96
69758|code|LDR             R1, [R4,#8]|161-104
69760|code|BL              sub_169F4|5-240-184-252
69764|code|MOV             R0, R5|40-70
69766|code|POP.W           {R4-R8,PC}|189-232-240-129
69770|code|LDR             R3, [R4,#0x18]; jumptable 00011016 case 2|163-105
69772|code|STR             R3, [R0,#0xC]|195-96
69774|code|LDR             R0, [R4,#8]|160-104
69776|code|CMP             R0, #0|0-40
69778|code|BEQ             loc_1114E|92-208
69780|code|BL              sub_168F8|5-240-48-252
69784|code|STR             R0, [R5,#4]|104-96
69786|code|LDR             R0, =(sub_1165C+1)|65-72
69788|code|LDR             R4, [R4,#0x20]|36-106
69790|code|BL              sub_15530|4-240-71-250
69794|code|MOV             R8, R0|128-70
69796|code|CBZ             R4, loc_110F2|44-179
69798|code|MOV             R0, R4|32-70
69800|code|MOVW            R6, #0x4550|68-242-80-86
69804|code|BL              sub_15B98|4-240-116-253
69808|code|MOVT.W          R6, #0x1343|193-242-67-54
69812|code|MOV             R7, R0|7-70
69814|code|B               loc_110E2|20-224
69816|code|LDR             R3, [R0]|3-104
69818|code|CMP             R3, R6|179-66
69820|code|BNE             loc_11162|81-209
69822|code|LDR             R3, [R0,#4]|67-104
69824|code|LDR             R1, [R0,#8]|129-104
69826|code|MOV             R0, R3|24-70
69828|code|BL              sub_10FC4|255-247-126-255
69832|code|MOVS            R2, #0|0-34
69834|code|MOV             R4, R0|4-70
69836|code|LDR             R0, [R0,#0xC]|192-104
69838|code|LDR             R1, [R4,#8]|161-104
69840|code|BL              sub_169F4|5-240-144-252
69844|code|LDR             R3, [R4]|35-104
69846|code|CMP             R3, R6|179-66
69848|code|BNE             loc_11154|60-209
69850|code|MOV             R0, R8|64-70
69852|code|MOV             R1, R4|33-70
69854|code|BL              sub_156BC|4-240-237-250
69858|code|MOV             R0, R7|56-70
69860|code|BL              sub_15D20|4-240-28-254
69864|code|CMP             R0, #0|0-40
69866|code|BNE             loc_110B8|229-209
69868|code|MOV             R0, R7|56-70
69870|code|BL              sub_15C70|4-240-191-253
69874|code|STR.W           R8, [R5,#0x10]|197-248-16-128
69878|code|MOV             R0, R5|40-70
69880|code|POP.W           {R4-R8,PC}|189-232-240-129
69884|code|ADDS            R4, #0xC; jumptable 00011016 case 3|12-52
69886|code|ADDS            R3, R0, #4|3-29
69888|code|LDM.W           R4, {R0,R1}|148-232-3-0
69892|code|STM.W           R3, {R0,R1}|131-232-3-0
69896|code|MOV             R0, R5|40-70
69898|code|POP.W           {R4-R8,PC}|189-232-240-129
69902|code|LDR             R0, =(sub_11600+1); jumptable 00011016 cases 4,5|35-72
69904|code|MOVW            R6, #0x6756|70-242-86-118
69908|code|BL              sub_15530|4-240-12-250
69912|code|MOVT.W          R6, #0x8978|200-246-120-22
69916|code|STR             R0, [R5,#4]|104-96
69918|code|LDR             R0, [R4,#0x1C]|224-105
69920|code|BL              sub_15B98|4-240-58-253
69924|code|MOV             R4, R0|4-70
69926|code|B               loc_1113C|9-224
69928|code|LDR             R3, [R0]|3-104
69930|code|CMP             R3, R6|179-66
69932|code|BNE             loc_1117E|39-209
69934|code|LDR             R7, [R5,#4]|111-104
69936|code|BL              sub_10FF0|255-247-94-255
69940|code|MOV             R1, R0|1-70
69942|code|MOV             R0, R7|56-70
69944|code|BL              sub_156BC|4-240-192-250
69948|code|MOV             R0, R4|32-70
69950|code|BL              sub_15D20|4-240-239-253
69954|code|CMP             R0, #0|0-40
69956|code|BNE             loc_11128|240-209
69958|code|MOV             R0, R4|32-70
69960|code|BL              sub_15C70|4-240-146-253
69964|code|B               loc_11070|144-231
69966|code|LDR             R3, [R4,#0x14]|99-105
69968|code|STR             R3, [R5,#8]|171-96
69970|code|B               loc_1109A|162-231
69972|code|LDR             R0, =aIcpyMagic0x134; "icpy->magic == 0x13434550"|19-72
69974|code|MOVW            R2, #0x212; line|64-242-18-34
69978|code|LDR             R1, =aParseTabY; "parse_tab.y"|19-73
69980|code|LDR             R3, =aCopyinterplist; "copyInterpList"|19-75
69982|code|BLX             __assert_fail|248-247-252-237
69986|code|LDR             R0, =aIpMagic0x13434; "ip->magic == 0x13434550"|19-72
69988|code|MOVW            R2, #0x20F; line|64-242-15-34
69992|code|LDR             R1, =aParseTabY; "parse_tab.y"|15-73
69994|code|LDR             R3, =aCopyinterplist; "copyInterpList"|16-75
69996|code|BLX             __assert_fail|248-247-244-237
70000|code|LDR             R0, =aSubpMagic0x897; "subp->magic == 0x89786756"|16-72
70002|code|MOVW            R2, #0x266; line|64-242-102-34
70006|code|LDR             R1, =aParseTabY; "parse_tab.y"|12-73
70008|code|LDR             R3, =aMakestmt; "makeStmt"|15-75
70010|code|BLX             __assert_fail|248-247-238-237
70014|code|LDR             R0, =aSubpMagic0x897; "subp->magic == 0x89786756"|13-72
70016|code|MOV.W           R2, #0x25C; line|79-244-23-114
70020|code|LDR             R1, =aParseTabY; "parse_tab.y"|8-73
70022|code|LDR             R3, =aMakestmt; "makeStmt"|12-75
70024|code|BLX             __assert_fail|248-247-230-237
70028|code|LDR             R0, =aPMagic0x897867; "p->magic == 0x89786756"|11-72
70030|code|MOVW            R2, #0x241; line|64-242-65-34
70034|code|LDR             R1, =aParseTabY; "parse_tab.y"|5-73
70036|code|LDR             R3, =aMakestmt; "makeStmt"|8-75
70038|code|BLX             __assert_fail|248-247-224-237
70042|data|ALIGN 4|0-191
70044|data|DCD sub_11600+1|1-22-1-0
70048|data|DCD sub_1165C+1|93-22-1-0
70052|data|DCD aIcpyMagic0x134; "icpy->magic == 0x13434550"|92-179-1-0
70056|data|DCD aParseTabY; "parse_tab.y"|56-179-1-0
70060|data|DCD aCopyinterplist; "copyInterpList"|152-174-1-0
70064|data|DCD aIpMagic0x13434; "ip->magic == 0x13434550"|68-179-1-0
70068|data|DCD aSubpMagic0x897; "subp->magic == 0x89786756"|120-179-1-0
70072|data|DCD aMakestmt; "makeStmt"|140-174-1-0
70076|data|DCD aPMagic0x897867; "p->magic == 0x89786756"|32-179-1-0
70080|code|PUSH            {R4-R6,LR}|112-181
70082|code|MOV             R4, R0|4-70
70084|code|MOV             R0, R1|8-70
70086|code|MOV             R5, R2|21-70
70088|code|BL              sub_E7B4|253-247-244-250
70092|code|MOV             R6, R0|6-70
70094|code|CMP             R0, #0|0-40
70096|code|BEQ             loc_1121E|37-208
70098|code|LDR             R0, [R6,#0x30]|48-107
70100|code|MOV             R1, R4|33-70
70102|code|MOV             R2, R5|42-70
70104|code|BL              sub_12608|1-240-22-250
70108|code|SUBS            R0, #1; switch 5 cases|1-56
70110|code|CMP             R0, #4|4-40
70112|code|BHI             def_111E2; jumptable 000111E2 default case|19-216
70114|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
70118|data|DCB 3; jump table for switch statement|3
70119|data|DCB 6|6
70120|data|DCB 9|9
70121|data|DCB 0xC|12
70122|data|DCB 0xF|15
70123|data|ALIGN 2|0
70124|code|LDR             R0, =aDuplicateNode; jumptable 000111E2 case 1|14-72
70126|code|BL              sub_10F30|255-247-159-254
70130|code|LDR             R0, =aUnknownPlugNam; jumptable 000111E2 case 2|14-72
70132|code|BL              sub_10F30|255-247-156-254
70136|code|LDR             R0, =aPlugAlreadyAss; jumptable 000111E2 case 3|13-72
70138|code|BL              sub_10F30|255-247-153-254
70142|code|LDR             R0, =aMoreNodesThanP; jumptable 000111E2 case 4|13-72
70144|code|BL              sub_10F30|255-247-150-254
70148|code|LDR             R0, =unk_1B3F8; jumptable 000111E2 case 5|12-72
70150|code|BL              sub_10F30|255-247-147-254
70154|code|MOV             R0, R4; jumptable 000111E2 default case|32-70
70156|code|BL              sub_12218|1-240-4-248
70160|code|CBZ             R0, loc_11214|0-177
70162|code|POP             {R4-R6,PC}|112-189
70164|code|LDR             R0, =aDuplicateNodeN; "duplicate node name"|9-72
70166|code|POP.W           {R4-R6,LR}|189-232-112-64
70170|code|B.W             sub_10F30|255-247-137-190
70174|code|LDR             R0, =unk_1B394|8-72
70176|code|BL              sub_10F30|255-247-134-254
70180|code|B               loc_111D2|213-231
70182|data|ALIGN 4|0-191
70184|data|DCD aDuplicateNode; "duplicate node"|164-179-1-0
70188|data|DCD aUnknownPlugNam; "unknown plug name"|180-179-1-0
70192|data|DCD aPlugAlreadyAss; "plug already assigned"|200-179-1-0
70196|data|DCD aMoreNodesThanP; "more nodes than plugs"|224-179-1-0
70200|data|DCD unk_1B3F8|248-179-1-0
70204|data|DCD aDuplicateNodeN; "duplicate node name"|16-180-1-0
70208|data|DCD unk_1B394|148-179-1-0
70212|code|PUSH            {R4,LR}|16-181
70214|code|VPUSH           {D8}|45-237-2-139
70218|code|SUB             SP, SP, #8|130-176
70220|code|ADD             R1, SP, #0x18+endptr; endptr|1-169
70222|code|MOV             R4, R0|4-70
70224|code|BLX             strtod|248-247-222-236
70228|code|VCMP.F64        D0, #0.0|181-238-64-11
70232|code|VMOV.F64        D8, D0|176-238-64-139
70236|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
70240|code|BNE             loc_11268|2-209
70242|code|LDR             R3, [SP,#0x18+endptr]|1-155
70244|code|CMP             R3, R4|163-66
70246|code|BEQ             loc_112A2|28-208
70248|code|VLDR            D7, =1.79769313e308|159-237-17-123
70252|code|VCMPE.F64       D8, D7|180-238-199-139
70256|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
70260|code|BGT             loc_11284|6-220
70262|code|VLDR            D7, =-1.79769313e308|159-237-16-123
70266|code|VCMPE.F64       D8, D7|180-238-199-139
70270|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
70274|code|BPL             loc_1128E|4-213
70276|code|BLX             __errno_location|248-247-142-236
70280|code|LDR             R3, [R0]|3-104
70282|code|CMP             R3, #0x22 ; '"'|34-43
70284|code|BEQ             loc_1129A|5-208
70286|code|VMOV.F64        D0, D8|176-238-72-11
70290|code|ADD             SP, SP, #8|2-176
70292|code|VPOP            {D8}|189-236-2-139
70296|code|POP             {R4,PC}|16-189
70298|code|LDR             R0, =aDoubleValueWou; "double value would cause overflow"|9-72
70300|code|BL              sub_10F30|255-247-72-254
70304|code|B               loc_1128E|245-231
70306|code|LDR             R0, =aErrorParsingDo; "error parsing double value"|8-72
70308|code|BL              sub_10F30|255-247-68-254
70312|code|B               loc_11268|222-231
70314|data|ALIGN 4|0-191
70316|data|DCD 0x8000F3AF|175-243-0-128
70320|data|DCFD 1.79769313e308|255-255-255-255-255-255-239-127
70328|data|DCFD -1.79769313e308|255-255-255-255-255-255-239-255
70336|data|DCD aDoubleValueWou; "double value would cause overflow"|64-180-1-0
70340|data|DCD aErrorParsingDo; "error parsing double value"|36-180-1-0
70344|code|PUSH            {R4,R5,LR}|48-181
70346|code|SUB             SP, SP, #0xC|131-176
70348|code|MOVS            R2, #0; base|0-34
70350|code|ADD             R1, SP, #0x18+endptr; endptr|1-169
70352|code|MOV             R4, R0|4-70
70354|code|BLX             strtol|248-247-26-235
70358|code|MOV             R5, R0|5-70
70360|code|CBNZ            R0, loc_112E6|40-185
70362|code|LDR             R3, [SP,#0x18+endptr]|1-155
70364|code|CMP             R3, R4|163-66
70366|code|BEQ             loc_11302|16-208
70368|code|MOV             R0, R5|40-70
70370|code|ADD             SP, SP, #0xC|3-176
70372|code|POP             {R4,R5,PC}|48-189
70374|code|ADD.W           R3, R0, #0x80000000|0-241-0-67
70378|code|SUBS            R3, #1|1-59
70380|code|ADDS            R3, #3|3-51
70382|code|BLS             loc_112E0|247-217
70384|code|BLX             __errno_location|248-247-88-236
70388|code|LDR             R3, [R0]|3-104
70390|code|CMP             R3, #0x22 ; '"'|34-43
70392|code|BNE             loc_112E0|242-209
70394|code|LDR             R0, =aLongIntegerVal; "long integer value would cause under/ov"...|4-72
70396|code|BL              sub_10F30|255-247-24-254
70400|code|B               loc_112E0|238-231
70402|code|LDR             R0, =aErrorParsingLo; "error parsing long integer value"|3-72
70404|code|BL              sub_10F30|255-247-20-254
70408|code|B               loc_112E0|234-231
70410|data|ALIGN 4|0-191
70412|data|DCD aLongIntegerVal; "long integer value would cause under/ov"...|136-180-1-0
70416|data|DCD aErrorParsingLo; "error parsing long integer value"|100-180-1-0
70420|code|PUSH.W          {R4-R9,LR}|45-233-240-67
70424|code|MOV             R6, R0|6-70
70426|code|LDR             R0, =dword_56AFC|103-72
70428|code|MOV             R5, R1|13-70
70430|code|SUB             SP, SP, #0x5C|151-176
70432|code|MOV             R4, R2|20-70
70434|code|LDR             R1, =(sub_10FB0+1)|102-73
70436|code|MOV             R2, R5|42-70
70438|code|LDR.W           R0, [R0,#(dword_56B7C - 0x56AFC)]|208-248-128-0
70442|code|MOV             R8, R3|152-70
70444|code|BL              sub_1577C|4-240-38-250
70448|code|MOV             R7, R0|7-70
70450|code|CMP             R0, #0|0-40
70452|code|BEQ.W           loc_114A8|0-240-184-128
70456|code|MOV             R0, R6|48-70
70458|code|BL              sub_E718|253-247-237-249
70462|code|MOV             R6, R0|6-70
70464|code|MOV             R0, R5|40-70
70466|code|BL              sub_168F8|5-240-217-250
70470|code|ADDS            R1, R7, #4|57-29
70472|code|ADD.W           R5, R6, #0x20 ; ' '|6-241-32-5
70476|code|ADD.W           R2, R7, #0xC|7-241-12-2
70480|code|ADD.W           R3, R6, #0xB0|6-241-176-3
70484|code|MOV             LR, R0|134-70
70486|code|LDM             R1, {R0,R1}|3-201
70488|code|STR.W           LR, [R6,#8]|198-248-8-224
70492|code|STM.W           R5, {R0,R1}|133-232-3-0
70496|code|LDM.W           R2, {R0,R1}|146-232-3-0
70500|code|STM.W           R3, {R0,R1}|131-232-3-0
70504|code|MOV             R0, R4; haystack|32-70
70506|code|LDR             R1, =asc_19264; needle|85-73
70508|code|BLX             strstr|248-247-180-234
70512|code|MOV             R5, R0|5-70
70514|code|CMP             R0, #0|0-40
70516|code|BEQ             loc_11406|71-208
70518|code|MOV             R0, R4|32-70
70520|code|MOV             R1, R8|65-70
70522|code|BL              sub_F128|253-247-213-254
70526|code|LDR             R2, =(sub_F150+1)|81-74
70528|code|MOVS            R3, #0|0-35
70530|code|STR.W           R3, [R6,#0xC4]|198-248-196-48
70534|code|STR.W           R3, [R6,#0xC8]|198-248-200-48
70538|code|STR.W           R2, [R6,#0xD0]|198-248-208-32
70542|code|LDR             R2, =(sub_F164+1)|78-74
70544|code|STR.W           R2, [R6,#0xC0]|198-248-192-32
70548|code|LDR             R2, =(sub_F238+1)|77-74
70550|code|STR.W           R2, [R6,#0xCC]|198-248-204-32
70554|code|STR.W           R0, [R6,#0xD4]|198-248-212-0
70558|code|LDR             R0, [R7,#0x14]|120-105
70560|code|ADDS            R7, #0x18|24-55
70562|code|BL              sub_1242C|1-240-67-248
70566|code|MOV             R4, R6|52-70
70568|code|MOV.W           R8, #0x1A|79-240-26-8
70572|code|STR             R0, [R6,#0x30]|48-99
70574|code|LDR.W           R3, [R7],#4|87-248-4-59
70578|code|CMP             R3, #0|0-43
70580|code|BEQ             loc_11402|37-208
70582|code|LDR             R0, =(sub_11600+1)|70-72
70584|code|BL              sub_15530|4-240-186-248
70588|code|LDR.W           R3, [R7,#-4]|87-248-4-60
70592|code|STR             R0, [R4,#0x34]|96-99
70594|code|MOV             R0, R3|24-70
70596|code|BL              sub_15B98|4-240-232-251
70600|code|MOV             R5, R0|5-70
70602|code|B               loc_113DC|7-224
70604|code|LDR.W           R9, [R4,#0x34]|212-248-52-144
70608|code|BL              sub_10FF0|255-247-14-254
70612|code|MOV             R1, R0|1-70
70614|code|MOV             R0, R9|72-70
70616|code|BL              sub_156BC|4-240-112-249
70620|code|MOV             R0, R5|40-70
70622|code|BL              sub_15D20|4-240-159-252
70626|code|MOV             R3, R0|3-70
70628|code|CMP             R3, #0|0-43
70630|code|BNE             loc_113CC|241-209
70632|code|MOV             R0, R5|40-70
70634|code|BL              sub_15C70|4-240-65-252
70638|code|ADDS            R4, #4|4-52
70640|code|SUBS.W          R8, R8, #1|184-241-1-8
70644|code|BNE             loc_113AE|219-209
70646|code|MOV             R0, R6|48-70
70648|code|BL              sub_E4E8|253-247-118-248
70652|code|ADD             SP, SP, #0x5C ; '\'|23-176
70654|code|POP.W           {R4-R9,PC}|189-232-240-131
70658|code|STR             R3, [R4,#0x34]|99-99
70660|code|B               loc_113EE|243-231
70662|code|LDRB            R3, [R4]|35-120
70664|code|CMP             R3, #0x2F ; '/'|47-43
70666|code|BEQ             loc_11464|43-208
70668|code|MOV             R0, R4; s|32-70
70670|code|MOVS            R1, #0x3A ; ':'; c|58-33
70672|code|BLX             strchr|248-247-170-235
70676|code|MOV             R9, R0|129-70
70678|code|CMP             R0, #0|0-40
70680|code|BEQ             loc_114B0|74-208
70682|code|STRB.W          R5, [R9],#1|9-248-1-91
70686|code|MOV             R0, R9|72-70
70688|code|BL              sub_112C8|255-247-82-255
70692|code|MOVW            R3, #0xFFFE|79-246-254-115
70696|code|SUBS            R2, R0, #1|66-30
70698|code|CMP             R2, R3|154-66
70700|code|BHI             loc_1145C|22-216
70702|code|MOV             R0, R4|32-70
70704|code|MOV             R1, R9|73-70
70706|code|MOV             R2, R8|66-70
70708|code|BL              sub_F80C|254-247-234-249
70712|code|LDR             R3, =(sub_F8F8+1)|38-75
70714|code|STR.W           R3, [R6,#0xD0]|198-248-208-48
70718|code|LDR             R3, =(sub_F9E4+1)|38-75
70720|code|STR.W           R3, [R6,#0xC0]|198-248-192-48
70724|code|LDR             R3, =(sub_FABC+1)|37-75
70726|code|STR.W           R3, [R6,#0xCC]|198-248-204-48
70730|code|LDR             R3, =(sub_F920+1)|37-75
70732|code|STR.W           R3, [R6,#0xC4]|198-248-196-48
70736|code|LDR             R3, =(sub_FB54+1)|36-75
70738|code|STR.W           R3, [R6,#0xC8]|198-248-200-48
70742|code|STR.W           R0, [R6,#0xD4]|198-248-212-0
70746|code|B               loc_1139E|160-231
70748|code|LDR             R0, =aPortNumberOutO; "port number out of range"|34-72
70750|code|BL              sub_10F30|255-247-103-253
70754|code|B               loc_1142E|228-231
70756|code|MOVS            R0, #3; ver|3-32
70758|code|MOV             R1, R4; filename|33-70
70760|code|MOV             R2, SP; stat_buf|106-70
70762|code|BLX             __xstat|248-247-212-234
70766|code|ADDS            R0, #1|1-48
70768|code|BEQ             loc_11478|2-208
70770|code|LDR             R3, [SP,#0x78+var_68]|4-155
70772|code|LSLS            R3, R3, #0x12|155-4
70774|code|BMI             loc_1147E|2-212
70776|code|LDR             R0, =aSerialDeviceNo; "serial device not found or not a char s"...|28-72
70778|code|BL              sub_10F30|255-247-89-253
70782|code|MOV             R0, R4|32-70
70784|code|MOV             R1, R8|65-70
70786|code|BL              sub_F318|253-247-73-255
70790|code|LDR             R2, =(sub_F33C+1)|26-74
70792|code|MOVS            R3, #0|0-35
70794|code|STR.W           R3, [R6,#0xC4]|198-248-196-48
70798|code|STR.W           R3, [R6,#0xC8]|198-248-200-48
70802|code|STR.W           R2, [R6,#0xD0]|198-248-208-32
70806|code|LDR             R2, =(sub_F35C+1)|23-74
70808|code|STR.W           R2, [R6,#0xC0]|198-248-192-32
70812|code|LDR             R2, =(sub_F654+1)|22-74
70814|code|STR.W           R2, [R6,#0xCC]|198-248-204-32
70818|code|STR.W           R0, [R6,#0xD4]|198-248-212-0
70822|code|B               loc_1139E|122-231
70824|code|LDR             R0, =aDeviceSpecific; "device specification not found"|20-72
70826|code|BL              sub_10F30|255-247-65-253
70830|code|B               loc_11338|67-231
70832|code|LDR             R0, =aHostnameIsMiss; "hostname is missing :port"|19-72
70834|code|BL              sub_10F30|255-247-61-253
70838|code|B               loc_1141E|178-231
70840|data|DCD dword_56AFC|252-106-5-0
70844|data|DCD sub_10FB0+1|177-15-1-0
70848|data|DCD asc_19264; "|&"|100-146-1-0
70852|data|DCD sub_F150+1|81-241-0-0
70856|data|DCD sub_F164+1|101-241-0-0
70860|data|DCD sub_F238+1|57-242-0-0
70864|data|DCD sub_11600+1|1-22-1-0
70868|data|DCD sub_F8F8+1|249-248-0-0
70872|data|DCD sub_F9E4+1|229-249-0-0
70876|data|DCD sub_FABC+1|189-250-0-0
70880|data|DCD sub_F920+1|33-249-0-0
70884|data|DCD sub_FB54+1|85-251-0-0
70888|data|DCD aPortNumberOutO; "port number out of range"|40-181-1-0
70892|data|DCD aSerialDeviceNo; "serial device not found or not a char s"...|216-180-1-0
70896|data|DCD sub_F33C+1|61-243-0-0
70900|data|DCD sub_F35C+1|93-243-0-0
70904|data|DCD sub_F654+1|85-246-0-0
70908|data|DCD aDeviceSpecific; "device specification not found"|184-180-1-0
70912|data|DCD aHostnameIsMiss; "hostname is missing :port"|12-181-1-0
70916|code|PUSH.W          {R3-R9,LR}|45-233-248-67
70920|code|MOV             R4, R0|4-70
70922|code|MOVS            R0, #0x24 ; '$'|36-32
70924|code|MOV             R9, R3|153-70
70926|code|MOV             R5, R1|13-70
70928|code|MOV             R6, R2|22-70
70930|code|LDR.W           R8, [SP,#0x20+arg_0]|221-248-32-128
70934|code|BL              sub_16730|5-240-11-249
70938|code|MOV             R3, #0x89786756|70-242-86-115-200-246-120-19
70946|code|MOV             R7, R0|7-70
70948|code|STR             R4, [R0,#4]|68-96
70950|code|STR             R3, [R0]|3-96
70952|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
70956|code|CMP.W           R9, #0|185-241-0-15
70960|code|BEQ             loc_11538|2-208
70962|code|MOV             R0, R9|72-70
70964|code|BL              sub_112C8|255-247-200-254
70968|code|STR             R0, [R7,#0x14]|120-97
70970|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
70974|code|CMP.W           R8, #0|184-241-0-15
70978|code|BEQ             loc_1154A|2-208
70980|code|MOV             R0, R8|64-70
70982|code|BL              sub_112C8|255-247-191-254
70986|code|STR             R0, [R7,#0x18]|184-97
70988|code|CBZ             R5, loc_11556|29-177
70990|code|MOV             R0, R5|40-70
70992|code|BL              sub_168F8|5-240-210-249
70996|code|STR             R0, [R7,#8]|184-96
70998|code|CBZ             R6, loc_1158A|198-177
71000|code|MOV             R0, R6|48-70
71002|code|BL              sub_11244|255-247-115-254
71006|code|VMOV.F64        D7, #10.0|178-238-4-123
71010|code|VMUL.F64        D6, D0, D7|32-238-7-107
71014|code|VDIV.F64        D7, D6, D7|134-238-7-123
71018|code|VCVT.S32.F64    S13, D7|253-238-199-107
71022|code|VCVT.F64.S32    D7, S13|184-238-230-123
71026|code|VSTR            S13, [R7,#0xC]|199-237-3-106
71030|code|VSUB.F64        D0, D0, D7|48-238-71-11
71034|code|VLDR            D7, =1000000.0|159-237-7-123
71038|code|VMUL.F64        D7, D0, D7|32-238-7-123
71042|code|VCVT.S32.F64    S13, D7|253-238-199-107
71046|code|VSTR            S13, [R7,#0x10]|199-237-4-106
71050|code|LDR             R3, [SP,#0x20+arg_4]|9-155
71052|code|MOV             R0, R7|56-70
71054|code|STR             R3, [R7,#0x1C]|251-97
71056|code|LDR             R3, [SP,#0x20+arg_8]|10-155
71058|code|STR             R3, [R7,#0x20]|59-98
71060|code|POP.W           {R3-R9,PC}|189-232-248-131
71064|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
71072|code|LDR             R2, [R0]|2-104
71074|code|MOV             R3, #0x89786756|70-242-86-115-200-246-120-19
71082|code|CMP             R2, R3|154-66
71084|code|PUSH            {R4,LR}|16-181
71086|code|MOV             R4, R0|4-70
71088|code|BNE             loc_115E4|24-209
71090|code|LDR             R0, [R0,#8]|128-104
71092|code|MOVS            R3, #0|0-35
71094|code|STR             R3, [R4]|35-96
71096|code|CBZ             R0, loc_115BE|8-177
71098|code|BL              sub_1687C|5-240-95-249
71102|code|LDR             R0, [R4,#0x1C]|224-105
71104|code|MOVS            R3, #0|0-35
71106|code|STR             R3, [R4,#8]|163-96
71108|code|CBZ             R0, loc_115CA|8-177
71110|code|BL              sub_15570|3-240-211-255
71114|code|LDR             R0, [R4,#0x20]|32-106
71116|code|MOVS            R3, #0|0-35
71118|code|STR             R3, [R4,#0x1C]|227-97
71120|code|CBZ             R0, loc_115D6|8-177
71122|code|BL              sub_15570|3-240-205-255
71126|code|MOVS            R3, #0|0-35
71128|code|MOV             R0, R4|32-70
71130|code|STR             R3, [R4,#0x20]|35-98
71132|code|POP.W           {R4,LR}|189-232-16-64
71136|code|B.W             sub_1687C|5-240-76-185
71140|code|LDR             R0, =aPMagic0x897867; "p->magic == 0x89786756"|3-72
71142|code|MOV.W           R2, #0x19C; line|79-244-206-114
71146|code|LDR             R1, =aParseTabY; "parse_tab.y"|3-73
71148|code|LDR             R3, =aDestroyprestmt; "destroyPreStmt"|3-75
71150|code|BLX             __assert_fail|248-247-180-235
71154|data|ALIGN 4|0-191
71156|data|DCD aPMagic0x897867; "p->magic == 0x89786756"|32-179-1-0
71160|data|DCD aParseTabY; "parse_tab.y"|56-179-1-0
71164|data|DCD aDestroyprestmt; "destroyPreStmt"|168-174-1-0
71168|code|PUSH            {R4,LR}|16-181
71170|code|MOV             R4, R0|4-70
71172|code|CBZ             R0, loc_11640|224-177
71174|code|LDR             R3, [R0]|3-104
71176|code|CMP             R3, #7; switch 8 cases|7-43
71178|code|BHI             def_1160C; jumptable 0001160C default case, case 3|8-216
71180|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
71184|data|DCB 0x10; jump table for switch statement|16
71185|data|DCB 0x14|20
71186|data|DCB 0xC|12
71187|data|DCB 7|7
71188|data|DCB 4|4
71189|data|DCB 4|4
71190|data|DCB 4|4
71191|data|DCB 4|4
71192|code|LDR             R0, [R0,#4]; jumptable 0001160C cases 4-7|64-104
71194|code|BL              sub_15570|3-240-169-255
71198|code|MOV             R0, R4; jumptable 0001160C default case, case 3|32-70
71200|code|POP.W           {R4,LR}|189-232-16-64
71204|code|B.W             sub_1687C|5-240-42-185
71208|code|LDR             R0, [R0,#0x10]; jumptable 0001160C case 2|0-105
71210|code|BL              sub_15570|3-240-161-255
71214|code|B               def_1160C; jumptable 0001160C default case, case 3|246-231
71216|code|LDR             R0, [R0,#4]; jumptable 0001160C case 0|64-104
71218|code|BL              sub_1687C|5-240-35-249
71222|code|B               def_1160C; jumptable 0001160C default case, case 3|242-231
71224|code|LDR             R0, [R0,#4]; jumptable 0001160C case 1|64-104
71226|code|BL              sub_169AC|5-240-183-249
71230|code|B               def_1160C; jumptable 0001160C default case, case 3|238-231
71232|code|LDR             R0, =aStmtVoid0; "stmt != ((void *)0)"|3-72
71234|code|MOVW            R2, #0x221; line|64-242-33-34
71238|code|LDR             R1, =aParseTabY; "parse_tab.y"|3-73
71240|code|LDR             R3, =aDestroystmt; "destroyStmt"|3-75
71242|code|BLX             __assert_fail|248-247-134-235
71246|data|ALIGN 0x10|0-191
71248|data|DCD aStmtVoid0; "stmt != ((void *)0)"|68-181-1-0
71252|data|DCD aParseTabY; "parse_tab.y"|56-179-1-0
71256|data|DCD aDestroystmt; "destroyStmt"|184-174-1-0
71260|code|LDR             R2, [R0]|2-104
71262|code|MOV             R3, #0x13434550|68-242-80-83-193-242-67-51
71270|code|CMP             R2, R3|154-66
71272|code|PUSH            {R4,LR}|16-181
71274|code|MOV             R4, R0|4-70
71276|code|BNE             loc_11688|12-209
71278|code|MOVS            R3, #0|0-35
71280|code|LDR             R0, [R0,#8]|128-104
71282|code|STR             R3, [R4]|35-96
71284|code|BL              sub_1687C|5-240-2-249
71288|code|LDR             R0, [R4,#0xC]|224-104
71290|code|BL              sub_169AC|5-240-151-249
71294|code|MOV             R0, R4|32-70
71296|code|POP.W           {R4,LR}|189-232-16-64
71300|code|B.W             sub_1687C|5-240-250-184
71304|code|LDR             R0, =aIMagic0x134345; "i->magic == 0x13434550"|3-72
71306|code|MOV.W           R2, #0x1FE; line|79-244-255-114
71310|code|LDR             R1, =aParseTabY; "parse_tab.y"|3-73
71312|code|LDR             R3, =aDestroyinterp; "destroyInterp"|3-75
71314|code|BLX             __assert_fail|248-247-98-235
71318|data|ALIGN 4|0-191
71320|data|DCD aIMagic0x134345; "i->magic == 0x13434550"|88-181-1-0
71324|data|DCD aParseTabY; "parse_tab.y"|56-179-1-0
71328|data|DCD aDestroyinterp; "destroyInterp"|196-174-1-0
71332|code|MOV             R0, #0x1B570|75-242-112-80-192-242-1-0
71340|code|B.W             sub_10F30|255-247-64-188
71344|code|PUSH.W          {R4-R11,LR}|45-233-240-79
71348|code|VPUSH           {D8}|45-237-2-139
71352|code|SUB.W           SP, SP, #0x4D0|173-245-154-109
71356|code|VLDR            D8, =1000000.0|159-237-162-139
71360|code|SUB             SP, SP, #0xC|131-176
71362|code|LDR             R5, =aMakestmt; "makeStmt"|163-77
71364|code|ADD             R6, SP, #0x508+ptr|210-174
71366|code|ADD             R1, SP, #0x508+ptr|210-169
71368|code|MOVW            R2, #0x6BB0|70-246-176-50
71372|code|STR             R1, [SP,#0x508+var_4F0]|6-145
71374|code|MOVT.W          R2, #5|192-242-5-2
71378|code|MOV             R1, #0x56BB4|70-246-180-49-192-242-5-1
71386|code|MOV.W           R10, #0xC8|79-240-200-10
71390|code|MOV             R7, R6|55-70
71392|code|MOV.W           R8, #0|79-240-0-8
71396|code|MOV.W           R11, #0xC7|79-240-199-11
71400|code|MOVS            R3, #0|0-35
71402|code|ADD             R4, SP, #0x508+var_4E0|10-172
71404|code|STR             R3, [SP,#0x508+var_4EC]|7-147
71406|code|STR             R3, [R2]|19-96
71408|code|MOV             R3, #0xFFFFFFFE|111-240-1-3
71412|code|STR             R4, [SP,#0x508+src]|8-148
71414|code|STR             R3, [R1]|11-96
71416|code|ADD.W           R3, R7, R11,LSL#1|7-235-75-3
71420|code|STRH.W          R8, [R6]|166-248-0-128
71424|code|CMP             R6, R3|158-66
71426|code|BCC             loc_11782|62-211
71428|code|MOVW            R3, #0x270F|66-242-15-115
71432|code|CMP             R10, R3|154-69
71434|code|BHI.W           loc_11F9A|0-242-70-132
71438|code|ADDS            R3, #1|1-51
71440|code|MOV.W           R10, R10,LSL#1|79-234-74-10
71444|code|CMP             R10, R3|154-69
71446|code|IT CS|40-191
71448|code|MOVCS           R10, R3|154-70
71450|code|MOV.W           R11, R10,LSL#1|79-234-74-11
71454|code|ADD.W           R0, R11, R10|11-235-10-0
71458|code|LSLS            R0, R0, #1|64-0
71460|code|ADDS            R0, #3; size|3-48
71462|code|BLX             malloc|248-247-208-233
71466|code|MOV             R9, R0|129-70
71468|code|CMP             R0, #0|0-40
71470|code|BEQ.W           loc_11F9A|0-240-52-132
71474|code|SUBS            R4, R6, R7|244-27
71476|code|MOV             R1, R7; src|57-70
71478|code|ASRS            R4, R4, #1|100-16
71480|code|ADDS            R4, #1|1-52
71482|code|LSLS            R2, R4, #1; n|98-0
71484|code|BLX             memcpy|248-247-46-233
71488|code|ADD.W           R3, R11, #3|11-241-3-3
71492|code|BIC.W           R3, R3, #3|35-240-3-3
71496|code|LSLS            R2, R4, #2; n|162-0
71498|code|ADD             R3, R9|75-68
71500|code|LDR             R1, [SP,#0x508+src]; src|8-153
71502|code|STR             R3, [SP,#0x508+var_4F8]|4-147
71504|code|MOV             R0, R3; dest|24-70
71506|code|BLX             memcpy|248-247-36-233
71510|code|LDR             R2, [SP,#0x508+var_4F0]|6-154
71512|code|LDR             R3, [SP,#0x508+var_4F8]|4-155
71514|code|CMP             R7, R2|151-66
71516|code|BEQ             loc_11766|3-208
71518|code|MOV             R0, R7; ptr|56-70
71520|code|BLX             free|248-247-4-233
71524|code|LDR             R3, [SP,#0x508+var_4F8]|4-155
71526|code|SUBS            R4, #1|1-60
71528|code|ADD.W           R11, R10, #0xFFFFFFFF|10-241-255-59
71532|code|ADD.W           R6, R9, R4,LSL#1|9-235-68-6
71536|code|ADD.W           R2, R9, R11,LSL#1|9-235-75-2
71540|code|CMP             R6, R2|150-66
71542|code|BCS.W           loc_11FA4|128-240-21-132
71546|code|ADD.W           R4, R3, R4,LSL#2|3-235-132-4
71550|code|MOV             R7, R9|79-70
71552|code|STR             R3, [SP,#0x508+src]|8-147
71554|code|ADD.W           R3, R5, R8|5-235-8-3
71558|code|LDRSB.W         R9, [R3,#0x48]|147-249-72-144
71562|code|CMN.W           R9, #0x52 ; 'R'|25-241-82-15
71566|code|BEQ             loc_117C8|27-208
71568|code|MOV             R3, #0x56BB4|70-246-180-51-192-242-5-3
71576|code|LDR             R0, [R3]|24-104
71578|code|ADDS            R2, R0, #2|130-28
71580|code|BEQ.W           loc_119BC|0-240-14-129
71584|code|CMP             R0, #0|0-40
71586|code|BLE.W           loc_11994|64-243-247-128
71590|code|CMP.W           R0, #0x138|176-245-156-127
71594|code|ITTE CC|58-191
71596|code|ADDCC           R0, R5, R0|40-24
71598|code|LDRBCC.W        R3, [R0,#0xD0]|144-248-208-48
71602|code|MOVCS           R3, #2|2-35
71604|code|ADD             R9, R3|153-68
71606|code|CMP.W           R9, #0x82|185-241-130-15
71610|code|BHI             loc_117C8|5-216
71612|code|ADD             R9, R5|169-68
71614|code|LDRB.W          R2, [R9,#0x208]|153-248-8-34
71618|code|CMP             R2, R3|154-66
71620|code|BEQ.W           loc_118E4|0-240-142-128
71624|code|ADD.W           R3, R5, R8|5-235-8-3
71628|code|LDRB.W          R9, [R3,#0x310]|147-248-16-147
71632|code|CMP.W           R9, #0|185-241-0-15
71636|code|BEQ.W           loc_118EC|0-240-138-128
71640|code|ADD.W           R2, R5, R9|5-235-9-2
71644|code|SUB.W           R3, R9, #0xC; switch 67 cases|169-241-12-3
71648|code|LDRB.W          R8, [R2,#0x398]|146-248-152-131
71652|code|RSB.W           R2, R8, #1|200-241-1-2
71656|code|LDR.W           R12, [R4,R2,LSL#2]|84-248-34-192
71660|code|CMP             R3, #0x42|66-43
71662|code|BHI             def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|88-216
71664|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
71668|data|DCW 0x2AE; jump table for switch statement|174-2
71670|data|DCW 0x2A6|166-2
71672|data|DCW 0x356|86-3
71674|data|DCW 0x34E|78-3
71676|data|DCW 0x344|68-3
71678|data|DCW 0x339|57-3
71680|data|DCW 0x32F|47-3
71682|data|DCW 0x324|36-3
71684|data|DCW 0x312|18-3
71686|data|DCW 0x2C2|194-2
71688|data|DCW 0x57|87-0
71690|data|DCW 0x57|87-0
71692|data|DCW 0x57|87-0
71694|data|DCW 0x57|87-0
71696|data|DCW 0x57|87-0
71698|data|DCW 0x57|87-0
71700|data|DCW 0x205|5-2
71702|data|DCW 0x250|80-2
71704|data|DCW 0x237|55-2
71706|data|DCW 0x3C1|193-3
71708|data|DCW 0x43|67-0
71710|data|DCW 0x57|87-0
71712|data|DCW 0x57|87-0
71714|data|DCW 0x3B8|184-3
71716|data|DCW 0x3AF|175-3
71718|data|DCW 0x3A6|166-3
71720|data|DCW 0x39D|157-3
71722|data|DCW 0x394|148-3
71724|data|DCW 0x38B|139-3
71726|data|DCW 0x382|130-3
71728|data|DCW 0x379|121-3
71730|data|DCW 0x370|112-3
71732|data|DCW 0x367|103-3
71734|data|DCW 0x35E|94-3
71736|data|DCW 0x124|36-1
71738|data|DCW 0x11B|27-1
71740|data|DCW 0x112|18-1
71742|data|DCW 0x109|9-1
71744|data|DCW 0x1FC|252-1
71746|data|DCW 0x1F3|243-1
71748|data|DCW 0x1EA|234-1
71750|data|DCW 0x1E1|225-1
71752|data|DCW 0x1D8|216-1
71754|data|DCW 0x1CF|207-1
71756|data|DCW 0x1C6|198-1
71758|data|DCW 0x1BD|189-1
71760|data|DCW 0x106|6-1
71762|data|DCW 0x101|1-1
71764|data|DCW 0x235|53-2
71766|data|DCW 0x225|37-2
71768|data|DCW 0x293|147-2
71770|data|DCW 0x28C|140-2
71772|data|DCW 0x282|130-2
71774|data|DCW 0x270|112-2
71776|data|DCW 0x1AC|172-1
71778|data|DCW 0x19A|154-1
71780|data|DCW 0x18A|138-1
71782|data|DCW 0x17A|122-1
71784|data|DCW 0x171|113-1
71786|data|DCW 0x168|104-1
71788|data|DCW 0x15F|95-1
71790|data|DCW 0x14D|77-1
71792|data|DCW 0x145|69-1
71794|data|DCW 0x139|57-1
71796|data|DCW 0x133|51-1
71798|data|DCW 0x12D|45-1
71800|data|DCW 0x2A3|163-2
71802|code|MOV             R1, #0x56AFC; jumptable 000117F0 case 32|70-246-252-33-192-242-5-1
71810|code|LDR             R3, [R1,#(dword_56B10 - 0x56AFC)]|75-105
71812|code|CBZ             R3, loc_11894|51-177
71814|code|LDR             R0, =aDuplicatePlugL; "duplicate plug list"|51-72
71816|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
71820|code|BL              sub_10F30|255-247-80-251
71824|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
71828|code|LDR.W           R3, [R4,#-4]|84-248-4-60
71832|code|MOV             R2, #0x56AFC|70-246-252-34-192-242-5-2
71840|code|STR             R3, [R2,#(dword_56B10 - 0x56AFC)]|83-97
71842|code|ADD             R9, R5; jumptable 000117F0 default case, cases 22-27,33,34|169-68
71844|code|SUB.W           R6, R6, R8,LSL#1|166-235-72-6
71848|code|SUB.W           R8, R4, R8,LSL#2|164-235-136-8
71852|code|LDRB.W          R3, [R9,#0x3F4]|153-248-244-51
71856|code|ADD.W           R4, R8, #4|8-241-4-4
71860|code|LDRSH.W         R2, [R6]|182-249-0-32
71864|code|SUBS            R3, #0x39 ; '9'|57-59
71866|code|STR.W           R12, [R8,#4]|200-248-4-192
71870|code|ADDS            R1, R5, R3|233-24
71872|code|LDRSB.W         R1, [R1,#0x444]|145-249-68-20
71876|code|ADDS            R1, R1, R2|137-24
71878|code|CMP             R1, #0x82|130-41
71880|code|BHI             loc_118DA|7-216
71882|code|ADDS            R1, R5, R1|105-24
71884|code|LDRB.W          R0, [R1,#0x208]|145-248-8-2
71888|code|CMP             R2, R0|130-66
71890|code|IT EQ|8-191
71892|code|LDRBEQ.W        R8, [R1,#0x28C]|145-248-140-130
71896|code|BEQ             loc_118E0|2-208
71898|code|ADDS            R3, R5, R3|235-24
71900|code|LDRSB.W         R8, [R3,#0x45C]|147-249-92-132
71904|code|ADDS            R6, #2|2-54
71906|code|B               loc_116F8|9-231
71908|code|LDRB.W          R3, [R9,#0x28C]|153-248-140-50
71912|code|CMP             R3, #0|0-43
71914|code|BNE             loc_119C6|108-209
71916|code|LDR             R3, [SP,#0x508+var_4EC]|7-155
71918|code|CMP             R3, #0|0-43
71920|code|BEQ             loc_119A2|87-208
71922|code|LDR             R1, [SP,#0x508+var_4EC]|7-153
71924|code|CMP             R1, #3|3-41
71926|code|BEQ             loc_1197C|65-208
71928|code|MOV             R3, R6|51-70
71930|code|B               loc_11906|4-224
71932|code|CMP             R7, R3|159-66
71934|code|BEQ             loc_1195E|46-208
71936|code|LDRSH.W         R8, [R3,#-2]!|51-249-2-141
71940|code|SUBS            R4, #4|4-60
71942|code|ADD             R8, R5|168-68
71944|code|MOV             R6, R3|30-70
71946|code|LDRSB.W         R2, [R8,#0x48]|152-249-72-32
71950|code|CMN.W           R2, #0x52 ; 'R'|18-241-82-15
71954|code|BEQ             loc_118FC|243-208
71956|code|ADDS            R2, #1|1-50
71958|code|CMP             R2, #0x82|130-42
71960|code|BHI             loc_118FC|240-216
71962|code|ADDS            R2, R5, R2|170-24
71964|code|LDRB.W          R1, [R2,#0x208]|146-248-8-18
71968|code|CMP             R1, #1|1-41
71970|code|BNE             loc_118FC|235-209
71972|code|LDRB.W          R2, [R2,#0x28C]|146-248-140-34
71976|code|CMP             R2, #0|0-42
71978|code|BEQ             loc_118FC|231-208
71980|code|CMP             R2, #0x17|23-42
71982|code|BEQ.W           loc_11FAA|0-240-60-131
71986|code|MOVS            R3, #3|3-35
71988|code|STR             R3, [SP,#0x508+var_4EC]|7-147
71990|code|LDR             R3, =dword_56BB8|8-75
71992|code|MOV             R8, R2|144-70
71994|code|ADDS            R6, #2|2-54
71996|code|LDR             R3, [R3]|27-104
71998|code|STR             R3, [R4,#4]|99-96
72000|code|ADDS            R4, #4|4-52
72002|code|B               loc_116F8|217-230
72004|data|DCD 0x8000F3AF|175-243-0-128
72008|data|DCFD 1000000.0|0-0-0-0-128-132-46-65
72016|data|DCD aMakestmt; "makeStmt"|140-174-1-0
72020|data|DCD aDuplicatePlugL; "duplicate plug list"|216-181-1-0
72024|data|DCD dword_56BB8|184-107-5-0
72028|code|BNE             loc_118F8|204-209
72030|code|MOVS            R4, #1|1-36
72032|code|LDR             R1, [SP,#0x508+var_4F0]|6-153
72034|code|CMP             R7, R1|143-66
72036|code|BEQ             loc_1196C|2-208
72038|code|MOV             R0, R7; ptr|56-70
72040|code|BLX             free|248-247-0-232
72044|code|MOV             R0, R4|32-70
72046|code|ADD             SP, SP, #0xDC|55-176
72048|code|ADD.W           SP, SP, #0x400|13-245-128-109
72052|code|VPOP            {D8}|189-236-2-139
72056|code|POP.W           {R4-R11,PC}|189-232-240-143
72060|code|MOV             R2, #0x56BB4|70-246-180-50-192-242-5-2
72068|code|LDR             R3, [R2]|19-104
72070|code|CMP             R3, #0|0-43
72072|code|BLE             loc_1195C|232-221
72074|code|LDR             R3, =dword_56BB4|189-75
72076|code|MOV             R2, #0xFFFFFFFE|111-240-1-2
72080|code|STR             R2, [R3]|26-96
72082|code|B               loc_118F8|177-231
72084|code|MOV             R1, #0x56BB4|70-246-180-49-192-242-5-1
72092|code|MOVS            R3, #0|0-35
72094|code|STR             R3, [R1]|11-96
72096|code|B               loc_117B4|8-231
72098|code|MOV             LR, #0x56BB0|70-246-176-62-192-242-5-14
72106|code|LDR             R0, =aSyntaxError; "syntax error"|182-72
72108|code|LDR.W           R3, [LR]|222-248-0-48
72112|code|ADDS            R3, #1|1-51
72114|code|STR.W           R3, [LR]|206-248-0-48
72118|code|BL              sub_116A4|255-247-117-254
72122|code|B               loc_118F8|157-231
72124|code|BL              sub_10468|254-247-84-253
72128|code|LDR             R3, =dword_56BB4|175-75
72130|code|STR             R0, [R3]|24-96
72132|code|B               loc_117A0|236-230
72134|code|CMP             R3, #0x17|23-43
72136|code|BEQ.W           loc_11FAA|0-240-239-130
72140|code|LDR             R2, [SP,#0x508+var_4EC]|7-154
72142|code|CBZ             R2, loc_119D4|10-177
72144|code|SUBS            R2, #1|1-58
72146|code|STR             R2, [SP,#0x508+var_4EC]|7-146
72148|code|MOV             R1, #0x56BB4|70-246-180-49-192-242-5-1
72156|code|LDR             R2, [R1]|10-104
72158|code|CBZ             R2, loc_119E8|26-177
72160|code|LDR             R2, =dword_56BB4|167-74
72162|code|MOV             R1, #0xFFFFFFFE|111-240-1-1
72166|code|STR             R1, [R2]|17-96
72168|code|MOV             R8, R3|152-70
72170|code|LDR             R3, =dword_56BB8|167-75
72172|code|ADDS            R6, #2|2-54
72174|code|LDR             R3, [R3]|27-104
72176|code|STR             R3, [R4,#4]|99-96
72178|code|ADDS            R4, #4|4-52
72180|code|B               loc_116F8|128-230
72182|code|LDR.W           R0, [R4,#-4]; jumptable 000117F0 case 59|84-248-4-12
72186|code|LDR             R1, [R4]|33-104
72188|code|BL              sub_156BC|3-240-94-254
72192|code|LDR.W           R12, [R4,#-4]; jumptable 000117F0 case 58|84-248-4-204
72196|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|77-231
72198|code|LDR             R1, [R4]; jumptable 000117F0 case 49|33-104
72200|code|MOVS            R0, #0xB|11-32
72202|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72206|code|BL              sub_10F58|255-247-163-250
72210|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72214|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|68-231
72216|code|LDR             R1, [R4]; jumptable 000117F0 case 48|33-104
72218|code|MOVS            R0, #0xA|10-32
72220|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72224|code|BL              sub_10F58|255-247-154-250
72228|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72232|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|59-231
72234|code|LDR             R1, [R4]; jumptable 000117F0 case 47|33-104
72236|code|MOVS            R0, #9|9-32
72238|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72242|code|BL              sub_10F58|255-247-145-250
72246|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72250|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|50-231
72252|code|LDR             R1, [R4]; jumptable 000117F0 case 46|33-104
72254|code|MOVS            R0, #8|8-32
72256|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72260|code|BL              sub_10F58|255-247-136-250
72264|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72268|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|41-231
72270|code|LDR             R1, [R4]; jumptable 000117F0 case 77|33-104
72272|code|MOVS            R0, #1|1-32
72274|code|BL              sub_10FC4|255-247-183-250
72278|code|MOV             R12, R0|132-70
72280|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|35-231
72282|code|LDR             R1, [R4]; jumptable 000117F0 case 76|33-104
72284|code|MOVS            R0, #2|2-32
72286|code|BL              sub_10FC4|255-247-177-250
72290|code|MOV             R12, R0|132-70
72292|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|29-231
72294|code|LDR             R0, =(sub_1165C+1); jumptable 000117F0 case 75|137-72
72296|code|BL              sub_15530|3-240-98-253
72300|code|LDR             R1, [R4]|33-104
72302|code|MOV             R12, R0|132-70
72304|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72308|code|BL              sub_156BC|3-240-34-254
72312|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72316|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|17-231
72318|code|LDR.W           R0, [R4,#-4]; jumptable 000117F0 case 74|84-248-4-12
72322|code|LDR             R1, [R4]|33-104
72324|code|BL              sub_156BC|3-240-26-254
72328|code|LDR.W           R12, [R4,#-4]|84-248-4-204
72332|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|9-231
72334|code|MOV.W           LR, #0; jumptable 000117F0 case 73|79-240-0-14
72338|code|STR.W           LR, [SP,#0x508+var_508]|205-248-0-224
72342|code|LDR.W           R12, [R4]|212-248-0-192
72346|code|MOVS            R0, #7|7-32
72348|code|MOV             R1, LR|113-70
72350|code|MOV             R2, R1|10-70
72352|code|MOV             R3, R1|11-70
72354|code|STR.W           R12, [SP,#0x508+var_504]|205-248-4-192
72358|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72362|code|BL              sub_11504|255-247-43-253
72366|code|MOV             R12, R0|132-70
72368|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|247-230
72370|code|MOV.W           LR, #0; jumptable 000117F0 case 72|79-240-0-14
72374|code|MOVS            R0, #6|6-32
72376|code|STR.W           LR, [SP,#0x508+var_508]|205-248-0-224
72380|code|MOV             R1, LR|113-70
72382|code|LDR.W           R12, [R4]|212-248-0-192
72386|code|B               loc_11A9E|236-231
72388|code|MOV.W           LR, #0; jumptable 000117F0 case 71|79-240-0-14
72392|code|MOVS            R0, #4|4-32
72394|code|STR.W           LR, [SP,#0x508+var_508]|205-248-0-224
72398|code|MOV             R1, LR|113-70
72400|code|LDR.W           R12, [R4]|212-248-0-192
72404|code|B               loc_11A9E|227-231
72406|code|MOV.W           LR, #0; jumptable 000117F0 case 70|79-240-0-14
72410|code|MOVS            R0, #5|5-32
72412|code|STR.W           LR, [SP,#0x508+var_508]|205-248-0-224
72416|code|MOV             R1, LR|113-70
72418|code|LDR.W           R12, [R4]|212-248-0-192
72422|code|B               loc_11A9E|218-231
72424|code|LDR.W           R3, [R4,#-4]; jumptable 000117F0 case 69|84-248-4-60
72428|code|MOVS            R1, #0|0-33
72430|code|STR             R1, [SP,#0x508+var_504]|1-145
72432|code|MOVS            R0, #2|2-32
72434|code|MOV             R2, R1|10-70
72436|code|STR             R3, [SP,#0x508+var_508]|0-147
72438|code|MOV             R3, R1|11-70
72440|code|LDR.W           LR, [R4]|212-248-0-224
72444|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72448|code|BL              sub_11504|255-247-0-253
72452|code|MOV             R12, R0|132-70
72454|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|204-230
72456|code|LDR.W           R12, [R4]; jumptable 000117F0 case 68|212-248-0-192
72460|code|MOV.W           LR, #0|79-240-0-14
72464|code|MOV             R1, LR|113-70
72466|code|MOVS            R0, #2|2-32
72468|code|MOV             R2, LR|114-70
72470|code|MOV             R3, LR|115-70
72472|code|STMEA.W         SP, {R12,LR}|141-232-0-80
72476|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72480|code|BL              sub_11504|255-247-240-252
72484|code|MOV             R12, R0|132-70
72486|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|188-230
72488|code|LDR.W           R2, [R4,#-4]; jumptable 000117F0 case 67|84-248-4-44
72492|code|MOVS            R0, #0|0-32
72494|code|LDR.W           R3, [R4,#-8]|84-248-8-60
72498|code|STR             R0, [SP,#0x508+var_504]|1-144
72500|code|MOV             R1, R0|1-70
72502|code|STR             R2, [SP,#0x508+var_508]|0-146
72504|code|MOVS            R0, #2|2-32
72506|code|LDR.W           LR, [R4]|212-248-0-224
72510|code|MOV             R2, R1|10-70
72512|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72516|code|BL              sub_11504|255-247-222-252
72520|code|MOV             R12, R0|132-70
72522|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|170-230
72524|code|LDR.W           R3, [R4,#-4]; jumptable 000117F0 case 66|84-248-4-60
72528|code|MOV.W           LR, #0|79-240-0-14
72532|code|LDR.W           R12, [R4]|212-248-0-192
72536|code|MOVS            R0, #2|2-32
72538|code|MOV             R1, LR|113-70
72540|code|MOV             R2, LR|114-70
72542|code|STMEA.W         SP, {R12,LR}|141-232-0-80
72546|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72550|code|BL              sub_11504|255-247-205-252
72554|code|MOV             R12, R0|132-70
72556|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|153-230
72558|code|LDR             R1, [R4]; jumptable 000117F0 case 57|33-104
72560|code|MOVS            R0, #6|6-32
72562|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72566|code|BL              sub_10F58|255-247-239-249
72570|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72574|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|144-230
72576|code|LDR             R1, [R4]; jumptable 000117F0 case 56|33-104
72578|code|MOVS            R0, #0x12|18-32
72580|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72584|code|BL              sub_10F58|255-247-230-249
72588|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72592|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|135-230
72594|code|LDR             R1, [R4]; jumptable 000117F0 case 55|33-104
72596|code|MOVS            R0, #0x11|17-32
72598|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72602|code|BL              sub_10F58|255-247-221-249
72606|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72610|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|126-230
72612|code|LDR             R1, [R4]; jumptable 000117F0 case 54|33-104
72614|code|MOVS            R0, #0x10|16-32
72616|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72620|code|BL              sub_10F58|255-247-212-249
72624|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72628|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|117-230
72630|code|LDR             R1, [R4]; jumptable 000117F0 case 53|33-104
72632|code|MOVS            R0, #0xF|15-32
72634|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72638|code|BL              sub_10F58|255-247-203-249
72642|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72646|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|108-230
72648|code|LDR             R1, [R4]; jumptable 000117F0 case 52|33-104
72650|code|MOVS            R0, #0xE|14-32
72652|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72656|code|BL              sub_10F58|255-247-194-249
72660|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72664|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|99-230
72666|code|LDR             R1, [R4]; jumptable 000117F0 case 51|33-104
72668|code|MOVS            R0, #0xD|13-32
72670|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72674|code|BL              sub_10F58|255-247-185-249
72678|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72682|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|90-230
72684|code|LDR             R1, [R4]; jumptable 000117F0 case 50|33-104
72686|code|MOVS            R0, #0xC|12-32
72688|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72692|code|BL              sub_10F58|255-247-176-249
72696|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72700|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|81-230
72702|code|LDR             R0, [R4]; jumptable 000117F0 case 28|32-104
72704|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72708|code|BL              sub_11244|255-247-30-251
72712|code|VMOV.F64        D7, #10.0|178-238-4-123
72716|code|MOV             R2, #0x56AFC|70-246-252-34-192-242-5-2
72724|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72728|code|VMUL.F64        D6, D0, D7|32-238-7-107
72732|code|VDIV.F64        D7, D6, D7|134-238-7-123
72736|code|VCVT.S32.F64    S13, D7|253-238-199-107
72740|code|VCVT.F64.S32    D7, S13|184-238-230-123
72744|code|VSTR            S13, [R2,#4]|194-237-1-106
72748|code|VSUB.F64        D0, D0, D7|48-238-71-11
72752|code|VMUL.F64        D7, D0, D8|32-238-8-123
72756|code|VCVT.S32.F64    S13, D7|253-238-199-107
72760|code|VSTR            S13, [R2,#8]|194-237-2-106
72764|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|49-230
72766|code|LDR             R1, [R4]; jumptable 000117F0 case 61|33-104
72768|code|MOV.W           LR, #0|79-240-0-14
72772|code|MOVS            R0, #1|1-32
72774|code|MOV             R2, LR|114-70
72776|code|MOV             R3, LR|115-70
72778|code|STR.W           LR, [SP,#0x508+var_508]|205-248-0-224
72782|code|STR.W           LR, [SP,#0x508+var_504]|205-248-4-224
72786|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72790|code|BL              sub_11504|255-247-85-252
72794|code|MOV             R12, R0|132-70
72796|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|33-230
72798|code|LDR             R0, =(sub_115A0+1); jumptable 000117F0 case 60|12-72
72800|code|B               loc_11A68|2-231
72802|code|LDR.W           R3, [R4,#-4]; jumptable 000117F0 case 30|84-248-4-60
72806|code|LDR             R0, [R4]|32-104
72808|code|STR             R3, [SP,#0x508+var_4F8]|4-147
72810|code|BL              sub_168F8|4-240-69-254
72814|code|LDR             R3, [SP,#0x508+var_4F8]|4-155
72816|code|MOV             R1, R0|1-70
72818|code|MOV             R0, R3|24-70
72820|code|BL              sub_156BC|3-240-34-253
72824|code|LDR.W           R12, [R4,#-4]|84-248-4-204
72828|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|17-230
72830|data|ALIGN 0x10|0-191
72832|data|DCD dword_56BB4|180-107-5-0
72836|data|DCD aSyntaxError; "syntax error"|236-181-1-0
72840|data|DCD dword_56BB8|184-107-5-0
72844|data|DCD sub_1165C+1|93-22-1-0
72848|data|DCD sub_115A0+1|161-21-1-0
72852|code|LDR             R0, [R4]; jumptable 000117F0 case 29|32-104
72854|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
72858|code|BL              sub_11244|255-247-211-250
72862|code|VMOV.F64        D7, #10.0|178-238-4-123
72866|code|MOV             R1, #0x56AFC|70-246-252-33-192-242-5-1
72874|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
72878|code|VMUL.F64        D6, D0, D7|32-238-7-107
72882|code|VDIV.F64        D7, D6, D7|134-238-7-123
72886|code|VCVT.S32.F64    S13, D7|253-238-199-107
72890|code|VCVT.F64.S32    D7, S13|184-238-230-123
72894|code|VSTR            S13, [R1,#0xC]|193-237-3-106
72898|code|VSUB.F64        D0, D0, D7|48-238-71-11
72902|code|VMUL.F64        D7, D0, D8|32-238-8-123
72906|code|VCVT.S32.F64    S13, D7|253-238-199-107
72910|code|VSTR            S13, [R1,#0x10]|193-237-4-106
72914|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|230-229
72916|code|LDR.W           R3, [R4,#-4]; jumptable 000117F0 case 65|84-248-4-60
72920|code|MOVS            R0, #0|0-32
72922|code|LDR.W           R1, [R4,#-8]|84-248-8-28
72926|code|STR             R0, [SP,#0x508+var_504]|1-144
72928|code|MOV             R2, R0|2-70
72930|code|STR             R3, [SP,#0x508+var_508]|0-147
72932|code|MOVS            R0, #2|2-32
72934|code|LDR.W           LR, [R4]|212-248-0-224
72938|code|MOV             R3, R2|19-70
72940|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
72944|code|BL              sub_11504|255-247-8-252
72948|code|MOV             R12, R0|132-70
72950|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|212-229
72952|code|MOV.W           LR, #0; jumptable 000117F0 case 64|79-240-0-14
72956|code|LDR.W           R1, [R4,#-4]|84-248-4-28
72960|code|LDR.W           R12, [R4]|212-248-0-192
72964|code|MOV             R2, LR|114-70
72966|code|MOVS            R0, #2|2-32
72968|code|MOV             R3, LR|115-70
72970|code|B               loc_11B5E|40-231
72972|code|MOV.W           LR, #0; jumptable 000117F0 case 63|79-240-0-14
72976|code|LDR             R2, [R4]|34-104
72978|code|MOV             R1, LR|113-70
72980|code|MOVS            R0, #3|3-32
72982|code|MOV             R3, LR|115-70
72984|code|B               loc_11C4A|151-231
72986|code|MOV.W           LR, #0; jumptable 000117F0 case 62|79-240-0-14
72990|code|LDR             R1, [R4]|33-104
72992|code|MOV             R0, LR|112-70
72994|code|MOV             R2, LR|114-70
72996|code|MOV             R3, LR|115-70
72998|code|STR.W           LR, [SP,#0x508+var_508]|205-248-0-224
73002|code|STR.W           LR, [SP,#0x508+var_504]|205-248-4-224
73006|code|STR.W           LR, [SP,#0x508+var_500]|205-248-8-224
73010|code|BL              sub_11504|255-247-231-251
73014|code|MOV             R12, R0|132-70
73016|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|179-229
73018|code|LDR.W           R12, [R4]; jumptable 000117F0 case 78|212-248-0-192
73022|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|176-229
73024|code|MOVS            R0, #1; jumptable 000117F0 case 13|1-32
73026|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73030|code|BL              sub_12290|0-240-163-250
73034|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73038|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|168-229
73040|code|STR.W           R12, [SP,#0x508+var_4F4]; jumptable 000117F0 case 12|205-248-20-192
73044|code|BL              sub_10EA4|255-247-166-248
73048|code|STR             R0, [SP,#0x508+var_4F8]|4-144
73050|code|BL              sub_10E90|255-247-153-248
73054|code|LDR             R1, =aWarningSSD; "warning: %s: %s::%d"|151-73
73056|code|LDR             R2, =aTcpwrappersWit; "'tcpwrappers' without yes|no"|151-74
73058|code|LDR             R3, [SP,#0x508+var_4F8]|4-155
73060|code|STR             R0, [SP,#0x508+var_508]|0-144
73062|code|MOVS            R0, #0|0-32
73064|code|BL              err|0-240-196-254
73068|code|MOVS            R0, #1|1-32
73070|code|BL              sub_12290|0-240-143-250
73074|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73078|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|148-229
73080|code|LDR.W           R0, [R4,#-0xC]; jumptable 000117F0 case 21|84-248-12-12
73084|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73088|code|BL              sub_168F8|4-240-186-253
73092|code|MOV             LR, #0x56AFC|70-246-252-46-192-242-5-14
73100|code|MOV             R3, R0|3-70
73102|code|MOVS            R0, #0x80|128-32
73104|code|STR.W           R3, [LR]|206-248-0-48
73108|code|BL              sub_16730|4-240-204-252
73112|code|LDR             R1, =dword_56AFC; src|138-73
73114|code|MOVS            R2, #0x80; n|128-34
73116|code|STR             R0, [SP,#0x508+var_4E4]|9-144
73118|code|BLX             memcpy|247-247-254-237
73122|code|LDR             R3, =dword_56B10|137-75
73124|code|LDR             R1, [SP,#0x508+var_4E4]|9-153
73126|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73130|code|ADD.W           R0, R1, #0x14|1-241-20-0
73134|code|ADD.W           R1, R3, #0x68 ; 'h'|3-241-104-1
73138|code|MOV             R2, R3|26-70
73140|code|MOV             LR, R3|158-70
73142|code|LDR.W           R3, [R2,#4]!|82-248-4-63
73146|code|CMP             R2, R1|138-66
73148|code|STR.W           R3, [R0,#4]!|64-248-4-63
73152|code|BNE             loc_11DB6|249-209
73154|code|MOVS            R0, #0|0-32
73156|code|MOV             R2, #0x56AFC|70-246-252-34-192-242-5-2
73164|code|MOV             R3, LR|115-70
73166|code|MOV             LR, #0x56AFC|70-246-252-46-192-242-5-14
73174|code|STR             R0, [R2]|16-96
73176|code|MOV             R2, R0|2-70
73178|code|STR.W           R0, [LR,#(dword_56B10 - 0x56AFC)]|206-248-20-0
73182|code|STR.W           R0, [LR,#(dword_56B04 - 0x56AFC)]|206-248-8-0
73186|code|STR.W           R0, [LR,#(dword_56B00 - 0x56AFC)]|206-248-4-0
73190|code|STR.W           R0, [LR,#(dword_56B0C - 0x56AFC)]|206-248-16-0
73194|code|STR.W           R0, [LR,#(dword_56B08 - 0x56AFC)]|206-248-12-0
73198|code|STR.W           R2, [R3,#4]!|67-248-4-47
73202|code|CMP             R3, R1|139-66
73204|code|BNE             loc_11DEE|251-209
73206|code|MOV             R1, #0x56AFC|70-246-252-33-192-242-5-1
73214|code|LDR.W           R0, [R1,#(dword_56B7C - 0x56AFC)]|209-248-128-0
73218|code|CMP             R0, #0|0-40
73220|code|BEQ.W           loc_11FAE|0-240-211-128
73224|code|LDR             R1, [SP,#0x508+var_4E4]|9-153
73226|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73230|code|BL              sub_156BC|3-240-85-252
73234|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73238|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|68-229
73240|code|LDR.W           R0, [R4,#-4]; jumptable 000117F0 case 20|84-248-4-12
73244|code|LDR             R1, [R4]|33-104
73246|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73250|code|BL              sub_12360|0-240-157-250
73254|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73258|code|CMP             R0, #0|0-40
73260|code|BNE.W           def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|127-244-57-173
73264|code|LDR             R0, =aBadAlias; "bad alias"|102-72
73266|code|BL              sub_10F30|255-247-125-248
73270|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73274|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|50-229
73276|code|LDR             R1, [R4]; jumptable 000117F0 case 19|33-104
73278|code|MOVS            R2, #0|0-34
73280|code|LDR.W           R0, [R4,#-4]|84-248-4-12
73284|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73288|code|BL              sub_111C0|255-247-186-249
73292|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73296|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|39-229
73298|code|SUB.W           R0, R4, #8; jumptable 000117F0 case 18|164-241-8-0
73302|code|LDM             R0, {R0-R2}|7-200
73304|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73308|code|BL              sub_111C0|255-247-176-249
73312|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73316|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|29-229
73318|code|SUB.W           R0, R4, #8; jumptable 000117F0 case 17|164-241-8-0
73322|code|MOVS            R3, #0|0-35
73324|code|LDM             R0, {R0-R2}|7-200
73326|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73330|code|BL              sub_11314|255-247-79-250
73334|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73338|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|18-229
73340|code|SUB.W           R0, R4, #0xC; jumptable 000117F0 case 16|164-241-12-0
73344|code|LDM             R0, {R0-R3}|15-200
73346|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73350|code|BL              sub_11314|255-247-69-250
73354|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73358|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|8-229
73360|code|LDR             R0, [R4]; jumptable 000117F0 case 15|32-104
73362|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73366|code|BL              sub_122A8|0-240-7-250
73370|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73374|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|0-229
73376|code|MOVS            R0, #0; jumptable 000117F0 case 14|0-32
73378|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73382|code|BL              sub_12290|0-240-243-249
73386|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73390|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|248-228
73392|code|LDR             R1, [R4]; jumptable 000117F0 case 45|33-104
73394|code|MOVS            R0, #7|7-32
73396|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73400|code|BL              sub_10F58|255-247-78-248
73404|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73408|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|239-228
73410|code|LDR             R1, [R4]; jumptable 000117F0 case 44|33-104
73412|code|MOVS            R0, #0x18|24-32
73414|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73418|code|BL              sub_10F58|255-247-69-248
73422|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73426|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|230-228
73428|code|LDR             R1, [R4]; jumptable 000117F0 case 43|33-104
73430|code|MOVS            R0, #0x17|23-32
73432|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73436|code|BL              sub_10F58|255-247-60-248
73440|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73444|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|221-228
73446|code|LDR             R1, [R4]; jumptable 000117F0 case 42|33-104
73448|code|MOVS            R0, #0x16|22-32
73450|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73454|code|BL              sub_10F58|255-247-51-248
73458|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73462|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|212-228
73464|code|LDR             R1, [R4]; jumptable 000117F0 case 41|33-104
73466|code|MOVS            R0, #0x15|21-32
73468|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73472|code|BL              sub_10F58|255-247-42-248
73476|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73480|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|203-228
73482|code|LDR             R1, [R4]; jumptable 000117F0 case 40|33-104
73484|code|MOVS            R0, #0x14|20-32
73486|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73490|code|BL              sub_10F58|255-247-33-248
73494|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73498|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|194-228
73500|code|LDR             R1, [R4]; jumptable 000117F0 case 39|33-104
73502|code|MOVS            R0, #0x13|19-32
73504|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73508|code|BL              sub_10F58|255-247-24-248
73512|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73516|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|185-228
73518|code|LDR             R1, [R4]; jumptable 000117F0 case 38|33-104
73520|code|MOVS            R0, #3|3-32
73522|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73526|code|BL              sub_10F58|255-247-15-248
73530|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73534|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|176-228
73536|code|LDR             R1, [R4]; jumptable 000117F0 case 37|33-104
73538|code|MOVS            R0, #2|2-32
73540|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73544|code|BL              sub_10F58|255-247-6-248
73548|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73552|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|167-228
73554|code|LDR             R1, [R4]; jumptable 000117F0 case 36|33-104
73556|code|MOVS            R0, #1|1-32
73558|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73562|code|BL              sub_10F58|254-247-253-255
73566|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73570|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|158-228
73572|code|LDR             R1, [R4]; jumptable 000117F0 case 35|33-104
73574|code|MOVS            R0, #0|0-32
73576|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73580|code|BL              sub_10F58|254-247-244-255
73584|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73588|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|149-228
73590|code|LDR             R0, =(sub_1687C+1); jumptable 000117F0 case 31|22-72
73592|code|BL              sub_15530|3-240-218-250
73596|code|MOV             R12, R0|132-70
73598|code|LDR             R0, [R4]|32-104
73600|code|STR.W           R12, [SP,#0x508+var_4F4]|205-248-20-192
73604|code|BL              sub_168F8|4-240-184-252
73608|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73612|code|MOV             R1, R0|1-70
73614|code|MOV             R0, R12|96-70
73616|code|BL              sub_156BC|3-240-148-251
73620|code|LDR.W           R12, [SP,#0x508+var_4F4]|221-248-20-192
73624|code|B               def_117F0; jumptable 000117F0 default case, cases 22-27,33,34|131-228
73626|code|LDR             R0, =aMemoryExhauste; "memory exhausted"|14-72
73628|code|MOVS            R4, #2|2-36
73630|code|BL              sub_116A4|255-247-129-251
73634|code|B               loc_11960|221-228
73636|code|MOV             R7, R9|79-70
73638|code|MOVS            R4, #1|1-36
73640|code|B               loc_11960|218-228
73642|code|MOVS            R4, #0|0-36
73644|code|B               loc_11960|216-228
73646|code|LDR             R0, =aDeviceSpecsVoi; "device_specs != ((void *)0)"|10-72
73648|code|MOVW            R2, #0x1CB; line|64-242-203-18
73652|code|LDR             R1, =aParseTabY; "parse_tab.y"|9-73
73654|code|LDR             R3, =aMakespec; "makeSpec"|10-75
73656|code|BLX             __assert_fail|247-247-206-238
73660|data|DCD aWarningSSD; "warning: %s: %s::%d"|124-181-1-0
73664|data|DCD aTcpwrappersWit; "'tcpwrappers' without yes|no"|144-181-1-0
73668|data|DCD dword_56AFC|252-106-5-0
73672|data|DCD dword_56B10|16-107-5-0
73676|data|DCD aBadAlias; "bad alias"|176-181-1-0
73680|data|DCD sub_1687C+1|125-104-1-0
73684|data|DCD aMemoryExhauste; "memory exhausted"|252-181-1-0
73688|data|DCD aDeviceSpecsVoi; "device_specs != ((void *)0)"|188-181-1-0
73692|data|DCD aParseTabY; "parse_tab.y"|56-179-1-0
73696|data|DCD aMakespec; "makeSpec"|116-178-1-0
73700|code|PUSH            {R4-R6,LR}|112-181
73702|code|MOV             R5, R0|5-70
73704|code|BL              sub_10EC0|254-247-106-255
73708|code|MOV             R0, R5; filename|40-70
73710|code|LDR             R1, =(aClientReadErro+0x10); modes|23-73
73712|code|BLX             fopen|247-247-156-236
73716|code|LDR             R4, =dword_54A68|22-76
73718|code|STR             R0, [R4]|32-96
73720|code|CBZ             R0, loc_12040|16-179
73722|code|LDR             R0, =(sub_10F7C+1)|22-72
73724|code|MOVS            R6, #0|0-38
73726|code|BL              sub_15530|3-240-151-250
73730|code|LDR             R5, =dword_56AFC|21-77
73732|code|MOV             R2, R6|50-70
73734|code|ADD.W           R3, R5, #0x14|5-241-20-3
73738|code|ADD.W           R1, R5, #0x7C ; '|'|5-241-124-1
73742|code|STR             R6, [R5]|46-96
73744|code|STR             R6, [R5,#(dword_56B10 - 0x56AFC)]|110-97
73746|code|STR             R6, [R5,#(dword_56B04 - 0x56AFC)]|174-96
73748|code|STR             R6, [R5,#(dword_56B00 - 0x56AFC)]|110-96
73750|code|STR             R6, [R5,#(dword_56B0C - 0x56AFC)]|46-97
73752|code|STR             R6, [R5,#(dword_56B08 - 0x56AFC)]|238-96
73754|code|STR.W           R0, [R5,#(dword_56B7C - 0x56AFC)]|197-248-128-0
73758|code|STR.W           R2, [R3,#4]!|67-248-4-47
73762|code|CMP             R3, R1|139-66
73764|code|BNE             loc_1201E|251-209
73766|code|BL              sub_116B0|255-247-67-251
73770|code|LDR             R0, [R4]; stream|32-104
73772|code|BLX             fclose|247-247-8-238
73776|code|BL              sub_10F00|254-247-102-255
73780|code|LDR.W           R0, [R5,#(dword_56B7C - 0x56AFC)]|213-248-128-0
73784|code|BL              sub_15570|3-240-154-250
73788|code|MOVS            R0, #0|0-32
73790|code|POP             {R4-R6,PC}|112-189
73792|code|MOVS            R0, #1|1-32
73794|code|LDR             R1, =(aRegcompFailedS+0x10); "%s"|6-73
73796|code|MOV             R2, R5|42-70
73798|code|BL              sub_12AC4|0-240-61-253
73802|code|B               loc_11FFA|214-231
73804|data|DCD aClientReadErro+0x10; "r"|68-138-1-0
73808|data|DCD dword_54A68|104-74-5-0
73812|data|DCD sub_10F7C+1|125-15-1-0
73816|data|DCD dword_56AFC|252-106-5-0
73820|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
73824|code|PUSH            {R4,LR}|16-181
73826|code|MOV             R4, R0|4-70
73828|code|LDR             R0, [R0]|0-104
73830|code|CBZ             R0, loc_1206C|8-177
73832|code|BL              sub_1687C|4-240-8-252
73836|code|LDR             R0, [R4,#4]|96-104
73838|code|CBZ             R0, loc_12074|8-177
73840|code|BL              sub_145A0|2-240-150-250
73844|code|MOV             R0, R4|32-70
73846|code|POP.W           {R4,LR}|189-232-16-64
73850|code|B.W             sub_1687C|4-240-255-187
73854|data|ALIGN 0x10|0-191
73856|code|PUSH            {R3,LR}|8-181
73858|code|LDR             R0, [R0]; s1|0-104
73860|code|BLX             strcmp|247-247-58-236
73864|code|RSBS.W          R0, R0, #1|208-241-1-0
73868|code|IT CC|56-191
73870|code|MOVCC           R0, #0|0-32
73872|code|POP             {R3,PC}|8-189
73874|data|ALIGN 4|0-191
73876|code|LDR             R3, =dword_56B80|2-75
73878|code|LDR             R0, [R3]|24-104
73880|code|CBZ             R0, locret_1209E|8-177
73882|code|B.W             sub_145A0|2-240-129-186
73886|code|BX              LR|112-71
73888|data|DCD dword_56B80|128-107-5-0
73892|code|PUSH            {R3,LR}|8-181
73894|code|MOV             R3, #0x56B80|70-246-128-51-192-242-5-3
73902|code|MOV             R1, R0|1-70
73904|code|LDR             R3, [R3]|27-104
73906|code|MOV             R0, R3|24-70
73908|code|BL              sub_13A34|1-240-190-252
73912|code|ADDS            R0, #1|1-48
73914|code|IT NE|24-191
73916|code|MOVNE           R0, #1|1-32
73918|code|POP             {R3,PC}|8-189
73920|code|PUSH.W          {R4-R9,LR}|45-233-240-67
73924|code|MOV             R4, R0|4-70
73926|code|SUB             SP, SP, #0x5C|151-176
73928|code|LDR             R0, =(sub_1687C+1)|72-72
73930|code|BL              sub_15530|3-240-49-250
73934|code|LDR             R7, =dword_56B80|72-79
73936|code|MOV             R3, R0|3-70
73938|code|MOVS            R0, #0|0-32
73940|code|STR             R3, [R7,#(dword_56B84 - 0x56B80)]|123-96
73942|code|BL              sub_14BB8|2-240-111-253
73946|code|MOV             R3, R0|3-70
73948|code|LDR             R0, =(sub_12060+1)|69-72
73950|code|STR             R3, [R7]|59-96
73952|code|BL              sub_15530|3-240-38-250
73956|code|MOV             R1, R4; filename|33-70
73958|code|MOV             R2, SP; stat_buf|106-70
73960|code|MOV             R3, R0|3-70
73962|code|MOVS            R0, #3; ver|3-32
73964|code|STR             R3, [R7,#(dword_56B88 - 0x56B80)]|187-96
73966|code|BLX             __xstat|247-247-146-236
73970|code|CMP             R0, #0|0-40
73972|code|BLT             loc_121DA|113-219
73974|code|LDR             R3, [SP,#0x78+var_68]|4-155
73976|code|AND.W           R3, R3, #0xF000|3-244-112-67
73980|code|CMP.W           R3, #0x8000|179-245-0-79
73984|code|BEQ             loc_1210C|4-208
73986|code|MOVS            R0, #0|0-32
73988|code|LDR             R1, =aSIsNotARegular; "%s is not a regular file\n"|60-73
73990|code|MOV             R2, R4|34-70
73992|code|BL              sub_12AC4|0-240-220-252
73996|code|MOV             R0, R4|32-70
73998|code|MOV.W           R8, #1|79-240-1-8
74002|code|BL              sub_11FE4|255-247-103-255
74006|code|LDR             R0, [R7,#(dword_56B88 - 0x56B80)]|184-104
74008|code|BL              sub_15B98|3-240-62-253
74012|code|MOV             R6, R0|6-70
74014|code|MOV             R0, R6|48-70
74016|code|BL              sub_15D20|3-240-254-253
74020|code|MOV             R9, R0|129-70
74022|code|CBZ             R0, loc_12166|240-177
74024|code|LDR.W           R0, [R9,#4]|217-248-4-0
74028|code|BL              sub_13D58|1-240-20-254
74032|code|MOV             R5, R0|5-70
74034|code|CBNZ            R0, loc_12148|72-185
74036|code|B               loc_121AA|57-224
74038|code|MOV             R0, R4|32-70
74040|code|BL              sub_120A4|255-247-180-255
74044|code|MOV             R2, R0|2-70
74046|code|CMP             R0, #0|0-40
74048|code|BEQ             loc_1218C|36-208
74050|code|MOV             R0, R4; ptr|32-70
74052|code|BLX             free|247-247-18-236
74056|code|MOV             R0, R5|40-70
74058|code|BL              sub_14C2C|2-240-111-253
74062|code|MOV             R4, R0|4-70
74064|code|CMP             R0, #0|0-40
74066|code|BNE             loc_12136|240-209
74068|code|MOV             R0, R5|40-70
74070|code|BL              sub_144F8|2-240-207-249
74074|code|MOV             R0, R6|48-70
74076|code|BL              sub_15D20|3-240-224-253
74080|code|MOV             R9, R0|129-70
74082|code|CMP             R0, #0|0-40
74084|code|BNE             loc_12128|224-209
74086|code|MOV             R0, R6|48-70
74088|code|BL              sub_15C70|3-240-130-253
74092|code|LDR             R0, [R7]|56-104
74094|code|BL              sub_139F4|1-240-65-252
74098|code|MOV             R4, R0|4-70
74100|code|CMP             R0, #0|0-40
74102|code|BEQ             loc_121D0|43-208
74104|code|LDR             R0, [R7,#(dword_56B84 - 0x56B80)]|120-104
74106|code|BL              sub_15678|3-240-125-250
74110|code|CBZ             R0, loc_121B2|192-177
74112|code|CMP.W           R8, #0|184-241-0-15
74116|code|BEQ             loc_121E6|47-208
74118|code|ADD             SP, SP, #0x5C ; '\'|23-176
74120|code|POP.W           {R4-R9,PC}|189-232-240-131
74124|code|LDR.W           LR, [R9]|217-248-0-224
74128|code|MOV             R3, R4|35-70
74130|code|LDR             R1, =aAliasSReferenc; "alias '%s' references nonexistant node "...|26-73
74132|code|MOV             R8, R2|144-70
74134|code|MOV             R2, LR|114-70
74136|code|BL              err|0-240-172-252
74140|code|MOV             R0, R4; ptr|32-70
74142|code|BLX             free|247-247-230-235
74146|code|MOV             R0, R5|40-70
74148|code|BL              sub_144F8|2-240-168-249
74152|code|B               loc_1215A|215-231
74154|code|LDR             R1, =aHostlistIterat_2; "hostlist_iterator_create failed"|21-73
74156|code|BL              sub_12AC4|0-240-138-252
74160|code|B               loc_12148|202-231
74162|code|MOVS            R0, #0x10|16-32
74164|code|BL              sub_16730|4-240-188-250
74168|code|LDR             R1, =(aNoAddressesFor+0x18); format|18-73
74170|code|LDR             R2, =a127001; "127.0.0.1"|19-74
74172|code|LDR             R3, =a10101; "10101"|19-75
74174|code|MOV             R4, R0|4-70
74176|code|BLX             sprintf|247-247-118-237
74180|code|LDR             R3, =dword_56B80|10-75
74182|code|MOV             R1, R4|33-70
74184|code|LDR             R0, [R3,#(dword_56B84 - 0x56B80)]|88-104
74186|code|BL              sub_156BC|3-240-119-250
74190|code|B               loc_12180|215-231
74192|code|LDR             R1, =aNoNodesAreDefi; "no nodes are defined"|15-73
74194|code|MOV             R8, R4|160-70
74196|code|BL              err|0-240-142-252
74200|code|B               loc_12178|206-231
74202|code|MOVS            R0, #1|1-32
74204|code|LDR             R1, =(aRegcompFailedS+0x10); "%s"|13-73
74206|code|MOV             R2, R4|34-70
74208|code|BL              sub_12AC4|0-240-112-252
74212|code|B               loc_120F6|135-231
74214|code|MOVS            R0, #1; status|1-32
74216|code|BLX             exit|247-247-166-236
74220|data|DCD sub_1687C+1|125-104-1-0
74224|data|DCD dword_56B80|128-107-5-0
74228|data|DCD sub_12060+1|97-32-1-0
74232|data|DCD aSIsNotARegular; "%s is not a regular file\n"|16-182-1-0
74236|data|DCD aAliasSReferenc; "alias '%s' references nonexistant node "...|76-182-1-0
74240|data|DCD aHostlistIterat_2; "hostlist_iterator_create failed"|44-182-1-0
74244|data|DCD aNoAddressesFor+0x18; "%s:%s"|76-151-1-0
74248|data|DCD a127001; "127.0.0.1"|192-138-1-0
74252|data|DCD a10101; "10101"|144-182-1-0
74256|data|DCD aNoNodesAreDefi; "no nodes are defined"|120-182-1-0
74260|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
74264|code|PUSH            {R3-R7,LR}|248-181
74266|code|BL              sub_14BB8|2-240-205-252
74270|code|LDR             R6, =dword_56B80|21-78
74272|code|MOV             R7, R0|7-70
74274|code|BL              sub_13D58|1-240-153-253
74278|code|MOV             R5, R0|5-70
74280|code|B               loc_1223E|9-224
74282|code|BL              sub_120A4|255-247-59-255
74286|code|CBNZ            R0, loc_1225C|168-185
74288|code|LDR             R0, [R6]|48-104
74290|code|MOV             R1, R4|33-70
74292|code|BL              sub_14C04|2-240-230-252
74296|code|MOV             R0, R4; ptr|32-70
74298|code|BLX             free|247-247-152-235
74302|code|MOV             R0, R5|40-70
74304|code|BL              sub_14C2C|2-240-244-252
74308|code|MOV             R4, R0|4-70
74310|code|CMP             R4, #0|0-44
74312|code|BNE             loc_1222A|239-209
74314|code|MOV             R0, R5|40-70
74316|code|MOVS            R4, #1|1-36
74318|code|BL              sub_144F8|2-240-83-249
74322|code|MOV             R0, R7|56-70
74324|code|BL              sub_145A0|2-240-164-249
74328|code|MOV             R0, R4|32-70
74330|code|POP             {R3-R7,PC}|248-189
74332|code|MOV             R0, R4; ptr|32-70
74334|code|MOVS            R4, #0|0-36
74336|code|BLX             free|247-247-132-235
74340|code|MOV             R0, R5|40-70
74342|code|BL              sub_144F8|2-240-71-249
74346|code|MOV             R0, R7|56-70
74348|code|BL              sub_145A0|2-240-152-249
74352|code|MOV             R0, R4|32-70
74354|code|POP             {R3-R7,PC}|248-189
74356|data|DCD dword_56B80|128-107-5-0
74360|code|MOV             R3, #0x56B80|70-246-128-51-192-242-5-3
74368|code|LDR             R0, [R3]|24-104
74370|code|BX              LR|112-71
74372|code|MOV             R3, #0x56B80|70-246-128-51-192-242-5-3
74380|code|LDR             R0, [R3,#(dword_56B8C - 0x56B80)]|216-104
74382|code|BX              LR|112-71
74384|code|MOV             R3, #0x56B80|70-246-128-51-192-242-5-3
74392|code|STR             R0, [R3,#(dword_56B8C - 0x56B80)]|216-96
74394|code|BX              LR|112-71
74396|code|MOV             R3, #0x56B80|70-246-128-51-192-242-5-3
74404|code|LDR             R0, [R3,#(dword_56B84 - 0x56B80)]|88-104
74406|code|BX              LR|112-71
74408|code|MOV             R3, #0x56B80|70-246-128-51-192-242-5-3
74416|code|PUSH            {R4,LR}|16-181
74418|code|LDR             R4, [R3,#(dword_56B84 - 0x56B80)]|92-104
74420|code|BL              sub_168F8|4-240-32-251
74424|code|MOV             R1, R0|1-70
74426|code|MOV             R0, R4|32-70
74428|code|POP.W           {R4,LR}|189-232-16-64
74432|code|B.W             sub_156BC|3-240-252-185
74436|code|PUSH.W          {R3-R9,LR}|45-233-248-67
74440|code|MOV             R6, R0|6-70
74442|code|MOVS            R0, #0|0-32
74444|code|BL              sub_14BB8|2-240-116-252
74448|code|MOV             R7, R0|7-70
74450|code|CMP             R0, #0|0-40
74452|code|BEQ             loc_12346|55-208
74454|code|MOV             R0, R6|48-70
74456|code|BL              sub_13D58|1-240-62-253
74460|code|MOV             R5, R0|5-70
74462|code|CMP             R0, #0|0-40
74464|code|BEQ             loc_1233E|45-208
74466|code|LDR.W           R8, =dword_56B80|223-248-120-128
74470|code|B               loc_12316|22-224
74472|code|LDR.W           R0, [R8,#(dword_56B88 - 0x56B80)]|216-248-8-0
74476|code|BL              sub_1577C|3-240-70-250
74480|code|MOV             R1, R4|33-70
74482|code|MOV             R9, R0|129-70
74484|code|MOV             R0, R6|48-70
74486|code|CMP.W           R9, #0|185-241-0-15
74490|code|BEQ             loc_12310|9-208
74492|code|BL              sub_14398|2-240-76-248
74496|code|LDR.W           R1, [R9,#4]|217-248-4-16
74500|code|MOV             R0, R7|56-70
74502|code|BL              sub_137B0|1-240-83-250
74506|code|MOV             R0, R5|40-70
74508|code|BL              sub_13DE4|1-240-106-253
74512|code|MOV             R0, R4; ptr|32-70
74514|code|BLX             free|247-247-44-235
74518|code|MOV             R0, R5|40-70
74520|code|BL              sub_14C2C|2-240-136-252
74524|code|LDR             R1, =(sub_12080+1)|12-73
74526|code|MOV             R4, R0|4-70
74528|code|MOV             R2, R0|2-70
74530|code|CMP             R0, #0|0-40
74532|code|BNE             loc_122E8|224-209
74534|code|MOV             R0, R5|40-70
74536|code|BL              sub_144F8|2-240-230-248
74540|code|MOV             R0, R6|48-70
74542|code|MOV             R1, R7|57-70
74544|code|BL              sub_137B0|1-240-62-250
74548|code|MOV             R0, R7|56-70
74550|code|POP.W           {R3-R9,LR}|189-232-248-67
74554|code|B.W             sub_145A0|2-240-49-185
74558|code|LDR             R1, =aHostlistIterat_2; "hostlist_iterator_create failed"|5-73
74560|code|BL              sub_12AC4|0-240-192-251
74564|code|B               loc_122E2|205-231
74566|code|LDR             R1, =aHostlistCreate_0; "hostlist_create failed"|4-73
74568|code|BL              sub_12AC4|0-240-188-251
74572|code|B               loc_122D6|195-231
74574|data|ALIGN 0x10|0-191
74576|data|DCD sub_12080+1|129-32-1-0
74580|data|DCD aHostlistIterat_2; "hostlist_iterator_create failed"|44-182-1-0
74584|data|DCD aHostlistCreate_0; "hostlist_create failed"|152-182-1-0
74588|data|DCD dword_56B80|128-107-5-0
74592|code|PUSH            {R4-R6,LR}|112-181
74594|code|MOV             R2, R0|2-70
74596|code|LDR             R4, =dword_56B80|19-76
74598|code|MOV             R5, R0|5-70
74600|code|MOV             R6, R1|14-70
74602|code|SUB             SP, SP, #8|130-176
74604|code|LDR             R1, =(sub_12080+1)|18-73
74606|code|LDR             R0, [R4,#(dword_56B88 - 0x56B80)]|160-104
74608|code|BL              sub_1577C|3-240-4-250
74612|code|CBZ             R0, loc_1237C|16-177
74614|code|MOVS            R0, #0|0-32
74616|code|ADD             SP, SP, #8|2-176
74618|code|POP             {R4-R6,PC}|112-189
74620|code|MOVS            R0, #8|8-32
74622|code|BL              sub_16730|4-240-215-249
74626|code|MOV             R1, R0|1-70
74628|code|MOV             R0, R5|40-70
74630|code|STR             R1, [SP,#0x18+var_14]|1-145
74632|code|BL              sub_168F8|4-240-182-250
74636|code|LDR             R1, [SP,#0x18+var_14]|1-153
74638|code|MOV             R3, R0|3-70
74640|code|MOV             R0, R6|48-70
74642|code|STR             R3, [R1]|11-96
74644|code|BL              sub_14BB8|2-240-16-252
74648|code|LDR             R1, [SP,#0x18+var_14]|1-153
74650|code|MOV             R5, R0|5-70
74652|code|STR             R0, [R1,#4]|72-96
74654|code|CBZ             R0, loc_123AA|32-177
74656|code|LDR             R0, [R4,#(dword_56B88 - 0x56B80)]|160-104
74658|code|BL              sub_15A00|3-240-45-251
74662|code|MOVS            R0, #1|1-32
74664|code|B               loc_12378|230-231
74666|code|MOV             R0, R1|8-70
74668|code|BL              sub_12060|255-247-88-254
74672|code|MOV             R0, R5|40-70
74674|code|B               loc_12378|225-231
74676|data|DCD dword_56B80|128-107-5-0
74680|data|DCD sub_12080+1|129-32-1-0
74684|code|PUSH            {R4,LR}|16-181
74686|code|MOV             R4, R0|4-70
74688|code|CBZ             R0, loc_123DA|88-177
74690|code|LDR             R0, [R0]|0-104
74692|code|BL              sub_1687C|4-240-90-250
74696|code|LDR             R0, [R4,#4]|96-104
74698|code|CBZ             R0, loc_123D0|8-177
74700|code|BL              sub_1687C|4-240-86-250
74704|code|MOV             R0, R4|32-70
74706|code|POP.W           {R4,LR}|189-232-16-64
74710|code|B.W             sub_1687C|4-240-81-186
74714|code|LDR             R0, =aPlugVoid0; "plug != ((void *)0)"|3-72
74716|code|MOVS            R2, #0x4D ; 'M'; line|77-34
74718|code|LDR             R1, =unk_1B744; file|3-73
74720|code|LDR             R3, =aDestroyPlug; "_destroy_plug"|3-75
74722|code|BLX             __assert_fail|247-247-186-236
74726|data|ALIGN 4|0-191
74728|data|DCD aPlugVoid0; "plug != ((void *)0)"|48-183-1-0
74732|data|DCD unk_1B744|68-183-1-0
74736|data|DCD aDestroyPlug; "_destroy_plug"|176-182-1-0
74740|code|PUSH            {R3-R5,LR}|56-181
74742|code|MOV             R5, R0|5-70
74744|code|MOVS            R0, #8|8-32
74746|code|BL              sub_16730|4-240-153-249
74750|code|MOV             R4, R0|4-70
74752|code|CBZ             R5, loc_12412|61-177
74754|code|MOV             R0, R5|40-70
74756|code|BL              sub_168F8|4-240-120-250
74760|code|MOVS            R3, #0|0-35
74762|code|STR             R3, [R4,#4]|99-96
74764|code|STR             R0, [R4]|32-96
74766|code|MOV             R0, R4|32-70
74768|code|POP             {R3-R5,PC}|56-189
74770|code|LDR             R0, =(aHostnameVoid0+4); assertion|3-72
74772|code|MOVS            R2, #0x43 ; 'C'; line|67-34
74774|code|LDR             R1, =unk_1B744; file|3-73
74776|code|LDR             R3, =aCreatePlug; "_create_plug"|3-75
74778|code|BLX             __assert_fail|247-247-158-236
74782|data|ALIGN 0x10|0-191
74784|data|DCD aHostnameVoid0+4; "name != ((void *)0)"|68-188-1-0
74788|data|DCD unk_1B744|68-183-1-0
74792|data|DCD aCreatePlug; "_create_plug"|192-182-1-0
74796|code|PUSH            {R4-R6,LR}|112-181
74798|code|MOV             R5, R0|5-70
74800|code|MOVS            R0, #0xC|12-32
74802|code|BL              sub_16730|4-240-125-249
74806|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
74814|code|MOV             R4, R0|4-70
74816|code|LDR             R0, =(sub_123BC+1)|16-72
74818|code|STR             R3, [R4]|35-96
74820|code|BL              sub_15530|3-240-116-248
74824|code|MOVS            R3, #0|0-35
74826|code|STR             R3, [R4,#8]|163-96
74828|code|STR             R0, [R4,#4]|96-96
74830|code|CBZ             R5, loc_1247E|181-177
74832|code|MOV             R0, R5|40-70
74834|code|BL              sub_15B98|3-240-161-251
74838|code|MOV             R5, R0|5-70
74840|code|B               loc_12468|6-224
74842|code|LDR             R6, [R4,#4]|102-104
74844|code|BL              sub_123F4|255-247-202-255
74848|code|MOV             R1, R0|1-70
74850|code|MOV             R0, R6|48-70
74852|code|BL              sub_156BC|3-240-42-249
74856|code|MOV             R0, R5|40-70
74858|code|BL              sub_15D20|3-240-89-252
74862|code|MOV             R3, R0|3-70
74864|code|CMP             R3, #0|0-43
74866|code|BNE             loc_1245A|242-209
74868|code|MOV             R0, R5|40-70
74870|code|BL              sub_15C70|3-240-251-251
74874|code|MOVS            R3, #1|1-35
74876|code|STR             R3, [R4,#8]|163-96
74878|code|MOV             R0, R4|32-70
74880|code|POP             {R4-R6,PC}|112-189
74882|data|ALIGN 4|0-191
74884|data|DCD sub_123BC+1|189-35-1-0
74888|code|PUSH            {R4,LR}|16-181
74890|code|MOV             R4, R0|4-70
74892|code|CBZ             R0, loc_124B0|128-177
74894|code|LDR             R2, [R0]|2-104
74896|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
74904|code|CMP             R2, R3|154-66
74906|code|BNE             loc_124BC|15-209
74908|code|MOVS            R3, #0|0-35
74910|code|LDR             R0, [R0,#4]|64-104
74912|code|STR             R3, [R4]|35-96
74914|code|BL              sub_15570|3-240-101-248
74918|code|MOV             R0, R4|32-70
74920|code|POP.W           {R4,LR}|189-232-16-64
74924|code|B.W             sub_1687C|4-240-230-185
74928|code|LDR             R0, =aPlVoid0; "pl != ((void *)0)"|5-72
74930|code|MOVS            R2, #0x6E ; 'n'; line|110-34
74932|code|LDR             R1, =unk_1B744; file|5-73
74934|code|LDR             R3, =aPluglistDestro; "pluglist_destroy"|6-75
74936|code|BLX             __assert_fail|247-247-78-236
74940|code|LDR             R0, =aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|5-72
74942|code|MOVS            R2, #0x6F ; 'o'; line|111-34
74944|code|LDR             R1, =unk_1B744; file|2-73
74946|code|LDR             R3, =aPluglistDestro; "pluglist_destroy"|3-75
74948|code|BLX             __assert_fail|247-247-72-236
74952|data|DCD aPlVoid0; "pl != ((void *)0)"|80-183-1-0
74956|data|DCD unk_1B744|68-183-1-0
74960|data|DCD aPluglistDestro; "pluglist_destroy"|208-182-1-0
74964|data|DCD aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|100-183-1-0
74968|code|PUSH            {R3-R5,LR}|56-181
74970|code|MOV             R5, R0|5-70
74972|code|MOVS            R0, #8|8-32
74974|code|BL              sub_16730|4-240-39-249
74978|code|MOV             R3, #0xFEEDFEFE|79-246-254-99-207-246-237-99
74986|code|MOV             R4, R0|4-70
74988|code|LDR             R0, [R5,#4]|104-104
74990|code|STR             R3, [R4]|35-96
74992|code|BL              sub_15B98|3-240-82-251
74996|code|STR             R0, [R4,#4]|96-96
74998|code|MOV             R0, R4|32-70
75000|code|POP             {R3-R5,PC}|56-189
75002|data|ALIGN 4|0-191
75004|code|PUSH            {R4,LR}|16-181
75006|code|MOV             R4, R0|4-70
75008|code|CBZ             R0, loc_12524|128-177
75010|code|LDR             R2, [R0]|2-104
75012|code|MOV             R3, #0xFEEDFEFE|79-246-254-99-207-246-237-99
75020|code|CMP             R2, R3|154-66
75022|code|BNE             loc_12532|16-209
75024|code|MOVS            R3, #0|0-35
75026|code|LDR             R0, [R0,#4]|64-104
75028|code|STR             R3, [R4]|35-96
75030|code|BL              sub_15C70|3-240-171-251
75034|code|MOV             R0, R4|32-70
75036|code|POP.W           {R4,LR}|189-232-16-64
75040|code|B.W             sub_1687C|4-240-172-185
75044|code|LDR             R0, =aItrVoid0; "itr != ((void *)0)"|6-72
75046|code|MOV.W           R2, #0x100; line|79-244-128-114
75050|code|LDR             R1, =unk_1B744; file|6-73
75052|code|LDR             R3, =aPluglistIterat; "pluglist_iterator_destroy"|6-75
75054|code|BLX             __assert_fail|247-247-20-236
75058|code|LDR             R0, =aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|6-72
75060|code|MOVW            R2, #0x101; line|64-242-1-18
75064|code|LDR             R1, =unk_1B744; file|2-73
75066|code|LDR             R3, =aPluglistIterat; "pluglist_iterator_destroy"|3-75
75068|code|BLX             __assert_fail|247-247-12-236
75072|data|DCD aItrVoid0; "itr != ((void *)0)"|124-183-1-0
75076|data|DCD unk_1B744|68-183-1-0
75080|data|DCD aPluglistIterat; "pluglist_iterator_destroy"|228-182-1-0
75084|data|DCD aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|144-183-1-0
75088|code|PUSH            {R3,LR}|8-181
75090|code|CBZ             R0, loc_1256C|88-177
75092|code|LDR             R2, [R0]|2-104
75094|code|MOV             R3, #0xFEEDFEFE|79-246-254-99-207-246-237-99
75102|code|CMP             R2, R3|154-66
75104|code|BNE             loc_1257A|11-209
75106|code|LDR             R0, [R0,#4]|64-104
75108|code|POP.W           {R3,LR}|189-232-8-64
75112|code|B.W             sub_15D20|3-240-218-187
75116|code|LDR             R0, =aItrVoid0; "itr != ((void *)0)"|6-72
75118|code|MOVW            R2, #0x109; line|64-242-9-18
75122|code|LDR             R1, =unk_1B744; file|6-73
75124|code|LDR             R3, =aPluglistNext; "pluglist_next"|6-75
75126|code|BLX             __assert_fail|247-247-240-235
75130|code|LDR             R0, =aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|6-72
75132|code|MOV.W           R2, #0x10A; line|79-244-133-114
75136|code|LDR             R1, =unk_1B744; file|2-73
75138|code|LDR             R3, =aPluglistNext; "pluglist_next"|3-75
75140|code|BLX             __assert_fail|247-247-232-235
75144|data|DCD aItrVoid0; "itr != ((void *)0)"|124-183-1-0
75148|data|DCD unk_1B744|68-183-1-0
75152|data|DCD aPluglistNext; "pluglist_next"|0-183-1-0
75156|data|DCD aItrMagic0xfeed; "itr->magic == 0xfeedfefe"|144-183-1-0
75160|code|PUSH            {R4-R6,LR}|112-181
75162|code|MOV             R6, R1|14-70
75164|code|BL              sub_124D8|255-247-156-255
75168|code|MOV             R5, R0|5-70
75170|code|B               loc_125AC|3-224
75172|code|LDR             R0, [R4]; s1|32-104
75174|code|BLX             strcmp|247-247-170-233
75178|code|CBZ             R0, loc_125BA|48-177
75180|code|MOV             R0, R5|40-70
75182|code|BL              sub_12550|255-247-207-255
75186|code|MOV             R1, R6; s2|49-70
75188|code|MOV             R4, R0|4-70
75190|code|CMP             R0, #0|0-40
75192|code|BNE             loc_125A4|244-209
75194|code|MOV             R0, R5|40-70
75196|code|BL              sub_124FC|255-247-158-255
75200|code|MOV             R0, R4|32-70
75202|code|POP             {R4-R6,PC}|112-189
75204|code|PUSH            {R3-R7,LR}|248-181
75206|code|MOV             R7, R1|15-70
75208|code|MOV             R1, R2|17-70
75210|code|MOV             R6, R2|22-70
75212|code|MOV             R5, R0|5-70
75214|code|BL              sub_12598|255-247-227-255
75218|code|MOV             R4, R0|4-70
75220|code|CBZ             R0, loc_125DE|24-177
75222|code|LDR             R5, [R4,#4]|101-104
75224|code|CBZ             R5, loc_125E6|45-177
75226|code|MOVS            R0, #3|3-32
75228|code|POP             {R3-R7,PC}|248-189
75230|code|LDR             R3, [R5,#8]|171-104
75232|code|CBZ             R3, loc_125F4|67-177
75234|code|MOVS            R0, #2|2-32
75236|code|POP             {R3-R7,PC}|248-189
75238|code|MOV             R0, R7|56-70
75240|code|BL              sub_168F8|4-240-134-249
75244|code|MOV             R3, R0|3-70
75246|code|MOV             R0, R5|40-70
75248|code|STR             R3, [R4,#4]|99-96
75250|code|POP             {R3-R7,PC}|248-189
75252|code|MOV             R0, R6|48-70
75254|code|BL              sub_123F4|255-247-253-254
75258|code|MOV             R4, R0|4-70
75260|code|LDR             R0, [R5,#4]|104-104
75262|code|MOV             R1, R4|33-70
75264|code|BL              sub_15A00|3-240-254-249
75268|code|B               loc_125D6|231-231
75270|data|ALIGN 4|0-191
75272|code|PUSH.W          {R3-R11,LR}|45-233-248-79
75276|code|MOV             R6, R0|6-70
75278|code|MOV             R4, R2|20-70
75280|code|CMP             R0, #0|0-40
75282|code|BEQ.W           loc_1275C|0-240-163-128
75286|code|LDR             R2, [R0]|2-104
75288|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
75296|code|CMP             R2, R3|154-66
75298|code|BNE.W           loc_12750|64-240-149-128
75302|code|CMP             R1, #0|0-41
75304|code|BEQ.W           loc_12744|0-240-140-128
75308|code|MOV             R0, R1|8-70
75310|code|CMP             R4, #0|0-44
75312|code|BEQ             loc_126C8|74-208
75314|code|BL              sub_14BB8|2-240-193-250
75318|code|MOV             R10, R0|130-70
75320|code|BL              sub_13D58|1-240-142-251
75324|code|MOV             R8, R0|128-70
75326|code|MOV             R0, R4|32-70
75328|code|BL              sub_14BB8|2-240-186-250
75332|code|MOV             R9, R0|129-70
75334|code|BL              sub_13D58|1-240-135-251
75338|code|MOV             R7, R0|7-70
75340|code|MOV             R0, R8|64-70
75342|code|BL              sub_14C2C|2-240-237-250
75346|code|MOV             R4, R0|4-70
75348|code|MOV             R0, R7|56-70
75350|code|CBZ             R4, loc_1268C|204-177
75352|code|BL              sub_14C2C|2-240-232-250
75356|code|MOV             R5, R0|5-70
75358|code|CBZ             R0, loc_126A0|248-177
75360|code|MOV             R2, R0|2-70
75362|code|MOV             R1, R4|33-70
75364|code|MOV             R0, R6|48-70
75366|code|BL              sub_125C4|255-247-173-255
75370|code|MOV             R11, R0|131-70
75372|code|MOV             R0, R4; ptr|32-70
75374|code|BLX             free|247-247-126-233
75378|code|MOV             R0, R5; ptr|40-70
75380|code|BLX             free|247-247-122-233
75384|code|CMP.W           R11, #0|187-241-0-15
75388|code|BNE             loc_126AA|21-209
75390|code|MOV             R0, R8|64-70
75392|code|BL              sub_14C2C|2-240-212-250
75396|code|MOV             R4, R0|4-70
75398|code|MOV             R0, R7|56-70
75400|code|CMP             R4, #0|0-44
75402|code|BNE             loc_12658|229-209
75404|code|BL              sub_14C2C|2-240-206-250
75408|code|CMP             R0, #0|0-40
75410|code|ITE EQ|12-191
75412|code|MOVEQ           R11, R0|131-70
75414|code|MOVNE.W         R11, #5|79-240-5-11
75418|code|BLX             free|247-247-104-233
75422|code|B               loc_126AA|4-224
75424|code|MOV             R0, R4; ptr|32-70
75426|code|MOV.W           R11, #4|79-240-4-11
75430|code|BLX             free|247-247-98-233
75434|code|MOV             R0, R7|56-70
75436|code|BL              sub_144F8|1-240-36-255
75440|code|MOV             R0, R8|64-70
75442|code|BL              sub_144F8|1-240-33-255
75446|code|MOV             R0, R9|72-70
75448|code|BL              sub_145A0|1-240-114-255
75452|code|MOV             R0, R10|80-70
75454|code|BL              sub_145A0|1-240-111-255
75458|code|MOV             R0, R11|88-70
75460|code|POP.W           {R3-R11,PC}|189-232-248-143
75464|code|BL              sub_14BB8|2-240-118-250
75468|code|MOV             R7, R0|7-70
75470|code|BL              sub_13D58|1-240-67-251
75474|code|MOV             R5, R0|5-70
75476|code|MOV             R0, R5|40-70
75478|code|BL              sub_14C2C|2-240-169-250
75482|code|MOV             R4, R0|4-70
75484|code|CMP             R0, #0|0-40
75486|code|BEQ             loc_12740|47-208
75488|code|LDR             R3, [R6,#8]|179-104
75490|code|MOV             R0, R6|48-70
75492|code|CBZ             R3, loc_1272E|27-179
75494|code|BL              sub_124D8|255-247-247-254
75498|code|MOV             R9, R0|129-70
75500|code|MOV             R0, R9|72-70
75502|code|BL              sub_12550|255-247-47-255
75506|code|MOV             R8, R0|128-70
75508|code|CBZ             R0, loc_1273A|8-179
75510|code|LDR.W           R3, [R8,#4]|216-248-4-48
75514|code|CMP             R3, #0|0-43
75516|code|BNE             loc_126EC|246-209
75518|code|MOV             R0, R4|32-70
75520|code|MOV             R11, R3|155-70
75522|code|BL              sub_168F8|4-240-249-248
75526|code|STR.W           R0, [R8,#4]|200-248-4-0
75530|code|MOV             R0, R9|72-70
75532|code|BL              sub_124FC|255-247-246-254
75536|code|MOV             R0, R4; ptr|32-70
75538|code|BLX             free|247-247-44-233
75542|code|CMP.W           R11, #0|187-241-0-15
75546|code|BEQ             loc_126D4|219-208
75548|code|MOV             R0, R5|40-70
75550|code|BL              sub_144F8|1-240-235-254
75554|code|MOV             R0, R7|56-70
75556|code|BL              sub_145A0|1-240-60-255
75560|code|MOV             R0, R11|88-70
75562|code|POP.W           {R3-R11,PC}|189-232-248-143
75566|code|MOV             R1, R4|33-70
75568|code|MOV             R2, R4|34-70
75570|code|BL              sub_125C4|255-247-71-255
75574|code|MOV             R11, R0|131-70
75576|code|B               loc_12710|234-231
75578|code|MOV.W           R11, #4|79-240-4-11
75582|code|B               loc_1270A|228-231
75584|code|MOV             R11, R0|131-70
75586|code|B               loc_1271C|235-231
75588|code|LDR             R0, =aNodelistVoid0; "nodelist != ((void *)0)"|8-72
75590|code|MOVS            R2, #0xB8; line|184-34
75592|code|LDR             R1, =unk_1B744; file|8-73
75594|code|LDR             R3, =aPluglistMap; "pluglist_map"|9-75
75596|code|BLX             __assert_fail|247-247-4-235
75600|code|LDR             R0, =aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|8-72
75602|code|MOVS            R2, #0xB7; line|183-34
75604|code|LDR             R1, =unk_1B744; file|5-73
75606|code|LDR             R3, =aPluglistMap; "pluglist_map"|6-75
75608|code|BLX             __assert_fail|247-247-254-234
75612|code|LDR             R0, =aPlVoid0; "pl != ((void *)0)"|6-72
75614|code|MOVS            R2, #0xB6; line|182-34
75616|code|LDR             R1, =unk_1B744; file|2-73
75618|code|LDR             R3, =aPluglistMap; "pluglist_map"|3-75
75620|code|BLX             __assert_fail|247-247-248-234
75624|data|DCD aNodelistVoid0; "nodelist != ((void *)0)"|172-183-1-0
75628|data|DCD unk_1B744|68-183-1-0
75632|data|DCD aPluglistMap; "pluglist_map"|16-183-1-0
75636|data|DCD aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|100-183-1-0
75640|data|DCD aPlVoid0; "pl != ((void *)0)"|80-183-1-0
75644|code|PUSH            {R3,LR}|8-181
75646|code|CBZ             R0, loc_127A0|120-177
75648|code|LDR             R2, [R0]|2-104
75650|code|MOV             R3, #0xFEEDB0B|77-246-11-51-192-246-238-115
75658|code|CMP             R2, R3|154-66
75660|code|BNE             loc_127BC|22-209
75662|code|CBZ             R1, loc_127AE|113-177
75664|code|BL              sub_12598|255-247-2-255
75668|code|CBZ             R0, locret_1279E|24-177
75670|code|LDR             R3, [R0,#4]|67-104
75672|code|CMP             R3, #0|0-43
75674|code|IT EQ|8-191
75676|code|MOVEQ           R0, #0|0-32
75678|code|POP             {R3,PC}|8-189
75680|code|LDR             R0, =aPlVoid0; "pl != ((void *)0)"|10-72
75682|code|MOVW            R2, #0x113; line|64-242-19-18
75686|code|LDR             R1, =unk_1B744; file|10-73
75688|code|LDR             R3, =aPluglistFind; "pluglist_find"|10-75
75690|code|BLX             __assert_fail|247-247-214-234
75694|code|LDR             R0, =(aHostnameVoid0+4); assertion|10-72
75696|code|MOVW            R2, #0x115; line|64-242-21-18
75700|code|LDR             R1, =unk_1B744; file|6-73
75702|code|LDR             R3, =aPluglistFind; "pluglist_find"|7-75
75704|code|BLX             __assert_fail|247-247-206-234
75708|code|LDR             R0, =aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|7-72
75710|code|MOV.W           R2, #0x114; line|79-244-138-114
75714|code|LDR             R1, =unk_1B744; file|3-73
75716|code|LDR             R3, =aPluglistFind; "pluglist_find"|3-75
75718|code|BLX             __assert_fail|247-247-200-234
75722|data|ALIGN 4|0-191
75724|data|DCD aPlVoid0; "pl != ((void *)0)"|80-183-1-0
75728|data|DCD unk_1B744|68-183-1-0
75732|data|DCD aPluglistFind; "pluglist_find"|32-183-1-0
75736|data|DCD aHostnameVoid0+4; "name != ((void *)0)"|68-188-1-0
75740|data|DCD aPlMagic0xfeedb; "pl->magic == 0xfeedb0b"|100-183-1-0
75744|code|MOV             R3, #0x24A08|68-246-8-35-192-242-2-3
75752|code|MOVS            R2, #0|0-34
75754|code|STR             R2, [R3]|26-96
75756|code|BX              LR|112-71
75758|data|ALIGN 0x10|0-191
75760|code|MOV             R3, #0x56B90|70-246-144-51-192-242-5-3
75768|code|STR             R0, [R3]|24-96
75770|code|BX              LR|112-71
75772|code|PUSH            {R1-R3}|14-180
75774|code|LDR             R1, =dword_56B90|54-73
75776|code|PUSH            {R4-R7,LR}|240-181
75778|code|SUB.W           SP, SP, #0x418|173-245-131-109
75782|code|LDR             R5, =__stack_chk_guard|53-77
75784|code|LDR             R4, [R1]|12-104
75786|code|LDR.W           R2, [SP,#0x438+varg_r1]; format|221-248-44-36
75790|code|LDR             R3, [R5]|43-104
75792|code|ANDS            R4, R0|4-64
75794|code|CMP             R4, R0|132-66
75796|code|STR.W           R3, [SP,#0x438+var_24]|205-248-20-52
75800|code|BEQ             loc_12832|11-208
75802|code|LDR.W           R2, [SP,#0x438+var_24]|221-248-20-36
75806|code|LDR             R3, [R5]|43-104
75808|code|CMP             R2, R3|154-66
75810|code|BNE             loc_128D4|87-209
75812|code|ADD             SP, SP, #0x18|6-176
75814|code|ADD.W           SP, SP, #0x400|13-245-128-109
75818|code|POP.W           {R4-R7,LR}|189-232-240-64
75822|code|ADD             SP, SP, #0xC|3-176
75824|code|BX              LR|112-71
75826|code|ADD.W           R6, SP, #0x438+varg_r2|13-245-134-102
75830|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
75834|code|ADD             R0, SP, #0x438+s; s|5-168
75836|code|STR             R6, [SP,#0x438+var_42C]|3-150
75838|code|MOV             R3, R6; arg|51-70
75840|code|BLX             vsnprintf|247-247-72-234
75844|code|LDR             R3, =dword_24A08|38-75
75846|code|LDR             R1, [R3]|25-104
75848|code|CBNZ            R1, loc_1287C|193-185
75850|code|LDR.W           LR, =unk_1B7C4|223-248-168-224
75854|code|CMP             R4, #1|1-44
75856|code|IT NE|24-191
75858|code|MOVNE           R3, LR|115-70
75860|code|BNE             loc_1285E|3-209
75862|code|B               loc_12874|13-224
75864|code|ADDS            R3, #8|8-51
75866|code|CMP             R4, R2|148-66
75868|code|BEQ             loc_12874|10-208
75870|code|LDR             R2, [R3,#8]|154-104
75872|code|ADDS            R1, #1|1-49
75874|code|CMP             R2, #0|0-42
75876|code|BNE             loc_12858|248-209
75878|code|LDR             R2, =aUnknown; "<unknown>"|31-74
75880|code|MOVS            R0, #7; pri|7-32
75882|code|LDR             R1, =aSS; "%s: %s"|31-73
75884|code|ADD             R3, SP, #0x438+s|5-171
75886|code|BLX             syslog|247-247-26-234
75890|code|B               loc_1281A|210-231
75892|code|ADD.W           R1, LR, R1,LSL#3|14-235-193-1
75896|code|LDR             R2, [R1,#4]|74-104
75898|code|B               loc_12868|245-231
75900|code|LDR             R3, =stderr|27-75
75902|code|MOVS            R0, #0; timer|0-32
75904|code|LDR             R7, [R3]|31-104
75906|code|BLX             time|247-247-146-232
75910|code|MOV             R3, R0|3-70
75912|code|ADD             R0, SP, #0x438+timer; timer|4-168
75914|code|STR             R3, [SP,#0x438+timer]|4-147
75916|code|BLX             ctime|247-247-158-232
75920|code|MOV             R6, R0|6-70
75922|code|BLX             strlen|247-247-94-233
75926|code|LDR.W           LR, =unk_1B7C4|223-248-92-224
75930|code|ADDS            R3, R6, R0|51-24
75932|code|MOVS            R0, #0|0-32
75934|code|CMP             R4, #1|1-44
75936|code|STRB.W          R0, [R3,#-1]|3-248-1-12
75940|code|IT NE|24-191
75942|code|MOVNE           R3, LR|115-70
75944|code|BNE             loc_128B2|3-209
75946|code|B               loc_128CC|15-224
75948|code|ADDS            R3, #8|8-51
75950|code|CMP             R4, R2|148-66
75952|code|BEQ             loc_128CC|12-208
75954|code|LDR             R2, [R3,#8]|154-104
75956|code|ADDS            R0, #1|1-48
75958|code|CMP             R2, #0|0-42
75960|code|BNE             loc_128AC|248-209
75962|code|LDR             R3, =aUnknown; "<unknown>"|10-75
75964|code|ADD             R2, SP, #0x438+s|5-170
75966|code|MOV             R0, R7; stream|56-70
75968|code|STR             R2, [SP,#0x438+var_438]|0-146
75970|code|MOV             R2, R6|50-70
75972|code|LDR             R1, =aSSS_0; "%s %s: %s\n"|10-73
75974|code|BLX             fprintf|247-247-86-233
75978|code|B               loc_1281A|166-231
75980|code|ADD.W           R0, LR, R0,LSL#3|14-235-192-0
75984|code|LDR             R3, [R0,#4]|67-104
75986|code|B               loc_128BC|243-231
75988|code|BLX             __stack_chk_fail|247-247-128-232
75992|data|DCD dword_56B90|144-107-5-0
75996|data|DCD __stack_chk_guard|16-74-2-0
76000|data|DCD dword_24A08|8-74-2-0
76004|data|DCD aUnknown; "<unknown>"|128-150-1-0
76008|data|DCD aSS; "%s: %s"|160-141-1-0
76012|data|DCD stderr|24-74-2-0
76016|data|DCD aSSS_0; "%s %s: %s\n"|8-184-1-0
76020|data|DCD unk_1B7C4|196-183-1-0
76024|code|PUSH.W          {R4-R10,LR}|45-233-240-71
76028|code|MOV.W           R8, R1,LSL#2|79-234-129-8
76032|code|MOV             R9, R0|129-70
76034|code|ADD.W           R0, R8, #1|8-241-1-0
76038|code|MOV             R6, R1|14-70
76040|code|BL              sub_16730|3-240-18-255
76044|code|MOVS            R5, #0|0-37
76046|code|CMP             R6, #0|0-46
76048|code|MOV             R7, R0|7-70
76050|code|BLE             loc_12992|62-221
76052|code|MOV             R4, R5|44-70
76054|code|B               loc_12950|27-224
76056|code|CMP.W           R10, #0xD|186-241-13-15
76060|code|BEQ             loc_12976|43-208
76062|code|CMP.W           R10, #9|186-241-9-15
76066|code|BEQ             loc_12968|33-208
76068|code|BLX             __ctype_b_loc|247-247-252-232
76072|code|LDR             R3, [R0]|3-104
76074|code|LDRH.W          R3, [R3,R10,LSL#1]|51-248-26-48
76078|code|LSLS            R3, R3, #0x11|91-4
76080|code|BPL             loc_12984|40-213
76082|code|STRB.W          R10, [R7,R5]|7-248-5-160
76086|code|ADDS            R5, #1|1-53
76088|code|SUBS            R3, R4, R6|163-27
76090|code|IT NE|24-191
76092|code|MOVNE           R3, #1|1-35
76094|code|CMP             R5, R8|69-69
76096|code|ITE LE|212-191
76098|code|MOVLE           R3, #0|0-35
76100|code|ANDGT.W         R3, R3, #1|3-240-1-3
76104|code|CBNZ            R3, loc_1299C|67-187
76106|code|ADDS            R4, #1|1-52
76108|code|CMP             R4, R6|180-66
76110|code|BEQ             loc_12992|32-208
76112|code|LDRB.W          R10, [R9,R4]|25-248-4-160
76116|code|CMP.W           R10, #0xA|186-241-10-15
76120|code|BNE             loc_12918|222-209
76122|code|ADDS            R0, R7, R5; dest|120-25
76124|code|LDR             R1, =aN; "\\n"|18-73
76126|code|MOVS            R2, #3; n|3-34
76128|code|ADDS            R5, #2|2-53
76130|code|BLX             memcpy|247-247-28-232
76134|code|B               loc_12938|231-231
76136|code|ADDS            R0, R7, R5; dest|120-25
76138|code|LDR             R1, =aT; "\\t"|16-73
76140|code|MOVS            R2, #3; n|3-34
76142|code|ADDS            R5, #2|2-53
76144|code|BLX             memcpy|247-247-20-232
76148|code|B               loc_12938|224-231
76150|code|ADDS            R0, R7, R5; dest|120-25
76152|code|LDR             R1, =aR; "\\r"|13-73
76154|code|MOVS            R2, #3; n|3-34
76156|code|ADDS            R5, #2|2-53
76158|code|BLX             memcpy|247-247-14-232
76162|code|B               loc_12938|217-231
76164|code|ADDS            R0, R7, R5; s|120-25
76166|code|LDR             R1, =a3o; "\\%.3o"|11-73
76168|code|MOV             R2, R10|82-70
76170|code|ADDS            R5, #4|4-53
76172|code|BLX             sprintf|247-247-144-233
76176|code|B               loc_12938|210-231
76178|code|MOVS            R3, #0|0-35
76180|code|MOV             R0, R7|56-70
76182|code|STRB            R3, [R7,R5]|123-85
76184|code|POP.W           {R4-R10,PC}|189-232-240-135
76188|code|LDR             R0, =aJStrsizeILen; "j <= strsize || i == len"|6-72
76190|code|MOVS            R2, #0x91; line|145-34
76192|code|LDR             R1, =aDebugC; "debug.c"|6-73
76194|code|LDR             R3, =aDbgMemstr; "dbg_memstr"|7-75
76196|code|BLX             __assert_fail|247-247-216-233
76200|data|DCD aN; "\\n"|24-184-1-0
76204|data|DCD aT; "\\t"|28-184-1-0
76208|data|DCD aR; "\\r"|20-184-1-0
76212|data|DCD a3o; "\\%.3o"|32-184-1-0
76216|data|DCD aJStrsizeILen; "j <= strsize || i == len"|40-184-1-0
76220|data|DCD aDebugC; "debug.c"|68-184-1-0
76224|data|DCD aDbgMemstr; "dbg_memstr"|252-183-1-0
76228|code|PUSH.W          {R4-R9,LR}|45-233-240-67
76232|code|SUB.W           SP, SP, #0x410|173-245-130-109
76236|code|LDR             R4, =__stack_chk_guard|40-76
76238|code|SUB             SP, SP, #4|129-176
76240|code|MOV             R6, R0|6-70
76242|code|MOV             R9, R1|137-70
76244|code|MOV             R8, R2|144-70
76246|code|LDR             R5, =dword_56B94|39-77
76248|code|LDR             R3, [R4]|35-104
76250|code|STR.W           R3, [SP,#0x430+var_24]|205-248-12-52
76254|code|BLX             __errno_location|247-247-226-232
76258|code|LDR             R3, [R5]|43-104
76260|code|LDR             R7, [R0]|7-104
76262|code|CMP             R3, #0|0-43
76264|code|BEQ             loc_12A60|58-208
76266|code|MOV             R3, R8; arg|67-70
76268|code|ADD             R0, SP, #0x430+s; s|3-168
76270|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
76274|code|MOV             R2, R9; format|74-70
76276|code|BLX             vsnprintf|247-247-110-233
76280|code|LDR             R3, =dword_24A0C|31-75
76282|code|LDR             R3, [R3]|27-104
76284|code|CBNZ            R6, loc_12A20|134-185
76286|code|CMP             R3, #0|0-43
76288|code|BNE             loc_12A50|38-209
76290|code|MOVS            R0, #3; pri|3-32
76292|code|LDR             R1, =(aRegcompFailedS+0x10); fmt|29-73
76294|code|ADD             R2, SP, #0x430+s|3-170
76296|code|BLX             syslog|247-247-76-233
76300|code|LDR.W           R2, [SP,#0x430+var_24]|221-248-12-36
76304|code|LDR             R3, [R4]|35-104
76306|code|CMP             R2, R3|154-66
76308|code|BNE             loc_12A6C|42-209
76310|code|ADD             SP, SP, #0x14|5-176
76312|code|ADD.W           SP, SP, #0x400|13-245-128-109
76316|code|POP.W           {R4-R9,PC}|189-232-240-131
76320|code|MOV             R0, R7; errnum|56-70
76322|code|CBZ             R3, loc_12A3E|99-177
76324|code|LDR             R3, =stderr|22-75
76326|code|LDR             R5, [R5]|45-104
76328|code|LDR             R6, [R3]|30-104
76330|code|BLX             strerror|247-247-90-232
76334|code|LDR             R1, =aSSS; "%s: %s: %s\n"|21-73
76336|code|MOV             R2, R5|42-70
76338|code|ADD             R3, SP, #0x430+s|3-171
76340|code|STR             R0, [SP,#0x430+var_430]|0-144
76342|code|MOV             R0, R6; stream|48-70
76344|code|BLX             fprintf|247-247-156-232
76348|code|B               loc_12A0C|230-231
76350|code|BLX             strerror|247-247-80-232
76354|code|LDR             R1, =aSS; "%s: %s"|17-73
76356|code|ADD             R2, SP, #0x430+s|3-170
76358|code|MOV             R3, R0|3-70
76360|code|MOVS            R0, #3; pri|3-32
76362|code|BLX             syslog|247-247-44-233
76366|code|B               loc_12A0C|221-231
76368|code|LDR             R3, =stderr|11-75
76370|code|LDR             R2, [R5]|42-104
76372|code|LDR             R1, =(aSSS+4); format|13-73
76374|code|LDR             R0, [R3]; stream|24-104
76376|code|ADD             R3, SP, #0x430+s|3-171
76378|code|BLX             fprintf|247-247-140-232
76382|code|B               loc_12A0C|213-231
76384|code|LDR             R0, =aErrProgVoid0; "err_prog != ((void *)0)"|11-72
76386|code|MOVS            R2, #0x49 ; 'I'; line|73-34
76388|code|LDR             R1, =aErrorC; "error.c"|11-73
76390|code|LDR             R3, =aVerr; "_verr"|12-75
76392|code|BLX             __assert_fail|247-247-118-233
76396|code|BLX             __stack_chk_fail|246-247-180-239
76400|data|DCD __stack_chk_guard|16-74-2-0
76404|data|DCD dword_56B94|148-107-5-0
76408|data|DCD dword_24A0C|12-74-2-0
76412|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
76416|data|DCD stderr|24-74-2-0
76420|data|DCD aSSS; "%s: %s: %s\n"|148-184-1-0
76424|data|DCD aSS; "%s: %s"|160-141-1-0
76428|data|DCD aSSS+4; "%s: %s\n"|152-184-1-0
76432|data|DCD aErrProgVoid0; "err_prog != ((void *)0)"|116-184-1-0
76436|data|DCD aErrorC; "error.c"|140-184-1-0
76440|data|DCD aVerr; "_verr"|108-184-1-0
76444|code|PUSH            {R4,LR}|16-181
76446|code|MOVS            R1, #0x2F ; '/'; c|47-33
76448|code|MOV             R4, R0|4-70
76450|code|BLX             strrchr|247-247-242-232
76454|code|CBZ             R0, loc_12AAA|0-177
76456|code|ADDS            R4, R0, #1|68-28
76458|code|LDR             R3, =dword_56B94|1-75
76460|code|STR             R4, [R3]|28-96
76462|code|POP             {R4,PC}|16-189
76464|data|DCD dword_56B94|148-107-5-0
76468|code|MOV             R3, #0x24A0C|68-246-12-35-192-242-2-3
76476|code|MOVS            R2, #0|0-34
76478|code|STR             R2, [R3]|26-96
76480|code|BX              LR|112-71
76482|data|ALIGN 4|0-191
76484|code|PUSH            {R1-R3}|14-180
76486|code|PUSH            {LR}|0-181
76488|code|SUB             SP, SP, #8|130-176
76490|code|ADD             R3, SP, #0x18+varg_r1|3-171
76492|code|LDR.W           R1, [R3],#4|83-248-4-27
76496|code|MOV             R2, R3|26-70
76498|code|STR             R3, [SP,#0x18+var_14]|1-147
76500|code|BL              sub_129C4|255-247-118-255
76504|code|BL              sub_16724|3-240-36-254
76508|code|MOV             R1, #0x1B8A0|75-246-160-1-192-242-1-1
76516|code|MOV             R2, R0|2-70
76518|code|MOVS            R0, #0x10|16-32
76520|code|BL              sub_127FC|255-247-136-254
76524|code|MOVS            R0, #1; status|1-32
76526|code|BLX             exit|247-247-36-232
76530|data|ALIGN 4|0-191
76532|code|PUSH            {R1-R3}|14-180
76534|code|PUSH            {LR}|0-181
76536|code|SUB             SP, SP, #8|130-176
76538|code|ADD             R2, SP, #0x18+varg_r1|3-170
76540|code|LDR.W           R1, [R2],#4|82-248-4-27
76544|code|STR             R2, [SP,#0x18+var_14]|1-146
76546|code|BL              sub_129C4|255-247-95-255
76550|code|ADD             SP, SP, #8|2-176
76552|code|POP.W           {LR}|93-248-4-235
76556|code|ADD             SP, SP, #0xC|3-176
76558|code|BX              LR|112-71
76560|code|MOVW            R1, #0xC520|76-242-32-81
76564|code|MOVS            R0, #1|1-32
76566|code|PUSH            {R3,LR}|8-181
76568|code|MOVT.W          R1, #1|192-242-1-1
76572|code|BL              sub_12AC4|255-247-210-255
76576|code|MOVW            R1, #0xB8C4|75-246-196-1
76580|code|MOVS            R0, #0|0-32
76582|code|PUSH            {R3,LR}|8-181
76584|code|MOVT.W          R1, #1|192-242-1-1
76588|code|BL              sub_12AC4|255-247-202-255
76592|code|CMP             R1, R3|153-66
76594|code|PUSH.W          {R4-R9}|45-233-240-3
76598|code|BEQ             loc_12C02|100-208
76600|code|MOV             R7, #0xCCCCCCCD|76-246-205-71-204-246-204-71
76608|code|LDR             R5, [R1]|13-104
76610|code|UMULL.W         R4, R0, R7, R0|167-251-0-64
76614|code|LSRS            R0, R0, #3|192-8
76616|code|BEQ             loc_12C06|93-208
76618|code|MOVS            R6, #1|1-38
76620|code|MOV             R4, R0|4-70
76622|code|UMULL.W         R8, R4, R7, R4|167-251-4-132
76626|code|ADDS            R6, #1|1-54
76628|code|LSRS            R4, R4, #3|228-8
76630|code|BNE             loc_12B4E|250-209
76632|code|CMP             R5, R6|181-66
76634|code|LDR             R4, [R3]|28-104
76636|code|ITE GT|204-191
76638|code|RSBGT.W         R6, R6, R5|198-235-5-6
76642|code|MOVLE           R6, #0|0-38
76644|code|MOVS            R7, #1|1-39
76646|code|CBZ             R0, loc_12B7C|72-177
76648|code|MOVW            R12, #0xCCCD|76-246-205-76
76652|code|MOVS            R7, #1|1-39
76654|code|MOVT.W          R12, #0xCCCC|204-246-204-76
76658|code|UMULL.W         R9, R0, R12, R0|172-251-0-144
76662|code|ADDS            R7, #1|1-55
76664|code|LSRS            R0, R0, #3|192-8
76666|code|BNE             loc_12B72|250-209
76668|code|MOV             R8, #0xCCCCCCCD|76-246-205-72-204-246-204-72
76676|code|CMP             R4, R7|188-66
76678|code|UMULL.W         R0, R2, R8, R2|168-251-2-2
76682|code|ITE GT|204-191
76684|code|RSBGT.W         R12, R7, R4|199-235-4-12
76688|code|MOVLE.W         R12, #0|79-240-0-12
76692|code|LSRS            R2, R2, #3|210-8
76694|code|BEQ             loc_12C0A|56-208
76696|code|MOVS            R7, #1|1-39
76698|code|MOV             R0, R2|16-70
76700|code|UMULL.W         R9, R0, R8, R0|168-251-0-144
76704|code|ADDS            R7, #1|1-55
76706|code|LSRS            R0, R0, #3|192-8
76708|code|BNE             loc_12B9C|250-209
76710|code|CMP             R4, R7|188-66
76712|code|ITE GT|204-191
76714|code|RSBGT.W         R7, R7, R4|199-235-4-7
76718|code|MOVLE           R7, #0|0-39
76720|code|MOVS            R0, #1|1-32
76722|code|CBZ             R2, loc_12BC8|74-177
76724|code|MOVW            R8, #0xCCCD|76-246-205-72
76728|code|MOVS            R0, #1|1-32
76730|code|MOVT.W          R8, #0xCCCC|204-246-204-72
76734|code|UMULL.W         R9, R2, R8, R2|168-251-2-146
76738|code|ADDS            R0, #1|1-48
76740|code|LSRS            R2, R2, #3|210-8
76742|code|BNE             loc_12BBE|250-209
76744|code|CMP             R5, R0|133-66
76746|code|ITE GT|204-191
76748|code|RSBGT.W         R2, R0, R5|192-235-5-2
76752|code|MOVLE           R2, #0|0-34
76754|code|SUBS.W          R6, R6, R12|182-235-12-6
76758|code|IT NE|24-191
76760|code|MOVNE           R6, #1|1-38
76762|code|CMP             R7, R2|151-66
76764|code|ITE EQ|12-191
76766|code|MOVEQ           R0, #0|0-32
76768|code|ANDNE.W         R0, R6, #1|6-240-1-0
76772|code|CBNZ            R0, loc_12BF2|40-185
76774|code|CBZ             R6, loc_12BF6|54-177
76776|code|CMP             R7, R2|151-66
76778|code|BEQ             loc_12BFC|7-208
76780|code|POP.W           {R4-R9}|189-232-240-3
76784|code|BX              LR|112-71
76786|code|MOVS            R0, #0|0-32
76788|code|B               loc_12BEC|250-231
76790|code|STR             R4, [R1]|12-96
76792|code|MOVS            R0, #1|1-32
76794|code|B               loc_12BEC|247-231
76796|code|STR             R5, [R3]|29-96
76798|code|MOVS            R0, #1|1-32
76800|code|B               loc_12BEC|244-231
76802|code|MOVS            R0, #1|1-32
76804|code|B               loc_12BEC|242-231
76806|code|MOVS            R6, #1|1-38
76808|code|B               loc_12B58|166-231
76810|code|MOVS            R7, #1|1-39
76812|code|B               loc_12BA6|203-231
76814|data|ALIGN 0x10|0-191
76816|code|PUSH            {R4,LR}|16-181
76818|code|MOV             R4, R0|4-70
76820|code|CBZ             R0, locret_12C34|112-177
76822|code|LDR             R0, [R0]; ptr|0-104
76824|code|MOVS            R3, #0|0-35
76826|code|STR             R3, [R4,#0xC]|227-96
76828|code|CBZ             R0, loc_12C22|8-177
76830|code|BLX             free|246-247-166-238
76834|code|LDR             R0, [R4,#4]; ptr|96-104
76836|code|CBZ             R0, loc_12C2A|8-177
76838|code|BLX             free|246-247-162-238
76842|code|MOV             R0, R4|32-70
76844|code|POP.W           {R4,LR}|189-232-16-64
76848|code|B.W             j_free|246-247-154-190
76852|code|POP             {R4,PC}|16-189
76854|data|ALIGN 4|0-191
76856|code|PUSH            {R4,LR}|16-181
76858|code|MOV             R4, R0|4-70
76860|code|CBZ             R0, locret_12C50|64-177
76862|code|LDR             R0, [R0]; ptr|0-104
76864|code|CBZ             R0, loc_12C46|8-177
76866|code|BLX             free|246-247-148-238
76870|code|MOV             R0, R4|32-70
76872|code|POP.W           {R4,LR}|189-232-16-64
76876|code|B.W             j_free|246-247-140-190
76880|code|POP             {R4,PC}|16-189
76882|data|ALIGN 4|0-191
76884|code|PUSH.W          {R4-R8,LR}|45-233-240-65
76888|code|SUB             SP, SP, #8|130-176
76890|code|MOVS            R3, #0|0-35
76892|code|MOV             R5, R0|5-70
76894|code|STR             R3, [SP,#0x20+endptr]|1-147
76896|code|CMP             R0, #0|0-40
76898|code|BEQ.W           loc_12DB2|0-240-166-128
76902|code|MOVS            R0, #0x10; size|16-32
76904|code|BLX             malloc|246-247-46-239
76908|code|MOV             R6, R0|6-70
76910|code|CMP             R0, #0|0-40
76912|code|BEQ             loc_12D38|98-208
76914|code|MOV             R0, R5; s|40-70
76916|code|BLX             strlen|246-247-108-239
76920|code|SUBS            R4, R0, #1|68-30
76922|code|BMI             loc_12C92|10-212
76924|code|BLX             __ctype_b_loc|246-247-80-239
76928|code|LDR             R2, [R0]|2-104
76930|code|B               loc_12C88|1-224
76932|code|SUBS            R4, #1|1-60
76934|code|BMI             loc_12C92|4-212
76936|code|LDRB            R3, [R5,R4]|43-93
76938|code|LDRH.W          R3, [R2,R3,LSL#1]|50-248-19-48
76942|code|LSLS            R3, R3, #0x14|27-5
76944|code|BMI             loc_12C84|248-212
76946|code|MOV             R0, R5|40-70
76948|code|BLX             __strdup|246-247-158-239
76952|code|MOV             R8, R0|128-70
76954|code|STR             R0, [R6]|48-96
76956|code|CMP             R0, #0|0-40
76958|code|BEQ             loc_12D52|88-208
76960|code|MOVS            R3, #0|0-35
76962|code|MOV             R0, R5; s|40-70
76964|code|STR             R3, [R6,#8]|179-96
76966|code|STR             R3, [R6,#4]|115-96
76968|code|STR             R3, [R6,#0xC]|243-96
76970|code|BLX             strlen|246-247-82-239
76974|code|SUBS            R0, #1|1-56
76976|code|CMP             R4, R0|132-66
76978|code|BEQ             loc_12CF0|29-208
76980|code|ADDS            R7, R4, #1|103-28
76982|code|MOVS            R2, #0xA; base|10-34
76984|code|ADD.W           R0, R8, R7; nptr|8-235-7-0
76988|code|ADD             R1, SP, #0x20+endptr; endptr|1-169
76990|code|STR             R0, [R6,#0xC]|240-96
76992|code|BLX             strtoul|246-247-64-239
76996|code|LDR             R3, [SP,#0x20+endptr]|1-155
76998|code|STR             R0, [R6,#8]|176-96
77000|code|LDRB.W          R8, [R3]|147-248-0-128
77004|code|CMP.W           R8, #0|184-241-0-15
77008|code|BNE             loc_12CD8|2-209
77010|code|CMP.W           R0, #0x2000000|176-241-0-127
77014|code|BLS             loc_12D1C|33-217
77016|code|MOV             R0, R5|40-70
77018|code|BLX             __strdup|246-247-124-239
77022|code|STR             R0, [R6,#4]|112-96
77024|code|CMP             R0, #0|0-40
77026|code|BEQ             loc_12D72|70-208
77028|code|MOVS            R3, #0|0-35
77030|code|STR             R3, [R6,#0xC]|243-96
77032|code|MOV             R0, R6|48-70
77034|code|ADD             SP, SP, #8|2-176
77036|code|POP.W           {R4-R8,PC}|189-232-240-129
77040|code|MOV             R0, R5|40-70
77042|code|BLX             __strdup|246-247-112-239
77046|code|STR             R0, [R6,#4]|112-96
77048|code|CMP             R0, #0|0-40
77050|code|BNE             loc_12CE8|245-209
77052|code|MOV             R0, R6|48-70
77054|code|BL              sub_12C10|255-247-135-255
77058|code|BLX             __errno_location|246-247-80-239
77062|code|MOVS            R2, #0xC|12-34
77064|code|MOV.W           R1, #0x1FE|79-244-255-113
77068|code|MOV             R3, R0|3-70
77070|code|LDR             R0, =aHostlistC; "hostlist.c"|44-72
77072|code|STR             R2, [R3]|26-96
77074|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|44-74
77076|code|BL              sub_12B20|255-247-4-255
77080|code|MOV             R6, R0|6-70
77082|code|B               loc_12CE8|229-231
77084|code|ADDS            R0, R4, #2; size|160-28
77086|code|BLX             malloc|246-247-212-238
77090|code|MOV             R4, R0|4-70
77092|code|STR             R0, [R6,#4]|112-96
77094|code|CMP             R0, #0|0-40
77096|code|BEQ             loc_12D92|51-208
77098|code|MOV             R1, R5; src|41-70
77100|code|MOV             R2, R7; n|58-70
77102|code|BLX             memcpy|246-247-54-238
77106|code|STRB.W          R8, [R4,R7]|4-248-7-128
77110|code|B               loc_12CE8|215-231
77112|code|BLX             __errno_location|246-247-52-239
77116|code|MOVS            R2, #0xC|12-34
77118|code|MOV.W           R1, #0x1EE|79-244-247-113
77122|code|MOV             R3, R0|3-70
77124|code|LDR             R0, =aHostlistC; "hostlist.c"|30-72
77126|code|STR             R2, [R3]|26-96
77128|code|LDR             R2, =aHostnameCreate; "hostname create"|31-74
77130|code|BL              sub_12B20|255-247-233-254
77134|code|MOV             R6, R0|6-70
77136|code|B               loc_12CE8|202-231
77138|code|MOV             R0, R6; ptr|48-70
77140|code|BLX             free|246-247-10-238
77144|code|BLX             __errno_location|246-247-36-239
77148|code|MOVS            R2, #0xC|12-34
77150|code|MOV.W           R1, #0x1F4|79-244-250-113
77154|code|MOV             R3, R0|3-70
77156|code|LDR             R0, =aHostlistC; "hostlist.c"|22-72
77158|code|STR             R2, [R3]|26-96
77160|code|LDR             R2, =aHostnameCreate; "hostname create"|23-74
77162|code|BL              sub_12B20|255-247-217-254
77166|code|MOV             R6, R0|6-70
77168|code|B               loc_12CE8|186-231
77170|code|MOV             R0, R6|48-70
77172|code|BL              sub_12C10|255-247-76-255
77176|code|BLX             __errno_location|246-247-20-239
77180|code|MOVS            R2, #0xC|12-34
77182|code|MOV.W           R1, #0x210|79-244-4-113
77186|code|MOV             R3, R0|3-70
77188|code|LDR             R0, =aHostlistC; "hostlist.c"|14-72
77190|code|STR             R2, [R3]|26-96
77192|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|14-74
77194|code|BL              sub_12B20|255-247-201-254
77198|code|MOV             R6, R0|6-70
77200|code|B               loc_12CE8|170-231
77202|code|MOV             R0, R6|48-70
77204|code|BL              sub_12C10|255-247-60-255
77208|code|BLX             __errno_location|246-247-4-239
77212|code|MOVS            R2, #0xC|12-34
77214|code|MOVW            R1, #0x209|64-242-9-33
77218|code|MOV             R3, R0|3-70
77220|code|LDR             R0, =aHostlistC; "hostlist.c"|6-72
77222|code|STR             R2, [R3]|26-96
77224|code|LDR             R2, =aHostnamePrefix; "hostname prefix create"|6-74
77226|code|BL              sub_12B20|255-247-185-254
77230|code|MOV             R6, R0|6-70
77232|code|B               loc_12CE8|154-231
77234|code|LDR             R0, =aHostnameVoid0; "hostname != ((void *)0)"|6-72
77236|code|MOVW            R2, #0x1EB; line|64-242-235-18
77240|code|LDR             R1, =aHostlistC; "hostlist.c"|1-73
77242|code|LDR             R3, =aHostnameCreate_0; "hostname_create"|5-75
77244|code|BLX             __assert_fail|246-247-204-239
77248|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
77252|data|DCD aHostnamePrefix; "hostname prefix create"|116-188-1-0
77256|data|DCD aHostnameCreate; "hostname create"|100-188-1-0
77260|data|DCD aHostnameVoid0; "hostname != ((void *)0)"|64-188-1-0
77264|data|DCD aHostnameCreate_0; "hostname_create"|216-184-1-0
77268|code|PUSH            {R4-R7,LR}|240-181
77270|code|MOV             R4, R0|4-70
77272|code|LDRB            R7, [R0,#0x10]|7-124
77274|code|SUB             SP, SP, #0xC|131-176
77276|code|MOV             R5, R1|13-70
77278|code|LDR             R6, [R0]|6-104
77280|code|ANDS.W          R7, R7, #1|23-240-1-7
77284|code|BEQ             loc_12DF2|5-208
77286|code|LDR             R0, [R1]; s1|8-104
77288|code|MOV             R1, R6; s2|49-70
77290|code|BLX             strcmp|246-247-136-237
77294|code|CMP             R0, #0|0-40
77296|code|BEQ             loc_12E2E|29-208
77298|code|LDR             R1, [R5,#4]; s2|105-104
77300|code|MOV             R0, R6; s1|48-70
77302|code|BLX             strcmp|246-247-130-237
77306|code|CBNZ            R0, loc_12E28|168-185
77308|code|LDR             R3, [R5,#0xC]|235-104
77310|code|CBZ             R3, loc_12E32|195-177
77312|code|LDR             R5, [R5,#8]|173-104
77314|code|LDR             R2, [R4,#8]|162-104
77316|code|CMP             R5, R2|149-66
77318|code|BHI             loc_12E2A|16-216
77320|code|LDR             R6, [R4,#4]|102-104
77322|code|CMP             R5, R6|181-66
77324|code|BCC             loc_12E2A|13-211
77326|code|MOV             R0, R3; s|24-70
77328|code|BLX             strlen|246-247-158-238
77332|code|ADD             R3, SP, #0x20+var_18|2-171
77334|code|ADD.W           R1, R4, #0xC|4-241-12-1
77338|code|MOV             R2, R5|42-70
77340|code|STR.W           R0, [R3,#-4]!|67-248-4-13
77344|code|MOV             R0, R6|48-70
77346|code|BL              sub_12B30|255-247-133-254
77350|code|B               loc_12E2A|0-224
77352|code|MOVS            R0, #0|0-32
77354|code|ADD             SP, SP, #0xC|3-176
77356|code|POP             {R4-R7,PC}|240-189
77358|code|MOVS            R0, #1|1-32
77360|code|B               loc_12E2A|251-231
77362|code|MOV             R0, R7|56-70
77364|code|B               loc_12E2A|249-231
77366|data|ALIGN 4|0-191
77368|code|PUSH            {R3-R5,LR}|56-181
77370|code|MOV             R4, R0|4-70
77372|code|MOV             R5, R1|13-70
77374|code|CBZ             R0, loc_12E62|128-177
77376|code|CBZ             R1, loc_12E5C|97-177
77378|code|LDR             R0, [R0]; s1|0-104
77380|code|LDR             R1, [R1]; s2|9-104
77382|code|BLX             strcmp|246-247-90-237
77386|code|CBNZ            R0, locret_12E60|72-185
77388|code|LDRB            R0, [R5,#0x10]|40-124
77390|code|LDRB            R3, [R4,#0x10]|35-124
77392|code|AND.W           R0, R0, #1|0-240-1-0
77396|code|AND.W           R3, R3, #1|3-240-1-3
77400|code|SUBS            R0, R0, R3|192-26
77402|code|POP             {R3-R5,PC}|56-189
77404|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
77408|code|POP             {R3-R5,PC}|56-189
77410|code|MOVS            R0, #1|1-32
77412|code|POP             {R3-R5,PC}|56-189
77414|data|ALIGN 4|0-191
77416|code|PUSH            {R2,R3}|12-180
77418|code|PUSH            {R4-R7,LR}|240-181
77420|code|SUB.W           SP, SP, #0x400|173-245-128-109
77424|code|SUB             SP, SP, #0xC|131-176
77426|code|LDR             R4, =__stack_chk_guard|21-76
77428|code|ADD.W           R7, SP, #0x428+varg_r2|13-245-132-103
77432|code|MOV             R6, R0|6-70
77434|code|MOV             R5, R1|13-70
77436|code|ADD             R0, SP, #0x428+s; s|1-168
77438|code|LDR.W           R2, [R7],#4; format|87-248-4-43
77442|code|MOV.W           R1, #0x400; maxlen|79-244-128-97
77446|code|LDR.W           LR, [R4]|212-248-0-224
77450|code|MOV             R3, R7; arg|59-70
77452|code|STR             R7, [SP,#0x428+var_428]|0-151
77454|code|STR.W           LR, [SP,#0x428+var_24]|205-248-4-228
77458|code|BLX             vsnprintf|246-247-32-239
77462|code|CMP.W           R0, #0x400|176-245-128-111
77466|code|BLS             loc_12EA2|2-217
77468|code|MOVS            R3, #0|0-35
77470|code|STRB.W          R3, [SP,#0x428+var_25]|141-248-3-52
77474|code|ADD             R2, SP, #0x428+s|1-170
77476|code|MOV             R0, R6|48-70
77478|code|MOV             R1, R5|41-70
77480|code|BL              sub_12B10|255-247-50-254
77484|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
77488|code|LDR             R3, [R4]|35-104
77490|code|CMP             R2, R3|154-66
77492|code|BNE             loc_12EC4|6-209
77494|code|ADD             SP, SP, #0xC|3-176
77496|code|ADD.W           SP, SP, #0x400|13-245-128-109
77500|code|POP.W           {R4-R7,LR}|189-232-240-64
77504|code|ADD             SP, SP, #8|2-176
77506|code|BX              LR|112-71
77508|code|BLX             __stack_chk_fail|246-247-136-237
77512|data|DCD __stack_chk_guard|16-74-2-0
77516|code|PUSH            {R3,LR}|8-181
77518|code|CBZ             R0, loc_12EE4|72-177
77520|code|LDRB            R3, [R0,#0x10]|3-124
77522|code|LSLS            R2, R3, #0x1F|218-7
77524|code|BMI             loc_12EE0|4-212
77526|code|LDR             R2, [R0,#8]|130-104
77528|code|LDR             R3, [R0,#4]|67-104
77530|code|ADDS            R0, R2, #1|80-28
77532|code|SUBS            R0, R0, R3|192-26
77534|code|POP             {R3,PC}|8-189
77536|code|MOVS            R0, #1|1-32
77538|code|POP             {R3,PC}|8-189
77540|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
77542|code|MOVW            R2, #0x281; line|64-242-129-34
77546|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
77548|code|LDR             R3, =aHostrangeCount; "hostrange_count"|3-75
77550|code|BLX             __assert_fail|246-247-52-239
77554|data|ALIGN 4|0-191
77556|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
77560|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
77564|data|DCD aHostrangeCount; "hostrange_count"|232-184-1-0
77568|code|PUSH            {R4,LR}|16-181
77570|code|CBZ             R0, loc_12F1C|88-177
77572|code|CBZ             R1, loc_12F2A|137-177
77574|code|ADD.W           R4, R0, #0xC|0-241-12-4
77578|code|LDR             R2, [R1,#4]|74-104
77580|code|ADD.W           R3, R1, #0xC|1-241-12-3
77584|code|LDR             R0, [R0,#4]|64-104
77586|code|MOV             R1, R4|33-70
77588|code|POP.W           {R4,LR}|189-232-16-64
77592|code|B.W             sub_12B30|255-247-10-190
77596|code|LDR             R0, =aH0Void0; "h0 != ((void *)0)"|6-72
77598|code|MOVW            R2, #0x2FF; line|64-242-255-34
77602|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
77604|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|6-75
77606|code|BLX             __assert_fail|246-247-24-239
77610|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
77612|code|MOV.W           R2, #0x300; line|79-244-64-114
77616|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
77618|code|LDR             R3, =aHostrangeWidth; "hostrange_width_combine"|3-75
77620|code|BLX             __assert_fail|246-247-16-239
77624|data|DCD aH0Void0; "h0 != ((void *)0)"|160-188-1-0
77628|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
77632|data|DCD aHostrangeWidth; "hostrange_width_combine"|248-184-1-0
77636|data|DCD aH1Void0; "h1 != ((void *)0)"|180-188-1-0
77640|code|PUSH            {R3,LR}|8-181
77642|code|CBZ             R0, loc_12F64|88-177
77644|code|LDR             R3, [R0,#8]|131-104
77646|code|LDR             R2, [R0,#4]|66-104
77648|code|CMP             R3, R2|147-66
77650|code|BCC             loc_12F60|5-211
77652|code|SUB.W           R1, R3, #0xFFFFFFFF|163-241-255-49
77656|code|NEGS            R0, R1|72-66
77658|code|ADC.W           R0, R0, R1|64-235-1-0
77662|code|POP             {R3,PC}|8-189
77664|code|MOVS            R0, #1|1-32
77666|code|POP             {R3,PC}|8-189
77668|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
77670|code|MOVW            R2, #0x30A; line|64-242-10-50
77674|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
77676|code|LDR             R3, =aHostrangeEmpty; "hostrange_empty"|3-75
77678|code|BLX             __assert_fail|246-247-244-238
77682|data|ALIGN 4|0-191
77684|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
77688|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
77692|data|DCD aHostrangeEmpty; "hostrange_empty"|16-185-1-0
77696|code|PUSH            {R3,LR}|8-181
77698|code|BLX             __errno_location|246-247-16-238
77702|code|MOV             R3, #0x1BC58|75-246-88-67-192-242-1-3
77710|code|MOVS            R1, #0xC|12-33
77712|code|MOV             R2, #0x1BCC8|75-246-200-66-192-242-1-2
77720|code|STR             R1, [R0]|1-96
77722|code|MOV             R0, R3|24-70
77724|code|MOVW            R1, #0x23E|64-242-62-33
77728|code|POP.W           {R3,LR}|189-232-8-64
77732|code|B.W             sub_12B20|255-247-188-189
77736|code|PUSH            {R4,LR}|16-181
77738|code|MOVS            R0, #0x18; size|24-32
77740|code|BLX             malloc|246-247-140-237
77744|code|MOV             R4, R0|4-70
77746|code|CBZ             R0, loc_12FEA|208-177
77748|code|MOVS            R0, #0x40 ; '@'; size|64-32
77750|code|MOVW            R3, #0xDEAD|77-246-173-99
77754|code|STR             R3, [R4]|35-96
77756|code|BLX             malloc|246-247-132-237
77760|code|STR             R0, [R4,#0x10]|32-97
77762|code|CBZ             R0, loc_12FE4|120-177
77764|code|MOVS            R3, #0|0-35
77766|code|MOV             R1, R3|25-70
77768|code|B               loc_12FCC|0-224
77770|code|LDR             R0, [R4,#0x10]|32-105
77772|code|STR             R1, [R0,R3]|193-80
77774|code|ADDS            R3, #4|4-51
77776|code|MOVS            R2, #0|0-34
77778|code|CMP             R3, #0x40 ; '@'|64-43
77780|code|BNE             loc_12FCA|249-209
77782|code|MOVS            R3, #0x10|16-35
77784|code|STR             R2, [R4,#8]|162-96
77786|code|STR             R3, [R4,#4]|99-96
77788|code|MOV             R0, R4|32-70
77790|code|STR             R2, [R4,#0xC]|226-96
77792|code|STR             R2, [R4,#0x14]|98-97
77794|code|POP             {R4,PC}|16-189
77796|code|MOV             R0, R4; ptr|32-70
77798|code|BLX             free|246-247-194-236
77802|code|BLX             __errno_location|246-247-220-237
77806|code|MOVS            R3, #0xC|12-35
77808|code|MOVW            R1, #0x402|64-242-2-65
77812|code|LDR             R2, =aHostlistCreate; "hostlist_create"|3-74
77814|code|STR             R3, [R0]|3-96
77816|code|LDR             R0, =aHostlistC; "hostlist.c"|3-72
77818|code|POP.W           {R4,LR}|189-232-16-64
77822|code|B.W             sub_17558|4-240-171-186
77826|data|ALIGN 4|0-191
77828|data|DCD aHostlistCreate; "hostlist_create"|220-188-1-0
77832|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
77836|code|PUSH            {R3-R5,LR}|56-181
77838|code|MOV             R5, R0|5-70
77840|code|CMP             R0, #0|0-40
77842|code|BEQ             loc_13068|41-208
77844|code|MOVS            R0, #0x14; size|20-32
77846|code|BLX             malloc|246-247-88-237
77850|code|MOV             R4, R0|4-70
77852|code|CMP             R0, #0|0-40
77854|code|BEQ             loc_1305C|29-208
77856|code|MOV             R0, R5|40-70
77858|code|BLX             __strdup|246-247-216-237
77862|code|STR             R0, [R4]|32-96
77864|code|CBZ             R0, loc_1303E|72-177
77866|code|LDRB            R2, [R4,#0x10]|34-124
77868|code|MOVS            R3, #0|0-35
77870|code|MOV             R0, R4|32-70
77872|code|STR             R3, [R4,#4]|99-96
77874|code|ORR.W           R2, R2, #1|66-240-1-2
77878|code|STR             R3, [R4,#8]|163-96
77880|code|STRB            R2, [R4,#0x10]|34-116
77882|code|STR             R3, [R4,#0xC]|227-96
77884|code|POP             {R3-R5,PC}|56-189
77886|code|MOV             R0, R4; ptr|32-70
77888|code|BLX             free|246-247-148-236
77892|code|BLX             __errno_location|246-247-174-237
77896|code|MOVS            R3, #0xC|12-35
77898|code|MOVW            R1, #0x25B|64-242-91-33
77902|code|LDR             R2, =aHostrangeCreat; "hostrange create single"|10-74
77904|code|STR             R3, [R0]|3-96
77906|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
77908|code|POP.W           {R3-R5,LR}|189-232-56-64
77912|code|B.W             sub_12B20|255-247-98-189
77916|code|BL              sub_12F80|255-247-144-255
77920|code|MOV             R4, R0|4-70
77922|code|CMP             R0, #0|0-40
77924|code|BEQ             loc_13044|238-208
77926|code|B               loc_13020|219-231
77928|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
77930|code|MOVW            R2, #0x249; line|64-242-73-34
77934|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
77936|code|LDR             R3, =aHostrangeCreat_0; "hostrange_create_single"|4-75
77938|code|BLX             __assert_fail|246-247-114-238
77942|data|ALIGN 4|0-191
77944|data|DCD aHostrangeCreat; "hostrange create single"|4-189-1-0
77948|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
77952|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|236-188-1-0
77956|data|DCD aHostrangeCreat_0; "hostrange_create_single"|32-185-1-0
77960|code|PUSH.W          {R4-R8,LR}|45-233-240-65
77964|code|MOV             R4, R0|4-70
77966|code|MOV             R5, R1|13-70
77968|code|MOV             R6, R2|22-70
77970|code|MOV             R8, R3|152-70
77972|code|CMP             R0, #0|0-40
77974|code|BEQ             loc_130EE|42-208
77976|code|MOVS            R0, #0x14; size|20-32
77978|code|BLX             malloc|246-247-22-237
77982|code|MOV             R7, R0|7-70
77984|code|CMP             R0, #0|0-40
77986|code|BEQ             loc_130E2|30-208
77988|code|MOV             R0, R4|32-70
77990|code|BLX             __strdup|246-247-150-237
77994|code|STR             R0, [R7]|56-96
77996|code|CBZ             R0, loc_130C4|80-177
77998|code|LDRB            R3, [R7,#0x10]|59-124
78000|code|MOV             R0, R7|56-70
78002|code|STR             R5, [R7,#4]|125-96
78004|code|BFC.W           R3, #0, #1|111-243-0-3
78008|code|STR             R6, [R7,#8]|190-96
78010|code|STR.W           R8, [R7,#0xC]|199-248-12-128
78014|code|STRB            R3, [R7,#0x10]|59-116
78016|code|POP.W           {R4-R8,PC}|189-232-240-129
78020|code|MOV             R0, R7; ptr|56-70
78022|code|BLX             free|246-247-82-236
78026|code|BLX             __errno_location|246-247-108-237
78030|code|MOVS            R3, #0xC|12-35
78032|code|MOVW            R1, #0x279|64-242-121-33
78036|code|LDR             R2, =aHostrangeCreat_1; "hostrange create"|9-74
78038|code|STR             R3, [R0]|3-96
78040|code|LDR             R0, =aHostlistC; "hostlist.c"|9-72
78042|code|POP.W           {R4-R8,LR}|189-232-240-65
78046|code|B.W             sub_12B20|255-247-31-189
78050|code|BL              sub_12F80|255-247-77-255
78054|code|MOV             R7, R0|7-70
78056|code|CMP             R0, #0|0-40
78058|code|BEQ             loc_130CA|238-208
78060|code|B               loc_130A4|218-231
78062|code|LDR             R0, =aPrefixVoid0; "prefix != ((void *)0)"|5-72
78064|code|MOVW            R2, #0x266; line|64-242-102-34
78068|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
78070|code|LDR             R3, =aHostrangeCreat_2; "hostrange_create"|4-75
78072|code|BLX             __assert_fail|246-247-46-238
78076|data|DCD aHostrangeCreat_1; "hostrange create"|200-188-1-0
78080|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
78084|data|DCD aPrefixVoid0; "prefix != ((void *)0)"|236-188-1-0
78088|data|DCD aHostrangeCreat_2; "hostrange_create"|56-185-1-0
78092|code|PUSH            {R4,LR}|16-181
78094|code|CBZ             R0, loc_1312A|96-177
78096|code|LDRB            R3, [R0,#0x10]|3-124
78098|code|LSLS            R3, R3, #0x1F|219-7
78100|code|BMI             loc_13120|4-212
78102|code|LDM             R0, {R0-R3}|15-200
78104|code|POP.W           {R4,LR}|189-232-16-64
78108|code|B.W             sub_13088|255-247-180-191
78112|code|LDR             R0, [R0]|0-104
78114|code|POP.W           {R4,LR}|189-232-16-64
78118|code|B.W             sub_1300C|255-247-113-191
78122|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|3-72
78124|code|MOV.W           R2, #0x28C; line|79-244-35-114
78128|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
78130|code|LDR             R3, =aHostrangeCopy; "hostrange_copy"|3-75
78132|code|BLX             __assert_fail|246-247-16-238
78136|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
78140|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
78144|data|DCD aHostrangeCopy; "hostrange_copy"|76-185-1-0
78148|code|PUSH            {R3-R5,LR}|56-181
78150|code|MOV             R4, R0|4-70
78152|code|MOV             R5, R1|13-70
78154|code|CMP             R0, #0|0-40
78156|code|BEQ             loc_131A8|44-208
78158|code|LDR             R3, [R0,#4]|67-104
78160|code|CMP             R3, R1|139-66
78162|code|BHI             loc_1319A|34-216
78164|code|LDR             R2, [R0,#8]|130-104
78166|code|CMP             R1, R2|145-66
78168|code|BHI             loc_1319A|31-216
78170|code|CMP             R3, R1|139-66
78172|code|BEQ             loc_1317A|13-208
78174|code|CMP             R1, R2|145-66
78176|code|BEQ             loc_13172|7-208
78178|code|BL              sub_1310C|255-247-211-255
78182|code|CBZ             R0, loc_13182|96-177
78184|code|SUBS            R3, R5, #1|107-30
78186|code|ADDS            R5, #1|1-53
78188|code|STR             R3, [R4,#8]|163-96
78190|code|STR             R5, [R0,#4]|69-96
78192|code|POP             {R3-R5,PC}|56-189
78194|code|SUBS            R5, R1, #1|77-30
78196|code|MOVS            R0, #0|0-32
78198|code|STR             R5, [R4,#8]|165-96
78200|code|POP             {R3-R5,PC}|56-189
78202|code|ADDS            R3, #1|1-51
78204|code|MOVS            R0, #0|0-32
78206|code|STR             R3, [R4,#4]|99-96
78208|code|POP             {R3-R5,PC}|56-189
78210|code|BLX             __errno_location|246-247-16-237
78214|code|MOVS            R3, #0xC|12-35
78216|code|MOV.W           R1, #0x2B4|79-244-45-113
78220|code|LDR             R2, =aHostrangeCopy_0; "hostrange copy"|10-74
78222|code|STR             R3, [R0]|3-96
78224|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
78226|code|POP.W           {R3-R5,LR}|189-232-56-64
78230|code|B.W             sub_12B20|255-247-195-188
78234|code|LDR             R0, =aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|9-72
78236|code|MOV.W           R2, #0x2AC; line|79-244-43-114
78240|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
78242|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|8-75
78244|code|BLX             __assert_fail|246-247-216-237
78248|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|7-72
78250|code|MOVW            R2, #0x2AB; line|64-242-171-34
78254|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
78256|code|LDR             R3, =aHostrangeDelet; "hostrange_delete_host"|4-75
78258|code|BLX             __assert_fail|246-247-210-237
78262|data|ALIGN 4|0-191
78264|data|DCD aHostrangeCopy_0; "hostrange copy"|56-189-1-0
78268|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
78272|data|DCD aNHrLoNHrHi; "n >= hr->lo && n <= hr->hi"|28-189-1-0
78276|data|DCD aHostrangeDelet; "hostrange_delete_host"|92-185-1-0
78280|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
78284|code|PUSH            {R3-R5,LR}|56-181
78286|code|MOV             R4, R0|4-70
78288|code|MOV             R5, R1|13-70
78290|code|CBZ             R0, loc_131F8|136-177
78292|code|CBZ             R1, loc_13206|185-177
78294|code|BL              sub_12E38|255-247-47-254
78298|code|CBZ             R0, loc_131DE|0-177
78300|code|POP             {R3-R5,PC}|56-189
78302|code|MOV             R0, R4|32-70
78304|code|MOV             R1, R5|41-70
78306|code|BL              sub_12F00|255-247-141-254
78310|code|CBZ             R0, loc_131F0|24-177
78312|code|LDR             R0, [R4,#4]|96-104
78314|code|LDR             R3, [R5,#4]|107-104
78316|code|SUBS            R0, R0, R3|192-26
78318|code|POP             {R3-R5,PC}|56-189
78320|code|LDR             R0, [R4,#0xC]|224-104
78322|code|LDR             R3, [R5,#0xC]|235-104
78324|code|SUBS            R0, R0, R3|192-26
78326|code|POP             {R3-R5,PC}|56-189
78328|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|6-72
78330|code|MOVW            R2, #0x2C7; line|64-242-199-34
78334|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
78336|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|6-75
78338|code|BLX             __assert_fail|246-247-170-237
78342|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|6-72
78344|code|MOV.W           R2, #0x2C8; line|79-244-50-114
78348|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
78350|code|LDR             R3, =aHostrangeCmp; "hostrange_cmp"|3-75
78352|code|BLX             __assert_fail|246-247-162-237
78356|data|DCD aH1Void0; "h1 != ((void *)0)"|180-188-1-0
78360|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
78364|data|DCD aHostrangeCmp; "hostrange_cmp"|116-185-1-0
78368|data|DCD aH2Void0; "h2 != ((void *)0)"|72-189-1-0
78372|code|LDR             R1, [R1]|9-104
78374|code|LDR             R0, [R0]|0-104
78376|code|B.W             sub_131CC|255-247-208-191
78380|code|PUSH            {R3-R5,LR}|56-181
78382|code|MOV             R4, R0|4-70
78384|code|MOV             R5, R1|13-70
78386|code|CMP             R0, #0|0-40
78388|code|BEQ             loc_132B2|61-208
78390|code|CMP             R1, #0|0-41
78392|code|BEQ             loc_132A4|52-208
78394|code|BL              sub_131CC|255-247-199-255
78398|code|CMP             R0, #0|0-40
78400|code|BGT             loc_132C0|62-220
78402|code|MOV             R0, R4|32-70
78404|code|MOV             R1, R5|41-70
78406|code|BL              sub_12E38|255-247-247-253
78410|code|CMP             R0, #0|0-40
78412|code|BNE             loc_13298|36-209
78414|code|MOV             R0, R4|32-70
78416|code|MOV             R1, R5|41-70
78418|code|BL              sub_12F00|255-247-85-254
78422|code|CMP             R0, #0|0-40
78424|code|BEQ             loc_13298|30-208
78426|code|LDRB            R3, [R4,#0x10]|35-124
78428|code|LSLS            R1, R3, #0x1F|217-7
78430|code|BMI             loc_1327C|13-212
78432|code|LDR             R2, [R5,#4]|106-104
78434|code|LDR             R3, [R4,#8]|163-104
78436|code|SUBS            R1, R2, #1|81-30
78438|code|CMP             R3, R1|139-66
78440|code|BEQ             loc_13290|18-208
78442|code|CMP             R3, R2|147-66
78444|code|BCC             loc_1329E|23-211
78446|code|LDR             R1, [R5,#8]|169-104
78448|code|CMP             R3, R1|139-66
78450|code|BCS             loc_13286|8-210
78452|code|ADDS            R3, #1|1-51
78454|code|STR             R1, [R4,#8]|161-96
78456|code|SUBS            R0, R3, R2|152-26
78458|code|POP             {R3-R5,PC}|56-189
78460|code|LDRB            R3, [R5,#0x10]|43-124
78462|code|LSLS            R2, R3, #0x1F|218-7
78464|code|BPL             loc_13260|238-213
78466|code|MOVS            R0, #1|1-32
78468|code|POP             {R3-R5,PC}|56-189
78470|code|MOV             R0, R5|40-70
78472|code|POP.W           {R3-R5,LR}|189-232-56-64
78476|code|B.W             sub_12ECC|255-247-30-190
78480|code|LDR             R3, [R5,#8]|171-104
78482|code|MOVS            R0, #0|0-32
78484|code|STR             R3, [R4,#8]|163-96
78486|code|POP             {R3-R5,PC}|56-189
78488|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78492|code|POP             {R3-R5,PC}|56-189
78494|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78498|code|POP             {R3-R5,PC}|56-189
78500|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|10-72
78502|code|MOVW            R2, #0x352; line|64-242-82-50
78506|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
78508|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|10-75
78510|code|BLX             __assert_fail|246-247-84-237
78514|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|10-72
78516|code|MOVW            R2, #0x351; line|64-242-81-50
78520|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
78522|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|7-75
78524|code|BLX             __assert_fail|246-247-76-237
78528|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|7-72
78530|code|MOVW            R2, #0x353; line|64-242-83-50
78534|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
78536|code|LDR             R3, =aHostrangeJoin; "hostrange_join"|3-75
78538|code|BLX             __assert_fail|246-247-70-237
78542|data|ALIGN 0x10|0-191
78544|data|DCD aH2Void0; "h2 != ((void *)0)"|72-189-1-0
78548|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
78552|data|DCD aHostrangeJoin; "hostrange_join"|132-185-1-0
78556|data|DCD aH1Void0; "h1 != ((void *)0)"|180-188-1-0
78560|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|92-189-1-0
78564|code|PUSH            {R3-R5,LR}|56-181
78566|code|MOV             R4, R0|4-70
78568|code|MOV             R5, R1|13-70
78570|code|BL              sub_12E38|255-247-165-253
78574|code|CBNZ            R0, loc_13304|72-185
78576|code|LDRB            R3, [R4,#0x10]|35-124
78578|code|LSLS            R3, R3, #0x1F|219-7
78580|code|BMI             locret_13306|7-212
78582|code|LDRB            R3, [R5,#0x10]|43-124
78584|code|TST.W           R3, #1|19-240-1-15
78588|code|ITE NE|20-191
78590|code|MOVNE           R0, #0|0-32
78592|code|MOVEQ           R0, #1|1-32
78594|code|POP             {R3-R5,PC}|56-189
78596|code|MOVS            R0, #0|0-32
78598|code|POP             {R3-R5,PC}|56-189
78600|code|PUSH.W          {R4-R11,LR}|45-233-240-79
78604|code|SUB             SP, SP, #0x24|137-176
78606|code|LDR             R6, [R1]|14-104
78608|code|MOV             R8, R0|128-70
78610|code|STR             R3, [SP,#0x48+s]|4-147
78612|code|MOV             R5, R2|21-70
78614|code|LDR             R3, [R0,#8]|131-104
78616|code|LDR             R7, [R0,#0x10]|7-105
78618|code|MOV.W           R9, R6,LSL#2|79-234-134-9
78622|code|SUBS            R3, #1|1-59
78624|code|STR             R1, [SP,#0x48+var_30]|6-145
78626|code|CMP             R6, R3|158-66
78628|code|ADD.W           R10, R7, R9|7-235-9-10
78632|code|LDR.W           R4, [R7,R6,LSL#2]|87-248-38-64
78636|code|IT GE|168-191
78638|code|MOVGE.W         R11, #0|79-240-0-11
78642|code|BGE             loc_1333A|2-218
78644|code|ADDS            R3, R6, #1|115-28
78646|code|LDR.W           R11, [R7,R3,LSL#2]|87-248-35-176
78650|code|MOV             R0, R4|32-70
78652|code|BL              sub_12ECC|255-247-198-253
78656|code|CMP             R0, #1|1-40
78658|code|BLS.W           loc_13484|64-242-159-128
78662|code|MOVS            R1, #1|1-33
78664|code|STR             R1, [SP,#0x48+var_34]|5-145
78666|code|LDR             R3, [R4]|35-104
78668|code|MOV             R1, R5; maxlen|41-70
78670|code|LDR             R0, [SP,#0x48+s]; s|4-152
78672|code|LDR             R2, =(aRegcompFailedS+0x10); format|87-74
78674|code|BLX             snprintf|246-247-52-236
78678|code|CMP             R0, R5|168-66
78680|code|MOV             R4, R0|4-70
78682|code|ITE LS|148-191
78684|code|MOVLS           R3, #0|0-35
78686|code|MOVHI           R3, #1|1-35
78688|code|ORRS.W          R3, R3, R0,LSR#31|83-234-208-115
78692|code|IT NE|24-191
78694|code|MOVNE           R4, R5|44-70
78696|code|BNE             loc_1345E|121-209
78698|code|LDR             R2, [SP,#0x48+var_34]|5-154
78700|code|UXTB            R2, R2|210-178
78702|code|STR             R2, [SP,#0x48+var_2C]|7-146
78704|code|MOV             R3, R2|19-70
78706|code|CMP             R5, R4|165-66
78708|code|ITE LS|148-191
78710|code|MOVLS           R3, #0|0-35
78712|code|ANDHI.W         R3, R3, #1|3-240-1-3
78716|code|CMP             R3, #0|0-43
78718|code|BNE             loc_1347A|124-209
78720|code|LDR.W           R7, [R7,R9]|87-248-9-112
78724|code|MOV             R11, R8|195-70
78726|code|B               loc_133B6|22-224
78728|code|ADD             R4, R8|68-68
78730|code|CMP             R5, R4|165-66
78732|code|BLS             loc_1343A|85-217
78734|code|LDR             R3, [SP,#0x48+var_34]|5-155
78736|code|CBZ             R3, loc_1339A|27-177
78738|code|LDR             R2, [SP,#0x48+s]|4-154
78740|code|MOVS            R1, #0x2C ; ','|44-33
78742|code|STRB            R1, [R2,R4]|17-85
78744|code|ADDS            R4, #1|1-52
78746|code|LDR.W           R3, [R11,#8]|219-248-8-48
78750|code|ADDS            R6, #1|1-54
78752|code|CMP             R6, R3|158-66
78754|code|BGE             loc_1343A|74-218
78756|code|LDR.W           R7, [R10,#4]|218-248-4-112
78760|code|LDR.W           R1, [R10],#4|90-248-4-27
78764|code|MOV             R0, R7|56-70
78766|code|BL              sub_132E4|255-247-153-255
78770|code|CMP             R0, #0|0-40
78772|code|BEQ             loc_1343A|65-208
78774|code|LDR             R2, [SP,#0x48+s]|4-154
78776|code|RSB.W           R9, R4, R5|196-235-5-9
78780|code|CMP             R5, R9|77-69
78782|code|IT CC|56-191
78784|code|MOVCC.W         R9, #0|79-240-0-9
78788|code|ADDS.W          R12, R2, R4|18-235-4-12
78792|code|BEQ             loc_134A2|107-208
78794|code|LDRB            R3, [R7,#0x10]|59-124
78796|code|MOV.W           R8, #0|79-240-0-8
78800|code|AND.W           R3, R3, #1|3-240-1-3
78804|code|CMP.W           R9, #0|185-241-0-15
78808|code|IT EQ|8-191
78810|code|ORREQ.W         R3, R3, #1|67-240-1-3
78814|code|CMP             R3, #0|0-43
78816|code|BNE             loc_13388|210-209
78818|code|LDR.W           LR, [R7,#4]|215-248-4-224
78822|code|MOV             R0, R12; s|96-70
78824|code|LDR             R3, [R7,#0xC]|251-104
78826|code|MOV             R1, R9; maxlen|73-70
78828|code|LDR             R2, =a0Lu; "%0*lu"|49-74
78830|code|STR.W           R12, [SP,#0x48+var_3C]|205-248-12-192
78834|code|STR.W           LR, [SP,#0x48+var_48]|205-248-0-224
78838|code|BLX             snprintf|246-247-226-235
78842|code|LDR.W           R12, [SP,#0x48+var_3C]|221-248-12-192
78846|code|MVN.W           R3, R0|111-234-0-3
78850|code|MOV             R8, R0|128-70
78852|code|LSRS            R3, R3, #0x1F|219-15
78854|code|CMP             R0, R9|72-69
78856|code|ITE CS|44-191
78858|code|MOVCS           R3, #0|0-35
78860|code|ANDCC.W         R3, R3, #1|3-240-1-3
78864|code|CMP             R3, #0|0-43
78866|code|BEQ             loc_13388|185-208
78868|code|LDR             R1, [R7,#8]|185-104
78870|code|LDR             R3, [R7,#4]|123-104
78872|code|CMP             R3, R1|139-66
78874|code|BCS             loc_13388|181-210
78876|code|RSB.W           R9, R8, R9|200-235-9-9
78880|code|LDR             R3, [R7,#0xC]|251-104
78882|code|ADD             R0, R12; s|96-68
78884|code|STR             R1, [SP,#0x48+var_48]|0-145
78886|code|LDR             R2, =a0Lu_0; "-%0*lu"|36-74
78888|code|MOV             R1, R9; maxlen|73-70
78890|code|BLX             snprintf|246-247-200-235
78894|code|CMP             R0, #0|0-40
78896|code|ITE GE|172-191
78898|code|ADDGE           R8, R0|128-68
78900|code|MOVLT.W         R8, #0xFFFFFFFF|79-240-255-56
78904|code|B               loc_13388|166-231
78906|code|LDR             R3, [SP,#0x48+var_2C]|7-155
78908|code|CMP             R4, R5|172-66
78910|code|ITE CS|44-191
78912|code|MOVCS           R3, #0|0-35
78914|code|ANDCC.W         R3, R3, #1|3-240-1-3
78918|code|CBZ             R3, loc_13466|115-177
78920|code|CMP             R4, #0|0-44
78922|code|BLE             loc_13466|12-221
78924|code|LDR             R1, [SP,#0x48+s]|4-153
78926|code|MOVS            R2, #0x5D ; ']'|93-34
78928|code|ADDS            R3, R1, R4|11-25
78930|code|STRB.W          R2, [R3,#-1]|3-248-1-44
78934|code|MOVS            R3, #0|0-35
78936|code|STRB            R3, [R1,R4]|11-85
78938|code|LDR             R2, [SP,#0x48+var_30]|6-154
78940|code|STR             R6, [R2]|22-96
78942|code|MOV             R0, R4|32-70
78944|code|ADD             SP, SP, #0x24 ; '$'|9-176
78946|code|POP.W           {R4-R11,PC}|189-232-240-143
78950|code|CMP             R5, R4|165-66
78952|code|BHI             loc_13496|21-216
78954|code|CMP             R5, #0|0-45
78956|code|BEQ             loc_1345A|245-208
78958|code|LDR             R2, [SP,#0x48+s]|4-154
78960|code|MOVS            R3, #0|0-35
78962|code|ADDS            R5, R2, R5|85-25
78964|code|STRB.W          R3, [R5,#-1]|5-248-1-60
78968|code|B               loc_1345A|239-231
78970|code|LDR             R1, [SP,#0x48+s]|4-153
78972|code|MOVS            R3, #0x5B ; '['|91-35
78974|code|STRB            R3, [R1,R4]|11-85
78976|code|ADDS            R4, #1|1-52
78978|code|B               loc_13380|125-231
78980|code|MOV             R0, R4|32-70
78982|code|MOV             R1, R11|89-70
78984|code|BL              sub_132E4|255-247-44-255
78988|code|ADDS            R0, #0|0-48
78990|code|IT NE|24-191
78992|code|MOVNE           R0, #1|1-32
78994|code|STR             R0, [SP,#0x48+var_34]|5-144
78996|code|B               loc_1334A|89-231
78998|code|LDR             R1, [SP,#0x48+s]|4-153
79000|code|BIC.W           R3, R4, R4,ASR#31|36-234-228-115
79004|code|MOVS            R2, #0|0-34
79006|code|STRB            R2, [R1,R3]|202-84
79008|code|B               loc_1345A|219-231
79010|code|LDR             R0, =(aPsrcbufVoid0_0+4); assertion|6-72
79012|code|MOVW            R2, #0x3CF; line|64-242-207-50
79016|code|LDR             R1, =aHostlistC; "hostlist.c"|5-73
79018|code|LDR             R3, =aHostrangeNumst; "hostrange_numstr"|6-75
79020|code|BLX             __assert_fail|246-247-84-236
79024|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
79028|data|DCD a0Lu; "%0*lu"|120-189-1-0
79032|data|DCD a0Lu_0; "-%0*lu"|128-189-1-0
79036|data|DCD aPsrcbufVoid0_0+4; "buf != ((void *)0)"|76-128-1-0
79040|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
79044|data|DCD aHostrangeNumst; "hostrange_numstr"|148-185-1-0
79048|code|PUSH            {R4-R6,LR}|112-181
79050|code|MOV             R5, R0|5-70
79052|code|MOV             R6, R1|14-70
79054|code|CBZ             R0, loc_13506|208-177
79056|code|LDR             R2, [R0]|2-104
79058|code|MOVW            R3, #0xDEAD|77-246-173-99
79062|code|CMP             R2, R3|154-66
79064|code|BNE             loc_13514|28-209
79066|code|LDR             R4, [R5,#4]|108-104
79068|code|LSLS            R1, R1, #2; size|137-0
79070|code|LDR             R0, [R0,#0x10]; ptr|0-105
79072|code|STR             R6, [R5,#4]|110-96
79074|code|BLX             realloc|246-247-134-234
79078|code|STR             R0, [R5,#0x10]|40-97
79080|code|CBZ             R0, locret_13500|80-177
79082|code|CMP             R6, R4|166-66
79084|code|BLS             loc_13502|9-217
79086|code|MOVS            R3, #0|0-35
79088|code|B               loc_134F4|0-224
79090|code|LDR             R0, [R5,#0x10]|40-105
79092|code|STR.W           R3, [R0,R4,LSL#2]|64-248-36-48
79096|code|ADDS            R4, #1|1-52
79098|code|CMP             R6, R4|166-66
79100|code|BHI             loc_134F2|249-216
79102|code|MOVS            R0, #1|1-32
79104|code|POP             {R4-R6,PC}|112-189
79106|code|MOVS            R0, #1|1-32
79108|code|POP             {R4-R6,PC}|112-189
79110|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
79112|code|MOVW            R2, #0x411; line|64-242-17-66
79116|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
79118|code|LDR             R3, =aHostlistResize; "hostlist_resize"|7-75
79120|code|BLX             __assert_fail|246-247-34-236
79124|code|LDR             R0, =aHlMagic57005_0; "hl->magic == 57005"|6-72
79126|code|MOVW            R2, #0x412; line|64-242-18-66
79130|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
79132|code|LDR             R3, =aHostlistResize; "hostlist_resize"|3-75
79134|code|BLX             __assert_fail|246-247-28-236
79138|data|ALIGN 4|0-191
79140|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
79144|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
79148|data|DCD aHostlistResize; "hostlist_resize"|168-185-1-0
79152|data|DCD aHlMagic57005_0; "hl->magic == 57005"|136-189-1-0
79156|code|LDR             R1, [R0,#4]|65-104
79158|code|PUSH            {R3,LR}|8-181
79160|code|ADDS            R1, #0x10|16-49
79162|code|BL              sub_134C8|255-247-197-255
79166|code|ADDS            R0, #0|0-48
79168|code|IT NE|24-191
79170|code|MOVNE           R0, #1|1-32
79172|code|POP             {R3,PC}|8-189
79174|data|ALIGN 4|0-191
79176|code|PUSH            {R3-R7,LR}|248-181
79178|code|MOV             R4, R0|4-70
79180|code|MOV             R6, R1|14-70
79182|code|CMP             R1, #0|0-41
79184|code|BEQ             loc_135DC|68-208
79186|code|CMP             R0, #0|0-40
79188|code|BEQ             loc_135F8|80-208
79190|code|LDR             R2, [R0]|2-104
79192|code|MOVW            R3, #0xDEAD|77-246-173-99
79196|code|CMP             R2, R3|154-66
79198|code|BNE             loc_135EA|68-209
79200|code|LDR             R5, [R0,#8]|133-104
79202|code|LDR             R3, [R0,#0x10]|3-105
79204|code|CMP             R5, #0|0-45
79206|code|IT LE|216-191
79208|code|LDRLE           R7, [R3]|31-104
79210|code|BLE             loc_13572|2-221
79212|code|SUBS            R2, R5, #1|106-30
79214|code|LDR.W           R7, [R3,R2,LSL#2]|83-248-34-112
79218|code|LDR             R3, [R4,#4]|99-104
79220|code|CMP             R5, R3|157-66
79222|code|BEQ             loc_135C0|35-208
79224|code|CMP             R5, #0|0-45
79226|code|BLE             loc_13586|4-221
79228|code|MOV             R0, R7|56-70
79230|code|MOV             R1, R6|49-70
79232|code|BL              sub_12E38|255-247-90-252
79236|code|CBZ             R0, loc_135A6|120-177
79238|code|MOV             R0, R6|48-70
79240|code|LDR             R7, [R4,#0x10]|39-105
79242|code|BL              sub_1310C|255-247-191-253
79246|code|ADDS            R3, R5, #1|107-28
79248|code|STR.W           R0, [R7,R5,LSL#2]|71-248-37-0
79252|code|STR             R3, [R4,#8]|163-96
79254|code|CBZ             R0, loc_135D0|216-177
79256|code|MOV             R0, R6|48-70
79258|code|BL              sub_12ECC|255-247-151-252
79262|code|LDR             R3, [R4,#0xC]|227-104
79264|code|ADDS            R0, R0, R3|192-24
79266|code|STR             R0, [R4,#0xC]|224-96
79268|code|POP             {R3-R7,PC}|248-189
79270|code|LDR             R3, [R6,#4]|115-104
79272|code|LDR             R2, [R7,#8]|186-104
79274|code|SUBS            R3, #1|1-59
79276|code|CMP             R2, R3|154-66
79278|code|BNE             loc_13586|234-209
79280|code|MOV             R0, R7|56-70
79282|code|MOV             R1, R6|49-70
79284|code|BL              sub_12F00|255-247-164-252
79288|code|CBZ             R0, loc_135CC|64-177
79290|code|LDR             R3, [R6,#8]|179-104
79292|code|STR             R3, [R7,#8]|187-96
79294|code|B               loc_13598|235-231
79296|code|MOV             R0, R4|32-70
79298|code|BL              sub_13534|255-247-183-255
79302|code|CBZ             R0, loc_135D6|48-177
79304|code|LDR             R5, [R4,#8]|165-104
79306|code|B               loc_13578|213-231
79308|code|LDR             R5, [R4,#8]|165-104
79310|code|B               loc_13586|218-231
79312|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
79316|code|POP             {R3-R7,PC}|248-189
79318|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
79322|code|POP             {R3-R7,PC}|248-189
79324|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
79326|code|MOVW            R2, #0x433; line|64-242-51-66
79330|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
79332|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|10-75
79334|code|BLX             __assert_fail|246-247-184-235
79338|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|10-72
79340|code|MOVW            R2, #0x434; line|64-242-52-66
79344|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
79346|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|7-75
79348|code|BLX             __assert_fail|246-247-176-235
79352|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
79354|code|MOVW            R2, #0x434; line|64-242-52-66
79358|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
79360|code|LDR             R3, =aHostlistPushRa; "hostlist_push_range"|3-75
79362|code|BLX             __assert_fail|246-247-170-235
79366|data|ALIGN 4|0-191
79368|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
79372|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
79376|data|DCD aHostlistPushRa; "hostlist_push_range"|184-185-1-0
79380|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
79384|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
79388|code|PUSH.W          {R4-R8,LR}|45-233-240-65
79392|code|MOV             R4, R0|4-70
79394|code|SUB             SP, SP, #8|130-176
79396|code|MOV             R7, R2|23-70
79398|code|CMP             R0, #0|0-40
79400|code|BEQ             loc_136B4|68-208
79402|code|LDR             R2, [R0]|2-104
79404|code|MOVW            R3, #0xDEAD|77-246-173-99
79408|code|CMP             R2, R3|154-66
79410|code|BNE             loc_136D0|77-209
79412|code|CMP             R1, #0|0-41
79414|code|BEQ             loc_136C2|68-208
79416|code|LDR             R3, [R0,#8]|131-104
79418|code|MOVS            R0, #0|0-32
79420|code|CMP             R3, R7|187-66
79422|code|BLT             loc_1369E|46-219
79424|code|LDR             R2, [R4,#4]|98-104
79426|code|CMP             R3, R2|147-66
79428|code|BEQ             loc_136A4|46-208
79430|code|LDR.W           R8, [R4,#0x10]|212-248-16-128
79434|code|MOV             R0, R1|8-70
79436|code|MOV             R5, R7|61-70
79438|code|LDR.W           R6, [R8,R7,LSL#2]|88-248-39-96
79442|code|BL              sub_1310C|255-247-91-253
79446|code|LDR.W           R12, [R4,#8]|212-248-8-192
79450|code|ADDS            R3, R7, #1|123-28
79452|code|CMP             R12, R3|156-69
79454|code|STR.W           R0, [R8,R7,LSL#2]|72-248-39-0
79458|code|BLT             loc_13678|9-219
79460|code|LSLS            R3, R3, #2|155-0
79462|code|B               loc_1366A|0-224
79464|code|MOV             R6, R1|14-70
79466|code|LDR             R2, [R4,#0x10]|34-105
79468|code|ADDS            R5, #1|1-53
79470|code|LDR             R1, [R2,R3]|209-88
79472|code|STR             R6, [R2,R3]|214-80
79474|code|ADDS            R3, #4|4-51
79476|code|CMP             R5, R12|101-69
79478|code|BNE             loc_13668|247-209
79480|code|LDR             R3, [R4,#0x14]|99-105
79482|code|ADD.W           R2, R12, #1|12-241-1-2
79486|code|STR             R2, [R4,#8]|162-96
79488|code|CBZ             R3, loc_1369C|99-177
79490|code|LDR             R2, [R3,#8]|154-104
79492|code|CMP             R7, R2|151-66
79494|code|BGT             loc_13696|6-220
79496|code|LDR             R1, [R3,#4]|89-104
79498|code|ADDS            R2, #1|1-50
79500|code|LDR             R1, [R1,#0x10]|9-105
79502|code|STR             R2, [R3,#8]|154-96
79504|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
79508|code|STR             R2, [R3,#0xC]|218-96
79510|code|LDR             R3, [R3,#0x14]|91-105
79512|code|CMP             R3, #0|0-43
79514|code|BNE             loc_13682|242-209
79516|code|MOVS            R0, #1|1-32
79518|code|ADD             SP, SP, #8|2-176
79520|code|POP.W           {R4-R8,PC}|189-232-240-129
79524|code|MOV             R0, R4|32-70
79526|code|STR             R1, [SP,#0x20+var_1C]|1-145
79528|code|BL              sub_13534|255-247-68-255
79532|code|LDR             R1, [SP,#0x20+var_1C]|1-153
79534|code|CMP             R0, #0|0-40
79536|code|BNE             loc_13646|201-209
79538|code|B               loc_1369E|244-231
79540|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
79542|code|MOV.W           R2, #0x468; line|79-244-141-98
79546|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
79548|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|10-75
79550|code|BLX             __assert_fail|246-247-76-235
79554|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|10-72
79556|code|MOVW            R2, #0x46A; line|64-242-106-66
79560|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
79562|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|7-75
79564|code|BLX             __assert_fail|246-247-68-235
79568|code|LDR             R0, =aHlMagic57005_0; "hl->magic == 57005"|7-72
79570|code|MOVW            R2, #0x469; line|64-242-105-66
79574|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
79576|code|LDR             R3, =aHostlistInsert; "hostlist_insert_range"|3-75
79578|code|BLX             __assert_fail|246-247-62-235
79582|data|ALIGN 0x10|0-191
79584|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
79588|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
79592|data|DCD aHostlistInsert; "hostlist_insert_range"|204-185-1-0
79596|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
79600|data|DCD aHlMagic57005_0; "hl->magic == 57005"|136-189-1-0
79604|code|PUSH            {R3-R7,LR}|248-181
79606|code|MOV             R4, R0|4-70
79608|code|CBZ             R0, loc_13744|32-179
79610|code|LDR             R2, [R0]|2-104
79612|code|MOVW            R3, #0xDEAD|77-246-173-99
79616|code|CMP             R2, R3|154-66
79618|code|BNE             loc_13748|33-209
79620|code|BL              sub_12FA8|255-247-80-252
79624|code|MOV             R5, R0|5-70
79626|code|CBZ             R0, loc_1373A|176-177
79628|code|LDR             R1, [R4,#8]|161-104
79630|code|LDR             R3, [R0,#4]|67-104
79632|code|LDR             R2, [R4,#0xC]|226-104
79634|code|CMP             R1, R3|153-66
79636|code|STR             R1, [R0,#8]|129-96
79638|code|STR             R2, [R0,#0xC]|194-96
79640|code|BGT             loc_1373E|17-220
79642|code|LDR             R3, [R4,#8]|163-104
79644|code|CMP             R3, #0|0-43
79646|code|BLE             loc_1373A|12-221
79648|code|MOVS            R6, #0|0-38
79650|code|LDR             R3, [R4,#0x10]|35-105
79652|code|LDR             R7, [R5,#0x10]|47-105
79654|code|LDR.W           R0, [R3,R6,LSL#2]|83-248-38-0
79658|code|BL              sub_1310C|255-247-239-252
79662|code|LDR             R3, [R4,#8]|163-104
79664|code|STR.W           R0, [R7,R6,LSL#2]|71-248-38-0
79668|code|ADDS            R6, #1|1-54
79670|code|CMP             R3, R6|179-66
79672|code|BGT             loc_13722|243-220
79674|code|MOV             R0, R5|40-70
79676|code|POP             {R3-R7,PC}|248-189
79678|code|BL              sub_134C8|255-247-195-254
79682|code|B               loc_1371A|234-231
79684|code|MOV             R5, R0|5-70
79686|code|B               loc_1373A|248-231
79688|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|3-72
79690|code|MOVW            R2, #0x5E2; line|64-242-226-82
79694|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
79696|code|LDR             R3, =aHostlistCopy; "hostlist_copy"|3-75
79698|code|BLX             __assert_fail|246-247-2-235
79702|data|ALIGN 4|0-191
79704|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
79708|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
79712|data|DCD aHostlistCopy; "hostlist_copy"|228-185-1-0
79716|code|PUSH            {R4-R6,LR}|112-181
79718|code|MOV             R5, R0|5-70
79720|code|MOV             R6, R1|14-70
79722|code|MOV             R0, R1|8-70
79724|code|CBZ             R1, locret_137A4|209-177
79726|code|BL              sub_12C54|255-247-113-250
79730|code|MOV             R4, R0|4-70
79732|code|LDR             R0, [R0,#0xC]; s|192-104
79734|code|CBZ             R0, loc_137A6|176-177
79736|code|BLX             strlen|246-247-234-233
79740|code|LDR             R6, [R4,#8]|166-104
79742|code|MOV             R1, R6|49-70
79744|code|MOV             R2, R6|50-70
79746|code|MOV             R3, R0|3-70
79748|code|LDR             R0, [R4,#4]|96-104
79750|code|BL              sub_13088|255-247-127-252
79754|code|MOV             R6, R0|6-70
79756|code|MOV             R1, R6|49-70
79758|code|MOV             R0, R5|40-70
79760|code|BL              sub_13548|255-247-218-254
79764|code|MOV             R0, R6|48-70
79766|code|BL              sub_12C38|255-247-79-250
79770|code|MOV             R0, R4|32-70
79772|code|BL              sub_12C10|255-247-56-250
79776|code|MOVS            R0, #1|1-32
79778|code|POP             {R4-R6,PC}|112-189
79780|code|POP             {R4-R6,PC}|112-189
79782|code|MOV             R0, R6|48-70
79784|code|BL              sub_1300C|255-247-48-252
79788|code|MOV             R6, R0|6-70
79790|code|B               loc_1378C|237-231
79792|code|PUSH            {R3-R7,LR}|248-181
79794|code|MOV             R7, R0|7-70
79796|code|MOV             R5, R1|13-70
79798|code|CBZ             R1, loc_137E8|185-177
79800|code|LDR             R2, [R1]|10-104
79802|code|MOVW            R3, #0xDEAD|77-246-173-99
79806|code|CMP             R2, R3|154-66
79808|code|BNE             loc_137EE|21-209
79810|code|LDR             R3, [R1,#8]|139-104
79812|code|MOVS            R6, #0|0-38
79814|code|CMP             R3, #0|0-43
79816|code|IT GT|200-191
79818|code|MOVGT           R4, R6|52-70
79820|code|BLE             loc_137E4|10-221
79822|code|LDR             R3, [R5,#0x10]|43-105
79824|code|MOV             R0, R7|56-70
79826|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
79830|code|ADDS            R4, #1|1-52
79832|code|BL              sub_13548|255-247-182-254
79836|code|LDR             R3, [R5,#8]|171-104
79838|code|CMP             R3, R4|163-66
79840|code|ADD             R6, R0|6-68
79842|code|BGT             loc_137CE|244-220
79844|code|MOV             R0, R6|48-70
79846|code|POP             {R3-R7,PC}|248-189
79848|code|MOV             R6, R1|14-70
79850|code|MOV             R0, R6|48-70
79852|code|POP             {R3-R7,PC}|248-189
79854|code|LDR             R0, =aH2Magic57005; "(h2)->magic == 57005"|3-72
79856|code|MOVW            R2, #0x639; line|64-242-57-98
79860|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
79862|code|LDR             R3, =aHostlistPushLi; "hostlist_push_list"|3-75
79864|code|BLX             __assert_fail|246-247-174-234
79868|data|DCD aH2Magic57005; "(h2)->magic == 57005"|180-189-1-0
79872|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
79876|data|DCD aHostlistPushLi; "hostlist_push_list"|244-185-1-0
79880|code|PUSH.W          {R4-R9,LR}|45-233-240-67
79884|code|MOV             R4, R0|4-70
79886|code|SUB             SP, SP, #0xC|131-176
79888|code|CMP             R0, #0|0-40
79890|code|BEQ             loc_138EA|106-208
79892|code|LDR             R2, [R0]|2-104
79894|code|MOVW            R3, #0xDEAD|77-246-173-99
79898|code|CMP             R2, R3|154-66
79900|code|BNE             loc_138DC|94-209
79902|code|LDR             R7, [R0,#0xC]|199-104
79904|code|CMP             R7, #0|0-47
79906|code|BLE             loc_138BC|75-221
79908|code|LDR             R2, [R0,#8]|130-104
79910|code|LDR             R3, [R0,#0x10]|3-105
79912|code|SUBS            R2, #1|1-58
79914|code|LDR.W           R5, [R3,R2,LSL#2]|83-248-34-80
79918|code|CMP             R5, #0|0-45
79920|code|BEQ             loc_138F8|98-208
79922|code|LDRB            R3, [R5,#0x10]|43-124
79924|code|LSLS            R2, R3, #0x1F|218-7
79926|code|BMI             loc_13870|27-212
79928|code|MOV             R0, R5|40-70
79930|code|BL              sub_12ECC|255-247-71-251
79934|code|MOV             R6, R0|6-70
79936|code|CBNZ            R0, loc_13882|248-185
79938|code|SUBS            R7, #1|1-63
79940|code|MOV             R0, R5|40-70
79942|code|STR             R7, [R4,#0xC]|231-96
79944|code|BL              sub_12F48|255-247-126-251
79948|code|CBZ             R0, loc_13868|96-177
79950|code|LDR             R3, [R4,#8]|163-104
79952|code|LDR             R2, [R4,#0x10]|34-105
79954|code|SUBS            R3, #1|1-59
79956|code|STR             R3, [R4,#8]|163-96
79958|code|LDR.W           R0, [R2,R3,LSL#2]|82-248-35-0
79962|code|BL              sub_12C38|255-247-237-249
79966|code|LDR             R2, [R4,#8]|162-104
79968|code|LDR             R3, [R4,#0x10]|35-105
79970|code|MOVS            R1, #0|0-33
79972|code|STR.W           R1, [R3,R2,LSL#2]|67-248-34-16
79976|code|MOV             R0, R6|48-70
79978|code|ADD             SP, SP, #0xC|3-176
79980|code|POP.W           {R4-R9,PC}|189-232-240-131
79984|code|LDM.W           R5, {R0,R3}|149-232-9-0
79988|code|ADDS            R3, #1|1-51
79990|code|STR             R3, [R5,#4]|107-96
79992|code|BLX             __strdup|246-247-172-233
79996|code|LDR             R7, [R4,#0xC]|231-104
79998|code|MOV             R6, R0|6-70
80000|code|B               loc_13842|223-231
80002|code|LDR             R7, [R5]|47-104
80004|code|MOV             R0, R7; s|56-70
80006|code|BLX             strlen|246-247-100-233
80010|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
80014|code|ADD.W           R9, R8, #0x10|8-241-16-9
80018|code|ADD             R9, R0|129-68
80020|code|MOV             R0, R9; size|72-70
80022|code|BLX             malloc|246-247-24-233
80026|code|MOV             R6, R0|6-70
80028|code|CBZ             R0, loc_138C0|128-177
80030|code|LDR.W           LR, [R5,#8]|213-248-8-224
80034|code|MOV             R3, R7|59-70
80036|code|MOV             R1, R9; maxlen|73-70
80038|code|LDR             R2, =aS0Lu; "%s%0*lu"|24-74
80040|code|ADD.W           R12, LR, #0xFFFFFFFF|14-241-255-60
80044|code|STR.W           R12, [R5,#8]|197-248-8-192
80048|code|STMEA.W         SP, {R8,LR}|141-232-0-65
80052|code|BLX             snprintf|246-247-130-233
80056|code|LDR             R7, [R4,#0xC]|231-104
80058|code|B               loc_13842|194-231
80060|code|MOVS            R6, #0|0-38
80062|code|B               loc_13868|211-231
80064|code|BLX             __errno_location|246-247-112-233
80068|code|MOVS            R2, #0xC|12-34
80070|code|MOV.W           R1, #0x320|79-244-72-113
80074|code|MOV             R3, R0|3-70
80076|code|LDR             R0, =aHostlistC; "hostlist.c"|15-72
80078|code|STR             R2, [R3]|26-96
80080|code|LDR             R2, =aHostrangePop; "hostrange pop"|15-74
80082|code|BL              sub_12B20|255-247-37-249
80086|code|LDR             R7, [R4,#0xC]|231-104
80088|code|MOV             R6, R0|6-70
80090|code|B               loc_13842|178-231
80092|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|13-72
80094|code|MOV.W           R2, #0x648; line|79-244-201-98
80098|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
80100|code|LDR             R3, =aHostlistPop; "hostlist_pop"|12-75
80102|code|BLX             __assert_fail|246-247-56-234
80106|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|12-72
80108|code|MOV.W           R2, #0x648; line|79-244-201-98
80112|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
80114|code|LDR             R3, =aHostlistPop; "hostlist_pop"|9-75
80116|code|BLX             __assert_fail|246-247-48-234
80120|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|9-72
80122|code|MOV.W           R2, #0x318; line|79-244-70-114
80126|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
80128|code|LDR             R3, =aHostrangePop_0; "hostrange_pop"|8-75
80130|code|BLX             __assert_fail|246-247-42-234
80134|data|ALIGN 4|0-191
80136|data|DCD aS0Lu; "%s%0*lu"|220-189-1-0
80140|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
80144|data|DCD aHostrangePop; "hostrange pop"|204-189-1-0
80148|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
80152|data|DCD aHostlistPop; "hostlist_pop"|8-186-1-0
80156|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
80160|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
80164|data|DCD aHostrangePop_0; "hostrange_pop"|24-186-1-0
80168|code|PUSH.W          {R4-R10,LR}|45-233-240-71
80172|code|SUB             SP, SP, #0x60 ; '`'|152-176
80174|code|LDR             R7, =__stack_chk_guard|42-79
80176|code|MOV             R6, R1|14-70
80178|code|LDR             R3, [R7]|59-104
80180|code|STR             R3, [SP,#0x5C]|23-147
80182|code|CMP             R0, #0|0-40
80184|code|BEQ             loc_139C8|70-208
80186|code|LDR             R2, [R0]|2-104
80188|code|MOVW            R3, #0xDEAD|77-246-173-99
80192|code|CMP             R2, R3|154-66
80194|code|BNE             loc_139BA|58-209
80196|code|LDR.W           R10, [R0,#8]|208-248-8-160
80200|code|CMP.W           R10, #0|186-241-0-15
80204|code|BLE             loc_139A6|43-221
80206|code|MOVS            R4, #0|0-36
80208|code|LDR.W           R9, [R0,#0x10]|208-248-16-144
80212|code|MOV             R8, R4|160-70
80214|code|B               loc_13962|4-224
80216|code|ADD.W           R8, R8, #1|8-241-1-8
80220|code|ADDS            R4, R4, R0|36-24
80222|code|CMP             R8, R10|208-69
80224|code|BEQ             loc_139A6|33-208
80226|code|LDR.W           R5, [R9],#4|89-248-4-91
80230|code|MOV             R0, R5|40-70
80232|code|BL              sub_12ECC|255-247-176-250
80236|code|SUBS            R3, R0, #1|67-30
80238|code|ADDS            R3, R3, R4|27-25
80240|code|CMP             R3, R6|179-66
80242|code|BLT             loc_13958|241-219
80244|code|LDR             R3, [R5]|43-104
80246|code|MOVS            R1, #0x4F ; 'O'|79-33
80248|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|24-74
80250|code|ADD             R0, SP, #0xC|3-168
80252|code|BLX             snprintf|246-247-30-233
80256|code|LDRB            R3, [R5,#0x10]|43-124
80258|code|LSLS            R1, R3, #0x1F|217-7
80260|code|BMI             loc_1399E|11-212
80262|code|LDR             R2, [R5,#4]|106-104
80264|code|SUBS            R4, R6, R4|52-27
80266|code|LDR             R3, [R5,#0xC]|235-104
80268|code|ADD             R5, SP, #0xC|3-173
80270|code|ADDS            R4, R4, R2|164-24
80272|code|RSB.W           R1, R0, #0x4F ; 'O'|192-241-79-1
80276|code|LDR             R2, =a0Lu; "%0*lu"|18-74
80278|code|ADDS            R0, R5, R0|40-24
80280|code|STR             R4, [SP]|0-148
80282|code|BLX             snprintf|246-247-16-233
80286|code|ADD             R0, SP, #0xC|3-168
80288|code|BLX             __strdup|246-247-24-233
80292|code|B               loc_139A8|0-224
80294|code|MOVS            R0, #0|0-32
80296|code|LDR             R2, [SP,#0x5C]|23-154
80298|code|LDR             R3, [R7]|59-104
80300|code|CMP             R2, R3|154-66
80302|code|BNE             loc_139B6|2-209
80304|code|ADD             SP, SP, #0x60 ; '`'|24-176
80306|code|POP.W           {R4-R10,PC}|189-232-240-135
80310|code|BLX             __stack_chk_fail|246-247-16-232
80314|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|10-72
80316|code|MOVW            R2, #0x6FD|64-242-253-98
80320|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
80322|code|LDR             R3, =aHostlistNth; "hostlist_nth"|10-75
80324|code|BLX             __assert_fail|246-247-200-233
80328|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
80330|code|MOVW            R2, #0x6FD|64-242-253-98
80334|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
80336|code|LDR             R3, =aHostlistNth; "hostlist_nth"|6-75
80338|code|BLX             __assert_fail|246-247-194-233
80342|data|ALIGN 4|0-191
80344|data|DCD __stack_chk_guard|16-74-2-0
80348|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
80352|data|DCD a0Lu; "%0*lu"|120-189-1-0
80356|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
80360|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
80364|data|DCD aHostlistNth; "hostlist_nth"|40-186-1-0
80368|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
80372|code|PUSH            {R3,LR}|8-181
80374|code|CBZ             R0, loc_13A06|48-177
80376|code|LDR             R2, [R0]|2-104
80378|code|MOVW            R3, #0xDEAD|77-246-173-99
80382|code|CMP             R2, R3|154-66
80384|code|BNE             loc_13A14|8-209
80386|code|LDR             R0, [R0,#0xC]|192-104
80388|code|POP             {R3,PC}|8-189
80390|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
80392|code|MOVW            R2, #0x737; line|64-242-55-114
80396|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
80398|code|LDR             R3, =aHostlistCount; "hostlist_count"|7-75
80400|code|BLX             __assert_fail|246-247-162-233
80404|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|6-72
80406|code|MOVW            R2, #0x737; line|64-242-55-114
80410|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
80412|code|LDR             R3, =aHostlistCount; "hostlist_count"|3-75
80414|code|BLX             __assert_fail|246-247-156-233
80418|data|ALIGN 4|0-191
80420|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
80424|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
80428|data|DCD aHostlistCount; "hostlist_count"|56-186-1-0
80432|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
80436|code|PUSH.W          {R4-R8,LR}|45-233-240-65
80440|code|MOV             R5, R0|5-70
80442|code|CMP             R1, #0|0-41
80444|code|BEQ             loc_13AB6|59-208
80446|code|MOV             R0, R1|8-70
80448|code|BL              sub_12C54|255-247-8-249
80452|code|MOV             R7, R0|7-70
80454|code|CMP             R5, #0|0-45
80456|code|BEQ             loc_13ACA|63-208
80458|code|LDR             R2, [R5]|42-104
80460|code|MOVW            R3, #0xDEAD|77-246-173-99
80464|code|CMP             R2, R3|154-66
80466|code|BNE             loc_13ABC|51-209
80468|code|LDR             R3, [R5,#8]|171-104
80470|code|CMP             R3, #0|0-43
80472|code|BLE             loc_13AA6|37-221
80474|code|MOVS            R6, #0|0-38
80476|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
80480|code|MOV             R4, R6|52-70
80482|code|B               loc_13A7A|10-224
80484|code|LDR.W           R8, [R5,#0x10]|213-248-16-128
80488|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
80492|code|ADDS            R4, #1|1-52
80494|code|BL              sub_12ECC|255-247-45-250
80498|code|LDR             R3, [R5,#8]|171-104
80500|code|CMP             R3, R4|163-66
80502|code|ADD             R6, R0|6-68
80504|code|BLE             loc_13AA6|21-221
80506|code|LDR.W           R0, [R8,R4,LSL#2]|88-248-36-0
80510|code|MOV             R1, R7|57-70
80512|code|MOV.W           R8, R4,LSL#2|79-234-132-8
80516|code|BL              sub_12DD4|255-247-166-249
80520|code|CMP             R0, #0|0-40
80522|code|BEQ             loc_13A64|235-208
80524|code|LDR             R3, [R7,#0xC]|251-104
80526|code|CBZ             R3, loc_13AAA|99-177
80528|code|LDR             R3, [R5,#0x10]|43-105
80530|code|LDR.W           R3, [R3,R8]|83-248-8-48
80534|code|LDRB            R2, [R3,#0x10]|26-124
80536|code|LSLS            R0, R2, #0x1F|208-7
80538|code|BMI             loc_13AAA|6-212
80540|code|LDR             R2, [R7,#8]|186-104
80542|code|LDR             R3, [R3,#4]|91-104
80544|code|SUBS            R3, R2, R3|211-26
80546|code|ADDS            R6, R3, R6|158-25
80548|code|B               loc_13AAA|1-224
80550|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
80554|code|MOV             R0, R7|56-70
80556|code|BL              sub_12C10|255-247-176-248
80560|code|MOV             R0, R6|48-70
80562|code|POP.W           {R4-R8,PC}|189-232-240-129
80566|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
80570|code|B               loc_13AB0|249-231
80572|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|6-72
80574|code|MOVW            R2, #0x747; line|64-242-71-114
80578|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
80580|code|LDR             R3, =aHostlistFind; "hostlist_find"|6-75
80582|code|BLX             __assert_fail|246-247-72-233
80586|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
80588|code|MOVW            R2, #0x747; line|64-242-71-114
80592|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
80594|code|LDR             R3, =aHostlistFind; "hostlist_find"|3-75
80596|code|BLX             __assert_fail|246-247-64-233
80600|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
80604|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
80608|data|DCD aHostlistFind; "hostlist_find"|72-186-1-0
80612|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
80616|code|PUSH.W          {R4-R11,LR}|45-233-240-79
80620|code|SUB             SP, SP, #0x1C|135-176
80622|code|STR             R0, [SP,#0x10]|4-144
80624|code|STR             R1, [SP,#0xC]|3-145
80626|code|STR             R2, [SP,#0x14]|5-146
80628|code|CMP             R0, #0|0-40
80630|code|BEQ.W           loc_13C48|0-240-167-128
80634|code|LDR             R4, [SP,#0x10]|4-156
80636|code|MOVW            R3, #0xDEAD|77-246-173-99
80640|code|LDR             R2, [R4]|34-104
80642|code|CMP             R2, R3|154-66
80644|code|BNE.W           loc_13C5A|64-240-169-128
80648|code|LDR             R3, [R4,#8]|163-104
80650|code|CMP             R3, #0|0-43
80652|code|ITT GT|196-191
80654|code|MOVGT.W         R11, #0|79-240-0-11
80658|code|STRGT.W         R11, [SP,#8]|205-248-8-176
80662|code|BLE.W           loc_13C3E|64-243-146-128
80666|code|LDR             R4, [SP,#0xC]|3-156
80668|code|MOVS            R3, #0|0-35
80670|code|RSB.W           R8, R11, R4|203-235-4-8
80674|code|CMP             R4, R8|68-69
80676|code|BCC             loc_13BB2|69-211
80678|code|LDR             R4, [SP,#0x10]|4-156
80680|code|LDR             R3, [R4,#0x10]|35-105
80682|code|LDR             R4, [SP,#8]|2-156
80684|code|LDR.W           R7, [R3,R4,LSL#2]|83-248-36-112
80688|code|CMP.W           R8, #0|184-241-0-15
80692|code|BEQ.W           loc_13C56|0-240-143-128
80696|code|LDRB            R6, [R7,#0x10]|62-124
80698|code|LDR             R4, [SP,#0x14]|5-156
80700|code|ANDS.W          R6, R6, #1|22-240-1-6
80704|code|ADD.W           R9, R4, R11|4-235-11-9
80708|code|BNE             loc_13C22|109-209
80710|code|LDR             R5, [R7,#4]|125-104
80712|code|LDR             R3, [R7,#8]|187-104
80714|code|CMP             R5, R3|157-66
80716|code|BHI             loc_13C34|114-216
80718|code|MOV.W           R10, #0x2C ; ','|79-240-44-10
80722|code|B               loc_13B64|7-224
80724|code|ADDS            R0, R6, R0|48-24
80726|code|ADDS            R5, #1|1-53
80728|code|ADDS            R6, R0, #1|70-28
80730|code|STRB.W          R10, [R9,R0]|9-248-0-160
80734|code|LDR             R3, [R7,#8]|187-104
80736|code|CMP             R5, R3|157-66
80738|code|BHI             loc_13C02|78-216
80740|code|RSB.W           R4, R6, R8|198-235-8-4
80744|code|LDR.W           LR, [R7,#0xC]|215-248-12-224
80748|code|CMP             R8, R4|160-69
80750|code|IT CC|56-191
80752|code|MOVCC           R4, #0|0-36
80754|code|LDR             R3, [R7]|59-104
80756|code|ADD.W           R0, R9, R6|9-235-6-0
80760|code|LDR             R2, =aS0Lu; "%s%0*lu"|59-74
80762|code|MOV             R1, R4|33-70
80764|code|STR.W           LR, [SP]|205-248-0-224
80768|code|STR             R5, [SP,#4]|1-149
80770|code|BLX             snprintf|246-247-28-232
80774|code|CMP             R4, R0|132-66
80776|code|ITE HI|140-191
80778|code|MOVHI           R4, #0|0-36
80780|code|MOVLS           R4, #1|1-36
80782|code|ORRS.W          R4, R4, R0,LSR#31|84-234-208-116
80786|code|BEQ             loc_13B54|223-208
80788|code|ADD             R9, R8|193-68
80790|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
80794|code|MOVS            R2, #1|1-34
80796|code|MOV             R0, R3|24-70
80798|code|MOVS            R1, #0|0-33
80800|code|STRB.W          R1, [R9,#-1]|9-248-1-28
80804|code|CMP             R8, R0|128-69
80806|code|ITE CS|44-191
80808|code|MOVCS           R0, R2|16-70
80810|code|ORRCC.W         R0, R2, #1|66-240-1-0
80814|code|CMP             R0, #0|0-40
80816|code|BNE             loc_13C1A|51-209
80818|code|LDR             R4, [SP,#8]|2-156
80820|code|ADD             R3, R11|91-68
80822|code|MOVS            R2, #0x2C ; ','|44-34
80824|code|ADD.W           R11, R3, #1|3-241-1-11
80828|code|ADDS            R4, #1|1-52
80830|code|STR             R4, [SP,#8]|2-148
80832|code|LDR             R4, [SP,#0x14]|5-156
80834|code|STRB            R2, [R4,R3]|226-84
80836|code|LDR             R4, [SP,#0x10]|4-156
80838|code|LDR             R3, [R4,#8]|163-104
80840|code|LDR             R4, [SP,#8]|2-156
80842|code|CMP             R3, R4|163-66
80844|code|BGT             loc_13B1A|165-220
80846|code|MOVS            R0, #0|0-32
80848|code|MOVS            R2, #0|0-34
80850|code|CMP.W           R11, #0|187-241-0-15
80854|code|MOV             R3, R11|91-70
80856|code|ITTT GT|194-191
80858|code|ADDGT.W         R11, R11, #0xFFFFFFFF|11-241-255-59
80862|code|MOVGT           R2, R11|90-70
80864|code|MOVGT           R3, R11|91-70
80866|code|LDR             R4, [SP,#0x14]|5-156
80868|code|MOVS            R1, #0|0-33
80870|code|CMP             R0, R1|136-66
80872|code|IT NE|24-191
80874|code|MOVNE.W         R11, #0xFFFFFFFF|79-240-255-59
80878|code|STRB            R1, [R4,R2]|161-84
80880|code|LDR             R4, [SP,#0xC]|3-156
80882|code|CMP             R4, R3|156-66
80884|code|IT EQ|8-191
80886|code|MOVEQ.W         R11, #0xFFFFFFFF|79-240-255-59
80890|code|MOV             R0, R11|88-70
80892|code|ADD             SP, SP, #0x1C|7-176
80894|code|POP.W           {R4-R11,PC}|189-232-240-143
80898|code|LSRS            R2, R0, #0x1F|194-15
80900|code|MOV             R3, R0|3-70
80902|code|MOVS            R1, #0|0-33
80904|code|STRB.W          R1, [R9,R0]|9-248-0-16
80908|code|CMP             R8, R0|128-69
80910|code|ITE CS|44-191
80912|code|MOVCS           R0, R2|16-70
80914|code|ORRCC.W         R0, R2, #1|66-240-1-0
80918|code|CMP             R0, #0|0-40
80920|code|BEQ             loc_13BB2|203-208
80922|code|LDR.W           R11, [SP,#0xC]|221-248-12-176
80926|code|MOVS            R0, #1|1-32
80928|code|B               loc_13BD0|214-231
80930|code|LDR             R3, [R7]|59-104
80932|code|MOV             R0, R9|72-70
80934|code|LDR             R2, =(aRegcompFailedS+0x10); "%s"|17-74
80936|code|MOV             R1, R8|65-70
80938|code|BLX             snprintf|245-247-200-239
80942|code|MOV             R3, R0|3-70
80944|code|LSRS            R2, R0, #0x1F|194-15
80946|code|B               loc_13BA4|183-231
80948|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
80952|code|MOVS            R2, #1|1-34
80954|code|MOV             R0, R3|24-70
80956|code|B               loc_13C06|227-231
80958|code|MOVS            R3, #0|0-35
80960|code|MOV             R0, R3|24-70
80962|code|MOV             R2, R3|26-70
80964|code|MOV             R11, R3|155-70
80966|code|B               loc_13BE2|204-231
80968|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
80970|code|MOV.W           R2, #0x7F8|79-244-255-98
80974|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
80976|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|9-75
80978|code|BLX             __assert_fail|246-247-130-232
80982|code|MOV             R3, R8|67-70
80984|code|B               loc_13BB2|171-231
80986|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|8-72
80988|code|MOV.W           R2, #0x7F8|79-244-255-98
80992|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
80994|code|LDR             R3, =aHostlistDerang; "hostlist_deranged_string"|5-75
80996|code|BLX             __assert_fail|246-247-120-232
81000|data|DCD aS0Lu; "%s%0*lu"|220-189-1-0
81004|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
81008|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
81012|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81016|data|DCD aHostlistDerang; "hostlist_deranged_string"|88-186-1-0
81020|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
81024|code|PUSH.W          {R4-R8,LR}|45-233-240-65
81028|code|SUB             SP, SP, #8|130-176
81030|code|MOVS            R3, #0|0-35
81032|code|MOV             R6, R0|6-70
81034|code|MOV             R5, R1|13-70
81036|code|MOV             R7, R2|23-70
81038|code|STR             R3, [SP,#0x20+var_1C]|1-147
81040|code|CMP             R0, #0|0-40
81042|code|BEQ             loc_13D38|81-208
81044|code|LDR             R1, [R0]|1-104
81046|code|MOVW            R2, #0xDEAD|77-246-173-98
81050|code|CMP             R1, R2|145-66
81052|code|BNE             loc_13D2A|69-209
81054|code|LDR             R2, [R0,#8]|130-104
81056|code|MOV             R4, R3|28-70
81058|code|MOV.W           R8, #0x2C ; ','|79-240-44-8
81062|code|CMP             R3, R2|147-66
81064|code|ITE GE|172-191
81066|code|MOVGE           R3, #0|0-35
81068|code|MOVLT           R3, #1|1-35
81070|code|CMP             R4, R5|172-66
81072|code|ITE CS|44-191
81074|code|MOVCS           R3, #0|0-35
81076|code|ANDCC.W         R3, R3, #1|3-240-1-3
81080|code|CBZ             R3, loc_13CF6|235-177
81082|code|ADDS            R3, R7, R4|59-25
81084|code|SUBS            R2, R5, R4|42-27
81086|code|MOV             R0, R6|48-70
81088|code|ADD             R1, SP, #0x20+var_1C|1-169
81090|code|BL              sub_13308|255-247-33-251
81094|code|LDR             R2, [R6,#8]|178-104
81096|code|ADDS            R4, R4, R0|36-24
81098|code|CMP             R4, #0|0-44
81100|code|ITE LE|212-191
81102|code|MOVLE           R3, #0|0-35
81104|code|MOVGT           R3, #1|1-35
81106|code|CMP             R4, R5|172-66
81108|code|ITE CS|44-191
81110|code|MOVCS           R3, #0|0-35
81112|code|ANDCC.W         R3, R3, #1|3-240-1-3
81116|code|CBNZ            R3, loc_13D1A|235-185
81118|code|LDR             R3, [SP,#0x20+var_1C]|1-155
81120|code|CMP             R3, R2|147-66
81122|code|ITE GE|172-191
81124|code|MOVGE           R3, #0|0-35
81126|code|MOVLT           R3, #1|1-35
81128|code|CMP             R4, R5|172-66
81130|code|ITE CS|44-191
81132|code|MOVCS           R3, #0|0-35
81134|code|ANDCC.W         R3, R3, #1|3-240-1-3
81138|code|CMP             R3, #0|0-43
81140|code|BNE             loc_13CBA|225-209
81142|code|CMP             R5, R4|165-66
81144|code|ITT HI|132-191
81146|code|BICHI.W         R2, R4, R4,ASR#31|36-234-228-114
81150|code|STRBHI          R3, [R7,R2]|187-84
81152|code|BHI             loc_13D12|7-216
81154|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
81158|code|CBZ             R5, loc_13D12|37-177
81160|code|ADDS            R5, R7, R5|125-25
81162|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
81166|code|STRB.W          R3, [R5,#-1]|5-248-1-60
81170|code|MOV             R0, R4|32-70
81172|code|ADD             SP, SP, #8|2-176
81174|code|POP.W           {R4-R8,PC}|189-232-240-129
81178|code|LDR             R3, [SP,#0x20+var_1C]|1-155
81180|code|CMP             R2, R3|154-66
81182|code|BLE             loc_13CA6|194-221
81184|code|STRB.W          R8, [R7,R4]|7-248-4-128
81188|code|ADDS            R4, #1|1-52
81190|code|LDR             R2, [R6,#8]|178-104
81192|code|B               loc_13CA6|189-231
81194|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|7-72
81196|code|MOVW            R2, #0x851; line|64-246-81-2
81200|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
81202|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|7-75
81204|code|BLX             __assert_fail|246-247-16-232
81208|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|6-72
81210|code|MOVW            R2, #0x851; line|64-246-81-2
81214|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
81216|code|LDR             R3, =aHostlistRanged; "hostlist_ranged_string"|3-75
81218|code|BLX             __assert_fail|246-247-10-232
81222|data|ALIGN 4|0-191
81224|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
81228|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81232|data|DCD aHostlistRanged; "hostlist_ranged_string"|116-186-1-0
81236|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
81240|code|PUSH            {R4,LR}|16-181
81242|code|MOV             R4, R0|4-70
81244|code|MOVS            R0, #0x18; size|24-32
81246|code|BLX             malloc|245-247-180-238
81250|code|CBZ             R0, loc_13D92|176-177
81252|code|MOVS            R3, #0|0-35
81254|code|MOVW            R2, #0xDEAD|77-246-173-98
81258|code|STR             R3, [R0,#4]|67-96
81260|code|STR             R3, [R0,#0xC]|195-96
81262|code|STR             R3, [R0,#8]|131-96
81264|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
81268|code|STR             R0, [R0,#0x14]|64-97
81270|code|STR             R3, [R0,#0x10]|3-97
81272|code|STR             R2, [R0]|2-96
81274|code|CBZ             R4, loc_13DAA|180-177
81276|code|LDR             R3, [R4]|35-104
81278|code|CMP             R3, R2|147-66
81280|code|BNE             loc_13DB8|26-209
81282|code|LDR             R3, [R4,#0x10]|35-105
81284|code|LDR             R2, [R4,#0x14]|98-105
81286|code|STR             R4, [R0,#4]|68-96
81288|code|LDR             R3, [R3]|27-104
81290|code|STR             R2, [R0,#0x14]|66-97
81292|code|STR             R0, [R4,#0x14]|96-97
81294|code|STR             R3, [R0,#0xC]|195-96
81296|code|POP             {R4,PC}|16-189
81298|code|BLX             __errno_location|245-247-8-239
81302|code|MOVS            R3, #0xC|12-35
81304|code|MOVW            R1, #0x879|64-246-121-1
81308|code|LDR             R2, =aHostlistIterat_0; "hostlist_iterator_create"|10-74
81310|code|STR             R3, [R0]|3-96
81312|code|LDR             R0, =aHostlistC; "hostlist.c"|10-72
81314|code|POP.W           {R4,LR}|189-232-16-64
81318|code|B.W             sub_12B20|254-247-187-190
81322|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|9-72
81324|code|MOVW            R2, #0x87B; line|64-246-123-2
81328|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
81330|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_create"|8-75
81332|code|BLX             __assert_fail|245-247-208-239
81336|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|7-72
81338|code|MOVW            R2, #0x87B; line|64-246-123-2
81342|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
81344|code|LDR             R3, =aHostlistIterat_1; "hostlist_iterator_create"|4-75
81346|code|BLX             __assert_fail|245-247-202-239
81350|data|ALIGN 4|0-191
81352|data|DCD aHostlistIterat_0; "hostlist_iterator_create"|228-189-1-0
81356|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81360|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
81364|data|DCD aHostlistIterat_1; "hostlist_iterator_create"|140-186-1-0
81368|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
81372|code|LDR             R0, [R0]|0-104
81374|code|B.W             sub_13D58|255-247-187-191
81378|data|ALIGN 4|0-191
81380|code|PUSH            {R3,LR}|8-181
81382|code|CBZ             R0, loc_13E06|112-177
81384|code|LDR             R2, [R0]|2-104
81386|code|MOVW            R3, #0xDEAD|77-246-173-99
81390|code|CMP             R2, R3|154-66
81392|code|BNE             loc_13E14|16-209
81394|code|LDR             R3, [R0,#4]|67-104
81396|code|MOVS            R2, #0|0-34
81398|code|STR             R2, [R0,#8]|130-96
81400|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
81404|code|LDR             R3, [R3,#0x10]|27-105
81406|code|LDR             R3, [R3]|27-104
81408|code|STR             R2, [R0,#0x10]|2-97
81410|code|STR             R3, [R0,#0xC]|195-96
81412|code|POP             {R3,PC}|8-189
81414|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
81416|code|MOVW            R2, #0x88B; line|64-246-139-2
81420|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
81422|code|LDR             R3, =aHostlistIterat_3; "hostlist_iterator_reset"|7-75
81424|code|BLX             __assert_fail|245-247-162-239
81428|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|6-72
81430|code|MOVW            R2, #0x88C; line|64-246-140-2
81434|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
81436|code|LDR             R3, =aHostlistIterat_3; "hostlist_iterator_reset"|3-75
81438|code|BLX             __assert_fail|245-247-156-239
81442|data|ALIGN 4|0-191
81444|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
81448|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81452|data|DCD aHostlistIterat_3; "hostlist_iterator_reset"|168-186-1-0
81456|data|DCD aIMagic57005; "i->magic == 57005"|20-190-1-0
81460|code|PUSH            {R4-R6,LR}|112-181
81462|code|MOV             R5, R1|13-70
81464|code|LDR             R4, [R0,#0x14]|68-105
81466|code|MOV             R6, R2|22-70
81468|code|CBNZ            R4, loc_13E48|36-185
81470|code|B               locret_13E6C|21-224
81472|code|CMP             R3, R5|171-66
81474|code|BEQ             loc_13E6E|20-208
81476|code|LDR             R4, [R4,#0x14]|100-105
81478|code|CBZ             R4, locret_13E6C|140-177
81480|code|LDR             R3, [R4,#8]|163-104
81482|code|CMP             R6, #0|0-46
81484|code|BEQ             loc_13E40|248-208
81486|code|CMP             R5, R3|157-66
81488|code|RSB.W           R2, R6, R3|198-235-3-2
81492|code|BGT             loc_13E44|246-220
81494|code|CMP             R2, #0|0-42
81496|code|STR             R2, [R4,#8]|162-96
81498|code|BLT             loc_13E7C|15-219
81500|code|LDR             R3, [R4,#4]|99-104
81502|code|LDR             R3, [R3,#0x10]|27-105
81504|code|LDR.W           R3, [R3,R2,LSL#2]|83-248-34-48
81508|code|STR             R3, [R4,#0xC]|227-96
81510|code|LDR             R4, [R4,#0x14]|100-105
81512|code|CMP             R4, #0|0-44
81514|code|BNE             loc_13E48|237-209
81516|code|POP             {R4-R6,PC}|112-189
81518|code|LDR             R3, [R4,#0x10]|35-105
81520|code|CMP             R3, #0|0-43
81522|code|ADD.W           R3, R3, #0xFFFFFFFF|3-241-255-51
81526|code|IT GE|168-191
81528|code|STRGE           R3, [R4,#0x10]|35-97
81530|code|B               loc_13E44|227-231
81532|code|MOV             R0, R4|32-70
81534|code|BL              sub_13DE4|255-247-177-255
81538|code|B               loc_13E44|223-231
81540|code|PUSH            {R3-R7,LR}|248-181
81542|code|CMP             R0, #0|0-40
81544|code|BEQ             loc_13EE2|43-208
81546|code|LDR             R2, [R0]|2-104
81548|code|MOVW            R3, #0xDEAD|77-246-173-99
81552|code|CMP             R2, R3|154-66
81554|code|BNE             loc_13EFE|52-209
81556|code|LDR             R7, [R0,#8]|135-104
81558|code|CMP             R7, R1|143-66
81560|code|ITE GT|204-191
81562|code|MOVGT           R3, #0|0-35
81564|code|MOVLE           R3, #1|1-35
81566|code|ORRS.W          R3, R3, R1,LSR#31|83-234-209-115
81570|code|BNE             loc_13EF0|37-209
81572|code|LDR             R2, [R0,#0x10]|2-105
81574|code|SUBS            R7, #1|1-63
81576|code|LSLS            R3, R1, #2|139-0
81578|code|CMP             R1, R7|185-66
81580|code|MOV             R5, R2|21-70
81582|code|LDR.W           R4, [R2,R1,LSL#2]|82-248-33-64
81586|code|BGE             loc_13ECA|10-218
81588|code|MOV             R5, R1|13-70
81590|code|B               loc_13EBA|0-224
81592|code|LDR             R2, [R0,#0x10]|2-105
81594|code|ADDS            R6, R2, R3|214-24
81596|code|ADDS            R3, #4|4-51
81598|code|ADDS            R5, #1|1-53
81600|code|LDR             R2, [R2,R3]|210-88
81602|code|CMP             R5, R7|189-66
81604|code|STR             R2, [R6]|50-96
81606|code|BLT             loc_13EB8|247-219
81608|code|LDR             R5, [R0,#0x10]|5-105
81610|code|STR             R7, [R0,#8]|135-96
81612|code|MOVS            R3, #0|0-35
81614|code|MOVS            R2, #1|1-34
81616|code|STR.W           R3, [R5,R7,LSL#2]|69-248-39-48
81620|code|BL              sub_13E34|255-247-174-255
81624|code|MOV             R0, R4|32-70
81626|code|POP.W           {R3-R7,LR}|189-232-248-64
81630|code|B.W             sub_12C38|254-247-171-190
81634|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
81636|code|MOVW            R2, #0x48F; line|64-242-143-66
81640|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
81642|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|10-75
81644|code|BLX             __assert_fail|245-247-52-239
81648|code|LDR             R0, =aNHlNrangesN0; "n < hl->nranges && n >= 0"|9-72
81650|code|MOVW            R2, #0x491; line|64-242-145-66
81654|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
81656|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|6-75
81658|code|BLX             __assert_fail|245-247-46-239
81662|code|LDR             R0, =aHlMagic57005_0; "hl->magic == 57005"|7-72
81664|code|MOV.W           R2, #0x490; line|79-244-146-98
81668|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
81670|code|LDR             R3, =aHostlistDelete; "hostlist_delete_range"|3-75
81672|code|BLX             __assert_fail|245-247-38-239
81676|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
81680|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81684|data|DCD aHostlistDelete; "hostlist_delete_range"|192-186-1-0
81688|data|DCD aNHlNrangesN0; "n < hl->nranges && n >= 0"|40-190-1-0
81692|data|DCD aHlMagic57005_0; "hl->magic == 57005"|136-189-1-0
81696|code|PUSH            {R4-R6,LR}|112-181
81698|code|MOV             R4, R0|4-70
81700|code|MOV             R5, R1|13-70
81702|code|CBZ             R0, loc_13F64|232-177
81704|code|LDR             R2, [R0]|2-104
81706|code|MOVW            R3, #0xDEAD|77-246-173-99
81710|code|CMP             R2, R3|154-66
81712|code|BNE             loc_13F8E|45-209
81714|code|CMP             R1, #0|0-41
81716|code|BLE             loc_13F80|36-221
81718|code|LDR             R3, [R0,#8]|131-104
81720|code|CMP             R1, R3|153-66
81722|code|BGE             loc_13F72|26-218
81724|code|LDR             R3, [R0,#0x10]|3-105
81726|code|SUBS            R2, R1, #1|74-30
81728|code|LDR.W           R1, [R3,R1,LSL#2]|83-248-33-16
81732|code|LDR.W           R0, [R3,R2,LSL#2]|83-248-34-0
81736|code|BL              sub_1322C|255-247-112-249
81740|code|CMP             R0, #0|0-40
81742|code|MOV             R6, R0|6-70
81744|code|BLT             loc_13F60|6-219
81746|code|MOV             R0, R4|32-70
81748|code|MOV             R1, R5|41-70
81750|code|BL              sub_13E84|255-247-149-255
81754|code|LDR             R3, [R4,#0xC]|227-104
81756|code|SUBS            R3, R3, R6|155-27
81758|code|STR             R3, [R4,#0xC]|227-96
81760|code|MOV             R0, R6|48-70
81762|code|POP             {R4-R6,PC}|112-189
81764|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|13-72
81766|code|MOVW            R2, #0x7CE; line|64-242-206-114
81770|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
81772|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|13-75
81774|code|BLX             __assert_fail|245-247-244-238
81778|code|LDR             R0, =aLocHlNranges; "loc < hl->nranges"|13-72
81780|code|MOVW            R2, #0x7D1; line|64-242-209-114
81784|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
81786|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|10-75
81788|code|BLX             __assert_fail|245-247-236-238
81792|code|LDR             R0, =aLoc0; "loc > 0"|10-72
81794|code|MOV.W           R2, #0x7D0; line|79-244-250-98
81798|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
81800|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|6-75
81802|code|BLX             __assert_fail|245-247-230-238
81806|code|LDR             R0, =aHlMagic57005_0; "hl->magic == 57005"|8-72
81808|code|MOVW            R2, #0x7CF; line|64-242-207-114
81812|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
81814|code|LDR             R3, =aAttemptRangeJo; "_attempt_range_join"|3-75
81816|code|BLX             __assert_fail|245-247-222-238
81820|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
81824|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81828|data|DCD aAttemptRangeJo; "_attempt_range_join"|216-186-1-0
81832|data|DCD aLocHlNranges; "loc < hl->nranges"|76-190-1-0
81836|data|DCD aLoc0; "loc > 0"|68-190-1-0
81840|data|DCD aHlMagic57005_0; "hl->magic == 57005"|136-189-1-0
81844|code|PUSH            {R3-R5,LR}|56-181
81846|code|MOV             R4, R0|4-70
81848|code|CBZ             R0, loc_13FFE|8-179
81850|code|LDR             R2, [R0]|2-104
81852|code|MOVW            R3, #0xDEAD|77-246-173-99
81856|code|CMP             R2, R3|154-66
81858|code|BNE             loc_1400C|35-209
81860|code|LDR             R1, [R0,#8]; nmemb|129-104
81862|code|CMP             R1, #1|1-41
81864|code|BLE             locret_13FFC|24-221
81866|code|LDR             R0, [R0,#0x10]; base|0-105
81868|code|MOVS            R2, #4; size|4-34
81870|code|LDR             R3, =(sub_13224+1); compar|19-75
81872|code|MOVS            R5, #1|1-37
81874|code|BLX             qsort|245-247-134-238
81878|code|B               loc_13FE6|6-224
81880|code|MOV             R1, R5|41-70
81882|code|MOV             R0, R4|32-70
81884|code|BL              sub_13F20|255-247-160-255
81888|code|CMP             R0, #0|0-40
81890|code|IT LT|184-191
81892|code|ADDLT           R5, #1|1-53
81894|code|LDR             R3, [R4,#8]|163-104
81896|code|CMP             R5, R3|157-66
81898|code|BLT             loc_13FD8|245-219
81900|code|LDR             R4, [R4,#0x14]|100-105
81902|code|CBZ             R4, locret_13FFC|44-177
81904|code|MOV             R0, R4|32-70
81906|code|BL              sub_13DE4|255-247-247-254
81910|code|LDR             R4, [R4,#0x14]|100-105
81912|code|CMP             R4, #0|0-44
81914|code|BNE             loc_13FF0|249-209
81916|code|POP             {R3-R5,PC}|56-189
81918|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|8-72
81920|code|MOVW            R2, #0x7DE; line|64-242-222-114
81924|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
81926|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|8-75
81928|code|BLX             __assert_fail|245-247-166-238
81932|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|7-72
81934|code|MOVW            R2, #0x7DE; line|64-242-222-114
81938|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
81940|code|LDR             R3, =aHostlistUniq; "hostlist_uniq"|4-75
81942|code|BLX             __assert_fail|245-247-160-238
81946|data|ALIGN 4|0-191
81948|data|DCD sub_13224+1|37-50-1-0
81952|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
81956|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
81960|data|DCD aHostlistUniq; "hostlist_uniq"|236-186-1-0
81964|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
81968|code|PUSH.W          {R3-R11,LR}|45-233-248-79
81972|code|MOV             R8, R0|128-70
81974|code|CMP             R0, #0|0-40
81976|code|BEQ.W           loc_14266|0-240-21-129
81980|code|LDR             R2, [R0]|2-104
81982|code|MOVW            R3, #0xDEAD|77-246-173-99
81986|code|CMP             R2, R3|154-66
81988|code|BNE.W           loc_14220|64-240-236-128
81992|code|LDR             R1, [R0,#8]; nmemb|129-104
81994|code|CMP             R1, #1|1-41
81996|code|BLE.W           locret_14202|64-243-217-128
82000|code|LDR             R0, [R0,#0x10]; base|0-105
82002|code|MOVS            R2, #4; size|4-34
82004|code|LDR             R3, =(sub_13224+1); compar|140-75
82006|code|BLX             qsort|245-247-68-238
82010|code|LDR.W           R4, [R8,#0x14]|216-248-20-64
82014|code|CBZ             R4, loc_1406C|44-177
82016|code|MOV             R0, R4|32-70
82018|code|BL              sub_13DE4|255-247-191-254
82022|code|LDR             R4, [R4,#0x14]|100-105
82024|code|CMP             R4, #0|0-44
82026|code|BNE             loc_14060|249-209
82028|code|LDR.W           R2, [R8]|216-248-0-32
82032|code|MOVW            R3, #0xDEAD|77-246-173-99
82036|code|CMP             R2, R3|154-66
82038|code|BNE.W           loc_14258|64-240-239-128
82042|code|LDR.W           R5, [R8,#8]|216-248-8-80
82046|code|SUBS            R5, #1|1-61
82048|code|CMP             R5, #0|0-45
82050|code|BLE.W           locret_14202|64-243-190-128
82054|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
82058|code|SUBS            R6, R5, #1|110-30
82060|code|B               loc_1409C|6-224
82062|code|CMP             R6, #0|0-46
82064|code|MOV             R5, R6|53-70
82066|code|BLE.W           loc_141C4|64-243-151-128
82070|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
82074|code|SUBS            R6, #1|1-62
82076|code|LDR.W           R7, [R3,R6,LSL#2]|83-248-38-112
82080|code|MOV.W           R10, R5,LSL#2|79-234-133-10
82084|code|MOV.W           R11, R6,LSL#2|79-234-134-11
82088|code|LDR.W           R9, [R3,R5,LSL#2]|83-248-37-144
82092|code|CMP             R7, #0|0-47
82094|code|BEQ.W           loc_1424A|0-240-204-128
82098|code|CMP.W           R9, #0|185-241-0-15
82102|code|BEQ.W           loc_1423C|0-240-193-128
82106|code|LDRB            R3, [R7,#0x10]|59-124
82108|code|LSLS            R2, R3, #0x1F|218-7
82110|code|BMI             loc_1408E|230-212
82112|code|LDRB.W          R3, [R9,#0x10]|153-248-16-48
82116|code|LSLS            R3, R3, #0x1F|219-7
82118|code|BMI             loc_1408E|226-212
82120|code|MOV             R0, R7|56-70
82122|code|MOV             R1, R9|73-70
82124|code|BL              sub_131CC|255-247-126-248
82128|code|CMP             R0, #0|0-40
82130|code|BGT.W           loc_14278|0-243-209-128
82134|code|MOV             R0, R7|56-70
82136|code|MOV             R1, R9|73-70
82138|code|BL              sub_12E38|254-247-173-254
82142|code|CMP             R0, #0|0-40
82144|code|BNE             loc_1408E|213-209
82146|code|LDR             R2, [R7,#8]|186-104
82148|code|LDR.W           R3, [R9,#4]|217-248-4-48
82152|code|CMP             R2, R3|154-66
82154|code|BLS             loc_1408E|208-217
82156|code|MOV             R0, R7|56-70
82158|code|MOV             R1, R9|73-70
82160|code|BL              sub_12F00|254-247-6-255
82164|code|CMP             R0, #0|0-40
82166|code|BEQ             loc_1408E|202-208
82168|code|MOV             R0, R7|56-70
82170|code|BL              sub_1310C|255-247-7-248
82174|code|MOV             R4, R0|4-70
82176|code|CMP             R0, #0|0-40
82178|code|BEQ             loc_1408E|196-208
82180|code|LDR.W           R0, [R8,#0x10]|216-248-16-0
82184|code|LDR             R2, [R7,#8]|186-104
82186|code|LDR.W           R1, [R9,#8]|217-248-8-16
82190|code|LDR.W           R6, [R0,R11]|80-248-11-96
82194|code|LDR.W           R3, [R9,#4]|217-248-4-48
82198|code|CMP             R1, R2|145-66
82200|code|IT CS|40-191
82202|code|MOVCS           R1, R2|17-70
82204|code|LDR.W           R7, [R0,R10]|80-248-10-112
82208|code|STR             R1, [R4,#8]|161-96
82210|code|MOV             R0, R6|48-70
82212|code|LDR             R2, [R6,#8]|178-104
82214|code|STR             R3, [R4,#4]|99-96
82216|code|CMP             R2, R1|138-66
82218|code|IT HI|136-191
82220|code|STRHI           R2, [R7,#8]|186-96
82222|code|STR             R3, [R6,#8]|179-96
82224|code|LDR.W           R9, [R4,#8]|212-248-8-144
82228|code|STR.W           R9, [R7,#4]|199-248-4-144
82232|code|BL              sub_12F48|254-247-6-255
82236|code|CBZ             R0, loc_1414A|40-177
82238|code|MOV             R0, R8|64-70
82240|code|MOV             R1, R5|41-70
82242|code|BL              sub_13E84|255-247-159-254
82246|code|LDR.W           R9, [R4,#8]|212-248-8-144
82250|code|LDR             R1, [R4,#4]|97-104
82252|code|CMP             R1, R9|73-69
82254|code|BLS             loc_1416A|12-217
82256|code|B               loc_141B0|46-224
82258|code|LDR             R2, [R7,#4]|122-104
82260|code|CMP             R2, R3|154-66
82262|code|BHI             loc_14192|28-216
82264|code|MOV             R0, R9|72-70
82266|code|BL              sub_12C38|254-247-109-253
82270|code|LDR             R1, [R4,#4]|97-104
82272|code|LDR             R3, [R4,#8]|163-104
82274|code|ADDS            R1, #1|1-49
82276|code|STR             R1, [R4,#4]|97-96
82278|code|CMP             R1, R3|153-66
82280|code|BHI             loc_141B0|34-216
82282|code|LDR             R3, [R4,#0xC]|227-104
82284|code|MOV             R2, R1|10-70
82286|code|LDR             R0, [R4]|32-104
82288|code|BL              sub_13088|254-247-138-255
82292|code|LDR             R3, [R4,#4]|99-104
82294|code|LDR             R2, [R6,#8]|178-104
82296|code|CMP             R3, R2|147-66
82298|code|MOV             R9, R0|129-70
82300|code|BLS             loc_14152|233-217
82302|code|MOV             R2, R5|42-70
82304|code|MOV             R0, R8|64-70
82306|code|MOV             R1, R9|73-70
82308|code|ADDS            R5, #1|1-53
82310|code|BL              sub_1361C|255-247-73-250
82314|code|LDR             R3, [R4,#4]|99-104
82316|code|LDR             R2, [R7,#4]|122-104
82318|code|CMP             R2, R3|154-66
82320|code|BLS             loc_14158|226-217
82322|code|MOV             R2, R5|42-70
82324|code|MOV             R1, R9|73-70
82326|code|MOV             R0, R8|64-70
82328|code|ADDS            R5, #1|1-53
82330|code|BL              sub_1361C|255-247-63-250
82334|code|MOV             R0, R9|72-70
82336|code|BL              sub_12C38|254-247-74-253
82340|code|LDR             R1, [R4,#4]|97-104
82342|code|LDR             R3, [R4,#8]|163-104
82344|code|ADDS            R1, #1|1-49
82346|code|STR             R1, [R4,#4]|97-96
82348|code|CMP             R1, R3|153-66
82350|code|BLS             loc_1416A|220-217
82352|code|LDR.W           R5, [R8,#8]|216-248-8-80
82356|code|MOV             R0, R4|32-70
82358|code|BL              sub_12C38|254-247-63-253
82362|code|SUBS            R6, R5, #1|110-30
82364|code|CMP             R6, #0|0-46
82366|code|MOV             R5, R6|53-70
82368|code|BGT.W           loc_14096|63-247-105-175
82372|code|LDR.W           R2, [R8]|216-248-0-32
82376|code|MOVW            R3, #0xDEAD|77-246-173-99
82380|code|CMP             R2, R3|154-66
82382|code|BNE             loc_1422E|46-209
82384|code|LDR.W           R5, [R8,#8]|216-248-8-80
82388|code|SUBS            R5, #1|1-61
82390|code|CMP             R5, #0|0-45
82392|code|BLE             locret_14274|76-221
82394|code|LSLS            R4, R5, #2|172-0
82396|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
82400|code|ADDS            R2, R3, R4|26-25
82402|code|LDR             R7, [R3,R4]|31-89
82404|code|LDR.W           R6, [R2,#-4]|82-248-4-108
82408|code|MOV             R1, R7|57-70
82410|code|MOV             R0, R6|48-70
82412|code|BL              sub_12E38|254-247-36-254
82416|code|CBNZ            R0, loc_141FC|32-185
82418|code|LDR             R3, [R7,#4]|123-104
82420|code|LDR             R2, [R6,#8]|178-104
82422|code|SUBS            R3, #1|1-59
82424|code|CMP             R2, R3|154-66
82426|code|BEQ             loc_14206|4-208
82428|code|SUBS            R4, #4|4-60
82430|code|SUBS            R5, #1|1-61
82432|code|BNE             loc_141DC|236-209
82434|code|POP.W           {R3-R11,PC}|189-232-248-143
82438|code|MOV             R0, R6|48-70
82440|code|MOV             R1, R7|57-70
82442|code|BL              sub_12F00|254-247-121-254
82446|code|CMP             R0, #0|0-40
82448|code|BEQ             loc_141FC|244-208
82450|code|LDR             R3, [R7,#8]|187-104
82452|code|MOV             R0, R8|64-70
82454|code|MOV             R1, R5|41-70
82456|code|STR             R3, [R6,#8]|179-96
82458|code|BL              sub_13E84|255-247-51-254
82462|code|B               loc_141FC|237-231
82464|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|26-72
82466|code|MOV.W           R2, #0x768; line|79-244-237-98
82470|code|LDR             R1, =aHostlistC; "hostlist.c"|26-73
82472|code|LDR             R3, =aHostlistSort; "hostlist_sort"|26-75
82474|code|BLX             __assert_fail|245-247-150-237
82478|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|23-72
82480|code|MOVW            R2, #0x783; line|64-242-131-114
82484|code|LDR             R1, =aHostlistC; "hostlist.c"|22-73
82486|code|LDR             R3, =aHostlistCollap; "hostlist_collapse"|24-75
82488|code|BLX             __assert_fail|245-247-142-237
82492|code|LDR             R0, =aH2Void0; "h2 != ((void *)0)"|23-72
82494|code|MOV.W           R2, #0x374; line|79-244-93-114
82498|code|LDR             R1, =aHostlistC; "hostlist.c"|19-73
82500|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|22-75
82502|code|BLX             __assert_fail|245-247-136-237
82506|code|LDR             R0, =aH1Void0; "h1 != ((void *)0)"|22-72
82508|code|MOVW            R2, #0x373; line|64-242-115-50
82512|code|LDR             R1, =aHostlistC; "hostlist.c"|15-73
82514|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|19-75
82516|code|BLX             __assert_fail|245-247-128-237
82520|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|12-72
82522|code|MOVW            R2, #0x79A; line|64-242-154-114
82526|code|LDR             R1, =aHostlistC; "hostlist.c"|12-73
82528|code|LDR             R3, =aHostlistCoales; "hostlist_coalesce"|17-75
82530|code|BLX             __assert_fail|245-247-122-237
82534|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|17-72
82536|code|MOV.W           R2, #0x768; line|79-244-237-98
82540|code|LDR             R1, =aHostlistC; "hostlist.c"|8-73
82542|code|LDR             R3, =aHostlistSort; "hostlist_sort"|9-75
82544|code|BLX             __assert_fail|245-247-114-237
82548|code|POP.W           {R3-R11,PC}|189-232-248-143
82552|code|LDR             R0, =aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|13-72
82554|code|MOVW            R2, #0x379; line|64-242-121-50
82558|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
82560|code|LDR             R3, =aHostrangeInter; "hostrange_intersect"|7-75
82562|code|BLX             __assert_fail|245-247-106-237
82566|data|ALIGN 4|0-191
82568|data|DCD sub_13224+1|37-50-1-0
82572|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
82576|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
82580|data|DCD aHostlistSort; "hostlist_sort"|252-186-1-0
82584|data|DCD aHostlistCollap; "hostlist_collapse"|52-187-1-0
82588|data|DCD aH2Void0; "h2 != ((void *)0)"|72-189-1-0
82592|data|DCD aHostrangeInter; "hostrange_intersect"|32-187-1-0
82596|data|DCD aH1Void0; "h1 != ((void *)0)"|180-188-1-0
82600|data|DCD aHostlistCoales; "hostlist_coalesce"|12-187-1-0
82604|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
82608|data|DCD aHostrangeCmpH1; "hostrange_cmp(h1, h2) <= 0"|92-189-1-0
82612|code|PUSH.W          {R3-R11,LR}|45-233-248-79
82616|code|MOV             R4, R0|4-70
82618|code|MOV             R9, R1|137-70
82620|code|CMP             R0, #0|0-40
82622|code|BEQ             loc_14376|90-208
82624|code|LDR             R2, [R0]|2-104
82626|code|MOVW            R3, #0xDEAD|77-246-173-99
82630|code|CMP             R2, R3|154-66
82632|code|BNE             loc_14368|78-209
82634|code|CMP             R1, #0|0-41
82636|code|BLT             loc_1435A|69-219
82638|code|LDR.W           R11, [R0,#0xC]|208-248-12-176
82642|code|CMP             R1, R11|89-69
82644|code|BGT             loc_1435A|65-220
82646|code|LDR.W           R10, [R0,#8]|208-248-8-160
82650|code|CMP.W           R10, #0|186-241-0-15
82654|code|BLE             loc_1432E|38-221
82656|code|MOVS            R5, #0|0-37
82658|code|LDR.W           R8, [R0,#0x10]|208-248-16-128
82662|code|MOV             R6, R5|46-70
82664|code|B               loc_142F2|3-224
82666|code|ADDS            R6, #1|1-54
82668|code|ADDS            R5, R5, R0|45-24
82670|code|CMP             R6, R10|86-69
82672|code|BEQ             loc_1432E|29-208
82674|code|LDR.W           R7, [R8],#4|88-248-4-123
82678|code|MOV             R0, R7|56-70
82680|code|BL              sub_12ECC|254-247-232-253
82684|code|SUBS            R3, R0, #1|67-30
82686|code|ADDS            R3, R3, R5|91-25
82688|code|CMP             R9, R3|153-69
82690|code|BGT             loc_142EA|242-220
82692|code|LDRB            R3, [R7,#0x10]|59-124
82694|code|LDR             R1, [R7,#4]|121-104
82696|code|LSLS            R0, R3, #0x1F|216-7
82698|code|BMI             loc_14342|26-212
82700|code|ADD             R1, R9|73-68
82702|code|MOV             R0, R7|56-70
82704|code|SUBS            R1, R1, R5|73-27
82706|code|BL              sub_13144|254-247-23-255
82710|code|MOV             R5, R0|5-70
82712|code|CBZ             R0, loc_1433A|120-177
82714|code|MOV             R1, R0|1-70
82716|code|ADDS            R2, R6, #1|114-28
82718|code|MOV             R0, R4|32-70
82720|code|BL              sub_1361C|255-247-124-249
82724|code|MOV             R0, R5|40-70
82726|code|BL              sub_12C38|254-247-135-252
82730|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
82734|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
82738|code|MOVS            R0, #1|1-32
82740|code|STR             R3, [R4,#0xC]|227-96
82742|code|POP.W           {R3-R11,PC}|189-232-248-143
82746|code|MOV             R0, R7|56-70
82748|code|BL              sub_12F48|254-247-4-254
82752|code|CBZ             R0, loc_1434A|24-177
82754|code|MOV             R0, R4|32-70
82756|code|MOV             R1, R6|49-70
82758|code|BL              sub_13E84|255-247-157-253
82762|code|LDR.W           R11, [R4,#0xC]|212-248-12-176
82766|code|MOVS            R0, #1|1-32
82768|code|ADD.W           R3, R11, #0xFFFFFFFF|11-241-255-51
82772|code|STR             R3, [R4,#0xC]|227-96
82774|code|POP.W           {R3-R11,PC}|189-232-248-143
82778|code|LDR             R0, =aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|10-72
82780|code|MOVW            R2, #0x714; line|64-242-20-114
82784|code|LDR             R1, =aHostlistC; "hostlist.c"|9-73
82786|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|10-75
82788|code|BLX             __assert_fail|245-247-248-236
82792|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|9-72
82794|code|MOVW            R2, #0x713; line|64-242-19-114
82798|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
82800|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|6-75
82802|code|BLX             __assert_fail|245-247-242-236
82806|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
82808|code|MOVW            R2, #0x713; line|64-242-19-114
82812|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
82814|code|LDR             R3, =aHostlistDelete_0; "hostlist_delete_nth"|3-75
82816|code|BLX             __assert_fail|245-247-234-236
82820|data|DCD aN0NHlNhosts; "n >= 0 && n <= hl->nhosts"|96-190-1-0
82824|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
82828|data|DCD aHostlistDelete_0; "hostlist_delete_nth"|72-187-1-0
82832|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
82836|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
82840|code|PUSH            {R3-R5,LR}|56-181
82842|code|MOV             R5, R0|5-70
82844|code|BL              sub_13A34|255-247-74-251
82848|code|CMP             R0, #0|0-40
82850|code|MOV             R4, R0|4-70
82852|code|BLT             loc_143AE|3-219
82854|code|MOV             R0, R5|40-70
82856|code|MOV             R1, R4|33-70
82858|code|BL              sub_142B4|255-247-131-255
82862|code|MVNS            R0, R4|224-67
82864|code|LSRS            R0, R0, #0x1F|192-15
82866|code|POP             {R3-R5,PC}|56-189
82868|code|PUSH.W          {R4-R9,LR}|45-233-240-67
82872|code|MOV             R4, R0|4-70
82874|code|SUB             SP, SP, #0xC|131-176
82876|code|CMP             R0, #0|0-40
82878|code|BEQ.W           loc_144C8|0-240-131-128
82882|code|LDR             R2, [R0]|2-104
82884|code|MOVW            R3, #0xDEAD|77-246-173-99
82888|code|CMP             R2, R3|154-66
82890|code|BNE             loc_144BA|118-209
82892|code|LDR             R7, [R0,#0xC]|199-104
82894|code|CMP             R7, #0|0-47
82896|code|BLE             loc_14470|78-221
82898|code|LDR             R3, [R0,#0x10]|3-105
82900|code|LDR             R5, [R3]|29-104
82902|code|CMP             R5, #0|0-45
82904|code|BEQ             loc_144AC|104-208
82906|code|LDRB            R3, [R5,#0x10]|43-124
82908|code|LSLS            R6, R3, #0x1F|222-7
82910|code|BMI             loc_1440A|20-212
82912|code|MOV             R0, R5|40-70
82914|code|BL              sub_12ECC|254-247-115-253
82918|code|MOV             R6, R0|6-70
82920|code|CMP             R0, #0|0-40
82922|code|BNE             loc_14436|36-209
82924|code|SUBS            R7, #1|1-63
82926|code|MOV             R0, R5|40-70
82928|code|STR             R7, [R4,#0xC]|231-96
82930|code|BL              sub_12F48|254-247-169-253
82934|code|MOV             R1, R0|1-70
82936|code|MOV             R0, R4|32-70
82938|code|CBNZ            R1, loc_1442E|193-185
82940|code|MOV             R2, R1|10-70
82942|code|BL              sub_13E34|255-247-25-253
82946|code|MOV             R0, R6|48-70
82948|code|ADD             SP, SP, #0xC|3-176
82950|code|POP.W           {R4-R9,PC}|189-232-240-131
82954|code|LDM.W           R5, {R0,R3}|149-232-9-0
82958|code|ADDS            R3, #1|1-51
82960|code|STR             R3, [R5,#4]|107-96
82962|code|BLX             __strdup|245-247-224-235
82966|code|MOV             R6, R0|6-70
82968|code|CBZ             R0, loc_14474|96-179
82970|code|LDR             R7, [R4,#0xC]|231-104
82972|code|SUBS            R7, #1|1-63
82974|code|MOV             R0, R5|40-70
82976|code|STR             R7, [R4,#0xC]|231-96
82978|code|BL              sub_12F48|254-247-145-253
82982|code|MOV             R1, R0|1-70
82984|code|MOV             R0, R4|32-70
82986|code|CMP             R1, #0|0-41
82988|code|BEQ             loc_143FC|230-208
82990|code|MOVS            R1, #0|0-33
82992|code|BL              sub_13E84|255-247-40-253
82996|code|B               loc_14402|229-231
82998|code|LDR             R7, [R5]|47-104
83000|code|MOV             R0, R7|56-70
83002|code|BLX             strlen|245-247-138-235
83006|code|LDR.W           R8, [R5,#0xC]|213-248-12-128
83010|code|ADD.W           R9, R8, #0x10|8-241-16-9
83014|code|ADD             R9, R0|129-68
83016|code|MOV             R0, R9|72-70
83018|code|BLX             malloc|245-247-62-235
83022|code|MOV             R6, R0|6-70
83024|code|CBZ             R0, loc_14490|240-177
83026|code|LDR.W           LR, [R5,#4]|213-248-4-224
83030|code|MOV             R3, R7|59-70
83032|code|MOV             R1, R9|73-70
83034|code|LDR             R2, =aS0Lu; "%s%0*lu"|31-74
83036|code|ADD.W           R12, LR, #1|14-241-1-12
83040|code|STR.W           R12, [R5,#4]|197-248-4-192
83044|code|STMEA.W         SP, {R8,LR}|141-232-0-65
83048|code|BLX             snprintf|245-247-168-235
83052|code|LDR             R7, [R4,#0xC]|231-104
83054|code|B               loc_143EC|189-231
83056|code|MOVS            R6, #0|0-38
83058|code|B               loc_14402|198-231
83060|code|BLX             __errno_location|245-247-150-235
83064|code|MOVS            R2, #0xC|12-34
83066|code|MOVW            R1, #0x333|64-242-51-49
83070|code|MOV             R3, R0|3-70
83072|code|LDR             R0, =aHostlistC; "hostlist.c"|22-72
83074|code|STR             R2, [R3]|26-96
83076|code|LDR             R2, =aHostrangeShift; "hostrange shift"|22-74
83078|code|BL              sub_12B20|254-247-75-251
83082|code|LDR             R7, [R4,#0xC]|231-104
83084|code|MOV             R6, R0|6-70
83086|code|B               loc_1441C|197-231
83088|code|BLX             __errno_location|245-247-136-235
83092|code|MOVS            R2, #0xC|12-34
83094|code|MOVW            R1, #0x337|64-242-55-49
83098|code|MOV             R3, R0|3-70
83100|code|LDR             R0, =aHostlistC; "hostlist.c"|15-72
83102|code|STR             R2, [R3]|26-96
83104|code|LDR             R2, =aHostrangeShift; "hostrange shift"|15-74
83106|code|BL              sub_12B20|254-247-61-251
83110|code|LDR             R7, [R4,#0xC]|231-104
83112|code|MOV             R6, R0|6-70
83114|code|B               loc_143EC|159-231
83116|code|LDR             R0, =aHrVoid0; "hr != ((void *)0)"|13-72
83118|code|MOVW            R2, #0x32E|64-242-46-50
83122|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
83124|code|LDR             R3, =aHostrangeShift_0; "hostrange_shift"|12-75
83126|code|BLX             __assert_fail|245-247-80-236
83130|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|12-72
83132|code|MOVW            R2, #0x66F|64-242-111-98
83136|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
83138|code|LDR             R3, =aHostlistShift; "hostlist_shift"|11-75
83140|code|BLX             __assert_fail|245-247-72-236
83144|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|10-72
83146|code|MOVW            R2, #0x66F|64-242-111-98
83150|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
83152|code|LDR             R3, =aHostlistShift; "hostlist_shift"|7-75
83154|code|BLX             __assert_fail|245-247-66-236
83158|data|ALIGN 4|0-191
83160|data|DCD aS0Lu; "%s%0*lu"|220-189-1-0
83164|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
83168|data|DCD aHostrangeShift; "hostrange shift"|124-190-1-0
83172|data|DCD aHrVoid0; "hr != ((void *)0)"|140-188-1-0
83176|data|DCD aHostrangeShift_0; "hostrange_shift"|108-187-1-0
83180|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
83184|data|DCD aHostlistShift; "hostlist_shift"|92-187-1-0
83188|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
83192|code|PUSH            {R4,LR}|16-181
83194|code|CMP             R0, #0|0-40
83196|code|BEQ             locret_1454C|38-208
83198|code|LDR             R3, [R0]|3-104
83200|code|MOVW            R2, #0xDEAD|77-246-173-98
83204|code|CMP             R3, R2|147-66
83206|code|BNE             loc_14578|55-209
83208|code|LDR             R1, [R0,#4]|65-104
83210|code|CMP             R1, #0|0-41
83212|code|BEQ             loc_1456A|45-208
83214|code|LDR             R2, [R1]|10-104
83216|code|CMP             R2, R3|154-66
83218|code|BNE             loc_1455C|35-209
83220|code|LDR             R3, [R1,#0x14]|75-105
83222|code|CBZ             R3, loc_1453A|131-177
83224|code|LDR             R4, [R3]|28-104
83226|code|CMP             R4, R2|148-66
83228|code|BNE             loc_1454E|23-209
83230|code|ADDS            R1, #0x14|20-49
83232|code|CMP             R0, R3|152-66
83234|code|BNE             loc_14530|5-209
83236|code|B               loc_14546|15-224
83238|code|LDR             R2, [R3]|26-104
83240|code|CMP             R2, R4|162-66
83242|code|BNE             loc_1454E|16-209
83244|code|CMP             R0, R3|152-66
83246|code|BEQ             loc_14546|10-208
83248|code|ADD.W           R1, R3, #0x14|3-241-20-1
83252|code|LDR             R3, [R3,#0x14]|91-105
83254|code|CMP             R3, #0|0-43
83256|code|BNE             loc_14526|245-209
83258|code|MOVS            R3, #1|1-35
83260|code|STR             R3, [R0]|3-96
83262|code|POP.W           {R4,LR}|189-232-16-64
83266|code|B.W             j_free|245-247-17-186
83270|code|LDR             R3, [R0,#0x14]|67-105
83272|code|STR             R3, [R1]|11-96
83274|code|B               loc_1453A|246-231
83276|code|POP             {R4,PC}|16-189
83278|code|LDR             R0, =aPiMagic57005; "(*pi)->magic == 57005"|14-72
83280|code|MOVW            R2, #0x89C; line|64-246-156-2
83284|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
83286|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|14-75
83288|code|BLX             __assert_fail|245-247-254-235
83292|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|13-72
83294|code|MOVW            R2, #0x89A; line|64-246-154-2
83298|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
83300|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|10-75
83302|code|BLX             __assert_fail|245-247-248-235
83306|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|11-72
83308|code|MOVW            R2, #0x89A; line|64-246-154-2
83312|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
83314|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|7-75
83316|code|BLX             __assert_fail|245-247-240-235
83320|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|8-72
83322|code|MOVW            R2, #0x899; line|64-246-153-2
83326|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
83328|code|LDR             R3, =aHostlistIterat; "hostlist_iterator_destroy"|3-75
83330|code|BLX             __assert_fail|245-247-234-235
83334|data|ALIGN 4|0-191
83336|data|DCD aPiMagic57005; "(*pi)->magic == 57005"|188-190-1-0
83340|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
83344|data|DCD aHostlistIterat; "hostlist_iterator_destroy"|124-187-1-0
83348|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|164-190-1-0
83352|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|140-190-1-0
83356|data|DCD aIMagic57005; "i->magic == 57005"|20-190-1-0
83360|code|PUSH            {R3-R5,LR}|56-181
83362|code|MOV             R5, R0|5-70
83364|code|CMP             R0, #0|0-40
83366|code|BEQ             locret_145EC|33-208
83368|code|LDR             R2, [R0]|2-104
83370|code|MOVW            R3, #0xDEAD|77-246-173-99
83374|code|CMP             R2, R3|154-66
83376|code|BEQ             loc_145B8|2-208
83378|code|B               loc_145EE|28-224
83380|code|BL              sub_144F8|255-247-160-255
83384|code|LDR             R0, [R5,#0x14]|104-105
83386|code|CMP             R0, #0|0-40
83388|code|BNE             loc_145B4|250-209
83390|code|LDR             R3, [R5,#8]|171-104
83392|code|CMP             R3, #0|0-43
83394|code|BLE             loc_145D8|9-221
83396|code|MOVS            R4, #0|0-36
83398|code|LDR             R3, [R5,#0x10]|43-105
83400|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
83404|code|ADDS            R4, #1|1-52
83406|code|BL              sub_12C38|254-247-51-251
83410|code|LDR             R3, [R5,#8]|171-104
83412|code|CMP             R3, R4|163-66
83414|code|BGT             loc_145C6|246-220
83416|code|LDR             R0, [R5,#0x10]; ptr|40-105
83418|code|BLX             free|245-247-200-233
83422|code|MOVS            R3, #1|1-35
83424|code|MOV             R0, R5|40-70
83426|code|STR             R3, [R5]|43-96
83428|code|POP.W           {R3-R5,LR}|189-232-56-64
83432|code|B.W             j_free|245-247-190-185
83436|code|POP             {R3-R5,PC}|56-189
83438|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|3-72
83440|code|MOVW            R2, #0x5F9; line|64-242-249-82
83444|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
83446|code|LDR             R3, =aHostlistDestro; "hostlist_destroy"|3-75
83448|code|BLX             __assert_fail|245-247-174-235
83452|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
83456|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
83460|data|DCD aHostlistDestro; "hostlist_destroy"|152-187-1-0
83464|code|PUSH.W          {R4-R9,LR}|45-233-240-67
83468|code|SUB.W           SP, SP, #0x400|173-245-128-109
83472|code|LDR             R7, =__stack_chk_guard|63-79
83474|code|SUB             SP, SP, #0xC|131-176
83476|code|MOV             R5, R0|5-70
83478|code|LDR             R3, [R7]|59-104
83480|code|STR.W           R3, [SP,#0x404]|205-248-4-52
83484|code|BL              sub_12FA8|254-247-196-252
83488|code|MOV             R6, R0|6-70
83490|code|CMP             R0, #0|0-40
83492|code|BEQ             loc_146D2|85-208
83494|code|CMP             R5, #0|0-45
83496|code|BEQ             loc_14700|106-208
83498|code|LDR             R2, [R5]|42-104
83500|code|MOVW            R3, #0xDEAD|77-246-173-99
83504|code|CMP             R2, R3|154-66
83506|code|BNE             loc_146F2|94-209
83508|code|LDR             R4, [R5,#8]|172-104
83510|code|CMP             R4, #0|0-44
83512|code|BEQ             loc_146E6|85-208
83514|code|LDR             R3, [R5,#0x10]|43-105
83516|code|MOVS            R4, #0|0-36
83518|code|LDR.W           R8, [R3]|211-248-0-128
83522|code|MOV             R1, R8|65-70
83524|code|MOV             R0, R6|48-70
83526|code|BL              sub_13548|254-247-127-255
83530|code|LDR             R3, [R5,#0x10]|43-105
83532|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
83536|code|ADDS            R4, #1|1-52
83538|code|BL              sub_12C38|254-247-241-250
83542|code|LDR             R3, [R5,#8]|171-104
83544|code|CMP             R4, R3|156-66
83546|code|BGE             loc_14670|9-218
83548|code|LDR             R2, [R5,#0x10]|42-105
83550|code|LDR             R3, [R6,#0x10]|51-105
83552|code|LDR.W           R8, [R2,R4,LSL#2]|82-248-36-128
83556|code|LDR             R0, [R3]|24-104
83558|code|MOV             R1, R8|65-70
83560|code|BL              sub_132E4|254-247-60-254
83564|code|CMP             R0, #0|0-40
83566|code|BNE             loc_14642|232-209
83568|code|LDR             R2, [R6,#8]|178-104
83570|code|MOV             R0, R5|40-70
83572|code|MOV             R1, R4|33-70
83574|code|BL              sub_13E34|255-247-221-251
83578|code|LDR             R2, [R5,#8]|170-104
83580|code|LDR             R0, [R6,#8]|176-104
83582|code|CMP             R2, R4|162-66
83584|code|BLE             loc_146AE|21-221
83586|code|SUBS            R3, R4, R0|35-26
83588|code|MOV.W           R8, R0,LSL#2|79-234-128-8
83592|code|MOV.W           R9, #0|79-240-0-9
83596|code|LSLS            R3, R3, #2|155-0
83598|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
83602|code|ADD.W           R1, R3, R8|3-235-8-1
83606|code|ADDS            R4, #1|1-52
83608|code|LDR.W           R12, [LR,R1]|94-248-1-192
83612|code|STR.W           R12, [LR,R3]|78-248-3-192
83616|code|ADDS            R3, #4|4-51
83618|code|LDR.W           LR, [R5,#0x10]|213-248-16-224
83622|code|CMP             R4, R2|148-66
83624|code|STR.W           R9, [LR,R1]|78-248-1-144
83628|code|BNE             loc_1468E|239-209
83630|code|LDR             R4, [R5,#0xC]|236-104
83632|code|SUBS            R0, R2, R0|16-26
83634|code|LDR             R3, [R6,#0xC]|243-104
83636|code|MOV.W           R1, #0x400|79-244-128-97
83640|code|ADD             R2, SP, #4|1-170
83642|code|STR             R0, [R5,#8]|168-96
83644|code|SUBS            R3, R4, R3|227-26
83646|code|MOV             R0, R6|48-70
83648|code|STR             R3, [R5,#0xC]|235-96
83650|code|BL              sub_13C80|255-247-221-250
83654|code|MOV             R0, R6|48-70
83656|code|BL              sub_145A0|255-247-106-255
83660|code|ADD             R0, SP, #4|1-168
83662|code|BLX             __strdup|245-247-130-234
83666|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
83670|code|LDR             R3, [R7]|59-104
83672|code|CMP             R2, R3|154-66
83674|code|BNE             loc_146EE|8-209
83676|code|ADD             SP, SP, #0xC|3-176
83678|code|ADD.W           SP, SP, #0x400|13-245-128-109
83682|code|POP.W           {R4-R9,PC}|189-232-240-131
83686|code|BL              sub_145A0|255-247-91-255
83690|code|MOV             R0, R4|32-70
83692|code|B               loc_146D2|241-231
83694|code|BLX             __stack_chk_fail|245-247-116-233
83698|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|8-72
83700|code|MOVW            R2, #0x6AD|64-242-173-98
83704|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
83706|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|8-75
83708|code|BLX             __assert_fail|245-247-44-235
83712|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
83714|code|MOVW            R2, #0x6AD|64-242-173-98
83718|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
83720|code|LDR             R3, =aHostlistShiftR; "hostlist_shift_range"|4-75
83722|code|BLX             __assert_fail|245-247-38-235
83726|data|ALIGN 0x10|0-191
83728|data|DCD __stack_chk_guard|16-74-2-0
83732|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
83736|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
83740|data|DCD aHostlistShiftR; "hostlist_shift_range"|172-187-1-0
83744|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
83748|code|PUSH.W          {R4-R11,LR}|45-233-240-79
83752|code|SUB.W           SP, SP, #0x400|173-245-128-109
83756|code|LDR             R7, =__stack_chk_guard|60-79
83758|code|SUB             SP, SP, #0xC|131-176
83760|code|MOV             R4, R0|4-70
83762|code|LDR             R3, [R7]|59-104
83764|code|STR.W           R3, [SP,#0x404]|205-248-4-52
83768|code|CMP             R0, #0|0-40
83770|code|BEQ             loc_14812|106-208
83772|code|LDR             R2, [R0]|2-104
83774|code|MOVW            R3, #0xDEAD|77-246-173-99
83778|code|CMP             R2, R3|154-66
83780|code|BNE             loc_14804|94-209
83782|code|LDR             R3, [R0,#8]|131-104
83784|code|MOVS            R0, #0|0-32
83786|code|CMP             R3, #0|0-43
83788|code|BLE             loc_147EC|78-221
83790|code|BL              sub_12FA8|254-247-43-252
83794|code|MOV             R6, R0|6-70
83796|code|CMP             R6, #0|0-46
83798|code|BEQ             loc_147EC|73-208
83800|code|LDR             R5, [R4,#8]|165-104
83802|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
83806|code|SUBS            R3, R5, #1|107-30
83808|code|SUBS.W          R9, R5, #2|181-241-2-9
83812|code|ADD.W           R8, R10, R3,LSL#2|10-235-131-8
83816|code|LDR.W           R11, [R10,R3,LSL#2]|90-248-35-176
83820|code|BPL             loc_14776|3-213
83822|code|B               loc_14784|9-224
83824|code|ADDS.W          R9, R9, #0xFFFFFFFF|25-241-255-57
83828|code|BCC             loc_14784|6-211
83830|code|LDR.W           R1, [R8,#-4]!|88-248-4-29
83834|code|MOV             R0, R11|88-70
83836|code|BL              sub_132E4|254-247-178-253
83840|code|CMP             R0, #0|0-40
83842|code|BNE             loc_14770|245-209
83844|code|ADD.W           R9, R9, #1|9-241-1-9
83848|code|CMP             R5, R9|77-69
83850|code|BLE             loc_147C2|26-221
83852|code|MOV.W           R8, R9,LSL#2|79-234-137-8
83856|code|MOV.W           R11, #0|79-240-0-11
83860|code|B               loc_1479A|1-224
83862|code|LDR.W           R10, [R4,#0x10]|212-248-16-160
83866|code|LDR.W           R1, [R10,R8]|90-248-8-16
83870|code|MOV             R0, R6|48-70
83872|code|BL              sub_13548|254-247-210-254
83876|code|LDR             R3, [R4,#0x10]|35-105
83878|code|ADD.W           R9, R9, #1|9-241-1-9
83882|code|LDR.W           R0, [R3,R8]|83-248-8-0
83886|code|BL              sub_12C38|254-247-67-250
83890|code|LDR             R5, [R4,#8]|165-104
83892|code|LDR             R3, [R4,#0x10]|35-105
83894|code|CMP             R5, R9|77-69
83896|code|STR.W           R11, [R3,R8]|67-248-8-176
83900|code|ADD.W           R8, R8, #4|8-241-4-8
83904|code|BGT             loc_14796|233-220
83906|code|LDR             R0, [R4,#0xC]|224-104
83908|code|MOV.W           R1, #0x400|79-244-128-97
83912|code|LDR.W           LR, [R6,#8]|214-248-8-224
83916|code|MOV             R2, SP|106-70
83918|code|LDR             R3, [R6,#0xC]|243-104
83920|code|RSB.W           R5, LR, R5|206-235-5-5
83924|code|STR             R5, [R4,#8]|165-96
83926|code|SUBS            R3, R0, R3|195-26
83928|code|MOV             R0, R6|48-70
83930|code|STR             R3, [R4,#0xC]|227-96
83932|code|BL              sub_13C80|255-247-80-250
83936|code|MOV             R0, R6|48-70
83938|code|BL              sub_145A0|255-247-221-254
83942|code|MOV             R0, SP|104-70
83944|code|BLX             __strdup|245-247-244-233
83948|code|LDR.W           R2, [SP,#0x404]|221-248-4-36
83952|code|LDR             R3, [R7]|59-104
83954|code|CMP             R2, R3|154-66
83956|code|BNE             loc_14800|4-209
83958|code|ADD             SP, SP, #0xC|3-176
83960|code|ADD.W           SP, SP, #0x400|13-245-128-109
83964|code|POP.W           {R4-R11,PC}|189-232-240-143
83968|code|BLX             __stack_chk_fail|245-247-234-232
83972|code|LDR             R0, =aHlMagic57005; "(hl)->magic == 57005"|7-72
83974|code|MOVW            R2, #0x68B|64-242-139-98
83978|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
83980|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|7-75
83982|code|BLX             __assert_fail|245-247-164-234
83986|code|LDR             R0, =aHlVoid0; "hl != ((void *)0)"|7-72
83988|code|MOVW            R2, #0x68B|64-242-139-98
83992|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
83994|code|LDR             R3, =aHostlistPopRan; "hostlist_pop_range"|4-75
83996|code|BLX             __assert_fail|245-247-156-234
84000|data|DCD __stack_chk_guard|16-74-2-0
84004|data|DCD aHlMagic57005; "(hl)->magic == 57005"|156-189-1-0
84008|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
84012|data|DCD aHostlistPopRan; "hostlist_pop_range"|196-187-1-0
84016|data|DCD aHlVoid0; "hl != ((void *)0)"|104-143-1-0
84020|code|PUSH.W          {R4-R11,LR}|45-233-240-79
84024|code|MOVW            R1, #0x4A10|68-246-16-33
84028|code|SUB.W           SP, SP, #0x1F400|173-245-250-61
84032|code|MOVT.W          R1, #2|192-242-2-1
84036|code|SUB             SP, SP, #0x34|141-176
84038|code|MOV             R4, R0|4-70
84040|code|LDR             R3, [R1]|11-104
84042|code|ADD.W           R2, SP, #0x1F458+var_58|13-245-250-50
84046|code|ADDS            R2, #0x2C ; ','|44-50
84048|code|STR             R3, [R2]|19-96
84050|code|BL              sub_12FA8|254-247-169-251
84054|code|MOV             R8, R0|128-70
84056|code|CBZ             R4, loc_14888|180-177
84058|code|MOV             R0, R4|32-70
84060|code|BLX             __strdup|245-247-186-233
84064|code|STR             R0, [SP,#0x1F458+ptr]|9-144
84066|code|CMP             R0, #0|0-40
84068|code|BEQ.W           loc_14BA4|0-240-158-129
84072|code|ADD             R3, SP, #0x1F458+var_1F430|10-171
84074|code|MOV             R5, R0|5-70
84076|code|STR             R3, [SP,#0x1F458+var_1F440]|6-147
84078|code|B               loc_1487C|5-224
84080|code|LDR             R0, =asc_1BF14; "\t, "|148-72
84082|code|MOV             R1, R4; c|33-70
84084|code|BLX             strchr|245-247-120-233
84088|code|CBZ             R0, loc_148AC|192-177
84090|code|ADDS            R5, #1|1-53
84092|code|LDRB            R4, [R5]|44-120
84094|code|CMP             R4, #0|0-44
84096|code|BNE             loc_14870|246-209
84098|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
84100|code|BLX             free|245-247-114-232
84104|code|ADD.W           R3, SP, #0x1F458+var_58|13-245-250-51
84108|code|MOVW            R1, #0x4A10|68-246-16-33
84112|code|ADDS            R3, #0x2C ; ','|44-51
84114|code|MOVT.W          R1, #2|192-242-2-1
84118|code|MOV             R0, R8|64-70
84120|code|LDR             R2, [R3]|26-104
84122|code|LDR             R3, [R1]|11-104
84124|code|CMP             R2, R3|154-66
84126|code|BNE.W           loc_14BB0|64-240-135-129
84130|code|ADD             SP, SP, #0x34 ; '4'|13-176
84132|code|ADD.W           SP, SP, #0x1F400|13-245-250-61
84136|code|POP.W           {R4-R11,PC}|189-232-240-143
84140|code|MOV             R7, R5|47-70
84142|code|CBZ             R4, loc_148BE|52-177
84144|code|LDR             R0, =asc_1BF14; "\t, "|132-72
84146|code|MOV             R1, R4; c|33-70
84148|code|BLX             strchr|245-247-88-233
84152|code|CMP             R0, #0|0-40
84154|code|BEQ.W           loc_14A70|0-240-217-128
84158|code|SUBS            R6, R7, R5|126-27
84160|code|MOV             R0, R5; s|40-70
84162|code|MOVS            R1, #0x5B ; '['; c|91-33
84164|code|MOV             R2, R6; n|50-70
84166|code|BLX             memchr|245-247-182-233
84170|code|CBZ             R0, loc_148DC|56-177
84172|code|MOV             R0, R5; s|40-70
84174|code|MOVS            R1, #0x5D ; ']'; c|93-33
84176|code|MOV             R2, R6; n|50-70
84178|code|BLX             memchr|245-247-176-233
84182|code|CMP             R0, #0|0-40
84184|code|BEQ.W           loc_14A0A|0-240-151-128
84188|code|CBZ             R4, loc_14902|140-177
84190|code|MOV             R6, R7|62-70
84192|code|MOV.W           R10, #0|79-240-0-10
84196|code|MOV             R9, R7|185-70
84198|code|MOV             R1, R4|33-70
84200|code|B               loc_148F6|5-224
84202|code|STRB.W          R10, [R6],#1|6-248-1-171
84206|code|MOV             R7, R6|55-70
84208|code|LDRB.W          R1, [R9,#1]!; c|25-248-1-31
84212|code|CBZ             R1, loc_14902|41-177
84214|code|LDR             R0, =asc_1BF14; "\t, "|115-72
84216|code|MOV             R7, R6|55-70
84218|code|BLX             strchr|245-247-54-233
84222|code|CMP             R0, #0|0-40
84224|code|BNE             loc_148EA|243-209
84226|code|ADD.W           R0, SP, #0x1F458+var_458|13-245-248-48
84230|code|MOV             R1, R5; src|41-70
84232|code|MOV.W           R2, #0x400; n|79-244-128-98
84236|code|ADDS            R0, #0x2C ; ','; dest|44-48
84238|code|BLX             strncpy|245-247-122-233
84242|code|MOV             R0, R5; s|40-70
84244|code|MOVS            R1, #0x5B ; '['; c|91-33
84246|code|BLX             strchr|245-247-40-233
84250|code|CMP             R0, #0|0-40
84252|code|BEQ.W           loc_14AAA|0-240-197-128
84256|code|MOV             R6, R0|6-70
84258|code|MOVS            R4, #0|0-36
84260|code|MOVS            R1, #0x5D ; ']'; c|93-33
84262|code|STRB.W          R4, [R6],#1|6-248-1-75
84266|code|MOV             R0, R6; s|48-70
84268|code|BLX             strchr|245-247-28-233
84272|code|STR             R0, [SP,#0x1F458+var_1F444]|5-144
84274|code|CMP             R0, #0|0-40
84276|code|BEQ.W           loc_14AAA|0-240-185-128
84280|code|STRB            R4, [R0]|4-112
84282|code|CMP             R6, #0|0-46
84284|code|BEQ.W           loc_14AD4|0-240-202-128
84288|code|STR             R4, [SP,#0x1F458+var_1F448]|4-148
84290|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
84292|code|STR             R5, [SP,#0x1F458+var_1F438]|8-149
84294|code|MOV             R0, R6; s|48-70
84296|code|MOVS            R1, #0x2C ; ','; c|44-33
84298|code|BLX             strchr|245-247-14-233
84302|code|MOV             R5, R0|5-70
84304|code|CBZ             R0, loc_14958|16-177
84306|code|MOVS            R2, #0|0-34
84308|code|STRB.W          R2, [R5],#1|5-248-1-43
84312|code|MOV             R0, R6|48-70
84314|code|BLX             __strdup|245-247-60-233
84318|code|MOV             R7, R0|7-70
84320|code|CMP             R0, #0|0-40
84322|code|BEQ.W           loc_14A76|0-240-136-128
84326|code|MOV             R0, R6; s|48-70
84328|code|MOVS            R1, #0x2D ; '-'; c|45-33
84330|code|BLX             strchr|245-247-254-232
84334|code|MOV             R4, R0|4-70
84336|code|CBZ             R0, loc_1497E|40-177
84338|code|LDRB            R3, [R0,#1]|67-120
84340|code|MOVS            R1, #0|0-33
84342|code|STRB            R1, [R0]|1-112
84344|code|CMP             R3, #0x2D ; '-'|45-43
84346|code|BEQ             loc_14A4E|104-208
84348|code|ADDS            R4, R0, #1|68-28
84350|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
84352|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
84356|code|ADDS            R1, #0x28 ; '('; endptr|40-49
84358|code|MOVS            R2, #0xA; base|10-34
84360|code|MOV             R0, R6; nptr|48-70
84362|code|ADD.W           R9, SP, #0x1F458+var_1458|13-245-240-57
84366|code|ADD.W           R11, R3, R3,LSL#1|3-235-67-11
84370|code|BLX             strtoul|245-247-216-232
84374|code|ADD.W           R9, R9, #0x30 ; '0'|9-241-48-9
84378|code|LDR             R1, [SP,#0x1F458+var_1F440]|6-153
84380|code|LDR.W           R3, [R9,#-8]|89-248-8-60
84384|code|ADD.W           R9, R1, R11,LSL#2|1-235-139-9
84388|code|CMP             R6, R3|158-66
84390|code|MOV             R10, R0|130-70
84392|code|STR.W           R0, [R1,R11,LSL#2]|65-248-43-0
84396|code|BEQ             loc_14A4E|79-208
84398|code|CBZ             R4, loc_149B6|20-177
84400|code|LDRB            R2, [R4]|34-120
84402|code|CMP             R2, #0|0-42
84404|code|BNE             loc_14A30|60-209
84406|code|CMP             R3, R4|163-66
84408|code|MOV             R0, R10|80-70
84410|code|STR.W           R0, [R9,#4]|201-248-4-0
84414|code|BEQ             loc_14A4E|70-208
84416|code|LDRB            R3, [R3]|27-120
84418|code|CMP             R3, #0|0-43
84420|code|BNE             loc_14A4E|67-209
84422|code|CMP             R10, R0|130-69
84424|code|BHI             loc_14A4E|65-216
84426|code|RSB.W           R10, R10, #1|202-241-1-10
84430|code|ADD             R0, R10|80-68
84432|code|CMP.W           R0, #0x4000|176-245-128-79
84436|code|BLS             loc_14A82|85-217
84438|code|MOVW            R1, #0x551|64-242-81-81
84442|code|LDR             R2, =aTooManyHostsIn; "Too many hosts in range `%s'"|59-74
84444|code|MOV             R3, R7|59-70
84446|code|LDR             R0, =aHostlistC; "hostlist.c"|59-72
84448|code|BL              sub_12E68|254-247-66-250
84452|code|MOV             R0, R7; ptr|56-70
84454|code|BLX             free|244-247-194-239
84458|code|MOV             R11, R7|187-70
84460|code|BLX             __errno_location|245-247-218-232
84464|code|MOVS            R5, #0x22 ; '"'|34-37
84466|code|MOV             R4, R0|4-70
84468|code|STR             R5, [R0]|5-96
84470|code|MOV             R0, R8|64-70
84472|code|MOV.W           R8, #0|79-240-0-8
84476|code|BL              sub_145A0|255-247-208-253
84480|code|LDR             R0, [SP,#0x1F458+ptr]; ptr|9-152
84482|code|BLX             free|244-247-180-239
84486|code|STR             R5, [R4]|37-96
84488|code|B               loc_14888|62-231
84490|code|MOV             R0, R7; s|56-70
84492|code|MOVS            R1, #0x5D ; ']'; c|93-33
84494|code|BLX             strchr|245-247-172-232
84498|code|MOV             R6, R0|6-70
84500|code|CMP             R0, #0|0-40
84502|code|BEQ.W           loc_148DC|63-244-97-175
84506|code|SUBS            R2, R0, R7; n|194-27
84508|code|MOVS            R1, #0x5B ; '['; c|91-33
84510|code|MOV             R0, R7; s|56-70
84512|code|BLX             memchr|245-247-8-233
84516|code|CMP             R0, #0|0-40
84518|code|BNE.W           loc_148DC|127-244-89-175
84522|code|ADDS            R7, R6, #1|119-28
84524|code|LDRB            R4, [R7]|60-120
84526|code|B               loc_148AE|62-231
84528|code|ADD.W           R1, SP, #0x1F458+var_1458|13-245-240-49
84532|code|MOVS            R2, #0xA; base|10-34
84534|code|ADDS            R1, #0x28 ; '('; endptr|40-49
84536|code|MOV             R0, R4; nptr|32-70
84538|code|BLX             strtoul|245-247-132-232
84542|code|ADD.W           R2, SP, #0x1F458+var_1458|13-245-240-50
84546|code|ADDS            R2, #0x28 ; '('|40-50
84548|code|LDR             R3, [R2]|19-104
84550|code|CMP             R3, R4|163-66
84552|code|STR.W           R0, [R9,#4]|201-248-4-0
84556|code|BNE             loc_149C0|184-209
84558|code|MOVW            R1, #0x55B|64-242-91-81
84562|code|LDR             R2, =aInvalidRangeS; "Invalid range: `%s'"|31-74
84564|code|MOV             R3, R7|59-70
84566|code|LDR             R0, =aHostlistC; "hostlist.c"|29-72
84568|code|BL              sub_12E68|254-247-6-250
84572|code|MOV             R0, R7; ptr|56-70
84574|code|BLX             free|244-247-134-239
84578|code|MOVS            R5, #0x16|22-37
84580|code|BLX             __errno_location|245-247-158-232
84584|code|MOV             R11, R7|187-70
84586|code|MOV             R4, R0|4-70
84588|code|STR             R5, [R0]|5-96
84590|code|B               loc_149F6|194-231
84592|code|ADDS            R7, #1|1-55
84594|code|LDRB            R4, [R7]|60-120
84596|code|B               loc_148AE|27-231
84598|code|BLX             __errno_location|245-247-150-232
84602|code|MOVS            R5, #0xC|12-37
84604|code|MOV             R4, R0|4-70
84606|code|STR             R5, [R0]|5-96
84608|code|B               loc_149F6|185-231
84610|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
84612|code|MOV             R0, R7; ptr|56-70
84614|code|ADDS            R3, #1|1-51
84616|code|STR             R3, [SP,#0x1F458+var_1F448]|4-147
84618|code|BLX             free|244-247-112-239
84622|code|MOV             R0, R6; s|48-70
84624|code|BLX             strlen|245-247-94-232
84628|code|STR.W           R0, [R9,#8]|201-248-8-0
84632|code|CMP             R5, #0|0-45
84634|code|BEQ.W           loc_14B9E|0-240-128-128
84638|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
84640|code|CMP.W           R1, #0x2800|177-245-32-95
84644|code|BEQ             loc_14ABA|9-208
84646|code|MOV             R6, R5|46-70
84648|code|B               loc_14946|77-231
84650|code|ADD.W           R1, SP, #0x1F458+var_458|13-245-248-49
84654|code|MOV             R0, R8|64-70
84656|code|ADDS            R1, #0x2C ; ','|44-49
84658|code|MOV             R5, R7|61-70
84660|code|BL              sub_13764|254-247-86-254
84664|code|B               loc_1487C|224-230
84666|code|BLX             __errno_location|245-247-116-232
84670|code|MOV             R4, R0|4-70
84672|code|LDR             R5, [R0]|5-104
84674|code|B               loc_149F6|152-231
84676|data|DCD asc_1BF14; "\t, "|20-191-1-0
84680|data|DCD aTooManyHostsIn; "Too many hosts in range `%s'"|212-190-1-0
84684|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
84688|data|DCD aInvalidRangeS; "Invalid range: `%s'"|244-190-1-0
84692|code|STR             R6, [SP,#0x1F458+var_1F448]|4-150
84694|code|LDR             R3, [SP,#0x1F458+var_1F444]|5-155
84696|code|ADD.W           R10, R3, #1|3-241-1-10
84700|code|LDRB            R6, [R3,#1]|94-120
84702|code|CBNZ            R6, loc_14B1C|238-185
84704|code|LDR             R1, [SP,#0x1F458+var_1F448]|4-153
84706|code|CMP             R1, #0|0-41
84708|code|BEQ             loc_14B9A|89-208
84710|code|ADD             R4, SP, #0x1F458+var_1F424|13-172
84712|code|MOV             R9, R7|185-70
84714|code|MOV             R7, R1|15-70
84716|code|LDR.W           R2, [R4,#-8]|84-248-8-44
84720|code|MOV             R0, R5|40-70
84722|code|LDR.W           R3, [R4,#-4]|84-248-4-60
84726|code|ADDS            R6, #1|1-54
84728|code|LDR.W           R1, [R4,#-0xC]|84-248-12-28
84732|code|ADDS            R4, #0xC|12-52
84734|code|BL              sub_13088|254-247-195-250
84738|code|MOV             R10, R0|130-70
84740|code|MOV             R0, R8|64-70
84742|code|MOV             R1, R10|81-70
84744|code|BL              sub_13548|254-247-30-253
84748|code|MOV             R0, R10|80-70
84750|code|BL              sub_12C38|254-247-147-248
84754|code|CMP             R6, R7|190-66
84756|code|BNE             loc_14AEC|234-209
84758|code|MOV             R7, R9|79-70
84760|code|MOV             R5, R9|77-70
84762|code|B               loc_1487C|175-230
84764|code|LDR             R3, [SP,#0x1F458+var_1F448]|4-155
84766|code|CMP             R3, #0|0-43
84768|code|BEQ             loc_14B9A|59-208
84770|code|ADD.W           R9, SP, #0x1F458+var_1F424|13-241-52-9
84774|code|STR             R7, [SP,#0x1F458+var_1F43C]|7-151
84776|code|MOV             R7, R5|47-70
84778|code|MOVS            R2, #0|0-34
84780|code|STR             R2, [SP,#0x1F458+var_1F444]|5-146
84782|code|LDR.W           R4, [R9,#-0xC]|89-248-12-76
84786|code|LDR.W           R5, [R9,#-8]|89-248-8-92
84790|code|CMP             R5, R4|165-66
84792|code|BCC             loc_14B84|36-211
84794|code|LDR.W           R6, [R9,#-4]|89-248-4-108
84798|code|MOV             R3, R6|51-70
84800|code|MOV             R6, R10|86-70
84802|code|MOV             R10, R9|202-70
84804|code|MOV             R9, R3|153-70
84806|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
84810|code|LDR             R2, =aS0LuS; "%s%0*lu%s"|26-74
84812|code|MOV             R3, R7|59-70
84814|code|MOV.W           R1, #0x1000; maxlen|79-244-128-81
84818|code|ADDS            R0, #0x2C ; ','; s|44-48
84820|code|STR             R4, [SP,#0x1F458+var_1F454]|1-148
84822|code|STR.W           R9, [SP,#0x1F458+var_1F458]|205-248-0-144
84826|code|ADDS            R4, #1|1-52
84828|code|STR             R6, [SP,#0x1F458+var_1F450]|2-150
84830|code|BLX             snprintf|245-247-46-232
84834|code|ADD.W           R0, SP, #0x1F458+var_1458|13-245-240-48
84838|code|ADDS            R0, #0x2C ; ','|44-48
84840|code|BL              sub_1300C|254-247-80-250
84844|code|MOV             R11, R0|131-70
84846|code|MOV             R0, R8|64-70
84848|code|MOV             R1, R11|89-70
84850|code|BL              sub_13548|254-247-233-252
84854|code|MOV             R0, R11|88-70
84856|code|BL              sub_12C38|254-247-94-248
84860|code|CMP             R5, R4|165-66
84862|code|BCS             loc_14B46|226-210
84864|code|MOV             R9, R10|209-70
84866|code|MOV             R10, R6|178-70
84868|code|LDR             R1, [SP,#0x1F458+var_1F444]|5-153
84870|code|ADD.W           R9, R9, #0xC|9-241-12-9
84874|code|LDR             R2, [SP,#0x1F458+var_1F448]|4-154
84876|code|ADDS            R1, #1|1-49
84878|code|STR             R1, [SP,#0x1F458+var_1F444]|5-145
84880|code|CMP             R1, R2|145-66
84882|code|BNE             loc_14B2E|204-209
84884|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
84886|code|MOV             R5, R7|61-70
84888|code|B               loc_1487C|112-230
84890|code|MOV             R5, R7|61-70
84892|code|B               loc_1487C|110-230
84894|code|LDR             R7, [SP,#0x1F458+var_1F43C]|7-159
84896|code|LDR             R5, [SP,#0x1F458+var_1F438]|8-157
84898|code|B               loc_14AD6|152-231
84900|code|MOV             R0, R8|64-70
84902|code|LDR.W           R8, [SP,#0x1F458+ptr]|221-248-36-128
84906|code|BL              sub_145A0|255-247-249-252
84910|code|B               loc_14888|107-230
84912|code|BLX             __stack_chk_fail|244-247-18-239
84916|data|DCD aS0LuS; "%s%0*lu%s"|8-191-1-0
84920|code|B.W             sub_14834|255-247-60-190
84924|code|PUSH            {R3-R7,LR}|248-181
84926|code|MOV             R7, R0|7-70
84928|code|MOV             R0, R1|8-70
84930|code|MOVS            R5, #0|0-37
84932|code|BL              sub_14BB8|255-247-248-255
84936|code|MOV             R6, R0|6-70
84938|code|CBNZ            R0, loc_14BDA|48-185
84940|code|B               loc_14BF4|18-224
84942|code|BL              sub_14398|255-247-227-251
84946|code|ADDS            R5, R5, R0|45-24
84948|code|MOV             R0, R4|32-70
84950|code|BLX             free|244-247-202-238
84954|code|MOV             R0, R6|48-70
84956|code|BL              sub_13808|254-247-20-254
84960|code|MOV             R4, R0|4-70
84962|code|MOV             R1, R0|1-70
84964|code|MOV             R0, R7|56-70
84966|code|CMP             R4, #0|0-44
84968|code|BNE             loc_14BCE|241-209
84970|code|MOV             R0, R6|48-70
84972|code|BL              sub_145A0|255-247-216-252
84976|code|MOV             R0, R5|40-70
84978|code|POP             {R3-R7,PC}|248-189
84980|code|BLX             __errno_location|244-247-214-239
84984|code|MOV             R5, R6|53-70
84986|code|MOVS            R3, #0x16|22-35
84988|code|STR             R3, [R0]|3-96
84990|code|MOV             R0, R5|40-70
84992|code|POP             {R3-R7,PC}|248-189
84994|data|ALIGN 4|0-191
84996|code|PUSH            {R4-R6,LR}|112-181
84998|code|MOV             R6, R0|6-70
85000|code|MOV             R5, R1|13-70
85002|code|CBZ             R1, loc_14C28|105-177
85004|code|MOV             R0, R1|8-70
85006|code|BL              sub_14BB8|255-247-211-255
85010|code|MOV             R4, R0|4-70
85012|code|MOV             R5, R0|5-70
85014|code|CBZ             R0, loc_14C28|56-177
85016|code|LDR             R5, [R0,#0xC]|197-104
85018|code|MOV             R1, R4|33-70
85020|code|MOV             R0, R6|48-70
85022|code|BL              sub_137B0|254-247-199-253
85026|code|MOV             R0, R4|32-70
85028|code|BL              sub_145A0|255-247-188-252
85032|code|MOV             R0, R5|40-70
85034|code|POP             {R4-R6,PC}|112-189
85036|code|PUSH            {R4-R7,LR}|240-181
85038|code|SUB             SP, SP, #0x24|137-176
85040|code|LDR             R5, =__stack_chk_guard|69-77
85042|code|MOV             R4, R0|4-70
85044|code|LDR             R3, [R5]|43-104
85046|code|STR             R3, [SP,#0x38+var_1C]|7-147
85048|code|CMP             R0, #0|0-40
85050|code|BEQ             loc_14D0E|104-208
85052|code|LDR             R2, [R0]|2-104
85054|code|MOVW            R3, #0xDEAD|77-246-173-99
85058|code|CMP             R2, R3|154-66
85060|code|BNE             loc_14D38|120-209
85062|code|LDR             R3, [R0,#4]|67-104
85064|code|CMP             R3, #0|0-43
85066|code|BEQ             loc_14D1C|103-208
85068|code|LDR             R1, [R3]|25-104
85070|code|CMP             R1, R2|145-66
85072|code|BNE             loc_14D2A|107-209
85074|code|LDR             R1, [R3,#8]|153-104
85076|code|MOVS            R7, #0|0-39
85078|code|LDR             R0, [R0,#8]|128-104
85080|code|CMP             R1, R0|129-66
85082|code|BLE             loc_14CC6|52-221
85084|code|LDR             R2, [R4,#0xC]|226-104
85086|code|LDR             R6, [R4,#0x10]|38-105
85088|code|LDR.W           R12, [R2,#8]|210-248-8-192
85092|code|ADDS            R6, #1|1-54
85094|code|LDR             R7, [R2,#4]|87-104
85096|code|STR             R6, [R4,#0x10]|38-97
85098|code|RSB.W           R7, R7, R12|199-235-12-7
85102|code|CMP             R6, R7|190-66
85104|code|BLS             loc_14C86|9-217
85106|code|LDR             R3, [R3,#0x10]|27-105
85108|code|ADDS            R0, #1|1-48
85110|code|MOVS            R7, #0|0-39
85112|code|CMP             R1, R0|129-66
85114|code|STR             R0, [R4,#8]|160-96
85116|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
85120|code|STR             R7, [R4,#0x10]|39-97
85122|code|STR             R2, [R4,#0xC]|226-96
85124|code|BLE             loc_14CC6|31-221
85126|code|MOVS            R3, #0|0-35
85128|code|STRB.W          R3, [SP,#0x38+s]|141-248-12-48
85132|code|LDRB            R3, [R2,#0x10]|19-124
85134|code|LSLS            R7, R3, #0x1F|223-7
85136|code|IT MI|72-191
85138|code|ADDMI           R6, SP, #0x38+s|3-174
85140|code|BPL             loc_14CD4|30-213
85142|code|LDR             R0, [R2]; s|16-104
85144|code|BLX             strlen|244-247-90-239
85148|code|MOV             R7, R0|7-70
85150|code|MOV             R0, R6; s|48-70
85152|code|BLX             strlen|244-247-86-239
85156|code|ADDS            R0, R7, R0|56-24
85158|code|ADDS            R0, #1; size|1-48
85160|code|BLX             malloc|244-247-14-239
85164|code|MOV             R7, R0|7-70
85166|code|CMP             R0, #0|0-40
85168|code|BEQ             loc_14CF0|30-208
85170|code|MOVS            R3, #0|0-35
85172|code|STRB            R3, [R0]|3-112
85174|code|LDR             R3, [R4,#0xC]|227-104
85176|code|LDR             R1, [R3]; src|25-104
85178|code|BLX             strcat|244-247-208-238
85182|code|MOV             R0, R7; dest|56-70
85184|code|MOV             R1, R6; src|49-70
85186|code|BLX             strcat|244-247-204-238
85190|code|LDR             R2, [SP,#0x38+var_1C]|7-154
85192|code|MOV             R0, R7|56-70
85194|code|LDR             R3, [R5]|43-104
85196|code|CMP             R2, R3|154-66
85198|code|BNE             loc_14D0A|28-209
85200|code|ADD             SP, SP, #0x24 ; '$'|9-176
85202|code|POP             {R4-R7,PC}|240-189
85204|code|ADD             R6, SP, #0x38+s|3-174
85206|code|LDR             R7, [R2,#4]|87-104
85208|code|LDR.W           LR, [R4,#0x10]|212-248-16-224
85212|code|MOVS            R1, #0xF; maxlen|15-33
85214|code|LDR             R3, [R2,#0xC]|211-104
85216|code|MOV             R0, R6; s|48-70
85218|code|LDR             R2, =a0Lu; "%0*lu"|26-74
85220|code|ADD             R7, LR|119-68
85222|code|STR             R7, [SP,#0x38+var_38]|0-151
85224|code|BLX             snprintf|244-247-104-239
85228|code|LDR             R2, [R4,#0xC]|226-104
85230|code|B               loc_14C96|210-231
85232|code|BLX             __errno_location|244-247-88-239
85236|code|MOVS            R2, #0xC|12-34
85238|code|MOVW            R1, #0x8DF|64-246-223-1
85242|code|MOV             R3, R0|3-70
85244|code|LDR             R0, =aHostlistC; "hostlist.c"|20-72
85246|code|STR             R2, [R3]|26-96
85248|code|LDR             R2, =aHostlistNext; "hostlist_next"|20-74
85250|code|BL              sub_12B20|253-247-13-255
85254|code|MOV             R7, R0|7-70
85256|code|B               loc_14CC6|221-231
85258|code|BLX             __stack_chk_fail|244-247-102-238
85262|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|18-72
85264|code|MOVW            R2, #0x8CE; line|64-246-206-2
85268|code|LDR             R1, =aHostlistC; "hostlist.c"|14-73
85270|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|17-75
85272|code|BLX             __assert_fail|245-247-30-232
85276|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|16-72
85278|code|MOV.W           R2, #0x8D0; line|79-244-13-98
85282|code|LDR             R1, =aHostlistC; "hostlist.c"|11-73
85284|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|13-75
85286|code|BLX             __assert_fail|245-247-24-232
85290|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
85292|code|MOV.W           R2, #0x8D0; line|79-244-13-98
85296|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
85298|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|10-75
85300|code|BLX             __assert_fail|245-247-16-232
85304|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
85306|code|MOVW            R2, #0x8CF; line|64-246-207-2
85310|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
85312|code|LDR             R3, =aHostlistNext_0; "hostlist_next"|6-75
85314|code|BLX             __assert_fail|245-247-10-232
85318|data|ALIGN 4|0-191
85320|data|DCD __stack_chk_guard|16-74-2-0
85324|data|DCD a0Lu; "%0*lu"|120-189-1-0
85328|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
85332|data|DCD aHostlistNext; "hostlist_next"|24-191-1-0
85336|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
85340|data|DCD aHostlistNext_0; "hostlist_next"|216-187-1-0
85344|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|140-190-1-0
85348|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|164-190-1-0
85352|data|DCD aIMagic57005; "i->magic == 57005"|20-190-1-0
85356|code|PUSH.W          {R4-R10,LR}|45-233-240-71
85360|code|SUB.W           SP, SP, #0x410|173-245-130-109
85364|code|LDR             R6, =__stack_chk_guard|51-78
85366|code|MOV             R8, R0|128-70
85368|code|LDR             R3, [R6]|51-104
85370|code|STR.W           R3, [SP,#0x40C]|205-248-12-52
85374|code|CMP             R0, #0|0-40
85376|code|BEQ             loc_14E34|88-208
85378|code|LDR             R3, [R0]|3-104
85380|code|MOVW            R2, #0xDEAD|77-246-173-98
85384|code|CMP             R3, R2|147-66
85386|code|BNE             loc_14E26|76-209
85388|code|LDR             R5, [R0,#4]|69-104
85390|code|CMP             R5, #0|0-45
85392|code|BEQ             loc_14E18|66-208
85394|code|LDR             R2, [R5]|42-104
85396|code|CMP             R2, R3|154-66
85398|code|BNE             loc_14E0A|56-209
85400|code|LDR             R3, [R0,#0x10]|3-105
85402|code|LDR.W           R9, [R5,#8]|213-248-8-144
85406|code|ADDS            R3, #1|1-51
85408|code|LDR.W           R10, [R5,#0x10]|213-248-16-160
85412|code|CMP             R3, #0|0-43
85414|code|LDR             R4, [R0,#8]|132-104
85416|code|STR             R3, [R0,#0x10]|3-97
85418|code|BLE             loc_14DD8|21-221
85420|code|ADD.W           R7, R10, R4,LSL#2|10-235-132-7
85424|code|B               loc_14DC0|6-224
85426|code|LDR.W           R1, [R7,#4]!|87-248-4-31
85430|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
85434|code|BL              sub_132E4|254-247-147-250
85438|code|CBZ             R0, loc_14DC6|16-177
85440|code|ADDS            R4, #1|1-52
85442|code|CMP             R9, R4|161-69
85444|code|BGT             loc_14DB2|245-220
85446|code|LDR.W           R3, [R10,R4,LSL#2]|90-248-36-48
85450|code|MOVS            R2, #0|0-34
85452|code|STR.W           R4, [R8,#8]|200-248-8-64
85456|code|STR.W           R2, [R8,#0x10]|200-248-16-32
85460|code|STR.W           R3, [R8,#0xC]|200-248-12-48
85464|code|MOVS            R0, #0|0-32
85466|code|CMP             R9, R4|161-69
85468|code|BLE             loc_14DF4|10-221
85470|code|MOV.W           R2, #0x400|79-244-128-98
85474|code|ADD             R3, SP, #8|2-171
85476|code|MOV             R0, R5|40-70
85478|code|ADD             R1, SP, #4|1-169
85480|code|STR             R4, [SP,#4]|1-148
85482|code|BL              sub_13308|254-247-141-250
85486|code|ADD             R0, SP, #8|2-168
85488|code|BLX             __strdup|244-247-240-238
85492|code|LDR.W           R2, [SP,#0x40C]|221-248-12-36
85496|code|LDR             R3, [R6]|51-104
85498|code|CMP             R2, R3|154-66
85500|code|BNE             loc_14E06|3-209
85502|code|ADD.W           SP, SP, #0x410|13-245-130-109
85506|code|POP.W           {R4-R10,PC}|189-232-240-135
85510|code|BLX             __stack_chk_fail|244-247-232-237
85514|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|15-72
85516|code|MOV.W           R2, #0x8F0|79-244-15-98
85520|code|LDR             R1, =aHostlistC; "hostlist.c"|14-73
85522|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|15-75
85524|code|BLX             __assert_fail|244-247-160-239
85528|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|14-72
85530|code|MOV.W           R2, #0x8F0|79-244-15-98
85534|code|LDR             R1, =aHostlistC; "hostlist.c"|11-73
85536|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|11-75
85538|code|BLX             __assert_fail|244-247-154-239
85542|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|12-72
85544|code|MOVW            R2, #0x8EF|64-246-239-2
85548|code|LDR             R1, =aHostlistC; "hostlist.c"|7-73
85550|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|8-75
85552|code|BLX             __assert_fail|244-247-146-239
85556|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
85558|code|MOVW            R2, #0x8EE|64-246-238-2
85562|code|LDR             R1, =aHostlistC; "hostlist.c"|4-73
85564|code|LDR             R3, =aHostlistNextRa; "hostlist_next_range"|4-75
85566|code|BLX             __assert_fail|244-247-140-239
85570|data|ALIGN 4|0-191
85572|data|DCD __stack_chk_guard|16-74-2-0
85576|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|164-190-1-0
85580|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
85584|data|DCD aHostlistNextRa; "hostlist_next_range"|232-187-1-0
85588|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|140-190-1-0
85592|data|DCD aIMagic57005; "i->magic == 57005"|20-190-1-0
85596|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
85600|code|PUSH            {R3-R5,LR}|56-181
85602|code|MOV             R4, R0|4-70
85604|code|CMP             R0, #0|0-40
85606|code|BEQ             loc_14F10|83-208
85608|code|LDR             R3, [R0]|3-104
85610|code|MOVW            R2, #0xDEAD|77-246-173-98
85614|code|CMP             R3, R2|147-66
85616|code|BNE             loc_14F02|71-209
85618|code|LDR             R2, [R0,#4]|66-104
85620|code|CMP             R2, #0|0-42
85622|code|BEQ             loc_14EF4|61-208
85624|code|LDR             R2, [R2]|18-104
85626|code|CMP             R2, R3|154-66
85628|code|BNE             loc_14EE6|51-209
85630|code|LDR             R0, [R0,#0xC]|192-104
85632|code|LDR             R1, [R4,#0x10]|33-105
85634|code|LDR             R3, [R0,#4]|67-104
85636|code|ADDS            R1, R1, R3|201-24
85638|code|BL              sub_13144|254-247-93-249
85642|code|MOV             R5, R0|5-70
85644|code|CBZ             R0, loc_14EC0|192-177
85646|code|LDR             R2, [R4,#8]|162-104
85648|code|MOV             R1, R0|1-70
85650|code|LDR             R0, [R4,#4]|96-104
85652|code|ADDS            R2, #1|1-50
85654|code|BL              sub_1361C|254-247-193-251
85658|code|MOV             R0, R5|40-70
85660|code|BL              sub_12C38|253-247-204-254
85664|code|LDR             R3, [R4,#4]|99-104
85666|code|LDR             R2, [R4,#8]|162-104
85668|code|LDR             R1, [R3,#0x10]|25-105
85670|code|ADDS            R2, #1|1-50
85672|code|STR             R2, [R4,#8]|162-96
85674|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
85678|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
85682|code|STR             R1, [R4,#0x10]|33-97
85684|code|STR             R2, [R4,#0xC]|226-96
85686|code|LDR             R2, [R3,#0xC]|218-104
85688|code|MOVS            R0, #1|1-32
85690|code|SUBS            R2, #1|1-58
85692|code|STR             R2, [R3,#0xC]|218-96
85694|code|POP             {R3-R5,PC}|56-189
85696|code|LDR             R0, [R4,#0xC]|224-104
85698|code|BL              sub_12F48|254-247-65-248
85702|code|CBNZ            R0, loc_14EDA|64-185
85704|code|LDR             R3, [R4,#4]|99-104
85706|code|MOVS            R0, #1|1-32
85708|code|LDR             R2, [R4,#0x10]|34-105
85710|code|SUBS            R2, #1|1-58
85712|code|STR             R2, [R4,#0x10]|34-97
85714|code|LDR             R2, [R3,#0xC]|218-104
85716|code|SUBS            R2, #1|1-58
85718|code|STR             R2, [R3,#0xC]|218-96
85720|code|POP             {R3-R5,PC}|56-189
85722|code|LDR             R0, [R4,#4]|96-104
85724|code|LDR             R1, [R4,#8]|161-104
85726|code|BL              sub_13E84|254-247-209-255
85730|code|LDR             R3, [R4,#4]|99-104
85732|code|B               loc_14EB6|231-231
85734|code|LDR             R0, =aIHlMagic57005; "(i->hl)->magic == 57005"|14-72
85736|code|MOVW            R2, #0x906|64-246-6-18
85740|code|LDR             R1, =aHostlistC; "hostlist.c"|13-73
85742|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|14-75
85744|code|BLX             __assert_fail|244-247-50-239
85748|code|LDR             R0, =aIHlVoid0; "i->hl != ((void *)0)"|13-72
85750|code|MOVW            R2, #0x906|64-246-6-18
85754|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
85756|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|10-75
85758|code|BLX             __assert_fail|244-247-44-239
85762|code|LDR             R0, =aIMagic57005; "i->magic == 57005"|11-72
85764|code|MOVW            R2, #0x905|64-246-5-18
85768|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
85770|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|7-75
85772|code|BLX             __assert_fail|244-247-36-239
85776|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|8-72
85778|code|MOVW            R2, #0x904|64-246-4-18
85782|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
85784|code|LDR             R3, =aHostlistRemove; "hostlist_remove"|3-75
85786|code|BLX             __assert_fail|244-247-30-239
85790|data|ALIGN 0x10|0-191
85792|data|DCD aIHlMagic57005; "(i->hl)->magic == 57005"|164-190-1-0
85796|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
85800|data|DCD aHostlistRemove; "hostlist_remove"|252-187-1-0
85804|data|DCD aIHlVoid0; "i->hl != ((void *)0)"|140-190-1-0
85808|data|DCD aIMagic57005; "i->magic == 57005"|20-190-1-0
85812|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
85816|code|PUSH            {R3-R5,LR}|56-181
85818|code|MOV             R5, R0|5-70
85820|code|MOVS            R0, #4|4-32
85822|code|BLX             malloc|244-247-196-237
85826|code|MOV             R4, R0|4-70
85828|code|CBZ             R0, loc_14F56|56-177
85830|code|MOV             R0, R5|40-70
85832|code|BL              sub_14BB8|255-247-54-254
85836|code|MOV             R3, R0|3-70
85838|code|STR             R0, [R4]|32-96
85840|code|CBZ             R0, loc_14F5A|24-177
85842|code|BL              sub_13FB4|255-247-47-248
85846|code|MOV             R0, R4|32-70
85848|code|POP             {R3-R5,PC}|56-189
85850|code|MOV             R0, R4|32-70
85852|code|MOV             R4, R3|28-70
85854|code|BLX             free|244-247-6-237
85858|code|B               loc_14F56|248-231
85860|code|PUSH            {R3-R5,LR}|56-181
85862|code|MOV             R5, R0|5-70
85864|code|MOVS            R0, #4|4-32
85866|code|BLX             malloc|244-247-174-237
85870|code|MOV             R4, R0|4-70
85872|code|CBZ             R0, loc_14F7E|40-177
85874|code|LDR             R0, [R5]|40-104
85876|code|BL              sub_136F4|254-247-190-251
85880|code|MOV             R3, R0|3-70
85882|code|STR             R0, [R4]|32-96
85884|code|CBZ             R0, loc_14F82|8-177
85886|code|MOV             R0, R4|32-70
85888|code|POP             {R3-R5,PC}|56-189
85890|code|MOV             R0, R4|32-70
85892|code|MOV             R4, R3|28-70
85894|code|BLX             free|244-247-242-236
85898|code|B               loc_14F7E|248-231
85900|code|PUSH            {R4,LR}|16-181
85902|code|MOV             R4, R0|4-70
85904|code|CBZ             R0, locret_14FA2|56-177
85906|code|LDR             R0, [R0]|0-104
85908|code|BL              sub_145A0|255-247-4-251
85912|code|MOV             R0, R4|32-70
85914|code|POP.W           {R4,LR}|189-232-16-64
85918|code|B.W             j_free|244-247-227-188
85922|code|POP             {R4,PC}|16-189
85924|code|PUSH.W          {R4-R11,LR}|45-233-240-79
85928|code|SUB             SP, SP, #0xC|131-176
85930|code|STR             R0, [SP,#4]|1-144
85932|code|MOV             R0, R1|8-70
85934|code|BL              sub_14BB8|255-247-3-254
85938|code|MOV             R8, R0|128-70
85940|code|CMP             R0, #0|0-40
85942|code|BEQ.W           loc_150F0|0-240-155-128
85946|code|BL              sub_13FB4|254-247-251-255
85950|code|LDR             R3, [SP,#4]|1-155
85952|code|LDR             R5, [R3]|29-104
85954|code|CMP             R5, #0|0-45
85956|code|BEQ.W           loc_15102|0-240-157-128
85960|code|LDR             R2, [R5]|42-104
85962|code|MOVW            R3, #0xDEAD|77-246-173-99
85966|code|CMP             R2, R3|154-66
85968|code|BNE.W           loc_150F4|64-240-144-128
85972|code|LDR.W           R3, [R8,#8]|216-248-8-48
85976|code|MOV.W           R9, #0|79-240-0-9
85980|code|CMP             R3, #0|0-43
85982|code|IT GT|200-191
85984|code|MOVGT           R6, R9|78-70
85986|code|BLE             loc_150E2|126-221
85988|code|LDR.W           R10, [R5,#8]|213-248-8-160
85992|code|LDR             R3, [R5,#4]|107-104
85994|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
85998|code|CMP             R3, R10|83-69
86000|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
86004|code|BEQ             loc_1508C|74-208
86006|code|MOV             R0, R11|88-70
86008|code|BL              sub_12ECC|253-247-104-255
86012|code|CMP.W           R10, #0|186-241-0-15
86016|code|MOV             R7, R0|7-70
86018|code|BLE             loc_150AA|82-221
86020|code|MOVS            R4, #0|0-36
86022|code|B               loc_15012|4-224
86024|code|LDR.W           R10, [R5,#8]|213-248-8-160
86028|code|ADDS            R4, #1|1-52
86030|code|CMP             R4, R10|84-69
86032|code|BGE             loc_150AA|75-218
86034|code|LDR             R3, [R5,#0x10]|43-105
86036|code|MOV             R0, R11|88-70
86038|code|MOV.W           R10, R4,LSL#2|79-234-132-10
86042|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
86046|code|BL              sub_131CC|254-247-213-248
86050|code|CMP             R0, #0|0-40
86052|code|BGT             loc_15008|240-220
86054|code|LDR             R3, [R5,#0x10]|43-105
86056|code|MOV             R0, R11|88-70
86058|code|LDR.W           R1, [R3,R10]|83-248-10-16
86062|code|BL              sub_1322C|254-247-253-248
86066|code|CMP             R0, #0|0-40
86068|code|MOV             R10, R0|130-70
86070|code|IT LT|184-191
86072|code|MOVLT.W         R10, #0|79-240-0-10
86076|code|BLT             loc_15046|3-219
86078|code|MOV             R0, R5|40-70
86080|code|MOV             R1, R4|33-70
86082|code|BL              sub_13E84|254-247-31-255
86086|code|MOV             R0, R5|40-70
86088|code|MOV             R1, R11|89-70
86090|code|MOV             R2, R4|34-70
86092|code|BL              sub_1361C|254-247-230-250
86096|code|CBZ             R4, loc_15060|52-177
86098|code|MOV             R0, R5|40-70
86100|code|MOV             R1, R4|33-70
86102|code|BL              sub_13F20|254-247-99-255
86106|code|CMP             R0, #0|0-40
86108|code|IT GT|200-191
86110|code|ADDGT           R10, R0|130-68
86112|code|LDR             R3, [R5,#0xC]|235-104
86114|code|RSB.W           R7, R10, R7|202-235-7-7
86118|code|ADDS            R3, R3, R7|219-25
86120|code|STR             R3, [R5,#0xC]|235-96
86122|code|LDR.W           R3, [R8,#8]|216-248-8-48
86126|code|ADDS            R6, #1|1-54
86128|code|ADD             R9, R7|185-68
86130|code|CMP             R3, R6|179-66
86132|code|BLE             loc_150E2|53-221
86134|code|LDR             R3, [SP,#4]|1-155
86136|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
86140|code|LDR             R5, [R3]|29-104
86142|code|LDR.W           R11, [R2,R6,LSL#2]|82-248-38-176
86146|code|LDR.W           R10, [R5,#8]|213-248-8-160
86150|code|LDR             R3, [R5,#4]|107-104
86152|code|CMP             R3, R10|83-69
86154|code|BNE             loc_14FF6|180-209
86156|code|MOV             R0, R5|40-70
86158|code|BL              sub_13534|254-247-81-250
86162|code|MOV             R7, R0|7-70
86164|code|CMP             R0, #0|0-40
86166|code|BEQ             loc_1506A|232-208
86168|code|MOV             R0, R11|88-70
86170|code|LDR.W           R10, [R5,#8]|213-248-8-160
86174|code|BL              sub_12ECC|253-247-21-255
86178|code|CMP.W           R10, #0|186-241-0-15
86182|code|MOV             R7, R0|7-70
86184|code|BGT             loc_15004|172-220
86186|code|MOV             R0, R11|88-70
86188|code|LDR             R4, [R5,#0x10]|44-105
86190|code|BL              sub_1310C|254-247-45-248
86194|code|ADD.W           R3, R10, #1|10-241-1-3
86198|code|LDR             R2, [R5,#0xC]|234-104
86200|code|CMP             R3, #1|1-43
86202|code|ADD             R2, R7|58-68
86204|code|STR.W           R0, [R4,R10,LSL#2]|68-248-42-0
86208|code|STR             R3, [R5,#8]|171-96
86210|code|STR             R2, [R5,#0xC]|234-96
86212|code|BLE             loc_1506A|209-221
86214|code|MOV             R0, R5|40-70
86216|code|MOV             R1, R10|81-70
86218|code|BL              sub_13F20|254-247-41-255
86222|code|LDR.W           R3, [R8,#8]|216-248-8-48
86226|code|CMP             R0, #0|0-40
86228|code|IT GT|200-191
86230|code|RSBGT.W         R7, R0, R7|192-235-7-7
86234|code|ADDS            R6, #1|1-54
86236|code|CMP             R3, R6|179-66
86238|code|ADD             R9, R7|185-68
86240|code|BGT             loc_15076|201-220
86242|code|MOV             R0, R8|64-70
86244|code|BL              sub_145A0|255-247-92-250
86248|code|MOV             R0, R9|72-70
86250|code|ADD             SP, SP, #0xC|3-176
86252|code|POP.W           {R4-R11,PC}|189-232-240-143
86256|code|MOV             R9, R0|129-70
86258|code|B               loc_150E8|249-231
86260|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|6-72
86262|code|MOVW            R2, #0x985|64-246-133-18
86266|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
86268|code|LDR             R3, =aHostsetInsert; "hostset_insert"|6-75
86270|code|BLX             __assert_fail|244-247-44-238
86274|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|6-72
86276|code|MOVW            R2, #0x985|64-246-133-18
86280|code|LDR             R1, =aHostlistC; "hostlist.c"|2-73
86282|code|LDR             R3, =aHostsetInsert; "hostset_insert"|3-75
86284|code|BLX             __assert_fail|244-247-36-238
86288|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|64-191-1-0
86292|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
86296|data|DCD aHostsetInsert; "hostset_insert"|12-188-1-0
86300|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|40-191-1-0
86304|code|PUSH.W          {R3-R11,LR}|45-233-248-79
86308|code|MOV             R6, R0|6-70
86310|code|LDR             R3, [R0]|3-104
86312|code|LDR             R4, [R3]|28-104
86314|code|MOVW            R3, #0xDEAD|77-246-173-99
86318|code|CMP             R4, R3|156-66
86320|code|BNE             loc_151D0|78-209
86322|code|MOV             R0, R1|8-70
86324|code|BL              sub_14BB8|255-247-64-253
86328|code|MOV             R9, R0|129-70
86330|code|CMP.W           R9, #0|185-241-0-15
86334|code|BEQ             locret_151CC|69-208
86336|code|BL              sub_139F4|254-247-88-252
86340|code|MOV.W           R8, #0|79-240-0-8
86344|code|MOV             R10, R4|162-70
86346|code|MOV             R11, R0|131-70
86348|code|MOV             R0, R9|72-70
86350|code|BL              sub_13808|254-247-91-251
86354|code|MOV             R7, R0|7-70
86356|code|CMP             R0, #0|0-40
86358|code|BEQ             loc_151AE|42-208
86360|code|LDR             R3, [R6]|51-104
86362|code|CMP             R3, #0|0-43
86364|code|BEQ             loc_151EC|70-208
86366|code|LDR             R3, [R3]|27-104
86368|code|CMP             R3, R10|83-69
86370|code|BNE             loc_151DE|60-209
86372|code|MOV             R0, R7|56-70
86374|code|BL              sub_12C54|253-247-117-253
86378|code|LDR             R2, [R6]|50-104
86380|code|LDR             R3, [R2,#8]|147-104
86382|code|CMP             R3, #0|0-43
86384|code|MOV             R5, R0|5-70
86386|code|BLE             loc_151C8|41-221
86388|code|MOVS            R4, #0|0-36
86390|code|B               loc_15182|4-224
86392|code|LDR             R2, [R6]|50-104
86394|code|ADDS            R4, #1|1-52
86396|code|LDR             R3, [R2,#8]|147-104
86398|code|CMP             R4, R3|156-66
86400|code|BGE             loc_151C4|32-218
86402|code|LDR             R3, [R2,#0x10]|19-105
86404|code|MOV             R1, R5|41-70
86406|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
86410|code|BL              sub_12DD4|253-247-35-254
86414|code|CMP             R0, #0|0-40
86416|code|BEQ             loc_15178|242-208
86418|code|MOVS            R3, #1|1-35
86420|code|MOV             R0, R5|40-70
86422|code|ADD             R8, R3|152-68
86424|code|BL              sub_12C10|253-247-58-253
86428|code|MOV             R0, R7|56-70
86430|code|BLX             free|244-247-230-235
86434|code|MOV             R0, R9|72-70
86436|code|BL              sub_13808|254-247-48-251
86440|code|MOV             R7, R0|7-70
86442|code|CMP             R0, #0|0-40
86444|code|BNE             loc_15158|212-209
86446|code|MOV             R0, R9|72-70
86448|code|BL              sub_145A0|255-247-246-249
86452|code|RSB.W           LR, R8, R11|200-235-11-14
86456|code|RSBS.W          R0, LR, #0|222-241-0-0
86460|code|ADC.W           R0, R0, LR|64-235-14-0
86464|code|POP.W           {R3-R11,PC}|189-232-248-143
86468|code|MOV             R3, R0|3-70
86470|code|B               loc_15194|229-231
86472|code|MOVS            R3, #0|0-35
86474|code|B               loc_15194|227-231
86476|code|POP.W           {R3-R11,PC}|189-232-248-143
86480|code|LDR             R0, =aSetHlMagic5700_0; "set->hl->magic == 57005"|10-72
86482|code|MOVW            R2, #0x9A9|64-246-169-18
86486|code|LDR             R1, =aHostlistC; "hostlist.c"|10-73
86488|code|LDR             R3, =aHostsetWithin; "hostset_within"|10-75
86490|code|BLX             __assert_fail|244-247-190-237
86494|code|LDR             R0, =aSetHlMagic5700; "(set->hl)->magic == 57005"|10-72
86496|code|MOVW            R2, #0x995|64-246-149-18
86500|code|LDR             R1, =aHostlistC; "hostlist.c"|6-73
86502|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|9-75
86504|code|BLX             __assert_fail|244-247-182-237
86508|code|LDR             R0, =aSetHlVoid0; "set->hl != ((void *)0)"|8-72
86510|code|MOVW            R2, #0x995|64-246-149-18
86514|code|LDR             R1, =aHostlistC; "hostlist.c"|3-73
86516|code|LDR             R3, =aHostsetFindHos; "hostset_find_host"|5-75
86518|code|BLX             __assert_fail|244-247-176-237
86522|data|ALIGN 4|0-191
86524|data|DCD aSetHlMagic5700_0; "set->hl->magic == 57005"|92-191-1-0
86528|data|DCD aHostlistC; "hostlist.c"|88-188-1-0
86532|data|DCD aHostsetWithin; "hostset_within"|28-188-1-0
86536|data|DCD aSetHlMagic5700; "(set->hl)->magic == 57005"|64-191-1-0
86540|data|DCD aHostsetFindHos; "hostset_find_host"|44-188-1-0
86544|data|DCD aSetHlVoid0; "set->hl != ((void *)0)"|40-191-1-0
86548|code|LDR             R0, [R0]|0-104
86550|code|B.W             loc_14BBC|255-247-209-188
86554|data|ALIGN 4|0-191
86556|code|LDR             R0, [R0]|0-104
86558|code|B.W             sub_14398|255-247-187-184
86562|data|ALIGN 4|0-191
86564|code|LDR             R0, [R0]|0-104
86566|code|B.W             loc_143B4|255-247-197-184
86570|data|ALIGN 4|0-191
86572|code|LDR             R0, [R0]|0-104
86574|code|B.W             sub_13808|254-247-235-186
86578|data|ALIGN 4|0-191
86580|code|LDR             R0, [R0]|0-104
86582|code|B.W             loc_14608|255-247-231-185
86586|data|ALIGN 4|0-191
86588|code|LDR             R0, [R0]|0-104
86590|code|B.W             loc_14724|255-247-113-186
86594|data|ALIGN 4|0-191
86596|code|LDR             R0, [R0]|0-104
86598|code|B.W             sub_139F4|254-247-213-187
86602|data|ALIGN 4|0-191
86604|code|LDR             R0, [R0]|0-104
86606|code|B.W             sub_13C80|254-247-23-189
86610|data|ALIGN 4|0-191
86612|code|LDR             R0, [R0]|0-104
86614|code|B.W             loc_13AE8|254-247-71-188
86618|data|ALIGN 4|0-191
86620|code|CMP             R0, #3|3-40
86622|code|PUSH            {R4-R6,LR}|112-181
86624|code|MOV             R4, R0|4-70
86626|code|SUB             SP, SP, #8|130-176
86628|code|BLS             loc_152AE|35-217
86630|code|CMP             R1, #0|0-41
86632|code|BEQ             loc_152BC|40-208
86634|code|LDR             R5, [R1]|13-104
86636|code|CBZ             R5, loc_15278|37-177
86638|code|LDR             R3, [R5]|43-104
86640|code|STR             R3, [R1]|11-96
86642|code|MOV             R0, R5|40-70
86644|code|ADD             SP, SP, #8|2-176
86646|code|POP             {R4-R6,PC}|112-189
86648|code|LSLS            R6, R0, #5|70-1
86650|code|STR             R1, [SP,#0x18+var_14]|1-145
86652|code|MOV             R0, R6; size|48-70
86654|code|BLX             malloc|244-247-36-236
86658|code|LDR             R1, [SP,#0x18+var_14]|1-153
86660|code|STR             R0, [R1]|8-96
86662|code|CBZ             R0, loc_152A4|104-177
86664|code|SUBS            R6, R6, R4|54-27
86666|code|ADDS            R6, R0, R6|134-25
86668|code|CMP             R0, R6|176-66
86670|code|BCC             loc_15294|1-211
86672|code|B               loc_1529C|4-224
86674|code|MOV             R0, R3|24-70
86676|code|ADDS            R3, R0, R4|3-25
86678|code|STR             R3, [R0]|3-96
86680|code|CMP             R6, R3|158-66
86682|code|BHI             loc_15292|250-216
86684|code|MOVS            R3, #0|0-35
86686|code|STR             R3, [R6]|51-96
86688|code|LDR             R3, [R1]|11-104
86690|code|CBNZ            R3, loc_152CA|147-185
86692|code|BLX             __errno_location|244-247-126-236
86696|code|MOVS            R3, #0xC|12-35
86698|code|STR             R3, [R0]|3-96
86700|code|B               loc_15272|225-231
86702|code|LDR             R0, =aSizeSizeofVoid; "size >= sizeof(void *)"|8-72
86704|code|MOVW            R2, #0x30B; line|64-242-11-50
86708|code|LDR             R1, =aListC; "list.c"|7-73
86710|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|8-75
86712|code|BLX             __assert_fail|244-247-78-237
86716|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|7-72
86718|code|MOV.W           R2, #0x30C; line|79-244-67-114
86722|code|LDR             R1, =aListC; "list.c"|4-73
86724|code|LDR             R3, =aListAllocAux; "list_alloc_aux"|4-75
86726|code|BLX             __assert_fail|244-247-72-237
86730|code|MOV             R5, R3|29-70
86732|code|B               loc_1526E|207-231
86734|data|ALIGN 0x10|0-191
86736|data|DCD aSizeSizeofVoid; "size >= sizeof(void *)"|4-193-1-0
86740|data|DCD aListC; "list.c"|72-183-1-0
86744|data|DCD aListAllocAux; "list_alloc_aux"|116-191-1-0
86748|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|28-193-1-0
86752|code|PUSH            {R3-R7,LR}|248-181
86754|code|MOV             R5, R0|5-70
86756|code|MOV             R4, R1|12-70
86758|code|MOV             R6, R2|22-70
86760|code|CMP             R0, #0|0-40
86762|code|BEQ             loc_153CC|111-208
86764|code|LDR             R2, [R0,#0x14]|66-105
86766|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
86774|code|CMP             R2, R3|154-66
86776|code|BNE             loc_153B0|90-209
86778|code|CMP             R1, #0|0-41
86780|code|BEQ             loc_153A2|81-208
86782|code|CMP             R6, #0|0-46
86784|code|BEQ             loc_153BE|93-208
86786|code|MOVS            R0, #8|8-32
86788|code|LDR             R1, =unk_56B98|53-73
86790|code|BL              sub_1525C|255-247-169-255
86794|code|CMP             R0, #0|0-40
86796|code|BEQ             loc_15376|51-208
86798|code|STR             R6, [R0]|6-96
86800|code|LDR             R3, [R4]|35-104
86802|code|STR             R3, [R0,#4]|67-96
86804|code|CMP             R3, #0|0-43
86806|code|BEQ             loc_15370|43-208
86808|code|STR             R0, [R4]|32-96
86810|code|LDR             R2, [R5,#0x10]|42-105
86812|code|LDR             R3, [R5,#8]|171-104
86814|code|ADDS            R2, #1|1-50
86816|code|STR             R2, [R5,#0x10]|42-97
86818|code|CBZ             R3, loc_1536C|27-179
86820|code|LDR             R7, [R3,#0x10]|31-105
86822|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
86830|code|CMP             R7, R2|151-66
86832|code|IT EQ|8-191
86834|code|ADDEQ.W         R12, R0, #4|0-241-4-12
86838|code|BEQ             loc_1535C|17-208
86840|code|B               loc_15386|37-224
86842|code|LDR             R2, [R3,#4]|90-104
86844|code|LDR             R5, [R0,#4]|69-104
86846|code|CMP             R2, R5|170-66
86848|code|ITT EQ|4-191
86850|code|STREQ           R0, [R3,#4]|88-96
86852|code|MOVEQ           R2, R0|2-70
86854|code|LDR             R1, [R1]|9-104
86856|code|CMP             R2, R1|138-66
86858|code|BEQ             loc_15352|2-208
86860|code|LDR             R1, [R1,#4]|73-104
86862|code|CMP             R2, R1|138-66
86864|code|BNE             loc_15394|32-209
86866|code|LDR             R3, [R3,#0xC]|219-104
86868|code|CBZ             R3, loc_1536C|83-177
86870|code|LDR             R2, [R3,#0x10]|26-105
86872|code|CMP             R2, R7|186-66
86874|code|BNE             loc_15386|20-209
86876|code|LDR             R1, [R3,#8]|153-104
86878|code|CMP             R1, R4|161-66
86880|code|BNE             loc_1533A|235-209
86882|code|MOV             R1, R12|97-70
86884|code|STR.W           R12, [R3,#8]|195-248-8-192
86888|code|LDR             R2, [R3,#4]|90-104
86890|code|B               loc_15346|236-231
86892|code|MOV             R0, R6|48-70
86894|code|POP             {R3-R7,PC}|248-189
86896|code|ADDS            R3, R0, #4|3-29
86898|code|STR             R3, [R5,#4]|107-96
86900|code|B               loc_15318|208-231
86902|code|LDR             R0, =aListC; "list.c"|26-72
86904|code|MOV.W           R1, #0x29C|79-244-39-113
86908|code|LDR             R2, =aListNodeCreate; "list node create"|25-74
86910|code|POP.W           {R3-R7,LR}|189-232-248-64
86914|code|B.W             sub_12B20|253-247-205-187
86918|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|24-72
86920|code|MOVW            R2, #0x2A3; line|64-242-163-34
86924|code|LDR             R1, =aListC; "list.c"|20-73
86926|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|23-75
86928|code|BLX             __assert_fail|244-247-226-236
86932|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|22-72
86934|code|MOV.W           R2, #0x2A8; line|79-244-42-114
86938|code|LDR             R1, =aListC; "list.c"|17-73
86940|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|19-75
86942|code|BLX             __assert_fail|244-247-220-236
86946|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|20-72
86948|code|MOVW            R2, #0x299; line|64-242-153-34
86952|code|LDR             R1, =aListC; "list.c"|13-73
86954|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|16-75
86956|code|BLX             __assert_fail|244-247-212-236
86960|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|17-72
86962|code|MOVW            R2, #0x297; line|64-242-151-34
86966|code|LDR             R1, =aListC; "list.c"|10-73
86968|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|12-75
86970|code|BLX             __assert_fail|244-247-206-236
86974|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|15-72
86976|code|MOVW            R2, #0x29A; line|64-242-154-34
86980|code|LDR             R1, =aListC; "list.c"|6-73
86982|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|9-75
86984|code|BLX             __assert_fail|244-247-198-236
86988|code|LDR             R0, =(aIHlVoid0+4); assertion|12-72
86990|code|MOVW            R2, #0x296; line|64-242-150-34
86994|code|LDR             R1, =aListC; "list.c"|3-73
86996|code|LDR             R3, =aListNodeCreate_0; "list_node_create"|5-75
86998|code|BLX             __assert_fail|244-247-192-236
87002|data|ALIGN 4|0-191
87004|data|DCD unk_56B98|152-107-5-0
87008|data|DCD aListC; "list.c"|72-183-1-0
87012|data|DCD aListNodeCreate; "list node create"|100-193-1-0
87016|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
87020|data|DCD aListNodeCreate_0; "list_node_create"|132-191-1-0
87024|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|144-193-1-0
87028|data|DCD aPpVoid0; "pp != ((void *)0)"|80-193-1-0
87032|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87036|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
87040|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87044|code|PUSH            {R3,LR}|8-181
87046|code|CBZ             R0, loc_15412|32-177
87048|code|CBZ             R1, loc_15420|81-177
87050|code|LDR             R3, [R1]|11-104
87052|code|STR             R3, [R0]|3-96
87054|code|STR             R0, [R1]|8-96
87056|code|POP             {R3,PC}|8-189
87058|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
87060|code|MOVW            R2, #0x329; line|64-242-41-50
87064|code|LDR             R1, =aListC; "list.c"|6-73
87066|code|LDR             R3, =aListFreeAux; "list_free_aux"|7-75
87068|code|BLX             __assert_fail|244-247-156-236
87072|code|LDR             R0, =aPfreelistVoid0; "pfreelist != ((void *)0)"|6-72
87074|code|MOVW            R2, #0x32A; line|64-242-42-50
87078|code|LDR             R1, =aListC; "list.c"|3-73
87080|code|LDR             R3, =aListFreeAux; "list_free_aux"|3-75
87082|code|BLX             __assert_fail|244-247-150-236
87086|data|ALIGN 0x10|0-191
87088|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
87092|data|DCD aListC; "list.c"|72-183-1-0
87096|data|DCD aListFreeAux; "list_free_aux"|152-191-1-0
87100|data|DCD aPfreelistVoid0; "pfreelist != ((void *)0)"|28-193-1-0
87104|code|PUSH            {R3-R7,LR}|248-181
87106|code|CMP             R0, #0|0-40
87108|code|BEQ             loc_154F2|85-208
87110|code|LDR             R2, [R0,#0x14]|66-105
87112|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87120|code|CMP             R2, R3|154-66
87122|code|BNE             loc_154E4|71-209
87124|code|CMP             R1, #0|0-41
87126|code|BEQ             loc_15500|83-208
87128|code|LDR             R3, [R1]|11-104
87130|code|CMP             R3, #0|0-43
87132|code|BEQ             loc_154C4|50-208
87134|code|LDR             R2, [R3,#4]|90-104
87136|code|LDR             R4, [R3]|28-104
87138|code|STR             R2, [R1]|10-96
87140|code|CMP             R2, #0|0-42
87142|code|BEQ             loc_154C0|43-208
87144|code|LDR             R5, [R0,#0x10]|5-105
87146|code|LDR             R2, [R0,#8]|130-104
87148|code|SUBS            R5, #1|1-61
87150|code|STR             R5, [R0,#0x10]|5-97
87152|code|CBZ             R2, loc_154B4|2-179
87154|code|LDR             R6, [R2,#0x10]|22-105
87156|code|MOV             R0, #0xDEADBEEF|75-246-239-96-205-246-173-96
87164|code|ADDS            R7, R3, #4|31-29
87166|code|CMP             R6, R0|134-66
87168|code|BEQ             loc_154A4|16-208
87170|code|B               loc_154C8|33-224
87172|code|LDR             R5, [R2,#8]|149-104
87174|code|CMP             R5, R7|189-66
87176|code|ITT EQ|4-191
87178|code|STREQ           R1, [R2,#8]|145-96
87180|code|MOVEQ           R5, R1|13-70
87182|code|LDR             R5, [R5]|45-104
87184|code|CMP             R5, R0|133-66
87186|code|BEQ             loc_1549A|2-208
87188|code|LDR             R5, [R5,#4]|109-104
87190|code|CMP             R5, R0|133-66
87192|code|BNE             loc_154D6|29-209
87194|code|LDR             R2, [R2,#0xC]|210-104
87196|code|CBZ             R2, loc_154B4|82-177
87198|code|LDR             R0, [R2,#0x10]|16-105
87200|code|CMP             R0, R6|176-66
87202|code|BNE             loc_154C8|17-209
87204|code|LDR             R0, [R2,#4]|80-104
87206|code|CMP             R0, R3|152-66
87208|code|BNE             loc_15484|236-209
87210|code|LDR             R0, [R3,#4]|88-104
87212|code|MOV             R5, R1|13-70
87214|code|STR             R1, [R2,#8]|145-96
87216|code|STR             R0, [R2,#4]|80-96
87218|code|B               loc_1548E|236-231
87220|code|MOV             R0, R3|24-70
87222|code|LDR             R1, =unk_56B98|22-73
87224|code|BL              sub_15404|255-247-164-255
87228|code|MOV             R0, R4|32-70
87230|code|POP             {R3-R7,PC}|248-189
87232|code|STR             R1, [R0,#4]|65-96
87234|code|B               loc_15468|209-231
87236|code|MOV             R4, R3|28-70
87238|code|B               loc_154BC|249-231
87240|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|18-72
87242|code|MOVW            R2, #0x2C6; line|64-242-198-34
87246|code|LDR             R1, =aListC; "list.c"|18-73
87248|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|18-75
87250|code|BLX             __assert_fail|244-247-66-236
87254|code|LDR             R0, =aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|18-72
87256|code|MOVW            R2, #0x2CB; line|64-242-203-34
87260|code|LDR             R1, =aListC; "list.c"|14-73
87262|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|15-75
87264|code|BLX             __assert_fail|244-247-58-236
87268|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|15-72
87270|code|MOV.W           R2, #0x2BC; line|79-244-47-114
87274|code|LDR             R1, =aListC; "list.c"|11-73
87276|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|11-75
87278|code|BLX             __assert_fail|244-247-52-236
87282|code|LDR             R0, =(aIHlVoid0+4); assertion|13-72
87284|code|MOVW            R2, #0x2BB; line|64-242-187-34
87288|code|LDR             R1, =aListC; "list.c"|7-73
87290|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|8-75
87292|code|BLX             __assert_fail|244-247-44-236
87296|code|LDR             R0, =aPpVoid0; "pp != ((void *)0)"|10-72
87298|code|MOVW            R2, #0x2BE; line|64-242-190-34
87302|code|LDR             R1, =aListC; "list.c"|4-73
87304|code|LDR             R3, =aListNodeDestro; "list_node_destroy"|4-75
87306|code|BLX             __assert_fail|244-247-38-236
87310|data|ALIGN 0x10|0-191
87312|data|DCD unk_56B98|152-107-5-0
87316|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
87320|data|DCD aListC; "list.c"|72-183-1-0
87324|data|DCD aListNodeDestro; "list_node_destroy"|168-191-1-0
87328|data|DCD aIPosIPrevIPosI; "(i->pos == *i->prev) || (i->pos == (*i-"...|144-193-1-0
87332|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87336|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87340|data|DCD aPpVoid0; "pp != ((void *)0)"|80-193-1-0
87344|code|PUSH            {R4,LR}|16-181
87346|code|MOV             R4, R0|4-70
87348|code|LDR             R1, =unk_56B9C|11-73
87350|code|MOVS            R0, #0x18|24-32
87352|code|BL              sub_1525C|255-247-144-254
87356|code|CBZ             R0, loc_15556|88-177
87358|code|MOVS            R3, #0|0-35
87360|code|MOVW            R2, #0xBEEF|75-246-239-98
87364|code|STR             R3, [R0]|3-96
87366|code|MOVT.W          R2, #0xDEAD|205-246-173-98
87370|code|STR             R0, [R0,#4]|64-96
87372|code|STR             R3, [R0,#8]|131-96
87374|code|STR             R4, [R0,#0xC]|196-96
87376|code|STR             R3, [R0,#0x10]|3-97
87378|code|STR             R2, [R0,#0x14]|66-97
87380|code|POP             {R4,PC}|16-189
87382|code|LDR             R0, =aListC; "list.c"|4-72
87384|code|MOVS            R1, #0xDE|222-33
87386|code|LDR             R2, =aListCreate; "list create"|4-74
87388|code|POP.W           {R4,LR}|189-232-16-64
87392|code|B.W             sub_12B20|253-247-222-186
87396|data|DCD unk_56B9C|156-107-5-0
87400|data|DCD aListC; "list.c"|72-183-1-0
87404|data|DCD aListCreate; "list create"|200-193-1-0
87408|code|PUSH            {R3-R7,LR}|248-181
87410|code|MOV             R7, R0|7-70
87412|code|CMP             R0, #0|0-40
87414|code|BEQ             loc_15600|67-208
87416|code|LDR             R2, [R0,#0x14]|66-105
87418|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87426|code|CMP             R2, R3|154-66
87428|code|BNE             loc_155F4|54-209
87430|code|LDR             R0, [R0,#8]|128-104
87432|code|CBZ             R0, loc_155B2|152-177
87434|code|LDR             R6, [R0,#0x10]|6-105
87436|code|CMP             R6, R2|150-66
87438|code|ITT EQ|4-191
87440|code|MOVEQW          R5, #0x4110|68-242-16-21
87444|code|MOVTEQ.W        R5, #0x2152|194-242-82-21
87448|code|BEQ             loc_155A4|4-208
87450|code|B               loc_155E8|37-224
87452|code|LDR             R3, [R4,#0x10]|35-105
87454|code|CMP             R3, R6|179-66
87456|code|BNE             loc_155E8|34-209
87458|code|MOV             R0, R4|32-70
87460|code|LDR             R4, [R0,#0xC]|196-104
87462|code|STR             R5, [R0,#0x10]|5-97
87464|code|LDR             R1, =unk_56BA0|24-73
87466|code|BL              sub_15404|255-247-43-255
87470|code|CMP             R4, #0|0-44
87472|code|BNE             loc_1559C|244-209
87474|code|LDR             R5, [R7]|61-104
87476|code|CBNZ            R5, loc_155BA|13-185
87478|code|B               loc_155D2|12-224
87480|code|MOV             R5, R4|37-70
87482|code|LDM.W           R5, {R0,R4}|149-232-17-0
87486|code|CBZ             R0, loc_155C6|16-177
87488|code|LDR             R3, [R7,#0xC]|251-104
87490|code|CBZ             R3, loc_155C6|3-177
87492|code|BLX             R3|152-71
87494|code|MOV             R0, R5|40-70
87496|code|LDR             R1, =unk_56B98|17-73
87498|code|BL              sub_15404|255-247-27-255
87502|code|CMP             R4, #0|0-44
87504|code|BNE             loc_155B8|242-209
87506|code|MOVW            R3, #0x4110|68-242-16-19
87510|code|MOV             R0, R7|56-70
87512|code|MOVT.W          R3, #0x2152|194-242-82-19
87516|code|LDR             R1, =unk_56B9C|13-73
87518|code|STR             R3, [R7,#0x14]|123-97
87520|code|POP.W           {R3-R7,LR}|189-232-248-64
87524|code|B.W             sub_15404|255-247-14-191
87528|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
87530|code|MOVS            R2, #0xF5; line|245-34
87532|code|LDR             R1, =aListC; "list.c"|11-73
87534|code|LDR             R3, =aListDestroy; "list_destroy"|12-75
87536|code|BLX             __assert_fail|244-247-178-235
87540|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
87542|code|MOVS            R2, #0xF2; line|242-34
87544|code|LDR             R1, =aListC; "list.c"|8-73
87546|code|LDR             R3, =aListDestroy; "list_destroy"|9-75
87548|code|BLX             __assert_fail|244-247-172-235
87552|code|LDR             R0, =(aIHlVoid0+4); assertion|9-72
87554|code|MOVS            R2, #0xF0; line|240-34
87556|code|LDR             R1, =aListC; "list.c"|5-73
87558|code|LDR             R3, =aListDestroy; "list_destroy"|6-75
87560|code|BLX             __assert_fail|244-247-166-235
87564|data|DCD unk_56BA0|160-107-5-0
87568|data|DCD unk_56B98|152-107-5-0
87572|data|DCD unk_56B9C|156-107-5-0
87576|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
87580|data|DCD aListC; "list.c"|72-183-1-0
87584|data|DCD aListDestroy; "list_destroy"|188-191-1-0
87588|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87592|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87596|code|PUSH            {R3,LR}|8-181
87598|code|CBZ             R0, loc_1564A|96-177
87600|code|LDR             R2, [R0,#0x14]|66-105
87602|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87610|code|CMP             R2, R3|154-66
87612|code|BNE             loc_15658|12-209
87614|code|LDR             R0, [R0,#0x10]|0-105
87616|code|RSBS.W          R0, R0, #1|208-241-1-0
87620|code|IT CC|56-191
87622|code|MOVCC           R0, #0|0-32
87624|code|POP             {R3,PC}|8-189
87626|code|LDR             R0, =(aIHlVoid0+4); assertion|7-72
87628|code|MOV.W           R2, #0x110; line|79-244-136-114
87632|code|LDR             R1, =aListC; "list.c"|6-73
87634|code|LDR             R3, =aListIsEmpty; "list_is_empty"|7-75
87636|code|BLX             __assert_fail|244-247-128-235
87640|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
87642|code|MOV.W           R2, #0x112; line|79-244-137-114
87646|code|LDR             R1, =aListC; "list.c"|3-73
87648|code|LDR             R3, =aListIsEmpty; "list_is_empty"|3-75
87650|code|BLX             __assert_fail|244-247-122-235
87654|data|ALIGN 4|0-191
87656|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87660|data|DCD aListC; "list.c"|72-183-1-0
87664|data|DCD aListIsEmpty; "list_is_empty"|204-191-1-0
87668|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87672|code|PUSH            {R3,LR}|8-181
87674|code|CBZ             R0, loc_1568E|64-177
87676|code|LDR             R2, [R0,#0x14]|66-105
87678|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87686|code|CMP             R2, R3|154-66
87688|code|BNE             loc_1569C|8-209
87690|code|LDR             R0, [R0,#0x10]|0-105
87692|code|POP             {R3,PC}|8-189
87694|code|LDR             R0, =(aIHlVoid0+4); assertion|7-72
87696|code|MOV.W           R2, #0x11E; line|79-244-143-114
87700|code|LDR             R1, =aListC; "list.c"|6-73
87702|code|LDR             R3, =aListCount; "list_count"|7-75
87704|code|BLX             __assert_fail|244-247-94-235
87708|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
87710|code|MOV.W           R2, #0x120; line|79-244-144-114
87714|code|LDR             R1, =aListC; "list.c"|3-73
87716|code|LDR             R3, =aListCount; "list_count"|3-75
87718|code|BLX             __assert_fail|244-247-88-235
87722|data|ALIGN 4|0-191
87724|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87728|data|DCD aListC; "list.c"|72-183-1-0
87732|data|DCD aListCount; "list_count"|220-191-1-0
87736|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87740|code|PUSH            {R3,LR}|8-181
87742|code|MOV             R2, R1|10-70
87744|code|CBZ             R0, loc_156DC|96-177
87746|code|CBZ             R1, loc_156F8|201-177
87748|code|LDR             R1, [R0,#0x14]|65-105
87750|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87758|code|CMP             R1, R3|153-66
87760|code|BNE             loc_156EA|11-209
87762|code|LDR             R1, [R0,#4]|65-104
87764|code|POP.W           {R3,LR}|189-232-8-64
87768|code|B.W             sub_152E0|255-247-2-190
87772|code|LDR             R0, =(aIHlVoid0+4); assertion|10-72
87774|code|MOV.W           R2, #0x12C; line|79-244-150-114
87778|code|LDR             R1, =aListC; "list.c"|10-73
87780|code|LDR             R3, =aListAppend; "list_append"|10-75
87782|code|BLX             __assert_fail|244-247-56-235
87786|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
87788|code|MOVW            R2, #0x12F; line|64-242-47-18
87792|code|LDR             R1, =aListC; "list.c"|6-73
87794|code|LDR             R3, =aListAppend; "list_append"|7-75
87796|code|BLX             __assert_fail|244-247-48-235
87800|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
87802|code|MOVW            R2, #0x12D; line|64-242-45-18
87806|code|LDR             R1, =aListC; "list.c"|3-73
87808|code|LDR             R3, =aListAppend; "list_append"|3-75
87810|code|BLX             __assert_fail|244-247-42-235
87814|data|ALIGN 4|0-191
87816|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87820|data|DCD aListC; "list.c"|72-183-1-0
87824|data|DCD aListAppend; "list_append"|232-191-1-0
87828|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87832|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
87836|code|PUSH            {R3,LR}|8-181
87838|code|MOV             R2, R1|10-70
87840|code|CBZ             R0, loc_1573C|96-177
87842|code|CBZ             R1, loc_15758|201-177
87844|code|LDR             R1, [R0,#0x14]|65-105
87846|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87854|code|CMP             R1, R3|153-66
87856|code|BNE             loc_1574A|11-209
87858|code|MOV             R1, R0|1-70
87860|code|POP.W           {R3,LR}|189-232-8-64
87864|code|B.W             sub_152E0|255-247-210-189
87868|code|LDR             R0, =(aIHlVoid0+4); assertion|10-72
87870|code|MOVW            R2, #0x13B; line|64-242-59-18
87874|code|LDR             R1, =aListC; "list.c"|10-73
87876|code|LDR             R3, =aListPrepend; "list_prepend"|10-75
87878|code|BLX             __assert_fail|244-247-8-235
87882|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
87884|code|MOV.W           R2, #0x13E; line|79-244-159-114
87888|code|LDR             R1, =aListC; "list.c"|6-73
87890|code|LDR             R3, =aListPrepend; "list_prepend"|7-75
87892|code|BLX             __assert_fail|244-247-0-235
87896|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
87898|code|MOV.W           R2, #0x13C; line|79-244-158-114
87902|code|LDR             R1, =aListC; "list.c"|3-73
87904|code|LDR             R3, =aListPrepend; "list_prepend"|3-75
87906|code|BLX             __assert_fail|244-247-250-234
87910|data|ALIGN 4|0-191
87912|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
87916|data|DCD aListC; "list.c"|72-183-1-0
87920|data|DCD aListPrepend; "list_prepend"|244-191-1-0
87924|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
87928|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
87932|code|PUSH            {R4-R6,LR}|112-181
87934|code|MOV             R4, R1|12-70
87936|code|MOV             R6, R2|22-70
87938|code|CBZ             R0, loc_157B6|192-177
87940|code|CMP             R1, #0|0-41
87942|code|BEQ             loc_157D2|36-208
87944|code|LDR             R2, [R0,#0x14]|66-105
87946|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
87954|code|CMP             R2, R3|154-66
87956|code|BNE             loc_157C4|22-209
87958|code|LDR             R5, [R0]|5-104
87960|code|CBNZ            R5, loc_157A0|21-185
87962|code|B               loc_157B2|10-224
87964|code|LDR             R5, [R5,#4]|109-104
87966|code|CBZ             R5, loc_157AE|53-177
87968|code|LDR             R0, [R5]|40-104
87970|code|MOV             R1, R6|49-70
87972|code|BLX             R4|160-71
87974|code|CMP             R0, #0|0-40
87976|code|BEQ             loc_1579C|248-208
87978|code|LDR             R0, [R5]|40-104
87980|code|POP             {R4-R6,PC}|112-189
87982|code|MOV             R0, R5|40-70
87984|code|POP             {R4-R6,PC}|112-189
87986|code|MOV             R0, R5|40-70
87988|code|POP             {R4-R6,PC}|112-189
87990|code|LDR             R0, =(aIHlVoid0+4); assertion|10-72
87992|code|MOVW            R2, #0x14B; line|64-242-75-18
87996|code|LDR             R1, =aListC; "list.c"|9-73
87998|code|LDR             R3, =aListFindFirst; "list_find_first"|10-75
88000|code|BLX             __assert_fail|244-247-202-234
88004|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|9-72
88006|code|MOV.W           R2, #0x14E; line|79-244-167-114
88010|code|LDR             R1, =aListC; "list.c"|6-73
88012|code|LDR             R3, =aListFindFirst; "list_find_first"|6-75
88014|code|BLX             __assert_fail|244-247-196-234
88018|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
88020|code|MOV.W           R2, #0x14C; line|79-244-166-114
88024|code|LDR             R1, =aListC; "list.c"|2-73
88026|code|LDR             R3, =aListFindFirst; "list_find_first"|3-75
88028|code|BLX             __assert_fail|244-247-188-234
88032|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88036|data|DCD aListC; "list.c"|72-183-1-0
88040|data|DCD aListFindFirst; "list_find_first"|4-192-1-0
88044|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88048|data|DCD aFVoid0; "f != ((void *)0)"|212-193-1-0
88052|code|PUSH.W          {R4-R8,LR}|45-233-240-65
88056|code|MOV             R5, R0|5-70
88058|code|MOV             R4, R1|12-70
88060|code|MOV             R7, R2|23-70
88062|code|CMP             R0, #0|0-40
88064|code|BEQ             loc_15850|38-208
88066|code|CMP             R1, #0|0-41
88068|code|BEQ             loc_1586C|50-208
88070|code|LDR             R2, [R0,#0x14]|66-105
88072|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88080|code|CMP             R2, R3|154-66
88082|code|ITT EQ|4-191
88084|code|MOVEQ           R6, R0|6-70
88086|code|MOVEQ.W         R8, #0|79-240-0-8
88090|code|BNE             loc_1585E|32-209
88092|code|LDR             R3, [R6]|51-104
88094|code|CBZ             R3, loc_15832|67-177
88096|code|LDR             R0, [R3]|24-104
88098|code|MOV             R1, R7|57-70
88100|code|BLX             R4|160-71
88102|code|CBNZ            R0, loc_15838|56-185
88104|code|LDR             R6, [R6]|54-104
88106|code|ADDS            R6, #4|4-54
88108|code|LDR             R3, [R6]|51-104
88110|code|CMP             R3, #0|0-43
88112|code|BNE             loc_15820|246-209
88114|code|MOV             R0, R8|64-70
88116|code|POP.W           {R4-R8,PC}|189-232-240-129
88120|code|MOV             R0, R5|40-70
88122|code|MOV             R1, R6|49-70
88124|code|BL              sub_15440|255-247-0-254
88128|code|CMP             R0, #0|0-40
88130|code|BEQ             loc_1581C|235-208
88132|code|LDR             R3, [R5,#0xC]|235-104
88134|code|CBZ             R3, loc_1584A|3-177
88136|code|BLX             R3|152-71
88138|code|ADD.W           R8, R8, #1|8-241-1-8
88142|code|B               loc_1581C|229-231
88144|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
88146|code|MOVW            R2, #0x161|64-242-97-18
88150|code|LDR             R1, =aListC; "list.c"|10-73
88152|code|LDR             R3, =aListDeleteAll; "list_delete_all"|10-75
88154|code|BLX             __assert_fail|244-247-126-234
88158|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
88160|code|MOV.W           R2, #0x164|79-244-178-114
88164|code|LDR             R1, =aListC; "list.c"|6-73
88166|code|LDR             R3, =aListDeleteAll; "list_delete_all"|7-75
88168|code|BLX             __assert_fail|244-247-118-234
88172|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
88174|code|MOV.W           R2, #0x162|79-244-177-114
88178|code|LDR             R1, =aListC; "list.c"|3-73
88180|code|LDR             R3, =aListDeleteAll; "list_delete_all"|3-75
88182|code|BLX             __assert_fail|244-247-112-234
88186|data|ALIGN 4|0-191
88188|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88192|data|DCD aListC; "list.c"|72-183-1-0
88196|data|DCD aListDeleteAll; "list_delete_all"|20-192-1-0
88200|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88204|data|DCD aFVoid0; "f != ((void *)0)"|212-193-1-0
88208|code|PUSH            {R3-R7,LR}|248-181
88210|code|MOV             R4, R1|12-70
88212|code|MOV             R7, R2|23-70
88214|code|CBZ             R0, loc_158E4|40-179
88216|code|CBZ             R1, loc_158D6|233-177
88218|code|LDR             R2, [R0,#0x14]|66-105
88220|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88228|code|CMP             R2, R3|154-66
88230|code|BNE             loc_158C8|15-209
88232|code|LDR             R5, [R0]|5-104
88234|code|MOV             R6, R5|46-70
88236|code|CBZ             R5, loc_158C4|85-177
88238|code|MOVS            R6, #0|0-38
88240|code|B               loc_158B6|1-224
88242|code|LDR             R5, [R5,#4]|109-104
88244|code|CBZ             R5, loc_158C4|53-177
88246|code|LDR             R0, [R5]|40-104
88248|code|MOV             R1, R7|57-70
88250|code|BLX             R4|160-71
88252|code|ADDS            R6, #1|1-54
88254|code|CMP             R0, #0|0-40
88256|code|BGE             loc_158B2|247-218
88258|code|NEGS            R6, R6|118-66
88260|code|MOV             R0, R6|48-70
88262|code|POP             {R3-R7,PC}|248-189
88264|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
88266|code|MOV.W           R2, #0x180|79-244-192-114
88270|code|LDR             R1, =aListC; "list.c"|10-73
88272|code|LDR             R3, =aListForEach; "list_for_each"|10-75
88274|code|BLX             __assert_fail|244-247-66-234
88278|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|10-72
88280|code|MOV.W           R2, #0x17E|79-244-191-114
88284|code|LDR             R1, =aListC; "list.c"|6-73
88286|code|LDR             R3, =aListForEach; "list_for_each"|7-75
88288|code|BLX             __assert_fail|244-247-58-234
88292|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|7-72
88294|code|MOVW            R2, #0x17D|64-242-125-18
88298|code|LDR             R1, =aListC; "list.c"|3-73
88300|code|LDR             R3, =aListForEach; "list_for_each"|3-75
88302|code|BLX             __assert_fail|244-247-52-234
88306|data|ALIGN 4|0-191
88308|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88312|data|DCD aListC; "list.c"|72-183-1-0
88316|data|DCD aListForEach; "list_for_each"|36-192-1-0
88320|data|DCD aFVoid0; "f != ((void *)0)"|212-193-1-0
88324|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88328|code|PUSH.W          {R4-R8,LR}|45-233-240-65
88332|code|MOV             R8, R0|128-70
88334|code|MOV             R6, R1|14-70
88336|code|CMP             R0, #0|0-40
88338|code|BEQ             loc_159BC|83-208
88340|code|CMP             R1, #0|0-41
88342|code|BEQ             loc_159D8|95-208
88344|code|LDR             R2, [R0,#0x14]|66-105
88346|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88354|code|CMP             R2, R3|154-66
88356|code|BNE             loc_159CA|81-209
88358|code|LDR             R3, [R0,#0x10]|3-105
88360|code|CMP             R3, #1|1-43
88362|code|BLE             locret_15980|41-221
88364|code|LDR             R3, [R0]|3-104
88366|code|MOV             R7, R0|7-70
88368|code|ADDS            R5, R3, #4|29-29
88370|code|LDR             R3, [R3,#4]|91-104
88372|code|CBZ             R3, loc_15952|107-177
88374|code|LDR             R2, [R7]|58-104
88376|code|LDR             R0, [R3]|24-104
88378|code|LDR             R1, [R2]|17-104
88380|code|BLX             R6|176-71
88382|code|CMP             R0, #0|0-40
88384|code|IT LT|184-191
88386|code|MOVLT           R4, R8|68-70
88388|code|BLT             loc_15988|32-219
88390|code|LDR             R3, [R5]|43-104
88392|code|MOV             R7, R5|47-70
88394|code|ADDS            R5, R3, #4|29-29
88396|code|LDR             R3, [R3,#4]|91-104
88398|code|CMP             R3, #0|0-43
88400|code|BNE             loc_15936|241-209
88402|code|LDR.W           R3, [R8,#8]|216-248-8-48
88406|code|STR.W           R5, [R8,#4]|200-248-4-80
88410|code|CBZ             R3, locret_15980|139-177
88412|code|LDR             R0, [R3,#0x10]|24-105
88414|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
88422|code|CMP             R0, R2|144-66
88424|code|BEQ             loc_15972|3-208
88426|code|B               loc_159AE|32-224
88428|code|LDR             R2, [R3,#0x10]|26-105
88430|code|CMP             R2, R0|130-66
88432|code|BNE             loc_159AE|29-209
88434|code|LDR             R2, [R3]|26-104
88436|code|LDR             R1, [R2]|17-104
88438|code|STR             R2, [R3,#8]|154-96
88440|code|STR             R1, [R3,#4]|89-96
88442|code|LDR             R3, [R3,#0xC]|219-104
88444|code|CMP             R3, #0|0-43
88446|code|BNE             loc_1596C|245-209
88448|code|POP.W           {R4-R8,PC}|189-232-240-129
88452|code|LDR             R4, [R4]|36-104
88454|code|ADDS            R4, #4|4-52
88456|code|LDR             R2, [R5]|42-104
88458|code|LDR             R3, [R4]|35-104
88460|code|LDR             R0, [R2]|16-104
88462|code|LDR             R1, [R3]|25-104
88464|code|BLX             R6|176-71
88466|code|CMP             R0, #0|0-40
88468|code|BGE             loc_15984|246-218
88470|code|LDR             R2, [R5]|42-104
88472|code|CMP             R7, R4|167-66
88474|code|LDR             R1, [R4]|33-104
88476|code|LDR             R3, [R2,#4]|83-104
88478|code|STR             R1, [R2,#4]|81-96
88480|code|LDR             R2, [R5]|42-104
88482|code|STR             R2, [R4]|34-96
88484|code|STR             R3, [R5]|43-96
88486|code|BNE             loc_15934|197-209
88488|code|LDR             R7, [R7]|63-104
88490|code|ADDS            R7, #4|4-55
88492|code|B               loc_15934|194-231
88494|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|14-72
88496|code|MOV.W           R2, #0x1B0|79-244-216-114
88500|code|LDR             R1, =aListC; "list.c"|13-73
88502|code|LDR             R3, =aListSort; "list_sort"|14-75
88504|code|BLX             __assert_fail|244-247-206-233
88508|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|13-72
88510|code|MOVW            R2, #0x195|64-242-149-18
88514|code|LDR             R1, =aListC; "list.c"|10-73
88516|code|LDR             R3, =aListSort; "list_sort"|10-75
88518|code|BLX             __assert_fail|244-247-200-233
88522|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|11-72
88524|code|MOV.W           R2, #0x198|79-244-204-114
88528|code|LDR             R1, =aListC; "list.c"|6-73
88530|code|LDR             R3, =aListSort; "list_sort"|7-75
88532|code|BLX             __assert_fail|244-247-192-233
88536|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|8-72
88538|code|MOV.W           R2, #0x196|79-244-203-114
88542|code|LDR             R1, =aListC; "list.c"|3-73
88544|code|LDR             R3, =aListSort; "list_sort"|3-75
88546|code|BLX             __assert_fail|244-247-186-233
88550|data|ALIGN 4|0-191
88552|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
88556|data|DCD aListC; "list.c"|72-183-1-0
88560|data|DCD aListSort; "list_sort"|52-192-1-0
88564|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88568|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88572|data|DCD aFVoid0; "f != ((void *)0)"|212-193-1-0
88576|code|PUSH            {R3,LR}|8-181
88578|code|MOV             R2, R1|10-70
88580|code|CBZ             R0, loc_15A20|96-177
88582|code|CBZ             R1, loc_15A3C|201-177
88584|code|LDR             R1, [R0,#0x14]|65-105
88586|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88594|code|CMP             R1, R3|153-66
88596|code|BNE             loc_15A2E|11-209
88598|code|MOV             R1, R0|1-70
88600|code|POP.W           {R3,LR}|189-232-8-64
88604|code|B.W             sub_152E0|255-247-96-188
88608|code|LDR             R0, =(aIHlVoid0+4); assertion|10-72
88610|code|MOVW            R2, #0x1BF; line|64-242-191-18
88614|code|LDR             R1, =aListC; "list.c"|10-73
88616|code|LDR             R3, =aListPush; "list_push"|10-75
88618|code|BLX             __assert_fail|244-247-150-233
88622|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
88624|code|MOV.W           R2, #0x1C2; line|79-244-225-114
88628|code|LDR             R1, =aListC; "list.c"|6-73
88630|code|LDR             R3, =aListPush; "list_push"|7-75
88632|code|BLX             __assert_fail|244-247-142-233
88636|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
88638|code|MOV.W           R2, #0x1C0; line|79-244-224-114
88642|code|LDR             R1, =aListC; "list.c"|3-73
88644|code|LDR             R3, =aListPush; "list_push"|3-75
88646|code|BLX             __assert_fail|244-247-136-233
88650|data|ALIGN 4|0-191
88652|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88656|data|DCD aListC; "list.c"|72-183-1-0
88660|data|DCD aListPush; "list_push"|64-192-1-0
88664|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88668|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
88672|code|PUSH            {R3,LR}|8-181
88674|code|CBZ             R0, loc_15A7C|88-177
88676|code|LDR             R2, [R0,#0x14]|66-105
88678|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88686|code|CMP             R2, R3|154-66
88688|code|BNE             loc_15A8A|11-209
88690|code|MOV             R1, R0|1-70
88692|code|POP.W           {R3,LR}|189-232-8-64
88696|code|B.W             sub_15440|255-247-226-188
88700|code|LDR             R0, =(aIHlVoid0+4); assertion|6-72
88702|code|MOV.W           R2, #0x1CE; line|79-244-231-114
88706|code|LDR             R1, =aListC; "list.c"|6-73
88708|code|LDR             R3, =aListPop; "list_pop"|6-75
88710|code|BLX             __assert_fail|244-247-104-233
88714|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
88716|code|MOV.W           R2, #0x1D0; line|79-244-232-114
88720|code|LDR             R1, =aListC; "list.c"|2-73
88722|code|LDR             R3, =aListPop; "list_pop"|3-75
88724|code|BLX             __assert_fail|244-247-96-233
88728|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88732|data|DCD aListC; "list.c"|72-183-1-0
88736|data|DCD aListPop; "list_pop"|76-192-1-0
88740|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88744|code|PUSH            {R3,LR}|8-181
88746|code|CBZ             R0, loc_15AC2|80-177
88748|code|LDR             R2, [R0,#0x14]|66-105
88750|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88758|code|CMP             R2, R3|154-66
88760|code|BNE             loc_15AD0|10-209
88762|code|LDR             R0, [R0]|0-104
88764|code|CBZ             R0, locret_15AC0|0-177
88766|code|LDR             R0, [R0]|0-104
88768|code|POP             {R3,PC}|8-189
88770|code|LDR             R0, =(aIHlVoid0+4); assertion|7-72
88772|code|MOV.W           R2, #0x1DC; line|79-244-238-114
88776|code|LDR             R1, =aListC; "list.c"|6-73
88778|code|LDR             R3, =aListPeek; "list_peek"|7-75
88780|code|BLX             __assert_fail|244-247-68-233
88784|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
88786|code|MOV.W           R2, #0x1DE; line|79-244-239-114
88790|code|LDR             R1, =aListC; "list.c"|3-73
88792|code|LDR             R3, =aListPeek; "list_peek"|3-75
88794|code|BLX             __assert_fail|244-247-62-233
88798|data|ALIGN 0x10|0-191
88800|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88804|data|DCD aListC; "list.c"|72-183-1-0
88808|data|DCD aListPeek; "list_peek"|88-192-1-0
88812|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88816|code|PUSH            {R3,LR}|8-181
88818|code|MOV             R2, R1|10-70
88820|code|CBZ             R0, loc_15B10|96-177
88822|code|CBZ             R1, loc_15B2C|201-177
88824|code|LDR             R1, [R0,#0x14]|65-105
88826|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88834|code|CMP             R1, R3|153-66
88836|code|BNE             loc_15B1E|11-209
88838|code|LDR             R1, [R0,#4]|65-104
88840|code|POP.W           {R3,LR}|189-232-8-64
88844|code|B.W             sub_152E0|255-247-232-187
88848|code|LDR             R0, =(aIHlVoid0+4); "l != ((void *)0)"|10-72
88850|code|MOV.W           R2, #0x1EA|79-244-245-114
88854|code|LDR             R1, =aListC; "list.c"|10-73
88856|code|LDR             R3, =aListEnqueue; "list_enqueue"|10-75
88858|code|BLX             __assert_fail|244-247-30-233
88862|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|10-72
88864|code|MOVW            R2, #0x1ED|64-242-237-18
88868|code|LDR             R1, =aListC; "list.c"|6-73
88870|code|LDR             R3, =aListEnqueue; "list_enqueue"|7-75
88872|code|BLX             __assert_fail|244-247-22-233
88876|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|7-72
88878|code|MOVW            R2, #0x1EB|64-242-235-18
88882|code|LDR             R1, =aListC; "list.c"|3-73
88884|code|LDR             R3, =aListEnqueue; "list_enqueue"|3-75
88886|code|BLX             __assert_fail|244-247-16-233
88890|data|ALIGN 4|0-191
88892|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88896|data|DCD aListC; "list.c"|72-183-1-0
88900|data|DCD aListEnqueue; "list_enqueue"|100-192-1-0
88904|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88908|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
88912|code|PUSH            {R3,LR}|8-181
88914|code|CBZ             R0, loc_15B6C|88-177
88916|code|LDR             R2, [R0,#0x14]|66-105
88918|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
88926|code|CMP             R2, R3|154-66
88928|code|BNE             loc_15B7A|11-209
88930|code|MOV             R1, R0|1-70
88932|code|POP.W           {R3,LR}|189-232-8-64
88936|code|B.W             sub_15440|255-247-106-188
88940|code|LDR             R0, =(aIHlVoid0+4); assertion|6-72
88942|code|MOVW            R2, #0x1F9; line|64-242-249-18
88946|code|LDR             R1, =aListC; "list.c"|6-73
88948|code|LDR             R3, =aListDequeue; "list_dequeue"|6-75
88950|code|BLX             __assert_fail|244-247-240-232
88954|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|6-72
88956|code|MOVW            R2, #0x1FB; line|64-242-251-18
88960|code|LDR             R1, =aListC; "list.c"|2-73
88962|code|LDR             R3, =aListDequeue; "list_dequeue"|3-75
88964|code|BLX             __assert_fail|244-247-232-232
88968|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
88972|data|DCD aListC; "list.c"|72-183-1-0
88976|data|DCD aListDequeue; "list_dequeue"|116-192-1-0
88980|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
88984|code|PUSH            {R4,LR}|16-181
88986|code|MOV             R4, R0|4-70
88988|code|CMP             R0, #0|0-40
88990|code|BEQ             loc_15BDA|28-208
88992|code|MOVS            R0, #0x14|20-32
88994|code|LDR             R1, =unk_56BA0|21-73
88996|code|BL              sub_1525C|255-247-90-251
89000|code|CBZ             R0, loc_15BCA|120-177
89002|code|LDR             R3, [R4,#0x14]|99-105
89004|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
89012|code|STR             R4, [R0]|4-96
89014|code|CMP             R3, R2|147-66
89016|code|BNE             loc_15BE8|22-209
89018|code|LDR             R2, [R4,#8]|162-104
89020|code|LDR             R1, [R4]|33-104
89022|code|STR             R4, [R0,#8]|132-96
89024|code|STR             R2, [R0,#0xC]|194-96
89026|code|STR             R1, [R0,#4]|65-96
89028|code|STR             R0, [R4,#8]|160-96
89030|code|STR             R3, [R0,#0x10]|3-97
89032|code|POP             {R4,PC}|16-189
89034|code|LDR             R0, =aListC; "list.c"|12-72
89036|code|MOVW            R1, #0x209|64-242-9-33
89040|code|LDR             R2, =aListIteratorCr; "list iterator create"|11-74
89042|code|POP.W           {R4,LR}|189-232-16-64
89046|code|B.W             sub_12B20|252-247-163-191
89050|code|LDR             R0, =(aIHlVoid0+4); assertion|10-72
89052|code|MOVW            R2, #0x207; line|64-242-7-34
89056|code|LDR             R1, =aListC; "list.c"|6-73
89058|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|9-75
89060|code|BLX             __assert_fail|244-247-184-232
89064|code|LDR             R0, =aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|8-72
89066|code|MOV.W           R2, #0x20C; line|79-244-3-114
89070|code|LDR             R1, =aListC; "list.c"|3-73
89072|code|LDR             R3, =aListIteratorCr_0; "list_iterator_create"|5-75
89074|code|BLX             __assert_fail|244-247-178-232
89078|data|ALIGN 4|0-191
89080|data|DCD unk_56BA0|160-107-5-0
89084|data|DCD aListC; "list.c"|72-183-1-0
89088|data|DCD aListIteratorCr; "list iterator create"|232-193-1-0
89092|data|DCD aIHlVoid0+4; "l != ((void *)0)"|144-190-1-0
89096|data|DCD aListIteratorCr_0; "list_iterator_create"|132-192-1-0
89100|data|DCD aLMagic0xdeadbe; "l->magic == 0xDEADBEEF"|56-193-1-0
89104|code|PUSH            {R3,LR}|8-181
89106|code|CBZ             R0, loc_15C32|112-177
89108|code|LDR             R2, [R0,#0x10]|2-105
89110|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
89118|code|CMP             R2, R3|154-66
89120|code|BNE             loc_15C4E|21-209
89122|code|LDR             R3, [R0]|3-104
89124|code|LDR             R1, [R3,#0x14]|89-105
89126|code|CMP             R1, R2|145-66
89128|code|BNE             loc_15C40|10-209
89130|code|LDR             R2, [R3]|26-104
89132|code|STR             R3, [R0,#8]|131-96
89134|code|STR             R2, [R0,#4]|66-96
89136|code|POP             {R3,PC}|8-189
89138|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
89140|code|MOVW            R2, #0x21A; line|64-242-26-34
89144|code|LDR             R1, =aListC; "list.c"|9-73
89146|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|10-75
89148|code|BLX             __assert_fail|244-247-140-232
89152|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|9-72
89154|code|MOVW            R2, #0x21D; line|64-242-29-34
89158|code|LDR             R1, =aListC; "list.c"|6-73
89160|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|6-75
89162|code|BLX             __assert_fail|244-247-134-232
89166|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|7-72
89168|code|MOVW            R2, #0x21B; line|64-242-27-34
89172|code|LDR             R1, =aListC; "list.c"|2-73
89174|code|LDR             R3, =aListIteratorRe; "list_iterator_reset"|3-75
89176|code|BLX             __assert_fail|244-247-126-232
89180|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89184|data|DCD aListC; "list.c"|72-183-1-0
89188|data|DCD aListIteratorRe; "list_iterator_reset"|156-192-1-0
89192|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|0-194-1-0
89196|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89200|code|PUSH            {R4,LR}|16-181
89202|code|CMP             R0, #0|0-40
89204|code|BEQ             loc_15CF6|63-208
89206|code|LDR             R3, [R0,#0x10]|3-105
89208|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
89216|code|CMP             R3, R2|147-66
89218|code|BNE             loc_15CE8|49-209
89220|code|LDR             R1, [R0]|1-104
89222|code|LDR             R2, [R1,#0x14]|74-105
89224|code|CMP             R2, R3|154-66
89226|code|BNE             loc_15CDA|38-209
89228|code|LDR             R3, [R1,#8]|139-104
89230|code|CBZ             R3, loc_15CB2|131-177
89232|code|LDR             R4, [R3,#0x10]|28-105
89234|code|CMP             R4, R2|148-66
89236|code|BNE             loc_15CCC|26-209
89238|code|ADDS            R1, #8|8-49
89240|code|CMP             R0, R3|152-66
89242|code|BNE             loc_15CA8|5-209
89244|code|B               loc_15CC6|19-224
89246|code|LDR             R2, [R3,#0x10]|26-105
89248|code|CMP             R2, R4|162-66
89250|code|BNE             loc_15CCC|19-209
89252|code|CMP             R0, R3|152-66
89254|code|BEQ             loc_15CC6|14-208
89256|code|ADD.W           R1, R3, #0xC|3-241-12-1
89260|code|LDR             R3, [R3,#0xC]|219-104
89262|code|CMP             R3, #0|0-43
89264|code|BNE             loc_15C9E|245-209
89266|code|MOVW            R3, #0x4110|68-242-16-19
89270|code|LDR             R1, =unk_56BA0|19-73
89272|code|MOVT.W          R3, #0x2152|194-242-82-19
89276|code|STR             R3, [R0,#0x10]|3-97
89278|code|POP.W           {R4,LR}|189-232-16-64
89282|code|B.W             sub_15404|255-247-159-187
89286|code|LDR             R3, [R0,#0xC]|195-104
89288|code|STR             R3, [R1]|11-96
89290|code|B               loc_15CB2|242-231
89292|code|LDR             R0, =aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|14-72
89294|code|MOVW            R2, #0x22F; line|64-242-47-34
89298|code|LDR             R1, =aListC; "list.c"|14-73
89300|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|14-75
89302|code|BLX             __assert_fail|244-247-64-232
89306|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|14-72
89308|code|MOVW            R2, #0x22D; line|64-242-45-34
89312|code|LDR             R1, =aListC; "list.c"|10-73
89314|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|11-75
89316|code|BLX             __assert_fail|244-247-56-232
89320|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|11-72
89322|code|MOVW            R2, #0x22B; line|64-242-43-34
89326|code|LDR             R1, =aListC; "list.c"|7-73
89328|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|7-75
89330|code|BLX             __assert_fail|244-247-50-232
89334|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|9-72
89336|code|MOVW            R2, #0x22A; line|64-242-42-34
89340|code|LDR             R1, =aListC; "list.c"|3-73
89342|code|LDR             R3, =aListIteratorDe; "list_iterator_destroy"|4-75
89344|code|BLX             __assert_fail|244-247-42-232
89348|data|DCD unk_56BA0|160-107-5-0
89352|data|DCD aPiMagic0xdeadb; "(*pi)->magic == 0xDEADBEEF"|32-194-1-0
89356|data|DCD aListC; "list.c"|72-183-1-0
89360|data|DCD aListIteratorDe; "list_iterator_destroy"|176-192-1-0
89364|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|0-194-1-0
89368|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89372|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89376|code|PUSH            {R3,LR}|8-181
89378|code|CMP             R0, #0|0-40
89380|code|BEQ             loc_15D76|39-208
89382|code|LDR             R3, [R0,#0x10]|3-105
89384|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
89392|code|CMP             R3, R2|147-66
89394|code|BNE             loc_15D68|25-209
89396|code|LDR             R2, [R0]|2-104
89398|code|LDR             R2, [R2,#0x14]|82-105
89400|code|CMP             R2, R3|154-66
89402|code|BNE             loc_15D5A|14-209
89404|code|LDR             R3, [R0,#4]|67-104
89406|code|CBZ             R3, loc_15D44|11-177
89408|code|LDR             R2, [R3,#4]|90-104
89410|code|STR             R2, [R0,#4]|66-96
89412|code|LDR             R2, [R0,#8]|130-104
89414|code|LDR             R2, [R2]|18-104
89416|code|CMP             R2, R3|154-66
89418|code|BEQ             loc_15D50|1-208
89420|code|ADDS            R2, #4|4-50
89422|code|STR             R2, [R0,#8]|130-96
89424|code|CBZ             R3, loc_15D56|11-177
89426|code|LDR             R0, [R3]|24-104
89428|code|POP             {R3,PC}|8-189
89430|code|MOV             R0, R3|24-70
89432|code|POP             {R3,PC}|8-189
89434|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
89436|code|MOV.W           R2, #0x244; line|79-244-17-114
89440|code|LDR             R1, =aListC; "list.c"|9-73
89442|code|LDR             R3, =aListNext; "list_next"|10-75
89444|code|BLX             __assert_fail|243-247-248-239
89448|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|9-72
89450|code|MOVW            R2, #0x242; line|64-242-66-34
89454|code|LDR             R1, =aListC; "list.c"|6-73
89456|code|LDR             R3, =aListNext; "list_next"|6-75
89458|code|BLX             __assert_fail|243-247-242-239
89462|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
89464|code|MOVW            R2, #0x241; line|64-242-65-34
89468|code|LDR             R1, =aListC; "list.c"|2-73
89470|code|LDR             R3, =aListNext; "list_next"|3-75
89472|code|BLX             __assert_fail|243-247-234-239
89476|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|0-194-1-0
89480|data|DCD aListC; "list.c"|72-183-1-0
89484|data|DCD aListNext; "list_next"|200-192-1-0
89488|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89492|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89496|code|PUSH            {R4,LR}|16-181
89498|code|MOV             R2, R1|10-70
89500|code|CBZ             R0, loc_15DC4|144-177
89502|code|CMP             R1, #0|0-41
89504|code|BEQ             loc_15DEE|37-208
89506|code|LDR             R1, [R0,#0x10]|1-105
89508|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
89516|code|CMP             R1, R3|153-66
89518|code|BNE             loc_15DE0|23-209
89520|code|LDR             R3, [R0]|3-104
89522|code|LDR             R4, [R3,#0x14]|92-105
89524|code|CMP             R4, R1|140-66
89526|code|BNE             loc_15DD2|12-209
89528|code|LDR             R1, [R0,#8]|129-104
89530|code|MOV             R0, R3|24-70
89532|code|POP.W           {R4,LR}|189-232-16-64
89536|code|B.W             sub_152E0|255-247-142-186
89540|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|13-72
89542|code|MOVW            R2, #0x253|64-242-83-34
89546|code|LDR             R1, =aListC; "list.c"|13-73
89548|code|LDR             R3, =aListInsert; "list_insert"|13-75
89550|code|BLX             __assert_fail|243-247-196-239
89554|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|13-72
89556|code|MOVW            R2, #0x257|64-242-87-34
89560|code|LDR             R1, =aListC; "list.c"|9-73
89562|code|LDR             R3, =aListInsert; "list_insert"|10-75
89564|code|BLX             __assert_fail|243-247-188-239
89568|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
89570|code|MOVW            R2, #0x255|64-242-85-34
89574|code|LDR             R1, =aListC; "list.c"|6-73
89576|code|LDR             R3, =aListInsert; "list_insert"|6-75
89578|code|BLX             __assert_fail|243-247-182-239
89582|code|LDR             R0, =aXVoid0; "x != ((void *)0)"|8-72
89584|code|MOV.W           R2, #0x254|79-244-21-114
89588|code|LDR             R1, =aListC; "list.c"|2-73
89590|code|LDR             R3, =aListInsert; "list_insert"|3-75
89592|code|BLX             __assert_fail|243-247-174-239
89596|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89600|data|DCD aListC; "list.c"|72-183-1-0
89604|data|DCD aListInsert; "list_insert"|212-192-1-0
89608|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|0-194-1-0
89612|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89616|data|DCD aXVoid0; "x != ((void *)0)"|48-197-1-0
89620|code|PUSH            {R3-R7,LR}|248-181
89622|code|MOV             R4, R0|4-70
89624|code|MOV             R5, R1|13-70
89626|code|MOV             R7, R2|23-70
89628|code|CBZ             R0, loc_15E44|144-177
89630|code|CBZ             R1, loc_15E60|249-177
89632|code|LDR             R2, [R0,#0x10]|2-105
89634|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
89642|code|CMP             R2, R3|154-66
89644|code|BNE             loc_15E52|17-209
89646|code|MOV             R0, R4|32-70
89648|code|BL              sub_15D20|255-247-118-255
89652|code|MOV             R6, R0|6-70
89654|code|CBZ             R0, loc_15E40|24-177
89656|code|MOV             R1, R7|57-70
89658|code|BLX             R5|168-71
89660|code|CMP             R0, #0|0-40
89662|code|BEQ             loc_15E2E|246-208
89664|code|MOV             R0, R6|48-70
89666|code|POP             {R3-R7,PC}|248-189
89668|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|10-72
89670|code|MOVW            R2, #0x263|64-242-99-34
89674|code|LDR             R1, =aListC; "list.c"|10-73
89676|code|LDR             R3, =aListFind; "list_find"|10-75
89678|code|BLX             __assert_fail|243-247-132-239
89682|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
89684|code|MOVW            R2, #0x265|64-242-101-34
89688|code|LDR             R1, =aListC; "list.c"|6-73
89690|code|LDR             R3, =aListFind; "list_find"|7-75
89692|code|BLX             __assert_fail|243-247-124-239
89696|code|LDR             R0, =aFVoid0; "f != ((void *)0)"|7-72
89698|code|MOV.W           R2, #0x264|79-244-25-114
89702|code|LDR             R1, =aListC; "list.c"|3-73
89704|code|LDR             R3, =aListFind; "list_find"|3-75
89706|code|BLX             __assert_fail|243-247-118-239
89710|data|ALIGN 0x10|0-191
89712|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89716|data|DCD aListC; "list.c"|72-183-1-0
89720|data|DCD aListFind; "list_find"|224-192-1-0
89724|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89728|data|DCD aFVoid0; "f != ((void *)0)"|212-193-1-0
89732|code|PUSH            {R3,LR}|8-181
89734|code|CMP             R0, #0|0-40
89736|code|BEQ             loc_15ED4|36-208
89738|code|LDR             R3, [R0,#0x10]|3-105
89740|code|MOV             R2, #0xDEADBEEF|75-246-239-98-205-246-173-98
89748|code|CMP             R3, R2|147-66
89750|code|BNE             loc_15EC6|22-209
89752|code|LDR             R2, [R0]|2-104
89754|code|LDR             R1, [R2,#0x14]|81-105
89756|code|CMP             R1, R3|153-66
89758|code|BNE             loc_15EB8|11-209
89760|code|LDR             R1, [R0,#8]|129-104
89762|code|LDR             R3, [R0,#4]|67-104
89764|code|LDR             R0, [R1]|8-104
89766|code|CMP             R0, R3|152-66
89768|code|BEQ             loc_15EB4|4-208
89770|code|MOV             R0, R2|16-70
89772|code|POP.W           {R3,LR}|189-232-8-64
89776|code|B.W             sub_15440|255-247-198-186
89780|code|MOVS            R0, #0|0-32
89782|code|POP             {R3,PC}|8-189
89784|code|LDR             R0, =aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|10-72
89786|code|MOVW            R2, #0x273; line|64-242-115-34
89790|code|LDR             R1, =aListC; "list.c"|10-73
89792|code|LDR             R3, =aListRemove; "list_remove"|10-75
89794|code|BLX             __assert_fail|243-247-74-239
89798|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|10-72
89800|code|MOVW            R2, #0x271; line|64-242-113-34
89804|code|LDR             R1, =aListC; "list.c"|6-73
89806|code|LDR             R3, =aListRemove; "list_remove"|7-75
89808|code|BLX             __assert_fail|243-247-66-239
89812|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
89814|code|MOV.W           R2, #0x270; line|79-244-28-114
89818|code|LDR             R1, =aListC; "list.c"|3-73
89820|code|LDR             R3, =aListRemove; "list_remove"|3-75
89822|code|BLX             __assert_fail|243-247-60-239
89826|data|ALIGN 4|0-191
89828|data|DCD aIListMagic0xde; "i->list->magic == 0xDEADBEEF"|0-194-1-0
89832|data|DCD aListC; "list.c"|72-183-1-0
89836|data|DCD aListRemove; "list_remove"|236-192-1-0
89840|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89844|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89848|code|PUSH            {R4,LR}|16-181
89850|code|MOV             R4, R0|4-70
89852|code|CBZ             R0, loc_15F22|136-177
89854|code|LDR             R2, [R0,#0x10]|2-105
89856|code|MOV             R3, #0xDEADBEEF|75-246-239-99-205-246-173-99
89864|code|CMP             R2, R3|154-66
89866|code|BNE             loc_15F30|17-209
89868|code|BL              sub_15E84|255-247-186-255
89872|code|CBZ             R0, locret_15F20|48-177
89874|code|LDR             R3, [R4]|35-104
89876|code|LDR             R3, [R3,#0xC]|219-104
89878|code|CBZ             R3, loc_15F1E|19-177
89880|code|BLX             R3|152-71
89882|code|MOVS            R0, #1|1-32
89884|code|POP             {R4,PC}|16-189
89886|code|MOVS            R0, #1|1-32
89888|code|POP             {R4,PC}|16-189
89890|code|LDR             R0, =aIVoid0; "i != ((void *)0)"|7-72
89892|code|MOV.W           R2, #0x280; line|79-244-32-114
89896|code|LDR             R1, =aListC; "list.c"|6-73
89898|code|LDR             R3, =aListDelete; "list_delete"|7-75
89900|code|BLX             __assert_fail|243-247-20-239
89904|code|LDR             R0, =aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|6-72
89906|code|MOVW            R2, #0x281; line|64-242-129-34
89910|code|LDR             R1, =aListC; "list.c"|3-73
89912|code|LDR             R3, =aListDelete; "list_delete"|3-75
89914|code|BLX             __assert_fail|243-247-14-239
89918|data|ALIGN 0x10|0-191
89920|data|DCD aIVoid0; "i != ((void *)0)"|0-190-1-0
89924|data|DCD aListC; "list.c"|72-183-1-0
89928|data|DCD aListDelete; "list_delete"|248-192-1-0
89932|data|DCD aIMagic0xdeadbe; "i->magic == 0xDEADBEEF"|120-193-1-0
89936|code|PUSH.W          {R4-R9,LR}|45-233-240-67
89940|code|MOV             R8, R0|128-70
89942|code|SUB             SP, SP, #0xC|131-176
89944|code|MOV             R6, R1|14-70
89946|code|MOVS            R4, #0x50 ; 'P'|80-36
89948|code|MOVS            R5, #0|0-37
89950|code|B               loc_15F92|24-224
89952|code|MOV             R0, R4|32-70
89954|code|MOV             R7, R4|39-70
89956|code|BL              sub_16730|0-240-228-251
89960|code|MOV             R5, R0|5-70
89962|code|MOV             R1, R4; maxlen|33-70
89964|code|MOV             R2, R8; format|66-70
89966|code|MOV             R3, R6; arg|51-70
89968|code|MOV             R0, R5; s|40-70
89970|code|STR             R6, [SP,#0x28+var_24]|1-150
89972|code|BLX             vsnprintf|243-247-174-238
89976|code|SUB.W           R2, R0, #0xFFFFFFFF|160-241-255-50
89980|code|MOV             R9, R0|129-70
89982|code|NEGS            R3, R2|83-66
89984|code|ADC.W           R3, R3, R2|67-235-2-3
89988|code|ADDS            R4, #0x50 ; 'P'|80-52
89990|code|CMP             R0, R7|184-66
89992|code|ITE LT|180-191
89994|code|MOVLT           R7, R3|31-70
89996|code|ORRGE.W         R7, R3, #1|67-240-1-7
90000|code|CBZ             R7, loc_15FA4|71-177
90002|code|CMP             R4, #0x50 ; 'P'|80-44
90004|code|BEQ             loc_15F60|228-208
90006|code|MOV             R0, R5|40-70
90008|code|MOV             R1, R4|33-70
90010|code|BL              sub_167A0|0-240-1-252
90014|code|MOV             R7, R4|39-70
90016|code|MOV             R5, R0|5-70
90018|code|B               loc_15F6A|226-231
90020|code|MOV             R0, R5; s|40-70
90022|code|BLX             strlen|243-247-212-237
90026|code|CMP             R9, R0|129-69
90028|code|BNE             loc_15FB6|3-209
90030|code|MOV             R0, R5|40-70
90032|code|ADD             SP, SP, #0xC|3-176
90034|code|POP.W           {R4-R9,PC}|189-232-240-131
90038|code|LDR             R0, =aLenStrlenStr; "len == strlen(str)"|3-72
90040|code|MOVS            R2, #0x39 ; '9'; line|57-34
90042|code|LDR             R1, =aHprintfC; "hprintf.c"|3-73
90044|code|LDR             R3, =aHvsprintf; "hvsprintf"|3-75
90046|code|BLX             __assert_fail|243-247-204-238
90050|data|ALIGN 4|0-191
90052|data|DCD aLenStrlenStr; "len == strlen(str)"|72-194-1-0
90056|data|DCD aHprintfC; "hprintf.c"|92-194-1-0
90060|data|DCD aHvsprintf; "hvsprintf"|60-194-1-0
90064|code|PUSH            {R0-R3}|15-180
90066|code|PUSH            {LR}|0-181
90068|code|SUB             SP, SP, #0xC|131-176
90070|code|ADD             R3, SP, #0x20+varg_r0|4-171
90072|code|LDR.W           R0, [R3],#4|83-248-4-11
90076|code|MOV             R1, R3|25-70
90078|code|STR             R3, [SP,#0x20+var_1C]|1-147
90080|code|BL              sub_15F50|255-247-182-255
90084|code|ADD             SP, SP, #0xC|3-176
90086|code|POP.W           {LR}|93-248-4-235
90090|code|ADD             SP, SP, #0x10|4-176
90092|code|BX              LR|112-71
90094|data|ALIGN 0x10|0-191
90096|code|PUSH            {R1-R3}|14-180
90098|code|PUSH            {R4-R6,LR}|112-181
90100|code|SUB             SP, SP, #0xC|131-176
90102|code|ADD             R3, SP, #0x1C|7-171
90104|code|MOV             R6, R0|6-70
90106|code|LDR.W           R0, [R3],#4|83-248-4-11
90110|code|MOV             R1, R3|25-70
90112|code|STR             R3, [SP,#4]|1-147
90114|code|BL              sub_15F50|255-247-165-255
90118|code|MOV             R5, R0|5-70
90120|code|BLX             strlen|243-247-162-237
90124|code|MOV             R4, R0|4-70
90126|code|MOV             R2, R4|34-70
90128|code|MOV             R0, R6|48-70
90130|code|MOV             R1, R5|41-70
90132|code|BL              sub_16228|0-240-8-249
90136|code|CMP             R0, #0|0-40
90138|code|RSB.W           R4, R0, R4|192-235-4-4
90142|code|BLT             loc_1602C|5-219
90144|code|CMP             R4, #0|0-44
90146|code|BGT             loc_1600E|244-220
90148|code|MOV             R0, R5|40-70
90150|code|BL              sub_1687C|0-240-41-252
90154|code|MOV             R0, R4|32-70
90156|code|ADD             SP, SP, #0xC|3-176
90158|code|POP.W           {R4-R6,LR}|189-232-112-64
90162|code|ADD             SP, SP, #0xC|3-176
90164|code|BX              LR|112-71
90166|data|ALIGN 4|0-191
90168|code|LDR             R3, [R0]|3-104
90170|code|CBZ             R3, loc_1604C|59-177
90172|code|MOV             R3, R0|3-70
90174|code|MOVS            R0, #0|0-32
90176|code|LDR.W           R2, [R3,#4]!|83-248-4-47
90180|code|ADDS            R0, #1|1-48
90182|code|CMP             R2, #0|0-42
90184|code|BNE             loc_16040|250-209
90186|code|BX              LR|112-71
90188|code|MOV             R0, R3|24-70
90190|code|BX              LR|112-71
90192|code|PUSH            {R3-R7,LR}|248-181
90194|code|MOV             R4, R1|12-70
90196|code|LDR             R6, [R0]|6-104
90198|code|MOVS            R5, #4|4-37
90200|code|MOVS            R1, #8|8-33
90202|code|CBZ             R6, loc_16074|94-177
90204|code|MOVS            R6, #0|0-38
90206|code|MOV             R3, R0|3-70
90208|code|LDR.W           R2, [R3,#4]!|83-248-4-47
90212|code|ADDS            R6, #1|1-54
90214|code|CMP             R2, #0|0-42
90216|code|BNE             loc_16060|250-209
90218|code|ADDS            R1, R6, #2|177-28
90220|code|ADDS            R5, R6, #1|117-28
90222|code|LSLS            R6, R6, #2|182-0
90224|code|LSLS            R1, R1, #2|137-0
90226|code|LSLS            R5, R5, #2|173-0
90228|code|BL              sub_167A0|0-240-148-251
90232|code|MOV             R7, R0|7-70
90234|code|MOV             R0, R4|32-70
90236|code|BL              sub_168F8|0-240-60-252
90240|code|MOVS            R3, #0|0-35
90242|code|STR             R0, [R7,R6]|184-81
90244|code|MOV             R0, R7|56-70
90246|code|STR             R3, [R7,R5]|123-81
90248|code|POP             {R3-R7,PC}|248-189
90250|data|ALIGN 4|0-191
90252|code|PUSH.W          {R4-R11,LR}|45-233-240-79
90256|code|SUB             SP, SP, #0xC|131-176
90258|code|LDRB            R6, [R0]|6-120
90260|code|MOV             R5, R0|5-70
90262|code|MOV             R4, R1|12-70
90264|code|MOV             R7, R0|7-70
90266|code|MOV.W           R9, #0|79-240-0-9
90270|code|CBNZ            R6, loc_160F6|86-187
90272|code|ADD.W           R0, R9, #1|9-241-1-0
90276|code|MOV             R8, R9|200-70
90278|code|LSLS            R0, R0, #2|128-0
90280|code|BL              sub_16730|0-240-66-251
90284|code|STR             R0, [SP,#0x30+var_2C]|1-144
90286|code|CMP.W           R9, #0|185-241-0-15
90290|code|BEQ             loc_16170|93-208
90292|code|LDR.W           R10, [SP,#0x30+var_2C]|221-248-4-160
90296|code|MOV.W           R8, #0|79-240-0-8
90300|code|LDRB            R1, [R5]|41-120
90302|code|CBZ             R1, loc_160E4|137-177
90304|code|STR             R1, [SP,#0x30+c]|0-145
90306|code|BLX             __ctype_b_loc|243-247-46-237
90310|code|LDR             R1, [SP,#0x30+c]; c|0-153
90312|code|MOV             R11, R5|171-70
90314|code|LDR             R6, [R0]|6-104
90316|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
90320|code|LSLS            R2, R3, #0x12|154-4
90322|code|BMI             loc_160DC|3-212
90324|code|MOV             R0, R4; s|32-70
90326|code|BLX             strchr|243-247-72-237
90330|code|CBZ             R0, loc_1611E|0-179
90332|code|LDRB.W          R1, [R11,#1]!|27-248-1-31
90336|code|CMP             R1, #0|0-41
90338|code|BNE             loc_160CC|243-209
90340|code|MOVS            R3, #0|0-35
90342|code|STR.W           R3, [R10]|202-248-0-48
90346|code|LDR             R0, =aArgvIVoid0; "argv[i] != ((void *)0)"|53-72
90348|code|MOVS            R2, #0x70 ; 'p'; line|112-34
90350|code|LDR             R1, =aArgvC; "argv.c"|53-73
90352|code|LDR             R3, =aArgvCreate; "argv_create"|53-75
90354|code|BLX             __assert_fail|243-247-50-238
90358|code|BLX             __ctype_b_loc|243-247-20-237
90362|code|LDR.W           R8, [R0]|208-248-0-128
90366|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
90370|code|ANDS.W          R3, R3, #0x2000|19-244-0-83
90374|code|BNE             loc_16118|7-209
90376|code|MOV             R0, R4; s|32-70
90378|code|MOV             R1, R6; c|49-70
90380|code|STR             R3, [SP,#0x30+c]|0-147
90382|code|BLX             strchr|243-247-44-237
90386|code|LDR             R3, [SP,#0x30+c]|0-155
90388|code|CMP             R0, #0|0-40
90390|code|BEQ             loc_16180|51-208
90392|code|LDRB            R6, [R7,#1]|126-120
90394|code|ADDS            R7, #1|1-55
90396|code|B               loc_1609E|191-231
90398|code|LDRB.W          R1, [R11]|155-248-0-16
90402|code|CMP             R1, #0|0-41
90404|code|BEQ             loc_160E4|222-208
90406|code|MOV             R5, R11|93-70
90408|code|B               loc_16138|6-224
90410|code|MOV             R0, R4; s|32-70
90412|code|BLX             strchr|243-247-28-237
90416|code|CBNZ            R0, loc_16140|48-185
90418|code|LDRB.W          R1, [R5,#1]!; c|21-248-1-31
90422|code|CBZ             R1, loc_16140|25-177
90424|code|LDRH.W          R3, [R6,R1,LSL#1]|54-248-17-48
90428|code|LSLS            R3, R3, #0x12|155-4
90430|code|BPL             loc_1612A|244-213
90432|code|RSB.W           R7, R11, R5|203-235-5-7
90436|code|CMP             R7, #0|0-47
90438|code|BLE             loc_160E4|205-221
90440|code|ADDS            R0, R7, #1|120-28
90442|code|BL              sub_16730|0-240-241-250
90446|code|MOV             R2, R7; n|58-70
90448|code|MOV             R1, R11; src|89-70
90450|code|MOV             R6, R0|6-70
90452|code|BLX             memcpy|243-247-34-236
90456|code|MOVS            R2, #0|0-34
90458|code|STRB            R2, [R6,R7]|242-85
90460|code|STR.W           R6, [R10],#4|74-248-4-107
90464|code|CMP             R6, #0|0-46
90466|code|BEQ             loc_160EA|194-208
90468|code|ADD.W           R8, R8, #1|8-241-1-8
90472|code|CMP             R8, R9|200-69
90474|code|BNE             loc_160BC|167-209
90476|code|MOV.W           R8, R8,LSL#2|79-234-136-8
90480|code|LDR             R2, [SP,#0x30+var_2C]|1-154
90482|code|MOVS            R3, #0|0-35
90484|code|MOV             R0, R2|16-70
90486|code|STR.W           R3, [R2,R8]|66-248-8-48
90490|code|ADD             SP, SP, #0xC|3-176
90492|code|POP.W           {R4-R11,PC}|189-232-240-143
90496|code|ADD.W           R10, R9, #1|9-241-1-10
90500|code|CBNZ            R3, loc_161A2|107-185
90502|code|MOV             R0, R4; s|32-70
90504|code|MOV             R1, R6; c|49-70
90506|code|BLX             strchr|243-247-238-236
90510|code|CBNZ            R0, loc_161A2|64-185
90512|code|LDRB            R6, [R7,#1]|126-120
90514|code|CBZ             R6, loc_161AA|86-177
90516|code|LDRH.W          R3, [R8,R6,LSL#1]|56-248-22-48
90520|code|ADDS            R7, #1|1-55
90522|code|AND.W           R3, R3, #0x2000|3-244-0-83
90526|code|CMP             R3, #0|0-43
90528|code|BEQ             loc_16186|241-208
90530|code|LDRB            R6, [R7]|62-120
90532|code|CBZ             R6, loc_161AE|30-177
90534|code|MOV             R9, R10|209-70
90536|code|B               loc_1609E|121-231
90538|code|MOV             R9, R10|209-70
90540|code|B               loc_160A0|120-231
90542|code|ADD.W           R0, R9, #2|9-241-2-0
90546|code|MOV             R9, R10|209-70
90548|code|LSLS            R0, R0, #2|128-0
90550|code|BL              sub_16730|0-240-187-250
90554|code|STR             R0, [SP,#0x30+var_2C]|1-144
90556|code|B               loc_160B4|122-231
90558|data|ALIGN 0x10|0-191
90560|data|DCD aArgvIVoid0; "argv[i] != ((void *)0)"|116-194-1-0
90564|data|DCD aArgvC; "argv.c"|140-194-1-0
90568|data|DCD aArgvCreate; "argv_create"|104-194-1-0
90572|code|PUSH            {R3-R5,LR}|56-181
90574|code|MOV             R5, R0|5-70
90576|code|LDR             R0, [R0]|0-104
90578|code|CBZ             R0, loc_161E2|48-177
90580|code|MOV             R4, R5|44-70
90582|code|BL              sub_1687C|0-240-81-251
90586|code|LDR.W           R0, [R4,#4]!|84-248-4-15
90590|code|CMP             R0, #0|0-40
90592|code|BNE             loc_161D6|249-209
90594|code|MOV             R0, R5|40-70
90596|code|POP.W           {R3-R5,LR}|189-232-56-64
90600|code|B.W             sub_1687C|0-240-72-187
90604|code|PUSH            {R3-R7,LR}|248-181
90606|code|MOV             R6, R0|6-70
90608|code|MOV             R5, R1|13-70
90610|code|MOV             R4, R2|20-70
90612|code|MOV             R1, R5; buf|41-70
90614|code|MOV             R2, R4; nbytes|34-70
90616|code|MOV             R0, R6; fd|48-70
90618|code|BLX             read|243-247-164-235
90622|code|CMP             R0, #0|0-40
90624|code|MOV             R7, R0|7-70
90626|code|BGE             loc_1621E|12-218
90628|code|BLX             __errno_location|243-247-206-236
90632|code|LDR             R3, [R0]|3-104
90634|code|CMP             R3, #4|4-43
90636|code|BEQ             loc_161F4|242-208
90638|code|CMP             R3, #0xB|11-43
90640|code|BEQ             loc_1621E|5-208
90642|code|CMP             R3, #0x68 ; 'h'|104-43
90644|code|BEQ             loc_1621E|3-208
90646|code|MOVS            R0, #1|1-32
90648|code|LDR             R1, =aRead; "read"|2-73
90650|code|BL              sub_12AC4|252-247-83-252
90654|code|MOV             R0, R7|56-70
90656|code|POP             {R3-R7,PC}|248-189
90658|data|ALIGN 4|0-191
90660|data|DCD aRead; "read"|148-194-1-0
90664|code|PUSH            {R3-R7,LR}|248-181
90666|code|MOV             R6, R0|6-70
90668|code|MOV             R5, R1|13-70
90670|code|MOV             R4, R2|20-70
90672|code|MOV             R1, R5; buf|41-70
90674|code|MOV             R2, R4; n|34-70
90676|code|MOV             R0, R6; fd|48-70
90678|code|BLX             write|243-247-242-236
90682|code|CMP             R0, #0|0-40
90684|code|MOV             R7, R0|7-70
90686|code|BGE             loc_1625E|14-218
90688|code|BLX             __errno_location|243-247-176-236
90692|code|LDR             R3, [R0]|3-104
90694|code|CMP             R3, #4|4-43
90696|code|BEQ             loc_16230|242-208
90698|code|CMP             R3, #0xB|11-43
90700|code|BEQ             loc_1625E|7-208
90702|code|CMP             R3, #0x68 ; 'h'|104-43
90704|code|BEQ             loc_1625E|5-208
90706|code|CMP             R3, #0x20 ; ' '|32-43
90708|code|BEQ             loc_1625E|3-208
90710|code|MOVS            R0, #1|1-32
90712|code|LDR             R1, =aWrite; "write"|2-73
90714|code|BL              sub_12AC4|252-247-51-252
90718|code|MOV             R0, R7|56-70
90720|code|POP             {R3-R7,PC}|248-189
90722|data|ALIGN 4|0-191
90724|data|DCD aWrite; "write"|156-194-1-0
90728|code|CMP             R2, #0|0-42
90730|code|PUSH            {R3-R7,LR}|248-181
90732|code|MOV             R6, R0|6-70
90734|code|MOV             R7, R1|15-70
90736|code|MOV             R5, R2|21-70
90738|code|BLE             locret_16298|17-221
90740|code|MOVS            R4, #0|0-36
90742|code|B               loc_1627C|1-224
90744|code|CMP             R5, R4|165-66
90746|code|BLE             locret_16298|13-221
90748|code|ADDS            R1, R7, R4|57-25
90750|code|SUBS            R2, R5, R4|42-27
90752|code|MOV             R0, R6|48-70
90754|code|BL              sub_16228|255-247-209-255
90758|code|CMP             R0, #0|0-40
90760|code|ADD             R4, R0|4-68
90762|code|BGE             loc_16278|245-218
90764|code|MOVS            R0, #1|1-32
90766|code|LDR             R1, =aWrite; "write"|3-73
90768|code|BL              sub_12AC4|252-247-24-252
90772|code|CMP             R5, R4|165-66
90774|code|BGT             loc_1627C|241-220
90776|code|POP             {R3-R7,PC}|248-189
90778|data|ALIGN 4|0-191
90780|data|DCD aWrite; "write"|156-194-1-0
90784|code|CMP             R2, #0|0-42
90786|code|PUSH.W          {R4-R8,LR}|45-233-240-65
90790|code|MOV             R6, R0|6-70
90792|code|MOV             R7, R1|15-70
90794|code|MOV             R5, R2|21-70
90796|code|BLE             locret_162DE|23-221
90798|code|MOVS            R4, #0|0-36
90800|code|B               loc_162C0|6-224
90802|code|BNE             loc_162BA|2-209
90804|code|LDR             R1, =aEofOnRead; "EOF on read"|11-73
90806|code|BL              sub_12AC4|252-247-5-252
90810|code|ADD             R4, R8|68-68
90812|code|CMP             R5, R4|165-66
90814|code|BLE             locret_162DE|14-221
90816|code|ADDS            R1, R7, R4|57-25
90818|code|SUBS            R2, R5, R4|42-27
90820|code|MOV             R0, R6|48-70
90822|code|BL              sub_161EC|255-247-145-255
90826|code|CMP             R0, #0|0-40
90828|code|MOV             R8, R0|128-70
90830|code|BGE             loc_162B2|240-218
90832|code|MOVS            R0, #1|1-32
90834|code|LDR             R1, =aRead; "read"|5-73
90836|code|ADD             R4, R8|68-68
90838|code|BL              sub_12AC4|252-247-245-251
90842|code|CMP             R5, R4|165-66
90844|code|BGT             loc_162C0|240-220
90846|code|POP.W           {R4-R8,PC}|189-232-240-129
90850|data|ALIGN 4|0-191
90852|data|DCD aEofOnRead; "EOF on read"|164-194-1-0
90856|data|DCD aRead; "read"|148-194-1-0
90860|code|PUSH            {R3-R5,LR}|56-181
90862|code|MOV             R3, R0|3-70
90864|code|MOV             R4, R1|12-70
90866|code|LDR             R0, =(aRegcompFailedS+0x10); "%s"|20-72
90868|code|MOV             R1, R3|25-70
90870|code|MOV             R5, R2|21-70
90872|code|BLX             printf|243-247-18-235
90876|code|LDR             R3, =stdout|18-75
90878|code|LDR             R0, [R3]|24-104
90880|code|BLX             fflush|243-247-38-235
90884|code|LDR             R3, =stdin|17-75
90886|code|MOV             R0, R4|32-70
90888|code|MOV             R1, R5|41-70
90890|code|LDR             R2, [R3]|26-104
90892|code|BLX             fgets|243-247-58-235
90896|code|CBZ             R0, loc_1633E|168-177
90898|code|MOV             R0, R4|32-70
90900|code|BLX             strlen|243-247-28-236
90904|code|SUBS            R5, R0, #1|69-30
90906|code|ADDS            R5, R4, R5|101-25
90908|code|BCS             loc_1633A|13-210
90910|code|BLX             __ctype_b_loc|243-247-0-236
90914|code|MOVS            R1, #0|0-33
90916|code|B               loc_1632C|2-224
90918|code|CMP             R4, R5|172-66
90920|code|STRB            R1, [R5,#1]|105-112
90922|code|BHI             loc_1633A|6-216
90924|code|LDRB.W          R2, [R5],#-1|21-248-1-41
90928|code|LDR             R3, [R0]|3-104
90930|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
90934|code|LSLS            R3, R3, #0x12|155-4
90936|code|BMI             loc_16326|245-212
90938|code|MOV             R0, R4|32-70
90940|code|POP             {R3-R5,PC}|56-189
90942|code|MOV             R4, R0|4-70
90944|code|B               loc_1633A|251-231
90946|data|ALIGN 4|0-191
90948|data|DCD aRegcompFailedS+0x10; "%s"|32-197-1-0
90952|data|DCD stdout|36-74-2-0
90956|data|DCD stdin|32-74-2-0
90960|code|PUSH.W          {R4-R8,LR}|45-233-240-65
90964|code|MOV             R5, R0|5-70
90966|code|SUB             SP, SP, #0x18|134-176
90968|code|MOV             R6, R1|14-70
90970|code|MOV             R4, R1|12-70
90972|code|CBZ             R1, loc_16376|89-177
90974|code|LDM             R1, {R0,R1}|3-201
90976|code|MOV             R4, SP|108-70
90978|code|STMEA.W         SP, {R0,R1}|141-232-3-0
90982|code|MOVS            R1, #0; tz|0-33
90984|code|ADD             R0, SP, #0x30+tv; tv|2-168
90986|code|BLX             gettimeofday|243-247-156-235
90990|code|CMP             R0, #0|0-40
90992|code|IT GE|168-191
90994|code|MOVGE           R4, SP|108-70
90996|code|BLT             loc_16416|79-219
90998|code|MOV             R7, #0x10624DD3|68-246-211-87-193-242-98-7
91006|code|MOV.W           R8, #0x3E8|79-244-122-120
91010|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
91014|code|CBZ             R4, loc_1639A|68-177
91016|code|LDM.W           R4, {R2,R3}|148-232-12-0
91020|code|SMULL.W         R0, R1, R7, R3|135-251-3-1
91024|code|ASRS            R3, R3, #0x1F|219-23
91026|code|RSB.W           R3, R3, R1,ASR#6|195-235-161-19
91030|code|MLA.W           R2, R8, R2, R3; timeout|8-251-2-50
91034|code|LDR             R0, [R5,#0xC]; fds|232-104
91036|code|LDR             R1, [R5,#4]; nfds|105-104
91038|code|BLX             poll|243-247-64-235
91042|code|CMP             R0, #0|0-40
91044|code|BLT             loc_163AC|2-219
91046|code|ADD             SP, SP, #0x18|6-176
91048|code|POP.W           {R4-R8,PC}|189-232-240-129
91052|code|BLX             __errno_location|243-247-250-235
91056|code|LDR             R3, [R0]|3-104
91058|code|CMP             R3, #4|4-43
91060|code|BEQ             loc_163BE|3-208
91062|code|MOVS            R0, #1|1-32
91064|code|LDR             R1, =aSelectPoll; "select/poll"|26-73
91066|code|BL              sub_12AC4|252-247-131-251
91070|code|CMP             R6, #0|0-46
91072|code|BEQ             loc_16382|223-208
91074|code|MOVS            R1, #0; tz|0-33
91076|code|ADD             R0, SP, #0x30+var_20; tv|4-168
91078|code|BLX             gettimeofday|243-247-110-235
91082|code|CMP             R0, #0|0-40
91084|code|BLT             loc_1640C|30-219
91086|code|LDR             R2, [SP,#0x30+var_20.tv_usec]|5-154
91088|code|LDR             R3, [SP,#0x30+tv.tv_usec]|3-155
91090|code|LDR             R1, [SP,#0x30+tv]|2-153
91092|code|LDR             R0, [SP,#0x30+var_20]|4-152
91094|code|SUBS            R3, R2, R3|211-26
91096|code|RSB.W           R1, R1, R0|193-235-0-1
91100|code|BMI             loc_16400|16-212
91102|code|LDR             R0, [R6,#4]|112-104
91104|code|LDR             R2, [R6]|50-104
91106|code|SUBS            R3, R0, R3|195-26
91108|code|STR             R3, [R4,#4]|99-96
91110|code|CMP             R3, #0|0-43
91112|code|RSB.W           R1, R1, R2|193-235-2-1
91116|code|STR             R1, [R4]|33-96
91118|code|BGE             loc_16382|200-218
91120|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
91124|code|SUBS            R1, #1|1-57
91126|code|ADD.W           R3, R3, #0x240|3-245-16-115
91130|code|STM.W           R4, {R1,R3}|132-232-10-0
91134|code|B               loc_16382|192-231
91136|code|ADD.W           R3, R3, #0xF4000|3-245-116-35
91140|code|SUBS            R1, #1|1-57
91142|code|ADD.W           R3, R3, #0x240|3-245-16-115
91146|code|B               loc_163DE|232-231
91148|code|MOVS            R0, #1|1-32
91150|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|6-73
91152|code|BL              sub_12AC4|252-247-88-251
91156|code|B               loc_163CE|219-231
91158|code|MOVS            R0, #1|1-32
91160|code|LDR             R1, =aGettimeofday_0; "gettimeofday"|3-73
91162|code|BL              sub_12AC4|252-247-83-251
91166|code|MOV             R4, SP|108-70
91168|code|B               loc_16376|169-231
91170|data|ALIGN 4|0-191
91172|data|DCD aSelectPoll; "select/poll"|248-194-1-0
91176|data|DCD aGettimeofday_0; "gettimeofday"|140-141-1-0
91180|code|PUSH            {R4,LR}|16-181
91182|code|MOVS            R0, #0x10|16-32
91184|code|BL              sub_16730|0-240-126-249
91188|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
91196|code|MOV             R4, R0|4-70
91198|code|LDR             R0, [R0,#8]|128-104
91200|code|STR             R3, [R4]|35-96
91202|code|ADDS            R0, #0x10|16-48
91204|code|STR             R0, [R4,#8]|160-96
91206|code|LSLS            R0, R0, #3|192-0
91208|code|BL              sub_16730|0-240-114-249
91212|code|MOVS            R3, #0|0-35
91214|code|STR             R3, [R4,#4]|99-96
91216|code|STR             R0, [R4,#0xC]|224-96
91218|code|MOV             R0, R4|32-70
91220|code|POP             {R4,PC}|16-189
91222|data|ALIGN 4|0-191
91224|code|LDR             R2, [R0]|2-104
91226|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
91234|code|CMP             R2, R3|154-66
91236|code|PUSH            {R4,LR}|16-181
91238|code|MOV             R4, R0|4-70
91240|code|BNE             loc_16480|10-209
91242|code|LDR             R0, [R0,#0xC]|192-104
91244|code|MOVS            R3, #0|0-35
91246|code|STR             R3, [R4]|35-96
91248|code|CBZ             R0, loc_16476|8-177
91250|code|BL              sub_1687C|0-240-3-250
91254|code|MOV             R0, R4|32-70
91256|code|POP.W           {R4,LR}|189-232-16-64
91260|code|B.W             sub_1687C|0-240-254-185
91264|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|2-72
91266|code|MOVS            R2, #0xBC; line|188-34
91268|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
91270|code|LDR             R3, =aXpollfdDestroy; "xpollfd_destroy"|3-75
91272|code|BLX             __assert_fail|243-247-102-236
91276|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|4-195-1-0
91280|data|DCD aXpollC; "xpoll.c"|32-195-1-0
91284|data|DCD aXpollfdDestroy; "xpollfd_destroy"|176-194-1-0
91288|code|LDR             R2, [R0]|2-104
91290|code|PUSH            {R3,LR}|8-181
91292|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
91300|code|CMP             R2, R3|154-66
91302|code|BNE             loc_164AE|2-209
91304|code|MOVS            R3, #0|0-35
91306|code|STR             R3, [R0,#4]|67-96
91308|code|POP             {R3,PC}|8-189
91310|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
91312|code|MOVS            R2, #0xC8; line|200-34
91314|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
91316|code|LDR             R3, =aXpollfdZero; "xpollfd_zero"|3-75
91318|code|BLX             __assert_fail|243-247-80-236
91322|data|ALIGN 4|0-191
91324|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|4-195-1-0
91328|data|DCD aXpollC; "xpoll.c"|32-195-1-0
91332|data|DCD aXpollfdZero; "xpollfd_zero"|192-194-1-0
91336|code|PUSH.W          {R4-R8,LR}|45-233-240-65
91340|code|MOV             R4, R0|4-70
91342|code|LDR             R0, [R0]|0-104
91344|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
91352|code|MOV             R5, R1|13-70
91354|code|CMP             R0, R3|152-66
91356|code|MOV             R7, R2|23-70
91358|code|BNE             loc_165B6|106-209
91360|code|LDR             R6, [R4,#4]|102-104
91362|code|LDR             R0, [R4,#0xC]|224-104
91364|code|CMP             R6, #0|0-46
91366|code|BEQ             loc_165B2|100-208
91368|code|LDR             R3, [R0]|3-104
91370|code|MOV             R12, R0|132-70
91372|code|CMP             R3, R1|139-66
91374|code|BEQ             loc_16518|19-208
91376|code|ADD.W           R2, R0, #8|0-241-8-2
91380|code|MOVS            R3, #0|0-35
91382|code|B               loc_16502|4-224
91384|code|MOV             R12, R2|148-70
91386|code|LDR.W           R1, [R2],#8|82-248-8-27
91390|code|CMP             R1, R5|169-66
91392|code|BEQ             loc_1651C|12-208
91394|code|ADDS            R3, #1|1-51
91396|code|CMP             R3, R6|179-66
91398|code|MOV             R8, R3|152-70
91400|code|BNE             loc_164F8|246-209
91402|code|CMP             R6, R8|70-69
91404|code|IT EQ|8-191
91406|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
91410|code|BEQ             loc_16560|37-208
91412|code|POP.W           {R4-R8,PC}|189-232-240-129
91416|code|MOV.W           R8, #0|79-240-0-8
91420|code|UXTH            R3, R7|187-178
91422|code|LDRH.W          R1, [R12,#4]|188-248-4-16
91426|code|AND.W           R2, R3, #1|3-240-1-2
91430|code|TST.W           R3, #2|19-240-2-15
91434|code|ITT NE|28-191
91436|code|ORRNE.W         R2, R2, #4|66-240-4-2
91440|code|UXTHNE          R2, R2|146-178
91442|code|TST.W           R3, #4|19-240-4-15
91446|code|IT NE|24-191
91448|code|ORRNE.W         R2, R2, #0x10|66-240-16-2
91452|code|TST.W           R3, #8|19-240-8-15
91456|code|IT NE|24-191
91458|code|ORRNE.W         R2, R2, #8|66-240-8-2
91462|code|LSLS            R3, R3, #0x1B|219-6
91464|code|IT MI|72-191
91466|code|ORRMI.W         R2, R2, #0x20|66-240-32-2
91470|code|CMP             R6, R8|70-69
91472|code|ORR.W           R2, R2, R1|66-234-1-2
91476|code|IT EQ|8-191
91478|code|MOVEQ.W         R8, R6,LSL#3|79-234-198-8
91482|code|STRH.W          R2, [R12,#4]|172-248-4-32
91486|code|BNE             locret_16514|217-209
91488|code|LDR             R1, [R4,#8]|161-104
91490|code|ADDS            R6, #1|1-54
91492|code|STR             R6, [R4,#4]|102-96
91494|code|CMP             R6, R1|142-66
91496|code|BLS             loc_1657C|8-217
91498|code|ADDS            R1, #0x10|16-49
91500|code|STR             R1, [R4,#8]|161-96
91502|code|LSLS            R1, R1, #3|201-0
91504|code|BL              sub_167A0|0-240-22-249
91508|code|LDR             R1, [R4,#8]|161-104
91510|code|CMP             R6, R1|142-66
91512|code|STR             R0, [R4,#0xC]|224-96
91514|code|BHI             loc_1656A|246-216
91516|code|UXTH            R7, R7|191-178
91518|code|STR.W           R5, [R0,R8]|64-248-8-80
91522|code|AND.W           R3, R7, #1|7-240-1-3
91526|code|LSLS            R1, R7, #0x1E|185-7
91528|code|IT MI|72-191
91530|code|ORRMI.W         R3, R3, #4|67-240-4-3
91534|code|ADD             R0, R8|64-68
91536|code|IT MI|72-191
91538|code|UXTHMI          R3, R3|155-178
91540|code|LSLS            R2, R7, #0x1D|122-7
91542|code|IT MI|72-191
91544|code|ORRMI.W         R3, R3, #0x10|67-240-16-3
91548|code|LSLS            R1, R7, #0x1C|57-7
91550|code|IT MI|72-191
91552|code|ORRMI.W         R3, R3, #8|67-240-8-3
91556|code|LSLS            R2, R7, #0x1B|250-6
91558|code|IT MI|72-191
91560|code|ORRMI.W         R3, R3, #0x20|67-240-32-3
91564|code|STRH            R3, [R0,#4]|131-128
91566|code|POP.W           {R4-R8,PC}|189-232-240-129
91570|code|MOV             R8, R6|176-70
91572|code|B               loc_16560|212-231
91574|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
91576|code|MOVS            R2, #0xD9; line|217-34
91578|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
91580|code|LDR             R3, =aXpollfdSet; "xpollfd_set"|3-75
91582|code|BLX             __assert_fail|243-247-204-235
91586|data|ALIGN 4|0-191
91588|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|4-195-1-0
91592|data|DCD aXpollC; "xpoll.c"|32-195-1-0
91596|data|DCD aXpollfdSet; "xpollfd_set"|208-194-1-0
91600|code|PUSH.W          {R3-R11,LR}|45-233-248-79
91604|code|MOV             R4, R0|4-70
91606|code|LDR             R0, [R0]|0-104
91608|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
91616|code|MOV             R5, R1|13-70
91618|code|CMP             R0, R3|152-66
91620|code|MOV             R6, R2|22-70
91622|code|BNE             loc_16672|68-209
91624|code|MOV             R0, R1|8-70
91626|code|MOVS            R1, #0x2E ; '.'|46-33
91628|code|BLX             memset|243-247-4-235
91632|code|LDR             R7, [R4,#4]|103-104
91634|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
91638|code|CMP             R7, #0|0-47
91640|code|BEQ             loc_16654|44-208
91642|code|MOVS            R2, #0|0-34
91644|code|ADD.W           R8, R6, #0xFFFFFFFF|6-241-255-56
91648|code|MOV.W           R12, #0xFFFFFFFF|79-240-255-60
91652|code|MOV.W           R11, #0x4F ; 'O'|79-240-79-11
91656|code|MOV             R3, R2|19-70
91658|code|MOV.W           R10, #0x49 ; 'I'|79-240-73-10
91662|code|MOV.W           R9, #0x45 ; 'E'|79-240-69-9
91666|code|B               loc_16628|9-224
91668|code|STRB.W          R9, [R5,R2]|5-248-2-144
91672|code|LDR             R7, [R4,#4]|103-104
91674|code|CMP             R12, R2|148-69
91676|code|IT LT|184-191
91678|code|MOVLT           R12, R2|148-70
91680|code|ADDS            R3, #1|1-51
91682|code|CMP             R3, R7|187-66
91684|code|MOV             R2, R3|26-70
91686|code|BCS             loc_16650|19-210
91688|code|LDR             R1, [R4,#0xC]|225-104
91690|code|ADD.W           R0, R1, R2,LSL#3|1-235-194-0
91694|code|LDR.W           R2, [R1,R2,LSL#3]|81-248-50-32
91698|code|LDRH            R1, [R0,#6]|193-136
91700|code|CMP             R2, R8|66-69
91702|code|BGE             loc_16620|243-218
91704|code|CMP             R1, #0|0-41
91706|code|BEQ             loc_1661A|238-208
91708|code|UXTH            R1, R1|137-178
91710|code|TST.W           R1, #0x38|17-240-56-15
91714|code|BNE             loc_16614|231-209
91716|code|LSLS            R0, R1, #0x1F|200-7
91718|code|BPL             loc_16666|14-213
91720|code|STRB.W          R10, [R5,R2]|5-248-2-160
91724|code|LDR             R7, [R4,#4]|103-104
91726|code|B               loc_1661A|228-231
91728|code|ADD.W           R7, R12, #1|12-241-1-7
91732|code|CMP             R6, R7|190-66
91734|code|BLE             loc_1667E|18-221
91736|code|ADD             R12, R5|172-68
91738|code|MOVS            R3, #0|0-35
91740|code|MOV             R0, R5|40-70
91742|code|STRB.W          R3, [R12,#1]|140-248-1-48
91746|code|POP.W           {R3-R11,PC}|189-232-248-143
91750|code|LSLS            R1, R1, #0x1D|73-7
91752|code|ITT MI|68-191
91754|code|STRBMI.W        R11, [R5,R2]|5-248-2-176
91758|code|LDRMI           R7, [R4,#4]|103-104
91760|code|B               loc_1661A|211-231
91762|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|6-72
91764|code|MOVS            R2, #0xF7|247-34
91766|code|LDR             R1, =aXpollC; "xpoll.c"|6-73
91768|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|6-75
91770|code|BLX             __assert_fail|243-247-110-235
91774|code|LDR             R0, =aMaxfd1Len; "maxfd + 1 < len"|6-72
91776|code|MOVW            R2, #0x10B|64-242-11-18
91780|code|LDR             R1, =aXpollC; "xpoll.c"|2-73
91782|code|LDR             R3, =aXpollfdStr; "xpollfd_str"|3-75
91784|code|BLX             __assert_fail|243-247-102-235
91788|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|4-195-1-0
91792|data|DCD aXpollC; "xpoll.c"|32-195-1-0
91796|data|DCD aXpollfdStr; "xpollfd_str"|220-194-1-0
91800|data|DCD aMaxfd1Len; "maxfd + 1 < len"|40-195-1-0
91804|code|LDR             R2, [R0]|2-104
91806|code|MOV             R3, #0x56452334|66-242-52-51-197-242-69-99
91814|code|CMP             R2, R3|154-66
91816|code|PUSH            {R4-R6,LR}|112-181
91818|code|BNE             loc_16708|45-209
91820|code|LDR             R6, [R0,#4]|70-104
91822|code|CBZ             R6, loc_166D2|134-177
91824|code|LDR             R5, [R0,#0xC]|197-104
91826|code|LDR             R3, [R5]|43-104
91828|code|CMP             R3, R1|139-66
91830|code|BEQ             loc_166D6|14-208
91832|code|ADD.W           R2, R5, #8|5-241-8-2
91836|code|MOVS            R3, #0|0-35
91838|code|B               loc_166CA|4-224
91840|code|MOV             R5, R2|21-70
91842|code|LDR.W           R4, [R2],#8|82-248-8-75
91846|code|CMP             R4, R1|140-66
91848|code|BEQ             loc_166D6|5-208
91850|code|ADDS            R3, #1|1-51
91852|code|CMP             R3, R6|179-66
91854|code|BNE             loc_166C0|247-209
91856|code|MOVS            R6, #0|0-38
91858|code|SXTH            R0, R6|48-178
91860|code|POP             {R4-R6,PC}|112-189
91862|code|LDRH            R3, [R5,#6]|235-136
91864|code|AND.W           R6, R3, #1|3-240-1-6
91868|code|LSLS            R0, R3, #0x1D|88-7
91870|code|ITT MI|68-191
91872|code|ORRMI.W         R6, R6, #2|70-240-2-6
91876|code|UXTHMI          R6, R6|182-178
91878|code|LSLS            R1, R3, #0x1B|217-6
91880|code|ITT MI|68-191
91882|code|ORRMI.W         R6, R6, #4|70-240-4-6
91886|code|UXTHMI          R6, R6|182-178
91888|code|LSLS            R2, R3, #0x1C|26-7
91890|code|ITT MI|68-191
91892|code|ORRMI.W         R6, R6, #8|70-240-8-6
91896|code|UXTHMI          R6, R6|182-178
91898|code|LSLS            R3, R3, #0x1A|155-6
91900|code|ITT MI|68-191
91902|code|ORRMI.W         R6, R6, #0x10|70-240-16-6
91906|code|UXTHMI          R6, R6|182-178
91908|code|SXTH            R0, R6|48-178
91910|code|POP             {R4-R6,PC}|112-189
91912|code|LDR             R0, =aPfdMagic0x5645; "pfd->magic == 0x56452334"|3-72
91914|code|MOVW            R2, #0x123; line|64-242-35-18
91918|code|LDR             R1, =aXpollC; "xpoll.c"|3-73
91920|code|LDR             R3, =aXpollfdRevents; "xpollfd_revents"|3-75
91922|code|BLX             __assert_fail|243-247-34-235
91926|data|ALIGN 4|0-191
91928|data|DCD aPfdMagic0x5645; "pfd->magic == 0x56452334"|4-195-1-0
91932|data|DCD aXpollC; "xpoll.c"|32-195-1-0
91936|data|DCD aXpollfdRevents; "xpollfd_revents"|232-194-1-0
91940|code|MOV             R3, #0x56BA4|70-246-164-51-192-242-5-3
91948|code|LDR             R0, [R3]|24-104
91950|code|BX              LR|112-71
91952|code|CMP             R0, #0|0-40
91954|code|PUSH            {R3-R7,LR}|248-181
91956|code|MOV             R4, R0|4-70
91958|code|BLE             loc_16780|35-221
91960|code|ADD.W           R0, R0, #0x18; size|0-241-24-0
91964|code|BLX             malloc|243-247-196-233
91968|code|MOV             R5, R0|5-70
91970|code|CBZ             R0, loc_16778|200-177
91972|code|LDR             R3, =dword_56BA4|17-75
91974|code|ADD.W           R6, R5, #8|5-241-8-6
91978|code|MOVS            R1, #0; c|0-33
91980|code|MOV             R2, R4; n|34-70
91982|code|MOV             R0, R6; s|48-70
91984|code|STR             R4, [R5,#4]|108-96
91986|code|LDR.W           LR, [R3]|211-248-0-224
91990|code|MOV             R7, #0xF00FBAAB|75-246-171-39-207-242-15-7
91998|code|STR             R7, [R5]|47-96
92000|code|ADD             LR, R4|166-68
92002|code|STR.W           LR, [R3]|195-248-0-224
92006|code|BLX             memset|243-247-72-234
92010|code|ADDS            R0, R6, R4; s|48-25
92012|code|MOVS            R1, #0x55 ; 'U'; c|85-33
92014|code|MOVS            R2, #0x10; n|16-34
92016|code|BLX             memset|243-247-66-234
92020|code|MOV             R0, R6|48-70
92022|code|POP             {R3-R7,PC}|248-189
92024|code|LDR             R1, =aOutOfMemory; "out of memory"|5-73
92026|code|BL              sub_12AC4|252-247-163-249
92030|code|B               loc_16744|225-231
92032|code|LDR             R0, =aSize0; "size > 0"|4-72
92034|code|MOVS            R2, #0x46 ; 'F'; line|70-34
92036|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
92038|code|LDR             R3, =aXmalloc; "xmalloc"|5-75
92040|code|BLX             __assert_fail|243-247-230-234
92044|data|DCD dword_56BA4|164-107-5-0
92048|data|DCD aOutOfMemory; "out of memory"|200-184-1-0
92052|data|DCD aSize0; "size > 0"|8-125-1-0
92056|data|DCD aXmallocC; "xmalloc.c"|84-195-1-0
92060|data|DCD aXmalloc; "xmalloc"|56-195-1-0
92064|code|PUSH            {R4-R6,LR}|112-181
92066|code|MOV             R4, R1|12-70
92068|code|CMP             R0, #0|0-40
92070|code|BEQ             loc_1682A|64-208
92072|code|CMP             R1, #0|0-41
92074|code|BLE             loc_1684E|80-221
92076|code|LDR.W           R2, [R0,#-8]|80-248-8-44
92080|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
92088|code|CMP             R2, R3|154-66
92090|code|BNE             loc_16836|60-209
92092|code|LDR.W           R6, [R0,#-4]|80-248-4-108
92096|code|MOVS            R3, #0xF|15-35
92098|code|ADDS            R1, R0, R6|129-25
92100|code|LDRB            R2, [R1,R3]|202-92
92102|code|CMP             R2, #0x55 ; 'U'|85-42
92104|code|BNE             loc_16814|36-209
92106|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
92110|code|BCS             loc_167C4|249-210
92112|code|SUBS            R0, #8; ptr|8-56
92114|code|ADD.W           R1, R4, #0x18; size|4-241-24-1
92118|code|BLX             realloc|243-247-12-233
92122|code|MOV             R5, R0|5-70
92124|code|CBZ             R0, loc_16820|0-179
92126|code|LDR             R2, [R5]|42-104
92128|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
92136|code|CMP             R2, R3|154-66
92138|code|BNE             loc_16842|42-209
92140|code|LDR             R3, =dword_56BA4|27-75
92142|code|SUBS            R2, R4, R6; n|162-27
92144|code|STR             R4, [R5,#4]|108-96
92146|code|ADDS            R5, #8|8-53
92148|code|CMP             R4, R6|180-66
92150|code|LDR             R1, [R3]|25-104
92152|code|ADD             R1, R2|17-68
92154|code|STR             R1, [R3]|25-96
92156|code|BLE             loc_16806|3-221
92158|code|ADDS            R0, R5, R6; s|168-25
92160|code|MOVS            R1, #0; c|0-33
92162|code|BLX             memset|243-247-250-233
92166|code|ADDS            R0, R5, R4; s|40-25
92168|code|MOVS            R1, #0x55 ; 'U'; c|85-33
92170|code|MOVS            R2, #0x10; n|16-34
92172|code|BLX             memset|243-247-244-233
92176|code|MOV             R0, R5|40-70
92178|code|POP             {R4-R6,PC}|112-189
92180|code|LDR             R0, =aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|18-72
92182|code|MOVS            R2, #0x60 ; '`'; line|96-34
92184|code|LDR             R1, =aXmallocC; "xmalloc.c"|18-73
92186|code|LDR             R3, =aXrealloc; "xrealloc"|19-75
92188|code|BLX             __assert_fail|243-247-156-234
92192|code|MOV             R0, R5|40-70
92194|code|LDR             R1, =aOutOfMemory; "out of memory"|18-73
92196|code|BL              sub_12AC4|252-247-78-249
92200|code|B               loc_167DE|217-231
92202|code|LDR             R0, =aItemVoid0; "item != ((void *)0)"|17-72
92204|code|MOVS            R2, #0x5C ; '\'; line|92-34
92206|code|LDR             R1, =aXmallocC; "xmalloc.c"|13-73
92208|code|LDR             R3, =aXrealloc; "xrealloc"|13-75
92210|code|BLX             __assert_fail|243-247-146-234
92214|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|15-72
92216|code|MOVS            R2, #0x5E ; '^'; line|94-34
92218|code|LDR             R1, =aXmallocC; "xmalloc.c"|10-73
92220|code|LDR             R3, =aXrealloc; "xrealloc"|10-75
92222|code|BLX             __assert_fail|243-247-140-234
92226|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|12-72
92228|code|MOVS            R2, #0x64 ; 'd'; line|100-34
92230|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
92232|code|LDR             R3, =aXrealloc; "xrealloc"|7-75
92234|code|BLX             __assert_fail|243-247-134-234
92238|code|LDR             R0, =aNewsize0; "newsize > 0"|10-72
92240|code|MOVS            R2, #0x5D ; ']'; line|93-34
92242|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
92244|code|LDR             R3, =aXrealloc; "xrealloc"|4-75
92246|code|BLX             __assert_fail|243-247-128-234
92250|data|ALIGN 4|0-191
92252|data|DCD dword_56BA4|164-107-5-0
92256|data|DCD aCheckfillItemO; "_checkfill(item + oldsize, 0x55, 16)"|148-195-1-0
92260|data|DCD aXmallocC; "xmalloc.c"|84-195-1-0
92264|data|DCD aXrealloc; "xrealloc"|64-195-1-0
92268|data|DCD aOutOfMemory; "out of memory"|200-184-1-0
92272|data|DCD aItemVoid0; "item != ((void *)0)"|96-195-1-0
92276|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|128-195-1-0
92280|data|DCD aNewsize0; "newsize > 0"|116-195-1-0
92284|code|PUSH            {R3-R5,LR}|56-181
92286|code|CMP             R0, #0|0-40
92288|code|BEQ             locret_168C8|34-208
92290|code|LDR.W           R2, [R0,#-8]|80-248-8-44
92294|code|MOV             R3, #0xF00FBAAB|75-246-171-35-207-242-15-3
92302|code|CMP             R2, R3|154-66
92304|code|BNE             loc_168D6|33-209
92306|code|LDR.W           R4, [R0,#-4]|80-248-4-76
92310|code|MOVS            R3, #0xF|15-35
92312|code|ADDS            R1, R0, R4|1-25
92314|code|LDRB            R2, [R1,R3]|202-92
92316|code|CMP             R2, #0x55 ; 'U'|85-42
92318|code|BNE             loc_168CA|20-209
92320|code|ADDS.W          R3, R3, #0xFFFFFFFF|19-241-255-51
92324|code|BCS             loc_1689A|249-210
92326|code|SUB.W           R5, R0, #8|160-241-8-5
92330|code|ADD.W           R2, R4, #0x18; n|4-241-24-2
92334|code|MOVS            R1, #0; c|0-33
92336|code|MOV             R0, R5; s|40-70
92338|code|BLX             memset|243-247-162-233
92342|code|LDR             R3, =dword_56BA4|11-75
92344|code|MOV             R0, R5|40-70
92346|code|LDR             R2, [R3]|26-104
92348|code|SUBS            R4, R2, R4|20-27
92350|code|STR             R4, [R3]|28-96
92352|code|POP.W           {R3-R5,LR}|189-232-56-64
92356|code|B.W             j_free|243-247-80-184
92360|code|POP             {R3-R5,PC}|56-189
92362|code|LDR             R0, =aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|7-72
92364|code|MOVS            R2, #0x78 ; 'x'; line|120-34
92366|code|LDR             R1, =aXmallocC; "xmalloc.c"|7-73
92368|code|LDR             R3, =aXfree; "xfree"|7-75
92370|code|BLX             __assert_fail|243-247-66-234
92374|code|LDR             R0, =aP00xf00fbaab; "p[0] == 0xf00fbaab"|7-72
92376|code|MOVS            R2, #0x76 ; 'v'; line|118-34
92378|code|LDR             R1, =aXmallocC; "xmalloc.c"|4-73
92380|code|LDR             R3, =aXfree; "xfree"|4-75
92382|code|BLX             __assert_fail|243-247-60-234
92386|data|ALIGN 4|0-191
92388|data|DCD dword_56BA4|164-107-5-0
92392|data|DCD aCheckfillCharP; "_checkfill((char*)ptr + size, 0x55, 16)"|188-195-1-0
92396|data|DCD aXmallocC; "xmalloc.c"|84-195-1-0
92400|data|DCD aXfree; "xfree"|76-195-1-0
92404|data|DCD aP00xf00fbaab; "p[0] == 0xf00fbaab"|128-195-1-0
92408|code|PUSH            {R3-R5,LR}|56-181
92410|code|MOV             R5, R0|5-70
92412|code|BLX             strlen|243-247-40-233
92416|code|ADDS            R0, #1|1-48
92418|code|BL              sub_16730|255-247-21-255
92422|code|MOV             R1, R5; src|41-70
92424|code|MOV             R4, R0|4-70
92426|code|BLX             strcpy|243-247-198-232
92430|code|MOV             R0, R4|32-70
92432|code|POP             {R3-R5,PC}|56-189
92434|data|ALIGN 4|0-191
92436|code|PUSH.W          {R4-R11,LR}|45-233-240-79
92440|code|MOV             R5, R0|5-70
92442|code|SUB             SP, SP, #0xC|131-176
92444|code|MOV             R0, R2; s|16-70
92446|code|MOV             R8, R3|152-70
92448|code|MOV             R10, R2|146-70
92450|code|MOV             R9, R1|137-70
92452|code|BLX             strlen|243-247-20-233
92456|code|MOV             R7, R0|7-70
92458|code|MOV             R0, R8; s|64-70
92460|code|BLX             strlen|243-247-16-233
92464|code|RSB.W           R11, R7, R0|199-235-0-11
92468|code|MOV             R6, R0|6-70
92470|code|ADD.W           R11, R11, #1|11-241-1-11
92474|code|B               loc_16968|21-224
92476|code|MOV             R0, R5; s|40-70
92478|code|BLX             strlen|243-247-8-233
92482|code|ADD             R0, R11|88-68
92484|code|CMP             R0, R9|72-69
92486|code|BHI             loc_1697C|25-216
92488|code|ADDS            R1, R4, R7|225-25
92490|code|STR             R1, [SP,#0x30+src]|1-145
92492|code|MOV             R0, R1; s|8-70
92494|code|BLX             strlen|243-247-0-233
92498|code|ADDS            R3, R4, R6|163-25
92500|code|LDR             R1, [SP,#0x30+src]; src|1-153
92502|code|ADDS            R2, R0, #1; n|66-28
92504|code|MOV             R0, R3; dest|24-70
92506|code|BLX             memmove|243-247-0-232
92510|code|MOV             R0, R4; dest|32-70
92512|code|MOV             R1, R8; src|65-70
92514|code|MOV             R2, R6; n|50-70
92516|code|BLX             memcpy|243-247-26-232
92520|code|MOV             R0, R5; haystack|40-70
92522|code|MOV             R1, R10; needle|81-70
92524|code|BLX             strstr|242-247-180-239
92528|code|MOV             R4, R0|4-70
92530|code|CMP             R0, #0|0-40
92532|code|BNE             loc_1693C|226-209
92534|code|ADD             SP, SP, #0xC|3-176
92536|code|POP.W           {R4-R11,PC}|189-232-240-143
92540|code|LDR             R0, =aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|2-72
92542|code|MOVS            R2, #0x5C ; '\'; line|92-34
92544|code|LDR             R1, =aXregexC; "xregex.c"|2-73
92546|code|LDR             R3, =aStrSubst; "_str_subst"|3-75
92548|code|BLX             __assert_fail|243-247-232-233
92552|data|DCD aStrlenS1S3lenS; "strlen(s1) + (s3len - s2len) + 1 <= len"|116-196-1-0
92556|data|DCD aXregexC; "xregex.c"|156-196-1-0
92560|data|DCD aStrSubst; "_str_subst"|228-195-1-0
92564|code|PUSH            {R3,LR}|8-181
92566|code|MOVS            R0, #0xC|12-32
92568|code|BL              sub_16730|255-247-202-254
92572|code|MOVS            R2, #0|0-34
92574|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
92582|code|STR             R2, [R0,#8]|130-96
92584|code|STR             R3, [R0]|3-96
92586|code|POP             {R3,PC}|8-189
92588|code|LDR             R2, [R0]|2-104
92590|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
92598|code|CMP             R2, R3|154-66
92600|code|PUSH            {R4,LR}|16-181
92602|code|MOV             R4, R0|4-70
92604|code|BNE             loc_169DA|13-209
92606|code|LDR             R0, [R0,#8]; preg|128-104
92608|code|CBZ             R0, loc_169CC|32-177
92610|code|BLX             regfree|243-247-88-232
92614|code|LDR             R0, [R4,#8]|160-104
92616|code|BL              sub_1687C|255-247-88-255
92620|code|MOVS            R3, #0|0-35
92622|code|MOV             R0, R4|32-70
92624|code|STR             R3, [R4]|35-96
92626|code|POP.W           {R4,LR}|189-232-16-64
92630|code|B.W             sub_1687C|255-247-81-191
92634|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|3-72
92636|code|MOVS            R2, #0x48 ; 'H'; line|72-34
92638|code|LDR             R1, =aXregexC; "xregex.c"|3-73
92640|code|LDR             R3, =aXregexDestroy; "xregex_destroy"|3-75
92642|code|BLX             __assert_fail|243-247-186-233
92646|data|ALIGN 4|0-191
92648|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|168-196-1-0
92652|data|DCD aXregexC; "xregex.c"|156-196-1-0
92656|data|DCD aXregexDestroy; "xregex_destroy"|240-195-1-0
92660|code|PUSH.W          {R4-R8,LR}|45-233-240-65
92664|code|SUB             SP, SP, #0x108|194-176
92666|code|LDR             R6, =__stack_chk_guard|56-78
92668|code|MOV             R4, R0|4-70
92670|code|MOV             R5, R1|13-70
92672|code|MOV             R7, R2|23-70
92674|code|LDR             R3, [R6]|51-104
92676|code|STR             R3, [SP,#0x120+var_1C]|65-147
92678|code|CMP             R1, #0|0-41
92680|code|BEQ             loc_16ACE|97-208
92682|code|LDR             R2, [R0]|2-104
92684|code|MOV             R3, #0x3456AAAA|74-246-170-35-195-242-86-67
92692|code|CMP             R2, R3|154-66
92694|code|BNE             loc_16AC2|84-209
92696|code|LDR.W           R8, [R0,#8]|208-248-8-128
92700|code|CMP.W           R8, #0|184-241-0-15
92704|code|BNE             loc_16AB6|73-209
92706|code|MOV             R0, R1; s|8-70
92708|code|BLX             strlen|243-247-148-232
92712|code|CMP.W           R0, #0x100|176-245-128-127
92716|code|BHI             loc_16AA8|60-216
92718|code|MOVS            R0, #0x20 ; ' '|32-32
92720|code|BL              sub_16730|255-247-126-254
92724|code|MOVS            R3, #1|1-35
92726|code|STR             R3, [R4,#4]|99-96
92728|code|STR             R0, [R4,#8]|160-96
92730|code|CMP             R7, #0|0-47
92732|code|BEQ             loc_16AA2|49-208
92734|code|MOV             R0, R5|40-70
92736|code|BL              sub_168F8|255-247-90-255
92740|code|MOV             R5, R0|5-70
92742|code|BLX             strlen|243-247-132-232
92746|code|LDR             R2, =aR; "\\r"|37-74
92748|code|LDR             R3, =asc_1C50C; "\r"|37-75
92750|code|ADDS            R1, R0, #1|65-28
92752|code|MOV             R0, R5|40-70
92754|code|BL              sub_16914|255-247-95-255
92758|code|MOV             R0, R5; s|40-70
92760|code|BLX             strlen|243-247-122-232
92764|code|LDR             R3, =(a201UnknownComm+0x14); "\n"|34-75
92766|code|LDR             R2, =aN; "\\n"|35-74
92768|code|ADDS            R1, R0, #1|65-28
92770|code|MOV             R0, R5|40-70
92772|code|BL              sub_16914|255-247-86-255
92776|code|LDR             R0, [R4,#8]; preg|160-104
92778|code|LDR             R2, [R4,#4]; cflags|98-104
92780|code|MOV             R1, R5; pattern|41-70
92782|code|BLX             regcomp|243-247-44-233
92786|code|MOV             R7, R0|7-70
92788|code|MOV             R0, R5|40-70
92790|code|BL              sub_1687C|255-247-1-255
92794|code|CBZ             R7, loc_16A94|95-177
92796|code|LDR             R1, [R4,#8]; preg|161-104
92798|code|ADD             R2, SP, #0x120+errbuf; errbuf|1-170
92800|code|MOV             R0, R7; errcode|56-70
92802|code|MOV.W           R3, #0x100; errbuf_size|79-244-128-115
92806|code|BLX             regerror|242-247-88-239
92810|code|MOVS            R0, #0|0-32
92812|code|LDR             R1, =aRegcompFailedS; "regcomp failed: %s"|24-73
92814|code|ADD             R2, SP, #0x120+errbuf|1-170
92816|code|BL              sub_12AC4|252-247-24-248
92820|code|LDR             R2, [SP,#0x120+var_1C]|65-154
92822|code|LDR             R3, [R6]|51-104
92824|code|CMP             R2, R3|154-66
92826|code|BNE             loc_16AB2|10-209
92828|code|ADD             SP, SP, #0x108|66-176
92830|code|POP.W           {R4-R8,PC}|189-232-240-129
92834|code|MOVS            R3, #9|9-35
92836|code|STR             R3, [R4,#4]|99-96
92838|code|B               loc_16A3E|202-231
92840|code|MOV             R0, R8|64-70
92842|code|LDR             R1, =aRefusingToComp; "refusing to compile regex > 256 bytes"|18-73
92844|code|BL              sub_12AC4|252-247-10-248
92848|code|B               loc_16A2E|189-231
92850|code|BLX             __stack_chk_fail|242-247-146-239
92854|code|LDR             R0, =aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|16-72
92856|code|MOVS            R2, #0x6B ; 'k'; line|107-34
92858|code|LDR             R1, =aXregexC; "xregex.c"|16-73
92860|code|LDR             R3, =aXregexCompile; "xregex_compile"|16-75
92862|code|BLX             __assert_fail|243-247-76-233
92866|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|16-72
92868|code|MOVS            R2, #0x6A ; 'j'; line|106-34
92870|code|LDR             R1, =aXregexC; "xregex.c"|13-73
92872|code|LDR             R3, =aXregexCompile; "xregex_compile"|13-75
92874|code|BLX             __assert_fail|243-247-70-233
92878|code|LDR             R0, =unk_1C52C; assertion|14-72
92880|code|MOVS            R2, #0x69 ; 'i'; line|105-34
92882|code|LDR             R1, =aXregexC; "xregex.c"|10-73
92884|code|LDR             R3, =aXregexCompile; "xregex_compile"|10-75
92886|code|BLX             __assert_fail|243-247-64-233
92890|data|ALIGN 4|0-191
92892|data|DCD __stack_chk_guard|16-74-2-0
92896|data|DCD aR; "\\r"|20-184-1-0
92900|data|DCD asc_1C50C; "\r"|12-197-1-0
92904|data|DCD a201UnknownComm+0x14; "\n"|224-136-1-0
92908|data|DCD aN; "\\n"|24-184-1-0
92912|data|DCD aRegcompFailedS; "regcomp failed: %s"|16-197-1-0
92916|data|DCD aRefusingToComp; "refusing to compile regex > 256 bytes"|228-196-1-0
92920|data|DCD aXrpXrRegexVoid; "xrp->xr_regex == ((void *)0)"|196-196-1-0
92924|data|DCD aXregexC; "xregex.c"|156-196-1-0
92928|data|DCD aXregexCompile; "xregex_compile"|0-196-1-0
92932|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|168-196-1-0
92936|data|DCD unk_1C52C|44-197-1-0
92940|code|PUSH            {R4-R6,LR}|112-181
92942|code|MOVW            R3, #0xAAAA|74-246-170-35
92946|code|LDR             R6, [R0]|6-104
92948|code|MOVT.W          R3, #0x3456|195-242-86-67
92952|code|SUB             SP, SP, #8|130-176
92954|code|MOV             R5, R1|13-70
92956|code|CMP             R6, R3|158-66
92958|code|MOV             R4, R2|20-70
92960|code|BNE             loc_16B80|46-209
92962|code|LDR             R0, [R0,#8]; preg|128-104
92964|code|CMP             R0, #0|0-40
92966|code|BEQ             loc_16B8C|49-208
92968|code|CMP             R2, #0|0-42
92970|code|BEQ             loc_16B72|34-208
92972|code|LDR             R2, [R2]|18-104
92974|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
92982|code|CMP             R2, R3|154-66
92984|code|BNE             loc_16BA4|52-209
92986|code|LDR             R3, [R4,#0x14]|99-105
92988|code|CMP             R3, #0|0-43
92990|code|BNE             loc_16B98|43-209
92992|code|LDR             R3, [R4,#8]; pmatch|163-104
92994|code|MOVS            R6, #2|2-38
92996|code|LDR             R2, [R4,#4]; nmatch|98-104
92998|code|STR             R6, [SP,#0x18+eflags]; eflags|0-150
93000|code|BLX             regexec|242-247-88-239
93004|code|MOVS            R3, #1|1-35
93006|code|STR             R3, [R4,#0x14]|99-97
93008|code|MOV             R6, R0|6-70
93010|code|STR             R0, [R4,#0x10]|32-97
93012|code|CBNZ            R0, loc_16B66|56-185
93014|code|LDR             R0, [R4,#0xC]|224-104
93016|code|CBZ             R0, loc_16B5E|8-177
93018|code|BL              sub_1687C|255-247-143-254
93022|code|MOV             R0, R5|40-70
93024|code|BL              sub_168F8|255-247-202-254
93028|code|STR             R0, [R4,#0xC]|224-96
93030|code|RSBS.W          R0, R6, #1|214-241-1-0
93034|code|IT CC|56-191
93036|code|MOVCC           R0, #0|0-32
93038|code|ADD             SP, SP, #8|2-176
93040|code|POP             {R4-R6,PC}|112-189
93042|code|MOV             R3, R2; pmatch|19-70
93044|code|MOVS            R4, #2|2-36
93046|code|STR             R4, [SP,#0x18+eflags]; eflags|0-148
93048|code|BLX             regexec|242-247-64-239
93052|code|MOV             R6, R0|6-70
93054|code|B               loc_16B66|242-231
93056|code|LDR             R0, =aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|11-72
93058|code|MOVS            R2, #0x8C; line|140-34
93060|code|LDR             R1, =aXregexC; "xregex.c"|11-73
93062|code|LDR             R3, =aXregexExec; "xregex_exec"|12-75
93064|code|BLX             __assert_fail|243-247-230-232
93068|code|LDR             R0, =unk_1C524; assertion|11-72
93070|code|MOVS            R2, #0x8D; line|141-34
93072|code|LDR             R1, =aXregexC; "xregex.c"|8-73
93074|code|LDR             R3, =aXregexExec; "xregex_exec"|9-75
93076|code|BLX             __assert_fail|243-247-224-232
93080|code|LDR             R0, =aXmXmUsedFalse; "xm->xm_used == FALSE"|9-72
93082|code|MOVS            R2, #0x90; line|144-34
93084|code|LDR             R1, =aXregexC; "xregex.c"|5-73
93086|code|LDR             R3, =aXregexExec; "xregex_exec"|6-75
93088|code|BLX             __assert_fail|243-247-218-232
93092|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|7-72
93094|code|MOVS            R2, #0x8F; line|143-34
93096|code|LDR             R1, =aXregexC; "xregex.c"|2-73
93098|code|LDR             R3, =aXregexExec; "xregex_exec"|3-75
93100|code|BLX             __assert_fail|243-247-212-232
93104|data|DCD aXrpXrMagic0x34; "xrp->xr_magic == 0x3456aaaa"|168-196-1-0
93108|data|DCD aXregexC; "xregex.c"|156-196-1-0
93112|data|DCD aXregexExec; "xregex_exec"|16-196-1-0
93116|data|DCD unk_1C524|36-197-1-0
93120|data|DCD aXmXmUsedFalse; "xm->xm_used == FALSE"|96-197-1-0
93124|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|68-197-1-0
93128|code|PUSH            {R3-R5,LR}|56-181
93130|code|MOV             R5, R0|5-70
93132|code|MOVS            R0, #0x18|24-32
93134|code|ADDS            R5, #1|1-53
93136|code|BL              sub_16730|255-247-174-253
93140|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
93148|code|MOV             R4, R0|4-70
93150|code|STR             R5, [R0,#4]|69-96
93152|code|STR             R3, [R4]|35-96
93154|code|LSLS            R0, R5, #3|232-0
93156|code|BL              sub_16730|255-247-164-253
93160|code|MOVS            R3, #0|0-35
93162|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
93166|code|STR             R3, [R4,#0xC]|227-96
93168|code|STR             R2, [R4,#0x10]|34-97
93170|code|STR             R3, [R4,#0x14]|99-97
93172|code|STR             R0, [R4,#8]|160-96
93174|code|MOV             R0, R4|32-70
93176|code|POP             {R3-R5,PC}|56-189
93178|data|ALIGN 4|0-191
93180|code|LDR             R2, [R0]|2-104
93182|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
93190|code|CMP             R2, R3|154-66
93192|code|PUSH            {R4,LR}|16-181
93194|code|MOV             R4, R0|4-70
93196|code|BNE             loc_16C2A|13-209
93198|code|LDR             R0, [R0,#8]|128-104
93200|code|BL              sub_1687C|255-247-52-254
93204|code|LDR             R0, [R4,#0xC]|224-104
93206|code|CBZ             R0, loc_16C1C|8-177
93208|code|BL              sub_1687C|255-247-48-254
93212|code|MOVS            R3, #0|0-35
93214|code|MOV             R0, R4|32-70
93216|code|STR             R3, [R4]|35-96
93218|code|POP.W           {R4,LR}|189-232-16-64
93222|code|B.W             sub_1687C|255-247-41-190
93226|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|3-72
93228|code|MOVS            R2, #0xB3; line|179-34
93230|code|LDR             R1, =aXregexC; "xregex.c"|3-73
93232|code|LDR             R3, =aXregexMatchDes; "xregex_match_destroy"|3-75
93234|code|BLX             __assert_fail|243-247-146-232
93238|data|ALIGN 4|0-191
93240|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|68-197-1-0
93244|data|DCD aXregexC; "xregex.c"|156-196-1-0
93248|data|DCD aXregexMatchDes; "xregex_match_destroy"|28-196-1-0
93252|code|PUSH            {R4,LR}|16-181
93254|code|MOV             R4, R0|4-70
93256|code|LDR             R0, [R0,#0xC]|192-104
93258|code|CBZ             R0, loc_16C54|24-177
93260|code|BL              sub_1687C|255-247-22-254
93264|code|MOVS            R3, #0|0-35
93266|code|STR             R3, [R4,#0xC]|227-96
93268|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
93272|code|STR             R3, [R4,#0x10]|35-97
93274|code|MOVS            R3, #0|0-35
93276|code|STR             R3, [R4,#0x14]|99-97
93278|code|POP             {R4,PC}|16-189
93280|code|LDR             R2, [R0]|2-104
93282|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
93290|code|CMP             R2, R3|154-66
93292|code|PUSH            {R4-R6,LR}|112-181
93294|code|MOV             R4, R0|4-70
93296|code|BNE             loc_16CAE|29-209
93298|code|LDR             R3, [R0,#0x14]|67-105
93300|code|CBZ             R3, loc_16CA2|171-177
93302|code|LDR             R6, [R0,#0x10]|6-105
93304|code|CBNZ            R6, loc_16C9C|134-185
93306|code|LDR             R3, [R0,#8]|131-104
93308|code|LDR             R0, [R3,#4]|88-104
93310|code|ADDS            R0, #1|1-48
93312|code|BL              sub_16730|255-247-86-253
93316|code|LDR             R1, [R4,#0xC]; src|225-104
93318|code|MOV             R5, R0|5-70
93320|code|CBZ             R1, loc_16CBA|185-177
93322|code|LDR             R3, [R4,#8]|163-104
93324|code|LDR             R2, [R3,#4]; n|90-104
93326|code|BLX             memcpy|242-247-134-238
93330|code|LDR             R3, [R4,#8]|163-104
93332|code|MOV             R0, R5|40-70
93334|code|LDR             R3, [R3,#4]|91-104
93336|code|STRB            R6, [R5,R3]|238-84
93338|code|POP             {R4-R6,PC}|112-189
93340|code|MOVS            R5, #0|0-37
93342|code|MOV             R0, R5|40-70
93344|code|POP             {R4-R6,PC}|112-189
93346|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|9-72
93348|code|MOVS            R2, #0xCD; line|205-34
93350|code|LDR             R1, =aXregexC; "xregex.c"|9-73
93352|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|9-75
93354|code|BLX             __assert_fail|243-247-86-232
93358|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|9-72
93360|code|MOVS            R2, #0xCC; line|204-34
93362|code|LDR             R1, =aXregexC; "xregex.c"|6-73
93364|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|6-75
93366|code|BLX             __assert_fail|243-247-80-232
93370|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|7-72
93372|code|MOVS            R2, #0xD1; line|209-34
93374|code|LDR             R1, =aXregexC; "xregex.c"|3-73
93376|code|LDR             R3, =aXregexMatchStr; "xregex_match_strdup"|3-75
93378|code|BLX             __assert_fail|243-247-74-232
93382|data|ALIGN 4|0-191
93384|data|DCD aXmXmUsed; "xm->xm_used"|120-197-1-0
93388|data|DCD aXregexC; "xregex.c"|156-196-1-0
93392|data|DCD aXregexMatchStr; "xregex_match_strdup"|52-196-1-0
93396|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|68-197-1-0
93400|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|132-197-1-0
93404|code|LDR             R2, [R0]|2-104
93406|code|PUSH            {R3,LR}|8-181
93408|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
93416|code|CMP             R2, R3|154-66
93418|code|BNE             loc_16CF6|4-209
93420|code|LDR             R3, [R0,#0x14]|67-105
93422|code|CBZ             R3, loc_16D02|67-177
93424|code|LDR             R3, [R0,#8]|131-104
93426|code|LDR             R0, [R3,#4]|88-104
93428|code|POP             {R3,PC}|8-189
93430|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|6-72
93432|code|MOVS            R2, #0xDB; line|219-34
93434|code|LDR             R1, =aXregexC; "xregex.c"|6-73
93436|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|6-75
93438|code|BLX             __assert_fail|243-247-44-232
93442|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|6-72
93444|code|MOVS            R2, #0xDC; line|220-34
93446|code|LDR             R1, =aXregexC; "xregex.c"|3-73
93448|code|LDR             R3, =aXregexMatchStr_0; "xregex_match_strlen"|3-75
93450|code|BLX             __assert_fail|243-247-38-232
93454|data|ALIGN 0x10|0-191
93456|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|68-197-1-0
93460|data|DCD aXregexC; "xregex.c"|156-196-1-0
93464|data|DCD aXregexMatchStr_0; "xregex_match_strlen"|72-196-1-0
93468|data|DCD aXmXmUsed; "xm->xm_used"|120-197-1-0
93472|code|LDR             R2, [R0]|2-104
93474|code|PUSH            {R3-R7,LR}|248-181
93476|code|MOV             R3, #0x3456AABA|74-246-186-35-195-242-86-67
93484|code|MOV             R6, R0|6-70
93486|code|CMP             R2, R3|154-66
93488|code|BNE             loc_16D8E|45-209
93490|code|LDR             R3, [R0,#0x14]|67-105
93492|code|CMP             R3, #0|0-43
93494|code|BEQ             loc_16D9A|48-208
93496|code|LDR             R4, [R0,#0x10]|4-105
93498|code|RSBS.W          R4, R4, #1|212-241-1-4
93502|code|IT CC|56-191
93504|code|MOVCC           R4, #0|0-36
93506|code|CMP             R1, #0|0-41
93508|code|ITE LT|180-191
93510|code|MOVLT           R4, #0|0-36
93512|code|ANDGE.W         R4, R4, #1|4-240-1-4
93516|code|CBZ             R4, loc_16D84|212-177
93518|code|LDR             R3, [R0,#4]|67-104
93520|code|CMP             R1, R3|153-66
93522|code|BGE             loc_16D88|25-218
93524|code|LDR             R3, [R0,#8]|131-104
93526|code|ADD.W           R2, R3, R1,LSL#3|3-235-193-2
93530|code|LDR.W           R7, [R3,R1,LSL#3]|83-248-49-112
93534|code|ADDS            R3, R7, #1|123-28
93536|code|BEQ             loc_16D88|18-208
93538|code|LDR             R3, [R0,#0xC]|195-104
93540|code|LDR             R5, [R2,#4]|85-104
93542|code|CBZ             R3, loc_16DB2|35-179
93544|code|CMP             R7, R5|175-66
93546|code|BGE             loc_16DA6|28-218
93548|code|SUBS            R5, R5, R7|237-27
93550|code|ADDS            R0, R5, #1|104-28
93552|code|BL              sub_16730|255-247-222-252
93556|code|LDR             R1, [R6,#0xC]|241-104
93558|code|MOV             R2, R5; n|42-70
93560|code|ADDS            R1, R1, R7; src|201-25
93562|code|MOV             R4, R0|4-70
93564|code|BLX             memcpy|242-247-14-238
93568|code|MOVS            R3, #0|0-35
93570|code|STRB            R3, [R4,R5]|99-85
93572|code|MOV             R0, R4|32-70
93574|code|POP             {R3-R7,PC}|248-189
93576|code|MOVS            R4, #0|0-36
93578|code|MOV             R0, R4|32-70
93580|code|POP             {R3-R7,PC}|248-189
93582|code|LDR             R0, =aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|12-72
93584|code|MOVS            R2, #0xE6; line|230-34
93586|code|LDR             R1, =aXregexC; "xregex.c"|12-73
93588|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|12-75
93590|code|BLX             __assert_fail|242-247-224-239
93594|code|LDR             R0, =aXmXmUsed; "xm->xm_used"|12-72
93596|code|MOVS            R2, #0xE7; line|231-34
93598|code|LDR             R1, =aXregexC; "xregex.c"|9-73
93600|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|9-75
93602|code|BLX             __assert_fail|242-247-218-239
93606|code|LDR             R0, =aMRmSoMRmEo; "m.rm_so < m.rm_eo"|10-72
93608|code|MOVS            R2, #0xEE; line|238-34
93610|code|LDR             R1, =aXregexC; "xregex.c"|6-73
93612|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|6-75
93614|code|BLX             __assert_fail|242-247-212-239
93618|code|LDR             R0, =aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|8-72
93620|code|MOVS            R2, #0xED; line|237-34
93622|code|LDR             R1, =aXregexC; "xregex.c"|3-73
93624|code|LDR             R3, =aXregexMatchSub; "xregex_match_sub_strdup"|3-75
93626|code|BLX             __assert_fail|242-247-206-239
93630|data|ALIGN 0x10|0-191
93632|data|DCD aXmXmMagic0x345; "xm->xm_magic == 0x3456aaba"|68-197-1-0
93636|data|DCD aXregexC; "xregex.c"|156-196-1-0
93640|data|DCD aXregexMatchSub; "xregex_match_sub_strdup"|92-196-1-0
93644|data|DCD aXmXmUsed; "xm->xm_used"|120-197-1-0
93648|data|DCD aMRmSoMRmEo; "m.rm_so < m.rm_eo"|160-197-1-0
93652|data|DCD aXmXmStrVoid0; "xm->xm_str != ((void *)0)"|132-197-1-0
93656|code|PUSH            {R3-R5,LR}|56-181
93658|code|MOVS            R1, #3; cmd|3-33
93660|code|MOVS            R2, #0|0-34
93662|code|MOV             R4, R0|4-70
93664|code|BLX             fcntl|242-247-212-238
93668|code|CMP             R0, #0|0-40
93670|code|MOV             R5, R0|5-70
93672|code|BLT             loc_16E08|14-219
93674|code|MOVS            R1, #4; cmd|4-33
93676|code|ORR.W           R2, R5, #0x800|69-244-0-98
93680|code|MOV             R0, R4; fd|32-70
93682|code|BLX             fcntl|242-247-204-238
93686|code|CMP             R0, #0|0-40
93688|code|BLT             loc_16DFC|0-219
93690|code|POP             {R3-R5,PC}|56-189
93692|code|MOVS            R0, #1|1-32
93694|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
93696|code|POP.W           {R3-R5,LR}|189-232-56-64
93700|code|B.W             sub_12AC4|251-247-94-190
93704|code|MOVS            R0, #1|1-32
93706|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
93708|code|BL              sub_12AC4|251-247-90-254
93712|code|B               loc_16DEA|235-231
93714|data|ALIGN 4|0-191
93716|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|208-197-1-0
93720|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|192-197-1-0
93724|code|PUSH            {R3-R5,LR}|56-181
93726|code|MOVS            R1, #3; cmd|3-33
93728|code|MOVS            R2, #0|0-34
93730|code|MOV             R4, R0|4-70
93732|code|BLX             fcntl|242-247-178-238
93736|code|CMP             R0, #0|0-40
93738|code|MOV             R5, R0|5-70
93740|code|BLT             loc_16E4C|14-219
93742|code|MOVS            R1, #4; cmd|4-33
93744|code|BIC.W           R2, R5, #0x800|37-244-0-98
93748|code|MOV             R0, R4; fd|32-70
93750|code|BLX             fcntl|242-247-170-238
93754|code|CMP             R0, #0|0-40
93756|code|BLT             loc_16E40|0-219
93758|code|POP             {R3-R5,PC}|56-189
93760|code|MOVS            R0, #1|1-32
93762|code|LDR             R1, =aFcntlFSetfl; "fcntl F_SETFL"|5-73
93764|code|POP.W           {R3-R5,LR}|189-232-56-64
93768|code|B.W             sub_12AC4|251-247-60-190
93772|code|MOVS            R0, #1|1-32
93774|code|LDR             R1, =aFcntlFGetfl; "fcntl F_GETFL"|3-73
93776|code|BL              sub_12AC4|251-247-56-254
93780|code|B               loc_16E2E|235-231
93782|data|ALIGN 4|0-191
93784|data|DCD aFcntlFSetfl; "fcntl F_SETFL"|208-197-1-0
93788|data|DCD aFcntlFGetfl; "fcntl F_GETFL"|192-197-1-0
93792|code|PUSH            {R4,R5,LR}|48-181
93794|code|SUB             SP, SP, #0x84|161-176
93796|code|LDR             R5, =__stack_chk_guard|53-77
93798|code|ADD             R1, SP, #0x90+termios_p; termios_p|1-169
93800|code|MOV             R4, R0|4-70
93802|code|LDR             R3, [R5]|43-104
93804|code|STR             R3, [SP,#0x90+var_14]|31-147
93806|code|BLX             tcgetattr|242-247-122-239
93810|code|CMP             R0, #0|0-40
93812|code|BLT             loc_16EF2|61-219
93814|code|ADD             R0, SP, #0x90+termios_p; termios_p|1-168
93816|code|BLX             cfmakeraw|242-247-58-237
93820|code|MOVS            R1, #0; optional_actions|0-33
93822|code|MOV             R0, R4; fd|32-70
93824|code|ADD             R2, SP, #0x90+termios_p; termios_p|1-170
93826|code|BLX             tcsetattr|242-247-4-238
93830|code|CMP             R0, #0|0-40
93832|code|BLT             loc_16F0E|65-219
93834|code|MOVS            R2, #0x3C ; '<'; n|60-34
93836|code|MOVS            R1, #0; c|0-33
93838|code|ADD             R0, SP, #0x90+s; s|16-168
93840|code|BLX             memset|242-247-178-238
93844|code|MOV             R0, R4; fd|32-70
93846|code|ADD             R1, SP, #0x90+s; termios_p|16-169
93848|code|BLX             tcgetattr|242-247-100-239
93852|code|CMP             R0, #0|0-40
93854|code|BLT             loc_16F2C|69-219
93856|code|MOVS            R2, #0x20 ; ' '; n|32-34
93858|code|ADD.W           R0, SP, #0x90+termios_p.c_cc; s1|13-241-21-0
93862|code|ADD.W           R1, SP, #0x90+s2; s2|13-241-81-1
93866|code|BLX             memcmp|242-247-138-237
93870|code|CBNZ            R0, loc_16EBC|40-185
93872|code|LDRB.W          R2, [SP,#0x90+termios_p.c_cc+5]|157-248-26-32
93876|code|LDRB.W          R3, [SP,#0x90+var_3A]|157-248-86-48
93880|code|CMP             R2, R3|154-66
93882|code|BEQ             loc_16ED0|9-208
93884|code|MOVS            R0, #0|0-32
93886|code|LDR             R1, =aTcsetattrFaile; "tcsetattr failed"|32-73
93888|code|BL              sub_12AC4|251-247-0-254
93892|code|LDR             R2, [SP,#0x90+var_14]|31-154
93894|code|LDR             R3, [R5]|43-104
93896|code|CMP             R2, R3|154-66
93898|code|BNE             loc_16F36|52-209
93900|code|ADD             SP, SP, #0x84|33-176
93902|code|POP             {R4,R5,PC}|48-189
93904|code|LDR             R3, [SP,#0x90+s]|16-155
93906|code|LDR             R2, [SP,#0x90+termios_p]|1-154
93908|code|CMP             R2, R3|154-66
93910|code|BNE             loc_16EBC|241-209
93912|code|LDR             R3, [SP,#0x90+var_4C]|17-155
93914|code|LDR             R2, [SP,#0x90+termios_p.c_oflag]|2-154
93916|code|CMP             R2, R3|154-66
93918|code|BNE             loc_16EBC|237-209
93920|code|LDR             R3, [SP,#0x90+var_48]|18-155
93922|code|LDR             R2, [SP,#0x90+termios_p.c_cflag]|3-154
93924|code|CMP             R2, R3|154-66
93926|code|BNE             loc_16EBC|233-209
93928|code|LDR             R3, [SP,#0x90+var_44]|19-155
93930|code|LDR             R2, [SP,#0x90+termios_p.c_lflag]|4-154
93932|code|CMP             R2, R3|154-66
93934|code|BNE             loc_16EBC|229-209
93936|code|B               loc_16EC4|232-231
93938|code|MOVS            R0, #1|1-32
93940|code|LDR             R1, =aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|19-73
93942|code|BL              sub_12AC4|251-247-229-253
93946|code|ADD             R0, SP, #0x90+termios_p; termios_p|1-168
93948|code|BLX             cfmakeraw|242-247-248-236
93952|code|MOVS            R1, #0; optional_actions|0-33
93954|code|MOV             R0, R4; fd|32-70
93956|code|ADD             R2, SP, #0x90+termios_p; termios_p|1-170
93958|code|BLX             tcsetattr|242-247-194-237
93962|code|CMP             R0, #0|0-40
93964|code|BGE             loc_16E8A|189-218
93966|code|MOVS            R0, #1|1-32
93968|code|LDR             R1, =aTcsetattr_0; "tcsetattr"|13-73
93970|code|BL              sub_12AC4|251-247-215-253
93974|code|MOVS            R2, #0x3C ; '<'; n|60-34
93976|code|MOVS            R1, #0; c|0-33
93978|code|ADD             R0, SP, #0x90+s; s|16-168
93980|code|BLX             memset|242-247-108-238
93984|code|MOV             R0, R4; fd|32-70
93986|code|ADD             R1, SP, #0x90+s; termios_p|16-169
93988|code|BLX             tcgetattr|242-247-30-239
93992|code|CMP             R0, #0|0-40
93994|code|BGE             loc_16EA0|185-218
93996|code|MOVS            R0, #1|1-32
93998|code|LDR             R1, =(aXcfmakerawTcge+0xC); "tcgetattr"|7-73
94000|code|BL              sub_12AC4|251-247-200-253
94004|code|B               loc_16EA0|180-231
94006|code|BLX             __stack_chk_fail|242-247-80-237
94010|data|ALIGN 4|0-191
94012|data|DCD __stack_chk_guard|16-74-2-0
94016|data|DCD aTcsetattrFaile; "tcsetattr failed"|4-198-1-0
94020|data|DCD aXcfmakerawTcge; "xcfmakeraw: tcgetattr"|224-197-1-0
94024|data|DCD aTcsetattr_0; "tcsetattr"|248-197-1-0
94028|data|DCD aXcfmakerawTcge+0xC; "tcgetattr"|236-197-1-0
94032|code|PUSH            {R4-R6,LR}|112-181
94034|code|MOV             R5, R2|21-70
94036|code|MOVS            R2, #0; termp|0-34
94038|code|MOV             R4, R1|12-70
94040|code|MOV             R3, R2; winp|19-70
94042|code|BLX             forkpty|242-247-242-238
94046|code|MOVS            R3, R4|35-28
94048|code|IT NE|24-191
94050|code|MOVNE           R3, #1|1-35
94052|code|CMP             R0, #0|0-40
94054|code|ITE LE|212-191
94056|code|MOVLE           R3, #0|0-35
94058|code|ANDGT.W         R3, R3, #1|3-240-1-3
94062|code|MOV             R6, R0|6-70
94064|code|CBZ             R3, loc_16F7C|35-177
94066|code|MOV             R0, R4; s|32-70
94068|code|BLX             strlen|242-247-236-237
94072|code|CMP             R0, R5|168-66
94074|code|BCS             loc_16F80|1-210
94076|code|MOV             R0, R6|48-70
94078|code|POP             {R4-R6,PC}|112-189
94080|code|LDR             R0, =aStrlenNameLen; "strlen(name) < len"|2-72
94082|code|MOVS            R2, #0x88; line|136-34
94084|code|LDR             R1, =aXptyC; "xpty.c"|2-73
94086|code|LDR             R3, =aXforkpty; "xforkpty"|3-75
94088|code|BLX             __assert_fail|242-247-230-238
94092|data|DCD aStrlenNameLen; "strlen(name) < len"|24-198-1-0
94096|data|DCD aXptyC; "xpty.c"|44-198-1-0
94100|data|DCD aXforkpty; "xforkpty"|180-197-1-0
94104|code|PUSH            {R4,LR}|16-181
94106|code|SUB             SP, SP, #0x118|198-176
94108|code|MOV             R4, R0|4-70
94110|code|ADD             R0, SP, #0x120+set; set|1-168
94112|code|STR             R1, [SP,#0x120+var_120]|0-145
94114|code|BLX             sigemptyset|242-247-90-238
94118|code|MOV             R0, R4; sig|32-70
94120|code|MOV             R1, SP; act|105-70
94122|code|ADD             R2, SP, #0x120+var_94; oact|35-170
94124|code|CMP             R4, #0xE|14-44
94126|code|ITE EQ|12-191
94128|code|MOVEQ.W         R4, #0x20000000|79-240-0-84
94132|code|MOVNE.W         R4, #0x10000000|79-240-128-84
94136|code|STR             R4, [SP,#0x120+var_9C]|33-148
94138|code|BLX             sigaction|242-247-68-237
94142|code|CMP             R0, #0|0-40
94144|code|BLT             loc_16FC8|2-219
94146|code|LDR             R0, [SP,#0x120+var_94]|35-152
94148|code|ADD             SP, SP, #0x118|70-176
94150|code|POP             {R4,PC}|16-189
94152|code|MOVS            R0, #1|1-32
94154|code|LDR             R1, =aSigaction_0; "sigaction"|2-73
94156|code|BL              sub_12AC4|251-247-122-253
94160|code|B               loc_16FC2|247-231
94162|data|ALIGN 4|0-191
94164|data|DCD aSigaction_0; "sigaction"|52-198-1-0
94168|code|SUBS            R2, R1, #1|74-30
94170|code|IT EQ|8-191
94172|code|BXEQ            LR|112-71
94174|code|BCC.W           loc_1722A|192-240-36-129
94178|code|CMP             R0, R1|136-66
94180|code|BLS.W           loc_17214|64-242-22-129
94184|code|TST             R1, R2|17-66
94186|code|BEQ.W           loc_1721C|0-240-23-129
94190|code|CLZ.W           R3, R0|176-250-128-243
94194|code|CLZ.W           R2, R1|177-250-129-242
94198|code|SUB.W           R3, R2, R3|162-235-3-3
94202|code|RSB.W           R3, R3, #0x1F|195-241-31-3
94206|code|ADR             R2, loc_17010|4-162
94208|code|ADD.W           R3, R2, R3,LSL#4|2-235-3-19
94212|code|MOV.W           R2, #0|79-240-0-2
94216|code|MOV             PC, R3|159-70
94218|data|ALIGN 4|0-191
94220|code|NOP.W|175-243-0-128
94224|code|CMP.W           R0, R1,LSL#31|176-235-193-127
94228|code|NOP|0-191
94230|code|ADC.W           R2, R2, R2|66-235-2-2
94234|code|IT CS|40-191
94236|code|SUBCS.W         R0, R0, R1,LSL#31|160-235-193-112
94240|code|CMP.W           R0, R1,LSL#30|176-235-129-127
94244|code|NOP|0-191
94246|code|ADC.W           R2, R2, R2|66-235-2-2
94250|code|IT CS|40-191
94252|code|SUBCS.W         R0, R0, R1,LSL#30|160-235-129-112
94256|code|CMP.W           R0, R1,LSL#29|176-235-65-127
94260|code|NOP|0-191
94262|code|ADC.W           R2, R2, R2|66-235-2-2
94266|code|IT CS|40-191
94268|code|SUBCS.W         R0, R0, R1,LSL#29|160-235-65-112
94272|code|CMP.W           R0, R1,LSL#28|176-235-1-127
94276|code|NOP|0-191
94278|code|ADC.W           R2, R2, R2|66-235-2-2
94282|code|IT CS|40-191
94284|code|SUBCS.W         R0, R0, R1,LSL#28|160-235-1-112
94288|code|CMP.W           R0, R1,LSL#27|176-235-193-111
94292|code|NOP|0-191
94294|code|ADC.W           R2, R2, R2|66-235-2-2
94298|code|IT CS|40-191
94300|code|SUBCS.W         R0, R0, R1,LSL#27|160-235-193-96
94304|code|CMP.W           R0, R1,LSL#26|176-235-129-111
94308|code|NOP|0-191
94310|code|ADC.W           R2, R2, R2|66-235-2-2
94314|code|IT CS|40-191
94316|code|SUBCS.W         R0, R0, R1,LSL#26|160-235-129-96
94320|code|CMP.W           R0, R1,LSL#25|176-235-65-111
94324|code|NOP|0-191
94326|code|ADC.W           R2, R2, R2|66-235-2-2
94330|code|IT CS|40-191
94332|code|SUBCS.W         R0, R0, R1,LSL#25|160-235-65-96
94336|code|CMP.W           R0, R1,LSL#24|176-235-1-111
94340|code|NOP|0-191
94342|code|ADC.W           R2, R2, R2|66-235-2-2
94346|code|IT CS|40-191
94348|code|SUBCS.W         R0, R0, R1,LSL#24|160-235-1-96
94352|code|CMP.W           R0, R1,LSL#23|176-235-193-95
94356|code|NOP|0-191
94358|code|ADC.W           R2, R2, R2|66-235-2-2
94362|code|IT CS|40-191
94364|code|SUBCS.W         R0, R0, R1,LSL#23|160-235-193-80
94368|code|CMP.W           R0, R1,LSL#22|176-235-129-95
94372|code|NOP|0-191
94374|code|ADC.W           R2, R2, R2|66-235-2-2
94378|code|IT CS|40-191
94380|code|SUBCS.W         R0, R0, R1,LSL#22|160-235-129-80
94384|code|CMP.W           R0, R1,LSL#21|176-235-65-95
94388|code|NOP|0-191
94390|code|ADC.W           R2, R2, R2|66-235-2-2
94394|code|IT CS|40-191
94396|code|SUBCS.W         R0, R0, R1,LSL#21|160-235-65-80
94400|code|CMP.W           R0, R1,LSL#20|176-235-1-95
94404|code|NOP|0-191
94406|code|ADC.W           R2, R2, R2|66-235-2-2
94410|code|IT CS|40-191
94412|code|SUBCS.W         R0, R0, R1,LSL#20|160-235-1-80
94416|code|CMP.W           R0, R1,LSL#19|176-235-193-79
94420|code|NOP|0-191
94422|code|ADC.W           R2, R2, R2|66-235-2-2
94426|code|IT CS|40-191
94428|code|SUBCS.W         R0, R0, R1,LSL#19|160-235-193-64
94432|code|CMP.W           R0, R1,LSL#18|176-235-129-79
94436|code|NOP|0-191
94438|code|ADC.W           R2, R2, R2|66-235-2-2
94442|code|IT CS|40-191
94444|code|SUBCS.W         R0, R0, R1,LSL#18|160-235-129-64
94448|code|CMP.W           R0, R1,LSL#17|176-235-65-79
94452|code|NOP|0-191
94454|code|ADC.W           R2, R2, R2|66-235-2-2
94458|code|IT CS|40-191
94460|code|SUBCS.W         R0, R0, R1,LSL#17|160-235-65-64
94464|code|CMP.W           R0, R1,LSL#16|176-235-1-79
94468|code|NOP|0-191
94470|code|ADC.W           R2, R2, R2|66-235-2-2
94474|code|IT CS|40-191
94476|code|SUBCS.W         R0, R0, R1,LSL#16|160-235-1-64
94480|code|CMP.W           R0, R1,LSL#15|176-235-193-63
94484|code|NOP|0-191
94486|code|ADC.W           R2, R2, R2|66-235-2-2
94490|code|IT CS|40-191
94492|code|SUBCS.W         R0, R0, R1,LSL#15|160-235-193-48
94496|code|CMP.W           R0, R1,LSL#14|176-235-129-63
94500|code|NOP|0-191
94502|code|ADC.W           R2, R2, R2|66-235-2-2
94506|code|IT CS|40-191
94508|code|SUBCS.W         R0, R0, R1,LSL#14|160-235-129-48
94512|code|CMP.W           R0, R1,LSL#13|176-235-65-63
94516|code|NOP|0-191
94518|code|ADC.W           R2, R2, R2|66-235-2-2
94522|code|IT CS|40-191
94524|code|SUBCS.W         R0, R0, R1,LSL#13|160-235-65-48
94528|code|CMP.W           R0, R1,LSL#12|176-235-1-63
94532|code|NOP|0-191
94534|code|ADC.W           R2, R2, R2|66-235-2-2
94538|code|IT CS|40-191
94540|code|SUBCS.W         R0, R0, R1,LSL#12|160-235-1-48
94544|code|CMP.W           R0, R1,LSL#11|176-235-193-47
94548|code|NOP|0-191
94550|code|ADC.W           R2, R2, R2|66-235-2-2
94554|code|IT CS|40-191
94556|code|SUBCS.W         R0, R0, R1,LSL#11|160-235-193-32
94560|code|CMP.W           R0, R1,LSL#10|176-235-129-47
94564|code|NOP|0-191
94566|code|ADC.W           R2, R2, R2|66-235-2-2
94570|code|IT CS|40-191
94572|code|SUBCS.W         R0, R0, R1,LSL#10|160-235-129-32
94576|code|CMP.W           R0, R1,LSL#9|176-235-65-47
94580|code|NOP|0-191
94582|code|ADC.W           R2, R2, R2|66-235-2-2
94586|code|IT CS|40-191
94588|code|SUBCS.W         R0, R0, R1,LSL#9|160-235-65-32
94592|code|CMP.W           R0, R1,LSL#8|176-235-1-47
94596|code|NOP|0-191
94598|code|ADC.W           R2, R2, R2|66-235-2-2
94602|code|IT CS|40-191
94604|code|SUBCS.W         R0, R0, R1,LSL#8|160-235-1-32
94608|code|CMP.W           R0, R1,LSL#7|176-235-193-31
94612|code|NOP|0-191
94614|code|ADC.W           R2, R2, R2|66-235-2-2
94618|code|IT CS|40-191
94620|code|SUBCS.W         R0, R0, R1,LSL#7|160-235-193-16
94624|code|CMP.W           R0, R1,LSL#6|176-235-129-31
94628|code|NOP|0-191
94630|code|ADC.W           R2, R2, R2|66-235-2-2
94634|code|IT CS|40-191
94636|code|SUBCS.W         R0, R0, R1,LSL#6|160-235-129-16
94640|code|CMP.W           R0, R1,LSL#5|176-235-65-31
94644|code|NOP|0-191
94646|code|ADC.W           R2, R2, R2|66-235-2-2
94650|code|IT CS|40-191
94652|code|SUBCS.W         R0, R0, R1,LSL#5|160-235-65-16
94656|code|CMP.W           R0, R1,LSL#4|176-235-1-31
94660|code|NOP|0-191
94662|code|ADC.W           R2, R2, R2|66-235-2-2
94666|code|IT CS|40-191
94668|code|SUBCS.W         R0, R0, R1,LSL#4|160-235-1-16
94672|code|CMP.W           R0, R1,LSL#3|176-235-193-15
94676|code|NOP|0-191
94678|code|ADC.W           R2, R2, R2|66-235-2-2
94682|code|IT CS|40-191
94684|code|SUBCS.W         R0, R0, R1,LSL#3|160-235-193-0
94688|code|CMP.W           R0, R1,LSL#2|176-235-129-15
94692|code|NOP|0-191
94694|code|ADC.W           R2, R2, R2|66-235-2-2
94698|code|IT CS|40-191
94700|code|SUBCS.W         R0, R0, R1,LSL#2|160-235-129-0
94704|code|CMP.W           R0, R1,LSL#1|176-235-65-15
94708|code|NOP|0-191
94710|code|ADC.W           R2, R2, R2|66-235-2-2
94714|code|IT CS|40-191
94716|code|SUBCS.W         R0, R0, R1,LSL#1|160-235-65-0
94720|code|CMP.W           R0, R1|176-235-1-15
94724|code|NOP|0-191
94726|code|ADC.W           R2, R2, R2|66-235-2-2
94730|code|IT CS|40-191
94732|code|SUBCS.W         R0, R0, R1|160-235-1-0
94736|code|MOV             R0, R2|16-70
94738|code|BX              LR|112-71
94740|code|ITE EQ|12-191
94742|code|MOVEQ           R0, #1|1-32
94744|code|MOVNE           R0, #0|0-32
94746|code|BX              LR|112-71
94748|code|CLZ.W           R2, R1|177-250-129-242
94752|code|RSB.W           R2, R2, #0x1F|194-241-31-2
94756|code|LSR.W           R0, R0, R2|32-250-2-240
94760|code|BX              LR|112-71
94762|code|CBZ             R0, loc_17230|8-177
94764|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
94768|code|B.W             sub_17500|0-240-102-185
94772|code|CMP             R1, #0|0-41
94774|code|BEQ             loc_1722A|248-208
94776|code|PUSH.W          {R0,R1,LR}|45-233-3-64
94780|code|BL              sub_16FD8|255-247-204-254
94784|code|POP.W           {R1,R2,LR}|189-232-6-64
94788|code|MUL.W           R3, R2, R0|2-251-0-243
94792|code|SUB.W           R1, R1, R3|161-235-3-1
94796|code|BX              LR|112-71
94798|data|ALIGN 0x10|0-191
94800|code|CMP             R1, #0|0-41
94802|code|BEQ.W           loc_174D2|0-240-62-129
94806|code|EOR.W           R12, R0, R1|128-234-1-12
94810|code|IT MI|72-191
94812|code|NEGMI           R1, R1|73-66
94814|code|SUBS            R2, R1, #1|74-30
94816|code|BEQ.W           loc_174A2|0-240-31-129
94820|code|MOVS            R3, R0|3-0
94822|code|IT MI|72-191
94824|code|NEGMI           R3, R0|67-66
94826|code|CMP             R3, R1|139-66
94828|code|BLS.W           loc_174AC|64-242-30-129
94832|code|TST             R1, R2|17-66
94834|code|BEQ.W           loc_174BC|0-240-35-129
94838|code|CLZ.W           R2, R3|179-250-131-242
94842|code|CLZ.W           R0, R1|177-250-129-240
94846|code|SUB.W           R2, R0, R2|160-235-2-2
94850|code|RSB.W           R2, R2, #0x1F|194-241-31-2
94854|code|ADR             R0, loc_17298|4-160
94856|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
94860|code|MOV.W           R0, #0|79-240-0-0
94864|code|MOV             PC, R2|151-70
94866|data|ALIGN 4|0-191
94868|code|NOP.W|175-243-0-128
94872|code|CMP.W           R3, R1,LSL#31|179-235-193-127
94876|code|NOP|0-191
94878|code|ADC.W           R0, R0, R0|64-235-0-0
94882|code|IT CS|40-191
94884|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
94888|code|CMP.W           R3, R1,LSL#30|179-235-129-127
94892|code|NOP|0-191
94894|code|ADC.W           R0, R0, R0|64-235-0-0
94898|code|IT CS|40-191
94900|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
94904|code|CMP.W           R3, R1,LSL#29|179-235-65-127
94908|code|NOP|0-191
94910|code|ADC.W           R0, R0, R0|64-235-0-0
94914|code|IT CS|40-191
94916|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
94920|code|CMP.W           R3, R1,LSL#28|179-235-1-127
94924|code|NOP|0-191
94926|code|ADC.W           R0, R0, R0|64-235-0-0
94930|code|IT CS|40-191
94932|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
94936|code|CMP.W           R3, R1,LSL#27|179-235-193-111
94940|code|NOP|0-191
94942|code|ADC.W           R0, R0, R0|64-235-0-0
94946|code|IT CS|40-191
94948|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
94952|code|CMP.W           R3, R1,LSL#26|179-235-129-111
94956|code|NOP|0-191
94958|code|ADC.W           R0, R0, R0|64-235-0-0
94962|code|IT CS|40-191
94964|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
94968|code|CMP.W           R3, R1,LSL#25|179-235-65-111
94972|code|NOP|0-191
94974|code|ADC.W           R0, R0, R0|64-235-0-0
94978|code|IT CS|40-191
94980|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
94984|code|CMP.W           R3, R1,LSL#24|179-235-1-111
94988|code|NOP|0-191
94990|code|ADC.W           R0, R0, R0|64-235-0-0
94994|code|IT CS|40-191
94996|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
95000|code|CMP.W           R3, R1,LSL#23|179-235-193-95
95004|code|NOP|0-191
95006|code|ADC.W           R0, R0, R0|64-235-0-0
95010|code|IT CS|40-191
95012|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
95016|code|CMP.W           R3, R1,LSL#22|179-235-129-95
95020|code|NOP|0-191
95022|code|ADC.W           R0, R0, R0|64-235-0-0
95026|code|IT CS|40-191
95028|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
95032|code|CMP.W           R3, R1,LSL#21|179-235-65-95
95036|code|NOP|0-191
95038|code|ADC.W           R0, R0, R0|64-235-0-0
95042|code|IT CS|40-191
95044|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
95048|code|CMP.W           R3, R1,LSL#20|179-235-1-95
95052|code|NOP|0-191
95054|code|ADC.W           R0, R0, R0|64-235-0-0
95058|code|IT CS|40-191
95060|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
95064|code|CMP.W           R3, R1,LSL#19|179-235-193-79
95068|code|NOP|0-191
95070|code|ADC.W           R0, R0, R0|64-235-0-0
95074|code|IT CS|40-191
95076|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
95080|code|CMP.W           R3, R1,LSL#18|179-235-129-79
95084|code|NOP|0-191
95086|code|ADC.W           R0, R0, R0|64-235-0-0
95090|code|IT CS|40-191
95092|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
95096|code|CMP.W           R3, R1,LSL#17|179-235-65-79
95100|code|NOP|0-191
95102|code|ADC.W           R0, R0, R0|64-235-0-0
95106|code|IT CS|40-191
95108|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
95112|code|CMP.W           R3, R1,LSL#16|179-235-1-79
95116|code|NOP|0-191
95118|code|ADC.W           R0, R0, R0|64-235-0-0
95122|code|IT CS|40-191
95124|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
95128|code|CMP.W           R3, R1,LSL#15|179-235-193-63
95132|code|NOP|0-191
95134|code|ADC.W           R0, R0, R0|64-235-0-0
95138|code|IT CS|40-191
95140|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
95144|code|CMP.W           R3, R1,LSL#14|179-235-129-63
95148|code|NOP|0-191
95150|code|ADC.W           R0, R0, R0|64-235-0-0
95154|code|IT CS|40-191
95156|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
95160|code|CMP.W           R3, R1,LSL#13|179-235-65-63
95164|code|NOP|0-191
95166|code|ADC.W           R0, R0, R0|64-235-0-0
95170|code|IT CS|40-191
95172|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
95176|code|CMP.W           R3, R1,LSL#12|179-235-1-63
95180|code|NOP|0-191
95182|code|ADC.W           R0, R0, R0|64-235-0-0
95186|code|IT CS|40-191
95188|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
95192|code|CMP.W           R3, R1,LSL#11|179-235-193-47
95196|code|NOP|0-191
95198|code|ADC.W           R0, R0, R0|64-235-0-0
95202|code|IT CS|40-191
95204|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
95208|code|CMP.W           R3, R1,LSL#10|179-235-129-47
95212|code|NOP|0-191
95214|code|ADC.W           R0, R0, R0|64-235-0-0
95218|code|IT CS|40-191
95220|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
95224|code|CMP.W           R3, R1,LSL#9|179-235-65-47
95228|code|NOP|0-191
95230|code|ADC.W           R0, R0, R0|64-235-0-0
95234|code|IT CS|40-191
95236|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
95240|code|CMP.W           R3, R1,LSL#8|179-235-1-47
95244|code|NOP|0-191
95246|code|ADC.W           R0, R0, R0|64-235-0-0
95250|code|IT CS|40-191
95252|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
95256|code|CMP.W           R3, R1,LSL#7|179-235-193-31
95260|code|NOP|0-191
95262|code|ADC.W           R0, R0, R0|64-235-0-0
95266|code|IT CS|40-191
95268|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
95272|code|CMP.W           R3, R1,LSL#6|179-235-129-31
95276|code|NOP|0-191
95278|code|ADC.W           R0, R0, R0|64-235-0-0
95282|code|IT CS|40-191
95284|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
95288|code|CMP.W           R3, R1,LSL#5|179-235-65-31
95292|code|NOP|0-191
95294|code|ADC.W           R0, R0, R0|64-235-0-0
95298|code|IT CS|40-191
95300|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
95304|code|CMP.W           R3, R1,LSL#4|179-235-1-31
95308|code|NOP|0-191
95310|code|ADC.W           R0, R0, R0|64-235-0-0
95314|code|IT CS|40-191
95316|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
95320|code|CMP.W           R3, R1,LSL#3|179-235-193-15
95324|code|NOP|0-191
95326|code|ADC.W           R0, R0, R0|64-235-0-0
95330|code|IT CS|40-191
95332|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
95336|code|CMP.W           R3, R1,LSL#2|179-235-129-15
95340|code|NOP|0-191
95342|code|ADC.W           R0, R0, R0|64-235-0-0
95346|code|IT CS|40-191
95348|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
95352|code|CMP.W           R3, R1,LSL#1|179-235-65-15
95356|code|NOP|0-191
95358|code|ADC.W           R0, R0, R0|64-235-0-0
95362|code|IT CS|40-191
95364|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
95368|code|CMP.W           R3, R1|179-235-1-15
95372|code|NOP|0-191
95374|code|ADC.W           R0, R0, R0|64-235-0-0
95378|code|IT CS|40-191
95380|code|SUBCS.W         R3, R3, R1|163-235-1-3
95384|code|CMP.W           R12, #0|188-241-0-15
95388|code|IT MI|72-191
95390|code|NEGMI           R0, R0|64-66
95392|code|BX              LR|112-71
95394|code|TEQ.W           R12, R0|156-234-0-15
95398|code|IT MI|72-191
95400|code|NEGMI           R0, R0|64-66
95402|code|BX              LR|112-71
95404|code|IT CC|56-191
95406|code|MOVCC           R0, #0|0-32
95408|code|ITT EQ|4-191
95410|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
95414|code|ORREQ.W         R0, R0, #1|64-240-1-0
95418|code|BX              LR|112-71
95420|code|CLZ.W           R2, R1|177-250-129-242
95424|code|RSB.W           R2, R2, #0x1F|194-241-31-2
95428|code|CMP.W           R12, #0|188-241-0-15
95432|code|LSR.W           R0, R3, R2|35-250-2-240
95436|code|IT MI|72-191
95438|code|NEGMI           R0, R0|64-66
95440|code|BX              LR|112-71
95442|code|CMP             R0, #0|0-40
95444|code|IT GT|200-191
95446|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
95450|code|IT LT|184-191
95452|code|MOVLT.W         R0, #0x80000000|79-240-0-64
95456|code|B.W             sub_17500|0-240-14-184
95460|code|CMP             R1, #0|0-41
95462|code|BEQ             loc_174D2|244-208
95464|code|PUSH.W          {R0,R1,LR}|45-233-3-64
95468|code|BL              sub_17256|255-247-179-254
95472|code|POP.W           {R1,R2,LR}|189-232-6-64
95476|code|MUL.W           R3, R2, R0|2-251-0-243
95480|code|SUB.W           R1, R1, R3|161-235-3-1
95484|code|BX              LR|112-71
95486|data|ALIGN 0x10|0-191
95488|code|PUSH            {R1,LR}|2-181
95490|code|MOV.W           R0, #8; sig|79-240-8-0
95494|code|BLX             raise|242-247-238-233
95498|code|POP             {R1,PC}|2-189
95500|code|PUSH.W          {R3-R9,LR}|45-233-248-67
95504|code|MOV             R6, R0|6-70
95506|code|LDR.W           R9, =(off_24650 - 0x17520)|223-248-52-144
95510|code|MOV             R7, R1|15-70
95512|code|LDR             R5, =(off_2464C - 0x17526)|12-77
95514|code|MOV             R8, R2|144-70
95516|code|ADD             R9, PC; off_24650|249-68
95518|code|BL              .init_proc|242-247-197-249
95522|code|ADD             R5, PC; off_2464C|125-68
95524|code|RSB.W           R9, R5, R9|197-235-9-9
95528|code|MOVS.W          R9, R9,ASR#2|95-234-169-9
95532|code|BEQ             locret_17542|9-208
95534|code|MOVS            R4, #0|0-36
95536|code|LDR.W           R3, [R5],#4|85-248-4-59
95540|code|MOV             R0, R6|48-70
95542|code|MOV             R1, R7|57-70
95544|code|MOV             R2, R8|66-70
95546|code|ADDS            R4, #1|1-52
95548|code|BLX             R3; sub_A26C|152-71
95550|code|CMP             R4, R9|76-69
95552|code|BNE             loc_17530|246-209
95554|code|POP.W           {R3-R9,PC}|189-232-248-131
95558|data|ALIGN 4|0-191
95560|data|DCD off_24650 - 0x17520|48-209-0-0
95564|data|DCD off_2464C - 0x17526|38-209-0-0
95568|code|BX              LR|112-71
95570|data|ALIGN 8|0-191-0-0-0-0
95576|code|B.W             sub_12B20|251-247-226-186
95580|code|PUSH            {R3,LR}; _fini|8-181
95582|code|NOP|0-191
95584|code|POP             {R3,PC}|8-189
95586|data|DCW 0|0-0
149068|data|DCD sub_A26C+1|109-162-0-0
149072|data|DCD sub_A25C+1|93-162-0-0
149076|data|DCD 0|0-0-0-0
149080|data|Elf32_Dyn <1, <1>>; DT_NEEDED libwrap.so.0|1-0-0-0-1-0-0-0
149088|data|Elf32_Dyn <1, <0x64>>; DT_NEEDED libutil.so.1|1-0-0-0-100-0-0-0
149096|data|Elf32_Dyn <1, <0x79>>; DT_NEEDED libc.so.6|1-0-0-0-121-0-0-0
149104|data|Elf32_Dyn <1, <0x376>>; DT_NEEDED ld-linux.so.3|1-0-0-0-118-3-0-0
149112|data|Elf32_Dyn <0xC, <0x98AD>>; DT_INIT|12-0-0-0-173-152-0-0
149120|data|Elf32_Dyn <0xD, <0x1755D>>; DT_FINI|13-0-0-0-93-117-1-0
149128|data|Elf32_Dyn <0x19, <0x2464C>>; DT_INIT_ARRAY|25-0-0-0-76-70-2-0
149136|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
149144|data|Elf32_Dyn <0x1A, <0x24650>>; DT_FINI_ARRAY|26-0-0-0-80-70-2-0
149152|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
149160|data|Elf32_Dyn <4, <0x81A0>>; DT_HASH|4-0-0-0-160-129-0-0
149168|data|Elf32_Dyn <0x6FFFFEF5, <0x8500>>; DT_GNU_HASH|245-254-255-111-0-133-0-0
149176|data|Elf32_Dyn <5, <0x902C>>; DT_STRTAB|5-0-0-0-44-144-0-0
149184|data|Elf32_Dyn <6, <0x88DC>>; DT_SYMTAB|6-0-0-0-220-136-0-0
149192|data|Elf32_Dyn <0xA, <0x3E4>>; DT_STRSZ|10-0-0-0-228-3-0-0
149200|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
149208|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
149216|data|Elf32_Dyn <3, <0x24760>>; DT_PLTGOT|3-0-0-0-96-71-2-0
149224|data|Elf32_Dyn <2, <0x310>>; DT_PLTRELSZ|2-0-0-0-16-3-0-0
149232|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
149240|data|Elf32_Dyn <0x17, <0x959C>>; DT_JMPREL|23-0-0-0-156-149-0-0
149248|data|Elf32_Dyn <0x11, <0x956C>>; DT_REL|17-0-0-0-108-149-0-0
149256|data|Elf32_Dyn <0x12, <0x30>>; DT_RELSZ|18-0-0-0-48-0-0-0
149264|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
149272|data|Elf32_Dyn <0x6FFFFFFE, <0x94FC>>; DT_VERNEED|254-255-255-111-252-148-0-0
149280|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
149288|data|Elf32_Dyn <0x6FFFFFF0, <0x9410>>; DT_VERSYM|240-255-255-111-16-148-0-0
149296|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
149344|data|DCD stru_24658|88-70-2-0
149348|data|DCD 0|0-0-0-0
149352|data|DCD 0|0-0-0-0
149356|data|DCD __imp_calloc|224-108-5-0
149360|data|DCD __imp_strstr|200-107-5-0
149364|data|DCD __imp_raise|168-108-5-0
149368|data|DCD __imp_cfmakeraw|28-108-5-0
149372|data|DCD __imp_strcmp|192-107-5-0
149376|data|DCD __imp_strtol|176-108-5-0
149380|data|DCD __imp_setsockopt|136-108-5-0
149384|data|DCD __imp_printf|160-108-5-0
149388|data|DCD __imp_fopen|84-108-5-0
149392|data|DCD __imp_regerror|8-109-5-0
149396|data|DCD __imp_read|116-108-5-0
149400|data|DCD __imp_fflush|212-107-5-0
149404|data|DCD __imp_memmove|192-108-5-0
149408|data|DCD __imp_free|24-109-5-0
149412|data|DCD __imp_gai_strerror|80-108-5-0
149416|data|DCD __imp_fgets|224-107-5-0
149420|data|DCD __imp_ferror|208-107-5-0
149424|data|DCD __imp_memcpy|36-109-5-0
149428|data|DCD __imp_time|92-108-5-0
149432|data|DCD __imp__IO_getc|96-108-5-0
149436|data|DCD __imp_memcmp|244-108-5-0
149440|data|DCD __imp_ctime|0-109-5-0
149444|data|DCD __imp___stack_chk_fail|156-108-5-0
149448|data|DCD __imp_unlink|252-107-5-0
149452|data|DCD __imp_realloc|52-108-5-0
149456|data|DCD __imp_regexec|236-107-5-0
149460|data|DCD __imp_chdir|208-108-5-0
149464|data|DCD __imp___xstat|0-108-5-0
149468|data|DCD __imp_poll|164-108-5-0
149472|data|DCD __imp_accept|40-109-5-0
149476|data|DCD __imp_cfsetospeed|20-108-5-0
149480|data|DCD __imp_sigaction|144-108-5-0
149484|data|DCD __imp_fwrite|124-108-5-0
149488|data|DCD __imp_strcat|64-109-5-0
149492|data|DCD __imp_getsockopt|32-108-5-0
149496|data|DCD __imp_regfree|60-108-5-0
149500|data|DCD __imp_waitpid|248-108-5-0
149504|data|DCD __imp_tcsetattr|100-108-5-0
149508|data|DCD __imp_strcpy|240-107-5-0
149512|data|DCD __imp_gettimeofday|204-108-5-0
149516|data|DCD __imp_fread|4-109-5-0
149520|data|DCD __imp_puts|212-108-5-0
149524|data|DCD __imp_malloc|48-109-5-0
149528|data|DCD __imp___libc_start_main|24-108-5-0
149532|data|DCD __imp_strerror|4-108-5-0
149536|data|DCD __imp___gmon_start__|68-109-5-0
149540|data|DCD __imp_open|28-109-5-0
149544|data|DCD __imp_getopt_long|20-109-5-0
149548|data|DCD __imp_kill|228-108-5-0
149552|data|DCD __imp___ctype_b_loc|68-108-5-0
149556|data|DCD __imp_getpid|204-107-5-0
149560|data|DCD __imp_exit|56-108-5-0
149564|data|DCD __imp_strtoul|152-108-5-0
149568|data|DCD __imp_strlen|88-108-5-0
149572|data|DCD __imp_setsid|72-108-5-0
149576|data|DCD __imp_strchr|108-108-5-0
149580|data|DCD __imp_fprintf|44-108-5-0
149584|data|DCD __imp_cfsetispeed|40-108-5-0
149588|data|DCD __imp_fcntl|244-107-5-0
149592|data|DCD __imp_execv|200-108-5-0
149596|data|DCD __imp___errno_location|76-108-5-0
149600|data|DCD __imp_strncasecmp|196-108-5-0
149604|data|DCD __imp_snprintf|220-107-5-0
149608|data|DCD __imp___isoc99_sscanf|16-108-5-0
149612|data|DCD __imp___strdup|44-109-5-0
149616|data|DCD __imp_bind|52-109-5-0
149620|data|DCD __imp_lockf|64-108-5-0
149624|data|DCD __imp_memset|236-108-5-0
149628|data|DCD __imp_strncpy|48-108-5-0
149632|data|DCD __imp_strtod|148-108-5-0
149636|data|DCD __imp_write|196-107-5-0
149640|data|DCD __imp_fileno|252-108-5-0
149644|data|DCD __imp_memchr|228-107-5-0
149648|data|DCD __imp_fclose|232-108-5-0
149652|data|DCD __imp_strtok|172-108-5-0
149656|data|DCD __imp_sigemptyset|12-109-5-0
149660|data|DCD __imp_fork|220-108-5-0
149664|data|DCD __imp_getnameinfo|8-108-5-0
149668|data|DCD __imp_hosts_ctl|12-108-5-0
149672|data|DCD __imp_strrchr|120-108-5-0
149676|data|DCD __imp_listen|232-107-5-0
149680|data|DCD __imp_syslog|216-107-5-0
149684|data|DCD __imp_sprintf|16-109-5-0
149688|data|DCD __imp_openlog|180-108-5-0
149692|data|DCD __imp_regcomp|60-109-5-0
149696|data|DCD __imp_vsnprintf|140-108-5-0
149700|data|DCD __imp_qsort|128-108-5-0
149704|data|DCD __imp_freeaddrinfo|216-108-5-0
149708|data|DCD __imp_getaddrinfo|32-109-5-0
149712|data|DCD __imp_socket|56-109-5-0
149716|data|DCD __imp_umask|184-108-5-0
149720|data|DCD __imp_isatty|188-108-5-0
149724|data|DCD __imp_abort|104-108-5-0
149728|data|DCD __imp_close|112-108-5-0
149732|data|DCD __imp_forkpty|36-108-5-0
149736|data|DCD __imp_connect|132-108-5-0
149740|data|DCD __imp___assert_fail|240-108-5-0
149744|data|DCD __imp_tcgetattr|248-107-5-0
149748|data|DCD __imp___gmon_start__|68-109-5-0
149752|data|ALIGN 0x10|0-0-0-0-0-0-0-0
149760|data|DCD 1|1-0-0-0
149772|data|DCD aEof; "EOF"|84-155-1-0
149776|data|DCD aSusp; "SUSP"|88-155-1-0
149780|data|DCD aAbort_0; "ABORT"|96-155-1-0
149784|data|DCD aEor; "EOR"|104-155-1-0
149788|data|DCD aSe; "SE"|108-155-1-0
149792|data|DCD aNop; "NOP"|112-155-1-0
149796|data|DCD aDmark; "DMARK"|116-155-1-0
149800|data|DCD aBrk; "BRK"|124-155-1-0
149804|data|DCD aIp; "IP"|128-155-1-0
149808|data|DCD aAo; "AO"|132-155-1-0
149812|data|DCD aAyt; "AYT"|136-155-1-0
149816|data|DCD aEc; "EC"|140-155-1-0
149820|data|DCD aEl; "EL"|144-155-1-0
149824|data|DCD aGa; "GA"|148-155-1-0
149828|data|DCD aSb; "SB"|152-155-1-0
149832|data|DCD aWill; "WILL"|156-155-1-0
149836|data|DCD aWont; "WONT"|164-155-1-0
149840|data|DCD aDo; "DO"|172-155-1-0
149844|data|DCD aDont; "DONT"|176-155-1-0
149848|data|DCD aIac; "IAC"|184-155-1-0
149852|data|ALIGN 0x10|0-0-0-0
149856|data|DCD aBinary; "BINARY"|168-153-1-0
149860|data|DCD aEcho; "ECHO"|176-153-1-0
149864|data|DCD aRcp; "RCP"|184-153-1-0
149868|data|DCD aSuppressGoAhea; "SUPPRESS GO AHEAD"|188-153-1-0
149872|data|DCD aName; "NAME"|208-153-1-0
149876|data|DCD aStatus_0; "STATUS"|216-153-1-0
149880|data|DCD aTimingMark; "TIMING MARK"|224-153-1-0
149884|data|DCD aRcte; "RCTE"|236-153-1-0
149888|data|DCD aNaol; "NAOL"|244-153-1-0
149892|data|DCD aNaop; "NAOP"|252-153-1-0
149896|data|DCD aNaocrd; "NAOCRD"|4-154-1-0
149900|data|DCD aNaohts; "NAOHTS"|12-154-1-0
149904|data|DCD aNaohtd; "NAOHTD"|20-154-1-0
149908|data|DCD aNaoffd; "NAOFFD"|28-154-1-0
149912|data|DCD aNaovts; "NAOVTS"|36-154-1-0
149916|data|DCD aNaovtd; "NAOVTD"|44-154-1-0
149920|data|DCD aNaolfd; "NAOLFD"|52-154-1-0
149924|data|DCD aExtendAscii; "EXTEND ASCII"|60-154-1-0
149928|data|DCD aLogout; "LOGOUT"|76-154-1-0
149932|data|DCD aByteMacro; "BYTE MACRO"|84-154-1-0
149936|data|DCD aDataEntryTermi; "DATA ENTRY TERMINAL"|96-154-1-0
149940|data|DCD aSupdup; "SUPDUP"|116-154-1-0
149944|data|DCD aSupdupOutput; "SUPDUP OUTPUT"|124-154-1-0
149948|data|DCD aSendLocation; "SEND LOCATION"|140-154-1-0
149952|data|DCD aTerminalType; "TERMINAL TYPE"|156-154-1-0
149956|data|DCD aEndOfRecord; "END OF RECORD"|172-154-1-0
149960|data|DCD aTacacsUid; "TACACS UID"|188-154-1-0
149964|data|DCD aOutputMarking; "OUTPUT MARKING"|200-154-1-0
149968|data|DCD aTtyloc; "TTYLOC"|216-154-1-0
149972|data|DCD a3270Regime; "3270 REGIME"|224-154-1-0
149976|data|DCD aX3Pad; "X.3 PAD"|236-154-1-0
149980|data|DCD aNaws; "NAWS"|244-154-1-0
149984|data|DCD aTspeed; "TSPEED"|252-154-1-0
149988|data|DCD aLflow; "LFLOW"|4-155-1-0
149992|data|DCD aLinemode; "LINEMODE"|12-155-1-0
149996|data|DCD aXdisploc; "XDISPLOC"|24-155-1-0
150000|data|DCD aOldEnviron; "OLD-ENVIRON"|36-155-1-0
150004|data|DCD aAuthentication; "AUTHENTICATION"|48-155-1-0
150008|data|DCD aEncrypt; "ENCRYPT"|64-155-1-0
150012|data|DCD aNewEnviron; "NEW-ENVIRON"|72-155-1-0
150020|data|DCD 1|1-0-0-0
150024|data|DCD 1|1-0-0-0
150028|data|DCD 1|1-0-0-0
150032|data|% 4; Copy of shared data|255-255-255-255
150036|data|ALIGN 8|255-255-255-255
150040|data|% 4; Copy of shared data|255-255-255-255
150044|data|ALIGN 0x10|255-255-255-255
150048|data|% 4; Copy of shared data|255-255-255-255
150052|data|% 4; Copy of shared data|255-255-255-255
150056|data|% 4; Copy of shared data|255-255-255-255
150060|data|% 1|255
150061|data|ALIGN 0x10|255-255-255
150064|data|% 4|255-255-255-255
150068|data|% 4|255-255-255-255
150072|data|% 4|255-255-255-255
150076|data|% 4|255-255-255-255
150080|data|% 4|255-255-255-255
150084|data|% 4|255-255-255-255
150088|data|% 4|255-255-255-255
346700|data|% 4|255-255-255-255
346704|data|% 4|255-255-255-255
346708|data|% 4|255-255-255-255
346712|data|% 4|255-255-255-255
346716|data|% 4|255-255-255-255
346720|data|% 4|255-255-255-255
346724|data|% 4|255-255-255-255
346728|data|% 4|255-255-255-255
346732|data|% 1|255
346733|data|ALIGN 0x10|255-255-255
346736|data|% 4|255-255-255-255
346740|data|% 4|255-255-255-255
346744|data|% 4|255-255-255-255
346788|data|% 4|255-255-255-255
354984|data|% 4|255-255-255-255
355028|data|% 4|255-255-255-255
355068|data|% 4|255-255-255-255
355072|data|% 4|255-255-255-255
355076|data|% 4|255-255-255-255
355080|data|% 4|255-255-255-255
355084|data|% 4|255-255-255-255
355088|data|% 4|255-255-255-255
355092|data|% 4|255-255-255-255
355196|data|% 4|255-255-255-255
355200|data|% 4|255-255-255-255
355204|data|% 4|255-255-255-255
355208|data|% 4|255-255-255-255
355212|data|% 4|255-255-255-255
355216|data|% 4|255-255-255-255
355220|data|% 4|255-255-255-255
355236|data|% 4|255-255-255-255
355240|data|% 4|255-255-255-255
355244|data|% 4|255-255-255-255
355248|data|% 4|255-255-255-255
355252|data|% 4|255-255-255-255
355256|data|% 4|255-255-255-255
355264|code|IMPORT __imp_strcmp|0-0-0-0
355268|code|IMPORT __imp_write|0-0-0-0
355272|code|IMPORT __imp_strstr|0-0-0-0
355276|code|IMPORT __imp_getpid|0-0-0-0
355280|code|IMPORT __imp_ferror|0-0-0-0
355284|code|IMPORT __imp_fflush|0-0-0-0
355288|code|IMPORT __imp_syslog|0-0-0-0
355292|code|IMPORT __imp_snprintf|0-0-0-0
355296|code|IMPORT __imp_fgets|0-0-0-0
355300|code|IMPORT __imp_memchr|0-0-0-0
355304|code|IMPORT __imp_listen|0-0-0-0
355308|code|IMPORT __imp_regexec|0-0-0-0
355312|code|IMPORT __imp_strcpy|0-0-0-0
355316|code|IMPORT __imp_fcntl|0-0-0-0
355320|code|IMPORT __imp_tcgetattr|0-0-0-0
355324|code|IMPORT __imp_unlink|0-0-0-0
355328|code|IMPORT __imp___xstat|0-0-0-0
355332|code|IMPORT __imp_strerror|0-0-0-0
355336|code|IMPORT __imp_getnameinfo|0-0-0-0
355340|code|IMPORT __imp_hosts_ctl|0-0-0-0
355344|code|IMPORT __imp___isoc99_sscanf|0-0-0-0
355348|code|IMPORT __imp_cfsetospeed|0-0-0-0
355352|code|IMPORT __imp___libc_start_main|0-0-0-0
355356|code|IMPORT __imp_cfmakeraw|0-0-0-0
355360|code|IMPORT __imp_getsockopt|0-0-0-0
355364|code|IMPORT __imp_forkpty|0-0-0-0
355368|code|IMPORT __imp_cfsetispeed|0-0-0-0
355372|code|IMPORT __imp_fprintf|0-0-0-0
355376|code|IMPORT __imp_strncpy|0-0-0-0
355380|code|IMPORT __imp_realloc|0-0-0-0
355384|code|IMPORT __imp_exit|0-0-0-0
355388|code|IMPORT __imp_regfree|0-0-0-0
355392|code|IMPORT __imp_lockf|0-0-0-0
355396|code|IMPORT __imp___ctype_b_loc|0-0-0-0
355400|code|IMPORT __imp_setsid|0-0-0-0
355404|code|IMPORT __imp___errno_location|0-0-0-0
355408|code|IMPORT __imp_gai_strerror|0-0-0-0
355412|code|IMPORT __imp_fopen|0-0-0-0
355416|code|IMPORT __imp_strlen|0-0-0-0
355420|code|IMPORT __imp_time|0-0-0-0
355424|code|IMPORT __imp__IO_getc|0-0-0-0
355428|code|IMPORT __imp_tcsetattr|0-0-0-0
355432|code|IMPORT __imp_abort|0-0-0-0
355436|code|IMPORT __imp_strchr|0-0-0-0
355440|code|IMPORT __imp_close|0-0-0-0
355444|code|IMPORT __imp_read|0-0-0-0
355448|code|IMPORT __imp_strrchr|0-0-0-0
355452|code|IMPORT __imp_fwrite|0-0-0-0
355456|code|IMPORT __imp_qsort|0-0-0-0
355460|code|IMPORT __imp_connect|0-0-0-0
355464|code|IMPORT __imp_setsockopt|0-0-0-0
355468|code|IMPORT __imp_vsnprintf|0-0-0-0
355472|code|IMPORT __imp_sigaction|0-0-0-0
355476|code|IMPORT __imp_strtod|0-0-0-0
355480|code|IMPORT __imp_strtoul|0-0-0-0
355484|code|IMPORT __imp___stack_chk_fail|0-0-0-0
355488|code|IMPORT __imp_printf|0-0-0-0
355492|code|IMPORT __imp_poll|0-0-0-0
355496|code|IMPORT __imp_raise|0-0-0-0
355500|code|IMPORT __imp_strtok|0-0-0-0
355504|code|IMPORT __imp_strtol|0-0-0-0
355508|code|IMPORT __imp_openlog|0-0-0-0
355512|code|IMPORT __imp_umask|0-0-0-0
355516|code|IMPORT __imp_isatty|0-0-0-0
355520|code|IMPORT __imp_memmove|0-0-0-0
355524|code|IMPORT __imp_strncasecmp|0-0-0-0
355528|code|IMPORT __imp_execv|0-0-0-0
355532|code|IMPORT __imp_gettimeofday|0-0-0-0
355536|code|IMPORT __imp_chdir|0-0-0-0
355540|code|IMPORT __imp_puts|0-0-0-0
355544|code|IMPORT __imp_freeaddrinfo|0-0-0-0
355548|code|IMPORT __imp_fork|0-0-0-0
355552|code|IMPORT __imp_calloc|0-0-0-0
355556|code|IMPORT __imp_kill|0-0-0-0
355560|code|IMPORT __imp_fclose|0-0-0-0
355564|code|IMPORT __imp_memset|0-0-0-0
355568|code|IMPORT __imp___assert_fail|0-0-0-0
355572|code|IMPORT __imp_memcmp|0-0-0-0
355576|code|IMPORT __imp_waitpid|0-0-0-0
355580|code|IMPORT __imp_fileno|0-0-0-0
355584|code|IMPORT __imp_ctime|0-0-0-0
355588|code|IMPORT __imp_fread|0-0-0-0
355592|code|IMPORT __imp_regerror|0-0-0-0
355596|code|IMPORT __imp_sigemptyset|0-0-0-0
355600|code|IMPORT __imp_sprintf|0-0-0-0
355604|code|IMPORT __imp_getopt_long|0-0-0-0
355608|code|IMPORT __imp_free|0-0-0-0
355612|code|IMPORT __imp_open|0-0-0-0
355616|code|IMPORT __imp_getaddrinfo|0-0-0-0
355620|code|IMPORT __imp_memcpy|0-0-0-0
355624|code|IMPORT __imp_accept|0-0-0-0
355628|code|IMPORT __imp___strdup|0-0-0-0
355632|code|IMPORT __imp_malloc|0-0-0-0
355636|code|IMPORT __imp_bind|0-0-0-0
355640|code|IMPORT __imp_socket|0-0-0-0
355644|code|IMPORT __imp_regcomp|0-0-0-0
355648|code|IMPORT __imp_strcat|0-0-0-0
