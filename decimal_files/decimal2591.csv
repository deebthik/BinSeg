address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|73-72-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0xC164; SHT file offset|100-193-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1D; Number of entries in SHT|29-0
50|data|DCW 0x1C; SHT entry index for string table|28-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0xB4D4; File offset|212-180-0-0
60|data|DCD unk_B4D4; Virtual address|212-180-0-0
64|data|DCD 0xB4D4; Physical address|212-180-0-0
68|data|DCD 0x2C8; Size in file image|200-2-0-0
72|data|DCD 0x2C8; Size in memory image|200-2-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0xB7A0; Size in file image|160-183-0-0
168|data|DCD 0xB7A0; Size in memory image|160-183-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0xBA40; File offset|64-186-0-0
188|data|DCD off_1BA40; Virtual address|64-186-1-0
192|data|DCD 0x1BA40; Physical address|64-186-1-0
196|data|DCD 0x5D4; Size in file image|212-5-0-0
200|data|DCD 0x648; Size in memory image|72-6-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0xBA4C; File offset|76-186-0-0
220|data|DCD stru_1BA4C; Virtual address|76-186-1-0
224|data|DCD 0x1BA4C; Physical address|76-186-1-0
228|data|DCD 0x140; Size in file image|64-1-0-0
232|data|DCD 0x140; Size in memory image|64-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0xBA40; File offset|64-186-0-0
316|data|DCD off_1BA40; Virtual address|64-186-1-0
320|data|DCD 0x1BA40; Physical address|64-186-1-0
324|data|DCD 0x5C0; Size in file image|192-5-0-0
328|data|DCD 0x5C0; Size in memory image|192-5-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x9F, 0xA0, 0xED, 6, 0x41, 0xF6, 0xD2, 0xDC, 0x61; Desc|159-160-237-6-65-246-210-220-97-147-216-169-192-137-55-236-69-212-193-173
436|data|DCD 0x43|67-0-0-0
440|data|DCD 0xE6|230-0-0-0
444|data|DCD 0x10|16-0-0-0
448|data|DCD 9|9-0-0-0
452|data|DCD 0x341E00, 0x80122011, 0xC504840, 0x140C604, 0xB0640081|0-30-52-0-17-32-18-128-64-72-80-12-4-198-64-1-129-0-100-176-0-32-128-130-1-64-34-136-0-3-0-0-5-12-143-44-0-4-0-128-12-223-147-49-84-70-144-196-32-52-32-33-72-180-2-89-64-24-0-149-4-86-41-0
516|data|DCD 0xE6, 0xE7, 0, 0xE8, 0, 0xEB, 0, 0, 0xEC, 0xED, 0xEE|230-0-0-0-231-0-0-0-0-0-0-0-232-0-0-0-0-0-0-0-235-0-0-0-0-0-0-0-0-0-0-0-236-0-0-0-237-0-0-0-238-0-0-0-239-0-0-0-242-0-0-0-243-0-0-0-0-0-0-0-0-0-0-0-244-0-0-0-245-0-0-0-0-0-0-0-246-0-0-0-247-0-0-0-0-0-0-0-251-0-0-0-253-0-0-0-0-0-0-0-255-0-0-0-0-1-0-0-0-0-0-0-0-0-0-0-3-1-0-0-5-1-0-0-6-1-0-0-7-1-0-0-9-1-0-0-12-1-0-0-0-0-0-0-14-1-0-0-15-1-0-0-0-0-0-0-0-0-0-0-19-1-0-0-21-1-0-0-22-1-0-0-24-1-0-0-0-0-0-0-0-0-0-0-26-1-0-0-0-0-0-0-27-1-0-0-28-1-0-0-29-1-0-0-30-1-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-31-1-0-0-32-1-0-0-0-0-0-0-33-1-0-0-34-1-0-0-38-1-0-0-0-0-0-0-0-0-0-0-39-1-0-0-40-1-0-0-0-0-0-0
784|data|DCD 0xECF287B9, 0xAE283B11, 0x54CFDFAA, 0x58E61D66, 0x1FE4AC5B|185-135-242-236-17-59-40-174-170-223-207-84-102-29-230-88-91-172-228-31-73-225-179-199-119-137-190-103-149-78-97-246-223-246-158-78-244-147-79-5-226-221-141-193-21-100-99-244-91-204-220-103-191-119-230-83-49-64-75-243-205-249-217-203-93-69-122-206-234-211-239-14-150-190-38-2-10-161-227-77-27-231-123-14-140-171-54-66-89-239-151-121-78-223-2-181-13-20-226-158-53-62-10-1-208-42-223-146-74-147-89-169-185-141-241-14-218-205-227-158-191-218-87-27-93-149-198-135-177-185-57-50-242-103-109-115-11-119-158-96-156-75-137-15-240-89-186-211-111-28-67-119-206-128-98-171-19-69-21-7-173-89-113-115-10-146-254-70-98-157-234-54-116-61-169-237-157-64-180-23-118-84-60-148-233-210-205-173-153-213-16-235-122-19-69-191-185-238-158-124-62-21-153-137-37-218-231-142-107-9-67-214-99-82-117-165-107-127-154-124-67-69-213-236-75-172-137-67-187-227-146-124-153-153-152-78-81-157-147-28-10-104-160-232-202-63-149-124-78-40-113-115-1-175-52-232-111-112-40-16-85-89-229-141-146-120-89-0-217-113-88-28
1056|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
1072|data|Elf32_Sym <byte_16C0 - byte_16C0, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
1088|data|Elf32_Sym <byte_16C0 - byte_16C0, dword_1BA48, 0, 3, 0, 0x15>|0-0-0-0-72-186-1-0-0-0-0-0-3-0-21-0
1104|data|Elf32_Sym <aFreeConfig - byte_16C0, dword_0, 0, 0x12, 0, 0>; "free_config"|3-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1120|data|Elf32_Sym <aFopen+1 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "open"|189-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1136|data|Elf32_Sym <aSysfsGetSize - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sysfs_get_size"|171-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1152|data|Elf32_Sym <aRememberWwid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "remember_wwid"|210-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1168|data|Elf32_Sym <aConvertDev - byte_16C0, dword_0, 0, 0x12, 0, 0>; "convert_dev"|114-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1184|data|Elf32_Sym <aUxSocketListen - byte_16C0, dword_0, 0, 0x12, 0, 0>; "ux_socket_listen"|90-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1200|data|Elf32_Sym <aSigemptyset - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sigemptyset"|85-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1216|data|Elf32_Sym <aStrerror - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strerror"|131-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1232|data|Elf32_Sym <aOrphanPath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "orphan_path"|191-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1248|data|Elf32_Sym <aDlog - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dlog"|107-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1264|data|Elf32_Sym <aFilterDevnode - byte_16C0, dword_0, 0, 0x12, 0, 0>; "filter_devnode"|46-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1280|data|Elf32_Sym <aAbort - byte_16C0, dword_0, 0, 0x12, 0, 0>; "abort"|40-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1296|data|Elf32_Sym <aGccPersonality - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__gcc_personality_v0"|135-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1312|data|Elf32_Sym <aStorePathinfo - byte_16C0, dword_0, 0, 0x12, 0, 0>; "store_pathinfo"|74-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1328|data|Elf32_Sym <aDmLibRelease - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_lib_release"|184-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1344|data|Elf32_Sym <aDmDrvVersion - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_drv_version"|146-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1360|data|Elf32_Sym <aMemcmp - byte_16C0, dword_0, 0, 0x12, 0, 0>; "memcmp"|117-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1376|data|Elf32_Sym <aSnprintDevices - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_devices"|224-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1392|data|Elf32_Sym <aPthreadAttrSet - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_attr_setdetachstate"|239-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1408|data|Elf32_Sym <aPthreadExit - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_exit"|80-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1424|data|Elf32_Sym <aXstat - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__xstat"|106-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1440|data|Elf32_Sym <aLibcStartMain - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|140-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1456|data|Elf32_Sym <aFreePath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "free_path"|213-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1472|data|Elf32_Sym <aAeabiUnwindCpp - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|74-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1488|data|Elf32_Sym <aDmEnablegroup - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_enablegroup"|199-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1504|data|Elf32_Sym <aXfree - byte_16C0, dword_0, 0, 0x12, 0, 0>; "xfree"|245-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1520|data|Elf32_Sym <aSignal - byte_16C0, dword_0, 0, 0x12, 0, 0>; "signal"|244-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1536|data|Elf32_Sym <aUeventListen - byte_16C0, dword_0, 0, 0x12, 0, 0>; "uevent_listen"|247-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1552|data|Elf32_Sym <aGmonStart - byte_16C0, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|169-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1568|data|Elf32_Sym <aJvRegisterclas - byte_16C0, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|45-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1584|data|Elf32_Sym <aCleanupLock - byte_16C0, dword_0, 0, 0x12, 0, 0>; "cleanup_lock"|81-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1600|data|Elf32_Sym <aTzset - byte_16C0, dword_0, 0, 0x12, 0, 0>; "tzset"|201-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1616|data|Elf32_Sym <aSnprintHwtable - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_hwtable"|186-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1632|data|Elf32_Sym <aIsoc99Sscanf - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|228-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1648|data|Elf32_Sym <aSnprintPathHea - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_path_header"|171-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1664|data|Elf32_Sym <aCheckerEnable - byte_16C0, dword_0, 0, 0x12, 0, 0>; "checker_enable"|75-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1680|data|Elf32_Sym <aStrncpy - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strncpy"|251-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1696|data|Elf32_Sym <aFclose - byte_16C0, dword_0, 0, 0x12, 0, 0>; "fclose"|162-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1712|data|Elf32_Sym <aGetenv - byte_16C0, dword_0, 0, 0x12, 0, 0>; "getenv"|221-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1728|data|Elf32_Sym <aPrintfChk - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|166-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1744|data|Elf32_Sym <aStrchr - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strchr"|57-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1760|data|Elf32_Sym <aSetrlimit - byte_16C0, dword_0, 0, 0x12, 0, 0>; "setrlimit"|18-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1776|data|Elf32_Sym <aSetlogmask - byte_16C0, dword_0, 0, 0x12, 0, 0>; "setlogmask"|74-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1792|data|Elf32_Sym <aSnprintBlackli_0 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_blacklist_except"|41-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1808|data|Elf32_Sym <aSemInit - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sem_init"|128-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1824|data|Elf32_Sym <aLogThreadStop - byte_16C0, dword_0, 0, 0x12, 0, 0>; "log_thread_stop"|97-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1840|data|Elf32_Sym <aFopen - byte_16C0, dword_0, 0, 0x12, 0, 0>; "fopen"|188-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1856|data|Elf32_Sym <aSchedSetschedu - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sched_setscheduler"|182-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1872|data|Elf32_Sym <aMemset - byte_16C0, dword_0, 0, 0x12, 0, 0>; "memset"|97-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1888|data|Elf32_Sym <aAllocConfig - byte_16C0, dword_0, 0, 0x12, 0, 0>; "alloc_config"|68-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1904|data|Elf32_Sym <aDmGetInfo - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_get_info"|250-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1920|data|Elf32_Sym <aSetsid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "setsid"|85-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1936|data|Elf32_Sym <aCheckerDisable - byte_16C0, dword_0, 0, 0x12, 0, 0>; "checker_disable"|18-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1952|data|Elf32_Sym <aSnprintBlackli - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_blacklist_report"|133-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1968|data|Elf32_Sym <aStartWaiterThr - byte_16C0, dword_0, 0, 0x12, 0, 0>; "start_waiter_thread"|189-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1984|data|Elf32_Sym <aPathDiscovery - byte_16C0, dword_0, 0, 0x12, 0, 0>; "path_discovery"|174-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2000|data|Elf32_Sym <aUeventGetDiskR - byte_16C0, dword_0, 0, 0x12, 0, 0>; "uevent_get_disk_ro"|169-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2016|data|Elf32_Sym <aFreePathvec - byte_16C0, dword_0, 0, 0x12, 0, 0>; "free_pathvec"|131-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2032|data|Elf32_Sym <aUdevDeviceRef - byte_16C0, dword_0, 0, 0x12, 0, 0>; "udev_device_ref"|150-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2048|data|Elf32_Sym <aPpoll - byte_16C0, dword_0, 0, 0x12, 0, 0>; "ppoll"|158-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2064|data|Elf32_Sym <aUeventGetMinor - byte_16C0, dword_0, 0, 0x12, 0, 0>; "uevent_get_minor"|49-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2080|data|Elf32_Sym <aDmGetMaps - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_get_maps"|6-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2096|data|Elf32_Sym <aUpdateMppPaths - byte_16C0, dword_0, 0, 0x12, 0, 0>; "update_mpp_paths"|89-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2112|data|Elf32_Sym <aItmDeregistert - byte_16C0, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|17-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2128|data|Elf32_Sym <aDmLibExit+6 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "_exit"|205-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2144|data|Elf32_Sym <aUdevNew - byte_16C0, dword_0, 0, 0x12, 0, 0>; "udev_new"|91-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2160|data|Elf32_Sym <aGetuid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "getuid"|11-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2176|data|Elf32_Sym <aFilterWwid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "filter_wwid"|26-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2192|data|Elf32_Sym <aRemoveMapAndSt - byte_16C0, dword_0, 0, 0x12, 0, 0>; "remove_map_and_stop_waiter"|49-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2208|data|Elf32_Sym <aOptind - byte_16C0, dword_0, 0, 0x11, 0, 0>; "optind"|212-10-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2224|data|Elf32_Sym <aVectorFree+7 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "free"|194-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2240|data|Elf32_Sym <aFindMpByAlias - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_mp_by_alias"|141-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2256|data|Elf32_Sym <aFwrite+1 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "write"|29-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2272|data|Elf32_Sym <aUdevSetSyncSup - byte_16C0, dword_0, 0, 0x12, 0, 0>; "udev_set_sync_support"|149-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2288|data|Elf32_Sym <aSetupMultipath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__setup_multipath"|209-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2304|data|Elf32_Sym <aUpdateQueueMod - byte_16C0, dword_0, 0, 0x12, 0, 0>; "update_queue_mode_add_path"|230-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2320|data|Elf32_Sym <aFindSlot - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_slot"|240-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2336|data|Elf32_Sym <aItmRegistertmc - byte_16C0, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|65-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2352|data|Elf32_Sym <aLogReset - byte_16C0, dword_0, 0, 0x12, 0, 0>; "log_reset"|28-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2368|data|Elf32_Sym <aGettimeofday - byte_16C0, dword_0, 0, 0x12, 0, 0>; "gettimeofday"|35-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2384|data|Elf32_Sym <aInitCheckers - byte_16C0, dword_0, 0, 0x12, 0, 0>; "init_checkers"|15-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2400|data|Elf32_Sym <aDmType - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_type"|66-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2416|data|Elf32_Sym <aAccept - byte_16C0, dword_0, 0, 0x12, 0, 0>; "accept"|73-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2432|data|Elf32_Sym <aMpathAllocPrin - byte_16C0, dword_0, 0, 0x12, 0, 0>; "mpath_alloc_prin_response"|229-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2448|data|Elf32_Sym <aDomap - byte_16C0, dword_0, 0, 0x12, 0, 0>; "domap"|76-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2464|data|Elf32_Sym <aCheckerMessage - byte_16C0, dword_0, 0, 0x12, 0, 0>; "checker_message"|233-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2480|data|Elf32_Sym <aOrphanPaths - byte_16C0, dword_0, 0, 0x12, 0, 0>; "orphan_paths"|252-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2496|data|Elf32_Sym <aPthreadMutexUn - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|137-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2512|data|Elf32_Sym <aDmInit - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_init"|200-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2528|data|Elf32_Sym <aUmask - byte_16C0, dword_0, 0, 0x12, 0, 0>; "umask"|176-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2544|data|Elf32_Sym <aLogThreadStart - byte_16C0, dword_0, 0, 0x12, 0, 0>; "log_thread_start"|106-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2560|data|Elf32_Sym <aRemoveMaps - byte_16C0, dword_0, 0, 0x12, 0, 0>; "remove_maps"|188-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2576|data|Elf32_Sym <aDmLibExit - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_lib_exit"|199-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2592|data|Elf32_Sym <aSendPacket - byte_16C0, dword_0, 0, 0x12, 0, 0>; "send_packet"|34-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2608|data|Elf32_Sym <aIsatty - byte_16C0, dword_0, 0, 0x12, 0, 0>; "isatty"|60-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2624|data|Elf32_Sym <aDmGetMinor - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_get_minor"|154-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2640|data|Elf32_Sym <aRlCompletionEn - byte_16C0, dword_0, 0, 0x11, 0, 0>; "rl_completion_entry_function"|251-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2656|data|Elf32_Sym <aPthreadMutexLo - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|32-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2672|data|Elf32_Sym <aSnprintBlackli_1 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_blacklist"|144-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2688|data|Elf32_Sym <aStrlen - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strlen"|67-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2704|data|Elf32_Sym <aCleanupPrio - byte_16C0, dword_0, 0, 0x12, 0, 0>; "cleanup_prio"|160-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2720|data|Elf32_Sym <aWaiterAttr - byte_16C0, dword_0, 0, 0x11, 0, 0>; "waiter_attr"|5-9-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2736|data|Elf32_Sym <aUnlink - byte_16C0, dword_0, 0, 0x12, 0, 0>; "unlink"|25-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2752|data|Elf32_Sym <aGetopt - byte_16C0, dword_0, 0, 0x12, 0, 0>; "getopt"|124-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2768|data|Elf32_Sym <aPthreadCreate - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_create"|171-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2784|data|Elf32_Sym <aDmReassign - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_reassign"|137-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2800|data|Elf32_Sym <aStorePathinfo+6 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pathinfo"|80-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2816|data|Elf32_Sym <aVectorAllocSlo - byte_16C0, dword_0, 0, 0x12, 0, 0>; "vector_alloc_slot"|125-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2832|data|Elf32_Sym <aPrinDoScsiIoct - byte_16C0, dword_0, 0, 0x12, 0, 0>; "prin_do_scsi_ioctl"|255-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2848|data|Elf32_Sym <aFindMpByMinor - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_mp_by_minor"|97-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2864|data|Elf32_Sym <aVectorFree - byte_16C0, dword_0, 0, 0x12, 0, 0>; "vector_free"|187-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2880|data|Elf32_Sym <aUdevDeviceUnre - byte_16C0, dword_0, 0, 0x12, 0, 0>; "udev_device_unref"|73-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2896|data|Elf32_Sym <aStrtol - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strtol"|53-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2912|data|Elf32_Sym <aSigaddset - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sigaddset"|145-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2928|data|Elf32_Sym <aAddMapWithoutP - byte_16C0, dword_0, 0, 0x12, 0, 0>; "add_map_without_path"|5-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2944|data|Elf32_Sym <aSemPost - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sem_post"|91-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2960|data|Elf32_Sym <aSnprintMultipa_1 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_multipath_topology"|162-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2976|data|Elf32_Sym <aPthreadSigmask - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_sigmask"|223-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2992|data|Elf32_Sym <aPthreadMutexDe - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_destroy"|51-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3008|data|Elf32_Sym <aUpdateMapPr - byte_16C0, dword_0, 0, 0x12, 0, 0>; "update_map_pr"|26-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3024|data|Elf32_Sym <aDmFailPath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_fail_path"|239-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3040|data|Elf32_Sym <aStackChkGuard - byte_16C0, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|193-12-0-0-0-0-0-0-0-0-0-0-17-0-0-0
3056|data|Elf32_Sym <aDmMapname - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_mapname"|94-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3072|data|Elf32_Sym <aVerifyPaths - byte_16C0, dword_0, 0, 0x12, 0, 0>; "verify_paths"|226-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3088|data|Elf32_Sym <aSetupMap - byte_16C0, dword_0, 0, 0x12, 0, 0>; "setup_map"|223-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3104|data|Elf32_Sym <aRecvPacket - byte_16C0, dword_0, 0, 0x12, 0, 0>; "recv_packet"|218-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3120|data|Elf32_Sym <aSnprintStatus - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_status"|38-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3136|data|Elf32_Sym <aMlockall - byte_16C0, dword_0, 0, 0x12, 0, 0>; "mlockall"|48-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3152|data|Elf32_Sym <aCheckerClearMe - byte_16C0, dword_0, 0, 0x12, 0, 0>; "checker_clear_message"|245-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3168|data|Elf32_Sym <aSelectPathGrou - byte_16C0, dword_0, 0, 0x12, 0, 0>; "select_path_group"|113-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3184|data|Elf32_Sym <aDmSwitchgroup - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_switchgroup"|126-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3200|data|Elf32_Sym <aSetupThreadAtt - byte_16C0, dword_0, 0, 0x12, 0, 0>; "setup_thread_attr"|27-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3216|data|Elf32_Sym <aSnprintWildcar - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_wildcards"|208-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3232|data|Elf32_Sym <aSnprintfChk - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|252-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3248|data|Elf32_Sym <aPthreadMutexIn - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_mutex_init"|127-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3264|data|Elf32_Sym <aVectorAlloc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "vector_alloc"|141-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3280|data|Elf32_Sym <aFindPathByDevt - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_path_by_devt"|227-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3296|data|Elf32_Sym <aStrstr - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strstr"|104-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3312|data|Elf32_Sym <aUdevUnref - byte_16C0, dword_0, 0, 0x12, 0, 0>; "udev_unref"|100-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3328|data|Elf32_Sym <aUeventGetMajor - byte_16C0, dword_0, 0, 0x12, 0, 0>; "uevent_get_major"|230-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3344|data|Elf32_Sym <aPathOffline - byte_16C0, dword_0, 0, 0x12, 0, 0>; "path_offline"|203-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3360|data|Elf32_Sym <aFclose+1 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "close"|163-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3376|data|Elf32_Sym <aUpdateMultipat_0 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "update_multipath"|177-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3392|data|Elf32_Sym <aProutDoScsiIoc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "prout_do_scsi_ioctl"|40-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3408|data|Elf32_Sym <aDmFlushMap - byte_16C0, dword_0, 0, 0x12, 0, 0>; "_dm_flush_map"|216-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3424|data|Elf32_Sym <aFwrite - byte_16C0, dword_0, 0, 0x12, 0, 0>; "fwrite"|28-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3440|data|Elf32_Sym <aUpdateQueueMod_0 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "update_queue_mode_del_path"|1-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3456|data|Elf32_Sym <aUdevDeviceNewF - byte_16C0, dword_0, 0, 0x12, 0, 0>; "udev_device_new_from_subsystem_sysname"|111-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3472|data|Elf32_Sym <aCleanupChecker - byte_16C0, dword_0, 0, 0x12, 0, 0>; "cleanup_checkers"|143-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3488|data|Elf32_Sym <aReloadMap - byte_16C0, dword_0, 0, 0x12, 0, 0>; "reload_map"|158-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3504|data|Elf32_Sym <aDmQueueIfNoPat - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_queue_if_no_path"|29-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3520|data|Elf32_Sym <aCtypeBLoc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__ctype_b_loc"|207-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3536|data|Elf32_Sym <aDmReinstatePat - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_reinstate_path"|61-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3552|data|Elf32_Sym <aReadline - byte_16C0, dword_0, 0, 0x12, 0, 0>; "readline"|24-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3568|data|Elf32_Sym <aMalloc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "malloc"|169-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3584|data|Elf32_Sym <aGetPathLayout - byte_16C0, dword_0, 0, 0x12, 0, 0>; "get_path_layout"|226-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3600|data|Elf32_Sym <aRemoveMap - byte_16C0, dword_0, 0, 0x12, 0, 0>; "remove_map"|17-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3616|data|Elf32_Sym <aStackChkFail - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|8-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3632|data|Elf32_Sym <aSigaction - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sigaction"|100-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3648|data|Elf32_Sym <aSigdelset - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sigdelset"|242-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3664|data|Elf32_Sym <aChdir - byte_16C0, dword_0, 0, 0x12, 0, 0>; "chdir"|111-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3680|data|Elf32_Sym <aFprintfChk - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|131-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3696|data|Elf32_Sym <aPthreadAttrIni - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_attr_init"|110-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3712|data|Elf32_Sym <aAllocStrvec - byte_16C0, dword_0, 0, 0x12, 0, 0>; "alloc_strvec"|112-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3728|data|Elf32_Sym <aDmMapPresent - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_map_present"|60-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3744|data|Elf32_Sym <aVectorDelSlot - byte_16C0, dword_0, 0, 0x12, 0, 0>; "vector_del_slot"|121-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3760|data|Elf32_Sym <aLogqLock - byte_16C0, dword_0, 0, 0x11, 0, 0>; "logq_lock"|123-7-0-0-0-0-0-0-0-0-0-0-17-0-0-0
3776|data|Elf32_Sym <aFtruncate - byte_16C0, dword_0, 0, 0x12, 0, 0>; "ftruncate"|202-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3792|data|Elf32_Sym <aSnprintDefault - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_defaults"|242-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3808|data|Elf32_Sym <aSleep - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sleep"|64-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3824|data|Elf32_Sym <aDmGetMajor - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_get_major"|133-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3840|data|Elf32_Sym <aDmSimplecmdNof - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dm_simplecmd_noflush"|39-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3856|data|Elf32_Sym <aFindPathByDev - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_path_by_dev"|80-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3872|data|Elf32_Sym <aGroupByPrio - byte_16C0, dword_0, 0, 0x12, 0, 0>; "group_by_prio"|173-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3888|data|Elf32_Sym <aPthreadTestcan - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_testcancel"|102-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3904|data|Elf32_Sym <aInitPrio - byte_16C0, dword_0, 0, 0x12, 0, 0>; "init_prio"|45-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3920|data|Elf32_Sym <aZalloc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "zalloc"|167-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3936|data|Elf32_Sym <aSnprintPath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_path"|158-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3952|data|Elf32_Sym <aUxSocketConnec - byte_16C0, dword_0, 0, 0x12, 0, 0>; "ux_socket_connect"|94-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3968|data|Elf32_Sym <aPuts - byte_16C0, dword_0, 0, 0x12, 0, 0>; "puts"|3-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
3984|data|Elf32_Sym <aFilterPath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "filter_path"|214-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4000|data|Elf32_Sym <aStdout - byte_16C0, dword_0, 0, 0x11, 0, 0>; "stdout"|155-11-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4016|data|Elf32_Sym <aGetpid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "getpid"|46-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4032|data|Elf32_Sym <aUeventGetDmNam - byte_16C0, dword_0, 0, 0x12, 0, 0>; "uevent_get_dm_name"|194-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4048|data|Elf32_Sym <aGetState - byte_16C0, dword_0, 0, 0x12, 0, 0>; "get_state"|29-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4064|data|Elf32_Sym <aSnprintMptable - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_mptable"|161-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4080|data|Elf32_Sym <aRemoveMapsAndS - byte_16C0, dword_0, 0, 0x12, 0, 0>; "remove_maps_and_stop_waiters"|112-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4096|data|Elf32_Sym <aRlReadlineName - byte_16C0, dword_0, 0, 0x11, 0, 0>; "rl_readline_name"|228-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4112|data|Elf32_Sym <aFreeStrvec - byte_16C0, dword_0, 0, 0x12, 0, 0>; "free_strvec"|82-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4128|data|Elf32_Sym <aFcntl - byte_16C0, dword_0, 0, 0x12, 0, 0>; "fcntl"|121-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4144|data|Elf32_Sym <aStrdup+5 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dup"|224-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4160|data|Elf32_Sym <aFork - byte_16C0, dword_0, 0, 0x12, 0, 0>; "fork"|218-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4176|data|Elf32_Sym <aPthreadAttrDes - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_attr_destroy"|11-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4192|data|Elf32_Sym <aStderr - byte_16C0, dword_0, 0, 0x11, 0, 0>; "stderr"|235-11-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4208|data|Elf32_Sym <aSnprintMultipa_0 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_multipath"|11-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4224|data|Elf32_Sym <aOptarg - byte_16C0, dword_0, 0, 0x11, 0, 0>; "optarg"|228-11-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4240|data|Elf32_Sym <aSnprintf - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprintf"|164-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4256|data|Elf32_Sym <aSprintfChk - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__sprintf_chk"|92-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4272|data|Elf32_Sym <aStrncmp - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strncmp"|194-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4288|data|Elf32_Sym <aGetRefwwid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "get_refwwid"|116-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4304|data|Elf32_Sym <aRealloc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "realloc"|32-11-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4320|data|Elf32_Sym <aAddHistory - byte_16C0, dword_0, 0, 0x12, 0, 0>; "add_history"|48-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4336|data|Elf32_Sym <aGetrlimit - byte_16C0, dword_0, 0, 0x12, 0, 0>; "getrlimit"|114-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4352|data|Elf32_Sym <aIoPutc - byte_16C0, dword_0, 0, 0x12, 0, 0>; "_IO_putc"|179-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4368|data|Elf32_Sym <aStrdup - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__strdup"|219-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4384|data|Elf32_Sym <aUnwindResume - byte_16C0, dword_0, 0, 0x12, 0, 0>; "_Unwind_Resume"|120-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4400|data|Elf32_Sym <aAeabiUnwindCpp_0 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr1"|97-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4416|data|Elf32_Sym <aSemWait - byte_16C0, dword_0, 0, 0x12, 0, 0>; "sem_wait"|93-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4432|data|Elf32_Sym <aCoalescePaths - byte_16C0, dword_0, 0, 0x12, 0, 0>; "coalesce_paths"|82-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4448|data|Elf32_Sym <aSnprintMultipa - byte_16C0, dword_0, 0, 0x12, 0, 0>; "snprint_multipath_header"|91-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4464|data|Elf32_Sym <aGetMultipathLa - byte_16C0, dword_0, 0, 0x12, 0, 0>; "get_multipath_layout"|28-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4480|data|Elf32_Sym <aUeventDispatch - byte_16C0, dword_0, 0, 0x12, 0, 0>; "uevent_dispatch"|66-9-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4496|data|Elf32_Sym <aFindMpByStr - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_mp_by_str"|53-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4512|data|Elf32_Sym <aVectorSetSlot - byte_16C0, dword_0, 0, 0x12, 0, 0>; "vector_set_slot"|202-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4528|data|Elf32_Sym <aStrcmp - byte_16C0, dword_0, 0, 0x12, 0, 0>; "strcmp"|124-12-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4544|data|Elf32_Sym <aUpdateMultipat - byte_16C0, dword_0, 0, 0x12, 0, 0>; "update_multipath_strings"|55-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4560|data|Elf32_Sym <aDmLibExit+7 - byte_16C0, dword_0, 0, 0x12, 0, 0>; "exit"|206-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4576|data|Elf32_Sym <aDumphex - byte_16C0, dword_0, 0, 0x12, 0, 0>; "dumpHex"|18-10-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4592|data|Elf32_Sym <aErrnoLocation - byte_16C0, dword_0, 0, 0x12, 0, 0>; "__errno_location"|201-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4608|data|Elf32_Sym <aPthreadCancel - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_cancel"|186-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4624|data|Elf32_Sym <aAdoptPaths - byte_16C0, dword_0, 0, 0x12, 0, 0>; "adopt_paths"|79-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4640|data|Elf32_Sym <aRlLineBuffer - byte_16C0, dword_0, 0, 0x11, 0, 0>; "rl_line_buffer"|33-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
4656|data|Elf32_Sym <aCxaFinalize - byte_16C0, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|70-12-0-0-0-0-0-0-0-0-0-0-34-0-0-0
4672|data|Elf32_Sym <aPthreadJoin - byte_16C0, dword_0, 0, 0x12, 0, 0>; "pthread_join"|158-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4688|data|Elf32_Sym <aLoadConfig - byte_16C0, dword_0, 0, 0x12, 0, 0>; "load_config"|249-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4704|data|Elf32_Sym <aAddMapWithPath - byte_16C0, dword_0, 0, 0x12, 0, 0>; "add_map_with_path"|9-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4720|data|Elf32_Sym <aFindMpByWwid - byte_16C0, dword_0, 0, 0x12, 0, 0>; "find_mp_by_wwid"|105-8-0-0-0-0-0-0-0-0-0-0-18-0-0-0
4736|data|Elf32_Sym <aCliShutdown - byte_16C0, cli_shutdown+1, 0x2C, 0x12, 0, \; "cli_shutdown"|160-15-0-0-61-151-0-0-44-0-0-0-18-0-13-0
4752|data|Elf32_Sym <aCliUnsetprstat - byte_16C0, cli_unsetprstatus+1, 0x60, \; "cli_unsetprstatus"|128-15-0-0-125-152-0-0-96-0-0-0-18-0-13-0
4768|data|Elf32_Sym <aCliForceNoDaem - byte_16C0, cli_force_no_daemon_q+1, 0x38,\; "cli_force_no_daemon_q"|87-13-0-0-145-144-0-0-56-0-0-0-18-0-13-0
4784|data|Elf32_Sym <aRunningState - byte_16C0, running_state, 4, 0x11, 0, 0x19>; "running_state"|142-14-0-0-100-192-1-0-4-0-0-0-17-0-25-0
4800|data|Elf32_Sym <aCliRestoreAllQ - byte_16C0, cli_restore_all_queueing+1, \; "cli_restore_all_queueing"|87-15-0-0-205-145-0-0-156-0-0-0-18-0-13-0
4816|data|Elf32_Sym <aUevTrigger - byte_16C0, uev_trigger+1, 0x4AC, 0x12, 0, \; "uev_trigger"|240-15-0-0-141-95-0-0-172-4-0-0-18-0-13-0
4832|data|Elf32_Sym <aCliListPaths - byte_16C0, cli_list_paths+1, 0x40, 0x12, 0,\; "cli_list_paths"|45-14-0-0-133-133-0-0-64-0-0-0-18-0-13-0
4848|data|Elf32_Sym <aCliReconfigure - byte_16C0, cli_reconfigure+1, 0x30, 0x12,\; "cli_reconfigure"|117-14-0-0-189-147-0-0-48-0-0-0-18-0-13-0
4864|data|Elf32_Sym <aCliQuit - byte_16C0, cli_quit+1, 4, 0x12, 0, 0xD>; "cli_quit"|133-14-0-0-57-151-0-0-4-0-0-0-18-0-13-0
4880|data|Elf32_Sym <aUxsockTrigger - byte_16C0, uxsock_trigger+1, 0xA0, 0x12, \; "uxsock_trigger"|160-13-0-0-213-73-0-0-160-0-0-0-18-0-13-0
4896|data|Elf32_Sym <aCliAddMap - byte_16C0, cli_add_map+1, 0x154, 0x12, 0, 0xD>; "cli_add_map"|70-15-0-0-77-139-0-0-84-1-0-0-18-0-13-0
4912|data|Elf32_Sym <aDaemonPid - byte_16C0, daemon_pid, 4, 0x11, 0, 0x19>; "daemon_pid"|208-15-0-0-128-192-1-0-4-0-0-0-17-0-25-0
4928|data|Elf32_Sym <aCliListStatus - byte_16C0, cli_list_status+1, 0x38, 0x12, \; "cli_list_status"|125-13-0-0-193-136-0-0-56-0-0-0-18-0-13-0
4944|data|Elf32_Sym <aCliSuspend - byte_16C0, cli_suspend+1, 0x70, 0x12, 0, 0xD>; "cli_suspend"|192-14-0-0-237-147-0-0-112-0-0-0-18-0-13-0
4960|data|Elf32_Sym <aCliAddPath - byte_16C0, cli_add_path+1, 0x13C, 0x12, 0, \; "cli_add_path"|227-14-0-0-173-137-0-0-60-1-0-0-18-0-13-0
4976|data|Elf32_Sym <aSleepTime - byte_16C0, sleep_time, 8, 0x11, 0, 0x18>; "sleep_time"|1-15-0-0-12-192-1-0-8-0-0-0-17-0-24-0
4992|data|Elf32_Sym <aCliListPathsFm - byte_16C0, cli_list_paths_fmt+1, 0x44, \; "cli_list_paths_fmt"|141-13-0-0-197-133-0-0-68-0-0-0-18-0-13-0
5008|data|Elf32_Sym <aLibcCsuFini+0xA - byte_16C0, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|119-13-0-0-32-153-0-0-0-0-0-0-18-0-14-0
5024|data|Elf32_Sym <aCliListMapsSta_0 - byte_16C0, cli_list_maps_stats+1, 0x40,\; "cli_list_maps_stats"|156-14-0-0-57-137-0-0-64-0-0-0-18-0-13-0
5040|data|Elf32_Sym <aMpathMxAllocLe - byte_16C0, mpath_mx_alloc_len, 4, 0x11, \; "mpath_mx_alloc_len"|210-9-0-0-124-192-1-0-4-0-0-0-17-0-25-0
5056|data|Elf32_Sym <aCliSwitchGroup - byte_16C0, cli_switch_group+1, 0x60, \; "cli_switch_group"|21-16-0-0-93-147-0-0-96-0-0-0-18-0-13-0
5072|data|Elf32_Sym <aCliListConfig - byte_16C0, cli_list_config+1, 0x34, 0x12, \; "cli_list_config"|26-13-0-0-81-133-0-0-52-0-0-0-18-0-13-0
5088|data|Elf32_Sym <aEnd - byte_16C0, _end, 0, 0x10, 0, 0x19>; "__end__"|13-13-0-0-136-192-1-0-0-0-0-0-16-0-25-0
5104|data|Elf32_Sym <aCliListMapsFmt - byte_16C0, cli_list_maps_fmt+1, 0x44, \; "cli_list_maps_fmt"|42-13-0-0-61-136-0-0-68-0-0-0-18-0-13-0
5120|data|Elf32_Sym <aLibcCsuFini - byte_16C0, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|109-13-0-0-29-153-0-0-2-0-0-0-18-0-13-0
5136|data|Elf32_Sym <aReconfigSig - byte_16C0, reconfig_sig, 4, 0x11, 0, 0x19>; "reconfig_sig"|33-15-0-0-56-192-1-0-4-0-0-0-17-0-25-0
5152|data|Elf32_Sym <aMpathPrEventHa - byte_16C0, mpath_pr_event_handler_fn+1, \; "mpath_pr_event_handler_fn"|241-13-0-0-189-75-0-0-80-2-0-0-18-0-13-0
5168|data|Elf32_Sym <aCliReinstate - byte_16C0, cli_reinstate+1, 0x84, 0x12, 0, \; "cli_reinstate"|31-14-0-0-205-148-0-0-132-0-0-0-18-0-13-0
5184|data|Elf32_Sym <aDmInit+2 - byte_16C0, .init_proc, 0, 0x12, 0, 0xB>; "_init"|202-3-0-0-112-51-0-0-0-0-0-0-18-0-11-0
5200|data|Elf32_Sym <aLibcCsuInit - byte_16C0, __libc_csu_init+1, 0x40, 0x12, 0,\; "__libc_csu_init"|176-14-0-0-221-152-0-0-64-0-0-0-18-0-13-0
5216|data|Elf32_Sym <aBssEnd - byte_16C0, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|1-13-0-0-136-192-1-0-0-0-0-0-16-0-25-0
5232|data|Elf32_Sym <aLogsink - byte_16C0, logsink, 4, 0x11, 0, 0x19>; "logsink"|195-2-0-0-120-192-1-0-4-0-0-0-17-0-25-0
5248|data|Elf32_Sym <aCliListMapTopo - byte_16C0, cli_list_map_topology+1, 0x68,\; "cli_list_map_topology"|44-16-0-0-9-134-0-0-104-0-0-0-18-0-13-0
5264|data|Elf32_Sym <aCliReload - byte_16C0, cli_reload+1, 0x88, 0x12, 0, 0xD>; "cli_reload"|46-15-0-0-157-141-0-0-136-0-0-0-18-0-13-0
5280|data|Elf32_Sym <aCliDisableAllQ - byte_16C0, cli_disable_all_queueing+1, \; "cli_disable_all_queueing"|252-15-0-0-249-146-0-0-100-0-0-0-18-0-13-0
5296|data|Elf32_Sym <aGvecs - byte_16C0, gvecs, 4, 0x11, 0, 0x19>; "gvecs"|81-13-0-0-88-192-1-0-4-0-0-0-17-0-25-0
5312|data|Elf32_Sym <aCliListBlackli - byte_16C0, cli_list_blacklist+1, 0x34, \; "cli_list_blacklist"|173-15-0-0-113-150-0-0-52-0-0-0-18-0-13-0
5328|data|Elf32_Sym <aCliSetprstatus - byte_16C0, cli_setprstatus+1, 0x64, 0x12,\; "cli_setprstatus"|192-15-0-0-25-152-0-0-100-0-0-0-18-0-13-0
5344|data|Elf32_Sym <aCliDelMap - byte_16C0, cli_del_map+1, 0xFC, 0x12, 0, 0xD>; "cli_del_map"|189-13-0-0-161-140-0-0-252-0-0-0-18-0-13-0
5360|data|Elf32_Sym <aCliDisableQueu - byte_16C0, cli_disable_queueing+1, 0x90, \; "cli_disable_queueing"|12-15-0-0-105-146-0-0-144-0-0-0-18-0-13-0
5376|data|Elf32_Sym <aCliResume - byte_16C0, cli_resume+1, 0x70, 0x12, 0, 0xD>; "cli_resume"|11-14-0-0-93-148-0-0-112-0-0-0-18-0-13-0
5392|data|Elf32_Sym <aCliListMapsSta - byte_16C0, cli_list_maps_status+1, 0x40, \; "cli_list_maps_status"|60-13-0-0-249-136-0-0-64-0-0-0-18-0-13-0
5408|data|Elf32_Sym <aCliGetprstatus - byte_16C0, cli_getprstatus+1, 0xB0, 0x12,\; "cli_getprstatus"|225-13-0-0-105-151-0-0-176-0-0-0-18-0-13-0
5424|data|Elf32_Sym <aCliListWildcar - byte_16C0, cli_list_wildcards+1, 0x28, \; "cli_list_wildcards"|60-14-0-0-169-134-0-0-40-0-0-0-18-0-13-0
5440|data|Elf32_Sym <aCliDelPath - byte_16C0, cli_del_path+1, 0x64, 0x12, 0, \; "cli_del_path"|104-14-0-0-233-138-0-0-100-0-0-0-18-0-13-0
5456|data|Elf32_Sym <aBssStart_0 - byte_16C0, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|243-12-0-0-20-192-1-0-0-0-0-0-16-0-25-0
5472|data|Elf32_Sym <aCliListMaps - byte_16C0, cli_list_maps+1, 0x40, 0x12, 0, \; "cli_list_maps"|90-14-0-0-129-136-0-0-64-0-0-0-18-0-13-0
5488|data|Elf32_Sym <aCliReassign - byte_16C0, cli_reassign+1, 0x40, 0x12, 0, \; "cli_reassign"|57-15-0-0-81-149-0-0-64-0-0-0-18-0-13-0
5504|data|Elf32_Sym <aCliListDevices - byte_16C0, cli_list_devices+1, 0x38, \; "cli_list_devices"|240-14-0-0-1-151-0-0-56-0-0-0-18-0-13-0
5520|data|Elf32_Sym <aUdev - byte_16C0, udev, 4, 0x11, 0, 0x19>; "udev"|82-15-0-0-116-192-1-0-4-0-0-0-17-0-25-0
5536|data|Elf32_Sym <aCliRestoreNoDa - byte_16C0, cli_restore_no_daemon_q+1, \; "cli_restore_no_daemon_q"|201-13-0-0-201-144-0-0-60-0-0-0-18-0-13-0
5552|data|Elf32_Sym <aCliListMapsTop - byte_16C0, cli_list_maps_topology+1, \; "cli_list_maps_topology"|204-14-0-0-113-134-0-0-56-0-0-0-18-0-13-0
5568|data|Elf32_Sym <aDataStart - byte_16C0, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|211-12-0-0-0-192-1-0-0-0-0-0-16-0-24-0
5584|data|Elf32_Sym <aCliRestoreQueu - byte_16C0, cli_restore_queueing+1, 0xC8, \; "cli_restore_queueing"|219-15-0-0-5-145-0-0-200-0-0-0-18-0-13-0
5600|data|Elf32_Sym <aLibcStartMain+0xD - byte_16C0, main+1, 0xAB4, 0x12, 0, \; "main"|153-12-0-0-149-61-0-0-180-10-0-0-18-0-13-0
5616|data|Elf32_Sym <aEdata - byte_16C0, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|224-12-0-0-20-192-1-0-0-0-0-0-16-0-24-0
5632|data|Elf32_Sym <aCliListDaemon - byte_16C0, cli_list_daemon+1, 0x34, 0x12, \; "cli_list_daemon"|112-15-0-0-121-137-0-0-52-0-0-0-18-0-13-0
5648|data|Elf32_Sym <aEnd_0 - byte_16C0, _end, 0, 0x10, 0, 0x19>; "_end"|21-13-0-0-136-192-1-0-0-0-0-0-16-0-25-0
5664|data|Elf32_Sym <aCliFail - byte_16C0, cli_fail+1, 0x8C, 0x12, 0, 0xD>; "cli_fail"|22-14-0-0-145-149-0-0-140-0-0-0-18-0-13-0
5680|data|Elf32_Sym <aStream - byte_16C0, stream, 4, 0x11, 0, 0x19>; "stream"|203-2-0-0-112-192-1-0-4-0-0-0-17-0-25-0
5696|data|Elf32_Sym <aLogResetSig - byte_16C0, log_reset_sig, 4, 0x11, 0, 0x19>; "log_reset_sig"|175-13-0-0-52-192-1-0-4-0-0-0-17-0-25-0
5712|data|Elf32_Sym <aConf - byte_16C0, conf, 4, 0x11, 0, 0x19>; "conf"|128-3-0-0-96-192-1-0-4-0-0-0-17-0-25-0
5728|data|Elf32_Sym <aCliResize - byte_16C0, cli_resize+1, 0x18C, 0x12, 0, 0xD>; "cli_resize"|79-14-0-0-5-143-0-0-140-1-0-0-18-0-13-0
5744|data|Elf32_Sym <aBssEnd+1 - byte_16C0, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|2-13-0-0-136-192-1-0-0-0-0-0-16-0-25-0
5760|data|Elf32_Sym <aPolls - byte_16C0, polls, 4, 0x11, 0, 0x19>; "polls"|38-16-0-0-132-192-1-0-4-0-0-0-17-0-25-0
5776|data|Elf32_Sym <aKeyGenerator - byte_16C0, key_generator+1, 0x1A0, 0x12, 0,\; "key_generator"|146-15-0-0-105-128-0-0-160-1-0-0-18-0-13-0
5792|data|Elf32_Sym <aLa - byte_16C0, la, 4, 0x11, 0, 0x19>; "la"|38-9-0-0-104-192-1-0-4-0-0-0-17-0-25-0
5808|data|Elf32_Sym <aBssStart - byte_16C0, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|231-12-0-0-20-192-1-0-0-0-0-0-16-0-25-0
5824|data|DCB 0|0
5825|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
5841|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
5869|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
5889|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
5915|data|DCB "sem_post",0|115-101-109-95-112-111-115-116-0
5924|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
5934|data|DCB "pthread_attr_init",0|112-116-104-114-101-97-100-95-97-116-116-114-95-105-110-105-116-0
5952|data|DCB "sem_init",0|115-101-109-95-105-110-105-116-0
5961|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
5982|data|DCB "pthread_join",0|112-116-104-114-101-97-100-95-106-111-105-110-0
5995|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
6010|data|DCB "pthread_cancel",0|112-116-104-114-101-97-100-95-99-97-110-99-101-108-0
6025|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
6042|data|DCB "fork",0|102-111-114-107-0
6047|data|DCB "pthread_sigmask",0|112-116-104-114-101-97-100-95-115-105-103-109-97-115-107-0
6063|data|DCB "pthread_attr_setdetachstate",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-100-101-116-97-99-104-115-116-97-116-101-0
6091|data|DCB "pthread_attr_destroy",0|112-116-104-114-101-97-100-95-97-116-116-114-95-100-101-115-116-114-111-121-0
6112|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
6131|data|DCB "pthread_mutex_destroy",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-100-101-115-116-114-111-121-0
6153|data|DCB "accept",0|97-99-99-101-112-116-0
6160|data|DCB "pthread_exit",0|112-116-104-114-101-97-100-95-101-120-105-116-0
6173|data|DCB "sem_wait",0|115-101-109-95-119-97-105-116-0
6182|data|DCB "pthread_testcancel",0|112-116-104-114-101-97-100-95-116-101-115-116-99-97-110-99-101-108-0
6201|data|DCB "fcntl",0|102-99-110-116-108-0
6207|data|DCB "pthread_mutex_init",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-105-110-105-116-0
6226|data|DCB "libdevmapper.so.1.02.1",0|108-105-98-100-101-118-109-97-112-112-101-114-46-115-111-46-49-46-48-50-46-49-0
6249|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
6264|data|DCB "dm_lib_release",0|100-109-95-108-105-98-95-114-101-108-101-97-115-101-0
6279|data|DCB "dm_lib_exit",0|100-109-95-108-105-98-95-101-120-105-116-0
6291|data|DCB "libreadline.so.6",0|108-105-98-114-101-97-100-108-105-110-101-46-115-111-46-54-0
6308|data|DCB "rl_readline_name",0|114-108-95-114-101-97-100-108-105-110-101-95-110-97-109-101-0
6325|data|DCB "xfree",0|120-102-114-101-101-0
6331|data|DCB "rl_completion_entry_function",0|114-108-95-99-111-109-112-108-101-116-105-111-110-95-101-110-116-114-121-95-102-117-110-99-116-105-111-110-0
6360|data|DCB "readline",0|114-101-97-100-108-105-110-101-0
6369|data|DCB "rl_line_buffer",0|114-108-95-108-105-110-101-95-98-117-102-102-101-114-0
6384|data|DCB "add_history",0|97-100-100-95-104-105-115-116-111-114-121-0
6396|data|DCB "libudev.so.1",0|108-105-98-117-100-101-118-46-115-111-46-49-0
6409|data|DCB "udev_device_unref",0|117-100-101-118-95-100-101-118-105-99-101-95-117-110-114-101-102-0
6427|data|DCB "udev_new",0|117-100-101-118-95-110-101-119-0
6436|data|DCB "udev_unref",0|117-100-101-118-95-117-110-114-101-102-0
6447|data|DCB "udev_device_new_from_subsystem_sysname",0|117-100-101-118-95-100-101-118-105-99-101-95-110-101-119-95-102-114-111-109-95-115-117-98-115-121-115-116-101-109-95-115-121-115-110-97-109-101-0
6486|data|DCB "udev_device_ref",0|117-100-101-118-95-100-101-118-105-99-101-95-114-101-102-0
6502|data|DCB "libdl.so.2",0|108-105-98-100-108-46-115-111-46-50-0
6513|data|DCB "libmultipath.so.0",0|108-105-98-109-117-108-116-105-112-97-116-104-46-115-111-46-48-0
6531|data|DCB "logsink",0|108-111-103-115-105-110-107-0
6539|data|DCB "stream",0|115-116-114-101-97-109-0
6546|data|DCB "remember_wwid",0|114-101-109-101-109-98-101-114-95-119-119-105-100-0
6560|data|DCB "snprint_devices",0|115-110-112-114-105-110-116-95-100-101-118-105-99-101-115-0
6576|data|DCB "find_slot",0|102-105-110-100-95-115-108-111-116-0
6586|data|DCB "dm_get_info",0|100-109-95-103-101-116-95-105-110-102-111-0
6598|data|DCB "dm_get_maps",0|100-109-95-103-101-116-95-109-97-112-115-0
6610|data|DCB "checker_disable",0|99-104-101-99-107-101-114-95-100-105-115-97-98-108-101-0
6626|data|DCB "send_packet",0|115-101-110-100-95-112-97-99-107-101-116-0
6638|data|DCB "filter_devnode",0|102-105-108-116-101-114-95-100-101-118-110-111-100-101-0
6653|data|DCB "dm_reinstate_path",0|100-109-95-114-101-105-110-115-116-97-116-101-95-112-97-116-104-0
6671|data|DCB "adopt_paths",0|97-100-111-112-116-95-112-97-116-104-115-0
6683|data|DCB "snprint_multipath_header",0|115-110-112-114-105-110-116-95-109-117-108-116-105-112-97-116-104-95-104-101-97-100-101-114-0
6708|data|DCB "get_refwwid",0|103-101-116-95-114-101-102-119-119-105-100-0
6720|data|DCB "conf",0|99-111-110-102-0
6725|data|DCB "snprint_blacklist_report",0|115-110-112-114-105-110-116-95-98-108-97-99-107-108-105-115-116-95-114-101-112-111-114-116-0
6750|data|DCB "reload_map",0|114-101-108-111-97-100-95-109-97-112-0
6761|data|DCB "uevent_get_disk_ro",0|117-101-118-101-110-116-95-103-101-116-95-100-105-115-107-95-114-111-0
6780|data|DCB "remove_maps",0|114-101-109-111-118-101-95-109-97-112-115-0
6792|data|DCB "dm_init",0|100-109-95-105-110-105-116-0
6800|data|DCB "snprint_wildcards",0|115-110-112-114-105-110-116-95-119-105-108-100-99-97-114-100-115-0
6818|data|DCB "verify_paths",0|118-101-114-105-102-121-95-112-97-116-104-115-0
6831|data|DCB "dm_fail_path",0|100-109-95-102-97-105-108-95-112-97-116-104-0
6844|data|DCB "orphan_paths",0|111-114-112-104-97-110-95-112-97-116-104-115-0
6857|data|DCB "add_map_with_path",0|97-100-100-95-109-97-112-95-119-105-116-104-95-112-97-116-104-0
6875|data|DCB "setup_thread_attr",0|115-101-116-117-112-95-116-104-114-101-97-100-95-97-116-116-114-0
6893|data|DCB "init_prio",0|105-110-105-116-95-112-114-105-111-0
6903|data|DCB "update_multipath_strings",0|117-112-100-97-116-101-95-109-117-108-116-105-112-97-116-104-95-115-116-114-105-110-103-115-0
6928|data|DCB "find_path_by_dev",0|102-105-110-100-95-112-97-116-104-95-98-121-95-100-101-118-0
6945|data|DCB "find_mp_by_minor",0|102-105-110-100-95-109-112-95-98-121-95-109-105-110-111-114-0
6962|data|DCB "convert_dev",0|99-111-110-118-101-114-116-95-100-101-118-0
6974|data|DCB "dm_switchgroup",0|100-109-95-115-119-105-116-99-104-103-114-111-117-112-0
6989|data|DCB "find_mp_by_alias",0|102-105-110-100-95-109-112-95-98-121-95-97-108-105-97-115-0
7006|data|DCB "snprint_path",0|115-110-112-114-105-110-116-95-112-97-116-104-0
7019|data|DCB "sysfs_get_size",0|115-121-115-102-115-95-103-101-116-95-115-105-122-101-0
7034|data|DCB "snprint_hwtable",0|115-110-112-114-105-110-116-95-104-119-116-97-98-108-101-0
7050|data|DCB "vector_set_slot",0|118-101-99-116-111-114-95-115-101-116-95-115-108-111-116-0
7066|data|DCB "recv_packet",0|114-101-99-118-95-112-97-99-107-101-116-0
7078|data|DCB "update_queue_mode_add_path",0|117-112-100-97-116-101-95-113-117-101-117-101-95-109-111-100-101-95-97-100-100-95-112-97-116-104-0
7105|data|DCB "update_queue_mode_del_path",0|117-112-100-97-116-101-95-113-117-101-117-101-95-109-111-100-101-95-100-101-108-95-112-97-116-104-0
7132|data|DCB "get_multipath_layout",0|103-101-116-95-109-117-108-116-105-112-97-116-104-95-108-97-121-111-117-116-0
7153|data|DCB "remove_map_and_stop_waiter",0|114-101-109-111-118-101-95-109-97-112-95-97-110-100-95-115-116-111-112-95-119-97-105-116-101-114-0
7180|data|DCB "domap",0|100-111-109-97-112-0
7186|data|DCB "free_strvec",0|102-114-101-101-95-115-116-114-118-101-99-0
7198|data|DCB "ux_socket_connect",0|117-120-95-115-111-99-107-101-116-95-99-111-110-110-101-99-116-0
7216|data|DCB "remove_maps_and_stop_waiters",0|114-101-109-111-118-101-95-109-97-112-115-95-97-110-100-95-115-116-111-112-95-119-97-105-116-101-114-115-0
7245|data|DCB "vector_alloc",0|118-101-99-116-111-114-95-97-108-108-111-99-0
7258|data|DCB "dm_get_minor",0|100-109-95-103-101-116-95-109-105-110-111-114-0
7271|data|DCB "zalloc",0|122-97-108-108-111-99-0
7278|data|DCB "path_discovery",0|112-97-116-104-95-100-105-115-99-111-118-101-114-121-0
7293|data|DCB "start_waiter_thread",0|115-116-97-114-116-95-119-97-105-116-101-114-95-116-104-114-101-97-100-0
7313|data|DCB "__setup_multipath",0|95-95-115-101-116-117-112-95-109-117-108-116-105-112-97-116-104-0
7331|data|DCB "find_path_by_devt",0|102-105-110-100-95-112-97-116-104-95-98-121-95-100-101-118-116-0
7349|data|DCB "checker_clear_message",0|99-104-101-99-107-101-114-95-99-108-101-97-114-95-109-101-115-115-97-103-101-0
7371|data|DCB "snprint_multipath",0|115-110-112-114-105-110-116-95-109-117-108-116-105-112-97-116-104-0
7389|data|DCB "get_state",0|103-101-116-95-115-116-97-116-101-0
7399|data|DCB "dm_simplecmd_noflush",0|100-109-95-115-105-109-112-108-101-99-109-100-95-110-111-102-108-117-115-104-0
7420|data|DCB "dm_map_present",0|100-109-95-109-97-112-95-112-114-101-115-101-110-116-0
7435|data|DCB "checker_enable",0|99-104-101-99-107-101-114-95-101-110-97-98-108-101-0
7450|data|DCB "ux_socket_listen",0|117-120-95-115-111-99-107-101-116-95-108-105-115-116-101-110-0
7467|data|DCB "dlog",0|100-108-111-103-0
7472|data|DCB "alloc_strvec",0|97-108-108-111-99-95-115-116-114-118-101-99-0
7485|data|DCB "vector_alloc_slot",0|118-101-99-116-111-114-95-97-108-108-111-99-95-115-108-111-116-0
7503|data|DCB "cleanup_checkers",0|99-108-101-97-110-117-112-95-99-104-101-99-107-101-114-115-0
7520|data|DCB "cleanup_prio",0|99-108-101-97-110-117-112-95-112-114-105-111-0
7533|data|DCB "group_by_prio",0|103-114-111-117-112-95-98-121-95-112-114-105-111-0
7547|data|DCB "vector_free",0|118-101-99-116-111-114-95-102-114-101-101-0
7559|data|DCB "dm_enablegroup",0|100-109-95-101-110-97-98-108-101-103-114-111-117-112-0
7574|data|DCB "filter_path",0|102-105-108-116-101-114-95-112-97-116-104-0
7586|data|DCB "get_path_layout",0|103-101-116-95-112-97-116-104-95-108-97-121-111-117-116-0
7602|data|DCB "snprint_defaults",0|115-110-112-114-105-110-116-95-100-101-102-97-117-108-116-115-0
7619|data|DCB "free_config",0|102-114-101-101-95-99-111-110-102-105-103-0
7631|data|DCB "init_checkers",0|105-110-105-116-95-99-104-101-99-107-101-114-115-0
7645|data|DCB "dm_queue_if_no_path",0|100-109-95-113-117-101-117-101-95-105-102-95-110-111-95-112-97-116-104-0
7665|data|DCB "uevent_get_minor",0|117-101-118-101-110-116-95-103-101-116-95-109-105-110-111-114-0
7682|data|DCB "dm_type",0|100-109-95-116-121-112-101-0
7690|data|DCB "store_pathinfo",0|115-116-111-114-101-95-112-97-116-104-105-110-102-111-0
7705|data|DCB "update_mpp_paths",0|117-112-100-97-116-101-95-109-112-112-95-112-97-116-104-115-0
7722|data|DCB "log_thread_start",0|108-111-103-95-116-104-114-101-97-100-95-115-116-97-114-116-0
7739|data|DCB "logq_lock",0|108-111-103-113-95-108-111-99-107-0
7749|data|DCB "dm_get_major",0|100-109-95-103-101-116-95-109-97-106-111-114-0
7762|data|DCB "dm_drv_version",0|100-109-95-100-114-118-95-118-101-114-115-105-111-110-0
7777|data|DCB "snprint_mptable",0|115-110-112-114-105-110-116-95-109-112-116-97-98-108-101-0
7793|data|DCB "update_multipath",0|117-112-100-97-116-101-95-109-117-108-116-105-112-97-116-104-0
7810|data|DCB "uevent_get_dm_name",0|117-101-118-101-110-116-95-103-101-116-95-100-109-95-110-97-109-101-0
7829|data|DCB "free_path",0|102-114-101-101-95-112-97-116-104-0
7839|data|DCB "setup_map",0|115-101-116-117-112-95-109-97-112-0
7849|data|DCB "checker_message",0|99-104-101-99-107-101-114-95-109-101-115-115-97-103-101-0
7865|data|DCB "load_config",0|108-111-97-100-95-99-111-110-102-105-103-0
7877|data|DCB "add_map_without_path",0|97-100-100-95-109-97-112-95-119-105-116-104-111-117-116-95-112-97-116-104-0
7898|data|DCB "filter_wwid",0|102-105-108-116-101-114-95-119-119-105-100-0
7910|data|DCB "snprint_status",0|115-110-112-114-105-110-116-95-115-116-97-116-117-115-0
7925|data|DCB "find_mp_by_str",0|102-105-110-100-95-109-112-95-98-121-95-115-116-114-0
7940|data|DCB "alloc_config",0|97-108-108-111-99-95-99-111-110-102-105-103-0
7953|data|DCB "cleanup_lock",0|99-108-101-97-110-117-112-95-108-111-99-107-0
7966|data|DCB "dm_mapname",0|100-109-95-109-97-112-110-97-109-101-0
7977|data|DCB "find_mp_by_wwid",0|102-105-110-100-95-109-112-95-98-121-95-119-119-105-100-0
7993|data|DCB "vector_del_slot",0|118-101-99-116-111-114-95-100-101-108-95-115-108-111-116-0
8009|data|DCB "dm_reassign",0|100-109-95-114-101-97-115-115-105-103-110-0
8021|data|DCB "udev_set_sync_support",0|117-100-101-118-95-115-101-116-95-115-121-110-99-95-115-117-112-112-111-114-116-0
8043|data|DCB "snprint_path_header",0|115-110-112-114-105-110-116-95-112-97-116-104-95-104-101-97-100-101-114-0
8063|data|DCB "orphan_path",0|111-114-112-104-97-110-95-112-97-116-104-0
8075|data|DCB "path_offline",0|112-97-116-104-95-111-102-102-108-105-110-101-0
8088|data|DCB "_dm_flush_map",0|95-100-109-95-102-108-117-115-104-95-109-97-112-0
8102|data|DCB "uevent_get_major",0|117-101-118-101-110-116-95-103-101-116-95-109-97-106-111-114-0
8119|data|DCB "uevent_listen",0|117-101-118-101-110-116-95-108-105-115-116-101-110-0
8133|data|DCB "waiter_attr",0|119-97-105-116-101-114-95-97-116-116-114-0
8145|data|DCB "remove_map",0|114-101-109-111-118-101-95-109-97-112-0
8156|data|DCB "log_reset",0|108-111-103-95-114-101-115-101-116-0
8166|data|DCB "la",0|108-97-0
8169|data|DCB "snprint_blacklist_except",0|115-110-112-114-105-110-116-95-98-108-97-99-107-108-105-115-116-95-101-120-99-101-112-116-0
8194|data|DCB "uevent_dispatch",0|117-101-118-101-110-116-95-100-105-115-112-97-116-99-104-0
8210|data|DCB "coalesce_paths",0|99-111-97-108-101-115-99-101-95-112-97-116-104-115-0
8225|data|DCB "log_thread_stop",0|108-111-103-95-116-104-114-101-97-100-95-115-116-111-112-0
8241|data|DCB "select_path_group",0|115-101-108-101-99-116-95-112-97-116-104-95-103-114-111-117-112-0
8259|data|DCB "free_pathvec",0|102-114-101-101-95-112-97-116-104-118-101-99-0
8272|data|DCB "snprint_blacklist",0|115-110-112-114-105-110-116-95-98-108-97-99-107-108-105-115-116-0
8290|data|DCB "snprint_multipath_topology",0|115-110-112-114-105-110-116-95-109-117-108-116-105-112-97-116-104-95-116-111-112-111-108-111-103-121-0
8317|data|DCB "libmpathpersist.so.0",0|108-105-98-109-112-97-116-104-112-101-114-115-105-115-116-46-115-111-46-48-0
8338|data|DCB "mpath_mx_alloc_len",0|109-112-97-116-104-95-109-120-95-97-108-108-111-99-95-108-101-110-0
8357|data|DCB "mpath_alloc_prin_response",0|109-112-97-116-104-95-97-108-108-111-99-95-112-114-105-110-95-114-101-115-112-111-110-115-101-0
8383|data|DCB "prin_do_scsi_ioctl",0|112-114-105-110-95-100-111-95-115-99-115-105-95-105-111-99-116-108-0
8402|data|DCB "dumpHex",0|100-117-109-112-72-101-120-0
8410|data|DCB "update_map_pr",0|117-112-100-97-116-101-95-109-97-112-95-112-114-0
8424|data|DCB "prout_do_scsi_ioctl",0|112-114-111-117-116-95-100-111-95-115-99-115-105-95-105-111-99-116-108-0
8444|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
8458|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
8481|data|DCB "__aeabi_unwind_cpp_pr1",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-49-0
8504|data|DCB "_Unwind_Resume",0|95-85-110-119-105-110-100-95-82-101-115-117-109-101-0
8519|data|DCB "__gcc_personality_v0",0|95-95-103-99-99-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
8540|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
8550|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
8563|data|DCB "_IO_putc",0|95-73-79-95-112-117-116-99-0
8572|data|DCB "fopen",0|102-111-112-101-110-0
8578|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
8586|data|DCB "ftruncate",0|102-116-114-117-110-99-97-116-101-0
8596|data|DCB "optind",0|111-112-116-105-110-100-0
8603|data|DCB "__strdup",0|95-95-115-116-114-100-117-112-0
8612|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
8628|data|DCB "signal",0|115-105-103-110-97-108-0
8635|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
8643|data|DCB "puts",0|112-117-116-115-0
8648|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
8665|data|DCB "unlink",0|117-110-108-105-110-107-0
8672|data|DCB "realloc",0|114-101-97-108-108-111-99-0
8680|data|DCB "abort",0|97-98-111-114-116-0
8686|data|DCB "getpid",0|103-101-116-112-105-100-0
8693|data|DCB "strtol",0|115-116-114-116-111-108-0
8700|data|DCB "isatty",0|105-115-97-116-116-121-0
8707|data|DCB "strlen",0|115-116-114-108-101-110-0
8714|data|DCB "setlogmask",0|115-101-116-108-111-103-109-97-115-107-0
8725|data|DCB "sigemptyset",0|115-105-103-101-109-112-116-121-115-101-116-0
8737|data|DCB "memset",0|109-101-109-115-101-116-0
8744|data|DCB "strstr",0|115-116-114-115-116-114-0
8751|data|DCB "chdir",0|99-104-100-105-114-0
8757|data|DCB "memcmp",0|109-101-109-99-109-112-0
8764|data|DCB "getopt",0|103-101-116-111-112-116-0
8771|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
8785|data|DCB "sigaddset",0|115-105-103-97-100-100-115-101-116-0
8795|data|DCB "stdout",0|115-116-100-111-117-116-0
8802|data|DCB "fclose",0|102-99-108-111-115-101-0
8809|data|DCB "malloc",0|109-97-108-108-111-99-0
8816|data|DCB "umask",0|117-109-97-115-107-0
8822|data|DCB "sched_setscheduler",0|115-99-104-101-100-95-115-101-116-115-99-104-101-100-117-108-101-114-0
8841|data|DCB "tzset",0|116-122-115-101-116-0
8847|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
8861|data|DCB "getenv",0|103-101-116-101-110-118-0
8868|data|DCB "optarg",0|111-112-116-97-114-103-0
8875|data|DCB "stderr",0|115-116-100-101-114-114-0
8882|data|DCB "sigdelset",0|115-105-103-100-101-108-115-101-116-0
8892|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
8907|data|DCB "getuid",0|103-101-116-117-105-100-0
8914|data|DCB "setrlimit",0|115-101-116-114-108-105-109-105-116-0
8924|data|DCB "fwrite",0|102-119-114-105-116-101-0
8931|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
8944|data|DCB "mlockall",0|109-108-111-99-107-97-108-108-0
8953|data|DCB "strchr",0|115-116-114-99-104-114-0
8960|data|DCB "sleep",0|115-108-101-101-112-0
8966|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
8981|data|DCB "setsid",0|115-101-116-115-105-100-0
8988|data|DCB "__sprintf_chk",0|95-95-115-112-114-105-110-116-102-95-99-104-107-0
9002|data|DCB "__xstat",0|95-95-120-115-116-97-116-0
9010|data|DCB "getrlimit",0|103-101-116-114-108-105-109-105-116-0
9020|data|DCB "strcmp",0|115-116-114-99-109-112-0
9027|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
9036|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
9054|data|DCB "ppoll",0|112-112-111-108-108-0
9060|data|DCB "snprintf",0|115-110-112-114-105-110-116-102-0
9069|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
9089|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
9107|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
9120|data|DCB "_edata",0|95-101-100-97-116-97-0
9127|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
9139|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
9153|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
9165|data|DCB "__end__",0|95-95-101-110-100-95-95-0
9173|data|DCB "_end",0|95-101-110-100-0
9178|data|DCB "cli_list_config",0|99-108-105-95-108-105-115-116-95-99-111-110-102-105-103-0
9194|data|DCB "cli_list_maps_fmt",0|99-108-105-95-108-105-115-116-95-109-97-112-115-95-102-109-116-0
9212|data|DCB "cli_list_maps_status",0|99-108-105-95-108-105-115-116-95-109-97-112-115-95-115-116-97-116-117-115-0
9233|data|DCB "gvecs",0|103-118-101-99-115-0
9239|data|DCB "cli_force_no_daemon_q",0|99-108-105-95-102-111-114-99-101-95-110-111-95-100-97-101-109-111-110-95-113-0
9261|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
9277|data|DCB "cli_list_status",0|99-108-105-95-108-105-115-116-95-115-116-97-116-117-115-0
9293|data|DCB "cli_list_paths_fmt",0|99-108-105-95-108-105-115-116-95-112-97-116-104-115-95-102-109-116-0
9312|data|DCB "uxsock_trigger",0|117-120-115-111-99-107-95-116-114-105-103-103-101-114-0
9327|data|DCB "log_reset_sig",0|108-111-103-95-114-101-115-101-116-95-115-105-103-0
9341|data|DCB "cli_del_map",0|99-108-105-95-100-101-108-95-109-97-112-0
9353|data|DCB "cli_restore_no_daemon_q",0|99-108-105-95-114-101-115-116-111-114-101-95-110-111-95-100-97-101-109-111-110-95-113-0
9377|data|DCB "cli_getprstatus",0|99-108-105-95-103-101-116-112-114-115-116-97-116-117-115-0
9393|data|DCB "mpath_pr_event_handler_fn",0|109-112-97-116-104-95-112-114-95-101-118-101-110-116-95-104-97-110-100-108-101-114-95-102-110-0
9419|data|DCB "cli_resume",0|99-108-105-95-114-101-115-117-109-101-0
9430|data|DCB "cli_fail",0|99-108-105-95-102-97-105-108-0
9439|data|DCB "cli_reinstate",0|99-108-105-95-114-101-105-110-115-116-97-116-101-0
9453|data|DCB "cli_list_paths",0|99-108-105-95-108-105-115-116-95-112-97-116-104-115-0
9468|data|DCB "cli_list_wildcards",0|99-108-105-95-108-105-115-116-95-119-105-108-100-99-97-114-100-115-0
9487|data|DCB "cli_resize",0|99-108-105-95-114-101-115-105-122-101-0
9498|data|DCB "cli_list_maps",0|99-108-105-95-108-105-115-116-95-109-97-112-115-0
9512|data|DCB "cli_del_path",0|99-108-105-95-100-101-108-95-112-97-116-104-0
9525|data|DCB "cli_reconfigure",0|99-108-105-95-114-101-99-111-110-102-105-103-117-114-101-0
9541|data|DCB "cli_quit",0|99-108-105-95-113-117-105-116-0
9550|data|DCB "running_state",0|114-117-110-110-105-110-103-95-115-116-97-116-101-0
9564|data|DCB "cli_list_maps_stats",0|99-108-105-95-108-105-115-116-95-109-97-112-115-95-115-116-97-116-115-0
9584|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
9600|data|DCB "cli_suspend",0|99-108-105-95-115-117-115-112-101-110-100-0
9612|data|DCB "cli_list_maps_topology",0|99-108-105-95-108-105-115-116-95-109-97-112-115-95-116-111-112-111-108-111-103-121-0
9635|data|DCB "cli_add_path",0|99-108-105-95-97-100-100-95-112-97-116-104-0
9648|data|DCB "cli_list_devices",0|99-108-105-95-108-105-115-116-95-100-101-118-105-99-101-115-0
9665|data|DCB "sleep_time",0|115-108-101-101-112-95-116-105-109-101-0
9676|data|DCB "cli_disable_queueing",0|99-108-105-95-100-105-115-97-98-108-101-95-113-117-101-117-101-105-110-103-0
9697|data|DCB "reconfig_sig",0|114-101-99-111-110-102-105-103-95-115-105-103-0
9710|data|DCB "cli_reload",0|99-108-105-95-114-101-108-111-97-100-0
9721|data|DCB "cli_reassign",0|99-108-105-95-114-101-97-115-115-105-103-110-0
9734|data|DCB "cli_add_map",0|99-108-105-95-97-100-100-95-109-97-112-0
9746|data|DCB "udev",0|117-100-101-118-0
9751|data|DCB "cli_restore_all_queueing",0|99-108-105-95-114-101-115-116-111-114-101-95-97-108-108-95-113-117-101-117-101-105-110-103-0
9776|data|DCB "cli_list_daemon",0|99-108-105-95-108-105-115-116-95-100-97-101-109-111-110-0
9792|data|DCB "cli_unsetprstatus",0|99-108-105-95-117-110-115-101-116-112-114-115-116-97-116-117-115-0
9810|data|DCB "key_generator",0|107-101-121-95-103-101-110-101-114-97-116-111-114-0
9824|data|DCB "cli_shutdown",0|99-108-105-95-115-104-117-116-100-111-119-110-0
9837|data|DCB "cli_list_blacklist",0|99-108-105-95-108-105-115-116-95-98-108-97-99-107-108-105-115-116-0
9856|data|DCB "cli_setprstatus",0|99-108-105-95-115-101-116-112-114-115-116-97-116-117-115-0
9872|data|DCB "daemon_pid",0|100-97-101-109-111-110-95-112-105-100-0
9883|data|DCB "cli_restore_queueing",0|99-108-105-95-114-101-115-116-111-114-101-95-113-117-101-117-101-105-110-103-0
9904|data|DCB "uev_trigger",0|117-101-118-95-116-114-105-103-103-101-114-0
9916|data|DCB "cli_disable_all_queueing",0|99-108-105-95-100-105-115-97-98-108-101-95-97-108-108-95-113-117-101-117-101-105-110-103-0
9941|data|DCB "cli_switch_group",0|99-108-105-95-115-119-105-116-99-104-95-103-114-111-117-112-0
9958|data|DCB "polls",0|112-111-108-108-115-0
9964|data|DCB "cli_list_map_topology",0|99-108-105-95-108-105-115-116-95-109-97-112-95-116-111-112-111-108-111-103-121-0
9986|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
9996|data|DCB "LIBUDEV_183",0|76-73-66-85-68-69-86-95-49-56-51-0
10008|data|DCB "Base",0|66-97-115-101-0
10013|data|DCB "GCC_3.0",0|71-67-67-95-51-46-48-0
10021|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
10029|data|DCB "GCC_3.3.1",0|71-67-67-95-51-46-51-46-49-0
10039|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
10049|data|DCB 0|0
10050|data|DCW 0|0-0
10052|data|DCW 0|0-0
10054|data|DCW 0|0-0
10056|data|DCW 0; local  symbol: free_config|0-0
10058|data|DCW 2; open@@GLIBC_2.4|2-0
10060|data|DCW 0; local  symbol: sysfs_get_size|0-0
10062|data|DCW 0; local  symbol: remember_wwid|0-0
10064|data|DCW 0; local  symbol: convert_dev|0-0
10066|data|DCW 0; local  symbol: ux_socket_listen|0-0
10068|data|DCW 3; sigemptyset@@GLIBC_2.4|3-0
10070|data|DCW 3; strerror@@GLIBC_2.4|3-0
10072|data|DCW 0; local  symbol: orphan_path|0-0
10074|data|DCW 0; local  symbol: dlog|0-0
10076|data|DCW 0; local  symbol: filter_devnode|0-0
10078|data|DCW 3; abort@@GLIBC_2.4|3-0
10080|data|DCW 4; __gcc_personality_v0@@GCC_3.3.1|4-0
10082|data|DCW 0; local  symbol: store_pathinfo|0-0
10084|data|DCW 5; dm_lib_release@@Base|5-0
10086|data|DCW 0; local  symbol: dm_drv_version|0-0
10088|data|DCW 3; memcmp@@GLIBC_2.4|3-0
10090|data|DCW 0; local  symbol: snprint_devices|0-0
10092|data|DCW 2; pthread_attr_setdetachstate@@GLIBC_2.4|2-0
10094|data|DCW 2; pthread_exit@@GLIBC_2.4|2-0
10096|data|DCW 3; __xstat@@GLIBC_2.4|3-0
10098|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
10100|data|DCW 0; local  symbol: free_path|0-0
10102|data|DCW 6; __aeabi_unwind_cpp_pr0@@GCC_3.5|6-0
10104|data|DCW 0; local  symbol: dm_enablegroup|0-0
10106|data|DCW 0; local  symbol: xfree|0-0
10108|data|DCW 3; signal@@GLIBC_2.4|3-0
10110|data|DCW 0; local  symbol: uevent_listen|0-0
10112|data|DCW 0; local  symbol: __gmon_start__|0-0
10114|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
10116|data|DCW 0; local  symbol: cleanup_lock|0-0
10118|data|DCW 3; tzset@@GLIBC_2.4|3-0
10120|data|DCW 0; local  symbol: snprint_hwtable|0-0
10122|data|DCW 7; __isoc99_sscanf@@GLIBC_2.7|7-0
10124|data|DCW 0; local  symbol: snprint_path_header|0-0
10126|data|DCW 0; local  symbol: checker_enable|0-0
10128|data|DCW 3; strncpy@@GLIBC_2.4|3-0
10130|data|DCW 3; fclose@@GLIBC_2.4|3-0
10132|data|DCW 3; getenv@@GLIBC_2.4|3-0
10134|data|DCW 3; __printf_chk@@GLIBC_2.4|3-0
10136|data|DCW 3; strchr@@GLIBC_2.4|3-0
10138|data|DCW 3; setrlimit@@GLIBC_2.4|3-0
10140|data|DCW 3; setlogmask@@GLIBC_2.4|3-0
10142|data|DCW 0; local  symbol: snprint_blacklist_except|0-0
10144|data|DCW 2; sem_init@@GLIBC_2.4|2-0
10146|data|DCW 0; local  symbol: log_thread_stop|0-0
10148|data|DCW 3; fopen@@GLIBC_2.4|3-0
10150|data|DCW 3; sched_setscheduler@@GLIBC_2.4|3-0
10152|data|DCW 3; memset@@GLIBC_2.4|3-0
10154|data|DCW 0; local  symbol: alloc_config|0-0
10156|data|DCW 0; local  symbol: dm_get_info|0-0
10158|data|DCW 3; setsid@@GLIBC_2.4|3-0
10160|data|DCW 0; local  symbol: checker_disable|0-0
10162|data|DCW 0; local  symbol: snprint_blacklist_report|0-0
10164|data|DCW 0; local  symbol: start_waiter_thread|0-0
10166|data|DCW 0; local  symbol: path_discovery|0-0
10168|data|DCW 0; local  symbol: uevent_get_disk_ro|0-0
10170|data|DCW 0; local  symbol: free_pathvec|0-0
10172|data|DCW 8; udev_device_ref@@LIBUDEV_183|8-0
10174|data|DCW 3; ppoll@@GLIBC_2.4|3-0
10176|data|DCW 0; local  symbol: uevent_get_minor|0-0
10178|data|DCW 0; local  symbol: dm_get_maps|0-0
10180|data|DCW 0; local  symbol: update_mpp_paths|0-0
10182|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
10184|data|DCW 3; _exit@@GLIBC_2.4|3-0
10186|data|DCW 8; udev_new@@LIBUDEV_183|8-0
10188|data|DCW 3; getuid@@GLIBC_2.4|3-0
10190|data|DCW 0; local  symbol: filter_wwid|0-0
10192|data|DCW 0; local  symbol: remove_map_and_stop_waiter|0-0
10194|data|DCW 3; optind@@GLIBC_2.4|3-0
10196|data|DCW 3; free@@GLIBC_2.4|3-0
10198|data|DCW 0; local  symbol: find_mp_by_alias|0-0
10200|data|DCW 2; write@@GLIBC_2.4|2-0
10202|data|DCW 0; local  symbol: udev_set_sync_support|0-0
10204|data|DCW 0; local  symbol: __setup_multipath|0-0
10206|data|DCW 0; local  symbol: update_queue_mode_add_path|0-0
10208|data|DCW 0; local  symbol: find_slot|0-0
10210|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
10212|data|DCW 0; local  symbol: log_reset|0-0
10214|data|DCW 3; gettimeofday@@GLIBC_2.4|3-0
10216|data|DCW 0; local  symbol: init_checkers|0-0
10218|data|DCW 0; local  symbol: dm_type|0-0
10220|data|DCW 2; accept@@GLIBC_2.4|2-0
10222|data|DCW 0; local  symbol: mpath_alloc_prin_response|0-0
10224|data|DCW 0; local  symbol: domap|0-0
10226|data|DCW 0; local  symbol: checker_message|0-0
10228|data|DCW 0; local  symbol: orphan_paths|0-0
10230|data|DCW 2; pthread_mutex_unlock@@GLIBC_2.4|2-0
10232|data|DCW 0; local  symbol: dm_init|0-0
10234|data|DCW 3; umask@@GLIBC_2.4|3-0
10236|data|DCW 0; local  symbol: log_thread_start|0-0
10238|data|DCW 0; local  symbol: remove_maps|0-0
10240|data|DCW 5; dm_lib_exit@@Base|5-0
10242|data|DCW 0; local  symbol: send_packet|0-0
10244|data|DCW 3; isatty@@GLIBC_2.4|3-0
10246|data|DCW 0; local  symbol: dm_get_minor|0-0
10248|data|DCW 0; local  symbol: rl_completion_entry_function|0-0
10250|data|DCW 2; pthread_mutex_lock@@GLIBC_2.4|2-0
10252|data|DCW 0; local  symbol: snprint_blacklist|0-0
10254|data|DCW 3; strlen@@GLIBC_2.4|3-0
10256|data|DCW 0; local  symbol: cleanup_prio|0-0
10258|data|DCW 0; local  symbol: waiter_attr|0-0
10260|data|DCW 3; unlink@@GLIBC_2.4|3-0
10262|data|DCW 3; getopt@@GLIBC_2.4|3-0
10264|data|DCW 2; pthread_create@@GLIBC_2.4|2-0
10266|data|DCW 0; local  symbol: dm_reassign|0-0
10268|data|DCW 0; local  symbol: pathinfo|0-0
10270|data|DCW 0; local  symbol: vector_alloc_slot|0-0
10272|data|DCW 0; local  symbol: prin_do_scsi_ioctl|0-0
10274|data|DCW 0; local  symbol: find_mp_by_minor|0-0
10276|data|DCW 0; local  symbol: vector_free|0-0
10278|data|DCW 8; udev_device_unref@@LIBUDEV_183|8-0
10280|data|DCW 3; strtol@@GLIBC_2.4|3-0
10282|data|DCW 3; sigaddset@@GLIBC_2.4|3-0
10284|data|DCW 0; local  symbol: add_map_without_path|0-0
10286|data|DCW 2; sem_post@@GLIBC_2.4|2-0
10288|data|DCW 0; local  symbol: snprint_multipath_topology|0-0
10290|data|DCW 2; pthread_sigmask@@GLIBC_2.4|2-0
10292|data|DCW 2; pthread_mutex_destroy@@GLIBC_2.4|2-0
10294|data|DCW 0; local  symbol: update_map_pr|0-0
10296|data|DCW 0; local  symbol: dm_fail_path|0-0
10298|data|DCW 9; __stack_chk_guard@@GLIBC_2.4|9-0
10300|data|DCW 0; local  symbol: dm_mapname|0-0
10302|data|DCW 0; local  symbol: verify_paths|0-0
10304|data|DCW 0; local  symbol: setup_map|0-0
10306|data|DCW 0; local  symbol: recv_packet|0-0
10308|data|DCW 0; local  symbol: snprint_status|0-0
10310|data|DCW 3; mlockall@@GLIBC_2.4|3-0
10312|data|DCW 0; local  symbol: checker_clear_message|0-0
10314|data|DCW 0; local  symbol: select_path_group|0-0
10316|data|DCW 0; local  symbol: dm_switchgroup|0-0
10318|data|DCW 0; local  symbol: setup_thread_attr|0-0
10320|data|DCW 0; local  symbol: snprint_wildcards|0-0
10322|data|DCW 3; __snprintf_chk@@GLIBC_2.4|3-0
10324|data|DCW 2; pthread_mutex_init@@GLIBC_2.4|2-0
10326|data|DCW 0; local  symbol: vector_alloc|0-0
10328|data|DCW 0; local  symbol: find_path_by_devt|0-0
10330|data|DCW 3; strstr@@GLIBC_2.4|3-0
10332|data|DCW 8; udev_unref@@LIBUDEV_183|8-0
10334|data|DCW 0; local  symbol: uevent_get_major|0-0
10336|data|DCW 0; local  symbol: path_offline|0-0
10338|data|DCW 2; close@@GLIBC_2.4|2-0
10340|data|DCW 0; local  symbol: update_multipath|0-0
10342|data|DCW 0; local  symbol: prout_do_scsi_ioctl|0-0
10344|data|DCW 0; local  symbol: _dm_flush_map|0-0
10346|data|DCW 3; fwrite@@GLIBC_2.4|3-0
10348|data|DCW 0; local  symbol: update_queue_mode_del_path|0-0
10350|data|DCW 8; udev_device_new_from_subsystem_sysname@@LIBUDEV_183|8-0
10352|data|DCW 0; local  symbol: cleanup_checkers|0-0
10354|data|DCW 0; local  symbol: reload_map|0-0
10356|data|DCW 0; local  symbol: dm_queue_if_no_path|0-0
10358|data|DCW 3; __ctype_b_loc@@GLIBC_2.4|3-0
10360|data|DCW 0; local  symbol: dm_reinstate_path|0-0
10362|data|DCW 0; local  symbol: readline|0-0
10364|data|DCW 3; malloc@@GLIBC_2.4|3-0
10366|data|DCW 0; local  symbol: get_path_layout|0-0
10368|data|DCW 0; local  symbol: remove_map|0-0
10370|data|DCW 3; __stack_chk_fail@@GLIBC_2.4|3-0
10372|data|DCW 2; sigaction@@GLIBC_2.4|2-0
10374|data|DCW 3; sigdelset@@GLIBC_2.4|3-0
10376|data|DCW 3; chdir@@GLIBC_2.4|3-0
10378|data|DCW 3; __fprintf_chk@@GLIBC_2.4|3-0
10380|data|DCW 2; pthread_attr_init@@GLIBC_2.4|2-0
10382|data|DCW 0; local  symbol: alloc_strvec|0-0
10384|data|DCW 0; local  symbol: dm_map_present|0-0
10386|data|DCW 0; local  symbol: vector_del_slot|0-0
10388|data|DCW 0; local  symbol: logq_lock|0-0
10390|data|DCW 3; ftruncate@@GLIBC_2.4|3-0
10392|data|DCW 0; local  symbol: snprint_defaults|0-0
10394|data|DCW 3; sleep@@GLIBC_2.4|3-0
10396|data|DCW 0; local  symbol: dm_get_major|0-0
10398|data|DCW 0; local  symbol: dm_simplecmd_noflush|0-0
10400|data|DCW 0; local  symbol: find_path_by_dev|0-0
10402|data|DCW 0; local  symbol: group_by_prio|0-0
10404|data|DCW 2; pthread_testcancel@@GLIBC_2.4|2-0
10406|data|DCW 0; local  symbol: init_prio|0-0
10408|data|DCW 0; local  symbol: zalloc|0-0
10410|data|DCW 0; local  symbol: snprint_path|0-0
10412|data|DCW 0; local  symbol: ux_socket_connect|0-0
10414|data|DCW 3; puts@@GLIBC_2.4|3-0
10416|data|DCW 0; local  symbol: filter_path|0-0
10418|data|DCW 3; stdout@@GLIBC_2.4|3-0
10420|data|DCW 3; getpid@@GLIBC_2.4|3-0
10422|data|DCW 0; local  symbol: uevent_get_dm_name|0-0
10424|data|DCW 0; local  symbol: get_state|0-0
10426|data|DCW 0; local  symbol: snprint_mptable|0-0
10428|data|DCW 0; local  symbol: remove_maps_and_stop_waiters|0-0
10430|data|DCW 0; local  symbol: rl_readline_name|0-0
10432|data|DCW 0; local  symbol: free_strvec|0-0
10434|data|DCW 2; fcntl@@GLIBC_2.4|2-0
10436|data|DCW 3; dup@@GLIBC_2.4|3-0
10438|data|DCW 2; fork@@GLIBC_2.4|2-0
10440|data|DCW 2; pthread_attr_destroy@@GLIBC_2.4|2-0
10442|data|DCW 3; stderr@@GLIBC_2.4|3-0
10444|data|DCW 0; local  symbol: snprint_multipath|0-0
10446|data|DCW 3; optarg@@GLIBC_2.4|3-0
10448|data|DCW 3; snprintf@@GLIBC_2.4|3-0
10450|data|DCW 3; __sprintf_chk@@GLIBC_2.4|3-0
10452|data|DCW 3; strncmp@@GLIBC_2.4|3-0
10454|data|DCW 0; local  symbol: get_refwwid|0-0
10456|data|DCW 3; realloc@@GLIBC_2.4|3-0
10458|data|DCW 0; local  symbol: add_history|0-0
10460|data|DCW 3; getrlimit@@GLIBC_2.4|3-0
10462|data|DCW 3; _IO_putc@@GLIBC_2.4|3-0
10464|data|DCW 3; __strdup@@GLIBC_2.4|3-0
10466|data|DCW 0xA; _Unwind_Resume@@GCC_3.0|10-0
10468|data|DCW 6; __aeabi_unwind_cpp_pr1@@GCC_3.5|6-0
10470|data|DCW 2; sem_wait@@GLIBC_2.4|2-0
10472|data|DCW 0; local  symbol: coalesce_paths|0-0
10474|data|DCW 0; local  symbol: snprint_multipath_header|0-0
10476|data|DCW 0; local  symbol: get_multipath_layout|0-0
10478|data|DCW 0; local  symbol: uevent_dispatch|0-0
10480|data|DCW 0; local  symbol: find_mp_by_str|0-0
10482|data|DCW 0; local  symbol: vector_set_slot|0-0
10484|data|DCW 3; strcmp@@GLIBC_2.4|3-0
10486|data|DCW 0; local  symbol: update_multipath_strings|0-0
10488|data|DCW 3; exit@@GLIBC_2.4|3-0
10490|data|DCW 0; local  symbol: dumpHex|0-0
10492|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
10494|data|DCW 2; pthread_cancel@@GLIBC_2.4|2-0
10496|data|DCW 0; local  symbol: adopt_paths|0-0
10498|data|DCW 0; local  symbol: rl_line_buffer|0-0
10500|data|DCW 3; __cxa_finalize@@GLIBC_2.4|3-0
10502|data|DCW 2; pthread_join@@GLIBC_2.4|2-0
10504|data|DCW 0; local  symbol: load_config|0-0
10506|data|DCW 0; local  symbol: add_map_with_path|0-0
10508|data|DCW 0; local  symbol: find_mp_by_wwid|0-0
10510|data|DCW 1; global symbol: cli_shutdown|1-0
10512|data|DCW 1; global symbol: cli_unsetprstatus|1-0
10514|data|DCW 1; global symbol: cli_force_no_daemon_q|1-0
10516|data|DCW 1; global symbol: running_state|1-0
10518|data|DCW 1; global symbol: cli_restore_all_queueing|1-0
10520|data|DCW 1; global symbol: uev_trigger|1-0
10522|data|DCW 1; global symbol: cli_list_paths|1-0
10524|data|DCW 1; global symbol: cli_reconfigure|1-0
10526|data|DCW 1; global symbol: cli_quit|1-0
10528|data|DCW 1; global symbol: uxsock_trigger|1-0
10530|data|DCW 1; global symbol: cli_add_map|1-0
10532|data|DCW 1; global symbol: daemon_pid|1-0
10534|data|DCW 1; global symbol: cli_list_status|1-0
10536|data|DCW 1; global symbol: cli_suspend|1-0
10538|data|DCW 1; global symbol: cli_add_path|1-0
10540|data|DCW 1; global symbol: sleep_time|1-0
10542|data|DCW 1; global symbol: cli_list_paths_fmt|1-0
10544|data|DCW 1; global symbol: _fini|1-0
10546|data|DCW 1; global symbol: cli_list_maps_stats|1-0
10548|data|DCW 1; global symbol: mpath_mx_alloc_len|1-0
10550|data|DCW 1; global symbol: cli_switch_group|1-0
10552|data|DCW 1; global symbol: cli_list_config|1-0
10554|data|DCW 1; global symbol: __end__|1-0
10556|data|DCW 1; global symbol: cli_list_maps_fmt|1-0
10558|data|DCW 1; global symbol: __libc_csu_fini|1-0
10560|data|DCW 1; global symbol: reconfig_sig|1-0
10562|data|DCW 1; global symbol: mpath_pr_event_handler_fn|1-0
10564|data|DCW 1; global symbol: cli_reinstate|1-0
10566|data|DCW 1; global symbol: _init|1-0
10568|data|DCW 1; global symbol: __libc_csu_init|1-0
10570|data|DCW 1; global symbol: __bss_end__|1-0
10572|data|DCW 1; global symbol: logsink|1-0
10574|data|DCW 1; global symbol: cli_list_map_topology|1-0
10576|data|DCW 1; global symbol: cli_reload|1-0
10578|data|DCW 1; global symbol: cli_disable_all_queueing|1-0
10580|data|DCW 1; global symbol: gvecs|1-0
10582|data|DCW 1; global symbol: cli_list_blacklist|1-0
10584|data|DCW 1; global symbol: cli_setprstatus|1-0
10586|data|DCW 1; global symbol: cli_del_map|1-0
10588|data|DCW 1; global symbol: cli_disable_queueing|1-0
10590|data|DCW 1; global symbol: cli_resume|1-0
10592|data|DCW 1; global symbol: cli_list_maps_status|1-0
10594|data|DCW 1; global symbol: cli_getprstatus|1-0
10596|data|DCW 1; global symbol: cli_list_wildcards|1-0
10598|data|DCW 1; global symbol: cli_del_path|1-0
10600|data|DCW 1; global symbol: __bss_start__|1-0
10602|data|DCW 1; global symbol: cli_list_maps|1-0
10604|data|DCW 1; global symbol: cli_reassign|1-0
10606|data|DCW 1; global symbol: cli_list_devices|1-0
10608|data|DCW 1; global symbol: udev|1-0
10610|data|DCW 1; global symbol: cli_restore_no_daemon_q|1-0
10612|data|DCW 1; global symbol: cli_list_maps_topology|1-0
10614|data|DCW 1; global symbol: __data_start|1-0
10616|data|DCW 1; global symbol: cli_restore_queueing|1-0
10618|data|DCW 1; global symbol: main|1-0
10620|data|DCW 1; global symbol: _edata|1-0
10622|data|DCW 1; global symbol: cli_list_daemon|1-0
10624|data|DCW 1; global symbol: _end|1-0
10626|data|DCW 1; global symbol: cli_fail|1-0
10628|data|DCW 1; global symbol: stream|1-0
10630|data|DCW 1; global symbol: log_reset_sig|1-0
10632|data|DCW 1; global symbol: conf|1-0
10634|data|DCW 1; global symbol: cli_resize|1-0
10636|data|DCW 1; global symbol: _bss_end__|1-0
10638|data|DCW 1; global symbol: polls|1-0
10640|data|DCW 1; global symbol: key_generator|1-0
10642|data|DCW 1; global symbol: la|1-0
10644|data|DCW 1; global symbol: __bss_start|1-0
10646|data|DCW 0|0-0
10648|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_16C0, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-173-12-0-0-16-0-0-0-32-0-0-0
10664|data|Elf32_Vernaux <0xD696914, 0, 9, aGlibc24 - byte_16C0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-9-0-66-16-0-0-0-0-0-0
10680|data|Elf32_Verneed <1, 1, aLibudevSo1 - byte_16C0, 0x10, 0x20>; "libudev.so.1"|1-0-1-0-60-2-0-0-16-0-0-0-32-0-0-0
10696|data|Elf32_Vernaux <0x8FCF323, 0, 8, aLibudev183 - byte_16C0, 0>; "LIBUDEV_183"|35-243-252-8-0-0-8-0-76-16-0-0-0-0-0-0
10712|data|Elf32_Verneed <1, 1, aLibdevmapperSo - byte_16C0, 0x10, 0x20>; "libdevmapper.so.1.02.1"|1-0-1-0-146-1-0-0-16-0-0-0-32-0-0-0
10728|data|Elf32_Vernaux <0x48895, 0, 5, aBase - byte_16C0, 0>; "Base"|149-136-4-0-0-0-5-0-88-16-0-0-0-0-0-0
10744|data|Elf32_Verneed <1, 3, aLibgccSSo1 - byte_16C0, 0x10, 0x40>; "libgcc_s.so.1"|1-0-3-0-60-10-0-0-16-0-0-0-64-0-0-0
10760|data|Elf32_Vernaux <0xB792650, 0, 0xA, aGcc30 - byte_16C0, 0x10>; "GCC_3.0"|80-38-121-11-0-0-10-0-93-16-0-0-16-0-0-0
10776|data|Elf32_Vernaux <0xB792655, 0, 6, aGcc35 - byte_16C0, 0x10>; "GCC_3.5"|85-38-121-11-0-0-6-0-101-16-0-0-16-0-0-0
10792|data|Elf32_Vernaux <0x9265F61, 0, 4, aGcc331 - byte_16C0, 0>; "GCC_3.3.1"|97-95-38-9-0-0-4-0-109-16-0-0-0-0-0-0
10808|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_16C0, 0x10, 0x30>; "libc.so.6"|1-0-2-0-156-10-0-0-16-0-0-0-48-0-0-0
10824|data|Elf32_Vernaux <0xD696917, 0, 7, aGlibc27 - byte_16C0, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-7-0-119-16-0-0-16-0-0-0
10840|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_16C0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-66-16-0-0-0-0-0-0
10856|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_16C0, 0x10, 0>; "libpthread.so.0"|1-0-1-0-1-0-0-0-16-0-0-0-0-0-0-0
10872|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_16C0, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-66-16-0-0-0-0-0-0
10888|data|Elf32_Rel <0x1BA40, 0x17>; R_ARM_RELATIVE|64-186-1-0-23-0-0-0
10896|data|Elf32_Rel <0x1BA44, 0x17>; R_ARM_RELATIVE|68-186-1-0-23-0-0-0
10904|data|Elf32_Rel <0x1BEE4, 0x17>; R_ARM_RELATIVE|228-190-1-0-23-0-0-0
10912|data|Elf32_Rel <0x1BEE8, 0x17>; R_ARM_RELATIVE|232-190-1-0-23-0-0-0
10920|data|Elf32_Rel <0x1BEEC, 0x17>; R_ARM_RELATIVE|236-190-1-0-23-0-0-0
10928|data|Elf32_Rel <0x1BEF0, 0x17>; R_ARM_RELATIVE|240-190-1-0-23-0-0-0
10936|data|Elf32_Rel <0x1BEF4, 0x17>; R_ARM_RELATIVE|244-190-1-0-23-0-0-0
10944|data|Elf32_Rel <0x1BEF8, 0x17>; R_ARM_RELATIVE|248-190-1-0-23-0-0-0
10952|data|Elf32_Rel <0x1BEFC, 0x17>; R_ARM_RELATIVE|252-190-1-0-23-0-0-0
10960|data|Elf32_Rel <0x1BF00, 0x17>; R_ARM_RELATIVE|0-191-1-0-23-0-0-0
10968|data|Elf32_Rel <0x1BF04, 0x17>; R_ARM_RELATIVE|4-191-1-0-23-0-0-0
10976|data|Elf32_Rel <0x1BF08, 0x17>; R_ARM_RELATIVE|8-191-1-0-23-0-0-0
10984|data|Elf32_Rel <0x1BF14, 0x17>; R_ARM_RELATIVE|20-191-1-0-23-0-0-0
10992|data|Elf32_Rel <0x1BF18, 0x17>; R_ARM_RELATIVE|24-191-1-0-23-0-0-0
11000|data|Elf32_Rel <0x1BF1C, 0x17>; R_ARM_RELATIVE|28-191-1-0-23-0-0-0
11008|data|Elf32_Rel <0x1BF20, 0x17>; R_ARM_RELATIVE|32-191-1-0-23-0-0-0
11016|data|Elf32_Rel <0x1BF24, 0x17>; R_ARM_RELATIVE|36-191-1-0-23-0-0-0
11024|data|Elf32_Rel <0x1BF2C, 0x17>; R_ARM_RELATIVE|44-191-1-0-23-0-0-0
11032|data|Elf32_Rel <0x1BF30, 0x17>; R_ARM_RELATIVE|48-191-1-0-23-0-0-0
11040|data|Elf32_Rel <0x1BF34, 0x17>; R_ARM_RELATIVE|52-191-1-0-23-0-0-0
11048|data|Elf32_Rel <0x1BF3C, 0x17>; R_ARM_RELATIVE|60-191-1-0-23-0-0-0
11056|data|Elf32_Rel <0x1BF44, 0x17>; R_ARM_RELATIVE|68-191-1-0-23-0-0-0
11064|data|Elf32_Rel <0x1BF48, 0x17>; R_ARM_RELATIVE|72-191-1-0-23-0-0-0
11072|data|Elf32_Rel <0x1BF4C, 0x17>; R_ARM_RELATIVE|76-191-1-0-23-0-0-0
11080|data|Elf32_Rel <0x1BF50, 0x17>; R_ARM_RELATIVE|80-191-1-0-23-0-0-0
11088|data|Elf32_Rel <0x1BF54, 0x17>; R_ARM_RELATIVE|84-191-1-0-23-0-0-0
11096|data|Elf32_Rel <0x1BF5C, 0x17>; R_ARM_RELATIVE|92-191-1-0-23-0-0-0
11104|data|Elf32_Rel <0x1BF64, 0x17>; R_ARM_RELATIVE|100-191-1-0-23-0-0-0
11112|data|Elf32_Rel <0x1BF68, 0x17>; R_ARM_RELATIVE|104-191-1-0-23-0-0-0
11120|data|Elf32_Rel <0x1BF6C, 0x17>; R_ARM_RELATIVE|108-191-1-0-23-0-0-0
11128|data|Elf32_Rel <0x1BF70, 0x17>; R_ARM_RELATIVE|112-191-1-0-23-0-0-0
11136|data|Elf32_Rel <0x1BF78, 0x17>; R_ARM_RELATIVE|120-191-1-0-23-0-0-0
11144|data|Elf32_Rel <0x1BF7C, 0x17>; R_ARM_RELATIVE|124-191-1-0-23-0-0-0
11152|data|Elf32_Rel <0x1BF80, 0x17>; R_ARM_RELATIVE|128-191-1-0-23-0-0-0
11160|data|Elf32_Rel <0x1BF84, 0x17>; R_ARM_RELATIVE|132-191-1-0-23-0-0-0
11168|data|Elf32_Rel <0x1BF88, 0x17>; R_ARM_RELATIVE|136-191-1-0-23-0-0-0
11176|data|Elf32_Rel <0x1BF8C, 0x17>; R_ARM_RELATIVE|140-191-1-0-23-0-0-0
11184|data|Elf32_Rel <0x1BF90, 0x17>; R_ARM_RELATIVE|144-191-1-0-23-0-0-0
11192|data|Elf32_Rel <0x1BF94, 0x17>; R_ARM_RELATIVE|148-191-1-0-23-0-0-0
11200|data|Elf32_Rel <0x1BF98, 0x17>; R_ARM_RELATIVE|152-191-1-0-23-0-0-0
11208|data|Elf32_Rel <0x1BF9C, 0x17>; R_ARM_RELATIVE|156-191-1-0-23-0-0-0
11216|data|Elf32_Rel <0x1BFA4, 0x17>; R_ARM_RELATIVE|164-191-1-0-23-0-0-0
11224|data|Elf32_Rel <0x1BFAC, 0x17>; R_ARM_RELATIVE|172-191-1-0-23-0-0-0
11232|data|Elf32_Rel <0x1BFB8, 0x17>; R_ARM_RELATIVE|184-191-1-0-23-0-0-0
11240|data|Elf32_Rel <0x1BFC0, 0x17>; R_ARM_RELATIVE|192-191-1-0-23-0-0-0
11248|data|Elf32_Rel <0x1BFC4, 0x17>; R_ARM_RELATIVE|196-191-1-0-23-0-0-0
11256|data|Elf32_Rel <0x1BFCC, 0x17>; R_ARM_RELATIVE|204-191-1-0-23-0-0-0
11264|data|Elf32_Rel <0x1BFD0, 0x17>; R_ARM_RELATIVE|208-191-1-0-23-0-0-0
11272|data|Elf32_Rel <0x1BFD4, 0x17>; R_ARM_RELATIVE|212-191-1-0-23-0-0-0
11280|data|Elf32_Rel <0x1BFD8, 0x17>; R_ARM_RELATIVE|216-191-1-0-23-0-0-0
11288|data|Elf32_Rel <0x1BFDC, 0x17>; R_ARM_RELATIVE|220-191-1-0-23-0-0-0
11296|data|Elf32_Rel <0x1BFE0, 0x17>; R_ARM_RELATIVE|224-191-1-0-23-0-0-0
11304|data|Elf32_Rel <0x1BFE4, 0x17>; R_ARM_RELATIVE|228-191-1-0-23-0-0-0
11312|data|Elf32_Rel <0x1BFE8, 0x17>; R_ARM_RELATIVE|232-191-1-0-23-0-0-0
11320|data|Elf32_Rel <0x1BFEC, 0x17>; R_ARM_RELATIVE|236-191-1-0-23-0-0-0
11328|data|Elf32_Rel <0x1BFF8, 0x17>; R_ARM_RELATIVE|248-191-1-0-23-0-0-0
11336|data|Elf32_Rel <0x1BFFC, 0x17>; R_ARM_RELATIVE|252-191-1-0-23-0-0-0
11344|data|Elf32_Rel <0x1C004, 0x17>; R_ARM_RELATIVE|4-192-1-0-23-0-0-0
11352|data|Elf32_Rel <0x1BF0C, 0x1F15>; R_ARM_GLOB_DAT __gmon_start__|12-191-1-0-21-31-0-0
11360|data|Elf32_Rel <0x1BF10, 0x2015>; R_ARM_GLOB_DAT _Jv_RegisterClasses|16-191-1-0-21-32-0-0
11368|data|Elf32_Rel <0x1BF28, 0x4215>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|40-191-1-0-21-66-0-0
11376|data|Elf32_Rel <0x1BF38, 0x4815>; R_ARM_GLOB_DAT optind|56-191-1-0-21-72-0-0
11384|data|Elf32_Rel <0x1BF40, 0x5015>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|64-191-1-0-21-80-0-0
11392|data|Elf32_Rel <0x1BF58, 0x6315>; R_ARM_GLOB_DAT rl_completion_entry_function|88-191-1-0-21-99-0-0
11400|data|Elf32_Rel <0x1BF60, 0x6815>; R_ARM_GLOB_DAT waiter_attr|96-191-1-0-21-104-0-0
11408|data|Elf32_Rel <0x1BF74, 0x7C15>; R_ARM_GLOB_DAT __stack_chk_guard|116-191-1-0-21-124-0-0
11416|data|Elf32_Rel <0x1BFA0, 0xA915>; R_ARM_GLOB_DAT logq_lock|160-191-1-0-21-169-0-0
11424|data|Elf32_Rel <0x1BFA8, 0xB015>; R_ARM_GLOB_DAT group_by_prio|168-191-1-0-21-176-0-0
11432|data|Elf32_Rel <0x1BFB0, 0xB815>; R_ARM_GLOB_DAT stdout|176-191-1-0-21-184-0-0
11440|data|Elf32_Rel <0x1BFB4, 0xBE15>; R_ARM_GLOB_DAT rl_readline_name|180-191-1-0-21-190-0-0
11448|data|Elf32_Rel <0x1BFBC, 0xC415>; R_ARM_GLOB_DAT stderr|188-191-1-0-21-196-0-0
11456|data|Elf32_Rel <0x1BFC8, 0xC615>; R_ARM_GLOB_DAT optarg|200-191-1-0-21-198-0-0
11464|data|Elf32_Rel <0x1BFF0, 0xE015>; R_ARM_GLOB_DAT rl_line_buffer|240-191-1-0-21-224-0-0
11472|data|Elf32_Rel <0x1BFF4, 0xE115>; R_ARM_GLOB_DAT __cxa_finalize|244-191-1-0-21-225-0-0
11480|data|Elf32_Rel <0x1BB98, 0x316>; R_ARM_JUMP_SLOT free_config|152-187-1-0-22-3-0-0
11488|data|Elf32_Rel <0x1BB9C, 0x416>; R_ARM_JUMP_SLOT open|156-187-1-0-22-4-0-0
11496|data|Elf32_Rel <0x1BBA0, 0x516>; R_ARM_JUMP_SLOT sysfs_get_size|160-187-1-0-22-5-0-0
11504|data|Elf32_Rel <0x1BBA4, 0x616>; R_ARM_JUMP_SLOT remember_wwid|164-187-1-0-22-6-0-0
11512|data|Elf32_Rel <0x1BBA8, 0x716>; R_ARM_JUMP_SLOT convert_dev|168-187-1-0-22-7-0-0
11520|data|Elf32_Rel <0x1BBAC, 0x816>; R_ARM_JUMP_SLOT ux_socket_listen|172-187-1-0-22-8-0-0
11528|data|Elf32_Rel <0x1BBB0, 0x916>; R_ARM_JUMP_SLOT sigemptyset|176-187-1-0-22-9-0-0
11536|data|Elf32_Rel <0x1BBB4, 0xA16>; R_ARM_JUMP_SLOT strerror|180-187-1-0-22-10-0-0
11544|data|Elf32_Rel <0x1BBB8, 0xB16>; R_ARM_JUMP_SLOT orphan_path|184-187-1-0-22-11-0-0
11552|data|Elf32_Rel <0x1BBBC, 0xC16>; R_ARM_JUMP_SLOT dlog|188-187-1-0-22-12-0-0
11560|data|Elf32_Rel <0x1BBC0, 0xD16>; R_ARM_JUMP_SLOT filter_devnode|192-187-1-0-22-13-0-0
11568|data|Elf32_Rel <0x1BBC4, 0xE16>; R_ARM_JUMP_SLOT abort|196-187-1-0-22-14-0-0
11576|data|Elf32_Rel <0x1BBC8, 0xF16>; R_ARM_JUMP_SLOT __gcc_personality_v0|200-187-1-0-22-15-0-0
11584|data|Elf32_Rel <0x1BBCC, 0x1016>; R_ARM_JUMP_SLOT store_pathinfo|204-187-1-0-22-16-0-0
11592|data|Elf32_Rel <0x1BBD0, 0x1116>; R_ARM_JUMP_SLOT dm_lib_release|208-187-1-0-22-17-0-0
11600|data|Elf32_Rel <0x1BBD4, 0x1216>; R_ARM_JUMP_SLOT dm_drv_version|212-187-1-0-22-18-0-0
11608|data|Elf32_Rel <0x1BBD8, 0x1316>; R_ARM_JUMP_SLOT memcmp|216-187-1-0-22-19-0-0
11616|data|Elf32_Rel <0x1BBDC, 0x1416>; R_ARM_JUMP_SLOT snprint_devices|220-187-1-0-22-20-0-0
11624|data|Elf32_Rel <0x1BBE0, 0x1516>; R_ARM_JUMP_SLOT pthread_attr_setdetachstate|224-187-1-0-22-21-0-0
11632|data|Elf32_Rel <0x1BBE4, 0x1616>; R_ARM_JUMP_SLOT pthread_exit|228-187-1-0-22-22-0-0
11640|data|Elf32_Rel <0x1BBE8, 0x1716>; R_ARM_JUMP_SLOT __xstat|232-187-1-0-22-23-0-0
11648|data|Elf32_Rel <0x1BBEC, 0x1816>; R_ARM_JUMP_SLOT __libc_start_main|236-187-1-0-22-24-0-0
11656|data|Elf32_Rel <0x1BBF0, 0x1916>; R_ARM_JUMP_SLOT free_path|240-187-1-0-22-25-0-0
11664|data|Elf32_Rel <0x1BBF4, 0x1B16>; R_ARM_JUMP_SLOT dm_enablegroup|244-187-1-0-22-27-0-0
11672|data|Elf32_Rel <0x1BBF8, 0x1C16>; R_ARM_JUMP_SLOT xfree|248-187-1-0-22-28-0-0
11680|data|Elf32_Rel <0x1BBFC, 0x1D16>; R_ARM_JUMP_SLOT signal|252-187-1-0-22-29-0-0
11688|data|Elf32_Rel <0x1BC00, 0x1E16>; R_ARM_JUMP_SLOT uevent_listen|0-188-1-0-22-30-0-0
11696|data|Elf32_Rel <0x1BC04, 0x1F16>; R_ARM_JUMP_SLOT __gmon_start__|4-188-1-0-22-31-0-0
11704|data|Elf32_Rel <0x1BC08, 0x2116>; R_ARM_JUMP_SLOT cleanup_lock|8-188-1-0-22-33-0-0
11712|data|Elf32_Rel <0x1BC0C, 0x2216>; R_ARM_JUMP_SLOT tzset|12-188-1-0-22-34-0-0
11720|data|Elf32_Rel <0x1BC10, 0x2316>; R_ARM_JUMP_SLOT snprint_hwtable|16-188-1-0-22-35-0-0
11728|data|Elf32_Rel <0x1BC14, 0x2416>; R_ARM_JUMP_SLOT __isoc99_sscanf|20-188-1-0-22-36-0-0
11736|data|Elf32_Rel <0x1BC18, 0x2516>; R_ARM_JUMP_SLOT snprint_path_header|24-188-1-0-22-37-0-0
11744|data|Elf32_Rel <0x1BC1C, 0x2616>; R_ARM_JUMP_SLOT checker_enable|28-188-1-0-22-38-0-0
11752|data|Elf32_Rel <0x1BC20, 0x2716>; R_ARM_JUMP_SLOT strncpy|32-188-1-0-22-39-0-0
11760|data|Elf32_Rel <0x1BC24, 0x2816>; R_ARM_JUMP_SLOT fclose|36-188-1-0-22-40-0-0
11768|data|Elf32_Rel <0x1BC28, 0x2916>; R_ARM_JUMP_SLOT getenv|40-188-1-0-22-41-0-0
11776|data|Elf32_Rel <0x1BC2C, 0x2A16>; R_ARM_JUMP_SLOT __printf_chk|44-188-1-0-22-42-0-0
11784|data|Elf32_Rel <0x1BC30, 0x2B16>; R_ARM_JUMP_SLOT strchr|48-188-1-0-22-43-0-0
11792|data|Elf32_Rel <0x1BC34, 0x2C16>; R_ARM_JUMP_SLOT setrlimit|52-188-1-0-22-44-0-0
11800|data|Elf32_Rel <0x1BC38, 0x2D16>; R_ARM_JUMP_SLOT setlogmask|56-188-1-0-22-45-0-0
11808|data|Elf32_Rel <0x1BC3C, 0x2E16>; R_ARM_JUMP_SLOT snprint_blacklist_except|60-188-1-0-22-46-0-0
11816|data|Elf32_Rel <0x1BC40, 0x2F16>; R_ARM_JUMP_SLOT sem_init|64-188-1-0-22-47-0-0
11824|data|Elf32_Rel <0x1BC44, 0x3016>; R_ARM_JUMP_SLOT log_thread_stop|68-188-1-0-22-48-0-0
11832|data|Elf32_Rel <0x1BC48, 0x3116>; R_ARM_JUMP_SLOT fopen|72-188-1-0-22-49-0-0
11840|data|Elf32_Rel <0x1BC4C, 0x3216>; R_ARM_JUMP_SLOT sched_setscheduler|76-188-1-0-22-50-0-0
11848|data|Elf32_Rel <0x1BC50, 0x3316>; R_ARM_JUMP_SLOT memset|80-188-1-0-22-51-0-0
11856|data|Elf32_Rel <0x1BC54, 0x3416>; R_ARM_JUMP_SLOT alloc_config|84-188-1-0-22-52-0-0
11864|data|Elf32_Rel <0x1BC58, 0x3516>; R_ARM_JUMP_SLOT dm_get_info|88-188-1-0-22-53-0-0
11872|data|Elf32_Rel <0x1BC5C, 0x3616>; R_ARM_JUMP_SLOT setsid|92-188-1-0-22-54-0-0
11880|data|Elf32_Rel <0x1BC60, 0x3716>; R_ARM_JUMP_SLOT checker_disable|96-188-1-0-22-55-0-0
11888|data|Elf32_Rel <0x1BC64, 0x3816>; R_ARM_JUMP_SLOT snprint_blacklist_report|100-188-1-0-22-56-0-0
11896|data|Elf32_Rel <0x1BC68, 0x3916>; R_ARM_JUMP_SLOT start_waiter_thread|104-188-1-0-22-57-0-0
11904|data|Elf32_Rel <0x1BC6C, 0x3A16>; R_ARM_JUMP_SLOT path_discovery|108-188-1-0-22-58-0-0
11912|data|Elf32_Rel <0x1BC70, 0x3B16>; R_ARM_JUMP_SLOT uevent_get_disk_ro|112-188-1-0-22-59-0-0
11920|data|Elf32_Rel <0x1BC74, 0x3C16>; R_ARM_JUMP_SLOT free_pathvec|116-188-1-0-22-60-0-0
11928|data|Elf32_Rel <0x1BC78, 0x3D16>; R_ARM_JUMP_SLOT udev_device_ref|120-188-1-0-22-61-0-0
11936|data|Elf32_Rel <0x1BC7C, 0x3E16>; R_ARM_JUMP_SLOT ppoll|124-188-1-0-22-62-0-0
11944|data|Elf32_Rel <0x1BC80, 0x3F16>; R_ARM_JUMP_SLOT uevent_get_minor|128-188-1-0-22-63-0-0
11952|data|Elf32_Rel <0x1BC84, 0x4016>; R_ARM_JUMP_SLOT dm_get_maps|132-188-1-0-22-64-0-0
11960|data|Elf32_Rel <0x1BC88, 0x4116>; R_ARM_JUMP_SLOT update_mpp_paths|136-188-1-0-22-65-0-0
11968|data|Elf32_Rel <0x1BC8C, 0x4316>; R_ARM_JUMP_SLOT _exit|140-188-1-0-22-67-0-0
11976|data|Elf32_Rel <0x1BC90, 0x4416>; R_ARM_JUMP_SLOT udev_new|144-188-1-0-22-68-0-0
11984|data|Elf32_Rel <0x1BC94, 0x4516>; R_ARM_JUMP_SLOT getuid|148-188-1-0-22-69-0-0
11992|data|Elf32_Rel <0x1BC98, 0x4616>; R_ARM_JUMP_SLOT filter_wwid|152-188-1-0-22-70-0-0
12000|data|Elf32_Rel <0x1BC9C, 0x4716>; R_ARM_JUMP_SLOT remove_map_and_stop_waiter|156-188-1-0-22-71-0-0
12008|data|Elf32_Rel <0x1BCA0, 0x4916>; R_ARM_JUMP_SLOT free|160-188-1-0-22-73-0-0
12016|data|Elf32_Rel <0x1BCA4, 0x4A16>; R_ARM_JUMP_SLOT find_mp_by_alias|164-188-1-0-22-74-0-0
12024|data|Elf32_Rel <0x1BCA8, 0x4B16>; R_ARM_JUMP_SLOT write|168-188-1-0-22-75-0-0
12032|data|Elf32_Rel <0x1BCAC, 0x4C16>; R_ARM_JUMP_SLOT udev_set_sync_support|172-188-1-0-22-76-0-0
12040|data|Elf32_Rel <0x1BCB0, 0x4D16>; R_ARM_JUMP_SLOT __setup_multipath|176-188-1-0-22-77-0-0
12048|data|Elf32_Rel <0x1BCB4, 0x4E16>; R_ARM_JUMP_SLOT update_queue_mode_add_path|180-188-1-0-22-78-0-0
12056|data|Elf32_Rel <0x1BCB8, 0x4F16>; R_ARM_JUMP_SLOT find_slot|184-188-1-0-22-79-0-0
12064|data|Elf32_Rel <0x1BCBC, 0x5116>; R_ARM_JUMP_SLOT log_reset|188-188-1-0-22-81-0-0
12072|data|Elf32_Rel <0x1BCC0, 0x5216>; R_ARM_JUMP_SLOT gettimeofday|192-188-1-0-22-82-0-0
12080|data|Elf32_Rel <0x1BCC4, 0x5316>; R_ARM_JUMP_SLOT init_checkers|196-188-1-0-22-83-0-0
12088|data|Elf32_Rel <0x1BCC8, 0x5416>; R_ARM_JUMP_SLOT dm_type|200-188-1-0-22-84-0-0
12096|data|Elf32_Rel <0x1BCCC, 0x5516>; R_ARM_JUMP_SLOT accept|204-188-1-0-22-85-0-0
12104|data|Elf32_Rel <0x1BCD0, 0x5616>; R_ARM_JUMP_SLOT mpath_alloc_prin_response|208-188-1-0-22-86-0-0
12112|data|Elf32_Rel <0x1BCD4, 0x5716>; R_ARM_JUMP_SLOT domap|212-188-1-0-22-87-0-0
12120|data|Elf32_Rel <0x1BCD8, 0x5816>; R_ARM_JUMP_SLOT checker_message|216-188-1-0-22-88-0-0
12128|data|Elf32_Rel <0x1BCDC, 0x5916>; R_ARM_JUMP_SLOT orphan_paths|220-188-1-0-22-89-0-0
12136|data|Elf32_Rel <0x1BCE0, 0x5A16>; R_ARM_JUMP_SLOT pthread_mutex_unlock|224-188-1-0-22-90-0-0
12144|data|Elf32_Rel <0x1BCE4, 0x5B16>; R_ARM_JUMP_SLOT dm_init|228-188-1-0-22-91-0-0
12152|data|Elf32_Rel <0x1BCE8, 0x5C16>; R_ARM_JUMP_SLOT umask|232-188-1-0-22-92-0-0
12160|data|Elf32_Rel <0x1BCEC, 0x5D16>; R_ARM_JUMP_SLOT log_thread_start|236-188-1-0-22-93-0-0
12168|data|Elf32_Rel <0x1BCF0, 0x5E16>; R_ARM_JUMP_SLOT remove_maps|240-188-1-0-22-94-0-0
12176|data|Elf32_Rel <0x1BCF4, 0x5F16>; R_ARM_JUMP_SLOT dm_lib_exit|244-188-1-0-22-95-0-0
12184|data|Elf32_Rel <0x1BCF8, 0x6016>; R_ARM_JUMP_SLOT send_packet|248-188-1-0-22-96-0-0
12192|data|Elf32_Rel <0x1BCFC, 0x6116>; R_ARM_JUMP_SLOT isatty|252-188-1-0-22-97-0-0
12200|data|Elf32_Rel <0x1BD00, 0x6216>; R_ARM_JUMP_SLOT dm_get_minor|0-189-1-0-22-98-0-0
12208|data|Elf32_Rel <0x1BD04, 0x6416>; R_ARM_JUMP_SLOT pthread_mutex_lock|4-189-1-0-22-100-0-0
12216|data|Elf32_Rel <0x1BD08, 0x6516>; R_ARM_JUMP_SLOT snprint_blacklist|8-189-1-0-22-101-0-0
12224|data|Elf32_Rel <0x1BD0C, 0x6616>; R_ARM_JUMP_SLOT strlen|12-189-1-0-22-102-0-0
12232|data|Elf32_Rel <0x1BD10, 0x6716>; R_ARM_JUMP_SLOT cleanup_prio|16-189-1-0-22-103-0-0
12240|data|Elf32_Rel <0x1BD14, 0x6916>; R_ARM_JUMP_SLOT unlink|20-189-1-0-22-105-0-0
12248|data|Elf32_Rel <0x1BD18, 0x6A16>; R_ARM_JUMP_SLOT getopt|24-189-1-0-22-106-0-0
12256|data|Elf32_Rel <0x1BD1C, 0x6B16>; R_ARM_JUMP_SLOT pthread_create|28-189-1-0-22-107-0-0
12264|data|Elf32_Rel <0x1BD20, 0x6C16>; R_ARM_JUMP_SLOT dm_reassign|32-189-1-0-22-108-0-0
12272|data|Elf32_Rel <0x1BD24, 0x6D16>; R_ARM_JUMP_SLOT pathinfo|36-189-1-0-22-109-0-0
12280|data|Elf32_Rel <0x1BD28, 0x6E16>; R_ARM_JUMP_SLOT vector_alloc_slot|40-189-1-0-22-110-0-0
12288|data|Elf32_Rel <0x1BD2C, 0x6F16>; R_ARM_JUMP_SLOT prin_do_scsi_ioctl|44-189-1-0-22-111-0-0
12296|data|Elf32_Rel <0x1BD30, 0x7016>; R_ARM_JUMP_SLOT find_mp_by_minor|48-189-1-0-22-112-0-0
12304|data|Elf32_Rel <0x1BD34, 0x7116>; R_ARM_JUMP_SLOT vector_free|52-189-1-0-22-113-0-0
12312|data|Elf32_Rel <0x1BD38, 0x7216>; R_ARM_JUMP_SLOT udev_device_unref|56-189-1-0-22-114-0-0
12320|data|Elf32_Rel <0x1BD3C, 0x7316>; R_ARM_JUMP_SLOT strtol|60-189-1-0-22-115-0-0
12328|data|Elf32_Rel <0x1BD40, 0x7416>; R_ARM_JUMP_SLOT sigaddset|64-189-1-0-22-116-0-0
12336|data|Elf32_Rel <0x1BD44, 0x7516>; R_ARM_JUMP_SLOT add_map_without_path|68-189-1-0-22-117-0-0
12344|data|Elf32_Rel <0x1BD48, 0x7616>; R_ARM_JUMP_SLOT sem_post|72-189-1-0-22-118-0-0
12352|data|Elf32_Rel <0x1BD4C, 0x7716>; R_ARM_JUMP_SLOT snprint_multipath_topology|76-189-1-0-22-119-0-0
12360|data|Elf32_Rel <0x1BD50, 0x7816>; R_ARM_JUMP_SLOT pthread_sigmask|80-189-1-0-22-120-0-0
12368|data|Elf32_Rel <0x1BD54, 0x7916>; R_ARM_JUMP_SLOT pthread_mutex_destroy|84-189-1-0-22-121-0-0
12376|data|Elf32_Rel <0x1BD58, 0x7A16>; R_ARM_JUMP_SLOT update_map_pr|88-189-1-0-22-122-0-0
12384|data|Elf32_Rel <0x1BD5C, 0x7B16>; R_ARM_JUMP_SLOT dm_fail_path|92-189-1-0-22-123-0-0
12392|data|Elf32_Rel <0x1BD60, 0x7D16>; R_ARM_JUMP_SLOT dm_mapname|96-189-1-0-22-125-0-0
12400|data|Elf32_Rel <0x1BD64, 0x7E16>; R_ARM_JUMP_SLOT verify_paths|100-189-1-0-22-126-0-0
12408|data|Elf32_Rel <0x1BD68, 0x7F16>; R_ARM_JUMP_SLOT setup_map|104-189-1-0-22-127-0-0
12416|data|Elf32_Rel <0x1BD6C, 0x8016>; R_ARM_JUMP_SLOT recv_packet|108-189-1-0-22-128-0-0
12424|data|Elf32_Rel <0x1BD70, 0x8116>; R_ARM_JUMP_SLOT snprint_status|112-189-1-0-22-129-0-0
12432|data|Elf32_Rel <0x1BD74, 0x8216>; R_ARM_JUMP_SLOT mlockall|116-189-1-0-22-130-0-0
12440|data|Elf32_Rel <0x1BD78, 0x8316>; R_ARM_JUMP_SLOT checker_clear_message|120-189-1-0-22-131-0-0
12448|data|Elf32_Rel <0x1BD7C, 0x8416>; R_ARM_JUMP_SLOT select_path_group|124-189-1-0-22-132-0-0
12456|data|Elf32_Rel <0x1BD80, 0x8516>; R_ARM_JUMP_SLOT dm_switchgroup|128-189-1-0-22-133-0-0
12464|data|Elf32_Rel <0x1BD84, 0x8616>; R_ARM_JUMP_SLOT setup_thread_attr|132-189-1-0-22-134-0-0
12472|data|Elf32_Rel <0x1BD88, 0x8716>; R_ARM_JUMP_SLOT snprint_wildcards|136-189-1-0-22-135-0-0
12480|data|Elf32_Rel <0x1BD8C, 0x8816>; R_ARM_JUMP_SLOT __snprintf_chk|140-189-1-0-22-136-0-0
12488|data|Elf32_Rel <0x1BD90, 0x8916>; R_ARM_JUMP_SLOT pthread_mutex_init|144-189-1-0-22-137-0-0
12496|data|Elf32_Rel <0x1BD94, 0x8A16>; R_ARM_JUMP_SLOT vector_alloc|148-189-1-0-22-138-0-0
12504|data|Elf32_Rel <0x1BD98, 0x8B16>; R_ARM_JUMP_SLOT find_path_by_devt|152-189-1-0-22-139-0-0
12512|data|Elf32_Rel <0x1BD9C, 0x8C16>; R_ARM_JUMP_SLOT strstr|156-189-1-0-22-140-0-0
12520|data|Elf32_Rel <0x1BDA0, 0x8D16>; R_ARM_JUMP_SLOT udev_unref|160-189-1-0-22-141-0-0
12528|data|Elf32_Rel <0x1BDA4, 0x8E16>; R_ARM_JUMP_SLOT uevent_get_major|164-189-1-0-22-142-0-0
12536|data|Elf32_Rel <0x1BDA8, 0x8F16>; R_ARM_JUMP_SLOT path_offline|168-189-1-0-22-143-0-0
12544|data|Elf32_Rel <0x1BDAC, 0x9016>; R_ARM_JUMP_SLOT close|172-189-1-0-22-144-0-0
12552|data|Elf32_Rel <0x1BDB0, 0x9116>; R_ARM_JUMP_SLOT update_multipath|176-189-1-0-22-145-0-0
12560|data|Elf32_Rel <0x1BDB4, 0x9216>; R_ARM_JUMP_SLOT prout_do_scsi_ioctl|180-189-1-0-22-146-0-0
12568|data|Elf32_Rel <0x1BDB8, 0x9316>; R_ARM_JUMP_SLOT _dm_flush_map|184-189-1-0-22-147-0-0
12576|data|Elf32_Rel <0x1BDBC, 0x9416>; R_ARM_JUMP_SLOT fwrite|188-189-1-0-22-148-0-0
12584|data|Elf32_Rel <0x1BDC0, 0x9516>; R_ARM_JUMP_SLOT update_queue_mode_del_path|192-189-1-0-22-149-0-0
12592|data|Elf32_Rel <0x1BDC4, 0x9616>; R_ARM_JUMP_SLOT udev_device_new_from_subsystem_sysname|196-189-1-0-22-150-0-0
12600|data|Elf32_Rel <0x1BDC8, 0x9716>; R_ARM_JUMP_SLOT cleanup_checkers|200-189-1-0-22-151-0-0
12608|data|Elf32_Rel <0x1BDCC, 0x9816>; R_ARM_JUMP_SLOT reload_map|204-189-1-0-22-152-0-0
12616|data|Elf32_Rel <0x1BDD0, 0x9916>; R_ARM_JUMP_SLOT dm_queue_if_no_path|208-189-1-0-22-153-0-0
12624|data|Elf32_Rel <0x1BDD4, 0x9A16>; R_ARM_JUMP_SLOT __ctype_b_loc|212-189-1-0-22-154-0-0
12632|data|Elf32_Rel <0x1BDD8, 0x9B16>; R_ARM_JUMP_SLOT dm_reinstate_path|216-189-1-0-22-155-0-0
12640|data|Elf32_Rel <0x1BDDC, 0x9C16>; R_ARM_JUMP_SLOT readline|220-189-1-0-22-156-0-0
12648|data|Elf32_Rel <0x1BDE0, 0x9D16>; R_ARM_JUMP_SLOT malloc|224-189-1-0-22-157-0-0
12656|data|Elf32_Rel <0x1BDE4, 0x9E16>; R_ARM_JUMP_SLOT get_path_layout|228-189-1-0-22-158-0-0
12664|data|Elf32_Rel <0x1BDE8, 0x9F16>; R_ARM_JUMP_SLOT remove_map|232-189-1-0-22-159-0-0
12672|data|Elf32_Rel <0x1BDEC, 0xA016>; R_ARM_JUMP_SLOT __stack_chk_fail|236-189-1-0-22-160-0-0
12680|data|Elf32_Rel <0x1BDF0, 0xA116>; R_ARM_JUMP_SLOT sigaction|240-189-1-0-22-161-0-0
12688|data|Elf32_Rel <0x1BDF4, 0xA216>; R_ARM_JUMP_SLOT sigdelset|244-189-1-0-22-162-0-0
12696|data|Elf32_Rel <0x1BDF8, 0xA316>; R_ARM_JUMP_SLOT chdir|248-189-1-0-22-163-0-0
12704|data|Elf32_Rel <0x1BDFC, 0xA416>; R_ARM_JUMP_SLOT __fprintf_chk|252-189-1-0-22-164-0-0
12712|data|Elf32_Rel <0x1BE00, 0xA516>; R_ARM_JUMP_SLOT pthread_attr_init|0-190-1-0-22-165-0-0
12720|data|Elf32_Rel <0x1BE04, 0xA616>; R_ARM_JUMP_SLOT alloc_strvec|4-190-1-0-22-166-0-0
12728|data|Elf32_Rel <0x1BE08, 0xA716>; R_ARM_JUMP_SLOT dm_map_present|8-190-1-0-22-167-0-0
12736|data|Elf32_Rel <0x1BE0C, 0xA816>; R_ARM_JUMP_SLOT vector_del_slot|12-190-1-0-22-168-0-0
12744|data|Elf32_Rel <0x1BE10, 0xAA16>; R_ARM_JUMP_SLOT ftruncate|16-190-1-0-22-170-0-0
12752|data|Elf32_Rel <0x1BE14, 0xAB16>; R_ARM_JUMP_SLOT snprint_defaults|20-190-1-0-22-171-0-0
12760|data|Elf32_Rel <0x1BE18, 0xAC16>; R_ARM_JUMP_SLOT sleep|24-190-1-0-22-172-0-0
12768|data|Elf32_Rel <0x1BE1C, 0xAD16>; R_ARM_JUMP_SLOT dm_get_major|28-190-1-0-22-173-0-0
12776|data|Elf32_Rel <0x1BE20, 0xAE16>; R_ARM_JUMP_SLOT dm_simplecmd_noflush|32-190-1-0-22-174-0-0
12784|data|Elf32_Rel <0x1BE24, 0xAF16>; R_ARM_JUMP_SLOT find_path_by_dev|36-190-1-0-22-175-0-0
12792|data|Elf32_Rel <0x1BE28, 0xB116>; R_ARM_JUMP_SLOT pthread_testcancel|40-190-1-0-22-177-0-0
12800|data|Elf32_Rel <0x1BE2C, 0xB216>; R_ARM_JUMP_SLOT init_prio|44-190-1-0-22-178-0-0
12808|data|Elf32_Rel <0x1BE30, 0xB316>; R_ARM_JUMP_SLOT zalloc|48-190-1-0-22-179-0-0
12816|data|Elf32_Rel <0x1BE34, 0xB416>; R_ARM_JUMP_SLOT snprint_path|52-190-1-0-22-180-0-0
12824|data|Elf32_Rel <0x1BE38, 0xB516>; R_ARM_JUMP_SLOT ux_socket_connect|56-190-1-0-22-181-0-0
12832|data|Elf32_Rel <0x1BE3C, 0xB616>; R_ARM_JUMP_SLOT puts|60-190-1-0-22-182-0-0
12840|data|Elf32_Rel <0x1BE40, 0xB716>; R_ARM_JUMP_SLOT filter_path|64-190-1-0-22-183-0-0
12848|data|Elf32_Rel <0x1BE44, 0xB916>; R_ARM_JUMP_SLOT getpid|68-190-1-0-22-185-0-0
12856|data|Elf32_Rel <0x1BE48, 0xBA16>; R_ARM_JUMP_SLOT uevent_get_dm_name|72-190-1-0-22-186-0-0
12864|data|Elf32_Rel <0x1BE4C, 0xBB16>; R_ARM_JUMP_SLOT get_state|76-190-1-0-22-187-0-0
12872|data|Elf32_Rel <0x1BE50, 0xBC16>; R_ARM_JUMP_SLOT snprint_mptable|80-190-1-0-22-188-0-0
12880|data|Elf32_Rel <0x1BE54, 0xBD16>; R_ARM_JUMP_SLOT remove_maps_and_stop_waiters|84-190-1-0-22-189-0-0
12888|data|Elf32_Rel <0x1BE58, 0xBF16>; R_ARM_JUMP_SLOT free_strvec|88-190-1-0-22-191-0-0
12896|data|Elf32_Rel <0x1BE5C, 0xC016>; R_ARM_JUMP_SLOT fcntl|92-190-1-0-22-192-0-0
12904|data|Elf32_Rel <0x1BE60, 0xC116>; R_ARM_JUMP_SLOT dup|96-190-1-0-22-193-0-0
12912|data|Elf32_Rel <0x1BE64, 0xC216>; R_ARM_JUMP_SLOT fork|100-190-1-0-22-194-0-0
12920|data|Elf32_Rel <0x1BE68, 0xC316>; R_ARM_JUMP_SLOT pthread_attr_destroy|104-190-1-0-22-195-0-0
12928|data|Elf32_Rel <0x1BE6C, 0xC516>; R_ARM_JUMP_SLOT snprint_multipath|108-190-1-0-22-197-0-0
12936|data|Elf32_Rel <0x1BE70, 0xC716>; R_ARM_JUMP_SLOT snprintf|112-190-1-0-22-199-0-0
12944|data|Elf32_Rel <0x1BE74, 0xC816>; R_ARM_JUMP_SLOT __sprintf_chk|116-190-1-0-22-200-0-0
12952|data|Elf32_Rel <0x1BE78, 0xC916>; R_ARM_JUMP_SLOT strncmp|120-190-1-0-22-201-0-0
12960|data|Elf32_Rel <0x1BE7C, 0xCA16>; R_ARM_JUMP_SLOT get_refwwid|124-190-1-0-22-202-0-0
12968|data|Elf32_Rel <0x1BE80, 0xCB16>; R_ARM_JUMP_SLOT realloc|128-190-1-0-22-203-0-0
12976|data|Elf32_Rel <0x1BE84, 0xCC16>; R_ARM_JUMP_SLOT add_history|132-190-1-0-22-204-0-0
12984|data|Elf32_Rel <0x1BE88, 0xCD16>; R_ARM_JUMP_SLOT getrlimit|136-190-1-0-22-205-0-0
12992|data|Elf32_Rel <0x1BE8C, 0xCE16>; R_ARM_JUMP_SLOT _IO_putc|140-190-1-0-22-206-0-0
13000|data|Elf32_Rel <0x1BE90, 0xCF16>; R_ARM_JUMP_SLOT __strdup|144-190-1-0-22-207-0-0
13008|data|Elf32_Rel <0x1BE94, 0xD016>; R_ARM_JUMP_SLOT _Unwind_Resume|148-190-1-0-22-208-0-0
13016|data|Elf32_Rel <0x1BE98, 0xD216>; R_ARM_JUMP_SLOT sem_wait|152-190-1-0-22-210-0-0
13024|data|Elf32_Rel <0x1BE9C, 0xD316>; R_ARM_JUMP_SLOT coalesce_paths|156-190-1-0-22-211-0-0
13032|data|Elf32_Rel <0x1BEA0, 0xD416>; R_ARM_JUMP_SLOT snprint_multipath_header|160-190-1-0-22-212-0-0
13040|data|Elf32_Rel <0x1BEA4, 0xD516>; R_ARM_JUMP_SLOT get_multipath_layout|164-190-1-0-22-213-0-0
13048|data|Elf32_Rel <0x1BEA8, 0xD616>; R_ARM_JUMP_SLOT uevent_dispatch|168-190-1-0-22-214-0-0
13056|data|Elf32_Rel <0x1BEAC, 0xD716>; R_ARM_JUMP_SLOT find_mp_by_str|172-190-1-0-22-215-0-0
13064|data|Elf32_Rel <0x1BEB0, 0xD816>; R_ARM_JUMP_SLOT vector_set_slot|176-190-1-0-22-216-0-0
13072|data|Elf32_Rel <0x1BEB4, 0xD916>; R_ARM_JUMP_SLOT strcmp|180-190-1-0-22-217-0-0
13080|data|Elf32_Rel <0x1BEB8, 0xDA16>; R_ARM_JUMP_SLOT update_multipath_strings|184-190-1-0-22-218-0-0
13088|data|Elf32_Rel <0x1BEBC, 0xDB16>; R_ARM_JUMP_SLOT exit|188-190-1-0-22-219-0-0
13096|data|Elf32_Rel <0x1BEC0, 0xDC16>; R_ARM_JUMP_SLOT dumpHex|192-190-1-0-22-220-0-0
13104|data|Elf32_Rel <0x1BEC4, 0xDD16>; R_ARM_JUMP_SLOT __errno_location|196-190-1-0-22-221-0-0
13112|data|Elf32_Rel <0x1BEC8, 0xDE16>; R_ARM_JUMP_SLOT pthread_cancel|200-190-1-0-22-222-0-0
13120|data|Elf32_Rel <0x1BECC, 0xDF16>; R_ARM_JUMP_SLOT adopt_paths|204-190-1-0-22-223-0-0
13128|data|Elf32_Rel <0x1BED0, 0xE116>; R_ARM_JUMP_SLOT __cxa_finalize|208-190-1-0-22-225-0-0
13136|data|Elf32_Rel <0x1BED4, 0xE216>; R_ARM_JUMP_SLOT pthread_join|212-190-1-0-22-226-0-0
13144|data|Elf32_Rel <0x1BED8, 0xE316>; R_ARM_JUMP_SLOT load_config|216-190-1-0-22-227-0-0
13152|data|Elf32_Rel <0x1BEDC, 0xE416>; R_ARM_JUMP_SLOT add_map_with_path|220-190-1-0-22-228-0-0
13160|data|Elf32_Rel <0x1BEE0, 0xE516>; R_ARM_JUMP_SLOT find_mp_by_wwid|224-190-1-0-22-229-0-0
13168|code|PUSH            {R3,LR}; _init|8-64-45-233
13172|code|BL              sub_4890|69-5-0-235
13176|code|POP             {R3,PC}|8-128-189-232
13180|code|PUSH            {LR}|4-224-45-229
13184|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x338C)|4-224-159-229
13188|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
13192|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
13196|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x338C|0-136-1-0
13200|code|ADR             R12, 0x3398|0-198-143-226
13204|code|ADD             R12, R12, #0x18000|24-202-140-226
13208|code|LDR             PC, [R12,#(free_config_ptr - 0x1B398)]!; __imp_free_config|0-248-188-229
13212|code|ADR             R12, 0x33A4|0-198-143-226
13216|code|ADD             R12, R12, #0x18000|24-202-140-226
13220|code|LDR             PC, [R12,#(open_ptr - 0x1B3A4)]!; __imp_open|248-247-188-229
13224|code|ADR             R12, 0x33B0|0-198-143-226
13228|code|ADD             R12, R12, #0x18000|24-202-140-226
13232|code|LDR             PC, [R12,#(sysfs_get_size_ptr - 0x1B3B0)]!; __imp_sysfs_get_size|240-247-188-229
13236|code|ADR             R12, 0x33BC|0-198-143-226
13240|code|ADD             R12, R12, #0x18000|24-202-140-226
13244|code|LDR             PC, [R12,#(remember_wwid_ptr - 0x1B3BC)]!; __imp_remember_wwid|232-247-188-229
13248|code|ADR             R12, 0x33C8|0-198-143-226
13252|code|ADD             R12, R12, #0x18000|24-202-140-226
13256|code|LDR             PC, [R12,#(convert_dev_ptr - 0x1B3C8)]!; __imp_convert_dev|224-247-188-229
13260|code|ADR             R12, 0x33D4|0-198-143-226
13264|code|ADD             R12, R12, #0x18000|24-202-140-226
13268|code|LDR             PC, [R12,#(ux_socket_listen_ptr - 0x1B3D4)]!; __imp_ux_socket_listen|216-247-188-229
13272|code|ADR             R12, 0x33E0|0-198-143-226
13276|code|ADD             R12, R12, #0x18000|24-202-140-226
13280|code|LDR             PC, [R12,#(sigemptyset_ptr - 0x1B3E0)]!; __imp_sigemptyset|208-247-188-229
13284|code|ADR             R12, 0x33EC|0-198-143-226
13288|code|ADD             R12, R12, #0x18000|24-202-140-226
13292|code|LDR             PC, [R12,#(strerror_ptr - 0x1B3EC)]!; __imp_strerror|200-247-188-229
13296|code|ADR             R12, 0x33F8|0-198-143-226
13300|code|ADD             R12, R12, #0x18000|24-202-140-226
13304|code|LDR             PC, [R12,#(orphan_path_ptr - 0x1B3F8)]!; __imp_orphan_path|192-247-188-229
13308|code|BX              PC|120-71
13310|data|ALIGN 4|192-70
13312|code|ADR             R12, 0x3408|0-198-143-226
13316|code|ADD             R12, R12, #0x18000|24-202-140-226
13320|code|LDR             PC, [R12,#(dlog_ptr - 0x1B408)]!; __imp_dlog|180-247-188-229
13324|code|ADR             R12, 0x3414|0-198-143-226
13328|code|ADD             R12, R12, #0x18000|24-202-140-226
13332|code|LDR             PC, [R12,#(filter_devnode_ptr - 0x1B414)]!; __imp_filter_devnode|172-247-188-229
13336|code|ADR             R12, 0x3420|0-198-143-226
13340|code|ADD             R12, R12, #0x18000|24-202-140-226
13344|code|LDR             PC, [R12,#(abort_ptr - 0x1B420)]!; __imp_abort|164-247-188-229
13348|code|ADR             R12, 0x342C|0-198-143-226
13352|code|ADD             R12, R12, #0x18000|24-202-140-226
13356|code|LDR             PC, [R12,#(__gcc_personality_v0_ptr - 0x1B42C)]!; __imp___gcc_personality_v0|156-247-188-229
13360|code|ADR             R12, 0x3438|0-198-143-226
13364|code|ADD             R12, R12, #0x18000|24-202-140-226
13368|code|LDR             PC, [R12,#(store_pathinfo_ptr - 0x1B438)]!; __imp_store_pathinfo|148-247-188-229
13372|code|ADR             R12, 0x3444|0-198-143-226
13376|code|ADD             R12, R12, #0x18000|24-202-140-226
13380|code|LDR             PC, [R12,#(dm_lib_release_ptr - 0x1B444)]!; __imp_dm_lib_release|140-247-188-229
13384|code|ADR             R12, 0x3450|0-198-143-226
13388|code|ADD             R12, R12, #0x18000|24-202-140-226
13392|code|LDR             PC, [R12,#(dm_drv_version_ptr - 0x1B450)]!; __imp_dm_drv_version|132-247-188-229
13396|code|ADR             R12, 0x345C|0-198-143-226
13400|code|ADD             R12, R12, #0x18000|24-202-140-226
13404|code|LDR             PC, [R12,#(memcmp_ptr - 0x1B45C)]!; __imp_memcmp|124-247-188-229
13408|code|ADR             R12, 0x3468|0-198-143-226
13412|code|ADD             R12, R12, #0x18000|24-202-140-226
13416|code|LDR             PC, [R12,#(snprint_devices_ptr - 0x1B468)]!; __imp_snprint_devices|116-247-188-229
13420|code|ADR             R12, 0x3474|0-198-143-226
13424|code|ADD             R12, R12, #0x18000|24-202-140-226
13428|code|LDR             PC, [R12,#(pthread_attr_setdetachstate_ptr - 0x1B474)]!; __imp_pthread_attr_setdetachstate|108-247-188-229
13432|code|ADR             R12, 0x3480|0-198-143-226
13436|code|ADD             R12, R12, #0x18000|24-202-140-226
13440|code|LDR             PC, [R12,#(pthread_exit_ptr - 0x1B480)]!; __imp_pthread_exit|100-247-188-229
13444|code|ADR             R12, 0x348C|0-198-143-226
13448|code|ADD             R12, R12, #0x18000|24-202-140-226
13452|code|LDR             PC, [R12,#(__xstat_ptr - 0x1B48C)]!; __imp___xstat|92-247-188-229
13456|code|ADR             R12, 0x3498|0-198-143-226
13460|code|ADD             R12, R12, #0x18000|24-202-140-226
13464|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x1B498)]!; __imp___libc_start_main|84-247-188-229
13468|code|ADR             R12, 0x34A4|0-198-143-226
13472|code|ADD             R12, R12, #0x18000|24-202-140-226
13476|code|LDR             PC, [R12,#(free_path_ptr - 0x1B4A4)]!; __imp_free_path|76-247-188-229
13480|code|ADR             R12, 0x34B0|0-198-143-226
13484|code|ADD             R12, R12, #0x18000|24-202-140-226
13488|code|LDR             PC, [R12,#(dm_enablegroup_ptr - 0x1B4B0)]!; __imp_dm_enablegroup|68-247-188-229
13492|code|BX              PC|120-71
13494|data|ALIGN 4|192-70
13496|code|ADR             R12, 0x34C0|0-198-143-226
13500|code|ADD             R12, R12, #0x18000|24-202-140-226
13504|code|LDR             PC, [R12,#(xfree_ptr - 0x1B4C0)]!; __imp_xfree|56-247-188-229
13508|code|ADR             R12, 0x34CC|0-198-143-226
13512|code|ADD             R12, R12, #0x18000|24-202-140-226
13516|code|LDR             PC, [R12,#(signal_ptr - 0x1B4CC)]!; __imp_signal|48-247-188-229
13520|code|ADR             R12, 0x34D8|0-198-143-226
13524|code|ADD             R12, R12, #0x18000|24-202-140-226
13528|code|LDR             PC, [R12,#(uevent_listen_ptr - 0x1B4D8)]!; __imp_uevent_listen|40-247-188-229
13532|code|ADR             R12, 0x34E4|0-198-143-226
13536|code|ADD             R12, R12, #0x18000|24-202-140-226
13540|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x1B4E4)]!; __imp___gmon_start__|32-247-188-229
13544|code|ADR             R12, 0x34F0|0-198-143-226
13548|code|ADD             R12, R12, #0x18000|24-202-140-226
13552|code|LDR             PC, [R12,#(cleanup_lock_ptr - 0x1B4F0)]!; __imp_cleanup_lock|24-247-188-229
13556|code|ADR             R12, 0x34FC|0-198-143-226
13560|code|ADD             R12, R12, #0x18000|24-202-140-226
13564|code|LDR             PC, [R12,#(tzset_ptr - 0x1B4FC)]!; __imp_tzset|16-247-188-229
13568|code|ADR             R12, 0x3508|0-198-143-226
13572|code|ADD             R12, R12, #0x18000|24-202-140-226
13576|code|LDR             PC, [R12,#(snprint_hwtable_ptr - 0x1B508)]!; __imp_snprint_hwtable|8-247-188-229
13580|code|ADR             R12, 0x3514|0-198-143-226
13584|code|ADD             R12, R12, #0x18000|24-202-140-226
13588|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x1B514)]!; __imp___isoc99_sscanf|0-247-188-229
13592|code|ADR             R12, 0x3520|0-198-143-226
13596|code|ADD             R12, R12, #0x18000|24-202-140-226
13600|code|LDR             PC, [R12,#(snprint_path_header_ptr - 0x1B520)]!; __imp_snprint_path_header|248-246-188-229
13604|code|ADR             R12, 0x352C|0-198-143-226
13608|code|ADD             R12, R12, #0x18000|24-202-140-226
13612|code|LDR             PC, [R12,#(checker_enable_ptr - 0x1B52C)]!; __imp_checker_enable|240-246-188-229
13616|code|ADR             R12, 0x3538|0-198-143-226
13620|code|ADD             R12, R12, #0x18000|24-202-140-226
13624|code|LDR             PC, [R12,#(strncpy_ptr - 0x1B538)]!; __imp_strncpy|232-246-188-229
13628|code|ADR             R12, 0x3544|0-198-143-226
13632|code|ADD             R12, R12, #0x18000|24-202-140-226
13636|code|LDR             PC, [R12,#(fclose_ptr - 0x1B544)]!; __imp_fclose|224-246-188-229
13640|code|ADR             R12, 0x3550|0-198-143-226
13644|code|ADD             R12, R12, #0x18000|24-202-140-226
13648|code|LDR             PC, [R12,#(getenv_ptr - 0x1B550)]!; __imp_getenv|216-246-188-229
13652|code|ADR             R12, 0x355C|0-198-143-226
13656|code|ADD             R12, R12, #0x18000|24-202-140-226
13660|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x1B55C)]!; __imp___printf_chk|208-246-188-229
13664|code|ADR             R12, 0x3568|0-198-143-226
13668|code|ADD             R12, R12, #0x18000|24-202-140-226
13672|code|LDR             PC, [R12,#(strchr_ptr - 0x1B568)]!; __imp_strchr|200-246-188-229
13676|code|ADR             R12, 0x3574|0-198-143-226
13680|code|ADD             R12, R12, #0x18000|24-202-140-226
13684|code|LDR             PC, [R12,#(setrlimit_ptr - 0x1B574)]!; __imp_setrlimit|192-246-188-229
13688|code|ADR             R12, 0x3580|0-198-143-226
13692|code|ADD             R12, R12, #0x18000|24-202-140-226
13696|code|LDR             PC, [R12,#(setlogmask_ptr - 0x1B580)]!; __imp_setlogmask|184-246-188-229
13700|code|ADR             R12, 0x358C|0-198-143-226
13704|code|ADD             R12, R12, #0x18000|24-202-140-226
13708|code|LDR             PC, [R12,#(snprint_blacklist_except_ptr - 0x1B58C)]!; __imp_snprint_blacklist_except|176-246-188-229
13712|code|ADR             R12, 0x3598|0-198-143-226
13716|code|ADD             R12, R12, #0x18000|24-202-140-226
13720|code|LDR             PC, [R12,#(sem_init_ptr - 0x1B598)]!; __imp_sem_init|168-246-188-229
13724|code|ADR             R12, 0x35A4|0-198-143-226
13728|code|ADD             R12, R12, #0x18000|24-202-140-226
13732|code|LDR             PC, [R12,#(log_thread_stop_ptr - 0x1B5A4)]!; __imp_log_thread_stop|160-246-188-229
13736|code|ADR             R12, 0x35B0|0-198-143-226
13740|code|ADD             R12, R12, #0x18000|24-202-140-226
13744|code|LDR             PC, [R12,#(fopen_ptr - 0x1B5B0)]!; __imp_fopen|152-246-188-229
13748|code|ADR             R12, 0x35BC|0-198-143-226
13752|code|ADD             R12, R12, #0x18000|24-202-140-226
13756|code|LDR             PC, [R12,#(sched_setscheduler_ptr - 0x1B5BC)]!; __imp_sched_setscheduler|144-246-188-229
13760|code|ADR             R12, 0x35C8|0-198-143-226
13764|code|ADD             R12, R12, #0x18000|24-202-140-226
13768|code|LDR             PC, [R12,#(memset_ptr - 0x1B5C8)]!; __imp_memset|136-246-188-229
13772|code|ADR             R12, 0x35D4|0-198-143-226
13776|code|ADD             R12, R12, #0x18000|24-202-140-226
13780|code|LDR             PC, [R12,#(alloc_config_ptr - 0x1B5D4)]!; __imp_alloc_config|128-246-188-229
13784|code|ADR             R12, 0x35E0|0-198-143-226
13788|code|ADD             R12, R12, #0x18000|24-202-140-226
13792|code|LDR             PC, [R12,#(dm_get_info_ptr - 0x1B5E0)]!; __imp_dm_get_info|120-246-188-229
13796|code|ADR             R12, 0x35EC|0-198-143-226
13800|code|ADD             R12, R12, #0x18000|24-202-140-226
13804|code|LDR             PC, [R12,#(setsid_ptr - 0x1B5EC)]!; __imp_setsid|112-246-188-229
13808|code|ADR             R12, 0x35F8|0-198-143-226
13812|code|ADD             R12, R12, #0x18000|24-202-140-226
13816|code|LDR             PC, [R12,#(checker_disable_ptr - 0x1B5F8)]!; __imp_checker_disable|104-246-188-229
13820|code|ADR             R12, 0x3604|0-198-143-226
13824|code|ADD             R12, R12, #0x18000|24-202-140-226
13828|code|LDR             PC, [R12,#(snprint_blacklist_report_ptr - 0x1B604)]!; __imp_snprint_blacklist_report|96-246-188-229
13832|code|ADR             R12, 0x3610|0-198-143-226
13836|code|ADD             R12, R12, #0x18000|24-202-140-226
13840|code|LDR             PC, [R12,#(start_waiter_thread_ptr - 0x1B610)]!; __imp_start_waiter_thread|88-246-188-229
13844|code|ADR             R12, 0x361C|0-198-143-226
13848|code|ADD             R12, R12, #0x18000|24-202-140-226
13852|code|LDR             PC, [R12,#(path_discovery_ptr - 0x1B61C)]!; __imp_path_discovery|80-246-188-229
13856|code|ADR             R12, 0x3628|0-198-143-226
13860|code|ADD             R12, R12, #0x18000|24-202-140-226
13864|code|LDR             PC, [R12,#(uevent_get_disk_ro_ptr - 0x1B628)]!; __imp_uevent_get_disk_ro|72-246-188-229
13868|code|ADR             R12, 0x3634|0-198-143-226
13872|code|ADD             R12, R12, #0x18000|24-202-140-226
13876|code|LDR             PC, [R12,#(free_pathvec_ptr - 0x1B634)]!; __imp_free_pathvec|64-246-188-229
13880|code|ADR             R12, 0x3640|0-198-143-226
13884|code|ADD             R12, R12, #0x18000|24-202-140-226
13888|code|LDR             PC, [R12,#(udev_device_ref_ptr - 0x1B640)]!; __imp_udev_device_ref|56-246-188-229
13892|code|ADR             R12, 0x364C|0-198-143-226
13896|code|ADD             R12, R12, #0x18000|24-202-140-226
13900|code|LDR             PC, [R12,#(ppoll_ptr - 0x1B64C)]!; __imp_ppoll|48-246-188-229
13904|code|ADR             R12, 0x3658|0-198-143-226
13908|code|ADD             R12, R12, #0x18000|24-202-140-226
13912|code|LDR             PC, [R12,#(uevent_get_minor_ptr - 0x1B658)]!; __imp_uevent_get_minor|40-246-188-229
13916|code|ADR             R12, 0x3664|0-198-143-226
13920|code|ADD             R12, R12, #0x18000|24-202-140-226
13924|code|LDR             PC, [R12,#(dm_get_maps_ptr - 0x1B664)]!; __imp_dm_get_maps|32-246-188-229
13928|code|ADR             R12, 0x3670|0-198-143-226
13932|code|ADD             R12, R12, #0x18000|24-202-140-226
13936|code|LDR             PC, [R12,#(update_mpp_paths_ptr - 0x1B670)]!; __imp_update_mpp_paths|24-246-188-229
13940|code|ADR             R12, 0x367C|0-198-143-226
13944|code|ADD             R12, R12, #0x18000|24-202-140-226
13948|code|LDR             PC, [R12,#(_exit_ptr - 0x1B67C)]!; __imp__exit|16-246-188-229
13952|code|ADR             R12, 0x3688|0-198-143-226
13956|code|ADD             R12, R12, #0x18000|24-202-140-226
13960|code|LDR             PC, [R12,#(udev_new_ptr - 0x1B688)]!; __imp_udev_new|8-246-188-229
13964|code|ADR             R12, 0x3694|0-198-143-226
13968|code|ADD             R12, R12, #0x18000|24-202-140-226
13972|code|LDR             PC, [R12,#(getuid_ptr - 0x1B694)]!; __imp_getuid|0-246-188-229
13976|code|ADR             R12, 0x36A0|0-198-143-226
13980|code|ADD             R12, R12, #0x18000|24-202-140-226
13984|code|LDR             PC, [R12,#(filter_wwid_ptr - 0x1B6A0)]!; __imp_filter_wwid|248-245-188-229
13988|code|ADR             R12, 0x36AC|0-198-143-226
13992|code|ADD             R12, R12, #0x18000|24-202-140-226
13996|code|LDR             PC, [R12,#(remove_map_and_stop_waiter_ptr - 0x1B6AC)]!; __imp_remove_map_and_stop_waiter|240-245-188-229
14000|code|ADR             R12, 0x36B8|0-198-143-226
14004|code|ADD             R12, R12, #0x18000|24-202-140-226
14008|code|LDR             PC, [R12,#(free_ptr - 0x1B6B8)]!; __imp_free|232-245-188-229
14012|code|ADR             R12, 0x36C4|0-198-143-226
14016|code|ADD             R12, R12, #0x18000|24-202-140-226
14020|code|LDR             PC, [R12,#(find_mp_by_alias_ptr - 0x1B6C4)]!; __imp_find_mp_by_alias|224-245-188-229
14024|code|ADR             R12, 0x36D0|0-198-143-226
14028|code|ADD             R12, R12, #0x18000|24-202-140-226
14032|code|LDR             PC, [R12,#(write_ptr - 0x1B6D0)]!; __imp_write|216-245-188-229
14036|code|ADR             R12, 0x36DC|0-198-143-226
14040|code|ADD             R12, R12, #0x18000|24-202-140-226
14044|code|LDR             PC, [R12,#(udev_set_sync_support_ptr - 0x1B6DC)]!; __imp_udev_set_sync_support|208-245-188-229
14048|code|ADR             R12, 0x36E8|0-198-143-226
14052|code|ADD             R12, R12, #0x18000|24-202-140-226
14056|code|LDR             PC, [R12,#(__setup_multipath_ptr - 0x1B6E8)]!; __imp___setup_multipath|200-245-188-229
14060|code|BX              PC|120-71
14062|data|ALIGN 4|192-70
14064|code|ADR             R12, 0x36F8|0-198-143-226
14068|code|ADD             R12, R12, #0x18000|24-202-140-226
14072|code|LDR             PC, [R12,#(update_queue_mode_add_path_ptr - 0x1B6F8)]!; __imp_update_queue_mode_add_path|188-245-188-229
14076|code|ADR             R12, 0x3704|0-198-143-226
14080|code|ADD             R12, R12, #0x18000|24-202-140-226
14084|code|LDR             PC, [R12,#(find_slot_ptr - 0x1B704)]!; __imp_find_slot|180-245-188-229
14088|code|ADR             R12, 0x3710|0-198-143-226
14092|code|ADD             R12, R12, #0x18000|24-202-140-226
14096|code|LDR             PC, [R12,#(log_reset_ptr - 0x1B710)]!; __imp_log_reset|172-245-188-229
14100|code|ADR             R12, 0x371C|0-198-143-226
14104|code|ADD             R12, R12, #0x18000|24-202-140-226
14108|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x1B71C)]!; __imp_gettimeofday|164-245-188-229
14112|code|ADR             R12, 0x3728|0-198-143-226
14116|code|ADD             R12, R12, #0x18000|24-202-140-226
14120|code|LDR             PC, [R12,#(init_checkers_ptr - 0x1B728)]!; __imp_init_checkers|156-245-188-229
14124|code|ADR             R12, 0x3734|0-198-143-226
14128|code|ADD             R12, R12, #0x18000|24-202-140-226
14132|code|LDR             PC, [R12,#(dm_type_ptr - 0x1B734)]!; __imp_dm_type|148-245-188-229
14136|code|ADR             R12, 0x3740|0-198-143-226
14140|code|ADD             R12, R12, #0x18000|24-202-140-226
14144|code|LDR             PC, [R12,#(accept_ptr - 0x1B740)]!; __imp_accept|140-245-188-229
14148|code|ADR             R12, 0x374C|0-198-143-226
14152|code|ADD             R12, R12, #0x18000|24-202-140-226
14156|code|LDR             PC, [R12,#(mpath_alloc_prin_response_ptr - 0x1B74C)]!; __imp_mpath_alloc_prin_response|132-245-188-229
14160|code|ADR             R12, 0x3758|0-198-143-226
14164|code|ADD             R12, R12, #0x18000|24-202-140-226
14168|code|LDR             PC, [R12,#(domap_ptr - 0x1B758)]!; __imp_domap|124-245-188-229
14172|code|ADR             R12, 0x3764|0-198-143-226
14176|code|ADD             R12, R12, #0x18000|24-202-140-226
14180|code|LDR             PC, [R12,#(checker_message_ptr - 0x1B764)]!; __imp_checker_message|116-245-188-229
14184|code|ADR             R12, 0x3770|0-198-143-226
14188|code|ADD             R12, R12, #0x18000|24-202-140-226
14192|code|LDR             PC, [R12,#(orphan_paths_ptr - 0x1B770)]!; __imp_orphan_paths|108-245-188-229
14196|code|ADR             R12, 0x377C|0-198-143-226
14200|code|ADD             R12, R12, #0x18000|24-202-140-226
14204|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x1B77C)]!; __imp_pthread_mutex_unlock|100-245-188-229
14208|code|ADR             R12, 0x3788|0-198-143-226
14212|code|ADD             R12, R12, #0x18000|24-202-140-226
14216|code|LDR             PC, [R12,#(dm_init_ptr - 0x1B788)]!; __imp_dm_init|92-245-188-229
14220|code|ADR             R12, 0x3794|0-198-143-226
14224|code|ADD             R12, R12, #0x18000|24-202-140-226
14228|code|LDR             PC, [R12,#(umask_ptr - 0x1B794)]!; __imp_umask|84-245-188-229
14232|code|ADR             R12, 0x37A0|0-198-143-226
14236|code|ADD             R12, R12, #0x18000|24-202-140-226
14240|code|LDR             PC, [R12,#(log_thread_start_ptr - 0x1B7A0)]!; __imp_log_thread_start|76-245-188-229
14244|code|ADR             R12, 0x37AC|0-198-143-226
14248|code|ADD             R12, R12, #0x18000|24-202-140-226
14252|code|LDR             PC, [R12,#(remove_maps_ptr - 0x1B7AC)]!; __imp_remove_maps|68-245-188-229
14256|code|ADR             R12, 0x37B8|0-198-143-226
14260|code|ADD             R12, R12, #0x18000|24-202-140-226
14264|code|LDR             PC, [R12,#(dm_lib_exit_ptr - 0x1B7B8)]!; __imp_dm_lib_exit|60-245-188-229
14268|code|ADR             R12, 0x37C4|0-198-143-226
14272|code|ADD             R12, R12, #0x18000|24-202-140-226
14276|code|LDR             PC, [R12,#(send_packet_ptr - 0x1B7C4)]!; __imp_send_packet|52-245-188-229
14280|code|ADR             R12, 0x37D0|0-198-143-226
14284|code|ADD             R12, R12, #0x18000|24-202-140-226
14288|code|LDR             PC, [R12,#(isatty_ptr - 0x1B7D0)]!; __imp_isatty|44-245-188-229
14292|code|ADR             R12, 0x37DC|0-198-143-226
14296|code|ADD             R12, R12, #0x18000|24-202-140-226
14300|code|LDR             PC, [R12,#(dm_get_minor_ptr - 0x1B7DC)]!; __imp_dm_get_minor|36-245-188-229
14304|code|ADR             R12, 0x37E8|0-198-143-226
14308|code|ADD             R12, R12, #0x18000|24-202-140-226
14312|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x1B7E8)]!; __imp_pthread_mutex_lock|28-245-188-229
14316|code|ADR             R12, 0x37F4|0-198-143-226
14320|code|ADD             R12, R12, #0x18000|24-202-140-226
14324|code|LDR             PC, [R12,#(snprint_blacklist_ptr - 0x1B7F4)]!; __imp_snprint_blacklist|20-245-188-229
14328|code|ADR             R12, 0x3800|0-198-143-226
14332|code|ADD             R12, R12, #0x18000|24-202-140-226
14336|code|LDR             PC, [R12,#(strlen_ptr - 0x1B800)]!; __imp_strlen|12-245-188-229
14340|code|ADR             R12, 0x380C|0-198-143-226
14344|code|ADD             R12, R12, #0x18000|24-202-140-226
14348|code|LDR             PC, [R12,#(cleanup_prio_ptr - 0x1B80C)]!; __imp_cleanup_prio|4-245-188-229
14352|code|ADR             R12, 0x3818|0-198-143-226
14356|code|ADD             R12, R12, #0x18000|24-202-140-226
14360|code|LDR             PC, [R12,#(unlink_ptr - 0x1B818)]!; __imp_unlink|252-244-188-229
14364|code|ADR             R12, 0x3824|0-198-143-226
14368|code|ADD             R12, R12, #0x18000|24-202-140-226
14372|code|LDR             PC, [R12,#(getopt_ptr - 0x1B824)]!; __imp_getopt|244-244-188-229
14376|code|ADR             R12, 0x3830|0-198-143-226
14380|code|ADD             R12, R12, #0x18000|24-202-140-226
14384|code|LDR             PC, [R12,#(pthread_create_ptr - 0x1B830)]!; __imp_pthread_create|236-244-188-229
14388|code|ADR             R12, 0x383C|0-198-143-226
14392|code|ADD             R12, R12, #0x18000|24-202-140-226
14396|code|LDR             PC, [R12,#(dm_reassign_ptr - 0x1B83C)]!; __imp_dm_reassign|228-244-188-229
14400|code|ADR             R12, 0x3848|0-198-143-226
14404|code|ADD             R12, R12, #0x18000|24-202-140-226
14408|code|LDR             PC, [R12,#(pathinfo_ptr - 0x1B848)]!; __imp_pathinfo|220-244-188-229
14412|code|ADR             R12, 0x3854|0-198-143-226
14416|code|ADD             R12, R12, #0x18000|24-202-140-226
14420|code|LDR             PC, [R12,#(vector_alloc_slot_ptr - 0x1B854)]!; __imp_vector_alloc_slot|212-244-188-229
14424|code|ADR             R12, 0x3860|0-198-143-226
14428|code|ADD             R12, R12, #0x18000|24-202-140-226
14432|code|LDR             PC, [R12,#(prin_do_scsi_ioctl_ptr - 0x1B860)]!; __imp_prin_do_scsi_ioctl|204-244-188-229
14436|code|ADR             R12, 0x386C|0-198-143-226
14440|code|ADD             R12, R12, #0x18000|24-202-140-226
14444|code|LDR             PC, [R12,#(find_mp_by_minor_ptr - 0x1B86C)]!; __imp_find_mp_by_minor|196-244-188-229
14448|code|BX              PC|120-71
14450|data|ALIGN 4|192-70
14452|code|ADR             R12, 0x387C|0-198-143-226
14456|code|ADD             R12, R12, #0x18000|24-202-140-226
14460|code|LDR             PC, [R12,#(vector_free_ptr - 0x1B87C)]!; __imp_vector_free|184-244-188-229
14464|code|ADR             R12, 0x3888|0-198-143-226
14468|code|ADD             R12, R12, #0x18000|24-202-140-226
14472|code|LDR             PC, [R12,#(udev_device_unref_ptr - 0x1B888)]!; __imp_udev_device_unref|176-244-188-229
14476|code|ADR             R12, 0x3894|0-198-143-226
14480|code|ADD             R12, R12, #0x18000|24-202-140-226
14484|code|LDR             PC, [R12,#(strtol_ptr - 0x1B894)]!; __imp_strtol|168-244-188-229
14488|code|ADR             R12, 0x38A0|0-198-143-226
14492|code|ADD             R12, R12, #0x18000|24-202-140-226
14496|code|LDR             PC, [R12,#(sigaddset_ptr - 0x1B8A0)]!; __imp_sigaddset|160-244-188-229
14500|code|ADR             R12, 0x38AC|0-198-143-226
14504|code|ADD             R12, R12, #0x18000|24-202-140-226
14508|code|LDR             PC, [R12,#(add_map_without_path_ptr - 0x1B8AC)]!; __imp_add_map_without_path|152-244-188-229
14512|code|BX              PC|120-71
14514|data|ALIGN 4|192-70
14516|code|ADR             R12, 0x38BC|0-198-143-226
14520|code|ADD             R12, R12, #0x18000|24-202-140-226
14524|code|LDR             PC, [R12,#(sem_post_ptr - 0x1B8BC)]!; __imp_sem_post|140-244-188-229
14528|code|ADR             R12, 0x38C8|0-198-143-226
14532|code|ADD             R12, R12, #0x18000|24-202-140-226
14536|code|LDR             PC, [R12,#(snprint_multipath_topology_ptr - 0x1B8C8)]!; __imp_snprint_multipath_topology|132-244-188-229
14540|code|ADR             R12, 0x38D4|0-198-143-226
14544|code|ADD             R12, R12, #0x18000|24-202-140-226
14548|code|LDR             PC, [R12,#(pthread_sigmask_ptr - 0x1B8D4)]!; __imp_pthread_sigmask|124-244-188-229
14552|code|ADR             R12, 0x38E0|0-198-143-226
14556|code|ADD             R12, R12, #0x18000|24-202-140-226
14560|code|LDR             PC, [R12,#(pthread_mutex_destroy_ptr - 0x1B8E0)]!; __imp_pthread_mutex_destroy|116-244-188-229
14564|code|ADR             R12, 0x38EC|0-198-143-226
14568|code|ADD             R12, R12, #0x18000|24-202-140-226
14572|code|LDR             PC, [R12,#(update_map_pr_ptr - 0x1B8EC)]!; __imp_update_map_pr|108-244-188-229
14576|code|ADR             R12, 0x38F8|0-198-143-226
14580|code|ADD             R12, R12, #0x18000|24-202-140-226
14584|code|LDR             PC, [R12,#(dm_fail_path_ptr - 0x1B8F8)]!; __imp_dm_fail_path|100-244-188-229
14588|code|ADR             R12, 0x3904|0-198-143-226
14592|code|ADD             R12, R12, #0x18000|24-202-140-226
14596|code|LDR             PC, [R12,#(dm_mapname_ptr - 0x1B904)]!; __imp_dm_mapname|92-244-188-229
14600|code|ADR             R12, 0x3910|0-198-143-226
14604|code|ADD             R12, R12, #0x18000|24-202-140-226
14608|code|LDR             PC, [R12,#(verify_paths_ptr - 0x1B910)]!; __imp_verify_paths|84-244-188-229
14612|code|ADR             R12, 0x391C|0-198-143-226
14616|code|ADD             R12, R12, #0x18000|24-202-140-226
14620|code|LDR             PC, [R12,#(setup_map_ptr - 0x1B91C)]!; __imp_setup_map|76-244-188-229
14624|code|ADR             R12, 0x3928|0-198-143-226
14628|code|ADD             R12, R12, #0x18000|24-202-140-226
14632|code|LDR             PC, [R12,#(recv_packet_ptr - 0x1B928)]!; __imp_recv_packet|68-244-188-229
14636|code|ADR             R12, 0x3934|0-198-143-226
14640|code|ADD             R12, R12, #0x18000|24-202-140-226
14644|code|LDR             PC, [R12,#(snprint_status_ptr - 0x1B934)]!; __imp_snprint_status|60-244-188-229
14648|code|ADR             R12, 0x3940|0-198-143-226
14652|code|ADD             R12, R12, #0x18000|24-202-140-226
14656|code|LDR             PC, [R12,#(mlockall_ptr - 0x1B940)]!; __imp_mlockall|52-244-188-229
14660|code|ADR             R12, 0x394C|0-198-143-226
14664|code|ADD             R12, R12, #0x18000|24-202-140-226
14668|code|LDR             PC, [R12,#(checker_clear_message_ptr - 0x1B94C)]!; __imp_checker_clear_message|44-244-188-229
14672|code|ADR             R12, 0x3958|0-198-143-226
14676|code|ADD             R12, R12, #0x18000|24-202-140-226
14680|code|LDR             PC, [R12,#(select_path_group_ptr - 0x1B958)]!; __imp_select_path_group|36-244-188-229
14684|code|BX              PC|120-71
14686|data|ALIGN 4|192-70
14688|code|ADR             R12, 0x3968|0-198-143-226
14692|code|ADD             R12, R12, #0x18000|24-202-140-226
14696|code|LDR             PC, [R12,#(dm_switchgroup_ptr - 0x1B968)]!; __imp_dm_switchgroup|24-244-188-229
14700|code|ADR             R12, 0x3974|0-198-143-226
14704|code|ADD             R12, R12, #0x18000|24-202-140-226
14708|code|LDR             PC, [R12,#(setup_thread_attr_ptr - 0x1B974)]!; __imp_setup_thread_attr|16-244-188-229
14712|code|ADR             R12, 0x3980|0-198-143-226
14716|code|ADD             R12, R12, #0x18000|24-202-140-226
14720|code|LDR             PC, [R12,#(snprint_wildcards_ptr - 0x1B980)]!; __imp_snprint_wildcards|8-244-188-229
14724|code|ADR             R12, 0x398C|0-198-143-226
14728|code|ADD             R12, R12, #0x18000|24-202-140-226
14732|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x1B98C)]!; __imp___snprintf_chk|0-244-188-229
14736|code|ADR             R12, 0x3998|0-198-143-226
14740|code|ADD             R12, R12, #0x18000|24-202-140-226
14744|code|LDR             PC, [R12,#(pthread_mutex_init_ptr - 0x1B998)]!; __imp_pthread_mutex_init|248-243-188-229
14748|code|ADR             R12, 0x39A4|0-198-143-226
14752|code|ADD             R12, R12, #0x18000|24-202-140-226
14756|code|LDR             PC, [R12,#(vector_alloc_ptr - 0x1B9A4)]!; __imp_vector_alloc|240-243-188-229
14760|code|ADR             R12, 0x39B0|0-198-143-226
14764|code|ADD             R12, R12, #0x18000|24-202-140-226
14768|code|LDR             PC, [R12,#(find_path_by_devt_ptr - 0x1B9B0)]!; __imp_find_path_by_devt|232-243-188-229
14772|code|ADR             R12, 0x39BC|0-198-143-226
14776|code|ADD             R12, R12, #0x18000|24-202-140-226
14780|code|LDR             PC, [R12,#(strstr_ptr - 0x1B9BC)]!; __imp_strstr|224-243-188-229
14784|code|ADR             R12, 0x39C8|0-198-143-226
14788|code|ADD             R12, R12, #0x18000|24-202-140-226
14792|code|LDR             PC, [R12,#(udev_unref_ptr - 0x1B9C8)]!; __imp_udev_unref|216-243-188-229
14796|code|ADR             R12, 0x39D4|0-198-143-226
14800|code|ADD             R12, R12, #0x18000|24-202-140-226
14804|code|LDR             PC, [R12,#(uevent_get_major_ptr - 0x1B9D4)]!; __imp_uevent_get_major|208-243-188-229
14808|code|ADR             R12, 0x39E0|0-198-143-226
14812|code|ADD             R12, R12, #0x18000|24-202-140-226
14816|code|LDR             PC, [R12,#(path_offline_ptr - 0x1B9E0)]!; __imp_path_offline|200-243-188-229
14820|code|ADR             R12, 0x39EC|0-198-143-226
14824|code|ADD             R12, R12, #0x18000|24-202-140-226
14828|code|LDR             PC, [R12,#(close_ptr - 0x1B9EC)]!; __imp_close|192-243-188-229
14832|code|ADR             R12, 0x39F8|0-198-143-226
14836|code|ADD             R12, R12, #0x18000|24-202-140-226
14840|code|LDR             PC, [R12,#(update_multipath_ptr - 0x1B9F8)]!; __imp_update_multipath|184-243-188-229
14844|code|ADR             R12, 0x3A04|0-198-143-226
14848|code|ADD             R12, R12, #0x18000|24-202-140-226
14852|code|LDR             PC, [R12,#(prout_do_scsi_ioctl_ptr - 0x1BA04)]!; __imp_prout_do_scsi_ioctl|176-243-188-229
14856|code|ADR             R12, 0x3A10|0-198-143-226
14860|code|ADD             R12, R12, #0x18000|24-202-140-226
14864|code|LDR             PC, [R12,#(_dm_flush_map_ptr - 0x1BA10)]!; __imp__dm_flush_map|168-243-188-229
14868|code|ADR             R12, 0x3A1C|0-198-143-226
14872|code|ADD             R12, R12, #0x18000|24-202-140-226
14876|code|LDR             PC, [R12,#(fwrite_ptr - 0x1BA1C)]!; __imp_fwrite|160-243-188-229
14880|code|BX              PC|120-71
14882|data|ALIGN 4|192-70
14884|code|ADR             R12, 0x3A2C|0-198-143-226
14888|code|ADD             R12, R12, #0x18000|24-202-140-226
14892|code|LDR             PC, [R12,#(update_queue_mode_del_path_ptr - 0x1BA2C)]!; __imp_update_queue_mode_del_path|148-243-188-229
14896|code|ADR             R12, 0x3A38|0-198-143-226
14900|code|ADD             R12, R12, #0x18000|24-202-140-226
14904|code|LDR             PC, [R12,#(udev_device_new_from_subsystem_sysname_ptr - 0x1BA38)]!; __imp_udev_device_new_from_subsystem_sysname|140-243-188-229
14908|code|ADRL            R12, 0x1BA44|0-198-143-226-24-202-140-226
14916|code|LDR             PC, [R12,#(cleanup_checkers_ptr - 0x1BA44)]!; __imp_cleanup_checkers|132-243-188-229
14920|code|ADRL            R12, 0x1BA50|0-198-143-226-24-202-140-226
14928|code|LDR             PC, [R12,#(reload_map_ptr - 0x1BA50)]!; __imp_reload_map|124-243-188-229
14932|code|ADRL            R12, 0x1BA5C|0-198-143-226-24-202-140-226
14940|code|LDR             PC, [R12,#(dm_queue_if_no_path_ptr - 0x1BA5C)]!; __imp_dm_queue_if_no_path|116-243-188-229
14944|code|ADRL            R12, 0x1BA68|0-198-143-226-24-202-140-226
14952|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x1BA68)]!; __imp___ctype_b_loc|108-243-188-229
14956|code|BX              PC|120-71
14958|data|ALIGN 0x10|192-70
14960|code|ADRL            R12, 0x1BA78|0-198-143-226-24-202-140-226
14968|code|LDR             PC, [R12,#(dm_reinstate_path_ptr - 0x1BA78)]!; __imp_dm_reinstate_path|96-243-188-229
14972|code|ADRL            R12, 0x1BA84|0-198-143-226-24-202-140-226
14980|code|LDR             PC, [R12,#(readline_ptr - 0x1BA84)]!; __imp_readline|88-243-188-229
14984|code|ADRL            R12, 0x1BA90|0-198-143-226-24-202-140-226
14992|code|LDR             PC, [R12,#(malloc_ptr - 0x1BA90)]!; __imp_malloc|80-243-188-229
14996|code|ADRL            R12, 0x1BA9C|0-198-143-226-24-202-140-226
15004|code|LDR             PC, [R12,#(get_path_layout_ptr - 0x1BA9C)]!; __imp_get_path_layout|72-243-188-229
15008|code|ADRL            R12, 0x1BAA8|0-198-143-226-24-202-140-226
15016|code|LDR             PC, [R12,#(remove_map_ptr - 0x1BAA8)]!; __imp_remove_map|64-243-188-229
15020|code|ADRL            R12, 0x1BAB4|0-198-143-226-24-202-140-226
15028|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x1BAB4)]!; __imp___stack_chk_fail|56-243-188-229
15032|code|ADRL            R12, 0x1BAC0|0-198-143-226-24-202-140-226
15040|code|LDR             PC, [R12,#(sigaction_ptr - 0x1BAC0)]!; __imp_sigaction|48-243-188-229
15044|code|ADRL            R12, 0x1BACC|0-198-143-226-24-202-140-226
15052|code|LDR             PC, [R12,#(sigdelset_ptr - 0x1BACC)]!; __imp_sigdelset|40-243-188-229
15056|code|ADRL            R12, 0x1BAD8|0-198-143-226-24-202-140-226
15064|code|LDR             PC, [R12,#(chdir_ptr - 0x1BAD8)]!; __imp_chdir|32-243-188-229
15068|code|ADRL            R12, 0x1BAE4|0-198-143-226-24-202-140-226
15076|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x1BAE4)]!; __imp___fprintf_chk|24-243-188-229
15080|code|ADRL            R12, 0x1BAF0|0-198-143-226-24-202-140-226
15088|code|LDR             PC, [R12,#(pthread_attr_init_ptr - 0x1BAF0)]!; __imp_pthread_attr_init|16-243-188-229
15092|code|ADRL            R12, 0x1BAFC|0-198-143-226-24-202-140-226
15100|code|LDR             PC, [R12,#(alloc_strvec_ptr - 0x1BAFC)]!; __imp_alloc_strvec|8-243-188-229
15104|code|ADRL            R12, 0x1BB08|0-198-143-226-24-202-140-226
15112|code|LDR             PC, [R12,#(dm_map_present_ptr - 0x1BB08)]!; __imp_dm_map_present|0-243-188-229
15116|code|ADRL            R12, 0x1BB14|0-198-143-226-24-202-140-226
15124|code|LDR             PC, [R12,#(vector_del_slot_ptr - 0x1BB14)]!; __imp_vector_del_slot|248-242-188-229
15128|code|ADRL            R12, 0x1BB20|0-198-143-226-24-202-140-226
15136|code|LDR             PC, [R12,#(ftruncate_ptr - 0x1BB20)]!; __imp_ftruncate|240-242-188-229
15140|code|ADRL            R12, 0x1BB2C|0-198-143-226-24-202-140-226
15148|code|LDR             PC, [R12,#(snprint_defaults_ptr - 0x1BB2C)]!; __imp_snprint_defaults|232-242-188-229
15152|code|ADRL            R12, 0x1BB38|0-198-143-226-24-202-140-226
15160|code|LDR             PC, [R12,#(sleep_ptr - 0x1BB38)]!; __imp_sleep|224-242-188-229
15164|code|ADRL            R12, 0x1BB44|0-198-143-226-24-202-140-226
15172|code|LDR             PC, [R12,#(dm_get_major_ptr - 0x1BB44)]!; __imp_dm_get_major|216-242-188-229
15176|code|ADRL            R12, 0x1BB50|0-198-143-226-24-202-140-226
15184|code|LDR             PC, [R12,#(dm_simplecmd_noflush_ptr - 0x1BB50)]!; __imp_dm_simplecmd_noflush|208-242-188-229
15188|code|ADRL            R12, 0x1BB5C|0-198-143-226-24-202-140-226
15196|code|LDR             PC, [R12,#(find_path_by_dev_ptr - 0x1BB5C)]!; __imp_find_path_by_dev|200-242-188-229
15200|code|ADRL            R12, 0x1BB68|0-198-143-226-24-202-140-226
15208|code|LDR             PC, [R12,#(pthread_testcancel_ptr - 0x1BB68)]!; __imp_pthread_testcancel|192-242-188-229
15212|code|ADRL            R12, 0x1BB74|0-198-143-226-24-202-140-226
15220|code|LDR             PC, [R12,#(init_prio_ptr - 0x1BB74)]!; __imp_init_prio|184-242-188-229
15224|code|ADRL            R12, 0x1BB80|0-198-143-226-24-202-140-226
15232|code|LDR             PC, [R12,#(zalloc_ptr - 0x1BB80)]!; __imp_zalloc|176-242-188-229
15236|code|ADRL            R12, 0x1BB8C|0-198-143-226-24-202-140-226
15244|code|LDR             PC, [R12,#(snprint_path_ptr - 0x1BB8C)]!; __imp_snprint_path|168-242-188-229
15248|code|ADRL            R12, 0x1BB98|0-198-143-226-24-202-140-226
15256|code|LDR             PC, [R12,#(ux_socket_connect_ptr - 0x1BB98)]!; __imp_ux_socket_connect|160-242-188-229
15260|code|ADRL            R12, 0x1BBA4|0-198-143-226-24-202-140-226
15268|code|LDR             PC, [R12,#(puts_ptr - 0x1BBA4)]!; __imp_puts|152-242-188-229
15272|code|ADRL            R12, 0x1BBB0|0-198-143-226-24-202-140-226
15280|code|LDR             PC, [R12,#(filter_path_ptr - 0x1BBB0)]!; __imp_filter_path|144-242-188-229
15284|code|ADRL            R12, 0x1BBBC|0-198-143-226-24-202-140-226
15292|code|LDR             PC, [R12,#(getpid_ptr - 0x1BBBC)]!; __imp_getpid|136-242-188-229
15296|code|ADRL            R12, 0x1BBC8|0-198-143-226-24-202-140-226
15304|code|LDR             PC, [R12,#(uevent_get_dm_name_ptr - 0x1BBC8)]!; __imp_uevent_get_dm_name|128-242-188-229
15308|code|ADRL            R12, 0x1BBD4|0-198-143-226-24-202-140-226
15316|code|LDR             PC, [R12,#(get_state_ptr - 0x1BBD4)]!; __imp_get_state|120-242-188-229
15320|code|ADRL            R12, 0x1BBE0|0-198-143-226-24-202-140-226
15328|code|LDR             PC, [R12,#(snprint_mptable_ptr - 0x1BBE0)]!; __imp_snprint_mptable|112-242-188-229
15332|code|ADRL            R12, 0x1BBEC|0-198-143-226-24-202-140-226
15340|code|LDR             PC, [R12,#(remove_maps_and_stop_waiters_ptr - 0x1BBEC)]!; __imp_remove_maps_and_stop_waiters|104-242-188-229
15344|code|ADRL            R12, 0x1BBF8|0-198-143-226-24-202-140-226
15352|code|LDR             PC, [R12,#(free_strvec_ptr - 0x1BBF8)]!; __imp_free_strvec|96-242-188-229
15356|code|ADRL            R12, 0x1BC04|0-198-143-226-24-202-140-226
15364|code|LDR             PC, [R12,#(fcntl_ptr - 0x1BC04)]!; __imp_fcntl|88-242-188-229
15368|code|ADRL            R12, 0x1BC10|0-198-143-226-24-202-140-226
15376|code|LDR             PC, [R12,#(dup_ptr - 0x1BC10)]!; __imp_dup|80-242-188-229
15380|code|ADRL            R12, 0x1BC1C|0-198-143-226-24-202-140-226
15388|code|LDR             PC, [R12,#(fork_ptr - 0x1BC1C)]!; __imp_fork|72-242-188-229
15392|code|ADRL            R12, 0x1BC28|0-198-143-226-24-202-140-226
15400|code|LDR             PC, [R12,#(pthread_attr_destroy_ptr - 0x1BC28)]!; __imp_pthread_attr_destroy|64-242-188-229
15404|code|ADRL            R12, 0x1BC34|0-198-143-226-24-202-140-226
15412|code|LDR             PC, [R12,#(snprint_multipath_ptr - 0x1BC34)]!; __imp_snprint_multipath|56-242-188-229
15416|code|ADRL            R12, 0x1BC40|0-198-143-226-24-202-140-226
15424|code|LDR             PC, [R12,#(snprintf_ptr - 0x1BC40)]!; __imp_snprintf|48-242-188-229
15428|code|ADRL            R12, 0x1BC4C|0-198-143-226-24-202-140-226
15436|code|LDR             PC, [R12,#(__sprintf_chk_ptr - 0x1BC4C)]!; __imp___sprintf_chk|40-242-188-229
15440|code|ADRL            R12, 0x1BC58|0-198-143-226-24-202-140-226
15448|code|LDR             PC, [R12,#(strncmp_ptr - 0x1BC58)]!; __imp_strncmp|32-242-188-229
15452|code|ADRL            R12, 0x1BC64|0-198-143-226-24-202-140-226
15460|code|LDR             PC, [R12,#(get_refwwid_ptr - 0x1BC64)]!; __imp_get_refwwid|24-242-188-229
15464|code|ADRL            R12, 0x1BC70|0-198-143-226-24-202-140-226
15472|code|LDR             PC, [R12,#(realloc_ptr - 0x1BC70)]!; __imp_realloc|16-242-188-229
15476|code|ADRL            R12, 0x1BC7C|0-198-143-226-24-202-140-226
15484|code|LDR             PC, [R12,#(add_history_ptr - 0x1BC7C)]!; __imp_add_history|8-242-188-229
15488|code|ADRL            R12, 0x1BC88|0-198-143-226-24-202-140-226
15496|code|LDR             PC, [R12,#(getrlimit_ptr - 0x1BC88)]!; __imp_getrlimit|0-242-188-229
15500|code|ADRL            R12, 0x1BC94|0-198-143-226-24-202-140-226
15508|code|LDR             PC, [R12,#(_IO_putc_ptr - 0x1BC94)]!; __imp__IO_putc|248-241-188-229
15512|code|ADRL            R12, 0x1BCA0|0-198-143-226-24-202-140-226
15520|code|LDR             PC, [R12,#(__strdup_ptr - 0x1BCA0)]!; __imp___strdup|240-241-188-229
15524|code|ADRL            R12, 0x1BCAC|0-198-143-226-24-202-140-226
15532|code|LDR             PC, [R12,#(_Unwind_Resume_ptr - 0x1BCAC)]!; __imp__Unwind_Resume|232-241-188-229
15536|code|ADRL            R12, 0x1BCB8|0-198-143-226-24-202-140-226
15544|code|LDR             PC, [R12,#(sem_wait_ptr - 0x1BCB8)]!; __imp_sem_wait|224-241-188-229
15548|code|ADRL            R12, 0x1BCC4|0-198-143-226-24-202-140-226
15556|code|LDR             PC, [R12,#(coalesce_paths_ptr - 0x1BCC4)]!; __imp_coalesce_paths|216-241-188-229
15560|code|ADRL            R12, 0x1BCD0|0-198-143-226-24-202-140-226
15568|code|LDR             PC, [R12,#(snprint_multipath_header_ptr - 0x1BCD0)]!; __imp_snprint_multipath_header|208-241-188-229
15572|code|ADRL            R12, 0x1BCDC|0-198-143-226-24-202-140-226
15580|code|LDR             PC, [R12,#(get_multipath_layout_ptr - 0x1BCDC)]!; __imp_get_multipath_layout|200-241-188-229
15584|code|ADRL            R12, 0x1BCE8|0-198-143-226-24-202-140-226
15592|code|LDR             PC, [R12,#(uevent_dispatch_ptr - 0x1BCE8)]!; __imp_uevent_dispatch|192-241-188-229
15596|code|ADRL            R12, 0x1BCF4|0-198-143-226-24-202-140-226
15604|code|LDR             PC, [R12,#(find_mp_by_str_ptr - 0x1BCF4)]!; __imp_find_mp_by_str|184-241-188-229
15608|code|ADRL            R12, 0x1BD00|0-198-143-226-24-202-140-226
15616|code|LDR             PC, [R12,#(vector_set_slot_ptr - 0x1BD00)]!; __imp_vector_set_slot|176-241-188-229
15620|code|ADRL            R12, 0x1BD0C|0-198-143-226-24-202-140-226
15628|code|LDR             PC, [R12,#(strcmp_ptr - 0x1BD0C)]!; __imp_strcmp|168-241-188-229
15632|code|ADRL            R12, 0x1BD18|0-198-143-226-24-202-140-226
15640|code|LDR             PC, [R12,#(update_multipath_strings_ptr - 0x1BD18)]!; __imp_update_multipath_strings|160-241-188-229
15644|code|ADRL            R12, 0x1BD24|0-198-143-226-24-202-140-226
15652|code|LDR             PC, [R12,#(exit_ptr - 0x1BD24)]!; __imp_exit|152-241-188-229
15656|code|ADRL            R12, 0x1BD30|0-198-143-226-24-202-140-226
15664|code|LDR             PC, [R12,#(dumpHex_ptr - 0x1BD30)]!; __imp_dumpHex|144-241-188-229
15668|code|ADRL            R12, 0x1BD3C|0-198-143-226-24-202-140-226
15676|code|LDR             PC, [R12,#(__errno_location_ptr - 0x1BD3C)]!; __imp___errno_location|136-241-188-229
15680|code|ADRL            R12, 0x1BD48|0-198-143-226-24-202-140-226
15688|code|LDR             PC, [R12,#(pthread_cancel_ptr - 0x1BD48)]!; __imp_pthread_cancel|128-241-188-229
15692|code|ADRL            R12, 0x1BD54|0-198-143-226-24-202-140-226
15700|code|LDR             PC, [R12,#(adopt_paths_ptr - 0x1BD54)]!; __imp_adopt_paths|120-241-188-229
15704|code|ADRL            R12, 0x1BD60|0-198-143-226-24-202-140-226
15712|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x1BD60)]!; __imp___cxa_finalize|112-241-188-229
15716|code|ADRL            R12, 0x1BD6C|0-198-143-226-24-202-140-226
15724|code|LDR             PC, [R12,#(pthread_join_ptr - 0x1BD6C)]!; __imp_pthread_join|104-241-188-229
15728|code|ADRL            R12, 0x1BD78|0-198-143-226-24-202-140-226
15736|code|LDR             PC, [R12,#(load_config_ptr - 0x1BD78)]!; __imp_load_config|96-241-188-229
15740|code|ADRL            R12, 0x1BD84|0-198-143-226-24-202-140-226
15748|code|LDR             PC, [R12,#(add_map_with_path_ptr - 0x1BD84)]!; __imp_add_map_with_path|88-241-188-229
15752|code|ADRL            R12, 0x1BD90|0-198-143-226-24-202-140-226
15760|code|LDR             PC, [R12,#(find_mp_by_wwid_ptr - 0x1BD90)]!; __imp_find_mp_by_wwid|80-241-188-229
15764|code|PUSH.W          {R4-R11,LR}|45-233-240-79
15768|code|MOV             R6, R0|6-70
15770|code|LDR.W           R11, =(_GLOBAL_OFFSET_TABLE_ - 0x3DAA)|223-248-144-185
15774|code|SUB             SP, SP, #0x1A4|233-176
15776|code|LDR.W           R4, =(__stack_chk_guard_ptr - 0x1BB8C)|223-248-140-73
15780|code|MOVS            R5, #1|1-37
15782|code|ADD             R11, PC; _GLOBAL_OFFSET_TABLE_|251-68
15784|code|LDR.W           R2, =(logsink_ptr - 0x1BB8C)|223-248-136-41
15788|code|LDR.W           R3, =(running_state_ptr - 0x1BB8C)|223-248-136-57
15792|code|MOV             R8, R1|136-70
15794|code|LDR.W           R0, [R11,R4]; __stack_chk_guard|91-248-4-0
15798|code|MOVS            R1, #0|0-33
15800|code|LDR             R0, [R0]|0-104
15802|code|STR             R0, [SP,#0x1C8+var_2C]|103-144
15804|code|LDR.W           R4, [R11,R2]; logsink|91-248-2-64
15808|code|STR             R5, [R4]|37-96
15810|code|LDR.W           R3, [R11,R3]; running_state|91-248-3-48
15814|code|STR             R3, [SP,#0x1C8+var_1C0]|2-147
15816|code|STR             R1, [R3]|25-96
15818|code|BLX             dm_init|255-247-218-236
15822|code|BLX             getuid|255-247-94-236
15826|code|CBZ             R0, loc_3DF2|112-177
15828|code|LDR.W           R3, =(stderr_ptr - 0x1BB8C)|223-248-100-57
15832|code|MOV             R1, R5; size|41-70
15834|code|LDR.W           R0, =(aNeedToBeRoot - 0x3DE8); "need to be root\n"|223-248-100-9
15838|code|MOVS            R2, #0x10; n|16-34
15840|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
15844|code|ADD             R0, PC; "need to be root\n"|120-68
15846|code|LDR             R3, [R3]; s|27-104
15848|code|BLX             fwrite|255-247-20-238
15852|code|MOV             R0, R5; status|40-70
15854|code|BLX             exit|255-247-150-239
15858|code|LDR.W           R0, =(asc_A528 - 0x3DFA); "/"|223-248-80-9
15862|code|ADD             R0, PC; "/"|120-68
15864|code|BLX             chdir|255-247-106-238
15868|code|CMP             R0, #0|0-40
15870|code|BLT             loc_3EE8|115-219
15872|code|MOVS            R0, #0x3F ; '?'; mask|63-32
15874|code|BLX             umask|255-247-196-236
15878|code|ORR.W           R0, R0, #0x12; mask|64-240-18-0
15882|code|BLX             umask|255-247-192-236
15886|code|BLX             alloc_config|255-247-222-235
15890|code|LDR.W           R3, =(conf_ptr - 0x1BB8C)|223-248-52-57
15894|code|LDR.W           R5, [R11,R3]; conf|91-248-3-80
15898|code|STR             R0, [R5]|40-96
15900|code|CMP             R0, #0|0-40
15902|code|BEQ.W           loc_3FE8|0-240-227-128
15906|code|LDR.W           R7, =(aDsvK - 0x3E2E); ":dsv:k::"|223-248-40-121
15910|code|MOV.W           R9, #0xFFFFFFFF|79-240-255-57
15914|code|ADD             R7, PC; ":dsv:k::"|127-68
15916|code|MOV             R0, R6; jumptable 00003E4A default case, cases 101-106,108-114,116,117|48-70
15918|code|MOV             R1, R8; argv|65-70
15920|code|MOV             R2, R7; shortopts|58-70
15922|code|BLX             getopt|255-247-244-236
15926|code|ADDS            R3, R0, #1|67-28
15928|code|BEQ.W           loc_3FEE|0-240-217-128
15932|code|SUBS            R0, #0x64 ; 'd'; switch 19 cases|100-56
15934|code|CMP             R0, #0x12|18-40
15936|code|BHI             def_3E4A; jumptable 00003E4A default case, cases 101-106,108-114,116,117|244-216
15938|code|ADR             R3, jpt_3E4A|2-163
15940|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
15944|code|ADD             R3, R2|19-68
15946|code|BX              R3; switch jump|24-71
15948|data|DCD loc_3EE2+1 - 0x3E4C; jump table for switch statement|151-0-0-0
15952|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15956|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15960|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15964|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15968|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15972|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15976|data|DCD loc_3ECE+1 - 0x3E4C; jumptable 00003E4A case 107|131-0-0-0
15980|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15984|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15988|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15992|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
15996|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
16000|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
16004|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
16008|data|DCD loc_3EC8+1 - 0x3E4C; jumptable 00003E4A case 115|125-0-0-0
16012|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
16016|data|DCD def_3E4A+1 - 0x3E4C; jumptable 00003E4A default case, cases 101-106,108-114,116,117|225-255-255-255
16020|data|DCD loc_3E98+1 - 0x3E4C; jumptable 00003E4A case 118|77-0-0-0
16024|code|BLX             __ctype_b_loc; jumptable 00003E4A case 118|255-247-226-237
16028|code|LDR.W           R3, =(optarg_ptr - 0x1BB8C)|223-248-176-56
16032|code|LDR.W           R3, [R11,R3]; optarg|91-248-3-48
16036|code|LDR             R3, [R3]|27-104
16038|code|LDRB            R1, [R3]|25-120
16040|code|LDR             R2, [R0]|2-104
16042|code|LDRH.W          R2, [R2,R1,LSL#1]|50-248-17-32
16046|code|LSLS            R2, R2, #0x14|18-5
16048|code|BPL.W           loc_3FE8|64-241-154-128
16052|code|MOV             R0, R3; nptr|24-70
16054|code|MOVS            R1, #0; endptr|0-33
16056|code|MOVS            R2, #0xA; base|10-34
16058|code|LDR.W           R10, [R5]|213-248-0-160
16062|code|BLX             strtol|255-247-230-236
16066|code|STR.W           R0, [R10]|202-248-0-0
16070|code|B               def_3E4A; jumptable 00003E4A default case, cases 101-106,108-114,116,117|177-231
16072|code|STR.W           R9, [R4]; jumptable 00003E4A case 115|196-248-0-144
16076|code|B               def_3E4A; jumptable 00003E4A default case, cases 101-106,108-114,116,117|174-231
16078|code|LDR.W           R3, =(optarg_ptr - 0x1BB8C); jumptable 00003E4A case 107|223-248-128-56
16082|code|LDR.W           R3, [R11,R3]; optarg|91-248-3-48
16086|code|LDR             R0, [R3]|24-104
16088|code|BL              sub_72D0|3-240-250-249
16092|code|MOVS            R0, #0; status|0-32
16094|code|BLX             exit|255-247-30-239
16098|code|MOVS            R3, #0; jumptable 00003E4A case 100|0-35
16100|code|STR             R3, [R4]|35-96
16102|code|B               def_3E4A; jumptable 00003E4A default case, cases 101-106,108-114,116,117|161-231
16104|code|LDR.W           R3, =(stderr_ptr - 0x1BB8C)|223-248-80-56
16108|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
16112|code|LDR             R7, [R3]|31-104
16114|code|BLX             __errno_location|255-247-32-239
16118|code|LDR             R0, [R0]; errnum|0-104
16120|code|BLX             strerror|255-247-116-234
16124|code|LDR.W           R2, =(aCanTChdirToRoo - 0x3F06); "can't chdir to root directory : %s\n"|223-248-84-40
16128|code|MOV             R1, R5|41-70
16130|code|ADD             R2, PC; "can't chdir to root directory : %s\n"|122-68
16132|code|MOV             R3, R0|3-70
16134|code|MOV             R0, R7|56-70
16136|code|BLX             __fprintf_chk|255-247-232-237
16140|code|B               loc_3E00|120-231
16142|code|LDR             R3, [R5]|43-104
16144|code|LDR             R3, [R3]|27-104
16146|code|ADDS            R3, #4|4-51
16148|code|LSL.W           R0, R8, R3|8-250-3-240
16152|code|SUBS            R0, #1; mask|1-56
16154|code|BLX             setlogmask|255-247-46-235
16158|code|LDR.W           R0, =(aLimitnofile - 0x3F26); "LimitNOFILE"|223-248-56-8
16162|code|ADD             R0, PC; "LimitNOFILE"|120-68
16164|code|BLX             getenv|255-247-16-235
16168|code|MOV             R8, R0|128-70
16170|code|CMP             R0, #0|0-40
16172|code|BEQ.W           loc_42A8|0-240-188-129
16176|code|LDR.W           R2, =(aUsingSystemdPr - 0x3F3E); "Using systemd provided open fds limit o"...|223-248-40-40
16180|code|MOV             R3, R0|3-70
16182|code|MOVS            R1, #2|2-33
16184|code|LDR             R0, [R4]|32-104
16186|code|ADD             R2, PC; "Using systemd provided open fds limit o"...|122-68
16188|code|BLX             dlog|255-247-96-234
16192|code|MOVS            R0, #0x10|16-32
16194|code|BLX             zalloc|255-247-26-238
16198|code|MOV             R8, R0|128-70
16200|code|CMP             R0, #0|0-40
16202|code|BEQ.W           loc_4474|0-240-147-130
16206|code|MOVS            R0, #0x18|24-32
16208|code|BLX             zalloc|255-247-18-238
16212|code|MOV             R9, R0|129-70
16214|code|STR.W           R0, [R8]|200-248-0-0
16218|code|CMP             R0, #0|0-40
16220|code|BEQ.W           loc_4462|0-240-129-130
16224|code|MOVS            R1, #0; mutexattr|0-33
16226|code|BLX             pthread_mutex_init|255-247-22-237
16230|code|LDR.W           R3, =(gvecs_ptr - 0x1BB8C)|223-248-248-55
16234|code|MOVS            R0, #0; pid|0-32
16236|code|LDR.W           R2, =(unk_1C008 - 0x3F7E)|223-248-244-39
16240|code|STR.W           R0, [R8,#4]|200-248-4-0
16244|code|MOVS            R1, #2; policy|2-33
16246|code|LDR.W           R3, [R11,R3]; gvecs|91-248-3-48
16250|code|ADD             R2, PC; unk_1C008 ; param|122-68
16252|code|STR.W           R8, [R3]|195-248-0-128
16256|code|BLX             sched_setscheduler|255-247-24-235
16260|code|ADDS            R0, #1|1-48
16262|code|BEQ.W           loc_4534|0-240-213-130
16266|code|LDR.W           R0, =(aOomscoreadjust - 0x3F92); "OOMScoreAdjust"|223-248-220-7
16270|code|ADD             R0, PC; "OOMScoreAdjust"|120-68
16272|code|BLX             getenv|255-247-218-234
16276|code|CMP             R0, #0|0-40
16278|code|BEQ.W           loc_434E|0-240-218-129
16282|code|LDR.W           R2, =(aUsingSystemdPr_0 - 0x3FA6); "Using systemd provided OOMScoreAdjust\n"|223-248-208-39
16286|code|MOVS            R1, #3|3-33
16288|code|LDR             R0, [R4]|32-104
16290|code|ADD             R2, PC; "Using systemd provided OOMScoreAdjust\n"|122-68
16292|code|BLX             dlog|255-247-44-234
16296|code|LDR             R3, [R5]|43-104
16298|code|ADD             R2, SP, #0x1C8+var_1A0|10-170
16300|code|MOVS            R0, #0|0-32
16302|code|MOV.W           R9, #1|79-240-1-9
16306|code|MOV             R7, R2|23-70
16308|code|STR             R2, [SP,#0x1C8+var_1B0]|6-146
16310|code|STR.W           R9, [R3,#0x50]|195-248-80-144
16314|code|BLX             udev_set_sync_support|255-247-140-235
16318|code|LDR             R3, [SP,#0x1C8+var_1B4]|5-155
16320|code|LDR.W           R2, =(sub_5190+1 - 0x3FCC)|223-248-172-39
16324|code|MOV             R0, R7; newthread|56-70
16326|code|LDR             R1, [SP,#0x1C8+attr]; attr|3-153
16328|code|ADD             R2, PC; sub_5190 ; start_routine|122-68
16330|code|LDR             R3, [R3]; arg|27-104
16332|code|BLX             pthread_create|255-247-44-236
16336|code|MOV             R10, R0|130-70
16338|code|CMP             R0, #0|0-40
16340|code|BEQ.W           loc_431C|0-240-162-129
16344|code|LDR.W           R2, =(aFailedToCreate - 0x3FE6); "failed to create uevent thread: %d\n"|223-248-152-39
16348|code|MOV             R3, R10|83-70
16350|code|LDR             R0, [R4]|32-104
16352|code|MOVS            R1, #0|0-33
16354|code|ADD             R2, PC; "failed to create uevent thread: %d\n"|122-68
16356|code|BLX             dlog|255-247-12-234
16360|code|MOVS            R0, #1; status|1-32
16362|code|BLX             exit|255-247-152-238
16366|code|LDR.W           R3, =(optind_ptr - 0x1BB8C)|223-248-136-55
16370|code|LDR.W           R9, [R11,R3]; optind|91-248-3-144
16374|code|LDR.W           R3, [R9]|217-248-0-48
16378|code|CMP             R6, R3|158-66
16380|code|BLE             loc_406E|55-221
16382|code|LDR.W           R10, =(aS - 0x400E); "\"%s\" "|223-248-124-167
16386|code|ADD             R3, SP, #0x1C8+s|63-171
16388|code|LDR.W           R11, =(aS_0 - 0x4012); "%s "|223-248-120-183
16392|code|ADD             R5, SP, #0x1C8+var_2C|103-173
16394|code|ADD             R10, PC; "\"%s\" "|250-68
16396|code|STR             R3, [SP,#0x1C8+attr]|3-147
16398|code|ADD             R11, PC; "%s "|251-68
16400|code|MOV             R4, R3|28-70
16402|code|MOV             R7, R10|87-70
16404|code|B               loc_4036|15-224
16406|code|STR             R7, [SP,#0x1C8+var_1C8]|0-151
16408|code|MOV             R0, R4|32-70
16410|code|SUBS            R1, R5, R4|41-27
16412|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
16416|code|STR.W           R10, [SP,#0x1C8+var_1C4]|205-248-4-160
16420|code|MOVS            R2, #1|1-34
16422|code|BLX             __snprintf_chk|255-247-174-236
16426|code|LDR.W           R3, [R9]|217-248-0-48
16430|code|ADDS            R3, #1|1-51
16432|code|STR.W           R3, [R9]|201-248-0-48
16436|code|ADD             R4, R0|4-68
16438|code|LDR.W           R3, [R9]|217-248-0-48
16442|code|CMP             R6, R3|158-66
16444|code|BLE             loc_4054|10-221
16446|code|LDR.W           R10, [R8,R3,LSL#2]|88-248-35-160
16450|code|MOVS            R1, #0x20 ; ' '; c|32-33
16452|code|MOV             R0, R10; s|80-70
16454|code|BLX             strchr|255-247-140-234
16458|code|CMP             R0, #0|0-40
16460|code|BNE             loc_4016|227-209
16462|code|STR.W           R11, [SP,#0x1C8+var_1C8]|205-248-0-176
16466|code|B               loc_4018|225-231
16468|code|LDR.W           R2, =(aSEitherDeviceN+0x24 - 0x4060); "\n"|223-248-44-39
16472|code|SUBS            R1, R5, R4; maxlen|41-27
16474|code|MOV             R0, R4; s|32-70
16476|code|ADD             R2, PC; "\n" ; format|122-68
16478|code|BLX             snprintf|255-247-236-237
16482|code|LDR             R0, [SP,#0x1C8+attr]|3-152
16484|code|BL              sub_72D0|3-240-52-249
16488|code|MOVS            R0, #0; status|0-32
16490|code|BLX             exit|255-247-88-238
16494|code|LDR             R3, [R4]|35-104
16496|code|CMP             R3, #0|0-43
16498|code|BLE             loc_4104|71-221
16500|code|BLX             fork|255-247-206-237
16504|code|SUBS            R6, R0, #0|6-30
16506|code|BLT.W           loc_441A|192-242-206-129
16510|code|BEQ             loc_4086|2-208
16512|code|MOVS            R0, #0; status|0-32
16514|code|BLX             exit|255-247-76-238
16518|code|BLX             setsid|255-247-174-234
16522|code|BLX             fork|255-247-196-237
16526|code|CMP             R0, #0|0-40
16528|code|BLT.W           loc_4282|192-242-247-128
16532|code|BNE.W           loc_4480|64-240-244-129
16536|code|LDR.W           R0, =(asc_A528 - 0x40A0); "/"|223-248-236-6
16540|code|ADD             R0, PC; "/"|120-68
16542|code|BLX             chdir|255-247-24-237
16546|code|CMP             R0, #0|0-40
16548|code|BLT.W           loc_4268|192-242-224-128
16552|code|LDR.W           R0, =(aDevNull - 0x40B2); "/dev/null"|223-248-224-6
16556|code|MOVS            R1, #2; oflag|2-33
16558|code|ADD             R0, PC; "/dev/null"|120-68
16560|code|BLX             open|255-247-116-233
16564|code|SUBS            R6, R0, #0|6-30
16566|code|BLT.W           loc_443C|192-242-193-129
16570|code|MOVS            R0, #0; fd|0-32
16572|code|BLX             close|255-247-146-236
16576|code|MOV             R0, R6; fd|48-70
16578|code|BLX             dup|255-247-162-237
16582|code|CMP             R0, #0|0-40
16584|code|BLT.W           loc_44D2|192-242-3-130
16588|code|MOVS            R0, #1; fd|1-32
16590|code|BLX             close|255-247-138-236
16594|code|MOV             R0, R6; fd|48-70
16596|code|BLX             dup|255-247-152-237
16600|code|CMP             R0, #0|0-40
16602|code|BLT.W           loc_44AC|192-242-231-129
16606|code|MOVS            R0, #2; fd|2-32
16608|code|BLX             close|255-247-128-236
16612|code|MOV             R0, R6; fd|48-70
16614|code|BLX             dup|255-247-144-237
16618|code|CMP             R0, #0|0-40
16620|code|BLT.W           loc_4486|192-242-203-129
16624|code|MOV             R0, R6; fd|48-70
16626|code|BLX             close|255-247-120-236
16630|code|BLX             getpid|255-247-94-237
16634|code|LDR.W           R3, =(daemon_pid_ptr - 0x1BB8C)|223-248-148-54
16638|code|LDR.W           R3, [R11,R3]; daemon_pid|91-248-3-48
16642|code|STR             R0, [R3]|24-96
16644|code|MOVS            R0, #3; flags|3-32
16646|code|ADD             R6, SP, #0x1C8+var_198|12-174
16648|code|BLX             mlockall|255-247-22-236
16652|code|LDR.W           R0, =(unk_1C01C - 0x411C)|223-248-132-6
16656|code|MOVS            R1, #0; pshared|0-33
16658|code|LDR.W           R8, =(loc_5658+1 - 0x412C)|223-248-132-134
16662|code|MOV             R2, R1; value|10-70
16664|code|ADD             R0, PC; unk_1C01C ; sem|120-68
16666|code|BLX             sem_init|255-247-58-234
16670|code|MOV             R0, R6; set|48-70
16672|code|BLX             sigemptyset|255-247-90-233
16676|code|MOVS            R1, #1; signo|1-33
16678|code|MOV             R0, R6; set|48-70
16680|code|ADD             R8, PC; loc_5658|248-68
16682|code|BLX             sigaddset|255-247-182-235
16686|code|ADD             R3, SP, #0x1C8+var_F0|54-171
16688|code|MOVS            R1, #0xA; signo|10-33
16690|code|MOV             R0, R6; set|48-70
16692|code|MOV             R7, R3|31-70
16694|code|STR             R3, [SP,#0x1C8+var_1B8]|4-147
16696|code|BLX             sigaddset|255-247-174-235
16700|code|MOVS            R1, #0xC; signo|12-33
16702|code|MOV             R0, R6; set|48-70
16704|code|ADD             R3, SP, #0x1C8+s|63-171
16706|code|STR             R3, [SP,#0x1C8+attr]|3-147
16708|code|BLX             sigaddset|255-247-168-235
16712|code|MOVS            R0, #0; how|0-32
16714|code|MOV             R1, R6; newmask|49-70
16716|code|MOV             R2, R0; oldmask|2-70
16718|code|BLX             pthread_sigmask|255-247-190-235
16722|code|LDR.W           R1, =(loc_4984+1 - 0x415C)|223-248-72-22
16726|code|MOVS            R0, #1|1-32
16728|code|ADD             R1, PC; loc_4984|121-68
16730|code|BL              sub_4B90|0-240-25-253
16734|code|LDR.W           R1, =(loc_499C+1 - 0x4168)|223-248-64-22
16738|code|MOVS            R0, #0xA|10-32
16740|code|ADD             R1, PC; loc_499C|121-68
16742|code|BL              sub_4B90|0-240-19-253
16746|code|LDR.W           R1, =(loc_49B4+1 - 0x4174)|223-248-56-22
16750|code|MOVS            R0, #0xC|12-32
16752|code|ADD             R1, PC; loc_49B4|121-68
16754|code|BL              sub_4B90|0-240-13-253
16758|code|MOV             R1, R8|65-70
16760|code|MOVS            R0, #2|2-32
16762|code|BL              sub_4B90|0-240-9-253
16766|code|MOV             R1, R8|65-70
16768|code|MOVS            R0, #0xF|15-32
16770|code|BL              sub_4B90|0-240-5-253
16774|code|MOVS            R1, #(dword_0+1); handler|1-33
16776|code|MOVS            R0, #0xD; sig|13-32
16778|code|BLX             signal|255-247-156-233
16782|code|BLX             udev_new|255-247-120-234
16786|code|LDR.W           R3, =(udev_ptr - 0x1BB8C)|223-248-20-54
16790|code|MOV.W           R1, #0x10000|79-244-128-49
16794|code|MOVS            R2, #1|1-34
16796|code|LDR.W           R3, [R11,R3]; udev|91-248-3-48
16800|code|STR             R3, [SP,#0x1C8+var_1B4]|5-147
16802|code|STR             R0, [R3]|24-96
16804|code|MOV             R0, R7|56-70
16806|code|BLX             setup_thread_attr|255-247-226-235
16810|code|LDR             R0, [SP,#0x1C8+attr]|3-152
16812|code|MOV.W           R1, #0x20000|79-244-0-49
16816|code|MOVS            R2, #1|1-34
16818|code|BLX             setup_thread_attr|255-247-220-235
16822|code|LDR.W           R3, =(waiter_attr_ptr - 0x1BB8C)|223-248-244-53
16826|code|MOV.W           R1, #0x8000|79-244-0-65
16830|code|MOVS            R2, #1|1-34
16832|code|LDR.W           R0, [R11,R3]; waiter_attr|91-248-3-0
16836|code|BLX             setup_thread_attr|255-247-210-235
16840|code|LDR             R3, [R4]|35-104
16842|code|CMP             R3, #1|1-43
16844|code|BEQ             loc_424A|61-208
16846|code|LDR             R3, [SP,#0x1C8+var_1C0]|2-155
16848|code|MOVS            R1, #2|2-33
16850|code|LDR.W           R2, =(aStartUp - 0x41E0); "--------start up--------\n"|223-248-220-37
16854|code|MOV.W           R8, #1|79-240-1-8
16858|code|LDR             R0, [R4]|32-104
16860|code|ADD             R2, PC; "--------start up--------\n"|122-68
16862|code|STR.W           R8, [R3]|195-248-0-128
16866|code|BLX             dlog|255-247-14-233
16870|code|LDR.W           R2, =(aReadEtcMultipa - 0x41F2); "read /etc/multipath.conf\n"|223-248-204-37
16874|code|LDR             R0, [R4]|32-104
16876|code|MOVS            R1, #2|2-33
16878|code|ADD             R2, PC; "read /etc/multipath.conf\n"|122-68
16880|code|BLX             dlog|255-247-6-233
16884|code|LDR             R3, [SP,#0x1C8+var_1B4]|5-155
16886|code|LDR.W           R0, =(aEtcMultipathCo - 0x4200); "/etc/multipath.conf"|223-248-192-5
16890|code|LDR             R1, [R3]|25-104
16892|code|ADD             R0, PC; "/etc/multipath.conf"|120-68
16894|code|BLX             load_config|255-247-184-237
16898|code|MOV             R9, R0|129-70
16900|code|CMP             R0, #0|0-40
16902|code|BNE.W           loc_3FE8|127-244-239-174
16906|code|LDR             R0, [R5]|40-104
16908|code|LDR.W           R1, =(aMultipath - 0x4216); "multipath"|223-248-172-21
16912|code|ADDS            R0, #0x88|136-48
16914|code|ADD             R1, PC; "multipath"|121-68
16916|code|BLX             dm_drv_version|255-247-24-233
16920|code|BLX             init_checkers|255-247-130-234
16924|code|MOV             R10, R0|130-70
16926|code|CBZ             R0, loc_4230|56-177
16928|code|LDR.W           R2, =(aFailedToInitia - 0x422C); "failed to initialize checkers\n"|223-248-156-37
16932|code|MOV             R1, R9|73-70
16934|code|LDR             R0, [R4]|32-104
16936|code|ADD             R2, PC; "failed to initialize checkers\n"|122-68
16938|code|BLX             dlog|255-247-234-232
16942|code|B               loc_3FE8|219-230
16944|code|BLX             init_prio|255-247-156-236
16948|code|CMP             R0, #0|0-40
16950|code|BEQ.W           loc_3F0E|63-244-106-174
16954|code|LDR.W           R2, =(aFailedToInitia_0 - 0x4246); "failed to initialize prioritizers\n"|223-248-136-37
16958|code|MOV             R1, R10|81-70
16960|code|LDR             R0, [R4]|32-104
16962|code|ADD             R2, PC; "failed to initialize prioritizers\n"|122-68
16964|code|BLX             dlog|255-247-220-232
16968|code|B               loc_3FE8|206-230
16970|code|ADD.W           R8, SP, #0x1C8+var_114|13-241-180-8
16974|code|MOV.W           R1, #0x10000|79-244-128-49
16978|code|MOVS            R2, #0|0-34
16980|code|MOV             R0, R8|64-70
16982|code|BLX             setup_thread_attr|255-247-138-235
16986|code|MOV             R0, R8|64-70
16988|code|BLX             log_thread_start|255-247-156-234
16992|code|MOV             R0, R8; attr|64-70
16994|code|BLX             pthread_attr_destroy|255-247-222-236
16998|code|B               loc_41CE|178-231
17000|code|LDR.W           R3, =(stderr_ptr - 0x1BB8C)|223-248-208-52
17004|code|MOVS            R1, #1; size|1-33
17006|code|LDR.W           R0, =(aCannotChdirToC - 0x427C); "cannot chdir to '/', continuing\n"|223-248-88-5
17010|code|MOVS            R2, #0x20 ; ' '; n|32-34
17012|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17016|code|ADD             R0, PC; "cannot chdir to '/', continuing\n"|120-68
17018|code|LDR             R3, [R3]; s|27-104
17020|code|BLX             fwrite|255-247-202-235
17024|code|B               loc_40A8|18-231
17026|code|LDR.W           R3, =(stderr_ptr - 0x1BB8C)|223-248-184-52
17030|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17034|code|LDR             R6, [R3]|30-104
17036|code|BLX             __errno_location|255-247-82-237
17040|code|LDR             R0, [R0]; errnum|0-104
17042|code|BLX             strerror|255-247-168-232
17046|code|LDR.W           R2, =(aFailedSecondFo - 0x42A0); "Failed second fork : %s\n"|223-248-52-37
17050|code|MOVS            R1, #1|1-33
17052|code|ADD             R2, PC; "Failed second fork : %s\n"|122-68
17054|code|MOV             R3, R0|3-70
17056|code|MOV             R0, R6|48-70
17058|code|BLX             __fprintf_chk|255-247-28-236
17062|code|B               loc_4098|247-230
17064|code|LDR             R3, [R5]|43-104
17066|code|LDR             R3, [R3,#0x40]|27-108
17068|code|CMP             R3, #0|0-43
17070|code|BEQ.W           loc_3F40|63-244-71-174
17074|code|MOVS            R0, #7; resource|7-32
17076|code|MOV             R1, R6; rlimits|49-70
17078|code|BLX             getrlimit|255-247-228-236
17082|code|CMP             R0, #0|0-40
17084|code|BGE             loc_42E4|18-218
17086|code|BLX             __errno_location|255-247-58-237
17090|code|LDR.W           R9, [R4]|212-248-0-144
17094|code|LDR             R0, [R0]; errnum|0-104
17096|code|BLX             strerror|255-247-140-232
17100|code|LDR.W           R2, =(aCanTGetOpenFds - 0x42D6); "can't get open fds limit: %s\n"|223-248-0-37
17104|code|MOV             R1, R8|65-70
17106|code|ADD             R2, PC; "can't get open fds limit: %s\n"|122-68
17108|code|MOV             R3, R0|3-70
17110|code|MOV             R0, R9|72-70
17112|code|BLX             dlog|255-247-146-232
17116|code|STR.W           R8, [R6]|198-248-0-128
17120|code|STR.W           R8, [R6,#4]|198-248-4-128
17124|code|LDR             R3, [R5]|43-104
17126|code|LDR             R2, [R6]|50-104
17128|code|LDR             R3, [R3,#0x40]|27-108
17130|code|CMP             R2, R3|154-66
17132|code|BCS.W           loc_3F40|191-244-40-174
17136|code|LDR             R2, [R6,#4]|114-104
17138|code|MOVS            R0, #7; resource|7-32
17140|code|MOV             R1, R6; rlimits|49-70
17142|code|STR             R3, [R6]|51-96
17144|code|CMP             R3, R2|147-66
17146|code|IT HI|136-191
17148|code|STRHI           R3, [R6,#4]|115-96
17150|code|BLX             setrlimit|255-247-54-233
17154|code|CMP             R0, #0|0-40
17156|code|BLT             loc_43F2|117-219
17158|code|LDR             R3, [R6,#4]|115-104
17160|code|MOVS            R1, #3|3-33
17162|code|LDR.W           R2, =(aSetOpenFdsLimi - 0x4314); "set open fds limit to %lu/%lu\n"|223-248-200-36
17166|code|LDR             R0, [R4]|32-104
17168|code|ADD             R2, PC; "set open fds limit to %lu/%lu\n"|122-68
17170|code|STR             R3, [SP,#0x1C8+var_1C8]|0-147
17172|code|LDR             R3, [R6]|51-104
17174|code|BLX             dlog|255-247-116-232
17178|code|B               loc_3F40|17-230
17180|code|ADD             R3, SP, #0x1C8+var_19C|11-171
17182|code|LDR             R0, [SP,#0x1C8+attr]; attr|3-152
17184|code|STR             R3, [SP,#0x1C8+var_1AC]|7-147
17186|code|MOV             R7, R3|31-70
17188|code|BLX             pthread_attr_destroy|255-247-124-236
17192|code|LDR.W           R2, =(sub_4EB4+1 - 0x4336)|223-248-172-36
17196|code|MOV             R0, R7; newthread|56-70
17198|code|LDR             R1, [SP,#0x1C8+var_1B8]; attr|4-153
17200|code|MOV             R3, R8; arg|67-70
17202|code|ADD             R2, PC; sub_4EB4 ; start_routine|122-68
17204|code|BLX             pthread_create|255-247-120-234
17208|code|MOV             R7, R0|7-70
17210|code|CBZ             R0, loc_43A2|144-179
17212|code|LDR.W           R2, =(aFailedToCreate_0 - 0x434A); "failed to create cli listener: %d\n"|223-248-156-36
17216|code|MOV             R1, R10|81-70
17218|code|LDR             R0, [R4]|32-104
17220|code|MOV             R3, R7|59-70
17222|code|ADD             R2, PC; "failed to create cli listener: %d\n"|122-68
17224|code|BLX             dlog|255-247-90-232
17228|code|B               loc_3FE8|76-230
17230|code|LDR.W           R9, =(aProcSelfOomSco - 0x4362); "/proc/self/oom_score_adj"|223-248-144-148
17234|code|MOVW            R7, #0xFC18|79-246-24-71
17238|code|LDR.W           R3, =(aProcSelfOomAdj - 0x4368); "/proc/self/oom_adj"|223-248-140-52
17242|code|MOVT.W          R7, #0xFFFF|207-246-255-119
17246|code|ADD             R9, PC; "/proc/self/oom_score_adj"|249-68
17248|code|MOV.W           R10, #1|79-240-1-10
17252|code|ADD             R3, PC; "/proc/self/oom_adj"|123-68
17254|code|STR             R3, [SP,#0x1C8+var_1B0]|6-147
17256|code|MOVS            R0, #3; ver|3-32
17258|code|MOV             R1, R9; filename|73-70
17260|code|MOV             R2, R6; stat_buf|50-70
17262|code|BLX             __xstat|255-247-138-232
17266|code|CMP             R0, #0|0-40
17268|code|BEQ.W           loc_4512|0-240-205-128
17272|code|BLX             __errno_location|255-247-220-236
17276|code|LDR             R0, [R0]; errnum|0-104
17278|code|CMP             R0, #2|2-40
17280|code|BNE.W           loc_44F8|64-240-186-128
17284|code|LDR.W           R9, [SP,#0x1C8+var_1B0]|221-248-24-144
17288|code|MOV             R7, #0xFFFFFFF0|111-240-15-7
17292|code|CMP.W           R10, #0|186-241-0-15
17296|code|BNE             loc_43EC|44-209
17298|code|LDR.W           R2, =(aCouldnTAdjustO - 0x439E); "couldn't adjust oom score\n"|223-248-84-36
17302|code|MOV             R1, R10|81-70
17304|code|LDR             R0, [R4]|32-104
17306|code|ADD             R2, PC; "couldn't adjust oom score\n"|122-68
17308|code|BLX             dlog|255-247-48-232
17312|code|B               loc_3FA8|2-230
17314|code|LDR.W           R3, [R8,#4]|216-248-4-48
17318|code|MOVS            R2, #2|2-34
17320|code|LDR             R1, [SP,#0x1C8+var_1C0]|2-153
17322|code|ADDS            R3, #1|1-51
17324|code|LDR.W           R0, [R8]; mutex|216-248-0-0
17328|code|STR.W           R3, [R8,#4]|200-248-4-48
17332|code|STR             R2, [R1]|10-96
17334|code|BLX             pthread_mutex_lock|255-247-20-234
17338|code|MOV             R0, R8|64-70
17340|code|MOV             R1, R9|73-70
17342|code|BL              sub_57C4|1-240-1-250
17346|code|LDR.W           R3, [R8,#4]|216-248-4-48
17350|code|MOV             R10, R0|130-70
17352|code|CMP             R0, #0|0-40
17354|code|BEQ.W           loc_4542|0-240-186-128
17358|code|SUBS            R3, #1|1-59
17360|code|LDR.W           R0, [R8]; mutex|216-248-0-0
17364|code|STR.W           R3, [R8,#4]|200-248-4-48
17368|code|BLX             pthread_mutex_unlock|255-247-204-233
17372|code|LDR.W           R2, =(aFailureDuringC - 0x43E8); "failure during configuration\n"|223-248-12-36
17376|code|LDR             R0, [R4]|32-104
17378|code|MOV             R1, R7|57-70
17380|code|ADD             R2, PC; "failure during configuration\n"|122-68
17382|code|BLX             dlog|255-247-12-232
17386|code|B               loc_3FE8|253-229
17388|code|MOV.W           R10, #0|79-240-0-10
17392|code|B               loc_4368|186-231
17394|code|BLX             __errno_location|255-247-160-236
17398|code|LDM.W           R6, {R9,R10}|150-232-0-6
17402|code|LDR.W           R8, [R4]|212-248-0-128
17406|code|LDR             R0, [R0]; errnum|0-104
17408|code|BLX             strerror|254-247-240-239
17412|code|LDR             R2, =(aCanTSetOpenFds - 0x4412); "can't set open fds limit to %lu/%lu : %"...|250-74
17414|code|STR.W           R10, [SP,#0x1C8+var_1C8]|205-248-0-160
17418|code|MOV             R3, R9|75-70
17420|code|MOVS            R1, #0|0-33
17422|code|ADD             R2, PC; "can't set open fds limit to %lu/%lu : %"...|122-68
17424|code|STR             R0, [SP,#0x1C8+var_1C4]|1-144
17426|code|MOV             R0, R8|64-70
17428|code|BLX             dlog|254-247-244-239
17432|code|B               loc_3F40|146-229
17434|code|LDR             R3, =(stderr_ptr - 0x1BB8C)|200-75
17436|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17440|code|LDR             R4, [R3]|28-104
17442|code|BLX             __errno_location|255-247-136-236
17446|code|LDR             R0, [R0]; errnum|0-104
17448|code|BLX             strerror|254-247-220-239
17452|code|LDR             R2, =(aFailedFirstFor - 0x4434); "Failed first fork : %s\n"|241-74
17454|code|MOVS            R1, #1|1-33
17456|code|ADD             R2, PC; "Failed first fork : %s\n"|122-68
17458|code|MOV             R3, R0|3-70
17460|code|MOV             R0, R4|32-70
17462|code|BLX             __fprintf_chk|255-247-82-235
17466|code|B               loc_3FE8|213-229
17468|code|LDR             R3, =(stderr_ptr - 0x1BB8C)|191-75
17470|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17474|code|LDR             R4, [R3]|28-104
17476|code|BLX             __errno_location|255-247-118-236
17480|code|LDR             R0, [R0]; errnum|0-104
17482|code|BLX             strerror|254-247-204-239
17486|code|LDR             R2, =(aCannotOpenDevN - 0x4456); "cannot open /dev/null for input & outpu"...|234-74
17488|code|MOVS            R1, #1|1-33
17490|code|ADD             R2, PC; "cannot open /dev/null for input & outpu"...|122-68
17492|code|MOV             R3, R0|3-70
17494|code|MOV             R0, R4|32-70
17496|code|BLX             __fprintf_chk|255-247-64-235
17500|code|MOVS            R0, #0; status|0-32
17502|code|BLX             _exit|255-247-10-233
17506|code|MOV             R0, R8|64-70
17508|code|BLX             xfree|255-247-40-232
17512|code|LDR             R2, =(aFailedToInitPa - 0x4472); "failed to init paths\n"|228-74
17514|code|LDR             R0, [R4]|32-104
17516|code|MOV             R1, R9|73-70
17518|code|ADD             R2, PC; "failed to init paths\n"|122-68
17520|code|BLX             dlog|254-247-198-239
17524|code|LDR             R3, =(gvecs_ptr - 0x1BB8C)|186-75
17526|code|MOVS            R2, #0|0-34
17528|code|LDR.W           R3, [R11,R3]; gvecs|91-248-3-48
17532|code|STR             R2, [R3]|26-96
17534|code|B               loc_3FE8|179-229
17536|code|MOV             R0, R6; status|48-70
17538|code|BLX             _exit|255-247-248-232
17542|code|LDR             R3, =(stderr_ptr - 0x1BB8C)|173-75
17544|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17548|code|LDR             R4, [R3]|28-104
17550|code|BLX             __errno_location|255-247-82-236
17554|code|LDR             R0, [R0]; errnum|0-104
17556|code|BLX             strerror|254-247-166-239
17560|code|LDR             R2, =(aCannotDupDevNu - 0x44A0); "cannot dup /dev/null to stderr : %s\n"|217-74
17562|code|MOVS            R1, #1|1-33
17564|code|ADD             R2, PC; "cannot dup /dev/null to stderr : %s\n"|122-68
17566|code|MOV             R3, R0|3-70
17568|code|MOV             R0, R4|32-70
17570|code|BLX             __fprintf_chk|255-247-28-235
17574|code|MOVS            R0, #0; status|0-32
17576|code|BLX             _exit|255-247-228-232
17580|code|LDR             R3, =(stderr_ptr - 0x1BB8C)|163-75
17582|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17586|code|LDR             R4, [R3]|28-104
17588|code|BLX             __errno_location|255-247-62-236
17592|code|LDR             R0, [R0]; errnum|0-104
17594|code|BLX             strerror|254-247-148-239
17598|code|LDR             R2, =(aCannotDupDevNu_0 - 0x44C6); "cannot dup /dev/null to stdout : %s\n"|209-74
17600|code|MOVS            R1, #1|1-33
17602|code|ADD             R2, PC; "cannot dup /dev/null to stdout : %s\n"|122-68
17604|code|MOV             R3, R0|3-70
17606|code|MOV             R0, R4|32-70
17608|code|BLX             __fprintf_chk|255-247-8-235
17612|code|MOVS            R0, #0; status|0-32
17614|code|BLX             _exit|255-247-210-232
17618|code|LDR             R3, =(stderr_ptr - 0x1BB8C)|154-75
17620|code|LDR.W           R3, [R11,R3]; stderr|91-248-3-48
17624|code|LDR             R4, [R3]|28-104
17626|code|BLX             __errno_location|255-247-44-236
17630|code|LDR             R0, [R0]; errnum|0-104
17632|code|BLX             strerror|254-247-128-239
17636|code|LDR             R2, =(aCannotDupDevNu_1 - 0x44EC); "cannot dup /dev/null to stdin : %s\n"|200-74
17638|code|MOVS            R1, #1|1-33
17640|code|ADD             R2, PC; "cannot dup /dev/null to stdin : %s\n"|122-68
17642|code|MOV             R3, R0|3-70
17644|code|MOV             R0, R4|32-70
17646|code|BLX             __fprintf_chk|255-247-246-234
17650|code|MOVS            R0, #0; status|0-32
17652|code|BLX             _exit|255-247-190-232
17656|code|LDR.W           R10, [R4]|212-248-0-160
17660|code|BLX             strerror|254-247-114-239
17664|code|LDR             R2, =(aCouldnTStatSS - 0x450A); "couldn't stat %s : %s\n"|194-74
17666|code|MOV             R3, R9|75-70
17668|code|MOVS            R1, #0|0-33
17670|code|ADD             R2, PC; "couldn't stat %s : %s\n"|122-68
17672|code|STR             R0, [SP,#0x1C8+var_1C8]|0-144
17674|code|MOV             R0, R10|80-70
17676|code|BLX             dlog|254-247-120-239
17680|code|B               loc_3FA8|74-229
17682|code|LDR             R1, =(aW - 0x451A); "w"|191-73
17684|code|MOV             R0, R9; filename|72-70
17686|code|ADD             R1, PC; "w"|121-68
17688|code|BLX             fopen|255-247-70-232
17692|code|MOV             R10, R0|130-70
17694|code|CBZ             R0, loc_4576|80-179
17696|code|LDR             R2, =(aI - 0x452A); "%i"|188-74
17698|code|MOV             R3, R7|59-70
17700|code|MOVS            R1, #1|1-33
17702|code|ADD             R2, PC; "%i"|122-68
17704|code|BLX             __fprintf_chk|255-247-216-234
17708|code|MOV             R0, R10; stream|80-70
17710|code|BLX             fclose|255-247-6-232
17714|code|B               loc_3FA8|57-229
17716|code|LDR             R2, =(aCouldNotSetSch - 0x453E); "Could not set SCHED_RR at priority 99\n"|184-74
17718|code|MOVS            R1, #4|4-33
17720|code|LDR             R0, [R4]|32-104
17722|code|ADD             R2, PC; "Could not set SCHED_RR at priority 99\n"|122-68
17724|code|BLX             dlog|254-247-96-239
17728|code|B               loc_3F8A|35-229
17730|code|SUBS            R3, #1|1-59
17732|code|LDR.W           R0, [R8]; mutex|216-248-0-0
17736|code|STR.W           R3, [R8,#4]|200-248-4-48
17740|code|ADD.W           R9, SP, #0x1C8+var_1A4|13-241-36-9
17744|code|BLX             pthread_mutex_unlock|255-247-16-233
17748|code|LDR             R2, =(sub_6A78+1 - 0x455E)|177-74
17750|code|MOV             R0, R9; newthread|72-70
17752|code|LDR             R1, [SP,#0x1C8+var_1B8]; attr|4-153
17754|code|ADD             R2, PC; sub_6A78 ; start_routine|122-68
17756|code|MOV             R3, R8; arg|67-70
17758|code|BLX             pthread_create|255-247-100-233
17762|code|MOV             R7, R0|7-70
17764|code|CBZ             R0, loc_4594|176-177
17766|code|LDR             R2, =(aFailedToCreate_1 - 0x4572); "failed to create checker loop thread: %"...|174-74
17768|code|MOV             R1, R10|81-70
17770|code|LDR             R0, [R4]|32-104
17772|code|MOV             R3, R7|59-70
17774|code|ADD             R2, PC; "failed to create checker loop thread: %"...|122-68
17776|code|BLX             dlog|254-247-70-239
17780|code|B               loc_3FE8|56-229
17782|code|BLX             __errno_location|255-247-222-235
17786|code|LDR             R7, [R4]|39-104
17788|code|LDR             R0, [R0]; errnum|0-104
17790|code|BLX             strerror|254-247-50-239
17794|code|LDR             R2, =(aCouldnTFopenSS - 0x458C); "couldn't fopen %s : %s\n"|168-74
17796|code|MOV             R1, R10|81-70
17798|code|MOV             R3, R9|75-70
17800|code|ADD             R2, PC; "couldn't fopen %s : %s\n"|122-68
17802|code|STR             R0, [SP,#0x1C8+var_1C8]|0-144
17804|code|MOV             R0, R7|56-70
17806|code|BLX             dlog|254-247-56-239
17810|code|B               loc_3FA8|9-229
17812|code|LDR             R2, =(sub_4E7C+1 - 0x45A0)|164-74
17814|code|MOV             R3, R8; arg|67-70
17816|code|MOV             R0, R6; newthread|48-70
17818|code|LDR             R1, [SP,#0x1C8+var_1B8]; attr|4-153
17820|code|ADD             R2, PC; sub_4E7C ; start_routine|122-68
17822|code|BLX             pthread_create|255-247-68-233
17826|code|MOV             R3, R0|3-70
17828|code|CBZ             R0, loc_45B4|48-177
17830|code|LDR             R2, =(aFailedToCreate_2 - 0x45B0); "failed to create uevent dispatcher: %d"...|161-74
17832|code|MOV             R1, R7|57-70
17834|code|LDR             R0, [R4]|32-104
17836|code|ADD             R2, PC; "failed to create uevent dispatcher: %d"...|122-68
17838|code|BLX             dlog|254-247-40-239
17842|code|B               loc_3FE8|25-229
17844|code|LDR             R0, [SP,#0x1C8+var_1B8]; attr|4-152
17846|code|BLX             pthread_attr_destroy|255-247-52-235
17850|code|LDR             R3, =(daemon_pid_ptr - 0x1BB8C)|117-75
17852|code|LDR             R0, =(aVarRunMultipat - 0x45C8); "/var/run/multipathd.pid"|156-72
17854|code|LDR             R7, =(unk_1C01C - 0x45CA)|157-79
17856|code|LDR.W           R3, [R11,R3]; daemon_pid|91-248-3-48
17860|code|ADD             R0, PC; "/var/run/multipathd.pid"|120-68
17862|code|ADD             R7, PC; unk_1C01C|127-68
17864|code|LDR             R1, [R3]|25-104
17866|code|BL              sub_6E0C|2-240-31-252
17870|code|LDR             R2, [SP,#0x1C8+var_1C0]|2-154
17872|code|MOVS            R3, #3|3-35
17874|code|STR             R3, [R2]|19-96
17876|code|MOV             R10, R0|130-70
17878|code|MOV             R0, R7; sem|56-70
17880|code|BLX             sem_wait|255-247-106-235
17884|code|CMP             R0, #0|0-40
17886|code|BNE             loc_45D6|250-209
17888|code|LDR.W           R3, [R8,#4]|216-248-4-48
17892|code|MOVS            R2, #4|4-34
17894|code|LDR.W           R0, [R8]; mutex|216-248-0-0
17898|code|ADDS            R3, #1|1-51
17900|code|STR.W           R3, [R8,#4]|200-248-4-48
17904|code|LDR             R3, [SP,#0x1C8+var_1C0]|2-155
17906|code|STR             R2, [R3]|26-96
17908|code|BLX             pthread_mutex_lock|255-247-244-232
17912|code|LDR             R3, [R5]|43-104
17914|code|LDR             R7, [R3,#0x48]|159-108
17916|code|CMP             R7, #0|0-47
17918|code|BEQ             loc_46FE|126-208
17920|code|MOV             R0, R8|64-70
17922|code|LDR             R7, =(aHaveDWaitEvent - 0x4610); "Have %d wait event checkers threads to "...|141-79
17924|code|BLX             remove_maps_and_stop_waiters|255-247-238-234
17928|code|LDM.W           R8, {R0,R3}; mutex|152-232-9-0
17932|code|ADD             R7, PC; "Have %d wait event checkers threads to "...|127-68
17934|code|SUBS            R3, #1|1-59
17936|code|STR.W           R3, [R8,#4]|200-248-4-48
17940|code|BLX             pthread_mutex_unlock|255-247-174-232
17944|code|LDR.W           R0, [R9]; th|217-248-0-0
17948|code|BLX             pthread_cancel|255-247-144-235
17952|code|LDR             R3, [SP,#0x1C8+var_1B0]|6-155
17954|code|LDR             R0, [R3]; th|24-104
17956|code|BLX             pthread_cancel|255-247-140-235
17960|code|LDR             R3, [SP,#0x1C8+var_1AC]|7-155
17962|code|LDR             R0, [R3]; th|24-104
17964|code|BLX             pthread_cancel|255-247-136-235
17968|code|LDR             R0, [R6]; th|48-104
17970|code|BLX             pthread_cancel|255-247-134-235
17974|code|LDM.W           R8, {R0,R3}; mutex|152-232-9-0
17978|code|ADDS            R3, #1|1-51
17980|code|STR.W           R3, [R8,#4]|200-248-4-48
17984|code|BLX             pthread_mutex_lock|255-247-206-232
17988|code|LDR.W           R0, [R8,#8]|216-248-8-0
17992|code|MOVS            R1, #1|1-33
17994|code|BLX             free_pathvec|254-247-240-239
17998|code|LDR.W           R3, [R8,#4]|216-248-4-48
18002|code|MOVS            R2, #0|0-34
18004|code|LDR.W           R0, [R8]; mutex|216-248-0-0
18008|code|SUBS            R3, #1|1-59
18010|code|STR.W           R2, [R8,#8]|200-248-8-32
18014|code|STR.W           R3, [R8,#4]|200-248-4-48
18018|code|BLX             pthread_mutex_unlock|255-247-136-232
18022|code|B               loc_467C|9-224
18024|code|MOVS            R0, #1; seconds|1-32
18026|code|BLX             sleep|255-247-98-234
18030|code|LDR             R0, [R4]|32-104
18032|code|MOVS            R1, #3|3-33
18034|code|MOV             R2, R7|58-70
18036|code|LDR.W           R3, [R8,#4]|216-248-4-48
18040|code|BLX             dlog|254-247-194-238
18044|code|LDR.W           R3, [R8,#4]|216-248-4-48
18048|code|CMP             R3, #0|0-43
18050|code|BGT             loc_4668|241-220
18052|code|LDR.W           R0, [R8]; mutex|216-248-0-0
18056|code|BLX             pthread_mutex_destroy|255-247-38-233
18060|code|LDR.W           R0, [R8]|216-248-0-0
18064|code|BLX             xfree|254-247-18-239
18068|code|MOVS            R3, #0|0-35
18070|code|MOV             R0, R8|64-70
18072|code|STR.W           R3, [R8,#4]|200-248-4-48
18076|code|STR.W           R3, [R8]|200-248-0-48
18080|code|BLX             xfree|254-247-10-239
18084|code|BLX             cleanup_checkers|255-247-202-233
18088|code|BLX             cleanup_prio|255-247-172-232
18092|code|BLX             dm_lib_release|254-247-198-238
18096|code|BLX             dm_lib_exit|255-247-126-232
18100|code|CMP.W           R10, #0|186-241-0-15
18104|code|BNE             loc_46CE|9-209
18106|code|LDR             R2, =(aUnlinkPidfile - 0x46C4); "unlink pidfile\n"|96-74
18108|code|MOVS            R1, #3|3-33
18110|code|LDR             R0, [R4]|32-104
18112|code|ADD             R2, PC; "unlink pidfile\n"|122-68
18114|code|BLX             dlog|254-247-158-238
18118|code|LDR             R0, =(aVarRunMultipat - 0x46CC); "/var/run/multipathd.pid"|94-72
18120|code|ADD             R0, PC; "/var/run/multipathd.pid"|120-68
18122|code|BLX             unlink|255-247-162-232
18126|code|LDR             R2, =(aShutDown - 0x46D8); "--------shut down-------\n"|93-74
18128|code|MOVS            R1, #2|2-33
18130|code|LDR             R0, [R4]|32-104
18132|code|ADD             R2, PC; "--------shut down-------\n"|122-68
18134|code|BLX             dlog|254-247-148-238
18138|code|LDR             R3, [R4]|35-104
18140|code|CMP             R3, #1|1-43
18142|code|BNE             loc_46E4|1-209
18144|code|BLX             log_thread_stop|254-247-92-239
18148|code|LDR             R0, [R5]|40-104
18150|code|MOVS            R4, #0|0-36
18152|code|BLX             free_config|254-247-82-238
18156|code|LDR             R6, [SP,#0x1C8+var_1B4]|5-158
18158|code|STR             R4, [R5]|44-96
18160|code|LDR             R0, [R6]|48-104
18162|code|BLX             udev_unref|255-247-102-233
18166|code|MOV             R0, R4; status|32-70
18168|code|STR             R4, [R6]|52-96
18170|code|BLX             exit|255-247-16-235
18174|code|LDR.W           R3, [R8,#0xC]|216-248-12-48
18178|code|CMP             R3, #0|0-43
18180|code|BEQ.W           loc_4600|63-244-124-175
18184|code|LDR             R2, [R3]|26-104
18186|code|CMP             R7, R2|151-66
18188|code|BGE.W           loc_4600|191-246-120-175
18192|code|LDR             R3, [R3,#4]|91-104
18194|code|LDR.W           R3, [R3,R7,LSL#2]|83-248-39-48
18198|code|CMP             R3, #0|0-43
18200|code|BEQ.W           loc_4600|63-244-114-175
18204|code|LDR.W           R0, [R3,#0x16C]|211-248-108-1
18208|code|MOVS            R1, #0|0-33
18210|code|ADDS            R7, #1|1-55
18212|code|BLX             dm_queue_if_no_path|255-247-150-233
18216|code|B               loc_46FE|233-231
18218|data|ALIGN 4|0-191
18220|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3DAA|226-125-1-0
18224|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
18228|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
18232|data|DCD running_state_ptr - 0x1BB8C|216-3-0-0
18236|data|DCD stderr_ptr - 0x1BB8C|48-4-0-0
18240|data|DCD aNeedToBeRoot - 0x3DE8; "need to be root\n"|44-103-0-0
18244|data|DCD asc_A528 - 0x3DFA; "/"|46-103-0-0
18248|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
18252|data|DCD aDsvK - 0x3E2E; ":dsv:k::"|34-103-0-0
18256|data|DCD optarg_ptr - 0x1BB8C|60-4-0-0
18260|data|DCD aCanTChdirToRoo - 0x3F06; "can't chdir to root directory : %s\n"|38-102-0-0
18264|data|DCD aLimitnofile - 0x3F26; "LimitNOFILE"|198-103-0-0
18268|data|DCD aUsingSystemdPr - 0x3F3E; "Using systemd provided open fds limit o"...|186-103-0-0
18272|data|DCD gvecs_ptr - 0x1BB8C|100-3-0-0
18276|data|DCD unk_1C008 - 0x3F7E|138-128-1-0
18280|data|DCD aOomscoreadjust - 0x3F92; "OOMScoreAdjust"|66-104-0-0
18284|data|DCD aUsingSystemdPr_0 - 0x3FA6; "Using systemd provided OOMScoreAdjust\n"|62-104-0-0
18288|data|DCD sub_5190+1 - 0x3FCC|197-17-0-0
18292|data|DCD aFailedToCreate - 0x3FE6; "failed to create uevent thread: %d\n"|142-104-0-0
18296|data|DCD optind_ptr - 0x1BB8C|172-3-0-0
18300|data|DCD aS - 0x400E; "\"%s\" "|78-101-0-0
18304|data|DCD aS_0 - 0x4012; "%s "|82-101-0-0
18308|data|DCD aSEitherDeviceN+0x24 - 0x4060; "\n"|220-90-0-0
18312|data|DCD asc_A528 - 0x40A0; "/"|136-100-0-0
18316|data|DCD aDevNull - 0x40B2; "/dev/null"|14-101-0-0
18320|data|DCD daemon_pid_ptr - 0x1BB8C|76-4-0-0
18324|data|DCD unk_1C01C - 0x411C|0-127-1-0
18328|data|DCD loc_5658+1 - 0x412C|45-21-0-0
18332|data|DCD loc_4984+1 - 0x415C|41-8-0-0
18336|data|DCD loc_499C+1 - 0x4168|53-8-0-0
18340|data|DCD loc_49B4+1 - 0x4174|65-8-0-0
18344|data|DCD udev_ptr - 0x1BB8C|16-4-0-0
18348|data|DCD waiter_attr_ptr - 0x1BB8C|212-3-0-0
18352|data|DCD aStartUp - 0x41E0; "--------start up--------\n"|144-100-0-0
18356|data|DCD aReadEtcMultipa - 0x41F2; "read /etc/multipath.conf\n"|154-100-0-0
18360|data|DCD aEtcMultipathCo - 0x4200; "/etc/multipath.conf"|124-92-0-0
18364|data|DCD aMultipath - 0x4216; "multipath"|202-89-0-0
18368|data|DCD aFailedToInitia - 0x422C; "failed to initialize checkers\n"|124-100-0-0
18372|data|DCD aFailedToInitia_0 - 0x4246; "failed to initialize prioritizers\n"|130-100-0-0
18376|data|DCD aCannotChdirToC - 0x427C; "cannot chdir to '/', continuing\n"|32-99-0-0
18380|data|DCD aFailedSecondFo - 0x42A0; "Failed second fork : %s\n"|224-98-0-0
18384|data|DCD aCanTGetOpenFds - 0x42D6; "can't get open fds limit: %s\n"|82-100-0-0
18388|data|DCD aSetOpenFdsLimi - 0x4314; "set open fds limit to %lu/%lu\n"|96-100-0-0
18392|data|DCD sub_4EB4+1 - 0x4336|127-11-0-0
18396|data|DCD aFailedToCreate_0 - 0x434A; "failed to create cli listener: %d\n"|78-101-0-0
18400|data|DCD aProcSelfOomSco - 0x4362; "/proc/self/oom_score_adj"|150-97-0-0
18404|data|DCD aProcSelfOomAdj - 0x4368; "/proc/self/oom_adj"|220-100-0-0
18408|data|DCD aCouldnTAdjustO - 0x439E; "couldn't adjust oom score\n"|186-100-0-0
18412|data|DCD aFailureDuringC - 0x43E8; "failure during configuration\n"|212-100-0-0
18416|data|DCD aCanTSetOpenFds - 0x4412; "can't set open fds limit to %lu/%lu : %"...|54-99-0-0
18420|data|DCD aFailedFirstFor - 0x4434; "Failed first fork : %s\n"|52-97-0-0
18424|data|DCD aCannotOpenDevN - 0x4456; "cannot open /dev/null for input & outpu"...|118-97-0-0
18428|data|DCD aFailedToInitPa - 0x4472; "failed to init paths\n"|34-99-0-0
18432|data|DCD aCannotDupDevNu - 0x44A0; "cannot dup /dev/null to stderr : %s\n"|168-97-0-0
18436|data|DCD aCannotDupDevNu_0 - 0x44C6; "cannot dup /dev/null to stdout : %s\n"|90-97-0-0
18440|data|DCD aCannotDupDevNu_1 - 0x44EC; "cannot dup /dev/null to stdin : %s\n"|16-97-0-0
18444|data|DCD aCouldnTStatSS - 0x450A; "couldn't stat %s : %s\n"|34-99-0-0
18448|data|DCD aW - 0x451A; "w"|242-98-0-0
18452|data|DCD aI - 0x452A; "%i"|254-98-0-0
18456|data|DCD aCouldNotSetSch - 0x453E; "Could not set SCHED_RR at priority 99\n"|110-98-0-0
18460|data|DCD sub_6A78+1 - 0x455E|27-37-0-0
18464|data|DCD aFailedToCreate_1 - 0x4572; "failed to create checker loop thread: %"...|106-99-0-0
18468|data|DCD aCouldnTFopenSS - 0x458C; "couldn't fopen %s : %s\n"|132-98-0-0
18472|data|DCD sub_4E7C+1 - 0x45A0|221-8-0-0
18476|data|DCD aFailedToCreate_2 - 0x45B0; "failed to create uevent dispatcher: %d"...|88-99-0-0
18480|data|DCD aVarRunMultipat - 0x45C8; "/var/run/multipathd.pid"|104-99-0-0
18484|data|DCD unk_1C01C - 0x45CA|82-122-1-0
18488|data|DCD aHaveDWaitEvent - 0x4610; "Have %d wait event checkers threads to "...|56-99-0-0
18492|data|DCD aUnlinkPidfile - 0x46C4; "unlink pidfile\n"|196-98-0-0
18496|data|DCD aVarRunMultipat - 0x46CC; "/var/run/multipathd.pid"|100-98-0-0
18500|data|DCD aShutDown - 0x46D8; "--------shut down-------\n"|192-98-0-0
18504|code|MOV.W           R11, #0|79-240-0-11
18508|code|MOV.W           LR, #0|79-240-0-14
18512|code|POP             {R1}; argc|2-188
18514|code|MOV             R2, SP; ubp_av|106-70
18516|code|PUSH            {R2}; stack_end|4-180
18518|code|PUSH            {R0}; rtld_fini|1-180
18520|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x4880)|223-248-36-160
18524|code|ADR             R3, off_4880|8-163
18526|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
18528|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x1BB8C)|223-248-32-192
18532|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
18536|code|PUSH.W          {R12}; fini|77-248-4-205
18540|code|LDR             R3, =(__libc_csu_init_ptr - 0x1BB8C)|6-75
18542|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
18546|code|LDR             R0, =(main_ptr - 0x1BB8C)|6-72
18548|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
18552|code|BLX             __libc_start_main|254-247-10-238
18556|code|BLX             abort|254-247-204-237
18560|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4880|12-115-1-0
18564|data|DCD __libc_csu_fini_ptr - 0x1BB8C|108-3-0-0
18568|data|DCD __libc_csu_init_ptr - 0x1BB8C|224-3-0-0
18572|data|DCD main_ptr - 0x1BB8C|112-4-0-0
18576|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x48A0)|20-48-159-229
18580|code|LDR             R2, =(__gmon_start___ptr_0 - 0x1BB8C)|20-32-159-229
18584|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
18588|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
18592|code|CMP             R2, #0|0-0-82-227
18596|code|BXEQ            LR|30-255-47-1
18600|code|B               __gmon_start__|11-251-255-234
18604|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x48A0|236-114-1-0
18608|data|DCD __gmon_start___ptr_0 - 0x1BB8C|128-3-0-0
18612|code|LDR             R3, =(__bss_start - 0x48BC)|7-75
18614|code|LDR             R0, =(__bss_start - 0x48C0)|8-72
18616|code|ADD             R3, PC; __bss_start|123-68
18618|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x48C6)|8-74
18620|code|ADD             R0, PC; __bss_start|120-68
18622|code|ADDS            R3, #3|3-51
18624|code|SUBS            R3, R3, R0|27-26
18626|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
18628|code|CMP             R3, #6|6-43
18630|code|BLS             locret_48D0|3-217
18632|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x1BB8C)|5-75
18634|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
18636|code|CBZ             R3, locret_48D0|3-177
18638|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
18640|code|BX              LR|112-71
18642|data|ALIGN 4|0-191
18644|data|DCD __bss_start - 0x48BC|88-119-1-0
18648|data|DCD __bss_start - 0x48C0|84-119-1-0
18652|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x48C6|198-114-1-0
18656|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x1BB8C|156-3-0-0
18660|code|LDR             R1, =(__bss_start - 0x48EC)|8-73
18662|code|LDR             R0, =(__bss_start - 0x48F0)|9-72
18664|code|ADD             R1, PC; __bss_start|121-68
18666|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x48F4)|9-75
18668|code|ADD             R0, PC; __bss_start|120-68
18670|code|SUBS            R1, R1, R0|9-26
18672|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
18674|code|ASRS            R1, R1, #2|137-16
18676|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
18680|code|ASRS            R1, R1, #1|73-16
18682|code|BEQ             locret_4904|3-208
18684|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x1BB8C)|5-74
18686|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
18688|code|CBZ             R3, locret_4904|3-177
18690|code|BX              R3; _ITM_registerTMCloneTable|24-71
18692|code|BX              LR|112-71
18694|data|ALIGN 4|0-191
18696|data|DCD __bss_start - 0x48EC|40-119-1-0
18700|data|DCD __bss_start - 0x48F0|36-119-1-0
18704|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x48F4|152-114-1-0
18708|data|DCD _ITM_registerTMCloneTable_ptr - 0x1BB8C|180-3-0-0
18712|code|PUSH            {R3,LR}|8-181
18714|code|LDR             R3, =(byte_1C018 - 0x4922)|10-75
18716|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x4924)|10-74
18718|code|ADD             R3, PC; byte_1C018|123-68
18720|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
18722|code|LDRB            R3, [R3]|27-120
18724|code|CBNZ            R3, locret_4942|107-185
18726|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x1BB8C)|9-75
18728|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
18730|code|CBZ             R3, loc_4936|35-177
18732|code|LDR             R3, =(off_1C004 - 0x4932)|8-75
18734|code|ADD             R3, PC; off_1C004|123-68
18736|code|LDR             R0, [R3]; off_1C004 ; void *|24-104
18738|code|BLX             __cxa_finalize|255-247-18-234
18742|code|BL              sub_48B4|255-247-189-255
18746|code|LDR             R3, =(byte_1C018 - 0x4942)|6-75
18748|code|MOVS            R2, #1|1-34
18750|code|ADD             R3, PC; byte_1C018|123-68
18752|code|STRB            R2, [R3]|26-112
18754|code|POP             {R3,PC}|8-189
18756|data|DCD byte_1C018 - 0x4922|246-118-1-0
18760|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4924|104-114-1-0
18764|data|DCD __cxa_finalize_ptr_0 - 0x1BB8C|104-4-0-0
18768|data|DCD off_1C004 - 0x4932|210-118-1-0
18772|data|DCD byte_1C018 - 0x4942|214-118-1-0
18776|code|LDR             R0, =(dword_1BA48 - 0x4960)|7-72
18778|code|PUSH            {R3,LR}|8-181
18780|code|ADD             R0, PC; dword_1BA48|120-68
18782|code|LDR             R2, [R0]|2-104
18784|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x4966)|6-75
18786|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
18788|code|CBNZ            R2, loc_496C|18-185
18790|code|POP.W           {R3,LR}|189-232-8-64
18794|code|B               sub_48E4|187-231
18796|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x1BB8C)|4-74
18798|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
18800|code|CMP             R3, #0|0-43
18802|code|BEQ             loc_4966|248-208
18804|code|BLX             R3; _Jv_RegisterClasses|152-71
18806|code|B               loc_4966|246-231
18808|data|DCD dword_1BA48 - 0x4960|232-112-1-0
18812|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4966|38-114-1-0
18816|data|DCD _Jv_RegisterClasses_ptr - 0x1BB8C|132-3-0-0
18820|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x498E)|3-75
18822|code|MOVS            R1, #1|1-33
18824|code|LDR             R2, =(reconfig_sig_ptr - 0x1BB8C)|3-74
18826|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
18828|code|LDR             R3, [R3,R2]; reconfig_sig|155-88
18830|code|STR             R1, [R3]|25-96
18832|code|BX              LR|112-71
18834|data|ALIGN 4|0-191
18836|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x498E|254-113-1-0
18840|data|DCD reconfig_sig_ptr - 0x1BB8C|0-4-0-0
18844|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x49A6)|3-75
18846|code|MOVS            R1, #1|1-33
18848|code|LDR             R2, =(log_reset_sig_ptr - 0x1BB8C)|3-74
18850|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
18852|code|LDR             R3, [R3,R2]; log_reset_sig|155-88
18854|code|STR             R1, [R3]|25-96
18856|code|BX              LR|112-71
18858|data|ALIGN 4|0-191
18860|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x49A6|230-113-1-0
18864|data|DCD log_reset_sig_ptr - 0x1BB8C|124-3-0-0
18868|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x49BE)|4-75
18870|code|MOVS            R1, #3|3-33
18872|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|4-72
18874|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
18876|code|LDR             R2, =(aSigusr2Receive - 0x49C4); "SIGUSR2 received\n"|4-74
18878|code|LDR             R3, [R3,R0]; logsink|27-88
18880|code|ADD             R2, PC; "SIGUSR2 received\n"|122-68
18882|code|LDR             R0, [R3]|24-104
18884|code|B.W             j_dlog|254-247-26-189
18888|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x49BE|206-113-1-0
18892|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
18896|data|DCD aSigusr2Receive - 0x49C4; "SIGUSR2 received\n"|104-79-0-0
18900|code|PUSH            {R3-R7,LR}|248-181
18902|code|MOV             R4, R3|28-70
18904|code|MOV             R7, R0|7-70
18906|code|MOVS            R3, #0|0-35
18908|code|STR             R3, [R1]|11-96
18910|code|MOV             R6, R1|14-70
18912|code|STR             R3, [R2]|19-96
18914|code|MOV             R5, R2|21-70
18916|code|LDM.W           R4, {R0,R3}; mutex|148-232-9-0
18920|code|ADDS            R3, #1|1-51
18922|code|STR             R3, [R4,#4]|99-96
18924|code|BLX             pthread_mutex_lock|254-247-248-238
18928|code|BLX             pthread_testcancel|255-247-182-232
18932|code|MOV             R0, R7|56-70
18934|code|MOV             R1, R6|49-70
18936|code|MOV             R2, R5|42-70
18938|code|MOV             R3, R4|35-70
18940|code|BL              sub_7DAC|3-240-214-249
18944|code|SUBS            R7, R0, #0|7-30
18946|code|BLE             loc_4A32|22-221
18948|code|MOVS            R0, #6; size|6-32
18950|code|BLX             malloc|255-247-64-232
18954|code|MOV             R3, R0|3-70
18956|code|CBZ             R0, loc_4A1A|40-177
18958|code|LDR             R2, =(aFail - 0x4A14); "fail\n"|24-74
18960|code|ADD             R2, PC; "fail\n"|122-68
18962|code|LDM.W           R2, {R0,R1}; "fail\n"|146-232-3-0
18966|code|STR             R0, [R3]|24-96
18968|code|STRH            R1, [R3,#4]|153-128
18970|code|STR             R3, [R6]|51-96
18972|code|MOV             R0, R3; s|24-70
18974|code|BLX             strlen|254-247-236-238
18978|code|MOVS            R7, #1|1-39
18980|code|ADD             R0, R7|56-68
18982|code|STR             R0, [R5]|40-96
18984|code|MOV             R0, R4|32-70
18986|code|BLX             cleanup_lock|254-247-94-237
18990|code|MOV             R0, R7|56-70
18992|code|POP             {R3-R7,PC}|248-189
18994|code|BNE             loc_4A28|249-209
18996|code|LDR             R3, [R5]|43-104
18998|code|CMP             R3, #0|0-43
19000|code|BNE             loc_4A28|246-209
19002|code|MOVS            R0, #4; size|4-32
19004|code|BLX             malloc|255-247-36-232
19008|code|CBZ             R0, loc_4A4C|32-177
19010|code|MOV             R3, #0xA6B6F|70-246-111-51-192-242-10-3
19018|code|STR             R3, [R0]|3-96
19020|code|STR             R0, [R6]|48-96
19022|code|BLX             strlen|254-247-212-238
19026|code|ADDS            R0, #1|1-48
19028|code|STR             R0, [R5]|40-96
19030|code|MOV             R0, R4|32-70
19032|code|BLX             cleanup_lock|254-247-70-237
19036|code|MOV             R0, R7|56-70
19038|code|POP             {R3-R7,PC}|248-189
19040|code|MOV             R5, R0|5-70
19042|code|MOV             R0, R4|32-70
19044|code|BLX             cleanup_lock|254-247-64-237
19048|code|MOV             R0, R5|40-70
19050|code|BLX             _Unwind_Resume|255-247-28-233
19054|data|ALIGN 0x10|0-191
19056|data|DCD aFail - 0x4A14; "fail\n"|44-79-0-0
19060|code|LDR.W           R2, [R0,#0x5B8]|208-248-184-37
19064|code|PUSH.W          {R4-R8,LR}|45-233-240-65
19068|code|SUB             SP, SP, #8|130-176
19070|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x4A84)|19-77
19072|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
19074|code|CBZ             R2, loc_4AB8|202-177
19076|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|18-76
19078|code|ADD.W           R7, R0, #0x100|0-245-128-119
19082|code|MOV             R6, R0|6-70
19084|code|LDR.W           R0, [R2,#0x16C]|210-248-108-1
19088|code|LDR             R2, =(aCheckerFailedP - 0x4AA0); "checker failed path %s in map %s\n"|16-74
19090|code|MOV             R8, R1|136-70
19092|code|LDR             R4, [R5,R4]; logsink|44-89
19094|code|MOVS            R1, #2|2-33
19096|code|MOV             R3, R7|59-70
19098|code|STR             R0, [SP,#0x20+var_20]|0-144
19100|code|ADD             R2, PC; "checker failed path %s in map %s\n"|122-68
19102|code|LDR             R0, [R4]|32-104
19104|code|BLX             dlog|254-247-174-236
19108|code|LDR.W           R3, [R6,#0x5B8]|214-248-184-53
19112|code|MOV             R1, R7|57-70
19114|code|LDR.W           R0, [R3,#0x16C]|211-248-108-1
19118|code|BLX             dm_fail_path|254-247-32-239
19122|code|CMP.W           R8, #0|184-241-0-15
19126|code|BNE             loc_4ABE|2-209
19128|code|ADD             SP, SP, #8|2-176
19130|code|POP.W           {R4-R8,PC}|189-232-240-129
19134|code|LDR.W           R0, [R6,#0x5B8]|214-248-184-5
19138|code|ADD             SP, SP, #8|2-176
19140|code|POP.W           {R4-R8,LR}|189-232-240-65
19144|code|B.W             j_update_queue_mode_del_path|254-247-170-191
19148|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4A84|8-113-1-0
19152|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
19156|data|DCD aCheckerFailedP - 0x4AA0; "checker failed path %s in map %s\n"|168-78-0-0
19160|code|LDR.W           R2, [R0,#0x5B8]|208-248-184-37
19164|code|PUSH.W          {R4-R8,LR}|45-233-240-65
19168|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x4AE6)|20-79
19170|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
19172|code|CBZ             R2, locret_4B0E|154-177
19174|code|ADD.W           R5, R0, #0x100|0-245-128-117
19178|code|MOV             R6, R1|14-70
19180|code|MOV             R4, R0|4-70
19182|code|LDR.W           R0, [R2,#0x16C]|210-248-108-1
19186|code|MOV             R1, R5|41-70
19188|code|BLX             dm_reinstate_path|254-247-188-239
19192|code|CBNZ            R0, loc_4B12|88-185
19194|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|15-72
19196|code|MOV             R3, R5|43-70
19198|code|LDR             R2, =(aSReinstated - 0x4B08); "%s: reinstated\n"|15-74
19200|code|MOVS            R1, #2|2-33
19202|code|LDR             R0, [R7,R0]; logsink|56-88
19204|code|ADD             R2, PC; "%s: reinstated\n"|122-68
19206|code|LDR             R0, [R0]|0-104
19208|code|BLX             dlog|254-247-122-236
19212|code|CBNZ            R6, loc_4B28|102-185
19214|code|POP.W           {R4-R8,PC}|189-232-240-129
19218|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|9-72
19220|code|MOV             R3, R5|43-70
19222|code|LDR             R2, =(aSReinstateFail - 0x4B20); "%s: reinstate failed\n"|10-74
19224|code|MOVS            R1, #0|0-33
19226|code|LDR             R0, [R7,R0]; logsink|56-88
19228|code|ADD             R2, PC; "%s: reinstate failed\n"|122-68
19230|code|POP.W           {R4-R8,LR}|189-232-240-65
19234|code|LDR             R0, [R0]|0-104
19236|code|B.W             j_dlog|254-247-106-188
19240|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
19244|code|POP.W           {R4-R8,LR}|189-232-240-65
19248|code|B.W             j_update_queue_mode_add_path|254-247-220-189
19252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4AE6|166-112-1-0
19256|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
19260|data|DCD aSReinstated - 0x4B08; "%s: reinstated\n"|124-78-0-0
19264|data|DCD aSReinstateFail - 0x4B20; "%s: reinstate failed\n"|76-78-0-0
19268|code|LDR.W           R3, [R0,#0x18C]|208-248-140-49
19272|code|PUSH            {R4,R5,LR}|48-181
19274|code|MOV             R4, R0|4-70
19276|code|SUB             SP, SP, #0xC|131-176
19278|code|ADDS            R3, #1|1-51
19280|code|LDR.W           R1, [R4,#0x10C]|212-248-12-17
19284|code|LDR.W           R0, [R0,#0x16C]|208-248-108-1
19288|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x4B68)|10-77
19290|code|STR.W           R3, [R4,#0x18C]|196-248-140-49
19294|code|BLX             dm_switchgroup|254-247-0-239
19298|code|LDR             R2, =(logsink_ptr - 0x1BB8C)|9-74
19300|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
19302|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
19306|code|LDR.W           R4, [R4,#0x10C]|212-248-12-65
19310|code|MOVS            R1, #2|2-33
19312|code|LDR             R0, [R5,R2]; logsink|168-88
19314|code|LDR             R2, =(aSSwitchToPathG - 0x4B7A); "%s: switch to path group #%i\n"|6-74
19316|code|STR             R4, [SP,#0x18+var_18]|0-148
19318|code|ADD             R2, PC; "%s: switch to path group #%i\n"|122-68
19320|code|LDR             R0, [R0]|0-104
19322|code|BLX             dlog|254-247-66-236
19326|code|ADD             SP, SP, #0xC|3-176
19328|code|POP             {R4,R5,PC}|48-189
19330|data|ALIGN 4|0-191
19332|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4B68|36-112-1-0
19336|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
19340|data|DCD aSSwitchToPathG - 0x4B7A; "%s: switch to path group #%i\n"|26-78-0-0
19344|code|PUSH            {R4,R5,LR}|48-181
19346|code|SUB             SP, SP, #0x11C|199-176
19348|code|MOV             R5, R0|5-70
19350|code|ADD             R0, SP, #0x128+set; set|1-168
19352|code|STR             R1, [SP,#0x128+var_128]|0-145
19354|code|BLX             sigemptyset|254-247-30-236
19358|code|MOV             R0, R5; sig|40-70
19360|code|MOV             R1, SP; act|105-70
19362|code|ADD             R2, SP, #0x128+var_9C; oact|35-170
19364|code|MOVS            R3, #0|0-35
19366|code|STR             R3, [SP,#0x128+var_A4]|33-147
19368|code|BLX             sigaction|254-247-134-239
19372|code|CMP             R0, #0|0-40
19374|code|ITE GE|172-191
19376|code|LDRGE           R0, [SP,#0x128+var_9C]|35-152
19378|code|MOVLT.W         R0, #0xFFFFFFFF|79-240-255-48
19382|code|ADD             SP, SP, #0x11C|71-176
19384|code|POP             {R4,R5,PC}|48-189
19386|data|ALIGN 4|0-191
19388|code|PUSH.W          {R4-R11,LR}|45-233-240-79
19392|code|MOV             R11, R0|131-70
19394|code|SUB             SP, SP, #0x1C|135-176
19396|code|MOVS            R0, #0|0-32
19398|code|LDR.W           R10, [R11,#0x5B8]|219-248-184-165
19402|code|BLX             mpath_alloc_prin_response|254-247-188-237
19406|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x4BD4)|130-76
19408|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
19410|code|MOV             R8, R0|128-70
19412|code|CMP             R0, #0|0-40
19414|code|BEQ.W           loc_4DA8|0-240-231-128
19418|code|MOVS            R1, #0|0-33
19420|code|MOV             R0, R11|88-70
19422|code|MOV             R3, R1|11-70
19424|code|MOV             R2, R8|66-70
19426|code|BLX             prin_do_scsi_ioctl|254-247-58-238
19430|code|CMP             R0, #0|0-40
19432|code|BNE.W           loc_4D46|64-240-173-128
19436|code|LDR             R2, =(logsink_ptr - 0x1BB8C)|123-74
19438|code|MOVS            R1, #3|3-33
19440|code|LDR.W           R0, [R8,#4]|216-248-4-0
19444|code|LDR.W           R3, [R8]|216-248-0-48
19448|code|LDR.W           R9, [R4,R2]; logsink|84-248-2-144
19452|code|LDR             R2, =(aEventPrDAddlen - 0x4C04); " event pr=%d addlen=%d\n"|120-74
19454|code|STR             R0, [SP,#0x40+var_40]|0-144
19456|code|ADD             R2, PC; " event pr=%d addlen=%d\n"|122-68
19458|code|LDR.W           R0, [R9]|217-248-0-0
19462|code|BLX             dlog|254-247-252-235
19466|code|LDR.W           R3, [R8,#4]|216-248-4-48
19470|code|CMP             R3, #0|0-43
19472|code|BEQ.W           loc_4D8A|0-240-187-128
19476|code|LDR.W           R1, [R10,#0x1A4]|218-248-164-17
19480|code|MOVS            R2, #1|1-34
19482|code|MOVS            R4, #0|0-36
19484|code|MOVS            R5, #0|0-37
19486|code|ADDS            R3, R1, R2|139-24
19488|code|MVN.W           LR, R1|111-234-1-14
19492|code|B               loc_4C2A|1-224
19494|code|ADDS            R2, #1|1-50
19496|code|ADDS            R3, #1|1-51
19498|code|CMN.W           LR, R3|30-235-3-15
19502|code|BEQ.W           loc_4D9C|0-240-181-128
19506|code|LSLS            R7, R5, #8|47-2
19508|code|LDRB.W          R0, [R3,#-1]|19-248-1-12
19512|code|CMP             R2, #8|8-42
19514|code|ORR.W           R7, R7, R4,LSR#24|71-234-20-103
19518|code|MOV.W           R6, R4,LSL#8|79-234-4-38
19522|code|MOV.W           R1, #0|79-240-0-1
19526|code|ORR.W           R4, R0, R6|64-234-6-4
19530|code|ORR.W           R5, R1, R7|65-234-7-5
19534|code|BNE             loc_4C26|234-209
19536|code|LDR             R2, =(aMultipathReser - 0x4C5C); "Multipath  reservation_key: 0x%llx \n"|100-74
19538|code|MOVS            R1, #2|2-33
19540|code|LDR.W           R0, [R9]|217-248-0-0
19544|code|ADD             R2, PC; "Multipath  reservation_key: 0x%llx \n"|122-68
19546|code|STRD.W          R4, R5, [SP,#0x40+var_40]|205-233-0-69
19550|code|BLX             dlog|254-247-208-235
19554|code|LDR.W           R3, [R8,#4]|216-248-4-48
19558|code|LSRS            R3, R3, #3|219-8
19560|code|BEQ             loc_4D6A|127-208
19562|code|LDR             R3, =(aPrInReadkeysDR - 0x4C7A); "PR IN READKEYS[%d]  reservation key:\n"|95-75
19564|code|ADD.W           R6, R8, #8|8-241-8-6
19568|code|STRD.W          R4, R5, [SP,#0x40+c]|205-233-4-69
19572|code|MOVS            R7, #0|0-39
19574|code|ADD             R3, PC; "PR IN READKEYS[%d]  reservation key:\n"|123-68
19576|code|MOV             R4, R8|68-70
19578|code|STR.W           R9, [SP,#0x40+var_34]|205-248-12-144
19582|code|MOV             R8, R3|152-70
19584|code|B               loc_4C8A|3-224
19586|code|LDR             R3, [R4,#4]|99-104
19588|code|CMP.W           R7, R3,LSR#3|183-235-211-15
19592|code|BCS             loc_4D68|110-210
19594|code|MOV             R3, R7|59-70
19596|code|LDR.W           R0, [R9]|217-248-0-0
19600|code|MOVS            R1, #2|2-33
19602|code|MOV             R2, R8|66-70
19604|code|BLX             dlog|254-247-180-235
19608|code|MOV             R0, R6|48-70
19610|code|MOVS            R1, #8|8-33
19612|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
19616|code|BLX             dumpHex|255-247-66-232
19620|code|MOV             R1, R6; s2|49-70
19622|code|LDR.W           R0, [R10,#0x1A4]; s1|218-248-164-1
19626|code|MOVS            R2, #8; n|8-34
19628|code|BLX             memcmp|254-247-210-235
19632|code|ADDS            R7, #1|1-55
19634|code|ADDS            R6, #8|8-54
19636|code|CMP             R0, #0|0-40
19638|code|BNE             loc_4C82|228-209
19640|code|LDR             R3, [SP,#0x40+var_34]|3-155
19642|code|MOVS            R1, #2|2-33
19644|code|LDR             R2, =(aSPrKeyFoundInP - 0x4CC8); "%s: pr key found in prin readkeys respo"...|75-74
19646|code|MOV             R8, R4|160-70
19648|code|LDRD.W          R4, R5, [SP,#0x40+c]|221-233-4-69
19652|code|ADD             R2, PC; "%s: pr key found in prin readkeys respo"...|122-68
19654|code|STR             R0, [SP,#0x40+c]|4-144
19656|code|LDR             R0, [R3]|24-104
19658|code|LDR.W           R3, [R10,#0x16C]|218-248-108-49
19662|code|BLX             dlog|254-247-152-235
19666|code|MOVW            R0, #0x201C; size|66-242-28-0
19670|code|BLX             malloc|254-247-216-238
19674|code|LDR.W           R12, [SP,#0x40+c]|221-248-16-192
19678|code|MOVW            R2, #0x201C; n|66-242-28-2
19682|code|MOV             R1, R12; c|97-70
19684|code|MOV             R6, R0|6-70
19686|code|BLX             memset|254-247-108-236
19690|code|ADD.W           R2, R6, #0x10|6-241-16-2
19694|code|ADD.W           R0, R6, #8|6-241-8-0
19698|code|LSRS            R3, R4, #8|35-10
19700|code|STRB.W          R4, [R2,#-1]!|2-248-1-77
19704|code|ORR.W           R3, R3, R5,LSL#24|67-234-5-99
19708|code|LSRS            R1, R5, #8|41-10
19710|code|CMP             R2, R0|130-66
19712|code|MOV             R4, R3|28-70
19714|code|MOV             R5, R1|13-70
19716|code|BNE             loc_4CF2|245-209
19718|code|LDR.W           R4, [R11,#0x5B8]|219-248-184-69
19722|code|MOVW            R7, #0x2018|66-242-24-7
19726|code|LDR             R2, =(aDeviceSS - 0x4D1C); "device %s:%s\n"|56-74
19728|code|MOVS            R5, #0|0-37
19730|code|LDR.W           R0, [R9]|217-248-0-0
19734|code|MOVS            R1, #3|3-33
19736|code|ADD             R2, PC; "device %s:%s\n"|122-68
19738|code|MOV             R3, R11|91-70
19740|code|STR             R4, [SP,#0x40+var_40]|0-148
19742|code|STR             R5, [R6,R7]|245-81
19744|code|BLX             dlog|254-247-110-235
19748|code|STR             R5, [SP,#0x40+var_3C]|1-149
19750|code|MOV             R2, R5|42-70
19752|code|STR             R6, [SP,#0x40+var_40]|0-150
19754|code|MOV             R3, R5|43-70
19756|code|MOV             R0, R11|88-70
19758|code|MOVS            R1, #6|6-33
19760|code|BLX             prout_do_scsi_ioctl|254-247-100-238
19764|code|CMP             R0, #0|0-40
19766|code|BNE             loc_4DC2|68-209
19768|code|MOVS            R3, #1|1-35
19770|code|MOV             R0, R6; ptr|48-70
19772|code|STRB.W          R3, [R10,#0x1A8]|138-248-168-49
19776|code|BLX             free|254-247-182-236
19780|code|B               loc_4D5A|9-224
19782|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|37-77
19784|code|MOV             R3, R11|91-70
19786|code|LDR             R2, =(aSPrInReadKeysS - 0x4D54); "%s : pr in read keys service action fai"...|42-74
19788|code|MOVS            R1, #0|0-33
19790|code|LDR             R4, [R4,R5]; logsink|100-89
19792|code|ADD             R2, PC; "%s : pr in read keys service action fai"...|122-68
19794|code|STR             R0, [SP,#0x40+var_40]|0-144
19796|code|LDR             R0, [R4]|32-104
19798|code|BLX             dlog|254-247-84-235
19802|code|MOV             R0, R8; ptr|64-70
19804|code|BLX             free|254-247-168-236
19808|code|MOVS            R0, #0|0-32
19810|code|ADD             SP, SP, #0x1C|7-176
19812|code|POP.W           {R4-R11,PC}|189-232-240-143
19816|code|MOV             R8, R4|160-70
19818|code|LDR             R2, =(aSEitherDeviceN - 0x4D78); "%s: Either device not registered or \n"|35-74
19820|code|MOV             R3, R11|91-70
19822|code|LDR.W           R0, [R9]|217-248-0-0
19826|code|MOVS            R1, #0|0-33
19828|code|ADD             R2, PC; "%s: Either device not registered or \n"|122-68
19830|code|BLX             dlog|254-247-68-235
19834|code|LDR             R2, =(aHostIsNotAutho - 0x4D86); "host is not authorised for registration"...|32-74
19836|code|LDR.W           R0, [R9]|217-248-0-0
19840|code|MOVS            R1, #0|0-33
19842|code|ADD             R2, PC; "host is not authorised for registration"...|122-68
19844|code|BLX             dlog|254-247-60-235
19848|code|B               loc_4D5A|231-231
19850|code|LDR             R2, =(aSNoKeyFoundDev - 0x4D98); "%s: No key found. Device may not be reg"...|29-74
19852|code|MOV             R3, R11|91-70
19854|code|LDR.W           R0, [R9]|217-248-0-0
19858|code|MOVS            R1, #1|1-33
19860|code|ADD             R2, PC; "%s: No key found. Device may not be reg"...|122-68
19862|code|BLX             dlog|254-247-52-235
19866|code|B               loc_4D5A|222-231
19868|code|LDRB.W          R0, [R3,#-1]|19-248-1-12
19872|code|MOVS            R1, #0|0-33
19874|code|ORRS            R5, R1|13-67
19876|code|ORRS            R4, R0|4-67
19878|code|B               loc_4C26|62-231
19880|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|12-72
19882|code|MOV             R1, R8|65-70
19884|code|LDR             R2, =(aSAllocFailedFo - 0x4DB6); "%s Alloc failed for prin response\n"|21-74
19886|code|MOV             R3, R11|91-70
19888|code|LDR             R0, [R4,R0]; logsink|32-88
19890|code|ADD             R2, PC; "%s Alloc failed for prin response\n"|122-68
19892|code|LDR             R0, [R0]|0-104
19894|code|BLX             dlog|254-247-36-235
19898|code|MOVS            R0, #0|0-32
19900|code|ADD             SP, SP, #0x1C|7-176
19902|code|POP.W           {R4-R11,PC}|189-232-240-143
19906|code|LDR.W           R4, [R9]|217-248-0-64
19910|code|MOV             R1, R5|41-70
19912|code|LDR             R2, =(aSReservationRe - 0x4DD2); "%s: Reservation registration failed. Er"...|15-74
19914|code|MOV             R3, R11|91-70
19916|code|STR             R0, [SP,#0x40+var_40]|0-144
19918|code|ADD             R2, PC; "%s: Reservation registration failed. Er"...|122-68
19920|code|MOV             R0, R4|32-70
19922|code|BLX             dlog|254-247-22-235
19926|code|B               loc_4D38|175-231
19928|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4BD4|184-111-1-0
19932|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
19936|data|DCD aEventPrDAddlen - 0x4C04; " event pr=%d addlen=%d\n"|12-78-0-0
19940|data|DCD aMultipathReser - 0x4C5C; "Multipath  reservation_key: 0x%llx \n"|0-78-0-0
19944|data|DCD aPrInReadkeysDR - 0x4C7A; "PR IN READKEYS[%d]  reservation key:\n"|10-78-0-0
19948|data|DCD aSPrKeyFoundInP - 0x4CC8; "%s: pr key found in prin readkeys respo"...|228-77-0-0
19952|data|DCD aDeviceSS - 0x4D1C; "device %s:%s\n"|188-77-0-0
19956|data|DCD aSPrInReadKeysS - 0x4D54; "%s : pr in read keys service action fai"...|132-76-0-0
19960|data|DCD aSEitherDeviceN - 0x4D78; "%s: Either device not registered or \n"|160-77-0-0
19964|data|DCD aHostIsNotAutho - 0x4D86; "host is not authorised for registration"...|186-77-0-0
19968|data|DCD aSNoKeyFoundDev - 0x4D98; "%s: No key found. Device may not be reg"...|144-76-0-0
19972|data|DCD aSAllocFailedFo - 0x4DB6; "%s Alloc failed for prin response\n"|254-75-0-0
19976|data|DCD aSReservationRe - 0x4DD2; "%s: Reservation registration failed. Er"...|22-77-0-0
19980|code|PUSH            {R3-R7,LR}|248-181
19982|code|MOV             R4, R0|4-70
19984|code|MOV             R7, R1|15-70
19986|code|LDR.W           R0, [R0,#0x16C]|208-248-108-1
19990|code|MOVS            R1, #1|1-33
19992|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x4E22)|20-78
19994|code|BLX             _dm_flush_map|254-247-246-237
19998|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
20000|code|MOV             R5, R0|5-70
20002|code|CBNZ            R0, loc_4E52|176-185
20004|code|BLX             dm_lib_release|254-247-10-235
20008|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|17-72
20010|code|LDR             R2, =(aSMapFlushed - 0x4E38); "%s: map flushed\n"|18-74
20012|code|MOVS            R1, #2|2-33
20014|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
20018|code|LDR             R0, [R6,R0]; logsink|48-88
20020|code|ADD             R2, PC; "%s: map flushed\n"|122-68
20022|code|LDR             R0, [R0]|0-104
20024|code|BLX             dlog|254-247-226-234
20028|code|LDR             R0, [R7,#8]|184-104
20030|code|MOV             R1, R4|33-70
20032|code|BLX             orphan_paths|254-247-146-236
20036|code|MOV             R0, R4|32-70
20038|code|MOV             R1, R7|57-70
20040|code|MOVS            R2, #1|1-34
20042|code|BLX             remove_map_and_stop_waiter|254-247-44-236
20046|code|MOV             R0, R5|40-70
20048|code|POP             {R3-R7,PC}|248-189
20050|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|7-72
20052|code|MOVS            R1, #0|0-33
20054|code|LDR             R2, =(aSCanTFlush - 0x4E64); "%s: can't flush\n"|8-74
20056|code|MOVS            R5, #1|1-37
20058|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
20062|code|LDR             R0, [R6,R0]; logsink|48-88
20064|code|ADD             R2, PC; "%s: can't flush\n"|122-68
20066|code|LDR             R0, [R0]|0-104
20068|code|BLX             dlog|254-247-204-234
20072|code|MOV             R0, R5|40-70
20074|code|POP             {R3-R7,PC}|248-189
20076|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4E22|106-109-1-0
20080|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
20084|data|DCD aSMapFlushed - 0x4E38; "%s: map flushed\n"|80-77-0-0
20088|data|DCD aSCanTFlush - 0x4E64; "%s: can't flush\n"|16-77-0-0
20092|code|PUSH            {R4,LR}|16-181
20094|code|MOV             R1, R0|1-70
20096|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x4E88)|8-76
20098|code|LDR             R3, =(uev_trigger_ptr - 0x1BB8C)|9-75
20100|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
20102|code|LDR             R0, [R4,R3]; uev_trigger|224-88
20104|code|BLX             uevent_dispatch|254-247-42-239
20108|code|CBZ             R0, loc_4E9E|56-177
20110|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|7-75
20112|code|MOVS            R1, #0|0-33
20114|code|LDR             R2, =(aErrorStartingU - 0x4E9A); "error starting uevent dispatcher\n"|7-74
20116|code|LDR             R3, [R4,R3]; logsink|227-88
20118|code|ADD             R2, PC; "error starting uevent dispatcher\n"|122-68
20120|code|LDR             R0, [R3]|24-104
20122|code|BLX             dlog|254-247-178-234
20126|code|MOVS            R0, #0|0-32
20128|code|POP             {R4,PC}|16-189
20130|data|ALIGN 4|0-191
20132|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4E88|4-109-1-0
20136|data|DCD uev_trigger_ptr - 0x1BB8C|84-4-0-0
20140|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
20144|data|DCD aErrorStartingU - 0x4E9A; "error starting uevent dispatcher\n"|2-77-0-0
20148|code|PUSH            {R4-R6,LR}|112-181
20150|code|MOV             R5, R0|5-70
20152|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x4EBE)|141-76
20154|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
20156|code|BL              sub_7E68|2-240-212-255
20160|code|CMP             R0, #0|0-40
20162|code|BNE.W           loc_50EC|64-240-19-129
20166|code|LDR             R3, =(cli_list_paths_ptr - 0x1BB8C)|139-75
20168|code|MOVW            R0, #0x4001|68-242-1-0
20172|code|LDR             R1, [R4,R3]; cli_list_paths|225-88
20174|code|BL              sub_7878|2-240-211-252
20178|code|LDR             R3, =(cli_list_paths_fmt_ptr - 0x1BB8C)|137-75
20180|code|MOV             R0, #0x8004001|68-242-1-0-192-246-0-0
20188|code|LDR             R1, [R4,R3]; cli_list_paths_fmt|225-88
20190|code|BL              sub_7878|2-240-203-252
20194|code|LDR             R3, =(cli_list_maps_ptr - 0x1BB8C)|134-75
20196|code|MOVW            R0, #0x8001|72-242-1-0
20200|code|LDR             R1, [R4,R3]; cli_list_maps|225-88
20202|code|BL              sub_7878|2-240-197-252
20206|code|LDR             R3, =(cli_list_status_ptr - 0x1BB8C)|132-75
20208|code|MOVS            R0, #0x200001|1-32-192-242-32-0
20214|code|LDR             R1, [R4,R3]; cli_list_status|225-88
20216|code|BL              sub_7878|2-240-190-252
20220|code|LDR             R3, =(cli_list_daemon_ptr - 0x1BB8C)|129-75
20222|code|MOVS            R0, #0x100001|1-32-192-242-16-0
20228|code|LDR             R1, [R4,R3]; cli_list_daemon|225-88
20230|code|BL              sub_7878|2-240-183-252
20234|code|LDR             R3, =(cli_list_maps_status_ptr - 0x1BB8C)|127-75
20236|code|MOV             R0, #0x208001|72-242-1-0-192-242-32-0
20244|code|LDR             R1, [R4,R3]; cli_list_maps_status|225-88
20246|code|BL              sub_7878|2-240-175-252
20250|code|LDR             R3, =(cli_list_maps_stats_ptr - 0x1BB8C)|124-75
20252|code|MOV             R0, #0x408001|72-242-1-0-192-242-64-0
20260|code|LDR             R1, [R4,R3]; cli_list_maps_stats|225-88
20262|code|BL              sub_7878|2-240-167-252
20266|code|LDR             R3, =(cli_list_maps_fmt_ptr - 0x1BB8C)|121-75
20268|code|MOV             R0, #0x8008001|72-242-1-0-192-246-0-0
20276|code|LDR             R1, [R4,R3]; cli_list_maps_fmt|225-88
20278|code|BL              sub_7878|2-240-159-252
20282|code|LDR             R3, =(cli_list_maps_topology_ptr - 0x1BB8C)|118-75
20284|code|MOV             R0, #0x808001|72-242-1-0-192-242-128-0
20292|code|LDR             R6, [R4,R3]; cli_list_maps_topology|230-88
20294|code|MOV             R1, R6|49-70
20296|code|BL              sub_7878|2-240-150-252
20300|code|MOVS            R0, #1|1-32
20302|code|MOV             R1, R6|49-70
20304|code|MOVT.W          R0, #0x80|192-242-128-0
20308|code|BL              sub_7878|2-240-144-252
20312|code|LDR             R3, =(cli_list_map_topology_ptr - 0x1BB8C)|111-75
20314|code|MOVS            R0, #0x820001|1-32-192-242-130-0
20320|code|LDR             R1, [R4,R3]; cli_list_map_topology|225-88
20322|code|BL              sub_7878|2-240-137-252
20326|code|LDR             R3, =(cli_list_config_ptr - 0x1BB8C)|109-75
20328|code|MOVS            R0, #0x1000001|1-32-192-242-0-16
20334|code|LDR             R1, [R4,R3]; cli_list_config|225-88
20336|code|BL              sub_7878|2-240-130-252
20340|code|LDR             R3, =(cli_list_blacklist_ptr - 0x1BB8C)|106-75
20342|code|MOVS            R0, #0x2000001|1-32-192-242-0-32
20348|code|LDR             R1, [R4,R3]; cli_list_blacklist|225-88
20350|code|BL              sub_7878|2-240-123-252
20354|code|LDR             R3, =(cli_list_devices_ptr - 0x1BB8C)|104-75
20356|code|MOVS            R0, #0x4000001|1-32-192-242-0-64
20362|code|LDR             R1, [R4,R3]; cli_list_devices|225-88
20364|code|BL              sub_7878|2-240-116-252
20368|code|LDR             R3, =(cli_list_wildcards_ptr - 0x1BB8C)|101-75
20370|code|MOVS            R0, #0x10000001|1-32-193-242-0-0
20376|code|LDR             R1, [R4,R3]; cli_list_wildcards|225-88
20378|code|BL              sub_7878|2-240-109-252
20382|code|LDR             R3, =(cli_add_path_ptr - 0x1BB8C)|99-75
20384|code|MOVS            R0, #0x10002|2-32-192-242-1-0
20390|code|LDR             R1, [R4,R3]; cli_add_path|225-88
20392|code|BL              sub_7878|2-240-102-252
20396|code|LDR             R3, =(cli_del_path_ptr - 0x1BB8C)|96-75
20398|code|MOVS            R0, #0x10004|4-32-192-242-1-0
20404|code|LDR             R1, [R4,R3]; cli_del_path|225-88
20406|code|BL              sub_7878|2-240-95-252
20410|code|LDR             R3, =(cli_add_map_ptr - 0x1BB8C)|94-75
20412|code|MOV.W           R0, #0x20002|79-240-2-16
20416|code|LDR             R1, [R4,R3]; cli_add_map|225-88
20418|code|BL              sub_7878|2-240-89-252
20422|code|LDR             R3, =(cli_del_map_ptr - 0x1BB8C)|92-75
20424|code|MOVS            R0, #0x20004|4-32-192-242-2-0
20430|code|LDR             R1, [R4,R3]; cli_del_map|225-88
20432|code|BL              sub_7878|2-240-82-252
20436|code|LDR             R3, =(cli_switch_group_ptr - 0x1BB8C)|89-75
20438|code|MOVS            R0, #0x60008|8-32-192-242-6-0
20444|code|LDR             R1, [R4,R3]; cli_switch_group|225-88
20446|code|BL              sub_7878|2-240-75-252
20450|code|LDR             R3, =(cli_reconfigure_ptr - 0x1BB8C)|87-75
20452|code|MOV.W           R0, #0x80000|79-244-0-32
20456|code|LDR             R1, [R4,R3]; cli_reconfigure|225-88
20458|code|BL              sub_7878|2-240-69-252
20462|code|LDR             R3, =(cli_suspend_ptr - 0x1BB8C)|85-75
20464|code|MOVS            R0, #0x20010|16-32-192-242-2-0
20470|code|LDR             R1, [R4,R3]; cli_suspend|225-88
20472|code|BL              sub_7878|2-240-62-252
20476|code|LDR             R3, =(cli_resume_ptr - 0x1BB8C)|82-75
20478|code|MOVS            R0, #0x20020|32-32-192-242-2-0
20484|code|LDR             R1, [R4,R3]; cli_resume|225-88
20486|code|BL              sub_7878|2-240-55-252
20490|code|LDR             R3, =(cli_resize_ptr - 0x1BB8C)|80-75
20492|code|MOV             R0, #0x20100|79-244-128-112-192-242-2-0
20500|code|LDR             R1, [R4,R3]; cli_resize|225-88
20502|code|BL              sub_7878|2-240-47-252
20506|code|LDR             R3, =(cli_reload_ptr - 0x1BB8C)|77-75
20508|code|MOV.W           R0, #0x20400|79-244-1-48
20512|code|LDR             R1, [R4,R3]; cli_reload|225-88
20514|code|BL              sub_7878|2-240-41-252
20518|code|LDR             R3, =(cli_reassign_ptr - 0x1BB8C)|75-75
20520|code|MOV             R0, #0x20200|79-244-0-112-192-242-2-0
20528|code|LDR             R1, [R4,R3]; cli_reassign|225-88
20530|code|BL              sub_7878|2-240-33-252
20534|code|LDR             R3, =(cli_reinstate_ptr - 0x1BB8C)|72-75
20536|code|MOVS            R0, #0x10040|64-32-192-242-1-0
20542|code|LDR             R1, [R4,R3]; cli_reinstate|225-88
20544|code|BL              sub_7878|2-240-26-252
20548|code|LDR             R3, =(cli_fail_ptr - 0x1BB8C)|69-75
20550|code|MOVS            R0, #0x10080|128-32-192-242-1-0
20556|code|LDR             R1, [R4,R3]; cli_fail|225-88
20558|code|BL              sub_7878|2-240-19-252
20562|code|LDR             R3, =(cli_disable_queueing_ptr - 0x1BB8C)|67-75
20564|code|MOV.W           R0, #0x21000|79-244-4-48
20568|code|LDR             R1, [R4,R3]; cli_disable_queueing|225-88
20570|code|BL              sub_7878|2-240-13-252
20574|code|LDR             R3, =(cli_restore_queueing_ptr - 0x1BB8C)|65-75
20576|code|MOV.W           R0, #0x22000|79-244-8-48
20580|code|LDR             R1, [R4,R3]; cli_restore_queueing|225-88
20582|code|BL              sub_7878|2-240-7-252
20586|code|LDR             R3, =(cli_disable_all_queueing_ptr - 0x1BB8C)|63-75
20588|code|MOV.W           R0, #0x9000|79-244-16-64
20592|code|LDR             R1, [R4,R3]; cli_disable_all_queueing|225-88
20594|code|BL              sub_7878|2-240-1-252
20598|code|LDR             R3, =(cli_restore_all_queueing_ptr - 0x1BB8C)|61-75
20600|code|MOV.W           R0, #0xA000|79-244-32-64
20604|code|LDR             R1, [R4,R3]; cli_restore_all_queueing|225-88
20606|code|BL              sub_7878|2-240-251-251
20610|code|LDR             R3, =(cli_quit_ptr - 0x1BB8C)|59-75
20612|code|MOV.W           R0, #0x20000000|79-240-0-80
20616|code|LDR             R1, [R4,R3]; cli_quit|225-88
20618|code|BL              sub_7878|2-240-245-251
20622|code|LDR             R3, =(cli_shutdown_ptr - 0x1BB8C)|57-75
20624|code|MOV.W           R0, #0x40000000|79-240-128-64
20628|code|LDR             R1, [R4,R3]; cli_shutdown|225-88
20630|code|BL              sub_7878|2-240-239-251
20634|code|LDR             R3, =(cli_getprstatus_ptr - 0x1BB8C)|55-75
20636|code|MOVS            R0, #0x80020000|0-32-200-242-2-0
20642|code|LDR             R1, [R4,R3]; cli_getprstatus|225-88
20644|code|BL              sub_7878|2-240-232-251
20648|code|LDR             R3, =(cli_setprstatus_ptr - 0x1BB8C)|52-75
20650|code|MOV.W           R0, #0x20000|79-244-0-48
20654|code|LDR             R1, [R4,R3]; cli_setprstatus|225-88
20656|code|BL              sub_7878|2-240-226-251
20660|code|LDR             R3, =(cli_unsetprstatus_ptr - 0x1BB8C)|50-75
20662|code|MOV.W           R0, #0x20000|79-244-0-48
20666|code|LDR             R1, [R4,R3]; cli_unsetprstatus|225-88
20668|code|BL              sub_7878|2-240-220-251
20672|code|LDR             R3, =(cli_force_no_daemon_q_ptr - 0x1BB8C)|48-75
20674|code|MOV             R0, #0x100800|79-244-0-96-192-242-16-0
20682|code|LDR             R1, [R4,R3]; cli_force_no_daemon_q|225-88
20684|code|BL              sub_7878|2-240-212-251
20688|code|LDR             R3, =(cli_restore_no_daemon_q_ptr - 0x1BB8C)|45-75
20690|code|MOV.W           R0, #0x102000|79-244-129-16
20694|code|LDR             R1, [R4,R3]; cli_restore_no_daemon_q|225-88
20696|code|BL              sub_7878|2-240-206-251
20700|code|MOVS            R0, #0x3F ; '?'; mask|63-32
20702|code|BLX             umask|254-247-86-235
20706|code|LDR             R3, =(uxsock_trigger_ptr - 0x1BB8C)|42-75
20708|code|MOV             R1, R5|41-70
20710|code|LDR             R0, [R4,R3]; uxsock_trigger|224-88
20712|code|BL              sub_7054|1-240-180-255
20716|code|MOVS            R0, #0|0-32
20718|code|POP             {R4-R6,PC}|112-189
20720|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4EBE|206-108-1-0
20724|data|DCD cli_list_paths_ptr - 0x1BB8C|168-3-0-0
20728|data|DCD cli_list_paths_fmt_ptr - 0x1BB8C|116-3-0-0
20732|data|DCD cli_list_maps_ptr - 0x1BB8C|192-3-0-0
20736|data|DCD cli_list_status_ptr - 0x1BB8C|112-3-0-0
20740|data|DCD cli_list_daemon_ptr - 0x1BB8C|44-4-0-0
20744|data|DCD cli_list_maps_status_ptr - 0x1BB8C|96-3-0-0
20748|data|DCD cli_list_maps_stats_ptr - 0x1BB8C|220-3-0-0
20752|data|DCD cli_list_maps_fmt_ptr - 0x1BB8C|92-3-0-0
20756|data|DCD cli_list_maps_topology_ptr - 0x1BB8C|236-3-0-0
20760|data|DCD cli_list_map_topology_ptr - 0x1BB8C|108-4-0-0
20764|data|DCD cli_list_config_ptr - 0x1BB8C|88-3-0-0
20768|data|DCD cli_list_blacklist_ptr - 0x1BB8C|68-4-0-0
20772|data|DCD cli_list_devices_ptr - 0x1BB8C|244-3-0-0
20776|data|DCD cli_list_wildcards_ptr - 0x1BB8C|184-3-0-0
20780|data|DCD cli_add_path_ptr - 0x1BB8C|240-3-0-0
20784|data|DCD cli_del_path_ptr - 0x1BB8C|196-3-0-0
20788|data|DCD cli_add_map_ptr - 0x1BB8C|12-4-0-0
20792|data|DCD cli_del_map_ptr - 0x1BB8C|136-3-0-0
20796|data|DCD cli_switch_group_ptr - 0x1BB8C|92-4-0-0
20800|data|DCD cli_reconfigure_ptr - 0x1BB8C|200-3-0-0
20804|data|DCD cli_suspend_ptr - 0x1BB8C|228-3-0-0
20808|data|DCD cli_resume_ptr - 0x1BB8C|152-3-0-0
20812|data|DCD cli_resize_ptr - 0x1BB8C|188-3-0-0
20816|data|DCD cli_reload_ptr - 0x1BB8C|4-4-0-0
20820|data|DCD cli_reassign_ptr - 0x1BB8C|8-4-0-0
20824|data|DCD cli_reinstate_ptr - 0x1BB8C|164-3-0-0
20828|data|DCD cli_fail_ptr - 0x1BB8C|160-3-0-0
20832|data|DCD cli_disable_queueing_ptr - 0x1BB8C|252-3-0-0
20836|data|DCD cli_restore_queueing_ptr - 0x1BB8C|80-4-0-0
20840|data|DCD cli_disable_all_queueing_ptr - 0x1BB8C|88-4-0-0
20844|data|DCD cli_restore_all_queueing_ptr - 0x1BB8C|32-4-0-0
20848|data|DCD cli_quit_ptr - 0x1BB8C|208-3-0-0
20852|data|DCD cli_shutdown_ptr - 0x1BB8C|64-4-0-0
20856|data|DCD cli_getprstatus_ptr - 0x1BB8C|144-3-0-0
20860|data|DCD cli_setprstatus_ptr - 0x1BB8C|72-4-0-0
20864|data|DCD cli_unsetprstatus_ptr - 0x1BB8C|52-4-0-0
20868|data|DCD cli_force_no_daemon_q_ptr - 0x1BB8C|104-3-0-0
20872|data|DCD cli_restore_no_daemon_q_ptr - 0x1BB8C|140-3-0-0
20876|data|DCD uxsock_trigger_ptr - 0x1BB8C|120-3-0-0
20880|code|PUSH            {R4,LR}|16-181
20882|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x5198)|7-76
20884|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
20886|code|BLX             uevent_listen|254-247-156-233
20890|code|CBZ             R0, loc_51AC|56-177
20892|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|5-75
20894|code|MOVS            R1, #0|0-33
20896|code|LDR             R2, =(aErrorStartingU_0 - 0x51A8); "error starting uevent listener\n"|5-74
20898|code|LDR             R3, [R4,R3]; logsink|227-88
20900|code|ADD             R2, PC; "error starting uevent listener\n"|122-68
20902|code|LDR             R0, [R3]|24-104
20904|code|BLX             dlog|254-247-42-233
20908|code|MOVS            R0, #0|0-32
20910|code|POP             {R4,PC}|16-189
20912|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5198|244-105-1-0
20916|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
20920|data|DCD aErrorStartingU_0 - 0x51A8; "error starting uevent listener\n"|24-74-0-0
20924|code|LDR.W           R3, [R0,#0x164]|208-248-100-49
20928|code|CMP             R3, #0|0-43
20930|code|BEQ             locret_5278|89-208
20932|code|LDR             R2, [R3]|26-104
20934|code|CMP             R2, #0|0-42
20936|code|BEQ             locret_5278|86-208
20938|code|LDR             R2, [R3,#4]|90-104
20940|code|PUSH.W          {R4-R8,LR}|45-233-240-65
20944|code|MOV             R7, R0|7-70
20946|code|LDR.W           R8, [R2]|210-248-0-128
20950|code|MOVS            R6, #0|0-38
20952|code|CMP.W           R8, #0|184-241-0-15
20956|code|BEQ             locret_527A|77-208
20958|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
20962|code|CBZ             R2, loc_5244|122-179
20964|code|LDR             R1, [R2]|17-104
20966|code|CBZ             R1, loc_5244|105-179
20968|code|LDR             R1, [R2,#4]|81-104
20970|code|MOVS            R4, #0|0-36
20972|code|LDR             R1, [R1]|9-104
20974|code|CBNZ            R1, loc_5210|121-185
20976|code|B               loc_5244|40-224
20978|code|BICS.W          R3, R5, #2|53-240-2-3
20982|code|BNE             loc_51FE|2-209
20984|code|BICS.W          R3, R0, #2|48-240-2-3
20988|code|BEQ             loc_525E|47-208
20990|code|ADDS            R4, #1|1-52
20992|code|CBZ             R2, loc_5240|242-177
20994|code|LDR             R3, [R2]|19-104
20996|code|CMP             R3, R4|163-66
20998|code|BLS             loc_5240|27-217
21000|code|LDR             R3, [R2,#4]|83-104
21002|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
21006|code|CBZ             R1, loc_5240|185-177
21008|code|LDR.W           R3, [R1,#0x328]|209-248-40-51
21012|code|CMP             R3, #1|1-43
21014|code|BLS             loc_51FE|242-217
21016|code|LDR.W           R5, [R1,#0x32C]|209-248-44-83
21020|code|SUBS            R0, R3, #2|152-30
21022|code|CMP             R5, #1|1-45
21024|code|BHI             loc_51F2|231-216
21026|code|SUBS            R3, #3|3-59
21028|code|BICS.W          R3, R3, #2|51-240-2-3
21032|code|BNE             loc_51F2|227-209
21034|code|ADD.W           R1, R1, #0x100|1-245-128-113
21038|code|LDR.W           R0, [R7,#0x16C]|215-248-108-1
21042|code|BLX             dm_reinstate_path|254-247-30-236
21046|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
21050|code|ADDS            R4, #1|1-52
21052|code|CMP             R2, #0|0-42
21054|code|BNE             loc_5202|224-209
21056|code|LDR.W           R3, [R7,#0x164]|215-248-100-49
21060|code|ADDS            R6, #1|1-54
21062|code|CBZ             R3, locret_5274|171-177
21064|code|LDR             R2, [R3]|26-104
21066|code|CMP             R2, R6|178-66
21068|code|BLS             locret_5270|16-217
21070|code|LDR             R2, [R3,#4]|90-104
21072|code|LDR.W           R8, [R2,R6,LSL#2]|82-248-38-128
21076|code|CMP.W           R8, #0|184-241-0-15
21080|code|BNE             loc_51DE|193-209
21082|code|POP.W           {R4-R8,PC}|189-232-240-129
21086|code|ADD.W           R1, R1, #0x100|1-245-128-113
21090|code|LDR.W           R0, [R7,#0x16C]|215-248-108-1
21094|code|BLX             dm_fail_path|254-247-68-235
21098|code|LDR.W           R2, [R8,#0x10]|216-248-16-32
21102|code|B               loc_51FE|198-231
21104|code|POP.W           {R4-R8,PC}|189-232-240-129
21108|code|POP.W           {R4-R8,PC}|189-232-240-129
21112|code|BX              LR|112-71
21114|code|POP.W           {R4-R8,PC}|189-232-240-129
21118|data|ALIGN 0x10|0-191
21120|code|PUSH.W          {R4-R8,LR}|45-233-240-65
21124|code|MOV             R8, R0|128-70
21126|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x5294)|74-78
21128|code|SUB             SP, SP, #0x10|132-176
21130|code|MOV             R0, R1|8-70
21132|code|MOV             R5, R1|13-70
21134|code|MOV             R7, R2|23-70
21136|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
21138|code|BLX             dm_map_present|254-247-54-236
21142|code|CBZ             R0, loc_52C6|176-177
21144|code|LDR             R1, =(aMultipath - 0x52A0); "multipath"|70-73
21146|code|MOV             R0, R5|40-70
21148|code|ADD             R1, PC; "multipath"|121-68
21150|code|BLX             dm_type|254-247-70-234
21154|code|CMP             R0, #0|0-40
21156|code|BLE             loc_534A|81-221
21158|code|LDR             R0, [R7,#0xC]|248-104
21160|code|MOV             R1, R5|41-70
21162|code|BLX             find_mp_by_alias|254-247-8-234
21166|code|MOV             R4, R0|4-70
21168|code|CMP             R0, #0|0-40
21170|code|BEQ             loc_5360|85-208
21172|code|LDR             R3, =(conf_ptr - 0x1BB8C)|64-75
21174|code|LDR             R3, [R6,R3]; conf|243-88
21176|code|LDR             R3, [R3]|27-104
21178|code|LDR             R0, [R3,#0x7C]|216-111
21180|code|CMP             R0, #0|0-40
21182|code|BNE             loc_532A|52-209
21184|code|ADD             SP, SP, #0x10|4-176
21186|code|POP.W           {R4-R8,PC}|189-232-240-129
21190|code|LDR             R0, [R7,#0xC]|248-104
21192|code|MOV             R1, R5|41-70
21194|code|BLX             find_mp_by_alias|254-247-248-233
21198|code|CMP             R0, #0|0-40
21200|code|BNE             loc_52B4|240-209
21202|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|58-72
21204|code|MOVS            R1, #2|2-33
21206|code|LDR             R2, =(aSAddingMap - 0x52E0); "%s: adding map\n"|58-74
21208|code|MOV             R3, R5|43-70
21210|code|LDR             R6, [R6,R0]; logsink|54-88
21212|code|ADD             R2, PC; "%s: adding map\n"|122-68
21214|code|LDR             R0, [R6]|48-104
21216|code|BLX             dlog|254-247-142-232
21220|code|LDR             R2, [R7,#8]|186-104
21222|code|MOV             R0, R8|64-70
21224|code|MOVS            R1, #3|3-33
21226|code|ADD             R3, SP, #0x28+var_1C|3-171
21228|code|BLX             get_refwwid|254-247-182-236
21232|code|LDR             R2, [SP,#0x28+var_1C]|3-154
21234|code|MOV             R4, R0|4-70
21236|code|CBZ             R2, loc_5306|58-177
21238|code|MOVS            R1, #0|0-33
21240|code|MOV             R0, R7|56-70
21242|code|MOV             R3, R1|11-70
21244|code|BLX             coalesce_paths|254-247-222-236
21248|code|MOV             R4, R0|4-70
21250|code|BLX             dm_lib_release|254-247-156-232
21254|code|LDR             R0, [R6]|48-104
21256|code|MOV             R3, R5|43-70
21258|code|STR.W           R8, [SP,#0x28+var_28]|205-248-0-128
21262|code|CMP             R4, #0|0-44
21264|code|BEQ             loc_5398|66-208
21266|code|CMP             R4, #2|2-44
21268|code|BEQ             loc_53A4|70-208
21270|code|LDR             R2, =(aSUevAddMapSFai - 0x531E); "%s: uev_add_map %s failed\n"|43-74
21272|code|MOVS            R1, #0|0-33
21274|code|ADD             R2, PC; "%s: uev_add_map %s failed\n"|122-68
21276|code|BLX             dlog|254-247-112-232
21280|code|LDR             R0, [SP,#0x28+var_1C]|3-152
21282|code|BLX             xfree|254-247-202-232
21286|code|MOV             R0, R4|32-70
21288|code|B               loc_52C0|202-231
21290|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|36-72
21292|code|MOVS            R1, #3|3-33
21294|code|LDR             R2, =(aSReassignExist - 0x5338); "%s: Reassign existing device-mapper dev"...|38-74
21296|code|MOV             R3, R5|43-70
21298|code|LDR             R0, [R6,R0]; logsink|48-88
21300|code|ADD             R2, PC; "%s: Reassign existing device-mapper dev"...|122-68
21302|code|LDR             R0, [R0]|0-104
21304|code|BLX             dlog|254-247-98-232
21308|code|MOV             R0, R5|40-70
21310|code|BLX             dm_reassign|254-247-122-234
21314|code|MOVS            R0, #0|0-32
21316|code|ADD             SP, SP, #0x10|4-176
21318|code|POP.W           {R4-R8,PC}|189-232-240-129
21322|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|28-72
21324|code|MOV             R3, R5|43-70
21326|code|LDR             R2, =(aSNotAMultipath - 0x5358); "%s: not a multipath map\n"|31-74
21328|code|MOVS            R1, #4|4-33
21330|code|LDR             R0, [R6,R0]; logsink|48-88
21332|code|ADD             R2, PC; "%s: not a multipath map\n"|122-68
21334|code|LDR             R0, [R0]|0-104
21336|code|BLX             dlog|254-247-82-232
21340|code|MOVS            R0, #0|0-32
21342|code|B               loc_52C0|175-231
21344|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|22-72
21346|code|MOVS            R1, #2|2-33
21348|code|LDR             R2, =(aSAddingMap - 0x536E); "%s: adding map\n"|26-74
21350|code|MOV             R3, R5|43-70
21352|code|LDR             R6, [R6,R0]; logsink|54-88
21354|code|ADD             R2, PC; "%s: adding map\n"|122-68
21356|code|LDR             R0, [R6]|48-104
21358|code|BLX             dlog|254-247-72-232
21362|code|MOV             R0, R7|56-70
21364|code|MOV             R1, R5|41-70
21366|code|BLX             add_map_without_path|254-247-150-234
21370|code|CMP             R0, #0|0-40
21372|code|BEQ             loc_52E4|178-208
21374|code|BL              sub_51BC|255-247-29-255
21378|code|LDR             R2, =(aSDevmapSRegist - 0x5392); "%s: devmap %s registered\n"|20-74
21380|code|LDR             R0, [R6]|48-104
21382|code|MOV             R3, R5|43-70
21384|code|STR.W           R8, [SP,#0x28+var_28]|205-248-0-128
21388|code|MOVS            R1, #2|2-33
21390|code|ADD             R2, PC; "%s: devmap %s registered\n"|122-68
21392|code|BLX             dlog|254-247-54-232
21396|code|MOV             R0, R4|32-70
21398|code|B               loc_52C0|147-231
21400|code|LDR             R2, =(aSDevmapSAdded - 0x53A0); "%s: devmap %s added\n"|15-74
21402|code|MOVS            R1, #2|2-33
21404|code|ADD             R2, PC; "%s: devmap %s added\n"|122-68
21406|code|BLX             dlog|254-247-48-232
21410|code|B               loc_5320|189-231
21412|code|LDR             R2, =(aSUevAddMapSBla - 0x53AC); "%s: uev_add_map %s blacklisted\n"|13-74
21414|code|MOV             R1, R4|33-70
21416|code|ADD             R2, PC; "%s: uev_add_map %s blacklisted\n"|122-68
21418|code|BLX             dlog|254-247-42-232
21422|code|B               loc_5320|183-231
21424|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5294|248-104-1-0
21428|data|DCD aMultipath - 0x52A0; "multipath"|64-73-0-0
21432|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
21436|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
21440|data|DCD aSAddingMap - 0x52E0; "%s: adding map\n"|200-73-0-0
21444|data|DCD aSUevAddMapSFai - 0x531E; "%s: uev_add_map %s failed\n"|110-73-0-0
21448|data|DCD aSReassignExist - 0x5338; "%s: Reassign existing device-mapper dev"...|208-72-0-0
21452|data|DCD aSNotAMultipath - 0x5358; "%s: not a multipath map\n"|148-72-0-0
21456|data|DCD aSAddingMap - 0x536E; "%s: adding map\n"|58-73-0-0
21460|data|DCD aSDevmapSRegist - 0x5392; "%s: devmap %s registered\n"|166-72-0-0
21464|data|DCD aSDevmapSAdded - 0x53A0; "%s: devmap %s added\n"|180-72-0-0
21468|data|DCD aSUevAddMapSBla - 0x53AC; "%s: uev_add_map %s blacklisted\n"|192-72-0-0
21472|code|PUSH.W          {R4-R9,LR}|45-233-240-67
21476|code|MOV             R8, R0|128-70
21478|code|SUB             SP, SP, #0xC|131-176
21480|code|MOV             R9, R1|137-70
21482|code|LDR             R0, [R3,#0xC]|216-104
21484|code|MOV             R1, R2|17-70
21486|code|MOV             R7, R2|23-70
21488|code|MOV             R5, R3|29-70
21490|code|BLX             find_mp_by_minor|254-247-56-234
21494|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x53FC)|22-78
21496|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
21498|code|MOV             R4, R0|4-70
21500|code|CBZ             R0, loc_543C|240-177
21502|code|LDR.W           R8, [R0,#0x16C]|208-248-108-129
21506|code|MOV             R1, R9; s2|73-70
21508|code|MOV             R0, R8; s1|64-70
21510|code|BLX             strcmp|254-247-126-236
21514|code|CBNZ            R0, loc_5418|40-185
21516|code|MOV             R0, R4|32-70
21518|code|MOV             R1, R5|41-70
21520|code|ADD             SP, SP, #0xC|3-176
21522|code|POP.W           {R4-R9,LR}|189-232-240-67
21526|code|B               sub_4E0C|249-228
21528|code|LDR.W           R4, [R4,#0x168]|212-248-104-65
21532|code|MOV             R3, R8|67-70
21534|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|13-72
21536|code|MOVS            R1, #2|2-33
21538|code|LDR             R2, =(aSMinorNumberMi - 0x542C); "%s: minor number mismatch (map %d, even"...|13-74
21540|code|LDR             R4, [R4,#0x1C]|228-105
21542|code|LDR             R0, [R6,R0]; logsink|48-88
21544|code|ADD             R2, PC; "%s: minor number mismatch (map %d, even"...|122-68
21546|code|STR             R7, [SP,#0x28+var_24]|1-151
21548|code|LDR             R0, [R0]|0-104
21550|code|STR             R4, [SP,#0x28+var_28]|0-148
21552|code|BLX             dlog|253-247-230-239
21556|code|MOVS            R0, #0|0-32
21558|code|ADD             SP, SP, #0xC|3-176
21560|code|POP.W           {R4-R9,PC}|189-232-240-131
21564|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|5-72
21566|code|MOV             R3, R8|67-70
21568|code|LDR             R2, =(aSDevmapNotRegi - 0x544A); "%s: devmap not registered, can't remove"...|6-74
21570|code|MOVS            R1, #2|2-33
21572|code|LDR             R0, [R6,R0]; logsink|48-88
21574|code|ADD             R2, PC; "%s: devmap not registered, can't remove"...|122-68
21576|code|LDR             R0, [R0]|0-104
21578|code|BLX             dlog|253-247-218-239
21582|code|B               loc_5434|241-231
21584|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x53FC|144-103-1-0
21588|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
21592|data|DCD aSMinorNumberMi - 0x542C; "%s: minor number mismatch (map %d, even"...|184-72-0-0
21596|data|DCD aSDevmapNotRegi - 0x544A; "%s: devmap not registered, can't remove"...|110-72-0-0
21600|code|PUSH.W          {R4-R11,LR}|45-233-240-79
21604|code|SUB.W           SP, SP, #0x1080|173-245-132-93
21608|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x5476)|111-77
21610|code|SUB             SP, SP, #0x14|133-176
21612|code|LDR             R4, =(__stack_chk_guard_ptr - 0x1BB8C)|111-76
21614|code|ADD.W           R10, SP, #0x10B8+s|13-241-140-10
21618|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
21620|code|MOV             R7, R0|7-70
21622|code|MOV             R6, R1|14-70
21624|code|MOV             R0, R10; s|80-70
21626|code|LDR.W           R8, [R5,R4]; __stack_chk_guard|85-248-4-128
21630|code|ADD.W           R4, SP, #0x10B8+var_38|13-245-132-84
21634|code|ADDS            R4, #0xC|12-52
21636|code|MOVS            R1, #0; c|0-33
21638|code|MOV.W           R2, #0x1000; n|79-244-128-82
21642|code|LDR.W           R3, [R8]|216-248-0-48
21646|code|STR             R3, [R4]|35-96
21648|code|BLX             memset|254-247-150-232
21652|code|LDR.W           R4, [R7,#0x5B8]|215-248-184-69
21656|code|CMP             R4, #0|0-44
21658|code|BEQ.W           loc_55D2|0-240-154-128
21662|code|MOV             R0, R4|32-70
21664|code|LDR             R1, [R6,#8]|177-104
21666|code|BLX             update_mpp_paths|254-247-226-232
21670|code|CBZ             R0, loc_54E4|232-177
21672|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|97-72
21674|code|MOVS            R1, #0|0-33
21676|code|LDR             R2, =(aSFailedToUpdat - 0x54B8); "%s: failed to update paths\n"|97-74
21678|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
21682|code|LDR             R0, [R5,R0]; logsink|40-88
21684|code|ADD             R2, PC; "%s: failed to update paths\n"|122-68
21686|code|LDR             R0, [R0]|0-104
21688|code|BLX             dlog|253-247-162-239
21692|code|MOV             R0, R4|32-70
21694|code|MOV             R1, R6|49-70
21696|code|MOVS            R2, #1|1-34
21698|code|BLX             remove_map_and_stop_waiter|254-247-240-232
21702|code|MOVS            R0, #1|1-32
21704|code|ADD.W           R3, SP, #0x10B8+var_38|13-245-132-83
21708|code|ADDS            R3, #0xC|12-51
21710|code|LDR             R2, [R3]|26-104
21712|code|LDR.W           R3, [R8]|216-248-0-48
21716|code|CMP             R2, R3|154-66
21718|code|BNE.W           loc_5622|64-240-164-128
21722|code|ADD.W           SP, SP, #0x1080|13-245-132-93
21726|code|ADD             SP, SP, #0x14|5-176
21728|code|POP.W           {R4-R11,PC}|189-232-240-143
21732|code|LDR.W           R0, [R4,#0x160]|212-248-96-1
21736|code|MOV             R1, R7|57-70
21738|code|BLX             find_slot|254-247-8-233
21742|code|ADDS            R2, R0, #1|66-28
21744|code|BEQ             loc_54FC|4-208
21746|code|MOV             R1, R0|1-70
21748|code|LDR.W           R0, [R4,#0x160]|212-248-96-1
21752|code|BLX             vector_del_slot|254-247-8-235
21756|code|LDR.W           R3, [R4,#0x160]|212-248-96-49
21760|code|CBZ             R3, loc_5506|11-177
21762|code|LDR             R3, [R3]|27-104
21764|code|CBNZ            R3, loc_552C|147-185
21766|code|LDR.W           R11, [R4,#0x16C]|212-248-108-177
21770|code|ADD.W           R9, SP, #0x10B8+dest|13-241-12-9
21774|code|MOVS            R2, #0x80; n|128-34
21776|code|MOV             R0, R9; dest|72-70
21778|code|MOV             R1, R11; src|89-70
21780|code|BLX             strncpy|254-247-12-232
21784|code|LDR.W           R1, [R4,#0x134]|212-248-52-17
21788|code|CMP             R1, #2|2-41
21790|code|BEQ             loc_55D6|90-208
21792|code|MOV             R0, R4|32-70
21794|code|MOV             R1, R6|49-70
21796|code|BL              sub_4E0C|255-247-114-252
21800|code|CMP             R0, #0|0-40
21802|code|BEQ             loc_55A0|57-208
21804|code|MOV             R0, R4|32-70
21806|code|MOV             R1, R10|81-70
21808|code|MOV.W           R2, #0x1000|79-244-128-82
21812|code|BLX             setup_map|254-247-238-233
21816|code|MOV             R9, R0|129-70
21818|code|CBNZ            R0, loc_5588|40-187
21820|code|MOVS            R3, #3|3-35
21822|code|MOV             R1, R10|81-70
21824|code|MOV             R0, R4|32-70
21826|code|STR.W           R3, [R4,#0x114]|196-248-20-49
21830|code|BLX             domap|254-247-4-233
21834|code|CMP             R0, #0|0-40
21836|code|BLE             loc_5606|91-221
21838|code|MOV             R0, R6|48-70
21840|code|MOV             R1, R4|33-70
21842|code|MOVS            R2, #1|1-34
21844|code|BLX             __setup_multipath|254-247-196-232
21848|code|MOV             R9, R0|129-70
21850|code|CMP             R0, #0|0-40
21852|code|BNE             loc_54BC|174-209
21854|code|MOV             R0, R4|32-70
21856|code|BL              sub_51BC|255-247-44-254
21860|code|LDR.W           LR, =(logsink_ptr - 0x1BB8C)|223-248-200-224
21864|code|ADD.W           R0, R7, #0x100|7-245-128-112
21868|code|LDR             R2, =(aSSPathRemovedF - 0x557A); "%s [%s]: path removed from map %s\n"|50-74
21870|code|MOVS            R1, #2|2-33
21872|code|MOV             R3, R7|59-70
21874|code|LDR.W           R5, [R5,LR]; logsink|85-248-14-80
21878|code|ADD             R2, PC; "%s [%s]: path removed from map %s\n"|122-68
21880|code|STR             R0, [SP,#0x10B8+var_10B8]|0-144
21882|code|LDR.W           R4, [R4,#0x16C]|212-248-108-65
21886|code|LDR             R0, [R5]|40-104
21888|code|STR             R4, [SP,#0x10B8+var_10B4]|1-148
21890|code|BLX             dlog|253-247-62-239
21894|code|B               loc_55B4|21-224
21896|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|41-72
21898|code|MOVS            R1, #0|0-33
21900|code|LDR             R2, =(aSFailedToSetup - 0x5598); "%s: failed to setup map for removal of "...|43-74
21902|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
21906|code|LDR             R0, [R5,R0]; logsink|40-88
21908|code|ADD             R2, PC; "%s: failed to setup map for removal of "...|122-68
21910|code|STR             R7, [SP,#0x10B8+var_10B8]|0-151
21912|code|LDR             R0, [R0]|0-104
21914|code|BLX             dlog|253-247-50-239
21918|code|B               loc_54BC|141-231
21920|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|35-76
21922|code|MOV             R3, R9|75-70
21924|code|MOV             R9, R0|129-70
21926|code|LDR             R2, =(aSRemovedMapAft - 0x55B0); "%s: removed map after removing all path"...|38-74
21928|code|MOVS            R1, #2|2-33
21930|code|LDR             R0, [R5,R4]; logsink|40-89
21932|code|ADD             R2, PC; "%s: removed map after removing all path"...|122-68
21934|code|LDR             R0, [R0]|0-104
21936|code|BLX             dlog|253-247-38-239
21940|code|MOV             R1, R7|57-70
21942|code|LDR             R0, [R6,#8]|176-104
21944|code|BLX             find_slot|254-247-160-232
21948|code|ADDS            R3, R0, #1|67-28
21950|code|MOV             R1, R0|1-70
21952|code|BEQ             loc_55C8|2-208
21954|code|LDR             R0, [R6,#8]|176-104
21956|code|BLX             vector_del_slot|254-247-162-234
21960|code|MOV             R0, R7|56-70
21962|code|BLX             free_path|253-247-104-239
21966|code|MOV             R0, R9|72-70
21968|code|B               loc_54C8|122-231
21970|code|MOV             R9, R4|161-70
21972|code|B               loc_55B4|238-231
21974|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|22-72
21976|code|MOV             R3, R11|91-70
21978|code|LDR             R2, =(aSLastPathDelet - 0x55E2); "%s Last path deleted, disabling queuein"...|26-74
21980|code|LDR             R0, [R5,R0]; logsink|40-88
21982|code|ADD             R2, PC; "%s Last path deleted, disabling queuein"...|122-68
21984|code|LDR             R0, [R0]|0-104
21986|code|BLX             dlog|253-247-14-239
21990|code|MOVS            R3, #0|0-35
21992|code|MOV             R1, R3|25-70
21994|code|STR.W           R3, [R4,#0x12C]|196-248-44-49
21998|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
22002|code|MOVS            R3, #3|3-35
22004|code|STR.W           R2, [R4,#0x128]|196-248-40-33
22008|code|STR.W           R3, [R4,#0x134]|196-248-52-49
22012|code|LDR.W           R0, [R4,#0x16C]|212-248-108-1
22016|code|BLX             dm_queue_if_no_path|254-247-40-234
22020|code|B               loc_5520|140-231
22022|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|10-72
22024|code|MOV             R1, R9|73-70
22026|code|LDR             R2, =(aSFailedInDomap - 0x561A); "%s: failed in domap for removal of path"...|15-74
22028|code|MOV.W           R9, #1|79-240-1-9
22032|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
22036|code|LDR             R0, [R5,R0]; logsink|40-88
22038|code|ADD             R2, PC; "%s: failed in domap for removal of path"...|122-68
22040|code|STR             R7, [SP,#0x10B8+var_10B8]|0-151
22042|code|LDR             R0, [R0]|0-104
22044|code|BLX             dlog|253-247-240-238
22048|code|B               loc_55B4|200-231
22050|code|BLX             __stack_chk_fail|254-247-68-234
22054|data|ALIGN 4|0-191
22056|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5476|22-103-1-0
22060|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
22064|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
22068|data|DCD aSFailedToUpdat - 0x54B8; "%s: failed to update paths\n"|92-72-0-0
22072|data|DCD aSSPathRemovedF - 0x557A; "%s [%s]: path removed from map %s\n"|106-72-0-0
22076|data|DCD aSFailedToSetup - 0x5598; "%s: failed to setup map for removal of "...|240-71-0-0
22080|data|DCD aSRemovedMapAft - 0x55B0; "%s: removed map after removing all path"...|172-71-0-0
22084|data|DCD aSLastPathDelet - 0x55E2; "%s Last path deleted, disabling queuein"...|78-71-0-0
22088|data|DCD aSFailedInDomap - 0x561A; "%s: failed in domap for removal of path"...|158-71-0-0
22092|code|LDR             R0, =(unk_1C01C - 0x5652)|1-72
22094|code|ADD             R0, PC; unk_1C01C ; sem|120-68
22096|code|B.W             j_sem_post|254-247-46-185
22100|data|DCD unk_1C01C - 0x5652|202-105-1-0
22104|code|B.W             sub_564C|255-247-248-191
22108|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x5664)|14-75
22110|code|LDR             R2, =(running_state_ptr - 0x1BB8C)|15-74
22112|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
22114|code|LDR             R3, [R3,R2]; running_state|155-88
22116|code|LDR             R3, [R3]|27-104
22118|code|CMP             R3, #4; switch 5 cases|4-43
22120|code|BHI             def_566A; jumptable 0000566A default case|19-216
22122|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
22126|data|DCB 3; jump table for switch statement|3
22127|data|DCB 9|9
22128|data|DCB 0xC|12
22129|data|DCB 0xF|15
22130|data|DCB 6|6
22131|data|ALIGN 2|0
22132|code|LDR             R0, =(aInit - 0x567A); jumptable 0000566A case 0|10-72
22134|code|ADD             R0, PC; "init"|120-68
22136|code|BX              LR|112-71
22138|code|LDR             R0, =(aShutdown - 0x5680); jumptable 0000566A case 4|10-72
22140|code|ADD             R0, PC; "shutdown"|120-68
22142|code|BX              LR|112-71
22144|code|LDR             R0, =(aStartup - 0x5686); jumptable 0000566A case 1|9-72
22146|code|ADD             R0, PC; "startup"|120-68
22148|code|BX              LR|112-71
22150|code|LDR             R0, =(aConfigure - 0x568C); jumptable 0000566A case 2|9-72
22152|code|ADD             R0, PC; "configure"|120-68
22154|code|BX              LR|112-71
22156|code|LDR             R0, =(aRunning - 0x5692); jumptable 0000566A case 3|8-72
22158|code|ADD             R0, PC; "running"|120-68
22160|code|BX              LR|112-71
22162|code|MOVS            R0, #0; jumptable 0000566A default case|0-32
22164|code|BX              LR|112-71
22166|data|ALIGN 4|0-191
22168|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5664|40-101-1-0
22172|data|DCD running_state_ptr - 0x1BB8C|216-3-0-0
22176|data|DCD aInit - 0x567A; "init"|142-71-0-0
22180|data|DCD aShutdown - 0x5680; "shutdown"|172-71-0-0
22184|data|DCD aStartup - 0x5686; "startup"|138-71-0-0
22188|data|DCD aConfigure - 0x568C; "configure"|140-71-0-0
22192|data|DCD aRunning - 0x5692; "running"|146-71-0-0
22196|code|PUSH.W          {R4-R11,LR}|45-233-240-79
22200|code|SUB             SP, SP, #0xC|131-176
22202|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x56C2)|51-75
22204|code|MOV             R9, R0|129-70
22206|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
22208|code|STR             R3, [SP,#0x30+var_2C]|1-147
22210|code|CMP             R1, #0|0-41
22212|code|BEQ             loc_575E|75-208
22214|code|LDR.W           R2, [R0,#0x5B8]|208-248-184-37
22218|code|LDR.W           R6, [R2,#0x164]|210-248-100-97
22222|code|CMP             R6, #0|0-46
22224|code|BEQ             loc_5756|65-208
22226|code|LDR             R3, [R6]|51-104
22228|code|CMP             R3, #0|0-43
22230|code|BLE             loc_5784|85-221
22232|code|LDR             R3, [R6,#4]|115-104
22234|code|LDR             R7, [R3]|31-104
22236|code|MOV             R6, R7|62-70
22238|code|CMP             R7, #0|0-47
22240|code|BEQ             loc_5756|57-208
22242|code|MOV.W           R10, #0|79-240-0-10
22246|code|MOV             R6, R10|86-70
22248|code|LDR             R3, [R7,#0x10]|59-105
22250|code|CBZ             R3, loc_573C|59-179
22252|code|LDR             R1, [R3]|25-104
22254|code|CMP             R1, #0|0-41
22256|code|BLE             loc_573C|36-221
22258|code|LDR             R3, [R3,#4]|91-104
22260|code|LDR             R4, [R3]|28-104
22262|code|CBZ             R4, loc_573C|12-179
22264|code|LDR             R3, =(elf_gnu_hash_chain+0xA0)|36-75
22266|code|MOVS            R5, #0|0-37
22268|code|LDR             R2, [SP,#0x30+var_2C]|1-154
22270|code|LDR.W           R8, [R2,R3]|82-248-3-128
22274|code|B               loc_5712|6-224
22276|code|LDR             R2, [R3]|26-104
22278|code|CMP             R2, R5|170-66
22280|code|BLE             loc_5738|22-221
22282|code|LDR             R3, [R3,#4]|91-104
22284|code|LDR.W           R4, [R3,R5,LSL#2]|83-248-37-64
22288|code|CBZ             R4, loc_5738|148-177
22290|code|LDR.W           R3, [R8]|216-248-0-48
22294|code|MOVS            R2, #8|8-34
22296|code|MOV             R0, R4|32-70
22298|code|LDR.W           R11, [R4,#0x338]|212-248-56-179
22302|code|ADDS            R5, #1|1-53
22304|code|LDR.W           R1, [R3,#0xD8]|211-248-216-16
22308|code|BLX             pathinfo|254-247-140-232
22312|code|LDR             R3, [R7,#0x10]|59-105
22314|code|LDR.W           R2, [R4,#0x338]|212-248-56-35
22318|code|CMP             R2, R11|90-69
22320|code|IT NE|24-191
22322|code|MOVNE           R6, #1|1-38
22324|code|CMP             R3, #0|0-43
22326|code|BNE             loc_5704|229-209
22328|code|LDR.W           R2, [R9,#0x5B8]|217-248-184-37
22332|code|LDR.W           R3, [R2,#0x164]|210-248-100-49
22336|code|ADD.W           R10, R10, #1|10-241-1-10
22340|code|CBZ             R3, loc_5756|59-177
22342|code|LDR             R1, [R3]|25-104
22344|code|CMP             R1, R10|81-69
22346|code|BLE             loc_5756|4-221
22348|code|LDR             R3, [R3,#4]|91-104
22350|code|LDR.W           R7, [R3,R10,LSL#2]|83-248-42-112
22354|code|CMP             R7, #0|0-47
22356|code|BNE             loc_56E8|200-209
22358|code|MOV             R0, R6|48-70
22360|code|ADD             SP, SP, #0xC|3-176
22362|code|POP.W           {R4-R11,PC}|189-232-240-143
22366|code|LDR             R1, [SP,#0x30+var_2C]|1-153
22368|code|MOVS            R2, #8|8-34
22370|code|LDR             R3, =(elf_gnu_hash_chain+0xA0)|10-75
22372|code|LDR.W           R4, [R0,#0x338]|208-248-56-67
22376|code|LDR             R3, [R1,R3]|203-88
22378|code|LDR             R3, [R3]|27-104
22380|code|LDR.W           R1, [R3,#0xD8]|211-248-216-16
22384|code|BLX             pathinfo|254-247-102-232
22388|code|LDR.W           R0, [R9,#0x338]|217-248-56-3
22392|code|SUBS            R0, R4, R0|32-26
22394|code|IT NE|24-191
22396|code|MOVNE           R0, #1|1-32
22398|code|ADD             SP, SP, #0xC|3-176
22400|code|POP.W           {R4-R11,PC}|189-232-240-143
22404|code|MOVS            R6, #0|0-38
22406|code|B               loc_5756|230-231
22408|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x56C2|202-100-1-0
22412|data|DCD elf_gnu_hash_chain+0xA0|176-3-0-0
22416|code|PUSH            {R3-R5,LR}|56-181
22418|code|MOV             R5, R0|5-70
22420|code|MOV             R4, R1|12-70
22422|code|MOV             R0, R1|8-70
22424|code|MOV             R1, R5|41-70
22426|code|BLX             reload_map|254-247-86-233
22430|code|CBZ             R0, loc_57A6|16-177
22432|code|MOVS            R4, #1|1-36
22434|code|MOV             R0, R4|32-70
22436|code|POP             {R3-R5,PC}|56-189
22438|code|BLX             dm_lib_release|253-247-74-238
22442|code|MOV             R0, R4|32-70
22444|code|MOV             R1, R5|41-70
22446|code|MOVS            R2, #1|1-34
22448|code|BLX             __setup_multipath|253-247-150-239
22452|code|MOV             R4, R0|4-70
22454|code|CMP             R0, #0|0-40
22456|code|BNE             loc_57A0|242-209
22458|code|MOV             R0, R5|40-70
22460|code|BL              sub_51BC|255-247-254-252
22464|code|MOV             R0, R4|32-70
22466|code|POP             {R3-R5,PC}|56-189
22468|code|LDR             R3, [R0,#8]|131-104
22470|code|PUSH.W          {R4-R11,LR}|45-233-240-79
22474|code|SUB             SP, SP, #0x1C|135-176
22476|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x57D8)|223-248-212-162
22480|code|MOV             R4, R0|4-70
22482|code|STR             R1, [SP,#0x40+var_40]|0-145
22484|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
22486|code|CMP             R3, #0|0-43
22488|code|BEQ.W           loc_598E|0-240-217-128
22492|code|LDR             R3, [R4,#0xC]|227-104
22494|code|CMP             R3, #0|0-43
22496|code|BEQ.W           loc_5950|0-240-182-128
22500|code|BLX             vector_alloc|254-247-218-232
22504|code|MOV             R8, R0|128-70
22506|code|CMP             R0, #0|0-40
22508|code|BEQ             loc_5890|80-208
22510|code|LDR             R3, =(conf_ptr - 0x1BB8C)|174-75
22512|code|MOVS            R2, #0x1F|31-34
22514|code|LDR             R0, [R4,#8]|160-104
22516|code|LDR.W           R5, [R10,R3]; conf|90-248-3-80
22520|code|LDR             R1, [R5]|41-104
22522|code|BLX             path_discovery|253-247-12-239
22526|code|LDR             R3, [R4,#8]|163-104
22528|code|CBZ             R3, loc_5856|75-179
22530|code|LDR             R2, [R3]|26-104
22532|code|CMP             R2, #0|0-42
22534|code|BLE             loc_5856|38-221
22536|code|LDR             R3, [R3,#4]|91-104
22538|code|LDR             R7, [R3]|31-104
22540|code|CBZ             R7, loc_5856|31-179
22542|code|MOVS            R6, #0|0-38
22544|code|MOV             R9, R5|169-70
22546|code|B               loc_5836|16-224
22548|code|LDR             R0, [R4,#8]|160-104
22550|code|SUBS            R6, #1|1-62
22552|code|BLX             vector_del_slot|254-247-120-233
22556|code|MOV             R0, R7|56-70
22558|code|BLX             free_path|253-247-62-238
22562|code|LDR             R3, [R4,#8]|163-104
22564|code|ADDS            R6, #1|1-54
22566|code|CBZ             R3, loc_5856|179-177
22568|code|LDR             R2, [R3]|26-104
22570|code|CMP             R2, R6|178-66
22572|code|BLE             loc_5856|19-221
22574|code|LDR             R3, [R3,#4]|91-104
22576|code|LDR.W           R7, [R3,R6,LSL#2]|83-248-38-112
22580|code|CBZ             R7, loc_5856|127-177
22582|code|MOV             R1, R7|57-70
22584|code|LDR             R0, [R5]|40-104
22586|code|BLX             filter_path|254-247-182-233
22590|code|MOV             R1, R6|49-70
22592|code|CMP             R0, #0|0-40
22594|code|BGT             loc_5814|231-220
22596|code|LDR.W           R3, [R9]|217-248-0-48
22600|code|ADDS            R6, #1|1-54
22602|code|LDR             R3, [R3,#0x20]|27-106
22604|code|STR.W           R3, [R7,#0x318]|199-248-24-51
22608|code|LDR             R3, [R4,#8]|163-104
22610|code|CMP             R3, #0|0-43
22612|code|BNE             loc_5828|232-209
22614|code|LDR             R0, [R4,#0xC]|224-104
22616|code|BLX             dm_get_maps|253-247-0-239
22620|code|CBNZ            R0, loc_5890|192-185
22622|code|LDR             R3, [R4,#0xC]|227-104
22624|code|CBZ             R3, loc_589C|227-177
22626|code|LDR             R2, [R3]|26-104
22628|code|CBZ             R2, loc_589C|210-177
22630|code|LDR             R3, [R3,#4]|91-104
22632|code|LDR             R1, [R3]|25-104
22634|code|CBZ             R1, loc_589C|185-177
22636|code|MOV             R6, R0|6-70
22638|code|B               loc_5882|8-224
22640|code|LDR             R3, [R4,#0xC]|227-104
22642|code|CBZ             R3, loc_589C|155-177
22644|code|LDR             R2, [R3]|26-104
22646|code|CMP             R6, R2|150-66
22648|code|BCS             loc_589C|16-210
22650|code|LDR             R3, [R3,#4]|91-104
22652|code|LDR.W           R1, [R3,R6,LSL#2]|83-248-38-16
22656|code|CBZ             R1, loc_589C|97-177
22658|code|MOVS            R2, #1|1-34
22660|code|MOV             R0, R4|32-70
22662|code|ADD             R6, R2|22-68
22664|code|BLX             __setup_multipath|253-247-42-239
22668|code|CMP             R0, #0|0-40
22670|code|BEQ             loc_5870|239-208
22672|code|MOV.W           R11, #1|79-240-1-11
22676|code|MOV             R0, R11|88-70
22678|code|ADD             SP, SP, #0x1C|7-176
22680|code|POP.W           {R4-R11,PC}|189-232-240-143
22684|code|MOV             R0, R4|32-70
22686|code|MOV             R1, R8|65-70
22688|code|MOVS            R2, #0|0-34
22690|code|MOVS            R3, #1|1-35
22692|code|BLX             coalesce_paths|254-247-10-234
22696|code|MOV             R11, R0|131-70
22698|code|CMP             R0, #0|0-40
22700|code|BNE             loc_5890|240-209
22702|code|LDR.W           R9, [R4,#0xC]|212-248-12-144
22706|code|CMP.W           R9, #0|185-241-0-15
22710|code|BEQ.W           loc_59D8|0-240-143-128
22714|code|LDR.W           R3, [R9]|217-248-0-48
22718|code|CMP             R3, #0|0-43
22720|code|BEQ.W           loc_59D8|0-240-138-128
22724|code|LDR.W           R3, [R9,#4]|217-248-4-48
22728|code|LDR             R6, [R3]|30-104
22730|code|CMP             R6, #0|0-46
22732|code|BEQ.W           loc_59D8|0-240-132-128
22736|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|118-75
22738|code|MOV             R7, R11|95-70
22740|code|LDR             R2, =(aSCoalesceMap - 0x58E0); "%s: coalesce map\n"|118-74
22742|code|LDR             R1, =(aSReassignExist - 0x58E4); "%s: Reassign existing device-mapper dev"...|119-73
22744|code|LDR.W           R10, [R10,R3]; logsink|90-248-3-160
22748|code|ADD             R2, PC; "%s: coalesce map\n"|122-68
22750|code|LDR             R3, =(aSDevmapRemoved - 0x58EC); "%s devmap removed\n"|118-75
22752|code|ADD             R1, PC; "%s: Reassign existing device-mapper dev"...|121-68
22754|code|STR.W           R11, [SP,#0x40+var_2C]|205-248-20-176
22758|code|MOV             R11, R9|203-70
22760|code|ADD             R3, PC; "%s devmap removed\n"|123-68
22762|code|STR             R3, [SP,#0x40+var_34]|3-147
22764|code|LDR             R3, =(aSUnableToFlush - 0x58F8); "%s: unable to flush devmap\n"|115-75
22766|code|MOV             R9, R5|169-70
22768|code|STR             R4, [SP,#0x40+var_38]|2-148
22770|code|MOV             R5, R2|21-70
22772|code|ADD             R3, PC; "%s: unable to flush devmap\n"|123-68
22774|code|MOV             R4, R1|12-70
22776|code|STR             R3, [SP,#0x40+var_30]|4-147
22778|code|B               loc_5912|10-224
22780|code|LDR.W           R3, [R11]|219-248-0-48
22784|code|ADDS            R7, #1|1-55
22786|code|CMP             R7, R3|159-66
22788|code|BCS             loc_59D2|101-210
22790|code|LDR.W           R3, [R11,#4]|219-248-4-48
22794|code|LDR.W           R6, [R3,R7,LSL#2]|83-248-39-96
22798|code|CMP             R6, #0|0-46
22800|code|BEQ             loc_59D2|95-208
22802|code|LDR.W           R0, [R10]|218-248-0-0
22806|code|MOVS            R1, #3|3-33
22808|code|MOV             R2, R5|42-70
22810|code|LDR.W           R3, [R6,#0x16C]|214-248-108-49
22814|code|BLX             dlog|253-247-112-237
22818|code|MOV             R0, R8|64-70
22820|code|MOV             R1, R6|49-70
22822|code|BLX             find_mp_by_wwid|254-247-48-234
22826|code|CBZ             R0, loc_595E|192-177
22828|code|LDR.W           R3, [R9]|217-248-0-48
22832|code|LDR             R3, [R3,#0x7C]|219-111
22834|code|CMP             R3, #0|0-43
22836|code|BEQ             loc_58FC|226-208
22838|code|LDR.W           R0, [R10]|218-248-0-0
22842|code|MOVS            R1, #3|3-33
22844|code|MOV             R2, R4|34-70
22846|code|LDR.W           R3, [R6,#0x16C]|214-248-108-49
22850|code|BLX             dlog|253-247-94-237
22854|code|LDR.W           R0, [R6,#0x16C]|214-248-108-1
22858|code|BLX             dm_reassign|253-247-116-239
22862|code|B               loc_58FC|213-231
22864|code|BLX             vector_alloc|254-247-36-232
22868|code|STR             R0, [R4,#0xC]|224-96
22870|code|CMP             R0, #0|0-40
22872|code|BNE.W           loc_57E4|127-244-68-175
22876|code|B               loc_5890|152-231
22878|code|STR             R0, [SP,#0x40+var_3C]|1-144
22880|code|MOVS            R1, #1|1-33
22882|code|LDR.W           R0, [R6,#0x16C]|214-248-108-1
22886|code|BLX             _dm_flush_map|254-247-80-232
22890|code|LDR             R3, [SP,#0x40+var_3C]|1-155
22892|code|CBZ             R0, loc_599C|176-177
22894|code|MOV             R1, R3|25-70
22896|code|LDR.W           R0, [R10]|218-248-0-0
22900|code|LDR             R2, [SP,#0x40+var_30]|4-154
22902|code|LDR.W           R3, [R6,#0x16C]|214-248-108-49
22906|code|BLX             dlog|253-247-66-237
22910|code|LDR             R0, [SP,#0x40+var_38]|2-152
22912|code|MOV             R1, R6|49-70
22914|code|MOVS            R2, #1|1-34
22916|code|BLX             __setup_multipath|253-247-172-238
22920|code|CBZ             R0, loc_59B2|152-177
22922|code|SUBS            R7, #1|1-63
22924|code|B               loc_58FC|182-231
22926|code|BLX             vector_alloc|254-247-6-232
22930|code|STR             R0, [R4,#8]|160-96
22932|code|CMP             R0, #0|0-40
22934|code|BNE.W           loc_57DC|127-244-33-175
22938|code|B               loc_5890|121-231
22940|code|BLX             dm_lib_release|253-247-78-237
22944|code|LDR.W           R3, [R6,#0x16C]|214-248-108-49
22948|code|LDR.W           R0, [R10]|218-248-0-0
22952|code|MOVS            R1, #2|2-33
22954|code|LDR             R2, [SP,#0x40+var_34]|3-154
22956|code|BLX             dlog|253-247-40-237
22960|code|B               loc_58FC|164-231
22962|code|MOV             R0, R8|64-70
22964|code|BLX             vector_alloc_slot|253-247-74-239
22968|code|CMP             R0, #0|0-40
22970|code|BEQ.W           loc_5890|63-244-105-175
22974|code|MOV             R1, R6|49-70
22976|code|MOV             R0, R8|64-70
22978|code|BLX             vector_set_slot|254-247-154-233
22982|code|MOV             R1, R7|57-70
22984|code|MOV             R0, R11|88-70
22986|code|SUBS            R7, #1|1-63
22988|code|BLX             vector_del_slot|254-247-158-232
22992|code|B               loc_58FC|148-231
22994|code|LDR.W           R11, [SP,#0x40+var_2C]|221-248-20-176
22998|code|LDR             R4, [SP,#0x40+var_38]|2-156
23000|code|BLX             dm_lib_release|253-247-48-237
23004|code|LDR.W           R3, [R8]|216-248-0-48
23008|code|CBZ             R3, loc_5A36|75-179
23010|code|LDR.W           R3, [R8,#4]|216-248-4-48
23014|code|MOVS            R5, #0|0-37
23016|code|LDR             R0, [R3]|24-104
23018|code|CBZ             R0, loc_5A36|32-179
23020|code|BL              sub_51BC|255-247-230-251
23024|code|LDR.W           R3, [R8]|216-248-0-48
23028|code|ADDS            R5, #1|1-53
23030|code|CMP             R5, R3|157-66
23032|code|BCS             loc_5A06|5-210
23034|code|LDR.W           R2, [R8,#4]|216-248-4-32
23038|code|LDR.W           R0, [R2,R5,LSL#2]|82-248-37-0
23042|code|CMP             R0, #0|0-40
23044|code|BNE             loc_59EC|242-209
23046|code|CMP             R3, #0|0-43
23048|code|BLE             loc_5A36|21-221
23050|code|LDR.W           R3, [R8,#4]|216-248-4-48
23054|code|MOVS            R5, #0|0-37
23056|code|LDR             R6, [R3]|30-104
23058|code|CBNZ            R6, loc_5A20|46-185
23060|code|B               loc_5A36|15-224
23062|code|LDR.W           R3, [R8,#4]|216-248-4-48
23066|code|LDR.W           R6, [R3,R5,LSL#2]|83-248-37-96
23070|code|CBZ             R6, loc_5A36|86-177
23072|code|MOV             R0, R6|48-70
23074|code|ADDS            R5, #1|1-53
23076|code|BLX             remember_wwid|253-247-198-236
23080|code|MOV             R0, R6|48-70
23082|code|BLX             update_map_pr|253-247-92-239
23086|code|LDR.W           R3, [R8]|216-248-0-48
23090|code|CMP             R3, R5|171-66
23092|code|BGT             loc_5A16|239-220
23094|code|MOV             R0, R4|32-70
23096|code|BLX             remove_maps|253-247-180-238
23100|code|LDR             R0, [R4,#0xC]|224-104
23102|code|BLX             vector_free|253-247-26-239
23106|code|LDR.W           R3, [R8]|216-248-0-48
23110|code|STR.W           R8, [R4,#0xC]|196-248-12-128
23114|code|CMP             R3, #0|0-43
23116|code|BLE.W           loc_5894|127-247-34-175
23120|code|LDR.W           R3, [R8,#4]|216-248-4-48
23124|code|LDR             R6, [R3]|30-104
23126|code|CMP             R6, #0|0-46
23128|code|BEQ.W           loc_5894|63-244-28-175
23132|code|MOVS            R5, #0|0-37
23134|code|LDR             R7, [SP,#0x40+var_40]|0-159
23136|code|B               loc_5A7E|13-224
23138|code|LDR             R3, [R4,#0xC]|227-104
23140|code|CMP             R3, #0|0-43
23142|code|BEQ.W           loc_5894|63-244-21-175
23146|code|LDR             R2, [R3]|26-104
23148|code|CMP             R2, R5|170-66
23150|code|BLE.W           loc_5894|127-247-17-175
23154|code|LDR             R3, [R3,#4]|91-104
23156|code|LDR.W           R6, [R3,R5,LSL#2]|83-248-37-96
23160|code|CMP             R6, #0|0-46
23162|code|BEQ.W           loc_5894|63-244-11-175
23166|code|MOVS            R2, #1|1-34
23168|code|MOV             R0, R4|32-70
23170|code|MOV             R1, R6|49-70
23172|code|ADD             R5, R2|21-68
23174|code|BLX             __setup_multipath|253-247-44-238
23178|code|CMP             R0, #0|0-40
23180|code|BNE.W           loc_5890|127-244-0-175
23184|code|CMP             R7, #0|0-47
23186|code|BEQ             loc_5A62|230-208
23188|code|MOV             R0, R6|48-70
23190|code|MOV             R1, R4|33-70
23192|code|BLX             start_waiter_thread|253-247-182-237
23196|code|CMP             R0, #0|0-40
23198|code|BEQ             loc_5A62|224-208
23200|code|B               loc_5890|246-230
23202|data|ALIGN 4|0-191
23204|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x57D8|180-99-1-0
23208|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
23212|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
23216|data|DCD aSCoalesceMap - 0x58E0; "%s: coalesce map\n"|88-69-0-0
23220|data|DCD aSReassignExist - 0x58E4; "%s: Reassign existing device-mapper dev"...|36-67-0-0
23224|data|DCD aSDevmapRemoved - 0x58EC; "%s devmap removed\n"|124-69-0-0
23228|data|DCD aSUnableToFlush - 0x58F8; "%s: unable to flush devmap\n"|84-69-0-0
23232|code|PUSH            {R3-R7,LR}|248-181
23234|code|MOV             R4, R0|4-70
23236|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x5ACC)|27-77
23238|code|LDR             R3, =(conf_ptr - 0x1BB8C)|28-75
23240|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
23242|code|LDR             R2, [R0,#0xC]|194-104
23244|code|LDR             R6, [R5,R3]; conf|238-88
23246|code|LDR             R7, [R6]|55-104
23248|code|CBZ             R2, loc_5AD6|10-177
23250|code|LDR             R3, [R2]|19-104
23252|code|CBNZ            R3, loc_5B2E|91-187
23254|code|LDR             R0, [R4,#8]|160-104
23256|code|CBZ             R0, loc_5ADE|8-177
23258|code|LDR             R2, [R0]|2-104
23260|code|CBNZ            R2, loc_5B26|26-187
23262|code|MOVS            R3, #0|0-35
23264|code|STR             R3, [R4,#8]|163-96
23266|code|STR             R3, [R6]|51-96
23268|code|BLX             tzset|253-247-6-237
23272|code|LDR             R3, =(udev_ptr - 0x1BB8C)|20-75
23274|code|LDR             R0, =(aEtcMultipathCo - 0x5AF2); "/etc/multipath.conf"|21-72
23276|code|LDR             R3, [R5,R3]; udev|235-88
23278|code|ADD             R0, PC; "/etc/multipath.conf"|120-68
23280|code|LDR             R1, [R3]|25-104
23282|code|BLX             load_config|254-247-62-233
23286|code|MOV             R5, R0|5-70
23288|code|CBZ             R0, loc_5AFE|8-177
23290|code|MOVS            R0, #1|1-32
23292|code|POP             {R3-R7,PC}|248-189
23294|code|LDR             R0, [R6]|48-104
23296|code|LDR             R1, =(aMultipath - 0x5B08); "multipath"|16-73
23298|code|ADDS            R0, #0x88|136-48
23300|code|ADD             R1, PC; "multipath"|121-68
23302|code|BLX             dm_drv_version|253-247-160-236
23306|code|LDR             R3, [R6]|51-104
23308|code|LDR             R6, [R7]|62-104
23310|code|MOVS            R2, #1|1-34
23312|code|MOV             R1, R2|17-70
23314|code|MOV             R0, R4|32-70
23316|code|STR             R2, [R3,#0x50]|26-101
23318|code|STR             R6, [R3]|30-96
23320|code|BL              sub_57C4|255-247-84-254
23324|code|MOV             R0, R7|56-70
23326|code|BLX             free_config|253-247-56-236
23330|code|MOV             R0, R5|40-70
23332|code|POP             {R3-R7,PC}|248-189
23334|code|MOVS            R1, #1|1-33
23336|code|BLX             free_pathvec|253-247-128-237
23340|code|B               loc_5ADE|215-231
23342|code|BLX             remove_maps_and_stop_waiters|254-247-90-232
23346|code|B               loc_5AD6|208-231
23348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5ACC|192-96-1-0
23352|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
23356|data|DCD udev_ptr - 0x1BB8C|16-4-0-0
23360|data|DCD aEtcMultipathCo - 0x5AF2; "/etc/multipath.conf"|138-67-0-0
23364|data|DCD aMultipath - 0x5B08; "multipath"|216-64-0-0
23368|code|PUSH            {R3-R7,LR}|248-181
23370|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x5B52)|36-76
23372|code|LDR             R3, =(reconfig_sig_ptr - 0x1BB8C)|36-75
23374|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
23376|code|LDR             R6, [R4,R3]; reconfig_sig|230-88
23378|code|LDR             R3, [R6]|51-104
23380|code|CBZ             R3, loc_5B60|35-177
23382|code|LDR             R3, =(running_state_ptr - 0x1BB8C)|35-75
23384|code|LDR             R3, [R4,R3]; running_state|227-88
23386|code|LDR             R3, [R3]|27-104
23388|code|CMP             R3, #3|3-43
23390|code|BEQ             loc_5B98|27-208
23392|code|LDR             R3, =(log_reset_sig_ptr - 0x1BB8C)|33-75
23394|code|LDR             R5, [R4,R3]; log_reset_sig|229-88
23396|code|LDR             R3, [R5]|43-104
23398|code|CBZ             R3, loc_5B90|155-177
23400|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|32-75
23402|code|MOVS            R1, #2|2-33
23404|code|LDR             R2, =(aResetLogSignal - 0x5B74); "reset log (signal)\n"|32-74
23406|code|LDR             R3, [R4,R3]; logsink|227-88
23408|code|ADD             R2, PC; "reset log (signal)\n"|122-68
23410|code|LDR             R0, [R3]|24-104
23412|code|BLX             dlog|253-247-68-236
23416|code|LDR             R3, =(logq_lock_ptr - 0x1BB8C)|30-75
23418|code|LDR             R4, [R4,R3]; logq_lock|228-88
23420|code|MOV             R0, R4; mutex|32-70
23422|code|BLX             pthread_mutex_lock|253-247-48-238
23426|code|LDR             R0, =(aMultipathd - 0x5B88); "multipathd"|29-72
23428|code|ADD             R0, PC; "multipathd"|120-68
23430|code|BLX             log_reset|253-247-192-237
23434|code|MOV             R0, R4; mutex|32-70
23436|code|BLX             pthread_mutex_unlock|253-247-242-237
23440|code|MOVS            R3, #0|0-35
23442|code|STR             R3, [R6]|51-96
23444|code|STR             R3, [R5]|43-96
23446|code|POP             {R3-R7,PC}|248-189
23448|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|20-75
23450|code|MOVS            R1, #2|2-33
23452|code|LDR             R2, =(aReconfigureSig - 0x5BA4); "reconfigure (signal)\n"|23-74
23454|code|LDR             R3, [R4,R3]; logsink|227-88
23456|code|ADD             R2, PC; "reconfigure (signal)\n"|122-68
23458|code|LDR             R0, [R3]|24-104
23460|code|BLX             dlog|253-247-44-236
23464|code|LDR             R3, =(gvecs_ptr - 0x1BB8C)|21-75
23466|code|LDR             R7, [R4,R3]; gvecs|231-88
23468|code|LDR             R5, [R7]|61-104
23470|code|LDM.W           R5, {R0,R3}; mutex|149-232-9-0
23474|code|ADDS            R3, #1|1-51
23476|code|STR             R3, [R5,#4]|107-96
23478|code|BLX             pthread_mutex_lock|253-247-20-238
23482|code|BLX             pthread_testcancel|253-247-210-239
23486|code|LDR             R0, [R7]|56-104
23488|code|BL              sub_5AC0|255-247-126-255
23492|code|MOV             R0, R5|40-70
23494|code|BLX             cleanup_lock|253-247-144-236
23498|code|B               loc_5B60|201-231
23500|code|MOV             R4, R0|4-70
23502|code|MOV             R0, R5|40-70
23504|code|BLX             cleanup_lock|253-247-138-236
23508|code|MOV             R0, R4|32-70
23510|code|BLX             _Unwind_Resume|254-247-102-232
23514|data|ALIGN 4|0-191
23516|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5B52|58-96-1-0
23520|data|DCD reconfig_sig_ptr - 0x1BB8C|0-4-0-0
23524|data|DCD running_state_ptr - 0x1BB8C|216-3-0-0
23528|data|DCD log_reset_sig_ptr - 0x1BB8C|124-3-0-0
23532|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
23536|data|DCD aResetLogSignal - 0x5B74; "reset log (signal)\n"|52-67-0-0
23540|data|DCD logq_lock_ptr - 0x1BB8C|20-4-0-0
23544|data|DCD aMultipathd - 0x5B88; "multipathd"|52-67-0-0
23548|data|DCD aReconfigureSig - 0x5BA4; "reconfigure (signal)\n"|236-66-0-0
23552|data|DCD gvecs_ptr - 0x1BB8C|100-3-0-0
23556|code|PUSH.W          {R4-R8,LR}|45-233-240-65
23560|code|SUB             SP, SP, #0x38|142-176
23562|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x5C14)|32-77
23564|code|MOV             R7, R0|7-70
23566|code|LDR             R2, =(__stack_chk_guard_ptr - 0x1BB8C)|32-74
23568|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
23570|code|LDR.W           R3, [R0,#0x5B8]|208-248-184-53
23574|code|LDR.W           R8, [R5,R2]; __stack_chk_guard|85-248-2-128
23578|code|LDR.W           R3, [R3,#0x1A4]|211-248-164-49
23582|code|LDR.W           R2, [R8]|216-248-0-32
23586|code|STR             R2, [SP,#0x50+var_1C]|13-146
23588|code|CBZ             R3, loc_5C82|107-179
23590|code|ADD             R6, SP, #0x50+attr|4-174
23592|code|MOV             R0, R6; attr|48-70
23594|code|BLX             pthread_attr_init|253-247-94-239
23598|code|MOVS            R1, #0; detachstate|0-33
23600|code|MOV             R0, R6; attr|48-70
23602|code|BLX             pthread_attr_setdetachstate|253-247-28-236
23606|code|LDR             R2, =(mpath_pr_event_handler_fn_ptr - 0x1BB8C)|23-74
23608|code|ADD             R0, SP, #0x50+newthread; newthread|3-168
23610|code|MOVS            R1, #0; attr|0-33
23612|code|MOV             R3, R7; arg|59-70
23614|code|LDR             R2, [R5,R2]; mpath_pr_event_handler_fn ; start_routine|170-88
23616|code|BLX             pthread_create|253-247-242-237
23620|code|MOV             R4, R0|4-70
23622|code|CBNZ            R0, loc_5C68|120-185
23624|code|MOV             R0, R6; attr|48-70
23626|code|BLX             pthread_attr_destroy|253-247-234-239
23630|code|LDR             R0, [SP,#0x50+newthread]; th|3-152
23632|code|MOV             R1, R4; thread_return|33-70
23634|code|BLX             pthread_join|254-247-136-232
23638|code|MOV             R0, R4|32-70
23640|code|LDR             R2, [SP,#0x50+var_1C]|13-154
23642|code|LDR.W           R3, [R8]|216-248-0-48
23646|code|CMP             R2, R3|154-66
23648|code|BNE             loc_5C88|18-209
23650|code|ADD             SP, SP, #0x38 ; '8'|14-176
23652|code|POP.W           {R4-R8,PC}|189-232-240-129
23656|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|11-72
23658|code|MOV             R3, R7|59-70
23660|code|LDR             R2, =(aSErrorReturnCo - 0x5C76); "%s: ERROR; return code from pthread_cre"...|11-74
23662|code|MOVS            R1, #0|0-33
23664|code|LDR             R0, [R5,R0]; logsink|40-88
23666|code|ADD             R2, PC; "%s: ERROR; return code from pthread_cre"...|122-68
23668|code|STR             R4, [SP,#0x50+var_50]|0-148
23670|code|LDR             R0, [R0]|0-104
23672|code|BLX             dlog|253-247-194-235
23676|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23680|code|B               loc_5C58|234-231
23682|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
23686|code|B               loc_5C58|231-231
23688|code|BLX             __stack_chk_fail|253-247-16-239
23692|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5C14|120-95-1-0
23696|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
23700|data|DCD mpath_pr_event_handler_fn_ptr - 0x1BB8C|148-3-0-0
23704|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
23708|data|DCD aSErrorReturnCo - 0x5C76; "%s: ERROR; return code from pthread_cre"...|82-66-0-0
23712|code|PUSH.W          {R4-R11,LR}|45-233-240-79
23716|code|SUB.W           SP, SP, #0x10A0|173-245-133-93
23720|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x5CB4)|169-79
23722|code|SUB             SP, SP, #0xC|131-176
23724|code|LDR             R3, =(__stack_chk_guard_ptr - 0x1BB8C)|169-75
23726|code|ADD             R4, SP, #0x10D0+s|9-172
23728|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
23730|code|ADD.W           LR, SP, #0x10D0+var_30|13-245-133-94
23734|code|ADD.W           LR, LR, #4|14-241-4-14
23738|code|ADD.W           R8, SP, #0x10D0+var_102C|13-241-164-8
23742|code|LDR             R3, [R7,R3]; __stack_chk_guard|251-88
23744|code|MOV             R5, R0|5-70
23746|code|MOVS            R2, #0x80; n|128-34
23748|code|MOV             R6, R1|14-70
23750|code|MOV             R0, R4; s|32-70
23752|code|MOVS            R1, #0; c|0-33
23754|code|STR             R3, [SP,#0x10D0+var_10C8]|2-147
23756|code|ADD.W           R9, R5, #0x14C|5-245-166-121
23760|code|LDR             R3, [R3]|27-104
23762|code|STR.W           R3, [LR]|206-248-0-48
23766|code|BLX             memset|253-247-116-236
23770|code|MOVS            R1, #0; c|0-33
23772|code|MOV.W           R2, #0x1000; n|79-244-128-82
23776|code|MOV             R0, R8; s|64-70
23778|code|BLX             memset|253-247-110-236
23782|code|MOV             R0, R4; s1|32-70
23784|code|MOV             R1, R9; s2|73-70
23786|code|MOVS            R2, #0x80; n|128-34
23788|code|BLX             memcmp|253-247-178-235
23792|code|CBNZ            R0, loc_5D2E|232-185
23794|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|153-76
23796|code|MOV             R1, R0|1-70
23798|code|LDR             R2, =(aSFailedToGetPa - 0x5D00); "%s: failed to get path uid\n"|153-74
23800|code|MOV             R3, R5|43-70
23802|code|LDR             R0, [R7,R4]; logsink|56-89
23804|code|ADD             R2, PC; "%s: failed to get path uid\n"|122-68
23806|code|LDR             R0, [R0]|0-104
23808|code|BLX             dlog|253-247-126-235
23812|code|LDR             R1, =(aFailedToAddPat - 0x5D0C); "failed to add path"|150-73
23814|code|MOV             R0, R5|40-70
23816|code|ADD             R1, PC; "failed to add path"|121-68
23818|code|BLX             orphan_path|253-247-114-235
23822|code|MOVS            R7, #1|1-39
23824|code|ADD.W           R3, SP, #0x10D0+var_30|13-245-133-83
23828|code|MOV             R0, R7|56-70
23830|code|ADDS            R3, #4|4-51
23832|code|LDR             R2, [R3]|26-104
23834|code|LDR             R3, [SP,#0x10D0+var_10C8]|2-155
23836|code|LDR             R3, [R3]|27-104
23838|code|CMP             R2, R3|154-66
23840|code|BNE.W           loc_5F4A|64-240-19-129
23844|code|ADD.W           SP, SP, #0x10A0|13-245-133-93
23848|code|ADD             SP, SP, #0xC|3-176
23850|code|POP.W           {R4-R11,PC}|189-232-240-143
23854|code|MOV             R1, R9|73-70
23856|code|LDR             R0, [R6,#0xC]|240-104
23858|code|BLX             find_mp_by_wwid|254-247-42-232
23862|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|136-75
23864|code|MOVS            R2, #0|0-34
23866|code|STR             R2, [SP,#0x10D0+var_10B8]|6-146
23868|code|LDR             R2, =(aSCreatingNewMa - 0x5D4A); "%s: creating new map\n"|137-74
23870|code|ADD.W           R11, R5, #0x310|5-245-68-123
23874|code|MOV.W           R10, #3|79-240-3-10
23878|code|ADD             R2, PC; "%s: creating new map\n"|122-68
23880|code|STR             R2, [SP,#0x10D0+var_10B4]|7-146
23882|code|STR.W           R0, [R5,#0x5B8]|197-248-184-5
23886|code|MOV             R4, R0|4-70
23888|code|LDR.W           R9, [R7,R3]; logsink|87-248-3-144
23892|code|LDR             R3, =(aSAdoptingAllPa - 0x5D5A); "%s: adopting all paths for path %s\n"|132-75
23894|code|ADD             R3, PC; "%s: adopting all paths for path %s\n"|123-68
23896|code|STR             R3, [SP,#0x10D0+var_10C0]|4-147
23898|code|LDR             R3, =(aSFailedInDomap_0 - 0x5D60); "%s: failed in domap for addition of new"...|132-75
23900|code|ADD             R3, PC; "%s: failed in domap for addition of new"...|123-68
23902|code|STR             R3, [SP,#0x10D0+var_10C4]|3-147
23904|code|LDR             R3, =(aSUevAddPathSle - 0x5D66); "%s: uev_add_path sleep\n"|131-75
23906|code|ADD             R3, PC; "%s: uev_add_path sleep\n"|123-68
23908|code|STR             R3, [SP,#0x10D0+var_10BC]|5-147
23910|code|LDRD.W          R2, R3, [R11]|219-233-0-35
23914|code|CMP             R4, #0|0-44
23916|code|BEQ             loc_5E2C|94-208
23918|code|ORRS.W          R1, R2, R3|82-234-3-1
23922|code|BEQ.W           loc_5EF4|0-240-191-128
23926|code|ADD.W           R1, R4, #0x158|4-245-172-113
23930|code|LDRD.W          R0, R1, [R1]|209-233-0-1
23934|code|CMP             R3, R1|139-66
23936|code|IT EQ|8-191
23938|code|CMPEQ           R2, R0|130-66
23940|code|BNE.W           loc_5F26|64-240-207-128
23944|code|LDR.W           R0, [R9]|217-248-0-0
23948|code|MOVS            R1, #4|4-33
23950|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
23954|code|LDR             R2, [SP,#0x10D0+var_10C0]|4-154
23956|code|STR             R5, [SP,#0x10D0+var_10D0]|0-149
23958|code|BLX             dlog|253-247-52-235
23962|code|LDR             R0, [R6,#8]|176-104
23964|code|MOV             R1, R4|33-70
23966|code|MOVS            R2, #1|1-34
23968|code|BLX             adopt_paths|253-247-212-239
23972|code|MOV             R7, R0|7-70
23974|code|CMP             R0, #0|0-40
23976|code|BNE             loc_5D04|172-209
23978|code|MOV             R0, R4|32-70
23980|code|MOV             R1, R6|49-70
23982|code|MOV             R2, R7|58-70
23984|code|BLX             verify_paths|253-247-170-237
23988|code|MOVS            R3, #3|3-35
23990|code|STR.W           R7, [R4,#0x134]|196-248-52-113
23994|code|STR.W           R3, [R4,#0x114]|196-248-20-49
23998|code|MOV             R0, R5|40-70
24000|code|BL              sub_5C04|255-247-32-255
24004|code|MOV             R0, R4|32-70
24006|code|MOV             R1, R8|65-70
24008|code|MOV.W           R2, #0x1000|79-244-128-82
24012|code|BLX             setup_map|253-247-162-237
24016|code|MOV             R7, R0|7-70
24018|code|CMP             R0, #0|0-40
24020|code|BNE             loc_5E5E|67-209
24022|code|MOV             R0, R4|32-70
24024|code|MOV             R1, R8|65-70
24026|code|BLX             domap|253-247-186-236
24030|code|CMP             R0, #0|0-40
24032|code|BGT             loc_5E8A|83-220
24034|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
24038|code|MOV             R1, R7|57-70
24040|code|LDR.W           R0, [R9]|217-248-0-0
24044|code|LDR             R2, [SP,#0x10D0+var_10C4]|3-154
24046|code|STR             R5, [SP,#0x10D0+var_10D0]|0-149
24048|code|BLX             dlog|253-247-6-235
24052|code|LDR.W           R3, [R4,#0x114]|212-248-20-49
24056|code|CMP             R3, #3|3-43
24058|code|BNE             loc_5E72|58-209
24060|code|ADD.W           R10, R10, #0xFFFFFFFF|10-241-255-58
24064|code|MOV             R1, R7|57-70
24066|code|CMP.W           R10, #0xFFFFFFFF|186-241-255-63
24070|code|LDR.W           R0, [R9]|217-248-0-0
24074|code|BEQ             loc_5E7E|56-208
24076|code|LDR             R2, [SP,#0x10D0+var_10BC]|5-154
24078|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
24082|code|BLX             dlog|253-247-246-234
24086|code|MOVS            R0, #1; seconds|1-32
24088|code|BLX             sleep|253-247-138-238
24092|code|MOV             R0, R4|32-70
24094|code|LDR             R1, [R6,#8]|177-104
24096|code|BLX             update_mpp_paths|253-247-34-236
24100|code|LDRD.W          R2, R3, [R11]|219-233-0-35
24104|code|CMP             R4, #0|0-44
24106|code|BNE             loc_5D6E|160-209
24108|code|ORRS            R3, R2|19-67
24110|code|LDR.W           R0, [R9]|217-248-0-0
24114|code|BEQ.W           loc_5F3C|0-240-131-128
24118|code|MOVS            R1, #4|4-33
24120|code|LDR             R2, [SP,#0x10D0+var_10B4]|7-154
24122|code|MOV             R3, R5|43-70
24124|code|BLX             dlog|253-247-224-234
24128|code|MOV             R0, R6|48-70
24130|code|MOV             R1, R5|41-70
24132|code|MOVS            R2, #1|1-34
24134|code|BLX             add_map_with_path|253-247-154-239
24138|code|MOV             R4, R0|4-70
24140|code|CMP             R0, #0|0-40
24142|code|BEQ.W           loc_5D04|63-244-89-175
24146|code|MOVS            R3, #1|1-35
24148|code|STR             R3, [SP,#0x10D0+var_10B8]|6-147
24150|code|MOVS            R3, #6|6-35
24152|code|STR.W           R3, [R0,#0x114]|192-248-20-49
24156|code|B               loc_5DBE|175-231
24158|code|LDR             R2, =(aSFailedToSetup_0 - 0x5E6E); "%s: failed to setup map for addition of"...|69-74
24160|code|MOVS            R1, #0|0-33
24162|code|LDR.W           R0, [R9]|217-248-0-0
24166|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
24170|code|ADD             R2, PC; "%s: failed to setup map for addition of"...|122-68
24172|code|STR             R5, [SP,#0x10D0+var_10D0]|0-149
24174|code|BLX             dlog|253-247-200-234
24178|code|MOV             R0, R4|32-70
24180|code|MOV             R1, R6|49-70
24182|code|MOVS            R2, #1|1-34
24184|code|BLX             remove_map|253-247-18-238
24188|code|B               loc_5D04|66-231
24190|code|LDR             R2, =(aSGivingUpReloa - 0x5E88); "%s: giving up reload\n"|62-74
24192|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
24196|code|ADD             R2, PC; "%s: giving up reload\n"|122-68
24198|code|BLX             dlog|253-247-188-234
24202|code|BLX             dm_lib_release|253-247-216-234
24206|code|MOV             R0, R6|48-70
24208|code|MOV             R1, R4|33-70
24210|code|MOVS            R2, #1|1-34
24212|code|BLX             __setup_multipath|253-247-36-236
24216|code|MOV             R7, R0|7-70
24218|code|CMP             R0, #0|0-40
24220|code|BNE.W           loc_5D04|127-244-50-175
24224|code|MOV             R0, R4|32-70
24226|code|BL              sub_51BC|255-247-139-249
24230|code|LDR.W           R3, [R4,#0x114]|212-248-20-49
24234|code|CMP             R3, #6|6-43
24236|code|BEQ             loc_5EC2|9-208
24238|code|LDR             R2, [SP,#0x10D0+var_10B8]|6-154
24240|code|CMP             R3, #1|1-43
24242|code|ITE NE|20-191
24244|code|MOVNE           R2, #0|0-34
24246|code|ANDEQ.W         R2, R2, #1|2-240-1-2
24250|code|CBZ             R2, loc_5ECE|66-177
24252|code|LDR.W           R3, [R4,#0x188]|212-248-136-49
24256|code|CBNZ            R3, loc_5ECE|43-185
24258|code|MOV             R0, R4|32-70
24260|code|MOV             R1, R6|49-70
24262|code|BLX             start_waiter_thread|253-247-160-235
24266|code|CMP             R0, #0|0-40
24268|code|BNE             loc_5E72|209-209
24270|code|CMP.W           R10, #0xFFFFFFFF|186-241-255-63
24274|code|BEQ.W           loc_5D0E|63-244-28-175
24278|code|LDR.W           R0, [R9]|217-248-0-0
24282|code|ADD.W           R3, R5, #0x100|5-245-128-115
24286|code|STR             R3, [SP,#0x10D0+var_10D0]|0-147
24288|code|MOVS            R1, #2|2-33
24290|code|LDR.W           R4, [R4,#0x16C]|212-248-108-65
24294|code|MOV             R3, R5|43-70
24296|code|LDR             R2, =(aSSPathAddedToD - 0x5EF0); "%s [%s]: path added to devmap %s\n"|36-74
24298|code|STR             R4, [SP,#0x10D0+var_10CC]|1-148
24300|code|ADD             R2, PC; "%s [%s]: path added to devmap %s\n"|122-68
24302|code|BLX             dlog|253-247-136-234
24306|code|B               loc_5D10|13-231
24308|code|LDR             R2, =(aSFailedToAddNe - 0x5F04); "%s: failed to add new path %s, device s"...|34-74
24310|code|MOVS            R1, #0|0-33
24312|code|LDR.W           R0, [R9]|217-248-0-0
24316|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
24320|code|ADD             R2, PC; "%s: failed to add new path %s, device s"...|122-68
24322|code|STR             R5, [SP,#0x10D0+var_10D0]|0-149
24324|code|BLX             dlog|253-247-124-234
24328|code|MOV             R1, R5|41-70
24330|code|LDR             R0, [R6,#8]|176-104
24332|code|BLX             find_slot|253-247-246-235
24336|code|ADDS            R3, R0, #1|67-28
24338|code|MOV             R1, R0|1-70
24340|code|BEQ             loc_5F1C|2-208
24342|code|LDR             R0, [R6,#8]|176-104
24344|code|BLX             vector_del_slot|253-247-248-237
24348|code|MOV             R0, R5|40-70
24350|code|MOVS            R7, #1|1-39
24352|code|BLX             free_path|253-247-188-234
24356|code|B               loc_5D10|244-230
24358|code|LDR             R2, =(aSFailedToAddNe_0 - 0x5F36); "%s: failed to add new path %s, device s"...|23-74
24360|code|MOVS            R1, #0|0-33
24362|code|LDR.W           R0, [R9]|217-248-0-0
24366|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
24370|code|ADD             R2, PC; "%s: failed to add new path %s, device s"...|122-68
24372|code|STR             R5, [SP,#0x10D0+var_10D0]|0-149
24374|code|BLX             dlog|253-247-100-234
24378|code|B               loc_5F08|229-231
24380|code|LDR             R2, =(aSFailedToCreat - 0x5F46); "%s: failed to create new map, device si"...|18-74
24382|code|MOV             R1, R4|33-70
24384|code|MOV             R3, R5|43-70
24386|code|ADD             R2, PC; "%s: failed to create new map, device si"...|122-68
24388|code|BLX             dlog|253-247-92-234
24392|code|B               loc_5F08|222-231
24394|code|BLX             __stack_chk_fail|253-247-176-237
24398|data|ALIGN 0x10|0-191
24400|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5CB4|216-94-1-0
24404|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
24408|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
24412|data|DCD aSFailedToGetPa - 0x5D00; "%s: failed to get path uid\n"|252-65-0-0
24416|data|DCD aFailedToAddPat - 0x5D0C; "failed to add path"|36-67-0-0
24420|data|DCD aSCreatingNewMa - 0x5D4A; "%s: creating new map\n"|38-66-0-0
24424|data|DCD aSAdoptingAllPa - 0x5D5A; "%s: adopting all paths for path %s\n"|190-65-0-0
24428|data|DCD aSFailedInDomap_0 - 0x5D60; "%s: failed in domap for addition of new"...|96-66-0-0
24432|data|DCD aSUevAddPathSle - 0x5D66; "%s: uev_add_path sleep\n"|142-66-0-0
24436|data|DCD aSFailedToSetup_0 - 0x5E6E; "%s: failed to setup map for addition of"...|26-65-0-0
24440|data|DCD aSGivingUpReloa - 0x5E88; "%s: giving up reload\n"|40-66-0-0
24444|data|DCD aSSPathAddedToD - 0x5EF0; "%s [%s]: path added to devmap %s\n"|28-65-0-0
24448|data|DCD aSFailedToAddNe - 0x5F04; "%s: failed to add new path %s, device s"...|64-65-0-0
24452|data|DCD aSFailedToAddNe_0 - 0x5F36; "%s: failed to add new path %s, device s"...|66-65-0-0
24456|data|DCD aSFailedToCreat - 0x5F46; "%s: failed to create new map, device si"...|246-63-0-0
24460|code|PUSH.W          {R4-R10,LR}|45-233-240-71
24464|code|MOV             R8, R1|136-70
24466|code|LDR.W           R4, =(_GLOBAL_OFFSET_TABLE_ - 0x5FA2)|223-248-32-68
24470|code|SUB             SP, SP, #0x28|138-176
24472|code|LDR.W           R5, =(__stack_chk_guard_ptr - 0x1BB8C)|223-248-28-84
24476|code|MOV             R6, R0|6-70
24478|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
24480|code|LDR.W           R7, [R0,#0xA0C]|208-248-12-122
24484|code|LDR.W           R1, =(aBlock - 0x5FAE); "/block/"|223-248-20-20
24488|code|LDR             R5, [R4,R5]; __stack_chk_guard|101-89
24490|code|ADD             R1, PC; "/block/"|121-68
24492|code|MOV             R0, R7; haystack|56-70
24494|code|LDR             R3, [R5]|43-104
24496|code|STR             R3, [SP,#0x48+var_24]|9-147
24498|code|BLX             strstr|253-247-0-237
24502|code|CMP             R0, #0|0-40
24504|code|BEQ.W           loc_6118|0-240-174-128
24508|code|ADD.W           R9, SP, #0x48+var_3C|13-241-12-9
24512|code|LDR             R1, =(aBlock10s - 0x5FC8); "/block/%10s"|255-73
24514|code|MOV             R10, R0|130-70
24516|code|ADD             R1, PC; "/block/%10s"|121-68
24518|code|MOV             R2, R9|74-70
24520|code|BLX             __isoc99_sscanf|253-247-160-234
24524|code|CMP             R0, #1|1-40
24526|code|BEQ             loc_5FF4|17-208
24528|code|LDR             R6, =(logsink_ptr - 0x1BB8C)|252-78
24530|code|MOV             R3, R7|59-70
24532|code|LDR             R2, =(aDiscardEventOn - 0x5FDE); "discard event on %s\n"|252-74
24534|code|MOVS            R1, #4|4-33
24536|code|LDR             R0, [R4,R6]; logsink|160-89
24538|code|ADD             R2, PC; "discard event on %s\n"|122-68
24540|code|LDR             R0, [R0]|0-104
24542|code|BLX             dlog|253-247-16-234
24546|code|MOVS            R0, #0|0-32
24548|code|LDR             R2, [SP,#0x48+var_24]|9-154
24550|code|LDR             R3, [R5]|43-104
24552|code|CMP             R2, R3|154-66
24554|code|BNE.W           loc_62F4|64-240-131-129
24558|code|ADD             SP, SP, #0x28 ; '('|10-176
24560|code|POP.W           {R4-R10,PC}|189-232-240-135
24564|code|LDR             R1, =(aBlock1010s - 0x6000); "/block/%10[^/]/%10s"|245-73
24566|code|MOV             R0, R10|80-70
24568|code|MOV             R2, R9|74-70
24570|code|ADD             R3, SP, #0x48+var_30|6-171
24572|code|ADD             R1, PC; "/block/%10[^/]/%10s"|121-68
24574|code|BLX             __isoc99_sscanf|253-247-134-234
24578|code|CMP             R0, #2|2-40
24580|code|BEQ             loc_5FD0|228-208
24582|code|LDM.W           R8, {R0,R3}; mutex|152-232-9-0
24586|code|ADDS            R3, #1|1-51
24588|code|STR.W           R3, [R8,#4]|200-248-4-48
24592|code|BLX             pthread_mutex_lock|253-247-230-235
24596|code|BLX             pthread_testcancel|253-247-164-237
24600|code|LDR.W           R7, [R6,#0xA14]|214-248-20-122
24604|code|MOVS            R2, #3; n|3-34
24606|code|LDR             R1, =(aDm - 0x6026); "dm-"|236-73
24608|code|MOV             R0, R7; s1|56-70
24610|code|ADD             R1, PC; "dm-"|121-68
24612|code|BLX             strncmp|253-247-20-238
24616|code|CBNZ            R0, loc_605C|192-185
24618|code|LDR.W           R9, [R6,#0xA10]|214-248-16-154
24622|code|MOVS            R2, #6; n|6-34
24624|code|LDR             R1, =(aChange - 0x6038); "change"|232-73
24626|code|MOV             R0, R9; s1|72-70
24628|code|ADD             R1, PC; "change"|121-68
24630|code|BLX             strncmp|253-247-12-238
24634|code|CMP             R0, #0|0-40
24636|code|BEQ             loc_612C|118-208
24638|code|LDR             R1, =(aRemove - 0x6048); "remove"|230-73
24640|code|MOV             R0, R9; s1|72-70
24642|code|MOVS            R2, #6; n|6-34
24644|code|ADD             R1, PC; "remove"|121-68
24646|code|BLX             strncmp|253-247-4-238
24650|code|CMP             R0, #0|0-40
24652|code|BEQ.W           loc_6160|0-240-136-128
24656|code|MOVS            R4, #0|0-36
24658|code|MOV             R0, R8|64-70
24660|code|BLX             cleanup_lock|253-247-72-234
24664|code|MOV             R0, R4|32-70
24666|code|B               loc_5FE4|195-231
24668|code|LDR             R3, =(conf_ptr - 0x1BB8C)|223-75
24670|code|MOV             R2, R7|58-70
24672|code|LDR.W           R9, [R4,R3]; conf|84-248-3-144
24676|code|LDR.W           R3, [R9]|217-248-0-48
24680|code|LDR.W           R0, [R3,#0xDC]|211-248-220-0
24684|code|LDR.W           R1, [R3,#0xEC]|211-248-236-16
24688|code|BLX             filter_devnode|253-247-204-233
24692|code|CMP             R0, #0|0-40
24694|code|BGT             loc_6050|235-220
24696|code|LDR.W           R7, [R6,#0xA10]|214-248-16-122
24700|code|MOVS            R2, #3; n|3-34
24702|code|LDR             R1, =(aAdd - 0x6086); "add"|216-73
24704|code|MOV             R0, R7; s1|56-70
24706|code|ADD             R1, PC; "add"|121-68
24708|code|BLX             strncmp|253-247-228-237
24712|code|CMP             R0, #0|0-40
24714|code|BEQ.W           loc_6234|0-240-211-128
24718|code|LDR             R1, =(aRemove - 0x6098); "remove"|213-73
24720|code|MOV             R0, R7; s1|56-70
24722|code|MOVS            R2, #6; n|6-34
24724|code|ADD             R1, PC; "remove"|121-68
24726|code|BLX             strncmp|253-247-220-237
24730|code|CMP             R0, #0|0-40
24732|code|BEQ.W           loc_6268|0-240-228-128
24736|code|LDR             R1, =(aChange - 0x60AA); "change"|209-73
24738|code|MOV             R0, R7; s1|56-70
24740|code|MOVS            R2, #6; n|6-34
24742|code|ADD             R1, PC; "change"|121-68
24744|code|BLX             strncmp|253-247-210-237
24748|code|CMP             R0, #0|0-40
24750|code|BNE             loc_6050|207-209
24752|code|MOV             R0, R6|48-70
24754|code|BLX             uevent_get_disk_ro|253-247-182-234
24758|code|SUBS.W          LR, R0, #0|176-241-0-14
24762|code|BLT             loc_6050|201-219
24764|code|LDR             R7, =(logsink_ptr - 0x1BB8C)|193-79
24766|code|MOVS            R1, #2|2-33
24768|code|LDR             R2, =(aSUpdatePathWri - 0x60CC); "%s: update path write_protect to '%d' ("...|202-74
24770|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
24774|code|LDR             R7, [R4,R7]; logsink|231-89
24776|code|ADD             R2, PC; "%s: update path write_protect to '%d' ("...|122-68
24778|code|LDR             R0, [R7]|56-104
24780|code|STR.W           LR, [SP,#0x48+var_48]|205-248-0-224
24784|code|BLX             dlog|253-247-150-233
24788|code|LDR.W           R0, [R8,#8]|216-248-8-0
24792|code|LDR.W           R1, [R6,#0xA14]|214-248-20-26
24796|code|BLX             find_path_by_dev|253-247-58-237
24800|code|MOV             R9, R0|129-70
24802|code|CMP             R0, #0|0-40
24804|code|BEQ.W           loc_635E|0-240-59-129
24808|code|LDR.W           R1, [R0,#0x5B8]|208-248-184-21
24812|code|CMP             R1, #0|0-41
24814|code|BEQ             loc_6050|175-208
24816|code|MOV             R0, R8|64-70
24818|code|MOVS            R2, #0|0-34
24820|code|BLX             reload_map|253-247-168-236
24824|code|LDR.W           R2, [R9,#0x5B8]|217-248-184-37
24828|code|MOV             R4, R0|4-70
24830|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
24834|code|MOVS            R1, #2|2-33
24836|code|LDR             R0, [R7]|56-104
24838|code|LDR.W           R6, [R2,#0x16C]|210-248-108-97
24842|code|LDR             R2, =(aSMapSReloadedR - 0x6112); "%s: map %s reloaded (retval %d)\n"|185-74
24844|code|STR             R4, [SP,#0x48+var_44]|1-148
24846|code|ADD             R2, PC; "%s: map %s reloaded (retval %d)\n"|122-68
24848|code|STR             R6, [SP,#0x48+var_48]|0-150
24850|code|BLX             dlog|253-247-118-233
24854|code|B               loc_6052|156-231
24856|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|170-72
24858|code|MOV             R3, R7|59-70
24860|code|LDR             R2, =(aNoBlockInS - 0x6126); "no /block/ in '%s'\n"|181-74
24862|code|MOVS            R1, #4|4-33
24864|code|LDR             R0, [R4,R0]; logsink|32-88
24866|code|ADD             R2, PC; "no /block/ in '%s'\n"|122-68
24868|code|LDR             R0, [R0]|0-104
24870|code|BLX             dlog|253-247-108-233
24874|code|B               loc_5FE2|90-231
24876|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|165-72
24878|code|MOV             R3, R7|59-70
24880|code|LDR             R2, =(aSAddMapUevent - 0x613A); "%s: add map (uevent)\n"|177-74
24882|code|MOVS            R1, #3|3-33
24884|code|LDR             R7, [R4,R0]; logsink|39-88
24886|code|ADD             R2, PC; "%s: add map (uevent)\n"|122-68
24888|code|LDR             R0, [R7]|56-104
24890|code|BLX             dlog|253-247-98-233
24894|code|MOV             R0, R6|48-70
24896|code|BLX             uevent_get_dm_name|253-247-62-237
24900|code|MOV             R9, R0|129-70
24902|code|CMP             R0, #0|0-40
24904|code|BEQ             loc_61EC|80-208
24906|code|LDR.W           R0, [R6,#0xA14]|214-248-20-10
24910|code|MOV             R1, R9|73-70
24912|code|MOV             R2, R8|66-70
24914|code|BL              sub_5280|255-247-149-248
24918|code|MOV             R4, R0|4-70
24920|code|MOV             R0, R9|72-70
24922|code|BLX             xfree|253-247-174-233
24926|code|B               loc_6052|120-231
24928|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|152-72
24930|code|MOV             R3, R7|59-70
24932|code|LDR             R2, =(aSRemoveMapUeve - 0x616E); "%s: remove map (uevent)\n"|165-74
24934|code|MOVS            R1, #2|2-33
24936|code|LDR             R7, [R4,R0]; logsink|39-88
24938|code|ADD             R2, PC; "%s: remove map (uevent)\n"|122-68
24940|code|LDR             R0, [R7]|56-104
24942|code|BLX             dlog|253-247-72-233
24946|code|MOV             R0, R6|48-70
24948|code|BLX             uevent_get_dm_name|253-247-36-237
24952|code|MOV             R9, R0|129-70
24954|code|CMP             R0, #0|0-40
24956|code|BEQ.W           loc_6296|0-240-139-128
24960|code|MOV             R0, R6|48-70
24962|code|BLX             uevent_get_minor|253-247-102-234
24966|code|MOV             R10, R0|130-70
24968|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
24972|code|MOV             R1, R10|81-70
24974|code|BLX             find_mp_by_minor|253-247-106-235
24978|code|MOV             R4, R0|4-70
24980|code|CBZ             R0, loc_61C4|176-177
24982|code|LDR.W           R6, [R0,#0x16C]|208-248-108-97
24986|code|MOV             R1, R9; s2|73-70
24988|code|MOV             R0, R6; s1|48-70
24990|code|BLX             strcmp|253-247-178-237
24994|code|CBZ             R0, loc_61D6|192-177
24996|code|LDR.W           R4, [R4,#0x168]|212-248-104-65
25000|code|MOV             R3, R6|51-70
25002|code|LDR             R2, =(aSMinorNumberMi - 0x61B6); "%s: minor number mismatch (map %d, even"...|149-74
25004|code|MOVS            R1, #2|2-33
25006|code|LDR             R0, [R7]|56-104
25008|code|LDR             R4, [R4,#0x1C]|228-105
25010|code|ADD             R2, PC; "%s: minor number mismatch (map %d, even"...|122-68
25012|code|STMEA.W         SP, {R4,R10}|141-232-16-4
25016|code|BLX             dlog|253-247-34-233
25020|code|MOV             R0, R9|72-70
25022|code|BLX             xfree|253-247-124-233
25026|code|B               loc_6050|69-231
25028|code|LDR             R2, =(aSDevmapNotRegi - 0x61D2); "%s: devmap not registered, can't remove"...|143-74
25030|code|MOVS            R1, #2|2-33
25032|code|LDR             R0, [R7]|56-104
25034|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25038|code|ADD             R2, PC; "%s: devmap not registered, can't remove"...|122-68
25040|code|BLX             dlog|253-247-22-233
25044|code|B               loc_61BC|242-231
25046|code|LDR.W           R0, [R8,#8]|216-248-8-0
25050|code|MOV             R1, R4|33-70
25052|code|BLX             orphan_paths|253-247-196-234
25056|code|MOV             R0, R4|32-70
25058|code|MOV             R1, R8|65-70
25060|code|MOVS            R2, #1|1-34
25062|code|BLX             remove_map_and_stop_waiter|253-247-94-234
25066|code|B               loc_61BC|231-231
25068|code|LDR             R2, =(aSNoDmNameInUev - 0x61F6); "%s: No DM_NAME in uevent\n"|134-74
25070|code|MOVS            R1, #3|3-33
25072|code|LDR             R0, [R7]|56-104
25074|code|ADD             R2, PC; "%s: No DM_NAME in uevent\n"|122-68
25076|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25080|code|BLX             dlog|253-247-2-233
25084|code|MOV             R0, R6|48-70
25086|code|BLX             uevent_get_major|253-247-230-235
25090|code|MOV             R10, R0|130-70
25092|code|MOV             R0, R6|48-70
25094|code|BLX             uevent_get_minor|253-247-36-234
25098|code|MOV             R4, R0|4-70
25100|code|MOV             R0, R10|80-70
25102|code|MOV             R1, R4|33-70
25104|code|BLX             dm_mapname|253-247-116-235
25108|code|MOV             R9, R0|129-70
25110|code|CMP             R0, #0|0-40
25112|code|BNE             loc_614A|151-209
25114|code|LDR             R2, =(aSMapnameNotFou - 0x6228); "%s: mapname not found for %d:%d\n"|124-74
25116|code|MOVS            R1, #2|2-33
25118|code|STR.W           R10, [SP,#0x48+var_48]|205-248-0-160
25122|code|STR             R4, [SP,#0x48+var_44]|1-148
25124|code|ADD             R2, PC; "%s: mapname not found for %d:%d\n"|122-68
25126|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25130|code|LDR             R0, [R7]|56-104
25132|code|BLX             dlog|253-247-232-232
25136|code|MOVS            R4, #1|1-36
25138|code|B               loc_6052|14-231
25140|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|99-72
25142|code|MOVS            R1, #2|2-33
25144|code|LDR             R2, =(aSAddPathUevent - 0x6244); "%s: add path (uevent)\n"|117-74
25146|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25150|code|LDR             R7, [R4,R0]; logsink|39-88
25152|code|ADD             R2, PC; "%s: add path (uevent)\n"|122-68
25154|code|LDR             R0, [R7]|56-104
25156|code|BLX             dlog|253-247-220-232
25160|code|LDR.W           R4, [R6,#0xA14]|214-248-20-74
25164|code|LDR             R1, =(asc_A1E4 - 0x6254); ".."|113-73
25166|code|MOV             R0, R4; haystack|32-70
25168|code|ADD             R1, PC; ".."|121-68
25170|code|BLX             strstr|253-247-176-235
25174|code|CBZ             R0, loc_62A8|56-179
25176|code|LDR             R2, =(aSPathNameIsInv - 0x6264); "%s: path name is invalid\n"|111-74
25178|code|MOV             R3, R4|35-70
25180|code|LDR             R0, [R7]|56-104
25182|code|MOVS            R1, #0|0-33
25184|code|ADD             R2, PC; "%s: path name is invalid\n"|122-68
25186|code|BLX             dlog|253-247-206-232
25190|code|B               loc_6230|227-231
25192|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|86-72
25194|code|MOVS            R1, #2|2-33
25196|code|LDR             R2, =(aSRemovePathUev - 0x6278); "%s: remove path (uevent)\n"|107-74
25198|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25202|code|LDR             R7, [R4,R0]; logsink|39-88
25204|code|ADD             R2, PC; "%s: remove path (uevent)\n"|122-68
25206|code|LDR             R0, [R7]|56-104
25208|code|BLX             dlog|253-247-194-232
25212|code|LDR.W           R0, [R8,#8]|216-248-8-0
25216|code|LDR.W           R1, [R6,#0xA14]|214-248-20-26
25220|code|BLX             find_path_by_dev|253-247-102-236
25224|code|MOV             R1, R0|1-70
25226|code|CBZ             R0, loc_62E4|88-179
25228|code|MOV             R1, R8|65-70
25230|code|BL              sub_5460|255-247-231-248
25234|code|MOV             R4, R0|4-70
25236|code|B               loc_6052|221-230
25238|code|LDR             R2, =(aSNoDmNameInUev_0 - 0x62A4); "%s: No DM_NAME in uevent, ignoring\n"|98-74
25240|code|MOVS            R1, #3|3-33
25242|code|LDR             R0, [R7]|56-104
25244|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25248|code|ADD             R2, PC; "%s: No DM_NAME in uevent, ignoring\n"|122-68
25250|code|BLX             dlog|253-247-174-232
25254|code|B               loc_6050|211-230
25256|code|MOV             R1, R4|33-70
25258|code|LDR.W           R0, [R8,#8]|216-248-8-0
25262|code|BLX             find_path_by_dev|253-247-82-236
25266|code|STR             R0, [SP,#0x48+var_40]|2-144
25268|code|CBZ             R0, loc_62F8|0-179
25270|code|LDR             R2, =(aSSpuriousUeven - 0x62C0); "%s: spurious uevent, path already in pa"...|91-74
25272|code|MOVS            R1, #0|0-33
25274|code|LDR             R0, [R7]|56-104
25276|code|ADD             R2, PC; "%s: spurious uevent, path already in pa"...|122-68
25278|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25282|code|BLX             dlog|253-247-158-232
25286|code|LDR             R3, [SP,#0x48+var_40]|2-155
25288|code|LDR.W           R2, [R3,#0x5B8]|211-248-184-37
25292|code|CMP             R2, #0|0-42
25294|code|BNE.W           loc_6050|127-244-191-174
25298|code|LDRB.W          R2, [R3,#0x14C]|147-248-76-33
25302|code|CBZ             R2, loc_6320|26-179
25304|code|LDR             R0, [SP,#0x48+var_40]|2-152
25306|code|MOV             R1, R8|65-70
25308|code|BL              sub_5CA0|255-247-224-252
25312|code|MOV             R4, R0|4-70
25314|code|B               loc_6052|182-230
25316|code|LDR             R2, =(aSPathAlreadyRe - 0x62F0); "%s: path already removed\n"|80-74
25318|code|LDR             R0, [R7]|56-104
25320|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25324|code|ADD             R2, PC; "%s: path already removed\n"|122-68
25326|code|BLX             dlog|253-247-136-232
25330|code|B               loc_6050|173-230
25332|code|BLX             __stack_chk_fail|253-247-218-235
25336|code|LDR.W           R1, [R9]|217-248-0-16
25340|code|ADD             R2, SP, #0x48+var_40|2-170
25342|code|LDR.W           R0, [R8,#8]|216-248-8-0
25346|code|MOVS            R3, #0x1F|31-35
25348|code|STR             R2, [SP,#0x48+var_48]|0-146
25350|code|LDR             R2, [R6,#8]|178-104
25352|code|LDR.W           R1, [R1,#0xD8]|209-248-216-16
25356|code|BLX             store_pathinfo|253-247-144-232
25360|code|LDR             R1, [SP,#0x48+var_40]|2-153
25362|code|CBZ             R1, loc_6370|105-179
25364|code|LDR.W           R3, [R9]|217-248-0-48
25368|code|LDR             R3, [R3,#0x20]|27-106
25370|code|STR.W           R3, [R1,#0x318]|193-248-24-51
25374|code|B               loc_62D8|219-231
25376|code|LDR.W           R0, [R3,#0x124]|211-248-36-1
25380|code|BLX             udev_device_unref|253-247-172-234
25384|code|LDR             R0, [R6,#8]|176-104
25386|code|LDR             R4, [SP,#0x48+var_40]|2-156
25388|code|BLX             udev_device_ref|253-247-132-233
25392|code|LDR.W           R3, [R9]|217-248-0-48
25396|code|MOVS            R2, #0x3F ; '?'|63-34
25398|code|STR.W           R0, [R4,#0x124]|196-248-36-1
25402|code|LDR             R0, [SP,#0x48+var_40]|2-152
25404|code|LDR.W           R1, [R3,#0xD8]|211-248-216-16
25408|code|BLX             pathinfo|253-247-126-234
25412|code|CMP             R0, #2|2-40
25414|code|BEQ             loc_6394|37-208
25416|code|CMP             R0, #1|1-40
25418|code|BNE             loc_62D8|197-209
25420|code|LDR             R2, =(aSFailedToReini - 0x635A); "%s: failed to reinitialize path\n"|55-74
25422|code|MOVS            R1, #0|0-33
25424|code|LDR             R0, [R7]|56-104
25426|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25430|code|ADD             R2, PC; "%s: failed to reinitialize path\n"|122-68
25432|code|BLX             dlog|253-247-82-232
25436|code|B               loc_6230|104-231
25438|code|LDR             R2, =(aSSpuriousUeven_0 - 0x636C); "%s: spurious uevent, path not found\n"|52-74
25440|code|MOV             R1, R9|73-70
25442|code|LDR             R0, [R7]|56-104
25444|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25448|code|ADD             R2, PC; "%s: spurious uevent, path not found\n"|122-68
25450|code|BLX             dlog|253-247-74-232
25454|code|B               loc_6230|95-231
25456|code|CMP             R0, #2|2-40
25458|code|BEQ.W           loc_6050|63-244-109-174
25462|code|LDR             R2, =(aSFailedToStore - 0x6382); "%s: failed to store path info\n"|47-74
25464|code|LDR             R0, [R7]|56-104
25466|code|LDR.W           R3, [R6,#0xA14]|214-248-20-58
25470|code|ADD             R2, PC; "%s: failed to store path info\n"|122-68
25472|code|BLX             dlog|253-247-62-232
25476|code|B               loc_6230|84-231
25478|code|MOV             R4, R0|4-70
25480|code|MOV             R0, R8|64-70
25482|code|BLX             cleanup_lock|253-247-174-232
25486|code|MOV             R0, R4|32-70
25488|code|BLX             _Unwind_Resume|253-247-136-236
25492|code|LDR.W           R0, [R8,#8]|216-248-8-0
25496|code|LDR             R1, [SP,#0x48+var_40]|2-153
25498|code|BLX             find_slot|253-247-176-233
25502|code|ADDS            R3, R0, #1|67-28
25504|code|MOV             R1, R0|1-70
25506|code|BEQ             loc_63AC|3-208
25508|code|LDR.W           R0, [R8,#8]|216-248-8-0
25512|code|BLX             vector_del_slot|253-247-176-235
25516|code|LDR             R0, [SP,#0x48+var_40]|2-152
25518|code|BLX             free_path|253-247-118-232
25522|code|B               loc_6050|77-230
25524|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x5FA2|234-91-1-0
25528|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
25532|data|DCD aBlock - 0x5FAE; "/block/"|26-65-0-0
25536|data|DCD aBlock10s - 0x5FC8; "/block/%10s"|28-65-0-0
25540|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
25544|data|DCD aDiscardEventOn - 0x5FDE; "discard event on %s\n"|18-65-0-0
25548|data|DCD aBlock1010s - 0x6000; "/block/%10[^/]/%10s"|8-65-0-0
25552|data|DCD aDm - 0x6026; "dm-"|246-64-0-0
25556|data|DCD aChange - 0x6038; "change"|232-64-0-0
25560|data|DCD aRemove - 0x6048; "remove"|56-65-0-0
25564|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
25568|data|DCD aAdd - 0x6086; "add"|66-65-0-0
25572|data|DCD aRemove - 0x6098; "remove"|232-64-0-0
25576|data|DCD aChange - 0x60AA; "change"|118-64-0-0
25580|data|DCD aSUpdatePathWri - 0x60CC; "%s: update path write_protect to '%d' ("...|228-65-0-0
25584|data|DCD aSMapSReloadedR - 0x6112; "%s: map %s reloaded (retval %d)\n"|246-65-0-0
25588|data|DCD aNoBlockInS - 0x6126; "no /block/ in '%s'\n"|170-63-0-0
25592|data|DCD aSAddMapUevent - 0x613A; "%s: add map (uevent)\n"|238-63-0-0
25596|data|DCD aSRemoveMapUeve - 0x616E; "%s: remove map (uevent)\n"|26-64-0-0
25600|data|DCD aSMinorNumberMi - 0x61B6; "%s: minor number mismatch (map %d, even"...|46-59-0-0
25604|data|DCD aSDevmapNotRegi - 0x61D2; "%s: devmap not registered, can't remove"...|230-58-0-0
25608|data|DCD aSNoDmNameInUev - 0x61F6; "%s: No DM_NAME in uevent\n"|74-63-0-0
25612|data|DCD aSMapnameNotFou - 0x6228; "%s: mapname not found for %d:%d\n"|52-63-0-0
25616|data|DCD aSAddPathUevent - 0x6244; "%s: add path (uevent)\n"|136-63-0-0
25620|data|DCD asc_A1E4 - 0x6254; ".."|144-63-0-0
25624|data|DCD aSPathNameIsInv - 0x6264; "%s: path name is invalid\n"|132-63-0-0
25628|data|DCD aSRemovePathUev - 0x6278; "%s: remove path (uevent)\n"|0-64-0-0
25632|data|DCD aSNoDmNameInUev_0 - 0x62A4; "%s: No DM_NAME in uevent, ignoring\n"|0-63-0-0
25636|data|DCD aSSpuriousUeven - 0x62C0; "%s: spurious uevent, path already in pa"...|68-63-0-0
25640|data|DCD aSPathAlreadyRe - 0x62F0; "%s: path already removed\n"|164-63-0-0
25644|data|DCD aSFailedToReini - 0x635A; "%s: failed to reinitialize path\n"|218-62-0-0
25648|data|DCD aSSpuriousUeven_0 - 0x636C; "%s: spurious uevent, path not found\n"|116-63-0-0
25652|data|DCD aSFailedToStore - 0x6382; "%s: failed to store path info\n"|214-62-0-0
25656|code|LDR.W           R3, [R1,#0x5B8]|209-248-184-53
25660|code|PUSH.W          {R4-R11,LR}|45-233-240-79
25664|code|SUB             SP, SP, #0x14|133-176
25666|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0x644E)|223-248-228-101
25670|code|LDR.W           R8, [R1,#0x330]|209-248-48-131
25674|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
25676|code|CMP             R3, #0|0-43
25678|code|BEQ.W           loc_655C|0-240-133-128
25682|code|LDR.W           R3, [R1,#0x31C]|209-248-28-51
25686|code|CBZ             R3, loc_6462|35-177
25688|code|SUBS            R3, #1|1-59
25690|code|STR.W           R3, [R1,#0x31C]|193-248-28-51
25694|code|CMP             R3, #0|0-43
25696|code|BNE             loc_655C|124-209
25698|code|LDR.W           R3, =(conf_ptr - 0x1BB8C)|223-248-200-53
25702|code|MOV             R7, R0|7-70
25704|code|MOV             R0, R1|8-70
25706|code|MOV             R4, R1|12-70
25708|code|LDR.W           R9, [R6,R3]; conf|86-248-3-144
25712|code|LDR.W           R3, [R9]|217-248-0-48
25716|code|LDR             R3, [R3,#0x20]|27-106
25718|code|STR.W           R3, [R1,#0x31C]|193-248-28-51
25722|code|BLX             path_offline|253-247-174-234
25726|code|CMP             R0, #8|8-40
25728|code|MOV             R5, R0|5-70
25730|code|BEQ.W           loc_6760|0-240-109-129
25734|code|CMP             R0, #3|3-40
25736|code|BEQ             loc_6566|109-208
25738|code|ADDW            R0, R4, #0x474|4-242-116-64
25742|code|BLX             checker_clear_message|253-247-90-234
25746|code|CMP             R5, #1|1-45
25748|code|BLS.W           loc_677E|64-242-115-129
25752|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
25756|code|CMP             R0, #0|0-40
25758|code|BEQ             loc_6552|88-208
25760|code|CMP             R5, #6|6-45
25762|code|BEQ.W           loc_65F2|0-240-166-128
25766|code|LDR             R1, [R7,#8]|185-104
25768|code|BLX             update_multipath_strings|253-247-50-236
25772|code|CMP             R0, #0|0-40
25774|code|BNE.W           loc_6602|64-240-168-128
25778|code|LDR.W           R10, [R4,#0x328]|212-248-40-163
25782|code|STR.W           R5, [R4,#0x330]|196-248-48-83
25786|code|CMP             R10, R5|170-69
25788|code|BEQ             loc_6572|89-208
25790|code|ADDW            R11, R4, #0x474|4-242-116-75
25794|code|STR.W           R5, [R4,#0x328]|196-248-40-83
25798|code|MOV             R0, R11|88-70
25800|code|BLX             checker_message|253-247-72-233
25804|code|LDRB            R3, [R0]|3-120
25806|code|CBZ             R3, loc_6514|11-179
25808|code|LDR.W           R3, [R4,#0x324]|212-248-36-51
25812|code|CMP             R3, #0|0-43
25814|code|BNE.W           loc_67E8|64-240-135-129
25818|code|MOV             R0, R11|88-70
25820|code|BLX             checker_message|253-247-62-233
25824|code|LDRB            R3, [R0]|3-120
25826|code|CBZ             R3, loc_6514|187-177
25828|code|LDR.W           R2, [R4,#0x5B8]|212-248-184-37
25832|code|MOV             R0, R11|88-70
25834|code|LDR.W           R3, =(logsink_ptr - 0x1BB8C)|223-248-68-53
25838|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
25842|code|LDR.W           R3, [R2,#0x16C]|210-248-108-49
25846|code|LDR.W           R11, [R11]|219-248-0-176
25850|code|STR             R3, [SP,#0x38+var_2C]|3-147
25852|code|BLX             checker_message|253-247-46-233
25856|code|LDR.W           R2, =(aSSS - 0x650E); "%s: %s - %s\n"|223-248-48-37
25860|code|MOVS            R1, #1|1-33
25862|code|LDR             R3, [SP,#0x38+var_2C]|3-155
25864|code|STR             R4, [SP,#0x38+var_38]|0-148
25866|code|ADD             R2, PC; "%s: %s - %s\n"|122-68
25868|code|STR             R0, [SP,#0x38+var_34]|1-144
25870|code|MOV             R0, R11|88-70
25872|code|BLX             dlog|252-247-118-239
25876|code|LDR.W           R3, [R9]|217-248-0-48
25880|code|SUBS            R1, R5, #2|169-30
25882|code|BICS.W          R1, R1, #2|49-240-2-1
25886|code|LDR             R3, [R3,#0x20]|27-106
25888|code|STR.W           R3, [R4,#0x318]|196-248-24-51
25892|code|BNE             loc_6624|126-209
25894|code|SUB.W           R10, R10, #3|170-241-3-10
25898|code|MOV             R0, R4|32-70
25900|code|BICS.W          R3, R10, #2|58-240-2-3
25904|code|MOV.W           R5, #1|79-240-1-5
25908|code|IT EQ|8-191
25910|code|MOVEQ           R1, #1|1-33
25912|code|BL              sub_4A74|254-247-156-250
25916|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
25920|code|MOVS            R1, #0|0-33
25922|code|LDR.W           R2, [R3,#0x190]|211-248-144-33
25926|code|STR.W           R1, [R3,#0x11C]|195-248-28-17
25930|code|ADD             R2, R5|42-68
25932|code|STR.W           R2, [R3,#0x190]|195-248-144-33
25936|code|B               loc_655E|5-224
25938|code|LDRB.W          R3, [R4,#0x14C]|148-248-76-49
25942|code|CMP             R3, #0|0-43
25944|code|BEQ.W           loc_67A4|0-240-36-129
25948|code|MOVS            R5, #0|0-37
25950|code|MOV             R0, R5|40-70
25952|code|ADD             SP, SP, #0x14|5-176
25954|code|POP.W           {R4-R11,PC}|189-232-240-143
25958|code|MOV             R0, R4|32-70
25960|code|MOVS            R1, #1|1-33
25962|code|BLX             get_state|253-247-48-235
25966|code|MOV             R5, R0|5-70
25968|code|B               loc_6492|143-231
25970|code|SUB.W           R8, R5, #3|165-241-3-8
25974|code|BICS.W          R8, R8, #2|56-240-2-8
25978|code|BNE.W           loc_674C|64-240-231-128
25982|code|LDR.W           R3, [R4,#0x32C]|212-248-44-51
25986|code|CMP             R3, #1|1-43
25988|code|BLS.W           loc_6936|64-242-215-129
25992|code|LDR.W           R3, [R4,#0x324]|212-248-36-51
25996|code|CMP             R3, #0|0-43
25998|code|BNE.W           loc_683A|64-240-84-129
26002|code|ADDW            R8, R4, #0x474|4-242-116-72
26006|code|MOV             R0, R8|64-70
26008|code|BLX             checker_message|253-247-224-232
26012|code|LDRB            R3, [R0]|3-120
26014|code|CMP             R3, #0|0-43
26016|code|BNE.W           loc_6948|64-240-210-129
26020|code|LDR.W           R3, =(logsink_ptr - 0x1BB8C)|223-248-136-52
26024|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26028|code|LDR.W           R3, [R9]|217-248-0-48
26032|code|LDR.W           R2, [R4,#0x318]|212-248-24-35
26036|code|LDR             R3, [R3,#0x24]|91-106
26038|code|CMP             R2, R3|154-66
26040|code|BEQ             loc_65E6|21-208
26042|code|ADD.W           R1, R3, R3,LSR#31|3-235-211-113
26046|code|LDR.W           R0, [R11]|219-248-0-0
26050|code|CMP.W           R2, R1,ASR#1|178-235-97-15
26054|code|MOV.W           R1, #4|79-240-4-1
26058|code|IT CC|56-191
26060|code|LSLCC           R3, R2, #1|83-0
26062|code|LDR.W           R2, =(aSDelayNextChec - 0x65DA); "%s: delay next check %is\n"|223-248-104-36
26066|code|STR.W           R3, [R4,#0x318]|196-248-24-51
26070|code|ADD             R2, PC; "%s: delay next check %is\n"|122-68
26072|code|STR             R3, [SP,#0x38+var_38]|0-147
26074|code|ADD.W           R3, R4, #0x100|4-245-128-115
26078|code|BLX             dlog|252-247-16-239
26082|code|LDR.W           R3, [R4,#0x318]|212-248-24-51
26086|code|MOV.W           R8, #0|79-240-0-8
26090|code|STR.W           R3, [R4,#0x31C]|196-248-28-51
26094|code|MOV             R9, R8|193-70
26096|code|B               loc_6662|55-224
26098|code|MOVS            R5, #0|0-37
26100|code|MOVS            R3, #1|1-35
26102|code|MOV             R0, R5|40-70
26104|code|STR.W           R3, [R4,#0x31C]|196-248-28-51
26108|code|ADD             SP, SP, #0x14|5-176
26110|code|POP.W           {R4-R11,PC}|189-232-240-143
26114|code|LDR.W           R0, =(logsink_ptr - 0x1BB8C)|223-248-44-4
26118|code|MOV             R3, R4|35-70
26120|code|LDR.W           R2, =(aSCouldNotSynch - 0x6616); "%s: Could not synchronize with kernel s"...|223-248-48-36
26124|code|MOVS            R1, #1|1-33
26126|code|LDR.W           R11, [R6,R0]; logsink|86-248-0-176
26130|code|ADD             R2, PC; "%s: Could not synchronize with kernel s"...|122-68
26132|code|LDR.W           R0, [R11]|219-248-0-0
26136|code|BLX             dlog|252-247-242-238
26140|code|MOVS            R3, #0|0-35
26142|code|STR.W           R3, [R4,#0x32C]|196-248-44-51
26146|code|B               loc_64B2|70-231
26148|code|SUBS            R3, R5, #3|235-30
26150|code|BICS.W          R3, R3, #2|51-240-2-3
26154|code|BEQ.W           loc_6808|0-240-237-128
26158|code|SUB.W           R10, R10, #3|170-241-3-10
26162|code|SUB.W           R8, R8, #3|168-241-3-8
26166|code|BICS.W          R1, R10, #2|58-240-2-1
26170|code|MOV             R0, R4|32-70
26172|code|IT NE|24-191
26174|code|MOVNE           R1, #1|1-33
26176|code|BL              sub_4AD8|254-247-74-250
26180|code|BICS.W          R3, R8, #2|56-240-2-3
26184|code|ITE NE|20-191
26186|code|MOVNE.W         R8, #1|79-240-1-8
26190|code|MOVEQ.W         R8, #0|79-240-0-8
26194|code|CMP             R5, #3|3-45
26196|code|BEQ.W           loc_6886|0-240-23-129
26200|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|245-75
26202|code|MOV.W           R9, #1|79-240-1-9
26206|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26210|code|LDR             R2, =(aPathPrioRefres - 0x6672); "path prio refresh\n"|247-74
26212|code|MOVS            R1, #4|4-33
26214|code|STR.W           R5, [R4,#0x328]|196-248-40-83
26218|code|LDR.W           R0, [R11]|219-248-0-0
26222|code|ADD             R2, PC; "path prio refresh\n"|122-68
26224|code|BLX             dlog|252-247-198-238
26228|code|MOV             R0, R4|32-70
26230|code|MOV             R1, R9|73-70
26232|code|BL              sub_56B4|255-247-28-248
26236|code|LDR.W           R5, [R4,#0x5B8]|212-248-184-85
26240|code|CMP             R0, #0|0-40
26242|code|BEQ             loc_673E|92-208
26244|code|LDR             R3, =(group_by_prio_ptr - 0x1BB8C)|239-75
26246|code|LDR.W           R2, [R5,#0x104]|213-248-4-33
26250|code|LDR             R3, [R6,R3]; group_by_prio|243-88
26252|code|CMP             R2, R3|154-66
26254|code|BEQ.W           loc_686C|0-240-237-128
26258|code|LDR.W           R3, [R5,#0x118]|213-248-24-49
26262|code|ADDS            R3, #1|1-51
26264|code|BEQ             loc_6742|83-208
26266|code|MOV             R0, R5|40-70
26268|code|BLX             select_path_group|253-247-88-233
26272|code|LDR.W           R3, [R5,#0x108]|213-248-8-49
26276|code|CMP             R0, R3|152-66
26278|code|STR.W           R0, [R5,#0x10C]|197-248-12-1
26282|code|BEQ             loc_6742|74-208
26284|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
26288|code|LDR.W           R3, [R0,#0x118]|208-248-24-49
26292|code|CMP             R3, #0|0-43
26294|code|BLE.W           loc_6864|64-243-213-128
26298|code|CMP.W           R9, #0|185-241-0-15
26302|code|BNE.W           loc_685A|64-240-204-128
26306|code|LDR.W           R2, [R0,#0x11C]|208-248-28-33
26310|code|CMP             R2, #0|0-42
26312|code|BLE.W           loc_685A|64-243-199-128
26316|code|ADDS            R3, #3|3-51
26318|code|EOR.W           R8, R8, #1|136-240-1-8
26322|code|AND.W           R8, R8, #1|8-240-1-8
26326|code|IT NE|24-191
26328|code|MOVNE           R3, #1|1-35
26330|code|ORRS.W          R3, R3, R8|83-234-8-3
26334|code|BNE             loc_6742|48-209
26336|code|LDR.W           R1, [R0,#0x164]|208-248-100-17
26340|code|CBZ             R1, loc_6742|105-179
26342|code|LDR.W           R2, [R4,#0x33C]|212-248-60-35
26346|code|CBZ             R2, loc_6742|82-179
26348|code|LDR.W           R5, [R0,#0x10C]|208-248-12-81
26352|code|CMP             R2, R5|170-66
26354|code|BNE             loc_6742|38-209
26356|code|LDR             R5, [R1]|13-104
26358|code|CMP             R2, R5|170-66
26360|code|BGT.W           loc_697A|0-243-63-129
26364|code|ADD.W           R2, R2, #0x40000000|2-241-128-66
26368|code|LDR             R1, [R1,#4]|73-104
26370|code|SUBS            R2, #1|1-58
26372|code|LDR.W           R2, [R1,R2,LSL#2]|81-248-34-32
26376|code|LDR             R2, [R2,#0x10]|18-105
26378|code|CBZ             R2, loc_6736|162-177
26380|code|LDR             R5, [R2]|21-104
26382|code|CMP             R5, #0|0-45
26384|code|BLE             loc_6736|17-221
26386|code|LDR             R1, [R2,#4]|81-104
26388|code|LDR             R2, [R1]|10-104
26390|code|CBNZ            R2, loc_6720|26-185
26392|code|B               loc_6736|13-224
26394|code|LDR.W           R2, [R1,#4]!|81-248-4-47
26398|code|CBZ             R2, loc_6736|82-177
26400|code|CMP             R4, R2|148-66
26402|code|BEQ             loc_6730|5-208
26404|code|LDR.W           R2, [R2,#0x330]|210-248-48-35
26408|code|SUBS            R2, #2|2-58
26410|code|BICS.W          R2, R2, #2|50-240-2-2
26414|code|BNE             loc_6742|8-209
26416|code|ADDS            R3, #1|1-51
26418|code|CMP             R3, R5|171-66
26420|code|BNE             loc_671A|241-209
26422|code|MOVS            R5, #1|1-37
26424|code|BL              sub_4B44|254-247-4-250
26428|code|B               loc_655E|15-231
26430|code|CMP             R5, #0|0-45
26432|code|BNE             loc_6692|167-209
26434|code|MOVS            R5, #1|1-37
26436|code|MOV             R0, R5|40-70
26438|code|ADD             SP, SP, #0x14|5-176
26440|code|POP.W           {R4-R11,PC}|189-232-240-143
26444|code|CMP             R5, #2|2-45
26446|code|BEQ.W           loc_68EA|0-240-204-128
26450|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|183-75
26452|code|MOV.W           R8, #0|79-240-0-8
26456|code|MOV             R9, R8|193-70
26458|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26462|code|B               loc_6662|128-231
26464|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|179-72
26466|code|MOVS            R1, #2|2-33
26468|code|LDR             R2, =(aSRemovePathChe - 0x6770); "%s: remove path (checker)\n"|184-74
26470|code|MOV             R3, R4|35-70
26472|code|MOVS            R5, #0|0-37
26474|code|LDR             R0, [R6,R0]; logsink|48-88
26476|code|ADD             R2, PC; "%s: remove path (checker)\n"|122-68
26478|code|LDR             R0, [R0]|0-104
26480|code|BLX             dlog|252-247-70-238
26484|code|MOV             R0, R4|32-70
26486|code|MOV             R1, R7|57-70
26488|code|BL              sub_5460|254-247-114-254
26492|code|B               loc_655E|239-230
26494|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|172-72
26496|code|MOV             R3, R4|35-70
26498|code|LDR             R2, =(aSUnusablePath - 0x678E); "%s: unusable path\n"|178-74
26500|code|MOVS            R1, #2|2-33
26502|code|MOVS            R5, #1|1-37
26504|code|LDR             R0, [R6,R0]; logsink|48-88
26506|code|ADD             R2, PC; "%s: unusable path\n"|122-68
26508|code|LDR             R0, [R0]|0-104
26510|code|BLX             dlog|252-247-56-238
26514|code|LDR.W           R3, [R9]|217-248-0-48
26518|code|MOV             R0, R4|32-70
26520|code|MOVS            R2, #0|0-34
26522|code|LDR.W           R1, [R3,#0xD8]|211-248-216-16
26526|code|BLX             pathinfo|253-247-80-232
26530|code|B               loc_655E|220-230
26532|code|SUBS            R5, #3|3-61
26534|code|BICS.W          R3, R5, #2|53-240-2-3
26538|code|BNE.W           loc_655C|127-244-215-174
26542|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|160-72
26544|code|MOVS            R1, #2|2-33
26546|code|LDR             R2, =(aSAddMissingPat - 0x67BC); "%s: add missing path\n"|167-74
26548|code|MOV             R3, R4|35-70
26550|code|LDR             R0, [R6,R0]; logsink|48-88
26552|code|ADD             R2, PC; "%s: add missing path\n"|122-68
26554|code|LDR             R0, [R0]|0-104
26556|code|BLX             dlog|252-247-32-238
26560|code|LDR.W           R3, [R9]|217-248-0-48
26564|code|MOV             R0, R4|32-70
26566|code|MOVS            R2, #0x1F|31-34
26568|code|LDR.W           R1, [R3,#0xD8]|211-248-216-16
26572|code|BLX             pathinfo|253-247-56-232
26576|code|MOV             R5, R0|5-70
26578|code|CMP             R0, #0|0-40
26580|code|BNE.W           loc_655C|127-244-194-174
26584|code|MOV             R1, R7|57-70
26586|code|MOV             R0, R4|32-70
26588|code|BL              sub_5CA0|255-247-96-250
26592|code|MOVS            R3, #1|1-35
26594|code|STR.W           R3, [R4,#0x31C]|196-248-28-51
26598|code|B               loc_655E|186-230
26600|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|145-75
26602|code|MOVS            R1, #1|1-33
26604|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
26608|code|LDR             R2, =(aSSPathOffline - 0x67FA); "%s: %s - path offline\n"|152-74
26610|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26614|code|ADD             R2, PC; "%s: %s - path offline\n"|122-68
26616|code|LDR.W           R3, [R0,#0x16C]|208-248-108-49
26620|code|LDR.W           R0, [R11]|219-248-0-0
26624|code|STR             R4, [SP,#0x38+var_38]|0-148
26626|code|BLX             dlog|252-247-254-237
26630|code|B               loc_6514|133-230
26632|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
26636|code|CMP             R3, #0|0-43
26638|code|BEQ.W           loc_662E|63-244-14-175
26642|code|LDRB.W          R3, [R3,#0x1A8]|147-248-168-49
26646|code|CMP             R3, #0|0-43
26648|code|BEQ.W           loc_662E|63-244-9-175
26652|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|132-72
26654|code|MOVS            R1, #2|2-33
26656|code|LDR             R2, =(aSCheckingPersi - 0x682C); "%s: checking persistent reservation reg"...|141-74
26658|code|MOV             R3, R4|35-70
26660|code|LDR.W           R11, [R6,R0]; logsink|86-248-0-176
26664|code|ADD             R2, PC; "%s: checking persistent reservation reg"...|122-68
26666|code|LDR.W           R0, [R11]|219-248-0-0
26670|code|BLX             dlog|252-247-232-237
26674|code|MOV             R0, R4|32-70
26676|code|BL              sub_5C04|255-247-230-249
26680|code|B               loc_662E|249-230
26682|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|125-75
26684|code|MOVS            R1, #4|4-33
26686|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
26690|code|LDR             R2, =(aSSPathOffline - 0x684C); "%s: %s - path offline\n"|134-74
26692|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26696|code|ADD             R2, PC; "%s: %s - path offline\n"|122-68
26698|code|LDR.W           R3, [R0,#0x16C]|208-248-108-49
26702|code|LDR.W           R0, [R11]|219-248-0-0
26706|code|STR             R4, [SP,#0x38+var_38]|0-148
26708|code|BLX             dlog|252-247-212-237
26712|code|B               loc_65AC|168-230
26714|code|ADDS            R3, #1|1-51
26716|code|MOVS            R5, #1|1-37
26718|code|STR.W           R3, [R0,#0x11C]|192-248-28-49
26722|code|B               loc_655E|124-230
26724|code|ADDS            R2, R3, #2|154-28
26726|code|BNE.W           loc_66CC|127-244-49-175
26730|code|B               loc_6736|100-231
26732|code|LDR.W           R3, [R5,#0x118]|213-248-24-49
26736|code|ADDS            R3, #2|2-51
26738|code|BNE.W           loc_6692|127-244-14-175
26742|code|MOV             R0, R5|40-70
26744|code|MOV             R1, R7|57-70
26746|code|EOR.W           R2, R9, #1|137-240-1-2
26750|code|MOVS            R5, #1|1-37
26752|code|BL              sub_5790|254-247-134-255
26756|code|B               loc_655E|107-230
26758|code|LDR.W           R2, [R4,#0x5B8]|212-248-184-37
26762|code|LDR.W           R3, [R2,#0x164]|210-248-100-49
26766|code|CMP             R3, #0|0-43
26768|code|BEQ.W           loc_6658|63-244-226-174
26772|code|LDR.W           R0, [R4,#0x33C]|212-248-60-3
26776|code|CMP             R0, #0|0-40
26778|code|BEQ.W           loc_6658|63-244-221-174
26782|code|LDR             R1, [R3]|25-104
26784|code|CMP             R0, R1|136-66
26786|code|BGT             loc_6974|103-220
26788|code|LDR             R1, [R3,#4]|89-104
26790|code|ADD.W           R3, R0, #0x40000000|0-241-128-67
26794|code|SUBS            R3, #1|1-59
26796|code|LDR.W           R3, [R1,R3,LSL#2]|81-248-35-48
26800|code|LDR             R1, [R3,#4]|89-104
26802|code|CMP             R1, #2|2-41
26804|code|BNE.W           loc_6658|127-244-208-174
26808|code|LDR.W           LR, =(logsink_ptr - 0x1BB8C)|223-248-116-225
26812|code|MOV.W           R9, #1|79-240-1-9
26816|code|LDR.W           R3, [R2,#0x16C]|210-248-108-49
26820|code|LDR             R2, =(aSEnableGroupI - 0x68CE); "%s: enable group #%i\n"|102-74
26822|code|LDR.W           R11, [R6,LR]; logsink|86-248-14-176
26826|code|ADD             R2, PC; "%s: enable group #%i\n"|122-68
26828|code|LDR.W           LR, [R11]|219-248-0-224
26832|code|STR             R0, [SP,#0x38+var_38]|0-144
26834|code|MOV             R0, LR|112-70
26836|code|BLX             dlog|252-247-148-237
26840|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
26844|code|LDR.W           R1, [R4,#0x33C]|212-248-60-19
26848|code|LDR.W           R0, [R3,#0x16C]|211-248-108-1
26852|code|BLX             dm_enablegroup|252-247-224-237
26856|code|B               loc_6662|187-230
26858|code|ADDW            R10, R4, #0x474|4-242-116-74
26862|code|MOV             R0, R10|80-70
26864|code|BLX             checker_message|252-247-52-239
26868|code|LDRB            R3, [R0]|3-120
26870|code|CMP             R3, #0|0-43
26872|code|BEQ.W           loc_6752|63-244-43-175
26876|code|LDR.W           R3, [R9]|217-248-0-48
26880|code|LDR.W           R8, [R4,#0x324]|212-248-36-131
26884|code|LDR             R3, [R3,#0x64]|91-110
26886|code|CMP             R3, #1|1-43
26888|code|BEQ             loc_69BC|88-208
26890|code|CMP.W           R8, #0|184-241-0-15
26894|code|BEQ             loc_697E|54-208
26896|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|71-75
26898|code|MOV.W           R8, #0|79-240-0-8
26902|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
26906|code|MOV             R1, R5|41-70
26908|code|LDR             R2, =(aSSPathOffline - 0x6928); "%s: %s - path offline\n"|81-74
26910|code|MOV             R9, R8|193-70
26912|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26916|code|ADD             R2, PC; "%s: %s - path offline\n"|122-68
26918|code|LDR.W           R3, [R0,#0x16C]|208-248-108-49
26922|code|LDR.W           R0, [R11]|219-248-0-0
26926|code|STR             R4, [SP,#0x38+var_38]|0-148
26928|code|BLX             dlog|252-247-102-237
26932|code|B               loc_6662|149-230
26934|code|MOV             R0, R4|32-70
26936|code|MOV             R1, R8|65-70
26938|code|BL              sub_4AD8|254-247-205-248
26942|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|60-75
26944|code|MOV             R9, R8|193-70
26946|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26950|code|B               loc_6662|140-230
26952|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|57-75
26954|code|MOV             R0, R8|64-70
26956|code|LDR.W           R2, [R4,#0x5B8]|212-248-184-37
26960|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
26964|code|LDR.W           R10, [R2,#0x16C]|210-248-108-161
26968|code|LDR.W           R8, [R11]|219-248-0-128
26972|code|BLX             checker_message|252-247-254-238
26976|code|LDR             R2, =(aSSS - 0x696C); "%s: %s - %s\n"|65-74
26978|code|MOV             R3, R10|83-70
26980|code|STR             R4, [SP,#0x38+var_38]|0-148
26982|code|MOVS            R1, #4|4-33
26984|code|ADD             R2, PC; "%s: %s - %s\n"|122-68
26986|code|STR             R0, [SP,#0x38+var_34]|1-144
26988|code|MOV             R0, R8|64-70
26990|code|BLX             dlog|252-247-72-237
26994|code|B               loc_65AC|27-230
26996|code|MOVS            R3, #0|0-35
26998|code|LDR             R3, [R3,#byte_4]|91-104
27000|code|UND             #0xFF|255-222
27002|code|LDR             R3, [R3,#0x10]|27-105
27004|code|UND             #0xFF|255-222
27006|code|MOV             R0, R10|80-70
27008|code|BLX             checker_message|252-247-236-238
27012|code|LDRB            R3, [R0]|3-120
27014|code|CMP             R3, #0|0-43
27016|code|BEQ.W           loc_6752|63-244-227-174
27020|code|LDR.W           R2, [R4,#0x5B8]|212-248-184-37
27024|code|MOV             R0, R10|80-70
27026|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|39-75
27028|code|MOV             R9, R8|193-70
27030|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
27034|code|LDR.W           R3, [R2,#0x16C]|210-248-108-49
27038|code|LDR.W           R10, [R11]|219-248-0-160
27042|code|STR             R3, [SP,#0x38+var_2C]|3-147
27044|code|BLX             checker_message|252-247-218-238
27048|code|LDR             R2, =(aSSS - 0x69B4); "%s: %s - %s\n"|48-74
27050|code|MOV             R1, R5|41-70
27052|code|LDR             R3, [SP,#0x38+var_2C]|3-155
27054|code|STR             R4, [SP,#0x38+var_38]|0-148
27056|code|ADD             R2, PC; "%s: %s - %s\n"|122-68
27058|code|STR             R0, [SP,#0x38+var_34]|1-144
27060|code|MOV             R0, R10|80-70
27062|code|BLX             dlog|252-247-36-237
27066|code|B               loc_6662|82-230
27068|code|CMP.W           R8, #0|184-241-0-15
27072|code|BEQ             loc_69E8|18-208
27074|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|27-75
27076|code|MOV.W           R8, #0|79-240-0-8
27080|code|LDR.W           R0, [R4,#0x5B8]|212-248-184-5
27084|code|MOVS            R1, #3|3-33
27086|code|LDR             R2, =(aSSPathOffline - 0x69DA); "%s: %s - path offline\n"|40-74
27088|code|MOV             R9, R8|193-70
27090|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
27094|code|ADD             R2, PC; "%s: %s - path offline\n"|122-68
27096|code|STR             R4, [SP,#0x38+var_38]|0-148
27098|code|LDR.W           R3, [R0,#0x16C]|208-248-108-49
27102|code|LDR.W           R0, [R11]|219-248-0-0
27106|code|BLX             dlog|252-247-14-237
27110|code|B               loc_6662|60-230
27112|code|MOV             R0, R10|80-70
27114|code|BLX             checker_message|252-247-184-238
27118|code|LDRB            R3, [R0]|3-120
27120|code|CMP             R3, #0|0-43
27122|code|BEQ.W           loc_6752|63-244-174-174
27126|code|LDR.W           R2, [R4,#0x5B8]|212-248-184-37
27130|code|MOV             R0, R10|80-70
27132|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|12-75
27134|code|MOV             R9, R8|193-70
27136|code|LDR.W           R11, [R6,R3]; logsink|86-248-3-176
27140|code|LDR.W           R3, [R2,#0x16C]|210-248-108-49
27144|code|LDR.W           R10, [R11]|219-248-0-160
27148|code|STR             R3, [SP,#0x38+var_2C]|3-147
27150|code|BLX             checker_message|252-247-166-238
27154|code|LDR             R2, =(aSSS - 0x6A1E); "%s: %s - %s\n"|24-74
27156|code|MOVS            R1, #3|3-33
27158|code|LDR             R3, [SP,#0x38+var_2C]|3-155
27160|code|STR             R4, [SP,#0x38+var_38]|0-148
27162|code|ADD             R2, PC; "%s: %s - %s\n"|122-68
27164|code|STR             R0, [SP,#0x38+var_34]|1-144
27166|code|MOV             R0, R10|80-70
27168|code|BLX             dlog|252-247-238-236
27172|code|B               loc_6662|29-230
27174|data|ALIGN 4|0-191
27176|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x644E|62-87-1-0
27180|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
27184|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
27188|data|DCD aSSS - 0x650E; "%s: %s - %s\n"|174-62-0-0
27192|data|DCD aSDelayNextChec - 0x65DA; "%s: delay next check %is\n"|62-62-0-0
27196|data|DCD aSCouldNotSynch - 0x6616; "%s: Could not synchronize with kernel s"...|94-61-0-0
27200|data|DCD aPathPrioRefres - 0x6672; "path prio refresh\n"|194-61-0-0
27204|data|DCD group_by_prio_ptr - 0x1BB8C|28-4-0-0
27208|data|DCD aSRemovePathChe - 0x6770; "%s: remove path (checker)\n"|188-59-0-0
27212|data|DCD aSUnusablePath - 0x678E; "%s: unusable path\n"|186-59-0-0
27216|data|DCD aSAddMissingPat - 0x67BC; "%s: add missing path\n"|160-59-0-0
27220|data|DCD aSSPathOffline - 0x67FA; "%s: %s - path offline\n"|170-59-0-0
27224|data|DCD aSCheckingPersi - 0x682C; "%s: checking persistent reservation reg"...|160-59-0-0
27228|data|DCD aSSPathOffline - 0x684C; "%s: %s - path offline\n"|88-59-0-0
27232|data|DCD aSEnableGroupI - 0x68CE; "%s: enable group #%i\n"|50-59-0-0
27236|data|DCD aSSPathOffline - 0x6928; "%s: %s - path offline\n"|124-58-0-0
27240|data|DCD aSSS - 0x696C; "%s: %s - %s\n"|80-58-0-0
27244|data|DCD aSSS - 0x69B4; "%s: %s - %s\n"|8-58-0-0
27248|data|DCD aSSPathOffline - 0x69DA; "%s: %s - path offline\n"|202-57-0-0
27252|data|DCD aSSS - 0x6A1E; "%s: %s - %s\n"|158-57-0-0
27256|code|PUSH.W          {R4-R11,LR}|45-233-240-79
27260|code|MOV             R9, R0|129-70
27262|code|SUB             SP, SP, #0x4C|147-176
27264|code|MOVS            R0, #3; flags|3-32
27266|code|BLX             mlockall|252-247-90-239
27270|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x6A90)|213-75
27272|code|LDR             R2, =(aPathCheckersSt - 0x6A94); "path checkers start up\n"|213-74
27274|code|MOVS            R1, #2|2-33
27276|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
27278|code|STR             R3, [SP,#0x70+var_58]|6-147
27280|code|ADD             R2, PC; "path checkers start up\n"|122-68
27282|code|MOV             R0, R3|24-70
27284|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|211-75
27286|code|LDR             R3, [R0,R3]; logsink|195-88
27288|code|LDR             R0, [R3]|24-104
27290|code|STR             R3, [SP,#0x70+var_54]|7-147
27292|code|BLX             dlog|252-247-176-236
27296|code|LDR.W           R3, [R9,#8]|217-248-8-48
27300|code|CBZ             R3, loc_6AD2|171-177
27302|code|LDR             R4, [R3]|28-104
27304|code|CBZ             R4, loc_6AD2|156-177
27306|code|LDR             R3, [R3,#4]|91-104
27308|code|LDR             R0, [R3]|24-104
27310|code|CBZ             R0, loc_6AD2|128-177
27312|code|LDR             R2, =(elf_gnu_hash_chain+0xA0)|205-74
27314|code|MOVS            R1, #1|1-33
27316|code|LDR             R5, [SP,#0x70+var_58]|6-157
27318|code|LDR             R6, [R5,R2]|174-88
27320|code|LDR             R2, [R6]|50-104
27322|code|LDR             R2, [R2,#0x20]|18-106
27324|code|STR.W           R2, [R0,#0x318]|192-248-24-35
27328|code|CMP             R4, R1|140-66
27330|code|BLS             loc_6AD2|6-217
27332|code|LDR.W           R0, [R3,#4]!|83-248-4-15
27336|code|CBZ             R0, loc_6AD2|24-177
27338|code|STR.W           R2, [R0,#0x318]|192-248-24-35
27342|code|ADDS            R1, #1|1-49
27344|code|B               loc_6AC0|246-231
27346|code|MOVS            R3, #0|0-35
27348|code|STR             R3, [SP,#0x70+var_50]|8-147
27350|code|ADD             R3, SP, #0x70+var_38|14-171
27352|code|STR             R3, [SP,#0x70+tv]|10-147
27354|code|LDR             R3, =(aTick - 0x6AE0); "tick\n"|196-75
27356|code|ADD             R3, PC; "tick\n"|123-68
27358|code|STR             R3, [SP,#0x70+var_44]|11-147
27360|code|LDR             R3, =(aSRetryingNoAct - 0x6AE6); "%s: Retrying.. No active path\n"|195-75
27362|code|ADD             R3, PC; "%s: Retrying.. No active path\n"|123-68
27364|code|STR             R3, [SP,#0x70+var_4C]|9-147
27366|code|LDR             R3, =(aSDisableQueuei - 0x6AEC); "%s: Disable queueing\n"|195-75
27368|code|ADD             R3, PC; "%s: Disable queueing\n"|123-68
27370|code|STR             R3, [SP,#0x70+var_40]|12-147
27372|code|LDR             R3, =(aMapGarbageColl - 0x6AF2); "map garbage collection\n"|194-75
27374|code|ADD             R3, PC; "map garbage collection\n"|123-68
27376|code|STR             R3, [SP,#0x70+var_3C]|13-147
27378|code|LDR             R0, [SP,#0x70+tv]; tv|10-152
27380|code|MOVS            R1, #0; tz|0-33
27382|code|BLX             gettimeofday|252-247-14-238
27386|code|CBZ             R0, loc_6B00|8-177
27388|code|MOVS            R3, #0|0-35
27390|code|STR             R3, [SP,#0x70+var_38]|14-147
27392|code|LDM.W           R9, {R0,R3}; mutex|153-232-9-0
27396|code|ADDS            R3, #1|1-51
27398|code|STR.W           R3, [R9,#4]|201-248-4-48
27402|code|BLX             pthread_mutex_lock|252-247-106-238
27406|code|BLX             pthread_testcancel|253-247-40-232
27410|code|LDR             R3, [SP,#0x70+var_54]|7-155
27412|code|MOVS            R1, #4|4-33
27414|code|LDR             R2, [SP,#0x70+var_44]|11-154
27416|code|LDR             R0, [R3]|24-104
27418|code|BLX             dlog|252-247-114-236
27422|code|LDR.W           R3, [R9,#8]|217-248-8-48
27426|code|CMP             R3, #0|0-43
27428|code|BEQ.W           loc_6DBC|0-240-74-129
27432|code|LDR             R2, [R3]|26-104
27434|code|CMP             R2, #0|0-42
27436|code|BEQ.W           loc_6DD8|0-240-84-129
27440|code|LDR             R3, [R3,#4]|91-104
27442|code|LDR             R1, [R3]|25-104
27444|code|CMP             R1, #0|0-41
27446|code|BEQ.W           loc_6DC6|0-240-70-129
27450|code|MOVS            R3, #0|0-35
27452|code|STR             R3, [SP,#0x70+var_5C]|5-147
27454|code|MOV             R4, R3|28-70
27456|code|B               loc_6B50|6-224
27458|code|LDR             R2, [R3]|26-104
27460|code|CMP             R2, R4|162-66
27462|code|BLS             loc_6B66|14-217
27464|code|LDR             R3, [R3,#4]|91-104
27466|code|LDR.W           R1, [R3,R4,LSL#2]|83-248-36-16
27470|code|CBZ             R1, loc_6B66|81-177
27472|code|MOV             R0, R9|72-70
27474|code|BL              sub_6438|255-247-113-252
27478|code|LDR.W           R3, [R9,#8]|217-248-8-48
27482|code|ADDS            R4, #1|1-52
27484|code|LDR             R2, [SP,#0x70+var_5C]|5-154
27486|code|ADD             R2, R0|2-68
27488|code|STR             R2, [SP,#0x70+var_5C]|5-146
27490|code|CMP             R3, #0|0-43
27492|code|BNE             loc_6B42|237-209
27494|code|LDR.W           R11, [R9,#0xC]|217-248-12-176
27498|code|CMP.W           R11, #0|187-241-0-15
27502|code|BEQ.W           loc_6CA8|0-240-155-128
27506|code|LDR.W           R2, [R11]|219-248-0-32
27510|code|CMP             R2, #0|0-42
27512|code|BEQ             loc_6C50|106-208
27514|code|LDR.W           R3, [R11,#4]|219-248-4-48
27518|code|LDR.W           R8, [R3]|211-248-0-128
27522|code|CMP.W           R8, #0|184-241-0-15
27526|code|BEQ             loc_6C50|99-208
27528|code|MOV.W           R10, #0|79-240-0-10
27532|code|B               loc_6BA4|10-224
27534|code|ADD.W           R10, R10, #1|10-241-1-10
27538|code|CMP             R10, R2|146-69
27540|code|BCS             loc_6C46|87-210
27542|code|LDR.W           R3, [R11,#4]|219-248-4-48
27546|code|LDR.W           R8, [R3,R10,LSL#2]|83-248-42-128
27550|code|CMP.W           R8, #0|184-241-0-15
27554|code|BEQ             loc_6C46|80-208
27556|code|LDR.W           R3, [R8,#0x118]|216-248-24-49
27560|code|CMP             R3, #0|0-43
27562|code|BLE             loc_6B8E|240-221
27564|code|LDR.W           R7, [R8,#0x11C]|216-248-28-113
27568|code|CMP             R7, #0|0-47
27570|code|BLE             loc_6B8E|236-221
27572|code|SUBS            R7, #1|1-63
27574|code|STR.W           R7, [R8,#0x11C]|200-248-28-113
27578|code|CMP             R7, #0|0-47
27580|code|BNE             loc_6B8E|231-209
27582|code|LDR.W           R2, [R8,#0x164]|216-248-100-33
27586|code|CMP             R2, #0|0-42
27588|code|BEQ             loc_6C22|45-208
27590|code|LDR             R3, [R2]|19-104
27592|code|CBZ             R3, loc_6C22|91-179
27594|code|LDR             R3, [R2,#4]|83-104
27596|code|LDR             R5, [R3]|29-104
27598|code|CBZ             R5, loc_6C22|69-179
27600|code|LDR             R3, [R5,#0x10]|43-105
27602|code|CBZ             R3, loc_6C0E|227-177
27604|code|LDR             R1, [R3]|25-104
27606|code|CBZ             R1, loc_6C0E|209-177
27608|code|LDR             R3, [R3,#4]|91-104
27610|code|LDR             R0, [R3]|24-104
27612|code|CBZ             R0, loc_6C0E|184-177
27614|code|LDR             R3, =(elf_gnu_hash_chain+0xA0)|130-75
27616|code|MOVS            R4, #0|0-36
27618|code|LDR             R2, [SP,#0x70+var_58]|6-154
27620|code|LDR             R6, [R2,R3]|214-88
27622|code|B               loc_6BF6|6-224
27624|code|LDR             R2, [R3]|26-104
27626|code|CMP             R4, R2|148-66
27628|code|BCS             loc_6C0A|13-210
27630|code|LDR             R3, [R3,#4]|91-104
27632|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
27636|code|CBZ             R0, loc_6C0A|72-177
27638|code|LDR             R3, [R6]|51-104
27640|code|MOVS            R2, #8|8-34
27642|code|LDR.W           R1, [R3,#0xD8]|211-248-216-16
27646|code|BLX             pathinfo|252-247-32-238
27650|code|LDR             R3, [R5,#0x10]|43-105
27652|code|ADDS            R4, #1|1-52
27654|code|CMP             R3, #0|0-43
27656|code|BNE             loc_6BE8|238-209
27658|code|LDR.W           R2, [R8,#0x164]|216-248-100-33
27662|code|ADDS            R7, #1|1-55
27664|code|CBZ             R2, loc_6C22|58-177
27666|code|LDR             R3, [R2]|19-104
27668|code|CMP             R7, R3|159-66
27670|code|BCS             loc_6C22|4-210
27672|code|LDR             R3, [R2,#4]|83-104
27674|code|LDR.W           R5, [R3,R7,LSL#2]|83-248-39-80
27678|code|CMP             R5, #0|0-45
27680|code|BNE             loc_6BD0|214-209
27682|code|MOV             R0, R8|64-70
27684|code|BLX             select_path_group|252-247-148-238
27688|code|LDR.W           R3, [R8,#0x108]|216-248-8-49
27692|code|STR.W           R0, [R8,#0x10C]|200-248-12-1
27696|code|CMP             R0, R3|152-66
27698|code|BEQ             loc_6C3A|2-208
27700|code|MOV             R0, R8|64-70
27702|code|BL              sub_4B44|253-247-133-255
27706|code|LDR.W           R2, [R11]|219-248-0-32
27710|code|ADD.W           R10, R10, #1|10-241-1-10
27714|code|CMP             R10, R2|146-69
27716|code|BCC             loc_6B96|167-211
27718|code|LDR.W           R11, [R9,#0xC]|217-248-12-176
27722|code|CMP.W           R11, #0|187-241-0-15
27726|code|BEQ             loc_6CA8|43-208
27728|code|LDR.W           R2, [R11]|219-248-0-32
27732|code|CBZ             R2, loc_6CA8|66-179
27734|code|LDR.W           R3, [R11,#4]|219-248-4-48
27738|code|LDR             R4, [R3]|28-104
27740|code|CBZ             R4, loc_6CA8|36-179
27742|code|MOVS            R5, #1|1-37
27744|code|B               loc_6C72|7-224
27746|code|CMP             R5, R2|149-66
27748|code|BCS             loc_6CA8|32-210
27750|code|LDR.W           R3, [R11,#4]|219-248-4-48
27754|code|LDR.W           R4, [R3,R5,LSL#2]|83-248-37-64
27758|code|ADDS            R5, #1|1-53
27760|code|CBZ             R4, loc_6CA8|212-177
27762|code|LDR.W           R3, [R4,#0x12C]|212-248-44-49
27766|code|CMP             R3, #0|0-43
27768|code|BEQ             loc_6C62|243-208
27770|code|LDR             R2, [SP,#0x70+var_54]|7-154
27772|code|MOVS            R1, #4|4-33
27774|code|LDR.W           R3, [R4,#0x198]|212-248-152-49
27778|code|LDR             R0, [R2]|16-104
27780|code|ADDS            R3, #1|1-51
27782|code|LDR             R2, [SP,#0x70+var_4C]|9-154
27784|code|STR.W           R3, [R4,#0x198]|196-248-152-49
27788|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
27792|code|BLX             dlog|252-247-182-235
27796|code|LDR.W           R1, [R4,#0x12C]|212-248-44-17
27800|code|SUBS            R1, #1|1-57
27802|code|STR.W           R1, [R4,#0x12C]|196-248-44-17
27806|code|CBZ             R1, loc_6CC6|145-177
27808|code|LDR.W           R2, [R11]|219-248-0-32
27812|code|CMP             R5, R2|149-66
27814|code|BCC             loc_6C66|222-211
27816|code|LDR             R3, [SP,#0x70+var_50]|8-155
27818|code|CBZ             R3, loc_6CE0|203-177
27820|code|LDR             R3, [SP,#0x70+var_50]|8-155
27822|code|MOV             R0, R9|72-70
27824|code|SUBS            R3, #1|1-59
27826|code|STR             R3, [SP,#0x70+var_50]|8-147
27828|code|BLX             cleanup_lock|252-247-24-236
27832|code|LDR             R3, [SP,#0x70+var_38]|14-155
27834|code|CMP             R3, #0|0-43
27836|code|BNE             loc_6D60|80-209
27838|code|MOVS            R0, #1; seconds|1-32
27840|code|BLX             sleep|252-247-54-239
27844|code|B               loc_6AF2|21-231
27846|code|LDR.W           R0, [R4,#0x16C]|212-248-108-1
27850|code|BLX             dm_queue_if_no_path|252-247-196-238
27854|code|LDR             R2, [SP,#0x70+var_54]|7-154
27856|code|MOVS            R1, #2|2-33
27858|code|LDR.W           R3, [R4,#0x16C]|212-248-108-49
27862|code|LDR             R0, [R2]|16-104
27864|code|LDR             R2, [SP,#0x70+var_40]|12-154
27866|code|BLX             dlog|252-247-146-235
27870|code|B               loc_6CA0|223-231
27872|code|LDR             R3, [SP,#0x70+var_54]|7-155
27874|code|MOVS            R1, #4|4-33
27876|code|LDR             R2, [SP,#0x70+var_3C]|13-154
27878|code|LDR             R0, [R3]|24-104
27880|code|BLX             dlog|252-247-138-235
27884|code|LDR.W           R3, [R9,#0xC]|217-248-12-48
27888|code|CBZ             R3, loc_6D50|115-179
27890|code|LDR             R2, [R3]|26-104
27892|code|CBZ             R2, loc_6D50|98-179
27894|code|LDR             R2, [R3,#4]|90-104
27896|code|LDR             R5, [R2]|21-104
27898|code|CBZ             R5, loc_6D50|77-179
27900|code|LDR             R6, =(aSRemoveDeadMap - 0x6D04); "%s: remove dead map\n"|63-78
27902|code|MOVS            R4, #0|0-36
27904|code|ADD             R6, PC; "%s: remove dead map\n"|126-68
27906|code|B               loc_6D1A|10-224
27908|code|LDR.W           R3, [R9,#0xC]|217-248-12-48
27912|code|ADDS            R4, #1|1-52
27914|code|CBZ             R3, loc_6D50|11-179
27916|code|LDR             R2, [R3]|26-104
27918|code|CMP             R4, R2|148-66
27920|code|BCS             loc_6D50|30-210
27922|code|LDR             R2, [R3,#4]|90-104
27924|code|LDR.W           R5, [R2,R4,LSL#2]|82-248-36-80
27928|code|CBZ             R5, loc_6D50|213-177
27930|code|LDR.W           R0, [R5,#0x16C]|213-248-108-1
27934|code|CMP             R0, #0|0-40
27936|code|BEQ             loc_6D08|242-208
27938|code|BLX             dm_map_present|252-247-238-238
27942|code|CMP             R0, #0|0-40
27944|code|BNE             loc_6D04|236-209
27946|code|LDR             R3, [SP,#0x70+var_54]|7-155
27948|code|MOVS            R1, #2|2-33
27950|code|MOV             R2, R6|50-70
27952|code|LDR             R0, [R3]|24-104
27954|code|LDR.W           R3, [R5,#0x16C]|213-248-108-49
27958|code|BLX             dlog|252-247-100-235
27962|code|MOV             R0, R5|40-70
27964|code|MOV             R1, R9|73-70
27966|code|MOVS            R2, #1|1-34
27968|code|BLX             remove_map_and_stop_waiter|252-247-176-236
27972|code|LDR.W           R3, [R9,#0xC]|217-248-12-48
27976|code|SUBS            R4, #1|1-60
27978|code|ADDS            R4, #1|1-52
27980|code|CMP             R3, #0|0-43
27982|code|BNE             loc_6D0C|221-209
27984|code|MOV             R0, R9|72-70
27986|code|MOVS            R3, #5|5-35
27988|code|STR             R3, [SP,#0x70+var_50]|8-147
27990|code|BLX             cleanup_lock|252-247-200-235
27994|code|LDR             R3, [SP,#0x70+var_38]|14-155
27996|code|CMP             R3, #0|0-43
27998|code|BEQ             loc_6CBE|174-208
28000|code|ADD             R0, SP, #0x70+var_30; tv|16-168
28002|code|MOVS            R1, #0; tz|0-33
28004|code|BLX             gettimeofday|252-247-214-236
28008|code|LDR             R3, [SP,#0x70+var_5C]|5-155
28010|code|CMP             R3, #0|0-43
28012|code|CLZ.W           R0, R0|176-250-128-240
28016|code|MOV.W           R0, R0,LSR#5|79-234-80-16
28020|code|IT EQ|8-191
28022|code|MOVEQ           R0, #0|0-32
28024|code|CMP             R0, #0|0-40
28026|code|BEQ             loc_6CBE|160-208
28028|code|LDR             R3, [SP,#0x70+var_30.tv_usec]|17-155
28030|code|LDR             R2, [SP,#0x70+var_34]|15-154
28032|code|LDR             R0, [SP,#0x70+var_30]|16-152
28034|code|SUBS            R2, R3, R2|154-26
28036|code|LDR             R3, [SP,#0x70+var_54]|7-155
28038|code|LDR             R1, [SP,#0x70+var_38]|14-153
28040|code|ITT MI|68-191
28042|code|ADDMI.W         R2, R2, #0xF4000|2-245-116-34
28046|code|ADDMI.W         R2, R2, #0x240|2-245-16-114
28050|code|SUB.W           R1, R0, R1|160-235-1-1
28054|code|LDR             R0, [R3]|24-104
28056|code|LDR             R3, [SP,#0x70+var_5C]|5-155
28058|code|IT MI|72-191
28060|code|ADDMI.W         R1, R1, #0xFFFFFFFF|1-241-255-49
28064|code|CMP             R3, #1|1-43
28066|code|BLE             loc_6DC0|13-221
28068|code|LDR             R3, =(aWildcards+8 - 0x6DAA); "s"|22-75
28070|code|ADD             R3, PC; "s"|123-68
28072|code|STR             R2, [SP,#0x70+var_68]|2-146
28074|code|LDR             R2, =(aCheckedDPathSI - 0x6DB4); "checked %d path%s in %lu.%06lu secs\n"|22-74
28076|code|STR             R3, [SP,#0x70+var_70]|0-147
28078|code|STR             R1, [SP,#0x70+var_6C]|1-145
28080|code|ADD             R2, PC; "checked %d path%s in %lu.%06lu secs\n"|122-68
28082|code|LDR             R3, [SP,#0x70+var_5C]|5-155
28084|code|MOVS            R1, #3|3-33
28086|code|BLX             dlog|252-247-36-235
28090|code|B               loc_6CBE|128-231
28092|code|STR             R3, [SP,#0x70+var_5C]|5-147
28094|code|B               loc_6B66|210-230
28096|code|LDR             R3, =(aSFailedToCreat+0x30 - 0x6DC6); ""|17-75
28098|code|ADD             R3, PC; ""|123-68
28100|code|B               loc_6DA8|240-231
28102|code|STR             R1, [SP,#0x70+var_5C]|5-145
28104|code|B               loc_6B66|205-230
28106|code|MOV             R4, R0|4-70
28108|code|MOV             R0, R9|72-70
28110|code|BLX             cleanup_lock|252-247-140-235
28114|code|MOV             R0, R4|32-70
28116|code|BLX             _Unwind_Resume|252-247-102-239
28120|code|STR             R2, [SP,#0x70+var_5C]|5-146
28122|code|B               loc_6B66|196-230
28124|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6A90|252-80-1-0
28128|data|DCD aPathCheckersSt - 0x6A94; "path checkers start up\n"|180-57-0-0
28132|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
28136|data|DCD elf_gnu_hash_chain+0xA0|176-3-0-0
28140|data|DCD aTick - 0x6AE0; "tick\n"|128-57-0-0
28144|data|DCD aSRetryingNoAct - 0x6AE6; "%s: Retrying.. No active path\n"|130-57-0-0
28148|data|DCD aSDisableQueuei - 0x6AEC; "%s: Disable queueing\n"|156-57-0-0
28152|data|DCD aMapGarbageColl - 0x6AF2; "map garbage collection\n"|174-57-0-0
28156|data|DCD aSRemoveDeadMap - 0x6D04; "%s: remove dead map\n"|180-55-0-0
28160|data|DCD aWildcards+8 - 0x6DAA; "s"|146-63-0-0
28164|data|DCD aCheckedDPathSI - 0x6DB4; "checked %d path%s in %lu.%06lu secs\n"|28-55-0-0
28168|data|DCD aSFailedToCreat+0x30 - 0x6DC6; ""|166-49-0-0
28172|code|PUSH.W          {R4-R11,LR}|45-233-240-79
28176|code|SUB             SP, SP, #0x34|141-176
28178|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x6E1E)|106-77
28180|code|MOV             R8, R1|136-70
28182|code|LDR             R4, =(__stack_chk_guard_ptr - 0x1BB8C)|106-76
28184|code|MOVS            R1, #0x41 ; 'A'; oflag|65-33
28186|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
28188|code|MOV.W           R2, #0x1A4|79-244-210-114
28192|code|MOV             R9, R0|129-70
28194|code|LDR             R6, [R5,R4]; __stack_chk_guard|46-89
28196|code|LDR             R3, [R6]|51-104
28198|code|STR             R3, [SP,#0x58+var_2C]|11-147
28200|code|BLX             open|252-247-184-234
28204|code|SUBS            R7, R0, #0|7-30
28206|code|BLT             loc_6F0A|108-219
28208|code|MOVS            R1, #6; cmd|6-33
28210|code|ADD             R2, SP, #0x58+var_50|2-170
28212|code|MOVS            R4, #0|0-36
28214|code|MOV.W           R10, #1|79-240-1-10
28218|code|STR             R4, [SP,#0x58+var_4C]|3-148
28220|code|STRH.W          R10, [SP,#0x58+var_50]|173-248-8-160
28224|code|STRH.W          R4, [SP,#0x58+var_4E]|173-248-10-64
28228|code|STR             R4, [SP,#0x58+var_48]|4-148
28230|code|BLX             fcntl|252-247-218-238
28234|code|CMP             R0, R4|160-66
28236|code|BLT             loc_6ED0|64-219
28238|code|MOV             R0, R7; fd|56-70
28240|code|MOV             R1, R4; length|33-70
28242|code|BLX             ftruncate|252-247-98-238
28246|code|CMP             R0, #0|0-40
28248|code|BLT             loc_6F2E|105-219
28250|code|STR.W           R8, [SP,#0x58+var_54]|205-248-4-128
28254|code|ADD.W           R8, SP, #0x58+var_40|13-241-24-8
28258|code|LDR             R3, =(aU - 0x6E6E); "%u"|88-75
28260|code|MOVS            R1, #0x13|19-33
28262|code|MOV             R2, R10|82-70
28264|code|MOV             R0, R8|64-70
28266|code|ADD             R3, PC; "%u"|123-68
28268|code|STR             R3, [SP,#0x58+var_58]|0-147
28270|code|MOVS            R3, #0x14|20-35
28272|code|STR             R4, [SP,#0x58+var_40]|6-148
28274|code|STR             R4, [SP,#0x58+var_3C]|7-148
28276|code|STR             R4, [SP,#0x58+var_38]|8-148
28278|code|STR             R4, [SP,#0x58+var_34]|9-148
28280|code|STR             R4, [SP,#0x58+var_30]|10-148
28282|code|BLX             __snprintf_chk|252-247-132-237
28286|code|MOV             R0, R8; s|64-70
28288|code|BLX             strlen|252-247-186-236
28292|code|MOV             R1, R8; buf|65-70
28294|code|MOV             R2, R0; n|2-70
28296|code|MOV             R0, R7; fd|56-70
28298|code|BLX             write|252-247-30-236
28302|code|MOV             R11, R0|131-70
28304|code|MOV             R0, R8; s|64-70
28306|code|BLX             strlen|252-247-178-236
28310|code|CMP             R11, R0|131-69
28312|code|BEQ             loc_6F50|90-208
28314|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|75-75
28316|code|LDR             R3, [R5,R3]; logsink|235-88
28318|code|LDR             R5, [R3]|29-104
28320|code|BLX             __errno_location|252-247-72-239
28324|code|LDR             R0, [R0]; errnum|0-104
28326|code|BLX             strerror|252-247-158-234
28330|code|LDR             R2, =(aCannotWritePid - 0x6EB4); "Cannot write pid to pidfile [%s], error"...|72-74
28332|code|MOV             R1, R4|33-70
28334|code|MOV             R3, R9|75-70
28336|code|ADD             R2, PC; "Cannot write pid to pidfile [%s], error"...|122-68
28338|code|STR             R0, [SP,#0x58+var_58]|0-144
28340|code|MOV             R0, R5|40-70
28342|code|BLX             dlog|252-247-164-234
28346|code|MOV             R0, R7; fd|56-70
28348|code|BLX             close|252-247-146-237
28352|code|MOVS            R0, #1|1-32
28354|code|LDR             R2, [SP,#0x58+var_2C]|11-154
28356|code|LDR             R3, [R6]|51-104
28358|code|CMP             R2, R3|154-66
28360|code|BNE             loc_6FB6|117-209
28362|code|ADD             SP, SP, #0x34 ; '4'|13-176
28364|code|POP.W           {R4-R11,PC}|189-232-240-143
28368|code|BLX             __errno_location|252-247-48-239
28372|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|60-75
28374|code|LDR             R0, [R0]; errnum|0-104
28376|code|SUB.W           R1, R0, #0xB|160-241-11-1
28380|code|BICS.W          R1, R1, #2|49-240-2-1
28384|code|BEQ             loc_6EFC|12-208
28386|code|LDR             R3, [R5,R3]; logsink|235-88
28388|code|LDR             R5, [R3]|29-104
28390|code|BLX             strerror|252-247-126-234
28394|code|LDR             R2, =(aCannotLockPidf - 0x6EF4); "Cannot lock pidfile [%s], error was [%s"...|57-74
28396|code|MOV             R1, R4|33-70
28398|code|MOV             R3, R9|75-70
28400|code|ADD             R2, PC; "Cannot lock pidfile [%s], error was [%s"...|122-68
28402|code|STR             R0, [SP,#0x58+var_58]|0-144
28404|code|MOV             R0, R5|40-70
28406|code|BLX             dlog|252-247-132-234
28410|code|B               loc_6EBA|222-231
28412|code|LDR             R3, [R5,R3]; logsink|235-88
28414|code|LDR             R2, =(aProcessIsAlrea - 0x6F06); "process is already running\n"|53-74
28416|code|LDR             R0, [R3]|24-104
28418|code|ADD             R2, PC; "process is already running\n"|122-68
28420|code|BLX             dlog|252-247-124-234
28424|code|B               loc_6EBA|215-231
28426|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|47-75
28428|code|LDR             R3, [R5,R3]; logsink|235-88
28430|code|LDR             R4, [R3]|28-104
28432|code|BLX             __errno_location|252-247-16-239
28436|code|LDR             R0, [R0]; errnum|0-104
28438|code|BLX             strerror|252-247-102-234
28442|code|LDR             R2, =(aCannotOpenPidf - 0x6F24); "Cannot open pidfile [%s], error was [%s"...|47-74
28444|code|MOV             R3, R9|75-70
28446|code|MOVS            R1, #0|0-33
28448|code|ADD             R2, PC; "Cannot open pidfile [%s], error was [%s"...|122-68
28450|code|STR             R0, [SP,#0x58+var_58]|0-144
28452|code|MOV             R0, R4|32-70
28454|code|BLX             dlog|252-247-108-234
28458|code|MOVS            R0, #1|1-32
28460|code|B               loc_6EC2|201-231
28462|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|38-75
28464|code|LDR             R3, [R5,R3]; logsink|235-88
28466|code|LDR             R5, [R3]|29-104
28468|code|BLX             __errno_location|252-247-254-238
28472|code|LDR             R0, [R0]; errnum|0-104
28474|code|BLX             strerror|252-247-84-234
28478|code|LDR             R2, =(aCannotTruncate - 0x6F48); "Cannot truncate pidfile [%s], error was"...|39-74
28480|code|MOV             R1, R4|33-70
28482|code|MOV             R3, R9|75-70
28484|code|ADD             R2, PC; "Cannot truncate pidfile [%s], error was"...|122-68
28486|code|STR             R0, [SP,#0x58+var_58]|0-144
28488|code|MOV             R0, R5|40-70
28490|code|BLX             dlog|252-247-90-234
28494|code|B               loc_6EBA|180-231
28496|code|MOV             R1, R10; cmd|81-70
28498|code|MOV             R0, R7; fd|56-70
28500|code|MOV             R2, R4|34-70
28502|code|BLX             fcntl|252-247-82-238
28506|code|CMP             R0, #0|0-40
28508|code|BLT             loc_6F94|26-219
28510|code|ORR.W           R2, R0, #1|64-240-1-2
28514|code|MOVS            R1, #2; cmd|2-33
28516|code|MOV             R0, R7; fd|56-70
28518|code|BLX             fcntl|252-247-74-238
28522|code|CMP             R0, #0|0-40
28524|code|IT GE|168-191
28526|code|MOVGE           R0, R4|32-70
28528|code|BGE             loc_6EC2|167-218
28530|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|21-75
28532|code|LDR             R3, [R5,R3]; logsink|235-88
28534|code|LDR             R5, [R3]|29-104
28536|code|BLX             __errno_location|252-247-220-238
28540|code|LDR             R0, [R0]; errnum|0-104
28542|code|BLX             strerror|252-247-50-234
28546|code|LDR             R2, =(aCannotSetClose - 0x6F8C); "Cannot set close-on-exec flag from pidf"...|23-74
28548|code|MOV             R1, R4|33-70
28550|code|MOV             R3, R9|75-70
28552|code|ADD             R2, PC; "Cannot set close-on-exec flag from pidf"...|122-68
28554|code|STR             R0, [SP,#0x58+var_58]|0-144
28556|code|MOV             R0, R5|40-70
28558|code|BLX             dlog|252-247-56-234
28562|code|B               loc_6EBA|146-231
28564|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|12-75
28566|code|LDR             R3, [R5,R3]; logsink|235-88
28568|code|LDR             R5, [R3]|29-104
28570|code|BLX             __errno_location|252-247-204-238
28574|code|LDR             R0, [R0]; errnum|0-104
28576|code|BLX             strerror|252-247-32-234
28580|code|LDR             R2, =(aCannotGetClose - 0x6FAE); "Cannot get close-on-exec flag from pidf"...|15-74
28582|code|MOV             R1, R4|33-70
28584|code|MOV             R3, R9|75-70
28586|code|ADD             R2, PC; "Cannot get close-on-exec flag from pidf"...|122-68
28588|code|STR             R0, [SP,#0x58+var_58]|0-144
28590|code|MOV             R0, R5|40-70
28592|code|BLX             dlog|252-247-38-234
28596|code|B               loc_6EBA|129-231
28598|code|BLX             __stack_chk_fail|252-247-122-237
28602|data|ALIGN 4|0-191
28604|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x6E1E|110-77-1-0
28608|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
28612|data|DCD aU - 0x6E6E; "%u"|234-59-0-0
28616|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
28620|data|DCD aCannotWritePid - 0x6EB4; "Cannot write pid to pidfile [%s], error"...|168-59-0-0
28624|data|DCD aCannotLockPidf - 0x6EF4; "Cannot lock pidfile [%s], error was [%s"...|236-58-0-0
28628|data|DCD aProcessIsAlrea - 0x6F06; "process is already running\n"|6-59-0-0
28632|data|DCD aCannotOpenPidf - 0x6F24; "Cannot open pidfile [%s], error was [%s"...|144-58-0-0
28636|data|DCD aCannotTruncate - 0x6F48; "Cannot truncate pidfile [%s], error was"...|224-58-0-0
28640|data|DCD aCannotSetClose - 0x6F8C; "Cannot set close-on-exec flag from pidf"...|72-59-0-0
28644|data|DCD aCannotGetClose - 0x6FAE; "Cannot get close-on-exec flag from pidf"...|226-58-0-0
28648|code|PUSH            {R4,LR}|16-181
28650|code|MOV             R4, R0|4-70
28652|code|LDR             R0, [R0]; fd|0-104
28654|code|BLX             close|252-247-250-236
28658|code|LDR             R3, [R4,#8]|163-104
28660|code|CBZ             R3, loc_6FFA|11-177
28662|code|LDR             R2, [R4,#4]|98-104
28664|code|STR             R2, [R3,#4]|90-96
28666|code|LDR             R2, [R4,#4]|98-104
28668|code|CBZ             R2, loc_7000|2-177
28670|code|STR             R3, [R2,#8]|147-96
28672|code|LDR             R3, =(dword_1C02C - 0x7008)|7-75
28674|code|MOV             R0, R4|32-70
28676|code|ADD             R3, PC; dword_1C02C|123-68
28678|code|LDR             R1, [R3]|25-104
28680|code|CMP             R4, R1|140-66
28682|code|IT EQ|8-191
28684|code|STREQ           R2, [R3]|26-96
28686|code|BLX             xfree|252-247-84-234
28690|code|LDR             R2, =(dword_1C02C - 0x7018)|4-74
28692|code|ADD             R2, PC; dword_1C02C|122-68
28694|code|LDR             R3, [R2,#(dword_1C030 - 0x1C02C)]|83-104
28696|code|SUBS            R3, #1|1-59
28698|code|STR             R3, [R2,#(dword_1C030 - 0x1C02C)]|83-96
28700|code|POP             {R4,PC}|16-189
28702|data|ALIGN 0x10|0-191
28704|data|DCD dword_1C02C - 0x7008|36-80-1-0
28708|data|DCD dword_1C02C - 0x7018|20-80-1-0
28712|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x7030)|4-75
28714|code|LDR             R2, =(polls_ptr - 0x1BB8C)|5-74
28716|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
28718|code|LDR             R3, [R3,R2]; polls|155-88
28720|code|LDR             R0, [R3]|24-104
28722|code|CBZ             R0, locret_7038|8-177
28724|code|B.W             j_xfree|252-247-62-186
28728|code|BX              LR|112-71
28730|data|ALIGN 4|0-191
28732|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7030|92-75-1-0
28736|data|DCD polls_ptr - 0x1BB8C|96-4-0-0
28740|code|PUSH            {R3,LR}|8-181
28742|code|BL              sub_804C|1-240-1-248
28746|code|POP.W           {R3,LR}|189-232-8-64
28750|code|B.W             sub_7028|255-247-235-191
28754|data|ALIGN 4|0-191
28756|code|PUSH.W          {R4-R11,LR}|45-233-240-79
28760|code|SUB             SP, SP, #0xD4|181-176
28762|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x7066)|223-248-48-162
28766|code|MOV             R11, R1|139-70
28768|code|LDR             R3, =(__stack_chk_guard_ptr - 0x1BB8C)|139-75
28770|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
28772|code|STR             R0, [SP,#0xF8+var_EC]|3-144
28774|code|LDR             R0, =(aOrgKernelLinux - 0x7070); "/org/kernel/linux/storage/multipathd"|139-72
28776|code|LDR.W           R3, [R10,R3]; __stack_chk_guard|90-248-3-48
28780|code|ADD             R0, PC; "/org/kernel/linux/storage/multipathd"|120-68
28782|code|LDR             R3, [R3]|27-104
28784|code|STR             R3, [SP,#0xF8+var_2C]|51-147
28786|code|BLX             ux_socket_listen|252-247-172-233
28790|code|ADDS            R3, R0, #1|67-28
28792|code|STR             R0, [SP,#0xF8+fd]|5-144
28794|code|BEQ.W           loc_7258|0-240-237-128
28798|code|MOVS            R0, #0|0-32
28800|code|BLX             zalloc|252-247-122-237
28804|code|LDR             R4, =(dword_1C02C - 0x7090)|132-76
28806|code|ADD             R2, SP, #0xF8+oldmask; oldmask|15-170
28808|code|LDR             R3, =(polls_ptr - 0x1BB8C)|132-75
28810|code|MOVS            R1, #0; newmask|0-33
28812|code|ADD             R4, PC; dword_1C02C|124-68
28814|code|STR             R4, [SP,#0xF8+var_D8]|8-148
28816|code|LDR             R4, =(dword_1C02C - 0x709A)|131-76
28818|code|MOV             R5, R2|21-70
28820|code|STR             R2, [SP,#0xF8+var_E0]|6-146
28822|code|ADD             R4, PC; dword_1C02C|124-68
28824|code|STR             R4, [SP,#0xF8+var_D4]|9-148
28826|code|LDR.W           R3, [R10,R3]; polls|90-248-3-48
28830|code|LDR.W           R8, =(aGotRequestS - 0x70AC); "Got request [%s]\n"|223-248-4-130
28834|code|MOV             R6, R3|30-70
28836|code|STR             R3, [SP,#0xF8+var_F4]|1-147
28838|code|LDR             R3, =(aReplyDBytes - 0x70B2); "Reply [%d bytes]\n"|128-75
28840|code|ADD             R8, PC; "Got request [%s]\n"|248-68
28842|code|STR             R0, [R6]|48-96
28844|code|MOVS            R0, #2; how|2-32
28846|code|ADD             R3, PC; "Reply [%d bytes]\n"|123-68
28848|code|STR             R3, [SP,#0xF8+var_E8]|4-147
28850|code|BLX             pthread_sigmask|252-247-12-236
28854|code|MOVS            R1, #1; signo|1-33
28856|code|MOV             R0, R5; set|40-70
28858|code|BLX             sigdelset|252-247-4-237
28862|code|MOVS            R1, #0xA; signo|10-33
28864|code|MOV             R0, R5; set|40-70
28866|code|BLX             sigdelset|252-247-0-237
28870|code|LDR             R3, =(dword_1C02C - 0x70CE)|121-75
28872|code|LDR             R2, =(sleep_time_ptr - 0x1BB8C)|121-74
28874|code|ADD             R3, PC; dword_1C02C|123-68
28876|code|LDR             R0, [R6]; ptr|48-104
28878|code|LDR             R1, [R3,#(dword_1C030 - 0x1C02C)]|89-104
28880|code|LDR             R4, [R3]|28-104
28882|code|LDR.W           R3, [R10,R2]; sleep_time|90-248-2-48
28886|code|STR             R3, [SP,#0xF8+var_DC]|7-147
28888|code|ADDS            R1, #1|1-49
28890|code|LSLS            R1, R1, #3; size|201-0
28892|code|BLX             realloc|252-247-196-237
28896|code|LDR             R7, [SP,#0xF8+var_F4]|1-159
28898|code|LDR             R3, [SP,#0xF8+fd]|5-155
28900|code|MOVS            R1, #1|1-33
28902|code|STR             R0, [R7]|56-96
28904|code|STRH            R1, [R0,#4]|129-128
28906|code|STR             R3, [R0]|3-96
28908|code|CBZ             R4, loc_7104|84-177
28910|code|MOV             R3, R0|3-70
28912|code|MOV             R5, R1|13-70
28914|code|LDR             R2, [R4]|34-104
28916|code|ADDS            R1, #1|1-49
28918|code|LDR             R4, [R4,#4]|100-104
28920|code|ADDS            R3, #8|8-51
28922|code|STRH            R5, [R3,#4]|157-128
28924|code|STR             R2, [R3]|26-96
28926|code|CMP             R4, #0|0-44
28928|code|BNE             loc_70F2|247-209
28930|code|STR             R7, [SP,#0xF8+var_F4]|1-151
28932|code|LDR             R2, [SP,#0xF8+var_DC]|7-154
28934|code|LDR             R3, [SP,#0xF8+var_E0]|6-155
28936|code|BLX             ppoll|252-247-156-234
28940|code|ADDS            R4, R0, #1|68-28
28942|code|BEQ             loc_71D2|96-208
28944|code|CBNZ            R0, loc_7120|48-185
28946|code|LDR             R3, =(dword_1C02C - 0x711A)|104-75
28948|code|LDR             R2, [SP,#0xF8+var_F4]|1-154
28950|code|ADD             R3, PC; dword_1C02C|123-68
28952|code|LDR             R0, [R2]|16-104
28954|code|LDR             R1, [R3,#(dword_1C030 - 0x1C02C)]|89-104
28956|code|LDR             R4, [R3]|28-104
28958|code|B               loc_70D8|219-231
28960|code|LDR             R3, [SP,#0xF8+var_D8]|8-155
28962|code|ADD.W           R9, SP, #0xF8+var_C8|13-241-48-9
28966|code|MOVS            R5, #8|8-37
28968|code|LDR             R4, [R3]|28-104
28970|code|LDR             R3, [SP,#0xF8+var_F4]|1-155
28972|code|LDR             R0, [R3]|24-104
28974|code|CBNZ            R4, loc_7138|28-185
28976|code|B               loc_7160|22-224
28978|code|ADDS            R5, #8|8-53
28980|code|MOV             R4, R6|52-70
28982|code|CBZ             R6, loc_7160|158-177
28984|code|ADDS            R3, R0, R5|67-25
28986|code|LDR             R6, [R4,#4]|102-104
28988|code|LDRH            R3, [R3,#6]|219-136
28990|code|LSLS            R1, R3, #0x1F|217-7
28992|code|BPL             loc_7132|247-213
28994|code|LDR             R0, [R4]|32-104
28996|code|MOV             R1, R9|73-70
28998|code|ADD             R2, SP, #0xF8+var_D0|10-170
29000|code|BLX             recv_packet|252-247-234-235
29004|code|CBZ             R0, loc_7170|128-177
29006|code|MOV             R0, R4|32-70
29008|code|BL              sub_6FE8|255-247-74-255
29012|code|LDR             R3, [SP,#0xF8+var_F4]|1-155
29014|code|ADDS            R5, #8|8-53
29016|code|MOV             R4, R6|52-70
29018|code|LDR             R0, [R3]|24-104
29020|code|CMP             R6, #0|0-46
29022|code|BNE             loc_7138|235-209
29024|code|LDRH            R3, [R0,#6]|195-136
29026|code|LSLS            R2, R3, #0x1F|218-7
29028|code|BMI             loc_71F4|70-212
29030|code|LDR             R3, =(dword_1C02C - 0x716C)|84-75
29032|code|ADD             R3, PC; dword_1C02C|123-68
29034|code|LDR             R1, [R3,#(dword_1C030 - 0x1C02C)]|89-104
29036|code|LDR             R4, [R3]|28-104
29038|code|B               loc_70D8|179-231
29040|code|LDR             R7, [SP,#0xF8+var_D0]|10-159
29042|code|MOVS            R1, #4|4-33
29044|code|LDR             R3, [SP,#0xF8+var_C8]|12-155
29046|code|MOV             R2, R8|66-70
29048|code|LDR.W           LR, =(logsink_ptr - 0x1BB8C)|223-248-64-225
29052|code|ADD             R3, R7|59-68
29054|code|STRB.W          R0, [R3,#-1]|3-248-1-12
29058|code|LDR.W           R3, [R10,LR]; logsink|90-248-14-48
29062|code|MOV             R0, R3|24-70
29064|code|STR             R3, [SP,#0xF8+var_F0]|2-147
29066|code|LDR             R0, [R0]|0-104
29068|code|LDR             R3, [SP,#0xF8+var_C8]|12-155
29070|code|BLX             dlog|252-247-56-233
29074|code|LDR             R0, [SP,#0xF8+var_C8]|12-152
29076|code|ADD             R1, SP, #0xF8+var_C4|13-169
29078|code|ADD             R2, SP, #0xF8+var_CC|11-170
29080|code|MOV             R3, R11|91-70
29082|code|LDR             R7, [SP,#0xF8+var_EC]|3-159
29084|code|BLX             R7|184-71
29086|code|LDR             R1, [SP,#0xF8+var_C4]|13-153
29088|code|CBZ             R1, loc_71CA|153-177
29090|code|LDR             R0, [R4]|32-104
29092|code|LDR             R2, [SP,#0xF8+var_CC]|11-154
29094|code|BLX             send_packet|252-247-10-235
29098|code|CBZ             R0, loc_71B2|16-177
29100|code|MOV             R0, R4|32-70
29102|code|BL              sub_6FE8|255-247-27-255
29106|code|LDR             R3, [SP,#0xF8+var_F0]|2-155
29108|code|MOVS            R1, #4|4-33
29110|code|LDR             R2, [SP,#0xF8+var_E8]|4-154
29112|code|LDR             R0, [R3]|24-104
29114|code|LDR             R3, [SP,#0xF8+var_CC]|11-155
29116|code|BLX             dlog|252-247-32-233
29120|code|LDR             R0, [SP,#0xF8+var_C4]|13-152
29122|code|BLX             xfree|252-247-122-233
29126|code|MOVS            R3, #0|0-35
29128|code|STR             R3, [SP,#0xF8+var_C4]|13-147
29130|code|LDR             R0, [SP,#0xF8+var_C8]|12-152
29132|code|BLX             xfree|252-247-116-233
29136|code|B               loc_7154|192-231
29138|code|BLX             __errno_location|252-247-176-237
29142|code|LDR             R3, [R0]|3-104
29144|code|CMP             R3, #4|4-43
29146|code|BEQ             loc_725E|64-208
29148|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|55-75
29150|code|MOVS            R1, #0|0-33
29152|code|LDR             R2, =(aPoll - 0x71EA); "poll\n"|55-74
29154|code|LDR.W           R3, [R10,R3]; logsink|90-248-3-48
29158|code|ADD             R2, PC; "poll\n"|122-68
29160|code|LDR             R0, [R3]|24-104
29162|code|BLX             dlog|252-247-10-233
29166|code|MOVS            R0, #0; retval|0-32
29168|code|BLX             pthread_exit|252-247-66-233
29172|code|LDR             R0, [SP,#0xF8+fd]; fd|5-152
29174|code|ADD             R1, SP, #0xF8+addr; addr|47-169
29176|code|ADD             R2, SP, #0xF8+addr_len; addr_len|14-170
29178|code|MOVS            R3, #0x10|16-35
29180|code|STR             R3, [SP,#0xF8+addr_len]|14-147
29182|code|BLX             accept|252-247-156-234
29186|code|ADDS            R3, R0, #1|67-28
29188|code|MOV             R4, R0|4-70
29190|code|BEQ             loc_7270|51-208
29192|code|MOVS            R0, #0xC|12-32
29194|code|BLX             zalloc|252-247-182-236
29198|code|ADDS            R3, R0, #3|195-28
29200|code|MOV             R1, R0|1-70
29202|code|LDR             R0, =(dword_1C02C - 0x721E)|44-72
29204|code|MOVS            R2, #0|0-34
29206|code|STRB.W          R2, [R3],#1|3-248-1-43
29210|code|ADD             R0, PC; dword_1C02C|120-68
29212|code|STRB.W          R2, [R3],#1|3-248-1-43
29216|code|STRB.W          R2, [R3],#1|3-248-1-43
29220|code|LDR             R0, [R0]|0-104
29222|code|STRB.W          R2, [R3],#1|3-248-1-43
29226|code|STRB.W          R2, [R3],#1|3-248-1-43
29230|code|STRB.W          R2, [R3],#1|3-248-1-43
29234|code|STRB.W          R2, [R3],#1|3-248-1-43
29238|code|STRB.W          R2, [R3],#1|3-248-1-43
29242|code|STRB            R2, [R3]|26-112
29244|code|STR             R4, [R1]|12-96
29246|code|STR             R0, [R1,#4]|72-96
29248|code|CBZ             R0, loc_7244|0-177
29250|code|STR             R1, [R0,#8]|129-96
29252|code|LDR             R3, =(dword_1C02C - 0x724E)|32-75
29254|code|MOV             R4, R1|12-70
29256|code|LDR             R2, [SP,#0xF8+var_F4]|1-154
29258|code|ADD             R3, PC; dword_1C02C|123-68
29260|code|STR             R1, [R3]|25-96
29262|code|LDR             R1, [R3,#(dword_1C030 - 0x1C02C)]|89-104
29264|code|LDR             R0, [R2]|16-104
29266|code|ADDS            R1, #1|1-49
29268|code|STR             R1, [R3,#(dword_1C030 - 0x1C02C)]|89-96
29270|code|B               loc_70D8|63-231
29272|code|MOVS            R0, #1; status|1-32
29274|code|BLX             exit|252-247-96-237
29278|code|BL              sub_5B48|254-247-115-252
29282|code|LDR             R3, =(dword_1C02C - 0x726A)|26-75
29284|code|LDR             R2, [SP,#0xF8+var_F4]|1-154
29286|code|ADD             R3, PC; dword_1C02C|123-68
29288|code|LDR             R0, [R2]|16-104
29290|code|LDR             R1, [R3,#(dword_1C030 - 0x1C02C)]|89-104
29292|code|LDR             R4, [R3]|28-104
29294|code|B               loc_70D8|51-231
29296|code|LDR             R2, [SP,#0xF8+var_D4]|9-154
29298|code|LDR             R3, [SP,#0xF8+var_F4]|1-155
29300|code|LDR             R1, [R2,#4]|81-104
29302|code|LDR             R0, [R3]|24-104
29304|code|LDR             R4, [R2]|20-104
29306|code|B               loc_70D8|45-231
29308|code|MOV             R4, R0|4-70
29310|code|MOVS            R0, #0|0-32
29312|code|BL              sub_7044|255-247-224-254
29316|code|MOV             R0, R4|32-70
29318|code|BLX             _Unwind_Resume|252-247-14-237
29322|data|ALIGN 4|0-191
29324|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x7066|38-75-1-0
29328|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
29332|data|DCD aOrgKernelLinux - 0x7070; "/org/kernel/linux/storage/multipathd"|168-58-0-0
29336|data|DCD dword_1C02C - 0x7090|156-79-1-0
29340|data|DCD polls_ptr - 0x1BB8C|96-4-0-0
29344|data|DCD dword_1C02C - 0x709A|146-79-1-0
29348|data|DCD aGotRequestS - 0x70AC; "Got request [%s]\n"|156-58-0-0
29352|data|DCD aReplyDBytes - 0x70B2; "Reply [%d bytes]\n"|170-58-0-0
29356|data|DCD dword_1C02C - 0x70CE|94-79-1-0
29360|data|DCD sleep_time_ptr - 0x1BB8C|248-3-0-0
29364|data|DCD dword_1C02C - 0x711A|18-79-1-0
29368|data|DCD dword_1C02C - 0x716C|192-78-1-0
29372|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
29376|data|DCD aPoll - 0x71EA; "poll\n"|86-57-0-0
29380|data|DCD dword_1C02C - 0x721E|14-78-1-0
29384|data|DCD dword_1C02C - 0x724E|222-77-1-0
29388|data|DCD dword_1C02C - 0x726A|194-77-1-0
29392|code|PUSH.W          {R4-R11,LR}|45-233-240-79
29396|code|MOV             R4, R0|4-70
29398|code|LDR             R0, =(aOrgKernelLinux - 0x72E0); "/org/kernel/linux/storage/multipathd"|106-72
29400|code|SUB             SP, SP, #0x1C|135-176
29402|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x72E6)|106-79
29404|code|ADD             R0, PC; "/org/kernel/linux/storage/multipathd"|120-68
29406|code|BLX             ux_socket_connect|252-247-88-236
29410|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
29412|code|ADDS            R5, R0, #1|69-28
29414|code|MOV             R6, R0|6-70
29416|code|BEQ.W           loc_747A|0-240-199-128
29420|code|CBZ             R4, loc_7346|92-179
29422|code|MOV             R0, R4; s|32-70
29424|code|BLX             strlen|252-247-130-234
29428|code|MOV             R1, R4|33-70
29430|code|ADDS            R2, R0, #1|66-28
29432|code|MOV             R0, R6|48-70
29434|code|BLX             send_packet|252-247-96-234
29438|code|CBNZ            R0, loc_731C|104-185
29440|code|MOV             R0, R6|48-70
29442|code|ADD             R1, SP, #0x40+var_30|4-169
29444|code|ADD             R2, SP, #0x40+var_2C|5-170
29446|code|BLX             recv_packet|252-247-12-235
29450|code|CBZ             R0, loc_732C|120-177
29452|code|LDR             R0, =(aErrorReceiving - 0x7312); "error receiving packet"|94-72
29454|code|ADD             R0, PC; "error receiving packet"|120-68
29456|code|BLX             puts|252-247-68-236
29460|code|MOVS            R0, #0|0-32
29462|code|ADD             SP, SP, #0x1C|7-176
29464|code|POP.W           {R4-R11,PC}|189-232-240-143
29468|code|LDR             R0, =(aCannotSendPack - 0x7322); "cannot send packet"|91-72
29470|code|ADD             R0, PC; "cannot send packet"|120-68
29472|code|BLX             puts|252-247-60-236
29476|code|MOVS            R0, #0|0-32
29478|code|ADD             SP, SP, #0x1C|7-176
29480|code|POP.W           {R4-R11,PC}|189-232-240-143
29484|code|LDR             R1, =(aS_1 - 0x7336); "%s"|88-73
29486|code|MOVS            R0, #1|1-32
29488|code|LDR             R2, [SP,#0x40+var_30]|4-154
29490|code|ADD             R1, PC; "%s"|121-68
29492|code|BLX             __printf_chk|252-247-14-233
29496|code|LDR             R0, [SP,#0x40+var_30]|4-152
29498|code|BLX             xfree|252-247-190-232
29502|code|MOVS            R0, #0|0-32
29504|code|ADD             SP, SP, #0x1C|7-176
29506|code|POP.W           {R4-R11,PC}|189-232-240-143
29510|code|BL              sub_7E68|0-240-143-253
29514|code|LDR             R3, =(rl_readline_name_ptr - 0x1BB8C)|82-75
29516|code|LDR             R1, =(aMultipathd - 0x735E); "multipathd"|82-73
29518|code|ADD.W           R10, SP, #0x40+var_30|13-241-16-10
29522|code|LDR             R2, =(rl_completion_entry_function_ptr - 0x1BB8C)|82-74
29524|code|ADD.W           R9, SP, #0x40+var_2C|13-241-20-9
29528|code|LDR             R0, [R7,R3]; rl_readline_name|248-88
29530|code|ADD             R1, PC; "multipathd"|121-68
29532|code|LDR             R3, =(key_generator_ptr - 0x1BB8C)|80-75
29534|code|LDR.W           R8, =(aMultipathd_0 - 0x736A); "multipathd> "|223-248-68-129
29538|code|STR             R1, [R0]|1-96
29540|code|LDR             R3, [R7,R3]; key_generator|251-88
29542|code|ADD             R8, PC; "multipathd> "|248-68
29544|code|LDR             R2, [R7,R2]; rl_completion_entry_function|186-88
29546|code|LDR             R1, =(aS_1 - 0x7372); "%s"|79-73
29548|code|STR             R7, [SP,#0x40+var_40]|0-151
29550|code|ADD             R1, PC; "%s"|121-68
29552|code|STR             R3, [R2]|19-96
29554|code|STR             R1, [SP,#0x40+var_38]|2-145
29556|code|LDR             R3, =(aQuit - 0x737C); "quit"|77-75
29558|code|LDR             R1, =(aExit - 0x7380); "exit"|78-73
29560|code|ADD             R3, PC; "quit"|123-68
29562|code|STR             R3, [SP,#0x40+var_34]|3-147
29564|code|ADD             R1, PC; "exit"|121-68
29566|code|STR             R1, [SP,#0x40+s2]|1-145
29568|code|MOV             R0, R8|64-70
29570|code|BLX             readline|252-247-124-235
29574|code|MOV             R5, R0|5-70
29576|code|CMP             R0, #0|0-40
29578|code|BEQ             loc_7314|195-208
29580|code|BLX             strlen|252-247-52-234
29584|code|MOV             R7, R0|7-70
29586|code|CMP             R0, #0|0-40
29588|code|BEQ             loc_746A|105-208
29590|code|BLX             __ctype_b_loc|252-247-100-235
29594|code|MOV             R4, R7|60-70
29596|code|MOV             R3, R5|43-70
29598|code|LDR             R2, [R0]|2-104
29600|code|LDRB            R1, [R3]|25-120
29602|code|MOV             R11, R3|155-70
29604|code|ADDS            R3, #1|1-51
29606|code|LDRH.W          R1, [R2,R1,LSL#1]|50-248-17-16
29610|code|LSLS            R0, R1, #0x12|136-4
29612|code|BPL             loc_742C|62-213
29614|code|SUBS            R4, #1|1-60
29616|code|BNE             loc_73A0|246-209
29618|code|ADDS            R2, R7, #1|122-28
29620|code|MOV             R0, R6|48-70
29622|code|MOV             R1, R5|41-70
29624|code|BLX             send_packet|252-247-0-234
29628|code|CMP             R0, #0|0-40
29630|code|BNE             loc_7314|169-209
29632|code|MOV             R0, R6|48-70
29634|code|MOV             R1, R10|81-70
29636|code|MOV             R2, R9|74-70
29638|code|BLX             recv_packet|252-247-172-234
29642|code|CMP             R0, #0|0-40
29644|code|BNE             loc_7314|162-209
29646|code|MOVS            R0, #1; fd|1-32
29648|code|LDR             R4, [SP,#0x40+var_30]|4-156
29650|code|BLX             isatty|252-247-250-233
29654|code|CBNZ            R0, loc_7410|216-185
29656|code|LDRB            R0, [R4]|32-120
29658|code|CBZ             R0, loc_741A|240-177
29660|code|LDR             R3, =stru_420.st_value|53-75
29662|code|LDR             R2, [SP,#0x40+var_40]|0-154
29664|code|LDR.W           R11, [R2,R3]|82-248-3-176
29668|code|B               loc_73F4|6-224
29670|code|LDR.W           R1, [R11]; fp|219-248-0-16
29674|code|ADDS            R4, #1|1-52
29676|code|BLX             _IO_putc|252-247-78-236
29680|code|LDRB            R0, [R4]; c|32-120
29682|code|CBZ             R0, loc_741A|144-177
29684|code|CMP             R0, #0x1B|27-40
29686|code|BNE             loc_73E6|246-209
29688|code|LDRB            R3, [R4,#1]|99-120
29690|code|CMP             R3, #0x5B ; '['|91-43
29692|code|BNE             loc_73E6|243-209
29694|code|B               loc_7404|1-224
29696|code|CMP             R0, #0|0-40
29698|code|BEQ             loc_73E6|240-208
29700|code|ADDS            R3, R4, #1|99-28
29702|code|CMP             R0, #0x6D ; 'm'|109-40
29704|code|LDRB            R0, [R4,#1]|96-120
29706|code|MOV             R4, R3|28-70
29708|code|BNE             loc_7400|248-209
29710|code|B               loc_73E6|234-231
29712|code|MOV             R2, R4|34-70
29714|code|MOVS            R0, #1|1-32
29716|code|LDR             R1, [SP,#0x40+var_38]|2-153
29718|code|BLX             __printf_chk|252-247-158-232
29722|code|LDRB            R3, [R5]|43-120
29724|code|CBNZ            R3, loc_7472|75-187
29726|code|MOV             R0, R5; ptr|40-70
29728|code|BLX             free|252-247-70-233
29732|code|LDR             R0, [SP,#0x40+var_30]|4-152
29734|code|BLX             xfree|252-247-72-232
29738|code|B               loc_7380|169-231
29740|code|ADDS            R3, R5, R7|235-25
29742|code|B               loc_7434|1-224
29744|code|SUBS            R4, #1|1-60
29746|code|BEQ             loc_73B2|190-208
29748|code|LDRB.W          R1, [R3,#-1]!|19-248-1-29
29752|code|LDRH.W          R1, [R2,R1,LSL#1]|50-248-17-16
29756|code|LSLS            R1, R1, #0x12|137-4
29758|code|BMI             loc_7430|247-212
29760|code|CMP             R4, #4|4-44
29762|code|BNE             loc_73B2|182-209
29764|code|MOV             R0, R11; s1|88-70
29766|code|LDR             R1, [SP,#0x40+s2]; s2|1-153
29768|code|MOV             R2, R4; n|34-70
29770|code|BLX             strncmp|252-247-2-236
29774|code|CMP             R0, #0|0-40
29776|code|BEQ.W           loc_7314|63-244-96-175
29780|code|MOV             R0, R11; s1|88-70
29782|code|MOV             R2, R4; n|34-70
29784|code|LDR             R1, [SP,#0x40+var_34]; s2|3-153
29786|code|BLX             strncmp|252-247-250-235
29790|code|CMP             R0, #0|0-40
29792|code|BNE             loc_73B2|167-209
29794|code|MOVS            R0, #0|0-32
29796|code|ADD             SP, SP, #0x1C|7-176
29798|code|POP.W           {R4-R11,PC}|189-232-240-143
29802|code|MOV             R0, R5; ptr|40-70
29804|code|BLX             free|252-247-32-233
29808|code|B               loc_7380|134-231
29810|code|MOV             R0, R5|40-70
29812|code|BLX             add_history|252-247-254-235
29816|code|B               loc_741E|209-231
29818|code|MOVS            R0, #1; status|1-32
29820|code|BLX             exit|252-247-78-236
29824|data|DCD aOrgKernelLinux - 0x72E0; "/org/kernel/linux/storage/multipathd"|56-56-0-0
29828|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x72E6|166-72-1-0
29832|data|DCD aErrorReceiving - 0x7312; "error receiving packet"|114-56-0-0
29836|data|DCD aCannotSendPack - 0x7322; "cannot send packet"|78-56-0-0
29840|data|DCD aS_1 - 0x7336; "%s"|102-56-0-0
29844|data|DCD rl_readline_name_ptr - 0x1BB8C|40-4-0-0
29848|data|DCD aMultipathd - 0x735E; "multipathd"|94-43-0-0
29852|data|DCD rl_completion_entry_function_ptr - 0x1BB8C|204-3-0-0
29856|data|DCD key_generator_ptr - 0x1BB8C|56-4-0-0
29860|data|DCD aMultipathd_0 - 0x736A; "multipathd> "|70-56-0-0
29864|data|DCD aS_1 - 0x7372; "%s"|42-56-0-0
29868|data|DCD aQuit - 0x737C; "quit"|44-56-0-0
29872|data|DCD aExit - 0x7380; "exit"|32-56-0-0
29876|data|DCD stru_420.st_value|36-4-0-0
29880|code|LDR             R3, =(dword_1C03C - 0x74BE)|17-75
29882|code|ADD             R3, PC; dword_1C03C|123-68
29884|code|LDR             R3, [R3]|27-104
29886|code|CBZ             R3, loc_74FC|235-177
29888|code|PUSH            {R4,R5}|48-180
29890|code|LDR             R5, [R3]|29-104
29892|code|CMP             R5, #0|0-45
29894|code|BLE             loc_74F6|22-221
29896|code|LDR             R1, [R3,#4]|89-104
29898|code|LDR             R3, [R1]|11-104
29900|code|CBZ             R3, loc_74F0|131-177
29902|code|LDR             R2, [R3]|26-104
29904|code|CMP             R2, R0|130-66
29906|code|IT NE|24-191
29908|code|MOVNE           R2, #1|1-34
29910|code|BNE             loc_74E0|3-209
29912|code|B               loc_74F0|10-224
29914|code|LDR             R4, [R3]|28-104
29916|code|CMP             R4, R0|132-66
29918|code|BEQ             loc_74F0|7-208
29920|code|CMP             R2, R5|170-66
29922|code|ADD.W           R2, R2, #1|2-241-1-2
29926|code|BEQ             loc_74F6|6-208
29928|code|LDR.W           R3, [R1,#4]!|81-248-4-63
29932|code|CMP             R3, #0|0-43
29934|code|BNE             loc_74DA|244-209
29936|code|MOV             R0, R3|24-70
29938|code|POP             {R4,R5}|48-188
29940|code|BX              LR|112-71
29942|code|MOVS            R0, #0|0-32
29944|code|POP             {R4,R5}|48-188
29946|code|BX              LR|112-71
29948|code|MOV             R0, R3|24-70
29950|code|BX              LR|112-71
29952|data|DCD dword_1C03C - 0x74BE|126-75-1-0
29956|code|CBZ             R0, locret_752E|152-177
29958|code|PUSH            {R4}|16-180
29960|code|LDR             R4, [R0]|4-104
29962|code|CMP             R4, #0|0-44
29964|code|BLE             loc_7530|16-221
29966|code|LDR             R1, [R0,#4]|65-104
29968|code|LDR             R2, [R1]|10-104
29970|code|CBZ             R2, loc_7534|122-177
29972|code|MOVS            R0, #0|0-32
29974|code|MOV             R3, R0|3-70
29976|code|B               loc_7520|2-224
29978|code|LDR.W           R2, [R1,#4]!|81-248-4-47
29982|code|CBZ             R2, loc_752A|34-177
29984|code|ADDS            R3, #1|1-51
29986|code|LDR             R2, [R2,#8]|146-104
29988|code|CMP             R3, R4|163-66
29990|code|ADD             R0, R2|16-68
29992|code|BNE             loc_751A|247-209
29994|code|POP.W           {R4}|93-248-4-75
29998|code|BX              LR|112-71
30000|code|MOVS            R0, #0|0-32
30002|code|B               loc_752A|250-231
30004|code|MOV             R0, R2|16-70
30006|code|B               loc_752A|248-231
30008|code|PUSH.W          {R4-R8,LR}|45-233-240-65
30012|code|MOV             R5, R0|5-70
30014|code|MOVS            R0, #0x10|16-32
30016|code|MOV             R7, R1|15-70
30018|code|MOV             R8, R2|144-70
30020|code|MOV             R6, R3|30-70
30022|code|BLX             zalloc|252-247-24-235
30026|code|MOV             R4, R0|4-70
30028|code|CBZ             R0, loc_7586|216-177
30030|code|STR.W           R8, [R0,#8]|192-248-8-128
30034|code|MOV             R0, R7|56-70
30036|code|STR             R6, [R4,#0xC]|230-96
30038|code|BLX             __strdup|252-247-160-235
30042|code|STR             R0, [R4]|32-96
30044|code|CBZ             R0, loc_757A|104-177
30046|code|MOV             R0, R5|40-70
30048|code|BLX             vector_alloc_slot|252-247-116-233
30052|code|CBZ             R0, loc_7574|48-177
30054|code|MOV             R0, R5|40-70
30056|code|MOV             R1, R4|33-70
30058|code|BLX             vector_set_slot|252-247-198-235
30062|code|MOVS            R0, #0|0-32
30064|code|POP.W           {R4-R8,PC}|189-232-240-129
30068|code|LDR             R0, [R4]|32-104
30070|code|BLX             xfree|251-247-160-239
30074|code|MOV             R0, R4|32-70
30076|code|BLX             xfree|251-247-156-239
30080|code|MOVS            R0, #1|1-32
30082|code|POP.W           {R4-R8,PC}|189-232-240-129
30086|code|MOVS            R0, #1|1-32
30088|code|POP.W           {R4-R8,PC}|189-232-240-129
30092|code|PUSH.W          {R4-R11,LR}|45-233-240-79
30096|code|SUB             SP, SP, #0xC|131-176
30098|code|MOV             R11, R0|131-70
30100|code|BLX             strlen|252-247-48-233
30104|code|LDR             R3, =(dword_1C03C - 0x759E)|27-75
30106|code|ADD             R3, PC; dword_1C03C|123-68
30108|code|LDR             R3, [R3,#(dword_1C040 - 0x1C03C)]|91-104
30110|code|CBZ             R3, loc_75FE|115-179
30112|code|LDR.W           R10, [R3]|211-248-0-160
30116|code|CMP.W           R10, #0|186-241-0-15
30120|code|BLE             loc_75FC|40-221
30122|code|LDR             R7, [R3,#4]|95-104
30124|code|LDR             R4, [R7]|60-104
30126|code|CBZ             R4, loc_7602|68-179
30128|code|MOVS            R3, #0|0-35
30130|code|MOV             R8, R0|128-70
30132|code|STR             R3, [SP,#0x30+var_2C]|1-147
30134|code|MOV             R5, R3|29-70
30136|code|B               loc_75C0|2-224
30138|code|LDR.W           R4, [R7,#4]!|87-248-4-79
30142|code|CBZ             R4, loc_75E8|156-177
30144|code|LDR             R6, [R4]|38-104
30146|code|MOV             R1, R11; s2|89-70
30148|code|MOV             R2, R8; n|66-70
30150|code|ADDS            R5, #1|1-53
30152|code|MOV             R0, R6; s1|48-70
30154|code|BLX             strncmp|252-247-66-235
30158|code|MOV             R9, R0|129-70
30160|code|CBNZ            R0, loc_75E4|64-185
30162|code|MOV             R0, R6; s|48-70
30164|code|BLX             strlen|252-247-16-233
30168|code|CMP             R8, R0|128-69
30170|code|BEQ             loc_75F0|9-208
30172|code|BGE             loc_75E4|2-218
30174|code|LDR             R3, [SP,#0x30+var_2C]|1-155
30176|code|CBNZ            R3, loc_75F8|83-185
30178|code|STR             R4, [SP,#0x30+var_2C]|1-148
30180|code|CMP             R5, R10|85-69
30182|code|BNE             loc_75BA|232-209
30184|code|LDR             R0, [SP,#0x30+var_2C]|1-152
30186|code|ADD             SP, SP, #0xC|3-176
30188|code|POP.W           {R4-R11,PC}|189-232-240-143
30192|code|MOV             R0, R4|32-70
30194|code|ADD             SP, SP, #0xC|3-176
30196|code|POP.W           {R4-R11,PC}|189-232-240-143
30200|code|MOV             R0, R9|72-70
30202|code|B               loc_75EA|246-231
30204|code|MOVS            R3, #0|0-35
30206|code|STR             R3, [SP,#0x30+var_2C]|1-147
30208|code|B               loc_75E8|242-231
30210|code|STR             R4, [SP,#0x30+var_2C]|1-148
30212|code|B               loc_75E8|240-231
30214|data|ALIGN 4|0-191
30216|data|DCD dword_1C03C - 0x759E|158-74-1-0
30220|code|PUSH.W          {R4-R11,LR}|45-233-240-79
30224|code|MOVW            R0, #0x44C|64-242-76-64
30228|code|SUB             SP, SP, #0x44|145-176
30230|code|BLX             zalloc|252-247-176-234
30234|code|MOV             R6, R0|6-70
30236|code|STR             R0, [SP,#0x68+var_2C]|15-144
30238|code|CMP             R0, #0|0-40
30240|code|BEQ.W           loc_77F4|0-240-232-128
30244|code|MOVS            R3, #5|5-35
30246|code|STR             R3, [SP,#0x68+var_64]|1-147
30248|code|MOVS            R3, #0xD|13-35
30250|code|STR             R3, [SP,#0x68+var_54]|5-147
30252|code|LDR             R3, =(aMultipathTools - 0x763C); "multipath-tools v%d.%d.%d (%.2d/%.2d, 2"...|120-75
30254|code|MOV.W           R8, #0|79-240-0-8
30258|code|MOVS            R1, #0xC|12-33
30260|code|MOVS            R2, #0x11|17-34
30262|code|STR             R1, [SP,#0x68+var_5C]|3-145
30264|code|ADD             R3, PC; "multipath-tools v%d.%d.%d (%.2d/%.2d, 2"...|123-68
30266|code|MOVS            R1, #1|1-33
30268|code|STR             R2, [SP,#0x68+var_58]|4-146
30270|code|STR.W           R8, [SP,#0x68+var_68]|205-248-0-128
30274|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
30278|code|STR.W           R8, [SP,#0x68+var_60]|205-248-8-128
30282|code|BLX             __sprintf_chk|252-247-252-234
30286|code|LDR             R4, =(aCliCommandsRef - 0x7658); "CLI commands reference:\n"|113-76
30288|code|LDR.W           LR, =(dword_1C03C - 0x765A)|223-248-196-225
30292|code|ADD             R4, PC; "CLI commands reference:\n"|124-68
30294|code|ADD             LR, PC; dword_1C03C|254-68
30296|code|LDR.W           R7, [LR]|222-248-0-112
30300|code|ADDS            R5, R6, R0|53-24
30302|code|MOV             R12, R0|132-70
30304|code|LDM             R4!, {R0-R3}; "CLI commands reference:\n"|15-204
30306|code|MOV             R9, R5|169-70
30308|code|STR.W           R0, [R6,R12]|70-248-12-0
30312|code|STR             R1, [R5,#4]|105-96
30314|code|LDM             R4!, {R0,R1}; "erence:\n"|3-204
30316|code|STR             R3, [R5,#0xC]|235-96
30318|code|STR             R2, [R5,#8]|170-96
30320|code|LDRB            R3, [R4]; ""|35-120
30322|code|STR             R0, [R5,#0x10]|40-97
30324|code|STR             R1, [R5,#0x14]|105-97
30326|code|STRB.W          R3, [R9,#0x18]!|9-248-24-63
30330|code|CMP             R7, #0|0-47
30332|code|BEQ.W           loc_77F4|0-240-186-128
30336|code|LDR             R3, [R7]|59-104
30338|code|CMP             R3, R8|67-69
30340|code|BLE.W           loc_77F4|64-243-182-128
30344|code|LDR             R3, [R7,#4]|123-104
30346|code|LDR             R2, [R3]|26-104
30348|code|CMP             R2, #0|0-42
30350|code|BEQ.W           loc_77F4|0-240-177-128
30354|code|LDR             R7, =(aS_4 - 0x769A); "|%s"|98-79
30356|code|LDR             R3, =(dword_1C03C - 0x76A0)|98-75
30358|code|ADD             R7, PC; "|%s"|127-68
30360|code|STR.W           R8, [SP,#0x68+var_38]|205-248-48-128
30364|code|ADD             R3, PC; dword_1C03C|123-68
30366|code|STR.W           LR, [SP,#0x68+var_30]|205-248-56-224
30370|code|STR             R3, [SP,#0x68+var_4C]|7-147
30372|code|LDR             R3, [SP,#0x68+var_30]|14-155
30374|code|LDR.W           R10, [R2]|210-248-0-160
30378|code|LDR             R3, [R3,#4]|91-104
30380|code|CMP             R3, #0|0-43
30382|code|BEQ.W           loc_77C8|0-240-139-128
30386|code|LDR             R2, [R3]|26-104
30388|code|CMP             R2, #0|0-42
30390|code|BLE.W           loc_77C8|64-243-135-128
30394|code|LDR             R3, [R3,#4]|91-104
30396|code|LDR             R5, [R3]|29-104
30398|code|CMP             R5, #0|0-45
30400|code|BEQ.W           loc_77C8|0-240-130-128
30404|code|LDR             R3, =(aS_2 - 0x76D0); " %s"|87-75
30406|code|MOV.W           R11, #1|79-240-1-11
30410|code|MOV             R6, R10|86-70
30412|code|ADD             R3, PC; " %s"|123-68
30414|code|STR             R3, [SP,#0x68+var_40]|10-147
30416|code|LDR             R3, =(dword_1C03C - 0x76D6)|85-75
30418|code|ADD             R3, PC; dword_1C03C|123-68
30420|code|STR             R3, [SP,#0x68+var_3C]|11-147
30422|code|LDR             R3, =(aS_3 - 0x76DC); " $%s"|85-75
30424|code|ADD             R3, PC; " $%s"|123-68
30426|code|STR             R3, [SP,#0x68+var_34]|13-147
30428|code|B               loc_7702|17-224
30430|code|LDR             R3, [SP,#0x68+var_4C]|7-155
30432|code|LDR.W           R8, [R3,#4]|211-248-4-128
30436|code|CMP.W           R8, #0|184-241-0-15
30440|code|BEQ             loc_77C8|110-208
30442|code|LDR.W           R3, [R8]|216-248-0-48
30446|code|CMP             R3, R11|91-69
30448|code|BLE             loc_77C8|106-221
30450|code|LDR.W           R3, [R8,#4]|216-248-4-48
30454|code|LDR.W           R5, [R3,R11,LSL#2]|83-248-43-80
30458|code|ADD.W           R11, R11, #1|11-241-1-11
30462|code|CMP             R5, #0|0-45
30464|code|BEQ             loc_77C8|98-208
30466|code|LDR             R3, [R5,#8]|171-104
30468|code|TST             R6, R3|30-66
30470|code|BEQ             loc_76DE|234-208
30472|code|LDR             R4, [R5]|44-104
30474|code|MOV             R0, R9|72-70
30476|code|MOVS            R1, #1|1-33
30478|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
30482|code|SUBS            R6, R6, R3|246-26
30484|code|LDR             R3, [SP,#0x68+var_40]|10-155
30486|code|STR             R4, [SP,#0x68+var_68]|0-148
30488|code|BLX             __sprintf_chk|252-247-148-234
30492|code|LDR             R3, [SP,#0x68+var_3C]|11-155
30494|code|LDR.W           R8, [R3,#4]|211-248-4-128
30498|code|ADD             R9, R0|129-68
30500|code|CMP.W           R8, #0|184-241-0-15
30504|code|BEQ             loc_7806|109-208
30506|code|LDR.W           R12, [R8]|216-248-0-192
30510|code|CMP.W           R12, #0|188-241-0-15
30514|code|MOV             R3, R12|99-70
30516|code|BLE             loc_77FC|98-221
30518|code|LDR.W           R2, [R8,#4]|216-248-4-32
30522|code|LDR             R4, [R2]|20-104
30524|code|CMP             R4, #0|0-44
30526|code|BEQ             loc_77FC|93-208
30528|code|STR.W           R11, [SP,#0x68+var_48]|205-248-32-176
30532|code|MOV             R11, R7|187-70
30534|code|MOV.W           R10, #0|79-240-0-10
30538|code|STR             R6, [SP,#0x68+var_44]|9-150
30540|code|STR.W           R10, [SP,#0x68+var_50]|205-248-24-160
30544|code|LDR             R7, [R4,#8]|167-104
30546|code|MOV             R0, R9|72-70
30548|code|MOVS            R1, #1|1-33
30550|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
30554|code|MOV             R3, R11|91-70
30556|code|MOV             LR, R7|190-70
30558|code|LDR             R7, [R5,#8]|175-104
30560|code|MOV             R6, R7|62-70
30562|code|SUBS            R7, R5, R4|47-27
30564|code|IT NE|24-191
30566|code|MOVNE           R7, #1|1-39
30568|code|CMP             LR, R6|182-69
30570|code|IT NE|24-191
30572|code|MOVNE           R7, #0|0-39
30574|code|CBZ             R7, loc_7782|71-177
30576|code|LDR             R4, [R4]|36-104
30578|code|STR             R4, [SP,#0x68+var_68]|0-148
30580|code|BLX             __sprintf_chk|252-247-102-234
30584|code|LDR.W           R12, [R8]|216-248-0-192
30588|code|LDR             R3, [SP,#0x68+var_50]|6-155
30590|code|ADD             R3, R0|3-68
30592|code|STR             R3, [SP,#0x68+var_50]|6-147
30594|code|ADD.W           R10, R10, #1|10-241-1-10
30598|code|CMP             R12, R10|212-69
30600|code|BLE             loc_7796|5-221
30602|code|LDR.W           R3, [R8,#4]|216-248-4-48
30606|code|LDR.W           R4, [R3,R10,LSL#2]|83-248-42-64
30610|code|CMP             R4, #0|0-44
30612|code|BNE             loc_7750|220-209
30614|code|LDR             R3, [R5,#0xC]|235-104
30616|code|MOV             R7, R11|95-70
30618|code|LDR             R2, [SP,#0x68+var_50]|6-154
30620|code|LDR             R6, [SP,#0x68+var_44]|9-158
30622|code|LDR.W           R11, [SP,#0x68+var_48]|221-248-32-176
30626|code|ADD             R9, R2|145-68
30628|code|CMP             R3, #0|0-43
30630|code|BEQ             loc_76DE|154-208
30632|code|LDR             R4, [R5]|44-104
30634|code|MOV             R0, R9|72-70
30636|code|LDR             R3, [SP,#0x68+var_34]|13-155
30638|code|MOVS            R1, #1|1-33
30640|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
30644|code|STR             R4, [SP,#0x68+var_68]|0-148
30646|code|BLX             __sprintf_chk|252-247-70-234
30650|code|LDR             R3, [SP,#0x68+var_4C]|7-155
30652|code|LDR.W           R8, [R3,#4]|211-248-4-128
30656|code|ADD             R9, R0|129-68
30658|code|CMP.W           R8, #0|184-241-0-15
30662|code|BNE             loc_76EA|144-209
30664|code|LDR             R3, [SP,#0x68+var_38]|12-155
30666|code|LDR             R2, =(aSEitherDeviceN+0x24 - 0x77D4); "\n"|25-74
30668|code|ADDS            R3, #1|1-51
30670|code|STR             R3, [SP,#0x68+var_38]|12-147
30672|code|ADD             R2, PC; "\n"|122-68
30674|code|MOV             R0, R3|24-70
30676|code|LDR             R3, =(dword_1C03C - 0x77DC)|23-75
30678|code|LDRH            R2, [R2]; "\n"|18-136
30680|code|ADD             R3, PC; dword_1C03C|123-68
30682|code|LDR             R3, [R3]|27-104
30684|code|STRH.W          R2, [R9],#1|41-248-1-43
30688|code|CBZ             R3, loc_77F4|67-177
30690|code|LDR             R2, [R3]|26-104
30692|code|CMP             R2, R0|130-66
30694|code|BLE             loc_77F4|5-221
30696|code|LDR             R3, [R3,#4]|91-104
30698|code|LDR.W           R2, [R3,R0,LSL#2]|83-248-32-32
30702|code|CMP             R2, #0|0-42
30704|code|BNE.W           loc_76A4|127-244-88-175
30708|code|LDR             R0, [SP,#0x68+var_2C]|15-152
30710|code|ADD             SP, SP, #0x44 ; 'D'|17-176
30712|code|POP.W           {R4-R11,PC}|189-232-240-143
30716|code|LDR             R2, [R5,#0xC]|234-104
30718|code|CMP             R2, #0|0-42
30720|code|BEQ.W           loc_76EE|63-244-117-175
30724|code|B               loc_77A8|208-231
30726|code|LDR             R3, [R5,#0xC]|235-104
30728|code|CMP             R3, #0|0-43
30730|code|BEQ             loc_77C8|221-208
30732|code|B               loc_77A8|204-231
30734|data|ALIGN 0x10|0-191
30736|data|DCD aMultipathTools - 0x763C; "multipath-tools v%d.%d.%d (%.2d/%.2d, 2"...|132-53-0-0
30740|data|DCD aCliCommandsRef - 0x7658; "CLI commands reference:\n"|152-53-0-0
30744|data|DCD dword_1C03C - 0x765A|226-73-1-0
30748|data|DCD aS_4 - 0x769A; "|%s"|118-53-0-0
30752|data|DCD dword_1C03C - 0x76A0|156-73-1-0
30756|data|DCD aS_2 - 0x76D0; " %s"|60-53-0-0
30760|data|DCD dword_1C03C - 0x76D6|102-73-1-0
30764|data|DCD aS_3 - 0x76DC; " $%s"|56-53-0-0
30768|data|DCD aSEitherDeviceN+0x24 - 0x77D4; "\n"|104-35-0-0
30772|data|DCD dword_1C03C - 0x77DC|96-72-1-0
30776|code|PUSH            {R3-R7,LR}|248-181
30778|code|MOV             R7, R0|7-70
30780|code|MOVS            R0, #8|8-32
30782|code|MOV             R6, R1|14-70
30784|code|BLX             zalloc|252-247-154-233
30788|code|MOV             R4, R0|4-70
30790|code|CBZ             R0, loc_7864|104-177
30792|code|LDR             R5, =(dword_1C03C - 0x784E)|10-77
30794|code|ADD             R5, PC; dword_1C03C|125-68
30796|code|LDR             R0, [R5]|40-104
30798|code|BLX             vector_alloc_slot|251-247-254-239
30802|code|CBZ             R0, loc_7868|72-177
30804|code|LDR             R0, [R5]|40-104
30806|code|MOV             R1, R4|33-70
30808|code|BLX             vector_set_slot|252-247-78-234
30812|code|STR             R7, [R4]|39-96
30814|code|STR             R6, [R4,#4]|102-96
30816|code|MOVS            R0, #0|0-32
30818|code|POP             {R3-R7,PC}|248-189
30820|code|MOVS            R0, #1|1-32
30822|code|POP             {R3-R7,PC}|248-189
30824|code|MOV             R0, R4|32-70
30826|code|BLX             xfree|251-247-38-238
30830|code|MOVS            R0, #1|1-32
30832|code|POP             {R3-R7,PC}|248-189
30834|data|ALIGN 4|0-191
30836|data|DCD dword_1C03C - 0x784E|238-71-1-0
30840|code|PUSH            {R4,LR}|16-181
30842|code|MOV             R4, R1|12-70
30844|code|BL              sub_74B8|255-247-28-254
30848|code|CBZ             R0, loc_7888|16-177
30850|code|STR             R4, [R0,#4]|68-96
30852|code|MOVS            R0, #0|0-32
30854|code|POP             {R4,PC}|16-189
30856|code|MOVS            R0, #1|1-32
30858|code|POP             {R4,PC}|16-189
30860|code|PUSH            {R4-R6,LR}|112-181
30862|code|MOV             R6, R0|6-70
30864|code|CBZ             R0, loc_78CC|224-177
30866|code|LDR             R3, [R0]|3-104
30868|code|CMP             R3, #0|0-43
30870|code|BLE             loc_78CC|25-221
30872|code|LDR             R3, [R0,#4]|67-104
30874|code|LDR             R4, [R3]|28-104
30876|code|CBZ             R4, loc_78CC|180-177
30878|code|MOVS            R5, #0|0-37
30880|code|B               loc_78AA|3-224
30882|code|LDR             R3, [R6,#4]|115-104
30884|code|LDR.W           R4, [R3,R5,LSL#2]|83-248-37-64
30888|code|CBZ             R4, loc_78CC|132-177
30890|code|LDR             R3, [R4]|35-104
30892|code|MOV             R0, R3|24-70
30894|code|CBZ             R3, loc_78B4|11-177
30896|code|BLX             xfree|251-247-2-238
30900|code|LDR             R3, [R4,#4]|99-104
30902|code|MOV             R0, R3|24-70
30904|code|CBZ             R3, loc_78BE|11-177
30906|code|BLX             xfree|251-247-254-237
30910|code|MOV             R0, R4|32-70
30912|code|ADDS            R5, #1|1-53
30914|code|BLX             xfree|251-247-250-237
30918|code|LDR             R3, [R6]|51-104
30920|code|CMP             R3, R5|171-66
30922|code|BGT             loc_78A2|234-220
30924|code|MOV             R0, R6|48-70
30926|code|POP.W           {R4-R6,LR}|189-232-112-64
30930|code|B.W             j_vector_free|251-247-205-191
30934|data|ALIGN 4|0-191
30936|code|PUSH.W          {R3-R9,LR}|45-233-248-67
30940|code|MOV             R8, R1|136-70
30942|code|BLX             alloc_strvec|252-247-10-233
30946|code|MOV             R6, R0|6-70
30948|code|CMP             R0, #0|0-40
30950|code|BEQ             loc_7974|69-208
30952|code|BLX             vector_alloc|252-247-88-232
30956|code|MOV             R7, R0|7-70
30958|code|CMP             R0, #0|0-40
30960|code|BEQ             loc_797A|67-208
30962|code|LDR.W           LR, [R6]|214-248-0-224
30966|code|CMP.W           LR, #0|190-241-0-15
30970|code|BLE             loc_799C|79-221
30972|code|LDR             R3, [R6,#4]|115-104
30974|code|MOVS            R5, #0|0-37
30976|code|MOV             R2, R5|42-70
30978|code|MOV             R4, R5|44-70
30980|code|LDR             R3, [R3]|27-104
30982|code|CBNZ            R3, loc_795A|67-187
30984|code|B               loc_799C|72-224
30986|code|BL              sub_758C|255-247-63-254
30990|code|MOV             R9, R0|129-70
30992|code|CMP             R0, #0|0-40
30994|code|BEQ             loc_79AC|75-208
30996|code|MOVS            R0, #0x10|16-32
30998|code|BLX             zalloc|252-247-48-233
31002|code|MOV             R5, R0|5-70
31004|code|CMP             R0, #0|0-40
31006|code|BEQ             loc_79B0|71-208
31008|code|MOV             R0, R7|56-70
31010|code|BLX             vector_alloc_slot|251-247-148-239
31014|code|MOV             R1, R5|41-70
31016|code|CMP             R0, #0|0-40
31018|code|BEQ             loc_79B4|67-208
31020|code|MOV             R0, R7|56-70
31022|code|BLX             vector_set_slot|252-247-228-233
31026|code|LDR.W           R2, [R9,#0xC]|217-248-12-32
31030|code|LDR.W           R3, [R9,#8]|217-248-8-48
31034|code|LDR.W           LR, [R6]|214-248-0-224
31038|code|STR             R2, [R5,#0xC]|234-96
31040|code|LDR.W           R2, [R9,#0xC]|217-248-12-32
31044|code|STR             R3, [R5,#8]|171-96
31046|code|ADDS            R2, #0|0-50
31048|code|IT NE|24-191
31050|code|MOVNE           R2, #1|1-34
31052|code|ADDS            R4, #1|1-52
31054|code|CMP             LR, R4|166-69
31056|code|BLE             loc_7986|25-221
31058|code|LDR             R3, [R6,#4]|115-104
31060|code|LDR.W           R3, [R3,R4,LSL#2]|83-248-36-48
31064|code|CBZ             R3, loc_7986|171-177
31066|code|LDRB            R1, [R3]|25-120
31068|code|MOV             R0, R3|24-70
31070|code|CMP             R1, #0x22 ; '"'|34-41
31072|code|BEQ             loc_794C|244-208
31074|code|CMP             R2, #0|0-42
31076|code|BEQ             loc_790A|209-208
31078|code|BLX             __strdup|252-247-152-233
31082|code|LDR.W           LR, [R6]|214-248-0-224
31086|code|MOVS            R2, #0|0-34
31088|code|STR             R0, [R5,#4]|104-96
31090|code|B               loc_794C|235-231
31092|code|MOVS            R0, #3|3-32
31094|code|POP.W           {R3-R9,PC}|189-232-248-131
31098|code|MOV             R0, R6|48-70
31100|code|BLX             free_strvec|252-247-56-233
31104|code|MOVS            R0, #3|3-32
31106|code|POP.W           {R3-R9,PC}|189-232-248-131
31110|code|MOVS            R4, #2|2-36
31112|code|CBZ             R2, loc_799C|66-177
31114|code|MOV             R0, R6|48-70
31116|code|BLX             free_strvec|252-247-48-233
31120|code|MOV             R0, R7|56-70
31122|code|BL              sub_788C|255-247-123-255
31126|code|MOV             R0, R4|32-70
31128|code|POP.W           {R3-R9,PC}|189-232-248-131
31132|code|MOV             R0, R6|48-70
31134|code|STR.W           R7, [R8]|200-248-0-112
31138|code|BLX             free_strvec|252-247-38-233
31142|code|MOVS            R0, #0|0-32
31144|code|POP.W           {R3-R9,PC}|189-232-248-131
31148|code|MOVS            R4, #1|1-36
31150|code|B               loc_798A|236-231
31152|code|MOVS            R4, #3|3-36
31154|code|B               loc_798A|234-231
31156|code|MOV             R0, R5|40-70
31158|code|MOVS            R4, #3|3-36
31160|code|BLX             xfree|251-247-126-237
31164|code|B               loc_798A|229-231
31166|data|ALIGN 0x10|0-191
31168|code|PUSH            {R3-R5,LR}|56-181
31170|code|LDR             R5, =(dword_1C03C - 0x79C8)|17-77
31172|code|ADD             R5, PC; dword_1C03C|125-68
31174|code|LDR             R3, [R5]|43-104
31176|code|CBZ             R3, loc_79F4|163-177
31178|code|LDR             R2, [R3]|26-104
31180|code|CMP             R2, #0|0-42
31182|code|BLE             loc_79F6|18-221
31184|code|LDR             R2, [R3,#4]|90-104
31186|code|LDR             R0, [R2]|16-104
31188|code|CBZ             R0, loc_79F6|120-177
31190|code|MOVS            R4, #0|0-36
31192|code|B               loc_79E8|6-224
31194|code|LDR             R2, [R3]|26-104
31196|code|CMP             R2, R4|162-66
31198|code|BLE             loc_79F6|10-221
31200|code|LDR             R2, [R3,#4]|90-104
31202|code|LDR.W           R0, [R2,R4,LSL#2]|82-248-36-0
31206|code|CBZ             R0, loc_79F6|48-177
31208|code|BLX             xfree|251-247-102-237
31212|code|LDR             R3, [R5]|43-104
31214|code|ADDS            R4, #1|1-52
31216|code|CMP             R3, #0|0-43
31218|code|BNE             loc_79DA|242-209
31220|code|MOVS            R3, #0|0-35
31222|code|MOV             R0, R3|24-70
31224|code|BLX             vector_free|251-247-60-239
31228|code|LDR             R3, =(dword_1C03C - 0x7A04)|3-75
31230|code|MOVS            R2, #0|0-34
31232|code|ADD             R3, PC; dword_1C03C|123-68
31234|code|STR             R2, [R3]|26-96
31236|code|POP             {R3-R5,PC}|56-189
31238|data|ALIGN 4|0-191
31240|data|DCD dword_1C03C - 0x79C8|116-70-1-0
31244|data|DCD dword_1C03C - 0x7A04|56-70-1-0
31248|code|PUSH            {R3-R5,LR}|56-181
31250|code|BLX             vector_alloc|251-247-196-239
31254|code|LDR             R5, =(dword_1C03C - 0x7A1C)|181-77
31256|code|ADD             R5, PC; dword_1C03C|125-68
31258|code|STR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-96
31260|code|CMP             R0, #0|0-40
31262|code|BEQ.W           loc_7CE8|0-240-99-129
31266|code|LDR             R1, =(aList - 0x7A2C); "list"|179-73
31268|code|MOVS            R2, #1|1-34
31270|code|MOVS            R3, #0|0-35
31272|code|ADD             R1, PC; "list"|121-68
31274|code|BL              sub_7538|255-247-133-253
31278|code|LDR             R1, =(aShow - 0x7A38); "show"|177-73
31280|code|MOVS            R2, #1|1-34
31282|code|MOVS            R3, #0|0-35
31284|code|ADD             R1, PC; "show"|121-68
31286|code|MOV             R4, R0|4-70
31288|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31290|code|BL              sub_7538|255-247-125-253
31294|code|LDR             R1, =(aAdd - 0x7A48); "add"|174-73
31296|code|MOVS            R2, #2|2-34
31298|code|MOVS            R3, #0|0-35
31300|code|ADD             R1, PC; "add"|121-68
31302|code|ADD             R4, R0|4-68
31304|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31306|code|BL              sub_7538|255-247-117-253
31310|code|LDR             R1, =(aRemove - 0x7A58); "remove"|171-73
31312|code|MOVS            R2, #4|4-34
31314|code|MOVS            R3, #0|0-35
31316|code|ADD             R1, PC; "remove"|121-68
31318|code|ADD             R4, R0|4-68
31320|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31322|code|BL              sub_7538|255-247-109-253
31326|code|LDR             R1, =(aDel - 0x7A68); "del"|168-73
31328|code|MOVS            R2, #4|4-34
31330|code|MOVS            R3, #0|0-35
31332|code|ADD             R1, PC; "del"|121-68
31334|code|ADD             R4, R0|4-68
31336|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31338|code|BL              sub_7538|255-247-101-253
31342|code|LDR             R1, =(aSwitch - 0x7A78); "switch"|165-73
31344|code|MOVS            R2, #8|8-34
31346|code|MOVS            R3, #0|0-35
31348|code|ADD             R1, PC; "switch"|121-68
31350|code|ADD             R4, R0|4-68
31352|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31354|code|BL              sub_7538|255-247-93-253
31358|code|LDR             R1, =(aSwitchgroup - 0x7A88); "switchgroup"|162-73
31360|code|MOVS            R2, #8|8-34
31362|code|MOVS            R3, #0|0-35
31364|code|ADD             R1, PC; "switchgroup"|121-68
31366|code|ADD             R4, R0|4-68
31368|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31370|code|BL              sub_7538|255-247-85-253
31374|code|LDR             R1, =(aSuspend - 0x7A98); "suspend"|159-73
31376|code|MOVS            R2, #0x10|16-34
31378|code|MOVS            R3, #0|0-35
31380|code|ADD             R1, PC; "suspend"|121-68
31382|code|ADD             R4, R0|4-68
31384|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31386|code|BL              sub_7538|255-247-77-253
31390|code|LDR             R1, =(aResume - 0x7AA8); "resume"|156-73
31392|code|MOVS            R2, #0x20 ; ' '|32-34
31394|code|MOVS            R3, #0|0-35
31396|code|ADD             R1, PC; "resume"|121-68
31398|code|ADD             R4, R0|4-68
31400|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31402|code|BL              sub_7538|255-247-69-253
31406|code|LDR             R1, =(aReinstate - 0x7AB8); "reinstate"|153-73
31408|code|MOVS            R2, #0x40 ; '@'|64-34
31410|code|MOVS            R3, #0|0-35
31412|code|ADD             R1, PC; "reinstate"|121-68
31414|code|ADD             R4, R0|4-68
31416|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31418|code|BL              sub_7538|255-247-61-253
31422|code|LDR             R1, =(aFail_0 - 0x7AC8); "fail"|150-73
31424|code|MOVS            R2, #0x80|128-34
31426|code|MOVS            R3, #0|0-35
31428|code|ADD             R1, PC; "fail"|121-68
31430|code|ADD             R4, R0|4-68
31432|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31434|code|BL              sub_7538|255-247-53-253
31438|code|LDR             R1, =(aResize - 0x7ADA); "resize"|147-73
31440|code|MOV.W           R2, #0x100|79-244-128-114
31444|code|MOVS            R3, #0|0-35
31446|code|ADD             R1, PC; "resize"|121-68
31448|code|ADD             R4, R0|4-68
31450|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31452|code|BL              sub_7538|255-247-44-253
31456|code|LDR             R1, =(aReset - 0x7AEC); "reset"|143-73
31458|code|MOV.W           R2, #0x200|79-244-0-114
31462|code|MOVS            R3, #0|0-35
31464|code|ADD             R1, PC; "reset"|121-68
31466|code|ADD             R4, R0|4-68
31468|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31470|code|BL              sub_7538|255-247-35-253
31474|code|LDR             R1, =(aReload - 0x7AFE); "reload"|140-73
31476|code|MOV.W           R2, #0x400|79-244-128-98
31480|code|MOVS            R3, #0|0-35
31482|code|ADD             R1, PC; "reload"|121-68
31484|code|ADD             R4, R0|4-68
31486|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31488|code|BL              sub_7538|255-247-26-253
31492|code|LDR             R1, =(aForcequeueing - 0x7B10); "forcequeueing"|136-73
31494|code|MOV.W           R2, #0x800|79-244-0-98
31498|code|MOVS            R3, #0|0-35
31500|code|ADD             R1, PC; "forcequeueing"|121-68
31502|code|ADD             R4, R0|4-68
31504|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31506|code|BL              sub_7538|255-247-17-253
31510|code|LDR             R1, =(aDisablequeuein - 0x7B22); "disablequeueing"|133-73
31512|code|MOV.W           R2, #0x1000|79-244-128-82
31516|code|MOVS            R3, #0|0-35
31518|code|ADD             R1, PC; "disablequeueing"|121-68
31520|code|ADD             R4, R0|4-68
31522|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31524|code|BL              sub_7538|255-247-8-253
31528|code|LDR             R1, =(aRestorequeuein - 0x7B34); "restorequeueing"|129-73
31530|code|MOV.W           R2, #0x2000|79-244-0-82
31534|code|MOVS            R3, #0|0-35
31536|code|ADD             R1, PC; "restorequeueing"|121-68
31538|code|ADD             R4, R0|4-68
31540|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31542|code|BL              sub_7538|255-247-255-252
31546|code|LDR             R1, =(aPaths - 0x7B46); "paths"|126-73
31548|code|MOV.W           R2, #0x4000|79-244-128-66
31552|code|MOVS            R3, #0|0-35
31554|code|ADD             R1, PC; "paths"|121-68
31556|code|ADD             R4, R0|4-68
31558|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31560|code|BL              sub_7538|255-247-246-252
31564|code|LDR             R1, =(aMaps - 0x7B58); "maps"|122-73
31566|code|MOV.W           R2, #0x8000|79-244-0-66
31570|code|MOVS            R3, #0|0-35
31572|code|ADD             R1, PC; "maps"|121-68
31574|code|ADD             R4, R0|4-68
31576|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31578|code|BL              sub_7538|255-247-237-252
31582|code|LDR             R1, =(aMultipaths - 0x7B6A); "multipaths"|119-73
31584|code|MOV.W           R2, #0x8000|79-244-0-66
31588|code|MOVS            R3, #0|0-35
31590|code|ADD             R1, PC; "multipaths"|121-68
31592|code|ADD             R4, R0|4-68
31594|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31596|code|BL              sub_7538|255-247-228-252
31600|code|LDR             R1, =(aPath - 0x7B7C); "path"|115-73
31602|code|MOV.W           R2, #0x10000|79-244-128-50
31606|code|MOVS            R3, #1|1-35
31608|code|ADD             R1, PC; "path"|121-68
31610|code|ADD             R4, R0|4-68
31612|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31614|code|BL              sub_7538|255-247-219-252
31618|code|LDR             R1, =(aMap - 0x7B8E); "map"|112-73
31620|code|MOV.W           R2, #0x20000|79-244-0-50
31624|code|MOVS            R3, #1|1-35
31626|code|ADD             R1, PC; "map"|121-68
31628|code|ADD             R4, R0|4-68
31630|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31632|code|BL              sub_7538|255-247-210-252
31636|code|LDR             R1, =(aMultipath - 0x7BA0); "multipath"|108-73
31638|code|MOV.W           R2, #0x20000|79-244-0-50
31642|code|MOVS            R3, #1|1-35
31644|code|ADD             R1, PC; "multipath"|121-68
31646|code|ADD             R4, R0|4-68
31648|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31650|code|BL              sub_7538|255-247-201-252
31654|code|LDR             R1, =(aGroup - 0x7BB2); "group"|105-73
31656|code|MOV.W           R2, #0x40000|79-244-128-34
31660|code|MOVS            R3, #1|1-35
31662|code|ADD             R1, PC; "group"|121-68
31664|code|ADD             R4, R0|4-68
31666|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31668|code|BL              sub_7538|255-247-192-252
31672|code|LDR             R1, =(aReconfigure - 0x7BC4); "reconfigure"|101-73
31674|code|MOV.W           R2, #0x80000|79-244-0-34
31678|code|MOVS            R3, #0|0-35
31680|code|ADD             R1, PC; "reconfigure"|121-68
31682|code|ADD             R4, R0|4-68
31684|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31686|code|BL              sub_7538|255-247-183-252
31690|code|LDR             R1, =(aDaemon - 0x7BD6); "daemon"|98-73
31692|code|MOV.W           R2, #0x100000|79-244-128-18
31696|code|MOVS            R3, #0|0-35
31698|code|ADD             R1, PC; "daemon"|121-68
31700|code|ADD             R4, R0|4-68
31702|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31704|code|BL              sub_7538|255-247-174-252
31708|code|LDR             R1, =(aStatus - 0x7BE8); "status"|94-73
31710|code|MOV.W           R2, #0x200000|79-244-0-18
31714|code|MOVS            R3, #0|0-35
31716|code|ADD             R1, PC; "status"|121-68
31718|code|ADD             R4, R0|4-68
31720|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31722|code|BL              sub_7538|255-247-165-252
31726|code|LDR             R1, =(aStats - 0x7BFA); "stats"|91-73
31728|code|MOV.W           R2, #0x400000|79-244-128-2
31732|code|MOVS            R3, #0|0-35
31734|code|ADD             R1, PC; "stats"|121-68
31736|code|ADD             R4, R0|4-68
31738|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31740|code|BL              sub_7538|255-247-156-252
31744|code|LDR             R1, =(aTopology - 0x7C0C); "topology"|87-73
31746|code|MOV.W           R2, #0x800000|79-244-0-2
31750|code|MOVS            R3, #0|0-35
31752|code|ADD             R1, PC; "topology"|121-68
31754|code|ADD             R4, R0|4-68
31756|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31758|code|BL              sub_7538|255-247-147-252
31762|code|LDR             R1, =(aConfig - 0x7C1E); "config"|84-73
31764|code|MOV.W           R2, #0x1000000|79-240-128-114
31768|code|MOVS            R3, #0|0-35
31770|code|ADD             R1, PC; "config"|121-68
31772|code|ADD             R4, R0|4-68
31774|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31776|code|BL              sub_7538|255-247-138-252
31780|code|LDR             R1, =(aBlacklist - 0x7C30); "blacklist"|80-73
31782|code|MOV.W           R2, #0x2000000|79-240-0-114
31786|code|MOVS            R3, #0|0-35
31788|code|ADD             R1, PC; "blacklist"|121-68
31790|code|ADD             R4, R0|4-68
31792|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31794|code|BL              sub_7538|255-247-129-252
31798|code|LDR             R1, =(aDevices - 0x7C42); "devices"|77-73
31800|code|MOV.W           R2, #0x4000000|79-240-128-98
31804|code|MOVS            R3, #0|0-35
31806|code|ADD             R1, PC; "devices"|121-68
31808|code|ADD             R4, R0|4-68
31810|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31812|code|BL              sub_7538|255-247-120-252
31816|code|LDR             R1, =(aFormat - 0x7C54); "format"|73-73
31818|code|MOV.W           R2, #0x8000000|79-240-0-98
31822|code|MOVS            R3, #1|1-35
31824|code|ADD             R1, PC; "format"|121-68
31826|code|ADD             R4, R0|4-68
31828|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31830|code|BL              sub_7538|255-247-111-252
31834|code|LDR             R1, =(aWildcards - 0x7C66); "wildcards"|70-73
31836|code|MOV.W           R2, #0x10000000|79-240-128-82
31840|code|MOVS            R3, #0|0-35
31842|code|ADD             R1, PC; "wildcards"|121-68
31844|code|ADD             R4, R0|4-68
31846|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31848|code|BL              sub_7538|255-247-102-252
31852|code|LDR             R1, =(aQuit - 0x7C78); "quit"|66-73
31854|code|MOV.W           R2, #0x20000000|79-240-0-82
31858|code|MOVS            R3, #0|0-35
31860|code|ADD             R1, PC; "quit"|121-68
31862|code|ADD             R4, R0|4-68
31864|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31866|code|BL              sub_7538|255-247-93-252
31870|code|LDR             R1, =(aExit - 0x7C8A); "exit"|63-73
31872|code|MOV.W           R2, #0x20000000|79-240-0-82
31876|code|MOVS            R3, #0|0-35
31878|code|ADD             R1, PC; "exit"|121-68
31880|code|ADD             R4, R0|4-68
31882|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31884|code|BL              sub_7538|255-247-84-252
31888|code|LDR             R1, =(aShutdown - 0x7C9C); "shutdown"|59-73
31890|code|MOV.W           R2, #0x40000000|79-240-128-66
31894|code|MOVS            R3, #0|0-35
31896|code|ADD             R1, PC; "shutdown"|121-68
31898|code|ADD             R4, R0|4-68
31900|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31902|code|BL              sub_7538|255-247-75-252
31906|code|LDR             R1, =(aGetprstatus - 0x7CAE); "getprstatus"|56-73
31908|code|MOV.W           R2, #0x80000000|79-240-0-66
31912|code|MOVS            R3, #0|0-35
31914|code|ADD             R1, PC; "getprstatus"|121-68
31916|code|ADD             R4, R0|4-68
31918|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31920|code|BL              sub_7538|255-247-66-252
31924|code|LDR             R1, =(aSetprstatus - 0x7CBE); "setprstatus"|52-73
31926|code|MOVS            R2, #0|0-34
31928|code|MOV             R3, R2|19-70
31930|code|ADD             R1, PC; "setprstatus"|121-68
31932|code|ADD             R4, R0|4-68
31934|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31936|code|BL              sub_7538|255-247-58-252
31940|code|LDR             R1, =(aUnsetprstatus - 0x7CCE); "unsetprstatus"|49-73
31942|code|MOVS            R2, #0|0-34
31944|code|MOV             R3, R2|19-70
31946|code|ADD             R1, PC; "unsetprstatus"|121-68
31948|code|ADD             R4, R0|4-68
31950|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31952|code|BL              sub_7538|255-247-50-252
31956|code|ADDS            R0, R4, R0|32-24
31958|code|BNE             loc_7CDA|0-209
31960|code|POP             {R3-R5,PC}|56-189
31962|code|LDR             R0, [R5,#(dword_1C040 - 0x1C03C)]|104-104
31964|code|BL              sub_788C|255-247-214-253
31968|code|MOVS            R3, #0|0-35
31970|code|MOVS            R0, #1|1-32
31972|code|STR             R3, [R5,#(dword_1C040 - 0x1C03C)]|107-96
31974|code|POP             {R3-R5,PC}|56-189
31976|code|MOVS            R0, #1|1-32
31978|code|POP             {R3-R5,PC}|56-189
31980|data|DCD dword_1C03C - 0x7A1C|32-70-1-0
31984|data|DCD aList - 0x7A2C; "list"|240-49-0-0
31988|data|DCD aShow - 0x7A38; "show"|236-49-0-0
31992|data|DCD aAdd - 0x7A48; "add"|128-39-0-0
31996|data|DCD aRemove - 0x7A58; "remove"|40-39-0-0
32000|data|DCD aDel - 0x7A68; "del"|196-49-0-0
32004|data|DCD aSwitch - 0x7A78; "switch"|184-49-0-0
32008|data|DCD aSwitchgroup - 0x7A88; "switchgroup"|176-49-0-0
32012|data|DCD aSuspend - 0x7A98; "suspend"|172-49-0-0
32016|data|DCD aResume - 0x7AA8; "resume"|164-49-0-0
32020|data|DCD aReinstate - 0x7AB8; "reinstate"|156-49-0-0
32024|data|DCD aFail_0 - 0x7AC8; "fail"|152-49-0-0
32028|data|DCD aResize - 0x7ADA; "resize"|142-49-0-0
32032|data|DCD aReset - 0x7AEC; "reset"|132-49-0-0
32036|data|DCD aReload - 0x7AFE; "reload"|122-49-0-0
32040|data|DCD aForcequeueing - 0x7B10; "forcequeueing"|112-49-0-0
32044|data|DCD aDisablequeuein - 0x7B22; "disablequeueing"|110-49-0-0
32048|data|DCD aRestorequeuein - 0x7B34; "restorequeueing"|108-49-0-0
32052|data|DCD aPaths - 0x7B46; "paths"|106-49-0-0
32056|data|DCD aMaps - 0x7B58; "maps"|96-49-0-0
32060|data|DCD aMultipaths - 0x7B6A; "multipaths"|86-49-0-0
32064|data|DCD aPath - 0x7B7C; "path"|80-49-0-0
32068|data|DCD aMap - 0x7B8E; "map"|70-49-0-0
32072|data|DCD aMultipath - 0x7BA0; "multipath"|64-32-0-0
32076|data|DCD aGroup - 0x7BB2; "group"|38-49-0-0
32080|data|DCD aReconfigure - 0x7BC4; "reconfigure"|28-49-0-0
32084|data|DCD aDaemon - 0x7BD6; "daemon"|22-49-0-0
32088|data|DCD aStatus - 0x7BE8; "status"|12-49-0-0
32092|data|DCD aStats - 0x7BFA; "stats"|2-49-0-0
32096|data|DCD aTopology - 0x7C0C; "topology"|248-48-0-0
32100|data|DCD aConfig - 0x7C1E; "config"|242-48-0-0
32104|data|DCD aBlacklist - 0x7C30; "blacklist"|232-48-0-0
32108|data|DCD aDevices - 0x7C42; "devices"|226-48-0-0
32112|data|DCD aFormat - 0x7C54; "format"|216-48-0-0
32116|data|DCD aWildcards - 0x7C66; "wildcards"|206-48-0-0
32120|data|DCD aQuit - 0x7C78; "quit"|48-47-0-0
32124|data|DCD aExit - 0x7C8A; "exit"|22-47-0-0
32128|data|DCD aShutdown - 0x7C9C; "shutdown"|144-33-0-0
32132|data|DCD aGetprstatus - 0x7CAE; "getprstatus"|146-48-0-0
32136|data|DCD aSetprstatus - 0x7CBE; "setprstatus"|142-48-0-0
32140|data|DCD aUnsetprstatus - 0x7CCE; "unsetprstatus"|138-48-0-0
32144|code|PUSH            {R3,LR}|8-181
32146|code|BLX             vector_alloc|251-247-4-238
32150|code|LDR             R3, =(dword_1C03C - 0x7D9C)|4-75
32152|code|ADD             R3, PC; dword_1C03C|123-68
32154|code|MOV             R2, R0|2-70
32156|code|CLZ.W           R0, R0|176-250-128-240
32160|code|STR             R2, [R3]|26-96
32162|code|LSRS            R0, R0, #5|64-9
32164|code|POP             {R3,PC}|8-189
32166|data|ALIGN 4|0-191
32168|data|DCD dword_1C03C - 0x7D9C|160-66-1-0
32172|code|PUSH.W          {R4-R8,LR}|45-233-240-65
32176|code|SUB             SP, SP, #8|130-176
32178|code|ADD             R5, SP, #0x20+var_18|2-173
32180|code|MOV             R7, R1|15-70
32182|code|MOVS            R4, #0|0-36
32184|code|MOV             R6, R2|22-70
32186|code|STR.W           R4, [R5,#-4]!|69-248-4-77
32190|code|MOV             R1, R5|41-70
32192|code|MOV             R8, R3|152-70
32194|code|BL              sub_78D8|255-247-137-253
32198|code|CBNZ            R0, loc_7DF4|168-185
32200|code|LDR             R5, [SP,#0x20+var_1C]|1-157
32202|code|MOV             R0, R5|40-70
32204|code|BL              sub_7504|255-247-154-251
32208|code|BL              sub_74B8|255-247-114-251
32212|code|CBZ             R0, loc_7E0A|200-177
32214|code|LDR             R4, [R0,#4]|68-104
32216|code|CBZ             R4, loc_7E0A|188-177
32218|code|MOV             R1, R7|57-70
32220|code|MOV             R2, R6|50-70
32222|code|MOV             R3, R8|67-70
32224|code|MOV             R0, R5|40-70
32226|code|BLX             R4|160-71
32228|code|MOV             R4, R0|4-70
32230|code|LDR             R0, [SP,#0x20+var_1C]|1-152
32232|code|BL              sub_788C|255-247-80-253
32236|code|MOV             R0, R4|32-70
32238|code|ADD             SP, SP, #8|2-176
32240|code|POP.W           {R4-R8,PC}|189-232-240-129
32244|code|BL              sub_760C|255-247-10-252
32248|code|STR             R0, [R7]|56-96
32250|code|BLX             strlen|251-247-254-236
32254|code|ADDS            R0, #1|1-48
32256|code|STR             R0, [R6]|48-96
32258|code|MOV             R0, R4|32-70
32260|code|ADD             SP, SP, #8|2-176
32262|code|POP.W           {R4-R8,PC}|189-232-240-129
32266|code|BL              sub_760C|255-247-255-251
32270|code|MOVS            R4, #0|0-36
32272|code|STR             R0, [R7]|56-96
32274|code|BLX             strlen|251-247-242-236
32278|code|ADDS            R3, R0, #1|67-28
32280|code|LDR             R0, [SP,#0x20+var_1C]|1-152
32282|code|STR             R3, [R6]|51-96
32284|code|BL              sub_788C|255-247-54-253
32288|code|MOV             R0, R4|32-70
32290|code|ADD             SP, SP, #8|2-176
32292|code|POP.W           {R4-R8,PC}|189-232-240-129
32296|code|CBZ             R0, locret_7E5C|192-177
32298|code|PUSH            {R4,R5}|48-180
32300|code|LDR             R5, [R0]|5-104
32302|code|CMP             R5, #0|0-45
32304|code|BLE             loc_7E62|23-221
32306|code|LDR             R2, [R0,#4]|66-104
32308|code|LDR             R0, [R2]|16-104
32310|code|CBZ             R0, loc_7E5A|128-177
32312|code|LDR             R3, [R0,#8]|131-104
32314|code|CMP             R3, R1|139-66
32316|code|IT NE|24-191
32318|code|MOVNE           R3, #1|1-35
32320|code|BNE             loc_7E4A|3-209
32322|code|B               loc_7E5E|12-224
32324|code|LDR             R4, [R0,#8]|132-104
32326|code|CMP             R4, R1|140-66
32328|code|BEQ             loc_7E5E|9-208
32330|code|CMP             R3, R5|171-66
32332|code|ADD.W           R3, R3, #1|3-241-1-3
32336|code|BEQ             loc_7E62|7-208
32338|code|LDR.W           R0, [R2,#4]!|82-248-4-15
32342|code|CMP             R0, #0|0-40
32344|code|BNE             loc_7E44|244-209
32346|code|POP             {R4,R5}|48-188
32348|code|BX              LR|112-71
32350|code|LDR             R0, [R0,#4]|64-104
32352|code|B               loc_7E5A|251-231
32354|code|MOVS            R0, #0|0-32
32356|code|B               loc_7E5A|249-231
32358|data|ALIGN 4|0-191
32360|code|PUSH            {R4,LR}|16-181
32362|code|BL              sub_7A10|255-247-209-253
32366|code|CBZ             R0, loc_7E76|16-177
32368|code|MOVS            R4, #1|1-36
32370|code|MOV             R0, R4|32-70
32372|code|POP             {R4,PC}|16-189
32374|code|BL              sub_7D90|255-247-139-255
32378|code|MOV             R4, R0|4-70
32380|code|CMP             R0, #0|0-40
32382|code|BNE             loc_7E70|247-209
32384|code|MOV             R1, R4|33-70
32386|code|MOVW            R0, #0x4001|68-242-1-0
32390|code|BL              sub_7838|255-247-215-252
32394|code|MOVW            R0, #0x4001|68-242-1-0
32398|code|MOV             R1, R4|33-70
32400|code|MOVT.W          R0, #0x800|192-246-0-0
32404|code|BL              sub_7838|255-247-208-252
32408|code|MOVS            R0, #1|1-32
32410|code|MOV             R1, R4|33-70
32412|code|MOVT.W          R0, #0x20 ; ' '|192-242-32-0
32416|code|BL              sub_7838|255-247-202-252
32420|code|MOVS            R0, #1|1-32
32422|code|MOV             R1, R4|33-70
32424|code|MOVT.W          R0, #0x10|192-242-16-0
32428|code|BL              sub_7838|255-247-196-252
32432|code|MOV             R1, R4|33-70
32434|code|MOVW            R0, #0x8001|72-242-1-0
32438|code|BL              sub_7838|255-247-191-252
32442|code|MOVW            R0, #0x8001|72-242-1-0
32446|code|MOV             R1, R4|33-70
32448|code|MOVT.W          R0, #0x20 ; ' '|192-242-32-0
32452|code|BL              sub_7838|255-247-184-252
32456|code|MOVW            R0, #0x8001|72-242-1-0
32460|code|MOV             R1, R4|33-70
32462|code|MOVT.W          R0, #0x40 ; '@'|192-242-64-0
32466|code|BL              sub_7838|255-247-177-252
32470|code|MOVW            R0, #0x8001|72-242-1-0
32474|code|MOV             R1, R4|33-70
32476|code|MOVT.W          R0, #0x800|192-246-0-0
32480|code|BL              sub_7838|255-247-170-252
32484|code|MOVW            R0, #0x8001|72-242-1-0
32488|code|MOV             R1, R4|33-70
32490|code|MOVT.W          R0, #0x80|192-242-128-0
32494|code|BL              sub_7838|255-247-163-252
32498|code|MOVS            R0, #1|1-32
32500|code|MOV             R1, R4|33-70
32502|code|MOVT.W          R0, #0x80|192-242-128-0
32506|code|BL              sub_7838|255-247-157-252
32510|code|MOVS            R0, #1|1-32
32512|code|MOV             R1, R4|33-70
32514|code|MOVT.W          R0, #0x82|192-242-130-0
32518|code|BL              sub_7838|255-247-151-252
32522|code|MOVS            R0, #1|1-32
32524|code|MOV             R1, R4|33-70
32526|code|MOVT.W          R0, #0x100|192-242-0-16
32530|code|BL              sub_7838|255-247-145-252
32534|code|MOVS            R0, #1|1-32
32536|code|MOV             R1, R4|33-70
32538|code|MOVT.W          R0, #0x200|192-242-0-32
32542|code|BL              sub_7838|255-247-139-252
32546|code|MOVS            R0, #1|1-32
32548|code|MOV             R1, R4|33-70
32550|code|MOVT.W          R0, #0x400|192-242-0-64
32554|code|BL              sub_7838|255-247-133-252
32558|code|MOVS            R0, #1|1-32
32560|code|MOV             R1, R4|33-70
32562|code|MOVT.W          R0, #0x1000|193-242-0-0
32566|code|BL              sub_7838|255-247-127-252
32570|code|MOVS            R0, #2|2-32
32572|code|MOV             R1, R4|33-70
32574|code|MOVT.W          R0, #1|192-242-1-0
32578|code|BL              sub_7838|255-247-121-252
32582|code|MOVS            R0, #4|4-32
32584|code|MOV             R1, R4|33-70
32586|code|MOVT.W          R0, #1|192-242-1-0
32590|code|BL              sub_7838|255-247-115-252
32594|code|MOV             R1, R4|33-70
32596|code|MOV.W           R0, #0x20002|79-240-2-16
32600|code|BL              sub_7838|255-247-110-252
32604|code|MOVS            R0, #4|4-32
32606|code|MOV             R1, R4|33-70
32608|code|MOVT.W          R0, #2|192-242-2-0
32612|code|BL              sub_7838|255-247-104-252
32616|code|MOVS            R0, #8|8-32
32618|code|MOV             R1, R4|33-70
32620|code|MOVT.W          R0, #6|192-242-6-0
32624|code|BL              sub_7838|255-247-98-252
32628|code|MOV             R1, R4|33-70
32630|code|MOV.W           R0, #0x80000|79-244-0-32
32634|code|BL              sub_7838|255-247-93-252
32638|code|MOVS            R0, #0x10|16-32
32640|code|MOV             R1, R4|33-70
32642|code|MOVT.W          R0, #2|192-242-2-0
32646|code|BL              sub_7838|255-247-87-252
32650|code|MOVS            R0, #0x20 ; ' '|32-32
32652|code|MOV             R1, R4|33-70
32654|code|MOVT.W          R0, #2|192-242-2-0
32658|code|BL              sub_7838|255-247-81-252
32662|code|MOV.W           R0, #0x100|79-244-128-112
32666|code|MOV             R1, R4|33-70
32668|code|MOVT.W          R0, #2|192-242-2-0
32672|code|BL              sub_7838|255-247-74-252
32676|code|MOV.W           R0, #0x200|79-244-0-112
32680|code|MOV             R1, R4|33-70
32682|code|MOVT.W          R0, #2|192-242-2-0
32686|code|BL              sub_7838|255-247-67-252
32690|code|MOV             R1, R4|33-70
32692|code|MOV.W           R0, #0x20400|79-244-1-48
32696|code|BL              sub_7838|255-247-62-252
32700|code|MOV             R1, R4|33-70
32702|code|MOV.W           R0, #0x21000|79-244-4-48
32706|code|BL              sub_7838|255-247-57-252
32710|code|MOV             R1, R4|33-70
32712|code|MOV.W           R0, #0x22000|79-244-8-48
32716|code|BL              sub_7838|255-247-52-252
32720|code|MOV             R1, R4|33-70
32722|code|MOV.W           R0, #0x9000|79-244-16-64
32726|code|BL              sub_7838|255-247-47-252
32730|code|MOV             R1, R4|33-70
32732|code|MOV.W           R0, #0xA000|79-244-32-64
32736|code|BL              sub_7838|255-247-42-252
32740|code|MOVS            R0, #0x40 ; '@'|64-32
32742|code|MOV             R1, R4|33-70
32744|code|MOVT.W          R0, #1|192-242-1-0
32748|code|BL              sub_7838|255-247-36-252
32752|code|MOVS            R0, #0x80|128-32
32754|code|MOV             R1, R4|33-70
32756|code|MOVT.W          R0, #1|192-242-1-0
32760|code|BL              sub_7838|255-247-30-252
32764|code|MOV             R1, R4|33-70
32766|code|MOV.W           R0, #0x20000000|79-240-0-80
32770|code|BL              sub_7838|255-247-25-252
32774|code|MOV             R1, R4|33-70
32776|code|MOV.W           R0, #0x40000000|79-240-128-64
32780|code|BL              sub_7838|255-247-20-252
32784|code|MOVS            R0, #0|0-32
32786|code|MOV             R1, R4|33-70
32788|code|MOVT.W          R0, #0x8002|200-242-2-0
32792|code|BL              sub_7838|255-247-14-252
32796|code|MOV             R1, R4|33-70
32798|code|MOV.W           R0, #0x20000|79-244-0-48
32802|code|BL              sub_7838|255-247-9-252
32806|code|MOV             R1, R4|33-70
32808|code|MOV.W           R0, #0x20000|79-244-0-48
32812|code|BL              sub_7838|255-247-4-252
32816|code|MOV.W           R0, #0x800|79-244-0-96
32820|code|MOV             R1, R4|33-70
32822|code|MOVT.W          R0, #0x10|192-242-16-0
32826|code|BL              sub_7838|255-247-253-251
32830|code|MOV             R1, R4|33-70
32832|code|MOV.W           R0, #0x102000|79-244-129-16
32836|code|BL              sub_7838|255-247-248-251
32840|code|MOV             R0, R4|32-70
32842|code|POP             {R4,PC}|16-189
32844|code|PUSH            {R4,LR}|16-181
32846|code|BL              sub_79C0|255-247-183-252
32850|code|LDR             R4, =(dword_1C03C - 0x8058)|4-76
32852|code|ADD             R4, PC; dword_1C03C|124-68
32854|code|LDR             R0, [R4,#(dword_1C040 - 0x1C03C)]|96-104
32856|code|BL              sub_788C|255-247-24-252
32860|code|MOVS            R3, #0|0-35
32862|code|STR             R3, [R4,#(dword_1C040 - 0x1C03C)]|99-96
32864|code|POP             {R4,PC}|16-189
32866|data|ALIGN 4|0-191
32868|data|DCD dword_1C03C - 0x8058|228-63-1-0
32872|code|PUSH.W          {R4-R11,LR}|45-233-240-79
32876|code|SUB             SP, SP, #0x1C|135-176
32878|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8078)|93-76
32880|code|MOVS            R3, #0|0-35
32882|code|STR             R0, [SP,#0x40+s2]|1-144
32884|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
32886|code|STR             R3, [SP,#0x40+var_2C]|5-147
32888|code|CMP             R1, #0|0-41
32890|code|BEQ             loc_8164|115-208
32892|code|LDR             R2, =(dword_1C03C - 0x8082)|90-74
32894|code|ADD             R2, PC; dword_1C03C|122-68
32896|code|LDR             R3, [R2,#(dword_1C048 - 0x1C03C)]|211-104
32898|code|CMP             R3, #0|0-43
32900|code|BNE             loc_8140|92-209
32902|code|LDR             R3, [R2,#(dword_1C040 - 0x1C03C)]|83-104
32904|code|CMP             R3, #0|0-43
32906|code|BEQ             loc_8140|89-208
32908|code|LDR.W           R10, [R3]|211-248-0-160
32912|code|LDR.W           R11, [R2,#(dword_1C044 - 0x1C03C)]|210-248-8-176
32916|code|CMP             R11, R10|211-69
32918|code|BGE             loc_8140|83-218
32920|code|LDR             R3, [R3,#4]|91-104
32922|code|ADD.W           R4, R3, R11,LSL#2|3-235-139-4
32926|code|LDR.W           R7, [R3,R11,LSL#2]|83-248-43-112
32930|code|CMP             R7, #0|0-47
32932|code|BEQ             loc_8140|76-208
32934|code|LDR.W           R9, [R2,#(dword_1C050 - 0x1C03C)]|210-248-20-144
32938|code|LDR             R6, [R2,#(dword_1C04C - 0x1C03C)]|22-105
32940|code|LDR.W           R8, [R2]|210-248-0-128
32944|code|LDR             R3, =(dword_1C03C - 0x80B6)|78-75
32946|code|ADD             R3, PC; dword_1C03C|123-68
32948|code|STR             R3, [SP,#0x40+var_38]|2-147
32950|code|LDR             R5, [R7]|61-104
32952|code|MOV             R2, R9; n|74-70
32954|code|LDR             R1, [SP,#0x40+s2]; s2|1-153
32956|code|MOV             R0, R5; s1|40-70
32958|code|BLX             strncmp|251-247-200-237
32962|code|CBNZ            R0, loc_812A|144-187
32964|code|LDR             R1, [R7,#8]|185-104
32966|code|CBZ             R6, loc_80EC|142-177
32968|code|AND.W           R2, R1, R6|1-234-6-2
32972|code|CMP             R1, R2|145-66
32974|code|BNE             loc_80EC|13-209
32976|code|LDR             R0, [SP,#0x40+s2]|1-152
32978|code|STR             R1, [SP,#0x40+var_34]|3-145
32980|code|BL              sub_758C|255-247-90-250
32984|code|LDR             R1, [SP,#0x40+var_34]|3-153
32986|code|CLZ.W           R2, R0|176-250-128-242
32990|code|LSRS            R2, R2, #5|82-9
32992|code|CMP             R7, R0|135-66
32994|code|ITE EQ|12-191
32996|code|MOVEQ           R0, R2|16-70
32998|code|ORRNE.W         R0, R2, #1|66-240-1-0
33002|code|CBNZ            R0, loc_812A|240-185
33004|code|ORRS            R1, R6|49-67
33006|code|CMP.W           R8, #0|184-241-0-15
33010|code|BEQ             loc_812A|26-208
33012|code|LDR.W           R7, [R8]|216-248-0-112
33016|code|CMP             R7, #0|0-47
33018|code|BLE             loc_812A|22-221
33020|code|LDR.W           R0, [R8,#4]|216-248-4-0
33024|code|LDR             R3, [R0]|3-104
33026|code|CBZ             R3, loc_812A|147-177
33028|code|CBZ             R6, loc_814A|14-179
33030|code|LDR             R3, [R3]|27-104
33032|code|ANDS            R3, R1|11-64
33034|code|CMP             R3, R1|139-66
33036|code|BEQ             loc_814A|29-208
33038|code|MOVS            R2, #1|1-34
33040|code|B               loc_811A|3-224
33042|code|LDR             R3, [R3]|27-104
33044|code|ANDS            R3, R1|11-64
33046|code|CMP             R3, R1|139-66
33048|code|BEQ             loc_814A|23-208
33050|code|CMP             R2, R7|186-66
33052|code|ADD.W           R2, R2, #1|2-241-1-2
33056|code|BEQ             loc_812A|3-208
33058|code|LDR.W           R3, [R0,#4]!|80-248-4-63
33062|code|CMP             R3, #0|0-43
33064|code|BNE             loc_8112|243-209
33066|code|ADD.W           R11, R11, #1|11-241-1-11
33070|code|LDR             R3, [SP,#0x40+var_38]|2-155
33072|code|CMP             R11, R10|211-69
33074|code|STR.W           R11, [R3,#8]|195-248-8-176
33078|code|BEQ             loc_8140|3-208
33080|code|LDR.W           R7, [R4,#4]!|84-248-4-127
33084|code|CMP             R7, #0|0-47
33086|code|BNE             loc_80B6|186-209
33088|code|MOVS            R3, #0|0-35
33090|code|MOV             R0, R3|24-70
33092|code|ADD             SP, SP, #0x1C|7-176
33094|code|POP.W           {R4-R11,PC}|189-232-240-143
33098|code|LDR             R3, =(dword_1C03C - 0x8156)|41-75
33100|code|MOV             R0, R5|40-70
33102|code|ADD.W           R2, R11, #1|11-241-1-2
33106|code|ADD             R3, PC; dword_1C03C|123-68
33108|code|STR             R2, [R3,#(dword_1C044 - 0x1C03C)]|154-96
33110|code|BLX             __strdup|251-247-160-237
33114|code|MOV             R3, R0|3-70
33116|code|MOV             R0, R3; s|24-70
33118|code|ADD             SP, SP, #0x1C|7-176
33120|code|POP.W           {R4-R11,PC}|189-232-240-143
33124|code|LDR             R5, =(dword_1C03C - 0x816A)|35-77
33126|code|ADD             R5, PC; dword_1C03C|125-68
33128|code|STR             R1, [R5,#(dword_1C044 - 0x1C03C)]|169-96
33130|code|STR             R1, [R5,#(dword_1C048 - 0x1C03C)]|233-96
33132|code|STR             R1, [R5,#(dword_1C04C - 0x1C03C)]|41-97
33134|code|BLX             strlen|251-247-68-235
33138|code|LDR             R3, =(rl_line_buffer_ptr - 0x1BB8C)|33-75
33140|code|ADD             R1, SP, #0x40+var_2C|5-169
33142|code|STR             R0, [R5,#(dword_1C050 - 0x1C03C)]|104-97
33144|code|LDR             R3, [R4,R3]; rl_line_buffer|227-88
33146|code|LDR             R0, [R3]|24-104
33148|code|BL              sub_78D8|255-247-172-251
33152|code|LDR             R4, [SP,#0x40+var_2C]|5-156
33154|code|MOV             R6, R0|6-70
33156|code|CBZ             R4, loc_81BC|212-177
33158|code|LDR             R3, [R5,#(dword_1C050 - 0x1C03C)]|107-105
33160|code|CBZ             R3, loc_8198|51-177
33162|code|LDR             R1, [R4]|33-104
33164|code|MOV             R0, R4|32-70
33166|code|SUBS            R1, #1|1-57
33168|code|BLX             vector_del_slot|251-247-188-236
33172|code|LDR             R4, [SP,#0x40+var_2C]|5-156
33174|code|CBZ             R4, loc_81BC|140-177
33176|code|LDR             R5, [R4]|37-104
33178|code|CBZ             R5, loc_81B4|93-177
33180|code|CMP             R6, #2|2-46
33182|code|BEQ             loc_81C2|16-208
33184|code|MOV             R0, R4|32-70
33186|code|BL              sub_7504|255-247-175-249
33190|code|LDR             R3, =(dword_1C03C - 0x81AC)|21-75
33192|code|ADD             R3, PC; dword_1C03C|123-68
33194|code|STR             R0, [R3,#(dword_1C04C - 0x1C03C)]|24-97
33196|code|MOV             R0, R4|32-70
33198|code|BL              sub_788C|255-247-109-251
33202|code|B               loc_807C|99-231
33204|code|MOV             R0, R4|32-70
33206|code|BLX             vector_free|251-247-94-235
33210|code|STR             R5, [SP,#0x40+var_2C]|5-149
33212|code|CMP             R6, #2|2-46
33214|code|BNE.W           loc_807C|127-244-93-175
33218|code|LDR             R3, =(dword_1C03C - 0x81CC)|15-75
33220|code|MOVS            R0, #8; size|8-32
33222|code|MOVS            R2, #1|1-34
33224|code|ADD             R3, PC; dword_1C03C|123-68
33226|code|STR             R2, [R3,#(dword_1C048 - 0x1C03C)]|218-96
33228|code|BLX             malloc|251-247-92-236
33232|code|MOV             R2, R0|2-70
33234|code|CMP             R0, #0|0-40
33236|code|BEQ             loc_8140|180-208
33238|code|LDR             R1, =(aValue - 0x81DE); "(value)"|11-73
33240|code|MOV             R3, R0|3-70
33242|code|ADD             R1, PC; "(value)"|121-68
33244|code|LDM             R1, {R0,R1}; "(value)"|3-201
33246|code|STM.W           R2, {R0,R1}|130-232-3-0
33250|code|B               loc_8142|174-231
33252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8078|20-59-1-0
33256|data|DCD dword_1C03C - 0x8082|186-63-1-0
33260|data|DCD dword_1C03C - 0x80B6|134-63-1-0
33264|data|DCD dword_1C03C - 0x8156|230-62-1-0
33268|data|DCD dword_1C03C - 0x816A|210-62-1-0
33272|data|DCD rl_line_buffer_ptr - 0x1BB8C|100-4-0-0
33276|data|DCD dword_1C03C - 0x81AC|144-62-1-0
33280|data|DCD dword_1C03C - 0x81CC|112-62-1-0
33284|data|DCD aValue - 0x81DE; "(value)"|138-43-0-0
33288|code|PUSH.W          {R4-R11,LR}|45-233-240-79
33292|code|SUB             SP, SP, #0xC|131-176
33294|code|MOV             R11, R0|131-70
33296|code|LDR             R0, [R2,#8]|144-104
33298|code|STR             R1, [SP,#0x30+var_2C]|1-145
33300|code|MOVS            R1, #1|1-33
33302|code|MOV             R5, R2|21-70
33304|code|MOV             R7, R3|31-70
33306|code|BLX             get_path_layout|251-247-60-236
33310|code|MOVW            R0, #0x44C|64-242-76-64
33314|code|BLX             zalloc|251-247-170-236
33318|code|MOV             R8, R0|128-70
33320|code|CMP             R0, #0|0-40
33322|code|BEQ             loc_82D6|84-208
33324|code|LDR             R0, [R5,#8]|168-104
33326|code|MOVW            R9, #0x44C|64-242-76-73
33330|code|CMP             R0, #0|0-40
33332|code|BEQ             loc_82D2|77-208
33334|code|LDR             R3, [R0]|3-104
33336|code|CMP             R3, #0|0-43
33338|code|BLE             loc_82AC|55-221
33340|code|MOV             R0, R8|64-70
33342|code|MOV             R1, R9|73-70
33344|code|MOV             R2, R7|58-70
33346|code|BLX             snprint_path_header|251-247-106-233
33350|code|LDR             R3, [R5,#8]|171-104
33352|code|ADD.W           R4, R8, R0|8-235-0-4
33356|code|CMP             R3, #0|0-43
33358|code|BEQ             loc_82D2|64-208
33360|code|LDR             R2, [R3]|26-104
33362|code|CMP             R2, #0|0-42
33364|code|BLE             loc_828A|25-221
33366|code|LDR             R3, [R3,#4]|91-104
33368|code|ADD.W           R6, R8, R9|8-235-9-6
33372|code|MOV.W           R10, #0|79-240-0-10
33376|code|LDR             R3, [R3]|27-104
33378|code|CBNZ            R3, loc_8274|59-185
33380|code|B               loc_82D2|53-224
33382|code|LDR             R2, [R3]|26-104
33384|code|CMP             R2, R10|82-69
33386|code|BLE             loc_828A|14-221
33388|code|LDR             R3, [R3,#4]|91-104
33390|code|LDR.W           R3, [R3,R10,LSL#2]|83-248-42-48
33394|code|CBZ             R3, loc_828A|83-177
33396|code|MOV             R0, R4|32-70
33398|code|SUBS            R1, R6, R4|49-27
33400|code|MOV             R2, R7|58-70
33402|code|ADD.W           R10, R10, #1|10-241-1-10
33406|code|BLX             snprint_path|251-247-130-236
33410|code|LDR             R3, [R5,#8]|171-104
33412|code|ADD             R4, R0|4-68
33414|code|CMP             R3, #0|0-43
33416|code|BNE             loc_8266|237-209
33418|code|RSB.W           R0, R8, R4|200-235-4-0
33422|code|MOV             R3, R0|3-70
33424|code|ADD.W           R2, R9, #0xFFFFFFFF|9-241-255-50
33428|code|CMP             R3, R2|147-66
33430|code|BEQ             loc_82B0|11-208
33432|code|LDR             R1, [SP,#0x30+var_2C]|1-153
33434|code|MOVS            R2, #0|0-34
33436|code|ADDS            R3, R0, #1|67-28
33438|code|STR.W           R8, [R11]|203-248-0-128
33442|code|MOV             R0, R2|16-70
33444|code|STR             R3, [R1]|11-96
33446|code|ADD             SP, SP, #0xC|3-176
33448|code|POP.W           {R4-R11,PC}|189-232-240-143
33452|code|MOV             R4, R8|68-70
33454|code|B               loc_828A|236-231
33456|code|MOV.W           R4, R9,LSL#1|79-234-73-4
33460|code|MOV             R0, R8; ptr|64-70
33462|code|MOV             R1, R4; size|33-70
33464|code|BLX             realloc|251-247-214-236
33468|code|MOV             R8, R0|128-70
33470|code|CBZ             R0, loc_82D6|80-177
33472|code|ADD             R0, R9; s|72-68
33474|code|MOV             R2, R9; n|74-70
33476|code|MOVS            R1, #0; c|0-33
33478|code|MOV             R9, R4|161-70
33480|code|BLX             memset|251-247-122-233
33484|code|LDR             R0, [R5,#8]|168-104
33486|code|CMP             R0, #0|0-40
33488|code|BNE             loc_8236|177-209
33490|code|MOV             R3, R0|3-70
33492|code|B               loc_8290|220-231
33494|code|MOVS            R2, #1|1-34
33496|code|MOV             R0, R2|16-70
33498|code|ADD             SP, SP, #0xC|3-176
33500|code|POP.W           {R4-R11,PC}|189-232-240-143
33504|code|PUSH.W          {R4-R10,LR}|45-233-240-71
33508|code|MOV             R7, R2|23-70
33510|code|MOV             R10, R0|130-70
33512|code|MOV             R8, R1|136-70
33514|code|MOV             R0, R3|24-70
33516|code|LDR.W           R1, [R2,#0x16C]|210-248-108-17
33520|code|MOVS            R2, #0|0-34
33522|code|BLX             update_multipath|251-247-126-235
33526|code|MOV             R9, R0|129-70
33528|code|CBZ             R0, loc_8304|32-177
33530|code|MOV.W           R9, #1|79-240-1-9
33534|code|MOV             R0, R9|72-70
33536|code|POP.W           {R4-R10,PC}|189-232-240-135
33540|code|MOVW            R0, #0x44C|64-242-76-64
33544|code|BLX             zalloc|251-247-54-236
33548|code|MOV             R5, R0|5-70
33550|code|CMP             R0, #0|0-40
33552|code|BEQ             loc_82FA|243-208
33554|code|MOVW            R4, #0x44C|64-242-76-68
33558|code|MOV             R0, R5|40-70
33560|code|MOV             R1, R4|33-70
33562|code|MOV             R2, R7|58-70
33564|code|MOVS            R3, #2|2-35
33566|code|BLX             snprint_multipath_topology|251-247-208-234
33570|code|SUBS            R6, R4, #1|102-30
33572|code|CMP             R0, R6|176-66
33574|code|BEQ             loc_8338|7-208
33576|code|ADDS            R3, R0, #1|67-28
33578|code|STR.W           R5, [R10]|202-248-0-80
33582|code|MOV             R0, R9|72-70
33584|code|STR.W           R3, [R8]|200-248-0-48
33588|code|POP.W           {R4-R10,PC}|189-232-240-135
33592|code|LSLS            R6, R4, #1|102-0
33594|code|MOV             R0, R5; ptr|40-70
33596|code|MOV             R1, R6; size|49-70
33598|code|BLX             realloc|251-247-148-236
33602|code|MOV             R2, R4; n|34-70
33604|code|MOVS            R1, #0; c|0-33
33606|code|MOV             R5, R0|5-70
33608|code|CMP             R0, #0|0-40
33610|code|BEQ             loc_82FA|214-208
33612|code|ADD             R0, R4; s|32-68
33614|code|MOV             R4, R6|52-70
33616|code|BLX             memset|251-247-54-233
33620|code|B               loc_8316|223-231
33622|data|ALIGN 4|0-191
33624|code|PUSH.W          {R4-R11,LR}|45-233-240-79
33628|code|MOV             R11, R0|131-70
33630|code|SUB             SP, SP, #0xC|131-176
33632|code|LDR             R0, [R2,#8]|144-104
33634|code|MOV             R10, R1|138-70
33636|code|MOVS            R1, #0|0-33
33638|code|MOV             R5, R2|21-70
33640|code|BLX             get_path_layout|251-247-148-235
33644|code|MOVW            R0, #0x44C|64-242-76-64
33648|code|BLX             zalloc|251-247-2-236
33652|code|STR             R0, [SP,#0x30+ptr]|1-144
33654|code|CMP             R0, #0|0-40
33656|code|BEQ             loc_8424|84-208
33658|code|LDR             R3, [R5,#0xC]|235-104
33660|code|MOVW            R9, #0x44C|64-242-76-73
33664|code|CMP             R3, #0|0-43
33666|code|BEQ             loc_841E|76-208
33668|code|LDR             R2, [R3]|26-104
33670|code|CMP             R2, #0|0-42
33672|code|BLE             loc_8432|83-221
33674|code|LDR             R3, [R3,#4]|91-104
33676|code|LDR             R7, [R3]|31-104
33678|code|CMP             R7, #0|0-47
33680|code|BEQ             loc_842C|76-208
33682|code|LDR             R6, [SP,#0x30+ptr]|1-158
33684|code|MOVS            R4, #0|0-36
33686|code|ADD.W           R8, R6, R9|6-235-9-8
33690|code|B               loc_83B2|10-224
33692|code|LDR             R3, [R5,#0xC]|235-104
33694|code|SUBS            R4, #1|1-60
33696|code|ADDS            R4, #1|1-52
33698|code|CBZ             R3, loc_83DA|211-177
33700|code|LDR             R2, [R3]|26-104
33702|code|CMP             R2, R4|162-66
33704|code|BLE             loc_83DA|23-221
33706|code|LDR             R3, [R3,#4]|91-104
33708|code|LDR.W           R7, [R3,R4,LSL#2]|83-248-36-112
33712|code|CBZ             R7, loc_83DA|159-177
33714|code|MOV             R0, R5|40-70
33716|code|LDR.W           R1, [R7,#0x16C]|215-248-108-17
33720|code|MOVS            R2, #0|0-34
33722|code|BLX             update_multipath|251-247-26-235
33726|code|CMP             R0, #0|0-40
33728|code|BNE             loc_839C|236-209
33730|code|MOV             R0, R6|48-70
33732|code|RSB.W           R1, R6, R8|198-235-8-1
33736|code|MOVS            R3, #2|2-35
33738|code|MOV             R2, R7|58-70
33740|code|BLX             snprint_multipath_topology|251-247-120-234
33744|code|LDR             R3, [R5,#0xC]|235-104
33746|code|ADDS            R4, #1|1-52
33748|code|ADD             R6, R0|6-68
33750|code|CMP             R3, #0|0-43
33752|code|BNE             loc_83A4|228-209
33754|code|LDR             R3, [SP,#0x30+ptr]|1-155
33756|code|SUBS            R6, R6, R3|246-26
33758|code|MOV             R2, R6|50-70
33760|code|ADD.W           R3, R9, #0xFFFFFFFF|9-241-255-51
33764|code|CMP             R3, R2|147-66
33766|code|BEQ             loc_83FC|9-208
33768|code|LDR             R3, [SP,#0x30+ptr]|1-155
33770|code|MOVS            R0, #0|0-32
33772|code|STR.W           R3, [R11]|203-248-0-48
33776|code|ADDS            R3, R6, #1|115-28
33778|code|STR.W           R3, [R10]|202-248-0-48
33782|code|ADD             SP, SP, #0xC|3-176
33784|code|POP.W           {R4-R11,PC}|189-232-240-143
33788|code|MOV.W           R4, R9,LSL#1|79-234-73-4
33792|code|LDR             R0, [SP,#0x30+ptr]; ptr|1-152
33794|code|MOV             R1, R4; size|33-70
33796|code|BLX             realloc|251-247-48-236
33800|code|STR             R0, [SP,#0x30+ptr]|1-144
33802|code|CBZ             R0, loc_8424|88-177
33804|code|ADD             R0, R9; s|72-68
33806|code|MOV             R2, R9; n|74-70
33808|code|MOVS            R1, #0; c|0-33
33810|code|MOV             R9, R4|161-70
33812|code|BLX             memset|251-247-212-232
33816|code|LDR             R3, [R5,#0xC]|235-104
33818|code|CMP             R3, #0|0-43
33820|code|BNE             loc_8384|178-209
33822|code|MOV             R6, R3|30-70
33824|code|MOV             R2, R3|26-70
33826|code|B               loc_83E0|221-231
33828|code|MOVS            R0, #1|1-32
33830|code|ADD             SP, SP, #0xC|3-176
33832|code|POP.W           {R4-R11,PC}|189-232-240-143
33836|code|MOV             R6, R7|62-70
33838|code|MOV             R2, R7|58-70
33840|code|B               loc_83E0|214-231
33842|code|MOVS            R6, #0|0-38
33844|code|MOV             R2, R6|50-70
33846|code|B               loc_83E0|211-231
33848|code|PUSH.W          {R4-R11,LR}|45-233-240-79
33852|code|MOV             R8, R0|128-70
33854|code|SUB             SP, SP, #0xC|131-176
33856|code|MOVW            R0, #0x44C|64-242-76-64
33860|code|MOV             R7, R1|15-70
33862|code|BLX             zalloc|251-247-152-235
33866|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x8450)|63-78
33868|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
33870|code|MOV             R10, R0|130-70
33872|code|CMP             R0, #0|0-40
33874|code|BEQ             loc_8512|94-208
33876|code|MOVW            R5, #0x44C|64-242-76-69
33880|code|MOV             R0, R10|80-70
33882|code|MOV             R1, R5|41-70
33884|code|BLX             snprint_defaults|251-247-98-235
33888|code|CMP             R0, R5|168-66
33890|code|MOV             R4, R0|4-70
33892|code|BEQ             loc_84DE|59-208
33894|code|ADD             R4, R10|84-68
33896|code|ADD.W           R9, R10, R5|10-235-5-9
33900|code|RSB.W           R1, R4, R9|196-235-9-1
33904|code|MOV             R0, R4|32-70
33906|code|BLX             snprint_blacklist|251-247-188-233
33910|code|ADD             R4, R0|4-68
33912|code|RSB.W           R11, R10, R4|202-235-4-11
33916|code|CMP             R11, R5|171-69
33918|code|BEQ             loc_84F8|59-208
33920|code|MOV             R0, R4|32-70
33922|code|RSB.W           R1, R4, R9|196-235-9-1
33926|code|BLX             snprint_blacklist_except|251-247-126-232
33930|code|ADD             R4, R0|4-68
33932|code|RSB.W           R11, R10, R4|202-235-4-11
33936|code|CMP             R11, R5|171-69
33938|code|BEQ             loc_84F8|49-208
33940|code|LDR             R3, =(conf_ptr - 0x1BB8C)|45-75
33942|code|MOV             R0, R4|32-70
33944|code|RSB.W           R1, R4, R9|196-235-9-1
33948|code|LDR.W           R11, [R6,R3]; conf|86-248-3-176
33952|code|LDR.W           R3, [R11]|219-248-0-48
33956|code|LDR.W           R2, [R3,#0xD8]|211-248-216-32
33960|code|BLX             snprint_hwtable|251-247-42-232
33964|code|ADD             R4, R0|4-68
33966|code|RSB.W           R2, R10, R4|202-235-4-2
33970|code|CMP             R2, R5|170-66
33972|code|BNE             loc_851A|49-209
33974|code|LSLS            R5, R5, #1|109-0
33976|code|MOV             R0, R10; ptr|80-70
33978|code|STR             R2, [SP,#0x30+n]|1-146
33980|code|MOV             R1, R5; size|41-70
33982|code|BLX             realloc|251-247-212-235
33986|code|MOV             R10, R0|130-70
33988|code|CBZ             R0, loc_8512|40-179
33990|code|LDR             R2, [SP,#0x30+n]; n|1-154
33992|code|MOVS            R1, #0; c|0-33
33994|code|ADD             R0, R2; s|16-68
33996|code|BLX             memset|251-247-120-232
34000|code|MOV             R0, R10|80-70
34002|code|MOV             R1, R5|41-70
34004|code|BLX             snprint_defaults|251-247-38-235
34008|code|CMP             R0, R5|168-66
34010|code|MOV             R4, R0|4-70
34012|code|BNE             loc_8466|195-209
34014|code|LSLS            R5, R5, #1|109-0
34016|code|MOV             R0, R10; ptr|80-70
34018|code|MOV             R1, R5; size|41-70
34020|code|BLX             realloc|251-247-192-235
34024|code|MOV             R10, R0|130-70
34026|code|CBZ             R0, loc_8512|144-177
34028|code|ADD             R0, R4; s|32-68
34030|code|MOV             R2, R4; n|34-70
34032|code|MOVS            R1, #0; c|0-33
34034|code|BLX             memset|251-247-102-232
34038|code|B               loc_8458|175-231
34040|code|LSLS            R5, R5, #1|109-0
34042|code|MOV             R0, R10; ptr|80-70
34044|code|MOV             R1, R5; size|41-70
34046|code|BLX             realloc|251-247-180-235
34050|code|MOV             R10, R0|130-70
34052|code|CBZ             R0, loc_8512|40-177
34054|code|ADD             R0, R11; s|88-68
34056|code|MOV             R2, R11; n|90-70
34058|code|MOVS            R1, #0; c|0-33
34060|code|BLX             memset|251-247-88-232
34064|code|B               loc_8458|162-231
34066|code|MOVS            R0, #1|1-32
34068|code|ADD             SP, SP, #0xC|3-176
34070|code|POP.W           {R4-R11,PC}|189-232-240-143
34074|code|LDR.W           R3, [R11]|219-248-0-48
34078|code|RSB.W           R1, R4, R9|196-235-9-1
34082|code|MOV             R0, R4|32-70
34084|code|LDR.W           R2, [R3,#0xD4]|211-248-212-32
34088|code|BLX             snprint_mptable|251-247-86-235
34092|code|ADD             R0, R4|32-68
34094|code|RSB.W           R4, R10, R0|202-235-0-4
34098|code|CMP             R4, R5|172-66
34100|code|BEQ             loc_84DE|211-208
34102|code|MOVS            R0, #0|0-32
34104|code|STR.W           R10, [R8]|200-248-0-160
34108|code|ADDS            R4, #1|1-52
34110|code|STR             R4, [R7]|60-96
34112|code|ADD             SP, SP, #0xC|3-176
34114|code|POP.W           {R4-R11,PC}|189-232-240-143
34118|data|ALIGN 4|0-191
34120|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8450|60-55-1-0
34124|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
34128|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8558)|9-75
34130|code|PUSH            {R4-R6,LR}|112-181
34132|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
34134|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|9-76
34136|code|MOV             R5, R2|21-70
34138|code|LDR             R2, =(aListConfigOper - 0x8566); "list config (operator)\n"|9-74
34140|code|MOV             R6, R1|14-70
34142|code|MOVS            R1, #3|3-33
34144|code|LDR             R3, [R3,R4]; logsink|27-89
34146|code|ADD             R2, PC; "list config (operator)\n"|122-68
34148|code|LDR             R0, [R3]|24-104
34150|code|BLX             dlog|250-247-76-239
34154|code|MOV             R0, R6|48-70
34156|code|MOV             R1, R5|41-70
34158|code|POP.W           {R4-R6,LR}|189-232-112-64
34162|code|B.W             sub_8438|255-247-97-191
34166|data|ALIGN 4|0-191
34168|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8558|52-54-1-0
34172|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
34176|data|DCD aListConfigOper - 0x8566; "list config (operator)\n"|10-40-0-0
34180|code|PUSH.W          {R4-R8,LR}|45-233-240-65
34184|code|MOV             R6, R3|30-70
34186|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8596)|10-76
34188|code|MOV             R7, R2|23-70
34190|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|10-77
34192|code|MOV             R8, R1|136-70
34194|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
34196|code|LDR             R2, =(aListPathsOpera - 0x859E); "list paths (operator)\n"|9-74
34198|code|MOVS            R1, #3|3-33
34200|code|LDR             R3, [R4,R5]; logsink|99-89
34202|code|ADD             R2, PC; "list paths (operator)\n"|122-68
34204|code|LDR             R0, [R3]|24-104
34206|code|BLX             dlog|250-247-48-239
34210|code|LDR             R3, =(aIDDPTTOC - 0x85AE); "%i %d %D %p %t %T %o %C"|7-75
34212|code|MOV             R0, R8|64-70
34214|code|MOV             R1, R7|57-70
34216|code|MOV             R2, R6|50-70
34218|code|ADD             R3, PC; "%i %d %D %p %t %T %o %C"|123-68
34220|code|POP.W           {R4-R8,LR}|189-232-240-65
34224|code|B.W             sub_8208|255-247-42-190
34228|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8596|246-53-1-0
34232|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
34236|data|DCD aListPathsOpera - 0x859E; "list paths (operator)\n"|234-39-0-0
34240|data|DCD aIDDPTTOC - 0x85AE; "%i %d %D %p %t %T %o %C"|242-39-0-0
34244|code|PUSH.W          {R4-R10,LR}|45-233-240-71
34248|code|MOV             R9, R1|137-70
34250|code|MOV.W           R1, #0x8000000|79-240-0-97
34254|code|MOV             R8, R2|144-70
34256|code|MOV             R7, R3|31-70
34258|code|BL              sub_7E28|255-247-41-252
34262|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x85E0)|9-76
34264|code|MOVS            R1, #3|3-33
34266|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
34268|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
34270|code|LDR             R2, =(aListPathsOpera - 0x85E6); "list paths (operator)\n"|9-74
34272|code|LDR             R3, [R4,R5]; logsink|99-89
34274|code|ADD             R2, PC; "list paths (operator)\n"|122-68
34276|code|MOV             R6, R0|6-70
34278|code|LDR             R0, [R3]|24-104
34280|code|BLX             dlog|250-247-10-239
34284|code|MOV             R0, R9|72-70
34286|code|MOV             R1, R8|65-70
34288|code|MOV             R2, R7|58-70
34290|code|MOV             R3, R6|51-70
34292|code|POP.W           {R4-R10,LR}|189-232-240-71
34296|code|B.W             sub_8208|255-247-6-190
34300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x85E0|172-53-1-0
34304|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
34308|data|DCD aListPathsOpera - 0x85E6; "list paths (operator)\n"|162-39-0-0
34312|code|PUSH.W          {R4-R10,LR}|45-233-240-71
34316|code|MOV             R10, R1|138-70
34318|code|MOV.W           R1, #0x20000|79-244-0-49
34322|code|MOV             R4, R3|28-70
34324|code|MOV             R9, R2|145-70
34326|code|BL              sub_7E28|255-247-7-252
34330|code|MOVS            R1, #0|0-33
34332|code|LDR             R7, =(_GLOBAL_OFFSET_TABLE_ - 0x8628)|17-79
34334|code|BLX             convert_dev|250-247-208-238
34338|code|MOVS            R1, #0|0-33
34340|code|ADD             R7, PC; _GLOBAL_OFFSET_TABLE_|127-68
34342|code|MOV             R8, R0|128-70
34344|code|LDR             R0, [R4,#8]|160-104
34346|code|BLX             get_path_layout|251-247-52-234
34350|code|LDR             R0, [R4,#0xC]|224-104
34352|code|MOV             R1, R8|65-70
34354|code|BLX             find_mp_by_str|251-247-92-235
34358|code|MOV             R6, R0|6-70
34360|code|CBZ             R0, loc_865C|128-177
34362|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|11-77
34364|code|MOV             R3, R8|67-70
34366|code|LDR             R2, =(aListMultipathS - 0x8648); "list multipath %s (operator)\n"|11-74
34368|code|MOVS            R1, #3|3-33
34370|code|LDR             R0, [R7,R5]; logsink|120-89
34372|code|ADD             R2, PC; "list multipath %s (operator)\n"|122-68
34374|code|LDR             R0, [R0]|0-104
34376|code|BLX             dlog|250-247-218-238
34380|code|MOV             R0, R10|80-70
34382|code|MOV             R1, R9|73-70
34384|code|MOV             R2, R6|50-70
34386|code|MOV             R3, R4|35-70
34388|code|POP.W           {R4-R10,LR}|189-232-240-71
34392|code|B.W             sub_82E0|255-247-66-190
34396|code|MOVS            R0, #1|1-32
34398|code|POP.W           {R4-R10,PC}|189-232-240-135
34402|data|ALIGN 4|0-191
34404|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8628|100-53-1-0
34408|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
34412|data|DCD aListMultipathS - 0x8648; "list multipath %s (operator)\n"|112-39-0-0
34416|code|PUSH.W          {R4-R8,LR}|45-233-240-65
34420|code|MOV             R6, R3|30-70
34422|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8682)|9-76
34424|code|MOV             R7, R2|23-70
34426|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
34428|code|MOV             R8, R1|136-70
34430|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
34432|code|LDR             R2, =(aListMultipaths - 0x868A); "list multipaths (operator)\n"|8-74
34434|code|MOVS            R1, #3|3-33
34436|code|LDR             R3, [R4,R5]; logsink|99-89
34438|code|ADD             R2, PC; "list multipaths (operator)\n"|122-68
34440|code|LDR             R0, [R3]|24-104
34442|code|BLX             dlog|250-247-186-238
34446|code|MOV             R0, R8|64-70
34448|code|MOV             R1, R7|57-70
34450|code|MOV             R2, R6|50-70
34452|code|POP.W           {R4-R8,LR}|189-232-240-65
34456|code|B.W             sub_8358|255-247-94-190
34460|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8682|10-53-1-0
34464|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
34468|data|DCD aListMultipaths - 0x868A; "list multipaths (operator)\n"|78-39-0-0
34472|code|PUSH            {R3-R5,LR}|56-181
34474|code|MOVW            R0, #0x44C|64-242-76-64
34478|code|MOV             R4, R1|12-70
34480|code|MOV             R5, R2|21-70
34482|code|BLX             zalloc|251-247-98-234
34486|code|STR             R0, [R4]|32-96
34488|code|CBZ             R0, loc_86CC|64-177
34490|code|MOVW            R1, #0x44C|64-242-76-65
34494|code|BLX             snprint_wildcards|251-247-92-233
34498|code|MOVW            R3, #0x44C|64-242-76-67
34502|code|MOVS            R0, #0|0-32
34504|code|STR             R3, [R5]|43-96
34506|code|POP             {R3-R5,PC}|56-189
34508|code|MOVS            R0, #1|1-32
34510|code|POP             {R3-R5,PC}|56-189
34512|code|PUSH            {R3-R7,LR}|248-181
34514|code|MOV             R5, R0|5-70
34516|code|MOVW            R0, #0x44C|64-242-76-64
34520|code|MOV             R4, R1|12-70
34522|code|MOV             R7, R2|23-70
34524|code|BLX             zalloc|251-247-76-234
34528|code|MOVS            R3, #1|1-35
34530|code|CBZ             R0, loc_86F8|72-177
34532|code|MOV             R2, R7|58-70
34534|code|MOVW            R1, #0x44C|64-242-76-65
34538|code|MOV             R6, R0|6-70
34540|code|BLX             snprint_status|251-247-30-233
34544|code|MOVS            R3, #0|0-35
34546|code|STR             R6, [R5]|46-96
34548|code|ADDS            R0, #1|1-48
34550|code|STR             R0, [R4]|32-96
34552|code|MOV             R0, R3|24-70
34554|code|POP             {R3-R7,PC}|248-189
34556|code|PUSH.W          {R4-R8,LR}|45-233-240-65
34560|code|MOV             R7, R0|7-70
34562|code|SUB             SP, SP, #0x10|132-176
34564|code|MOVW            R0, #0x44C|64-242-76-64
34568|code|MOV             R6, R1|14-70
34570|code|BLX             zalloc|251-247-54-234
34574|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8714)|18-75
34576|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
34578|code|MOV             R4, R0|4-70
34580|code|CBZ             R0, loc_874C|208-177
34582|code|LDR             R2, =(daemon_pid_ptr - 0x1BB8C)|17-74
34584|code|LDR             R5, =(aPidDS - 0x8720); "pid %d %s\n"|17-77
34586|code|LDR             R3, [R3,R2]; daemon_pid|155-88
34588|code|ADD             R5, PC; "pid %d %s\n"|125-68
34590|code|LDR.W           R8, [R3]|211-248-0-128
34594|code|BL              sub_565C|252-247-155-255
34598|code|MOVW            R1, #0x44C|64-242-76-65
34602|code|MOVS            R2, #1|1-34
34604|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
34608|code|STMEA.W         SP, {R5,R8}|141-232-32-1
34612|code|STR             R0, [SP,#0x28+var_20]|2-144
34614|code|MOV             R0, R4|32-70
34616|code|BLX             __snprintf_chk|251-247-36-233
34620|code|MOVS            R3, #0|0-35
34622|code|STR             R4, [R7]|60-96
34624|code|ADDS            R0, #1|1-48
34626|code|STR             R0, [R6]|48-96
34628|code|MOV             R0, R3|24-70
34630|code|ADD             SP, SP, #0x10|4-176
34632|code|POP.W           {R4-R8,PC}|189-232-240-129
34636|code|MOVS            R3, #1|1-35
34638|code|MOV             R0, R3|24-70
34640|code|ADD             SP, SP, #0x10|4-176
34642|code|POP.W           {R4-R8,PC}|189-232-240-129
34646|data|ALIGN 4|0-191
34648|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8714|120-52-1-0
34652|data|DCD daemon_pid_ptr - 0x1BB8C|76-4-0-0
34656|data|DCD aPidDS - 0x8720; "pid %d %s\n"|212-38-0-0
34660|code|PUSH.W          {R4-R11,LR}|45-233-240-79
34664|code|SUB             SP, SP, #0xC|131-176
34666|code|MOV             R11, R0|131-70
34668|code|LDR             R0, [R2,#0xC]|208-104
34670|code|STR             R1, [SP,#0x30+var_2C]|1-145
34672|code|MOVS            R1, #1|1-33
34674|code|MOV             R5, R2|21-70
34676|code|MOV             R7, R3|31-70
34678|code|BLX             get_multipath_layout|251-247-174-234
34682|code|MOVW            R0, #0x44C|64-242-76-64
34686|code|BLX             zalloc|251-247-252-233
34690|code|MOV             R8, R0|128-70
34692|code|CMP             R0, #0|0-40
34694|code|BEQ             loc_8832|84-208
34696|code|LDR             R0, [R5,#0xC]|232-104
34698|code|MOVW            R9, #0x44C|64-242-76-73
34702|code|CMP             R0, #0|0-40
34704|code|BEQ             loc_882E|77-208
34706|code|LDR             R3, [R0]|3-104
34708|code|CMP             R3, #0|0-43
34710|code|BLE             loc_8808|55-221
34712|code|MOV             R0, R8|64-70
34714|code|MOV             R1, R9|73-70
34716|code|MOV             R2, R7|58-70
34718|code|BLX             snprint_multipath_header|251-247-148-234
34722|code|LDR             R3, [R5,#0xC]|235-104
34724|code|ADD.W           R4, R8, R0|8-235-0-4
34728|code|CMP             R3, #0|0-43
34730|code|BEQ             loc_882E|64-208
34732|code|LDR             R2, [R3]|26-104
34734|code|CMP             R2, #0|0-42
34736|code|BLE             loc_87E6|25-221
34738|code|LDR             R3, [R3,#4]|91-104
34740|code|ADD.W           R6, R8, R9|8-235-9-6
34744|code|MOV.W           R10, #0|79-240-0-10
34748|code|LDR             R3, [R3]|27-104
34750|code|CBNZ            R3, loc_87D0|59-185
34752|code|B               loc_882E|53-224
34754|code|LDR             R2, [R3]|26-104
34756|code|CMP             R2, R10|82-69
34758|code|BLE             loc_87E6|14-221
34760|code|LDR             R3, [R3,#4]|91-104
34762|code|LDR.W           R3, [R3,R10,LSL#2]|83-248-42-48
34766|code|CBZ             R3, loc_87E6|83-177
34768|code|MOV             R0, R4|32-70
34770|code|SUBS            R1, R6, R4|49-27
34772|code|MOV             R2, R7|58-70
34774|code|ADD.W           R10, R10, #1|10-241-1-10
34778|code|BLX             snprint_multipath|251-247-40-234
34782|code|LDR             R3, [R5,#0xC]|235-104
34784|code|ADD             R4, R0|4-68
34786|code|CMP             R3, #0|0-43
34788|code|BNE             loc_87C2|237-209
34790|code|RSB.W           R0, R8, R4|200-235-4-0
34794|code|MOV             R3, R0|3-70
34796|code|ADD.W           R2, R9, #0xFFFFFFFF|9-241-255-50
34800|code|CMP             R3, R2|147-66
34802|code|BEQ             loc_880C|11-208
34804|code|LDR             R1, [SP,#0x30+var_2C]|1-153
34806|code|MOVS            R2, #0|0-34
34808|code|ADDS            R3, R0, #1|67-28
34810|code|STR.W           R8, [R11]|203-248-0-128
34814|code|MOV             R0, R2|16-70
34816|code|STR             R3, [R1]|11-96
34818|code|ADD             SP, SP, #0xC|3-176
34820|code|POP.W           {R4-R11,PC}|189-232-240-143
34824|code|MOV             R4, R8|68-70
34826|code|B               loc_87E6|236-231
34828|code|MOV.W           R4, R9,LSL#1|79-234-73-4
34832|code|MOV             R0, R8; ptr|64-70
34834|code|MOV             R1, R4; size|33-70
34836|code|BLX             realloc|251-247-40-234
34840|code|MOV             R8, R0|128-70
34842|code|CBZ             R0, loc_8832|80-177
34844|code|ADD             R0, R9; s|72-68
34846|code|MOV             R2, R9; n|74-70
34848|code|MOVS            R1, #0; c|0-33
34850|code|MOV             R9, R4|161-70
34852|code|BLX             memset|250-247-204-238
34856|code|LDR             R0, [R5,#0xC]|232-104
34858|code|CMP             R0, #0|0-40
34860|code|BNE             loc_8792|177-209
34862|code|MOV             R3, R0|3-70
34864|code|B               loc_87EC|220-231
34866|code|MOVS            R2, #1|1-34
34868|code|MOV             R0, R2|16-70
34870|code|ADD             SP, SP, #0xC|3-176
34872|code|POP.W           {R4-R11,PC}|189-232-240-143
34876|code|PUSH.W          {R4-R10,LR}|45-233-240-71
34880|code|MOV             R9, R1|137-70
34882|code|MOV.W           R1, #0x8000000|79-240-0-97
34886|code|MOV             R8, R2|144-70
34888|code|MOV             R7, R3|31-70
34890|code|BL              sub_7E28|255-247-237-250
34894|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8858)|9-76
34896|code|MOVS            R1, #3|3-33
34898|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
34900|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
34902|code|LDR             R2, =(aListMapsOperat - 0x885E); "list maps (operator)\n"|9-74
34904|code|LDR             R3, [R4,R5]; logsink|99-89
34906|code|ADD             R2, PC; "list maps (operator)\n"|122-68
34908|code|MOV             R6, R0|6-70
34910|code|LDR             R0, [R3]|24-104
34912|code|BLX             dlog|250-247-206-237
34916|code|MOV             R0, R9|72-70
34918|code|MOV             R1, R8|65-70
34920|code|MOV             R2, R7|58-70
34922|code|MOV             R3, R6|51-70
34924|code|POP.W           {R4-R10,LR}|189-232-240-71
34928|code|B.W             sub_8764|255-247-120-191
34932|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8858|52-51-1-0
34936|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
34940|data|DCD aListMapsOperat - 0x885E; "list maps (operator)\n"|162-37-0-0
34944|code|PUSH.W          {R4-R8,LR}|45-233-240-65
34948|code|MOV             R6, R3|30-70
34950|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8892)|10-76
34952|code|MOV             R7, R2|23-70
34954|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|10-77
34956|code|MOV             R8, R1|136-70
34958|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
34960|code|LDR             R2, =(aListMapsOperat - 0x889A); "list maps (operator)\n"|9-74
34962|code|MOVS            R1, #3|3-33
34964|code|LDR             R3, [R4,R5]; logsink|99-89
34966|code|ADD             R2, PC; "list maps (operator)\n"|122-68
34968|code|LDR             R0, [R3]|24-104
34970|code|BLX             dlog|250-247-178-237
34974|code|LDR             R3, =(aNDW - 0x88AA); "%n %d %w"|7-75
34976|code|MOV             R0, R8|64-70
34978|code|MOV             R1, R7|57-70
34980|code|MOV             R2, R6|50-70
34982|code|ADD             R3, PC; "%n %d %w"|123-68
34984|code|POP.W           {R4-R8,LR}|189-232-240-65
34988|code|B.W             sub_8764|255-247-90-191
34992|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8892|250-50-1-0
34996|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35000|data|DCD aListMapsOperat - 0x889A; "list maps (operator)\n"|102-37-0-0
35004|data|DCD aNDW - 0x88AA; "%n %d %w"|110-37-0-0
35008|code|PUSH.W          {R4-R8,LR}|45-233-240-65
35012|code|MOV             R6, R3|30-70
35014|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x88D2)|9-76
35016|code|MOV             R7, R2|23-70
35018|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
35020|code|MOV             R8, R1|136-70
35022|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
35024|code|LDR             R2, =(aListStatusOper - 0x88DA); "list status (operator)\n"|8-74
35026|code|MOVS            R1, #3|3-33
35028|code|LDR             R3, [R4,R5]; logsink|99-89
35030|code|ADD             R2, PC; "list status (operator)\n"|122-68
35032|code|LDR             R0, [R3]|24-104
35034|code|BLX             dlog|250-247-146-237
35038|code|MOV             R0, R8|64-70
35040|code|MOV             R1, R7|57-70
35042|code|MOV             R2, R6|50-70
35044|code|POP.W           {R4-R8,LR}|189-232-240-65
35048|code|B.W             sub_86D0|255-247-242-190
35052|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x88D2|186-50-1-0
35056|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35060|data|DCD aListStatusOper - 0x88DA; "list status (operator)\n"|74-37-0-0
35064|code|PUSH.W          {R4-R8,LR}|45-233-240-65
35068|code|MOV             R6, R3|30-70
35070|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x890A)|10-76
35072|code|MOV             R7, R2|23-70
35074|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|10-77
35076|code|MOV             R8, R1|136-70
35078|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
35080|code|LDR             R2, =(aListMapsStatus - 0x8912); "list maps status (operator)\n"|9-74
35082|code|MOVS            R1, #3|3-33
35084|code|LDR             R3, [R4,R5]; logsink|99-89
35086|code|ADD             R2, PC; "list maps status (operator)\n"|122-68
35088|code|LDR             R0, [R3]|24-104
35090|code|BLX             dlog|250-247-118-237
35094|code|LDR             R3, =(aNFQNTR - 0x8922); "%n %F %Q %N %t %r"|7-75
35096|code|MOV             R0, R8|64-70
35098|code|MOV             R1, R7|57-70
35100|code|MOV             R2, R6|50-70
35102|code|ADD             R3, PC; "%n %F %Q %N %t %r"|123-68
35104|code|POP.W           {R4-R8,LR}|189-232-240-65
35108|code|B.W             sub_8764|255-247-30-191
35112|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x890A|130-50-1-0
35116|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35120|data|DCD aListMapsStatus - 0x8912; "list maps status (operator)\n"|42-37-0-0
35124|data|DCD aNFQNTR - 0x8922; "%n %F %Q %N %t %r"|58-37-0-0
35128|code|PUSH.W          {R4-R8,LR}|45-233-240-65
35132|code|MOV             R6, R3|30-70
35134|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x894A)|10-76
35136|code|MOV             R7, R2|23-70
35138|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|10-77
35140|code|MOV             R8, R1|136-70
35142|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
35144|code|LDR             R2, =(aListMapsStatsO - 0x8952); "list maps stats (operator)\n"|9-74
35146|code|MOVS            R1, #3|3-33
35148|code|LDR             R3, [R4,R5]; logsink|99-89
35150|code|ADD             R2, PC; "list maps stats (operator)\n"|122-68
35152|code|LDR             R0, [R3]|24-104
35154|code|BLX             dlog|250-247-86-237
35158|code|LDR             R3, =(aN01234 - 0x8962); "%n %0 %1 %2 %3 %4"|7-75
35160|code|MOV             R0, R8|64-70
35162|code|MOV             R1, R7|57-70
35164|code|MOV             R2, R6|50-70
35166|code|ADD             R3, PC; "%n %0 %1 %2 %3 %4"|123-68
35168|code|POP.W           {R4-R8,LR}|189-232-240-65
35172|code|B.W             sub_8764|255-247-254-190
35176|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x894A|66-50-1-0
35180|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35184|data|DCD aListMapsStatsO - 0x8952; "list maps stats (operator)\n"|30-37-0-0
35188|data|DCD aN01234 - 0x8962; "%n %0 %1 %2 %3 %4"|42-37-0-0
35192|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x8980)|9-75
35194|code|PUSH            {R4-R6,LR}|112-181
35196|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
35198|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|9-76
35200|code|MOV             R5, R2|21-70
35202|code|LDR             R2, =(aListDaemonOper - 0x898E); "list daemon (operator)\n"|9-74
35204|code|MOV             R6, R1|14-70
35206|code|MOVS            R1, #3|3-33
35208|code|LDR             R3, [R3,R4]; logsink|27-89
35210|code|ADD             R2, PC; "list daemon (operator)\n"|122-68
35212|code|LDR             R0, [R3]|24-104
35214|code|BLX             dlog|250-247-56-237
35218|code|MOV             R0, R6|48-70
35220|code|MOV             R1, R5|41-70
35222|code|POP.W           {R4-R6,LR}|189-232-112-64
35226|code|B.W             sub_86FC|255-247-175-190
35230|data|ALIGN 0x10|0-191
35232|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8980|12-50-1-0
35236|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35240|data|DCD aListDaemonOper - 0x898E; "list daemon (operator)\n"|18-37-0-0
35244|code|PUSH.W          {R4-R11,LR}|45-233-240-79
35248|code|MOV             R7, R1|15-70
35250|code|SUB             SP, SP, #0x14|133-176
35252|code|MOV.W           R1, #0x10000|79-244-128-49
35256|code|MOV             R6, R2|22-70
35258|code|MOV             R8, R3|152-70
35260|code|BL              sub_7E28|255-247-52-250
35264|code|MOVS            R1, #1|1-33
35266|code|BLX             convert_dev|250-247-254-236
35270|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x89D0)|63-76
35272|code|LDR             R2, =(aSAddPathOperat - 0x89D2); "%s: add path (operator)\n"|63-74
35274|code|MOVS            R1, #2|2-33
35276|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
35278|code|ADD             R2, PC; "%s: add path (operator)\n"|122-68
35280|code|MOV             R3, R0|3-70
35282|code|MOV             R5, R0|5-70
35284|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|61-72
35286|code|LDR.W           R9, [R4,R0]; logsink|84-248-0-144
35290|code|LDR.W           R0, [R9]|217-248-0-0
35294|code|BLX             dlog|250-247-16-237
35298|code|LDR             R0, =(conf_ptr - 0x1BB8C)|59-72
35300|code|MOV             R2, R5|42-70
35302|code|LDR             R4, [R4,R0]; conf|36-88
35304|code|LDR             R3, [R4]|35-104
35306|code|LDR.W           R0, [R3,#0xDC]|211-248-220-0
35310|code|LDR.W           R1, [R3,#0xEC]|211-248-236-16
35314|code|BLX             filter_devnode|250-247-12-237
35318|code|CMP             R0, #0|0-40
35320|code|BLE             loc_8A36|29-221
35322|code|MOVS            R0, #0xD; size|13-32
35324|code|BLX             malloc|251-247-68-232
35328|code|MOV             LR, R0|134-70
35330|code|CBZ             R0, loc_8A10|40-177
35332|code|LDR             R3, =(aBlacklisted - 0x8A0C); "blacklisted\n"|51-75
35334|code|MOV             R4, R0|4-70
35336|code|ADD             R3, PC; "blacklisted\n"|123-68
35338|code|LDM             R3, {R0-R3}; "blacklisted\n"|15-203
35340|code|STM             R4!, {R0-R2}|7-196
35342|code|STRB            R3, [R4]|35-112
35344|code|STR.W           LR, [R7]|199-248-0-224
35348|code|MOV             R0, LR; s|112-70
35350|code|BLX             strlen|250-247-240-238
35354|code|LDR             R2, =(aSPathBlacklist - 0x8A24); "%s: path blacklisted\n"|47-74
35356|code|MOV             R3, R5|43-70
35358|code|MOVS            R1, #2|2-33
35360|code|ADD             R2, PC; "%s: path blacklisted\n"|122-68
35362|code|ADDS            R0, #1|1-48
35364|code|STR             R0, [R6]|48-96
35366|code|LDR.W           R0, [R9]|217-248-0-0
35370|code|BLX             dlog|250-247-234-236
35374|code|MOVS            R0, #0|0-32
35376|code|ADD             SP, SP, #0x14|5-176
35378|code|POP.W           {R4-R11,PC}|189-232-240-143
35382|code|LDR.W           R0, [R8,#8]|216-248-8-0
35386|code|MOV             R1, R5|41-70
35388|code|BLX             find_path_by_dev|251-247-138-232
35392|code|STR             R0, [SP,#0x38+var_2C]|3-144
35394|code|CBZ             R0, loc_8A6A|144-177
35396|code|LDR             R2, =(aSPathAlreadyIn - 0x8A52); "%s: path already in pathvec\n"|37-74
35398|code|MOV             R3, R5|43-70
35400|code|LDR.W           R0, [R9]|217-248-0-0
35404|code|MOVS            R1, #2|2-33
35406|code|ADD             R2, PC; "%s: path already in pathvec\n"|122-68
35408|code|BLX             dlog|250-247-214-236
35412|code|LDR             R1, [SP,#0x38+var_2C]|3-153
35414|code|MOVS            R0, #0|0-32
35416|code|LDR.W           R3, [R1,#0x5B8]|209-248-184-53
35420|code|CMP             R3, #0|0-43
35422|code|BNE             loc_8A30|231-209
35424|code|MOV             R0, R1|8-70
35426|code|MOV             R1, R8|65-70
35428|code|BL              sub_5CA0|253-247-28-249
35432|code|B               loc_8A30|226-231
35434|code|LDR             R3, [R4]|35-104
35436|code|MOV             R2, R5|42-70
35438|code|LDR             R1, =(aBlock_0 - 0x8A78); "block"|28-73
35440|code|LDR.W           R0, [R3,#0x98]|211-248-152-0
35444|code|ADD             R1, PC; "block"|121-68
35446|code|BLX             udev_device_new_from_subsystem_sysname|250-247-220-239
35450|code|LDR             R1, [R4]|33-104
35452|code|ADD.W           LR, SP, #0x38+var_2C|13-241-12-14
35456|code|MOVS            R3, #0x1F|31-35
35458|code|LDR.W           R1, [R1,#0xD8]|209-248-216-16
35462|code|MOV             R2, R0|2-70
35464|code|MOV             R11, R0|131-70
35466|code|LDR.W           R0, [R8,#8]|216-248-8-0
35470|code|STR.W           LR, [SP,#0x38+var_38]|205-248-0-224
35474|code|BLX             store_pathinfo|250-247-206-236
35478|code|MOV             R10, R0|130-70
35480|code|MOV             R0, R11|88-70
35482|code|BLX             udev_device_unref|250-247-242-238
35486|code|LDR             R1, [SP,#0x38+var_2C]|3-153
35488|code|CBZ             R1, loc_8AAC|33-177
35490|code|LDR             R3, [R4]|35-104
35492|code|LDR             R3, [R3,#0x20]|27-106
35494|code|STR.W           R3, [R1,#0x318]|193-248-24-51
35498|code|B               loc_8A60|217-231
35500|code|CMP.W           R10, #2|186-241-2-15
35504|code|BEQ             loc_89FA|163-208
35506|code|LDR             R2, =(aSFailedToStore - 0x8ABE); "%s: failed to store path info\n"|12-74
35508|code|MOV             R3, R5|43-70
35510|code|LDR.W           R0, [R9]|217-248-0-0
35514|code|ADD             R2, PC; "%s: failed to store path info\n"|122-68
35516|code|BLX             dlog|250-247-160-236
35520|code|MOVS            R0, #1|1-32
35522|code|B               loc_8A30|181-231
35524|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x89D0|188-49-1-0
35528|data|DCD aSAddPathOperat - 0x89D2; "%s: add path (operator)\n"|230-36-0-0
35532|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35536|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
35540|data|DCD aBlacklisted - 0x8A0C; "blacklisted\n"|68-37-0-0
35544|data|DCD aSPathBlacklist - 0x8A24; "%s: path blacklisted\n"|216-36-0-0
35548|data|DCD aSPathAlreadyIn - 0x8A52; "%s: path already in pathvec\n"|130-36-0-0
35552|data|DCD aBlock_0 - 0x8A78; "block"|124-36-0-0
35556|data|DCD aSFailedToStore - 0x8ABE; "%s: failed to store path info\n"|154-23-0-0
35560|code|PUSH            {R3-R7,LR}|248-181
35562|code|MOV.W           R1, #0x10000|79-244-128-49
35566|code|MOV             R7, R3|31-70
35568|code|BL              sub_7E28|255-247-154-249
35572|code|MOVS            R1, #1|1-33
35574|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8B02)|17-76
35576|code|BLX             convert_dev|250-247-98-236
35580|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|16-77
35582|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
35584|code|LDR             R2, =(aSRemovePathOpe - 0x8B0A); "%s: remove path (operator)\n"|16-74
35586|code|MOVS            R1, #2|2-33
35588|code|LDR             R4, [R4,R5]; logsink|100-89
35590|code|ADD             R2, PC; "%s: remove path (operator)\n"|122-68
35592|code|MOV             R6, R0|6-70
35594|code|MOV             R3, R0|3-70
35596|code|LDR             R0, [R4]|32-104
35598|code|BLX             dlog|250-247-120-236
35602|code|LDR             R0, [R7,#8]|184-104
35604|code|MOV             R1, R6|49-70
35606|code|BLX             find_path_by_dev|251-247-30-232
35610|code|CBZ             R0, loc_8B26|32-177
35612|code|MOV             R1, R7|57-70
35614|code|POP.W           {R3-R7,LR}|189-232-248-64
35618|code|B.W             sub_5460|252-247-157-188
35622|code|LDR             R2, =(aSPathAlreadyRe - 0x8B34); "%s: path already removed\n"|8-74
35624|code|MOV             R5, R0|5-70
35626|code|MOV             R3, R6|51-70
35628|code|LDR             R0, [R4]|32-104
35630|code|MOV             R1, R5|41-70
35632|code|ADD             R2, PC; "%s: path already removed\n"|122-68
35634|code|BLX             dlog|250-247-102-236
35638|code|MOV             R0, R5|40-70
35640|code|POP             {R3-R7,PC}|248-189
35642|data|ALIGN 4|0-191
35644|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8B02|138-48-1-0
35648|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35652|data|DCD aSRemovePathOpe - 0x8B0A; "%s: remove path (operator)\n"|10-36-0-0
35656|data|DCD aSPathAlreadyRe - 0x8B34; "%s: path already removed\n"|96-23-0-0
35660|code|PUSH.W          {R4-R11,LR}|45-233-240-79
35664|code|MOV             R10, R3|154-70
35666|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8B60)|72-76
35668|code|SUB.W           SP, SP, #0x214|173-245-5-125
35672|code|LDR             R5, =(__stack_chk_guard_ptr - 0x1BB8C)|71-77
35674|code|MOV             R9, R1|137-70
35676|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
35678|code|MOV.W           R1, #0x20000|79-244-0-49
35682|code|MOV             R8, R2|144-70
35684|code|LDR             R6, [R4,R5]; __stack_chk_guard|102-89
35686|code|LDR             R3, [R6]|51-104
35688|code|STR             R3, [SP,#0x238+var_2C]|131-147
35690|code|BL              sub_7E28|255-247-93-249
35694|code|MOVS            R1, #0|0-33
35696|code|BLX             convert_dev|250-247-38-236
35700|code|LDR             R2, =(aSAddMapOperato - 0x8B7C); "%s: add map (operator)\n"|65-74
35702|code|MOVS            R1, #2|2-33
35704|code|ADD             R2, PC; "%s: add map (operator)\n"|122-68
35706|code|MOV             R5, R0|5-70
35708|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|64-72
35710|code|MOV             R3, R5|43-70
35712|code|LDR             R7, [R4,R0]; logsink|39-88
35714|code|LDR             R0, [R7]|56-104
35716|code|BLX             dlog|250-247-60-236
35720|code|LDR             R1, =(conf_ptr - 0x1BB8C)|62-73
35722|code|MOV             R2, R5|42-70
35724|code|LDR             R3, [R4,R1]; conf|99-88
35726|code|LDR             R3, [R3]|27-104
35728|code|LDR.W           R0, [R3,#0xE0]|211-248-224-0
35732|code|LDR.W           R1, [R3,#0xF0]|211-248-240-16
35736|code|BLX             filter_wwid|250-247-126-237
35740|code|CMP             R0, #0|0-40
35742|code|BLE             loc_8BE6|34-221
35744|code|MOVS            R0, #0xD; size|13-32
35746|code|BLX             malloc|250-247-114-239
35750|code|MOV             LR, R0|134-70
35752|code|CBZ             R0, loc_8BB6|40-177
35754|code|LDR             R3, =(aBlacklisted - 0x8BB2); "blacklisted\n"|55-75
35756|code|MOV             R4, R0|4-70
35758|code|ADD             R3, PC; "blacklisted\n"|123-68
35760|code|LDM             R3, {R0-R3}; "blacklisted\n"|15-203
35762|code|STM             R4!, {R0-R2}|7-196
35764|code|STRB            R3, [R4]|35-112
35766|code|STR.W           LR, [R9]|201-248-0-224
35770|code|MOV             R0, LR; s|112-70
35772|code|BLX             strlen|250-247-28-238
35776|code|LDR             R2, =(unk_AF48 - 0x8BCA)|50-74
35778|code|MOV             R3, R5|43-70
35780|code|MOVS            R1, #2|2-33
35782|code|ADD             R2, PC; unk_AF48|122-68
35784|code|ADDS            R0, #1|1-48
35786|code|STR.W           R0, [R8]|200-248-0-0
35790|code|LDR             R0, [R7]|56-104
35792|code|BLX             dlog|250-247-22-236
35796|code|MOVS            R0, #0|0-32
35798|code|LDR             R2, [SP,#0x238+var_2C]|131-154
35800|code|LDR             R3, [R6]|51-104
35802|code|CMP             R2, R3|154-66
35804|code|BNE             loc_8C70|72-209
35806|code|ADD.W           SP, SP, #0x214|13-245-5-125
35810|code|POP.W           {R4-R11,PC}|189-232-240-143
35814|code|MOV             R0, R5|40-70
35816|code|BLX             dm_get_minor|250-247-244-237
35820|code|SUBS            R4, R0, #0|4-30
35822|code|BLT             loc_8C34|33-219
35824|code|MOV             R0, R5|40-70
35826|code|BLX             dm_get_major|250-247-164-239
35830|code|SUBS.W          R11, R0, #0|176-241-0-11
35834|code|BLT             loc_8C46|36-219
35836|code|ADD.W           R9, SP, #0x238+var_22C|13-241-12-9
35840|code|LDR             R3, =(aDmD - 0x8C0C); "dm-%d"|35-75
35842|code|MOVS            R1, #1|1-33
35844|code|MOV.W           R2, #0x200|79-244-0-114
35848|code|ADD             R3, PC; "dm-%d"|123-68
35850|code|STR             R4, [SP,#0x238+var_238]|0-148
35852|code|MOV             R0, R9|72-70
35854|code|BLX             __sprintf_chk|251-247-26-232
35858|code|MOV             R0, R11|88-70
35860|code|MOV             R1, R4|33-70
35862|code|BLX             dm_mapname|250-247-114-238
35866|code|MOV             R8, R0|128-70
35868|code|CBZ             R0, loc_8C58|224-177
35870|code|MOV             R2, R10|82-70
35872|code|MOV             R1, R8|65-70
35874|code|MOV             R0, R9|72-70
35876|code|BL              sub_5280|252-247-44-251
35880|code|MOV             R4, R0|4-70
35882|code|MOV             R0, R8|64-70
35884|code|BLX             xfree|250-247-68-236
35888|code|MOV             R0, R4|32-70
35890|code|B               loc_8BD6|208-231
35892|code|LDR             R2, =(aSNotADeviceMap - 0x8C40); "%s: not a device mapper table\n"|23-74
35894|code|MOV             R3, R5|43-70
35896|code|LDR             R0, [R7]|56-104
35898|code|MOVS            R1, #2|2-33
35900|code|ADD             R2, PC; "%s: not a device mapper table\n"|122-68
35902|code|BLX             dlog|250-247-224-235
35906|code|MOVS            R0, #0|0-32
35908|code|B               loc_8BD6|199-231
35910|code|LDR             R2, =(aSNotADeviceMap - 0x8C52); "%s: not a device mapper table\n"|20-74
35912|code|MOV             R3, R5|43-70
35914|code|LDR             R0, [R7]|56-104
35916|code|MOVS            R1, #2|2-33
35918|code|ADD             R2, PC; "%s: not a device mapper table\n"|122-68
35920|code|BLX             dlog|250-247-214-235
35924|code|MOVS            R0, #0|0-32
35926|code|B               loc_8BD6|190-231
35928|code|LDR             R2, =(aSMapnameNotFou - 0x8C68); "%s: mapname not found for %d:%d\n"|16-74
35930|code|MOV             R3, R5|43-70
35932|code|LDR             R0, [R7]|56-104
35934|code|MOVS            R1, #2|2-33
35936|code|STR.W           R11, [SP,#0x238+var_238]|205-248-0-176
35940|code|ADD             R2, PC; "%s: mapname not found for %d:%d\n"|122-68
35942|code|STR             R4, [SP,#0x238+var_234]|1-148
35944|code|BLX             dlog|250-247-202-235
35948|code|MOV             R0, R8|64-70
35950|code|B               loc_8BD6|178-231
35952|code|BLX             __stack_chk_fail|250-247-28-239
35956|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8B60|44-48-1-0
35960|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
35964|data|DCD aSAddMapOperato - 0x8B7C; "%s: add map (operator)\n"|180-35-0-0
35968|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
35972|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
35976|data|DCD aBlacklisted - 0x8BB2; "blacklisted\n"|158-35-0-0
35980|data|DCD unk_AF48 - 0x8BCA|126-35-0-0
35984|data|DCD aDmD - 0x8C0C; "dm-%d"|116-35-0-0
35988|data|DCD aSNotADeviceMap - 0x8C40; "%s: not a device mapper table\n"|32-35-0-0
35992|data|DCD aSNotADeviceMap - 0x8C52; "%s: not a device mapper table\n"|14-35-0-0
35996|data|DCD aSMapnameNotFou - 0x8C68; "%s: mapname not found for %d:%d\n"|244-20-0-0
36000|code|PUSH.W          {R4-R10,LR}|45-233-240-71
36004|code|MOV             R6, R3|30-70
36006|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8CB6)|53-76
36008|code|SUB.W           SP, SP, #0x210|173-245-4-125
36012|code|LDR             R2, =(__stack_chk_guard_ptr - 0x1BB8C)|52-74
36014|code|MOV.W           R1, #0x20000|79-244-0-49
36018|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
36020|code|LDR             R7, [R4,R2]; __stack_chk_guard|167-88
36022|code|LDR             R3, [R7]|59-104
36024|code|STR             R3, [SP,#0x230+var_24]|131-147
36026|code|BL              sub_7E28|255-247-181-248
36030|code|MOVS            R1, #0|0-33
36032|code|BLX             convert_dev|250-247-126-235
36036|code|LDR             R2, =(aSRemoveMapOper - 0x8CCC); "%s: remove map (operator)\n"|47-74
36038|code|MOVS            R1, #2|2-33
36040|code|ADD             R2, PC; "%s: remove map (operator)\n"|122-68
36042|code|MOV             R5, R0|5-70
36044|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|46-72
36046|code|MOV             R3, R5|43-70
36048|code|LDR.W           R9, [R4,R0]; logsink|84-248-0-144
36052|code|LDR.W           R0, [R9]|217-248-0-0
36056|code|BLX             dlog|250-247-146-235
36060|code|MOV             R0, R5|40-70
36062|code|BLX             dm_get_minor|250-247-122-237
36066|code|SUBS            R4, R0, #0|4-30
36068|code|BLT             loc_8D36|39-219
36070|code|MOV             R0, R5|40-70
36072|code|BLX             dm_get_major|250-247-40-239
36076|code|SUBS.W          R10, R0, #0|176-241-0-10
36080|code|BLT             loc_8D4A|43-219
36082|code|LDR             R3, =(aDmD - 0x8D00); "dm-%d"|38-75
36084|code|MOVS            R1, #1|1-33
36086|code|MOV.W           R2, #0x200|79-244-0-114
36090|code|STR             R4, [SP,#0x230+var_230]|0-148
36092|code|ADD             R3, PC; "dm-%d"|123-68
36094|code|ADD             R0, SP, #0x230+var_224|3-168
36096|code|BLX             __sprintf_chk|250-247-160-239
36100|code|MOV             R0, R10|80-70
36102|code|MOV             R1, R4|33-70
36104|code|BLX             dm_mapname|250-247-248-237
36108|code|MOV             R8, R0|128-70
36110|code|CBZ             R0, loc_8D5E|48-179
36112|code|MOV             R2, R4|34-70
36114|code|MOV             R3, R6|51-70
36116|code|MOV             R1, R8|65-70
36118|code|MOV             R0, R5|40-70
36120|code|BL              sub_53E0|252-247-98-251
36124|code|MOV             R4, R0|4-70
36126|code|MOV             R0, R8|64-70
36128|code|BLX             xfree|250-247-202-235
36132|code|MOV             R0, R4|32-70
36134|code|LDR             R2, [SP,#0x230+var_24]|131-154
36136|code|LDR             R3, [R7]|59-104
36138|code|CMP             R2, R3|154-66
36140|code|BNE             loc_8D78|36-209
36142|code|ADD.W           SP, SP, #0x210|13-245-4-125
36146|code|POP.W           {R4-R10,PC}|189-232-240-135
36150|code|LDR             R2, =(aSNotADeviceMap - 0x8D44); "%s: not a device mapper table\n"|22-74
36152|code|MOV             R3, R5|43-70
36154|code|LDR.W           R0, [R9]|217-248-0-0
36158|code|MOVS            R1, #2|2-33
36160|code|ADD             R2, PC; "%s: not a device mapper table\n"|122-68
36162|code|BLX             dlog|250-247-94-235
36166|code|MOVS            R0, #0|0-32
36168|code|B               loc_8D26|237-231
36170|code|LDR             R2, =(aSNotADeviceMap - 0x8D58); "%s: not a device mapper table\n"|18-74
36172|code|MOV             R3, R5|43-70
36174|code|LDR.W           R0, [R9]|217-248-0-0
36178|code|MOVS            R1, #2|2-33
36180|code|ADD             R2, PC; "%s: not a device mapper table\n"|122-68
36182|code|BLX             dlog|250-247-84-235
36186|code|MOVS            R0, #0|0-32
36188|code|B               loc_8D26|227-231
36190|code|LDR             R2, =(aSMapnameNotFou - 0x8D70); "%s: mapname not found for %d:%d\n"|14-74
36192|code|MOV             R3, R5|43-70
36194|code|LDR.W           R0, [R9]|217-248-0-0
36198|code|MOVS            R1, #2|2-33
36200|code|STR.W           R10, [SP,#0x230+var_230]|205-248-0-160
36204|code|ADD             R2, PC; "%s: mapname not found for %d:%d\n"|122-68
36206|code|STR             R4, [SP,#0x230+var_22C]|1-148
36208|code|BLX             dlog|250-247-70-235
36212|code|MOV             R0, R8|64-70
36214|code|B               loc_8D26|214-231
36216|code|BLX             __stack_chk_fail|250-247-152-238
36220|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8CB6|214-46-1-0
36224|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
36228|data|DCD aSRemoveMapOper - 0x8CCC; "%s: remove map (operator)\n"|188-34-0-0
36232|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
36236|data|DCD aDmD - 0x8D00; "dm-%d"|128-34-0-0
36240|data|DCD aSNotADeviceMap - 0x8D44; "%s: not a device mapper table\n"|28-34-0-0
36244|data|DCD aSNotADeviceMap - 0x8D58; "%s: not a device mapper table\n"|8-34-0-0
36248|data|DCD aSMapnameNotFou - 0x8D70; "%s: mapname not found for %d:%d\n"|236-19-0-0
36252|code|PUSH            {R4-R7,LR}|240-181
36254|code|MOV.W           R1, #0x20000|79-244-0-49
36258|code|SUB             SP, SP, #0xC|131-176
36260|code|MOV             R7, R3|31-70
36262|code|BL              sub_7E28|255-247-63-248
36266|code|MOVS            R1, #0|0-33
36268|code|BLX             convert_dev|250-247-8-235
36272|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8DBA)|23-76
36274|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|24-77
36276|code|MOVS            R1, #2|2-33
36278|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
36280|code|LDR             R2, =(aSReloadMapOper - 0x8DC0); "%s: reload map (operator)\n"|23-74
36282|code|LDR             R4, [R4,R5]; logsink|100-89
36284|code|ADD             R2, PC; "%s: reload map (operator)\n"|122-68
36286|code|MOV             R3, R0|3-70
36288|code|MOV             R6, R0|6-70
36290|code|LDR             R0, [R4]|32-104
36292|code|BLX             dlog|250-247-28-235
36296|code|LDR             R1, =(aDmD - 0x8DD2); "dm-%d"|20-73
36298|code|MOV             R0, R6|48-70
36300|code|ADD             R2, SP, #0x20+var_1C|1-170
36302|code|ADD             R1, PC; "dm-%d"|121-68
36304|code|BLX             __isoc99_sscanf|250-247-156-235
36308|code|CMP             R0, #1|1-40
36310|code|LDR             R0, [R7,#0xC]|248-104
36312|code|BEQ             loc_8DF0|10-208
36314|code|MOV             R1, R6|49-70
36316|code|BLX             find_mp_by_alias|250-247-110-236
36320|code|MOV             R1, R0|1-70
36322|code|CBZ             R1, loc_8DFC|89-177
36324|code|MOV             R0, R7|56-70
36326|code|MOVS            R2, #0|0-34
36328|code|BLX             reload_map|250-247-46-238
36332|code|ADD             SP, SP, #0xC|3-176
36334|code|POP             {R4-R7,PC}|240-189
36336|code|LDR             R1, [SP,#0x20+var_1C]|1-153
36338|code|BLX             find_mp_by_minor|250-247-56-237
36342|code|MOV             R1, R0|1-70
36344|code|CMP             R1, #0|0-41
36346|code|BNE             loc_8DE4|243-209
36348|code|LDR             R2, =(aSInvalidMapNam - 0x8E06); "%s: invalid map name. cannot reload\n"|8-74
36350|code|MOV             R3, R6|51-70
36352|code|LDR             R0, [R4]|32-104
36354|code|ADD             R2, PC; "%s: invalid map name. cannot reload\n"|122-68
36356|code|BLX             dlog|250-247-252-234
36360|code|MOVS            R0, #1|1-32
36362|code|ADD             SP, SP, #0xC|3-176
36364|code|POP             {R4-R7,PC}|240-189
36366|data|ALIGN 0x10|0-191
36368|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8DBA|210-45-1-0
36372|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
36376|data|DCD aSReloadMapOper - 0x8DC0; "%s: reload map (operator)\n"|228-33-0-0
36380|data|DCD aDmD - 0x8DD2; "dm-%d"|174-33-0-0
36384|data|DCD aSInvalidMapNam - 0x8E06; "%s: invalid map name. cannot reload\n"|186-33-0-0
36388|code|PUSH.W          {R4-R11,LR}|45-233-240-79
36392|code|SUB.W           SP, SP, #0x1000|173-245-128-93
36396|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x8E3A)|223-248-196-160
36400|code|SUB             SP, SP, #0x1C|135-176
36402|code|LDR             R5, =(__stack_chk_guard_ptr - 0x1BB8C)|49-77
36404|code|MOV             R7, R3|31-70
36406|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
36408|code|ADD.W           R3, SP, #0x101C+arg_0|13-245-130-83
36412|code|ADD.W           R11, SP, #0x14|13-241-20-11
36416|code|ADD.W           LR, SP, #0x101C+var_1C|13-245-128-94
36420|code|LDR.W           R9, [R10,R5]; __stack_chk_guard|90-248-5-144
36424|code|MOV             R4, R0|4-70
36426|code|LDR.W           R8, [R3]|211-248-0-128
36430|code|ADD.W           LR, LR, #0x14|14-241-20-14
36434|code|MOV             R6, R2|22-70
36436|code|MOVS            R1, #0; c|0-33
36438|code|LDR.W           R3, [R9]|217-248-0-48
36442|code|MOV.W           R2, #0x1000; n|79-244-128-82
36446|code|MOV             R5, R4|37-70
36448|code|MOV             R0, R11; s|88-70
36450|code|STR.W           R3, [LR]|206-248-0-48
36454|code|BLX             memset|250-247-172-235
36458|code|LDRD.W          R2, R3, [R5,#0x158]!|245-233-86-35
36462|code|MOV             R0, R4|32-70
36464|code|LDR.W           R1, [R8,#8]|216-248-8-16
36468|code|STRD.W          R6, R7, [R5]|197-233-0-103
36472|code|STRD.W          R2, R3, [SP,#0x101C+var_1014]|205-233-2-35
36476|code|BLX             update_mpp_paths|250-247-244-235
36480|code|MOV             R1, R11|89-70
36482|code|MOV.W           R2, #0x1000|79-244-128-82
36486|code|MOV             R0, R4|32-70
36488|code|BLX             setup_map|250-247-68-237
36492|code|MOVS            R3, #7|7-35
36494|code|MOV             R1, R11|89-70
36496|code|MOV             R0, R4|32-70
36498|code|STR.W           R3, [R4,#0x114]|196-248-20-49
36502|code|BLX             domap|250-247-92-236
36506|code|CMP             R0, #0|0-40
36508|code|IT GT|200-191
36510|code|MOVGT           R0, #0|0-32
36512|code|BLE             loc_8EBC|12-221
36514|code|ADD.W           R3, SP, #0x101C+var_1C|13-245-128-83
36518|code|ADDS            R3, #0x14|20-51
36520|code|LDR             R2, [R3]|26-104
36522|code|LDR.W           R3, [R9]|217-248-0-48
36526|code|CMP             R2, R3|154-66
36528|code|BNE             loc_8EEE|29-209
36530|code|ADD.W           SP, SP, #0x1000|13-245-128-93
36534|code|ADD             SP, SP, #0x1C|7-176
36536|code|POP.W           {R4-R11,PC}|189-232-240-143
36540|code|LDR             R2, =(logsink_ptr - 0x1BB8C)|15-74
36542|code|LDR.W           R6, [R4,#0x16C]|212-248-108-97
36546|code|LDR.W           R3, [R10,R2]; logsink|90-248-2-48
36550|code|LDR             R4, [R3]|28-104
36552|code|BLX             __errno_location|250-247-52-239
36556|code|LDR             R0, [R0]; errnum|0-104
36558|code|BLX             strerror|250-247-138-234
36562|code|LDR             R2, =(aSFailedToResiz - 0x8EDC); "%s: failed to resize map : %s\n"|11-74
36564|code|MOV             R3, R6|51-70
36566|code|MOVS            R1, #0|0-33
36568|code|ADD             R2, PC; "%s: failed to resize map : %s\n"|122-68
36570|code|STR             R0, [SP,#0x101C+var_101C]|0-144
36572|code|MOV             R0, R4|32-70
36574|code|BLX             dlog|250-247-144-234
36578|code|LDRD.W          R2, R3, [SP,#0x101C+var_1014]|221-233-2-35
36582|code|MOVS            R0, #1|1-32
36584|code|STRD.W          R2, R3, [R5]|197-233-0-35
36588|code|B               loc_8EA2|217-231
36590|code|BLX             __stack_chk_fail|250-247-222-237
36594|data|ALIGN 4|0-191
36596|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8E3A|82-45-1-0
36600|data|DCD __stack_chk_guard_ptr - 0x1BB8C|232-3-0-0
36604|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
36608|data|DCD aSFailedToResiz - 0x8EDC; "%s: failed to resize map : %s\n"|12-33-0-0
36612|code|PUSH.W          {R4-R11,LR}|45-233-240-79
36616|code|MOV.W           R1, #0x20000|79-244-0-49
36620|code|SUB             SP, SP, #0x2C|139-176
36622|code|MOV             R7, R3|31-70
36624|code|BL              sub_7E28|254-247-138-255
36628|code|MOVS            R1, #0|0-33
36630|code|BLX             convert_dev|250-247-84-234
36634|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x8F24)|83-76
36636|code|LDR             R6, =(logsink_ptr - 0x1BB8C)|83-78
36638|code|MOVS            R1, #2|2-33
36640|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
36642|code|LDR             R2, =(aSResizeMapOper - 0x8F2A); "%s: resize map (operator)\n"|83-74
36644|code|LDR             R6, [R4,R6]; logsink|166-89
36646|code|ADD             R2, PC; "%s: resize map (operator)\n"|122-68
36648|code|MOV             R3, R0|3-70
36650|code|MOV             R5, R0|5-70
36652|code|LDR             R0, [R6]|48-104
36654|code|BLX             dlog|250-247-104-234
36658|code|LDR             R1, =(aDmD - 0x8F3C); "dm-%d"|80-73
36660|code|MOV             R0, R5|40-70
36662|code|ADD             R2, SP, #0x50+var_34|7-170
36664|code|ADD             R1, PC; "dm-%d"|121-68
36666|code|BLX             __isoc99_sscanf|250-247-232-234
36670|code|CMP             R0, #1|1-40
36672|code|LDR             R0, [R7,#0xC]|248-104
36674|code|BEQ             loc_8FE6|80-208
36676|code|MOV             R1, R5|41-70
36678|code|BLX             find_mp_by_alias|250-247-186-235
36682|code|MOV             R4, R0|4-70
36684|code|CMP             R4, #0|0-44
36686|code|BEQ             loc_903E|118-208
36688|code|LDR.W           R3, [R4,#0x164]|212-248-100-49
36692|code|CMP             R3, #0|0-43
36694|code|BEQ             loc_9052|124-208
36696|code|LDR             R2, [R3]|26-104
36698|code|CMP             R2, #0|0-42
36700|code|BLE             loc_9052|121-221
36702|code|LDR             R3, [R3,#4]|91-104
36704|code|LDR             R3, [R3]|27-104
36706|code|CMP             R3, #0|0-43
36708|code|BEQ             loc_9052|117-208
36710|code|LDR             R3, [R3,#0x10]|27-105
36712|code|CMP             R3, #0|0-43
36714|code|BEQ             loc_902A|94-208
36716|code|LDR             R2, [R3]|26-104
36718|code|CMP             R2, #0|0-42
36720|code|BLE             loc_902A|91-221
36722|code|LDR             R3, [R3,#4]|91-104
36724|code|LDR             R0, [R3]|24-104
36726|code|CMP             R0, #0|0-40
36728|code|BEQ             loc_902A|87-208
36730|code|LDR.W           R3, [R0,#0x124]|208-248-36-49
36734|code|CBZ             R3, loc_8FCC|43-179
36736|code|ADD             R1, SP, #0x50+var_30|8-169
36738|code|BLX             sysfs_get_size|250-247-18-234
36742|code|CBNZ            R0, loc_8FCC|8-187
36744|code|ADD.W           R3, R4, #0x158|4-245-172-115
36748|code|LDRD.W          R8, R9, [SP,#0x50+var_30]|221-233-8-137
36752|code|LDRD.W          R10, R11, [R3]|211-233-0-171
36756|code|CMP             R11, R9|203-69
36758|code|IT EQ|8-191
36760|code|CMPEQ           R10, R8|194-69
36762|code|BEQ             loc_9010|57-208
36764|code|LDR             R2, =(aSOldSizeIsLluN - 0x8FA8); "%s old size is %llu, new size is %llu\n"|54-74
36766|code|MOV             R3, R5|43-70
36768|code|LDR             R0, [R6]|48-104
36770|code|MOVS            R1, #3|3-33
36772|code|ADD             R2, PC; "%s old size is %llu, new size is %llu\n"|122-68
36774|code|STRD.W          R10, R11, [SP,#0x50+var_50]|205-233-0-171
36778|code|STRD.W          R8, R9, [SP,#0x50+var_48]|205-233-2-137
36782|code|BLX             dlog|250-247-40-234
36786|code|LDRD.W          R2, R3, [SP,#0x50+var_30]|221-233-8-35
36790|code|STR             R7, [SP,#0x50+var_50]|0-151
36792|code|MOV             R0, R4|32-70
36794|code|BL              sub_8E24|255-247-51-255
36798|code|CBZ             R0, loc_8FF0|184-177
36800|code|MOV.W           R12, #1|79-240-1-12
36804|code|MOV             R0, R12|96-70
36806|code|ADD             SP, SP, #0x2C ; ','|11-176
36808|code|POP.W           {R4-R11,PC}|189-232-240-143
36812|code|LDR             R2, =(aSCouldnTGetSiz - 0x8FD8); "%s: couldn't get size for sysfs. cannot"...|43-74
36814|code|MOV             R3, R5|43-70
36816|code|LDR             R0, [R6]|48-104
36818|code|MOVS            R1, #0|0-33
36820|code|ADD             R2, PC; "%s: couldn't get size for sysfs. cannot"...|122-68
36822|code|BLX             dlog|250-247-20-234
36826|code|MOV.W           R12, #1|79-240-1-12
36830|code|MOV             R0, R12|96-70
36832|code|ADD             SP, SP, #0x2C ; ','|11-176
36834|code|POP.W           {R4-R11,PC}|189-232-240-143
36838|code|LDR             R1, [SP,#0x50+var_34]|7-153
36840|code|BLX             find_mp_by_minor|250-247-60-236
36844|code|MOV             R4, R0|4-70
36846|code|B               loc_8F4C|173-231
36848|code|BLX             dm_lib_release|250-247-36-234
36852|code|MOV             R0, R7|56-70
36854|code|MOV             R1, R4|33-70
36856|code|MOVS            R2, #1|1-34
36858|code|BLX             __setup_multipath|250-247-114-235
36862|code|CMP             R0, #0|0-40
36864|code|BNE             loc_8FC0|222-209
36866|code|STR             R0, [SP,#0x50+var_3C]|5-144
36868|code|MOV             R0, R4|32-70
36870|code|BL              sub_51BC|252-247-217-248
36874|code|LDR.W           R12, [SP,#0x50+var_3C]|221-248-20-192
36878|code|B               loc_8FC4|217-231
36880|code|LDR             R2, =(aSMapIsStillThe - 0x901E); "%s: map is still the same size (%llu)\n"|27-74
36882|code|MOV             R3, R5|43-70
36884|code|STR             R0, [SP,#0x50+var_3C]|5-144
36886|code|MOVS            R1, #0|0-33
36888|code|LDR             R0, [R6]|48-104
36890|code|ADD             R2, PC; "%s: map is still the same size (%llu)\n"|122-68
36892|code|STRD.W          R10, R11, [SP,#0x50+var_50]|205-233-0-171
36896|code|BLX             dlog|250-247-238-233
36900|code|LDR.W           R12, [SP,#0x50+var_3C]|221-248-20-192
36904|code|B               loc_8FC4|204-231
36906|code|LDR             R2, =(aSCouldnTGetPat - 0x9036); "%s: couldn't get path. cannot resize\n"|22-74
36908|code|MOV             R3, R5|43-70
36910|code|LDR             R0, [R6]|48-104
36912|code|MOVS            R1, #0|0-33
36914|code|ADD             R2, PC; "%s: couldn't get path. cannot resize\n"|122-68
36916|code|BLX             dlog|250-247-228-233
36920|code|MOV.W           R12, #1|79-240-1-12
36924|code|B               loc_8FC4|194-231
36926|code|LDR             R2, =(aSInvalidMapNam_0 - 0x904A); "%s: invalid map name. cannot resize\n"|18-74
36928|code|MOV             R1, R4|33-70
36930|code|LDR             R0, [R6]|48-104
36932|code|MOV             R3, R5|43-70
36934|code|ADD             R2, PC; "%s: invalid map name. cannot resize\n"|122-68
36936|code|BLX             dlog|250-247-218-233
36940|code|MOV.W           R12, #1|79-240-1-12
36944|code|B               loc_8FC4|184-231
36946|code|LDR             R2, =(aSCouldnTGetPat_0 - 0x905E); "%s: couldn't get path group. cannot res"...|14-74
36948|code|MOV             R3, R5|43-70
36950|code|LDR             R0, [R6]|48-104
36952|code|MOVS            R1, #0|0-33
36954|code|ADD             R2, PC; "%s: couldn't get path group. cannot res"...|122-68
36956|code|BLX             dlog|250-247-208-233
36960|code|MOV.W           R12, #1|79-240-1-12
36964|code|B               loc_8FC4|174-231
36966|data|ALIGN 4|0-191
36968|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8F24|104-44-1-0
36972|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
36976|data|DCD aSResizeMapOper - 0x8F2A; "%s: resize map (operator)\n"|222-32-0-0
36980|data|DCD aDmD - 0x8F3C; "dm-%d"|68-32-0-0
36984|data|DCD aSOldSizeIsLluN - 0x8FA8; "%s old size is %llu, new size is %llu\n"|80-33-0-0
36988|data|DCD aSCouldnTGetSiz - 0x8FD8; "%s: couldn't get size for sysfs. cannot"...|200-32-0-0
36992|data|DCD aSMapIsStillThe - 0x901E; "%s: map is still the same size (%llu)\n"|178-32-0-0
36996|data|DCD aSCouldnTGetPat - 0x9036; "%s: couldn't get path. cannot resize\n"|66-32-0-0
37000|data|DCD aSInvalidMapNam_0 - 0x904A; "%s: invalid map name. cannot resize\n"|218-31-0-0
37004|data|DCD aSCouldnTGetPat_0 - 0x905E; "%s: couldn't get path group. cannot res"...|238-31-0-0
37008|code|PUSH            {R4,LR}|16-181
37010|code|MOVS            R1, #2|2-33
37012|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x909C)|8-76
37014|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|9-75
37016|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
37018|code|LDR             R2, =(aForceQueueWith - 0x90A2); "force queue_without_daemon (operator)\n"|9-74
37020|code|LDR             R3, [R4,R3]; logsink|227-88
37022|code|ADD             R2, PC; "force queue_without_daemon (operator)\n"|122-68
37024|code|LDR             R0, [R3]|24-104
37026|code|BLX             dlog|250-247-174-233
37030|code|LDR             R3, =(conf_ptr - 0x1BB8C)|7-75
37032|code|LDR             R3, [R4,R3]; conf|227-88
37034|code|LDR             R3, [R3]|27-104
37036|code|LDR             R2, [R3,#0x48]|154-108
37038|code|CBNZ            R2, loc_90B4|10-185
37040|code|MOVS            R2, #2|2-34
37042|code|STR             R2, [R3,#0x48]|154-100
37044|code|MOVS            R0, #0|0-32
37046|code|POP             {R4,PC}|16-189
37048|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x909C|240-42-1-0
37052|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37056|data|DCD aForceQueueWith - 0x90A2; "force queue_without_daemon (operator)\n"|126-32-0-0
37060|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
37064|code|PUSH            {R4,LR}|16-181
37066|code|MOVS            R1, #2|2-33
37068|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x90D4)|9-76
37070|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|10-75
37072|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
37074|code|LDR             R2, =(aRestoreQueueWi - 0x90DA); "restore queue_without_daemon (operator)"...|10-74
37076|code|LDR             R3, [R4,R3]; logsink|227-88
37078|code|ADD             R2, PC; "restore queue_without_daemon (operator)"...|122-68
37080|code|LDR             R0, [R3]|24-104
37082|code|BLX             dlog|250-247-146-233
37086|code|LDR             R3, =(conf_ptr - 0x1BB8C)|8-75
37088|code|MOVS            R0, #0|0-32
37090|code|LDR             R3, [R4,R3]; conf|227-88
37092|code|LDR             R3, [R3]|27-104
37094|code|LDR             R2, [R3,#0x48]|154-108
37096|code|CMP             R2, #2|2-42
37098|code|ITT EQ|4-191
37100|code|MOVEQ           R2, #0|0-34
37102|code|STREQ           R2, [R3,#0x48]|154-100
37104|code|POP             {R4,PC}|16-189
37106|data|ALIGN 4|0-191
37108|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x90D4|184-42-1-0
37112|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37116|data|DCD aRestoreQueueWi - 0x90DA; "restore queue_without_daemon (operator)"...|110-32-0-0
37120|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
37124|code|PUSH.W          {R4-R8,LR}|45-233-240-65
37128|code|MOV.W           R1, #0x20000|79-244-0-49
37132|code|SUB             SP, SP, #8|130-176
37134|code|MOV             R8, R3|152-70
37136|code|BL              sub_7E28|254-247-138-254
37140|code|MOVS            R1, #0|0-33
37142|code|BLX             convert_dev|250-247-84-233
37146|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x9124)|38-78
37148|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|38-76
37150|code|MOVS            R1, #2|2-33
37152|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
37154|code|LDR             R2, =(aSRestoreMapQue - 0x912A); "%s: restore map queueing (operator)\n"|38-74
37156|code|LDR             R7, [R6,R4]; logsink|55-89
37158|code|ADD             R2, PC; "%s: restore map queueing (operator)\n"|122-68
37160|code|MOV             R3, R0|3-70
37162|code|MOV             R5, R0|5-70
37164|code|LDR             R0, [R7]|56-104
37166|code|BLX             dlog|250-247-104-233
37170|code|LDR             R1, =(aDmD - 0x913C); "dm-%d"|35-73
37172|code|MOV             R0, R5|40-70
37174|code|ADD             R2, SP, #0x20+var_1C|1-170
37176|code|ADD             R1, PC; "dm-%d"|121-68
37178|code|BLX             __isoc99_sscanf|250-247-232-233
37182|code|CMP             R0, #1|1-40
37184|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
37188|code|BEQ             loc_9198|40-208
37190|code|MOV             R1, R5|41-70
37192|code|BLX             find_mp_by_alias|250-247-184-234
37196|code|MOV             R4, R0|4-70
37198|code|CBZ             R4, loc_91A2|68-179
37200|code|LDR.W           R3, [R4,#0x128]|212-248-40-49
37204|code|ADDS            R3, #1|1-51
37206|code|CMP             R3, #1|1-43
37208|code|IT LS|152-191
37210|code|MOVLS           R0, #0|0-32
37212|code|BLS             loc_9176|11-217
37214|code|LDR.W           R0, [R4,#0x16C]|212-248-108-1
37218|code|MOVS            R1, #1|1-33
37220|code|BLX             dm_queue_if_no_path|250-247-118-236
37224|code|LDR.W           R3, [R4,#0x124]|212-248-36-49
37228|code|CMP             R3, #0|0-43
37230|code|BLE             loc_917C|5-221
37232|code|MOVS            R0, #0|0-32
37234|code|STR.W           R0, [R4,#0x12C]|196-248-44-1
37238|code|ADD             SP, SP, #8|2-176
37240|code|POP.W           {R4-R8,PC}|189-232-240-129
37244|code|LDR             R2, =(conf_ptr - 0x1BB8C)|17-74
37246|code|MOVS            R0, #0|0-32
37248|code|LDR.W           R1, [R4,#0x128]|212-248-40-17
37252|code|LDR             R3, [R6,R2]; conf|179-88
37254|code|LDR             R3, [R3]|27-104
37256|code|LDR             R3, [R3,#0x20]|27-106
37258|code|MUL.W           R3, R3, R1|3-251-1-243
37262|code|STR.W           R3, [R4,#0x12C]|196-248-44-49
37266|code|ADD             SP, SP, #8|2-176
37268|code|POP.W           {R4-R8,PC}|189-232-240-129
37272|code|LDR             R1, [SP,#0x20+var_1C]|1-153
37274|code|BLX             find_mp_by_minor|250-247-100-235
37278|code|MOV             R4, R0|4-70
37280|code|B               loc_914E|213-231
37282|code|LDR             R2, =(aSInvalidMapNam_1 - 0x91AE); "%s: invalid map name, cannot restore qu"...|9-74
37284|code|MOV             R1, R4|33-70
37286|code|LDR             R0, [R7]|56-104
37288|code|MOV             R3, R5|43-70
37290|code|ADD             R2, PC; "%s: invalid map name, cannot restore qu"...|122-68
37292|code|BLX             dlog|250-247-40-233
37296|code|MOVS            R0, #1|1-32
37298|code|B               loc_9176|224-231
37300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9124|104-42-1-0
37304|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37308|data|DCD aSRestoreMapQue - 0x912A; "%s: restore map queueing (operator)\n"|74-32-0-0
37312|data|DCD aDmD - 0x913C; "dm-%d"|68-30-0-0
37316|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
37320|data|DCD aSInvalidMapNam_1 - 0x91AE; "%s: invalid map name, cannot restore qu"...|238-31-0-0
37324|code|PUSH.W          {R4-R8,LR}|45-233-240-65
37328|code|MOV             R6, R3|30-70
37330|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x91DE)|223-248-132-128
37334|code|MOVS            R1, #2|2-33
37336|code|LDR             R3, =(logsink_ptr - 0x1BB8C)|32-75
37338|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
37340|code|LDR             R2, =(aRestoreQueuein - 0x91E6); "restore queueing (operator)\n"|32-74
37342|code|LDR.W           R3, [R8,R3]; logsink|88-248-3-48
37346|code|ADD             R2, PC; "restore queueing (operator)\n"|122-68
37348|code|LDR             R0, [R3]|24-104
37350|code|BLX             dlog|250-247-12-233
37354|code|LDR             R0, [R6,#0xC]|240-104
37356|code|CBZ             R0, loc_9252|136-179
37358|code|LDR             R3, [R0]|3-104
37360|code|CMP             R3, #0|0-43
37362|code|BLE             loc_9252|46-221
37364|code|LDR             R3, [R0,#4]|67-104
37366|code|LDR             R4, [R3]|28-104
37368|code|CBZ             R4, loc_9252|92-179
37370|code|MOVS            R5, #0|0-37
37372|code|MOV             R7, R5|47-70
37374|code|B               loc_9218|11-224
37376|code|LDR             R0, [R6,#0xC]|240-104
37378|code|STR.W           R7, [R4,#0x12C]|196-248-44-113
37382|code|ADDS            R5, #1|1-53
37384|code|CBZ             R0, loc_9252|24-179
37386|code|LDR             R3, [R0]|3-104
37388|code|CMP             R3, R5|171-66
37390|code|BLE             loc_9252|32-221
37392|code|LDR             R3, [R0,#4]|67-104
37394|code|LDR.W           R4, [R3,R5,LSL#2]|83-248-37-64
37398|code|CBZ             R4, loc_9252|228-177
37400|code|LDR.W           R2, [R4,#0x128]|212-248-40-33
37404|code|MOVS            R1, #1|1-33
37406|code|ADD             R2, R1|10-68
37408|code|CMP             R2, R1|138-66
37410|code|BLS             loc_9206|240-217
37412|code|LDR.W           R0, [R4,#0x16C]|212-248-108-1
37416|code|BLX             dm_queue_if_no_path|250-247-20-236
37420|code|LDR.W           R3, [R4,#0x124]|212-248-36-49
37424|code|CMP             R3, #0|0-43
37426|code|BGT             loc_9200|229-220
37428|code|LDR             R3, =(conf_ptr - 0x1BB8C)|11-75
37430|code|ADDS            R5, #1|1-53
37432|code|LDR.W           R2, [R4,#0x128]|212-248-40-33
37436|code|LDR             R0, [R6,#0xC]|240-104
37438|code|LDR.W           R3, [R8,R3]; conf|88-248-3-48
37442|code|LDR             R3, [R3]|27-104
37444|code|LDR             R3, [R3,#0x20]|27-106
37446|code|MUL.W           R3, R3, R2|3-251-2-243
37450|code|STR.W           R3, [R4,#0x12C]|196-248-44-49
37454|code|CMP             R0, #0|0-40
37456|code|BNE             loc_920A|219-209
37458|code|MOVS            R0, #0|0-32
37460|code|POP.W           {R4-R8,PC}|189-232-240-129
37464|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x91DE|174-41-1-0
37468|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37472|data|DCD aRestoreQueuein - 0x91E6; "restore queueing (operator)\n"|230-31-0-0
37476|data|DCD conf_ptr - 0x1BB8C|176-3-0-0
37480|code|PUSH            {R4-R7,LR}|240-181
37482|code|MOV.W           R1, #0x20000|79-244-0-49
37486|code|SUB             SP, SP, #0xC|131-176
37488|code|MOV             R7, R3|31-70
37490|code|BL              sub_7E28|254-247-217-253
37494|code|MOVS            R1, #0|0-33
37496|code|BLX             convert_dev|250-247-162-232
37500|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x9286)|25-76
37502|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|26-77
37504|code|MOVS            R1, #2|2-33
37506|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
37508|code|LDR             R2, =(aSDisableMapQue - 0x928C); "%s: disable map queueing (operator)\n"|25-74
37510|code|LDR             R4, [R4,R5]; logsink|100-89
37512|code|ADD             R2, PC; "%s: disable map queueing (operator)\n"|122-68
37514|code|MOV             R3, R0|3-70
37516|code|MOV             R6, R0|6-70
37518|code|LDR             R0, [R4]|32-104
37520|code|BLX             dlog|250-247-182-232
37524|code|LDR             R1, =(aDmD - 0x929E); "dm-%d"|22-73
37526|code|MOV             R0, R6|48-70
37528|code|ADD             R2, SP, #0x20+var_1C|1-170
37530|code|ADD             R1, PC; "dm-%d"|121-68
37532|code|BLX             __isoc99_sscanf|250-247-54-233
37536|code|CMP             R0, #1|1-40
37538|code|LDR             R0, [R7,#0xC]|248-104
37540|code|BEQ             loc_92C6|15-208
37542|code|MOV             R1, R6|49-70
37544|code|BLX             find_mp_by_alias|250-247-8-234
37548|code|MOV             R1, R0|1-70
37550|code|CBZ             R1, loc_92D2|129-177
37552|code|MOVS            R4, #0|0-36
37554|code|LDR.W           R0, [R1,#0x16C]|209-248-108-1
37558|code|STR.W           R4, [R1,#0x12C]|193-248-44-65
37562|code|MOV             R1, R4|33-70
37564|code|BLX             dm_queue_if_no_path|250-247-202-235
37568|code|MOV             R0, R4|32-70
37570|code|ADD             SP, SP, #0xC|3-176
37572|code|POP             {R4-R7,PC}|240-189
37574|code|LDR             R1, [SP,#0x20+var_1C]|1-153
37576|code|BLX             find_mp_by_minor|250-247-204-234
37580|code|MOV             R1, R0|1-70
37582|code|CMP             R1, #0|0-41
37584|code|BNE             loc_92B0|238-209
37586|code|LDR             R2, =(aSInvalidMapNam_2 - 0x92DC); "%s: invalid map name, cannot disable qu"...|8-74
37588|code|MOV             R3, R6|51-70
37590|code|LDR             R0, [R4]|32-104
37592|code|ADD             R2, PC; "%s: invalid map name, cannot disable qu"...|122-68
37594|code|BLX             dlog|250-247-146-232
37598|code|MOVS            R0, #1|1-32
37600|code|ADD             SP, SP, #0xC|3-176
37602|code|POP             {R4-R7,PC}|240-189
37604|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9286|6-41-1-0
37608|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37612|data|DCD aSDisableMapQue - 0x928C; "%s: disable map queueing (operator)\n"|96-31-0-0
37616|data|DCD aDmD - 0x929E; "dm-%d"|226-28-0-0
37620|data|DCD aSInvalidMapNam_2 - 0x92DC; "%s: invalid map name, cannot disable qu"...|56-31-0-0
37624|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x9302)|21-72
37626|code|MOVS            R1, #2|2-33
37628|code|PUSH            {R4-R6,LR}|112-181
37630|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
37632|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|20-76
37634|code|MOV             R5, R3|29-70
37636|code|MOV             R3, R0|3-70
37638|code|LDR             R2, =(aDisableQueuein - 0x930E); "disable queueing (operator)\n"|20-74
37640|code|LDR             R3, [R3,R4]; logsink|27-89
37642|code|ADD             R2, PC; "disable queueing (operator)\n"|122-68
37644|code|LDR             R0, [R3]|24-104
37646|code|BLX             dlog|250-247-120-232
37650|code|LDR             R3, [R5,#0xC]|235-104
37652|code|CBZ             R3, loc_934C|211-177
37654|code|LDR             R2, [R3]|26-104
37656|code|CMP             R2, #0|0-42
37658|code|BLE             loc_934C|23-221
37660|code|LDR             R3, [R3,#4]|91-104
37662|code|LDR             R2, [R3]|26-104
37664|code|CBZ             R2, loc_934C|162-177
37666|code|MOVS            R4, #0|0-36
37668|code|MOV             R6, R4|38-70
37670|code|B               loc_9336|6-224
37672|code|LDR             R1, [R2]|17-104
37674|code|CMP             R1, R4|161-66
37676|code|BLE             loc_934C|14-221
37678|code|LDR             R2, [R2,#4]|82-104
37680|code|LDR.W           R2, [R2,R4,LSL#2]|82-248-36-32
37684|code|CBZ             R2, loc_934C|82-177
37686|code|STR.W           R6, [R2,#0x12C]|194-248-44-97
37690|code|MOVS            R1, #0|0-33
37692|code|LDR.W           R0, [R2,#0x16C]|210-248-108-1
37696|code|ADDS            R4, #1|1-52
37698|code|BLX             dm_queue_if_no_path|250-247-136-235
37702|code|LDR             R2, [R5,#0xC]|234-104
37704|code|CMP             R2, #0|0-42
37706|code|BNE             loc_9328|237-209
37708|code|MOVS            R0, #0|0-32
37710|code|POP             {R4-R6,PC}|112-189
37712|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9302|138-40-1-0
37716|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37720|data|DCD aDisableQueuein - 0x930E; "disable queueing (operator)\n"|54-31-0-0
37724|code|PUSH            {R4-R7,LR}|240-181
37726|code|MOV.W           R1, #0x20000|79-244-0-49
37730|code|SUB             SP, SP, #0xC|131-176
37732|code|MOV             R4, R0|4-70
37734|code|BL              sub_7E28|254-247-95-253
37738|code|MOV.W           R1, #0x40000|79-244-128-33
37742|code|MOV             R5, R0|5-70
37744|code|MOV             R0, R4|32-70
37746|code|BL              sub_7E28|254-247-89-253
37750|code|MOVS            R2, #0xA; base|10-34
37752|code|MOVS            R1, #0; endptr|0-33
37754|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x9386)|13-76
37756|code|BLX             strtol|250-247-134-234
37760|code|MOVS            R1, #0|0-33
37762|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
37764|code|MOV             R6, R0|6-70
37766|code|MOV             R0, R5|40-70
37768|code|BLX             convert_dev|250-247-26-232
37772|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
37774|code|LDR             R2, =(aSSwitchToPathG_0 - 0x9396); "%s: switch to path group #%i (operator)"...|10-74
37776|code|MOVS            R1, #2|2-33
37778|code|ADD             R2, PC; "%s: switch to path group #%i (operator)"...|122-68
37780|code|MOV             R7, R0|7-70
37782|code|MOV             R3, R0|3-70
37784|code|LDR             R0, [R4,R5]; logsink|96-89
37786|code|STR             R6, [SP,#0x20+var_20]|0-150
37788|code|LDR             R0, [R0]|0-104
37790|code|BLX             dlog|250-247-48-232
37794|code|MOV             R0, R7|56-70
37796|code|MOV             R1, R6|49-70
37798|code|ADD             SP, SP, #0xC|3-176
37800|code|POP.W           {R4-R7,LR}|189-232-240-64
37804|code|B.W             j_dm_switchgroup|250-247-214-186
37808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9386|6-40-1-0
37812|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37816|data|DCD aSSwitchToPathG_0 - 0x9396; "%s: switch to path group #%i (operator)"...|206-30-0-0
37820|code|PUSH            {R4-R6,LR}|112-181
37822|code|MOV             R6, R3|30-70
37824|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x93CA)|7-76
37826|code|MOVS            R1, #2|2-33
37828|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|7-77
37830|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
37832|code|LDR             R2, =(aReconfigureOpe - 0x93D0); "reconfigure (operator)\n"|7-74
37834|code|LDR             R3, [R4,R5]; logsink|99-89
37836|code|ADD             R2, PC; "reconfigure (operator)\n"|122-68
37838|code|LDR             R0, [R3]|24-104
37840|code|BLX             dlog|250-247-22-232
37844|code|MOV             R0, R6|48-70
37846|code|POP.W           {R4-R6,LR}|189-232-112-64
37850|code|B.W             sub_5AC0|252-247-113-187
37854|data|ALIGN 0x10|0-191
37856|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x93CA|194-39-1-0
37860|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37864|data|DCD aReconfigureOpe - 0x93D0; "reconfigure (operator)\n"|192-30-0-0
37868|code|PUSH.W          {R4-R8,LR}|45-233-240-65
37872|code|MOV.W           R1, #0x20000|79-244-0-49
37876|code|MOV             R8, R3|152-70
37878|code|BL              sub_7E28|254-247-23-253
37882|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|21-77
37884|code|MOV             R4, R0|4-70
37886|code|MOV             R1, R0|1-70
37888|code|MOVS            R0, #4|4-32
37890|code|BLX             dm_simplecmd_noflush|250-247-162-235
37894|code|MOVS            R1, #0|0-33
37896|code|MOV             R7, R0|7-70
37898|code|MOV             R0, R4|32-70
37900|code|BLX             convert_dev|249-247-216-239
37904|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x941A)|16-76
37906|code|LDR             R2, =(aSSuspendOperat - 0x941C); "%s: suspend (operator)\n"|17-74
37908|code|MOVS            R1, #2|2-33
37910|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
37912|code|ADD             R2, PC; "%s: suspend (operator)\n"|122-68
37914|code|MOV             R6, R0|6-70
37916|code|MOV             R3, R0|3-70
37918|code|LDR             R0, [R4,R5]; logsink|96-89
37920|code|LDR             R0, [R0]|0-104
37922|code|BLX             dlog|249-247-238-239
37926|code|CBNZ            R7, loc_942E|23-185
37928|code|MOVS            R0, #1|1-32
37930|code|POP.W           {R4-R8,PC}|189-232-240-129
37934|code|MOV             R1, R6|49-70
37936|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
37940|code|BLX             find_mp_by_alias|250-247-66-233
37944|code|MOV             R1, R0|1-70
37946|code|CMP             R0, #0|0-40
37948|code|BEQ             loc_9428|244-208
37950|code|MOV             R0, R6|48-70
37952|code|ADD.W           R1, R1, #0x168|1-245-180-113
37956|code|BLX             dm_get_info|250-247-200-232
37960|code|MOVS            R0, #0|0-32
37962|code|POP.W           {R4-R8,PC}|189-232-240-129
37966|data|ALIGN 0x10|0-191
37968|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
37972|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x941A|114-39-1-0
37976|data|DCD aSSuspendOperat - 0x941C; "%s: suspend (operator)\n"|140-30-0-0
37980|code|PUSH.W          {R4-R8,LR}|45-233-240-65
37984|code|MOV.W           R1, #0x20000|79-244-0-49
37988|code|MOV             R8, R3|152-70
37990|code|BL              sub_7E28|254-247-223-252
37994|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|21-77
37996|code|MOV             R4, R0|4-70
37998|code|MOV             R1, R0|1-70
38000|code|MOVS            R0, #5|5-32
38002|code|BLX             dm_simplecmd_noflush|250-247-106-235
38006|code|MOVS            R1, #0|0-33
38008|code|MOV             R7, R0|7-70
38010|code|MOV             R0, R4|32-70
38012|code|BLX             convert_dev|249-247-160-239
38016|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x948A)|16-76
38018|code|LDR             R2, =(aSResumeOperato - 0x948C); "%s: resume (operator)\n"|17-74
38020|code|MOVS            R1, #2|2-33
38022|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
38024|code|ADD             R2, PC; "%s: resume (operator)\n"|122-68
38026|code|MOV             R6, R0|6-70
38028|code|MOV             R3, R0|3-70
38030|code|LDR             R0, [R4,R5]; logsink|96-89
38032|code|LDR             R0, [R0]|0-104
38034|code|BLX             dlog|249-247-182-239
38038|code|CBNZ            R7, loc_949E|23-185
38040|code|MOVS            R0, #1|1-32
38042|code|POP.W           {R4-R8,PC}|189-232-240-129
38046|code|MOV             R1, R6|49-70
38048|code|LDR.W           R0, [R8,#0xC]|216-248-12-0
38052|code|BLX             find_mp_by_alias|250-247-10-233
38056|code|MOV             R1, R0|1-70
38058|code|CMP             R0, #0|0-40
38060|code|BEQ             loc_9498|244-208
38062|code|MOV             R0, R6|48-70
38064|code|ADD.W           R1, R1, #0x168|1-245-180-113
38068|code|BLX             dm_get_info|250-247-144-232
38072|code|MOVS            R0, #0|0-32
38074|code|POP.W           {R4-R8,PC}|189-232-240-129
38078|data|ALIGN 0x10|0-191
38080|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38084|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x948A|2-39-1-0
38088|data|DCD aSResumeOperato - 0x948C; "%s: resume (operator)\n"|52-30-0-0
38092|code|PUSH            {R4-R7,LR}|240-181
38094|code|MOV.W           R1, #0x10000|79-244-128-49
38098|code|SUB             SP, SP, #0xC|131-176
38100|code|MOV             R7, R3|31-70
38102|code|BL              sub_7E28|254-247-167-252
38106|code|MOVS            R1, #1|1-33
38108|code|BLX             convert_dev|249-247-112-239
38112|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x94E6)|24-77
38114|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
38116|code|MOV             R1, R0|1-70
38118|code|MOV             R6, R0|6-70
38120|code|LDR             R0, [R7,#8]|184-104
38122|code|BLX             find_path_by_dev|250-247-52-235
38126|code|MOV             R4, R0|4-70
38128|code|CBZ             R0, loc_9530|240-177
38130|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
38134|code|CBZ             R3, loc_953E|19-179
38136|code|LDR.W           R3, [R3,#0x16C]|211-248-108-49
38140|code|CBZ             R3, loc_953E|251-177
38142|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|18-72
38144|code|ADD.W           R6, R4, #0x100|4-245-128-118
38148|code|LDR             R2, =(aSReinstatePath - 0x950E); "%s: reinstate path %s (operator)\n"|17-74
38150|code|MOVS            R1, #2|2-33
38152|code|LDR             R0, [R5,R0]; logsink|40-88
38154|code|ADD             R2, PC; "%s: reinstate path %s (operator)\n"|122-68
38156|code|STR             R6, [SP,#0x20+var_20]|0-150
38158|code|LDR             R0, [R0]|0-104
38160|code|BLX             dlog|249-247-118-239
38164|code|ADDW            R0, R4, #0x474|4-242-116-64
38168|code|BLX             checker_enable|250-247-4-232
38172|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
38176|code|MOV             R1, R6|49-70
38178|code|LDR.W           R0, [R3,#0x16C]|211-248-108-1
38182|code|ADD             SP, SP, #0xC|3-176
38184|code|POP.W           {R4-R7,LR}|189-232-240-64
38188|code|B.W             sub_3A6C|250-247-158-186
38192|code|LDR             R0, [R7,#8]|184-104
38194|code|MOV             R1, R6|49-70
38196|code|BLX             find_path_by_devt|250-247-56-234
38200|code|MOV             R4, R0|4-70
38202|code|CMP             R0, #0|0-40
38204|code|BNE             loc_94F2|217-209
38206|code|MOVS            R0, #1|1-32
38208|code|ADD             SP, SP, #0xC|3-176
38210|code|POP             {R4-R7,PC}|240-189
38212|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x94E6|166-38-1-0
38216|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38220|data|DCD aSReinstatePath - 0x950E; "%s: reinstate path %s (operator)\n"|202-29-0-0
38224|code|PUSH            {R4-R6,LR}|112-181
38226|code|MOV.W           R1, #0x20000|79-244-0-49
38230|code|BL              sub_7E28|254-247-103-252
38234|code|MOVS            R1, #0|0-33
38236|code|BLX             convert_dev|249-247-48-239
38240|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x956A)|8-76
38242|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
38244|code|MOVS            R1, #3|3-33
38246|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
38248|code|LDR             R2, =(aSResetDevicesO - 0x956E); "%s: reset devices (operator)\n"|8-74
38250|code|ADD             R2, PC; "%s: reset devices (operator)\n"|122-68
38252|code|MOV             R3, R0|3-70
38254|code|MOV             R6, R0|6-70
38256|code|LDR             R0, [R4,R5]; logsink|96-89
38258|code|LDR             R0, [R0]|0-104
38260|code|BLX             dlog|249-247-68-239
38264|code|MOV             R0, R6|48-70
38266|code|BLX             dm_reassign|250-247-92-233
38270|code|MOVS            R0, #0|0-32
38272|code|POP             {R4-R6,PC}|112-189
38274|data|ALIGN 4|0-191
38276|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x956A|34-38-1-0
38280|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38284|data|DCD aSResetDevicesO - 0x956E; "%s: reset devices (operator)\n"|142-29-0-0
38288|code|PUSH            {R4-R7,LR}|240-181
38290|code|MOV.W           R1, #0x10000|79-244-128-49
38294|code|SUB             SP, SP, #0xC|131-176
38296|code|MOV             R7, R3|31-70
38298|code|BL              sub_7E28|254-247-69-252
38302|code|MOVS            R1, #1|1-33
38304|code|BLX             convert_dev|249-247-14-239
38308|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x95AA)|26-78
38310|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
38312|code|MOV             R1, R0|1-70
38314|code|MOV             R5, R0|5-70
38316|code|LDR             R0, [R7,#8]|184-104
38318|code|BLX             find_path_by_dev|250-247-210-234
38322|code|MOV             R4, R0|4-70
38324|code|CBZ             R0, loc_95EE|216-177
38326|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
38330|code|CBZ             R3, loc_95FC|251-177
38332|code|LDR.W           R3, [R3,#0x16C]|211-248-108-49
38336|code|CBZ             R3, loc_95FC|227-177
38338|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|20-72
38340|code|ADD.W           R5, R4, #0x100|4-245-128-117
38344|code|LDR             R2, =(aSFailPathSOper - 0x95D2); "%s: fail path %s (operator)\n"|19-74
38346|code|MOVS            R1, #2|2-33
38348|code|LDR             R0, [R6,R0]; logsink|48-88
38350|code|ADD             R2, PC; "%s: fail path %s (operator)\n"|122-68
38352|code|STR             R5, [SP,#0x20+var_20]|0-149
38354|code|LDR             R0, [R0]|0-104
38356|code|BLX             dlog|249-247-20-239
38360|code|LDR.W           R3, [R4,#0x5B8]|212-248-184-53
38364|code|MOV             R1, R5|41-70
38366|code|LDR.W           R0, [R3,#0x16C]|211-248-108-1
38370|code|BLX             dm_fail_path|250-247-134-233
38374|code|MOV             R5, R0|5-70
38376|code|CBZ             R5, loc_9602|93-177
38378|code|ADD             SP, SP, #0xC|3-176
38380|code|POP             {R4-R7,PC}|240-189
38382|code|LDR             R0, [R7,#8]|184-104
38384|code|MOV             R1, R5|41-70
38386|code|BLX             find_path_by_devt|250-247-218-233
38390|code|MOV             R4, R0|4-70
38392|code|CMP             R0, #0|0-40
38394|code|BNE             loc_95B6|220-209
38396|code|MOVS            R0, #1|1-32
38398|code|ADD             SP, SP, #0xC|3-176
38400|code|POP             {R4-R7,PC}|240-189
38402|code|ADDW            R0, R4, #0x474|4-242-116-64
38406|code|BLX             checker_disable|249-247-244-239
38410|code|MOV             R0, R5|40-70
38412|code|ADD             SP, SP, #0xC|3-176
38414|code|POP             {R4-R7,PC}|240-189
38416|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x95AA|226-37-1-0
38420|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38424|data|DCD aSFailPathSOper - 0x95D2; "%s: fail path %s (operator)\n"|74-29-0-0
38428|code|PUSH.W          {R4-R8,LR}|45-233-240-65
38432|code|MOV             R8, R0|128-70
38434|code|MOVW            R0, #0x44C|64-242-76-64
38438|code|MOV             R7, R1|15-70
38440|code|BLX             zalloc|250-247-166-234
38444|code|MOV             R6, R0|6-70
38446|code|CBZ             R0, loc_966A|224-177
38448|code|MOVW            R5, #0x44C|64-242-76-69
38452|code|MOV             R0, R6|48-70
38454|code|MOV             R1, R5|41-70
38456|code|BLX             snprint_blacklist_report|249-247-224-239
38460|code|CMP             R0, R5|168-66
38462|code|MOV             R4, R0|4-70
38464|code|BEQ             loc_9650|6-208
38466|code|STR.W           R6, [R8]|200-248-0-96
38470|code|ADDS            R4, #1|1-52
38472|code|MOVS            R0, #0|0-32
38474|code|STR             R4, [R7]|60-96
38476|code|POP.W           {R4-R8,PC}|189-232-240-129
38480|code|LSLS            R5, R5, #1|109-0
38482|code|MOV             R0, R6; ptr|48-70
38484|code|MOV             R1, R5; size|41-70
38486|code|BLX             realloc|250-247-8-235
38490|code|MOVS            R1, #0; c|0-33
38492|code|MOV             R2, R4; n|34-70
38494|code|MOV             R6, R0|6-70
38496|code|CBZ             R0, loc_966A|24-177
38498|code|ADD             R0, R4; s|32-68
38500|code|BLX             memset|249-247-172-239
38504|code|B               loc_9634|228-231
38506|code|MOVS            R0, #1|1-32
38508|code|POP.W           {R4-R8,PC}|189-232-240-129
38512|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9678)|9-75
38514|code|PUSH            {R4-R6,LR}|112-181
38516|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38518|code|LDR             R4, =(logsink_ptr - 0x1BB8C)|9-76
38520|code|MOV             R5, R2|21-70
38522|code|LDR             R2, =(aListBlacklistO - 0x9686); "list blacklist (operator)\n"|9-74
38524|code|MOV             R6, R1|14-70
38526|code|MOVS            R1, #3|3-33
38528|code|LDR             R3, [R3,R4]; logsink|27-89
38530|code|ADD             R2, PC; "list blacklist (operator)\n"|122-68
38532|code|LDR             R0, [R3]|24-104
38534|code|BLX             dlog|249-247-188-238
38538|code|MOV             R0, R6|48-70
38540|code|MOV             R1, R5|41-70
38542|code|POP.W           {R4-R6,LR}|189-232-112-64
38546|code|B.W             sub_961C|255-247-195-191
38550|data|ALIGN 4|0-191
38552|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9678|20-37-1-0
38556|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38560|data|DCD aListBlacklistO - 0x9686; "list blacklist (operator)\n"|182-28-0-0
38564|code|PUSH.W          {R3-R9,LR}|45-233-248-67
38568|code|MOV             R9, R0|129-70
38570|code|MOVW            R0, #0x44C|64-242-76-64
38574|code|MOV             R8, R1|136-70
38576|code|MOV             R7, R2|23-70
38578|code|BLX             zalloc|250-247-98-234
38582|code|MOV             R6, R0|6-70
38584|code|CBZ             R0, loc_96F8|240-177
38586|code|MOVW            R5, #0x44C|64-242-76-69
38590|code|MOV             R0, R6|48-70
38592|code|MOV             R1, R5|41-70
38594|code|MOV             R2, R7|58-70
38596|code|BLX             snprint_devices|249-247-204-238
38600|code|CMP             R0, R5|168-66
38602|code|MOV             R4, R0|4-70
38604|code|BEQ             loc_96DE|7-208
38606|code|STR.W           R6, [R9]|201-248-0-96
38610|code|ADDS            R4, #1|1-52
38612|code|MOVS            R0, #0|0-32
38614|code|STR.W           R4, [R8]|200-248-0-64
38618|code|POP.W           {R3-R9,PC}|189-232-248-131
38622|code|LSLS            R5, R5, #1|109-0
38624|code|MOV             R0, R6; ptr|48-70
38626|code|MOV             R1, R5; size|41-70
38628|code|BLX             realloc|250-247-192-234
38632|code|MOVS            R1, #0; c|0-33
38634|code|MOV             R2, R4; n|34-70
38636|code|MOV             R6, R0|6-70
38638|code|CBZ             R0, loc_96F8|24-177
38640|code|ADD             R0, R4; s|32-68
38642|code|BLX             memset|249-247-102-239
38646|code|B               loc_96BE|226-231
38648|code|MOVS            R0, #1|1-32
38650|code|POP.W           {R3-R9,PC}|189-232-248-131
38654|data|ALIGN 0x10|0-191
38656|code|PUSH.W          {R4-R8,LR}|45-233-240-65
38660|code|MOV             R6, R3|30-70
38662|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x9712)|9-76
38664|code|MOV             R7, R2|23-70
38666|code|LDR             R5, =(logsink_ptr - 0x1BB8C)|9-77
38668|code|MOV             R8, R1|136-70
38670|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
38672|code|LDR             R2, =(aListDevicesOpe - 0x971A); "list devices (operator)\n"|8-74
38674|code|MOVS            R1, #3|3-33
38676|code|LDR             R3, [R4,R5]; logsink|99-89
38678|code|ADD             R2, PC; "list devices (operator)\n"|122-68
38680|code|LDR             R0, [R3]|24-104
38682|code|BLX             dlog|249-247-114-238
38686|code|MOV             R0, R8|64-70
38688|code|MOV             R1, R7|57-70
38690|code|MOV             R2, R6|50-70
38692|code|POP.W           {R4-R8,LR}|189-232-240-65
38696|code|B.W             sub_96A4|255-247-188-191
38700|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9712|122-36-1-0
38704|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38708|data|DCD aListDevicesOpe - 0x971A; "list devices (operator)\n"|62-28-0-0
38712|code|MOVS            R0, #0|0-32
38714|code|BX              LR|112-71
38716|code|PUSH            {R3,LR}|8-181
38718|code|MOVS            R1, #3|3-33
38720|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9748)|6-75
38722|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|7-72
38724|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
38726|code|LDR             R2, =(aShutdownOperat - 0x974E); "shutdown (operator)\n"|7-74
38728|code|LDR             R3, [R3,R0]; logsink|27-88
38730|code|ADD             R2, PC; "shutdown (operator)\n"|122-68
38732|code|LDR             R0, [R3]|24-104
38734|code|BLX             dlog|249-247-88-238
38738|code|BL              sub_564C|251-247-123-255
38742|code|MOVS            R0, #0|0-32
38744|code|POP             {R3,PC}|8-189
38746|data|ALIGN 4|0-191
38748|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9748|68-36-1-0
38752|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38756|data|DCD aShutdownOperat - 0x974E; "shutdown (operator)\n"|38-28-0-0
38760|code|PUSH.W          {R4-R9,LR}|45-233-240-67
38764|code|MOV             R7, R1|15-70
38766|code|SUB             SP, SP, #0xC|131-176
38768|code|MOV.W           R1, #0x20000|79-244-0-49
38772|code|MOV             R4, R3|28-70
38774|code|MOV             R8, R2|144-70
38776|code|BL              sub_7E28|254-247-86-251
38780|code|MOVS            R1, #0|0-33
38782|code|BLX             convert_dev|249-247-32-238
38786|code|MOVS            R1, #0|0-33
38788|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0x978C)|223-248-124-144
38792|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
38794|code|MOV             R5, R0|5-70
38796|code|LDR             R0, [R4,#8]|160-104
38798|code|BLX             get_path_layout|250-247-130-233
38802|code|LDR             R0, [R4,#0xC]|224-104
38804|code|MOV             R1, R5|41-70
38806|code|BLX             find_mp_by_str|250-247-170-234
38810|code|MOV             R6, R0|6-70
38812|code|MOVS            R0, #1|1-32
38814|code|CBZ             R6, loc_97FE|118-179
38816|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|25-72
38818|code|MOV             R3, R5|43-70
38820|code|LDRB.W          LR, [R6,#0x1A8]|150-248-168-225
38824|code|MOVS            R1, #3|3-33
38826|code|LDR             R2, =(aSPrflagU - 0x97B6); "%s: prflag = %u\n"|24-74
38828|code|MOVS            R4, #0|0-36
38830|code|LDR.W           R9, [R9,R0]; logsink|89-248-0-144
38834|code|ADD             R2, PC; "%s: prflag = %u\n"|122-68
38836|code|STR.W           LR, [SP,#0x28+var_28]|205-248-0-224
38840|code|LDR.W           R0, [R9]|217-248-0-0
38844|code|BLX             dlog|249-247-32-238
38848|code|MOVS            R0, #2; size|2-32
38850|code|BLX             malloc|250-247-98-233
38854|code|MOVS            R2, #2|2-34
38856|code|LDR             R3, =(aD - 0x97D0); "%d"|17-75
38858|code|MOVS            R1, #1|1-33
38860|code|ADD             R3, PC; "%d"|123-68
38862|code|STR             R0, [R7]|56-96
38864|code|STRH            R4, [R0]|4-128
38866|code|STR.W           R2, [R8]|200-248-0-32
38870|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
38874|code|LDRB.W          R6, [R6,#0x1A8]|150-248-168-97
38878|code|STR             R6, [SP,#0x28+var_28]|0-150
38880|code|BLX             __sprintf_chk|250-247-48-234
38884|code|LDR             R0, [R7]|56-104
38886|code|MOV             R3, R5|43-70
38888|code|LDR             R2, =(aSReplyS - 0x97F2); "%s: reply = %s\n"|10-74
38890|code|MOVS            R1, #3|3-33
38892|code|STRB            R4, [R0,#1]|68-112
38894|code|ADD             R2, PC; "%s: reply = %s\n"|122-68
38896|code|LDR             R5, [R7]|61-104
38898|code|LDR.W           R0, [R9]|217-248-0-0
38902|code|STR             R5, [SP,#0x28+var_28]|0-149
38904|code|BLX             dlog|249-247-2-238
38908|code|MOV             R0, R4|32-70
38910|code|ADD             SP, SP, #0xC|3-176
38912|code|POP.W           {R4-R9,PC}|189-232-240-131
38916|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x978C|0-36-1-0
38920|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
38924|data|DCD aSPrflagU - 0x97B6; "%s: prflag = %u\n"|214-27-0-0
38928|data|DCD aD - 0x97D0; "%d"|208-27-0-0
38932|data|DCD aSReplyS - 0x97F2; "%s: reply = %s\n"|178-27-0-0
38936|code|PUSH            {R4-R6,LR}|112-181
38938|code|MOV.W           R1, #0x20000|79-244-0-49
38942|code|MOV             R4, R3|28-70
38944|code|BL              sub_7E28|254-247-2-251
38948|code|MOVS            R1, #0|0-33
38950|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x9832)|18-77
38952|code|BLX             convert_dev|249-247-202-237
38956|code|MOVS            R1, #0|0-33
38958|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
38960|code|MOV             R6, R0|6-70
38962|code|LDR             R0, [R4,#8]|160-104
38964|code|BLX             get_path_layout|250-247-46-233
38968|code|LDR             R0, [R4,#0xC]|224-104
38970|code|MOV             R1, R6|49-70
38972|code|BLX             find_mp_by_str|250-247-86-234
38976|code|MOV             R2, R0|2-70
38978|code|CBZ             R0, loc_986A|144-177
38980|code|LDRB.W          R4, [R0,#0x1A8]|144-248-168-65
38984|code|CBZ             R4, loc_984E|12-177
38986|code|MOVS            R0, #0|0-32
38988|code|POP             {R4-R6,PC}|112-189
38990|code|LDR             R0, =(logsink_ptr - 0x1BB8C)|9-72
38992|code|MOVS            R3, #1|1-35
38994|code|STRB.W          R3, [R2,#0x1A8]|130-248-168-49
38998|code|MOVS            R1, #2|2-33
39000|code|LDR             R2, =(aSPrflagSet - 0x9862); "%s: prflag set\n"|7-74
39002|code|MOV             R3, R6|51-70
39004|code|LDR             R0, [R5,R0]; logsink|40-88
39006|code|ADD             R2, PC; "%s: prflag set\n"|122-68
39008|code|LDR             R0, [R0]|0-104
39010|code|BLX             dlog|249-247-206-237
39014|code|MOV             R0, R4|32-70
39016|code|POP             {R4-R6,PC}|112-189
39018|code|MOVS            R0, #1|1-32
39020|code|POP             {R4-R6,PC}|112-189
39022|data|ALIGN 0x10|0-191
39024|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9832|90-35-1-0
39028|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
39032|data|DCD aSPrflagSet - 0x9862; "%s: prflag set\n"|82-27-0-0
39036|code|PUSH            {R3-R7,LR}|248-181
39038|code|MOV.W           R1, #0x20000|79-244-0-49
39042|code|MOV             R4, R3|28-70
39044|code|BL              sub_7E28|254-247-208-250
39048|code|MOVS            R1, #0|0-33
39050|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x9896)|17-77
39052|code|BLX             convert_dev|249-247-152-237
39056|code|MOVS            R1, #0|0-33
39058|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
39060|code|MOV             R6, R0|6-70
39062|code|LDR             R0, [R4,#8]|160-104
39064|code|BLX             get_path_layout|250-247-252-232
39068|code|LDR             R0, [R4,#0xC]|224-104
39070|code|MOV             R1, R6|49-70
39072|code|BLX             find_mp_by_str|250-247-36-234
39076|code|CBZ             R0, loc_98CC|144-177
39078|code|LDRB.W          R2, [R0,#0x1A8]|144-248-168-33
39082|code|CBNZ            R2, loc_98B0|10-185
39084|code|MOV             R0, R2|16-70
39086|code|POP             {R3-R7,PC}|248-189
39088|code|LDR             R7, =(logsink_ptr - 0x1BB8C)|8-79
39090|code|MOVS            R4, #0|0-36
39092|code|STRB.W          R4, [R0,#0x1A8]|128-248-168-65
39096|code|MOV             R3, R6|51-70
39098|code|LDR             R2, =(aSPrflagUnset - 0x98C4); "%s: prflag unset\n"|7-74
39100|code|MOVS            R1, #2|2-33
39102|code|LDR             R0, [R5,R7]; logsink|232-89
39104|code|ADD             R2, PC; "%s: prflag unset\n"|122-68
39106|code|LDR             R0, [R0]|0-104
39108|code|BLX             dlog|249-247-156-237
39112|code|MOV             R0, R4|32-70
39114|code|POP             {R3-R7,PC}|248-189
39116|code|MOVS            R0, #1|1-32
39118|code|POP             {R3-R7,PC}|248-189
39120|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9896|246-34-1-0
39124|data|DCD logsink_ptr - 0x1BB8C|24-4-0-0
39128|data|DCD aSPrflagUnset - 0x98C4; "%s: prflag unset\n"|0-27-0-0
39132|code|PUSH.W          {R3-R9,LR}|45-233-248-67
39136|code|MOV             R7, R0|7-70
39138|code|LDR             R6, =(off_1BA44 - 0x98EE)|12-78
39140|code|MOV             R8, R1|136-70
39142|code|LDR             R5, =(off_1BA40 - 0x98F4)|12-77
39144|code|MOV             R9, R2|145-70
39146|code|ADD             R6, PC; off_1BA44|126-68
39148|code|BLX             .init_proc|249-247-64-237
39152|code|ADD             R5, PC; off_1BA40|125-68
39154|code|SUBS            R6, R6, R5|118-27
39156|code|ASRS            R6, R6, #2|182-16
39158|code|BEQ             locret_990E|10-208
39160|code|SUBS            R5, #4|4-61
39162|code|MOVS            R4, #0|0-36
39164|code|ADDS            R4, #1|1-52
39166|code|LDR.W           R3, [R5,#4]!|85-248-4-63
39170|code|MOV             R0, R7|56-70
39172|code|MOV             R1, R8|65-70
39174|code|MOV             R2, R9|74-70
39176|code|BLX             R3|152-71
39178|code|CMP             R4, R6|180-66
39180|code|BNE             loc_98FC|246-209
39182|code|POP.W           {R3-R9,PC}|189-232-248-131
39186|data|ALIGN 4|0-191
39188|data|DCD off_1BA44 - 0x98EE|86-33-1-0
39192|data|DCD off_1BA40 - 0x98F4|76-33-1-0
39196|code|BX              LR|112-71
39198|data|ALIGN 0x10|0-191
39200|code|PUSH            {R3,LR}; _fini|8-64-45-233
39204|code|POP             {R3,PC}|8-128-189-232
47004|data|ALIGN 0x10|0-0-0-0
113216|data|DCD sub_4958+1|89-73-0-0
113220|data|DCD sub_4918+1|25-73-0-0
113224|data|DCD 0|0-0-0-0
113228|data|Elf32_Dyn <1, <1>>; DT_NEEDED libpthread.so.0|1-0-0-0-1-0-0-0
113236|data|Elf32_Dyn <1, <0x192>>; DT_NEEDED libdevmapper.so.1.02.1|1-0-0-0-146-1-0-0
113244|data|Elf32_Dyn <1, <0x1D3>>; DT_NEEDED libreadline.so.6|1-0-0-0-211-1-0-0
113252|data|Elf32_Dyn <1, <0x23C>>; DT_NEEDED libudev.so.1|1-0-0-0-60-2-0-0
113260|data|Elf32_Dyn <1, <0x2A6>>; DT_NEEDED libdl.so.2|1-0-0-0-166-2-0-0
113268|data|Elf32_Dyn <1, <0x2B1>>; DT_NEEDED libmultipath.so.0|1-0-0-0-177-2-0-0
113276|data|Elf32_Dyn <1, <0x9BD>>; DT_NEEDED libmpathpersist.so.0|1-0-0-0-189-9-0-0
113284|data|Elf32_Dyn <1, <0xA3C>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-60-10-0-0
113292|data|Elf32_Dyn <1, <0xA9C>>; DT_NEEDED libc.so.6|1-0-0-0-156-10-0-0
113300|data|Elf32_Dyn <1, <0xCAD>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-173-12-0-0
113308|data|Elf32_Dyn <0xC, <0x3370>>; DT_INIT|12-0-0-0-112-51-0-0
113316|data|Elf32_Dyn <0xD, <0x9920>>; DT_FINI|13-0-0-0-32-153-0-0
113324|data|Elf32_Dyn <0x19, <0x1BA40>>; DT_INIT_ARRAY|25-0-0-0-64-186-1-0
113332|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
113340|data|Elf32_Dyn <0x1A, <0x1BA44>>; DT_FINI_ARRAY|26-0-0-0-68-186-1-0
113348|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
113356|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
113364|data|Elf32_Dyn <5, <0x16C0>>; DT_STRTAB|5-0-0-0-192-22-0-0
113372|data|Elf32_Dyn <6, <0x420>>; DT_SYMTAB|6-0-0-0-32-4-0-0
113380|data|Elf32_Dyn <0xA, <0x1081>>; DT_STRSZ|10-0-0-0-129-16-0-0
113388|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
113396|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
113404|data|Elf32_Dyn <3, <0x1BB8C>>; DT_PLTGOT|3-0-0-0-140-187-1-0
113412|data|Elf32_Dyn <2, <0x698>>; DT_PLTRELSZ|2-0-0-0-152-6-0-0
113420|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
113428|data|Elf32_Dyn <0x17, <0x2CD8>>; DT_JMPREL|23-0-0-0-216-44-0-0
113436|data|Elf32_Dyn <0x11, <0x2A88>>; DT_REL|17-0-0-0-136-42-0-0
113444|data|Elf32_Dyn <0x12, <0x250>>; DT_RELSZ|18-0-0-0-80-2-0-0
113452|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
113460|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
113468|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
113476|data|Elf32_Dyn <0x6FFFFFFE, <0x2998>>; DT_VERNEED|254-255-255-111-152-41-0-0
113484|data|Elf32_Dyn <0x6FFFFFFF, <6>>; DT_VERNEEDNUM|255-255-255-111-6-0-0-0
113492|data|Elf32_Dyn <0x6FFFFFF0, <0x2742>>; DT_VERSYM|240-255-255-111-66-39-0-0
113500|data|Elf32_Dyn <0x6FFFFFFA, <0x3A>>; DT_RELCOUNT|250-255-255-111-58-0-0-0
113508|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
113516|data|ALIGN 0x10|0-0-0-0
113548|data|DCD stru_1BA4C|76-186-1-0
113552|data|DCD 0|0-0-0-0
113556|data|DCD dword_0|0-0-0-0
113560|data|DCD __imp_free_config|140-192-1-0
113564|data|DCD __imp_open|144-192-1-0
113568|data|DCD __imp_sysfs_get_size|148-192-1-0
113572|data|DCD __imp_remember_wwid|152-192-1-0
113576|data|DCD __imp_convert_dev|156-192-1-0
113580|data|DCD __imp_ux_socket_listen|160-192-1-0
113584|data|DCD __imp_sigemptyset|164-192-1-0
113588|data|DCD __imp_strerror|168-192-1-0
113592|data|DCD __imp_orphan_path|172-192-1-0
113596|data|DCD __imp_dlog|176-192-1-0
113600|data|DCD __imp_filter_devnode|180-192-1-0
113604|data|DCD __imp_abort|184-192-1-0
113608|data|DCD __imp___gcc_personality_v0|188-192-1-0
113612|data|DCD __imp_store_pathinfo|192-192-1-0
113616|data|DCD __imp_dm_lib_release|196-192-1-0
113620|data|DCD __imp_dm_drv_version|200-192-1-0
113624|data|DCD __imp_memcmp|204-192-1-0
113628|data|DCD __imp_snprint_devices|208-192-1-0
113632|data|DCD __imp_pthread_attr_setdetachstate|212-192-1-0
113636|data|DCD __imp_pthread_exit|216-192-1-0
113640|data|DCD __imp___xstat|220-192-1-0
113644|data|DCD __imp___libc_start_main|224-192-1-0
113648|data|DCD __imp_free_path|228-192-1-0
113652|data|DCD __imp_dm_enablegroup|236-192-1-0
113656|data|DCD __imp_xfree|240-192-1-0
113660|data|DCD __imp_signal|244-192-1-0
113664|data|DCD __imp_uevent_listen|248-192-1-0
113668|data|DCD __imp___gmon_start__|8-196-1-0
113672|data|DCD __imp_cleanup_lock|252-192-1-0
113676|data|DCD __imp_tzset|0-193-1-0
113680|data|DCD __imp_snprint_hwtable|4-193-1-0
113684|data|DCD __imp___isoc99_sscanf|8-193-1-0
113688|data|DCD __imp_snprint_path_header|12-193-1-0
113692|data|DCD __imp_checker_enable|16-193-1-0
113696|data|DCD __imp_strncpy|20-193-1-0
113700|data|DCD __imp_fclose|24-193-1-0
113704|data|DCD __imp_getenv|28-193-1-0
113708|data|DCD __imp___printf_chk|32-193-1-0
113712|data|DCD __imp_strchr|36-193-1-0
113716|data|DCD __imp_setrlimit|40-193-1-0
113720|data|DCD __imp_setlogmask|44-193-1-0
113724|data|DCD __imp_snprint_blacklist_except|48-193-1-0
113728|data|DCD __imp_sem_init|52-193-1-0
113732|data|DCD __imp_log_thread_stop|56-193-1-0
113736|data|DCD __imp_fopen|60-193-1-0
113740|data|DCD __imp_sched_setscheduler|64-193-1-0
113744|data|DCD __imp_memset|68-193-1-0
113748|data|DCD __imp_alloc_config|72-193-1-0
113752|data|DCD __imp_dm_get_info|76-193-1-0
113756|data|DCD __imp_setsid|80-193-1-0
113760|data|DCD __imp_checker_disable|84-193-1-0
113764|data|DCD __imp_snprint_blacklist_report|88-193-1-0
113768|data|DCD __imp_start_waiter_thread|92-193-1-0
113772|data|DCD __imp_path_discovery|96-193-1-0
113776|data|DCD __imp_uevent_get_disk_ro|100-193-1-0
113780|data|DCD __imp_free_pathvec|104-193-1-0
113784|data|DCD __imp_udev_device_ref|108-193-1-0
113788|data|DCD __imp_ppoll|112-193-1-0
113792|data|DCD __imp_uevent_get_minor|116-193-1-0
113796|data|DCD __imp_dm_get_maps|120-193-1-0
113800|data|DCD __imp_update_mpp_paths|124-193-1-0
113804|data|DCD __imp__exit|128-193-1-0
113808|data|DCD __imp_udev_new|132-193-1-0
113812|data|DCD __imp_getuid|136-193-1-0
113816|data|DCD __imp_filter_wwid|140-193-1-0
113820|data|DCD __imp_remove_map_and_stop_waiter|144-193-1-0
113824|data|DCD __imp_free|152-193-1-0
113828|data|DCD __imp_find_mp_by_alias|156-193-1-0
113832|data|DCD __imp_write|160-193-1-0
113836|data|DCD __imp_udev_set_sync_support|164-193-1-0
113840|data|DCD __imp___setup_multipath|168-193-1-0
113844|data|DCD __imp_update_queue_mode_add_path|172-193-1-0
113848|data|DCD __imp_find_slot|176-193-1-0
113852|data|DCD __imp_log_reset|180-193-1-0
113856|data|DCD __imp_gettimeofday|184-193-1-0
113860|data|DCD __imp_init_checkers|188-193-1-0
113864|data|DCD __imp_dm_type|192-193-1-0
113868|data|DCD __imp_accept|196-193-1-0
113872|data|DCD __imp_mpath_alloc_prin_response|200-193-1-0
113876|data|DCD __imp_domap|204-193-1-0
113880|data|DCD __imp_checker_message|208-193-1-0
113884|data|DCD __imp_orphan_paths|212-193-1-0
113888|data|DCD __imp_pthread_mutex_unlock|216-193-1-0
113892|data|DCD __imp_dm_init|220-193-1-0
113896|data|DCD __imp_umask|224-193-1-0
113900|data|DCD __imp_log_thread_start|228-193-1-0
113904|data|DCD __imp_remove_maps|232-193-1-0
113908|data|DCD __imp_dm_lib_exit|236-193-1-0
113912|data|DCD __imp_send_packet|240-193-1-0
113916|data|DCD __imp_isatty|244-193-1-0
113920|data|DCD __imp_dm_get_minor|248-193-1-0
113924|data|DCD __imp_pthread_mutex_lock|0-194-1-0
113928|data|DCD __imp_snprint_blacklist|4-194-1-0
113932|data|DCD __imp_strlen|8-194-1-0
113936|data|DCD __imp_cleanup_prio|12-194-1-0
113940|data|DCD __imp_unlink|20-194-1-0
113944|data|DCD __imp_getopt|24-194-1-0
113948|data|DCD __imp_pthread_create|28-194-1-0
113952|data|DCD __imp_dm_reassign|32-194-1-0
113956|data|DCD __imp_pathinfo|36-194-1-0
113960|data|DCD __imp_vector_alloc_slot|40-194-1-0
113964|data|DCD __imp_prin_do_scsi_ioctl|44-194-1-0
113968|data|DCD __imp_find_mp_by_minor|48-194-1-0
113972|data|DCD __imp_vector_free|52-194-1-0
113976|data|DCD __imp_udev_device_unref|56-194-1-0
113980|data|DCD __imp_strtol|60-194-1-0
113984|data|DCD __imp_sigaddset|64-194-1-0
113988|data|DCD __imp_add_map_without_path|68-194-1-0
113992|data|DCD __imp_sem_post|72-194-1-0
113996|data|DCD __imp_snprint_multipath_topology|76-194-1-0
114000|data|DCD __imp_pthread_sigmask|80-194-1-0
114004|data|DCD __imp_pthread_mutex_destroy|84-194-1-0
114008|data|DCD __imp_update_map_pr|88-194-1-0
114012|data|DCD __imp_dm_fail_path|92-194-1-0
114016|data|DCD __imp_dm_mapname|100-194-1-0
114020|data|DCD __imp_verify_paths|104-194-1-0
114024|data|DCD __imp_setup_map|108-194-1-0
114028|data|DCD __imp_recv_packet|112-194-1-0
114032|data|DCD __imp_snprint_status|116-194-1-0
114036|data|DCD __imp_mlockall|120-194-1-0
114040|data|DCD __imp_checker_clear_message|124-194-1-0
114044|data|DCD __imp_select_path_group|128-194-1-0
114048|data|DCD __imp_dm_switchgroup|132-194-1-0
114052|data|DCD __imp_setup_thread_attr|136-194-1-0
114056|data|DCD __imp_snprint_wildcards|140-194-1-0
114060|data|DCD __imp___snprintf_chk|144-194-1-0
114064|data|DCD __imp_pthread_mutex_init|148-194-1-0
114068|data|DCD __imp_vector_alloc|152-194-1-0
114072|data|DCD __imp_find_path_by_devt|156-194-1-0
114076|data|DCD __imp_strstr|160-194-1-0
114080|data|DCD __imp_udev_unref|164-194-1-0
114084|data|DCD __imp_uevent_get_major|168-194-1-0
114088|data|DCD __imp_path_offline|172-194-1-0
114092|data|DCD __imp_close|176-194-1-0
114096|data|DCD __imp_update_multipath|180-194-1-0
114100|data|DCD __imp_prout_do_scsi_ioctl|184-194-1-0
114104|data|DCD __imp__dm_flush_map|188-194-1-0
114108|data|DCD __imp_fwrite|192-194-1-0
114112|data|DCD __imp_update_queue_mode_del_path|196-194-1-0
114116|data|DCD __imp_udev_device_new_from_subsystem_sysname|200-194-1-0
114120|data|DCD __imp_cleanup_checkers|204-194-1-0
114124|data|DCD __imp_reload_map|208-194-1-0
114128|data|DCD __imp_dm_queue_if_no_path|212-194-1-0
114132|data|DCD __imp___ctype_b_loc|216-194-1-0
114136|data|DCD __imp_dm_reinstate_path|220-194-1-0
114140|data|DCD __imp_readline|224-194-1-0
114144|data|DCD __imp_malloc|228-194-1-0
114148|data|DCD __imp_get_path_layout|232-194-1-0
114152|data|DCD __imp_remove_map|236-194-1-0
114156|data|DCD __imp___stack_chk_fail|240-194-1-0
114160|data|DCD __imp_sigaction|244-194-1-0
114164|data|DCD __imp_sigdelset|248-194-1-0
114168|data|DCD __imp_chdir|252-194-1-0
114172|data|DCD __imp___fprintf_chk|0-195-1-0
114176|data|DCD __imp_pthread_attr_init|4-195-1-0
114180|data|DCD __imp_alloc_strvec|8-195-1-0
114184|data|DCD __imp_dm_map_present|12-195-1-0
114188|data|DCD __imp_vector_del_slot|16-195-1-0
114192|data|DCD __imp_ftruncate|24-195-1-0
114196|data|DCD __imp_snprint_defaults|28-195-1-0
114200|data|DCD __imp_sleep|32-195-1-0
114204|data|DCD __imp_dm_get_major|36-195-1-0
114208|data|DCD __imp_dm_simplecmd_noflush|40-195-1-0
114212|data|DCD __imp_find_path_by_dev|44-195-1-0
114216|data|DCD __imp_pthread_testcancel|52-195-1-0
114220|data|DCD __imp_init_prio|56-195-1-0
114224|data|DCD __imp_zalloc|60-195-1-0
114228|data|DCD __imp_snprint_path|64-195-1-0
114232|data|DCD __imp_ux_socket_connect|68-195-1-0
114236|data|DCD __imp_puts|72-195-1-0
114240|data|DCD __imp_filter_path|76-195-1-0
114244|data|DCD __imp_getpid|84-195-1-0
114248|data|DCD __imp_uevent_get_dm_name|88-195-1-0
114252|data|DCD __imp_get_state|92-195-1-0
114256|data|DCD __imp_snprint_mptable|96-195-1-0
114260|data|DCD __imp_remove_maps_and_stop_waiters|100-195-1-0
114264|data|DCD __imp_free_strvec|108-195-1-0
114268|data|DCD __imp_fcntl|112-195-1-0
114272|data|DCD __imp_dup|116-195-1-0
114276|data|DCD __imp_fork|120-195-1-0
114280|data|DCD __imp_pthread_attr_destroy|124-195-1-0
114284|data|DCD __imp_snprint_multipath|132-195-1-0
114288|data|DCD __imp_snprintf|140-195-1-0
114292|data|DCD __imp___sprintf_chk|144-195-1-0
114296|data|DCD __imp_strncmp|148-195-1-0
114300|data|DCD __imp_get_refwwid|152-195-1-0
114304|data|DCD __imp_realloc|156-195-1-0
114308|data|DCD __imp_add_history|160-195-1-0
114312|data|DCD __imp_getrlimit|164-195-1-0
114316|data|DCD __imp__IO_putc|168-195-1-0
114320|data|DCD __imp___strdup|172-195-1-0
114324|data|DCD __imp__Unwind_Resume|176-195-1-0
114328|data|DCD __imp_sem_wait|184-195-1-0
114332|data|DCD __imp_coalesce_paths|188-195-1-0
114336|data|DCD __imp_snprint_multipath_header|192-195-1-0
114340|data|DCD __imp_get_multipath_layout|196-195-1-0
114344|data|DCD __imp_uevent_dispatch|200-195-1-0
114348|data|DCD __imp_find_mp_by_str|204-195-1-0
114352|data|DCD __imp_vector_set_slot|208-195-1-0
114356|data|DCD __imp_strcmp|212-195-1-0
114360|data|DCD __imp_update_multipath_strings|216-195-1-0
114364|data|DCD __imp_exit|220-195-1-0
114368|data|DCD __imp_dumpHex|224-195-1-0
114372|data|DCD __imp___errno_location|228-195-1-0
114376|data|DCD __imp_pthread_cancel|232-195-1-0
114380|data|DCD __imp_adopt_paths|236-195-1-0
114384|data|DCD __imp___cxa_finalize|244-195-1-0
114388|data|DCD __imp_pthread_join|248-195-1-0
114392|data|DCD __imp_load_config|252-195-1-0
114396|data|DCD __imp_add_map_with_path|0-196-1-0
114400|data|DCD __imp_find_mp_by_wwid|4-196-1-0
114404|data|DCD cli_list_config+1|81-133-0-0
114408|data|DCD cli_list_maps_fmt+1|61-136-0-0
114412|data|DCD cli_list_maps_status+1|249-136-0-0
114416|data|DCD gvecs|88-192-1-0
114420|data|DCD cli_force_no_daemon_q+1|145-144-0-0
114424|data|DCD __libc_csu_fini+1|29-153-0-0
114428|data|DCD cli_list_status+1|193-136-0-0
114432|data|DCD cli_list_paths_fmt+1|197-133-0-0
114436|data|DCD uxsock_trigger+1|213-73-0-0
114440|data|DCD log_reset_sig|52-192-1-0
114444|data|DCD __imp___gmon_start__|8-196-1-0
114448|data|DCD _Jv_RegisterClasses|12-196-1-0
114452|data|DCD cli_del_map+1|161-140-0-0
114456|data|DCD cli_restore_no_daemon_q+1|201-144-0-0
114460|data|DCD cli_getprstatus+1|105-151-0-0
114464|data|DCD mpath_pr_event_handler_fn+1|189-75-0-0
114468|data|DCD cli_resume+1|93-148-0-0
114472|data|DCD _ITM_deregisterTMCloneTable|16-196-1-0
114476|data|DCD cli_fail+1|145-149-0-0
114480|data|DCD cli_reinstate+1|205-148-0-0
114484|data|DCD cli_list_paths+1|133-133-0-0
114488|data|DCD optind|148-193-1-0
114492|data|DCD conf|96-192-1-0
114496|data|DCD _ITM_registerTMCloneTable|20-196-1-0
114500|data|DCD cli_list_wildcards+1|169-134-0-0
114504|data|DCD cli_resize+1|5-143-0-0
114508|data|DCD cli_list_maps+1|129-136-0-0
114512|data|DCD cli_del_path+1|233-138-0-0
114516|data|DCD cli_reconfigure+1|189-147-0-0
114520|data|DCD rl_completion_entry_function|252-193-1-0
114524|data|DCD cli_quit+1|57-151-0-0
114528|data|DCD waiter_attr|16-194-1-0
114532|data|DCD running_state|100-192-1-0
114536|data|DCD cli_list_maps_stats+1|57-137-0-0
114540|data|DCD __libc_csu_init+1|221-152-0-0
114544|data|DCD cli_suspend+1|237-147-0-0
114548|data|DCD __stack_chk_guard|96-194-1-0
114552|data|DCD cli_list_maps_topology+1|113-134-0-0
114556|data|DCD cli_add_path+1|173-137-0-0
114560|data|DCD cli_list_devices+1|1-151-0-0
114564|data|DCD sleep_time|12-192-1-0
114568|data|DCD cli_disable_queueing+1|105-146-0-0
114572|data|DCD reconfig_sig|56-192-1-0
114576|data|DCD cli_reload+1|157-141-0-0
114580|data|DCD cli_reassign+1|81-149-0-0
114584|data|DCD cli_add_map+1|77-139-0-0
114588|data|DCD udev|116-192-1-0
114592|data|DCD logq_lock|20-195-1-0
114596|data|DCD logsink|120-192-1-0
114600|data|DCD group_by_prio|48-195-1-0
114604|data|DCD cli_restore_all_queueing+1|205-145-0-0
114608|data|DCD stdout|80-195-1-0
114612|data|DCD rl_readline_name|104-195-1-0
114616|data|DCD cli_list_daemon+1|121-137-0-0
114620|data|DCD stderr|128-195-1-0
114624|data|DCD cli_unsetprstatus+1|125-152-0-0
114628|data|DCD key_generator+1|105-128-0-0
114632|data|DCD optarg|136-195-1-0
114636|data|DCD cli_shutdown+1|61-151-0-0
114640|data|DCD cli_list_blacklist+1|113-150-0-0
114644|data|DCD cli_setprstatus+1|25-152-0-0
114648|data|DCD daemon_pid|128-192-1-0
114652|data|DCD cli_restore_queueing+1|5-145-0-0
114656|data|DCD uev_trigger+1|141-95-0-0
114660|data|DCD cli_disable_all_queueing+1|249-146-0-0
114664|data|DCD cli_switch_group+1|93-147-0-0
114668|data|DCD polls|132-192-1-0
114672|data|DCD rl_line_buffer|240-195-1-0
114676|data|DCD __imp___cxa_finalize|244-195-1-0
114680|data|DCD cli_list_map_topology+1|9-134-0-0
114684|data|DCD main+1|149-61-0-0
114712|data|% 1|255
114713|data|ALIGN 4|255-255-255
114732|data|% 4|255-255-255-255
114736|data|% 4|255-255-255-255
114740|data|% 4|255-255-255-255
114744|data|% 4|255-255-255-255
114748|data|% 4|255-255-255-255
114752|data|% 4|255-255-255-255
114756|data|% 4|255-255-255-255
114760|data|% 4|255-255-255-255
114764|data|% 4|255-255-255-255
114768|data|% 4|255-255-255-255
114772|data|ALIGN 8|255-255-255-255
114776|data|% 4|255-255-255-255
114780|data|ALIGN 0x10|255-255-255-255
114784|data|% 4|255-255-255-255
114788|data|% 4|255-255-255-255
114804|data|% 4|255-255-255-255
114808|data|% 4|255-255-255-255
114816|data|% 4|255-255-255-255
