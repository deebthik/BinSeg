address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 3; OS/ABI: GNU/Linux|3
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|97-37-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x8574; SHT file offset|116-133-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 8; Number of entries in PHT|8-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1C; Number of entries in SHT|28-0
65586|data|DCW 0x1B; SHT entry index for string table|27-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x7E38; File offset|56-126-0-0
65596|data|DCD unk_17E38; Virtual address|56-126-1-0
65600|data|DCD 0x17E38; Physical address|56-126-1-0
65604|data|DCD 0x2D0; Size in file image|208-2-0-0
65608|data|DCD 0x2D0; Size in memory image|208-2-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x100; Size in file image|0-1-0-0
65640|data|DCD 0x100; Size in memory image|0-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x134; File offset|52-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|52-1-1-0
65664|data|DCD 0x10134; Physical address|52-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x810C; Size in file image|12-129-0-0
65704|data|DCD 0x810C; Size in memory image|12-129-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x810C; File offset|12-129-0-0
65724|data|DCD off_2810C; Virtual address|12-129-2-0
65728|data|DCD 0x2810C; Physical address|12-129-2-0
65732|data|DCD 0x334; Size in file image|52-3-0-0
65736|data|DCD 0x3B8; Size in memory image|184-3-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x8118; File offset|24-129-0-0
65756|data|DCD stru_28118; Virtual address|24-129-2-0
65760|data|DCD 0x28118; Physical address|24-129-2-0
65764|data|DCD 0x110; Size in file image|16-1-0-0
65768|data|DCD 0x110; Size in memory image|16-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x150; File offset|80-1-0-0
65788|data|DCD dword_10150; Virtual address|80-1-1-0
65792|data|DCD 0x10150; Physical address|80-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65869|data|DCB 0, 0, 0|0-0-0
65872|data|DCD 4; Name Size|4-0-0-0
65876|data|DCD 0x10; Desc Size|16-0-0-0
65880|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65884|data|DCB "GNU",0; Name|71-78-85-0
65888|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x14; Desc Size|20-0-0-0
65912|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCB 0x1C, 0xA1, 0x11, 0x76, 0x64, 0x66, 0xFE, 0x7C, 0xCC; Desc|28-161-17-118-100-102-254-124-204-159-146-157-60-125-195-143-38-230-32-139
65940|data|DCD 0x61|97-0-0-0
65944|data|DCD 7|7-0-0-0
65948|data|DCD 0x20|32-0-0-0
65952|data|DCD 0xA|10-0-0-0
65956|data|DCD 0x4000001, 0xB1F4001, 0x408140, 0x15680000, 0x50B00282|1-0-0-4-1-64-31-11-64-129-64-0-0-0-104-21-130-2-176-80-32-0-64-0-0-0-0-0-1-75-32-138-128-68-64-16-42-8-68-100-10-32-11-0-192-0-172-171-64-178-69-96-40-1-0-9-1-161-40-17-77-196-16-69-8-1-64-100-136-117-8-146-112-0-2-72-32-0-8-0-128-3-36-32-0-37-76-152-32-4-0-18-0-176-148-128-187-9-83-72-67-64-8-24-10-0-0-9-4-0-43-33-192-97-6-97-192-23-0-137-41-152-0-8-82-4-48-0
66084|data|DCD 7, 0, 0, 0, 0, 0, 9, 0xA, 0xB, 0xC, 0xE, 0x10, 0x13|7-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-9-0-0-0-10-0-0-0-11-0-0-0-12-0-0-0-14-0-0-0-16-0-0-0-19-0-0-0-0-0-0-0-20-0-0-0-22-0-0-0-23-0-0-0-26-0-0-0-27-0-0-0-28-0-0-0-0-0-0-0-29-0-0-0-30-0-0-0-32-0-0-0-35-0-0-0-0-0-0-0-0-0-0-0-37-0-0-0-0-0-0-0-40-0-0-0-42-0-0-0-46-0-0-0-48-0-0-0-49-0-0-0-52-0-0-0-53-0-0-0-0-0-0-0-56-0-0-0-60-0-0-0-62-0-0-0-63-0-0-0-0-0-0-0-64-0-0-0-66-0-0-0-67-0-0-0-69-0-0-0-70-0-0-0-72-0-0-0-74-0-0-0-75-0-0-0-78-0-0-0-79-0-0-0-82-0-0-0-86-0-0-0-87-0-0-0-88-0-0-0-0-0-0-0-0-0-0-0-90-0-0-0-0-0-0-0-92-0-0-0-94-0-0-0-95-0-0-0-0-0-0-0-96-0-0-0-97-0-0-0-98-0-0-0-0-0-0-0-99-0-0-0-0-0-0-0-102-0-0-0-0-0-0-0-105-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-106-0-0-0-0-0-0-0-107-0-0-0-109-0-0-0-111-0-0-0-114-0-0-0-117-0-0-0-120-0-0-0-121-0-0-0-122-0-0-0-0-0-0-0-124-0-0-0-127-0-0-0-0-0-0-0-130-0-0-0-131-0-0-0-0-0-0-0-0-0-0-0-134-0-0-0-0-0-0-0
66472|data|DCD 0x10A8B550, 0x1C93965F, 0xFD40322D, 0xBE582CF9, 0xF6EFB9F|80-181-168-16-95-150-147-28-45-50-64-253-249-44-88-190-159-251-110-15-102-73-111-139-51-133-253-246-140-89-64-241-233-252-72-62-204-63-12-175-202-150-147-28-119-84-60-148-143-35-24-175-100-206-138-34-55-21-21-101-47-78-61-246-0-175-52-232-122-232-86-142-245-155-186-39-57-72-210-48-119-205-79-73-169-51-178-7-63-249-255-188-194-131-179-8-57-64-12-175-62-126-150-124-178-182-12-144-31-246-92-16-196-111-73-62-225-153-210-186-254-236-132-20-248-84-135-182-1-35-249-164-124-139-115-15-157-187-147-28-66-69-213-236-124-237-17-15-120-73-107-182-149-120-158-124-90-154-59-15-187-149-147-28-171-170-215-125-246-82-233-14-64-77-157-124-137-158-104-142-121-139-135-255-60-7-212-5-254-185-132-244-11-113-87-163-88-239-151-121-134-35-182-177-206-77-118-211-23-234-118-254-56-242-139-28-115-71-156-124-71-88-55-15-235-56-131-212-234-211-239-14-185-141-241-14-23-83-10-206-146-86-31-244-185-43-107-21-125-96-156-124-28-89-222-224-39-111-228-24-164-216-90-182-237-222-147-28-237-222-147-28-116-205-189-154-232-128-34-203-217-113-88-28-125-76-92-116-38-34-21-79-178-162-247-18-169-21-102-172-140-71-226-41-128-36-216-62-188-238-144-202-27-159-214-189-191-39-21-54-187-227-146-124-102-101-184-73-149-92-126-195-134-75-133-230-1-147-36-195-16-123-156-124-81-146-8-249-221-102-17-245-201-129-10-210-57-196-251-102-3-34-169-230-33-192-188-155-58-13-133-179-64-143-29-253-33-207-9-253-48-184-130-13-126-93-217-48-157-99-189-197-191-218-87-27-145-25-230-224-228-7-147-44-137-118-43-199-204-85-233-14-11-15-181-165-4-67-237-8-34-186-173-214-207-175-184-84-134-240-150-124-6-185-106-110-73-60-172-234-234-61-157-124-46-42-135-35-135-49-17-246-53-236-184-119-137-61-185-84-244-97-14-236-145-117-130-13-236-254-100-172-112-87-50-29-1-104-5-166-226-153-148-124-46-3-49-28-61-173-57-13-251-13-37-215-242-190-71-62-50-196-247-18-167-155-147-28-147-121-19-79
66984|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
67000|data|Elf32_Sym <aJvRegisterclas - byte_10E18, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|31-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67016|data|Elf32_Sym <aAeabiUnwindCpp_0 - byte_10E18, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr1"|196-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67032|data|Elf32_Sym <aItmDeregistert - byte_10E18, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|51-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67048|data|Elf32_Sym <aAeabiUnwindCpp - byte_10E18, 0, 0, 0x12, 0, 0>; "__aeabi_unwind_cpp_pr0"|173-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67064|data|Elf32_Sym <aGmonStart - byte_10E18, 0, 0, 0x20, 0, 0>; "__gmon_start__"|16-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67080|data|Elf32_Sym <aItmRegistertmc - byte_10E18, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|79-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
67096|data|Elf32_Sym <aFwrite+1 - byte_10E18, 0, 0, 0x12, 0, 0>; "write"|34-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67112|data|Elf32_Sym <aStrcmp - byte_10E18, 0, 0, 0x12, 0, 0>; "strcmp"|105-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67128|data|Elf32_Sym <aFflush - byte_10E18, 0, 0, 0x12, 0, 0>; "fflush"|13-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67144|data|Elf32_Sym <aSnprintf - byte_10E18, 0, 0, 0x12, 0, 0>; "snprintf"|137-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67160|data|Elf32_Sym <aFgets - byte_10E18, 0, 0, 0x12, 0, 0>; "fgets"|165-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67176|data|Elf32_Sym <aPthreadMutexat_0 - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutexattr_settype"|2-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67192|data|Elf32_Sym <aZnss6appendejc - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs6appendEjc"|83-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67208|data|Elf32_Sym <aZnss4Rep20SEmp - byte_10E18, __bss_start, 0x10, 0x11, 0, \; "_ZNSs4_Rep20_S_empty_rep_storageE"|49-2-0-0-64-132-2-0-16-0-0-0-17-0-25-0
67224|data|Elf32_Sym <aRegexec - byte_10E18, 0, 0, 0x12, 0, 0>; "regexec"|70-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67240|data|Elf32_Sym <aStrncmp - byte_10E18, 0, 0, 0x12, 0, 0>; "strncmp"|55-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67256|data|Elf32_Sym <aStrcpy - byte_10E18, 0, 0, 0x12, 0, 0>; "strcpy"|20-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67272|data|Elf32_Sym <aBssStart_0 - byte_10E18, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start__"|171-7-0-0-64-132-2-0-0-0-0-0-16-0-25-0
67288|data|Elf32_Sym <aGnutlsTranspor - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_transport_set_ptr"|26-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67304|data|Elf32_Sym <aGnutlsGlobalIn - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_global_init"|215-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67320|data|Elf32_Sym <aGetsockname - byte_10E18, 0, 0, 0x12, 0, 0>; "getsockname"|78-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67336|data|Elf32_Sym <aLibcStartMain - byte_10E18, 0, 0, 0x12, 0, 0>; "__libc_start_main"|112-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67352|data|Elf32_Sym <aBssEnd+1 - byte_10E18, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|186-7-0-0-196-132-2-0-0-0-0-0-16-0-25-0
67368|data|Elf32_Sym <aPthreadAttrIni - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_attr_init"|18-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67384|data|Elf32_Sym <aGnutlsInit - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_init"|203-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67400|data|Elf32_Sym <aGethostbyaddr - byte_10E18, 0, 0, 0x12, 0, 0>; "gethostbyaddr"|202-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67416|data|Elf32_Sym <aCxaEndCatch - byte_10E18, 0, 0, 0x12, 0, 0>; "__cxa_end_catch"|106-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67432|data|Elf32_Sym <aPthreadMutexDe - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutex_destroy"|208-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67448|data|Elf32_Sym <aFprintf - byte_10E18, 0, 0, 0x12, 0, 0>; "fprintf"|70-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67464|data|Elf32_Sym <aPthreadMutexat_1 - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutexattr_destroy"|28-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67480|data|Elf32_Sym <aStrncpy - byte_10E18, 0, 0, 0x12, 0, 0>; "strncpy"|100-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67496|data|Elf32_Sym <aExit - byte_10E18, 0, 0, 0x12, 0, 0>; "exit"|36-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67512|data|Elf32_Sym <aStrftime - byte_10E18, 0, 0, 0x12, 0, 0>; "strftime"|142-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67528|data|Elf32_Sym <aNanosleep+4 - byte_10E18, 0, 0, 0x12, 0, 0>; "sleep"|112-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67544|data|Elf32_Sym <aRegfree - byte_10E18, 0, 0, 0x12, 0, 0>; "regfree"|113-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67560|data|Elf32_Sym <aPthreadCreate - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_create"|105-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67576|data|Elf32_Sym <aPerror - byte_10E18, 0, 0, 0x12, 0, 0>; "perror"|83-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67592|data|Elf32_Sym <aGnutlsAnonFree - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_anon_free_client_credentials"|94-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67608|data|Elf32_Sym <aErrnoLocation - byte_10E18, 0, 0, 0x12, 0, 0>; "__errno_location"|83-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67624|data|Elf32_Sym <aFopen - byte_10E18, 0, 0, 0x12, 0, 0>; "fopen"|49-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67640|data|Elf32_Sym <aStrlen - byte_10E18, 0, 0, 0x12, 0, 0>; "strlen"|171-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67656|data|Elf32_Sym <aEdata - byte_10E18, __bss_start, 0, 0x10, 0, 0x18>; "_edata"|152-7-0-0-64-132-2-0-0-0-0-0-16-0-24-0
67672|data|Elf32_Sym <aAbort - byte_10E18, 0, 0, 0x12, 0, 0>; "abort"|129-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67688|data|Elf32_Sym <aGxxPersonality - byte_10E18, 0, 0, 0x12, 0, 0>; "__gxx_personality_v0"|171-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67704|data|Elf32_Sym <aStrftime+4 - byte_10E18, 0, 0, 0x12, 0, 0>; "time"|146-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67720|data|Elf32_Sym <aFclose+1 - byte_10E18, 0, 0, 0x12, 0, 0>; "close"|224-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67736|data|Elf32_Sym <aStrchr - byte_10E18, 0, 0, 0x12, 0, 0>; "strchr"|63-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67752|data|Elf32_Sym <aPthreadMutexUn - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutex_unlock"|36-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67768|data|Elf32_Sym <aZnaj - byte_10E18, 0, 0, 0x12, 0, 0>; "_Znaj"|201-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67784|data|Elf32_Sym <aRead - byte_10E18, 0, 0, 0x12, 0, 0>; "read"|230-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67800|data|Elf32_Sym <aCxaRethrow - byte_10E18, 0, 0, 0x12, 0, 0>; "__cxa_rethrow"|59-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67816|data|Elf32_Sym <aGetopt - byte_10E18, 0, 0, 0x12, 0, 0>; "getopt"|190-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67832|data|Elf32_Sym <aPthreadJoin - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_join"|141-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67848|data|Elf32_Sym <aGnutlsDeinit - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_deinit"|170-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67864|data|Elf32_Sym <aNanosleep - byte_10E18, 0, 0, 0x12, 0, 0>; "nanosleep"|108-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67880|data|Elf32_Sym <aEnd - byte_10E18, _end, 0, 0x10, 0, 0x19>; "__end__"|197-7-0-0-196-132-2-0-0-0-0-0-16-0-25-0
67896|data|Elf32_Sym <aInetNtoa - byte_10E18, 0, 0, 0x12, 0, 0>; "inet_ntoa"|90-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67912|data|Elf32_Sym <aConnect - byte_10E18, 0, 0, 0x12, 0, 0>; "connect"|100-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67928|data|Elf32_Sym <aFwrite - byte_10E18, 0, 0, 0x12, 0, 0>; "fwrite"|33-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67944|data|Elf32_Sym <aStderr - byte_10E18, stderr, 4, 0x11, 0, 0x19>; "stderr"|12-7-0-0-136-132-2-0-4-0-0-0-17-0-25-0
67960|data|Elf32_Sym <aPipe - byte_10E18, 0, 0, 0x12, 0, 0>; "pipe"|78-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67976|data|Elf32_Sym <aSigaction - byte_10E18, 0, 0, 0x12, 0, 0>; "sigaction"|8-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67992|data|Elf32_Sym <aZnssc1epkcrksa - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSsC1EPKcRKSaIcE"|5-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68008|data|Elf32_Sym <aFini - byte_10E18, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|146-7-0-0-188-111-1-0-0-0-0-0-18-0-14-0
68024|data|Elf32_Sym <aGnutlsGlobalIn+0xD - byte_10E18, .init_proc, 0, 0x12, 0, \; "_init"|228-4-0-0-160-27-1-0-0-0-0-0-18-0-11-0
68040|data|Elf32_Sym <aZnss12MLeakHar - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs12_M_leak_hardEv"|245-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68056|data|Elf32_Sym <aGnutlsSetDefau - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_set_default_priority"|91-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68072|data|Elf32_Sym <aFprintf+1 - byte_10E18, 0, 0, 0x12, 0, 0>; "printf"|71-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68088|data|Elf32_Sym <aPoll - byte_10E18, 0, 0, 0x12, 0, 0>; "poll"|197-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68104|data|Elf32_Sym <aGnutlsAnonAllo - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_anon_allocate_client_credentials"|51-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68120|data|Elf32_Sym <aRandom - byte_10E18, 0, 0, 0x12, 0, 0>; "random"|130-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68136|data|Elf32_Sym <aZst17ThrowBadA - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZSt17__throw_bad_allocv"|24-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68152|data|Elf32_Sym <aStrtok - byte_10E18, 0, 0, 0x12, 0, 0>; "strtok"|151-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68168|data|Elf32_Sym <aStrtol - byte_10E18, 0, 0, 0x12, 0, 0>; "strtol"|158-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68184|data|Elf32_Sym <aAeabiUidivmod - byte_10E18, 0, 0, 0x12, 0, 0>; "__aeabi_uidivmod"|235-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68200|data|Elf32_Sym <aZnss4Rep10MDes - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs4_Rep10_M_destroyERKSaIcE"|140-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68216|data|Elf32_Sym <aBssStart - byte_10E18, __bss_start, 0, 0x10, 0, 0x19>; "__bss_start"|159-7-0-0-64-132-2-0-0-0-0-0-16-0-25-0
68232|data|Elf32_Sym <aPthreadAttrSet_0 - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_attr_setdetachstate"|118-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68248|data|Elf32_Sym <aPthreadMutexLo - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutex_lock"|167-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68264|data|Elf32_Sym <aOptarg - byte_10E18, optarg, 4, 0x11, 0, 0x19>; "optarg"|5-7-0-0-132-132-2-0-4-0-0-0-17-0-25-0
68280|data|Elf32_Sym <aZnss6appenderk - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs6appendERKSs"|230-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68296|data|Elf32_Sym <aPthreadMutexat - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutexattr_init"|235-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68312|data|Elf32_Sym <aZst20ThrowLeng - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZSt20__throw_length_errorPKc"|29-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68328|data|Elf32_Sym <aPutchar - byte_10E18, 0, 0, 0x12, 0, 0>; "putchar"|121-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68344|data|Elf32_Sym <aMemmove - byte_10E18, 0, 0, 0x12, 0, 0>; "memmove"|97-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68360|data|Elf32_Sym <aLocaltime - byte_10E18, 0, 0, 0x12, 0, 0>; "localtime"|53-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68376|data|Elf32_Sym <aEnd_0 - byte_10E18, _end, 0, 0x10, 0, 0x19>; "_end"|205-7-0-0-196-132-2-0-0-0-0-0-16-0-25-0
68392|data|Elf32_Sym <aPthreadKeyCrea - byte_10E18, 0, 0, 0x22, 0, 0>; "__pthread_key_create"|120-0-0-0-0-0-0-0-0-0-0-0-34-0-0-0
68408|data|Elf32_Sym <aZnss6assignerk - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs6assignERKSs"|11-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68424|data|Elf32_Sym <aGettimeofday - byte_10E18, 0, 0, 0x12, 0, 0>; "gettimeofday"|40-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68440|data|Elf32_Sym <aGnutlsBye - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_bye"|119-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68456|data|Elf32_Sym <aPuts - byte_10E18, 0, 0, 0x12, 0, 0>; "puts"|108-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68472|data|Elf32_Sym <aZstplicst11cha_0 - byte_10E18, \; "_ZStplIcSt11char_traitsIcESaIcEESbIT_T0"... ...|148-1-0-0-197-107-1-0-52-0-0-0-34-0-13-0
68488|data|Elf32_Sym <aCxaEndCleanup - byte_10E18, 0, 0, 0x12, 0, 0>; "__cxa_end_cleanup"|130-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68504|data|Elf32_Sym <aZtvn10Cxxabiv1_0 - byte_10E18, \; "_ZTVN10__cxxabiv117__class_type_infoE" ...|192-2-0-0-88-132-2-0-44-0-0-0-17-0-25-0
68520|data|Elf32_Sym <aGmtimeR - byte_10E18, 0, 0, 0x12, 0, 0>; "gmtime_r"|27-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68536|data|Elf32_Sym <aPthreadAttrSet - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_attr_setstacksize"|57-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68552|data|Elf32_Sym <aAeabiIdivmod - byte_10E18, 0, 0, 0x12, 0, 0>; "__aeabi_idivmod"|219-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68568|data|Elf32_Sym <aStrcasecmp - byte_10E18, 0, 0, 0x12, 0, 0>; "strcasecmp"|242-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68584|data|Elf32_Sym <aFdopen - byte_10E18, 0, 0, 0x12, 0, 0>; "fdopen"|90-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68600|data|Elf32_Sym <aFclose - byte_10E18, 0, 0, 0x12, 0, 0>; "fclose"|223-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68616|data|Elf32_Sym <aMemset - byte_10E18, 0, 0, 0x12, 0, 0>; "memset"|178-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68632|data|Elf32_Sym <aGethostbyname - byte_10E18, 0, 0, 0x12, 0, 0>; "gethostbyname"|19-7-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68648|data|Elf32_Sym <aZtvn10Cxxabiv1 - byte_10E18, \; "_ZTVN10__cxxabiv120__si_class_type_info"... ...|73-1-0-0-144-132-2-0-44-0-0-0-17-0-25-0
68664|data|Elf32_Sym <aBssEnd - byte_10E18, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|185-7-0-0-196-132-2-0-0-0-0-0-16-0-25-0
68680|data|Elf32_Sym <aPthreadAttrDes - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_attr_destroy"|146-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68696|data|Elf32_Sym <aGnutlsCheckVer - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_check_version"|5-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68712|data|Elf32_Sym <aGnutlsHandshak - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_handshake"|130-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68728|data|Elf32_Sym <aZnwj - byte_10E18, 0, 0, 0x12, 0, 0>; "_Znwj"|154-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68744|data|Elf32_Sym <aSprintf - byte_10E18, 0, 0, 0x12, 0, 0>; "sprintf"|41-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68760|data|Elf32_Sym <aCxaBeginCatch - byte_10E18, 0, 0, 0x12, 0, 0>; "__cxa_begin_catch"|243-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68776|data|Elf32_Sym <aZnss6appendepk - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs6appendEPKc"|160-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68792|data|Elf32_Sym <aGnutlsRecordRe - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_record_recv"|184-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68808|data|Elf32_Sym <aRegfree+3 - byte_10E18, 0, 0, 0x12, 0, 0>; "free"|116-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68824|data|Elf32_Sym <aZstplicst11cha - byte_10E18, \; "_ZStplIcSt11char_traitsIcESaIcEESbIT_T0"... ...|177-0-0-0-53-108-1-0-92-0-0-0-34-0-13-0
68840|data|Elf32_Sym <aGnutlsPriority - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_priority_set_direct"|234-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68856|data|Elf32_Sym <aRand - byte_10E18, 0, 0, 0x12, 0, 0>; "rand"|230-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68872|data|Elf32_Sym <aZnssc1erkss - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSsC1ERKSs"|232-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68888|data|Elf32_Sym <aPthreadMutexTr - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutex_trylock"|186-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68904|data|Elf32_Sym <aZnss7reserveej - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs7reserveEj"|114-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68920|data|Elf32_Sym <aGnutlsRecordSe - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_record_send"|130-5-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68936|data|Elf32_Sym <aZdlpv - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZdlPv"|99-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68952|data|Elf32_Sym <aMemcpy - byte_10E18, 0, 0, 0x12, 0, 0>; "memcpy"|216-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68968|data|Elf32_Sym <aZnss6appendepk_0 - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs6appendEPKcj"|122-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
68984|data|Elf32_Sym <aZnss6assignepk - byte_10E18, 0, 0, 0x12, 0, 0>; "_ZNSs6assignEPKc"|226-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69000|data|Elf32_Sym <aCxaPureVirtual - byte_10E18, __cxa_pure_virtual, 0, 0x12, \; "__cxa_pure_virtual"|207-1-0-0-192-32-1-0-0-0-0-0-18-0-0-0
69016|data|Elf32_Sym <aBind - byte_10E18, 0, 0, 0x12, 0, 0>; "bind"|185-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69032|data|Elf32_Sym <aSocket - byte_10E18, 0, 0, 0x12, 0, 0>; "socket"|6-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69048|data|Elf32_Sym <aMalloc - byte_10E18, 0, 0, 0x12, 0, 0>; "malloc"|235-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69064|data|Elf32_Sym <aGnutlsCredenti - byte_10E18, 0, 0, 0x12, 0, 0>; "gnutls_credentials_set"|147-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69080|data|Elf32_Sym <aRegcomp - byte_10E18, 0, 0, 0x12, 0, 0>; "regcomp"|253-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69096|data|Elf32_Sym <aOptind - byte_10E18, optind, 4, 0x11, 0, 0x19>; "optind"|63-6-0-0-80-132-2-0-4-0-0-0-17-0-25-0
69112|data|Elf32_Sym <aStrdup - byte_10E18, 0, 0, 0x12, 0, 0>; "strdup"|135-6-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69128|data|Elf32_Sym <aPthreadMutexIn - byte_10E18, 0, 0, 0x12, 0, 0>; "pthread_mutex_init"|54-4-0-0-0-0-0-0-0-0-0-0-18-0-0-0
69144|data|DCB 0|0
69145|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
69160|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
69175|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
69195|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
69223|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
69249|data|DCB "pthread_create",0|112-116-104-114-101-97-100-95-99-114-101-97-116-101-0
69264|data|DCB "__pthread_key_create",0|95-95-112-116-104-114-101-97-100-95-107-101-121-95-99-114-101-97-116-101-0
69285|data|DCB "pthread_join",0|112-116-104-114-101-97-100-95-106-111-105-110-0
69298|data|DCB "_Znwj",0|95-90-110-119-106-0
69304|data|DCB "_ZNSs6appendEPKc",0|95-90-78-83-115-54-97-112-112-101-110-100-69-80-75-99-0
69321|data|DCB "_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_",0|95-90-83-116-112-108-73-99-83-116-49-49-99-104-97-114-95-116-114-97-105-116-115-73-99-69-83-97-73-99-69-69-83-98-73-84-95-84-48-95-84-49-95-69-80-75-83-51-95-82-75-83-54-95-0
69376|data|DCB "_ZNSsC1ERKSs",0|95-90-78-83-115-67-49-69-82-75-83-115-0
69389|data|DCB "_ZNSs12_M_leak_hardEv",0|95-90-78-83-115-49-50-95-77-95-108-101-97-107-95-104-97-114-100-69-118-0
69411|data|DCB "_ZNSs6assignERKSs",0|95-90-78-83-115-54-97-115-115-105-103-110-69-82-75-83-115-0
69429|data|DCB "_ZSt20__throw_length_errorPKc",0|95-90-83-116-50-48-95-95-116-104-114-111-119-95-108-101-110-103-116-104-95-101-114-114-111-114-80-75-99-0
69459|data|DCB "__cxa_rethrow",0|95-95-99-120-97-95-114-101-116-104-114-111-119-0
69473|data|DCB "_ZTVN10__cxxabiv120__si_class_type_infoE",0|95-90-84-86-78-49-48-95-95-99-120-120-97-98-105-118-49-50-48-95-95-115-105-95-99-108-97-115-115-95-116-121-112-101-95-105-110-102-111-69-0
69514|data|DCB "_ZNSs7reserveEj",0|95-90-78-83-115-55-114-101-115-101-114-118-101-69-106-0
69530|data|DCB "__cxa_end_cleanup",0|95-95-99-120-97-95-101-110-100-95-99-108-101-97-110-117-112-0
69548|data|DCB "_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_",0|95-90-83-116-112-108-73-99-83-116-49-49-99-104-97-114-95-116-114-97-105-116-115-73-99-69-83-97-73-99-69-69-83-98-73-84-95-84-48-95-84-49-95-69-82-75-83-54-95-83-56-95-0
69601|data|DCB "_Znaj",0|95-90-110-97-106-0
69607|data|DCB "__cxa_pure_virtual",0|95-95-99-120-97-95-112-117-114-101-95-118-105-114-116-117-97-108-0
69626|data|DCB "_ZNSs6assignEPKc",0|95-90-78-83-115-54-97-115-115-105-103-110-69-80-75-99-0
69643|data|DCB "__cxa_begin_catch",0|95-95-99-120-97-95-98-101-103-105-110-95-99-97-116-99-104-0
69661|data|DCB "_ZNSsC1EPKcRKSaIcE",0|95-90-78-83-115-67-49-69-80-75-99-82-75-83-97-73-99-69-0
69680|data|DCB "_ZSt17__throw_bad_allocv",0|95-90-83-116-49-55-95-95-116-104-114-111-119-95-98-97-100-95-97-108-108-111-99-118-0
69705|data|DCB "_ZNSs4_Rep20_S_empty_rep_storageE",0|95-90-78-83-115-52-95-82-101-112-50-48-95-83-95-101-109-112-116-121-95-114-101-112-95-115-116-111-114-97-103-101-69-0
69739|data|DCB "_ZNSs6appendEjc",0|95-90-78-83-115-54-97-112-112-101-110-100-69-106-99-0
69755|data|DCB "_ZdlPv",0|95-90-100-108-80-118-0
69762|data|DCB "__cxa_end_catch",0|95-95-99-120-97-95-101-110-100-95-99-97-116-99-104-0
69778|data|DCB "_ZNSs6appendEPKcj",0|95-90-78-83-115-54-97-112-112-101-110-100-69-80-75-99-106-0
69796|data|DCB "_ZNSs4_Rep10_M_destroyERKSaIcE",0|95-90-78-83-115-52-95-82-101-112-49-48-95-77-95-100-101-115-116-114-111-121-69-82-75-83-97-73-99-69-0
69827|data|DCB "__gxx_personality_v0",0|95-95-103-120-120-95-112-101-114-115-111-110-97-108-105-116-121-95-118-48-0
69848|data|DCB "_ZTVN10__cxxabiv117__class_type_infoE",0|95-90-84-86-78-49-48-95-95-99-120-120-97-98-105-118-49-49-55-95-95-99-108-97-115-115-95-116-121-112-101-95-105-110-102-111-69-0
69886|data|DCB "_ZNSs6appendERKSs",0|95-90-78-83-115-54-97-112-112-101-110-100-69-82-75-83-115-0
69904|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
69920|data|DCB "sigaction",0|115-105-103-97-99-116-105-111-110-0
69930|data|DCB "pthread_attr_init",0|112-116-104-114-101-97-100-95-97-116-116-114-95-105-110-105-116-0
69948|data|DCB "pthread_mutex_unlock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-117-110-108-111-99-107-0
69969|data|DCB "pthread_attr_setstacksize",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-115-116-97-99-107-115-105-122-101-0
69995|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
70012|data|DCB "connect",0|99-111-110-110-101-99-116-0
70020|data|DCB "nanosleep",0|110-97-110-111-115-108-101-101-112-0
70030|data|DCB "pthread_attr_setdetachstate",0|112-116-104-114-101-97-100-95-97-116-116-114-95-115-101-116-100-101-116-97-99-104-115-116-97-116-101-0
70058|data|DCB "pthread_attr_destroy",0|112-116-104-114-101-97-100-95-97-116-116-114-95-100-101-115-116-114-111-121-0
70079|data|DCB "pthread_mutex_lock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-108-111-99-107-0
70098|data|DCB "pthread_mutex_trylock",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-116-114-121-108-111-99-107-0
70120|data|DCB "pthread_mutex_destroy",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-100-101-115-116-114-111-121-0
70142|data|DCB "read",0|114-101-97-100-0
70147|data|DCB "pthread_mutexattr_init",0|112-116-104-114-101-97-100-95-109-117-116-101-120-97-116-116-114-95-105-110-105-116-0
70170|data|DCB "pthread_mutexattr_settype",0|112-116-104-114-101-97-100-95-109-117-116-101-120-97-116-116-114-95-115-101-116-116-121-112-101-0
70196|data|DCB "pthread_mutexattr_destroy",0|112-116-104-114-101-97-100-95-109-117-116-101-120-97-116-116-114-95-100-101-115-116-114-111-121-0
70222|data|DCB "pthread_mutex_init",0|112-116-104-114-101-97-100-95-109-117-116-101-120-95-105-110-105-116-0
70241|data|DCB "libgnutls-deb0.so.28",0|108-105-98-103-110-117-116-108-115-45-100-101-98-48-46-115-111-46-50-56-0
70262|data|DCB "gnutls_anon_free_client_credentials",0|103-110-117-116-108-115-95-97-110-111-110-95-102-114-101-101-95-99-108-105-101-110-116-95-99-114-101-100-101-110-116-105-97-108-115-0
70298|data|DCB "gnutls_handshake",0|103-110-117-116-108-115-95-104-97-110-100-115-104-97-107-101-0
70315|data|DCB "gnutls_credentials_set",0|103-110-117-116-108-115-95-99-114-101-100-101-110-116-105-97-108-115-95-115-101-116-0
70338|data|DCB "gnutls_deinit",0|103-110-117-116-108-115-95-100-101-105-110-105-116-0
70352|data|DCB "gnutls_record_recv",0|103-110-117-116-108-115-95-114-101-99-111-114-100-95-114-101-99-118-0
70371|data|DCB "gnutls_init",0|103-110-117-116-108-115-95-105-110-105-116-0
70383|data|DCB "gnutls_global_init",0|103-110-117-116-108-115-95-103-108-111-98-97-108-95-105-110-105-116-0
70402|data|DCB "gnutls_priority_set_direct",0|103-110-117-116-108-115-95-112-114-105-111-114-105-116-121-95-115-101-116-95-100-105-114-101-99-116-0
70429|data|DCB "gnutls_check_version",0|103-110-117-116-108-115-95-99-104-101-99-107-95-118-101-114-115-105-111-110-0
70450|data|DCB "gnutls_transport_set_ptr",0|103-110-117-116-108-115-95-116-114-97-110-115-112-111-114-116-95-115-101-116-95-112-116-114-0
70475|data|DCB "gnutls_anon_allocate_client_credentials",0|103-110-117-116-108-115-95-97-110-111-110-95-97-108-108-111-99-97-116-101-95-99-108-105-101-110-116-95-99-114-101-100-101-110-116-105-97-108-115-0
70515|data|DCB "gnutls_set_default_priority",0|103-110-117-116-108-115-95-115-101-116-95-100-101-102-97-117-108-116-95-112-114-105-111-114-105-116-121-0
70543|data|DCB "gnutls_bye",0|103-110-117-116-108-115-95-98-121-101-0
70554|data|DCB "gnutls_record_send",0|103-110-117-116-108-115-95-114-101-99-111-114-100-95-115-101-110-100-0
70573|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
70583|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
70597|data|DCB "__aeabi_unwind_cpp_pr0",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-48-0
70620|data|DCB "__aeabi_unwind_cpp_pr1",0|95-95-97-101-97-98-105-95-117-110-119-105-110-100-95-99-112-112-95-112-114-49-0
70643|data|DCB "__aeabi_idivmod",0|95-95-97-101-97-98-105-95-105-100-105-118-109-111-100-0
70659|data|DCB "__aeabi_uidivmod",0|95-95-97-101-97-98-105-95-117-105-100-105-118-109-111-100-0
70676|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
70686|data|DCB "socket",0|115-111-99-107-101-116-0
70693|data|DCB "fflush",0|102-102-108-117-115-104-0
70700|data|DCB "strcpy",0|115-116-114-99-112-121-0
70707|data|DCB "gmtime_r",0|103-109-116-105-109-101-95-114-0
70716|data|DCB "exit",0|101-120-105-116-0
70721|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
70729|data|DCB "fopen",0|102-111-112-101-110-0
70735|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
70743|data|DCB "optind",0|111-112-116-105-110-100-0
70750|data|DCB "regexec",0|114-101-103-101-120-101-99-0
70758|data|DCB "pipe",0|112-105-112-101-0
70763|data|DCB "perror",0|112-101-114-114-111-114-0
70770|data|DCB "inet_ntoa",0|105-110-101-116-95-110-116-111-97-0
70780|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
70788|data|DCB "puts",0|112-117-116-115-0
70793|data|DCB "regfree",0|114-101-103-102-114-101-101-0
70801|data|DCB "putchar",0|112-117-116-99-104-97-114-0
70809|data|DCB "abort",0|97-98-111-114-116-0
70815|data|DCB "strdup",0|115-116-114-100-117-112-0
70822|data|DCB "strftime",0|115-116-114-102-116-105-109-101-0
70831|data|DCB "strtok",0|115-116-114-116-111-107-0
70838|data|DCB "strtol",0|115-116-114-116-111-108-0
70845|data|DCB "fgets",0|102-103-101-116-115-0
70851|data|DCB "strlen",0|115-116-114-108-101-110-0
70858|data|DCB "memset",0|109-101-109-115-101-116-0
70865|data|DCB "bind",0|98-105-110-100-0
70870|data|DCB "getopt",0|103-101-116-111-112-116-0
70877|data|DCB "poll",0|112-111-108-108-0
70882|data|DCB "gethostbyaddr",0|103-101-116-104-111-115-116-98-121-97-100-100-114-0
70896|data|DCB "memcpy",0|109-101-109-99-112-121-0
70903|data|DCB "fclose",0|102-99-108-111-115-101-0
70910|data|DCB "rand",0|114-97-110-100-0
70915|data|DCB "malloc",0|109-97-108-108-111-99-0
70922|data|DCB "strcasecmp",0|115-116-114-99-97-115-101-99-109-112-0
70933|data|DCB "regcomp",0|114-101-103-99-111-109-112-0
70941|data|DCB "optarg",0|111-112-116-97-114-103-0
70948|data|DCB "stderr",0|115-116-100-101-114-114-0
70955|data|DCB "gethostbyname",0|103-101-116-104-111-115-116-98-121-110-97-109-101-0
70969|data|DCB "fwrite",0|102-119-114-105-116-101-0
70976|data|DCB "gettimeofday",0|103-101-116-116-105-109-101-111-102-100-97-121-0
70989|data|DCB "localtime",0|108-111-99-97-108-116-105-109-101-0
70999|data|DCB "strchr",0|115-116-114-99-104-114-0
71006|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
71014|data|DCB "getsockname",0|103-101-116-115-111-99-107-110-97-109-101-0
71026|data|DCB "fdopen",0|102-100-111-112-101-110-0
71033|data|DCB "memmove",0|109-101-109-109-111-118-101-0
71041|data|DCB "strcmp",0|115-116-114-99-109-112-0
71048|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
71066|data|DCB "random",0|114-97-110-100-111-109-0
71073|data|DCB "snprintf",0|115-110-112-114-105-110-116-102-0
71082|data|DCB "_fini",0|95-102-105-110-105-0
71088|data|DCB "_edata",0|95-101-100-97-116-97-0
71095|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
71107|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
71121|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
71133|data|DCB "__end__",0|95-95-101-110-100-95-95-0
71141|data|DCB "_end",0|95-101-110-100-0
71146|data|DCB "GCC_3.5",0|71-67-67-95-51-46-53-0
71154|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
71164|data|DCB "GNUTLS_DEBIAN_0_1_4",0|71-78-85-84-76-83-95-68-69-66-73-65-78-95-48-95-49-95-52-0
71184|data|DCB "CXXABI_1.3",0|67-88-88-65-66-73-95-49-46-51-0
71195|data|DCB "GLIBCXX_3.4",0|71-76-73-66-67-88-88-95-51-46-52-0
71207|data|DCB 0|0
71208|data|DCW 0|0-0
71210|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
71212|data|DCW 7; __aeabi_unwind_cpp_pr1@@GCC_3.5|7-0
71214|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
71216|data|DCW 7; __aeabi_unwind_cpp_pr0@@GCC_3.5|7-0
71218|data|DCW 0; local  symbol: __gmon_start__|0-0
71220|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
71222|data|DCW 3; write@@GLIBC_2.4|3-0
71224|data|DCW 5; strcmp@@GLIBC_2.4|5-0
71226|data|DCW 5; fflush@@GLIBC_2.4|5-0
71228|data|DCW 5; snprintf@@GLIBC_2.4|5-0
71230|data|DCW 5; fgets@@GLIBC_2.4|5-0
71232|data|DCW 3; pthread_mutexattr_settype@@GLIBC_2.4|3-0
71234|data|DCW 2; _ZNSs6appendEjc@@GLIBCXX_3.4|2-0
71236|data|DCW 2; _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4|2-0
71238|data|DCW 5; regexec@@GLIBC_2.4|5-0
71240|data|DCW 5; strncmp@@GLIBC_2.4|5-0
71242|data|DCW 5; strcpy@@GLIBC_2.4|5-0
71244|data|DCW 1; global symbol: __bss_start__|1-0
71246|data|DCW 4; gnutls_transport_set_ptr@@GNUTLS_DEBIAN_0_1_4|4-0
71248|data|DCW 4; gnutls_global_init@@GNUTLS_DEBIAN_0_1_4|4-0
71250|data|DCW 5; getsockname@@GLIBC_2.4|5-0
71252|data|DCW 5; __libc_start_main@@GLIBC_2.4|5-0
71254|data|DCW 1; global symbol: _bss_end__|1-0
71256|data|DCW 3; pthread_attr_init@@GLIBC_2.4|3-0
71258|data|DCW 4; gnutls_init@@GNUTLS_DEBIAN_0_1_4|4-0
71260|data|DCW 5; gethostbyaddr@@GLIBC_2.4|5-0
71262|data|DCW 6; __cxa_end_catch@@CXXABI_1.3|6-0
71264|data|DCW 3; pthread_mutex_destroy@@GLIBC_2.4|3-0
71266|data|DCW 5; fprintf@@GLIBC_2.4|5-0
71268|data|DCW 3; pthread_mutexattr_destroy@@GLIBC_2.4|3-0
71270|data|DCW 5; strncpy@@GLIBC_2.4|5-0
71272|data|DCW 5; exit@@GLIBC_2.4|5-0
71274|data|DCW 5; strftime@@GLIBC_2.4|5-0
71276|data|DCW 5; sleep@@GLIBC_2.4|5-0
71278|data|DCW 5; regfree@@GLIBC_2.4|5-0
71280|data|DCW 3; pthread_create@@GLIBC_2.4|3-0
71282|data|DCW 5; perror@@GLIBC_2.4|5-0
71284|data|DCW 4; gnutls_anon_free_client_credentials@@GNUTLS_DEBIAN_0_1_4|4-0
71286|data|DCW 3; __errno_location@@GLIBC_2.4|3-0
71288|data|DCW 5; fopen@@GLIBC_2.4|5-0
71290|data|DCW 5; strlen@@GLIBC_2.4|5-0
71292|data|DCW 1; global symbol: _edata|1-0
71294|data|DCW 5; abort@@GLIBC_2.4|5-0
71296|data|DCW 6; __gxx_personality_v0@@CXXABI_1.3|6-0
71298|data|DCW 5; time@@GLIBC_2.4|5-0
71300|data|DCW 3; close@@GLIBC_2.4|3-0
71302|data|DCW 5; strchr@@GLIBC_2.4|5-0
71304|data|DCW 3; pthread_mutex_unlock@@GLIBC_2.4|3-0
71306|data|DCW 2; _Znaj@@GLIBCXX_3.4|2-0
71308|data|DCW 3; read@@GLIBC_2.4|3-0
71310|data|DCW 6; __cxa_rethrow@@CXXABI_1.3|6-0
71312|data|DCW 5; getopt@@GLIBC_2.4|5-0
71314|data|DCW 3; pthread_join@@GLIBC_2.4|3-0
71316|data|DCW 4; gnutls_deinit@@GNUTLS_DEBIAN_0_1_4|4-0
71318|data|DCW 3; nanosleep@@GLIBC_2.4|3-0
71320|data|DCW 1; global symbol: __end__|1-0
71322|data|DCW 5; inet_ntoa@@GLIBC_2.4|5-0
71324|data|DCW 3; connect@@GLIBC_2.4|3-0
71326|data|DCW 5; fwrite@@GLIBC_2.4|5-0
71328|data|DCW 5; stderr@@GLIBC_2.4|5-0
71330|data|DCW 5; pipe@@GLIBC_2.4|5-0
71332|data|DCW 3; sigaction@@GLIBC_2.4|3-0
71334|data|DCW 2; _ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4|2-0
71336|data|DCW 1; global symbol: _fini|1-0
71338|data|DCW 1; global symbol: _init|1-0
71340|data|DCW 2; _ZNSs12_M_leak_hardEv@@GLIBCXX_3.4|2-0
71342|data|DCW 4; gnutls_set_default_priority@@GNUTLS_DEBIAN_0_1_4|4-0
71344|data|DCW 5; printf@@GLIBC_2.4|5-0
71346|data|DCW 5; poll@@GLIBC_2.4|5-0
71348|data|DCW 4; gnutls_anon_allocate_client_credentials@@GNUTLS_DEBIAN_0_1_4|4-0
71350|data|DCW 5; random@@GLIBC_2.4|5-0
71352|data|DCW 2; _ZSt17__throw_bad_allocv@@GLIBCXX_3.4|2-0
71354|data|DCW 5; strtok@@GLIBC_2.4|5-0
71356|data|DCW 5; strtol@@GLIBC_2.4|5-0
71358|data|DCW 7; __aeabi_uidivmod@@GCC_3.5|7-0
71360|data|DCW 2; _ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4|2-0
71362|data|DCW 1; global symbol: __bss_start|1-0
71364|data|DCW 3; pthread_attr_setdetachstate@@GLIBC_2.4|3-0
71366|data|DCW 3; pthread_mutex_lock@@GLIBC_2.4|3-0
71368|data|DCW 5; optarg@@GLIBC_2.4|5-0
71370|data|DCW 2; _ZNSs6appendERKSs@@GLIBCXX_3.4|2-0
71372|data|DCW 3; pthread_mutexattr_init@@GLIBC_2.4|3-0
71374|data|DCW 2; _ZSt20__throw_length_errorPKc@@GLIBCXX_3.4|2-0
71376|data|DCW 5; putchar@@GLIBC_2.4|5-0
71378|data|DCW 5; memmove@@GLIBC_2.4|5-0
71380|data|DCW 5; localtime@@GLIBC_2.4|5-0
71382|data|DCW 1; global symbol: _end|1-0
71384|data|DCW 3; __pthread_key_create@@GLIBC_2.4|3-0
71386|data|DCW 2; _ZNSs6assignERKSs@@GLIBCXX_3.4|2-0
71388|data|DCW 5; gettimeofday@@GLIBC_2.4|5-0
71390|data|DCW 4; gnutls_bye@@GNUTLS_DEBIAN_0_1_4|4-0
71392|data|DCW 5; puts@@GLIBC_2.4|5-0
71394|data|DCW 1; global symbol: _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_|1-0
71396|data|DCW 6; __cxa_end_cleanup@@CXXABI_1.3|6-0
71398|data|DCW 6; _ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3|6-0
71400|data|DCW 5; gmtime_r@@GLIBC_2.4|5-0
71402|data|DCW 3; pthread_attr_setstacksize@@GLIBC_2.4|3-0
71404|data|DCW 7; __aeabi_idivmod@@GCC_3.5|7-0
71406|data|DCW 5; strcasecmp@@GLIBC_2.4|5-0
71408|data|DCW 5; fdopen@@GLIBC_2.4|5-0
71410|data|DCW 5; fclose@@GLIBC_2.4|5-0
71412|data|DCW 5; memset@@GLIBC_2.4|5-0
71414|data|DCW 5; gethostbyname@@GLIBC_2.4|5-0
71416|data|DCW 6; _ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3|6-0
71418|data|DCW 1; global symbol: __bss_end__|1-0
71420|data|DCW 3; pthread_attr_destroy@@GLIBC_2.4|3-0
71422|data|DCW 4; gnutls_check_version@@GNUTLS_DEBIAN_0_1_4|4-0
71424|data|DCW 4; gnutls_handshake@@GNUTLS_DEBIAN_0_1_4|4-0
71426|data|DCW 2; _Znwj@@GLIBCXX_3.4|2-0
71428|data|DCW 5; sprintf@@GLIBC_2.4|5-0
71430|data|DCW 6; __cxa_begin_catch@@CXXABI_1.3|6-0
71432|data|DCW 2; _ZNSs6appendEPKc@@GLIBCXX_3.4|2-0
71434|data|DCW 4; gnutls_record_recv@@GNUTLS_DEBIAN_0_1_4|4-0
71436|data|DCW 5; free@@GLIBC_2.4|5-0
71438|data|DCW 1; global symbol: _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_|1-0
71440|data|DCW 4; gnutls_priority_set_direct@@GNUTLS_DEBIAN_0_1_4|4-0
71442|data|DCW 5; rand@@GLIBC_2.4|5-0
71444|data|DCW 2; _ZNSsC1ERKSs@@GLIBCXX_3.4|2-0
71446|data|DCW 3; pthread_mutex_trylock@@GLIBC_2.4|3-0
71448|data|DCW 2; _ZNSs7reserveEj@@GLIBCXX_3.4|2-0
71450|data|DCW 4; gnutls_record_send@@GNUTLS_DEBIAN_0_1_4|4-0
71452|data|DCW 2; _ZdlPv@@GLIBCXX_3.4|2-0
71454|data|DCW 5; memcpy@@GLIBC_2.4|5-0
71456|data|DCW 2; _ZNSs6appendEPKcj@@GLIBCXX_3.4|2-0
71458|data|DCW 2; _ZNSs6assignEPKc@@GLIBCXX_3.4|2-0
71460|data|DCW 6; __cxa_pure_virtual@@CXXABI_1.3|6-0
71462|data|DCW 5; bind@@GLIBC_2.4|5-0
71464|data|DCW 5; socket@@GLIBC_2.4|5-0
71466|data|DCW 5; malloc@@GLIBC_2.4|5-0
71468|data|DCW 4; gnutls_credentials_set@@GNUTLS_DEBIAN_0_1_4|4-0
71470|data|DCW 5; regcomp@@GLIBC_2.4|5-0
71472|data|DCW 5; optind@@GLIBC_2.4|5-0
71474|data|DCW 5; strdup@@GLIBC_2.4|5-0
71476|data|DCW 3; pthread_mutex_init@@GLIBC_2.4|3-0
71478|data|DCW 0|0-0
71480|data|Elf32_Verneed <1, 1, aLibgccSSo1 - byte_10E18, 0x10, 0x20>; "libgcc_s.so.1"|1-0-1-0-159-5-0-0-16-0-0-0-32-0-0-0
71496|data|Elf32_Vernaux <0xB792655, 0, 7, aGcc35 - byte_10E18, 0>; "GCC_3.5"|85-38-121-11-0-0-7-0-210-7-0-0-0-0-0-0
71512|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_10E18, 0x10, 0x20>; "libc.so.6"|1-0-1-0-252-5-0-0-16-0-0-0-32-0-0-0
71528|data|Elf32_Vernaux <0xD696914, 0, 5, aGlibc24 - byte_10E18, 0>; "GLIBC_2.4"|20-105-105-13-0-0-5-0-218-7-0-0-0-0-0-0
71544|data|Elf32_Verneed <1, 1, aLibgnutlsDeb0S - byte_10E18, 0x10, 0x20>; "libgnutls-deb0.so.28"|1-0-1-0-73-4-0-0-16-0-0-0-32-0-0-0
71560|data|Elf32_Vernaux <0xD97DBB4, 0, 4, aGnutlsDebian01 - byte_10E18, 0>; "GNUTLS_DEBIAN_0_1_4"|180-219-151-13-0-0-4-0-228-7-0-0-0-0-0-0
71576|data|Elf32_Verneed <1, 1, aLibpthreadSo0 - byte_10E18, 0x10, 0x20>; "libpthread.so.0"|1-0-1-0-248-2-0-0-16-0-0-0-32-0-0-0
71592|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_10E18, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-218-7-0-0-0-0-0-0
71608|data|Elf32_Verneed <1, 2, aLibstdcSo6 - byte_10E18, 0x10, 0>; "libstdc++.so.6"|1-0-2-0-1-0-0-0-16-0-0-0-0-0-0-0
71624|data|Elf32_Vernaux <0x56BAFD3, 0, 6, aCxxabi13 - byte_10E18, 0x10>; "CXXABI_1.3"|211-175-107-5-0-0-6-0-248-7-0-0-16-0-0-0
71640|data|Elf32_Vernaux <0x8922974, 0, 2, aGlibcxx34 - byte_10E18, 0>; "GLIBCXX_3.4"|116-41-146-8-0-0-2-0-3-8-0-0-0-0-0-0
71656|data|Elf32_Rel <0x283F4, 0x515>; R_ARM_GLOB_DAT __gmon_start__|244-131-2-0-21-5-0-0
71664|data|Elf32_Rel <0x28440, 0xE14>; R_ARM_COPY _ZNSs4_Rep20_S_empty_rep_storageE|64-132-2-0-20-14-0-0
71672|data|Elf32_Rel <0x28450, 0x8414>; R_ARM_COPY optind|80-132-2-0-20-132-0-0
71680|data|Elf32_Rel <0x28458, 0x5F14>; R_ARM_COPY _ZTVN10__cxxabiv117__class_type_infoE|88-132-2-0-20-95-0-0
71688|data|Elf32_Rel <0x28484, 0x5014>; R_ARM_COPY optarg|132-132-2-0-20-80-0-0
71696|data|Elf32_Rel <0x28488, 0x3C14>; R_ARM_COPY stderr|136-132-2-0-20-60-0-0
71704|data|Elf32_Rel <0x28490, 0x6814>; R_ARM_COPY _ZTVN10__cxxabiv120__si_class_type_infoE|144-132-2-0-20-104-0-0
71712|data|Elf32_Rel <0x28234, 0x6D16>; R_ARM_JUMP_SLOT _Znwj|52-130-2-0-22-109-0-0
71720|data|Elf32_Rel <0x28238, 0x4F16>; R_ARM_JUMP_SLOT pthread_mutex_lock|56-130-2-0-22-79-0-0
71728|data|Elf32_Rel <0x2823C, 0x8616>; R_ARM_JUMP_SLOT pthread_mutex_init|60-130-2-0-22-134-0-0
71736|data|Elf32_Rel <0x28240, 0x4316>; R_ARM_JUMP_SLOT gnutls_set_default_priority|64-130-2-0-22-67-0-0
71744|data|Elf32_Rel <0x28244, 0x7516>; R_ARM_JUMP_SLOT rand|68-130-2-0-22-117-0-0
71752|data|Elf32_Rel <0x28248, 0x5A16>; R_ARM_JUMP_SLOT gettimeofday|72-130-2-0-22-90-0-0
71760|data|Elf32_Rel <0x2824C, 0x4216>; R_ARM_JUMP_SLOT _ZNSs12_M_leak_hardEv|76-130-2-0-22-66-0-0
71768|data|Elf32_Rel <0x28250, 0x6316>; R_ARM_JUMP_SLOT strcasecmp|80-130-2-0-22-99-0-0
71776|data|Elf32_Rel <0x28254, 0x6416>; R_ARM_JUMP_SLOT fdopen|84-130-2-0-22-100-0-0
71784|data|Elf32_Rel <0x28258, 0x4A16>; R_ARM_JUMP_SLOT strtol|88-130-2-0-22-74-0-0
71792|data|Elf32_Rel <0x2825C, 0x7216>; R_ARM_JUMP_SLOT free|92-130-2-0-22-114-0-0
71800|data|Elf32_Rel <0x28260, 0x5216>; R_ARM_JUMP_SLOT pthread_mutexattr_init|96-130-2-0-22-82-0-0
71808|data|Elf32_Rel <0x28264, 0x1E16>; R_ARM_JUMP_SLOT pthread_mutexattr_destroy|100-130-2-0-22-30-0-0
71816|data|Elf32_Rel <0x28268, 0x4816>; R_ARM_JUMP_SLOT _ZSt17__throw_bad_allocv|104-130-2-0-22-72-0-0
71824|data|Elf32_Rel <0x2826C, 0x1016>; R_ARM_JUMP_SLOT strncmp|108-130-2-0-22-16-0-0
71832|data|Elf32_Rel <0x28270, 0x8316>; R_ARM_JUMP_SLOT regcomp|112-130-2-0-22-131-0-0
71840|data|Elf32_Rel <0x28274, 0x6F16>; R_ARM_JUMP_SLOT __cxa_begin_catch|116-130-2-0-22-111-0-0
71848|data|Elf32_Rel <0x28278, 0x4B16>; R_ARM_JUMP_SLOT __aeabi_uidivmod|120-130-2-0-22-75-0-0
71856|data|Elf32_Rel <0x2827C, 0x3516>; R_ARM_JUMP_SLOT pthread_join|124-130-2-0-22-53-0-0
71864|data|Elf32_Rel <0x28280, 0x2016>; R_ARM_JUMP_SLOT exit|128-130-2-0-22-32-0-0
71872|data|Elf32_Rel <0x28284, 0x4416>; R_ARM_JUMP_SLOT printf|132-130-2-0-22-68-0-0
71880|data|Elf32_Rel <0x28288, 0x5316>; R_ARM_JUMP_SLOT _ZSt20__throw_length_errorPKc|136-130-2-0-22-83-0-0
71888|data|Elf32_Rel <0x2828C, 0x2316>; R_ARM_JUMP_SLOT regfree|140-130-2-0-22-35-0-0
71896|data|Elf32_Rel <0x28290, 0x5C16>; R_ARM_JUMP_SLOT puts|144-130-2-0-22-92-0-0
71904|data|Elf32_Rel <0x28294, 0x3616>; R_ARM_JUMP_SLOT gnutls_deinit|148-130-2-0-22-54-0-0
71912|data|Elf32_Rel <0x28298, 0x1A16>; R_ARM_JUMP_SLOT gethostbyaddr|152-130-2-0-22-26-0-0
71920|data|Elf32_Rel <0x2829C, 0x4916>; R_ARM_JUMP_SLOT strtok|156-130-2-0-22-73-0-0
71928|data|Elf32_Rel <0x282A0, 0x2516>; R_ARM_JUMP_SLOT perror|160-130-2-0-22-37-0-0
71936|data|Elf32_Rel <0x282A4, 0x7616>; R_ARM_JUMP_SLOT _ZNSsC1ERKSs|164-130-2-0-22-118-0-0
71944|data|Elf32_Rel <0x282A8, 0xF16>; R_ARM_JUMP_SLOT regexec|168-130-2-0-22-15-0-0
71952|data|Elf32_Rel <0x282AC, 0x3716>; R_ARM_JUMP_SLOT nanosleep|172-130-2-0-22-55-0-0
71960|data|Elf32_Rel <0x282B0, 0x2116>; R_ARM_JUMP_SLOT strftime|176-130-2-0-22-33-0-0
71968|data|Elf32_Rel <0x282B4, 0x5416>; R_ARM_JUMP_SLOT putchar|180-130-2-0-22-84-0-0
71976|data|Elf32_Rel <0x282B8, 0x6616>; R_ARM_JUMP_SLOT memset|184-130-2-0-22-102-0-0
71984|data|Elf32_Rel <0x282BC, 0xA16>; R_ARM_JUMP_SLOT snprintf|188-130-2-0-22-10-0-0
71992|data|Elf32_Rel <0x282C0, 0x7816>; R_ARM_JUMP_SLOT _ZNSs7reserveEj|192-130-2-0-22-120-0-0
72000|data|Elf32_Rel <0x282C4, 0x7716>; R_ARM_JUMP_SLOT pthread_mutex_trylock|196-130-2-0-22-119-0-0
72008|data|Elf32_Rel <0x282C8, 0x2E16>; R_ARM_JUMP_SLOT close|200-130-2-0-22-46-0-0
72016|data|Elf32_Rel <0x282CC, 0x2816>; R_ARM_JUMP_SLOT fopen|204-130-2-0-22-40-0-0
72024|data|Elf32_Rel <0x282D0, 0x3116>; R_ARM_JUMP_SLOT _Znaj|208-130-2-0-22-49-0-0
72032|data|Elf32_Rel <0x282D4, 0x3216>; R_ARM_JUMP_SLOT read|212-130-2-0-22-50-0-0
72040|data|Elf32_Rel <0x282D8, 0x4C16>; R_ARM_JUMP_SLOT _ZNSs4_Rep10_M_destroyERKSaIcE|216-130-2-0-22-76-0-0
72048|data|Elf32_Rel <0x282DC, 0x2B16>; R_ARM_JUMP_SLOT abort|220-130-2-0-22-43-0-0
72056|data|Elf32_Rel <0x282E0, 0x6B16>; R_ARM_JUMP_SLOT gnutls_check_version|224-130-2-0-22-107-0-0
72064|data|Elf32_Rel <0x282E4, 0x4516>; R_ARM_JUMP_SLOT poll|228-130-2-0-22-69-0-0
72072|data|Elf32_Rel <0x282E8, 0x1416>; R_ARM_JUMP_SLOT gnutls_global_init|232-130-2-0-22-20-0-0
72080|data|Elf32_Rel <0x282EC, 0x5516>; R_ARM_JUMP_SLOT memmove|236-130-2-0-22-85-0-0
72088|data|Elf32_Rel <0x282F0, 0x6716>; R_ARM_JUMP_SLOT gethostbyname|240-130-2-0-22-103-0-0
72096|data|Elf32_Rel <0x282F4, 0x5616>; R_ARM_JUMP_SLOT localtime|244-130-2-0-22-86-0-0
72104|data|Elf32_Rel <0x282F8, 0x6016>; R_ARM_JUMP_SLOT gmtime_r|248-130-2-0-22-96-0-0
72112|data|Elf32_Rel <0x282FC, 0x3916>; R_ARM_JUMP_SLOT inet_ntoa|252-130-2-0-22-57-0-0
72120|data|Elf32_Rel <0x28300, 0x1116>; R_ARM_JUMP_SLOT strcpy|0-131-2-0-22-17-0-0
72128|data|Elf32_Rel <0x28304, 0x4E16>; R_ARM_JUMP_SLOT pthread_attr_setdetachstate|4-131-2-0-22-78-0-0
72136|data|Elf32_Rel <0x28308, 0x7A16>; R_ARM_JUMP_SLOT _ZdlPv|8-131-2-0-22-122-0-0
72144|data|Elf32_Rel <0x2830C, 0x3416>; R_ARM_JUMP_SLOT getopt|12-131-2-0-22-52-0-0
72152|data|Elf32_Rel <0x28310, 0x5816>; R_ARM_JUMP_SLOT __pthread_key_create|16-131-2-0-22-88-0-0
72160|data|Elf32_Rel <0x28314, 0x7F16>; R_ARM_JUMP_SLOT bind|20-131-2-0-22-127-0-0
72168|data|Elf32_Rel <0x28318, 0x1C16>; R_ARM_JUMP_SLOT pthread_mutex_destroy|24-131-2-0-22-28-0-0
72176|data|Elf32_Rel <0x2831C, 0x1316>; R_ARM_JUMP_SLOT gnutls_transport_set_ptr|28-131-2-0-22-19-0-0
72184|data|Elf32_Rel <0x28320, 0x5116>; R_ARM_JUMP_SLOT _ZNSs6appendERKSs|32-131-2-0-22-81-0-0
72192|data|Elf32_Rel <0x28324, 0x7916>; R_ARM_JUMP_SLOT gnutls_record_send|36-131-2-0-22-121-0-0
72200|data|Elf32_Rel <0x28328, 0x5E16>; R_ARM_JUMP_SLOT __cxa_end_cleanup|40-131-2-0-22-94-0-0
72208|data|Elf32_Rel <0x2832C, 0x7C16>; R_ARM_JUMP_SLOT _ZNSs6appendEPKcj|44-131-2-0-22-124-0-0
72216|data|Elf32_Rel <0x28330, 0x8016>; R_ARM_JUMP_SLOT socket|48-131-2-0-22-128-0-0
72224|data|Elf32_Rel <0x28334, 0x3F16>; R_ARM_JUMP_SLOT _ZNSsC1EPKcRKSaIcE|52-131-2-0-22-63-0-0
72232|data|Elf32_Rel <0x28338, 0x7416>; R_ARM_JUMP_SLOT gnutls_priority_set_direct|56-131-2-0-22-116-0-0
72240|data|Elf32_Rel <0x2833C, 0x4616>; R_ARM_JUMP_SLOT gnutls_anon_allocate_client_credentials|60-131-2-0-22-70-0-0
72248|data|Elf32_Rel <0x28340, 0x5916>; R_ARM_JUMP_SLOT _ZNSs6assignERKSs|64-131-2-0-22-89-0-0
72256|data|Elf32_Rel <0x28344, 0x6A16>; R_ARM_JUMP_SLOT pthread_attr_destroy|68-131-2-0-22-106-0-0
72264|data|Elf32_Rel <0x28348, 0x2216>; R_ARM_JUMP_SLOT sleep|72-131-2-0-22-34-0-0
72272|data|Elf32_Rel <0x2834C, 0x6216>; R_ARM_JUMP_SLOT __aeabi_idivmod|76-131-2-0-22-98-0-0
72280|data|Elf32_Rel <0x28350, 0x6116>; R_ARM_JUMP_SLOT pthread_attr_setstacksize|80-131-2-0-22-97-0-0
72288|data|Elf32_Rel <0x28354, 0x3A16>; R_ARM_JUMP_SLOT connect|84-131-2-0-22-58-0-0
72296|data|Elf32_Rel <0x28358, 0x3E16>; R_ARM_JUMP_SLOT sigaction|88-131-2-0-22-62-0-0
72304|data|Elf32_Rel <0x2835C, 0x1816>; R_ARM_JUMP_SLOT pthread_attr_init|92-131-2-0-22-24-0-0
72312|data|Elf32_Rel <0x28360, 0x2616>; R_ARM_JUMP_SLOT gnutls_anon_free_client_credentials|96-131-2-0-22-38-0-0
72320|data|Elf32_Rel <0x28364, 0x8216>; R_ARM_JUMP_SLOT gnutls_credentials_set|100-131-2-0-22-130-0-0
72328|data|Elf32_Rel <0x28368, 0x7D16>; R_ARM_JUMP_SLOT _ZNSs6assignEPKc|104-131-2-0-22-125-0-0
72336|data|Elf32_Rel <0x2836C, 0xB16>; R_ARM_JUMP_SLOT fgets|108-131-2-0-22-11-0-0
72344|data|Elf32_Rel <0x28370, 0x5B16>; R_ARM_JUMP_SLOT gnutls_bye|112-131-2-0-22-91-0-0
72352|data|Elf32_Rel <0x28374, 0x3316>; R_ARM_JUMP_SLOT __cxa_rethrow|116-131-2-0-22-51-0-0
72360|data|Elf32_Rel <0x28378, 0x3B16>; R_ARM_JUMP_SLOT fwrite|120-131-2-0-22-59-0-0
72368|data|Elf32_Rel <0x2837C, 0x7B16>; R_ARM_JUMP_SLOT memcpy|124-131-2-0-22-123-0-0
72376|data|Elf32_Rel <0x28380, 0x8116>; R_ARM_JUMP_SLOT malloc|128-131-2-0-22-129-0-0
72384|data|Elf32_Rel <0x28384, 0x2916>; R_ARM_JUMP_SLOT strlen|132-131-2-0-22-41-0-0
72392|data|Elf32_Rel <0x28388, 0x1916>; R_ARM_JUMP_SLOT gnutls_init|136-131-2-0-22-25-0-0
72400|data|Elf32_Rel <0x2838C, 0x1D16>; R_ARM_JUMP_SLOT fprintf|140-131-2-0-22-29-0-0
72408|data|Elf32_Rel <0x28390, 0x6516>; R_ARM_JUMP_SLOT fclose|144-131-2-0-22-101-0-0
72416|data|Elf32_Rel <0x28394, 0x716>; R_ARM_JUMP_SLOT write|148-131-2-0-22-7-0-0
72424|data|Elf32_Rel <0x28398, 0x6E16>; R_ARM_JUMP_SLOT sprintf|152-131-2-0-22-110-0-0
72432|data|Elf32_Rel <0x2839C, 0x1B16>; R_ARM_JUMP_SLOT __cxa_end_catch|156-131-2-0-22-27-0-0
72440|data|Elf32_Rel <0x283A0, 0x4716>; R_ARM_JUMP_SLOT random|160-131-2-0-22-71-0-0
72448|data|Elf32_Rel <0x283A4, 0x2C16>; R_ARM_JUMP_SLOT __gxx_personality_v0|164-131-2-0-22-44-0-0
72456|data|Elf32_Rel <0x283A8, 0x6C16>; R_ARM_JUMP_SLOT gnutls_handshake|168-131-2-0-22-108-0-0
72464|data|Elf32_Rel <0x283AC, 0x2416>; R_ARM_JUMP_SLOT pthread_create|172-131-2-0-22-36-0-0
72472|data|Elf32_Rel <0x283B0, 0x816>; R_ARM_JUMP_SLOT strcmp|176-131-2-0-22-8-0-0
72480|data|Elf32_Rel <0x283B4, 0xC16>; R_ARM_JUMP_SLOT pthread_mutexattr_settype|180-131-2-0-22-12-0-0
72488|data|Elf32_Rel <0x283B8, 0x2D16>; R_ARM_JUMP_SLOT time|184-131-2-0-22-45-0-0
72496|data|Elf32_Rel <0x283BC, 0x2716>; R_ARM_JUMP_SLOT __errno_location|188-131-2-0-22-39-0-0
72504|data|Elf32_Rel <0x283C0, 0x1F16>; R_ARM_JUMP_SLOT strncpy|192-131-2-0-22-31-0-0
72512|data|Elf32_Rel <0x283C4, 0x916>; R_ARM_JUMP_SLOT fflush|196-131-2-0-22-9-0-0
72520|data|Elf32_Rel <0x283C8, 0x7016>; R_ARM_JUMP_SLOT _ZNSs6appendEPKc|200-131-2-0-22-112-0-0
72528|data|Elf32_Rel <0x283CC, 0x1516>; R_ARM_JUMP_SLOT getsockname|204-131-2-0-22-21-0-0
72536|data|Elf32_Rel <0x283D0, 0x7116>; R_ARM_JUMP_SLOT gnutls_record_recv|208-131-2-0-22-113-0-0
72544|data|Elf32_Rel <0x283D4, 0x1616>; R_ARM_JUMP_SLOT __libc_start_main|212-131-2-0-22-22-0-0
72552|data|Elf32_Rel <0x283D8, 0x516>; R_ARM_JUMP_SLOT __gmon_start__|216-131-2-0-22-5-0-0
72560|data|Elf32_Rel <0x283DC, 0x7E16>; R_ARM_JUMP_SLOT __cxa_pure_virtual|220-131-2-0-22-126-0-0
72568|data|Elf32_Rel <0x283E0, 0x2F16>; R_ARM_JUMP_SLOT strchr|224-131-2-0-22-47-0-0
72576|data|Elf32_Rel <0x283E4, 0x3016>; R_ARM_JUMP_SLOT pthread_mutex_unlock|228-131-2-0-22-48-0-0
72584|data|Elf32_Rel <0x283E8, 0x8516>; R_ARM_JUMP_SLOT strdup|232-131-2-0-22-133-0-0
72592|data|Elf32_Rel <0x283EC, 0x3D16>; R_ARM_JUMP_SLOT pipe|236-131-2-0-22-61-0-0
72600|data|Elf32_Rel <0x283F0, 0xD16>; R_ARM_JUMP_SLOT _ZNSs6appendEjc|240-131-2-0-22-13-0-0
72608|code|PUSH            {R3,LR}; _init|8-64-45-233
72612|code|BL              sub_12590|121-2-0-235
72616|code|POP             {R3,PC}|8-128-189-232
72620|code|PUSH            {LR}|4-224-45-229
72624|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x11BBC)|4-224-159-229
72628|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
72632|code|LDR             PC, [LR,#8]!|8-240-190-229
72636|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11BBC|108-102-1-0
72640|code|ADR             R12, 0x11BC8|0-198-143-226
72644|code|ADD             R12, R12, #0x16000|22-202-140-226
72648|code|LDR             PC, [R12,#(_Znwj_ptr - 0x27BC8)]!; operator new(uint)|108-246-188-229
72652|code|ADR             R12, 0x11BD4|0-198-143-226
72656|code|ADD             R12, R12, #0x16000|22-202-140-226
72660|code|LDR             PC, [R12,#(pthread_mutex_lock_ptr - 0x27BD4)]!; __imp_pthread_mutex_lock|100-246-188-229
72664|code|ADR             R12, 0x11BE0|0-198-143-226
72668|code|ADD             R12, R12, #0x16000|22-202-140-226
72672|code|LDR             PC, [R12,#(pthread_mutex_init_ptr - 0x27BE0)]!; __imp_pthread_mutex_init|92-246-188-229
72676|code|ADR             R12, 0x11BEC|0-198-143-226
72680|code|ADD             R12, R12, #0x16000|22-202-140-226
72684|code|LDR             PC, [R12,#(gnutls_set_default_priority_ptr - 0x27BEC)]!; __imp_gnutls_set_default_priority|84-246-188-229
72688|code|ADR             R12, 0x11BF8|0-198-143-226
72692|code|ADD             R12, R12, #0x16000|22-202-140-226
72696|code|LDR             PC, [R12,#(rand_ptr - 0x27BF8)]!; __imp_rand|76-246-188-229
72700|code|ADR             R12, 0x11C04|0-198-143-226
72704|code|ADD             R12, R12, #0x16000|22-202-140-226
72708|code|LDR             PC, [R12,#(gettimeofday_ptr - 0x27C04)]!; __imp_gettimeofday|68-246-188-229
72712|code|ADR             R12, 0x11C10|0-198-143-226
72716|code|ADD             R12, R12, #0x16000|22-202-140-226
72720|code|LDR             PC, [R12,#(_ZNSs12_M_leak_hardEv_ptr - 0x27C10)]!; std::string::_M_leak_hard(void)|60-246-188-229
72724|code|ADR             R12, 0x11C1C|0-198-143-226
72728|code|ADD             R12, R12, #0x16000|22-202-140-226
72732|code|LDR             PC, [R12,#(strcasecmp_ptr - 0x27C1C)]!; __imp_strcasecmp|52-246-188-229
72736|code|ADR             R12, 0x11C28|0-198-143-226
72740|code|ADD             R12, R12, #0x16000|22-202-140-226
72744|code|LDR             PC, [R12,#(fdopen_ptr - 0x27C28)]!; __imp_fdopen|44-246-188-229
72748|code|ADR             R12, 0x11C34|0-198-143-226
72752|code|ADD             R12, R12, #0x16000|22-202-140-226
72756|code|LDR             PC, [R12,#(strtol_ptr - 0x27C34)]!; __imp_strtol|36-246-188-229
72760|code|ADR             R12, 0x11C40|0-198-143-226
72764|code|ADD             R12, R12, #0x16000|22-202-140-226
72768|code|LDR             PC, [R12,#(free_ptr - 0x27C40)]!; __imp_free|28-246-188-229
72772|code|ADR             R12, 0x11C4C|0-198-143-226
72776|code|ADD             R12, R12, #0x16000|22-202-140-226
72780|code|LDR             PC, [R12,#(pthread_mutexattr_init_ptr - 0x27C4C)]!; __imp_pthread_mutexattr_init|20-246-188-229
72784|code|ADR             R12, 0x11C58|0-198-143-226
72788|code|ADD             R12, R12, #0x16000|22-202-140-226
72792|code|LDR             PC, [R12,#(pthread_mutexattr_destroy_ptr - 0x27C58)]!; __imp_pthread_mutexattr_destroy|12-246-188-229
72796|code|ADR             R12, 0x11C64|0-198-143-226
72800|code|ADD             R12, R12, #0x16000|22-202-140-226
72804|code|LDR             PC, [R12,#(_ZSt17__throw_bad_allocv_ptr - 0x27C64)]!; std::__throw_bad_alloc(void)|4-246-188-229
72808|code|ADR             R12, 0x11C70|0-198-143-226
72812|code|ADD             R12, R12, #0x16000|22-202-140-226
72816|code|LDR             PC, [R12,#(strncmp_ptr - 0x27C70)]!; __imp_strncmp|252-245-188-229
72820|code|ADR             R12, 0x11C7C|0-198-143-226
72824|code|ADD             R12, R12, #0x16000|22-202-140-226
72828|code|LDR             PC, [R12,#(regcomp_ptr - 0x27C7C)]!; __imp_regcomp|244-245-188-229
72832|code|ADR             R12, 0x11C88|0-198-143-226
72836|code|ADD             R12, R12, #0x16000|22-202-140-226
72840|code|LDR             PC, [R12,#(__cxa_begin_catch_ptr - 0x27C88)]!; __imp___cxa_begin_catch|236-245-188-229
72844|code|ADR             R12, 0x11C94|0-198-143-226
72848|code|ADD             R12, R12, #0x16000|22-202-140-226
72852|code|LDR             PC, [R12,#(__aeabi_uidivmod_ptr - 0x27C94)]!; __imp___aeabi_uidivmod|228-245-188-229
72856|code|ADR             R12, 0x11CA0|0-198-143-226
72860|code|ADD             R12, R12, #0x16000|22-202-140-226
72864|code|LDR             PC, [R12,#(pthread_join_ptr - 0x27CA0)]!; __imp_pthread_join|220-245-188-229
72868|code|ADR             R12, 0x11CAC|0-198-143-226
72872|code|ADD             R12, R12, #0x16000|22-202-140-226
72876|code|LDR             PC, [R12,#(exit_ptr - 0x27CAC)]!; __imp_exit|212-245-188-229
72880|code|ADR             R12, 0x11CB8|0-198-143-226
72884|code|ADD             R12, R12, #0x16000|22-202-140-226
72888|code|LDR             PC, [R12,#(printf_ptr - 0x27CB8)]!; __imp_printf|204-245-188-229
72892|code|ADR             R12, 0x11CC4|0-198-143-226
72896|code|ADD             R12, R12, #0x16000|22-202-140-226
72900|code|LDR             PC, [R12,#(_ZSt20__throw_length_errorPKc_ptr - 0x27CC4)]!; std::__throw_length_error(char const*)|196-245-188-229
72904|code|ADR             R12, 0x11CD0|0-198-143-226
72908|code|ADD             R12, R12, #0x16000|22-202-140-226
72912|code|LDR             PC, [R12,#(regfree_ptr - 0x27CD0)]!; __imp_regfree|188-245-188-229
72916|code|ADR             R12, 0x11CDC|0-198-143-226
72920|code|ADD             R12, R12, #0x16000|22-202-140-226
72924|code|LDR             PC, [R12,#(puts_ptr - 0x27CDC)]!; __imp_puts|180-245-188-229
72928|code|ADR             R12, 0x11CE8|0-198-143-226
72932|code|ADD             R12, R12, #0x16000|22-202-140-226
72936|code|LDR             PC, [R12,#(gnutls_deinit_ptr - 0x27CE8)]!; __imp_gnutls_deinit|172-245-188-229
72940|code|ADR             R12, 0x11CF4|0-198-143-226
72944|code|ADD             R12, R12, #0x16000|22-202-140-226
72948|code|LDR             PC, [R12,#(gethostbyaddr_ptr - 0x27CF4)]!; __imp_gethostbyaddr|164-245-188-229
72952|code|ADR             R12, 0x11D00|0-198-143-226
72956|code|ADD             R12, R12, #0x16000|22-202-140-226
72960|code|LDR             PC, [R12,#(strtok_ptr - 0x27D00)]!; __imp_strtok|156-245-188-229
72964|code|ADR             R12, 0x11D0C|0-198-143-226
72968|code|ADD             R12, R12, #0x16000|22-202-140-226
72972|code|LDR             PC, [R12,#(perror_ptr - 0x27D0C)]!; __imp_perror|148-245-188-229
72976|code|ADR             R12, 0x11D18|0-198-143-226
72980|code|ADD             R12, R12, #0x16000|22-202-140-226
72984|code|LDR             PC, [R12,#(_ZNSsC1ERKSs_ptr - 0x27D18)]!; std::string::string(std::string const&)|140-245-188-229
72988|code|ADR             R12, 0x11D24|0-198-143-226
72992|code|ADD             R12, R12, #0x16000|22-202-140-226
72996|code|LDR             PC, [R12,#(regexec_ptr - 0x27D24)]!; __imp_regexec|132-245-188-229
73000|code|ADR             R12, 0x11D30|0-198-143-226
73004|code|ADD             R12, R12, #0x16000|22-202-140-226
73008|code|LDR             PC, [R12,#(nanosleep_ptr - 0x27D30)]!; __imp_nanosleep|124-245-188-229
73012|code|ADR             R12, 0x11D3C|0-198-143-226
73016|code|ADD             R12, R12, #0x16000|22-202-140-226
73020|code|LDR             PC, [R12,#(strftime_ptr - 0x27D3C)]!; __imp_strftime|116-245-188-229
73024|code|ADR             R12, 0x11D48|0-198-143-226
73028|code|ADD             R12, R12, #0x16000|22-202-140-226
73032|code|LDR             PC, [R12,#(putchar_ptr - 0x27D48)]!; __imp_putchar|108-245-188-229
73036|code|ADR             R12, 0x11D54|0-198-143-226
73040|code|ADD             R12, R12, #0x16000|22-202-140-226
73044|code|LDR             PC, [R12,#(memset_ptr - 0x27D54)]!; __imp_memset|100-245-188-229
73048|code|ADR             R12, 0x11D60|0-198-143-226
73052|code|ADD             R12, R12, #0x16000|22-202-140-226
73056|code|LDR             PC, [R12,#(snprintf_ptr - 0x27D60)]!; __imp_snprintf|92-245-188-229
73060|code|ADR             R12, 0x11D6C|0-198-143-226
73064|code|ADD             R12, R12, #0x16000|22-202-140-226
73068|code|LDR             PC, [R12,#(_ZNSs7reserveEj_ptr - 0x27D6C)]!; std::string::reserve(uint)|84-245-188-229
73072|code|ADR             R12, 0x11D78|0-198-143-226
73076|code|ADD             R12, R12, #0x16000|22-202-140-226
73080|code|LDR             PC, [R12,#(pthread_mutex_trylock_ptr - 0x27D78)]!; __imp_pthread_mutex_trylock|76-245-188-229
73084|code|ADR             R12, 0x11D84|0-198-143-226
73088|code|ADD             R12, R12, #0x16000|22-202-140-226
73092|code|LDR             PC, [R12,#(close_ptr - 0x27D84)]!; __imp_close|68-245-188-229
73096|code|ADR             R12, 0x11D90|0-198-143-226
73100|code|ADD             R12, R12, #0x16000|22-202-140-226
73104|code|LDR             PC, [R12,#(fopen_ptr - 0x27D90)]!; __imp_fopen|60-245-188-229
73108|code|ADR             R12, 0x11D9C|0-198-143-226
73112|code|ADD             R12, R12, #0x16000|22-202-140-226
73116|code|LDR             PC, [R12,#(_Znaj_ptr - 0x27D9C)]!; operator new[](uint)|52-245-188-229
73120|code|ADR             R12, 0x11DA8|0-198-143-226
73124|code|ADD             R12, R12, #0x16000|22-202-140-226
73128|code|LDR             PC, [R12,#(read_ptr - 0x27DA8)]!; __imp_read|44-245-188-229
73132|code|BX              PC; std::string::_Rep::_M_destroy(std::allocator<char> const&)|120-71
73134|data|ALIGN 4|192-70
73136|code|ADR             R12, 0x11DB8|0-198-143-226
73140|code|ADD             R12, R12, #0x16000|22-202-140-226
73144|code|LDR             PC, [R12,#(_ZNSs4_Rep10_M_destroyERKSaIcE_ptr - 0x27DB8)]!; std::string::_Rep::_M_destroy(std::allocator<char> const&)|32-245-188-229
73148|code|ADR             R12, 0x11DC4|0-198-143-226
73152|code|ADD             R12, R12, #0x16000|22-202-140-226
73156|code|LDR             PC, [R12,#(abort_ptr - 0x27DC4)]!; __imp_abort|24-245-188-229
73160|code|ADR             R12, 0x11DD0|0-198-143-226
73164|code|ADD             R12, R12, #0x16000|22-202-140-226
73168|code|LDR             PC, [R12,#(gnutls_check_version_ptr - 0x27DD0)]!; __imp_gnutls_check_version|16-245-188-229
73172|code|ADR             R12, 0x11DDC|0-198-143-226
73176|code|ADD             R12, R12, #0x16000|22-202-140-226
73180|code|LDR             PC, [R12,#(poll_ptr - 0x27DDC)]!; __imp_poll|8-245-188-229
73184|code|ADR             R12, 0x11DE8|0-198-143-226
73188|code|ADD             R12, R12, #0x16000|22-202-140-226
73192|code|LDR             PC, [R12,#(gnutls_global_init_ptr - 0x27DE8)]!; __imp_gnutls_global_init|0-245-188-229
73196|code|ADR             R12, 0x11DF4|0-198-143-226
73200|code|ADD             R12, R12, #0x16000|22-202-140-226
73204|code|LDR             PC, [R12,#(memmove_ptr - 0x27DF4)]!; __imp_memmove|248-244-188-229
73208|code|ADR             R12, 0x11E00|0-198-143-226
73212|code|ADD             R12, R12, #0x16000|22-202-140-226
73216|code|LDR             PC, [R12,#(gethostbyname_ptr - 0x27E00)]!; __imp_gethostbyname|240-244-188-229
73220|code|ADR             R12, 0x11E0C|0-198-143-226
73224|code|ADD             R12, R12, #0x16000|22-202-140-226
73228|code|LDR             PC, [R12,#(localtime_ptr - 0x27E0C)]!; __imp_localtime|232-244-188-229
73232|code|ADR             R12, 0x11E18|0-198-143-226
73236|code|ADD             R12, R12, #0x16000|22-202-140-226
73240|code|LDR             PC, [R12,#(gmtime_r_ptr - 0x27E18)]!; __imp_gmtime_r|224-244-188-229
73244|code|ADR             R12, 0x11E24|0-198-143-226
73248|code|ADD             R12, R12, #0x16000|22-202-140-226
73252|code|LDR             PC, [R12,#(inet_ntoa_ptr - 0x27E24)]!; __imp_inet_ntoa|216-244-188-229
73256|code|ADR             R12, 0x11E30|0-198-143-226
73260|code|ADD             R12, R12, #0x16000|22-202-140-226
73264|code|LDR             PC, [R12,#(strcpy_ptr - 0x27E30)]!; __imp_strcpy|208-244-188-229
73268|code|ADR             R12, 0x11E3C|0-198-143-226
73272|code|ADD             R12, R12, #0x16000|22-202-140-226
73276|code|LDR             PC, [R12,#(pthread_attr_setdetachstate_ptr - 0x27E3C)]!; __imp_pthread_attr_setdetachstate|200-244-188-229
73280|code|BX              PC; operator delete(void *)|120-71
73282|data|ALIGN 4|192-70
73284|code|ADR             R12, 0x11E4C|0-198-143-226
73288|code|ADD             R12, R12, #0x16000|22-202-140-226
73292|code|LDR             PC, [R12,#(_ZdlPv_ptr - 0x27E4C)]!; operator delete(void *)|188-244-188-229
73296|code|ADR             R12, 0x11E58|0-198-143-226
73300|code|ADD             R12, R12, #0x16000|22-202-140-226
73304|code|LDR             PC, [R12,#(getopt_ptr - 0x27E58)]!; __imp_getopt|180-244-188-229
73308|code|ADR             R12, 0x11E64|0-198-143-226
73312|code|ADD             R12, R12, #0x16000|22-202-140-226
73316|code|LDR             PC, [R12,#(__pthread_key_create_ptr - 0x27E64)]!; __imp___pthread_key_create|172-244-188-229
73320|code|ADR             R12, 0x11E70|0-198-143-226
73324|code|ADD             R12, R12, #0x16000|22-202-140-226
73328|code|LDR             PC, [R12,#(bind_ptr - 0x27E70)]!; __imp_bind|164-244-188-229
73332|code|ADR             R12, 0x11E7C|0-198-143-226
73336|code|ADD             R12, R12, #0x16000|22-202-140-226
73340|code|LDR             PC, [R12,#(pthread_mutex_destroy_ptr - 0x27E7C)]!; __imp_pthread_mutex_destroy|156-244-188-229
73344|code|ADR             R12, 0x11E88|0-198-143-226
73348|code|ADD             R12, R12, #0x16000|22-202-140-226
73352|code|LDR             PC, [R12,#(gnutls_transport_set_ptr_ptr - 0x27E88)]!; __imp_gnutls_transport_set_ptr|148-244-188-229
73356|code|ADR             R12, 0x11E94|0-198-143-226
73360|code|ADD             R12, R12, #0x16000|22-202-140-226
73364|code|LDR             PC, [R12,#(_ZNSs6appendERKSs_ptr - 0x27E94)]!; std::string::append(std::string const&)|140-244-188-229
73368|code|ADR             R12, 0x11EA0|0-198-143-226
73372|code|ADD             R12, R12, #0x16000|22-202-140-226
73376|code|LDR             PC, [R12,#(gnutls_record_send_ptr - 0x27EA0)]!; __imp_gnutls_record_send|132-244-188-229
73380|code|ADR             R12, 0x11EAC|0-198-143-226
73384|code|ADD             R12, R12, #0x16000|22-202-140-226
73388|code|LDR             PC, [R12,#(__cxa_end_cleanup_ptr - 0x27EAC)]!; __imp___cxa_end_cleanup|124-244-188-229
73392|code|ADR             R12, 0x11EB8|0-198-143-226
73396|code|ADD             R12, R12, #0x16000|22-202-140-226
73400|code|LDR             PC, [R12,#(_ZNSs6appendEPKcj_ptr - 0x27EB8)]!; std::string::append(char const*,uint)|116-244-188-229
73404|code|ADR             R12, 0x11EC4|0-198-143-226
73408|code|ADD             R12, R12, #0x16000|22-202-140-226
73412|code|LDR             PC, [R12,#(socket_ptr - 0x27EC4)]!; __imp_socket|108-244-188-229
73416|code|ADR             R12, 0x11ED0|0-198-143-226
73420|code|ADD             R12, R12, #0x16000|22-202-140-226
73424|code|LDR             PC, [R12,#(_ZNSsC1EPKcRKSaIcE_ptr - 0x27ED0)]!; std::string::string(char const*,std::allocator<char> const&)|100-244-188-229
73428|code|ADR             R12, 0x11EDC|0-198-143-226
73432|code|ADD             R12, R12, #0x16000|22-202-140-226
73436|code|LDR             PC, [R12,#(gnutls_priority_set_direct_ptr - 0x27EDC)]!; __imp_gnutls_priority_set_direct|92-244-188-229
73440|code|ADR             R12, 0x11EE8|0-198-143-226
73444|code|ADD             R12, R12, #0x16000|22-202-140-226
73448|code|LDR             PC, [R12,#(gnutls_anon_allocate_client_credentials_ptr - 0x27EE8)]!; __imp_gnutls_anon_allocate_client_credentials|84-244-188-229
73452|code|ADR             R12, 0x11EF4|0-198-143-226
73456|code|ADD             R12, R12, #0x16000|22-202-140-226
73460|code|LDR             PC, [R12,#(_ZNSs6assignERKSs_ptr - 0x27EF4)]!; std::string::assign(std::string const&)|76-244-188-229
73464|code|ADR             R12, 0x11F00|0-198-143-226
73468|code|ADD             R12, R12, #0x16000|22-202-140-226
73472|code|LDR             PC, [R12,#(pthread_attr_destroy_ptr - 0x27F00)]!; __imp_pthread_attr_destroy|68-244-188-229
73476|code|ADR             R12, 0x11F0C|0-198-143-226
73480|code|ADD             R12, R12, #0x16000|22-202-140-226
73484|code|LDR             PC, [R12,#(sleep_ptr - 0x27F0C)]!; __imp_sleep|60-244-188-229
73488|code|ADR             R12, 0x11F18|0-198-143-226
73492|code|ADD             R12, R12, #0x16000|22-202-140-226
73496|code|LDR             PC, [R12,#(__aeabi_idivmod_ptr - 0x27F18)]!; __imp___aeabi_idivmod|52-244-188-229
73500|code|ADR             R12, 0x11F24|0-198-143-226
73504|code|ADD             R12, R12, #0x16000|22-202-140-226
73508|code|LDR             PC, [R12,#(pthread_attr_setstacksize_ptr - 0x27F24)]!; __imp_pthread_attr_setstacksize|44-244-188-229
73512|code|ADR             R12, 0x11F30|0-198-143-226
73516|code|ADD             R12, R12, #0x16000|22-202-140-226
73520|code|LDR             PC, [R12,#(connect_ptr - 0x27F30)]!; __imp_connect|36-244-188-229
73524|code|ADR             R12, 0x11F3C|0-198-143-226
73528|code|ADD             R12, R12, #0x16000|22-202-140-226
73532|code|LDR             PC, [R12,#(sigaction_ptr - 0x27F3C)]!; __imp_sigaction|28-244-188-229
73536|code|ADR             R12, 0x11F48|0-198-143-226
73540|code|ADD             R12, R12, #0x16000|22-202-140-226
73544|code|LDR             PC, [R12,#(pthread_attr_init_ptr - 0x27F48)]!; __imp_pthread_attr_init|20-244-188-229
73548|code|ADR             R12, 0x11F54|0-198-143-226
73552|code|ADD             R12, R12, #0x16000|22-202-140-226
73556|code|LDR             PC, [R12,#(gnutls_anon_free_client_credentials_ptr - 0x27F54)]!; __imp_gnutls_anon_free_client_credentials|12-244-188-229
73560|code|ADR             R12, 0x11F60|0-198-143-226
73564|code|ADD             R12, R12, #0x16000|22-202-140-226
73568|code|LDR             PC, [R12,#(gnutls_credentials_set_ptr - 0x27F60)]!; __imp_gnutls_credentials_set|4-244-188-229
73572|code|ADR             R12, 0x11F6C|0-198-143-226
73576|code|ADD             R12, R12, #0x16000|22-202-140-226
73580|code|LDR             PC, [R12,#(_ZNSs6assignEPKc_ptr - 0x27F6C)]!; std::string::assign(char const*)|252-243-188-229
73584|code|ADR             R12, 0x11F78|0-198-143-226
73588|code|ADD             R12, R12, #0x16000|22-202-140-226
73592|code|LDR             PC, [R12,#(fgets_ptr - 0x27F78)]!; __imp_fgets|244-243-188-229
73596|code|ADR             R12, 0x11F84|0-198-143-226
73600|code|ADD             R12, R12, #0x16000|22-202-140-226
73604|code|LDR             PC, [R12,#(gnutls_bye_ptr - 0x27F84)]!; __imp_gnutls_bye|236-243-188-229
73608|code|ADR             R12, 0x11F90|0-198-143-226
73612|code|ADD             R12, R12, #0x16000|22-202-140-226
73616|code|LDR             PC, [R12,#(__cxa_rethrow_ptr - 0x27F90)]!; __imp___cxa_rethrow|228-243-188-229
73620|code|ADR             R12, 0x11F9C|0-198-143-226
73624|code|ADD             R12, R12, #0x16000|22-202-140-226
73628|code|LDR             PC, [R12,#(fwrite_ptr - 0x27F9C)]!; __imp_fwrite|220-243-188-229
73632|code|ADR             R12, 0x11FA8|0-198-143-226
73636|code|ADD             R12, R12, #0x16000|22-202-140-226
73640|code|LDR             PC, [R12,#(memcpy_ptr - 0x27FA8)]!; __imp_memcpy|212-243-188-229
73644|code|ADR             R12, 0x11FB4|0-198-143-226
73648|code|ADD             R12, R12, #0x16000|22-202-140-226
73652|code|LDR             PC, [R12,#(malloc_ptr - 0x27FB4)]!; __imp_malloc|204-243-188-229
73656|code|ADR             R12, 0x11FC0|0-198-143-226
73660|code|ADD             R12, R12, #0x16000|22-202-140-226
73664|code|LDR             PC, [R12,#(strlen_ptr - 0x27FC0)]!; __imp_strlen|196-243-188-229
73668|code|ADR             R12, 0x11FCC|0-198-143-226
73672|code|ADD             R12, R12, #0x16000|22-202-140-226
73676|code|LDR             PC, [R12,#(gnutls_init_ptr - 0x27FCC)]!; __imp_gnutls_init|188-243-188-229
73680|code|ADR             R12, 0x11FD8|0-198-143-226
73684|code|ADD             R12, R12, #0x16000|22-202-140-226
73688|code|LDR             PC, [R12,#(fprintf_ptr - 0x27FD8)]!; __imp_fprintf|180-243-188-229
73692|code|ADR             R12, 0x11FE4|0-198-143-226
73696|code|ADD             R12, R12, #0x16000|22-202-140-226
73700|code|LDR             PC, [R12,#(fclose_ptr - 0x27FE4)]!; __imp_fclose|172-243-188-229
73704|code|ADR             R12, 0x11FF0|0-198-143-226
73708|code|ADD             R12, R12, #0x16000|22-202-140-226
73712|code|LDR             PC, [R12,#(write_ptr - 0x27FF0)]!; __imp_write|164-243-188-229
73716|code|ADR             R12, 0x11FFC|0-198-143-226
73720|code|ADD             R12, R12, #0x16000|22-202-140-226
73724|code|LDR             PC, [R12,#(sprintf_ptr - 0x27FFC)]!; __imp_sprintf|156-243-188-229
73728|code|ADR             R12, 0x12008|0-198-143-226
73732|code|ADD             R12, R12, #0x16000|22-202-140-226
73736|code|LDR             PC, [R12,#(__cxa_end_catch_ptr - 0x28008)]!; __imp___cxa_end_catch|148-243-188-229
73740|code|ADR             R12, 0x12014|0-198-143-226
73744|code|ADD             R12, R12, #0x16000|22-202-140-226
73748|code|LDR             PC, [R12,#(random_ptr - 0x28014)]!; __imp_random|140-243-188-229
73752|code|ADR             R12, 0x12020|0-198-143-226
73756|code|ADD             R12, R12, #0x16000|22-202-140-226
73760|code|LDR             PC, [R12,#(__gxx_personality_v0_ptr - 0x28020)]!; __imp___gxx_personality_v0|132-243-188-229
73764|code|ADR             R12, 0x1202C|0-198-143-226
73768|code|ADD             R12, R12, #0x16000|22-202-140-226
73772|code|LDR             PC, [R12,#(gnutls_handshake_ptr - 0x2802C)]!; __imp_gnutls_handshake|124-243-188-229
73776|code|ADR             R12, 0x12038|0-198-143-226
73780|code|ADD             R12, R12, #0x16000|22-202-140-226
73784|code|LDR             PC, [R12,#(pthread_create_ptr - 0x28038)]!; __imp_pthread_create|116-243-188-229
73788|code|ADR             R12, 0x12044|0-198-143-226
73792|code|ADD             R12, R12, #0x16000|22-202-140-226
73796|code|LDR             PC, [R12,#(strcmp_ptr - 0x28044)]!; __imp_strcmp|108-243-188-229
73800|code|ADR             R12, 0x12050|0-198-143-226
73804|code|ADD             R12, R12, #0x16000|22-202-140-226
73808|code|LDR             PC, [R12,#(pthread_mutexattr_settype_ptr - 0x28050)]!; __imp_pthread_mutexattr_settype|100-243-188-229
73812|code|ADR             R12, 0x1205C|0-198-143-226
73816|code|ADD             R12, R12, #0x16000|22-202-140-226
73820|code|LDR             PC, [R12,#(time_ptr - 0x2805C)]!; __imp_time|92-243-188-229
73824|code|ADR             R12, 0x12068|0-198-143-226
73828|code|ADD             R12, R12, #0x16000|22-202-140-226
73832|code|LDR             PC, [R12,#(__errno_location_ptr - 0x28068)]!; __imp___errno_location|84-243-188-229
73836|code|ADR             R12, 0x12074|0-198-143-226
73840|code|ADD             R12, R12, #0x16000|22-202-140-226
73844|code|LDR             PC, [R12,#(strncpy_ptr - 0x28074)]!; __imp_strncpy|76-243-188-229
73848|code|ADR             R12, 0x12080|0-198-143-226
73852|code|ADD             R12, R12, #0x16000|22-202-140-226
73856|code|LDR             PC, [R12,#(fflush_ptr - 0x28080)]!; __imp_fflush|68-243-188-229
73860|code|ADR             R12, 0x1208C|0-198-143-226
73864|code|ADD             R12, R12, #0x16000|22-202-140-226
73868|code|LDR             PC, [R12,#(_ZNSs6appendEPKc_ptr - 0x2808C)]!; std::string::append(char const*)|60-243-188-229
73872|code|ADR             R12, 0x12098|0-198-143-226
73876|code|ADD             R12, R12, #0x16000|22-202-140-226
73880|code|LDR             PC, [R12,#(getsockname_ptr - 0x28098)]!; __imp_getsockname|52-243-188-229
73884|code|ADR             R12, 0x120A4|0-198-143-226
73888|code|ADD             R12, R12, #0x16000|22-202-140-226
73892|code|LDR             PC, [R12,#(gnutls_record_recv_ptr - 0x280A4)]!; __imp_gnutls_record_recv|44-243-188-229
73896|code|ADR             R12, 0x120B0|0-198-143-226
73900|code|ADD             R12, R12, #0x16000|22-202-140-226
73904|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x280B0)]!; __imp___libc_start_main|36-243-188-229
73908|code|ADR             R12, 0x120BC|0-198-143-226
73912|code|ADD             R12, R12, #0x16000|22-202-140-226
73916|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x280BC)]!; __imp___gmon_start__|28-243-188-229
73920|code|ADR             R12, 0x120C8|0-198-143-226
73924|code|ADD             R12, R12, #0x16000|22-202-140-226
73928|code|LDR             PC, [R12,#(__cxa_pure_virtual_ptr - 0x280C8)]!; __imp___cxa_pure_virtual|20-243-188-229
73932|code|ADR             R12, 0x120D4|0-198-143-226
73936|code|ADD             R12, R12, #0x16000|22-202-140-226
73940|code|LDR             PC, [R12,#(strchr_ptr - 0x280D4)]!; __imp_strchr|12-243-188-229
73944|code|ADR             R12, 0x120E0|0-198-143-226
73948|code|ADD             R12, R12, #0x16000|22-202-140-226
73952|code|LDR             PC, [R12,#(pthread_mutex_unlock_ptr - 0x280E0)]!; __imp_pthread_mutex_unlock|4-243-188-229
73956|code|ADR             R12, 0x120EC|0-198-143-226
73960|code|ADD             R12, R12, #0x16000|22-202-140-226
73964|code|LDR             PC, [R12,#(strdup_ptr - 0x280EC)]!; __imp_strdup|252-242-188-229
73968|code|ADR             R12, 0x120F8|0-198-143-226
73972|code|ADD             R12, R12, #0x16000|22-202-140-226
73976|code|LDR             PC, [R12,#(pipe_ptr - 0x280F8)]!; __imp_pipe|244-242-188-229
73980|code|ADR             R12, 0x12104|0-198-143-226
73984|code|ADD             R12, R12, #0x16000|22-202-140-226
73988|code|LDR             PC, [R12,#(_ZNSs6appendEjc_ptr - 0x28104)]!; std::string::append(uint,char)|236-242-188-229
73992|code|MOV             R3, #0x11E5C|65-246-92-99-192-242-1-3
74000|code|PUSH            {LR}|0-181
74002|code|CBZ             R3, loc_12134|123-177
74004|code|ADD.W           R2, R0, #8|0-241-8-2
74008|code|DMB.W           SY|191-243-95-143
74012|code|LDREX.W         R3, [R2]|82-232-0-63
74016|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
74020|code|STREX.W         R12, LR, [R2]|66-232-0-236
74024|code|CMP.W           R12, #0|188-241-0-15
74028|code|BNE             loc_1211C|246-209
74030|code|DMB.W           SY|191-243-95-143
74034|code|B               loc_1213A|2-224
74036|code|LDR             R3, [R0,#8]|131-104
74038|code|SUBS            R2, R3, #1|90-30
74040|code|STR             R2, [R0,#8]|130-96
74042|code|CMP             R3, #0|0-43
74044|code|BGT             locret_12146|3-220
74046|code|POP.W           {LR}|93-248-4-235
74050|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-51-190
74054|code|POP.W           {PC}|93-248-4-251
74058|data|ALIGN 4|0-191
74060|code|PUSH.W          {R4-R11,LR}|45-233-240-79
74064|code|SUB.W           SP, SP, #0x1220|173-245-145-93
74068|code|SUB             SP, SP, #0x14|133-176
74070|code|MOV             R5, R0|5-70
74072|code|MOV             R4, R1|12-70
74074|code|BLX             gnutls_global_init|255-247-66-238
74078|code|MOV             R0, #0x17140|71-242-64-16-192-242-1-0
74086|code|BLX             gnutls_check_version|255-247-48-238
74090|code|CMP             R0, #0|0-40
74092|code|BEQ.W           loc_12534|0-240-226-129
74096|code|MOVS            R6, #0|0-38
74098|code|MOVW            R7, #0x8484|72-242-132-71
74102|code|MOV             R11, R6|179-70
74104|code|MOV             R10, R6|178-70
74106|code|MOVT.W          R7, #2|192-242-2-7
74110|code|MOV.W           R9, #0xA|79-240-10-9
74114|code|MOVS            R3, #0x19|25-35
74116|code|MOV.W           R8, #1|79-240-1-8
74120|code|STR             R3, [SP,#0x1258+var_120C]|19-147
74122|code|MOVS            R3, #2|2-35
74124|code|STR             R6, [SP,#0x1258+var_1210]|18-150
74126|code|STR             R6, [SP,#0x1258+var_1208]|20-150
74128|code|STR             R6, [SP,#0x1258+var_1228]|12-150
74130|code|STR             R6, [SP,#0x1258+var_1214]|17-150
74132|code|STR             R6, [SP,#0x1258+var_1218]|16-150
74134|code|STR             R6, [SP,#0x1258+var_1220]|14-150
74136|code|STR.W           R8, [SP,#0x1258+var_1224]|205-248-52-128
74140|code|STR             R3, [SP,#0x1258+var_121C]|15-147
74142|code|MOVW            R2, #0x7180; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|71-242-128-18
74146|code|MOV             R0, R5; argc|40-70
74148|code|MOVT.W          R2, #1; shortopts|192-242-1-2
74152|code|MOV             R1, R4; argv|33-70
74154|code|BLX             getopt|255-247-82-238
74158|code|ADDS            R3, R0, #1|67-28
74160|code|BEQ.W           loc_12386|0-240-233-128
74164|code|UXTB            R0, R0|192-178
74166|code|SUBS            R0, #0x3A ; ':'|58-56
74168|code|CMP             R0, #0x40; switch 65 cases|64-40
74170|code|BHI             def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|240-216
74172|code|ADR             R3, jpt_121BE|1-163
74174|code|LDR.W           PC, [R3,R0,LSL#2]; switch jump|83-248-32-240
74178|data|ALIGN 4|0-191
74180|data|DCD loc_12368+1, def_121BE+1, def_121BE+1, def_121BE+1; jump table for switch statement|105-35-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-105-35-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-99-35-1-0-85-35-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-201-34-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-79-35-1-0-53-35-1-0-39-35-1-0-159-33-1-0-159-33-1-0-33-35-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-27-35-1-0-13-35-1-0-159-33-1-0-159-33-1-0-253-34-1-0-159-33-1-0-239-34-1-0-225-34-1-0-211-34-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-159-33-1-0-205-34-1-0
74440|code|MOVS            R3, #1; jumptable 000121BE case 32|1-35
74442|code|STR             R3, [SP,#0x1258+var_1208]|20-147
74444|code|LDR             R3, [R7]; jumptable 000121BE case 64|59-104
74446|code|STR             R3, [SP,#0x1258+var_1228]|12-147
74448|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|101-231
74450|code|LDR             R0, [R7]; jumptable 000121BE case 58|56-104
74452|code|MOVS            R1, #0; endptr|0-33
74454|code|MOVS            R2, #0xA; base|10-34
74456|code|BLX             strtol|255-247-168-236
74460|code|STR             R0, [SP,#0x1258+var_1224]|13-144
74462|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|94-231
74464|code|LDR             R0, [R7]; jumptable 000121BE case 57|56-104
74466|code|MOVS            R1, #0; endptr|0-33
74468|code|MOVS            R2, #0xA; base|10-34
74470|code|BLX             strtol|255-247-162-236
74474|code|MOV             R6, R0|6-70
74476|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|87-231
74478|code|LDR             R0, [R7]; jumptable 000121BE case 56|56-104
74480|code|MOVS            R1, #0; endptr|0-33
74482|code|MOVS            R2, #0xA; base|10-34
74484|code|BLX             strtol|255-247-154-236
74488|code|STR             R0, [SP,#0x1258+var_1220]|14-144
74490|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|80-231
74492|code|LDR             R0, [R7]; jumptable 000121BE case 54|56-104
74494|code|MOVS            R1, #0; endptr|0-33
74496|code|MOVS            R2, #0xA; base|10-34
74498|code|BLX             strtol|255-247-148-236
74502|code|UXTH            R3, R0|131-178
74504|code|STR             R3, [SP,#0x1258+var_120C]|19-147
74506|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|72-231
74508|code|LDR             R0, [R7]; jumptable 000121BE case 51|56-104
74510|code|MOVS            R1, #0; endptr|0-33
74512|code|MOVS            R2, #0xA; base|10-34
74514|code|BLX             strtol|255-247-140-236
74518|code|MOV             R9, R0|129-70
74520|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|65-231
74522|code|LDR             R3, [R7]; jumptable 000121BE case 50|59-104
74524|code|STR             R3, [SP,#0x1258+var_1218]|16-147
74526|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|62-231
74528|code|LDR.W           R11, [R7]; jumptable 000121BE case 44|215-248-0-176
74532|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|59-231
74534|code|LDR             R0, [R7]; jumptable 000121BE case 41|56-104
74536|code|MOVS            R1, #0; endptr|0-33
74538|code|MOVS            R2, #0xA; base|10-34
74540|code|BLX             strtol|255-247-126-236
74544|code|MOV             R8, R0|128-70
74546|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|52-231
74548|code|LDR             R3, [R7]; jumptable 000121BE case 40|59-104
74550|code|MOV             R1, #aNetscape; s2|71-242-104-17-192-242-1-1
74558|code|MOV             R0, R3; s1|24-70
74560|code|STR             R3, [SP,#0x1258+s1]|21-147
74562|code|BLX             strcasecmp|255-247-104-236
74566|code|LDR             R3, [SP,#0x1258+s1]|21-155
74568|code|CBNZ            R0, loc_1236C|128-185
74570|code|STR             R0, [SP,#0x1258+var_121C]|15-144
74572|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|39-231
74574|code|MOVS            R3, #1; jumptable 000121BE case 39|1-35
74576|code|STR             R3, [SP,#0x1258+var_1214]|17-147
74578|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|36-231
74580|code|LDR             R0, [R7]; jumptable 000121BE case 19|56-104
74582|code|MOVS            R1, #0; endptr|0-33
74584|code|MOVS            R2, #0xA; base|10-34
74586|code|BLX             strtol|255-247-104-236
74590|code|MOV             R10, R0|130-70
74592|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|29-231
74594|code|MOVS            R3, #1; jumptable 000121BE case 18|1-35
74596|code|STR             R3, [SP,#0x1258+var_1210]|18-147
74598|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|26-231
74600|code|BL              sub_1265C; jumptable 000121BE cases 0,5|0-240-120-249
74604|code|MOVW            R1, #0x7174|71-242-116-17
74608|code|MOV             R0, R3; s1|24-70
74610|code|MOVT.W          R1, #1; s2|192-242-1-1
74614|code|BLX             strcasecmp|255-247-78-236
74618|code|LDR             R3, [SP,#0x1258+var_121C]|15-155
74620|code|CMP             R0, #0|0-40
74622|code|IT EQ|8-191
74624|code|MOVEQ           R3, #1|1-35
74626|code|STR             R3, [SP,#0x1258+var_121C]|15-147
74628|code|B               def_121BE; jumptable 000121BE default case, cases 1-4,6-17,20-31,33-38,42,43,45-49,52,53,55,59-63|11-231
74630|code|CMP.W           R9, #0xA000|185-245-32-79
74634|code|ITE LE|212-191
74636|code|MOVLE           R3, #0|0-35
74638|code|MOVGT           R3, #1|1-35
74640|code|ORRS.W          R3, R3, R10,LSR#31|83-234-218-115
74644|code|BNE             loc_12368; jumptable 000121BE cases 0,5|232-209
74646|code|CMP             R10, R9|202-69
74648|code|BGT             loc_12368; jumptable 000121BE cases 0,5|230-220
74650|code|LDR             R3, [SP,#0x1258+var_1224]|13-155
74652|code|SUBS            R3, #1|1-59
74654|code|CMP.W           R3, #0x190|179-245-200-127
74658|code|BCS             loc_12368; jumptable 000121BE cases 0,5|225-210
74660|code|CMP.W           R8, #0xFFFFFFFF|184-241-255-63
74664|code|BLT             loc_12368; jumptable 000121BE cases 0,5|222-219
74666|code|LDR             R3, [SP,#0x1258+var_1220]|14-155
74668|code|LSRS            R2, R3, #0x1F|218-15
74670|code|BNE             loc_12368; jumptable 000121BE cases 0,5|219-209
74672|code|CMP             R6, #0x64 ; 'd'|100-46
74674|code|BHI             loc_12368; jumptable 000121BE cases 0,5|217-216
74676|code|MOV             R7, #0x28450|72-242-80-71-192-242-2-7
74684|code|LDR             R3, [R7]|59-104
74686|code|ADDS            R1, R3, #2|153-28
74688|code|CMP             R1, R5|169-66
74690|code|BNE             loc_12368; jumptable 000121BE cases 0,5|209-209
74692|code|ADDS            R3, #1|1-51
74694|code|ADD             R0, SP, #0x1258+var_11F4|25-168
74696|code|LDR.W           R1, [R4,R3,LSL#2]|84-248-35-16
74700|code|MOV             R3, R2|19-70
74702|code|BL              sub_12804|0-240-25-250
74706|code|CMP.W           R11, #0|187-241-0-15
74710|code|BEQ             loc_12464|69-208
74712|code|MOVS            R0, #0x14; unsigned int|20-32
74714|code|BLX             _Znwj; operator new(uint)|255-247-242-235
74718|code|MOVS            R2, #0|0-34
74720|code|MOV             R1, R11|89-70
74722|code|MOV             R3, R2|19-70
74724|code|STR             R0, [SP,#0x1258+s1]|21-144
74726|code|BL              sub_12804|0-240-13-250
74730|code|ADD             R0, SP, #0x1258+pipedes; pipedes|23-168
74732|code|BLX             pipe|255-247-128-238
74736|code|MOV             R5, R0|5-70
74738|code|CBZ             R0, loc_12414|120-177
74740|code|MOV             R0, #aCanTCreatePipe; s|71-242-156-16-192-242-1-0
74748|code|BLX             puts|255-247-106-236
74752|code|MOVS            R4, #2|2-36
74754|code|ADD             R0, SP, #0x1258+var_11F4|25-168
74756|code|BL              sub_12688|0-240-64-249
74760|code|MOV             R0, R4|32-70
74762|code|ADD.W           SP, SP, #0x1220|13-245-145-93
74766|code|ADD             SP, SP, #0x14|5-176
74768|code|POP.W           {R4-R11,PC}|189-232-240-143
74772|code|MOV             R1, R0; c|1-70
74774|code|MOVS            R2, #0x8C; n|140-34
74776|code|ADD             R0, SP, #0x1258+s; s|36-168
74778|code|BLX             memset|255-247-152-236
74782|code|MOV             R2, R5; oact|42-70
74784|code|ADD             R1, SP, #0x1258+s; act|36-169
74786|code|MOVS            R0, #0xD; sig|13-32
74788|code|MOVS            R3, #1|1-35
74790|code|STR             R3, [SP,#0x1258+s]|36-147
74792|code|BLX             sigaction|255-247-132-237
74796|code|CBNZ            R0, loc_12456|152-185
74798|code|MOV             R2, R0; oact|2-70
74800|code|MOVW            R3, #0x2641|66-242-65-99
74804|code|MOVS            R0, #2; sig|2-32
74806|code|ADD             R1, SP, #0x1258+s; act|36-169
74808|code|MOVT.W          R3, #1|192-242-1-3
74812|code|STR             R3, [SP,#0x1258+s]|36-147
74814|code|MOVS            R3, #4|4-35
74816|code|STR             R3, [SP,#0x1258+var_1144]|69-147
74818|code|BLX             sigaction|255-247-120-237
74822|code|CBZ             R0, loc_1246A|128-177
74824|code|MOV             R0, #aCanTHandleSigi; s|71-242-200-16-192-242-1-0
74832|code|BLX             puts|255-247-64-236
74836|code|B               loc_12400|212-231
74838|code|MOV             R0, #aCanTBlockSigpi; s|71-242-176-16-192-242-1-0
74846|code|BLX             puts|255-247-58-236
74850|code|B               loc_12400|205-231
74852|code|STR.W           R11, [SP,#0x1258+s1]|205-248-84-176
74856|code|B               loc_123EA|191-231
74858|code|MOV             R0, #aTimeMessagesDa; s|71-242-224-16-192-242-1-0
74866|code|BLX             puts|255-247-48-236
74870|code|ADD.W           R11, SP, #0x1258+var_11E0|13-241-120-11
74874|code|MOVW            R1, #0x721C|71-242-28-33
74878|code|MOVS            R3, #0|0-35
74880|code|LDR             R2, [SP,#0x1258+var_1214]|17-154
74882|code|MOV             R0, R11|88-70
74884|code|STR             R3, [SP,#0x1258+var_1258]|0-147
74886|code|MOVT.W          R1, #1|192-242-1-1
74890|code|BL              sub_14158|1-240-101-254
74894|code|LDR             R3, [SP,#0x1258+var_1228]|12-155
74896|code|CMP             R3, #0|0-43
74898|code|BEQ             loc_12510|61-208
74900|code|MOVS            R0, #0x18; unsigned int|24-32
74902|code|BLX             _Znwj; operator new(uint)|255-247-148-235
74906|code|MOVS            R2, #0|0-34
74908|code|LDR             R1, [SP,#0x1258+var_1228]|12-153
74910|code|LDR             R3, [SP,#0x1258+var_1208]|20-155
74912|code|MOV             R5, R0|5-70
74914|code|STR             R2, [SP,#0x1258+var_1258]|0-146
74916|code|BL              sub_14158|1-240-88-254
74920|code|LDR             R2, [R7]|58-104
74922|code|ADD             R3, SP, #0x1258+var_11F4|25-171
74924|code|LDR             R1, [SP,#0x1258+s1]|21-153
74926|code|ADD             R0, SP, #0x1258+var_113C|71-168
74928|code|STR             R3, [SP,#0x1258+var_1258]|0-147
74930|code|LDR             R3, [SP,#0x1258+var_1218]|16-155
74932|code|STR             R1, [SP,#0x1258+var_1254]|1-145
74934|code|MOVW            R1, #0x84C0|72-242-192-65
74938|code|LDR.W           R2, [R4,R2,LSL#2]|84-248-34-32
74942|code|MOVT.W          R1, #2|192-242-2-1
74946|code|LDR             R4, [SP,#0x1258+var_1224]|13-156
74948|code|STR.W           R10, [SP,#0x1258+var_1250]|205-248-8-160
74952|code|STR.W           R9, [SP,#0x1258+var_124C]|205-248-12-144
74956|code|STR             R4, [SP,#0x1258+var_1244]|5-148
74958|code|LDR             R4, [SP,#0x1258+var_121C]|15-156
74960|code|STR.W           R8, [SP,#0x1258+var_1248]|205-248-16-128
74964|code|STR.W           R11, [SP,#0x1258+var_1240]|205-248-24-176
74968|code|STR             R4, [SP,#0x1258+var_123C]|7-148
74970|code|LDR             R4, [SP,#0x1258+var_1210]|18-156
74972|code|STR             R6, [SP,#0x1258+var_1234]|9-150
74974|code|STR             R5, [SP,#0x1258+var_122C]|11-149
74976|code|STR             R4, [SP,#0x1258+var_1238]|8-148
74978|code|LDR             R4, [SP,#0x1258+var_120C]|19-156
74980|code|STR             R4, [SP,#0x1258+var_1230]|10-148
74982|code|BL              sub_16A7C|4-240-201-250
74986|code|ADD             R0, SP, #0x1258+var_113C|71-168
74988|code|LDR             R1, [SP,#0x1258+var_1220]|14-153
74990|code|BL              sub_13E18|1-240-147-252
74994|code|MOV             R4, R0|4-70
74996|code|CBZ             R5, loc_12502|45-177
74998|code|MOV             R0, R5|40-70
75000|code|BL              sub_141BC|1-240-96-254
75004|code|MOV             R0, R5; void *|40-70
75006|code|BLX             _ZdlPv; operator delete(void *)|255-247-162-236
75010|code|ADD             R0, SP, #0x1258+var_113C|71-168
75012|code|BL              sub_15314|2-240-6-255
75016|code|MOV             R0, R11|88-70
75018|code|BL              sub_141BC|1-240-87-254
75022|code|B               loc_12402|120-231
75024|code|LDR             R5, [SP,#0x1258+var_1228]|12-157
75026|code|B               loc_124A8|201-231
75028|code|MOV             R0, R5; void *|40-70
75030|code|BLX             _ZdlPv; operator delete(void *)|255-247-150-236
75034|code|MOV             R0, R11|88-70
75036|code|BL              sub_141BC|1-240-78-254
75040|code|ADD             R0, SP, #0x1258+var_11F4|25-168
75042|code|BL              sub_12688|0-240-177-248
75046|code|BLX             __cxa_end_cleanup|255-247-190-236
75050|code|B               loc_1251A|246-231
75052|code|ADD             R0, SP, #0x1258+var_113C|71-168
75054|code|BL              sub_15314|2-240-241-254
75058|code|B               loc_1251A|242-231
75060|code|MOVW            R3, #0x8488|72-242-136-67
75064|code|MOVW            R0, #0x7148|71-242-72-16
75068|code|MOVT.W          R3, #2|192-242-2-3
75072|code|MOVT.W          R0, #1; ptr|192-242-1-0
75076|code|LDR             R3, [R3]; s|27-104
75078|code|MOVS            R1, #1; size|1-33
75080|code|MOVS            R2, #0x1E; n|30-34
75082|code|BLX             fwrite|255-247-36-237
75086|code|MOVS            R0, #1; status|1-32
75088|code|BLX             exit|255-247-168-235
75092|code|B               loc_12520|228-231
75094|code|LDR             R0, [SP,#0x1258+s1]; void *|21-152
75096|code|BLX             _ZdlPv; operator delete(void *)|255-247-116-236
75100|code|B               loc_12520|224-231
75102|data|ALIGN 0x10|0-191
75104|code|MOV.W           R11, #0|79-240-0-11
75108|code|MOV.W           LR, #0|79-240-0-14
75112|code|POP             {R1}; argc|2-188
75114|code|MOV             R2, SP; ubp_av|106-70
75116|code|PUSH            {R2}; stack_end|4-180
75118|code|PUSH            {R0}; rtld_fini|1-180
75120|code|LDR.W           R12, =(nullsub_3+1)|223-248-16-192
75124|code|PUSH.W          {R12}; fini|77-248-4-205
75128|code|LDR             R0, =(sub_1214C+1); main|3-72
75130|code|LDR             R3, =(sub_16F78+1); init|4-75
75132|code|BLX             __libc_start_main|255-247-148-237
75136|code|BLX             abort|255-247-28-236
75140|data|DCD nullsub_3+1|185-111-1-0
75144|data|DCD sub_1214C+1|77-33-1-0
75148|data|DCD sub_16F78+1|121-111-1-0
75152|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x125A0)|20-48-159-229
75156|code|LDR             R2, =(__gmon_start___ptr_0 - 0x28228)|20-32-159-229
75160|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
75164|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
75168|code|CMP             R2, #0|0-0-82-227
75172|code|BXEQ            LR|30-255-47-1
75176|code|B               __gmon_start__|193-254-255-234
75180|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x125A0|136-92-1-0
75184|data|DCD __gmon_start___ptr_0 - 0x28228|204-1-0-0
75188|code|LDR             R3, =0x28443|7-75
75190|code|MOV             R0, #0x28440|72-242-64-64-192-242-2-0
75198|code|SUBS            R3, R3, R0|27-26
75200|code|CMP             R3, #6|6-43
75202|code|BLS             locret_125D0|5-217
75204|code|MOV             R3, #0|64-242-0-3-192-242-0-3
75212|code|CBZ             R3, locret_125D0|3-177
75214|code|BX              R3|24-71
75216|code|BX              LR|112-71
75218|data|ALIGN 4|0-191
75220|data|DCD 0x28443|67-132-2-0
75224|code|MOVW            R3, #0x8440|72-242-64-67
75228|code|MOVW            R0, #0x8440|72-242-64-64
75232|code|MOVT.W          R3, #2|192-242-2-3
75236|code|MOVT.W          R0, #2|192-242-2-0
75240|code|SUBS            R1, R3, R0|25-26
75242|code|ASRS            R1, R1, #2|137-16
75244|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
75248|code|ASRS            R1, R1, #1|73-16
75250|code|BEQ             locret_12600|5-208
75252|code|MOV             R3, #0|64-242-0-3-192-242-0-3
75260|code|CBZ             R3, locret_12600|3-177
75262|code|BX              R3|24-71
75264|code|BX              LR|112-71
75266|data|ALIGN 4|0-191
75268|code|PUSH            {R4,LR}|16-181
75270|code|MOV             R4, #0x284BC|72-242-188-68-192-242-2-4
75278|code|LDRB            R3, [R4]|35-120
75280|code|CBNZ            R3, locret_1261A|27-185
75282|code|BL              sub_125B4|255-247-207-255
75286|code|MOVS            R3, #1|1-35
75288|code|STRB            R3, [R4]|35-112
75290|code|POP             {R4,PC}|16-189
75292|code|MOVW            R0, #0x8114|72-242-20-16
75296|code|PUSH            {R3,LR}|8-181
75298|code|MOVT.W          R0, #2|192-242-2-0
75302|code|LDR             R3, [R0]|3-104
75304|code|CBNZ            R3, loc_12630|19-185
75306|code|POP.W           {R3,LR}|189-232-8-64
75310|code|B               sub_125D8|211-231
75312|code|MOV             R3, #0|64-242-0-3-192-242-0-3
75320|code|CMP             R3, #0|0-43
75322|code|BEQ             loc_1262A|246-208
75324|code|BLX             R3|152-71
75326|code|B               loc_1262A|244-231
75328|code|MOV             R2, #0x284C0|72-242-192-66-192-242-2-2
75336|code|PUSH            {R3,LR}|8-181
75338|code|LDR             R3, [R2]|19-104
75340|code|ADDS            R3, #1|1-51
75342|code|STR             R3, [R2]|19-96
75344|code|CMP             R3, #2|2-43
75346|code|BGT             loc_12656|0-220
75348|code|POP             {R3,PC}|8-189
75350|code|MOVS            R0, #1|1-32
75352|code|BLX             exit|255-247-36-235
75356|code|MOVW            R0, #0x6FCC|70-246-204-112
75360|code|PUSH            {R3,LR}|8-181
75362|code|MOVT.W          R0, #1; s|192-242-1-0
75366|code|BLX             puts|255-247-54-235
75370|code|MOVS            R0, #1; status|1-32
75372|code|BLX             exit|255-247-26-235
75376|code|PUSH            {R4}|16-180
75378|code|MOVS            R2, #0|0-34
75380|code|LDR             R4, [R1]|12-104
75382|code|LDR             R1, [R1,#4]|73-104
75384|code|STR             R2, [R0,#8]|130-96
75386|code|STR             R4, [R0]|4-96
75388|code|STR             R1, [R0,#4]|65-96
75390|code|STR             R2, [R0,#0xC]|194-96
75392|code|STRB            R2, [R0,#0x10]|2-116
75394|code|POP.W           {R4}|93-248-4-75
75398|code|BX              LR|112-71
75400|code|LDRB            R3, [R0,#0x10]|3-124
75402|code|PUSH.W          {R4-R9,LR}|45-233-240-67
75406|code|MOV             R7, R0|7-70
75408|code|SUB             SP, SP, #0xC|131-176
75410|code|CMP             R3, #0|0-43
75412|code|BEQ             loc_1277E|115-208
75414|code|LDR.W           R8, [R0]|208-248-0-128
75418|code|CMP.W           R8, #0|184-241-0-15
75422|code|BEQ             loc_1270A|52-208
75424|code|LDM.W           R8, {R4,R6}|152-232-80-0
75428|code|CMP             R4, R6|180-66
75430|code|BEQ             loc_126FC|41-208
75432|code|MOVW            R5, #0x8440|72-242-64-69
75436|code|MOVW            R9, #0x1E5C|65-246-92-105
75440|code|MOVT.W          R5, #2|192-242-2-5
75444|code|MOVT.W          R9, #1|192-242-1-9
75448|code|B               loc_126BE|1-224
75450|code|CMP             R6, R4|166-66
75452|code|BEQ             loc_126F8|28-208
75454|code|LDR.W           R3, [R4],#4|84-248-4-59
75458|code|SUB.W           R2, R3, #0xC|163-241-12-2
75462|code|CMP             R2, R5|170-66
75464|code|BEQ             loc_126BA|247-208
75466|code|CMP.W           R9, #0|185-241-0-15
75470|code|BEQ             loc_12792|96-208
75472|code|SUBS            R3, #4|4-59
75474|code|DMB.W           SY|191-243-95-143
75478|code|LDREX.W         R1, [R3]|83-232-0-31
75482|code|SUBS            R0, R1, #1|72-30
75484|code|STREX.W         LR, R0, [R3]|67-232-0-14
75488|code|CMP.W           LR, #0|190-241-0-15
75492|code|BNE             loc_126D6|247-209
75494|code|DMB.W           SY|191-243-95-143
75498|code|CMP             R1, #0|0-41
75500|code|BGT             loc_126BA|229-220
75502|code|MOV             R0, R2|16-70
75504|code|ADD             R1, SP, #0x28+var_24|1-169
75506|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-94-235
75510|code|B               loc_126BA|224-231
75512|code|LDR.W           R6, [R8]|216-248-0-96
75516|code|CBZ             R6, loc_12704|22-177
75518|code|MOV             R0, R6; void *|48-70
75520|code|BLX             _ZdlPv; operator delete(void *)|255-247-160-235
75524|code|MOV             R0, R8; void *|64-70
75526|code|BLX             _ZdlPv; operator delete(void *)|255-247-158-235
75530|code|LDR.W           R8, [R7,#4]|215-248-4-128
75534|code|CMP.W           R8, #0|184-241-0-15
75538|code|BEQ             loc_1277E|52-208
75540|code|LDM.W           R8, {R4,R6}|152-232-80-0
75544|code|CMP             R4, R6|180-66
75546|code|BEQ             loc_12770|41-208
75548|code|MOVW            R5, #0x8440|72-242-64-69
75552|code|MOVW            R9, #0x1E5C|65-246-92-105
75556|code|MOVT.W          R5, #2|192-242-2-5
75560|code|MOVT.W          R9, #1|192-242-1-9
75564|code|B               loc_12732|1-224
75566|code|CMP             R6, R4|166-66
75568|code|BEQ             loc_1276C|28-208
75570|code|LDR.W           R3, [R4],#4|84-248-4-59
75574|code|SUB.W           R2, R3, #0xC|163-241-12-2
75578|code|CMP             R2, R5|170-66
75580|code|BEQ             loc_1272E|247-208
75582|code|CMP.W           R9, #0|185-241-0-15
75586|code|BEQ             loc_12786|32-208
75588|code|SUBS            R3, #4|4-59
75590|code|DMB.W           SY|191-243-95-143
75594|code|LDREX.W         R1, [R3]|83-232-0-31
75598|code|SUBS            R0, R1, #1|72-30
75600|code|STREX.W         LR, R0, [R3]|67-232-0-14
75604|code|CMP.W           LR, #0|190-241-0-15
75608|code|BNE             loc_1274A|247-209
75610|code|DMB.W           SY|191-243-95-143
75614|code|CMP             R1, #0|0-41
75616|code|BGT             loc_1272E|229-220
75618|code|MOV             R0, R2|16-70
75620|code|ADD             R1, SP, #0x28+var_24|1-169
75622|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-36-235
75626|code|B               loc_1272E|224-231
75628|code|LDR.W           R6, [R8]|216-248-0-96
75632|code|CBZ             R6, loc_12778|22-177
75634|code|MOV             R0, R6; void *|48-70
75636|code|BLX             _ZdlPv; operator delete(void *)|255-247-102-235
75640|code|MOV             R0, R8; void *|64-70
75642|code|BLX             _ZdlPv; operator delete(void *)|255-247-100-235
75646|code|MOV             R0, R7|56-70
75648|code|ADD             SP, SP, #0xC|3-176
75650|code|POP.W           {R4-R9,PC}|189-232-240-131
75654|code|LDR.W           R1, [R3,#-4]|83-248-4-28
75658|code|SUBS            R0, R1, #1|72-30
75660|code|STR.W           R0, [R3,#-4]|67-248-4-12
75664|code|B               loc_1275E|229-231
75666|code|LDR.W           R1, [R3,#-4]|83-248-4-28
75670|code|SUBS            R0, R1, #1|72-30
75672|code|STR.W           R0, [R3,#-4]|67-248-4-12
75676|code|B               loc_126EA|165-231
75678|data|ALIGN 0x10|0-191
75680|code|PUSH            {R3-R5,LR}|56-181
75682|code|MOV             R4, R0|4-70
75684|code|BLX             random|255-247-50-236
75688|code|LDR             R3, [R4]|35-104
75690|code|LDR             R5, [R3]|29-104
75692|code|LDR             R1, [R3,#4]|89-104
75694|code|SUBS            R1, R1, R5|73-27
75696|code|ASRS            R1, R1, #2|137-16
75698|code|BLX             __aeabi_uidivmod|255-247-108-234
75702|code|ADD.W           R0, R5, R1,LSL#2|5-235-129-0
75706|code|STR             R1, [R4,#8]|161-96
75708|code|POP             {R3-R5,PC}|56-189
75710|data|ALIGN 0x10|0-191
75712|code|LDR             R2, [R1]|10-104
75714|code|PUSH            {R4,LR}|16-181
75716|code|MOV             R4, R0|4-70
75718|code|LDR             R0, [R2]|16-104
75720|code|LDR             R2, [R2,#4]|82-104
75722|code|LDR             R3, [R1,#8]|139-104
75724|code|SUBS            R2, R2, R0|18-26
75726|code|ADDS            R3, #1|1-51
75728|code|STR             R3, [R1,#8]|139-96
75730|code|CMP.W           R3, R2,ASR#2|179-235-162-15
75734|code|ITEEE NE|17-191
75736|code|LSLNE           R1, R3, #2|153-0
75738|code|MOVEQ           R3, #0|0-35
75740|code|STREQ           R3, [R1,#8]|139-96
75742|code|MOVEQ           R1, R3|25-70
75744|code|ADD             R1, R0|1-68
75746|code|MOV             R0, R4|32-70
75748|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-148-234
75752|code|MOV             R0, R4|32-70
75754|code|POP             {R4,PC}|16-189
75756|code|LDR             R3, [R1,#4]|75-104
75758|code|LDR             R1, [R1,#8]|137-104
75760|code|PUSH            {R4,LR}|16-181
75762|code|MOV             R4, R0|4-70
75764|code|LDR             R3, [R3]|27-104
75766|code|ADD.W           R1, R3, R1,LSL#2|3-235-129-1
75770|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-138-234
75774|code|MOV             R0, R4|32-70
75776|code|POP             {R4,PC}|16-189
75778|data|ALIGN 4|0-191
75780|code|PUSH.W          {R4-R11,LR}|45-233-240-79
75784|code|MOV             R5, R0|5-70
75786|code|SUBW            SP, SP, #0x41C|173-242-28-77
75790|code|MOVS            R0, #0xC; unsigned int|12-32
75792|code|MOV             R9, R1|137-70
75794|code|MOV             R6, R2|22-70
75796|code|MOV             R11, R3|155-70
75798|code|BLX             _Znwj; operator new(uint)|255-247-212-233
75802|code|MOVW            R1, #0x7228|71-242-40-33
75806|code|MOVS            R7, #0|0-39
75808|code|MOV.W           R8, #1|79-240-1-8
75812|code|MOVT.W          R1, #1; modes|192-242-1-1
75816|code|MOV             R3, R0|3-70
75818|code|MOV             R0, R9; filename|72-70
75820|code|STR             R7, [R3]|31-96
75822|code|STR             R7, [R3,#4]|95-96
75824|code|STR             R7, [R3,#8]|159-96
75826|code|STM.W           R5, {R3,R7}|133-232-136-0
75830|code|STR             R7, [R5,#8]|175-96
75832|code|STR             R7, [R5,#0xC]|239-96
75834|code|STRB.W          R8, [R5,#0x10]|133-248-16-128
75838|code|BLX             fopen|255-247-164-234
75842|code|MOV             R4, R0|4-70
75844|code|CMP             R0, #0|0-40
75846|code|BEQ.W           loc_12A70|0-240-19-129
75850|code|CMP             R6, #0|0-46
75852|code|BNE             loc_12944|122-209
75854|code|MOV             R8, #0x11E5C|65-246-92-104-192-242-1-8
75862|code|ADD             R0, SP, #0x440+s; s|6-168
75864|code|MOV.W           R1, #0x400; n|79-244-128-97
75868|code|MOV             R2, R4; stream|34-70
75870|code|BLX             fgets|255-247-136-235
75874|code|CMP             R0, #0|0-40
75876|code|BEQ             loc_12928|96-208
75878|code|MOVW            R1, #0x762C|71-242-44-97
75882|code|ADD             R0, SP, #0x440+s; s|6-168
75884|code|MOVT.W          R1, #1; delim|192-242-1-1
75888|code|BLX             strtok|255-247-66-234
75892|code|LDRB.W          R2, [SP,#0x440+s]|157-248-24-32
75896|code|CMP             R2, #0xD|13-42
75898|code|IT NE|24-191
75900|code|CMPNE           R2, #0xA|10-42
75902|code|ITE NE|20-191
75904|code|MOVNE           R3, #1|1-35
75906|code|MOVEQ           R3, #0|0-35
75908|code|CMP             R2, #0x23 ; '#'|35-42
75910|code|ITE EQ|12-191
75912|code|MOVEQ           R3, #0|0-35
75914|code|ANDNE.W         R3, R3, #1|3-240-1-3
75918|code|CMP             R3, #0|0-43
75920|code|BEQ             loc_12856|225-208
75922|code|MOVW            R1, #0x7274|71-242-116-33
75926|code|ADD             R0, SP, #0x440+s; s|6-168
75928|code|MOVT.W          R1, #1; delim|192-242-1-1
75932|code|BLX             strtok|255-247-44-234
75936|code|MOV             R1, #asc_17274; delim|71-242-116-33-192-242-1-1
75944|code|MOVS            R0, #0; s|0-32
75946|code|BLX             strtok|255-247-38-234
75950|code|CMP             R0, #0|0-40
75952|code|ITE NE|20-191
75954|code|MOVNE           R0, #0|0-32
75956|code|ANDEQ.W         R0, R6, #1|6-240-1-0
75960|code|CMP             R0, #0|0-40
75962|code|BNE             loc_12954|75-209
75964|code|CMP             R6, #0|0-46
75966|code|BNE             loc_12964|81-209
75968|code|MOVW            R10, #0x8440|72-242-64-74
75972|code|ADD.W           R9, SP, #0x440+var_42C|13-241-20-9
75976|code|MOVT.W          R10, #2|192-242-2-10
75980|code|ADD             R3, SP, #0x440+var_434|3-171
75982|code|STR             R3, [SP,#0x440+var_43C]|1-147
75984|code|CMP.W           R11, #0|187-241-0-15
75988|code|BNE.W           loc_129E0|64-240-132-128
75992|code|LDR             R7, [R5]|47-104
75994|code|ADD             R1, SP, #0x440+s|6-169
75996|code|LDR             R2, [SP,#0x440+var_43C]|1-154
75998|code|MOV             R0, R9|72-70
76000|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|255-247-242-234
76004|code|LDR             R1, [R7,#4]|121-104
76006|code|LDR             R3, [R7,#8]|187-104
76008|code|CMP             R1, R3|153-66
76010|code|BEQ.W           loc_12A1C|0-240-151-128
76014|code|CBZ             R1, loc_128FA|33-177
76016|code|MOV             R0, R1; this|8-70
76018|code|MOV             R1, R9; std::string *|73-70
76020|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-12-234
76024|code|LDR             R1, [R7,#4]|121-104
76026|code|ADDS            R1, #4|4-49
76028|code|STR             R1, [R7,#4]|121-96
76030|code|LDR.W           R3, [R9]|217-248-0-48
76034|code|SUB.W           R0, R3, #0xC|163-241-12-0
76038|code|CMP             R0, R10|80-69
76040|code|BNE             loc_129F0|114-209
76042|code|ADD             R0, SP, #0x440+s; s|6-168
76044|code|BLX             strlen|255-247-84-235
76048|code|LDR             R3, [R5,#0xC]|235-104
76050|code|MOV.W           R1, #0x400; n|79-244-128-97
76054|code|MOV             R2, R4; stream|34-70
76056|code|CMP             R0, R3|152-66
76058|code|IT HI|136-191
76060|code|STRHI           R0, [R5,#0xC]|232-96
76062|code|ADD             R0, SP, #0x440+s; s|6-168
76064|code|BLX             fgets|255-247-38-235
76068|code|CMP             R0, #0|0-40
76070|code|BNE             loc_12866|158-209
76072|code|LDR             R2, [R5]|42-104
76074|code|LDM             R2, {R2,R3}|12-202
76076|code|SUBS            R3, R3, R2|155-26
76078|code|LSRS            R3, R3, #2|155-8
76080|code|BEQ.W           loc_12A84|0-240-168-128
76084|code|MOV             R0, R4; stream|32-70
76086|code|BLX             fclose|255-247-82-235
76090|code|MOV             R0, R5|40-70
76092|code|ADDW            SP, SP, #0x41C|13-242-28-77
76096|code|POP.W           {R4-R11,PC}|189-232-240-143
76100|code|MOVS            R0, #0xC; unsigned int|12-32
76102|code|BLX             _Znwj; operator new(uint)|255-247-60-233
76106|code|STR             R7, [R0]|7-96
76108|code|STR             R7, [R0,#4]|71-96
76110|code|STR             R7, [R0,#8]|135-96
76112|code|STR             R0, [R5,#4]|104-96
76114|code|B               loc_1284E|124-231
76116|code|MOVW            R0, #0x7240|71-242-64-32
76120|code|ADD             R1, SP, #0x440+s|6-169
76122|code|MOVT.W          R0, #1; format|192-242-1-0
76126|code|BLX             printf|255-247-168-233
76130|code|B               loc_12856|120-231
76132|code|ADD             R0, SP, #0x440+s; s|6-168
76134|code|ADD.W           R9, SP, #0x440+var_42C|13-241-20-9
76138|code|BLX             strlen|255-247-38-235
76142|code|ADD             R3, SP, #0x440+var_434|3-171
76144|code|LDR             R7, [R5,#4]|111-104
76146|code|STR             R3, [SP,#0x440+var_43C]|1-147
76148|code|MOV             R2, R3|26-70
76150|code|ADD             R3, SP, #0x440+s|6-171
76152|code|ADDS            R1, R0, #1|65-28
76154|code|MOV             R0, R9|72-70
76156|code|ADD             R1, R3|25-68
76158|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|255-247-164-234
76162|code|LDR             R1, [R7,#4]|121-104
76164|code|LDR             R3, [R7,#8]|187-104
76166|code|CMP             R1, R3|153-66
76168|code|BEQ             loc_12A32|83-208
76170|code|CBZ             R1, loc_12996|33-177
76172|code|MOV             R0, R1; this|8-70
76174|code|MOV             R1, R9; std::string *|73-70
76176|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-190-233
76180|code|LDR             R1, [R7,#4]|121-104
76182|code|ADDS            R1, #4|4-49
76184|code|STR             R1, [R7,#4]|121-96
76186|code|LDR.W           R3, [R9]|217-248-0-48
76190|code|MOV             R10, #0x28440|72-242-64-74-192-242-2-10
76198|code|SUB.W           R0, R3, #0xC|163-241-12-0
76202|code|CMP             R0, R10|80-69
76204|code|BEQ             loc_128D0|144-208
76206|code|CMP.W           R8, #0|184-241-0-15
76210|code|BEQ             loc_12A3C|67-208
76212|code|SUBS            R3, #4|4-59
76214|code|DMB.W           SY|191-243-95-143
76218|code|LDREX.W         R2, [R3]|83-232-0-47
76222|code|SUBS            R1, R2, #1|81-30
76224|code|STREX.W         R7, R1, [R3]|67-232-0-23
76228|code|CMP             R7, #0|0-47
76230|code|BNE             loc_129BA|248-209
76232|code|DMB.W           SY|191-243-95-143
76236|code|CMP             R2, #0|0-42
76238|code|BGT.W           loc_128D0|63-247-127-175
76242|code|ADD             R1, SP, #0x440+var_430|4-169
76244|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-236-233
76248|code|CMP.W           R11, #0|187-241-0-15
76252|code|BEQ.W           loc_128D8|63-244-124-175
76256|code|MOVW            R1, #0x725C|71-242-92-33
76260|code|ADD             R0, SP, #0x440+s; s|6-168
76262|code|MOVT.W          R1, #1; delim|192-242-1-1
76266|code|BLX             strtok|255-247-134-233
76270|code|B               loc_128D8|115-231
76272|code|CMP.W           R8, #0|184-241-0-15
76276|code|BEQ             loc_12A26|23-208
76278|code|SUBS            R3, #4|4-59
76280|code|DMB.W           SY|191-243-95-143
76284|code|LDREX.W         R2, [R3]|83-232-0-47
76288|code|SUBS            R1, R2, #1|81-30
76290|code|STREX.W         R7, R1, [R3]|67-232-0-23
76294|code|CMP             R7, #0|0-47
76296|code|BNE             loc_129FC|248-209
76298|code|DMB.W           SY|191-243-95-143
76302|code|CMP             R2, #0|0-42
76304|code|BGT.W           loc_1290A|63-247-123-175
76308|code|ADD             R1, SP, #0x440+var_430|4-169
76310|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-204-233
76314|code|B               loc_1290A|118-231
76316|code|MOV             R0, R7|56-70
76318|code|MOV             R2, R9|74-70
76320|code|BL              sub_12B04|0-240-112-248
76324|code|B               loc_128FE|107-231
76326|code|LDR.W           R2, [R3,#-4]|83-248-4-44
76330|code|SUBS            R1, R2, #1|81-30
76332|code|STR.W           R1, [R3,#-4]|67-248-4-28
76336|code|B               loc_12A0E|237-231
76338|code|MOV             R0, R7|56-70
76340|code|MOV             R2, R9|74-70
76342|code|BL              sub_12B04|0-240-101-248
76346|code|B               loc_1299A|174-231
76348|code|LDR.W           R2, [R3,#-4]|83-248-4-44
76352|code|SUBS            R1, R2, #1|81-30
76354|code|STR.W           R1, [R3,#-4]|67-248-4-28
76358|code|B               loc_129CC|193-231
76360|code|LDR.W           R0, [R9]|217-248-0-0
76364|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
76372|code|SUBS            R0, #0xC|12-56
76374|code|CMP             R0, R3|152-66
76376|code|BNE             loc_12A68|6-209
76378|code|BLX             __cxa_end_cleanup|255-247-36-234
76382|code|LDR.W           R0, [R9]|217-248-0-0
76386|code|SUBS            R0, #0xC|12-56
76388|code|CMP             R0, R10|80-69
76390|code|BEQ             loc_12A5A|248-208
76392|code|ADD             R1, SP, #0x440+var_430|4-169
76394|code|BL              sub_12108|255-247-77-251
76398|code|B               loc_12A5A|244-231
76400|code|MOVW            R0, #0x722C|71-242-44-32
76404|code|MOV             R1, R9|73-70
76406|code|MOVT.W          R0, #1; format|192-242-1-0
76410|code|BLX             printf|255-247-26-233
76414|code|MOV             R0, R8; status|64-70
76416|code|BLX             exit|255-247-16-233
76420|code|MOV             R0, #aNoUsersInFile; s|71-242-96-32-192-242-1-0
76428|code|BLX             puts|255-247-34-233
76432|code|MOVS            R0, #1; status|1-32
76434|code|BLX             exit|255-247-8-233
76438|data|ALIGN 4|0-191
76440|code|CMP             R0, R1|136-66
76442|code|BEQ             locret_12B00|49-208
76444|code|PUSH            {R4-R7,LR}|240-181
76446|code|MOVW            R6, #0x8440|72-242-64-70
76450|code|MOVW            R7, #0x1E5C|65-246-92-103
76454|code|SUB             SP, SP, #0xC|131-176
76456|code|MOV             R5, R1|13-70
76458|code|MOV             R4, R0|4-70
76460|code|MOVT.W          R6, #2|192-242-2-6
76464|code|MOVT.W          R7, #1|192-242-1-7
76468|code|B               loc_12ABA|1-224
76470|code|CMP             R5, R4|165-66
76472|code|BEQ             loc_12AF0|26-208
76474|code|LDR.W           R3, [R4],#4|84-248-4-59
76478|code|SUB.W           R0, R3, #0xC|163-241-12-0
76482|code|CMP             R0, R6|176-66
76484|code|BEQ             loc_12AB6|247-208
76486|code|CBZ             R7, loc_12AF4|175-177
76488|code|SUBS            R3, #4|4-59
76490|code|DMB.W           SY|191-243-95-143
76494|code|LDREX.W         R2, [R3]|83-232-0-47
76498|code|SUBS            R1, R2, #1|81-30
76500|code|STREX.W         LR, R1, [R3]|67-232-0-30
76504|code|CMP.W           LR, #0|190-241-0-15
76508|code|BNE             loc_12ACE|247-209
76510|code|DMB.W           SY|191-243-95-143
76514|code|CMP             R2, #0|0-42
76516|code|BGT             loc_12AB6|231-220
76518|code|ADD             R1, SP, #0x20+var_1C|1-169
76520|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-98-233
76524|code|CMP             R5, R4|165-66
76526|code|BNE             loc_12ABA|228-209
76528|code|ADD             SP, SP, #0xC|3-176
76530|code|POP             {R4-R7,PC}|240-189
76532|code|LDR.W           R2, [R3,#-4]|83-248-4-44
76536|code|SUBS            R1, R2, #1|81-30
76538|code|STR.W           R1, [R3,#-4]|67-248-4-28
76542|code|B               loc_12AE2|240-231
76544|code|BX              LR|112-71
76546|data|ALIGN 4|0-191
76548|code|PUSH.W          {R4-R11,LR}|45-233-240-79
76552|code|MOV             R4, R0|4-70
76554|code|LDR             R3, [R4,#8]|163-104
76556|code|SUB             SP, SP, #0xC|131-176
76558|code|LDR             R0, [R0,#4]; this|64-104
76560|code|MOV             R6, R1|14-70
76562|code|MOV             R5, R2|21-70
76564|code|CMP             R0, R3|152-66
76566|code|BEQ             loc_12BA4|69-208
76568|code|CBZ             R0, loc_12B22|24-177
76570|code|SUBS            R1, R0, #4; std::string *|1-31
76572|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-248-232
76576|code|LDR             R0, [R4,#4]|96-104
76578|code|ADDS            R3, R0, #4|3-29
76580|code|MOV             R1, R5; std::string *|41-70
76582|code|STR             R3, [R4,#4]|99-96
76584|code|ADD             R0, SP, #0x30+var_2C; this|1-168
76586|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-242-232
76590|code|LDR             R3, [R4,#4]|99-104
76592|code|SUB.W           R0, R3, #8; this|163-241-8-0
76596|code|SUBS            R5, R0, R6|133-27
76598|code|ASRS            R5, R5, #2|173-16
76600|code|CMP             R5, #0|0-45
76602|code|ITT GT|196-191
76604|code|SUBGT.W         R5, R3, R5,LSL#2|163-235-133-5
76608|code|SUBGT           R5, #8|8-61
76610|code|BLE             loc_12B52|6-221
76612|code|SUBS            R4, R0, #4|4-31
76614|code|MOV             R1, R4; std::string *|33-70
76616|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|255-247-208-233
76620|code|CMP             R4, R5|172-66
76622|code|MOV             R0, R4|32-70
76624|code|BNE             loc_12B44|248-209
76626|code|MOV             R0, R6; this|48-70
76628|code|ADD             R1, SP, #0x30+var_2C; std::string *|1-169
76630|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|255-247-202-233
76634|code|LDR             R2, [SP,#0x30+var_2C]|1-154
76636|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
76644|code|SUB.W           R0, R2, #0xC|162-241-12-0
76648|code|CMP             R0, R3|152-66
76650|code|BNE             loc_12B72|2-209
76652|code|ADD             SP, SP, #0xC|3-176
76654|code|POP.W           {R4-R11,PC}|189-232-240-143
76658|code|MOV             R3, #0x11E5C|65-246-92-99-192-242-1-3
76666|code|CMP             R3, #0|0-43
76668|code|BEQ.W           loc_12C86|0-240-131-128
76672|code|SUBS            R2, #4|4-58
76674|code|DMB.W           SY|191-243-95-143
76678|code|LDREX.W         R3, [R2]|82-232-0-63
76682|code|SUBS            R1, R3, #1|89-30
76684|code|STREX.W         R4, R1, [R2]|66-232-0-20
76688|code|CMP             R4, #0|0-44
76690|code|BNE             loc_12B86|248-209
76692|code|DMB.W           SY|191-243-95-143
76696|code|CMP             R3, #0|0-43
76698|code|BGT             loc_12B6C|231-220
76700|code|MOV             R1, SP|105-70
76702|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-8-233
76706|code|B               loc_12B6C|227-231
76708|code|LDR             R1, [R4]|33-104
76710|code|SUBS            R3, R0, R1|67-26
76712|code|ASRS            R3, R3, #2|155-16
76714|code|BNE             loc_12C5A|86-209
76716|code|RSB.W           R8, R1, R6|193-235-6-8
76720|code|MOVS            R2, #1|1-34
76722|code|LSLS            R0, R2, #2; unsigned int|144-0
76724|code|MOV             R9, R2|145-70
76726|code|BLX             _Znwj; operator new(uint)|255-247-4-232
76730|code|MOV             R10, R0|130-70
76732|code|ADDS.W          R8, R10, R8|26-235-8-8
76736|code|BEQ             loc_12BCA|3-208
76738|code|MOV             R1, R5; std::string *|41-70
76740|code|MOV             R0, R8; this|64-70
76742|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-164-232
76746|code|LDR             R7, [R4]|39-104
76748|code|MOV             R5, R10|85-70
76750|code|CMP             R6, R7|190-66
76752|code|BEQ             loc_12BE4|8-208
76754|code|CBZ             R5, loc_12BDC|29-177
76756|code|MOV             R0, R5; this|40-70
76758|code|MOV             R1, R7; std::string *|57-70
76760|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-154-232
76764|code|ADDS            R7, #4|4-55
76766|code|ADDS            R5, #4|4-53
76768|code|CMP             R6, R7|190-66
76770|code|BNE             loc_12BD2|246-209
76772|code|LDR             R7, [R4,#4]|103-104
76774|code|ADD.W           R11, R5, #4|5-241-4-11
76778|code|CMP             R6, R7|190-66
76780|code|MOV             R5, R11|93-70
76782|code|BEQ             loc_12C04|9-208
76784|code|CBZ             R5, loc_12BFA|29-177
76786|code|MOV             R0, R5; this|40-70
76788|code|MOV             R1, R6; std::string *|49-70
76790|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|255-247-140-232
76794|code|ADDS            R6, #4|4-54
76796|code|ADDS            R5, #4|4-53
76798|code|CMP             R7, R6|183-66
76800|code|BNE             loc_12BF0|246-209
76802|code|LDR             R7, [R4,#4]|103-104
76804|code|LDR             R6, [R4]|38-104
76806|code|CMP             R6, R7|190-66
76808|code|ITTTT NE|31-191
76810|code|MOVNEW          R8, #0x8440|72-242-64-72
76814|code|MOVNEW          R11, #0x1E5C|65-246-92-107
76818|code|MOVTNE.W        R8, #2|192-242-2-8
76822|code|MOVTNE.W        R11, #1|192-242-1-11
76826|code|BNE             loc_12C22|2-209
76828|code|B               loc_12C70|40-224
76830|code|CMP             R7, R6|183-66
76832|code|BEQ             loc_12C6E|37-208
76834|code|LDR.W           R3, [R6],#4|86-248-4-59
76838|code|SUB.W           R0, R3, #0xC|163-241-12-0
76842|code|CMP             R0, R8|64-69
76844|code|BEQ             loc_12C1E|247-208
76846|code|CMP.W           R11, #0|187-241-0-15
76850|code|BEQ             loc_12C92|46-208
76852|code|SUBS            R3, #4|4-59
76854|code|DMB.W           SY|191-243-95-143
76858|code|LDREX.W         R2, [R3]|83-232-0-47
76862|code|SUBS            R1, R2, #1|81-30
76864|code|STREX.W         LR, R1, [R3]|67-232-0-30
76868|code|CMP.W           LR, #0|190-241-0-15
76872|code|BNE             loc_12C3A|247-209
76874|code|DMB.W           SY|191-243-95-143
76878|code|CMP             R2, #0|0-42
76880|code|BGT             loc_12C1E|229-220
76882|code|ADD             R1, SP, #0x30+var_2C|1-169
76884|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|255-247-172-232
76888|code|B               loc_12C1E|225-231
76890|code|LSLS            R2, R3, #1|90-0
76892|code|CMP             R3, R2|147-66
76894|code|BLS             loc_12D22|96-217
76896|code|RSB.W           R8, R1, R6|193-235-6-8
76900|code|MOV             R0, #0xFFFFFFFC|111-240-3-0
76904|code|MOV             R9, #0x3FFFFFFF|111-240-64-73
76908|code|B               loc_12BB6|163-231
76910|code|LDR             R7, [R4]|39-104
76912|code|CBZ             R7, loc_12C78|23-177
76914|code|MOV             R0, R7; void *|56-70
76916|code|BLX             _ZdlPv; operator delete(void *)|255-247-230-232
76920|code|ADD.W           R3, R10, R9,LSL#2|10-235-137-3
76924|code|STR.W           R10, [R4]|196-248-0-160
76928|code|STR             R3, [R4,#8]|163-96
76930|code|STR             R5, [R4,#4]|101-96
76932|code|B               loc_12B6C|114-231
76934|code|LDR.W           R3, [R2,#-4]|82-248-4-60
76938|code|SUBS            R1, R3, #1|89-30
76940|code|STR.W           R1, [R2,#-4]|66-248-4-28
76944|code|B               loc_12B98|130-231
76946|code|LDR.W           R2, [R3,#-4]|83-248-4-44
76950|code|SUBS            R1, R2, #1|81-30
76952|code|STR.W           R1, [R3,#-4]|67-248-4-28
76956|code|B               loc_12C4E|215-231
76958|code|LDR             R0, [SP,#0x30+var_2C]|1-152
76960|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
76968|code|SUBS            R0, #0xC|12-56
76970|code|CMP             R0, R3|152-66
76972|code|BEQ             loc_12CB4|2-208
76974|code|MOV             R1, SP|105-70
76976|code|BL              sub_12108|255-247-42-250
76980|code|BLX             __cxa_end_cleanup|255-247-246-232
76984|code|BLX             __cxa_begin_catch|254-247-226-239
76988|code|MOV             R0, R10|80-70
76990|code|MOV             R1, R5|41-70
76992|code|BL              sub_12A98|255-247-234-254
76996|code|BLX             __cxa_rethrow|255-247-96-233
77000|code|MOV             R11, R10|211-70
77002|code|BLX             __cxa_begin_catch|254-247-218-239
77006|code|CMP.W           R11, #0|187-241-0-15
77010|code|BEQ             loc_12CF8|17-208
77012|code|MOV             R1, R11|89-70
77014|code|MOV             R0, R10|80-70
77016|code|BL              sub_12A98|255-247-222-254
77020|code|CMP.W           R10, #0|186-241-0-15
77024|code|BEQ             loc_12CE8|2-208
77026|code|MOV             R0, R10; void *|80-70
77028|code|BLX             _ZdlPv; operator delete(void *)|255-247-174-232
77032|code|BLX             __cxa_rethrow|255-247-78-233
77036|code|MOV             R4, R0|4-70
77038|code|BLX             __cxa_end_catch|255-247-136-233
77042|code|MOV             R0, R4; void *|32-70
77044|code|BLX             __cxa_begin_catch|254-247-196-239
77048|code|LDR.W           R0, [R8]|216-248-0-0
77052|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
77060|code|SUBS            R0, #0xC|12-56
77062|code|CMP             R0, R3|152-66
77064|code|BEQ             loc_12CDC|232-208
77066|code|ADD             R1, SP, #0x30+var_2C|1-169
77068|code|BL              sub_12108|255-247-252-249
77072|code|B               loc_12CDC|228-231
77074|code|BLX             __cxa_begin_catch|254-247-182-239
77078|code|MOV             R0, R11|88-70
77080|code|MOV             R1, R5|41-70
77082|code|BL              sub_12A98|255-247-189-254
77086|code|BLX             __cxa_rethrow|255-247-52-233
77090|code|CMP.W           R2, #0x40000000|178-241-128-79
77094|code|BCS             loc_12C60|155-210
77096|code|RSB.W           R8, R1, R6|193-235-6-8
77100|code|CMP             R2, #0|0-42
77102|code|BNE.W           loc_12BB2|127-244-64-175
77106|code|MOV             R9, R2|145-70
77108|code|MOV             R10, R2|146-70
77110|code|B               loc_12BBC|65-231
77112|code|MOV             R4, R0|4-70
77114|code|BLX             __cxa_end_catch|255-247-98-233
77118|code|MOV             R0, R4|32-70
77120|code|B               loc_12CCA|195-231
77122|code|BLX             __cxa_end_catch|255-247-94-233
77126|code|B               loc_12CB4|181-231
77128|code|PUSH            {R3-R5,LR}|56-181
77130|code|MOV             R4, R0|4-70
77132|code|LDR             R0, [R0]|0-104
77134|code|LDR             R1, [R4,#8]|161-104
77136|code|LDR             R3, [R0]|3-104
77138|code|LDR             R3, [R3,#0xC]|219-104
77140|code|BLX             R3|152-71
77142|code|LDR             R1, [R4,#4]|97-104
77144|code|LDR             R3, [R0]|3-104
77146|code|MOV             R5, R0|5-70
77148|code|LDR             R3, [R3]|27-104
77150|code|BLX             R3|152-71
77152|code|LDR             R2, [R5,#0x34]|106-107
77154|code|LDR             R3, [R5]|43-104
77156|code|LDR             R3, [R3,#8]|155-104
77158|code|STR             R0, [R2]|16-96
77160|code|MOV             R0, R5|40-70
77162|code|BLX             R3|152-71
77164|code|MOV             R0, R4; void *|32-70
77166|code|BLX             _ZdlPv; operator delete(void *)|255-247-106-232
77170|code|MOVS            R0, #0|0-32
77172|code|POP             {R3-R5,PC}|56-189
77174|data|ALIGN 4|0-191
77176|code|PUSH            {R3-R5,LR}|56-181
77178|code|MOV             R5, R0|5-70
77180|code|LDR             R3, [R0,#0x30]|3-107
77182|code|CMP             R3, #0|0-43
77184|code|BLE             loc_12D98|10-221
77186|code|MOVS            R4, #0|0-36
77188|code|LDR             R3, [R5,#0x38]|171-107
77190|code|MOVS            R1, #0; thread_return|0-33
77192|code|LDR.W           R0, [R3,R4,LSL#2]; th|83-248-36-0
77196|code|ADDS            R4, #1|1-52
77198|code|BLX             pthread_join|254-247-132-239
77202|code|LDR             R3, [R5,#0x30]|43-107
77204|code|CMP             R4, R3|156-66
77206|code|BLT             loc_12D84|245-219
77208|code|LDR             R0, [R5,#0x20]; fd|40-106
77210|code|BLX             close|254-247-240-239
77214|code|LDR             R0, [R5,#0x24]; fd|104-106
77216|code|BLX             close|254-247-236-239
77220|code|LDR             R0, [R5,#0x28]; fd|168-106
77222|code|BLX             close|254-247-234-239
77226|code|LDR             R0, [R5,#0x2C]; fd|232-106
77228|code|BLX             close|254-247-230-239
77232|code|LDR             R0, [R5,#0x38]; void *|168-107
77234|code|BLX             _ZdlPv; operator delete(void *)|255-247-72-232
77238|code|LDR             R0, [R5,#0x34]; void *|104-107
77240|code|BLX             _ZdlPv; operator delete(void *)|255-247-68-232
77244|code|MOVS            R0, #0|0-32
77246|code|POP             {R3-R5,PC}|56-189
77248|code|PUSH            {R4}|16-180
77250|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
77254|code|LDR             R4, =off_17280|8-76
77256|code|MOVS            R1, #0|0-33
77258|code|STR             R2, [R0,#4]|66-96
77260|code|STR             R2, [R0,#8]|130-96
77262|code|STR             R4, [R0]|4-96
77264|code|STR             R2, [R0,#0xC]|194-96
77266|code|STR             R2, [R0,#0x20]|2-98
77268|code|STR             R2, [R0,#0x24]|66-98
77270|code|STR             R2, [R0,#0x28]|130-98
77272|code|STR             R2, [R0,#0x2C]|194-98
77274|code|STR             R1, [R0,#0x30]|1-99
77276|code|STR             R1, [R0,#0x34]|65-99
77278|code|STR             R1, [R0,#0x38]|129-99
77280|code|POP.W           {R4}|93-248-4-75
77284|code|BX              LR|112-71
77286|data|ALIGN 4|0-191
77288|data|DCD off_17280|128-114-1-0
77292|code|PUSH            {R4-R7}|240-180
77294|code|MOVS            R6, #0|0-38
77296|code|LDR             R4, [R2,#0x30]|20-107
77298|code|LDR             R5, [R2,#0x2C]|213-106
77300|code|LDR.W           R12, [R2,#0x28]|210-248-40-192
77304|code|LDR             R7, =off_17280|9-79
77306|code|STR             R4, [R0,#0x30]|4-99
77308|code|LDR             R4, [R2,#0x34]|84-107
77310|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
77314|code|STR             R5, [R0,#8]|133-96
77316|code|ADD.W           R4, R4, R1,LSL#2|4-235-129-4
77320|code|STR             R7, [R0]|7-96
77322|code|STR             R4, [R0,#0x34]|68-99
77324|code|STR             R6, [R0,#0x38]|134-99
77326|code|STR.W           R12, [R0,#4]|192-248-4-192
77330|code|STR             R1, [R0,#0xC]|193-96
77332|code|STR             R2, [R0,#0x20]|2-98
77334|code|STR             R2, [R0,#0x24]|66-98
77336|code|STR             R2, [R0,#0x28]|130-98
77338|code|STR             R2, [R0,#0x2C]|194-98
77340|code|POP             {R4-R7}|240-188
77342|code|BX              LR|112-71
77344|data|DCD off_17280|128-114-1-0
77348|code|LDR             R3, [R0,#0xC]|195-104
77350|code|LDR             R2, =off_17280|5-74
77352|code|ADDS            R3, #1|1-51
77354|code|PUSH            {R4,LR}|16-181
77356|code|MOV             R4, R0|4-70
77358|code|STR             R2, [R0]|2-96
77360|code|BNE             loc_12E36|1-209
77362|code|BL              sub_12D78|255-247-161-255
77366|code|MOV             R0, R4|32-70
77368|code|POP             {R4,PC}|16-189
77370|data|ALIGN 4|0-191
77372|data|DCD off_17280|128-114-1-0
77376|code|LDR             R3, [R0,#0xC]|195-104
77378|code|LDR             R2, =off_17280|9-74
77380|code|ADDS            R3, #1|1-51
77382|code|PUSH            {R4,LR}|16-181
77384|code|MOV             R4, R0|4-70
77386|code|STR             R2, [R0]|2-96
77388|code|BEQ             loc_12E58|4-208
77390|code|MOV             R0, R4|32-70
77392|code|BLX             _ZdlPv; operator delete(void *)|254-247-248-239
77396|code|MOV             R0, R4|32-70
77398|code|POP             {R4,PC}|16-189
77400|code|BL              sub_12D78|255-247-142-255
77404|code|MOV             R0, R4|32-70
77406|code|BLX             _ZdlPv; operator delete(void *)|254-247-242-239
77410|code|MOV             R0, R4|32-70
77412|code|POP             {R4,PC}|16-189
77414|data|ALIGN 4|0-191
77416|data|DCD off_17280|128-114-1-0
77420|code|LDR             R3, [R0,#0x30]|3-107
77422|code|PUSH.W          {R4-R10,LR}|45-233-240-71
77426|code|MOV             R6, R0|6-70
77428|code|SUB             SP, SP, #0x38|142-176
77430|code|ADD             R3, R2|19-68
77432|code|ADD             R0, SP, #0x58+pipedes; pipedes|3-168
77434|code|STR             R3, [R6,#0x30]|51-99
77436|code|MOV             R8, R2|144-70
77438|code|MOV             R9, R1|137-70
77440|code|BLX             pipe|255-247-54-233
77444|code|CBZ             R0, loc_12EA6|120-177
77446|code|MOVW            R3, #0x8488|72-242-136-67
77450|code|MOVW            R0, #0x72DC|71-242-220-32
77454|code|MOVT.W          R3, #2|192-242-2-3
77458|code|MOVT.W          R0, #1; ptr|192-242-1-0
77462|code|LDR             R3, [R3]; s|27-104
77464|code|MOVS            R1, #1; size|1-33
77466|code|MOVS            R2, #0x12; n|18-34
77468|code|BLX             fwrite|255-247-122-232
77472|code|MOVS            R0, #1; status|1-32
77474|code|BLX             exit|254-247-0-239
77478|code|ADD             R0, SP, #0x58+var_54; pipedes|1-168
77480|code|BLX             pipe|255-247-34-233
77484|code|CMP             R0, #0|0-40
77486|code|BNE             loc_12E86|234-209
77488|code|LDR             R2, [SP,#0x58+pipedes]|3-154
77490|code|MOVS            R7, #0x39 ; '9'|57-39
77492|code|LDR             R3, [SP,#0x58+var_54+4]|2-155
77494|code|ADD             R0, SP, #0x58+attr; attr|5-168
77496|code|LDR             R1, [SP,#0x58+pipedes+4]|4-153
77498|code|MOVS            R5, #0x3C ; '<'|60-37
77500|code|LDR             R4, [SP,#0x58+var_54]|1-156
77502|code|STR             R2, [R6,#0x20]|50-98
77504|code|STR             R1, [R6,#0x2C]|241-98
77506|code|STR             R2, [R6,#4]|114-96
77508|code|STR             R2, [R6,#0x10]|50-97
77510|code|STR             R3, [R6,#0x24]|115-98
77512|code|STR             R3, [R6,#8]|179-96
77514|code|STR             R3, [R6,#0x18]|179-97
77516|code|STR             R4, [R6,#0x28]|180-98
77518|code|STRH            R7, [R6,#0x14]|183-130
77520|code|STRH            R5, [R6,#0x1C]|181-131
77522|code|BLX             pthread_attr_init|255-247-54-232
77526|code|MOV             R1, R0; detachstate|1-70
77528|code|CMP             R0, #0|0-40
77530|code|BEQ             loc_12F94|91-208
77532|code|MOVW            R3, #0x8488|72-242-136-67
77536|code|MOVW            R0, #0x72F0|71-242-240-32
77540|code|MOVT.W          R3, #2|192-242-2-3
77544|code|MOVT.W          R0, #1; ptr|192-242-1-0
77548|code|LDR             R3, [R3]; s|27-104
77550|code|MOVS            R1, #1; size|1-33
77552|code|MOVS            R2, #0x1D; n|29-34
77554|code|BLX             fwrite|255-247-80-232
77558|code|ADD.W           R0, R8, #1|8-241-1-0
77562|code|CMP.W           R0, #0x1FC00000|176-241-254-95
77566|code|ITE LS|148-191
77568|code|LSLLS           R0, R0, #2|128-0
77570|code|MOVHI.W         R0, #0xFFFFFFFF; unsigned int|79-240-255-48
77574|code|BLX             _Znaj; operator new[](uint)|254-247-70-239
77578|code|CMP.W           R8, #0x1FC00000|184-241-254-95
77582|code|STR             R0, [R6,#0x34]|112-99
77584|code|ITE LS|148-191
77586|code|MOVLS.W         R0, R8,LSL#2|79-234-136-0
77590|code|MOVHI.W         R0, #0xFFFFFFFF; unsigned int|79-240-255-48
77594|code|BLX             _Znaj; operator new[](uint)|254-247-60-239
77598|code|CMP.W           R8, #0|184-241-0-15
77602|code|ITTT GT|194-191
77604|code|MOVGT           R7, #0|0-39
77606|code|MOVGT           R4, #1|1-36
77608|code|MOVGT.W         R10, #0xFFFFFFFF|79-240-255-58
77612|code|STR             R0, [R6,#0x38]|176-99
77614|code|BLE             loc_12F64|25-221
77616|code|LDR             R3, [R6,#0x34]|115-107
77618|code|MOVS            R0, #0xC; unsigned int|12-32
77620|code|STR.W           R10, [R3,R4,LSL#2]|67-248-36-160
77624|code|BLX             _Znwj; operator new(uint)|254-247-66-238
77628|code|MOV             R2, #(sub_12D48+1); start_routine|66-246-73-82-192-242-1-2
77636|code|ADD             R1, SP, #0x58+attr; attr|5-169
77638|code|MOV             R5, R0|5-70
77640|code|LDR             R0, [R6,#0x38]|176-107
77642|code|MOV             R3, R5; arg|43-70
77644|code|STR             R6, [R5]|46-96
77646|code|STR.W           R9, [R5,#4]|197-248-4-144
77650|code|ADD             R0, R7; newthread|56-68
77652|code|STR             R4, [R5,#8]|172-96
77654|code|BLX             pthread_create|255-247-108-232
77658|code|CBNZ            R0, loc_12FAE|64-187
77660|code|ADDS            R4, #1|1-52
77662|code|ADDS            R7, #4|4-55
77664|code|CMP             R8, R4|160-69
77666|code|BGE             loc_12F30|229-218
77668|code|ADD             R0, SP, #0x58+attr; attr|5-168
77670|code|BLX             pthread_attr_destroy|254-247-200-239
77674|code|CBZ             R0, loc_12F86|96-177
77676|code|MOVW            R3, #0x8488|72-242-136-67
77680|code|MOVW            R0, #0x72B8|71-242-184-32
77684|code|MOVT.W          R3, #2|192-242-2-3
77688|code|MOVT.W          R0, #1; ptr|192-242-1-0
77692|code|LDR             R3, [R3]; s|27-104
77694|code|MOVS            R1, #1; size|1-33
77696|code|MOVS            R2, #0x21 ; '!'; n|33-34
77698|code|BLX             fwrite|255-247-8-232
77702|code|LDR             R2, [R6,#4]|114-104
77704|code|LDR             R3, [R6,#8]|179-104
77706|code|STR             R2, [R6,#0x10]|50-97
77708|code|STR             R3, [R6,#0x18]|179-97
77710|code|ADD             SP, SP, #0x38 ; '8'|14-176
77712|code|POP.W           {R4-R10,PC}|189-232-240-135
77716|code|ADD             R0, SP, #0x58+attr; attr|5-168
77718|code|BLX             pthread_attr_setdetachstate|254-247-78-239
77722|code|CMP             R0, #0|0-40
77724|code|BNE             loc_12EDC|158-209
77726|code|ADD             R0, SP, #0x58+attr; attr|5-168
77728|code|MOV.W           R1, #0x8000; stacksize|79-244-0-65
77732|code|BLX             pthread_attr_setstacksize|254-247-186-239
77736|code|CMP             R0, #0|0-40
77738|code|BNE             loc_12EDC|151-209
77740|code|B               loc_12EF6|163-231
77742|code|MOVW            R3, #0x8488|72-242-136-67
77746|code|MOVW            R0, #0x72A0|71-242-160-32
77750|code|MOVT.W          R3, #2|192-242-2-3
77754|code|MOVT.W          R0, #1; ptr|192-242-1-0
77758|code|LDR             R3, [R3]; s|27-104
77760|code|MOVS            R1, #1; size|1-33
77762|code|MOVS            R2, #0x17; n|23-34
77764|code|BLX             fwrite|254-247-230-239
77768|code|MOVS            R0, #1; status|1-32
77770|code|BLX             exit|254-247-108-238
77774|data|ALIGN 0x10|0-191
77776|code|LDR             R3, [R0,#0x34]|67-107
77778|code|STR             R1, [R3]|25-96
77780|code|BX              LR|112-71
77782|data|ALIGN 4|0-191
77784|code|PUSH            {R4-R6,LR}|112-181
77786|code|MOV             R5, R0|5-70
77788|code|MOV             R6, R1|14-70
77790|code|MOV             R4, R2|20-70
77792|code|CBZ             R3, loc_12FFA|91-177
77794|code|RSB.W           R2, R3, R3,LSL#5|195-235-67-18
77798|code|ADDS            R0, #0x10; fds|16-48
77800|code|MOVS            R1, #1; nfds|1-33
77802|code|ADD.W           R2, R3, R2,LSL#2|3-235-130-2
77806|code|LSLS            R2, R2, #3; timeout|210-0
77808|code|BLX             poll|254-247-240-238
77812|code|CMP             R0, #0|0-40
77814|code|BLT             loc_1300C|9-219
77816|code|BEQ             locret_1300A|7-208
77818|code|LDR             R0, [R5,#4]; fd|104-104
77820|code|MOV             R1, R6; buf|49-70
77822|code|MOV             R2, R4; nbytes|34-70
77824|code|BLX             read|254-247-206-238
77828|code|CMP             R4, R0|132-66
77830|code|BNE             loc_1302C|17-209
77832|code|POP             {R4-R6,PC}|112-189
77834|code|POP             {R4-R6,PC}|112-189
77836|code|MOVW            R3, #0x8488|72-242-136-67
77840|code|MOVW            R0, #0x7310|71-242-16-48
77844|code|MOVT.W          R3, #2|192-242-2-3
77848|code|MOVS            R1, #1; size|1-33
77850|code|LDR             R3, [R3]; s|27-104
77852|code|MOVS            R2, #0x15; n|21-34
77854|code|MOVT.W          R0, #1; ptr|192-242-1-0
77858|code|BLX             fwrite|254-247-184-239
77862|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
77866|code|POP             {R4-R6,PC}|112-189
77868|code|MOVW            R3, #0x8488|72-242-136-67
77872|code|MOVW            R0, #0x7328|71-242-40-48
77876|code|MOVT.W          R3, #2|192-242-2-3
77880|code|MOVT.W          R0, #1; ptr|192-242-1-0
77884|code|LDR             R3, [R3]; s|27-104
77886|code|MOVS            R1, #1; size|1-33
77888|code|MOVS            R2, #0x1F; n|31-34
77890|code|BLX             fwrite|254-247-168-239
77894|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
77898|code|B               locret_13008|221-231
77900|code|PUSH.W          {R3-R9,LR}|45-233-248-67
77904|code|MOV             R7, R0|7-70
77906|code|MOV             R9, R1|137-70
77908|code|MOV             R8, R2|144-70
77910|code|CBZ             R3, loc_13076|115-177
77912|code|RSB.W           R5, R3, R3,LSL#5|195-235-67-21
77916|code|ADD.W           R6, R0, #0x18|0-241-24-6
77920|code|ADD.W           R3, R3, R5,LSL#2|3-235-133-3
77924|code|LSLS            R5, R3, #3|221-0
77926|code|MOV             R0, R6; fds|48-70
77928|code|MOVS            R1, #1; nfds|1-33
77930|code|MOV             R2, R5; timeout|42-70
77932|code|BLX             poll|254-247-178-238
77936|code|SUBS            R4, R0, #0|4-30
77938|code|BLT             loc_1308E|12-219
77940|code|BEQ             loc_13088|8-208
77942|code|LDR             R0, [R7,#8]; fd|184-104
77944|code|MOV             R1, R9; buf|73-70
77946|code|MOV             R2, R8; n|66-70
77948|code|BLX             write|254-247-180-239
77952|code|CMP             R8, R0|128-69
77954|code|BNE             loc_130C0|29-209
77956|code|POP.W           {R3-R9,PC}|189-232-248-131
77960|code|MOV             R0, R4|32-70
77962|code|POP.W           {R3-R9,PC}|189-232-248-131
77966|code|BLX             __errno_location|254-247-232-239
77970|code|LDR             R3, [R0]|3-104
77972|code|CMP             R3, #4|4-43
77974|code|BNE             loc_1309E|2-209
77976|code|ADDS            R4, #1|1-52
77978|code|BEQ             loc_13066|228-208
77980|code|B               loc_13076|235-231
77982|code|MOVW            R3, #0x8488|72-242-136-67
77986|code|MOVW            R0, #0x7348|71-242-72-48
77990|code|MOVT.W          R3, #2|192-242-2-3
77994|code|MOVS            R1, #1; size|1-33
77996|code|LDR             R3, [R3]; s|27-104
77998|code|MOVS            R2, #0x16; n|22-34
78000|code|MOVT.W          R0, #1; ptr|192-242-1-0
78004|code|BLX             fwrite|254-247-110-239
78008|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78012|code|POP.W           {R3-R9,PC}|189-232-248-131
78016|code|MOVW            R3, #0x8488|72-242-136-67
78020|code|MOVW            R0, #0x7360|71-242-96-48
78024|code|MOVT.W          R3, #2|192-242-2-3
78028|code|MOVS            R1, #1; size|1-33
78030|code|LDR             R3, [R3]; s|27-104
78032|code|MOVS            R2, #0x1E; n|30-34
78034|code|MOVT.W          R0, #1; ptr|192-242-1-0
78038|code|BLX             fwrite|254-247-94-239
78042|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
78046|code|POP.W           {R3-R9,PC}|189-232-248-131
78050|data|ALIGN 4|0-191
78052|code|BX              LR|112-71
78054|data|ALIGN 4|0-191
78056|code|PUSH            {R3-R5,LR}|56-181
78058|code|MOV             R4, R0|4-70
78060|code|LDR             R3, =off_17388|8-75
78062|code|MOVS            R5, #0|0-37
78064|code|MOVS            R1, #1|1-33
78066|code|STR             R5, [R4,#4]|101-96
78068|code|STR             R5, [R4,#8]|165-96
78070|code|ADDS            R0, #0xC|12-48
78072|code|STR             R3, [R4]|35-96
78074|code|BL              sub_13F60|0-240-49-255
78078|code|MOVS            R2, #0|0-34
78080|code|MOVS            R3, #0|0-35
78082|code|STR             R5, [R4,#0x24]|101-98
78084|code|STR             R5, [R4,#0x30]|37-99
78086|code|MOV             R0, R4|32-70
78088|code|STRD.W          R2, R3, [R4,#0x28]|196-233-10-35
78092|code|POP             {R3-R5,PC}|56-189
78094|data|ALIGN 0x10|0-191
78096|data|DCD off_17388|136-115-1-0
78100|code|PUSH            {R4,LR}|16-181
78102|code|SUB             SP, SP, #8|130-176
78104|code|MOV             R4, R0|4-70
78106|code|ADD.W           R1, R0, #0xC|0-241-12-1
78110|code|ADD             R0, SP, #0x10+var_C|1-168
78112|code|BL              sub_14000|0-240-110-255
78116|code|LDR             R3, [R4,#0x30]|35-107
78118|code|ADD             R0, SP, #0x10+var_C|1-168
78120|code|ADDS            R3, #1|1-51
78122|code|STR             R3, [R4,#0x30]|35-99
78124|code|BL              sub_14040|0-240-136-255
78128|code|ADD             SP, SP, #8|2-176
78130|code|POP             {R4,PC}|16-189
78132|code|PUSH            {R4,R5,LR}|48-181
78134|code|SUB             SP, SP, #0xC|131-176
78136|code|MOV             R4, R0|4-70
78138|code|MOV             R5, R1|13-70
78140|code|ADD.W           R1, R0, #0xC|0-241-12-1
78144|code|ADD             R0, SP, #0x18+var_14|1-168
78146|code|BL              sub_14000|0-240-93-255
78150|code|LDRD.W          R2, R3, [R4,#0x28]|212-233-10-35
78154|code|ADD             R0, SP, #0x18+var_14|1-168
78156|code|ADDS            R2, R2, R5|82-25
78158|code|ADC.W           R3, R3, R5,ASR#31|67-235-229-115
78162|code|STRD.W          R2, R3, [R4,#0x28]|196-233-10-35
78166|code|BL              sub_14040|0-240-115-255
78170|code|ADD             SP, SP, #0xC|3-176
78172|code|POP             {R4,R5,PC}|48-189
78174|data|ALIGN 0x10|0-191
78176|code|PUSH            {R4,LR}|16-181
78178|code|SUB             SP, SP, #8|130-176
78180|code|MOV             R4, R0|4-70
78182|code|ADD.W           R1, R0, #0xC|0-241-12-1
78186|code|ADD             R0, SP, #0x10+var_C|1-168
78188|code|BL              sub_14000|0-240-72-255
78192|code|LDR             R3, [R4,#0x24]|99-106
78194|code|ADD             R0, SP, #0x10+var_C|1-168
78196|code|ADDS            R3, #1|1-51
78198|code|STR             R3, [R4,#0x24]|99-98
78200|code|BL              sub_14040|0-240-98-255
78204|code|ADD             SP, SP, #8|2-176
78206|code|POP             {R4,PC}|16-189
78208|code|PUSH            {R4,LR}|16-181
78210|code|SUB             SP, SP, #8|130-176
78212|code|MOV             R4, R0|4-70
78214|code|ADD.W           R1, R0, #0xC|0-241-12-1
78218|code|ADD             R0, SP, #0x10+var_C|1-168
78220|code|BL              sub_14000|0-240-56-255
78224|code|LDR             R3, [R4,#4]|99-104
78226|code|ADD             R0, SP, #0x10+var_C|1-168
78228|code|ADDS            R3, #1|1-51
78230|code|STR             R3, [R4,#4]|99-96
78232|code|BL              sub_14040|0-240-82-255
78236|code|ADD             SP, SP, #8|2-176
78238|code|POP             {R4,PC}|16-189
78240|code|PUSH            {R4,LR}|16-181
78242|code|SUB             SP, SP, #8|130-176
78244|code|MOV             R4, R0|4-70
78246|code|ADD.W           R1, R0, #0xC|0-241-12-1
78250|code|ADD             R0, SP, #0x10+var_C|1-168
78252|code|BL              sub_14000|0-240-40-255
78256|code|LDR             R3, [R4,#8]|163-104
78258|code|ADD             R0, SP, #0x10+var_C|1-168
78260|code|ADDS            R3, #1|1-51
78262|code|STR             R3, [R4,#8]|163-96
78264|code|BL              sub_14040|0-240-66-255
78268|code|ADD             SP, SP, #8|2-176
78270|code|POP             {R4,PC}|16-189
78272|code|PUSH            {R4-R7,LR}|240-181
78274|code|MOV             R4, R0|4-70
78276|code|SUB             SP, SP, #0x14|133-176
78278|code|MOVS            R0, #0; timer|0-32
78280|code|BLX             time|254-247-68-239
78284|code|ADD             R3, SP, #0x28+var_18|4-171
78286|code|STR.W           R0, [R3,#-4]!|67-248-4-13
78290|code|MOV             R0, R3; timer|24-70
78292|code|BLX             localtime|254-247-22-238
78296|code|LDR             R5, [R4,#0x28]|165-106
78298|code|LDR             R6, [R4,#0x30]|38-107
78300|code|LSRS            R5, R5, #0xA|173-10
78302|code|MOV             R3, R0|3-70
78304|code|MOVW            R0, #0x73A8|71-242-168-48
78308|code|LDR             R1, [R3,#8]|153-104
78310|code|MOVT.W          R0, #1; format|192-242-1-0
78314|code|LDR             R2, [R3,#4]|90-104
78316|code|LDR             R3, [R4,#0x24]|99-106
78318|code|STMEA.W         SP, {R5,R6}|141-232-96-0
78322|code|BLX             printf|254-247-94-237
78326|code|MOVW            R0, #0x73BC|71-242-188-48
78330|code|LDR             R1, [R4,#4]|97-104
78332|code|MOVT.W          R0, #1; format|192-242-1-0
78336|code|LDR             R2, [R4,#8]|162-104
78338|code|BLX             printf|254-247-86-237
78342|code|LDR             R2, [R4]|34-104
78344|code|MOVW            R3, #0x30E5|67-242-229-3
78348|code|MOVS            R1, #0|0-33
78350|code|MOVT.W          R3, #1|192-242-1-3
78354|code|STR             R1, [R4,#8]|161-96
78356|code|LDR             R2, [R2,#8]|146-104
78358|code|CMP             R2, R3|154-66
78360|code|BNE             loc_13244|20-209
78362|code|MOVS            R0, #0xA; c|10-32
78364|code|MOVW            R6, #0x3FF|64-242-255-54
78368|code|BLX             putchar|254-247-142-237
78372|code|MOVS            R0, #0; stream|0-32
78374|code|BLX             fflush|254-247-40-239
78378|code|LDRD.W          R0, R1, [R4,#0x28]|212-233-10-1
78382|code|MOVS            R3, #0|0-35
78384|code|MOVS            R7, #0|0-39
78386|code|ANDS            R0, R6|48-64
78388|code|ANDS            R1, R7|57-64
78390|code|STR             R3, [R4,#0x24]|99-98
78392|code|STRD.W          R0, R1, [R4,#0x28]|196-233-10-1
78396|code|STR             R3, [R4,#4]|99-96
78398|code|STR             R3, [R4,#0x30]|35-99
78400|code|ADD             SP, SP, #0x14|5-176
78402|code|POP             {R4-R7,PC}|240-189
78404|code|MOV             R0, R4|32-70
78406|code|BLX             R2|144-71
78408|code|B               loc_1321A|231-231
78410|data|ALIGN 4|0-191
78412|code|LDR             R3, =off_17388|8-75
78414|code|PUSH            {R4,LR}|16-181
78416|code|MOV             R4, R0|4-70
78418|code|STR             R3, [R0]|3-96
78420|code|BL              sub_131C0|255-247-180-255
78424|code|ADD.W           R0, R4, #0xC|4-241-12-0
78428|code|BL              sub_13FC4|0-240-178-254
78432|code|MOV             R0, R4|32-70
78434|code|POP             {R4,PC}|16-189
78436|code|ADD.W           R0, R4, #0xC|4-241-12-0
78440|code|BL              sub_13FC4|0-240-172-254
78444|code|BLX             __cxa_end_cleanup|254-247-26-238
78448|data|DCD off_17388|136-115-1-0
78452|code|PUSH            {R4,LR}|16-181
78454|code|MOV             R4, R0|4-70
78456|code|BL              sub_1324C|255-247-232-255
78460|code|MOV             R0, R4; void *|32-70
78462|code|BLX             _ZdlPv; operator delete(void *)|254-247-226-237
78466|code|MOV             R0, R4|32-70
78468|code|POP             {R4,PC}|16-189
78470|data|ALIGN 4|0-191
78472|code|PUSH            {R4,LR}|16-181
78474|code|SUB             SP, SP, #8|130-176
78476|code|MOV             R4, R0|4-70
78478|code|ADD.W           R1, R0, #0xC|0-241-12-1
78482|code|ADD             R0, SP, #0x10+var_C|1-168
78484|code|BL              sub_14000|0-240-180-254
78488|code|MOV             R0, R4|32-70
78490|code|BL              sub_131C0|255-247-145-255
78494|code|ADD             R0, SP, #0x10+var_C|1-168
78496|code|BL              sub_14040|0-240-206-254
78500|code|ADD             SP, SP, #8|2-176
78502|code|POP             {R4,PC}|16-189
78504|code|ADD             R0, SP, #arg_4|1-168
78506|code|BL              sub_14040|0-240-201-254
78510|code|BLX             __cxa_end_cleanup|254-247-250-237
78514|data|ALIGN 4|0-191
78516|code|PUSH            {R3-R5,LR}|56-181
78518|code|MOV             R5, R0|5-70
78520|code|LDR             R3, [R0,#0xC]|195-104
78522|code|CMP             R3, #0|0-43
78524|code|BLE             loc_132D2|9-221
78526|code|MOVS            R4, #0|0-36
78528|code|LDR             R3, [R5,#4]|107-104
78530|code|LDR.W           R0, [R3,R4,LSL#2]; ptr|83-248-36-0
78534|code|ADDS            R4, #1|1-52
78536|code|BLX             free|254-247-182-236
78540|code|LDR             R3, [R5,#0xC]|235-104
78542|code|CMP             R3, R4|163-66
78544|code|BGT             loc_132C0|246-220
78546|code|LDR             R0, [R5,#4]; ptr|104-104
78548|code|BLX             free|254-247-176-236
78552|code|LDR             R0, [R5,#8]; ptr|168-104
78554|code|BLX             free|254-247-174-236
78558|code|LDR             R0, [R5]; ptr|40-104
78560|code|BLX             free|254-247-170-236
78564|code|MOV             R0, R5|40-70
78566|code|POP             {R3-R5,PC}|56-189
78568|code|PUSH            {R3-R5,LR}|56-181
78570|code|MOV             R5, R0|5-70
78572|code|LDR             R3, [R0,#4]|67-104
78574|code|MOV             R4, R1|12-70
78576|code|LDR.W           R0, [R3,R1,LSL#2]; name|83-248-33-0
78580|code|BLX             gethostbyname|254-247-128-237
78584|code|CBZ             R0, loc_1330C|64-177
78586|code|LDR             R2, [R0,#0x10]|2-105
78588|code|MOVS            R0, #0|0-32
78590|code|LDR             R3, [R5]|43-104
78592|code|LDR             R2, [R2]|18-104
78594|code|ADD.W           R1, R3, R4,LSL#4|3-235-4-17
78598|code|LDR             R3, [R2]|19-104
78600|code|STR             R3, [R1,#4]|75-96
78602|code|POP             {R3-R5,PC}|56-189
78604|code|LDR             R2, [R5,#4]|106-104
78606|code|MOV             R3, #0x28488|72-242-136-67-192-242-2-3
78614|code|MOVW            R1, #0x73C4|71-242-196-49
78618|code|LDR             R0, [R3]; stream|24-104
78620|code|MOVT.W          R1, #1; format|192-242-1-1
78624|code|LDR.W           R2, [R2,R4,LSL#2]|82-248-36-32
78628|code|BLX             fprintf|254-247-84-238
78632|code|MOVS            R0, #1|1-32
78634|code|POP             {R3-R5,PC}|56-189
78636|code|PUSH.W          {R4-R11,LR}|45-233-240-79
78640|code|SUB             SP, SP, #0x1C|135-176
78642|code|MOV             R11, R0|131-70
78644|code|MOV             R0, R1; s|8-70
78646|code|MOV             R4, R1|12-70
78648|code|STR             R1, [SP,#0x40+var_2C]|5-145
78650|code|MOV             R5, R2|21-70
78652|code|BLX             strdup|254-247-210-238
78656|code|MOV             R9, R0|129-70
78658|code|MOV             R0, R4; s|32-70
78660|code|BLX             strlen|254-247-56-238
78664|code|MOVS            R3, #1|1-35
78666|code|STR.W           R3, [R11,#0xC]|203-248-12-48
78670|code|CMP             R0, #0|0-40
78672|code|BLE.W           loc_134C8|64-243-186-128
78676|code|ADD.W           R4, R9, R0|9-235-0-4
78680|code|MOV             R2, R9|74-70
78682|code|MOV             R0, R3|24-70
78684|code|LDRB.W          R3, [R2],#1|18-248-1-59
78688|code|CMP             R3, #0x2C ; ','|44-43
78690|code|ITT EQ|4-191
78692|code|ADDEQ           R0, #1|1-48
78694|code|STREQ.W         R0, [R11,#0xC]|203-248-12-0
78698|code|CMP             R2, R4|162-66
78700|code|BNE             loc_1335C|246-209
78702|code|LSLS            R7, R0, #2|135-0
78704|code|LSLS            R3, R0, #4|3-1
78706|code|STR             R0, [SP,#0x40+size]|2-144
78708|code|MOV             R8, R0|128-70
78710|code|MOV             R0, R7; size|56-70
78712|code|STR             R3, [SP,#0x40+var_34]|3-147
78714|code|BLX             malloc|254-247-24-238
78718|code|STR             R0, [SP,#0x40+ptr]|1-144
78720|code|LDR             R3, [SP,#0x40+ptr]|1-155
78722|code|MOVS            R4, #0|0-36
78724|code|MOV             LR, R4|166-70
78726|code|MOV             R10, R4|162-70
78728|code|SUBS            R3, #4|4-59
78730|code|MOV             R12, R3|156-70
78732|code|LDRB.W          R2, [R9,R4]|25-248-4-32
78736|code|ADD.W           R6, R9, R4|9-235-4-6
78740|code|STR.W           R6, [R12,#4]!|76-248-4-111
78744|code|CMP             R2, #0x2C ; ','|44-42
78746|code|IT NE|24-191
78748|code|CMPNE           R2, #0|0-42
78750|code|BEQ             loc_133BA|12-208
78752|code|ADDS            R1, R4, #1|97-28
78754|code|ADD.W           R2, R9, R1|9-235-1-2
78758|code|B               loc_133AA|0-224
78760|code|ADDS            R1, #1|1-49
78762|code|MOV             R6, R2|22-70
78764|code|LDRB.W          R0, [R2],#1|18-248-1-11
78768|code|MOV             R4, R1|12-70
78770|code|CMP             R0, #0x2C ; ','|44-40
78772|code|IT NE|24-191
78774|code|CMPNE           R0, #0|0-40
78776|code|BNE             loc_133A8|246-209
78778|code|ADD.W           LR, LR, #1|14-241-1-14
78782|code|STRB.W          R10, [R6]|134-248-0-160
78786|code|CMP             R8, LR|240-69
78788|code|ADD.W           R4, R4, #1|4-241-1-4
78792|code|BGT             loc_1338C|224-220
78794|code|LDR             R0, [SP,#0x40+size]; size|2-152
78796|code|MOVS            R4, #0|0-36
78798|code|STR             R3, [SP,#0x40+var_30]|4-147
78800|code|BLX             malloc|254-247-236-237
78804|code|MOV             R8, R4|160-70
78806|code|MOV             R10, R5|170-70
78808|code|MOV             R1, R0|1-70
78810|code|LDR             R0, [SP,#0x40+var_34]; size|3-152
78812|code|STR.W           R1, [R11,#8]|203-248-8-16
78816|code|STR             R1, [SP,#0x40+size]|2-145
78818|code|BLX             malloc|254-247-228-237
78822|code|LDR             R3, [SP,#0x40+var_30]|4-155
78824|code|MOV             R6, R3|30-70
78826|code|STR.W           R0, [R11]|203-248-0-0
78830|code|MOV             R0, R7; size|56-70
78832|code|BLX             malloc|254-247-220-237
78836|code|LDR             R1, [SP,#0x40+size]|2-153
78838|code|STR.W           R9, [SP,#0x40+size]|205-248-8-144
78842|code|STR.W           R0, [R11,#4]|203-248-4-0
78846|code|LDR.W           R5, [R6,#4]!|86-248-4-95
78850|code|LSLS            R7, R4, #2|167-0
78852|code|LDRB            R3, [R5]|43-120
78854|code|CMP             R3, #0x2B ; '+'|43-43
78856|code|ITEEE NE|17-191
78858|code|STRBNE.W        R8, [R1,R4]|1-248-4-128
78862|code|MOVEQ           R3, #1|1-35
78864|code|ADDEQ           R5, R5, R3|237-24
78866|code|STRBEQ          R3, [R1,R4]|11-85
78868|code|LDRB            R3, [R5]|43-120
78870|code|CMP             R3, #0x5B ; '['|91-43
78872|code|BNE             loc_1345E|33-209
78874|code|LDRB            R3, [R5,#1]|107-120
78876|code|ADD.W           R10, R5, #1|5-241-1-10
78880|code|CMP             R3, #0x5D ; ']'|93-43
78882|code|IT NE|24-191
78884|code|CMPNE           R3, #0|0-43
78886|code|ITE NE|20-191
78888|code|MOVNE           R0, #1|1-32
78890|code|MOVEQ           R0, #0|0-32
78892|code|BEQ             loc_134AC|62-208
78894|code|ADDS            R5, #2|2-53
78896|code|MOVS            R2, #0|0-34
78898|code|MOV             R1, R5|41-70
78900|code|LDRB.W          R3, [R5],#1|21-248-1-59
78904|code|ADDS            R2, #1|1-50
78906|code|CMP             R3, #0x5D ; ']'|93-43
78908|code|IT NE|24-191
78910|code|CMPNE           R3, #0|0-43
78912|code|MOV             R0, R2|16-70
78914|code|BNE             loc_13432|246-209
78916|code|CMP             R3, #0|0-43
78918|code|BEQ             loc_134DC|73-208
78920|code|ADDS            R0, #1|1-48
78922|code|STRB.W          R8, [R1]|129-248-0-128
78926|code|ADD             R0, R10; nptr|80-68
78928|code|MOVS            R1, #0; endptr|0-33
78930|code|MOVS            R2, #0xA; base|10-34
78932|code|MOV             R5, R10|85-70
78934|code|BLX             strtol|254-247-234-235
78938|code|UXTH.W          R10, R0|31-250-128-250
78942|code|MOV             R0, R5; s|40-70
78944|code|LDR.W           R9, [R11,#4]|219-248-4-144
78948|code|BLX             strdup|254-247-62-238
78952|code|LSLS            R3, R4, #4|35-1
78954|code|MOV.W           R2, R10,LSR#8|79-234-26-34
78958|code|MOVS            R5, #2|2-37
78960|code|ORR.W           R2, R2, R10,LSL#8|66-234-10-34
78964|code|STR.W           R0, [R9,R7]|73-248-7-0
78968|code|LDR.W           R1, [R11,#8]|219-248-8-16
78972|code|LDR.W           R0, [R11]|219-248-0-0
78976|code|LDRB            R1, [R1,R4]|9-93
78978|code|ADDS            R7, R0, R3|199-24
78980|code|STRH            R5, [R0,R3]|197-82
78982|code|STRH            R2, [R7,#2]|122-128
78984|code|CBZ             R1, loc_1349A|57-177
78986|code|LDR.W           R3, [R11,#0xC]|219-248-12-48
78990|code|ADDS            R4, #1|1-52
78992|code|CMP             R3, R4|163-66
78994|code|BLE             loc_134B0|13-221
78996|code|LDR.W           R1, [R11,#8]|219-248-8-16
79000|code|B               loc_133FE|177-231
79002|code|MOV             R0, R11|88-70
79004|code|MOV             R1, R4|33-70
79006|code|BL              sub_132E8|255-247-35-255
79010|code|CMP             R0, #0|0-40
79012|code|BEQ             loc_1348A|241-208
79014|code|MOVS            R0, #1; status|1-32
79016|code|BLX             exit|254-247-252-235
79020|code|MOV             R1, R10|81-70
79022|code|B               loc_13444|201-231
79024|code|LDR.W           R9, [SP,#0x40+size]|221-248-8-144
79028|code|LDR             R0, [SP,#0x40+ptr]; ptr|1-152
79030|code|BLX             free|254-247-192-235
79034|code|MOV             R0, R9; ptr|72-70
79036|code|BLX             free|254-247-188-235
79040|code|MOV             R0, R11|88-70
79042|code|ADD             SP, SP, #0x1C|7-176
79044|code|POP.W           {R4-R11,PC}|189-232-240-143
79048|code|MOVS            R0, #4; size|4-32
79050|code|MOV             R8, R3|152-70
79052|code|STR             R3, [SP,#0x40+size]|2-147
79054|code|BLX             malloc|254-247-110-237
79058|code|MOVS            R7, #4|4-39
79060|code|MOVS            R3, #0x10|16-35
79062|code|STR             R3, [SP,#0x40+var_34]|3-147
79064|code|STR             R0, [SP,#0x40+ptr]|1-144
79066|code|B               loc_13380|81-231
79068|code|MOVW            R3, #0x8488|72-242-136-67
79072|code|MOVW            R1, #0x73E4|71-242-228-49
79076|code|MOVT.W          R3, #2|192-242-2-3
79080|code|LDR             R2, [SP,#0x40+var_2C]|5-154
79082|code|LDR             R0, [R3]; stream|24-104
79084|code|MOVT.W          R1, #1; format|192-242-1-1
79088|code|BLX             fprintf|254-247-110-237
79092|code|MOVS            R0, #1; status|1-32
79094|code|BLX             exit|254-247-214-235
79098|data|ALIGN 4|0-191
79100|code|SUBS            R2, R1, #0|10-30
79102|code|PUSH            {R3-R5,LR}|56-181
79104|code|MOV             R3, R0|3-70
79106|code|BLT             loc_1351C|11-219
79108|code|LDR             R4, [R0,#0xC]|196-104
79110|code|CMP             R2, R4|162-66
79112|code|BGT             loc_1351C|8-220
79114|code|LDR             R3, [R0,#8]|131-104
79116|code|MOV             R5, R2|21-70
79118|code|MOV             R4, R0|4-70
79120|code|LDRB            R3, [R3,R2]|155-92
79122|code|CBNZ            R3, loc_13526|67-185
79124|code|LDR             R0, [R4]|32-104
79126|code|ADD.W           R0, R0, R5,LSL#4|0-235-5-16
79130|code|POP             {R3-R5,PC}|56-189
79132|code|MOV             R0, R3|24-70
79134|code|POP.W           {R3-R5,LR}|189-232-56-64
79138|code|B.W             sub_13534|0-240-7-184
79142|code|BL              sub_132E8|255-247-223-254
79146|code|CMP             R0, #0|0-40
79148|code|BEQ             loc_13514|242-208
79150|code|MOVS            R0, #0|0-32
79152|code|POP             {R3-R5,PC}|56-189
79154|data|ALIGN 4|0-191
79156|code|LDR             R3, [R0,#0xC]|195-104
79158|code|PUSH            {R4,LR}|16-181
79160|code|CMP             R3, #1|1-43
79162|code|MOV             R4, R0|4-70
79164|code|IT LE|216-191
79166|code|MOVLE           R1, #0|0-33
79168|code|BLE             loc_1354C|4-221
79170|code|BLX             rand|254-247-86-235
79174|code|LDR             R1, [R4,#0xC]|225-104
79176|code|BLX             __aeabi_idivmod|254-247-226-236
79180|code|MOV             R0, R4|32-70
79182|code|POP.W           {R4,LR}|189-232-16-64
79186|code|B.W             sub_134FC|255-247-211-191
79190|data|ALIGN 4|0-191
79192|code|PUSH            {R4}|16-180
79194|code|MOV             R3, R2|19-70
79196|code|LDR             R4, [R0]|4-104
79198|code|LDR             R1, [R1]|9-104
79200|code|LDR             R4, [R4,#0x2C]|228-106
79202|code|LDR.W           R2, [R1,#-0xC]|81-248-12-44
79206|code|MOV             R12, R4|164-70
79208|code|POP.W           {R4}|93-248-4-75
79212|code|BX              R12|96-71
79214|data|ALIGN 0x10|0-191
79216|code|MOVW            R3, #0x10CC|65-242-204-3
79220|code|LDRB            R3, [R0,R3]|195-92
79222|code|PUSH            {R4-R6,LR}|112-181
79224|code|MOV             R4, R0|4-70
79226|code|CBZ             R3, loc_1358C|59-177
79228|code|MOVW            R5, #0x10E4|65-242-228-5
79232|code|LDRB            R3, [R0,R5]|67-93
79234|code|CBNZ            R3, loc_13598|75-185
79236|code|LDR.W           R0, [R0,#0xB8]; fd|208-248-184-0
79240|code|BLX             close|254-247-248-235
79244|code|MOVS            R3, #0|0-35
79246|code|MOVW            R2, #0x10CC|65-242-204-2
79250|code|MOV             R0, R3|24-70
79252|code|STRB            R3, [R4,R2]|163-84
79254|code|POP             {R4-R6,PC}|112-189
79256|code|MOVW            R6, #0x10DC|65-242-220-6
79260|code|MOVS            R1, #0|0-33
79262|code|LDR             R3, [R0,R6]|131-89
79264|code|LDR             R0, [R3]|24-104
79266|code|BLX             gnutls_bye|254-247-236-236
79270|code|LDR.W           R0, [R4,#0xB8]; fd|212-248-184-0
79274|code|BLX             close|254-247-232-235
79278|code|LDR             R3, [R4,R6]|163-89
79280|code|LDR             R0, [R3]|24-104
79282|code|BLX             gnutls_deinit|254-247-150-235
79286|code|ADD.W           R3, R4, #0x10E0|4-245-135-83
79290|code|LDR             R0, [R3]|24-104
79292|code|BLX             gnutls_anon_free_client_credentials|254-247-198-236
79296|code|MOVS            R3, #0|0-35
79298|code|MOVW            R2, #0x10CC|65-242-204-2
79302|code|STRB            R3, [R4,R5]|99-85
79304|code|MOVS            R3, #0|0-35
79306|code|STRB            R3, [R4,R2]|163-84
79308|code|MOV             R0, R3|24-70
79310|code|POP             {R4-R6,PC}|112-189
79312|code|PUSH.W          {R3-R11,LR}|45-233-248-79
79316|code|MOV             R7, R0|7-70
79318|code|MOV             R5, R2|21-70
79320|code|CMP             R2, #0|0-42
79322|code|BEQ             loc_13680|81-208
79324|code|LDR.W           R3, [R0,#0xB4]|208-248-180-48
79328|code|LDR             R3, [R3]|27-104
79330|code|CMP             R3, #1|1-43
79332|code|BGT             loc_13690|84-220
79334|code|ADD.W           R11, R0, #0x10C0|0-245-134-91
79338|code|ADD.W           R8, R0, #0x10E0|0-245-135-88
79342|code|MOV             R6, R1|14-70
79344|code|ADD.W           R8, R8, #4|8-241-4-8
79348|code|MOV             R9, R11|217-70
79350|code|ADD.W           R10, R0, #0xBC|0-241-188-10
79354|code|ADD.W           R11, R11, #0x1C|11-241-28-11
79358|code|ADD.W           R9, R9, #0x18|9-241-24-9
79362|code|MOVS            R4, #0|0-36
79364|code|B               loc_13638|24-224
79366|code|LDR.W           R3, [R11]|219-248-0-48
79370|code|ADDS            R1, R6, R4|49-25
79372|code|SUBS            R2, R5, R4|42-27
79374|code|LDR             R0, [R3]|24-104
79376|code|BLX             gnutls_record_send|254-247-66-236
79380|code|MOV             R1, R6|49-70
79382|code|CMP             R0, #0|0-40
79384|code|MOV             R2, R0|2-70
79386|code|ADD             R4, R0|4-68
79388|code|BLE             loc_13668|36-221
79390|code|LDR.W           R3, [R9]|217-248-0-48
79394|code|MOV             R0, R3|24-70
79396|code|CBZ             R3, loc_1362A|11-177
79398|code|BL              sub_14274|0-240-37-254
79402|code|CMP             R5, R4|165-66
79404|code|BEQ             loc_13680|40-208
79406|code|LDR.W           R3, [R7,#0xB4]|215-248-180-48
79410|code|LDR             R3, [R3]|27-104
79412|code|CMP             R3, #1|1-43
79414|code|BGT             loc_13690|43-220
79416|code|MOVS            R1, #1; nfds|1-33
79418|code|MOVW            R2, #0xEA60; timeout|78-246-96-34
79422|code|MOV             R0, R10; fds|80-70
79424|code|BLX             poll|254-247-200-235
79428|code|ADDS            R1, R6, R4; buf|49-25
79430|code|SUBS            R2, R5, R4; n|42-27
79432|code|CMP             R0, #0|0-40
79434|code|BEQ             loc_13696|36-208
79436|code|BLT             loc_136C0|56-219
79438|code|LDRB.W          R3, [R8]|152-248-0-48
79442|code|CMP             R3, #0|0-43
79444|code|BNE             loc_13606|215-209
79446|code|LDR.W           R0, [R7,#0xB8]; fd|215-248-184-0
79450|code|BLX             write|254-247-198-236
79454|code|MOV             R1, R6|49-70
79456|code|CMP             R0, #0|0-40
79458|code|MOV             R2, R0|2-70
79460|code|ADD             R4, R0|4-68
79462|code|BGT             loc_1361E|218-220
79464|code|MOVW            R3, #0x8488|72-242-136-67
79468|code|MOVW            R0, #0x7474|71-242-116-64
79472|code|MOVT.W          R3, #2|192-242-2-3
79476|code|MOVT.W          R0, #1|192-242-1-0
79480|code|LDR             R3, [R3]|27-104
79482|code|MOVS            R1, #1|1-33
79484|code|MOVS            R2, #0x17|23-34
79486|code|B               loc_136D6|42-224
79488|code|LDR             R3, [R7]|59-104
79490|code|MOV             R0, R7|56-70
79492|code|MOV             R1, R5|41-70
79494|code|LDR             R3, [R3,#0x20]|27-106
79496|code|BLX             R3|152-71
79498|code|MOVS            R0, #0|0-32
79500|code|POP.W           {R3-R11,PC}|189-232-248-143
79504|code|MOVS            R0, #5|5-32
79506|code|POP.W           {R3-R11,PC}|189-232-248-143
79510|code|MOVW            R3, #0x8488|72-242-136-67
79514|code|MOVW            R0, #0x7448|71-242-72-64
79518|code|MOVT.W          R3, #2|192-242-2-3
79522|code|MOVS            R1, #1; size|1-33
79524|code|MOVS            R2, #0x1B; n|27-34
79526|code|LDR             R3, [R3]; s|27-104
79528|code|MOVT.W          R0, #1; ptr|192-242-1-0
79532|code|BLX             fwrite|254-247-114-236
79536|code|LDR             R3, [R7]|59-104
79538|code|MOV             R0, R7|56-70
79540|code|LDR             R3, [R3,#0x1C]|219-105
79542|code|BLX             R3|152-71
79544|code|MOV             R0, #0xFFFFFFFD|111-240-2-0
79548|code|POP.W           {R3-R11,PC}|189-232-248-143
79552|code|MOVW            R3, #0x8488|72-242-136-67
79556|code|MOVW            R0, #0x7464|71-242-100-64
79560|code|MOVT.W          R3, #2|192-242-2-3
79564|code|MOVT.W          R0, #1; ptr|192-242-1-0
79568|code|LDR             R3, [R3]; s|27-104
79570|code|MOVS            R1, #1; size|1-33
79572|code|MOVS            R2, #0xC; n|12-34
79574|code|BLX             fwrite|254-247-94-236
79578|code|LDR             R3, [R7]|59-104
79580|code|MOV             R0, R7|56-70
79582|code|LDR             R3, [R3,#0x1C]|219-105
79584|code|BLX             R3|152-71
79586|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
79590|code|POP.W           {R3-R11,PC}|189-232-248-143
79594|data|ALIGN 4|0-191
79596|code|PUSH            {R4-R6,LR}|112-181
79598|code|MOVW            R5, #0x10CC|65-242-204-5
79602|code|LDRB            R5, [R0,R5]|69-93
79604|code|MOV             R4, R0|4-70
79606|code|CBNZ            R5, loc_136FE|21-185
79608|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
79612|code|POP             {R4-R6,PC}|112-189
79614|code|MOV             R5, R3|29-70
79616|code|MOVS            R3, #0x3C ; '<'|60-35
79618|code|STRH.W          R3, [R0,#0xC0]|160-248-192-48
79622|code|BL              sub_135D0|255-247-99-255
79626|code|CMP             R0, #0|0-40
79628|code|BNE             locret_136FC|246-209
79630|code|LDR             R3, [R4]|35-104
79632|code|MOV             R1, R5|41-70
79634|code|MOV             R0, R4|32-70
79636|code|POP.W           {R4-R6,LR}|189-232-112-64
79640|code|LDR             R3, [R3,#0x28]|155-106
79642|code|BX              R3|24-71
79644|code|PUSH.W          {R4-R10,LR}|45-233-240-71
79648|code|MOV             R9, R3|153-70
79650|code|MOV             R4, R0|4-70
79652|code|MOV             R5, R1|13-70
79654|code|MOV             R10, R2|146-70
79656|code|LDR             R7, [SP,#0x20+arg_0]|8-159
79658|code|LDR             R6, [SP,#0x20+arg_4]|9-158
79660|code|LDR.W           R8, [SP,#0x20+arg_8]|221-248-40-128
79664|code|BL              sub_12DC0|255-247-70-251
79668|code|LDR             R3, =off_17400|48-75
79670|code|MOV             R0, R4|32-70
79672|code|STR.W           R3, [R0],#0x3C|64-248-60-59
79676|code|BL              sub_13EF8|0-240-220-251
79680|code|MOVW            R0, #0x10C4|65-242-196-0
79684|code|MOVW            LR, #0x10C8|65-242-200-14
79688|code|MOVW            R1, #0x10CC|65-242-204-1
79692|code|MOVS            R3, #0|0-35
79694|code|STR.W           R7, [R4,#0x98]|196-248-152-112
79698|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
79702|code|STR.W           R6, [R4,#0xB0]|196-248-176-96
79706|code|STR.W           R5, [R4,#0xB4]|196-248-180-80
79710|code|STR             R3, [R4,R0]|35-80
79712|code|MOVS            R0, #0x10; unsigned int|16-32
79714|code|STR.W           R3, [R4,#0x94]|196-248-148-48
79718|code|STRB.W          R3, [R4,#0xAC]|132-248-172-48
79722|code|STR.W           R3, [R4,LR]|68-248-14-48
79726|code|STRB            R3, [R4,R1]|99-84
79728|code|STR.W           R2, [R4,#0xB8]|196-248-184-32
79732|code|BLX             _Znwj; operator new(uint)|254-247-36-234
79736|code|MOV             R1, R10|81-70
79738|code|MOV             R2, R9|74-70
79740|code|MOV             R6, R0|6-70
79742|code|BL              sub_1332C|255-247-213-253
79746|code|LDR             R5, [SP,#0x20+arg_C]|11-157
79748|code|ADD.W           R2, R4, #0x10E0|4-245-135-82
79752|code|MOVW            R3, #0x10D0|65-242-208-3
79756|code|MOVW            R7, #0x10D4|65-242-212-7
79760|code|MOVW            R0, #0x10DC|65-242-220-0
79764|code|MOVW            LR, #0x10D8|65-242-216-14
79768|code|MOVW            R1, #0x10E4|65-242-228-1
79772|code|STR             R6, [R4,R3]|230-80
79774|code|MOVS            R3, #0|0-35
79776|code|STR.W           R5, [R4,LR]|68-248-14-80
79780|code|STR             R3, [R4,R7]|227-81
79782|code|STR             R3, [R4,R0]|35-80
79784|code|STR             R3, [R2]|19-96
79786|code|STRB            R3, [R4,R1]|99-84
79788|code|CMP.W           R8, #0|184-241-0-15
79792|code|BEQ             loc_137CA|11-208
79794|code|MOVS            R0, #0x10; unsigned int|16-32
79796|code|BLX             _Znwj; operator new(uint)|254-247-4-234
79800|code|MOV             R1, R8|65-70
79802|code|MOVS            R2, #0|0-34
79804|code|MOV             R5, R0|5-70
79806|code|BL              sub_1332C|255-247-181-253
79810|code|MOVW            R3, #0x10D0|65-242-208-3
79814|code|STR             R5, [R4,R7]|229-81
79816|code|LDR             R6, [R4,R3]|230-88
79818|code|LDR             R1, [R6,#0xC]|241-104
79820|code|LDR             R0, [R4,#0xC]|224-104
79822|code|BLX             __aeabi_idivmod|254-247-160-235
79826|code|MOV             R0, R4|32-70
79828|code|STR.W           R1, [R4,#0x94]|196-248-148-16
79832|code|POP.W           {R4-R10,PC}|189-232-240-135
79836|code|MOV             R0, R4|32-70
79838|code|BL              sub_12E24|255-247-33-251
79842|code|BLX             __cxa_end_cleanup|254-247-96-235
79846|code|MOV             R0, R5; void *|40-70
79848|code|BLX             _ZdlPv; operator delete(void *)|254-247-44-235
79852|code|B               loc_137DC|246-231
79854|code|MOV             R0, R6; void *|48-70
79856|code|BLX             _ZdlPv; operator delete(void *)|254-247-40-235
79860|code|B               loc_137DC|242-231
79862|data|ALIGN 4|0-191
79864|data|DCD off_17400|0-116-1-0
79868|code|PUSH.W          {R4-R10,LR}|45-233-240-71
79872|code|SUB             SP, SP, #8|130-176
79874|code|MOV             R4, R0|4-70
79876|code|MOV             R8, R1|136-70
79878|code|MOV             R5, R2|21-70
79880|code|BL              sub_12DEC|255-247-240-250
79884|code|LDR             R3, =off_17400|46-75
79886|code|MOV             R0, R4|32-70
79888|code|STR.W           R3, [R0],#0x3C|64-248-60-59
79892|code|BL              sub_13EF8|0-240-112-251
79896|code|MOVW            LR, #0x10D0|65-242-208-14
79900|code|MOVW            R2, #0x10D8|65-242-216-2
79904|code|LDR.W           R3, [R5,LR]|85-248-14-48
79908|code|MOVW            R1, #0x10D4|65-242-212-1
79912|code|LDR.W           R6, [R5,#0xB0]|213-248-176-96
79916|code|MOVW            R10, #0x10C4|65-242-196-10
79920|code|LDR             R0, [R5,R2]|168-88
79922|code|MOVW            R9, #0x10C8|65-242-200-9
79926|code|STR             R3, [SP,#0x28+var_24]|1-147
79928|code|MOVW            R12, #0x10CC|65-242-204-12
79932|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
79936|code|MOVS            R2, #0|0-34
79938|code|LDR.W           R7, [R5,#0x98]|213-248-152-112
79942|code|STR.W           R3, [R4,#0xB4]|196-248-180-48
79946|code|LDR.W           R3, [R5,#0x94]|213-248-148-48
79950|code|STR.W           R3, [R4,#0x94]|196-248-148-48
79954|code|LDR             R3, [R5,R1]|107-88
79956|code|STR             R3, [R4,R1]|99-80
79958|code|LDR             R3, [SP,#0x28+var_24]|1-155
79960|code|STR.W           R6, [R4,#0xB0]|196-248-176-96
79964|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
79968|code|STR.W           R7, [R4,#0x98]|196-248-152-112
79972|code|STR.W           R3, [R4,LR]|68-248-14-48
79976|code|STR.W           R2, [R4,R10]|68-248-10-32
79980|code|STRB.W          R2, [R4,#0xAC]|132-248-172-32
79984|code|STR.W           R2, [R4,R9]|68-248-9-32
79988|code|STRB.W          R2, [R4,R12]|4-248-12-32
79992|code|STR.W           R6, [R4,#0xB8]|196-248-184-96
79996|code|CBZ             R0, loc_13894|80-177
79998|code|MOVS            R0, #0x18; unsigned int|24-32
80000|code|BLX             _Znwj; operator new(uint)|254-247-158-233
80004|code|MOVW            R3, #0x10D8|65-242-216-3
80008|code|MOV             R2, R8|66-70
80010|code|LDR             R1, [R5,R3]|233-88
80012|code|MOV             R6, R0|6-70
80014|code|BL              sub_1417C|0-240-117-252
80018|code|MOV             R0, R6|48-70
80020|code|ADD.W           R2, R4, #0x10E0|4-245-135-82
80024|code|MOVW            R3, #0x10D8|65-242-216-3
80028|code|MOVW            R5, #0x10DC|65-242-220-5
80032|code|MOVW            R1, #0x10E4|65-242-228-1
80036|code|STR             R0, [R4,R3]|224-80
80038|code|MOVS            R3, #0|0-35
80040|code|MOV             R0, R4|32-70
80042|code|STR             R3, [R4,R5]|99-81
80044|code|STR             R3, [R2]|19-96
80046|code|STRB            R3, [R4,R1]|99-84
80048|code|ADD             SP, SP, #8|2-176
80050|code|POP.W           {R4-R10,PC}|189-232-240-135
80054|code|MOV             R0, R4|32-70
80056|code|BL              sub_12E24|255-247-180-250
80060|code|BLX             __cxa_end_cleanup|254-247-242-234
80064|code|MOV             R0, R6; void *|48-70
80066|code|BLX             _ZdlPv; operator delete(void *)|254-247-192-234
80070|code|B               loc_138B6|246-231
80072|data|DCD off_17400|0-116-1-0
80076|code|PUSH            {R3-R5,LR}|56-181
80078|code|MOV             R4, R0|4-70
80080|code|LDR             R3, =off_17400|24-75
80082|code|STR             R3, [R0]|3-96
80084|code|BL              sub_13570|255-247-76-254
80088|code|LDR             R3, [R4,#0xC]|227-104
80090|code|CMP             R3, #0|0-43
80092|code|BLE             loc_138FC|14-221
80094|code|MOVW            R3, #0x10D8|65-242-216-3
80098|code|LDR             R5, [R4,R3]|229-88
80100|code|CBZ             R5, loc_138F2|45-177
80102|code|MOV             R0, R5|40-70
80104|code|BL              sub_141BC|0-240-104-252
80108|code|MOV             R0, R5; void *|40-70
80110|code|BLX             _ZdlPv; operator delete(void *)|254-247-170-234
80114|code|MOV             R0, R4|32-70
80116|code|BL              sub_12E24|255-247-150-250
80120|code|MOV             R0, R4|32-70
80122|code|POP             {R3-R5,PC}|56-189
80124|code|MOVW            R3, #0x10D0|65-242-208-3
80128|code|LDR             R5, [R4,R3]|229-88
80130|code|CBZ             R5, loc_13910|45-177
80132|code|MOV             R0, R5|40-70
80134|code|BL              sub_132B4|255-247-213-252
80138|code|MOV             R0, R5; void *|40-70
80140|code|BLX             _ZdlPv; operator delete(void *)|254-247-154-234
80144|code|MOVW            R3, #0x10D4|65-242-212-3
80148|code|LDR             R5, [R4,R3]|229-88
80150|code|CMP             R5, #0|0-45
80152|code|BEQ             loc_138DE|225-208
80154|code|MOV             R0, R5|40-70
80156|code|BL              sub_132B4|255-247-202-252
80160|code|MOV             R0, R5; void *|40-70
80162|code|BLX             _ZdlPv; operator delete(void *)|254-247-144-234
80166|code|B               loc_138DE|218-231
80168|code|MOV             R0, R4|32-70
80170|code|BL              sub_12E24|255-247-123-250
80174|code|BLX             __cxa_end_cleanup|254-247-186-234
80178|data|ALIGN 4|0-191
80180|data|DCD off_17400|0-116-1-0
80184|code|PUSH            {R4,LR}|16-181
80186|code|MOV             R4, R0|4-70
80188|code|BL              sub_138CC|255-247-198-255
80192|code|MOV             R0, R4|32-70
80194|code|BLX             _ZdlPv; operator delete(void *)|254-247-128-234
80198|code|MOV             R0, R4|32-70
80200|code|POP             {R4,PC}|16-189
80202|data|ALIGN 4|0-191
80204|code|LDR.W           R3, [R0,#0xB4]|208-248-180-48
80208|code|PUSH.W          {R4-R8,LR}|45-233-240-65
80212|code|SUB             SP, SP, #0x10|132-176
80214|code|LDR             R5, [R3]|29-104
80216|code|CBZ             R5, loc_13964|37-177
80218|code|MOVS            R5, #1|1-37
80220|code|MOV             R0, R5|40-70
80222|code|ADD             SP, SP, #0x10|4-176
80224|code|POP.W           {R4-R8,PC}|189-232-240-129
80228|code|MOV             R4, R0|4-70
80230|code|MOVW            R2, #0x10E4|65-242-228-2
80234|code|MOVW            R0, #0x10C4|65-242-196-0
80238|code|MOVW            R3, #0x10D0|65-242-208-3
80242|code|MOV             R6, R1|14-70
80244|code|MOVW            R1, #0x10C8|65-242-200-1
80248|code|STRB.W          R5, [R4,#0xAC]|132-248-172-80
80252|code|STR             R5, [R4,R0]|37-80
80254|code|STR             R5, [R4,R1]|101-80
80256|code|LDR             R0, [R4,R3]|224-88
80258|code|STRB            R5, [R4,R2]|165-84
80260|code|LDR.W           R1, [R4,#0x94]|212-248-148-16
80264|code|BL              sub_134FC|255-247-184-253
80268|code|MOV             R8, R0|128-70
80270|code|CMP             R0, #0|0-40
80272|code|BEQ             loc_1395A|227-208
80274|code|MOVS            R0, #2; domain|2-32
80276|code|MOVS            R1, #1; type|1-33
80278|code|MOV             R2, R5; protocol|42-70
80280|code|BLX             socket|254-247-144-234
80284|code|CMP             R0, #0|0-40
80286|code|MOV             R7, R0|7-70
80288|code|STR.W           R0, [R4,#0xB8]|196-248-184-0
80292|code|BLT             loc_13A68|96-219
80294|code|MOVW            R3, #0x10D4|65-242-212-3
80298|code|LDR             R0, [R4,R3]|224-88
80300|code|CBZ             R0, loc_139C4|80-177
80302|code|BL              sub_13534|255-247-193-253
80306|code|MOVS            R2, #0x10; len|16-34
80308|code|MOV             R1, R0; addr|1-70
80310|code|LDR.W           R0, [R4,#0xB8]; fd|212-248-184-0
80314|code|BLX             bind|254-247-86-234
80318|code|CBNZ            R0, loc_13A34|200-187
80320|code|LDR.W           R7, [R4,#0xB8]|212-248-184-112
80324|code|STR.W           R7, [R4,#0xBC]|196-248-188-112
80328|code|CBZ             R6, loc_13A28|118-179
80330|code|LDR.W           R0, [R8]|216-248-0-0
80334|code|MOV             LR, SP|238-70
80336|code|LDR.W           R1, [R8,#4]|216-248-4-16
80340|code|UBFX.W          R12, R6, #8, #8|198-243-7-44
80344|code|LDR.W           R2, [R8,#8]|216-248-8-32
80348|code|ORR.W           R6, R12, R6,LSL#8|76-234-6-38
80352|code|LDR.W           R3, [R8,#0xC]|216-248-12-48
80356|code|STM.W           LR!, {R0-R3}|174-232-15-0
80360|code|MOV             R1, SP; addr|105-70
80362|code|MOV             R0, R7; fd|56-70
80364|code|MOVS            R2, #0x10; len|16-34
80366|code|STRH.W          R6, [SP,#0x28+var_26]|173-248-2-96
80370|code|BLX             connect|254-247-154-234
80374|code|CMP             R0, #0|0-40
80376|code|BNE             loc_13A8E|73-209
80378|code|ADD             R2, SP, #0x28+var_18|4-170
80380|code|MOVS            R3, #0x10|16-35
80382|code|LDR.W           R0, [R4,#0xB8]; fd|212-248-184-0
80386|code|ADD.W           R1, R4, #0x9C; addr|4-241-156-1
80390|code|STR.W           R3, [R2,#-0x10]!; len|66-248-16-61
80394|code|BLX             getsockname|254-247-66-235
80398|code|CMP             R0, #0|0-40
80400|code|BNE             loc_13AC2|87-209
80402|code|MOVW            R3, #0x10D8|65-242-216-3
80406|code|LDR             R0, [R4,R3]|224-88
80408|code|CBZ             R0, loc_13A1E|8-177
80410|code|BL              sub_141A4|0-240-195-251
80414|code|MOVW            R3, #0x10CC|65-242-204-3
80418|code|MOVS            R2, #1|1-34
80420|code|STRB            R2, [R4,R3]|226-84
80422|code|B               loc_1395C|153-231
80424|code|MOV             R0, R7; fd|56-70
80426|code|MOV             R1, R8; addr|65-70
80428|code|MOVS            R2, #0x10; len|16-34
80430|code|BLX             connect|254-247-124-234
80434|code|B               loc_139F6|224-231
80436|code|MOVW            R3, #0x8488|72-242-136-67
80440|code|MOVW            R0, #0x74A0|71-242-160-64
80444|code|MOVT.W          R3, #2|192-242-2-3
80448|code|MOVT.W          R0, #1; ptr|192-242-1-0
80452|code|LDR             R3, [R3]; s|27-104
80454|code|MOVS            R1, #1; size|1-33
80456|code|MOVS            R2, #0x14; n|20-34
80458|code|MOVS            R5, #2|2-37
80460|code|BLX             fwrite|254-247-162-234
80464|code|LDR             R3, [R4]|35-104
80466|code|MOV             R0, R4|32-70
80468|code|LDR             R3, [R3,#0x1C]|219-105
80470|code|BLX             R3|152-71
80472|code|LDR.W           R0, [R4,#0xB8]; fd|212-248-184-0
80476|code|BLX             close|254-247-142-233
80480|code|MOV             R0, R5|40-70
80482|code|ADD             SP, SP, #0x10|4-176
80484|code|POP.W           {R4-R8,PC}|189-232-240-129
80488|code|MOVW            R3, #0x8488|72-242-136-67
80492|code|MOVW            R0, #0x748C|71-242-140-64
80496|code|MOVT.W          R3, #2|192-242-2-3
80500|code|MOVS            R1, #1; size|1-33
80502|code|LDR             R3, [R3]; s|27-104
80504|code|MOVS            R2, #0x13; n|19-34
80506|code|MOVT.W          R0, #1; ptr|192-242-1-0
80510|code|MOVS            R5, #2|2-37
80512|code|BLX             fwrite|254-247-136-234
80516|code|LDR             R3, [R4]|35-104
80518|code|MOV             R0, R4|32-70
80520|code|LDR             R3, [R3,#0x1C]|219-105
80522|code|BLX             R3|152-71
80524|code|B               loc_1395C|102-231
80526|code|MOVW            R3, #0x8488|72-242-136-67
80530|code|LDR.W           R0, [R8,#4]; in|216-248-4-0
80534|code|MOVT.W          R3, #2|192-242-2-3
80538|code|MOVS            R5, #1|1-37
80540|code|LDR             R7, [R3]|31-104
80542|code|BLX             inet_ntoa|254-247-190-233
80546|code|LDRH.W          R6, [R8,#2]|184-248-2-96
80550|code|MOV             R1, #aCanTConnectToS; format|71-242-184-65-192-242-1-1
80558|code|UBFX.W          R3, R6, #8, #8|198-243-7-35
80562|code|ORR.W           R3, R3, R6,LSL#8|67-234-6-35
80566|code|UXTH            R3, R3|155-178
80568|code|MOV             R2, R0|2-70
80570|code|MOV             R0, R7; stream|56-70
80572|code|BLX             fprintf|254-247-136-234
80576|code|B               loc_13A50|198-231
80578|code|MOVW            R3, #0x8488|72-242-136-67
80582|code|MOVW            R0, #0x74D8|71-242-216-64
80586|code|MOVT.W          R3, #2|192-242-2-3
80590|code|MOVS            R1, #1; size|1-33
80592|code|LDR             R3, [R3]; s|27-104
80594|code|MOVS            R2, #0x13; n|19-34
80596|code|MOVT.W          R0, #1; ptr|192-242-1-0
80600|code|BLX             fwrite|254-247-92-234
80604|code|B               loc_13A12|153-231
80606|data|ALIGN 0x10|0-191
80608|code|PUSH            {R4-R6,LR}|112-181
80610|code|ADD.W           R6, R0, #0x10E0|0-245-135-86
80614|code|MOV             R4, R0|4-70
80616|code|MOVW            R5, #0x10DC|65-242-220-5
80620|code|MOV             R0, R6|48-70
80622|code|BLX             gnutls_anon_allocate_client_credentials|254-247-248-233
80626|code|MOVS            R0, #4; unsigned int|4-32
80628|code|BLX             _Znwj; operator new(uint)|254-247-100-232
80632|code|MOVS            R1, #2|2-33
80634|code|STR             R0, [R4,R5]|96-81
80636|code|BLX             gnutls_init|254-247-98-234
80640|code|LDR             R3, [R4,R5]|99-89
80642|code|LDR             R0, [R3]|24-104
80644|code|BLX             gnutls_set_default_priority|254-247-110-232
80648|code|LDR             R3, [R4,R5]|99-89
80650|code|MOVW            R1, #0x74EC|71-242-236-65
80654|code|MOVS            R2, #0|0-34
80656|code|MOVT.W          R1, #1|192-242-1-1
80660|code|LDR             R0, [R3]|24-104
80662|code|BLX             gnutls_priority_set_direct|254-247-222-233
80666|code|LDR             R3, [R4,R5]|99-89
80668|code|LDR             R2, [R6]|50-104
80670|code|MOVS            R1, #2|2-33
80672|code|LDR             R0, [R3]|24-104
80674|code|BLX             gnutls_credentials_set|254-247-26-234
80678|code|LDR             R3, [R4,R5]|99-89
80680|code|LDR.W           R1, [R4,#0xB8]|212-248-184-16
80684|code|LDR             R0, [R3]|24-104
80686|code|BLX             gnutls_transport_set_ptr|254-247-168-233
80690|code|LDR             R3, [R4,R5]|99-89
80692|code|LDR             R0, [R3]|24-104
80694|code|BLX             gnutls_handshake|254-247-118-234
80698|code|CMP             R0, #0|0-40
80700|code|BLT             loc_13B58|12-219
80702|code|LDR.W           R3, [R4,#0xB4]|212-248-180-48
80706|code|LDR             R3, [R3]|27-104
80708|code|CMP             R3, #1|1-43
80710|code|ITTTT LE|223-191
80712|code|MOVLEW          R3, #0x10E4|65-242-228-3
80716|code|MOVLE           R2, #1|1-34
80718|code|MOVLE           R0, #0|0-32
80720|code|STRBLE          R2, [R4,R3]|226-84
80722|code|IT GT|200-191
80724|code|MOVGT           R0, #3|3-32
80726|code|POP             {R4-R6,PC}|112-189
80728|code|MOVW            R3, #0x8488|72-242-136-67
80732|code|MOVW            R0, #0x74FC|71-242-252-64
80736|code|MOVT.W          R3, #2|192-242-2-3
80740|code|MOVS            R1, #1; size|1-33
80742|code|MOVS            R2, #0x17; n|23-34
80744|code|LDR             R3, [R3]; s|27-104
80746|code|MOVT.W          R0, #1; ptr|192-242-1-0
80750|code|BLX             fwrite|254-247-18-234
80754|code|LDR             R3, [R4,R5]|99-89
80756|code|LDR             R0, [R3]|24-104
80758|code|BLX             gnutls_deinit|254-247-180-232
80762|code|LDR             R0, [R6]|48-104
80764|code|BLX             gnutls_anon_free_client_credentials|254-247-230-233
80768|code|LDR             R3, [R4]|35-104
80770|code|MOV             R0, R4|32-70
80772|code|LDR             R3, [R3,#0x1C]|219-105
80774|code|BLX             R3|152-71
80776|code|MOVS            R0, #1|1-32
80778|code|POP             {R4-R6,PC}|112-189
80780|code|PUSH            {R4}|16-180
80782|code|MOVW            R4, #0x10CC|65-242-204-4
80786|code|LDRB            R4, [R0,R4]|4-93
80788|code|CBZ             R4, loc_13BA2|44-177
80790|code|MOVS            R4, #0x3C ; '<'|60-36
80792|code|STRH.W          R4, [R0,#0xC0]|160-248-192-64
80796|code|POP.W           {R4}|93-248-4-75
80800|code|B               sub_135D0|22-229
80802|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
80806|code|POP.W           {R4}|93-248-4-75
80810|code|BX              LR|112-71
80812|code|PUSH.W          {R3-R11,LR}|45-233-248-79
80816|code|MOVW            R3, #0x10CC|65-242-204-3
80820|code|LDRB            R3, [R0,R3]|195-92
80822|code|MOV             R5, R0|5-70
80824|code|CMP             R3, #0|0-43
80826|code|BEQ.W           loc_13DEE|0-240-24-129
80830|code|MOV             R10, R2|146-70
80832|code|MOVW            R3, #0x10C4|65-242-196-3
80836|code|MOVW            R2, #0x10C8|65-242-200-2
80840|code|LDR             R3, [R0,R3]|195-88
80842|code|LDR             R2, [R0,R2]|130-88
80844|code|MOV             R7, R1|15-70
80846|code|CMP             R3, R2|147-66
80848|code|BLT             loc_13CCE|125-219
80850|code|MOVS            R4, #0|0-36
80852|code|CMP.W           R10, #0|186-241-0-15
80856|code|BEQ.W           loc_13D2C|0-240-168-128
80860|code|MOVS            R3, #0|0-35
80862|code|MOVW            R1, #0x10C4|65-242-196-1
80866|code|MOVW            R2, #0x10C8|65-242-200-2
80870|code|STR             R3, [R5,R1]|107-80
80872|code|MOV             R0, R3; timer|24-70
80874|code|STR             R3, [R5,R2]|171-80
80876|code|BLX             time|254-247-50-234
80880|code|ADD.W           R11, R5, #0x10C0|5-245-134-91
80884|code|ADD.W           R9, R5, #0x10E0|5-245-135-89
80888|code|MOVS            R3, #0x39 ; '9'|57-35
80890|code|MOV             R6, R11|94-70
80892|code|ADD.W           R9, R9, #4|9-241-4-9
80896|code|ADD.W           R11, R11, #8|11-241-8-11
80900|code|ADDS            R6, #4|4-54
80902|code|STRH.W          R3, [R5,#0xC0]|165-248-192-48
80906|code|MOV             R8, R0|128-70
80908|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
80912|code|LDR             R3, [R3]|27-104
80914|code|CMP             R3, #1|1-43
80916|code|BGT             loc_13CC8|88-220
80918|code|MOVS            R0, #0; timer|0-32
80920|code|BLX             time|254-247-28-234
80924|code|RSB.W           R0, R0, R8|192-235-8-0
80928|code|ADDS.W          R2, R0, #0x3C ; '<'|16-241-60-2
80932|code|BMI.W           loc_13D4E|0-241-147-128
80936|code|RSB.W           R3, R2, R2,LSL#5|194-235-66-19
80940|code|ADD.W           R0, R5, #0xBC; fds|5-241-188-0
80944|code|MOVS            R1, #1; nfds|1-33
80946|code|ADD.W           R2, R2, R3,LSL#2|2-235-131-2
80950|code|LSLS            R2, R2, #3; timeout|210-0
80952|code|BLX             poll|254-247-204-232
80956|code|CMP             R0, #0|0-40
80958|code|BEQ.W           loc_13D4E|0-240-134-128
80962|code|BLT.W           loc_13D8A|192-242-162-128
80966|code|LDRB.W          R3, [R9]|153-248-0-48
80970|code|CMP             R3, #0|0-43
80972|code|BEQ.W           loc_13D78|0-240-148-128
80976|code|ADD.W           R3, R5, #0x10C0|5-245-134-83
80980|code|ADD.W           R1, R5, #0xC4|5-241-196-1
80984|code|ADDS            R3, #0x1C|28-51
80986|code|MOV.W           R2, #0x1000|79-244-128-82
80990|code|LDR             R3, [R3]|27-104
80992|code|LDR             R0, [R3]|24-104
80994|code|BLX             gnutls_record_recv|254-247-28-234
80998|code|CMP             R0, #0|0-40
81000|code|BLT             loc_13D68|126-219
81002|code|LDR             R3, [R6]|51-104
81004|code|ADDS            R2, R7, R4|58-25
81006|code|STR.W           R0, [R11]|203-248-0-0
81010|code|B               loc_13C80|5-224
81012|code|LDRB.W          R0, [R0,#0xC4]|144-248-196-0
81016|code|CMP             R0, #0xA|10-40
81018|code|IT NE|24-191
81020|code|CMPNE           R10, R4|162-69
81022|code|BLE             loc_13C9C|13-221
81024|code|ADD             R3, R5|43-68
81026|code|ADDS            R4, #1|1-52
81028|code|LDRB.W          R3, [R3,#0xC4]|147-248-196-48
81032|code|STRB.W          R3, [R2],#1|2-248-1-59
81036|code|LDR             R3, [R6]|51-104
81038|code|LDR.W           R1, [R11]|219-248-0-16
81042|code|ADDS            R0, R5, R3|232-24
81044|code|ADDS            R3, #1|1-51
81046|code|CMP             R3, R1|139-66
81048|code|STR             R3, [R6]|51-96
81050|code|BLT             loc_13C74|235-219
81052|code|CMP             R10, R4|162-69
81054|code|BEQ.W           loc_13DC8|0-240-147-128
81058|code|CMP             R4, #0|0-44
81060|code|BLE             loc_13CB2|5-221
81062|code|ADDS            R2, R7, R4|58-25
81064|code|LDRB.W          R2, [R2,#-1]|18-248-1-44
81068|code|CMP             R2, #0xA|10-42
81070|code|BEQ.W           loc_13DC0|0-240-135-128
81074|code|CMP             R3, R1|139-66
81076|code|ITTT EQ|2-191
81078|code|MOVEQ           R3, #0|0-35
81080|code|STREQ           R3, [R6]|51-96
81082|code|STREQ.W         R3, [R11]|203-248-0-48
81086|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
81090|code|LDR             R3, [R3]|27-104
81092|code|CMP             R3, #1|1-43
81094|code|BLE             loc_13C16|166-221
81096|code|MOVS            R0, #3|3-32
81098|code|POP.W           {R3-R11,PC}|189-232-248-143
81102|code|ADD.W           R1, R0, #0x10C0|0-245-134-81
81106|code|MOVS            R2, #0|0-34
81108|code|SUBS            R0, R7, #1|120-30
81110|code|MOV             LR, R1|142-70
81112|code|ADDS            R1, #4|4-49
81114|code|ADD.W           LR, LR, #8|14-241-8-14
81118|code|B               loc_13CEC|5-224
81120|code|LDRB.W          R4, [R6,#0xC4]|150-248-196-64
81124|code|CMP             R4, #0xA|10-44
81126|code|IT NE|24-191
81128|code|CMPNE           R2, R10|82-69
81130|code|BGE             loc_13D08|13-218
81132|code|ADD             R3, R5|43-68
81134|code|ADDS            R2, #1|1-50
81136|code|LDRB.W          R3, [R3,#0xC4]|147-248-196-48
81140|code|STRB.W          R3, [R0,#1]!|0-248-1-63
81144|code|LDR             R3, [R1]|11-104
81146|code|LDR.W           R4, [LR]|222-248-0-64
81150|code|ADDS            R6, R5, R3|238-24
81152|code|ADDS            R3, #1|1-51
81154|code|CMP             R3, R4|163-66
81156|code|STR             R3, [R1]|11-96
81158|code|BLT             loc_13CE0|235-219
81160|code|CMP             R2, R10|82-69
81162|code|MOV             R4, R2|20-70
81164|code|BEQ             loc_13D2C|14-208
81166|code|CMP             R2, #0|0-42
81168|code|BLE.W           loc_13BDC|127-247-100-175
81172|code|ADDS            R3, R7, R2|187-24
81174|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
81178|code|CMP             R3, #0xA|10-43
81180|code|BNE.W           loc_13BDC|127-244-94-175
81184|code|CMP             R2, R10|82-69
81186|code|ITETT LT|183-191
81188|code|MOVLT           R10, R2|146-70
81190|code|MOVGE           R10, R2|146-70
81192|code|MOVLT           R3, #0|0-35
81194|code|STRBLT          R3, [R7,R2]|187-84
81196|code|LDR             R3, [R5]|43-104
81198|code|MOV             R0, R5|40-70
81200|code|MOV             R1, R10|81-70
81202|code|LDR             R3, [R3,#0x24]|91-106
81204|code|BLX             R3|152-71
81206|code|MOVW            R3, #0x10D8|65-242-216-3
81210|code|LDR             R0, [R5,R3]|232-88
81212|code|CMP             R0, #0|0-40
81214|code|BEQ             loc_13DE8|83-208
81216|code|MOV             R1, R7|57-70
81218|code|MOV             R2, R10|82-70
81220|code|BL              sub_14274|0-240-150-250
81224|code|MOV             R0, R10|80-70
81226|code|POP.W           {R3-R11,PC}|189-232-248-143
81230|code|MOVW            R3, #0x8488|72-242-136-67
81234|code|MOVW            R0, #0x7514|71-242-20-80
81238|code|MOVT.W          R3, #2|192-242-2-3
81242|code|MOVT.W          R0, #1; ptr|192-242-1-0
81246|code|LDR             R3, [R3]; s|27-104
81248|code|MOVS            R1, #1; size|1-33
81250|code|MOVS            R2, #0x1A; n|26-34
81252|code|BLX             fwrite|254-247-22-233
81256|code|LDR             R3, [R5]|43-104
81258|code|MOV             R0, R5|40-70
81260|code|LDR             R3, [R3,#0x1C]|219-105
81262|code|BLX             R3|152-71
81264|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
81268|code|POP.W           {R3-R11,PC}|189-232-248-143
81272|code|LDR.W           R0, [R5,#0xB8]; fd|213-248-184-0
81276|code|ADD.W           R1, R5, #0xC4; buf|5-241-196-1
81280|code|MOV.W           R2, #0x1000; nbytes|79-244-128-82
81284|code|BLX             read|254-247-12-232
81288|code|B               loc_13C66|109-231
81290|code|BLX             __errno_location|254-247-106-233
81294|code|LDR             R3, [R0]|3-104
81296|code|CMP             R3, #4|4-43
81298|code|BEQ.W           loc_13C0C|63-244-59-175
81302|code|MOVW            R3, #0x8488|72-242-136-67
81306|code|MOVW            R0, #0x7464|71-242-100-64
81310|code|MOVT.W          R3, #2|192-242-2-3
81314|code|MOVS            R1, #1; size|1-33
81316|code|MOVS            R2, #0xC; n|12-34
81318|code|LDR             R3, [R3]; s|27-104
81320|code|MOVT.W          R0, #1; ptr|192-242-1-0
81324|code|BLX             fwrite|254-247-242-232
81328|code|LDR             R3, [R5]|43-104
81330|code|MOV             R0, R5|40-70
81332|code|LDR             R3, [R3,#0x1C]|219-105
81334|code|BLX             R3|152-71
81336|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
81340|code|POP.W           {R3-R11,PC}|189-232-248-143
81344|code|CMP             R10, R4|162-69
81346|code|ITT GT|196-191
81348|code|MOVGT           R3, #0|0-35
81350|code|STRBGT          R3, [R7,R4]|59-85
81352|code|LDR             R3, [R5]|43-104
81354|code|MOV             R0, R5|40-70
81356|code|MOV             R1, R4|33-70
81358|code|LDR             R3, [R3,#0x24]|91-106
81360|code|BLX             R3|152-71
81362|code|MOVW            R3, #0x10D8|65-242-216-3
81366|code|LDR             R0, [R5,R3]|232-88
81368|code|CBZ             R0, loc_13DE2|24-177
81370|code|MOV             R1, R7|57-70
81372|code|MOV             R2, R4|34-70
81374|code|BL              sub_14274|0-240-73-250
81378|code|MOV             R0, R4|32-70
81380|code|POP.W           {R3-R11,PC}|189-232-248-143
81384|code|MOV             R0, R10|80-70
81386|code|POP.W           {R3-R11,PC}|189-232-248-143
81390|code|MOV             R0, #0xFFFFFFFE|111-240-1-0
81394|code|POP.W           {R3-R11,PC}|189-232-248-143
81398|data|ALIGN 4|0-191
81400|code|MOVW            R3, #0x10CC|65-242-204-3
81404|code|LDRB            R3, [R0,R3]|195-92
81406|code|PUSH            {R4,LR}|16-181
81408|code|MOV             R4, R0|4-70
81410|code|CBZ             R3, loc_13E0C|27-177
81412|code|LDR.W           R0, [R0,#0xB8]|208-248-184-0
81416|code|BLX             close|253-247-184-239
81420|code|MOVW            R3, #0x10CC|65-242-204-3
81424|code|MOVS            R2, #0|0-34
81426|code|STRB            R2, [R4,R3]|226-84
81428|code|POP             {R4,PC}|16-189
81430|data|ALIGN 4|0-191
81432|code|PUSH            {R4-R7,LR}|240-181
81434|code|MOV             R5, R0|5-70
81436|code|VPUSH           {D8-D9}|45-237-4-139
81440|code|MOVS            R0, #0; timer|0-32
81442|code|MOV             R6, R1|14-70
81444|code|SUBW            SP, SP, #0x804|173-246-4-13
81448|code|BLX             time|254-247-20-233
81452|code|ADDW            R4, SP, #0x828+var_29|13-242-255-116
81456|code|ADD.W           R3, SP, #0x828+var_829|13-241-255-51
81460|code|MOVS            R2, #1|1-34
81462|code|SUBS            R7, R0, #5|71-31
81464|code|STRB.W          R2, [R3,#1]!|3-248-1-47
81468|code|CMP             R3, R4|163-66
81470|code|BNE             loc_13E38|251-209
81472|code|VLDR            D8, =0.0|159-237-41-139
81476|code|VLDR            D9, =60.0|159-237-42-155
81480|code|CBNZ            R6, loc_13E7E|206-185
81482|code|MOV.W           R2, #0x800|79-244-0-98
81486|code|LDR             R4, [R5]|44-104
81488|code|MOV             R0, R5|40-70
81490|code|MOV             R1, SP|105-70
81492|code|MOVS            R3, #5|5-35
81494|code|LDR             R4, [R4,#0x18]|164-105
81496|code|BLX             R4|160-71
81498|code|CMP             R0, #0|0-40
81500|code|BLT             loc_13EDC|62-219
81502|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
81506|code|MOV             R0, R5|40-70
81508|code|LDR             R3, [R3]|27-104
81510|code|CMP             R3, #1|1-43
81512|code|BGT             loc_13ECE|49-220
81514|code|LDR             R3, [R5]|43-104
81516|code|LDR             R3, [R3,#0x14]|91-105
81518|code|BLX             R3|152-71
81520|code|CMP             R0, #0|0-40
81522|code|BEQ             loc_13E48|233-208
81524|code|ADDW            SP, SP, #0x804|13-246-4-13
81528|code|VPOP            {D8-D9}|189-236-4-139
81532|code|POP             {R4-R7,PC}|240-189
81534|code|MOVS            R0, #0; timer|0-32
81536|code|BLX             time|254-247-232-232
81540|code|VMOV            S13, R6|6-238-144-106
81544|code|VCVT.F64.S32    D6, S13|184-238-230-107
81548|code|SUBS            R3, R0, R7|195-27
81550|code|MOV             R7, R0|7-70
81552|code|VMOV            S14, R3|7-238-16-58
81556|code|VCVT.F64.S32    D7, S14|184-238-199-123
81560|code|VDIV.F64        D7, D7, D9|135-238-9-123
81564|code|VMLA.F64        D8, D7, D6|7-238-6-139
81568|code|VMOV.F64        D7, D8|176-238-72-123
81572|code|VLDR            D8, =0.0|159-237-16-139
81576|code|VCVT.S32.F64    S13, D7|253-238-199-107
81580|code|VMOV            R2, S13|22-238-144-42
81584|code|CMP.W           R2, #0x800|178-245-0-111
81588|code|BGT             loc_13E4A|201-220
81590|code|VCVT.F64.S32    D8, S13|184-238-230-139
81594|code|VSUB.F64        D8, D7, D8|55-238-72-139
81598|code|CMP             R2, #0|0-42
81600|code|BNE             loc_13E4E|197-209
81602|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
81606|code|MOV             R0, R5|40-70
81608|code|LDR             R3, [R3]|27-104
81610|code|CMP             R3, #1|1-43
81612|code|BLE             loc_13E6A|205-221
81614|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
81618|code|ADDW            SP, SP, #0x804|13-246-4-13
81622|code|VPOP            {D8-D9}|189-236-4-139
81626|code|POP             {R4-R7,PC}|240-189
81628|code|NEGS            R0, R0|64-66
81630|code|ADDW            SP, SP, #0x804|13-246-4-13
81634|code|VPOP            {D8-D9}|189-236-4-139
81638|code|POP             {R4-R7,PC}|240-189
81640|data|DCFD 0.0|0-0-0-0-0-0-0-0
81648|data|DCFD 60.0|0-0-0-0-0-0-78-64
81656|code|PUSH            {R4,LR}|16-181
81658|code|MOV             R4, R0|4-70
81660|code|BL              sub_14F84|1-240-66-248
81664|code|MOV             R0, R4|32-70
81666|code|POP             {R4,PC}|16-189
81668|code|B.W             sub_14F84|1-240-62-184
81672|code|MOV             R3, R0|3-70
81674|code|MOV             R0, R1|8-70
81676|code|MOV             R1, R3|25-70
81678|code|B.W             sub_15060|1-240-167-184
81682|data|ALIGN 4|0-191
81684|code|PUSH            {R4-R7,LR}|240-181
81686|code|SUB             SP, SP, #0x3C|143-176
81688|code|MOV             R7, R0|7-70
81690|code|ADD             R0, SP, #0x50+var_4C|1-168
81692|code|BL              sub_15060|1-240-160-248
81696|code|ADD.W           R5, SP, #0x50+var_4D|13-241-3-5
81700|code|ADD             R6, SP, #0x50+var_1C|13-174
81702|code|ADD             R4, SP, #0x50+s|5-172
81704|code|MOVW            R1, #0x7530|71-242-48-81
81708|code|MOV             R0, R4; s|32-70
81710|code|MOVT.W          R1, #1; format|192-242-1-1
81714|code|ADDS            R4, #2|2-52
81716|code|LDRB.W          R2, [R5,#1]!|21-248-1-47
81720|code|BLX             sprintf|254-247-92-232
81724|code|CMP             R4, R6|180-66
81726|code|BNE             loc_13F28|243-209
81728|code|ADD             R1, SP, #0x50+s|5-169
81730|code|MOV             R0, R7|56-70
81732|code|MOV             R2, SP|106-70
81734|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|253-247-192-239
81738|code|MOV             R0, R7|56-70
81740|code|ADD             SP, SP, #0x3C ; '<'|15-176
81742|code|POP             {R4-R7,PC}|240-189
81744|code|B.W             sub_14FBC|1-240-52-184
81748|code|LDR             R1, [R1]|9-104
81750|code|LDR.W           R2, [R1,#-0xC]|81-248-12-44
81754|code|B.W             sub_14FBC|1-240-47-184
81758|data|ALIGN 0x10|0-191
81760|code|PUSH            {R4,R5,LR}|48-181
81762|code|MOV             R5, R0|5-70
81764|code|SUB             SP, SP, #0xC|131-176
81766|code|CBNZ            R1, loc_13F88|121-185
81768|code|ADD             R0, SP, #0x18+attr; attr|1-168
81770|code|BLX             pthread_mutexattr_init|253-247-108-238
81774|code|ADD             R0, SP, #0x18+attr|1-168
81776|code|MOVS            R1, #1|1-33
81778|code|BLX             pthread_mutexattr_settype|254-247-106-232
81782|code|MOV             R4, R0|4-70
81784|code|CBZ             R0, loc_13F92|88-177
81786|code|ADD             R0, SP, #0x18+attr; attr|1-168
81788|code|BLX             pthread_mutexattr_destroy|253-247-104-238
81792|code|CBNZ            R4, loc_13FA4|132-185
81794|code|MOV             R0, R5; mutex|40-70
81796|code|ADD             SP, SP, #0xC|3-176
81798|code|POP             {R4,R5,PC}|48-189
81800|code|MOVS            R1, #0; mutexattr|0-33
81802|code|BLX             pthread_mutex_init|253-247-38-238
81806|code|MOV             R4, R0|4-70
81808|code|B               loc_13F80|246-231
81810|code|MOV             R0, R5; mutex|40-70
81812|code|ADD             R1, SP, #0x18+attr; mutexattr|1-169
81814|code|BLX             pthread_mutex_init|253-247-32-238
81818|code|MOV             R4, R0|4-70
81820|code|ADD             R0, SP, #0x18+attr; attr|1-168
81822|code|BLX             pthread_mutexattr_destroy|253-247-88-238
81826|code|B               loc_13F80|237-231
81828|code|MOVW            R3, #0x8488|72-242-136-67
81832|code|MOVW            R0, #0x7538|71-242-56-80
81836|code|MOVT.W          R3, #2|192-242-2-3
81840|code|MOVT.W          R0, #1; ptr|192-242-1-0
81844|code|LDR             R3, [R3]; s|27-104
81846|code|MOVS            R1, #1; size|1-33
81848|code|MOVS            R2, #0x14; n|20-34
81850|code|BLX             fwrite|253-247-236-239
81854|code|MOVS            R0, #1; status|1-32
81856|code|BLX             exit|253-247-112-238
81860|code|PUSH            {R4,LR}|16-181
81862|code|MOV             R4, R0|4-70
81864|code|BLX             pthread_mutex_destroy|253-247-84-239
81868|code|MOV             R0, R4|32-70
81870|code|POP             {R4,PC}|16-189
81872|code|PUSH            {R3,LR}|8-181
81874|code|CBZ             R1, loc_13FE2|49-177
81876|code|BLX             pthread_mutex_lock|253-247-250-237
81880|code|ADDS            R0, #0|0-48
81882|code|IT NE|24-191
81884|code|MOVNE           R0, #1|1-32
81886|code|NEGS            R0, R0|64-66
81888|code|POP             {R3,PC}|8-189
81890|code|BLX             pthread_mutex_trylock|253-247-198-238
81894|code|ADDS            R0, #0|0-48
81896|code|IT NE|24-191
81898|code|MOVNE           R0, #1|1-32
81900|code|NEGS            R0, R0|64-66
81902|code|POP             {R3,PC}|8-189
81904|code|PUSH            {R3,LR}|8-181
81906|code|BLX             pthread_mutex_unlock|254-247-114-232
81910|code|ADDS            R0, #0|0-48
81912|code|IT NE|24-191
81914|code|MOVNE           R0, #1|1-32
81916|code|NEGS            R0, R0|64-66
81918|code|POP             {R3,PC}|8-189
81920|code|PUSH            {R4,LR}|16-181
81922|code|MOV             R4, R0|4-70
81924|code|STR             R1, [R4]|33-96
81926|code|MOV             R0, R1; mutex|8-70
81928|code|BLX             pthread_mutex_lock|253-247-224-237
81932|code|CBNZ            R0, loc_14012|8-185
81934|code|MOV             R0, R4|32-70
81936|code|POP             {R4,PC}|16-189
81938|code|MOV             R0, #(a08x03x03xS+0x14); s|71-242-148-112-192-242-1-0
81946|code|BLX             perror|253-247-116-238
81950|code|MOV             R3, #0x28488|72-242-136-67-192-242-2-3
81958|code|MOVW            R0, #0x7550|71-242-80-80
81962|code|LDR             R3, [R3]; s|27-104
81964|code|MOVT.W          R0, #1; ptr|192-242-1-0
81968|code|MOVS            R1, #1; size|1-33
81970|code|MOVS            R2, #0x12; n|18-34
81972|code|BLX             fwrite|253-247-174-239
81976|code|MOVS            R0, #1; status|1-32
81978|code|BLX             exit|253-247-52-238
81982|data|ALIGN 0x10|0-191
81984|code|PUSH            {R4,LR}|16-181
81986|code|MOV             R4, R0|4-70
81988|code|LDR             R0, [R0]; mutex|0-104
81990|code|BLX             pthread_mutex_unlock|254-247-72-232
81994|code|CBZ             R0, loc_1406C|120-177
81996|code|MOVW            R3, #0x8488|72-242-136-67
82000|code|MOVW            R0, #0x7564|71-242-100-80
82004|code|MOVT.W          R3, #2|192-242-2-3
82008|code|MOVT.W          R0, #1; ptr|192-242-1-0
82012|code|LDR             R3, [R3]; s|27-104
82014|code|MOVS            R1, #1; size|1-33
82016|code|MOVS            R2, #0x14; n|20-34
82018|code|BLX             fwrite|253-247-152-239
82022|code|MOVS            R0, #1; status|1-32
82024|code|BLX             exit|253-247-28-238
82028|code|MOV             R0, R4|32-70
82030|code|POP             {R4,PC}|16-189
82032|code|PUSH            {R4,LR}|16-181
82034|code|MOV             R4, R0|4-70
82036|code|LDR             R0, [R0,#4]; stream|64-104
82038|code|SUB.W           SP, SP, #0x1000|173-245-128-93
82042|code|SUB             SP, SP, #0x18|134-176
82044|code|CBZ             R0, loc_14088|32-177
82046|code|BLX             fflush|253-247-252-239
82050|code|LDR             R0, [R4,#4]; stream|96-104
82052|code|BLX             fclose|253-247-170-239
82056|code|MOVW            R1, #0x73C0|71-242-192-49
82060|code|LDR             R2, [R4,#0x14]|98-105
82062|code|MOVT.W          R1, #1; format|192-242-1-1
82066|code|MOV             R0, SP; s|104-70
82068|code|BLX             sprintf|253-247-174-239
82072|code|MOV             R1, #(aDD+4); format|71-242-192-49-192-242-1-1
82080|code|LDR             R2, [R4,#8]|162-104
82082|code|ADD             R0, SP, #0x1020+s; s|3-168
82084|code|BLX             sprintf|253-247-166-239
82088|code|MOVW            R2, #0xFE7; n|64-246-231-114
82092|code|ADD             R0, SP, #0x1020+dest; dest|6-168
82094|code|LDR             R1, [R4,#0x10]; src|33-105
82096|code|BLX             strncpy|253-247-220-239
82100|code|LDR             R3, [R4,#0x14]|99-105
82102|code|MOVS            R2, #0|0-34
82104|code|STRB.W          R2, [SP,#0x1020+var_21]|141-248-255-47
82108|code|CBNZ            R3, loc_140E2|139-185
82110|code|LDR             R3, [R4,#0xC]|227-104
82112|code|CBNZ            R3, loc_14106|11-187
82114|code|LDR             R3, [R4,#8]|163-104
82116|code|MOV             R1, #aW; modes|71-242-124-81-192-242-1-1
82124|code|ADD             R0, SP, #0x1020+dest; filename|6-168
82126|code|ADDS            R3, #1|1-51
82128|code|STR             R3, [R4,#8]|163-96
82130|code|BLX             fopen|253-247-90-238
82134|code|STR             R0, [R4,#4]|96-96
82136|code|CBZ             R0, loc_14126|40-179
82138|code|ADD.W           SP, SP, #0x1000|13-245-128-93
82142|code|ADD             SP, SP, #0x18|6-176
82144|code|POP             {R4,PC}|16-189
82146|code|ADD             R0, SP, #0x1020+dest; s|6-168
82148|code|BLX             strlen|253-247-104-239
82152|code|ADD.W           LR, SP, #0x1020+dest|13-241-24-14
82156|code|ADD             R2, SP, #0x1020+dest|6-170
82158|code|MOV             R1, SP; src|105-70
82160|code|MOV             R3, R0|3-70
82162|code|ADDS            R0, #1|1-48
82164|code|ADD             R0, R2; dest|16-68
82166|code|MOVS            R2, #0x3A ; ':'|58-34
82168|code|STRB.W          R2, [LR,R3]|14-248-3-32
82172|code|BLX             strcpy|253-247-148-238
82176|code|LDR             R3, [R4,#0xC]|227-104
82178|code|CMP             R3, #0|0-43
82180|code|BEQ             loc_140C2|221-208
82182|code|ADD             R0, SP, #0x1020+dest; s|6-168
82184|code|BLX             strlen|253-247-86-239
82188|code|ADD.W           LR, SP, #0x1020+dest|13-241-24-14
82192|code|ADD             R2, SP, #0x1020+dest|6-170
82194|code|ADD             R1, SP, #0x1020+s; src|3-169
82196|code|MOV             R3, R0|3-70
82198|code|ADDS            R0, #1|1-48
82200|code|ADD             R0, R2; dest|16-68
82202|code|MOVS            R2, #0x3A ; ':'|58-34
82204|code|STRB.W          R2, [LR,R3]|14-248-3-32
82208|code|BLX             strcpy|253-247-130-238
82212|code|B               loc_140C2|205-231
82214|code|MOVW            R3, #0x8488|72-242-136-67
82218|code|MOVW            R1, #0x7580|71-242-128-81
82222|code|MOVT.W          R3, #2|192-242-2-3
82226|code|ADD             R2, SP, #0x1020+dest|6-170
82228|code|LDR             R0, [R3]; stream|24-104
82230|code|MOVT.W          R1, #1; format|192-242-1-1
82234|code|BLX             fprintf|253-247-74-239
82238|code|MOV             R1, #aW; modes|71-242-124-81-192-242-1-1
82246|code|MOVS            R0, #2; fd|2-32
82248|code|BLX             fdopen|253-247-106-237
82252|code|STR             R0, [R4,#4]|96-96
82254|code|ADD.W           SP, SP, #0x1000|13-245-128-93
82258|code|ADD             SP, SP, #0x18|6-176
82260|code|POP             {R4,PC}|16-189
82262|data|ALIGN 4|0-191
82264|code|PUSH            {R4-R6,LR}|112-181
82266|code|MOV             R4, R0|4-70
82268|code|SUB             SP, SP, #8|130-176
82270|code|STRB            R2, [R0]|2-112
82272|code|STR             R3, [R0,#0xC]|195-96
82274|code|MOVS            R5, #0|0-37
82276|code|ADD             R2, SP, #0x18+var_14|1-170
82278|code|STR             R5, [R4,#4]|101-96
82280|code|STR             R5, [R4,#8]|165-96
82282|code|ADDS            R0, #0x10|16-48
82284|code|LDR             R6, [SP,#0x18+arg_0]|6-158
82286|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|253-247-172-238
82290|code|MOV             R0, R4|32-70
82292|code|STR             R6, [R4,#0x14]|102-97
82294|code|ADD             SP, SP, #8|2-176
82296|code|POP             {R4-R6,PC}|112-189
82298|data|ALIGN 4|0-191
82300|code|MOV             R3, R1|11-70
82302|code|ADDS            R1, #0x10; std::string *|16-49
82304|code|PUSH            {R4-R6,LR}|112-181
82306|code|MOV             R4, R0|4-70
82308|code|LDRB.W          R5, [R1,#-0x10]|17-248-16-92
82312|code|ADDS            R0, #0x10; this|16-48
82314|code|LDR             R6, [R3,#0xC]|222-104
82316|code|MOVS            R3, #0|0-35
82318|code|STR             R3, [R4,#4]|99-96
82320|code|STRB            R5, [R4]|37-112
82322|code|MOV             R5, R2|21-70
82324|code|STR             R6, [R4,#0xC]|230-96
82326|code|STR             R3, [R4,#8]|163-96
82328|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|253-247-186-237
82332|code|STR             R5, [R4,#0x14]|101-97
82334|code|MOV             R0, R4|32-70
82336|code|POP             {R4-R6,PC}|112-189
82338|data|ALIGN 4|0-191
82340|code|PUSH            {R3,LR}|8-181
82342|code|LDR             R3, [R0,#0xC]|195-104
82344|code|CBNZ            R3, loc_141B2|27-185
82346|code|LDR             R3, [R0,#4]|67-104
82348|code|CBZ             R3, loc_141B2|11-177
82350|code|MOVS            R0, #0|0-32
82352|code|POP             {R3,PC}|8-189
82354|code|BL              sub_14070|255-247-93-255
82358|code|MOVS            R0, #0|0-32
82360|code|POP             {R3,PC}|8-189
82362|data|ALIGN 4|0-191
82364|code|PUSH            {R4,LR}|16-181
82366|code|MOV             R4, R0|4-70
82368|code|LDR             R0, [R0,#4]; stream|64-104
82370|code|SUB             SP, SP, #8|130-176
82372|code|CBZ             R0, loc_141D0|32-177
82374|code|BLX             fflush|253-247-88-239
82378|code|LDR             R0, [R4,#4]; stream|96-104
82380|code|BLX             fclose|253-247-6-239
82384|code|LDR             R2, [R4,#0x10]|34-105
82386|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
82394|code|SUB.W           R0, R2, #0xC|162-241-12-0
82398|code|CMP             R0, R3|152-66
82400|code|BNE             loc_141E8|2-209
82402|code|MOV             R0, R4|32-70
82404|code|ADD             SP, SP, #8|2-176
82406|code|POP             {R4,PC}|16-189
82408|code|MOV             R3, #0x11E5C|65-246-92-99-192-242-1-3
82416|code|CBZ             R3, loc_14218|147-177
82418|code|SUBS            R2, #4|4-58
82420|code|DMB.W           SY|191-243-95-143
82424|code|LDREX.W         R3, [R2]|82-232-0-63
82428|code|SUBS            R1, R3, #1|89-30
82430|code|STREX.W         LR, R1, [R2]|66-232-0-30
82434|code|CMP.W           LR, #0|190-241-0-15
82438|code|BNE             loc_141F8|247-209
82440|code|DMB.W           SY|191-243-95-143
82444|code|CMP             R3, #0|0-43
82446|code|BGT             loc_141E2|232-220
82448|code|ADD             R1, SP, #0x10+var_C|1-169
82450|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-206-237
82454|code|B               loc_141E2|228-231
82456|code|LDR.W           R3, [R2,#-4]|82-248-4-60
82460|code|SUBS            R1, R3, #1|89-30
82462|code|STR.W           R1, [R2,#-4]|66-248-4-28
82466|code|B               loc_1420C|243-231
82468|code|LDR             R2, [R4,#0x10]|34-105
82470|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
82478|code|SUB.W           R0, R2, #0xC|162-241-12-0
82482|code|CMP             R0, R3|152-66
82484|code|BNE             loc_1423A|1-209
82486|code|BLX             __cxa_end_cleanup|253-247-54-238
82490|code|MOVW            R3, #0x1E5C|65-246-92-99
82494|code|SUBS            R1, R2, #4|17-31
82496|code|MOVT.W          R3, #1|192-242-1-3
82500|code|CBZ             R3, loc_14268|131-177
82502|code|DMB.W           SY|191-243-95-143
82506|code|LDREX.W         R3, [R1]|81-232-0-63
82510|code|SUBS            R2, R3, #1|90-30
82512|code|STREX.W         R4, R2, [R1]|65-232-0-36
82516|code|CMP             R4, #0|0-44
82518|code|BNE             loc_1424A|248-209
82520|code|DMB.W           SY|191-243-95-143
82524|code|CMP             R3, #0|0-43
82526|code|BGT             loc_14236|234-220
82528|code|ADD             R1, SP, #0x10+var_C|1-169
82530|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|253-247-166-237
82534|code|B               loc_14236|230-231
82536|code|LDR.W           R3, [R2,#-4]|82-248-4-60
82540|code|SUBS            R1, R3, #1|89-30
82542|code|STR.W           R1, [R2,#-4]|66-248-4-28
82546|code|B               loc_1425C|243-231
82548|code|LDR             R3, [R0,#4]; s|67-104
82550|code|PUSH            {R4,R5,LR}|48-181
82552|code|MOV             R5, R0|5-70
82554|code|SUB             SP, SP, #0xC|131-176
82556|code|MOV             R4, R2|20-70
82558|code|CBZ             R3, loc_142A0|123-177
82560|code|MOV             R0, R1; ptr|8-70
82562|code|MOV             R2, R4; n|34-70
82564|code|MOVS            R1, #1; size|1-33
82566|code|BLX             fwrite|253-247-134-238
82570|code|CMP             R4, R0|132-66
82572|code|IT NE|24-191
82574|code|MOVNE.W         R0, #0xFFFFFFFF|79-240-255-48
82578|code|BNE             loc_1429C|3-209
82580|code|LDR             R0, [R5,#4]; stream|104-104
82582|code|BLX             fflush|253-247-240-238
82586|code|MOVS            R0, #0|0-32
82588|code|ADD             SP, SP, #0xC|3-176
82590|code|POP             {R4,R5,PC}|48-189
82592|code|STR             R1, [SP,#0x18+var_14]|1-145
82594|code|BL              sub_14070|255-247-229-254
82598|code|LDR             R3, [R5,#4]|107-104
82600|code|LDR             R1, [SP,#0x18+var_14]|1-153
82602|code|B               loc_14280|233-231
82604|code|PUSH.W          {R4-R10,LR}|45-233-240-71
82608|code|MOV             R8, R0|128-70
82610|code|SUB.W           SP, SP, #0x400|173-245-128-109
82614|code|MOV             R0, R1; s|8-70
82616|code|MOV             R7, R2|23-70
82618|code|BLX             strdup|253-247-20-239
82622|code|MOVS            R4, #0|0-36
82624|code|STR.W           R0, [R8]|200-248-0-0
82628|code|MOV             R0, R7; s|56-70
82630|code|BLX             strdup|253-247-14-239
82634|code|STR.W           R0, [R8,#4]|200-248-4-0
82638|code|BLX             strlen|253-247-116-238
82642|code|CMP.W           R0, #0x1FC00000|176-241-254-95
82646|code|STR.W           R0, [R8,#8]|200-248-8-0
82650|code|ITE LS|148-191
82652|code|LSLLS           R0, R0, #2|128-0
82654|code|MOVHI.W         R0, #0xFFFFFFFF; unsigned int|79-240-255-48
82658|code|BLX             _Znaj; operator new[](uint)|253-247-88-237
82662|code|LDR.W           R3, [R8,#8]|216-248-8-48
82666|code|CMP.W           R3, #0x1FC00000|179-241-254-95
82670|code|STR.W           R0, [R8,#0x2C]|200-248-44-0
82674|code|ITE LS|148-191
82676|code|LSLLS           R0, R3, #2|152-0
82678|code|MOVHI.W         R0, #0xFFFFFFFF; unsigned int|79-240-255-48
82682|code|BLX             _Znaj; operator new[](uint)|253-247-76-237
82686|code|LDR.W           R3, [R8,#8]|216-248-8-48
82690|code|CMP.W           R3, #0x1FC00000|179-241-254-95
82694|code|STR.W           R0, [R8,#0x30]|200-248-48-0
82698|code|ITE LS|148-191
82700|code|LSLLS           R0, R3, #2|152-0
82702|code|MOVHI.W         R0, #0xFFFFFFFF; unsigned int|79-240-255-48
82706|code|BLX             _Znaj; operator new[](uint)|253-247-64-237
82710|code|STRB.W          R4, [R8,#0x38]|136-248-56-64
82714|code|STR.W           R4, [R8,#0x3C]|200-248-60-64
82718|code|MOVS            R2, #8; cflags|8-34
82720|code|LDR.W           R1, [R8]; pattern|216-248-0-16
82724|code|STR.W           R0, [R8,#0x34]|200-248-52-0
82728|code|ADD.W           R0, R8, #0xC; preg|8-241-12-0
82732|code|BLX             regcomp|253-247-162-236
82736|code|LDR.W           R3, [R8,#8]|216-248-8-48
82740|code|CMP             R3, R4|163-66
82742|code|BLE             loc_14350|11-221
82744|code|LDR.W           R2, [R8,#0x34]|216-248-52-32
82748|code|MOV             R3, R4|35-70
82750|code|MOV             R0, R4|32-70
82752|code|SUBS            R2, #4|4-58
82754|code|STR.W           R0, [R2,#4]!|66-248-4-15
82758|code|ADDS            R3, #1|1-51
82760|code|LDR.W           R1, [R8,#8]|216-248-8-16
82764|code|CMP             R1, R3|153-66
82766|code|BGT             loc_14342|248-220
82768|code|LDRB            R4, [R7]|60-120
82770|code|MOV             R10, R4|162-70
82772|code|CBZ             R4, loc_143C4|180-179
82774|code|MOV.W           LR, #0|79-240-0-14
82778|code|MOV             R9, R7|185-70
82780|code|MOV             R5, LR|117-70
82782|code|MOV             R2, LR|114-70
82784|code|MOV             R10, LR|242-70
82786|code|B               loc_143AC|35-224
82788|code|CMP             R4, #0x5B ; '['|91-44
82790|code|BEQ             loc_14412|84-208
82792|code|CMP             R4, #0x5D ; ']'|93-44
82794|code|BNE             loc_143EA|62-209
82796|code|CMP             R2, #0|0-42
82798|code|BEQ.W           loc_144B2|0-240-160-128
82802|code|CMP             R5, #0|0-45
82804|code|BNE.W           loc_1448A|64-240-137-128
82808|code|MOV             R0, SP; s|104-70
82810|code|STRB.W          R5, [SP,LR]|13-248-14-80
82814|code|LDR.W           R4, [R8,#0x2C]|216-248-44-64
82818|code|BLX             strdup|253-247-176-238
82822|code|STR.W           R0, [R4,R10,LSL#2]|68-248-42-0
82826|code|LDR.W           R3, [R8,#0x2C]|216-248-44-48
82830|code|LDR.W           R0, [R3,R10,LSL#2]; s|83-248-42-0
82834|code|BLX             strlen|253-247-18-238
82838|code|LDR.W           R3, [R8,#0x30]|216-248-48-48
82842|code|MOV             LR, R5|174-70
82844|code|MOV             R2, R5|42-70
82846|code|STR.W           R0, [R3,R10,LSL#2]|67-248-42-0
82850|code|ADD.W           R10, R10, #1|10-241-1-10
82854|code|LDRB.W          R4, [R9,#1]!|25-248-1-79
82858|code|CBZ             R4, loc_143C4|92-177
82860|code|CMP             R4, #0x2E ; '.'|46-44
82862|code|BEQ             loc_143D2|16-208
82864|code|BHI             loc_14364|216-216
82866|code|CMP             R4, #0x2D ; '-'|45-44
82868|code|BNE             loc_143EA|25-209
82870|code|CMP             R2, #0|0-42
82872|code|BEQ             loc_14476|93-208
82874|code|LDRB.W          R4, [R9,#1]!|25-248-1-79
82878|code|MOVS            R5, #1|1-37
82880|code|CMP             R4, #0|0-44
82882|code|BNE             loc_143AC|243-209
82884|code|MOV             R0, R8|64-70
82886|code|STR.W           R10, [R8,#8]|200-248-8-160
82890|code|ADD.W           SP, SP, #0x400|13-245-128-109
82894|code|POP.W           {R4-R10,PC}|189-232-240-135
82898|code|CBNZ            R2, loc_1441A|18-187
82900|code|LDR.W           R3, [R8,#0x2C]|216-248-44-48
82904|code|STR.W           R2, [R3,R10,LSL#2]|67-248-42-32
82908|code|LDR.W           R3, [R8,#0x30]|216-248-48-48
82912|code|STR.W           R2, [R3,R10,LSL#2]|67-248-42-32
82916|code|ADD.W           R10, R10, #1|10-241-1-10
82920|code|B               loc_143A6|221-231
82922|code|CMP             R2, #0|0-42
82924|code|BEQ             loc_1449E|87-208
82926|code|CBNZ            R5, loc_14424|205-185
82928|code|STRB.W          R4, [SP,LR]|13-248-14-64
82932|code|ADD.W           LR, LR, #1|14-241-1-14
82936|code|CMP.W           LR, #0x400|190-245-128-111
82940|code|BNE             loc_143A6|211-209
82942|code|MOVW            R0, #0x75EC|71-242-236-80
82946|code|MOV             R1, R7|57-70
82948|code|MOVT.W          R0, #1; format|192-242-1-0
82952|code|BLX             printf|253-247-82-236
82956|code|MOVS            R0, #1; status|1-32
82958|code|BLX             exit|253-247-74-236
82962|code|CMP             R2, #0|0-42
82964|code|BNE             loc_144B2|77-209
82966|code|MOVS            R2, #1|1-34
82968|code|B               loc_143A6|197-231
82970|code|STRB.W          R4, [SP,LR]|13-248-14-64
82974|code|ADD.W           LR, LR, #1|14-241-1-14
82978|code|B               loc_143A6|192-231
82980|code|ADD.W           R6, SP, LR|13-235-14-6
82984|code|LDRB.W          R3, [R6,#-1]|22-248-1-60
82988|code|ADDS            R3, #1|1-51
82990|code|UXTB            R3, R3|219-178
82992|code|CMP             R3, R4|163-66
82994|code|IT LS|152-191
82996|code|CMPLS           R3, #0x7E ; '~'|126-43
82998|code|ITE LS|148-191
83000|code|MOVLS           R1, #1|1-33
83002|code|MOVHI           R1, #0|0-33
83004|code|BHI             loc_14472|25-216
83006|code|ADD.W           R5, LR, #1|14-241-1-5
83010|code|STRB.W          R3, [SP,LR]|13-248-14-48
83014|code|CMP.W           R5, #0x400|181-245-128-111
83018|code|BNE             loc_1445A|6-209
83020|code|B               loc_143FE|215-231
83022|code|ADDS            R5, #1|1-53
83024|code|STRB.W          R3, [R6,#1]!|6-248-1-63
83028|code|CMP.W           R5, #0x400|181-245-128-111
83032|code|BEQ             loc_143FE|209-208
83034|code|ADDS            R3, #1|1-51
83036|code|UXTB            R3, R3|219-178
83038|code|CMP             R3, R4|163-66
83040|code|IT LS|152-191
83042|code|CMPLS           R3, #0x7E ; '~'|126-43
83044|code|ITE LS|148-191
83046|code|MOVLS           R1, #1|1-33
83048|code|MOVHI           R1, #0|0-33
83050|code|BLS             loc_1444E|240-217
83052|code|MOV             LR, R5|174-70
83054|code|MOV             R5, R1|13-70
83056|code|B               loc_143A6|153-231
83058|code|MOV             R5, R1|13-70
83060|code|B               loc_143A6|151-231
83062|code|MOVW            R0, #0x75D0|71-242-208-80
83066|code|MOV             R1, R7|57-70
83068|code|MOVT.W          R0, #1; format|192-242-1-0
83072|code|BLX             printf|253-247-22-236
83076|code|MOVS            R0, #1; status|1-32
83078|code|BLX             exit|253-247-14-236
83082|code|MOVW            R0, #0x75B4|71-242-180-80
83086|code|MOV             R1, R7|57-70
83088|code|MOVT.W          R0, #1; format|192-242-1-0
83092|code|BLX             printf|253-247-12-236
83096|code|MOVS            R0, #1; status|1-32
83098|code|BLX             exit|253-247-4-236
83102|code|MOVW            R0, #0x760C|71-242-12-96
83106|code|MOV             R1, R7|57-70
83108|code|MOVT.W          R0, #1; format|192-242-1-0
83112|code|BLX             printf|253-247-2-236
83116|code|MOVS            R0, #1; status|1-32
83118|code|BLX             exit|253-247-250-235
83122|code|MOVW            R0, #0x7594|71-242-148-80
83126|code|MOV             R1, R7|57-70
83128|code|MOVT.W          R0, #1; format|192-242-1-0
83132|code|BLX             printf|253-247-248-235
83136|code|MOVS            R0, #1; status|1-32
83138|code|BLX             exit|253-247-240-235
83142|data|ALIGN 4|0-191
83144|code|PUSH            {R3-R5,LR}|56-181
83146|code|MOV             R5, R0|5-70
83148|code|LDR             R3, [R0,#8]|131-104
83150|code|CMP             R3, #0|0-43
83152|code|BLE             loc_144E6|9-221
83154|code|MOVS            R4, #0|0-36
83156|code|LDR             R3, [R5,#0x2C]|235-106
83158|code|LDR.W           R0, [R3,R4,LSL#2]|83-248-36-0
83162|code|ADDS            R4, #1|1-52
83164|code|BLX             _ZdlPv; operator delete(void *)|253-247-178-236
83168|code|LDR             R3, [R5,#8]|171-104
83170|code|CMP             R3, R4|163-66
83172|code|BGT             loc_144D4|246-220
83174|code|LDR             R0, [R5,#0x2C]|232-106
83176|code|BLX             _ZdlPv; operator delete(void *)|253-247-172-236
83180|code|LDR             R0, [R5,#0x30]|40-107
83182|code|BLX             _ZdlPv; operator delete(void *)|253-247-170-236
83186|code|LDR             R0, [R5,#0x34]|104-107
83188|code|BLX             _ZdlPv; operator delete(void *)|253-247-166-236
83192|code|ADD.W           R0, R5, #0xC|5-241-12-0
83196|code|BLX             regfree|253-247-228-235
83200|code|LDR             R0, [R5]|40-104
83202|code|BLX             _ZdlPv; operator delete(void *)|253-247-160-236
83206|code|LDR             R0, [R5,#4]|104-104
83208|code|BLX             _ZdlPv; operator delete(void *)|253-247-156-236
83212|code|MOV             R0, R5|40-70
83214|code|POP             {R3-R5,PC}|56-189
83216|code|PUSH.W          {R4-R11,LR}|45-233-240-79
83220|code|MOV             R4, R0|4-70
83222|code|SUB             SP, SP, #0xC|131-176
83224|code|MOV             R8, R1|136-70
83226|code|MOV             R6, R2|22-70
83228|code|MOV             R7, R3|31-70
83230|code|MOV.W           R9, #0|79-240-0-9
83234|code|B               loc_1452A|2-224
83236|code|LDR             R4, [R4,#0x3C]|228-107
83238|code|CMP             R4, #0|0-44
83240|code|BEQ             loc_1462A|127-208
83242|code|MOVS            R2, #0; nmatch|0-34
83244|code|ADD.W           R0, R4, #0xC; preg|4-241-12-0
83248|code|MOV             R3, R2; pmatch|19-70
83250|code|CBZ             R7, loc_1453C|31-177
83252|code|LDRB.W          R5, [R4,#0x38]|148-248-56-80
83256|code|CMP             R5, #0|0-45
83258|code|BNE             loc_14634|123-209
83260|code|LDR             R1, [R6]; string|49-104
83262|code|STR.W           R9, [SP,#0x30+eflags]; eflags|205-248-0-144
83266|code|BLX             regexec|253-247-236-235
83270|code|MOV             R5, R0|5-70
83272|code|CMP             R0, #0|0-40
83274|code|BNE             loc_14524|235-209
83276|code|MOV             R1, R6; std::string *|49-70
83278|code|MOV             R0, R8; this|64-70
83280|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|253-247-204-236
83284|code|LDR             R3, [R4,#8]|163-104
83286|code|CMP             R3, #0|0-43
83288|code|BLE             loc_145DC|64-221
83290|code|MOV             R6, R5|46-70
83292|code|B               loc_14598|28-224
83294|code|LDR.W           R11, [R8]|216-248-0-176
83298|code|MOV             R0, R8; this|64-70
83300|code|LDR.W           R3, [R11,#-4]|91-248-4-60
83304|code|CMP             R3, #0|0-43
83306|code|BLT             loc_1457A|6-219
83308|code|BLX             _ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|253-247-76-235
83312|code|LDR             R3, [R4,#0x2C]|227-106
83314|code|LDR.W           R11, [R8]|216-248-0-176
83318|code|LDR.W           R9, [R3,R10]|83-248-10-144
83322|code|BLX             random|253-247-72-237
83326|code|LDR             R3, [R4,#0x30]|35-107
83328|code|LDR.W           R1, [R3,R10]|83-248-10-16
83332|code|BLX             __aeabi_idivmod|253-247-196-236
83336|code|LDRB.W          R3, [R9,R1]|25-248-1-48
83340|code|STRB.W          R3, [R11,R6]|11-248-6-48
83344|code|LDR             R3, [R4,#8]|163-104
83346|code|ADDS            R6, #1|1-54
83348|code|CMP             R3, R6|179-66
83350|code|BLE             loc_145DC|33-221
83352|code|LDR             R3, [R4,#0x2C]|227-106
83354|code|MOV.W           R10, R6,LSL#2|79-234-134-10
83358|code|LDR.W           R9, [R3,R6,LSL#2]|83-248-38-144
83362|code|CMP.W           R9, #0|185-241-0-15
83366|code|BEQ             loc_14590|243-208
83368|code|CMP             R7, #0|0-47
83370|code|BEQ             loc_1455E|216-208
83372|code|LDR.W           R2, [R8]|216-248-0-32
83376|code|MOV             R0, R8; this|64-70
83378|code|LDR.W           R3, [R2,#-4]|82-248-4-60
83382|code|CMP             R3, #0|0-43
83384|code|BLT             loc_145C8|6-219
83386|code|BLX             _ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|253-247-38-235
83390|code|LDR             R3, [R4,#0x2C]|227-106
83392|code|LDR.W           R2, [R8]|216-248-0-32
83396|code|LDR.W           R9, [R3,R10]|83-248-10-144
83400|code|LDR             R3, [R4,#0x34]|99-107
83402|code|LDR.W           R3, [R3,R10]|83-248-10-48
83406|code|LDRB.W          R3, [R9,R3]|25-248-3-48
83410|code|STRB            R3, [R2,R6]|147-85
83412|code|ADDS            R6, #1|1-54
83414|code|LDR             R3, [R4,#8]|163-104
83416|code|CMP             R3, R6|179-66
83418|code|BGT             loc_14598|221-220
83420|code|CBZ             R7, loc_14622|15-179
83422|code|SUBS            R6, R3, #1|94-30
83424|code|BMI             loc_1461C|28-212
83426|code|LDR             R0, [R4,#0x2C]|224-106
83428|code|MOV             LR, #0xFFFFFFFC|79-246-252-126-207-246-255-126
83436|code|MOV.W           R12, #0|79-240-0-12
83440|code|RSB.W           LR, R0, LR|192-235-14-14
83444|code|ADD.W           R0, R0, R3,LSL#2|0-235-131-0
83448|code|ADD.W           R3, LR, R0|14-235-0-3
83452|code|LDR.W           R2, [R0,#-4]!|80-248-4-45
83456|code|SUBS            R6, #1|1-62
83458|code|CBZ             R2, loc_14618|74-177
83460|code|LDR             R1, [R4,#0x34]|97-107
83462|code|LDR             R7, [R4,#0x30]|39-107
83464|code|LDR             R2, [R1,R3]|202-88
83466|code|ADDS            R2, #1|1-50
83468|code|STR             R2, [R1,R3]|202-80
83470|code|LDR             R7, [R7,R3]|255-88
83472|code|CMP             R2, R7|186-66
83474|code|BLT             loc_14622|6-219
83476|code|STR.W           R12, [R1,R3]|65-248-3-192
83480|code|ADDS            R3, R6, #1|115-28
83482|code|BNE             loc_145F8|237-209
83484|code|MOVS            R3, #1|1-35
83486|code|STRB.W          R3, [R4,#0x38]|132-248-56-48
83490|code|MOV             R0, R5|40-70
83492|code|ADD             SP, SP, #0xC|3-176
83494|code|POP.W           {R4-R11,PC}|189-232-240-143
83498|code|MOVS            R5, #1|1-37
83500|code|MOV             R0, R5|40-70
83502|code|ADD             SP, SP, #0xC|3-176
83504|code|POP.W           {R4-R11,PC}|189-232-240-143
83508|code|LDR             R3, [R4,#8]|163-104
83510|code|CMP             R3, R2|147-66
83512|code|BLE             loc_1464E|9-221
83514|code|LDR             R2, [R4,#0x34]|98-107
83516|code|MOVS            R3, #0|0-35
83518|code|MOV             R0, R3|24-70
83520|code|SUBS            R2, #4|4-58
83522|code|STR.W           R0, [R2,#4]!|66-248-4-15
83526|code|ADDS            R3, #1|1-51
83528|code|LDR             R1, [R4,#8]|161-104
83530|code|CMP             R1, R3|153-66
83532|code|BGT             loc_14642|249-220
83534|code|MOVS            R5, #1|1-37
83536|code|MOVS            R3, #0|0-35
83538|code|MOV             R0, R5|40-70
83540|code|STRB.W          R3, [R4,#0x38]|132-248-56-48
83544|code|ADD             SP, SP, #0xC|3-176
83546|code|POP.W           {R4-R11,PC}|189-232-240-143
83550|data|ALIGN 0x10|0-191
83552|code|PUSH.W          {R4-R9,LR}|45-233-240-67
83556|code|MOVS            R3, #1|1-35
83558|code|MOVS            R6, #0|0-38
83560|code|SUBW            SP, SP, #0x404|173-242-4-77
83564|code|MOV             R7, R0|7-70
83566|code|STRB            R3, [R0]|3-112
83568|code|STR             R6, [R0,#4]|70-96
83570|code|MOV             R4, R1|12-70
83572|code|CBZ             R1, loc_14686|57-177
83574|code|MOVW            R1, #0x7630|71-242-48-97
83578|code|MOV             R0, R4|32-70
83580|code|MOVT.W          R1, #1|192-242-1-1
83584|code|BLX             strcmp|253-247-220-236
83588|code|CBNZ            R0, loc_14690|32-185
83590|code|MOV             R0, R7|56-70
83592|code|ADDW            SP, SP, #0x404|13-242-4-77
83596|code|POP.W           {R4-R9,PC}|189-232-240-131
83600|code|MOVW            R1, #0x7228|71-242-40-33
83604|code|MOV             R0, R4|32-70
83606|code|MOVT.W          R1, #1|192-242-1-1
83610|code|MOV             R9, R6|177-70
83612|code|BLX             fopen|253-247-116-235
83616|code|MOV             R8, R0|128-70
83618|code|CMP             R0, #0|0-40
83620|code|BEQ             loc_1473E|75-208
83622|code|MOV             R0, SP|104-70
83624|code|MOV.W           R1, #0x400|79-244-128-97
83628|code|MOV             R2, R8|66-70
83630|code|BLX             fgets|253-247-96-236
83634|code|CMP             R0, #0|0-40
83636|code|BEQ             loc_1472A|57-208
83638|code|MOVW            R1, #0x762C|71-242-44-97
83642|code|MOV             R0, SP|104-70
83644|code|MOVT.W          R1, #1|192-242-1-1
83648|code|STRB.W          R9, [SP,#0x3FF]|141-248-255-147
83652|code|BLX             strtok|253-247-24-235
83656|code|LDRB.W          R3, [SP]|157-248-0-48
83660|code|CMP             R3, #0|0-43
83662|code|BEQ             loc_1474E|62-208
83664|code|MOV             R4, SP|108-70
83666|code|MOV.W           R5, #0xFFFFFFFF|79-240-255-53
83670|code|MOVS            R1, #0|0-33
83672|code|B               loc_146E2|3-224
83674|code|LDRB.W          R3, [R4,#1]!|20-248-1-63
83678|code|ADDS            R1, #1|1-49
83680|code|CBZ             R3, loc_146F6|75-177
83682|code|CMP             R3, #0x20 ; ' '|32-43
83684|code|BNE             loc_146DA|249-209
83686|code|ADDS            R5, #1|1-53
83688|code|BNE             loc_1474E|49-209
83690|code|LDRB.W          R3, [R4,#1]!|20-248-1-63
83694|code|MOV             R5, R1|13-70
83696|code|ADDS            R1, #1|1-49
83698|code|CMP             R3, #0|0-43
83700|code|BNE             loc_146E2|245-209
83702|code|ADDS            R2, R5, #1|106-28
83704|code|BEQ             loc_1474E|41-208
83706|code|MOVS            R0, #0x40 ; '@'|64-32
83708|code|STRB.W          R3, [SP,R5]|13-248-5-48
83712|code|BLX             _Znwj; operator new(uint)|253-247-94-234
83716|code|ADDS            R2, R5, #1|106-28
83718|code|MOV             R1, SP|105-70
83720|code|ADD             R2, SP|106-68
83722|code|MOV             R4, R0|4-70
83724|code|BL              sub_142AC|255-247-206-253
83728|code|LDR             R3, [R7,#4]|123-104
83730|code|CBZ             R3, loc_1473A|147-177
83732|code|CBZ             R6, loc_14718|6-177
83734|code|STR             R4, [R6,#0x3C]|244-99
83736|code|MOV             R0, SP|104-70
83738|code|MOV.W           R1, #0x400|79-244-128-97
83742|code|MOV             R2, R8|66-70
83744|code|MOV             R6, R4|38-70
83746|code|BLX             fgets|253-247-38-236
83750|code|CMP             R0, #0|0-40
83752|code|BNE             loc_146B6|197-209
83754|code|MOV             R0, R8|64-70
83756|code|BLX             fclose|253-247-86-236
83760|code|MOV             R0, R7|56-70
83762|code|ADDW            SP, SP, #0x404|13-242-4-77
83766|code|POP.W           {R4-R9,PC}|189-232-240-131
83770|code|STR             R4, [R7,#4]|124-96
83772|code|B               loc_14714|234-231
83774|code|MOVW            R0, #0x7634|71-242-52-96
83778|code|MOV             R1, R4|33-70
83780|code|MOVT.W          R0, #1|192-242-1-0
83784|code|BLX             printf|253-247-178-234
83788|code|B               loc_14686|155-231
83790|code|MOVW            R0, #0x7668|71-242-104-96
83794|code|MOV             R1, SP|105-70
83796|code|MOVT.W          R0, #1|192-242-1-0
83800|code|BLX             printf|253-247-170-234
83804|code|MOVS            R0, #1|1-32
83806|code|BLX             exit|253-247-162-234
83810|code|MOV             R0, R4|32-70
83812|code|BLX             _ZdlPv; operator delete(void *)|253-247-110-235
83816|code|BLX             __cxa_end_cleanup|253-247-156-235
83820|code|PUSH.W          {R4-R8,LR}|45-233-240-65
83824|code|LDR             R5, [R0,#4]|69-104
83826|code|CBZ             R5, loc_1477E|37-177
83828|code|MOV             R0, R5|40-70
83830|code|POP.W           {R4-R8,LR}|189-232-240-65
83834|code|B.W             sub_14510|255-247-201-190
83838|code|MOV             R7, R1|15-70
83840|code|MOV             R4, R0|4-70
83842|code|MOV             R1, R2|17-70
83844|code|CBZ             R3, loc_147A2|107-177
83846|code|LDRB            R6, [R0]|6-120
83848|code|CBZ             R6, loc_14792|30-177
83850|code|STRB            R5, [R0]|5-112
83852|code|MOVS            R0, #1|1-32
83854|code|POP.W           {R4-R8,PC}|189-232-240-129
83858|code|MOV             R0, R7|56-70
83860|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|253-247-170-235
83864|code|MOVS            R3, #1|1-35
83866|code|MOV             R0, R6|48-70
83868|code|STRB            R3, [R4]|35-112
83870|code|POP.W           {R4-R8,PC}|189-232-240-129
83874|code|MOV             R0, R7|56-70
83876|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|253-247-162-235
83880|code|MOVS            R0, #1|1-32
83882|code|POP.W           {R4-R8,PC}|189-232-240-129
83886|data|ALIGN 0x10|0-191
83888|code|CBZ             R2, locret_147E0|178-177
83890|code|SUBS            R1, #4|4-57
83892|code|MOV             R3, R0|3-70
83894|code|PUSH            {R4,R5}|48-180
83896|code|MOVS            R4, #0|0-36
83898|code|LDR.W           R5, [R1,#4]!|81-248-4-95
83902|code|ADDS            R3, #4|4-51
83904|code|STRB            R5, [R0,R4]|5-85
83906|code|ADDS            R4, #4|4-52
83908|code|LDR             R5, [R1]|13-104
83910|code|CMP             R2, R4|162-66
83912|code|MOV.W           R5, R5,LSR#8|79-234-21-37
83916|code|STRB.W          R5, [R3,#-3]|3-248-3-92
83920|code|LDRH            R5, [R1,#2]|77-136
83922|code|STRB.W          R5, [R3,#-2]|3-248-2-92
83926|code|LDRB            R5, [R1,#3]|205-120
83928|code|STRB.W          R5, [R3,#-1]|3-248-1-92
83932|code|BHI             loc_147BA|237-216
83934|code|POP             {R4,R5}|48-188
83936|code|BX              LR|112-71
83938|data|ALIGN 4|0-191
83940|code|LDR             R3, [R0]|3-104
83942|code|MOV             R2, R0|2-70
83944|code|PUSH.W          {R4-R11,LR}|45-233-240-79
83948|code|SUB             SP, SP, #0x5C|151-176
83950|code|ADDS            R1, #1|1-49
83952|code|ADD             R5, SP, #0x80+var_6C|5-173
83954|code|STR             R3, [SP,#0x80+var_70]|4-147
83956|code|ADD             R6, SP, #0x80+var_2C|21-174
83958|code|LDR             R3, [R0,#4]|67-104
83960|code|STR             R3, [SP,#0x80+var_78]|2-147
83962|code|LDR             R3, [R2,#8]|147-104
83964|code|STR             R3, [SP,#0x80+var_7C]|1-147
83966|code|LDR             R3, [R0,#0xC]|195-104
83968|code|STR             R3, [SP,#0x80+var_74]|3-147
83970|code|LDRB            R4, [R1,#1]|76-120
83972|code|ADDS            R1, #4|4-49
83974|code|LDRB.W          R3, [R1,#-4]|17-248-4-60
83978|code|LDRB.W          R2, [R1,#-5]|17-248-5-44
83982|code|LDRB.W          R7, [R1,#-2]|17-248-2-124
83986|code|LSLS            R4, R4, #0x10|36-4
83988|code|ORR.W           R3, R4, R3,LSL#8|68-234-3-35
83992|code|ORRS            R3, R2|19-67
83994|code|ORR.W           R3, R3, R7,LSL#24|67-234-7-99
83998|code|STR.W           R3, [R5,#4]!|69-248-4-63
84002|code|CMP             R5, R6|181-66
84004|code|BNE             loc_14802|237-209
84006|code|LDR             R2, [SP,#0x80+var_74]|3-154
84008|code|MOVW            R3, #0xA478|74-242-120-67
84012|code|LDR             R5, [SP,#0x80+var_68]|6-157
84014|code|MOVT.W          R3, #0xD76A|205-242-106-115
84018|code|LDR             R7, [SP,#0x80+var_78]|2-159
84020|code|MOVW            R11, #0x105D|65-242-93-11
84024|code|MOV             R1, R2|17-70
84026|code|LDR             R2, [SP,#0x80+var_7C]|1-154
84028|code|ADD             R3, R5|43-68
84030|code|LDR             R5, [SP,#0x80+var_70]|4-157
84032|code|BIC.W           R4, R1, R7|33-234-7-4
84036|code|ANDS            R2, R7|58-64
84038|code|ADD             R3, R5|43-68
84040|code|ORRS            R4, R2|20-67
84042|code|ADD             R4, R3|28-68
84044|code|LDR             R5, [SP,#0x80+var_64]|7-157
84046|code|MOVW            R3, #0xB756|75-242-86-115
84050|code|STR             R0, [SP,#0x80+var_6C]|5-144
84052|code|ADD.W           R6, R7, R4,ROR#25|7-235-116-102
84056|code|LDR             R4, [SP,#0x80+var_7C]|1-156
84058|code|AND.W           R2, R6, R7|6-234-7-2
84062|code|MOVT.W          R3, #0xE8C7|206-246-199-3
84066|code|BIC.W           R1, R4, R6|36-234-6-1
84070|code|ADD             R3, R5|43-68
84072|code|ORRS            R2, R1|10-67
84074|code|LDR             R1, [SP,#0x80+var_74]|3-153
84076|code|MOVW            R5, #0x70DB|71-242-219-5
84080|code|LDR             R0, [SP,#0x80+var_2C]|21-152
84082|code|ADD             R3, R1|11-68
84084|code|MOVT.W          R5, #0x2420|194-242-32-69
84088|code|ADD             R2, R3|26-68
84090|code|LDR             R3, [SP,#0x80+var_60]|8-155
84092|code|MOVW            R1, #0xCEEE|76-246-238-97
84096|code|MOVT.W          R11, #0xD62F|205-242-47-107
84100|code|ADD.W           R2, R6, R2,ROR#20|6-235-50-82
84104|code|ADD             R5, R3|29-68
84106|code|ADD             R5, R4|37-68
84108|code|AND.W           R3, R2, R6|2-234-6-3
84112|code|BIC.W           R4, R7, R2|39-234-2-4
84116|code|MOVT.W          R1, #0xC1BD|204-242-189-17
84120|code|ORRS            R3, R4|35-67
84122|code|LDR             R4, [SP,#0x80+var_5C]|9-156
84124|code|ADD             R3, R5|43-68
84126|code|ADD             R1, R4|33-68
84128|code|ADD.W           R3, R2, R3,ROR#15|2-235-243-51
84132|code|ADD             R1, R7|57-68
84134|code|AND.W           R4, R3, R2|3-234-2-4
84138|code|BIC.W           R5, R6, R3|38-234-3-5
84142|code|ORRS            R5, R4|37-67
84144|code|LDR             R7, [SP,#0x80+var_58]|10-159
84146|code|ADD             R5, R1|13-68
84148|code|MOV             R4, #0xF57C0FAF|64-246-175-116-207-242-124-84
84156|code|ADD             R4, R7|60-68
84158|code|ADD.W           R5, R3, R5,ROR#10|3-235-181-37
84162|code|ADD             R4, R6|52-68
84164|code|AND.W           R1, R5, R3|5-234-3-1
84168|code|BIC.W           R7, R2, R5|34-234-5-7
84172|code|ORRS            R7, R1|15-67
84174|code|LDR             R6, [SP,#0x80+var_54]|11-158
84176|code|ADD             R7, R4|39-68
84178|code|MOV             R1, #0x4787C62A|76-242-42-97-196-242-135-113
84186|code|ADD             R1, R6|49-68
84188|code|ADD.W           R7, R5, R7,ROR#25|5-235-119-103
84192|code|ADD             R2, R1|10-68
84194|code|BIC.W           R6, R3, R7|35-234-7-6
84198|code|AND.W           R1, R7, R5|7-234-5-1
84202|code|ORRS            R1, R6|49-67
84204|code|LDR             R6, [SP,#0x80+var_50]|12-158
84206|code|ADD             R1, R2|17-68
84208|code|MOV             R4, #0xA8304613|68-242-19-100-202-246-48-4
84216|code|ADD             R4, R6|52-68
84218|code|ADD.W           R1, R7, R1,ROR#20|7-235-49-81
84222|code|ADD             R4, R3|28-68
84224|code|BIC.W           R2, R5, R1|37-234-1-2
84228|code|AND.W           R3, R1, R7|1-234-7-3
84232|code|ORRS            R3, R2|19-67
84234|code|MOVW            R6, #0x9501|73-242-1-86
84238|code|ADD             R3, R4|35-68
84240|code|LDR             R4, [SP,#0x80+var_4C]|13-156
84242|code|MOVT.W          R6, #0xFD46|207-246-70-86
84246|code|ADD.W           R3, R1, R3,ROR#15|1-235-243-51
84250|code|ADD             R6, R4|38-68
84252|code|AND.W           R2, R3, R1|3-234-1-2
84256|code|BIC.W           R4, R7, R3|39-234-3-4
84260|code|ORRS            R4, R2|20-67
84262|code|ADD             R5, R6|53-68
84264|code|ADD             R5, R4|37-68
84266|code|LDR             R6, [SP,#0x80+var_48]|14-158
84268|code|MOVW            R2, #0x98D8|73-246-216-2
84272|code|ADD.W           R5, R3, R5,ROR#10|3-235-181-37
84276|code|MOVT.W          R2, #0x6980|198-246-128-18
84280|code|ADD             R2, R6|50-68
84282|code|BIC.W           R4, R1, R5|33-234-5-4
84286|code|ADD             R7, R2|23-68
84288|code|AND.W           R2, R5, R3|5-234-3-2
84292|code|ORRS            R2, R4|34-67
84294|code|LDR             R4, [SP,#0x80+var_44]|15-156
84296|code|ADD             R7, R2|23-68
84298|code|MOV             R6, #0x8B44F7AF|79-242-175-118-200-246-68-54
84306|code|ADD             R6, R4|38-68
84308|code|ADD.W           R7, R5, R7,ROR#25|5-235-119-103
84312|code|ADD             R6, R1|14-68
84314|code|AND.W           R2, R7, R5|7-234-5-2
84318|code|BIC.W           R1, R3, R7|35-234-7-1
84322|code|LDR             R4, [SP,#0x80+var_40]|16-156
84324|code|ORRS            R1, R2|17-67
84326|code|ADD             R1, R6|49-68
84328|code|MOVW            R6, #0xD7BE|77-242-190-118
84332|code|SUB.W           R2, R4, #0xA400|164-245-36-66
84336|code|MOVT.W          R6, #0x895C|200-246-92-22
84340|code|ADD.W           R1, R7, R1,ROR#20|7-235-49-81
84344|code|SUBS            R2, #0x4F ; 'O'|79-58
84346|code|BIC.W           R12, R5, R1|37-234-1-12
84350|code|ADD             R2, R3|26-68
84352|code|AND.W           R3, R1, R7|1-234-7-3
84356|code|ORR.W           R3, R12, R3|76-234-3-3
84360|code|MOVW            R12, #0x438E|68-242-142-60
84364|code|ADD             R3, R2|19-68
84366|code|LDR             R2, [SP,#0x80+var_3C]|17-154
84368|code|MOVT.W          R12, #0xA679|202-242-121-108
84372|code|ADD.W           R3, R1, R3,ROR#15|1-235-243-51
84376|code|ADD             R6, R2|22-68
84378|code|BIC.W           LR, R7, R3|39-234-3-14
84382|code|ADD             R5, R6|53-68
84384|code|AND.W           R6, R3, R1|3-234-1-6
84388|code|MOVW            R2, #0x1122|65-242-34-18
84392|code|ORR.W           R6, LR, R6|78-234-6-6
84396|code|MOVT.W          R2, #0x6B90|198-246-144-50
84400|code|ADD             R5, R6|53-68
84402|code|LDR             R6, [SP,#0x80+var_38]|18-158
84404|code|MOVW            LR, #0x7193|71-242-147-30
84408|code|ADD.W           R5, R3, R5,ROR#10|3-235-181-37
84412|code|ADD             R2, R6|50-68
84414|code|ADD             R7, R2|23-68
84416|code|BIC.W           R6, R1, R5|33-234-5-6
84420|code|AND.W           R2, R5, R3|5-234-3-2
84424|code|MOVT.W          LR, #0xFD98|207-246-152-94
84428|code|ORRS            R2, R6|50-67
84430|code|LDR             R6, [SP,#0x80+var_34]|19-158
84432|code|ADD             R7, R2|23-68
84434|code|LDR             R2, [SP,#0x80+var_30]|20-154
84436|code|ADD             LR, R6|182-68
84438|code|ADD.W           R7, R5, R7,ROR#25|5-235-119-103
84442|code|ADD             R1, LR|113-68
84444|code|AND.W           R6, R7, R5|7-234-5-6
84448|code|BIC.W           LR, R3, R7|35-234-7-14
84452|code|ORR.W           LR, LR, R6|78-234-6-14
84456|code|ADD             R12, R2|148-68
84458|code|ADD             LR, R1|142-68
84460|code|ADD             R12, R3|156-68
84462|code|MOVW            R6, #0x821|64-246-33-6
84466|code|ADD.W           LR, R7, LR,ROR#20|7-235-62-94
84470|code|MOVT.W          R6, #0x49B4|196-246-180-22
84474|code|AND.W           R3, LR, R7|14-234-7-3
84478|code|ADD             R6, R0|6-68
84480|code|MVN.W           R1, LR|111-234-14-1
84484|code|AND.W           R8, R1, R5|1-234-5-8
84488|code|ORR.W           R3, R8, R3|72-234-3-3
84492|code|ADD             R6, R5|46-68
84494|code|ADD             R3, R12|99-68
84496|code|LDR             R0, [SP,#0x80+var_64]|7-152
84498|code|MOVW            R8, #0x2562|66-242-98-88
84502|code|ADD.W           R3, LR, R3,ROR#15|14-235-243-51
84506|code|MOVT.W          R8, #0xF61E|207-242-30-104
84510|code|AND.W           R5, R3, LR|3-234-14-5
84514|code|ADD             R8, R0|128-68
84516|code|MVN.W           R12, R3|111-234-3-12
84520|code|AND.W           R9, R12, R7|12-234-7-9
84524|code|ORR.W           R5, R9, R5|73-234-5-5
84528|code|ANDS            R1, R3|25-64
84530|code|ADD             R5, R6|53-68
84532|code|ADD             R7, R8|71-68
84534|code|LDR             R0, [SP,#0x80+var_50]|12-152
84536|code|MOVW            R8, #0xB340|75-242-64-56
84540|code|ADD.W           R5, R3, R5,ROR#10|3-235-181-37
84544|code|MOVT.W          R8, #0xC040|204-242-64-8
84548|code|AND.W           R9, R5, LR|5-234-14-9
84552|code|ADD             R8, R0|128-68
84554|code|ORR.W           R1, R9, R1|73-234-1-1
84558|code|LDR             R0, [SP,#0x80+var_3C]|17-152
84560|code|ADD             R7, R1|15-68
84562|code|AND.W           R12, R5, R12|5-234-12-12
84566|code|ADD             LR, R8|198-68
84568|code|MOVW            R6, #0x5A51|69-246-81-38
84572|code|ADD.W           R7, R5, R7,ROR#27|5-235-247-103
84576|code|MOVT.W          R6, #0x265E|194-242-94-102
84580|code|AND.W           R8, R7, R3|7-234-3-8
84584|code|ADD             R6, R0|6-68
84586|code|ORR.W           R8, R8, R12|72-234-12-8
84590|code|LDR             R0, [SP,#0x80+var_68]|6-152
84592|code|ADD             R8, LR|240-68
84594|code|ADD             R6, R3|30-68
84596|code|MOVW            R3, #0xC7AA|76-242-170-115
84600|code|BIC.W           R1, R7, R5|39-234-5-1
84604|code|ADD.W           R8, R7, R8,ROR#23|7-235-248-88
84608|code|MOVT.W          R3, #0xE9B6|206-246-182-19
84612|code|ADD             R3, R0|3-68
84614|code|LDR             R0, [SP,#0x80+var_54]|11-152
84616|code|ADD             R3, R5|43-68
84618|code|AND.W           R5, R8, R5|8-234-5-5
84622|code|ORRS            R5, R1|13-67
84624|code|ADD             R11, R0|131-68
84626|code|ADD             R6, R5|46-68
84628|code|BIC.W           LR, R8, R7|40-234-7-14
84632|code|ADD             R11, R7|187-68
84634|code|LDR             R0, [SP,#0x80+var_2C]|21-152
84636|code|ADD.W           R6, R8, R6,ROR#18|8-235-182-70
84640|code|MOVW            R1, #0x1453|65-242-83-65
84644|code|ANDS            R7, R6|55-64
84646|code|BIC.W           R10, R6, R8|38-234-8-10
84650|code|ORR.W           R7, R7, LR|71-234-14-7
84654|code|MOVT.W          R1, #0x244|192-242-68-33
84658|code|ADD             R7, R3|31-68
84660|code|MOV             R3, #0xD8A1E681|78-242-129-99-205-246-161-3
84668|code|ADD             R3, R0|3-68
84670|code|ADD.W           R7, R6, R7,ROR#12|6-235-55-55
84674|code|ADD             R1, R4|33-68
84676|code|AND.W           R12, R7, R8|7-234-8-12
84680|code|BIC.W           LR, R7, R6|39-234-6-14
84684|code|ORR.W           R12, R12, R10|76-234-10-12
84688|code|ADD.W           R10, R3, R6|3-235-6-10
84692|code|ADD             R12, R11|220-68
84694|code|ADD             R1, R8|65-68
84696|code|LDR             R0, [SP,#0x80+var_58]|10-152
84698|code|MOVW            R5, #0xFBC8|79-246-200-53
84702|code|ADD.W           R12, R7, R12,ROR#27|7-235-252-108
84706|code|MOVT.W          R5, #0xE7D3|206-242-211-117
84710|code|AND.W           R6, R12, R6|12-234-6-6
84714|code|ADD             R5, R0|5-68
84716|code|ORR.W           LR, R6, LR|70-234-14-14
84720|code|ADD.W           R8, R5, R7|5-235-7-8
84724|code|ADD             LR, R1|142-68
84726|code|BIC.W           R3, R12, R7|44-234-7-3
84730|code|LDR             R0, [SP,#0x80+var_44]|15-152
84732|code|MOVW            R9, #0x7D6|64-242-214-121
84736|code|ADD.W           LR, R12, LR,ROR#23|12-235-254-94
84740|code|MOVW            R11, #0xCDE6|76-246-230-91
84744|code|AND.W           R7, LR, R7|14-234-7-7
84748|code|BIC.W           R1, LR, R12|46-234-12-1
84752|code|ORRS            R3, R7|59-67
84754|code|MOVT.W          R9, #0xC337|204-242-55-57
84758|code|ADD             R3, R10|83-68
84760|code|ADD             R9, R2|145-68
84762|code|ADD             R9, LR|241-68
84764|code|MOVT.W          R11, #0x21E1|194-242-225-27
84768|code|ADD.W           R3, LR, R3,ROR#18|14-235-179-67
84772|code|ADD             R11, R0|131-68
84774|code|AND.W           R5, R3, R12|3-234-12-5
84778|code|ADD             R11, R12|227-68
84780|code|ORRS            R5, R1|13-67
84782|code|BIC.W           R1, R3, LR|35-234-14-1
84786|code|ADD             R5, R8|69-68
84788|code|LDR             R0, [SP,#0x80+var_5C]|9-152
84790|code|MOVW            R7, #0xD87|64-246-135-87
84794|code|MOVW            R8, #0x14ED|65-242-237-72
84798|code|ADD.W           R5, R3, R5,ROR#12|3-235-53-53
84802|code|MOVT.W          R7, #0xF4D5|207-242-213-71
84806|code|AND.W           LR, R5, LR|5-234-14-14
84810|code|ADD             R7, R0|7-68
84812|code|ORR.W           R1, LR, R1|78-234-1-1
84816|code|ADD             R7, R3|31-68
84818|code|ADD             R1, R11|89-68
84820|code|BIC.W           R6, R5, R3|37-234-3-6
84824|code|LDR             R0, [SP,#0x80+var_48]|14-152
84826|code|MOVT.W          R8, #0x455A|196-242-90-88
84830|code|ADD.W           R1, R5, R1,ROR#27|5-235-241-97
84834|code|MOVW            R10, #0xE905|78-246-5-26
84838|code|ANDS            R3, R1|11-64
84840|code|ADD             R8, R0|128-68
84842|code|ORRS            R6, R3|30-67
84844|code|ADD             R8, R5|168-68
84846|code|ADD             R6, R9|78-68
84848|code|BIC.W           R3, R1, R5|33-234-5-3
84852|code|LDR             R0, [SP,#0x80+var_34]|19-152
84854|code|MOVT.W          R10, #0xA9E3|202-246-227-26
84858|code|ADD.W           R6, R1, R6,ROR#23|1-235-246-86
84862|code|MOVW            LR, #0xA3F8|74-242-248-62
84866|code|ANDS            R5, R6|53-64
84868|code|ADD             R10, R0|130-68
84870|code|ORRS            R3, R5|43-67
84872|code|ADD             R10, R1|138-68
84874|code|ADD             R3, R7|59-68
84876|code|BIC.W           R5, R6, R1|38-234-1-5
84880|code|LDR             R0, [SP,#0x80+var_60]|8-152
84882|code|MOVT.W          LR, #0xFCEF|207-246-239-78
84886|code|ADD.W           R3, R6, R3,ROR#18|6-235-179-67
84890|code|MOVW            R11, #0x2D9|64-242-217-43
84894|code|ANDS            R1, R3|25-64
84896|code|ADD             LR, R0|134-68
84898|code|ORR.W           R12, R1, R5|65-234-5-12
84902|code|ADD             LR, R6|182-68
84904|code|ADD             R12, R8|196-68
84906|code|BIC.W           R5, R3, R6|35-234-6-5
84910|code|LDR             R0, [SP,#0x80+var_4C]|13-152
84912|code|MOVT.W          R11, #0x676F|198-242-111-123
84916|code|ADD.W           R12, R3, R12,ROR#12|3-235-60-60
84920|code|MOVW            R7, #0x4C8A|68-246-138-71
84924|code|AND.W           R6, R12, R6|12-234-6-6
84928|code|ADD             R11, R0|131-68
84930|code|ORRS            R5, R6|53-67
84932|code|BIC.W           R8, R12, R3|44-234-3-8
84936|code|ADD             R5, R10|85-68
84938|code|ADD             R11, R3|155-68
84940|code|LDR             R0, [SP,#0x80+var_38]|18-152
84942|code|MOVT.W          R7, #0x8D2A|200-246-42-87
84946|code|ADD.W           R5, R12, R5,ROR#27|12-235-245-101
84950|code|MOVW            R6, #0xF681|79-242-129-102
84954|code|ANDS            R3, R5|43-64
84956|code|ADD             R7, R0|7-68
84958|code|ORR.W           R9, R3, R8|67-234-8-9
84962|code|ADD             R7, R12|103-68
84964|code|ADD             R9, LR|241-68
84966|code|BIC.W           R8, R5, R12|37-234-12-8
84970|code|LDR             R0, [SP,#0x80+var_54]|11-152
84972|code|MOVT.W          R6, #0x8771|200-242-113-118
84976|code|ADD.W           R9, R5, R9,ROR#23|5-235-249-89
84980|code|MOVW            LR, #0x6122|70-242-34-30
84984|code|AND.W           R12, R9, R12|9-234-12-12
84988|code|SUB.W           R1, R0, #0x5C000|160-245-184-33
84992|code|ORR.W           R3, R12, R8|76-234-8-3
84996|code|SUBW            R1, R1, #0x6BE|161-242-190-97
85000|code|ADD             R3, R11|91-68
85002|code|BIC.W           R10, R9, R5|41-234-5-10
85006|code|ADD             R1, R5|41-68
85008|code|LDR             R0, [SP,#0x80+var_48]|14-152
85010|code|ADD.W           R3, R9, R3,ROR#18|9-235-179-67
85014|code|MOVT.W          LR, #0x6D9D|198-246-157-94
85018|code|ANDS            R5, R3|29-64
85020|code|ADD             R6, R0|6-68
85022|code|ORR.W           R5, R5, R10|69-234-10-5
85026|code|ADD             R6, R9|78-68
85028|code|ADD.W           R8, R7, R5|7-235-5-8
85032|code|EOR.W           R9, R3, R9|131-234-9-9
85036|code|LDR             R0, [SP,#0x80+var_3C]|17-152
85038|code|MOVW            R12, #0x380C|67-246-12-12
85042|code|ADD.W           R8, R3, R8,ROR#12|3-235-56-56
85046|code|MOVT.W          R12, #0xFDE5|207-246-229-92
85050|code|EOR.W           R9, R9, R8|137-234-8-9
85054|code|ADD             LR, R0|134-68
85056|code|ADD             R1, R9|73-68
85058|code|ADD             LR, R3|158-68
85060|code|EOR.W           R3, R8, R3|136-234-3-3
85064|code|ADD             R12, R2|148-68
85066|code|ADD.W           R1, R8, R1,ROR#28|8-235-49-113
85070|code|ADD             R12, R8|196-68
85072|code|EORS            R3, R1|75-64
85074|code|EOR.W           R8, R1, R8|129-234-8-8
85078|code|ADDS            R5, R6, R3|245-24
85080|code|LDR             R0, [SP,#0x80+var_64]|7-152
85082|code|MOVW            R7, #0xEA44|78-246-68-39
85086|code|MOVW            R11, #0xCFA9|76-246-169-123
85090|code|ADD.W           R5, R1, R5,ROR#21|1-235-117-85
85094|code|MOVT.W          R7, #0xA4BE|202-242-190-71
85098|code|EOR.W           R8, R8, R5|136-234-5-8
85102|code|ADD             R7, R0|7-68
85104|code|ADD             LR, R8|198-68
85106|code|ADD             R7, R1|15-68
85108|code|EORS            R1, R5|105-64
85110|code|LDR             R0, [SP,#0x80+var_58]|10-152
85112|code|ADD.W           LR, R5, LR,ROR#16|5-235-62-78
85116|code|MOVT.W          R11, #0x4BDE|196-246-222-59
85120|code|EOR.W           R3, R1, LR|129-234-14-3
85124|code|ADD             R11, R0|131-68
85126|code|ADD             R3, R12|99-68
85128|code|ADD             R11, R5|171-68
85130|code|EOR.W           R5, LR, R5|142-234-5-5
85134|code|LDR             R0, [SP,#0x80+var_4C]|13-152
85136|code|ADD.W           R3, LR, R3,ROR#9|14-235-115-35
85140|code|MOVW            R10, #0x4B60|68-246-96-58
85144|code|EORS            R5, R3|93-64
85146|code|MOVT.W          R10, #0xF6BB|207-242-187-106
85150|code|ADD             R7, R5|47-68
85152|code|ADD             R10, R0|130-68
85154|code|ADD             R10, LR|242-68
85156|code|EOR.W           LR, R3, LR|131-234-14-14
85160|code|ADD.W           R7, R3, R7,ROR#28|3-235-55-119
85164|code|MOVW            R9, #0xBC70|75-246-112-73
85168|code|EOR.W           R6, LR, R7|142-234-7-6
85172|code|MOVT.W          R9, #0xBEBF|203-246-191-105
85176|code|ADD             R6, R11|94-68
85178|code|ADD             R9, R4|161-68
85180|code|ADD             R9, R3|153-68
85182|code|EORS            R3, R7|123-64
85184|code|ADD.W           R6, R7, R6,ROR#21|7-235-118-86
85188|code|LDR             R0, [SP,#0x80+var_34]|19-152
85190|code|EORS            R3, R6|115-64
85192|code|MOVW            R8, #0x7EC6|71-246-198-104
85196|code|ADD.W           LR, R10, R3|10-235-3-14
85200|code|MOVT.W          R8, #0x289B|194-246-155-8
85204|code|ADD             R8, R0|128-68
85206|code|LDR             R0, [SP,#0x80+var_68]|6-152
85208|code|ADD.W           LR, R6, LR,ROR#16|6-235-62-78
85212|code|ADD             R8, R7|184-68
85214|code|EORS            R7, R6|119-64
85216|code|MOVW            R5, #0x27FA|66-242-250-117
85220|code|EOR.W           R12, R7, LR|135-234-14-12
85224|code|MOVT.W          R5, #0xEAA1|206-246-161-37
85228|code|ADD             R12, R9|204-68
85230|code|ADD             R5, R0|5-68
85232|code|ADD             R5, R6|53-68
85234|code|EOR.W           R6, LR, R6|142-234-6-6
85238|code|ADD.W           R12, LR, R12,ROR#9|14-235-124-44
85242|code|LDR             R0, [SP,#0x80+var_5C]|9-152
85244|code|EOR.W           R1, R6, R12|134-234-12-1
85248|code|MOVW            R11, #0x3085|67-242-133-11
85252|code|ADD             R1, R8|65-68
85254|code|MOVT.W          R11, #0xD4EF|205-242-239-75
85258|code|ADD             R11, R0|131-68
85260|code|LDR             R0, [SP,#0x80+var_50]|12-152
85262|code|ADD.W           R1, R12, R1,ROR#28|12-235-49-113
85266|code|ADD             R11, LR|243-68
85268|code|EOR.W           LR, R12, LR|140-234-14-14
85272|code|MOVW            R10, #0x1D05|65-246-5-90
85276|code|EOR.W           LR, LR, R1|142-234-1-14
85280|code|MOVT.W          R10, #0x488|192-242-136-74
85284|code|ADD             R5, LR|117-68
85286|code|ADD             R10, R0|130-68
85288|code|ADD             R10, R12|226-68
85290|code|EOR.W           R12, R1, R12|129-234-12-12
85294|code|ADD.W           R5, R1, R5,ROR#21|1-235-117-85
85298|code|LDR             R0, [SP,#0x80+var_44]|15-152
85300|code|EOR.W           R3, R12, R5|140-234-5-3
85304|code|MOVW            R9, #0xD039|77-242-57-9
85308|code|ADD             R3, R11|91-68
85310|code|MOVT.W          R9, #0xD9D4|205-246-212-25
85314|code|ADD             R9, R0|129-68
85316|code|LDR             R0, [SP,#0x80+var_38]|18-152
85318|code|ADD.W           R3, R5, R3,ROR#16|5-235-51-67
85322|code|ADD             R9, R1|137-68
85324|code|EORS            R1, R5|105-64
85326|code|MOVW            R8, #0x99E5|73-246-229-24
85330|code|EOR.W           R7, R1, R3|129-234-3-7
85334|code|MOVT.W          R8, #0xE6DB|206-242-219-104
85338|code|ADD             R7, R10|87-68
85340|code|ADD             R8, R0|128-68
85342|code|ADD             R8, R5|168-68
85344|code|EORS            R5, R3|93-64
85346|code|ADD.W           R7, R3, R7,ROR#9|3-235-119-39
85350|code|LDR             R0, [SP,#0x80+var_2C]|21-152
85352|code|EORS            R5, R7|125-64
85354|code|MOVW            LR, #0x7CF8|71-246-248-78
85358|code|ADD.W           R6, R9, R5|9-235-5-6
85362|code|MOVT.W          LR, #0x1FA2|193-246-162-126
85366|code|ADD             LR, R0|134-68
85368|code|LDR             R0, [SP,#0x80+var_60]|8-152
85370|code|ADD.W           R6, R7, R6,ROR#28|7-235-54-118
85374|code|ADD             LR, R3|158-68
85376|code|EORS            R3, R7|123-64
85378|code|MOVW            R11, #0x5665|69-242-101-107
85382|code|EORS            R3, R6|115-64
85384|code|MOVT.W          R11, #0xC4AC|204-242-172-75
85388|code|ADD             R8, R3|152-68
85390|code|ADD             R11, R0|131-68
85392|code|ADD             R11, R7|187-68
85394|code|EORS            R7, R6|119-64
85396|code|ADD.W           R8, R6, R8,ROR#21|6-235-120-88
85400|code|LDR             R0, [SP,#0x80+var_68]|6-152
85402|code|EOR.W           R12, R7, R8|135-234-8-12
85406|code|MOVW            R10, #0x2244|66-242-68-42
85410|code|ADD             R12, LR|244-68
85412|code|MOVT.W          R10, #0xF429|207-242-41-74
85416|code|ADD             R10, R0|130-68
85418|code|LDR             R0, [SP,#0x80+var_4C]|13-152
85420|code|ADD.W           R12, R8, R12,ROR#16|8-235-60-76
85424|code|ADD             R10, R6|178-68
85426|code|EOR.W           R6, R8, R6|136-234-6-6
85430|code|MOVW            R9, #0xFF97|79-246-151-121
85434|code|EOR.W           R1, R6, R12|134-234-12-1
85438|code|MOVT.W          R9, #0x432A|196-242-42-57
85442|code|ADD             R1, R11|89-68
85444|code|ADD             R9, R0|129-68
85446|code|ADD             R9, R8|193-68
85448|code|MOVW            R3, #0x23A7|66-242-167-51
85452|code|ADD.W           R1, R12, R1,ROR#9|12-235-113-33
85456|code|MOVT.W          R3, #0xAB94|202-246-148-51
85460|code|ORN.W           R8, R1, R8|97-234-8-8
85464|code|ADD             R3, R2|19-68
85466|code|EOR.W           R2, R8, R12|136-234-12-2
85470|code|ADD.W           LR, R3, R12|3-235-12-14
85474|code|ADD             R2, R10|82-68
85476|code|LDR             R0, [SP,#0x80+var_54]|11-152
85478|code|MOVW            R7, #0xA039|74-242-57-7
85482|code|MOVW            R6, #0x59C3|69-246-195-22
85486|code|ADD.W           R2, R1, R2,ROR#26|1-235-178-98
85490|code|MOVT.W          R7, #0xFC93|207-246-147-71
85494|code|ORN.W           R12, R2, R12|98-234-12-12
85498|code|ADD             R7, R0|7-68
85500|code|EOR.W           R5, R12, R1|140-234-1-5
85504|code|ADD             R7, R1|15-68
85506|code|ADD             R5, R9|77-68
85508|code|LDR             R0, [SP,#0x80+var_38]|18-152
85510|code|MOVT.W          R6, #0x655B|198-242-91-86
85514|code|MOVW            R11, #0xCC92|76-246-146-75
85518|code|ADD.W           R5, R2, R5,ROR#22|2-235-181-85
85522|code|ADD             R6, R0|6-68
85524|code|ORN.W           R1, R5, R1|101-234-1-1
85528|code|ADD             R6, R2|22-68
85530|code|EOR.W           R3, R1, R2|129-234-2-3
85534|code|LDR             R0, [SP,#0x80+var_5C]|9-152
85536|code|ADD             R3, LR|115-68
85538|code|MOVT.W          R11, #0x8F0C|200-246-12-123
85542|code|ADD             R11, R0|131-68
85544|code|SUB.W           R4, R4, #0x100000|164-245-128-20
85548|code|ADD.W           R3, R5, R3,ROR#17|5-235-115-67
85552|code|ADD             R11, R5|171-68
85554|code|ORN.W           R2, R3, R2|99-234-2-2
85558|code|SUBW            R4, R4, #0xB83|164-246-131-52
85562|code|EOR.W           R1, R2, R5|130-234-5-1
85566|code|ADD             R4, R3|28-68
85568|code|ADD             R1, R7|57-68
85570|code|LDR             R0, [SP,#0x80+var_64]|7-152
85572|code|MOVW            R10, #0x5DD1|69-246-209-90
85576|code|MOVW            R9, #0x7E4F|71-246-79-105
85580|code|ADD.W           R1, R3, R1,ROR#11|3-235-241-33
85584|code|MOVT.W          R10, #0x8584|200-242-132-90
85588|code|ORN.W           R5, R1, R5|97-234-5-5
85592|code|ADD             R10, R0|130-68
85594|code|EOR.W           R2, R5, R3|133-234-3-2
85598|code|ADD             R10, R1|138-68
85600|code|ADD             R2, R6|50-68
85602|code|LDR             R0, [SP,#0x80+var_48]|14-152
85604|code|MOVT.W          R9, #0x6FA8|198-246-168-121
85608|code|MOVW            R8, #0xE6E0|78-242-224-104
85612|code|ADD.W           R2, R1, R2,ROR#26|1-235-178-98
85616|code|ADD             R9, R0|129-68
85618|code|ORN.W           R3, R2, R3|98-234-3-3
85622|code|ADD             R9, R2|145-68
85624|code|EORS            R3, R1|75-64
85626|code|LDR             R0, [SP,#0x80+var_2C]|21-152
85628|code|ADD             R11, R3|155-68
85630|code|MOVT.W          R8, #0xFE2C|207-246-44-104
85634|code|ADD             R8, R0|128-68
85636|code|LDR             R0, [SP,#0x80+var_50]|12-152
85638|code|ADD.W           R11, R2, R11,ROR#22|2-235-187-91
85642|code|MOVW            R12, #0x4314|68-242-20-60
85646|code|ORN.W           R1, R11, R1|107-234-1-1
85650|code|ADD             R8, R11|216-68
85652|code|EORS            R1, R2|81-64
85654|code|MOVT.W          R12, #0xA301|202-242-1-60
85658|code|ADD             R1, R4|33-68
85660|code|ADD             R12, R0|132-68
85662|code|LDR             R0, [SP,#0x80+var_34]|19-152
85664|code|MOVW            LR, #0x11A1|65-242-161-30
85668|code|ADD.W           R1, R11, R1,ROR#17|11-235-113-65
85672|code|MOVT.W          LR, #0x4E08|196-246-8-110
85676|code|ORN.W           R2, R1, R2|97-234-2-2
85680|code|ADD             R12, R1|140-68
85682|code|EOR.W           R2, R2, R11|130-234-11-2
85686|code|ADD             LR, R0|134-68
85688|code|ADD             R2, R10|82-68
85690|code|LDR             R0, [SP,#0x80+var_58]|10-152
85692|code|MOVW            R7, #0x7E82|71-246-130-103
85696|code|MOVW            R6, #0xF235|79-242-53-38
85700|code|ADD.W           R2, R1, R2,ROR#11|1-235-242-34
85704|code|MOVT.W          R7, #0xF753|207-242-83-119
85708|code|ORN.W           R11, R2, R11|98-234-11-11
85712|code|ADD             LR, R2|150-68
85714|code|EOR.W           R11, R11, R1|139-234-1-11
85718|code|ADD             R7, R0|7-68
85720|code|ADD             R11, R9|203-68
85722|code|LDR             R0, [SP,#0x80+var_3C]|17-152
85724|code|MOVT.W          R6, #0xBD3A|203-246-58-86
85728|code|MOVW            R5, #0xD2BB|77-242-187-37
85732|code|ADD.W           R11, R2, R11,ROR#26|2-235-187-107
85736|code|ADD             R6, R0|6-68
85738|code|ORN.W           R1, R11, R1|107-234-1-1
85742|code|ADD             R7, R11|95-68
85744|code|EORS            R1, R2|81-64
85746|code|LDR             R0, [SP,#0x80+var_60]|8-152
85748|code|ADD             R1, R8|65-68
85750|code|MOVT.W          R5, #0x2AD7|194-246-215-37
85754|code|ADD             R5, R0|5-68
85756|code|LDR             R0, [SP,#0x80+var_44]|15-152
85758|code|ADD.W           R1, R11, R1,ROR#22|11-235-177-81
85762|code|MOVW            R3, #0xD391|77-242-145-51
85766|code|ORN.W           R2, R1, R2|97-234-2-2
85770|code|ADD             R6, R1|14-68
85772|code|EOR.W           R2, R2, R11|130-234-11-2
85776|code|MOVT.W          R3, #0xEB86|206-246-134-51
85780|code|ADD             R12, R2|148-68
85782|code|ADD             R3, R0|3-68
85784|code|LDR             R2, [SP,#0x80+var_70]|4-154
85786|code|ADD.W           R12, R1, R12,ROR#17|1-235-124-76
85790|code|LDR             R0, [SP,#0x80+var_6C]|5-152
85792|code|ORN.W           R11, R12, R11|108-234-11-11
85796|code|ADD             R5, R12|101-68
85798|code|EOR.W           R11, R11, R1|139-234-1-11
85802|code|LDR             R4, [SP,#0x80+var_78]|2-156
85804|code|ADD             LR, R11|222-68
85806|code|ADD.W           LR, R12, LR,ROR#11|12-235-254-46
85810|code|ORN.W           R1, LR, R1|110-234-1-1
85814|code|ADD             R3, LR|115-68
85816|code|EOR.W           R1, R1, R12|129-234-12-1
85820|code|ADD             R7, R1|15-68
85822|code|LDR             R1, [SP,#0x80+var_7C]|1-153
85824|code|ADD.W           R7, LR, R7,ROR#26|14-235-183-103
85828|code|ORN.W           R12, R7, R12|103-234-12-12
85832|code|ADDS            R2, R7, R2|186-24
85834|code|EOR.W           R12, R12, LR|140-234-14-12
85838|code|STR             R2, [R0]|2-96
85840|code|ADD             R6, R12|102-68
85842|code|LDR             R2, [SP,#0x80+var_74]|3-154
85844|code|ADD.W           R6, R7, R6,ROR#22|7-235-182-86
85848|code|ORN.W           LR, R6, LR|102-234-14-14
85852|code|ADDS            R2, R6, R2|178-24
85854|code|EOR.W           LR, LR, R7|142-234-7-14
85858|code|STR             R2, [R0,#0xC]|194-96
85860|code|ADD             R5, LR|117-68
85862|code|ADD.W           R5, R6, R5,ROR#17|6-235-117-69
85866|code|ORN.W           R7, R5, R7|101-234-7-7
85870|code|ADDS            R2, R5, R4|42-25
85872|code|EORS            R6, R7|126-64
85874|code|ADD             R5, R1|13-68
85876|code|ADD             R3, R6|51-68
85878|code|STR             R5, [R0,#8]|133-96
85880|code|ADD.W           R3, R2, R3,ROR#11|2-235-243-35
85884|code|STR             R3, [R0,#4]|67-96
85886|code|ADD             SP, SP, #0x5C ; '\'|23-176
85888|code|POP.W           {R4-R11,PC}|189-232-240-143
85892|code|PUSH            {R4}|16-180
85894|code|MOVW            R1, #0xAB89|74-246-137-49
85898|code|MOVW            R4, #0x2301|66-242-1-52
85902|code|MOVW            R2, #0xDCFE|77-246-254-66
85906|code|MOVW            R3, #0x5476|69-242-118-67
85910|code|MOVT.W          R4, #0x6745|198-242-69-116
85914|code|MOVT.W          R3, #0x1032|193-242-50-3
85918|code|MOVT.W          R1, #0xEFCD|206-246-205-113
85922|code|STR             R4, [R0]|4-96
85924|code|MOVT.W          R2, #0x98BA|201-246-186-2
85928|code|STR             R3, [R0,#0xC]|195-96
85930|code|MOVS            R3, #0|0-35
85932|code|STR             R1, [R0,#4]|65-96
85934|code|STR             R2, [R0,#8]|130-96
85936|code|STR             R3, [R0,#0x14]|67-97
85938|code|STR             R3, [R0,#0x10]|3-97
85940|code|POP.W           {R4}|93-248-4-75
85944|code|BX              LR|112-71
85946|data|ALIGN 4|0-191
85948|code|LDR             R3, [R0,#0x10]|3-105
85950|code|PUSH.W          {R4-R10,LR}|45-233-240-71
85954|code|MOV             R10, R0|130-70
85956|code|LSLS            R0, R2, #3|208-0
85958|code|MOV             R6, R2|22-70
85960|code|UBFX.W          R5, R3, #3, #6|195-243-197-5
85964|code|ADDS            R2, R0, R3|194-24
85966|code|LDR.W           R3, [R10,#0x14]|218-248-20-48
85970|code|CMP             R0, R2|144-66
85972|code|RSB.W           R8, R5, #0x40 ; '@'|197-241-64-8
85976|code|MOV             R7, R1|15-70
85978|code|IT HI|136-191
85980|code|ADDHI           R3, #1|1-51
85982|code|CMP             R6, R8|70-69
85984|code|ADD.W           R3, R3, R6,LSR#29|3-235-86-115
85988|code|STR.W           R2, [R10,#0x10]|202-248-16-32
85992|code|STR.W           R3, [R10,#0x14]|202-248-20-48
85996|code|BCS             loc_1500E|15-210
85998|code|ADD.W           R3, R5, #0x18|5-241-24-3
86002|code|MOVS            R5, #0|0-37
86004|code|ADD             R3, R10|83-68
86006|code|SUBS            R6, R6, R5|118-27
86008|code|BEQ             locret_1500A|7-208
86010|code|ADDS            R1, R7, R5|121-25
86012|code|ADD             R6, R3|30-68
86014|code|LDRB.W          R2, [R1],#1|17-248-1-43
86018|code|STRB.W          R2, [R3],#1|3-248-1-43
86022|code|CMP             R3, R6|179-66
86024|code|BNE             loc_14FFE|249-209
86026|code|POP.W           {R4-R10,PC}|189-232-240-135
86030|code|ADD.W           R1, R10, R5|10-235-5-1
86034|code|ADD.W           R9, R7, R8|7-235-8-9
86038|code|ADDS            R1, #0x17|23-49
86040|code|MOV             R2, R7|58-70
86042|code|LDRB.W          R3, [R2],#1|18-248-1-59
86046|code|CMP             R2, R9|74-69
86048|code|STRB.W          R3, [R1,#1]!|1-248-1-63
86052|code|BNE             loc_1501A|249-209
86054|code|ADD.W           R4, R10, #0x18|10-241-24-4
86058|code|MOV             R0, R10|80-70
86060|code|MOV             R1, R4|33-70
86062|code|BL              sub_147E4|255-247-217-251
86066|code|RSB.W           R3, R5, #0x7F|197-241-127-3
86070|code|CMP             R6, R3|158-66
86072|code|BLS             loc_15058|14-217
86074|code|MOV             R1, R9|73-70
86076|code|MOV             R0, R10|80-70
86078|code|BL              sub_147E4|255-247-209-251
86082|code|ADD.W           R3, R8, #0x7F|8-241-127-3
86086|code|ADD.W           R5, R8, #0x40 ; '@'|8-241-64-5
86090|code|CMP             R6, R3|158-66
86092|code|ADD.W           R9, R7, R5|7-235-5-9
86096|code|MOV             R8, R5|168-70
86098|code|BHI             loc_1503A|242-216
86100|code|MOV             R3, R4|35-70
86102|code|B               loc_14FF6|206-231
86104|code|MOV             R3, R4|35-70
86106|code|MOV             R5, R8|69-70
86108|code|B               loc_14FF6|203-231
86110|data|ALIGN 0x10|0-191
86112|code|PUSH            {R4,R5,LR}|48-181
86114|code|SUB             SP, SP, #0xC|131-176
86116|code|MOV             R4, R1|12-70
86118|code|MOV             R5, R0|5-70
86120|code|MOVS            R2, #8|8-34
86122|code|ADDS            R1, #0x10|16-49
86124|code|MOV             R0, SP|104-70
86126|code|BL              sub_147B0|255-247-159-251
86130|code|LDR             R2, [R4,#0x10]|34-105
86132|code|MOVW            R1, #0x8400|72-242-0-65
86136|code|MOV             R0, R4|32-70
86138|code|UBFX.W          R2, R2, #3, #6|194-243-197-2
86142|code|MOVT.W          R1, #2|192-242-2-1
86146|code|CMP             R2, #0x37 ; '7'|55-42
86148|code|ITE LS|148-191
86150|code|RSBLS.W         R2, R2, #0x38 ; '8'|194-241-56-2
86154|code|RSBHI.W         R2, R2, #0x78 ; 'x'|194-241-120-2
86158|code|BL              sub_14FBC|255-247-149-255
86162|code|MOV             R0, R4|32-70
86164|code|MOV             R1, SP|105-70
86166|code|MOVS            R2, #8|8-34
86168|code|BL              sub_14FBC|255-247-144-255
86172|code|MOV             R1, R4|33-70
86174|code|MOVS            R2, #0x10|16-34
86176|code|MOV             R0, R5|40-70
86178|code|BL              sub_147B0|255-247-133-251
86182|code|SUBS            R3, R4, #1|99-30
86184|code|ADD.W           R2, R4, #0x57 ; 'W'|4-241-87-2
86188|code|MOVS            R1, #0|0-33
86190|code|STRB.W          R1, [R3,#1]!|3-248-1-31
86194|code|CMP             R3, R2|147-66
86196|code|BNE             loc_150AE|251-209
86198|code|ADD             SP, SP, #0xC|3-176
86200|code|POP             {R4,R5,PC}|48-189
86202|data|ALIGN 4|0-191
86204|code|PUSH            {R4-R7,LR}|240-181
86206|code|SUB             SP, SP, #0x5C ; '\'|151-176
86208|code|MOV             R7, R0|7-70
86210|code|MOVW            R6, #0x2301|66-242-1-54
86214|code|MOV             R0, SP|104-70
86216|code|MOVW            R5, #0xAB89|74-246-137-53
86220|code|MOVW            R4, #0xDCFE|77-246-254-68
86224|code|MOVW            R3, #0x5476|69-242-118-67
86228|code|MOVT.W          R6, #0x6745|198-242-69-118
86232|code|MOVT.W          R5, #0xEFCD|206-246-205-117
86236|code|STR             R6, [SP]|0-150
86238|code|MOVT.W          R4, #0x98BA|201-246-186-4
86242|code|STR             R5, [SP,#4]|1-149
86244|code|MOVT.W          R3, #0x1032|193-242-50-3
86248|code|STR             R4, [SP,#8]|2-148
86250|code|STR             R3, [SP,#0xC]|3-147
86252|code|MOVS            R3, #0|0-35
86254|code|STR             R3, [SP,#0x14]|5-147
86256|code|STR             R3, [SP,#0x10]|4-147
86258|code|BL              sub_14FBC|255-247-99-255
86262|code|MOV             R0, R7|56-70
86264|code|MOV             R1, SP|105-70
86266|code|BL              sub_15060|255-247-177-255
86270|code|ADD             SP, SP, #0x5C ; '\'|23-176
86272|code|POP             {R4-R7,PC}|240-189
86274|data|ALIGN 4|0-191
86276|code|BX              LR|112-71
86278|data|ALIGN 4|0-191
86280|code|ADD.W           R0, R0, #0x1100|0-245-136-80
86284|code|LDR             R0, [R0]|0-104
86286|code|B.W             sub_13134|254-247-17-184
86290|data|ALIGN 4|0-191
86292|code|ADD.W           R3, R0, #0x1100|0-245-136-83
86296|code|PUSH            {R4,LR}|16-181
86298|code|MOV             R4, R0|4-70
86300|code|LDR             R0, [R3]|24-104
86302|code|BL              sub_13114|253-247-249-255
86306|code|LDR             R3, [R4]|35-104
86308|code|MOV             R0, R4|32-70
86310|code|POP.W           {R4,LR}|189-232-16-64
86314|code|LDR             R3, [R3,#0x10]|27-105
86316|code|BX              R3|24-71
86318|data|ALIGN 0x10|0-191
86320|code|PUSH.W          {R4-R8,LR}|45-233-240-65
86324|code|MOV             R6, R0|6-70
86326|code|SUB             SP, SP, #8|130-176
86328|code|MOVS            R0, #0; timer|0-32
86330|code|MOV             R4, R3|28-70
86332|code|MOV             R7, R2|23-70
86334|code|MOV             R8, R1|136-70
86336|code|BLX             time|252-247-136-239
86340|code|MOVW            R3, #0x110C|65-242-12-19
86344|code|MOV             R1, R8|65-70
86346|code|LDR             R3, [R6,R3]|243-88
86348|code|ADDS            R2, R0, R4|2-25
86350|code|MOV             R5, R0|5-70
86352|code|CMP             R2, R3|154-66
86354|code|MOV             R2, R7|58-70
86356|code|IT GT|200-191
86358|code|SUBGT           R4, R3, R0|28-26
86360|code|MOV             R0, R6|48-70
86362|code|BIC.W           R4, R4, R4,ASR#31|36-234-228-116
86366|code|MOV             R3, R4|35-70
86368|code|ADD             R4, R5|44-68
86370|code|BL              sub_1304C|253-247-115-255
86374|code|MOV             R6, R0|6-70
86376|code|MOVS            R0, #0; timer|0-32
86378|code|BLX             time|252-247-116-239
86382|code|CMP             R0, R4|160-66
86384|code|MOV             R3, R0|3-70
86386|code|BGE             loc_15184|7-218
86388|code|MOVS            R2, #0|0-34
86390|code|MOV             R0, SP; requested_time|104-70
86392|code|MOV             R1, R2; remaining|17-70
86394|code|SUBS            R4, R4, R3|228-26
86396|code|STR             R2, [SP,#0x20+var_1C]|1-146
86398|code|STR             R4, [SP,#0x20+var_20]|0-148
86400|code|BLX             nanosleep|252-247-210-237
86404|code|MOV             R0, R6|48-70
86406|code|ADD             SP, SP, #8|2-176
86408|code|POP.W           {R4-R8,PC}|189-232-240-129
86412|code|MOV             R3, #0x11E5C|65-246-92-99-192-242-1-3
86420|code|PUSH            {LR}|0-181
86422|code|CBZ             R3, loc_151BE|147-177
86424|code|ADD.W           R2, R0, #8|0-241-8-2
86428|code|DMB.W           SY|191-243-95-143
86432|code|LDREX.W         R3, [R2]|82-232-0-63
86436|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
86440|code|STREX.W         R12, LR, [R2]|66-232-0-236
86444|code|CMP.W           R12, #0|188-241-0-15
86448|code|BNE             loc_151A0|246-209
86450|code|CMP             R3, #0|0-43
86452|code|DMB.W           SY|191-243-95-143
86456|code|BLE             loc_151CA|7-221
86458|code|POP.W           {PC}|93-248-4-251
86462|code|LDR             R3, [R0,#8]|131-104
86464|code|CMP             R3, #0|0-43
86466|code|ADD.W           R2, R3, #0xFFFFFFFF|3-241-255-50
86470|code|STR             R2, [R0,#8]|130-96
86472|code|BGT             locret_151BA|247-220
86474|code|POP.W           {LR}|93-248-4-235
86478|code|B.W             j__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-237-189
86482|data|ALIGN 4|0-191
86484|code|PUSH.W          {R4-R11,LR}|45-233-240-79
86488|code|ADD.W           R8, R0, #0x2000|0-245-0-88
86492|code|ADD.W           R8, R8, #0x2C ; ','|8-241-44-8
86496|code|SUB             SP, SP, #0xC|131-176
86498|code|LDR.W           R3, [R8,#0x10]|216-248-16-48
86502|code|MOV             R5, R0|5-70
86504|code|CBNZ            R3, loc_15222|219-185
86506|code|MOVW            R3, #0x2030|66-242-48-3
86510|code|LDR             R0, [R0,R3]; void *|192-88
86512|code|CBZ             R0, loc_151F6|8-177
86514|code|BLX             _ZdlPv; operator delete(void *)|252-247-40-238
86518|code|ADD.W           R0, R5, #0x10|5-241-16-0
86522|code|BL              sub_13FC4|254-247-227-254
86526|code|LDR             R3, [R5,#0xC]|235-104
86528|code|MOV             R4, #0x28440|72-242-64-68-192-242-2-4
86536|code|SUB.W           R0, R3, #0xC|163-241-12-0
86540|code|CMP             R0, R4|160-66
86542|code|BNE             loc_152A6|74-209
86544|code|LDR             R3, [R5]|43-104
86546|code|SUB.W           R0, R3, #0xC|163-241-12-0
86550|code|CMP             R0, R4|160-66
86552|code|BNE             loc_15278|46-209
86554|code|MOV             R0, R5|40-70
86556|code|ADD             SP, SP, #0xC|3-176
86558|code|POP.W           {R4-R11,PC}|189-232-240-143
86562|code|MOVW            R2, #0x2030|66-242-48-2
86566|code|MOVW            R3, #0x2034|66-242-52-3
86570|code|LDR             R0, [R0,R2]|128-88
86572|code|LDR             R3, [R5,R3]|235-88
86574|code|SUBS            R3, R3, R0|27-26
86576|code|LSRS            R3, R3, #2|155-8
86578|code|BEQ             loc_15270|29-208
86580|code|ADD.W           R6, R5, #0x2000|5-245-0-86
86584|code|MOVS            R4, #0|0-36
86586|code|MOV             R10, R4|162-70
86588|code|MOV             R9, R6|177-70
86590|code|ADDS            R6, #0x30 ; '0'|48-54
86592|code|ADD.W           R9, R9, #0x34 ; '4'|9-241-52-9
86596|code|LDR.W           R0, [R0,R4,LSL#2]; void *|80-248-36-0
86600|code|MOV.W           R11, R4,LSL#2|79-234-132-11
86604|code|CBZ             R0, loc_1525A|40-177
86606|code|LDR             R7, [R0]|7-104
86608|code|BLX             _ZdlPv; operator delete(void *)|252-247-248-237
86612|code|MOV             R0, R7|56-70
86614|code|CMP             R7, #0|0-47
86616|code|BNE             loc_1524E|249-209
86618|code|LDR             R3, [R6]|51-104
86620|code|ADDS            R4, #1|1-52
86622|code|STR.W           R10, [R3,R11]|67-248-11-160
86626|code|LDR             R0, [R6]|48-104
86628|code|LDR.W           R3, [R9]|217-248-0-48
86632|code|SUBS            R3, R3, R0|27-26
86634|code|CMP.W           R4, R3,ASR#2|180-235-163-15
86638|code|BCC             loc_15244|233-211
86640|code|MOVS            R3, #0|0-35
86642|code|STR.W           R3, [R8,#0x10]|200-248-16-48
86646|code|B               loc_151F0|187-231
86648|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
86656|code|CBZ             R2, loc_152E0|114-179
86658|code|SUBS            R3, #4|4-59
86660|code|DMB.W           SY|191-243-95-143
86664|code|LDREX.W         R2, [R3]|83-232-0-47
86668|code|SUBS            R1, R2, #1|81-30
86670|code|STREX.W         R4, R1, [R3]|67-232-0-20
86674|code|CMP             R4, #0|0-44
86676|code|BNE             loc_15288|248-209
86678|code|DMB.W           SY|191-243-95-143
86682|code|CMP             R2, #0|0-42
86684|code|BGT             loc_1521A|189-220
86686|code|ADD             R1, SP, #0x30+var_2C|1-169
86688|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-134-237
86692|code|B               loc_1521A|185-231
86694|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
86702|code|CBZ             R2, loc_152D4|138-177
86704|code|SUBS            R3, #4|4-59
86706|code|DMB.W           SY|191-243-95-143
86710|code|LDREX.W         R2, [R3]|83-232-0-47
86714|code|SUBS            R1, R2, #1|81-30
86716|code|STREX.W         R6, R1, [R3]|67-232-0-22
86720|code|CMP             R6, #0|0-46
86722|code|BNE             loc_152B6|248-209
86724|code|DMB.W           SY|191-243-95-143
86728|code|CMP             R2, #0|0-42
86730|code|BGT             loc_15210|161-220
86732|code|ADD             R1, SP, #0x30+var_2C|1-169
86734|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-112-237
86738|code|B               loc_15210|157-231
86740|code|LDR.W           R2, [R3,#-4]|83-248-4-44
86744|code|SUBS            R1, R2, #1|81-30
86746|code|STR.W           R1, [R3,#-4]|67-248-4-28
86750|code|B               loc_152C8|243-231
86752|code|LDR.W           R2, [R3,#-4]|83-248-4-44
86756|code|SUBS            R1, R2, #1|81-30
86758|code|STR.W           R1, [R3,#-4]|67-248-4-28
86762|code|B               loc_1529A|214-231
86764|code|LDR             R0, [R5,#0xC]|232-104
86766|code|MOV             R4, #0x28440|72-242-64-68-192-242-2-4
86774|code|SUBS            R0, #0xC|12-56
86776|code|CMP             R0, R4|160-66
86778|code|BEQ             loc_15302|2-208
86780|code|ADD             R1, SP, #0x30+var_2C|1-169
86782|code|BL              sub_1518C|255-247-69-255
86786|code|LDR             R0, [R5]|40-104
86788|code|SUBS            R0, #0xC|12-56
86790|code|CMP             R0, R4|160-66
86792|code|BEQ             loc_15310|2-208
86794|code|ADD             R1, SP, #0x30+var_2C|1-169
86796|code|BL              sub_1518C|255-247-62-255
86800|code|BLX             __cxa_end_cleanup|252-247-200-237
86804|code|LDR             R3, [R0,#0xC]|195-104
86806|code|LDR             R2, =off_17708|41-74
86808|code|CMP             R3, #0|0-43
86810|code|PUSH            {R4,R5,LR}|48-181
86812|code|MOV             R4, R0|4-70
86814|code|SUB             SP, SP, #0xC|131-176
86816|code|STR             R2, [R0]|2-96
86818|code|BLE             loc_15346|16-221
86820|code|MOVW            R2, #0x1108|65-242-8-18
86824|code|MOVW            R3, #0x8440|72-242-64-67
86828|code|LDR             R2, [R4,R2]|162-88
86830|code|MOVT.W          R3, #2|192-242-2-3
86834|code|SUB.W           R0, R2, #0xC|162-241-12-0
86838|code|CMP             R0, R3|152-66
86840|code|BNE             loc_1535E|17-209
86842|code|MOV             R0, R4|32-70
86844|code|BL              sub_138CC|254-247-198-250
86848|code|MOV             R0, R4|32-70
86850|code|ADD             SP, SP, #0xC|3-176
86852|code|POP             {R4,R5,PC}|48-189
86854|code|MOVW            R3, #0x10F8|65-242-248-3
86858|code|LDR             R5, [R0,R3]|197-88
86860|code|CMP             R5, #0|0-45
86862|code|BEQ             loc_15324|233-208
86864|code|MOV             R0, R5|40-70
86866|code|BL              sub_151D4|255-247-63-255
86870|code|MOV             R0, R5; void *|40-70
86872|code|BLX             _ZdlPv; operator delete(void *)|252-247-116-237
86876|code|B               loc_15324|226-231
86878|code|MOV             R3, #0x11E5C|65-246-92-99-192-242-1-3
86886|code|CBZ             R3, loc_1538C|139-177
86888|code|SUBS            R2, #4|4-58
86890|code|DMB.W           SY|191-243-95-143
86894|code|LDREX.W         R3, [R2]|82-232-0-63
86898|code|SUBS            R1, R3, #1|89-30
86900|code|STREX.W         R5, R1, [R2]|66-232-0-21
86904|code|CMP             R5, #0|0-45
86906|code|BNE             loc_1536E|248-209
86908|code|DMB.W           SY|191-243-95-143
86912|code|CMP             R3, #0|0-43
86914|code|BGT             loc_1533A|218-220
86916|code|ADD             R1, SP, #0x18+var_14|1-169
86918|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-20-237
86922|code|B               loc_1533A|214-231
86924|code|LDR.W           R3, [R2,#-4]|82-248-4-60
86928|code|SUBS            R1, R3, #1|89-30
86930|code|STR.W           R1, [R2,#-4]|66-248-4-28
86934|code|B               loc_15380|243-231
86936|code|MOVW            R2, #0x1108|65-242-8-18
86940|code|MOVW            R3, #0x8440|72-242-64-67
86944|code|LDR             R0, [R4,R2]|160-88
86946|code|MOVT.W          R3, #2|192-242-2-3
86950|code|SUBS            R0, #0xC|12-56
86952|code|CMP             R0, R3|152-66
86954|code|BEQ             loc_153B2|2-208
86956|code|ADD             R1, SP, #0x18+var_14|1-169
86958|code|BL              sub_1518C|255-247-237-254
86962|code|MOV             R0, R4|32-70
86964|code|BL              sub_138CC|254-247-138-250
86968|code|BLX             __cxa_end_cleanup|252-247-116-237
86972|data|DCD off_17708|8-119-1-0
86976|code|PUSH            {R4,LR}|16-181
86978|code|MOV             R4, R0|4-70
86980|code|BL              sub_15314|255-247-166-255
86984|code|MOV             R0, R4; void *|32-70
86986|code|BLX             _ZdlPv; operator delete(void *)|252-247-60-237
86990|code|MOV             R0, R4|32-70
86992|code|POP             {R4,PC}|16-189
86994|data|ALIGN 4|0-191
86996|code|PUSH            {R3-R7,LR}|248-181
86998|code|MOV             R5, R0|5-70
87000|code|MOVS            R0, #0; timer|0-32
87002|code|MOV             R4, R1|12-70
87004|code|BLX             time|252-247-58-238
87008|code|LDR             R3, [R5,#0x28]|171-106
87010|code|SUBS            R0, R0, R3|192-26
87012|code|CMP             R0, R4|160-66
87014|code|BLT             locret_15410|19-219
87016|code|ADD.W           R7, R5, #0x2000|5-245-0-87
87020|code|ADD.W           R4, R5, #0x2B ; '+'|5-241-43-4
87024|code|ADDS            R7, #0x2B ; '+'|43-55
87026|code|LDR             R6, [R5,#4]|110-104
87028|code|BLX             random|252-247-10-238
87032|code|LDR             R1, [R5,#8]|169-104
87034|code|BLX             __aeabi_idivmod|252-247-138-237
87038|code|LDRB            R3, [R6,R1]|115-92
87040|code|STRB.W          R3, [R4,#1]!|4-248-1-63
87044|code|CMP             R4, R7|188-66
87046|code|BNE             loc_153F2|244-209
87048|code|MOVS            R0, #0; timer|0-32
87050|code|BLX             time|252-247-36-238
87054|code|STR             R0, [R5,#0x28]|168-98
87056|code|POP             {R3-R7,PC}|248-189
87058|data|ALIGN 4|0-191
87060|code|PUSH            {R3-R5,LR}|56-181
87062|code|MOVW            R3, #0x10F8|65-242-248-3
87066|code|MOV             R4, R0|4-70
87068|code|MOVS            R1, #5|5-33
87070|code|LDR             R0, [R0,R3]|192-88
87072|code|MOVW            R5, #0x110C|65-242-12-21
87076|code|BL              sub_153D4|255-247-214-255
87080|code|MOVS            R0, #0; timer|0-32
87082|code|BLX             time|252-247-20-238
87086|code|LDR             R3, [R4,R5]|99-89
87088|code|CMP             R0, R3|152-66
87090|code|BLT             loc_15444|7-219
87092|code|ADD.W           R3, R4, #0x1100|4-245-136-83
87096|code|LDR             R0, [R3]|24-104
87098|code|BL              sub_13288|253-247-37-255
87102|code|LDR             R3, [R4,R5]|99-89
87104|code|ADDS            R3, #0x3C ; '<'|60-51
87106|code|STR             R3, [R4,R5]|99-81
87108|code|MOVS            R0, #0|0-32
87110|code|POP             {R3-R5,PC}|56-189
87112|code|CMP             R2, #2|2-42
87114|code|PUSH            {R4-R6,LR}|112-181
87116|code|MOV             R4, R2|20-70
87118|code|MOV             R5, R1|13-70
87120|code|IT LE|216-191
87122|code|SUBLE           R4, R2, #2|148-30
87124|code|BLE             loc_15474|14-221
87126|code|MOV             R6, R0|6-70
87128|code|BLX             random|252-247-216-237
87132|code|RSB.W           R1, R4, #0x2000|196-245-0-81
87136|code|SUBS            R4, #2|2-60
87138|code|ADDS            R1, #2|2-49
87140|code|BLX             __aeabi_idivmod|252-247-84-237
87144|code|MOV             R0, R5; dest|40-70
87146|code|MOV             R2, R4; n|34-70
87148|code|ADD             R1, R6|49-68
87150|code|ADDS            R1, #0x2C ; ','; src|44-49
87152|code|BLX             memcpy|252-247-150-237
87156|code|MOVW            R3, #0x77EC|71-242-236-115
87160|code|ADDS            R2, R5, R4|42-25
87162|code|MOVT.W          R3, #1|192-242-1-3
87166|code|LDRH            R1, [R3]|25-136
87168|code|LDRB            R3, [R3,#(byte_177EE - 0x177EC)]|155-120
87170|code|STRH            R1, [R5,R4]|41-83
87172|code|STRB            R3, [R2,#2]|147-112
87174|code|POP             {R4-R6,PC}|112-189
87176|code|PUSH.W          {R4-R10,LR}|45-233-240-71
87180|code|MOV             R5, R2|21-70
87182|code|CBZ             R2, locret_154E0|58-179
87184|code|MOVW            R10, #0x3A55|67-246-85-42
87188|code|MOV             R7, R0|7-70
87190|code|MOV             R6, R1|14-70
87192|code|MOVT.W          R10, #0x67B2|198-242-178-122
87196|code|BLX             random|252-247-182-237
87200|code|MOV             R1, R6|49-70
87202|code|SMULL.W         R8, R9, R0, R10|128-251-10-137
87206|code|ASRS            R4, R0, #0x1F|196-23
87208|code|MOV             R3, R0|3-70
87210|code|MOV             R0, R7|56-70
87212|code|RSB.W           R4, R4, R9,ASR#5|196-235-105-20
87216|code|ADD.W           R2, R4, R4,LSL#2|4-235-132-2
87220|code|RSB.W           R4, R4, R2,LSL#4|196-235-2-20
87224|code|SUBS            R4, R3, R4|28-27
87226|code|CMP             R4, #2|2-44
87228|code|IT LT|184-191
87230|code|MOVLT           R4, #2|2-36
87232|code|RSB.W           R8, R4, R5|196-235-5-8
87236|code|CMP.W           R8, #1|184-241-1-15
87240|code|MOV             R2, R4|34-70
87242|code|BLE             loc_154D6|4-221
87244|code|BL              sub_15448|255-247-188-255
87248|code|ADD             R6, R4|38-68
87250|code|MOV             R5, R8|69-70
87252|code|B               loc_1549C|226-231
87254|code|MOV             R2, R5|42-70
87256|code|POP.W           {R4-R10,LR}|189-232-240-71
87260|code|B.W             sub_15448|255-247-180-191
87264|code|POP.W           {R4-R10,PC}|189-232-240-135
87268|code|PUSH            {R4-R7,LR}|240-181
87270|code|MOVS            R0, #0; timer|0-32
87272|code|SUB             SP, SP, #0x34|141-176
87274|code|MOV             R5, R1|13-70
87276|code|BLX             time|252-247-178-237
87280|code|MOV             R6, #0x1B4E81B5|72-242-181-22-193-246-78-54
87288|code|STR             R0, [SP,#0x48+var_48]|0-144
87290|code|BLX             random|252-247-136-237
87294|code|LDR             R4, [SP,#0x48+var_48]|0-156
87296|code|ADD             R1, SP, #0x48+tp; tp|1-169
87298|code|SMULL.W         R6, R7, R0, R6|128-251-6-103
87302|code|ASRS            R2, R0, #0x1F|194-23
87304|code|MOV             R3, R0|3-70
87306|code|ADD             R0, SP, #0x48+var_18|12-168
87308|code|RSB.W           R2, R2, R7,ASR#6|194-235-167-18
87312|code|ADD.W           R2, R2, R2,LSL#2|2-235-130-2
87316|code|RSB.W           R2, R2, R2,LSL#4|194-235-2-18
87320|code|SUB.W           R3, R3, R2,LSL#3|163-235-194-3
87324|code|RSB.W           R3, R3, #0x3C ; '<'|195-241-60-3
87328|code|ADD             R3, R4|35-68
87330|code|STR.W           R3, [R0,#-0x30]!; timer|64-248-48-61
87334|code|BLX             gmtime_r|252-247-116-236
87338|code|CBZ             R0, loc_15540|72-177
87340|code|MOVW            R2, #0x7750|71-242-80-114
87344|code|ADD             R3, SP, #0x48+tp; tp|1-171
87346|code|MOVT.W          R2, #1; format|192-242-1-2
87350|code|MOV             R0, R5; s|40-70
87352|code|MOVS            R1, #0x22 ; '"'; maxsize|34-33
87354|code|BLX             strftime|252-247-252-235
87358|code|CBNZ            R0, loc_15556|80-185
87360|code|MOV             R4, #0x1776C|71-242-108-116-192-242-1-4
87368|code|LDM             R4!, {R0-R3}; "Error making date"|15-204
87370|code|LDRH            R4, [R4]; "e"|36-136
87372|code|STR             R0, [R5]|40-96
87374|code|STR             R1, [R5,#4]|105-96
87376|code|STRH            R4, [R5,#0x10]|44-130
87378|code|STR             R2, [R5,#8]|170-96
87380|code|STR             R3, [R5,#0xC]|235-96
87382|code|ADD             SP, SP, #0x34 ; '4'|13-176
87384|code|POP             {R4-R7,PC}|240-189
87386|data|ALIGN 4|0-191
87388|code|PUSH            {R4-R6,LR}|112-181
87390|code|MOV             R6, R0|6-70
87392|code|SUB             SP, SP, #0x120|200-176
87394|code|MOV             R0, R2; s|16-70
87396|code|MOV             R4, R2|20-70
87398|code|MOV             R5, R3|29-70
87400|code|BLX             strlen|252-247-38-237
87404|code|CMP             R0, #0xDD|221-40
87406|code|ITT HI|132-191
87408|code|SUBHI           R0, #0xDD|221-56
87410|code|ADDHI           R4, R4, R0|36-24
87412|code|BHI             loc_1557E|3-216
87414|code|LDRB            R3, [R4]|35-120
87416|code|CMP             R3, #0x3C ; '<'|60-43
87418|code|IT EQ|8-191
87420|code|ADDEQ           R4, #1|1-52
87422|code|MOVS            R1, #0; tz|0-33
87424|code|ADD             R0, SP, #0x130+tv; tv|6-168
87426|code|BLX             gettimeofday|252-247-60-235
87430|code|LDR             R1, [SP,#0x130+tv.tv_usec]|7-153
87432|code|STR             R4, [SP,#0x130+var_128]|2-148
87434|code|UBFX.W          R5, R5, #0, #0xB|197-243-10-5
87438|code|STR             R5, [SP,#0x130+var_12C]|1-149
87440|code|MOVW            R2, #0x7780|71-242-128-114
87444|code|ASRS            R4, R1, #0x1F|204-23
87446|code|LDR             R3, [SP,#0x130+tv]|6-155
87448|code|ADD             R0, SP, #0x130+s; s|8-168
87450|code|MOVT.W          R2, #1; format|192-242-1-2
87454|code|LSRS            R5, R4, #0x15|101-13
87456|code|ADDS            R4, R1, R5|76-25
87458|code|MOV.W           R1, #0x100; maxlen|79-244-128-113
87462|code|UBFX.W          R4, R4, #0, #0xB|196-243-10-4
87466|code|SUBS            R4, R4, R5|100-27
87468|code|STR             R4, [SP,#0x130+var_130]|0-148
87470|code|BLX             snprintf|252-247-212-235
87474|code|MOV             R0, R6|48-70
87476|code|ADD             R1, SP, #0x130+s|8-169
87478|code|ADD             R2, SP, #0x130+var_11C|5-170
87480|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-134-236
87484|code|MOV             R0, R6|48-70
87486|code|ADD             SP, SP, #0x120|72-176
87488|code|POP             {R4-R6,PC}|112-189
87490|data|ALIGN 4|0-191
87492|code|PUSH.W          {R3-R11,LR}|45-233-248-79
87496|code|MOV             R5, R2|21-70
87498|code|MOVW            R11, #0x10E8|65-242-232-11
87502|code|MOV             R4, R0|4-70
87504|code|BL              sub_137FC|254-247-20-249
87508|code|LDR.W           R3, [R5,R11]|85-248-11-48
87512|code|ADD.W           R8, R5, #0x1100|5-245-136-88
87516|code|MOVW            LR, #0x10EC|65-242-236-14
87520|code|LDR.W           R12, =off_17708|223-248-108-192
87524|code|MOVW            R0, #0x10F0|65-242-240-0
87528|code|LDR.W           R10, [R8]|216-248-0-160
87532|code|MOVW            R7, #0x10F4|65-242-244-7
87536|code|STR.W           R3, [R4,R11]|68-248-11-48
87540|code|MOVW            R6, #0x10F8|65-242-248-6
87544|code|LDR.W           R3, [R5,LR]|85-248-14-48
87548|code|MOVW            R1, #0x10FC|65-242-252-1
87552|code|STR.W           R12, [R4]|196-248-0-192
87556|code|MOVW            R2, #0x1104|65-242-4-18
87560|code|ADD.W           R9, R4, #0x1100|4-245-136-89
87564|code|MOVW            R8, #0x1108|65-242-8-24
87568|code|STR.W           R3, [R4,LR]|68-248-14-48
87572|code|MOVW            R12, #0x110C|65-242-12-28
87576|code|LDR             R3, [R5,R0]|43-88
87578|code|MOV.W           LR, #0|79-240-0-14
87582|code|STR             R3, [R4,R0]|35-80
87584|code|MOV             R0, R4|32-70
87586|code|LDR             R3, [R5,R7]|235-89
87588|code|STR             R3, [R4,R7]|227-81
87590|code|LDR             R3, [R5,R6]|171-89
87592|code|LDR             R7, [R5,R2]|175-88
87594|code|STR             R3, [R4,R6]|163-81
87596|code|LDR             R3, [R5,R1]|107-88
87598|code|LDR             R6, =0x2844C|7-78
87600|code|STR             R3, [R4,R1]|99-80
87602|code|MOVW            R3, #0x1110|65-242-16-19
87606|code|LDRB            R5, [R5,R3]|237-92
87608|code|STR.W           R10, [R9]|201-248-0-160
87612|code|STR             R7, [R4,R2]|167-80
87614|code|STR.W           R6, [R4,R8]|68-248-8-96
87618|code|STR.W           LR, [R4,R12]|68-248-12-224
87622|code|STRB            R5, [R4,R3]|229-84
87624|code|POP.W           {R3-R11,PC}|189-232-248-143
87628|data|DCD 0x2844C|76-132-2-0
87632|data|DCD off_17708|8-119-1-0
87636|code|PUSH            {R4-R6,LR}|112-181
87638|code|MOV             R5, R0|5-70
87640|code|MOVW            R0, #0x1114; unsigned int|65-242-20-16
87644|code|MOV             R6, R1|14-70
87646|code|BLX             _Znwj; operator new(uint)|252-247-176-234
87650|code|MOV             R1, R6|49-70
87652|code|MOV             R2, R5|42-70
87654|code|MOV             R4, R0|4-70
87656|code|BL              sub_155C4|255-247-172-255
87660|code|MOV             R0, R4|32-70
87662|code|POP             {R4-R6,PC}|112-189
87664|code|MOV             R0, R4; void *|32-70
87666|code|BLX             _ZdlPv; operator delete(void *)|252-247-232-235
87670|code|BLX             __cxa_end_cleanup|252-247-22-236
87674|data|ALIGN 4|0-191
87676|code|PUSH            {R4,LR}|16-181
87678|code|MOV             R4, R0|4-70
87680|code|SUB.W           SP, SP, #0x400|173-245-128-109
87684|code|B               loc_156BC|26-224
87686|code|LDRB.W          R3, [SP,#0x408+var_408]|157-248-0-48
87690|code|SUBS            R3, #0x32 ; '2'|50-59
87692|code|CMP             R3, #1|1-43
87694|code|BHI             loc_156E0|39-216
87696|code|LDRB.W          R3, [R4,#0xAC]|148-248-172-48
87700|code|CBNZ            R3, loc_156B4|115-185
87702|code|BLX             strncmp|252-247-232-234
87706|code|MOV             R1, SP; s2|105-70
87708|code|MOVS            R2, #0xC; n|12-34
87710|code|CBZ             R0, loc_156AE|48-177
87712|code|MOV             R0, #a250Starttls_0; s1|71-242-188-112-192-242-1-0
87720|code|BLX             strncmp|252-247-222-234
87724|code|CBNZ            R0, loc_156B4|16-185
87726|code|MOVS            R3, #1|1-35
87728|code|STRB.W          R3, [R4,#0xAC]|132-248-172-48
87732|code|LDRB.W          R3, [SP,#0x408+var_405]|157-248-3-48
87736|code|CMP             R3, #0x2D ; '-'|45-43
87738|code|BNE             loc_1570A|38-209
87740|code|MOV             R1, SP|105-70
87742|code|MOV.W           R2, #0x400|79-244-128-98
87746|code|MOV             R0, R4|32-70
87748|code|BL              sub_13BAC|254-247-114-250
87752|code|MOV             R1, SP; s2|105-70
87754|code|MOVS            R2, #0xC; n|12-34
87756|code|SUBS            R3, R0, #0|3-30
87758|code|MOV             R0, #a250Starttls; s1|71-242-172-112-192-242-1-0
87766|code|BGE             loc_15686|214-218
87768|code|MOV             R0, R3|24-70
87770|code|ADD.W           SP, SP, #0x400|13-245-128-109
87774|code|POP             {R4,PC}|16-189
87776|code|MOVW            R3, #0x8488|72-242-136-67
87780|code|MOVW            R1, #0x7798|71-242-152-113
87784|code|MOVT.W          R3, #2|192-242-2-3
87788|code|MOV             R2, SP|106-70
87790|code|MOVT.W          R1, #1; format|192-242-1-1
87794|code|LDR             R0, [R3]; stream|24-104
87796|code|BLX             fprintf|252-247-108-236
87800|code|LDR             R3, [R4]|35-104
87802|code|MOV             R0, R4|32-70
87804|code|LDR             R3, [R3,#0x1C]|219-105
87806|code|BLX             R3|152-71
87808|code|MOV             R0, #0xFFFFFFFC|111-240-3-0
87812|code|ADD.W           SP, SP, #0x400|13-245-128-109
87816|code|POP             {R4,PC}|16-189
87818|code|MOVS            R0, #0|0-32
87820|code|ADD.W           SP, SP, #0x400|13-245-128-109
87824|code|POP             {R4,PC}|16-189
87826|data|ALIGN 4|0-191
87828|code|PUSH.W          {R4-R11,LR}|45-233-240-79
87832|code|MOVW            R5, #0x10F4|65-242-244-5
87836|code|MOVW            R6, #0x10F0|65-242-240-6
87840|code|LDR             R7, [R0,R5]|71-89
87842|code|LDR             R3, [R0,R6]|131-89
87844|code|SUB             SP, SP, #0xFC|191-176
87846|code|MOV             R4, R0|4-70
87848|code|CMP             R7, R3|159-66
87850|code|BGT             loc_15776|36-220
87852|code|ADD.W           R8, R4, #0x3C ; '<'|4-241-60-8
87856|code|MOV             R0, R8|64-70
87858|code|BL              sub_13F04|254-247-231-251
87862|code|LDR             R2, =0x2844C|198-74
87864|code|LDR.W           R3, [R4,#0x98]|212-248-152-48
87868|code|STR             R2, [SP,#0x120+var_114]|3-146
87870|code|MOV             R6, R3|30-70
87872|code|CBZ             R3, loc_15744|3-177
87874|code|LDRB            R6, [R3]|30-120
87876|code|MOV             R0, R4|32-70
87878|code|ADD.W           R1, SP, #0x120+var_115|13-241-11-1
87882|code|MOVS            R2, #1|1-34
87884|code|MOVS            R3, #0|0-35
87886|code|BL              sub_12FD8|253-247-67-252
87890|code|CMP             R0, #1|1-40
87892|code|ITTT NE|30-191
87894|code|MOVNEW          R5, #0x8440|72-242-64-69
87898|code|MOVNE           R4, #1|1-36
87900|code|MOVTNE.W        R5, #2|192-242-2-5
87904|code|BEQ             loc_15788|18-208
87906|code|LDR             R3, [SP,#0x120+var_114]|3-155
87908|code|SUB.W           R0, R3, #0xC|163-241-12-0
87912|code|CMP             R0, R5|168-66
87914|code|BNE.W           loc_158F8|64-240-197-128
87918|code|MOV             R0, R4|32-70
87920|code|ADD             SP, SP, #0xFC|63-176
87922|code|POP.W           {R4-R11,PC}; int|189-232-240-143
87926|code|BLX             random|252-247-74-236
87930|code|LDR             R7, [R4,R6]|167-89
87932|code|LDR             R1, [R4,R5]|97-89
87934|code|SUBS            R1, R1, R7|201-27
87936|code|BLX             __aeabi_idivmod|252-247-198-235
87940|code|ADD             R7, R1|15-68
87942|code|B               loc_1572C|209-231
87944|code|MOVW            R3, #0x10EC|65-242-236-3
87948|code|LDR             R0, [R4,R3]|224-88
87950|code|BL              sub_127A0|253-247-7-248
87954|code|MOV             R1, R0; std::string *|1-70
87956|code|ADD             R0, SP, #0x120+var_110; this|4-168
87958|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|252-247-188-234
87962|code|MOVW            R1, #0x77CC|71-242-204-113
87966|code|ADD             R0, SP, #0x120+var_108|6-168
87968|code|ADD             R2, SP, #0x120+var_8C|37-170
87970|code|MOVT.W          R1, #1|192-242-1-1
87974|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-144-235
87978|code|ADD             R1, SP, #0x120+var_108|6-169
87980|code|ADD             R2, SP, #0x120+var_110|4-170
87982|code|ADD             R0, SP, #0x120+var_104|7-168
87984|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|1-240-8-250
87988|code|ADD             R1, SP, #0x120+var_104; std::string *|7-169
87990|code|ADD             R0, SP, #0x120+var_10C; this|5-168
87992|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|252-247-170-234
87996|code|ADD             R0, SP, #0x120+var_10C; this|5-168
87998|code|MOVS            R1, #1; unsigned int|1-33
88000|code|MOVS            R2, #0x3E ; '>'; char|62-34
88002|code|BLX             _ZNSs6appendEjc; std::string::append(uint,char)|252-247-156-236
88006|code|LDR             R3, [SP,#0x120+var_104]|7-155
88008|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
88016|code|SUB.W           R0, R3, #0xC|163-241-12-0
88020|code|CMP             R0, R5|168-66
88022|code|BNE.W           loc_15B76|64-240-206-129
88026|code|LDR             R3, [SP,#0x120+var_108]|6-155
88028|code|SUB.W           R0, R3, #0xC|163-241-12-0
88032|code|CMP             R0, R5|168-66
88034|code|BNE.W           loc_15B04|64-240-143-129
88038|code|MOVW            R1, #0x77CC|71-242-204-113
88042|code|ADD             R2, SP, #0x120+var_8C|37-170
88044|code|MOVT.W          R1, #1|192-242-1-1
88048|code|ADD             R0, SP, #0x120+var_FC|9-168
88050|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-106-235
88054|code|MOVW            R3, #0x10E8|65-242-232-3
88058|code|LDR             R0, [R4,R3]|224-88
88060|code|BL              sub_127A0|252-247-208-255
88064|code|MOV             R2, R0|2-70
88066|code|ADD             R1, SP, #0x120+var_FC|9-169
88068|code|ADD             R0, SP, #0x120+var_F8|10-168
88070|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|1-240-221-249
88074|code|ADD             R1, SP, #0x120+var_F8; std::string *|10-169
88076|code|ADD             R0, SP, #0x120+var_100; this|8-168
88078|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|252-247-128-234
88082|code|ADD             R0, SP, #0x120+var_100; this|8-168
88084|code|MOVS            R1, #1; unsigned int|1-33
88086|code|MOVS            R2, #0x3E ; '>'; char|62-34
88088|code|BLX             _ZNSs6appendEjc; std::string::append(uint,char)|252-247-112-236
88092|code|LDR             R3, [SP,#0x120+var_F8]|10-155
88094|code|SUB.W           R0, R3, #0xC|163-241-12-0
88098|code|CMP             R0, R5|168-66
88100|code|BNE.W           loc_15BDE|64-240-219-129
88104|code|LDR             R3, [SP,#0x120+var_FC]|9-155
88106|code|SUB.W           R0, R3, #0xC|163-241-12-0
88110|code|CMP             R0, R5|168-66
88112|code|BNE.W           loc_15BAA|64-240-187-129
88116|code|LDR             R3, [R4]|35-104
88118|code|MOVW            R1, #0x77D0|71-242-208-113
88122|code|ADD             R2, SP, #0x120+var_8C|37-170
88124|code|ADD             R0, SP, #0x120+var_F4|11-168
88126|code|MOVT.W          R1, #1|192-242-1-1
88130|code|LDR.W           R9, [R3,#0x30]|211-248-48-144
88134|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-64-235
88138|code|ADD             R1, SP, #0x120+var_F4|11-169
88140|code|ADD             R2, SP, #0x120+var_10C|5-170
88142|code|ADD             R0, SP, #0x120+var_F0|12-168
88144|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|1-240-184-249
88148|code|ADD             R1, SP, #0x120+var_F0; std::string *|12-169
88150|code|ADD             R0, SP, #0x120+var_EC; this|13-168
88152|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|252-247-90-234
88156|code|MOVW            R1, #0x77EC|71-242-236-113
88160|code|ADD             R0, SP, #0x120+var_EC; this|13-168
88162|code|MOVS            R2, #2; unsigned int|2-34
88164|code|MOVT.W          R1, #1; char *|192-242-1-1
88168|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-34-235
88172|code|MOV             R0, R4|32-70
88174|code|ADD             R1, SP, #0x120+var_EC|13-169
88176|code|MOVS            R2, #1|1-34
88178|code|BLX             R9|200-71
88180|code|LDR             R2, [SP,#0x120+var_EC]|13-154
88182|code|MOV             R3, R0|3-70
88184|code|SUB.W           R0, R2, #0xC|162-241-12-0
88188|code|CMP             R0, R5|168-66
88190|code|BNE.W           loc_15AC8|64-240-35-129
88194|code|LDR             R2, [SP,#0x120+var_F0]|12-154
88196|code|SUB.W           R0, R2, #0xC|162-241-12-0
88200|code|CMP             R0, R5|168-66
88202|code|BNE.W           loc_15B3A|64-240-86-129
88206|code|LDR             R2, [SP,#0x120+var_F4]|11-154
88208|code|SUB.W           R0, R2, #0xC|162-241-12-0
88212|code|CMP             R0, R5|168-66
88214|code|BNE.W           loc_159C8|64-240-151-128
88218|code|CMP             R3, #0|0-43
88220|code|BEQ             loc_1592C|70-208
88222|code|MOV             R4, R3|28-70
88224|code|LDR             R3, [SP,#0x120+var_100]|8-155
88226|code|SUB.W           R0, R3, #0xC|163-241-12-0
88230|code|CMP             R0, R5|168-66
88232|code|BNE.W           loc_15A94|64-240-244-128
88236|code|LDR             R3, [SP,#0x120+var_10C]|5-155
88238|code|SUB.W           R0, R3, #0xC|163-241-12-0
88242|code|CMP             R0, R5|168-66
88244|code|BNE.W           loc_15A60|64-240-212-128
88248|code|LDR             R3, [SP,#0x120+var_110]|4-155
88250|code|SUB.W           R0, R3, #0xC|163-241-12-0
88254|code|CMP             R0, R5|168-66
88256|code|BEQ.W           loc_15762|63-244-79-175
88260|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
88268|code|CMP             R2, #0|0-42
88270|code|BEQ.W           loc_15C12|0-240-160-129
88274|code|SUBS            R3, #4|4-59
88276|code|DMB.W           SY|191-243-95-143
88280|code|LDREX.W         R2, [R3]|83-232-0-47
88284|code|SUBS            R1, R2, #1|81-30
88286|code|STREX.W         R6, R1, [R3]|67-232-0-22
88290|code|CMP             R6, #0|0-46
88292|code|BNE             loc_158D8|248-209
88294|code|DMB.W           SY|191-243-95-143
88298|code|CMP             R2, #0|0-42
88300|code|BGT.W           loc_15762|63-247-57-175
88304|code|ADD             R1, SP, #0x120+var_90|36-169
88306|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-94-234
88310|code|B               loc_15762|52-231
88312|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
88320|code|CMP             R2, #0|0-42
88322|code|BEQ.W           loc_15A54|0-240-167-128
88326|code|SUBS            R3, #4|4-59
88328|code|DMB.W           SY|191-243-95-143
88332|code|LDREX.W         R2, [R3]|83-232-0-47
88336|code|SUBS            R1, R2, #1|81-30
88338|code|STREX.W         R5, R1, [R3]|67-232-0-21
88342|code|CMP             R5, #0|0-45
88344|code|BNE             loc_1590C|248-209
88346|code|DMB.W           SY|191-243-95-143
88350|code|CMP             R2, #0|0-42
88352|code|BGT.W           loc_1576E|63-247-37-175
88356|code|ADD             R1, SP, #0x120+var_90|36-169
88358|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-68-234
88362|code|B               loc_1576E|32-231
88364|code|LDR             R3, [R4]|35-104
88366|code|MOVW            R1, #0x77DC|71-242-220-113
88370|code|ADD             R2, SP, #0x120+var_8C|37-170
88372|code|ADD             R0, SP, #0x120+var_E8|14-168
88374|code|MOVT.W          R1, #1|192-242-1-1
88378|code|LDR.W           R9, [R3,#0x30]|211-248-48-144
88382|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-196-234
88386|code|ADD             R1, SP, #0x120+var_E8|14-169
88388|code|ADD             R2, SP, #0x120+var_100|8-170
88390|code|ADD             R0, SP, #0x120+var_E4|15-168
88392|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|1-240-60-249
88396|code|ADD             R1, SP, #0x120+var_E4; std::string *|15-169
88398|code|ADD             R0, SP, #0x120+var_E0; this|16-168
88400|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|252-247-222-233
88404|code|MOVW            R1, #0x77EC|71-242-236-113
88408|code|ADD             R0, SP, #0x120+var_E0; this|16-168
88410|code|MOVS            R2, #2; unsigned int|2-34
88412|code|MOVT.W          R1, #1; char *|192-242-1-1
88416|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-166-234
88420|code|MOV             R0, R4|32-70
88422|code|ADD             R1, SP, #0x120+var_E0|16-169
88424|code|MOVS            R2, #1|1-34
88426|code|BLX             R9|200-71
88428|code|LDR             R2, [SP,#0x120+var_E0]|16-154
88430|code|MOV             R3, R0|3-70
88432|code|SUB.W           R0, R2, #0xC|162-241-12-0
88436|code|CMP             R0, R5|168-66
88438|code|BNE.W           loc_15CCC|64-240-169-129
88442|code|LDR             R2, [SP,#0x120+var_E4]|15-154
88444|code|SUB.W           R0, R2, #0xC|162-241-12-0
88448|code|CMP             R0, R5|168-66
88450|code|BNE.W           loc_15C90|64-240-133-129
88454|code|LDR             R2, [SP,#0x120+var_E8]|14-154
88456|code|SUB.W           R0, R2, #0xC|162-241-12-0
88460|code|CMP             R0, R5|168-66
88462|code|BNE             loc_15A0A|60-209
88464|code|CMP             R3, #0|0-43
88466|code|BNE             loc_1589E|132-209
88468|code|LDR             R3, [R4]|35-104
88470|code|MOVW            R1, #0x77E8|71-242-232-113
88474|code|ADD             R2, SP, #0x120+var_8C|37-170
88476|code|ADD             R0, SP, #0x120+var_DC|17-168
88478|code|MOVT.W          R1, #1|192-242-1-1
88482|code|LDR.W           R9, [R3,#0x30]|211-248-48-144
88486|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-144-234
88490|code|MOV             R0, R4|32-70
88492|code|ADD             R1, SP, #0x120+var_DC|17-169
88494|code|MOVS            R2, #1|1-34
88496|code|BLX             R9|200-71
88498|code|LDR             R3, [SP,#0x120+var_DC]|17-155
88500|code|MOV             R2, R0|2-70
88502|code|SUB.W           R0, R3, #0xC|163-241-12-0
88506|code|CMP             R0, R5|168-66
88508|code|BNE             loc_15A44|66-209
88510|code|CMP             R2, #0|0-42
88512|code|BEQ.W           loc_15D08|0-240-162-129
88516|code|MOV             R4, R2|20-70
88518|code|B               loc_158A0|107-231
88520|code|MOV             R1, #0x11E5C|65-246-92-97-192-242-1-1
88528|code|CMP             R1, #0|0-41
88530|code|BEQ.W           loc_15C6A|0-240-74-129
88534|code|SUBS            R2, #4|4-58
88536|code|DMB.W           SY|191-243-95-143
88540|code|LDREX.W         R1, [R2]|82-232-0-31
88544|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
88548|code|STREX.W         R12, LR, [R2]|66-232-0-236
88552|code|CMP.W           R12, #0|188-241-0-15
88556|code|BNE             loc_159DC|246-209
88558|code|DMB.W           SY|191-243-95-143
88562|code|CMP             R1, #0|0-41
88564|code|BGT.W           loc_1589A|63-247-81-175
88568|code|ADD             R1, SP, #0x120+s|46-169
88570|code|STR             R3, [SP,#0x120+var_11C]|1-147
88572|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-216-233
88576|code|LDR             R3, [SP,#0x120+var_11C]|1-155
88578|code|CMP             R3, #0|0-43
88580|code|BNE.W           loc_1589E|127-244-75-175
88584|code|B               loc_1592C|144-231
88586|code|MOV             R1, #0x11E5C|65-246-92-97-192-242-1-1
88594|code|CMP             R1, #0|0-41
88596|code|BEQ.W           loc_16026|0-240-7-131
88600|code|SUBS            R2, #4|4-58
88602|code|DMB.W           SY|191-243-95-143
88606|code|LDREX.W         R1, [R2]|82-232-0-31
88610|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
88614|code|STREX.W         R12, LR, [R2]|66-232-0-236
88618|code|CMP.W           R12, #0|188-241-0-15
88622|code|BNE             loc_15A1E|246-209
88624|code|DMB.W           SY|191-243-95-143
88628|code|CMP             R1, #0|0-41
88630|code|BGT             loc_15990|171-220
88632|code|ADD             R1, SP, #0x120+s|46-169
88634|code|STR             R3, [SP,#0x120+var_11C]|1-147
88636|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-184-233
88640|code|LDR             R3, [SP,#0x120+var_11C]|1-155
88642|code|B               loc_15990|165-231
88644|code|ADD             R1, SP, #0x120+s|46-169
88646|code|STR             R2, [SP,#0x120+var_11C]|1-146
88648|code|BL              sub_1518C|255-247-160-251
88652|code|LDR             R2, [SP,#0x120+var_11C]|1-154
88654|code|B               loc_159BE|182-231
88656|data|DCD 0x2844C|76-132-2-0
88660|code|LDR.W           R2, [R3,#-4]|83-248-4-44
88664|code|SUBS            R1, R2, #1|81-30
88666|code|STR.W           R1, [R3,#-4]|67-248-4-28
88670|code|B               loc_1591E|94-231
88672|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
88680|code|CMP             R2, #0|0-42
88682|code|BEQ.W           loc_15C78|0-240-5-129
88686|code|SUBS            R3, #4|4-59
88688|code|DMB.W           SY|191-243-95-143
88692|code|LDREX.W         R2, [R3]|83-232-0-47
88696|code|SUBS            R1, R2, #1|81-30
88698|code|STREX.W         R6, R1, [R3]|67-232-0-22
88702|code|CMP             R6, #0|0-46
88704|code|BNE             loc_15A74|248-209
88706|code|DMB.W           SY|191-243-95-143
88710|code|CMP             R2, #0|0-42
88712|code|BGT.W           loc_158B8|63-247-22-175
88716|code|ADD             R1, SP, #0x120+var_90|36-169
88718|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-144-233
88722|code|B               loc_158B8|17-231
88724|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
88732|code|CMP             R2, #0|0-42
88734|code|BEQ.W           loc_15C2A|0-240-196-128
88738|code|SUBS            R3, #4|4-59
88740|code|DMB.W           SY|191-243-95-143
88744|code|LDREX.W         R2, [R3]|83-232-0-47
88748|code|SUBS            R1, R2, #1|81-30
88750|code|STREX.W         R6, R1, [R3]|67-232-0-22
88754|code|CMP             R6, #0|0-46
88756|code|BNE             loc_15AA8|248-209
88758|code|DMB.W           SY|191-243-95-143
88762|code|CMP             R2, #0|0-42
88764|code|BGT.W           loc_158AC|63-247-246-174
88768|code|ADD             R1, SP, #0x120+var_90|36-169
88770|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-118-233
88774|code|B               loc_158AC|241-230
88776|code|MOV             R1, #0x11E5C|65-246-92-97-192-242-1-1
88784|code|CMP             R1, #0|0-41
88786|code|BEQ.W           loc_15C4E|0-240-188-128
88790|code|SUBS            R2, #4|4-58
88792|code|DMB.W           SY|191-243-95-143
88796|code|LDREX.W         R1, [R2]|82-232-0-31
88800|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
88804|code|STREX.W         R12, LR, [R2]|66-232-0-236
88808|code|CMP.W           R12, #0|188-241-0-15
88812|code|BNE             loc_15ADC|246-209
88814|code|DMB.W           SY|191-243-95-143
88818|code|CMP             R1, #0|0-41
88820|code|BGT.W           loc_15882|63-247-197-174
88824|code|ADD             R1, SP, #0x120+s|46-169
88826|code|STR             R3, [SP,#0x120+var_11C]|1-147
88828|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-88-233
88832|code|LDR             R3, [SP,#0x120+var_11C]|1-155
88834|code|B               loc_15882|190-230
88836|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
88844|code|CMP             R2, #0|0-42
88846|code|BEQ.W           loc_15C1E|0-240-134-128
88850|code|SUBS            R3, #4|4-59
88852|code|DMB.W           SY|191-243-95-143
88856|code|LDREX.W         R2, [R3]|83-232-0-47
88860|code|SUBS            R1, R2, #1|81-30
88862|code|STREX.W         LR, R1, [R3]|67-232-0-30
88866|code|CMP.W           LR, #0|190-241-0-15
88870|code|BNE             loc_15B18|247-209
88872|code|DMB.W           SY|191-243-95-143
88876|code|CMP             R2, #0|0-42
88878|code|BGT.W           loc_157E6|63-247-90-174
88882|code|ADD             R1, SP, #0x120+s|46-169
88884|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-60-233
88888|code|B               loc_157E6|85-230
88890|code|MOV             R1, #0x11E5C|65-246-92-97-192-242-1-1
88898|code|CMP             R1, #0|0-41
88900|code|BEQ.W           loc_15C5C|0-240-138-128
88904|code|SUBS            R2, #4|4-58
88906|code|DMB.W           SY|191-243-95-143
88910|code|LDREX.W         R1, [R2]|82-232-0-31
88914|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
88918|code|STREX.W         R12, LR, [R2]|66-232-0-236
88922|code|CMP.W           R12, #0|188-241-0-15
88926|code|BNE             loc_15B4E|246-209
88928|code|DMB.W           SY|191-243-95-143
88932|code|CMP             R1, #0|0-41
88934|code|BGT.W           loc_1588E|63-247-146-174
88938|code|ADD             R1, SP, #0x120+s|46-169
88940|code|STR             R3, [SP,#0x120+var_11C]|1-147
88942|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-32-233
88946|code|LDR             R3, [SP,#0x120+var_11C]|1-155
88948|code|B               loc_1588E|139-230
88950|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
88958|code|CMP             R2, #0|0-42
88960|code|BEQ             loc_15C36|89-208
88962|code|SUBS            R3, #4|4-59
88964|code|DMB.W           SY|191-243-95-143
88968|code|LDREX.W         R2, [R3]|83-232-0-47
88972|code|SUBS            R1, R2, #1|81-30
88974|code|STREX.W         LR, R1, [R3]|67-232-0-30
88978|code|CMP.W           LR, #0|190-241-0-15
88982|code|BNE             loc_15B88|247-209
88984|code|DMB.W           SY|191-243-95-143
88988|code|CMP             R2, #0|0-42
88990|code|BGT.W           loc_157DA|63-247-28-174
88994|code|ADD             R1, SP, #0x120+s|46-169
88996|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-4-233
89000|code|B               loc_157DA|23-230
89002|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
89010|code|CMP             R2, #0|0-42
89012|code|BEQ             loc_15C42|69-208
89014|code|SUBS            R3, #4|4-59
89016|code|DMB.W           SY|191-243-95-143
89020|code|LDREX.W         R2, [R3]|83-232-0-47
89024|code|SUBS            R1, R2, #1|81-30
89026|code|STREX.W         LR, R1, [R3]|67-232-0-30
89030|code|CMP.W           LR, #0|190-241-0-15
89034|code|BNE             loc_15BBC|247-209
89036|code|DMB.W           SY|191-243-95-143
89040|code|CMP             R2, #0|0-42
89042|code|BGT.W           loc_15834|63-247-47-174
89046|code|ADD             R1, SP, #0x120+s|46-169
89048|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-234-232
89052|code|B               loc_15834|42-230
89054|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
89062|code|CMP             R2, #0|0-42
89064|code|BEQ             loc_15C84|76-208
89066|code|SUBS            R3, #4|4-59
89068|code|DMB.W           SY|191-243-95-143
89072|code|LDREX.W         R2, [R3]|83-232-0-47
89076|code|SUBS            R1, R2, #1|81-30
89078|code|STREX.W         LR, R1, [R3]|67-232-0-30
89082|code|CMP.W           LR, #0|190-241-0-15
89086|code|BNE             loc_15BF0|247-209
89088|code|DMB.W           SY|191-243-95-143
89092|code|CMP             R2, #0|0-42
89094|code|BGT.W           loc_15828|63-247-15-174
89098|code|ADD             R1, SP, #0x120+s|46-169
89100|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-208-232
89104|code|B               loc_15828|10-230
89106|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89110|code|SUBS            R1, R2, #1|81-30
89112|code|STR.W           R1, [R3,#-4]|67-248-4-28
89116|code|B               loc_158EA|101-230
89118|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89122|code|SUBS            R1, R2, #1|81-30
89124|code|STR.W           R1, [R3,#-4]|67-248-4-28
89128|code|B               loc_15B2C|128-231
89130|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89134|code|SUBS            R1, R2, #1|81-30
89136|code|STR.W           R1, [R3,#-4]|67-248-4-28
89140|code|B               loc_15ABA|65-231
89142|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89146|code|SUBS            R1, R2, #1|81-30
89148|code|STR.W           R1, [R3,#-4]|67-248-4-28
89152|code|B               loc_15B9C|172-231
89154|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89158|code|SUBS            R1, R2, #1|81-30
89160|code|STR.W           R1, [R3,#-4]|67-248-4-28
89164|code|B               loc_15BD0|192-231
89166|code|LDR.W           R1, [R2,#-4]|82-248-4-28
89170|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
89174|code|STR.W           LR, [R2,#-4]|66-248-4-236
89178|code|B               loc_15AF2|74-231
89180|code|LDR.W           R1, [R2,#-4]|82-248-4-28
89184|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
89188|code|STR.W           LR, [R2,#-4]|66-248-4-236
89192|code|B               loc_15B64|124-231
89194|code|LDR.W           R1, [R2,#-4]|82-248-4-28
89198|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
89202|code|STR.W           LR, [R2,#-4]|66-248-4-236
89206|code|B               loc_159F2|188-230
89208|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89212|code|SUBS            R1, R2, #1|81-30
89214|code|STR.W           R1, [R3,#-4]|67-248-4-28
89218|code|B               loc_15A86|0-231
89220|code|LDR.W           R2, [R3,#-4]|83-248-4-44
89224|code|SUBS            R1, R2, #1|81-30
89226|code|STR.W           R1, [R3,#-4]|67-248-4-28
89230|code|B               loc_15C04|185-231
89232|code|MOV             R1, #0x11E5C|65-246-92-97-192-242-1-1
89240|code|CMP             R1, #0|0-41
89242|code|BEQ.W           loc_16034|0-240-203-129
89246|code|SUBS            R2, #4|4-58
89248|code|DMB.W           SY|191-243-95-143
89252|code|LDREX.W         R1, [R2]|82-232-0-31
89256|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
89260|code|STREX.W         R12, LR, [R2]|66-232-0-236
89264|code|CMP.W           R12, #0|188-241-0-15
89268|code|BNE             loc_15CA4|246-209
89270|code|DMB.W           SY|191-243-95-143
89274|code|CMP             R1, #0|0-41
89276|code|BGT.W           loc_15986|63-247-99-174
89280|code|ADD             R1, SP, #0x120+s|46-169
89282|code|STR             R3, [SP,#0x120+var_11C]|1-147
89284|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-116-232
89288|code|LDR             R3, [SP,#0x120+var_11C]|1-155
89290|code|B               loc_15986|92-230
89292|code|MOV             R1, #0x11E5C|65-246-92-97-192-242-1-1
89300|code|CMP             R1, #0|0-41
89302|code|BEQ.W           loc_16042|0-240-180-129
89306|code|SUBS            R2, #4|4-58
89308|code|DMB.W           SY|191-243-95-143
89312|code|LDREX.W         R1, [R2]|82-232-0-31
89316|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
89320|code|STREX.W         R12, LR, [R2]|66-232-0-236
89324|code|CMP.W           R12, #0|188-241-0-15
89328|code|BNE             loc_15CE0|246-209
89330|code|DMB.W           SY|191-243-95-143
89334|code|CMP             R1, #0|0-41
89336|code|BGT.W           loc_1597A|63-247-63-174
89340|code|ADD             R1, SP, #0x120+s|46-169
89342|code|STR             R3, [SP,#0x120+var_11C]|1-147
89344|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|252-247-86-232
89348|code|LDR             R3, [SP,#0x120+var_11C]|1-155
89350|code|B               loc_1597A|56-230
89352|code|MOVW            R1, #0x77F0|71-242-240-113
89356|code|ADD             R0, SP, #0x120+var_D8|18-168
89358|code|ADD             R2, SP, #0x120+s|46-170
89360|code|MOVT.W          R1, #1|192-242-1-1
89364|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-216-232
89368|code|MOVW            R3, #0x1104|65-242-4-19
89372|code|LDR             R3, [R4,R3]|227-88
89374|code|CMP             R3, #0|0-43
89376|code|BEQ.W           loc_16050|0-240-150-129
89380|code|CMP             R3, #1|1-43
89382|code|BEQ.W           loc_160C2|0-240-204-129
89386|code|BLX             random|252-247-112-233
89390|code|MOV             R10, #0x8D3DCB09|76-246-9-58-200-246-61-90
89398|code|MOVW            R2, #0x10F8|65-242-248-2
89402|code|ADD             R1, SP, #0x120+s|46-169
89404|code|MOV             R3, R0|3-70
89406|code|LDR             R0, [R4,R2]|160-88
89408|code|UMULL.W         R10, R11, R3, R10|163-251-10-171
89412|code|MOV.W           R2, R11,LSR#5|79-234-91-18
89416|code|RSB.W           LR, R2, R2,LSL#3|194-235-194-14
89420|code|ADD.W           R2, R2, LR,LSL#2|2-235-142-2
89424|code|SUB.W           R3, R3, R2,LSL#1|163-235-66-3
89428|code|ADD.W           R9, R3, #2|3-241-2-9
89432|code|MOV             R2, R9|74-70
89434|code|BL              sub_15448|255-247-117-251
89438|code|ADD             R3, SP, #0x120+var_28|62-171
89440|code|ADD             R9, R3|153-68
89442|code|ADD             R0, SP, #0x120+s; s|46-168
89444|code|MOVS            R3, #0|0-35
89446|code|STRB.W          R3, [R9,#-0x40]|9-248-64-60
89450|code|BLX             strlen|252-247-38-233
89454|code|ADD             R1, SP, #0x120+s; char *|46-169
89456|code|MOV             R2, R0; unsigned int|2-70
89458|code|ADD             R0, SP, #0x120+var_D8; this|18-168
89460|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-156-232
89464|code|MOVW            R9, #0x10F8|65-242-248-9
89468|code|ADD             R1, SP, #0x120+var_8C|37-169
89470|code|LDR.W           R0, [R4,R9]|84-248-9-0
89474|code|BL              sub_154E4|255-247-175-251
89478|code|LDR.W           R1, [R4,R9]|84-248-9-16
89482|code|ADD             R0, SP, #0x120+var_D4|19-168
89484|code|LDR             R2, [SP,#0x120+var_10C]|5-154
89486|code|LDR             R3, [R4,#0xC]|227-104
89488|code|BL              sub_1555C|255-247-228-251
89492|code|MOVW            R1, #0x7800|71-246-0-1
89496|code|ADD             R0, SP, #0x120+var_CC|21-168
89498|code|ADD             R2, SP, #0x120+var_94|35-170
89500|code|MOVT.W          R1, #1|192-242-1-1
89504|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|252-247-146-232
89508|code|ADD             R1, SP, #0x120+var_CC|21-169
89510|code|ADD             R2, SP, #0x120+var_10C|5-170
89512|code|ADD             R0, SP, #0x120+var_C8|22-168
89514|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-11-255
89518|code|ADD             R1, SP, #0x120+var_C8; std::string *|22-169
89520|code|ADD             R0, SP, #0x120+var_C4; this|23-168
89522|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-174-239
89526|code|MOVW            R1, #0x7808|71-246-8-1
89530|code|ADD             R0, SP, #0x120+var_C4; this|23-168
89532|code|MOVS            R2, #6; unsigned int|6-34
89534|code|MOVT.W          R1, #1; char *|192-242-1-1
89538|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-118-232
89542|code|ADD             R1, SP, #0x120+var_C4|23-169
89544|code|ADD             R2, SP, #0x120+var_100|8-170
89546|code|ADD             R0, SP, #0x120+var_C0|24-168
89548|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-250-254
89552|code|ADD             R1, SP, #0x120+var_C0; std::string *|24-169
89554|code|ADD             R0, SP, #0x120+var_BC; this|25-168
89556|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-156-239
89560|code|MOVW            R1, #0x77EC|71-242-236-113
89564|code|ADD             R0, SP, #0x120+var_BC; this|25-168
89566|code|MOVS            R2, #2; unsigned int|2-34
89568|code|MOVT.W          R1, #1; char *|192-242-1-1
89572|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-100-232
89576|code|ADD             R1, SP, #0x120+var_BC|25-169
89578|code|ADD             R2, SP, #0x120+var_D8|18-170
89580|code|ADD             R0, SP, #0x120+var_B8|26-168
89582|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-233-254
89586|code|ADD             R1, SP, #0x120+var_B8; std::string *|26-169
89588|code|ADD             R0, SP, #0x120+var_B4; this|27-168
89590|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-140-239
89594|code|MOVW            R1, #0x7810|71-246-16-1
89598|code|ADD             R0, SP, #0x120+var_B4; this|27-168
89600|code|MOVS            R2, #6; unsigned int|6-34
89602|code|MOVT.W          R1, #1; char *|192-242-1-1
89606|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-84-232
89610|code|ADD             R1, SP, #0x120+var_B4; std::string *|27-169
89612|code|ADD             R0, SP, #0x120+var_B0; this|28-168
89614|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-128-239
89618|code|ADD             R0, SP, #0x120+var_8C; s|37-168
89620|code|BLX             strlen|252-247-208-232
89624|code|ADD             R1, SP, #0x120+var_8C; char *|37-169
89626|code|MOV             R2, R0; unsigned int|2-70
89628|code|ADD             R0, SP, #0x120+var_B0; this|28-168
89630|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-72-232
89634|code|ADD             R1, SP, #0x120+var_B0; std::string *|28-169
89636|code|ADD             R0, SP, #0x120+var_AC; this|29-168
89638|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-116-239
89642|code|MOVW            R1, #0x7818|71-246-24-1
89646|code|ADD             R0, SP, #0x120+var_AC; this|29-168
89648|code|MOVT.W          R1, #1; char *|192-242-1-1
89652|code|MOVS            R2, #0xC; unsigned int|12-34
89654|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|252-247-60-232
89658|code|ADD             R2, SP, #0x120+var_D4|19-170
89660|code|ADD             R1, SP, #0x120+var_AC|29-169
89662|code|ADD             R0, SP, #0x120+var_D0|20-168
89664|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-192-254
89668|code|LDR             R0, [SP,#0x120+var_AC]|29-152
89670|code|SUBS            R0, #0xC|12-56
89672|code|CMP             R0, R5|168-66
89674|code|BNE.W           loc_160BA|64-240-54-129
89678|code|LDR             R0, [SP,#0x120+var_B0]|28-152
89680|code|SUBS            R0, #0xC|12-56
89682|code|CMP             R0, R5|168-66
89684|code|BNE.W           loc_160B2|64-240-45-129
89688|code|LDR             R0, [SP,#0x120+var_B4]|27-152
89690|code|SUBS            R0, #0xC|12-56
89692|code|CMP             R0, R5|168-66
89694|code|BNE.W           loc_160AA|64-240-36-129
89698|code|LDR             R0, [SP,#0x120+var_B8]|26-152
89700|code|SUBS            R0, #0xC|12-56
89702|code|CMP             R0, R5|168-66
89704|code|BNE.W           loc_160A2|64-240-27-129
89708|code|LDR             R0, [SP,#0x120+var_BC]|25-152
89710|code|SUBS            R0, #0xC|12-56
89712|code|CMP             R0, R5|168-66
89714|code|BNE.W           loc_1609A|64-240-18-129
89718|code|LDR             R0, [SP,#0x120+var_C0]|24-152
89720|code|SUBS            R0, #0xC|12-56
89722|code|CMP             R0, R5|168-66
89724|code|BNE.W           loc_16092|64-240-9-129
89728|code|LDR             R0, [SP,#0x120+var_C4]|23-152
89730|code|SUBS            R0, #0xC|12-56
89732|code|CMP             R0, R5|168-66
89734|code|BNE.W           loc_1608A|64-240-0-129
89738|code|LDR             R0, [SP,#0x120+var_C8]|22-152
89740|code|SUBS            R0, #0xC|12-56
89742|code|CMP             R0, R5|168-66
89744|code|BNE.W           loc_16082|64-240-247-128
89748|code|LDR             R0, [SP,#0x120+var_CC]|21-152
89750|code|SUBS            R0, #0xC|12-56
89752|code|CMP             R0, R5|168-66
89754|code|BNE.W           loc_1607A|64-240-238-128
89758|code|MOV             R0, R8|64-70
89760|code|ADD             R1, SP, #0x120+var_D0|20-169
89762|code|BL              sub_13F54|254-247-87-248
89766|code|ADDS            R0, R7, #1; size|120-28
89768|code|BLX             malloc|252-247-128-232
89772|code|MOVW            R3, #0x10F8|65-242-248-3
89776|code|MOV             R2, R7|58-70
89778|code|MOV             R1, R0|1-70
89780|code|MOV             R9, R0|129-70
89782|code|LDR             R0, [R4,R3]|224-88
89784|code|BL              sub_15488|255-247-230-250
89788|code|MOV             R0, R8|64-70
89790|code|MOV             R1, R9|73-70
89792|code|MOV             R2, R7|58-70
89794|code|BL              sub_13F50|254-247-69-248
89798|code|MOV             R1, R8|65-70
89800|code|ADD             R0, SP, #0x120+var_A8|30-168
89802|code|BL              sub_13F14|254-247-35-248
89806|code|MOVW            R1, #0x7828|71-246-40-1
89810|code|ADD             R2, SP, #0x120+var_A8; int|30-170
89812|code|MOVT.W          R1, #1; s|192-242-1-1
89816|code|ADD             R0, SP, #0x120+var_A4; int|31-168
89818|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(char const*,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-171-254
89822|code|MOVW            R3, #0x10F8|65-242-248-3
89826|code|ADD             R1, SP, #0x120+var_A4|31-169
89828|code|LDR             R2, [R4,R3]|226-88
89830|code|ADD             R0, SP, #0x120+var_A0|32-168
89832|code|ADDS            R2, #0xC|12-50
89834|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-107-254
89838|code|ADD             R0, SP, #0x120+var_D0; this|20-168
89840|code|ADD             R1, SP, #0x120+var_A0; std::string *|32-169
89842|code|BLX             _ZNSs6appendERKSs; std::string::append(std::string const&)|251-247-204-239
89846|code|LDR             R0, [SP,#0x120+var_A0]|32-152
89848|code|SUBS            R0, #0xC|12-56
89850|code|CMP             R0, R5|168-66
89852|code|BNE.W           loc_16072|64-240-185-128
89856|code|LDR             R0, [SP,#0x120+var_A4]|31-152
89858|code|SUBS            R0, #0xC|12-56
89860|code|CMP             R0, R5|168-66
89862|code|BNE.W           loc_1606A|64-240-176-128
89866|code|LDR             R1, [SP,#0x120+var_D0]|20-153
89868|code|MOV             R0, R4|32-70
89870|code|LDR.W           R2, [R1,#-0xC]|81-248-12-44
89874|code|BL              sub_13B8C|253-247-59-254
89878|code|MOV             R3, R0|3-70
89880|code|CMP             R0, #0|0-40
89882|code|BNE.W           loc_16060|64-240-161-128
89886|code|CBZ             R6, loc_15F28|30-177
89888|code|ADD             R0, SP, #0x120+var_114; this|3-168
89890|code|ADD             R1, SP, #0x120+var_D0; std::string *|20-169
89892|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|251-247-226-239
89896|code|MOV             R2, R7|58-70
89898|code|MOV             R0, R4|32-70
89900|code|MOV             R1, R9|73-70
89902|code|BL              sub_13B8C|253-247-45-254
89906|code|CBNZ            R0, loc_15F60|168-185
89908|code|CBZ             R6, loc_15F3E|30-177
89910|code|ADD             R0, SP, #0x120+var_114; this|3-168
89912|code|MOV             R1, R9; char *|73-70
89914|code|BLX             _ZNSs6appendEPKc; std::string::append(char const*)|252-247-164-232
89918|code|MOV             R0, R9; ptr|72-70
89920|code|BLX             free|251-247-122-238
89924|code|MOVW            R1, #0x7838|71-246-56-1
89928|code|ADD             R0, SP, #0x120+var_D0; this|20-168
89930|code|MOVT.W          R1, #1; char *|192-242-1-1
89934|code|BLX             _ZNSs6assignEPKc; std::string::assign(char const*)|252-247-10-232
89938|code|LDR             R3, [R4]|35-104
89940|code|MOV             R0, R4|32-70
89942|code|ADD             R1, SP, #0x120+var_D0|20-169
89944|code|MOVS            R2, #1|1-34
89946|code|LDR             R3, [R3,#0x30]|27-107
89948|code|BLX             R3|152-71
89950|code|CBZ             R0, loc_15F92|192-177
89952|code|MOV             R4, R0|4-70
89954|code|LDR             R0, [SP,#0x120+var_A8]|30-152
89956|code|SUBS            R0, #0xC|12-56
89958|code|CMP             R0, R5|168-66
89960|code|BNE.W           loc_160E2|64-240-187-128
89964|code|LDR             R0, [SP,#0x120+var_D0]|20-152
89966|code|SUBS            R0, #0xC|12-56
89968|code|CMP             R0, R5|168-66
89970|code|BNE.W           loc_160DA|64-240-178-128
89974|code|LDR             R0, [SP,#0x120+var_D4]|19-152
89976|code|SUBS            R0, #0xC|12-56
89978|code|CMP             R0, R5|168-66
89980|code|BNE.W           loc_160D2|64-240-169-128
89984|code|LDR             R0, [SP,#0x120+var_D8]|18-152
89986|code|SUBS            R0, #0xC|12-56
89988|code|CMP             R0, R5|168-66
89990|code|BEQ.W           loc_158A0|63-244-139-172
89994|code|ADD             R1, SP, #0x120+var_90|36-169
89996|code|BL              sub_1518C|255-247-254-248
90000|code|B               loc_158A0|134-228
90002|code|ADD.W           R3, R4, #0x1100|4-245-136-83
90006|code|LDR             R0, [R3]|24-104
90008|code|BL              sub_13160|253-247-226-248
90012|code|CMP             R6, #0|0-46
90014|code|BNE.W           loc_160EA|64-240-164-128
90018|code|LDR.W           R3, [R4,#0x98]; int|212-248-152-48
90022|code|CMP             R3, #0|0-43
90024|code|BEQ             loc_16022|59-208
90026|code|MOVW            R1, #0x77E4|71-242-228-113
90030|code|ADD             R2, SP, #0x120+var_10C; int|5-170
90032|code|MOVT.W          R1, #1; s|192-242-1-1
90036|code|ADD             R0, SP, #0x120+var_9C; int|33-168
90038|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(char const*,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-61-254
90042|code|MOVW            R2, #0x77E4|71-242-228-114
90046|code|ADD             R1, SP, #0x120+var_9C|33-169
90048|code|MOVT.W          R2, #1|192-242-1-2
90052|code|ADD             R0, SP, #0x120+var_98|34-168
90054|code|BL              sub_16BF8|0-240-23-254
90058|code|ADD             R0, SP, #0x120+var_94|35-168
90060|code|ADD             R1, SP, #0x120+var_98|34-169
90062|code|ADD             R2, SP, #0x120+var_100|8-170
90064|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-248-253
90068|code|MOVW            R2, #0x762C|71-242-44-98
90072|code|ADD             R1, SP, #0x120+var_94|35-169
90074|code|MOVT.W          R2, #1|192-242-1-2
90078|code|ADD             R0, SP, #0x120+var_90|36-168
90080|code|BL              sub_16BF8|0-240-10-254
90084|code|ADD             R0, SP, #0x120+var_A8; this|30-168
90086|code|ADD             R1, SP, #0x120+var_90; std::string *|36-169
90088|code|BLX             _ZNSs6appendERKSs; std::string::append(std::string const&)|251-247-80-239
90092|code|LDR             R0, [SP,#0x120+var_90]|36-152
90094|code|SUBS            R0, #0xC|12-56
90096|code|CMP             R0, R5|168-66
90098|code|BNE.W           loc_16262|64-240-54-129
90102|code|LDR             R0, [SP,#0x120+var_94]|35-152
90104|code|SUBS            R0, #0xC|12-56
90106|code|CMP             R0, R5|168-66
90108|code|BNE.W           loc_1625A|64-240-45-129
90112|code|LDR             R0, [SP,#0x120+var_98]|34-152
90114|code|SUBS            R0, #0xC|12-56
90116|code|CMP             R0, R5|168-66
90118|code|BNE.W           loc_16252|64-240-36-129
90122|code|LDR             R0, [SP,#0x120+var_9C]|33-152
90124|code|SUBS            R0, #0xC|12-56
90126|code|CMP             R0, R5|168-66
90128|code|BNE.W           loc_1624A|64-240-27-129
90132|code|LDR             R1, [SP,#0x120+var_A8]|30-153
90134|code|LDR.W           R0, [R4,#0x98]|212-248-152-0
90138|code|LDR.W           R2, [R1,#-0xC]|81-248-12-44
90142|code|BL              sub_14274|254-247-41-249
90146|code|MOVS            R4, #0|0-36
90148|code|B               loc_15F62|157-231
90150|code|LDR.W           R1, [R2,#-4]|82-248-4-28
90154|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
90158|code|STR.W           LR, [R2,#-4]|66-248-4-236
90162|code|B               loc_15A34|255-228
90164|code|LDR.W           R1, [R2,#-4]|82-248-4-28
90168|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
90172|code|STR.W           LR, [R2,#-4]|66-248-4-236
90176|code|B               loc_15CBA|59-230
90178|code|LDR.W           R1, [R2,#-4]|82-248-4-28
90182|code|ADD.W           LR, R1, #0xFFFFFFFF|1-241-255-62
90186|code|STR.W           LR, [R2,#-4]|66-248-4-236
90190|code|B               loc_15CF6|82-230
90192|code|MOVW            R1, #0x77FC|71-242-252-113
90196|code|ADD             R0, SP, #0x120+var_D8; this|18-168
90198|code|MOVT.W          R1, #1; char *|192-242-1-1
90202|code|BLX             _ZNSs6appendEPKc; std::string::append(char const*)|252-247-20-232
90206|code|B               loc_15D2A|100-230
90208|code|MOV             R0, R9; ptr|72-70
90210|code|MOV             R4, R3|28-70
90212|code|BLX             free|251-247-232-237
90216|code|B               loc_15F62|123-231
90218|code|ADD             R1, SP, #0x120+var_90|36-169
90220|code|BL              sub_1518C|255-247-142-248
90224|code|B               loc_15F0A|75-231
90226|code|ADD             R1, SP, #0x120+var_90|36-169
90228|code|BL              sub_1518C|255-247-138-248
90232|code|B               loc_15F00|66-231
90234|code|ADD             R1, SP, #0x120+var_90|36-169
90236|code|BL              sub_1518C|255-247-134-248
90240|code|B               loc_15E9E|13-231
90242|code|ADD             R1, SP, #0x120+var_90|36-169
90244|code|BL              sub_1518C|255-247-130-248
90248|code|B               loc_15E94|4-231
90250|code|ADD             R1, SP, #0x120+var_90|36-169
90252|code|BL              sub_1518C|255-247-126-248
90256|code|B               loc_15E8A|251-230
90258|code|ADD             R1, SP, #0x120+var_90|36-169
90260|code|BL              sub_1518C|255-247-122-248
90264|code|B               loc_15E80|242-230
90266|code|ADD             R1, SP, #0x120+var_90|36-169
90268|code|BL              sub_1518C|255-247-118-248
90272|code|B               loc_15E76|233-230
90274|code|ADD             R1, SP, #0x120+var_90|36-169
90276|code|BL              sub_1518C|255-247-114-248
90280|code|B               loc_15E6C|224-230
90282|code|ADD             R1, SP, #0x120+var_90|36-169
90284|code|BL              sub_1518C|255-247-110-248
90288|code|B               loc_15E62|215-230
90290|code|ADD             R1, SP, #0x120+var_90|36-169
90292|code|BL              sub_1518C|255-247-106-248
90296|code|B               loc_15E58|206-230
90298|code|ADD             R1, SP, #0x120+var_90|36-169
90300|code|BL              sub_1518C|255-247-102-248
90304|code|B               loc_15E4E|197-230
90306|code|MOVW            R1, #0x77E4|71-242-228-113
90310|code|ADD             R0, SP, #0x120+var_D8; this|18-168
90312|code|MOVT.W          R1, #1; char *|192-242-1-1
90316|code|BLX             _ZNSs6appendEPKc; std::string::append(char const*)|251-247-218-239
90320|code|B               loc_15D2A|43-230
90322|code|ADD             R1, SP, #0x120+var_90|36-169
90324|code|BL              sub_1518C|255-247-90-248
90328|code|B               loc_15F80|82-231
90330|code|ADD             R1, SP, #0x120+var_90|36-169
90332|code|BL              sub_1518C|255-247-86-248
90336|code|B               loc_15F76|73-231
90338|code|ADD             R1, SP, #0x120+var_90|36-169
90340|code|BL              sub_1518C|255-247-82-248
90344|code|B               loc_15F6C|64-231
90346|code|ADD             R1, SP, #0x120+var_D0; std::string *|20-169
90348|code|ADD             R0, SP, #0x120+var_114; this|3-168
90350|code|BLX             _ZNSs6appendERKSs; std::string::append(std::string const&)|251-247-206-238
90354|code|LDR             R1, [SP,#0x120+var_114]|3-153
90356|code|LDR.W           R0, [R4,#0x98]|212-248-152-0
90360|code|LDR.W           R2, [R1,#-0xC]|81-248-12-44
90364|code|BL              sub_14274|254-247-186-248
90368|code|B               loc_16022|143-231
90370|code|LDR             R0, [SP,#0x120+var_EC]|13-152
90372|code|SUBS            R0, #0xC|12-56
90374|code|CMP             R0, R5|168-66
90376|code|BEQ             loc_16110|2-208
90378|code|ADD             R1, SP, #0x120+s|46-169
90380|code|BL              sub_1518C|255-247-62-248
90384|code|LDR             R0, [SP,#0x120+var_F0]|12-152
90386|code|SUBS            R0, #0xC|12-56
90388|code|CMP             R0, R5|168-66
90390|code|BEQ             loc_1611E|2-208
90392|code|ADD             R1, SP, #0x120+s|46-169
90394|code|BL              sub_1518C|255-247-55-248
90398|code|LDR             R0, [SP,#0x120+var_F4]|11-152
90400|code|SUBS            R0, #0xC|12-56
90402|code|CMP             R0, R5|168-66
90404|code|BNE             loc_16178|40-209
90406|code|LDR             R0, [SP,#0x120+var_100]|8-152
90408|code|SUBS            R0, #0xC|12-56
90410|code|CMP             R0, R5|168-66
90412|code|BEQ             loc_16134|2-208
90414|code|ADD             R1, SP, #0x120+var_F8|10-169
90416|code|BL              sub_1518C|255-247-44-248
90420|code|LDR             R0, [SP,#0x120+var_10C]|5-152
90422|code|SUBS            R0, #0xC|12-56
90424|code|CMP             R0, R5|168-66
90426|code|BEQ             loc_16142|2-208
90428|code|ADD             R1, SP, #0x120+var_104|7-169
90430|code|BL              sub_1518C|255-247-37-248
90434|code|LDR             R0, [SP,#0x120+var_110]|4-152
90436|code|SUBS            R0, #0xC|12-56
90438|code|CMP             R0, R5|168-66
90440|code|BEQ             loc_16150|2-208
90442|code|ADD             R1, SP, #0x120+var_118|2-169
90444|code|BL              sub_1518C|255-247-30-248
90448|code|LDR             R0, [SP,#0x120+var_114]|3-152
90450|code|SUBS            R0, #0xC|12-56
90452|code|CMP             R0, R5|168-66
90454|code|BEQ             loc_1615E|2-208
90456|code|ADD             R1, SP, #0x120+var_118|2-169
90458|code|BL              sub_1518C|255-247-23-248
90462|code|BLX             __cxa_end_cleanup|251-247-162-238
90466|code|LDR             R0, [SP,#0x120+var_E4]|15-152
90468|code|SUBS            R0, #0xC|12-56
90470|code|CMP             R0, R5|168-66
90472|code|BEQ             loc_16170|2-208
90474|code|ADD             R1, SP, #0x120+s|46-169
90476|code|BL              sub_1518C|255-247-14-248
90480|code|LDR             R0, [SP,#0x120+var_E8]|14-152
90482|code|SUBS            R0, #0xC|12-56
90484|code|CMP             R0, R5|168-66
90486|code|BEQ             loc_16126|214-208
90488|code|ADD             R1, SP, #0x120+s|46-169
90490|code|BL              sub_1518C|255-247-7-248
90494|code|B               loc_16126|210-231
90496|code|B               loc_16102|191-231
90498|code|B               loc_16110|197-231
90500|code|LDR             R0, [SP,#0x120+var_10C]|5-152
90502|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
90510|code|SUBS            R0, #0xC|12-56
90512|code|CMP             R0, R5|168-66
90514|code|BEQ             loc_1619A|2-208
90516|code|ADD             R1, SP, #0x120+s|46-169
90518|code|BL              sub_1518C|254-247-249-255
90522|code|LDR             R0, [SP,#0x120+var_104]|7-152
90524|code|SUBS            R0, #0xC|12-56
90526|code|CMP             R0, R5|168-66
90528|code|BEQ             loc_161A8|2-208
90530|code|ADD             R1, SP, #0x120+s|46-169
90532|code|BL              sub_1518C|254-247-242-255
90536|code|LDR             R0, [SP,#0x120+var_108]|6-152
90538|code|SUBS            R0, #0xC|12-56
90540|code|CMP             R0, R5|168-66
90542|code|BEQ             loc_16142|200-208
90544|code|ADD             R1, SP, #0x120+s|46-169
90546|code|BL              sub_1518C|254-247-235-255
90550|code|B               loc_16142|196-231
90552|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
90560|code|B               loc_1619A|235-231
90562|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
90570|code|B               loc_161A8|237-231
90572|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
90580|code|B               loc_16142|181-231
90582|code|LDR             R0, [SP,#0x120+var_BC]|25-152
90584|code|SUBS            R0, #0xC|12-56
90586|code|CMP             R0, R5|168-66
90588|code|BEQ             loc_161E4|2-208
90590|code|ADD             R1, SP, #0x120+var_90|36-169
90592|code|BL              sub_1518C|254-247-212-255
90596|code|LDR             R0, [SP,#0x120+var_C0]|24-152
90598|code|SUBS            R0, #0xC|12-56
90600|code|CMP             R0, R5|168-66
90602|code|BEQ             loc_161F2|2-208
90604|code|ADD             R1, SP, #0x120+var_90|36-169
90606|code|BL              sub_1518C|254-247-205-255
90610|code|LDR             R0, [SP,#0x120+var_C4]|23-152
90612|code|SUBS            R0, #0xC|12-56
90614|code|CMP             R0, R5|168-66
90616|code|BEQ             loc_16200|2-208
90618|code|ADD             R1, SP, #0x120+var_90|36-169
90620|code|BL              sub_1518C|254-247-198-255
90624|code|LDR             R0, [SP,#0x120+var_C8]|22-152
90626|code|SUBS            R0, #0xC|12-56
90628|code|CMP             R0, R5|168-66
90630|code|BEQ             loc_1620E|2-208
90632|code|ADD             R1, SP, #0x120+var_90|36-169
90634|code|BL              sub_1518C|254-247-191-255
90638|code|LDR             R0, [SP,#0x120+var_CC]|21-152
90640|code|SUBS            R0, #0xC|12-56
90642|code|CMP             R0, R5|168-66
90644|code|BEQ             loc_1621C|2-208
90646|code|ADD             R1, SP, #0x120+var_90|36-169
90648|code|BL              sub_1518C|254-247-184-255
90652|code|LDR             R0, [SP,#0x120+var_D4]|19-152
90654|code|SUBS            R0, #0xC|12-56
90656|code|CMP             R0, R5|168-66
90658|code|BEQ             loc_1622A|2-208
90660|code|ADD             R1, SP, #0x120+var_DC|17-169
90662|code|BL              sub_1518C|254-247-177-255
90666|code|LDR             R0, [SP,#0x120+var_D8]|18-152
90668|code|SUBS            R0, #0xC|12-56
90670|code|CMP             R0, R5|168-66
90672|code|BEQ.W           loc_16126|63-244-121-175
90676|code|ADD             R1, SP, #0x120+var_DC|17-169
90678|code|BL              sub_1518C|254-247-169-255
90682|code|B               loc_16126|116-231
90684|code|B               loc_161E4|210-231
90686|code|B               loc_161F2|216-231
90688|code|B               loc_161F2|215-231
90690|code|B               loc_16200|221-231
90692|code|B               loc_1620E|227-231
90694|code|B               loc_1621C|233-231
90696|code|B               loc_1622A|239-231
90698|code|ADD             R1, SP, #0x120+var_90|36-169
90700|code|BL              sub_1518C|254-247-158-255
90704|code|B               loc_16014|224-230
90706|code|ADD             R1, SP, #0x120+var_90|36-169
90708|code|BL              sub_1518C|254-247-154-255
90712|code|B               loc_1600A|215-230
90714|code|ADD             R1, SP, #0x120+var_90|36-169
90716|code|BL              sub_1518C|254-247-150-255
90720|code|B               loc_16000|206-230
90722|code|ADD             R1, SP, #0x120+var_A0|32-169
90724|code|BL              sub_1518C|254-247-146-255
90728|code|B               loc_15FF6|197-230
90730|code|LDR             R0, [SP,#0x120+var_90]|36-152
90732|code|SUBS            R0, #0xC|12-56
90734|code|CMP             R0, R5|168-66
90736|code|BEQ             loc_16278|2-208
90738|code|ADD             R1, SP, #0x120+var_A0|32-169
90740|code|BL              sub_1518C|254-247-138-255
90744|code|LDR             R0, [SP,#0x120+var_94]|35-152
90746|code|SUBS            R0, #0xC|12-56
90748|code|CMP             R0, R5|168-66
90750|code|BEQ             loc_16286|2-208
90752|code|ADD             R1, SP, #0x120+var_A0|32-169
90754|code|BL              sub_1518C|254-247-131-255
90758|code|LDR             R0, [SP,#0x120+var_98]|34-152
90760|code|SUBS            R0, #0xC|12-56
90762|code|CMP             R0, R5|168-66
90764|code|BEQ             loc_16294|2-208
90766|code|ADD             R1, SP, #0x120+var_A0|32-169
90768|code|BL              sub_1518C|254-247-124-255
90772|code|LDR             R0, [SP,#0x120+var_9C]|33-152
90774|code|SUBS            R0, #0xC|12-56
90776|code|CMP             R0, R5|168-66
90778|code|BEQ             loc_162A2|2-208
90780|code|ADD             R1, SP, #0x120+var_A0|32-169
90782|code|BL              sub_1518C|254-247-117-255
90786|code|LDR             R0, [SP,#0x120+var_A8]|30-152
90788|code|SUBS            R0, #0xC|12-56
90790|code|CMP             R0, R5|168-66
90792|code|BEQ             loc_162B0|2-208
90794|code|ADD             R1, SP, #0x120+var_AC|29-169
90796|code|BL              sub_1518C|254-247-110-255
90800|code|LDR             R0, [SP,#0x120+var_D0]|20-152
90802|code|SUBS            R0, #0xC|12-56
90804|code|CMP             R0, R5|168-66
90806|code|BEQ             loc_1621C|177-208
90808|code|ADD             R1, SP, #0x120+var_AC|29-169
90810|code|BL              sub_1518C|254-247-103-255
90814|code|B               loc_1621C|173-231
90816|code|B               loc_16278|218-231
90818|code|B               loc_16286|224-231
90820|code|B               loc_16294|230-231
90822|code|LDR             R0, [SP,#0x120+var_AC]|29-152
90824|code|SUBS            R0, #0xC|12-56
90826|code|CMP             R0, R5|168-66
90828|code|BEQ             loc_162D4|2-208
90830|code|ADD             R1, SP, #0x120+var_90|36-169
90832|code|BL              sub_1518C|254-247-92-255
90836|code|LDR             R0, [SP,#0x120+var_B0]|28-152
90838|code|SUBS            R0, #0xC|12-56
90840|code|CMP             R0, R5|168-66
90842|code|BEQ             loc_162E2|2-208
90844|code|ADD             R1, SP, #0x120+var_90|36-169
90846|code|BL              sub_1518C|254-247-85-255
90850|code|LDR             R0, [SP,#0x120+var_B4]|27-152
90852|code|SUBS            R0, #0xC|12-56
90854|code|CMP             R0, R5|168-66
90856|code|BEQ             loc_162F0|2-208
90858|code|ADD             R1, SP, #0x120+var_90|36-169
90860|code|BL              sub_1518C|254-247-78-255
90864|code|LDR             R0, [SP,#0x120+var_B8]|26-152
90866|code|SUBS            R0, #0xC|12-56
90868|code|CMP             R0, R5|168-66
90870|code|BEQ.W           loc_161D6|63-244-110-175
90874|code|ADD             R1, SP, #0x120+var_90|36-169
90876|code|BL              sub_1518C|254-247-70-255
90880|code|B               loc_161D6|105-231
90882|code|B               loc_162C6|224-231
90884|code|B               loc_162D4|230-231
90886|code|B               loc_162D4|229-231
90888|code|B               loc_162E2|235-231
90890|code|B               loc_162E2|234-231
90892|code|B               loc_162F0|240-231
90894|code|B               loc_161D6|98-231
90896|code|LDR             R0, [SP,#0x120+var_A0]|32-152
90898|code|SUBS            R0, #0xC|12-56
90900|code|CMP             R0, R5|168-66
90902|code|BEQ             loc_1631E|2-208
90904|code|ADD             R1, SP, #0x120+var_90|36-169
90906|code|BL              sub_1518C|254-247-55-255
90910|code|LDR             R0, [SP,#0x120+var_A4]|31-152
90912|code|SUBS            R0, #0xC|12-56
90914|code|CMP             R0, R5|168-66
90916|code|BEQ             loc_162A2|189-208
90918|code|ADD             R1, SP, #0x120+var_90|36-169
90920|code|BL              sub_1518C|254-247-48-255
90924|code|B               loc_162A2|185-231
90926|code|B               loc_162B0|191-231
90928|code|B               loc_1631E|245-231
90930|code|B               loc_162A2|182-231
90932|code|B               loc_16170|28-231
90934|code|B               loc_1611E|242-230
90936|code|B               loc_16126|245-230
90938|code|LDR             R0, [SP,#0x120+var_DC]|17-152
90940|code|SUBS            R0, #0xC|12-56
90942|code|CMP             R0, R5|168-66
90944|code|BEQ.W           loc_16126|63-244-241-174
90948|code|B               loc_16178|24-231
90950|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
90958|code|B               loc_16150|255-230
90960|code|LDR             R0, [SP,#0x120+var_E0]|16-152
90962|code|SUBS            R0, #0xC|12-56
90964|code|CMP             R0, R5|168-66
90966|code|BEQ.W           loc_16162|63-244-4-175
90970|code|ADD             R1, SP, #0x120+s|46-169
90972|code|BL              sub_1518C|254-247-22-255
90976|code|B               loc_16162|255-230
90978|code|B               loc_16350|245-231
90980|code|LDR             R0, [SP,#0x120+var_100]|8-152
90982|code|SUBS            R0, #0xC|12-56
90984|code|CMP             R0, R5|168-66
90986|code|BEQ             loc_16372|2-208
90988|code|ADD             R1, SP, #0x120+s|46-169
90990|code|BL              sub_1518C|254-247-13-255
90994|code|LDR             R0, [SP,#0x120+var_F8]|10-152
90996|code|SUBS            R0, #0xC|12-56
90998|code|CMP             R0, R5|168-66
91000|code|BEQ             loc_16380|2-208
91002|code|ADD             R1, SP, #0x120+s|46-169
91004|code|BL              sub_1518C|254-247-6-255
91008|code|LDR             R0, [SP,#0x120+var_FC]|9-152
91010|code|SUBS            R0, #0xC|12-56
91012|code|CMP             R0, R5|168-66
91014|code|BEQ.W           loc_16134|63-244-213-174
91018|code|ADD             R1, SP, #0x120+s|46-169
91020|code|BL              sub_1518C|254-247-254-254
91024|code|B               loc_16134|208-230
91026|code|B               loc_16372|238-231
91028|code|B               loc_16380|244-231
91030|code|B               loc_16134|205-230
91032|code|PUSH.W          {R4-R8,LR}|45-233-240-65
91036|code|SUB             SP, SP, #0x70|156-176
91038|code|MOV             R4, R1|12-70
91040|code|ADD.W           R5, R0, #0x2000|0-245-0-85
91044|code|ADD.W           R1, R0, #0x10|0-241-16-1
91048|code|MOV             R0, SP|104-70
91050|code|BL              sub_14000|253-247-41-254
91054|code|ADDS            R5, #0x2C ; ','|44-53
91056|code|LDR             R6, [R4,#4]|102-104
91058|code|ADD             R1, SP, #0x88+var_84|1-169
91060|code|MOV             R0, R5|40-70
91062|code|MOVS            R3, #0|0-35
91064|code|STR             R3, [SP,#0x88+var_80]|2-147
91066|code|STR             R6, [SP,#0x88+var_84]|1-150
91068|code|BL              sub_16D8C|0-240-230-252
91072|code|LDR             R3, [R0,#4]|67-104
91074|code|CBZ             R3, loc_163D4|59-177
91076|code|MOV             R0, SP|104-70
91078|code|MOV             R4, R3|28-70
91080|code|BL              sub_14040|253-247-58-254
91084|code|MOV             R0, R4|32-70
91086|code|ADD             SP, SP, #0x70 ; 'p'|28-176
91088|code|POP.W           {R4-R8,PC}|189-232-240-129
91092|code|ADDS            R0, R4, #4; addr|32-29
91094|code|MOVS            R1, #4; len|4-33
91096|code|MOVS            R2, #2; type|2-34
91098|code|BLX             gethostbyaddr|251-247-136-236
91102|code|MOV             R8, R0|128-70
91104|code|CBZ             R0, loc_16414|192-177
91106|code|MOVS            R0, #4; unsigned int|4-32
91108|code|BLX             _Znwj; operator new(uint)|251-247-236-235
91112|code|ADD             R7, SP, #0x88+s|3-175
91114|code|LDR.W           R1, [R8]|216-248-0-16
91118|code|MOV             R4, R0|4-70
91120|code|MOV             R2, R7|58-70
91122|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-106-237
91126|code|MOV             R0, R5|40-70
91128|code|MOV             R1, R7|57-70
91130|code|MOVS            R3, #0|0-35
91132|code|STR             R6, [SP,#0x88+s]|3-150
91134|code|STR             R3, [SP,#0x88+var_78]|4-147
91136|code|BL              sub_16D8C|0-240-196-252
91140|code|STR             R4, [R0,#4]|68-96
91142|code|MOV             R0, SP|104-70
91144|code|BL              sub_14040|253-247-26-254
91148|code|MOV             R0, R4|32-70
91150|code|ADD             SP, SP, #0x70 ; 'p'|28-176
91152|code|POP.W           {R4-R8,PC}|189-232-240-129
91156|code|MOVW            R0, #0x783C|71-246-60-0
91160|code|MOVW            R1, #0x7228|71-242-40-33
91164|code|MOVT.W          R0, #1; filename|192-242-1-0
91168|code|MOVT.W          R1, #1; modes|192-242-1-1
91172|code|BLX             fopen|251-247-176-236
91176|code|CBZ             R0, loc_16458|176-177
91178|code|ADD             R7, SP, #0x88+s|3-175
91180|code|MOV             R2, R0; stream|2-70
91182|code|MOVS            R1, #0x64 ; 'd'; n|100-33
91184|code|MOV             R0, R7; s|56-70
91186|code|BLX             fgets|251-247-158-237
91190|code|CBZ             R0, loc_16458|120-177
91192|code|MOV             R0, R7; s|56-70
91194|code|MOVS            R1, #0xA; c|10-33
91196|code|BLX             strchr|251-247-70-238
91200|code|CBZ             R0, loc_16446|8-177
91202|code|MOVS            R3, #0|0-35
91204|code|STRB            R3, [R0]|3-112
91206|code|MOVS            R0, #4; unsigned int|4-32
91208|code|BLX             _Znwj; operator new(uint)|251-247-186-235
91212|code|MOV             R1, R7|57-70
91214|code|ADD             R2, SP, #0x88+var_84|1-170
91216|code|MOV             R4, R0|4-70
91218|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-58-237
91222|code|B               loc_163F6|206-231
91224|code|LDR             R0, [R4,#4]; in|96-104
91226|code|BLX             inet_ntoa|251-247-224-236
91230|code|MOV             R7, R0|7-70
91232|code|MOVS            R0, #4; unsigned int|4-32
91234|code|BLX             _Znwj; operator new(uint)|251-247-174-235
91238|code|MOV             R1, R7|57-70
91240|code|ADD             R2, SP, #0x88+var_84|1-170
91242|code|MOV             R4, R0|4-70
91244|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-44-237
91248|code|ADD             R7, SP, #0x88+s|3-175
91250|code|B               loc_163F6|192-231
91252|code|MOV             R0, R4; void *|32-70
91254|code|BLX             _ZdlPv; operator delete(void *)|251-247-230-236
91258|code|MOV             R0, SP|104-70
91260|code|BL              sub_14040|253-247-224-253
91264|code|BLX             __cxa_end_cleanup|251-247-16-237
91268|code|B               loc_16474|246-231
91270|code|B               loc_16474|245-231
91272|code|B               loc_1647A|247-231
91274|data|ALIGN 4|0-191
91276|code|PUSH            {R4-R7,LR}|240-181
91278|code|MOVS            R1, #0|0-33
91280|code|SUB             SP, SP, #0x1C|135-176
91282|code|MOV             R4, R0|4-70
91284|code|BL              sub_1394C|253-247-90-250
91288|code|CBZ             R0, loc_1649E|8-177
91290|code|ADD             SP, SP, #0x1C|7-176
91292|code|POP             {R4-R7,PC}|240-189
91294|code|ADD.W           R3, R4, #0x1100|4-245-136-83
91298|code|LDR             R0, [R3]|24-104
91300|code|BL              sub_13180|252-247-108-254
91304|code|MOV             R0, R4|32-70
91306|code|BL              sub_1567C|255-247-231-248
91310|code|CMP             R0, #0|0-40
91312|code|BNE             loc_1649A|243-209
91314|code|MOVW            R3, #0x10F8|65-242-248-3
91318|code|ADD.W           R1, R4, #0x9C|4-241-156-1
91322|code|LDR             R0, [R4,R3]|224-88
91324|code|BL              sub_16398|255-247-108-255
91328|code|MOVW            R3, #0x1110|65-242-16-19
91332|code|LDRB            R3, [R4,R3]|227-92
91334|code|MOV             R7, R0|7-70
91336|code|CMP             R3, #0|0-43
91338|code|BEQ             loc_1654C|63-208
91340|code|MOVW            R1, #0x784C|71-246-76-1
91344|code|ADD             R5, SP, #0x30+var_20|4-173
91346|code|MOVT.W          R1, #1|192-242-1-1
91350|code|ADD             R2, SP, #0x30+var_2C|1-170
91352|code|ADD             R0, SP, #0x30+var_24|3-168
91354|code|ADD.W           R6, R4, #0x1100|4-245-136-86
91358|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-244-236
91362|code|ADD             R1, SP, #0x30+var_24|3-169
91364|code|MOV             R2, R7|58-70
91366|code|MOV             R0, R5|40-70
91368|code|ADDS            R6, #8|8-54
91370|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-107-251
91374|code|ADD             R7, SP, #0x30+var_1C|5-175
91376|code|MOV             R1, R5; std::string *|41-70
91378|code|MOV             R0, R7; this|56-70
91380|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-12-236
91384|code|MOVW            R1, #0x77EC|71-242-236-113
91388|code|MOV             R0, R7; this|56-70
91390|code|MOVS            R2, #2; unsigned int|2-34
91392|code|MOVT.W          R1, #1; char *|192-242-1-1
91396|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|251-247-212-236
91400|code|MOV             R0, R6; this|48-70
91402|code|MOV             R1, R7; std::string *|57-70
91404|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|251-247-238-236
91408|code|LDR             R3, [SP,#0x30+var_1C]|5-155
91410|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
91418|code|SUB.W           R0, R3, #0xC|163-241-12-0
91422|code|CMP             R0, R5|168-66
91424|code|BNE.W           loc_1669E|64-240-189-128
91428|code|LDR             R3, [SP,#0x30+var_20]|4-155
91430|code|SUB.W           R0, R3, #0xC|163-241-12-0
91434|code|CMP             R0, R5|168-66
91436|code|BNE.W           loc_1666C|64-240-158-128
91440|code|LDR             R3, [SP,#0x30+var_24]|3-155
91442|code|SUB.W           R0, R3, #0xC|163-241-12-0
91446|code|CMP             R0, R5|168-66
91448|code|BNE.W           loc_1664C|64-240-136-128
91452|code|LDR             R3, [R4]|35-104
91454|code|MOV             R1, R6|49-70
91456|code|MOV             R0, R4|32-70
91458|code|MOVS            R2, #1|1-34
91460|code|LDR             R3, [R3,#0x30]|27-107
91462|code|BLX             R3|152-71
91464|code|ADD             SP, SP, #0x1C|7-176
91466|code|POP             {R4-R7,PC}|240-189
91468|code|MOVW            R1, #0x7854|71-246-84-1
91472|code|ADD             R5, SP, #0x30+var_20|4-173
91474|code|MOVT.W          R1, #1|192-242-1-1
91478|code|ADD             R2, SP, #0x30+var_2C|1-170
91480|code|ADD             R0, SP, #0x30+var_24|3-168
91482|code|ADD.W           R6, R4, #0x1100|4-245-136-86
91486|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-180-236
91490|code|ADD             R1, SP, #0x30+var_24|3-169
91492|code|MOV             R2, R7|58-70
91494|code|MOV             R0, R5|40-70
91496|code|ADDS            R6, #8|8-54
91498|code|BL              _ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_; std::operator+<char,std::char_traits<char>,std::allocator<char>>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&,std::basic_string<char,std::char_traits<char>,std::allocator<char>> const&)|0-240-43-251
91502|code|ADD             R7, SP, #0x30+var_1C|5-175
91504|code|MOV             R1, R5; std::string *|41-70
91506|code|MOV             R0, R7; this|56-70
91508|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-204-235
91512|code|MOVW            R1, #0x77EC|71-242-236-113
91516|code|MOV             R0, R7; this|56-70
91518|code|MOVS            R2, #2; unsigned int|2-34
91520|code|MOVT.W          R1, #1; char *|192-242-1-1
91524|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|251-247-148-236
91528|code|MOV             R0, R6; this|48-70
91530|code|MOV             R1, R7; std::string *|57-70
91532|code|BLX             _ZNSs6assignERKSs; std::string::assign(std::string const&)|251-247-174-236
91536|code|LDR             R3, [SP,#0x30+var_1C]|5-155
91538|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
91546|code|SUB.W           R0, R3, #0xC|163-241-12-0
91550|code|CMP             R0, R5|168-66
91552|code|BNE             loc_1661A|59-209
91554|code|LDR             R3, [SP,#0x30+var_20]|4-155
91556|code|SUB.W           R0, R3, #0xC|163-241-12-0
91560|code|CMP             R0, R5|168-66
91562|code|BNE             loc_165E8|29-209
91564|code|LDR             R3, [SP,#0x30+var_24]|3-155
91566|code|SUB.W           R0, R3, #0xC|163-241-12-0
91570|code|CMP             R0, R5|168-66
91572|code|BEQ             loc_1653C|194-208
91574|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
91582|code|CMP             R2, #0|0-42
91584|code|BEQ.W           loc_166D0|0-240-134-128
91588|code|SUBS            R3, #4|4-59
91590|code|DMB.W           SY|191-243-95-143
91594|code|LDREX.W         R2, [R3]|83-232-0-47
91598|code|SUBS            R1, R2, #1|81-30
91600|code|STREX.W         R5, R1, [R3]|67-232-0-21
91604|code|CMP             R5, #0|0-45
91606|code|BNE             loc_165CA|248-209
91608|code|DMB.W           SY|191-243-95-143
91612|code|CMP             R2, #0|0-42
91614|code|BGT             loc_1653C|173-220
91616|code|MOV             R1, R7|57-70
91618|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|251-247-230-235
91622|code|B               loc_1653C|169-231
91624|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
91632|code|CMP             R2, #0|0-42
91634|code|BEQ             loc_166DC|115-208
91636|code|SUBS            R3, #4|4-59
91638|code|DMB.W           SY|191-243-95-143
91642|code|LDREX.W         R2, [R3]|83-232-0-47
91646|code|SUBS            R1, R2, #1|81-30
91648|code|STREX.W         LR, R1, [R3]|67-232-0-30
91652|code|CMP.W           LR, #0|190-241-0-15
91656|code|BNE             loc_165FA|247-209
91658|code|DMB.W           SY|191-243-95-143
91662|code|CMP             R2, #0|0-42
91664|code|BGT             loc_165AC|204-220
91666|code|MOV             R1, R7|57-70
91668|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|251-247-204-235
91672|code|B               loc_165AC|200-231
91674|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
91682|code|CMP             R2, #0|0-42
91684|code|BEQ             loc_166E8|96-208
91686|code|SUBS            R3, #4|4-59
91688|code|DMB.W           SY|191-243-95-143
91692|code|LDREX.W         R2, [R3]|83-232-0-47
91696|code|SUBS            R1, R2, #1|81-30
91698|code|STREX.W         LR, R1, [R3]|67-232-0-30
91702|code|CMP.W           LR, #0|190-241-0-15
91706|code|BNE             loc_1662C|247-209
91708|code|DMB.W           SY|191-243-95-143
91712|code|CMP             R2, #0|0-42
91714|code|BGT             loc_165A2|174-220
91716|code|ADD             R1, SP, #0x30+var_28|2-169
91718|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|251-247-180-235
91722|code|B               loc_165A2|170-231
91724|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
91732|code|CBZ             R2, loc_166D0|226-179
91734|code|SUBS            R3, #4|4-59
91736|code|DMB.W           SY|191-243-95-143
91740|code|LDREX.W         R2, [R3]|83-232-0-47
91744|code|SUBS            R1, R2, #1|81-30
91746|code|STREX.W         R5, R1, [R3]|67-232-0-21
91750|code|CMP             R5, #0|0-45
91752|code|BEQ             loc_165D8|182-208
91754|code|B               loc_1665C|247-231
91756|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
91764|code|CBZ             R2, loc_166F4|242-179
91766|code|SUBS            R3, #4|4-59
91768|code|DMB.W           SY|191-243-95-143
91772|code|LDREX.W         R2, [R3]|83-232-0-47
91776|code|SUBS            R1, R2, #1|81-30
91778|code|STREX.W         LR, R1, [R3]|67-232-0-30
91782|code|CMP.W           LR, #0|190-241-0-15
91786|code|BNE             loc_1667C|247-209
91788|code|DMB.W           SY|191-243-95-143
91792|code|CMP             R2, #0|0-42
91794|code|BGT.W           loc_16530|63-247-77-175
91798|code|MOV             R1, R7|57-70
91800|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|251-247-138-235
91804|code|B               loc_16530|72-231
91806|code|MOV             R2, #0x11E5C|65-246-92-98-192-242-1-2
91814|code|CBZ             R2, loc_16700|90-179
91816|code|SUBS            R3, #4|4-59
91818|code|DMB.W           SY|191-243-95-143
91822|code|LDREX.W         R2, [R3]|83-232-0-47
91826|code|SUBS            R1, R2, #1|81-30
91828|code|STREX.W         LR, R1, [R3]|67-232-0-30
91832|code|CMP.W           LR, #0|190-241-0-15
91836|code|BNE             loc_166AE|247-209
91838|code|DMB.W           SY|191-243-95-143
91842|code|CMP             R2, #0|0-42
91844|code|BGT.W           loc_16524|63-247-46-175
91848|code|ADD             R1, SP, #0x30+var_28|2-169
91850|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|251-247-114-235
91854|code|B               loc_16524|41-231
91856|code|LDR.W           R2, [R3,#-4]|83-248-4-44
91860|code|SUBS            R1, R2, #1|81-30
91862|code|STR.W           R1, [R3,#-4]|67-248-4-28
91866|code|B               loc_165DC|127-231
91868|code|LDR.W           R2, [R3,#-4]|83-248-4-44
91872|code|SUBS            R1, R2, #1|81-30
91874|code|STR.W           R1, [R3,#-4]|67-248-4-28
91878|code|B               loc_1660E|146-231
91880|code|LDR.W           R2, [R3,#-4]|83-248-4-44
91884|code|SUBS            R1, R2, #1|81-30
91886|code|STR.W           R1, [R3,#-4]|67-248-4-28
91890|code|B               loc_16640|165-231
91892|code|LDR.W           R2, [R3,#-4]|83-248-4-44
91896|code|SUBS            R1, R2, #1|81-30
91898|code|STR.W           R1, [R3,#-4]|67-248-4-28
91902|code|B               loc_16690|199-231
91904|code|LDR.W           R2, [R3,#-4]|83-248-4-44
91908|code|SUBS            R1, R2, #1|81-30
91910|code|STR.W           R1, [R3,#-4]|67-248-4-28
91914|code|B               loc_166C2|218-231
91916|code|LDR             R0, [SP,#0x30+var_1C]|5-152
91918|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
91926|code|SUBS            R0, #0xC|12-56
91928|code|CMP             R0, R5|168-66
91930|code|BEQ             loc_16722|2-208
91932|code|ADD             R1, SP, #0x30+var_28|2-169
91934|code|BL              sub_1518C|254-247-53-253
91938|code|LDR             R0, [SP,#0x30+var_20]|4-152
91940|code|SUBS            R0, #0xC|12-56
91942|code|CMP             R0, R5|168-66
91944|code|BEQ             loc_16730|2-208
91946|code|ADD             R1, SP, #0x30+var_28|2-169
91948|code|BL              sub_1518C|254-247-46-253
91952|code|LDR             R0, [SP,#0x30+var_24]|3-152
91954|code|SUBS            R0, #0xC|12-56
91956|code|CMP             R0, R5|168-66
91958|code|BEQ             loc_1673E|2-208
91960|code|ADD             R1, SP, #0x30+var_28|2-169
91962|code|BL              sub_1518C|254-247-39-253
91966|code|BLX             __cxa_end_cleanup|251-247-178-235
91970|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
91978|code|B               loc_16722|234-231
91980|code|B               loc_1670C|222-231
91982|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
91990|code|B               loc_16730|235-231
91992|code|B               loc_1670C|216-231
91994|code|B               loc_1670C|215-231
91996|code|B               loc_16742|241-231
91998|code|B               loc_1674E|246-231
92000|code|PUSH.W          {R4-R8,R10,R11,LR}|45-233-240-77
92004|code|ADD.W           R7, R0, #0x10E0|0-245-135-87
92008|code|MOVW            R8, #0x851F|72-242-31-88
92012|code|SUB             SP, SP, #0x10|132-176
92014|code|ADDS            R7, #0x1C|28-55
92016|code|MOV             R5, R0|5-70
92018|code|MOVT.W          R8, #0x51EB|197-242-235-24
92022|code|MOV             R0, R5|40-70
92024|code|BL              sub_1648C|255-247-136-254
92028|code|CMP             R0, #1|1-40
92030|code|MOV             R4, R0|4-70
92032|code|BGT             loc_16796|9-220
92034|code|CBZ             R0, loc_1679E|96-177
92036|code|MOVS            R0, #5; seconds|5-32
92038|code|BLX             sleep|251-247-190-235
92042|code|MOV             R0, R5|40-70
92044|code|BL              sub_1648C|255-247-126-254
92048|code|CMP             R0, #1|1-40
92050|code|MOV             R4, R0|4-70
92052|code|BLE             loc_16782|245-221
92054|code|MOVS            R0, #1|1-32
92056|code|ADD             SP, SP, #0x10|4-176
92058|code|POP.W           {R4-R8,R10,R11,PC}|189-232-240-141
92062|code|LDRB.W          R3, [R5,#0xAC]|149-248-172-48
92066|code|CMP             R3, #0|0-43
92068|code|BEQ             loc_16860|92-208
92070|code|LDR.W           R3, [R5,#0xB0]|213-248-176-48
92074|code|CMP             R3, #0x64 ; 'd'|100-43
92076|code|BEQ             loc_167D0|16-208
92078|code|BLX             rand|251-247-32-234
92082|code|LDR.W           R2, [R5,#0xB0]|213-248-176-32
92086|code|SMULL.W         R10, R11, R0, R8|128-251-8-171
92090|code|ASRS            R3, R0, #0x1F|195-23
92092|code|RSB.W           R3, R3, R11,ASR#5|195-235-107-19
92096|code|ADD.W           R3, R3, R3,LSL#2|3-235-131-3
92100|code|ADD.W           R3, R3, R3,LSL#2|3-235-131-3
92104|code|SUB.W           R3, R0, R3,LSL#2|160-235-131-3
92108|code|CMP             R3, R2|147-66
92110|code|BGE             loc_16860|71-218
92112|code|LDR             R3, [R5]|43-104
92114|code|MOVW            R1, #0x785C|71-246-92-1
92118|code|ADD             R2, SP, #0x30+var_2C|1-170
92120|code|MOVT.W          R1, #1|192-242-1-1
92124|code|ADD             R0, SP, #0x30+var_24|3-168
92126|code|LDR             R4, [R3,#0x30]|28-107
92128|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-114-235
92132|code|MOV             R0, R5|40-70
92134|code|ADD             R1, SP, #0x30+var_24|3-169
92136|code|MOVS            R2, #1|1-34
92138|code|BLX             R4|160-71
92140|code|LDR             R2, [SP,#0x30+var_24]|3-154
92142|code|MOV             R4, R0|4-70
92144|code|MOVW            R3, #0x8440|72-242-64-67
92148|code|SUB.W           R0, R2, #0xC|162-241-12-0
92152|code|MOVT.W          R3, #2|192-242-2-3
92156|code|CMP             R0, R3|152-66
92158|code|BNE             loc_168B2|88-209
92160|code|CMP             R4, #0|0-44
92162|code|BEQ             loc_16892|70-208
92164|code|CMP             R4, #1|1-44
92166|code|BGT             loc_168F0|115-220
92168|code|ADD.W           R3, R5, #0x1100|5-245-136-83
92172|code|LDR             R0, [R3]|24-104
92174|code|BL              sub_131A0|252-247-199-252
92178|code|LDR             R3, [R7]|59-104
92180|code|CMP             R3, #0|0-43
92182|code|BNE             loc_16848|23-209
92184|code|CMP             R4, #0|0-44
92186|code|BNE             loc_16784|179-209
92188|code|MOV.W           R6, #0xFFFFFFFF|79-240-255-54
92192|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
92196|code|LDR             R4, [R3]|28-104
92198|code|CBZ             R4, loc_1683C|76-177
92200|code|B               loc_16882|43-224
92202|code|CMP             R0, #0|0-40
92204|code|BNE             loc_16784|170-209
92206|code|ADDS            R4, #1|1-52
92208|code|CMP             R6, R4|166-66
92210|code|BEQ             loc_1686E|28-208
92212|code|LDR.W           R3, [R5,#0xB4]|213-248-180-48
92216|code|LDR             R3, [R3]|27-104
92218|code|CBNZ            R3, loc_16882|19-187
92220|code|MOV             R0, R5|40-70
92222|code|BL              sub_15714|254-247-105-255
92226|code|CMP             R0, #1|1-40
92228|code|BLE             loc_1682A|241-221
92230|code|B               loc_16796|166-231
92232|code|BLT             loc_1686A|15-219
92234|code|BLX             random|251-247-224-235
92238|code|LDR             R1, [R7]|57-104
92240|code|BLX             __aeabi_idivmod|251-247-94-235
92244|code|ADDS            R6, R1, #1|78-28
92246|code|CMP             R4, #0|0-44
92248|code|BNE             loc_16784|148-209
92250|code|CMP             R6, #0|0-46
92252|code|BNE             loc_16820|224-209
92254|code|B               loc_1686E|6-224
92256|code|LDR             R3, [R7]|59-104
92258|code|CMP             R3, #0|0-43
92260|code|BEQ             loc_1681C|218-208
92262|code|BGE             loc_1684A|240-218
92264|code|B               loc_1686E|1-224
92266|code|CMP             R4, #0|0-44
92268|code|BNE             loc_16784|138-209
92270|code|LDR             R3, [R5]|43-104
92272|code|MOV             R0, R5|40-70
92274|code|LDR             R3, [R3,#0x10]|27-105
92276|code|BLX             R3|152-71
92278|code|CMP             R0, #1|1-40
92280|code|BGT             loc_16796|141-220
92282|code|CMP             R0, #0|0-40
92284|code|BEQ.W           loc_16776|63-244-123-175
92288|code|B               loc_16784|128-231
92290|code|LDR             R3, [R5]|43-104
92292|code|MOV             R0, R5|40-70
92294|code|LDR             R3, [R3,#0x10]|27-105
92296|code|BLX             R3|152-71
92298|code|MOVS            R0, #1|1-32
92300|code|ADD             SP, SP, #0x10|4-176
92302|code|POP.W           {R4-R8,R10,R11,PC}|189-232-240-141
92306|code|MOV             R0, R5|40-70
92308|code|BL              sub_13AE0|253-247-36-249
92312|code|MOV             R4, R0|4-70
92314|code|CMP             R0, #0|0-40
92316|code|BNE             loc_16804|178-209
92318|code|LDR             R3, [R5]|43-104
92320|code|ADD.W           R1, R5, #0x1100|5-245-136-81
92324|code|ADDS            R1, #8|8-49
92326|code|MOV             R0, R5|40-70
92328|code|MOVS            R2, #1|1-34
92330|code|LDR             R3, [R3,#0x30]|27-107
92332|code|BLX             R3|152-71
92334|code|MOV             R4, R0|4-70
92336|code|B               loc_16804|168-231
92338|code|MOV             R3, #0x11E5C|65-246-92-99-192-242-1-3
92346|code|CBZ             R3, loc_168E4|155-177
92348|code|SUBS            R2, #4|4-58
92350|code|DMB.W           SY|191-243-95-143
92354|code|LDREX.W         R3, [R2]|82-232-0-63
92358|code|SUBS            R1, R3, #1|89-30
92360|code|STREX.W         R6, R1, [R2]|66-232-0-22
92364|code|CMP             R6, #0|0-46
92366|code|BNE             loc_168C2|248-209
92368|code|DMB.W           SY|191-243-95-143
92372|code|CMP             R3, #0|0-43
92374|code|BGT             loc_16800|147-220
92376|code|ADD             R1, SP, #0x30+var_28|2-169
92378|code|BLX             _ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|251-247-106-234
92382|code|CMP             R4, #0|0-44
92384|code|BNE             loc_16804|144-209
92386|code|B               loc_16892|214-231
92388|code|LDR.W           R3, [R2,#-4]|82-248-4-60
92392|code|SUBS            R1, R3, #1|89-30
92394|code|STR.W           R1, [R2,#-4]|66-248-4-28
92398|code|B               loc_168D4|241-231
92400|code|MOV             R0, R4|32-70
92402|code|B               loc_16798|81-231
92404|code|LDR             R0, [SP,#0x30+var_24]|3-152
92406|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
92414|code|SUBS            R0, #0xC|12-56
92416|code|CMP             R0, R3|152-66
92418|code|BEQ             loc_1690A|2-208
92420|code|ADD             R1, SP, #0x30+var_28|2-169
92422|code|BL              sub_1518C|254-247-65-252
92426|code|BLX             __cxa_end_cleanup|251-247-204-234
92430|data|ALIGN 0x10|0-191
92432|code|PUSH.W          {R4-R11,LR}|45-233-240-79
92436|code|MOVW            R1, #0x7880|71-246-128-1
92440|code|SUB             SP, SP, #0xC|131-176
92442|code|MOVT.W          R1, #1|192-242-1-1
92446|code|ADD             R2, SP, #0x30+var_2C|1-170
92448|code|MOV             R4, R0|4-70
92450|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-210-234
92454|code|MOVW            R3, #0x7888|71-246-136-3
92458|code|MOVW            R1, #0x78E8|71-246-232-1
92462|code|MOVS            R2, #0x5F ; '_'|95-34
92464|code|MOVT.W          R3, #1|192-242-1-3
92468|code|STR             R2, [R4,#8]|162-96
92470|code|STR             R3, [R4,#4]|99-96
92472|code|ADD.W           R0, R4, #0xC|4-241-12-0
92476|code|ADD             R2, SP, #0x30+var_2C|1-170
92478|code|MOVT.W          R1, #1|192-242-1-1
92482|code|BLX             _ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|251-247-194-234
92486|code|ADD.W           R7, R4, #0x10|4-241-16-7
92490|code|MOVS            R1, #1|1-33
92492|code|MOV             R0, R7|56-70
92494|code|BL              sub_13F60|253-247-7-251
92498|code|MOVS            R0, #0; timer|0-32
92500|code|ADD.W           R6, R4, #0x2000|4-245-0-86
92504|code|BLX             time|251-247-124-235
92508|code|MOVW            R1, #0x7688|71-242-136-97
92512|code|MOV             R5, R6|53-70
92514|code|ADDS            R6, #0x30 ; '0'|48-54
92516|code|ADDS            R5, #0x2C ; ','|44-53
92518|code|MOVW            R3, #0x2030|66-242-48-3
92522|code|MOVT.W          R1, #1|192-242-1-1
92526|code|MOV.W           R12, #0x1D|79-240-29-12
92530|code|MOVS            R2, #0|0-34
92532|code|STR             R2, [R4,R3]|226-80
92534|code|STR             R0, [R4,#0x28]|160-98
92536|code|STR             R2, [R6,#4]|114-96
92538|code|STR             R2, [R6,#8]|178-96
92540|code|STR             R2, [R5,#0x10]|42-97
92542|code|MOV.W           R2, R12,ASR#1|79-234-108-2
92546|code|LDR.W           R0, [R1,R2,LSL#2]|81-248-34-0
92550|code|ADD.W           LR, R1, R2,LSL#2|1-235-130-14
92554|code|CMP             R0, #0x63 ; 'c'|99-40
92556|code|BHI             loc_169A0|8-216
92558|code|B               loc_169E0|39-224
92560|code|ASRS            R3, R2, #1|83-16
92562|code|LDR.W           R0, [R1,R3,LSL#2]|81-248-35-0
92566|code|ADD.W           LR, R1, R3,LSL#2|1-235-131-14
92570|code|CMP             R0, #0x63 ; 'c'|99-40
92572|code|BLS             loc_169E4|34-217
92574|code|MOV             R2, R3|26-70
92576|code|CMP             R2, #0|0-42
92578|code|BGT             loc_16990|245-220
92580|code|LDR             R3, =unk_176FC|52-75
92582|code|CMP             R1, R3|153-66
92584|code|BEQ             loc_16A5E|89-208
92586|code|LDR.W           R8, [R1]|209-248-0-128
92590|code|ADD.W           R9, R5, #4|5-241-4-9
92594|code|CMP.W           R8, #0x40000000|184-241-128-79
92598|code|BCS             loc_16A5E|82-210
92600|code|MOV             R1, R8|65-70
92602|code|CMP.W           R8, #0|184-241-0-15
92606|code|BNE             loc_169F6|26-209
92608|code|MOV             R0, R9|72-70
92610|code|MOV             R2, R8|66-70
92612|code|ADD             R3, SP, #0x30+var_2C|1-171
92614|code|MOVS            R6, #0|0-38
92616|code|STR             R6, [SP,#0x30+var_2C]|1-150
92618|code|BL              sub_16DFC|0-240-23-250
92622|code|MOVS            R1, #0|0-33
92624|code|MOV             R0, R4|32-70
92626|code|STR             R1, [R5,#0x10]|41-97
92628|code|BL              sub_153D4|254-247-254-252
92632|code|MOV             R0, R4|32-70
92634|code|ADD             SP, SP, #0xC|3-176
92636|code|POP.W           {R4-R11,PC}|189-232-240-143
92640|code|MOV             R3, R2|19-70
92642|code|MOV             R2, R12|98-70
92644|code|SUBS            R3, R2, R3|211-26
92646|code|ADD.W           R1, LR, #4|14-241-4-1
92650|code|ADD.W           R12, R3, #0xFFFFFFFF|3-241-255-60
92654|code|CMP.W           R12, #0|188-241-0-15
92658|code|BGT             loc_1697E|196-220
92660|code|B               loc_169A4|214-231
92662|code|MOV.W           R11, R8,LSL#2|79-234-136-11
92666|code|MOV             R0, R11; unsigned int|88-70
92668|code|BLX             _Znwj; operator new(uint)|251-247-224-232
92672|code|MOVW            R3, #0x2030|66-242-48-3
92676|code|MOV             R10, R0|130-70
92678|code|LDR             R0, [R4,R3]; void *|224-88
92680|code|CBZ             R0, loc_16A0E|8-177
92682|code|BLX             _ZdlPv; operator delete(void *)|251-247-28-234
92686|code|MOVW            R2, #0x2030|66-242-48-2
92690|code|ADD.W           R3, R10, R11|10-235-11-3
92694|code|STR.W           R10, [R4,R2]|68-248-2-160
92698|code|MOV             R1, R10|81-70
92700|code|STR             R3, [R6,#8]|179-96
92702|code|STR.W           R10, [R6,#4]|198-248-4-160
92706|code|B               loc_169C0|205-231
92708|code|MOVW            R3, #0x2030|66-242-48-3
92712|code|LDR             R0, [R4,R3]; void *|224-88
92714|code|CBZ             R0, loc_16A30|8-177
92716|code|BLX             _ZdlPv; operator delete(void *)|251-247-10-234
92720|code|MOV             R0, R7|56-70
92722|code|BL              sub_13FC4|253-247-199-250
92726|code|LDR             R0, [R4,#0xC]|224-104
92728|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
92736|code|SUBS            R0, #0xC|12-56
92738|code|CMP             R0, R5|168-66
92740|code|BEQ             loc_16A4C|2-208
92742|code|MOV             R1, SP|105-70
92744|code|BL              sub_1518C|254-247-160-251
92748|code|LDR             R0, [R4]|32-104
92750|code|SUBS            R0, #0xC|12-56
92752|code|CMP             R0, R5|168-66
92754|code|BEQ             loc_16A5A|2-208
92756|code|MOV             R1, SP|105-70
92758|code|BL              sub_1518C|254-247-153-251
92762|code|BLX             __cxa_end_cleanup|251-247-36-234
92766|code|MOV             R0, #aVectorReserve; char *|71-246-96-16-192-242-1-0
92774|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|251-247-42-233
92778|code|B               loc_16A36|228-231
92780|code|MOV             R5, #0x28440|72-242-64-69-192-242-2-5
92788|code|B               loc_16A4C|234-231
92790|data|ALIGN 4|0-191
92792|data|DCD unk_176FC|252-118-1-0
92796|code|PUSH.W          {R4-R9,LR}|45-233-240-67
92800|code|SUB             SP, SP, #0x1C|135-176
92802|code|MOV             R8, R0|128-70
92804|code|LDR             R6, [SP,#0x38+arg_18]|20-158
92806|code|LDR             R4, [SP,#0x38+arg_2C]|25-156
92808|code|LDR             R5, [SP,#0x38+arg_24]|23-157
92810|code|LDRH.W          R7, [SP,#0x38+arg_28]|189-248-96-112
92814|code|STR             R6, [SP,#0x38+var_38]|0-150
92816|code|STR             R4, [SP,#0x38+var_2C]|3-148
92818|code|LDR             R6, [SP,#0x38+arg_0]|14-158
92820|code|LDR             R4, [SP,#0x38+arg_4]|15-156
92822|code|STR             R3, [SP,#0x38+var_30]|2-147
92824|code|MOV             R3, R7|59-70
92826|code|STR             R5, [SP,#0x38+var_34]|1-149
92828|code|CMP             R4, #0|0-44
92830|code|ITE NE|20-191
92832|code|MOVNE           R7, R4|39-70
92834|code|MOVEQ           R7, R6|55-70
92836|code|LDR             R5, [SP,#0x38+arg_8]|16-157
92838|code|LDRB.W          R9, [SP,#0x38+arg_20]|157-248-88-144
92842|code|BL              sub_1371C|252-247-55-254
92846|code|LDR             R2, =off_17708|58-74
92848|code|MOVW            R0, #0x10EC|65-242-236-0
92852|code|LDR             R4, [SP,#0x38+arg_C]|17-156
92854|code|MOVW            LR, #0x10F0|65-242-240-14
92858|code|MOVW            R1, #0x10F4|65-242-244-1
92862|code|MOVW            R3, #0x10E8|65-242-232-3
92866|code|STR.W           R7, [R8,R0]|72-248-0-112
92870|code|LSLS            R5, R5, #0xA|173-2
92872|code|LSLS            R4, R4, #0xA|164-2
92874|code|STR.W           R5, [R8,LR]|72-248-14-80
92878|code|MOV.W           R0, #0x2040; unsigned int|79-244-1-80
92882|code|STR.W           R4, [R8,R1]|72-248-1-64
92886|code|STR.W           R2, [R8]|200-248-0-32
92890|code|STR.W           R6, [R8,R3]|72-248-3-96
92894|code|BLX             _Znwj; operator new(uint)|251-247-112-232
92898|code|MOV             R4, R0|4-70
92900|code|BL              sub_16910|255-247-20-255
92904|code|MOVW            R2, #0x10F8|65-242-248-2
92908|code|MOVW            R3, #0x10FC|65-242-252-3
92912|code|STR.W           R4, [R8,R2]|72-248-2-64
92916|code|MOVS            R0, #0x38 ; '8'; unsigned int|56-32
92918|code|LDR             R2, [SP,#0x38+arg_10]|18-154
92920|code|STR.W           R2, [R8,R3]|72-248-3-32
92924|code|BLX             _Znwj; operator new(uint)|251-247-96-232
92928|code|MOV             R4, R0|4-70
92930|code|BL              sub_130E8|252-247-241-250
92934|code|ADD.W           R3, R8, #0x1100|8-245-136-83
92938|code|LDR             R5, =0x2844C|36-77
92940|code|MOVW            R1, #0x1108|65-242-8-17
92944|code|MOVW            R2, #0x1104|65-242-4-18
92948|code|STR             R4, [R3]|28-96
92950|code|MOVS            R0, #0; timer|0-32
92952|code|LDR             R3, [SP,#0x38+arg_1C]|21-155
92954|code|MOVW            R6, #0x8889|72-246-137-6
92958|code|STR.W           R5, [R8,R1]|72-248-1-80
92962|code|MOVT.W          R6, #0x8888|200-246-136-6
92966|code|MOVW            R5, #0x110C|65-242-12-21
92970|code|STR.W           R3, [R8,R2]|72-248-2-48
92974|code|BLX             time|251-247-146-234
92978|code|MOVW            R2, #0x1110|65-242-16-18
92982|code|STRB.W          R9, [R8,R2]|8-248-2-144
92986|code|MOVS            R1, #0|0-33
92988|code|LDR             R2, [SP,#0x38+arg_14]|19-154
92990|code|SMULL.W         R6, R7, R0, R6|128-251-6-103
92994|code|MOV             R3, R0|3-70
92996|code|ASRS            R4, R0, #0x1F|196-23
92998|code|MOV             R0, R8|64-70
93000|code|ADD             R3, R7|59-68
93002|code|RSB.W           R3, R4, R3,ASR#5|196-235-99-19
93006|code|ADDS            R3, #1|1-51
93008|code|RSB.W           R3, R3, R3,LSL#4|195-235-3-19
93012|code|LSLS            R3, R3, #2|155-0
93014|code|STR.W           R3, [R8,R5]|72-248-5-48
93018|code|BL              sub_12E6C|252-247-135-249
93022|code|MOV             R0, R8|64-70
93024|code|ADD             SP, SP, #0x1C|7-176
93026|code|POP.W           {R4-R9,PC}|189-232-240-131
93030|code|MOV             R0, R8|64-70
93032|code|BL              sub_138CC|252-247-176-254
93036|code|BLX             __cxa_end_cleanup|251-247-154-233
93040|code|MOVW            R2, #0x1108|65-242-8-18
93044|code|MOVW            R3, #0x8440|72-242-64-67
93048|code|LDR.W           R0, [R8,R2]|88-248-2-0
93052|code|MOVT.W          R3, #2|192-242-2-3
93056|code|SUBS            R0, #0xC|12-56
93058|code|CMP             R0, R3|152-66
93060|code|BEQ             loc_16B66|239-208
93062|code|ADD             R1, SP, #arg_14|5-169
93064|code|BL              sub_1518C|254-247-0-251
93068|code|B               loc_16B66|235-231
93070|code|MOV             R0, R4; void *|32-70
93072|code|BLX             _ZdlPv; operator delete(void *)|251-247-88-233
93076|code|B               loc_16B66|231-231
93078|code|B               loc_16B8E|250-231
93080|data|DCD off_17708|8-119-1-0
93084|data|DCD 0x2844C|76-132-2-0
93088|code|PUSH            {R3-R5,LR}|56-181
93090|code|MOVW            R1, #0x10F8|65-242-248-1
93094|code|LDR             R3, [R0]|3-104
93096|code|MOVS            R2, #1|1-34
93098|code|LDR             R1, [R0,R1]|65-88
93100|code|MOV             R4, R0|4-70
93102|code|LDR             R3, [R3,#0x30]|27-107
93104|code|BLX             R3|152-71
93106|code|MOV             R5, R0|5-70
93108|code|MOV             R0, R4|32-70
93110|code|BL              sub_13570|252-247-219-252
93114|code|ORRS            R0, R5|40-67
93116|code|POP             {R3-R5,PC}|56-189
93118|data|ALIGN 0x10|0-191
93120|code|B.W             sub_1567C|254-247-92-189
93124|code|PUSH            {R4,R5,LR}|48-181
93126|code|MOV             R5, R2|21-70
93128|code|MOV             R4, R0|4-70
93130|code|SUB             SP, SP, #0xC|131-176
93132|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-160-232
93136|code|MOV             R0, R4; this|32-70
93138|code|MOV             R1, R5; std::string *|41-70
93140|code|BLX             _ZNSs6appendERKSs; std::string::append(std::string const&)|251-247-90-233
93144|code|MOV             R0, R4|32-70
93146|code|ADD             SP, SP, #0xC|3-176
93148|code|POP             {R4,R5,PC}|48-189
93150|code|LDR             R0, [R4]|32-104
93152|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
93160|code|SUBS            R0, #0xC|12-56
93162|code|CMP             R0, R3|152-66
93164|code|BEQ             loc_16BF4|2-208
93166|code|ADD             R1, SP, #arg_4|1-169
93168|code|BL              sub_1518C|254-247-204-250
93172|code|BLX             __cxa_end_cleanup|251-247-86-233
93176|code|PUSH            {R4,R5,LR}|48-181
93178|code|MOV             R5, R2|21-70
93180|code|SUB             SP, SP, #0xC|131-176
93182|code|MOV             R4, R0|4-70
93184|code|BLX             _ZNSsC1ERKSs; std::string::string(std::string const&)|251-247-134-232
93188|code|MOV             R0, R5; s|40-70
93190|code|BLX             strlen|251-247-216-233
93194|code|MOV             R1, R5; char *|41-70
93196|code|MOV             R2, R0; unsigned int|2-70
93198|code|MOV             R0, R4; this|32-70
93200|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|251-247-78-233
93204|code|MOV             R0, R4|32-70
93206|code|ADD             SP, SP, #0xC|3-176
93208|code|POP             {R4,R5,PC}|48-189
93210|code|LDR             R0, [R4]|32-104
93212|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
93220|code|SUBS            R0, #0xC|12-56
93222|code|CMP             R0, R3|152-66
93224|code|BEQ             loc_16C30|2-208
93226|code|ADD             R1, SP, #arg_4|1-169
93228|code|BL              sub_1518C|254-247-174-250
93232|code|BLX             __cxa_end_cleanup|251-247-56-233
93236|code|PUSH            {R4-R7,LR}|240-181
93238|code|MOV             R4, R0|4-70
93240|code|SUB             SP, SP, #0xC|131-176
93242|code|MOV             R0, R1; s|8-70
93244|code|MOV             R7, R1|15-70
93246|code|MOV             R5, R2|21-70
93248|code|BLX             strlen|251-247-186-233
93252|code|LDR             R3, =0x2844C|17-75
93254|code|STR             R3, [R4]|35-96
93256|code|LDR             R3, [R5]|43-104
93258|code|LDR.W           R1, [R3,#-0xC]|83-248-12-28
93262|code|MOV             R6, R0|6-70
93264|code|MOV             R0, R4; this|32-70
93266|code|ADD             R1, R6; unsigned int|49-68
93268|code|BLX             _ZNSs7reserveEj; std::string::reserve(uint)|251-247-134-232
93272|code|MOV             R0, R4; this|32-70
93274|code|MOV             R1, R7; char *|57-70
93276|code|MOV             R2, R6; unsigned int|50-70
93278|code|BLX             _ZNSs6appendEPKcj; std::string::append(char const*,uint)|251-247-40-233
93282|code|MOV             R0, R4; this|32-70
93284|code|MOV             R1, R5; std::string *|41-70
93286|code|BLX             _ZNSs6appendERKSs; std::string::append(std::string const&)|251-247-18-233
93290|code|MOV             R0, R4|32-70
93292|code|ADD             SP, SP, #0xC|3-176
93294|code|POP             {R4-R7,PC}|240-189
93296|code|LDR             R0, [R4]|32-104
93298|code|MOV             R3, #0x28440|72-242-64-67-192-242-2-3
93306|code|SUBS            R0, #0xC|12-56
93308|code|CMP             R0, R3|152-66
93310|code|BEQ             loc_16C86|2-208
93312|code|ADD             R1, SP, #arg_4|1-169
93314|code|BL              sub_1518C|254-247-131-250
93318|code|BLX             __cxa_end_cleanup|251-247-14-233
93322|data|ALIGN 4|0-191
93324|data|DCD 0x2844C|76-132-2-0
93328|code|PUSH.W          {R4-R11,LR}|45-233-240-79
93332|code|SUB             SP, SP, #0xC|131-176
93334|code|LDR             R5, [R0,#4]|69-104
93336|code|LDR             R3, [R0,#8]|131-104
93338|code|SUBS            R3, R3, R5|91-27
93340|code|MOV.W           R9, R3,ASR#2|79-234-163-9
93344|code|CMP             R1, R9|73-69
93346|code|BLS             loc_16CE0|29-217
93348|code|MOVW            R4, #0x7688|71-242-136-100
93352|code|MOVS            R7, #0x1D|29-39
93354|code|MOVT.W          R4, #1|192-242-1-4
93358|code|ASRS            R2, R7, #1|122-16
93360|code|LDR.W           R6, [R4,R2,LSL#2]|84-248-34-96
93364|code|ADD.W           LR, R4, R2,LSL#2|4-235-130-14
93368|code|CMP             R1, R6|177-66
93370|code|BLS             loc_16CCE|8-217
93372|code|B               loc_16CE6|19-224
93374|code|ASRS            R3, R2, #1|83-16
93376|code|LDR.W           R7, [R4,R3,LSL#2]|84-248-35-112
93380|code|ADD.W           LR, R4, R3,LSL#2|4-235-131-14
93384|code|CMP             R1, R7|185-66
93386|code|BHI             loc_16CEA|14-216
93388|code|MOV             R2, R3|26-70
93390|code|CMP             R2, #0|0-42
93392|code|BGT             loc_16CBE|245-220
93394|code|LDR             R3, =unk_176FC|45-75
93396|code|MOV             R6, R0|6-70
93398|code|CMP             R4, R3|156-66
93400|code|BEQ             loc_16D7C|80-208
93402|code|LDR             R7, [R4]|39-104
93404|code|CMP             R9, R7|185-69
93406|code|BCC             loc_16CF8|11-211
93408|code|ADD             SP, SP, #0xC|3-176
93410|code|POP.W           {R4-R11,PC}|189-232-240-143
93414|code|MOV             R3, R2|19-70
93416|code|MOV             R2, R7|58-70
93418|code|SUBS            R3, R2, R3|211-26
93420|code|ADD.W           R4, LR, #4|14-241-4-4
93424|code|SUBS            R7, R3, #1|95-30
93426|code|CMP             R7, #0|0-47
93428|code|BGT             loc_16CAE|219-220
93430|code|B               loc_16CD2|236-231
93432|code|CBNZ            R7, loc_16D56|111-187
93434|code|MOV             R10, R7|186-70
93436|code|STR             R7, [SP,#0x30+var_2C]|1-151
93438|code|CMP.W           R9, #0|185-241-0-15
93442|code|BEQ             loc_16D3C|27-208
93444|code|MOV.W           R8, #0|79-240-0-8
93448|code|LDR.W           R4, [R5,R8,LSL#2]|85-248-40-64
93452|code|MOV.W           R11, R8,LSL#2|79-234-136-11
93456|code|CBZ             R4, loc_16D34|132-177
93458|code|LDR             R0, [R4,#4]|96-104
93460|code|MOV             R1, R7|57-70
93462|code|BLX             __aeabi_uidivmod|250-247-186-239
93466|code|LDR             R2, [R4]|34-104
93468|code|STR.W           R2, [R5,R11]|69-248-11-32
93472|code|LDR.W           R2, [R10,R1,LSL#2]|90-248-33-32
93476|code|STR             R2, [R4]|34-96
93478|code|STR.W           R4, [R10,R1,LSL#2]|74-248-33-64
93482|code|LDR             R5, [R6,#4]|117-104
93484|code|LDR.W           R4, [R5,R11]|85-248-11-64
93488|code|CMP             R4, #0|0-44
93490|code|BNE             loc_16D12|238-209
93492|code|ADD.W           R8, R8, #1|8-241-1-8
93496|code|CMP             R8, R9|200-69
93498|code|BNE             loc_16D08|229-209
93500|code|LDR             R3, [SP,#0x30+var_2C]|1-155
93502|code|STR.W           R10, [R6,#4]|198-248-4-160
93506|code|STR             R3, [R6,#8]|179-96
93508|code|STR             R3, [R6,#0xC]|243-96
93510|code|CMP             R5, #0|0-45
93512|code|BEQ             loc_16CE0|202-208
93514|code|MOV             R0, R5; void *|40-70
93516|code|ADD             SP, SP, #0xC|3-176
93518|code|POP.W           {R4-R11,LR}|189-232-240-79
93522|code|B.W             j__ZdlPv; operator delete(void *)|251-247-117-184
93526|code|CMP.W           R7, #0x40000000|183-241-128-79
93530|code|BCS             loc_16D82|18-210
93532|code|LSLS            R4, R7, #2|188-0
93534|code|MOV             R0, R4; unsigned int|32-70
93536|code|BLX             _Znwj; operator new(uint)|250-247-46-239
93540|code|MOV             R2, R7|58-70
93542|code|ADDS            R3, R0, R4|3-25
93544|code|MOV             R10, R0|130-70
93546|code|MOV             R1, R0|1-70
93548|code|MOVS            R0, #0|0-32
93550|code|STR             R3, [SP,#0x30+var_2C]|1-147
93552|code|SUBS            R2, #1|1-58
93554|code|STR.W           R0, [R1],#4|65-248-4-11
93558|code|BNE             loc_16D70|251-209
93560|code|LDR             R5, [R6,#4]|117-104
93562|code|B               loc_16CFE|192-231
93564|code|CMN.W           R9, #6|25-241-6-15
93568|code|BHI             loc_16CE0|174-216
93570|code|BLX             _ZSt17__throw_bad_allocv; std::__throw_bad_alloc(void)|250-247-108-239
93574|data|ALIGN 4|0-191
93576|data|DCD unk_176FC|252-118-1-0
93580|code|PUSH.W          {R4-R8,LR}|45-233-240-65
93584|code|MOV             R7, R1|15-70
93586|code|LDR             R1, [R0,#0x10]|1-105
93588|code|MOV             R5, R0|5-70
93590|code|ADDS            R1, #1|1-49
93592|code|BL              sub_16C90|255-247-122-255
93596|code|LDR             R6, [R5,#4]|110-104
93598|code|LDR             R3, [R5,#8]|171-104
93600|code|LDR             R4, [R7]|60-104
93602|code|SUBS            R1, R3, R6|153-27
93604|code|MOV             R0, R4|32-70
93606|code|ASRS            R1, R1, #2|137-16
93608|code|BLX             __aeabi_uidivmod|250-247-112-239
93612|code|LDR.W           R6, [R6,R1,LSL#2]|86-248-33-96
93616|code|MOV             R8, R1|136-70
93618|code|CBZ             R6, loc_16DCA|86-177
93620|code|LDR             R3, [R6,#4]|115-104
93622|code|CMP             R3, R4|163-66
93624|code|MOV             R3, R6|51-70
93626|code|BNE             loc_16DC4|3-209
93628|code|B               loc_16DF2|25-224
93630|code|LDR             R2, [R3,#4]|90-104
93632|code|CMP             R2, R4|162-66
93634|code|BEQ             loc_16DF2|22-208
93636|code|LDR             R3, [R3]|27-104
93638|code|CMP             R3, #0|0-43
93640|code|BNE             loc_16DBE|249-209
93642|code|MOVS            R0, #0xC; unsigned int|12-32
93644|code|BLX             _Znwj; operator new(uint)|250-247-248-238
93648|code|LDR             R2, [R5,#0x10]|42-105
93650|code|ADDS            R2, #1|1-50
93652|code|MOV             R4, R0|4-70
93654|code|LDM.W           R7, {R0,R1}|151-232-3-0
93658|code|ADDS            R7, R4, #4|39-29
93660|code|STM.W           R7, {R0,R1}|135-232-3-0
93664|code|MOV             R3, R7|59-70
93666|code|STR             R6, [R4]|38-96
93668|code|MOV             R0, R3|24-70
93670|code|LDR             R1, [R5,#4]|105-104
93672|code|STR.W           R4, [R1,R8,LSL#2]|65-248-40-64
93676|code|STR             R2, [R5,#0x10]|42-97
93678|code|POP.W           {R4-R8,PC}|189-232-240-129
93682|code|ADDS            R3, #4|4-51
93684|code|MOV             R0, R3|24-70
93686|code|POP.W           {R4-R8,PC}|189-232-240-129
93690|data|ALIGN 4|0-191
93692|code|CBZ             R2, locret_16E5C|114-179
93694|code|PUSH.W          {R4-R10,LR}|45-233-240-71
93698|code|MOV             R6, R3|30-70
93700|code|LDR             R7, [R0,#4]|71-104
93702|code|MOV             R5, R2|21-70
93704|code|LDR             R3, [R0,#8]|131-104
93706|code|MOV             R8, R0|128-70
93708|code|MOV             R9, R1|137-70
93710|code|SUBS            R3, R3, R7|219-27
93712|code|CMP.W           R2, R3,ASR#2|178-235-163-15
93716|code|BHI             loc_16E94|62-216
93718|code|RSB.W           R10, R1, R7|193-235-7-10
93722|code|MOV             R4, R1|12-70
93724|code|LDR             R6, [R6]|54-104
93726|code|MOV.W           R2, R10,ASR#2|79-234-170-2
93730|code|CMP             R5, R2|149-66
93732|code|BCS             loc_16E5E|27-210
93734|code|LSLS            R5, R5, #2|173-0
93736|code|RSB.W           R10, R5, R7|197-235-7-10
93740|code|RSB.W           R2, R10, R7; n|202-235-7-2
93744|code|LSRS            R3, R2, #2|147-8
93746|code|IT EQ|8-191
93748|code|MOVEQ           R3, R7|59-70
93750|code|BNE             loc_16F24|117-209
93752|code|RSB.W           R2, R9, R10; n|201-235-10-2
93756|code|ADD             R3, R5|43-68
93758|code|STR.W           R3, [R8,#4]|200-248-4-48
93762|code|LSRS            R3, R2, #2|147-8
93764|code|BNE             loc_16F1A|105-209
93766|code|ADD             R5, R9|77-68
93768|code|CMP             R9, R5|169-69
93770|code|BEQ             locret_16E58|5-208
93772|code|STR.W           R6, [R4],#4|68-248-4-107
93776|code|CMP             R5, R4|165-66
93778|code|BNE             loc_16E4C|251-209
93780|code|POP.W           {R4-R10,PC}|189-232-240-135
93784|code|POP.W           {R4-R10,PC}|189-232-240-135
93788|code|BX              LR|112-71
93790|code|SUBS            R0, R5, R2|168-26
93792|code|BEQ             loc_16F56|121-208
93794|code|MOV             R3, R0|3-70
93796|code|MOV             R1, R7|57-70
93798|code|SUBS            R3, #1|1-59
93800|code|STR.W           R6, [R1],#4|65-248-4-107
93804|code|BNE             loc_16E66|251-209
93806|code|LDR.W           R3, [R8,#4]|216-248-4-48
93810|code|ADD.W           R0, R3, R0,LSL#2; dest|3-235-128-0
93814|code|STR.W           R0, [R8,#4]|200-248-4-0
93818|code|CMP             R2, #0|0-42
93820|code|BNE             loc_16F32|89-209
93822|code|CMP             R7, R9|79-69
93824|code|ADD             R0, R10|80-68
93826|code|STR.W           R0, [R8,#4]|200-248-4-0
93830|code|BEQ             locret_16E58|231-208
93832|code|STR.W           R6, [R4],#4|68-248-4-107
93836|code|CMP             R7, R4|167-66
93838|code|BNE             loc_16E88|251-209
93840|code|POP.W           {R4-R10,PC}|189-232-240-135
93844|code|LDR             R2, [R0]|2-104
93846|code|MOV             R3, #0x3FFFFFFF|79-246-255-115-195-246-255-115
93854|code|MOV             R1, #0x3FFFFFFF|111-240-64-65
93858|code|SUBS            R7, R7, R2|191-26
93860|code|ASRS            R7, R7, #2|191-16
93862|code|SUBS            R3, R3, R7|219-27
93864|code|CMP             R5, R3|157-66
93866|code|BHI             loc_16F66|92-216
93868|code|CMP             R7, R5|175-66
93870|code|ITE CS|44-191
93872|code|ADDCS           R3, R7, R7|251-25
93874|code|ADDCC           R3, R7, R5|123-25
93876|code|CMP             R3, R1|139-66
93878|code|IT LS|152-191
93880|code|CMPLS           R7, R3|159-66
93882|code|ITT HI|132-191
93884|code|RSBHI.W         R4, R2, R9|194-235-9-4
93888|code|MOVHI           R7, #0xFFFFFFFC|111-240-3-7
93892|code|BLS             loc_16F5A|73-217
93894|code|MOV             R0, R7; unsigned int|56-70
93896|code|BLX             _Znwj; operator new(uint)|250-247-122-238
93900|code|MOV             R10, R0|130-70
93902|code|LDR             R1, [R6]|49-104
93904|code|ADD.W           R2, R10, R4|10-235-4-2
93908|code|MOV             R3, R5|43-70
93910|code|SUBS            R3, #1|1-59
93912|code|STR.W           R1, [R2],#4|66-248-4-27
93916|code|BNE             loc_16ED6|251-209
93918|code|LDR.W           R1, [R8]; src|216-248-0-16
93922|code|RSB.W           R4, R1, R9|193-235-9-4
93926|code|LSRS            R3, R4, #2|163-8
93928|code|BNE             loc_16F4C|48-209
93930|code|LDR.W           R3, [R8,#4]|216-248-4-48
93934|code|ADD.W           R5, R4, R5,LSL#2|4-235-133-5
93938|code|ADD             R5, R10|85-68
93940|code|RSB.W           R4, R9, R3|201-235-3-4
93944|code|LSRS            R3, R4, #2|163-8
93946|code|BNE             loc_16F40|33-209
93948|code|LDR.W           R0, [R8]; void *|216-248-0-0
93952|code|ADD             R5, R4|37-68
93954|code|CBZ             R0, loc_16F08|8-177
93956|code|BLX             _ZdlPv; operator delete(void *)|250-247-158-239
93960|code|ADD             R7, R10|87-68
93962|code|STR.W           R10, [R8]|200-248-0-160
93966|code|STR.W           R7, [R8,#8]|200-248-8-112
93970|code|STR.W           R5, [R8,#4]|200-248-4-80
93974|code|POP.W           {R4-R10,PC}|189-232-240-135
93978|code|SUBS            R0, R7, R2; dest|184-26
93980|code|MOV             R1, R9; src|73-70
93982|code|BLX             memmove|250-247-102-239
93986|code|B               loc_16E46|144-231
93988|code|MOV             R0, R7; dest|56-70
93990|code|MOV             R1, R10; src|81-70
93992|code|BLX             memmove|250-247-96-239
93996|code|LDR.W           R3, [R8,#4]|216-248-4-48
94000|code|B               loc_16E38|130-231
94002|code|MOV             R1, R9; src|73-70
94004|code|MOV             R2, R10; n|82-70
94006|code|BLX             memmove|250-247-90-239
94010|code|LDR.W           R0, [R8,#4]|216-248-4-0
94014|code|B               loc_16E7E|158-231
94016|code|MOV             R1, R9; src|73-70
94018|code|MOV             R0, R5; dest|40-70
94020|code|MOV             R2, R4; n|34-70
94022|code|BLX             memmove|250-247-82-239
94026|code|B               loc_16EFC|215-231
94028|code|MOV             R0, R10; dest|80-70
94030|code|MOV             R2, R4; n|34-70
94032|code|BLX             memmove|250-247-76-239
94036|code|B               loc_16EEA|201-231
94038|code|MOV             R3, R7|59-70
94040|code|B               loc_16E72|139-231
94042|code|RSB.W           R4, R2, R9|194-235-9-4
94046|code|CBNZ            R3, loc_16F72|67-185
94048|code|MOV             R7, R3|31-70
94050|code|MOV             R10, R3|154-70
94052|code|B               loc_16ECE|179-231
94054|code|MOV             R0, #aVectorMFillIns; char *|71-246-104-0-192-242-1-0
94062|code|BLX             _ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|250-247-166-238
94066|code|LSLS            R7, R3, #2|159-0
94068|code|B               loc_16EC6|167-231
94070|data|ALIGN 4|0-191
94072|code|PUSH.W          {R3-R9,LR}|45-233-248-67
94076|code|MOV             R7, R0|7-70
94078|code|LDR             R6, =(off_28110 - 0x16F8A)|12-78
94080|code|MOV             R8, R1|136-70
94082|code|LDR             R5, =(off_2810C - 0x16F90)|12-77
94084|code|MOV             R9, R2|145-70
94086|code|ADD             R6, PC; off_28110|126-68
94088|code|BLX             .init_proc|250-247-10-238
94092|code|ADD             R5, PC; off_2810C|125-68
94094|code|SUBS            R6, R6, R5|118-27
94096|code|ASRS            R6, R6, #2|182-16
94098|code|BEQ             locret_16FAA|10-208
94100|code|SUBS            R5, #4|4-61
94102|code|MOVS            R4, #0|0-36
94104|code|ADDS            R4, #1|1-52
94106|code|LDR.W           R3, [R5,#4]!|85-248-4-63
94110|code|MOV             R0, R7|56-70
94112|code|MOV             R1, R8|65-70
94114|code|MOV             R2, R9|74-70
94116|code|BLX             R3|152-71
94118|code|CMP             R4, R6|180-66
94120|code|BNE             loc_16F98|246-209
94122|code|POP.W           {R3-R9,PC}|189-232-248-131
94126|data|ALIGN 0x10|0-191
94128|data|DCD off_28110 - 0x16F8A|134-17-1-0
94132|data|DCD off_2810C - 0x16F90|124-17-1-0
94136|code|BX              LR|112-71
94138|data|ALIGN 4|0-191
94140|code|PUSH            {R3,LR}; _fini|8-64-45-233
94144|code|POP             {R3,PC}|8-128-189-232
94148|data|ALIGN 8|0-0-0-0
164108|data|DCD sub_1261C+1|29-38-1-0
164112|data|DCD sub_12604+1|5-38-1-0
164116|data|DCD 0|0-0-0-0
164120|data|Elf32_Dyn <1, <1>>; DT_NEEDED libstdc++.so.6|1-0-0-0-1-0-0-0
164128|data|Elf32_Dyn <1, <0x2F8>>; DT_NEEDED libpthread.so.0|1-0-0-0-248-2-0-0
164136|data|Elf32_Dyn <1, <0x449>>; DT_NEEDED libgnutls-deb0.so.28|1-0-0-0-73-4-0-0
164144|data|Elf32_Dyn <1, <0x595>>; DT_NEEDED libm.so.6|1-0-0-0-149-5-0-0
164152|data|Elf32_Dyn <1, <0x59F>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-159-5-0-0
164160|data|Elf32_Dyn <1, <0x5FC>>; DT_NEEDED libc.so.6|1-0-0-0-252-5-0-0
164168|data|Elf32_Dyn <0xC, <0x11BA0>>; DT_INIT|12-0-0-0-160-27-1-0
164176|data|Elf32_Dyn <0xD, <0x16FBC>>; DT_FINI|13-0-0-0-188-111-1-0
164184|data|Elf32_Dyn <0x19, <0x2810C>>; DT_INIT_ARRAY|25-0-0-0-12-129-2-0
164192|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
164200|data|Elf32_Dyn <0x1A, <0x28110>>; DT_FINI_ARRAY|26-0-0-0-16-129-2-0
164208|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
164216|data|Elf32_Dyn <0x6FFFFEF5, <0x10194>>; DT_GNU_HASH|245-254-255-111-148-1-1-0
164224|data|Elf32_Dyn <5, <0x10E18>>; DT_STRTAB|5-0-0-0-24-14-1-0
164232|data|Elf32_Dyn <6, <0x105A8>>; DT_SYMTAB|6-0-0-0-168-5-1-0
164240|data|Elf32_Dyn <0xA, <0x80F>>; DT_STRSZ|10-0-0-0-15-8-0-0
164248|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
164256|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
164264|data|Elf32_Dyn <3, <0x28228>>; DT_PLTGOT|3-0-0-0-40-130-2-0
164272|data|Elf32_Dyn <2, <0x380>>; DT_PLTRELSZ|2-0-0-0-128-3-0-0
164280|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
164288|data|Elf32_Dyn <0x17, <0x11820>>; DT_JMPREL|23-0-0-0-32-24-1-0
164296|data|Elf32_Dyn <0x11, <0x117E8>>; DT_REL|17-0-0-0-232-23-1-0
164304|data|Elf32_Dyn <0x12, <0x38>>; DT_RELSZ|18-0-0-0-56-0-0-0
164312|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
164320|data|Elf32_Dyn <0x6FFFFFFE, <0x11738>>; DT_VERNEED|254-255-255-111-56-23-1-0
164328|data|Elf32_Dyn <0x6FFFFFFF, <5>>; DT_VERNEEDNUM|255-255-255-111-5-0-0-0
164336|data|Elf32_Dyn <0x6FFFFFF0, <0x11628>>; DT_VERSYM|240-255-255-111-40-22-1-0
164344|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
164392|data|DCD stru_28118|24-129-2-0
164396|data|DCD 0|0-0-0-0
164400|data|DCD 0|0-0-0-0
164404|data|DCD __imp__Znwj; operator new(uint)|44-134-2-0
164408|data|DCD __imp_pthread_mutex_lock|204-133-2-0
164412|data|DCD __imp_pthread_mutex_init|136-134-2-0
164416|data|DCD __imp_gnutls_set_default_priority|160-133-2-0
164420|data|DCD __imp_rand|72-134-2-0
164424|data|DCD __imp_gettimeofday|240-133-2-0
164428|data|DCD __imp__ZNSs12_M_leak_hardEv; std::string::_M_leak_hard(void)|156-133-2-0
164432|data|DCD __imp_strcasecmp|12-134-2-0
164436|data|DCD __imp_fdopen|16-134-2-0
164440|data|DCD __imp_strtol|188-133-2-0
164444|data|DCD __imp_free|64-134-2-0
164448|data|DCD __imp_pthread_mutexattr_init|212-133-2-0
164452|data|DCD __imp_pthread_mutexattr_destroy|32-133-2-0
164456|data|DCD __imp__ZSt17__throw_bad_allocv; std::__throw_bad_alloc(void)|180-133-2-0
164460|data|DCD __imp_strncmp|240-132-2-0
164464|data|DCD __imp_regcomp|128-134-2-0
164468|data|DCD __imp___cxa_begin_catch|52-134-2-0
164472|data|DCD __imp___aeabi_uidivmod|192-133-2-0
164476|data|DCD __imp_pthread_join|120-133-2-0
164480|data|DCD __imp_exit|40-133-2-0
164484|data|DCD __imp_printf|164-133-2-0
164488|data|DCD __imp__ZSt20__throw_length_errorPKc; std::__throw_length_error(char const*)|216-133-2-0
164492|data|DCD __imp_regfree|52-133-2-0
164496|data|DCD __imp_puts|248-133-2-0
164500|data|DCD __imp_gnutls_deinit|124-133-2-0
164504|data|DCD __imp_gethostbyaddr|16-133-2-0
164508|data|DCD __imp_strtok|184-133-2-0
164512|data|DCD __imp_perror|60-133-2-0
164516|data|DCD __imp__ZNSsC1ERKSs; std::string::string(std::string const&)|76-134-2-0
164520|data|DCD __imp_regexec|236-132-2-0
164524|data|DCD __imp_nanosleep|128-133-2-0
164528|data|DCD __imp_strftime|44-133-2-0
164532|data|DCD __imp_putchar|220-133-2-0
164536|data|DCD __imp_memset|24-134-2-0
164540|data|DCD __imp_snprintf|220-132-2-0
164544|data|DCD __imp__ZNSs7reserveEj; std::string::reserve(uint)|84-134-2-0
164548|data|DCD __imp_pthread_mutex_trylock|80-134-2-0
164552|data|DCD __imp_close|92-133-2-0
164556|data|DCD __imp_fopen|72-133-2-0
164560|data|DCD __imp__Znaj; operator new[](uint)|104-133-2-0
164564|data|DCD __imp_read|108-133-2-0
164568|data|DCD __imp__ZNSs4_Rep10_M_destroyERKSaIcE; std::string::_Rep::_M_destroy(std::allocator<char> const&)|196-133-2-0
164572|data|DCD __imp_abort|80-133-2-0
164576|data|DCD __imp_gnutls_check_version|36-134-2-0
164580|data|DCD __imp_poll|168-133-2-0
164584|data|DCD __imp_gnutls_global_init|252-132-2-0
164588|data|DCD __imp_memmove|224-133-2-0
164592|data|DCD __imp_gethostbyname|28-134-2-0
164596|data|DCD __imp_localtime|228-133-2-0
164600|data|DCD __imp_gmtime_r|0-134-2-0
164604|data|DCD __imp_inet_ntoa|132-133-2-0
164608|data|DCD __imp_strcpy|244-132-2-0
164612|data|DCD __imp_pthread_attr_setdetachstate|200-133-2-0
164616|data|DCD __imp__ZdlPv; operator delete(void *)|92-134-2-0
164620|data|DCD __imp_getopt|116-133-2-0
164624|data|DCD __imp___pthread_key_create|232-133-2-0
164628|data|DCD __imp_bind|112-134-2-0
164632|data|DCD __imp_pthread_mutex_destroy|24-133-2-0
164636|data|DCD __imp_gnutls_transport_set_ptr|248-132-2-0
164640|data|DCD __imp__ZNSs6appendERKSs; std::string::append(std::string const&)|208-133-2-0
164644|data|DCD __imp_gnutls_record_send|88-134-2-0
164648|data|DCD __imp___cxa_end_cleanup|252-133-2-0
164652|data|DCD __imp__ZNSs6appendEPKcj; std::string::append(char const*,uint)|100-134-2-0
164656|data|DCD __imp_socket|116-134-2-0
164660|data|DCD __imp__ZNSsC1EPKcRKSaIcE; std::string::string(char const*,std::allocator<char> const&)|152-133-2-0
164664|data|DCD __imp_gnutls_priority_set_direct|68-134-2-0
164668|data|DCD __imp_gnutls_anon_allocate_client_credentials|172-133-2-0
164672|data|DCD __imp__ZNSs6assignERKSs; std::string::assign(std::string const&)|236-133-2-0
164676|data|DCD __imp_pthread_attr_destroy|32-134-2-0
164680|data|DCD __imp_sleep|48-133-2-0
164684|data|DCD __imp___aeabi_idivmod|8-134-2-0
164688|data|DCD __imp_pthread_attr_setstacksize|4-134-2-0
164692|data|DCD __imp_connect|136-133-2-0
164696|data|DCD __imp_sigaction|148-133-2-0
164700|data|DCD __imp_pthread_attr_init|8-133-2-0
164704|data|DCD __imp_gnutls_anon_free_client_credentials|64-133-2-0
164708|data|DCD __imp_gnutls_credentials_set|124-134-2-0
164712|data|DCD __imp__ZNSs6assignEPKc; std::string::assign(char const*)|104-134-2-0
164716|data|DCD __imp_fgets|224-132-2-0
164720|data|DCD __imp_gnutls_bye|244-133-2-0
164724|data|DCD __imp___cxa_rethrow|112-133-2-0
164728|data|DCD __imp_fwrite|140-133-2-0
164732|data|DCD __imp_memcpy|96-134-2-0
164736|data|DCD __imp_malloc|120-134-2-0
164740|data|DCD __imp_strlen|76-133-2-0
164744|data|DCD __imp_gnutls_init|12-133-2-0
164748|data|DCD __imp_fprintf|28-133-2-0
164752|data|DCD __imp_fclose|20-134-2-0
164756|data|DCD __imp_write|208-132-2-0
164760|data|DCD __imp_sprintf|48-134-2-0
164764|data|DCD __imp___cxa_end_catch|20-133-2-0
164768|data|DCD __imp_random|176-133-2-0
164772|data|DCD __imp___gxx_personality_v0|84-133-2-0
164776|data|DCD __imp_gnutls_handshake|40-134-2-0
164780|data|DCD __imp_pthread_create|56-133-2-0
164784|data|DCD __imp_strcmp|212-132-2-0
164788|data|DCD __imp_pthread_mutexattr_settype|228-132-2-0
164792|data|DCD __imp_time|88-133-2-0
164796|data|DCD __imp___errno_location|68-133-2-0
164800|data|DCD __imp_strncpy|36-133-2-0
164804|data|DCD __imp_fflush|216-132-2-0
164808|data|DCD __imp__ZNSs6appendEPKc; std::string::append(char const*)|56-134-2-0
164812|data|DCD __imp_getsockname|0-133-2-0
164816|data|DCD __imp_gnutls_record_recv|60-134-2-0
164820|data|DCD __imp___libc_start_main|4-133-2-0
164824|data|DCD __imp___gmon_start__|148-134-2-0
164828|data|DCD __imp___cxa_pure_virtual|108-134-2-0
164832|data|DCD __imp_strchr|96-133-2-0
164836|data|DCD __imp_pthread_mutex_unlock|100-133-2-0
164840|data|DCD __imp_strdup|132-134-2-0
164844|data|DCD __imp_pipe|144-133-2-0
164848|data|DCD __imp__ZNSs6appendEjc; std::string::append(uint,char)|232-132-2-0
164852|data|DCD __imp___gmon_start__|148-134-2-0
