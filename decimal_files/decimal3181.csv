address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD _start+1; Entry point|37-43-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x71C0; SHT file offset|192-113-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1C; Number of entries in SHT|28-0
50|data|DCW 0x1B; SHT entry index for string table|27-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x656C; File offset|108-101-0-0
60|data|DCD unk_656C; Virtual address|108-101-0-0
64|data|DCD 0x656C; Physical address|108-101-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x6578; Size in file image|120-101-0-0
168|data|DCD 0x6578; Size in memory image|120-101-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x6D48; File offset|72-109-0-0
188|data|DCD off_16D48; Virtual address|72-109-1-0
192|data|DCD 0x16D48; Physical address|72-109-1-0
196|data|DCD 0x30C; Size in file image|12-3-0-0
200|data|DCD 0x4730; Size in memory image|48-71-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x6D54; File offset|84-109-0-0
220|data|DCD stru_16D54; Virtual address|84-109-1-0
224|data|DCD 0x16D54; Physical address|84-109-1-0
228|data|DCD 0x118; Size in file image|24-1-0-0
232|data|DCD 0x118; Size in memory image|24-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x6D48; File offset|72-109-0-0
316|data|DCD off_16D48; Virtual address|72-109-1-0
320|data|DCD 0x16D48; Physical address|72-109-1-0
324|data|DCD 0x2B8; Size in file image|184-2-0-0
328|data|DCD 0x2B8; Size in memory image|184-2-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x5D, 0x2F, 4, 0xA8, 0x9F, 0x11, 0xF6, 0x5F, 0xDF; Desc|93-47-4-168-159-17-246-95-223-12-224-252-193-75-221-78-20-152-52-70
436|data|DCD 0x61|97-0-0-0
440|data|DCD 0x51|81-0-0-0
444|data|DCD 0x20|32-0-0-0
448|data|DCD 0xA|10-0-0-0
452|data|DCD 0x20009020, 0, 0xA0308000, 0x8DE00121, 0, 0x82000140|32-144-0-32-0-0-0-0-0-128-48-160-33-1-224-141-0-0-0-0-64-1-0-130-0-132-1-131-0-4-0-14-16-192-8-0-128-86-0-64-136-16-83-1-158-4-192-194-0-177-3-6-8-39-1-9-4-136-136-85-16-73-32-80-80-88-4-28-116-65-198-1-4-66-138-132-176-1-8-8-9-34-0-40-1-0-195-128-0-0-0-0-160-1-0-32-1-168-64-128-16-0-66-2-0-0-16-137-0-12-8-160-0-0-0-0-176-48-6-25-171-36-40-22-1-4-16-144
580|data|DCD 0x51, 0x52, 0x55, 0x56, 0x57, 0, 0, 0x59, 0x5A, 0|81-0-0-0-82-0-0-0-85-0-0-0-86-0-0-0-87-0-0-0-0-0-0-0-0-0-0-0-89-0-0-0-90-0-0-0-0-0-0-0-0-0-0-0-91-0-0-0-0-0-0-0-93-0-0-0-94-0-0-0-95-0-0-0-96-0-0-0-97-0-0-0-99-0-0-0-102-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-103-0-0-0-104-0-0-0-106-0-0-0-107-0-0-0-0-0-0-0-108-0-0-0-0-0-0-0-110-0-0-0-111-0-0-0-0-0-0-0-0-0-0-0-114-0-0-0-115-0-0-0-116-0-0-0-117-0-0-0-118-0-0-0-119-0-0-0-0-0-0-0-122-0-0-0-123-0-0-0-0-0-0-0-126-0-0-0-127-0-0-0-128-0-0-0-130-0-0-0-133-0-0-0-134-0-0-0-135-0-0-0-136-0-0-0-0-0-0-0-137-0-0-0-138-0-0-0-139-0-0-0-140-0-0-0-141-0-0-0-142-0-0-0-143-0-0-0-144-0-0-0-0-0-0-0-145-0-0-0-146-0-0-0-148-0-0-0-150-0-0-0-153-0-0-0-154-0-0-0-0-0-0-0-155-0-0-0-0-0-0-0-156-0-0-0-157-0-0-0-159-0-0-0-160-0-0-0-163-0-0-0-0-0-0-0-165-0-0-0-0-0-0-0-167-0-0-0-0-0-0-0-169-0-0-0-0-0-0-0-170-0-0-0-172-0-0-0-174-0-0-0-175-0-0-0-0-0-0-0-178-0-0-0-179-0-0-0-0-0-0-0-0-0-0-0-181-0-0-0-182-0-0-0-183-0-0-0-0-0-0-0-0-0-0-0
968|data|DCD 0x78ADB5AB, 0xC15A3F0C, 0x622571F4, 0xFA909CF, 0x58794E5F|171-181-173-120-12-63-90-193-244-113-37-98-207-9-169-15-95-78-121-88-95-211-10-10-12-58-151-11-71-89-249-16-93-84-160-19-233-118-193-10-166-228-22-16-119-84-60-148-123-160-39-90-15-77-11-110-127-93-136-11-1-175-52-232-176-222-224-233-195-171-21-33-38-218-157-124-72-58-235-138-101-13-113-21-7-74-97-16-101-34-130-124-26-46-154-124-141-166-187-88-89-49-224-81-251-236-132-16-188-19-191-88-91-10-30-87-67-69-213-236-12-255-204-203-118-229-122-96-55-71-192-35-217-31-6-240-255-33-241-185-41-138-81-212-89-239-151-121-223-173-109-196-204-23-38-30-218-205-227-158-13-20-226-158-63-185-130-21-234-211-239-14-50-98-219-237-185-141-241-14-125-47-223-11-15-17-219-27-114-43-251-198-157-142-190-135-164-199-239-166-222-96-156-124-169-124-168-15-173-75-227-192-217-113-88-28-177-2-187-18-173-159-169-15-229-85-190-157-187-227-146-124-141-197-61-16-225-127-219-61-37-186-189-148-101-104-158-124-55-94-53-132-239-173-38-30-29-110-32-105-152-49-100-207-127-128-212-174-234-228-13-161-87-70-64-22-244-243-174-154-122-158-136-11-45-165-73-15-103-253-113-15-155-193-251-10-193-15-63-240-187-169-44-183-92-252-159-124-191-218-87-27-213-135-135-255-84-193-59-249-78-208-85-141-29-188-4-21-106-9-67-214-43-157-250-119-120-220-203-70-231-150-140-243-102-125-248-204-115-22-154-124-107-127-154-124-218-243-222-31-203-64-228-244-48-150-18-178-5-106-69-128-217-60-208-244-142-33-22-147-210-207-138-134-169-225-142-94-215-221-160-18-118-133-164-238-23-175-97-16-177-33-123-127-57-147-171-206-155-2-172-7
1380|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
1396|data|Elf32_Sym <byte_10E4 - byte_10E4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
1412|data|Elf32_Sym <byte_10E4 - byte_10E4, dword_16D50, 0, 3, 0, 0x14>|0-0-0-0-80-109-1-0-0-0-0-0-3-0-20-0
1428|data|Elf32_Sym <aSignal - byte_10E4, dword_0, 0, 0x12, 0, 0>; "signal"|7-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1444|data|Elf32_Sym <aSetstate - byte_10E4, dword_0, 0, 0x12, 0, 0>; "setstate"|51-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1460|data|Elf32_Sym <aRand - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rand"|191-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1476|data|Elf32_Sym <aRbdRead - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_read"|252-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1492|data|Elf32_Sym <aRadosIoctxCrea - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_ioctx_create"|207-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1508|data|Elf32_Sym <aRbdWrite - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_write"|232-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1524|data|Elf32_Sym <aStrtol - byte_10E4, dword_0, 0, 0x12, 0, 0>; "strtol"|66-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1540|data|Elf32_Sym <aFree - byte_10E4, dword_0, 0, 0x12, 0, 0>; "free"|140-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1556|data|Elf32_Sym <aRbdOpen - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_open"|5-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1572|data|Elf32_Sym <aStackChkGuard - byte_10E4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|165-3-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1588|data|Elf32_Sym <aRadosShutdown - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_shutdown"|120-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1604|data|Elf32_Sym <aRbdRemove - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_remove"|142-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1620|data|Elf32_Sym <aOptind - byte_10E4, dword_0, 0, 0x11, 0, 0>; "optind"|0-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1636|data|Elf32_Sym <aExit - byte_10E4, dword_0, 0, 0x12, 0, 0>; "exit"|251-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1652|data|Elf32_Sym <aPread64 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "pread64"|73-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1668|data|Elf32_Sym <aStrerror - byte_10E4, dword_0, 0, 0x12, 0, 0>; "strerror"|106-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1684|data|Elf32_Sym <aRadosCreate - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_create"|194-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1700|data|Elf32_Sym <aVsnprintfChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__vsnprintf_chk"|196-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1716|data|Elf32_Sym <aRadosConnect - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_connect"|85-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1732|data|Elf32_Sym <aFprintfChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|157-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1748|data|Elf32_Sym <aMemset - byte_10E4, dword_0, 0, 0x12, 0, 0>; "memset"|91-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1764|data|Elf32_Sym <aFxstat64 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__fxstat64"|146-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1780|data|Elf32_Sym <aRbdClose - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_close"|198-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1796|data|Elf32_Sym <aRbdClose+4 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "close"|202-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1812|data|Elf32_Sym <aOptarg - byte_10E4, dword_0, 0, 0x11, 0, 0>; "optarg"|225-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1828|data|Elf32_Sym <aRadosConfParse - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_conf_parse_env"|99-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1844|data|Elf32_Sym <aAbort - byte_10E4, dword_0, 0, 0x12, 0, 0>; "abort"|60-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1860|data|Elf32_Sym <aRadosPoolCreat - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_pool_create"|156-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1876|data|Elf32_Sym <aUnlink - byte_10E4, dword_0, 0, 0x12, 0, 0>; "unlink"|44-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1892|data|Elf32_Sym <aRbdGetParentIn - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_get_parent_info"|153-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1908|data|Elf32_Sym <aFopen64+1 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "open64"|86-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1924|data|Elf32_Sym <aRbdDiscard - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_discard"|208-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1940|data|Elf32_Sym <aStrncatChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__strncat_chk"|254-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1956|data|Elf32_Sym <aCeil - byte_10E4, dword_0, 0, 0x12, 0, 0>; "ceil"|236-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1972|data|Elf32_Sym <aGetopt - byte_10E4, dword_0, 0, 0x12, 0, 0>; "getopt"|139-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1988|data|Elf32_Sym <aRbdSnapUnprote - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_snap_unprotect"|14-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2004|data|Elf32_Sym <aRbdFlush - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_flush"|242-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2020|data|Elf32_Sym <aStderr - byte_10E4, dword_0, 0, 0x11, 0, 0>; "stderr"|232-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2036|data|Elf32_Sym <aGetpagesize - byte_10E4, dword_0, 0, 0x12, 0, 0>; "getpagesize"|127-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2052|data|Elf32_Sym <aStackChkFail - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|27-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2068|data|Elf32_Sym <aJvRegisterclas - byte_10E4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|13-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2084|data|Elf32_Sym <aRbdCreate2 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_create2"|130-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2100|data|Elf32_Sym <aRbdFlatten - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_flatten"|220-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2116|data|Elf32_Sym <aRbdSnapCreate - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_snap_create"|44-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2132|data|Elf32_Sym <aRbdSnapProtect - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_snap_protect"|102-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2148|data|Elf32_Sym <aRbdSnapRemove - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_snap_remove"|173-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2164|data|Elf32_Sym <aSleep - byte_10E4, dword_0, 0, 0x12, 0, 0>; "sleep"|42-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2180|data|Elf32_Sym <aInitstate - byte_10E4, dword_0, 0, 0x12, 0, 0>; "initstate"|81-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2196|data|Elf32_Sym <aRaise - byte_10E4, dword_0, 0, 0x12, 0, 0>; "raise"|219-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2212|data|Elf32_Sym <aVfprintfChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__vfprintf_chk"|27-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2228|data|Elf32_Sym <aSetvbuf - byte_10E4, dword_0, 0, 0x12, 0, 0>; "setvbuf"|63-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2244|data|Elf32_Sym <aFwrite - byte_10E4, dword_0, 0, 0x12, 0, 0>; "fwrite"|12-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2260|data|Elf32_Sym <aRbdResize - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_resize"|119-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2276|data|Elf32_Sym <aMalloc - byte_10E4, dword_0, 0, 0x12, 0, 0>; "malloc"|212-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2292|data|Elf32_Sym <aRbdClone2 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_clone2"|60-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2308|data|Elf32_Sym <aRadosIoctxDest - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_ioctx_destroy"|174-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2324|data|Elf32_Sym <aSnprintfChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|239-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2340|data|Elf32_Sym <aFclose - byte_10E4, dword_0, 0, 0x12, 0, 0>; "fclose"|184-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2356|data|Elf32_Sym <aRbdWrite+4 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "write"|236-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2372|data|Elf32_Sym <aLseek64 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "lseek64"|19-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2388|data|Elf32_Sym <aStdout - byte_10E4, dword_0, 0, 0x11, 0, 0>; "stdout"|171-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
2404|data|Elf32_Sym <aRandom - byte_10E4, dword_0, 0, 0x12, 0, 0>; "random"|133-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2420|data|Elf32_Sym <aRadosConfReadF - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rados_conf_read_file"|135-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2436|data|Elf32_Sym <aTime - byte_10E4, dword_0, 0, 0x12, 0, 0>; "time"|22-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2452|data|Elf32_Sym <aErrnoLocation - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__errno_location"|103-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2468|data|Elf32_Sym <aStrncpy - byte_10E4, dword_0, 0, 0x12, 0, 0>; "strncpy"|14-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2484|data|Elf32_Sym <aStrcatChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__strcat_chk"|93-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2500|data|Elf32_Sym <aItmDeregistert - byte_10E4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|33-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2516|data|Elf32_Sym <aFopen64 - byte_10E4, dword_0, 0, 0x12, 0, 0>; "fopen64"|85-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2532|data|Elf32_Sym <aMemcmp - byte_10E4, dword_0, 0, 0x12, 0, 0>; "memcmp"|120-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2548|data|Elf32_Sym <aSprintfChk - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__sprintf_chk"|71-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2564|data|Elf32_Sym <aFputs - byte_10E4, dword_0, 0, 0x12, 0, 0>; "fputs"|178-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2580|data|Elf32_Sym <aLibcStartMain - byte_10E4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|115-3-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2596|data|Elf32_Sym <aRbdStat - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_stat"|189-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2612|data|Elf32_Sym <aGmonStart - byte_10E4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2628|data|Elf32_Sym <aItmRegistertmc - byte_10E4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|76-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
2644|data|Elf32_Sym <aCxaFinalize - byte_10E4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|48-3-0-0-0-0-0-0-0-0-0-0-34-0-0-0
2660|data|Elf32_Sym <aRbdCreate - byte_10E4, dword_0, 0, 0x12, 0, 0>; "rbd_create"|33-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
2676|data|Elf32_Sym <aMaxfilelen - byte_10E4, maxfilelen, 4, 0x11, 0, 0x17>; "maxfilelen"|93-5-0-0-64-112-1-0-4-0-0-0-17-0-23-0
2692|data|Elf32_Sym <aSaveBuffer - byte_10E4, save_buffer+1, 0xA8, 0x12, 0, 0xD>; "save_buffer"|77-6-0-0-233-50-0-0-168-0-0-0-18-0-13-0
2708|data|Elf32_Sym <aSimulatedopcou - byte_10E4, simulatedopcount, 4, 0x11, 0, \; "simulatedopcount"|160-6-0-0-132-112-1-0-4-0-0-0-17-0-24-0
2724|data|Elf32_Sym <aIname - byte_10E4, iname, 4, 0x11, 0, 0x18>; "iname"|86-7-0-0-116-180-1-0-4-0-0-0-17-0-24-0
2740|data|Elf32_Sym <aPrterrcode - byte_10E4, prterrcode+1, 0x34, 0x12, 0, 0xD>; "prterrcode"|225-4-0-0-181-50-0-0-52-0-0-0-18-0-13-0
2756|data|Elf32_Sym <aProgressinterv - byte_10E4, progressinterval, 4, 0x11, 0, \; "progressinterval"|254-3-0-0-136-112-1-0-4-0-0-0-17-0-24-0
2772|data|Elf32_Sym <aDataStart+2 - byte_10E4, __data_start, 0, 0x20, 0, 0x17>; "data_start"|185-3-0-0-0-112-1-0-0-0-0-0-32-0-23-0
2788|data|Elf32_Sym <aNumops - byte_10E4, numops, 4, 0x11, 0, 0x17>; "numops"|16-6-0-0-72-112-1-0-4-0-0-0-17-0-23-0
2804|data|Elf32_Sym <aCheckSize - byte_10E4, check_size+1, 0x7C, 0x12, 0, 0xD>; "check_size"|68-7-0-0-21-53-0-0-124-0-0-0-18-0-13-0
2820|data|Elf32_Sym <aDoClone - byte_10E4, do_clone+1, 0x26C, 0x12, 0, 0xD>; "do_clone"|185-6-0-0-153-65-0-0-108-2-0-0-18-0-13-0
2836|data|Elf32_Sym <aOplog - byte_10E4, oplog, 0x3E80, 0x11, 0, 0x18>; "oplog"|25-5-0-0-212-116-1-0-128-62-0-0-17-0-24-0
2852|data|Elf32_Sym <aBssStart_0 - byte_10E4, __bss_start, 0, 0x10, 0, 0x18>; "__bss_start__"|215-3-0-0-84-112-1-0-0-0-0-0-16-0-24-0
2868|data|Elf32_Sym <aMmapMask - byte_10E4, mmap_mask, 4, 0x11, 0, 0x18>; "mmap_mask"|167-5-0-0-96-180-1-0-4-0-0-0-17-0-24-0
2884|data|Elf32_Sym <aODirect - byte_10E4, o_direct, 4, 0x11, 0, 0x18>; "o_direct"|177-5-0-0-100-180-1-0-4-0-0-0-17-0-24-0
2900|data|Elf32_Sym <aAio - byte_10E4, aio, 4, 0x11, 0, 0x18>; "aio"|5-5-0-0-196-112-1-0-4-0-0-0-17-0-24-0
2916|data|Elf32_Sym <aBssEnd+1 - byte_10E4, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|230-3-0-0-120-180-1-0-0-0-0-0-16-0-24-0
2932|data|Elf32_Sym <aTruncbdy - byte_10E4, truncbdy, 4, 0x11, 0, 0x17>; "truncbdy"|121-4-0-0-44-112-1-0-4-0-0-0-17-0-23-0
2948|data|Elf32_Sym <aDowrite - byte_10E4, dowrite+1, 0x290, 0x12, 0, 0xD>; "dowrite"|89-6-0-0-29-58-0-0-144-2-0-0-18-0-13-0
2964|data|Elf32_Sym <aSeed - byte_10E4, seed, 4, 0x11, 0, 0x17>; "seed"|108-4-0-0-76-112-1-0-4-0-0-0-17-0-23-0
2980|data|Elf32_Sym <aFsxgoodfd - byte_10E4, fsxgoodfd, 4, 0x11, 0, 0x18>; "fsxgoodfd"|165-4-0-0-116-112-1-0-4-0-0-0-17-0-24-0
2996|data|Elf32_Sym <aPrterr - byte_10E4, prterr+1, 0x38, 0x12, 0, 0xD>; "prterr"|120-5-0-0-201-45-0-0-56-0-0-0-18-0-13-0
3012|data|Elf32_Sym <aSetstate+3 - byte_10E4, state, 0x100, 0x11, 0, 0x18>; "state"|54-2-0-0-84-179-1-0-0-1-0-0-17-0-24-0
3028|data|Elf32_Sym <aCloneCalls - byte_10E4, clone_calls, 4, 0x11, 0, 0x17>; "clone_calls"|30-4-0-0-24-112-1-0-4-0-0-0-17-0-23-0
3044|data|Elf32_Sym <aLog4 - byte_10E4, log4+1, 0x60, 0x12, 0, 0xD>; "log4"|55-5-0-0-1-46-0-0-96-0-0-0-18-0-13-0
3060|data|Elf32_Sym <aPageMask - byte_10E4, page_mask, 4, 0x11, 0, 0x18>; "page_mask"|150-5-0-0-92-180-1-0-4-0-0-0-17-0-24-0
3076|data|Elf32_Sym <aPunchHoleCalls - byte_10E4, punch_hole_calls, 4, 0x11, 0, \; "punch_hole_calls"|199-4-0-0-60-112-1-0-4-0-0-0-17-0-23-0
3092|data|Elf32_Sym <aUsage - byte_10E4, usage+1, 0x30, 0x12, 0, 0xD>; "usage"|92-7-0-0-197-72-0-0-48-0-0-0-18-0-13-0
3108|data|Elf32_Sym <aPageSize - byte_10E4, page_size, 4, 0x11, 0, 0x18>; "page_size"|140-5-0-0-88-180-1-0-4-0-0-0-17-0-24-0
3124|data|Elf32_Sym <aDebugstart - byte_10E4, debugstart, 4, 0x11, 0, 0x18>; "debugstart"|230-6-0-0-168-112-1-0-4-0-0-0-17-0-24-0
3140|data|Elf32_Sym <aEdata - byte_10E4, __bss_start, 0, 0x10, 0, 0x17>; "_edata"|196-3-0-0-84-112-1-0-0-0-0-0-16-0-23-0
3156|data|Elf32_Sym <aCleanup - byte_10E4, cleanup+1, 0x34, 0x12, 0, 0xD>; "cleanup"|15-4-0-0-149-45-0-0-52-0-0-0-18-0-13-0
3172|data|Elf32_Sym <aOriginalBuf - byte_10E4, original_buf, 4, 0x11, 0, 0x18>; "original_buf"|236-4-0-0-204-116-1-0-4-0-0-0-17-0-24-0
3188|data|Elf32_Sym <aVwarnc - byte_10E4, vwarnc+1, 0x6C, 0x12, 0, 0xD>; "vwarnc"|144-6-0-0-97-44-0-0-108-0-0-0-18-0-13-0
3204|data|Elf32_Sym <aGendata - byte_10E4, gendata+1, 0x30, 0x12, 0, 0xD>; "gendata"|113-4-0-0-237-57-0-0-48-0-0-0-18-0-13-0
3220|data|Elf32_Sym <aDotruncate - byte_10E4, dotruncate+1, 0x14C, 0x12, 0, 0xD>; "dotruncate"|31-5-0-0-173-60-0-0-76-1-0-0-18-0-13-0
3236|data|Elf32_Sym <aReportFailure - byte_10E4, report_failure+1, 0x78, 0x12, \; "report_failure"|60-5-0-0-145-51-0-0-120-0-0-0-18-0-13-0
3252|data|Elf32_Sym <aEnd - byte_10E4, _end, 0, 0x10, 0, 0x18>; "__end__"|241-3-0-0-120-180-1-0-0-0-0-0-16-0-24-0
3268|data|Elf32_Sym <aFsxlogf - byte_10E4, fsxlogf, 4, 0x11, 0, 0x18>; "fsxlogf"|241-6-0-0-96-112-1-0-4-0-0-0-17-0-24-0
3284|data|Elf32_Sym <aDocloseopen+2 - byte_10E4, closeopen, 4, 0x11, 0, 0x18>; "closeopen"|251-4-0-0-108-112-1-0-4-0-0-0-17-0-24-0
3300|data|Elf32_Sym <aLibcCsuInit - byte_10E4, __libc_csu_init+1, 0x40, 0x12, 0,\; "__libc_csu_init"|194-6-0-0-25-82-0-0-64-0-0-0-18-0-13-0
3316|data|Elf32_Sym <aLibcCsuFini - byte_10E4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|27-7-0-0-89-82-0-0-2-0-0-0-18-0-13-0
3332|data|Elf32_Sym <aFallocateCalls - byte_10E4, fallocate_calls, 4, 0x11, 0, \; "fallocate_calls"|53-6-0-0-180-112-1-0-4-0-0-0-17-0-24-0
3348|data|Elf32_Sym <aLibcCsuFini+0xA - byte_10E4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|37-7-0-0-92-82-0-0-0-0-0-0-18-0-14-0
3364|data|Elf32_Sym <aDataStart+6 - byte_10E4, _start+1, 0, 0x12, 0, 0xD>; "_start"|189-3-0-0-37-43-0-0-0-0-0-0-18-0-13-0
3380|data|Elf32_Sym <aLibcCsuInit+0xA - byte_10E4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|204-6-0-0-96-29-0-0-0-0-0-0-18-0-11-0
3396|data|Elf32_Sym <aLogptr - byte_10E4, logptr, 4, 0x11, 0, 0x18>; "logptr"|210-6-0-0-104-112-1-0-4-0-0-0-17-0-24-0
3412|data|Elf32_Sym <aCheckBuffers - byte_10E4, check_buffers+1, 0x10C, 0x12, 0,\; "check_buffers"|13-7-0-0-9-52-0-0-12-1-0-0-18-0-13-0
3428|data|Elf32_Sym <aWritefileimage - byte_10E4, writefileimage+1, 0xA8, 0x12, \; "writefileimage"|76-4-0-0-5-68-0-0-168-0-0-0-18-0-13-0
3444|data|Elf32_Sym <aLogdump - byte_10E4, logdump+1, 0x41C, 0x12, 0, 0xD>; "logdump"|75-5-0-0-153-46-0-0-28-4-0-0-18-0-13-0
3460|data|Elf32_Sym <aDoFlatten - byte_10E4, do_flatten+1, 0x88, 0x12, 0, 0xD>; "do_flatten"|50-4-0-0-173-68-0-0-136-0-0-0-18-0-13-0
3476|data|Elf32_Sym <aPool - byte_10E4, pool, 4, 0x11, 0, 0x18>; "pool"|20-5-0-0-208-116-1-0-4-0-0-0-17-0-24-0
3492|data|Elf32_Sym <aCreateImage+7 - byte_10E4, image, 4, 0x11, 0, 0x18>; "image"|47-6-0-0-104-180-1-0-4-0-0-0-17-0-24-0
3508|data|Elf32_Sym <aIoStdinUsed - byte_10E4, _IO_stdin_used, 4, 0x11, 0, 0xF>; "_IO_stdin_used"|139-4-0-0-100-82-0-0-4-0-0-0-17-0-15-0
3524|data|Elf32_Sym <aBssStart - byte_10E4, __bss_start, 0, 0x10, 0, 0x18>; "__bss_start"|203-3-0-0-84-112-1-0-0-0-0-0-16-0-24-0
3540|data|Elf32_Sym <aDirpath - byte_10E4, dirpath, 0x400, 0x11, 0, 0x18>; "dirpath"|100-4-0-0-204-112-1-0-0-4-0-0-17-0-24-0
3556|data|Elf32_Sym <aIoctx - byte_10E4, ioctx, 4, 0x11, 0, 0x18>; "ioctx"|138-6-0-0-112-180-1-0-4-0-0-0-17-0-24-0
3572|data|Elf32_Sym <aMonitorend - byte_10E4, monitorend, 4, 0x11, 0, 0x17>; "monitorend"|226-5-0-0-36-112-1-0-4-0-0-0-17-0-23-0
3588|data|Elf32_Sym <aEnd_0 - byte_10E4, _end, 0, 0x10, 0, 0x18>; "_end"|249-3-0-0-120-180-1-0-0-0-0-0-16-0-24-0
3604|data|Elf32_Sym <aQuiet - byte_10E4, quiet, 4, 0x11, 0, 0x18>; "quiet"|53-7-0-0-128-112-1-0-4-0-0-0-17-0-24-0
3620|data|Elf32_Sym <aReadbdy - byte_10E4, readbdy, 4, 0x11, 0, 0x17>; "readbdy"|175-4-0-0-28-112-1-0-4-0-0-0-17-0-23-0
3636|data|Elf32_Sym <aRandomoplen - byte_10E4, randomoplen, 4, 0x11, 0, 0x17>; "randomoplen"|237-5-0-0-56-112-1-0-4-0-0-0-17-0-23-0
3652|data|Elf32_Sym <aTest - byte_10E4, test+1, 0x308, 0x12, 0, 0xD>; "test"|35-6-0-0-189-69-0-0-8-3-0-0-18-0-13-0
3668|data|Elf32_Sym <aCloneFilename - byte_10E4, clone_filename+1, 0x3C, 0x12, \; "clone_filename"|61-4-0-0-133-63-0-0-60-0-0-0-18-0-13-0
3684|data|Elf32_Sym <aCloseprob - byte_10E4, closeprob, 4, 0x11, 0, 0x18>; "closeprob"|83-5-0-0-164-112-1-0-4-0-0-0-17-0-24-0
3700|data|Elf32_Sym <aDoPunchHole - byte_10E4, do_punch_hole+1, 0x18C, 0x12, 0, \; "do_punch_hole"|255-6-0-0-249-61-0-0-140-1-0-0-18-0-13-0
3716|data|Elf32_Sym <aMappedWrites - byte_10E4, mapped_writes, 4, 0x11, 0, 0x18>; "mapped_writes"|197-5-0-0-176-112-1-0-4-0-0-0-17-0-24-0
3732|data|Elf32_Sym <aFileSize - byte_10E4, file_size, 8, 0x11, 0, 0x18>; "file_size"|43-7-0-0-120-112-1-0-8-0-0-0-17-0-24-0
3748|data|Elf32_Sym <aMappedReads - byte_10E4, mapped_reads, 4, 0x11, 0, 0x18>; "mapped_reads"|42-5-0-0-172-112-1-0-4-0-0-0-17-0-24-0
3764|data|Elf32_Sym <aSimpleErr - byte_10E4, simple_err+1, 0x38, 0x12, 0, 0xD>; "simple_err"|186-5-0-0-97-46-0-0-56-0-0-0-18-0-13-0
3780|data|Elf32_Sym <aTestcalls - byte_10E4, testcalls, 4, 0x11, 0, 0x18>; "testcalls"|104-5-0-0-100-112-1-0-4-0-0-0-17-0-24-0
3796|data|Elf32_Sym <aPrt - byte_10E4, prt+1, 0x80, 0x12, 0, 0xD>; "prt"|127-5-0-0-21-45-0-0-128-0-0-0-18-0-13-0
3812|data|Elf32_Sym <aDebug - byte_10E4, debug, 4, 0x11, 0, 0x18>; "debug"|249-6-0-0-140-112-1-0-4-0-0-0-17-0-24-0
3828|data|Elf32_Sym <aRbdFlush+4 - byte_10E4, flush, 4, 0x11, 0, 0x18>; "flush"|246-0-0-0-148-112-1-0-4-0-0-0-17-0-24-0
3844|data|Elf32_Sym <aDoFsync - byte_10E4, do_fsync, 4, 0x11, 0, 0x18>; "do_fsync"|130-4-0-0-192-112-1-0-4-0-0-0-17-0-24-0
3860|data|Elf32_Sym <aDocloseopen - byte_10E4, docloseopen+1, 0x88, 0x12, 0, \; "docloseopen"|249-4-0-0-53-69-0-0-136-0-0-0-18-0-13-0
3876|data|Elf32_Sym <aCreateImage - byte_10E4, create_image+1, 0x164, 0x12, 0, \; "create_image"|40-6-0-0-17-54-0-0-100-1-0-0-18-0-13-0
3892|data|Elf32_Sym <aWarn - byte_10E4, warn+1, 0x48, 0x12, 0, 0xD>; "warn"|98-2-0-0-205-44-0-0-72-0-0-0-18-0-13-0
3908|data|Elf32_Sym <aBssEnd - byte_10E4, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|229-3-0-0-120-180-1-0-0-0-0-0-16-0-24-0
3924|data|Elf32_Sym <aGetnum - byte_10E4, getnum+1, 0x76, 0x12, 0, 0xD>; "getnum"|160-5-0-0-245-72-0-0-118-0-0-0-18-0-13-0
3940|data|Elf32_Sym <aDoread - byte_10E4, doread+1, 0x19C, 0x12, 0, 0xD>; "doread"|23-4-0-0-157-55-0-0-156-1-0-0-18-0-13-0
3956|data|Elf32_Sym <aTestFallocate - byte_10E4, test_fallocate+1, 0x10, 0x12, \; "test_fallocate"|211-5-0-0-109-73-0-0-16-0-0-0-18-0-13-0
3972|data|Elf32_Sym <aRandomizeStrip - byte_10E4, randomize_striping, 4, 0x11, \; "randomize_striping"|102-6-0-0-48-112-1-0-4-0-0-0-17-0-23-0
3988|data|Elf32_Sym <aDataStart - byte_10E4, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|183-3-0-0-0-112-1-0-0-0-0-0-16-0-23-0
4004|data|Elf32_Sym <aBiggest - byte_10E4, biggest, 8, 0x11, 0, 0x18>; "biggest"|177-6-0-0-152-112-1-0-8-0-0-0-17-0-24-0
4020|data|Elf32_Sym <aNumClones - byte_10E4, num_clones, 4, 0x11, 0, 0x18>; "num_clones"|154-4-0-0-160-112-1-0-4-0-0-0-17-0-24-0
4036|data|Elf32_Sym <aBadoff - byte_10E4, badoff, 4, 0x11, 0, 0x17>; "badoff"|79-7-0-0-20-112-1-0-4-0-0-0-17-0-23-0
4052|data|Elf32_Sym <aCluster - byte_10E4, cluster, 4, 0x11, 0, 0x18>; "cluster"|69-6-0-0-108-180-1-0-4-0-0-0-17-0-24-0
4068|data|Elf32_Sym <aLite - byte_10E4, lite, 4, 0x11, 0, 0x18>; "lite"|97-6-0-0-144-112-1-0-4-0-0-0-17-0-24-0
4084|data|Elf32_Sym <aLibcStartMain+0xD - byte_10E4, main+1, 0xA4C, 0x12, 0, \; "main"|128-3-0-0-217-32-0-0-76-10-0-0-18-0-13-0
4100|data|Elf32_Sym <aDoflush - byte_10E4, doflush+1, 0x28, 0x12, 0, 0xD>; "doflush"|42-4-0-0-117-55-0-0-40-0-0-0-18-0-13-0
4116|data|Elf32_Sym <aGoodBuf - byte_10E4, good_buf, 4, 0x11, 0, 0x18>; "good_buf"|131-5-0-0-84-180-1-0-4-0-0-0-17-0-24-0
4132|data|Elf32_Sym <aSizechecks - byte_10E4, sizechecks, 4, 0x11, 0, 0x17>; "sizechecks"|9-5-0-0-68-112-1-0-4-0-0-0-17-0-23-0
4148|data|Elf32_Sym <aCheckTruncHack - byte_10E4, check_trunc_hack+1, 0x80, \; "check_trunc_hack"|121-6-0-0-145-53-0-0-128-0-0-0-18-0-13-0
4164|data|Elf32_Sym <aCheckEofpage - byte_10E4, check_eofpage+1, 0xB4, 0x12, 0, \; "check_eofpage"|249-5-0-0-57-57-0-0-180-0-0-0-18-0-13-0
4180|data|Elf32_Sym <aWritebdy - byte_10E4, writebdy, 4, 0x11, 0, 0x17>; "writebdy"|216-4-0-0-40-112-1-0-4-0-0-0-17-0-23-0
4196|data|Elf32_Sym <aCheckClone - byte_10E4, check_clone+1, 0x18C, 0x12, 0, \; "check_clone"|23-6-0-0-13-64-0-0-140-1-0-0-18-0-13-0
4212|data|Elf32_Sym <aMaxoplen - byte_10E4, maxoplen, 4, 0x11, 0, 0x17>; "maxoplen"|59-7-0-0-52-112-1-0-4-0-0-0-17-0-23-0
4228|data|Elf32_Sym <aPrealloc - byte_10E4, prealloc, 4, 0x11, 0, 0x18>; "prealloc"|151-6-0-0-188-112-1-0-4-0-0-0-17-0-24-0
4244|data|Elf32_Sym <aTempBuf - byte_10E4, temp_buf, 4, 0x11, 0, 0x18>; "temp_buf"|91-4-0-0-200-112-1-0-4-0-0-0-17-0-24-0
4260|data|Elf32_Sym <aStyle - byte_10E4, style, 4, 0x11, 0, 0x18>; "style"|114-5-0-0-184-112-1-0-4-0-0-0-17-0-24-0
4276|data|Elf32_Sym <aLogcount - byte_10E4, logcount, 4, 0x11, 0, 0x18>; "logcount"|7-6-0-0-112-112-1-0-4-0-0-0-17-0-24-0
4292|data|Elf32_Sym <aCloneImagename - byte_10E4, clone_imagename+1, 0x4C, 0x12,\; "clone_imagename"|183-4-0-0-193-63-0-0-76-0-0-0-18-0-13-0
4308|data|Elf32_Sym <aMonitorstart - byte_10E4, monitorstart, 4, 0x11, 0, 0x17>; "monitorstart"|217-6-0-0-32-112-1-0-4-0-0-0-17-0-23-0
4324|data|DCB 0|0
4325|data|DCB "librbd.so.1",0|108-105-98-114-98-100-46-115-111-46-49-0
4337|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
4357|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
4385|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
4400|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
4426|data|DCB "rbd_snap_protect",0|114-98-100-95-115-110-97-112-95-112-114-111-116-101-99-116-0
4443|data|DCB "rbd_resize",0|114-98-100-95-114-101-115-105-122-101-0
4454|data|DCB "rbd_create2",0|114-98-100-95-99-114-101-97-116-101-50-0
4466|data|DCB "rbd_remove",0|114-98-100-95-114-101-109-111-118-101-0
4477|data|DCB "rbd_get_parent_info",0|114-98-100-95-103-101-116-95-112-97-114-101-110-116-95-105-110-102-111-0
4497|data|DCB "rbd_snap_remove",0|114-98-100-95-115-110-97-112-95-114-101-109-111-118-101-0
4513|data|DCB "rbd_stat",0|114-98-100-95-115-116-97-116-0
4522|data|DCB "rbd_close",0|114-98-100-95-99-108-111-115-101-0
4532|data|DCB "rbd_discard",0|114-98-100-95-100-105-115-99-97-114-100-0
4544|data|DCB "rbd_flatten",0|114-98-100-95-102-108-97-116-116-101-110-0
4556|data|DCB "rbd_write",0|114-98-100-95-119-114-105-116-101-0
4566|data|DCB "rbd_flush",0|114-98-100-95-102-108-117-115-104-0
4576|data|DCB "rbd_read",0|114-98-100-95-114-101-97-100-0
4585|data|DCB "rbd_open",0|114-98-100-95-111-112-101-110-0
4594|data|DCB "rbd_snap_unprotect",0|114-98-100-95-115-110-97-112-95-117-110-112-114-111-116-101-99-116-0
4613|data|DCB "rbd_create",0|114-98-100-95-99-114-101-97-116-101-0
4624|data|DCB "rbd_snap_create",0|114-98-100-95-115-110-97-112-95-99-114-101-97-116-101-0
4640|data|DCB "rbd_clone2",0|114-98-100-95-99-108-111-110-101-50-0
4651|data|DCB "librados.so.2",0|108-105-98-114-97-100-111-115-46-115-111-46-50-0
4665|data|DCB "rados_connect",0|114-97-100-111-115-95-99-111-110-110-101-99-116-0
4679|data|DCB "rados_conf_parse_env",0|114-97-100-111-115-95-99-111-110-102-95-112-97-114-115-101-95-101-110-118-0
4700|data|DCB "rados_shutdown",0|114-97-100-111-115-95-115-104-117-116-100-111-119-110-0
4715|data|DCB "rados_conf_read_file",0|114-97-100-111-115-95-99-111-110-102-95-114-101-97-100-95-102-105-108-101-0
4736|data|DCB "rados_pool_create",0|114-97-100-111-115-95-112-111-111-108-95-99-114-101-97-116-101-0
4754|data|DCB "rados_ioctx_destroy",0|114-97-100-111-115-95-105-111-99-116-120-95-100-101-115-116-114-111-121-0
4774|data|DCB "rados_create",0|114-97-100-111-115-95-99-114-101-97-116-101-0
4787|data|DCB "rados_ioctx_create",0|114-97-100-111-115-95-105-111-99-116-120-95-99-114-101-97-116-101-0
4806|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
4816|data|DCB "ceil",0|99-101-105-108-0
4821|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
4831|data|DCB "exit",0|101-120-105-116-0
4836|data|DCB "optind",0|111-112-116-105-110-100-0
4843|data|DCB "signal",0|115-105-103-110-97-108-0
4850|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
4858|data|DCB "time",0|116-105-109-101-0
4863|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
4880|data|DCB "unlink",0|117-110-108-105-110-107-0
4887|data|DCB "setstate",0|115-101-116-115-116-97-116-101-0
4896|data|DCB "abort",0|97-98-111-114-116-0
4902|data|DCB "strtol",0|115-116-114-116-111-108-0
4909|data|DCB "pread64",0|112-114-101-97-100-54-52-0
4917|data|DCB "initstate",0|105-110-105-116-115-116-97-116-101-0
4927|data|DCB "memset",0|109-101-109-115-101-116-0
4934|data|DCB "warn",0|119-97-114-110-0
4939|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
4956|data|DCB "memcmp",0|109-101-109-99-109-112-0
4963|data|DCB "getpagesize",0|103-101-116-112-97-103-101-115-105-122-101-0
4975|data|DCB "getopt",0|103-101-116-111-112-116-0
4982|data|DCB "__fxstat64",0|95-95-102-120-115-116-97-116-54-52-0
4993|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
5007|data|DCB "stdout",0|115-116-100-111-117-116-0
5014|data|DCB "fputs",0|102-112-117-116-115-0
5020|data|DCB "fclose",0|102-99-108-111-115-101-0
5027|data|DCB "rand",0|114-97-110-100-0
5032|data|DCB "__vsnprintf_chk",0|95-95-118-115-110-112-114-105-110-116-102-95-99-104-107-0
5048|data|DCB "malloc",0|109-97-108-108-111-99-0
5055|data|DCB "raise",0|114-97-105-115-101-0
5061|data|DCB "optarg",0|111-112-116-97-114-103-0
5068|data|DCB "stderr",0|115-116-100-101-114-114-0
5075|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
5090|data|DCB "__strncat_chk",0|95-95-115-116-114-110-99-97-116-95-99-104-107-0
5104|data|DCB "fwrite",0|102-119-114-105-116-101-0
5111|data|DCB "lseek64",0|108-115-101-101-107-54-52-0
5119|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
5134|data|DCB "sleep",0|115-108-101-101-112-0
5140|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
5155|data|DCB "setvbuf",0|115-101-116-118-98-117-102-0
5163|data|DCB "__sprintf_chk",0|95-95-115-112-114-105-110-116-102-95-99-104-107-0
5177|data|DCB "fopen64",0|102-111-112-101-110-54-52-0
5185|data|DCB "__strcat_chk",0|95-95-115-116-114-99-97-116-95-99-104-107-0
5198|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
5207|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
5225|data|DCB "random",0|114-97-110-100-111-109-0
5232|data|DCB "free",0|102-114-101-101-0
5237|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
5257|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
5275|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
5288|data|DCB "_edata",0|95-101-100-97-116-97-0
5295|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
5307|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
5321|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
5333|data|DCB "__end__",0|95-95-101-110-100-95-95-0
5341|data|DCB "_end",0|95-101-110-100-0
5346|data|DCB "progressinterval",0|112-114-111-103-114-101-115-115-105-110-116-101-114-118-97-108-0
5363|data|DCB "cleanup",0|99-108-101-97-110-117-112-0
5371|data|DCB "doread",0|100-111-114-101-97-100-0
5378|data|DCB "clone_calls",0|99-108-111-110-101-95-99-97-108-108-115-0
5390|data|DCB "doflush",0|100-111-102-108-117-115-104-0
5398|data|DCB "do_flatten",0|100-111-95-102-108-97-116-116-101-110-0
5409|data|DCB "clone_filename",0|99-108-111-110-101-95-102-105-108-101-110-97-109-101-0
5424|data|DCB "writefileimage",0|119-114-105-116-101-102-105-108-101-105-109-97-103-101-0
5439|data|DCB "temp_buf",0|116-101-109-112-95-98-117-102-0
5448|data|DCB "dirpath",0|100-105-114-112-97-116-104-0
5456|data|DCB "seed",0|115-101-101-100-0
5461|data|DCB "gendata",0|103-101-110-100-97-116-97-0
5469|data|DCB "truncbdy",0|116-114-117-110-99-98-100-121-0
5478|data|DCB "do_fsync",0|100-111-95-102-115-121-110-99-0
5487|data|DCB "_IO_stdin_used",0|95-73-79-95-115-116-100-105-110-95-117-115-101-100-0
5502|data|DCB "num_clones",0|110-117-109-95-99-108-111-110-101-115-0
5513|data|DCB "fsxgoodfd",0|102-115-120-103-111-111-100-102-100-0
5523|data|DCB "readbdy",0|114-101-97-100-98-100-121-0
5531|data|DCB "clone_imagename",0|99-108-111-110-101-95-105-109-97-103-101-110-97-109-101-0
5547|data|DCB "punch_hole_calls",0|112-117-110-99-104-95-104-111-108-101-95-99-97-108-108-115-0
5564|data|DCB "writebdy",0|119-114-105-116-101-98-100-121-0
5573|data|DCB "prterrcode",0|112-114-116-101-114-114-99-111-100-101-0
5584|data|DCB "original_buf",0|111-114-105-103-105-110-97-108-95-98-117-102-0
5597|data|DCB "docloseopen",0|100-111-99-108-111-115-101-111-112-101-110-0
5609|data|DCB "aio",0|97-105-111-0
5613|data|DCB "sizechecks",0|115-105-122-101-99-104-101-99-107-115-0
5624|data|DCB "pool",0|112-111-111-108-0
5629|data|DCB "oplog",0|111-112-108-111-103-0
5635|data|DCB "dotruncate",0|100-111-116-114-117-110-99-97-116-101-0
5646|data|DCB "mapped_reads",0|109-97-112-112-101-100-95-114-101-97-100-115-0
5659|data|DCB "log4",0|108-111-103-52-0
5664|data|DCB "report_failure",0|114-101-112-111-114-116-95-102-97-105-108-117-114-101-0
5679|data|DCB "logdump",0|108-111-103-100-117-109-112-0
5687|data|DCB "closeprob",0|99-108-111-115-101-112-114-111-98-0
5697|data|DCB "maxfilelen",0|109-97-120-102-105-108-101-108-101-110-0
5708|data|DCB "testcalls",0|116-101-115-116-99-97-108-108-115-0
5718|data|DCB "style",0|115-116-121-108-101-0
5724|data|DCB "prterr",0|112-114-116-101-114-114-0
5731|data|DCB "prt",0|112-114-116-0
5735|data|DCB "good_buf",0|103-111-111-100-95-98-117-102-0
5744|data|DCB "page_size",0|112-97-103-101-95-115-105-122-101-0
5754|data|DCB "page_mask",0|112-97-103-101-95-109-97-115-107-0
5764|data|DCB "getnum",0|103-101-116-110-117-109-0
5771|data|DCB "mmap_mask",0|109-109-97-112-95-109-97-115-107-0
5781|data|DCB "o_direct",0|111-95-100-105-114-101-99-116-0
5790|data|DCB "simple_err",0|115-105-109-112-108-101-95-101-114-114-0
5801|data|DCB "mapped_writes",0|109-97-112-112-101-100-95-119-114-105-116-101-115-0
5815|data|DCB "test_fallocate",0|116-101-115-116-95-102-97-108-108-111-99-97-116-101-0
5830|data|DCB "monitorend",0|109-111-110-105-116-111-114-101-110-100-0
5841|data|DCB "randomoplen",0|114-97-110-100-111-109-111-112-108-101-110-0
5853|data|DCB "check_eofpage",0|99-104-101-99-107-95-101-111-102-112-97-103-101-0
5867|data|DCB "logcount",0|108-111-103-99-111-117-110-116-0
5876|data|DCB "numops",0|110-117-109-111-112-115-0
5883|data|DCB "check_clone",0|99-104-101-99-107-95-99-108-111-110-101-0
5895|data|DCB "test",0|116-101-115-116-0
5900|data|DCB "create_image",0|99-114-101-97-116-101-95-105-109-97-103-101-0
5913|data|DCB "fallocate_calls",0|102-97-108-108-111-99-97-116-101-95-99-97-108-108-115-0
5929|data|DCB "cluster",0|99-108-117-115-116-101-114-0
5937|data|DCB "save_buffer",0|115-97-118-101-95-98-117-102-102-101-114-0
5949|data|DCB "dowrite",0|100-111-119-114-105-116-101-0
5957|data|DCB "lite",0|108-105-116-101-0
5962|data|DCB "randomize_striping",0|114-97-110-100-111-109-105-122-101-95-115-116-114-105-112-105-110-103-0
5981|data|DCB "check_trunc_hack",0|99-104-101-99-107-95-116-114-117-110-99-95-104-97-99-107-0
5998|data|DCB "ioctx",0|105-111-99-116-120-0
6004|data|DCB "vwarnc",0|118-119-97-114-110-99-0
6011|data|DCB "prealloc",0|112-114-101-97-108-108-111-99-0
6020|data|DCB "simulatedopcount",0|115-105-109-117-108-97-116-101-100-111-112-99-111-117-110-116-0
6037|data|DCB "biggest",0|98-105-103-103-101-115-116-0
6045|data|DCB "do_clone",0|100-111-95-99-108-111-110-101-0
6054|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
6070|data|DCB "logptr",0|108-111-103-112-116-114-0
6077|data|DCB "monitorstart",0|109-111-110-105-116-111-114-115-116-97-114-116-0
6090|data|DCB "debugstart",0|100-101-98-117-103-115-116-97-114-116-0
6101|data|DCB "fsxlogf",0|102-115-120-108-111-103-102-0
6109|data|DCB "debug",0|100-101-98-117-103-0
6115|data|DCB "do_punch_hole",0|100-111-95-112-117-110-99-104-95-104-111-108-101-0
6129|data|DCB "check_buffers",0|99-104-101-99-107-95-98-117-102-102-101-114-115-0
6143|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
6159|data|DCB "file_size",0|102-105-108-101-95-115-105-122-101-0
6169|data|DCB "quiet",0|113-117-105-101-116-0
6175|data|DCB "maxoplen",0|109-97-120-111-112-108-101-110-0
6184|data|DCB "check_size",0|99-104-101-99-107-95-115-105-122-101-0
6195|data|DCB "badoff",0|98-97-100-111-102-102-0
6202|data|DCB "iname",0|105-110-97-109-101-0
6208|data|DCB "usage",0|117-115-97-103-101-0
6214|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
6224|data|DCW 0|0-0
6226|data|DCW 0|0-0
6228|data|DCW 0|0-0
6230|data|DCW 2; signal@@GLIBC_2.4|2-0
6232|data|DCW 2; setstate@@GLIBC_2.4|2-0
6234|data|DCW 2; rand@@GLIBC_2.4|2-0
6236|data|DCW 0; local  symbol: rbd_read|0-0
6238|data|DCW 0; local  symbol: rados_ioctx_create|0-0
6240|data|DCW 0; local  symbol: rbd_write|0-0
6242|data|DCW 2; strtol@@GLIBC_2.4|2-0
6244|data|DCW 2; free@@GLIBC_2.4|2-0
6246|data|DCW 0; local  symbol: rbd_open|0-0
6248|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
6250|data|DCW 0; local  symbol: rados_shutdown|0-0
6252|data|DCW 0; local  symbol: rbd_remove|0-0
6254|data|DCW 2; optind@@GLIBC_2.4|2-0
6256|data|DCW 2; exit@@GLIBC_2.4|2-0
6258|data|DCW 2; pread64@@GLIBC_2.4|2-0
6260|data|DCW 2; strerror@@GLIBC_2.4|2-0
6262|data|DCW 0; local  symbol: rados_create|0-0
6264|data|DCW 2; __vsnprintf_chk@@GLIBC_2.4|2-0
6266|data|DCW 0; local  symbol: rados_connect|0-0
6268|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
6270|data|DCW 2; memset@@GLIBC_2.4|2-0
6272|data|DCW 2; __fxstat64@@GLIBC_2.4|2-0
6274|data|DCW 0; local  symbol: rbd_close|0-0
6276|data|DCW 2; close@@GLIBC_2.4|2-0
6278|data|DCW 2; optarg@@GLIBC_2.4|2-0
6280|data|DCW 0; local  symbol: rados_conf_parse_env|0-0
6282|data|DCW 2; abort@@GLIBC_2.4|2-0
6284|data|DCW 0; local  symbol: rados_pool_create|0-0
6286|data|DCW 2; unlink@@GLIBC_2.4|2-0
6288|data|DCW 0; local  symbol: rbd_get_parent_info|0-0
6290|data|DCW 2; open64@@GLIBC_2.4|2-0
6292|data|DCW 0; local  symbol: rbd_discard|0-0
6294|data|DCW 2; __strncat_chk@@GLIBC_2.4|2-0
6296|data|DCW 4; ceil@@GLIBC_2.4|4-0
6298|data|DCW 2; getopt@@GLIBC_2.4|2-0
6300|data|DCW 0; local  symbol: rbd_snap_unprotect|0-0
6302|data|DCW 0; local  symbol: rbd_flush|0-0
6304|data|DCW 2; stderr@@GLIBC_2.4|2-0
6306|data|DCW 2; getpagesize@@GLIBC_2.4|2-0
6308|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
6310|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
6312|data|DCW 0; local  symbol: rbd_create2|0-0
6314|data|DCW 0; local  symbol: rbd_flatten|0-0
6316|data|DCW 0; local  symbol: rbd_snap_create|0-0
6318|data|DCW 0; local  symbol: rbd_snap_protect|0-0
6320|data|DCW 0; local  symbol: rbd_snap_remove|0-0
6322|data|DCW 2; sleep@@GLIBC_2.4|2-0
6324|data|DCW 2; initstate@@GLIBC_2.4|2-0
6326|data|DCW 2; raise@@GLIBC_2.4|2-0
6328|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
6330|data|DCW 2; setvbuf@@GLIBC_2.4|2-0
6332|data|DCW 2; fwrite@@GLIBC_2.4|2-0
6334|data|DCW 0; local  symbol: rbd_resize|0-0
6336|data|DCW 2; malloc@@GLIBC_2.4|2-0
6338|data|DCW 0; local  symbol: rbd_clone2|0-0
6340|data|DCW 0; local  symbol: rados_ioctx_destroy|0-0
6342|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
6344|data|DCW 2; fclose@@GLIBC_2.4|2-0
6346|data|DCW 2; write@@GLIBC_2.4|2-0
6348|data|DCW 2; lseek64@@GLIBC_2.4|2-0
6350|data|DCW 2; stdout@@GLIBC_2.4|2-0
6352|data|DCW 2; random@@GLIBC_2.4|2-0
6354|data|DCW 0; local  symbol: rados_conf_read_file|0-0
6356|data|DCW 2; time@@GLIBC_2.4|2-0
6358|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
6360|data|DCW 2; strncpy@@GLIBC_2.4|2-0
6362|data|DCW 2; __strcat_chk@@GLIBC_2.4|2-0
6364|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
6366|data|DCW 2; fopen64@@GLIBC_2.4|2-0
6368|data|DCW 2; memcmp@@GLIBC_2.4|2-0
6370|data|DCW 2; __sprintf_chk@@GLIBC_2.4|2-0
6372|data|DCW 2; fputs@@GLIBC_2.4|2-0
6374|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
6376|data|DCW 0; local  symbol: rbd_stat|0-0
6378|data|DCW 0; local  symbol: __gmon_start__|0-0
6380|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
6382|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
6384|data|DCW 0; local  symbol: rbd_create|0-0
6386|data|DCW 1; global symbol: maxfilelen|1-0
6388|data|DCW 1; global symbol: save_buffer|1-0
6390|data|DCW 1; global symbol: simulatedopcount|1-0
6392|data|DCW 1; global symbol: iname|1-0
6394|data|DCW 1; global symbol: prterrcode|1-0
6396|data|DCW 1; global symbol: progressinterval|1-0
6398|data|DCW 1; global symbol: data_start|1-0
6400|data|DCW 1; global symbol: numops|1-0
6402|data|DCW 1; global symbol: check_size|1-0
6404|data|DCW 1; global symbol: do_clone|1-0
6406|data|DCW 1; global symbol: oplog|1-0
6408|data|DCW 1; global symbol: __bss_start__|1-0
6410|data|DCW 1; global symbol: mmap_mask|1-0
6412|data|DCW 1; global symbol: o_direct|1-0
6414|data|DCW 1; global symbol: aio|1-0
6416|data|DCW 1; global symbol: _bss_end__|1-0
6418|data|DCW 1; global symbol: truncbdy|1-0
6420|data|DCW 1; global symbol: dowrite|1-0
6422|data|DCW 1; global symbol: seed|1-0
6424|data|DCW 1; global symbol: fsxgoodfd|1-0
6426|data|DCW 1; global symbol: prterr|1-0
6428|data|DCW 1; global symbol: state|1-0
6430|data|DCW 1; global symbol: clone_calls|1-0
6432|data|DCW 1; global symbol: log4|1-0
6434|data|DCW 1; global symbol: page_mask|1-0
6436|data|DCW 1; global symbol: punch_hole_calls|1-0
6438|data|DCW 1; global symbol: usage|1-0
6440|data|DCW 1; global symbol: page_size|1-0
6442|data|DCW 1; global symbol: debugstart|1-0
6444|data|DCW 1; global symbol: _edata|1-0
6446|data|DCW 1; global symbol: cleanup|1-0
6448|data|DCW 1; global symbol: original_buf|1-0
6450|data|DCW 1; global symbol: vwarnc|1-0
6452|data|DCW 1; global symbol: gendata|1-0
6454|data|DCW 1; global symbol: dotruncate|1-0
6456|data|DCW 1; global symbol: report_failure|1-0
6458|data|DCW 1; global symbol: __end__|1-0
6460|data|DCW 1; global symbol: fsxlogf|1-0
6462|data|DCW 1; global symbol: closeopen|1-0
6464|data|DCW 1; global symbol: __libc_csu_init|1-0
6466|data|DCW 1; global symbol: __libc_csu_fini|1-0
6468|data|DCW 1; global symbol: fallocate_calls|1-0
6470|data|DCW 1; global symbol: _fini|1-0
6472|data|DCW 1; global symbol: _start|1-0
6474|data|DCW 1; global symbol: _init|1-0
6476|data|DCW 1; global symbol: logptr|1-0
6478|data|DCW 1; global symbol: check_buffers|1-0
6480|data|DCW 1; global symbol: writefileimage|1-0
6482|data|DCW 1; global symbol: logdump|1-0
6484|data|DCW 1; global symbol: do_flatten|1-0
6486|data|DCW 1; global symbol: pool|1-0
6488|data|DCW 1; global symbol: image|1-0
6490|data|DCW 1; global symbol: _IO_stdin_used|1-0
6492|data|DCW 1; global symbol: __bss_start|1-0
6494|data|DCW 1; global symbol: dirpath|1-0
6496|data|DCW 1; global symbol: ioctx|1-0
6498|data|DCW 1; global symbol: monitorend|1-0
6500|data|DCW 1; global symbol: _end|1-0
6502|data|DCW 1; global symbol: quiet|1-0
6504|data|DCW 1; global symbol: readbdy|1-0
6506|data|DCW 1; global symbol: randomoplen|1-0
6508|data|DCW 1; global symbol: test|1-0
6510|data|DCW 1; global symbol: clone_filename|1-0
6512|data|DCW 1; global symbol: closeprob|1-0
6514|data|DCW 1; global symbol: do_punch_hole|1-0
6516|data|DCW 1; global symbol: mapped_writes|1-0
6518|data|DCW 1; global symbol: file_size|1-0
6520|data|DCW 1; global symbol: mapped_reads|1-0
6522|data|DCW 1; global symbol: simple_err|1-0
6524|data|DCW 1; global symbol: testcalls|1-0
6526|data|DCW 1; global symbol: prt|1-0
6528|data|DCW 1; global symbol: debug|1-0
6530|data|DCW 1; global symbol: flush|1-0
6532|data|DCW 1; global symbol: do_fsync|1-0
6534|data|DCW 1; global symbol: docloseopen|1-0
6536|data|DCW 1; global symbol: create_image|1-0
6538|data|DCW 1; global symbol: warn|1-0
6540|data|DCW 1; global symbol: __bss_end__|1-0
6542|data|DCW 1; global symbol: getnum|1-0
6544|data|DCW 1; global symbol: doread|1-0
6546|data|DCW 1; global symbol: test_fallocate|1-0
6548|data|DCW 1; global symbol: randomize_striping|1-0
6550|data|DCW 1; global symbol: __data_start|1-0
6552|data|DCW 1; global symbol: biggest|1-0
6554|data|DCW 1; global symbol: num_clones|1-0
6556|data|DCW 1; global symbol: badoff|1-0
6558|data|DCW 1; global symbol: cluster|1-0
6560|data|DCW 1; global symbol: lite|1-0
6562|data|DCW 1; global symbol: main|1-0
6564|data|DCW 1; global symbol: doflush|1-0
6566|data|DCW 1; global symbol: good_buf|1-0
6568|data|DCW 1; global symbol: sizechecks|1-0
6570|data|DCW 1; global symbol: check_trunc_hack|1-0
6572|data|DCW 1; global symbol: check_eofpage|1-0
6574|data|DCW 1; global symbol: writebdy|1-0
6576|data|DCW 1; global symbol: check_clone|1-0
6578|data|DCW 1; global symbol: maxoplen|1-0
6580|data|DCW 1; global symbol: prealloc|1-0
6582|data|DCW 1; global symbol: temp_buf|1-0
6584|data|DCW 1; global symbol: style|1-0
6586|data|DCW 1; global symbol: logcount|1-0
6588|data|DCW 1; global symbol: clone_imagename|1-0
6590|data|DCW 1; global symbol: monitorstart|1-0
6592|data|Elf32_Verneed <1, 1, aLibmSo6 - byte_10E4, 0x10, 0x20>; "libm.so.6"|1-0-1-0-226-1-0-0-16-0-0-0-32-0-0-0
6608|data|Elf32_Vernaux <0xD696914, 0, 4, aGlibc24 - byte_10E4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-4-0-98-7-0-0-0-0-0-0
6624|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_10E4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-145-3-0-0-16-0-0-0-32-0-0-0
6640|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_10E4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-98-7-0-0-0-0-0-0
6656|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_10E4, 0x10, 0>; "libc.so.6"|1-0-1-0-241-1-0-0-16-0-0-0-0-0-0-0
6672|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_10E4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-98-7-0-0-0-0-0-0
6688|data|Elf32_Rel <0x16D48, 0x17>; R_ARM_RELATIVE|72-109-1-0-23-0-0-0
6696|data|Elf32_Rel <0x16D4C, 0x17>; R_ARM_RELATIVE|76-109-1-0-23-0-0-0
6704|data|Elf32_Rel <0x16F90, 0x17>; R_ARM_RELATIVE|144-111-1-0-23-0-0-0
6712|data|Elf32_Rel <0x16F94, 0x17>; R_ARM_RELATIVE|148-111-1-0-23-0-0-0
6720|data|Elf32_Rel <0x16FA0, 0x17>; R_ARM_RELATIVE|160-111-1-0-23-0-0-0
6728|data|Elf32_Rel <0x16FA4, 0x17>; R_ARM_RELATIVE|164-111-1-0-23-0-0-0
6736|data|Elf32_Rel <0x16FA8, 0x17>; R_ARM_RELATIVE|168-111-1-0-23-0-0-0
6744|data|Elf32_Rel <0x16FAC, 0x17>; R_ARM_RELATIVE|172-111-1-0-23-0-0-0
6752|data|Elf32_Rel <0x16FB0, 0x17>; R_ARM_RELATIVE|176-111-1-0-23-0-0-0
6760|data|Elf32_Rel <0x16FB4, 0x17>; R_ARM_RELATIVE|180-111-1-0-23-0-0-0
6768|data|Elf32_Rel <0x16FB8, 0x17>; R_ARM_RELATIVE|184-111-1-0-23-0-0-0
6776|data|Elf32_Rel <0x16FBC, 0x17>; R_ARM_RELATIVE|188-111-1-0-23-0-0-0
6784|data|Elf32_Rel <0x16FC4, 0x17>; R_ARM_RELATIVE|196-111-1-0-23-0-0-0
6792|data|Elf32_Rel <0x16FC8, 0x17>; R_ARM_RELATIVE|200-111-1-0-23-0-0-0
6800|data|Elf32_Rel <0x16FD4, 0x17>; R_ARM_RELATIVE|212-111-1-0-23-0-0-0
6808|data|Elf32_Rel <0x16FD8, 0x17>; R_ARM_RELATIVE|216-111-1-0-23-0-0-0
6816|data|Elf32_Rel <0x16FDC, 0x17>; R_ARM_RELATIVE|220-111-1-0-23-0-0-0
6824|data|Elf32_Rel <0x16FE0, 0x17>; R_ARM_RELATIVE|224-111-1-0-23-0-0-0
6832|data|Elf32_Rel <0x16FEC, 0x17>; R_ARM_RELATIVE|236-111-1-0-23-0-0-0
6840|data|Elf32_Rel <0x16FFC, 0x17>; R_ARM_RELATIVE|252-111-1-0-23-0-0-0
6848|data|Elf32_Rel <0x17004, 0x17>; R_ARM_RELATIVE|4-112-1-0-23-0-0-0
6856|data|Elf32_Rel <0x17008, 0x17>; R_ARM_RELATIVE|8-112-1-0-23-0-0-0
6864|data|Elf32_Rel <0x1700C, 0x17>; R_ARM_RELATIVE|12-112-1-0-23-0-0-0
6872|data|Elf32_Rel <0x17010, 0x17>; R_ARM_RELATIVE|16-112-1-0-23-0-0-0
6880|data|Elf32_Rel <0x16F98, 0xC15>; R_ARM_GLOB_DAT __stack_chk_guard|152-111-1-0-21-12-0-0
6888|data|Elf32_Rel <0x16F9C, 0xF15>; R_ARM_GLOB_DAT optind|156-111-1-0-21-15-0-0
6896|data|Elf32_Rel <0x16FC0, 0x1B15>; R_ARM_GLOB_DAT optarg|192-111-1-0-21-27-0-0
6904|data|Elf32_Rel <0x16FCC, 0x2815>; R_ARM_GLOB_DAT stderr|204-111-1-0-21-40-0-0
6912|data|Elf32_Rel <0x16FD0, 0x2B15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|208-111-1-0-21-43-0-0
6920|data|Elf32_Rel <0x16FE4, 0x3F15>; R_ARM_GLOB_DAT stdout|228-111-1-0-21-63-0-0
6928|data|Elf32_Rel <0x16FE8, 0x4615>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|232-111-1-0-21-70-0-0
6936|data|Elf32_Rel <0x16FF0, 0x4D15>; R_ARM_GLOB_DAT __gmon_start__|240-111-1-0-21-77-0-0
6944|data|Elf32_Rel <0x16FF4, 0x4E15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|244-111-1-0-21-78-0-0
6952|data|Elf32_Rel <0x16FF8, 0x4F15>; R_ARM_GLOB_DAT __cxa_finalize|248-111-1-0-21-79-0-0
6960|data|Elf32_Rel <0x16E78, 0x316>; R_ARM_JUMP_SLOT signal|120-110-1-0-22-3-0-0
6968|data|Elf32_Rel <0x16E7C, 0x416>; R_ARM_JUMP_SLOT setstate|124-110-1-0-22-4-0-0
6976|data|Elf32_Rel <0x16E80, 0x516>; R_ARM_JUMP_SLOT rand|128-110-1-0-22-5-0-0
6984|data|Elf32_Rel <0x16E84, 0x616>; R_ARM_JUMP_SLOT rbd_read|132-110-1-0-22-6-0-0
6992|data|Elf32_Rel <0x16E88, 0x716>; R_ARM_JUMP_SLOT rados_ioctx_create|136-110-1-0-22-7-0-0
7000|data|Elf32_Rel <0x16E8C, 0x816>; R_ARM_JUMP_SLOT rbd_write|140-110-1-0-22-8-0-0
7008|data|Elf32_Rel <0x16E90, 0x916>; R_ARM_JUMP_SLOT strtol|144-110-1-0-22-9-0-0
7016|data|Elf32_Rel <0x16E94, 0xA16>; R_ARM_JUMP_SLOT free|148-110-1-0-22-10-0-0
7024|data|Elf32_Rel <0x16E98, 0xB16>; R_ARM_JUMP_SLOT rbd_open|152-110-1-0-22-11-0-0
7032|data|Elf32_Rel <0x16E9C, 0xD16>; R_ARM_JUMP_SLOT rados_shutdown|156-110-1-0-22-13-0-0
7040|data|Elf32_Rel <0x16EA0, 0xE16>; R_ARM_JUMP_SLOT rbd_remove|160-110-1-0-22-14-0-0
7048|data|Elf32_Rel <0x16EA4, 0x1016>; R_ARM_JUMP_SLOT exit|164-110-1-0-22-16-0-0
7056|data|Elf32_Rel <0x16EA8, 0x1116>; R_ARM_JUMP_SLOT pread64|168-110-1-0-22-17-0-0
7064|data|Elf32_Rel <0x16EAC, 0x1216>; R_ARM_JUMP_SLOT strerror|172-110-1-0-22-18-0-0
7072|data|Elf32_Rel <0x16EB0, 0x1316>; R_ARM_JUMP_SLOT rados_create|176-110-1-0-22-19-0-0
7080|data|Elf32_Rel <0x16EB4, 0x1416>; R_ARM_JUMP_SLOT __vsnprintf_chk|180-110-1-0-22-20-0-0
7088|data|Elf32_Rel <0x16EB8, 0x1516>; R_ARM_JUMP_SLOT rados_connect|184-110-1-0-22-21-0-0
7096|data|Elf32_Rel <0x16EBC, 0x1616>; R_ARM_JUMP_SLOT __fprintf_chk|188-110-1-0-22-22-0-0
7104|data|Elf32_Rel <0x16EC0, 0x1716>; R_ARM_JUMP_SLOT memset|192-110-1-0-22-23-0-0
7112|data|Elf32_Rel <0x16EC4, 0x1816>; R_ARM_JUMP_SLOT __fxstat64|196-110-1-0-22-24-0-0
7120|data|Elf32_Rel <0x16EC8, 0x1916>; R_ARM_JUMP_SLOT rbd_close|200-110-1-0-22-25-0-0
7128|data|Elf32_Rel <0x16ECC, 0x1A16>; R_ARM_JUMP_SLOT close|204-110-1-0-22-26-0-0
7136|data|Elf32_Rel <0x16ED0, 0x1C16>; R_ARM_JUMP_SLOT rados_conf_parse_env|208-110-1-0-22-28-0-0
7144|data|Elf32_Rel <0x16ED4, 0x1D16>; R_ARM_JUMP_SLOT abort|212-110-1-0-22-29-0-0
7152|data|Elf32_Rel <0x16ED8, 0x1E16>; R_ARM_JUMP_SLOT rados_pool_create|216-110-1-0-22-30-0-0
7160|data|Elf32_Rel <0x16EDC, 0x1F16>; R_ARM_JUMP_SLOT unlink|220-110-1-0-22-31-0-0
7168|data|Elf32_Rel <0x16EE0, 0x2016>; R_ARM_JUMP_SLOT rbd_get_parent_info|224-110-1-0-22-32-0-0
7176|data|Elf32_Rel <0x16EE4, 0x2116>; R_ARM_JUMP_SLOT open64|228-110-1-0-22-33-0-0
7184|data|Elf32_Rel <0x16EE8, 0x2216>; R_ARM_JUMP_SLOT rbd_discard|232-110-1-0-22-34-0-0
7192|data|Elf32_Rel <0x16EEC, 0x2316>; R_ARM_JUMP_SLOT __strncat_chk|236-110-1-0-22-35-0-0
7200|data|Elf32_Rel <0x16EF0, 0x2416>; R_ARM_JUMP_SLOT ceil|240-110-1-0-22-36-0-0
7208|data|Elf32_Rel <0x16EF4, 0x2516>; R_ARM_JUMP_SLOT getopt|244-110-1-0-22-37-0-0
7216|data|Elf32_Rel <0x16EF8, 0x2616>; R_ARM_JUMP_SLOT rbd_snap_unprotect|248-110-1-0-22-38-0-0
7224|data|Elf32_Rel <0x16EFC, 0x2716>; R_ARM_JUMP_SLOT rbd_flush|252-110-1-0-22-39-0-0
7232|data|Elf32_Rel <0x16F00, 0x2916>; R_ARM_JUMP_SLOT getpagesize|0-111-1-0-22-41-0-0
7240|data|Elf32_Rel <0x16F04, 0x2A16>; R_ARM_JUMP_SLOT __stack_chk_fail|4-111-1-0-22-42-0-0
7248|data|Elf32_Rel <0x16F08, 0x2C16>; R_ARM_JUMP_SLOT rbd_create2|8-111-1-0-22-44-0-0
7256|data|Elf32_Rel <0x16F0C, 0x2D16>; R_ARM_JUMP_SLOT rbd_flatten|12-111-1-0-22-45-0-0
7264|data|Elf32_Rel <0x16F10, 0x2E16>; R_ARM_JUMP_SLOT rbd_snap_create|16-111-1-0-22-46-0-0
7272|data|Elf32_Rel <0x16F14, 0x2F16>; R_ARM_JUMP_SLOT rbd_snap_protect|20-111-1-0-22-47-0-0
7280|data|Elf32_Rel <0x16F18, 0x3016>; R_ARM_JUMP_SLOT rbd_snap_remove|24-111-1-0-22-48-0-0
7288|data|Elf32_Rel <0x16F1C, 0x3116>; R_ARM_JUMP_SLOT sleep|28-111-1-0-22-49-0-0
7296|data|Elf32_Rel <0x16F20, 0x3216>; R_ARM_JUMP_SLOT initstate|32-111-1-0-22-50-0-0
7304|data|Elf32_Rel <0x16F24, 0x3316>; R_ARM_JUMP_SLOT raise|36-111-1-0-22-51-0-0
7312|data|Elf32_Rel <0x16F28, 0x3416>; R_ARM_JUMP_SLOT __vfprintf_chk|40-111-1-0-22-52-0-0
7320|data|Elf32_Rel <0x16F2C, 0x3516>; R_ARM_JUMP_SLOT setvbuf|44-111-1-0-22-53-0-0
7328|data|Elf32_Rel <0x16F30, 0x3616>; R_ARM_JUMP_SLOT fwrite|48-111-1-0-22-54-0-0
7336|data|Elf32_Rel <0x16F34, 0x3716>; R_ARM_JUMP_SLOT rbd_resize|52-111-1-0-22-55-0-0
7344|data|Elf32_Rel <0x16F38, 0x3816>; R_ARM_JUMP_SLOT malloc|56-111-1-0-22-56-0-0
7352|data|Elf32_Rel <0x16F3C, 0x3916>; R_ARM_JUMP_SLOT rbd_clone2|60-111-1-0-22-57-0-0
7360|data|Elf32_Rel <0x16F40, 0x3A16>; R_ARM_JUMP_SLOT rados_ioctx_destroy|64-111-1-0-22-58-0-0
7368|data|Elf32_Rel <0x16F44, 0x3B16>; R_ARM_JUMP_SLOT __snprintf_chk|68-111-1-0-22-59-0-0
7376|data|Elf32_Rel <0x16F48, 0x3C16>; R_ARM_JUMP_SLOT fclose|72-111-1-0-22-60-0-0
7384|data|Elf32_Rel <0x16F4C, 0x3D16>; R_ARM_JUMP_SLOT write|76-111-1-0-22-61-0-0
7392|data|Elf32_Rel <0x16F50, 0x3E16>; R_ARM_JUMP_SLOT lseek64|80-111-1-0-22-62-0-0
7400|data|Elf32_Rel <0x16F54, 0x4016>; R_ARM_JUMP_SLOT random|84-111-1-0-22-64-0-0
7408|data|Elf32_Rel <0x16F58, 0x4116>; R_ARM_JUMP_SLOT rados_conf_read_file|88-111-1-0-22-65-0-0
7416|data|Elf32_Rel <0x16F5C, 0x4216>; R_ARM_JUMP_SLOT time|92-111-1-0-22-66-0-0
7424|data|Elf32_Rel <0x16F60, 0x4316>; R_ARM_JUMP_SLOT __errno_location|96-111-1-0-22-67-0-0
7432|data|Elf32_Rel <0x16F64, 0x4416>; R_ARM_JUMP_SLOT strncpy|100-111-1-0-22-68-0-0
7440|data|Elf32_Rel <0x16F68, 0x4516>; R_ARM_JUMP_SLOT __strcat_chk|104-111-1-0-22-69-0-0
7448|data|Elf32_Rel <0x16F6C, 0x4716>; R_ARM_JUMP_SLOT fopen64|108-111-1-0-22-71-0-0
7456|data|Elf32_Rel <0x16F70, 0x4816>; R_ARM_JUMP_SLOT memcmp|112-111-1-0-22-72-0-0
7464|data|Elf32_Rel <0x16F74, 0x4916>; R_ARM_JUMP_SLOT __sprintf_chk|116-111-1-0-22-73-0-0
7472|data|Elf32_Rel <0x16F78, 0x4A16>; R_ARM_JUMP_SLOT fputs|120-111-1-0-22-74-0-0
7480|data|Elf32_Rel <0x16F7C, 0x4B16>; R_ARM_JUMP_SLOT __libc_start_main|124-111-1-0-22-75-0-0
7488|data|Elf32_Rel <0x16F80, 0x4C16>; R_ARM_JUMP_SLOT rbd_stat|128-111-1-0-22-76-0-0
7496|data|Elf32_Rel <0x16F84, 0x4D16>; R_ARM_JUMP_SLOT __gmon_start__|132-111-1-0-22-77-0-0
7504|data|Elf32_Rel <0x16F88, 0x4F16>; R_ARM_JUMP_SLOT __cxa_finalize|136-111-1-0-22-79-0-0
7512|data|Elf32_Rel <0x16F8C, 0x5016>; R_ARM_JUMP_SLOT rbd_create|140-111-1-0-22-80-0-0
7520|code|PUSH            {R3,LR}; _init|8-64-45-233
7524|code|BL              sub_2B6C|128-3-0-235
7528|code|POP             {R3,PC}|8-128-189-232
7532|code|PUSH            {LR}|4-224-45-229
7536|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x1D7C)|4-224-159-229
7540|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
7544|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
7548|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1D7C|240-80-1-0
7552|code|ADRL            R12, 0x16D88|0-198-143-226-21-202-140-226
7560|code|LDR             PC, [R12,#(signal_ptr - 0x16D88)]!; __imp_signal|240-240-188-229
7564|code|ADRL            R12, 0x16D94|0-198-143-226-21-202-140-226
7572|code|LDR             PC, [R12,#(setstate_ptr - 0x16D94)]!; __imp_setstate|232-240-188-229
7576|code|ADRL            R12, 0x16DA0|0-198-143-226-21-202-140-226
7584|code|LDR             PC, [R12,#(rand_ptr - 0x16DA0)]!; __imp_rand|224-240-188-229
7588|code|ADRL            R12, 0x16DAC|0-198-143-226-21-202-140-226
7596|code|LDR             PC, [R12,#(rbd_read_ptr - 0x16DAC)]!; __imp_rbd_read|216-240-188-229
7600|code|ADRL            R12, 0x16DB8|0-198-143-226-21-202-140-226
7608|code|LDR             PC, [R12,#(rados_ioctx_create_ptr - 0x16DB8)]!; __imp_rados_ioctx_create|208-240-188-229
7612|code|ADRL            R12, 0x16DC4|0-198-143-226-21-202-140-226
7620|code|LDR             PC, [R12,#(rbd_write_ptr - 0x16DC4)]!; __imp_rbd_write|200-240-188-229
7624|code|ADRL            R12, 0x16DD0|0-198-143-226-21-202-140-226
7632|code|LDR             PC, [R12,#(strtol_ptr - 0x16DD0)]!; __imp_strtol|192-240-188-229
7636|code|ADRL            R12, 0x16DDC|0-198-143-226-21-202-140-226
7644|code|LDR             PC, [R12,#(free_ptr - 0x16DDC)]!; __imp_free|184-240-188-229
7648|code|ADRL            R12, 0x16DE8|0-198-143-226-21-202-140-226
7656|code|LDR             PC, [R12,#(rbd_open_ptr - 0x16DE8)]!; __imp_rbd_open|176-240-188-229
7660|code|ADRL            R12, 0x16DF4|0-198-143-226-21-202-140-226
7668|code|LDR             PC, [R12,#(rados_shutdown_ptr - 0x16DF4)]!; __imp_rados_shutdown|168-240-188-229
7672|code|ADRL            R12, 0x16E00|0-198-143-226-21-202-140-226
7680|code|LDR             PC, [R12,#(rbd_remove_ptr - 0x16E00)]!; __imp_rbd_remove|160-240-188-229
7684|code|ADRL            R12, 0x16E0C|0-198-143-226-21-202-140-226
7692|code|LDR             PC, [R12,#(exit_ptr - 0x16E0C)]!; __imp_exit|152-240-188-229
7696|code|ADRL            R12, 0x16E18|0-198-143-226-21-202-140-226
7704|code|LDR             PC, [R12,#(pread64_ptr - 0x16E18)]!; __imp_pread64|144-240-188-229
7708|code|ADRL            R12, 0x16E24|0-198-143-226-21-202-140-226
7716|code|LDR             PC, [R12,#(strerror_ptr - 0x16E24)]!; __imp_strerror|136-240-188-229
7720|code|ADRL            R12, 0x16E30|0-198-143-226-21-202-140-226
7728|code|LDR             PC, [R12,#(rados_create_ptr - 0x16E30)]!; __imp_rados_create|128-240-188-229
7732|code|ADRL            R12, 0x16E3C|0-198-143-226-21-202-140-226
7740|code|LDR             PC, [R12,#(__vsnprintf_chk_ptr - 0x16E3C)]!; __imp___vsnprintf_chk|120-240-188-229
7744|code|ADRL            R12, 0x16E48|0-198-143-226-21-202-140-226
7752|code|LDR             PC, [R12,#(rados_connect_ptr - 0x16E48)]!; __imp_rados_connect|112-240-188-229
7756|code|BX              PC|120-71
7758|data|ALIGN 4|192-70
7760|code|ADRL            R12, 0x16E58|0-198-143-226-21-202-140-226
7768|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x16E58)]!; __imp___fprintf_chk|100-240-188-229
7772|code|BX              PC|120-71
7774|data|ALIGN 0x10|192-70
7776|code|ADRL            R12, 0x16E68|0-198-143-226-21-202-140-226
7784|code|LDR             PC, [R12,#(memset_ptr - 0x16E68)]!; __imp_memset|88-240-188-229
7788|code|ADRL            R12, 0x16E74|0-198-143-226-21-202-140-226
7796|code|LDR             PC, [R12,#(__fxstat64_ptr - 0x16E74)]!; __imp___fxstat64|80-240-188-229
7800|code|ADRL            R12, 0x16E80|0-198-143-226-21-202-140-226
7808|code|LDR             PC, [R12,#(rbd_close_ptr - 0x16E80)]!; __imp_rbd_close|72-240-188-229
7812|code|ADRL            R12, 0x16E8C|0-198-143-226-21-202-140-226
7820|code|LDR             PC, [R12,#(close_ptr - 0x16E8C)]!; __imp_close|64-240-188-229
7824|code|ADRL            R12, 0x16E98|0-198-143-226-21-202-140-226
7832|code|LDR             PC, [R12,#(rados_conf_parse_env_ptr - 0x16E98)]!; __imp_rados_conf_parse_env|56-240-188-229
7836|code|ADRL            R12, 0x16EA4|0-198-143-226-21-202-140-226
7844|code|LDR             PC, [R12,#(abort_ptr - 0x16EA4)]!; __imp_abort|48-240-188-229
7848|code|ADRL            R12, 0x16EB0|0-198-143-226-21-202-140-226
7856|code|LDR             PC, [R12,#(rados_pool_create_ptr - 0x16EB0)]!; __imp_rados_pool_create|40-240-188-229
7860|code|ADRL            R12, 0x16EBC|0-198-143-226-21-202-140-226
7868|code|LDR             PC, [R12,#(unlink_ptr - 0x16EBC)]!; __imp_unlink|32-240-188-229
7872|code|ADRL            R12, 0x16EC8|0-198-143-226-21-202-140-226
7880|code|LDR             PC, [R12,#(rbd_get_parent_info_ptr - 0x16EC8)]!; __imp_rbd_get_parent_info|24-240-188-229
7884|code|ADRL            R12, 0x16ED4|0-198-143-226-21-202-140-226
7892|code|LDR             PC, [R12,#(open64_ptr - 0x16ED4)]!; __imp_open64|16-240-188-229
7896|code|ADRL            R12, 0x16EE0|0-198-143-226-21-202-140-226
7904|code|LDR             PC, [R12,#(rbd_discard_ptr - 0x16EE0)]!; __imp_rbd_discard|8-240-188-229
7908|code|ADRL            R12, 0x16EEC|0-198-143-226-21-202-140-226
7916|code|LDR             PC, [R12]!; __imp___strncat_chk|0-240-188-229
7920|code|ADR             R12, 0x1EF8|0-198-143-226
7924|code|ADD             R12, R12, #0x14000|20-202-140-226
7928|code|LDR             PC, [R12,#(ceil_ptr - 0x15EF8)]!; __imp_ceil|248-255-188-229
7932|code|ADR             R12, 0x1F04|0-198-143-226
7936|code|ADD             R12, R12, #0x14000|20-202-140-226
7940|code|LDR             PC, [R12,#(getopt_ptr - 0x15F04)]!; __imp_getopt|240-255-188-229
7944|code|ADR             R12, 0x1F10|0-198-143-226
7948|code|ADD             R12, R12, #0x14000|20-202-140-226
7952|code|LDR             PC, [R12,#(rbd_snap_unprotect_ptr - 0x15F10)]!; __imp_rbd_snap_unprotect|232-255-188-229
7956|code|BX              PC|120-71
7958|data|ALIGN 4|192-70
7960|code|ADR             R12, 0x1F20|0-198-143-226
7964|code|ADD             R12, R12, #0x14000|20-202-140-226
7968|code|LDR             PC, [R12,#(rbd_flush_ptr - 0x15F20)]!; __imp_rbd_flush|220-255-188-229
7972|code|ADR             R12, 0x1F2C|0-198-143-226
7976|code|ADD             R12, R12, #0x14000|20-202-140-226
7980|code|LDR             PC, [R12,#(getpagesize_ptr - 0x15F2C)]!; __imp_getpagesize|212-255-188-229
7984|code|ADR             R12, 0x1F38|0-198-143-226
7988|code|ADD             R12, R12, #0x14000|20-202-140-226
7992|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x15F38)]!; __imp___stack_chk_fail|204-255-188-229
7996|code|ADR             R12, 0x1F44|0-198-143-226
8000|code|ADD             R12, R12, #0x14000|20-202-140-226
8004|code|LDR             PC, [R12,#(rbd_create2_ptr - 0x15F44)]!; __imp_rbd_create2|196-255-188-229
8008|code|ADR             R12, 0x1F50|0-198-143-226
8012|code|ADD             R12, R12, #0x14000|20-202-140-226
8016|code|LDR             PC, [R12,#(rbd_flatten_ptr - 0x15F50)]!; __imp_rbd_flatten|188-255-188-229
8020|code|ADR             R12, 0x1F5C|0-198-143-226
8024|code|ADD             R12, R12, #0x14000|20-202-140-226
8028|code|LDR             PC, [R12,#(rbd_snap_create_ptr - 0x15F5C)]!; __imp_rbd_snap_create|180-255-188-229
8032|code|ADR             R12, 0x1F68|0-198-143-226
8036|code|ADD             R12, R12, #0x14000|20-202-140-226
8040|code|LDR             PC, [R12,#(rbd_snap_protect_ptr - 0x15F68)]!; __imp_rbd_snap_protect|172-255-188-229
8044|code|ADR             R12, 0x1F74|0-198-143-226
8048|code|ADD             R12, R12, #0x14000|20-202-140-226
8052|code|LDR             PC, [R12,#(rbd_snap_remove_ptr - 0x15F74)]!; __imp_rbd_snap_remove|164-255-188-229
8056|code|ADR             R12, 0x1F80|0-198-143-226
8060|code|ADD             R12, R12, #0x14000|20-202-140-226
8064|code|LDR             PC, [R12,#(sleep_ptr - 0x15F80)]!; __imp_sleep|156-255-188-229
8068|code|ADR             R12, 0x1F8C|0-198-143-226
8072|code|ADD             R12, R12, #0x14000|20-202-140-226
8076|code|LDR             PC, [R12,#(initstate_ptr - 0x15F8C)]!; __imp_initstate|148-255-188-229
8080|code|ADR             R12, 0x1F98|0-198-143-226
8084|code|ADD             R12, R12, #0x14000|20-202-140-226
8088|code|LDR             PC, [R12,#(raise_ptr - 0x15F98)]!; __imp_raise|140-255-188-229
8092|code|ADR             R12, 0x1FA4|0-198-143-226
8096|code|ADD             R12, R12, #0x14000|20-202-140-226
8100|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x15FA4)]!; __imp___vfprintf_chk|132-255-188-229
8104|code|ADR             R12, 0x1FB0|0-198-143-226
8108|code|ADD             R12, R12, #0x14000|20-202-140-226
8112|code|LDR             PC, [R12,#(setvbuf_ptr - 0x15FB0)]!; __imp_setvbuf|124-255-188-229
8116|code|ADR             R12, 0x1FBC|0-198-143-226
8120|code|ADD             R12, R12, #0x14000|20-202-140-226
8124|code|LDR             PC, [R12,#(fwrite_ptr - 0x15FBC)]!; __imp_fwrite|116-255-188-229
8128|code|ADR             R12, 0x1FC8|0-198-143-226
8132|code|ADD             R12, R12, #0x14000|20-202-140-226
8136|code|LDR             PC, [R12,#(rbd_resize_ptr - 0x15FC8)]!; __imp_rbd_resize|108-255-188-229
8140|code|ADR             R12, 0x1FD4|0-198-143-226
8144|code|ADD             R12, R12, #0x14000|20-202-140-226
8148|code|LDR             PC, [R12,#(malloc_ptr - 0x15FD4)]!; __imp_malloc|100-255-188-229
8152|code|ADR             R12, 0x1FE0|0-198-143-226
8156|code|ADD             R12, R12, #0x14000|20-202-140-226
8160|code|LDR             PC, [R12,#(rbd_clone2_ptr - 0x15FE0)]!; __imp_rbd_clone2|92-255-188-229
8164|code|ADR             R12, 0x1FEC|0-198-143-226
8168|code|ADD             R12, R12, #0x14000|20-202-140-226
8172|code|LDR             PC, [R12,#(rados_ioctx_destroy_ptr - 0x15FEC)]!; __imp_rados_ioctx_destroy|84-255-188-229
8176|code|ADR             R12, 0x1FF8|0-198-143-226
8180|code|ADD             R12, R12, #0x14000|20-202-140-226
8184|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x15FF8)]!; __imp___snprintf_chk|76-255-188-229
8188|code|ADR             R12, 0x2004|0-198-143-226
8192|code|ADD             R12, R12, #0x14000|20-202-140-226
8196|code|LDR             PC, [R12,#(fclose_ptr - 0x16004)]!; __imp_fclose|68-255-188-229
8200|code|ADR             R12, 0x2010|0-198-143-226
8204|code|ADD             R12, R12, #0x14000|20-202-140-226
8208|code|LDR             PC, [R12,#(write_ptr - 0x16010)]!; __imp_write|60-255-188-229
8212|code|ADR             R12, 0x201C|0-198-143-226
8216|code|ADD             R12, R12, #0x14000|20-202-140-226
8220|code|LDR             PC, [R12,#(lseek64_ptr - 0x1601C)]!; __imp_lseek64|52-255-188-229
8224|code|ADR             R12, 0x2028|0-198-143-226
8228|code|ADD             R12, R12, #0x14000|20-202-140-226
8232|code|LDR             PC, [R12,#(random_ptr - 0x16028)]!; __imp_random|44-255-188-229
8236|code|ADR             R12, 0x2034|0-198-143-226
8240|code|ADD             R12, R12, #0x14000|20-202-140-226
8244|code|LDR             PC, [R12,#(rados_conf_read_file_ptr - 0x16034)]!; __imp_rados_conf_read_file|36-255-188-229
8248|code|ADR             R12, 0x2040|0-198-143-226
8252|code|ADD             R12, R12, #0x14000|20-202-140-226
8256|code|LDR             PC, [R12,#(time_ptr - 0x16040)]!; __imp_time|28-255-188-229
8260|code|ADR             R12, 0x204C|0-198-143-226
8264|code|ADD             R12, R12, #0x14000|20-202-140-226
8268|code|LDR             PC, [R12,#(__errno_location_ptr - 0x1604C)]!; __imp___errno_location|20-255-188-229
8272|code|BX              PC|120-71
8274|data|ALIGN 4|192-70
8276|code|ADR             R12, 0x205C|0-198-143-226
8280|code|ADD             R12, R12, #0x14000|20-202-140-226
8284|code|LDR             PC, [R12,#(strncpy_ptr - 0x1605C)]!; __imp_strncpy|8-255-188-229
8288|code|ADR             R12, 0x2068|0-198-143-226
8292|code|ADD             R12, R12, #0x14000|20-202-140-226
8296|code|LDR             PC, [R12,#(__strcat_chk_ptr - 0x16068)]!; __imp___strcat_chk|0-255-188-229
8300|code|ADR             R12, 0x2074|0-198-143-226
8304|code|ADD             R12, R12, #0x14000|20-202-140-226
8308|code|LDR             PC, [R12,#(fopen64_ptr - 0x16074)]!; __imp_fopen64|248-254-188-229
8312|code|ADR             R12, 0x2080|0-198-143-226
8316|code|ADD             R12, R12, #0x14000|20-202-140-226
8320|code|LDR             PC, [R12,#(memcmp_ptr - 0x16080)]!; __imp_memcmp|240-254-188-229
8324|code|ADR             R12, 0x208C|0-198-143-226
8328|code|ADD             R12, R12, #0x14000|20-202-140-226
8332|code|LDR             PC, [R12,#(__sprintf_chk_ptr - 0x1608C)]!; __imp___sprintf_chk|232-254-188-229
8336|code|ADR             R12, 0x2098|0-198-143-226
8340|code|ADD             R12, R12, #0x14000|20-202-140-226
8344|code|LDR             PC, [R12,#(fputs_ptr - 0x16098)]!; __imp_fputs|224-254-188-229
8348|code|ADR             R12, 0x20A4|0-198-143-226
8352|code|ADD             R12, R12, #0x14000|20-202-140-226
8356|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x160A4)]!; __imp___libc_start_main|216-254-188-229
8360|code|ADR             R12, 0x20B0|0-198-143-226
8364|code|ADD             R12, R12, #0x14000|20-202-140-226
8368|code|LDR             PC, [R12,#(rbd_stat_ptr - 0x160B0)]!; __imp_rbd_stat|208-254-188-229
8372|code|ADR             R12, 0x20BC|0-198-143-226
8376|code|ADD             R12, R12, #0x14000|20-202-140-226
8380|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x160BC)]!; __imp___gmon_start__|200-254-188-229
8384|code|ADR             R12, 0x20C8|0-198-143-226
8388|code|ADD             R12, R12, #0x14000|20-202-140-226
8392|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x160C8)]!; __imp___cxa_finalize|192-254-188-229
8396|code|ADR             R12, 0x20D4|0-198-143-226
8400|code|ADD             R12, R12, #0x14000|20-202-140-226
8404|code|LDR             PC, [R12,#(rbd_create_ptr - 0x160D4)]!; __imp_rbd_create|184-254-188-229
8408|code|PUSH.W          {R4-R11,LR}|45-233-240-79
8412|code|SUBW            SP, SP, #0x92C|173-246-44-29
8416|code|LDR.W           R4, =(_GLOBAL_OFFSET_TABLE_ - 0x20F4)|223-248-244-72
8420|code|ADD.W           R8, SP, #0x950+var_82C|13-245-146-120
8424|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x16E6C)|223-248-240-56
8428|code|ADDW            R9, SP, #0x950+var_42C|13-242-36-89
8432|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
8434|code|LDR.W           R2, =(aBCDflMNoPQrSTW - 0x2100); "b:c:dfl:m:no:p:qr:s:t:w:xyACD:FHLN:OP:R"...|223-248-236-40
8438|code|MOV.W           R11, #0|79-240-0-11
8442|code|MOV             R6, R1|14-70
8444|code|ADD             R2, PC; "b:c:dfl:m:no:p:qr:s:t:w:xyACD:FHLN:OP:R"...|122-68
8446|code|STR             R2, [SP,#0x950+shortopts]|2-146
8448|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
8450|code|MOV             R5, R0|5-70
8452|code|LDR.W           R2, =(aMappedWritesDi - 0x2112); "mapped writes DISABLED\n"|223-248-220-40
8456|code|STRB.W          R11, [R8]|136-248-0-176
8460|code|LDR             R3, [R3]|27-104
8462|code|ADD             R2, PC; "mapped writes DISABLED\n"|122-68
8464|code|STRB.W          R11, [R9]|137-248-0-176
8468|code|STR             R2, [SP,#0x950+ptr]|7-146
8470|code|STR.W           R3, [SP,#0x950+var_2C]|205-248-36-57
8474|code|BLX             getpagesize|255-247-4-239
8478|code|LDR.W           R2, =(page_size_ptr - 0x16E6C)|223-248-200-40
8482|code|MOV             R3, R11; n|91-70
8484|code|LDR.W           R12, =(page_mask_ptr - 0x16E6C)|223-248-196-200
8488|code|MOV             R1, R11; buf|89-70
8490|code|LDR.W           R10, =(fsxlogf - 0x2134)|223-248-196-168
8494|code|LDR             R2, [R4,R2]; page_size|162-88
8496|code|ADD             R10, PC; fsxlogf|250-68
8498|code|MOV             R7, R2|23-70
8500|code|MOVS            R2, #1; modes|1-34
8502|code|STR             R0, [R7]|56-96
8504|code|ADD.W           LR, R0, #0xFFFFFFFF|0-241-255-62
8508|code|LDR.W           R0, [R4,R12]; page_mask|84-248-12-0
8512|code|LDR.W           R12, =(mmap_mask_ptr - 0x16E6C)|223-248-176-200
8516|code|LDR.W           R7, =(off_17008 - 0x2154); "PAST_EOF"|223-248-176-120
8520|code|STR.W           LR, [R0]|192-248-0-224
8524|code|LDR.W           R0, [R4,R12]; mmap_mask|84-248-12-0
8528|code|ADD             R7, PC; off_17008|127-68
8530|code|LDR.W           R12, =(stdout_ptr - 0x16E6C)|223-248-168-200
8534|code|STR.W           LR, [R0]|192-248-0-224
8538|code|LDR.W           R0, [R4,R12]; stdout|84-248-12-0
8542|code|STR             R7, [SP,#0x950+var_944]|3-151
8544|code|STR             R0, [SP,#0x950+var_940]|4-144
8546|code|LDR             R0, [R0]; stream|0-104
8548|code|BLX             setvbuf|255-247-32-239
8552|code|LDR.W           R3, =(fsxlogf - 0x2172)|223-248-148-56
8556|code|LDR             R7, [SP,#0x950+shortopts]|2-159
8558|code|ADD             R3, PC; fsxlogf|123-68
8560|code|STR             R3, [SP,#0x950+var_93C]|5-147
8562|code|LDR.W           R3, =(off_17008 - 0x217A); "PAST_EOF"|223-248-144-56
8566|code|ADD             R3, PC; off_17008|123-68
8568|code|STR             R3, [SP,#0x950+var_938]|6-147
8570|code|MOV             R1, R6; argv|49-70
8572|code|MOV             R0, R5; argc|40-70
8574|code|MOV             R2, R7; shortopts|58-70
8576|code|BLX             getopt|255-247-188-238
8580|code|ADDS            R1, R0, #1|65-28
8582|code|BEQ             loc_2204|61-208
8584|code|SUBS            R0, #0x41 ; 'A'; switch 57 cases|65-56
8586|code|CMP             R0, #0x38|56-40
8588|code|BHI             def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|66-216
8590|code|TBH.W           [PC,R0,LSL#1]; switch jump|223-232-16-240
8594|data|DCW 0x1C4; jump table for switch statement|196-1
8596|data|DCW 0x41|65-0
8598|data|DCW 0x1BE|190-1
8600|data|DCW 0x1AF|175-1
8602|data|DCW 0x41|65-0
8604|data|DCW 0x1A9|169-1
8606|data|DCW 0x41|65-0
8608|data|DCW 0x1A3|163-1
8610|data|DCW 0x41|65-0
8612|data|DCW 0x41|65-0
8614|data|DCW 0x41|65-0
8616|data|DCW 0x19B|155-1
8618|data|DCW 0x41|65-0
8620|data|DCW 0x18C|140-1
8622|data|DCW 0x186|134-1
8624|data|DCW 0x15D|93-1
8626|data|DCW 0x41|65-0
8628|data|DCW 0x157|87-1
8630|data|DCW 0x140|64-1
8632|data|DCW 0x41|65-0
8634|data|DCW 0x41|65-0
8636|data|DCW 0x41|65-0
8638|data|DCW 0x130|48-1
8640|data|DCW 0x41|65-0
8642|data|DCW 0x41|65-0
8644|data|DCW 0x129|41-1
8646|data|DCW 0x41|65-0
8648|data|DCW 0x41|65-0
8650|data|DCW 0x41|65-0
8652|data|DCW 0x41|65-0
8654|data|DCW 0x41|65-0
8656|data|DCW 0x41|65-0
8658|data|DCW 0x41|65-0
8660|data|DCW 0x110|16-1
8662|data|DCW 0xF9|249-0
8664|data|DCW 0xF3|243-0
8666|data|DCW 0x41|65-0
8668|data|DCW 0xED|237-0
8670|data|DCW 0x41|65-0
8672|data|DCW 0x41|65-0
8674|data|DCW 0x41|65-0
8676|data|DCW 0x41|65-0
8678|data|DCW 0x41|65-0
8680|data|DCW 0xDE|222-0
8682|data|DCW 0xAF|175-0
8684|data|DCW 0xA9|169-0
8686|data|DCW 0x9A|154-0
8688|data|DCW 0x8B|139-0
8690|data|DCW 0x85|133-0
8692|data|DCW 0x76|118-0
8694|data|DCW 0x6B|107-0
8696|data|DCW 0x5D|93-0
8698|data|DCW 0x41|65-0
8700|data|DCW 0x41|65-0
8702|data|DCW 0x4F|79-0
8704|data|DCW 0x49|73-0
8706|data|DCW 0x43|67-0
8708|code|LDR.W           R3, =(optind_ptr - 0x16E6C)|223-248-0-56
8712|code|LDR             R3, [R4,R3]; optind|227-88
8714|code|LDR             R3, [R3]|27-104
8716|code|SUBS            R5, R5, R3|237-26
8718|code|CMP             R5, #2|2-45
8720|code|BEQ.W           loc_2526|0-240-137-129
8724|code|BL              usage; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|2-240-86-251
8728|code|LDR.W           R3, =(fsxlogf - 0x2222); jumptable 0000218E case 121|223-248-240-55
8732|code|MOVS            R2, #1|1-34
8734|code|ADD             R3, PC; fsxlogf|123-68
8736|code|STR             R2, [R3,#(do_fsync - 0x17060)]|26-102
8738|code|B               loc_217A|170-231
8740|code|LDR.W           R3, =(fsxlogf - 0x222E); jumptable 0000218E case 120|223-248-232-55
8744|code|MOVS            R2, #1|1-34
8746|code|ADD             R3, PC; fsxlogf|123-68
8748|code|STR             R2, [R3,#(prealloc - 0x17060)]|218-101
8750|code|B               loc_217A|164-231
8752|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 119|223-248-224-55
8756|code|ADD             R1, SP, #0x950+var_930|8-169
8758|code|LDR             R3, [R4,R3]; optarg|227-88
8760|code|LDR             R0, [R3]|24-104
8762|code|BL              getnum|2-240-91-251
8766|code|LDR.W           R3, =(off_17008 - 0x2246); "PAST_EOF"|223-248-216-55
8770|code|ADD             R3, PC; off_17008|123-68
8772|code|CMP             R0, #0|0-40
8774|code|STR             R0, [R3,#(writebdy - 0x17008)]|24-98
8776|code|BGT             loc_217A|151-220
8778|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|227-231
8780|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 116|223-248-196-55
8784|code|ADD             R1, SP, #0x950+var_930|8-169
8786|code|LDR             R3, [R4,R3]; optarg|227-88
8788|code|LDR             R0, [R3]|24-104
8790|code|BL              getnum|2-240-77-251
8794|code|LDR.W           R3, =(off_17008 - 0x2262); "PAST_EOF"|223-248-192-55
8798|code|ADD             R3, PC; off_17008|123-68
8800|code|CMP             R0, #0|0-40
8802|code|STR             R0, [R3,#(truncbdy - 0x17008)]|88-98
8804|code|BGT             loc_217A|137-220
8806|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|213-231
8808|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 115|223-248-168-55
8812|code|ADD             R1, SP, #0x950+var_930|8-169
8814|code|LDR             R3, [R4,R3]; optarg|227-88
8816|code|LDR             R0, [R3]|24-104
8818|code|BL              getnum|2-240-63-251
8822|code|CMP             R0, #1|1-40
8824|code|BLS.W           loc_217A|127-246-127-175
8828|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|202-231
8830|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 114|223-248-148-55
8834|code|ADD             R1, SP, #0x950+var_930|8-169
8836|code|LDR             R3, [R4,R3]; optarg|227-88
8838|code|LDR             R0, [R3]|24-104
8840|code|BL              getnum|2-240-52-251
8844|code|LDR.W           R3, =(off_17008 - 0x2294); "PAST_EOF"|223-248-144-55
8848|code|ADD             R3, PC; off_17008|123-68
8850|code|CMP             R0, #0|0-40
8852|code|STR             R0, [R3,#(readbdy - 0x17008)]|88-97
8854|code|BGT.W           loc_217A|63-247-112-175
8858|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|187-231
8860|code|LDR.W           R3, =(fsxlogf - 0x22A6); jumptable 0000218E case 113|223-248-132-55
8864|code|MOVS            R2, #1|1-34
8866|code|ADD             R3, PC; fsxlogf|123-68
8868|code|STR             R2, [R3,#(quiet - 0x17060)]|26-98
8870|code|B               loc_217A|104-231
8872|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 112|223-248-104-55
8876|code|ADD             R1, SP, #0x950+var_930|8-169
8878|code|LDR             R3, [R4,R3]; optarg|227-88
8880|code|LDR             R0, [R3]|24-104
8882|code|BL              getnum|2-240-31-251
8886|code|LDR.W           R3, =(fsxlogf - 0x22BE)|223-248-112-55
8890|code|ADD             R3, PC; fsxlogf|123-68
8892|code|STR             R0, [R3,#(progressinterval - 0x17060)]|152-98
8894|code|CMP             R0, #0|0-40
8896|code|BNE.W           loc_217A|127-244-91-175
8900|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|166-231
8902|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 111|223-248-76-55
8906|code|ADD             R1, SP, #0x950+var_930|8-169
8908|code|LDR             R3, [R4,R3]; optarg|227-88
8910|code|LDR             R0, [R3]|24-104
8912|code|BL              getnum|2-240-16-251
8916|code|LDR.W           R3, =(off_17008 - 0x22DC); "PAST_EOF"|223-248-84-55
8920|code|ADD             R3, PC; off_17008|123-68
8922|code|CMP             R0, #0|0-40
8924|code|STR             R0, [R3,#(maxoplen - 0x17008)]|216-98
8926|code|BGT.W           loc_217A|63-247-76-175
8930|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|151-231
8932|code|LDR.W           R3, =(off_17008 - 0x22EE); jumptable 0000218E case 110|223-248-72-55
8936|code|MOVS            R2, #0|0-34
8938|code|ADD             R3, PC; off_17008|123-68
8940|code|STR             R2, [R3,#(sizechecks - 0x17008)]|218-99
8942|code|B               loc_217A|68-231
8944|code|LDR.W           R2, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 109|223-248-32-39
8948|code|ADD             R3, SP, #0x950+var_930|8-171
8950|code|STR             R3, [SP,#0x950+shortopts]|2-147
8952|code|MOV             R1, R3|25-70
8954|code|LDR.W           R11, =(off_17008 - 0x2304); "PAST_EOF"|223-248-56-183
8958|code|LDR             R2, [R4,R2]; optarg|162-88
8960|code|ADD             R11, PC; off_17008|251-68
8962|code|LDR             R0, [R2]|16-104
8964|code|BL              getnum|2-240-246-250
8968|code|CMP             R0, #0|0-40
8970|code|STR.W           R0, [R11,#(monitorstart - 0x17008)]|203-248-24-0
8974|code|BLT             def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|129-219
8976|code|LDR             R3, [SP,#0x950+shortopts]|2-155
8978|code|LDR             R2, [R3]|26-104
8980|code|CMP             R2, #0|0-42
8982|code|BEQ.W           def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|63-244-125-175
8986|code|ADDS            R0, R2, #1|80-28
8988|code|STR             R0, [R3]|24-96
8990|code|LDRSB.W         R2, [R2]|146-249-0-32
8994|code|CMP             R2, #0x3A ; ':'|58-42
8996|code|BNE.W           def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|127-244-118-175
9000|code|MOV             R1, R3|25-70
9002|code|BL              getnum|2-240-227-250
9006|code|CMP             R0, #0|0-40
9008|code|STR.W           R0, [R11,#(monitorend - 0x17008)]|203-248-28-0
9012|code|BLT.W           def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|255-246-110-175
9016|code|ITT EQ|4-191
9018|code|MOVEQ.W         R3, #0xFFFFFFFF|79-240-255-51
9022|code|STREQ.W         R3, [R11,#(monitorend - 0x17008)]|203-248-28-48
9026|code|LDR.W           R3, =(fsxlogf - 0x234C)|223-248-244-54
9030|code|MOVS            R2, #1|1-34
9032|code|ADD             R3, PC; fsxlogf|123-68
9034|code|STR             R2, [R3,#(debug - 0x17060)]|218-98
9036|code|B               loc_217A|21-231
9038|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 108|223-248-196-54
9042|code|ADD             R1, SP, #0x950+var_930|8-169
9044|code|LDR             R3, [R4,R3]; optarg|227-88
9046|code|LDR             R0, [R3]|24-104
9048|code|BL              getnum|2-240-204-250
9052|code|LDR.W           R3, =(off_17008 - 0x2364); "PAST_EOF"|223-248-220-54
9056|code|ADD             R3, PC; off_17008|123-68
9058|code|STR             R0, [R3,#(maxfilelen - 0x17008)]|152-99
9060|code|CMP             R0, #0|0-40
9062|code|BNE.W           loc_217A|127-244-8-175
9066|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|83-231
9068|code|LDR.W           R3, =(fsxlogf - 0x2376); jumptable 0000218E case 102|223-248-208-54
9072|code|MOVS            R2, #1|1-34
9074|code|ADD             R3, PC; fsxlogf|123-68
9076|code|STR             R2, [R3,#(flush - 0x17060)]|90-99
9078|code|B               loc_217A|0-231
9080|code|LDR.W           R3, =(fsxlogf - 0x2382); jumptable 0000218E case 100|223-248-200-54
9084|code|MOVS            R2, #1|1-34
9086|code|ADD             R3, PC; fsxlogf|123-68
9088|code|STR             R2, [R3,#(debug - 0x17060)]|218-98
9090|code|B               loc_217A|250-230
9092|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 99|223-248-140-54
9096|code|ADD             R1, SP, #0x950+var_930|8-169
9098|code|LDR             R3, [R4,R3]; optarg|227-88
9100|code|LDR             R0, [R3]|24-104
9102|code|BL              getnum|2-240-177-250
9106|code|LDR.W           R2, =(fsxlogf - 0x239A)|223-248-180-38
9110|code|ADD             R2, PC; fsxlogf|122-68
9112|code|LDR             R3, [R2,#(quiet - 0x17060)]|19-106
9114|code|STR             R0, [R2,#(closeprob - 0x17060)]|80-100
9116|code|CMP             R3, #0|0-43
9118|code|BEQ.W           loc_276C|0-240-229-129
9122|code|LDR.W           R3, =(fsxlogf - 0x23AA)|223-248-168-54
9126|code|ADD             R3, PC; fsxlogf|123-68
9128|code|LDR             R3, [R3,#(closeprob - 0x17060)]|91-108
9130|code|CMP             R3, #0|0-43
9132|code|BGT.W           loc_217A|63-247-229-174
9136|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|48-231
9138|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 98|223-248-96-54
9142|code|ADD             R1, SP, #0x950+var_930|8-169
9144|code|LDR             R3, [R4,R3]; optarg|227-88
9146|code|LDR             R0, [R3]|24-104
9148|code|BL              getnum|2-240-154-250
9152|code|LDR.W           R2, =(fsxlogf - 0x23C8)|223-248-140-38
9156|code|ADD             R2, PC; fsxlogf|122-68
9158|code|LDR             R3, [R2,#(quiet - 0x17060)]|19-106
9160|code|STR             R0, [R2,#(simulatedopcount - 0x17060)]|80-98
9162|code|CMP             R3, #0|0-43
9164|code|BEQ.W           loc_275A|0-240-197-129
9168|code|LDR.W           R2, =(fsxlogf - 0x23D8)|223-248-128-38
9172|code|ADD             R2, PC; fsxlogf|122-68
9174|code|LDR             R3, [R2,#(simulatedopcount - 0x17060)]|83-106
9176|code|CMP             R3, #0|0-43
9178|code|BEQ.W           def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|63-244-27-175
9182|code|SUBS            R3, #1|1-59
9184|code|STR             R3, [R2,#(simulatedopcount - 0x17060)]|83-98
9186|code|B               loc_217A|202-230
9188|code|LDR.W           R3, =(o_direct_ptr - 0x16E6C); jumptable 0000218E case 90|223-248-112-54
9192|code|MOV.W           R2, #0x10000|79-244-128-50
9196|code|LDR             R3, [R4,R3]; o_direct|227-88
9198|code|STR             R2, [R3]|26-96
9200|code|B               loc_217A|195-230
9202|code|LDR.W           R3, [R10,#(quiet - 0x17060)]; jumptable 0000218E case 87|218-248-32-48
9206|code|MOVS            R2, #0|0-34
9208|code|STR.W           R2, [R10,#(mapped_writes - 0x17060)]|202-248-80-32
9212|code|CMP             R3, #0|0-43
9214|code|BNE.W           loc_217A|127-244-188-174
9218|code|LDR             R3, [SP,#0x950+var_940]|4-155
9220|code|MOVS            R1, #1; size|1-33
9222|code|LDR             R0, [SP,#0x950+ptr]; ptr|7-152
9224|code|MOVS            R2, #0x17; n|23-34
9226|code|LDR             R3, [R3]; s|27-104
9228|code|BLX             fwrite|255-247-210-237
9232|code|B               loc_217A|179-230
9234|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 83|223-248-0-54
9238|code|ADD             R1, SP, #0x950+var_930|8-169
9240|code|LDR             R3, [R4,R3]; optarg|227-88
9242|code|LDR             R0, [R3]|24-104
9244|code|BL              getnum|2-240-106-250
9248|code|LDR             R2, [SP,#0x950+var_944]|3-154
9250|code|STR             R0, [R2,#0x44]|80-100
9252|code|CMP             R0, #0|0-40
9254|code|BEQ.W           loc_2794|0-240-181-129
9258|code|LDR             R3, [SP,#0x950+var_93C]|5-155
9260|code|LDR             R3, [R3,#0x20]|27-106
9262|code|CMP             R3, #0|0-43
9264|code|BEQ.W           loc_277E|0-240-165-129
9268|code|LDR             R3, [SP,#0x950+var_938]|6-155
9270|code|LDR             R3, [R3,#0x44]|91-108
9272|code|CMP             R3, #0|0-43
9274|code|BGE.W           loc_217A|191-246-158-174
9278|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|233-230
9280|code|LDR.W           R3, =(fsxlogf - 0x244A); jumptable 0000218E case 82|223-248-24-54
9284|code|MOVS            R2, #0|0-34
9286|code|ADD             R3, PC; fsxlogf|123-68
9288|code|STR             R2, [R3,#(mapped_reads - 0x17060)]|218-100
9290|code|B               loc_217A|150-230
9292|code|LDR.W           R0, =(dirpath_ptr - 0x16E6C); jumptable 0000218E case 80|223-248-16-6
9296|code|MOV.W           R2, #0x400; n|79-244-128-98
9300|code|LDR.W           R1, =(optarg_ptr - 0x16E6C)|223-248-188-21
9304|code|LDR.W           R11, =(asc_63EC - 0x2464); "/"|223-248-8-182
9308|code|LDR             R3, [R4,R0]; dirpath|35-88
9310|code|LDR             R1, [R4,R1]; optarg|97-88
9312|code|ADD             R11, PC; "/"|251-68
9314|code|MOV             R0, R3; dest|24-70
9316|code|STR             R3, [SP,#0x950+shortopts]|2-147
9318|code|LDR             R1, [R1]; src|9-104
9320|code|BLX             strncpy|255-247-244-237
9324|code|LDR             R1, [SP,#0x950+shortopts]; src|2-153
9326|code|MOV             R0, R8; dest|64-70
9328|code|MOV.W           R2, #0x400; n|79-244-128-98
9332|code|BLX             strncpy|255-247-238-237
9336|code|MOV             R1, R11|89-70
9338|code|MOV             R0, R8|64-70
9340|code|MOV.W           R2, #0x400|79-244-128-98
9344|code|BLX             __strcat_chk|255-247-238-237
9348|code|LDR             R1, [SP,#0x950+shortopts]; src|2-153
9350|code|MOV             R0, R9; dest|72-70
9352|code|MOV.W           R2, #0x400; n|79-244-128-98
9356|code|BLX             strncpy|255-247-226-237
9360|code|MOV             R0, R9|72-70
9362|code|MOV             R1, R11|89-70
9364|code|MOV.W           R2, #0x400|79-244-128-98
9368|code|BLX             __strcat_chk|255-247-226-237
9372|code|B               loc_217A|109-230
9374|code|LDR.W           R3, =(off_17008 - 0x24A8); jumptable 0000218E case 79|223-248-200-53
9378|code|MOVS            R2, #0|0-34
9380|code|ADD             R3, PC; off_17008|123-68
9382|code|STR             R2, [R3,#(randomoplen - 0x17008)]|26-99
9384|code|B               loc_217A|103-230
9386|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 78|223-248-104-53
9390|code|ADD             R1, SP, #0x950+var_930|8-169
9392|code|LDR             R3, [R4,R3]; optarg|227-88
9394|code|LDR             R0, [R3]|24-104
9396|code|BL              getnum|2-240-30-250
9400|code|LDR.W           R3, =(off_17008 - 0x24C0); "PAST_EOF"|223-248-176-53
9404|code|ADD             R3, PC; off_17008|123-68
9406|code|CMP             R0, #0|0-40
9408|code|STR             R0, [R3,#(numops - 0x17008)]|24-100
9410|code|BGE.W           loc_217A|191-246-90-174
9414|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|165-230
9416|code|LDR.W           R0, =(aLiteModeNotSup - 0x24D0); jumptable 0000218E case 76|223-248-164-5
9420|code|ADD             R0, PC; "lite mode not supported for rbd\n"|120-68
9422|code|BL              prt|0-240-33-252
9426|code|MOVS            R0, #1; status|1-32
9428|code|BLX             exit|255-247-150-236
9432|code|LDR.W           R3, =(off_17008 - 0x24E2); jumptable 0000218E case 72|223-248-152-53
9436|code|MOVS            R2, #0|0-34
9438|code|ADD             R3, PC; off_17008|123-68
9440|code|STR             R2, [R3,#(punch_hole_calls - 0x17008)]|90-99
9442|code|B               loc_217A|74-230
9444|code|LDR.W           R3, =(fsxlogf - 0x24EE); jumptable 0000218E case 70|223-248-144-53
9448|code|MOVS            R2, #0|0-34
9450|code|ADD             R3, PC; fsxlogf|123-68
9452|code|STR             R2, [R3,#(fallocate_calls - 0x17060)]|90-101
9454|code|B               loc_217A|68-230
9456|code|LDR.W           R3, =(optarg_ptr - 0x16E6C); jumptable 0000218E case 68|223-248-32-53
9460|code|ADD             R1, SP, #0x950+var_930|8-169
9462|code|LDR             R3, [R4,R3]; optarg|227-88
9464|code|LDR             R0, [R3]|24-104
9466|code|BL              getnum|2-240-251-249
9470|code|LDR.W           R3, =(fsxlogf - 0x2506)|223-248-124-53
9474|code|ADD             R3, PC; fsxlogf|123-68
9476|code|STR             R0, [R3,#(debugstart - 0x17060)]|152-100
9478|code|CMP             R0, #0|0-40
9480|code|BNE.W           loc_217A|127-244-55-174
9484|code|B               def_218E; jumptable 0000218E default case, cases 66,69,71,73-75,77,81,84-86,88,89,91-97,101,103-107,117,118|130-230
9486|code|LDR.W           R3, =(off_17008 - 0x2518); jumptable 0000218E case 67|223-248-112-53
9490|code|MOVS            R2, #0|0-34
9492|code|ADD             R3, PC; off_17008|123-68
9494|code|STR             R2, [R3,#(clone_calls - 0x17008)]|26-97
9496|code|B               loc_217A|47-230
9498|code|LDR.W           R3, =(fsxlogf - 0x2524); jumptable 0000218E case 65|223-248-104-53
9502|code|MOVS            R2, #1|1-34
9504|code|ADD             R3, PC; fsxlogf|123-68
9506|code|STR             R2, [R3,#(aio - 0x17060)]|90-102
9508|code|B               loc_217A|41-230
9510|code|LDR.W           R2, =(pool_ptr - 0x16E6C)|223-248-96-37
9514|code|ADD.W           LR, R6, R3,LSL#2|6-235-131-14
9518|code|LDR.W           R1, [R6,R3,LSL#2]|86-248-35-16
9522|code|MOVS            R0, #1; sig|1-32
9524|code|LDR.W           R3, =(iname_ptr - 0x16E6C)|223-248-84-53
9528|code|LDR             R6, [R4,R2]; pool|166-88
9530|code|LDR.W           R7, =(cleanup+1 - 0x2546)|223-248-84-117
9534|code|LDR.W           R2, [LR,#4]|222-248-4-32
9538|code|ADD             R7, PC; cleanup|127-68
9540|code|STR             R1, [R6]|49-96
9542|code|LDR             R6, [R4,R3]; iname|230-88
9544|code|MOV             R1, R7; handler|57-70
9546|code|STR             R2, [R6]|50-96
9548|code|BLX             signal|255-247-24-236
9552|code|MOV             R0, R5; sig|40-70
9554|code|MOV             R1, R7; handler|57-70
9556|code|BLX             signal|255-247-20-236
9560|code|MOV             R1, R7; handler|57-70
9562|code|MOVS            R0, #0xD; sig|13-32
9564|code|BLX             signal|255-247-16-236
9568|code|MOV             R1, R7; handler|57-70
9570|code|MOVS            R0, #0xE; sig|14-32
9572|code|BLX             signal|255-247-12-236
9576|code|MOV             R1, R7; handler|57-70
9578|code|MOVS            R0, #0xF; sig|15-32
9580|code|BLX             signal|255-247-8-236
9584|code|MOV             R1, R7; handler|57-70
9586|code|MOVS            R0, #0x18; sig|24-32
9588|code|BLX             signal|255-247-4-236
9592|code|MOV             R1, R7; handler|57-70
9594|code|MOVS            R0, #0x19; sig|25-32
9596|code|BLX             signal|255-247-0-236
9600|code|MOV             R1, R7; handler|57-70
9602|code|MOVS            R0, #0x1A; sig|26-32
9604|code|BLX             signal|255-247-252-235
9608|code|MOV             R1, R7; handler|57-70
9610|code|MOVS            R0, #0xA; sig|10-32
9612|code|BLX             signal|255-247-248-235
9616|code|MOV             R1, R7; handler|57-70
9618|code|MOVS            R0, #0xC; sig|12-32
9620|code|BLX             signal|255-247-244-235
9624|code|LDR.W           R1, =(state_ptr - 0x16E6C)|223-248-248-20
9628|code|LDR.W           R3, =(off_17008 - 0x25AA); "PAST_EOF"|223-248-248-52
9632|code|MOV.W           R2, #0x100; statelen|79-244-128-114
9636|code|LDR             R5, [R4,R1]; state|101-88
9638|code|ADD             R3, PC; off_17008|123-68
9640|code|LDR             R0, [R3,#(seed - 0x17008)]; seed|88-108
9642|code|MOV             R1, R5; statebuf|41-70
9644|code|BLX             initstate|255-247-234-236
9648|code|MOV             R0, R5; statebuf|40-70
9650|code|BLX             setstate|255-247-236-235
9654|code|BL              create_image|1-240-43-248
9658|code|SUBS            R1, R0, #0|1-30
9660|code|BLT.W           loc_27A6|192-242-243-128
9664|code|LDR.W           R0, =(ioctx_ptr - 0x16E6C)|223-248-216-4
9668|code|MOVS            R3, #0|0-35
9670|code|LDR.W           R2, =(image_ptr - 0x16E6C)|223-248-216-36
9674|code|LDR             R1, [R6]|49-104
9676|code|LDR             R7, [R4,R0]; ioctx|39-88
9678|code|LDR             R2, [R4,R2]; image|162-88
9680|code|LDR             R0, [R7]|56-104
9682|code|STR             R2, [SP,#0x950+shortopts]|2-146
9684|code|BLX             rbd_open|255-247-4-236
9688|code|SUBS            R1, R0, #0|1-30
9690|code|BLT.W           loc_28E0|192-242-129-129
9694|code|LDR.W           R3, =(dirpath_ptr - 0x16E6C)|223-248-128-52
9698|code|LDR             R0, [R4,R3]; dirpath|224-88
9700|code|LDRSB.W         R3, [R0]|144-249-0-48
9704|code|CMP             R3, #0|0-43
9706|code|BEQ.W           loc_28D2|0-240-114-129
9710|code|MOV.W           R3, #0x400|79-244-128-99
9714|code|LDR             R1, [R6]|49-104
9716|code|MOV.W           R2, #0x100|79-244-128-114
9720|code|MOV             R0, R8|64-70
9722|code|BLX             __strncat_chk|255-247-116-236
9726|code|LDR.W           R1, =(aFsxgood - 0x260C); ".fsxgood"|223-248-164-20
9730|code|MOV.W           R2, #0x400|79-244-128-98
9734|code|MOV             R0, R8|64-70
9736|code|ADD             R1, PC; ".fsxgood"|121-68
9738|code|LDR.W           R10, =(fsxlogf - 0x2624)|223-248-156-164
9742|code|BLX             __strcat_chk|255-247-40-237
9746|code|MOV             R0, R8|64-70
9748|code|MOVW            R1, #0x242|64-242-66-33
9752|code|MOV.W           R2, #0x1B6|79-244-219-114
9756|code|BLX             open64|255-247-86-236
9760|code|ADD             R10, PC; fsxlogf|250-68
9762|code|CMP             R0, #0|0-40
9764|code|STR.W           R0, [R10,#(fsxgoodfd - 0x17060)]|202-248-20-0
9768|code|BLT.W           loc_28C6|192-242-77-129
9772|code|MOV.W           R3, #0x400|79-244-128-99
9776|code|LDR             R1, [R6]|49-104
9778|code|MOV.W           R2, #0x100|79-244-128-114
9782|code|MOV             R0, R9|72-70
9784|code|BLX             __strncat_chk|255-247-84-236
9788|code|LDR.W           R1, =(aFsxlog - 0x264A); ".fsxlog"|223-248-108-20
9792|code|MOV.W           R2, #0x400|79-244-128-98
9796|code|MOV             R0, R9|72-70
9798|code|ADD             R1, PC; ".fsxlog"|121-68
9800|code|BLX             __strcat_chk|255-247-10-237
9804|code|LDR.W           R1, =(aW - 0x2656); "w"|223-248-96-20
9808|code|MOV             R0, R9|72-70
9810|code|ADD             R1, PC; "w"|121-68
9812|code|BLX             fopen64|255-247-10-237
9816|code|STR.W           R0, [R10]|202-248-0-0
9820|code|CMP             R0, #0|0-40
9822|code|BEQ.W           loc_28EE|0-240-70-129
9826|code|LDR.W           R9, =(off_17008 - 0x266E); "PAST_EOF"|223-248-80-148
9830|code|MOV.W           R10, #0|79-240-0-10
9834|code|ADD             R9, PC; off_17008|249-68
9836|code|LDR.W           R0, [R9,#(maxfilelen - 0x17008)]; size|217-248-56-0
9840|code|BLX             malloc|255-247-172-236
9844|code|LDR.W           R3, =(original_buf_ptr - 0x16E6C)|223-248-64-52
9848|code|LDR             R5, [SP,#0x950+shortopts]|2-157
9850|code|LDR.W           R8, [R4,R3]; original_buf|84-248-3-128
9854|code|STR.W           R0, [R8]|200-248-0-0
9858|code|B               loc_26AE|20-224
9860|code|LDR.W           R3, [R8]|216-248-0-48
9864|code|ADD.W           R11, R3, R10|3-235-10-11
9868|code|BLX             random|255-247-200-236
9872|code|MOVS            R3, #0xFF|255-35
9874|code|ADD.W           R10, R10, #1|10-241-1-10
9878|code|MOVT.W          R3, #0x8000|200-242-0-3
9882|code|ANDS            R3, R0|3-64
9884|code|CMP             R3, #0|0-43
9886|code|ITTT LT|190-191
9888|code|ADDLT.W         R3, R3, #0xFFFFFFFF|3-241-255-51
9892|code|ORNLT.W         R3, R3, #0xFF|99-240-255-3
9896|code|ADDLT           R3, #1|1-51
9898|code|STRB.W          R3, [R11]|139-248-0-48
9902|code|LDR.W           R3, [R9,#(maxfilelen - 0x17008)]|217-248-56-48
9906|code|CMP             R10, R3|154-69
9908|code|BLT             loc_2684|230-219
9910|code|LDR.W           R0, [R9,#(writebdy - 0x17008)]|217-248-32-0
9914|code|STR             R5, [SP,#0x950+shortopts]|2-149
9916|code|ADD             R0, R3; size|24-68
9918|code|BLX             malloc|255-247-134-236
9922|code|LDR.W           R12, =(good_buf_ptr - 0x16E6C)|223-248-248-195
9926|code|LDR.W           R3, [R9,#(writebdy - 0x17008)]|217-248-32-48
9930|code|MOVS            R1, #0; c|0-33
9932|code|LDR.W           R2, [R9,#(maxfilelen - 0x17008)]; n|217-248-56-32
9936|code|LDR.W           R5, [R4,R12]; good_buf|84-248-12-80
9940|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
9944|code|NEGS            R3, R3|91-66
9946|code|STR             R5, [SP,#0x950+var_944]|3-149
9948|code|ADD             R0, LR|112-68
9950|code|ANDS            R0, R3; s|24-64
9952|code|STR             R0, [R5]|40-96
9954|code|BLX             memset|255-247-190-235
9958|code|LDR.W           R3, [R9,#(maxfilelen - 0x17008)]|217-248-56-48
9962|code|LDR.W           R0, [R9,#(writebdy - 0x17008)]|217-248-32-0
9966|code|ADD             R0, R3; size|24-68
9968|code|BLX             malloc|255-247-108-236
9972|code|LDR.W           R12, =(temp_buf_ptr - 0x16E6C)|223-248-200-195
9976|code|LDR.W           R3, [R9,#(writebdy - 0x17008)]|217-248-32-48
9980|code|MOVS            R1, #0; c|0-33
9982|code|LDR.W           R2, [R9,#(maxfilelen - 0x17008)]; n|217-248-56-32
9986|code|ADD.W           LR, R3, #0xFFFFFFFF|3-241-255-62
9990|code|LDR.W           R5, [R4,R12]; temp_buf|84-248-12-80
9994|code|NEGS            R3, R3|91-66
9996|code|STR             R5, [SP,#0x950+var_940]|4-149
9998|code|ADD             R0, LR|112-68
10000|code|ANDS            R0, R3; s|24-64
10002|code|STR             R0, [R5]|40-96
10004|code|BLX             memset|255-247-164-235
10008|code|LDR             R3, =(fsxlogf - 0x271E)|234-75
10010|code|ADD             R3, PC; fsxlogf|123-68
10012|code|LDR             R3, [R3,#(lite - 0x17060)]|27-107
10014|code|CMP             R3, #0|0-43
10016|code|BEQ             loc_27B2|71-208
10018|code|LDR             R0, [SP,#0x950+var_944]|3-152
10020|code|MOVS            R2, #0|0-34
10022|code|LDR.W           R1, [R9,#(maxfilelen - 0x17008)]|217-248-56-16
10026|code|MOVS            R3, #0|0-35
10028|code|LDR             R0, [R0]|0-104
10030|code|MOV             R5, R0|5-70
10032|code|LDR             R0, [SP,#0x950+shortopts]|2-152
10034|code|LDR             R0, [R0]|0-104
10036|code|STR             R1, [SP,#0x950+var_950]|0-145
10038|code|STR             R5, [SP,#0x950+var_94C]|1-149
10040|code|BLX             rbd_write|255-247-64-235
10044|code|LDR.W           R2, [R9,#(maxfilelen - 0x17008)]|217-248-56-32
10048|code|CMP             R2, R0|130-66
10050|code|MOV             R1, R0|1-70
10052|code|BEQ             loc_27B6|55-208
10054|code|CMP             R0, #0|0-40
10056|code|BLT.W           loc_2920|192-242-234-128
10060|code|LDR             R0, =(aMainShortWrite - 0x2752); "main: short write, 0x%x bytes instead o"...|222-72
10062|code|ADD             R0, PC; "main: short write, 0x%x bytes instead o"...|120-68
10064|code|BL              warn|0-240-188-250
10068|code|MOVS            R0, #0x62 ; 'b'; status|98-32
10070|code|BLX             exit|255-247-86-235
10074|code|LDR             R2, [SP,#0x950+var_940]|4-154
10076|code|MOV             R3, R0|3-70
10078|code|MOVS            R1, #1|1-33
10080|code|LDR             R0, [R2]|16-104
10082|code|LDR             R2, =(aWillBeginAtOpe - 0x2768); "Will begin at operation %ld\n"|218-74
10084|code|ADD             R2, PC; "Will begin at operation %ld\n"|122-68
10086|code|BLX             __fprintf_chk|255-247-116-235
10090|code|B               loc_23D0|49-230
10092|code|LDR             R2, [SP,#0x950+var_940]|4-154
10094|code|MOV             R3, R0|3-70
10096|code|MOVS            R1, #1|1-33
10098|code|LDR             R0, [R2]|16-104
10100|code|LDR             R2, =(aChanceOfCloseO - 0x277A); "Chance of close/open is 1 in %d\n"|214-74
10102|code|ADD             R2, PC; "Chance of close/open is 1 in %d\n"|122-68
10104|code|BLX             __fprintf_chk|255-247-106-235
10108|code|B               loc_23A2|17-230
10110|code|LDR             R2, [SP,#0x950+var_940]|4-154
10112|code|MOVS            R1, #1|1-33
10114|code|LDR             R3, =(off_17008 - 0x278A); "PAST_EOF"|212-75
10116|code|LDR             R0, [R2]|16-104
10118|code|ADD             R3, PC; off_17008|123-68
10120|code|LDR             R2, =(aSeedSetToD - 0x2790); "Seed set to %d\n"|211-74
10122|code|LDR             R3, [R3,#(seed - 0x17008)]|91-108
10124|code|ADD             R2, PC; "Seed set to %d\n"|122-68
10126|code|BLX             __fprintf_chk|255-247-96-235
10130|code|B               loc_2434|79-230
10132|code|BLX             time|255-247-80-236
10136|code|MOVW            R1, #0x2710|66-242-16-113
10140|code|BL              sub_4E8C|2-240-118-251
10144|code|LDR             R3, [SP,#0x950+var_944]|3-155
10146|code|STR             R1, [R3,#0x44]|89-100
10148|code|B               loc_242A|65-230
10150|code|LDR             R0, [R6]|48-104
10152|code|BL              prterrcode|0-240-132-253
10156|code|MOVS            R0, #0x5A ; 'Z'; status|90-32
10158|code|BLX             exit|255-247-42-235
10162|code|BL              check_trunc_hack|0-240-237-254
10166|code|LDR             R6, =(off_17008 - 0x27BE); "PAST_EOF"|201-78
10168|code|LDR             R5, [SP,#0x950+shortopts]|2-157
10170|code|ADD             R6, PC; off_17008|126-68
10172|code|B               loc_27C2|1-224
10174|code|BL              test|1-240-253-254
10178|code|LDR             R3, [R6,#(numops - 0x17008)]|51-108
10180|code|ADDS            R2, R3, #1|90-28
10182|code|BEQ             loc_27BE|250-208
10184|code|SUBS            R2, R3, #1|90-30
10186|code|STR             R2, [R6,#(numops - 0x17008)]|50-100
10188|code|CMP             R3, #0|0-43
10190|code|BNE             loc_27BE|246-209
10192|code|LDR             R0, [R5]|40-104
10194|code|STR             R5, [SP,#0x950+shortopts]|2-149
10196|code|BLX             rbd_close|255-247-80-235
10200|code|SUBS            R1, R0, #0|1-30
10202|code|BLT.W           loc_2930|192-242-169-128
10206|code|LDR             R3, =(fsxlogf - 0x27E4)|192-75
10208|code|ADD             R3, PC; fsxlogf|123-68
10210|code|LDR             R0, [R3,#(num_clones - 0x17060)]|24-108
10212|code|CMP             R0, #0|0-40
10214|code|BLE             loc_27EE|2-221
10216|code|SUBS            R0, #1|1-56
10218|code|BL              check_clone|1-240-15-252
10222|code|LDR             R3, =(aSnap - 0x27FC); "snap"|189-75
10224|code|ADD             R6, SP, #0x950+var_92C|9-174
10226|code|LDR             R2, =(off_17008 - 0x2802); "PAST_EOF"|189-74
10228|code|LDR.W           R10, =(fsxlogf - 0x2808)|223-248-244-162
10232|code|ADD             R3, PC; "snap"|123-68
10234|code|LDR.W           R11, =(off_17008 - 0x280C); "PAST_EOF"|223-248-244-178
10238|code|ADD             R2, PC; off_17008|122-68
10240|code|LDR.W           R9, =(fsxlogf - 0x2812)|223-248-240-146
10244|code|ADD             R10, PC; fsxlogf|250-68
10246|code|STR             R4, [SP,#0x950+var_93C]|5-148
10248|code|ADD             R11, PC; off_17008|251-68
10250|code|STR.W           R8, [SP,#0x950+var_938]|205-248-24-128
10254|code|ADD             R9, PC; fsxlogf|249-68
10256|code|LDR             R5, [SP,#0x950+shortopts]|2-157
10258|code|MOV             R4, R3|28-70
10260|code|MOV             R8, R2|144-70
10262|code|B               loc_287A|48-224
10264|code|MOV             R0, R6|48-70
10266|code|MOVS            R1, #0x80|128-33
10268|code|BL              clone_imagename|1-240-208-251
10272|code|LDR             R0, [R7]|56-104
10274|code|MOV             R1, R6|49-70
10276|code|MOV             R2, R5|42-70
10278|code|MOVS            R3, #0|0-35
10280|code|BLX             rbd_open|255-247-218-234
10284|code|CMP             R0, #0|0-40
10286|code|BLT             loc_28FA|100-219
10288|code|LDR.W           R3, [R11,#(dword_17050 - 0x17008)]|219-248-72-48
10292|code|CBNZ            R3, loc_2852|107-185
10294|code|LDR             R0, [R5]|40-104
10296|code|MOV             R1, R4|33-70
10298|code|BLX             rbd_snap_unprotect|255-247-102-235
10302|code|CMP             R0, #0|0-40
10304|code|BLT.W           loc_29B0|192-242-182-128
10308|code|LDR             R0, [R5]|40-104
10310|code|MOV             R1, R4|33-70
10312|code|BLX             rbd_snap_remove|255-247-144-235
10316|code|CMP             R0, #0|0-40
10318|code|BLT.W           loc_298A|192-242-156-128
10322|code|LDR             R0, [R5]|40-104
10324|code|BLX             rbd_close|255-247-16-235
10328|code|CMP             R0, #0|0-40
10330|code|BLT.W           loc_2964|192-242-131-128
10334|code|LDR             R0, [R7]|56-104
10336|code|MOV             R1, R6|49-70
10338|code|BLX             rbd_remove|255-247-202-234
10342|code|CMP             R0, #0|0-40
10344|code|BLT             loc_293E|105-219
10346|code|LDR.W           R3, [R9,#(num_clones - 0x17060)]|217-248-64-48
10350|code|MOVS            R2, #0|0-34
10352|code|STR.W           R2, [R8,#(dword_17050 - 0x17008)]|200-248-72-32
10356|code|SUBS            R3, #1|1-59
10358|code|STR.W           R3, [R9,#(num_clones - 0x17060)]|201-248-64-48
10362|code|LDR.W           R2, [R10,#(num_clones - 0x17060)]|218-248-64-32
10366|code|CMP             R2, #0|0-42
10368|code|BGE             loc_2818|202-218
10370|code|LDR             R0, [R7]|56-104
10372|code|LDR             R4, [SP,#0x950+var_93C]|5-156
10374|code|LDR.W           R8, [SP,#0x950+var_938]|221-248-24-128
10378|code|BLX             rados_ioctx_destroy|255-247-172-235
10382|code|LDR             R3, =(aLibLdLinuxArmh+0x18); ""|154-75
10384|code|LDR             R3, [R4,R3]|227-88
10386|code|LDR             R0, [R3]|24-104
10388|code|BLX             rados_shutdown|255-247-170-234
10392|code|LDR.W           R0, [R8]; ptr|216-248-0-0
10396|code|BLX             free|255-247-154-234
10400|code|LDR             R3, [SP,#0x950+var_944]|3-155
10402|code|LDR             R0, [R3]; ptr|24-104
10404|code|BLX             free|255-247-150-234
10408|code|LDR             R3, [SP,#0x950+var_940]|4-155
10410|code|LDR             R0, [R3]; ptr|24-104
10412|code|BLX             free|255-247-146-234
10416|code|LDR             R0, =(aAllOperationsC - 0x28B6); "All operations completed A-OK!\n"|146-72
10418|code|ADD             R0, PC; "All operations completed A-OK!\n"|120-68
10420|code|BL              prt|0-240-46-250
10424|code|LDR.W           R0, [R10]; stream|218-248-0-0
10428|code|BLX             fclose|255-247-158-235
10432|code|MOVS            R0, #0; status|0-32
10434|code|BLX             exit|255-247-160-234
10438|code|MOV             R0, R8|64-70
10440|code|BL              prterr|0-240-126-250
10444|code|MOVS            R0, #0x5C ; '\'; status|92-32
10446|code|BLX             exit|255-247-154-234
10450|code|LDR             R1, =(asc_6458 - 0x28DC); "."|139-73
10452|code|MOV.W           R2, #0x400|79-244-128-98
10456|code|ADD             R1, PC; "."|121-68
10458|code|BLX             __strcat_chk|255-247-194-235
10462|code|B               loc_25EE|134-230
10464|code|LDR             R0, =(aErrorOpeningIm - 0x28E6); "Error opening image"|136-72
10466|code|ADD             R0, PC; "Error opening image"|120-68
10468|code|BL              simple_err|0-240-188-250
10472|code|MOVS            R0, #0x5B ; '['; status|91-32
10474|code|BLX             exit|255-247-140-234
10478|code|MOV             R0, R9|72-70
10480|code|BL              prterr|0-240-106-250
10484|code|MOVS            R0, #0x5D ; ']'; status|93-32
10486|code|BLX             exit|255-247-134-234
10490|code|ADD             R4, SP, #0x950+var_8AC|41-172
10492|code|LDR             R3, =(aRbdOpenS - 0x2908); "rbd_open %s"|130-75
10494|code|STR             R0, [SP,#0x950+shortopts]|2-144
10496|code|MOVS            R1, #1|1-33
10498|code|MOVS            R2, #0x80|128-34
10500|code|ADD             R3, PC; "rbd_open %s"|123-68
10502|code|STR             R6, [SP,#0x950+var_950]|0-150
10504|code|MOV             R0, R4|32-70
10506|code|BLX             __sprintf_chk|255-247-188-235
10510|code|LDR.W           R12, [SP,#0x950+shortopts]|221-248-8-192
10514|code|MOV             R0, R4|32-70
10516|code|MOV             R1, R12|97-70
10518|code|BL              prterrcode|0-240-205-252
10522|code|MOVS            R0, #0x65 ; 'e'|101-32
10524|code|BL              report_failure|0-240-56-253
10528|code|LDR             R0, [R6]|48-104
10530|code|BL              prterrcode|0-240-199-252
10534|code|LDR             R0, =(aMainErrorOnWri - 0x292C); "main: error on write"|121-72
10536|code|ADD             R0, PC; "main: error on write"|120-68
10538|code|BL              warn|0-240-207-249
10542|code|B               loc_2754|17-231
10544|code|LDR             R0, =(aRbdClose_0 - 0x2936); "rbd_close"|119-72
10546|code|ADD             R0, PC; "rbd_close"|120-68
10548|code|BL              prterrcode|0-240-190-252
10552|code|MOVS            R0, #0x63 ; 'c'|99-32
10554|code|BL              report_failure|0-240-41-253
10558|code|ADD             R4, SP, #0x950+var_8AC|41-172
10560|code|LDR             R3, =(aRbdRemoveS - 0x294C); "rbd_remove %s"|116-75
10562|code|STR             R0, [SP,#0x950+shortopts]|2-144
10564|code|MOVS            R1, #1|1-33
10566|code|MOVS            R2, #0x80|128-34
10568|code|ADD             R3, PC; "rbd_remove %s"|123-68
10570|code|STR             R6, [SP,#0x950+var_950]|0-150
10572|code|MOV             R0, R4|32-70
10574|code|BLX             __sprintf_chk|255-247-154-235
10578|code|LDR.W           R12, [SP,#0x950+shortopts]|221-248-8-192
10582|code|MOV             R0, R4|32-70
10584|code|MOV             R1, R12|97-70
10586|code|BL              prterrcode|0-240-171-252
10590|code|MOVS            R0, #0x69 ; 'i'|105-32
10592|code|BL              report_failure|0-240-22-253
10596|code|ADD             R4, SP, #0x950+var_8AC|41-172
10598|code|LDR             R3, =(aRbdCloseS - 0x2972); "rbd_close %s"|108-75
10600|code|STR             R0, [SP,#0x950+shortopts]|2-144
10602|code|MOVS            R1, #1|1-33
10604|code|MOVS            R2, #0x80|128-34
10606|code|ADD             R3, PC; "rbd_close %s"|123-68
10608|code|STR             R6, [SP,#0x950+var_950]|0-150
10610|code|MOV             R0, R4|32-70
10612|code|BLX             __sprintf_chk|255-247-134-235
10616|code|LDR.W           R12, [SP,#0x950+shortopts]|221-248-8-192
10620|code|MOV             R0, R4|32-70
10622|code|MOV             R1, R12|97-70
10624|code|BL              prterrcode|0-240-152-252
10628|code|MOVS            R0, #0x68 ; 'h'|104-32
10630|code|BL              report_failure|0-240-3-253
10634|code|ADD             R4, SP, #0x950+var_8AC|41-172
10636|code|LDR             R3, =(aRbdSnapRemoveS - 0x2998); "rbd_snap_remove %s@snap"|99-75
10638|code|STR             R0, [SP,#0x950+shortopts]|2-144
10640|code|MOVS            R1, #1|1-33
10642|code|MOVS            R2, #0x80|128-34
10644|code|ADD             R3, PC; "rbd_snap_remove %s@snap"|123-68
10646|code|STR             R6, [SP,#0x950+var_950]|0-150
10648|code|MOV             R0, R4|32-70
10650|code|BLX             __sprintf_chk|255-247-116-235
10654|code|LDR.W           R12, [SP,#0x950+shortopts]|221-248-8-192
10658|code|MOV             R0, R4|32-70
10660|code|MOV             R1, R12|97-70
10662|code|BL              prterrcode|0-240-133-252
10666|code|MOVS            R0, #0x67 ; 'g'|103-32
10668|code|BL              report_failure|0-240-240-252
10672|code|ADD             R4, SP, #0x950+var_8AC|41-172
10674|code|LDR             R3, =(aRbdSnapUnprote_0 - 0x29BE); "rbd_snap_unprotect %s@snap"|91-75
10676|code|STR             R0, [SP,#0x950+shortopts]|2-144
10678|code|MOVS            R1, #1|1-33
10680|code|MOVS            R2, #0x80|128-34
10682|code|ADD             R3, PC; "rbd_snap_unprotect %s@snap"|123-68
10684|code|STR             R6, [SP,#0x950+var_950]|0-150
10686|code|MOV             R0, R4|32-70
10688|code|BLX             __sprintf_chk|255-247-96-235
10692|code|LDR.W           R12, [SP,#0x950+shortopts]|221-248-8-192
10696|code|MOV             R0, R4|32-70
10698|code|MOV             R1, R12|97-70
10700|code|BL              prterrcode|0-240-114-252
10704|code|MOVS            R0, #0x66 ; 'f'|102-32
10706|code|BL              report_failure|0-240-221-252
10710|data|ALIGN 4|0-191
10712|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x20F4|120-77-1-0
10716|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
10720|data|DCD aBCDflMNoPQrSTW - 0x2100; "b:c:dfl:m:no:p:qr:s:t:w:xyACD:FHLN:OP:R"...|24-67-0-0
10724|data|DCD aMappedWritesDi - 0x2112; "mapped writes DISABLED\n"|238-66-0-0
10728|data|DCD page_size_ptr - 0x16E6C|76-1-0-0
10732|data|DCD page_mask_ptr - 0x16E6C|80-1-0-0
10736|data|DCD fsxlogf - 0x2134|44-79-1-0
10740|data|DCD mmap_mask_ptr - 0x16E6C|88-1-0-0
10744|data|DCD off_17008 - 0x2154; "PAST_EOF"|180-78-1-0
10748|data|DCD stdout_ptr - 0x16E6C|120-1-0-0
10752|data|DCD fsxlogf - 0x2172|238-78-1-0
10756|data|DCD off_17008 - 0x217A; "PAST_EOF"|142-78-1-0
10760|data|DCD optind_ptr - 0x16E6C|48-1-0-0
10764|data|DCD fsxlogf - 0x2222|62-78-1-0
10768|data|DCD fsxlogf - 0x222E|50-78-1-0
10772|data|DCD optarg_ptr - 0x16E6C|84-1-0-0
10776|data|DCD off_17008 - 0x2246; "PAST_EOF"|194-77-1-0
10780|data|DCD off_17008 - 0x2262; "PAST_EOF"|166-77-1-0
10784|data|DCD off_17008 - 0x2294; "PAST_EOF"|116-77-1-0
10788|data|DCD fsxlogf - 0x22A6|186-77-1-0
10792|data|DCD fsxlogf - 0x22BE|162-77-1-0
10796|data|DCD off_17008 - 0x22DC; "PAST_EOF"|44-77-1-0
10800|data|DCD off_17008 - 0x22EE; "PAST_EOF"|26-77-1-0
10804|data|DCD off_17008 - 0x2304; "PAST_EOF"|4-77-1-0
10808|data|DCD fsxlogf - 0x234C|20-77-1-0
10812|data|DCD off_17008 - 0x2364; "PAST_EOF"|164-76-1-0
10816|data|DCD fsxlogf - 0x2376|234-76-1-0
10820|data|DCD fsxlogf - 0x2382|222-76-1-0
10824|data|DCD fsxlogf - 0x239A|198-76-1-0
10828|data|DCD fsxlogf - 0x23AA|182-76-1-0
10832|data|DCD fsxlogf - 0x23C8|152-76-1-0
10836|data|DCD fsxlogf - 0x23D8|136-76-1-0
10840|data|DCD o_direct_ptr - 0x16E6C|92-1-0-0
10844|data|DCD fsxlogf - 0x244A|22-76-1-0
10848|data|DCD dirpath_ptr - 0x16E6C|40-1-0-0
10852|data|DCD asc_63EC - 0x2464; "/"|136-63-0-0
10856|data|DCD off_17008 - 0x24A8; "PAST_EOF"|96-75-1-0
10860|data|DCD off_17008 - 0x24C0; "PAST_EOF"|72-75-1-0
10864|data|DCD aLiteModeNotSup - 0x24D0; "lite mode not supported for rbd\n"|248-62-0-0
10868|data|DCD off_17008 - 0x24E2; "PAST_EOF"|38-75-1-0
10872|data|DCD fsxlogf - 0x24EE|114-75-1-0
10876|data|DCD fsxlogf - 0x2506|90-75-1-0
10880|data|DCD off_17008 - 0x2518; "PAST_EOF"|240-74-1-0
10884|data|DCD fsxlogf - 0x2524|60-75-1-0
10888|data|DCD pool_ptr - 0x16E6C|60-1-0-0
10892|data|DCD iname_ptr - 0x16E6C|144-1-0-0
10896|data|DCD cleanup+1 - 0x2546|79-8-0-0
10900|data|DCD state_ptr - 0x16E6C|68-1-0-0
10904|data|DCD off_17008 - 0x25AA; "PAST_EOF"|94-74-1-0
10908|data|DCD ioctx_ptr - 0x16E6C|112-1-0-0
10912|data|DCD image_ptr - 0x16E6C|104-1-0-0
10916|data|DCD aFsxgood - 0x260C; ".fsxgood"|80-62-0-0
10920|data|DCD fsxlogf - 0x2624|60-74-1-0
10924|data|DCD aFsxlog - 0x264A; ".fsxlog"|30-62-0-0
10928|data|DCD aW - 0x2656; "w"|26-62-0-0
10932|data|DCD off_17008 - 0x266E; "PAST_EOF"|154-73-1-0
10936|data|DCD original_buf_ptr - 0x16E6C|56-1-0-0
10940|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
10944|data|DCD temp_buf_ptr - 0x16E6C|36-1-0-0
10948|data|DCD fsxlogf - 0x271E|66-73-1-0
10952|data|DCD aMainShortWrite - 0x2752; "main: short write, 0x%x bytes instead o"...|58-61-0-0
10956|data|DCD aWillBeginAtOpe - 0x2768; "Will begin at operation %ld\n"|28-60-0-0
10960|data|DCD aChanceOfCloseO - 0x277A; "Chance of close/open is 1 in %d\n"|42-60-0-0
10964|data|DCD off_17008 - 0x278A; "PAST_EOF"|126-72-1-0
10968|data|DCD aSeedSetToD - 0x2790; "Seed set to %d\n"|96-60-0-0
10972|data|DCD off_17008 - 0x27BE; "PAST_EOF"|74-72-1-0
10976|data|DCD fsxlogf - 0x27E4|124-72-1-0
10980|data|DCD aSnap - 0x27FC; "snap"|64-51-0-0
10984|data|DCD off_17008 - 0x2802; "PAST_EOF"|6-72-1-0
10988|data|DCD fsxlogf - 0x2808|88-72-1-0
10992|data|DCD off_17008 - 0x280C; "PAST_EOF"|252-71-1-0
10996|data|DCD fsxlogf - 0x2812|78-72-1-0
11000|data|DCD aLibLdLinuxArmh+0x18; ""|108-1-0-0
11004|data|DCD aAllOperationsC - 0x28B6; "All operations completed A-OK!\n"|114-60-0-0
11008|data|DCD asc_6458 - 0x28DC; "."|124-59-0-0
11012|data|DCD aErrorOpeningIm - 0x28E6; "Error opening image"|94-59-0-0
11016|data|DCD aRbdOpenS - 0x2908; "rbd_open %s"|192-59-0-0
11020|data|DCD aMainErrorOnWri - 0x292C; "main: error on write"|72-59-0-0
11024|data|DCD aRbdClose_0 - 0x2936; "rbd_close"|134-59-0-0
11028|data|DCD aRbdRemoveS - 0x294C; "rbd_remove %s"|204-59-0-0
11032|data|DCD aRbdCloseS - 0x2972; "rbd_close %s"|150-59-0-0
11036|data|DCD aRbdSnapRemoveS - 0x2998; "rbd_snap_remove %s@snap"|88-59-0-0
11040|data|DCD aRbdSnapUnprote_0 - 0x29BE; "rbd_snap_unprotect %s@snap"|22-59-0-0
11044|code|MOV.W           R11, #0|79-240-0-11
11048|code|MOV.W           LR, #0|79-240-0-14
11052|code|POP             {R1}; argc|2-188
11054|code|MOV             R2, SP; ubp_av|106-70
11056|code|PUSH            {R2}; stack_end|4-180
11058|code|PUSH            {R0}; rtld_fini|1-180
11060|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x2B5C)|223-248-36-160
11064|code|ADR             R3, off_2B5C|8-163
11066|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
11068|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x16E6C)|223-248-32-192
11072|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
11076|code|PUSH.W          {R12}; fini|77-248-4-205
11080|code|LDR             R3, =(__libc_csu_init_ptr - 0x16E6C)|6-75
11082|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
11086|code|LDR             R0, =(main_ptr - 0x16E6C)|6-72
11088|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
11092|code|BLX             __libc_start_main|255-247-162-234
11096|code|BLX             abort|255-247-160-233
11100|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2B5C|16-67-1-0
11104|data|DCD __libc_csu_fini_ptr - 0x16E6C|128-1-0-0
11108|data|DCD __libc_csu_init_ptr - 0x16E6C|116-1-0-0
11112|data|DCD main_ptr - 0x16E6C|52-1-0-0
11116|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2B7C)|20-48-159-229
11120|code|LDR             R2, =(__gmon_start___ptr_0 - 0x16E6C)|20-32-159-229
11124|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
11128|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
11132|code|CMP             R2, #0|0-0-82-227
11136|code|BXEQ            LR|30-255-47-1
11140|code|B               __gmon_start__|74-253-255-234
11144|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2B7C|240-66-1-0
11148|data|DCD __gmon_start___ptr_0 - 0x16E6C|132-1-0-0
11152|code|LDR             R3, =(__bss_start - 0x2B98)|7-75
11154|code|LDR             R0, =(__bss_start - 0x2B9C)|8-72
11156|code|ADD             R3, PC; __bss_start|123-68
11158|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2BA2)|8-74
11160|code|ADD             R0, PC; __bss_start|120-68
11162|code|ADDS            R3, #3|3-51
11164|code|SUBS            R3, R3, R0|27-26
11166|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
11168|code|CMP             R3, #6|6-43
11170|code|BLS             locret_2BAC|3-217
11172|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x16E6C)|5-75
11174|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
11176|code|CBZ             R3, locret_2BAC|3-177
11178|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
11180|code|BX              LR|112-71
11182|data|ALIGN 0x10|0-191
11184|data|DCD __bss_start - 0x2B98|188-68-1-0
11188|data|DCD __bss_start - 0x2B9C|184-68-1-0
11192|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2BA2|202-66-1-0
11196|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x16E6C|124-1-0-0
11200|code|LDR             R1, =(__bss_start - 0x2BC8)|8-73
11202|code|LDR             R0, =(__bss_start - 0x2BCC)|9-72
11204|code|ADD             R1, PC; __bss_start|121-68
11206|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2BD0)|9-75
11208|code|ADD             R0, PC; __bss_start|120-68
11210|code|SUBS            R1, R1, R0|9-26
11212|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11214|code|ASRS            R1, R1, #2|137-16
11216|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
11220|code|ASRS            R1, R1, #1|73-16
11222|code|BEQ             locret_2BE0|3-208
11224|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x16E6C)|5-74
11226|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
11228|code|CBZ             R3, locret_2BE0|3-177
11230|code|BX              R3; _ITM_registerTMCloneTable|24-71
11232|code|BX              LR|112-71
11234|data|ALIGN 4|0-191
11236|data|DCD __bss_start - 0x2BC8|140-68-1-0
11240|data|DCD __bss_start - 0x2BCC|136-68-1-0
11244|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2BD0|156-66-1-0
11248|data|DCD _ITM_registerTMCloneTable_ptr - 0x16E6C|136-1-0-0
11252|code|PUSH            {R3,LR}|8-181
11254|code|LDR             R3, =(byte_17058 - 0x2BFE)|10-75
11256|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2C00)|10-74
11258|code|ADD             R3, PC; byte_17058|123-68
11260|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
11262|code|LDRB            R3, [R3]|27-120
11264|code|CBNZ            R3, locret_2C1E|107-185
11266|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x16E6C)|9-75
11268|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
11270|code|CBZ             R3, loc_2C12|35-177
11272|code|LDR             R3, =(off_17004 - 0x2C0E)|8-75
11274|code|ADD             R3, PC; off_17004|123-68
11276|code|LDR             R0, [R3]; off_17004 ; void *|24-104
11278|code|BLX             __cxa_finalize|255-247-88-234
11282|code|BL              sub_2B90|255-247-189-255
11286|code|LDR             R3, =(byte_17058 - 0x2C1E)|6-75
11288|code|MOVS            R2, #1|1-34
11290|code|ADD             R3, PC; byte_17058|123-68
11292|code|STRB            R2, [R3]|26-112
11294|code|POP             {R3,PC}|8-189
11296|data|DCD byte_17058 - 0x2BFE|90-68-1-0
11300|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2C00|108-66-1-0
11304|data|DCD __cxa_finalize_ptr_0 - 0x16E6C|140-1-0-0
11308|data|DCD off_17004 - 0x2C0E|246-67-1-0
11312|data|DCD byte_17058 - 0x2C1E|58-68-1-0
11316|code|LDR             R0, =(dword_16D50 - 0x2C3C)|7-72
11318|code|PUSH            {R3,LR}|8-181
11320|code|ADD             R0, PC; dword_16D50|120-68
11322|code|LDR             R2, [R0]|2-104
11324|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2C42)|6-75
11326|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11328|code|CBNZ            R2, loc_2C48|18-185
11330|code|POP.W           {R3,LR}|189-232-8-64
11334|code|B               sub_2BC0|187-231
11336|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x16E6C)|4-74
11338|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
11340|code|CMP             R3, #0|0-43
11342|code|BEQ             loc_2C42|248-208
11344|code|BLX             R3; _Jv_RegisterClasses|152-71
11346|code|B               loc_2C42|246-231
11348|data|DCD dword_16D50 - 0x2C3C|20-65-1-0
11352|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2C42|42-66-1-0
11356|data|DCD _Jv_RegisterClasses_ptr - 0x16E6C|100-1-0-0
11360|code|PUSH.W          {R4-R8,LR}|45-233-240-65
11364|code|MOV             R7, R0|7-70
11366|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x2C72)|20-76
11368|code|MOV             R6, R1|14-70
11370|code|LDR             R5, =(stderr_ptr - 0x16E6C)|20-77
11372|code|MOV             R8, R2|144-70
11374|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
11376|code|LDR             R0, =(aFsx - 0x2C7C); "fsx: "|19-72
11378|code|MOVS            R1, #1; size|1-33
11380|code|MOVS            R2, #5; n|5-34
11382|code|LDR             R5, [R4,R5]; stderr|101-89
11384|code|ADD             R0, PC; "fsx: "|120-68
11386|code|LDR             R3, [R5]; s|43-104
11388|code|BLX             fwrite|255-247-154-233
11392|code|CBZ             R6, loc_2C9C|102-177
11394|code|MOV             R2, R6|50-70
11396|code|MOV             R3, R8|67-70
11398|code|MOVS            R1, #1|1-33
11400|code|LDR             R0, [R5]|40-104
11402|code|BLX             __vfprintf_chk|255-247-136-233
11406|code|LDR             R0, =(asc_5270 - 0x2C98); ": "|13-72
11408|code|MOVS            R1, #1; size|1-33
11410|code|MOVS            R2, #2; n|2-34
11412|code|ADD             R0, PC; ": "|120-68
11414|code|LDR             R3, [R5]; s|43-104
11416|code|BLX             fwrite|255-247-140-233
11420|code|MOV             R0, R7; errnum|56-70
11422|code|LDR             R4, [R5]|44-104
11424|code|BLX             strerror|255-247-188-232
11428|code|LDR             R2, =(aSS+4 - 0x2CAC); "%s\n"|8-74
11430|code|MOVS            R1, #1|1-33
11432|code|ADD             R2, PC; "%s\n"|122-68
11434|code|MOV             R3, R0|3-70
11436|code|MOV             R0, R4|32-70
11438|code|POP.W           {R4-R8,LR}|189-232-240-65
11442|code|B.W             j___fprintf_chk|255-247-203-184
11446|data|ALIGN 4|0-191
11448|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2C72|250-65-1-0
11452|data|DCD stderr_ptr - 0x16E6C|96-1-0-0
11456|data|DCD aFsx - 0x2C7C; "fsx: "|236-37-0-0
11460|data|DCD asc_5270 - 0x2C98; ": "|216-37-0-0
11464|data|DCD aSS+4 - 0x2CAC; "%s\n"|244-37-0-0
11468|code|PUSH            {R0-R3}|15-180
11470|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x2CD6)|15-75
11472|code|LDR             R2, =(__stack_chk_guard_ptr - 0x16E6C)|15-74
11474|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
11476|code|PUSH            {R4-R6,LR}|112-181
11478|code|SUB             SP, SP, #8|130-176
11480|code|LDR             R5, [R3,R2]; __stack_chk_guard|157-88
11482|code|ADD             R4, SP, #0x28+varg_r0|6-172
11484|code|LDR.W           R6, [R4],#4|84-248-4-107
11488|code|LDR             R3, [R5]|43-104
11490|code|STR             R4, [SP,#0x28+var_28]|0-148
11492|code|STR             R3, [SP,#0x28+var_24]|1-147
11494|code|BLX             __errno_location|255-247-174-233
11498|code|MOV             R2, R4|34-70
11500|code|MOV             R1, R6|49-70
11502|code|LDR             R0, [R0]|0-104
11504|code|BL              vwarnc|255-247-182-255
11508|code|LDR             R2, [SP,#0x28+var_24]|1-154
11510|code|LDR             R3, [R5]|43-104
11512|code|CMP             R2, R3|154-66
11514|code|BNE             loc_2D06|4-209
11516|code|ADD             SP, SP, #8|2-176
11518|code|POP.W           {R4-R6,LR}|189-232-112-64
11522|code|ADD             SP, SP, #0x10|4-176
11524|code|BX              LR|112-71
11526|code|BLX             __stack_chk_fail|255-247-20-233
11530|data|ALIGN 4|0-191
11532|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2CD6|150-65-1-0
11536|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
11540|code|PUSH            {R0-R3}|15-180
11542|code|MOV.W           R1, #0x400|79-244-128-97
11546|code|PUSH.W          {R4-R8,LR}|45-233-240-65
11550|code|SUB.W           SP, SP, #0x410|173-245-130-109
11554|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x2D30)|24-76
11556|code|ADD.W           R5, SP, #0x410+varg_r0|13-245-133-101
11560|code|LDR             R3, =(__stack_chk_guard_ptr - 0x16E6C)|23-75
11562|code|ADD             R7, SP, #0xC|3-175
11564|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
11566|code|LDR.W           R2, [R5],#4|85-248-4-43
11570|code|MOV             R0, R7|56-70
11572|code|LDR.W           R8, [R4,R3]; __stack_chk_guard|84-248-3-128
11576|code|MOV             R3, R1|11-70
11578|code|STR             R2, [SP,#0x410+var_410]|0-146
11580|code|MOVS            R2, #1|1-34
11582|code|STR             R5, [SP,#0x410+var_40C]|1-149
11584|code|LDR.W           LR, [R8]|216-248-0-224
11588|code|STR             R5, [SP,#0x410+var_408]|2-149
11590|code|STR.W           LR, [SP,#0x410+var_4]|205-248-12-228
11594|code|BLX             __vsnprintf_chk|255-247-116-232
11598|code|LDR             R3, =(stdout_ptr - 0x16E6C)|15-75
11600|code|MOV             R0, R7; s|56-70
11602|code|LDR             R3, [R4,R3]; stdout|227-88
11604|code|LDR             R1, [R3]; stream|25-104
11606|code|BLX             fputs|255-247-156-233
11610|code|LDR             R3, =(fsxlogf - 0x2D60)|13-75
11612|code|ADD             R3, PC; fsxlogf|123-68
11614|code|LDR             R1, [R3]; stream|25-104
11616|code|CBZ             R1, loc_2D68|17-177
11618|code|MOV             R0, R7; s|56-70
11620|code|BLX             fputs|255-247-148-233
11624|code|LDR.W           R2, [SP,#0x410+var_4]|221-248-12-36
11628|code|LDR.W           R3, [R8]|216-248-0-48
11632|code|CMP             R2, R3|154-66
11634|code|BNE             loc_2D80|5-209
11636|code|ADD.W           SP, SP, #0x410|13-245-130-109
11640|code|POP.W           {R4-R8,LR}|189-232-240-65
11644|code|ADD             SP, SP, #0x10|4-176
11646|code|BX              LR|112-71
11648|code|BLX             __stack_chk_fail|255-247-214-232
11652|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2D30|60-65-1-0
11656|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
11660|data|DCD stdout_ptr - 0x16E6C|120-1-0-0
11664|data|DCD fsxlogf - 0x2D60|0-67-1-0
11668|code|PUSH            {R3,LR}|8-181
11670|code|MOV             R4, R0|4-70
11672|code|CBNZ            R0, loc_2DAE|72-185
11674|code|LDR             R3, =(fsxlogf - 0x2DA2)|8-75
11676|code|LDR             R0, =(aTestcallsLu - 0x2DA4); "testcalls = %lu\n"|8-72
11678|code|ADD             R3, PC; fsxlogf|123-68
11680|code|ADD             R0, PC; "testcalls = %lu\n"|120-68
11682|code|LDR             R1, [R3,#(testcalls - 0x17060)]|89-104
11684|code|BL              prt|255-247-182-255
11688|code|MOV             R0, R4; status|32-70
11690|code|BLX             exit|255-247-44-232
11694|code|LDR             R0, =(aSignalD - 0x2DB6); "signal %d\n"|5-72
11696|code|MOV             R1, R4|33-70
11698|code|ADD             R0, PC; "signal %d\n"|120-68
11700|code|BL              prt|255-247-174-255
11704|code|B               loc_2D9A|239-231
11706|data|ALIGN 4|0-191
11708|data|DCD fsxlogf - 0x2DA2|190-66-1-0
11712|data|DCD aTestcallsLu - 0x2DA4; "testcalls = %lu\n"|220-36-0-0
11716|data|DCD aSignalD - 0x2DB6; "signal %d\n"|190-36-0-0
11720|code|PUSH            {R4-R6,LR}|112-181
11722|code|MOV             R4, R0|4-70
11724|code|CBZ             R0, loc_2DEE|120-177
11726|code|LDR             R5, =(asc_5270 - 0x2DD4); ": "|9-77
11728|code|ADD             R5, PC; ": "|125-68
11730|code|BLX             __errno_location|255-247-56-233
11734|code|LDR             R0, [R0]; errnum|0-104
11736|code|BLX             strerror|255-247-32-232
11740|code|MOV             R1, R4|33-70
11742|code|MOV             R2, R5|42-70
11744|code|POP.W           {R4-R6,LR}|189-232-112-64
11748|code|MOV             R3, R0|3-70
11750|code|LDR             R0, =(aSSS - 0x2DEC); "%s%s%s\n"|4-72
11752|code|ADD             R0, PC; "%s%s%s\n"|120-68
11754|code|B.W             prt|255-247-147-191
11758|code|LDR             R5, =(aLogDumpDTotalO+0x20 - 0x2DF4); ""|3-77
11760|code|ADD             R5, PC; ""|125-68
11762|code|B               loc_2DD2|238-231
11764|data|DCD asc_5270 - 0x2DD4; ": "|156-36-0-0
11768|data|DCD aSSS - 0x2DEC; "%s%s%s\n"|168-36-0-0
11772|data|DCD aLogDumpDTotalO+0x20 - 0x2DF4; ""|220-36-0-0
11776|code|PUSH            {R4-R7,LR}|240-181
11778|code|LDR             R6, =(fsxlogf - 0x2E0A)|19-78
11780|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x2E0E)|19-76
11782|code|ADD             R6, PC; fsxlogf|126-68
11784|code|LDR             R7, =(oplog_ptr - 0x16E6C)|19-79
11786|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
11788|code|LDR             R5, [R6,#(logptr - 0x17060)]|181-104
11790|code|LDR.W           LR, [R6,#(closeopen - 0x17060)]|214-248-12-224
11794|code|LDR             R6, [R4,R7]; oplog|230-89
11796|code|LSLS            R4, R5, #4|44-1
11798|code|STR             R0, [R6,R4]|48-81
11800|code|CMP.W           LR, #0|190-241-0-15
11804|code|BEQ             loc_2E22|1-208
11806|code|MVNS            R0, R0|192-67
11808|code|STR             R0, [R6,R4]|48-81
11810|code|LDR             R0, =(fsxlogf - 0x2E2E)|14-72
11812|code|ADD.W           LR, R6, R4|6-235-4-14
11816|code|ADDS            R5, #1|1-53
11818|code|ADD             R0, PC; fsxlogf|120-68
11820|code|CMP.W           R5, #0x3E8|181-245-122-127
11824|code|STR.W           R1, [LR,#4]|206-248-4-16
11828|code|LDR             R1, [R0,#(logcount - 0x17060)]|1-105
11830|code|STR             R5, [R0,#(logptr - 0x17060)]|133-96
11832|code|ADD.W           R1, R1, #1|1-241-1-1
11836|code|STR.W           R3, [LR,#0xC]|206-248-12-48
11840|code|STR.W           R2, [LR,#8]|206-248-8-32
11844|code|IT GE|168-191
11846|code|MOVGE           R3, #0|0-35
11848|code|STR             R1, [R0,#(logcount - 0x17060)]|1-97
11850|code|IT GE|168-191
11852|code|STRGE           R3, [R0,#(logptr - 0x17060)]|131-96
11854|code|POP             {R4-R7,PC}|240-189
11856|data|DCD fsxlogf - 0x2E0A|86-66-1-0
11860|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2E0E|94-64-1-0
11864|data|DCD oplog_ptr - 0x16E6C|64-1-0-0
11868|data|DCD fsxlogf - 0x2E2E|50-66-1-0
11872|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x2E68)|10-74
11874|code|PUSH            {R4,R5,LR}|48-181
11876|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
11878|code|LDR             R4, =(stderr_ptr - 0x16E6C)|10-76
11880|code|SUB             SP, SP, #0xC|131-176
11882|code|MOV             R5, R0|5-70
11884|code|NEGS            R0, R1; errnum|72-66
11886|code|LDR             R3, [R2,R4]; stderr|19-89
11888|code|LDR             R4, [R3]|28-104
11890|code|BLX             strerror|254-247-212-239
11894|code|LDR             R2, =(aSS - 0x2E80); "%s: %s\n"|7-74
11896|code|MOV             R3, R5|43-70
11898|code|MOVS            R1, #1|1-33
11900|code|ADD             R2, PC; "%s: %s\n"|122-68
11902|code|STR             R0, [SP,#0x18+var_18]|0-144
11904|code|MOV             R0, R4|32-70
11906|code|BLX             __fprintf_chk|254-247-230-239
11910|code|ADD             SP, SP, #0xC|3-176
11912|code|POP             {R4,R5,PC}|48-189
11914|data|ALIGN 4|0-191
11916|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2E68|4-64-1-0
11920|data|DCD stderr_ptr - 0x16E6C|96-1-0-0
11924|data|DCD aSS - 0x2E80; "%s: %s\n"|28-36-0-0
11928|code|PUSH.W          {R4-R11,LR}|45-233-240-79
11932|code|SUB             SP, SP, #0x3C|143-176
11934|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x2EA6)|222-76
11936|code|LDR             R2, =(__stack_chk_guard_ptr - 0x16E6C)|222-74
11938|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
11940|code|LDR             R3, =(off_17008 - 0x2EAE); "PAST_EOF"|222-75
11942|code|LDR             R5, =(fsxlogf - 0x2EB0)|223-77
11944|code|LDR             R2, [R4,R2]; __stack_chk_guard|162-88
11946|code|ADD             R3, PC; off_17008|123-68
11948|code|ADD             R5, PC; fsxlogf|125-68
11950|code|MOV             R6, R2|22-70
11952|code|STR             R2, [SP,#0x60+var_4C]|5-146
11954|code|LDM.W           R3, {R0-R2}; "PAST_EOF"|147-232-7-0
11958|code|ADD             R3, SP, #0x60+var_38|10-171
11960|code|LDR             R6, [R6]|54-104
11962|code|STM.W           R3, {R0-R2}|131-232-7-0
11966|code|LDR             R0, =(aLogDumpDTotalO - 0x2EC6); "LOG DUMP (%d total operations):\n"|218-72
11968|code|LDR             R1, [R5,#(logcount - 0x17060)]|41-105
11970|code|ADD             R0, PC; "LOG DUMP (%d total operations):\n"|120-68
11972|code|STR             R6, [SP,#0x60+var_2C]|13-150
11974|code|BL              prt|255-247-37-255
11978|code|LDR             R2, [R5,#(logcount - 0x17060)]|42-105
11980|code|CMP.W           R2, #0x3E8|178-245-122-127
11984|code|BLT.W           loc_3066|192-242-201-128
11988|code|LDR.W           R10, [R5,#(logptr - 0x17060)]|213-248-8-160
11992|code|MOV.W           R7, #0x3E8|79-244-122-119
11996|code|LDR             R3, =(oplog_ptr - 0x16E6C)|211-75
11998|code|LDR.W           R9, =(aD3dMod256 - 0x2EEC); "%d(%3d mod 256): "|223-248-80-147
12002|code|LDR.W           R8, =(fsxlogf - 0x2EF0)|223-248-80-131
12006|code|LDR             R6, [R4,R3]; oplog|230-88
12008|code|ADD             R9, PC; "%d(%3d mod 256): "|249-68
12010|code|LDR             R3, =(aTruncateSFrom0 - 0x2EF2); "TRUNCATE %s\tfrom 0x%x to 0x%x"|211-75
12012|code|ADD             R8, PC; fsxlogf|248-68
12014|code|ADD             R3, PC; "TRUNCATE %s\tfrom 0x%x to 0x%x"|123-68
12016|code|STR             R3, [SP,#0x60+var_48]|6-147
12018|code|LDR             R3, =(off_17008 - 0x2EF8); "PAST_EOF"|210-75
12020|code|ADD             R3, PC; off_17008|123-68
12022|code|STR             R3, [SP,#0x60+var_44]|7-147
12024|code|LDR             R3, =(aDown - 0x2EFE); "DOWN"|209-75
12026|code|ADD             R3, PC; "DOWN"|123-68
12028|code|STR             R3, [SP,#0x60+var_40]|8-147
12030|code|LDR             R3, =(aUp - 0x2F04); "UP"|209-75
12032|code|ADD             R3, PC; "UP"|123-68
12034|code|STR             R3, [SP,#0x60+var_3C]|9-147
12036|code|MOVW            R1, #0x4DD3|68-246-211-81
12040|code|ASRS            R3, R2, #0x1F|211-23
12042|code|MOVT.W          R1, #0x1062|193-242-98-1
12046|code|ADD.W           R4, R10, #1|10-241-1-4
12050|code|SMULL.W         R0, R1, R2, R1|130-251-1-1
12054|code|MOV.W           R5, R10,LSL#4|79-234-10-21
12058|code|STRD.W          R0, R1, [SP,#0x60+var_58]|205-233-2-1
12062|code|MOV             R0, R9|72-70
12064|code|LDR             R2, [SP,#0x60+var_54]|3-154
12066|code|RSB.W           R3, R3, R2,ASR#6|195-235-162-19
12070|code|RSB.W           R1, R3, R3,LSL#5|195-235-67-17
12074|code|ADD.W           R1, R3, R1,LSL#2|3-235-129-1
12078|code|ADD.W           R1, R4, R1,LSL#3|4-235-193-1
12082|code|ASRS            R3, R1, #0x1F|203-23
12084|code|LSRS            R3, R3, #0x18|27-14
12086|code|ADDS            R2, R1, R3|202-24
12088|code|UXTB            R2, R2|210-178
12090|code|SUBS            R2, R2, R3|210-26
12092|code|BL              prt|255-247-234-254
12096|code|LDR             R1, [R6,R5]|113-89
12098|code|LSRS            R3, R1, #0x1F|203-15
12100|code|STR.W           R3, [R8,#(closeopen - 0x17060)]|200-248-12-48
12104|code|CBZ             R3, loc_2F4E|11-177
12106|code|MVNS            R1, R1|201-67
12108|code|STR             R1, [R6,R5]|113-81
12110|code|CMP             R1, #4|4-41
12112|code|BEQ.W           loc_3160|0-240-6-129
12116|code|BLE             loc_2FB8|48-221
12118|code|CMP             R1, #7|7-41
12120|code|BEQ.W           loc_31B6|0-240-45-129
12124|code|BGT             loc_3010|88-220
12126|code|CMP             R1, #5|5-41
12128|code|BEQ.W           loc_307E|0-240-141-128
12132|code|CMP             R1, #6|6-41
12134|code|BNE.W           loc_31AC|64-240-33-129
12138|code|ADD.W           R10, R5, #4|5-241-4-10
12142|code|ADD             R5, R6|53-68
12144|code|ADD             R10, R6|178-68
12146|code|LDR             R0, =(aPunch0xXThru0x - 0x2F7E); "PUNCH    0x%x thru 0x%x\t(0x%x bytes)"|181-72
12148|code|LDR             R1, [R5,#4]|105-104
12150|code|LDR.W           R3, [R10,#4]|218-248-4-48
12154|code|ADD             R0, PC; "PUNCH    0x%x thru 0x%x\t(0x%x bytes)"|120-68
12156|code|ADDS            R2, R1, R3|202-24
12158|code|SUBS            R2, #1|1-58
12160|code|BL              prt|255-247-200-254
12164|code|LDR             R3, =(off_17008 - 0x2F8C); "PAST_EOF"|177-75
12166|code|LDR             R2, [R5,#4]|106-104
12168|code|ADD             R3, PC; off_17008|123-68
12170|code|LDR             R3, [R3,#(badoff - 0x17008)]|219-104
12172|code|CMP             R2, R3|154-66
12174|code|BLE.W           loc_31D8|64-243-35-129
12178|code|LDR             R3, =(fsxlogf - 0x2F98)|175-75
12180|code|ADD             R3, PC; fsxlogf|123-68
12182|code|LDR             R3, [R3,#(closeopen - 0x17060)]|219-104
12184|code|CBNZ            R3, loc_3006|171-187
12186|code|LDR             R0, =(aMaybeHexdumpSV+0x24 - 0x2FA0); "\n"|174-72
12188|code|ADD             R0, PC; "\n"|120-68
12190|code|BL              prt|255-247-185-254
12194|code|CMP.W           R4, #0x3E8|180-245-122-127
12198|code|IT EQ|8-191
12200|code|MOVEQ           R4, #0|0-36
12202|code|SUBS            R7, #1|1-63
12204|code|BEQ             loc_306C|94-208
12206|code|LDR             R3, =(fsxlogf - 0x2FB6)|170-75
12208|code|MOV             R10, R4|162-70
12210|code|ADD             R3, PC; fsxlogf|123-68
12212|code|LDR             R2, [R3,#(logcount - 0x17060)]|26-105
12214|code|B               loc_2F04|165-231
12216|code|CMP             R1, #1|1-41
12218|code|BEQ.W           loc_3102|0-240-162-128
12222|code|BLE             loc_3026|50-221
12224|code|CMP             R1, #2|2-41
12226|code|BEQ.W           loc_30CC|0-240-131-128
12230|code|CMP             R1, #3|3-41
12232|code|BNE.W           loc_31AC|64-240-240-128
12236|code|ADD.W           R10, R5, #4|5-241-4-10
12240|code|ADD             R5, R6|53-68
12242|code|ADD             R10, R6|178-68
12244|code|LDR             R0, =(aMapwrite0xXThr - 0x2FE0); "MAPWRITE 0x%x thru 0x%x\t(0x%x bytes)"|161-72
12246|code|LDR             R1, [R5,#4]|105-104
12248|code|LDR.W           R3, [R10,#4]|218-248-4-48
12252|code|ADD             R0, PC; "MAPWRITE 0x%x thru 0x%x\t(0x%x bytes)"|120-68
12254|code|ADDS            R2, R1, R3|202-24
12256|code|SUBS            R2, #1|1-58
12258|code|BL              prt|255-247-151-254
12262|code|LDR             R3, =(off_17008 - 0x2FEE); "PAST_EOF"|158-75
12264|code|LDR             R2, [R5,#4]|106-104
12266|code|ADD             R3, PC; off_17008|123-68
12268|code|LDR             R3, [R3,#(badoff - 0x17008)]|219-104
12270|code|CMP             R2, R3|154-66
12272|code|BGT             loc_2F92|207-220
12274|code|LDR.W           R1, [R10,#4]|218-248-4-16
12278|code|ADD             R2, R1|10-68
12280|code|CMP             R3, R2|147-66
12282|code|BGE             loc_2F92|202-218
12284|code|LDR             R0, =(aWwww - 0x3002); "\t******WWWW"|153-72
12286|code|ADD             R0, PC; "\t******WWWW"|120-68
12288|code|BL              prt|255-247-136-254
12292|code|B               loc_2F92|197-231
12294|code|LDR             R0, =(aCloseOpen - 0x300C); "\n\t\tCLOSE/OPEN"|152-72
12296|code|ADD             R0, PC; "\n\t\tCLOSE/OPEN"|120-68
12298|code|BL              prt|255-247-131-254
12302|code|B               loc_2F9A|196-231
12304|code|CMP             R1, #8|8-41
12306|code|BEQ.W           loc_3156|0-240-160-128
12310|code|CMP             R1, #0x65 ; 'e'|101-41
12312|code|BNE.W           loc_31AC|64-240-200-128
12316|code|LDR             R0, =(aSkippedNoOpera - 0x3022); "SKIPPED (no operation)"|147-72
12318|code|ADD             R0, PC; "SKIPPED (no operation)"|120-68
12320|code|BL              prt|255-247-120-254
12324|code|B               loc_2F92|181-231
12326|code|CMP             R1, #0|0-41
12328|code|BNE.W           loc_31AC|64-240-192-128
12332|code|ADD.W           R10, R5, #4|5-241-4-10
12336|code|ADD             R5, R6|53-68
12338|code|ADD             R10, R6|178-68
12340|code|LDR             R0, =(aRead0xXThru0xX - 0x3040); "READ     0x%x thru 0x%x\t(0x%x bytes)"|142-72
12342|code|LDR             R1, [R5,#4]|105-104
12344|code|LDR.W           R3, [R10,#4]|218-248-4-48
12348|code|ADD             R0, PC; "READ     0x%x thru 0x%x\t(0x%x bytes)"|120-68
12350|code|ADDS            R2, R1, R3|202-24
12352|code|SUBS            R2, #1|1-58
12354|code|BL              prt|255-247-103-254
12358|code|LDR             R3, =(off_17008 - 0x304E); "PAST_EOF"|139-75
12360|code|LDR             R2, [R5,#4]|106-104
12362|code|ADD             R3, PC; off_17008|123-68
12364|code|LDR             R3, [R3,#(badoff - 0x17008)]|219-104
12366|code|CMP             R2, R3|154-66
12368|code|BGT             loc_2F92|159-220
12370|code|LDR.W           R1, [R10,#4]|218-248-4-16
12374|code|ADD             R2, R1|10-68
12376|code|CMP             R3, R2|147-66
12378|code|BGE             loc_2F92|154-218
12380|code|LDR             R0, =(aRrrr - 0x3062); "\t***RRRR***"|134-72
12382|code|ADD             R0, PC; "\t***RRRR***"|120-68
12384|code|BL              prt|255-247-88-254
12388|code|B               loc_2F92|149-231
12390|code|CMP             R2, #0|0-42
12392|code|BGT.W           loc_31EE|0-243-193-128
12396|code|LDR             R3, [SP,#0x60+var_4C]|5-155
12398|code|LDR             R2, [SP,#0x60+var_2C]|13-154
12400|code|LDR             R3, [R3]|27-104
12402|code|CMP             R2, R3|154-66
12404|code|BNE.W           loc_3212|64-240-205-128
12408|code|ADD             SP, SP, #0x3C ; '<'|15-176
12410|code|POP.W           {R4-R11,PC}|189-232-240-143
12414|code|ADDS            R3, R6, R5|115-25
12416|code|ADD             R0, SP, #0x60+var_28|14-168
12418|code|ADD.W           R10, R5, #4|5-241-4-10
12422|code|LDR             R2, [R3,#0xC]|218-104
12424|code|ADD             R10, R6|178-68
12426|code|MOV             R5, R3|29-70
12428|code|LDR             R1, [R5,#4]|105-104
12430|code|ADD.W           LR, R0, R2,LSL#2|0-235-130-14
12434|code|LDR.W           R3, [R10,#4]|218-248-4-48
12438|code|LDR             R0, =(aFalloc0xXThru0 - 0x30A2); "FALLOC   0x%x thru 0x%x\t(0x%x bytes) %"...|121-72
12440|code|LDR.W           LR, [LR,#-0x10]|94-248-16-236
12444|code|ADDS            R2, R1, R3|202-24
12446|code|ADD             R0, PC; "FALLOC   0x%x thru 0x%x\t(0x%x bytes) %"...|120-68
12448|code|STR.W           LR, [SP,#0x60+var_60]|205-248-0-224
12452|code|BL              prt|255-247-54-254
12456|code|LDR             R3, =(off_17008 - 0x30B0); "PAST_EOF"|117-75
12458|code|LDR             R2, [R5,#4]|106-104
12460|code|ADD             R3, PC; off_17008|123-68
12462|code|LDR             R3, [R3,#(badoff - 0x17008)]|219-104
12464|code|CMP             R2, R3|154-66
12466|code|BGT.W           loc_2F92|63-247-110-175
12470|code|LDR.W           R1, [R10,#4]|218-248-4-16
12474|code|ADD             R2, R1|10-68
12476|code|CMP             R3, R2|147-66
12478|code|BGE.W           loc_2F92|191-246-104-175
12482|code|LDR             R0, =(aFfff - 0x30C8); "\t******FFFF"|112-72
12484|code|ADD             R0, PC; "\t******FFFF"|120-68
12486|code|BL              prt|255-247-37-254
12490|code|B               loc_2F92|98-231
12492|code|ADD.W           R10, R5, #4|5-241-4-10
12496|code|ADD             R5, R6|53-68
12498|code|ADD             R10, R6|178-68
12500|code|LDR             R0, =(aMapread0xXThru - 0x30E0); "MAPREAD  0x%x thru 0x%x\t(0x%x bytes)"|108-72
12502|code|LDR             R1, [R5,#4]|105-104
12504|code|LDR.W           R3, [R10,#4]|218-248-4-48
12508|code|ADD             R0, PC; "MAPREAD  0x%x thru 0x%x\t(0x%x bytes)"|120-68
12510|code|ADDS            R2, R1, R3|202-24
12512|code|SUBS            R2, #1|1-58
12514|code|BL              prt|255-247-23-254
12518|code|LDR             R3, =(off_17008 - 0x30EE); "PAST_EOF"|105-75
12520|code|LDR             R2, [R5,#4]|106-104
12522|code|ADD             R3, PC; off_17008|123-68
12524|code|LDR             R3, [R3,#(badoff - 0x17008)]|219-104
12526|code|CMP             R2, R3|154-66
12528|code|BGT.W           loc_2F92|63-247-79-175
12532|code|LDR.W           R1, [R10,#4]|218-248-4-16
12536|code|ADD             R2, R1|10-68
12538|code|CMP             R3, R2|147-66
12540|code|BGE.W           loc_2F92|191-246-73-175
12544|code|B               loc_305C|172-231
12546|code|ADD.W           R10, R5, #4|5-241-4-10
12550|code|ADD.W           R11, R6, R5|6-235-5-11
12554|code|ADD             R10, R6|178-68
12556|code|LDR             R0, =(aWrite0xXThru0x - 0x311A); "WRITE    0x%x thru 0x%x\t(0x%x bytes)"|96-72
12558|code|LDR.W           R1, [R11,#4]|219-248-4-16
12562|code|LDR.W           R3, [R10,#4]|218-248-4-48
12566|code|ADD             R0, PC; "WRITE    0x%x thru 0x%x\t(0x%x bytes)"|120-68
12568|code|ADDS            R2, R1, R3|202-24
12570|code|SUBS            R2, #1|1-58
12572|code|BL              prt|255-247-250-253
12576|code|LDR.W           R3, [R11,#4]|219-248-4-48
12580|code|LDR.W           R1, [R11,#0xC]|219-248-12-16
12584|code|CMP             R3, R1|139-66
12586|code|BGT             loc_31F6|100-220
12588|code|LDR.W           R2, [R10,#4]|218-248-4-32
12592|code|ADD             R2, R3|26-68
12594|code|CMP             R1, R2|145-66
12596|code|BLT             loc_3204|102-219
12598|code|LDR             R2, =(off_17008 - 0x313C); "PAST_EOF"|87-74
12600|code|ADD             R2, PC; off_17008|122-68
12602|code|LDR             R2, [R2,#(badoff - 0x17008)]|210-104
12604|code|CMP             R2, R3|154-66
12606|code|BLT             loc_31C0|63-219
12608|code|ADD             R5, R6|53-68
12610|code|LDR             R1, [R5,#8]|169-104
12612|code|ADD             R3, R1|11-68
12614|code|CMP             R2, R3|154-66
12616|code|BGE.W           loc_2F92|191-246-35-175
12620|code|LDR             R0, =(aWwww_0 - 0x3152); "\t***WWWW"|82-72
12622|code|ADD             R0, PC; "\t***WWWW"|120-68
12624|code|BL              prt|255-247-224-253
12628|code|B               loc_2F92|29-231
12630|code|LDR             R0, =(aFlatten - 0x315C); "FLATTEN"|81-72
12632|code|ADD             R0, PC; "FLATTEN"|120-68
12634|code|BL              prt|255-247-219-253
12638|code|B               loc_2F92|24-231
12640|code|ADDS            R3, R6, R5|115-25
12642|code|LDR             R1, [SP,#0x60+var_40]|8-153
12644|code|LDR             R0, [SP,#0x60+var_48]|6-152
12646|code|MOV.W           R10, R10,LSL#2|79-234-138-10
12650|code|MOV             R5, R3|29-70
12652|code|LDR             R3, [R3,#4]|91-104
12654|code|LDR             R2, [R5,#8]|170-104
12656|code|MOV             LR, R1|142-70
12658|code|LDR             R1, [SP,#0x60+var_3C]|9-153
12660|code|CMP             R3, R2|147-66
12662|code|ITE GE|172-191
12664|code|MOVGE           R5, #0|0-37
12666|code|MOVLT           R5, #1|1-37
12668|code|CMP             R5, #0|0-45
12670|code|IT NE|24-191
12672|code|MOVNE           R1, LR|113-70
12674|code|BL              prt|255-247-199-253
12678|code|EOR.W           R3, R5, #1|133-240-1-3
12682|code|ADD             R3, R10|83-68
12684|code|LDR             R2, [SP,#0x60+var_44]|7-154
12686|code|ADD.W           R3, R6, R3,LSL#2|6-235-131-3
12690|code|LDR             R2, [R2,#0xC]|210-104
12692|code|LDR             R3, [R3,#4]|91-104
12694|code|CMP             R3, R2|147-66
12696|code|BGT.W           loc_2F92|63-247-251-174
12700|code|ADD             R5, R10|85-68
12702|code|ADD.W           R5, R6, R5,LSL#2|6-235-133-5
12706|code|LDR             R3, [R5,#4]|107-104
12708|code|CMP             R2, R3|154-66
12710|code|BGE.W           loc_2F92|191-246-244-174
12714|code|B               loc_2FFC|39-231
12716|code|LDR             R0, =(aBogusLogEntryO - 0x31B2); "BOGUS LOG ENTRY (operation code = %d)!"|60-72
12718|code|ADD             R0, PC; "BOGUS LOG ENTRY (operation code = %d)!"|120-68
12720|code|BL              prt|255-247-176-253
12724|code|B               loc_2F92|237-230
12726|code|LDR             R0, =(aClone - 0x31BC); "CLONE"|59-72
12728|code|ADD             R0, PC; "CLONE"|120-68
12730|code|BL              prt|255-247-171-253
12734|code|B               loc_2F92|232-230
12736|code|ADDS            R1, R6, R5|113-25
12738|code|LDR             R1, [R1,#0xC]|201-104
12740|code|CMP             R2, R1|138-66
12742|code|BLT.W           loc_2F92|255-246-228-174
12746|code|ADD             R5, R6|53-68
12748|code|LDR             R1, [R5,#8]|169-104
12750|code|ADD             R3, R1|11-68
12752|code|CMP             R2, R3|154-66
12754|code|BGE.W           loc_2F92|191-246-222-174
12758|code|B               loc_314C|185-231
12760|code|LDR.W           R1, [R10,#4]|218-248-4-16
12764|code|ADD             R2, R1|10-68
12766|code|CMP             R3, R2|147-66
12768|code|BGE.W           loc_2F92|191-246-215-174
12772|code|LDR             R0, =(aPppp - 0x31EA); "\t******PPPP"|48-72
12774|code|ADD             R0, PC; "\t******PPPP"|120-68
12776|code|BL              prt|255-247-148-253
12780|code|B               loc_2F92|209-230
12782|code|MOV             R7, R2|23-70
12784|code|MOV.W           R10, #0|79-240-0-10
12788|code|B               loc_2EDC|114-230
12790|code|LDR             R0, =(aHole - 0x31FC); " HOLE"|45-72
12792|code|ADD             R0, PC; " HOLE"|120-68
12794|code|BL              prt|255-247-139-253
12798|code|LDR.W           R3, [R11,#4]|219-248-4-48
12802|code|B               loc_3136|152-231
12804|code|LDR             R0, =(aExtend - 0x320A); " EXTEND"|42-72
12806|code|ADD             R0, PC; " EXTEND"|120-68
12808|code|BL              prt|255-247-132-253
12812|code|LDR.W           R3, [R11,#4]|219-248-4-48
12816|code|B               loc_3136|145-231
12818|code|BLX             __stack_chk_fail|254-247-142-238
12822|data|ALIGN 4|0-191
12824|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x2EA6|198-63-1-0
12828|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
12832|data|DCD off_17008 - 0x2EAE; "PAST_EOF"|90-65-1-0
12836|data|DCD fsxlogf - 0x2EB0|176-65-1-0
12840|data|DCD aLogDumpDTotalO - 0x2EC6; "LOG DUMP (%d total operations):\n"|234-35-0-0
12844|data|DCD oplog_ptr - 0x16E6C|64-1-0-0
12848|data|DCD aD3dMod256 - 0x2EEC; "%d(%3d mod 256): "|232-35-0-0
12852|data|DCD fsxlogf - 0x2EF0|112-65-1-0
12856|data|DCD aTruncateSFrom0 - 0x2EF2; "TRUNCATE %s\tfrom 0x%x to 0x%x"|202-36-0-0
12860|data|DCD off_17008 - 0x2EF8; "PAST_EOF"|16-65-1-0
12864|data|DCD aDown - 0x2EFE; "DOWN"|166-35-0-0
12868|data|DCD aUp - 0x2F04; "UP"|168-35-0-0
12872|data|DCD aPunch0xXThru0x - 0x2F7E; "PUNCH    0x%x thru 0x%x\t(0x%x bytes)"|146-36-0-0
12876|data|DCD off_17008 - 0x2F8C; "PAST_EOF"|124-64-1-0
12880|data|DCD fsxlogf - 0x2F98|200-64-1-0
12884|data|DCD aMaybeHexdumpSV+0x24 - 0x2FA0; "\n"|216-37-0-0
12888|data|DCD fsxlogf - 0x2FB6|170-64-1-0
12892|data|DCD aMapwrite0xXThr - 0x2FE0; "MAPWRITE 0x%x thru 0x%x\t(0x%x bytes)"|60-35-0-0
12896|data|DCD off_17008 - 0x2FEE; "PAST_EOF"|26-64-1-0
12900|data|DCD aWwww - 0x3002; "\t******WWWW"|66-35-0-0
12904|data|DCD aCloseOpen - 0x300C; "\n\t\tCLOSE/OPEN"|136-36-0-0
12908|data|DCD aSkippedNoOpera - 0x3022; "SKIPPED (no operation)"|50-36-0-0
12912|data|DCD aRead0xXThru0xX - 0x3040; "READ     0x%x thru 0x%x\t(0x%x bytes)"|16-35-0-0
12916|data|DCD off_17008 - 0x304E; "PAST_EOF"|186-63-1-0
12920|data|DCD aRrrr - 0x3062; "\t***RRRR***"|174-34-0-0
12924|data|DCD aFalloc0xXThru0 - 0x30A2; "FALLOC   0x%x thru 0x%x\t(0x%x bytes) %"...|58-35-0-0
12928|data|DCD off_17008 - 0x30B0; "PAST_EOF"|88-63-1-0
12932|data|DCD aFfff - 0x30C8; "\t******FFFF"|60-35-0-0
12936|data|DCD aMapread0xXThru - 0x30E0; "MAPREAD  0x%x thru 0x%x\t(0x%x bytes)"|8-34-0-0
12940|data|DCD off_17008 - 0x30EE; "PAST_EOF"|26-63-1-0
12944|data|DCD aWrite0xXThru0x - 0x311A; "WRITE    0x%x thru 0x%x\t(0x%x bytes)"|94-34-0-0
12948|data|DCD off_17008 - 0x313C; "PAST_EOF"|204-62-1-0
12952|data|DCD aWwww_0 - 0x3152; "\t***WWWW"|94-34-0-0
12956|data|DCD aFlatten - 0x315C; "FLATTEN"|240-34-0-0
12960|data|DCD aBogusLogEntryO - 0x31B2; "BOGUS LOG ENTRY (operation code = %d)!"|186-34-0-0
12964|data|DCD aClone - 0x31BC; "CLONE"|136-34-0-0
12968|data|DCD aPppp - 0x31EA; "\t******PPPP"|78-34-0-0
12972|data|DCD aHole - 0x31FC; " HOLE"|164-33-0-0
12976|data|DCD aExtend - 0x320A; " EXTEND"|158-33-0-0
12980|code|PUSH            {R4-R6,LR}|112-181
12982|code|MOV             R4, R0|4-70
12984|code|CBZ             R0, loc_32D6|104-177
12986|code|LDR             R5, =(asc_5270 - 0x32C0); ": "|8-77
12988|code|ADD             R5, PC; ": "|125-68
12990|code|NEGS            R0, R1; errnum|72-66
12992|code|BLX             strerror|254-247-172-237
12996|code|MOV             R1, R4|33-70
12998|code|MOV             R2, R5|42-70
13000|code|POP.W           {R4-R6,LR}|189-232-112-64
13004|code|MOV             R3, R0|3-70
13006|code|LDR             R0, =(aSSS - 0x32D4); "%s%s%s\n"|4-72
13008|code|ADD             R0, PC; "%s%s%s\n"|120-68
13010|code|B.W             prt|255-247-31-189
13014|code|LDR             R5, =(aLogDumpDTotalO+0x20 - 0x32DC); ""|3-77
13016|code|ADD             R5, PC; ""|125-68
13018|code|B               loc_32BE|240-231
13020|data|DCD asc_5270 - 0x32C0; ": "|176-31-0-0
13024|data|DCD aSSS - 0x32D4; "%s%s%s\n"|192-31-0-0
13028|data|DCD aLogDumpDTotalO+0x20 - 0x32DC; ""|244-31-0-0
13032|code|PUSH            {R4-R7,LR}|240-181
13034|code|SUB             SP, SP, #0xC|131-176
13036|code|MOV             R5, R3|29-70
13038|code|ORRS.W          R3, R2, R5|82-234-5-3
13042|code|LDR             R6, [SP,#0x20+arg_0]|8-158
13044|code|MOV             R4, R2|20-70
13046|code|ITE EQ|12-191
13048|code|MOVEQ           R3, #1|1-35
13050|code|MOVNE           R3, #0|0-35
13052|code|CMP             R6, #0|0-46
13054|code|IT LE|216-191
13056|code|ORRLE.W         R3, R3, #1|67-240-1-3
13060|code|CBNZ            R3, loc_3354|51-187
13062|code|CMP.W           R2, #0x80000000|178-241-0-79
13066|code|SBCS.W          R2, R5, #0|117-241-0-2
13070|code|BGE             loc_3370|47-218
13072|code|STR             R3, [SP,#0x20+var_20]|0-147
13074|code|MOV             R7, R0|7-70
13076|code|MOVS            R2, #0|0-34
13078|code|MOV             R0, R6|48-70
13080|code|MOVS            R3, #0|0-35
13082|code|BLX             lseek64|254-247-124-238
13086|code|ADDS            R1, #1|1-49
13088|code|IT EQ|8-191
13090|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
13094|code|BEQ             loc_3366|30-208
13096|code|MOV             R0, R6; fd|48-70
13098|code|MOV             R1, R7; buf|57-70
13100|code|MOV             R2, R4; n|34-70
13102|code|BLX             write|254-247-108-238
13106|code|ASRS            R3, R0, #0x1F|195-23
13108|code|CMP             R3, R5|171-66
13110|code|IT EQ|8-191
13112|code|CMPEQ           R0, R4|160-66
13114|code|BEQ             loc_3354|11-208
13116|code|ADDS            R3, R0, #1|67-28
13118|code|BEQ             loc_3358|11-208
13120|code|MOV             R1, R0|1-70
13122|code|LDR             R0, =(aSaveBufferShor - 0x334C); "save_buffer: short write, 0x%x bytes in"...|15-72
13124|code|MOV             R2, R4|34-70
13126|code|MOV             R3, R5|43-70
13128|code|ADD             R0, PC; "save_buffer: short write, 0x%x bytes in"...|120-68
13130|code|ADD             SP, SP, #0xC|3-176
13132|code|POP.W           {R4-R7,LR}|189-232-240-64
13136|code|B.W             warn|255-247-188-188
13140|code|ADD             SP, SP, #0xC|3-176
13142|code|POP             {R4-R7,PC}|240-189
13144|code|LDR             R0, =(aSaveBufferWrit - 0x335E); "save_buffer write"|10-72
13146|code|ADD             R0, PC; "save_buffer write"|120-68
13148|code|ADD             SP, SP, #0xC|3-176
13150|code|POP.W           {R4-R7,LR}|189-232-240-64
13154|code|B.W             prterr|255-247-49-189
13158|code|LDR             R0, =(aSaveBufferLsee - 0x336C); "save_buffer: lseek 0"|8-72
13160|code|ADD             R0, PC; "save_buffer: lseek 0"|120-68
13162|code|BL              prterr|255-247-45-253
13166|code|B               loc_3328|219-231
13168|code|LDR             R0, =(aFsxFlawOverflo - 0x3376); "fsx flaw: overflow in save_buffer\n"|6-72
13170|code|ADD             R0, PC; "fsx flaw: overflow in save_buffer\n"|120-68
13172|code|BL              prt|255-247-206-252
13176|code|MOVS            R0, #0x43 ; 'C'; status|67-32
13178|code|BLX             exit|254-247-68-237
13182|data|ALIGN 0x10|0-191
13184|data|DCD aSaveBufferShor - 0x334C; "save_buffer: short write, 0x%x bytes in"...|168-33-0-0
13188|data|DCD aSaveBufferWrit - 0x335E; "save_buffer write"|130-33-0-0
13192|data|DCD aSaveBufferLsee - 0x336C; "save_buffer: lseek 0"|92-33-0-0
13196|data|DCD aFsxFlawOverflo - 0x3376; "fsx flaw: overflow in save_buffer\n"|46-33-0-0
13200|code|PUSH            {R7,LR}|128-181
13202|code|SUB             SP, SP, #8|130-176
13204|code|MOV             R5, R0|5-70
13206|code|BL              logdump|255-247-127-253
13210|code|LDR             R2, =(fsxlogf - 0x33A2)|20-74
13212|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x33A4)|20-76
13214|code|ADD             R2, PC; fsxlogf|122-68
13216|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
13218|code|LDR             R3, [R2,#(fsxgoodfd - 0x17060)]|83-105
13220|code|CBZ             R3, loc_33DE|219-177
13222|code|LDR             R1, =(good_buf_ptr - 0x16E6C)|19-73
13224|code|LDR             R1, [R4,R1]; good_buf|97-88
13226|code|LDR             R0, [R1]|8-104
13228|code|CBZ             R0, loc_33D4|144-177
13230|code|LDRD.W          R6, R7, [R2,#0x18]|210-233-6-103
13234|code|STR             R3, [SP,#0x10+var_10]|0-147
13236|code|MOV             R2, R6|50-70
13238|code|MOV             R3, R7|59-70
13240|code|BL              save_buffer|255-247-150-255
13244|code|LDR             R0, =(aCorrectContent - 0x33C2); "Correct content saved for comparison\n"|14-72
13246|code|ADD             R0, PC; "Correct content saved for comparison\n"|120-68
13248|code|BL              prt|255-247-168-252
13252|code|LDR             R3, =(iname_ptr - 0x16E6C)|13-75
13254|code|LDR             R0, =(aMaybeHexdumpSV - 0x33CE); "(maybe hexdump \"%s\" vs \"%s.fsxgood\""...|14-72
13256|code|LDR             R3, [R4,R3]; iname|227-88
13258|code|ADD             R0, PC; "(maybe hexdump \"%s\" vs \"%s.fsxgood\""...|120-68
13260|code|LDR             R1, [R3]|25-104
13262|code|MOV             R2, R1|10-70
13264|code|BL              prt|255-247-160-252
13268|code|LDR             R3, =(fsxlogf - 0x33DA)|11-75
13270|code|ADD             R3, PC; fsxlogf|123-68
13272|code|LDR             R0, [R3,#(fsxgoodfd - 0x17060)]; fd|88-105
13274|code|BLX             close|254-247-84-237
13278|code|MOVS            R0, #3; seconds|3-32
13280|code|BLX             sleep|254-247-202-237
13284|code|MOV             R0, R5; status|40-70
13286|code|BLX             exit|254-247-14-237
13290|data|ALIGN 4|0-191
13292|data|DCD fsxlogf - 0x33A2|190-60-1-0
13296|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x33A4|200-58-1-0
13300|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
13304|data|DCD aCorrectContent - 0x33C2; "Correct content saved for comparison\n"|106-33-0-0
13308|data|DCD iname_ptr - 0x16E6C|144-1-0-0
13312|data|DCD aMaybeHexdumpSV - 0x33CE; "(maybe hexdump \"%s\" vs \"%s.fsxgood\""...|134-33-0-0
13316|data|DCD fsxlogf - 0x33DA|134-60-1-0
13320|code|PUSH.W          {R4-R11,LR}|45-233-240-79
13324|code|ADDS            R5, R0, R2|133-24
13326|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x341E)|223-248-224-128
13330|code|SUB             SP, SP, #0x1C|135-176
13332|code|MOV             R4, R2|20-70
13334|code|MOV             R0, R5; s1|40-70
13336|code|MOV             R2, R3; n|26-70
13338|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
13340|code|MOV             R6, R3|30-70
13342|code|MOV             R7, R1|15-70
13344|code|BLX             memcmp|254-247-42-238
13348|code|CBNZ            R0, loc_342C|16-185
13350|code|ADD             SP, SP, #0x1C|7-176
13352|code|POP.W           {R4-R11,PC}|189-232-240-143
13356|code|LDR             R3, =(iname_ptr - 0x16E6C)|49-75
13358|code|MOV             R1, R4|33-70
13360|code|LDR             R0, =(aReadBadDataOff - 0x343C); "READ BAD DATA: offset = 0x%x, size = 0x"...|49-72
13362|code|MOV             R2, R6|50-70
13364|code|LDR.W           R3, [R8,R3]; iname|88-248-3-48
13368|code|ADD             R0, PC; "READ BAD DATA: offset = 0x%x, size = 0x"...|120-68
13370|code|LDR             R3, [R3]|27-104
13372|code|BL              prt|255-247-106-252
13376|code|LDR             R0, =(aOffsetGoodBadR - 0x3446); "OFFSET\tGOOD\tBAD\tRANGE\n"|46-72
13378|code|ADD             R0, PC; "OFFSET\tGOOD\tBAD\tRANGE\n"|120-68
13380|code|BL              prt|255-247-102-252
13384|code|CMP             R6, #0|0-46
13386|code|BEQ             loc_34E0|73-208
13388|code|LDR             R3, =(off_17008 - 0x345A); "PAST_EOF"|44-75
13390|code|MOV.W           R8, #0|79-240-0-8
13394|code|MOV             R11, R8|195-70
13396|code|MOV             R9, R7|185-70
13398|code|ADD             R3, PC; off_17008|123-68
13400|code|STR             R3, [SP,#0x40+var_3C]|1-147
13402|code|LDR             R3, =(a0x5x0x04x0x04x - 0x3460); "0x%5x\t0x%04x\t0x%04x"|42-75
13404|code|ADD             R3, PC; "0x%5x\t0x%04x\t0x%04x"|123-68
13406|code|STR             R3, [SP,#0x40+var_38]|2-147
13408|code|LDR             R3, =(a0x5x - 0x3466); "\t0x%5x\n"|41-75
13410|code|ADD             R3, PC; "\t0x%5x\n"|123-68
13412|code|STR             R3, [SP,#0x40+var_34]|3-147
13414|code|LDR             R3, =(aOperationMod25 - 0x346C); "operation# (mod 256) for the bad data u"...|41-75
13416|code|ADD             R3, PC; "operation# (mod 256) for the bad data u"...|123-68
13418|code|STR             R3, [SP,#0x40+var_30]|4-147
13420|code|LDR             R3, =(aOperationMod25_0 - 0x3472); "operation# (mod 256) for the bad data m"...|40-75
13422|code|ADD             R3, PC; "operation# (mod 256) for the bad data m"...|123-68
13424|code|STR             R3, [SP,#0x40+var_2C]|5-147
13426|code|B               loc_3486|8-224
13428|code|LDR             R3, [SP,#0x40+var_3C]|1-155
13430|code|ADD.W           R11, R11, #1|11-241-1-11
13434|code|STR             R4, [R3,#0xC]|220-96
13436|code|CMP             R6, R10|86-69
13438|code|ADD.W           R4, R4, #1|4-241-1-4
13442|code|MOV             R8, R10|208-70
13444|code|BEQ             loc_34E0|44-208
13446|code|LDRB.W          R3, [R5],#1|21-248-1-59
13450|code|ADD.W           R10, R8, #1|8-241-1-10
13454|code|LDRB.W          R2, [R9],#1|25-248-1-43
13458|code|CMP             R2, R3|154-66
13460|code|BEQ             loc_347C|242-208
13462|code|CMP.W           R11, #0xF|187-241-15-15
13466|code|BHI             loc_3474|235-216
13468|code|LDRB.W          R12, [R5,#-1]|21-248-1-204
13472|code|MOV             R1, R4|33-70
13474|code|LDRB.W          LR, [R9,#-1]|25-248-1-236
13478|code|LDRB            R2, [R5]|42-120
13480|code|LDRB.W          R3, [R9]|153-248-0-48
13484|code|LDR             R0, [SP,#0x40+var_38]|2-152
13486|code|ORR.W           R2, R2, R12,LSL#8|66-234-12-34
13490|code|ORR.W           R3, R3, LR,LSL#8|67-234-14-35
13494|code|BL              prt|255-247-45-252
13498|code|TST.W           R4, #1|20-240-1-15
13502|code|LDR             R0, [SP,#0x40+var_34]|3-152
13504|code|MOV             R1, R11|89-70
13506|code|IT NE|24-191
13508|code|MOVNE           R8, R10|208-70
13510|code|LDRSB.W         R8, [R7,R8]|23-249-8-128
13514|code|BL              prt|255-247-35-252
13518|code|CMP.W           R8, #0|184-241-0-15
13522|code|BEQ             loc_34E6|8-208
13524|code|UXTB.W          R1, R8|95-250-136-241
13528|code|LDR             R0, [SP,#0x40+var_2C]|5-152
13530|code|BL              prt|255-247-27-252
13534|code|B               loc_3474|201-231
13536|code|MOVS            R0, #0x6E ; 'n'|110-32
13538|code|BL              report_failure|255-247-85-255
13542|code|LDR             R0, [SP,#0x40+var_30]|4-152
13544|code|BL              prt|255-247-20-252
13548|code|B               loc_3474|194-231
13550|data|ALIGN 0x10|0-191
13552|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x341E|78-58-1-0
13556|data|DCD iname_ptr - 0x16E6C|144-1-0-0
13560|data|DCD aReadBadDataOff - 0x343C; "READ BAD DATA: offset = 0x%x, size = 0x"...|64-33-0-0
13564|data|DCD aOffsetGoodBadR - 0x3446; "OFFSET\tGOOD\tBAD\tRANGE\n"|110-33-0-0
13568|data|DCD off_17008 - 0x345A; "PAST_EOF"|174-59-1-0
13572|data|DCD a0x5x0x04x0x04x - 0x3460; "0x%5x\t0x%04x\t0x%04x"|108-33-0-0
13576|data|DCD a0x5x - 0x3466; "\t0x%5x\n"|122-33-0-0
13580|data|DCD aOperationMod25 - 0x346C; "operation# (mod 256) for the bad data u"...|176-33-0-0
13584|data|DCD aOperationMod25_0 - 0x3472; "operation# (mod 256) for the bad data m"...|118-33-0-0
13588|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x351E)|24-75
13590|code|MOVS            R2, #0xA0|160-34
13592|code|PUSH            {R4,R5,LR}|48-181
13594|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
13596|code|LDR             R4, =(__stack_chk_guard_ptr - 0x16E6C)|23-76
13598|code|SUB             SP, SP, #0xB4|173-176
13600|code|LDR             R0, =(image_ptr - 0x16E6C)|23-72
13602|code|ADD             R1, SP, #0xC0+var_B8|2-169
13604|code|LDR             R4, [R3,R4]; __stack_chk_guard|28-89
13606|code|LDR             R5, [R4]|37-104
13608|code|STR             R5, [SP,#0xC0+var_14]|43-149
13610|code|LDR             R3, [R3,R0]; image|27-88
13612|code|LDR             R0, [R3]|24-104
13614|code|BLX             rbd_stat|254-247-188-237
13618|code|SUBS            R1, R0, #0|1-30
13620|code|BLT             loc_3556|15-219
13622|code|LDR             R3, =(fsxlogf - 0x3540)|19-75
13624|code|LDRD.W          R0, R1, [SP,#0xC0+var_B8]|221-233-2-1
13628|code|ADD             R3, PC; fsxlogf|123-68
13630|code|LDRD.W          R2, R3, [R3,#0x18]|211-233-6-35
13634|code|CMP             R3, R1|139-66
13636|code|IT EQ|8-191
13638|code|CMPEQ           R2, R0|130-66
13640|code|BNE             loc_3560|10-209
13642|code|LDR             R2, [SP,#0xC0+var_14]|43-154
13644|code|LDR             R3, [R4]|35-104
13646|code|CMP             R2, R3|154-66
13648|code|BNE             loc_3572|15-209
13650|code|ADD             SP, SP, #0xB4|45-176
13652|code|POP             {R4,R5,PC}|48-189
13654|code|LDR             R0, =(aCheckSizeFstat - 0x355C); "check_size: fstat"|12-72
13656|code|ADD             R0, PC; "check_size: fstat"|120-68
13658|code|BL              prterrcode|255-247-171-254
13662|code|B               loc_3536|234-231
13664|code|STRD.W          R0, R1, [SP,#0xC0+var_C0]|205-233-0-1
13668|code|LDR             R0, =(aSizeErrorExpec - 0x356A); "Size error: expected 0x%llx stat 0x%llx"...|9-72
13670|code|ADD             R0, PC; "Size error: expected 0x%llx stat 0x%llx"...|120-68
13672|code|BL              prt|255-247-212-251
13676|code|MOVS            R0, #0x78 ; 'x'|120-32
13678|code|BL              report_failure|255-247-15-255
13682|code|BLX             __stack_chk_fail|254-247-222-236
13686|data|ALIGN 4|0-191
13688|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x351E|78-57-1-0
13692|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
13696|data|DCD image_ptr - 0x16E6C|104-1-0-0
13700|data|DCD fsxlogf - 0x3540|32-59-1-0
13704|data|DCD aCheckSizeFstat - 0x355C; "check_size: fstat"|12-33-0-0
13708|data|DCD aSizeErrorExpec - 0x356A; "Size error: expected 0x%llx stat 0x%llx"...|18-33-0-0
13712|code|LDR             R1, =(_GLOBAL_OFFSET_TABLE_ - 0x359A)|27-73
13714|code|MOVS            R2, #0|0-34
13716|code|PUSH            {R4-R7,LR}|240-181
13718|code|ADD             R1, PC; _GLOBAL_OFFSET_TABLE_|121-68
13720|code|LDR             R4, =(__stack_chk_guard_ptr - 0x16E6C)|26-76
13722|code|SUB             SP, SP, #0xAC|171-176
13724|code|LDR             R0, =(image_ptr - 0x16E6C)|26-72
13726|code|MOVW            R6, #0x86A0|72-242-160-102
13730|code|MOVS            R3, #0|0-35
13732|code|MOVT.W          R6, #1|192-242-1-6
13736|code|LDR             R5, [R1,R4]; __stack_chk_guard|13-89
13738|code|MOVS            R7, #0|0-39
13740|code|LDR             R4, [R5]|44-104
13742|code|STR             R4, [SP,#0xC0+var_1C]|41-148
13744|code|LDR             R4, [R1,R0]; image|12-88
13746|code|LDR             R0, [R4]|32-104
13748|code|BLX             rbd_resize|254-247-4-237
13752|code|MOV             R3, R7|59-70
13754|code|MOV             R2, R6|50-70
13756|code|LDR             R0, [R4]|32-104
13758|code|BLX             rbd_resize|254-247-0-237
13762|code|MOVS            R2, #0xA0|160-34
13764|code|LDR             R0, [R4]|32-104
13766|code|MOV             R1, SP|105-70
13768|code|BLX             rbd_stat|254-247-110-237
13772|code|LDRD.W          R2, R3, [SP,#0xC0+var_C0]|221-233-0-35
13776|code|CMP             R3, R7|187-66
13778|code|IT EQ|8-191
13780|code|CMPEQ           R2, R6|178-66
13782|code|BNE             loc_35EE|10-209
13784|code|MOVS            R2, #0|0-34
13786|code|MOVS            R3, #0|0-35
13788|code|LDR             R0, [R4]|32-104
13790|code|BLX             rbd_resize|254-247-240-236
13794|code|LDR             R2, [SP,#0xC0+var_1C]|41-154
13796|code|LDR             R3, [R5]|43-104
13798|code|CMP             R2, R3|154-66
13800|code|BNE             loc_35FC|8-209
13802|code|ADD             SP, SP, #0xAC|43-176
13804|code|POP             {R4-R7,PC}|240-189
13806|code|LDR             R0, =(aNoExtendOnTrun - 0x35F4); "no extend on truncate! not posix!\n"|7-72
13808|code|ADD             R0, PC; "no extend on truncate! not posix!\n"|120-68
13810|code|BL              prt|255-247-143-251
13814|code|MOVS            R0, #0x82; status|130-32
13816|code|BLX             exit|254-247-4-236
13820|code|BLX             __stack_chk_fail|254-247-152-236
13824|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x359A|210-56-1-0
13828|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
13832|data|DCD image_ptr - 0x16E6C|104-1-0-0
13836|data|DCD aNoExtendOnTrun - 0x35F4; "no extend on truncate! not posix!\n"|180-32-0-0
13840|code|PUSH.W          {R4-R10,LR}|45-233-240-71
13844|code|SUB             SP, SP, #0x18|134-176
13846|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x3624)|223-248-40-161
13850|code|MOVS            R7, #0|0-39
13852|code|LDR             R2, =(__stack_chk_guard_ptr - 0x16E6C)|73-74
13854|code|MOV             R1, R7|57-70
13856|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
13858|code|LDR             R3, =(cluster_ptr - 0x16E6C)|73-75
13860|code|LDR.W           R6, [R10,R2]; __stack_chk_guard|90-248-2-96
13864|code|STR             R7, [SP,#0x38+var_28]|4-151
13866|code|LDR             R2, [R6]|50-104
13868|code|STR             R2, [SP,#0x38+var_24]|5-146
13870|code|LDR.W           R5, [R10,R3]; cluster|90-248-3-80
13874|code|MOV             R0, R5|40-70
13876|code|BLX             rados_create|254-247-248-235
13880|code|SUBS            R4, R0, #0|4-30
13882|code|BLT             loc_370A|102-219
13884|code|MOV             R1, R7|57-70
13886|code|LDR             R0, [R5]|40-104
13888|code|BLX             rados_conf_parse_env|254-247-38-236
13892|code|MOV             R1, R7|57-70
13894|code|LDR             R0, [R5]|40-104
13896|code|BLX             rados_conf_read_file|254-247-240-236
13900|code|SUBS            R4, R0, #0|4-30
13902|code|BLT             loc_3698|35-219
13904|code|LDR             R0, [R5]|40-104
13906|code|BLX             rados_connect|254-247-246-235
13910|code|SUBS            R4, R0, #0|4-30
13912|code|BLT             loc_36FE|81-219
13914|code|LDR             R3, =(pool_ptr - 0x16E6C)|60-75
13916|code|LDR             R0, [R5]|40-104
13918|code|LDR.W           R7, [R10,R3]; pool|90-248-3-112
13922|code|LDR             R1, [R7]|57-104
13924|code|BLX             rados_pool_create|254-247-32-236
13928|code|ADDS.W          R3, R0, #0x11|16-241-17-3
13932|code|MOV             R4, R0|4-70
13934|code|IT NE|24-191
13936|code|MOVNE           R3, #1|1-35
13938|code|ANDS.W          R3, R3, R0,LSR#31|19-234-208-115
13942|code|BEQ             loc_36A4|21-208
13944|code|LDR             R0, =(aErrorCreatingP - 0x3680); "Error creating pool"|53-72
13946|code|MOV             R1, R4|33-70
13948|code|ADD             R0, PC; "Error creating pool"|120-68
13950|code|BL              simple_err|255-247-239-251
13954|code|LDR             R0, [R5]|40-104
13956|code|BLX             rados_shutdown|254-247-178-235
13960|code|MOV             R0, R4|32-70
13962|code|LDR             R2, [SP,#0x38+var_24]|5-154
13964|code|LDR             R3, [R6]|51-104
13966|code|CMP             R2, R3|154-66
13968|code|BNE             loc_373C|84-209
13970|code|ADD             SP, SP, #0x18|6-176
13972|code|POP.W           {R4-R10,PC}|189-232-240-135
13976|code|LDR             R0, =(aErrorReadingCe - 0x36A0); "Error reading ceph config file"|46-72
13978|code|MOV             R1, R4|33-70
13980|code|ADD             R0, PC; "Error reading ceph config file"|120-68
13982|code|BL              simple_err|255-247-223-251
13986|code|B               loc_3682|238-231
13988|code|LDR             R3, =(ioctx_ptr - 0x16E6C)|44-75
13990|code|LDR             R1, [R7]|57-104
13992|code|LDR             R0, [R5]|40-104
13994|code|LDR.W           R7, [R10,R3]; ioctx|90-248-3-112
13998|code|MOV             R2, R7|58-70
14000|code|BLX             rados_ioctx_create|254-247-126-235
14004|code|SUBS            R4, R0, #0|4-30
14006|code|BLT             loc_3730|59-219
14008|code|LDR             R3, =(off_17008 - 0x36C0); "PAST_EOF"|40-75
14010|code|LDR             R1, =(iname_ptr - 0x16E6C)|41-73
14012|code|ADD             R3, PC; off_17008|123-68
14014|code|LDR             R3, [R3,#(clone_calls - 0x17008)]|27-105
14016|code|CBZ             R3, loc_3718|83-179
14018|code|LDR.W           R1, [R10,R1]; iname|90-248-1-16
14022|code|ADD             R4, SP, #0x38+var_28|4-172
14024|code|LDR             R0, [R7]|56-104
14026|code|MOV.W           R8, #1|79-240-1-8
14030|code|STR             R4, [SP,#0x38+var_30]|2-148
14032|code|MOV.W           R9, #0|79-240-0-9
14036|code|MOVS            R2, #0|0-34
14038|code|STRD.W          R8, R9, [SP,#0x38+var_38]|205-233-0-137
14042|code|MOVS            R3, #0|0-35
14044|code|LDR             R1, [R1]|9-104
14046|code|BLX             rbd_create2|254-247-46-236
14050|code|MOV             R4, R0|4-70
14052|code|CMP             R4, #0|0-44
14054|code|IT GE|168-191
14056|code|MOVGE           R0, #0|0-32
14058|code|BGE             loc_368A|206-218
14060|code|LDR             R0, =(aErrorCreatingI - 0x36F4); "Error creating image"|29-72
14062|code|MOV             R1, R4|33-70
14064|code|ADD             R0, PC; "Error creating image"|120-68
14066|code|BL              simple_err|255-247-181-251
14070|code|LDR             R0, [R7]|56-104
14072|code|BLX             rados_ioctx_destroy|254-247-116-236
14076|code|B               loc_3682|193-231
14078|code|LDR             R0, =(aErrorConnectin - 0x3706); "Error connecting to cluster"|26-72
14080|code|MOV             R1, R4|33-70
14082|code|ADD             R0, PC; "Error connecting to cluster"|120-68
14084|code|BL              simple_err|255-247-172-251
14088|code|B               loc_3682|187-231
14090|code|LDR             R0, =(aCouldNotCreate - 0x3712); "Could not create cluster handle"|24-72
14092|code|MOV             R1, R4|33-70
14094|code|ADD             R0, PC; "Could not create cluster handle"|120-68
14096|code|BL              simple_err|255-247-166-251
14100|code|MOV             R0, R4|32-70
14102|code|B               loc_368A|184-231
14104|code|LDR.W           R4, [R10,R1]; iname|90-248-1-64
14108|code|MOVS            R2, #0|0-34
14110|code|LDR             R0, [R7]|56-104
14112|code|ADD             R1, SP, #0x38+var_28|4-169
14114|code|MOVS            R3, #0|0-35
14116|code|STR             R1, [SP,#0x38+var_38]|0-145
14118|code|LDR             R1, [R4]|33-104
14120|code|BLX             rbd_create|254-247-208-236
14124|code|MOV             R4, R0|4-70
14126|code|B               loc_36E4|217-231
14128|code|LDR             R0, =(aErrorCreatingI_0 - 0x3738); "Error creating ioctx"|15-72
14130|code|MOV             R1, R4|33-70
14132|code|ADD             R0, PC; "Error creating ioctx"|120-68
14134|code|BL              simple_err|255-247-147-251
14138|code|B               loc_3682|162-231
14140|code|BLX             __stack_chk_fail|254-247-248-235
14144|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3624|72-56-1-0
14148|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
14152|data|DCD cluster_ptr - 0x16E6C|108-1-0-0
14156|data|DCD pool_ptr - 0x16E6C|60-1-0-0
14160|data|DCD aErrorCreatingP - 0x3680; "Error creating pool"|168-32-0-0
14164|data|DCD aErrorReadingCe - 0x36A0; "Error reading ceph config file"|76-32-0-0
14168|data|DCD ioctx_ptr - 0x16E6C|112-1-0-0
14172|data|DCD off_17008 - 0x36C0; "PAST_EOF"|72-57-1-0
14176|data|DCD iname_ptr - 0x16E6C|144-1-0-0
14180|data|DCD aErrorCreatingI - 0x36F4; "Error creating image"|96-32-0-0
14184|data|DCD aErrorConnectin - 0x3706; "Error connecting to cluster"|6-32-0-0
14188|data|DCD aCouldNotCreate - 0x3712; "Could not create cluster handle"|186-31-0-0
14192|data|DCD aErrorCreatingI_0 - 0x3738; "Error creating ioctx"|4-32-0-0
14196|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x377C)|6-75
14198|code|LDR             R2, =(o_direct_ptr - 0x16E6C)|7-74
14200|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
14202|code|LDR             R2, [R3,R2]; o_direct|154-88
14204|code|LDR             R2, [R2]|18-104
14206|code|CMP.W           R2, #0x10000|178-245-128-63
14210|code|BEQ             locret_378E|4-208
14212|code|LDR             R2, =(image_ptr - 0x16E6C)|4-74
14214|code|LDR             R3, [R3,R2]; image|155-88
14216|code|LDR             R0, [R3]|24-104
14218|code|B.W             j_rbd_flush|254-247-195-187
14222|code|BX              LR|112-71
14224|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x377C|240-54-1-0
14228|data|DCD o_direct_ptr - 0x16E6C|92-1-0-0
14232|data|DCD image_ptr - 0x16E6C|104-1-0-0
14236|code|LDR             R3, =(off_17008 - 0x37A6); "PAST_EOF"|87-75
14238|code|PUSH.W          {R4-R9,LR}|45-233-240-67
14242|code|ADD             R3, PC; off_17008|123-68
14244|code|SUB             SP, SP, #0xC|131-176
14246|code|MOV             R4, R1|12-70
14248|code|LDR.W           R8, [R3,#(readbdy - 0x17008)]|211-248-20-128
14252|code|MOV             R5, R0|5-70
14254|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x37B6)|84-78
14256|code|MOV             R1, R8|65-70
14258|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
14260|code|BL              sub_4BDC|1-240-18-250
14264|code|LDR             R3, =(o_direct_ptr - 0x16E6C)|82-75
14266|code|LDR             R3, [R6,R3]; o_direct|243-88
14268|code|LDR             R7, [R3]|31-104
14270|code|SUBS            R5, R5, R1|109-26
14272|code|CBZ             R7, loc_37CC|39-177
14274|code|MOV             R0, R4|32-70
14276|code|MOV             R1, R8|65-70
14278|code|BL              sub_4BDC|1-240-9-250
14282|code|SUBS            R4, R4, R1|100-26
14284|code|CBNZ            R4, loc_37FC|180-185
14286|code|LDR             R3, =(fsxlogf - 0x37D4)|78-75
14288|code|ADD             R3, PC; fsxlogf|123-68
14290|code|LDR             R2, [R3,#(quiet - 0x17060)]|26-106
14292|code|CBNZ            R2, loc_37EA|74-185
14294|code|LDR             R2, [R3,#(testcalls - 0x17060)]|90-104
14296|code|CLZ.W           R7, R7|183-250-135-247
14300|code|LDR             R3, [R3,#(simulatedopcount - 0x17060)]|91-106
14302|code|LSRS            R7, R7, #5|127-9
14304|code|CMP             R2, R3|154-66
14306|code|IT LS|152-191
14308|code|MOVLS           R7, #0|0-39
14310|code|CMP             R7, #0|0-47
14312|code|BNE             loc_389C|88-209
14314|code|MOVS            R1, #0|0-33
14316|code|MOV             R2, R5|42-70
14318|code|MOV             R3, R1|11-70
14320|code|MOVS            R0, #0x65 ; 'e'|101-32
14322|code|ADD             SP, SP, #0xC|3-176
14324|code|POP.W           {R4-R9,LR}|189-232-240-67
14328|code|B.W             log4|255-247-2-187
14332|code|LDR             R7, =(fsxlogf - 0x3808)|67-79
14334|code|ADD.W           R8, R4, R5|4-235-5-8
14338|code|MOVS            R1, #0|0-33
14340|code|ADD             R7, PC; fsxlogf|127-68
14342|code|LDRD.W          R2, R3, [R7,#0x18]|215-233-6-35
14346|code|CMP             R2, R8|66-69
14348|code|SBCS            R3, R1|139-65
14350|code|BGE             loc_382E|14-218
14352|code|LDR             R3, [R7,#(quiet - 0x17060)]|59-106
14354|code|CBNZ            R3, loc_381C|27-185
14356|code|LDR             R2, [R7,#(testcalls - 0x17060)]|122-104
14358|code|LDR             R3, [R7,#(simulatedopcount - 0x17060)]|123-106
14360|code|CMP             R2, R3|154-66
14362|code|BHI             loc_38A6|68-216
14364|code|MOV             R2, R5|42-70
14366|code|MOV             R3, R4|35-70
14368|code|MOVS            R0, #0x65 ; 'e'|101-32
14370|code|MOVS            R1, #0|0-33
14372|code|ADD             SP, SP, #0xC|3-176
14374|code|POP.W           {R4-R9,LR}|189-232-240-67
14378|code|B.W             log4|255-247-233-186
14382|code|MOVS            R0, #0|0-32
14384|code|MOV             R1, R5|41-70
14386|code|MOV             R3, R0|3-70
14388|code|MOV             R2, R4|34-70
14390|code|BL              log4|255-247-227-250
14394|code|LDR.W           R9, [R7,#(testcalls - 0x17060)]|215-248-4-144
14398|code|LDR             R3, [R7,#(simulatedopcount - 0x17060)]|123-106
14400|code|CMP             R9, R3|153-69
14402|code|BLS             loc_38B0|53-217
14404|code|LDR             R3, [R7,#(quiet - 0x17060)]|59-106
14406|code|CBNZ            R3, loc_386A|131-185
14408|code|LDR             R1, [R7,#(progressinterval - 0x17060)]|185-106
14410|code|CMP             R1, #0|0-41
14412|code|BEQ             loc_38B6|51-208
14414|code|MOV             R0, R9|72-70
14416|code|BL              sub_4BDC|1-240-196-249
14420|code|CMP             R1, #0|0-41
14422|code|BNE             loc_38B6|46-209
14424|code|LDR             R0, =(aLuRead0xXThru0 - 0x3866); "%lu read\t0x%x thru\t0x%x\t(0x%x bytes)"...|45-72
14426|code|MOV             R1, R9|73-70
14428|code|STR             R4, [SP,#0x28+var_28]|0-148
14430|code|ADD.W           R3, R8, #0xFFFFFFFF|8-241-255-51
14434|code|ADD             R0, PC; "%lu read\t0x%x thru\t0x%x\t(0x%x bytes)"...|120-68
14436|code|MOV             R2, R5|42-70
14438|code|BL              prt|255-247-85-250
14442|code|LDR             R1, =(temp_buf_ptr - 0x16E6C)|42-73
14444|code|MOV             R2, R5|42-70
14446|code|LDR             R0, =(image_ptr - 0x16E6C)|42-72
14448|code|MOVS            R3, #0|0-35
14450|code|LDR             R0, [R6,R0]; image|48-88
14452|code|STR             R4, [SP,#0x28+var_28]|0-148
14454|code|LDR             R7, [R6,R1]; temp_buf|119-88
14456|code|LDR             R0, [R0]|0-104
14458|code|LDR             R1, [R7]|57-104
14460|code|STR             R1, [SP,#0x28+var_24]|1-145
14462|code|BLX             rbd_read|254-247-146-234
14466|code|CMP             R4, R0|132-66
14468|code|BNE             loc_38DA|41-209
14470|code|LDR             R0, =(good_buf_ptr - 0x16E6C)|37-72
14472|code|MOV             R2, R5|42-70
14474|code|LDR             R1, [R7]|57-104
14476|code|MOV             R3, R4|35-70
14478|code|LDR             R0, [R6,R0]; good_buf|48-88
14480|code|LDR             R0, [R0]|0-104
14482|code|ADD             SP, SP, #0xC|3-176
14484|code|POP.W           {R4-R9,LR}|189-232-240-67
14488|code|B.W             check_buffers|255-247-182-189
14492|code|LDR             R0, =(aSkippingZeroSi - 0x38A2); "skipping zero size read\n"|32-72
14494|code|ADD             R0, PC; "skipping zero size read\n"|120-68
14496|code|BL              prt|255-247-56-250
14500|code|B               loc_37EA|161-231
14502|code|LDR             R0, =(aSkippingSeekRe - 0x38AC); "skipping seek/read past end of file\n"|31-72
14504|code|ADD             R0, PC; "skipping seek/read past end of file\n"|120-68
14506|code|BL              prt|255-247-51-250
14510|code|B               loc_381C|181-231
14512|code|ADD             SP, SP, #0xC|3-176
14514|code|POP.W           {R4-R9,PC}|189-232-240-131
14518|code|LDR             R3, =(fsxlogf - 0x38BC)|28-75
14520|code|ADD             R3, PC; fsxlogf|123-68
14522|code|LDR             R3, [R3,#(debug - 0x17060)]|219-106
14524|code|CMP             R3, #0|0-43
14526|code|BEQ             loc_386A|212-208
14528|code|LDR             R2, =(off_17008 - 0x38C6); "PAST_EOF"|26-74
14530|code|ADD             R2, PC; off_17008|122-68
14532|code|LDR             R3, [R2,#(monitorstart - 0x17008)]|147-105
14534|code|ADDS            R1, R3, #1|89-28
14536|code|BEQ             loc_3858|198-208
14538|code|CMP             R8, R3|152-69
14540|code|BLS             loc_386A|205-217
14542|code|LDR             R3, [R2,#(monitorend - 0x17008)]|211-105
14544|code|ADDS            R2, R3, #1|90-28
14546|code|BEQ             loc_3858|193-208
14548|code|CMP             R5, R3|157-66
14550|code|BHI             loc_386A|200-216
14552|code|B               loc_3858|190-231
14554|code|CMP             R0, #0|0-40
14556|code|MOV             R1, R0|1-70
14558|code|BLT             loc_38F0|7-219
14560|code|LDR             R0, =(aShortRead0xXBy - 0x38E8); "short read: 0x%x bytes instead of 0x%x"...|19-72
14562|code|MOV             R2, R4|34-70
14564|code|ADD             R0, PC; "short read: 0x%x bytes instead of 0x%x"...|120-68
14566|code|BL              prt|255-247-21-250
14570|code|MOVS            R0, #0x8D|141-32
14572|code|BL              report_failure|255-247-80-253
14576|code|LDR             R0, =(aDoreadRead - 0x38F6); "doread: read"|16-72
14578|code|ADD             R0, PC; "doread: read"|120-68
14580|code|BL              prterrcode|255-247-222-252
14584|code|B               loc_38EA|247-231
14586|data|ALIGN 4|0-191
14588|data|DCD off_17008 - 0x37A6; "PAST_EOF"|98-56-1-0
14592|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x37B6|182-54-1-0
14596|data|DCD o_direct_ptr - 0x16E6C|92-1-0-0
14600|data|DCD fsxlogf - 0x37D4|140-56-1-0
14604|data|DCD fsxlogf - 0x3808|88-56-1-0
14608|data|DCD aLuRead0xXThru0 - 0x3866; "%lu read\t0x%x thru\t0x%x\t(0x%x bytes)"...|74-31-0-0
14612|data|DCD temp_buf_ptr - 0x16E6C|36-1-0-0
14616|data|DCD image_ptr - 0x16E6C|104-1-0-0
14620|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
14624|data|DCD aSkippingZeroSi - 0x38A2; "skipping zero size read\n"|202-30-0-0
14628|data|DCD aSkippingSeekRe - 0x38AC; "skipping seek/read past end of file\n"|220-30-0-0
14632|data|DCD fsxlogf - 0x38BC|164-55-1-0
14636|data|DCD off_17008 - 0x38C6; "PAST_EOF"|66-55-1-0
14640|data|DCD aShortRead0xXBy - 0x38E8; "short read: 0x%x bytes instead of 0x%x"...|0-31-0-0
14644|data|DCD aDoreadRead - 0x38F6; "doread: read"|226-30-0-0
14648|code|PUSH.W          {R4-R11,LR}|45-233-240-79
14652|code|MOV             R11, R0|131-70
14654|code|LDR.W           LR, =(_GLOBAL_OFFSET_TABLE_ - 0x394C)|223-248-152-224
14658|code|ADDS            R4, R3, R1|92-24
14660|code|LDR             R7, =(page_mask_ptr - 0x16E6C)|37-79
14662|code|MOVS            R5, #0|0-37
14664|code|ADD             LR, PC; _GLOBAL_OFFSET_TABLE_|254-68
14666|code|LDR             R6, =(fsxlogf - 0x3956)|37-78
14668|code|SUB             SP, SP, #0xC|131-176
14670|code|LDR.W           R7, [LR,R7]; page_mask|94-248-7-112
14674|code|ADD             R6, PC; fsxlogf|126-68
14676|code|MOV             R0, R7|56-70
14678|code|LDRD.W          R6, R7, [R6,#0x18]|214-233-6-103
14682|code|LDR.W           R12, [R0]|208-248-0-192
14686|code|MVN.W           R10, R12|111-234-12-10
14690|code|AND.W           R8, R6, R10|6-234-10-8
14694|code|AND.W           R9, R7, R10,ASR#31|7-234-234-121
14698|code|CMP             R8, R4|160-69
14700|code|SBCS.W          R0, R9, R5|121-235-5-0
14704|code|BGE             loc_39AA|27-218
14706|code|LDR             R4, =(page_size_ptr - 0x16E6C)|28-76
14708|code|AND.W           R1, R1, R12|1-234-12-1
14712|code|ADD             R2, R1|10-68
14714|code|AND.W           R8, R12, R6|12-234-6-8
14718|code|ADD             R3, R2|19-68
14720|code|LDR.W           R4, [LR,R4]; page_size|94-248-4-64
14724|code|AND.W           R10, R3, R10|3-234-10-10
14728|code|ADD.W           R5, R10, R8|10-235-8-5
14732|code|LDR             R1, [R4]|33-104
14734|code|ADD             R1, R10|81-68
14736|code|CMP             R5, R1|141-66
14738|code|BCS             loc_39AA|10-210
14740|code|LDRB.W          R4, [R10,R8]|26-248-8-64
14744|code|ADDS            R3, R5, #1|107-28
14746|code|CBZ             R4, loc_39A4|28-177
14748|code|B               loc_39B0|8-224
14750|code|LDRB.W          R4, [R3],#1|19-248-1-75
14754|code|CBNZ            R4, loc_39B0|44-185
14756|code|CMP             R3, R1|139-66
14758|code|MOV             R5, R3|29-70
14760|code|BNE             loc_399E|249-209
14762|code|ADD             SP, SP, #0xC|3-176
14764|code|POP.W           {R4-R11,PC}|189-232-240-143
14768|code|AND.W           R3, R5, R12|5-234-12-3
14772|code|LDR             R0, =(aMappedSNonZero - 0x39C2); "Mapped %s: non-zero data past EOF (0x%l"...|12-72
14774|code|STR             R3, [SP,#0x30+var_30]|0-147
14776|code|ADDS.W          R2, R6, #0xFFFFFFFF|22-241-255-50
14780|code|LDRB            R5, [R5,#1]|109-120
14782|code|ADD             R0, PC; "Mapped %s: non-zero data past EOF (0x%l"...|120-68
14784|code|MOV             R1, R11|89-70
14786|code|ADC.W           R3, R7, #0xFFFFFFFF|71-241-255-51
14790|code|ORR.W           R4, R5, R4,LSL#8|69-234-4-36
14794|code|STR             R4, [SP,#0x30+var_2C]|1-148
14796|code|BL              prt|255-247-162-249
14800|code|MOVS            R0, #0xCD|205-32
14802|code|BL              report_failure|255-247-221-252
14806|data|ALIGN 4|0-191
14808|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x394C|32-53-1-0
14812|data|DCD page_mask_ptr - 0x16E6C|80-1-0-0
14816|data|DCD fsxlogf - 0x3956|10-55-1-0
14820|data|DCD page_size_ptr - 0x16E6C|76-1-0-0
14824|data|DCD aMappedSNonZero - 0x39C2; "Mapped %s: non-zero data past EOF (0x%l"...|78-30-0-0
14828|code|CBZ             R3, locret_3A16|155-177
14830|code|PUSH            {R4-R6}|112-180
14832|code|ADD             R1, R2|17-68
14834|code|LDR             R6, =(fsxlogf - 0x39FA)|9-78
14836|code|ADD             R3, R2|19-68
14838|code|ADD             R6, PC; fsxlogf|126-68
14840|code|LDR             R4, [R6,#(testcalls - 0x17060)]|116-104
14842|code|LSLS            R5, R2, #0x1F|213-7
14844|code|STRB.W          R4, [R1],#1|1-248-1-75
14848|code|IT MI|72-191
14850|code|LDRBMI          R5, [R0,R2]|133-92
14852|code|ADD.W           R2, R2, #1|2-241-1-2
14856|code|ITT MI|68-191
14858|code|ADDMI           R4, R4, R5|100-25
14860|code|STRBMI.W        R4, [R1,#-1]|1-248-1-76
14864|code|CMP             R2, R3|154-66
14866|code|BNE             loc_39F8|241-209
14868|code|POP             {R4-R6}|112-188
14870|code|BX              LR|112-71
14872|data|DCD fsxlogf - 0x39FA|102-54-1-0
14876|code|PUSH.W          {R4-R11,LR}|45-233-240-79
14880|code|MOV             R5, R1|13-70
14882|code|VPUSH           {D8}|45-237-2-139
14886|code|MOV             R4, R0|4-70
14888|code|LDR             R3, =(off_17008 - 0x3A32); "PAST_EOF"|137-75
14890|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x3A36)|223-248-40-130
14894|code|ADD             R3, PC; off_17008|123-68
14896|code|SUB             SP, SP, #0x14|133-176
14898|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
14900|code|LDR             R6, [R3,#(writebdy - 0x17008)]|30-106
14902|code|MOV             R1, R6|49-70
14904|code|BL              sub_4BDC|1-240-208-248
14908|code|LDR             R3, =(o_direct_ptr - 0x16E6C)|134-75
14910|code|LDR.W           R10, [R8,R3]; o_direct|88-248-3-160
14914|code|LDR.W           R3, [R10]|218-248-0-48
14918|code|SUBS            R4, R4, R1|100-26
14920|code|CBZ             R3, loc_3A6C|131-177
14922|code|MOV             R0, R5|40-70
14924|code|MOV             R1, R6|49-70
14926|code|BL              sub_4BDC|1-240-197-248
14930|code|SUBS            R5, R5, R1|109-26
14932|code|BNE             loc_3A8E|27-209
14934|code|MOV             R2, R4|34-70
14936|code|MOVS            R0, #0x65 ; 'e'|101-32
14938|code|MOVS            R1, #1|1-33
14940|code|MOVS            R3, #0|0-35
14942|code|ADD             SP, SP, #0x14|5-176
14944|code|VPOP            {D8}|189-236-2-139
14948|code|POP.W           {R4-R11,LR}|189-232-240-79
14952|code|B.W             log4|255-247-202-185
14956|code|CMP             R5, #0|0-45
14958|code|BNE.W           loc_3BFA|64-240-196-128
14962|code|LDR             R3, =(fsxlogf - 0x3A78)|122-75
14964|code|ADD             R3, PC; fsxlogf|123-68
14966|code|LDR             R2, [R3,#(quiet - 0x17060)]|26-106
14968|code|CMP             R2, #0|0-42
14970|code|BNE             loc_3A56|236-209
14972|code|LDR             R2, [R3,#(testcalls - 0x17060)]|90-104
14974|code|LDR             R3, [R3,#(simulatedopcount - 0x17060)]|91-106
14976|code|CMP             R2, R3|154-66
14978|code|BLS             loc_3A56|232-217
14980|code|LDR             R0, =(aSkippingZeroSi_0 - 0x3A8A); "skipping zero size write\n"|118-72
14982|code|ADD             R0, PC; "skipping zero size write\n"|120-68
14984|code|BL              prt|255-247-68-249
14988|code|B               loc_3A56|227-231
14990|code|LDR             R3, =(fsxlogf - 0x3A94)|117-75
14992|code|ADD             R3, PC; fsxlogf|123-68
14994|code|MOV             R1, R4|33-70
14996|code|MOV             R2, R5|42-70
14998|code|LDR             R3, [R3,#(file_size - 0x17060)]|155-105
15000|code|MOVS            R0, #1|1-32
15002|code|BL              log4|255-247-177-249
15006|code|LDR             R3, =(good_buf_ptr - 0x16E6C)|114-75
15008|code|LDR             R2, =(original_buf_ptr - 0x16E6C)|114-74
15010|code|SUBS            R1, R5, #1|105-30
15012|code|LDR             R7, =(fsxlogf - 0x3AB6)|114-79
15014|code|ADDS            R6, R4, #1|102-28
15016|code|LDR.W           R11, [R8,R3]; good_buf|88-248-3-176
15020|code|ADD             R6, R1|14-68
15022|code|LDR.W           R2, [R8,R2]; original_buf|88-248-2-32
15026|code|ADD             R7, PC; fsxlogf|127-68
15028|code|MOV             R3, R4|35-70
15030|code|LDR.W           LR, [R2]|210-248-0-224
15034|code|LDR.W           R2, [R11]|219-248-0-32
15038|code|ADD             R2, R4|34-68
15040|code|LDR             R1, [R7,#(testcalls - 0x17060)]|121-104
15042|code|LSLS            R0, R3, #0x1F|216-7
15044|code|STRB.W          R1, [R2],#1|2-248-1-27
15048|code|IT MI|72-191
15050|code|LDRBMI.W        R0, [LR,R3]; x|30-248-3-0
15054|code|ADD.W           R3, R3, #1|3-241-1-3
15058|code|ITT MI|68-191
15060|code|ADDMI           R1, R1, R0|9-24
15062|code|STRBMI.W        R1, [R2,#-1]|2-248-1-28
15066|code|CMP             R3, R6|179-66
15068|code|BNE             loc_3AC0|240-209
15070|code|LDR             R3, =(fsxlogf - 0x3AEA)|101-75
15072|code|ADD.W           R9, R5, R4|5-235-4-9
15076|code|MOVS            R1, #0; x|0-33
15078|code|ADD             R3, PC; fsxlogf|123-68
15080|code|LDRD.W          R6, R7, [R3,#0x18]|211-233-6-103
15084|code|CMP             R6, R9|78-69
15086|code|SBCS.W          R3, R7, R1|119-235-1-3
15090|code|BGE             loc_3B5E|52-218
15092|code|VMOV            S15, R5|7-238-144-90
15096|code|LDR             R3, =(off_17008 - 0x3B02); "PAST_EOF"|95-75
15098|code|VCVT.F64.U32    D0, S15|184-238-103-11
15102|code|ADD             R3, PC; off_17008|123-68
15104|code|VMOV            S15, R4|7-238-144-74
15108|code|VLDR            S16, [R3,#0x24]|147-237-9-138
15112|code|VCVT.F64.U32    D7, S15|184-238-103-123
15116|code|VADD.F64        D0, D7, D0|55-238-0-11
15120|code|VCVT.F64.S32    D8, S16|184-238-200-139
15124|code|VDIV.F64        D0, D0, D8|128-238-8-11
15128|code|BLX             ceil|254-247-234-233
15132|code|VMUL.F64        D7, D8, D0|40-238-0-123
15136|code|VMOV            R0, R1, D7|81-236-23-11
15140|code|BL              sub_4EEC|1-240-226-249
15144|code|CMP             R6, R0|134-66
15146|code|MOV             R3, R1|11-70
15148|code|MOV             R2, R0|2-70
15150|code|STRD.W          R2, R3, [SP,#0x40+var_38]|205-233-2-35
15154|code|SBCS.W          R3, R7, R3|119-235-3-3
15158|code|BLT             loc_3C00|99-219
15160|code|LDR             R3, =(fsxlogf - 0x3B42)|80-75
15162|code|LDRD.W          R0, R1, [SP,#0x40+var_38]|221-233-2-1
15166|code|ADD             R3, PC; fsxlogf|123-68
15168|code|LDR             R2, [R3,#(lite - 0x17060)]|26-107
15170|code|STRD.W          R0, R1, [R3,#0x18]|195-233-6-1
15174|code|CMP             R2, #0|0-42
15176|code|BNE             loc_3C38|118-209
15178|code|LDR             R1, =(image_ptr - 0x16E6C)|77-73
15180|code|LDRD.W          R2, R3, [SP,#0x40+var_38]|221-233-2-35
15184|code|LDR.W           R1, [R8,R1]; image|88-248-1-16
15188|code|LDR             R0, [R1]|8-104
15190|code|BLX             rbd_resize|254-247-52-234
15194|code|CMP             R0, #0|0-40
15196|code|BLT             loc_3C28|100-219
15198|code|LDR             R3, =(fsxlogf - 0x3B64)|73-75
15200|code|ADD             R3, PC; fsxlogf|123-68
15202|code|LDR             R6, [R3,#(testcalls - 0x17060)]|94-104
15204|code|LDR             R2, [R3,#(simulatedopcount - 0x17060)]|90-106
15206|code|CMP             R6, R2|150-66
15208|code|BLS             loc_3BCC|48-217
15210|code|LDR             R2, [R3,#(quiet - 0x17060)]|26-106
15212|code|CBNZ            R2, loc_3B8C|114-185
15214|code|LDR             R1, [R3,#(progressinterval - 0x17060)]|153-106
15216|code|CBZ             R1, loc_3BD6|137-179
15218|code|MOV             R0, R6|48-70
15220|code|BL              sub_4BDC|1-240-50-248
15224|code|CBNZ            R1, loc_3BD6|105-187
15226|code|LDR             R0, =(aLuWrite0xXThru - 0x3B88); "%lu write\t0x%x thru\t0x%x\t(0x%x bytes"...|67-72
15228|code|MOV             R1, R6|49-70
15230|code|STR             R5, [SP,#0x40+var_40]|0-149
15232|code|ADD.W           R3, R9, #0xFFFFFFFF|9-241-255-51
15236|code|ADD             R0, PC; "%lu write\t0x%x thru\t0x%x\t(0x%x bytes"...|120-68
15238|code|MOV             R2, R4|34-70
15240|code|BL              prt|255-247-196-248
15244|code|LDR             R1, =(image_ptr - 0x16E6C)|60-73
15246|code|MOV             R2, R4|34-70
15248|code|MOVS            R3, #0|0-35
15250|code|LDR.W           R6, [R8,R1]; image|88-248-1-96
15254|code|STR             R5, [SP,#0x40+var_40]|0-149
15256|code|LDR.W           R1, [R11]|219-248-0-16
15260|code|LDR             R0, [R6]|48-104
15262|code|ADD             R4, R1|12-68
15264|code|STR             R4, [SP,#0x40+var_3C]|1-148
15266|code|BLX             rbd_write|254-247-12-233
15270|code|CMP             R0, R5|168-66
15272|code|BNE             loc_3C12|51-209
15274|code|LDR             R3, =(fsxlogf - 0x3BB0)|56-75
15276|code|ADD             R3, PC; fsxlogf|123-68
15278|code|LDR             R3, [R3,#(flush - 0x17060)]|91-107
15280|code|CBZ             R3, loc_3BCC|99-177
15282|code|LDR.W           R3, [R10]|218-248-0-48
15286|code|CMP.W           R3, #0x10000|179-245-128-63
15290|code|BEQ             loc_3BCC|7-208
15292|code|LDR             R0, [R6]|48-104
15294|code|ADD             SP, SP, #0x14|5-176
15296|code|VPOP            {D8}|189-236-2-139
15300|code|POP.W           {R4-R11,LR}|189-232-240-79
15304|code|B.W             j_rbd_flush|254-247-164-185
15308|code|ADD             SP, SP, #0x14|5-176
15310|code|VPOP            {D8}|189-236-2-139
15314|code|POP.W           {R4-R11,PC}|189-232-240-143
15318|code|LDR             R3, =(fsxlogf - 0x3BDC)|46-75
15320|code|ADD             R3, PC; fsxlogf|123-68
15322|code|LDR             R3, [R3,#(debug - 0x17060)]|219-106
15324|code|CMP             R3, #0|0-43
15326|code|BEQ             loc_3B8C|213-208
15328|code|LDR             R2, =(off_17008 - 0x3BE6); "PAST_EOF"|44-74
15330|code|ADD             R2, PC; off_17008|122-68
15332|code|LDR             R3, [R2,#(monitorstart - 0x17008)]|147-105
15334|code|ADDS            R1, R3, #1|89-28
15336|code|BEQ             loc_3B7A|199-208
15338|code|CMP             R9, R3|153-69
15340|code|BLS             loc_3B8C|206-217
15342|code|LDR             R3, [R2,#(monitorend - 0x17008)]|211-105
15344|code|ADDS            R2, R3, #1|90-28
15346|code|BEQ             loc_3B7A|194-208
15348|code|CMP             R4, R3|156-66
15350|code|BHI             loc_3B8C|201-216
15352|code|B               loc_3B7A|191-231
15354|code|LDR             R3, =(fsxlogf - 0x3C00)|39-75
15356|code|ADD             R3, PC; fsxlogf|123-68
15358|code|B               loc_3A92|72-231
15360|code|LDR.W           R0, [R11]|219-248-0-0
15364|code|MOVS            R1, #0; c|0-33
15366|code|LDR             R3, [SP,#0x40+var_38]|2-155
15368|code|ADD             R0, R6; s|48-68
15370|code|SUBS            R2, R3, R6; n|154-27
15372|code|BLX             memset|254-247-40-233
15376|code|B               loc_3B38|146-231
15378|code|CMP             R0, #0|0-40
15380|code|MOV             R1, R0|1-70
15382|code|BLT             loc_3C46|22-219
15384|code|LDR             R0, =(aShortWrite0xXB - 0x3C20); "short write: 0x%x bytes instead of 0x%x"...|32-72
15386|code|MOV             R2, R5|42-70
15388|code|ADD             R0, PC; "short write: 0x%x bytes instead of 0x%x"...|120-68
15390|code|BL              prt|255-247-121-248
15394|code|MOVS            R0, #0x97|151-32
15396|code|BL              report_failure|255-247-180-251
15400|code|MOV             R1, R0|1-70
15402|code|LDR             R0, =(aDowriteResize - 0x3C30); "dowrite: resize"|29-72
15404|code|ADD             R0, PC; "dowrite: resize"|120-68
15406|code|BL              prterrcode|255-247-65-251
15410|code|MOVS            R0, #0x96|150-32
15412|code|BL              report_failure|255-247-172-251
15416|code|LDR             R0, =(aLiteFileSizeBu - 0x3C3E); "Lite file size bug in fsx!"|26-72
15418|code|ADD             R0, PC; "Lite file size bug in fsx!"|120-68
15420|code|BL              warn|255-247-70-248
15424|code|MOVS            R0, #0x95|149-32
15426|code|BL              report_failure|255-247-165-251
15430|code|LDR             R0, =(aDowriteRbdWrit - 0x3C4C); "dowrite: rbd_write"|24-72
15432|code|ADD             R0, PC; "dowrite: rbd_write"|120-68
15434|code|BL              prterrcode|255-247-51-251
15438|code|B               loc_3C22|232-231
15440|data|DCD off_17008 - 0x3A32; "PAST_EOF"|214-53-1-0
15444|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3A36|54-52-1-0
15448|data|DCD o_direct_ptr - 0x16E6C|92-1-0-0
15452|data|DCD fsxlogf - 0x3A78|232-53-1-0
15456|data|DCD aSkippingZeroSi_0 - 0x3A8A; "skipping zero size write\n"|206-29-0-0
15460|data|DCD fsxlogf - 0x3A94|204-53-1-0
15464|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
15468|data|DCD original_buf_ptr - 0x16E6C|56-1-0-0
15472|data|DCD fsxlogf - 0x3AB6|170-53-1-0
15476|data|DCD fsxlogf - 0x3AEA|118-53-1-0
15480|data|DCD off_17008 - 0x3B02; "PAST_EOF"|6-53-1-0
15484|data|DCD fsxlogf - 0x3B42|30-53-1-0
15488|data|DCD image_ptr - 0x16E6C|104-1-0-0
15492|data|DCD fsxlogf - 0x3B64|252-52-1-0
15496|data|DCD aLuWrite0xXThru - 0x3B88; "%lu write\t0x%x thru\t0x%x\t(0x%x bytes"...|24-29-0-0
15500|data|DCD fsxlogf - 0x3BB0|176-52-1-0
15504|data|DCD fsxlogf - 0x3BDC|132-52-1-0
15508|data|DCD off_17008 - 0x3BE6; "PAST_EOF"|34-52-1-0
15512|data|DCD fsxlogf - 0x3C00|96-52-1-0
15516|data|DCD aShortWrite0xXB - 0x3C20; "short write: 0x%x bytes instead of 0x%x"...|188-28-0-0
15520|data|DCD aDowriteResize - 0x3C30; "dowrite: resize"|96-28-0-0
15524|data|DCD aLiteFileSizeBu - 0x3C3E; "Lite file size bug in fsx!"|54-28-0-0
15528|data|DCD aDowriteRbdWrit - 0x3C4C; "dowrite: rbd_write"|124-28-0-0
15532|code|PUSH.W          {R3-R9,LR}|45-233-248-67
15536|code|MOV             R4, R0|4-70
15538|code|LDR             R3, =(off_17008 - 0x3CBC); "PAST_EOF"|68-75
15540|code|MOVS            R7, #0|0-39
15542|code|LDR             R5, =(fsxlogf - 0x3CC2)|68-77
15544|code|ADD             R3, PC; off_17008|123-68
15546|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x3CC6)|223-248-16-129
15550|code|ADD             R5, PC; fsxlogf|125-68
15552|code|LDR             R1, [R3,#(truncbdy - 0x17008)]|89-106
15554|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
15556|code|BL              sub_4BDC|0-240-138-255
15560|code|LDRD.W          R2, R3, [R5,#0x38]|213-233-14-35
15564|code|LDR.W           R9, [R5,#(file_size - 0x17060)]|213-248-24-144
15568|code|SUBS            R4, R4, R1|100-26
15570|code|CMP             R2, R4|162-66
15572|code|SBCS            R3, R7|187-65
15574|code|MOV             R6, R4|38-70
15576|code|BGE             loc_3CE4|4-218
15578|code|LDR             R3, [R5,#(quiet - 0x17060)]|43-106
15580|code|STRD.W          R6, R7, [R5,#0x38]|197-233-14-103
15584|code|CMP             R3, #0|0-43
15586|code|BEQ             loc_3D6A|66-208
15588|code|MOV             R2, R9|74-70
15590|code|MOVS            R0, #4|4-32
15592|code|MOV             R1, R4|33-70
15594|code|MOVS            R3, #0|0-35
15596|code|BL              log4|255-247-136-248
15600|code|LDR             R3, =(fsxlogf - 0x3CF6)|55-75
15602|code|ADD             R3, PC; fsxlogf|123-68
15604|code|LDRD.W          R0, R1, [R3,#0x18]|211-233-6-1
15608|code|CMP             R0, R6|176-66
15610|code|SBCS.W          R3, R1, R7|113-235-7-3
15614|code|BLT             loc_3D80|63-219
15616|code|CMP             R6, R0|134-66
15618|code|SBCS.W          R3, R7, R1|119-235-1-3
15622|code|BLT             loc_3D94|69-219
15624|code|LDR             R3, =(fsxlogf - 0x3D0E)|50-75
15626|code|ADD             R3, PC; fsxlogf|123-68
15628|code|LDR             R5, [R3,#(testcalls - 0x17060)]|93-104
15630|code|LDR             R2, [R3,#(simulatedopcount - 0x17060)]|90-106
15632|code|STRD.W          R6, R7, [R3,#0x18]|195-233-6-103
15636|code|CMP             R5, R2|149-66
15638|code|BLS             locret_3D5A|32-217
15640|code|LDR             R1, [R3,#(progressinterval - 0x17060)]|153-106
15642|code|CBNZ            R1, loc_3D5E|1-187
15644|code|LDR             R3, =(fsxlogf - 0x3D22)|46-75
15646|code|ADD             R3, PC; fsxlogf|123-68
15648|code|LDR             R3, [R3,#(debug - 0x17060)]|219-106
15650|code|CBZ             R3, loc_3D46|131-177
15652|code|LDR             R3, =(off_17008 - 0x3D2A); "PAST_EOF"|45-75
15654|code|ADD             R3, PC; off_17008|123-68
15656|code|LDR             R2, [R3,#(monitorstart - 0x17008)]|154-105
15658|code|ADDS            R2, #1|1-50
15660|code|BEQ             loc_3D38|4-208
15662|code|LDR             R3, [R3,#(monitorend - 0x17008)]|219-105
15664|code|ADDS            R2, R3, #1|90-28
15666|code|BEQ             loc_3D38|1-208
15668|code|CMP             R4, R3|156-66
15670|code|BHI             loc_3D46|6-216
15672|code|LDR             R0, =(aLuTruncFrom0xX - 0x3D44); "%lu trunc\tfrom 0x%x to 0x%x\n"|41-72
15674|code|MOV             R1, R5|41-70
15676|code|MOV             R2, R9|74-70
15678|code|MOV             R3, R4|35-70
15680|code|ADD             R0, PC; "%lu trunc\tfrom 0x%x to 0x%x\n"|120-68
15682|code|BL              prt|254-247-231-255
15686|code|LDR             R1, =(image_ptr - 0x16E6C)|39-73
15688|code|MOV             R2, R4|34-70
15690|code|MOVS            R3, #0|0-35
15692|code|LDR.W           R1, [R8,R1]; image|88-248-1-16
15696|code|LDR             R0, [R1]|8-104
15698|code|BLX             rbd_resize|254-247-54-233
15702|code|SUBS            R5, R0, #0|5-30
15704|code|BLT             loc_3DA8|38-219
15706|code|POP.W           {R3-R9,PC}|189-232-248-131
15710|code|MOV             R0, R5|40-70
15712|code|BL              sub_4BDC|0-240-60-255
15716|code|CMP             R1, #0|0-41
15718|code|BEQ             loc_3D38|231-208
15720|code|B               loc_3D1C|216-231
15722|code|LDR             R2, [R5,#(testcalls - 0x17060)]|106-104
15724|code|LDR             R3, [R5,#(simulatedopcount - 0x17060)]|107-106
15726|code|CMP             R2, R3|154-66
15728|code|BLS             loc_3CE4|184-217
15730|code|LDR             R0, =(aTruncatingToLa - 0x3D7A); "truncating to largest ever: 0x%x\n"|29-72
15732|code|MOV             R1, R4|33-70
15734|code|ADD             R0, PC; "truncating to largest ever: 0x%x\n"|120-68
15736|code|BL              prt|254-247-204-255
15740|code|LDR             R2, [R5,#(file_size - 0x17060)]|170-105
15742|code|B               loc_3CE6|178-231
15744|code|LDR             R3, =(good_buf_ptr - 0x16E6C)|26-75
15746|code|SUBS            R2, R4, R0; n|34-26
15748|code|MOVS            R1, #0; c|0-33
15750|code|LDR.W           R3, [R8,R3]; good_buf|88-248-3-48
15754|code|LDR             R3, [R3]|27-104
15756|code|ADD             R0, R3; s|24-68
15758|code|BLX             memset|254-247-104-232
15762|code|B               loc_3D08|185-231
15764|code|LDR             R3, =(good_buf_ptr - 0x16E6C)|21-75
15766|code|SUBS            R2, R0, R4; n|2-27
15768|code|MOVS            R1, #0; c|0-33
15770|code|LDR.W           R3, [R8,R3]; good_buf|88-248-3-48
15774|code|LDR             R0, [R3]|24-104
15776|code|ADD             R0, R4; s|32-68
15778|code|BLX             memset|254-247-94-232
15782|code|B               loc_3D08|175-231
15784|code|LDR             R0, =(aRbdResizeX - 0x3DB0); "rbd_resize: %x\n"|17-72
15786|code|MOV             R1, R4|33-70
15788|code|ADD             R0, PC; "rbd_resize: %x\n"|120-68
15790|code|BL              prt|254-247-177-255
15794|code|LDR             R0, =(aDotruncateFtru - 0x3DBA); "dotruncate: ftruncate"|16-72
15796|code|MOV             R1, R5|41-70
15798|code|ADD             R0, PC; "dotruncate: ftruncate"|120-68
15800|code|BL              prterrcode|255-247-124-250
15804|code|MOVS            R0, #0xA0|160-32
15806|code|BL              report_failure|255-247-231-250
15810|data|ALIGN 4|0-191
15812|data|DCD off_17008 - 0x3CBC; "PAST_EOF"|76-51-1-0
15816|data|DCD fsxlogf - 0x3CC2|158-51-1-0
15820|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3CC6|166-49-1-0
15824|data|DCD fsxlogf - 0x3CF6|106-51-1-0
15828|data|DCD fsxlogf - 0x3D0E|82-51-1-0
15832|data|DCD fsxlogf - 0x3D22|62-51-1-0
15836|data|DCD off_17008 - 0x3D2A; "PAST_EOF"|222-50-1-0
15840|data|DCD aLuTruncFrom0xX - 0x3D44; "%lu trunc\tfrom 0x%x to 0x%x\n"|232-27-0-0
15844|data|DCD image_ptr - 0x16E6C|104-1-0-0
15848|data|DCD aTruncatingToLa - 0x3D7A; "truncating to largest ever: 0x%x\n"|142-27-0-0
15852|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
15856|data|DCD aRbdResizeX - 0x3DB0; "rbd_resize: %x\n"|156-27-0-0
15860|data|DCD aDotruncateFtru - 0x3DBA; "dotruncate: ftruncate"|162-27-0-0
15864|code|PUSH.W          {R4-R11,LR}|45-233-240-79
15868|code|MOV             R5, R0|5-70
15870|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x3E08)|84-78
15872|code|SUB             SP, SP, #0xC|131-176
15874|code|MOV             R4, R1|12-70
15876|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
15878|code|CBNZ            R1, loc_3E2A|129-185
15880|code|LDR             R3, =(fsxlogf - 0x3E0E)|82-75
15882|code|ADD             R3, PC; fsxlogf|123-68
15884|code|LDR             R2, [R3,#(quiet - 0x17060)]|26-106
15886|code|CBNZ            R2, loc_3E18|26-185
15888|code|LDR             R2, [R3,#(testcalls - 0x17060)]|90-104
15890|code|LDR             R3, [R3,#(simulatedopcount - 0x17060)]|91-106
15892|code|CMP             R2, R3|154-66
15894|code|BHI             loc_3EFA|112-216
15896|code|MOV             R2, R5|42-70
15898|code|MOVS            R0, #0x65 ; 'e'|101-32
15900|code|MOVS            R1, #6|6-33
15902|code|MOVS            R3, #0|0-35
15904|code|ADD             SP, SP, #0xC|3-176
15906|code|POP.W           {R4-R11,LR}|189-232-240-79
15910|code|B.W             log4|254-247-235-191
15914|code|LDR.W           R10, =(fsxlogf - 0x3E38)|223-248-44-161
15918|code|MOV.W           R9, #0|79-240-0-9
15922|code|MOV             R8, R0|128-70
15924|code|ADD             R10, PC; fsxlogf|250-68
15926|code|LDRD.W          R2, R3, [R10,#0x18]|218-233-6-35
15930|code|CMP             R0, R2|144-66
15932|code|SBCS.W          R3, R9, R3|121-235-3-3
15936|code|BLT             loc_3E66|17-219
15938|code|LDR.W           R3, [R10,#(quiet - 0x17060)]|218-248-32-48
15942|code|CBNZ            R3, loc_3E54|43-185
15944|code|LDR.W           R2, [R10,#(testcalls - 0x17060)]|218-248-4-32
15948|code|LDR.W           R3, [R10,#(simulatedopcount - 0x17060)]|218-248-36-48
15952|code|CMP             R2, R3|154-66
15954|code|BHI             loc_3F04|87-216
15956|code|MOV             R2, R5|42-70
15958|code|MOV             R3, R4|35-70
15960|code|MOVS            R0, #0x65 ; 'e'|101-32
15962|code|MOVS            R1, #6|6-33
15964|code|ADD             SP, SP, #0xC|3-176
15966|code|POP.W           {R4-R11,LR}|189-232-240-79
15970|code|B.W             log4|254-247-205-191
15974|code|MOVS            R3, #0|0-35
15976|code|MOVS            R0, #6|6-32
15978|code|MOV             R1, R5|41-70
15980|code|MOV             R2, R4|34-70
15982|code|BL              log4|254-247-199-255
15986|code|LDR.W           R11, [R10,#(testcalls - 0x17060)]|218-248-4-176
15990|code|LDR.W           R3, [R10,#(simulatedopcount - 0x17060)]|218-248-36-48
15994|code|MOV             R7, R4|39-70
15996|code|CMP             R11, R3|155-69
15998|code|BLS             loc_3F2E|86-217
16000|code|LDR.W           R1, [R10,#(progressinterval - 0x17060)]|218-248-40-16
16004|code|ADD.W           R10, R4, R5|4-235-5-10
16008|code|CMP             R1, #0|0-41
16010|code|BEQ             loc_3F0E|64-208
16012|code|MOV             R0, R11|88-70
16014|code|BL              sub_4BDC|0-240-165-254
16018|code|CMP             R1, #0|0-41
16020|code|BNE             loc_3F0E|59-209
16022|code|LDR             R0, =(aLuPunchFrom0xX - 0x3EA2); "%lu punch\tfrom 0x%x to 0x%x, (0x%x byt"...|49-72
16024|code|MOV             R1, R11|89-70
16026|code|STR             R4, [SP,#0x30+var_30]|0-148
16028|code|MOV             R3, R10|83-70
16030|code|ADD             R0, PC; "%lu punch\tfrom 0x%x to 0x%x, (0x%x byt"...|120-68
16032|code|MOV             R2, R5|42-70
16034|code|BL              prt|254-247-55-255
16038|code|LDR             R1, =(image_ptr - 0x16E6C)|46-73
16040|code|MOVS            R0, #0|0-32
16042|code|MOV             R3, R0|3-70
16044|code|MOV             R2, R5|42-70
16046|code|LDR             R1, [R6,R1]; image|113-88
16048|code|STR             R4, [SP,#0x30+var_30]|0-148
16050|code|STR             R0, [SP,#0x30+var_2C]|1-144
16052|code|LDR             R0, [R1]|8-104
16054|code|BLX             rbd_discard|254-247-16-232
16058|code|SUBS.W          R10, R0, #0|176-241-0-10
16062|code|BLT             loc_3F34|57-219
16064|code|LDR             R3, =(fsxlogf - 0x3EC8)|40-75
16066|code|MOVS            R5, #0|0-37
16068|code|ADD             R3, PC; fsxlogf|123-68
16070|code|LDRD.W          R2, R3, [R3,#0x18]|211-233-6-35
16074|code|CMP             R2, R8|66-69
16076|code|SBCS.W          R1, R3, R9|115-235-9-1
16080|code|IT LT|184-191
16082|code|MOVLT           R8, R2|144-70
16084|code|ADD             R4, R8|68-68
16086|code|CMP             R2, R4|162-66
16088|code|MOV             R0, R8|64-70
16090|code|SBCS.W          R1, R3, R5|115-235-5-1
16094|code|LDR             R3, =(good_buf_ptr - 0x16E6C)|34-75
16096|code|IT LT|184-191
16098|code|RSBLT.W         R7, R8, R2|200-235-2-7
16102|code|MOVS            R1, #0; c|0-33
16104|code|LDR             R3, [R6,R3]; good_buf|243-88
16106|code|MOV             R2, R7; n|58-70
16108|code|LDR             R3, [R3]|27-104
16110|code|ADD             R0, R3; s|24-68
16112|code|ADD             SP, SP, #0xC|3-176
16114|code|POP.W           {R4-R11,LR}|189-232-240-79
16118|code|B.W             sub_1E5C|253-247-177-191
16122|code|LDR             R0, =(aSkippingZeroLe - 0x3F00); "skipping zero length punch hole\n"|28-72
16124|code|ADD             R0, PC; "skipping zero length punch hole\n"|120-68
16126|code|BL              prt|254-247-9-255
16130|code|B               loc_3E18|137-231
16132|code|LDR             R0, =(aSkippingHolePu - 0x3F0A); "skipping hole punch off the end of the "...|26-72
16134|code|ADD             R0, PC; "skipping hole punch off the end of the "...|120-68
16136|code|BL              prt|254-247-4-255
16140|code|B               loc_3E54|162-231
16142|code|LDR             R3, =(fsxlogf - 0x3F14)|25-75
16144|code|ADD             R3, PC; fsxlogf|123-68
16146|code|LDR             R3, [R3,#(debug - 0x17060)]|219-106
16148|code|CMP             R3, #0|0-43
16150|code|BEQ             loc_3EA6|198-208
16152|code|LDR             R3, =(off_17008 - 0x3F1E); "PAST_EOF"|23-75
16154|code|ADD             R3, PC; off_17008|123-68
16156|code|LDR             R2, [R3,#(monitorstart - 0x17008)]|154-105
16158|code|ADDS            R2, #1|1-50
16160|code|BEQ             loc_3E96|185-208
16162|code|LDR             R3, [R3,#(monitorend - 0x17008)]|219-105
16164|code|ADDS            R2, R3, #1|90-28
16166|code|BEQ             loc_3E96|182-208
16168|code|CMP             R10, R3|154-69
16170|code|BHI             loc_3EA6|188-216
16172|code|B               loc_3E96|179-231
16174|code|ADD             SP, SP, #0xC|3-176
16176|code|POP.W           {R4-R11,PC}|189-232-240-143
16180|code|LDR             R0, =(aPunchHoleXToX - 0x3F3E); "%punch hole: %x to %x\n"|17-72
16182|code|MOV             R1, R5|41-70
16184|code|MOV             R2, R4|34-70
16186|code|ADD             R0, PC; "%punch hole: %x to %x\n"|120-68
16188|code|BL              prt|254-247-234-254
16192|code|LDR             R0, =(aDoPunchHoleDis - 0x3F48); "do_punch_hole: discard"|15-72
16194|code|MOV             R1, R10|81-70
16196|code|ADD             R0, PC; "do_punch_hole: discard"|120-68
16198|code|BL              prterrcode|255-247-181-249
16202|code|MOVS            R0, #0xA1|161-32
16204|code|BL              report_failure|255-247-32-250
16208|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3E08|100-48-1-0
16212|data|DCD fsxlogf - 0x3E0E|82-50-1-0
16216|data|DCD fsxlogf - 0x3E38|40-50-1-0
16220|data|DCD aLuPunchFrom0xX - 0x3EA2; "%lu punch\tfrom 0x%x to 0x%x, (0x%x byt"...|38-27-0-0
16224|data|DCD image_ptr - 0x16E6C|104-1-0-0
16228|data|DCD fsxlogf - 0x3EC8|152-49-1-0
16232|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
16236|data|DCD aSkippingZeroLe - 0x3F00; "skipping zero length punch hole\n"|116-26-0-0
16240|data|DCD aSkippingHolePu - 0x3F0A; "skipping hole punch off the end of the "...|142-26-0-0
16244|data|DCD fsxlogf - 0x3F14|76-49-1-0
16248|data|DCD off_17008 - 0x3F1E; "PAST_EOF"|234-48-1-0
16252|data|DCD aPunchHoleXToX - 0x3F3E; "%punch hole: %x to %x\n"|182-26-0-0
16256|data|DCD aDoPunchHoleDis - 0x3F48; "do_punch_hole: discard"|196-26-0-0
16260|code|PUSH            {R4-R6,LR}|112-181
16262|code|SUB             SP, SP, #0x10|132-176
16264|code|LDR             R5, =(_GLOBAL_OFFSET_TABLE_ - 0x3F94)|9-77
16266|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
16270|code|LDR             R6, =(dirpath_ptr - 0x16E6C)|9-78
16272|code|ADD             R5, PC; _GLOBAL_OFFSET_TABLE_|125-68
16274|code|LDR             R4, =(aSFsxSParentD - 0x3F98); "%s/fsx-%s-parent%d"|9-76
16276|code|ADD             R4, PC; "%s/fsx-%s-parent%d"|124-68
16278|code|STR             R4, [SP,#0x20+var_20]|0-148
16280|code|LDR             R4, =(iname_ptr - 0x16E6C)|8-76
16282|code|LDR             R6, [R5,R6]; dirpath|174-89
16284|code|STR             R6, [SP,#0x20+var_1C]|1-150
16286|code|LDR             R4, [R5,R4]; iname|44-89
16288|code|STR             R2, [SP,#0x20+var_14]|3-146
16290|code|MOVS            R2, #1|1-34
16292|code|LDR             R4, [R4]|36-104
16294|code|STR             R4, [SP,#0x20+var_18]|2-148
16296|code|BLX             __snprintf_chk|254-247-34-232
16300|code|ADD             SP, SP, #0x10|4-176
16302|code|POP             {R4-R6,PC}|112-189
16304|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3F94|216-46-1-0
16308|data|DCD dirpath_ptr - 0x16E6C|40-1-0-0
16312|data|DCD aSFsxSParentD - 0x3F98; "%s/fsx-%s-parent%d"|140-26-0-0
16316|data|DCD iname_ptr - 0x16E6C|144-1-0-0
16320|code|PUSH            {R4-R7,LR}|240-181
16322|code|CMP             R2, #0|0-42
16324|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x3FCC)|14-76
16326|code|SUB             SP, SP, #0x14|133-176
16328|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
16330|code|BLE             loc_3FEC|15-221
16332|code|LDR             R6, =(iname_ptr - 0x16E6C)|13-78
16334|code|MOV             R5, R2|21-70
16336|code|LDR             R7, =(aSCloneD - 0x3FDC); "%s-clone%d"|13-79
16338|code|MOVS            R2, #1|1-34
16340|code|MOV.W           R3, #0xFFFFFFFF|79-240-255-51
16344|code|ADD             R7, PC; "%s-clone%d"|127-68
16346|code|STR             R7, [SP,#0x28+var_28]|0-151
16348|code|LDR             R4, [R4,R6]; iname|164-89
16350|code|STR             R5, [SP,#0x28+var_20]|2-149
16352|code|LDR             R4, [R4]|36-104
16354|code|STR             R4, [SP,#0x28+var_24]|1-148
16356|code|BLX             __snprintf_chk|254-247-4-232
16360|code|ADD             SP, SP, #0x14|5-176
16362|code|POP             {R4-R7,PC}|240-189
16364|code|LDR             R3, =(iname_ptr - 0x16E6C)|5-75
16366|code|MOV             R2, R1; n|10-70
16368|code|LDR             R3, [R4,R3]; iname|227-88
16370|code|LDR             R1, [R3]; src|25-104
16372|code|ADD             SP, SP, #0x14|5-176
16374|code|POP.W           {R4-R7,LR}|189-232-240-64
16378|code|B.W             j_strncpy|254-247-41-184
16382|data|ALIGN 0x10|0-191
16384|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x3FCC|160-46-1-0
16388|data|DCD iname_ptr - 0x16E6C|144-1-0-0
16392|data|DCD aSCloneD - 0x3FDC; "%s-clone%d"|92-26-0-0
16396|code|PUSH.W          {R4-R11,LR}|45-233-240-79
16400|code|SUB             SP, SP, #0x18C|227-176
16402|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x4020)|87-76
16404|code|ADD.W           R8, SP, #0x1B0+var_AC|13-245-130-120
16408|code|LDR             R3, =(__stack_chk_guard_ptr - 0x16E6C)|86-75
16410|code|MOV             R2, R0|2-70
16412|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
16414|code|LDR             R5, =(ioctx_ptr - 0x16E6C)|86-77
16416|code|MOVS            R1, #0x80|128-33
16418|code|MOV             R9, R0|129-70
16420|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
16422|code|MOV             R0, R8|64-70
16424|code|ADD             R6, SP, #0x1B0+var_19C|5-174
16426|code|STR             R3, [SP,#0x1B0+var_1A4]|3-147
16428|code|LDR             R3, [R3]|27-104
16430|code|STR             R3, [SP,#0x1B0+var_2C]|97-147
16432|code|BL              clone_imagename|255-247-198-255
16436|code|LDR             R0, [R4,R5]; ioctx|96-89
16438|code|MOV             R1, R8|65-70
16440|code|MOV             R2, R6|50-70
16442|code|MOVS            R3, #0|0-35
16444|code|LDR             R0, [R0]|0-104
16446|code|BLX             rbd_open|253-247-208-238
16450|code|CMP             R0, #0|0-40
16452|code|BLT             loc_40FA|89-219
16454|code|ADD             R5, SP, #0x1B0+var_12C|33-173
16456|code|MOVS            R1, #0x80|128-33
16458|code|ADD.W           R2, R9, #1|9-241-1-2
16462|code|MOV             R0, R5|40-70
16464|code|BL              clone_filename|255-247-152-255
16468|code|MOV             R0, R5|40-70
16470|code|MOVS            R1, #0|0-33
16472|code|BLX             open64|253-247-56-239
16476|code|SUBS            R7, R0, #0|7-30
16478|code|BLT             loc_415A|124-219
16480|code|LDR             R0, =(aCheckingCloneD - 0x406C); "checking clone #%d, image %s against fi"...|70-72
16482|code|ADD             R4, SP, #0x1B0+var_198|6-172
16484|code|MOV             R1, R9|73-70
16486|code|MOV             R2, R8|66-70
16488|code|ADD             R0, PC; "checking clone #%d, image %s against fi"...|120-68
16490|code|MOV             R3, R5|43-70
16492|code|BL              prt|254-247-82-254
16496|code|MOV             R2, R4|34-70
16498|code|MOVS            R0, #3|3-32
16500|code|MOV             R1, R7|57-70
16502|code|BLX             __fxstat64|253-247-250-238
16506|code|CMP             R0, #0|0-40
16508|code|BLT             loc_4144|98-219
16510|code|LDR             R0, [R4,#0x30]; size|32-107
16512|code|MOV.W           R8, #0|79-240-0-8
16516|code|BLX             malloc|253-247-162-239
16520|code|MOV.W           R9, #0|79-240-0-9
16524|code|MOV             R11, R0|131-70
16526|code|LDR             R0, [R4,#0x30]; size|32-107
16528|code|BLX             malloc|253-247-156-239
16532|code|LDR             R2, [R4,#0x30]|34-107
16534|code|MOV             R1, R11|89-70
16536|code|STRD.W          R8, R9, [SP,#0x1B0+var_1B0]|205-233-0-137
16540|code|MOV             R10, R0|130-70
16542|code|MOV             R0, R7|56-70
16544|code|BLX             pread64|253-247-182-238
16548|code|CMP             R0, #0|0-40
16550|code|BLT             loc_412E|66-219
16552|code|LDR             R1, [R4,#0x30]|33-107
16554|code|MOV             R2, R8|66-70
16556|code|LDR             R0, [R6]|48-104
16558|code|MOV             R3, R9|75-70
16560|code|STMEA.W         SP, {R1,R10}|141-232-2-4
16564|code|BLX             rbd_read|253-247-118-238
16568|code|CMP             R0, #0|0-40
16570|code|BLT             loc_411E|48-219
16572|code|MOV             R0, R7; fd|56-70
16574|code|BLX             close|253-247-226-238
16578|code|LDR             R0, [R6]|48-104
16580|code|BLX             rbd_close|253-247-216-238
16584|code|CMP             R0, #0|0-40
16586|code|BLT             loc_410E|32-219
16588|code|LDR             R3, [R4,#0x30]|35-107
16590|code|MOVS            R2, #0|0-34
16592|code|MOV             R1, R10|81-70
16594|code|MOV             R0, R11|88-70
16596|code|BL              check_buffers|255-247-152-249
16600|code|MOV             R0, R5; name|40-70
16602|code|BLX             unlink|253-247-236-238
16606|code|MOV             R0, R11; ptr|88-70
16608|code|BLX             free|253-247-120-238
16612|code|MOV             R0, R10; ptr|80-70
16614|code|BLX             free|253-247-118-238
16618|code|LDR             R3, [SP,#0x1B0+var_1A4]|3-155
16620|code|LDR             R2, [SP,#0x1B0+var_2C]|97-154
16622|code|LDR             R3, [R3]|27-104
16624|code|CMP             R2, R3|154-66
16626|code|BNE             loc_410A|10-209
16628|code|ADD             SP, SP, #0x18C|99-176
16630|code|POP.W           {R4-R11,PC}|189-232-240-143
16634|code|MOV             R1, R0|1-70
16636|code|LDR             R0, =(aCheckCloneRbdO - 0x4102); "check_clone: rbd open"|32-72
16638|code|ADD             R0, PC; "check_clone: rbd open"|120-68
16640|code|BL              simple_err|254-247-174-254
16644|code|MOVS            R0, #0xA7; status|167-32
16646|code|BLX             exit|253-247-126-238
16650|code|BLX             __stack_chk_fail|253-247-18-239
16654|code|MOV             R1, R0|1-70
16656|code|LDR             R0, =(aCheckCloneRbdC - 0x4116); "check_clone: rbd close"|28-72
16658|code|ADD             R0, PC; "check_clone: rbd close"|120-68
16660|code|BL              simple_err|254-247-164-254
16664|code|MOVS            R0, #0xAE; status|174-32
16666|code|BLX             exit|253-247-116-238
16670|code|MOV             R1, R0|1-70
16672|code|LDR             R0, =(aCheckCloneRbdR - 0x4126); "check_clone: rbd_read"|25-72
16674|code|ADD             R0, PC; "check_clone: rbd_read"|120-68
16676|code|BL              simple_err|254-247-156-254
16680|code|MOVS            R0, #0xAB; status|171-32
16682|code|BLX             exit|253-247-108-238
16686|code|BLX             __errno_location|253-247-138-239
16690|code|LDR             R1, [R0]|1-104
16692|code|LDR             R0, =(aCheckClonePrea - 0x413C); "check_clone: pread"|21-72
16694|code|NEGS            R1, R1|73-66
16696|code|ADD             R0, PC; "check_clone: pread"|120-68
16698|code|BL              simple_err|254-247-145-254
16702|code|MOVS            R0, #0xAA; status|170-32
16704|code|BLX             exit|253-247-96-238
16708|code|BLX             __errno_location|253-247-126-239
16712|code|LDR             R1, [R0]|1-104
16714|code|LDR             R0, =(aCheckCloneFsta - 0x4152); "check_clone: fstat"|17-72
16716|code|NEGS            R1, R1|73-66
16718|code|ADD             R0, PC; "check_clone: fstat"|120-68
16720|code|BL              simple_err|254-247-134-254
16724|code|MOVS            R0, #0xA9; status|169-32
16726|code|BLX             exit|253-247-86-238
16730|code|BLX             __errno_location|253-247-116-239
16734|code|LDR             R1, [R0]|1-104
16736|code|LDR             R0, =(aCheckCloneOpen - 0x4168); "check_clone: open"|12-72
16738|code|NEGS            R1, R1|73-66
16740|code|ADD             R0, PC; "check_clone: open"|120-68
16742|code|BL              simple_err|254-247-123-254
16746|code|MOVS            R0, #0xA8; status|168-32
16748|code|BLX             exit|253-247-74-238
16752|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4020|76-46-1-0
16756|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
16760|data|DCD ioctx_ptr - 0x16E6C|112-1-0-0
16764|data|DCD aCheckingCloneD - 0x406C; "checking clone #%d, image %s against fi"...|4-26-0-0
16768|data|DCD aCheckCloneRbdO - 0x4102; "check_clone: rbd open"|66-25-0-0
16772|data|DCD aCheckCloneRbdC - 0x4116; "check_clone: rbd close"|202-25-0-0
16776|data|DCD aCheckCloneRbdR - 0x4126; "check_clone: rbd_read"|162-25-0-0
16780|data|DCD aCheckClonePrea - 0x413C; "check_clone: pread"|120-25-0-0
16784|data|DCD aCheckCloneFsta - 0x4152; "check_clone: fstat"|78-25-0-0
16788|data|DCD aCheckCloneOpen - 0x4168; "check_clone: open"|244-24-0-0
16792|code|PUSH.W          {R4-R11,LR}|45-233-240-79
16796|code|SUBW            SP, SP, #0xC44|173-246-68-77
16800|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x41AE)|136-78
16802|code|ADD.W           R8, SP, #0xC68+var_C30|13-241-56-8
16806|code|LDR             R2, =(__stack_chk_guard_ptr - 0x16E6C)|136-74
16808|code|MOVS            R1, #0|0-33
16810|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
16812|code|LDR             R3, =(off_17008 - 0x41B4); "PAST_EOF"|135-75
16814|code|LDR             R2, [R6,R2]; __stack_chk_guard|178-88
16816|code|ADD             R3, PC; off_17008|123-68
16818|code|STR.W           R1, [R8]|200-248-0-16
16822|code|LDR             R5, [R3,#(randomize_striping - 0x17008)]|157-106
16824|code|LDR             R3, [R2]|19-104
16826|code|STR             R2, [SP,#0xC68+var_C34]|13-146
16828|code|STR.W           R3, [SP,#0xC68+var_2C]|205-248-60-60
16832|code|CMP             R5, #0|0-45
16834|code|BNE.W           loc_42EA|64-240-146-128
16838|code|STR             R5, [SP,#0xC68+var_C3C]|11-149
16840|code|LDR             R4, =(fsxlogf - 0x41D4)|129-76
16842|code|MOVS            R1, #0|0-33
16844|code|MOV             R2, R1|10-70
16846|code|MOV             R3, R1|11-70
16848|code|ADD             R4, PC; fsxlogf|124-68
16850|code|MOVS            R0, #7|7-32
16852|code|BL              log4|254-247-20-254
16856|code|LDR             R2, [SP,#0xC68+var_C3C]|11-154
16858|code|LDR             R7, [R4,#(num_clones - 0x17060)]|39-108
16860|code|LDR             R0, =(aLuCloneDOrderD - 0x41EA); "%lu clone\t%d order %d su %d sc %d\n"|125-72
16862|code|ADDS            R7, #1|1-55
16864|code|LDR.W           R3, [R8]|216-248-0-48
16868|code|LDR             R1, [R4,#(testcalls - 0x17060)]|97-104
16870|code|ADD             R0, PC; "%lu clone\t%d order %d su %d sc %d\n"|120-68
16872|code|STMEA.W         SP, {R2,R5}|141-232-36-0
16876|code|MOV             R2, R7|58-70
16878|code|STR             R7, [R4,#(num_clones - 0x17060)]|39-100
16880|code|ADD             R7, SP, #0xC68+var_C2C|15-175
16882|code|BL              prt|254-247-143-253
16886|code|LDR             R2, [R4,#(num_clones - 0x17060)]|34-108
16888|code|MOV             R0, R7|56-70
16890|code|MOV.W           R1, #0x400|79-244-128-97
16894|code|BL              clone_filename|255-247-193-254
16898|code|MOV             R0, R7|56-70
16900|code|MOVW            R1, #0x241|64-242-65-33
16904|code|MOV.W           R2, #0x1B6|79-244-219-114
16908|code|BLX             open64|253-247-94-238
16912|code|SUBS            R7, R0, #0|7-30
16914|code|BLT.W           loc_43AC|192-242-203-128
16918|code|LDR             R1, =(good_buf_ptr - 0x16E6C)|112-73
16920|code|LDRD.W          R2, R3, [R4,#0x18]|212-233-6-35
16924|code|LDR             R1, [R6,R1]; good_buf|113-88
16926|code|STR             R7, [SP,#0xC68+var_C68]|0-151
16928|code|LDR             R0, [R1]|8-104
16930|code|BL              save_buffer|255-247-97-248
16934|code|MOV             R0, R7; fd|56-70
16936|code|BLX             close|253-247-44-238
16940|code|CMP             R0, #0|0-40
16942|code|BLT.W           loc_4396|192-242-178-128
16946|code|ADDW            R3, SP, #0xC68+var_82C|13-242-60-67
16950|code|MOV.W           R1, #0x400|79-244-128-97
16954|code|LDR             R2, [R4,#(num_clones - 0x17060)]|34-108
16956|code|ADDW            R11, SP, #0xC68+var_42C|13-246-60-11
16960|code|MOV             R0, R3|24-70
16962|code|STR             R3, [SP,#0xC68+var_C38]|12-147
16964|code|BL              clone_imagename|255-247-188-254
16968|code|LDR             R2, [R4,#(num_clones - 0x17060)]|34-108
16970|code|MOV             R0, R11|88-70
16972|code|MOV.W           R1, #0x400|79-244-128-97
16976|code|SUBS            R2, #1|1-58
16978|code|LDR.W           R9, =(aSnap - 0x4260); "snap"|223-248-136-145
16982|code|BL              clone_imagename|255-247-179-254
16986|code|LDR             R3, =(image_ptr - 0x16E6C)|97-75
16988|code|ADD             R9, PC; "snap"|249-68
16990|code|LDR             R7, [R6,R3]; image|247-88
16992|code|MOV             R1, R9|73-70
16994|code|LDR             R0, [R7]|56-104
16996|code|BLX             rbd_snap_create|253-247-118-238
17000|code|CMP             R0, #0|0-40
17002|code|BLT.W           loc_4386|192-242-140-128
17006|code|LDR             R0, [R7]|56-104
17008|code|MOV             R1, R9|73-70
17010|code|BLX             rbd_snap_protect|253-247-118-238
17014|code|CMP             R0, #0|0-40
17016|code|BLT             loc_4376|125-219
17018|code|LDR             R3, =(ioctx_ptr - 0x16E6C)|90-75
17020|code|MOV             R1, R11|89-70
17022|code|LDR             R0, [SP,#0xC68+var_C3C]|11-152
17024|code|MOV             R2, R9|74-70
17026|code|MOV.W           R9, #0|79-240-0-9
17030|code|LDR             R6, [R6,R3]; ioctx|246-88
17032|code|LDR             R3, [SP,#0xC68+var_C38]|12-155
17034|code|MOV             R10, R0|130-70
17036|code|STR.W           R8, [SP,#0xC68+var_C58]|205-248-16-128
17040|code|MOV.W           R11, R0,ASR#31|79-234-224-123
17044|code|MOV.W           R8, #3|79-240-3-8
17048|code|STR             R3, [SP,#0xC68+var_C68]|0-147
17050|code|LDR             R0, [R6]|48-104
17052|code|STR             R5, [SP,#0xC68+var_C48]|8-149
17054|code|STRD.W          R8, R9, [SP,#0xC68+var_C60]|205-233-2-137
17058|code|MOV             R3, R0|3-70
17060|code|STRD.W          R10, R11, [SP,#0xC68+var_C50]|205-233-6-171
17064|code|BLX             rbd_clone2|253-247-150-238
17068|code|CMP             R0, #0|0-40
17070|code|BLT             loc_4366|90-219
17072|code|LDR             R0, [R7]|56-104
17074|code|BLX             rbd_close|253-247-226-237
17078|code|CMP             R0, #0|0-40
17080|code|BLT             loc_4356|77-219
17082|code|LDR             R0, [R6]|48-104
17084|code|MOV             R2, R7|58-70
17086|code|LDR             R1, [SP,#0xC68+var_C38]|12-153
17088|code|MOVS            R3, #0|0-35
17090|code|BLX             rbd_open|253-247-142-237
17094|code|CMP             R0, #0|0-40
17096|code|BLT             loc_4346|61-219
17098|code|LDR             R0, [R4,#(num_clones - 0x17060)]|32-108
17100|code|CMP             R0, #1|1-40
17102|code|BLE             loc_42D6|2-221
17104|code|SUBS            R0, #2|2-56
17106|code|BL              check_clone|255-247-155-254
17110|code|LDR             R3, [SP,#0xC68+var_C34]|13-155
17112|code|LDR.W           R2, [SP,#0xC68+var_2C]|221-248-60-44
17116|code|LDR             R3, [R3]|27-104
17118|code|CMP             R2, R3|154-66
17120|code|BNE             loc_4342|47-209
17122|code|ADDW            SP, SP, #0xC44|13-246-68-77
17126|code|POP.W           {R4-R11,PC}|189-232-240-143
17130|code|BLX             rand|253-247-86-237
17134|code|ASRS            R4, R0, #0x1F|196-23
17136|code|LSRS            R4, R4, #0x1D|100-15
17138|code|ADD             R0, R4|32-68
17140|code|AND.W           R0, R0, #7|0-240-7-0
17144|code|SUBS            R4, R0, R4|4-27
17146|code|ADD.W           R3, R4, #0x12|4-241-18-3
17150|code|STR.W           R3, [R8]|200-248-0-48
17154|code|BLX             rand|253-247-74-237
17158|code|ADDS            R4, #0x11|17-52
17160|code|MOVS            R2, #1|1-34
17162|code|ASRS            R3, R0, #0x1F|195-23
17164|code|LSRS            R3, R3, #0x1D|91-15
17166|code|ADD             R0, R3|24-68
17168|code|AND.W           R0, R0, #7|0-240-7-0
17172|code|SUBS            R0, R0, R3|192-26
17174|code|SUBS            R4, R4, R0|36-26
17176|code|LSL.W           R3, R2, R4|2-250-4-243
17180|code|STR             R3, [SP,#0xC68+var_C3C]|11-147
17182|code|BLX             rand|253-247-60-237
17186|code|MOV             R4, #0x92492493|66-242-147-68-201-242-73-36
17194|code|SMULL.W         R4, R5, R0, R4|128-251-4-69
17198|code|ASRS            R3, R0, #0x1F|195-23
17200|code|ADD             R5, R0|5-68
17202|code|RSB.W           R5, R3, R5,ASR#3|195-235-229-5
17206|code|RSB.W           R5, R5, R5,LSL#3|197-235-197-5
17210|code|SUB.W           R0, R0, R5,LSL#1|160-235-69-0
17214|code|ADDS            R5, R0, #2|133-28
17216|code|B               loc_41C8|66-231
17218|code|BLX             __stack_chk_fail|253-247-246-237
17222|code|MOV             R1, R0|1-70
17224|code|LDR             R0, =(aDoCloneRbdOpen - 0x434E); "do_clone: rbd open"|39-72
17226|code|ADD             R0, PC; "do_clone: rbd open"|120-68
17228|code|BL              simple_err|254-247-136-253
17232|code|MOVS            R0, #0xA6; status|166-32
17234|code|BLX             exit|253-247-88-237
17238|code|MOV             R1, R0|1-70
17240|code|LDR             R0, =(aDoCloneRbdClos - 0x435E); "do_clone: rbd close"|36-72
17242|code|ADD             R0, PC; "do_clone: rbd close"|120-68
17244|code|BL              simple_err|254-247-128-253
17248|code|MOVS            R0, #0xAE; status|174-32
17250|code|BLX             exit|253-247-80-237
17254|code|MOV             R1, R0|1-70
17256|code|LDR             R0, =(aDoCloneRbdClon - 0x436E); "do_clone: rbd clone"|33-72
17258|code|ADD             R0, PC; "do_clone: rbd clone"|120-68
17260|code|BL              simple_err|254-247-120-253
17264|code|MOVS            R0, #0xA5; status|165-32
17266|code|BLX             exit|253-247-72-237
17270|code|MOV             R1, R0|1-70
17272|code|LDR             R0, =(aDoCloneRbdProt - 0x437E); "do_clone: rbd protect snap"|30-72
17274|code|ADD             R0, PC; "do_clone: rbd protect snap"|120-68
17276|code|BL              simple_err|254-247-112-253
17280|code|MOVS            R0, #0xA4; status|164-32
17282|code|BLX             exit|253-247-64-237
17286|code|MOV             R1, R0|1-70
17288|code|LDR             R0, =(aDoCloneRbdCrea - 0x438E); "do_clone: rbd create snap"|27-72
17290|code|ADD             R0, PC; "do_clone: rbd create snap"|120-68
17292|code|BL              simple_err|254-247-104-253
17296|code|MOVS            R0, #0xA4; status|164-32
17298|code|BLX             exit|253-247-56-237
17302|code|BLX             __errno_location|253-247-86-238
17306|code|LDR             R1, [R0]|1-104
17308|code|LDR             R0, =(aDoCloneClose - 0x43A4); "do_clone: close"|23-72
17310|code|NEGS            R1, R1|73-66
17312|code|ADD             R0, PC; "do_clone: close"|120-68
17314|code|BL              simple_err|254-247-93-253
17318|code|MOVS            R0, #0xA3; status|163-32
17320|code|BLX             exit|253-247-44-237
17324|code|BLX             __errno_location|253-247-74-238
17328|code|LDR             R1, [R0]|1-104
17330|code|LDR             R0, =(aDoCloneOpen - 0x43BA); "do_clone: open"|19-72
17332|code|NEGS            R1, R1|73-66
17334|code|ADD             R0, PC; "do_clone: open"|120-68
17336|code|BL              simple_err|254-247-82-253
17340|code|MOVS            R0, #0xA2; status|162-32
17342|code|BLX             exit|253-247-34-237
17346|data|ALIGN 4|0-191
17348|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x41AE|190-44-1-0
17352|data|DCD __stack_chk_guard_ptr - 0x16E6C|44-1-0-0
17356|data|DCD off_17008 - 0x41B4; "PAST_EOF"|84-46-1-0
17360|data|DCD fsxlogf - 0x41D4|140-46-1-0
17364|data|DCD aLuCloneDOrderD - 0x41EA; "%lu clone\t%d order %d su %d sc %d\n"|14-25-0-0
17368|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
17372|data|DCD aSnap - 0x4260; "snap"|220-24-0-0
17376|data|DCD image_ptr - 0x16E6C|104-1-0-0
17380|data|DCD ioctx_ptr - 0x16E6C|112-1-0-0
17384|data|DCD aDoCloneRbdOpen - 0x434E; "do_clone: rbd open"|86-24-0-0
17388|data|DCD aDoCloneRbdClos - 0x435E; "do_clone: rbd close"|50-24-0-0
17392|data|DCD aDoCloneRbdClon - 0x436E; "do_clone: rbd clone"|14-24-0-0
17396|data|DCD aDoCloneRbdProt - 0x437E; "do_clone: rbd protect snap"|226-23-0-0
17400|data|DCD aDoCloneRbdCrea - 0x438E; "do_clone: rbd create snap"|182-23-0-0
17404|data|DCD aDoCloneClose - 0x43A4; "do_clone: close"|136-23-0-0
17408|data|DCD aDoCloneOpen - 0x43BA; "do_clone: open"|98-23-0-0
17412|code|PUSH            {R4-R7,LR}|240-181
17414|code|SUB             SP, SP, #0xC|131-176
17416|code|LDR             R4, =(fsxlogf - 0x4414)|32-76
17418|code|MOVS            R2, #0|0-34
17420|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x441A)|32-72
17422|code|MOVS            R3, #0|0-35
17424|code|ADD             R4, PC; fsxlogf|124-68
17426|code|LDR             R5, =(image_ptr - 0x16E6C)|32-77
17428|code|LDR             R1, =(good_buf_ptr - 0x16E6C)|32-73
17430|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
17432|code|LDR             R6, [R4,#(file_size - 0x17060)]|166-105
17434|code|LDR             R5, [R0,R5]; image|69-89
17436|code|STR             R6, [SP,#0x20+var_20]|0-150
17438|code|LDR             R1, [R0,R1]; good_buf|65-88
17440|code|LDR             R0, [R5]|40-104
17442|code|LDR             R1, [R1]|9-104
17444|code|STR             R1, [SP,#0x20+var_1C]|1-145
17446|code|BLX             rbd_write|253-247-202-236
17450|code|LDRD.W          R6, R7, [R4,#0x18]|212-233-6-103
17454|code|ASRS            R3, R0, #0x1F|195-23
17456|code|MOV             R2, R0|2-70
17458|code|CMP             R3, R7|187-66
17460|code|IT EQ|8-191
17462|code|CMPEQ           R0, R6|176-66
17464|code|BNE             loc_4468|22-209
17466|code|LDR             R1, [R4,#(lite - 0x17060)]|33-107
17468|code|CBZ             R1, loc_4442|9-177
17470|code|ADD             SP, SP, #0xC|3-176
17472|code|POP             {R4-R7,PC}|240-189
17474|code|LDR             R0, [R5]|40-104
17476|code|BLX             rbd_resize|253-247-188-237
17480|code|SUBS            R5, R0, #0|5-30
17482|code|BGE             loc_443E|248-218
17484|code|LDR             R0, =(aRbdResizeLlx - 0x4456); "rbd_resize: %llx\n"|19-72
17486|code|LDRD.W          R2, R3, [R4,#0x18]|212-233-6-35
17490|code|ADD             R0, PC; "rbd_resize: %llx\n"|120-68
17492|code|BL              prt|254-247-94-252
17496|code|LDR             R0, =(aWritefileimage_0 - 0x4460); "writefileimage: rbd_resize"|17-72
17498|code|MOV             R1, R5|41-70
17500|code|ADD             R0, PC; "writefileimage: rbd_resize"|120-68
17502|code|BL              prterrcode|254-247-41-255
17506|code|MOVS            R0, #0xAD|173-32
17508|code|BL              report_failure|254-247-148-255
17512|code|CMP             R0, #0|0-40
17514|code|MOV             R1, R0|1-70
17516|code|BLT             loc_4480|8-219
17518|code|LDR             R0, =(aShortWrite0xXB_0 - 0x4478); "short write: 0x%x bytes instead of 0x%l"...|13-72
17520|code|MOV             R2, R6|50-70
17522|code|MOV             R3, R7|59-70
17524|code|ADD             R0, PC; "short write: 0x%x bytes instead of 0x%l"...|120-68
17526|code|BL              prt|254-247-77-252
17530|code|MOVS            R0, #0xAC|172-32
17532|code|BL              report_failure|254-247-136-255
17536|code|LDR             R0, =(aWritefileimage_1 - 0x4486); "writefileimage: write"|9-72
17538|code|ADD             R0, PC; "writefileimage: write"|120-68
17540|code|BL              prterrcode|254-247-22-255
17544|code|B               loc_447A|247-231
17546|data|ALIGN 4|0-191
17548|data|DCD fsxlogf - 0x4414|76-44-1-0
17552|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x441A|82-42-1-0
17556|data|DCD image_ptr - 0x16E6C|104-1-0-0
17560|data|DCD good_buf_ptr - 0x16E6C|72-1-0-0
17564|data|DCD aRbdResizeLlx - 0x4456; "rbd_resize: %llx\n"|166-23-0-0
17568|data|DCD aWritefileimage_0 - 0x4460; "writefileimage: rbd_resize"|176-23-0-0
17572|data|DCD aShortWrite0xXB_0 - 0x4478; "short write: 0x%x bytes instead of 0x%l"...|88-23-0-0
17576|data|DCD aWritefileimage_1 - 0x4486; "writefileimage: write"|50-23-0-0
17580|code|PUSH            {R4-R6,LR}|112-181
17582|code|SUB             SP, SP, #0x10|132-176
17584|code|LDR             R6, =(fsxlogf - 0x44B8)|27-78
17586|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x44BA)|28-72
17588|code|ADD             R6, PC; fsxlogf|126-68
17590|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
17592|code|LDR             R3, [R6,#(num_clones - 0x17060)]|51-108
17594|code|CBZ             R3, loc_44FC|251-177
17596|code|LDR             R5, =(image_ptr - 0x16E6C)|26-77
17598|code|MOVS            R4, #0|0-36
17600|code|MOV             R1, R4|33-70
17602|code|MOV             R2, R4|34-70
17604|code|MOV             R3, R4|35-70
17606|code|LDR             R5, [R0,R5]; image|69-89
17608|code|STR             R4, [SP,#0x20+var_20]|0-148
17610|code|STR             R4, [SP,#0x20+var_1C]|1-148
17612|code|LDR             R0, [R5]|40-104
17614|code|STR             R4, [SP,#0x20+var_18]|2-148
17616|code|BLX             rbd_get_parent_info|253-247-246-236
17620|code|ADDS            R0, #2|2-48
17622|code|BEQ             loc_44FC|17-208
17624|code|MOV             R2, R4|34-70
17626|code|MOV             R3, R4|35-70
17628|code|MOVS            R0, #8|8-32
17630|code|MOV             R1, R4|33-70
17632|code|BL              log4|254-247-142-252
17636|code|LDR             R0, =(aLuFlatten - 0x44EC); "%lu flatten\n"|17-72
17638|code|LDR             R1, [R6,#(testcalls - 0x17060)]|113-104
17640|code|ADD             R0, PC; "%lu flatten\n"|120-68
17642|code|BL              prt|254-247-19-252
17646|code|LDR             R0, [R5]|40-104
17648|code|BLX             rbd_flatten|253-247-42-237
17652|code|CMP             R0, #0|0-40
17654|code|BLT             loc_450E|10-219
17656|code|ADD             SP, SP, #0x10|4-176
17658|code|POP             {R4-R6,PC}|112-189
17660|code|MOVS            R2, #0|0-34
17662|code|MOVS            R0, #0x65 ; 'e'|101-32
17664|code|MOV             R3, R2|19-70
17666|code|MOVS            R1, #8|8-33
17668|code|ADD             SP, SP, #0x10|4-176
17670|code|POP.W           {R4-R6,LR}|189-232-112-64
17674|code|B.W             log4|254-247-121-188
17678|code|MOV             R1, R0|1-70
17680|code|LDR             R0, =(aDoFlattenRbdFl - 0x4516); "do_flatten: rbd flatten"|7-72
17682|code|ADD             R0, PC; "do_flatten: rbd flatten"|120-68
17684|code|BL              simple_err|254-247-164-252
17688|code|MOVS            R0, #0xB1; status|177-32
17690|code|BLX             exit|253-247-116-236
17694|data|ALIGN 0x10|0-191
17696|data|DCD fsxlogf - 0x44B8|168-43-1-0
17700|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x44BA|178-41-1-0
17704|data|DCD image_ptr - 0x16E6C|104-1-0-0
17708|data|DCD aLuFlatten - 0x44EC; "%lu flatten\n"|64-23-0-0
17712|data|DCD aDoFlattenRbdFl - 0x4516; "do_flatten: rbd flatten"|38-23-0-0
17716|code|PUSH            {R3-R5,LR}|56-181
17718|code|LDR             R3, =(fsxlogf - 0x453E)|25-75
17720|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x4540)|25-76
17722|code|ADD             R3, PC; fsxlogf|123-68
17724|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
17726|code|LDR             R1, [R3,#(testcalls - 0x17060)]|89-104
17728|code|LDR             R2, [R3,#(simulatedopcount - 0x17060)]|90-106
17730|code|CMP             R1, R2|145-66
17732|code|BLS             locret_4570|20-217
17734|code|LDR             R3, [R3,#(debug - 0x17060)]|219-106
17736|code|CBNZ            R3, loc_4572|155-185
17738|code|LDR             R3, =(image_ptr - 0x16E6C)|22-75
17740|code|LDR             R5, [R4,R3]; image|229-88
17742|code|LDR             R0, [R5]|40-104
17744|code|BLX             rbd_close|253-247-146-236
17748|code|CMP             R0, #0|0-40
17750|code|BLT             loc_457C|17-219
17752|code|LDR             R0, =(ioctx_ptr - 0x16E6C)|19-72
17754|code|MOV             R2, R5|42-70
17756|code|LDR             R1, =(iname_ptr - 0x16E6C)|19-73
17758|code|MOVS            R3, #0|0-35
17760|code|LDR             R0, [R4,R0]; ioctx|32-88
17762|code|LDR             R1, [R4,R1]; iname|97-88
17764|code|LDR             R0, [R0]|0-104
17766|code|LDR             R1, [R1]|9-104
17768|code|BLX             rbd_open|253-247-58-236
17772|code|CMP             R0, #0|0-40
17774|code|BLT             loc_458C|13-219
17776|code|POP             {R3-R5,PC}|56-189
17778|code|LDR             R0, =(aLuCloseOpen - 0x4578); "%lu close/open\n"|15-72
17780|code|ADD             R0, PC; "%lu close/open\n"|120-68
17782|code|BL              prt|254-247-205-251
17786|code|B               loc_454A|230-231
17788|code|MOV             R1, R0|1-70
17790|code|LDR             R0, =(aDocloseopenClo - 0x4584); "docloseopen: close"|13-72
17792|code|ADD             R0, PC; "docloseopen: close"|120-68
17794|code|BL              prterrcode|254-247-151-254
17798|code|MOVS            R0, #0xB4|180-32
17800|code|BL              report_failure|254-247-2-255
17804|code|MOV             R1, R0|1-70
17806|code|LDR             R0, =(aDocloseopenOpe - 0x4594); "docloseopen: open"|10-72
17808|code|ADD             R0, PC; "docloseopen: open"|120-68
17810|code|BL              prterrcode|254-247-143-254
17814|code|MOVS            R0, #0xB5|181-32
17816|code|BL              report_failure|254-247-250-254
17820|data|DCD fsxlogf - 0x453E|34-43-1-0
17824|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x4540|44-41-1-0
17828|data|DCD image_ptr - 0x16E6C|104-1-0-0
17832|data|DCD ioctx_ptr - 0x16E6C|112-1-0-0
17836|data|DCD iname_ptr - 0x16E6C|144-1-0-0
17840|data|DCD aLuCloseOpen - 0x4578; "%lu close/open\n"|220-22-0-0
17844|data|DCD aDocloseopenClo - 0x4584; "docloseopen: close"|224-22-0-0
17848|data|DCD aDocloseopenOpe - 0x4594; "docloseopen: open"|228-22-0-0
17852|code|LDR             R3, =(off_17008 - 0x45C6); "PAST_EOF"|170-75
17854|code|PUSH.W          {R4-R8,LR}|45-233-240-65
17858|code|ADD             R3, PC; off_17008|123-68
17860|code|LDR             R5, =(fsxlogf - 0x45D0)|169-77
17862|code|LDR             R7, [R3,#(maxoplen - 0x17008)]|223-106
17864|code|BLX             random|253-247-42-237
17868|code|ADD             R5, PC; fsxlogf|125-68
17870|code|LDR             R3, [R5,#(simulatedopcount - 0x17060)]|107-106
17872|code|LDR             R4, [R5,#(testcalls - 0x17060)]|108-104
17874|code|MOV             R6, R0|6-70
17876|code|CBZ             R3, loc_45DC|19-177
17878|code|CMP             R3, R4|163-66
17880|code|BEQ.W           loc_47D0|0-240-250-128
17884|code|LDR             R5, =(fsxlogf - 0x45E4)|164-77
17886|code|ADDS            R4, #1|1-52
17888|code|ADD             R5, PC; fsxlogf|125-68
17890|code|LDR             R1, [R5,#(closeprob - 0x17060)]|105-108
17892|code|STR             R4, [R5,#(testcalls - 0x17060)]|108-96
17894|code|CBZ             R1, loc_45FC|73-177
17896|code|MOV.W           R0, #0x10000000|79-240-128-80
17900|code|BL              sub_4980|0-240-200-249
17904|code|LSRS            R3, R6, #3|243-8
17906|code|CMP             R3, R0|131-66
17908|code|ITE CS|44-191
17910|code|MOVCS           R0, #0|0-32
17912|code|MOVCC           R0, #1|1-32
17914|code|STR             R0, [R5,#(closeopen - 0x17060)]|232-96
17916|code|LDR             R3, =(fsxlogf - 0x4602)|157-75
17918|code|ADD             R3, PC; fsxlogf|123-68
17920|code|LDR             R2, [R3,#(debugstart - 0x17060)]|154-108
17922|code|CMP             R4, R2|148-66
17924|code|ITE CC|52-191
17926|code|MOVCC           R1, #0|0-33
17928|code|MOVCS           R1, #1|1-33
17930|code|CMP             R2, #0|0-42
17932|code|IT EQ|8-191
17934|code|MOVEQ           R1, #0|0-33
17936|code|CBZ             R1, loc_4616|9-177
17938|code|MOVS            R2, #1|1-34
17940|code|STR             R2, [R3,#(debug - 0x17060)]|218-98
17942|code|LDR             R3, =(fsxlogf - 0x461C)|152-75
17944|code|ADD             R3, PC; fsxlogf|123-68
17946|code|LDR             R2, [R3,#(quiet - 0x17060)]|26-106
17948|code|CBNZ            R2, loc_4624|18-185
17950|code|LDR             R3, [R3,#(simulatedopcount - 0x17060)]|91-106
17952|code|CMP             R4, R3|156-66
17954|code|BCC             loc_4664|31-211
17956|code|BLX             random|253-247-252-236
17960|code|LDR             R4, =(off_17008 - 0x462E); "PAST_EOF"|148-76
17962|code|ADD             R4, PC; off_17008|124-68
17964|code|LDR             R3, [R4,#(randomoplen - 0x17008)]|35-107
17966|code|MOV             R8, R0|128-70
17968|code|CBNZ            R3, loc_4690|115-187
17970|code|LDR             R3, =(fsxlogf - 0x463C)|147-75
17972|code|AND.W           R4, R6, #3|6-240-3-4
17976|code|ADD             R3, PC; fsxlogf|123-68
17978|code|LDR             R3, [R3,#(lite - 0x17060)]|27-107
17980|code|CBNZ            R3, loc_4652|75-185
17982|code|MOV             R4, #0x38E38E39|72-246-57-100-195-246-227-4
17990|code|UMULL.W         R4, R5, R6, R4|166-251-4-69
17994|code|LSRS            R4, R5, #1|108-8
17996|code|ADD.W           R4, R4, R4,LSL#3|4-235-196-4
18000|code|SUBS            R4, R6, R4|52-27
18002|code|SUBS            R5, R4, #2; switch 6 cases|165-30
18004|code|CMP             R5, #5|5-45
18006|code|BHI.W           def_465A; jumptable 0000465A default case, case 4|0-242-161-128
18010|code|TBB.W           [PC,R5]; switch jump|223-232-5-240
18014|data|DCB 0x40; jump table for switch statement|64
18015|data|DCB 0x88|136
18016|data|DCB 0x9F|159
18017|data|DCB 0x5E|94
18018|data|DCB 0x6B|107
18019|data|DCB 0x21|33
18020|code|MOVW            R3, #0x5AC5|69-246-197-35
18024|code|LSRS            R2, R4, #5|98-9
18026|code|MOVT.W          R3, #0xA7C|192-246-124-35
18030|code|MOVW            R1, #0x86A0|72-242-160-97
18034|code|UMULL.W         R2, R3, R2, R3|162-251-3-35
18038|code|MOVT.W          R1, #1|192-242-1-1
18042|code|LSRS            R3, R3, #7|219-9
18044|code|MLS.W           R3, R1, R3, R4|1-251-19-67
18048|code|CMP             R3, #0|0-43
18050|code|BNE             loc_4624|207-209
18052|code|LDR             R0, =(aLu - 0x468C); "%lu...\n"|127-72
18054|code|MOV             R1, R4|33-70
18056|code|ADD             R0, PC; "%lu...\n"|120-68
18058|code|BL              prt|254-247-67-251
18062|code|B               loc_4624|201-231
18064|code|BLX             random|253-247-198-236
18068|code|LDR             R1, [R4,#(maxoplen - 0x17008)]|225-106
18070|code|ADDS            R1, #1|1-49
18072|code|BL              sub_4E8C|0-240-248-251
18076|code|MOV             R7, R1|15-70
18078|code|B               loc_4632|200-231
18080|code|LDR             R3, =(off_17008 - 0x46A6); jumptable 0000465A case 7|121-75
18082|code|ADD             R3, PC; off_17008|123-68
18084|code|LDR             R3, [R3,#(clone_calls - 0x17008)]|27-105
18086|code|CBZ             R3, loc_46D0|155-177
18088|code|BLX             random|253-247-186-236
18092|code|MOV             R4, #0x51EB851F|72-242-31-84-197-242-235-20
18100|code|SMULL.W         R4, R5, R0, R4|128-251-4-69
18104|code|ASRS            R3, R0, #0x1F|195-23
18106|code|RSB.W           R3, R3, R5,ASR#5|195-235-101-19
18110|code|ADD.W           R3, R3, R3,LSL#2|3-235-131-3
18114|code|ADD.W           R3, R3, R3,LSL#2|3-235-131-3
18118|code|SUB.W           R3, R0, R3,LSL#2|160-235-131-3
18122|code|CMP             R3, #5|5-43
18124|code|BLE.W           loc_480C|64-243-158-128
18128|code|MOVS            R2, #0|0-34
18130|code|MOVS            R0, #0x65 ; 'e'|101-32
18132|code|MOV             R3, R2|19-70
18134|code|MOVS            R1, #7|7-33
18136|code|BL              log4|254-247-146-251
18140|code|B               loc_47DC|126-224
18142|code|LDR             R3, =(fsxlogf - 0x46E4); jumptable 0000465A case 2|107-75
18144|code|ADD             R3, PC; fsxlogf|123-68
18146|code|LDR             R3, [R3,#(mapped_reads - 0x17060)]|219-108
18148|code|CMP             R3, #0|0-43
18150|code|BNE.W           loc_482E; jumptable 000047A8 case 2|64-240-162-128
18154|code|LDR             R3, =(fsxlogf - 0x46F0); jumptable 000047A8 case 0|105-75
18156|code|ADD             R3, PC; fsxlogf|123-68
18158|code|LDRD.W          R4, R5, [R3,#0x18]|211-233-6-69
18162|code|ORRS.W          R3, R4, R5|84-234-5-3
18166|code|IT EQ|8-191
18168|code|MOVEQ           R0, #0|0-32
18170|code|BEQ             loc_470A|6-208
18172|code|MOV             R0, R8|64-70
18174|code|MOVS            R1, #0|0-33
18176|code|MOV             R2, R4|34-70
18178|code|MOV             R3, R5|43-70
18180|code|BL              sub_4EA8|0-240-208-251
18184|code|MOV             R0, R2|16-70
18186|code|ADDS            R3, R0, R7|195-25
18188|code|CMP             R3, R4|163-66
18190|code|IT HI|136-191
18192|code|SUBHI           R7, R4, R0|39-26
18194|code|MOV             R1, R7|57-70
18196|code|BL              doread|255-247-66-248
18200|code|B               loc_47DC|96-224
18202|code|LDR             R3, =(fsxlogf - 0x4720); jumptable 0000465A case 5|94-75
18204|code|ADD             R3, PC; fsxlogf|123-68
18206|code|LDR             R3, [R3,#(fallocate_calls - 0x17060)]|91-109
18208|code|CMP             R3, #0|0-43
18210|code|BEQ.W           loc_4848|0-240-145-128
18214|code|LDR             R0, =(aTestUnknownOpe - 0x472C); jumptable 000047A8 default case, case 5|92-72
18216|code|ADD             R0, PC; "test: unknown operation"|120-68
18218|code|BL              prterr|254-247-77-251
18222|code|MOVS            R0, #0x2A ; '*'|42-32
18224|code|BL              report_failure|254-247-46-254
18228|code|LDR             R3, =(off_17008 - 0x473A); jumptable 0000465A case 6|89-75
18230|code|ADD             R3, PC; off_17008|123-68
18232|code|LDR             R3, [R3,#(punch_hole_calls - 0x17008)]|91-107
18234|code|CMP             R3, #0|0-43
18236|code|BEQ             loc_483A|125-208
18238|code|LDR             R3, =(fsxlogf - 0x4744); jumptable 000047A8 case 6|88-75
18240|code|ADD             R3, PC; fsxlogf|123-68
18242|code|LDRD.W          R4, R5, [R3,#0x18]|211-233-6-69
18246|code|ORRS.W          R3, R4, R5|84-234-5-3
18250|code|IT EQ|8-191
18252|code|MOVEQ           R0, #0|0-32
18254|code|BEQ             loc_475E|6-208
18256|code|MOV             R0, R8|64-70
18258|code|MOVS            R1, #0|0-33
18260|code|MOV             R2, R4|34-70
18262|code|MOV             R3, R5|43-70
18264|code|BL              sub_4EA8|0-240-166-251
18268|code|MOV             R0, R2|16-70
18270|code|ADDS            R3, R0, R7|195-25
18272|code|CMP             R3, R4|163-66
18274|code|IT HI|136-191
18276|code|SUBHI           R7, R4, R0|39-26
18278|code|MOV             R1, R7|57-70
18280|code|BL              do_punch_hole|255-247-70-251
18284|code|B               loc_47DC|54-224
18286|code|LDR             R3, =(fsxlogf - 0x4774); jumptable 0000465A case 3|77-75
18288|code|ADD             R3, PC; fsxlogf|123-68
18290|code|LDR             R3, [R3,#(mapped_writes - 0x17060)]|27-109
18292|code|CMP             R3, #0|0-43
18294|code|BNE             loc_4834; jumptable 000047A8 case 3|93-209
18296|code|LDR             R3, =(off_17008 - 0x477E); jumptable 000047A8 case 1|75-75
18298|code|ADD             R3, PC; off_17008|123-68
18300|code|LDR             R4, [R3,#(maxfilelen - 0x17008)]|156-107
18302|code|MOV             R0, R4|32-70
18304|code|CBZ             R4, loc_478C|36-177
18306|code|MOV             R0, R8|64-70
18308|code|MOV             R1, R4|33-70
18310|code|BL              sub_4BDC|0-240-41-250
18314|code|MOV             R0, R1|8-70
18316|code|ADDS            R3, R0, R7|195-25
18318|code|CMP             R4, R3|156-66
18320|code|IT CC|56-191
18322|code|SUBCC           R7, R4, R0|39-26
18324|code|MOV             R1, R7|57-70
18326|code|BL              dowrite|255-247-65-249
18330|code|B               loc_47DC|31-224
18332|code|CMP             R4, #8; jumptable 0000465A default case, case 4|8-44
18334|code|BHI             def_47A8; jumptable 000047A8 default case, case 5|194-216
18336|code|ADR             R3, jpt_47A8|2-163
18338|code|LDR.W           R2, [R3,R4,LSL#2]|83-248-36-32
18342|code|ADD             R3, R2|19-68
18344|code|BX              R3; switch jump|24-71
18346|data|ALIGN 4|0-191
18348|data|DCD loc_46EA+1 - 0x47AC; jump table for switch statement|63-255-255-255
18352|data|DCD loc_4778+1 - 0x47AC; jumptable 000047A8 case 1|205-255-255-255
18356|data|DCD loc_482E+1 - 0x47AC; jumptable 000047A8 case 2|131-0-0-0
18360|data|DCD loc_4834+1 - 0x47AC; jumptable 000047A8 case 3|137-0-0-0
18364|data|DCD loc_47FC+1 - 0x47AC; jumptable 000047A8 case 4|81-0-0-0
18368|data|DCD def_47A8+1 - 0x47AC; jumptable 000047A8 default case, case 5|123-255-255-255
18372|data|DCD loc_473E+1 - 0x47AC; jumptable 000047A8 case 6|147-255-255-255
18376|data|DCD loc_481A+1 - 0x47AC; jumptable 000047A8 case 7|111-0-0-0
18380|data|DCD loc_47D8+1 - 0x47AC; jumptable 000047A8 case 8|45-0-0-0
18384|code|BL              writefileimage|255-247-24-254
18388|code|LDR             R4, [R5,#(testcalls - 0x17060)]|108-104
18390|code|B               loc_45DC|1-231
18392|code|BL              do_flatten; jumptable 000047A8 case 8|255-247-104-254
18396|code|LDR             R3, =(off_17008 - 0x47E2); "PAST_EOF"|51-75
18398|code|ADD             R3, PC; off_17008|123-68
18400|code|LDR             R3, [R3,#(sizechecks - 0x17008)]|219-107
18402|code|CBZ             R3, loc_47F0|43-177
18404|code|LDR             R3, =(fsxlogf - 0x47EA)|50-75
18406|code|ADD             R3, PC; fsxlogf|123-68
18408|code|LDR             R2, [R3,#(testcalls - 0x17060)]|90-104
18410|code|LDR             R3, [R3,#(simulatedopcount - 0x17060)]|91-106
18412|code|CMP             R2, R3|154-66
18414|code|BHI             loc_4828|27-216
18416|code|LDR             R3, =(fsxlogf - 0x47F6)|48-75
18418|code|ADD             R3, PC; fsxlogf|123-68
18420|code|LDR             R3, [R3,#(closeopen - 0x17060)]|219-104
18422|code|CBNZ            R3, loc_4820|155-185
18424|code|POP.W           {R4-R8,PC}|189-232-240-129
18428|code|LDR             R3, =(fsxlogf - 0x4802); jumptable 000047A8 case 4|46-75
18430|code|ADD             R3, PC; fsxlogf|123-68
18432|code|LDR             R3, [R3,#(style - 0x17060)]|155-109
18434|code|CBZ             R3, loc_4856|67-179
18436|code|MOV             R0, R7|56-70
18438|code|BL              dotruncate|255-247-81-250
18442|code|B               loc_47DC|231-231
18444|code|LDR             R3, =(fsxlogf - 0x4812)|43-75
18446|code|ADD             R3, PC; fsxlogf|123-68
18448|code|LDRD.W          R2, R3, [R3,#0x18]|211-233-6-35
18452|code|ORRS            R3, R2|19-67
18454|code|BEQ.W           loc_46D0|63-244-91-175
18458|code|BL              do_clone; jumptable 000047A8 case 7|255-247-189-252
18462|code|B               loc_47DC|221-231
18464|code|POP.W           {R4-R8,LR}|189-232-240-65
18468|code|B.W             docloseopen|255-247-134-190
18472|code|BL              check_size|254-247-116-254
18476|code|B               loc_47F0|224-231
18478|code|MOVS            R0, #0xB7; jumptable 000047A8 case 2|183-32
18480|code|BLX             exit|253-247-232-234
18484|code|MOVS            R0, #0xB6; jumptable 000047A8 case 3|182-32
18486|code|BLX             exit|253-247-230-234
18490|code|MOV             R2, R8|66-70
18492|code|MOV             R3, R7|59-70
18494|code|MOVS            R0, #0x65 ; 'e'|101-32
18496|code|MOVS            R1, #6|6-33
18498|code|BL              log4|254-247-221-250
18502|code|B               loc_47DC|201-231
18504|code|MOV             R2, R8|66-70
18506|code|MOV             R3, R7|59-70
18508|code|MOVS            R0, #0x65 ; 'e'|101-32
18510|code|MOVS            R1, #5|5-33
18512|code|BL              log4|254-247-214-250
18516|code|B               loc_47DC|194-231
18518|code|BLX             random|253-247-228-235
18522|code|LDR             R3, =(off_17008 - 0x4860); "PAST_EOF"|25-75
18524|code|ADD             R3, PC; off_17008|123-68
18526|code|LDR             R1, [R3,#(maxfilelen - 0x17008)]|153-107
18528|code|BL              sub_4BDC|0-240-188-249
18532|code|MOV             R7, R1|15-70
18534|code|B               loc_4804|205-231
18536|data|DCD off_17008 - 0x45C6; "PAST_EOF"|66-42-1-0
18540|data|DCD fsxlogf - 0x45D0|144-42-1-0
18544|data|DCD fsxlogf - 0x45E4|124-42-1-0
18548|data|DCD fsxlogf - 0x4602|94-42-1-0
18552|data|DCD fsxlogf - 0x461C|68-42-1-0
18556|data|DCD off_17008 - 0x462E; "PAST_EOF"|218-41-1-0
18560|data|DCD fsxlogf - 0x463C|36-42-1-0
18564|data|DCD aLu - 0x468C; "%lu...\n"|0-22-0-0
18568|data|DCD off_17008 - 0x46A6; "PAST_EOF"|98-41-1-0
18572|data|DCD fsxlogf - 0x46E4|124-41-1-0
18576|data|DCD fsxlogf - 0x46F0|112-41-1-0
18580|data|DCD fsxlogf - 0x4720|64-41-1-0
18584|data|DCD aTestUnknownOpe - 0x472C; "test: unknown operation"|104-21-0-0
18588|data|DCD off_17008 - 0x473A; "PAST_EOF"|206-40-1-0
18592|data|DCD fsxlogf - 0x4744|28-41-1-0
18596|data|DCD fsxlogf - 0x4774|236-40-1-0
18600|data|DCD off_17008 - 0x477E; "PAST_EOF"|138-40-1-0
18604|data|DCD off_17008 - 0x47E2; "PAST_EOF"|38-40-1-0
18608|data|DCD fsxlogf - 0x47EA|118-40-1-0
18612|data|DCD fsxlogf - 0x47F6|106-40-1-0
18616|data|DCD fsxlogf - 0x4802|94-40-1-0
18620|data|DCD fsxlogf - 0x4812|78-40-1-0
18624|data|DCD off_17008 - 0x4860; "PAST_EOF"|168-39-1-0
18628|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x48CE)|7-72
18630|code|MOVS            R1, #1|1-33
18632|code|LDR             R4, =(stdout_ptr - 0x16E6C)|7-76
18634|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
18636|code|LDR             R2, =(aUsageS - 0x48D4); "usage: %s"|7-74
18638|code|PUSH            {R3,LR}|8-181
18640|code|ADD             R2, PC; "usage: %s"|122-68
18642|code|LDR             R0, [R0,R4]; stdout|0-89
18644|code|LDR             R3, =(aFsxDnqxaflowzB - 0x48DC); "fsx [-dnqxAFLOWZ] [-b opnum] [-c Prob] "...|6-75
18646|code|LDR             R0, [R0]|0-104
18648|code|ADD             R3, PC; "fsx [-dnqxAFLOWZ] [-b opnum] [-c Prob] "...|123-68
18650|code|BLX             __fprintf_chk|253-247-186-234
18654|code|MOVS            R0, #0x59 ; 'Y'; status|89-32
18656|code|BLX             exit|253-247-144-234
18660|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x48CE|158-37-1-0
18664|data|DCD stdout_ptr - 0x16E6C|120-1-0-0
18668|data|DCD aUsageS - 0x48D4; "usage: %s"|216-19-0-0
18672|data|DCD aFsxDnqxaflowzB - 0x48DC; "fsx [-dnqxAFLOWZ] [-b opnum] [-c Prob] "...|220-19-0-0
18676|code|MOVS            R3, #0|0-35
18678|code|PUSH            {R4,LR}|16-181
18680|code|MOV             R2, R3; base|26-70
18682|code|MOV             R4, R1|12-70
18684|code|STR             R3, [R1]|11-96
18686|code|BLX             strtol|253-247-100-234
18690|code|LDR             R3, [R4]|35-104
18692|code|CBZ             R3, def_4910; jumptable 00004910 default case, cases 67-74,76,78-86,88-97,99-106,108,110-118|35-179
18694|code|LDRSB.W         R2, [R3]|147-249-0-32
18698|code|SUBS            R2, #0x42 ; 'B'; switch 54 cases|66-58
18700|code|CMP             R2, #0x35|53-42
18702|code|BHI             def_4910; jumptable 00004910 default case, cases 67-74,76,78-86,88-97,99-106,108,110-118|31-216
18704|code|TBB.W           [PC,R2]; switch jump|223-232-2-240
18708|data|DCB 0x1F; jump table for switch statement|31
18709|data|DCB 0x1E|30
18710|data|DCB 0x1E|30
18711|data|DCB 0x1E|30
18712|data|DCB 0x1E|30
18713|data|DCB 0x1E|30
18714|data|DCB 0x1E|30
18715|data|DCB 0x1E|30
18716|data|DCB 0x1E|30
18717|data|DCB 0x23|35
18718|data|DCB 0x1E|30
18719|data|DCB 0x27|39
18720|data|DCB 0x1E|30
18721|data|DCB 0x1E|30
18722|data|DCB 0x1E|30
18723|data|DCB 0x1E|30
18724|data|DCB 0x1E|30
18725|data|DCB 0x1E|30
18726|data|DCB 0x1E|30
18727|data|DCB 0x1E|30
18728|data|DCB 0x1E|30
18729|data|DCB 0x1B|27
18730|data|DCB 0x1E|30
18731|data|DCB 0x1E|30
18732|data|DCB 0x1E|30
18733|data|DCB 0x1E|30
18734|data|DCB 0x1E|30
18735|data|DCB 0x1E|30
18736|data|DCB 0x1E|30
18737|data|DCB 0x1E|30
18738|data|DCB 0x1E|30
18739|data|DCB 0x1E|30
18740|data|DCB 0x1F|31
18741|data|DCB 0x1E|30
18742|data|DCB 0x1E|30
18743|data|DCB 0x1E|30
18744|data|DCB 0x1E|30
18745|data|DCB 0x1E|30
18746|data|DCB 0x1E|30
18747|data|DCB 0x1E|30
18748|data|DCB 0x1E|30
18749|data|DCB 0x23|35
18750|data|DCB 0x1E|30
18751|data|DCB 0x27|39
18752|data|DCB 0x1E|30
18753|data|DCB 0x1E|30
18754|data|DCB 0x1E|30
18755|data|DCB 0x1E|30
18756|data|DCB 0x1E|30
18757|data|DCB 0x1E|30
18758|data|DCB 0x1E|30
18759|data|DCB 0x1E|30
18760|data|DCB 0x1E|30
18761|data|DCB 0x1B|27
18762|code|LSLS            R0, R0, #2; jumptable 00004910 cases 87,119|128-0
18764|code|ADDS            R3, #1|1-51
18766|code|STR             R3, [R4]|35-96
18768|code|POP             {R4,PC}; jumptable 00004910 default case, cases 67-74,76,78-86,88-97,99-106,108,110-118|16-189
18770|code|ADDS            R3, #1; jumptable 00004910 cases 66,98|1-51
18772|code|LSLS            R0, R0, #9|64-2
18774|code|STR             R3, [R4]|35-96
18776|code|POP             {R4,PC}|16-189
18778|code|ADDS            R3, #1; jumptable 00004910 cases 75,107|1-51
18780|code|LSLS            R0, R0, #0xA|128-2
18782|code|STR             R3, [R4]|35-96
18784|code|POP             {R4,PC}|16-189
18786|code|ADDS            R3, #1; jumptable 00004910 cases 77,109|1-51
18788|code|LSLS            R0, R0, #0x14|0-5
18790|code|STR             R3, [R4]|35-96
18792|code|POP             {R4,PC}|16-189
18794|data|ALIGN 4|0-191
18796|code|LDR             R3, =(fsxlogf - 0x4974)|2-75
18798|code|MOVS            R2, #0|0-34
18800|code|ADD             R3, PC; fsxlogf|123-68
18802|code|STR             R2, [R3,#(fallocate_calls - 0x17060)]|90-101
18804|code|BX              LR|112-71
18806|data|ALIGN 4|0-191
18808|data|DCD fsxlogf - 0x4974|236-38-1-0
18812|data|ALIGN 0x10|0-0-0-0
18816|code|SUBS            R2, R1, #1|74-30
18818|code|IT EQ|8-191
18820|code|BXEQ            LR|112-71
18822|code|BCC.W           loc_4BD2|192-240-36-129
18826|code|CMP             R0, R1|136-66
18828|code|BLS.W           loc_4BBC|64-242-22-129
18832|code|TST             R1, R2|17-66
18834|code|BEQ.W           loc_4BC4|0-240-23-129
18838|code|CLZ.W           R3, R0|176-250-128-243
18842|code|CLZ.W           R2, R1|177-250-129-242
18846|code|SUB.W           R3, R2, R3|162-235-3-3
18850|code|RSB.W           R3, R3, #0x1F|195-241-31-3
18854|code|ADR             R2, loc_49B8|4-162
18856|code|ADD.W           R3, R2, R3,LSL#4|2-235-3-19
18860|code|MOV.W           R2, #0|79-240-0-2
18864|code|MOV             PC, R3|159-70
18866|data|ALIGN 4|0-191
18868|code|NOP.W|175-243-0-128
18872|code|CMP.W           R0, R1,LSL#31|176-235-193-127
18876|code|NOP|0-191
18878|code|ADC.W           R2, R2, R2|66-235-2-2
18882|code|IT CS|40-191
18884|code|SUBCS.W         R0, R0, R1,LSL#31|160-235-193-112
18888|code|CMP.W           R0, R1,LSL#30|176-235-129-127
18892|code|NOP|0-191
18894|code|ADC.W           R2, R2, R2|66-235-2-2
18898|code|IT CS|40-191
18900|code|SUBCS.W         R0, R0, R1,LSL#30|160-235-129-112
18904|code|CMP.W           R0, R1,LSL#29|176-235-65-127
18908|code|NOP|0-191
18910|code|ADC.W           R2, R2, R2|66-235-2-2
18914|code|IT CS|40-191
18916|code|SUBCS.W         R0, R0, R1,LSL#29|160-235-65-112
18920|code|CMP.W           R0, R1,LSL#28|176-235-1-127
18924|code|NOP|0-191
18926|code|ADC.W           R2, R2, R2|66-235-2-2
18930|code|IT CS|40-191
18932|code|SUBCS.W         R0, R0, R1,LSL#28|160-235-1-112
18936|code|CMP.W           R0, R1,LSL#27|176-235-193-111
18940|code|NOP|0-191
18942|code|ADC.W           R2, R2, R2|66-235-2-2
18946|code|IT CS|40-191
18948|code|SUBCS.W         R0, R0, R1,LSL#27|160-235-193-96
18952|code|CMP.W           R0, R1,LSL#26|176-235-129-111
18956|code|NOP|0-191
18958|code|ADC.W           R2, R2, R2|66-235-2-2
18962|code|IT CS|40-191
18964|code|SUBCS.W         R0, R0, R1,LSL#26|160-235-129-96
18968|code|CMP.W           R0, R1,LSL#25|176-235-65-111
18972|code|NOP|0-191
18974|code|ADC.W           R2, R2, R2|66-235-2-2
18978|code|IT CS|40-191
18980|code|SUBCS.W         R0, R0, R1,LSL#25|160-235-65-96
18984|code|CMP.W           R0, R1,LSL#24|176-235-1-111
18988|code|NOP|0-191
18990|code|ADC.W           R2, R2, R2|66-235-2-2
18994|code|IT CS|40-191
18996|code|SUBCS.W         R0, R0, R1,LSL#24|160-235-1-96
19000|code|CMP.W           R0, R1,LSL#23|176-235-193-95
19004|code|NOP|0-191
19006|code|ADC.W           R2, R2, R2|66-235-2-2
19010|code|IT CS|40-191
19012|code|SUBCS.W         R0, R0, R1,LSL#23|160-235-193-80
19016|code|CMP.W           R0, R1,LSL#22|176-235-129-95
19020|code|NOP|0-191
19022|code|ADC.W           R2, R2, R2|66-235-2-2
19026|code|IT CS|40-191
19028|code|SUBCS.W         R0, R0, R1,LSL#22|160-235-129-80
19032|code|CMP.W           R0, R1,LSL#21|176-235-65-95
19036|code|NOP|0-191
19038|code|ADC.W           R2, R2, R2|66-235-2-2
19042|code|IT CS|40-191
19044|code|SUBCS.W         R0, R0, R1,LSL#21|160-235-65-80
19048|code|CMP.W           R0, R1,LSL#20|176-235-1-95
19052|code|NOP|0-191
19054|code|ADC.W           R2, R2, R2|66-235-2-2
19058|code|IT CS|40-191
19060|code|SUBCS.W         R0, R0, R1,LSL#20|160-235-1-80
19064|code|CMP.W           R0, R1,LSL#19|176-235-193-79
19068|code|NOP|0-191
19070|code|ADC.W           R2, R2, R2|66-235-2-2
19074|code|IT CS|40-191
19076|code|SUBCS.W         R0, R0, R1,LSL#19|160-235-193-64
19080|code|CMP.W           R0, R1,LSL#18|176-235-129-79
19084|code|NOP|0-191
19086|code|ADC.W           R2, R2, R2|66-235-2-2
19090|code|IT CS|40-191
19092|code|SUBCS.W         R0, R0, R1,LSL#18|160-235-129-64
19096|code|CMP.W           R0, R1,LSL#17|176-235-65-79
19100|code|NOP|0-191
19102|code|ADC.W           R2, R2, R2|66-235-2-2
19106|code|IT CS|40-191
19108|code|SUBCS.W         R0, R0, R1,LSL#17|160-235-65-64
19112|code|CMP.W           R0, R1,LSL#16|176-235-1-79
19116|code|NOP|0-191
19118|code|ADC.W           R2, R2, R2|66-235-2-2
19122|code|IT CS|40-191
19124|code|SUBCS.W         R0, R0, R1,LSL#16|160-235-1-64
19128|code|CMP.W           R0, R1,LSL#15|176-235-193-63
19132|code|NOP|0-191
19134|code|ADC.W           R2, R2, R2|66-235-2-2
19138|code|IT CS|40-191
19140|code|SUBCS.W         R0, R0, R1,LSL#15|160-235-193-48
19144|code|CMP.W           R0, R1,LSL#14|176-235-129-63
19148|code|NOP|0-191
19150|code|ADC.W           R2, R2, R2|66-235-2-2
19154|code|IT CS|40-191
19156|code|SUBCS.W         R0, R0, R1,LSL#14|160-235-129-48
19160|code|CMP.W           R0, R1,LSL#13|176-235-65-63
19164|code|NOP|0-191
19166|code|ADC.W           R2, R2, R2|66-235-2-2
19170|code|IT CS|40-191
19172|code|SUBCS.W         R0, R0, R1,LSL#13|160-235-65-48
19176|code|CMP.W           R0, R1,LSL#12|176-235-1-63
19180|code|NOP|0-191
19182|code|ADC.W           R2, R2, R2|66-235-2-2
19186|code|IT CS|40-191
19188|code|SUBCS.W         R0, R0, R1,LSL#12|160-235-1-48
19192|code|CMP.W           R0, R1,LSL#11|176-235-193-47
19196|code|NOP|0-191
19198|code|ADC.W           R2, R2, R2|66-235-2-2
19202|code|IT CS|40-191
19204|code|SUBCS.W         R0, R0, R1,LSL#11|160-235-193-32
19208|code|CMP.W           R0, R1,LSL#10|176-235-129-47
19212|code|NOP|0-191
19214|code|ADC.W           R2, R2, R2|66-235-2-2
19218|code|IT CS|40-191
19220|code|SUBCS.W         R0, R0, R1,LSL#10|160-235-129-32
19224|code|CMP.W           R0, R1,LSL#9|176-235-65-47
19228|code|NOP|0-191
19230|code|ADC.W           R2, R2, R2|66-235-2-2
19234|code|IT CS|40-191
19236|code|SUBCS.W         R0, R0, R1,LSL#9|160-235-65-32
19240|code|CMP.W           R0, R1,LSL#8|176-235-1-47
19244|code|NOP|0-191
19246|code|ADC.W           R2, R2, R2|66-235-2-2
19250|code|IT CS|40-191
19252|code|SUBCS.W         R0, R0, R1,LSL#8|160-235-1-32
19256|code|CMP.W           R0, R1,LSL#7|176-235-193-31
19260|code|NOP|0-191
19262|code|ADC.W           R2, R2, R2|66-235-2-2
19266|code|IT CS|40-191
19268|code|SUBCS.W         R0, R0, R1,LSL#7|160-235-193-16
19272|code|CMP.W           R0, R1,LSL#6|176-235-129-31
19276|code|NOP|0-191
19278|code|ADC.W           R2, R2, R2|66-235-2-2
19282|code|IT CS|40-191
19284|code|SUBCS.W         R0, R0, R1,LSL#6|160-235-129-16
19288|code|CMP.W           R0, R1,LSL#5|176-235-65-31
19292|code|NOP|0-191
19294|code|ADC.W           R2, R2, R2|66-235-2-2
19298|code|IT CS|40-191
19300|code|SUBCS.W         R0, R0, R1,LSL#5|160-235-65-16
19304|code|CMP.W           R0, R1,LSL#4|176-235-1-31
19308|code|NOP|0-191
19310|code|ADC.W           R2, R2, R2|66-235-2-2
19314|code|IT CS|40-191
19316|code|SUBCS.W         R0, R0, R1,LSL#4|160-235-1-16
19320|code|CMP.W           R0, R1,LSL#3|176-235-193-15
19324|code|NOP|0-191
19326|code|ADC.W           R2, R2, R2|66-235-2-2
19330|code|IT CS|40-191
19332|code|SUBCS.W         R0, R0, R1,LSL#3|160-235-193-0
19336|code|CMP.W           R0, R1,LSL#2|176-235-129-15
19340|code|NOP|0-191
19342|code|ADC.W           R2, R2, R2|66-235-2-2
19346|code|IT CS|40-191
19348|code|SUBCS.W         R0, R0, R1,LSL#2|160-235-129-0
19352|code|CMP.W           R0, R1,LSL#1|176-235-65-15
19356|code|NOP|0-191
19358|code|ADC.W           R2, R2, R2|66-235-2-2
19362|code|IT CS|40-191
19364|code|SUBCS.W         R0, R0, R1,LSL#1|160-235-65-0
19368|code|CMP.W           R0, R1|176-235-1-15
19372|code|NOP|0-191
19374|code|ADC.W           R2, R2, R2|66-235-2-2
19378|code|IT CS|40-191
19380|code|SUBCS.W         R0, R0, R1|160-235-1-0
19384|code|MOV             R0, R2|16-70
19386|code|BX              LR|112-71
19388|code|ITE EQ|12-191
19390|code|MOVEQ           R0, #1|1-32
19392|code|MOVNE           R0, #0|0-32
19394|code|BX              LR|112-71
19396|code|CLZ.W           R2, R1|177-250-129-242
19400|code|RSB.W           R2, R2, #0x1F|194-241-31-2
19404|code|LSR.W           R0, R0, R2|32-250-2-240
19408|code|BX              LR|112-71
19410|code|CBZ             R0, loc_4BD8|8-177
19412|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
19416|code|B.W             loc_4EE0|0-240-130-185
19420|code|CMP             R1, #0|0-41
19422|code|BEQ             loc_4BD2|248-208
19424|code|PUSH.W          {R0,R1,LR}|45-233-3-64
19428|code|BL              sub_4980|255-247-204-254
19432|code|POP.W           {R1,R2,LR}|189-232-6-64
19436|code|MUL.W           R3, R2, R0|2-251-0-243
19440|code|SUB.W           R1, R1, R3|161-235-3-1
19444|code|BX              LR|112-71
19446|data|ALIGN 4|0-191
19448|code|CMP             R1, #0|0-41
19450|code|BEQ.W           loc_4E7A|0-240-62-129
19454|code|EOR.W           R12, R0, R1|128-234-1-12
19458|code|IT MI|72-191
19460|code|NEGMI           R1, R1|73-66
19462|code|SUBS            R2, R1, #1|74-30
19464|code|BEQ.W           loc_4E4A|0-240-31-129
19468|code|MOVS            R3, R0|3-0
19470|code|IT MI|72-191
19472|code|NEGMI           R3, R0|67-66
19474|code|CMP             R3, R1|139-66
19476|code|BLS.W           loc_4E54|64-242-30-129
19480|code|TST             R1, R2|17-66
19482|code|BEQ.W           loc_4E64|0-240-35-129
19486|code|CLZ.W           R2, R3|179-250-131-242
19490|code|CLZ.W           R0, R1|177-250-129-240
19494|code|SUB.W           R2, R0, R2|160-235-2-2
19498|code|RSB.W           R2, R2, #0x1F|194-241-31-2
19502|code|ADR             R0, loc_4C40|4-160
19504|code|ADD.W           R2, R0, R2,LSL#4|0-235-2-18
19508|code|MOV.W           R0, #0|79-240-0-0
19512|code|MOV             PC, R2|151-70
19514|data|ALIGN 4|0-191
19516|code|NOP.W|175-243-0-128
19520|code|CMP.W           R3, R1,LSL#31|179-235-193-127
19524|code|NOP|0-191
19526|code|ADC.W           R0, R0, R0|64-235-0-0
19530|code|IT CS|40-191
19532|code|SUBCS.W         R3, R3, R1,LSL#31|163-235-193-115
19536|code|CMP.W           R3, R1,LSL#30|179-235-129-127
19540|code|NOP|0-191
19542|code|ADC.W           R0, R0, R0|64-235-0-0
19546|code|IT CS|40-191
19548|code|SUBCS.W         R3, R3, R1,LSL#30|163-235-129-115
19552|code|CMP.W           R3, R1,LSL#29|179-235-65-127
19556|code|NOP|0-191
19558|code|ADC.W           R0, R0, R0|64-235-0-0
19562|code|IT CS|40-191
19564|code|SUBCS.W         R3, R3, R1,LSL#29|163-235-65-115
19568|code|CMP.W           R3, R1,LSL#28|179-235-1-127
19572|code|NOP|0-191
19574|code|ADC.W           R0, R0, R0|64-235-0-0
19578|code|IT CS|40-191
19580|code|SUBCS.W         R3, R3, R1,LSL#28|163-235-1-115
19584|code|CMP.W           R3, R1,LSL#27|179-235-193-111
19588|code|NOP|0-191
19590|code|ADC.W           R0, R0, R0|64-235-0-0
19594|code|IT CS|40-191
19596|code|SUBCS.W         R3, R3, R1,LSL#27|163-235-193-99
19600|code|CMP.W           R3, R1,LSL#26|179-235-129-111
19604|code|NOP|0-191
19606|code|ADC.W           R0, R0, R0|64-235-0-0
19610|code|IT CS|40-191
19612|code|SUBCS.W         R3, R3, R1,LSL#26|163-235-129-99
19616|code|CMP.W           R3, R1,LSL#25|179-235-65-111
19620|code|NOP|0-191
19622|code|ADC.W           R0, R0, R0|64-235-0-0
19626|code|IT CS|40-191
19628|code|SUBCS.W         R3, R3, R1,LSL#25|163-235-65-99
19632|code|CMP.W           R3, R1,LSL#24|179-235-1-111
19636|code|NOP|0-191
19638|code|ADC.W           R0, R0, R0|64-235-0-0
19642|code|IT CS|40-191
19644|code|SUBCS.W         R3, R3, R1,LSL#24|163-235-1-99
19648|code|CMP.W           R3, R1,LSL#23|179-235-193-95
19652|code|NOP|0-191
19654|code|ADC.W           R0, R0, R0|64-235-0-0
19658|code|IT CS|40-191
19660|code|SUBCS.W         R3, R3, R1,LSL#23|163-235-193-83
19664|code|CMP.W           R3, R1,LSL#22|179-235-129-95
19668|code|NOP|0-191
19670|code|ADC.W           R0, R0, R0|64-235-0-0
19674|code|IT CS|40-191
19676|code|SUBCS.W         R3, R3, R1,LSL#22|163-235-129-83
19680|code|CMP.W           R3, R1,LSL#21|179-235-65-95
19684|code|NOP|0-191
19686|code|ADC.W           R0, R0, R0|64-235-0-0
19690|code|IT CS|40-191
19692|code|SUBCS.W         R3, R3, R1,LSL#21|163-235-65-83
19696|code|CMP.W           R3, R1,LSL#20|179-235-1-95
19700|code|NOP|0-191
19702|code|ADC.W           R0, R0, R0|64-235-0-0
19706|code|IT CS|40-191
19708|code|SUBCS.W         R3, R3, R1,LSL#20|163-235-1-83
19712|code|CMP.W           R3, R1,LSL#19|179-235-193-79
19716|code|NOP|0-191
19718|code|ADC.W           R0, R0, R0|64-235-0-0
19722|code|IT CS|40-191
19724|code|SUBCS.W         R3, R3, R1,LSL#19|163-235-193-67
19728|code|CMP.W           R3, R1,LSL#18|179-235-129-79
19732|code|NOP|0-191
19734|code|ADC.W           R0, R0, R0|64-235-0-0
19738|code|IT CS|40-191
19740|code|SUBCS.W         R3, R3, R1,LSL#18|163-235-129-67
19744|code|CMP.W           R3, R1,LSL#17|179-235-65-79
19748|code|NOP|0-191
19750|code|ADC.W           R0, R0, R0|64-235-0-0
19754|code|IT CS|40-191
19756|code|SUBCS.W         R3, R3, R1,LSL#17|163-235-65-67
19760|code|CMP.W           R3, R1,LSL#16|179-235-1-79
19764|code|NOP|0-191
19766|code|ADC.W           R0, R0, R0|64-235-0-0
19770|code|IT CS|40-191
19772|code|SUBCS.W         R3, R3, R1,LSL#16|163-235-1-67
19776|code|CMP.W           R3, R1,LSL#15|179-235-193-63
19780|code|NOP|0-191
19782|code|ADC.W           R0, R0, R0|64-235-0-0
19786|code|IT CS|40-191
19788|code|SUBCS.W         R3, R3, R1,LSL#15|163-235-193-51
19792|code|CMP.W           R3, R1,LSL#14|179-235-129-63
19796|code|NOP|0-191
19798|code|ADC.W           R0, R0, R0|64-235-0-0
19802|code|IT CS|40-191
19804|code|SUBCS.W         R3, R3, R1,LSL#14|163-235-129-51
19808|code|CMP.W           R3, R1,LSL#13|179-235-65-63
19812|code|NOP|0-191
19814|code|ADC.W           R0, R0, R0|64-235-0-0
19818|code|IT CS|40-191
19820|code|SUBCS.W         R3, R3, R1,LSL#13|163-235-65-51
19824|code|CMP.W           R3, R1,LSL#12|179-235-1-63
19828|code|NOP|0-191
19830|code|ADC.W           R0, R0, R0|64-235-0-0
19834|code|IT CS|40-191
19836|code|SUBCS.W         R3, R3, R1,LSL#12|163-235-1-51
19840|code|CMP.W           R3, R1,LSL#11|179-235-193-47
19844|code|NOP|0-191
19846|code|ADC.W           R0, R0, R0|64-235-0-0
19850|code|IT CS|40-191
19852|code|SUBCS.W         R3, R3, R1,LSL#11|163-235-193-35
19856|code|CMP.W           R3, R1,LSL#10|179-235-129-47
19860|code|NOP|0-191
19862|code|ADC.W           R0, R0, R0|64-235-0-0
19866|code|IT CS|40-191
19868|code|SUBCS.W         R3, R3, R1,LSL#10|163-235-129-35
19872|code|CMP.W           R3, R1,LSL#9|179-235-65-47
19876|code|NOP|0-191
19878|code|ADC.W           R0, R0, R0|64-235-0-0
19882|code|IT CS|40-191
19884|code|SUBCS.W         R3, R3, R1,LSL#9|163-235-65-35
19888|code|CMP.W           R3, R1,LSL#8|179-235-1-47
19892|code|NOP|0-191
19894|code|ADC.W           R0, R0, R0|64-235-0-0
19898|code|IT CS|40-191
19900|code|SUBCS.W         R3, R3, R1,LSL#8|163-235-1-35
19904|code|CMP.W           R3, R1,LSL#7|179-235-193-31
19908|code|NOP|0-191
19910|code|ADC.W           R0, R0, R0|64-235-0-0
19914|code|IT CS|40-191
19916|code|SUBCS.W         R3, R3, R1,LSL#7|163-235-193-19
19920|code|CMP.W           R3, R1,LSL#6|179-235-129-31
19924|code|NOP|0-191
19926|code|ADC.W           R0, R0, R0|64-235-0-0
19930|code|IT CS|40-191
19932|code|SUBCS.W         R3, R3, R1,LSL#6|163-235-129-19
19936|code|CMP.W           R3, R1,LSL#5|179-235-65-31
19940|code|NOP|0-191
19942|code|ADC.W           R0, R0, R0|64-235-0-0
19946|code|IT CS|40-191
19948|code|SUBCS.W         R3, R3, R1,LSL#5|163-235-65-19
19952|code|CMP.W           R3, R1,LSL#4|179-235-1-31
19956|code|NOP|0-191
19958|code|ADC.W           R0, R0, R0|64-235-0-0
19962|code|IT CS|40-191
19964|code|SUBCS.W         R3, R3, R1,LSL#4|163-235-1-19
19968|code|CMP.W           R3, R1,LSL#3|179-235-193-15
19972|code|NOP|0-191
19974|code|ADC.W           R0, R0, R0|64-235-0-0
19978|code|IT CS|40-191
19980|code|SUBCS.W         R3, R3, R1,LSL#3|163-235-193-3
19984|code|CMP.W           R3, R1,LSL#2|179-235-129-15
19988|code|NOP|0-191
19990|code|ADC.W           R0, R0, R0|64-235-0-0
19994|code|IT CS|40-191
19996|code|SUBCS.W         R3, R3, R1,LSL#2|163-235-129-3
20000|code|CMP.W           R3, R1,LSL#1|179-235-65-15
20004|code|NOP|0-191
20006|code|ADC.W           R0, R0, R0|64-235-0-0
20010|code|IT CS|40-191
20012|code|SUBCS.W         R3, R3, R1,LSL#1|163-235-65-3
20016|code|CMP.W           R3, R1|179-235-1-15
20020|code|NOP|0-191
20022|code|ADC.W           R0, R0, R0|64-235-0-0
20026|code|IT CS|40-191
20028|code|SUBCS.W         R3, R3, R1|163-235-1-3
20032|code|CMP.W           R12, #0|188-241-0-15
20036|code|IT MI|72-191
20038|code|NEGMI           R0, R0|64-66
20040|code|BX              LR|112-71
20042|code|TEQ.W           R12, R0|156-234-0-15
20046|code|IT MI|72-191
20048|code|NEGMI           R0, R0|64-66
20050|code|BX              LR|112-71
20052|code|IT CC|56-191
20054|code|MOVCC           R0, #0|0-32
20056|code|ITT EQ|4-191
20058|code|MOVEQ.W         R0, R12,ASR#31|79-234-236-112
20062|code|ORREQ.W         R0, R0, #1|64-240-1-0
20066|code|BX              LR|112-71
20068|code|CLZ.W           R2, R1|177-250-129-242
20072|code|RSB.W           R2, R2, #0x1F|194-241-31-2
20076|code|CMP.W           R12, #0|188-241-0-15
20080|code|LSR.W           R0, R3, R2|35-250-2-240
20084|code|IT MI|72-191
20086|code|NEGMI           R0, R0|64-66
20088|code|BX              LR|112-71
20090|code|CMP             R0, #0|0-40
20092|code|IT GT|200-191
20094|code|MOVGT           R0, #0x7FFFFFFF|111-240-0-64
20098|code|IT LT|184-191
20100|code|MOVLT.W         R0, #0x80000000|79-240-0-64
20104|code|B.W             loc_4EE0|0-240-42-184
20108|code|CMP             R1, #0|0-41
20110|code|BEQ             loc_4E7A|244-208
20112|code|PUSH.W          {R0,R1,LR}|45-233-3-64
20116|code|BL              sub_4BFE|255-247-179-254
20120|code|POP.W           {R1,R2,LR}|189-232-6-64
20124|code|MUL.W           R3, R2, R0|2-251-0-243
20128|code|SUB.W           R1, R1, R3|161-235-3-1
20132|code|BX              LR|112-71
20134|data|ALIGN 4|0-191
20136|code|CBNZ            R3, loc_4EC8|115-185
20138|code|CBNZ            R2, loc_4EC8|106-185
20140|code|CMP             R1, #0|0-41
20142|code|IT EQ|8-191
20144|code|CMPEQ           R0, #0|0-40
20146|code|ITT LT|188-191
20148|code|MOVLT           R0, #0|0-32
20150|code|MOVLT.W         R1, #0x80000000|79-240-0-65
20154|code|ITT GT|196-191
20156|code|MOVGT           R1, #0x7FFFFFFF|111-240-0-65
20160|code|MOVGT.W         R0, #0xFFFFFFFF|79-240-255-48
20164|code|B.W             loc_4EE0|0-240-12-184
20168|code|SUB             SP, SP, #8|130-176
20170|code|MOV             R12, SP|236-70
20172|code|PUSH.W          {R12,LR}|45-233-0-80
20176|code|BL              sub_4F58|0-240-66-248
20180|code|LDR.W           LR, [SP,#0x10+var_C]|221-248-4-224
20184|code|ADD             SP, SP, #8|2-176
20186|code|POP             {R2,R3}|12-188
20188|code|BX              LR|112-71
20190|data|ALIGN 0x10|0-191
20192|code|PUSH            {R1,LR}|2-181
20194|code|MOV.W           R0, #8; sig|79-240-8-0
20198|code|BLX             raise|253-247-84-232
20202|code|POP             {R1,PC}|2-189
20204|code|VMOV            D7, R0, R1|65-236-23-11
20208|code|VCMPE.F64       D7, #0.0|181-238-192-123
20212|code|VMRS            APSR_nzcv, FPSCR|241-238-16-250
20216|code|BMI             loc_4EFE|1-212
20218|code|B.W             sub_4F10|0-240-9-184
20222|code|PUSH            {R3,LR}|8-181
20224|code|EOR.W           R1, R1, #0x80000000|129-240-0-65
20228|code|BL              sub_4F10|0-240-4-248
20232|code|NEGS            R0, R0|64-66
20234|code|SBC.W           R1, R1, R1,LSL#1|97-235-65-1
20238|code|POP             {R3,PC}|8-189
20240|code|VLDR            D6, =2.32830644e-10|159-237-13-107
20244|code|MOVS            R2, #0|0-34
20246|code|VMOV            D7, R0, R1|65-236-23-11
20250|code|VMUL.F64        D6, D7, D6|39-238-6-107
20254|code|VLDR            D5, =4.2949673e9|159-237-12-91
20258|code|VCVT.U32.F64    S12, D6|188-238-198-107
20262|code|VCVT.F64.U32    D4, S12|184-238-70-75
20266|code|VMOV            R3, S12|22-238-16-58
20270|code|VMLS.F64        D7, D4, D5|4-238-69-123
20274|code|VCVT.U32.F64    S15, D7|252-238-199-123
20278|code|VMOV            R0, S15|23-238-144-10
20282|code|ORR.W           R2, R2, R0|66-234-0-2
20286|code|MOV             R0, R2|16-70
20288|code|MOV             R1, R3|25-70
20290|code|BX              LR|112-71
20292|data|DCD 0x8000F3AF|175-243-0-128
20296|data|DCFD 2.32830644e-10|0-0-0-0-0-0-240-61
20304|data|DCFD 4.2949673e9|0-0-0-0-0-0-240-65
20312|code|PUSH.W          {R4-R8,LR}|45-233-240-65
20316|code|MOV             R8, R3|152-70
20318|code|MOV             R4, R2|20-70
20320|code|LDR             R5, [SP,#0x18+arg_0]|6-157
20322|code|MOV             R6, R0|6-70
20324|code|MOV             R7, R1|15-70
20326|code|BL              sub_4FB8|0-240-39-248
20330|code|UMULL.W         R2, R3, R4, R0|164-251-0-35
20334|code|MOV             LR, R0|134-70
20336|code|MUL.W           R4, R4, R1|4-251-1-244
20340|code|SUBS            R6, R6, R2|182-26
20342|code|MLA.W           R4, R0, R8, R4|0-251-8-68
20346|code|ADD             R3, R4|35-68
20348|code|SBC.W           R7, R7, R3|103-235-3-7
20352|code|STRD.W          R6, R7, [R5]|197-233-0-103
20356|code|POP.W           {R4-R8,PC}|189-232-240-129
20360|code|PUSH.W          {R3-R9,LR}|45-233-248-67
20364|code|MOV             R7, R2|23-70
20366|code|MOV             R8, R0|128-70
20368|code|MOV             R9, R1|137-70
20370|code|MOV             R5, R3|29-70
20372|code|LDR             R6, [SP,#0x20]|8-158
20374|code|BL              sub_5110|0-240-187-248
20378|code|MUL.W           R3, R0, R5|0-251-5-243
20382|code|UMULL.W         R4, R5, R0, R7|160-251-7-69
20386|code|MLA.W           R7, R7, R1, R3|7-251-1-55
20390|code|SUBS.W          R4, R8, R4|184-235-4-4
20394|code|ADD             R5, R7|61-68
20396|code|SBC.W           R5, R9, R5|105-235-5-5
20400|code|STRD.W          R4, R5, [R6]|198-233-0-69
20404|code|POP.W           {R3-R9,PC}|189-232-248-131
20408|code|CMP             R1, #0|0-41
20410|code|PUSH.W          {R4-R11,LR}|45-233-240-79
20414|code|ITTT GE|162-191
20416|code|MOVGE           R8, R0|128-70
20418|code|MOVGE           R9, R1|137-70
20420|code|MOVGE.W         LR, #0|79-240-0-14
20424|code|BLT.W           loc_5100|192-242-154-128
20428|code|CMP             R3, #0|0-43
20430|code|ITT GE|164-191
20432|code|MOVGE           R0, R2|16-70
20434|code|MOVGE           R1, R3|25-70
20436|code|BLT.W           loc_50F4|192-242-142-128
20440|code|CMP             R9, R1|137-69
20442|code|MOV             R4, R8|68-70
20444|code|IT EQ|8-191
20446|code|CMPEQ           R8, R0|128-69
20448|code|MOV             R5, R9|77-70
20450|code|ITT CC|60-191
20452|code|MOVCC           R0, #0|0-32
20454|code|MOVCC           R1, #0|0-33
20456|code|BCC             loc_50BA|103-211
20458|code|CLZ.W           R2, R1|177-250-129-242
20462|code|CMP             R1, #0|0-41
20464|code|BEQ             loc_50E0|118-208
20466|code|CLZ.W           R3, R9|185-250-137-243
20470|code|CMP.W           R9, #0|185-241-0-15
20474|code|BEQ             loc_50D8|109-208
20476|code|SUBS            R3, R2, R3|211-26
20478|code|SUB.W           R12, R3, #0x20 ; ' '|163-241-32-12
20482|code|LSL.W           R7, R1, R3|1-250-3-247
20486|code|LSL.W           R2, R0, R12|0-250-12-242
20490|code|RSB.W           R10, R3, #0x20 ; ' '|195-241-32-10
20494|code|ORRS            R7, R2|23-67
20496|code|LSR.W           R2, R0, R10|32-250-10-242
20500|code|ORRS            R7, R2|23-67
20502|code|LSL.W           R6, R0, R3|0-250-3-246
20506|code|CMP             R9, R7|185-69
20508|code|MOV             R2, R3|26-70
20510|code|IT EQ|8-191
20512|code|CMPEQ           R8, R6|176-69
20514|code|ITT CC|60-191
20516|code|MOVCC           R0, #0|0-32
20518|code|MOVCC           R1, #0|0-33
20520|code|BCC             loc_5044|12-211
20522|code|MOV.W           R11, #1|79-240-1-11
20526|code|LSR.W           R4, R11, R10|43-250-10-244
20530|code|LSL.W           R1, R11, R12|11-250-12-241
20534|code|ORRS            R1, R4|33-67
20536|code|SUBS.W          R4, R8, R6|184-235-6-4
20540|code|SBC.W           R5, R9, R7|105-235-7-5
20544|code|LSL.W           R0, R11, R3|11-250-3-240
20548|code|CMP             R3, #0|0-43
20550|code|BEQ             loc_50BA|56-208
20552|code|LSRS            R7, R7, #1|127-8
20554|code|MOV.W           R6, R6,RRX|79-234-54-6
20558|code|B               loc_5064|9-224
20560|code|SUBS            R4, R4, R6|164-27
20562|code|SBC.W           R5, R5, R7|101-235-7-5
20566|code|ADDS            R4, R4, R4|36-25
20568|code|ADCS            R5, R5|109-65
20570|code|ADDS            R4, #1|1-52
20572|code|ADC.W           R5, R5, #0|69-241-0-5
20576|code|SUBS            R3, #1|1-59
20578|code|BEQ             loc_5074|7-208
20580|code|CMP             R5, R7|189-66
20582|code|IT EQ|8-191
20584|code|CMPEQ           R4, R6|180-66
20586|code|BCS             loc_5050|241-210
20588|code|ADDS            R4, R4, R4|36-25
20590|code|ADCS            R5, R5|109-65
20592|code|SUBS            R3, #1|1-59
20594|code|BNE             loc_5064|247-209
20596|code|RSB.W           R7, R2, #0x20 ; ' '|194-241-32-7
20600|code|LSR.W           R3, R4, R2|36-250-2-243
20604|code|LSL.W           R7, R5, R7|5-250-7-247
20608|code|SUB.W           R6, R2, #0x20 ; ' '|162-241-32-6
20612|code|ORRS            R3, R7|59-67
20614|code|LSR.W           R6, R5, R6|37-250-6-246
20618|code|ORRS            R3, R6|51-67
20620|code|LSR.W           R12, R5, R2|37-250-2-252
20624|code|SUB.W           R8, R2, #0x20 ; ' '|162-241-32-8
20628|code|ADDS            R0, R0, R4|0-25
20630|code|LSL.W           R7, R12, R2|12-250-2-247
20634|code|LSL.W           R8, R3, R8|3-250-8-248
20638|code|RSB.W           R12, R2, #0x20 ; ' '|194-241-32-12
20642|code|ORR.W           R7, R7, R8|71-234-8-7
20646|code|LSR.W           R12, R3, R12|35-250-12-252
20650|code|LSL.W           R6, R3, R2|3-250-2-246
20654|code|ADCS            R1, R5|105-65
20656|code|ORR.W           R7, R7, R12|71-234-12-7
20660|code|SUBS            R0, R0, R6|128-27
20662|code|SBC.W           R1, R1, R7|97-235-7-1
20666|code|MOVS.W          R2, LR|30-241-0-2
20670|code|MOV.W           R3, #0|79-240-0-3
20674|code|IT NE|24-191
20676|code|MOVNE           R2, #1|1-34
20678|code|NEGS            R4, R2|84-66
20680|code|SBC.W           R5, R3, R3,LSL#1|99-235-67-5
20684|code|EORS            R0, R4|96-64
20686|code|EORS            R1, R5|105-64
20688|code|ADDS            R0, R0, R2|128-24
20690|code|ADCS            R1, R3|89-65
20692|code|POP.W           {R4-R11,PC}|189-232-240-143
20696|code|CLZ.W           R3, R8|184-250-136-243
20700|code|ADDS            R3, #0x20 ; ' '|32-51
20702|code|B               loc_4FFC|141-231
20704|code|CLZ.W           R3, R0|176-250-128-243
20708|code|ADD.W           R2, R3, #0x20 ; ' '|3-241-32-2
20712|code|CLZ.W           R3, R9|185-250-137-243
20716|code|CMP.W           R9, #0|185-241-0-15
20720|code|BNE             loc_4FFC|132-209
20722|code|B               loc_50D8|241-231
20724|code|NEGS            R0, R2|80-66
20726|code|MVN.W           LR, LR|111-234-14-14
20730|code|SBC.W           R1, R3, R3,LSL#1|99-235-67-1
20734|code|B               loc_4FD8|107-231
20736|code|RSBS.W          R8, R0, #0|208-241-0-8
20740|code|MOV.W           LR, #0xFFFFFFFF|79-240-255-62
20744|code|SBC.W           R9, R1, R1,LSL#1|97-235-65-9
20748|code|B               loc_4FCC|94-231
20750|data|ALIGN 0x10|0-191
20752|code|PUSH.W          {R4-R8,LR}|45-233-240-65
20756|code|MOV             R5, R1|13-70
20758|code|CMP             R5, R3|157-66
20760|code|MOV             R4, R0|4-70
20762|code|IT EQ|8-191
20764|code|CMPEQ           R4, R2|148-66
20766|code|MOV             R0, R2|16-70
20768|code|MOV             R1, R3|25-70
20770|code|BCC             loc_51F4|103-211
20772|code|CLZ.W           R2, R3|179-250-131-242
20776|code|CMP             R3, #0|0-43
20778|code|BEQ             loc_5204|107-208
20780|code|CLZ.W           R3, R5|181-250-133-243
20784|code|CMP             R5, #0|0-45
20786|code|BEQ             loc_51FC|99-208
20788|code|SUBS            R3, R2, R3|211-26
20790|code|SUB.W           R2, R3, #0x20 ; ' '|163-241-32-2
20794|code|LSL.W           R7, R1, R3|1-250-3-247
20798|code|RSB.W           R12, R3, #0x20 ; ' '|195-241-32-12
20802|code|LSL.W           R1, R0, R2|0-250-2-241
20806|code|ORRS            R7, R1|15-67
20808|code|LSR.W           R1, R0, R12|32-250-12-241
20812|code|ORRS            R7, R1|15-67
20814|code|LSL.W           R6, R0, R3|0-250-3-246
20818|code|CMP             R5, R7|189-66
20820|code|MOV             LR, R3|158-70
20822|code|IT EQ|8-191
20824|code|CMPEQ           R4, R6|180-66
20826|code|ITT CC|60-191
20828|code|MOVCC           R0, #0|0-32
20830|code|MOVCC           R1, #0|0-33
20832|code|BCC             loc_517C|12-211
20834|code|MOV.W           R8, #1|79-240-1-8
20838|code|SUBS            R4, R4, R6|164-27
20840|code|LSR.W           R12, R8, R12|40-250-12-252
20844|code|LSL.W           R1, R8, R2|8-250-2-241
20848|code|ORR.W           R1, R1, R12|65-234-12-1
20852|code|SBC.W           R5, R5, R7|101-235-7-5
20856|code|LSL.W           R0, R8, R3|8-250-3-240
20860|code|CMP             R3, #0|0-43
20862|code|BEQ             locret_51F8|59-208
20864|code|LSRS            R7, R7, #1|127-8
20866|code|MOV.W           R6, R6,RRX|79-234-54-6
20870|code|B               loc_519C|9-224
20872|code|SUBS            R4, R4, R6|164-27
20874|code|SBC.W           R5, R5, R7|101-235-7-5
20878|code|ADDS            R4, R4, R4|36-25
20880|code|ADCS            R5, R5|109-65
20882|code|ADDS            R4, #1|1-52
20884|code|ADC.W           R5, R5, #0|69-241-0-5
20888|code|SUBS            R3, #1|1-59
20890|code|BEQ             loc_51AC|7-208
20892|code|CMP             R5, R7|189-66
20894|code|IT EQ|8-191
20896|code|CMPEQ           R4, R6|180-66
20898|code|BCS             loc_5188|241-210
20900|code|ADDS            R4, R4, R4|36-25
20902|code|ADCS            R5, R5|109-65
20904|code|SUBS            R3, #1|1-59
20906|code|BNE             loc_519C|247-209
20908|code|RSB.W           R2, LR, #0x20 ; ' '|206-241-32-2
20912|code|LSR.W           R6, R4, LR|36-250-14-246
20916|code|LSL.W           R2, R5, R2|5-250-2-242
20920|code|SUB.W           R3, LR, #0x20 ; ' '|174-241-32-3
20924|code|LSR.W           R3, R5, R3|37-250-3-243
20928|code|ORRS            R6, R2|22-67
20930|code|ORRS            R6, R3|30-67
20932|code|LSR.W           R7, R5, LR|37-250-14-247
20936|code|SUB.W           R12, LR, #0x20 ; ' '|174-241-32-12
20940|code|ADDS            R0, R0, R4|0-25
20942|code|LSL.W           R3, R7, LR|7-250-14-243
20946|code|LSL.W           R12, R6, R12|6-250-12-252
20950|code|RSB.W           R7, LR, #0x20 ; ' '|206-241-32-7
20954|code|ORR.W           R3, R3, R12|67-234-12-3
20958|code|LSR.W           R7, R6, R7|38-250-7-247
20962|code|LSL.W           R2, R6, LR|6-250-14-242
20966|code|ADCS            R1, R5|105-65
20968|code|ORRS            R3, R7|59-67
20970|code|SUBS            R0, R0, R2|128-26
20972|code|SBC.W           R1, R1, R3|97-235-3-1
20976|code|POP.W           {R4-R8,PC}|189-232-240-129
20980|code|MOVS            R0, #0|0-32
20982|code|MOVS            R1, #0|0-33
20984|code|POP.W           {R4-R8,PC}|189-232-240-129
20988|code|CLZ.W           R3, R4|180-250-132-243
20992|code|ADDS            R3, #0x20 ; ' '|32-51
20994|code|B               loc_5134|151-231
20996|code|CLZ.W           R3, R0|176-250-128-243
21000|code|ADD.W           R2, R3, #0x20 ; ' '|3-241-32-2
21004|code|CLZ.W           R3, R5|181-250-133-243
21008|code|CMP             R5, #0|0-45
21010|code|BNE             loc_5134|143-209
21012|code|B               loc_51FC|242-231
21014|data|ALIGN 4|0-191
21016|code|PUSH.W          {R3-R9,LR}|45-233-248-67
21020|code|MOV             R7, R0|7-70
21022|code|LDR             R6, =(off_16D4C - 0x522A)|12-78
21024|code|MOV             R8, R1|136-70
21026|code|LDR             R5, =(off_16D48 - 0x5230)|12-77
21028|code|MOV             R9, R2|145-70
21030|code|ADD             R6, PC; off_16D4C|126-68
21032|code|BLX             .init_proc|252-247-154-237
21036|code|ADD             R5, PC; off_16D48|125-68
21038|code|SUBS            R6, R6, R5|118-27
21040|code|ASRS            R6, R6, #2|182-16
21042|code|BEQ             locret_524A|10-208
21044|code|SUBS            R5, #4|4-61
21046|code|MOVS            R4, #0|0-36
21048|code|ADDS            R4, #1|1-52
21050|code|LDR.W           R3, [R5,#4]!|85-248-4-63
21054|code|MOV             R0, R7|56-70
21056|code|MOV             R1, R8|65-70
21058|code|MOV             R2, R9|74-70
21060|code|BLX             R3|152-71
21062|code|CMP             R4, R6|180-66
21064|code|BNE             loc_5238|246-209
21066|code|POP.W           {R3-R9,PC}|189-232-248-131
21070|data|ALIGN 0x10|0-191
21072|data|DCD off_16D4C - 0x522A|34-27-1-0
21076|data|DCD off_16D48 - 0x5230|24-27-1-0
21080|code|BX              LR|112-71
21082|data|ALIGN 4|0-191
21084|code|PUSH            {R3,LR}; _fini|8-64-45-233
21088|code|POP             {R3,PC}|8-128-189-232
25972|data|ALIGN 8|0-0-0-0
93512|data|DCD sub_2C34+1|53-44-0-0
93516|data|DCD sub_2BF4+1|245-43-0-0
93520|data|DCD 0|0-0-0-0
93524|data|Elf32_Dyn <1, <1>>; DT_NEEDED librbd.so.1|1-0-0-0-1-0-0-0
93532|data|Elf32_Dyn <1, <0x147>>; DT_NEEDED librados.so.2|1-0-0-0-71-1-0-0
93540|data|Elf32_Dyn <1, <0x1E2>>; DT_NEEDED libm.so.6|1-0-0-0-226-1-0-0
93548|data|Elf32_Dyn <1, <0x1F1>>; DT_NEEDED libc.so.6|1-0-0-0-241-1-0-0
93556|data|Elf32_Dyn <1, <0x391>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-145-3-0-0
93564|data|Elf32_Dyn <0xC, <0x1D60>>; DT_INIT|12-0-0-0-96-29-0-0
93572|data|Elf32_Dyn <0xD, <0x525C>>; DT_FINI|13-0-0-0-92-82-0-0
93580|data|Elf32_Dyn <0x19, <0x16D48>>; DT_INIT_ARRAY|25-0-0-0-72-109-1-0
93588|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
93596|data|Elf32_Dyn <0x1A, <0x16D4C>>; DT_FINI_ARRAY|26-0-0-0-76-109-1-0
93604|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
93612|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
93620|data|Elf32_Dyn <5, <0x10E4>>; DT_STRTAB|5-0-0-0-228-16-0-0
93628|data|Elf32_Dyn <6, <0x564>>; DT_SYMTAB|6-0-0-0-100-5-0-0
93636|data|Elf32_Dyn <0xA, <0x76C>>; DT_STRSZ|10-0-0-0-108-7-0-0
93644|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
93652|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
93660|data|Elf32_Dyn <3, <0x16E6C>>; DT_PLTGOT|3-0-0-0-108-110-1-0
93668|data|Elf32_Dyn <2, <0x230>>; DT_PLTRELSZ|2-0-0-0-48-2-0-0
93676|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
93684|data|Elf32_Dyn <0x17, <0x1B30>>; DT_JMPREL|23-0-0-0-48-27-0-0
93692|data|Elf32_Dyn <0x11, <0x1A20>>; DT_REL|17-0-0-0-32-26-0-0
93700|data|Elf32_Dyn <0x12, <0x110>>; DT_RELSZ|18-0-0-0-16-1-0-0
93708|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
93716|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
93724|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
93732|data|Elf32_Dyn <0x6FFFFFFE, <0x19C0>>; DT_VERNEED|254-255-255-111-192-25-0-0
93740|data|Elf32_Dyn <0x6FFFFFFF, <3>>; DT_VERNEEDNUM|255-255-255-111-3-0-0-0
93748|data|Elf32_Dyn <0x6FFFFFF0, <0x1850>>; DT_VERSYM|240-255-255-111-80-24-0-0
93756|data|Elf32_Dyn <0x6FFFFFFA, <0x18>>; DT_RELCOUNT|250-255-255-111-24-0-0-0
93764|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
93772|data|ALIGN 0x10|0-0-0-0
93804|data|DCD stru_16D54|84-109-1-0
93808|data|DCD 0|0-0-0-0
93812|data|DCD dword_0|0-0-0-0
93816|data|DCD __imp_signal|124-180-1-0
93820|data|DCD __imp_setstate|128-180-1-0
93824|data|DCD __imp_rand|132-180-1-0
93828|data|DCD __imp_rbd_read|136-180-1-0
93832|data|DCD __imp_rados_ioctx_create|140-180-1-0
93836|data|DCD __imp_rbd_write|144-180-1-0
93840|data|DCD __imp_strtol|148-180-1-0
93844|data|DCD __imp_free|152-180-1-0
93848|data|DCD __imp_rbd_open|156-180-1-0
93852|data|DCD __imp_rados_shutdown|164-180-1-0
93856|data|DCD __imp_rbd_remove|168-180-1-0
93860|data|DCD __imp_exit|176-180-1-0
93864|data|DCD __imp_pread64|180-180-1-0
93868|data|DCD __imp_strerror|184-180-1-0
93872|data|DCD __imp_rados_create|188-180-1-0
93876|data|DCD __imp___vsnprintf_chk|192-180-1-0
93880|data|DCD __imp_rados_connect|196-180-1-0
93884|data|DCD __imp___fprintf_chk|200-180-1-0
93888|data|DCD __imp_memset|204-180-1-0
93892|data|DCD __imp___fxstat64|208-180-1-0
93896|data|DCD __imp_rbd_close|212-180-1-0
93900|data|DCD __imp_close|216-180-1-0
93904|data|DCD __imp_rados_conf_parse_env|224-180-1-0
93908|data|DCD __imp_abort|228-180-1-0
93912|data|DCD __imp_rados_pool_create|232-180-1-0
93916|data|DCD __imp_unlink|236-180-1-0
93920|data|DCD __imp_rbd_get_parent_info|240-180-1-0
93924|data|DCD __imp_open64|244-180-1-0
93928|data|DCD __imp_rbd_discard|248-180-1-0
93932|data|DCD __imp___strncat_chk|252-180-1-0
93936|data|DCD __imp_ceil|0-181-1-0
93940|data|DCD __imp_getopt|4-181-1-0
93944|data|DCD __imp_rbd_snap_unprotect|8-181-1-0
93948|data|DCD __imp_rbd_flush|12-181-1-0
93952|data|DCD __imp_getpagesize|20-181-1-0
93956|data|DCD __imp___stack_chk_fail|24-181-1-0
93960|data|DCD __imp_rbd_create2|28-181-1-0
93964|data|DCD __imp_rbd_flatten|32-181-1-0
93968|data|DCD __imp_rbd_snap_create|36-181-1-0
93972|data|DCD __imp_rbd_snap_protect|40-181-1-0
93976|data|DCD __imp_rbd_snap_remove|44-181-1-0
93980|data|DCD __imp_sleep|48-181-1-0
93984|data|DCD __imp_initstate|52-181-1-0
93988|data|DCD __imp_raise|56-181-1-0
93992|data|DCD __imp___vfprintf_chk|60-181-1-0
93996|data|DCD __imp_setvbuf|64-181-1-0
94000|data|DCD __imp_fwrite|68-181-1-0
94004|data|DCD __imp_rbd_resize|72-181-1-0
94008|data|DCD __imp_malloc|76-181-1-0
94012|data|DCD __imp_rbd_clone2|80-181-1-0
94016|data|DCD __imp_rados_ioctx_destroy|84-181-1-0
94020|data|DCD __imp___snprintf_chk|88-181-1-0
94024|data|DCD __imp_fclose|92-181-1-0
94028|data|DCD __imp_write|96-181-1-0
94032|data|DCD __imp_lseek64|100-181-1-0
94036|data|DCD __imp_random|108-181-1-0
94040|data|DCD __imp_rados_conf_read_file|112-181-1-0
94044|data|DCD __imp_time|116-181-1-0
94048|data|DCD __imp___errno_location|120-181-1-0
94052|data|DCD __imp_strncpy|124-181-1-0
94056|data|DCD __imp___strcat_chk|128-181-1-0
94060|data|DCD __imp_fopen64|132-181-1-0
94064|data|DCD __imp_memcmp|136-181-1-0
94068|data|DCD __imp___sprintf_chk|140-181-1-0
94072|data|DCD __imp_fputs|144-181-1-0
94076|data|DCD __imp___libc_start_main|148-181-1-0
94080|data|DCD __imp_rbd_stat|152-181-1-0
94084|data|DCD __imp___gmon_start__|172-181-1-0
94088|data|DCD __imp___cxa_finalize|156-181-1-0
94092|data|DCD __imp_rbd_create|160-181-1-0
94096|data|DCD temp_buf|200-112-1-0
94100|data|DCD dirpath|204-112-1-0
94104|data|DCD __stack_chk_guard|160-180-1-0
94108|data|DCD optind|172-180-1-0
94112|data|DCD main+1|217-32-0-0
94116|data|DCD original_buf|204-116-1-0
94120|data|DCD pool|208-116-1-0
94124|data|DCD oplog|212-116-1-0
94128|data|DCD state|84-179-1-0
94132|data|DCD good_buf|84-180-1-0
94136|data|DCD page_size|88-180-1-0
94140|data|DCD page_mask|92-180-1-0
94144|data|DCD optarg|220-180-1-0
94148|data|DCD mmap_mask|96-180-1-0
94152|data|DCD o_direct|100-180-1-0
94156|data|DCD stderr|16-181-1-0
94160|data|DCD _Jv_RegisterClasses|164-181-1-0
94164|data|DCD image|104-180-1-0
94168|data|DCD cluster|108-180-1-0
94172|data|DCD ioctx|112-180-1-0
94176|data|DCD __libc_csu_init+1|25-82-0-0
94180|data|DCD stdout|104-181-1-0
94184|data|DCD _ITM_deregisterTMCloneTable|168-181-1-0
94188|data|DCD __libc_csu_fini+1|89-82-0-0
94192|data|DCD __imp___gmon_start__|172-181-1-0
94196|data|DCD _ITM_registerTMCloneTable|176-181-1-0
94200|data|DCD __imp___cxa_finalize|156-181-1-0
94204|data|DCD iname|116-180-1-0
94296|data|% 1|255
94297|data|ALIGN 0x10|255-255-255-255-255-255-255
94304|data|% 4|255-255-255-255
94308|data|% 4|255-255-255-255
94312|data|% 4|255-255-255-255
94316|data|% 4|255-255-255-255
94320|data|% 4|255-255-255-255
94324|data|% 4|255-255-255-255
94328|data|% 4|255-255-255-255
94332|data|ALIGN 0x10|255-255-255-255
94336|data|% 4|255-255-255-255
94340|data|% 4|255-255-255-255
94344|data|% 4|255-255-255-255
94348|data|% 4|255-255-255-255
94352|data|% 4|255-255-255-255
94356|data|% 4|255-255-255-255
94368|data|% 4|255-255-255-255
94372|data|% 4|255-255-255-255
94376|data|% 4|255-255-255-255
94380|data|% 4|255-255-255-255
94384|data|% 4|255-255-255-255
94388|data|% 4|255-255-255-255
94392|data|% 4|255-255-255-255
94396|data|% 4|255-255-255-255
94400|data|% 4|255-255-255-255
94404|data|% 4|255-255-255-255
94408|data|% 4|255-255-255-255
94412|data|% 1|255
95436|data|% 4|255-255-255-255
95440|data|% 4|255-255-255-255
111700|data|% 4|255-255-255-255
111704|data|% 4|255-255-255-255
111708|data|% 4|255-255-255-255
111712|data|% 4|255-255-255-255
111716|data|% 4|255-255-255-255
111720|data|% 4|255-255-255-255
111724|data|% 4|255-255-255-255
111728|data|% 4|255-255-255-255
