address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|17-15-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x2134; SHT file offset|52-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x150C; File offset|12-21-0-0
60|data|DCD unk_150C; Virtual address|12-21-0-0
64|data|DCD 0x150C; Physical address|12-21-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1518; Size in file image|24-21-0-0
168|data|DCD 0x1518; Size in memory image|24-21-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x8000; Alignment|0-128-0-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E58; File offset|88-30-0-0
188|data|DCD off_9E58; Virtual address|88-158-0-0
192|data|DCD 0x9E58; Physical address|88-158-0-0
196|data|DCD 0x1B4; Size in file image|180-1-0-0
200|data|DCD 0x1CC; Size in memory image|204-1-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x8000; Alignment|0-128-0-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E64; File offset|100-30-0-0
220|data|DCD stru_9E64; Virtual address|100-158-0-0
224|data|DCD 0x9E64; Physical address|100-158-0-0
228|data|DCD 0x100; Size in file image|0-1-0-0
232|data|DCD 0x100; Size in memory image|0-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E58; File offset|88-30-0-0
316|data|DCD off_9E58; Virtual address|88-158-0-0
320|data|DCD 0x9E58; Physical address|88-158-0-0
324|data|DCD 0x1A8; Size in file image|168-1-0-0
328|data|DCD 0x1A8; Size in memory image|168-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xC3, 0x47, 0x24, 0x36, 5, 0x1A, 0xFA, 0x68, 0x9B; Desc|195-71-36-54-5-26-250-104-155-70-227-252-159-92-244-186-99-18-199-157
436|data|DCD 3|3-0-0-0
440|data|DCD 0x22|34-0-0-0
444|data|DCD 2|2-0-0-0
448|data|DCD 6|6-0-0-0
452|data|DCD 0x35A11089, 0xA8424420|137-16-161-53-32-68-66-168
460|data|DCD 0x22, 0x26, 0x2A|34-0-0-0-38-0-0-0-42-0-0-0
472|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-107-127-154-124-12-20-226-158-118-84-60-148-89-239-151-121
516|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
532|data|Elf32_Sym <byte_4D4 - byte_4D4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
548|data|Elf32_Sym <byte_4D4 - byte_4D4, dword_9E60, 0, 3, 0, 0x14>|0-0-0-0-96-158-0-0-0-0-0-0-3-0-20-0
564|data|Elf32_Sym <aStrstr - byte_4D4, dword_0, 0, 0x12, 0, 0>; "strstr"|143-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
580|data|Elf32_Sym <aCxaFinalize - byte_4D4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|234-0-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aItmDeregistert - byte_4D4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|30-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
612|data|Elf32_Sym <aInflate - byte_4D4, dword_0, 0, 0x12, 0, 0>; "inflate"|60-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aRead - byte_4D4, dword_0, 0, 0x12, 0, 0>; "read"|174-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aFree - byte_4D4, dword_0, 0, 0x12, 0, 0>; "free"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aOptind - byte_4D4, dword_0, 0, 0x11, 0, 0>; "optind"|101-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
676|data|Elf32_Sym <aPerror - byte_4D4, dword_0, 0, 0x12, 0, 0>; "perror"|116-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aStderr - byte_4D4, dword_0, 0, 0x11, 0, 0>; "stderr"|214-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
708|data|Elf32_Sym <aFwrite - byte_4D4, dword_0, 0, 0x12, 0, 0>; "fwrite"|221-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStrcpy - byte_4D4, dword_0, 0, 0x12, 0, 0>; "strcpy"|89-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aOpen64 - byte_4D4, dword_0, 0, 0x12, 0, 0>; "open64"|167-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aMalloc - byte_4D4, dword_0, 0, 0x12, 0, 0>; "malloc"|200-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aLibcStartMain - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|7-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aGmonStart - byte_4D4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|11-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
804|data|Elf32_Sym <aExit - byte_4D4, dword_0, 0, 0x12, 0, 0>; "exit"|96-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aInflateend - byte_4D4, dword_0, 0, 0x12, 0, 0>; "inflateEnd"|68-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aStrlen - byte_4D4, dword_0, 0, 0x12, 0, 0>; "strlen"|129-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aGetopt - byte_4D4, dword_0, 0, 0x12, 0, 0>; "getopt"|179-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aErrnoLocation - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__errno_location"|150-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aSprintfChk - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__sprintf_chk"|249-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aMemset - byte_4D4, dword_0, 0, 0x12, 0, 0>; "memset"|136-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aFwrite+1 - byte_4D4, dword_0, 0, 0x12, 0, 0>; "write"|222-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aFprintfChk - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|186-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aStrrchr - byte_4D4, dword_0, 0, 0x12, 0, 0>; "strrchr"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aInflateinit2 - byte_4D4, dword_0, 0, 0x12, 0, 0>; "inflateInit2_"|46-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aJvRegisterclas - byte_4D4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|26-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
996|data|Elf32_Sym <aItmRegistertmc - byte_4D4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|58-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1012|data|Elf32_Sym <aOptarg - byte_4D4, dword_0, 0, 0x11, 0, 0>; "optarg"|207-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1028|data|Elf32_Sym <aAbort - byte_4D4, dword_0, 0, 0x12, 0, 0>; "abort"|123-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aClose - byte_4D4, dword_0, 0, 0x12, 0, 0>; "close"|228-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aBssEnd+1 - byte_4D4, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|131-1-0-0-36-160-0-0-0-0-0-0-16-0-24-0
1076|data|Elf32_Sym <aEdata - byte_4D4, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|97-1-0-0-12-160-0-0-0-0-0-0-16-0-23-0
1092|data|Elf32_Sym <aDataStart - byte_4D4, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|84-1-0-0-0-160-0-0-0-0-0-0-16-0-23-0
1108|data|Elf32_Sym <aEnd_0 - byte_4D4, _end, 0, 0x10, 0, 0x18>; "_end"|150-1-0-0-36-160-0-0-0-0-0-0-16-0-24-0
1124|data|Elf32_Sym <aBssEnd - byte_4D4, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|130-1-0-0-36-160-0-0-0-0-0-0-16-0-24-0
1140|data|Elf32_Sym <aLibcCsuInit - byte_4D4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|171-1-0-0-221-18-0-0-64-0-0-0-18-0-13-0
1156|data|Elf32_Sym <aBssStart - byte_4D4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|104-1-0-0-12-160-0-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aLibcStartMain+0xD - byte_4D4, main+1, 0x578, 0x12, 0, 0xD>; "main"|20-1-0-0-153-9-0-0-120-5-0-0-18-0-13-0
1188|data|Elf32_Sym <aLibcCsuFini - byte_4D4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|155-1-0-0-29-19-0-0-2-0-0-0-18-0-13-0
1204|data|Elf32_Sym <aBssStart_0 - byte_4D4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|116-1-0-0-12-160-0-0-0-0-0-0-16-0-24-0
1220|data|Elf32_Sym <aEnd - byte_4D4, _end, 0, 0x10, 0, 0x18>; "__end__"|142-1-0-0-36-160-0-0-0-0-0-0-16-0-24-0
1236|data|DCB 0|0
1237|data|DCB "libz.so.1",0|108-105-98-122-46-115-111-46-49-0
1247|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1262|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1282|data|DCB "inflateInit2_",0|105-110-102-108-97-116-101-73-110-105-116-50-95-0
1296|data|DCB "inflate",0|105-110-102-108-97-116-101-0
1304|data|DCB "inflateEnd",0|105-110-102-108-97-116-101-69-110-100-0
1315|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1325|data|DCB "strcpy",0|115-116-114-99-112-121-0
1332|data|DCB "exit",0|101-120-105-116-0
1337|data|DCB "optind",0|111-112-116-105-110-100-0
1344|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
1352|data|DCB "perror",0|112-101-114-114-111-114-0
1359|data|DCB "abort",0|97-98-111-114-116-0
1365|data|DCB "strlen",0|115-116-114-108-101-110-0
1372|data|DCB "memset",0|109-101-109-115-101-116-0
1379|data|DCB "strstr",0|115-116-114-115-116-114-0
1386|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1403|data|DCB "open64",0|111-112-101-110-54-52-0
1410|data|DCB "read",0|114-101-97-100-0
1415|data|DCB "getopt",0|103-101-116-111-112-116-0
1422|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1436|data|DCB "malloc",0|109-97-108-108-111-99-0
1443|data|DCB "optarg",0|111-112-116-97-114-103-0
1450|data|DCB "stderr",0|115-116-100-101-114-114-0
1457|data|DCB "fwrite",0|102-119-114-105-116-101-0
1464|data|DCB "close",0|99-108-111-115-101-0
1470|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1485|data|DCB "__sprintf_chk",0|95-95-115-112-114-105-110-116-102-95-99-104-107-0
1499|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1517|data|DCB "free",0|102-114-101-101-0
1522|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1550|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1576|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1589|data|DCB "_edata",0|95-101-100-97-116-97-0
1596|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1608|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1622|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1634|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1642|data|DCB "_end",0|95-101-110-100-0
1647|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1663|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1679|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1689|data|DCB 0|0
1690|data|DCW 0|0-0
1692|data|DCW 0|0-0
1694|data|DCW 0|0-0
1696|data|DCW 2; strstr@@GLIBC_2.4|2-0
1698|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1700|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1702|data|DCW 0; local  symbol: inflate|0-0
1704|data|DCW 2; read@@GLIBC_2.4|2-0
1706|data|DCW 2; free@@GLIBC_2.4|2-0
1708|data|DCW 2; optind@@GLIBC_2.4|2-0
1710|data|DCW 2; perror@@GLIBC_2.4|2-0
1712|data|DCW 2; stderr@@GLIBC_2.4|2-0
1714|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1716|data|DCW 2; strcpy@@GLIBC_2.4|2-0
1718|data|DCW 2; open64@@GLIBC_2.4|2-0
1720|data|DCW 2; malloc@@GLIBC_2.4|2-0
1722|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1724|data|DCW 0; local  symbol: __gmon_start__|0-0
1726|data|DCW 2; exit@@GLIBC_2.4|2-0
1728|data|DCW 0; local  symbol: inflateEnd|0-0
1730|data|DCW 2; strlen@@GLIBC_2.4|2-0
1732|data|DCW 2; getopt@@GLIBC_2.4|2-0
1734|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
1736|data|DCW 2; __sprintf_chk@@GLIBC_2.4|2-0
1738|data|DCW 2; memset@@GLIBC_2.4|2-0
1740|data|DCW 2; write@@GLIBC_2.4|2-0
1742|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1744|data|DCW 2; strrchr@@GLIBC_2.4|2-0
1746|data|DCW 0; local  symbol: inflateInit2_|0-0
1748|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1750|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1752|data|DCW 2; optarg@@GLIBC_2.4|2-0
1754|data|DCW 2; abort@@GLIBC_2.4|2-0
1756|data|DCW 2; close@@GLIBC_2.4|2-0
1758|data|DCW 1; global symbol: _bss_end__|1-0
1760|data|DCW 1; global symbol: _edata|1-0
1762|data|DCW 1; global symbol: __data_start|1-0
1764|data|DCW 1; global symbol: _end|1-0
1766|data|DCW 1; global symbol: __bss_end__|1-0
1768|data|DCW 1; global symbol: __libc_csu_init|1-0
1770|data|DCW 1; global symbol: __bss_start|1-0
1772|data|DCW 1; global symbol: main|1-0
1774|data|DCW 1; global symbol: __libc_csu_fini|1-0
1776|data|DCW 1; global symbol: __bss_start__|1-0
1778|data|DCW 1; global symbol: __end__|1-0
1780|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_4D4, 0x10, 0>; "libc.so.6"|1-0-1-0-79-0-0-0-16-0-0-0-0-0-0-0
1796|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_4D4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-187-1-0-0-0-0-0-0
1812|data|Elf32_Rel <0x9E58, 0x17>; R_ARM_RELATIVE|88-158-0-0-23-0-0-0
1820|data|Elf32_Rel <0x9E5C, 0x17>; R_ARM_RELATIVE|92-158-0-0-23-0-0-0
1828|data|Elf32_Rel <0x9FD4, 0x17>; R_ARM_RELATIVE|212-159-0-0-23-0-0-0
1836|data|Elf32_Rel <0x9FEC, 0x17>; R_ARM_RELATIVE|236-159-0-0-23-0-0-0
1844|data|Elf32_Rel <0x9FF0, 0x17>; R_ARM_RELATIVE|240-159-0-0-23-0-0-0
1852|data|Elf32_Rel <0xA004, 0x17>; R_ARM_RELATIVE|4-160-0-0-23-0-0-0
1860|data|Elf32_Rel <0x9FD8, 0x415>; R_ARM_GLOB_DAT __cxa_finalize|216-159-0-0-21-4-0-0
1868|data|Elf32_Rel <0x9FDC, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|220-159-0-0-21-5-0-0
1876|data|Elf32_Rel <0x9FE0, 0x915>; R_ARM_GLOB_DAT optind|224-159-0-0-21-9-0-0
1884|data|Elf32_Rel <0x9FE4, 0xB15>; R_ARM_GLOB_DAT stderr|228-159-0-0-21-11-0-0
1892|data|Elf32_Rel <0x9FE8, 0x1115>; R_ARM_GLOB_DAT __gmon_start__|232-159-0-0-21-17-0-0
1900|data|Elf32_Rel <0x9FF4, 0x1D15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-159-0-0-21-29-0-0
1908|data|Elf32_Rel <0x9FF8, 0x1E15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-159-0-0-21-30-0-0
1916|data|Elf32_Rel <0x9FFC, 0x1F15>; R_ARM_GLOB_DAT optarg|252-159-0-0-21-31-0-0
1924|data|Elf32_Rel <0x9F70, 0x316>; R_ARM_JUMP_SLOT strstr|112-159-0-0-22-3-0-0
1932|data|Elf32_Rel <0x9F74, 0x416>; R_ARM_JUMP_SLOT __cxa_finalize|116-159-0-0-22-4-0-0
1940|data|Elf32_Rel <0x9F78, 0x616>; R_ARM_JUMP_SLOT inflate|120-159-0-0-22-6-0-0
1948|data|Elf32_Rel <0x9F7C, 0x716>; R_ARM_JUMP_SLOT read|124-159-0-0-22-7-0-0
1956|data|Elf32_Rel <0x9F80, 0x816>; R_ARM_JUMP_SLOT free|128-159-0-0-22-8-0-0
1964|data|Elf32_Rel <0x9F84, 0xA16>; R_ARM_JUMP_SLOT perror|132-159-0-0-22-10-0-0
1972|data|Elf32_Rel <0x9F88, 0xC16>; R_ARM_JUMP_SLOT fwrite|136-159-0-0-22-12-0-0
1980|data|Elf32_Rel <0x9F8C, 0xD16>; R_ARM_JUMP_SLOT strcpy|140-159-0-0-22-13-0-0
1988|data|Elf32_Rel <0x9F90, 0xE16>; R_ARM_JUMP_SLOT open64|144-159-0-0-22-14-0-0
1996|data|Elf32_Rel <0x9F94, 0xF16>; R_ARM_JUMP_SLOT malloc|148-159-0-0-22-15-0-0
2004|data|Elf32_Rel <0x9F98, 0x1016>; R_ARM_JUMP_SLOT __libc_start_main|152-159-0-0-22-16-0-0
2012|data|Elf32_Rel <0x9F9C, 0x1116>; R_ARM_JUMP_SLOT __gmon_start__|156-159-0-0-22-17-0-0
2020|data|Elf32_Rel <0x9FA0, 0x1216>; R_ARM_JUMP_SLOT exit|160-159-0-0-22-18-0-0
2028|data|Elf32_Rel <0x9FA4, 0x1316>; R_ARM_JUMP_SLOT inflateEnd|164-159-0-0-22-19-0-0
2036|data|Elf32_Rel <0x9FA8, 0x1416>; R_ARM_JUMP_SLOT strlen|168-159-0-0-22-20-0-0
2044|data|Elf32_Rel <0x9FAC, 0x1516>; R_ARM_JUMP_SLOT getopt|172-159-0-0-22-21-0-0
2052|data|Elf32_Rel <0x9FB0, 0x1616>; R_ARM_JUMP_SLOT __errno_location|176-159-0-0-22-22-0-0
2060|data|Elf32_Rel <0x9FB4, 0x1716>; R_ARM_JUMP_SLOT __sprintf_chk|180-159-0-0-22-23-0-0
2068|data|Elf32_Rel <0x9FB8, 0x1816>; R_ARM_JUMP_SLOT memset|184-159-0-0-22-24-0-0
2076|data|Elf32_Rel <0x9FBC, 0x1916>; R_ARM_JUMP_SLOT write|188-159-0-0-22-25-0-0
2084|data|Elf32_Rel <0x9FC0, 0x1A16>; R_ARM_JUMP_SLOT __fprintf_chk|192-159-0-0-22-26-0-0
2092|data|Elf32_Rel <0x9FC4, 0x1B16>; R_ARM_JUMP_SLOT strrchr|196-159-0-0-22-27-0-0
2100|data|Elf32_Rel <0x9FC8, 0x1C16>; R_ARM_JUMP_SLOT inflateInit2_|200-159-0-0-22-28-0-0
2108|data|Elf32_Rel <0x9FCC, 0x2016>; R_ARM_JUMP_SLOT abort|204-159-0-0-22-32-0-0
2116|data|Elf32_Rel <0x9FD0, 0x2116>; R_ARM_JUMP_SLOT close|208-159-0-0-22-33-0-0
2124|code|PUSH            {R3,LR}|8-64-45-233
2128|code|BL              sub_F60|194-1-0-235
2132|code|POP             {R3,PC}|8-128-189-232
2136|code|PUSH            {LR}|4-224-45-229
2140|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x868)|4-224-159-229
2144|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2148|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2152|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x868|252-150-0-0
2156|code|ADR             R12, 0x874|0-198-143-226
2160|code|ADD             R12, R12, #0x9000|9-202-140-226
2164|code|LDR             PC, [R12,#(strstr_ptr - 0x9874)]!; __imp_strstr|252-246-188-229
2168|code|ADR             R12, 0x880|0-198-143-226
2172|code|ADD             R12, R12, #0x9000|9-202-140-226
2176|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x9880)]!; __imp___cxa_finalize|244-246-188-229
2180|code|ADR             R12, 0x88C|0-198-143-226
2184|code|ADD             R12, R12, #0x9000|9-202-140-226
2188|code|LDR             PC, [R12,#(inflate_ptr - 0x988C)]!; __imp_inflate|236-246-188-229
2192|code|ADR             R12, 0x898|0-198-143-226
2196|code|ADD             R12, R12, #0x9000|9-202-140-226
2200|code|LDR             PC, [R12,#(read_ptr - 0x9898)]!; __imp_read|228-246-188-229
2204|code|ADR             R12, 0x8A4|0-198-143-226
2208|code|ADD             R12, R12, #0x9000|9-202-140-226
2212|code|LDR             PC, [R12,#(free_ptr - 0x98A4)]!; __imp_free|220-246-188-229
2216|code|ADR             R12, 0x8B0|0-198-143-226
2220|code|ADD             R12, R12, #0x9000|9-202-140-226
2224|code|LDR             PC, [R12,#(perror_ptr - 0x98B0)]!; __imp_perror|212-246-188-229
2228|code|ADR             R12, 0x8BC|0-198-143-226
2232|code|ADD             R12, R12, #0x9000|9-202-140-226
2236|code|LDR             PC, [R12,#(fwrite_ptr - 0x98BC)]!; __imp_fwrite|204-246-188-229
2240|code|ADR             R12, 0x8C8|0-198-143-226
2244|code|ADD             R12, R12, #0x9000|9-202-140-226
2248|code|LDR             PC, [R12,#(strcpy_ptr - 0x98C8)]!; __imp_strcpy|196-246-188-229
2252|code|ADR             R12, 0x8D4|0-198-143-226
2256|code|ADD             R12, R12, #0x9000|9-202-140-226
2260|code|LDR             PC, [R12,#(open64_ptr - 0x98D4)]!; __imp_open64|188-246-188-229
2264|code|ADR             R12, 0x8E0|0-198-143-226
2268|code|ADD             R12, R12, #0x9000|9-202-140-226
2272|code|LDR             PC, [R12,#(malloc_ptr - 0x98E0)]!; __imp_malloc|180-246-188-229
2276|code|ADR             R12, 0x8EC|0-198-143-226
2280|code|ADD             R12, R12, #0x9000|9-202-140-226
2284|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x98EC)]!; __imp___libc_start_main|172-246-188-229
2288|code|ADR             R12, 0x8F8|0-198-143-226
2292|code|ADD             R12, R12, #0x9000|9-202-140-226
2296|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x98F8)]!; __imp___gmon_start__|164-246-188-229
2300|code|ADR             R12, 0x904|0-198-143-226
2304|code|ADD             R12, R12, #0x9000|9-202-140-226
2308|code|LDR             PC, [R12,#(exit_ptr - 0x9904)]!; __imp_exit|156-246-188-229
2312|code|ADR             R12, 0x910|0-198-143-226
2316|code|ADD             R12, R12, #0x9000|9-202-140-226
2320|code|LDR             PC, [R12,#(inflateEnd_ptr - 0x9910)]!; __imp_inflateEnd|148-246-188-229
2324|code|ADR             R12, 0x91C|0-198-143-226
2328|code|ADD             R12, R12, #0x9000|9-202-140-226
2332|code|LDR             PC, [R12,#(strlen_ptr - 0x991C)]!; __imp_strlen|140-246-188-229
2336|code|ADR             R12, 0x928|0-198-143-226
2340|code|ADD             R12, R12, #0x9000|9-202-140-226
2344|code|LDR             PC, [R12,#(getopt_ptr - 0x9928)]!; __imp_getopt|132-246-188-229
2348|code|ADR             R12, 0x934|0-198-143-226
2352|code|ADD             R12, R12, #0x9000|9-202-140-226
2356|code|LDR             PC, [R12,#(__errno_location_ptr - 0x9934)]!; __imp___errno_location|124-246-188-229
2360|code|ADR             R12, 0x940|0-198-143-226
2364|code|ADD             R12, R12, #0x9000|9-202-140-226
2368|code|LDR             PC, [R12,#(__sprintf_chk_ptr - 0x9940)]!; __imp___sprintf_chk|116-246-188-229
2372|code|ADR             R12, 0x94C|0-198-143-226
2376|code|ADD             R12, R12, #0x9000|9-202-140-226
2380|code|LDR             PC, [R12,#(memset_ptr - 0x994C)]!; __imp_memset|108-246-188-229
2384|code|ADR             R12, 0x958|0-198-143-226
2388|code|ADD             R12, R12, #0x9000|9-202-140-226
2392|code|LDR             PC, [R12,#(write_ptr - 0x9958)]!; __imp_write|100-246-188-229
2396|code|ADR             R12, 0x964|0-198-143-226
2400|code|ADD             R12, R12, #0x9000|9-202-140-226
2404|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x9964)]!; __imp___fprintf_chk|92-246-188-229
2408|code|ADR             R12, 0x970|0-198-143-226
2412|code|ADD             R12, R12, #0x9000|9-202-140-226
2416|code|LDR             PC, [R12,#(strrchr_ptr - 0x9970)]!; __imp_strrchr|84-246-188-229
2420|code|ADR             R12, 0x97C|0-198-143-226
2424|code|ADD             R12, R12, #0x9000|9-202-140-226
2428|code|LDR             PC, [R12,#(inflateInit2__ptr - 0x997C)]!; __imp_inflateInit2_ ...|76-246-188-229
2432|code|ADR             R12, 0x988|0-198-143-226
2436|code|ADD             R12, R12, #0x9000|9-202-140-226
2440|code|LDR             PC, [R12,#(abort_ptr - 0x9988)]!; __imp_abort|68-246-188-229
2444|code|ADR             R12, 0x994|0-198-143-226
2448|code|ADD             R12, R12, #0x9000|9-202-140-226
2452|code|LDR             PC, [R12,#(close_ptr - 0x9994)]!; __imp_close|60-246-188-229
2456|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2460|code|SUB             SP, SP, #0x7C|159-176
2462|code|LDR.W           R10, =(a08 - 0x9AE); "0.8"|223-248-248-164
2466|code|MOV             R4, R0|4-70
2468|code|LDR.W           R11, =(aGzrecoverS - 0x9B8); "gzrecover %s\n"|223-248-244-180
2472|code|MOV             R5, R1|13-70
2474|code|ADD             R10, PC; "0.8"|250-68
2476|code|LDR.W           R9, =(dword_A010 - 0x9BE)|223-248-240-148
2480|code|STR.W           R10, [SP,#0xA0+var_90]|205-248-16-160
2484|code|ADD             R11, PC; "gzrecover %s\n"|251-68
2486|code|LDR.W           R8, =(dword_A010 - 0x9C8)|223-248-236-132
2490|code|ADD             R9, PC; dword_A010|249-68
2492|code|LDR.W           R7, =(dword_A010 - 0x9CE)|223-248-232-116
2496|code|LDR.W           R6, =(dword_A010 - 0x9D0)|223-248-232-100
2500|code|ADD             R8, PC; dword_A010|248-68
2502|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x9D2)|223-248-232-164
2506|code|ADD             R7, PC; dword_A010|127-68
2508|code|ADD             R6, PC; dword_A010|126-68
2510|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
2512|code|LDR.W           R2, =(aHoPsvv - 0x9DC); "ho:psVv"|223-248-224-36
2516|code|MOV             R1, R5; argv|41-70
2518|code|MOV             R0, R4; argc|32-70
2520|code|ADD             R2, PC; "ho:psVv"|122-68
2522|code|BLX             getopt|255-247-162-239
2526|code|ADDS            R1, R0, #1|65-28
2528|code|BEQ             loc_A70|70-208
2530|code|SUBS            R0, #0x56 ; 'V'; switch 33 cases|86-56
2532|code|CMP             R0, #0x20|32-40
2534|code|BHI             def_9E8; jumptable 000009E8 default case, cases 87-103,105-110,113,114,116,117|64-216
2536|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
2540|data|DCB 0x28; jump table for switch statement|40
2541|data|DCB 0x3F|63
2542|data|DCB 0x3F|63
2543|data|DCB 0x3F|63
2544|data|DCB 0x3F|63
2545|data|DCB 0x3F|63
2546|data|DCB 0x3F|63
2547|data|DCB 0x3F|63
2548|data|DCB 0x3F|63
2549|data|DCB 0x3F|63
2550|data|DCB 0x3F|63
2551|data|DCB 0x3F|63
2552|data|DCB 0x3F|63
2553|data|DCB 0x3F|63
2554|data|DCB 0x3F|63
2555|data|DCB 0x3F|63
2556|data|DCB 0x3F|63
2557|data|DCB 0x3F|63
2558|data|DCB 0x25|37
2559|data|DCB 0x3F|63
2560|data|DCB 0x3F|63
2561|data|DCB 0x3F|63
2562|data|DCB 0x3F|63
2563|data|DCB 0x3F|63
2564|data|DCB 0x3F|63
2565|data|DCB 0x1C|28
2566|data|DCB 0x19|25
2567|data|DCB 0x3F|63
2568|data|DCB 0x3F|63
2569|data|DCB 0x15|21
2570|data|DCB 0x3F|63
2571|data|DCB 0x3F|63
2572|data|DCB 0x11|17
2573|data|ALIGN 2|0
2574|code|MOVS            R3, #1; jumptable 000009E8 case 118|1-35
2576|code|STR.W           R3, [R9,#(dword_A018 - 0xA010)]|201-248-8-48
2580|code|B               loc_9D0|220-231
2582|code|MOVS            R3, #1; jumptable 000009E8 case 115|1-35
2584|code|STR.W           R3, [R8,#(dword_A01C - 0xA010)]|200-248-12-48
2588|code|B               loc_9D0|216-231
2590|code|MOVS            R3, #1; jumptable 000009E8 case 112|1-35
2592|code|STR             R3, [R7,#(dword_A020 - 0xA010)]|59-97
2594|code|B               loc_9D0|213-231
2596|code|LDR.W           R3, =(optarg_ptr - 0x9F64); jumptable 000009E8 case 111|223-248-144-52
2600|code|MOVS            R2, #1|1-34
2602|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
2606|code|STR             R2, [R6]|50-96
2608|code|LDR             R3, [R3]|27-104
2610|code|STR             R3, [R6,#(dword_A014 - 0xA010)]|115-96
2612|code|B               loc_9D0|204-231
2614|code|MOVS            R0, #0; jumptable 000009E8 case 104|0-32
2616|code|BL              sub_119C|0-240-176-251
2620|code|LDR.W           R0, =(stderr_ptr - 0x9F64); jumptable 000009E8 case 86|223-248-124-4
2624|code|MOVS            R1, #1|1-33
2626|code|MOV             R2, R11|90-70
2628|code|LDR             R3, [SP,#0xA0+var_90]|4-155
2630|code|LDR.W           R0, [R10,R0]; stderr|90-248-0-0
2634|code|LDR             R0, [R0]|0-104
2636|code|BLX             __fprintf_chk|255-247-134-239
2640|code|B               loc_9D0|190-231
2642|code|LDR.W           R3, =(stderr_ptr - 0x9F64)|223-248-104-52
2646|code|MOVS            R1, #1; size|1-33
2648|code|LDR.W           R0, =(aGzrecoverCanno - 0xA66); "gzrecover: Cannot specify output filena"...|223-248-100-4
2652|code|MOVS            R2, #0x4F ; 'O'; n|79-34
2654|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
2658|code|ADD             R0, PC; "gzrecover: Cannot specify output filena"...|120-68
2660|code|LDR             R3, [R3]; s|27-104
2662|code|BLX             fwrite|255-247-38-239
2666|code|MOVS            R0, #1; jumptable 000009E8 default case, cases 87-103,105-110,113,114,116,117|1-32
2668|code|BL              sub_119C|0-240-150-251
2672|code|LDR.W           R3, =(dword_A010 - 0xA78)|223-248-80-52
2676|code|ADD             R3, PC; dword_A010|123-68
2678|code|LDR             R2, [R3]|26-104
2680|code|CBZ             R2, loc_A80|18-177
2682|code|LDR             R3, [R3,#(dword_A020 - 0xA010)]|27-105
2684|code|CMP             R3, #0|0-43
2686|code|BNE             loc_A52|232-209
2688|code|MOV.W           R0, #0x100000; size|79-244-128-16
2692|code|BLX             malloc|255-247-40-239
2696|code|MOV             R6, R0|6-70
2698|code|CMP             R0, #0|0-40
2700|code|BEQ.W           loc_E66|0-240-235-129
2704|code|LDR.W           R3, =(optind_ptr - 0x9F64)|223-248-52-52
2708|code|LDR.W           R3, [R10,R3]; optind|90-248-3-48
2712|code|LDR             R3, [R3]|27-104
2714|code|CMP             R3, R4|163-66
2716|code|BEQ             loc_B38|76-208
2718|code|LDR.W           R5, [R5,R3,LSL#2]|85-248-35-80
2722|code|MOVS            R1, #0|0-33
2724|code|MOV             R0, R5|40-70
2726|code|STR             R5, [SP,#0xA0+var_8C]|5-149
2728|code|BLX             open64|255-247-16-239
2732|code|ADDS            R2, R0, #1|66-28
2734|code|MOV             R7, R0|7-70
2736|code|BEQ.W           loc_E74|0-240-224-129
2740|code|LDR.W           R3, =(dword_A010 - 0xABC)|223-248-20-52
2744|code|ADD             R3, PC; dword_A010|123-68
2746|code|LDR             R3, [R3,#(dword_A018 - 0xA010)]|155-104
2748|code|CMP             R3, #0|0-43
2750|code|BNE.W           loc_C46|64-240-194-128
2754|code|LDR.W           R3, =(dword_A010 - 0xACA)|223-248-12-52
2758|code|ADD             R3, PC; dword_A010|123-68
2760|code|LDR             R3, [R3,#(dword_A020 - 0xA010)]|27-105
2762|code|CMP             R3, #0|0-43
2764|code|BEQ.W           loc_C3C|0-240-182-128
2768|code|MOV.W           R9, #1|79-240-1-9
2772|code|MOV.W           R0, #0x10000; size|79-244-128-48
2776|code|BLX             malloc|255-247-254-238
2780|code|MOV             R5, R0|5-70
2782|code|CMP             R0, #0|0-40
2784|code|BEQ.W           loc_E66|0-240-193-129
2788|code|MOV             R0, R7; fd|56-70
2790|code|MOV             R1, R6; buf|49-70
2792|code|MOV.W           R2, #0x100000; nbytes|79-244-128-18
2796|code|BL              sub_11D0|0-240-112-251
2800|code|ADDS            R3, R0, #1|67-28
2802|code|MOV             R4, R0|4-70
2804|code|BEQ.W           loc_E88|0-240-200-129
2808|code|CBNZ            R0, loc_B42|24-187
2810|code|LDR             R3, =(dword_A010 - 0xB00)|246-75
2812|code|ADD             R3, PC; dword_A010|123-68
2814|code|LDR             R3, [R3,#(dword_A018 - 0xA010)]|155-104
2816|code|CBNZ            R3, loc_B22|123-185
2818|code|MOV             R0, R7; fd|56-70
2820|code|BLX             close|255-247-66-239
2824|code|MOV             R0, R9; fd|72-70
2826|code|BLX             close|255-247-64-239
2830|code|MOV             R0, R6; ptr|48-70
2832|code|BLX             free|255-247-196-238
2836|code|MOV             R0, R5; ptr|40-70
2838|code|BLX             free|255-247-194-238
2842|code|MOVS            R0, #0|0-32
2844|code|ADD             SP, SP, #0x7C ; '|'|31-176
2846|code|POP.W           {R4-R11,PC}|189-232-240-143
2850|code|LDR             R3, =(stderr_ptr - 0x9F64)|230-75
2852|code|MOVS            R1, #1; size|1-33
2854|code|LDR             R0, =(aFileIsEmpty - 0xB32); "File is empty\n"|236-72
2856|code|MOVS            R2, #0xE; n|14-34
2858|code|LDR.W           R3, [R10,R3]; stderr|90-248-3-48
2862|code|ADD             R0, PC; "File is empty\n"|120-68
2864|code|LDR             R3, [R3]; s|27-104
2866|code|BLX             fwrite|255-247-192-238
2870|code|B               loc_B02|228-231
2872|code|LDR             R3, =(aStdin - 0xB40); "stdin"|232-75
2874|code|MOVS            R7, #0|0-39
2876|code|ADD             R3, PC; "stdin"|123-68
2878|code|STR             R3, [SP,#0xA0+var_8C]|5-147
2880|code|B               loc_AB4|184-231
2882|code|LDR.W           R11, =(dword_A010 - 0xB52)|223-248-156-179
2886|code|ADD.W           R8, SP, #0xA0+var_60|13-241-64-8
2890|code|MOV             R2, R0|2-70
2892|code|MOV             R1, R6|49-70
2894|code|ADD             R11, PC; dword_A010|251-68
2896|code|STR.W           R11, [SP,#0xA0+var_68]|205-248-56-176
2900|code|LDR.W           R11, =(dword_A010 - 0xB5E)|223-248-140-179
2904|code|MOV             R0, R8|64-70
2906|code|ADD             R11, PC; dword_A010|251-68
2908|code|STR.W           R11, [SP,#0xA0+var_70]|205-248-48-176
2912|code|LDR.W           R11, =(aFoundGoodDataA - 0xB72); "Found good data at byte %d in input str"...|223-248-132-179
2916|code|BL              sub_1210|0-240-84-251
2920|code|MOV             R0, R8|64-70
2922|code|BL              sub_1250|0-240-113-251
2926|code|ADD             R11, PC; "Found good data at byte %d in input str"...|251-68
2928|code|STR.W           R11, [SP,#0xA0+var_64]|205-248-60-176
2932|code|MOV             R2, R4|34-70
2934|code|LDR.W           R11, =(dword_A010 - 0xB84)|223-248-116-179
2938|code|ASRS            R3, R4, #0x1F|227-23
2940|code|STR.W           R10, [SP,#0xA0+var_9C]|205-248-4-160
2944|code|ADD             R11, PC; dword_A010|251-68
2946|code|STR.W           R11, [SP,#0xA0+var_74]|205-248-44-176
2950|code|MOV.W           R11, #0|79-240-0-11
2954|code|STR.W           R11, [SP,#0xA0+var_90]|205-248-16-176
2958|code|LDR.W           R11, =(aFoundErrorAtBy - 0xB9C); "Found error at byte %d in input stream"...|223-248-96-179
2962|code|STRD.W          R2, R3, [SP,#0xA0+var_80]|205-233-8-35
2966|code|MOVS            R3, #0|0-35
2968|code|ADD             R11, PC; "Found error at byte %d in input stream"...|251-68
2970|code|MOVS            R2, #0|0-34
2972|code|STR.W           R11, [SP,#0xA0+var_6C]|205-248-52-176
2976|code|STRD.W          R2, R3, [SP,#0xA0+var_98]|205-233-2-35
2980|code|MOVS            R3, #0|0-35
2982|code|STR             R3, [SP,#0xA0+var_78]|10-147
2984|code|STR             R3, [SP,#0xA0+var_84]|7-147
2986|code|STR             R3, [SP,#0xA0+var_88]|6-147
2988|code|MOV             R0, R8; strm|64-70
2990|code|MOVS            R1, #0; flush|0-33
2992|code|MOV.W           R3, #0x10000|79-244-128-51
2996|code|STR             R5, [SP,#0xA0+var_54]|19-149
2998|code|STR             R3, [SP,#0xA0+var_50]|20-147
3000|code|BLX             inflate|255-247-100-238
3004|code|LDR             R3, [SP,#0xA0+var_88]|6-155
3006|code|CMP             R0, #1|1-40
3008|code|MOV             R11, R0|131-70
3010|code|BLS             loc_CA4|111-217
3012|code|CBNZ            R3, loc_BE8|131-185
3014|code|LDR.W           R10, [SP,#0xA0+var_74]|221-248-44-160
3018|code|LDR.W           R11, [SP,#0xA0+var_5C]|221-248-68-176
3022|code|LDR.W           R3, [R10,#8]|218-248-8-48
3026|code|RSB.W           R10, R11, R4|203-235-4-10
3030|code|STR.W           R10, [SP,#0xA0+var_90]|205-248-16-160
3034|code|CBNZ            R3, loc_C1A|243-185
3036|code|CMP.W           R11, #0|187-241-0-15
3040|code|BEQ.W           loc_D38|0-240-170-128
3044|code|MOVS            R3, #1|1-35
3046|code|STR             R3, [SP,#0xA0+var_88]|6-147
3048|code|LDRD.W          R10, R11, [SP,#0xA0+var_98]|221-233-2-171
3052|code|MOV             R0, R8; strm|64-70
3054|code|ADDS.W          R10, R10, #1|26-241-1-10
3058|code|ADC.W           R11, R11, #0|75-241-0-11
3062|code|STRD.W          R10, R11, [SP,#0xA0+var_98]|205-233-2-171
3066|code|BLX             inflateEnd|255-247-134-238
3070|code|LDR             R2, [SP,#0xA0+var_90]|4-154
3072|code|ADD             R2, R10|82-68
3074|code|CMP             R4, R2|148-66
3076|code|BLS             loc_C5C|42-217
3078|code|ADDS            R1, R6, R2|177-24
3080|code|MOV             R0, R8|64-70
3082|code|SUBS            R2, R4, R2|162-26
3084|code|MOV.W           R11, #0|79-240-0-11
3088|code|STR.W           R11, [SP,#0xA0+var_84]|205-248-28-176
3092|code|BL              sub_1210|0-240-252-250
3096|code|B               loc_BAC|200-231
3098|code|LDR.W           R10, [SP,#0xA0+var_9C]|221-248-4-160
3102|code|MOVS            R1, #1|1-33
3104|code|LDR             R0, =(stderr_ptr - 0x9F64)|166-72
3106|code|LDR.W           LR, [SP,#0xA0+var_80]|221-248-32-224
3110|code|LDR             R2, [SP,#0xA0+var_6C]|13-154
3112|code|LDR.W           R0, [R10,R0]|90-248-0-0
3116|code|RSB.W           R3, R11, LR|203-235-14-3
3120|code|LDR             R0, [R0]|0-104
3122|code|BLX             __fprintf_chk|255-247-148-238
3126|code|LDR.W           R11, [SP,#0xA0+var_5C]|221-248-68-176
3130|code|B               loc_BDC|207-231
3132|code|LDR             R0, [SP,#0xA0+var_8C]|5-152
3134|code|BL              sub_105C|0-240-13-250
3138|code|MOV             R9, R0|129-70
3140|code|B               loc_AD4|70-231
3142|code|LDR             R0, =(stderr_ptr - 0x9F64)|157-72
3144|code|MOVS            R1, #1|1-33
3146|code|LDR             R2, =(aOpenedInputFil - 0xC56); "Opened input file for reading: %s\n"|170-74
3148|code|LDR             R3, [SP,#0xA0+var_8C]|5-155
3150|code|LDR.W           R0, [R10,R0]; stderr|90-248-0-0
3154|code|ADD             R2, PC; "Opened input file for reading: %s\n"|122-68
3156|code|LDR             R0, [R0]|0-104
3158|code|BLX             __fprintf_chk|255-247-130-238
3162|code|B               loc_AC2|50-231
3164|code|MOV             R1, R6; buf|49-70
3166|code|MOV             R0, R7; fd|56-70
3168|code|MOV.W           R2, #0x100000; nbytes|79-244-128-18
3172|code|BL              sub_11D0|0-240-180-250
3176|code|ADDS            R1, R0, #1|65-28
3178|code|MOV             R4, R0|4-70
3180|code|BEQ.W           loc_E88|0-240-12-129
3184|code|CMP             R0, #0|0-40
3186|code|BNE.W           loc_D9A|64-240-146-128
3190|code|MOV             R0, R8; strm|64-70
3192|code|LDR.W           R10, [SP,#0xA0+var_9C]|221-248-4-160
3196|code|BLX             inflateEnd|255-247-68-238
3200|code|MOV             R0, R9; fd|72-70
3202|code|BLX             close|255-247-132-238
3206|code|MOV             R0, R7; fd|56-70
3208|code|BLX             close|255-247-128-238
3212|code|LDR             R3, =(dword_A010 - 0xC92)|154-75
3214|code|ADD             R3, PC; dword_A010|123-68
3216|code|LDR             R3, [R3,#(dword_A018 - 0xA010)]|155-104
3218|code|CMP             R3, #0|0-43
3220|code|BNE             loc_D84|118-209
3222|code|MOV             R0, R6; ptr|48-70
3224|code|BLX             free|255-247-0-238
3228|code|MOV             R0, R5; ptr|40-70
3230|code|BLX             free|255-247-254-237
3234|code|B               loc_B1A|58-231
3236|code|LDR.W           R10, [SP,#0xA0+var_84]|221-248-28-160
3240|code|CMP.W           R10, #0|186-241-0-15
3244|code|ITE NE|20-191
3246|code|MOVNE           R3, #0|0-35
3248|code|ANDEQ.W         R3, R3, #1|3-240-1-3
3252|code|CBZ             R3, loc_CE0|163-177
3254|code|LDR.W           R10, [SP,#0xA0+var_68]|221-248-56-160
3258|code|LDR.W           R3, [R10,#8]|218-248-8-48
3262|code|CMP             R3, #0|0-43
3264|code|BNE.W           loc_E2C|64-240-180-128
3268|code|LDR.W           R10, [SP,#0xA0+var_70]|221-248-48-160
3272|code|LDR.W           R3, [R10,#0xC]|218-248-12-48
3276|code|CMP             R3, #0|0-43
3278|code|BNE.W           loc_E08|64-240-155-128
3282|code|STR             R3, [SP,#0xA0+var_88]|6-147
3284|code|MOVS            R3, #0|0-35
3286|code|MOVS            R2, #0|0-34
3288|code|STRD.W          R2, R3, [SP,#0xA0+var_98]|205-233-2-35
3292|code|MOVS            R3, #1|1-35
3294|code|STR             R3, [SP,#0xA0+var_84]|7-147
3296|code|LDR             R2, [SP,#0xA0+var_50]|20-154
3298|code|MOV             R0, R9; fd|72-70
3300|code|MOV             R1, R5; buf|41-70
3302|code|RSB.W           R2, R2, #0x10000; n|194-245-128-50
3306|code|BLX             write|255-247-50-238
3310|code|ADDS            R2, R0, #1|66-28
3312|code|BEQ.W           loc_E58|0-240-178-128
3316|code|LDR.W           R10, [SP,#0xA0+var_78]|221-248-40-160
3320|code|LDR             R3, [SP,#0xA0+var_5C]|17-155
3322|code|ADD             R10, R0|130-68
3324|code|STR.W           R10, [SP,#0xA0+var_78]|205-248-40-160
3328|code|CMP             R3, #0|0-43
3330|code|BEQ             loc_DD4|103-208
3332|code|CMP.W           R11, #1|187-241-1-15
3336|code|BNE.W           loc_BAC|127-244-80-175
3340|code|MOV             R0, R8; strm|64-70
3342|code|LDR.W           R11, [SP,#0xA0+var_5C]|221-248-68-176
3346|code|BLX             inflateEnd|255-247-250-237
3350|code|LDR             R3, [SP,#0xA0+var_60]|16-155
3352|code|CMP             R3, R6|179-66
3354|code|ITTEE NE|25-191
3356|code|RSBNE.W         R1, R11, #1|203-241-1-1
3360|code|ADDNE.W         R2, R11, #1|11-241-1-2
3364|code|MOVEQ           R0, R8|64-70
3366|code|MOVEQ           R1, R6|49-70
3368|code|ITEEE EQ|15-191
3370|code|MOVEQ           R2, R4|34-70
3372|code|MOVNE           R0, R8|64-70
3374|code|ADDNE           R1, R1, R4|9-25
3376|code|ADDNE           R1, R1, R6|137-25
3378|code|BL              sub_1210|0-240-109-250
3382|code|B               loc_BAC|57-231
3384|code|MOV             R0, R7; fd|56-70
3386|code|MOV             R1, R6; buf|49-70
3388|code|MOV.W           R2, #0x100000; nbytes|79-244-128-18
3392|code|BL              sub_11D0|0-240-70-250
3396|code|MOV             R4, R0|4-70
3398|code|ADDS            R0, #1|1-48
3400|code|BEQ.W           loc_E88|0-240-158-128
3404|code|CMP             R4, #0|0-44
3406|code|BEQ             loc_C76|146-208
3408|code|LDRD.W          R2, R3, [SP,#0xA0+var_80]|221-233-8-35
3412|code|MOV             R0, R8; strm|64-70
3414|code|MOV.W           R10, #0|79-240-0-10
3418|code|ADDS            R2, R2, R4|18-25
3420|code|ADC.W           R3, R3, R4,ASR#31|67-235-228-115
3424|code|STRD.W          R2, R3, [SP,#0xA0+var_80]|205-233-8-35
3428|code|BLX             inflateEnd|255-247-208-237
3432|code|MOV             R0, R8|64-70
3434|code|MOV             R1, R6|49-70
3436|code|MOV             R2, R4|34-70
3438|code|STR.W           R11, [SP,#0xA0+var_84]|205-248-28-176
3442|code|BL              sub_1210|0-240-77-250
3446|code|MOV.W           R11, #0|79-240-0-11
3450|code|MOVS            R3, #1|1-35
3452|code|STRD.W          R10, R11, [SP,#0xA0+var_98]|205-233-2-171
3456|code|STR             R3, [SP,#0xA0+var_88]|6-147
3458|code|B               loc_BAC|19-231
3460|code|LDR             R0, =(stderr_ptr - 0x9F64)|77-72
3462|code|MOVS            R1, #1|1-33
3464|code|LDR             R2, =(aTotalDecompres - 0xD94); "Total decompressed output = %d bytes\n"|92-74
3466|code|LDR             R3, [SP,#0xA0+var_78]|10-155
3468|code|LDR.W           R0, [R10,R0]|90-248-0-0
3472|code|ADD             R2, PC; "Total decompressed output = %d bytes\n"|122-68
3474|code|LDR             R0, [R0]|0-104
3476|code|BLX             __fprintf_chk|255-247-226-237
3480|code|B               loc_C96|125-231
3482|code|MOV             R0, R8; strm|64-70
3484|code|MOV.W           R10, #0|79-240-0-10
3488|code|STR.W           R10, [SP,#0xA0+var_90]|205-248-16-160
3492|code|BLX             inflateEnd|255-247-176-237
3496|code|LDRD.W          R10, R11, [SP,#0xA0+var_80]|221-233-8-171
3500|code|MOV             R2, R4|34-70
3502|code|MOV             R0, R8|64-70
3504|code|MOV             R1, R6|49-70
3506|code|ADDS.W          R10, R10, R4|26-235-4-10
3510|code|ADC.W           R11, R11, R4,ASR#31|75-235-228-123
3514|code|STRD.W          R10, R11, [SP,#0xA0+var_80]|205-233-8-171
3518|code|BL              sub_1210|0-240-39-250
3522|code|LDR             R2, [SP,#0xA0+var_90]|4-154
3524|code|MOV.W           R10, #0|79-240-0-10
3528|code|MOV.W           R11, #0|79-240-0-11
3532|code|STRD.W          R10, R11, [SP,#0xA0+var_98]|205-233-2-171
3536|code|STR             R2, [SP,#0xA0+var_84]|7-146
3538|code|B               loc_BAC|235-230
3540|code|MOV             R0, R7; fd|56-70
3542|code|MOV             R1, R6; buf|49-70
3544|code|MOV.W           R2, #0x100000; nbytes|79-244-128-18
3548|code|BL              sub_11D0|0-240-248-249
3552|code|ADDS            R3, R0, #1|67-28
3554|code|MOV             R4, R0|4-70
3556|code|BEQ             loc_E88|80-208
3558|code|CMP             R0, #0|0-40
3560|code|BEQ.W           loc_C76|63-244-69-175
3564|code|LDRD.W          R2, R3, [SP,#0xA0+var_80]|221-233-8-35
3568|code|STR             R6, [SP,#0xA0+var_60]|16-150
3570|code|ADDS            R2, R2, R0|18-24
3572|code|STR             R0, [SP,#0xA0+var_5C]|17-144
3574|code|ADC.W           R3, R3, R0,ASR#31|67-235-224-115
3578|code|STRD.W          R2, R3, [SP,#0xA0+var_80]|205-233-8-35
3582|code|MOVS            R2, #0|0-34
3584|code|MOVS            R3, #0|0-35
3586|code|STRD.W          R2, R3, [SP,#0xA0+var_98]|205-233-2-35
3590|code|B               loc_D04|125-231
3592|code|MOV             R0, R9; fd|72-70
3594|code|BLX             close|255-247-192-237
3598|code|LDR.W           R3, [R10,#0x10]|218-248-16-48
3602|code|CBZ             R3, loc_E4C|219-177
3604|code|MOV.W           R10, #1|79-240-1-10
3608|code|MOVS            R3, #0|0-35
3610|code|MOVS            R2, #0|0-34
3612|code|STR.W           R10, [SP,#0xA0+var_84]|205-248-28-160
3616|code|STRD.W          R2, R3, [SP,#0xA0+var_98]|205-233-2-35
3620|code|MOV             R9, R10|209-70
3622|code|MOVS            R3, #0|0-35
3624|code|STR             R3, [SP,#0xA0+var_88]|6-147
3626|code|B               loc_CE0|89-231
3628|code|LDR.W           R10, [SP,#0xA0+var_9C]|221-248-4-160
3632|code|MOVS            R1, #1|1-33
3634|code|LDR             R0, =(stderr_ptr - 0x9F64)|34-72
3636|code|LDR             R3, [SP,#0xA0+var_5C]|17-155
3638|code|LDR.W           LR, [SP,#0xA0+var_80]|221-248-32-224
3642|code|LDR.W           R0, [R10,R0]|90-248-0-0
3646|code|ADD             R3, LR|115-68
3648|code|LDR             R2, [SP,#0xA0+var_64]|15-154
3650|code|SUBS            R3, R3, R4|27-27
3652|code|LDR             R0, [R0]|0-104
3654|code|BLX             __fprintf_chk|255-247-138-237
3658|code|B               loc_CC4|59-231
3660|code|LDR             R0, [SP,#0xA0+var_8C]|5-152
3662|code|STR             R3, [SP,#0xA0+var_88]|6-147
3664|code|BL              sub_105C|0-240-4-249
3668|code|MOV             R9, R0|129-70
3670|code|B               loc_CD4|61-231
3672|code|LDR             R0, =(aWrite - 0xE5E); "write"|41-72
3674|code|ADD             R0, PC; "write"|120-68
3676|code|BLX             perror|255-247-36-237
3680|code|MOVS            R0, #1; status|1-32
3682|code|BLX             exit|255-247-76-237
3686|code|LDR             R0, =(aMalloc_0 - 0xE6C); "malloc"|39-72
3688|code|ADD             R0, PC; "malloc"|120-68
3690|code|BLX             perror|255-247-30-237
3694|code|MOVS            R0, #1; status|1-32
3696|code|BLX             exit|255-247-68-237
3700|code|MOV             R0, R6; ptr|48-70
3702|code|BLX             free|255-247-18-237
3706|code|LDR             R0, =(aOpen - 0xE80); "open"|35-72
3708|code|ADD             R0, PC; "open"|120-68
3710|code|BLX             perror|255-247-20-237
3714|code|MOVS            R0, #1; status|1-32
3716|code|BLX             exit|255-247-58-237
3720|code|LDR             R0, =(aRead_0 - 0xE8E); "read"|32-72
3722|code|ADD             R0, PC; "read"|120-68
3724|code|BLX             perror|255-247-12-237
3728|code|MOVS            R0, #1; status|1-32
3730|code|BLX             exit|255-247-52-237
3734|data|ALIGN 4|0-191
3736|data|DCD a08 - 0x9AE; "0.8"|74-10-0-0
3740|data|DCD aGzrecoverS - 0x9B8; "gzrecover %s\n"|48-10-0-0
3744|data|DCD dword_A010 - 0x9BE|82-150-0-0
3748|data|DCD dword_A010 - 0x9C8|72-150-0-0
3752|data|DCD dword_A010 - 0x9CE|66-150-0-0
3756|data|DCD dword_A010 - 0x9D0|64-150-0-0
3760|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9D2|146-149-0-0
3764|data|DCD aHoPsvv - 0x9DC; "ho:psVv"|4-10-0-0
3768|data|DCD optarg_ptr - 0x9F64|152-0-0-0
3772|data|DCD stderr_ptr - 0x9F64|128-0-0-0
3776|data|DCD aGzrecoverCanno - 0xA66; "gzrecover: Cannot specify output filena"...|150-9-0-0
3780|data|DCD dword_A010 - 0xA78|152-149-0-0
3784|data|DCD optind_ptr - 0x9F64|124-0-0-0
3788|data|DCD dword_A010 - 0xABC|84-149-0-0
3792|data|DCD dword_A010 - 0xACA|70-149-0-0
3796|data|DCD dword_A010 - 0xB00|16-149-0-0
3800|data|DCD aFileIsEmpty - 0xB32; "File is empty\n"|70-9-0-0
3804|data|DCD aStdin - 0xB40; "stdin"|152-8-0-0
3808|data|DCD dword_A010 - 0xB52|190-148-0-0
3812|data|DCD dword_A010 - 0xB5E|178-148-0-0
3816|data|DCD aFoundGoodDataA - 0xB72; "Found good data at byte %d in input str"...|62-9-0-0
3820|data|DCD dword_A010 - 0xB84|140-148-0-0
3824|data|DCD aFoundErrorAtBy - 0xB9C; "Found error at byte %d in input stream"...|236-8-0-0
3828|data|DCD aOpenedInputFil - 0xC56; "Opened input file for reading: %s\n"|246-7-0-0
3832|data|DCD dword_A010 - 0xC92|126-147-0-0
3836|data|DCD aTotalDecompres - 0xD94; "Total decompressed output = %d bytes\n"|80-7-0-0
3840|data|DCD aWrite - 0xE5E; "write"|126-6-0-0
3844|data|DCD aMalloc_0 - 0xE6C; "malloc"|192-4-0-0
3848|data|DCD aOpen - 0xE80; "open"|224-4-0-0
3852|data|DCD aRead_0 - 0xE8E; "read"|226-5-0-0
3856|code|MOV.W           R11, #0|79-240-0-11
3860|code|MOV.W           LR, #0|79-240-0-14
3864|code|POP.W           {R1}; argc|93-248-4-27
3868|code|MOV             R2, SP; ubp_av|106-70
3870|code|PUSH.W          {R2}; stack_end|77-248-4-45
3874|code|PUSH.W          {R0}; rtld_fini|77-248-4-13
3878|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xF50)|223-248-40-160
3882|code|ADR             R3, off_F50|9-163
3884|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
3886|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x9F64)|223-248-36-192
3890|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
3894|code|PUSH.W          {R12}; fini|77-248-4-205
3898|code|LDR             R3, =(__libc_csu_init_ptr - 0x9F64)|7-75
3900|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
3904|code|LDR             R0, =(main_ptr - 0x9F64)|6-72
3906|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
3910|code|BLX             __libc_start_main|255-247-206-236
3914|code|BLX             abort|255-247-26-237
3918|data|ALIGN 0x10|0-191
3920|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF50|20-144-0-0
3924|data|DCD __libc_csu_fini_ptr - 0x9F64|112-0-0-0
3928|data|DCD __libc_csu_init_ptr - 0x9F64|136-0-0-0
3932|data|DCD main_ptr - 0x9F64|140-0-0-0
3936|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF70)|20-48-159-229
3940|code|LDR             R2, =(__gmon_start___ptr_0 - 0x9F64)|20-32-159-229
3944|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
3948|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
3952|code|CMP             R2, #0|0-0-82-227
3956|code|BXEQ            LR|30-255-47-1
3960|code|B               __gmon_start__|92-254-255-234
3964|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF70|244-143-0-0
3968|data|DCD __gmon_start___ptr_0 - 0x9F64|132-0-0-0
3972|code|LDR             R2, =(__bss_start__ - 0xF8C)|8-74
3974|code|LDR             R0, =(__bss_start__ - 0xF8E)|9-72
3976|code|ADD             R2, PC; __bss_start__|122-68
3978|code|ADD             R0, PC; __bss_start__|120-68
3980|code|ADDS            R2, #3|3-50
3982|code|SUBS            R2, R2, R0|18-26
3984|code|PUSH            {R3,LR}|8-181
3986|code|CMP             R2, #6|6-42
3988|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF9A)|6-75
3990|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
3992|code|BHI             loc_F9C|0-216
3994|code|POP             {R3,PC}|8-189
3996|code|LDR             R2, =(_ITM_deregisterTMCloneTable_ptr - 0x9F64)|5-74
3998|code|LDR             R3, [R3,R2]; _ITM_deregisterTMCloneTable|155-88
4000|code|CMP             R3, #0|0-43
4002|code|BEQ             locret_F9A|250-208
4004|code|BLX             R3; _ITM_deregisterTMCloneTable|152-71
4006|code|B               locret_F9A|248-231
4008|data|DCD __bss_start__ - 0xF8C|128-144-0-0
4012|data|DCD __bss_start__ - 0xF8E|126-144-0-0
4016|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF9A|202-143-0-0
4020|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x9F64|120-0-0-0
4024|code|PUSH            {R3,LR}|8-181
4026|code|LDR             R0, =(__bss_start__ - 0xFC2)|10-72
4028|code|LDR             R3, =(__bss_start__ - 0xFC6)|10-75
4030|code|ADD             R0, PC; __bss_start__|120-68
4032|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFCA)|10-74
4034|code|ADD             R3, PC; __bss_start__|123-68
4036|code|SUBS            R3, R3, R0|27-26
4038|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4040|code|ASRS            R3, R3, #2|155-16
4042|code|ADD.W           R3, R3, R3,LSR#31|3-235-211-115
4046|code|ASRS            R3, R3, #1|91-16
4048|code|BNE             loc_FD4|0-209
4050|code|POP             {R3,PC}|8-189
4052|code|LDR             R1, =(_ITM_registerTMCloneTable_ptr - 0x9F64)|6-73
4054|code|LDR             R2, [R2,R1]; _ITM_registerTMCloneTable|82-88
4056|code|CMP             R2, #0|0-42
4058|code|BEQ             locret_FD2|250-208
4060|code|MOV             R1, R3|25-70
4062|code|BLX             R2; _ITM_registerTMCloneTable|144-71
4064|code|B               locret_FD2|247-231
4066|data|ALIGN 4|0-191
4068|data|DCD __bss_start__ - 0xFC2|74-144-0-0
4072|data|DCD __bss_start__ - 0xFC6|70-144-0-0
4076|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFCA|154-143-0-0
4080|data|DCD _ITM_registerTMCloneTable_ptr - 0x9F64|148-0-0-0
4084|code|LDR             R2, =(__bss_start__ - 0xFFC)|10-74
4086|code|PUSH            {R3,LR}|8-181
4088|code|ADD             R2, PC; __bss_start__|122-68
4090|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1002)|10-75
4092|code|LDRB            R2, [R2]|18-120
4094|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4096|code|CBNZ            R2, locret_101E|106-185
4098|code|LDR             R2, =(__cxa_finalize_ptr_0 - 0x9F64)|9-74
4100|code|LDR             R3, [R3,R2]; __imp___cxa_finalize|155-88
4102|code|CBZ             R3, loc_1012|35-177
4104|code|LDR             R3, =(off_A004 - 0x100E)|8-75
4106|code|ADD             R3, PC; off_A004|123-68
4108|code|LDR             R0, [R3]; off_A004 ; void *|24-104
4110|code|BLX             __cxa_finalize|255-247-52-236
4114|code|BL              sub_F84|255-247-183-255
4118|code|LDR             R3, =(__bss_start__ - 0x101E)|6-75
4120|code|MOVS            R2, #1|1-34
4122|code|ADD             R3, PC; __bss_start__|123-68
4124|code|STRB            R2, [R3]|26-112
4126|code|POP             {R3,PC}|8-189
4128|data|DCD __bss_start__ - 0xFFC|16-144-0-0
4132|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1002|98-143-0-0
4136|data|DCD __cxa_finalize_ptr_0 - 0x9F64|116-0-0-0
4140|data|DCD off_A004 - 0x100E|246-143-0-0
4144|data|DCD __bss_start__ - 0x101E|238-143-0-0
4148|code|LDR             R0, =(dword_9E60 - 0x103C)|6-72
4150|code|PUSH            {R3,LR}|8-181
4152|code|ADD             R0, PC; dword_9E60|120-68
4154|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1042)|6-75
4156|code|LDR             R2, [R0]|2-104
4158|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4160|code|CBZ             R2, loc_104A|26-177
4162|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x9F64)|5-74
4164|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
4166|code|CBZ             R3, loc_104A|3-177
4168|code|BLX             R3; _Jv_RegisterClasses|152-71
4170|code|POP.W           {R3,LR}|189-232-8-64
4174|code|B               sub_FB8|179-231
4176|data|DCD dword_9E60 - 0x103C|36-142-0-0
4180|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1042|34-143-0-0
4184|data|DCD _Jv_RegisterClasses_ptr - 0x9F64|144-0-0-0
4188|code|PUSH.W          {R4-R8,LR}|45-233-240-65
4192|code|MOV             R5, R0|5-70
4194|code|LDR             R6, =(dword_A010 - 0x106E)|64-78
4196|code|SUB             SP, SP, #8|130-176
4198|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x1070)|223-248-0-129
4202|code|ADD             R6, PC; dword_A010|126-68
4204|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
4206|code|LDR             R7, [R6]|55-104
4208|code|CBZ             R7, loc_1094|135-177
4210|code|LDR             R5, [R6,#(dword_A014 - 0xA010)]|117-104
4212|code|MOV             R0, R5; s|40-70
4214|code|BLX             strlen|255-247-78-236
4218|code|ADDS            R0, #9; size|9-48
4220|code|BLX             malloc|255-247-44-236
4224|code|MOV             R4, R0|4-70
4226|code|CMP             R0, #0|0-40
4228|code|BEQ             loc_1148|96-208
4230|code|LDR             R3, [R6,#(dword_A01C - 0xA010)]|243-104
4232|code|CMP             R3, #0|0-43
4234|code|BNE             loc_1136|84-209
4236|code|MOV             R1, R5; src|41-70
4238|code|BLX             strcpy|255-247-24-236
4242|code|B               loc_10E4|39-224
4244|code|BLX             strlen|255-247-62-236
4248|code|ADDS            R0, #0x19; size|25-48
4250|code|BLX             malloc|255-247-30-236
4254|code|MOV             R4, R0|4-70
4256|code|CMP             R0, #0|0-40
4258|code|BEQ             loc_1148|81-208
4260|code|LDR             R1, =(aGz - 0x10AC); ".gz"|49-73
4262|code|MOV             R0, R5; haystack|40-70
4264|code|ADD             R1, PC; ".gz"|121-68
4266|code|BLX             strstr|255-247-224-235
4270|code|CBZ             R0, loc_10B2|0-177
4272|code|STRB            R7, [R0]|7-112
4274|code|MOV             R0, R5; s|40-70
4276|code|MOVS            R1, #0x2F ; '/'; c|47-33
4278|code|BLX             strrchr|255-247-88-236
4282|code|CBZ             R0, loc_10BE|0-177
4284|code|ADDS            R5, R0, #1|69-28
4286|code|LDR             R3, =(dword_A010 - 0x10C4)|44-75
4288|code|ADD             R3, PC; dword_A010|123-68
4290|code|LDR             R3, [R3,#(dword_A01C - 0xA010)]|219-104
4292|code|CBZ             R3, loc_110C|19-179
4294|code|LDR             R6, =(dword_A008 - 0x10D2)|43-78
4296|code|MOV             R0, R4|32-70
4298|code|LDR             R3, =(aSRecoveredD - 0x10D8); "%s.recovered.%d"|43-75
4300|code|MOVS            R1, #1|1-33
4302|code|ADD             R6, PC; dword_A008|126-68
4304|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
4308|code|ADD             R3, PC; "%s.recovered.%d"|123-68
4310|code|STR             R5, [SP,#0x20+var_20]|0-149
4312|code|LDR             R5, [R6]|53-104
4314|code|ADDS            R7, R5, R1|111-24
4316|code|STR             R7, [R6]|55-96
4318|code|STR             R5, [SP,#0x20+var_1C]|1-149
4320|code|BLX             __sprintf_chk|255-247-42-236
4324|code|MOV             R0, R4|32-70
4326|code|MOVS            R1, #0x42 ; 'B'|66-33
4328|code|MOV.W           R2, #0x180|79-244-192-114
4332|code|BLX             open64|255-247-238-235
4336|code|ADDS            R3, R0, #1|67-28
4338|code|MOV             R5, R0|5-70
4340|code|BEQ             loc_1156|47-208
4342|code|LDR             R3, =(dword_A010 - 0x10FC)|33-75
4344|code|ADD             R3, PC; dword_A010|123-68
4346|code|LDR             R3, [R3,#(dword_A018 - 0xA010)]|155-104
4348|code|CBNZ            R3, loc_1120|131-185
4350|code|MOV             R0, R4; ptr|32-70
4352|code|BLX             free|255-247-204-235
4356|code|MOV             R0, R5|40-70
4358|code|ADD             SP, SP, #8|2-176
4360|code|POP.W           {R4-R8,PC}|189-232-240-129
4364|code|LDR             R3, =(aSRecovered - 0x111C); "%s.recovered"|28-75
4366|code|MOV             R0, R4|32-70
4368|code|STR             R5, [SP,#0x20+var_20]|0-149
4370|code|MOVS            R1, #1|1-33
4372|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
4376|code|ADD             R3, PC; "%s.recovered"|123-68
4378|code|BLX             __sprintf_chk|255-247-14-236
4382|code|B               loc_10E4|225-231
4384|code|LDR             R0, =(stderr_ptr - 0x9F64)|24-72
4386|code|MOVS            R1, #1|1-33
4388|code|LDR             R2, =(aOpenedOutputFi - 0x1130); "Opened output file for writing: %s\n"|24-74
4390|code|MOV             R3, R4|35-70
4392|code|LDR.W           R0, [R8,R0]; stderr|88-248-0-0
4396|code|ADD             R2, PC; "Opened output file for writing: %s\n"|122-68
4398|code|LDR             R0, [R0]|0-104
4400|code|BLX             __fprintf_chk|255-247-20-236
4404|code|B               loc_10FE|227-231
4406|code|LDR             R6, =(dword_A008 - 0x1144)|21-78
4408|code|MOVS            R1, #1|1-33
4410|code|LDR             R3, =(aSD - 0x1148); "%s.%d"|21-75
4412|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
4416|code|ADD             R6, PC; dword_A008|126-68
4418|code|STR             R5, [SP,#0x20+var_20]|0-149
4420|code|ADD             R3, PC; "%s.%d"|123-68
4422|code|B               loc_10D8|199-231
4424|code|LDR             R0, =(aMalloc_0 - 0x114E); "malloc"|18-72
4426|code|ADD             R0, PC; "malloc"|120-68
4428|code|BLX             perror|255-247-172-235
4432|code|MOVS            R0, #1; status|1-32
4434|code|BLX             exit|255-247-212-235
4438|code|LDR             R0, =(aOpen - 0x115C); "open"|16-72
4440|code|ADD             R0, PC; "open"|120-68
4442|code|BLX             perror|255-247-166-235
4446|code|MOVS            R0, #1; status|1-32
4448|code|BLX             exit|255-247-204-235
4452|data|DCD dword_A010 - 0x106E|162-143-0-0
4456|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1070|244-142-0-0
4460|data|DCD aGz - 0x10AC; ".gz"|136-2-0-0
4464|data|DCD dword_A010 - 0x10C4|76-143-0-0
4468|data|DCD dword_A008 - 0x10D2|54-143-0-0
4472|data|DCD aSRecoveredD - 0x10D8; "%s.recovered.%d"|104-2-0-0
4476|data|DCD dword_A010 - 0x10FC|20-143-0-0
4480|data|DCD aSRecovered - 0x111C; "%s.recovered"|52-2-0-0
4484|data|DCD stderr_ptr - 0x9F64|128-0-0-0
4488|data|DCD aOpenedOutputFi - 0x1130; "Opened output file for writing: %s\n"|56-2-0-0
4492|data|DCD dword_A008 - 0x1144|196-142-0-0
4496|data|DCD aSD - 0x1148; "%s.%d"|240-1-0-0
4500|data|DCD aMalloc_0 - 0x114E; "malloc"|222-1-0-0
4504|data|DCD aOpen - 0x115C; "open"|4-2-0-0
4508|code|PUSH            {R3-R5,LR}|56-181
4510|code|MOV             R5, R0|5-70
4512|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x11AA)|7-76
4514|code|MOVS            R1, #1|1-33
4516|code|LDR             R0, =(stderr_ptr - 0x9F64)|7-72
4518|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
4520|code|LDR             R2, =(aOpenedOutputFi+0x20 - 0x11B2); "%s\n"|7-74
4522|code|LDR             R3, =(aUsageGzrecover - 0x11B4); "Usage: gzrecover [-hpsVv] [-o <outfile>"...|8-75
4524|code|LDR             R4, [R4,R0]; stderr|36-88
4526|code|ADD             R2, PC; "%s\n"|122-68
4528|code|ADD             R3, PC; "Usage: gzrecover [-hpsVv] [-o <outfile>"...|123-68
4530|code|LDR             R0, [R4]|32-104
4532|code|BLX             __fprintf_chk|255-247-210-235
4536|code|MOV             R0, R5; status|40-70
4538|code|BLX             exit|255-247-160-235
4542|data|ALIGN 0x10|0-191
4544|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x11AA|186-141-0-0
4548|data|DCD stderr_ptr - 0x9F64|128-0-0-0
4552|data|DCD aOpenedOutputFi+0x20 - 0x11B2; "%s\n"|214-1-0-0
4556|data|DCD aUsageGzrecover - 0x11B4; "Usage: gzrecover [-hpsVv] [-o <outfile>"...|216-1-0-0
4560|code|PUSH            {R3-R7,LR}|248-181
4562|code|MOV             R7, R0|7-70
4564|code|MOV             R6, R1|14-70
4566|code|MOV             R5, R2|21-70
4568|code|MOV             R2, R5; nbytes|42-70
4570|code|MOV             R0, R7; fd|56-70
4572|code|MOV             R1, R6; buf|49-70
4574|code|BLX             read|255-247-88-235
4578|code|ADDS            R2, R0, #1|66-28
4580|code|MOV             R4, R0|4-70
4582|code|BNE             loc_11F6|6-209
4584|code|BLX             __errno_location|255-247-160-235
4588|code|LDR             R3, [R0]|3-104
4590|code|CMP             R3, #4|4-43
4592|code|IT NE|24-191
4594|code|CMPNE           R3, #0xB|11-43
4596|code|BEQ             loc_11D8|240-208
4598|code|MOV             R0, R4|32-70
4600|code|POP             {R3-R7,PC}|248-189
4602|data|ALIGN 4|0-191
4604|code|LDR             R3, =(dword_A010 - 0x1202)|3-75
4606|code|ADD             R3, PC; dword_A010|123-68
4608|code|LDR             R3, [R3,#(dword_A020 - 0xA010)]|27-105
4610|code|CBNZ            R3, loc_1206|3-185
4612|code|B               sub_105C|42-231
4614|code|MOVS            R0, #1|1-32
4616|code|BX              LR|112-71
4618|data|ALIGN 4|0-191
4620|data|DCD dword_A010 - 0x1202|14-142-0-0
4624|code|PUSH            {R4-R6,LR}|112-181
4626|code|MOV             R6, R1|14-70
4628|code|MOV             R5, R2|21-70
4630|code|MOVS            R1, #0; c|0-33
4632|code|MOVS            R2, #0x38 ; '8'; n|56-34
4634|code|MOV             R4, R0|4-70
4636|code|BLX             memset|255-247-146-235
4640|code|LDR             R2, =(a128 - 0x1230); "1.2.8"|9-74
4642|code|STR             R6, [R4]|38-96
4644|code|MOV             R0, R4; strm|32-70
4646|code|STR             R5, [R4,#4]|101-96
4648|code|MOV             R1, #0xFFFFFFF1; windowBits|111-240-14-1
4652|code|ADD             R2, PC; "1.2.8"|122-68
4654|code|MOVS            R3, #0x38 ; '8'; stream_size|56-35
4656|code|BLX             inflateInit2_|255-247-160-235
4660|code|CBNZ            R0, loc_1238|0-185
4662|code|POP             {R4-R6,PC}|112-189
4664|code|LDR             R0, =(aInflateinit2_0 - 0x123E); "inflateInit2"|4-72
4666|code|ADD             R0, PC; "inflateInit2"|120-68
4668|code|BLX             perror|255-247-52-235
4672|code|MOVS            R0, #1; status|1-32
4674|code|BLX             exit|255-247-92-235
4678|data|ALIGN 4|0-191
4680|data|DCD a128 - 0x1230; "1.2.8"|144-1-0-0
4684|data|DCD aInflateinit2_0 - 0x123E; "inflateInit2"|138-1-0-0
4688|code|LDR             R3, [R0]|3-104
4690|code|PUSH            {R4-R6}|112-180
4692|code|ADD.W           R2, R3, #0xA|3-241-10-2
4696|code|LDR             R1, [R0,#4]|65-104
4698|code|LDRB            R6, [R3,#3]|222-120
4700|code|SUB.W           R4, R1, #0xA|161-241-10-4
4704|code|STM.W           R0, {R2,R4}|128-232-20-0
4708|code|LSLS            R4, R6, #0x1D|116-7
4710|code|BPL             loc_127A|8-213
4712|code|LDRB            R3, [R3,#0xA]|155-122
4714|code|SUBS            R1, #0xC|12-57
4716|code|ADD.W           R3, R3, R3,LSL#8|3-235-3-35
4720|code|ADDS            R4, R3, #2|156-28
4722|code|SUBS            R3, R1, R3|203-26
4724|code|ADD             R2, R4|34-68
4726|code|STM.W           R0, {R2,R3}|128-232-12-0
4730|code|LSLS            R5, R6, #0x1C|53-7
4732|code|BPL             loc_12A6|19-213
4734|code|LDR             R1, [R0]|1-104
4736|code|LDR             R2, [R0,#4]|66-104
4738|code|LDRB            R3, [R1]|11-120
4740|code|CBZ             R3, loc_129E|91-177
4742|code|ADDS            R3, R1, #1|75-28
4744|code|SUBS            R2, #1|1-58
4746|code|B               loc_128E|0-224
4748|code|MOV             R2, R5|42-70
4750|code|MOV             R1, R3|25-70
4752|code|STR             R3, [R0]|3-96
4754|code|STR             R2, [R0,#4]|66-96
4756|code|ADDS            R3, #1|1-51
4758|code|LDRB            R4, [R1]|12-120
4760|code|SUBS            R5, R2, #1|85-30
4762|code|CMP             R4, #0|0-44
4764|code|BNE             loc_128C|246-209
4766|code|ADDS            R1, #1|1-49
4768|code|SUBS            R2, #1|1-58
4770|code|STM.W           R0, {R1,R2}|128-232-6-0
4774|code|LSLS            R4, R6, #0x1B|244-6
4776|code|BPL             loc_12C6|13-213
4778|code|LDR             R3, [R0]|3-104
4780|code|LDRB            R2, [R3]|26-120
4782|code|CBZ             R2, loc_12C6|82-177
4784|code|LDR             R2, [R0,#4]|66-104
4786|code|ADDS            R3, #1|1-51
4788|code|SUBS            R2, #1|1-58
4790|code|STR             R3, [R0]|3-96
4792|code|ADDS            R3, #1|1-51
4794|code|STR             R2, [R0,#4]|66-96
4796|code|SUBS            R2, #1|1-58
4798|code|LDRB.W          R1, [R3,#-1]|19-248-1-28
4802|code|CMP             R1, #0|0-41
4804|code|BNE             loc_12B6|247-209
4806|code|LSLS            R1, R6, #0x1E|177-7
4808|code|BPL             loc_12D6|5-213
4810|code|LDM.W           R0, {R2,R3}|144-232-12-0
4814|code|ADDS            R2, #2|2-50
4816|code|SUBS            R3, #2|2-59
4818|code|STR             R2, [R0]|2-96
4820|code|STR             R3, [R0,#4]|67-96
4822|code|POP             {R4-R6}|112-188
4824|code|BX              LR|112-71
4826|data|ALIGN 4|0-191
4828|code|PUSH.W          {R3-R9,LR}|45-233-248-67
4832|code|MOV             R7, R0|7-70
4834|code|LDR             R5, =(off_9E58 - 0x12EE)|12-77
4836|code|MOV             R8, R1|136-70
4838|code|LDR             R6, =(off_9E5C - 0x12F4)|12-78
4840|code|MOV             R9, R2|145-70
4842|code|ADD             R5, PC; off_9E58|125-68
4844|code|BLX             .init_proc|255-247-174-234
4848|code|ADD             R6, PC; off_9E5C|126-68
4850|code|SUBS            R6, R6, R5|118-27
4852|code|ASRS            R6, R6, #2|182-16
4854|code|BEQ             locret_130E|10-208
4856|code|SUBS            R5, #4|4-61
4858|code|MOVS            R4, #0|0-36
4860|code|LDR.W           R3, [R5,#4]!|85-248-4-63
4864|code|MOV             R0, R7|56-70
4866|code|MOV             R1, R8|65-70
4868|code|MOV             R2, R9|74-70
4870|code|ADDS            R4, #1|1-52
4872|code|BLX             R3; sub_1034|152-71
4874|code|CMP             R4, R6|180-66
4876|code|BNE             loc_12FC|246-209
4878|code|POP.W           {R3-R9,PC}|189-232-248-131
4882|data|ALIGN 4|0-191
4884|data|DCD off_9E58 - 0x12EE|106-139-0-0
4888|data|DCD off_9E5C - 0x12F4|104-139-0-0
4892|code|BX              LR|112-71
4894|data|ALIGN 0x10|0-191
4896|code|PUSH            {R3,LR}|8-64-45-233
4900|code|POP             {R3,PC}|8-128-189-232
5396|data|ALIGN 8|0-0-0-0
40536|data|DCD sub_1034+1|53-16-0-0
40540|data|DCD sub_FF4+1|245-15-0-0
40544|data|DCD 0|0-0-0-0
40548|data|Elf32_Dyn <1, <1>>; DT_NEEDED libz.so.1|1-0-0-0-1-0-0-0
40556|data|Elf32_Dyn <1, <0x4F>>; DT_NEEDED libc.so.6|1-0-0-0-79-0-0-0
40564|data|Elf32_Dyn <0xC, <0x84C>>; DT_INIT|12-0-0-0-76-8-0-0
40572|data|Elf32_Dyn <0xD, <0x1320>>; DT_FINI|13-0-0-0-32-19-0-0
40580|data|Elf32_Dyn <0x19, <0x9E58>>; DT_INIT_ARRAY|25-0-0-0-88-158-0-0
40588|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
40596|data|Elf32_Dyn <0x1A, <0x9E5C>>; DT_FINI_ARRAY|26-0-0-0-92-158-0-0
40604|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
40612|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
40620|data|Elf32_Dyn <5, <0x4D4>>; DT_STRTAB|5-0-0-0-212-4-0-0
40628|data|Elf32_Dyn <6, <0x204>>; DT_SYMTAB|6-0-0-0-4-2-0-0
40636|data|Elf32_Dyn <0xA, <0x1C5>>; DT_STRSZ|10-0-0-0-197-1-0-0
40644|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
40652|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
40660|data|Elf32_Dyn <3, <0x9F64>>; DT_PLTGOT|3-0-0-0-100-159-0-0
40668|data|Elf32_Dyn <2, <0xC8>>; DT_PLTRELSZ|2-0-0-0-200-0-0-0
40676|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
40684|data|Elf32_Dyn <0x17, <0x784>>; DT_JMPREL|23-0-0-0-132-7-0-0
40692|data|Elf32_Dyn <0x11, <0x714>>; DT_REL|17-0-0-0-20-7-0-0
40700|data|Elf32_Dyn <0x12, <0x70>>; DT_RELSZ|18-0-0-0-112-0-0-0
40708|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
40716|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
40724|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
40732|data|Elf32_Dyn <0x6FFFFFFE, <0x6F4>>; DT_VERNEED|254-255-255-111-244-6-0-0
40740|data|Elf32_Dyn <0x6FFFFFFF, <1>>; DT_VERNEEDNUM|255-255-255-111-1-0-0-0
40748|data|Elf32_Dyn <0x6FFFFFF0, <0x69A>>; DT_VERSYM|240-255-255-111-154-6-0-0
40756|data|Elf32_Dyn <0x6FFFFFFA, <6>>; DT_RELCOUNT|250-255-255-111-6-0-0-0
40764|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
40772|data|ALIGN 8|0-0-0-0
40804|data|DCD stru_9E64|100-158-0-0
40808|data|DCD 0|0-0-0-0
40812|data|DCD dword_0|0-0-0-0
40816|data|DCD __imp_strstr|40-160-0-0
40820|data|DCD __imp___cxa_finalize|44-160-0-0
40824|data|DCD __imp_inflate|48-160-0-0
40828|data|DCD __imp_read|52-160-0-0
40832|data|DCD __imp_free|56-160-0-0
40836|data|DCD __imp_perror|64-160-0-0
40840|data|DCD __imp_fwrite|72-160-0-0
40844|data|DCD __imp_strcpy|76-160-0-0
40848|data|DCD __imp_open64|80-160-0-0
40852|data|DCD __imp_malloc|84-160-0-0
40856|data|DCD __imp___libc_start_main|88-160-0-0
40860|data|DCD __imp___gmon_start__|152-160-0-0
40864|data|DCD __imp_exit|92-160-0-0
40868|data|DCD __imp_inflateEnd|96-160-0-0
40872|data|DCD __imp_strlen|100-160-0-0
40876|data|DCD __imp_getopt|104-160-0-0
40880|data|DCD __imp___errno_location|108-160-0-0
40884|data|DCD __imp___sprintf_chk|112-160-0-0
40888|data|DCD __imp_memset|116-160-0-0
40892|data|DCD __imp_write|120-160-0-0
40896|data|DCD __imp___fprintf_chk|124-160-0-0
40900|data|DCD __imp_strrchr|128-160-0-0
40904|data|DCD __imp_inflateInit2_|132-160-0-0
40908|data|DCD __imp_abort|140-160-0-0
40912|data|DCD __imp_close|144-160-0-0
40916|data|DCD __libc_csu_fini+1|29-19-0-0
40920|data|DCD __imp___cxa_finalize|44-160-0-0
40924|data|DCD _ITM_deregisterTMCloneTable|148-160-0-0
40928|data|DCD optind|60-160-0-0
40932|data|DCD stderr|68-160-0-0
40936|data|DCD __imp___gmon_start__|152-160-0-0
40940|data|DCD __libc_csu_init+1|221-18-0-0
40944|data|DCD main+1|153-9-0-0
40948|data|DCD _Jv_RegisterClasses|156-160-0-0
40952|data|DCD _ITM_registerTMCloneTable|160-160-0-0
40956|data|DCD optarg|136-160-0-0
40972|data|% 1; Alternative name is '__bss_start'|255
40973|data|ALIGN 0x10|255-255-255
40976|data|% 4|255-255-255-255
40980|data|% 4|255-255-255-255
40984|data|% 4|255-255-255-255
40988|data|% 4|255-255-255-255
