address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|61-21-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x320C; SHT file offset|12-50-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1C; Number of entries in SHT|28-0
50|data|DCW 0x1B; SHT entry index for string table|27-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x26C4; File offset|196-38-0-0
60|data|DCD unk_26C4; Virtual address|196-38-0-0
64|data|DCD 0x26C4; Physical address|196-38-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x26D0; Size in file image|208-38-0-0
168|data|DCD 0x26D0; Size in memory image|208-38-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2D80; File offset|128-45-0-0
188|data|DCD off_12D80; Virtual address|128-45-1-0
192|data|DCD 0x12D80; Physical address|128-45-1-0
196|data|DCD 0x358; Size in file image|88-3-0-0
200|data|DCD 0x35C; Size in memory image|92-3-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E34; File offset|52-46-0-0
220|data|DCD stru_12E34; Virtual address|52-46-1-0
224|data|DCD 0x12E34; Physical address|52-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2D80; File offset|128-45-0-0
316|data|DCD off_12D80; Virtual address|128-45-1-0
320|data|DCD 0x12D80; Physical address|128-45-1-0
324|data|DCD 0x280; Size in file image|128-2-0-0
328|data|DCD 0x280; Size in memory image|128-2-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x3F, 0x99, 0xF3, 4, 0x66, 0x7F, 0xD3, 0xA3, 0x44; Desc|63-153-243-4-102-127-211-163-68-129-28-4-124-97-252-76-228-162-253-57
436|data|DCD 3|3-0-0-0
440|data|DCD 0x2C|44-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x2C, 0x30, 0x35|44-0-0-0-48-0-0-0-53-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_5A4 - byte_5A4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_5A4 - byte_5A4, dword_12D88, 0, 3, 0, 0x14>|0-0-0-0-136-45-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aSgSetBinaryMod - byte_5A4, dword_0, 0, 0x12, 0, 0>; "sg_set_binary_mode"|191-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aCxaFinalize - byte_5A4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|26-2-0-0-0-0-0-0-0-0-0-0-34-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_5A4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aSetScsiPtDataO - byte_5A4, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_data_out"|30-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aRead - byte_5A4, dword_0, 0, 0x12, 0, 0>; "read"|179-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aFree - byte_5A4, dword_0, 0, 0x12, 0, 0>; "free"|59-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aConstructScsiP - byte_5A4, dword_0, 0, 0x12, 0, 0>; "construct_scsi_pt_obj"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aStackChkGuard - byte_5A4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|84-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
708|data|Elf32_Sym <aSgCmdsCloseDev - byte_5A4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|51-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aOptind - byte_5A4, dword_0, 0, 0x11, 0, 0>; "optind"|121-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aStackChkFail - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|135-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aPerror - byte_5A4, dword_0, 0, 0x12, 0, 0>; "perror"|128-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aStderr - byte_5A4, dword_0, 0, 0x11, 0, 0>; "stderr"|212-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
788|data|Elf32_Sym <aLseek64 - byte_5A4, dword_0, 0, 0x12, 0, 0>; "lseek64"|252-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aDstrhexerr - byte_5A4, dword_0, 0, 0x12, 0, 0>; "dStrHexErr"|92-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aOpen64 - byte_5A4, dword_0, 0, 0x12, 0, 0>; "open64"|172-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aMalloc - byte_5A4, dword_0, 0, 0x12, 0, 0>; "malloc"|184-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aLibcStartMain - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|41-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aVfprintfChk - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__vfprintf_chk"|11-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aGmonStart - byte_5A4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
900|data|Elf32_Sym <aGetoptLong - byte_5A4, dword_0, 0, 0x12, 0, 0>; "getopt_long"|234-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aCtypeBLoc - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__ctype_b_loc"|191-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aStrlen - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strlen"|158-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aStrchr - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strchr"|4-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aDoScsiPt - byte_5A4, dword_0, 0, 0x12, 0, 0>; "do_scsi_pt"|19-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aDestructScsiPt - byte_5A4, dword_0, 0, 0x12, 0, 0>; "destruct_scsi_pt_obj"|156-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aMemset - byte_5A4, dword_0, 0, 0x12, 0, 0>; "memset"|165-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aSetScsiPtSense - byte_5A4, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_sense"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aSafeStrerror - byte_5A4, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|177-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aJvRegisterclas - byte_5A4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1060|data|Elf32_Sym <aSgCmdsProcessR - byte_5A4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_process_resp"|254-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aSgGetCategoryS - byte_5A4, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|228-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aSgGetNum - byte_5A4, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aItmRegistertmc - byte_5A4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1124|data|Elf32_Sym <aSgCmdsOpenDevi - byte_5A4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|72-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1140|data|Elf32_Sym <aOptarg - byte_5A4, dword_0, 0, 0x11, 0, 0>; "optarg"|205-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1156|data|Elf32_Sym <aStrncmp - byte_5A4, dword_0, 0, 0x12, 0, 0>; "strncmp"|113-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1172|data|Elf32_Sym <aAbort - byte_5A4, dword_0, 0, 0x12, 0, 0>; "abort"|152-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1188|data|Elf32_Sym <aClose - byte_5A4, dword_0, 0, 0x12, 0, 0>; "close"|246-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1204|data|Elf32_Sym <aSnprintfChk - byte_5A4, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|219-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1220|data|Elf32_Sym <aSetScsiPtCdb - byte_5A4, dword_0, 0, 0x12, 0, 0>; "set_scsi_pt_cdb"|140-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1236|data|Elf32_Sym <aBssEnd+1 - byte_5A4, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|149-2-0-0-220-48-1-0-0-0-0-0-16-0-25-0
1252|data|Elf32_Sym <aEdata - byte_5A4, __bss_start__, 0, 0x10, 0, 0x18>; "_edata"|115-2-0-0-216-48-1-0-0-0-0-0-16-0-24-0
1268|data|Elf32_Sym <aDataStart - byte_5A4, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|102-2-0-0-0-48-1-0-0-0-0-0-16-0-24-0
1284|data|Elf32_Sym <aEnd_0 - byte_5A4, _end, 0, 0x10, 0, 0x19>; "_end"|168-2-0-0-220-48-1-0-0-0-0-0-16-0-25-0
1300|data|Elf32_Sym <aBssEnd - byte_5A4, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|148-2-0-0-220-48-1-0-0-0-0-0-16-0-25-0
1316|data|Elf32_Sym <aLibcCsuInit - byte_5A4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|189-2-0-0-157-24-0-0-64-0-0-0-18-0-13-0
1332|data|Elf32_Sym <aBssStart - byte_5A4, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start"|122-2-0-0-216-48-1-0-0-0-0-0-16-0-25-0
1348|data|Elf32_Sym <aLibcStartMain+0xD - byte_5A4, main+1, 0x78C, 0x12, 0, 0xD>; "main"|54-2-0-0-177-13-0-0-140-7-0-0-18-0-13-0
1364|data|Elf32_Sym <aLibcCsuInit+0xA - byte_5A4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|199-2-0-0-248-11-0-0-0-0-0-0-18-0-11-0
1380|data|Elf32_Sym <aLibcCsuFini - byte_5A4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|173-2-0-0-221-24-0-0-2-0-0-0-18-0-13-0
1396|data|Elf32_Sym <aBssStart_0 - byte_5A4, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start__"|134-2-0-0-216-48-1-0-0-0-0-0-16-0-25-0
1412|data|Elf32_Sym <aLibcCsuFini+0xA - byte_5A4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|183-2-0-0-224-24-0-0-0-0-0-0-18-0-14-0
1428|data|Elf32_Sym <aEnd - byte_5A4, _end, 0, 0x10, 0, 0x19>; "__end__"|160-2-0-0-220-48-1-0-0-0-0-0-16-0-25-0
1444|data|DCB 0|0
1445|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1462|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1490|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1505|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1525|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1551|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1562|data|DCB "construct_scsi_pt_obj",0|99-111-110-115-116-114-117-99-116-95-115-99-115-105-95-112-116-95-111-98-106-0
1584|data|DCB "set_scsi_pt_cdb",0|115-101-116-95-115-99-115-105-95-112-116-95-99-100-98-0
1600|data|DCB "destruct_scsi_pt_obj",0|100-101-115-116-114-117-99-116-95-115-99-115-105-95-112-116-95-111-98-106-0
1621|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1635|data|DCB "sg_set_binary_mode",0|115-103-95-115-101-116-95-98-105-110-97-114-121-95-109-111-100-101-0
1654|data|DCB "set_scsi_pt_sense",0|115-101-116-95-115-99-115-105-95-112-116-95-115-101-110-115-101-0
1672|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1698|data|DCB "sg_cmds_process_resp",0|115-103-95-99-109-100-115-95-112-114-111-99-101-115-115-95-114-101-115-112-0
1719|data|DCB "do_scsi_pt",0|100-111-95-115-99-115-105-95-112-116-0
1730|data|DCB "set_scsi_pt_data_out",0|115-101-116-95-115-99-115-105-95-112-116-95-100-97-116-97-95-111-117-116-0
1751|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1772|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1792|data|DCB "dStrHexErr",0|100-83-116-114-72-101-120-69-114-114-0
1803|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1813|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
1821|data|DCB "optind",0|111-112-116-105-110-100-0
1828|data|DCB "perror",0|112-101-114-114-111-114-0
1835|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1852|data|DCB "abort",0|97-98-111-114-116-0
1858|data|DCB "strlen",0|115-116-114-108-101-110-0
1865|data|DCB "memset",0|109-101-109-115-101-116-0
1872|data|DCB "open64",0|111-112-101-110-54-52-0
1879|data|DCB "read",0|114-101-97-100-0
1884|data|DCB "malloc",0|109-97-108-108-111-99-0
1891|data|DCB "__ctype_b_loc",0|95-95-99-116-121-112-101-95-98-95-108-111-99-0
1905|data|DCB "optarg",0|111-112-116-97-114-103-0
1912|data|DCB "stderr",0|115-116-100-101-114-114-0
1919|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
1934|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1946|data|DCB "close",0|99-108-111-115-101-0
1952|data|DCB "lseek64",0|108-115-101-101-107-54-52-0
1960|data|DCB "strchr",0|115-116-114-99-104-114-0
1967|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
1982|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1997|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
2015|data|DCB "free",0|102-114-101-101-0
2020|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
2040|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
2058|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
2071|data|DCB "_edata",0|95-101-100-97-116-97-0
2078|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2090|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2104|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2116|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2124|data|DCB "_end",0|95-101-110-100-0
2129|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2145|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2161|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2171|data|DCB 0|0
2172|data|DCW 0|0-0
2174|data|DCW 0|0-0
2176|data|DCW 0|0-0
2178|data|DCW 0; local  symbol: sg_set_binary_mode|0-0
2180|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2182|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2184|data|DCW 0; local  symbol: set_scsi_pt_data_out|0-0
2186|data|DCW 2; read@@GLIBC_2.4|2-0
2188|data|DCW 2; free@@GLIBC_2.4|2-0
2190|data|DCW 0; local  symbol: construct_scsi_pt_obj|0-0
2192|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
2194|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
2196|data|DCW 2; optind@@GLIBC_2.4|2-0
2198|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2200|data|DCW 2; perror@@GLIBC_2.4|2-0
2202|data|DCW 2; stderr@@GLIBC_2.4|2-0
2204|data|DCW 2; lseek64@@GLIBC_2.4|2-0
2206|data|DCW 0; local  symbol: dStrHexErr|0-0
2208|data|DCW 2; open64@@GLIBC_2.4|2-0
2210|data|DCW 2; malloc@@GLIBC_2.4|2-0
2212|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2214|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
2216|data|DCW 0; local  symbol: __gmon_start__|0-0
2218|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
2220|data|DCW 2; __ctype_b_loc@@GLIBC_2.4|2-0
2222|data|DCW 2; strlen@@GLIBC_2.4|2-0
2224|data|DCW 2; strchr@@GLIBC_2.4|2-0
2226|data|DCW 0; local  symbol: do_scsi_pt|0-0
2228|data|DCW 0; local  symbol: destruct_scsi_pt_obj|0-0
2230|data|DCW 2; memset@@GLIBC_2.4|2-0
2232|data|DCW 0; local  symbol: set_scsi_pt_sense|0-0
2234|data|DCW 0; local  symbol: safe_strerror|0-0
2236|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2238|data|DCW 0; local  symbol: sg_cmds_process_resp|0-0
2240|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
2242|data|DCW 0; local  symbol: sg_get_num|0-0
2244|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2246|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
2248|data|DCW 2; optarg@@GLIBC_2.4|2-0
2250|data|DCW 2; strncmp@@GLIBC_2.4|2-0
2252|data|DCW 2; abort@@GLIBC_2.4|2-0
2254|data|DCW 2; close@@GLIBC_2.4|2-0
2256|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
2258|data|DCW 0; local  symbol: set_scsi_pt_cdb|0-0
2260|data|DCW 1; global symbol: _bss_end__|1-0
2262|data|DCW 1; global symbol: _edata|1-0
2264|data|DCW 1; global symbol: __data_start|1-0
2266|data|DCW 1; global symbol: _end|1-0
2268|data|DCW 1; global symbol: __bss_end__|1-0
2270|data|DCW 1; global symbol: __libc_csu_init|1-0
2272|data|DCW 1; global symbol: __bss_start|1-0
2274|data|DCW 1; global symbol: main|1-0
2276|data|DCW 1; global symbol: _init|1-0
2278|data|DCW 1; global symbol: __libc_csu_fini|1-0
2280|data|DCW 1; global symbol: __bss_start__|1-0
2282|data|DCW 1; global symbol: _fini|1-0
2284|data|DCW 1; global symbol: __end__|1-0
2286|data|DCW 0|0-0
2288|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_5A4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-64-2-0-0-16-0-0-0-32-0-0-0
2304|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_5A4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-205-2-0-0-0-0-0-0
2320|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_5A4, 0x10, 0>; "libc.so.6"|1-0-1-0-103-1-0-0-16-0-0-0-0-0-0-0
2336|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_5A4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-205-2-0-0-0-0-0-0
2352|data|Elf32_Rel <0x12D80, 0x17>; R_ARM_RELATIVE|128-45-1-0-23-0-0-0
2360|data|Elf32_Rel <0x12D84, 0x17>; R_ARM_RELATIVE|132-45-1-0-23-0-0-0
2368|data|Elf32_Rel <0x12D8C, 0x17>; R_ARM_RELATIVE|140-45-1-0-23-0-0-0
2376|data|Elf32_Rel <0x12D94, 0x17>; R_ARM_RELATIVE|148-45-1-0-23-0-0-0
2384|data|Elf32_Rel <0x12D98, 0x17>; R_ARM_RELATIVE|152-45-1-0-23-0-0-0
2392|data|Elf32_Rel <0x12DA0, 0x17>; R_ARM_RELATIVE|160-45-1-0-23-0-0-0
2400|data|Elf32_Rel <0x12DA4, 0x17>; R_ARM_RELATIVE|164-45-1-0-23-0-0-0
2408|data|Elf32_Rel <0x12DAC, 0x17>; R_ARM_RELATIVE|172-45-1-0-23-0-0-0
2416|data|Elf32_Rel <0x12DB0, 0x17>; R_ARM_RELATIVE|176-45-1-0-23-0-0-0
2424|data|Elf32_Rel <0x12DB8, 0x17>; R_ARM_RELATIVE|184-45-1-0-23-0-0-0
2432|data|Elf32_Rel <0x12DBC, 0x17>; R_ARM_RELATIVE|188-45-1-0-23-0-0-0
2440|data|Elf32_Rel <0x12DC4, 0x17>; R_ARM_RELATIVE|196-45-1-0-23-0-0-0
2448|data|Elf32_Rel <0x12DC8, 0x17>; R_ARM_RELATIVE|200-45-1-0-23-0-0-0
2456|data|Elf32_Rel <0x12DD0, 0x17>; R_ARM_RELATIVE|208-45-1-0-23-0-0-0
2464|data|Elf32_Rel <0x12DD4, 0x17>; R_ARM_RELATIVE|212-45-1-0-23-0-0-0
2472|data|Elf32_Rel <0x12DDC, 0x17>; R_ARM_RELATIVE|220-45-1-0-23-0-0-0
2480|data|Elf32_Rel <0x12DE0, 0x17>; R_ARM_RELATIVE|224-45-1-0-23-0-0-0
2488|data|Elf32_Rel <0x12DE8, 0x17>; R_ARM_RELATIVE|232-45-1-0-23-0-0-0
2496|data|Elf32_Rel <0x12DEC, 0x17>; R_ARM_RELATIVE|236-45-1-0-23-0-0-0
2504|data|Elf32_Rel <0x12DF4, 0x17>; R_ARM_RELATIVE|244-45-1-0-23-0-0-0
2512|data|Elf32_Rel <0x12DF8, 0x17>; R_ARM_RELATIVE|248-45-1-0-23-0-0-0
2520|data|Elf32_Rel <0x12E00, 0x17>; R_ARM_RELATIVE|0-46-1-0-23-0-0-0
2528|data|Elf32_Rel <0x12E04, 0x17>; R_ARM_RELATIVE|4-46-1-0-23-0-0-0
2536|data|Elf32_Rel <0x12E0C, 0x17>; R_ARM_RELATIVE|12-46-1-0-23-0-0-0
2544|data|Elf32_Rel <0x12E10, 0x17>; R_ARM_RELATIVE|16-46-1-0-23-0-0-0
2552|data|Elf32_Rel <0x12E18, 0x17>; R_ARM_RELATIVE|24-46-1-0-23-0-0-0
2560|data|Elf32_Rel <0x12E1C, 0x17>; R_ARM_RELATIVE|28-46-1-0-23-0-0-0
2568|data|Elf32_Rel <0x12E24, 0x17>; R_ARM_RELATIVE|36-46-1-0-23-0-0-0
2576|data|Elf32_Rel <0x12E28, 0x17>; R_ARM_RELATIVE|40-46-1-0-23-0-0-0
2584|data|Elf32_Rel <0x12E30, 0x17>; R_ARM_RELATIVE|48-46-1-0-23-0-0-0
2592|data|Elf32_Rel <0x12FD0, 0x17>; R_ARM_RELATIVE|208-47-1-0-23-0-0-0
2600|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2608|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2616|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2624|data|Elf32_Rel <0x13008, 0x17>; R_ARM_RELATIVE|8-48-1-0-23-0-0-0
2632|data|Elf32_Rel <0x13018, 0x17>; R_ARM_RELATIVE|24-48-1-0-23-0-0-0
2640|data|Elf32_Rel <0x13028, 0x17>; R_ARM_RELATIVE|40-48-1-0-23-0-0-0
2648|data|Elf32_Rel <0x13038, 0x17>; R_ARM_RELATIVE|56-48-1-0-23-0-0-0
2656|data|Elf32_Rel <0x13048, 0x17>; R_ARM_RELATIVE|72-48-1-0-23-0-0-0
2664|data|Elf32_Rel <0x13058, 0x17>; R_ARM_RELATIVE|88-48-1-0-23-0-0-0
2672|data|Elf32_Rel <0x13068, 0x17>; R_ARM_RELATIVE|104-48-1-0-23-0-0-0
2680|data|Elf32_Rel <0x13078, 0x17>; R_ARM_RELATIVE|120-48-1-0-23-0-0-0
2688|data|Elf32_Rel <0x13088, 0x17>; R_ARM_RELATIVE|136-48-1-0-23-0-0-0
2696|data|Elf32_Rel <0x13098, 0x17>; R_ARM_RELATIVE|152-48-1-0-23-0-0-0
2704|data|Elf32_Rel <0x130A8, 0x17>; R_ARM_RELATIVE|168-48-1-0-23-0-0-0
2712|data|Elf32_Rel <0x130B8, 0x17>; R_ARM_RELATIVE|184-48-1-0-23-0-0-0
2720|data|Elf32_Rel <0x12FD4, 0x415>; R_ARM_GLOB_DAT __cxa_finalize|212-47-1-0-21-4-0-0
2728|data|Elf32_Rel <0x12FD8, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-47-1-0-21-5-0-0
2736|data|Elf32_Rel <0x12FDC, 0xA15>; R_ARM_GLOB_DAT __stack_chk_guard|220-47-1-0-21-10-0-0
2744|data|Elf32_Rel <0x12FE0, 0xC15>; R_ARM_GLOB_DAT optind|224-47-1-0-21-12-0-0
2752|data|Elf32_Rel <0x12FE4, 0xF15>; R_ARM_GLOB_DAT stderr|228-47-1-0-21-15-0-0
2760|data|Elf32_Rel <0x12FE8, 0x1615>; R_ARM_GLOB_DAT __gmon_start__|232-47-1-0-21-22-0-0
2768|data|Elf32_Rel <0x12FF4, 0x2015>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-32-0-0
2776|data|Elf32_Rel <0x12FF8, 0x2415>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-36-0-0
2784|data|Elf32_Rel <0x12FFC, 0x2615>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-38-0-0
2792|data|Elf32_Rel <0x12F48, 0x316>; R_ARM_JUMP_SLOT sg_set_binary_mode|72-47-1-0-22-3-0-0
2800|data|Elf32_Rel <0x12F4C, 0x416>; R_ARM_JUMP_SLOT __cxa_finalize|76-47-1-0-22-4-0-0
2808|data|Elf32_Rel <0x12F50, 0x616>; R_ARM_JUMP_SLOT set_scsi_pt_data_out|80-47-1-0-22-6-0-0
2816|data|Elf32_Rel <0x12F54, 0x716>; R_ARM_JUMP_SLOT read|84-47-1-0-22-7-0-0
2824|data|Elf32_Rel <0x12F58, 0x816>; R_ARM_JUMP_SLOT free|88-47-1-0-22-8-0-0
2832|data|Elf32_Rel <0x12F5C, 0x916>; R_ARM_JUMP_SLOT construct_scsi_pt_obj|92-47-1-0-22-9-0-0
2840|data|Elf32_Rel <0x12F60, 0xB16>; R_ARM_JUMP_SLOT sg_cmds_close_device|96-47-1-0-22-11-0-0
2848|data|Elf32_Rel <0x12F64, 0xD16>; R_ARM_JUMP_SLOT __stack_chk_fail|100-47-1-0-22-13-0-0
2856|data|Elf32_Rel <0x12F68, 0xE16>; R_ARM_JUMP_SLOT perror|104-47-1-0-22-14-0-0
2864|data|Elf32_Rel <0x12F6C, 0x1016>; R_ARM_JUMP_SLOT lseek64|108-47-1-0-22-16-0-0
2872|data|Elf32_Rel <0x12F70, 0x1116>; R_ARM_JUMP_SLOT dStrHexErr|112-47-1-0-22-17-0-0
2880|data|Elf32_Rel <0x12F74, 0x1216>; R_ARM_JUMP_SLOT open64|116-47-1-0-22-18-0-0
2888|data|Elf32_Rel <0x12F78, 0x1316>; R_ARM_JUMP_SLOT malloc|120-47-1-0-22-19-0-0
2896|data|Elf32_Rel <0x12F7C, 0x1416>; R_ARM_JUMP_SLOT __libc_start_main|124-47-1-0-22-20-0-0
2904|data|Elf32_Rel <0x12F80, 0x1516>; R_ARM_JUMP_SLOT __vfprintf_chk|128-47-1-0-22-21-0-0
2912|data|Elf32_Rel <0x12F84, 0x1616>; R_ARM_JUMP_SLOT __gmon_start__|132-47-1-0-22-22-0-0
2920|data|Elf32_Rel <0x12F88, 0x1716>; R_ARM_JUMP_SLOT getopt_long|136-47-1-0-22-23-0-0
2928|data|Elf32_Rel <0x12F8C, 0x1816>; R_ARM_JUMP_SLOT __ctype_b_loc|140-47-1-0-22-24-0-0
2936|data|Elf32_Rel <0x12F90, 0x1916>; R_ARM_JUMP_SLOT strlen|144-47-1-0-22-25-0-0
2944|data|Elf32_Rel <0x12F94, 0x1A16>; R_ARM_JUMP_SLOT strchr|148-47-1-0-22-26-0-0
2952|data|Elf32_Rel <0x12F98, 0x1B16>; R_ARM_JUMP_SLOT do_scsi_pt|152-47-1-0-22-27-0-0
2960|data|Elf32_Rel <0x12F9C, 0x1C16>; R_ARM_JUMP_SLOT destruct_scsi_pt_obj|156-47-1-0-22-28-0-0
2968|data|Elf32_Rel <0x12FA0, 0x1D16>; R_ARM_JUMP_SLOT memset|160-47-1-0-22-29-0-0
2976|data|Elf32_Rel <0x12FA4, 0x1E16>; R_ARM_JUMP_SLOT set_scsi_pt_sense|164-47-1-0-22-30-0-0
2984|data|Elf32_Rel <0x12FA8, 0x1F16>; R_ARM_JUMP_SLOT safe_strerror|168-47-1-0-22-31-0-0
2992|data|Elf32_Rel <0x12FAC, 0x2116>; R_ARM_JUMP_SLOT sg_cmds_process_resp|172-47-1-0-22-33-0-0
3000|data|Elf32_Rel <0x12FB0, 0x2216>; R_ARM_JUMP_SLOT sg_get_category_sense_str|176-47-1-0-22-34-0-0
3008|data|Elf32_Rel <0x12FB4, 0x2316>; R_ARM_JUMP_SLOT sg_get_num|180-47-1-0-22-35-0-0
3016|data|Elf32_Rel <0x12FB8, 0x2516>; R_ARM_JUMP_SLOT sg_cmds_open_device|184-47-1-0-22-37-0-0
3024|data|Elf32_Rel <0x12FBC, 0x2716>; R_ARM_JUMP_SLOT strncmp|188-47-1-0-22-39-0-0
3032|data|Elf32_Rel <0x12FC0, 0x2816>; R_ARM_JUMP_SLOT abort|192-47-1-0-22-40-0-0
3040|data|Elf32_Rel <0x12FC4, 0x2916>; R_ARM_JUMP_SLOT close|196-47-1-0-22-41-0-0
3048|data|Elf32_Rel <0x12FC8, 0x2A16>; R_ARM_JUMP_SLOT __snprintf_chk|200-47-1-0-22-42-0-0
3056|data|Elf32_Rel <0x12FCC, 0x2B16>; R_ARM_JUMP_SLOT set_scsi_pt_cdb|204-47-1-0-22-43-0-0
3064|code|PUSH            {R3,LR}; _init|8-64-45-233
3068|code|BL              sub_1584|96-2-0-235
3072|code|POP             {R3,PC}|8-128-189-232
3076|code|PUSH            {LR}|4-224-45-229
3080|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xC14)|4-224-159-229
3084|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
3088|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
3092|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC14|40-35-1-0
3096|code|ADR             R12, 0xC20|0-198-143-226
3100|code|ADD             R12, R12, #0x12000|18-202-140-226
3104|code|LDR             PC, [R12,#(sg_set_binary_mode_ptr - 0x12C20)]!; __imp_sg_set_binary_mode|40-243-188-229
3108|code|ADR             R12, 0xC2C|0-198-143-226
3112|code|ADD             R12, R12, #0x12000|18-202-140-226
3116|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12C2C)]!; __imp___cxa_finalize|32-243-188-229
3120|code|ADR             R12, 0xC38|0-198-143-226
3124|code|ADD             R12, R12, #0x12000|18-202-140-226
3128|code|LDR             PC, [R12,#(set_scsi_pt_data_out_ptr - 0x12C38)]!; __imp_set_scsi_pt_data_out|24-243-188-229
3132|code|ADR             R12, 0xC44|0-198-143-226
3136|code|ADD             R12, R12, #0x12000|18-202-140-226
3140|code|LDR             PC, [R12,#(read_ptr - 0x12C44)]!; __imp_read|16-243-188-229
3144|code|ADR             R12, 0xC50|0-198-143-226
3148|code|ADD             R12, R12, #0x12000|18-202-140-226
3152|code|LDR             PC, [R12,#(free_ptr - 0x12C50)]!; __imp_free|8-243-188-229
3156|code|ADR             R12, 0xC5C|0-198-143-226
3160|code|ADD             R12, R12, #0x12000|18-202-140-226
3164|code|LDR             PC, [R12,#(construct_scsi_pt_obj_ptr - 0x12C5C)]!; __imp_construct_scsi_pt_obj|0-243-188-229
3168|code|ADR             R12, 0xC68|0-198-143-226
3172|code|ADD             R12, R12, #0x12000|18-202-140-226
3176|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x12C68)]!; __imp_sg_cmds_close_device|248-242-188-229
3180|code|ADR             R12, 0xC74|0-198-143-226
3184|code|ADD             R12, R12, #0x12000|18-202-140-226
3188|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x12C74)]!; __imp___stack_chk_fail|240-242-188-229
3192|code|ADR             R12, 0xC80|0-198-143-226
3196|code|ADD             R12, R12, #0x12000|18-202-140-226
3200|code|LDR             PC, [R12,#(perror_ptr - 0x12C80)]!; __imp_perror|232-242-188-229
3204|code|ADR             R12, 0xC8C|0-198-143-226
3208|code|ADD             R12, R12, #0x12000|18-202-140-226
3212|code|LDR             PC, [R12,#(lseek64_ptr - 0x12C8C)]!; __imp_lseek64|224-242-188-229
3216|code|ADR             R12, 0xC98|0-198-143-226
3220|code|ADD             R12, R12, #0x12000|18-202-140-226
3224|code|LDR             PC, [R12,#(dStrHexErr_ptr - 0x12C98)]!; __imp_dStrHexErr|216-242-188-229
3228|code|ADR             R12, 0xCA4|0-198-143-226
3232|code|ADD             R12, R12, #0x12000|18-202-140-226
3236|code|LDR             PC, [R12,#(open64_ptr - 0x12CA4)]!; __imp_open64|208-242-188-229
3240|code|ADR             R12, 0xCB0|0-198-143-226
3244|code|ADD             R12, R12, #0x12000|18-202-140-226
3248|code|LDR             PC, [R12,#(malloc_ptr - 0x12CB0)]!; __imp_malloc|200-242-188-229
3252|code|ADR             R12, 0xCBC|0-198-143-226
3256|code|ADD             R12, R12, #0x12000|18-202-140-226
3260|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12CBC)]!; __imp___libc_start_main|192-242-188-229
3264|code|ADR             R12, 0xCC8|0-198-143-226
3268|code|ADD             R12, R12, #0x12000|18-202-140-226
3272|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x12CC8)]!; __imp___vfprintf_chk|184-242-188-229
3276|code|ADR             R12, 0xCD4|0-198-143-226
3280|code|ADD             R12, R12, #0x12000|18-202-140-226
3284|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12CD4)]!; __imp___gmon_start__|176-242-188-229
3288|code|ADR             R12, 0xCE0|0-198-143-226
3292|code|ADD             R12, R12, #0x12000|18-202-140-226
3296|code|LDR             PC, [R12,#(getopt_long_ptr - 0x12CE0)]!; __imp_getopt_long|168-242-188-229
3300|code|ADR             R12, 0xCEC|0-198-143-226
3304|code|ADD             R12, R12, #0x12000|18-202-140-226
3308|code|LDR             PC, [R12,#(__ctype_b_loc_ptr - 0x12CEC)]!; __imp___ctype_b_loc|160-242-188-229
3312|code|ADR             R12, 0xCF8|0-198-143-226
3316|code|ADD             R12, R12, #0x12000|18-202-140-226
3320|code|LDR             PC, [R12,#(strlen_ptr - 0x12CF8)]!; __imp_strlen|152-242-188-229
3324|code|ADR             R12, 0xD04|0-198-143-226
3328|code|ADD             R12, R12, #0x12000|18-202-140-226
3332|code|LDR             PC, [R12,#(strchr_ptr - 0x12D04)]!; __imp_strchr|144-242-188-229
3336|code|ADR             R12, 0xD10|0-198-143-226
3340|code|ADD             R12, R12, #0x12000|18-202-140-226
3344|code|LDR             PC, [R12,#(do_scsi_pt_ptr - 0x12D10)]!; __imp_do_scsi_pt|136-242-188-229
3348|code|ADR             R12, 0xD1C|0-198-143-226
3352|code|ADD             R12, R12, #0x12000|18-202-140-226
3356|code|LDR             PC, [R12,#(destruct_scsi_pt_obj_ptr - 0x12D1C)]!; __imp_destruct_scsi_pt_obj|128-242-188-229
3360|code|ADR             R12, 0xD28|0-198-143-226
3364|code|ADD             R12, R12, #0x12000|18-202-140-226
3368|code|LDR             PC, [R12,#(memset_ptr - 0x12D28)]!; __imp_memset|120-242-188-229
3372|code|ADR             R12, 0xD34|0-198-143-226
3376|code|ADD             R12, R12, #0x12000|18-202-140-226
3380|code|LDR             PC, [R12,#(set_scsi_pt_sense_ptr - 0x12D34)]!; __imp_set_scsi_pt_sense|112-242-188-229
3384|code|ADR             R12, 0xD40|0-198-143-226
3388|code|ADD             R12, R12, #0x12000|18-202-140-226
3392|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x12D40)]!; __imp_safe_strerror|104-242-188-229
3396|code|ADR             R12, 0xD4C|0-198-143-226
3400|code|ADD             R12, R12, #0x12000|18-202-140-226
3404|code|LDR             PC, [R12,#(sg_cmds_process_resp_ptr - 0x12D4C)]!; __imp_sg_cmds_process_resp|96-242-188-229
3408|code|ADR             R12, 0xD58|0-198-143-226
3412|code|ADD             R12, R12, #0x12000|18-202-140-226
3416|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x12D58)]!; __imp_sg_get_category_sense_str|88-242-188-229
3420|code|ADR             R12, 0xD64|0-198-143-226
3424|code|ADD             R12, R12, #0x12000|18-202-140-226
3428|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x12D64)]!; __imp_sg_get_num|80-242-188-229
3432|code|ADR             R12, 0xD70|0-198-143-226
3436|code|ADD             R12, R12, #0x12000|18-202-140-226
3440|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x12D70)]!; __imp_sg_cmds_open_device|72-242-188-229
3444|code|ADR             R12, 0xD7C|0-198-143-226
3448|code|ADD             R12, R12, #0x12000|18-202-140-226
3452|code|LDR             PC, [R12,#(strncmp_ptr - 0x12D7C)]!; __imp_strncmp|64-242-188-229
3456|code|ADRL            R12, 0x12D88|0-198-143-226-18-202-140-226
3464|code|LDR             PC, [R12,#(abort_ptr - 0x12D88)]!; __imp_abort|56-242-188-229
3468|code|ADRL            R12, 0x12D94|0-198-143-226-18-202-140-226
3476|code|LDR             PC, [R12,#(close_ptr - 0x12D94)]!; __imp_close|48-242-188-229
3480|code|ADRL            R12, 0x12DA0|0-198-143-226-18-202-140-226
3488|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x12DA0)]!; __imp___snprintf_chk|40-242-188-229
3492|code|ADRL            R12, 0x12DAC|0-198-143-226-18-202-140-226
3500|code|LDR             PC, [R12,#(set_scsi_pt_cdb_ptr - 0x12DAC)]!; __imp_set_scsi_pt_cdb|32-242-188-229
3504|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3508|code|SUB             SP, SP, #0x164|217-176
3510|code|LDR.W           R9, =(_GLOBAL_OFFSET_TABLE_ - 0xDC6)|223-248-204-150
3514|code|ADD             R5, SP, #0x188+var_130|22-173
3516|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x12F3C)|223-248-200-54
3520|code|MOV             R6, R0|6-70
3522|code|ADD             R9, PC; _GLOBAL_OFFSET_TABLE_|249-68
3524|code|LDR.W           R2, =(asc_19D8 - 0xDD6); "-"|223-248-196-38
3528|code|LDR.W           R8, =(aBHiILMORsSVv - 0xDDC); "b:hi:I:l:m:o:rs:S:vV"|223-248-196-134
3532|code|MOV             R11, R1|139-70
3534|code|LDR.W           R3, [R9,R3]; __stack_chk_guard|89-248-3-48
3538|code|ADD             R2, PC; "-"|122-68
3540|code|LDR.W           R7, =(off_13008 - 0xDE6); "bpw"|223-248-188-118
3544|code|ADD             R8, PC; "b:hi:I:l:m:o:rs:S:vV"|248-68
3546|code|STR             R2, [SP,#0x188+var_154]|13-146
3548|code|MOVS            R4, #0|0-36
3550|code|LDR.W           R2, =(off_12D8C - 0xDEC); "hd"|223-248-184-38
3554|code|ADD             R7, PC; off_13008|127-68
3556|code|STR             R3, [SP,#0x188+var_178]|4-147
3558|code|LDR             R3, [R3]|27-104
3560|code|ADD             R2, PC; off_12D8C|122-68
3562|code|STR             R2, [SP,#0x188+var_14C]|15-146
3564|code|LDR.W           R2, =(aAct - 0xDF6); "act"|223-248-172-38
3568|code|STR             R4, [SP,#0x188+verbose]|6-148
3570|code|ADD             R2, PC; "act"|122-68
3572|code|STR             R4, [SP,#0x188+var_15C]|11-148
3574|code|STR             R4, [SP,#0x188+fd]|12-148
3576|code|STR             R4, [SP,#0x188+var_164]|9-148
3578|code|STR             R2, [SP,#0x188+s1]|17-146
3580|code|STR             R4, [SP,#0x188+s]|18-148
3582|code|STR             R4, [SP,#0x188+var_150]|14-148
3584|code|STR             R4, [SP,#0x188+size]|10-148
3586|code|STR             R4, [SP,#0x188+var_168]|8-148
3588|code|STR             R4, [SP,#0x188+var_174]|5-148
3590|code|STR             R4, [SP,#0x188+var_148]|16-148
3592|code|STR             R4, [SP,#0x188+var_16C]|7-148
3594|code|STR             R3, [SP,#0x188+var_2C]|87-147
3596|code|STR             R5, [SP,#0x188+longind]; longind|0-149
3598|code|MOV             R3, R7; longopts|59-70
3600|code|MOV             R0, R6; argc|48-70
3602|code|MOV             R1, R11; argv|89-70
3604|code|MOV             R2, R8; shortopts|66-70
3606|code|MOV.W           R10, #0|79-240-0-10
3610|code|STR.W           R10, [R5]|197-248-0-160
3614|code|BLX             getopt_long|255-247-92-239
3618|code|ADDS            R3, R0, #1|67-28
3620|code|BEQ.W           loc_1096|0-240-55-129
3624|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
3628|code|CMP             R3, #0x37|55-43
3630|code|BHI.W           def_E32; jumptable 00000E32 default case, cases 64-72,74-82,84,85,87-97,99-103,106,107,110,112,113,116,117|0-242-7-129
3634|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
3638|data|DCW 0xEB; jump table for switch statement|235-0
3640|data|DCW 0x105|5-1
3642|data|DCW 0x105|5-1
3644|data|DCW 0x105|5-1
3646|data|DCW 0x105|5-1
3648|data|DCW 0x105|5-1
3650|data|DCW 0x105|5-1
3652|data|DCW 0x105|5-1
3654|data|DCW 0x105|5-1
3656|data|DCW 0x105|5-1
3658|data|DCW 0xE5|229-0
3660|data|DCW 0x105|5-1
3662|data|DCW 0x105|5-1
3664|data|DCW 0x105|5-1
3666|data|DCW 0x105|5-1
3668|data|DCW 0x105|5-1
3670|data|DCW 0x105|5-1
3672|data|DCW 0x105|5-1
3674|data|DCW 0x105|5-1
3676|data|DCW 0x105|5-1
3678|data|DCW 0xD3|211-0
3680|data|DCW 0x105|5-1
3682|data|DCW 0x105|5-1
3684|data|DCW 0xC1|193-0
3686|data|DCW 0x105|5-1
3688|data|DCW 0x105|5-1
3690|data|DCW 0x105|5-1
3692|data|DCW 0x105|5-1
3694|data|DCW 0x105|5-1
3696|data|DCW 0x105|5-1
3698|data|DCW 0x105|5-1
3700|data|DCW 0x105|5-1
3702|data|DCW 0x105|5-1
3704|data|DCW 0x105|5-1
3706|data|DCW 0x105|5-1
3708|data|DCW 0xA1|161-0
3710|data|DCW 0x105|5-1
3712|data|DCW 0x105|5-1
3714|data|DCW 0x105|5-1
3716|data|DCW 0x105|5-1
3718|data|DCW 0x105|5-1
3720|data|DCW 0xEB|235-0
3722|data|DCW 0x8F|143-0
3724|data|DCW 0x105|5-1
3726|data|DCW 0x105|5-1
3728|data|DCW 0x81|129-0
3730|data|DCW 0x4B|75-0
3732|data|DCW 0x105|5-1
3734|data|DCW 0x3A|58-0
3736|data|DCW 0x105|5-1
3738|data|DCW 0x105|5-1
3740|data|DCW 0x38|56-0
3742|data|DCW 0xF3|243-0
3744|data|DCW 0x105|5-1
3746|data|DCW 0x105|5-1
3748|data|DCW 0xEF|239-0
3750|code|LDR             R4, [SP,#0x188+var_154]; jumptable 00000E32 case 114|13-156
3752|code|B               loc_E0C|176-231
3754|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 111|223-248-244-53
3758|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
3762|code|LDR             R0, [R3]; buf|24-104
3764|code|BLX             sg_get_num|255-247-82-239
3768|code|SUBS            R3, R0, #0|3-30
3770|code|STR             R3, [SP,#0x188+var_164]|9-147
3772|code|BGE             loc_E0C|166-218
3774|code|LDR.W           R0, =(aBadArgumentToO - 0xEC6); "bad argument to '--offset'\n"|223-248-228-5
3778|code|ADD             R0, PC; "bad argument to '--offset'\n"|120-68
3780|code|BL              sub_1678|0-240-216-251
3784|code|MOVS            R0, #1|1-32
3786|code|B               loc_FCA|126-224
3788|code|BLX             __ctype_b_loc; jumptable 00000E32 case 109|255-247-10-239
3792|code|LDR.W           R3, =(optarg_ptr - 0x12F3C)|223-248-204-53
3796|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
3800|code|LDR             R3, [R3]|27-104
3802|code|LDRB            R2, [R3]|26-120
3804|code|STR             R3, [SP,#0x188+s]|18-147
3806|code|LDR             R3, [R0]|3-104
3808|code|LDRH.W          R3, [R3,R2,LSL#1]|51-248-18-48
3812|code|AND.W           R3, R3, #0x800|3-244-0-99
3816|code|UXTH            R3, R3|155-178
3818|code|CMP             R3, #0|0-43
3820|code|BNE.W           loc_105A|64-240-181-128
3824|code|LDR             R0, [SP,#0x188+s]; s|18-152
3826|code|STR             R3, [SP,#0x188+var_13C]|19-147
3828|code|BLX             strlen|255-247-252-238
3832|code|LDR             R3, [SP,#0x188+var_13C]|19-155
3834|code|STR             R5, [SP,#0x188+var_138]|20-149
3836|code|LDR             R5, [SP,#0x188+var_14C]|15-157
3838|code|MOV             R10, R3|154-70
3840|code|STR.W           R8, [SP,#0x188+var_134]|205-248-84-128
3844|code|MOV             R8, R3|152-70
3846|code|MOV             R3, R7|59-70
3848|code|STR             R4, [SP,#0x188+var_13C]|19-148
3850|code|MOV             R7, R10|87-70
3852|code|LDR             R4, [SP,#0x188+s]|18-156
3854|code|MOV             R10, R3|154-70
3856|code|STR             R6, [SP,#0x188+s]|18-150
3858|code|MOV             R6, R0|6-70
3860|code|LDR.W           R0, [R5,R8]; s1|85-248-8-0
3864|code|MOV             R1, R4; s2|33-70
3866|code|MOV             R2, R6; n|50-70
3868|code|BLX             strncmp|255-247-42-239
3872|code|CMP             R0, #0|0-40
3874|code|BEQ.W           loc_1076|0-240-168-128
3878|code|ADDS            R7, #1|1-55
3880|code|ADD.W           R8, R8, #0xC|8-241-12-8
3884|code|CMP             R7, #0xE|14-47
3886|code|BNE             loc_F14|241-209
3888|code|BL              sub_16C0|0-240-198-251
3892|code|MOVS            R0, #1|1-32
3894|code|B               loc_FCA|72-224
3896|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 108|223-248-100-53
3900|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
3904|code|LDR             R0, [R3]; buf|24-104
3906|code|BLX             sg_get_num|255-247-12-239
3910|code|SUBS            R3, R0, #0|3-30
3912|code|STR             R3, [SP,#0x188+size]|10-147
3914|code|BLT.W           loc_1300|192-242-217-129
3918|code|MOVS            R3, #1|1-35
3920|code|STR             R3, [SP,#0x188+var_150]|14-147
3922|code|B               loc_E0C|91-231
3924|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 105|223-248-72-53
3928|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
3932|code|LDR             R0, [R3]; buf|24-104
3934|code|BLX             sg_get_num|255-247-254-238
3938|code|CMP             R0, #0xFF|255-40
3940|code|STR             R0, [SP,#0x188+var_168]|8-144
3942|code|BLS.W           loc_E0C|127-246-81-175
3946|code|LDR.W           R0, =(aArgumentToIdSh - 0xF72); "argument to '--id' should be in the ran"...|223-248-60-5
3950|code|ADD             R0, PC; "argument to '--id' should be in the ran"...|120-68
3952|code|BL              sub_1678|0-240-130-251
3956|code|MOVS            R0, #1|1-32
3958|code|B               loc_FCA|40-224
3960|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 98|223-248-36-53
3964|code|LDR.W           R10, [R9,R3]; optarg|89-248-3-160
3968|code|LDR.W           R0, [R10]; buf|218-248-0-0
3972|code|BLX             sg_get_num|255-247-234-238
3976|code|SUBS            R3, R0, #0|3-30
3978|code|STR             R3, [SP,#0x188+var_16C]|7-147
3980|code|BLT.W           loc_12F4|192-242-178-129
3984|code|LDR.W           R0, [R10]; s|218-248-0-0
3988|code|MOVS            R1, #0x2C ; ','; c|44-33
3990|code|BLX             strchr|255-247-178-238
3994|code|CMP             R0, #0|0-40
3996|code|BEQ.W           loc_E0C|63-244-54-175
4000|code|ADDS            R1, R0, #1; s2|65-28
4002|code|MOVS            R2, #3; n|3-34
4004|code|LDR             R0, [SP,#0x188+s1]; s1|17-152
4006|code|BLX             strncmp|255-247-230-238
4010|code|CMP             R0, #0|0-40
4012|code|BNE.W           loc_E0C|127-244-46-175
4016|code|LDR             R3, [SP,#0x188+var_148]|16-155
4018|code|ADDS            R3, #1|1-51
4020|code|STR             R3, [SP,#0x188+var_148]|16-147
4022|code|B               loc_E0C|41-231
4024|code|LDR.W           R0, =(aSgWriteBufferV - 0xFC4); jumptable 00000E32 case 86|223-248-240-4
4028|code|LDR.W           R1, =(a11520140518 - 0xFC6); "1.15 20140518"|223-248-240-20
4032|code|ADD             R0, PC; "sg_write_buffer: version: %s\n"|120-68
4034|code|ADD             R1, PC; "1.15 20140518"|121-68
4036|code|BL              sub_1678|0-240-88-251
4040|code|MOVS            R0, #0|0-32
4042|code|LDR             R3, [SP,#0x188+var_178]|4-155
4044|code|LDR             R2, [SP,#0x188+var_2C]|87-154
4046|code|LDR             R3, [R3]|27-104
4048|code|CMP             R2, R3|154-66
4050|code|BNE.W           loc_1412|64-240-30-130
4054|code|ADD             SP, SP, #0x164|89-176
4056|code|POP.W           {R4-R11,PC}|189-232-240-143
4060|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 83|223-248-192-52
4064|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
4068|code|LDR             R0, [R3]; buf|24-104
4070|code|BLX             sg_get_num|255-247-186-238
4074|code|CMP             R0, #7|7-40
4076|code|STR             R0, [SP,#0x188+var_15C]|11-144
4078|code|BLS.W           loc_E0C|127-246-13-175
4082|code|LDR.W           R0, =(aExpectedArgume - 0xFFA); "expected argument to '--specific' to be"...|223-248-192-4
4086|code|ADD             R0, PC; "expected argument to '--specific' to be"...|120-68
4088|code|BL              sub_1678|0-240-62-251
4092|code|MOVS            R0, #1|1-32
4094|code|B               loc_FCA|228-231
4096|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 73|223-248-156-52
4100|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
4104|code|LDR             R4, [R3]|28-104
4106|code|B               loc_E0C|255-230
4108|code|LDR             R3, [SP,#0x188+var_174]; jumptable 00000E32 cases 63,104|5-155
4110|code|ADDS            R3, #1|1-51
4112|code|STR             R3, [SP,#0x188+var_174]|5-147
4114|code|B               loc_E0C|251-230
4116|code|LDR             R3, [SP,#0x188+verbose]; jumptable 00000E32 case 118|6-155
4118|code|ADDS            R3, #1|1-51
4120|code|STR             R3, [SP,#0x188+verbose]|6-147
4122|code|B               loc_E0C|247-230
4124|code|LDR.W           R3, =(optarg_ptr - 0x12F3C); jumptable 00000E32 case 115|223-248-128-52
4128|code|LDR.W           R3, [R9,R3]; optarg|89-248-3-48
4132|code|LDR             R0, [R3]; buf|24-104
4134|code|BLX             sg_get_num|255-247-154-238
4138|code|SUBS            R3, R0, #0|3-30
4140|code|STR             R3, [SP,#0x188+fd]|12-147
4142|code|BGE.W           loc_E0C|191-246-237-174
4146|code|LDR.W           R0, =(aBadArgumentToS - 0x103A); "bad argument to '--skip'\n"|223-248-132-4
4150|code|ADD             R0, PC; "bad argument to '--skip'\n"|120-68
4152|code|BL              sub_1678|0-240-30-251
4156|code|MOVS            R0, #1|1-32
4158|code|B               loc_FCA|196-231
4160|code|MOV             R1, R0; jumptable 00000E32 default case, cases 64-72,74-82,84,85,87-97,99-103,106,107,110,112,113,116,117|1-70
4162|code|LDR.W           R0, =(aUnrecognisedOp - 0x104A); "unrecognised option code 0x%x ??\n"|223-248-120-4
4166|code|ADD             R0, PC; "unrecognised option code 0x%x ??\n"|120-68
4168|code|BL              sub_1678|0-240-22-251
4172|code|LDR.W           R0, =(aUsageSgWriteBu - 0x1054); "Usage: sg_write_buffer [--bpw=CS] [--he"...|223-248-112-4
4176|code|ADD             R0, PC; "Usage: sg_write_buffer [--bpw=CS] [--he"...|120-68
4178|code|BL              sub_1678|0-240-17-251
4182|code|MOVS            R0, #1|1-32
4184|code|B               loc_FCA|183-231
4186|code|LDR             R0, [SP,#0x188+s]; buf|18-152
4188|code|BLX             sg_get_num|255-247-126-238
4192|code|CMP             R0, #0x1F|31-40
4194|code|STR             R0, [SP,#0x188+s]|18-144
4196|code|BLS.W           loc_E0C|127-246-210-174
4200|code|LDR.W           R0, =(aArgumentToMode - 0x1070); "argument to '--mode' should be in the r"...|223-248-88-4
4204|code|ADD             R0, PC; "argument to '--mode' should be in the r"...|120-68
4206|code|BL              sub_1678|0-240-3-251
4210|code|MOVS            R0, #1|1-32
4212|code|B               loc_FCA|169-231
4214|code|LDR             R2, [SP,#0x188+var_14C]|15-154
4216|code|MOV             R3, R10|83-70
4218|code|MOV             R10, R7|186-70
4220|code|MOV             R7, R3|31-70
4222|code|MOVS            R3, #0xC|12-35
4224|code|LDR             R6, [SP,#0x188+s]|18-158
4226|code|MLA.W           R12, R3, R10, R2|3-251-10-44
4230|code|LDR             R4, [SP,#0x188+var_13C]|19-156
4232|code|LDR             R5, [SP,#0x188+var_138]|20-157
4234|code|LDR.W           R8, [SP,#0x188+var_134]|221-248-84-128
4238|code|LDR.W           R3, [R12,#4]|220-248-4-48
4242|code|STR             R3, [SP,#0x188+s]|18-147
4244|code|B               loc_E0C|186-230
4246|code|LDR             R3, [SP,#0x188+var_174]|5-155
4248|code|CBZ             R3, loc_10BA|123-177
4250|code|CMP             R3, #1|1-43
4252|code|BEQ             loc_1112|57-208
4254|code|LDR.W           R0, =(aUsageSgWriteBu - 0x10A6); "Usage: sg_write_buffer [--bpw=CS] [--he"...|223-248-40-4
4258|code|ADD             R0, PC; "Usage: sg_write_buffer [--bpw=CS] [--he"...|120-68
4260|code|BL              sub_1678|0-240-232-250
4264|code|LDR.W           R0, =(aMissingDeviceN+0x14 - 0x10B0); "\n"|223-248-32-4
4268|code|ADD             R0, PC; "\n"|120-68
4270|code|BL              sub_1678|0-240-227-250
4274|code|BL              sub_16C0|0-240-5-251
4278|code|MOV             R0, R10|80-70
4280|code|B               loc_FCA|135-231
4282|code|LDR.W           R3, =(optind_ptr - 0x12F3C)|223-248-20-52
4286|code|LDR.W           R5, [R9,R3]; optind|89-248-3-80
4290|code|LDR             R3, [R5]|43-104
4292|code|CMP             R6, R3|158-66
4294|code|BLE             loc_10FE|26-221
4296|code|ADDS            R2, R3, #1|90-28
4298|code|LDR.W           R7, [R11,R3,LSL#2]|91-248-35-112
4302|code|CMP             R6, R2|150-66
4304|code|STR             R2, [R5]|42-96
4306|code|BLE             loc_111E|36-221
4308|code|LDR             R4, =(aUnexpectedExtr - 0x10DC); "Unexpected extra argument: %s\n"|255-76
4310|code|MOV             R7, R5|47-70
4312|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
4314|code|B               loc_10EC|7-224
4316|code|LDR.W           R1, [R11,R3,LSL#2]|91-248-35-16
4320|code|MOV             R0, R4|32-70
4322|code|BL              sub_1678|0-240-201-250
4326|code|LDR             R3, [R7]|59-104
4328|code|ADDS            R3, #1|1-51
4330|code|STR             R3, [R7]|59-96
4332|code|LDR             R3, [R5]|43-104
4334|code|CMP             R6, R3|158-66
4336|code|BGT             loc_10DC|244-220
4338|code|LDR             R0, =(aUsageSgWriteBu - 0x10F8); "Usage: sg_write_buffer [--bpw=CS] [--he"...|249-72
4340|code|ADD             R0, PC; "Usage: sg_write_buffer [--bpw=CS] [--he"...|120-68
4342|code|BL              sub_1678|0-240-191-250
4346|code|MOVS            R0, #1|1-32
4348|code|B               loc_FCA|101-231
4350|code|LDR             R0, =(aMissingDeviceN - 0x1104); "missing device name!\n"|247-72
4352|code|ADD             R0, PC; "missing device name!\n"|120-68
4354|code|BL              sub_1678|0-240-185-250
4358|code|LDR             R0, =(aUsageSgWriteBu - 0x110C); "Usage: sg_write_buffer [--bpw=CS] [--he"...|246-72
4360|code|ADD             R0, PC; "Usage: sg_write_buffer [--bpw=CS] [--he"...|120-68
4362|code|BL              sub_1678|0-240-181-250
4366|code|MOVS            R0, #1|1-32
4368|code|B               loc_FCA|91-231
4370|code|LDR             R0, =(aUsageSgWriteBu - 0x1118); "Usage: sg_write_buffer [--bpw=CS] [--he"...|244-72
4372|code|ADD             R0, PC; "Usage: sg_write_buffer [--bpw=CS] [--he"...|120-68
4374|code|BL              sub_1678|0-240-175-250
4378|code|MOV             R0, R10|80-70
4380|code|B               loc_FCA|85-231
4382|code|CMP             R7, #0|0-47
4384|code|BEQ             loc_10FE|237-208
4386|code|LDR             R2, [SP,#0x188+size]|10-154
4388|code|LDR             R3, [SP,#0x188+var_16C]|7-155
4390|code|CMP             R2, #0|0-42
4392|code|MOV             R1, R3|25-70
4394|code|ITE LE|212-191
4396|code|MOVLE           R5, #0|0-37
4398|code|MOVGT           R5, #1|1-37
4400|code|CMP             R1, R2|145-66
4402|code|BLE             loc_1140|5-221
4404|code|CBZ             R5, loc_1140|37-177
4406|code|LDR             R0, =(aTrimChunkSizeC - 0x113E); "trim chunk size (CS) to be the same as "...|236-72
4408|code|STR             R2, [SP,#0x188+var_16C]|7-146
4410|code|ADD             R0, PC; "trim chunk size (CS) to be the same as "...|120-68
4412|code|BL              sub_1678|0-240-156-250
4416|code|MOV             R0, R7; device_name|56-70
4418|code|MOVS            R1, #0; read_only|0-33
4420|code|LDR             R2, [SP,#0x188+verbose]; verbose|6-154
4422|code|BLX             sg_cmds_open_device|255-247-16-238
4426|code|SUBS.W          R8, R0, #0|176-241-0-8
4430|code|BLT.W           loc_1294|192-242-161-128
4434|code|MOVS            R6, R4|38-28
4436|code|IT NE|24-191
4438|code|MOVNE           R6, #1|1-38
4440|code|CMP             R6, #0|0-46
4442|code|BNE             loc_11DE|64-209
4444|code|CMP             R5, #0|0-45
4446|code|BNE             loc_11DE|62-209
4448|code|MOV             R9, R5|169-70
4450|code|STR             R5, [SP,#0x188+size]|10-149
4452|code|LDR             R3, [SP,#0x188+var_16C]|7-155
4454|code|CMP             R3, #0|0-43
4456|code|BEQ.W           loc_1384|0-240-12-129
4460|code|LDR             R7, =(aSendingWriteBu - 0x1178); "sending write buffer, mode=0x%x, mspec="...|223-79
4462|code|MOVS            R5, #0|0-37
4464|code|LDR.W           R11, [SP,#0x188+var_15C]|221-248-44-176
4468|code|ADD             R7, PC; "sending write buffer, mode=0x%x, mspec="...|127-68
4470|code|LDR.W           R10, [SP,#0x188+s]|221-248-72-160
4474|code|STR             R7, [SP,#0x188+var_15C]|11-151
4476|code|LDR             R4, [SP,#0x188+verbose]|6-156
4478|code|LDR             R7, [SP,#0x188+size]|10-159
4480|code|B               loc_11AA|19-224
4482|code|LDR             R3, [SP,#0x188+var_164]|9-155
4484|code|ADD.W           R12, R5, R3|5-235-3-12
4488|code|ADD.W           R3, R9, R5|9-235-5-3
4492|code|STR.W           R12, [SP,#0x188+longind]|205-248-0-192
4496|code|STR             R3, [SP,#0x188+var_184]|1-147
4498|code|MOV             R0, R8|64-70
4500|code|STR             R6, [SP,#0x188+var_180]|2-150
4502|code|MOV             R1, R10|81-70
4504|code|STR             R4, [SP,#0x188+var_17C]|3-148
4506|code|MOV             R2, R11|90-70
4508|code|LDR             R3, [SP,#0x188+var_168]|8-155
4510|code|BL              sub_1700|0-240-175-250
4514|code|CMP             R0, #0|0-40
4516|code|BNE.W           loc_130C|64-240-178-128
4520|code|ADD             R5, R6|53-68
4522|code|CMP             R5, R7|189-66
4524|code|BGE             loc_12AC|126-218
4526|code|LDR             R3, [SP,#0x188+var_16C]|7-155
4528|code|SUBS            R6, R7, R5|126-27
4530|code|CMP             R6, R3|158-66
4532|code|IT GE|168-191
4534|code|MOVGE           R6, R3|30-70
4536|code|CMP             R4, #0|0-44
4538|code|BEQ             loc_1182|226-208
4540|code|LDR             R3, [SP,#0x188+var_164]|9-155
4542|code|MOV             R1, R10|81-70
4544|code|STR             R6, [SP,#0x188+var_184]|1-150
4546|code|MOV             R2, R11|90-70
4548|code|ADD.W           R12, R5, R3|5-235-3-12
4552|code|LDR             R0, [SP,#0x188+var_15C]|11-152
4554|code|STR.W           R12, [SP,#0x188+longind]|205-248-0-192
4558|code|LDR             R3, [SP,#0x188+var_168]|8-155
4560|code|STR.W           R12, [SP,#0x188+var_174]|205-248-20-192
4564|code|BL              sub_1678|0-240-80-250
4568|code|LDR.W           R12, [SP,#0x188+var_174]|221-248-20-192
4572|code|B               loc_1188|212-231
4574|code|LDR             R3, [SP,#0x188+size]|10-155
4576|code|CMP             R3, #0|0-43
4578|code|BNE             loc_126C|67-209
4580|code|MOV.W           R0, #0x800000; size|79-244-0-0
4584|code|BLX             malloc|255-247-94-237
4588|code|MOV             R9, R0|129-70
4590|code|CMP             R0, #0|0-40
4592|code|BEQ             loc_127A|67-208
4594|code|MOV.W           R3, #0x800000|79-244-0-3
4598|code|STR             R3, [SP,#0x188+size]|10-147
4600|code|MOV             R5, R3|29-70
4602|code|MOV             R0, R9; s|72-70
4604|code|MOVS            R1, #0xFF; c|255-33
4606|code|MOV             R2, R5; n|42-70
4608|code|BLX             memset|255-247-142-237
4612|code|CMP             R6, #0|0-46
4614|code|BEQ             loc_1164|173-208
4616|code|LDRB            R3, [R4]|35-120
4618|code|CMP             R3, #0x2D ; '-'|45-43
4620|code|BEQ.W           loc_132E|0-240-143-128
4624|code|MOV             R0, R4|32-70
4626|code|MOVS            R1, #0|0-33
4628|code|BLX             open64|255-247-66-237
4632|code|SUBS            R7, R0, #0|7-30
4634|code|BLT.W           loc_13EE|192-242-232-128
4638|code|BLX             sg_set_binary_mode|255-247-252-236
4642|code|CMP             R0, #0|0-40
4644|code|BLT.W           loc_1430|192-242-4-129
4648|code|LDR             R1, [SP,#0x188+fd]|12-153
4650|code|CBZ             R1, loc_1248|105-177
4652|code|MOV.W           R11, R1,ASR#31|79-234-225-123
4656|code|MOVS            R3, #0|0-35
4658|code|MOV             R0, R7|56-70
4660|code|STR             R3, [SP,#0x188+longind]|0-147
4662|code|MOV             R2, R1|10-70
4664|code|MOV             R3, R11|91-70
4666|code|BLX             lseek64|255-247-36-237
4670|code|CMP             R0, #0|0-40
4672|code|SBCS.W          R3, R1, #0|113-241-0-3
4676|code|BLT.W           loc_143A|192-242-249-128
4680|code|MOV             R2, R5; nbytes|42-70
4682|code|MOV             R0, R7; fd|56-70
4684|code|MOV             R1, R9; buf|73-70
4686|code|BLX             read|255-247-246-236
4690|code|SUBS            R5, R0, #0|5-30
4692|code|BLT.W           loc_1476|192-242-15-129
4696|code|LDR             R3, [SP,#0x188+size]|10-155
4698|code|CMP             R5, R3|157-66
4700|code|BLT.W           loc_140E|192-242-215-128
4704|code|MOV             R5, R3|29-70
4706|code|MOV             R0, R7; fd|56-70
4708|code|STR             R5, [SP,#0x188+size]|10-149
4710|code|BLX             close|255-247-146-237
4714|code|B               loc_1164|123-231
4716|code|MOV             R0, R3; size|24-70
4718|code|MOV             R5, R3|29-70
4720|code|BLX             malloc|255-247-26-237
4724|code|MOV             R9, R0|129-70
4726|code|CMP             R0, #0|0-40
4728|code|BNE             loc_11FA|191-209
4730|code|LDR             R0, =(aSgWriteBufferO - 0x1280); "sg_write_buffer: out of memory\n"|157-72
4732|code|ADD             R0, PC; "sg_write_buffer: out of memory\n"|120-68
4734|code|BL              sub_1678|0-240-251-249
4738|code|MOV             R0, R8; device_fd|64-70
4740|code|BLX             sg_cmds_close_device|255-247-236-236
4744|code|CMP             R0, #0|0-40
4746|code|BLT.W           loc_1460|192-242-233-128
4750|code|MOVS            R4, #1|1-36
4752|code|MOV             R0, R4|32-70
4754|code|B               loc_FCA|154-230
4756|code|RSB.W           R0, R8, #0; errnum|200-241-0-0
4760|code|BLX             safe_strerror|255-247-78-237
4764|code|MOV             R1, R7|57-70
4766|code|MOV             R2, R0|2-70
4768|code|LDR             R0, =(aSgWriteBufferO_0 - 0x12A6); "sg_write_buffer: open error: %s: %s\n"|148-72
4770|code|ADD             R0, PC; "sg_write_buffer: open error: %s: %s\n"|120-68
4772|code|BL              sub_1678|0-240-232-249
4776|code|MOVS            R0, #0xF|15-32
4778|code|B               loc_FCA|142-230
4780|code|LDR             R3, [SP,#0x188+var_148]|16-155
4782|code|CBZ             R3, loc_12D4|139-177
4784|code|LDR             R3, [SP,#0x188+verbose]|6-155
4786|code|CMP             R3, #0|0-43
4788|code|BNE.W           loc_13CC|64-240-138-128
4792|code|LDR             R3, [SP,#0x188+verbose]|6-155
4794|code|MOVS            R1, #0|0-33
4796|code|MOV             R2, R1|10-70
4798|code|STR             R1, [SP,#0x188+longind]|0-145
4800|code|STR             R1, [SP,#0x188+var_184]|1-145
4802|code|MOV             R0, R8|64-70
4804|code|STR             R3, [SP,#0x188+var_17C]|3-147
4806|code|MOV             R3, R1|11-70
4808|code|STR             R1, [SP,#0x188+var_180]|2-145
4810|code|MOVS            R1, #0xF|15-33
4812|code|BL              sub_1700|0-240-24-250
4816|code|MOV             R4, R0|4-70
4818|code|CBNZ            R4, loc_1314|252-185
4820|code|MOVS            R4, #0|0-36
4822|code|CMP.W           R9, #0|185-241-0-15
4826|code|BEQ             loc_12E2|2-208
4828|code|MOV             R0, R9; ptr|72-70
4830|code|BLX             free|255-247-180-236
4834|code|MOV             R0, R8; device_fd|64-70
4836|code|BLX             sg_cmds_close_device|255-247-188-236
4840|code|CMP             R0, #0|0-40
4842|code|BLT             loc_13B4|99-219
4844|code|CMP             R4, #0|0-44
4846|code|BGE             loc_1290|207-218
4848|code|MOVS            R0, #0x63 ; 'c'|99-32
4850|code|B               loc_FCA|106-230
4852|code|LDR             R0, =(aArgumentToBpwS - 0x12FA); "argument to '--bpw' should be in a posi"...|128-72
4854|code|ADD             R0, PC; "argument to '--bpw' should be in a posi"...|120-68
4856|code|BL              sub_1678|0-240-190-249
4860|code|MOVS            R0, #1|1-32
4862|code|B               loc_FCA|100-230
4864|code|LDR             R0, =(aBadArgumentToL - 0x1306); "bad argument to '--length'\n"|126-72
4866|code|ADD             R0, PC; "bad argument to '--length'\n"|120-68
4868|code|BL              sub_1678|0-240-184-249
4872|code|MOVS            R0, #1|1-32
4874|code|B               loc_FCA|94-230
4876|code|LDR             R3, [SP,#0x188+var_148]|16-155
4878|code|MOV             R4, R0|4-70
4880|code|CMP             R3, #0|0-43
4882|code|BNE             loc_12B0|205-209
4884|code|ADD             R5, SP, #0x188+var_12C|23-173
4886|code|LDR             R3, [SP,#0x188+verbose]|6-155
4888|code|MOV             R0, R4|32-70
4890|code|MOVS            R1, #0x50 ; 'P'|80-33
4892|code|MOV             R2, R5|42-70
4894|code|BLX             sg_get_category_sense_str|255-247-24-237
4898|code|LDR             R0, =(aWriteBufferFai - 0x132A); "Write buffer failed: %s\n"|119-72
4900|code|MOV             R1, R5|41-70
4902|code|ADD             R0, PC; "Write buffer failed: %s\n"|120-68
4904|code|BL              sub_1678|0-240-166-249
4908|code|B               loc_12D6|211-231
4910|code|LDRB            R3, [R4,#1]|99-120
4912|code|CMP             R3, #0|0-43
4914|code|BNE.W           loc_1210|127-244-109-175
4918|code|LDR             R3, [SP,#0x188+fd]|12-155
4920|code|CMP             R3, #0|0-43
4922|code|BNE             loc_13A8|53-209
4924|code|MOV             R2, R5; nbytes|42-70
4926|code|LDR             R0, [SP,#0x188+fd]; fd|12-152
4928|code|MOV             R1, R9; buf|73-70
4930|code|BLX             read|255-247-124-236
4934|code|SUBS            R5, R0, #0|5-30
4936|code|BLT.W           loc_147C|192-242-152-128
4940|code|LDR             R3, [SP,#0x188+size]|10-155
4942|code|CMP             R5, R3|157-66
4944|code|BGE.W           loc_1164|191-246-8-175
4948|code|LDR             R7, [SP,#0x188+fd]|12-159
4950|code|LDR             R3, [SP,#0x188+var_150]|14-155
4952|code|CMP             R3, #0|0-43
4954|code|BNE             loc_1416|92-209
4956|code|LDR             R3, [SP,#0x188+verbose]|6-155
4958|code|CBNZ            R3, loc_136A|35-185
4960|code|CMP             R6, #0|0-46
4962|code|BEQ.W           loc_1262|63-244-126-175
4966|code|STR             R5, [SP,#0x188+size]|10-149
4968|code|B               loc_1164|252-230
4970|code|LDR             R0, =(aTriedToReadDBy - 0x1376); "tried to read %d bytes from %s, got %d "...|102-72
4972|code|MOV             R2, R4|34-70
4974|code|LDR             R1, [SP,#0x188+size]|10-153
4976|code|MOV             R3, R5|43-70
4978|code|ADD             R0, PC; "tried to read %d bytes from %s, got %d "...|120-68
4980|code|BL              sub_1678|0-240-128-249
4984|code|LDR             R0, =(aWillWriteDByte - 0x1380); "will write %d bytes\n"|99-72
4986|code|MOV             R1, R5|41-70
4988|code|ADD             R0, PC; "will write %d bytes\n"|120-68
4990|code|BL              sub_1678|0-240-123-249
4994|code|B               loc_1360|237-231
4996|code|LDR             R3, [SP,#0x188+verbose]|6-155
4998|code|CBNZ            R3, loc_13D6|51-187
5000|code|LDR             R3, [SP,#0x188+var_164]|9-155
5002|code|LDR             R0, [SP,#0x188+verbose]|6-152
5004|code|LDR             R1, [SP,#0x188+s]|18-153
5006|code|STR             R3, [SP,#0x188+longind]|0-147
5008|code|LDR             R3, [SP,#0x188+size]|10-155
5010|code|STR             R0, [SP,#0x188+var_17C]|3-144
5012|code|MOV             R0, R8|64-70
5014|code|STR.W           R9, [SP,#0x188+var_184]|205-248-4-144
5018|code|STR             R3, [SP,#0x188+var_180]|2-147
5020|code|LDR             R2, [SP,#0x188+var_15C]|11-154
5022|code|LDR             R3, [SP,#0x188+var_168]|8-155
5024|code|BL              sub_1700|0-240-174-249
5028|code|MOV             R4, R0|4-70
5030|code|B               loc_12D2|148-231
5032|code|LDR             R0, =(aCanTSkipOnStdi - 0x13AE); "Can't skip on stdin\n"|88-72
5034|code|ADD             R0, PC; "Can't skip on stdin\n"|120-68
5036|code|BL              sub_1678|0-240-100-249
5040|code|MOVS            R4, #0xF|15-36
5042|code|B               loc_12DC|147-231
5044|code|NEGS            R0, R0; errnum|64-66
5046|code|BLX             safe_strerror|255-247-192-236
5050|code|MOV             R1, R0|1-70
5052|code|LDR             R0, =(aCloseErrorS - 0x13C2); "close error: %s\n"|84-72
5054|code|ADD             R0, PC; "close error: %s\n"|120-68
5056|code|BL              sub_1678|0-240-90-249
5060|code|CMP             R4, #0|0-44
5062|code|BNE             loc_12EC|145-209
5064|code|MOVS            R0, #0xF|15-32
5066|code|B               loc_FCA|254-229
5068|code|LDR             R0, =(aSendingActivat - 0x13D2); "sending Activate deferred microcode [0x"...|81-72
5070|code|ADD             R0, PC; "sending Activate deferred microcode [0x"...|120-68
5072|code|BL              sub_1678|0-240-82-249
5076|code|B               loc_12B8|112-231
5078|code|LDR             R3, [SP,#0x188+var_164]|9-155
5080|code|LDR             R0, =(aSendingSingleW - 0x13E2); "sending single write buffer, mode=0x%x,"...|79-72
5082|code|LDR             R1, [SP,#0x188+s]|18-153
5084|code|STR             R3, [SP,#0x188+longind]|0-147
5086|code|ADD             R0, PC; "sending single write buffer, mode=0x%x,"...|120-68
5088|code|LDR             R3, [SP,#0x188+size]|10-155
5090|code|LDR             R2, [SP,#0x188+var_15C]|11-154
5092|code|STR             R3, [SP,#0x188+var_184]|1-147
5094|code|LDR             R3, [SP,#0x188+var_168]|8-155
5096|code|BL              sub_1678|0-240-70-249
5100|code|B               loc_1388|204-231
5102|code|LDR             R2, =(aSgWriteBufferC - 0x13F4); "sg_write_buffer: could not open %s for "...|75-74
5104|code|ADD             R2, PC; "sg_write_buffer: could not open %s for "...|122-68
5106|code|STR             R4, [SP,#0x188+var_184]|1-148
5108|code|ADD             R4, SP, #0x188+var_12C|23-172
5110|code|MOV.W           R1, #0x100|79-244-128-113
5114|code|STR             R2, [SP,#0x188+longind]|0-146
5116|code|MOV             R0, R4|32-70
5118|code|MOV             R3, R1|11-70
5120|code|MOVS            R2, #1|1-34
5122|code|BLX             __snprintf_chk|255-247-202-236
5126|code|MOV             R0, R4; s|32-70
5128|code|BLX             perror|255-247-54-236
5132|code|B               loc_13B0|208-231
5134|code|MOVS            R6, #0|0-38
5136|code|B               loc_1356|161-231
5138|code|BLX             __stack_chk_fail|255-247-44-236
5142|code|MOV             R3, R5|43-70
5144|code|LDR             R5, [SP,#0x188+size]|10-157
5146|code|LDR             R0, =(aTriedToReadDBy - 0x1424); "tried to read %d bytes from %s, got %d "...|65-72
5148|code|MOV             R2, R4|34-70
5150|code|MOV             R1, R5|41-70
5152|code|ADD             R0, PC; "tried to read %d bytes from %s, got %d "...|120-68
5154|code|BL              sub_1678|0-240-41-249
5158|code|LDR             R0, =(aPadWith0xffByt - 0x142C); "pad with 0xff bytes and continue\n"|63-72
5160|code|ADD             R0, PC; "pad with 0xff bytes and continue\n"|120-68
5162|code|BL              sub_1678|0-240-37-249
5166|code|B               loc_1360|151-231
5168|code|LDR             R0, =(aSgSetBinaryMod_0 - 0x1436); "sg_set_binary_mode"|61-72
5170|code|ADD             R0, PC; "sg_set_binary_mode"|120-68
5172|code|BLX             perror|255-247-32-236
5176|code|B               loc_1228|246-230
5178|code|LDR             R2, =(aSgWriteBufferC_0 - 0x1440); "sg_write_buffer: couldn't skip to requi"...|60-74
5180|code|ADD             R2, PC; "sg_write_buffer: couldn't skip to requi"...|122-68
5182|code|STR             R4, [SP,#0x188+var_184]|1-148
5184|code|ADD             R4, SP, #0x188+var_12C|23-172
5186|code|MOV.W           R1, #0x100|79-244-128-113
5190|code|STR             R2, [SP,#0x188+longind]|0-146
5192|code|MOV             R3, R1|11-70
5194|code|MOVS            R2, #1|1-34
5196|code|MOV             R0, R4|32-70
5198|code|BLX             __snprintf_chk|255-247-164-236
5202|code|MOV             R0, R4; s|32-70
5204|code|BLX             perror|255-247-16-236
5208|code|MOV             R0, R7; fd|56-70
5210|code|BLX             close|255-247-152-236
5214|code|B               loc_13B0|167-231
5216|code|NEGS            R0, R0; errnum|64-66
5218|code|MOVS            R4, #1|1-36
5220|code|BLX             safe_strerror|255-247-104-236
5224|code|MOV             R1, R0|1-70
5226|code|LDR             R0, =(aCloseErrorS - 0x1470); "close error: %s\n"|49-72
5228|code|ADD             R0, PC; "close error: %s\n"|120-68
5230|code|BL              sub_1678|0-240-3-249
5234|code|MOV             R0, R4|32-70
5236|code|B               loc_FCA|169-229
5238|code|LDR             R2, =(aSgWriteBufferC_1 - 0x147C); "sg_write_buffer: couldn't read from %s"|47-74
5240|code|ADD             R2, PC; "sg_write_buffer: couldn't read from %s"|122-68
5242|code|B               loc_143E|224-231
5244|code|LDR             R2, =(aSgWriteBufferC_1 - 0x1482); "sg_write_buffer: couldn't read from %s"|46-74
5246|code|ADD             R2, PC; "sg_write_buffer: couldn't read from %s"|122-68
5248|code|B               loc_13F2|183-231
5250|data|ALIGN 4|0-191
5252|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xDC6|118-33-1-0
5256|data|DCD __stack_chk_guard_ptr - 0x12F3C|160-0-0-0
5260|data|DCD asc_19D8 - 0xDD6; "-"|2-12-0-0
5264|data|DCD aBHiILMORsSVv - 0xDDC; "b:hi:I:l:m:o:rs:S:vV"|0-12-0-0
5268|data|DCD off_13008 - 0xDE6; "bpw"|34-34-1-0
5272|data|DCD off_12D8C - 0xDEC; "hd"|160-31-1-0
5276|data|DCD aAct - 0xDF6; "act"|50-12-0-0
5280|data|DCD optarg_ptr - 0x12F3C|192-0-0-0
5284|data|DCD aBadArgumentToO - 0xEC6; "bad argument to '--offset'\n"|238-11-0-0
5288|data|DCD aArgumentToIdSh - 0xF72; "argument to '--id' should be in the ran"...|186-10-0-0
5292|data|DCD aSgWriteBufferV - 0xFC4; "sg_write_buffer: version: %s\n"|88-11-0-0
5296|data|DCD a11520140518 - 0xFC6; "1.15 20140518"|118-11-0-0
5300|data|DCD aExpectedArgume - 0xFFA; "expected argument to '--specific' to be"...|242-10-0-0
5304|data|DCD aBadArgumentToS - 0x103A; "bad argument to '--skip'\n"|150-10-0-0
5308|data|DCD aUnrecognisedOp - 0x104A; "unrecognised option code 0x%x ??\n"|2-11-0-0
5312|data|DCD aUsageSgWriteBu - 0x1054; "Usage: sg_write_buffer [--bpw=CS] [--he"...|28-11-0-0
5316|data|DCD aArgumentToMode - 0x1070; "argument to '--mode' should be in the r"...|12-10-0-0
5320|data|DCD aUsageSgWriteBu - 0x10A6; "Usage: sg_write_buffer [--bpw=CS] [--he"...|202-10-0-0
5324|data|DCD aMissingDeviceN+0x14 - 0x10B0; "\n"|32-16-0-0
5328|data|DCD optind_ptr - 0x12F3C|164-0-0-0
5332|data|DCD aUnexpectedExtr - 0x10DC; "Unexpected extra argument: %s\n"|248-15-0-0
5336|data|DCD aUsageSgWriteBu - 0x10F8; "Usage: sg_write_buffer [--bpw=CS] [--he"...|120-10-0-0
5340|data|DCD aMissingDeviceN - 0x1104; "missing device name!\n"|184-15-0-0
5344|data|DCD aUsageSgWriteBu - 0x110C; "Usage: sg_write_buffer [--bpw=CS] [--he"...|100-10-0-0
5348|data|DCD aUsageSgWriteBu - 0x1118; "Usage: sg_write_buffer [--bpw=CS] [--he"...|88-10-0-0
5352|data|DCD aTrimChunkSizeC - 0x113E; "trim chunk size (CS) to be the same as "...|182-15-0-0
5356|data|DCD aSendingWriteBu - 0x1178; "sending write buffer, mode=0x%x, mspec="...|244-16-0-0
5360|data|DCD aSgWriteBufferO - 0x1280; "sg_write_buffer: out of memory\n"|200-14-0-0
5364|data|DCD aSgWriteBufferO_0 - 0x12A6; "sg_write_buffer: open error: %s: %s\n"|122-14-0-0
5368|data|DCD aArgumentToBpwS - 0x12FA; "argument to '--bpw' should be in a posi"...|250-6-0-0
5372|data|DCD aBadArgumentToL - 0x1306; "bad argument to '--length'\n"|90-7-0-0
5376|data|DCD aWriteBufferFai - 0x132A; "Write buffer failed: %s\n"|2-16-0-0
5380|data|DCD aTriedToReadDBy - 0x1376; "tried to read %d bytes from %s, got %d "...|138-14-0-0
5384|data|DCD aWillWriteDByte - 0x1380; "will write %d bytes\n"|212-14-0-0
5388|data|DCD aCanTSkipOnStdi - 0x13AE; "Can't skip on stdin\n"|186-13-0-0
5392|data|DCD aCloseErrorS - 0x13C2; "close error: %s\n"|134-15-0-0
5396|data|DCD aSendingActivat - 0x13D2; "sending Activate deferred microcode [0x"...|226-14-0-0
5400|data|DCD aSendingSingleW - 0x13E2; "sending single write buffer, mode=0x%x,"...|254-14-0-0
5404|data|DCD aSgWriteBufferC - 0x13F4; "sg_write_buffer: could not open %s for "...|140-13-0-0
5408|data|DCD aTriedToReadDBy - 0x1424; "tried to read %d bytes from %s, got %d "...|220-13-0-0
5412|data|DCD aPadWith0xffByt - 0x142C; "pad with 0xff bytes and continue\n"|4-14-0-0
5416|data|DCD aSgSetBinaryMod_0 - 0x1436; "sg_set_binary_mode"|122-13-0-0
5420|data|DCD aSgWriteBufferC_0 - 0x1440; "sg_write_buffer: couldn't skip to requi"...|132-13-0-0
5424|data|DCD aCloseErrorS - 0x1470; "close error: %s\n"|216-14-0-0
5428|data|DCD aSgWriteBufferC_1 - 0x147C; "sg_write_buffer: couldn't read from %s"|224-14-0-0
5432|data|DCD aSgWriteBufferC_1 - 0x1482; "sg_write_buffer: couldn't read from %s"|218-14-0-0
5436|code|MOV.W           R11, #0|79-240-0-11
5440|code|MOV.W           LR, #0|79-240-0-14
5444|code|POP             {R1}; argc|2-188
5446|code|MOV             R2, SP; ubp_av|106-70
5448|code|PUSH            {R2}; stack_end|4-180
5450|code|PUSH            {R0}; rtld_fini|1-180
5452|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1574)|223-248-36-160
5456|code|ADR             R3, off_1574|8-163
5458|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
5460|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F3C)|223-248-32-192
5464|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
5468|code|PUSH.W          {R12}; fini|77-248-4-205
5472|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F3C)|6-75
5474|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
5478|code|LDR             R0, =(main_ptr - 0x12F3C)|6-72
5480|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
5484|code|BLX             __libc_start_main|255-247-162-235
5488|code|BLX             abort|255-247-6-236
5492|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1574|200-25-1-0
5496|data|DCD __libc_csu_fini_ptr - 0x12F3C|148-0-0-0
5500|data|DCD __libc_csu_init_ptr - 0x12F3C|176-0-0-0
5504|data|DCD main_ptr - 0x12F3C|180-0-0-0
5508|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1594)|20-48-159-229
5512|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F3C)|20-32-159-229
5516|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
5520|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
5524|code|CMP             R2, #0|0-0-82-227
5528|code|BXEQ            LR|30-255-47-1
5532|code|B               __gmon_start__|202-253-255-234
5536|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1594|168-25-1-0
5540|data|DCD __gmon_start___ptr_0 - 0x12F3C|172-0-0-0
5544|code|LDR             R3, =(__bss_start__ - 0x15B0)|7-75
5546|code|LDR             R0, =(__bss_start__ - 0x15B4)|8-72
5548|code|ADD             R3, PC; __bss_start__|123-68
5550|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x15BA)|8-74
5552|code|ADD             R0, PC; __bss_start__|120-68
5554|code|ADDS            R3, #3|3-51
5556|code|SUBS            R3, R3, R0|27-26
5558|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5560|code|CMP             R3, #6|6-43
5562|code|BLS             locret_15C4|3-217
5564|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F3C)|5-75
5566|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
5568|code|CBZ             R3, locret_15C4|3-177
5570|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
5572|code|BX              LR|112-71
5574|data|ALIGN 4|0-191
5576|data|DCD __bss_start__ - 0x15B0|40-27-1-0
5580|data|DCD __bss_start__ - 0x15B4|36-27-1-0
5584|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15BA|130-25-1-0
5588|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F3C|156-0-0-0
5592|code|LDR             R1, =(__bss_start__ - 0x15E0)|8-73
5594|code|LDR             R0, =(__bss_start__ - 0x15E4)|9-72
5596|code|ADD             R1, PC; __bss_start__|121-68
5598|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x15E8)|9-75
5600|code|ADD             R0, PC; __bss_start__|120-68
5602|code|SUBS            R1, R1, R0|9-26
5604|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5606|code|ASRS            R1, R1, #2|137-16
5608|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
5612|code|ASRS            R1, R1, #1|73-16
5614|code|BEQ             locret_15F8|3-208
5616|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F3C)|5-74
5618|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
5620|code|CBZ             R3, locret_15F8|3-177
5622|code|BX              R3; _ITM_registerTMCloneTable|24-71
5624|code|BX              LR|112-71
5626|data|ALIGN 4|0-191
5628|data|DCD __bss_start__ - 0x15E0|248-26-1-0
5632|data|DCD __bss_start__ - 0x15E4|244-26-1-0
5636|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x15E8|84-25-1-0
5640|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F3C|188-0-0-0
5644|code|PUSH            {R3,LR}|8-181
5646|code|LDR             R3, =(__bss_start__ - 0x1616)|10-75
5648|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1618)|10-74
5650|code|ADD             R3, PC; __bss_start__|123-68
5652|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5654|code|LDRB            R3, [R3]|27-120
5656|code|CBNZ            R3, locret_1636|107-185
5658|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F3C)|9-75
5660|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5662|code|CBZ             R3, loc_162A|35-177
5664|code|LDR             R3, =(off_13004 - 0x1626)|8-75
5666|code|ADD             R3, PC; off_13004|123-68
5668|code|LDR             R0, [R3]; off_13004 ; void *|24-104
5670|code|BLX             __cxa_finalize|255-247-254-234
5674|code|BL              sub_15A8|255-247-189-255
5678|code|LDR             R3, =(__bss_start__ - 0x1636)|6-75
5680|code|MOVS            R2, #1|1-34
5682|code|ADD             R3, PC; __bss_start__|123-68
5684|code|STRB            R2, [R3]|26-112
5686|code|POP             {R3,PC}|8-189
5688|data|DCD __bss_start__ - 0x1616|194-26-1-0
5692|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1618|36-25-1-0
5696|data|DCD __cxa_finalize_ptr_0 - 0x12F3C|152-0-0-0
5700|data|DCD off_13004 - 0x1626|222-25-1-0
5704|data|DCD __bss_start__ - 0x1636|162-26-1-0
5708|code|LDR             R0, =(dword_12D88 - 0x1654)|7-72
5710|code|PUSH            {R3,LR}|8-181
5712|code|ADD             R0, PC; dword_12D88|120-68
5714|code|LDR             R2, [R0]|2-104
5716|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x165A)|6-75
5718|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5720|code|CBNZ            R2, loc_1660|18-185
5722|code|POP.W           {R3,LR}|189-232-8-64
5726|code|B               sub_15D8|187-231
5728|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F3C)|4-74
5730|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5732|code|CMP             R3, #0|0-43
5734|code|BEQ             loc_165A|248-208
5736|code|BLX             R3; _Jv_RegisterClasses|152-71
5738|code|B               loc_165A|246-231
5740|data|DCD dword_12D88 - 0x1654|52-23-1-0
5744|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x165A|226-24-1-0
5748|data|DCD _Jv_RegisterClasses_ptr - 0x12F3C|184-0-0-0
5752|code|PUSH            {R0-R3}|15-180
5754|code|MOVS            R1, #1|1-33
5756|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x1684)|13-72
5758|code|PUSH            {R4-R6,LR}|112-181
5760|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
5762|code|LDR             R5, =(__stack_chk_guard_ptr - 0x12F3C)|13-77
5764|code|SUB             SP, SP, #8|130-176
5766|code|ADD             R3, SP, #0x28+varg_r0|6-171
5768|code|LDR             R4, =(stderr_ptr - 0x12F3C)|12-76
5770|code|LDR             R5, [R0,R5]; __stack_chk_guard|69-89
5772|code|LDR.W           R2, [R3],#4|83-248-4-43
5776|code|LDR             R6, [R5]|46-104
5778|code|STR             R3, [SP,#0x28+var_28]|0-147
5780|code|STR             R6, [SP,#0x28+var_24]|1-150
5782|code|LDR             R0, [R0,R4]; stderr|0-89
5784|code|LDR             R0, [R0]|0-104
5786|code|BLX             __vfprintf_chk|255-247-18-235
5790|code|LDR             R2, [SP,#0x28+var_24]|1-154
5792|code|LDR             R3, [R5]|43-104
5794|code|CMP             R2, R3|154-66
5796|code|BNE             loc_16B0|4-209
5798|code|ADD             SP, SP, #8|2-176
5800|code|POP.W           {R4-R6,LR}|189-232-112-64
5804|code|ADD             SP, SP, #0x10|4-176
5806|code|BX              LR|112-71
5808|code|BLX             __stack_chk_fail|255-247-220-234
5812|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1684|184-24-1-0
5816|data|DCD __stack_chk_guard_ptr - 0x12F3C|160-0-0-0
5820|data|DCD stderr_ptr - 0x12F3C|168-0-0-0
5824|code|LDR             R0, =(aTheModesParame - 0x16C8); "The modes parameter argument can be num"...|12-72
5826|code|PUSH            {R4-R7,LR}|240-181
5828|code|ADD             R0, PC; "The modes parameter argument can be num"...|120-68
5830|code|SUB             SP, SP, #0xC|131-176
5832|code|LDR             R6, =(off_12D8C - 0x16D4); "hd"|11-78
5834|code|BL              sub_1678|255-247-213-255
5838|code|LDR             R7, =(a2d0x02x18sS - 0x16D8); " %2d (0x%02x)  %-18s%s\n"|11-79
5840|code|ADD             R6, PC; off_12D8C|126-68
5842|code|ADDS            R4, R6, #4|52-29
5844|code|ADD             R7, PC; " %2d (0x%02x)  %-18s%s\n"|127-68
5846|code|ADDS            R6, #0xAC|172-54
5848|code|LDR             R1, [R4]|33-104
5850|code|MOV             R0, R7|56-70
5852|code|LDR             R5, [R4,#4]; "combined header and data (obsolete)"|101-104
5854|code|ADDS            R4, #0xC|12-52
5856|code|LDR.W           R3, [R4,#-0x10]|84-248-16-60
5860|code|MOV             R2, R1|10-70
5862|code|STR             R5, [SP,#0x20+var_20]|0-149
5864|code|BL              sub_1678|255-247-198-255
5868|code|CMP             R4, R6|180-66
5870|code|BNE             loc_16D8|243-209
5872|code|ADD             SP, SP, #0xC|3-176
5874|code|POP             {R4-R7,PC}|240-189
5876|data|DCD aTheModesParame - 0x16C8; "The modes parameter argument can be num"...|36-2-0-0
5880|data|DCD off_12D8C - 0x16D4; "hd"|184-22-1-0
5884|data|DCD a2d0x02x18sS - 0x16D8; " %2d (0x%02x)  %-18s%s\n"|96-2-0-0
5888|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5892|code|SUB             SP, SP, #0x6C|155-176
5894|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0x1716)|91-76
5896|code|AND.W           R1, R1, #0x1F|1-240-31-1
5900|code|LDR             R7, =(__stack_chk_guard_ptr - 0x12F3C)|90-79
5902|code|ORR.W           R2, R1, R2,LSL#5|65-234-66-18
5906|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
5908|code|LDR             R5, [SP,#0x90+arg_0]|36-157
5910|code|LDR             R6, [SP,#0x90+arg_8]|38-158
5912|code|MOV             R8, R0|128-70
5914|code|LDR             R7, [R4,R7]; __stack_chk_guard|231-89
5916|code|MOVS            R0, #0x3B ; ';'|59-32
5918|code|LDR.W           R9, [SP,#0x90+arg_C]|221-248-156-144
5922|code|MOVS            R1, #0|0-33
5924|code|MOV.W           LR, R5,ASR#16|79-234-37-78
5928|code|STRB.W          R2, [SP,#0x90+var_77]|141-248-25-32
5932|code|LDR.W           R12, [R7]|215-248-0-192
5936|code|ASRS            R4, R5, #8|44-18
5938|code|ASRS            R2, R6, #0x10|50-20
5940|code|STRB.W          R3, [SP,#0x90+var_76]|141-248-26-48
5944|code|STRB.W          R5, [SP,#0x90+var_73]|141-248-29-80
5948|code|ASRS            R3, R6, #8|51-18
5950|code|STR.W           R12, [SP,#0x90+var_2C]|205-248-100-192
5954|code|STRB.W          LR, [SP,#0x90+var_75]|141-248-27-224
5958|code|STRB.W          R4, [SP,#0x90+var_74]|141-248-28-64
5962|code|STRB.W          R6, [SP,#0x90+var_70]|141-248-32-96
5966|code|STRB.W          R2, [SP,#0x90+var_72]|141-248-30-32
5970|code|STRB.W          R3, [SP,#0x90+var_71]|141-248-31-48
5974|code|STRB.W          R0, [SP,#0x90+cdb]|141-248-24-0
5978|code|STRB.W          R1, [SP,#0x90+var_6F]|141-248-33-16
5982|code|LDR.W           R10, [SP,#0x90+arg_4]|221-248-148-160
5986|code|CMP.W           R9, #0|185-241-0-15
5990|code|BNE             loc_17DC|57-209
5992|code|BLX             construct_scsi_pt_obj|255-247-116-234
5996|code|MOV             R5, R0|5-70
5998|code|CMP             R0, #0|0-40
6000|code|BEQ             loc_1862|119-208
6002|code|ADD             R4, SP, #0x90+var_6C|9-172
6004|code|ADD             R1, SP, #0x90+cdb; cdb|6-169
6006|code|MOVS            R2, #0xA; cdb_len|10-34
6008|code|BLX             set_scsi_pt_cdb|255-247-20-235
6012|code|MOV             R1, R4; sense|33-70
6014|code|MOV             R0, R5; scsi_pt_obj|40-70
6016|code|MOVS            R2, #0x40 ; '@'; max_sense_len|64-34
6018|code|BLX             set_scsi_pt_sense|255-247-212-234
6022|code|MOV             R0, R5; scsi_pt_obj|40-70
6024|code|MOV             R1, R10; dxferp|81-70
6026|code|MOV             R2, R6; dxfer_len|50-70
6028|code|BLX             set_scsi_pt_data_out|255-247-80-234
6032|code|MOV             R1, R8; fd|65-70
6034|code|MOVS            R2, #0x78 ; 'x'; timeout_secs|120-34
6036|code|MOV             R3, R9; verbose|75-70
6038|code|MOV             R0, R5; scsi_pt_obj|40-70
6040|code|BLX             do_scsi_pt|255-247-182-234
6044|code|LDR             R1, =(aWriteBuffer - 0x17AA); "write buffer"|55-73
6046|code|STR             R4, [SP,#0x90+var_90]|0-148
6048|code|MOVS            R3, #1|1-35
6050|code|STR.W           R9, [SP,#0x90+var_88]|205-248-8-144
6054|code|ADD             R1, PC; "write buffer"|121-68
6056|code|STR             R3, [SP,#0x90+var_8C]|1-147
6058|code|ADD             R3, SP, #0x90+var_7C|5-171
6060|code|STR             R3, [SP,#0x90+var_84]|3-147
6062|code|MOVS            R3, #0|0-35
6064|code|MOV             R2, R0|2-70
6066|code|MOV             R0, R5|40-70
6068|code|BLX             sg_cmds_process_resp|255-247-198-234
6072|code|ADDS            R3, R0, #1|67-28
6074|code|MOV             R4, R0|4-70
6076|code|BEQ             loc_17C6|3-208
6078|code|ADDS            R4, R0, #2|132-28
6080|code|IT NE|24-191
6082|code|MOVNE           R4, #0|0-36
6084|code|BEQ             loc_184E|67-208
6086|code|MOV             R0, R5; scsi_pt_obj|40-70
6088|code|BLX             destruct_scsi_pt_obj|255-247-164-234
6092|code|MOV             R0, R4|32-70
6094|code|LDR             R2, [SP,#0x90+var_2C]|25-154
6096|code|LDR             R3, [R7]|59-104
6098|code|CMP             R2, R3|154-66
6100|code|BNE             loc_1870|76-209
6102|code|ADD             SP, SP, #0x6C ; 'l'|27-176
6104|code|POP.W           {R4-R11,PC}|189-232-240-143
6108|code|LDR             R0, =(aWriteBufferCmd - 0x17EC); "    Write buffer cmd: "|40-72
6110|code|ADD             R4, SP, #0x90+cdb|6-172
6112|code|LDR.W           R11, =(a02x - 0x17F2); "%02x "|223-248-160-176
6116|code|ADD.W           R5, SP, #0x90+var_6E|13-241-34-5
6120|code|ADD             R0, PC; "    Write buffer cmd: "|120-68
6122|code|BL              sub_1678|255-247-69-255
6126|code|ADD             R11, PC; "%02x "|251-68
6128|code|LDRB.W          R1, [R4],#1|20-248-1-27
6132|code|MOV             R0, R11|88-70
6134|code|BL              sub_1678|255-247-63-255
6138|code|CMP             R4, R5|172-66
6140|code|BNE             loc_17F0|248-209
6142|code|LDR             R0, =(aMissingDeviceN+0x14 - 0x1804); "\n"|34-72
6144|code|ADD             R0, PC; "\n"|120-68
6146|code|BL              sub_1678|255-247-57-255
6150|code|CMP.W           R10, #0|186-241-0-15
6154|code|IT NE|24-191
6156|code|CMPNE.W         R9, #1|185-241-1-15
6160|code|ITE GT|204-191
6162|code|MOVGT           R3, #1|1-35
6164|code|MOVLE           R3, #0|0-35
6166|code|CMP             R6, #0|0-46
6168|code|ITE EQ|12-191
6170|code|MOVEQ           R3, #0|0-35
6172|code|ANDNE.W         R3, R3, #1|3-240-1-3
6176|code|CMP             R3, #0|0-43
6178|code|BEQ             loc_1768|161-208
6180|code|CMP.W           R6, #0x100|182-245-128-127
6184|code|BGT             loc_185C|24-220
6186|code|LDR             R1, =(aArgumentToMode+0x34 - 0x1830); ""|24-73
6188|code|ADD             R1, PC; ""|121-68
6190|code|LDR             R0, =(aWriteBufferPar - 0x1834); "    Write buffer parameter list%s:\n"|24-72
6192|code|ADD             R0, PC; "    Write buffer parameter list%s:\n"|120-68
6194|code|BL              sub_1678|255-247-33-255
6198|code|CMP.W           R6, #0x100|182-245-128-127
6202|code|MOV             R1, R6|49-70
6204|code|MOV             R0, R10|80-70
6206|code|IT GE|168-191
6208|code|MOVGE.W         R1, #0x100|79-244-128-113
6212|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
6216|code|BLX             dStrHexErr|255-247-34-234
6220|code|B               loc_1768|140-231
6222|code|LDR             R4, [SP,#0x90+var_7C]|5-156
6224|code|SUB.W           R3, R4, #0x14|164-241-20-3
6228|code|CMP             R3, #1|1-43
6230|code|IT LS|152-191
6232|code|MOVLS           R4, #0|0-36
6234|code|B               loc_17C6|180-231
6236|code|LDR             R1, =(aFirst256Bytes - 0x1862); " (first 256 bytes)"|13-73
6238|code|ADD             R1, PC; " (first 256 bytes)"|121-68
6240|code|B               loc_182E|229-231
6242|code|LDR             R0, =(aWriteBufferOut - 0x1868); "write buffer: out of memory\n"|13-72
6244|code|ADD             R0, PC; "write buffer: out of memory\n"|120-68
6246|code|BL              sub_1678|255-247-7-255
6250|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
6254|code|B               loc_17CE|174-231
6256|code|BLX             __stack_chk_fail|255-247-252-233
6260|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1716|38-24-1-0
6264|data|DCD __stack_chk_guard_ptr - 0x12F3C|160-0-0-0
6268|data|DCD aWriteBuffer - 0x17AA; "write buffer"|30-2-0-0
6272|data|DCD aWriteBufferCmd - 0x17EC; "    Write buffer cmd: "|120-1-0-0
6276|data|DCD a02x - 0x17F2; "%02x "|138-1-0-0
6280|data|DCD aMissingDeviceN+0x14 - 0x1804; "\n"|204-8-0-0
6284|data|DCD aArgumentToMode+0x34 - 0x1830; ""|128-2-0-0
6288|data|DCD aWriteBufferPar - 0x1834; "    Write buffer parameter list%s:\n"|80-1-0-0
6292|data|DCD aFirst256Bytes - 0x1862; " (first 256 bytes)"|238-0-0-0
6296|data|DCD aWriteBufferOut - 0x1868; "write buffer: out of memory\n"|64-1-0-0
6300|code|PUSH.W          {R3-R9,LR}|45-233-248-67
6304|code|MOV             R7, R0|7-70
6306|code|LDR             R6, =(off_12D84 - 0x18AE)|12-78
6308|code|MOV             R8, R1|136-70
6310|code|LDR             R5, =(off_12D80 - 0x18B4)|12-77
6312|code|MOV             R9, R2|145-70
6314|code|ADD             R6, PC; off_12D84|126-68
6316|code|BLX             .init_proc|255-247-164-233
6320|code|ADD             R5, PC; off_12D80|125-68
6322|code|SUBS            R6, R6, R5|118-27
6324|code|ASRS            R6, R6, #2|182-16
6326|code|BEQ             locret_18CE|10-208
6328|code|SUBS            R5, #4|4-61
6330|code|MOVS            R4, #0|0-36
6332|code|ADDS            R4, #1|1-52
6334|code|LDR.W           R3, [R5,#4]!|85-248-4-63
6338|code|MOV             R0, R7|56-70
6340|code|MOV             R1, R8|65-70
6342|code|MOV             R2, R9|74-70
6344|code|BLX             R3|152-71
6346|code|CMP             R4, R6|180-66
6348|code|BNE             loc_18BC|246-209
6350|code|POP.W           {R3-R9,PC}|189-232-248-131
6354|data|ALIGN 4|0-191
6356|data|DCD off_12D84 - 0x18AE|214-20-1-0
6360|data|DCD off_12D80 - 0x18B4|204-20-1-0
6364|code|BX              LR|112-71
6366|data|ALIGN 0x10|0-191
6368|code|PUSH            {R3,LR}; _fini|8-64-45-233
6372|code|POP             {R3,PC}|8-128-189-232
9932|data|ALIGN 0x10|0-0-0-0
77184|data|DCD sub_164C+1|77-22-0-0
77188|data|DCD sub_160C+1|13-22-0-0
77192|data|DCD 0|0-0-0-0
77196|data|DCD aHd; "hd"|132-35-0-0
77200|data|DCD 0|0-0-0-0
77204|data|DCD aCombinedHeader; "combined header and data (obsolete)"|136-35-0-0
77208|data|DCD aVendor; "vendor"|172-35-0-0
77216|data|DCD aVendorSpecific; "vendor specific"|180-35-0-0
77220|data|DCD aData; "data"|196-35-0-0
77228|data|DCD aData; "data"|196-35-0-0
77232|data|DCD aDmc; "dmc"|204-35-0-0
77240|data|DCD aDownloadMicroc; "download microcode and activate"|208-35-0-0
77244|data|DCD aDmcSave; "dmc_save"|240-35-0-0
77252|data|DCD aDownloadMicroc_0; "download microcode, save and activate"|252-35-0-0
77256|data|DCD aDmcOffs; "dmc_offs"|36-36-0-0
77264|data|DCD aDownloadMicroc_1; "download microcode with offsets and act"...|48-36-0-0
77268|data|DCD aDmcOffsSave; "dmc_offs_save"|96-36-0-0
77276|data|DCD aDownloadMicroc_2; "download microcode with offsets, save a"...|112-36-0-0
77280|data|DCD aEcho; "echo"|168-36-0-0
77288|data|DCD aWriteDataToEch; "write data to echo buffer"|176-36-0-0
77292|data|DCD aDmcOffsEvDefer; "dmc_offs_ev_defer"|204-36-0-0
77300|data|DCD aDownloadMicroc_3; "download microcode with offsets, select"...|224-36-0-0
77304|data|DCD aDmcOffsDefer; "dmc_offs_defer"|56-37-0-0
77312|data|DCD aDownloadMicroc_4; "download microcode with offsets, save a"...|72-37-0-0
77316|data|DCD aActivateMc; "activate_mc"|136-37-0-0
77324|data|DCD aActivateDeferr; "activate deferred microcode"|148-37-0-0
77328|data|DCD aEnEx; "en_ex"|176-37-0-0
77336|data|DCD aEnableExpander; "enable expander communications protocol"...|184-37-0-0
77340|data|DCD aDisEx; "dis_ex"|0-38-0-0
77348|data|DCD aDisableExpande; "disable expander communications protoco"...|8-38-0-0
77352|data|DCD aDeh; "deh"|64-38-0-0
77360|data|DCD aDownloadApplic; "download application client error histo"...|68-38-0-0
77364|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
77372|data|Elf32_Dyn <1, <0x167>>; DT_NEEDED libc.so.6|1-0-0-0-103-1-0-0
77380|data|Elf32_Dyn <1, <0x240>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-64-2-0-0
77388|data|Elf32_Dyn <0xC, <0xBF8>>; DT_INIT|12-0-0-0-248-11-0-0
77396|data|Elf32_Dyn <0xD, <0x18E0>>; DT_FINI|13-0-0-0-224-24-0-0
77404|data|Elf32_Dyn <0x19, <0x12D80>>; DT_INIT_ARRAY|25-0-0-0-128-45-1-0
77412|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77420|data|Elf32_Dyn <0x1A, <0x12D84>>; DT_FINI_ARRAY|26-0-0-0-132-45-1-0
77428|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77436|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77444|data|Elf32_Dyn <5, <0x5A4>>; DT_STRTAB|5-0-0-0-164-5-0-0
77452|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77460|data|Elf32_Dyn <0xA, <0x2D7>>; DT_STRSZ|10-0-0-0-215-2-0-0
77468|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77476|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77484|data|Elf32_Dyn <3, <0x12F3C>>; DT_PLTGOT|3-0-0-0-60-47-1-0
77492|data|Elf32_Dyn <2, <0x110>>; DT_PLTRELSZ|2-0-0-0-16-1-0-0
77500|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77508|data|Elf32_Dyn <0x17, <0xAE8>>; DT_JMPREL|23-0-0-0-232-10-0-0
77516|data|Elf32_Dyn <0x11, <0x930>>; DT_REL|17-0-0-0-48-9-0-0
77524|data|Elf32_Dyn <0x12, <0x1B8>>; DT_RELSZ|18-0-0-0-184-1-0-0
77532|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77540|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77548|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77556|data|Elf32_Dyn <0x6FFFFFFE, <0x8F0>>; DT_VERNEED|254-255-255-111-240-8-0-0
77564|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77572|data|Elf32_Dyn <0x6FFFFFF0, <0x87C>>; DT_VERSYM|240-255-255-111-124-8-0-0
77580|data|Elf32_Dyn <0x6FFFFFFA, <0x2E>>; DT_RELCOUNT|250-255-255-111-46-0-0-0
77588|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77596|data|ALIGN 0x10|0-0-0-0
77628|data|DCD stru_12E34|52-46-1-0
77632|data|DCD 0|0-0-0-0
77636|data|DCD dword_0|0-0-0-0
77640|data|DCD __imp_sg_set_binary_mode|224-48-1-0
77644|data|DCD __imp___cxa_finalize|228-48-1-0
77648|data|DCD __imp_set_scsi_pt_data_out|232-48-1-0
77652|data|DCD __imp_read|236-48-1-0
77656|data|DCD __imp_free|240-48-1-0
77660|data|DCD __imp_construct_scsi_pt_obj|244-48-1-0
77664|data|DCD __imp_sg_cmds_close_device|252-48-1-0
77668|data|DCD __imp___stack_chk_fail|4-49-1-0
77672|data|DCD __imp_perror|8-49-1-0
77676|data|DCD __imp_lseek64|16-49-1-0
77680|data|DCD __imp_dStrHexErr|20-49-1-0
77684|data|DCD __imp_open64|24-49-1-0
77688|data|DCD __imp_malloc|28-49-1-0
77692|data|DCD __imp___libc_start_main|32-49-1-0
77696|data|DCD __imp___vfprintf_chk|36-49-1-0
77700|data|DCD __imp___gmon_start__|120-49-1-0
77704|data|DCD __imp_getopt_long|40-49-1-0
77708|data|DCD __imp___ctype_b_loc|44-49-1-0
77712|data|DCD __imp_strlen|48-49-1-0
77716|data|DCD __imp_strchr|52-49-1-0
77720|data|DCD __imp_do_scsi_pt|56-49-1-0
77724|data|DCD __imp_destruct_scsi_pt_obj|60-49-1-0
77728|data|DCD __imp_memset|64-49-1-0
77732|data|DCD __imp_set_scsi_pt_sense|68-49-1-0
77736|data|DCD __imp_safe_strerror|72-49-1-0
77740|data|DCD __imp_sg_cmds_process_resp|76-49-1-0
77744|data|DCD __imp_sg_get_category_sense_str|80-49-1-0
77748|data|DCD __imp_sg_get_num|84-49-1-0
77752|data|DCD __imp_sg_cmds_open_device|88-49-1-0
77756|data|DCD __imp_strncmp|96-49-1-0
77760|data|DCD __imp_abort|100-49-1-0
77764|data|DCD __imp_close|104-49-1-0
77768|data|DCD __imp___snprintf_chk|108-49-1-0
77772|data|DCD __imp_set_scsi_pt_cdb|112-49-1-0
77776|data|DCD __libc_csu_fini+1|221-24-0-0
77780|data|DCD __imp___cxa_finalize|228-48-1-0
77784|data|DCD _ITM_deregisterTMCloneTable|116-49-1-0
77788|data|DCD __stack_chk_guard|248-48-1-0
77792|data|DCD optind|0-49-1-0
77796|data|DCD stderr|12-49-1-0
77800|data|DCD __imp___gmon_start__|120-49-1-0
77804|data|DCD __libc_csu_init+1|157-24-0-0
77808|data|DCD main+1|177-13-0-0
77812|data|DCD _Jv_RegisterClasses|124-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|128-49-1-0
77820|data|DCD optarg|92-49-1-0
78040|data|% 1; Alternative name is '__bss_start'|255
