address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|201-10-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x1950; SHT file offset|80-25-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 8; Number of entries in PHT|8-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1C; Number of entries in SHT|28-0
65586|data|DCW 0x1B; SHT entry index for string table|27-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x1638; File offset|56-22-0-0
65596|data|DCD unk_11638; Virtual address|56-22-1-0
65600|data|DCD 0x11638; Physical address|56-22-1-0
65604|data|DCD 8; Size in file image|8-0-0-0
65608|data|DCD 8; Size in memory image|8-0-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x100; Size in file image|0-1-0-0
65640|data|DCD 0x100; Size in memory image|0-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x134; File offset|52-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|52-1-1-0
65664|data|DCD 0x10134; Physical address|52-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x1644; Size in file image|68-22-0-0
65704|data|DCD 0x1644; Size in memory image|68-22-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x1644; File offset|68-22-0-0
65724|data|DCD off_21644; Virtual address|68-22-2-0
65728|data|DCD 0x21644; Physical address|68-22-2-0
65732|data|DCD 0x1C4; Size in file image|196-1-0-0
65736|data|DCD 0x1D0; Size in memory image|208-1-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x1650; File offset|80-22-0-0
65756|data|DCD stru_21650; Virtual address|80-22-2-0
65760|data|DCD 0x21650; Physical address|80-22-2-0
65764|data|DCD 0x148; Size in file image|72-1-0-0
65768|data|DCD 0x148; Size in memory image|72-1-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x150; File offset|80-1-0-0
65788|data|DCD dword_10150; Virtual address|80-1-1-0
65792|data|DCD 0x10150; Physical address|80-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65869|data|DCB 0, 0, 0|0-0-0
65872|data|DCD 4; Name Size|4-0-0-0
65876|data|DCD 0x10; Desc Size|16-0-0-0
65880|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65884|data|DCB "GNU",0; Name|71-78-85-0
65888|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x14; Desc Size|20-0-0-0
65912|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCB 0xCE, 0x84, 0x2E, 0x26, 0xD0, 0x5B, 0xD5, 0x16, 0x3B; Desc|206-132-46-38-208-91-213-22-59-191-12-74-178-207-113-117-236-167-4-241
65940|data|DCD 0x11|17-0-0-0
65944|data|DCD 5|5-0-0-0
65948|data|DCD 8|8-0-0-0
65952|data|DCD 8|8-0-0-0
65956|data|DCD 0x8028085, 0xC1494011, 0x3008029, 0xE1502800, 0x28000400|133-128-2-8-17-64-73-193-41-128-0-3-0-40-80-225-0-4-0-40-28-104-4-157-0-4-66-1-0-44-73-66
65988|data|DCD 5, 7, 9, 0xD, 0x11, 0x14, 0x15, 0x17, 0x1B, 0x1C, 0x1D|5-0-0-0-7-0-0-0-9-0-0-0-13-0-0-0-17-0-0-0-20-0-0-0-21-0-0-0-23-0-0-0-27-0-0-0-28-0-0-0-29-0-0-0-31-0-0-0-32-0-0-0-33-0-0-0-0-0-0-0-34-0-0-0-36-0-0-0
66056|data|DCD 0xE834AF00, 0x1C9396CB, 0xD82B830, 0xEEFD3EB, 0x12F7C432|0-175-52-232-203-150-147-28-48-184-130-13-235-211-239-14-50-196-247-18-184-141-241-14-118-84-60-148-67-89-135-255-124-237-17-15-120-139-135-255-216-113-88-28-175-196-77-15-62-126-150-124-88-239-151-121-187-227-146-124-237-222-147-28-54-224-227-249-47-78-61-246-126-158-208-24-66-69-213-236-188-238-144-202-7-2-4-249-235-22-169-24-157-187-147-28-178-162-247-18-139-138-123-240-241-89-156-19-17-123-156-124-191-218-87-27-156-253-251-0-185-43-107-21-65-56-96-157
66184|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66200|data|Elf32_Sym <aJvRegisterclas - byte_104D8, 0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|21-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66216|data|Elf32_Sym <aItmDeregistert - byte_104D8, 0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|41-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66232|data|Elf32_Sym <aGmonStart - byte_104D8, 0, 0, 0x20, 0, 0>; "__gmon_start__"|69-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66248|data|Elf32_Sym <aItmRegistertmc - byte_104D8, 0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|84-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66264|data|Elf32_Sym <aBssEnd+1 - byte_104D8, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|241-1-0-0-20-24-2-0-0-0-0-0-16-0-24-0
66280|data|Elf32_Sym <aStrcpy - byte_104D8, 0, 0, 0x12, 0, 0>; "strcpy"|85-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66296|data|Elf32_Sym <aMemset - byte_104D8, 0, 0, 0x12, 0, 0>; "memset"|152-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66312|data|Elf32_Sym <aFini - byte_104D8, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|161-0-0-0-100-17-1-0-0-0-0-0-18-0-14-0
66328|data|Elf32_Sym <aOptind - byte_104D8, _edata, 4, 0x11, 0, 0x18>; "optind"|97-1-0-0-8-24-2-0-4-0-0-0-17-0-24-0
66344|data|Elf32_Sym <aInit - byte_104D8, .init_proc, 0, 0x12, 0, 0xB>; "_init"|110-0-0-0-80-8-1-0-0-0-0-0-18-0-11-0
66360|data|Elf32_Sym <aBssStart_0 - byte_104D8, _edata, 0, 0x10, 0, 0x18>; "__bss_start__"|226-1-0-0-8-24-2-0-0-0-0-0-16-0-24-0
66376|data|Elf32_Sym <aGetcwd - byte_104D8, 0, 0, 0x12, 0, 0>; "getcwd"|182-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66392|data|Elf32_Sym <aAbort - byte_104D8, 0, 0, 0x12, 0, 0>; "abort"|125-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66408|data|Elf32_Sym <aGetopt - byte_104D8, 0, 0, 0x12, 0, 0>; "getopt"|159-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66424|data|Elf32_Sym <aBssStart - byte_104D8, _edata, 0, 0x10, 0, 0x18>; "__bss_start"|214-1-0-0-8-24-2-0-0-0-0-0-16-0-24-0
66440|data|Elf32_Sym <aDlsym - byte_104D8, 0, 0, 0x12, 0, 0>; "dlsym"|7-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66456|data|Elf32_Sym <aExit - byte_104D8, 0, 0, 0x12, 0, 0>; "exit"|92-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66472|data|Elf32_Sym <aEnd - byte_104D8, _end, 0, 0x10, 0, 0x18>; "__end__"|252-1-0-0-20-24-2-0-0-0-0-0-16-0-24-0
66488|data|Elf32_Sym <aEnd_0 - byte_104D8, _end, 0, 0x10, 0, 0x18>; "_end"|4-2-0-0-20-24-2-0-0-0-0-0-16-0-24-0
66504|data|Elf32_Sym <aStrtol - byte_104D8, 0, 0, 0x12, 0, 0>; "strtol"|138-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66520|data|Elf32_Sym <aRealpath - byte_104D8, 0, 0, 0x12, 0, 0>; "realpath"|166-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66536|data|Elf32_Sym <aLibcStartMain - byte_104D8, 0, 0, 0x12, 0, 0>; "__libc_start_main"|189-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66552|data|Elf32_Sym <aDlerror - byte_104D8, 0, 0, 0x12, 0, 0>; "dlerror"|13-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66568|data|Elf32_Sym <aEdata - byte_104D8, _edata, 0, 0x10, 0, 0x17>; "_edata"|207-1-0-0-8-24-2-0-0-0-0-0-16-0-23-0
66584|data|Elf32_Sym <aPutchar - byte_104D8, 0, 0, 0x12, 0, 0>; "putchar"|117-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66600|data|Elf32_Sym <aDlopen - byte_104D8, 0, 0, 0x12, 0, 0>; "dlopen"|29-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66616|data|Elf32_Sym <aDlclose - byte_104D8, 0, 0, 0x12, 0, 0>; "dlclose"|21-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66632|data|Elf32_Sym <aStrlen - byte_104D8, 0, 0, 0x12, 0, 0>; "strlen"|145-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66648|data|Elf32_Sym <aOptarg - byte_104D8, optarg, 4, 0x11, 0, 0x18>; "optarg"|175-1-0-0-12-24-2-0-4-0-0-0-17-0-24-0
66664|data|Elf32_Sym <aGettext - byte_104D8, 0, 0, 0x12, 0, 0>; "gettext"|109-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66680|data|Elf32_Sym <aZ7bstrcmppkcs0 - byte_104D8, 0, 0, 0x12, 0, 0>; "_Z7bstrcmpPKcS0_"|116-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66696|data|Elf32_Sym <aPuts - byte_104D8, 0, 0, 0x12, 0, 0>; "puts"|104-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66712|data|Elf32_Sym <aBssEnd - byte_104D8, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|240-1-0-0-20-24-2-0-0-0-0-0-16-0-24-0
66728|data|Elf32_Sym <aZ5bfreepv - byte_104D8, 0, 0, 0x12, 0, 0>; "_Z5bfreePv"|150-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66744|data|Elf32_Sym <aPrintf - byte_104D8, 0, 0, 0x12, 0, 0>; "printf"|131-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66760|data|Elf32_Sym <aZ8bMallocpkcij - byte_104D8, 0, 0, 0x12, 0, 0>; "_Z8b_mallocPKcij"|133-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66776|data|DCB 0|0
66777|data|DCB "libbareos-14.2.1.so",0|108-105-98-98-97-114-101-111-115-45-49-52-46-50-46-49-46-115-111-0
66797|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
66817|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
66845|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
66860|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
66886|data|DCB "_init",0|95-105-110-105-116-0
66892|data|DCB "_Z7bstrcmpPKcS0_",0|95-90-55-98-115-116-114-99-109-112-80-75-99-83-48-95-0
66909|data|DCB "_Z8b_mallocPKcij",0|95-90-56-98-95-109-97-108-108-111-99-80-75-99-105-106-0
66926|data|DCB "_Z5bfreePv",0|95-90-53-98-102-114-101-101-80-118-0
66937|data|DCB "_fini",0|95-102-105-110-105-0
66943|data|DCB "libwrap.so.0",0|108-105-98-119-114-97-112-46-115-111-46-48-0
66956|data|DCB "libcap.so.2",0|108-105-98-99-97-112-46-115-111-46-50-0
66968|data|DCB "libz.so.1",0|108-105-98-122-46-115-111-46-49-0
66978|data|DCB "liblzo2.so.2",0|108-105-98-108-122-111-50-46-115-111-46-50-0
66991|data|DCB "libgnutls-deb0.so.28",0|108-105-98-103-110-117-116-108-115-45-100-101-98-48-46-115-111-46-50-56-0
67012|data|DCB "libpthread.so.0",0|108-105-98-112-116-104-114-101-97-100-46-115-111-46-48-0
67028|data|DCB "libdl.so.2",0|108-105-98-100-108-46-115-111-46-50-0
67039|data|DCB "dlsym",0|100-108-115-121-109-0
67045|data|DCB "dlerror",0|100-108-101-114-114-111-114-0
67053|data|DCB "dlclose",0|100-108-99-108-111-115-101-0
67061|data|DCB "dlopen",0|100-108-111-112-101-110-0
67068|data|DCB "libstdc++.so.6",0|108-105-98-115-116-100-99-43-43-46-115-111-46-54-0
67083|data|DCB "libm.so.6",0|108-105-98-109-46-115-111-46-54-0
67093|data|DCB "libgcc_s.so.1",0|108-105-98-103-99-99-95-115-46-115-111-46-49-0
67107|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
67117|data|DCB "strcpy",0|115-116-114-99-112-121-0
67124|data|DCB "exit",0|101-120-105-116-0
67129|data|DCB "optind",0|111-112-116-105-110-100-0
67136|data|DCB "puts",0|112-117-116-115-0
67141|data|DCB "gettext",0|103-101-116-116-101-120-116-0
67149|data|DCB "putchar",0|112-117-116-99-104-97-114-0
67157|data|DCB "abort",0|97-98-111-114-116-0
67163|data|DCB "printf",0|112-114-105-110-116-102-0
67170|data|DCB "strtol",0|115-116-114-116-111-108-0
67177|data|DCB "strlen",0|115-116-114-108-101-110-0
67184|data|DCB "memset",0|109-101-109-115-101-116-0
67191|data|DCB "getopt",0|103-101-116-111-112-116-0
67198|data|DCB "realpath",0|114-101-97-108-112-97-116-104-0
67207|data|DCB "optarg",0|111-112-116-97-114-103-0
67214|data|DCB "getcwd",0|103-101-116-99-119-100-0
67221|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
67239|data|DCB "_edata",0|95-101-100-97-116-97-0
67246|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
67258|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
67272|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
67284|data|DCB "__end__",0|95-95-101-110-100-95-95-0
67292|data|DCB "_end",0|95-101-110-100-0
67297|data|DCB "/usr/lib/bareos",0|47-117-115-114-47-108-105-98-47-98-97-114-101-111-115-0
67313|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
67323|data|DCB 0|0
67324|data|DCW 0|0-0
67326|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
67328|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
67330|data|DCW 0; local  symbol: __gmon_start__|0-0
67332|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
67334|data|DCW 1; global symbol: _bss_end__|1-0
67336|data|DCW 3; strcpy@@GLIBC_2.4|3-0
67338|data|DCW 3; memset@@GLIBC_2.4|3-0
67340|data|DCW 1; global symbol: _fini|1-0
67342|data|DCW 3; optind@@GLIBC_2.4|3-0
67344|data|DCW 1; global symbol: _init|1-0
67346|data|DCW 1; global symbol: __bss_start__|1-0
67348|data|DCW 3; getcwd@@GLIBC_2.4|3-0
67350|data|DCW 3; abort@@GLIBC_2.4|3-0
67352|data|DCW 3; getopt@@GLIBC_2.4|3-0
67354|data|DCW 1; global symbol: __bss_start|1-0
67356|data|DCW 2; dlsym@@GLIBC_2.4|2-0
67358|data|DCW 3; exit@@GLIBC_2.4|3-0
67360|data|DCW 1; global symbol: __end__|1-0
67362|data|DCW 1; global symbol: _end|1-0
67364|data|DCW 3; strtol@@GLIBC_2.4|3-0
67366|data|DCW 3; realpath@@GLIBC_2.4|3-0
67368|data|DCW 3; __libc_start_main@@GLIBC_2.4|3-0
67370|data|DCW 2; dlerror@@GLIBC_2.4|2-0
67372|data|DCW 1; global symbol: _edata|1-0
67374|data|DCW 3; putchar@@GLIBC_2.4|3-0
67376|data|DCW 2; dlopen@@GLIBC_2.4|2-0
67378|data|DCW 2; dlclose@@GLIBC_2.4|2-0
67380|data|DCW 3; strlen@@GLIBC_2.4|3-0
67382|data|DCW 3; optarg@@GLIBC_2.4|3-0
67384|data|DCW 3; gettext@@GLIBC_2.4|3-0
67386|data|DCW 0; local  symbol: _Z7bstrcmpPKcS0_|0-0
67388|data|DCW 3; puts@@GLIBC_2.4|3-0
67390|data|DCW 1; global symbol: __bss_end__|1-0
67392|data|DCW 0; local  symbol: _Z5bfreePv|0-0
67394|data|DCW 3; printf@@GLIBC_2.4|3-0
67396|data|DCW 0; local  symbol: _Z8b_mallocPKcij|0-0
67398|data|DCW 0|0-0
67400|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_104D8, 0x10, 0x20>; "libc.so.6"|1-0-1-0-75-1-0-0-16-0-0-0-32-0-0-0
67416|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_104D8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-25-2-0-0-0-0-0-0
67432|data|Elf32_Verneed <1, 1, aLibdlSo2 - byte_104D8, 0x10, 0>; "libdl.so.2"|1-0-1-0-252-0-0-0-16-0-0-0-0-0-0-0
67448|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_104D8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-25-2-0-0-0-0-0-0
67464|data|Elf32_Rel <0x217FC, 0x315>; R_ARM_GLOB_DAT __gmon_start__|252-23-2-0-21-3-0-0
67472|data|Elf32_Rel <0x21808, 0x914>; R_ARM_COPY optind|8-24-2-0-20-9-0-0
67480|data|Elf32_Rel <0x2180C, 0x1D14>; R_ARM_COPY optarg|12-24-2-0-20-29-0-0
67488|data|Elf32_Rel <0x217A4, 0x2416>; R_ARM_JUMP_SLOT _Z8b_mallocPKcij|164-23-2-0-22-36-0-0
67496|data|Elf32_Rel <0x217A8, 0x2216>; R_ARM_JUMP_SLOT _Z5bfreePv|168-23-2-0-22-34-0-0
67504|data|Elf32_Rel <0x217AC, 0x1716>; R_ARM_JUMP_SLOT dlerror|172-23-2-0-22-23-0-0
67512|data|Elf32_Rel <0x217B0, 0x1416>; R_ARM_JUMP_SLOT strtol|176-23-2-0-22-20-0-0
67520|data|Elf32_Rel <0x217B4, 0x1116>; R_ARM_JUMP_SLOT exit|180-23-2-0-22-17-0-0
67528|data|Elf32_Rel <0x217B8, 0x2316>; R_ARM_JUMP_SLOT printf|184-23-2-0-22-35-0-0
67536|data|Elf32_Rel <0x217BC, 0x1B16>; R_ARM_JUMP_SLOT dlclose|188-23-2-0-22-27-0-0
67544|data|Elf32_Rel <0x217C0, 0x2016>; R_ARM_JUMP_SLOT puts|192-23-2-0-22-32-0-0
67552|data|Elf32_Rel <0x217C4, 0x1516>; R_ARM_JUMP_SLOT realpath|196-23-2-0-22-21-0-0
67560|data|Elf32_Rel <0x217C8, 0x1916>; R_ARM_JUMP_SLOT putchar|200-23-2-0-22-25-0-0
67568|data|Elf32_Rel <0x217CC, 0x716>; R_ARM_JUMP_SLOT memset|204-23-2-0-22-7-0-0
67576|data|Elf32_Rel <0x217D0, 0xD16>; R_ARM_JUMP_SLOT abort|208-23-2-0-22-13-0-0
67584|data|Elf32_Rel <0x217D4, 0x1A16>; R_ARM_JUMP_SLOT dlopen|212-23-2-0-22-26-0-0
67592|data|Elf32_Rel <0x217D8, 0x616>; R_ARM_JUMP_SLOT strcpy|216-23-2-0-22-6-0-0
67600|data|Elf32_Rel <0x217DC, 0xE16>; R_ARM_JUMP_SLOT getopt|220-23-2-0-22-14-0-0
67608|data|Elf32_Rel <0x217E0, 0x1C16>; R_ARM_JUMP_SLOT strlen|224-23-2-0-22-28-0-0
67616|data|Elf32_Rel <0x217E4, 0x1F16>; R_ARM_JUMP_SLOT _Z7bstrcmpPKcS0_|228-23-2-0-22-31-0-0
67624|data|Elf32_Rel <0x217E8, 0xC16>; R_ARM_JUMP_SLOT getcwd|232-23-2-0-22-12-0-0
67632|data|Elf32_Rel <0x217EC, 0x1E16>; R_ARM_JUMP_SLOT gettext|236-23-2-0-22-30-0-0
67640|data|Elf32_Rel <0x217F0, 0x1616>; R_ARM_JUMP_SLOT __libc_start_main|240-23-2-0-22-22-0-0
67648|data|Elf32_Rel <0x217F4, 0x1016>; R_ARM_JUMP_SLOT dlsym|244-23-2-0-22-16-0-0
67656|data|Elf32_Rel <0x217F8, 0x316>; R_ARM_JUMP_SLOT __gmon_start__|248-23-2-0-22-3-0-0
67664|code|PUSH            {R3,LR}; _init|8-64-45-233
67668|code|BL              sub_10AF8|167-0-0-235
67672|code|POP             {R3,PC}|8-128-189-232
67676|code|PUSH            {LR}|4-224-45-229
67680|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x1086C)|4-224-159-229
67684|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
67688|code|LDR             PC, [LR,#8]!|8-240-190-229
67692|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1086C|44-15-1-0
67696|code|BX              PC; b_malloc(char const*,int,uint)|120-71
67698|data|ALIGN 4|192-70
67700|code|ADR             R12, 0x1087C|0-198-143-226
67704|code|ADD             R12, R12, #0x10000|16-202-140-226
67708|code|LDR             PC, [R12,#(_Z8b_mallocPKcij_ptr - 0x2087C)]!; b_malloc(char const*,int,uint)|40-255-188-229
67712|code|BX              PC; bfree(void *)|120-71
67714|data|ALIGN 4|192-70
67716|code|ADR             R12, 0x1088C|0-198-143-226
67720|code|ADD             R12, R12, #0x10000|16-202-140-226
67724|code|LDR             PC, [R12,#(_Z5bfreePv_ptr - 0x2088C)]!; bfree(void *)|28-255-188-229
67728|code|ADR             R12, 0x10898|0-198-143-226
67732|code|ADD             R12, R12, #0x10000|16-202-140-226
67736|code|LDR             PC, [R12,#(dlerror_ptr - 0x20898)]!; __imp_dlerror|20-255-188-229
67740|code|ADR             R12, 0x108A4|0-198-143-226
67744|code|ADD             R12, R12, #0x10000|16-202-140-226
67748|code|LDR             PC, [R12,#(strtol_ptr - 0x208A4)]!; __imp_strtol|12-255-188-229
67752|code|ADR             R12, 0x108B0|0-198-143-226
67756|code|ADD             R12, R12, #0x10000|16-202-140-226
67760|code|LDR             PC, [R12,#(exit_ptr - 0x208B0)]!; __imp_exit|4-255-188-229
67764|code|BX              PC|120-71
67766|data|ALIGN 4|192-70
67768|code|ADR             R12, 0x108C0|0-198-143-226
67772|code|ADD             R12, R12, #0x10000|16-202-140-226
67776|code|LDR             PC, [R12,#(printf_ptr - 0x208C0)]!; __imp_printf|248-254-188-229
67780|code|ADR             R12, 0x108CC|0-198-143-226
67784|code|ADD             R12, R12, #0x10000|16-202-140-226
67788|code|LDR             PC, [R12,#(dlclose_ptr - 0x208CC)]!; __imp_dlclose|240-254-188-229
67792|code|BX              PC|120-71
67794|data|ALIGN 4|192-70
67796|code|ADR             R12, 0x108DC|0-198-143-226
67800|code|ADD             R12, R12, #0x10000|16-202-140-226
67804|code|LDR             PC, [R12,#(puts_ptr - 0x208DC)]!; __imp_puts|228-254-188-229
67808|code|ADR             R12, 0x108E8|0-198-143-226
67812|code|ADD             R12, R12, #0x10000|16-202-140-226
67816|code|LDR             PC, [R12,#(realpath_ptr - 0x208E8)]!; __imp_realpath|220-254-188-229
67832|code|ADR             R12, 0x10900|0-198-143-226
67836|code|ADD             R12, R12, #0x10000|16-202-140-226
67840|code|LDR             PC, [R12,#(memset_ptr - 0x20900)]!; __imp_memset|204-254-188-229
67844|code|ADR             R12, 0x1090C|0-198-143-226
67848|code|ADD             R12, R12, #0x10000|16-202-140-226
67852|code|LDR             PC, [R12,#(abort_ptr - 0x2090C)]!; __imp_abort|196-254-188-229
67856|code|ADR             R12, 0x10918|0-198-143-226
67860|code|ADD             R12, R12, #0x10000|16-202-140-226
67864|code|LDR             PC, [R12,#(dlopen_ptr - 0x20918)]!; __imp_dlopen|188-254-188-229
67868|code|ADR             R12, 0x10924|0-198-143-226
67872|code|ADD             R12, R12, #0x10000|16-202-140-226
67876|code|LDR             PC, [R12,#(strcpy_ptr - 0x20924)]!; __imp_strcpy|180-254-188-229
67880|code|ADR             R12, 0x10930|0-198-143-226
67884|code|ADD             R12, R12, #0x10000|16-202-140-226
67888|code|LDR             PC, [R12,#(getopt_ptr - 0x20930)]!; __imp_getopt|172-254-188-229
67892|code|ADR             R12, 0x1093C|0-198-143-226
67896|code|ADD             R12, R12, #0x10000|16-202-140-226
67900|code|LDR             PC, [R12,#(strlen_ptr - 0x2093C)]!; __imp_strlen|164-254-188-229
67904|code|ADR             R12, 0x10948|0-198-143-226
67908|code|ADD             R12, R12, #0x10000|16-202-140-226
67912|code|LDR             PC, [R12,#(_Z7bstrcmpPKcS0__ptr - 0x20948)]!; bstrcmp(char const*,char const*)|156-254-188-229
67916|code|ADR             R12, 0x10954|0-198-143-226
67920|code|ADD             R12, R12, #0x10000|16-202-140-226
67924|code|LDR             PC, [R12,#(getcwd_ptr - 0x20954)]!; __imp_getcwd|148-254-188-229
67928|code|ADR             R12, 0x10960|0-198-143-226
67932|code|ADD             R12, R12, #0x10000|16-202-140-226
67936|code|LDR             PC, [R12,#(gettext_ptr - 0x20960)]!; __imp_gettext|140-254-188-229
67940|code|ADR             R12, 0x1096C|0-198-143-226
67944|code|ADD             R12, R12, #0x10000|16-202-140-226
67948|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x2096C)]!; __imp___libc_start_main|132-254-188-229
67952|code|ADR             R12, 0x10978|0-198-143-226
67956|code|ADD             R12, R12, #0x10000|16-202-140-226
67960|code|LDR             PC, [R12,#(dlsym_ptr - 0x20978)]!; __imp_dlsym|124-254-188-229
67964|code|ADR             R12, 0x10984|0-198-143-226
67968|code|ADD             R12, R12, #0x10000|16-202-140-226
67972|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x20984)]!; __imp___gmon_start__|116-254-188-229
67976|code|MVNSMI          LR, SP,LSR#18|45-233-240-65
67980|code|LDRBTNE         PC, [R0],#-0x241|65-242-112-20
67984|code|STREQ           PC, [R1],#-0x2C0|192-242-1-4
67988|code|STRMI           R4, [PC],-R0,LSL#13|128-70-15-70
67992|code|STCGT           p0, c11, [PC], {0x8C}|140-176-15-204
67996|code|STRCS           R10, [R1],-R3,LSL#26|3-173-1-38
68000|code|STCGT           p5, c12, [PC], {0xF}|15-197-15-204
68004|code|STRGT           R6, byte_10180+8|36-104-15-197
68008|data|DCD 0xF000602C, 0x4641F91F, 0x4604463A, 0xF942F000, 0x46319602|44-96-0-240-31-249-65-70-58-70-4-70-0-240-66-249-2-150-49-70-96-104-8-35-1-147-255-247-166-239-160-96-0-40-109-208-65-242-156-81-192-242-1-1-255-247-204-239-6-70-0-40-79-208-65-242-0-97-160-104-192-242-1-1-255-247-194-239-5-70-0-40-48-208-227-104-3-169-4-241-20-2-1-168-0-43-200-191-2-147-4-241-24-3-176-71-32-70-0-240-229-249-163-120-32-97-147-177-99-120-171-185-32-70-0-240-163-250-10-32-255-247-100-239-168-71-160-104-255-247-76-239-32-70-0-240-247-248-0-32-12-176-189-232-240-129-32-70-0-240-246-249-99-120-27-177-35-120-0-43-230-209-232-231-163-120-0-43-248-208-225-231-255-247-28-239-1-70-65-242-16-96-192-242-1-0-255-247-42-239-65-242-208-80-192-242-1-0-255-247-50-239-32-70-0-240-212-248-3-32-255-247-22-239-255-247-8-239-1-70-65-242-168-80-192-242-1-0-255-247-20-239-65-242-208-80-192-242-1-0-255-247-28-239-32-70-0-240-191-248-2-32-255-247-0-239-255-247-242-238-1-70-65-242-128-80-192-242-1-0-255-247-0-239-32-70-0-240-176-248-48-70-255-247-242-238-0-191
68296|code|MOV.W           R11, #0|79-240-0-11
68300|code|MOV.W           LR, #0|79-240-0-14
68304|code|POP             {R1}; argc|2-188
68306|code|MOV             R2, SP; ubp_av|106-70
68308|code|PUSH            {R2}; stack_end|4-180
68310|code|PUSH            {R0}; rtld_fini|1-180
68312|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
68316|code|PUSH.W          {R12}; fini|77-248-4-205
68320|code|LDR             R0, =(loc_10988+1); main|3-72
68322|code|LDR             R3, =(sub_11120+1); init|4-75
68324|code|BLX             __libc_start_main|255-247-62-239
68328|code|BLX             abort|255-247-12-239
68332|data|DCD nullsub_1+1|97-17-1-0
68336|data|DCD loc_10988+1|137-9-1-0
68340|data|DCD sub_11120+1|33-17-1-0
68344|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x10B08)|20-48-159-229
68348|code|LDR             R2, =(__gmon_start___ptr_0 - 0x21798)|20-32-159-229
68352|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
68356|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
68360|code|CMP             R2, #0|0-0-82-227
68364|code|BXEQ            LR|30-255-47-1
68368|code|B               __gmon_start__|153-255-255-234
68372|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10B08|144-12-1-0
68376|data|DCD __gmon_start___ptr_0 - 0x21798|100-0-0-0
68380|code|LDR             R3, =0x2180B|7-75
68382|code|MOV             R0, #0x21808|65-246-8-0-192-242-2-0
68390|code|SUBS            R3, R3, R0|27-26
68392|code|CMP             R3, #6|6-43
68394|code|BLS             locret_10B38|5-217
68396|code|MOV             R3, #0|64-242-0-3-192-242-0-3
68404|code|CBZ             R3, locret_10B38|3-177
68406|code|BX              R3|24-71
68408|code|BX              LR|112-71
68410|data|ALIGN 4|0-191
68412|data|DCD 0x2180B|11-24-2-0
68416|code|MOVW            R3, #0x1808|65-246-8-3
68420|code|MOVW            R0, #0x1808|65-246-8-0
68424|code|MOVT.W          R3, #2|192-242-2-3
68428|code|MOVT.W          R0, #2|192-242-2-0
68432|code|SUBS            R1, R3, R0|25-26
68434|code|ASRS            R1, R1, #2|137-16
68436|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
68440|code|ASRS            R1, R1, #1|73-16
68442|code|BEQ             locret_10B68|5-208
68444|code|MOV             R3, #0|64-242-0-3-192-242-0-3
68452|code|CBZ             R3, locret_10B68|3-177
68454|code|BX              R3|24-71
68456|code|BX              LR|112-71
68458|data|ALIGN 4|0-191
68460|code|PUSH            {R4,LR}|16-181
68462|code|MOV             R4, #0x21810|65-246-16-4-192-242-2-4
68470|code|LDRB            R3, [R4]|35-120
68472|code|CBNZ            R3, locret_10B82|27-185
68474|code|BL              sub_10B1C|255-247-207-255
68478|code|MOVS            R3, #1|1-35
68480|code|STRB            R3, [R4]|35-112
68482|code|POP             {R4,PC}|16-189
68484|code|MOVW            R0, #0x164C|65-242-76-96
68488|code|PUSH            {R3,LR}|8-181
68490|code|MOVT.W          R0, #2|192-242-2-0
68494|code|LDR             R3, [R0]|3-104
68496|code|CBNZ            R3, loc_10B98|19-185
68498|code|POP.W           {R3,LR}|189-232-8-64
68502|code|B               sub_10B40|211-231
68504|code|MOV             R3, #0|64-242-0-3-192-242-0-3
68512|code|CMP             R3, #0|0-43
68514|code|BEQ             loc_10B92|246-208
68516|code|BLX             R3|152-71
68518|code|B               loc_10B92|244-231
68520|code|PUSH            {R0-R3}|15-180
68522|code|MOVS            R0, #0|0-32
68524|code|ADD             SP, SP, #0x10|4-176
68526|code|BX              LR|112-71
68528|code|MOVS            R0, #0|0-32
68530|code|BX              LR|112-71
68532|code|MOVS            R0, #0|0-32
68534|code|BX              LR|112-71
68536|code|MOVS            R0, #0|0-32
68538|code|BX              LR|112-71
68540|code|MOVS            R0, #0|0-32
68542|code|BX              LR|112-71
68544|code|MOVW            R0, #0x1194|65-242-148-16
68548|code|MOV             R2, R3|26-70
68550|code|MOVT.W          R0, #1|192-242-1-0
68554|code|MOVS            R1, #0xA6|166-33
68556|code|B.W             j__Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-80-190
68560|code|CBZ             R3, locret_10BD8|19-177
68562|code|MOV             R0, R3|24-70
68564|code|B.W             j__Z5bfreePv; bfree(void *)|255-247-84-190
68568|code|BX              LR|112-71
68570|data|ALIGN 4|0-191
68572|code|MOVW            R0, #0x11A0|65-242-160-16
68576|code|MOVS            R1, #1|1-33
68578|code|MOVT.W          R0, #1|192-242-1-0
68582|code|B.W             j_printf|255-247-101-190
68586|data|ALIGN 4|0-191
68588|code|MOVW            R0, #0x1194|65-242-148-16
68592|code|MOVS            R1, #0xC3|195-33
68594|code|PUSH            {R4,LR}|16-181
68596|code|MOVT.W          R0, #1|192-242-1-0
68600|code|MOVS            R2, #0x1C|28-34
68602|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-60-238
68606|code|CBZ             R0, loc_10C0E|48-177
68608|code|MOV             R4, R0|4-70
68610|code|MOVS            R1, #0|0-33
68612|code|MOVS            R2, #0x1C|28-34
68614|code|BLX             memset|255-247-120-238
68618|code|MOV             R0, R4|32-70
68620|code|POP             {R4,PC}|16-189
68622|code|MOV             R0, #0x112B8|65-242-184-32-192-242-1-0
68630|code|BLX             puts|255-247-94-238
68634|code|MOVS            R0, #0xA|10-32
68636|code|BLX             exit|255-247-68-238
68640|code|PUSH            {R4,LR}|16-181
68642|code|MOV             R4, R0|4-70
68644|code|LDR             R0, [R0,#4]|64-104
68646|code|CBZ             R0, loc_10C30|24-177
68648|code|BLX             _Z5bfreePv; bfree(void *)|255-247-44-238
68652|code|MOVS            R3, #0|0-35
68654|code|STR             R3, [R4,#4]|99-96
68656|code|MOV             R0, R4|32-70
68658|code|POP.W           {R4,LR}|189-232-16-64
68662|code|B.W             j__Z5bfreePv; bfree(void *)|255-247-35-190
68666|data|ALIGN 4|0-191
68668|code|PUSH.W          {R4-R8,LR}|45-233-240-65
68672|code|MOVW            R7, #0x180C|65-246-12-7
68676|code|MOV             R6, R0|6-70
68678|code|MOV             R4, R1|12-70
68680|code|MOV             R5, R2|21-70
68682|code|MOVT.W          R7, #2|192-242-2-7
68686|code|MOV.W           R8, #1|79-240-1-8
68690|code|MOVW            R2, #0x12D8|65-242-216-34
68694|code|MOV             R0, R4|32-70
68696|code|MOVT.W          R2, #1|192-242-1-2
68700|code|MOV             R1, R5|41-70
68702|code|BLX             getopt|255-247-100-238
68706|code|ADDS            R3, R0, #1|67-28
68708|code|BEQ             loc_10CBC|42-208
68710|code|SUB.W           R3, R0, #0x61 ; 'a'; switch 22 cases|160-241-97-3
68714|code|CMP             R3, #0x15|21-43
68716|code|BHI             def_10C6E; jumptable 00010C6E default case, cases 98-101,103,104,106-117|28-216
68718|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
68722|data|DCB 0x14; jump table for switch statement|20
68723|data|DCB 0x1B|27
68724|data|DCB 0x1B|27
68725|data|DCB 0x1B|27
68726|data|DCB 0x1B|27
68727|data|DCB 0x11|17
68728|data|DCB 0x1B|27
68729|data|DCB 0x1B|27
68730|data|DCB 0xE|14
68731|data|DCB 0x1B|27
68732|data|DCB 0x1B|27
68733|data|DCB 0x1B|27
68734|data|DCB 0x1B|27
68735|data|DCB 0x1B|27
68736|data|DCB 0x1B|27
68737|data|DCB 0x1B|27
68738|data|DCB 0x1B|27
68739|data|DCB 0x1B|27
68740|data|DCB 0x1B|27
68741|data|DCB 0x1B|27
68742|data|DCB 0x1B|27
68743|data|DCB 0xB|11
68744|code|STRB.W          R8, [R6]; jumptable 00010C6E case 118|134-248-0-128
68748|code|B               loc_10C52|225-231
68750|code|STRB.W          R8, [R6,#1]; jumptable 00010C6E case 105|134-248-1-128
68754|code|B               loc_10C52|222-231
68756|code|STRB.W          R8, [R6,#2]; jumptable 00010C6E case 102|134-248-2-128
68760|code|B               loc_10C52|219-231
68762|code|LDR             R0, [R7]; jumptable 00010C6E case 97|56-104
68764|code|MOVS            R1, #0|0-33
68766|code|MOVS            R2, #0xA|10-34
68768|code|BLX             strtol|255-247-252-237
68772|code|STR             R0, [R6,#0xC]|240-96
68774|code|B               loc_10C52|212-231
68776|code|MOVW            R0, #0x11A0; jumptable 00010C6E default case, cases 98-101,103,104,106-117|65-242-160-16
68780|code|MOVS            R1, #1|1-33
68782|code|MOVT.W          R0, #1|192-242-1-0
68786|code|BLX             printf|255-247-2-238
68790|code|MOVS            R0, #0|0-32
68792|code|BLX             exit|255-247-246-237
68796|code|MOV             R3, #0x21808|65-246-8-3-192-242-2-3
68804|code|LDR             R7, [R3]|31-104
68806|code|SUBS            R4, R4, R7|228-27
68808|code|CMP             R4, #0|0-44
68810|code|BLE             def_10C6E; jumptable 00010C6E default case, cases 98-101,103,104,106-117|237-221
68812|code|LDR             R3, [R6,#4]|115-104
68814|code|CBZ             R3, loc_10CD4|11-177
68816|code|POP.W           {R4-R8,PC}|189-232-240-129
68820|code|LDR.W           R0, [R5,R7,LSL#2]|85-248-39-0
68824|code|LDRB            R3, [R0]|3-120
68826|code|CMP             R3, #0x2F ; '/'|47-43
68828|code|BEQ             loc_10D78|76-208
68830|code|MOVW            R0, #0x1194|65-242-148-16
68834|code|MOVW            R1, #0x10D|64-242-13-17
68838|code|MOVT.W          R0, #1|192-242-1-0
68842|code|MOV.W           R2, #0x1000|79-244-128-82
68846|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-194-237
68850|code|MOV             R8, R0|128-70
68852|code|CMP             R0, #0|0-40
68854|code|BEQ             loc_10DC6|102-208
68856|code|MOVW            R0, #0x1194|65-242-148-16
68860|code|MOVW            R1, #0x10F|64-242-15-17
68864|code|MOVT.W          R0, #1|192-242-1-0
68868|code|MOV.W           R2, #0x1000|79-244-128-82
68872|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-180-237
68876|code|MOV             R4, R0|4-70
68878|code|CMP             R0, #0|0-40
68880|code|BEQ             loc_10DC6|89-208
68882|code|MOV.W           R1, #0x1000|79-244-128-81
68886|code|MOV             R0, R8|64-70
68888|code|BLX             getcwd|255-247-24-238
68892|code|MOV             R8, R0|128-70
68894|code|BLX             strlen|255-247-10-238
68898|code|MOV             R3, #0x112E0|65-242-224-35-192-242-1-3
68906|code|LDRH            R3, [R3]|27-136
68908|code|MOV             R2, R0|2-70
68910|code|ADDS            R0, #1|1-48
68912|code|STRH.W          R3, [R8,R2]|40-248-2-48
68916|code|ADD             R0, R8|64-68
68918|code|LDR.W           R1, [R5,R7,LSL#2]|85-248-39-16
68922|code|BLX             strcpy|255-247-240-237
68926|code|MOV             R0, R8|64-70
68928|code|MOV             R1, R4|33-70
68930|code|BLX             realpath|255-247-206-237
68934|code|CBZ             R0, loc_10D9A|64-179
68936|code|MOV             R0, R4|32-70
68938|code|BLX             strlen|255-247-244-237
68942|code|MOVW            R1, #0x11D|64-242-29-17
68946|code|ADDS            R2, R0, #1|66-28
68948|code|MOV             R0, #0x11194|65-242-148-16-192-242-1-0
68956|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-138-237
68960|code|MOV             R1, R4|33-70
68962|code|BLX             strcpy|255-247-220-237
68966|code|STR             R0, [R6,#4]|112-96
68968|code|MOV             R0, R8|64-70
68970|code|BLX             _Z5bfreePv; bfree(void *)|255-247-140-237
68974|code|MOV             R0, R4|32-70
68976|code|POP.W           {R4-R8,LR}|189-232-240-65
68980|code|B.W             j__Z5bfreePv; bfree(void *)|255-247-132-189
68984|code|BLX             strlen|255-247-220-237
68988|code|MOVW            R1, #0x121|64-242-33-17
68992|code|ADDS            R2, R0, #1|66-28
68994|code|MOV             R0, #0x11194|65-242-148-16-192-242-1-0
69002|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-116-237
69006|code|LDR.W           R1, [R5,R7,LSL#2]|85-248-39-16
69010|code|BLX             strcpy|255-247-196-237
69014|code|STR             R0, [R6,#4]|112-96
69016|code|B               locret_10CD0|154-231
69018|code|MOV             R0, R4|32-70
69020|code|BLX             _Z5bfreePv; bfree(void *)|255-247-114-237
69024|code|LDR.W           R0, [R5,R7,LSL#2]|85-248-39-0
69028|code|BLX             strlen|255-247-198-237
69032|code|MOVW            R1, #0x11B|64-242-27-17
69036|code|ADDS            R2, R0, #1|66-28
69038|code|MOV             R0, #0x11194|65-242-148-16-192-242-1-0
69046|code|BLX             _Z8b_mallocPKcij; b_malloc(char const*,int,uint)|255-247-94-237
69050|code|LDR.W           R1, [R5,R7,LSL#2]|85-248-39-16
69054|code|BLX             strcpy|255-247-174-237
69058|code|MOV             R4, R0|4-70
69060|code|B               loc_10D48|192-231
69062|code|MOV             R0, #0x112B8|65-242-184-32-192-242-1-0
69070|code|BLX             puts|255-247-130-237
69074|code|MOVS            R0, #0xA|10-32
69076|code|BLX             exit|255-247-104-237
69080|code|CBZ             R0, loc_10E1E|8-179
69082|code|PUSH            {R4,LR}|16-181
69084|code|LDR             R4, [R0,#0x14]|68-105
69086|code|CBZ             R4, loc_10E1A|228-177
69088|code|LDR             R0, [R4,#8]|160-104
69090|code|CBZ             R0, loc_10E1A|208-177
69092|code|MOV             R1, #0x112E4|65-242-228-33-192-242-1-1
69100|code|BLX             _Z7bstrcmpPKcS0_; bstrcmp(char const*,char const*)|255-247-168-237
69104|code|CBNZ            R0, loc_10E22|184-185
69106|code|LDR             R0, [R4,#8]|160-104
69108|code|CBZ             R0, loc_10E1A|136-177
69110|code|MOV             R1, #0x112F4|65-242-244-33-192-242-1-1
69118|code|BLX             _Z7bstrcmpPKcS0_; bstrcmp(char const*,char const*)|255-247-160-237
69122|code|CBNZ            R0, loc_10E26|128-185
69124|code|LDR             R0, [R4,#8]|160-104
69126|code|CBZ             R0, loc_10E1A|64-177
69128|code|MOV             R1, #0x11304|65-242-4-49-192-242-1-1
69136|code|BLX             _Z7bstrcmpPKcS0_; bstrcmp(char const*,char const*)|255-247-150-237
69140|code|CBZ             R0, loc_10E1A|8-177
69142|code|MOVS            R0, #2|2-32
69144|code|POP             {R4,PC}|16-189
69146|code|MOVS            R0, #3|3-32
69148|code|POP             {R4,PC}|16-189
69150|code|MOVS            R0, #3|3-32
69152|code|BX              LR|112-71
69154|code|MOVS            R0, #0|0-32
69156|code|POP             {R4,PC}|16-189
69158|code|MOVS            R0, #1|1-32
69160|code|POP             {R4,PC}|16-189
69162|data|ALIGN 4|0-191
69164|code|CMP             R0, #0|0-40
69166|code|BEQ             locret_10F12|112-208
69168|code|PUSH            {R3-R5,LR}|56-181
69170|code|LDR             R5, [R0,#0x14]|69-105
69172|code|CBZ             R5, locret_10E5A|141-177
69174|code|LDR             R3, [R0,#0x18]|131-105
69176|code|CBZ             R3, locret_10E5A|123-177
69178|code|LDR             R3, [R0,#0x10]|3-105
69180|code|MOV             R4, R0|4-70
69182|code|CMP             R3, #1|1-43
69184|code|BEQ             loc_10F04|96-208
69186|code|CMP             R3, #2|2-43
69188|code|BEQ             loc_10E5C|10-208
69190|code|CMP             R3, #0|0-43
69192|code|BEQ             loc_10EF6|85-208
69194|code|MOV             R0, #0x11390|65-242-144-48-192-242-1-0
69202|code|POP.W           {R3-R5,LR}|189-232-56-64
69206|code|B.W             j_puts|255-247-59-189
69210|code|POP             {R3-R5,PC}|56-189
69212|code|MOV             R0, #0x11368|65-242-104-48-192-242-1-0
69220|code|BLX             puts|255-247-54-237
69224|code|LDRB            R3, [R4]|35-120
69226|code|CBZ             R3, loc_10E7E|67-177
69228|code|LDR             R1, [R5,#8]|169-104
69230|code|CMP             R1, #0|0-41
69232|code|BEQ             loc_10F54|112-208
69234|code|MOV             R0, #0x113C0|65-242-192-48-192-242-1-0
69242|code|BLX             printf|255-247-30-237
69246|code|MOVW            R0, #0x13D4|65-242-212-48
69250|code|LDR             R1, [R5,#0x18]|169-105
69252|code|MOVT.W          R0, #1|192-242-1-0
69256|code|BLX             printf|255-247-22-237
69260|code|LDR             R1, [R5,#0x14]|105-105
69262|code|CMP             R1, #0|0-41
69264|code|BEQ             loc_10F14|64-208
69266|code|MOV             R0, #0x113EC|65-242-236-48-192-242-1-0
69274|code|BLX             printf|255-247-14-237
69278|code|LDR             R1, [R5,#0x10]|41-105
69280|code|CMP             R1, #0|0-41
69282|code|BEQ             loc_10F44|79-208
69284|code|MOV             R0, #0x11408|65-242-8-64-192-242-1-0
69292|code|BLX             printf|255-247-4-237
69296|code|LDR             R1, [R5,#0xC]|233-104
69298|code|CMP             R1, #0|0-41
69300|code|BEQ             loc_10F34|62-208
69302|code|MOV             R0, #0x1141C|65-242-28-64-192-242-1-0
69310|code|BLX             printf|255-247-252-236
69314|code|LDR             R1, [R5,#0x1C]|233-105
69316|code|CBZ             R1, loc_10F24|113-179
69318|code|MOV             R0, #0x11434|65-242-52-64-192-242-1-0
69326|code|BLX             printf|255-247-244-236
69330|code|MOVW            R0, #0x144C|65-242-76-64
69334|code|LDR             R1, [R5,#4]|105-104
69336|code|MOVT.W          R0, #1|192-242-1-0
69340|code|BLX             printf|255-247-236-236
69344|code|LDR             R1, [R5,#0x20]|41-106
69346|code|CMP             R1, #0|0-41
69348|code|BEQ             locret_10E5A|185-208
69350|code|MOV             R0, #0x11464|65-242-100-64-192-242-1-0
69358|code|POP.W           {R3-R5,LR}|189-232-56-64
69362|code|B.W             j_printf|255-247-223-188
69366|code|MOV             R0, #0x11314|65-242-20-48-192-242-1-0
69374|code|BLX             puts|255-247-234-236
69378|code|B               loc_10E68|177-231
69380|code|MOV             R0, #0x1133C|65-242-60-48-192-242-1-0
69388|code|BLX             puts|255-247-226-236
69392|code|B               loc_10E68|170-231
69394|code|BX              LR|112-71
69396|code|MOV             R0, #0x113B8|65-242-184-48-192-242-1-0
69404|code|BLX             gettext|255-247-28-237
69408|code|MOV             R1, R0|1-70
69410|code|B               loc_10E92|182-231
69412|code|MOV             R0, #0x113B8|65-242-184-48-192-242-1-0
69420|code|BLX             gettext|255-247-20-237
69424|code|MOV             R1, R0|1-70
69426|code|B               loc_10EC6|200-231
69428|code|MOV             R0, #0x113B8|65-242-184-48-192-242-1-0
69436|code|BLX             gettext|255-247-12-237
69440|code|MOV             R1, R0|1-70
69442|code|B               loc_10EB6|184-231
69444|code|MOV             R0, #0x113B8|65-242-184-48-192-242-1-0
69452|code|BLX             gettext|255-247-4-237
69456|code|MOV             R1, R0|1-70
69458|code|B               loc_10EA4|167-231
69460|code|MOV             R0, #0x113B8|65-242-184-48-192-242-1-0
69468|code|BLX             gettext|255-247-252-236
69472|code|MOV             R1, R0|1-70
69474|code|B               loc_10E72|134-231
69476|code|CMP             R0, #0|0-40
69478|code|BEQ.W           locret_1111A|0-240-216-128
69482|code|PUSH            {R3-R5,LR}|56-181
69484|code|LDR             R5, [R0,#0x18]|133-105
69486|code|CBZ             R5, locret_10FE2|197-179
69488|code|MOV             R4, R0|4-70
69490|code|MOV             R0, #0x11478|65-242-120-64-192-242-1-0
69498|code|BLX             puts|255-247-172-236
69502|code|LDR             R3, [R4,#0x10]|35-105
69504|code|CMP             R3, #1|1-43
69506|code|BEQ             loc_1103E|92-208
69508|code|CMP             R3, #2|2-43
69510|code|BEQ             loc_10FE4|45-208
69512|code|CBZ             R3, loc_10F9A|59-177
69514|code|MOV             R0, #0x11390|65-242-144-48-192-242-1-0
69522|code|POP.W           {R3-R5,LR}|189-232-56-64
69526|code|B.W             j_puts|255-247-155-188
69530|code|LDRB            R3, [R4]|35-120
69532|code|CBZ             R3, loc_10FBE|123-177
69534|code|LDR             R3, [R5,#8]|171-104
69536|code|CBZ             R3, loc_10FAE|43-177
69538|code|MOV             R0, #0x1148C|65-242-140-64-192-242-1-0
69546|code|BLX             puts|255-247-148-236
69550|code|LDR             R3, [R5,#0xC]|235-104
69552|code|CBZ             R3, loc_10FBE|43-177
69554|code|MOV             R0, #0x1149C|65-242-156-64-192-242-1-0
69562|code|BLX             puts|255-247-140-236
69566|code|LDR             R3, [R5,#0x10]|43-105
69568|code|CBZ             R3, loc_10FCE|43-177
69570|code|MOV             R0, #0x114AC|65-242-172-64-192-242-1-0
69578|code|BLX             puts|255-247-132-236
69582|code|LDR             R3, [R5,#0x14]|107-105
69584|code|CBZ             R3, loc_10FDE|43-177
69586|code|MOV             R0, #0x114C0|65-242-192-64-192-242-1-0
69594|code|BLX             puts|255-247-124-236
69598|code|LDR             R3, [R5,#0x18]|171-105
69600|code|CBNZ            R3, loc_1102E|43-187
69602|code|POP             {R3-R5,PC}|56-189
69604|code|LDRB            R3, [R4]|35-120
69606|code|CBZ             R3, loc_11008|123-177
69608|code|LDR             R3, [R5,#8]|171-104
69610|code|CBZ             R3, loc_10FF8|43-177
69612|code|MOV             R0, #0x1148C|65-242-140-64-192-242-1-0
69620|code|BLX             puts|255-247-110-236
69624|code|LDR             R3, [R5,#0xC]|235-104
69626|code|CBZ             R3, loc_11008|43-177
69628|code|MOV             R0, #0x1149C|65-242-156-64-192-242-1-0
69636|code|BLX             puts|255-247-102-236
69640|code|LDR             R3, [R5,#0x10]|43-105
69642|code|CBZ             R3, loc_11018|43-177
69644|code|MOV             R0, #0x114AC|65-242-172-64-192-242-1-0
69652|code|BLX             puts|255-247-94-236
69656|code|LDR             R3, [R5,#0x14]|107-105
69658|code|CBZ             R3, loc_11028|43-177
69660|code|MOV             R0, #0x114C0|65-242-192-64-192-242-1-0
69668|code|BLX             puts|255-247-86-236
69672|code|LDR             R3, [R5,#0x18]|171-105
69674|code|CMP             R3, #0|0-43
69676|code|BEQ             locret_1111C|118-208
69678|code|MOV             R0, #0x114D4|65-242-212-64-192-242-1-0
69686|code|POP.W           {R3-R5,LR}|189-232-56-64
69690|code|B.W             j_puts|255-247-73-188
69694|code|LDRB            R3, [R4]|35-120
69696|code|CBZ             R3, loc_11062|123-177
69698|code|LDR             R3, [R5,#8]|171-104
69700|code|CBZ             R3, loc_11052|43-177
69702|code|MOV             R0, #0x1148C|65-242-140-64-192-242-1-0
69710|code|BLX             puts|255-247-66-236
69714|code|LDR             R3, [R5,#0xC]|235-104
69716|code|CBZ             R3, loc_11062|43-177
69718|code|MOV             R0, #0x1149C|65-242-156-64-192-242-1-0
69726|code|BLX             puts|255-247-58-236
69730|code|LDR             R3, [R5,#0x10]|43-105
69732|code|CBZ             R3, loc_11072|43-177
69734|code|MOV             R0, #0x114AC|65-242-172-64-192-242-1-0
69742|code|BLX             puts|255-247-50-236
69746|code|LDR             R3, [R5,#0x14]|107-105
69748|code|CBZ             R3, loc_11082|43-177
69750|code|MOV             R0, #0x114C0|65-242-192-64-192-242-1-0
69758|code|BLX             puts|255-247-42-236
69762|code|LDR             R3, [R5,#0x18]|171-105
69764|code|CBZ             R3, loc_11092|43-177
69766|code|MOV             R0, #0x114D4|65-242-212-64-192-242-1-0
69774|code|BLX             puts|255-247-34-236
69778|code|LDR             R3, [R5,#0x1C]|235-105
69780|code|CBZ             R3, loc_110A2|43-177
69782|code|MOV             R0, #0x114EC|65-242-236-64-192-242-1-0
69790|code|BLX             puts|255-247-26-236
69794|code|LDR             R3, [R5,#0x20]|43-106
69796|code|CBZ             R3, loc_110B2|43-177
69798|code|MOV             R0, #0x11500|65-242-0-80-192-242-1-0
69806|code|BLX             puts|255-247-18-236
69810|code|LDR             R3, [R5,#0x24]|107-106
69812|code|CBZ             R3, loc_110C2|43-177
69814|code|MOV             R0, #0x11514|65-242-20-80-192-242-1-0
69822|code|BLX             puts|255-247-10-236
69826|code|LDR             R3, [R5,#0x28]|171-106
69828|code|CBZ             R3, loc_110D2|43-177
69830|code|MOV             R0, #0x11528|65-242-40-80-192-242-1-0
69838|code|BLX             puts|255-247-2-236
69842|code|LDR             R3, [R5,#0x2C]|235-106
69844|code|CBZ             R3, loc_110E2|43-177
69846|code|MOV             R0, #0x1153C|65-242-60-80-192-242-1-0
69854|code|BLX             puts|255-247-250-235
69858|code|LDR             R3, [R5,#0x30]|43-107
69860|code|CBZ             R3, loc_110F2|43-177
69862|code|MOV             R0, #0x11548|65-242-72-80-192-242-1-0
69870|code|BLX             puts|255-247-242-235
69874|code|LDR             R3, [R5,#0x34]|107-107
69876|code|CBZ             R3, loc_11102|43-177
69878|code|MOV             R0, #0x11558|65-242-88-80-192-242-1-0
69886|code|BLX             puts|255-247-234-235
69890|code|LDR             R3, [R5,#0x38]|171-107
69892|code|CMP             R3, #0|0-43
69894|code|BEQ.W           locret_10FE2|63-244-108-175
69898|code|MOV             R0, #0x11570|65-242-112-80-192-242-1-0
69906|code|POP.W           {R3-R5,LR}|189-232-56-64
69910|code|B.W             j_puts|255-247-219-187
69914|code|BX              LR|112-71
69916|code|POP             {R3-R5,PC}|56-189
69918|data|ALIGN 0x10|0-191
69920|code|PUSH.W          {R3-R9,LR}|45-233-248-67
69924|code|MOV             R7, R0|7-70
69926|code|LDR             R6, =(off_21648 - 0x11132)|12-78
69928|code|MOV             R8, R1|136-70
69930|code|LDR             R5, =(off_21644 - 0x11138)|12-77
69932|code|MOV             R9, R2|145-70
69934|code|ADD             R6, PC; off_21648|126-68
69936|code|BLX             .init_proc|255-247-142-235
69940|code|ADD             R5, PC; off_21644|125-68
69942|code|SUBS            R6, R6, R5|118-27
69944|code|ASRS            R6, R6, #2|182-16
69946|code|BEQ             locret_11152|10-208
69948|code|SUBS            R5, #4|4-61
69950|code|MOVS            R4, #0|0-36
69952|code|ADDS            R4, #1|1-52
69954|code|LDR.W           R3, [R5,#4]!|85-248-4-63
69958|code|MOV             R0, R7|56-70
69960|code|MOV             R1, R8|65-70
69962|code|MOV             R2, R9|74-70
69964|code|BLX             R3|152-71
69966|code|CMP             R4, R6|180-66
69968|code|BNE             loc_11140|246-209
69970|code|POP.W           {R3-R9,PC}|189-232-248-131
69974|data|ALIGN 4|0-191
69976|data|DCD off_21648 - 0x11132|22-5-1-0
69980|data|DCD off_21644 - 0x11138|12-5-1-0
69984|code|BX              LR|112-71
69986|data|ALIGN 4|0-191
69988|code|PUSH            {R3,LR}; _fini|8-64-45-233
69992|code|POP             {R3,PC}|8-128-189-232
136772|data|DCD sub_10B84+1|133-11-1-0
136776|data|DCD sub_10B6C+1|109-11-1-0
136780|data|DCD 0|0-0-0-0
136784|data|Elf32_Dyn <1, <1>>; DT_NEEDED libbareos-14.2.1.so|1-0-0-0-1-0-0-0
136792|data|Elf32_Dyn <1, <0xA7>>; DT_NEEDED libwrap.so.0|1-0-0-0-167-0-0-0
136800|data|Elf32_Dyn <1, <0xB4>>; DT_NEEDED libcap.so.2|1-0-0-0-180-0-0-0
136808|data|Elf32_Dyn <1, <0xC0>>; DT_NEEDED libz.so.1|1-0-0-0-192-0-0-0
136816|data|Elf32_Dyn <1, <0xCA>>; DT_NEEDED liblzo2.so.2|1-0-0-0-202-0-0-0
136824|data|Elf32_Dyn <1, <0xD7>>; DT_NEEDED libgnutls-deb0.so.28|1-0-0-0-215-0-0-0
136832|data|Elf32_Dyn <1, <0xEC>>; DT_NEEDED libpthread.so.0|1-0-0-0-236-0-0-0
136840|data|Elf32_Dyn <1, <0xFC>>; DT_NEEDED libdl.so.2|1-0-0-0-252-0-0-0
136848|data|Elf32_Dyn <1, <0x124>>; DT_NEEDED libstdc++.so.6|1-0-0-0-36-1-0-0
136856|data|Elf32_Dyn <1, <0x133>>; DT_NEEDED libm.so.6|1-0-0-0-51-1-0-0
136864|data|Elf32_Dyn <1, <0x13D>>; DT_NEEDED libgcc_s.so.1|1-0-0-0-61-1-0-0
136872|data|Elf32_Dyn <1, <0x14B>>; DT_NEEDED libc.so.6|1-0-0-0-75-1-0-0
136880|data|Elf32_Dyn <0xF, <0x209>>; DT_RPATH /usr/lib/bareos|15-0-0-0-9-2-0-0
136888|data|Elf32_Dyn <0xC, <0x10850>>; DT_INIT|12-0-0-0-80-8-1-0
136896|data|Elf32_Dyn <0xD, <0x11164>>; DT_FINI|13-0-0-0-100-17-1-0
136904|data|Elf32_Dyn <0x19, <0x21644>>; DT_INIT_ARRAY|25-0-0-0-68-22-2-0
136912|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
136920|data|Elf32_Dyn <0x1A, <0x21648>>; DT_FINI_ARRAY|26-0-0-0-72-22-2-0
136928|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
136936|data|Elf32_Dyn <0x6FFFFEF5, <0x10194>>; DT_GNU_HASH|245-254-255-111-148-1-1-0
136944|data|Elf32_Dyn <5, <0x104D8>>; DT_STRTAB|5-0-0-0-216-4-1-0
136952|data|Elf32_Dyn <6, <0x10288>>; DT_SYMTAB|6-0-0-0-136-2-1-0
136960|data|Elf32_Dyn <0xA, <0x223>>; DT_STRSZ|10-0-0-0-35-2-0-0
136968|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
136976|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
136984|data|Elf32_Dyn <3, <0x21798>>; DT_PLTGOT|3-0-0-0-152-23-2-0
136992|data|Elf32_Dyn <2, <0xB0>>; DT_PLTRELSZ|2-0-0-0-176-0-0-0
137000|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
137008|data|Elf32_Dyn <0x17, <0x107A0>>; DT_JMPREL|23-0-0-0-160-7-1-0
137016|data|Elf32_Dyn <0x11, <0x10788>>; DT_REL|17-0-0-0-136-7-1-0
137024|data|Elf32_Dyn <0x12, <0x18>>; DT_RELSZ|18-0-0-0-24-0-0-0
137032|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
137040|data|Elf32_Dyn <0x6FFFFFFE, <0x10748>>; DT_VERNEED|254-255-255-111-72-7-1-0
137048|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
137056|data|Elf32_Dyn <0x6FFFFFF0, <0x106FC>>; DT_VERSYM|240-255-255-111-252-6-1-0
137064|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
137112|data|DCD stru_21650|80-22-2-0
137116|data|DCD 0|0-0-0-0
137120|data|DCD 0|0-0-0-0
137124|data|DCD __imp__Z8b_mallocPKcij; b_malloc(char const*,int,uint)|104-24-2-0
137128|data|DCD __imp__Z5bfreePv; bfree(void *)|96-24-2-0
137132|data|DCD __imp_dlerror|64-24-2-0
137136|data|DCD __imp_strtol|52-24-2-0
137140|data|DCD __imp_exit|48-24-2-0
137144|data|DCD __imp_printf|100-24-2-0
137148|data|DCD __imp_dlclose|76-24-2-0
137152|data|DCD __imp_puts|92-24-2-0
137156|data|DCD __imp_realpath|56-24-2-0
137160|data|DCD putchar|68-24-2-0
137164|data|DCD __imp_memset|28-24-2-0
137168|data|DCD __imp_abort|36-24-2-0
137172|data|DCD __imp_dlopen|72-24-2-0
137176|data|DCD __imp_strcpy|24-24-2-0
137180|data|DCD __imp_getopt|40-24-2-0
137184|data|DCD __imp_strlen|80-24-2-0
137188|data|DCD __imp__Z7bstrcmpPKcS0_; bstrcmp(char const*,char const*)|88-24-2-0
137192|data|DCD __imp_getcwd|32-24-2-0
137196|data|DCD __imp_gettext|84-24-2-0
137200|data|DCD __imp___libc_start_main|60-24-2-0
137204|data|DCD __imp_dlsym|44-24-2-0
137208|data|DCD __imp___gmon_start__|116-24-2-0
137212|data|DCD __imp___gmon_start__|116-24-2-0
137224|data|% 4; Alternative name is '__bss_start__'|255-255-255-255
137228|data|% 4; Copy of shared data|255-255-255-255
137232|data|% 1|255
