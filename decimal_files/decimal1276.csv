address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|225-18-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x21D0; SHT file offset|208-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1CBC; File offset|188-28-0-0
60|data|DCD unk_1CBC; Virtual address|188-28-0-0
64|data|DCD 0x1CBC; Physical address|188-28-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1CC8; Size in file image|200-28-0-0
168|data|DCD 0x1CC8; Size in memory image|200-28-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E48; File offset|72-30-0-0
188|data|DCD off_11E48; Virtual address|72-30-1-0
192|data|DCD 0x11E48; Physical address|72-30-1-0
196|data|DCD 0x260; Size in file image|96-2-0-0
200|data|DCD 0x264; Size in memory image|100-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E54; File offset|84-30-0-0
220|data|DCD stru_11E54; Virtual address|84-30-1-0
224|data|DCD 0x11E54; Physical address|84-30-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E48; File offset|72-30-0-0
316|data|DCD off_11E48; Virtual address|72-30-1-0
320|data|DCD 0x11E48; Physical address|72-30-1-0
324|data|DCD 0x1B8; Size in file image|184-1-0-0
328|data|DCD 0x1B8; Size in memory image|184-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x67, 0xC6, 0xCB, 0x5A, 0x9A, 0xCC, 0x4A, 0xD7, 0x76; Desc|103-198-203-90-154-204-74-215-118-242-147-35-64-83-84-235-248-250-185-201
436|data|DCD 3|3-0-0-0
440|data|DCD 0x24|36-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x24, 0x28, 0x2D|36-0-0-0-40-0-0-0-45-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_524 - byte_524, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_524 - byte_524, dword_11E50, 0, 3, 0, 0x14>|0-0-0-0-80-30-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_524, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|174-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aSmpInitiatorCl - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_initiator_close"|235-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_524, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|19-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aDstrhex - byte_524, dword_0, 0, 0x12, 0, 0>; "dStrHex"|208-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aStackChkGuard - byte_524, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|227-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
660|data|Elf32_Sym <aSmpGetFuncDefR - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_func_def_resp_len"|108-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aOptind - byte_524, dword_0, 0, 0x11, 0, 0>; "optind"|21-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aStackChkFail - byte_524, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|52-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aSmpIsNaa5 - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_is_naa5"|255-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStderr - byte_524, dword_0, 0, 0x11, 0, 0>; "stderr"|141-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aFwrite - byte_524, dword_0, 0, 0x12, 0, 0>; "fwrite"|160-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aGetenv - byte_524, dword_0, 0, 0x12, 0, 0>; "getenv"|127-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aLibcStartMain - byte_524, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|189-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aGmonStart - byte_524, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|47-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
804|data|Elf32_Sym <aGetoptLong - byte_524, dword_0, 0, 0x12, 0, 0>; "getopt_long"|148-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aStrchr - byte_524, dword_0, 0, 0x12, 0, 0>; "strchr"|167-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aSmpSendReq - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_send_req"|181-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aErrnoLocation - byte_524, dword_0, 0, 0x12, 0, 0>; "__errno_location"|90-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aIsoc99Sscanf - byte_524, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|28-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aMemset - byte_524, dword_0, 0, 0x12, 0, 0>; "memset"|83-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aPutchar - byte_524, dword_0, 0, 0x12, 0, 0>; "putchar"|69-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aStrncpy - byte_524, dword_0, 0, 0x12, 0, 0>; "strncpy"|44-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aFprintfChk - byte_524, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|107-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aFputc - byte_524, dword_0, 0, 0x12, 0, 0>; "fputc"|121-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aSafeStrerror - byte_524, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|194-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aJvRegisterclas - byte_524, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|62-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
996|data|Elf32_Sym <aSmpGetLlnum - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_llnum"|146-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aItmRegistertmc - byte_524, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|82-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1028|data|Elf32_Sym <aSmpGetFuncResS - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_func_res_str"|160-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aSmpGetNum - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_get_num"|134-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aSmpInitiatorOp - byte_524, dword_0, 0, 0x12, 0, 0>; "smp_initiator_open"|216-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aOptarg - byte_524, dword_0, 0, 0x11, 0, 0>; "optarg"|134-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1092|data|Elf32_Sym <aAbort - byte_524, dword_0, 0, 0x12, 0, 0>; "abort"|77-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aBssEnd+1 - byte_524, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|36-2-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1124|data|Elf32_Sym <aEdata - byte_524, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|2-2-0-0-168-32-1-0-0-0-0-0-16-0-23-0
1140|data|Elf32_Sym <aDataStart - byte_524, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|245-1-0-0-0-32-1-0-0-0-0-0-16-0-23-0
1156|data|Elf32_Sym <aEnd_0 - byte_524, _end, 0, 0x10, 0, 0x18>; "_end"|55-2-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1172|data|Elf32_Sym <aBssEnd - byte_524, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|35-2-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1188|data|Elf32_Sym <aLibcCsuInit - byte_524, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|76-2-0-0-29-20-0-0-64-0-0-0-18-0-13-0
1204|data|Elf32_Sym <aBssStart - byte_524, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|9-2-0-0-168-32-1-0-0-0-0-0-16-0-24-0
1220|data|Elf32_Sym <aLibcStartMain+0xD - byte_524, main+1, 0x7B0, 0x12, 0, 0xD>; "main"|202-1-0-0-49-11-0-0-176-7-0-0-18-0-13-0
1236|data|Elf32_Sym <aLibcCsuInit+0xA - byte_524, .init_proc, 0, 0x12, 0, 0xB>; "_init"|86-2-0-0-216-9-0-0-0-0-0-0-18-0-11-0
1252|data|Elf32_Sym <aLibcCsuFini - byte_524, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|60-2-0-0-93-20-0-0-2-0-0-0-18-0-13-0
1268|data|Elf32_Sym <aBssStart_0 - byte_524, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|21-2-0-0-168-32-1-0-0-0-0-0-16-0-24-0
1284|data|Elf32_Sym <aLibcCsuFini+0xA - byte_524, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|70-2-0-0-96-20-0-0-0-0-0-0-18-0-14-0
1300|data|Elf32_Sym <aEnd - byte_524, _end, 0, 0x10, 0, 0x18>; "__end__"|47-2-0-0-172-32-1-0-0-0-0-0-16-0-24-0
1316|data|DCB 0|0
1317|data|DCB "libsmputils1.so.1",0|108-105-98-115-109-112-117-116-105-108-115-49-46-115-111-46-49-0
1335|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1363|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1378|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1398|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1424|data|DCB "smp_get_func_def_resp_len",0|115-109-112-95-103-101-116-95-102-117-110-99-95-100-101-102-95-114-101-115-112-95-108-101-110-0
1450|data|DCB "smp_get_num",0|115-109-112-95-103-101-116-95-110-117-109-0
1462|data|DCB "smp_get_llnum",0|115-109-112-95-103-101-116-95-108-108-110-117-109-0
1476|data|DCB "smp_get_func_res_str",0|115-109-112-95-103-101-116-95-102-117-110-99-95-114-101-115-95-115-116-114-0
1497|data|DCB "smp_send_req",0|115-109-112-95-115-101-110-100-95-114-101-113-0
1510|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1524|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1532|data|DCB "smp_initiator_open",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-111-112-101-110-0
1551|data|DCB "smp_initiator_close",0|115-109-112-95-105-110-105-116-105-97-116-111-114-95-99-108-111-115-101-0
1571|data|DCB "smp_is_naa5",0|115-109-112-95-105-115-95-110-97-97-53-0
1583|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1593|data|DCB "optind",0|111-112-116-105-110-100-0
1600|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1616|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1624|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1641|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1649|data|DCB "abort",0|97-98-111-114-116-0
1655|data|DCB "memset",0|109-101-109-115-101-116-0
1662|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
1679|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1693|data|DCB "fputc",0|102-112-117-116-99-0
1699|data|DCB "getenv",0|103-101-116-101-110-118-0
1706|data|DCB "optarg",0|111-112-116-97-114-103-0
1713|data|DCB "stderr",0|115-116-100-101-114-114-0
1720|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1732|data|DCB "fwrite",0|102-119-114-105-116-101-0
1739|data|DCB "strchr",0|115-116-114-99-104-114-0
1746|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1761|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1779|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1799|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1817|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1830|data|DCB "_edata",0|95-101-100-97-116-97-0
1837|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1849|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1863|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1875|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1883|data|DCB "_end",0|95-101-110-100-0
1888|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1904|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1920|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1930|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
1940|data|DCW 0|0-0
1942|data|DCW 0|0-0
1944|data|DCW 0|0-0
1946|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1948|data|DCW 0; local  symbol: smp_initiator_close|0-0
1950|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1952|data|DCW 0; local  symbol: dStrHex|0-0
1954|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1956|data|DCW 0; local  symbol: smp_get_func_def_resp_len|0-0
1958|data|DCW 2; optind@@GLIBC_2.4|2-0
1960|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1962|data|DCW 0; local  symbol: smp_is_naa5|0-0
1964|data|DCW 2; stderr@@GLIBC_2.4|2-0
1966|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1968|data|DCW 2; getenv@@GLIBC_2.4|2-0
1970|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1972|data|DCW 0; local  symbol: __gmon_start__|0-0
1974|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1976|data|DCW 2; strchr@@GLIBC_2.4|2-0
1978|data|DCW 0; local  symbol: smp_send_req|0-0
1980|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
1982|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
1984|data|DCW 2; memset@@GLIBC_2.4|2-0
1986|data|DCW 2; putchar@@GLIBC_2.4|2-0
1988|data|DCW 2; strncpy@@GLIBC_2.4|2-0
1990|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1992|data|DCW 2; fputc@@GLIBC_2.4|2-0
1994|data|DCW 0; local  symbol: safe_strerror|0-0
1996|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1998|data|DCW 0; local  symbol: smp_get_llnum|0-0
2000|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2002|data|DCW 0; local  symbol: smp_get_func_res_str|0-0
2004|data|DCW 0; local  symbol: smp_get_num|0-0
2006|data|DCW 0; local  symbol: smp_initiator_open|0-0
2008|data|DCW 2; optarg@@GLIBC_2.4|2-0
2010|data|DCW 2; abort@@GLIBC_2.4|2-0
2012|data|DCW 1; global symbol: _bss_end__|1-0
2014|data|DCW 1; global symbol: _edata|1-0
2016|data|DCW 1; global symbol: __data_start|1-0
2018|data|DCW 1; global symbol: _end|1-0
2020|data|DCW 1; global symbol: __bss_end__|1-0
2022|data|DCW 1; global symbol: __libc_csu_init|1-0
2024|data|DCW 1; global symbol: __bss_start|1-0
2026|data|DCW 1; global symbol: main|1-0
2028|data|DCW 1; global symbol: _init|1-0
2030|data|DCW 1; global symbol: __libc_csu_fini|1-0
2032|data|DCW 1; global symbol: __bss_start__|1-0
2034|data|DCW 1; global symbol: _fini|1-0
2036|data|DCW 1; global symbol: __end__|1-0
2038|data|DCW 0|0-0
2040|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_524, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-207-1-0-0-16-0-0-0-32-0-0-0
2056|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_524, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-92-2-0-0-0-0-0-0
2072|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_524, 0x10, 0>; "libc.so.6"|1-0-2-0-11-1-0-0-16-0-0-0-0-0-0-0
2088|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_524, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-102-2-0-0-16-0-0-0
2104|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_524, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-92-2-0-0-0-0-0-0
2120|data|Elf32_Rel <0x11E48, 0x17>; R_ARM_RELATIVE|72-30-1-0-23-0-0-0
2128|data|Elf32_Rel <0x11E4C, 0x17>; R_ARM_RELATIVE|76-30-1-0-23-0-0-0
2136|data|Elf32_Rel <0x11FD0, 0x17>; R_ARM_RELATIVE|208-31-1-0-23-0-0-0
2144|data|Elf32_Rel <0x11FEC, 0x17>; R_ARM_RELATIVE|236-31-1-0-23-0-0-0
2152|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
2160|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
2168|data|Elf32_Rel <0x12008, 0x17>; R_ARM_RELATIVE|8-32-1-0-23-0-0-0
2176|data|Elf32_Rel <0x12018, 0x17>; R_ARM_RELATIVE|24-32-1-0-23-0-0-0
2184|data|Elf32_Rel <0x12028, 0x17>; R_ARM_RELATIVE|40-32-1-0-23-0-0-0
2192|data|Elf32_Rel <0x12038, 0x17>; R_ARM_RELATIVE|56-32-1-0-23-0-0-0
2200|data|Elf32_Rel <0x12048, 0x17>; R_ARM_RELATIVE|72-32-1-0-23-0-0-0
2208|data|Elf32_Rel <0x12058, 0x17>; R_ARM_RELATIVE|88-32-1-0-23-0-0-0
2216|data|Elf32_Rel <0x12068, 0x17>; R_ARM_RELATIVE|104-32-1-0-23-0-0-0
2224|data|Elf32_Rel <0x12078, 0x17>; R_ARM_RELATIVE|120-32-1-0-23-0-0-0
2232|data|Elf32_Rel <0x12088, 0x17>; R_ARM_RELATIVE|136-32-1-0-23-0-0-0
2240|data|Elf32_Rel <0x11FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-31-1-0-21-3-0-0
2248|data|Elf32_Rel <0x11FD8, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-31-1-0-21-5-0-0
2256|data|Elf32_Rel <0x11FDC, 0x715>; R_ARM_GLOB_DAT __stack_chk_guard|220-31-1-0-21-7-0-0
2264|data|Elf32_Rel <0x11FE0, 0x915>; R_ARM_GLOB_DAT optind|224-31-1-0-21-9-0-0
2272|data|Elf32_Rel <0x11FE4, 0xC15>; R_ARM_GLOB_DAT stderr|228-31-1-0-21-12-0-0
2280|data|Elf32_Rel <0x11FE8, 0x1015>; R_ARM_GLOB_DAT __gmon_start__|232-31-1-0-21-16-0-0
2288|data|Elf32_Rel <0x11FF4, 0x1C15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-31-1-0-21-28-0-0
2296|data|Elf32_Rel <0x11FF8, 0x1E15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-31-1-0-21-30-0-0
2304|data|Elf32_Rel <0x11FFC, 0x2215>; R_ARM_GLOB_DAT optarg|252-31-1-0-21-34-0-0
2312|data|Elf32_Rel <0x11F68, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|104-31-1-0-22-3-0-0
2320|data|Elf32_Rel <0x11F6C, 0x416>; R_ARM_JUMP_SLOT smp_initiator_close|108-31-1-0-22-4-0-0
2328|data|Elf32_Rel <0x11F70, 0x616>; R_ARM_JUMP_SLOT dStrHex|112-31-1-0-22-6-0-0
2336|data|Elf32_Rel <0x11F74, 0x816>; R_ARM_JUMP_SLOT smp_get_func_def_resp_len|116-31-1-0-22-8-0-0
2344|data|Elf32_Rel <0x11F78, 0xA16>; R_ARM_JUMP_SLOT __stack_chk_fail|120-31-1-0-22-10-0-0
2352|data|Elf32_Rel <0x11F7C, 0xB16>; R_ARM_JUMP_SLOT smp_is_naa5|124-31-1-0-22-11-0-0
2360|data|Elf32_Rel <0x11F80, 0xD16>; R_ARM_JUMP_SLOT fwrite|128-31-1-0-22-13-0-0
2368|data|Elf32_Rel <0x11F84, 0xE16>; R_ARM_JUMP_SLOT getenv|132-31-1-0-22-14-0-0
2376|data|Elf32_Rel <0x11F88, 0xF16>; R_ARM_JUMP_SLOT __libc_start_main|136-31-1-0-22-15-0-0
2384|data|Elf32_Rel <0x11F8C, 0x1016>; R_ARM_JUMP_SLOT __gmon_start__|140-31-1-0-22-16-0-0
2392|data|Elf32_Rel <0x11F90, 0x1116>; R_ARM_JUMP_SLOT getopt_long|144-31-1-0-22-17-0-0
2400|data|Elf32_Rel <0x11F94, 0x1216>; R_ARM_JUMP_SLOT strchr|148-31-1-0-22-18-0-0
2408|data|Elf32_Rel <0x11F98, 0x1316>; R_ARM_JUMP_SLOT smp_send_req|152-31-1-0-22-19-0-0
2416|data|Elf32_Rel <0x11F9C, 0x1416>; R_ARM_JUMP_SLOT __errno_location|156-31-1-0-22-20-0-0
2424|data|Elf32_Rel <0x11FA0, 0x1516>; R_ARM_JUMP_SLOT __isoc99_sscanf|160-31-1-0-22-21-0-0
2432|data|Elf32_Rel <0x11FA4, 0x1616>; R_ARM_JUMP_SLOT memset|164-31-1-0-22-22-0-0
2440|data|Elf32_Rel <0x11FA8, 0x1716>; R_ARM_JUMP_SLOT putchar|168-31-1-0-22-23-0-0
2448|data|Elf32_Rel <0x11FAC, 0x1816>; R_ARM_JUMP_SLOT strncpy|172-31-1-0-22-24-0-0
2456|data|Elf32_Rel <0x11FB0, 0x1916>; R_ARM_JUMP_SLOT __fprintf_chk|176-31-1-0-22-25-0-0
2464|data|Elf32_Rel <0x11FB4, 0x1A16>; R_ARM_JUMP_SLOT fputc|180-31-1-0-22-26-0-0
2472|data|Elf32_Rel <0x11FB8, 0x1B16>; R_ARM_JUMP_SLOT safe_strerror|184-31-1-0-22-27-0-0
2480|data|Elf32_Rel <0x11FBC, 0x1D16>; R_ARM_JUMP_SLOT smp_get_llnum|188-31-1-0-22-29-0-0
2488|data|Elf32_Rel <0x11FC0, 0x1F16>; R_ARM_JUMP_SLOT smp_get_func_res_str|192-31-1-0-22-31-0-0
2496|data|Elf32_Rel <0x11FC4, 0x2016>; R_ARM_JUMP_SLOT smp_get_num|196-31-1-0-22-32-0-0
2504|data|Elf32_Rel <0x11FC8, 0x2116>; R_ARM_JUMP_SLOT smp_initiator_open|200-31-1-0-22-33-0-0
2512|data|Elf32_Rel <0x11FCC, 0x2316>; R_ARM_JUMP_SLOT abort|204-31-1-0-22-35-0-0
2520|code|PUSH            {R3,LR}; _init|8-64-45-233
2524|code|BL              sub_1328|81-2-0-235
2528|code|POP             {R3,PC}|8-128-189-232
2532|code|PUSH            {LR}|4-224-45-229
2536|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x9F4)|4-224-159-229
2540|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2544|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2548|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9F4|104-21-1-0
2552|code|ADR             R12, 0xA00|0-198-143-226
2556|code|ADD             R12, R12, #0x11000|17-202-140-226
2560|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x11A00)]!; __imp___cxa_finalize|104-245-188-229
2564|code|ADR             R12, 0xA0C|0-198-143-226
2568|code|ADD             R12, R12, #0x11000|17-202-140-226
2572|code|LDR             PC, [R12,#(smp_initiator_close_ptr - 0x11A0C)]!; __imp_smp_initiator_close|96-245-188-229
2576|code|ADR             R12, 0xA18|0-198-143-226
2580|code|ADD             R12, R12, #0x11000|17-202-140-226
2584|code|LDR             PC, [R12,#(dStrHex_ptr - 0x11A18)]!; __imp_dStrHex|88-245-188-229
2588|code|ADR             R12, 0xA24|0-198-143-226
2592|code|ADD             R12, R12, #0x11000|17-202-140-226
2596|code|LDR             PC, [R12,#(smp_get_func_def_resp_len_ptr - 0x11A24)]!; __imp_smp_get_func_def_resp_len|80-245-188-229
2600|code|ADR             R12, 0xA30|0-198-143-226
2604|code|ADD             R12, R12, #0x11000|17-202-140-226
2608|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x11A30)]!; __imp___stack_chk_fail|72-245-188-229
2612|code|ADR             R12, 0xA3C|0-198-143-226
2616|code|ADD             R12, R12, #0x11000|17-202-140-226
2620|code|LDR             PC, [R12,#(smp_is_naa5_ptr - 0x11A3C)]!; __imp_smp_is_naa5|64-245-188-229
2624|code|ADR             R12, 0xA48|0-198-143-226
2628|code|ADD             R12, R12, #0x11000|17-202-140-226
2632|code|LDR             PC, [R12,#(fwrite_ptr - 0x11A48)]!; __imp_fwrite|56-245-188-229
2636|code|ADR             R12, 0xA54|0-198-143-226
2640|code|ADD             R12, R12, #0x11000|17-202-140-226
2644|code|LDR             PC, [R12,#(getenv_ptr - 0x11A54)]!; __imp_getenv|48-245-188-229
2648|code|ADR             R12, 0xA60|0-198-143-226
2652|code|ADD             R12, R12, #0x11000|17-202-140-226
2656|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x11A60)]!; __imp___libc_start_main|40-245-188-229
2660|code|ADR             R12, 0xA6C|0-198-143-226
2664|code|ADD             R12, R12, #0x11000|17-202-140-226
2668|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x11A6C)]!; __imp___gmon_start__|32-245-188-229
2672|code|ADR             R12, 0xA78|0-198-143-226
2676|code|ADD             R12, R12, #0x11000|17-202-140-226
2680|code|LDR             PC, [R12,#(getopt_long_ptr - 0x11A78)]!; __imp_getopt_long|24-245-188-229
2684|code|ADR             R12, 0xA84|0-198-143-226
2688|code|ADD             R12, R12, #0x11000|17-202-140-226
2692|code|LDR             PC, [R12,#(strchr_ptr - 0x11A84)]!; __imp_strchr|16-245-188-229
2696|code|ADR             R12, 0xA90|0-198-143-226
2700|code|ADD             R12, R12, #0x11000|17-202-140-226
2704|code|LDR             PC, [R12,#(smp_send_req_ptr - 0x11A90)]!; __imp_smp_send_req|8-245-188-229
2708|code|ADR             R12, 0xA9C|0-198-143-226
2712|code|ADD             R12, R12, #0x11000|17-202-140-226
2716|code|LDR             PC, [R12,#(__errno_location_ptr - 0x11A9C)]!; __imp___errno_location|0-245-188-229
2720|code|ADR             R12, 0xAA8|0-198-143-226
2724|code|ADD             R12, R12, #0x11000|17-202-140-226
2728|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x11AA8)]!; __imp___isoc99_sscanf|248-244-188-229
2732|code|ADR             R12, 0xAB4|0-198-143-226
2736|code|ADD             R12, R12, #0x11000|17-202-140-226
2740|code|LDR             PC, [R12,#(memset_ptr - 0x11AB4)]!; __imp_memset|240-244-188-229
2744|code|ADR             R12, 0xAC0|0-198-143-226
2748|code|ADD             R12, R12, #0x11000|17-202-140-226
2752|code|LDR             PC, [R12,#(putchar_ptr - 0x11AC0)]!; __imp_putchar|232-244-188-229
2756|code|ADR             R12, 0xACC|0-198-143-226
2760|code|ADD             R12, R12, #0x11000|17-202-140-226
2764|code|LDR             PC, [R12,#(strncpy_ptr - 0x11ACC)]!; __imp_strncpy|224-244-188-229
2768|code|ADR             R12, 0xAD8|0-198-143-226
2772|code|ADD             R12, R12, #0x11000|17-202-140-226
2776|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x11AD8)]!; __imp___fprintf_chk|216-244-188-229
2780|code|ADR             R12, 0xAE4|0-198-143-226
2784|code|ADD             R12, R12, #0x11000|17-202-140-226
2788|code|LDR             PC, [R12,#(fputc_ptr - 0x11AE4)]!; __imp_fputc|208-244-188-229
2792|code|ADR             R12, 0xAF0|0-198-143-226
2796|code|ADD             R12, R12, #0x11000|17-202-140-226
2800|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x11AF0)]!; __imp_safe_strerror|200-244-188-229
2804|code|ADR             R12, 0xAFC|0-198-143-226
2808|code|ADD             R12, R12, #0x11000|17-202-140-226
2812|code|LDR             PC, [R12,#(smp_get_llnum_ptr - 0x11AFC)]!; __imp_smp_get_llnum|192-244-188-229
2816|code|ADR             R12, 0xB08|0-198-143-226
2820|code|ADD             R12, R12, #0x11000|17-202-140-226
2824|code|LDR             PC, [R12,#(smp_get_func_res_str_ptr - 0x11B08)]!; __imp_smp_get_func_res_str|184-244-188-229
2828|code|ADR             R12, 0xB14|0-198-143-226
2832|code|ADD             R12, R12, #0x11000|17-202-140-226
2836|code|LDR             PC, [R12,#(smp_get_num_ptr - 0x11B14)]!; __imp_smp_get_num|176-244-188-229
2840|code|ADR             R12, 0xB20|0-198-143-226
2844|code|ADD             R12, R12, #0x11000|17-202-140-226
2848|code|LDR             PC, [R12,#(smp_initiator_open_ptr - 0x11B20)]!; __imp_smp_initiator_open|168-244-188-229
2852|code|ADR             R12, 0xB2C|0-198-143-226
2856|code|ADD             R12, R12, #0x11000|17-202-140-226
2860|code|LDR             PC, [R12,#(abort_ptr - 0x11B2C)]!; __imp_abort|160-244-188-229
2864|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2868|code|SUBW            SP, SP, #0x594|173-242-148-93
2872|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xB48)|223-248-244-102
2876|code|ADD             R4, SP, #0x5B8+var_578|16-172
2878|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x11F5C)|223-248-244-54
2882|code|MOV             R8, R0|128-70
2884|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
2886|code|LDR.W           R2, =(dword_146C - 0xB52)|223-248-240-38
2890|code|STR             R4, [SP,#0x5B8+var_580]|14-148
2892|code|ADD             R0, SP, #0x5B8+var_22C|227-168
2894|code|ADD             R2, PC; dword_146C|122-68
2896|code|STR             R0, [SP,#0x5B8+s]|5-144
2898|code|MOV             R9, R1|137-70
2900|code|ADD             R1, SP, #0x5B8+var_438|96-169
2902|code|STR             R1, [SP,#0x5B8+var_57C]|15-145
2904|code|MOVS            R7, #0|0-39
2906|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
2908|code|MOV             R12, R1|140-70
2910|code|LDR             R0, [R2]|16-104
2912|code|MOV.W           R10, #0|79-240-0-10
2916|code|LDR             R1, [R2,#(dword_1470 - 0x146C)]|81-104
2918|code|MOV.W           R11, #0|79-240-0-11
2922|code|LDR             R2, [R2,#(dword_1474 - 0x146C)]|146-104
2924|code|MOV             R5, R7|61-70
2926|code|LDR.W           LR, [R3]|211-248-0-224
2930|code|STRD.W          R10, R11, [SP,#0x5B8+var_590]|205-233-10-171
2934|code|STM.W           R12!, {R0-R2}|172-232-7-0
2938|code|MOV             R1, R7; c|57-70
2940|code|LDR             R0, [SP,#0x5B8+s]; s|5-152
2942|code|MOV.W           R2, #0x200; n|79-244-0-114
2946|code|LDR.W           R11, =(aAeHhiRsVv - 0xB94); "aE:hHI:rs:vV"|223-248-184-182
2950|code|LDR.W           R10, =(off_12008 - 0xB98); "activate"|223-248-184-166
2954|code|STR             R3, [SP,#0x5B8+var_59C]|7-147
2956|code|ADD             R3, SP, #0x5B8+var_574|17-171
2958|code|STR             R7, [SP,#0x5B8+var_578]|16-151
2960|code|ADD             R11, PC; "aE:hHI:rs:vV"|251-68
2962|code|STR             R3, [SP,#0x5B8+var_5A0]|6-147
2964|code|ADD             R10, PC; off_12008|250-68
2966|code|STR             R7, [SP,#0x5B8+var_594]|9-151
2968|code|STR.W           LR, [SP,#0x5B8+var_2C]|205-248-140-229
2972|code|BLX             memset|255-247-134-239
2976|code|LDR             R4, [SP,#0x5B8+var_5A0]|6-156
2978|code|STR             R7, [SP,#0x5B8+var_598]|8-151
2980|code|STR             R7, [SP,#0x5B8+var_584]|13-151
2982|code|STR             R7, [SP,#0x5B8+var_588]|12-151
2984|code|STR             R4, [SP,#0x5B8+longind]; longind|0-148
2986|code|MOV             R2, R11; shortopts|90-70
2988|code|MOV             R0, R8; argc|64-70
2990|code|MOV             R1, R9; argv|73-70
2992|code|MOV             R3, R10; longopts|83-70
2994|code|STR             R7, [R4]|39-96
2996|code|BLX             getopt_long|255-247-92-239
3000|code|ADDS            R2, R0, #1|66-28
3002|code|BEQ.W           loc_D08|0-240-165-128
3006|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
3010|code|CMP             R3, #0x37|55-43
3012|code|BHI.W           def_BC8; jumptable 00000BC8 default case, cases 64-68,70,71,74-85,87-96,98-103,105-113,116,117|0-242-138-128
3016|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3020|data|DCB 0x65; jump table for switch statement|101
3021|data|DCB 0x88|136
3022|data|DCB 0x88|136
3023|data|DCB 0x88|136
3024|data|DCB 0x88|136
3025|data|DCB 0x88|136
3026|data|DCB 0x4E|78
3027|data|DCB 0x88|136
3028|data|DCB 0x88|136
3029|data|DCB 0x4A|74
3030|data|DCB 0x38|56
3031|data|DCB 0x88|136
3032|data|DCB 0x88|136
3033|data|DCB 0x88|136
3034|data|DCB 0x88|136
3035|data|DCB 0x88|136
3036|data|DCB 0x88|136
3037|data|DCB 0x88|136
3038|data|DCB 0x88|136
3039|data|DCB 0x88|136
3040|data|DCB 0x88|136
3041|data|DCB 0x88|136
3042|data|DCB 0x88|136
3043|data|DCB 0x1F|31
3044|data|DCB 0x88|136
3045|data|DCB 0x88|136
3046|data|DCB 0x88|136
3047|data|DCB 0x88|136
3048|data|DCB 0x88|136
3049|data|DCB 0x88|136
3050|data|DCB 0x88|136
3051|data|DCB 0x88|136
3052|data|DCB 0x88|136
3053|data|DCB 0x88|136
3054|data|DCB 0x1C|28
3055|data|DCB 0x88|136
3056|data|DCB 0x88|136
3057|data|DCB 0x88|136
3058|data|DCB 0x88|136
3059|data|DCB 0x88|136
3060|data|DCB 0x88|136
3061|data|DCB 0x65|101
3062|data|DCB 0x88|136
3063|data|DCB 0x88|136
3064|data|DCB 0x88|136
3065|data|DCB 0x88|136
3066|data|DCB 0x88|136
3067|data|DCB 0x88|136
3068|data|DCB 0x88|136
3069|data|DCB 0x88|136
3070|data|DCB 0x88|136
3071|data|DCB 0x84|132
3072|data|DCB 0x75|117
3073|data|DCB 0x88|136
3074|data|DCB 0x88|136
3075|data|DCB 0x73|115
3076|code|MOVS            R3, #1; jumptable 00000BC8 case 97|1-35
3078|code|STR             R3, [SP,#0x5B8+var_588]|12-147
3080|code|B               loc_BA8|206-231
3082|code|LDR.W           R0, =(stderr_ptr - 0x11F5C); jumptable 00000BC8 case 86|223-248-56-6
3086|code|MOVS            R1, #1|1-33
3088|code|LDR.W           R2, =(aVersionS - 0xC1E); "version: %s\n"|223-248-52-38
3092|code|LDR.W           R3, =(a10420130604 - 0xC20); "1.04 20130604"|223-248-52-54
3096|code|LDR             R0, [R6,R0]; stderr|48-88
3098|code|ADD             R2, PC; "version: %s\n"|122-68
3100|code|ADD             R3, PC; "1.04 20130604"|123-68
3102|code|LDR             R0, [R0]|0-104
3104|code|BLX             __fprintf_chk|255-247-86-239
3108|code|MOVS            R0, #0|0-32
3110|code|LDR             R3, [SP,#0x5B8+var_59C]|7-155
3112|code|LDR.W           R2, [SP,#0x5B8+var_2C]|221-248-140-37
3116|code|LDR             R3, [R3]|27-104
3118|code|CMP             R2, R3|154-66
3120|code|BNE.W           loc_11CE|64-240-205-130
3124|code|ADDW            SP, SP, #0x594|13-242-148-93
3128|code|POP.W           {R4-R11,PC}|189-232-240-143
3132|code|LDR.W           R3, =(optarg_ptr - 0x11F5C); jumptable 00000BC8 case 73|223-248-16-54
3136|code|ADD.W           R12, SP, #0x5B8+dest|13-245-198-124
3140|code|STR.W           R12, [SP,#0x5B8+var_5A0]|205-248-24-192
3144|code|MOV.W           R2, #0x100; n|79-244-128-114
3148|code|MOV             R0, R12; dest|96-70
3150|code|LDR             R3, [R6,R3]; optarg|243-88
3152|code|LDR             R1, [R3]; src|25-104
3154|code|BLX             strncpy|255-247-56-239
3158|code|LDR.W           R12, [SP,#0x5B8+var_5A0]|221-248-24-192
3162|code|STRB.W          R7, [R12,#0xFF]|140-248-255-112
3166|code|B               loc_BA8|163-231
3168|code|LDR             R3, [SP,#0x5B8+var_598]; jumptable 00000BC8 case 72|8-155
3170|code|ADDS            R3, #1|1-51
3172|code|STR             R3, [SP,#0x5B8+var_598]|8-147
3174|code|B               loc_BA8|159-231
3176|code|LDR.W           R3, =(optarg_ptr - 0x11F5C); jumptable 00000BC8 case 69|223-248-228-53
3180|code|LDR             R3, [R6,R3]; optarg|243-88
3182|code|LDR             R0, [R3]|24-104
3184|code|BLX             smp_get_num|255-247-76-239
3188|code|CMP.W           R0, #0x10000|176-245-128-63
3192|code|STR             R0, [SP,#0x5B8+var_584]|13-144
3194|code|BCC             loc_BA8|149-211
3196|code|LDR.W           R3, =(stderr_ptr - 0x11F5C)|223-248-196-53
3200|code|MOVS            R1, #1; size|1-33
3202|code|LDR.W           R0, =(aBadArgumentToE - 0xC8E); "bad argument to '--expected'\n"|223-248-208-5
3206|code|MOVS            R2, #0x1D; n|29-34
3208|code|LDR             R3, [R6,R3]; stderr|243-88
3210|code|ADD             R0, PC; "bad argument to '--expected'\n"|120-68
3212|code|LDR             R3, [R3]; s|27-104
3214|code|BLX             fwrite|255-247-216-238
3218|code|MOVS            R0, #0x5B ; '['|91-32
3220|code|B               loc_C26|199-231
3222|code|LDR.W           R3, =(stderr_ptr - 0x11F5C); jumptable 00000BC8 cases 63,104|223-248-172-53
3226|code|MOVS            R1, #1; size|1-33
3228|code|LDR.W           R0, =(aUsageSmpZoneUn - 0xCAA); "Usage: smp_zone_unlock [--activate] [--"...|223-248-184-5
3232|code|MOVW            R2, #0x41D; n|64-242-29-66
3236|code|LDR             R3, [R6,R3]; stderr|243-88
3238|code|ADD             R0, PC; "Usage: smp_zone_unlock [--activate] [--"...|120-68
3240|code|LDR             R3, [R3]; s|27-104
3242|code|BLX             fwrite|255-247-202-238
3246|code|MOVS            R0, #0|0-32
3248|code|B               loc_C26|185-231
3250|code|ADDS            R5, #1; jumptable 00000BC8 case 118|1-53
3252|code|B               loc_BA8|120-231
3254|code|LDR.W           R3, =(optarg_ptr - 0x11F5C); jumptable 00000BC8 case 115|223-248-152-53
3258|code|LDR             R3, [R6,R3]; optarg|243-88
3260|code|LDR             R0, [R3]|24-104
3262|code|BLX             smp_get_llnum|255-247-26-239
3266|code|ADDS            R3, R1, #1|75-28
3268|code|IT EQ|8-191
3270|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3274|code|BEQ.W           loc_F30|0-240-49-129
3278|code|STRD.W          R0, R1, [SP,#0x5B8+var_590]|205-233-10-1
3282|code|B               loc_BA8|105-231
3284|code|LDR             R3, [SP,#0x5B8+var_594]; jumptable 00000BC8 case 114|9-155
3286|code|ADDS            R3, #1|1-51
3288|code|STR             R3, [SP,#0x5B8+var_594]|9-147
3290|code|B               loc_BA8|101-231
3292|code|LDR.W           R4, =(stderr_ptr - 0x11F5C); jumptable 00000BC8 default case, cases 64-68,70,71,74-85,87-96,98-103,105-113,116,117|223-248-100-69
3296|code|MOV             R3, R0|3-70
3298|code|LDR.W           R2, =(aUnrecognisedSw - 0xCEE); "unrecognised switch code 0x%x ??\n"|223-248-120-37
3302|code|MOVS            R1, #1|1-33
3304|code|LDR             R4, [R6,R4]; stderr|52-89
3306|code|ADD             R2, PC; "unrecognised switch code 0x%x ??\n"|122-68
3308|code|LDR             R0, [R4]|32-104
3310|code|BLX             __fprintf_chk|255-247-240-238
3314|code|LDR.W           R0, =(aUsageSmpZoneUn - 0xCFE); "Usage: smp_zone_unlock [--activate] [--"...|223-248-108-5
3318|code|LDR             R3, [R4]; s|35-104
3320|code|MOVS            R1, #1; size|1-33
3322|code|ADD             R0, PC; "Usage: smp_zone_unlock [--activate] [--"...|120-68
3324|code|MOVW            R2, #0x41D; n|64-242-29-66
3328|code|BLX             fwrite|255-247-158-238
3332|code|MOVS            R0, #0x5B ; '['|91-32
3334|code|B               loc_C26|142-231
3336|code|LDR.W           R3, =(optind_ptr - 0x11F5C)|223-248-88-53
3340|code|STR             R4, [SP,#0x5B8+var_5A0]|6-148
3342|code|LDR.W           R10, [R6,R3]; optind|86-248-3-160
3346|code|LDR.W           R7, [R10]|218-248-0-112
3350|code|CMP             R8, R7|184-69
3352|code|BLE             loc_D86|53-221
3354|code|LDR             R3, [SP,#0x5B8+s]|5-155
3356|code|LDRB.W          R11, [R3]|147-248-0-176
3360|code|CMP.W           R11, #0|187-241-0-15
3364|code|BEQ             loc_D68|32-208
3366|code|LDR.W           R3, =(stderr_ptr - 0x11F5C)|223-248-28-53
3370|code|MOV             R5, R10|85-70
3372|code|LDR.W           R4, =(aUnexpectedExtr - 0xD36); "Unexpected extra argument: %s\n"|223-248-56-69
3376|code|LDR             R7, [R6,R3]; stderr|247-88
3378|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3380|code|B               loc_D4A|9-224
3382|code|LDR.W           R3, [R9,R3,LSL#2]|89-248-35-48
3386|code|MOVS            R1, #1|1-33
3388|code|LDR             R0, [R7]|56-104
3390|code|MOV             R2, R4|34-70
3392|code|BLX             __fprintf_chk|255-247-198-238
3396|code|LDR             R3, [R5]|43-104
3398|code|ADDS            R3, #1|1-51
3400|code|STR             R3, [R5]|43-96
3402|code|LDR.W           R3, [R10]|218-248-0-48
3406|code|CMP             R8, R3|152-69
3408|code|BGT             loc_D36|241-220
3410|code|LDR.W           R0, =(aUsageSmpZoneUn - 0xD62); "Usage: smp_zone_unlock [--activate] [--"...|223-248-24-5
3414|code|MOVS            R1, #1; size|1-33
3416|code|LDR             R3, [R7]; s|59-104
3418|code|MOVW            R2, #0x41D; n|64-242-29-66
3422|code|ADD             R0, PC; "Usage: smp_zone_unlock [--activate] [--"...|120-68
3424|code|BLX             fwrite|255-247-110-238
3428|code|MOVS            R0, #0x5B ; '['|91-32
3430|code|B               loc_C26|94-231
3432|code|LDR             R4, [SP,#0x5B8+s]|5-156
3434|code|MOVW            R2, #0x1FF; n|64-242-255-18
3438|code|LDR.W           R1, [R9,R7,LSL#2]; src|89-248-39-16
3442|code|ADDS            R7, #1|1-55
3444|code|MOV             R0, R4; dest|32-70
3446|code|BLX             strncpy|255-247-166-238
3450|code|CMP             R8, R7|184-69
3452|code|STRB.W          R11, [R4,#0x1FF]|132-248-255-177
3456|code|STR.W           R7, [R10]|202-248-0-112
3460|code|BGT             loc_D26|207-220
3462|code|LDR             R3, [SP,#0x5B8+s]|5-155
3464|code|LDRB            R3, [R3]|27-120
3466|code|CMP             R3, #0|0-43
3468|code|BEQ.W           loc_EF4|0-240-178-128
3472|code|LDR             R0, [SP,#0x5B8+s]; s|5-152
3474|code|MOVS            R1, #0x2C ; ','; c|44-33
3476|code|BLX             strchr|255-247-114-238
3480|code|CBZ             R0, loc_DCA|184-177
3482|code|LDR.W           R1, =(aD - 0xDA6); "%d"|223-248-212-20
3486|code|MOVS            R3, #0|0-35
3488|code|LDR             R2, [SP,#0x5B8+var_580]|14-154
3490|code|ADD             R1, PC; "%d"|121-68
3492|code|STRB.W          R3, [R0],#1|0-248-1-59
3496|code|BLX             __isoc99_sscanf|255-247-122-238
3500|code|CMP             R0, #1|1-40
3502|code|BEQ             loc_DCA|12-208
3504|code|LDR.W           R3, =(stderr_ptr - 0x11F5C)|223-248-144-52
3508|code|MOVS            R1, #1; size|1-33
3510|code|LDR.W           R0, =(aExpectedNumber - 0xDC2); "expected number after separator in SMP_"...|223-248-188-4
3514|code|MOVS            R2, #0x33 ; '3'; n|51-34
3516|code|LDR             R3, [R6,R3]; stderr|243-88
3518|code|ADD             R0, PC; "expected number after separator in SMP_"...|120-68
3520|code|LDR             R3, [R3]; s|27-104
3522|code|BLX             fwrite|255-247-62-238
3526|code|MOVS            R0, #0x5B ; '['|91-32
3528|code|B               loc_C26|45-231
3530|code|LDRD.W          R2, R3, [SP,#0x5B8+var_590]|221-233-10-35
3534|code|ORRS            R3, R2|19-67
3536|code|BEQ.W           loc_F46|0-240-185-128
3540|code|LDRD.W          R0, R1, [SP,#0x5B8+var_590]|221-233-10-1
3544|code|BLX             smp_is_naa5|255-247-44-238
3548|code|CMP             R0, #0|0-40
3550|code|BEQ.W           loc_103C|0-240-45-129
3554|code|ADD.W           R8, SP, #0x5B8+dest|13-245-198-120
3558|code|LDRD.W          R2, R3, [SP,#0x5B8+var_590]|221-233-10-35
3562|code|ADD.W           R10, SP, #0x5B8+var_55C|13-241-92-10
3566|code|STR             R5, [SP,#0x5B8+var_5AC]|3-149
3568|code|LDR             R0, [SP,#0x5B8+s]|5-152
3570|code|STRD.W          R2, R3, [SP,#0x5B8+longind]|205-233-0-35
3574|code|MOV             R2, R8|66-70
3576|code|LDR             R3, [SP,#0x5B8+var_580]|14-155
3578|code|LDR             R1, [R3]|25-104
3580|code|STR.W           R10, [SP,#0x5B8+var_5B0]|205-248-8-160
3584|code|BLX             smp_initiator_open|255-247-138-238
3588|code|CMP             R0, #0|0-40
3590|code|BLT.W           loc_F2C|192-242-145-128
3594|code|LDR             R1, [SP,#0x5B8+var_57C]|15-153
3596|code|LDR             R3, [SP,#0x5B8+var_584]|13-155
3598|code|LDRB.W          R0, [SP,#0x5B8+var_588]|157-248-48-0
3602|code|STRB            R3, [R1,#5]|75-113
3604|code|ASRS            R3, R3, #8|27-18
3606|code|STRB            R0, [R1,#6]|136-113
3608|code|STRB            R3, [R1,#4]|11-113
3610|code|CMP             R5, #0|0-45
3612|code|BNE.W           loc_F98|64-240-188-128
3616|code|LDR             R4, [SP,#0x5B8+var_5A0]|6-156
3618|code|MOV             R1, R5; c|41-70
3620|code|MOVS            R2, #0x18; n|24-34
3622|code|ADD.W           R8, SP, #0x5B8+var_440|13-245-188-120
3626|code|MOVS            R7, #0xC|12-39
3628|code|MOV             R0, R4; s|32-70
3630|code|BLX             memset|255-247-62-238
3634|code|LDR             R3, [SP,#0x5B8+var_57C]|15-155
3636|code|MOV             R0, R10|80-70
3638|code|MOV             R1, R4|33-70
3640|code|MOV             R2, R5|42-70
3642|code|STR             R4, [SP,#0x5B8+var_5A0]|6-148
3644|code|STR             R3, [R4,#4]|99-96
3646|code|MOVS            R3, #8|8-35
3648|code|STR.W           R8, [R4,#0xC]|196-248-12-128
3652|code|STR             R7, [R4]|39-96
3654|code|STR             R3, [R4,#8]|163-96
3656|code|BLX             smp_send_req|255-247-30-238
3660|code|CMP             R0, #0|0-40
3662|code|BNE.W           loc_120E|64-240-222-129
3666|code|LDR             R3, [SP,#0x5B8+var_5A0]|6-155
3668|code|LDR             R3, [R3,#0x14]|91-105
3670|code|CMP             R3, #0|0-43
3672|code|BNE.W           loc_106E|64-240-9-129
3676|code|LDR             R3, [SP,#0x5B8+var_5A0]|6-155
3678|code|LDR             R4, [R3,#0x10]|28-105
3680|code|CMP             R4, #3|3-44
3682|code|BLS.W           loc_109E|64-242-28-129
3686|code|LDRB.W          R9, [R8,#3]|152-248-3-144
3690|code|CMP.W           R9, #0|185-241-0-15
3694|code|BNE             loc_E7A|4-209
3696|code|LDRB.W          R3, [R8,#2]|152-248-2-48
3700|code|CMP             R3, #0|0-43
3702|code|BEQ.W           loc_10EA|0-240-56-129
3706|code|ADD.W           R0, R9, #1|9-241-1-0
3710|code|LSLS            R0, R0, #2|128-0
3712|code|CMP             R0, R4|160-66
3714|code|BLE.W           loc_109A|64-243-10-129
3718|code|CMP             R4, #0|0-44
3720|code|BLT.W           loc_109A|192-242-7-129
3724|code|CBZ             R5, loc_EA2|77-177
3726|code|LDR             R7, =(stderr_ptr - 0x11F5C)|237-79
3728|code|MOVS            R1, #1|1-33
3730|code|LDR             R2, =(aActualResponse - 0xE9C); "actual response length [%d] less than d"...|249-74
3732|code|MOV             R3, R4|35-70
3734|code|LDR             R7, [R6,R7]; stderr|247-89
3736|code|ADD             R2, PC; "actual response length [%d] less than d"...|122-68
3738|code|STR             R0, [SP,#0x5B8+longind]|0-144
3740|code|LDR             R0, [R7]|56-104
3742|code|BLX             __fprintf_chk|255-247-24-238
3746|code|LDR             R3, [SP,#0x5B8+var_598]|8-155
3748|code|LDR             R2, [SP,#0x5B8+var_594]|9-154
3750|code|ORRS            R3, R2|19-67
3752|code|BEQ.W           loc_1080|0-240-234-128
3756|code|LDR             R3, [SP,#0x5B8+var_598]|8-155
3758|code|CMP             R3, #0|0-43
3760|code|BEQ.W           loc_10D8|0-240-18-129
3764|code|MOV             R1, R4; len|33-70
3766|code|MOV             R0, R8; str|64-70
3768|code|MOVS            R2, #1; no_ascii|1-34
3770|code|BLX             dStrHex|255-247-170-237
3774|code|LDRB.W          R3, [R8]|152-248-0-48
3778|code|CMP             R3, #0x41 ; 'A'|65-43
3780|code|BEQ.W           loc_1122|0-240-45-129
3784|code|MOV             R0, R10|80-70
3786|code|BLX             smp_initiator_close|255-247-156-237
3790|code|CMP             R0, #0|0-40
3792|code|BLT.W           loc_10FA|192-242-19-129
3796|code|MOVS            R4, #0x61 ; 'a'|97-36
3798|code|CBZ             R4, loc_EDA|4-177
3800|code|CBNZ            R5, loc_EDE|13-185
3802|code|MOV             R0, R4|32-70
3804|code|B               loc_C26|163-230
3806|code|LDR             R0, =(stderr_ptr - 0x11F5C)|217-72
3808|code|MOVS            R1, #1|1-33
3810|code|LDR             R2, =(aExitStatusDInd - 0xEEC); "Exit status %d indicates error detected"...|230-74
3812|code|MOV             R3, R4|35-70
3814|code|LDR             R0, [R6,R0]; stderr|48-88
3816|code|ADD             R2, PC; "Exit status %d indicates error detected"...|122-68
3818|code|LDR             R0, [R0]|0-104
3820|code|BLX             __fprintf_chk|255-247-240-237
3824|code|MOV             R0, R4|32-70
3826|code|B               loc_C26|152-230
3828|code|LDR             R0, =(aSmpUtilsDevice - 0xEFA); "SMP_UTILS_DEVICE"|226-72
3830|code|ADD             R0, PC; "SMP_UTILS_DEVICE"|120-68
3832|code|BLX             getenv|255-247-168-237
3836|code|CMP             R0, #0|0-40
3838|code|BEQ             loc_F72|56-208
3840|code|MOV             R1, R0; src|1-70
3842|code|MOVW            R2, #0x1FF; n|64-242-255-18
3846|code|LDR             R0, [SP,#0x5B8+s]; dest|5-152
3848|code|BLX             strncpy|255-247-220-237
3852|code|B               loc_D90|64-231
3854|code|LDR             R3, =(stderr_ptr - 0x11F5C)|205-75
3856|code|LDR             R3, [R6,R3]; stderr|243-88
3858|code|LDR             R4, [R3]|28-104
3860|code|BLX             __errno_location|255-247-190-237
3864|code|LDR             R0, [R0]; errnum|0-104
3866|code|BLX             safe_strerror|255-247-230-237
3870|code|LDR             R2, =(aCloseErrorS - 0xF26); "close error: %s\n"|217-74
3872|code|MOVS            R1, #1|1-33
3874|code|ADD             R2, PC; "close error: %s\n"|122-68
3876|code|MOV             R3, R0|3-70
3878|code|MOV             R0, R4|32-70
3880|code|BLX             __fprintf_chk|255-247-210-237
3884|code|MOVS            R0, #0x5C ; '\'|92-32
3886|code|B               loc_C26|122-230
3888|code|LDR             R3, =(stderr_ptr - 0x11F5C)|196-75
3890|code|MOVS            R1, #1; size|1-33
3892|code|LDR             R0, =(aBadArgumentToS - 0xF3E); "bad argument to '--sa'\n"|212-72
3894|code|MOVS            R2, #0x17; n|23-34
3896|code|LDR             R3, [R6,R3]; stderr|243-88
3898|code|ADD             R0, PC; "bad argument to '--sa'\n"|120-68
3900|code|LDR             R3, [R3]; s|27-104
3902|code|BLX             fwrite|255-247-128-237
3906|code|MOVS            R0, #0x5B ; '['|91-32
3908|code|B               loc_C26|111-230
3910|code|LDR             R0, =(aSmpUtilsSasAdd - 0xF4C); "SMP_UTILS_SAS_ADDR"|209-72
3912|code|ADD             R0, PC; "SMP_UTILS_SAS_ADDR"|120-68
3914|code|BLX             getenv|255-247-128-237
3918|code|CMP             R0, #0|0-40
3920|code|BEQ.W           loc_DE2|63-244-71-175
3924|code|BLX             smp_get_llnum|255-247-206-237
3928|code|ADDS            R2, R1, #1|74-28
3930|code|IT EQ|8-191
3932|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3936|code|BEQ.W           loc_11A8|0-240-34-129
3940|code|ORRS.W          R3, R0, R1|80-234-1-3
3944|code|BEQ.W           loc_DE2|63-244-59-175
3948|code|STRD.W          R0, R1, [SP,#0x5B8+var_590]|205-233-10-1
3952|code|B               loc_DD4|48-231
3954|code|LDR             R3, =(stderr_ptr - 0x11F5C)|180-75
3956|code|MOVS            R1, #1; size|1-33
3958|code|LDR             R0, =(aMissingDeviceN - 0xF80); "missing device name on command line\n  "...|198-72
3960|code|MOVS            R2, #0x62 ; 'b'; n|98-34
3962|code|LDR             R4, [R6,R3]; stderr|244-88
3964|code|ADD             R0, PC; "missing device name on command line\n  "...|120-68
3966|code|LDR             R3, [R4]; s|35-104
3968|code|BLX             fwrite|255-247-94-237
3972|code|LDR             R0, =(aUsageSmpZoneUn - 0xF8E); "Usage: smp_zone_unlock [--activate] [--"...|195-72
3974|code|LDR             R3, [R4]; s|35-104
3976|code|MOVS            R1, #1; size|1-33
3978|code|ADD             R0, PC; "Usage: smp_zone_unlock [--activate] [--"...|120-68
3980|code|MOVW            R2, #0x41D; n|64-242-29-66
3984|code|BLX             fwrite|255-247-86-237
3988|code|MOVS            R0, #0x5B ; '['|91-32
3990|code|B               loc_C26|70-230
3992|code|LDR             R3, =(stderr_ptr - 0x11F5C)|170-75
3994|code|MOVS            R1, #1; size|1-33
3996|code|LDR             R0, =(aZoneUnlockRequ - 0xFAE); "    Zone unlock request: "|190-72
3998|code|MOVS            R2, #0x19; n|25-34
4000|code|LDR.W           R8, =(a02x - 0xFB0); "%02x "|223-248-248-130
4004|code|MOV.W           R11, #0|79-240-0-11
4008|code|LDR             R7, [R6,R3]; stderr|247-88
4010|code|ADD             R0, PC; "    Zone unlock request: "|120-68
4012|code|ADD             R8, PC; "%02x "|248-68
4014|code|LDR             R3, [R7]; s|59-104
4016|code|BLX             fwrite|255-247-70-237
4020|code|LDR.W           R9, [SP,#0x5B8+var_5A0]|221-248-24-144
4024|code|LDR             R4, [SP,#0x5B8+var_57C]|15-156
4026|code|STR             R5, [SP,#0x5B8+s]|5-149
4028|code|MOV             R5, R11|93-70
4030|code|MOV             R11, R7|187-70
4032|code|MOVS            R1, #1|1-33
4034|code|LDRB            R3, [R4,R5]|99-93
4036|code|LDR             R0, [R7]|56-104
4038|code|ADD             R5, R1|13-68
4040|code|MOV             R2, R8|66-70
4042|code|BLX             __fprintf_chk|255-247-130-237
4046|code|CMP             R5, #0xC|12-45
4048|code|BNE             loc_FC0|246-209
4050|code|MOV             R4, R9|76-70
4052|code|STR.W           R9, [SP,#0x5B8+var_5A0]|205-248-24-144
4056|code|MOV             R9, R11|217-70
4058|code|MOVS            R0, #0xA; c|10-32
4060|code|LDR.W           R1, [R9]; stream|217-248-0-16
4064|code|MOV             R11, R5|171-70
4066|code|LDR             R5, [SP,#0x5B8+s]|5-157
4068|code|BLX             fputc|255-247-122-237
4072|code|MOV             R0, R4; s|32-70
4074|code|MOVS            R1, #0; c|0-33
4076|code|MOVS            R2, #0x18; n|24-34
4078|code|ADD.W           R8, SP, #0x5B8+var_440|13-245-188-120
4082|code|BLX             memset|255-247-92-237
4086|code|MOV             R1, R4|33-70
4088|code|STR             R4, [SP,#0x5B8+var_5A0]|6-148
4090|code|MOV             R0, R10|80-70
4092|code|STR.W           R11, [R4]|196-248-0-176
4096|code|MOV             R2, R5|42-70
4098|code|LDR             R4, [SP,#0x5B8+var_57C]|15-156
4100|code|MOV.W           LR, #8|79-240-8-14
4104|code|STR.W           R8, [R1,#0xC]|193-248-12-128
4108|code|STR.W           LR, [R1,#8]|193-248-8-224
4112|code|STR             R4, [R1,#4]|76-96
4114|code|BLX             smp_send_req|255-247-58-237
4118|code|MOV             R3, R0|3-70
4120|code|CMP             R0, #0|0-40
4122|code|BEQ.W           loc_E52|63-244-26-175
4126|code|LDR             R2, =(aSmpSendReqFail - 0x102A); "smp_send_req failed, res=%d\n"|160-74
4128|code|MOVS            R1, #1|1-33
4130|code|LDR.W           R0, [R9]|217-248-0-0
4134|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4136|code|BLX             __fprintf_chk|255-247-82-237
4140|code|MOV             R0, R10|80-70
4142|code|BLX             smp_initiator_close|255-247-234-236
4146|code|CMP             R0, #0|0-40
4148|code|BLT.W           loc_11A2|192-242-181-128
4152|code|MOVS            R4, #0x63 ; 'c'|99-36
4154|code|B               loc_ED6|76-231
4156|code|LDR             R3, =(stderr_ptr - 0x11F5C)|129-75
4158|code|ADD.W           R8, SP, #0x5B8+dest|13-245-198-120
4162|code|LDR             R0, =(aSasTargetAddre - 0x104E); "SAS (target) address not in naa-5 forma"...|152-72
4164|code|MOVS            R1, #1; size|1-33
4166|code|MOVS            R2, #0x41 ; 'A'; n|65-34
4168|code|LDR             R7, [R6,R3]; stderr|247-88
4170|code|ADD             R0, PC; "SAS (target) address not in naa-5 forma"...|120-68
4172|code|LDR             R3, [R7]; s|59-104
4174|code|BLX             fwrite|255-247-248-236
4178|code|LDRB.W          R3, [R8]|152-248-0-48
4182|code|CMP             R3, #0|0-43
4184|code|BNE.W           loc_DE6|127-244-197-174
4188|code|LDR             R0, =(aUseInterfaceTo - 0x1068); "    use '--interface=' to override\n"|146-72
4190|code|MOVS            R1, #1; size|1-33
4192|code|LDR             R3, [R7]; s|59-104
4194|code|MOVS            R2, #0x23 ; '#'; n|35-34
4196|code|ADD             R0, PC; "    use '--interface=' to override\n"|120-68
4198|code|BLX             fwrite|255-247-236-236
4202|code|MOVS            R0, #0x5B ; '['|91-32
4204|code|B               loc_C26|219-229
4206|code|LDR             R0, =(stderr_ptr - 0x11F5C)|117-72
4208|code|MOVS            R1, #1|1-33
4210|code|LDR             R2, =(aSmpSendReqTran - 0x107A); "smp_send_req transport_error=%d\n"|142-74
4212|code|LDR             R7, [R6,R0]; stderr|55-88
4214|code|ADD             R2, PC; "smp_send_req transport_error=%d\n"|122-68
4216|code|LDR             R0, [R7]|56-104
4218|code|BLX             __fprintf_chk|255-247-42-237
4222|code|B               loc_102C|213-231
4224|code|LDRB.W          R3, [R8]|152-248-0-48
4228|code|CMP             R3, #0x41 ; 'A'|65-43
4230|code|BEQ             loc_10B2|20-208
4232|code|LDR             R0, =(stderr_ptr - 0x11F5C)|110-72
4234|code|MOVS            R1, #1|1-33
4236|code|LDR             R2, =(aExpectedSmpFra - 0x1094); "expected SMP frame response type, got=0"...|136-74
4238|code|LDR             R7, [R6,R0]; stderr|55-88
4240|code|ADD             R2, PC; "expected SMP frame response type, got=0"...|122-68
4242|code|LDR             R0, [R7]|56-104
4244|code|BLX             __fprintf_chk|255-247-28-237
4248|code|B               loc_EC8|22-231
4250|code|MOV             R4, R0|4-70
4252|code|B               loc_EA2|1-231
4254|code|LDR             R0, =(stderr_ptr - 0x11F5C)|105-72
4256|code|MOV             R3, R4|35-70
4258|code|LDR             R2, =(aResponseTooSho - 0x10AC); "response too short, len=%d\n"|132-74
4260|code|MOVS            R1, #1|1-33
4262|code|LDR             R7, [R6,R0]; stderr|55-88
4264|code|ADD             R2, PC; "response too short, len=%d\n"|122-68
4266|code|LDR             R0, [R7]|56-104
4268|code|BLX             __fprintf_chk|255-247-16-237
4272|code|B               loc_EC8|10-231
4274|code|LDR             R3, [SP,#0x5B8+var_57C]|15-155
4276|code|LDRB.W          R4, [R8,#1]|152-248-1-64
4280|code|LDRB            R3, [R3,#1]|91-120
4282|code|CMP             R4, R3|156-66
4284|code|BNE             loc_118E|103-209
4286|code|LDRB.W          R0, [R8,#2]|152-248-2-0
4290|code|CMP             R0, #0|0-40
4292|code|BNE.W           loc_11EC|64-240-146-128
4296|code|MOV             R0, R10|80-70
4298|code|BLX             smp_initiator_close|255-247-156-236
4302|code|CMP             R0, #0|0-40
4304|code|BLT.W           loc_F0E|255-246-29-175
4308|code|MOVS            R4, #0|0-36
4310|code|B               loc_ED6|254-230
4312|code|LDR             R7, [SP,#0x5B8+var_598]|8-159
4314|code|LDRB.W          R0, [R8,R7]; c|24-248-7-0
4318|code|ADDS            R7, #1|1-55
4320|code|BLX             putchar|255-247-234-236
4324|code|CMP             R7, R4|167-66
4326|code|BNE             loc_10DA|248-209
4328|code|B               loc_EBE|233-230
4330|code|LDRB.W          R0, [R8,#1]|152-248-1-0
4334|code|BLX             smp_get_func_def_resp_len|255-247-150-236
4338|code|CMP             R0, #0|0-40
4340|code|BLT             loc_11D2|109-219
4342|code|MOV             R9, R0|129-70
4344|code|B               loc_E7A|191-230
4346|code|LDR             R3, =(stderr_ptr - 0x11F5C)|82-75
4348|code|MOVS            R4, #0x61 ; 'a'|97-36
4350|code|LDR             R7, [R6,R3]; stderr|247-88
4352|code|BLX             __errno_location|255-247-200-236
4356|code|LDR             R7, [R7]|63-104
4358|code|LDR             R0, [R0]; errnum|0-104
4360|code|BLX             safe_strerror|255-247-238-236
4364|code|LDR             R2, =(aCloseErrorS - 0x1114); "close error: %s\n"|106-74
4366|code|MOVS            R1, #1|1-33
4368|code|ADD             R2, PC; "close error: %s\n"|122-68
4370|code|MOV             R3, R0|3-70
4372|code|MOV             R0, R7|56-70
4374|code|BLX             __fprintf_chk|255-247-220-236
4378|code|ADDS            R3, R4, #1|99-28
4380|code|BNE.W           loc_ED6|127-244-219-174
4384|code|B               loc_1038|138-231
4386|code|LDR             R3, [SP,#0x5B8+var_57C]|15-155
4388|code|LDRB.W          R2, [R8,#1]|152-248-1-32
4392|code|LDRB            R3, [R3,#1]|91-120
4394|code|CMP             R2, R3|154-66
4396|code|BNE.W           loc_EC8|127-244-204-174
4400|code|LDRB.W          R0, [R8,#2]|152-248-2-0
4404|code|CMP             R0, #0|0-40
4406|code|BEQ             loc_10C8|199-208
4408|code|CBZ             R5, loc_1158|117-177
4410|code|LDR             R3, =(stderr_ptr - 0x11F5C)|66-75
4412|code|MOV.W           R1, #0x100|79-244-128-113
4416|code|ADD             R2, SP, #0x5B8+var_32C|163-170
4418|code|LDR             R3, [R6,R3]; stderr|243-88
4420|code|LDR             R4, [R3]|28-104
4422|code|BLX             smp_get_func_res_str|255-247-220-236
4426|code|LDR             R2, =(aZoneUnlockResu - 0x1152); "Zone unlock result: %s\n"|92-74
4428|code|MOVS            R1, #1|1-33
4430|code|ADD             R2, PC; "Zone unlock result: %s\n"|122-68
4432|code|MOV             R3, R0|3-70
4434|code|MOV             R0, R4|32-70
4436|code|BLX             __fprintf_chk|255-247-188-236
4440|code|LDRB.W          R4, [R8,#2]|152-248-2-64
4444|code|MOV             R0, R10|80-70
4446|code|BLX             smp_initiator_close|255-247-82-236
4450|code|CMP             R0, #0|0-40
4452|code|BGE.W           loc_ED6|191-246-183-174
4456|code|LDR             R3, =(stderr_ptr - 0x11F5C)|54-75
4458|code|LDR             R3, [R6,R3]; stderr|243-88
4460|code|LDR             R7, [R3]|31-104
4462|code|BLX             __errno_location|255-247-146-236
4466|code|LDR             R0, [R0]; errnum|0-104
4468|code|BLX             safe_strerror|255-247-184-236
4472|code|LDR             R2, =(aCloseErrorS - 0x1180); "close error: %s\n"|81-74
4474|code|MOVS            R1, #1|1-33
4476|code|ADD             R2, PC; "close error: %s\n"|122-68
4478|code|MOV             R3, R0|3-70
4480|code|MOV             R0, R7|56-70
4482|code|BLX             __fprintf_chk|255-247-166-236
4486|code|CMP             R4, #0|0-44
4488|code|BEQ.W           loc_F2C|63-244-208-174
4492|code|B               loc_ED6|163-230
4494|code|LDR             R0, =(stderr_ptr - 0x11F5C)|45-72
4496|code|MOVS            R1, #1|1-33
4498|code|LDR             R2, =(aExpectedFuncti - 0x119A); "Expected function code=0x%x, got=0x%x\n"|76-74
4500|code|LDR             R7, [R6,R0]; stderr|55-88
4502|code|ADD             R2, PC; "Expected function code=0x%x, got=0x%x\n"|122-68
4504|code|STR             R4, [SP,#0x5B8+longind]|0-148
4506|code|LDR             R0, [R7]|56-104
4508|code|BLX             __fprintf_chk|255-247-152-236
4512|code|B               loc_EC8|146-230
4514|code|MOV.W           R4, #0xFFFFFFFF|79-240-255-52
4518|code|B               loc_1100|171-231
4520|code|LDR             R3, =(stderr_ptr - 0x11F5C)|38-75
4522|code|MOVS            R1, #1; size|1-33
4524|code|LDR             R0, =(aBadValueInEnvi - 0x11BA); "bad value in environment variable SMP_U"...|70-72
4526|code|MOVS            R2, #0x35 ; '5'; n|53-34
4528|code|ADD.W           R8, SP, #0x5B8+dest|13-245-198-120
4532|code|LDR             R7, [R6,R3]; stderr|247-88
4534|code|ADD             R0, PC; "bad value in environment variable SMP_U"...|120-68
4536|code|LDR             R3, [R7]; s|59-104
4538|code|BLX             fwrite|255-247-66-236
4542|code|LDR             R0, =(aUse0 - 0x11CA); "    use 0\n"|67-72
4544|code|LDR             R3, [R7]; s|59-104
4546|code|MOVS            R1, #1; size|1-33
4548|code|MOVS            R2, #0xA; n|10-34
4550|code|ADD             R0, PC; "    use 0\n"|120-68
4552|code|BLX             fwrite|255-247-58-236
4556|code|B               loc_DE6|11-230
4558|code|BLX             __stack_chk_fail|255-247-44-236
4562|code|CMP             R5, #0|0-45
4564|code|BEQ.W           loc_E7A|63-244-81-174
4568|code|LDR             R3, =(stderr_ptr - 0x11F5C)|26-75
4570|code|MOVS            R1, #1; size|1-33
4572|code|LDR             R0, =(aUnableToDeterm - 0x11E6); "unable to determine response length\n"|60-72
4574|code|MOVS            R2, #0x24 ; '$'; n|36-34
4576|code|LDR             R7, [R6,R3]; stderr|247-88
4578|code|ADD             R0, PC; "unable to determine response length\n"|120-68
4580|code|LDR             R3, [R7]; s|59-104
4582|code|BLX             fwrite|255-247-44-236
4586|code|B               loc_E7A|70-230
4588|code|MOV.W           R1, #0x100|79-244-128-113
4592|code|ADD             R2, SP, #0x5B8+var_32C|163-170
4594|code|BLX             smp_get_func_res_str|255-247-134-236
4598|code|LDR             R4, =(stderr_ptr - 0x11F5C)|19-76
4600|code|LDR             R2, =(aZoneUnlockResu - 0x1200); "Zone unlock result: %s\n"|54-74
4602|code|MOVS            R1, #1|1-33
4604|code|ADD             R2, PC; "Zone unlock result: %s\n"|122-68
4606|code|MOV             R3, R0|3-70
4608|code|LDR             R0, [R6,R4]; stderr|48-89
4610|code|LDR             R0, [R0]|0-104
4612|code|BLX             __fprintf_chk|255-247-100-236
4616|code|LDRB.W          R4, [R8,#2]|152-248-2-64
4620|code|B               loc_115C|166-231
4622|code|LDR             R4, =(stderr_ptr - 0x11F5C)|13-76
4624|code|MOV             R3, R0|3-70
4626|code|LDR             R2, =(aSmpSendReqFail - 0x121C); "smp_send_req failed, res=%d\n"|49-74
4628|code|MOVS            R1, #1|1-33
4630|code|LDR             R7, [R6,R4]; stderr|55-89
4632|code|ADD             R2, PC; "smp_send_req failed, res=%d\n"|122-68
4634|code|LDR             R0, [R7]|56-104
4636|code|BLX             __fprintf_chk|255-247-88-236
4640|code|LDR             R0, =(aTryAddingVOpti - 0x122C); "    try adding '-v' option for more deb"...|46-72
4642|code|LDR             R3, [R7]; s|59-104
4644|code|MOVS            R1, #1; size|1-33
4646|code|MOVS            R2, #0x2A ; '*'; n|42-34
4648|code|ADD             R0, PC; "    try adding '-v' option for more deb"...|120-68
4650|code|BLX             fwrite|255-247-10-236
4654|code|B               loc_102C|253-230
4656|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB48|20-20-1-0
4660|data|DCD __stack_chk_guard_ptr - 0x11F5C|128-0-0-0
4664|data|DCD dword_146C - 0xB52|26-9-0-0
4668|data|DCD aAeHhiRsVv - 0xB94; "aE:hHI:rs:vV"|228-8-0-0
4672|data|DCD off_12008 - 0xB98; "activate"|112-20-1-0
4676|data|DCD stderr_ptr - 0x11F5C|136-0-0-0
4680|data|DCD aVersionS - 0xC1E; "version: %s\n"|194-12-0-0
4684|data|DCD a10420130604 - 0xC20; "1.04 20130604"|208-12-0-0
4688|data|DCD optarg_ptr - 0x11F5C|160-0-0-0
4692|data|DCD aBadArgumentToE - 0xC8E; "bad argument to '--expected'\n"|250-7-0-0
4696|data|DCD aUsageSmpZoneUn - 0xCAA; "Usage: smp_zone_unlock [--activate] [--"...|254-7-0-0
4700|data|DCD aUnrecognisedSw - 0xCEE; "unrecognised switch code 0x%x ??\n"|18-12-0-0
4704|data|DCD aUsageSmpZoneUn - 0xCFE; "Usage: smp_zone_unlock [--activate] [--"...|170-7-0-0
4708|data|DCD optind_ptr - 0x11F5C|132-0-0-0
4712|data|DCD aUnexpectedExtr - 0xD36; "Unexpected extra argument: %s\n"|238-11-0-0
4716|data|DCD aUsageSmpZoneUn - 0xD62; "Usage: smp_zone_unlock [--activate] [--"...|70-7-0-0
4720|data|DCD aD - 0xDA6; "%d"|22-12-0-0
4724|data|DCD aExpectedNumber - 0xDC2; "expected number after separator in SMP_"...|254-11-0-0
4728|data|DCD aActualResponse - 0xE9C; "actual response length [%d] less than d"...|196-12-0-0
4732|data|DCD aExitStatusDInd - 0xEEC; "Exit status %d indicates error detected"...|48-13-0-0
4736|data|DCD aSmpUtilsDevice - 0xEFA; "SMP_UTILS_DEVICE"|74-10-0-0
4740|data|DCD aCloseErrorS - 0xF26; "close error: %s\n"|226-12-0-0
4744|data|DCD aBadArgumentToS - 0xF3E; "bad argument to '--sa'\n"|138-9-0-0
4748|data|DCD aSmpUtilsSasAdd - 0xF4C; "SMP_UTILS_SAS_ADDR"|168-10-0-0
4752|data|DCD aMissingDeviceN - 0xF80; "missing device name on command line\n  "...|216-9-0-0
4756|data|DCD aUsageSmpZoneUn - 0xF8E; "Usage: smp_zone_unlock [--activate] [--"...|26-5-0-0
4760|data|DCD aZoneUnlockRequ - 0xFAE; "    Zone unlock request: "|6-11-0-0
4764|data|DCD a02x - 0xFB0; "%02x "|32-11-0-0
4768|data|DCD aSmpSendReqFail - 0x102A; "smp_send_req failed, res=%d\n"|174-10-0-0
4772|data|DCD aSasTargetAddre - 0x104E; "SAS (target) address not in naa-5 forma"...|254-9-0-0
4776|data|DCD aUseInterfaceTo - 0x1068; "    use '--interface=' to override\n"|40-10-0-0
4780|data|DCD aSmpSendReqTran - 0x107A; "smp_send_req transport_error=%d\n"|126-10-0-0
4784|data|DCD aExpectedSmpFra - 0x1094; "expected SMP frame response type, got=0"...|32-11-0-0
4788|data|DCD aResponseTooSho - 0x10AC; "response too short, len=%d\n"|112-10-0-0
4792|data|DCD aCloseErrorS - 0x1114; "close error: %s\n"|244-10-0-0
4796|data|DCD aZoneUnlockResu - 0x1152; "Zone unlock result: %s\n"|74-10-0-0
4800|data|DCD aCloseErrorS - 0x1180; "close error: %s\n"|136-10-0-0
4804|data|DCD aExpectedFuncti - 0x119A; "Expected function code=0x%x, got=0x%x\n"|70-10-0-0
4808|data|DCD aBadValueInEnvi - 0x11BA; "bad value in environment variable SMP_U"...|78-8-0-0
4812|data|DCD aUse0 - 0x11CA; "    use 0\n"|118-8-0-0
4816|data|DCD aUnableToDeterm - 0x11E6; "unable to determine response length\n"|82-9-0-0
4820|data|DCD aZoneUnlockResu - 0x1200; "Zone unlock result: %s\n"|156-9-0-0
4824|data|DCD aSmpSendReqFail - 0x121C; "smp_send_req failed, res=%d\n"|188-8-0-0
4828|data|DCD aTryAddingVOpti - 0x122C; "    try adding '-v' option for more deb"...|28-10-0-0
4832|code|MOV.W           R11, #0|79-240-0-11
4836|code|MOV.W           LR, #0|79-240-0-14
4840|code|POP             {R1}; argc|2-188
4842|code|MOV             R2, SP; ubp_av|106-70
4844|code|PUSH            {R2}; stack_end|4-180
4846|code|PUSH            {R0}; rtld_fini|1-180
4848|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1318)|223-248-36-160
4852|code|ADR             R3, off_1318|8-163
4854|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4856|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F5C)|223-248-32-192
4860|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4864|code|PUSH.W          {R12}; fini|77-248-4-205
4868|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F5C)|6-75
4870|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4874|code|LDR             R0, =(main_ptr - 0x11F5C)|6-72
4876|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4880|code|BLX             __libc_start_main|255-247-162-235
4884|code|BLX             abort|255-247-6-236
4888|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1318|68-12-1-0
4892|data|DCD __libc_csu_fini_ptr - 0x11F5C|116-0-0-0
4896|data|DCD __libc_csu_init_ptr - 0x11F5C|144-0-0-0
4900|data|DCD main_ptr - 0x11F5C|148-0-0-0
4904|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1338)|20-48-159-229
4908|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F5C)|20-32-159-229
4912|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4916|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4920|code|CMP             R2, #0|0-0-82-227
4924|code|BXEQ            LR|30-255-47-1
4928|code|B               __gmon_start__|199-253-255-234
4932|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1338|36-12-1-0
4936|data|DCD __gmon_start___ptr_0 - 0x11F5C|140-0-0-0
4940|code|LDR             R3, =(__bss_start__ - 0x1354)|7-75
4942|code|LDR             R0, =(__bss_start__ - 0x1358)|8-72
4944|code|ADD             R3, PC; __bss_start__|123-68
4946|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x135E)|8-74
4948|code|ADD             R0, PC; __bss_start__|120-68
4950|code|ADDS            R3, #3|3-51
4952|code|SUBS            R3, R3, R0|27-26
4954|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4956|code|CMP             R3, #6|6-43
4958|code|BLS             locret_1368|3-217
4960|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F5C)|5-75
4962|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4964|code|CBZ             R3, locret_1368|3-177
4966|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4968|code|BX              LR|112-71
4970|data|ALIGN 4|0-191
4972|data|DCD __bss_start__ - 0x1354|84-13-1-0
4976|data|DCD __bss_start__ - 0x1358|80-13-1-0
4980|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x135E|254-11-1-0
4984|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F5C|124-0-0-0
4988|code|LDR             R1, =(__bss_start__ - 0x1384)|8-73
4990|code|LDR             R0, =(__bss_start__ - 0x1388)|9-72
4992|code|ADD             R1, PC; __bss_start__|121-68
4994|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x138C)|9-75
4996|code|ADD             R0, PC; __bss_start__|120-68
4998|code|SUBS            R1, R1, R0|9-26
5000|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5002|code|ASRS            R1, R1, #2|137-16
5004|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
5008|code|ASRS            R1, R1, #1|73-16
5010|code|BEQ             locret_139C|3-208
5012|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F5C)|5-74
5014|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
5016|code|CBZ             R3, locret_139C|3-177
5018|code|BX              R3; _ITM_registerTMCloneTable|24-71
5020|code|BX              LR|112-71
5022|data|ALIGN 0x10|0-191
5024|data|DCD __bss_start__ - 0x1384|36-13-1-0
5028|data|DCD __bss_start__ - 0x1388|32-13-1-0
5032|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x138C|208-11-1-0
5036|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F5C|156-0-0-0
5040|code|PUSH            {R3,LR}|8-181
5042|code|LDR             R3, =(__bss_start__ - 0x13BA)|10-75
5044|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x13BC)|10-74
5046|code|ADD             R3, PC; __bss_start__|123-68
5048|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5050|code|LDRB            R3, [R3]|27-120
5052|code|CBNZ            R3, locret_13DA|107-185
5054|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F5C)|9-75
5056|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5058|code|CBZ             R3, loc_13CE|35-177
5060|code|LDR             R3, =(off_12004 - 0x13CA)|8-75
5062|code|ADD             R3, PC; off_12004|123-68
5064|code|LDR             R0, [R3]; off_12004 ; void *|24-104
5066|code|BLX             __cxa_finalize|255-247-22-235
5070|code|BL              sub_134C|255-247-189-255
5074|code|LDR             R3, =(__bss_start__ - 0x13DA)|6-75
5076|code|MOVS            R2, #1|1-34
5078|code|ADD             R3, PC; __bss_start__|123-68
5080|code|STRB            R2, [R3]|26-112
5082|code|POP             {R3,PC}|8-189
5084|data|DCD __bss_start__ - 0x13BA|238-12-1-0
5088|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13BC|160-11-1-0
5092|data|DCD __cxa_finalize_ptr_0 - 0x11F5C|120-0-0-0
5096|data|DCD off_12004 - 0x13CA|58-12-1-0
5100|data|DCD __bss_start__ - 0x13DA|206-12-1-0
5104|code|LDR             R0, =(dword_11E50 - 0x13F8)|7-72
5106|code|PUSH            {R3,LR}|8-181
5108|code|ADD             R0, PC; dword_11E50|120-68
5110|code|LDR             R2, [R0]|2-104
5112|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13FE)|6-75
5114|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5116|code|CBNZ            R2, loc_1404|18-185
5118|code|POP.W           {R3,LR}|189-232-8-64
5122|code|B               sub_137C|187-231
5124|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F5C)|4-74
5126|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5128|code|CMP             R3, #0|0-43
5130|code|BEQ             loc_13FE|248-208
5132|code|BLX             R3; _Jv_RegisterClasses|152-71
5134|code|B               loc_13FE|246-231
5136|data|DCD dword_11E50 - 0x13F8|88-10-1-0
5140|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13FE|94-11-1-0
5144|data|DCD _Jv_RegisterClasses_ptr - 0x11F5C|152-0-0-0
5148|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5152|code|MOV             R7, R0|7-70
5154|code|LDR             R6, =(off_11E4C - 0x142E)|12-78
5156|code|MOV             R8, R1|136-70
5158|code|LDR             R5, =(off_11E48 - 0x1434)|12-77
5160|code|MOV             R9, R2|145-70
5162|code|ADD             R6, PC; off_11E4C|126-68
5164|code|BLX             .init_proc|255-247-212-234
5168|code|ADD             R5, PC; off_11E48|125-68
5170|code|SUBS            R6, R6, R5|118-27
5172|code|ASRS            R6, R6, #2|182-16
5174|code|BEQ             locret_144E|10-208
5176|code|SUBS            R5, #4|4-61
5178|code|MOVS            R4, #0|0-36
5180|code|ADDS            R4, #1|1-52
5182|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5186|code|MOV             R0, R7|56-70
5188|code|MOV             R1, R8|65-70
5190|code|MOV             R2, R9|74-70
5192|code|BLX             R3|152-71
5194|code|CMP             R4, R6|180-66
5196|code|BNE             loc_143C|246-209
5198|code|POP.W           {R3-R9,PC}|189-232-248-131
5202|data|ALIGN 4|0-191
5204|data|DCD off_11E4C - 0x142E|30-10-1-0
5208|data|DCD off_11E48 - 0x1434|20-10-1-0
5212|code|BX              LR|112-71
5214|data|ALIGN 0x10|0-191
5216|code|PUSH            {R3,LR}; _fini|8-64-45-233
5220|code|POP             {R3,PC}|8-128-189-232
7364|data|ALIGN 8|0-0-0-0
73288|data|DCD sub_13F0+1|241-19-0-0
73292|data|DCD sub_13B0+1|177-19-0-0
73296|data|DCD 0|0-0-0-0
73300|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsmputils1.so.1|1-0-0-0-1-0-0-0
73308|data|Elf32_Dyn <1, <0x10B>>; DT_NEEDED libc.so.6|1-0-0-0-11-1-0-0
73316|data|Elf32_Dyn <1, <0x1CF>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-207-1-0-0
73324|data|Elf32_Dyn <0xC, <0x9D8>>; DT_INIT|12-0-0-0-216-9-0-0
73332|data|Elf32_Dyn <0xD, <0x1460>>; DT_FINI|13-0-0-0-96-20-0-0
73340|data|Elf32_Dyn <0x19, <0x11E48>>; DT_INIT_ARRAY|25-0-0-0-72-30-1-0
73348|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73356|data|Elf32_Dyn <0x1A, <0x11E4C>>; DT_FINI_ARRAY|26-0-0-0-76-30-1-0
73364|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73372|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73380|data|Elf32_Dyn <5, <0x524>>; DT_STRTAB|5-0-0-0-36-5-0-0
73388|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
73396|data|Elf32_Dyn <0xA, <0x270>>; DT_STRSZ|10-0-0-0-112-2-0-0
73404|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73412|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73420|data|Elf32_Dyn <3, <0x11F5C>>; DT_PLTGOT|3-0-0-0-92-31-1-0
73428|data|Elf32_Dyn <2, <0xD0>>; DT_PLTRELSZ|2-0-0-0-208-0-0-0
73436|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73444|data|Elf32_Dyn <0x17, <0x908>>; DT_JMPREL|23-0-0-0-8-9-0-0
73452|data|Elf32_Dyn <0x11, <0x848>>; DT_REL|17-0-0-0-72-8-0-0
73460|data|Elf32_Dyn <0x12, <0xC0>>; DT_RELSZ|18-0-0-0-192-0-0-0
73468|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73476|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73484|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73492|data|Elf32_Dyn <0x6FFFFFFE, <0x7F8>>; DT_VERNEED|254-255-255-111-248-7-0-0
73500|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73508|data|Elf32_Dyn <0x6FFFFFF0, <0x794>>; DT_VERSYM|240-255-255-111-148-7-0-0
73516|data|Elf32_Dyn <0x6FFFFFFA, <0xF>>; DT_RELCOUNT|250-255-255-111-15-0-0-0
73524|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73532|data|ALIGN 0x10|0-0-0-0
73564|data|DCD stru_11E54|84-30-1-0
73568|data|DCD 0|0-0-0-0
73572|data|DCD dword_0|0-0-0-0
73576|data|DCD __imp___cxa_finalize|176-32-1-0
73580|data|DCD __imp_smp_initiator_close|180-32-1-0
73584|data|DCD __imp_dStrHex|184-32-1-0
73588|data|DCD __imp_smp_get_func_def_resp_len|192-32-1-0
73592|data|DCD __imp___stack_chk_fail|200-32-1-0
73596|data|DCD __imp_smp_is_naa5|204-32-1-0
73600|data|DCD __imp_fwrite|212-32-1-0
73604|data|DCD __imp_getenv|216-32-1-0
73608|data|DCD __imp___libc_start_main|220-32-1-0
73612|data|DCD __imp___gmon_start__|40-33-1-0
73616|data|DCD __imp_getopt_long|224-32-1-0
73620|data|DCD __imp_strchr|228-32-1-0
73624|data|DCD __imp_smp_send_req|232-32-1-0
73628|data|DCD __imp___errno_location|236-32-1-0
73632|data|DCD __imp___isoc99_sscanf|240-32-1-0
73636|data|DCD __imp_memset|244-32-1-0
73640|data|DCD __imp_putchar|248-32-1-0
73644|data|DCD __imp_strncpy|252-32-1-0
73648|data|DCD __imp___fprintf_chk|0-33-1-0
73652|data|DCD __imp_fputc|4-33-1-0
73656|data|DCD __imp_safe_strerror|8-33-1-0
73660|data|DCD __imp_smp_get_llnum|12-33-1-0
73664|data|DCD __imp_smp_get_func_res_str|16-33-1-0
73668|data|DCD __imp_smp_get_num|20-33-1-0
73672|data|DCD __imp_smp_initiator_open|24-33-1-0
73676|data|DCD __imp_abort|32-33-1-0
73680|data|DCD __libc_csu_fini+1|93-20-0-0
73684|data|DCD __imp___cxa_finalize|176-32-1-0
73688|data|DCD _ITM_deregisterTMCloneTable|36-33-1-0
73692|data|DCD __stack_chk_guard|188-32-1-0
73696|data|DCD optind|196-32-1-0
73700|data|DCD stderr|208-32-1-0
73704|data|DCD __imp___gmon_start__|40-33-1-0
73708|data|DCD __libc_csu_init+1|29-20-0-0
73712|data|DCD main+1|49-11-0-0
73716|data|DCD _Jv_RegisterClasses|44-33-1-0
73720|data|DCD _ITM_registerTMCloneTable|48-33-1-0
73724|data|DCD optarg|28-33-1-0
73896|data|% 1; Alternative name is '__bss_start'|255
