address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|97-19-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x31D0; SHT file offset|208-49-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1F98; File offset|152-31-0-0
60|data|DCD unk_1F98; Virtual address|152-31-0-0
64|data|DCD 0x1F98; Physical address|152-31-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1FA4; Size in file image|164-31-0-0
168|data|DCD 0x1FA4; Size in memory image|164-31-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E58; File offset|88-46-0-0
188|data|DCD off_12E58; Virtual address|88-46-1-0
192|data|DCD 0x12E58; Physical address|88-46-1-0
196|data|DCD 0x250; Size in file image|80-2-0-0
200|data|DCD 0x254; Size in memory image|84-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E64; File offset|100-46-0-0
220|data|DCD stru_12E64; Virtual address|100-46-1-0
224|data|DCD 0x12E64; Physical address|100-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E58; File offset|88-46-0-0
316|data|DCD off_12E58; Virtual address|88-46-1-0
320|data|DCD 0x12E58; Physical address|88-46-1-0
324|data|DCD 0x1A8; Size in file image|168-1-0-0
328|data|DCD 0x1A8; Size in memory image|168-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xDF, 0xE6, 0xD7, 0x6F, 0xDB, 0xD7, 0x81, 0xD7, 0xCB; Desc|223-230-215-111-219-215-129-215-203-32-1-153-1-247-164-222-215-79-56-8
436|data|DCD 3|3-0-0-0
440|data|DCD 0x20|32-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x20, 0x24, 0x29|32-0-0-0-36-0-0-0-41-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_4E4 - byte_4E4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_4E4 - byte_4E4, dword_12E60, 0, 3, 0, 0x14>|0-0-0-0-96-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_4E4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|95-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aItmDeregistert - byte_4E4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
612|data|Elf32_Sym <aFgets - byte_4E4, dword_0, 0, 0x12, 0, 0>; "fgets"|14-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aStackChkGuard - byte_4E4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|156-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
644|data|Elf32_Sym <aMemsetChk - byte_4E4, dword_0, 0, 0x12, 0, 0>; "__memset_chk"|48-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aSgCmdsCloseDev - byte_4E4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|160-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aOptind - byte_4E4, dword_0, 0, 0x11, 0, 0>; "optind"|211-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aSgLlUnmapV2 - byte_4E4, dword_0, 0, 0x12, 0, 0>; "sg_ll_unmap_v2"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aStackChkFail - byte_4E4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|234-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStderr - byte_4E4, dword_0, 0, 0x11, 0, 0>; "stderr"|41-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aLibcStartMain - byte_4E4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|118-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aVfprintfChk - byte_4E4, dword_0, 0, 0x12, 0, 0>; "__vfprintf_chk"|80-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aGmonStart - byte_4E4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
788|data|Elf32_Sym <aGetoptLong - byte_4E4, dword_0, 0, 0x12, 0, 0>; "getopt_long"|61-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aStrlen - byte_4E4, dword_0, 0, 0x12, 0, 0>; "strlen"|20-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aStrchr - byte_4E4, dword_0, 0, 0x12, 0, 0>; "strchr"|73-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aStdin - byte_4E4, dword_0, 0, 0x11, 0, 0>; "stdin"|1-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
852|data|Elf32_Sym <aIsoc99Sscanf - byte_4E4, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|218-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aMemset - byte_4E4, dword_0, 0, 0x12, 0, 0>; "memset"|27-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aSgGetLlnum - byte_4E4, dword_0, 0, 0x12, 0, 0>; "sg_get_llnum"|147-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aSafeStrerror - byte_4E4, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|133-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aJvRegisterclas - byte_4E4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
932|data|Elf32_Sym <aFopen64 - byte_4E4, dword_0, 0, 0x12, 0, 0>; "fopen64"|110-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aSgGetNum - byte_4E4, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|122-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aItmRegistertmc - byte_4E4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
980|data|Elf32_Sym <aSgCmdsOpenDevi - byte_4E4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|181-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aOptarg - byte_4E4, dword_0, 0, 0x11, 0, 0>; "optarg"|34-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1012|data|Elf32_Sym <aAbort - byte_4E4, dword_0, 0, 0x12, 0, 0>; "abort"|251-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aStrspn - byte_4E4, dword_0, 0, 0x12, 0, 0>; "strspn"|7-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aBssEnd+1 - byte_4E4, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|221-1-0-0-172-48-1-0-0-0-0-0-16-0-24-0
1060|data|Elf32_Sym <aEdata - byte_4E4, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|187-1-0-0-168-48-1-0-0-0-0-0-16-0-23-0
1076|data|Elf32_Sym <aDataStart - byte_4E4, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|174-1-0-0-0-48-1-0-0-0-0-0-16-0-23-0
1092|data|Elf32_Sym <aEnd_0 - byte_4E4, _end, 0, 0x10, 0, 0x18>; "_end"|240-1-0-0-172-48-1-0-0-0-0-0-16-0-24-0
1108|data|Elf32_Sym <aBssEnd - byte_4E4, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|220-1-0-0-172-48-1-0-0-0-0-0-16-0-24-0
1124|data|Elf32_Sym <aLibcCsuInit - byte_4E4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|5-2-0-0-229-20-0-0-64-0-0-0-18-0-13-0
1140|data|Elf32_Sym <aBssStart - byte_4E4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|194-1-0-0-168-48-1-0-0-0-0-0-16-0-24-0
1156|data|Elf32_Sym <aLibcStartMain+0xD - byte_4E4, main+1, 0x91C, 0x12, 0, 0xD>; "main"|131-1-0-0-69-10-0-0-28-9-0-0-18-0-13-0
1172|data|Elf32_Sym <aLibcCsuInit+0xA - byte_4E4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|15-2-0-0-40-9-0-0-0-0-0-0-18-0-11-0
1188|data|Elf32_Sym <aLibcCsuFini - byte_4E4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|245-1-0-0-37-21-0-0-2-0-0-0-18-0-13-0
1204|data|Elf32_Sym <aBssStart_0 - byte_4E4, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|206-1-0-0-168-48-1-0-0-0-0-0-16-0-24-0
1220|data|Elf32_Sym <aLibcCsuFini+0xA - byte_4E4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|255-1-0-0-40-21-0-0-0-0-0-0-18-0-14-0
1236|data|Elf32_Sym <aEnd - byte_4E4, _end, 0, 0x10, 0, 0x18>; "__end__"|232-1-0-0-172-48-1-0-0-0-0-0-16-0-24-0
1252|data|DCB 0|0
1253|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1270|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1298|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1313|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1333|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1359|data|DCB "sg_ll_unmap_v2",0|115-103-95-108-108-95-117-110-109-97-112-95-118-50-0
1374|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1385|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1399|data|DCB "sg_get_llnum",0|115-103-95-103-101-116-95-108-108-110-117-109-0
1412|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1433|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1453|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1463|data|DCB "optind",0|111-112-116-105-110-100-0
1470|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1486|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1503|data|DCB "abort",0|97-98-111-114-116-0
1509|data|DCB "stdin",0|115-116-100-105-110-0
1515|data|DCB "strspn",0|115-116-114-115-112-110-0
1522|data|DCB "fgets",0|102-103-101-116-115-0
1528|data|DCB "strlen",0|115-116-114-108-101-110-0
1535|data|DCB "memset",0|109-101-109-115-101-116-0
1542|data|DCB "optarg",0|111-112-116-97-114-103-0
1549|data|DCB "stderr",0|115-116-100-101-114-114-0
1556|data|DCB "__memset_chk",0|95-95-109-101-109-115-101-116-95-99-104-107-0
1569|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1581|data|DCB "strchr",0|115-116-114-99-104-114-0
1588|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
1603|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1618|data|DCB "fopen64",0|102-111-112-101-110-54-52-0
1626|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1644|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1664|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1682|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1695|data|DCB "_edata",0|95-101-100-97-116-97-0
1702|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1714|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1728|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1740|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1748|data|DCB "_end",0|95-101-110-100-0
1753|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1769|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1785|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1795|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
1805|data|DCB 0|0
1806|data|DCW 0|0-0
1808|data|DCW 0|0-0
1810|data|DCW 0|0-0
1812|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1814|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1816|data|DCW 2; fgets@@GLIBC_2.4|2-0
1818|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1820|data|DCW 2; __memset_chk@@GLIBC_2.4|2-0
1822|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
1824|data|DCW 2; optind@@GLIBC_2.4|2-0
1826|data|DCW 0; local  symbol: sg_ll_unmap_v2|0-0
1828|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1830|data|DCW 2; stderr@@GLIBC_2.4|2-0
1832|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1834|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
1836|data|DCW 0; local  symbol: __gmon_start__|0-0
1838|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1840|data|DCW 2; strlen@@GLIBC_2.4|2-0
1842|data|DCW 2; strchr@@GLIBC_2.4|2-0
1844|data|DCW 2; stdin@@GLIBC_2.4|2-0
1846|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
1848|data|DCW 2; memset@@GLIBC_2.4|2-0
1850|data|DCW 0; local  symbol: sg_get_llnum|0-0
1852|data|DCW 0; local  symbol: safe_strerror|0-0
1854|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1856|data|DCW 2; fopen64@@GLIBC_2.4|2-0
1858|data|DCW 0; local  symbol: sg_get_num|0-0
1860|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1862|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
1864|data|DCW 2; optarg@@GLIBC_2.4|2-0
1866|data|DCW 2; abort@@GLIBC_2.4|2-0
1868|data|DCW 2; strspn@@GLIBC_2.4|2-0
1870|data|DCW 1; global symbol: _bss_end__|1-0
1872|data|DCW 1; global symbol: _edata|1-0
1874|data|DCW 1; global symbol: __data_start|1-0
1876|data|DCW 1; global symbol: _end|1-0
1878|data|DCW 1; global symbol: __bss_end__|1-0
1880|data|DCW 1; global symbol: __libc_csu_init|1-0
1882|data|DCW 1; global symbol: __bss_start|1-0
1884|data|DCW 1; global symbol: main|1-0
1886|data|DCW 1; global symbol: _init|1-0
1888|data|DCW 1; global symbol: __libc_csu_fini|1-0
1890|data|DCW 1; global symbol: __bss_start__|1-0
1892|data|DCW 1; global symbol: _fini|1-0
1894|data|DCW 1; global symbol: __end__|1-0
1896|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_4E4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-136-1-0-0-16-0-0-0-32-0-0-0
1912|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_4E4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-21-2-0-0-0-0-0-0
1928|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_4E4, 0x10, 0>; "libc.so.6"|1-0-2-0-201-0-0-0-16-0-0-0-0-0-0-0
1944|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_4E4, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-31-2-0-0-16-0-0-0
1960|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_4E4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-21-2-0-0-0-0-0-0
1976|data|Elf32_Rel <0x12E58, 0x17>; R_ARM_RELATIVE|88-46-1-0-23-0-0-0
1984|data|Elf32_Rel <0x12E5C, 0x17>; R_ARM_RELATIVE|92-46-1-0-23-0-0-0
1992|data|Elf32_Rel <0x12FCC, 0x17>; R_ARM_RELATIVE|204-47-1-0-23-0-0-0
2000|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2008|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2016|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2024|data|Elf32_Rel <0x13008, 0x17>; R_ARM_RELATIVE|8-48-1-0-23-0-0-0
2032|data|Elf32_Rel <0x13018, 0x17>; R_ARM_RELATIVE|24-48-1-0-23-0-0-0
2040|data|Elf32_Rel <0x13028, 0x17>; R_ARM_RELATIVE|40-48-1-0-23-0-0-0
2048|data|Elf32_Rel <0x13038, 0x17>; R_ARM_RELATIVE|56-48-1-0-23-0-0-0
2056|data|Elf32_Rel <0x13048, 0x17>; R_ARM_RELATIVE|72-48-1-0-23-0-0-0
2064|data|Elf32_Rel <0x13058, 0x17>; R_ARM_RELATIVE|88-48-1-0-23-0-0-0
2072|data|Elf32_Rel <0x13068, 0x17>; R_ARM_RELATIVE|104-48-1-0-23-0-0-0
2080|data|Elf32_Rel <0x13078, 0x17>; R_ARM_RELATIVE|120-48-1-0-23-0-0-0
2088|data|Elf32_Rel <0x13088, 0x17>; R_ARM_RELATIVE|136-48-1-0-23-0-0-0
2096|data|Elf32_Rel <0x12FD0, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|208-47-1-0-21-3-0-0
2104|data|Elf32_Rel <0x12FD4, 0x415>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|212-47-1-0-21-4-0-0
2112|data|Elf32_Rel <0x12FD8, 0x615>; R_ARM_GLOB_DAT __stack_chk_guard|216-47-1-0-21-6-0-0
2120|data|Elf32_Rel <0x12FDC, 0x915>; R_ARM_GLOB_DAT optind|220-47-1-0-21-9-0-0
2128|data|Elf32_Rel <0x12FE0, 0xC15>; R_ARM_GLOB_DAT stderr|224-47-1-0-21-12-0-0
2136|data|Elf32_Rel <0x12FE4, 0xF15>; R_ARM_GLOB_DAT __gmon_start__|228-47-1-0-21-15-0-0
2144|data|Elf32_Rel <0x12FE8, 0x1315>; R_ARM_GLOB_DAT stdin|232-47-1-0-21-19-0-0
2152|data|Elf32_Rel <0x12FF4, 0x1815>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-24-0-0
2160|data|Elf32_Rel <0x12FF8, 0x1B15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-27-0-0
2168|data|Elf32_Rel <0x12FFC, 0x1D15>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-29-0-0
2176|data|Elf32_Rel <0x12F78, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|120-47-1-0-22-3-0-0
2184|data|Elf32_Rel <0x12F7C, 0x516>; R_ARM_JUMP_SLOT fgets|124-47-1-0-22-5-0-0
2192|data|Elf32_Rel <0x12F80, 0x716>; R_ARM_JUMP_SLOT __memset_chk|128-47-1-0-22-7-0-0
2200|data|Elf32_Rel <0x12F84, 0x816>; R_ARM_JUMP_SLOT sg_cmds_close_device|132-47-1-0-22-8-0-0
2208|data|Elf32_Rel <0x12F88, 0xA16>; R_ARM_JUMP_SLOT sg_ll_unmap_v2|136-47-1-0-22-10-0-0
2216|data|Elf32_Rel <0x12F8C, 0xB16>; R_ARM_JUMP_SLOT __stack_chk_fail|140-47-1-0-22-11-0-0
2224|data|Elf32_Rel <0x12F90, 0xD16>; R_ARM_JUMP_SLOT __libc_start_main|144-47-1-0-22-13-0-0
2232|data|Elf32_Rel <0x12F94, 0xE16>; R_ARM_JUMP_SLOT __vfprintf_chk|148-47-1-0-22-14-0-0
2240|data|Elf32_Rel <0x12F98, 0xF16>; R_ARM_JUMP_SLOT __gmon_start__|152-47-1-0-22-15-0-0
2248|data|Elf32_Rel <0x12F9C, 0x1016>; R_ARM_JUMP_SLOT getopt_long|156-47-1-0-22-16-0-0
2256|data|Elf32_Rel <0x12FA0, 0x1116>; R_ARM_JUMP_SLOT strlen|160-47-1-0-22-17-0-0
2264|data|Elf32_Rel <0x12FA4, 0x1216>; R_ARM_JUMP_SLOT strchr|164-47-1-0-22-18-0-0
2272|data|Elf32_Rel <0x12FA8, 0x1416>; R_ARM_JUMP_SLOT __isoc99_sscanf|168-47-1-0-22-20-0-0
2280|data|Elf32_Rel <0x12FAC, 0x1516>; R_ARM_JUMP_SLOT memset|172-47-1-0-22-21-0-0
2288|data|Elf32_Rel <0x12FB0, 0x1616>; R_ARM_JUMP_SLOT sg_get_llnum|176-47-1-0-22-22-0-0
2296|data|Elf32_Rel <0x12FB4, 0x1716>; R_ARM_JUMP_SLOT safe_strerror|180-47-1-0-22-23-0-0
2304|data|Elf32_Rel <0x12FB8, 0x1916>; R_ARM_JUMP_SLOT fopen64|184-47-1-0-22-25-0-0
2312|data|Elf32_Rel <0x12FBC, 0x1A16>; R_ARM_JUMP_SLOT sg_get_num|188-47-1-0-22-26-0-0
2320|data|Elf32_Rel <0x12FC0, 0x1C16>; R_ARM_JUMP_SLOT sg_cmds_open_device|192-47-1-0-22-28-0-0
2328|data|Elf32_Rel <0x12FC4, 0x1E16>; R_ARM_JUMP_SLOT abort|196-47-1-0-22-30-0-0
2336|data|Elf32_Rel <0x12FC8, 0x1F16>; R_ARM_JUMP_SLOT strspn|200-47-1-0-22-31-0-0
2344|code|PUSH            {R3,LR}; _init|8-64-45-233
2348|code|BL              sub_13A8|157-2-0-235
2352|code|POP             {R3,PC}|8-128-189-232
2356|code|PUSH            {LR}|4-224-45-229
2360|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x944)|4-224-159-229
2364|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2368|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2372|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x944|40-38-1-0
2376|code|ADR             R12, 0x950|0-198-143-226
2380|code|ADD             R12, R12, #0x12000|18-202-140-226
2384|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12950)]!; __imp___cxa_finalize|40-246-188-229
2388|code|ADR             R12, 0x95C|0-198-143-226
2392|code|ADD             R12, R12, #0x12000|18-202-140-226
2396|code|LDR             PC, [R12,#(fgets_ptr - 0x1295C)]!; __imp_fgets|32-246-188-229
2400|code|ADR             R12, 0x968|0-198-143-226
2404|code|ADD             R12, R12, #0x12000|18-202-140-226
2408|code|LDR             PC, [R12,#(__memset_chk_ptr - 0x12968)]!; __imp___memset_chk|24-246-188-229
2412|code|ADR             R12, 0x974|0-198-143-226
2416|code|ADD             R12, R12, #0x12000|18-202-140-226
2420|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x12974)]!; __imp_sg_cmds_close_device|16-246-188-229
2424|code|ADR             R12, 0x980|0-198-143-226
2428|code|ADD             R12, R12, #0x12000|18-202-140-226
2432|code|LDR             PC, [R12,#(sg_ll_unmap_v2_ptr - 0x12980)]!; __imp_sg_ll_unmap_v2|8-246-188-229
2436|code|ADR             R12, 0x98C|0-198-143-226
2440|code|ADD             R12, R12, #0x12000|18-202-140-226
2444|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x1298C)]!; __imp___stack_chk_fail|0-246-188-229
2448|code|ADR             R12, 0x998|0-198-143-226
2452|code|ADD             R12, R12, #0x12000|18-202-140-226
2456|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12998)]!; __imp___libc_start_main|248-245-188-229
2460|code|ADR             R12, 0x9A4|0-198-143-226
2464|code|ADD             R12, R12, #0x12000|18-202-140-226
2468|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x129A4)]!; __imp___vfprintf_chk|240-245-188-229
2472|code|ADR             R12, 0x9B0|0-198-143-226
2476|code|ADD             R12, R12, #0x12000|18-202-140-226
2480|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x129B0)]!; __imp___gmon_start__|232-245-188-229
2484|code|ADR             R12, 0x9BC|0-198-143-226
2488|code|ADD             R12, R12, #0x12000|18-202-140-226
2492|code|LDR             PC, [R12,#(getopt_long_ptr - 0x129BC)]!; __imp_getopt_long|224-245-188-229
2496|code|ADR             R12, 0x9C8|0-198-143-226
2500|code|ADD             R12, R12, #0x12000|18-202-140-226
2504|code|LDR             PC, [R12,#(strlen_ptr - 0x129C8)]!; __imp_strlen|216-245-188-229
2508|code|ADR             R12, 0x9D4|0-198-143-226
2512|code|ADD             R12, R12, #0x12000|18-202-140-226
2516|code|LDR             PC, [R12,#(strchr_ptr - 0x129D4)]!; __imp_strchr|208-245-188-229
2520|code|ADR             R12, 0x9E0|0-198-143-226
2524|code|ADD             R12, R12, #0x12000|18-202-140-226
2528|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x129E0)]!; __imp___isoc99_sscanf|200-245-188-229
2532|code|ADR             R12, 0x9EC|0-198-143-226
2536|code|ADD             R12, R12, #0x12000|18-202-140-226
2540|code|LDR             PC, [R12,#(memset_ptr - 0x129EC)]!; __imp_memset|192-245-188-229
2544|code|ADR             R12, 0x9F8|0-198-143-226
2548|code|ADD             R12, R12, #0x12000|18-202-140-226
2552|code|LDR             PC, [R12,#(sg_get_llnum_ptr - 0x129F8)]!; __imp_sg_get_llnum|184-245-188-229
2556|code|ADR             R12, 0xA04|0-198-143-226
2560|code|ADD             R12, R12, #0x12000|18-202-140-226
2564|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x12A04)]!; __imp_safe_strerror|176-245-188-229
2568|code|ADR             R12, 0xA10|0-198-143-226
2572|code|ADD             R12, R12, #0x12000|18-202-140-226
2576|code|LDR             PC, [R12,#(fopen64_ptr - 0x12A10)]!; __imp_fopen64|168-245-188-229
2580|code|ADR             R12, 0xA1C|0-198-143-226
2584|code|ADD             R12, R12, #0x12000|18-202-140-226
2588|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x12A1C)]!; __imp_sg_get_num|160-245-188-229
2592|code|ADR             R12, 0xA28|0-198-143-226
2596|code|ADD             R12, R12, #0x12000|18-202-140-226
2600|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x12A28)]!; __imp_sg_cmds_open_device|152-245-188-229
2604|code|ADR             R12, 0xA34|0-198-143-226
2608|code|ADD             R12, R12, #0x12000|18-202-140-226
2612|code|LDR             PC, [R12,#(abort_ptr - 0x12A34)]!; __imp_abort|144-245-188-229
2616|code|ADR             R12, 0xA40|0-198-143-226
2620|code|ADD             R12, R12, #0x12000|18-202-140-226
2624|code|LDR             PC, [R12,#(strspn_ptr - 0x12A40)]!; __imp_strspn|136-245-188-229
2628|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2632|code|SUBW            SP, SP, #0xE54|173-246-84-109
2636|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xA5C)|223-248-44-104
2640|code|MOVS            R5, #0|0-37
2642|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x12F6C)|223-248-44-56
2646|code|ADD             R4, SP, #0xE78+var_E3C|15-172
2648|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
2650|code|LDR.W           R10, =(aAgHihlNTVv - 0xA6A); "ag:hIHl:n:t:vV"|223-248-40-168
2654|code|LDR.W           R9, =(off_13008 - 0xA70); "anchor"|223-248-40-152
2658|code|MOV             R7, R0|7-70
2660|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
2662|code|ADD             R10, PC; "ag:hIHl:n:t:vV"|250-68
2664|code|LDR.W           R2, =(aD - 0xA78); "%d"|223-248-32-40
2668|code|ADD             R9, PC; off_13008|249-68
2670|code|MOV             R8, R1|136-70
2672|code|MOV             R11, R5|171-70
2674|code|STR             R3, [SP,#0xE78+var_E64]|5-147
2676|code|ADD             R2, PC; "%d"|122-68
2678|code|LDR             R3, [R3]|27-104
2680|code|STR             R2, [SP,#0xE78+var_E4C]|11-146
2682|code|MOVS            R2, #0x3C ; '<'|60-34
2684|code|STR             R5, [SP,#0xE78+var_E60]|6-149
2686|code|STR             R5, [SP,#0xE78+var_E58]|8-149
2688|code|STR             R5, [SP,#0xE78+accept]|9-149
2690|code|STR             R5, [SP,#0xE78+var_E50]|10-149
2692|code|STR             R2, [SP,#0xE78+var_E5C]|7-146
2694|code|STR.W           R3, [SP,#0xE78+var_2C]|205-248-76-62
2698|code|STR             R4, [SP,#0xE78+longind]; longind|0-148
2700|code|MOV             R3, R9; longopts|75-70
2702|code|MOV.W           LR, #0|79-240-0-14
2706|code|MOV             R0, R7; argc|56-70
2708|code|MOV             R1, R8; argv|65-70
2710|code|MOV             R2, R10; shortopts|82-70
2712|code|STR.W           LR, [R4]|196-248-0-224
2716|code|BLX             getopt_long|255-247-138-239
2720|code|ADDS            R3, R0, #1|67-28
2722|code|BEQ.W           loc_BC0|0-240-141-128
2726|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
2730|code|CMP             R3, #0x37|55-43
2732|code|BHI             def_AAE; jumptable 00000AAE default case, cases 64-72,74-85,87-96,98-102,105-107,109,111-115,117|123-216
2734|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
2738|data|DCB 0x73; jump table for switch statement|115
2739|data|DCB 0x7A|122
2740|data|DCB 0x7A|122
2741|data|DCB 0x7A|122
2742|data|DCB 0x7A|122
2743|data|DCB 0x7A|122
2744|data|DCB 0x7A|122
2745|data|DCB 0x7A|122
2746|data|DCB 0x7A|122
2747|data|DCB 0x7A|122
2748|data|DCB 0x6D|109
2749|data|DCB 0x7A|122
2750|data|DCB 0x7A|122
2751|data|DCB 0x7A|122
2752|data|DCB 0x7A|122
2753|data|DCB 0x7A|122
2754|data|DCB 0x7A|122
2755|data|DCB 0x7A|122
2756|data|DCB 0x7A|122
2757|data|DCB 0x7A|122
2758|data|DCB 0x7A|122
2759|data|DCB 0x7A|122
2760|data|DCB 0x7A|122
2761|data|DCB 0x58|88
2762|data|DCB 0x7A|122
2763|data|DCB 0x7A|122
2764|data|DCB 0x7A|122
2765|data|DCB 0x7A|122
2766|data|DCB 0x7A|122
2767|data|DCB 0x7A|122
2768|data|DCB 0x7A|122
2769|data|DCB 0x7A|122
2770|data|DCB 0x7A|122
2771|data|DCB 0x7A|122
2772|data|DCB 0x54|84
2773|data|DCB 0x7A|122
2774|data|DCB 0x7A|122
2775|data|DCB 0x7A|122
2776|data|DCB 0x7A|122
2777|data|DCB 0x7A|122
2778|data|DCB 0x38|56
2779|data|DCB 0x73|115
2780|data|DCB 0x7A|122
2781|data|DCB 0x7A|122
2782|data|DCB 0x7A|122
2783|data|DCB 0x32|50
2784|data|DCB 0x7A|122
2785|data|DCB 0x2C|44
2786|data|DCB 0x7A|122
2787|data|DCB 0x7A|122
2788|data|DCB 0x7A|122
2789|data|DCB 0x7A|122
2790|data|DCB 0x7A|122
2791|data|DCB 0x1E|30
2792|data|DCB 0x7A|122
2793|data|DCB 0x1C|28
2794|code|ADDS            R5, #1; jumptable 00000AAE case 118|1-53
2796|code|B               loc_A8A|205-231
2798|code|LDR.W           R3, =(optarg_ptr - 0x12F6C); jumptable 00000AAE case 116|223-248-160-55
2802|code|LDR             R3, [R6,R3]; optarg|243-88
2804|code|LDR             R0, [R3]; buf|24-104
2806|code|BLX             sg_get_num|255-247-142-239
2810|code|SUBS            R3, R0, #0|3-30
2812|code|STR             R3, [SP,#0xE78+var_E5C]|7-147
2814|code|BLT.W           loc_F20|192-242-15-130
2818|code|BNE             loc_A8A|194-209
2820|code|MOVS            R3, #0x3C ; '<'|60-35
2822|code|STR             R3, [SP,#0xE78+var_E5C]|7-147
2824|code|B               loc_A8A|191-231
2826|code|LDR.W           R3, =(optarg_ptr - 0x12F6C); jumptable 00000AAE case 110|223-248-132-55
2830|code|LDR             R3, [R6,R3]; optarg|243-88
2832|code|LDR             R3, [R3]|27-104
2834|code|STR             R3, [SP,#0xE78+accept]|9-147
2836|code|B               loc_A8A|185-231
2838|code|LDR.W           R3, =(optarg_ptr - 0x12F6C); jumptable 00000AAE case 108|223-248-120-55
2842|code|LDR             R3, [R6,R3]; optarg|243-88
2844|code|LDR.W           R11, [R3]|211-248-0-176
2848|code|B               loc_A8A|179-231
2850|code|LDR.W           R3, =(optarg_ptr - 0x12F6C); jumptable 00000AAE case 103|223-248-108-55
2854|code|ADD.W           R12, SP, #0xE78+var_E40|13-241-56-12
2858|code|STR.W           R12, [SP,#0xE78+var_E50]|205-248-40-192
2862|code|LDR             R1, [SP,#0xE78+var_E4C]|11-153
2864|code|MOV             R2, R12|98-70
2866|code|LDR             R3, [R6,R3]; optarg|243-88
2868|code|LDR             R0, [R3]|24-104
2870|code|BLX             __isoc99_sscanf|255-247-80-239
2874|code|CMP             R0, #1|1-40
2876|code|BNE             loc_B4C|6-209
2878|code|LDR.W           R12, [SP,#0xE78+var_E50]|221-248-40-192
2882|code|LDR.W           R3, [R12]|220-248-0-48
2886|code|CMP             R3, #0x1F|31-43
2888|code|STR             R3, [SP,#0xE78+var_E50]|10-147
2890|code|BLS             loc_A8A|158-217
2892|code|LDR.W           R0, =(aValueForGrpnum - 0xB56); "value for '--grpnum=' must be 0 to 31\n"|223-248-68-7
2896|code|MOVS            R5, #1|1-37
2898|code|ADD             R0, PC; "value for '--grpnum=' must be 0 to 31\n"|120-68
2900|code|BL              sub_149C|0-240-162-252
2904|code|B               loc_B74|12-224
2906|code|LDR             R3, [SP,#0xE78+var_E60]; jumptable 00000AAE case 97|6-155
2908|code|ADDS            R3, #1|1-51
2910|code|STR             R3, [SP,#0xE78+var_E60]|6-147
2912|code|B               loc_A8A|147-231
2914|code|LDR.W           R0, =(aVersionS - 0xB70); jumptable 00000AAE case 86|223-248-52-7
2918|code|MOVS            R5, #0|0-37
2920|code|LDR.W           R1, =(a10720140423 - 0xB72); "1.07 20140423"|223-248-48-23
2924|code|ADD             R0, PC; "version: %s\n"|120-68
2926|code|ADD             R1, PC; "1.07 20140423"|121-68
2928|code|BL              sub_149C|0-240-148-252
2932|code|LDR             R3, [SP,#0xE78+var_E64]|5-155
2934|code|MOV             R0, R5|40-70
2936|code|LDR.W           R2, [SP,#0xE78+var_2C]|221-248-76-46
2940|code|LDR             R3, [R3]|27-104
2942|code|CMP             R2, R3|154-66
2944|code|BNE.W           loc_126E|64-240-117-131
2948|code|ADDW            SP, SP, #0xE54|13-246-84-109
2952|code|POP.W           {R4-R11,PC}|189-232-240-143
2956|code|LDR.W           R3, =(optarg_ptr - 0x12F6C); jumptable 00000AAE case 73|223-248-0-55
2960|code|LDR             R3, [R6,R3]; optarg|243-88
2962|code|LDR             R3, [R3]|27-104
2964|code|STR             R3, [SP,#0xE78+var_E58]|8-147
2966|code|B               loc_A8A|120-231
2968|code|LDR.W           R0, =(aUsageSgUnmapAn - 0xBA2); jumptable 00000AAE cases 63,104|223-248-4-7
2972|code|MOVS            R5, #0|0-37
2974|code|ADD             R0, PC; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|120-68
2976|code|BL              sub_149C|0-240-124-252
2980|code|B               loc_B74|230-231
2982|code|MOV             R1, R0; jumptable 00000AAE default case, cases 64-72,74-85,87-96,98-102,105-107,109,111-115,117|1-70
2984|code|LDR.W           R0, =(aUnrecognisedOp - 0xBB2); "unrecognised option code 0x%x ??\n"|223-248-248-6
2988|code|MOVS            R5, #1|1-37
2990|code|ADD             R0, PC; "unrecognised option code 0x%x ??\n"|120-68
2992|code|BL              sub_149C|0-240-116-252
2996|code|LDR.W           R0, =(aUsageSgUnmapAn - 0xBBC); "Usage: sg_unmap [--anchor] [--grpnum=GN"...|223-248-240-6
3000|code|ADD             R0, PC; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|120-68
3002|code|BL              sub_149C|0-240-111-252
3006|code|B               loc_B74|217-231
3008|code|LDR.W           R3, =(optind_ptr - 0x12F6C)|223-248-232-54
3012|code|STR.W           R11, [SP,#0xE78+var_E4C]|205-248-44-176
3016|code|LDR.W           R10, [SP,#0xE78+accept]|221-248-36-160
3020|code|LDR.W           R9, [R6,R3]; optind|86-248-3-144
3024|code|LDR.W           R3, [R9]|217-248-0-48
3028|code|CMP             R7, R3|159-66
3030|code|BLE             loc_C18|31-221
3032|code|ADDS            R2, R3, #1|90-28
3034|code|LDR.W           R3, [R8,R3,LSL#2]|88-248-35-48
3038|code|CMP             R7, R2|151-66
3040|code|STR.W           R2, [R9]|201-248-0-32
3044|code|STR             R3, [SP,#0xE78+device_name]|12-147
3046|code|BLE             loc_C30|35-221
3048|code|LDR.W           R4, =(aUnexpectedExtr - 0xBF2); "Unexpected extra argument: %s\n"|223-248-196-70
3052|code|MOV             R5, R9|77-70
3054|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3056|code|B               loc_C02|7-224
3058|code|LDR.W           R1, [R8,R3,LSL#2]|88-248-35-16
3062|code|MOV             R0, R4|32-70
3064|code|BL              sub_149C|0-240-80-252
3068|code|LDR             R3, [R5]|43-104
3070|code|ADDS            R3, #1|1-51
3072|code|STR             R3, [R5]|43-96
3074|code|LDR.W           R3, [R9]|217-248-0-48
3078|code|CMP             R7, R3|159-66
3080|code|BGT             loc_BF2|243-220
3082|code|LDR.W           R0, =(aUsageSgUnmapAn - 0xC14); "Usage: sg_unmap [--anchor] [--grpnum=GN"...|223-248-168-6
3086|code|MOVS            R5, #1|1-37
3088|code|ADD             R0, PC; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|120-68
3090|code|BL              sub_149C|0-240-67-252
3094|code|B               loc_B74|173-231
3096|code|LDR.W           R0, =(aMissingDeviceN - 0xC22); "missing device name!\n"|223-248-156-6
3100|code|MOVS            R5, #1|1-37
3102|code|ADD             R0, PC; "missing device name!\n"|120-68
3104|code|BL              sub_149C|0-240-60-252
3108|code|LDR.W           R0, =(aUsageSgUnmapAn - 0xC2C); "Usage: sg_unmap [--anchor] [--grpnum=GN"...|223-248-148-6
3112|code|ADD             R0, PC; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|120-68
3114|code|BL              sub_149C|0-240-55-252
3118|code|B               loc_B74|161-231
3120|code|LDR             R3, [SP,#0xE78+device_name]|12-155
3122|code|CMP             R3, #0|0-43
3124|code|BEQ             loc_C18|240-208
3126|code|LDR             R3, [SP,#0xE78+var_E58]|8-155
3128|code|CMP             R3, #0|0-43
3130|code|BEQ.W           loc_E2C|0-240-247-128
3134|code|LDR             R3, [SP,#0xE78+accept]|9-155
3136|code|CMP             R3, #0|0-43
3138|code|BNE.W           loc_F0C|64-240-99-129
3142|code|MOVS.W          R7, R11|27-241-0-7
3146|code|IT NE|24-191
3148|code|MOVNE           R7, #1|1-39
3150|code|CMP             R7, #0|0-47
3152|code|BNE.W           loc_F0C|64-240-92-129
3156|code|MOV             R1, R7; c|57-70
3158|code|MOV.W           R2, #0x400; n|79-244-128-98
3162|code|ADD             R0, SP, #0xE78+s; s|144-168
3164|code|BLX             memset|255-247-194-238
3168|code|MOV             R1, R7; c|57-70
3170|code|MOV.W           R2, #0x200; n|79-244-0-114
3174|code|ADD             R0, SP, #0xE78+var_E38; s|16-168
3176|code|BLX             memset|255-247-188-238
3180|code|LDR             R0, [SP,#0xE78+var_E58]; s|8-152
3182|code|BLX             strlen|255-247-168-238
3186|code|CMP             R0, #1|1-40
3188|code|BEQ.W           loc_F2C|0-240-90-129
3192|code|LDR.W           R1, =(aR - 0xC82); "r"|223-248-68-22
3196|code|LDR             R0, [SP,#0xE78+var_E58]|8-152
3198|code|ADD             R1, PC; "r"|121-68
3200|code|BLX             fopen64|255-247-194-238
3204|code|MOV             R2, R0|2-70
3206|code|CMP             R0, #0|0-40
3208|code|BEQ.W           loc_1222|0-240-203-130
3212|code|MOVS            R3, #0|0-35
3214|code|STR             R3, [SP,#0xE78+var_E4C]|11-147
3216|code|LDR.W           R3, =(a0123456789aabb - 0xCA4); "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP "...|223-248-48-54
3220|code|MOVS            R6, #0|0-38
3222|code|ADDW            R9, SP, #0xE78+var_834|13-242-68-105
3226|code|MOV             R7, R6|55-70
3228|code|MOV             R11, R2|147-70
3230|code|MOV             R8, R4|160-70
3232|code|ADD             R3, PC; "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP "...|123-68
3234|code|STR             R5, [SP,#0xE78+var_E44]|13-149
3236|code|STR             R3, [SP,#0xE78+accept]|9-147
3238|code|MOV             R0, R9; s|72-70
3240|code|MOV.W           R1, #0x400; n|79-244-128-97
3244|code|MOV             R2, R11; stream|90-70
3246|code|BLX             fgets|255-247-82-238
3250|code|CMP             R0, #0|0-40
3252|code|BEQ             loc_DA2|117-208
3254|code|MOV             R0, R9; s|72-70
3256|code|BLX             strlen|255-247-130-238
3260|code|SUBS            R5, R0, #0|5-30
3262|code|BLE             loc_D9A|108-221
3264|code|SUBS            R3, R5, #1|107-30
3266|code|LDRB.W          R2, [R9,R3]|25-248-3-32
3270|code|CMP             R2, #0xA|10-42
3272|code|BEQ.W           loc_E1E|0-240-169-128
3276|code|LDRB.W          R3, [R9]|153-248-0-48
3280|code|CMP             R3, #0x20 ; ' '|32-43
3282|code|BEQ             loc_CE2|6-208
3284|code|SUB.W           R1, R3, #9|163-241-9-1
3288|code|NEGS            R2, R1|74-66
3290|code|ADCS            R2, R1|74-65
3292|code|CMP             R2, #0|0-42
3294|code|BEQ.W           loc_F06|0-240-18-129
3298|code|ADDW            R2, SP, #0xE78+var_833|13-242-69-98
3302|code|MOVS            R1, #0|0-33
3304|code|LDRB            R3, [R2]|19-120
3306|code|MOV             R10, R2|146-70
3308|code|ADDS            R1, #1|1-49
3310|code|ADDS            R2, #1|1-50
3312|code|CMP             R3, #9|9-43
3314|code|IT NE|24-191
3316|code|CMPNE           R3, #0x20 ; ' '|32-43
3318|code|BEQ             loc_CE8|247-208
3320|code|CMP             R5, R1|141-66
3322|code|MOV             R4, R1|12-70
3324|code|BEQ             loc_D9A|77-208
3326|code|CMP             R3, #0x23 ; '#'|35-43
3328|code|BEQ             loc_D9A|75-208
3330|code|MOV             R0, R10; s|80-70
3332|code|LDR             R1, [SP,#0xE78+accept]; accept|9-153
3334|code|BLX             strspn|255-247-152-238
3338|code|RSB.W           R12, R4, R5|196-235-5-12
3342|code|CMP             R12, R0|132-69
3344|code|BLE             loc_D1C|4-221
3346|code|LDRB.W          R3, [R10,R0]|26-248-0-48
3350|code|CMP             R3, #0x23 ; '#'|35-43
3352|code|BNE.W           loc_11D0|64-240-90-130
3356|code|MOVS            R4, #0|0-36
3358|code|MOV             R0, R10; buf|80-70
3360|code|BLX             sg_get_llnum|255-247-102-238
3364|code|ADDS            R3, R1, #1|75-28
3366|code|IT EQ|8-191
3368|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3372|code|BEQ.W           loc_EE2|0-240-217-128
3376|code|ADDS            R3, R4, R6|163-25
3378|code|AND.W           R2, R3, #1|3-240-1-2
3382|code|ASRS            R5, R3, #1|93-16
3384|code|CMP             R5, #0x7F|127-45
3386|code|BGT.W           loc_ED8|0-243-205-128
3390|code|CMP             R2, #0|0-42
3392|code|BEQ             loc_E0C|100-208
3394|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
3398|code|CMP             R2, R0|130-66
3400|code|MOV.W           R3, #0|79-240-0-3
3404|code|SBCS            R3, R1|139-65
3406|code|BLT.W           loc_F42|192-242-248-128
3410|code|ADD.W           R3, SP, #0xE78+var_28|13-245-101-99
3414|code|ADD.W           R3, R3, R5,LSL#2|3-235-133-3
3418|code|SUB.W           R3, R3, #0xE10|163-245-97-99
3422|code|STR             R0, [R3]|24-96
3424|code|LDRB.W          R3, [R10]|154-248-0-48
3428|code|CBZ             R3, loc_D96|187-177
3430|code|CMP             R3, #0x20 ; ' '|32-43
3432|code|IT NE|24-191
3434|code|CMPNE           R3, #0x2C ; ','|44-43
3436|code|BEQ.W           loc_EF0|0-240-192-128
3440|code|CMP             R3, #9|9-43
3442|code|BNE             loc_D8E|12-209
3444|code|B               loc_EF0|188-224
3446|code|CMP             R3, #0x20 ; ' '|32-43
3448|code|IT NE|24-191
3450|code|CMPNE           R3, #0x2C ; ','|44-43
3452|code|ITE NE|20-191
3454|code|MOVNE           R2, #1|1-34
3456|code|MOVEQ           R2, #0|0-34
3458|code|CMP             R3, #9|9-43
3460|code|ITE EQ|12-191
3462|code|MOVEQ           R2, #0|0-34
3464|code|ANDNE.W         R2, R2, #1|2-240-1-2
3468|code|CBZ             R2, loc_DD0|2-179
3470|code|LDRB.W          R3, [R10,#1]!|26-248-1-63
3474|code|CMP             R3, #0|0-43
3476|code|BNE             loc_D76|239-209
3478|code|ADDS            R2, R4, #1|98-28
3480|code|ADD             R6, R2|22-68
3482|code|ADDS            R7, #1|1-55
3484|code|CMP.W           R7, #0x200|183-245-0-127
3488|code|BNE             loc_CA6|129-209
3490|code|ANDS.W          R1, R6, #1|22-240-1-1
3494|code|LDR             R5, [SP,#0xE78+var_E44]|13-157
3496|code|MOV             R4, R8|68-70
3498|code|BEQ.W           loc_1136|0-240-196-129
3502|code|LDR             R3, [SP,#0xE78+var_E4C]|11-155
3504|code|CMP             R3, #0|0-43
3506|code|BNE.W           loc_11B6|64-240-0-130
3510|code|LDR             R1, [SP,#0xE78+var_E58]|8-153
3512|code|LDR.W           R0, =(aBuildJointArrE - 0xDC0); "build_joint_arr: expect LBA,NUM pairs b"...|223-248-12-5
3516|code|ADD             R0, PC; "build_joint_arr: expect LBA,NUM pairs b"...|120-68
3518|code|BL              sub_149C|0-240-109-251
3522|code|LDR.W           R0, =(aBadArgumentToI - 0xDCC); "bad argument to '--in'\n"|223-248-8-5
3526|code|MOVS            R5, #1|1-37
3528|code|ADD             R0, PC; "bad argument to '--in'\n"|120-68
3530|code|BL              sub_149C|0-240-103-251
3534|code|B               loc_B74|209-230
3536|code|CMP             R3, #0x2C ; ','|44-43
3538|code|IT NE|24-191
3540|code|CMPNE           R3, #0x20 ; ' '|32-43
3542|code|BEQ             loc_DDC|1-208
3544|code|CMP             R3, #9|9-43
3546|code|BNE             loc_DFE|16-209
3548|code|ADD.W           R1, R10, #1|10-241-1-1
3552|code|MOV             R10, R1|138-70
3554|code|LDRB.W          R3, [R1],#1|17-248-1-59
3558|code|CMP             R3, #0x2C ; ','|44-43
3560|code|IT NE|24-191
3562|code|CMPNE           R3, #0x20 ; ' '|32-43
3564|code|ITE EQ|12-191
3566|code|MOVEQ           R2, #1|1-34
3568|code|MOVNE           R2, #0|0-34
3570|code|CMP             R3, #9|9-43
3572|code|IT EQ|8-191
3574|code|ORREQ.W         R2, R2, #1|66-240-1-2
3578|code|CMP             R2, #0|0-42
3580|code|BNE             loc_DE0|240-209
3582|code|CMP             R3, #0|0-43
3584|code|BEQ             loc_D96|201-208
3586|code|ADDS            R4, #1|1-52
3588|code|CMP.W           R4, #0x400|180-245-128-111
3592|code|BNE             loc_D1E|137-209
3594|code|B               loc_D96|196-231
3596|code|ADD.W           R3, SP, #0xE78+var_28|13-245-101-99
3600|code|ADD.W           R3, R3, R5,LSL#3|3-235-197-3
3604|code|SUB.W           R3, R3, #0xC10|163-245-65-99
3608|code|STRD.W          R0, R1, [R3]|195-233-0-1
3612|code|B               loc_D60|160-231
3614|code|MOVS            R2, #0|0-34
3616|code|STRB.W          R2, [R9,R3]|9-248-3-32
3620|code|CMP             R3, #0|0-43
3622|code|BEQ             loc_D9A|184-208
3624|code|MOV             R5, R3|29-70
3626|code|B               loc_CCC|79-231
3628|code|LDR             R2, [SP,#0xE78+accept]|9-154
3630|code|MOVS.W          R3, R11|27-241-0-3
3634|code|IT NE|24-191
3636|code|MOVNE           R3, #1|1-35
3638|code|CMP             R2, #0|0-42
3640|code|BEQ.W           loc_1112|0-240-107-129
3644|code|CMP             R3, #0|0-43
3646|code|BEQ.W           loc_11F2|0-240-216-129
3650|code|LDR             R7, [SP,#0xE78+var_E58]|8-159
3652|code|ADD             R3, SP, #0xE78+var_E38|16-171
3654|code|MOV.W           R2, #0x400; n|79-244-128-98
3658|code|ADD             R0, SP, #0xE78+s; s|144-168
3660|code|MOV             R6, R3|30-70
3662|code|STR             R3, [SP,#0xE78+var_E44]|13-147
3664|code|MOV             R1, R7; c|57-70
3666|code|BLX             memset|255-247-200-237
3670|code|MOV             R0, R6; s|48-70
3672|code|MOV             R1, R7; c|57-70
3674|code|MOV.W           R2, #0x200; n|79-244-0-114
3678|code|BLX             memset|255-247-194-237
3682|code|MOV             R0, R11; s|88-70
3684|code|BLX             strlen|255-247-172-237
3688|code|LDRB.W          R3, [R11]|155-248-0-48
3692|code|CMP             R3, #0x2D ; '-'|45-43
3694|code|MOV             R6, R0|6-70
3696|code|BEQ.W           loc_1254|0-240-240-129
3700|code|LDR.W           R1, =(a0123456789aabb_0 - 0xE7E); "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP,"...|223-248-88-20
3704|code|MOV             R0, R11; s|88-70
3706|code|ADD             R1, PC; "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP,"...|121-68
3708|code|BLX             strspn|255-247-220-237
3712|code|CMP             R6, R0|134-66
3714|code|BNE.W           loc_1120|64-240-77-129
3718|code|ADD.W           R8, SP, #0xE78+var_C40|13-245-14-120
3722|code|LDR             R6, [SP,#0xE78+var_E58]|8-158
3724|code|MOV             R7, R8|71-70
3726|code|B               loc_E9E|6-224
3728|code|CBZ             R0, loc_ED4|0-179
3730|code|ADDS            R6, #1|1-54
3732|code|ADD.W           R11, R0, #1|0-241-1-11
3736|code|CMP             R6, #0x80|128-46
3738|code|BEQ.W           loc_1272|0-240-234-129
3742|code|MOV             R0, R11; buf|88-70
3744|code|BLX             sg_get_llnum|255-247-166-237
3748|code|MOV             R3, R1|11-70
3750|code|ADDS            R1, #1|1-49
3752|code|MOV             R2, R0|2-70
3754|code|IT EQ|8-191
3756|code|CMPEQ.W         R2, #0xFFFFFFFF|178-241-255-63
3760|code|BEQ.W           loc_11E0|0-240-150-129
3764|code|MOVS            R1, #0x2C ; ','; c|44-33
3766|code|MOV             R0, R11; s|88-70
3768|code|STRD.W          R2, R3, [R7,#8]!|231-233-2-35
3772|code|BLX             strchr|255-247-134-237
3776|code|MOVS            R1, #0x20 ; ' '; c|32-33
3778|code|MOV             R9, R0|129-70
3780|code|MOV             R0, R11; s|88-70
3782|code|BLX             strchr|255-247-130-237
3786|code|CMP.W           R9, #0|185-241-0-15
3790|code|BEQ             loc_F54|65-208
3792|code|CMP             R9, R0|129-69
3794|code|BHI             loc_E90|221-216
3796|code|MOV             R0, R9|72-70
3798|code|B               loc_E92|220-231
3800|code|LDR             R0, =(aBuildJointArrA - 0xEDE); "build_joint_arr: array length exceeded"...|254-72
3802|code|ADD             R0, PC; "build_joint_arr: array length exceeded"...|120-68
3804|code|BL              sub_149C|0-240-222-250
3808|code|B               loc_DC2|111-231
3810|code|LDRB.W          R3, [R10]|154-248-0-48
3814|code|CMP             R3, #0x23 ; '#'|35-43
3816|code|BNE.W           loc_122E|64-240-161-129
3820|code|SUBS            R4, #1|1-60
3822|code|B               loc_D96|82-231
3824|code|LDRB.W          R3, [R10]|154-248-0-48
3828|code|CMP             R3, #0x2C ; ','|44-43
3830|code|IT NE|24-191
3832|code|CMPNE           R3, #0x20 ; ' '|32-43
3834|code|BEQ.W           loc_DDC|63-244-111-175
3838|code|CMP             R3, #9|9-43
3840|code|BEQ.W           loc_DDC|63-244-108-175
3844|code|B               loc_E02|125-231
3846|code|MOV             R4, R2|20-70
3848|code|MOV             R10, R9|202-70
3850|code|B               loc_CFE|248-230
3852|code|LDR             R0, =(aExpectInByItse - 0xF14); "expect '--in=' by itself, or both '--lb"...|242-72
3854|code|MOVS            R5, #1|1-37
3856|code|ADD             R0, PC; "expect '--in=' by itself, or both '--lb"...|120-68
3858|code|BL              sub_149C|0-240-195-250
3862|code|LDR             R0, =(aUsageSgUnmapAn - 0xF1C); "Usage: sg_unmap [--anchor] [--grpnum=GN"...|241-72
3864|code|ADD             R0, PC; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|120-68
3866|code|BL              sub_149C|0-240-191-250
3870|code|B               loc_B74|41-230
3872|code|LDR             R0, =(aBadArgumentToT - 0xF28); "bad argument to '--timeout'\n"|239-72
3874|code|MOVS            R5, #1|1-37
3876|code|ADD             R0, PC; "bad argument to '--timeout'\n"|120-68
3878|code|BL              sub_149C|0-240-185-250
3882|code|B               loc_B74|35-230
3884|code|LDR             R3, [SP,#0xE78+var_E58]|8-155
3886|code|LDRB            R3, [R3]|27-120
3888|code|CMP             R3, #0x2D ; '-'|45-43
3890|code|BNE.W           loc_C78|127-244-161-174
3894|code|LDR             R3, =(stdin_ptr - 0x12F6C)|235-75
3896|code|STR             R0, [SP,#0xE78+var_E4C]|11-144
3898|code|LDR             R3, [R6,R3]; stdin|243-88
3900|code|LDR             R3, [R3]|27-104
3902|code|MOV             R2, R3|26-70
3904|code|B               loc_C90|166-230
3906|code|LDR             R0, =(aBuildJointArrN - 0xF50); "build_joint_arr: number exceeds 32 bits"...|233-72
3908|code|RSB.W           R2, R9, R10|201-235-10-2
3912|code|ADDS            R1, R7, #1|121-28
3914|code|ADDS            R2, #1|1-50
3916|code|ADD             R0, PC; "build_joint_arr: number exceeds 32 bits"...|120-68
3918|code|BL              sub_149C|0-240-165-250
3922|code|B               loc_DC2|54-231
3924|code|CMP             R0, #0|0-40
3926|code|BNE             loc_E92|156-209
3928|code|LDR.W           R9, [SP,#0xE78+accept]|221-248-36-144
3932|code|MOV             R11, R0|131-70
3934|code|ADDS            R6, #1|1-54
3936|code|MOV             R0, R9; s|72-70
3938|code|BLX             strlen|255-247-46-237
3942|code|LDRB.W          R2, [R9]|153-248-0-32
3946|code|CMP             R2, #0x2D ; '-'|45-42
3948|code|MOV             R7, R0|7-70
3950|code|BEQ.W           loc_1240|0-240-103-129
3954|code|LDR             R1, =(a0123456789aabb_0 - 0xF7A); "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP,"...|222-73
3956|code|LDR             R0, [SP,#0xE78+accept]; s|9-152
3958|code|ADD             R1, PC; "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP,"...|121-68
3960|code|BLX             strspn|255-247-94-237
3964|code|CMP             R7, R0|135-66
3966|code|BNE.W           loc_11FC|64-240-61-129
3970|code|MOV             R7, R11|95-70
3972|code|LDR.W           R9, [SP,#0xE78+accept]|221-248-36-144
3976|code|B               loc_F98|6-224
3978|code|CBZ             R0, loc_FE0|72-179
3980|code|ADDS            R7, #1|1-55
3982|code|ADD.W           R9, R0, #1|0-241-1-9
3986|code|CMP             R7, #0x80|128-47
3988|code|BEQ.W           loc_124A|0-240-89-129
3992|code|MOV             R0, R9; buf|72-70
3994|code|BLX             sg_get_llnum|255-247-42-237
3998|code|MOV             R2, R0|2-70
4000|code|ADDS            R0, R1, #1|72-28
4002|code|IT EQ|8-191
4004|code|CMPEQ.W         R2, #0xFFFFFFFF|178-241-255-63
4008|code|MOV             R3, R1|11-70
4010|code|BEQ.W           loc_1212|0-240-50-129
4014|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
4018|code|CMP             R0, R2|144-66
4020|code|MOV.W           R1, #0|79-240-0-1
4024|code|SBCS            R1, R3|153-65
4026|code|BLT.W           loc_125E|192-242-80-129
4030|code|LDR             R1, [SP,#0xE78+var_E44]|13-153
4032|code|MOV             R0, R9; s|72-70
4034|code|STR.W           R2, [R1,R7,LSL#2]|65-248-39-32
4038|code|MOVS            R1, #0x2C ; ','; c|44-33
4040|code|BLX             strchr|255-247-0-237
4044|code|MOVS            R1, #0x20 ; ' '; c|32-33
4046|code|MOV             R11, R0|131-70
4048|code|MOV             R0, R9; s|72-70
4050|code|BLX             strchr|255-247-252-236
4054|code|CMP.W           R11, #0|187-241-0-15
4058|code|BEQ             loc_FE4|3-208
4060|code|CMP             R11, R0|131-69
4062|code|BHI             loc_F8A|212-216
4064|code|MOV             R0, R11|88-70
4066|code|B               loc_F8C|211-231
4068|code|CMP             R0, #0|0-40
4070|code|BNE             loc_F8C|209-209
4072|code|ADDS            R3, R7, #1|123-28
4074|code|MOV             R1, R0|1-70
4076|code|CMP             R6, R3|158-66
4078|code|BNE.W           loc_1106|64-240-138-128
4082|code|MOV.W           R10, R6,LSL#4|79-234-6-26
4086|code|ADDW            R9, SP, #0xE78+var_834|13-242-68-105
4090|code|ADD.W           R11, R10, #8|10-241-8-11
4094|code|MOVW            R3, #0x808|64-246-8-3
4098|code|MOV             R0, R9|72-70
4100|code|MOV             R2, R11|90-70
4102|code|BLX             __memset_chk|255-247-172-236
4106|code|MOV             LR, R8|198-70
4108|code|MOV             R3, R9|75-70
4110|code|MOVS            R7, #0|0-39
4112|code|LDR.W           R0, [LR,#8]!|94-248-8-15
4116|code|ADDS            R7, #1|1-55
4118|code|LDR.W           R2, [R4,#4]!|84-248-4-47
4122|code|CMP             R7, R6|183-66
4124|code|ADD.W           R3, R3, #0x10|3-241-16-3
4128|code|LDR.W           R1, [LR,#4]|222-248-4-16
4132|code|MOV.W           R12, R0,LSR#24|79-234-16-108
4136|code|STRB.W          R0, [R3,#-1]|3-248-1-12
4140|code|MOV.W           R8, R0,LSR#16|79-234-16-72
4144|code|STRB.W          R12, [R3,#-4]|3-248-4-204
4148|code|MOV.W           R0, R0,LSR#8|79-234-16-32
4152|code|MOV.W           R12, R1,LSR#24|79-234-17-108
4156|code|STRB.W          R1, [R3,#-5]|3-248-5-28
4160|code|STRB.W          R12, [R3,#-8]|3-248-8-204
4164|code|MOV.W           R12, R1,LSR#16|79-234-17-76
4168|code|STRB            R2, [R3,#3]|218-112
4170|code|MOV.W           R1, R1,LSR#8|79-234-17-33
4174|code|STRB.W          R12, [R3,#-7]|3-248-7-204
4178|code|MOV.W           R12, R2,LSR#24|79-234-18-108
4182|code|STRB.W          R1, [R3,#-6]|3-248-6-28
4186|code|MOV.W           R1, R2,LSR#16|79-234-18-65
4190|code|STRB.W          R8, [R3,#-3]|3-248-3-140
4194|code|MOV.W           R2, R2,LSR#8|79-234-18-34
4198|code|STRB.W          R0, [R3,#-2]|3-248-2-12
4202|code|STRB.W          R12, [R3]|131-248-0-192
4206|code|STRB            R1, [R3,#1]|89-112
4208|code|STRB            R2, [R3,#2]|154-112
4210|code|BLT             loc_1010|205-219
4212|code|ADD.W           R3, R10, #6|10-241-6-3
4216|code|LDR             R0, [SP,#0xE78+device_name]; device_name|12-152
4218|code|MOVS            R1, #0; read_only|0-33
4220|code|MOV             R2, R5; verbose|42-70
4222|code|STRB.W          R10, [R9,#3]|137-248-3-160
4226|code|MOV.W           R10, R10,ASR#8|79-234-42-42
4230|code|STRB.W          R3, [R9,#1]|137-248-1-48
4234|code|ASRS            R3, R3, #8|27-18
4236|code|STRB.W          R10, [R9,#2]|137-248-2-160
4240|code|STRB.W          R3, [R9]|137-248-0-48
4244|code|BLX             sg_cmds_open_device|255-247-196-236
4248|code|SUBS            R6, R0, #0|6-30
4250|code|BLT             loc_10F0|41-219
4252|code|STR             R5, [SP,#0xE78+var_E6C]|3-149
4254|code|MOVS            R5, #1|1-37
4256|code|STMEA.W         SP, {R9,R11}|141-232-0-10
4260|code|ADD             R4, SP, #0xE78+var_E40|14-172
4262|code|STR             R5, [SP,#0xE78+var_E70]|2-149
4264|code|LDR             R1, [SP,#0xE78+var_E60]|6-153
4266|code|LDR             R2, [SP,#0xE78+var_E50]|10-154
4268|code|LDR             R3, [SP,#0xE78+var_E5C]|7-155
4270|code|BLX             sg_ll_unmap_v2|255-247-100-236
4274|code|CMP             R0, #2|2-40
4276|code|MOV             R5, R0|5-70
4278|code|STR             R0, [R4]|32-96
4280|code|BEQ             loc_1194|108-208
4282|code|CMP             R0, #6|6-40
4284|code|BEQ             loc_1172|89-208
4286|code|CMP             R0, #0xB|11-40
4288|code|BEQ             loc_117C|92-208
4290|code|CMP             R0, #9|9-40
4292|code|BEQ             loc_1156|71-208
4294|code|CMP             R0, #5|5-40
4296|code|BEQ             loc_11C6|125-208
4298|code|CMP             R0, #0|0-40
4300|code|BNE             loc_11BC|118-209
4302|code|MOV             R0, R6; device_fd|48-70
4304|code|BLX             sg_cmds_close_device|255-247-76-236
4308|code|CMP             R0, #0|0-40
4310|code|STR             R0, [R4]|32-96
4312|code|BGE.W           loc_B74|191-246-76-173
4316|code|NEGS            R0, R0; errnum|64-66
4318|code|MOVS            R5, #0xF|15-37
4320|code|BLX             safe_strerror|255-247-140-236
4324|code|MOV             R1, R0|1-70
4326|code|LDR             R0, =(aCloseErrorS - 0x10EC); "close error: %s\n"|130-72
4328|code|ADD             R0, PC; "close error: %s\n"|120-68
4330|code|BL              sub_149C|0-240-215-249
4334|code|B               loc_B74|65-229
4336|code|NEGS            R0, R6; errnum|112-66
4338|code|MOVS            R5, #0xF|15-37
4340|code|BLX             safe_strerror|255-247-130-236
4344|code|LDR             R1, [SP,#0xE78+device_name]|12-153
4346|code|MOV             R2, R0|2-70
4348|code|LDR             R0, =(aOpenErrorSS - 0x1102); "open error: %s: %s\n"|125-72
4350|code|ADD             R0, PC; "open error: %s: %s\n"|120-68
4352|code|BL              sub_149C|0-240-204-249
4356|code|B               loc_B74|54-229
4358|code|LDR             R0, =(aNeedSameNumber - 0x110E); "need same number of arguments to '--lba"...|124-72
4360|code|MOVS            R5, #1|1-37
4362|code|ADD             R0, PC; "need same number of arguments to '--lba"...|120-68
4364|code|BL              sub_149C|0-240-198-249
4368|code|B               loc_B74|48-229
4370|code|CMP             R3, #0|0-43
4372|code|BEQ             loc_11F2|109-208
4374|code|LDR             R0, =(aSinceLbaIsGive - 0x111C); "since '--lba=' is given, also need '--n"...|121-72
4376|code|ADD             R0, PC; "since '--lba=' is given, also need '--n"...|120-68
4378|code|BL              sub_149C|0-240-191-249
4382|code|B               loc_C0A|116-229
4384|code|ADDS            R1, R0, #1|65-28
4386|code|LDR             R0, =(aBuildLbaArrErr - 0x1128); "build_lba_arr: error at pos %d\n"|119-72
4388|code|ADD             R0, PC; "build_lba_arr: error at pos %d\n"|120-68
4390|code|BL              sub_149C|0-240-185-249
4394|code|LDR             R0, =(aBadArgumentToL - 0x1132); "bad argument to '--lba'\n"|118-72
4396|code|MOVS            R5, #1|1-37
4398|code|ADD             R0, PC; "bad argument to '--lba'\n"|120-68
4400|code|BL              sub_149C|0-240-180-249
4404|code|B               loc_B74|30-229
4406|code|ASRS            R6, R6, #1|118-16
4408|code|CMP             R6, #0|0-46
4410|code|BLE             loc_1186|36-221
4412|code|MOV.W           R10, R6,LSL#4|79-234-6-26
4416|code|MOV             R0, R9|72-70
4418|code|ADD.W           R11, R10, #8|10-241-8-11
4422|code|MOVW            R3, #0x808|64-246-8-3
4426|code|ADD.W           R8, SP, #0xE78+var_C40|13-245-14-120
4430|code|MOV             R2, R11|90-70
4432|code|BLX             __memset_chk|255-247-6-236
4436|code|B               loc_100A|89-231
4438|code|LDR             R0, =(aUnmapNotSuppor - 0x115C); "UNMAP not supported\n"|108-72
4440|code|ADD             R0, PC; "UNMAP not supported\n"|120-68
4442|code|BL              sub_149C|0-240-159-249
4446|code|MOV             R0, R6; device_fd|48-70
4448|code|BLX             sg_cmds_close_device|255-247-4-236
4452|code|CMP             R0, #0|0-40
4454|code|STR             R0, [R4]|32-96
4456|code|BLT             loc_119E|25-219
4458|code|CMP             R5, #0|0-45
4460|code|IT LT|184-191
4462|code|MOVLT           R5, #0x63 ; 'c'|99-37
4464|code|B               loc_B74|0-229
4466|code|LDR             R0, =(aUnmapUnitAtten - 0x1178); "UNMAP, unit attention\n"|102-72
4468|code|ADD             R0, PC; "UNMAP, unit attention\n"|120-68
4470|code|BL              sub_149C|0-240-145-249
4474|code|B               loc_115E|240-231
4476|code|LDR             R0, =(aUnmapAbortedCo - 0x1182); "UNMAP, aborted command\n"|100-72
4478|code|ADD             R0, PC; "UNMAP, aborted command\n"|120-68
4480|code|BL              sub_149C|0-240-140-249
4484|code|B               loc_115E|235-231
4486|code|LDR             R0, =(aNoAddressesFou - 0x1190); "no addresses found in '--in=' argument,"...|99-72
4488|code|MOVS            R5, #1|1-37
4490|code|LDR             R1, [SP,#0xE78+var_E58]|8-153
4492|code|ADD             R0, PC; "no addresses found in '--in=' argument,"...|120-68
4494|code|BL              sub_149C|0-240-133-249
4498|code|B               loc_B74|239-228
4500|code|LDR             R0, =(aUnmapFailedDev - 0x119A); "UNMAP failed, device not ready\n"|96-72
4502|code|ADD             R0, PC; "UNMAP failed, device not ready\n"|120-68
4504|code|BL              sub_149C|0-240-128-249
4508|code|B               loc_115E|223-231
4510|code|NEGS            R0, R0; errnum|64-66
4512|code|BLX             safe_strerror|255-247-44-236
4516|code|MOV             R1, R0|1-70
4518|code|LDR             R0, =(aCloseErrorS - 0x11AC); "close error: %s\n"|93-72
4520|code|ADD             R0, PC; "close error: %s\n"|120-68
4522|code|BL              sub_149C|0-240-119-249
4526|code|CMP             R5, #0|0-45
4528|code|BNE             loc_116A|219-209
4530|code|MOVS            R5, #0xF|15-37
4532|code|B               loc_B74|222-228
4534|code|LDR             R1, =(aStdin_0 - 0x11BC); "stdin"|90-73
4536|code|ADD             R1, PC; "stdin"|121-68
4538|code|B               loc_DB8|253-229
4540|code|LDR             R0, =(aUnmapFailedUse - 0x11C2); "UNMAP failed (use '-v' to get more info"...|89-72
4542|code|ADD             R0, PC; "UNMAP failed (use '-v' to get more info"...|120-68
4544|code|BL              sub_149C|0-240-108-249
4548|code|B               loc_115E|203-231
4550|code|LDR             R0, =(aBadFieldInUnma - 0x11CC); "bad field in UNMAP cdb\n"|88-72
4552|code|ADD             R0, PC; "bad field in UNMAP cdb\n"|120-68
4554|code|BL              sub_149C|0-240-103-249
4558|code|B               loc_115E|198-231
4560|code|ADDS            R2, R0, R4|2-25
4562|code|LDR             R0, =(aBuildJointArrS - 0x11DC); "build_joint_arr: syntax error at line %"...|86-72
4564|code|ADDS            R1, R7, #1|121-28
4566|code|ADDS            R2, #1|1-50
4568|code|ADD             R0, PC; "build_joint_arr: syntax error at line %"...|120-68
4570|code|BL              sub_149C|0-240-95-249
4574|code|B               loc_DC2|240-229
4576|code|LDR             R3, [SP,#0xE78+var_E4C]|11-155
4578|code|LDR             R0, =(aBuildLbaArrErr - 0x11EE); "build_lba_arr: error at pos %d\n"|83-72
4580|code|RSB.W           R1, R3, R11|195-235-11-1
4584|code|ADDS            R1, #1|1-49
4586|code|ADD             R0, PC; "build_lba_arr: error at pos %d\n"|120-68
4588|code|BL              sub_149C|0-240-86-249
4592|code|B               loc_112A|155-231
4594|code|LDR             R0, =(aExpectEitherBo - 0x11F8); "expect either both '--lba=' and '--num="...|80-72
4596|code|ADD             R0, PC; "expect either both '--lba=' and '--num="...|120-68
4598|code|BL              sub_149C|0-240-81-249
4602|code|B               loc_C0A|6-229
4604|code|ADDS            R1, R0, #1|65-28
4606|code|LDR             R0, =(aBuildNumArrErr - 0x1204); "build_num_arr: error at pos %d\n"|78-72
4608|code|ADD             R0, PC; "build_num_arr: error at pos %d\n"|120-68
4610|code|BL              sub_149C|0-240-75-249
4614|code|LDR             R0, =(aBadArgumentToN - 0x120E); "bad argument to '--num'\n"|77-72
4616|code|MOVS            R5, #1|1-37
4618|code|ADD             R0, PC; "bad argument to '--num'\n"|120-68
4620|code|BL              sub_149C|0-240-70-249
4624|code|B               loc_B74|176-228
4626|code|LDR             R0, =(aBuildNumArrErr - 0x121E); "build_num_arr: error at pos %d\n"|75-72
4628|code|RSB.W           R1, R10, R9|202-235-9-1
4632|code|ADDS            R1, #1|1-49
4634|code|ADD             R0, PC; "build_num_arr: error at pos %d\n"|120-68
4636|code|BL              sub_149C|0-240-62-249
4640|code|B               loc_1206|241-231
4642|code|LDR             R0, =(aBuildJointArrU - 0x122A); "build_joint_arr: unable to open %s\n"|72-72
4644|code|LDR             R1, [SP,#0xE78+var_E58]|8-153
4646|code|ADD             R0, PC; "build_joint_arr: unable to open %s\n"|120-68
4648|code|BL              sub_149C|0-240-56-249
4652|code|B               loc_DC2|201-229
4654|code|LDR             R0, =(aBuildJointArrE_0 - 0x123C); "build_joint_arr: error on line %d, at p"...|70-72
4656|code|RSB.W           R2, R9, R10|201-235-10-2
4660|code|ADDS            R1, R7, #1|121-28
4662|code|ADDS            R2, #1|1-50
4664|code|ADD             R0, PC; "build_joint_arr: error on line %d, at p"...|120-68
4666|code|BL              sub_149C|0-240-47-249
4670|code|B               loc_DC2|192-229
4672|code|LDR             R0, =(aLenCannotBeRea - 0x1246); "'--len' cannot be read from stdin\n"|66-72
4674|code|ADD             R0, PC; "'--len' cannot be read from stdin\n"|120-68
4676|code|BL              sub_149C|0-240-42-249
4680|code|B               loc_1206|221-231
4682|code|LDR             R0, =(aBuildNumArrArr - 0x1250); "build_num_arr: array length exceeded\n"|65-72
4684|code|ADD             R0, PC; "build_num_arr: array length exceeded\n"|120-68
4686|code|BL              sub_149C|0-240-37-249
4690|code|B               loc_1206|216-231
4692|code|LDR             R0, =(aLbaCannotBeRea - 0x125A); "'--lba' cannot be read from stdin\n"|63-72
4694|code|ADD             R0, PC; "'--lba' cannot be read from stdin\n"|120-68
4696|code|BL              sub_149C|0-240-32-249
4700|code|B               loc_112A|101-231
4702|code|LDR             R0, =(aBuildNumArrNum - 0x126A); "build_num_arr: number exceeds 32 bits a"...|62-72
4704|code|RSB.W           R1, R10, R9|202-235-9-1
4708|code|ADDS            R1, #1|1-49
4710|code|ADD             R0, PC; "build_num_arr: number exceeds 32 bits a"...|120-68
4712|code|BL              sub_149C|0-240-24-249
4716|code|B               loc_1206|203-231
4718|code|BLX             __stack_chk_fail|255-247-138-235
4722|code|LDR             R0, =(aBuildLbaArrArr - 0x1278); "build_lba_arr: array length exceeded\n"|58-72
4724|code|ADD             R0, PC; "build_lba_arr: array length exceeded\n"|120-68
4726|code|BL              sub_149C|0-240-17-249
4730|code|B               loc_112A|86-231
4732|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA5C|16-37-1-0
4736|data|DCD __stack_chk_guard_ptr - 0x12F6C|108-0-0-0
4740|data|DCD aAgHihlNTVv - 0xA6A; "ag:hIHl:n:t:vV"|210-10-0-0
4744|data|DCD off_13008 - 0xA70; "anchor"|152-37-1-0
4748|data|DCD aD - 0xA78; "%d"|212-10-0-0
4752|data|DCD optarg_ptr - 0x12F6C|144-0-0-0
4756|data|DCD aValueForGrpnum - 0xB56; "value for '--grpnum=' must be 0 to 31\n"|250-9-0-0
4760|data|DCD aVersionS - 0xB70; "version: %s\n"|132-14-0-0
4764|data|DCD a10720140423 - 0xB72; "1.07 20140423"|146-14-0-0
4768|data|DCD aUsageSgUnmapAn - 0xBA2; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|214-9-0-0
4772|data|DCD aUnrecognisedOp - 0xBB2; "unrecognised option code 0x%x ??\n"|98-14-0-0
4776|data|DCD aUsageSgUnmapAn - 0xBBC; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|188-9-0-0
4780|data|DCD optind_ptr - 0x12F6C|112-0-0-0
4784|data|DCD aUnexpectedExtr - 0xBF2; "Unexpected extra argument: %s\n"|94-14-0-0
4788|data|DCD aUsageSgUnmapAn - 0xC14; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|100-9-0-0
4792|data|DCD aMissingDeviceN - 0xC22; "missing device name!\n"|22-14-0-0
4796|data|DCD aUsageSgUnmapAn - 0xC2C; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|76-9-0-0
4800|data|DCD aR - 0xC82; "r"|190-18-0-0
4804|data|DCD a0123456789aabb - 0xCA4; "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP "...|20-16-0-0
4808|data|DCD aBuildJointArrE - 0xDC0; "build_joint_arr: expect LBA,NUM pairs b"...|240-15-0-0
4812|data|DCD aBadArgumentToI - 0xDCC; "bad argument to '--in'\n"|120-17-0-0
4816|data|DCD a0123456789aabb_0 - 0xE7E; "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP,"...|194-12-0-0
4820|data|DCD aBuildJointArrA - 0xEDE; "build_joint_arr: array length exceeded"...|58-14-0-0
4824|data|DCD aExpectInByItse - 0xF14; "expect '--in=' by itself, or both '--lb"...|92-11-0-0
4828|data|DCD aUsageSgUnmapAn - 0xF1C; "Usage: sg_unmap [--anchor] [--grpnum=GN"...|92-6-0-0
4832|data|DCD aBadArgumentToT - 0xF28; "bad argument to '--timeout'\n"|172-10-0-0
4836|data|DCD stdin_ptr - 0x12F6C|124-0-0-0
4840|data|DCD aBuildJointArrN - 0xF50; "build_joint_arr: number exceeds 32 bits"...|240-13-0-0
4844|data|DCD a0123456789aabb_0 - 0xF7A; "0123456789aAbBcCdDeEfFhHxXiIkKmMgGtTpP,"...|198-11-0-0
4848|data|DCD aCloseErrorS - 0x10EC; "close error: %s\n"|8-14-0-0
4852|data|DCD aOpenErrorSS - 0x1102; "open error: %s: %s\n"|42-13-0-0
4856|data|DCD aNeedSameNumber - 0x110E; "need same number of arguments to '--lba"...|70-11-0-0
4860|data|DCD aSinceLbaIsGive - 0x111C; "since '--lba=' is given, also need '--n"...|144-9-0-0
4864|data|DCD aBuildLbaArrErr - 0x1128; "build_lba_arr: error at pos %d\n"|68-10-0-0
4868|data|DCD aBadArgumentToL - 0x1132; "bad argument to '--lba'\n"|214-13-0-0
4872|data|DCD aUnmapNotSuppor - 0x115C; "UNMAP not supported\n"|52-13-0-0
4876|data|DCD aUnmapUnitAtten - 0x1178; "UNMAP, unit attention\n"|232-12-0-0
4880|data|DCD aUnmapAbortedCo - 0x1182; "UNMAP, aborted command\n"|246-12-0-0
4884|data|DCD aNoAddressesFou - 0x1190; "no addresses found in '--in=' argument,"...|104-12-0-0
4888|data|DCD aUnmapFailedDev - 0x119A; "UNMAP failed, device not ready\n"|166-12-0-0
4892|data|DCD aCloseErrorS - 0x11AC; "close error: %s\n"|72-13-0-0
4896|data|DCD aStdin_0 - 0x11BC; "stdin"|120-3-0-0
4900|data|DCD aUnmapFailedUse - 0x11C2; "UNMAP failed (use '-v' to get more info"...|254-12-0-0
4904|data|DCD aBadFieldInUnma - 0x11CC; "bad field in UNMAP cdb\n"|220-12-0-0
4908|data|DCD aBuildJointArrS - 0x11DC; "build_joint_arr: syntax error at line %"...|8-11-0-0
4912|data|DCD aBuildLbaArrErr - 0x11EE; "build_lba_arr: error at pos %d\n"|126-9-0-0
4916|data|DCD aExpectEitherBo - 0x11F8; "expect either both '--lba=' and '--num="...|228-8-0-0
4920|data|DCD aBuildNumArrErr - 0x1204; "build_num_arr: error at pos %d\n"|212-9-0-0
4924|data|DCD aBadArgumentToN - 0x120E; "bad argument to '--num'\n"|22-13-0-0
4928|data|DCD aBuildNumArrErr - 0x121E; "build_num_arr: error at pos %d\n"|186-9-0-0
4932|data|DCD aBuildJointArrU - 0x122A; "build_joint_arr: unable to open %s\n"|106-10-0-0
4936|data|DCD aBuildJointArrE_0 - 0x123C; "build_joint_arr: error on line %d, at p"...|68-11-0-0
4940|data|DCD aLenCannotBeRea - 0x1246; "'--len' cannot be read from stdin\n"|110-9-0-0
4944|data|DCD aBuildNumArrArr - 0x1250; "build_num_arr: array length exceeded\n"|220-9-0-0
4948|data|DCD aLbaCannotBeRea - 0x125A; "'--lba' cannot be read from stdin\n"|194-8-0-0
4952|data|DCD aBuildNumArrNum - 0x126A; "build_num_arr: number exceeds 32 bits a"...|142-9-0-0
4956|data|DCD aBuildLbaArrArr - 0x1278; "build_lba_arr: array length exceeded\n"|20-9-0-0
4960|code|MOV.W           R11, #0|79-240-0-11
4964|code|MOV.W           LR, #0|79-240-0-14
4968|code|POP             {R1}; argc|2-188
4970|code|MOV             R2, SP; ubp_av|106-70
4972|code|PUSH            {R2}; stack_end|4-180
4974|code|PUSH            {R0}; rtld_fini|1-180
4976|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1398)|223-248-36-160
4980|code|ADR             R3, off_1398|8-163
4982|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4984|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F6C)|223-248-32-192
4988|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4992|code|PUSH.W          {R12}; fini|77-248-4-205
4996|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F6C)|6-75
4998|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
5002|code|LDR             R0, =(main_ptr - 0x12F6C)|6-72
5004|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
5008|code|BLX             __libc_start_main|255-247-254-234
5012|code|BLX             abort|255-247-74-235
5016|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1398|212-27-1-0
5020|data|DCD __libc_csu_fini_ptr - 0x12F6C|96-0-0-0
5024|data|DCD __libc_csu_init_ptr - 0x12F6C|128-0-0-0
5028|data|DCD main_ptr - 0x12F6C|132-0-0-0
5032|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x13B8)|20-48-159-229
5036|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F6C)|20-32-159-229
5040|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
5044|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
5048|code|CMP             R2, #0|0-0-82-227
5052|code|BXEQ            LR|30-255-47-1
5056|code|B               __gmon_start__|120-253-255-234
5060|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13B8|180-27-1-0
5064|data|DCD __gmon_start___ptr_0 - 0x12F6C|120-0-0-0
5068|code|LDR             R3, =(__bss_start__ - 0x13D4)|7-75
5070|code|LDR             R0, =(__bss_start__ - 0x13D8)|8-72
5072|code|ADD             R3, PC; __bss_start__|123-68
5074|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x13DE)|8-74
5076|code|ADD             R0, PC; __bss_start__|120-68
5078|code|ADDS            R3, #3|3-51
5080|code|SUBS            R3, R3, R0|27-26
5082|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5084|code|CMP             R3, #6|6-43
5086|code|BLS             locret_13E8|3-217
5088|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F6C)|5-75
5090|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
5092|code|CBZ             R3, locret_13E8|3-177
5094|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
5096|code|BX              LR|112-71
5098|data|ALIGN 4|0-191
5100|data|DCD __bss_start__ - 0x13D4|212-28-1-0
5104|data|DCD __bss_start__ - 0x13D8|208-28-1-0
5108|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13DE|142-27-1-0
5112|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F6C|104-0-0-0
5116|code|LDR             R1, =(__bss_start__ - 0x1404)|8-73
5118|code|LDR             R0, =(__bss_start__ - 0x1408)|9-72
5120|code|ADD             R1, PC; __bss_start__|121-68
5122|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x140C)|9-75
5124|code|ADD             R0, PC; __bss_start__|120-68
5126|code|SUBS            R1, R1, R0|9-26
5128|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5130|code|ASRS            R1, R1, #2|137-16
5132|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
5136|code|ASRS            R1, R1, #1|73-16
5138|code|BEQ             locret_141C|3-208
5140|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F6C)|5-74
5142|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
5144|code|CBZ             R3, locret_141C|3-177
5146|code|BX              R3; _ITM_registerTMCloneTable|24-71
5148|code|BX              LR|112-71
5150|data|ALIGN 0x10|0-191
5152|data|DCD __bss_start__ - 0x1404|164-28-1-0
5156|data|DCD __bss_start__ - 0x1408|160-28-1-0
5160|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x140C|96-27-1-0
5164|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F6C|140-0-0-0
5168|code|PUSH            {R3,LR}|8-181
5170|code|LDR             R3, =(__bss_start__ - 0x143A)|10-75
5172|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x143C)|10-74
5174|code|ADD             R3, PC; __bss_start__|123-68
5176|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5178|code|LDRB            R3, [R3]|27-120
5180|code|CBNZ            R3, locret_145A|107-185
5182|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F6C)|9-75
5184|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5186|code|CBZ             R3, loc_144E|35-177
5188|code|LDR             R3, =(off_13004 - 0x144A)|8-75
5190|code|ADD             R3, PC; off_13004|123-68
5192|code|LDR             R0, [R3]; off_13004 ; void *|24-104
5194|code|BLX             __cxa_finalize|255-247-126-234
5198|code|BL              sub_13CC|255-247-189-255
5202|code|LDR             R3, =(__bss_start__ - 0x145A)|6-75
5204|code|MOVS            R2, #1|1-34
5206|code|ADD             R3, PC; __bss_start__|123-68
5208|code|STRB            R2, [R3]|26-112
5210|code|POP             {R3,PC}|8-189
5212|data|DCD __bss_start__ - 0x143A|110-28-1-0
5216|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x143C|48-27-1-0
5220|data|DCD __cxa_finalize_ptr_0 - 0x12F6C|100-0-0-0
5224|data|DCD off_13004 - 0x144A|186-27-1-0
5228|data|DCD __bss_start__ - 0x145A|78-28-1-0
5232|code|LDR             R0, =(dword_12E60 - 0x1478)|7-72
5234|code|PUSH            {R3,LR}|8-181
5236|code|ADD             R0, PC; dword_12E60|120-68
5238|code|LDR             R2, [R0]|2-104
5240|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x147E)|6-75
5242|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5244|code|CBNZ            R2, loc_1484|18-185
5246|code|POP.W           {R3,LR}|189-232-8-64
5250|code|B               sub_13FC|187-231
5252|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F6C)|4-74
5254|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5256|code|CMP             R3, #0|0-43
5258|code|BEQ             loc_147E|248-208
5260|code|BLX             R3; _Jv_RegisterClasses|152-71
5262|code|B               loc_147E|246-231
5264|data|DCD dword_12E60 - 0x1478|232-25-1-0
5268|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x147E|238-26-1-0
5272|data|DCD _Jv_RegisterClasses_ptr - 0x12F6C|136-0-0-0
5276|code|PUSH            {R0-R3}|15-180
5278|code|MOVS            R1, #1|1-33
5280|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x14A8)|13-72
5282|code|PUSH            {R4-R6,LR}|112-181
5284|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
5286|code|LDR             R5, =(__stack_chk_guard_ptr - 0x12F6C)|13-77
5288|code|SUB             SP, SP, #8|130-176
5290|code|ADD             R3, SP, #0x28+varg_r0|6-171
5292|code|LDR             R4, =(stderr_ptr - 0x12F6C)|12-76
5294|code|LDR             R5, [R0,R5]; __stack_chk_guard|69-89
5296|code|LDR.W           R2, [R3],#4|83-248-4-43
5300|code|LDR             R6, [R5]|46-104
5302|code|STR             R3, [SP,#0x28+var_28]|0-147
5304|code|STR             R6, [SP,#0x28+var_24]|1-150
5306|code|LDR             R0, [R0,R4]; stderr|0-89
5308|code|LDR             R0, [R0]|0-104
5310|code|BLX             __vfprintf_chk|255-247-110-234
5314|code|LDR             R2, [SP,#0x28+var_24]|1-154
5316|code|LDR             R3, [R5]|43-104
5318|code|CMP             R2, R3|154-66
5320|code|BNE             loc_14D4|4-209
5322|code|ADD             SP, SP, #8|2-176
5324|code|POP.W           {R4-R6,LR}|189-232-112-64
5328|code|ADD             SP, SP, #0x10|4-176
5330|code|BX              LR|112-71
5332|code|BLX             __stack_chk_fail|255-247-86-234
5336|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x14A8|196-26-1-0
5340|data|DCD __stack_chk_guard_ptr - 0x12F6C|108-0-0-0
5344|data|DCD stderr_ptr - 0x12F6C|116-0-0-0
5348|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5352|code|MOV             R7, R0|7-70
5354|code|LDR             R6, =(off_12E5C - 0x14F6)|12-78
5356|code|MOV             R8, R1|136-70
5358|code|LDR             R5, =(off_12E58 - 0x14FC)|12-77
5360|code|MOV             R9, R2|145-70
5362|code|ADD             R6, PC; off_12E5C|126-68
5364|code|BLX             .init_proc|255-247-24-234
5368|code|ADD             R5, PC; off_12E58|125-68
5370|code|SUBS            R6, R6, R5|118-27
5372|code|ASRS            R6, R6, #2|182-16
5374|code|BEQ             locret_1516|10-208
5376|code|SUBS            R5, #4|4-61
5378|code|MOVS            R4, #0|0-36
5380|code|ADDS            R4, #1|1-52
5382|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5386|code|MOV             R0, R7|56-70
5388|code|MOV             R1, R8|65-70
5390|code|MOV             R2, R9|74-70
5392|code|BLX             R3|152-71
5394|code|CMP             R4, R6|180-66
5396|code|BNE             loc_1504|246-209
5398|code|POP.W           {R3-R9,PC}|189-232-248-131
5402|data|ALIGN 4|0-191
5404|data|DCD off_12E5C - 0x14F6|102-25-1-0
5408|data|DCD off_12E58 - 0x14FC|92-25-1-0
5412|code|BX              LR|112-71
5414|data|ALIGN 4|0-191
5416|code|PUSH            {R3,LR}; _fini|8-64-45-233
5420|code|POP             {R3,PC}|8-128-189-232
77400|data|DCD sub_1470+1|113-20-0-0
77404|data|DCD sub_1430+1|49-20-0-0
77408|data|DCD 0|0-0-0-0
77412|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
77420|data|Elf32_Dyn <1, <0xC9>>; DT_NEEDED libc.so.6|1-0-0-0-201-0-0-0
77428|data|Elf32_Dyn <1, <0x188>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-136-1-0-0
77436|data|Elf32_Dyn <0xC, <0x928>>; DT_INIT|12-0-0-0-40-9-0-0
77444|data|Elf32_Dyn <0xD, <0x1528>>; DT_FINI|13-0-0-0-40-21-0-0
77452|data|Elf32_Dyn <0x19, <0x12E58>>; DT_INIT_ARRAY|25-0-0-0-88-46-1-0
77460|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77468|data|Elf32_Dyn <0x1A, <0x12E5C>>; DT_FINI_ARRAY|26-0-0-0-92-46-1-0
77476|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77484|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77492|data|Elf32_Dyn <5, <0x4E4>>; DT_STRTAB|5-0-0-0-228-4-0-0
77500|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77508|data|Elf32_Dyn <0xA, <0x229>>; DT_STRSZ|10-0-0-0-41-2-0-0
77516|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77524|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77532|data|Elf32_Dyn <3, <0x12F6C>>; DT_PLTGOT|3-0-0-0-108-47-1-0
77540|data|Elf32_Dyn <2, <0xA8>>; DT_PLTRELSZ|2-0-0-0-168-0-0-0
77548|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77556|data|Elf32_Dyn <0x17, <0x880>>; DT_JMPREL|23-0-0-0-128-8-0-0
77564|data|Elf32_Dyn <0x11, <0x7B8>>; DT_REL|17-0-0-0-184-7-0-0
77572|data|Elf32_Dyn <0x12, <0xC8>>; DT_RELSZ|18-0-0-0-200-0-0-0
77580|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77588|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77596|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77604|data|Elf32_Dyn <0x6FFFFFFE, <0x768>>; DT_VERNEED|254-255-255-111-104-7-0-0
77612|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77620|data|Elf32_Dyn <0x6FFFFFF0, <0x70E>>; DT_VERSYM|240-255-255-111-14-7-0-0
77628|data|Elf32_Dyn <0x6FFFFFFA, <0xF>>; DT_RELCOUNT|250-255-255-111-15-0-0-0
77636|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77644|data|ALIGN 0x10|0-0-0-0
77676|data|DCD stru_12E64|100-46-1-0
77680|data|DCD 0|0-0-0-0
77684|data|DCD dword_0|0-0-0-0
77688|data|DCD __imp___cxa_finalize|176-48-1-0
77692|data|DCD __imp_fgets|180-48-1-0
77696|data|DCD __imp___memset_chk|188-48-1-0
77700|data|DCD __imp_sg_cmds_close_device|192-48-1-0
77704|data|DCD __imp_sg_ll_unmap_v2|200-48-1-0
77708|data|DCD __imp___stack_chk_fail|204-48-1-0
77712|data|DCD __imp___libc_start_main|212-48-1-0
77716|data|DCD __imp___vfprintf_chk|216-48-1-0
77720|data|DCD __imp___gmon_start__|24-49-1-0
77724|data|DCD __imp_getopt_long|220-48-1-0
77728|data|DCD __imp_strlen|224-48-1-0
77732|data|DCD __imp_strchr|228-48-1-0
77736|data|DCD __imp___isoc99_sscanf|236-48-1-0
77740|data|DCD __imp_memset|240-48-1-0
77744|data|DCD __imp_sg_get_llnum|244-48-1-0
77748|data|DCD __imp_safe_strerror|248-48-1-0
77752|data|DCD __imp_fopen64|252-48-1-0
77756|data|DCD __imp_sg_get_num|0-49-1-0
77760|data|DCD __imp_sg_cmds_open_device|4-49-1-0
77764|data|DCD __imp_abort|12-49-1-0
77768|data|DCD __imp_strspn|16-49-1-0
77772|data|DCD __libc_csu_fini+1|37-21-0-0
77776|data|DCD __imp___cxa_finalize|176-48-1-0
77780|data|DCD _ITM_deregisterTMCloneTable|20-49-1-0
77784|data|DCD __stack_chk_guard|184-48-1-0
77788|data|DCD optind|196-48-1-0
77792|data|DCD stderr|208-48-1-0
77796|data|DCD __imp___gmon_start__|24-49-1-0
77800|data|DCD stdin|232-48-1-0
77804|data|DCD __libc_csu_init+1|229-20-0-0
77808|data|DCD main+1|69-10-0-0
77812|data|DCD _Jv_RegisterClasses|28-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|32-49-1-0
77820|data|DCD optarg|8-49-1-0
77992|data|% 1; Alternative name is '__bss_start'|255
