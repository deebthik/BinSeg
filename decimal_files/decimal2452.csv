address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|9-15-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x31CC; SHT file offset|204-49-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x2130; File offset|48-33-0-0
60|data|DCD unk_2130; Virtual address|48-33-0-0
64|data|DCD 0x2130; Physical address|48-33-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x213C; Size in file image|60-33-0-0
168|data|DCD 0x213C; Size in memory image|60-33-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E44; File offset|68-46-0-0
188|data|DCD off_12E44; Virtual address|68-46-1-0
192|data|DCD 0x12E44; Physical address|68-46-1-0
196|data|DCD 0x260; Size in file image|96-2-0-0
200|data|DCD 0x27C; Size in memory image|124-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E50; File offset|80-46-0-0
220|data|DCD stru_12E50; Virtual address|80-46-1-0
224|data|DCD 0x12E50; Physical address|80-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E44; File offset|68-46-0-0
316|data|DCD off_12E44; Virtual address|68-46-1-0
320|data|DCD 0x12E44; Physical address|68-46-1-0
324|data|DCD 0x1BC; Size in file image|188-1-0-0
328|data|DCD 0x1BC; Size in memory image|188-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0x12, 0x48, 0xF8, 0x7A, 0xCF, 0x67, 0xA6, 0x66, 0xB8; Desc|18-72-248-122-207-103-166-102-184-177-235-113-195-60-46-138-144-102-2-204
436|data|DCD 3|3-0-0-0
440|data|DCD 0x25|37-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x25, 0x29, 0x2E|37-0-0-0-41-0-0-0-46-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_534 - byte_534, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_534 - byte_534, dword_12E4C, 0, 3, 0, 0x14>|0-0-0-0-76-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_534, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|77-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aItmDeregistert - byte_534, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
612|data|Elf32_Sym <aFree - byte_534, dword_0, 0, 0x12, 0, 0>; "free"|110-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aStackChkGuard - byte_534, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|135-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
644|data|Elf32_Sym <aMemcpy - byte_534, dword_0, 0, 0x12, 0, 0>; "memcpy"|18-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aTime - byte_534, dword_0, 0, 0x12, 0, 0>; "time"|204-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aOptind - byte_534, dword_0, 0, 0x11, 0, 0>; "optind"|185-0-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aStackChkFail - byte_534, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|209-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aPerror - byte_534, dword_0, 0, 0x12, 0, 0>; "perror"|192-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aStderr - byte_534, dword_0, 0, 0x11, 0, 0>; "stderr"|39-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
740|data|Elf32_Sym <aFwrite - byte_534, dword_0, 0, 0x12, 0, 0>; "fwrite"|64-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aIoctl - byte_534, dword_0, 0, 0x12, 0, 0>; "ioctl"|46-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aOpen64 - byte_534, dword_0, 0, 0x12, 0, 0>; "open64"|247-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aPuts - byte_534, dword_0, 0, 0x12, 0, 0>; "puts"|199-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aMalloc - byte_534, dword_0, 0, 0x12, 0, 0>; "malloc"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aLibcStartMain - byte_534, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|92-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aGmonStart - byte_534, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
852|data|Elf32_Sym <aGetoptLong - byte_534, dword_0, 0, 0x12, 0, 0>; "getopt_long"|52-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aExit - byte_534, dword_0, 0, 0x12, 0, 0>; "exit"|174-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aSrand - byte_534, dword_0, 0, 0x12, 0, 0>; "srand"|179-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aSgErrCategory3 - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_err_category3"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aMemset - byte_534, dword_0, 0, 0x12, 0, 0>; "memset"|240-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aPutchar - byte_534, dword_0, 0, 0x12, 0, 0>; "putchar"|226-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aPrintfChk - byte_534, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|161-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aFprintfChk - byte_534, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|254-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aSrand+1 - byte_534, dword_0, 0, 0x12, 0, 0>; "rand"|180-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aFputc - byte_534, dword_0, 0, 0x12, 0, 0>; "fputc"|12-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aJvRegisterclas - byte_534, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1028|data|Elf32_Sym <aSgGetNum - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aItmRegistertmc - byte_534, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1060|data|Elf32_Sym <aOptarg - byte_534, dword_0, 0, 0x11, 0, 0>; "optarg"|32-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1076|data|Elf32_Sym <aAbort - byte_534, dword_0, 0, 0x12, 0, 0>; "abort"|234-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aClose - byte_534, dword_0, 0, 0x12, 0, 0>; "close"|71-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aSgChkNPrint3 - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_chk_n_print3"|135-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aBssEnd+1 - byte_534, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|200-1-0-0-192-48-1-0-0-0-0-0-16-0-24-0
1140|data|Elf32_Sym <aEdata - byte_534, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|166-1-0-0-164-48-1-0-0-0-0-0-16-0-23-0
1156|data|Elf32_Sym <aDataStart - byte_534, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|153-1-0-0-0-48-1-0-0-0-0-0-16-0-23-0
1172|data|Elf32_Sym <aEnd_0 - byte_534, _end, 0, 0x10, 0, 0x18>; "_end"|219-1-0-0-192-48-1-0-0-0-0-0-16-0-24-0
1188|data|Elf32_Sym <aBssEnd - byte_534, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|199-1-0-0-192-48-1-0-0-0-0-0-16-0-24-0
1204|data|Elf32_Sym <aLibcCsuInit - byte_534, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|240-1-0-0-45-24-0-0-64-0-0-0-18-0-13-0
1220|data|Elf32_Sym <aBssStart - byte_534, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|173-1-0-0-164-48-1-0-0-0-0-0-16-0-24-0
1236|data|Elf32_Sym <aLibcStartMain+0xD - byte_534, main+1, 0x428, 0x12, 0, 0xD>; "main"|105-1-0-0-225-10-0-0-40-4-0-0-18-0-13-0
1252|data|Elf32_Sym <aLibcCsuInit+0xA - byte_534, .init_proc, 0, 0x12, 0, 0xB>; "_init"|250-1-0-0-116-9-0-0-0-0-0-0-18-0-11-0
1268|data|Elf32_Sym <aLibcCsuFini - byte_534, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|224-1-0-0-109-24-0-0-2-0-0-0-18-0-13-0
1284|data|Elf32_Sym <aBssStart_0 - byte_534, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|185-1-0-0-164-48-1-0-0-0-0-0-16-0-24-0
1300|data|Elf32_Sym <aLibcCsuFini+0xA - byte_534, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|234-1-0-0-112-24-0-0-0-0-0-0-18-0-14-0
1316|data|Elf32_Sym <aEnd - byte_534, _end, 0, 0x10, 0, 0x18>; "__end__"|211-1-0-0-192-48-1-0-0-0-0-0-16-0-24-0
1332|data|DCB 0|0
1333|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1350|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1378|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1393|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1413|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1439|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1450|data|DCB "sg_err_category3",0|115-103-95-101-114-114-95-99-97-116-101-103-111-114-121-51-0
1467|data|DCB "sg_chk_n_print3",0|115-103-95-99-104-107-95-110-95-112-114-105-110-116-51-0
1483|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1493|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1506|data|DCB "exit",0|101-120-105-116-0
1511|data|DCB "srand",0|115-114-97-110-100-0
1517|data|DCB "optind",0|111-112-116-105-110-100-0
1524|data|DCB "perror",0|112-101-114-114-111-114-0
1531|data|DCB "puts",0|112-117-116-115-0
1536|data|DCB "time",0|116-105-109-101-0
1541|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1558|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1566|data|DCB "abort",0|97-98-111-114-116-0
1572|data|DCB "memset",0|109-101-109-115-101-116-0
1579|data|DCB "open64",0|111-112-101-110-54-52-0
1586|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1600|data|DCB "fputc",0|102-112-117-116-99-0
1606|data|DCB "memcpy",0|109-101-109-99-112-121-0
1613|data|DCB "malloc",0|109-97-108-108-111-99-0
1620|data|DCB "optarg",0|111-112-116-97-114-103-0
1627|data|DCB "stderr",0|115-116-100-101-114-114-0
1634|data|DCB "ioctl",0|105-111-99-116-108-0
1640|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1652|data|DCB "fwrite",0|102-119-114-105-116-101-0
1659|data|DCB "close",0|99-108-111-115-101-0
1665|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1680|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1698|data|DCB "free",0|102-114-101-101-0
1703|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1723|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1741|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1754|data|DCB "_edata",0|95-101-100-97-116-97-0
1761|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1773|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1787|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1799|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1807|data|DCB "_end",0|95-101-110-100-0
1812|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1828|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1844|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1854|data|DCW 0|0-0
1856|data|DCW 0|0-0
1858|data|DCW 0|0-0
1860|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1862|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1864|data|DCW 2; free@@GLIBC_2.4|2-0
1866|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1868|data|DCW 2; memcpy@@GLIBC_2.4|2-0
1870|data|DCW 2; time@@GLIBC_2.4|2-0
1872|data|DCW 2; optind@@GLIBC_2.4|2-0
1874|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1876|data|DCW 2; perror@@GLIBC_2.4|2-0
1878|data|DCW 2; stderr@@GLIBC_2.4|2-0
1880|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1882|data|DCW 2; ioctl@@GLIBC_2.4|2-0
1884|data|DCW 2; open64@@GLIBC_2.4|2-0
1886|data|DCW 2; puts@@GLIBC_2.4|2-0
1888|data|DCW 2; malloc@@GLIBC_2.4|2-0
1890|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1892|data|DCW 0; local  symbol: __gmon_start__|0-0
1894|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1896|data|DCW 2; exit@@GLIBC_2.4|2-0
1898|data|DCW 2; srand@@GLIBC_2.4|2-0
1900|data|DCW 0; local  symbol: sg_err_category3|0-0
1902|data|DCW 2; memset@@GLIBC_2.4|2-0
1904|data|DCW 2; putchar@@GLIBC_2.4|2-0
1906|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
1908|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1910|data|DCW 2; rand@@GLIBC_2.4|2-0
1912|data|DCW 2; fputc@@GLIBC_2.4|2-0
1914|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1916|data|DCW 0; local  symbol: sg_get_num|0-0
1918|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1920|data|DCW 2; optarg@@GLIBC_2.4|2-0
1922|data|DCW 2; abort@@GLIBC_2.4|2-0
1924|data|DCW 2; close@@GLIBC_2.4|2-0
1926|data|DCW 0; local  symbol: sg_chk_n_print3|0-0
1928|data|DCW 1; global symbol: _bss_end__|1-0
1930|data|DCW 1; global symbol: _edata|1-0
1932|data|DCW 1; global symbol: __data_start|1-0
1934|data|DCW 1; global symbol: _end|1-0
1936|data|DCW 1; global symbol: __bss_end__|1-0
1938|data|DCW 1; global symbol: __libc_csu_init|1-0
1940|data|DCW 1; global symbol: __bss_start|1-0
1942|data|DCW 1; global symbol: main|1-0
1944|data|DCW 1; global symbol: _init|1-0
1946|data|DCW 1; global symbol: __libc_csu_fini|1-0
1948|data|DCW 1; global symbol: __bss_start__|1-0
1950|data|DCW 1; global symbol: _fini|1-0
1952|data|DCW 1; global symbol: __end__|1-0
1954|data|DCW 0|0-0
1956|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_534, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-115-1-0-0-16-0-0-0-32-0-0-0
1972|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_534, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-0-2-0-0-0-0-0-0
1988|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_534, 0x10, 0>; "libc.so.6"|1-0-1-0-151-0-0-0-16-0-0-0-0-0-0-0
2004|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_534, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-0-2-0-0-0-0-0-0
2020|data|Elf32_Rel <0x12E44, 0x17>; R_ARM_RELATIVE|68-46-1-0-23-0-0-0
2028|data|Elf32_Rel <0x12E48, 0x17>; R_ARM_RELATIVE|72-46-1-0-23-0-0-0
2036|data|Elf32_Rel <0x12FD0, 0x17>; R_ARM_RELATIVE|208-47-1-0-23-0-0-0
2044|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2052|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2060|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2068|data|Elf32_Rel <0x13014, 0x17>; R_ARM_RELATIVE|20-48-1-0-23-0-0-0
2076|data|Elf32_Rel <0x13024, 0x17>; R_ARM_RELATIVE|36-48-1-0-23-0-0-0
2084|data|Elf32_Rel <0x13034, 0x17>; R_ARM_RELATIVE|52-48-1-0-23-0-0-0
2092|data|Elf32_Rel <0x13044, 0x17>; R_ARM_RELATIVE|68-48-1-0-23-0-0-0
2100|data|Elf32_Rel <0x13054, 0x17>; R_ARM_RELATIVE|84-48-1-0-23-0-0-0
2108|data|Elf32_Rel <0x13064, 0x17>; R_ARM_RELATIVE|100-48-1-0-23-0-0-0
2116|data|Elf32_Rel <0x13074, 0x17>; R_ARM_RELATIVE|116-48-1-0-23-0-0-0
2124|data|Elf32_Rel <0x13084, 0x17>; R_ARM_RELATIVE|132-48-1-0-23-0-0-0
2132|data|Elf32_Rel <0x12FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-47-1-0-21-3-0-0
2140|data|Elf32_Rel <0x12FD8, 0x415>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-47-1-0-21-4-0-0
2148|data|Elf32_Rel <0x12FDC, 0x615>; R_ARM_GLOB_DAT __stack_chk_guard|220-47-1-0-21-6-0-0
2156|data|Elf32_Rel <0x12FE0, 0x915>; R_ARM_GLOB_DAT optind|224-47-1-0-21-9-0-0
2164|data|Elf32_Rel <0x12FE4, 0xC15>; R_ARM_GLOB_DAT stderr|228-47-1-0-21-12-0-0
2172|data|Elf32_Rel <0x12FE8, 0x1315>; R_ARM_GLOB_DAT __gmon_start__|232-47-1-0-21-19-0-0
2180|data|Elf32_Rel <0x12FF4, 0x1E15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-30-0-0
2188|data|Elf32_Rel <0x12FF8, 0x2015>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-32-0-0
2196|data|Elf32_Rel <0x12FFC, 0x2115>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-33-0-0
2204|data|Elf32_Rel <0x12F64, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|100-47-1-0-22-3-0-0
2212|data|Elf32_Rel <0x12F68, 0x516>; R_ARM_JUMP_SLOT free|104-47-1-0-22-5-0-0
2220|data|Elf32_Rel <0x12F6C, 0x716>; R_ARM_JUMP_SLOT memcpy|108-47-1-0-22-7-0-0
2228|data|Elf32_Rel <0x12F70, 0x816>; R_ARM_JUMP_SLOT time|112-47-1-0-22-8-0-0
2236|data|Elf32_Rel <0x12F74, 0xA16>; R_ARM_JUMP_SLOT __stack_chk_fail|116-47-1-0-22-10-0-0
2244|data|Elf32_Rel <0x12F78, 0xB16>; R_ARM_JUMP_SLOT perror|120-47-1-0-22-11-0-0
2252|data|Elf32_Rel <0x12F7C, 0xD16>; R_ARM_JUMP_SLOT fwrite|124-47-1-0-22-13-0-0
2260|data|Elf32_Rel <0x12F80, 0xE16>; R_ARM_JUMP_SLOT ioctl|128-47-1-0-22-14-0-0
2268|data|Elf32_Rel <0x12F84, 0xF16>; R_ARM_JUMP_SLOT open64|132-47-1-0-22-15-0-0
2276|data|Elf32_Rel <0x12F88, 0x1016>; R_ARM_JUMP_SLOT puts|136-47-1-0-22-16-0-0
2284|data|Elf32_Rel <0x12F8C, 0x1116>; R_ARM_JUMP_SLOT malloc|140-47-1-0-22-17-0-0
2292|data|Elf32_Rel <0x12F90, 0x1216>; R_ARM_JUMP_SLOT __libc_start_main|144-47-1-0-22-18-0-0
2300|data|Elf32_Rel <0x12F94, 0x1316>; R_ARM_JUMP_SLOT __gmon_start__|148-47-1-0-22-19-0-0
2308|data|Elf32_Rel <0x12F98, 0x1416>; R_ARM_JUMP_SLOT getopt_long|152-47-1-0-22-20-0-0
2316|data|Elf32_Rel <0x12F9C, 0x1516>; R_ARM_JUMP_SLOT exit|156-47-1-0-22-21-0-0
2324|data|Elf32_Rel <0x12FA0, 0x1616>; R_ARM_JUMP_SLOT srand|160-47-1-0-22-22-0-0
2332|data|Elf32_Rel <0x12FA4, 0x1716>; R_ARM_JUMP_SLOT sg_err_category3|164-47-1-0-22-23-0-0
2340|data|Elf32_Rel <0x12FA8, 0x1816>; R_ARM_JUMP_SLOT memset|168-47-1-0-22-24-0-0
2348|data|Elf32_Rel <0x12FAC, 0x1916>; R_ARM_JUMP_SLOT putchar|172-47-1-0-22-25-0-0
2356|data|Elf32_Rel <0x12FB0, 0x1A16>; R_ARM_JUMP_SLOT __printf_chk|176-47-1-0-22-26-0-0
2364|data|Elf32_Rel <0x12FB4, 0x1B16>; R_ARM_JUMP_SLOT __fprintf_chk|180-47-1-0-22-27-0-0
2372|data|Elf32_Rel <0x12FB8, 0x1C16>; R_ARM_JUMP_SLOT rand|184-47-1-0-22-28-0-0
2380|data|Elf32_Rel <0x12FBC, 0x1D16>; R_ARM_JUMP_SLOT fputc|188-47-1-0-22-29-0-0
2388|data|Elf32_Rel <0x12FC0, 0x1F16>; R_ARM_JUMP_SLOT sg_get_num|192-47-1-0-22-31-0-0
2396|data|Elf32_Rel <0x12FC4, 0x2216>; R_ARM_JUMP_SLOT abort|196-47-1-0-22-34-0-0
2404|data|Elf32_Rel <0x12FC8, 0x2316>; R_ARM_JUMP_SLOT close|200-47-1-0-22-35-0-0
2412|data|Elf32_Rel <0x12FCC, 0x2416>; R_ARM_JUMP_SLOT sg_chk_n_print3|204-47-1-0-22-36-0-0
2420|code|PUSH            {R3,LR}; _init|8-64-45-233
2424|code|BL              sub_F50|116-1-0-235
2428|code|POP             {R3,PC}|8-128-189-232
2432|code|PUSH            {LR}|4-224-45-229
2436|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x990)|4-224-159-229
2440|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2444|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2448|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x990|200-37-1-0
2452|code|ADR             R12, 0x99C|0-198-143-226
2456|code|ADD             R12, R12, #0x12000|18-202-140-226
2460|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x1299C)]!; __imp___cxa_finalize|200-245-188-229
2464|code|ADR             R12, 0x9A8|0-198-143-226
2468|code|ADD             R12, R12, #0x12000|18-202-140-226
2472|code|LDR             PC, [R12,#(free_ptr - 0x129A8)]!; __imp_free|192-245-188-229
2476|code|BX              PC|120-71
2478|data|ALIGN 4|192-70
2480|code|ADR             R12, 0x9B8|0-198-143-226
2484|code|ADD             R12, R12, #0x12000|18-202-140-226
2488|code|LDR             PC, [R12,#(memcpy_ptr - 0x129B8)]!; __imp_memcpy|180-245-188-229
2492|code|ADR             R12, 0x9C4|0-198-143-226
2496|code|ADD             R12, R12, #0x12000|18-202-140-226
2500|code|LDR             PC, [R12,#(time_ptr - 0x129C4)]!; __imp_time|172-245-188-229
2504|code|ADR             R12, 0x9D0|0-198-143-226
2508|code|ADD             R12, R12, #0x12000|18-202-140-226
2512|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x129D0)]!; __imp___stack_chk_fail|164-245-188-229
2516|code|ADR             R12, 0x9DC|0-198-143-226
2520|code|ADD             R12, R12, #0x12000|18-202-140-226
2524|code|LDR             PC, [R12,#(perror_ptr - 0x129DC)]!; __imp_perror|156-245-188-229
2528|code|ADR             R12, 0x9E8|0-198-143-226
2532|code|ADD             R12, R12, #0x12000|18-202-140-226
2536|code|LDR             PC, [R12,#(fwrite_ptr - 0x129E8)]!; __imp_fwrite|148-245-188-229
2540|code|ADR             R12, 0x9F4|0-198-143-226
2544|code|ADD             R12, R12, #0x12000|18-202-140-226
2548|code|LDR             PC, [R12,#(ioctl_ptr - 0x129F4)]!; __imp_ioctl|140-245-188-229
2552|code|ADR             R12, 0xA00|0-198-143-226
2556|code|ADD             R12, R12, #0x12000|18-202-140-226
2560|code|LDR             PC, [R12,#(open64_ptr - 0x12A00)]!; __imp_open64|132-245-188-229
2564|code|BX              PC|120-71
2566|data|ALIGN 4|192-70
2568|code|ADR             R12, 0xA10|0-198-143-226
2572|code|ADD             R12, R12, #0x12000|18-202-140-226
2576|code|LDR             PC, [R12,#(puts_ptr - 0x12A10)]!; __imp_puts|120-245-188-229
2580|code|ADR             R12, 0xA1C|0-198-143-226
2584|code|ADD             R12, R12, #0x12000|18-202-140-226
2588|code|LDR             PC, [R12,#(malloc_ptr - 0x12A1C)]!; __imp_malloc|112-245-188-229
2592|code|ADR             R12, 0xA28|0-198-143-226
2596|code|ADD             R12, R12, #0x12000|18-202-140-226
2600|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x12A28)]!; __imp___libc_start_main|104-245-188-229
2604|code|ADR             R12, 0xA34|0-198-143-226
2608|code|ADD             R12, R12, #0x12000|18-202-140-226
2612|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x12A34)]!; __imp___gmon_start__|96-245-188-229
2616|code|ADR             R12, 0xA40|0-198-143-226
2620|code|ADD             R12, R12, #0x12000|18-202-140-226
2624|code|LDR             PC, [R12,#(getopt_long_ptr - 0x12A40)]!; __imp_getopt_long|88-245-188-229
2628|code|ADR             R12, 0xA4C|0-198-143-226
2632|code|ADD             R12, R12, #0x12000|18-202-140-226
2636|code|LDR             PC, [R12,#(exit_ptr - 0x12A4C)]!; __imp_exit|80-245-188-229
2640|code|ADR             R12, 0xA58|0-198-143-226
2644|code|ADD             R12, R12, #0x12000|18-202-140-226
2648|code|LDR             PC, [R12,#(srand_ptr - 0x12A58)]!; __imp_srand|72-245-188-229
2652|code|ADR             R12, 0xA64|0-198-143-226
2656|code|ADD             R12, R12, #0x12000|18-202-140-226
2660|code|LDR             PC, [R12,#(sg_err_category3_ptr - 0x12A64)]!; __imp_sg_err_category3|64-245-188-229
2664|code|ADR             R12, 0xA70|0-198-143-226
2668|code|ADD             R12, R12, #0x12000|18-202-140-226
2672|code|LDR             PC, [R12,#(memset_ptr - 0x12A70)]!; __imp_memset|56-245-188-229
2676|code|ADR             R12, 0xA7C|0-198-143-226
2680|code|ADD             R12, R12, #0x12000|18-202-140-226
2684|code|LDR             PC, [R12,#(putchar_ptr - 0x12A7C)]!; __imp_putchar|48-245-188-229
2688|code|ADR             R12, 0xA88|0-198-143-226
2692|code|ADD             R12, R12, #0x12000|18-202-140-226
2696|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x12A88)]!; __imp___printf_chk|40-245-188-229
2700|code|ADR             R12, 0xA94|0-198-143-226
2704|code|ADD             R12, R12, #0x12000|18-202-140-226
2708|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x12A94)]!; __imp___fprintf_chk|32-245-188-229
2712|code|ADR             R12, 0xAA0|0-198-143-226
2716|code|ADD             R12, R12, #0x12000|18-202-140-226
2720|code|LDR             PC, [R12,#(rand_ptr - 0x12AA0)]!; __imp_rand|24-245-188-229
2724|code|ADR             R12, 0xAAC|0-198-143-226
2728|code|ADD             R12, R12, #0x12000|18-202-140-226
2732|code|LDR             PC, [R12,#(fputc_ptr - 0x12AAC)]!; __imp_fputc|16-245-188-229
2736|code|ADR             R12, 0xAB8|0-198-143-226
2740|code|ADD             R12, R12, #0x12000|18-202-140-226
2744|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x12AB8)]!; __imp_sg_get_num|8-245-188-229
2748|code|ADR             R12, 0xAC4|0-198-143-226
2752|code|ADD             R12, R12, #0x12000|18-202-140-226
2756|code|LDR             PC, [R12,#(abort_ptr - 0x12AC4)]!; __imp_abort|0-245-188-229
2760|code|ADR             R12, 0xAD0|0-198-143-226
2764|code|ADD             R12, R12, #0x12000|18-202-140-226
2768|code|LDR             PC, [R12,#(close_ptr - 0x12AD0)]!; __imp_close|248-244-188-229
2772|code|ADR             R12, 0xADC|0-198-143-226
2776|code|ADD             R12, R12, #0x12000|18-202-140-226
2780|code|LDR             PC, [R12,#(sg_chk_n_print3_ptr - 0x12ADC)]!; __imp_sg_chk_n_print3|240-244-188-229
2784|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2788|code|SUB             SP, SP, #0x24|137-176
2790|code|LDR             R4, =(_GLOBAL_OFFSET_TABLE_ - 0xAF4)|225-76
2792|code|ADD.W           R9, SP, #0x48+var_30|13-241-24-9
2796|code|LDR             R3, =(__stack_chk_guard_ptr - 0x12F58)|224-75
2798|code|MOV             R5, R0|5-70
2800|code|ADD             R4, PC; _GLOBAL_OFFSET_TABLE_|124-68
2802|code|LDR             R2, =(dword_130A8 - 0xB00)|224-74
2804|code|LDR.W           R8, =(aHqrSTWVv - 0xB04); "hqr:s:t:w:vV"|223-248-128-131
2808|code|MOV             R6, R1|14-70
2810|code|LDR             R3, [R4,R3]; __stack_chk_guard|227-88
2812|code|ADD             R2, PC; dword_130A8|122-68
2814|code|LDR             R7, =(off_13014 - 0xB10); "help"|223-79
2816|code|ADD             R8, PC; "hqr:s:t:w:vV"|248-68
2818|code|STR             R2, [SP,#0x48+var_3C]|3-146
2820|code|MOV.W           R10, #1|79-240-1-10
2824|code|LDR.W           R11, =(dword_130A8 - 0xB16)|223-248-116-179
2828|code|ADD             R7, PC; off_13014|127-68
2830|code|LDR             R2, =(dword_13008 - 0xB1A)|221-74
2832|code|STR             R3, [SP,#0x48+var_40]|2-147
2834|code|ADD             R11, PC; dword_130A8|251-68
2836|code|LDR             R3, [R3]|27-104
2838|code|ADD             R2, PC; dword_13008|122-68
2840|code|STR             R2, [SP,#0x48+var_38]|4-146
2842|code|LDR             R2, =(dword_130A8 - 0xB22)|219-74
2844|code|STR             R3, [SP,#0x48+var_2C]|7-147
2846|code|ADD             R2, PC; dword_130A8|122-68
2848|code|STR             R2, [SP,#0x48+var_34]|5-146
2850|code|MOV             R3, R7; longopts|59-70
2852|code|STR.W           R9, [SP,#0x48+longind]; longind|205-248-0-144
2856|code|MOV             R0, R5; argc|40-70
2858|code|MOV             R1, R6; argv|49-70
2860|code|MOV             R2, R8; shortopts|66-70
2862|code|MOV.W           LR, #0|79-240-0-14
2866|code|STR.W           LR, [SP,#0x48+var_30]|205-248-24-224
2870|code|BLX             getopt_long|255-247-128-239
2874|code|ADDS            R3, R0, #1|67-28
2876|code|BEQ             loc_C3A|125-208
2878|code|SUBS            R0, #0x56 ; 'V'; switch 34 cases|86-56
2880|code|CMP             R0, #0x21|33-40
2882|code|BHI.W           def_B46; jumptable 00000B46 default case, cases 87-103,105-112,117|0-242-136-128
2886|code|TBB.W           [PC,R0]; switch jump|223-232-0-240
2890|data|DCB 0x6C; jump table for switch statement|108
2891|data|DCB 0x86|134
2892|data|DCB 0x86|134
2893|data|DCB 0x86|134
2894|data|DCB 0x86|134
2895|data|DCB 0x86|134
2896|data|DCB 0x86|134
2897|data|DCB 0x86|134
2898|data|DCB 0x86|134
2899|data|DCB 0x86|134
2900|data|DCB 0x86|134
2901|data|DCB 0x86|134
2902|data|DCB 0x86|134
2903|data|DCB 0x86|134
2904|data|DCB 0x86|134
2905|data|DCB 0x86|134
2906|data|DCB 0x86|134
2907|data|DCB 0x86|134
2908|data|DCB 0x60|96
2909|data|DCB 0x86|134
2910|data|DCB 0x86|134
2911|data|DCB 0x86|134
2912|data|DCB 0x86|134
2913|data|DCB 0x86|134
2914|data|DCB 0x86|134
2915|data|DCB 0x86|134
2916|data|DCB 0x86|134
2917|data|DCB 0x5B|91
2918|data|DCB 0x4D|77
2919|data|DCB 0x39|57
2920|data|DCB 0x2B|43
2921|data|DCB 0x86|134
2922|data|DCB 0x25|37
2923|data|DCB 0x11|17
2924|code|LDR             R3, =(optarg_ptr - 0x12F58); jumptable 00000B46 case 119|199-75
2926|code|LDR             R3, [R4,R3]; optarg|227-88
2928|code|LDR             R0, [R3]; buf|24-104
2930|code|BLX             sg_get_num|255-247-158-239
2934|code|LDR             R3, [SP,#0x48+var_3C]|3-155
2936|code|STR             R0, [R3,#0x10]|24-97
2938|code|ADDS            R0, #1|1-48
2940|code|BNE             loc_B22|209-209
2942|code|LDR             R0, =(aBadArgumentToA - 0xB88); "bad argument to '--addwr'\n"|196-72
2944|code|MOVS            R1, #1; size|1-33
2946|code|LDR             R3, =(stderr_ptr - 0x12F58)|196-75
2948|code|ADD             R0, PC; "bad argument to '--addwr'\n"|120-68
2950|code|LDR             R3, [R4,R3]; stderr|227-88
2952|code|MOVS            R2, #0x1A; n|26-34
2954|code|LDR             R3, [R3]; s|27-104
2956|code|BLX             fwrite|255-247-40-239
2960|code|MOVS            R0, #1|1-32
2962|code|B               loc_C10|61-224
2964|code|LDR.W           R3, [R11]; jumptable 00000B46 case 118|219-248-0-48
2968|code|ADDS            R3, #1|1-51
2970|code|STR.W           R3, [R11]|203-248-0-48
2974|code|B               loc_B22|192-231
2976|code|LDR             R3, =(optarg_ptr - 0x12F58); jumptable 00000B46 case 116|186-75
2978|code|LDR             R3, [R4,R3]; optarg|227-88
2980|code|LDR             R0, [R3]; buf|24-104
2982|code|BLX             sg_get_num|255-247-132-239
2986|code|CMP.W           R0, #0xFFFFFFFF|176-241-255-63
2990|code|MOV             R10, R0|130-70
2992|code|BNE             loc_B22|183-209
2994|code|LDR             R0, =(aBadArgumentToT - 0xBBC); "bad argument to '--times'\n"|185-72
2996|code|MOVS            R1, #1|1-33
2998|code|LDR             R3, =(stderr_ptr - 0x12F58)|183-75
3000|code|ADD             R0, PC; "bad argument to '--times'\n"|120-68
3002|code|B               loc_B86|228-231
3004|code|LDR             R3, =(optarg_ptr - 0x12F58); jumptable 00000B46 case 115|179-75
3006|code|LDR             R3, [R4,R3]; optarg|227-88
3008|code|LDR             R0, [R3]; buf|24-104
3010|code|BLX             sg_get_num|255-247-118-239
3014|code|LDR             R3, [SP,#0x48+var_38]|4-155
3016|code|STR             R0, [R3,#8]|152-96
3018|code|ADDS            R0, #1|1-48
3020|code|BNE             loc_B22|169-209
3022|code|LDR             R3, =(stderr_ptr - 0x12F58)|177-75
3024|code|MOVS            R1, #1; size|1-33
3026|code|LDR             R0, =(aBadArgumentToS - 0xBDC); "bad argument to '--size'\n"|178-72
3028|code|MOVS            R2, #0x19; n|25-34
3030|code|LDR             R3, [R4,R3]; stderr|227-88
3032|code|ADD             R0, PC; "bad argument to '--size'\n"|120-68
3034|code|LDR             R3, [R3]; s|27-104
3036|code|BLX             fwrite|255-247-0-239
3040|code|MOVS            R0, #1|1-32
3042|code|B               loc_C10|21-224
3044|code|LDR             R3, =(optarg_ptr - 0x12F58); jumptable 00000B46 case 114|169-75
3046|code|LDR             R3, [R4,R3]; optarg|227-88
3048|code|LDR             R0, [R3]; buf|24-104
3050|code|BLX             sg_get_num|255-247-98-239
3054|code|LDR             R3, [SP,#0x48+var_34]|5-155
3056|code|STR             R0, [R3,#0xC]|216-96
3058|code|ADDS            R0, #1|1-48
3060|code|BNE             loc_B22|149-209
3062|code|LDR             R0, =(aBadArgumentToA_0 - 0xC00); "bad argument to '--addrd'\n"|170-72
3064|code|MOVS            R1, #1|1-33
3066|code|LDR             R3, =(stderr_ptr - 0x12F58)|166-75
3068|code|ADD             R0, PC; "bad argument to '--addrd'\n"|120-68
3070|code|B               loc_B86|194-231
3072|code|LDR             R3, =(dword_130A8 - 0xC08); jumptable 00000B46 case 113|168-75
3074|code|MOVS            R2, #1|1-34
3076|code|ADD             R3, PC; dword_130A8|123-68
3078|code|STRB            R2, [R3,#(byte_130BC - 0x130A8)]|26-117
3080|code|B               loc_B22|139-231
3082|code|BL              sub_17C4; jumptable 00000B46 case 104|0-240-219-253
3086|code|MOVS            R0, #0|0-32
3088|code|LDR             R3, [SP,#0x48+var_40]|2-155
3090|code|LDR             R2, [SP,#0x48+var_2C]|7-154
3092|code|LDR             R3, [R3]|27-104
3094|code|CMP             R2, R3|154-66
3096|code|BNE.W           loc_E42|64-240-19-129
3100|code|ADD             SP, SP, #0x24 ; '$'|9-176
3102|code|POP.W           {R4-R11,PC}|189-232-240-143
3106|code|LDR             R0, =(stderr_ptr - 0x12F58); jumptable 00000B46 case 86|156-72
3108|code|MOVS            R1, #1|1-33
3110|code|LDR             R2, =(aSgTestRwbufVer - 0xC30); "sg_test_rwbuf: version: %s\n"|160-74
3112|code|LDR             R3, =(a10720130507 - 0xC32); "1.07 20130507"|160-75
3114|code|LDR             R0, [R4,R0]; stderr|32-88
3116|code|ADD             R2, PC; "sg_test_rwbuf: version: %s\n"|122-68
3118|code|ADD             R3, PC; "1.07 20130507"|123-68
3120|code|LDR             R0, [R0]|0-104
3122|code|BLX             __fprintf_chk|255-247-44-239
3126|code|MOVS            R0, #0|0-32
3128|code|B               loc_C10|234-231
3130|code|LDR             R3, =(optind_ptr - 0x12F58)|157-75
3132|code|LDR             R7, [R4,R3]; optind|231-88
3134|code|LDR             R3, [R7]|59-104
3136|code|CMP             R5, R3|157-66
3138|code|BGT             loc_C5E|12-220
3140|code|LDR             R0, =(aNoDeviceNameGi - 0xC50); "no device name given\n"|155-72
3142|code|MOVS            R1, #1; size|1-33
3144|code|LDR             R3, =(stderr_ptr - 0x12F58)|146-75
3146|code|MOVS            R2, #0x15; n|21-34
3148|code|ADD             R0, PC; "no device name given\n"|120-68
3150|code|LDR             R3, [R4,R3]; stderr|227-88
3152|code|LDR             R3, [R3]; s|27-104
3154|code|BLX             fwrite|255-247-198-238
3158|code|BL              sub_17C4; jumptable 00000B46 default case, cases 87-103,105-112,117|0-240-181-253
3162|code|MOVS            R0, #1|1-32
3164|code|B               loc_C10|216-231
3166|code|ADDS            R2, R3, #1|90-28
3168|code|LDR.W           R8, [R6,R3,LSL#2]|86-248-35-128
3172|code|CMP             R5, R2|149-66
3174|code|MOV.W           R3, R3,LSL#2|79-234-131-3
3178|code|STR             R2, [R7]|58-96
3180|code|BLE             loc_D00|72-221
3182|code|LDR.W           R9, =(dword_13008 - 0xC76)|223-248-72-146
3186|code|ADD             R9, PC; dword_13008|249-68
3188|code|LDR.W           R2, [R9,#(dword_13010 - 0x13008)]|217-248-8-32
3192|code|ADDS            R2, #1|1-50
3194|code|BEQ             loc_CAA|22-208
3196|code|LDR.W           R8, =(aUnexpectedExtr - 0xC86); "Unexpected extra argument: %s\n"|223-248-60-130
3200|code|MOV             R9, R7|185-70
3202|code|ADD             R8, PC; "Unexpected extra argument: %s\n"|248-68
3204|code|B               loc_CA2|13-224
3206|code|LDR             R0, =(stderr_ptr - 0x12F58)|131-72
3208|code|MOVS            R1, #1|1-33
3210|code|LDR.W           R3, [R6,R3,LSL#2]|86-248-35-48
3214|code|MOV             R2, R8|66-70
3216|code|LDR             R0, [R4,R0]; stderr|32-88
3218|code|LDR             R0, [R0]|0-104
3220|code|BLX             __fprintf_chk|255-247-250-238
3224|code|LDR.W           R3, [R9]|217-248-0-48
3228|code|ADDS            R3, #1|1-51
3230|code|STR.W           R3, [R9]|201-248-0-48
3234|code|LDR             R3, [R7]|59-104
3236|code|CMP             R5, R3|157-66
3238|code|BGT             loc_C86|238-220
3240|code|B               def_B46; jumptable 00000B46 default case, cases 87-103,105-112,117|213-231
3242|code|ADD             R3, R6|51-68
3244|code|LDR             R0, [R3,#4]; buf|88-104
3246|code|BLX             sg_get_num|255-247-0-239
3250|code|STR.W           R0, [R9,#(dword_13010 - 0x13008)]|201-248-8-0
3254|code|ADDS            R0, #1|1-48
3256|code|BEQ.W           loc_E46|0-240-197-128
3260|code|LDR             R3, [R7]|59-104
3262|code|ADDS            R3, #1|1-51
3264|code|STR             R3, [R7]|59-96
3266|code|CMP             R5, R3|157-66
3268|code|BLE             loc_D00|28-221
3270|code|LDR.W           R0, [R6,R3,LSL#2]; buf|86-248-35-0
3274|code|BLX             sg_get_num|255-247-242-238
3278|code|LDR.W           R9, =(dword_130A8 - 0xCD6)|223-248-240-145
3282|code|ADD             R9, PC; dword_130A8|249-68
3284|code|STR.W           R0, [R9,#(dword_130B8 - 0x130A8)]|201-248-16-0
3288|code|ADDS            R0, #1|1-48
3290|code|BEQ.W           loc_E5E|0-240-192-128
3294|code|LDR             R3, [R7]|59-104
3296|code|ADDS            R3, #1|1-51
3298|code|STR             R3, [R7]|59-96
3300|code|CMP             R5, R3|157-66
3302|code|BLE             loc_D00|11-221
3304|code|LDR.W           R0, [R6,R3,LSL#2]; buf|86-248-35-0
3308|code|BLX             sg_get_num|255-247-224-238
3312|code|STR.W           R0, [R9,#(dword_130B4 - 0x130A8)]|201-248-12-0
3316|code|ADDS            R0, #1|1-48
3318|code|BEQ.W           loc_E52|0-240-172-128
3322|code|LDR             R3, [R7]|59-104
3324|code|CMP             R5, R3|157-66
3326|code|BGT             loc_C7C|189-220
3328|code|CMP.W           R8, #0|184-241-0-15
3332|code|BEQ             loc_C44|158-208
3334|code|LDR             R3, =(dword_13008 - 0xD0C)|111-75
3336|code|ADD             R3, PC; dword_13008|123-68
3338|code|LDR             R3, [R3,#(dword_13010 - 0x13008)]|155-104
3340|code|CMP             R3, #0|0-43
3342|code|BLE             loc_D9C|69-221
3344|code|MOV             R0, R8|64-70
3346|code|MOVW            R1, #0x802|64-246-2-1
3350|code|BLX             open64|255-247-112-238
3354|code|SUBS            R7, R0, #0|7-30
3356|code|BLT             loc_DC8|84-219
3358|code|BL              sub_1044|0-240-145-249
3362|code|MOV             R5, R0|5-70
3364|code|CMP             R0, #0|0-40
3366|code|BNE             loc_DD4|85-209
3368|code|LDR.W           R8, =(dword_130A8 - 0xD30)|223-248-156-129
3372|code|ADD             R8, PC; dword_130A8|248-68
3374|code|LDRB.W          R3, [R8,#(byte_130BC - 0x130A8)]|152-248-20-48
3378|code|CMP             R3, #0|0-43
3380|code|BNE             loc_E16|111-209
3382|code|LDR             R3, =(dword_13008 - 0xD40)|101-75
3384|code|LDR.W           LR, [R8,#(dword_130AC - 0x130A8)]|216-248-4-224
3388|code|ADD             R3, PC; dword_13008|123-68
3390|code|LDR             R3, [R3,#(dword_13010 - 0x13008)]|155-104
3392|code|CMP             R3, LR|115-69
3394|code|BLE             loc_DD8|73-221
3396|code|LDR             R0, =(stderr_ptr - 0x12F58)|83-72
3398|code|MOVS            R1, #1|1-33
3400|code|LDR             R2, =(aSgTestRwbufSzI - 0xD54); "sg_test_rwbuf: sz=%i > buf_capacity=%i"...|97-74
3402|code|MOV             R6, R5|46-70
3404|code|MOVS            R5, #0x63 ; 'c'|99-37
3406|code|LDR             R0, [R4,R0]; stderr|32-88
3408|code|ADD             R2, PC; "sg_test_rwbuf: sz=%i > buf_capacity=%i"...|122-68
3410|code|STR.W           LR, [SP,#0x48+longind]|205-248-0-224
3414|code|LDR             R0, [R0]|0-104
3416|code|BLX             __fprintf_chk|255-247-152-238
3420|code|LDR             R3, =(dword_130A8 - 0xD62)|93-75
3422|code|ADD             R3, PC; dword_130A8|123-68
3424|code|LDR             R0, [R3,#(dword_130B0 - 0x130A8)]; ptr|152-104
3426|code|CBZ             R0, loc_D68|8-177
3428|code|BLX             free|255-247-28-238
3432|code|MOV             R0, R7; fd|56-70
3434|code|BLX             close|255-247-174-238
3438|code|CMP             R0, #0|0-40
3440|code|BLT             loc_DB2|31-219
3442|code|CBNZ            R5, loc_DC0|45-187
3444|code|LDR             R3, =(dword_130A8 - 0xD7A)|88-75
3446|code|ADD             R3, PC; dword_130A8|123-68
3448|code|LDRB            R3, [R3,#(byte_130BC - 0x130A8)]|27-125
3450|code|CMP             R3, #0|0-43
3452|code|BEQ             loc_E0A|69-208
3454|code|CMP.W           R10, #1|186-241-1-15
3458|code|BLE.W           loc_C0E|127-247-68-175
3462|code|LDR             R1, =(aFailedAfterDSu - 0xD90); "Failed after %d successful cycles\n"|85-73
3464|code|MOV             R2, R6|50-70
3466|code|MOVS            R0, #1|1-32
3468|code|ADD             R1, PC; "Failed after %d successful cycles\n"|121-68
3470|code|BLX             __printf_chk|255-247-120-238
3474|code|CMP             R5, #0|0-45
3476|code|ITE GE|172-191
3478|code|MOVGE           R0, R5|40-70
3480|code|MOVLT           R0, #0x63 ; 'c'|99-32
3482|code|B               loc_C10|57-231
3484|code|LDR             R3, =(dword_130A8 - 0xDA2)|80-75
3486|code|ADD             R3, PC; dword_130A8|123-68
3488|code|LDRB            R3, [R3,#(byte_130BC - 0x130A8)]|27-125
3490|code|CMP             R3, #0|0-43
3492|code|BNE             loc_D10|180-209
3494|code|LDR             R0, =(aMustGiveSizeOr - 0xDB2); "must give '--size' or '--quick' options"...|79-72
3496|code|MOVS            R1, #1|1-33
3498|code|LDR             R3, =(stderr_ptr - 0x12F58)|58-75
3500|code|MOVS            R2, #0x39 ; '9'|57-34
3502|code|ADD             R0, PC; "must give '--size' or '--quick' options"...|120-68
3504|code|B               loc_C4E|77-231
3506|code|LDR             R0, =(aSgTestRwbufClo - 0xDB8); "sg_test_rwbuf: close error"|77-72
3508|code|ADD             R0, PC; "sg_test_rwbuf: close error"|120-68
3510|code|BLX             perror|255-247-14-238
3514|code|CMP             R5, #0|0-45
3516|code|IT EQ|8-191
3518|code|MOVEQ           R5, #0xF|15-37
3520|code|CMP.W           R10, #1|186-241-1-15
3524|code|BGT             loc_D86|223-220
3526|code|B               loc_D92|228-231
3528|code|LDR             R0, =(aSgTestRwbufOpe - 0xDCE); "sg_test_rwbuf: open error"|72-72
3530|code|ADD             R0, PC; "sg_test_rwbuf: open error"|120-68
3532|code|BLX             perror|255-247-2-238
3536|code|MOVS            R0, #0xF|15-32
3538|code|B               loc_C10|29-231
3540|code|MOVS            R6, #0|0-38
3542|code|B               loc_D5C|193-231
3544|code|MOV             R0, R3; size|24-70
3546|code|LDR             R4, =(dword_13008 - 0xDE6)|69-76
3548|code|BLX             malloc|255-247-26-238
3552|code|MOV             R6, R5|46-70
3554|code|ADD             R4, PC; dword_13008|124-68
3556|code|STR.W           R0, [R8,#(dword_130B0 - 0x130A8)]|200-248-8-0
3560|code|B               loc_DF6|5-224
3562|code|MOV             R0, R7|56-70
3564|code|LDR             R1, [R4,#(dword_13010 - 0x13008)]|161-104
3566|code|BL              sub_148C|0-240-77-251
3570|code|CBNZ            R0, loc_E34|248-185
3572|code|ADDS            R6, #1|1-54
3574|code|CMP             R6, R10|86-69
3576|code|BGE             loc_D5C|176-218
3578|code|MOV             R0, R7|56-70
3580|code|LDR             R1, [R4,#(dword_13010 - 0x13008)]|161-104
3582|code|BL              sub_1628|0-240-19-252
3586|code|CMP             R0, #0|0-40
3588|code|BEQ             loc_DEA|241-208
3590|code|MOV             R5, R0|5-70
3592|code|B               loc_D5C|168-231
3594|code|LDR             R0, =(aSuccess - 0xE10); "Success"|58-72
3596|code|ADD             R0, PC; "Success"|120-68
3598|code|BLX             puts|255-247-252-237
3602|code|MOV             R0, R5|40-70
3604|code|B               loc_C10|252-230
3606|code|LDR.W           R2, [R8,#(dword_130AC - 0x130A8)]|216-248-4-32
3610|code|MOVS            R0, #1|1-32
3612|code|LDR             R1, =(aReadBufferRead - 0xE2E); "READ BUFFER read descriptor reports a b"...|54-73
3614|code|MOVS            R6, #0|0-38
3616|code|CMP             R2, #0|0-42
3618|code|MOV             R3, R2|19-70
3620|code|IT LT|184-191
3622|code|ADDLTW          R3, R2, #0x3FF|2-242-255-51
3626|code|ADD             R1, PC; "READ BUFFER read descriptor reports a b"...|121-68
3628|code|ASRS            R3, R3, #0xA|155-18
3630|code|BLX             __printf_chk|255-247-40-238
3634|code|B               loc_D5C|147-231
3636|code|MOVW            R5, #0x8AE|64-246-174-5
3640|code|CMP             R0, R5|168-66
3642|code|ITE NE|20-191
3644|code|MOVNE           R5, R0|5-70
3646|code|MOVEQ           R5, #0x61 ; 'a'|97-37
3648|code|B               loc_D5C|140-231
3650|code|BLX             __stack_chk_fail|255-247-194-237
3654|code|LDR             R0, =(aBadSz - 0xE52); "bad <sz>\n"|45-72
3656|code|MOVS            R1, #1|1-33
3658|code|LDR             R3, =(stderr_ptr - 0x12F58)|18-75
3660|code|MOVS            R2, #9|9-34
3662|code|ADD             R0, PC; "bad <sz>\n"|120-68
3664|code|B               loc_C4E|253-230
3666|code|LDR             R0, =(aBadAddrd - 0xE5E); "bad [addrd]\n"|43-72
3668|code|MOVS            R1, #1|1-33
3670|code|LDR             R3, =(stderr_ptr - 0x12F58)|15-75
3672|code|MOVS            R2, #0xC|12-34
3674|code|ADD             R0, PC; "bad [addrd]\n"|120-68
3676|code|B               loc_C4E|247-230
3678|code|LDR             R0, =(aBadAddwr - 0xE6A); "bad [addwr]\n"|41-72
3680|code|MOVS            R1, #1|1-33
3682|code|LDR             R3, =(stderr_ptr - 0x12F58)|12-75
3684|code|MOVS            R2, #0xC|12-34
3686|code|ADD             R0, PC; "bad [addwr]\n"|120-68
3688|code|B               loc_C4E|241-230
3690|data|ALIGN 4|0-191
3692|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAF4|100-36-1-0
3696|data|DCD __stack_chk_guard_ptr - 0x12F58|132-0-0-0
3700|data|DCD dword_130A8 - 0xB00|168-37-1-0
3704|data|DCD aHqrSTWVv - 0xB04; "hqr:s:t:w:vV"|208-19-0-0
3708|data|DCD off_13014 - 0xB10; "help"|4-37-1-0
3712|data|DCD dword_130A8 - 0xB16|146-37-1-0
3716|data|DCD dword_13008 - 0xB1A|238-36-1-0
3720|data|DCD dword_130A8 - 0xB22|134-37-1-0
3724|data|DCD optarg_ptr - 0x12F58|164-0-0-0
3728|data|DCD aBadArgumentToA - 0xB88; "bad argument to '--addwr'\n"|220-19-0-0
3732|data|DCD stderr_ptr - 0x12F58|140-0-0-0
3736|data|DCD aBadArgumentToT - 0xBBC; "bad argument to '--times'\n"|96-19-0-0
3740|data|DCD aBadArgumentToS - 0xBDC; "bad argument to '--size'\n"|36-19-0-0
3744|data|DCD aBadArgumentToA_0 - 0xC00; "bad argument to '--addrd'\n"|228-18-0-0
3748|data|DCD dword_130A8 - 0xC08|160-36-1-0
3752|data|DCD aSgTestRwbufVer - 0xC30; "sg_test_rwbuf: version: %s\n"|8-19-0-0
3756|data|DCD a10720130507 - 0xC32; "1.07 20130507"|34-19-0-0
3760|data|DCD optind_ptr - 0x12F58|136-0-0-0
3764|data|DCD aNoDeviceNameGi - 0xC50; "no device name given\n"|48-19-0-0
3768|data|DCD dword_13008 - 0xC76|146-35-1-0
3772|data|DCD aUnexpectedExtr - 0xC86; "Unexpected extra argument: %s\n"|62-19-0-0
3776|data|DCD dword_130A8 - 0xCD6|210-35-1-0
3780|data|DCD dword_13008 - 0xD0C|252-34-1-0
3784|data|DCD dword_130A8 - 0xD30|120-35-1-0
3788|data|DCD dword_13008 - 0xD40|200-34-1-0
3792|data|DCD aSgTestRwbufSzI - 0xD54; "sg_test_rwbuf: sz=%i > buf_capacity=%i"...|44-19-0-0
3796|data|DCD dword_130A8 - 0xD62|70-35-1-0
3800|data|DCD dword_130A8 - 0xD7A|46-35-1-0
3804|data|DCD aFailedAfterDSu - 0xD90; "Failed after %d successful cycles\n"|60-19-0-0
3808|data|DCD dword_130A8 - 0xDA2|6-35-1-0
3812|data|DCD aMustGiveSizeOr - 0xDB2; "must give '--size' or '--quick' options"...|50-18-0-0
3816|data|DCD aSgTestRwbufClo - 0xDB8; "sg_test_rwbuf: close error"|240-18-0-0
3820|data|DCD aSgTestRwbufOpe - 0xDCE; "sg_test_rwbuf: open error"|82-18-0-0
3824|data|DCD dword_13008 - 0xDE6|34-34-1-0
3828|data|DCD aSuccess - 0xE10; "Success"|180-18-0-0
3832|data|DCD aReadBufferRead - 0xE2E; "READ BUFFER read descriptor reports a b"...|14-18-0-0
3836|data|DCD aBadSz - 0xE52; "bad <sz>\n"|70-17-0-0
3840|data|DCD aBadAddrd - 0xE5E; "bad [addrd]\n"|86-17-0-0
3844|data|DCD aBadAddwr - 0xE6A; "bad [addwr]\n"|58-17-0-0
3848|code|MOV.W           R11, #0|79-240-0-11
3852|code|MOV.W           LR, #0|79-240-0-14
3856|code|POP             {R1}; argc|2-188
3858|code|MOV             R2, SP; ubp_av|106-70
3860|code|PUSH            {R2}; stack_end|4-180
3862|code|PUSH            {R0}; rtld_fini|1-180
3864|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xF40)|223-248-36-160
3868|code|ADR             R3, off_F40|8-163
3870|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
3872|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F58)|223-248-32-192
3876|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
3880|code|PUSH.W          {R12}; fini|77-248-4-205
3884|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F58)|6-75
3886|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
3890|code|LDR             R0, =(main_ptr - 0x12F58)|6-72
3892|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
3896|code|BLX             __libc_start_main|255-247-114-237
3900|code|BLX             abort|255-247-190-237
3904|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF40|24-32-1-0
3908|data|DCD __libc_csu_fini_ptr - 0x12F58|120-0-0-0
3912|data|DCD __libc_csu_init_ptr - 0x12F58|148-0-0-0
3916|data|DCD main_ptr - 0x12F58|152-0-0-0
3920|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xF60)|20-48-159-229
3924|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F58)|20-32-159-229
3928|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
3932|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
3936|code|CMP             R2, #0|0-0-82-227
3940|code|BXEQ            LR|30-255-47-1
3944|code|B               __gmon_start__|175-254-255-234
3948|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF60|248-31-1-0
3952|data|DCD __gmon_start___ptr_0 - 0x12F58|144-0-0-0
3956|code|LDR             R3, =(__bss_start__ - 0xF7C)|7-75
3958|code|LDR             R0, =(__bss_start__ - 0xF80)|8-72
3960|code|ADD             R3, PC; __bss_start__|123-68
3962|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xF86)|8-74
3964|code|ADD             R0, PC; __bss_start__|120-68
3966|code|ADDS            R3, #3|3-51
3968|code|SUBS            R3, R3, R0|27-26
3970|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
3972|code|CMP             R3, #6|6-43
3974|code|BLS             locret_F90|3-217
3976|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F58)|5-75
3978|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
3980|code|CBZ             R3, locret_F90|3-177
3982|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
3984|code|BX              LR|112-71
3986|data|ALIGN 4|0-191
3988|data|DCD __bss_start__ - 0xF7C|40-33-1-0
3992|data|DCD __bss_start__ - 0xF80|36-33-1-0
3996|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xF86|210-31-1-0
4000|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F58|128-0-0-0
4004|code|LDR             R1, =(__bss_start__ - 0xFAC)|8-73
4006|code|LDR             R0, =(__bss_start__ - 0xFB0)|9-72
4008|code|ADD             R1, PC; __bss_start__|121-68
4010|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0xFB4)|9-75
4012|code|ADD             R0, PC; __bss_start__|120-68
4014|code|SUBS            R1, R1, R0|9-26
4016|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4018|code|ASRS            R1, R1, #2|137-16
4020|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4024|code|ASRS            R1, R1, #1|73-16
4026|code|BEQ             locret_FC4|3-208
4028|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F58)|5-74
4030|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4032|code|CBZ             R3, locret_FC4|3-177
4034|code|BX              R3; _ITM_registerTMCloneTable|24-71
4036|code|BX              LR|112-71
4038|data|ALIGN 4|0-191
4040|data|DCD __bss_start__ - 0xFAC|248-32-1-0
4044|data|DCD __bss_start__ - 0xFB0|244-32-1-0
4048|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFB4|164-31-1-0
4052|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F58|160-0-0-0
4056|code|PUSH            {R3,LR}|8-181
4058|code|LDR             R3, =(__bss_start__ - 0xFE2)|10-75
4060|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0xFE4)|10-74
4062|code|ADD             R3, PC; __bss_start__|123-68
4064|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4066|code|LDRB            R3, [R3]|27-120
4068|code|CBNZ            R3, locret_1002|107-185
4070|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F58)|9-75
4072|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
4074|code|CBZ             R3, loc_FF6|35-177
4076|code|LDR             R3, =(off_13004 - 0xFF2)|8-75
4078|code|ADD             R3, PC; off_13004|123-68
4080|code|LDR             R0, [R3]; off_13004 ; void *|24-104
4082|code|BLX             __cxa_finalize|255-247-208-236
4086|code|BL              sub_F74|255-247-189-255
4090|code|LDR             R3, =(__bss_start__ - 0x1002)|6-75
4092|code|MOVS            R2, #1|1-34
4094|code|ADD             R3, PC; __bss_start__|123-68
4096|code|STRB            R2, [R3]|26-112
4098|code|POP             {R3,PC}|8-189
4100|data|DCD __bss_start__ - 0xFE2|194-32-1-0
4104|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xFE4|116-31-1-0
4108|data|DCD __cxa_finalize_ptr_0 - 0x12F58|124-0-0-0
4112|data|DCD off_13004 - 0xFF2|18-32-1-0
4116|data|DCD __bss_start__ - 0x1002|162-32-1-0
4120|code|LDR             R0, =(dword_12E4C - 0x1020)|7-72
4122|code|PUSH            {R3,LR}|8-181
4124|code|ADD             R0, PC; dword_12E4C|120-68
4126|code|LDR             R2, [R0]|2-104
4128|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1026)|6-75
4130|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4132|code|CBNZ            R2, loc_102C|18-185
4134|code|POP.W           {R3,LR}|189-232-8-64
4138|code|B               sub_FA4|187-231
4140|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F58)|4-74
4142|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
4144|code|CMP             R3, #0|0-43
4146|code|BEQ             loc_1026|248-208
4148|code|BLX             R3; _Jv_RegisterClasses|152-71
4150|code|B               loc_1026|246-231
4152|data|DCD dword_12E4C - 0x1020|44-30-1-0
4156|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1026|50-31-1-0
4160|data|DCD _Jv_RegisterClasses_ptr - 0x12F58|156-0-0-0
4164|code|PUSH.W          {R4-R11,LR}|45-233-240-79
4168|code|SUB             SP, SP, #0x7C|159-176
4170|code|LDR.W           R8, =(_GLOBAL_OFFSET_TABLE_ - 0x1058)|223-248-92-129
4174|code|ADD             R5, SP, #0xA0+s|1-173
4176|code|LDR             R4, =(__stack_chk_guard_ptr - 0x12F58)|86-76
4178|code|MOVS            R3, #0|0-35
4180|code|ADD             R8, PC; _GLOBAL_OFFSET_TABLE_|248-68
4182|code|MOV             R1, R3; c|25-70
4184|code|MOVS            R2, #0x40 ; '@'; n|64-34
4186|code|MOV             R7, R0|7-70
4188|code|LDR.W           R6, [R8,R4]; __stack_chk_guard|88-248-4-96
4192|code|MOV             R0, R5; s|40-70
4194|code|MOV.W           R12, #0x3C ; '<'|79-240-60-12
4198|code|STRB.W          R3, [SP,#0xA0+var_56]|141-248-74-48
4202|code|MOV.W           LR, #3|79-240-3-14
4206|code|STRB.W          R3, [SP,#0xA0+var_55]|141-248-75-48
4210|code|LDR.W           R10, [R6]|214-248-0-160
4214|code|MOV.W           R9, #4|79-240-4-9
4218|code|STRB.W          R3, [SP,#0xA0+var_54]|141-248-76-48
4222|code|ADD             R4, SP, #0xA0+var_58|18-172
4224|code|STRB.W          R3, [SP,#0xA0+var_53]|141-248-77-48
4228|code|STRB.W          R3, [SP,#0xA0+var_52]|141-248-78-48
4232|code|STRB.W          R3, [SP,#0xA0+var_51]|141-248-79-48
4236|code|STRB.W          R3, [SP,#0xA0+var_4F]|141-248-81-48
4240|code|STR.W           R10, [SP,#0xA0+var_2C]|205-248-116-160
4244|code|STRB.W          R12, [SP,#0xA0+var_58]|141-248-72-192
4248|code|STRB.W          LR, [SP,#0xA0+var_57]|141-248-73-224
4252|code|STRB.W          R9, [SP,#0xA0+var_50]|141-248-80-144
4256|code|BLX             memset|255-247-226-236
4260|code|LDR             R3, =(dword_130A8 - 0x10B0)|66-75
4262|code|MOVS            R2, #0x53 ; 'S'|83-34
4264|code|STR             R2, [SP,#0xA0+s]|1-146
4266|code|MOVS            R1, #0x20 ; ' '|32-33
4268|code|ADD             R3, PC; dword_130A8|123-68
4270|code|MOVS            R0, #0xA|10-32
4272|code|STRB.W          R1, [SP,#0xA0+var_93]|141-248-13-16
4276|code|MOVW            R1, #0xEA60|78-246-96-33
4280|code|LDR             R2, [R3]|26-104
4282|code|MOV             R3, #0xFFFFFFFD|111-240-2-3
4286|code|STR.W           R9, [SP,#0xA0+var_90]|205-248-16-144
4290|code|STR             R3, [SP,#0xA0+var_98]|2-147
4292|code|ADD             R3, SP, #0xA0+var_5C|17-171
4294|code|STRB.W          R0, [SP,#0xA0+var_94]|141-248-12-0
4298|code|STR             R3, [SP,#0xA0+var_8C]|5-147
4300|code|ADD             R3, SP, #0xA0+var_4C|21-171
4302|code|STR             R4, [SP,#0xA0+var_88]|6-148
4304|code|STR             R3, [SP,#0xA0+var_84]|7-147
4306|code|STR             R1, [SP,#0xA0+var_80]|8-145
4308|code|CMP             R2, #0|0-42
4310|code|BNE             loc_1154|61-209
4312|code|MOV             R0, R7; fd|56-70
4314|code|MOVW            R1, #0x2285; request|66-242-133-33
4318|code|MOV             R2, R5|42-70
4320|code|BLX             ioctl|255-247-132-236
4324|code|CMP             R0, #0|0-40
4326|code|BLT             loc_1196|86-219
4328|code|MOV             R0, R5; hp|40-70
4330|code|BLX             sg_err_category3|255-247-184-236
4334|code|MOV             R4, R0|4-70
4336|code|CBZ             R0, loc_1102|56-177
4338|code|CMP             R0, #0x15|21-40
4340|code|MOV             R1, R5; hp|41-70
4342|code|BNE             loc_1138|31-209
4344|code|LDR             R0, =(aReadBufferDesc - 0x1100); "READ BUFFER descriptor, continuing"|46-72
4346|code|MOVS            R2, #1; raw_sinfo|1-34
4348|code|ADD             R0, PC; "READ BUFFER descriptor, continuing"|120-68
4350|code|BLX             sg_chk_n_print3|255-247-234-236
4354|code|LDR             R1, =(dword_130A8 - 0x110C)|45-73
4356|code|LDRB.W          R2, [SP,#0xA0+var_5A]|157-248-70-32
4360|code|ADD             R1, PC; dword_130A8|121-68
4362|code|LDRB.W          R4, [SP,#0xA0+var_5B]|157-248-69-64
4366|code|LDR             R5, =(dword_13008 - 0x1120)|43-77
4368|code|LDRB.W          R3, [SP,#0xA0+var_5C]|157-248-68-48
4372|code|LSLS            R2, R2, #8|18-2
4374|code|LDR             R0, [R1]|8-104
4376|code|ORR.W           R2, R2, R4,LSL#16|66-234-4-66
4380|code|ADD             R5, PC; dword_13008|125-68
4382|code|LDRB.W          R4, [SP,#0xA0+var_59]|157-248-71-64
4386|code|STR             R3, [R5]|43-96
4388|code|ORRS            R2, R4|34-67
4390|code|STR             R2, [R1,#(dword_130AC - 0x130A8)]|74-96
4392|code|CBNZ            R0, loc_1146|104-185
4394|code|LDR             R2, [SP,#0xA0+var_2C]|29-154
4396|code|LDR             R3, [R6]|51-104
4398|code|CMP             R2, R3|154-66
4400|code|BNE             loc_11A4|56-209
4402|code|ADD             SP, SP, #0x7C ; '|'|31-176
4404|code|POP.W           {R4-R11,PC}|189-232-240-143
4408|code|LDR             R0, =(aReadBufferDesc_0 - 0x1140); "READ BUFFER descriptor error"|33-72
4410|code|MOVS            R2, #1; raw_sinfo|1-34
4412|code|ADD             R0, PC; "READ BUFFER descriptor error"|120-68
4414|code|BLX             sg_chk_n_print3|255-247-202-236
4418|code|MOV             R0, R4|32-70
4420|code|B               loc_112A|241-231
4422|code|LDR             R1, =(aReadBufferRepo - 0x114E); "READ BUFFER reports: buffer capacity=%d"...|31-73
4424|code|MOVS            R0, #1|1-32
4426|code|ADD             R1, PC; "READ BUFFER reports: buffer capacity=%d"...|121-68
4428|code|BLX             __printf_chk|255-247-152-236
4432|code|MOVS            R0, #0|0-32
4434|code|B               loc_112A|234-231
4436|code|LDR             R3, =(stderr_ptr - 0x12F58)|28-75
4438|code|MOVS            R1, #1; size|1-33
4440|code|LDR             R0, =(aReadBufferMode - 0x116C); "    read buffer [mode desc] cdb: "|28-72
4442|code|MOVS            R2, #0x21 ; '!'; n|33-34
4444|code|LDR.W           R10, =(a02x - 0x116E); "%02x "|223-248-112-160
4448|code|ADD.W           R9, SP, #0xA0+var_4E|13-241-82-9
4452|code|LDR.W           R8, [R8,R3]; stderr|88-248-3-128
4456|code|ADD             R0, PC; "    read buffer [mode desc] cdb: "|120-68
4458|code|ADD             R10, PC; "%02x "|250-68
4460|code|LDR.W           R3, [R8]; s|216-248-0-48
4464|code|MOV             R11, R8|195-70
4466|code|BLX             fwrite|255-247-54-236
4470|code|LDRB.W          R3, [R4],#1|20-248-1-59
4474|code|MOVS            R1, #1|1-33
4476|code|LDR.W           R0, [R8]|216-248-0-0
4480|code|MOV             R2, R10|82-70
4482|code|BLX             __fprintf_chk|255-247-132-236
4486|code|CMP             R4, R9|76-69
4488|code|BNE             loc_1176|245-209
4490|code|LDR.W           R1, [R11]; stream|219-248-0-16
4494|code|MOVS            R0, #0xA; c|10-32
4496|code|BLX             fputc|255-247-136-236
4500|code|B               loc_10D8|160-231
4502|code|LDR             R0, =(aSgTestRwbufSgI - 0x119C); "sg_test_rwbuf: SG_IO READ BUFFER descri"...|15-72
4504|code|ADD             R0, PC; "sg_test_rwbuf: SG_IO READ BUFFER descri"...|120-68
4506|code|BLX             perror|255-247-28-236
4510|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
4514|code|B               loc_112A|194-231
4516|code|BLX             __stack_chk_fail|255-247-16-236
4520|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1058|0-31-1-0
4524|data|DCD __stack_chk_guard_ptr - 0x12F58|132-0-0-0
4528|data|DCD dword_130A8 - 0x10B0|248-31-1-0
4532|data|DCD aReadBufferDesc - 0x1100; "READ BUFFER descriptor, continuing"|220-7-0-0
4536|data|DCD dword_130A8 - 0x110C|156-31-1-0
4540|data|DCD dword_13008 - 0x1120|232-30-1-0
4544|data|DCD aReadBufferDesc_0 - 0x1140; "READ BUFFER descriptor error"|192-7-0-0
4548|data|DCD aReadBufferRepo - 0x114E; "READ BUFFER reports: buffer capacity=%d"...|210-7-0-0
4552|data|DCD stderr_ptr - 0x12F58|140-0-0-0
4556|data|DCD aReadBufferMode - 0x116C; "    read buffer [mode desc] cdb: "|16-7-0-0
4560|data|DCD a02x - 0x116E; "%02x "|50-7-0-0
4564|data|DCD aSgTestRwbufSgI - 0x119C; "sg_test_rwbuf: SG_IO READ BUFFER descri"...|12-7-0-0
4568|code|CMP             R2, #0|0-42
4570|code|BLE             loc_120C|23-221
4572|code|LDRB            R3, [R1]|11-120
4574|code|PUSH            {R4,R5}|48-180
4576|code|LDRB            R4, [R0]|4-120
4578|code|CMP             R4, R3|156-66
4580|code|IT EQ|8-191
4582|code|MOVEQ           R3, #0|0-35
4584|code|BEQ             loc_11F8|6-208
4586|code|B               loc_1204|11-224
4588|code|LDRB.W          R5, [R0,#1]!|16-248-1-95
4592|code|LDRB.W          R4, [R1,#1]!|17-248-1-79
4596|code|CMP             R5, R4|165-66
4598|code|BNE             loc_1206|6-209
4600|code|ADDS            R3, #1|1-51
4602|code|CMP             R3, R2|147-66
4604|code|BNE             loc_11EC|246-209
4606|code|MOVS            R0, #0|0-32
4608|code|POP             {R4,R5}|48-188
4610|code|BX              LR|112-71
4612|code|MOVS            R3, #0|0-35
4614|code|MOV             R0, R3|24-70
4616|code|POP             {R4,R5}|48-188
4618|code|BX              LR|112-71
4620|code|MOVS            R0, #0|0-32
4622|code|BX              LR|112-71
4624|code|PUSH.W          {R4-R10,LR}|45-233-240-71
4628|code|MOV             R7, R1|15-70
4630|code|ADDS            R1, #3|3-49
4632|code|LDR             R3, =(dword_13008 - 0x1228)|73-75
4634|code|ANDS.W          R1, R1, R7,ASR#32|17-234-39-1
4638|code|IT CC|56-191
4640|code|MOVCC           R1, R7|57-70
4642|code|MOV             R6, R0|6-70
4644|code|ADD             R3, PC; dword_13008|123-68
4646|code|MOV             R5, R2|21-70
4648|code|ASRS            R1, R1, #2|137-16
4650|code|CMP             R1, #0|0-41
4652|code|LDR             R3, [R3,#(dword_1300C - 0x13008)]|91-104
4654|code|BLE             loc_1240|7-221
4656|code|ADD.W           R1, R0, R1,LSL#2|0-235-129-1
4660|code|MOV             R4, R0|4-70
4662|code|LDR.W           R2, [R4],#4|84-248-4-43
4666|code|CMP             R4, R1|140-66
4668|code|ADD             R3, R2|19-68
4670|code|BNE             loc_1236|250-209
4672|code|LSLS            R0, R7, #0x1E|184-7
4674|code|BEQ             loc_1254|7-208
4676|code|ADDS            R2, R6, R7|242-25
4678|code|MOV             R4, R7|60-70
4680|code|LDRB.W          R1, [R2,#-1]!|18-248-1-29
4684|code|SUBS            R4, #1|1-60
4686|code|ADD             R3, R1|11-68
4688|code|LSLS            R1, R4, #0x1E|161-7
4690|code|BNE             loc_1248|249-209
4692|code|MOV             R2, #0x12345678|69-242-120-98-193-242-52-34
4700|code|CMP             R3, R2|147-66
4702|code|BEQ             loc_126A|4-208
4704|code|CBZ             R5, loc_1286|141-177
4706|code|MOVW            R0, #0x8AE|64-246-174-0
4710|code|POP.W           {R4-R10,PC}|189-232-240-135
4714|code|LDR             R2, =(dword_130A8 - 0x1270)|54-74
4716|code|ADD             R2, PC; dword_130A8|122-68
4718|code|LDR             R2, [R2]|18-104
4720|code|CMP             R2, #1|1-42
4722|code|BLE             loc_1334|95-221
4724|code|LDR             R1, =(aChecksumValue0 - 0x127E); "Checksum value: 0x%x\n"|52-73
4726|code|MOV             R2, R3|26-70
4728|code|MOVS            R0, #1|1-32
4730|code|ADD             R1, PC; "Checksum value: 0x%x\n"|121-68
4732|code|BLX             __printf_chk|255-247-0-236
4736|code|MOVS            R0, #0|0-32
4738|code|POP.W           {R4-R10,PC}|189-232-240-135
4742|code|LDR             R1, =(aSgTestRwbufChe - 0x1290); "sg_test_rwbuf: Checksum error (sz=%i): "...|49-73
4744|code|MOVS            R0, #1|1-32
4746|code|MOV             R2, R7|58-70
4748|code|ADD             R1, PC; "sg_test_rwbuf: Checksum error (sz=%i): "...|121-68
4750|code|BLX             __printf_chk|255-247-248-235
4754|code|LDR             R3, =(dword_130A8 - 0x1298)|47-75
4756|code|ADD             R3, PC; dword_130A8|123-68
4758|code|LDR             R3, [R3,#(dword_130B0 - 0x130A8)]|155-104
4760|code|CMP             R3, #0|0-43
4762|code|BEQ             loc_1262|226-208
4764|code|CMP             R7, #0|0-47
4766|code|BLE             loc_133A|76-221
4768|code|LDRB            R2, [R6]|50-120
4770|code|LDRB            R1, [R3]|25-120
4772|code|CMP             R1, R2|145-66
4774|code|ITT EQ|4-191
4776|code|MOVEQ           R4, R5|44-70
4778|code|MOVEQ           R2, R6|50-70
4780|code|BEQ             loc_12BC|6-208
4782|code|B               loc_133A|68-224
4784|code|LDRB.W          R0, [R3,#1]!|19-248-1-15
4788|code|LDRB.W          R1, [R2,#1]!|18-248-1-31
4792|code|CMP             R0, R1|136-66
4794|code|BNE             loc_12C4|3-209
4796|code|ADDS            R4, #1|1-52
4798|code|CMP             R4, R7|188-66
4800|code|BNE             loc_12B0|246-209
4802|code|MOVS            R4, #0|0-36
4804|code|LDR             R1, =(aDifferAtPosII - 0x12D6); "Differ at pos %i/%i:\n"|35-73
4806|code|MOVS            R0, #1|1-32
4808|code|LDR.W           R9, =(a02x_0 - 0x12E4); " %02x"|223-248-140-144
4812|code|MOV             R2, R4|34-70
4814|code|LDR.W           R10, =(dword_130A8 - 0x12E6)|223-248-140-160
4818|code|ADD             R1, PC; "Differ at pos %i/%i:\n"|121-68
4820|code|MOV             R3, R7|59-70
4822|code|ADD.W           R8, R4, #0x18|4-241-24-8
4826|code|BLX             __printf_chk|255-247-210-235
4830|code|MOV             R5, R4|37-70
4832|code|ADD             R9, PC; " %02x"|249-68
4834|code|ADD             R10, PC; dword_130A8|250-68
4836|code|B               loc_12F6|7-224
4838|code|LDR.W           R3, [R10,#(dword_130B0 - 0x130A8)]|218-248-8-48
4842|code|LDRB            R2, [R3,R5]|90-93
4844|code|ADDS            R5, #1|1-53
4846|code|BLX             __printf_chk|255-247-200-235
4850|code|CMP             R5, R8|69-69
4852|code|BEQ             loc_1300|4-208
4854|code|CMP             R7, R5|175-66
4856|code|MOV.W           R0, #1|79-240-1-0
4860|code|MOV             R1, R9|73-70
4862|code|BGT             loc_12E6|242-220
4864|code|LDR             R5, =(a02x_0 - 0x1310); " %02x"|23-77
4866|code|MOVS            R0, #0xA; c|10-32
4868|code|ADD             R4, R6|52-68
4870|code|ADD             R8, R6|176-68
4872|code|BLX             putchar|255-247-180-235
4876|code|ADD             R5, PC; " %02x"|125-68
4878|code|B               loc_131C|5-224
4880|code|LDRB.W          R2, [R4],#1|20-248-1-43
4884|code|BLX             __printf_chk|255-247-180-235
4888|code|CMP             R4, R8|68-69
4890|code|BEQ             loc_1326|4-208
4892|code|SUBS            R3, R4, R6|163-27
4894|code|MOVS            R0, #1|1-32
4896|code|CMP             R3, R7|187-66
4898|code|MOV             R1, R5|41-70
4900|code|BLT             loc_1310|244-219
4902|code|MOVS            R0, #0xA; c|10-32
4904|code|BLX             putchar|255-247-164-235
4908|code|MOVW            R0, #0x8AE|64-246-174-0
4912|code|POP.W           {R4-R10,PC}|189-232-240-135
4916|code|MOVS            R0, #0|0-32
4918|code|POP.W           {R4-R10,PC}|189-232-240-135
4922|code|MOV             R4, R5|44-70
4924|code|B               loc_12C4|194-231
4926|data|ALIGN 0x10|0-191
4928|data|DCD dword_13008 - 0x1228|224-29-1-0
4932|data|DCD dword_130A8 - 0x1270|56-30-1-0
4936|data|DCD aChecksumValue0 - 0x127E; "Checksum value: 0x%x\n"|50-7-0-0
4940|data|DCD aSgTestRwbufChe - 0x1290; "sg_test_rwbuf: Checksum error (sz=%i): "...|208-6-0-0
4944|data|DCD dword_130A8 - 0x1298|16-30-1-0
4948|data|DCD aDifferAtPosII - 0x12D6; "Differ at pos %i/%i:\n"|186-6-0-0
4952|data|DCD a02x_0 - 0x12E4; " %02x"|196-6-0-0
4956|data|DCD dword_130A8 - 0x12E6|194-29-1-0
4960|data|DCD a02x_0 - 0x1310; " %02x"|152-6-0-0
4964|code|PUSH.W          {R4-R11,LR}|45-233-240-79
4968|code|MOV             R7, R0|7-70
4970|code|SUB             SP, SP, #0x14|133-176
4972|code|MOVS            R0, #0; timer|0-32
4974|code|MOV             R9, R1|137-70
4976|code|BLX             time|255-247-36-235
4980|code|BLX             srand|255-247-108-235
4984|code|LDR             R3, =(dword_13008 - 0x1386)|64-75
4986|code|ADD.W           R8, R9, #3|9-241-3-8
4990|code|AND.W           R5, R9, #3|9-240-3-5
4994|code|ADD             R3, PC; dword_13008|123-68
4996|code|ANDS.W          R8, R8, R9,ASR#32|24-234-41-8
5000|code|IT CC|56-191
5002|code|MOVCC           R8, R9|200-70
5004|code|STR             R3, [SP,#0x38+var_30]|2-147
5006|code|MOV             R4, R9|76-70
5008|code|LDR             R3, =(dword_13008 - 0x1396)|59-75
5010|code|ADD             R3, PC; dword_13008|123-68
5012|code|STR             R3, [SP,#0x38+var_2C]|3-147
5014|code|MOV.W           R3, R8,ASR#2|79-234-168-3
5018|code|STR             R3, [SP,#0x38+var_34]|1-147
5020|code|SUBS            R6, R3, #1|94-30
5022|code|CMP.W           R9, #3|185-241-3-15
5026|code|BLE             loc_142C|67-221
5028|code|BLX             rand|255-247-120-235
5032|code|MOV             R3, #0x12345678|69-242-120-99-193-242-52-35
5040|code|LDR             R2, [SP,#0x38+var_2C]|3-154
5042|code|ADD             R3, R0|3-68
5044|code|STR             R3, [R2,#4]|83-96
5046|code|MOV             R10, R3|154-70
5048|code|LDR             R3, [SP,#0x38+var_34]|1-155
5050|code|CMP             R3, #1|1-43
5052|code|BLE             loc_13D8|12-221
5054|code|SUB.W           R8, R7, #4|167-241-4-8
5058|code|MOV.W           R11, #0|79-240-0-11
5062|code|BLX             rand|255-247-104-235
5066|code|ADD.W           R11, R11, #1|11-241-1-11
5070|code|CMP             R11, R6|179-69
5072|code|STR.W           R0, [R8,#4]!|72-248-4-15
5076|code|ADD             R10, R0|130-68
5078|code|BNE             loc_13C6|246-209
5080|code|CBZ             R5, loc_13F2|93-177
5082|code|ADD.W           R11, R7, R4|7-235-4-11
5086|code|BLX             rand|255-247-92-235
5090|code|SUBS            R4, #1|1-60
5092|code|ANDS.W          R5, R4, #3|20-240-3-5
5096|code|STRB.W          R0, [R11,#-1]!|11-248-1-13
5100|code|UXTAB.W         R10, R10, R0|90-250-128-250
5104|code|BNE             loc_13DE|245-209
5106|code|CMP.W           R9, #3|185-241-3-15
5110|code|BLE             loc_1444|37-221
5112|code|LDR             R3, [SP,#0x38+var_34]|1-155
5114|code|MOV             R2, #0x12345678|69-242-120-98-193-242-52-34
5122|code|MOV             R0, R7|56-70
5124|code|ADD.W           R8, R3, #0x40000000|3-241-128-72
5128|code|RSB.W           R2, R10, R2|202-235-2-2
5132|code|ADD.W           R8, R8, #0xFFFFFFFF|8-241-255-56
5136|code|MOV             R1, R9|73-70
5138|code|STR.W           R2, [R7,R8,LSL#2]|71-248-40-32
5142|code|MOVS            R2, #1|1-34
5144|code|BL              sub_1210|255-247-250-254
5148|code|CBZ             R0, loc_1460|0-179
5150|code|LDR             R0, =(aSgTestRwbufMem - 0x1424); "sg_test_rwbuf: Memory corruption?"|25-72
5152|code|ADD             R0, PC; "sg_test_rwbuf: Memory corruption?"|120-68
5154|code|BLX             puts|255-247-242-234
5158|code|MOVS            R0, #1; status|1-32
5160|code|BLX             exit|255-247-12-235
5164|code|BLX             rand|255-247-52-235
5168|code|MOVW            R3, #0x5678|69-242-120-99
5172|code|LDR             R2, [SP,#0x38+var_30]|2-154
5174|code|MOVT.W          R3, #0x1234|193-242-52-35
5178|code|UXTB            R0, R0|192-178
5180|code|ADD             R3, R0|3-68
5182|code|STR             R3, [R2,#4]|83-96
5184|code|MOV             R10, R3|154-70
5186|code|B               loc_13B8|185-231
5188|code|LDRB.W          LR, [R7]|151-248-0-224
5192|code|MOV             R0, R7|56-70
5194|code|MOV             R1, R9|73-70
5196|code|MOVS            R2, #1|1-34
5198|code|ADD.W           LR, LR, #0x78 ; 'x'|14-241-120-14
5202|code|RSB.W           R3, R10, LR|202-235-14-3
5206|code|STRB            R3, [R7]|59-112
5208|code|BL              sub_1210|255-247-218-254
5212|code|CMP             R0, #0|0-40
5214|code|BNE             loc_139E|158-209
5216|code|LDR             R3, =(dword_130A8 - 0x1466)|9-75
5218|code|ADD             R3, PC; dword_130A8|123-68
5220|code|LDR             R0, [R3,#(dword_130B0 - 0x130A8)]; dest|152-104
5222|code|CBZ             R0, loc_1476|48-177
5224|code|MOV             R1, R7; src|57-70
5226|code|MOV             R2, R9; n|74-70
5228|code|ADD             SP, SP, #0x14|5-176
5230|code|POP.W           {R4-R11,LR}|189-232-240-79
5234|code|B.W             j_memcpy|255-247-155-186
5238|code|ADD             SP, SP, #0x14|5-176
5240|code|POP.W           {R4-R11,PC}|189-232-240-143
5244|data|DCD dword_13008 - 0x1386|130-28-1-0
5248|data|DCD dword_13008 - 0x1396|114-28-1-0
5252|data|DCD aSgTestRwbufMem - 0x1424; "sg_test_rwbuf: Memory corruption?"|164-5-0-0
5256|data|DCD dword_130A8 - 0x1466|66-28-1-0
5260|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5264|code|SUB             SP, SP, #0x7C|159-176
5266|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x14A2)|92-78
5268|code|MOV             R10, R1|138-70
5270|code|LDR             R3, =(__stack_chk_guard_ptr - 0x12F58)|92-75
5272|code|MOV             R11, R0|131-70
5274|code|LDR.W           R9, =(dword_130A8 - 0x14A8)|223-248-112-145
5278|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
5280|code|MOVS            R7, #0|0-39
5282|code|MOVS            R1, #0x3C ; '<'|60-33
5284|code|ADD             R9, PC; dword_130A8|249-68
5286|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
5288|code|STRB.W          R1, [SP,#0xA0+var_58]|141-248-72-16
5292|code|LDR.W           R2, [R9,#(dword_130B4 - 0x130A8)]|217-248-12-32
5296|code|STR             R3, [SP,#0xA0+var_A0]|0-147
5298|code|ADD.W           R8, R10, R2|10-235-2-8
5302|code|LDR             R3, [R3]|27-104
5304|code|STRB.W          R7, [SP,#0xA0+var_57]|141-248-73-112
5308|code|MOV             R0, R8; size|64-70
5310|code|STRB.W          R7, [SP,#0xA0+var_56]|141-248-74-112
5314|code|STR             R3, [SP,#0xA0+var_2C]|29-147
5316|code|STRB.W          R7, [SP,#0xA0+var_55]|141-248-75-112
5320|code|STRB.W          R7, [SP,#0xA0+var_54]|141-248-76-112
5324|code|STRB.W          R7, [SP,#0xA0+var_53]|141-248-77-112
5328|code|STRB.W          R7, [SP,#0xA0+var_52]|141-248-78-112
5332|code|STRB.W          R7, [SP,#0xA0+var_51]|141-248-79-112
5336|code|STRB.W          R7, [SP,#0xA0+var_50]|141-248-80-112
5340|code|STRB.W          R7, [SP,#0xA0+var_4F]|141-248-81-112
5344|code|BLX             malloc|255-247-152-234
5348|code|MOV             R4, R0|4-70
5350|code|CMP             R0, #0|0-40
5352|code|BEQ             loc_15E6|125-208
5354|code|ADD             R5, SP, #0xA0+s|2-173
5356|code|MOV             R1, R7; c|57-70
5358|code|MOVS            R2, #0x40 ; '@'; n|64-34
5360|code|MOVS            R7, #2|2-39
5362|code|MOV             R0, R5; s|40-70
5364|code|MOV.W           R3, R8,ASR#16|79-234-40-67
5368|code|STRB.W          R7, [SP,#0xA0+var_57]|141-248-73-112
5372|code|STRB.W          R3, [SP,#0xA0+var_52]|141-248-78-48
5376|code|MOV.W           R3, R8,ASR#8|79-234-40-35
5380|code|STRB.W          R8, [SP,#0xA0+var_50]|141-248-80-128
5384|code|STRB.W          R3, [SP,#0xA0+var_51]|141-248-79-48
5388|code|BLX             memset|255-247-172-234
5392|code|LDR.W           R1, [R9]|217-248-0-16
5396|code|MOVS            R3, #0x53 ; 'S'|83-35
5398|code|MOVS            R0, #0x20 ; ' '|32-32
5400|code|MOV             R2, #0xFFFFFFFD|111-240-2-2
5404|code|STR             R7, [SP,#0xA0+var_74]|11-151
5406|code|MOVS            R7, #0xA|10-39
5408|code|STR             R3, [SP,#0xA0+s]|2-147
5410|code|ADD             R3, SP, #0xA0+var_58|18-171
5412|code|STRB.W          R0, [SP,#0xA0+var_8F]|141-248-17-0
5416|code|MOVW            R0, #0xEA60|78-246-96-32
5420|code|STR             R2, [SP,#0xA0+var_94]|3-146
5422|code|ADD             R2, SP, #0xA0+var_4C|21-170
5424|code|STR.W           R8, [SP,#0xA0+var_8C]|205-248-20-128
5428|code|STR             R4, [SP,#0xA0+var_88]|6-148
5430|code|STRB.W          R7, [SP,#0xA0+var_90]|141-248-16-112
5434|code|STR             R3, [SP,#0xA0+var_84]|7-147
5436|code|STR             R2, [SP,#0xA0+var_80]|8-146
5438|code|STR             R0, [SP,#0xA0+var_7C]|9-144
5440|code|CBNZ            R1, loc_15A4|129-187
5442|code|MOV             R0, R11; fd|88-70
5444|code|MOVW            R1, #0x2285; request|66-242-133-33
5448|code|MOV             R2, R5|42-70
5450|code|BLX             ioctl|255-247-80-234
5454|code|CMP             R0, #0|0-40
5456|code|BLT             loc_15EC|76-219
5458|code|MOV             R0, R5; hp|40-70
5460|code|BLX             sg_err_category3|255-247-130-234
5464|code|MOV             R6, R0|6-70
5466|code|CBZ             R0, loc_156C|56-177
5468|code|CMP             R0, #0x15|21-40
5470|code|MOV             R1, R5; hp|41-70
5472|code|BNE             loc_1590|22-209
5474|code|LDR             R0, =(aReadBufferData - 0x156A); "READ BUFFER data, continuing"|43-72
5476|code|MOVS            R2, #1; raw_sinfo|1-34
5478|code|ADD             R0, PC; "READ BUFFER data, continuing"|120-68
5480|code|BLX             sg_chk_n_print3|255-247-180-234
5484|code|MOV             R1, R10|81-70
5486|code|MOVS            R2, #0|0-34
5488|code|MOV             R0, R4|32-70
5490|code|BL              sub_1210|255-247-77-254
5494|code|MOV             R6, R0|6-70
5496|code|MOV             R0, R4; ptr|32-70
5498|code|BLX             free|255-247-18-234
5502|code|MOV             R0, R6|48-70
5504|code|LDR             R3, [SP,#0xA0+var_A0]|0-155
5506|code|LDR             R2, [SP,#0xA0+var_2C]|29-154
5508|code|LDR             R3, [R3]|27-104
5510|code|CMP             R2, R3|154-66
5512|code|BNE             loc_1600|58-209
5514|code|ADD             SP, SP, #0x7C ; '|'|31-176
5516|code|POP.W           {R4-R11,PC}|189-232-240-143
5520|code|LDR             R0, =(aReadBufferData_0 - 0x1598); "READ BUFFER data error"|32-72
5522|code|MOVS            R2, #1; raw_sinfo|1-34
5524|code|ADD             R0, PC; "READ BUFFER data error"|120-68
5526|code|BLX             sg_chk_n_print3|255-247-158-234
5530|code|MOV             R0, R4; ptr|32-70
5532|code|BLX             free|255-247-0-234
5536|code|MOV             R0, R6|48-70
5538|code|B               loc_1580|237-231
5540|code|LDR.W           LR, =(stderr_ptr - 0x12F58)|223-248-112-224
5544|code|MOV             R9, R3|153-70
5546|code|LDR             R0, =(aReadBufferMode_0 - 0x15BC); "    read buffer [mode data] cdb: "|28-72
5548|code|MOVS            R1, #1; size|1-33
5550|code|LDR.W           R8, =(a02x - 0x15BE); "%02x "|223-248-112-128
5554|code|MOVS            R2, #0x21 ; '!'; n|33-34
5556|code|LDR.W           R6, [R6,LR]; stderr|86-248-14-96
5560|code|ADD             R0, PC; "    read buffer [mode data] cdb: "|120-68
5562|code|ADD             R8, PC; "%02x "|248-68
5564|code|ADD.W           R7, SP, #0xA0+var_4E|13-241-82-7
5568|code|LDR             R3, [R6]; s|51-104
5570|code|STR             R6, [SP,#0xA0+var_9C]|1-150
5572|code|BLX             fwrite|255-247-12-234
5576|code|LDRB.W          R3, [R9],#1|25-248-1-59
5580|code|MOVS            R1, #1|1-33
5582|code|LDR             R0, [R6]|48-104
5584|code|MOV             R2, R8|66-70
5586|code|BLX             __fprintf_chk|255-247-92-234
5590|code|CMP             R9, R7|185-69
5592|code|BNE             loc_15C8|246-209
5594|code|LDR             R3, [SP,#0xA0+var_9C]|1-155
5596|code|MOVS            R0, #0xA; c|10-32
5598|code|LDR             R1, [R3]; stream|25-104
5600|code|BLX             fputc|255-247-96-234
5604|code|B               loc_1542|173-231
5606|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
5610|code|B               loc_1580|201-231
5612|code|LDR             R0, =(aSgTestRwbufSgI_0 - 0x15F2); "sg_test_rwbuf: SG_IO READ BUFFER data e"...|13-72
5614|code|ADD             R0, PC; "sg_test_rwbuf: SG_IO READ BUFFER data e"...|120-68
5616|code|BLX             perror|255-247-240-233
5620|code|MOV             R0, R4; ptr|32-70
5622|code|BLX             free|255-247-212-233
5626|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
5630|code|B               loc_1580|191-231
5632|code|BLX             __stack_chk_fail|255-247-226-233
5636|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x14A2|182-26-1-0
5640|data|DCD __stack_chk_guard_ptr - 0x12F58|132-0-0-0
5644|data|DCD dword_130A8 - 0x14A8|0-28-1-0
5648|data|DCD aReadBufferData - 0x156A; "READ BUFFER data, continuing"|210-4-0-0
5652|data|DCD aReadBufferData_0 - 0x1598; "READ BUFFER data error"|196-4-0-0
5656|data|DCD stderr_ptr - 0x12F58|140-0-0-0
5660|data|DCD aReadBufferMode_0 - 0x15BC; "    read buffer [mode data] cdb: "|48-4-0-0
5664|data|DCD a02x - 0x15BE; "%02x "|226-2-0-0
5668|data|DCD aSgTestRwbufSgI_0 - 0x15F2; "sg_test_rwbuf: SG_IO READ BUFFER data e"...|30-4-0-0
5672|code|PUSH.W          {R4-R11,LR}|45-233-240-79
5676|code|SUB             SP, SP, #0x7C|159-176
5678|code|LDR.W           R11, =(_GLOBAL_OFFSET_TABLE_ - 0x1640)|223-248-112-177
5682|code|MOV             R10, R0|130-70
5684|code|LDR             R3, =(__stack_chk_guard_ptr - 0x12F58)|91-75
5686|code|MOVS            R4, #0|0-36
5688|code|LDR.W           R9, =(dword_130A8 - 0x1646)|223-248-108-145
5692|code|ADD             R11, PC; _GLOBAL_OFFSET_TABLE_|251-68
5694|code|MOVS            R2, #0x3B ; ';'|59-34
5696|code|MOV             R8, R1|136-70
5698|code|ADD             R9, PC; dword_130A8|249-68
5700|code|LDR.W           R3, [R11,R3]; __stack_chk_guard|91-248-3-48
5704|code|STRB.W          R2, [SP,#0xA0+var_58]|141-248-72-32
5708|code|LDR.W           R7, [R9,#(dword_130B8 - 0x130A8)]|217-248-16-112
5712|code|STR             R3, [SP,#0xA0+var_9C]|1-147
5714|code|ADD             R7, R1|15-68
5716|code|LDR             R3, [R3]|27-104
5718|code|STRB.W          R4, [SP,#0xA0+var_57]|141-248-73-64
5722|code|MOV             R0, R7; size|56-70
5724|code|STRB.W          R4, [SP,#0xA0+var_56]|141-248-74-64
5728|code|STR             R3, [SP,#0xA0+var_2C]|29-147
5730|code|STRB.W          R4, [SP,#0xA0+var_55]|141-248-75-64
5734|code|STRB.W          R4, [SP,#0xA0+var_54]|141-248-76-64
5738|code|STRB.W          R4, [SP,#0xA0+var_53]|141-248-77-64
5742|code|STRB.W          R4, [SP,#0xA0+var_52]|141-248-78-64
5746|code|STRB.W          R4, [SP,#0xA0+var_51]|141-248-79-64
5750|code|STRB.W          R4, [SP,#0xA0+var_50]|141-248-80-64
5754|code|STRB.W          R4, [SP,#0xA0+var_4F]|141-248-81-64
5758|code|BLX             malloc|255-247-202-233
5762|code|CMP             R0, #0|0-40
5764|code|BEQ             loc_1780|124-208
5766|code|MOV             R6, R0|6-70
5768|code|MOV             R1, R4; c|33-70
5770|code|MOV             R2, R7; n|58-70
5772|code|ADD             R5, SP, #0xA0+var_98|2-173
5774|code|BLX             memset|255-247-236-233
5778|code|MOV             R0, R6|48-70
5780|code|MOV             R1, R8|65-70
5782|code|BL              sub_1364|255-247-101-254
5786|code|MOV             R1, R4; c|33-70
5788|code|MOVS            R2, #0x40 ; '@'; n|64-34
5790|code|MOV             R0, R5; s|40-70
5792|code|MOVS            R4, #2|2-36
5794|code|ASRS            R3, R7, #0x10|59-20
5796|code|STRB.W          R4, [SP,#0xA0+var_57]|141-248-73-64
5800|code|MOVW            R4, #0xEA60|78-246-96-36
5804|code|STRB.W          R3, [SP,#0xA0+var_52]|141-248-78-48
5808|code|ASRS            R3, R7, #8|59-18
5810|code|STRB.W          R7, [SP,#0xA0+var_50]|141-248-80-112
5814|code|STRB.W          R3, [SP,#0xA0+var_51]|141-248-79-48
5818|code|BLX             memset|255-247-214-233
5822|code|LDR.W           R0, [R9]|217-248-0-0
5826|code|MOVS            R2, #0x53 ; 'S'|83-34
5828|code|MOVS            R3, #0xA|10-35
5830|code|MOVS            R1, #0x20 ; ' '|32-33
5832|code|STR             R2, [SP,#0xA0+var_98]|2-146
5834|code|MOV             R2, #0xFFFFFFFE|111-240-1-2
5838|code|STRB.W          R3, [SP,#0xA0+var_90]|141-248-16-48
5842|code|ADD             R3, SP, #0xA0+var_58|18-171
5844|code|STRB.W          R1, [SP,#0xA0+var_8F]|141-248-17-16
5848|code|MOVS            R1, #1; size|1-33
5850|code|STR             R2, [SP,#0xA0+var_94]|3-146
5852|code|ADD             R2, SP, #0xA0+var_4C|21-170
5854|code|STR             R7, [SP,#0xA0+var_8C]|5-151
5856|code|STR             R6, [SP,#0xA0+var_88]|6-150
5858|code|STR             R3, [SP,#0xA0+var_84]|7-147
5860|code|STR             R2, [SP,#0xA0+var_80]|8-146
5862|code|STR             R1, [SP,#0xA0+var_74]|11-145
5864|code|STR             R4, [SP,#0xA0+var_7C]|9-148
5866|code|CBNZ            R0, loc_1742|80-187
5868|code|MOV             R0, R10; fd|80-70
5870|code|MOVW            R1, #0x2285; request|66-242-133-33
5874|code|MOV             R2, R5|42-70
5876|code|BLX             ioctl|255-247-122-233
5880|code|CMP             R0, #0|0-40
5882|code|BLT             loc_1786|68-219
5884|code|MOV             R0, R5; hp|40-70
5886|code|BLX             sg_err_category3|255-247-174-233
5890|code|MOV             R4, R0|4-70
5892|code|CBZ             R0, loc_1716|56-177
5894|code|CMP             R0, #0x15|21-40
5896|code|MOV             R1, R5; hp|41-70
5898|code|BNE             loc_172E|16-209
5900|code|LDR             R0, =(aWriteBufferDat - 0x1714); "WRITE BUFFER data, continuing"|39-72
5902|code|MOVS            R2, #1; raw_sinfo|1-34
5904|code|ADD             R0, PC; "WRITE BUFFER data, continuing"|120-68
5906|code|BLX             sg_chk_n_print3|255-247-224-233
5910|code|MOV             R0, R6; ptr|48-70
5912|code|BLX             free|255-247-66-233
5916|code|MOV             R0, R4|32-70
5918|code|LDR             R3, [SP,#0xA0+var_9C]|1-155
5920|code|LDR             R2, [SP,#0xA0+var_2C]|29-154
5922|code|LDR             R3, [R3]|27-104
5924|code|CMP             R2, R3|154-66
5926|code|BNE             loc_179A|56-209
5928|code|ADD             SP, SP, #0x7C ; '|'|31-176
5930|code|POP.W           {R4-R11,PC}|189-232-240-143
5934|code|LDR             R0, =(aWriteBufferDat_0 - 0x1736); "WRITE BUFFER data error"|32-72
5936|code|MOVS            R2, #1; raw_sinfo|1-34
5938|code|ADD             R0, PC; "WRITE BUFFER data error"|120-68
5940|code|BLX             sg_chk_n_print3|255-247-206-233
5944|code|MOV             R0, R6; ptr|48-70
5946|code|BLX             free|255-247-50-233
5950|code|MOV             R0, R4|32-70
5952|code|B               loc_171E|237-231
5954|code|LDR             R4, =(stderr_ptr - 0x12F58)|28-76
5956|code|MOVS            R2, #0x22 ; '"'; n|34-34
5958|code|LDR             R0, =(aWriteBufferMod - 0x1758); "    write buffer [mode data] cdb: "|28-72
5960|code|ADD.W           R7, SP, #0xA0+var_4E|13-241-82-7
5964|code|LDR.W           R8, =(a02x - 0x175C); "%02x "|223-248-108-128
5968|code|LDR.W           R4, [R11,R4]; stderr|91-248-4-64
5972|code|ADD             R0, PC; "    write buffer [mode data] cdb: "|120-68
5974|code|MOV             R11, R3|155-70
5976|code|ADD             R8, PC; "%02x "|248-68
5978|code|LDR             R3, [R4]; s|35-104
5980|code|MOV             R9, R4|161-70
5982|code|BLX             fwrite|255-247-64-233
5986|code|LDRB.W          R3, [R11],#1|27-248-1-59
5990|code|MOVS            R1, #1|1-33
5992|code|LDR             R0, [R4]|32-104
5994|code|MOV             R2, R8|66-70
5996|code|BLX             __fprintf_chk|255-247-142-233
6000|code|CMP             R11, R7|187-69
6002|code|BNE             loc_1762|246-209
6004|code|LDR.W           R1, [R9]; stream|217-248-0-16
6008|code|MOVS            R0, #0xA; c|10-32
6010|code|BLX             fputc|255-247-148-233
6014|code|B               loc_16EC|181-231
6016|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
6020|code|B               loc_171E|203-231
6022|code|LDR             R0, =(aSgTestRwbufSgI_1 - 0x178C); "sg_test_rwbuf: SG_IO WRITE BUFFER data "...|14-72
6024|code|ADD             R0, PC; "sg_test_rwbuf: SG_IO WRITE BUFFER data "...|120-68
6026|code|BLX             perror|255-247-36-233
6030|code|MOV             R0, R6; ptr|48-70
6032|code|BLX             free|255-247-6-233
6036|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
6040|code|B               loc_171E|193-231
6042|code|BLX             __stack_chk_fail|255-247-22-233
6046|data|ALIGN 0x10|0-191
6048|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1640|24-25-1-0
6052|data|DCD __stack_chk_guard_ptr - 0x12F58|132-0-0-0
6056|data|DCD dword_130A8 - 0x1646|98-26-1-0
6060|data|DCD aWriteBufferDat - 0x1714; "WRITE BUFFER data, continuing"|180-3-0-0
6064|data|DCD aWriteBufferDat_0 - 0x1736; "WRITE BUFFER data error"|178-3-0-0
6068|data|DCD stderr_ptr - 0x12F58|140-0-0-0
6072|data|DCD aWriteBufferMod - 0x1758; "    write buffer [mode data] cdb: "|28-3-0-0
6076|data|DCD a02x - 0x175C; "%02x "|68-1-0-0
6080|data|DCD aSgTestRwbufSgI_1 - 0x178C; "sg_test_rwbuf: SG_IO WRITE BUFFER data "...|12-3-0-0
6084|code|LDR             R0, =(aUsageSgTestRwb - 0x17CC); "Usage: sg_test_rwbuf [--addrd=AR] [--ad"...|17-72
6086|code|PUSH            {R3,LR}|8-181
6088|code|ADD             R0, PC; "Usage: sg_test_rwbuf [--addrd=AR] [--ad"...|120-68
6090|code|BLX             puts|255-247-30-233
6094|code|LDR             R0, =(aSizeSzTimesNum - 0x17D4); "                     --size=SZ [--times"...|16-72
6096|code|ADD             R0, PC; "                     --size=SZ [--times"...|120-68
6098|code|BLX             puts|255-247-26-233
6102|code|LDR             R0, =(aWhereAddrdArEx - 0x17DC); "  where:\n    --addrd=AR       extra by"...|15-72
6104|code|ADD             R0, PC; "  where:\n    --addrd=AR       extra by"...|120-68
6106|code|BLX             puts|255-247-22-233
6110|code|LDR             R0, =(aWarningIfYouAc - 0x17E4); "\nWARNING: If you access the device at "...|14-72
6112|code|ADD             R0, PC; "\nWARNING: If you access the device at "...|120-68
6114|code|BLX             puts|255-247-18-233
6118|code|LDR             R0, =(aMountedHardDis - 0x17EC); " mounted hard disk, the device's buffer"...|13-72
6120|code|ADD             R0, PC; " mounted hard disk, the device's buffer"...|120-68
6122|code|BLX             puts|255-247-14-233
6126|code|LDR             R0, =(aForOtherDataAt - 0x17F4); " for other data at the same time, and o"...|12-72
6128|code|ADD             R0, PC; " for other data at the same time, and o"...|120-68
6130|code|BLX             puts|255-247-10-233
6134|code|LDR             R0, =(aCauseDataCorru - 0x17FC); " cause data corruption!"|11-72
6136|code|ADD             R0, PC; " cause data corruption!"|120-68
6138|code|BLX             puts|255-247-6-233
6142|code|LDR             R0, =(aCDouglasGilber - 0x1808); "(c) Douglas Gilbert, Kurt Garloff, 2000"...|10-72
6144|code|POP.W           {R3,LR}|189-232-8-64
6148|code|ADD             R0, PC; "(c) Douglas Gilbert, Kurt Garloff, 2000"...|120-68
6150|code|B.W             j_puts|255-247-253-184
6154|data|ALIGN 4|0-191
6156|data|DCD aUsageSgTestRwb - 0x17CC; "Usage: sg_test_rwbuf [--addrd=AR] [--ad"...|52-3-0-0
6160|data|DCD aSizeSzTimesNum - 0x17D4; "                     --size=SZ [--times"...|112-3-0-0
6164|data|DCD aWhereAddrdArEx - 0x17DC; "  where:\n    --addrd=AR       extra by"...|248-3-0-0
6168|data|DCD aWarningIfYouAc - 0x17E4; "\nWARNING: If you access the device at "...|196-5-0-0
6172|data|DCD aMountedHardDis - 0x17EC; " mounted hard disk, the device's buffer"...|8-6-0-0
6176|data|DCD aForOtherDataAt - 0x17F4; " for other data at the same time, and o"...|76-6-0-0
6180|data|DCD aCauseDataCorru - 0x17FC; " cause data corruption!"|136-6-0-0
6184|data|DCD aCDouglasGilber - 0x1808; "(c) Douglas Gilbert, Kurt Garloff, 2000"...|148-6-0-0
6188|code|PUSH.W          {R3-R9,LR}|45-233-248-67
6192|code|MOV             R7, R0|7-70
6194|code|LDR             R6, =(off_12E48 - 0x183E)|12-78
6196|code|MOV             R8, R1|136-70
6198|code|LDR             R5, =(off_12E44 - 0x1844)|12-77
6200|code|MOV             R9, R2|145-70
6202|code|ADD             R6, PC; off_12E48|126-68
6204|code|BLX             .init_proc|255-247-154-232
6208|code|ADD             R5, PC; off_12E44|125-68
6210|code|SUBS            R6, R6, R5|118-27
6212|code|ASRS            R6, R6, #2|182-16
6214|code|BEQ             locret_185E|10-208
6216|code|SUBS            R5, #4|4-61
6218|code|MOVS            R4, #0|0-36
6220|code|ADDS            R4, #1|1-52
6222|code|LDR.W           R3, [R5,#4]!|85-248-4-63
6226|code|MOV             R0, R7|56-70
6228|code|MOV             R1, R8|65-70
6230|code|MOV             R2, R9|74-70
6232|code|BLX             R3|152-71
6234|code|CMP             R4, R6|180-66
6236|code|BNE             loc_184C|246-209
6238|code|POP.W           {R3-R9,PC}|189-232-248-131
6242|data|ALIGN 4|0-191
6244|data|DCD off_12E48 - 0x183E|10-22-1-0
6248|data|DCD off_12E44 - 0x1844|0-22-1-0
6252|code|BX              LR|112-71
6254|data|ALIGN 0x10|0-191
6256|code|PUSH            {R3,LR}; _fini|8-64-45-233
6260|code|POP             {R3,PC}|8-128-189-232
77380|data|DCD sub_1018+1|25-16-0-0
77384|data|DCD sub_FD8+1|217-15-0-0
77388|data|DCD 0|0-0-0-0
77392|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
77400|data|Elf32_Dyn <1, <0x97>>; DT_NEEDED libc.so.6|1-0-0-0-151-0-0-0
77408|data|Elf32_Dyn <1, <0x173>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-115-1-0-0
77416|data|Elf32_Dyn <0xC, <0x974>>; DT_INIT|12-0-0-0-116-9-0-0
77424|data|Elf32_Dyn <0xD, <0x1870>>; DT_FINI|13-0-0-0-112-24-0-0
77432|data|Elf32_Dyn <0x19, <0x12E44>>; DT_INIT_ARRAY|25-0-0-0-68-46-1-0
77440|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77448|data|Elf32_Dyn <0x1A, <0x12E48>>; DT_FINI_ARRAY|26-0-0-0-72-46-1-0
77456|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77464|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77472|data|Elf32_Dyn <5, <0x534>>; DT_STRTAB|5-0-0-0-52-5-0-0
77480|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77488|data|Elf32_Dyn <0xA, <0x20A>>; DT_STRSZ|10-0-0-0-10-2-0-0
77496|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77504|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77512|data|Elf32_Dyn <3, <0x12F58>>; DT_PLTGOT|3-0-0-0-88-47-1-0
77520|data|Elf32_Dyn <2, <0xD8>>; DT_PLTRELSZ|2-0-0-0-216-0-0-0
77528|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77536|data|Elf32_Dyn <0x17, <0x89C>>; DT_JMPREL|23-0-0-0-156-8-0-0
77544|data|Elf32_Dyn <0x11, <0x7E4>>; DT_REL|17-0-0-0-228-7-0-0
77552|data|Elf32_Dyn <0x12, <0xB8>>; DT_RELSZ|18-0-0-0-184-0-0-0
77560|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77568|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77576|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77584|data|Elf32_Dyn <0x6FFFFFFE, <0x7A4>>; DT_VERNEED|254-255-255-111-164-7-0-0
77592|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77600|data|Elf32_Dyn <0x6FFFFFF0, <0x73E>>; DT_VERSYM|240-255-255-111-62-7-0-0
77608|data|Elf32_Dyn <0x6FFFFFFA, <0xE>>; DT_RELCOUNT|250-255-255-111-14-0-0-0
77616|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77656|data|DCD stru_12E50|80-46-1-0
77660|data|DCD 0|0-0-0-0
77664|data|DCD dword_0|0-0-0-0
77668|data|DCD __imp___cxa_finalize|196-48-1-0
77672|data|DCD __imp_free|200-48-1-0
77676|data|DCD __imp_memcpy|208-48-1-0
77680|data|DCD __imp_time|212-48-1-0
77684|data|DCD __imp___stack_chk_fail|220-48-1-0
77688|data|DCD __imp_perror|224-48-1-0
77692|data|DCD __imp_fwrite|232-48-1-0
77696|data|DCD __imp_ioctl|236-48-1-0
77700|data|DCD __imp_open64|240-48-1-0
77704|data|DCD __imp_puts|244-48-1-0
77708|data|DCD __imp_malloc|248-48-1-0
77712|data|DCD __imp___libc_start_main|252-48-1-0
77716|data|DCD __imp___gmon_start__|64-49-1-0
77720|data|DCD __imp_getopt_long|0-49-1-0
77724|data|DCD __imp_exit|4-49-1-0
77728|data|DCD __imp_srand|8-49-1-0
77732|data|DCD __imp_sg_err_category3|12-49-1-0
77736|data|DCD __imp_memset|16-49-1-0
77740|data|DCD __imp_putchar|20-49-1-0
77744|data|DCD __imp___printf_chk|24-49-1-0
77748|data|DCD __imp___fprintf_chk|28-49-1-0
77752|data|DCD __imp_rand|32-49-1-0
77756|data|DCD __imp_fputc|36-49-1-0
77760|data|DCD __imp_sg_get_num|40-49-1-0
77764|data|DCD __imp_abort|48-49-1-0
77768|data|DCD __imp_close|52-49-1-0
77772|data|DCD __imp_sg_chk_n_print3|56-49-1-0
77776|data|DCD __libc_csu_fini+1|109-24-0-0
77780|data|DCD __imp___cxa_finalize|196-48-1-0
77784|data|DCD _ITM_deregisterTMCloneTable|60-49-1-0
77788|data|DCD __stack_chk_guard|204-48-1-0
77792|data|DCD optind|216-48-1-0
77796|data|DCD stderr|228-48-1-0
77800|data|DCD __imp___gmon_start__|64-49-1-0
77804|data|DCD __libc_csu_init+1|45-24-0-0
77808|data|DCD main+1|225-10-0-0
77812|data|DCD _Jv_RegisterClasses|68-49-1-0
77816|data|DCD _ITM_registerTMCloneTable|72-49-1-0
77820|data|DCD optarg|44-49-1-0
77988|data|% 1; Alternative name is '__bss_start'|255
77989|data|ALIGN 4|255-255-255
77992|data|% 4|255-255-255-255
77996|data|% 4|255-255-255-255
78000|data|% 4|255-255-255-255
78004|data|% 4|255-255-255-255
78008|data|% 4|255-255-255-255
78012|data|% 1|255
