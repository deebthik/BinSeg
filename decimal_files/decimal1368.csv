address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|1-22-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x4210; SHT file offset|16-66-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x325C; File offset|92-50-0-0
60|data|DCD unk_325C; Virtual address|92-50-0-0
64|data|DCD 0x325C; Physical address|92-50-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x3268; Size in file image|104-50-0-0
168|data|DCD 0x3268; Size in memory image|104-50-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x3E30; File offset|48-62-0-0
188|data|DCD off_13E30; Virtual address|48-62-1-0
192|data|DCD 0x13E30; Physical address|48-62-1-0
196|data|DCD 0x2B8; Size in file image|184-2-0-0
200|data|DCD 0x2BC; Size in memory image|188-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x3E3C; File offset|60-62-0-0
220|data|DCD stru_13E3C; Virtual address|60-62-1-0
224|data|DCD 0x13E3C; Physical address|60-62-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x3E30; File offset|48-62-0-0
316|data|DCD off_13E30; Virtual address|48-62-1-0
320|data|DCD 0x13E30; Physical address|48-62-1-0
324|data|DCD 0x1D0; Size in file image|208-1-0-0
328|data|DCD 0x1D0; Size in memory image|208-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xD6, 0x5C, 0xF3, 9, 0xAB, 0x5C, 0xBC, 0xB7, 0xC9; Desc|214-92-243-9-171-92-188-183-201-41-110-92-79-196-156-24-49-62-154-69
436|data|DCD 3|3-0-0-0
440|data|DCD 0x2A|42-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x2A, 0x2E, 0x33|42-0-0-0-46-0-0-0-51-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_584 - byte_584, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_584 - byte_584, dword_13E38, 0, 3, 0, 0x14>|0-0-0-0-56-62-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCalloc - byte_584, dword_0, 0, 0x12, 0, 0>; "calloc"|114-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aSgSimpleInquir - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_simple_inquiry"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
612|data|Elf32_Sym <aSgSetBinaryMod - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_set_binary_mode"|150-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aCxaFinalize - byte_584, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|225-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
644|data|Elf32_Sym <aItmDeregistert - byte_584, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
660|data|Elf32_Sym <aDstrhex - byte_584, dword_0, 0, 0x12, 0, 0>; "dStrHex"|195-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aFree - byte_584, dword_0, 0, 0x12, 0, 0>; "free"|15-2-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aStackChkGuard - byte_584, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|40-2-0-0-0-0-0-0-0-0-0-0-17-0-0-0
708|data|Elf32_Sym <aSgCmdsCloseDev - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|203-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aMemcmp - byte_584, dword_0, 0, 0x12, 0, 0>; "memcmp"|135-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aOptind - byte_584, dword_0, 0, 0x11, 0, 0>; "optind"|40-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
756|data|Elf32_Sym <aStackChkFail - byte_584, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|83-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aPerror - byte_584, dword_0, 0, 0x12, 0, 0>; "perror"|47-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aStderr - byte_584, dword_0, 0, 0x11, 0, 0>; "stderr"|149-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
804|data|Elf32_Sym <aDstrhexerr - byte_584, dword_0, 0, 0x12, 0, 0>; "dStrHexErr"|244-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aPuts - byte_584, dword_0, 0, 0x12, 0, 0>; "puts"|78-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aLibcStartMain - byte_584, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|253-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aVfprintfChk - byte_584, dword_0, 0, 0x12, 0, 0>; "__vfprintf_chk"|190-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aCtypeToupperLo - byte_584, dword_0, 0, 0x12, 0, 0>; "__ctype_toupper_loc"|205-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aGmonStart - byte_584, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
900|data|Elf32_Sym <aGetoptLong - byte_584, dword_0, 0, 0x12, 0, 0>; "getopt_long"|171-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aStrlen - byte_584, dword_0, 0, 0x12, 0, 0>; "strlen"|121-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aStrchr - byte_584, dword_0, 0, 0x12, 0, 0>; "strchr"|183-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aStrcatChk - byte_584, dword_0, 0, 0x12, 0, 0>; "__strcat_chk"|240-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aIsoc99Sscanf - byte_584, dword_0, 0, 0x12, 0, 0>; "__isoc99_sscanf"|54-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aMemset - byte_584, dword_0, 0, 0x12, 0, 0>; "memset"|128-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aPutchar - byte_584, dword_0, 0, 0x12, 0, 0>; "putchar"|100-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1012|data|Elf32_Sym <aStrncpy - byte_584, dword_0, 0, 0x12, 0, 0>; "strncpy"|70-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aPrintfChk - byte_584, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|27-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aSgLlReportLuns - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_ll_report_luns"|255-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1060|data|Elf32_Sym <aSafeStrerror - byte_584, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|136-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aJvRegisterclas - byte_584, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1092|data|Elf32_Sym <aSgGetCategoryS - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|169-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aSgGetNum - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aItmRegistertmc - byte_584, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1140|data|Elf32_Sym <aSgCmdsOpenDevi - byte_584, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|224-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1156|data|Elf32_Sym <aOptarg - byte_584, dword_0, 0, 0x11, 0, 0>; "optarg"|142-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1172|data|Elf32_Sym <aAbort - byte_584, dword_0, 0, 0x12, 0, 0>; "abort"|108-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1188|data|Elf32_Sym <aSnprintfChk - byte_584, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|156-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1204|data|Elf32_Sym <aBssEnd+1 - byte_584, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|105-2-0-0-236-64-1-0-0-0-0-0-16-0-24-0
1220|data|Elf32_Sym <aEdata - byte_584, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|71-2-0-0-232-64-1-0-0-0-0-0-16-0-23-0
1236|data|Elf32_Sym <aDataStart - byte_584, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|58-2-0-0-0-64-1-0-0-0-0-0-16-0-23-0
1252|data|Elf32_Sym <aEnd_0 - byte_584, _end, 0, 0x10, 0, 0x18>; "_end"|124-2-0-0-236-64-1-0-0-0-0-0-16-0-24-0
1268|data|Elf32_Sym <aBssEnd - byte_584, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|104-2-0-0-236-64-1-0-0-0-0-0-16-0-24-0
1284|data|Elf32_Sym <aLibcCsuInit - byte_584, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|145-2-0-0-205-30-0-0-64-0-0-0-18-0-13-0
1300|data|Elf32_Sym <aBssStart - byte_584, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|78-2-0-0-232-64-1-0-0-0-0-0-16-0-24-0
1316|data|Elf32_Sym <aLibcStartMain+0xD - byte_584, main+1, 0x984, 0x12, 0, 0xD>; "main"|10-2-0-0-125-12-0-0-132-9-0-0-18-0-13-0
1332|data|Elf32_Sym <aLibcCsuInit+0xA - byte_584, .init_proc, 0, 0x12, 0, 0xB>; "_init"|155-2-0-0-216-10-0-0-0-0-0-0-18-0-11-0
1348|data|Elf32_Sym <aLibcCsuFini - byte_584, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|129-2-0-0-13-31-0-0-2-0-0-0-18-0-13-0
1364|data|Elf32_Sym <aBssStart_0 - byte_584, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|90-2-0-0-232-64-1-0-0-0-0-0-16-0-24-0
1380|data|Elf32_Sym <aLibcCsuFini+0xA - byte_584, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|139-2-0-0-16-31-0-0-0-0-0-0-18-0-14-0
1396|data|Elf32_Sym <aEnd - byte_584, _end, 0, 0x10, 0, 0x18>; "__end__"|116-2-0-0-236-64-1-0-0-0-0-0-16-0-24-0
1412|data|DCB 0|0
1413|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1430|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1458|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1473|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1493|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1519|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1530|data|DCB "sg_simple_inquiry",0|115-103-95-115-105-109-112-108-101-95-105-110-113-117-105-114-121-0
1548|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1562|data|DCB "sg_set_binary_mode",0|115-103-95-115-101-116-95-98-105-110-97-114-121-95-109-111-100-101-0
1581|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1607|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1615|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1636|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1656|data|DCB "dStrHexErr",0|100-83-116-114-72-101-120-69-114-114-0
1667|data|DCB "sg_ll_report_luns",0|115-103-95-108-108-95-114-101-112-111-114-116-95-108-117-110-115-0
1685|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1695|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1708|data|DCB "optind",0|111-112-116-105-110-100-0
1715|data|DCB "perror",0|112-101-114-114-111-114-0
1722|data|DCB "__isoc99_sscanf",0|95-95-105-115-111-99-57-57-95-115-115-99-97-110-102-0
1738|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1746|data|DCB "puts",0|112-117-116-115-0
1751|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1768|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1776|data|DCB "abort",0|97-98-111-114-116-0
1782|data|DCB "calloc",0|99-97-108-108-111-99-0
1789|data|DCB "strlen",0|115-116-114-108-101-110-0
1796|data|DCB "memset",0|109-101-109-115-101-116-0
1803|data|DCB "memcmp",0|109-101-109-99-109-112-0
1810|data|DCB "optarg",0|111-112-116-97-114-103-0
1817|data|DCB "stderr",0|115-116-100-101-114-114-0
1824|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
1839|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1851|data|DCB "strchr",0|115-116-114-99-104-114-0
1858|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
1873|data|DCB "__ctype_toupper_loc",0|95-95-99-116-121-112-101-95-116-111-117-112-112-101-114-95-108-111-99-0
1893|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1908|data|DCB "__strcat_chk",0|95-95-115-116-114-99-97-116-95-99-104-107-0
1921|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1939|data|DCB "free",0|102-114-101-101-0
1944|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1964|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1982|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1995|data|DCB "_edata",0|95-101-100-97-116-97-0
2002|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
2014|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
2028|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
2040|data|DCB "__end__",0|95-95-101-110-100-95-95-0
2048|data|DCB "_end",0|95-101-110-100-0
2053|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
2069|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
2085|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
2095|data|DCB "GLIBC_2.7",0|71-76-73-66-67-95-50-46-55-0
2105|data|DCB 0|0
2106|data|DCW 0|0-0
2108|data|DCW 0|0-0
2110|data|DCW 0|0-0
2112|data|DCW 2; calloc@@GLIBC_2.4|2-0
2114|data|DCW 0; local  symbol: sg_simple_inquiry|0-0
2116|data|DCW 0; local  symbol: sg_set_binary_mode|0-0
2118|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
2120|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
2122|data|DCW 0; local  symbol: dStrHex|0-0
2124|data|DCW 2; free@@GLIBC_2.4|2-0
2126|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
2128|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
2130|data|DCW 2; memcmp@@GLIBC_2.4|2-0
2132|data|DCW 2; optind@@GLIBC_2.4|2-0
2134|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
2136|data|DCW 2; perror@@GLIBC_2.4|2-0
2138|data|DCW 2; stderr@@GLIBC_2.4|2-0
2140|data|DCW 0; local  symbol: dStrHexErr|0-0
2142|data|DCW 2; puts@@GLIBC_2.4|2-0
2144|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
2146|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
2148|data|DCW 2; __ctype_toupper_loc@@GLIBC_2.4|2-0
2150|data|DCW 0; local  symbol: __gmon_start__|0-0
2152|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
2154|data|DCW 2; strlen@@GLIBC_2.4|2-0
2156|data|DCW 2; strchr@@GLIBC_2.4|2-0
2158|data|DCW 2; __strcat_chk@@GLIBC_2.4|2-0
2160|data|DCW 4; __isoc99_sscanf@@GLIBC_2.7|4-0
2162|data|DCW 2; memset@@GLIBC_2.4|2-0
2164|data|DCW 2; putchar@@GLIBC_2.4|2-0
2166|data|DCW 2; strncpy@@GLIBC_2.4|2-0
2168|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
2170|data|DCW 0; local  symbol: sg_ll_report_luns|0-0
2172|data|DCW 0; local  symbol: safe_strerror|0-0
2174|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
2176|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
2178|data|DCW 0; local  symbol: sg_get_num|0-0
2180|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2182|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
2184|data|DCW 2; optarg@@GLIBC_2.4|2-0
2186|data|DCW 2; abort@@GLIBC_2.4|2-0
2188|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
2190|data|DCW 1; global symbol: _bss_end__|1-0
2192|data|DCW 1; global symbol: _edata|1-0
2194|data|DCW 1; global symbol: __data_start|1-0
2196|data|DCW 1; global symbol: _end|1-0
2198|data|DCW 1; global symbol: __bss_end__|1-0
2200|data|DCW 1; global symbol: __libc_csu_init|1-0
2202|data|DCW 1; global symbol: __bss_start|1-0
2204|data|DCW 1; global symbol: main|1-0
2206|data|DCW 1; global symbol: _init|1-0
2208|data|DCW 1; global symbol: __libc_csu_fini|1-0
2210|data|DCW 1; global symbol: __bss_start__|1-0
2212|data|DCW 1; global symbol: _fini|1-0
2214|data|DCW 1; global symbol: __end__|1-0
2216|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_584, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-20-2-0-0-16-0-0-0-32-0-0-0
2232|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_584, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-161-2-0-0-0-0-0-0
2248|data|Elf32_Verneed <1, 2, aLibcSo6 - byte_584, 0x10, 0>; "libc.so.6"|1-0-2-0-17-1-0-0-16-0-0-0-0-0-0-0
2264|data|Elf32_Vernaux <0xD696917, 0, 4, aGlibc27 - byte_584, 0x10>; "GLIBC_2.7"|23-105-105-13-0-0-4-0-171-2-0-0-16-0-0-0
2280|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_584, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-161-2-0-0-0-0-0-0
2296|data|Elf32_Rel <0x13E30, 0x17>; R_ARM_RELATIVE|48-62-1-0-23-0-0-0
2304|data|Elf32_Rel <0x13E34, 0x17>; R_ARM_RELATIVE|52-62-1-0-23-0-0-0
2312|data|Elf32_Rel <0x13FD0, 0x17>; R_ARM_RELATIVE|208-63-1-0-23-0-0-0
2320|data|Elf32_Rel <0x13FEC, 0x17>; R_ARM_RELATIVE|236-63-1-0-23-0-0-0
2328|data|Elf32_Rel <0x13FF0, 0x17>; R_ARM_RELATIVE|240-63-1-0-23-0-0-0
2336|data|Elf32_Rel <0x14004, 0x17>; R_ARM_RELATIVE|4-64-1-0-23-0-0-0
2344|data|Elf32_Rel <0x14008, 0x17>; R_ARM_RELATIVE|8-64-1-0-23-0-0-0
2352|data|Elf32_Rel <0x14018, 0x17>; R_ARM_RELATIVE|24-64-1-0-23-0-0-0
2360|data|Elf32_Rel <0x14028, 0x17>; R_ARM_RELATIVE|40-64-1-0-23-0-0-0
2368|data|Elf32_Rel <0x14038, 0x17>; R_ARM_RELATIVE|56-64-1-0-23-0-0-0
2376|data|Elf32_Rel <0x14048, 0x17>; R_ARM_RELATIVE|72-64-1-0-23-0-0-0
2384|data|Elf32_Rel <0x14058, 0x17>; R_ARM_RELATIVE|88-64-1-0-23-0-0-0
2392|data|Elf32_Rel <0x14068, 0x17>; R_ARM_RELATIVE|104-64-1-0-23-0-0-0
2400|data|Elf32_Rel <0x14078, 0x17>; R_ARM_RELATIVE|120-64-1-0-23-0-0-0
2408|data|Elf32_Rel <0x14088, 0x17>; R_ARM_RELATIVE|136-64-1-0-23-0-0-0
2416|data|Elf32_Rel <0x14098, 0x17>; R_ARM_RELATIVE|152-64-1-0-23-0-0-0
2424|data|Elf32_Rel <0x140A8, 0x17>; R_ARM_RELATIVE|168-64-1-0-23-0-0-0
2432|data|Elf32_Rel <0x140B8, 0x17>; R_ARM_RELATIVE|184-64-1-0-23-0-0-0
2440|data|Elf32_Rel <0x140C8, 0x17>; R_ARM_RELATIVE|200-64-1-0-23-0-0-0
2448|data|Elf32_Rel <0x13FD4, 0x615>; R_ARM_GLOB_DAT __cxa_finalize|212-63-1-0-21-6-0-0
2456|data|Elf32_Rel <0x13FD8, 0x715>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-63-1-0-21-7-0-0
2464|data|Elf32_Rel <0x13FDC, 0xA15>; R_ARM_GLOB_DAT __stack_chk_guard|220-63-1-0-21-10-0-0
2472|data|Elf32_Rel <0x13FE0, 0xD15>; R_ARM_GLOB_DAT optind|224-63-1-0-21-13-0-0
2480|data|Elf32_Rel <0x13FE4, 0x1015>; R_ARM_GLOB_DAT stderr|228-63-1-0-21-16-0-0
2488|data|Elf32_Rel <0x13FE8, 0x1615>; R_ARM_GLOB_DAT __gmon_start__|232-63-1-0-21-22-0-0
2496|data|Elf32_Rel <0x13FF4, 0x2215>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-63-1-0-21-34-0-0
2504|data|Elf32_Rel <0x13FF8, 0x2515>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-63-1-0-21-37-0-0
2512|data|Elf32_Rel <0x13FFC, 0x2715>; R_ARM_GLOB_DAT optarg|252-63-1-0-21-39-0-0
2520|data|Elf32_Rel <0x13F50, 0x316>; R_ARM_JUMP_SLOT calloc|80-63-1-0-22-3-0-0
2528|data|Elf32_Rel <0x13F54, 0x416>; R_ARM_JUMP_SLOT sg_simple_inquiry|84-63-1-0-22-4-0-0
2536|data|Elf32_Rel <0x13F58, 0x516>; R_ARM_JUMP_SLOT sg_set_binary_mode|88-63-1-0-22-5-0-0
2544|data|Elf32_Rel <0x13F5C, 0x616>; R_ARM_JUMP_SLOT __cxa_finalize|92-63-1-0-22-6-0-0
2552|data|Elf32_Rel <0x13F60, 0x816>; R_ARM_JUMP_SLOT dStrHex|96-63-1-0-22-8-0-0
2560|data|Elf32_Rel <0x13F64, 0x916>; R_ARM_JUMP_SLOT free|100-63-1-0-22-9-0-0
2568|data|Elf32_Rel <0x13F68, 0xB16>; R_ARM_JUMP_SLOT sg_cmds_close_device|104-63-1-0-22-11-0-0
2576|data|Elf32_Rel <0x13F6C, 0xC16>; R_ARM_JUMP_SLOT memcmp|108-63-1-0-22-12-0-0
2584|data|Elf32_Rel <0x13F70, 0xE16>; R_ARM_JUMP_SLOT __stack_chk_fail|112-63-1-0-22-14-0-0
2592|data|Elf32_Rel <0x13F74, 0xF16>; R_ARM_JUMP_SLOT perror|116-63-1-0-22-15-0-0
2600|data|Elf32_Rel <0x13F78, 0x1116>; R_ARM_JUMP_SLOT dStrHexErr|120-63-1-0-22-17-0-0
2608|data|Elf32_Rel <0x13F7C, 0x1216>; R_ARM_JUMP_SLOT puts|124-63-1-0-22-18-0-0
2616|data|Elf32_Rel <0x13F80, 0x1316>; R_ARM_JUMP_SLOT __libc_start_main|128-63-1-0-22-19-0-0
2624|data|Elf32_Rel <0x13F84, 0x1416>; R_ARM_JUMP_SLOT __vfprintf_chk|132-63-1-0-22-20-0-0
2632|data|Elf32_Rel <0x13F88, 0x1516>; R_ARM_JUMP_SLOT __ctype_toupper_loc|136-63-1-0-22-21-0-0
2640|data|Elf32_Rel <0x13F8C, 0x1616>; R_ARM_JUMP_SLOT __gmon_start__|140-63-1-0-22-22-0-0
2648|data|Elf32_Rel <0x13F90, 0x1716>; R_ARM_JUMP_SLOT getopt_long|144-63-1-0-22-23-0-0
2656|data|Elf32_Rel <0x13F94, 0x1816>; R_ARM_JUMP_SLOT strlen|148-63-1-0-22-24-0-0
2664|data|Elf32_Rel <0x13F98, 0x1916>; R_ARM_JUMP_SLOT strchr|152-63-1-0-22-25-0-0
2672|data|Elf32_Rel <0x13F9C, 0x1A16>; R_ARM_JUMP_SLOT __strcat_chk|156-63-1-0-22-26-0-0
2680|data|Elf32_Rel <0x13FA0, 0x1B16>; R_ARM_JUMP_SLOT __isoc99_sscanf|160-63-1-0-22-27-0-0
2688|data|Elf32_Rel <0x13FA4, 0x1C16>; R_ARM_JUMP_SLOT memset|164-63-1-0-22-28-0-0
2696|data|Elf32_Rel <0x13FA8, 0x1D16>; R_ARM_JUMP_SLOT putchar|168-63-1-0-22-29-0-0
2704|data|Elf32_Rel <0x13FAC, 0x1E16>; R_ARM_JUMP_SLOT strncpy|172-63-1-0-22-30-0-0
2712|data|Elf32_Rel <0x13FB0, 0x1F16>; R_ARM_JUMP_SLOT __printf_chk|176-63-1-0-22-31-0-0
2720|data|Elf32_Rel <0x13FB4, 0x2016>; R_ARM_JUMP_SLOT sg_ll_report_luns|180-63-1-0-22-32-0-0
2728|data|Elf32_Rel <0x13FB8, 0x2116>; R_ARM_JUMP_SLOT safe_strerror|184-63-1-0-22-33-0-0
2736|data|Elf32_Rel <0x13FBC, 0x2316>; R_ARM_JUMP_SLOT sg_get_category_sense_str|188-63-1-0-22-35-0-0
2744|data|Elf32_Rel <0x13FC0, 0x2416>; R_ARM_JUMP_SLOT sg_get_num|192-63-1-0-22-36-0-0
2752|data|Elf32_Rel <0x13FC4, 0x2616>; R_ARM_JUMP_SLOT sg_cmds_open_device|196-63-1-0-22-38-0-0
2760|data|Elf32_Rel <0x13FC8, 0x2816>; R_ARM_JUMP_SLOT abort|200-63-1-0-22-40-0-0
2768|data|Elf32_Rel <0x13FCC, 0x2916>; R_ARM_JUMP_SLOT __snprintf_chk|204-63-1-0-22-41-0-0
2776|code|PUSH            {R3,LR}; _init|8-64-45-233
2780|code|BL              sub_1648|217-2-0-235
2784|code|POP             {R3,PC}|8-128-189-232
2788|code|PUSH            {LR}|4-224-45-229
2792|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0xAF4)|4-224-159-229
2796|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2800|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2804|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xAF4|80-52-1-0
2808|code|ADR             R12, 0xB00|0-198-143-226
2812|code|ADD             R12, R12, #0x13000|19-202-140-226
2816|code|LDR             PC, [R12,#(calloc_ptr - 0x13B00)]!; __imp_calloc|80-244-188-229
2820|code|ADR             R12, 0xB0C|0-198-143-226
2824|code|ADD             R12, R12, #0x13000|19-202-140-226
2828|code|LDR             PC, [R12,#(sg_simple_inquiry_ptr - 0x13B0C)]!; __imp_sg_simple_inquiry|72-244-188-229
2832|code|ADR             R12, 0xB18|0-198-143-226
2836|code|ADD             R12, R12, #0x13000|19-202-140-226
2840|code|LDR             PC, [R12,#(sg_set_binary_mode_ptr - 0x13B18)]!; __imp_sg_set_binary_mode|64-244-188-229
2844|code|ADR             R12, 0xB24|0-198-143-226
2848|code|ADD             R12, R12, #0x13000|19-202-140-226
2852|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x13B24)]!; __imp___cxa_finalize|56-244-188-229
2856|code|ADR             R12, 0xB30|0-198-143-226
2860|code|ADD             R12, R12, #0x13000|19-202-140-226
2864|code|LDR             PC, [R12,#(dStrHex_ptr - 0x13B30)]!; __imp_dStrHex|48-244-188-229
2868|code|ADR             R12, 0xB3C|0-198-143-226
2872|code|ADD             R12, R12, #0x13000|19-202-140-226
2876|code|LDR             PC, [R12,#(free_ptr - 0x13B3C)]!; __imp_free|40-244-188-229
2880|code|ADR             R12, 0xB48|0-198-143-226
2884|code|ADD             R12, R12, #0x13000|19-202-140-226
2888|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x13B48)]!; __imp_sg_cmds_close_device|32-244-188-229
2892|code|ADR             R12, 0xB54|0-198-143-226
2896|code|ADD             R12, R12, #0x13000|19-202-140-226
2900|code|LDR             PC, [R12,#(memcmp_ptr - 0x13B54)]!; __imp_memcmp|24-244-188-229
2904|code|ADR             R12, 0xB60|0-198-143-226
2908|code|ADD             R12, R12, #0x13000|19-202-140-226
2912|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x13B60)]!; __imp___stack_chk_fail|16-244-188-229
2916|code|ADR             R12, 0xB6C|0-198-143-226
2920|code|ADD             R12, R12, #0x13000|19-202-140-226
2924|code|LDR             PC, [R12,#(perror_ptr - 0x13B6C)]!; __imp_perror|8-244-188-229
2928|code|ADR             R12, 0xB78|0-198-143-226
2932|code|ADD             R12, R12, #0x13000|19-202-140-226
2936|code|LDR             PC, [R12,#(dStrHexErr_ptr - 0x13B78)]!; __imp_dStrHexErr|0-244-188-229
2940|code|ADR             R12, 0xB84|0-198-143-226
2944|code|ADD             R12, R12, #0x13000|19-202-140-226
2948|code|LDR             PC, [R12,#(puts_ptr - 0x13B84)]!; __imp_puts|248-243-188-229
2952|code|ADR             R12, 0xB90|0-198-143-226
2956|code|ADD             R12, R12, #0x13000|19-202-140-226
2960|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x13B90)]!; __imp___libc_start_main|240-243-188-229
2964|code|ADR             R12, 0xB9C|0-198-143-226
2968|code|ADD             R12, R12, #0x13000|19-202-140-226
2972|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x13B9C)]!; __imp___vfprintf_chk|232-243-188-229
2976|code|ADR             R12, 0xBA8|0-198-143-226
2980|code|ADD             R12, R12, #0x13000|19-202-140-226
2984|code|LDR             PC, [R12,#(__ctype_toupper_loc_ptr - 0x13BA8)]!; __imp___ctype_toupper_loc|224-243-188-229
2988|code|ADR             R12, 0xBB4|0-198-143-226
2992|code|ADD             R12, R12, #0x13000|19-202-140-226
2996|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x13BB4)]!; __imp___gmon_start__|216-243-188-229
3000|code|ADR             R12, 0xBC0|0-198-143-226
3004|code|ADD             R12, R12, #0x13000|19-202-140-226
3008|code|LDR             PC, [R12,#(getopt_long_ptr - 0x13BC0)]!; __imp_getopt_long|208-243-188-229
3012|code|ADR             R12, 0xBCC|0-198-143-226
3016|code|ADD             R12, R12, #0x13000|19-202-140-226
3020|code|LDR             PC, [R12,#(strlen_ptr - 0x13BCC)]!; __imp_strlen|200-243-188-229
3024|code|ADR             R12, 0xBD8|0-198-143-226
3028|code|ADD             R12, R12, #0x13000|19-202-140-226
3032|code|LDR             PC, [R12,#(strchr_ptr - 0x13BD8)]!; __imp_strchr|192-243-188-229
3036|code|ADR             R12, 0xBE4|0-198-143-226
3040|code|ADD             R12, R12, #0x13000|19-202-140-226
3044|code|LDR             PC, [R12,#(__strcat_chk_ptr - 0x13BE4)]!; __imp___strcat_chk|184-243-188-229
3048|code|ADR             R12, 0xBF0|0-198-143-226
3052|code|ADD             R12, R12, #0x13000|19-202-140-226
3056|code|LDR             PC, [R12,#(__isoc99_sscanf_ptr - 0x13BF0)]!; __imp___isoc99_sscanf|176-243-188-229
3060|code|ADR             R12, 0xBFC|0-198-143-226
3064|code|ADD             R12, R12, #0x13000|19-202-140-226
3068|code|LDR             PC, [R12,#(memset_ptr - 0x13BFC)]!; __imp_memset|168-243-188-229
3072|code|ADR             R12, 0xC08|0-198-143-226
3076|code|ADD             R12, R12, #0x13000|19-202-140-226
3080|code|LDR             PC, [R12,#(putchar_ptr - 0x13C08)]!; __imp_putchar|160-243-188-229
3084|code|ADR             R12, 0xC14|0-198-143-226
3088|code|ADD             R12, R12, #0x13000|19-202-140-226
3092|code|LDR             PC, [R12,#(strncpy_ptr - 0x13C14)]!; __imp_strncpy|152-243-188-229
3096|code|BX              PC|120-71
3098|data|ALIGN 4|192-70
3100|code|ADR             R12, 0xC24|0-198-143-226
3104|code|ADD             R12, R12, #0x13000|19-202-140-226
3108|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x13C24)]!; __imp___printf_chk|140-243-188-229
3112|code|ADR             R12, 0xC30|0-198-143-226
3116|code|ADD             R12, R12, #0x13000|19-202-140-226
3120|code|LDR             PC, [R12,#(sg_ll_report_luns_ptr - 0x13C30)]!; __imp_sg_ll_report_luns|132-243-188-229
3124|code|ADR             R12, 0xC3C|0-198-143-226
3128|code|ADD             R12, R12, #0x13000|19-202-140-226
3132|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x13C3C)]!; __imp_safe_strerror|124-243-188-229
3136|code|ADR             R12, 0xC48|0-198-143-226
3140|code|ADD             R12, R12, #0x13000|19-202-140-226
3144|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x13C48)]!; __imp_sg_get_category_sense_str|116-243-188-229
3148|code|ADR             R12, 0xC54|0-198-143-226
3152|code|ADD             R12, R12, #0x13000|19-202-140-226
3156|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x13C54)]!; __imp_sg_get_num|108-243-188-229
3160|code|ADR             R12, 0xC60|0-198-143-226
3164|code|ADD             R12, R12, #0x13000|19-202-140-226
3168|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x13C60)]!; __imp_sg_cmds_open_device|100-243-188-229
3172|code|ADR             R12, 0xC6C|0-198-143-226
3176|code|ADD             R12, R12, #0x13000|19-202-140-226
3180|code|LDR             PC, [R12,#(abort_ptr - 0x13C6C)]!; __imp_abort|92-243-188-229
3184|code|ADR             R12, 0xC78|0-198-143-226
3188|code|ADD             R12, R12, #0x13000|19-202-140-226
3192|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x13C78)]!; __imp___snprintf_chk|84-243-188-229
3196|code|PUSH.W          {R4-R11,LR}|45-233-240-79
3200|code|SUB             SP, SP, #0xEC|187-176
3202|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0xC94)|223-248-168-168
3206|code|MOV.W           R11, #0|79-240-0-11
3210|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x13F44)|223-248-164-56
3214|code|ADD             R6, SP, #0x110+var_B0|24-174
3216|code|ADD             R10, PC; _GLOBAL_OFFSET_TABLE_|250-68
3218|code|LDR.W           R9, =(aDhhllmQrrsTVv - 0xCA4); "dhHlLm:qrRs:t:vV"|223-248-160-152
3222|code|LDR.W           R8, =(off_14008 - 0xCA6); "decode"|223-248-160-136
3226|code|MOV             R4, R0|4-70
3228|code|LDR.W           R3, [R10,R3]; __stack_chk_guard|90-248-3-48
3232|code|ADD             R9, PC; "dhHlLm:qrRs:t:vV"|249-68
3234|code|ADD             R8, PC; off_14008|248-68
3236|code|MOV             R5, R1|13-70
3238|code|MOV             R7, R11|95-70
3240|code|STR.W           R11, [SP,#0x110+verbose]|205-248-12-176
3244|code|STR             R3, [SP,#0x110+var_108]|2-147
3246|code|LDR             R3, [R3]|27-104
3248|code|STR.W           R11, [SP,#0x110+select_report]|205-248-52-176
3252|code|STR.W           R11, [SP,#0x110+read_only]|205-248-36-176
3256|code|STR.W           R11, [SP,#0x110+var_F0]|205-248-32-176
3260|code|STR.W           R11, [SP,#0x110+var_F8]|205-248-24-176
3264|code|STR.W           R11, [SP,#0x110+mx_resp_len]|205-248-44-176
3268|code|STR.W           R11, [SP,#0x110+var_E8]|205-248-40-176
3272|code|STR.W           R11, [SP,#0x110+var_FC]|205-248-20-176
3276|code|STR.W           R11, [SP,#0x110+var_F4]|205-248-28-176
3280|code|STR.W           R11, [SP,#0x110+no_ascii]|205-248-16-176
3284|code|STR.W           R11, [SP,#0x110+var_E0]|205-248-48-176
3288|code|STR             R3, [SP,#0x110+var_2C]|57-147
3290|code|MOV             R3, R8; longopts|67-70
3292|code|STR             R6, [SP,#0x110+longind]; longind|0-150
3294|code|MOV             R0, R4; argc|32-70
3296|code|MOV             R1, R5; argv|41-70
3298|code|MOV             R2, R9; shortopts|74-70
3300|code|STR             R7, [SP,#0x110+var_B0]|24-151
3302|code|BLX             getopt_long|255-247-104-239
3306|code|ADDS            R3, R0, #1|67-28
3308|code|BEQ.W           loc_E14|0-240-146-128
3312|code|SUB.W           R3, R0, #0x3F ; '?'; switch 56 cases|160-241-63-3
3316|code|CMP             R3, #0x37|55-43
3318|code|BHI.W           def_CFA; jumptable 00000CFA default case, cases 64-71,73-75,77-81,83-85,87-99,101-103,105-107,110-112,117|0-242-131-128
3322|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
3326|data|DCB 0x40; jump table for switch statement|64
3327|data|DCB 0x81|129
3328|data|DCB 0x81|129
3329|data|DCB 0x81|129
3330|data|DCB 0x81|129
3331|data|DCB 0x81|129
3332|data|DCB 0x81|129
3333|data|DCB 0x81|129
3334|data|DCB 0x81|129
3335|data|DCB 0x3C|60
3336|data|DCB 0x81|129
3337|data|DCB 0x81|129
3338|data|DCB 0x81|129
3339|data|DCB 0x35|53
3340|data|DCB 0x81|129
3341|data|DCB 0x81|129
3342|data|DCB 0x81|129
3343|data|DCB 0x81|129
3344|data|DCB 0x81|129
3345|data|DCB 0x31|49
3346|data|DCB 0x81|129
3347|data|DCB 0x81|129
3348|data|DCB 0x81|129
3349|data|DCB 0x1F|31
3350|data|DCB 0x81|129
3351|data|DCB 0x81|129
3352|data|DCB 0x81|129
3353|data|DCB 0x81|129
3354|data|DCB 0x81|129
3355|data|DCB 0x81|129
3356|data|DCB 0x81|129
3357|data|DCB 0x81|129
3358|data|DCB 0x81|129
3359|data|DCB 0x81|129
3360|data|DCB 0x81|129
3361|data|DCB 0x81|129
3362|data|DCB 0x81|129
3363|data|DCB 0x1C|28
3364|data|DCB 0x81|129
3365|data|DCB 0x81|129
3366|data|DCB 0x81|129
3367|data|DCB 0x40|64
3368|data|DCB 0x81|129
3369|data|DCB 0x81|129
3370|data|DCB 0x81|129
3371|data|DCB 0x7D|125
3372|data|DCB 0x68|104
3373|data|DCB 0x81|129
3374|data|DCB 0x81|129
3375|data|DCB 0x81|129
3376|data|DCB 0x64|100
3377|data|DCB 0x60|96
3378|data|DCB 0x4F|79
3379|data|DCB 0x48|72
3380|data|DCB 0x81|129
3381|data|DCB 0x44|68
3382|code|MOVS            R3, #1; jumptable 00000CFA case 100|1-35
3384|code|STR             R3, [SP,#0x110+var_E0]|12-147
3386|code|B               loc_CDA|206-231
3388|code|LDR.W           R0, =(aVersionS - 0xD48); jumptable 00000CFA case 86|223-248-252-7
3392|code|LDR.W           R1, =(a12720140607 - 0xD4A); "1.27 20140607"|223-248-252-23
3396|code|ADD             R0, PC; "version: %s\n"|120-68
3398|code|ADD             R1, PC; "1.27 20140607"|121-68
3400|code|BL              sub_173C|0-240-248-252
3404|code|MOVS            R0, #0|0-32
3406|code|LDR             R3, [SP,#0x110+var_108]|2-155
3408|code|LDR             R2, [SP,#0x110+var_2C]|57-154
3410|code|LDR             R3, [R3]|27-104
3412|code|CMP             R2, R3|154-66
3414|code|BNE.W           loc_1500|64-240-211-131
3418|code|ADD             SP, SP, #0xEC|59-176
3420|code|POP.W           {R4-R11,PC}|189-232-240-143
3424|code|LDR             R3, [SP,#0x110+read_only]; jumptable 00000CFA case 82|9-155
3426|code|ADDS            R3, #1|1-51
3428|code|STR             R3, [SP,#0x110+read_only]|9-147
3430|code|B               loc_CDA|184-231
3432|code|LDR             R3, [SP,#0x110+var_FC]; jumptable 00000CFA case 76|5-155
3434|code|ADDS            R3, #1|1-51
3436|code|STR             R3, [SP,#0x110+var_FC]|5-147
3438|code|LDR             R3, [SP,#0x110+var_E8]|10-155
3440|code|ADDS            R3, #1|1-51
3442|code|STR             R3, [SP,#0x110+var_E8]|10-147
3444|code|B               loc_CDA|177-231
3446|code|LDR             R3, [SP,#0x110+no_ascii]; jumptable 00000CFA case 72|4-155
3448|code|ADDS            R3, #1|1-51
3450|code|STR             R3, [SP,#0x110+no_ascii]|4-147
3452|code|B               loc_CDA|173-231
3454|code|BL              sub_1784; jumptable 00000CFA cases 63,104|0-240-1-253
3458|code|MOVS            R0, #0|0-32
3460|code|B               loc_D4E|227-231
3462|code|LDR             R3, [SP,#0x110+verbose]; jumptable 00000CFA case 118|3-155
3464|code|ADDS            R3, #1|1-51
3466|code|STR             R3, [SP,#0x110+verbose]|3-147
3468|code|B               loc_CDA|165-231
3470|code|LDR.W           R3, =(optarg_ptr - 0x13F44); jumptable 00000CFA case 116|223-248-180-55
3474|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
3478|code|LDR.W           R11, [R3]|211-248-0-176
3482|code|B               loc_CDA|158-231
3484|code|LDR.W           R3, =(optarg_ptr - 0x13F44); jumptable 00000CFA case 115|223-248-164-55
3488|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
3492|code|LDR             R0, [R3]; buf|24-104
3494|code|BLX             sg_get_num|255-247-82-239
3498|code|CMP             R0, #0xFF|255-40
3500|code|STR             R0, [SP,#0x110+select_report]|13-144
3502|code|BLS             loc_CDA|148-217
3504|code|LDR.W           R0, =(aBadArgumentToS - 0xDB8); "bad argument to '--select', expect 0 to"...|223-248-148-7
3508|code|ADD             R0, PC; "bad argument to '--select', expect 0 to"...|120-68
3510|code|BL              sub_173C|0-240-193-252
3514|code|MOVS            R0, #1|1-32
3516|code|B               loc_D4E|199-231
3518|code|LDR             R3, [SP,#0x110+var_F0]; jumptable 00000CFA case 114|8-155
3520|code|ADDS            R3, #1|1-51
3522|code|STR             R3, [SP,#0x110+var_F0]|8-147
3524|code|B               loc_CDA|137-231
3526|code|LDR             R3, [SP,#0x110+var_F8]; jumptable 00000CFA case 113|6-155
3528|code|ADDS            R3, #1|1-51
3530|code|STR             R3, [SP,#0x110+var_F8]|6-147
3532|code|B               loc_CDA|133-231
3534|code|LDR.W           R3, =(optarg_ptr - 0x13F44); jumptable 00000CFA case 109|223-248-116-55
3538|code|LDR.W           R3, [R10,R3]; optarg|90-248-3-48
3542|code|LDR             R0, [R3]; buf|24-104
3544|code|BLX             sg_get_num|255-247-56-239
3548|code|CMP.W           R0, #0x100000|176-245-128-31
3552|code|STR             R0, [SP,#0x110+mx_resp_len]|11-144
3554|code|BLS.W           loc_CDA|127-246-122-175
3558|code|LDR.W           R0, =(aArgumentToMaxl - 0xDF2); "argument to '--maxlen' should be %d or "...|223-248-100-7
3562|code|MOV.W           R1, #0x100000|79-244-128-17
3566|code|ADD             R0, PC; "argument to '--maxlen' should be %d or "...|120-68
3568|code|BL              sub_173C|0-240-164-252
3572|code|MOVS            R0, #1|1-32
3574|code|B               loc_D4E|170-231
3576|code|LDR             R3, [SP,#0x110+var_F4]; jumptable 00000CFA case 108|7-155
3578|code|ADDS            R3, #1|1-51
3580|code|STR             R3, [SP,#0x110+var_F4]|7-147
3582|code|B               loc_CDA|108-231
3584|code|MOV             R1, R0; jumptable 00000CFA default case, cases 64-71,73-75,77-81,83-85,87-99,101-103,105-107,110-112,117|1-70
3586|code|LDR.W           R0, =(aUnrecognisedOp - 0xE0A); "unrecognised option code 0x%x ??\n"|223-248-76-7
3590|code|ADD             R0, PC; "unrecognised option code 0x%x ??\n"|120-68
3592|code|BL              sub_173C|0-240-152-252
3596|code|BL              sub_1784|0-240-186-252
3600|code|MOVS            R0, #1|1-32
3602|code|B               loc_D4E|156-231
3604|code|LDR.W           R3, =(optind_ptr - 0x13F44)|223-248-60-55
3608|code|LDR.W           R7, [R10,R3]; optind|90-248-3-112
3612|code|LDR             R3, [R7]|59-104
3614|code|CMP             R4, R3|156-66
3616|code|BGT.W           loc_F36|0-243-137-128
3620|code|CMP.W           R11, #0|187-241-0-15
3624|code|BEQ.W           loc_116E|0-240-161-129
3628|code|ADD             R4, SP, #0x110+var_7C|37-172
3630|code|MOVS            R5, #0|0-37
3632|code|STR             R5, [SP,#0x110+var_7C]|37-149
3634|code|STR             R5, [R4,#4]|101-96
3636|code|BLX             __ctype_toupper_loc|255-247-180-238
3640|code|LDRB.W          R3, [R11]|155-248-0-48
3644|code|LDR             R7, [R0]|7-104
3646|code|LDR.W           R3, [R7,R3,LSL#2]|87-248-35-48
3650|code|CMP             R3, #0x4C ; 'L'|76-43
3652|code|BEQ.W           loc_11E0|0-240-204-129
3656|code|MOV             R0, R11; s|88-70
3658|code|BLX             strlen|255-247-188-238
3662|code|ADD.W           R3, R11, R0|11-235-0-3
3666|code|STR             R0, [SP,#0x110+var_B4]|23-144
3668|code|LDRB.W          R3, [R3,#-1]|19-248-1-60
3672|code|LDR.W           R3, [R7,R3,LSL#2]|87-248-35-48
3676|code|CMP             R3, #0x4C ; 'L'|76-43
3678|code|BEQ.W           loc_118C|0-240-149-129
3682|code|SUB.W           LR, R3, #0x57 ; 'W'|163-241-87-14
3686|code|MOV             R10, R5|170-70
3688|code|RSBS.W          R9, LR, #0|222-241-0-9
3692|code|ADC.W           R9, R9, LR|73-235-14-9
3696|code|LDRB.W          R3, [R11]|155-248-0-48
3700|code|CMP             R3, #0x30 ; '0'|48-43
3702|code|BEQ.W           loc_117A|0-240-128-129
3706|code|MOV             R0, R11; s|88-70
3708|code|MOVS            R1, #0x20 ; ' '; c|32-33
3710|code|BLX             strchr|255-247-168-238
3714|code|CMP             R0, #0|0-40
3716|code|BEQ.W           loc_1194|0-240-134-129
3720|code|LDR.W           R7, =(a2xN - 0xE96); " %2x%n"|223-248-204-118
3724|code|ADD             R5, SP, #0x110+var_B4|23-173
3726|code|MOV.W           R8, #0|79-240-0-8
3730|code|ADD             R7, PC; " %2x%n"|127-68
3732|code|MOV             R0, R11|88-70
3734|code|MOV             R1, R7|57-70
3736|code|MOV             R2, R6|50-70
3738|code|MOV             R3, R5|43-70
3740|code|BLX             __isoc99_sscanf|255-247-164-238
3744|code|CMP             R0, #1|1-40
3746|code|BNE.W           loc_11CC|64-240-147-129
3750|code|LDR             R2, [SP,#0x110+var_B0]|24-154
3752|code|LDR             R3, [SP,#0x110+var_B4]|23-155
3754|code|STRB.W          R2, [R4,R8]|4-248-8-32
3758|code|ADD.W           R8, R8, #1|8-241-1-8
3762|code|CMP.W           R8, #8|184-241-8-15
3766|code|ADD             R11, R3|155-68
3768|code|BNE             loc_E94|236-209
3770|code|LDR             R3, [SP,#0x110+verbose]|3-155
3772|code|ORRS.W          R3, R9, R3|89-234-3-3
3776|code|BNE.W           loc_123A|64-240-187-129
3780|code|CMP.W           R10, #0|186-241-0-15
3784|code|BEQ             loc_F10|34-208
3786|code|LDR             R3, [SP,#0x110+no_ascii]|4-155
3788|code|CMP             R3, #1|1-43
3790|code|BLE.W           loc_12CA|64-243-252-129
3794|code|LDRB.W          R0, [SP,#0x110+var_76]|157-248-154-0
3798|code|MOVS            R2, #0|0-34
3800|code|LDRB.W          R3, [SP,#0x110+var_75]|157-248-155-48
3804|code|ADD.W           R0, R3, R0,LSL#8|3-235-0-32
3808|code|ASRS            R1, R0, #0x1F|193-23
3810|code|ADDS            R5, R4, R2|165-24
3812|code|LSLS            R7, R1, #0x10|15-4
3814|code|LSLS            R6, R0, #0x10|6-4
3816|code|ORR.W           R7, R7, R0,LSR#16|71-234-16-71
3820|code|LDRB            R1, [R5,#4]|41-121
3822|code|SUBS            R2, #2|2-58
3824|code|LDRB            R3, [R5,#5]|107-121
3826|code|ADD.W           R3, R3, R1,LSL#8|3-235-1-35
3830|code|ADDS            R0, R6, R3|240-24
3832|code|ADC.W           R1, R7, R3,ASR#31|71-235-227-113
3836|code|ADDS            R6, R2, #6|150-29
3838|code|BNE             loc_EE2|240-209
3840|code|MOV             R3, R1|11-70
3842|code|LDR.W           R1, =(aLinuxWordFlipp - 0xF0E); "Linux 'word flipped' integer LUN repres"...|223-248-88-22
3846|code|MOV             R2, R0|2-70
3848|code|MOVS            R0, #1|1-32
3850|code|ADD             R1, PC; "Linux 'word flipped' integer LUN repres"...|121-68
3852|code|BLX             __printf_chk|255-247-134-238
3856|code|LDR.W           R0, =(aDecodedLun - 0xF18); "Decoded LUN:"|223-248-76-6
3860|code|ADD             R0, PC; "Decoded LUN:"|120-68
3862|code|BLX             puts|255-247-50-238
3866|code|LDR             R3, [SP,#0x110+verbose]|3-155
3868|code|LDR.W           R0, =(asc_3118+4 - 0xF28); "  "|223-248-68-6
3872|code|MOV             R1, R4; s1|33-70
3874|code|STR             R3, [SP,#0x110+longind]; int|0-147
3876|code|ADD             R0, PC; "  " ; int|120-68
3878|code|LDR             R3, [SP,#0x110+var_FC]|5-155
3880|code|AND.W           R2, R3, #1; int|3-240-1-2
3884|code|LDR             R3, [SP,#0x110+no_ascii]; int|4-155
3886|code|BL              sub_1E54|0-240-145-255
3890|code|MOVS            R0, #0|0-32
3892|code|B               loc_D4E|11-231
3894|code|ADDS            R2, R3, #1|90-28
3896|code|LDR.W           R8, [R5,R3,LSL#2]|85-248-35-128
3900|code|CMP             R4, R2|148-66
3902|code|STR             R2, [R7]|58-96
3904|code|BLE             loc_F6E|21-221
3906|code|LDR.W           R6, =(aUnexpectedExtr - 0xF4C); "Unexpected extra argument: %s\n"|223-248-36-102
3910|code|MOV             R8, R7|184-70
3912|code|ADD             R6, PC; "Unexpected extra argument: %s\n"|126-68
3914|code|B               loc_F60|9-224
3916|code|LDR.W           R1, [R5,R3,LSL#2]|85-248-35-16
3920|code|MOV             R0, R6|48-70
3922|code|BL              sub_173C|0-240-243-251
3926|code|LDR.W           R3, [R8]|216-248-0-48
3930|code|ADDS            R3, #1|1-51
3932|code|STR.W           R3, [R8]|200-248-0-48
3936|code|LDR             R3, [R7]|59-104
3938|code|CMP             R4, R3|156-66
3940|code|BGT             loc_F4C|242-220
3942|code|BL              sub_1784|0-240-13-252
3946|code|MOVS            R0, #1|1-32
3948|code|B               loc_D4E|239-230
3950|code|CMP.W           R11, #0|187-241-0-15
3954|code|BNE.W           loc_E2C|127-244-91-175
3958|code|CMP.W           R8, #0|184-241-0-15
3962|code|BEQ.W           loc_116E|0-240-248-128
3966|code|LDR             R3, [SP,#0x110+var_F0]|8-155
3968|code|CBZ             R3, loc_F8E|43-177
3970|code|MOVS            R0, #1|1-32
3972|code|BLX             sg_set_binary_mode|255-247-196-237
3976|code|CMP             R0, #0|0-40
3978|code|BLT.W           loc_146C|192-242-111-130
3982|code|LDR             R1, [SP,#0x110+read_only]; read_only|9-153
3984|code|MOV             R0, R8; device_name|64-70
3986|code|LDR             R2, [SP,#0x110+verbose]; verbose|3-154
3988|code|BLX             sg_cmds_open_device|255-247-96-238
3992|code|SUBS            R3, R0, #0|3-30
3994|code|STR             R3, [SP,#0x110+read_only]|9-147
3996|code|BLT.W           loc_1356|192-242-219-129
4000|code|LDR             R3, [SP,#0x110+var_E8]|10-155
4002|code|CBNZ            R3, loc_FAC|27-185
4004|code|LDR             R3, [SP,#0x110+var_E0]|12-155
4006|code|CMP             R3, #0|0-43
4008|code|BNE.W           loc_136C|64-240-224-129
4012|code|LDR             R3, [SP,#0x110+mx_resp_len]|11-155
4014|code|MOVS            R0, #1; nmemb|1-32
4016|code|CMP             R3, #0|0-43
4018|code|IT EQ|8-191
4020|code|MOVEQ.W         R3, #0x2000|79-244-0-83
4024|code|STR             R3, [SP,#0x110+mx_resp_len]|11-147
4026|code|MOV             R1, R3; size|25-70
4028|code|BLX             calloc|255-247-156-237
4032|code|MOV             R8, R0|128-70
4034|code|CMP             R0, #0|0-40
4036|code|BEQ.W           loc_13A0|0-240-236-129
4040|code|LDR             R3, [SP,#0x110+verbose]|3-155
4042|code|MOV             R2, R8; resp|66-70
4044|code|LDR             R0, [SP,#0x110+read_only]; sg_fd|9-152
4046|code|LDR             R1, [SP,#0x110+select_report]; select_report|13-153
4048|code|STR             R3, [SP,#0x110+var_10C]; verbose|1-147
4050|code|MOVS            R3, #1|1-35
4052|code|STR             R3, [SP,#0x110+longind]; noisy|0-147
4054|code|LDR             R3, [SP,#0x110+mx_resp_len]; mx_resp_len|11-155
4056|code|BLX             sg_ll_report_luns|255-247-38-238
4060|code|MOV             R9, R0|129-70
4062|code|CMP             R0, #0|0-40
4064|code|BNE.W           loc_1310|64-240-150-129
4068|code|LDRB.W          R1, [R8,#1]|152-248-1-16
4072|code|LDRB.W          R2, [R8]|152-248-0-32
4076|code|LDRB.W          R0, [R8,#2]|152-248-2-0
4080|code|LSLS            R1, R1, #0x10|9-4
4082|code|LDRB.W          R3, [R8,#3]|152-248-3-48
4086|code|ADD.W           R2, R1, R2,LSL#24|1-235-2-98
4090|code|ADD.W           R2, R2, R0,LSL#8|2-235-0-34
4094|code|ADD             R2, R3|26-68
4096|code|LDR             R3, [SP,#0x110+mx_resp_len]|11-155
4098|code|ADD.W           R5, R2, #8|2-241-8-5
4102|code|CMP             R3, R5|171-66
4104|code|IT GE|168-191
4106|code|MOVGE           R3, R5|43-70
4108|code|MOV             R6, R3|30-70
4110|code|LDR             R3, [SP,#0x110+var_F0]|8-155
4112|code|CMP             R3, #0|0-43
4114|code|BNE.W           loc_148C|64-240-59-130
4118|code|LDR             R3, [SP,#0x110+no_ascii]|4-155
4120|code|CMP             R3, #1|1-43
4122|code|BEQ.W           loc_14F4|0-240-107-130
4126|code|ADDS            R4, R2, #7|212-29
4128|code|CMP             R2, #0|0-42
4130|code|LDR             R3, [SP,#0x110+var_F8]|6-155
4132|code|MOV             R10, R2|146-70
4134|code|IT LT|184-191
4136|code|MOVLT           R10, R4|162-70
4138|code|MOV.W           R10, R10,ASR#3|79-234-234-10
4142|code|CBNZ            R3, loc_104E|115-185
4144|code|CMP.W           R10, #1|186-241-1-15
4148|code|BEQ.W           loc_14EE|0-240-91-130
4152|code|LDR.W           R3, =(aIes - 0x1040); "ies"|223-248-48-53
4156|code|ADD             R3, PC; "ies"|123-68
4158|code|LDR.W           R1, =(aLunListLengthD - 0x104C); "Lun list length = %d which imples %d lu"...|223-248-48-21
4162|code|MOVS            R0, #1|1-32
4164|code|STR             R3, [SP,#0x110+longind]|0-147
4166|code|MOV             R3, R10|83-70
4168|code|ADD             R1, PC; "Lun list length = %d which imples %d lu"...|121-68
4170|code|BLX             __printf_chk|255-247-232-237
4174|code|LDR             R3, [SP,#0x110+mx_resp_len]|11-155
4176|code|CMP             R3, R4|163-66
4178|code|BGT.W           loc_1478|0-243-17-130
4182|code|SUBS.W          R10, R3, #8|179-241-8-10
4186|code|IT MI|72-191
4188|code|ADDMI.W         R10, R3, #0xFFFFFFFF|3-241-255-58
4192|code|MOV.W           R10, R10,ASR#3|79-234-234-10
4196|code|CMP.W           R10, #1|186-241-1-15
4200|code|BEQ.W           loc_1504|0-240-76-130
4204|code|LDR.W           R2, =(aS - 0x1074); "s"|223-248-4-37
4208|code|ADD             R2, PC; "s"|122-68
4210|code|LDR.W           R0, =(aTooManyLunsFor - 0x107C); "  <<too many luns for internal buffer, "...|223-248-4-5
4214|code|MOV             R1, R10|81-70
4216|code|ADD             R0, PC; "  <<too many luns for internal buffer, "...|120-68
4218|code|BL              sub_173C|0-240-95-251
4222|code|LDR             R3, [SP,#0x110+verbose]|3-155
4224|code|CMP             R3, #1|1-43
4226|code|BLE             loc_1098|9-221
4228|code|LDR.W           R0, =(aOutputResponse - 0x108C); "\nOutput response in hex\n"|223-248-244-4
4232|code|ADD             R0, PC; "\nOutput response in hex\n"|120-68
4234|code|BL              sub_173C|0-240-87-251
4238|code|LDR             R1, [SP,#0x110+mx_resp_len]|11-153
4240|code|MOV             R0, R8|64-70
4242|code|MOVS            R2, #1|1-34
4244|code|BLX             dStrHexErr|255-247-108-237
4248|code|LDR.W           R2, =(aReportLunsSele - 0x10AA); "Report luns [select_report=0x%x]:\n"|223-248-228-36
4252|code|ADD.W           R7, R8, #8|8-241-8-7
4256|code|LDR.W           R6, =(a02x - 0x10B2); "%02x"|223-248-224-100
4260|code|MOVS            R3, #0|0-35
4262|code|ADD             R2, PC; "Report luns [select_report=0x%x]:\n"|122-68
4264|code|STR             R2, [SP,#0x110+mx_resp_len]|11-146
4266|code|LDR.W           R2, =(aLlu - 0x10B8); "    [%llu]"|223-248-220-36
4270|code|ADD             R6, PC; "%02x"|126-68
4272|code|LDR.W           R11, =(asc_30EC - 0x10C0); "    "|223-248-216-180
4276|code|ADD             R2, PC; "    [%llu]"|122-68
4278|code|STR             R2, [SP,#0x110+var_D8]|14-146
4280|code|LDR.W           R2, =(a0xLlx - 0x10C8); "    [0x%llx]"|223-248-212-36
4284|code|ADD             R11, PC; "    "|251-68
4286|code|STR.W           R11, [SP,#0x110+var_F0]|205-248-32-176
4290|code|MOV             R11, R8|195-70
4292|code|ADD             R2, PC; "    [0x%llx]"|122-68
4294|code|STR             R2, [SP,#0x110+var_E8]|10-146
4296|code|LDR.W           R2, =(asc_3118 - 0x10D4); "      "|223-248-200-36
4300|code|STR.W           R9, [SP,#0x110+var_C8]|205-248-72-144
4304|code|ADD             R2, PC; "      "|122-68
4306|code|STR             R2, [SP,#0x110+var_D0]|16-146
4308|code|ADDS            R5, R3, #1|93-28
4310|code|CMP             R3, R10|83-69
4312|code|MOV.W           R4, R5,LSL#3|79-234-197-4
4316|code|BGE.W           loc_141E|128-242-159-129
4320|code|LDR             R2, [SP,#0x110+var_F8]|6-154
4322|code|CBNZ            R2, loc_10F2|50-185
4324|code|CMP             R3, #0|0-43
4326|code|BEQ.W           loc_151E|0-240-26-130
4330|code|MOVS            R0, #1|1-32
4332|code|LDR             R1, [SP,#0x110+var_F0]|8-153
4334|code|BLX             __printf_chk|255-247-150-237
4338|code|MOVS            R2, #0|0-34
4340|code|ADD             R4, R11|92-68
4342|code|MOV             R3, R2|19-70
4344|code|STR             R2, [SP,#0x110+var_B4]|23-146
4346|code|LDRB            R2, [R4,R3]|226-92
4348|code|MOVS            R0, #1|1-32
4350|code|MOV             R1, R6|49-70
4352|code|BLX             __printf_chk|255-247-140-237
4356|code|LDR             R3, [SP,#0x110+var_B4]|23-155
4358|code|ADDS            R3, #1|1-51
4360|code|STR             R3, [SP,#0x110+var_B4]|23-147
4362|code|CMP             R3, #7|7-43
4364|code|BLE             loc_10FA|245-221
4366|code|LDR             R3, [SP,#0x110+var_F4]|7-155
4368|code|CBZ             R3, loc_115A|27-179
4370|code|LDRB            R0, [R7,#6]|184-121
4372|code|ADDS            R3, R7, #4|59-29
4374|code|LDRB            R2, [R7,#7]|250-121
4376|code|SUBS            R4, R7, #4|60-31
4378|code|ADD.W           R0, R2, R0,LSL#8|2-235-0-32
4382|code|ASRS            R1, R0, #0x1F|193-23
4384|code|SUBS            R3, #2|2-59
4386|code|CMP             R4, R3|156-66
4388|code|BEQ             loc_1146|15-208
4390|code|LDRB.W          LR, [R3,#2]|147-248-2-224
4394|code|MOV.W           R9, R1,LSL#16|79-234-1-73
4398|code|LDRB            R2, [R3,#3]|218-120
4400|code|MOV.W           R8, R0,LSL#16|79-234-0-72
4404|code|ORR.W           R9, R9, R0,LSR#16|73-234-16-73
4408|code|ADD.W           R2, R2, LR,LSL#8|2-235-14-34
4412|code|ADDS.W          R0, R8, R2|24-235-2-0
4416|code|ADC.W           R1, R9, R2,ASR#31|73-235-226-113
4420|code|B               loc_1120|236-231
4422|code|LDR             R3, [SP,#0x110+no_ascii]|4-155
4424|code|MOV             R2, R0|2-70
4426|code|MOVS            R0, #1|1-32
4428|code|CMP             R3, #1|1-43
4430|code|MOV             R3, R1|11-70
4432|code|ITE GT|204-191
4434|code|LDRGT           R1, [SP,#0x110+var_E8]|10-153
4436|code|LDRLE           R1, [SP,#0x110+var_D8]|14-153
4438|code|BLX             __printf_chk|255-247-98-237
4442|code|MOVS            R0, #0xA; c|10-32
4444|code|BLX             putchar|255-247-80-237
4448|code|LDR             R3, [SP,#0x110+var_E0]|12-155
4450|code|CMP             R3, #0|0-43
4452|code|BNE.W           loc_12B4|64-240-166-128
4456|code|ADDS            R7, #8|8-55
4458|code|MOV             R3, R5|43-70
4460|code|B               loc_10D4|178-231
4462|code|LDR.W           R0, =(aMissingDeviceN - 0x1176); "missing device name!\n"|223-248-40-4
4466|code|ADD             R0, PC; "missing device name!\n"|120-68
4468|code|BL              sub_173C|0-240-226-250
4472|code|B               loc_F66|245-230
4474|code|LDRB.W          R3, [R11,#1]|155-248-1-48
4478|code|LDR.W           R3, [R7,R3,LSL#2]|87-248-35-48
4482|code|CMP             R3, #0x58 ; 'X'|88-43
4484|code|IT EQ|8-191
4486|code|ADDEQ.W         R11, R11, #2|11-241-2-11
4490|code|B               loc_E7A|118-230
4492|code|MOV             R9, R5|169-70
4494|code|MOV.W           R10, #1|79-240-1-10
4498|code|B               loc_E70|109-230
4500|code|MOV             R0, R11; s|88-70
4502|code|MOVS            R1, #9; c|9-33
4504|code|BLX             strchr|255-247-26-237
4508|code|CMP             R0, #0|0-40
4510|code|BNE.W           loc_E88|127-244-115-174
4514|code|LDR             R5, =(a2x - 0x11AA); "%2x"|254-77
4516|code|MOV             R8, R0|128-70
4518|code|ADD             R5, PC; "%2x"|125-68
4520|code|B               loc_11BC|8-224
4522|code|LDR             R3, [SP,#0x110+var_B0]|24-155
4524|code|STRB.W          R3, [R4,R8]|4-248-8-48
4528|code|ADD.W           R8, R8, #1|8-241-1-8
4532|code|CMP.W           R8, #8|184-241-8-15
4536|code|BEQ.W           loc_EBA|63-244-127-174
4540|code|ADD.W           R0, R11, R8,LSL#1|11-235-72-0
4544|code|MOV             R1, R5|41-70
4546|code|MOV             R2, R6|50-70
4548|code|BLX             __isoc99_sscanf|255-247-16-237
4552|code|CMP             R0, #1|1-40
4554|code|BEQ             loc_11AA|238-208
4556|code|CMP.W           R8, #0|184-241-0-15
4560|code|BNE.W           loc_EBA|127-244-115-174
4564|code|LDR             R0, =(aExpectedAHexNu - 0x11DA); "expected a hex number, optionally prefi"...|242-72
4566|code|ADD             R0, PC; "expected a hex number, optionally prefi"...|120-68
4568|code|BL              sub_173C|0-240-176-250
4572|code|MOVS            R0, #1|1-32
4574|code|B               loc_D4E|182-229
4576|code|LDR             R1, =(aLlu_0 - 0x11EC); " %llu"|240-73
4578|code|ADD.W           R0, R11, #1|11-241-1-0
4582|code|MOV             R2, R6|50-70
4584|code|ADD             R1, PC; " %llu"|121-68
4586|code|BLX             __isoc99_sscanf|255-247-254-236
4590|code|CMP             R0, #1|1-40
4592|code|BNE.W           loc_1426|64-240-25-129
4596|code|LDR             R3, [SP,#0x110+var_B0]|24-155
4598|code|MOV             R9, R5|169-70
4600|code|LDR             R1, [SP,#0x110+var_AC]|25-153
4602|code|MOV             R10, R5|170-70
4604|code|LSRS            R2, R3, #0x10|26-12
4606|code|UXTH            R3, R3|155-178
4608|code|ORR.W           R2, R2, R1,LSL#16|66-234-1-66
4612|code|LSRS            R1, R1, #0x10|9-12
4614|code|LSRS            R0, R3, #8|24-10
4616|code|STRB.W          R3, [SP,#0x110+var_7C+1]|141-248-149-48
4620|code|LSRS            R3, R2, #0x10|19-12
4622|code|UXTH            R2, R2|146-178
4624|code|ORR.W           R3, R3, R1,LSL#16|67-234-1-67
4628|code|STRB.W          R2, [SP,#0x110+var_7C+3]|141-248-151-32
4632|code|STRB.W          R0, [SP,#0x110+var_7C]|141-248-148-0
4636|code|LSRS            R2, R2, #8|18-10
4638|code|UXTH            R1, R3|153-178
4640|code|LSRS            R3, R3, #0x10|27-12
4642|code|STRB.W          R1, [SP,#0x110+var_77]|141-248-153-16
4646|code|STRB.W          R3, [SP,#0x110+var_75]|141-248-155-48
4650|code|LSRS            R1, R1, #8|9-10
4652|code|LSRS            R3, R3, #8|27-10
4654|code|STRB.W          R2, [SP,#0x110+var_7C+2]|141-248-150-32
4658|code|STRB.W          R1, [SP,#0x110+var_78]|141-248-152-16
4662|code|STRB.W          R3, [SP,#0x110+var_76]|141-248-154-48
4666|code|LDR             R1, =(a64BitLunInT10P - 0x1246); "64 bit LUN in T10 preferred (hex) forma"...|219-73
4668|code|MOVS            R0, #1|1-32
4670|code|LDR             R5, =(a02x_0 - 0x124C); " %02x"|219-77
4672|code|MOVS            R6, #0|0-38
4674|code|ADD             R1, PC; "64 bit LUN in T10 preferred (hex) forma"...|121-68
4676|code|BLX             __printf_chk|255-247-234-236
4680|code|ADD             R5, PC; " %02x"|125-68
4682|code|MOVS            R0, #1|1-32
4684|code|LDRB            R2, [R4,R6]|162-93
4686|code|MOV             R1, R5|41-70
4688|code|ADD             R6, R0|6-68
4690|code|BLX             __printf_chk|255-247-228-236
4694|code|CMP             R6, #8|8-46
4696|code|BNE             loc_124A|247-209
4698|code|MOVS            R0, #0xA; c|10-32
4700|code|BLX             putchar|255-247-208-236
4704|code|CMP.W           R10, #0|186-241-0-15
4708|code|BNE.W           loc_ECA|127-244-49-174
4712|code|CMP.W           R9, #0|185-241-0-15
4716|code|BEQ.W           loc_F10|63-244-80-174
4720|code|LDR             R3, [SP,#0x110+no_ascii]|4-155
4722|code|CMP             R3, #1|1-43
4724|code|BLE.W           loc_13AE|64-243-155-128
4728|code|MOVS            R0, #0|0-32
4730|code|MOVS            R1, #0|0-33
4732|code|ADD.W           R3, R4, R10|4-235-10-3
4736|code|LDRB.W          R5, [R4,R10]|20-248-10-80
4740|code|MOV.W           R2, R10,LSL#3|79-234-202-2
4744|code|ADD.W           R10, R10, #2|10-241-2-10
4748|code|LDRB            R3, [R3,#1]|91-120
4750|code|CMP.W           R10, #8|186-241-8-15
4754|code|ORR.W           R3, R3, R5,LSL#8|67-234-5-35
4758|code|LSL.W           R3, R3, R2|3-250-2-243
4762|code|ORR.W           R0, R0, R3|64-234-3-0
4766|code|ORR.W           R1, R1, R3,ASR#31|65-234-227-113
4770|code|BNE             loc_127C|235-209
4772|code|MOV             R3, R1|11-70
4774|code|LDR             R1, =(aLinuxInternal6 - 0x12B0); "Linux internal 64 bit LUN representatio"...|194-73
4776|code|MOV             R2, R0|2-70
4778|code|MOVS            R0, #1|1-32
4780|code|ADD             R1, PC; "Linux internal 64 bit LUN representatio"...|121-68
4782|code|BLX             __printf_chk|255-247-182-236
4786|code|B               loc_F10|45-230
4788|code|LDR             R3, [SP,#0x110+verbose]|3-155
4790|code|MOV             R1, R7; s1|57-70
4792|code|LDR             R0, [SP,#0x110+var_D0]; int|16-152
4794|code|STR             R3, [SP,#0x110+longind]; int|0-147
4796|code|LDR             R3, [SP,#0x110+var_FC]|5-155
4798|code|AND.W           R2, R3, #1; int|3-240-1-2
4802|code|LDR             R3, [SP,#0x110+no_ascii]; int|4-155
4804|code|BL              sub_1E54|0-240-198-253
4808|code|B               loc_1168|78-231
4810|code|LDR             R3, [SP,#0x110+no_ascii]|4-155
4812|code|LDRB.W          R0, [SP,#0x110+var_76]|157-248-154-0
4816|code|CMP             R3, #0|0-43
4818|code|BEQ.W           loc_1432|0-240-174-128
4822|code|LDRB.W          R3, [SP,#0x110+var_75]|157-248-155-48
4826|code|MOVS            R2, #0|0-34
4828|code|ADD.W           R0, R3, R0,LSL#8|3-235-0-32
4832|code|ASRS            R1, R0, #0x1F|193-23
4834|code|ADDS            R5, R4, R2|165-24
4836|code|LSLS            R7, R1, #0x10|15-4
4838|code|LSLS            R6, R0, #0x10|6-4
4840|code|ORR.W           R7, R7, R0,LSR#16|71-234-16-71
4844|code|LDRB            R1, [R5,#4]|41-121
4846|code|SUBS            R2, #2|2-58
4848|code|LDRB            R3, [R5,#5]|107-121
4850|code|ADD.W           R3, R3, R1,LSL#8|3-235-1-35
4854|code|ADDS            R0, R6, R3|240-24
4856|code|ADC.W           R1, R7, R3,ASR#31|71-235-227-113
4860|code|ADDS            R5, R2, #6|149-29
4862|code|BNE             loc_12E2|240-209
4864|code|MOV             R3, R1|11-70
4866|code|LDR             R1, =(aLinuxWordFlipp_0 - 0x130C); "Linux 'word flipped' integer LUN repres"...|172-73
4868|code|MOV             R2, R0|2-70
4870|code|MOVS            R0, #1|1-32
4872|code|ADD             R1, PC; "Linux 'word flipped' integer LUN repres"...|121-68
4874|code|BLX             __printf_chk|255-247-136-236
4878|code|B               loc_F10|255-229
4880|code|CMP             R0, #9|9-40
4882|code|BEQ.W           loc_1514|0-240-255-128
4886|code|CMP             R0, #0xB|11-40
4888|code|BEQ.W           loc_150A|0-240-247-128
4892|code|CMP             R0, #5|5-40
4894|code|BEQ.W           loc_14BE|0-240-206-128
4898|code|ADD             R4, SP, #0x110+var_7C|37-172
4900|code|MOVS            R1, #0x50 ; 'P'|80-33
4902|code|LDR             R3, [SP,#0x110+verbose]|3-155
4904|code|MOV             R2, R4|34-70
4906|code|BLX             sg_get_category_sense_str|255-247-138-236
4910|code|LDR             R0, =(aReportLunsComm - 0x1336); "Report Luns command: %s\n"|162-72
4912|code|MOV             R1, R4|33-70
4914|code|ADD             R0, PC; "Report Luns command: %s\n"|120-68
4916|code|BL              sub_173C|0-240-2-250
4920|code|MOV             R0, R8; ptr|64-70
4922|code|BLX             free|255-247-252-235
4926|code|LDR             R0, [SP,#0x110+read_only]; device_fd|9-152
4928|code|BLX             sg_cmds_close_device|255-247-254-235
4932|code|CMP             R0, #0|0-40
4934|code|BLT.W           loc_14A2|192-242-172-128
4938|code|CMP.W           R9, #0|185-241-0-15
4942|code|ITE GE|172-191
4944|code|MOVGE           R0, R9|72-70
4946|code|MOVLT           R0, #0x63 ; 'c'|99-32
4948|code|B               loc_D4E|251-228
4950|code|NEGS            R0, R3; errnum|88-66
4952|code|BLX             safe_strerror|255-247-108-236
4956|code|MOV             R1, R8|65-70
4958|code|MOV             R2, R0|2-70
4960|code|LDR             R0, =(aOpenErrorSS - 0x1366); "open error: %s: %s\n"|150-72
4962|code|ADD             R0, PC; "open error: %s: %s\n"|120-68
4964|code|BL              sub_173C|0-240-234-249
4968|code|MOVS            R0, #0xF|15-32
4970|code|B               loc_D4E|240-228
4972|code|ADD             R1, SP, #0x110+inq_data; inq_data|27-169
4974|code|MOVS            R2, #0; noisy|0-34
4976|code|LDR             R3, [SP,#0x110+verbose]; verbose|3-155
4978|code|BLX             sg_simple_inquiry|255-247-200-235
4982|code|MOV             R9, R0|129-70
4984|code|CMP             R0, #0|0-40
4986|code|BNE.W           loc_14C8|64-240-165-128
4990|code|LDR             R2, [SP,#0x110+verbose]|3-154
4992|code|LDRB.W          R3, [SP,#0x110+inq_data.rmb]|157-248-110-48
4996|code|UBFX.W          R3, R3, #6, #1|195-243-128-19
5000|code|STR             R3, [SP,#0x110+var_FC]|5-147
5002|code|CMP             R2, #0|0-42
5004|code|BEQ.W           loc_FAC|63-244-14-174
5008|code|CMP             R3, #0|0-43
5010|code|BEQ.W           loc_FAC|63-244-11-174
5014|code|LDR             R0, =(aLuCongBitSetIn - 0x139C); "LU_CONG bit set in standard INQUIRY res"...|138-72
5016|code|ADD             R0, PC; "LU_CONG bit set in standard INQUIRY res"...|120-68
5018|code|BL              sub_173C|0-240-207-249
5022|code|B               loc_FAC|5-230
5024|code|LDR             R0, =(aUnableToMalloc - 0x13A8); "unable to malloc %d bytes\n"|136-72
5026|code|LDR             R1, [SP,#0x110+mx_resp_len]|11-153
5028|code|ADD             R0, PC; "unable to malloc %d bytes\n"|120-68
5030|code|BL              sub_173C|0-240-201-249
5034|code|MOVS            R0, #0x63 ; 'c'|99-32
5036|code|B               loc_D4E|207-228
5038|code|LDR             R3, [SP,#0x110+no_ascii]|4-155
5040|code|MOVS            R0, #0|0-32
5042|code|MOVS            R1, #0|0-33
5044|code|CBNZ            R3, loc_13E6|187-185
5046|code|LDR             R5, [SP,#0x110+no_ascii]|4-157
5048|code|ADDS            R3, R4, R5|99-25
5050|code|LDRB            R6, [R4,R5]|102-93
5052|code|LSLS            R2, R5, #3|234-0
5054|code|ADDS            R5, #2|2-53
5056|code|LDRB            R3, [R3,#1]|91-120
5058|code|CMP             R5, #8|8-45
5060|code|ORR.W           R3, R3, R6,LSL#8|67-234-6-35
5064|code|LSL.W           R3, R3, R2|3-250-2-243
5068|code|ORR.W           R0, R0, R3|64-234-3-0
5072|code|ORR.W           R1, R1, R3,ASR#31|65-234-227-113
5076|code|BNE             loc_13B8|240-209
5078|code|MOV             R3, R1|11-70
5080|code|LDR             R1, =(aLinuxInternal6_0 - 0x13E2); "Linux internal 64 bit LUN representatio"...|123-73
5082|code|MOV             R2, R0|2-70
5084|code|MOVS            R0, #1|1-32
5086|code|ADD             R1, PC; "Linux internal 64 bit LUN representatio"...|121-68
5088|code|BLX             __printf_chk|255-247-28-236
5092|code|B               loc_F10|148-229
5094|code|ADD.W           R3, R4, R10|4-235-10-3
5098|code|LDRB.W          R5, [R4,R10]|20-248-10-80
5102|code|MOV.W           R2, R10,LSL#3|79-234-202-2
5106|code|ADD.W           R10, R10, #2|10-241-2-10
5110|code|LDRB            R3, [R3,#1]|91-120
5112|code|CMP.W           R10, #8|186-241-8-15
5116|code|ORR.W           R3, R3, R5,LSL#8|67-234-5-35
5120|code|LSL.W           R3, R3, R2|3-250-2-243
5124|code|ORR.W           R0, R0, R3|64-234-3-0
5128|code|ORR.W           R1, R1, R3,ASR#31|65-234-227-113
5132|code|BNE             loc_13E6|235-209
5134|code|MOV             R3, R1|11-70
5136|code|LDR             R1, =(aLinuxInternal6_1 - 0x141A); "Linux internal 64 bit LUN representatio"...|110-73
5138|code|MOV             R2, R0|2-70
5140|code|MOVS            R0, #1|1-32
5142|code|ADD             R1, PC; "Linux internal 64 bit LUN representatio"...|121-68
5144|code|BLX             __printf_chk|255-247-0-236
5148|code|B               loc_F10|120-229
5150|code|MOV             R8, R11|216-70
5152|code|LDR.W           R9, [SP,#0x110+var_C8]|221-248-72-144
5156|code|B               loc_1338|136-231
5158|code|LDR             R0, =(aUnableToReadLi - 0x142C); "Unable to read Linux style LUN integer "...|106-72
5160|code|ADD             R0, PC; "Unable to read Linux style LUN integer "...|120-68
5162|code|BL              sub_173C|0-240-135-249
5166|code|MOVS            R0, #1|1-32
5168|code|B               loc_D4E|141-228
5170|code|LDRB.W          R3, [SP,#0x110+var_75]|157-248-155-48
5174|code|LDR             R2, [SP,#0x110+no_ascii]|4-154
5176|code|ADD.W           R0, R3, R0,LSL#8|3-235-0-32
5180|code|ASRS            R1, R0, #0x1F|193-23
5182|code|ADDS            R5, R4, R2|165-24
5184|code|LSLS            R7, R1, #0x10|15-4
5186|code|LSLS            R6, R0, #0x10|6-4
5188|code|ORR.W           R7, R7, R0,LSR#16|71-234-16-71
5192|code|LDRB            R1, [R5,#4]|41-121
5194|code|SUBS            R2, #2|2-58
5196|code|LDRB            R3, [R5,#5]|107-121
5198|code|ADD.W           R3, R3, R1,LSL#8|3-235-1-35
5202|code|ADDS            R0, R6, R3|240-24
5204|code|ADC.W           R1, R7, R3,ASR#31|71-235-227-113
5208|code|ADDS            R3, R2, #6|147-29
5210|code|BNE             loc_143E|240-209
5212|code|MOV             R3, R1|11-70
5214|code|LDR             R1, =(aLinuxWordFlipp_1 - 0x1468); "Linux 'word flipped' integer LUN repres"...|93-73
5216|code|MOV             R2, R0|2-70
5218|code|MOVS            R0, #1|1-32
5220|code|ADD             R1, PC; "Linux 'word flipped' integer LUN repres"...|121-68
5222|code|BLX             __printf_chk|255-247-218-235
5226|code|B               loc_F10|81-229
5228|code|LDR             R0, =(aSgSetBinaryMod_0 - 0x1472); "sg_set_binary_mode"|90-72
5230|code|ADD             R0, PC; "sg_set_binary_mode"|120-68
5232|code|BLX             perror|255-247-120-235
5236|code|MOVS            R0, #0xF|15-32
5238|code|B               loc_D4E|106-228
5240|code|LDR             R3, [SP,#0x110+verbose]|3-155
5242|code|CMP             R3, #1|1-43
5244|code|BLE.W           loc_1098|127-247-12-174
5248|code|LDR             R0, =(aOutputResponse - 0x1488); "\nOutput response in hex\n"|86-72
5250|code|STR             R5, [SP,#0x110+mx_resp_len]|11-149
5252|code|ADD             R0, PC; "\nOutput response in hex\n"|120-68
5254|code|BL              sub_173C|0-240-89-249
5258|code|B               loc_108E|0-230
5260|code|MOV             R4, R8|68-70
5262|code|B               loc_1498|3-224
5264|code|LDRB.W          R0, [R4],#1; c|20-248-1-11
5268|code|BLX             putchar|255-247-180-235
5272|code|RSB.W           R3, R8, R4|200-235-4-3
5276|code|CMP             R3, R6|179-66
5278|code|BLT             loc_1490|247-219
5280|code|B               loc_1338|74-231
5282|code|NEGS            R0, R0; errnum|64-66
5284|code|BLX             safe_strerror|255-247-198-235
5288|code|MOV             R1, R0|1-70
5290|code|LDR             R0, =(aCloseErrorS - 0x14B0); "close error: %s\n"|77-72
5292|code|ADD             R0, PC; "close error: %s\n"|120-68
5294|code|BL              sub_173C|0-240-69-249
5298|code|CMP.W           R9, #0|185-241-0-15
5302|code|BNE.W           loc_134A|127-244-72-175
5306|code|MOVS            R0, #0xF|15-32
5308|code|B               loc_D4E|71-228
5310|code|LDR             R0, =(aReportLunsComm_0 - 0x14C4); "Report Luns command has bad field in cd"...|73-72
5312|code|ADD             R0, PC; "Report Luns command has bad field in cd"...|120-68
5314|code|BL              sub_173C|0-240-59-249
5318|code|B               loc_1338|55-231
5320|code|LDR             R0, =(aFetchingStanda - 0x14CE); "fetching standard INQUIRY response fail"...|71-72
5322|code|ADD             R0, PC; "fetching standard INQUIRY response fail"...|120-68
5324|code|BL              sub_173C|0-240-54-249
5328|code|LDR             R0, [SP,#0x110+read_only]; device_fd|9-152
5330|code|BLX             sg_cmds_close_device|255-247-54-235
5334|code|CMP             R0, #0|0-40
5336|code|BGE.W           loc_134A|191-246-55-175
5340|code|NEGS            R0, R0; errnum|64-66
5342|code|BLX             safe_strerror|255-247-170-235
5346|code|MOV             R1, R0|1-70
5348|code|LDR             R0, =(aCloseErrorS - 0x14EA); "close error: %s\n"|65-72
5350|code|ADD             R0, PC; "close error: %s\n"|120-68
5352|code|BL              sub_173C|0-240-40-249
5356|code|B               loc_134A|45-231
5358|code|LDR             R3, =(aY - 0x14F4); "y"|64-75
5360|code|ADD             R3, PC; "y"|123-68
5362|code|B               loc_103E|164-229
5364|code|MOV             R1, R6; len|49-70
5366|code|MOV             R2, R3; no_ascii|26-70
5368|code|MOV             R0, R8; str|64-70
5370|code|BLX             dStrHex|255-247-22-235
5374|code|B               loc_1338|27-231
5376|code|BLX             __stack_chk_fail|255-247-42-235
5380|code|LDR             R2, =(aBadArgumentToS+0x2C - 0x150A); ""|59-74
5382|code|ADD             R2, PC; ""|122-68
5384|code|B               loc_1072|179-229
5386|code|LDR             R0, =(aReportLunsAbor - 0x1510); "Report Luns, aborted command\n"|59-72
5388|code|ADD             R0, PC; "Report Luns, aborted command\n"|120-68
5390|code|BL              sub_173C|0-240-21-249
5394|code|B               loc_1338|17-231
5396|code|LDR             R0, =(aReportLunsComm_1 - 0x151A); "Report Luns command not supported (supp"...|57-72
5398|code|ADD             R0, PC; "Report Luns command not supported (supp"...|120-68
5400|code|BL              sub_173C|0-240-16-249
5404|code|B               loc_1338|12-231
5406|code|LDR             R1, [SP,#0x110+mx_resp_len]|11-153
5408|code|MOVS            R0, #1|1-32
5410|code|LDR             R2, [SP,#0x110+select_report]|13-154
5412|code|BLX             __printf_chk|255-247-122-235
5416|code|B               loc_10EA|223-229
5418|data|ALIGN 4|0-191
5420|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xC94|176-50-1-0
5424|data|DCD __stack_chk_guard_ptr - 0x13F44|152-0-0-0
5428|data|DCD aDhhllmQrrsTVv - 0xCA4; "dhHlLm:qrRs:t:vV"|12-32-0-0
5432|data|DCD off_14008 - 0xCA6; "decode"|98-51-1-0
5436|data|DCD aVersionS - 0xD48; "version: %s\n"|220-31-0-0
5440|data|DCD a12720140607 - 0xD4A; "1.27 20140607"|234-31-0-0
5444|data|DCD optarg_ptr - 0x13F44|184-0-0-0
5448|data|DCD aBadArgumentToS - 0xDB8; "bad argument to '--select', expect 0 to"...|60-31-0-0
5452|data|DCD aArgumentToMaxl - 0xDF2; "argument to '--maxlen' should be %d or "...|210-30-0-0
5456|data|DCD aUnrecognisedOp - 0xE0A; "unrecognised option code 0x%x ??\n"|58-31-0-0
5460|data|DCD optind_ptr - 0x13F44|156-0-0-0
5464|data|DCD a2xN - 0xE96; " %2x%n"|54-31-0-0
5468|data|DCD aLinuxWordFlipp - 0xF0E; "Linux 'word flipped' integer LUN repres"...|50-31-0-0
5472|data|DCD aDecodedLun - 0xF18; "Decoded LUN:"|116-32-0-0
5476|data|DCD asc_3118+4 - 0xF28; "  "|244-33-0-0
5480|data|DCD aUnexpectedExtr - 0xF4C; "Unexpected extra argument: %s\n"|28-30-0-0
5484|data|DCD aIes - 0x1040; "ies"|104-28-0-0
5488|data|DCD aLunListLengthD - 0x104C; "Lun list length = %d which imples %d lu"...|8-32-0-0
5492|data|DCD aS - 0x1074; "s"|56-28-0-0
5496|data|DCD aTooManyLunsFor - 0x107C; "  <<too many luns for internal buffer, "...|12-32-0-0
5500|data|DCD aOutputResponse - 0x108C; "\nOutput response in hex\n"|80-33-0-0
5504|data|DCD aReportLunsSele - 0x10AA; "Report luns [select_report=0x%x]:\n"|30-32-0-0
5508|data|DCD a02x - 0x10B2; "%02x"|66-32-0-0
5512|data|DCD aLlu - 0x10B8; "    [%llu]"|84-32-0-0
5516|data|DCD asc_30EC - 0x10C0; "    "|44-32-0-0
5520|data|DCD a0xLlx - 0x10C8; "    [0x%llx]"|52-32-0-0
5524|data|DCD asc_3118 - 0x10D4; "      "|68-32-0-0
5528|data|DCD aMissingDeviceN - 0x1176; "missing device name!\n"|38-30-0-0
5532|data|DCD a2x - 0x11AA; "%2x"|42-28-0-0
5536|data|DCD aExpectedAHexNu - 0x11DA; "expected a hex number, optionally prefi"...|254-27-0-0
5540|data|DCD aLlu_0 - 0x11EC; " %llu"|156-27-0-0
5544|data|DCD a64BitLunInT10P - 0x1246; "64 bit LUN in T10 preferred (hex) forma"...|198-27-0-0
5548|data|DCD a02x_0 - 0x124C; " %02x"|236-27-0-0
5552|data|DCD aLinuxInternal6 - 0x12B0; "Linux internal 64 bit LUN representatio"...|64-28-0-0
5556|data|DCD aLinuxWordFlipp_0 - 0x130C; "Linux 'word flipped' integer LUN repres"...|112-27-0-0
5560|data|DCD aReportLunsComm - 0x1336; "Report Luns command: %s\n"|118-30-0-0
5564|data|DCD aOpenErrorSS - 0x1366; "open error: %s: %s\n"|98-28-0-0
5568|data|DCD aLuCongBitSetIn - 0x139C; "LU_CONG bit set in standard INQUIRY res"...|108-28-0-0
5572|data|DCD aUnableToMalloc - 0x13A8; "unable to malloc %d bytes\n"|144-28-0-0
5576|data|DCD aLinuxInternal6_0 - 0x13E2; "Linux internal 64 bit LUN representatio"...|122-27-0-0
5580|data|DCD aLinuxInternal6_1 - 0x141A; "Linux internal 64 bit LUN representatio"...|14-27-0-0
5584|data|DCD aUnableToReadLi - 0x142C; "Unable to read Linux style LUN integer "...|100-25-0-0
5588|data|DCD aLinuxWordFlipp_1 - 0x1468; "Linux 'word flipped' integer LUN repres"...|80-26-0-0
5592|data|DCD aSgSetBinaryMod_0 - 0x1472; "sg_set_binary_mode"|66-27-0-0
5596|data|DCD aOutputResponse - 0x1488; "\nOutput response in hex\n"|84-29-0-0
5600|data|DCD aCloseErrorS - 0x14B0; "close error: %s\n"|24-29-0-0
5604|data|DCD aReportLunsComm_0 - 0x14C4; "Report Luns command has bad field in cd"...|188-28-0-0
5608|data|DCD aFetchingStanda - 0x14CE; "fetching standard INQUIRY response fail"...|14-27-0-0
5612|data|DCD aCloseErrorS - 0x14EA; "close error: %s\n"|222-28-0-0
5616|data|DCD aY - 0x14F4; "y"|176-23-0-0
5620|data|DCD aBadArgumentToS+0x2C - 0x150A; ""|22-24-0-0
5624|data|DCD aReportLunsAbor - 0x1510; "Report Luns, aborted command\n"|80-28-0-0
5628|data|DCD aReportLunsComm_1 - 0x151A; "Report Luns command not supported (supp"...|6-28-0-0
5632|code|MOV.W           R11, #0|79-240-0-11
5636|code|MOV.W           LR, #0|79-240-0-14
5640|code|POP             {R1}; argc|2-188
5642|code|MOV             R2, SP; ubp_av|106-70
5644|code|PUSH            {R2}; stack_end|4-180
5646|code|PUSH            {R0}; rtld_fini|1-180
5648|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1638)|223-248-36-160
5652|code|ADR             R3, off_1638|8-163
5654|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
5656|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x13F44)|223-248-32-192
5660|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
5664|code|PUSH.W          {R12}; fini|77-248-4-205
5668|code|LDR             R3, =(__libc_csu_init_ptr - 0x13F44)|6-75
5670|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
5674|code|LDR             R0, =(main_ptr - 0x13F44)|6-72
5676|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
5680|code|BLX             __libc_start_main|255-247-170-234
5684|code|BLX             abort|255-247-22-235
5688|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1638|12-41-1-0
5692|data|DCD __libc_csu_fini_ptr - 0x13F44|140-0-0-0
5696|data|DCD __libc_csu_init_ptr - 0x13F44|168-0-0-0
5700|data|DCD main_ptr - 0x13F44|172-0-0-0
5704|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1658)|20-48-159-229
5708|code|LDR             R2, =(__gmon_start___ptr_0 - 0x13F44)|20-32-159-229
5712|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
5716|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
5720|code|CMP             R2, #0|0-0-82-227
5724|code|BXEQ            LR|30-255-47-1
5728|code|B               __gmon_start__|81-253-255-234
5732|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1658|236-40-1-0
5736|data|DCD __gmon_start___ptr_0 - 0x13F44|164-0-0-0
5740|code|LDR             R3, =(__bss_start__ - 0x1674)|7-75
5742|code|LDR             R0, =(__bss_start__ - 0x1678)|8-72
5744|code|ADD             R3, PC; __bss_start__|123-68
5746|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x167E)|8-74
5748|code|ADD             R0, PC; __bss_start__|120-68
5750|code|ADDS            R3, #3|3-51
5752|code|SUBS            R3, R3, R0|27-26
5754|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5756|code|CMP             R3, #6|6-43
5758|code|BLS             locret_1688|3-217
5760|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x13F44)|5-75
5762|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
5764|code|CBZ             R3, locret_1688|3-177
5766|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
5768|code|BX              LR|112-71
5770|data|ALIGN 4|0-191
5772|data|DCD __bss_start__ - 0x1674|116-42-1-0
5776|data|DCD __bss_start__ - 0x1678|112-42-1-0
5780|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x167E|198-40-1-0
5784|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x13F44|148-0-0-0
5788|code|LDR             R1, =(__bss_start__ - 0x16A4)|8-73
5790|code|LDR             R0, =(__bss_start__ - 0x16A8)|9-72
5792|code|ADD             R1, PC; __bss_start__|121-68
5794|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x16AC)|9-75
5796|code|ADD             R0, PC; __bss_start__|120-68
5798|code|SUBS            R1, R1, R0|9-26
5800|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5802|code|ASRS            R1, R1, #2|137-16
5804|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
5808|code|ASRS            R1, R1, #1|73-16
5810|code|BEQ             locret_16BC|3-208
5812|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x13F44)|5-74
5814|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
5816|code|CBZ             R3, locret_16BC|3-177
5818|code|BX              R3; _ITM_registerTMCloneTable|24-71
5820|code|BX              LR|112-71
5822|data|ALIGN 0x10|0-191
5824|data|DCD __bss_start__ - 0x16A4|68-42-1-0
5828|data|DCD __bss_start__ - 0x16A8|64-42-1-0
5832|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x16AC|152-40-1-0
5836|data|DCD _ITM_registerTMCloneTable_ptr - 0x13F44|180-0-0-0
5840|code|PUSH            {R3,LR}|8-181
5842|code|LDR             R3, =(__bss_start__ - 0x16DA)|10-75
5844|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x16DC)|10-74
5846|code|ADD             R3, PC; __bss_start__|123-68
5848|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
5850|code|LDRB            R3, [R3]|27-120
5852|code|CBNZ            R3, locret_16FA|107-185
5854|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x13F44)|9-75
5856|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
5858|code|CBZ             R3, loc_16EE|35-177
5860|code|LDR             R3, =(off_14004 - 0x16EA)|8-75
5862|code|ADD             R3, PC; off_14004|123-68
5864|code|LDR             R0, [R3]; off_14004 ; void *|24-104
5866|code|BLX             __cxa_finalize|255-247-24-234
5870|code|BL              sub_166C|255-247-189-255
5874|code|LDR             R3, =(__bss_start__ - 0x16FA)|6-75
5876|code|MOVS            R2, #1|1-34
5878|code|ADD             R3, PC; __bss_start__|123-68
5880|code|STRB            R2, [R3]|26-112
5882|code|POP             {R3,PC}|8-189
5884|data|DCD __bss_start__ - 0x16DA|14-42-1-0
5888|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x16DC|104-40-1-0
5892|data|DCD __cxa_finalize_ptr_0 - 0x13F44|144-0-0-0
5896|data|DCD off_14004 - 0x16EA|26-41-1-0
5900|data|DCD __bss_start__ - 0x16FA|238-41-1-0
5904|code|LDR             R0, =(dword_13E38 - 0x1718)|7-72
5906|code|PUSH            {R3,LR}|8-181
5908|code|ADD             R0, PC; dword_13E38|120-68
5910|code|LDR             R2, [R0]|2-104
5912|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x171E)|6-75
5914|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5916|code|CBNZ            R2, loc_1724|18-185
5918|code|POP.W           {R3,LR}|189-232-8-64
5922|code|B               sub_169C|187-231
5924|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x13F44)|4-74
5926|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5928|code|CMP             R3, #0|0-43
5930|code|BEQ             loc_171E|248-208
5932|code|BLX             R3; _Jv_RegisterClasses|152-71
5934|code|B               loc_171E|246-231
5936|data|DCD dword_13E38 - 0x1718|32-39-1-0
5940|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x171E|38-40-1-0
5944|data|DCD _Jv_RegisterClasses_ptr - 0x13F44|176-0-0-0
5948|code|PUSH            {R0-R3}|15-180
5950|code|MOVS            R1, #1|1-33
5952|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x1748)|13-72
5954|code|PUSH            {R4-R6,LR}|112-181
5956|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
5958|code|LDR             R5, =(__stack_chk_guard_ptr - 0x13F44)|13-77
5960|code|SUB             SP, SP, #8|130-176
5962|code|ADD             R3, SP, #0x28+varg_r0|6-171
5964|code|LDR             R4, =(stderr_ptr - 0x13F44)|12-76
5966|code|LDR             R5, [R0,R5]; __stack_chk_guard|69-89
5968|code|LDR.W           R2, [R3],#4|83-248-4-43
5972|code|LDR             R6, [R5]|46-104
5974|code|STR             R3, [SP,#0x28+var_28]|0-147
5976|code|STR             R6, [SP,#0x28+var_24]|1-150
5978|code|LDR             R0, [R0,R4]; stderr|0-89
5980|code|LDR             R0, [R0]|0-104
5982|code|BLX             __vfprintf_chk|255-247-26-234
5986|code|LDR             R2, [SP,#0x28+var_24]|1-154
5988|code|LDR             R3, [R5]|43-104
5990|code|CMP             R2, R3|154-66
5992|code|BNE             loc_1774|4-209
5994|code|ADD             SP, SP, #8|2-176
5996|code|POP.W           {R4-R6,LR}|189-232-112-64
6000|code|ADD             SP, SP, #0x10|4-176
6002|code|BX              LR|112-71
6004|code|BLX             __stack_chk_fail|255-247-240-233
6008|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1748|252-39-1-0
6012|data|DCD __stack_chk_guard_ptr - 0x13F44|152-0-0-0
6016|data|DCD stderr_ptr - 0x13F44|160-0-0-0
6020|code|LDR             R0, =(aUsageSgLunsDec - 0x178C); "Usage: sg_luns    [--decode] [--help] ["...|9-72
6022|code|PUSH            {R3,LR}|8-181
6024|code|ADD             R0, PC; "Usage: sg_luns    [--decode] [--help] ["...|120-68
6026|code|BL              sub_173C|255-247-215-255
6030|code|LDR             R0, =(aOrSgLunsTestAl - 0x1794); "     or\n       sg_luns    --test=ALUN "...|8-72
6032|code|ADD             R0, PC; "     or\n       sg_luns    --test=ALUN "...|120-68
6034|code|BL              sub_173C|255-247-211-255
6038|code|LDR             R0, =(aLinuxLShowLinu - 0x179C); "    --linux|-l         show Linux integ"...|7-72
6040|code|ADD             R0, PC; "    --linux|-l         show Linux integ"...|120-68
6042|code|BL              sub_173C|255-247-207-255
6046|code|LDR             R0, =(aLuCongDecodeAs - 0x17A8); "    --lu_cong          decode as if LU_"...|6-72
6048|code|MOV.W           R1, #0x2000|79-244-0-81
6052|code|ADD             R0, PC; "    --lu_cong          decode as if LU_"...|120-68
6054|code|POP.W           {R3,LR}|189-232-8-64
6058|code|B               sub_173C|199-231
6060|data|DCD aUsageSgLunsDec - 0x178C; "Usage: sg_luns    [--decode] [--help] ["...|152-7-0-0
6064|data|DCD aOrSgLunsTestAl - 0x1794; "     or\n       sg_luns    --test=ALUN "...|84-8-0-0
6068|data|DCD aLinuxLShowLinu - 0x179C; "    --linux|-l         show Linux integ"...|124-9-0-0
6072|data|DCD aLuCongDecodeAs - 0x17A8; "    --lu_cong          decode as if LU_"...|184-9-0-0
6076|code|PUSH.W          {R4-R11,LR}|45-233-240-79
6080|code|MOV             R8, R2|144-70
6082|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0x17D2)|223-248-200-101
6086|code|SUB             SP, SP, #0x1C4|241-176
6088|code|LDR.W           R7, =(__stack_chk_guard_ptr - 0x13F44)|223-248-196-117
6092|code|MOV             R10, R3|154-70
6094|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
6096|code|LDR.W           R3, =(aSperipheralDev - 0x17DE); "%sPeripheral device addressing: "|223-248-192-53
6100|code|ADD             R5, SP, #0x1E8+s|15-173
6102|code|MOV             R4, R1|12-70
6104|code|LDR             R2, [R6,R7]; __stack_chk_guard|242-89
6106|code|ADD             R3, PC; "%sPeripheral device addressing: "|123-68
6108|code|STR             R3, [SP,#0x1E8+var_1D4]|5-147
6110|code|MOVS            R1, #0; c|0-33
6112|code|LDR.W           R6, =(aSbusIdDSD - 0x17F8); "%sbus_id=%d, %s=%d\n"|223-248-180-101
6116|code|MOV             R9, R0|129-70
6118|code|MOV             R7, R2|23-70
6120|code|STR             R2, [SP,#0x1E8+var_1D8]|4-146
6122|code|LDR             R3, [R7]|59-104
6124|code|MOV             R0, R5; s|40-70
6126|code|LDR.W           R7, =(aTarget - 0x1800); "target"|223-248-172-117
6130|code|MOVS            R2, #0x80; n|128-34
6132|code|ADD             R6, PC; "%sbus_id=%d, %s=%d\n"|126-68
6134|code|STR             R6, [SP,#0x1E8+var_1D0]|6-150
6136|code|STR             R3, [SP,#0x1E8+var_2C]|111-147
6138|code|MOV             R6, R1|14-70
6140|code|ADD             R7, PC; "target"|127-68
6142|code|STR             R7, [SP,#0x1E8+var_1CC]|7-151
6144|code|BLX             memset|255-247-248-233
6148|code|LDR.W           R3, =(aLun - 0x1810); "lun"|223-248-152-53
6152|code|ADDS            R4, #2|2-52
6154|code|MOV             R11, R8|195-70
6156|code|ADD             R3, PC; "lun"|123-68
6158|code|STR             R3, [SP,#0x1E8+var_1C8]|8-147
6160|code|LDR.W           R3, =(aSbusId0x02xS0x - 0x1818); "%sbus_id=0x%02x, %s=0x%02x\n"|223-248-144-53
6164|code|ADD             R3, PC; "%sbus_id=0x%02x, %s=0x%02x\n"|123-68
6166|code|STR             R3, [SP,#0x1E8+var_1C4]|9-147
6168|code|LDR.W           R3, =(aTarget - 0x1820); "target"|223-248-140-53
6172|code|ADD             R3, PC; "target"|123-68
6174|code|STR             R3, [SP,#0x1E8+var_1C0]|10-147
6176|code|MOV             R0, R5; dest|40-70
6178|code|MOV             R1, R9; src|73-70
6180|code|MOVS            R2, #0x7D ; '}'; n|125-34
6182|code|SUBS            R7, R4, #2|167-30
6184|code|BLX             strncpy|255-247-240-233
6188|code|CMP             R6, #0|0-46
6190|code|BEQ.W           loc_1A9E|0-240-54-129
6194|code|CMP.W           R8, #0|184-241-0-15
6198|code|BEQ             loc_187C|33-208
6200|code|LDRB.W          R3, [R4,#-2]|20-248-2-60
6204|code|CBNZ            R3, loc_1848|35-185
6206|code|LDRB.W          R3, [R4,#-1]|20-248-1-60
6210|code|CMP             R3, #0|0-43
6212|code|BEQ.W           loc_1C76|0-240-23-130
6216|code|LDR.W           R1, =(aSSubsidiaryEle - 0x1854); "%s>>Subsidiary element:\n"|223-248-96-21
6220|code|MOV             R2, R5|42-70
6222|code|MOVS            R0, #1|1-32
6224|code|ADD             R1, PC; "%s>>Subsidiary element:\n"|121-68
6226|code|BLX             __printf_chk|255-247-228-233
6230|code|LDR.W           R1, =(asc_3118+4 - 0x1862); "  "|223-248-88-21
6234|code|MOV             R0, R5|40-70
6236|code|MOVS            R2, #0x80|128-34
6238|code|ADD             R1, PC; "  "|121-68
6240|code|BLX             __strcat_chk|255-247-188-233
6244|code|LDRB.W          R12, [R4,#-2]|20-248-2-204
6248|code|MOV.W           R3, R12,LSR#6|79-234-156-19
6252|code|CMP             R3, #3; switch 4 cases|3-43
6254|code|BHI             def_1870; jumptable 00001870 default case|87-216
6256|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
6260|data|DCW 0xB7; jump table for switch statement|183-0
6262|data|DCW 0xF1|241-0
6264|data|DCW 0xE1|225-0
6266|data|DCW 0x25|37-0
6268|code|CMP             R6, #1|1-46
6270|code|BEQ.W           loc_1D86|0-240-130-130
6274|code|CMP             R6, #2|2-46
6276|code|BEQ.W           loc_1D80|0-240-124-130
6280|code|LDR.W           R3, =(aFourth - 0x1890); "Fourth"|223-248-40-53
6284|code|ADD             R3, PC; "Fourth"|123-68
6286|code|LDR.W           R1, =(aSSLevelAddress - 0x189A); "%s>>%s level addressing:\n"|223-248-40-21
6290|code|MOV             R2, R5|42-70
6292|code|MOVS            R0, #1|1-32
6294|code|ADD             R1, PC; "%s>>%s level addressing:\n"|121-68
6296|code|BLX             __printf_chk|255-247-192-233
6300|code|LDR.W           R1, =(asc_3118+4 - 0x18A8); "  "|223-248-28-21
6304|code|MOV             R0, R5|40-70
6306|code|MOVS            R2, #0x80|128-34
6308|code|ADD             R1, PC; "  "|121-68
6310|code|BLX             __strcat_chk|255-247-154-233
6314|code|LDRB.W          R12, [R4,#-2]|20-248-2-204
6318|code|MOV.W           R3, R12,LSR#6|79-234-156-19
6322|code|CMP             R3, #3; switch 4 cases|3-43
6324|code|BHI             def_1870; jumptable 00001870 default case|52-216
6326|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
6330|data|DCB 0x62; jump table for switch statement|98
6331|data|DCB 0x84|132
6332|data|DCB 0x4D|77
6333|data|DCB 2|2
6334|code|UBFX.W          R3, R12, #4, #2; jumptable 00001870 case 3|204-243-1-19
6338|code|AND.W           R4, R12, #0xF|12-240-15-4
6342|code|CMP             R3, #0|0-43
6344|code|IT EQ|8-191
6346|code|CMPEQ           R4, #1|1-44
6348|code|LDRB            R6, [R7,#1]|126-120
6350|code|BEQ.W           loc_1A6E|0-240-206-128
6354|code|SUB.W           R1, R3, #1|163-241-1-1
6358|code|SUB.W           R2, R4, #2|164-241-2-2
6362|code|CLZ.W           R1, R1|177-250-129-241
6366|code|CLZ.W           R2, R2|178-250-130-242
6370|code|LSRS            R1, R1, #5|73-9
6372|code|LSRS            R2, R2, #5|82-9
6374|code|TST             R1, R2|17-66
6376|code|BEQ.W           loc_1AE8|0-240-254-128
6380|code|LDRB            R2, [R7,#2]|186-120
6382|code|MOVS            R0, #1|1-32
6384|code|LDRB            R3, [R7,#3]|251-120
6386|code|LSLS            R2, R2, #8|18-2
6388|code|ADD.W           R6, R2, R6,LSL#16|2-235-6-70
6392|code|MOV             R2, R5|42-70
6394|code|ADD             R3, R6|51-68
6396|code|CMP.W           R10, #0|186-241-0-15
6400|code|BEQ.W           loc_1BFA|0-240-123-129
6404|code|LDR.W           R1, =(aSextendedFlatS - 0x190C); "%sExtended flat space addressing: lun=0"...|223-248-184-20
6408|code|ADD             R1, PC; "%sExtended flat space addressing: lun=0"...|121-68
6410|code|BLX             __printf_chk|255-247-136-233
6414|code|LDR             R3, [SP,#0x1E8+var_1D8]|4-155
6416|code|LDR             R2, [SP,#0x1E8+var_2C]|111-154
6418|code|LDR             R3, [R3]|27-104
6420|code|CMP             R2, R3|154-66
6422|code|BNE.W           loc_1D7C|64-240-49-130
6426|code|ADD             SP, SP, #0x1C4|113-176
6428|code|POP.W           {R4-R11,PC}|189-232-240-143
6432|code|LDR.W           R1, =(aSDecodeLunFaul - 0x192E); jumptable 00001870 default case|223-248-160-20
6436|code|MOVS            R0, #1|1-32
6438|code|MOV             R2, R5|42-70
6440|code|STR             R3, [SP,#0x1E8+var_1D4]|5-147
6442|code|ADD             R1, PC; "%s<<decode_lun: faulty logic>>\n"|121-68
6444|code|BLX             __printf_chk|255-247-118-233
6448|code|LDR             R3, [SP,#0x1E8+var_1D4]|5-155
6450|code|CMP             R6, #2|2-46
6452|code|IT LE|216-191
6454|code|CMPLE           R3, #2|2-43
6456|code|BNE             loc_190E|233-209
6458|code|LDRB            R3, [R7,#2]|187-120
6460|code|CBNZ            R3, loc_1944|19-185
6462|code|LDRB            R3, [R7,#3]|251-120
6464|code|CMP             R3, #0|0-43
6466|code|BEQ             loc_190E|228-208
6468|code|LDR.W           R1, =(aSUnexpectedDat - 0x1950); "%s<<unexpected data at next level, cont"...|223-248-128-20
6472|code|MOV             R2, R5|42-70
6474|code|MOVS            R0, #1|1-32
6476|code|ADD             R1, PC; "%s<<unexpected data at next level, cont"...|121-68
6478|code|BLX             __printf_chk|255-247-102-233
6482|code|B               loc_190E|220-231
6484|code|LDRB            R3, [R7,#1]; jumptable 000018B6 case 2|123-120
6486|code|AND.W           R2, R12, #0x3F|12-240-63-2
6490|code|MOVS            R0, #1|1-32
6492|code|STR             R2, [SP,#0x1E8+var_1E8]|0-146
6494|code|AND.W           R1, R3, #0x1F|3-240-31-1
6498|code|STR             R1, [SP,#0x1E8+var_1E4]|1-145
6500|code|LSRS            R3, R3, #5|91-9
6502|code|CMP.W           R10, #0|186-241-0-15
6506|code|BEQ.W           loc_1AD0|0-240-177-128
6510|code|LDR.W           R1, =(aSlogicalUnitAd - 0x1978); "%sLogical unit addressing: bus_id=0x%x,"...|223-248-92-20
6514|code|MOV             R2, R5|42-70
6516|code|ADD             R1, PC; "%sLogical unit addressing: bus_id=0x%x,"...|121-68
6518|code|BLX             __printf_chk|255-247-82-233
6522|code|MOVS            R3, #2|2-35
6524|code|B               loc_1932|217-231
6526|code|LDR             R3, [SP,#0x1E8+var_1D4]; jumptable 000018B6 case 0|5-155
6528|code|ADD             R7, SP, #0x1E8+var_12C|47-175
6530|code|MOV.W           R1, #0x100|79-244-128-113
6534|code|STR             R5, [SP,#0x1E8+var_1E4]|1-149
6536|code|MOV             R0, R7|56-70
6538|code|MOVS            R2, #1|1-34
6540|code|STR             R3, [SP,#0x1E8+var_1E8]|0-147
6542|code|MOV             R3, R1|11-70
6544|code|STR.W           R12, [SP,#0x1E8+var_1BC]|205-248-44-192
6548|code|BLX             __snprintf_chk|255-247-108-233
6552|code|LDR             R3, [SP,#0x1E8+arg_0]|122-155
6554|code|LDR.W           R12, [SP,#0x1E8+var_1BC]|221-248-44-192
6558|code|ORRS.W          R3, R12, R3|92-234-3-3
6562|code|BNE.W           loc_1B6E|64-240-228-128
6566|code|MOV             R2, R7|58-70
6568|code|LDRB.W          R3, [R4,#-1]|20-248-1-60
6572|code|MOVS            R0, #1|1-32
6574|code|CMP.W           R10, #0|186-241-0-15
6578|code|BEQ.W           loc_1C20|0-240-53-129
6582|code|LDR.W           R1, =(aSlun0x02x - 0x19BE); "%slun=0x%02x\n"|223-248-24-20
6586|code|ADD             R1, PC; "%slun=0x%02x\n"|121-68
6588|code|BLX             __printf_chk|255-247-46-233
6592|code|B               loc_190E|165-231
6594|code|AND.W           R3, R12, #0x3F; jumptable 000018B6 case 1|12-240-63-3
6598|code|LDRB            R2, [R7,#1]|122-120
6600|code|ADD.W           R3, R2, R3,LSL#8|2-235-3-35
6604|code|MOV             R2, R5|42-70
6606|code|MOVS            R0, #1|1-32
6608|code|CMP.W           R10, #0|186-241-0-15
6612|code|BEQ.W           loc_1ADE|0-240-131-128
6616|code|LDR             R1, =(aSflatSpaceAddr - 0x19DE); "%sFlat space addressing: lun=0x%04x\n"|254-73
6618|code|ADD             R1, PC; "%sFlat space addressing: lun=0x%04x\n"|121-68
6620|code|BLX             __printf_chk|255-247-30-233
6624|code|B               loc_190E|149-231
6626|code|MOV.W           R11, #0; jumptable 00001870 case 0|79-240-0-11
6630|code|ADD             R7, SP, #0x1E8+var_12C; jumptable 00001CDC case 0|47-175
6632|code|LDR             R2, =(aSsimpleLuAddre - 0x19F4); "%sSimple lu addressing: "|251-74
6634|code|MOV.W           R1, #0x100|79-244-128-113
6638|code|STR             R5, [SP,#0x1E8+var_1E4]|1-149
6640|code|ADD             R2, PC; "%sSimple lu addressing: "|122-68
6642|code|MOV             R3, R1|11-70
6644|code|STR             R2, [SP,#0x1E8+var_1E8]|0-146
6646|code|MOV             R0, R7|56-70
6648|code|MOVS            R2, #1|1-34
6650|code|BLX             __snprintf_chk|255-247-58-233
6654|code|LDRB.W          R3, [R4,#-2]|20-248-2-60
6658|code|LDRB.W          R2, [R4,#-1]|20-248-1-44
6662|code|MOVS            R0, #1|1-32
6664|code|AND.W           R3, R3, #0x3F|3-240-63-3
6668|code|ADD.W           R3, R2, R3,LSL#8|2-235-3-35
6672|code|MOV             R2, R7|58-70
6674|code|CMP.W           R10, #0|186-241-0-15
6678|code|BEQ.W           loc_1BA6|0-240-198-128
6682|code|LDR             R1, =(aS0x04x - 0x1A20); "%s0x%04x\n"|240-73
6684|code|ADD             R1, PC; "%s0x%04x\n"|121-68
6686|code|BLX             __printf_chk|255-247-254-232
6690|code|CMP.W           R11, #0|187-241-0-15
6694|code|BEQ.W           loc_190E|63-244-114-175
6698|code|ADDS            R6, #1|1-54
6700|code|ADDS            R4, #2|2-52
6702|code|CMP             R6, #4|4-46
6704|code|BEQ.W           loc_190E|63-244-109-175
6708|code|B               loc_1820|244-230
6710|code|LDRB            R3, [R7,#1]; jumptable 00001870 case 2|123-120
6712|code|AND.W           R1, R12, #0x3F|12-240-63-1
6716|code|MOVS            R0, #1|1-32
6718|code|AND.W           R2, R3, #0x1F|3-240-31-2
6722|code|STMEA.W         SP, {R1,R2}|141-232-6-0
6726|code|LDR             R1, =(aSsinceLuCong1U - 0x1A50); "%sSince LU_CONG=1, unexpected lu addres"...|230-73
6728|code|LSRS            R3, R3, #5|91-9
6730|code|MOV             R2, R5|42-70
6732|code|ADD             R1, PC; "%sSince LU_CONG=1, unexpected lu addres"...|121-68
6734|code|BLX             __printf_chk|255-247-230-232
6738|code|MOVS            R3, #2|2-35
6740|code|B               loc_1932|109-231
6742|code|AND.W           R3, R12, #0x3F; jumptable 00001870 case 1|12-240-63-3
6746|code|LDRB            R2, [R7,#1]|122-120
6748|code|ADD.W           R3, R2, R3,LSL#8|2-235-3-35
6752|code|LDR             R1, =(aSsinceLuCong1U_0 - 0x1A6A); "%sSince LU_CONG=1, unexpected Flat spac"...|224-73
6754|code|MOV             R2, R5|42-70
6756|code|MOVS            R0, #1|1-32
6758|code|ADD             R1, PC; "%sSince LU_CONG=1, unexpected Flat spac"...|121-68
6760|code|BLX             __printf_chk|255-247-216-232
6764|code|B               loc_190E|79-231
6766|code|LDR.W           LR, =(aWellKnownLogic - 0x1A7C); "well known logical unit"|223-248-120-227
6770|code|ADD             R7, SP, #0x1E8+var_12C|47-175
6772|code|ADD.W           R12, R6, #0xFFFFFFFF|6-241-255-60
6776|code|ADD             LR, PC; "well known logical unit"|254-68
6778|code|MOV             R4, R7|60-70
6780|code|LDM.W           LR!, {R0-R3}; "well known logical unit"|190-232-15-0
6784|code|STM             R4!, {R0-R3}|15-196
6786|code|MOV             R3, R12|99-70
6788|code|LDM.W           LR, {R0,R1}; "al unit"|158-232-3-0
6792|code|STM.W           R4, {R0,R1}|132-232-3-0
6796|code|CMP             R3, #3; switch 4 cases|3-43
6798|code|BHI.W           def_1A92; jumptable 00001A92 default case|0-242-68-129
6802|code|TBH.W           [PC,R3,LSL#1]; switch jump|223-232-19-240
6806|data|DCW 0xD0; jump table for switch statement|208-0
6808|data|DCW 0xE8|232-0
6810|data|DCW 0xE0|224-0
6812|data|DCW 0xD8|216-0
6814|code|CMP.W           R8, #0|184-241-0-15
6818|code|BNE.W           loc_1CAE|64-240-4-129
6822|code|LDRB.W          R12, [R4,#-2]|20-248-2-204
6826|code|MOV.W           R3, R12,LSR#6|79-234-156-19
6830|code|CMP             R3, #3; switch 4 cases|3-43
6832|code|BHI.W           def_1870; jumptable 00001870 default case|63-246-54-175
6836|code|ADR             R2, jpt_1ABC|2-162
6838|code|LDR.W           R1, [R2,R3,LSL#2]|82-248-35-16
6842|code|ADD             R2, R1|10-68
6844|code|BX              R2; switch jump|16-71
6846|data|ALIGN 0x10|0-191
6848|data|DCD loc_197E+1 - 0x1AC0; jump table for switch statement|191-254-255-255
6852|data|DCD loc_1C2A+1 - 0x1AC0; jumptable 00001ABC case 1|107-1-0-0
6856|data|DCD loc_1954+1 - 0x1AC0; jumptable 000018B6 case 2|149-254-255-255
6860|data|DCD loc_18BE+1 - 0x1AC0; jumptable 00001870 case 3|255-253-255-255
6864|code|LDR             R1, =(aSlogicalUnitAd_0 - 0x1AD8); "%sLogical unit addressing: bus_id=%d, t"...|198-73
6866|code|MOV             R2, R5|42-70
6868|code|ADD             R1, PC; "%sLogical unit addressing: bus_id=%d, t"...|121-68
6870|code|BLX             __printf_chk|255-247-162-232
6874|code|MOVS            R3, #2|2-35
6876|code|B               loc_1932|41-231
6878|code|LDR             R1, =(aSflatSpaceAddr_0 - 0x1AE4); "%sFlat space addressing: lun=%d\n"|196-73
6880|code|ADD             R1, PC; "%sFlat space addressing: lun=%d\n"|121-68
6882|code|BLX             __printf_chk|255-247-156-232
6886|code|B               loc_190E|18-231
6888|code|SUB.W           R0, R3, #2|163-241-2-0
6892|code|CLZ.W           R0, R0|176-250-128-240
6896|code|LSRS            R0, R0, #5|64-9
6898|code|TST             R0, R2|16-66
6900|code|BNE             loc_1BB0|92-209
6902|code|CMP             R3, #3|3-43
6904|code|IT EQ|8-191
6906|code|CMPEQ           R4, #0xF|15-44
6908|code|ITE EQ|12-191
6910|code|MOVEQ           R2, #1|1-34
6912|code|MOVNE           R2, #0|0-34
6914|code|BEQ.W           loc_1D60|0-240-45-129
6918|code|CMP             R3, #1|1-43
6920|code|BLE.W           loc_1D32|64-243-19-129
6924|code|CMP             R0, #0|0-40
6926|code|MOV             LR, R7|190-70
6928|code|MOV.W           R6, #0|79-240-0-6
6932|code|MOV.W           R7, #0|79-240-0-7
6936|code|ITE EQ|12-191
6938|code|MOVEQ.W         R12, #7|79-240-7-12
6942|code|MOVNE.W         R12, #5|79-240-5-12
6946|code|B               loc_1B32|6-224
6948|code|CBZ             R2, loc_1B32|42-177
6950|code|LSLS            R1, R7, #8|57-2
6952|code|LSLS            R0, R6, #8|48-2
6954|code|ORR.W           R1, R1, R6,LSR#24|65-234-22-97
6958|code|MOV             R6, R0|6-70
6960|code|MOV             R7, R1|15-70
6962|code|ADDS            R2, #1|1-50
6964|code|LDRB.W          R0, [LR,#1]!|30-248-1-15
6968|code|CMP             R2, R12|98-69
6970|code|MOV.W           R1, #0|79-240-0-1
6974|code|ORR.W           R6, R6, R0|70-234-0-6
6978|code|ORR.W           R7, R7, R1|71-234-1-7
6982|code|BNE             loc_1B24|237-209
6984|code|STR             R4, [SP,#0x1E8+var_1E8]|0-148
6986|code|MOV             R2, R5|42-70
6988|code|CMP.W           R10, #0|186-241-0-15
6992|code|BEQ.W           loc_1D0A|0-240-219-128
6996|code|LDR             R1, =(aSextendedLogic - 0x1B5C); "%sExtended logical unit addressing: len"...|167-73
6998|code|MOVS            R0, #1|1-32
7000|code|ADD             R1, PC; "%sExtended logical unit addressing: len"...|121-68
7002|code|BLX             __printf_chk|255-247-96-232
7006|code|LDR             R1, =(aValue0x014llx - 0x1B68); "value=0x%014llx\n"|166-73
7008|code|MOV             R2, R6|50-70
7010|code|MOV             R3, R7|59-70
7012|code|ADD             R1, PC; "value=0x%014llx\n"|121-68
7014|code|MOVS            R0, #1|1-32
7016|code|BLX             __printf_chk|255-247-88-232
7020|code|B               loc_190E|207-230
7022|code|CMP.W           R10, #0|186-241-0-15
7026|code|BEQ             loc_1C04|71-208
7028|code|CMP.W           R12, #0|188-241-0-15
7032|code|BNE.W           loc_1D06|64-240-197-128
7036|code|LDR             R3, =(aLun - 0x1B82); "lun"|159-75
7038|code|ADD             R3, PC; "lun"|123-68
7040|code|STR             R3, [SP,#0x1E8+var_1E8]|0-147
7042|code|MOV             R2, R7|58-70
7044|code|LDR             R1, [SP,#0x1E8+var_1C4]|9-153
7046|code|MOVS            R0, #1|1-32
7048|code|LDRB.W          R7, [R4,#-1]|20-248-1-124
7052|code|MOV             R3, R12|99-70
7054|code|STR             R7, [SP,#0x1E8+var_1E4]|1-151
7056|code|STR.W           R12, [SP,#0x1E8+var_1BC]|205-248-44-192
7060|code|BLX             __printf_chk|255-247-66-232
7064|code|LDR.W           R12, [SP,#0x1E8+var_1BC]|221-248-44-192
7068|code|CMP.W           R12, #0|188-241-0-15
7072|code|BNE.W           loc_1A2A|127-244-67-175
7076|code|B               loc_190E|179-230
7078|code|LDR             R1, =(aSD - 0x1BAC); "%s%d\n"|150-73
7080|code|ADD             R1, PC; "%s%d\n"|121-68
7082|code|BLX             __printf_chk|255-247-56-232
7086|code|B               loc_1A22|56-231
7088|code|MOVS            R4, #1|1-36
7090|code|CMP             R4, #1|1-44
7092|code|ADD.W           R7, R7, #1|7-241-1-7
7096|code|MOV.W           R2, #0|79-240-0-2
7100|code|MOV.W           R3, #0|79-240-0-3
7104|code|BEQ             loc_1BE8|18-208
7106|code|LSLS            R1, R3, #8|25-2
7108|code|LDRB.W          R8, [R7]|151-248-0-128
7112|code|CMP             R4, #5|5-44
7114|code|ORR.W           R1, R1, R2,LSR#24|65-234-18-97
7118|code|MOV.W           R0, R2,LSL#8|79-234-2-32
7122|code|MOV.W           R9, #0|79-240-0-9
7126|code|ORR.W           R2, R8, R0|72-234-0-2
7130|code|ORR.W           R3, R9, R1|73-234-1-3
7134|code|BEQ             loc_1C96|90-208
7136|code|ADDS            R4, #1|1-52
7138|code|ADDS            R7, #1|1-55
7140|code|CMP             R4, #1|1-44
7142|code|BNE             loc_1BC2|236-209
7144|code|LDRB.W          R8, [R7]|151-248-0-128
7148|code|MOV.W           R9, #0|79-240-0-9
7152|code|ORR.W           R3, R3, R9|67-234-9-3
7156|code|ORR.W           R2, R2, R8|66-234-8-2
7160|code|B               loc_1BE0|242-231
7162|code|LDR             R1, =(aSextendedFlatS_0 - 0x1C00); "%sExtended flat space addressing: lun=%"...|130-73
7164|code|ADD             R1, PC; "%sExtended flat space addressing: lun=%"...|121-68
7166|code|BLX             __printf_chk|255-247-14-232
7170|code|B               loc_190E|132-230
7172|code|LDR             R3, [SP,#0x1E8+var_1CC]|7-155
7174|code|CMP.W           R12, #0|188-241-0-15
7178|code|LDR             R1, [SP,#0x1E8+var_1C8]|8-153
7180|code|MOV             R2, R7|58-70
7182|code|MOV.W           R0, #1|79-240-1-0
7186|code|IT EQ|8-191
7188|code|MOVEQ           R3, R1|11-70
7190|code|LDR             R1, [SP,#0x1E8+var_1D0]|6-153
7192|code|STR             R3, [SP,#0x1E8+var_1E8]|0-147
7194|code|LDRB.W          R7, [R4,#-1]|20-248-1-124
7198|code|B               loc_1B8C|181-231
7200|code|LDR             R1, =(aSlunD - 0x1C26); "%slun=%d\n"|121-73
7202|code|ADD             R1, PC; "%slun=%d\n"|121-68
7204|code|BLX             __printf_chk|254-247-250-239
7208|code|B               loc_190E|113-230
7210|code|AND.W           R12, R12, #0x3F; jumptable 00001ABC case 1|12-240-63-12
7214|code|LDRB            R3, [R7,#1]|123-120
7216|code|ADD.W           R3, R3, R12,LSL#8|3-235-12-35
7220|code|B               loc_19CC|202-230
7222|code|LDR             R1, =(aSreportLunsS - 0x1C42); jumptable 00001A92 case 0|117-73
7224|code|MOV             R2, R5|42-70
7226|code|MOV             R3, R7|59-70
7228|code|MOVS            R0, #1|1-32
7230|code|ADD             R1, PC; "%sREPORT LUNS %s\n"|121-68
7232|code|BLX             __printf_chk|254-247-236-239
7236|code|B               loc_190E|99-230
7238|code|LDR             R1, =(aSsecurityProto - 0x1C52); jumptable 00001A92 case 3|114-73
7240|code|MOV             R2, R5|42-70
7242|code|MOV             R3, R7|59-70
7244|code|MOVS            R0, #1|1-32
7246|code|ADD             R1, PC; "%sSECURITY PROTOCOL %s\n"|121-68
7248|code|BLX             __printf_chk|254-247-228-239
7252|code|B               loc_190E|91-230
7254|code|LDR             R1, =(aStargetLogPage - 0x1C62); jumptable 00001A92 case 2|111-73
7256|code|MOV             R2, R5|42-70
7258|code|MOV             R3, R7|59-70
7260|code|MOVS            R0, #1|1-32
7262|code|ADD             R1, PC; "%sTARGET LOG PAGES %s\n"|121-68
7264|code|BLX             __printf_chk|254-247-220-239
7268|code|B               loc_190E|83-230
7270|code|LDR             R1, =(aSaccessControl - 0x1C72); jumptable 00001A92 case 1|108-73
7272|code|MOV             R2, R5|42-70
7274|code|MOV             R3, R7|59-70
7276|code|MOVS            R0, #1|1-32
7278|code|ADD             R1, PC; "%sACCESS CONTROLS %s\n"|121-68
7280|code|BLX             __printf_chk|254-247-212-239
7284|code|B               loc_190E|75-230
7286|code|LDR             R1, =(aSAdministrativ - 0x1C80); "%s>>>> Administrative LU\n"|105-73
7288|code|MOV             R2, R5|42-70
7290|code|MOVS            R0, #1|1-32
7292|code|ADD             R1, PC; "%s>>>> Administrative LU\n"|121-68
7294|code|BLX             __printf_chk|254-247-206-239
7298|code|LDR             R3, [SP,#0x1E8+arg_0]|122-155
7300|code|ORRS.W          R3, R10, R3|90-234-3-3
7304|code|BEQ.W           loc_190E|63-244-65-174
7308|code|LDR             R0, =(aSinceSubsidiar - 0x1C92); "        since Subsidiary element is 0x0"...|100-72
7310|code|ADD             R0, PC; "        since Subsidiary element is 0x0"...|120-68
7312|code|BLX             puts|254-247-116-239
7316|code|B               loc_190E|59-230
7318|code|STRD.W          R2, R3, [SP,#0x1E8+var_1E8]|205-233-0-35
7322|code|MOVS            R0, #1|1-32
7324|code|MOV             R2, R5|42-70
7326|code|CMP.W           R10, #0|186-241-0-15
7330|code|BEQ             loc_1CFC|43-208
7332|code|LDR             R1, =(aSlongExtendedF - 0x1CAA); "%sLong extended flat space addressing: "...|95-73
7334|code|ADD             R1, PC; "%sLong extended flat space addressing: "...|121-68
7336|code|BLX             __printf_chk|254-247-184-239
7340|code|B               loc_190E|47-230
7342|code|LDR             R1, =(aSAdministrativ_0 - 0x1CB8); "%s>>Administrative element:\n"|94-73
7344|code|MOV             R2, R5|42-70
7346|code|MOVS            R0, #1|1-32
7348|code|ADD             R1, PC; "%s>>Administrative element:\n"|121-68
7350|code|BLX             __printf_chk|254-247-178-239
7354|code|LDR             R1, =(asc_3118+4 - 0x1CC4); "  "|92-73
7356|code|MOV             R0, R5|40-70
7358|code|MOVS            R2, #0x80|128-34
7360|code|ADD             R1, PC; "  "|121-68
7362|code|BLX             __strcat_chk|254-247-140-239
7366|code|LDRB.W          R12, [R4,#-2]|20-248-2-204
7370|code|MOV.W           R3, R12,LSR#6|79-234-156-19
7374|code|CMP             R3, #3; switch 4 cases|3-43
7376|code|BHI.W           def_1870; jumptable 00001870 default case|63-246-38-174
7380|code|ADR             R2, jpt_1CDC|2-162
7382|code|LDR.W           R1, [R2,R3,LSL#2]|82-248-35-16
7386|code|ADD             R2, R1|10-68
7388|code|BX              R2; switch jump|16-71
7390|data|ALIGN 0x10|0-191
7392|data|DCD loc_19E6+1 - 0x1CE0; jump table for switch statement|7-253-255-255
7396|data|DCD loc_1CF0+1 - 0x1CE0; jumptable 00001CDC case 1|17-0-0-0
7400|data|DCD loc_1A36+1 - 0x1CE0; jumptable 00001870 case 2|87-253-255-255
7404|data|DCD loc_18BE+1 - 0x1CE0; jumptable 00001870 case 3|223-251-255-255
7408|code|AND.W           R2, R12, #0x3F; jumptable 00001CDC case 1|12-240-63-2
7412|code|LDRB            R3, [R7,#1]|123-120
7414|code|ADD.W           R3, R3, R2,LSL#8|3-235-2-35
7418|code|B               loc_1A60|177-230
7420|code|LDR             R1, =(aSlongExtendedF_0 - 0x1D02); "%sLong extended flat space addressing: "...|76-73
7422|code|ADD             R1, PC; "%sLong extended flat space addressing: "...|121-68
7424|code|BLX             __printf_chk|254-247-140-239
7428|code|B               loc_190E|3-230
7430|code|LDR             R3, [SP,#0x1E8+var_1C0]|10-155
7432|code|B               loc_1B80|58-231
7434|code|LDR             R1, =(aSextendedLogic_0 - 0x1D16); "%sExtended logical unit addressing: len"...|74-73
7436|code|MOVS            R0, #1|1-32
7438|code|STRD.W          R6, R7, [SP,#0x1E8+var_1E0]|205-233-2-103
7442|code|ADD             R1, PC; "%sExtended logical unit addressing: len"...|121-68
7444|code|BLX             __printf_chk|254-247-130-239
7448|code|B               loc_190E|249-229
7450|code|STR             R6, [SP,#0x1E8+var_1E8]; jumptable 00001A92 default case|0-150
7452|code|MOV             R2, R5|42-70
7454|code|MOV             R3, R7|59-70
7456|code|MOVS            R0, #1|1-32
7458|code|CMP.W           R10, #0|186-241-0-15
7462|code|BEQ             loc_1D4C|17-208
7464|code|LDR             R1, =(aSS0x02x - 0x1D2E); "%s%s 0x%02x\n"|67-73
7466|code|ADD             R1, PC; "%s%s 0x%02x\n"|121-68
7468|code|BLX             __printf_chk|254-247-118-239
7472|code|B               loc_190E|237-229
7474|code|CBNZ            R1, loc_1D6E|225-185
7476|code|STR             R4, [SP,#0x1E8+var_1E8]|0-148
7478|code|MOV             R2, R5|42-70
7480|code|STR             R6, [SP,#0x1E8+var_1E4]|1-150
7482|code|MOVS            R0, #1|1-32
7484|code|CMP.W           R10, #0|186-241-0-15
7488|code|BEQ             loc_1D56|9-208
7490|code|LDR             R1, =(aSextendedLogic_1 - 0x1D48); "%sExtended logical unit addressing: len"...|62-73
7492|code|ADD             R1, PC; "%sExtended logical unit addressing: len"...|121-68
7494|code|BLX             __printf_chk|254-247-106-239
7498|code|B               loc_190E|224-229
7500|code|LDR             R1, =(aSSD - 0x1D52); "%s%s %d\n"|60-73
7502|code|ADD             R1, PC; "%s%s %d\n"|121-68
7504|code|BLX             __printf_chk|254-247-100-239
7508|code|B               loc_190E|219-229
7510|code|LDR             R1, =(aSextendedLogic_2 - 0x1D5C); "%sExtended logical unit addressing: len"...|59-73
7512|code|ADD             R1, PC; "%sExtended logical unit addressing: len"...|121-68
7514|code|BLX             __printf_chk|254-247-96-239
7518|code|B               loc_190E|214-229
7520|code|LDR             R1, =(aSlogicalUnitNo - 0x1D6A); "%sLogical unit _not_ specified addressi"...|57-73
7522|code|MOV             R2, R5|42-70
7524|code|MOVS            R0, #1|1-32
7526|code|ADD             R1, PC; "%sLogical unit _not_ specified addressi"...|121-68
7528|code|BLX             __printf_chk|254-247-88-239
7532|code|B               loc_190E|207-229
7534|code|LDRB            R2, [R7,#2]|186-120
7536|code|LDRB            R1, [R7,#3]|249-120
7538|code|LSLS            R2, R2, #8|18-2
7540|code|ADD.W           R6, R2, R6,LSL#16|2-235-6-70
7544|code|ADD             R6, R1|14-68
7546|code|B               loc_1D34|219-231
7548|code|BLX             __stack_chk_fail|254-247-236-238
7552|code|LDR             R3, =(aThird - 0x1D86); "Third"|50-75
7554|code|ADD             R3, PC; "Third"|123-68
7556|code|B               loc_188E|131-229
7558|code|LDR             R3, =(aSecond - 0x1D8C); "Second"|50-75
7560|code|ADD             R3, PC; "Second"|123-68
7562|code|B               loc_188E|128-229
7564|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x17D2|114-39-1-0
7568|data|DCD __stack_chk_guard_ptr - 0x13F44|152-0-0-0
7572|data|DCD aSperipheralDev - 0x17DE; "%sPeripheral device addressing: "|186-15-0-0
7576|data|DCD aSbusIdDSD - 0x17F8; "%sbus_id=%d, %s=%d\n"|252-15-0-0
7580|data|DCD aTarget - 0x1800; "target"|188-14-0-0
7584|data|DCD aLun - 0x1810; "lun"|180-14-0-0
7588|data|DCD aSbusId0x02xS0x - 0x1818; "%sbus_id=0x%02x, %s=0x%02x\n"|192-15-0-0
7592|data|DCD aTarget - 0x1820; "target"|156-14-0-0
7596|data|DCD aSSubsidiaryEle - 0x1854; "%s>>Subsidiary element:\n"|188-14-0-0
7600|data|DCD asc_3118+4 - 0x1862; "  "|186-24-0-0
7604|data|DCD aFourth - 0x1890; "Fourth"|28-14-0-0
7608|data|DCD aSSLevelAddress - 0x189A; "%s>>%s level addressing:\n"|146-14-0-0
7612|data|DCD asc_3118+4 - 0x18A8; "  "|116-24-0-0
7616|data|DCD aSextendedFlatS - 0x190C; "%sExtended flat space addressing: lun=0"...|244-16-0-0
7620|data|DCD aSDecodeLunFaul - 0x192E; "%s<<decode_lun: faulty logic>>\n"|6-19-0-0
7624|data|DCD aSUnexpectedDat - 0x1950; "%s<<unexpected data at next level, cont"...|4-19-0-0
7628|data|DCD aSlogicalUnitAd - 0x1978; "%sLogical unit addressing: bus_id=0x%x,"...|120-15-0-0
7632|data|DCD aSlun0x02x - 0x19BE; "%slun=0x%02x\n"|254-13-0-0
7636|data|DCD aSflatSpaceAddr - 0x19DE; "%sFlat space addressing: lun=0x%04x\n"|110-14-0-0
7640|data|DCD aSsimpleLuAddre - 0x19F4; "%sSimple lu addressing: "|116-13-0-0
7644|data|DCD aS0x04x - 0x1A20; "%s0x%04x\n"|100-13-0-0
7648|data|DCD aSsinceLuCong1U - 0x1A50; "%sSince LU_CONG=1, unexpected lu addres"...|72-14-0-0
7652|data|DCD aSsinceLuCong1U_0 - 0x1A6A; "%sSince LU_CONG=1, unexpected Flat spac"...|158-13-0-0
7656|data|DCD aWellKnownLogic - 0x1A7C; "well known logical unit"|244-14-0-0
7660|data|DCD aSlogicalUnitAd_0 - 0x1AD8; "%sLogical unit addressing: bus_id=%d, t"...|92-14-0-0
7664|data|DCD aSflatSpaceAddr_0 - 0x1AE4; "%sFlat space addressing: lun=%d\n"|144-13-0-0
7668|data|DCD aSextendedLogic - 0x1B5C; "%sExtended logical unit addressing: len"...|52-16-0-0
7672|data|DCD aValue0x014llx - 0x1B68; "value=0x%014llx\n"|108-16-0-0
7676|data|DCD aLun - 0x1B82; "lun"|66-11-0-0
7680|data|DCD aSD - 0x1BAC; "%s%d\n"|228-11-0-0
7684|data|DCD aSextendedFlatS_0 - 0x1C00; "%sExtended flat space addressing: lun=%"...|48-14-0-0
7688|data|DCD aSlunD - 0x1C26; "%slun=%d\n"|166-11-0-0
7692|data|DCD aSreportLunsS - 0x1C42; "%sREPORT LUNS %s\n"|70-13-0-0
7696|data|DCD aSsecurityProto - 0x1C52; "%sSECURITY PROTOCOL %s\n"|122-13-0-0
7700|data|DCD aStargetLogPage - 0x1C62; "%sTARGET LOG PAGES %s\n"|82-13-0-0
7704|data|DCD aSaccessControl - 0x1C72; "%sACCESS CONTROLS %s\n"|42-13-0-0
7708|data|DCD aSAdministrativ - 0x1C80; "%s>>>> Administrative LU\n"|72-10-0-0
7712|data|DCD aSinceSubsidiar - 0x1C92; "        since Subsidiary element is 0x0"...|82-10-0-0
7716|data|DCD aSlongExtendedF - 0x1CAA; "%sLong extended flat space addressing: "...|178-13-0-0
7720|data|DCD aSAdministrativ_0 - 0x1CB8; "%s>>Administrative element:\n"|144-10-0-0
7724|data|DCD asc_3118+4 - 0x1CC4; "  "|88-20-0-0
7728|data|DCD aSlongExtendedF_0 - 0x1D02; "%sLong extended flat space addressing: "...|146-13-0-0
7732|data|DCD aSextendedLogic_0 - 0x1D16; "%sExtended logical unit addressing: len"...|210-14-0-0
7736|data|DCD aSS0x02x - 0x1D2E; "%s%s 0x%02x\n"|182-12-0-0
7740|data|DCD aSextendedLogic_1 - 0x1D48; "%sExtended logical unit addressing: len"...|172-13-0-0
7744|data|DCD aSSD - 0x1D52; "%s%s %d\n"|162-12-0-0
7748|data|DCD aSextendedLogic_2 - 0x1D5C; "%sExtended logical unit addressing: len"...|232-13-0-0
7752|data|DCD aSlogicalUnitNo - 0x1D6A; "%sLogical unit _not_ specified addressi"...|94-13-0-0
7756|data|DCD aThird - 0x1D86; "Third"|46-9-0-0
7760|data|DCD aSecond - 0x1D8C; "Second"|24-9-0-0
7764|code|PUSH.W          {R4-R11,LR}|45-233-240-79
7768|code|MOV             R10, R1|138-70
7770|code|LDR             R6, =(_GLOBAL_OFFSET_TABLE_ - 0x1E66)|24-78
7772|code|SUB             SP, SP, #0x14|133-176
7774|code|LDR             R7, =(__stack_chk_guard_ptr - 0x13F44)|24-79
7776|code|MOV             R8, R0|128-70
7778|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
7780|code|LDR             R5, =(dword_1F1C - 0x1E70)|23-77
7782|code|ADD             R4, SP, #0x38+s2|1-172
7784|code|MOV             R11, R3|155-70
7786|code|LDR             R7, [R6,R7]; __stack_chk_guard|247-89
7788|code|ADD             R5, PC; dword_1F1C|125-68
7790|code|MOV             R9, R2|145-70
7792|code|MOVS            R2, #8; n|8-34
7794|code|LDR             R0, [R5]|40-104
7796|code|LDR             R1, [R5,#(dword_1F20 - 0x1F1C)]|105-104
7798|code|LDR             R3, [R7]|59-104
7800|code|LDR             R5, [SP,#0x38+arg_0]|14-157
7802|code|STM             R4!, {R0,R1}|3-196
7804|code|MOV             R0, R10; s1|80-70
7806|code|ADD             R1, SP, #0x38+s2; s2|1-169
7808|code|STR             R3, [SP,#0x38+var_2C]|3-147
7810|code|BLX             memcmp|254-247-100-238
7814|code|LDR             R2, [SP,#0x38+var_2C]|3-154
7816|code|LDR             R3, [R7]|59-104
7818|code|CBZ             R0, loc_1EA2|80-177
7820|code|CMP             R2, R3|154-66
7822|code|BNE             loc_1EB8|19-209
7824|code|STR             R5, [SP,#0x38+arg_0]|14-149
7826|code|MOV             R0, R8|64-70
7828|code|MOV             R1, R10|81-70
7830|code|MOV             R2, R9|74-70
7832|code|MOV             R3, R11|91-70
7834|code|ADD             SP, SP, #0x14|5-176
7836|code|POP.W           {R4-R11,LR}|189-232-240-79
7840|code|B               sub_17BC|140-228
7842|code|CMP             R2, R3|154-66
7844|code|BNE             loc_1EB8|8-209
7846|code|LDR             R1, =(aSlogicalUnitNo_0 - 0x1EB0); "%sLogical unit not specified\n"|8-73
7848|code|MOV             R2, R8|66-70
7850|code|MOVS            R0, #1|1-32
7852|code|ADD             R1, PC; "%sLogical unit not specified\n"|121-68
7854|code|ADD             SP, SP, #0x14|5-176
7856|code|POP.W           {R4-R11,LR}|189-232-240-79
7860|code|B.W             j___printf_chk|254-247-176-190
7864|code|BLX             __stack_chk_fail|254-247-78-238
7868|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1E66|222-32-1-0
7872|data|DCD __stack_chk_guard_ptr - 0x13F44|152-0-0-0
7876|data|DCD dword_1F1C - 0x1E70|172-0-0-0
7880|data|DCD aSlogicalUnitNo_0 - 0x1EB0; "%sLogical unit not specified\n"|212-13-0-0
7884|code|PUSH.W          {R3-R9,LR}|45-233-248-67
7888|code|MOV             R7, R0|7-70
7890|code|LDR             R6, =(off_13E34 - 0x1EDE)|12-78
7892|code|MOV             R8, R1|136-70
7894|code|LDR             R5, =(off_13E30 - 0x1EE4)|12-77
7896|code|MOV             R9, R2|145-70
7898|code|ADD             R6, PC; off_13E34|126-68
7900|code|BLX             .init_proc|254-247-252-237
7904|code|ADD             R5, PC; off_13E30|125-68
7906|code|SUBS            R6, R6, R5|118-27
7908|code|ASRS            R6, R6, #2|182-16
7910|code|BEQ             locret_1EFE|10-208
7912|code|SUBS            R5, #4|4-61
7914|code|MOVS            R4, #0|0-36
7916|code|ADDS            R4, #1|1-52
7918|code|LDR.W           R3, [R5,#4]!|85-248-4-63
7922|code|MOV             R0, R7|56-70
7924|code|MOV             R1, R8|65-70
7926|code|MOV             R2, R9|74-70
7928|code|BLX             R3|152-71
7930|code|CMP             R4, R6|180-66
7932|code|BNE             loc_1EEC|246-209
7934|code|POP.W           {R3-R9,PC}|189-232-248-131
7938|data|ALIGN 4|0-191
7940|data|DCD off_13E34 - 0x1EDE|86-31-1-0
7944|data|DCD off_13E30 - 0x1EE4|76-31-1-0
7948|code|BX              LR|112-71
7950|data|ALIGN 0x10|0-191
7952|code|PUSH            {R3,LR}; _fini|8-64-45-233
7956|code|POP             {R3,PC}|8-128-189-232
12900|data|ALIGN 8|0-0-0-0
81456|data|DCD sub_1710+1|17-23-0-0
81460|data|DCD sub_16D0+1|209-22-0-0
81464|data|DCD 0|0-0-0-0
81468|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
81476|data|Elf32_Dyn <1, <0x111>>; DT_NEEDED libc.so.6|1-0-0-0-17-1-0-0
81484|data|Elf32_Dyn <1, <0x214>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-20-2-0-0
81492|data|Elf32_Dyn <0xC, <0xAD8>>; DT_INIT|12-0-0-0-216-10-0-0
81500|data|Elf32_Dyn <0xD, <0x1F10>>; DT_FINI|13-0-0-0-16-31-0-0
81508|data|Elf32_Dyn <0x19, <0x13E30>>; DT_INIT_ARRAY|25-0-0-0-48-62-1-0
81516|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
81524|data|Elf32_Dyn <0x1A, <0x13E34>>; DT_FINI_ARRAY|26-0-0-0-52-62-1-0
81532|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
81540|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
81548|data|Elf32_Dyn <5, <0x584>>; DT_STRTAB|5-0-0-0-132-5-0-0
81556|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
81564|data|Elf32_Dyn <0xA, <0x2B5>>; DT_STRSZ|10-0-0-0-181-2-0-0
81572|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
81580|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
81588|data|Elf32_Dyn <3, <0x13F44>>; DT_PLTGOT|3-0-0-0-68-63-1-0
81596|data|Elf32_Dyn <2, <0x100>>; DT_PLTRELSZ|2-0-0-0-0-1-0-0
81604|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
81612|data|Elf32_Dyn <0x17, <0x9D8>>; DT_JMPREL|23-0-0-0-216-9-0-0
81620|data|Elf32_Dyn <0x11, <0x8F8>>; DT_REL|17-0-0-0-248-8-0-0
81628|data|Elf32_Dyn <0x12, <0xE0>>; DT_RELSZ|18-0-0-0-224-0-0-0
81636|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
81644|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
81652|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
81660|data|Elf32_Dyn <0x6FFFFFFE, <0x8A8>>; DT_VERNEED|254-255-255-111-168-8-0-0
81668|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
81676|data|Elf32_Dyn <0x6FFFFFF0, <0x83A>>; DT_VERSYM|240-255-255-111-58-8-0-0
81684|data|Elf32_Dyn <0x6FFFFFFA, <0x13>>; DT_RELCOUNT|250-255-255-111-19-0-0-0
81692|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
81700|data|ALIGN 8|0-0-0-0
81732|data|DCD stru_13E3C|60-62-1-0
81736|data|DCD 0|0-0-0-0
81740|data|DCD dword_0|0-0-0-0
81744|data|DCD __imp_calloc|240-64-1-0
81748|data|DCD __imp_sg_simple_inquiry|244-64-1-0
81752|data|DCD __imp_sg_set_binary_mode|248-64-1-0
81756|data|DCD __imp___cxa_finalize|252-64-1-0
81760|data|DCD __imp_dStrHex|0-65-1-0
81764|data|DCD __imp_free|4-65-1-0
81768|data|DCD __imp_sg_cmds_close_device|12-65-1-0
81772|data|DCD __imp_memcmp|16-65-1-0
81776|data|DCD __imp___stack_chk_fail|24-65-1-0
81780|data|DCD __imp_perror|28-65-1-0
81784|data|DCD __imp_dStrHexErr|36-65-1-0
81788|data|DCD __imp_puts|40-65-1-0
81792|data|DCD __imp___libc_start_main|44-65-1-0
81796|data|DCD __imp___vfprintf_chk|48-65-1-0
81800|data|DCD __imp___ctype_toupper_loc|52-65-1-0
81804|data|DCD __imp___gmon_start__|128-65-1-0
81808|data|DCD __imp_getopt_long|56-65-1-0
81812|data|DCD __imp_strlen|60-65-1-0
81816|data|DCD __imp_strchr|64-65-1-0
81820|data|DCD __imp___strcat_chk|68-65-1-0
81824|data|DCD __imp___isoc99_sscanf|72-65-1-0
81828|data|DCD __imp_memset|76-65-1-0
81832|data|DCD __imp_putchar|80-65-1-0
81836|data|DCD __imp_strncpy|84-65-1-0
81840|data|DCD __imp___printf_chk|88-65-1-0
81844|data|DCD __imp_sg_ll_report_luns|92-65-1-0
81848|data|DCD __imp_safe_strerror|96-65-1-0
81852|data|DCD __imp_sg_get_category_sense_str|100-65-1-0
81856|data|DCD __imp_sg_get_num|104-65-1-0
81860|data|DCD __imp_sg_cmds_open_device|108-65-1-0
81864|data|DCD __imp_abort|116-65-1-0
81868|data|DCD __imp___snprintf_chk|120-65-1-0
81872|data|DCD __libc_csu_fini+1|13-31-0-0
81876|data|DCD __imp___cxa_finalize|252-64-1-0
81880|data|DCD _ITM_deregisterTMCloneTable|124-65-1-0
81884|data|DCD __stack_chk_guard|8-65-1-0
81888|data|DCD optind|20-65-1-0
81892|data|DCD stderr|32-65-1-0
81896|data|DCD __imp___gmon_start__|128-65-1-0
81900|data|DCD __libc_csu_init+1|205-30-0-0
81904|data|DCD main+1|125-12-0-0
81908|data|DCD _Jv_RegisterClasses|132-65-1-0
81912|data|DCD _ITM_registerTMCloneTable|136-65-1-0
81916|data|DCD optarg|112-65-1-0
82152|data|% 1; Alternative name is '__bss_start'|255
