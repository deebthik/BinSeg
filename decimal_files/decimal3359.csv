address|type|disassembly|bytes
65536|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
65540|data|DCB 1; File class: 32-bit|1
65541|data|DCB 1; Data encoding: little-endian|1
65542|data|DCB 1; File version|1
65543|data|DCB 0; OS/ABI: UNIX System V ABI|0
65544|data|DCB 0; ABI Version|0
65545|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
65552|data|DCW 2; File type: Executable|2-0
65554|data|DCW 0x28; Machine: ARM|40-0
65556|data|DCD 1; File version|1-0-0-0
65560|data|DCD start+1; Entry point|77-16-1-0
65564|data|DCD 0x34; PHT file offset|52-0-0-0
65568|data|DCD 0x2434; SHT file offset|52-36-0-0
65572|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
65576|data|DCW 0x34; ELF header size|52-0
65578|data|DCW 0x20; PHT entry size|32-0
65580|data|DCW 8; Number of entries in PHT|8-0
65582|data|DCW 0x28; SHT entry size|40-0
65584|data|DCW 0x1B; Number of entries in SHT|27-0
65586|data|DCW 0x1A; SHT entry index for string table|26-0
65588|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
65592|data|DCD 0x1D0C; File offset|12-29-0-0
65596|data|DCD unk_11D0C; Virtual address|12-29-1-0
65600|data|DCD 0x11D0C; Physical address|12-29-1-0
65604|data|DCD 8; Size in file image|8-0-0-0
65608|data|DCD 8; Size in memory image|8-0-0-0
65612|data|DCD 4; Flags|4-0-0-0
65616|data|DCD 4; Alignment|4-0-0-0
65620|data|DCD 6; Type: PHDR|6-0-0-0
65624|data|DCD 0x34; File offset|52-0-0-0
65628|data|DCD dword_10034; Virtual address|52-0-1-0
65632|data|DCD 0x10034; Physical address|52-0-1-0
65636|data|DCD 0x100; Size in file image|0-1-0-0
65640|data|DCD 0x100; Size in memory image|0-1-0-0
65644|data|DCD 5; Flags|5-0-0-0
65648|data|DCD 4; Alignment|4-0-0-0
65652|data|DCD 3; Type: INTERP|3-0-0-0
65656|data|DCD 0x134; File offset|52-1-0-0
65660|data|DCD aLibLdLinuxArmh; Virtual address|52-1-1-0
65664|data|DCD 0x10134; Physical address|52-1-1-0
65668|data|DCD 0x19; Size in file image|25-0-0-0
65672|data|DCD 0x19; Size in memory image|25-0-0-0
65676|data|DCD 4; Flags|4-0-0-0
65680|data|DCD 1; Alignment|1-0-0-0
65684|data|DCD 1; Type: LOAD|1-0-0-0
65688|data|DCD 0; File offset|0-0-0-0
65692|data|DCD dword_10000; Virtual address|0-0-1-0
65696|data|DCD 0x10000; Physical address|0-0-1-0
65700|data|DCD 0x1D18; Size in file image|24-29-0-0
65704|data|DCD 0x1D18; Size in memory image|24-29-0-0
65708|data|DCD 5; Flags|5-0-0-0
65712|data|DCD 0x10000; Alignment|0-0-1-0
65716|data|DCD 1; Type: LOAD|1-0-0-0
65720|data|DCD 0x2000; File offset|0-32-0-0
65724|data|DCD off_22000; Virtual address|0-32-2-0
65728|data|DCD 0x22000; Physical address|0-32-2-0
65732|data|DCD 0x30C; Size in file image|12-3-0-0
65736|data|DCD 0x464; Size in memory image|100-4-0-0
65740|data|DCD 6; Flags|6-0-0-0
65744|data|DCD 0x10000; Alignment|0-0-1-0
65748|data|DCD 2; Type: DYNAMIC|2-0-0-0
65752|data|DCD 0x200C; File offset|12-32-0-0
65756|data|DCD stru_2200C; Virtual address|12-32-2-0
65760|data|DCD 0x2200C; Physical address|12-32-2-0
65764|data|DCD 0xE8; Size in file image|232-0-0-0
65768|data|DCD 0xE8; Size in memory image|232-0-0-0
65772|data|DCD 6; Flags|6-0-0-0
65776|data|DCD 4; Alignment|4-0-0-0
65780|data|DCD 4; Type: NOTE|4-0-0-0
65784|data|DCD 0x150; File offset|80-1-0-0
65788|data|DCD dword_10150; Virtual address|80-1-1-0
65792|data|DCD 0x10150; Physical address|80-1-1-0
65796|data|DCD 0x44; Size in file image|68-0-0-0
65800|data|DCD 0x44; Size in memory image|68-0-0-0
65804|data|DCD 4; Flags|4-0-0-0
65808|data|DCD 4; Alignment|4-0-0-0
65812|data|DCD 0x6474E551; Type: STACK|81-229-116-100
65816|data|DCD 0; File offset|0-0-0-0
65820|data|DCD 0; Virtual address|0-0-0-0
65824|data|DCD 0; Physical address|0-0-0-0
65828|data|DCD 0; Size in file image|0-0-0-0
65832|data|DCD 0; Size in memory image|0-0-0-0
65836|data|DCD 6; Flags|6-0-0-0
65840|data|DCD 0x10; Alignment|16-0-0-0
65844|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
65869|data|DCB 0, 0, 0|0-0-0
65872|data|DCD 4; Name Size|4-0-0-0
65876|data|DCD 0x10; Desc Size|16-0-0-0
65880|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
65884|data|DCB "GNU",0; Name|71-78-85-0
65888|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
65904|data|DCD 4; Name Size|4-0-0-0
65908|data|DCD 0x14; Desc Size|20-0-0-0
65912|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
65916|data|DCB "GNU",0; Name|71-78-85-0
65920|data|DCB 0xF7, 0xDC, 0x49, 0xF5, 0x20, 0x9B, 0x6D, 0x4E, 0x49; Desc|247-220-73-245-32-155-109-78-73-92-223-229-182-37-108-205-95-88-104-236
65940|data|DCD 0x25|37-0-0-0
65944|data|DCD 2|2-0-0-0
65948|data|DCD 0x10|16-0-0-0
65952|data|DCD 9|9-0-0-0
65956|data|DCD 0x486401A0, 0x83004081, 0x19002000, 0x1A508408, 0|160-1-100-72-129-64-0-131-0-32-0-25-8-132-80-26-0-0-0-0-0-96-137-1-164-76-0-0-1-160-128-0-146-8-2-32-130-65-193-118-66-0-1-4-35-8-196-34-160-128-153-100-0-4-32-9-32-144-1-128-9-0-66-128
66020|data|DCD 2, 0, 0, 4, 0, 6, 0, 8, 0xB, 0xC, 0, 0xD, 0x11, 0x13|2-0-0-0-0-0-0-0-0-0-0-0-4-0-0-0-0-0-0-0-6-0-0-0-0-0-0-0-8-0-0-0-11-0-0-0-12-0-0-0-0-0-0-0-13-0-0-0-17-0-0-0-19-0-0-0-24-0-0-0-25-0-0-0-0-0-0-0-0-0-0-0-27-0-0-0-29-0-0-0-30-0-0-0-35-0-0-0-37-0-0-0-41-0-0-0-43-0-0-0-45-0-0-0-48-0-0-0-49-0-0-0-51-0-0-0-52-0-0-0-53-0-0-0-54-0-0-0-0-0-0-0-55-0-0-0-0-0-0-0-56-0-0-0-57-0-0-0
66168|data|DCD 0xD39AD3C, 0x7C9BD777, 0x7C998910, 0xA4F92301, 0xF738B7C|60-173-57-13-119-215-155-124-16-137-153-124-1-35-249-164-124-139-115-15-97-215-28-19-184-43-107-21-30-118-181-218-179-174-86-39-65-77-157-124-47-78-61-246-56-242-139-28-4-80-133-27-186-149-147-28-173-112-14-175-62-249-255-188-97-51-102-15-92-240-108-15-254-1-196-18-40-29-140-28-146-139-133-27-125-237-17-15-91-154-59-15-58-251-159-124-157-187-147-28-194-142-135-255-63-126-150-124-55-195-242-122-204-203-252-182-144-117-130-13-208-159-44-252-150-169-186-218-57-64-12-175-226-173-198-27-247-35-206-32-118-56-230-0-134-31-133-252-120-104-135-255-225-238-102-100-202-150-147-28-205-63-12-175-6-164-135-255-119-229-150-124-174-96-135-255-80-181-168-16-33-207-9-253-11-15-181-165-236-222-147-28-159-251-110-15-107-246-163-182-99-222-36-5-207-74-174-255-209-95-57-15-57-33-226-15-17-123-156-124-23-234-118-254
66392|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
66408|data|Elf32_Sym <aGmonStart - byte_106F8, 0, 0, 0x20, 0, 0>; "__gmon_start__"|151-1-0-0-0-0-0-0-0-0-0-0-32-0-0-0
66424|data|Elf32_Sym <aMalloc - byte_106F8, 0, 0, 0x12, 0, 0>; "malloc"|0-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66440|data|Elf32_Sym <aFopen+1 - byte_106F8, 0, 0, 0x12, 0, 0>; "open"|54-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66456|data|Elf32_Sym <aKill - byte_106F8, 0, 0, 0x12, 0, 0>; "kill"|134-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66472|data|Elf32_Sym <aErrnoLocation - byte_106F8, 0, 0, 0x12, 0, 0>; "__errno_location"|199-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66488|data|Elf32_Sym <aFopen - byte_106F8, 0, 0, 0x12, 0, 0>; "fopen"|53-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66504|data|Elf32_Sym <aSetutent - byte_106F8, 0, 0, 0x12, 0, 0>; "setutent"|190-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66520|data|Elf32_Sym <aFprintf+1 - byte_106F8, 0, 0, 0x12, 0, 0>; "printf"|76-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66536|data|Elf32_Sym <aIoGetc - byte_106F8, 0, 0, 0x12, 0, 0>; "_IO_getc"|108-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66552|data|Elf32_Sym <aSigblock - byte_106F8, 0, 0, 0x12, 0, 0>; "sigblock"|168-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66568|data|Elf32_Sym <aRead - byte_106F8, 0, 0, 0x12, 0, 0>; "read"|216-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66584|data|Elf32_Sym <aLibcStartMain - byte_106F8, 0, 0, 0x12, 0, 0>; "__libc_start_main"|124-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66600|data|Elf32_Sym <aStderr - byte_106F8, stderr, 4, 0x11, 0, 0x18>; "stderr"|31-1-0-0-16-35-2-0-4-0-0-0-17-0-24-0
66616|data|Elf32_Sym <aSetgid - byte_106F8, 0, 0, 0x12, 0, 0>; "setgid"|117-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66632|data|Elf32_Sym <aStrchr - byte_106F8, 0, 0, 0x12, 0, 0>; "strchr"|68-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66648|data|Elf32_Sym <aStrrchr - byte_106F8, 0, 0, 0x12, 0, 0>; "strrchr"|67-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66664|data|Elf32_Sym <aFprintf - byte_106F8, 0, 0, 0x12, 0, 0>; "fprintf"|75-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66680|data|Elf32_Sym <aExecv - byte_106F8, 0, 0, 0x12, 0, 0>; "execv"|30-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66696|data|Elf32_Sym <aFcntl - byte_106F8, 0, 0, 0x12, 0, 0>; "fcntl"|83-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66712|data|Elf32_Sym <aSetpwent - byte_106F8, 0, 0, 0x12, 0, 0>; "setpwent"|142-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66728|data|Elf32_Sym <aStdout - byte_106F8, stdout, 4, 0x11, 0, 0x18>; "stdout"|229-0-0-0-20-35-2-0-4-0-0-0-17-0-24-0
66744|data|Elf32_Sym <aSetuid - byte_106F8, 0, 0, 0x12, 0, 0>; "setuid"|11-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66760|data|Elf32_Sym <aAbort - byte_106F8, 0, 0, 0x12, 0, 0>; "abort"|121-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66776|data|Elf32_Sym <aFclose+1 - byte_106F8, 0, 0, 0x12, 0, 0>; "close"|250-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66792|data|Elf32_Sym <aWait - byte_106F8, 0, 0, 0x12, 0, 0>; "wait"|75-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66808|data|Elf32_Sym <aStrlen - byte_106F8, 0, 0, 0x12, 0, 0>; "strlen"|183-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66824|data|Elf32_Sym <aGetpid - byte_106F8, 0, 0, 0x12, 0, 0>; "getpid"|127-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66840|data|Elf32_Sym <aExit - byte_106F8, 0, 0, 0x12, 0, 0>; "exit"|25-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66856|data|Elf32_Sym <aXstat - byte_106F8, 0, 0, 0x12, 0, 0>; "__xstat"|89-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66872|data|Elf32_Sym <aEndutent - byte_106F8, 0, 0, 0x12, 0, 0>; "endutent"|59-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66888|data|Elf32_Sym <aMemcpy - byte_106F8, 0, 0, 0x12, 0, 0>; "memcpy"|242-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66904|data|Elf32_Sym <aExecvp - byte_106F8, 0, 0, 0x12, 0, 0>; "execvp"|45-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66920|data|Elf32_Sym <aIoPutc - byte_106F8, 0, 0, 0x12, 0, 0>; "_IO_putc"|44-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66936|data|Elf32_Sym <aStrncpy - byte_106F8, 0, 0, 0x12, 0, 0>; "strncpy"|96-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66952|data|Elf32_Sym <aSignal - byte_106F8, 0, 0, 0x12, 0, 0>; "signal"|89-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66968|data|Elf32_Sym <aUnlink - byte_106F8, 0, 0, 0x12, 0, 0>; "unlink"|114-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
66984|data|Elf32_Sym <aGetutline - byte_106F8, 0, 0, 0x12, 0, 0>; "getutline"|14-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67000|data|Elf32_Sym <aTtyname - byte_106F8, 0, 0, 0x12, 0, 0>; "ttyname"|221-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67016|data|Elf32_Sym <aGetgid - byte_106F8, 0, 0, 0x12, 0, 0>; "getgid"|7-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67032|data|Elf32_Sym <aSigsetmask - byte_106F8, 0, 0, 0x12, 0, 0>; "sigsetmask"|97-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67048|data|Elf32_Sym <aStrcpy - byte_106F8, 0, 0, 0x12, 0, 0>; "strcpy"|18-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67064|data|Elf32_Sym <aStrncmp - byte_106F8, 0, 0, 0x12, 0, 0>; "strncmp"|59-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67080|data|Elf32_Sym <aGetuid - byte_106F8, 0, 0, 0x12, 0, 0>; "getuid"|38-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67096|data|Elf32_Sym <aFork - byte_106F8, 0, 0, 0x12, 0, 0>; "fork"|109-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67112|data|Elf32_Sym <aGetenv - byte_106F8, 0, 0, 0x12, 0, 0>; "getenv"|24-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67128|data|Elf32_Sym <aFwrite+1 - byte_106F8, 0, 0, 0x12, 0, 0>; "write"|53-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67144|data|Elf32_Sym <aFclose - byte_106F8, 0, 0, 0x12, 0, 0>; "fclose"|249-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67160|data|Elf32_Sym <aSprintf - byte_106F8, 0, 0, 0x12, 0, 0>; "sprintf"|36-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67176|data|Elf32_Sym <aStrtol - byte_106F8, 0, 0, 0x12, 0, 0>; "strtol"|154-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67192|data|Elf32_Sym <aFgets - byte_106F8, 0, 0, 0x12, 0, 0>; "fgets"|177-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67208|data|Elf32_Sym <aEndpwent - byte_106F8, 0, 0, 0x12, 0, 0>; "endpwent"|145-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67224|data|Elf32_Sym <aIsatty - byte_106F8, 0, 0, 0x12, 0, 0>; "isatty"|161-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67240|data|Elf32_Sym <aGetpwuid - byte_106F8, 0, 0, 0x12, 0, 0>; "getpwuid"|80-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67256|data|Elf32_Sym <aChmod - byte_106F8, 0, 0, 0x12, 0, 0>; "chmod"|139-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67272|data|Elf32_Sym <aLseek - byte_106F8, 0, 0, 0x12, 0, 0>; "lseek"|236-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67288|data|Elf32_Sym <aPuts - byte_106F8, 0, 0, 0x12, 0, 0>; "puts"|104-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67304|data|Elf32_Sym <aFwrite - byte_106F8, 0, 0, 0x12, 0, 0>; "fwrite"|52-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
67320|data|DCB 0|0
67321|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
67331|data|DCB "setuid",0|115-101-116-117-105-100-0
67338|data|DCB "strcpy",0|115-116-114-99-112-121-0
67345|data|DCB "exit",0|101-120-105-116-0
67350|data|DCB "execv",0|101-120-101-99-118-0
67356|data|DCB "sprintf",0|115-112-114-105-110-116-102-0
67364|data|DCB "_IO_putc",0|95-73-79-95-112-117-116-99-0
67373|data|DCB "fopen",0|102-111-112-101-110-0
67379|data|DCB "strncmp",0|115-116-114-110-99-109-112-0
67387|data|DCB "strrchr",0|115-116-114-114-99-104-114-0
67395|data|DCB "wait",0|119-97-105-116-0
67400|data|DCB "getpwuid",0|103-101-116-112-119-117-105-100-0
67409|data|DCB "signal",0|115-105-103-110-97-108-0
67416|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
67424|data|DCB "puts",0|112-117-116-115-0
67429|data|DCB "fork",0|102-111-114-107-0
67434|data|DCB "unlink",0|117-110-108-105-110-107-0
67441|data|DCB "abort",0|97-98-111-114-116-0
67447|data|DCB "getpid",0|103-101-116-112-105-100-0
67454|data|DCB "kill",0|107-105-108-108-0
67459|data|DCB "chmod",0|99-104-109-111-100-0
67465|data|DCB "endpwent",0|101-110-100-112-119-101-110-116-0
67474|data|DCB "strtol",0|115-116-114-116-111-108-0
67481|data|DCB "isatty",0|105-115-97-116-116-121-0
67488|data|DCB "sigblock",0|115-105-103-98-108-111-99-107-0
67497|data|DCB "fgets",0|102-103-101-116-115-0
67503|data|DCB "strlen",0|115-116-114-108-101-110-0
67510|data|DCB "setutent",0|115-101-116-117-116-101-110-116-0
67519|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
67536|data|DCB "read",0|114-101-97-100-0
67541|data|DCB "ttyname",0|116-116-121-110-97-109-101-0
67549|data|DCB "stdout",0|115-116-100-111-117-116-0
67556|data|DCB "lseek",0|108-115-101-101-107-0
67562|data|DCB "memcpy",0|109-101-109-99-112-121-0
67569|data|DCB "fclose",0|102-99-108-111-115-101-0
67576|data|DCB "malloc",0|109-97-108-108-111-99-0
67583|data|DCB "getgid",0|103-101-116-103-105-100-0
67590|data|DCB "getutline",0|103-101-116-117-116-108-105-110-101-0
67600|data|DCB "getenv",0|103-101-116-101-110-118-0
67607|data|DCB "stderr",0|115-116-100-101-114-114-0
67614|data|DCB "getuid",0|103-101-116-117-105-100-0
67621|data|DCB "execvp",0|101-120-101-99-118-112-0
67628|data|DCB "fwrite",0|102-119-114-105-116-101-0
67635|data|DCB "endutent",0|101-110-100-117-116-101-110-116-0
67644|data|DCB "strchr",0|115-116-114-99-104-114-0
67651|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
67659|data|DCB "fcntl",0|102-99-110-116-108-0
67665|data|DCB "__xstat",0|95-95-120-115-116-97-116-0
67673|data|DCB "sigsetmask",0|115-105-103-115-101-116-109-97-115-107-0
67684|data|DCB "_IO_getc",0|95-73-79-95-103-101-116-99-0
67693|data|DCB "setgid",0|115-101-116-103-105-100-0
67700|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
67718|data|DCB "setpwent",0|115-101-116-112-119-101-110-116-0
67727|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
67742|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
67752|data|DCW 0|0-0
67754|data|DCW 0; local  symbol: __gmon_start__|0-0
67756|data|DCW 2; malloc@@GLIBC_2.4|2-0
67758|data|DCW 2; open@@GLIBC_2.4|2-0
67760|data|DCW 2; kill@@GLIBC_2.4|2-0
67762|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
67764|data|DCW 2; fopen@@GLIBC_2.4|2-0
67766|data|DCW 2; setutent@@GLIBC_2.4|2-0
67768|data|DCW 2; printf@@GLIBC_2.4|2-0
67770|data|DCW 2; _IO_getc@@GLIBC_2.4|2-0
67772|data|DCW 2; sigblock@@GLIBC_2.4|2-0
67774|data|DCW 2; read@@GLIBC_2.4|2-0
67776|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
67778|data|DCW 2; stderr@@GLIBC_2.4|2-0
67780|data|DCW 2; setgid@@GLIBC_2.4|2-0
67782|data|DCW 2; strchr@@GLIBC_2.4|2-0
67784|data|DCW 2; strrchr@@GLIBC_2.4|2-0
67786|data|DCW 2; fprintf@@GLIBC_2.4|2-0
67788|data|DCW 2; execv@@GLIBC_2.4|2-0
67790|data|DCW 2; fcntl@@GLIBC_2.4|2-0
67792|data|DCW 2; setpwent@@GLIBC_2.4|2-0
67794|data|DCW 2; stdout@@GLIBC_2.4|2-0
67796|data|DCW 2; setuid@@GLIBC_2.4|2-0
67798|data|DCW 2; abort@@GLIBC_2.4|2-0
67800|data|DCW 2; close@@GLIBC_2.4|2-0
67802|data|DCW 2; wait@@GLIBC_2.4|2-0
67804|data|DCW 2; strlen@@GLIBC_2.4|2-0
67806|data|DCW 2; getpid@@GLIBC_2.4|2-0
67808|data|DCW 2; exit@@GLIBC_2.4|2-0
67810|data|DCW 2; __xstat@@GLIBC_2.4|2-0
67812|data|DCW 2; endutent@@GLIBC_2.4|2-0
67814|data|DCW 2; memcpy@@GLIBC_2.4|2-0
67816|data|DCW 2; execvp@@GLIBC_2.4|2-0
67818|data|DCW 2; _IO_putc@@GLIBC_2.4|2-0
67820|data|DCW 2; strncpy@@GLIBC_2.4|2-0
67822|data|DCW 2; signal@@GLIBC_2.4|2-0
67824|data|DCW 2; unlink@@GLIBC_2.4|2-0
67826|data|DCW 2; getutline@@GLIBC_2.4|2-0
67828|data|DCW 2; ttyname@@GLIBC_2.4|2-0
67830|data|DCW 2; getgid@@GLIBC_2.4|2-0
67832|data|DCW 2; sigsetmask@@GLIBC_2.4|2-0
67834|data|DCW 2; strcpy@@GLIBC_2.4|2-0
67836|data|DCW 2; strncmp@@GLIBC_2.4|2-0
67838|data|DCW 2; getuid@@GLIBC_2.4|2-0
67840|data|DCW 2; fork@@GLIBC_2.4|2-0
67842|data|DCW 2; getenv@@GLIBC_2.4|2-0
67844|data|DCW 2; write@@GLIBC_2.4|2-0
67846|data|DCW 2; fclose@@GLIBC_2.4|2-0
67848|data|DCW 2; sprintf@@GLIBC_2.4|2-0
67850|data|DCW 2; strtol@@GLIBC_2.4|2-0
67852|data|DCW 2; fgets@@GLIBC_2.4|2-0
67854|data|DCW 2; endpwent@@GLIBC_2.4|2-0
67856|data|DCW 2; isatty@@GLIBC_2.4|2-0
67858|data|DCW 2; getpwuid@@GLIBC_2.4|2-0
67860|data|DCW 2; chmod@@GLIBC_2.4|2-0
67862|data|DCW 2; lseek@@GLIBC_2.4|2-0
67864|data|DCW 2; puts@@GLIBC_2.4|2-0
67866|data|DCW 2; fwrite@@GLIBC_2.4|2-0
67868|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_106F8, 0x10, 0>; "libc.so.6"|1-0-1-0-1-0-0-0-16-0-0-0-0-0-0-0
67884|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_106F8, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-166-1-0-0-0-0-0-0
67900|data|Elf32_Rel <0x221DC, 0x115>; R_ARM_GLOB_DAT __gmon_start__|220-33-2-0-21-1-0-0
67908|data|Elf32_Rel <0x22310, 0xD14>; R_ARM_COPY stderr|16-35-2-0-20-13-0-0
67916|data|Elf32_Rel <0x22314, 0x1514>; R_ARM_COPY stdout|20-35-2-0-20-21-0-0
67924|data|Elf32_Rel <0x22100, 0x3116>; R_ARM_JUMP_SLOT strtol|0-33-2-0-22-49-0-0
67932|data|Elf32_Rel <0x22104, 0x3516>; R_ARM_JUMP_SLOT getpwuid|4-33-2-0-22-53-0-0
67940|data|Elf32_Rel <0x22108, 0x816>; R_ARM_JUMP_SLOT printf|8-33-2-0-22-8-0-0
67948|data|Elf32_Rel <0x2210C, 0x616>; R_ARM_JUMP_SLOT fopen|12-33-2-0-22-6-0-0
67956|data|Elf32_Rel <0x22110, 0xB16>; R_ARM_JUMP_SLOT read|16-33-2-0-22-11-0-0
67964|data|Elf32_Rel <0x22114, 0x1E16>; R_ARM_JUMP_SLOT endutent|20-33-2-0-22-30-0-0
67972|data|Elf32_Rel <0x22118, 0x2B16>; R_ARM_JUMP_SLOT getuid|24-33-2-0-22-43-0-0
67980|data|Elf32_Rel <0x2211C, 0x3216>; R_ARM_JUMP_SLOT fgets|28-33-2-0-22-50-0-0
67988|data|Elf32_Rel <0x22120, 0x1F16>; R_ARM_JUMP_SLOT memcpy|32-33-2-0-22-31-0-0
67996|data|Elf32_Rel <0x22124, 0x2016>; R_ARM_JUMP_SLOT execvp|36-33-2-0-22-32-0-0
68004|data|Elf32_Rel <0x22128, 0x2316>; R_ARM_JUMP_SLOT signal|40-33-2-0-22-35-0-0
68012|data|Elf32_Rel <0x2212C, 0x3716>; R_ARM_JUMP_SLOT lseek|44-33-2-0-22-55-0-0
68020|data|Elf32_Rel <0x22130, 0x916>; R_ARM_JUMP_SLOT _IO_getc|48-33-2-0-22-9-0-0
68028|data|Elf32_Rel <0x22134, 0x2416>; R_ARM_JUMP_SLOT unlink|52-33-2-0-22-36-0-0
68036|data|Elf32_Rel <0x22138, 0x1916>; R_ARM_JUMP_SLOT wait|56-33-2-0-22-25-0-0
68044|data|Elf32_Rel <0x2213C, 0x1D16>; R_ARM_JUMP_SLOT __xstat|60-33-2-0-22-29-0-0
68052|data|Elf32_Rel <0x22140, 0x2116>; R_ARM_JUMP_SLOT _IO_putc|64-33-2-0-22-33-0-0
68060|data|Elf32_Rel <0x22144, 0x3916>; R_ARM_JUMP_SLOT fwrite|68-33-2-0-22-57-0-0
68068|data|Elf32_Rel <0x22148, 0x2916>; R_ARM_JUMP_SLOT strcpy|72-33-2-0-22-41-0-0
68076|data|Elf32_Rel <0x2214C, 0x2D16>; R_ARM_JUMP_SLOT getenv|76-33-2-0-22-45-0-0
68084|data|Elf32_Rel <0x22150, 0x3816>; R_ARM_JUMP_SLOT puts|80-33-2-0-22-56-0-0
68092|data|Elf32_Rel <0x22154, 0xE16>; R_ARM_JUMP_SLOT setgid|84-33-2-0-22-14-0-0
68100|data|Elf32_Rel <0x22158, 0x216>; R_ARM_JUMP_SLOT malloc|88-33-2-0-22-2-0-0
68108|data|Elf32_Rel <0x2215C, 0xC16>; R_ARM_JUMP_SLOT __libc_start_main|92-33-2-0-22-12-0-0
68116|data|Elf32_Rel <0x22160, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|96-33-2-0-22-1-0-0
68124|data|Elf32_Rel <0x22164, 0xA16>; R_ARM_JUMP_SLOT sigblock|100-33-2-0-22-10-0-0
68132|data|Elf32_Rel <0x22168, 0x316>; R_ARM_JUMP_SLOT open|104-33-2-0-22-3-0-0
68140|data|Elf32_Rel <0x2216C, 0x416>; R_ARM_JUMP_SLOT kill|108-33-2-0-22-4-0-0
68148|data|Elf32_Rel <0x22170, 0x2516>; R_ARM_JUMP_SLOT getutline|112-33-2-0-22-37-0-0
68156|data|Elf32_Rel <0x22174, 0x1B16>; R_ARM_JUMP_SLOT getpid|116-33-2-0-22-27-0-0
68164|data|Elf32_Rel <0x22178, 0x1C16>; R_ARM_JUMP_SLOT exit|120-33-2-0-22-28-0-0
68172|data|Elf32_Rel <0x2217C, 0x2616>; R_ARM_JUMP_SLOT ttyname|124-33-2-0-22-38-0-0
68180|data|Elf32_Rel <0x22180, 0x1A16>; R_ARM_JUMP_SLOT strlen|128-33-2-0-22-26-0-0
68188|data|Elf32_Rel <0x22184, 0xF16>; R_ARM_JUMP_SLOT strchr|132-33-2-0-22-15-0-0
68196|data|Elf32_Rel <0x22188, 0x1116>; R_ARM_JUMP_SLOT fprintf|136-33-2-0-22-17-0-0
68204|data|Elf32_Rel <0x2218C, 0x1316>; R_ARM_JUMP_SLOT fcntl|140-33-2-0-22-19-0-0
68212|data|Elf32_Rel <0x22190, 0x1416>; R_ARM_JUMP_SLOT setpwent|144-33-2-0-22-20-0-0
68220|data|Elf32_Rel <0x22194, 0x1216>; R_ARM_JUMP_SLOT execv|148-33-2-0-22-18-0-0
68228|data|Elf32_Rel <0x22198, 0x516>; R_ARM_JUMP_SLOT __errno_location|152-33-2-0-22-5-0-0
68236|data|Elf32_Rel <0x2219C, 0x2716>; R_ARM_JUMP_SLOT getgid|156-33-2-0-22-39-0-0
68244|data|Elf32_Rel <0x221A0, 0x2216>; R_ARM_JUMP_SLOT strncpy|160-33-2-0-22-34-0-0
68252|data|Elf32_Rel <0x221A4, 0x716>; R_ARM_JUMP_SLOT setutent|164-33-2-0-22-7-0-0
68260|data|Elf32_Rel <0x221A8, 0x2E16>; R_ARM_JUMP_SLOT write|168-33-2-0-22-46-0-0
68268|data|Elf32_Rel <0x221AC, 0x2816>; R_ARM_JUMP_SLOT sigsetmask|172-33-2-0-22-40-0-0
68276|data|Elf32_Rel <0x221B0, 0x2F16>; R_ARM_JUMP_SLOT fclose|176-33-2-0-22-47-0-0
68284|data|Elf32_Rel <0x221B4, 0x2C16>; R_ARM_JUMP_SLOT fork|180-33-2-0-22-44-0-0
68292|data|Elf32_Rel <0x221B8, 0x3316>; R_ARM_JUMP_SLOT endpwent|184-33-2-0-22-51-0-0
68300|data|Elf32_Rel <0x221BC, 0x1016>; R_ARM_JUMP_SLOT strrchr|188-33-2-0-22-16-0-0
68308|data|Elf32_Rel <0x221C0, 0x1616>; R_ARM_JUMP_SLOT setuid|192-33-2-0-22-22-0-0
68316|data|Elf32_Rel <0x221C4, 0x3016>; R_ARM_JUMP_SLOT sprintf|196-33-2-0-22-48-0-0
68324|data|Elf32_Rel <0x221C8, 0x3616>; R_ARM_JUMP_SLOT chmod|200-33-2-0-22-54-0-0
68332|data|Elf32_Rel <0x221CC, 0x3416>; R_ARM_JUMP_SLOT isatty|204-33-2-0-22-52-0-0
68340|data|Elf32_Rel <0x221D0, 0x2A16>; R_ARM_JUMP_SLOT strncmp|208-33-2-0-22-42-0-0
68348|data|Elf32_Rel <0x221D4, 0x1716>; R_ARM_JUMP_SLOT abort|212-33-2-0-22-23-0-0
68356|data|Elf32_Rel <0x221D8, 0x1816>; R_ARM_JUMP_SLOT close|216-33-2-0-22-24-0-0
68364|code|PUSH            {R3,LR}|8-64-45-233
68368|code|BL              sub_1107C|89-1-0-235
68372|code|POP             {R3,PC}|8-128-189-232
68376|code|PUSH            {LR}|4-224-45-229
68380|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x10B28)|4-224-159-229
68384|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
68388|code|LDR             PC, [LR,#8]!|8-240-190-229
68392|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10B28|204-21-1-0
68396|code|ADR             R12, 0x10B34|0-198-143-226
68400|code|ADD             R12, R12, #0x11000|17-202-140-226
68404|code|LDR             PC, [R12,#(strtol_ptr - 0x21B34)]!; __imp_strtol|204-245-188-229
68408|code|ADR             R12, 0x10B40|0-198-143-226
68412|code|ADD             R12, R12, #0x11000|17-202-140-226
68416|code|LDR             PC, [R12,#(getpwuid_ptr - 0x21B40)]!; __imp_getpwuid|196-245-188-229
68420|code|ADR             R12, 0x10B4C|0-198-143-226
68424|code|ADD             R12, R12, #0x11000|17-202-140-226
68428|code|LDR             PC, [R12,#(printf_ptr - 0x21B4C)]!; __imp_printf|188-245-188-229
68432|code|ADR             R12, 0x10B58|0-198-143-226
68436|code|ADD             R12, R12, #0x11000|17-202-140-226
68440|code|LDR             PC, [R12,#(fopen_ptr - 0x21B58)]!; __imp_fopen|180-245-188-229
68444|code|ADR             R12, 0x10B64|0-198-143-226
68448|code|ADD             R12, R12, #0x11000|17-202-140-226
68452|code|LDR             PC, [R12,#(read_ptr - 0x21B64)]!; __imp_read|172-245-188-229
68456|code|ADR             R12, 0x10B70|0-198-143-226
68460|code|ADD             R12, R12, #0x11000|17-202-140-226
68464|code|LDR             PC, [R12,#(endutent_ptr - 0x21B70)]!; __imp_endutent|164-245-188-229
68468|code|ADR             R12, 0x10B7C|0-198-143-226
68472|code|ADD             R12, R12, #0x11000|17-202-140-226
68476|code|LDR             PC, [R12,#(getuid_ptr - 0x21B7C)]!; __imp_getuid|156-245-188-229
68480|code|ADR             R12, 0x10B88|0-198-143-226
68484|code|ADD             R12, R12, #0x11000|17-202-140-226
68488|code|LDR             PC, [R12,#(fgets_ptr - 0x21B88)]!; __imp_fgets|148-245-188-229
68492|code|ADR             R12, 0x10B94|0-198-143-226
68496|code|ADD             R12, R12, #0x11000|17-202-140-226
68500|code|LDR             PC, [R12,#(memcpy_ptr - 0x21B94)]!; __imp_memcpy|140-245-188-229
68504|code|ADR             R12, 0x10BA0|0-198-143-226
68508|code|ADD             R12, R12, #0x11000|17-202-140-226
68512|code|LDR             PC, [R12,#(execvp_ptr - 0x21BA0)]!; __imp_execvp|132-245-188-229
68516|code|ADR             R12, 0x10BAC|0-198-143-226
68520|code|ADD             R12, R12, #0x11000|17-202-140-226
68524|code|LDR             PC, [R12,#(signal_ptr - 0x21BAC)]!; __imp_signal|124-245-188-229
68528|code|ADR             R12, 0x10BB8|0-198-143-226
68532|code|ADD             R12, R12, #0x11000|17-202-140-226
68536|code|LDR             PC, [R12,#(lseek_ptr - 0x21BB8)]!; __imp_lseek|116-245-188-229
68540|code|ADR             R12, 0x10BC4|0-198-143-226
68544|code|ADD             R12, R12, #0x11000|17-202-140-226
68548|code|LDR             PC, [R12,#(_IO_getc_ptr - 0x21BC4)]!; __imp__IO_getc|108-245-188-229
68552|code|ADR             R12, 0x10BD0|0-198-143-226
68556|code|ADD             R12, R12, #0x11000|17-202-140-226
68560|code|LDR             PC, [R12,#(unlink_ptr - 0x21BD0)]!; __imp_unlink|100-245-188-229
68564|code|ADR             R12, 0x10BDC|0-198-143-226
68568|code|ADD             R12, R12, #0x11000|17-202-140-226
68572|code|LDR             PC, [R12,#(wait_ptr - 0x21BDC)]!; __imp_wait|92-245-188-229
68576|code|ADR             R12, 0x10BE8|0-198-143-226
68580|code|ADD             R12, R12, #0x11000|17-202-140-226
68584|code|LDR             PC, [R12,#(__xstat_ptr - 0x21BE8)]!; __imp___xstat|84-245-188-229
68588|code|ADR             R12, 0x10BF4|0-198-143-226
68592|code|ADD             R12, R12, #0x11000|17-202-140-226
68596|code|LDR             PC, [R12,#(_IO_putc_ptr - 0x21BF4)]!; __imp__IO_putc|76-245-188-229
68600|code|ADR             R12, 0x10C00|0-198-143-226
68604|code|ADD             R12, R12, #0x11000|17-202-140-226
68608|code|LDR             PC, [R12,#(fwrite_ptr - 0x21C00)]!; __imp_fwrite|68-245-188-229
68612|code|ADR             R12, 0x10C0C|0-198-143-226
68616|code|ADD             R12, R12, #0x11000|17-202-140-226
68620|code|LDR             PC, [R12,#(strcpy_ptr - 0x21C0C)]!; __imp_strcpy|60-245-188-229
68624|code|ADR             R12, 0x10C18|0-198-143-226
68628|code|ADD             R12, R12, #0x11000|17-202-140-226
68632|code|LDR             PC, [R12,#(getenv_ptr - 0x21C18)]!; __imp_getenv|52-245-188-229
68636|code|ADR             R12, 0x10C24|0-198-143-226
68640|code|ADD             R12, R12, #0x11000|17-202-140-226
68644|code|LDR             PC, [R12,#(puts_ptr - 0x21C24)]!; __imp_puts|44-245-188-229
68648|code|ADR             R12, 0x10C30|0-198-143-226
68652|code|ADD             R12, R12, #0x11000|17-202-140-226
68656|code|LDR             PC, [R12,#(setgid_ptr - 0x21C30)]!; __imp_setgid|36-245-188-229
68660|code|ADR             R12, 0x10C3C|0-198-143-226
68664|code|ADD             R12, R12, #0x11000|17-202-140-226
68668|code|LDR             PC, [R12,#(malloc_ptr - 0x21C3C)]!; __imp_malloc|28-245-188-229
68672|code|ADR             R12, 0x10C48|0-198-143-226
68676|code|ADD             R12, R12, #0x11000|17-202-140-226
68680|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x21C48)]!; __imp___libc_start_main|20-245-188-229
68684|code|ADR             R12, 0x10C54|0-198-143-226
68688|code|ADD             R12, R12, #0x11000|17-202-140-226
68692|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x21C54)]!; __imp___gmon_start__|12-245-188-229
68696|code|ADR             R12, 0x10C60|0-198-143-226
68700|code|ADD             R12, R12, #0x11000|17-202-140-226
68704|code|LDR             PC, [R12,#(sigblock_ptr - 0x21C60)]!; __imp_sigblock|4-245-188-229
68708|code|ADR             R12, 0x10C6C|0-198-143-226
68712|code|ADD             R12, R12, #0x11000|17-202-140-226
68716|code|LDR             PC, [R12,#(open_ptr - 0x21C6C)]!; __imp_open|252-244-188-229
68720|code|ADR             R12, 0x10C78|0-198-143-226
68724|code|ADD             R12, R12, #0x11000|17-202-140-226
68728|code|LDR             PC, [R12,#(kill_ptr - 0x21C78)]!; __imp_kill|244-244-188-229
68732|code|ADR             R12, 0x10C84|0-198-143-226
68736|code|ADD             R12, R12, #0x11000|17-202-140-226
68740|code|LDR             PC, [R12,#(getutline_ptr - 0x21C84)]!; __imp_getutline|236-244-188-229
68744|code|ADR             R12, 0x10C90|0-198-143-226
68748|code|ADD             R12, R12, #0x11000|17-202-140-226
68752|code|LDR             PC, [R12,#(getpid_ptr - 0x21C90)]!; __imp_getpid|228-244-188-229
68756|code|ADR             R12, 0x10C9C|0-198-143-226
68760|code|ADD             R12, R12, #0x11000|17-202-140-226
68764|code|LDR             PC, [R12,#(exit_ptr - 0x21C9C)]!; __imp_exit|220-244-188-229
68768|code|ADR             R12, 0x10CA8|0-198-143-226
68772|code|ADD             R12, R12, #0x11000|17-202-140-226
68776|code|LDR             PC, [R12,#(ttyname_ptr - 0x21CA8)]!; __imp_ttyname|212-244-188-229
68780|code|ADR             R12, 0x10CB4|0-198-143-226
68784|code|ADD             R12, R12, #0x11000|17-202-140-226
68788|code|LDR             PC, [R12,#(strlen_ptr - 0x21CB4)]!; __imp_strlen|204-244-188-229
68792|code|ADR             R12, 0x10CC0|0-198-143-226
68796|code|ADD             R12, R12, #0x11000|17-202-140-226
68800|code|LDR             PC, [R12,#(strchr_ptr - 0x21CC0)]!; __imp_strchr|196-244-188-229
68804|code|ADR             R12, 0x10CCC|0-198-143-226
68808|code|ADD             R12, R12, #0x11000|17-202-140-226
68812|code|LDR             PC, [R12,#(fprintf_ptr - 0x21CCC)]!; __imp_fprintf|188-244-188-229
68816|code|ADR             R12, 0x10CD8|0-198-143-226
68820|code|ADD             R12, R12, #0x11000|17-202-140-226
68824|code|LDR             PC, [R12,#(fcntl_ptr - 0x21CD8)]!; __imp_fcntl|180-244-188-229
68828|code|ADR             R12, 0x10CE4|0-198-143-226
68832|code|ADD             R12, R12, #0x11000|17-202-140-226
68836|code|LDR             PC, [R12,#(setpwent_ptr - 0x21CE4)]!; __imp_setpwent|172-244-188-229
68840|code|ADR             R12, 0x10CF0|0-198-143-226
68844|code|ADD             R12, R12, #0x11000|17-202-140-226
68848|code|LDR             PC, [R12,#(execv_ptr - 0x21CF0)]!; __imp_execv|164-244-188-229
68852|code|ADR             R12, 0x10CFC|0-198-143-226
68856|code|ADD             R12, R12, #0x11000|17-202-140-226
68860|code|LDR             PC, [R12,#(__errno_location_ptr - 0x21CFC)]!; __imp___errno_location|156-244-188-229
68864|code|ADR             R12, 0x10D08|0-198-143-226
68868|code|ADD             R12, R12, #0x11000|17-202-140-226
68872|code|LDR             PC, [R12,#(getgid_ptr - 0x21D08)]!; __imp_getgid|148-244-188-229
68876|code|ADR             R12, 0x10D14|0-198-143-226
68880|code|ADD             R12, R12, #0x11000|17-202-140-226
68884|code|LDR             PC, [R12,#(strncpy_ptr - 0x21D14)]!; __imp_strncpy|140-244-188-229
68888|code|ADR             R12, 0x10D20|0-198-143-226
68892|code|ADD             R12, R12, #0x11000|17-202-140-226
68896|code|LDR             PC, [R12,#(setutent_ptr - 0x21D20)]!; __imp_setutent|132-244-188-229
68900|code|ADR             R12, 0x10D2C|0-198-143-226
68904|code|ADD             R12, R12, #0x11000|17-202-140-226
68908|code|LDR             PC, [R12,#(write_ptr - 0x21D2C)]!; __imp_write|124-244-188-229
68912|code|ADR             R12, 0x10D38|0-198-143-226
68916|code|ADD             R12, R12, #0x11000|17-202-140-226
68920|code|LDR             PC, [R12,#(sigsetmask_ptr - 0x21D38)]!; __imp_sigsetmask|116-244-188-229
68924|code|ADR             R12, 0x10D44|0-198-143-226
68928|code|ADD             R12, R12, #0x11000|17-202-140-226
68932|code|LDR             PC, [R12,#(fclose_ptr - 0x21D44)]!; __imp_fclose|108-244-188-229
68936|code|ADR             R12, 0x10D50|0-198-143-226
68940|code|ADD             R12, R12, #0x11000|17-202-140-226
68944|code|LDR             PC, [R12,#(fork_ptr - 0x21D50)]!; __imp_fork|100-244-188-229
68948|code|ADR             R12, 0x10D5C|0-198-143-226
68952|code|ADD             R12, R12, #0x11000|17-202-140-226
68956|code|LDR             PC, [R12,#(endpwent_ptr - 0x21D5C)]!; __imp_endpwent|92-244-188-229
68960|code|ADR             R12, 0x10D68|0-198-143-226
68964|code|ADD             R12, R12, #0x11000|17-202-140-226
68968|code|LDR             PC, [R12,#(strrchr_ptr - 0x21D68)]!; __imp_strrchr|84-244-188-229
68972|code|ADR             R12, 0x10D74|0-198-143-226
68976|code|ADD             R12, R12, #0x11000|17-202-140-226
68980|code|LDR             PC, [R12,#(setuid_ptr - 0x21D74)]!; __imp_setuid|76-244-188-229
68984|code|ADR             R12, 0x10D80|0-198-143-226
68988|code|ADD             R12, R12, #0x11000|17-202-140-226
68992|code|LDR             PC, [R12,#(sprintf_ptr - 0x21D80)]!; __imp_sprintf|68-244-188-229
68996|code|BX              PC|120-71
68998|data|ALIGN 4|192-70
69000|code|ADR             R12, 0x10D90|0-198-143-226
69004|code|ADD             R12, R12, #0x11000|17-202-140-226
69008|code|LDR             PC, [R12,#(chmod_ptr - 0x21D90)]!; __imp_chmod|56-244-188-229
69012|code|ADR             R12, 0x10D9C|0-198-143-226
69016|code|ADD             R12, R12, #0x11000|17-202-140-226
69020|code|LDR             PC, [R12,#(isatty_ptr - 0x21D9C)]!; __imp_isatty|48-244-188-229
69024|code|ADR             R12, 0x10DA8|0-198-143-226
69028|code|ADD             R12, R12, #0x11000|17-202-140-226
69032|code|LDR             PC, [R12,#(strncmp_ptr - 0x21DA8)]!; __imp_strncmp|40-244-188-229
69036|code|ADR             R12, 0x10DB4|0-198-143-226
69040|code|ADD             R12, R12, #0x11000|17-202-140-226
69044|code|LDR             PC, [R12,#(abort_ptr - 0x21DB4)]!; __imp_abort|32-244-188-229
69048|code|ADR             R12, 0x10DC0|0-198-143-226
69052|code|ADD             R12, R12, #0x11000|17-202-140-226
69056|code|LDR             PC, [R12,#(close_ptr - 0x21DC0)]!; __imp_close|24-244-188-229
69060|code|SVCMI           0xF0E92D|45-233-240-79
69064|code|ADCSLT          R4, R3, R2,LSL#13|130-70-179-176
69068|code|STRMI           R6, [R8],R8,LSL#16|8-104-136-70
69072|code|BLX             0x194CDDA|0-240-100-251
69076|code|STRMI           PC, [R12,#-0x242]!|66-242-44-69
69080|code|STREQ           PC, [R2,#-0x2C0]|192-242-2-5
69084|code|ANDCS           R6, R0, R8,LSR#32|40-96-0-32
69088|code|LDC2            p0, c15, [LR]|0-240-190-252
69092|code|SVCEQ           0x1F1BA|186-241-1-15
69096|code|SBCHI           PC, R4, R0,ASR#6|64-243-196-128
69100|data|DCD 0x4004F8D8, 0x2B2D7823, 0x80BEF040, 0x26FCF242, 0x901F04F|216-248-4-64-35-120-45-43-64-240-190-128-66-242-252-38-79-240-1-9-192-242-2-6-66-242-232-23-48-104-66-242-28-62-8-241-4-12-73-70-192-242-2-7-192-242-2-14-20-248-1-63-0-43-59-208-163-241-101-2-20-42-33-216-223-232-2-240-16-32-32-32-32-32-32-32-32-14-32-11-32-32-14-32-32-32-32-32-14-0-206-248-8-16-231-231-59-113-229-231-0-40-0-240-146-128-59-121-121-43-24-191-110-43-64-240-150-128-206-248-4-16-217-231-66-242-252-38-192-242-2-6-52-104-65-246-232-18-65-246-48-35-65-246-212-32-192-242-1-3-41-104-192-242-1-2-192-242-1-0-0-44-8-191-26-70-255-247-88-238-1-32-255-247-252-238-9-241-1-9-209-69-229-208-92-248-4-79-35-120-45-43-182-208-201-235-10-10-186-241-0-15-215-221-1-33-2-32-255-247-114-238-1-33-3-32-255-247-110-238-1-33-15-32-255-247-106-238-1-32-1-70-255-247-102-238-65-242-45-17-192-242-1-1-20-32-255-247-96-238-2-32-0-240-22-251-4-70-0-40-94-209-255-247-64-238-255-247-58-239-255-247-2-239-255-247-148-238-3-33-34-70-2-32-255-247-226-238-129-7-72-213-2-32-255-247-64-239-0-40-67-208-66-242-28-52-192-242-2-4-163-104-0-43-127-209-8-235-137-5-88-248-41-0-0-240-152-249-80-70-41-70-0-240-68-250-163-104-6-70-203-187-0-240-29-250-0-33-2-32-255-247-44-238-0-33-3-32-255-247-40-238-0-33-15-32-255-247-36-238-0-33-1-32-255-247-32-238-20-32-0-33-255-247-28-238-48-70-255-247-144-238-79-240-1-9-153-231-65-246-236-16-41-104-192-242-1-0-255-247-222-237-1-32-255-247-132-238-65-246-52-32-41-104-192-242-1-0-255-247-212-237-1-32-255-247-122-238-65-246-104-32-41-104-192-242-1-0-255-247-202-237-1-32-255-247-112-238-65-246-164-33-104-70-192-242-1-1-255-247-198-237-4-70-0-40-187-208-104-70-66-242-20-53-255-247-250-237-192-242-2-5-0-240-210-249-0-33-2-32-255-247-224-237-0-33-3-32-255-247-220-237-0-33-15-32-255-247-216-237-0-33-1-32-255-247-212-237-20-32-0-33-255-247-208-237-65-246-168-32-192-242-1-0-255-247-6-238-32-70-255-247-212-237-66-28-3-70-168-208-7-43-247-208-41-104-255-247-228-237-243-231-0-240-224-248-2-70-80-177-65-246-144-33-104-70-192-242-1-1-255-247-158-238-104-70-255-247-194-237-112-231-160-96-110-231-0-191
69708|code|MOV.W           R11, #0|79-240-0-11
69712|code|MOV.W           LR, #0|79-240-0-14
69716|code|POP             {R1}; argc|2-188
69718|code|MOV             R2, SP; ubp_av|106-70
69720|code|PUSH            {R2}; stack_end|4-180
69722|code|PUSH            {R0}; rtld_fini|1-180
69724|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
69728|code|PUSH.W          {R12}; fini|77-248-4-205
69732|code|LDR             R0, =(loc_10DC4+1); main|3-72
69734|code|LDR             R3, =(sub_11918+1); init|4-75
69736|code|BLX             __libc_start_main|255-247-234-237
69740|code|BLX             abort|255-247-158-238
69744|data|DCD nullsub_1+1|89-25-1-0
69748|data|DCD loc_10DC4+1|197-13-1-0
69752|data|DCD sub_11918+1|25-25-1-0
69756|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1108C)|20-48-159-229
69760|code|LDR             R2, =(__gmon_start___ptr_0 - 0x220F4)|20-32-159-229
69764|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
69768|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
69772|code|CMP             R2, #0|0-0-82-227
69776|code|BXEQ            LR|30-255-47-1
69780|code|B               __gmon_start__|236-254-255-234
69784|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1108C|104-16-1-0
69788|data|DCD __gmon_start___ptr_0 - 0x220F4|232-0-0-0
69792|code|LDR             R3, =unk_2230F|7-75
69794|code|MOV             R0, #0x2230C|66-242-12-48-192-242-2-0
69802|code|SUBS            R3, R3, R0|27-26
69804|code|CMP             R3, #6|6-43
69806|code|BLS             locret_110BC|5-217
69808|code|MOV             R3, #0|64-242-0-3-192-242-0-3
69816|code|CBZ             R3, locret_110BC|3-177
69818|code|BX              R3|24-71
69820|code|BX              LR|112-71
69822|data|ALIGN 0x10|0-191
69824|data|DCD unk_2230F|15-35-2-0
69828|code|MOVW            R3, #0x230C|66-242-12-51
69832|code|MOVW            R0, #0x230C|66-242-12-48
69836|code|MOVT.W          R3, #2|192-242-2-3
69840|code|MOVT.W          R0, #2|192-242-2-0
69844|code|SUBS            R1, R3, R0|25-26
69846|code|ASRS            R1, R1, #2|137-16
69848|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
69852|code|ASRS            R1, R1, #1|73-16
69854|code|BEQ             locret_110EC|5-208
69856|code|MOV             R3, #0|64-242-0-3-192-242-0-3
69864|code|CBZ             R3, locret_110EC|3-177
69866|code|BX              R3|24-71
69868|code|BX              LR|112-71
69870|data|ALIGN 0x10|0-191
69872|code|PUSH            {R4,LR}|16-181
69874|code|MOV             R4, #0x22318|66-242-24-52-192-242-2-4
69882|code|LDRB            R3, [R4]|35-120
69884|code|CBNZ            R3, locret_11106|27-185
69886|code|BL              sub_110A0|255-247-207-255
69890|code|MOVS            R3, #1|1-35
69892|code|STRB            R3, [R4]|35-112
69894|code|POP             {R4,PC}|16-189
69896|code|MOVW            R0, #0x2008|66-242-8-0
69900|code|PUSH            {R3,LR}|8-181
69902|code|MOVT.W          R0, #2|192-242-2-0
69906|code|LDR             R3, [R0]|3-104
69908|code|CBNZ            R3, loc_1111C|19-185
69910|code|POP.W           {R3,LR}|189-232-8-64
69914|code|B               sub_110C4|211-231
69916|code|MOV             R3, #0|64-242-0-3-192-242-0-3
69924|code|CMP             R3, #0|0-43
69926|code|BEQ             loc_11116|246-208
69928|code|BLX             R3|152-71
69930|code|B               loc_11116|244-231
69932|code|PUSH            {R3-R7,LR}|248-181
69934|code|MOV.W           R0, #0x80000|79-244-0-32
69938|code|BLX             sigblock|255-247-146-237
69942|code|MOV             R6, #0x2231C|66-242-28-54-192-242-2-6
69950|code|MOVW            R5, #0x2460|66-242-96-69
69954|code|LDR             R3, [R6]|51-104
69956|code|MOVW            R4, #0x21E8|66-242-232-20
69960|code|MOVT.W          R5, #2|192-242-2-5
69964|code|MOVT.W          R4, #2|192-242-2-4
69968|code|MOV             R7, R0|7-70
69970|code|CBNZ            R3, loc_111BA|147-187
69972|code|MOVS            R1, #0|0-33
69974|code|MOVS            R0, #0x14|20-32
69976|code|BLX             signal|255-247-36-237
69980|code|MOVS            R0, #0|0-32
69982|code|BLX             sigsetmask|255-247-232-237
69986|code|MOVW            R6, #0x21E8|66-242-232-22
69990|code|BLX             getpid|255-247-144-237
69994|code|MOVS            R1, #0x14|20-33
69996|code|BLX             kill|255-247-128-237
70000|code|MOV             R0, R7|56-70
70002|code|BLX             sigsetmask|255-247-222-237
70006|code|MOV             R1, #0x1112D|65-242-45-17-192-242-1-1
70014|code|MOVS            R0, #0x14|20-32
70016|code|BLX             signal|255-247-16-237
70020|code|LDR             R1, [R4]|33-104
70022|code|MOVS            R2, #0|0-34
70024|code|LDR             R0, [R5]|40-104
70026|code|BLX             lseek|255-247-18-237
70030|code|MOVW            R1, #0x23B4|66-242-180-49
70034|code|LDR             R0, [R5]|40-104
70036|code|MOVT.W          R1, #2|192-242-2-1
70040|code|MOVS            R2, #0x70 ; 'p'|112-34
70042|code|MOVT.W          R6, #2|192-242-2-6
70046|code|BLX             write|255-247-194-237
70050|code|LDRB            R3, [R4,#(byte_221EC - 0x221E8)]|35-121
70052|code|CMP             R3, #0x73 ; 's'|115-43
70054|code|BEQ             locret_111B8|7-208
70056|code|BL              sub_116CC|0-240-144-250
70060|code|CBNZ            R0, loc_111E4|208-185
70062|code|LDRB            R0, [R6,#(byte_221EC - 0x221E8)]|48-121
70064|code|POP.W           {R3-R7,LR}|189-232-248-64
70068|code|B.W             sub_1171C|0-240-178-186
70072|code|POP             {R3-R7,PC}|248-189
70074|code|MOVS            R2, #0|0-34
70076|code|LDR             R1, [R4]|33-104
70078|code|LDR             R0, [R5]|40-104
70080|code|BLX             lseek|255-247-246-236
70084|code|MOVW            R1, #0x2344|66-242-68-49
70088|code|LDR             R0, [R5]|40-104
70090|code|MOVT.W          R1, #2|192-242-2-1
70094|code|MOVS            R2, #0x70 ; 'p'|112-34
70096|code|BLX             write|255-247-168-237
70100|code|LDRB            R3, [R4,#(byte_221EC - 0x221E8)]|35-121
70102|code|CMP             R3, #0x73 ; 's'|115-43
70104|code|BEQ             loc_111DE|1-208
70106|code|BL              sub_11748|0-240-181-250
70110|code|MOVS            R3, #0|0-35
70112|code|STR             R3, [R6]|51-96
70114|code|B               loc_11154|183-231
70116|code|MOVS            R0, #1|1-32
70118|code|BLX             exit|255-247-86-237
70122|data|ALIGN 4|0-191
70124|code|MOVW            R0, #0x1968|65-246-104-16
70128|code|PUSH            {R4,LR}|16-181
70130|code|MOVT.W          R0, #1|192-242-1-0
70134|code|BLX             getenv|255-247-12-237
70138|code|CBZ             R0, loc_111FE|0-177
70140|code|POP             {R4,PC}|16-189
70142|code|BLX             setpwent|255-247-110-237
70146|code|BLX             getuid|255-247-184-236
70150|code|BLX             getpwuid|255-247-152-236
70154|code|MOV             R4, R0|4-70
70156|code|BLX             endpwent|255-247-162-237
70160|code|CBZ             R4, loc_11216|12-177
70162|code|LDR             R0, [R4,#0x14]|96-105
70164|code|POP             {R4,PC}|16-189
70166|code|MOV             R0, R4|32-70
70168|code|B               locret_111FC|240-231
70170|data|ALIGN 4|0-191
70172|code|PUSH.W          {R4-R8,LR}|45-233-240-65
70176|code|MOV             R7, R1|15-70
70178|code|MOV             R6, R2|22-70
70180|code|MOV             R5, R0|5-70
70182|code|BL              sub_115CC|0-240-209-249
70186|code|MOV             R4, R0|4-70
70188|code|CBZ             R0, loc_11246|88-177
70190|code|LDRB.W          R3, [R0,#0x2C]|144-248-44-48
70194|code|CBZ             R3, loc_11246|67-177
70196|code|MOV             R0, R5|40-70
70198|code|LDR.W           R1, [R4,#0x154]|212-248-84-17
70202|code|MOV             R2, R7|58-70
70204|code|MOV             R3, R6|51-70
70206|code|POP.W           {R4-R8,LR}|189-232-240-65
70210|code|B.W             sub_115EC|0-240-211-185
70214|code|MOVW            R3, #0x242C|66-242-44-67
70218|code|MOVW            R0, #0x1970|65-246-112-16
70222|code|MOVT.W          R3, #2|192-242-2-3
70226|code|MOV             R2, R5|42-70
70228|code|LDR             R1, [R3]|25-104
70230|code|MOVT.W          R0, #1; format|192-242-1-0
70234|code|BLX             printf|255-247-116-236
70238|code|MOVS            R0, #1; status|1-32
70240|code|BLX             exit|255-247-24-237
70244|code|PUSH            {R3-R7,LR}|248-181
70246|code|MOV             R6, R0|6-70
70248|code|BL              sub_114B0|0-240-34-249
70252|code|CMP             R0, #0|0-40
70254|code|BNE.W           loc_11374|64-240-129-128
70258|code|MOVW            R4, #0x21E8|66-242-232-20
70262|code|MOVW            R1, #0x2344|66-242-68-49
70266|code|MOVT.W          R4, #2|192-242-2-4
70270|code|MOVT.W          R1, #2|192-242-2-1
70274|code|MOV             R2, R4|34-70
70276|code|LDR             R0, =0x22435|61-72
70278|code|BL              sub_1121C|255-247-201-255
70282|code|LDR             R3, [R4]|35-104
70284|code|CMP             R3, #0|0-43
70286|code|BLT             loc_11352|96-219
70288|code|BLX             endutent|255-247-106-236
70292|code|MOV             R0, R6|48-70
70294|code|MOVS            R1, #0x2F ; '/'|47-33
70296|code|BLX             strrchr|255-247-98-237
70300|code|CBZ             R0, loc_112A0|0-177
70302|code|ADDS            R6, R0, #1|70-28
70304|code|MOVW            R5, #0x23B4|66-242-180-53
70308|code|MOVW            R1, #0x2344|66-242-68-49
70312|code|MOVT.W          R5, #2|192-242-2-5
70316|code|MOVT.W          R1, #2|192-242-2-1
70320|code|MOVS            R2, #0x70 ; 'p'|112-34
70322|code|MOV             R0, R5|40-70
70324|code|BLX             memcpy|255-247-106-236
70328|code|MOV             R1, R6|49-70
70330|code|ADD.W           R0, R5, #0x21 ; '!'|5-241-33-0
70334|code|MOVS            R2, #0x1F|31-34
70336|code|MOVS            R3, #0x21 ; '!'|33-35
70338|code|STRB.W          R3, [R5,#(byte_223D4 - 0x223B4)]|133-248-32-48
70342|code|BLX             strncpy|255-247-34-237
70346|code|LDRB            R3, [R4,#(byte_221EC - 0x221E8)]|35-121
70348|code|CMP             R3, #0x73 ; 's'|115-43
70350|code|ITT EQ|4-191
70352|code|MOVEQW          R6, #0x231C|66-242-28-54
70356|code|MOVTEQ.W        R6, #2|192-242-2-6
70360|code|BEQ             loc_112F4|12-208
70362|code|MOVW            R3, #0x22FC|66-242-252-35
70366|code|MOVW            R6, #0x231C|66-242-28-54
70370|code|MOVT.W          R3, #2|192-242-2-3
70374|code|LDR             R3, [R3]|27-104
70376|code|CBNZ            R3, loc_11342|91-187
70378|code|MOVS            R3, #0x6E ; 'n'|110-35
70380|code|MOVT.W          R6, #2|192-242-2-6
70384|code|STRB.W          R3, [R5,#(byte_22421 - 0x223B4)]|133-248-109-48
70388|code|LDR             R3, [R6,#(dword_22324 - 0x2231C)]|179-104
70390|code|CBNZ            R3, loc_1133A|3-187
70392|code|MOVW            R5, #0x2460|66-242-96-69
70396|code|LDR             R1, [R4]|33-104
70398|code|MOVT.W          R5, #2|192-242-2-5
70402|code|MOVS            R2, #0|0-34
70404|code|LDR             R0, [R5]|40-104
70406|code|MOVW            R7, #0x21E8|66-242-232-23
70410|code|BLX             lseek|255-247-82-236
70414|code|MOVW            R1, #0x23B4|66-242-180-49
70418|code|LDR             R0, [R5]|40-104
70420|code|MOVT.W          R1, #2|192-242-2-1
70424|code|MOVS            R2, #0x70 ; 'p'|112-34
70426|code|MOVT.W          R7, #2|192-242-2-7
70430|code|BLX             write|255-247-2-237
70434|code|LDRB            R3, [R4,#(byte_221EC - 0x221E8)]|35-121
70436|code|CMP             R3, #0x73 ; 's'|115-43
70438|code|BEQ             loc_11334|5-208
70440|code|BL              sub_116CC|0-240-208-249
70444|code|CBNZ            R0, loc_11374|16-187
70446|code|LDRB            R0, [R7,#(byte_221EC - 0x221E8)]|56-121
70448|code|BL              sub_1171C|0-240-244-249
70452|code|MOVS            R3, #1|1-35
70454|code|STR             R3, [R6]|51-96
70456|code|POP             {R3-R7,PC}|248-189
70458|code|MOVS            R3, #0x61 ; 'a'|97-35
70460|code|STRB.W          R3, [R5,#(byte_22414 - 0x223B4)]|133-248-96-48
70464|code|B               loc_112F8|218-231
70466|code|MOVT.W          R6, #2|192-242-2-6
70470|code|LDR             R3, [R6,#(dword_22320 - 0x2231C)]|115-104
70472|code|CMP             R3, #0|0-43
70474|code|ITE EQ|12-191
70476|code|MOVEQ           R3, #0x6E ; 'n'|110-35
70478|code|MOVNE           R3, #0x79 ; 'y'|121-35
70480|code|B               loc_112F0|206-231
70482|code|MOVW            R2, #0x242C|66-242-44-66
70486|code|MOVW            R3, #0x21F0|66-242-240-19
70490|code|MOVT.W          R2, #2|192-242-2-2
70494|code|MOVT.W          R3, #2|192-242-2-3
70498|code|MOVW            R0, #0x1998|65-246-152-16
70502|code|LDR             R1, [R2]|17-104
70504|code|LDR             R3, [R3]; "/var/lib/orville-write/wrttmp"|27-104
70506|code|MOVT.W          R0, #1|192-242-1-0
70510|code|LDR             R2, =0x22435|3-74
70512|code|BLX             printf|255-247-232-235
70516|code|MOVS            R0, #1|1-32
70518|code|BLX             exit|255-247-142-236
70522|data|ALIGN 4|0-191
70524|data|DCD 0x22435|53-36-2-0
70528|code|PUSH            {R3-R5,LR}|56-181
70530|code|MOVW            R4, #0x2460|66-242-96-68
70534|code|MOVW            R5, #0x21E8|66-242-232-21
70538|code|MOVT.W          R4, #2|192-242-2-4
70542|code|MOVT.W          R5, #2|192-242-2-5
70546|code|MOVS            R2, #0|0-34
70548|code|LDR             R1, [R5]|41-104
70550|code|LDR             R0, [R4]|32-104
70552|code|BLX             lseek|255-247-10-236
70556|code|MOV             R1, #0x22344|66-242-68-49-192-242-2-1
70564|code|MOVS            R2, #0x70 ; 'p'|112-34
70566|code|LDR             R0, [R4]|32-104
70568|code|BLX             write|255-247-188-236
70572|code|LDR             R0, [R4]|32-104
70574|code|BLX             close|255-247-4-237
70578|code|LDRB            R3, [R5,#(byte_221EC - 0x221E8)]|43-121
70580|code|CMP             R3, #0x73 ; 's'|115-43
70582|code|BEQ             locret_113C0|3-208
70584|code|POP.W           {R3-R5,LR}|189-232-56-64
70588|code|B.W             sub_11748|0-240-196-185
70592|code|POP             {R3-R5,PC}|56-189
70594|data|ALIGN 4|0-191
70596|code|PUSH            {R4-R7,LR}|240-181
70598|code|SUB             SP, SP, #0xC|131-176
70600|code|MOV             R6, R0|6-70
70602|code|MOV             R5, R1|13-70
70604|code|BLX             fork|255-247-188-236
70608|code|MOV             R4, R0|4-70
70610|code|CBZ             R0, loc_113F6|128-177
70612|code|ADD             R0, SP, #4|1-168
70614|code|BLX             wait|255-247-254-235
70618|code|CMP             R4, R0|132-66
70620|code|IT NE|24-191
70622|code|CMPNE.W         R0, #0xFFFFFFFF|176-241-255-63
70626|code|BNE             loc_113D4|247-209
70628|code|LDR             R0, [SP,#4]|1-152
70630|code|LSLS            R3, R0, #0x19|67-6
70632|code|ITE EQ|12-191
70634|code|UBFXEQ.W        R0, R0, #8, #8|192-243-7-32
70638|code|MOVNE           R0, #0xFFFFFFFE|111-240-1-0
70642|code|ADD             SP, SP, #0xC|3-176
70644|code|POP             {R4-R7,PC}|240-189
70646|code|MOV             R1, R4|33-70
70648|code|MOVS            R0, #2|2-32
70650|code|BLX             signal|255-247-212-235
70654|code|MOV             R1, R4|33-70
70656|code|MOVS            R0, #3|3-32
70658|code|BLX             signal|255-247-208-235
70662|code|MOV             R1, R4|33-70
70664|code|MOVS            R0, #0xF|15-32
70666|code|BLX             signal|255-247-204-235
70670|code|MOV             R1, R4|33-70
70672|code|MOVS            R0, #1|1-32
70674|code|BLX             signal|255-247-200-235
70678|code|MOV             R1, R4|33-70
70680|code|MOVS            R0, #0x14|20-32
70682|code|BLX             signal|255-247-196-235
70686|code|BLX             endutent|255-247-164-235
70690|code|MOV             R1, R5|41-70
70692|code|LDR             R0, [R5]|40-104
70694|code|BLX             execvp|255-247-184-235
70698|code|BLX             __errno_location|255-247-100-236
70702|code|LDR             R4, [R0]|4-104
70704|code|CMP             R4, #8|8-44
70706|code|BEQ             loc_11448|9-208
70708|code|MOVW            R0, #0x19D0|65-246-208-16
70712|code|LDR             R1, [R5]|41-104
70714|code|MOVT.W          R0, #1|192-242-1-0
70718|code|BLX             printf|255-247-130-235
70722|code|MOVS            R0, #1|1-32
70724|code|BLX             exit|255-247-38-236
70728|code|ADDS            R3, R6, #3|243-28
70730|code|LSLS            R7, R3, #2|159-0
70732|code|MOV             R0, R7|56-70
70734|code|BLX             malloc|255-247-242-235
70738|code|CMP             R6, #0|0-46
70740|code|MOVW            R1, #0x19C0|65-246-192-17
70744|code|MOVW            R3, #0x19C4|65-246-196-19
70748|code|MOVT.W          R1, #1|192-242-1-1
70752|code|MOVT.W          R3, #1|192-242-1-3
70756|code|MOV             R2, R0|2-70
70758|code|STM.W           R0, {R1,R3}|128-232-10-0
70762|code|BLE             loc_11486|12-221
70764|code|SUB.W           R3, R7, #0xC|167-241-12-3
70768|code|ADDS            R0, #4|4-48
70770|code|ADD             R3, R5|43-68
70772|code|MOV             R1, R5|41-70
70774|code|LDR.W           R4, [R1],#4|81-248-4-75
70778|code|CMP             R1, R3|153-66
70780|code|STR.W           R4, [R0,#4]!|64-248-4-79
70784|code|BNE             loc_11476|249-209
70786|code|SUBS            R3, R7, #4|59-31
70788|code|B               loc_11488|0-224
70790|code|MOV             R3, R4|35-70
70792|code|MOVW            R0, #0x19C8|65-246-200-16
70796|code|MOVS            R4, #0|0-36
70798|code|MOV             R1, R2|17-70
70800|code|STR             R4, [R2,R3]|212-80
70802|code|MOVT.W          R0, #1|192-242-1-0
70806|code|BLX             execv|255-247-40-236
70810|code|B               loc_11434|203-231
70812|code|PUSH            {R4,LR}|16-181
70814|code|MOVS            R1, #0x2F ; '/'|47-33
70816|code|MOV             R4, R0|4-70
70818|code|BLX             strrchr|255-247-94-236
70822|code|CBZ             R0, loc_114AA|0-177
70824|code|ADDS            R4, R0, #1|68-28
70826|code|MOV             R0, R4|32-70
70828|code|POP             {R4,PC}|16-189
70830|data|ALIGN 0x10|0-191
70832|code|PUSH            {R4,LR}|16-181
70834|code|MOVS            R0, #2; fd|2-32
70836|code|MOVS            R1, #3; cmd|3-33
70838|code|MOVS            R2, #0|0-34
70840|code|BLX             fcntl|255-247-10-236
70844|code|LSLS            R3, R0, #0x1E|131-7
70846|code|BPL             loc_114C8|3-213
70848|code|MOVS            R0, #2; fd|2-32
70850|code|BLX             isatty|255-247-104-236
70854|code|CBNZ            R0, loc_114E2|96-185
70856|code|MOVW            R3, #0x242C|66-242-44-67
70860|code|MOVW            R0, #0x1AFC|65-246-252-32
70864|code|MOVT.W          R3, #2|192-242-2-3
70868|code|MOVT.W          R0, #1; format|192-242-1-0
70872|code|LDR             R1, [R3]|25-104
70874|code|BLX             printf|255-247-52-235
70878|code|MOVS            R0, #1|1-32
70880|code|POP             {R4,PC}|16-189
70882|code|MOVS            R0, #2; fd|2-32
70884|code|BLX             ttyname|255-247-220-235
70888|code|MOV             R4, R0|4-70
70890|code|CBZ             R0, loc_114F4|24-177
70892|code|BLX             strlen|255-247-222-235
70896|code|CMP             R0, #4|4-40
70898|code|BHI             loc_11504|7-216
70900|code|MOV             R0, #aSNotOnAValidTt; format|65-246-32-48-192-242-1-0
70908|code|BLX             printf|255-247-34-235
70912|code|MOVS            R0, #2|2-32
70914|code|POP             {R4,PC}|16-189
70916|code|MOVW            R0, #0x2430|66-242-48-64
70920|code|MOV             R1, R4; src|33-70
70922|code|MOVS            R2, #0x2A ; '*'; n|42-34
70924|code|MOVT.W          R0, #2; dest|192-242-2-0
70928|code|BLX             strncpy|255-247-252-235
70932|code|MOVS            R0, #0|0-32
70934|code|POP             {R4,PC}|16-189
70936|code|PUSH            {R3-R7,LR}|248-181
70938|code|MOVW            R6, #0x21F0|66-242-240-22
70942|code|MOV             R7, R0|7-70
70944|code|MOVT.W          R6, #2|192-242-2-6
70948|code|LDR             R0, [R6]; "/var/lib/orville-write/wrttmp"|48-104
70950|code|MOV             R1, R7|57-70
70952|code|BLX             open|255-247-156-235
70956|code|MOV             R4, #0x22460|66-242-96-68-192-242-2-4
70964|code|CMP             R0, #0|0-40
70966|code|STR             R0, [R4]|32-96
70968|code|BLT             loc_115B0|58-219
70970|code|MOVW            R5, #0x2424|66-242-36-69
70974|code|MOVS            R1, #2|2-33
70976|code|MOVS            R2, #1|1-34
70978|code|MOVT.W          R5, #2|192-242-2-5
70982|code|BLX             fcntl|255-247-196-235
70986|code|MOV             R1, R5|41-70
70988|code|LDR             R0, [R4]|32-104
70990|code|MOVS            R2, #8|8-34
70992|code|BLX             read|255-247-4-235
70996|code|CMP             R0, #8|8-40
70998|code|BEQ             loc_11588|23-208
71000|code|MOVS            R6, #8|8-38
71002|code|MOVS            R3, #0x70 ; 'p'|112-35
71004|code|STR             R6, [R5]|46-96
71006|code|STR             R3, [R5,#(dword_22428 - 0x22424)]|107-96
71008|code|CBNZ            R7, loc_11566|15-185
71010|code|MOVS            R0, #0|0-32
71012|code|POP             {R3-R7,PC}|248-189
71014|code|MOVS            R1, #0|0-33
71016|code|LDR             R0, [R4]|32-104
71018|code|MOV             R2, R1|10-70
71020|code|BLX             lseek|255-247-32-235
71024|code|MOV             R1, R5|41-70
71026|code|MOV             R2, R6|50-70
71028|code|LDR             R0, [R4]|32-104
71030|code|BLX             write|255-247-214-235
71034|code|LDR             R0, [R4]|32-104
71036|code|MOVS            R1, #0|0-33
71038|code|MOVS            R2, #1|1-34
71040|code|BLX             lseek|255-247-22-235
71044|code|MOVS            R0, #0|0-32
71046|code|POP             {R3-R7,PC}|248-189
71048|code|LDR             R3, [R5]|43-104
71050|code|CMP             R3, #7|7-43
71052|code|BLS             loc_11594|2-217
71054|code|LDR             R3, [R5,#(dword_22428 - 0x22424)]|107-104
71056|code|CMP             R3, #0x6F ; 'o'|111-43
71058|code|BHI             loc_11562|230-216
71060|code|MOVW            R3, #0x242C|66-242-44-67
71064|code|MOVW            R0, #0x1B60|65-246-96-48
71068|code|MOVT.W          R3, #2|192-242-2-3
71072|code|LDR             R2, [R6]; "/var/lib/orville-write/wrttmp"|50-104
71074|code|LDR             R1, [R3]|25-104
71076|code|MOVT.W          R0, #1|192-242-1-0
71080|code|BLX             printf|255-247-204-234
71084|code|MOVS            R0, #1|1-32
71086|code|POP             {R3-R7,PC}|248-189
71088|code|MOVW            R3, #0x242C|66-242-44-67
71092|code|MOVW            R0, #0x1B38|65-246-56-48
71096|code|MOVT.W          R3, #2|192-242-2-3
71100|code|LDR             R2, [R6]; "/var/lib/orville-write/wrttmp"|50-104
71102|code|LDR             R1, [R3]|25-104
71104|code|MOVT.W          R0, #1|192-242-1-0
71108|code|BLX             printf|255-247-190-234
71112|code|MOVS            R0, #1|1-32
71114|code|POP             {R3-R7,PC}|248-189
71116|code|PUSH            {LR}|0-181
71118|code|SUB             SP, SP, #0x184|225-176
71120|code|MOV             R1, R0; src|1-70
71122|code|MOVS            R2, #0x20 ; ' '; n|32-34
71124|code|ADD             R0, SP, #0x188+dest; dest|2-168
71126|code|BLX             strncpy|255-247-154-235
71130|code|BLX             setutent|255-247-158-235
71134|code|MOV             R0, SP; line|104-70
71136|code|BLX             getutline|255-247-76-235
71140|code|ADD             SP, SP, #0x184|97-176
71142|code|POP.W           {PC}|93-248-4-251
71146|data|ALIGN 4|0-191
71148|code|PUSH.W          {R4-R10,LR}|45-233-240-71
71152|code|MOVW            R6, #0x2460|66-242-96-70
71156|code|MOVW            R5, #0x2424|66-242-36-69
71160|code|MOV             R8, R0|128-70
71162|code|MOV             R10, R1|138-70
71164|code|MOV             R4, R2|20-70
71166|code|MOV             R9, R3|153-70
71168|code|MOVT.W          R6, #2|192-242-2-6
71172|code|MOVT.W          R5, #2|192-242-2-5
71176|code|MOV.W           LR, #0|79-240-0-14
71180|code|B               loc_11616|3-224
71182|code|BLX             strncmp|255-247-200-235
71186|code|MOV             LR, R7|190-70
71188|code|CBZ             R0, loc_11684|176-179
71190|code|LDR             R3, [R5]|43-104
71192|code|MOVS            R2, #0; whence|0-34
71194|code|LDR             R1, [R5,#(dword_22428 - 0x22424)]|105-104
71196|code|ADD.W           R7, LR, #1|14-241-1-7
71200|code|LDR             R0, [R6]; fd|48-104
71202|code|MLA.W           R1, R1, LR, R3; offset|1-251-14-49
71206|code|STR.W           R1, [R9]|201-248-0-16
71210|code|BLX             lseek|255-247-194-234
71214|code|MOV             R1, R4; buf|33-70
71216|code|MOVS            R2, #0x70 ; 'p'; nbytes|112-34
71218|code|LDR             R0, [R6]; fd|48-104
71220|code|BLX             read|255-247-146-234
71224|code|MOV             R1, R4; s2|33-70
71226|code|MOVS            R2, #0x20 ; ' '; n|32-34
71228|code|CMP             R0, #0x70 ; 'p'|112-40
71230|code|MOV             R0, R8; s1|64-70
71232|code|BEQ             loc_1160E|229-208
71234|code|MOV             R1, R8; src|65-70
71236|code|MOVS            R2, #0x20 ; ' '; n|32-34
71238|code|MOV             R0, R4; dest|32-70
71240|code|BLX             strncpy|255-247-96-235
71244|code|MOVS            R2, #0|0-34
71246|code|MOVS            R3, #0x6E ; 'n'|110-35
71248|code|MOV.W           R1, #0xFFFFFFFF|79-240-255-49
71252|code|STRB.W          R2, [R4,#0x20]|132-248-32-32
71256|code|MOVS            R0, #3|3-32
71258|code|STRB.W          R2, [R4,#0x40]|132-248-64-32
71262|code|MOVS            R2, #0x79 ; 'y'|121-34
71264|code|STR             R1, [R4,#0x64]|97-102
71266|code|MOVS            R1, #0x61 ; 'a'|97-33
71268|code|STR.W           R10, [R4,#0x68]|196-248-104-160
71272|code|STRB.W          R3, [R4,#0x60]|132-248-96-48
71276|code|STRB.W          R3, [R4,#0x63]|132-248-99-48
71280|code|STRB.W          R3, [R4,#0x6D]|132-248-109-48
71284|code|STRB.W          R0, [R4,#0x61]|132-248-97-0
71288|code|STRB.W          R1, [R4,#0x62]|132-248-98-16
71292|code|STRB.W          R2, [R4,#0x6C]|132-248-108-32
71296|code|POP.W           {R4-R10,PC}|189-232-240-135
71300|code|LDR             R3, [R4,#0x68]|163-110
71302|code|CMP             R3, R10|83-69
71304|code|BNE             loc_11642|219-209
71306|code|B               locret_11680|249-231
71308|code|PUSH            {R3-R5,LR}|56-181
71310|code|MOV             R4, R0|4-70
71312|code|MOV             R5, R2|21-70
71314|code|MOVS            R2, #0x20 ; ' '|32-34
71316|code|BLX             strncpy|255-247-58-235
71320|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
71324|code|MOVS            R3, #3|3-35
71326|code|STR             R2, [R4,#0x64]|98-102
71328|code|STRB.W          R3, [R4,#0x61]|132-248-97-48
71332|code|MOVS            R2, #0x61 ; 'a'|97-34
71334|code|MOVS            R3, #0x79 ; 'y'|121-35
71336|code|STRB.W          R2, [R4,#0x62]|132-248-98-32
71340|code|STRB.W          R3, [R4,#0x6C]|132-248-108-48
71344|code|MOVS            R2, #0|0-34
71346|code|MOVS            R3, #0x6E ; 'n'|110-35
71348|code|STR             R5, [R4,#0x68]|165-102
71350|code|STRB.W          R2, [R4,#0x20]|132-248-32-32
71354|code|STRB.W          R2, [R4,#0x40]|132-248-64-32
71358|code|STRB.W          R3, [R4,#0x60]|132-248-96-48
71362|code|STRB.W          R3, [R4,#0x63]|132-248-99-48
71366|code|STRB.W          R3, [R4,#0x6D]|132-248-109-48
71370|code|POP             {R3-R5,PC}|56-189
71372|code|PUSH            {LR}|0-181
71374|code|SUB             SP, SP, #0x5C|151-176
71376|code|MOVW            R1, #0x2430|66-242-48-65
71380|code|MOVS            R0, #3; ver|3-32
71382|code|MOVT.W          R1, #2; filename|192-242-2-1
71386|code|MOV             R2, SP; stat_buf|106-70
71388|code|BLX             __xstat|255-247-128-234
71392|code|CBNZ            R0, loc_116F4|64-185
71394|code|LDR             R2, [SP,#0x60+var_50]|4-154
71396|code|MOV             R3, #0x2245C|66-242-92-67-192-242-2-3
71404|code|STR             R2, [R3]|26-96
71406|code|ADD             SP, SP, #0x5C ; '\'|23-176
71408|code|POP.W           {PC}|93-248-4-251
71412|code|MOVW            R3, #0x242C|66-242-44-67
71416|code|MOVW            R0, #0x1B94|65-246-148-48
71420|code|MOVT.W          R3, #2|192-242-2-3
71424|code|MOVW            R2, #0x2430|66-242-48-66
71428|code|LDR             R1, [R3]|25-104
71430|code|MOVT.W          R2, #2|192-242-2-2
71434|code|MOVT.W          R0, #1; format|192-242-1-0
71438|code|BLX             printf|255-247-26-234
71442|code|MOVS            R0, #1|1-32
71444|code|ADD             SP, SP, #0x5C ; '\'|23-176
71446|code|POP.W           {PC}|93-248-4-251
71450|data|ALIGN 4|0-191
71452|code|CMP             R0, #0x6E ; 'n'|110-40
71454|code|BEQ             loc_11736|10-208
71456|code|CMP             R0, #0x79 ; 'y'|121-40
71458|code|BEQ             loc_11726|0-208
71460|code|BX              LR|112-71
71462|code|MOVW            R0, #0x2430|66-242-48-64
71466|code|MOV.W           R1, #0x190; mode|79-244-200-113
71470|code|MOVT.W          R0, #2; file|192-242-2-0
71474|code|B.W             j_chmod|255-247-39-187
71478|code|MOVW            R0, #0x2430|66-242-48-64
71482|code|MOV.W           R1, #0x180; mode|79-244-192-113
71486|code|MOVT.W          R0, #2; file|192-242-2-0
71490|code|B.W             j_chmod|255-247-31-187
71494|data|ALIGN 4|0-191
71496|code|MOVW            R3, #0x245C|66-242-92-67
71500|code|MOVW            R0, #0x2430|66-242-48-64
71504|code|MOVT.W          R3, #2|192-242-2-3
71508|code|MOVT.W          R0, #2|192-242-2-0
71512|code|LDR             R1, [R3]|25-104
71514|code|B.W             j_chmod|255-247-19-187
71518|data|ALIGN 0x10|0-191
71520|code|PUSH.W          {R4-R11,LR}|45-233-240-79
71524|code|SUBW            SP, SP, #0x414|173-242-20-77
71528|code|MOVW            R1, #0x1AA4|65-246-164-33
71532|code|STR             R0, [SP,#4]|1-144
71534|code|MOVW            R0, #0x1BB0|65-246-176-48
71538|code|MOVT.W          R1, #1|192-242-1-1
71542|code|MOVT.W          R0, #1|192-242-1-0
71546|code|BLX             fopen|255-247-234-233
71550|code|MOV             R8, R0|128-70
71552|code|CMP             R0, #0|0-40
71554|code|BEQ.W           loc_118F4|0-240-183-128
71558|code|MOVW            R7, #0x21F0|66-242-240-23
71562|code|ADD             R6, SP, #0xC|3-174
71564|code|MOVT.W          R7, #2|192-242-2-7
71568|code|MOV             R0, R6; jumptable 00011820 default case|48-70
71570|code|MOV.W           R1, #0x400|79-244-128-97
71574|code|MOV             R2, R8|66-70
71576|code|BLX             fgets|255-247-242-233
71580|code|CMP             R0, #0|0-40
71582|code|BEQ             loc_11848|83-208
71584|code|LDRB            R5, [R6]|53-120
71586|code|CMP             R5, #0x23 ; '#'|35-45
71588|code|IT NE|24-191
71590|code|CMPNE           R5, #0xA|10-45
71592|code|ITE EQ|12-191
71594|code|MOVEQ           R5, #1|1-37
71596|code|MOVNE           R5, #0|0-37
71598|code|BEQ             def_11820; jumptable 00011820 default case|239-208
71600|code|LDR.W           R10, [R7,#(off_221F4 - 0x221F0)]; "answertel"|215-248-4-160
71604|code|CMP.W           R10, #0|186-241-0-15
71608|code|BEQ             def_11820; jumptable 00011820 default case|234-208
71610|code|LDR             R4, =off_221F4; "answertel"|86-76
71612|code|LDR.W           R11, [R4,#4]|212-248-4-176
71616|code|MOV             R0, R6|48-70
71618|code|MOV             R1, R10|81-70
71620|code|MOV             R2, R11|90-70
71622|code|BLX             strncmp|255-247-236-234
71626|code|CMP             R0, #0|0-40
71628|code|BNE             loc_118BC|118-209
71630|code|MOVW            R0, #0x1BF0|65-246-240-48
71634|code|LDRB.W          R1, [R6,R11]|22-248-11-16
71638|code|MOVT.W          R0, #1|192-242-1-0
71642|code|BLX             strchr|255-247-110-234
71646|code|CMP             R0, #0|0-40
71648|code|BEQ             loc_118BC|108-208
71650|code|ADD.W           R11, R11, #1|11-241-1-11
71654|code|ADD.W           R9, R6, R11|6-235-11-9
71658|code|LDRB.W          R4, [R6,R11]|22-248-11-64
71662|code|CBNZ            R4, loc_117FA|36-185
71664|code|B               loc_118CC|108-224
71666|code|LDRB.W          R4, [R9,#1]!|25-248-1-79
71670|code|CMP             R4, #0|0-44
71672|code|BEQ             loc_118CC|104-208
71674|code|MOVW            R0, #0x1C28|65-246-40-64
71678|code|MOV             R1, R4|33-70
71680|code|MOVT.W          R0, #1|192-242-1-0
71684|code|BLX             strchr|255-247-88-234
71688|code|CMP             R0, #0|0-40
71690|code|BNE             loc_117F2|242-209
71692|code|CMP             R4, #0xA|10-44
71694|code|MOV             R11, R9|203-70
71696|code|BEQ             loc_118CC|92-208
71698|code|CMP             R4, #0xD|13-44
71700|code|BEQ             loc_118CC|90-208
71702|code|LSLS            R5, R5, #4|45-1
71704|code|ADDS            R2, R7, R5|122-25
71706|code|LDR             R2, [R2,#0xC]|210-104
71708|code|CMP             R2, #3; switch 4 cases|3-42
71710|code|BHI             def_11820; jumptable 00011820 default case|183-216
71712|code|TBB.W           [PC,R2]; switch jump|223-232-2-240
71716|data|DCB 0x45; jump table for switch statement|69
71717|data|DCB 0x24|36
71718|data|DCB 0x19|25
71719|data|DCB 2|2
71720|code|ADD             R5, R7; jumptable 00011820 case 3|61-68
71722|code|MOVS            R1, #0|0-33
71724|code|MOVS            R2, #0xA|10-34
71726|code|MOV             R0, R9|72-70
71728|code|LDR             R4, [R5,#0x10]|44-105
71730|code|BLX             strtol|255-247-124-233
71734|code|MOV.W           R1, #0x400|79-244-128-97
71738|code|MOV             R2, R8|66-70
71740|code|STR             R0, [R4]|32-96
71742|code|MOV             R0, R6|48-70
71744|code|BLX             fgets|255-247-158-233
71748|code|CMP             R0, #0|0-40
71750|code|BNE             loc_117A0|171-209
71752|code|MOV             R0, R8|64-70
71754|code|BLX             fclose|255-247-120-234
71758|code|ADDW            SP, SP, #0x414|13-242-20-77
71762|code|POP.W           {R4-R11,PC}|189-232-240-143
71766|code|ADD             R5, R7; jumptable 00011820 case 2|61-68
71768|code|AND.W           R4, R4, #0xDF|4-240-223-4
71772|code|SUB.W           R4, R4, #0x59 ; 'Y'|164-241-89-4
71776|code|LDR             R3, [R5,#0x10]|43-105
71778|code|CLZ.W           R4, R4|180-250-132-244
71782|code|LSRS            R4, R4, #5|100-9
71784|code|STR             R4, [R3]|28-96
71786|code|B               def_11820; jumptable 00011820 default case|145-231
71788|code|LDRB.W          R1, [R9]; jumptable 00011820 case 1|153-248-0-16
71792|code|MOVS            R0, #1|1-32
71794|code|CBNZ            R1, loc_1187C|25-185
71796|code|B               loc_11892|13-224
71798|code|LDRB.W          R1, [R9,#1]!|25-248-1-31
71802|code|CBZ             R1, loc_1188C|57-177
71804|code|MOV             R0, #0x11C28|65-246-40-64-192-242-1-0
71812|code|BLX             strchr|255-247-24-234
71816|code|CMP             R0, #0|0-40
71818|code|BEQ             loc_11876|244-208
71820|code|RSB.W           R0, R11, R9|203-235-9-0
71824|code|ADDS            R0, #1|1-48
71826|code|ADD             R5, R7|61-68
71828|code|MOVS            R2, #0|0-34
71830|code|STRB.W          R2, [R9]|137-248-0-32
71834|code|LDR             R4, [R5,#0x10]|44-105
71836|code|BLX             malloc|255-247-202-233
71840|code|MOV             R1, R11|89-70
71842|code|STR             R0, [R4]|32-96
71844|code|LDR             R3, [R5,#0x10]|43-105
71846|code|LDR             R0, [R3]|24-104
71848|code|BLX             strcpy|255-247-172-233
71852|code|B               def_11820; jumptable 00011820 default case|112-231
71854|code|LDR             R3, [SP,#4]; jumptable 00011820 case 0|1-155
71856|code|CMP             R3, #0|0-43
71858|code|BEQ.W           def_11820; jumptable 00011820 default case|63-244-109-175
71862|code|MOV             R0, R9|72-70
71864|code|BLX             R3|152-71
71866|code|B               def_11820; jumptable 00011820 default case|105-231
71868|code|LDR.W           R10, [R4,#0x10]!; "disconnect"|84-248-16-175
71872|code|ADDS            R5, #1|1-53
71874|code|CMP.W           R10, #0|186-241-0-15
71878|code|BNE.W           loc_117BC|127-244-121-175
71882|code|B               def_11820; jumptable 00011820 default case|97-231
71884|code|MOVW            R0, #0x2310|66-242-16-48
71888|code|MOVW            R2, #0x242C|66-242-44-66
71892|code|MOVT.W          R0, #2|192-242-2-0
71896|code|MOVT.W          R2, #2|192-242-2-2
71900|code|MOVW            R1, #0x1BF8|65-246-248-49
71904|code|MOV             R3, R10|83-70
71906|code|LDR             R0, [R0]|0-104
71908|code|MOVT.W          R1, #1|192-242-1-1
71912|code|LDR             R2, [R2]|18-104
71914|code|BLX             fprintf|255-247-236-233
71918|code|MOVS            R0, #1|1-32
71920|code|BLX             exit|255-247-208-233
71924|code|MOVW            R3, #0x2310|66-242-16-51
71928|code|MOVW            R0, #0x1BC4|65-246-196-48
71932|code|MOVT.W          R3, #2|192-242-2-3
71936|code|MOVT.W          R0, #1|192-242-1-0
71940|code|LDR             R3, [R3]|27-104
71942|code|MOVS            R1, #1|1-33
71944|code|MOVS            R2, #0x29 ; ')'|41-34
71946|code|BLX             fwrite|255-247-118-233
71950|code|MOVS            R0, #1|1-32
71952|code|BLX             exit|255-247-192-233
71956|data|DCD off_221F4; "answertel"|244-33-2-0
71960|code|PUSH.W          {R3-R9,LR}|45-233-248-67
71964|code|MOV             R7, R0|7-70
71966|code|LDR             R6, =(off_22004 - 0x1192A)|12-78
71968|code|MOV             R8, R1|136-70
71970|code|LDR             R5, =(off_22000 - 0x11930)|12-77
71972|code|MOV             R9, R2|145-70
71974|code|ADD             R6, PC; off_22004|126-68
71976|code|BLX             .init_proc|255-247-240-232
71980|code|ADD             R5, PC; off_22000|125-68
71982|code|SUBS            R6, R6, R5|118-27
71984|code|ASRS            R6, R6, #2|182-16
71986|code|BEQ             locret_1194A|10-208
71988|code|SUBS            R5, #4|4-61
71990|code|MOVS            R4, #0|0-36
71992|code|ADDS            R4, #1|1-52
71994|code|LDR.W           R3, [R5,#4]!|85-248-4-63
71998|code|MOV             R0, R7|56-70
72000|code|MOV             R1, R8|65-70
72002|code|MOV             R2, R9|74-70
72004|code|BLX             R3|152-71
72006|code|CMP             R4, R6|180-66
72008|code|BNE             loc_11938|246-209
72010|code|POP.W           {R3-R9,PC}|189-232-248-131
72014|data|ALIGN 0x10|0-191
72016|data|DCD off_22004 - 0x1192A|218-6-1-0
72020|data|DCD off_22000 - 0x11930|208-6-1-0
72024|code|BX              LR|112-71
72026|data|ALIGN 4|0-191
72028|code|PUSH            {R3,LR}|8-64-45-233
72032|code|POP             {R3,PC}|8-128-189-232
72980|data|ALIGN 8|0-0-0-0
139264|data|DCD sub_11108+1|9-17-1-0
139268|data|DCD sub_110F0+1|241-16-1-0
139272|data|DCD 0|0-0-0-0
139276|data|Elf32_Dyn <1, <1>>; DT_NEEDED libc.so.6|1-0-0-0-1-0-0-0
139284|data|Elf32_Dyn <0xC, <0x10B0C>>; DT_INIT|12-0-0-0-12-11-1-0
139292|data|Elf32_Dyn <0xD, <0x1195C>>; DT_FINI|13-0-0-0-92-25-1-0
139300|data|Elf32_Dyn <0x19, <0x22000>>; DT_INIT_ARRAY|25-0-0-0-0-32-2-0
139308|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
139316|data|Elf32_Dyn <0x1A, <0x22004>>; DT_FINI_ARRAY|26-0-0-0-4-32-2-0
139324|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
139332|data|Elf32_Dyn <0x6FFFFEF5, <0x10194>>; DT_GNU_HASH|245-254-255-111-148-1-1-0
139340|data|Elf32_Dyn <5, <0x106F8>>; DT_STRTAB|5-0-0-0-248-6-1-0
139348|data|Elf32_Dyn <6, <0x10358>>; DT_SYMTAB|6-0-0-0-88-3-1-0
139356|data|Elf32_Dyn <0xA, <0x1B0>>; DT_STRSZ|10-0-0-0-176-1-0-0
139364|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
139372|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
139380|data|Elf32_Dyn <3, <0x220F4>>; DT_PLTGOT|3-0-0-0-244-32-2-0
139388|data|Elf32_Dyn <2, <0x1B8>>; DT_PLTRELSZ|2-0-0-0-184-1-0-0
139396|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
139404|data|Elf32_Dyn <0x17, <0x10954>>; DT_JMPREL|23-0-0-0-84-9-1-0
139412|data|Elf32_Dyn <0x11, <0x1093C>>; DT_REL|17-0-0-0-60-9-1-0
139420|data|Elf32_Dyn <0x12, <0x18>>; DT_RELSZ|18-0-0-0-24-0-0-0
139428|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
139436|data|Elf32_Dyn <0x6FFFFFFE, <0x1091C>>; DT_VERNEED|254-255-255-111-28-9-1-0
139444|data|Elf32_Dyn <0x6FFFFFFF, <1>>; DT_VERNEEDNUM|255-255-255-111-1-0-0-0
139452|data|Elf32_Dyn <0x6FFFFFF0, <0x108A8>>; DT_VERSYM|240-255-255-111-168-8-1-0
139460|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
139468|data|ALIGN 0x10|0-0-0-0
139508|data|DCD stru_2200C|12-32-2-0
139512|data|DCD 0|0-0-0-0
139516|data|DCD 0|0-0-0-0
139520|data|DCD __imp_strtol|24-37-2-0
139524|data|DCD __imp_getpwuid|40-37-2-0
139528|data|DCD __imp_printf|124-36-2-0
139532|data|DCD __imp_fopen|116-36-2-0
139536|data|DCD __imp_read|136-36-2-0
139540|data|DCD __imp_endutent|204-36-2-0
139544|data|DCD __imp_getuid|0-37-2-0
139548|data|DCD __imp_fgets|28-37-2-0
139552|data|DCD __imp_memcpy|208-36-2-0
139556|data|DCD __imp_execvp|212-36-2-0
139560|data|DCD __imp_signal|224-36-2-0
139564|data|DCD __imp_lseek|48-37-2-0
139568|data|DCD __imp__IO_getc|128-36-2-0
139572|data|DCD __imp_unlink|228-36-2-0
139576|data|DCD __imp_wait|184-36-2-0
139580|data|DCD __imp___xstat|200-36-2-0
139584|data|DCD __imp__IO_putc|216-36-2-0
139588|data|DCD __imp_fwrite|56-37-2-0
139592|data|DCD __imp_strcpy|248-36-2-0
139596|data|DCD __imp_getenv|8-37-2-0
139600|data|DCD __imp_puts|52-37-2-0
139604|data|DCD __imp_setgid|144-36-2-0
139608|data|DCD __imp_malloc|100-36-2-0
139612|data|DCD __imp___libc_start_main|140-36-2-0
139616|data|DCD __imp___gmon_start__|60-37-2-0
139620|data|DCD __imp_sigblock|132-36-2-0
139624|data|DCD __imp_open|104-36-2-0
139628|data|DCD __imp_kill|108-36-2-0
139632|data|DCD __imp_getutline|232-36-2-0
139636|data|DCD __imp_getpid|192-36-2-0
139640|data|DCD __imp_exit|196-36-2-0
139644|data|DCD __imp_ttyname|236-36-2-0
139648|data|DCD __imp_strlen|188-36-2-0
139652|data|DCD __imp_strchr|148-36-2-0
139656|data|DCD __imp_fprintf|156-36-2-0
139660|data|DCD __imp_fcntl|164-36-2-0
139664|data|DCD __imp_setpwent|168-36-2-0
139668|data|DCD __imp_execv|160-36-2-0
139672|data|DCD __imp___errno_location|112-36-2-0
139676|data|DCD __imp_getgid|240-36-2-0
139680|data|DCD __imp_strncpy|220-36-2-0
139684|data|DCD __imp_setutent|120-36-2-0
139688|data|DCD __imp_write|12-37-2-0
139692|data|DCD __imp_sigsetmask|244-36-2-0
139696|data|DCD __imp_fclose|16-37-2-0
139700|data|DCD __imp_fork|4-37-2-0
139704|data|DCD __imp_endpwent|32-37-2-0
139708|data|DCD __imp_strrchr|152-36-2-0
139712|data|DCD __imp_setuid|172-36-2-0
139716|data|DCD __imp_sprintf|20-37-2-0
139720|data|DCD __imp_chmod|44-37-2-0
139724|data|DCD __imp_isatty|36-37-2-0
139728|data|DCD __imp_strncmp|252-36-2-0
139732|data|DCD __imp_abort|176-36-2-0
139736|data|DCD __imp_close|180-36-2-0
139740|data|DCD __imp___gmon_start__|60-37-2-0
140048|data|% 4; Copy of shared data|255-255-255-255
140056|data|% 1|255
140057|data|ALIGN 4|255-255-255
140060|data|% 4|255-255-255-255
140064|data|% 4|255-255-255-255
140068|data|% 4|255-255-255-255
140244|data|% 1|255
140308|data|% 1|255
140321|data|% 1|255
140322|data|ALIGN 4|255-255
140324|data|% 4|255-255-255-255
140328|data|% 4|255-255-255-255
140332|data|% 4|255-255-255-255
140380|data|% 4|255-255-255-255
