address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|125-18-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x43FC; SHT file offset|252-67-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1C; Number of entries in SHT|28-0
50|data|DCW 0x1B; SHT entry index for string table|27-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x2098; File offset|152-32-0-0
60|data|DCD unk_2098; Virtual address|152-32-0-0
64|data|DCD 0x2098; Physical address|152-32-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x20A4; Size in file image|164-32-0-0
168|data|DCD 0x20A4; Size in memory image|164-32-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x2E48; File offset|72-46-0-0
188|data|DCD off_12E48; Virtual address|72-46-1-0
192|data|DCD 0x12E48; Physical address|72-46-1-0
196|data|DCD 0x1480; Size in file image|128-20-0-0
200|data|DCD 0x1484; Size in memory image|132-20-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x2E68; File offset|104-46-0-0
220|data|DCD stru_12E68; Virtual address|104-46-1-0
224|data|DCD 0x12E68; Physical address|104-46-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x2E48; File offset|72-46-0-0
316|data|DCD off_12E48; Virtual address|72-46-1-0
320|data|DCD 0x12E48; Physical address|72-46-1-0
324|data|DCD 0x1B8; Size in file image|184-1-0-0
328|data|DCD 0x1B8; Size in memory image|184-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xC3, 0x7E, 0xE3, 0x4E, 0x61, 0xD8, 0x9E, 0x1B, 0xF3; Desc|195-126-227-78-97-216-158-27-243-91-218-155-80-210-172-108-177-2-67-7
436|data|DCD 3|3-0-0-0
440|data|DCD 0x1F|31-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x1F, 0x23, 0x28|31-0-0-0-35-0-0-0-40-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_4D4 - byte_4D4, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_4D4 - byte_4D4, dword_12E50, 0, 3, 0, 0x14>|0-0-0-0-80-46-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aCxaFinalize - byte_4D4, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|116-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
596|data|Elf32_Sym <aItmDeregistert - byte_4D4, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
612|data|Elf32_Sym <aDstrhex - byte_4D4, dword_0, 0, 0x12, 0, 0>; "dStrHex"|185-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
628|data|Elf32_Sym <aFree - byte_4D4, dword_0, 0, 0x12, 0, 0>; "free"|149-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aStackChkGuard - byte_4D4, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|174-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
660|data|Elf32_Sym <aSgCmdsCloseDev - byte_4D4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|210-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
676|data|Elf32_Sym <aOptind - byte_4D4, dword_0, 0, 0x11, 0, 0>; "optind"|18-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
692|data|Elf32_Sym <aStackChkFail - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|30-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
708|data|Elf32_Sym <aStderr - byte_4D4, dword_0, 0, 0x11, 0, 0>; "stderr"|82-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
724|data|Elf32_Sym <aPuts - byte_4D4, dword_0, 0, 0x12, 0, 0>; "puts"|25-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aMalloc - byte_4D4, dword_0, 0, 0x12, 0, 0>; "malloc"|68-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
756|data|Elf32_Sym <aLibcStartMain - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|131-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aVfprintfChk - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__vfprintf_chk"|101-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aGmonStart - byte_4D4, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
804|data|Elf32_Sym <aGetoptLong - byte_4D4, dword_0, 0, 0x12, 0, 0>; "getopt_long"|89-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aMemset - byte_4D4, dword_0, 0, 0x12, 0, 0>; "memset"|61-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
836|data|Elf32_Sym <aPutchar - byte_4D4, dword_0, 0, 0x12, 0, 0>; "putchar"|47-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aPrintfChk - byte_4D4, dword_0, 0, 0x12, 0, 0>; "__printf_chk"|5-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aSgLlReceiveCop - byte_4D4, dword_0, 0, 0x12, 0, 0>; "sg_ll_receive_copy_results"|158-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aSafeStrerror - byte_4D4, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aJvRegisterclas - byte_4D4, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
916|data|Elf32_Sym <aSgGetSenseStr - byte_4D4, dword_0, 0, 0x12, 0, 0>; "sg_get_sense_str"|193-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aSgGetCategoryS - byte_4D4, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|132-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aSgGetNum - byte_4D4, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
964|data|Elf32_Sym <aItmRegistertmc - byte_4D4, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
980|data|Elf32_Sym <aSgCmdsOpenDevi - byte_4D4, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|231-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aOptarg - byte_4D4, dword_0, 0, 0x11, 0, 0>; "optarg"|75-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1012|data|Elf32_Sym <aAbort - byte_4D4, dword_0, 0, 0x12, 0, 0>; "abort"|55-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aBssEnd+1 - byte_4D4, _end, 0, 0x10, 0, 0x19>; "_bss_end__"|239-1-0-0-204-66-1-0-0-0-0-0-16-0-25-0
1044|data|Elf32_Sym <aEdata - byte_4D4, __bss_start__, 0, 0x10, 0, 0x18>; "_edata"|205-1-0-0-200-66-1-0-0-0-0-0-16-0-24-0
1060|data|Elf32_Sym <aDataStart - byte_4D4, __data_start, 0, 0x10, 0, 0x18>; "__data_start"|192-1-0-0-0-48-1-0-0-0-0-0-16-0-24-0
1076|data|Elf32_Sym <aEnd_0 - byte_4D4, _end, 0, 0x10, 0, 0x19>; "_end"|2-2-0-0-204-66-1-0-0-0-0-0-16-0-25-0
1092|data|Elf32_Sym <aBssEnd - byte_4D4, _end, 0, 0x10, 0, 0x19>; "__bss_end__"|238-1-0-0-204-66-1-0-0-0-0-0-16-0-25-0
1108|data|Elf32_Sym <aLibcCsuInit - byte_4D4, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|23-2-0-0-1-20-0-0-64-0-0-0-18-0-13-0
1124|data|Elf32_Sym <aBssStart - byte_4D4, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start"|212-1-0-0-200-66-1-0-0-0-0-0-16-0-25-0
1140|data|Elf32_Sym <aLibcStartMain+0xD - byte_4D4, main+1, 0x820, 0x12, 0, 0xD>; "main"|144-1-0-0-93-10-0-0-32-8-0-0-18-0-13-0
1156|data|Elf32_Sym <aLibcCsuInit+0xA - byte_4D4, .init_proc, 0, 0x12, 0, 0xB>; "_init"|33-2-0-0-64-9-0-0-0-0-0-0-18-0-11-0
1172|data|Elf32_Sym <aLibcCsuFini - byte_4D4, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|7-2-0-0-65-20-0-0-2-0-0-0-18-0-13-0
1188|data|Elf32_Sym <aBssStart_0 - byte_4D4, __bss_start__, 0, 0x10, 0, 0x19>; "__bss_start__"|224-1-0-0-200-66-1-0-0-0-0-0-16-0-25-0
1204|data|Elf32_Sym <aLibcCsuFini+0xA - byte_4D4, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|17-2-0-0-68-20-0-0-0-0-0-0-18-0-14-0
1220|data|Elf32_Sym <aEnd - byte_4D4, _end, 0, 0x10, 0, 0x19>; "__end__"|250-1-0-0-204-66-1-0-0-0-0-0-16-0-25-0
1236|data|DCB 0|0
1237|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1254|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1282|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1297|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1317|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1343|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1354|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1368|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1394|data|DCB "sg_ll_receive_copy_results",0|115-103-95-108-108-95-114-101-99-101-105-118-101-95-99-111-112-121-95-114-101-115-117-108-116-115-0
1421|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1429|data|DCB "sg_get_sense_str",0|115-103-95-103-101-116-95-115-101-110-115-101-95-115-116-114-0
1446|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1467|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1487|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1497|data|DCB "__printf_chk",0|95-95-112-114-105-110-116-102-95-99-104-107-0
1510|data|DCB "optind",0|111-112-116-105-110-100-0
1517|data|DCB "puts",0|112-117-116-115-0
1522|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1539|data|DCB "putchar",0|112-117-116-99-104-97-114-0
1547|data|DCB "abort",0|97-98-111-114-116-0
1553|data|DCB "memset",0|109-101-109-115-101-116-0
1560|data|DCB "malloc",0|109-97-108-108-111-99-0
1567|data|DCB "optarg",0|111-112-116-97-114-103-0
1574|data|DCB "stderr",0|115-116-100-101-114-114-0
1581|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1593|data|DCB "__vfprintf_chk",0|95-95-118-102-112-114-105-110-116-102-95-99-104-107-0
1608|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1623|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1641|data|DCB "free",0|102-114-101-101-0
1646|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1666|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1684|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1697|data|DCB "_edata",0|95-101-100-97-116-97-0
1704|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1716|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1730|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1742|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1750|data|DCB "_end",0|95-101-110-100-0
1755|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1771|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1787|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1797|data|DCB 0|0
1798|data|DCW 0|0-0
1800|data|DCW 0|0-0
1802|data|DCW 0|0-0
1804|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1806|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1808|data|DCW 0; local  symbol: dStrHex|0-0
1810|data|DCW 2; free@@GLIBC_2.4|2-0
1812|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1814|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
1816|data|DCW 2; optind@@GLIBC_2.4|2-0
1818|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1820|data|DCW 2; stderr@@GLIBC_2.4|2-0
1822|data|DCW 2; puts@@GLIBC_2.4|2-0
1824|data|DCW 2; malloc@@GLIBC_2.4|2-0
1826|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1828|data|DCW 2; __vfprintf_chk@@GLIBC_2.4|2-0
1830|data|DCW 0; local  symbol: __gmon_start__|0-0
1832|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1834|data|DCW 2; memset@@GLIBC_2.4|2-0
1836|data|DCW 2; putchar@@GLIBC_2.4|2-0
1838|data|DCW 2; __printf_chk@@GLIBC_2.4|2-0
1840|data|DCW 0; local  symbol: sg_ll_receive_copy_results|0-0
1842|data|DCW 0; local  symbol: safe_strerror|0-0
1844|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1846|data|DCW 0; local  symbol: sg_get_sense_str|0-0
1848|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
1850|data|DCW 0; local  symbol: sg_get_num|0-0
1852|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
1854|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
1856|data|DCW 2; optarg@@GLIBC_2.4|2-0
1858|data|DCW 2; abort@@GLIBC_2.4|2-0
1860|data|DCW 1; global symbol: _bss_end__|1-0
1862|data|DCW 1; global symbol: _edata|1-0
1864|data|DCW 1; global symbol: __data_start|1-0
1866|data|DCW 1; global symbol: _end|1-0
1868|data|DCW 1; global symbol: __bss_end__|1-0
1870|data|DCW 1; global symbol: __libc_csu_init|1-0
1872|data|DCW 1; global symbol: __bss_start|1-0
1874|data|DCW 1; global symbol: main|1-0
1876|data|DCW 1; global symbol: _init|1-0
1878|data|DCW 1; global symbol: __libc_csu_fini|1-0
1880|data|DCW 1; global symbol: __bss_start__|1-0
1882|data|DCW 1; global symbol: _fini|1-0
1884|data|DCW 1; global symbol: __end__|1-0
1886|data|DCW 0|0-0
1888|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_4D4, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-154-1-0-0-16-0-0-0-32-0-0-0
1904|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_4D4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-39-2-0-0-0-0-0-0
1920|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_4D4, 0x10, 0>; "libc.so.6"|1-0-1-0-251-0-0-0-16-0-0-0-0-0-0-0
1936|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_4D4, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-39-2-0-0-0-0-0-0
1952|data|Elf32_Rel <0x12E48, 0x17>; R_ARM_RELATIVE|72-46-1-0-23-0-0-0
1960|data|Elf32_Rel <0x12E4C, 0x17>; R_ARM_RELATIVE|76-46-1-0-23-0-0-0
1968|data|Elf32_Rel <0x12E54, 0x17>; R_ARM_RELATIVE|84-46-1-0-23-0-0-0
1976|data|Elf32_Rel <0x12E58, 0x17>; R_ARM_RELATIVE|88-46-1-0-23-0-0-0
1984|data|Elf32_Rel <0x12E5C, 0x17>; R_ARM_RELATIVE|92-46-1-0-23-0-0-0
1992|data|Elf32_Rel <0x12E60, 0x17>; R_ARM_RELATIVE|96-46-1-0-23-0-0-0
2000|data|Elf32_Rel <0x12E64, 0x17>; R_ARM_RELATIVE|100-46-1-0-23-0-0-0
2008|data|Elf32_Rel <0x12FD0, 0x17>; R_ARM_RELATIVE|208-47-1-0-23-0-0-0
2016|data|Elf32_Rel <0x12FEC, 0x17>; R_ARM_RELATIVE|236-47-1-0-23-0-0-0
2024|data|Elf32_Rel <0x12FF0, 0x17>; R_ARM_RELATIVE|240-47-1-0-23-0-0-0
2032|data|Elf32_Rel <0x13004, 0x17>; R_ARM_RELATIVE|4-48-1-0-23-0-0-0
2040|data|Elf32_Rel <0x14208, 0x17>; R_ARM_RELATIVE|8-66-1-0-23-0-0-0
2048|data|Elf32_Rel <0x14218, 0x17>; R_ARM_RELATIVE|24-66-1-0-23-0-0-0
2056|data|Elf32_Rel <0x14228, 0x17>; R_ARM_RELATIVE|40-66-1-0-23-0-0-0
2064|data|Elf32_Rel <0x14238, 0x17>; R_ARM_RELATIVE|56-66-1-0-23-0-0-0
2072|data|Elf32_Rel <0x14248, 0x17>; R_ARM_RELATIVE|72-66-1-0-23-0-0-0
2080|data|Elf32_Rel <0x14258, 0x17>; R_ARM_RELATIVE|88-66-1-0-23-0-0-0
2088|data|Elf32_Rel <0x14268, 0x17>; R_ARM_RELATIVE|104-66-1-0-23-0-0-0
2096|data|Elf32_Rel <0x14278, 0x17>; R_ARM_RELATIVE|120-66-1-0-23-0-0-0
2104|data|Elf32_Rel <0x14288, 0x17>; R_ARM_RELATIVE|136-66-1-0-23-0-0-0
2112|data|Elf32_Rel <0x14298, 0x17>; R_ARM_RELATIVE|152-66-1-0-23-0-0-0
2120|data|Elf32_Rel <0x142A8, 0x17>; R_ARM_RELATIVE|168-66-1-0-23-0-0-0
2128|data|Elf32_Rel <0x12FD4, 0x315>; R_ARM_GLOB_DAT __cxa_finalize|212-47-1-0-21-3-0-0
2136|data|Elf32_Rel <0x12FD8, 0x415>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-47-1-0-21-4-0-0
2144|data|Elf32_Rel <0x12FDC, 0x715>; R_ARM_GLOB_DAT __stack_chk_guard|220-47-1-0-21-7-0-0
2152|data|Elf32_Rel <0x12FE0, 0x915>; R_ARM_GLOB_DAT optind|224-47-1-0-21-9-0-0
2160|data|Elf32_Rel <0x12FE4, 0xB15>; R_ARM_GLOB_DAT stderr|228-47-1-0-21-11-0-0
2168|data|Elf32_Rel <0x12FE8, 0x1015>; R_ARM_GLOB_DAT __gmon_start__|232-47-1-0-21-16-0-0
2176|data|Elf32_Rel <0x12FF4, 0x1715>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-47-1-0-21-23-0-0
2184|data|Elf32_Rel <0x12FF8, 0x1B15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-47-1-0-21-27-0-0
2192|data|Elf32_Rel <0x12FFC, 0x1D15>; R_ARM_GLOB_DAT optarg|252-47-1-0-21-29-0-0
2200|data|Elf32_Rel <0x12F7C, 0x316>; R_ARM_JUMP_SLOT __cxa_finalize|124-47-1-0-22-3-0-0
2208|data|Elf32_Rel <0x12F80, 0x516>; R_ARM_JUMP_SLOT dStrHex|128-47-1-0-22-5-0-0
2216|data|Elf32_Rel <0x12F84, 0x616>; R_ARM_JUMP_SLOT free|132-47-1-0-22-6-0-0
2224|data|Elf32_Rel <0x12F88, 0x816>; R_ARM_JUMP_SLOT sg_cmds_close_device|136-47-1-0-22-8-0-0
2232|data|Elf32_Rel <0x12F8C, 0xA16>; R_ARM_JUMP_SLOT __stack_chk_fail|140-47-1-0-22-10-0-0
2240|data|Elf32_Rel <0x12F90, 0xC16>; R_ARM_JUMP_SLOT puts|144-47-1-0-22-12-0-0
2248|data|Elf32_Rel <0x12F94, 0xD16>; R_ARM_JUMP_SLOT malloc|148-47-1-0-22-13-0-0
2256|data|Elf32_Rel <0x12F98, 0xE16>; R_ARM_JUMP_SLOT __libc_start_main|152-47-1-0-22-14-0-0
2264|data|Elf32_Rel <0x12F9C, 0xF16>; R_ARM_JUMP_SLOT __vfprintf_chk|156-47-1-0-22-15-0-0
2272|data|Elf32_Rel <0x12FA0, 0x1016>; R_ARM_JUMP_SLOT __gmon_start__|160-47-1-0-22-16-0-0
2280|data|Elf32_Rel <0x12FA4, 0x1116>; R_ARM_JUMP_SLOT getopt_long|164-47-1-0-22-17-0-0
2288|data|Elf32_Rel <0x12FA8, 0x1216>; R_ARM_JUMP_SLOT memset|168-47-1-0-22-18-0-0
2296|data|Elf32_Rel <0x12FAC, 0x1316>; R_ARM_JUMP_SLOT putchar|172-47-1-0-22-19-0-0
2304|data|Elf32_Rel <0x12FB0, 0x1416>; R_ARM_JUMP_SLOT __printf_chk|176-47-1-0-22-20-0-0
2312|data|Elf32_Rel <0x12FB4, 0x1516>; R_ARM_JUMP_SLOT sg_ll_receive_copy_results|180-47-1-0-22-21-0-0
2320|data|Elf32_Rel <0x12FB8, 0x1616>; R_ARM_JUMP_SLOT safe_strerror|184-47-1-0-22-22-0-0
2328|data|Elf32_Rel <0x12FBC, 0x1816>; R_ARM_JUMP_SLOT sg_get_sense_str|188-47-1-0-22-24-0-0
2336|data|Elf32_Rel <0x12FC0, 0x1916>; R_ARM_JUMP_SLOT sg_get_category_sense_str|192-47-1-0-22-25-0-0
2344|data|Elf32_Rel <0x12FC4, 0x1A16>; R_ARM_JUMP_SLOT sg_get_num|196-47-1-0-22-26-0-0
2352|data|Elf32_Rel <0x12FC8, 0x1C16>; R_ARM_JUMP_SLOT sg_cmds_open_device|200-47-1-0-22-28-0-0
2360|data|Elf32_Rel <0x12FCC, 0x1E16>; R_ARM_JUMP_SLOT abort|204-47-1-0-22-30-0-0
2368|code|PUSH            {R3,LR}; _init|8-64-45-233
2372|code|BL              sub_12C4|94-2-0-235
2376|code|POP             {R3,PC}|8-128-189-232
2380|code|PUSH            {LR}|4-224-45-229
2384|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x95C)|4-224-159-229
2388|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2392|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2396|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x95C|20-38-1-0
2400|code|ADR             R12, 0x968|0-198-143-226
2404|code|ADD             R12, R12, #0x12000|18-202-140-226
2408|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x12968)]!; __imp___cxa_finalize|20-246-188-229
2412|code|ADR             R12, 0x974|0-198-143-226
2416|code|ADD             R12, R12, #0x12000|18-202-140-226
2420|code|LDR             PC, [R12,#(dStrHex_ptr - 0x12974)]!; __imp_dStrHex|12-246-188-229
2424|code|ADR             R12, 0x980|0-198-143-226
2428|code|ADD             R12, R12, #0x12000|18-202-140-226
2432|code|LDR             PC, [R12,#(free_ptr - 0x12980)]!; __imp_free|4-246-188-229
2436|code|ADR             R12, 0x98C|0-198-143-226
2440|code|ADD             R12, R12, #0x12000|18-202-140-226
2444|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x1298C)]!; __imp_sg_cmds_close_device|252-245-188-229
2448|code|ADR             R12, 0x998|0-198-143-226
2452|code|ADD             R12, R12, #0x12000|18-202-140-226
2456|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x12998)]!; __imp___stack_chk_fail|244-245-188-229
2460|code|ADR             R12, 0x9A4|0-198-143-226
2464|code|ADD             R12, R12, #0x12000|18-202-140-226
2468|code|LDR             PC, [R12,#(puts_ptr - 0x129A4)]!; __imp_puts|236-245-188-229
2472|code|ADR             R12, 0x9B0|0-198-143-226
2476|code|ADD             R12, R12, #0x12000|18-202-140-226
2480|code|LDR             PC, [R12,#(malloc_ptr - 0x129B0)]!; __imp_malloc|228-245-188-229
2484|code|ADR             R12, 0x9BC|0-198-143-226
2488|code|ADD             R12, R12, #0x12000|18-202-140-226
2492|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x129BC)]!; __imp___libc_start_main|220-245-188-229
2496|code|ADR             R12, 0x9C8|0-198-143-226
2500|code|ADD             R12, R12, #0x12000|18-202-140-226
2504|code|LDR             PC, [R12,#(__vfprintf_chk_ptr - 0x129C8)]!; __imp___vfprintf_chk|212-245-188-229
2508|code|ADR             R12, 0x9D4|0-198-143-226
2512|code|ADD             R12, R12, #0x12000|18-202-140-226
2516|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x129D4)]!; __imp___gmon_start__|204-245-188-229
2520|code|ADR             R12, 0x9E0|0-198-143-226
2524|code|ADD             R12, R12, #0x12000|18-202-140-226
2528|code|LDR             PC, [R12,#(getopt_long_ptr - 0x129E0)]!; __imp_getopt_long|196-245-188-229
2532|code|ADR             R12, 0x9EC|0-198-143-226
2536|code|ADD             R12, R12, #0x12000|18-202-140-226
2540|code|LDR             PC, [R12,#(memset_ptr - 0x129EC)]!; __imp_memset|188-245-188-229
2544|code|ADR             R12, 0x9F8|0-198-143-226
2548|code|ADD             R12, R12, #0x12000|18-202-140-226
2552|code|LDR             PC, [R12,#(putchar_ptr - 0x129F8)]!; __imp_putchar|180-245-188-229
2556|code|ADR             R12, 0xA04|0-198-143-226
2560|code|ADD             R12, R12, #0x12000|18-202-140-226
2564|code|LDR             PC, [R12,#(__printf_chk_ptr - 0x12A04)]!; __imp___printf_chk|172-245-188-229
2568|code|ADR             R12, 0xA10|0-198-143-226
2572|code|ADD             R12, R12, #0x12000|18-202-140-226
2576|code|LDR             PC, [R12,#(sg_ll_receive_copy_results_ptr - 0x12A10)]!; __imp_sg_ll_receive_copy_results|164-245-188-229
2580|code|ADR             R12, 0xA1C|0-198-143-226
2584|code|ADD             R12, R12, #0x12000|18-202-140-226
2588|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x12A1C)]!; __imp_safe_strerror|156-245-188-229
2592|code|ADR             R12, 0xA28|0-198-143-226
2596|code|ADD             R12, R12, #0x12000|18-202-140-226
2600|code|LDR             PC, [R12,#(sg_get_sense_str_ptr - 0x12A28)]!; __imp_sg_get_sense_str|148-245-188-229
2604|code|ADR             R12, 0xA34|0-198-143-226
2608|code|ADD             R12, R12, #0x12000|18-202-140-226
2612|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x12A34)]!; __imp_sg_get_category_sense_str|140-245-188-229
2616|code|ADR             R12, 0xA40|0-198-143-226
2620|code|ADD             R12, R12, #0x12000|18-202-140-226
2624|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x12A40)]!; __imp_sg_get_num|132-245-188-229
2628|code|ADR             R12, 0xA4C|0-198-143-226
2632|code|ADD             R12, R12, #0x12000|18-202-140-226
2636|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x12A4C)]!; __imp_sg_cmds_open_device|124-245-188-229
2640|code|ADR             R12, 0xA58|0-198-143-226
2644|code|ADD             R12, R12, #0x12000|18-202-140-226
2648|code|LDR             PC, [R12,#(abort_ptr - 0x12A58)]!; __imp_abort|116-245-188-229
2652|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2656|code|SUBW            SP, SP, #0x534|173-242-52-93
2660|code|LDR.W           R11, =(_GLOBAL_OFFSET_TABLE_ - 0xA74)|223-248-232-182
2664|code|ADD             R4, SP, #0x558+var_530|10-172
2666|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x12F70)|223-248-232-54
2670|code|MOV             R6, R0|6-70
2672|code|ADD             R11, PC; _GLOBAL_OFFSET_TABLE_|251-68
2674|code|LDR.W           R10, =(aFhhlPrrsvvx - 0xA84); "fhHl:prRsvVx:"|223-248-228-166
2678|code|LDR.W           R9, =(off_14208 - 0xA86); "failed"|223-248-228-150
2682|code|MOV             R7, R1|15-70
2684|code|LDR.W           R3, [R11,R3]; __stack_chk_guard|91-248-3-48
2688|code|ADD             R10, PC; "fhHl:prRsvVx:"|250-68
2690|code|ADD             R9, PC; off_14208|249-68
2692|code|MOVS            R1, #0; c|0-33
2694|code|ADD             R0, SP, #0x558+s; s|11-168
2696|code|MOV.W           R2, #0x100; n|79-244-128-114
2700|code|STR             R3, [SP,#0x558+var_544]|5-147
2702|code|MOV             R5, R1|13-70
2704|code|LDR             R3, [R3]|27-104
2706|code|MOV             R8, R1|136-70
2708|code|STR             R1, [SP,#0x558+read_only]|6-145
2710|code|STR             R1, [SP,#0x558+no_ascii]|9-145
2712|code|STR.W           R3, [SP,#0x558+var_2C]|205-248-44-53
2716|code|STR             R1, [SP,#0x558+var_538]|8-145
2718|code|BLX             memset|255-247-162-239
2722|code|MOVS            R3, #3|3-35
2724|code|STR             R3, [SP,#0x558+var_548]|4-147
2726|code|MOV.W           R3, #0x208|79-244-2-115
2730|code|STR             R3, [SP,#0x558+size]|7-147
2732|code|STR             R4, [SP,#0x558+longind]; longind|0-148
2734|code|MOV             R1, R7; argv|57-70
2736|code|MOV             R0, R6; argc|48-70
2738|code|MOV             R2, R10; shortopts|82-70
2740|code|MOV             R3, R9; longopts|75-70
2742|code|STR.W           R8, [R4]|196-248-0-128
2746|code|BLX             getopt_long|255-247-142-239
2750|code|ADDS            R1, R0, #1|65-28
2752|code|BEQ             loc_BBC|124-208
2754|code|SUB.W           R3, R0, #0x3F ; '?'; switch 58 cases|160-241-63-3
2758|code|CMP             R3, #0x39|57-43
2760|code|BHI             def_ACA; jumptable 00000ACA default case, cases 64-71,73-81,83-85,87-101,103,105-107,109-111,113,116,117,119|107-216
2762|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
2766|data|DCB 0x4A; jump table for switch statement|74
2767|data|DCB 0x6A|106
2768|data|DCB 0x6A|106
2769|data|DCB 0x6A|106
2770|data|DCB 0x6A|106
2771|data|DCB 0x6A|106
2772|data|DCB 0x6A|106
2773|data|DCB 0x6A|106
2774|data|DCB 0x6A|106
2775|data|DCB 0x47|71
2776|data|DCB 0x6A|106
2777|data|DCB 0x6A|106
2778|data|DCB 0x6A|106
2779|data|DCB 0x6A|106
2780|data|DCB 0x6A|106
2781|data|DCB 0x6A|106
2782|data|DCB 0x6A|106
2783|data|DCB 0x6A|106
2784|data|DCB 0x6A|106
2785|data|DCB 0x43|67
2786|data|DCB 0x6A|106
2787|data|DCB 0x6A|106
2788|data|DCB 0x6A|106
2789|data|DCB 0x2F|47
2790|data|DCB 0x6A|106
2791|data|DCB 0x6A|106
2792|data|DCB 0x6A|106
2793|data|DCB 0x6A|106
2794|data|DCB 0x6A|106
2795|data|DCB 0x6A|106
2796|data|DCB 0x6A|106
2797|data|DCB 0x6A|106
2798|data|DCB 0x6A|106
2799|data|DCB 0x6A|106
2800|data|DCB 0x6A|106
2801|data|DCB 0x6A|106
2802|data|DCB 0x6A|106
2803|data|DCB 0x6A|106
2804|data|DCB 0x6A|106
2805|data|DCB 0x2C|44
2806|data|DCB 0x6A|106
2807|data|DCB 0x4A|74
2808|data|DCB 0x6A|106
2809|data|DCB 0x6A|106
2810|data|DCB 0x6A|106
2811|data|DCB 0x20|32
2812|data|DCB 0x6A|106
2813|data|DCB 0x6A|106
2814|data|DCB 0x6A|106
2815|data|DCB 0x1D|29
2816|data|DCB 0x6A|106
2817|data|DCB 0x67|103
2818|data|DCB 0x64|100
2819|data|DCB 0x6A|106
2820|data|DCB 0x6A|106
2821|data|DCB 0x62|98
2822|data|DCB 0x6A|106
2823|data|DCB 0x51|81
2824|code|MOVS            R3, #3; jumptable 00000ACA case 112|3-35
2826|code|STR             R3, [SP,#0x558+var_548]|4-147
2828|code|B               loc_AAC|206-231
2830|code|LDR.W           R3, =(optarg_ptr - 0x12F70); jumptable 00000ACA case 108|223-248-80-54
2834|code|LDR.W           R3, [R11,R3]; optarg|91-248-3-48
2838|code|LDR             R0, [R3]; buf|24-104
2840|code|BLX             sg_get_num|255-247-142-239
2844|code|ADDS            R2, R0, #1|66-28
2846|code|BEQ.W           loc_CF8|0-240-235-128
2850|code|STR             R0, [SP,#0x558+var_538]|8-144
2852|code|B               loc_AAC|194-231
2854|code|MOVS            R3, #4; jumptable 00000ACA case 102|4-35
2856|code|STR             R3, [SP,#0x558+var_548]|4-147
2858|code|B               loc_AAC|191-231
2860|code|LDR.W           R0, =(aSgCopyResultsV - 0xB38); jumptable 00000ACA case 86|223-248-52-6
2864|code|LDR.W           R1, =(a1920140515 - 0xB3A); "1.9 20140515"|223-248-52-22
2868|code|ADD             R0, PC; "sg_copy_results: version: %s\n"|120-68
2870|code|ADD             R1, PC; "1.9 20140515"|121-68
2872|code|BL              sub_13B8|0-240-62-252
2876|code|MOVS            R0, #0|0-32
2878|code|LDR             R3, [SP,#0x558+var_544]|5-155
2880|code|LDR.W           R2, [SP,#0x558+var_2C]|221-248-44-37
2884|code|LDR             R3, [R3]|27-104
2886|code|CMP             R2, R3|154-66
2888|code|BNE.W           loc_1122|64-240-235-130
2892|code|ADDW            SP, SP, #0x534|13-242-52-93
2896|code|POP.W           {R4-R11,PC}|189-232-240-143
2900|code|LDR             R3, [SP,#0x558+read_only]; jumptable 00000ACA case 82|6-155
2902|code|ADDS            R3, #1|1-51
2904|code|STR             R3, [SP,#0x558+read_only]|6-147
2906|code|B               loc_AAC|167-231
2908|code|MOVS            R3, #1; jumptable 00000ACA case 72|1-35
2910|code|STR             R3, [SP,#0x558+no_ascii]|9-147
2912|code|B               loc_AAC|164-231
2914|code|LDR.W           R0, =(aUsageSgCopyRes - 0xB6A); jumptable 00000ACA cases 63,104|223-248-8-6
2918|code|ADD             R0, PC; "Usage: sg_copy_results [--failed|--para"...|120-68
2920|code|BL              sub_13B8|0-240-38-252
2924|code|MOVS            R0, #0|0-32
2926|code|B               loc_B3E|230-231
2928|code|LDR.W           R3, =(optarg_ptr - 0x12F70); jumptable 00000ACA case 120|223-248-236-53
2932|code|LDR.W           R3, [R11,R3]; optarg|91-248-3-48
2936|code|LDR             R0, [R3]; buf|24-104
2938|code|BLX             sg_get_num|255-247-94-239
2942|code|ADDS            R3, R0, #1|67-28
2944|code|STR             R0, [SP,#0x558+size]|7-144
2946|code|BNE             loc_AAC|147-209
2948|code|LDR.W           R0, =(aBadArgumentToX - 0xB8C); "bad argument to '--xfer_len'\n"|223-248-232-5
2952|code|ADD             R0, PC; "bad argument to '--xfer_len'\n"|120-68
2954|code|BL              sub_13B8|0-240-21-252
2958|code|MOVS            R0, #1|1-32
2960|code|B               loc_B3E|213-231
2962|code|ADDS            R5, #1; jumptable 00000ACA case 118|1-53
2964|code|B               loc_AAC|138-231
2966|code|MOVS            R3, #0; jumptable 00000ACA case 115|0-35
2968|code|STR             R3, [SP,#0x558+var_548]|4-147
2970|code|B               loc_AAC|135-231
2972|code|MOVS            R3, #1; jumptable 00000ACA case 114|1-35
2974|code|STR             R3, [SP,#0x558+var_548]|4-147
2976|code|B               loc_AAC|132-231
2978|code|MOV             R1, R0; jumptable 00000ACA default case, cases 64-71,73-81,83-85,87-101,103,105-107,109-111,113,116,117,119|1-70
2980|code|LDR.W           R0, =(aUnrecognisedOp - 0xBAC); "unrecognised option code 0x%x ??\n"|223-248-204-5
2984|code|ADD             R0, PC; "unrecognised option code 0x%x ??\n"|120-68
2986|code|BL              sub_13B8|0-240-5-252
2990|code|LDR.W           R0, =(aUsageSgCopyRes - 0xBB6); "Usage: sg_copy_results [--failed|--para"...|223-248-200-5
2994|code|ADD             R0, PC; "Usage: sg_copy_results [--failed|--para"...|120-68
2996|code|BL              sub_13B8|0-240-0-252
3000|code|MOVS            R0, #1|1-32
3002|code|B               loc_B3E|192-231
3004|code|LDR.W           R3, =(optind_ptr - 0x12F70)|223-248-188-53
3008|code|LDR.W           R4, [R11,R3]; optind|91-248-3-64
3012|code|LDR             R3, [R4]|35-104
3014|code|CMP             R6, R3|158-66
3016|code|BLE             loc_C08|30-221
3018|code|ADDS            R2, R3, #1|90-28
3020|code|LDR.W           R8, [R7,R3,LSL#2]|87-248-35-128
3024|code|CMP             R6, R2|150-66
3026|code|STR             R2, [R4]|34-96
3028|code|BLE             loc_C20|36-221
3030|code|LDR.W           R5, =(aUnexpectedExtr - 0xBE0); "Unexpected extra argument: %s\n"|223-248-168-85
3034|code|MOV             R8, R4|160-70
3036|code|ADD             R5, PC; "Unexpected extra argument: %s\n"|125-68
3038|code|B               loc_BF4|9-224
3040|code|LDR.W           R1, [R7,R3,LSL#2]|87-248-35-16
3044|code|MOV             R0, R5|40-70
3046|code|BL              sub_13B8|0-240-231-251
3050|code|LDR.W           R3, [R8]|216-248-0-48
3054|code|ADDS            R3, #1|1-51
3056|code|STR.W           R3, [R8]|200-248-0-48
3060|code|LDR             R3, [R4]|35-104
3062|code|CMP             R6, R3|158-66
3064|code|BGT             loc_BE0|242-220
3066|code|LDR.W           R0, =(aUsageSgCopyRes - 0xC02); "Usage: sg_copy_results [--failed|--para"...|223-248-136-5
3070|code|ADD             R0, PC; "Usage: sg_copy_results [--failed|--para"...|120-68
3072|code|BL              sub_13B8|0-240-218-251
3076|code|MOVS            R0, #1|1-32
3078|code|B               loc_B3E|154-231
3080|code|LDR.W           R0, =(aMissingDeviceN - 0xC10); "missing device name!\n"|223-248-124-5
3084|code|ADD             R0, PC; "missing device name!\n"|120-68
3086|code|BL              sub_13B8|0-240-211-251
3090|code|LDR.W           R0, =(aUsageSgCopyRes - 0xC1A); "Usage: sg_copy_results [--failed|--para"...|223-248-120-5
3094|code|ADD             R0, PC; "Usage: sg_copy_results [--failed|--para"...|120-68
3096|code|BL              sub_13B8|0-240-206-251
3100|code|MOVS            R0, #1|1-32
3102|code|B               loc_B3E|142-231
3104|code|CMP.W           R8, #0|184-241-0-15
3108|code|BEQ             loc_C08|240-208
3110|code|LDR             R2, [SP,#0x558+size]|7-154
3112|code|MOVW            R3, #0x270F|66-242-15-115
3116|code|CMP             R2, R3|154-66
3118|code|BGT             loc_CC4|73-220
3120|code|LDR             R0, [SP,#0x558+size]; size|7-152
3122|code|BLX             malloc|255-247-186-238
3126|code|MOV             R6, R0|6-70
3128|code|CMP             R0, #0|0-40
3130|code|BEQ             loc_CEA|86-208
3132|code|MOVS            R1, #0; c|0-33
3134|code|LDR             R2, [SP,#0x558+size]; n|7-154
3136|code|BLX             memset|255-247-208-238
3140|code|MOV             R0, R8; device_name|64-70
3142|code|LDR             R1, [SP,#0x558+read_only]; read_only|6-153
3144|code|MOV             R2, R5; verbose|42-70
3146|code|BLX             sg_cmds_open_device|255-247-252-238
3150|code|SUBS.W          R9, R0, #0|176-241-0-9
3154|code|BLT             loc_D06|88-219
3156|code|LDR             R3, [SP,#0x558+var_548]|4-155
3158|code|CMP             R3, #4|4-43
3160|code|BHI             loc_CE2|67-216
3162|code|LDR.W           R3, =(off_12E54 - 0xC64); "Receive copy status(LID1)"|223-248-52-53
3166|code|LDR             R2, [SP,#0x558+var_548]|4-154
3168|code|ADD             R3, PC; off_12E54|123-68
3170|code|LDR.W           R4, [R3,R2,LSL#2]|83-248-34-64
3174|code|CMP             R5, #0|0-45
3176|code|BNE             loc_D66|125-209
3178|code|LDR             R3, [SP,#0x558+size]|7-155
3180|code|MOV.W           R8, #1|79-240-1-8
3184|code|LDR             R2, [SP,#0x558+var_538]|8-154
3186|code|MOV             R0, R9|72-70
3188|code|STR             R5, [SP,#0x558+var_550]|2-149
3190|code|STR             R3, [SP,#0x558+longind]|0-147
3192|code|MOV             R3, R6|51-70
3194|code|STR.W           R8, [SP,#0x558+buff]|205-248-4-128
3198|code|LDR             R1, [SP,#0x558+var_548]|4-153
3200|code|BLX             sg_ll_receive_copy_results|255-247-194-238
3204|code|MOV             R7, R0|7-70
3206|code|CMP             R0, #0|0-40
3208|code|BNE             loc_D20|74-209
3210|code|LDR             R3, [SP,#0x558+no_ascii]|9-155
3212|code|CMP             R3, #0|0-43
3214|code|BNE.W           loc_108E|64-240-254-129
3218|code|LDR             R3, [SP,#0x558+var_548]|4-155
3220|code|CMP             R3, #3|3-43
3222|code|BEQ             loc_D7E|114-208
3224|code|CMP             R3, #4|4-43
3226|code|BEQ.W           loc_1054|0-240-219-129
3230|code|CMP             R3, #0|0-43
3232|code|BEQ.W           loc_FA4|0-240-128-129
3236|code|LDR             R1, [SP,#0x558+size]; len|7-153
3238|code|MOV             R2, R8; no_ascii|66-70
3240|code|MOV             R0, R6; str|48-70
3242|code|BLX             dStrHex|255-247-96-238
3246|code|MOV             R0, R6; ptr|48-70
3248|code|BLX             free|255-247-98-238
3252|code|MOV             R0, R9; device_fd|72-70
3254|code|BLX             sg_cmds_close_device|255-247-102-238
3258|code|CMP             R0, #0|0-40
3260|code|BLT.W           loc_113A|192-242-61-130
3264|code|MOVS            R0, #0|0-32
3266|code|B               loc_B3E|60-231
3268|code|LDR.W           R0, =(aXferLenDIsOutO - 0xCD2); "xfer_len (%d) is out of range ( < %d)\n"|223-248-204-4
3272|code|MOV             R1, R2|17-70
3274|code|MOVW            R2, #0x2710|66-242-16-114
3278|code|ADD             R0, PC; "xfer_len (%d) is out of range ( < %d)\n"|120-68
3280|code|BL              sub_13B8|0-240-114-251
3284|code|LDR.W           R0, =(aUsageSgCopyRes - 0xCDC); "Usage: sg_copy_results [--failed|--para"...|223-248-192-4
3288|code|ADD             R0, PC; "Usage: sg_copy_results [--failed|--para"...|120-68
3290|code|BL              sub_13B8|0-240-109-251
3294|code|MOVS            R0, #1|1-32
3296|code|B               loc_B3E|45-231
3298|code|LDR.W           R4, =(aOutOfRangeServ - 0xCEA); "Out of range service action"|223-248-184-68
3302|code|ADD             R4, PC; "Out of range service action"|124-68
3304|code|B               loc_C66|189-231
3306|code|LDR.W           R0, =(aSgCopyResultsO - 0xCF2); "sg_copy_results: out of memory\n"|223-248-180-4
3310|code|ADD             R0, PC; "sg_copy_results: out of memory\n"|120-68
3312|code|BL              sub_13B8|0-240-98-251
3316|code|MOVS            R0, #0xF|15-32
3318|code|B               loc_B3E|34-231
3320|code|LDR.W           R0, =(aBadArgumentToL - 0xD00); "bad argument to '--list_id'\n"|223-248-168-4
3324|code|ADD             R0, PC; "bad argument to '--list_id'\n"|120-68
3326|code|BL              sub_13B8|0-240-91-251
3330|code|MOVS            R0, #1|1-32
3332|code|B               loc_B3E|27-231
3334|code|RSB.W           R0, R9, #0; errnum|201-241-0-0
3338|code|BLX             safe_strerror|255-247-132-238
3342|code|MOV             R1, R8|65-70
3344|code|MOV             R2, R0|2-70
3346|code|LDR.W           R0, =(aSgCopyResultsO_0 - 0xD1A); "sg_copy_results: open error: %s: %s\n"|223-248-148-4
3350|code|ADD             R0, PC; "sg_copy_results: open error: %s: %s\n"|120-68
3352|code|BL              sub_13B8|0-240-78-251
3356|code|MOVS            R0, #0xF|15-32
3358|code|B               loc_B3E|14-231
3360|code|MOV             R3, R5|43-70
3362|code|ADD             R5, SP, #0x558+var_42C|75-173
3364|code|MOVS            R1, #0x50 ; 'P'|80-33
3366|code|MOV             R2, R5|42-70
3368|code|BLX             sg_get_category_sense_str|255-247-128-238
3372|code|LDR.W           R0, =(aScsiSFailedS - 0xD38); "  SCSI %s failed: %s\n"|223-248-124-4
3376|code|MOV             R2, R5|42-70
3378|code|MOV             R1, R4|33-70
3380|code|ADD             R0, PC; "  SCSI %s failed: %s\n"|120-68
3382|code|BL              sub_13B8|0-240-63-251
3386|code|MOV             R0, R6; ptr|48-70
3388|code|BLX             free|255-247-28-238
3392|code|MOV             R0, R9; device_fd|72-70
3394|code|BLX             sg_cmds_close_device|255-247-32-238
3398|code|CMP             R0, #0|0-40
3400|code|BGE             loc_D5C|8-218
3402|code|NEGS            R0, R0; errnum|64-66
3404|code|BLX             safe_strerror|255-247-98-238
3408|code|MOV             R1, R0|1-70
3410|code|LDR.W           R0, =(aSgCopyResultsC - 0xD5A); "sg_copy_results: close error: %s\n"|223-248-92-4
3414|code|ADD             R0, PC; "sg_copy_results: close error: %s\n"|120-68
3416|code|BL              sub_13B8|0-240-46-251
3420|code|CMP             R7, #0|0-47
3422|code|ITE GE|172-191
3424|code|MOVGE           R0, R7|56-70
3426|code|MOVLT           R0, #0x63 ; 'c'|99-32
3428|code|B               loc_B3E|235-230
3430|code|LDR             R1, [SP,#0x558+var_538]|8-153
3432|code|MOV             R2, R8|66-70
3434|code|LDR             R3, [SP,#0x558+size]|7-155
3436|code|LDR.W           R0, =(aSgCopyResultsI - 0xD7A); "sg_copy_results: issue %s to device %s"...|223-248-68-4
3440|code|STR             R1, [SP,#0x558+buff]|1-145
3442|code|MOV             R1, R4|33-70
3444|code|STR             R3, [SP,#0x558+longind]|0-147
3446|code|ADD             R0, PC; "sg_copy_results: issue %s to device %s"...|120-68
3448|code|BL              sub_13B8|0-240-30-251
3452|code|B               loc_C6A|117-231
3454|code|LDRB            R1, [R6,#1]|113-120
3456|code|LDRB            R3, [R6]|51-120
3458|code|LDRB            R2, [R6,#3]|242-120
3460|code|LSLS            R1, R1, #0x10|9-4
3462|code|LDRB            R0, [R6,#2]|176-120
3464|code|ORR.W           R3, R1, R3,LSL#24|65-234-3-99
3468|code|ORRS            R3, R2|19-67
3470|code|LDR             R2, [SP,#0x558+size]|7-154
3472|code|ORR.W           R3, R3, R0,LSL#8|67-234-0-35
3476|code|CMP             R2, R3|154-66
3478|code|BCC.W           loc_10AC|192-240-137-129
3482|code|LDR.W           R0, =(aReceiveCopyRes - 0xDA2); "Receive copy results (report operating "...|223-248-28-4
3486|code|ADD             R0, PC; "Receive copy results (report operating "...|120-68
3488|code|BLX             puts|255-247-252-237
3492|code|LDRB            R3, [R6,#4]|51-121
3494|code|LSLS            R3, R3, #0x1F|219-7
3496|code|BMI.W           loc_109A|0-241-119-129
3500|code|LDR.W           R2, =(aNo - 0xDB4); "no"|223-248-12-36
3504|code|ADD             R2, PC; "no"|122-68
3506|code|LDR.W           R1, =(aSupportsNoList - 0xDBC); "    Supports no list identifier (SNLID)"...|223-248-12-20
3510|code|MOVS            R0, #1|1-32
3512|code|ADD             R1, PC; "    Supports no list identifier (SNLID)"...|121-68
3514|code|BLX             __printf_chk|255-247-32-238
3518|code|LDRB            R2, [R6,#8]|50-122
3520|code|LDRB            R3, [R6,#9]|115-122
3522|code|MOVS            R0, #1|1-32
3524|code|LDR             R1, =(aMaximumTargetD - 0xDCE); "    Maximum target descriptor count: %u"...|255-73
3526|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3530|code|ADD             R1, PC; "    Maximum target descriptor count: %u"...|121-68
3532|code|BLX             __printf_chk|255-247-22-238
3536|code|LDRB            R2, [R6,#0xA]|178-122
3538|code|LDRB            R3, [R6,#0xB]|243-122
3540|code|MOVS            R0, #1|1-32
3542|code|LDR             R1, =(aMaximumSegment - 0xDE0); "    Maximum segment descriptor count: %"...|252-73
3544|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3548|code|ADD             R1, PC; "    Maximum segment descriptor count: %"...|121-68
3550|code|BLX             __printf_chk|255-247-14-238
3554|code|LDRB            R3, [R6,#0xD]|115-123
3556|code|LDRB            R1, [R6,#0xC]|49-123
3558|code|MOVS            R0, #1|1-32
3560|code|LDRB            R4, [R6,#0xF]|244-123
3562|code|LDRB            R2, [R6,#0xE]|178-123
3564|code|LSLS            R3, R3, #0x10|27-4
3566|code|ORR.W           R3, R3, R1,LSL#24|67-234-1-99
3570|code|LDR             R1, =(aMaximumDescrip - 0xDFE); "    Maximum descriptor list length: %u "...|246-73
3572|code|ORRS            R3, R4|35-67
3574|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3578|code|ADD             R1, PC; "    Maximum descriptor list length: %u "...|121-68
3580|code|BLX             __printf_chk|255-247-254-237
3584|code|LDRB            R3, [R6,#0x11]|115-124
3586|code|LDRB            R1, [R6,#0x10]|49-124
3588|code|MOVS            R0, #1|1-32
3590|code|LDRB            R4, [R6,#0x13]|244-124
3592|code|LDRB            R2, [R6,#0x12]|178-124
3594|code|LSLS            R3, R3, #0x10|27-4
3596|code|ORR.W           R3, R3, R1,LSL#24|67-234-1-99
3600|code|LDR             R1, =(aMaximumSegment_0 - 0xE1C); "    Maximum segment length: %u bytes\n"|239-73
3602|code|ORRS            R3, R4|35-67
3604|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3608|code|ADD             R1, PC; "    Maximum segment length: %u bytes\n"|121-68
3610|code|BLX             __printf_chk|255-247-240-237
3614|code|LDRB            R0, [R6,#0x15]|112-125
3616|code|LDRB            R3, [R6,#0x14]|51-125
3618|code|LDRB            R1, [R6,#0x17]|241-125
3620|code|LSLS            R0, R0, #0x10|0-4
3622|code|LDRB            R2, [R6,#0x16]|178-125
3624|code|ORR.W           R3, R0, R3,LSL#24|64-234-3-99
3628|code|ORRS            R3, R1|11-67
3630|code|ORRS.W          R2, R3, R2,LSL#8|83-234-2-34
3634|code|BNE.W           loc_10A0|64-240-53-129
3638|code|LDR             R0, =(aInlineDataNotS - 0xE3C); "    Inline data not supported"|231-72
3640|code|ADD             R0, PC; "    Inline data not supported"|120-68
3642|code|BLX             puts|255-247-176-237
3646|code|LDRB            R3, [R6,#0x19]|115-126
3648|code|MOVS            R0, #1|1-32
3650|code|LDRB            R1, [R6,#0x18]|49-126
3652|code|MOV             R5, R0|5-70
3654|code|LDRB            R4, [R6,#0x1B]|244-126
3656|code|ADD.W           R11, R6, #0x2B ; '+'|6-241-43-11
3660|code|LDRB            R2, [R6,#0x1A]|178-126
3662|code|LSLS            R3, R3, #0x10|27-4
3664|code|ORR.W           R3, R3, R1,LSL#24|67-234-1-99
3668|code|LDR             R1, =(aHeldDataLimitU - 0xE64); "    Held data limit: %u bytes\n"|224-73
3670|code|ORRS            R3, R4|35-67
3672|code|LDR.W           R10, =(aVendorSpecific - 0xE72); "        Vendor specific descriptor 0x%0"...|223-248-128-163
3676|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3680|code|ADD             R1, PC; "    Held data limit: %u bytes\n"|121-68
3682|code|BLX             __printf_chk|255-247-204-237
3686|code|LDRB            R3, [R6,#0x1D]|115-127
3688|code|LDRB            R1, [R6,#0x1C]|49-127
3690|code|MOV             R0, R5|40-70
3692|code|LDRB            R7, [R6,#0x1F]|247-127
3694|code|ADD             R10, PC; "        Vendor specific descriptor 0x%0"...|250-68
3696|code|LDRB            R2, [R6,#0x1E]|178-127
3698|code|LSLS            R3, R3, #0x10|27-4
3700|code|ORR.W           R3, R3, R1,LSL#24|67-234-1-99
3704|code|LDR             R1, =(aMaximumStreamD - 0xE88); "    Maximum stream device transfer size"...|217-73
3706|code|ORRS            R3, R7|59-67
3708|code|LDR             R7, =(unk_13008 - 0xE8A)|217-79
3710|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3714|code|LDR             R3, =(aTargetDescript - 0xE8C); "        Target descriptor 0x%02x: %s\n"|217-75
3716|code|ADD             R1, PC; "    Maximum stream device transfer size"...|121-68
3718|code|ADD             R7, PC; unk_13008|127-68
3720|code|ADD             R3, PC; "        Target descriptor 0x%02x: %s\n"|123-68
3722|code|STR             R7, [SP,#0x558+var_548]|4-151
3724|code|STR             R3, [SP,#0x558+read_only]|6-147
3726|code|BLX             __printf_chk|255-247-182-237
3730|code|LDRB.W          R2, [R6,#0x22]|150-248-34-32
3734|code|MOV             R0, R5|40-70
3736|code|LDRB.W          R3, [R6,#0x23]|150-248-35-48
3740|code|MOVS            R4, #0|0-36
3742|code|LDR             R1, =(aTotalConcurren - 0xEAA); "    Total concurrent copies: %u\n"|211-73
3744|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
3748|code|LDR             R3, =(aReserved - 0xEAE); "Reserved"|210-75
3750|code|ADD             R1, PC; "    Total concurrent copies: %u\n"|121-68
3752|code|LDR             R7, =(unk_13008 - 0xED8)|210-79
3754|code|ADD             R3, PC; "Reserved"|123-68
3756|code|STR             R3, [SP,#0x558+size]|7-147
3758|code|BLX             __printf_chk|255-247-166-237
3762|code|LDR             R1, =(aMaximumConcurr - 0xEBE); "    Maximum concurrent copies: %u\n"|209-73
3764|code|MOV             R0, R5|40-70
3766|code|LDRB.W          R2, [R6,#0x24]|150-248-36-32
3770|code|ADD             R1, PC; "    Maximum concurrent copies: %u\n"|121-68
3772|code|LDR.W           R8, =(aReserved - 0xEEE); "Reserved"|223-248-60-131
3776|code|BLX             __printf_chk|255-247-156-237
3780|code|LDRB.W          R3, [R6,#0x25]|150-248-37-48
3784|code|LDR             R1, =(aDataSegmentGra - 0xED6); "    Data segment granularity: %lu bytes"...|205-73
3786|code|MOV             R0, R5|40-70
3788|code|LSL.W           R2, R5, R3|5-250-3-242
3792|code|LDR             R3, =(aSegmentDescrip - 0xEDA); "        Segment descriptor 0x%02x: Rese"...|204-75
3794|code|ADD             R1, PC; "    Data segment granularity: %lu bytes"...|121-68
3796|code|ADD             R7, PC; unk_13008|127-68
3798|code|ADD             R3, PC; "        Segment descriptor 0x%02x: Rese"...|123-68
3800|code|STR             R3, [SP,#0x558+var_538]|8-147
3802|code|BLX             __printf_chk|255-247-144-237
3806|code|LDRB.W          R3, [R6,#0x26]|150-248-38-48
3810|code|LDR             R1, =(aInlineDataGran - 0xEF0); "    Inline data granularity: %lu bytes"...|201-73
3812|code|MOV             R0, R5|40-70
3814|code|LSL.W           R2, R5, R3|5-250-3-242
3818|code|ADD             R8, PC; "Reserved"|248-68
3820|code|ADD             R1, PC; "    Inline data granularity: %lu bytes"...|121-68
3822|code|BLX             __printf_chk|255-247-134-237
3826|code|LDRB.W          R3, [R6,#0x27]|150-248-39-48
3830|code|LDR             R1, =(aHeldDataGranul - 0xF04); "    Held data granularity: %lu bytes\n"|197-73
3832|code|MOV             R0, R5|40-70
3834|code|LSL.W           R2, R5, R3|5-250-3-242
3838|code|LDR             R5, =(aSegmentDescrip_0 - 0xF0C); "        Segment descriptor 0x%02x: %s\n"|196-77
3840|code|ADD             R1, PC; "    Held data granularity: %lu bytes\n"|121-68
3842|code|BLX             __printf_chk|255-247-124-237
3846|code|LDR             R0, =(aImplementedDes - 0xF0E); "    Implemented descriptor list:"|195-72
3848|code|ADD             R5, PC; "        Segment descriptor 0x%02x: %s\n"|125-68
3850|code|ADD             R0, PC; "    Implemented descriptor list:"|120-68
3852|code|BLX             puts|255-247-70-237
3856|code|LDRB.W          R3, [R6,#0x2B]|150-248-43-48
3860|code|CMP             R4, R3|156-66
3862|code|BCS             loc_F92|60-210
3864|code|LDRB.W          R2, [R11,#1]!|27-248-1-47
3868|code|CMP             R2, #0x15|21-42
3870|code|BGT             loc_F4C|21-220
3872|code|ADD.W           R3, R7, #0x80|7-241-128-3
3876|code|B               loc_F32|5-224
3878|code|ADDS            R3, #0x80|128-51
3880|code|SUB.W           R1, R3, #0x100|163-245-128-113
3884|code|LDR             R1, [R1]|9-104
3886|code|CMP             R2, R1|138-66
3888|code|BEQ             loc_F80|38-208
3890|code|LDRB.W          R1, [R3,#-0x7C]|19-248-124-28
3894|code|SUB.W           R0, R3, #0x80|163-241-128-0
3898|code|CMP             R1, #0|0-41
3900|code|BNE             loc_F26|243-209
3902|code|MOV             R3, R8|67-70
3904|code|MOVS            R0, #1|1-32
3906|code|MOV             R1, R5|41-70
3908|code|BLX             __printf_chk|255-247-90-237
3912|code|ADDS            R4, #1|1-52
3914|code|B               loc_F10|225-231
3916|code|CMP             R2, #0xBF|191-42
3918|code|BLE             loc_F84|25-221
3920|code|CMP             R2, #0xDF|223-42
3922|code|BLE             loc_F9A|34-221
3924|code|LDR             R3, [SP,#0x558+var_548]|4-155
3926|code|ADD.W           R3, R3, #0xC00|3-245-64-99
3930|code|B               loc_F68|5-224
3932|code|ADDS            R3, #0x80|128-51
3934|code|SUB.W           R1, R3, #0x100|163-245-128-113
3938|code|LDR             R1, [R1]|9-104
3940|code|CMP             R2, R1|138-66
3942|code|BEQ             loc_F8E|18-208
3944|code|LDRB.W          R1, [R3,#-0x7C]|19-248-124-28
3948|code|SUB.W           R0, R3, #0x80|163-241-128-0
3952|code|CMP             R1, #0|0-41
3954|code|BNE             loc_F5C|243-209
3956|code|LDR             R3, [SP,#0x558+size]|7-155
3958|code|LDR             R1, [SP,#0x558+read_only]|6-153
3960|code|MOVS            R0, #1|1-32
3962|code|BLX             __printf_chk|255-247-64-237
3966|code|B               loc_F48|227-231
3968|code|ADDS            R3, R0, #4|3-29
3970|code|B               loc_F40|221-231
3972|code|LDR             R1, [SP,#0x558+var_538]|8-153
3974|code|MOVS            R0, #1|1-32
3976|code|BLX             __printf_chk|255-247-56-237
3980|code|B               loc_F48|220-231
3982|code|ADDS            R3, R0, #4|3-29
3984|code|B               loc_F76|241-231
3986|code|MOVS            R0, #0xA; c|10-32
3988|code|BLX             putchar|255-247-44-237
3992|code|B               loc_CAE|137-230
3994|code|MOV             R1, R10|81-70
3996|code|MOVS            R0, #1|1-32
3998|code|BLX             __printf_chk|255-247-46-237
4002|code|B               loc_F48|209-231
4004|code|LDR             R3, [SP,#0x558+size]|7-155
4006|code|CMP             R3, #3|3-43
4008|code|BLS.W           loc_1108|64-242-174-128
4012|code|LDRB            R1, [R6,#1]|113-120
4014|code|LDRB            R3, [R6]|51-120
4016|code|LDRB            R2, [R6,#3]|242-120
4018|code|LSLS            R1, R1, #0x10|9-4
4020|code|LDRB            R0, [R6,#2]|176-120
4022|code|ORR.W           R3, R1, R3,LSL#24|65-234-3-99
4026|code|ORRS            R3, R2|19-67
4028|code|LDR             R2, [SP,#0x558+size]|7-154
4030|code|ORR.W           R3, R3, R0,LSL#8|67-234-0-35
4034|code|CMP             R2, R3|154-66
4036|code|BCS             loc_FCE|3-210
4038|code|LDR             R0, =(aReportTooLongF - 0xFCC); "  <<report too long for internal buffer"...|148-72
4040|code|ADD             R0, PC; "  <<report too long for internal buffer"...|120-68
4042|code|BL              sub_13B8|0-240-245-249
4046|code|LDR             R0, =(aReceiveCopyRes_0 - 0xFD4); "Receive copy results (copy status):"|147-72
4048|code|ADD             R0, PC; "Receive copy results (copy status):"|120-68
4050|code|BLX             puts|255-247-228-236
4054|code|LDRSB.W         R3, [R6,#4]|150-249-4-48
4058|code|CMP             R3, #0|0-43
4060|code|BLT.W           loc_1112|192-242-153-128
4064|code|LDR             R2, =(aNo_0 - 0xFE6); "No"|143-74
4066|code|ADD             R2, PC; "No"|122-68
4068|code|LDR             R1, =(aHeldDataDiscar - 0xFEC); "    Held data discarded: %s\n"|143-73
4070|code|MOVS            R0, #1|1-32
4072|code|ADD             R1, PC; "    Held data discarded: %s\n"|121-68
4074|code|BLX             __printf_chk|255-247-8-237
4078|code|LDR             R1, =(aCopyManagerSta - 0xFF6); "    Copy manager status: "|142-73
4080|code|MOVS            R0, #1|1-32
4082|code|ADD             R1, PC; "    Copy manager status: "|121-68
4084|code|BLX             __printf_chk|255-247-2-237
4088|code|LDRB            R3, [R6,#4]|51-121
4090|code|AND.W           R3, R3, #0x7F|3-240-127-3
4094|code|CMP             R3, #1|1-43
4096|code|BEQ.W           loc_1118|0-240-138-128
4100|code|BCC.W           loc_1130|192-240-148-128
4104|code|CMP             R3, #2|2-43
4106|code|BNE.W           loc_1126|64-240-140-128
4110|code|LDR             R0, =(aOperationCompl - 0x1014); "Operation completed with errors"|135-72
4112|code|ADD             R0, PC; "Operation completed with errors"|120-68
4114|code|BLX             puts|255-247-196-236
4118|code|LDRB            R2, [R6,#5]|114-121
4120|code|MOVS            R0, #1|1-32
4122|code|LDRB            R3, [R6,#6]|179-121
4124|code|LDR             R1, =(aSegmentsProces - 0x1026); "    Segments processed: %u\n"|132-73
4126|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
4130|code|ADD             R1, PC; "    Segments processed: %u\n"|121-68
4132|code|BLX             __printf_chk|255-247-234-236
4136|code|LDR             R1, =(aTransferCountU - 0x1032); "    Transfer count units: %u\n"|130-73
4138|code|LDRB            R2, [R6,#7]|242-121
4140|code|MOVS            R0, #1|1-32
4142|code|ADD             R1, PC; "    Transfer count units: %u\n"|121-68
4144|code|BLX             __printf_chk|255-247-228-236
4148|code|LDRB            R3, [R6,#9]|115-122
4150|code|LDRB            R1, [R6,#8]|49-122
4152|code|MOVS            R0, #1|1-32
4154|code|LDRB            R4, [R6,#0xB]|244-122
4156|code|LDRB            R2, [R6,#0xA]|178-122
4158|code|LSLS            R3, R3, #0x10|27-4
4160|code|ORR.W           R3, R3, R1,LSL#24|67-234-1-99
4164|code|LDR             R1, =(aTransferCountU_0 - 0x104C); "    Transfer count: %u\n"|124-73
4166|code|ORRS            R3, R4|35-67
4168|code|ADD             R1, PC; "    Transfer count: %u\n"|121-68
4170|code|ORR.W           R2, R3, R2,LSL#8|67-234-2-34
4174|code|BLX             __printf_chk|255-247-214-236
4178|code|B               loc_CAE|44-230
4180|code|LDR             R3, [SP,#0x558+size]|7-155
4182|code|CMP             R3, #3|3-43
4184|code|BLS             loc_10FE|81-217
4186|code|LDRB            R2, [R6,#1]|114-120
4188|code|LDRB            R1, [R6]|49-120
4190|code|LDRB            R3, [R6,#3]|243-120
4192|code|LSLS            R2, R2, #0x10|18-4
4194|code|LDRB            R4, [R6,#2]|180-120
4196|code|ORR.W           R2, R2, R1,LSL#24|66-234-1-98
4200|code|ORRS            R3, R2|19-67
4202|code|LDR             R2, [SP,#0x558+size]|7-154
4204|code|ORR.W           R4, R3, R4,LSL#8|67-234-4-36
4208|code|ADDS            R3, R4, #3|227-28
4210|code|CMP             R2, R3|154-66
4212|code|BCS             loc_107E|3-210
4214|code|LDR             R0, =(aReportTooLongF - 0x107C); "  <<report too long for internal buffer"...|113-72
4216|code|ADD             R0, PC; "  <<report too long for internal buffer"...|120-68
4218|code|BL              sub_13B8|0-240-157-249
4222|code|CMP             R4, #0x33 ; '3'|51-44
4224|code|BHI             loc_10B6|25-216
4226|code|LDR             R0, =(aNoSegmentDetai - 0x108A); "  <<no segment details, response data l"...|111-72
4228|code|MOV             R1, R4|33-70
4230|code|ADD             R0, PC; "  <<no segment details, response data l"...|120-68
4232|code|BL              sub_13B8|0-240-150-249
4236|code|B               loc_CAE|15-230
4238|code|LDR             R1, [SP,#0x558+size]; len|7-153
4240|code|MOV             R2, R3; no_ascii|26-70
4242|code|MOV             R0, R6; str|48-70
4244|code|BLX             dStrHex|255-247-106-236
4248|code|B               loc_CAE|9-230
4250|code|LDR             R2, =(aYes - 0x10A0); "yes"|106-74
4252|code|ADD             R2, PC; "yes"|122-68
4254|code|B               loc_DB2|136-230
4256|code|LDR             R1, =(aMaximumInlineD - 0x10A8); "    Maximum inline data length: %u byte"...|105-73
4258|code|MOVS            R0, #1|1-32
4260|code|ADD             R1, PC; "    Maximum inline data length: %u byte"...|121-68
4262|code|BLX             __printf_chk|255-247-170-236
4266|code|B               loc_E3E|200-230
4268|code|LDR             R0, =(aReportTooLongF - 0x10B2); "  <<report too long for internal buffer"...|103-72
4270|code|ADD             R0, PC; "  <<report too long for internal buffer"...|120-68
4272|code|BL              sub_13B8|0-240-130-249
4276|code|B               loc_D9A|113-230
4278|code|LDR             R0, =(aReceiveCopyRes_1 - 0x10BE); "Receive copy results (failed segment de"...|102-72
4280|code|ADD             R4, SP, #0x558+var_42C|75-172
4282|code|ADD             R0, PC; "Receive copy results (failed segment de"...|120-68
4284|code|BLX             puts|255-247-110-236
4288|code|LDR             R1, =(aExtendedCopyCo - 0x10CC); "    Extended copy command status: %d\n"|100-73
4290|code|LDRB.W          R2, [R6,#0x38]|150-248-56-32
4294|code|MOVS            R0, #1|1-32
4296|code|ADD             R1, PC; "    Extended copy command status: %d\n"|121-68
4298|code|BLX             __printf_chk|255-247-152-236
4302|code|LDRB.W          R0, [R6,#0x3A]|150-248-58-0
4306|code|LDRB.W          R2, [R6,#0x3B]|150-248-59-32
4310|code|ADD.W           R1, R6, #0x3C ; '<'; sense_buffer|6-241-60-1
4314|code|MOV.W           R3, #0x400|79-244-128-99
4318|code|STR             R4, [SP,#0x558+buff]; buff|1-148
4320|code|ORR.W           R2, R2, R0,LSL#8; sb_len|66-234-0-34
4324|code|LDR             R0, =(asc_1B10 - 0x10EE); "    "|92-72
4326|code|STR             R3, [SP,#0x558+longind]; buff_len|0-147
4328|code|MOVS            R3, #0; raw_sinfo|0-35
4330|code|ADD             R0, PC; "    "|120-68
4332|code|BLX             sg_get_sense_str|255-247-152-236
4336|code|LDR             R1, =(aS - 0x10FA); "%s"|90-73
4338|code|MOV             R2, R4|34-70
4340|code|MOVS            R0, #1|1-32
4342|code|ADD             R1, PC; "%s"|121-68
4344|code|BLX             __printf_chk|255-247-128-236
4348|code|B               loc_CAE|215-229
4350|code|LDR             R0, =(aNotEnoughDataT - 0x1104); "  <<not enough data to procedd report>>"...|88-72
4352|code|ADD             R0, PC; "  <<not enough data to procedd report>>"...|120-68
4354|code|BL              sub_13B8|0-240-89-249
4358|code|B               loc_CAE|210-229
4360|code|LDR             R0, =(aNotEnoughDataT - 0x110E); "  <<not enough data to procedd report>>"...|86-72
4362|code|ADD             R0, PC; "  <<not enough data to procedd report>>"...|120-68
4364|code|BL              sub_13B8|0-240-84-249
4368|code|B               loc_CAE|205-229
4370|code|LDR             R2, =(aYes_0 - 0x1118); "Yes"|85-74
4372|code|ADD             R2, PC; "Yes"|122-68
4374|code|B               loc_FE4|101-231
4376|code|LDR             R0, =(aOperationCompl_0 - 0x111E); "Operation completed without errors"|84-72
4378|code|ADD             R0, PC; "Operation completed without errors"|120-68
4380|code|BLX             puts|255-247-62-236
4384|code|B               loc_1016|121-231
4386|code|BLX             __stack_chk_fail|255-247-54-236
4390|code|LDR             R0, =(unk_1F20 - 0x112C)|82-72
4392|code|ADD             R0, PC; unk_1F20 ; s|120-68
4394|code|BLX             puts|255-247-56-236
4398|code|B               loc_1016|114-231
4400|code|LDR             R0, =(aOperationInPro - 0x1136); "Operation in progress"|80-72
4402|code|ADD             R0, PC; "Operation in progress"|120-68
4404|code|BLX             puts|255-247-50-236
4408|code|B               loc_1016|109-231
4410|code|NEGS            R0, R0; errnum|64-66
4412|code|BLX             safe_strerror|255-247-106-236
4416|code|MOV             R1, R0|1-70
4418|code|LDR             R0, =(aSgCopyResultsC - 0x1148); "sg_copy_results: close error: %s\n"|77-72
4420|code|ADD             R0, PC; "sg_copy_results: close error: %s\n"|120-68
4422|code|BL              sub_13B8|0-240-55-249
4426|code|MOVS            R0, #0xF|15-32
4428|code|B               loc_B3E|247-228
4430|data|ALIGN 0x10|0-191
4432|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xA74|252-36-1-0
4436|data|DCD __stack_chk_guard_ptr - 0x12F70|108-0-0-0
4440|data|DCD aFhhlPrrsvvx - 0xA84; "fhHl:prRsvVx:"|248-9-0-0
4444|data|DCD off_14208 - 0xA86; "failed"|130-55-1-0
4448|data|DCD optarg_ptr - 0x12F70|140-0-0-0
4452|data|DCD aSgCopyResultsV - 0xB38; "sg_copy_results: version: %s\n"|100-13-0-0
4456|data|DCD a1920140515 - 0xB3A; "1.9 20140515"|130-13-0-0
4460|data|DCD aUsageSgCopyRes - 0xB6A; "Usage: sg_copy_results [--failed|--para"...|34-9-0-0
4464|data|DCD aBadArgumentToX - 0xB8C; "bad argument to '--xfer_len'\n"|64-13-0-0
4468|data|DCD aUnrecognisedOp - 0xBAC; "unrecognised option code 0x%x ??\n"|64-13-0-0
4472|data|DCD aUsageSgCopyRes - 0xBB6; "Usage: sg_copy_results [--failed|--para"...|214-8-0-0
4476|data|DCD optind_ptr - 0x12F70|112-0-0-0
4480|data|DCD aUnexpectedExtr - 0xBE0; "Unexpected extra argument: %s\n"|72-13-0-0
4484|data|DCD aUsageSgCopyRes - 0xC02; "Usage: sg_copy_results [--failed|--para"...|138-8-0-0
4488|data|DCD aMissingDeviceN - 0xC10; "missing device name!\n"|0-13-0-0
4492|data|DCD aUsageSgCopyRes - 0xC1A; "Usage: sg_copy_results [--failed|--para"...|114-8-0-0
4496|data|DCD off_12E54 - 0xC64; "Receive copy status(LID1)"|240-33-1-0
4500|data|DCD aXferLenDIsOutO - 0xCD2; "xfer_len (%d) is out of range ( < %d)\n"|118-12-0-0
4504|data|DCD aUsageSgCopyRes - 0xCDC; "Usage: sg_copy_results [--failed|--para"...|176-7-0-0
4508|data|DCD aOutOfRangeServ - 0xCEA; "Out of range service action"|102-7-0-0
4512|data|DCD aSgCopyResultsO - 0xCF2; "sg_copy_results: out of memory\n"|126-12-0-0
4516|data|DCD aBadArgumentToL - 0xD00; "bad argument to '--list_id'\n"|124-11-0-0
4520|data|DCD aSgCopyResultsO_0 - 0xD1A; "sg_copy_results: open error: %s: %s\n"|118-12-0-0
4524|data|DCD aScsiSFailedS - 0xD38; "  SCSI %s failed: %s\n"|204-12-0-0
4528|data|DCD aSgCopyResultsC - 0xD5A; "sg_copy_results: close error: %s\n"|46-18-0-0
4532|data|DCD aSgCopyResultsI - 0xD7A; "sg_copy_results: issue %s to device %s"...|62-12-0-0
4536|data|DCD aReceiveCopyRes - 0xDA2; "Receive copy results (report operating "...|122-13-0-0
4540|data|DCD aNo - 0xDB4; "no"|188-6-0-0
4544|data|DCD aSupportsNoList - 0xDBC; "    Supports no list identifier (SNLID)"...|148-13-0-0
4548|data|DCD aMaximumTargetD - 0xDCE; "    Maximum target descriptor count: %u"...|178-13-0-0
4552|data|DCD aMaximumSegment - 0xDE0; "    Maximum segment descriptor count: %"...|204-13-0-0
4556|data|DCD aMaximumDescrip - 0xDFE; "    Maximum descriptor list length: %u "...|218-13-0-0
4560|data|DCD aMaximumSegment_0 - 0xE1C; "    Maximum segment length: %u bytes\n"|236-13-0-0
4564|data|DCD aInlineDataNotS - 0xE3C; "    Inline data not supported"|244-13-0-0
4568|data|DCD aHeldDataLimitU - 0xE64; "    Held data limit: %u bytes\n"|24-14-0-0
4572|data|DCD aVendorSpecific - 0xE72; "        Vendor specific descriptor 0x%0"...|158-15-0-0
4576|data|DCD aMaximumStreamD - 0xE88; "    Maximum stream device transfer size"...|20-14-0-0
4580|data|DCD unk_13008 - 0xE8A|126-33-1-0
4584|data|DCD aTargetDescript - 0xE8C; "        Target descriptor 0x%02x: %s\n"|176-15-0-0
4588|data|DCD aTotalConcurren - 0xEAA; "    Total concurrent copies: %u\n"|38-14-0-0
4592|data|DCD aReserved - 0xEAE; "Reserved"|122-16-0-0
4596|data|DCD unk_13008 - 0xED8|48-33-1-0
4600|data|DCD aMaximumConcurr - 0xEBE; "    Maximum concurrent copies: %u\n"|54-14-0-0
4604|data|DCD aReserved - 0xEEE; "Reserved"|58-16-0-0
4608|data|DCD aDataSegmentGra - 0xED6; "    Data segment granularity: %lu bytes"...|66-14-0-0
4612|data|DCD aSegmentDescrip - 0xEDA; "        Segment descriptor 0x%02x: Rese"...|6-15-0-0
4616|data|DCD aInlineDataGran - 0xEF0; "    Inline data granularity: %lu bytes"...|84-14-0-0
4620|data|DCD aHeldDataGranul - 0xF04; "    Held data granularity: %lu bytes\n"|104-14-0-0
4624|data|DCD aSegmentDescrip_0 - 0xF0C; "        Segment descriptor 0x%02x: %s\n"|172-14-0-0
4628|data|DCD aImplementedDes - 0xF0E; "    Implemented descriptor list:"|134-14-0-0
4632|data|DCD aReportTooLongF - 0xFCC; "  <<report too long for internal buffer"...|124-10-0-0
4636|data|DCD aReceiveCopyRes_0 - 0xFD4; "Receive copy results (copy status):"|144-14-0-0
4640|data|DCD aNo_0 - 0xFE6; "No"|146-4-0-0
4644|data|DCD aHeldDataDiscar - 0xFEC; "    Held data discarded: %s\n"|156-14-0-0
4648|data|DCD aCopyManagerSta - 0xFF6; "    Copy manager status: "|178-14-0-0
4652|data|DCD aOperationCompl - 0x1014; "Operation completed with errors"|236-14-0-0
4656|data|DCD aSegmentsProces - 0x1026; "    Segments processed: %u\n"|14-15-0-0
4660|data|DCD aTransferCountU - 0x1032; "    Transfer count units: %u\n"|30-15-0-0
4664|data|DCD aTransferCountU_0 - 0x104C; "    Transfer count: %u\n"|36-15-0-0
4668|data|DCD aReportTooLongF - 0x107C; "  <<report too long for internal buffer"...|204-9-0-0
4672|data|DCD aNoSegmentDetai - 0x108A; "  <<no segment details, response data l"...|250-9-0-0
4676|data|DCD aYes - 0x10A0; "yes"|204-3-0-0
4680|data|DCD aMaximumInlineD - 0x10A8; "    Maximum inline data length: %u byte"...|168-11-0-0
4684|data|DCD aReportTooLongF - 0x10B2; "  <<report too long for internal buffer"...|150-9-0-0
4688|data|DCD aReceiveCopyRes_1 - 0x10BE; "Receive copy results (failed segment de"...|250-9-0-0
4692|data|DCD aExtendedCopyCo - 0x10CC; "    Extended copy command status: %d\n"|28-10-0-0
4696|data|DCD asc_1B10 - 0x10EE; "    "|34-10-0-0
4700|data|DCD aS - 0x10FA; "%s"|30-10-0-0
4704|data|DCD aNotEnoughDataT - 0x1104; "  <<not enough data to procedd report>>"...|24-9-0-0
4708|data|DCD aNotEnoughDataT - 0x110E; "  <<not enough data to procedd report>>"...|14-9-0-0
4712|data|DCD aYes_0 - 0x1118; "Yes"|92-3-0-0
4716|data|DCD aOperationCompl_0 - 0x111E; "Operation completed without errors"|190-13-0-0
4720|data|DCD unk_1F20 - 0x112C|244-13-0-0
4724|data|DCD aOperationInPro - 0x1136; "Operation in progress"|142-13-0-0
4728|data|DCD aSgCopyResultsC - 0x1148; "sg_copy_results: close error: %s\n"|64-14-0-0
4732|code|MOV.W           R11, #0|79-240-0-11
4736|code|MOV.W           LR, #0|79-240-0-14
4740|code|POP             {R1}; argc|2-188
4742|code|MOV             R2, SP; ubp_av|106-70
4744|code|PUSH            {R2}; stack_end|4-180
4746|code|PUSH            {R0}; rtld_fini|1-180
4748|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x12B4)|223-248-36-160
4752|code|ADR             R3, off_12B4|8-163
4754|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4756|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x12F70)|223-248-32-192
4760|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4764|code|PUSH.W          {R12}; fini|77-248-4-205
4768|code|LDR             R3, =(__libc_csu_init_ptr - 0x12F70)|6-75
4770|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4774|code|LDR             R0, =(main_ptr - 0x12F70)|6-72
4776|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4780|code|BLX             __libc_start_main|255-247-130-235
4784|code|BLX             abort|255-247-206-235
4788|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12B4|188-28-1-0
4792|data|DCD __libc_csu_fini_ptr - 0x12F70|96-0-0-0
4796|data|DCD __libc_csu_init_ptr - 0x12F70|124-0-0-0
4800|data|DCD main_ptr - 0x12F70|128-0-0-0
4804|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x12D4)|20-48-159-229
4808|code|LDR             R2, =(__gmon_start___ptr_0 - 0x12F70)|20-32-159-229
4812|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4816|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4820|code|CMP             R2, #0|0-0-82-227
4824|code|BXEQ            LR|30-255-47-1
4828|code|B               __gmon_start__|186-253-255-234
4832|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12D4|156-28-1-0
4836|data|DCD __gmon_start___ptr_0 - 0x12F70|120-0-0-0
4840|code|LDR             R3, =(__bss_start__ - 0x12F0)|7-75
4842|code|LDR             R0, =(__bss_start__ - 0x12F4)|8-72
4844|code|ADD             R3, PC; __bss_start__|123-68
4846|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x12FA)|8-74
4848|code|ADD             R0, PC; __bss_start__|120-68
4850|code|ADDS            R3, #3|3-51
4852|code|SUBS            R3, R3, R0|27-26
4854|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4856|code|CMP             R3, #6|6-43
4858|code|BLS             locret_1304|3-217
4860|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x12F70)|5-75
4862|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4864|code|CBZ             R3, locret_1304|3-177
4866|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4868|code|BX              LR|112-71
4870|data|ALIGN 4|0-191
4872|data|DCD __bss_start__ - 0x12F0|216-47-1-0
4876|data|DCD __bss_start__ - 0x12F4|212-47-1-0
4880|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x12FA|118-28-1-0
4884|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x12F70|104-0-0-0
4888|code|LDR             R1, =(__bss_start__ - 0x1320)|8-73
4890|code|LDR             R0, =(__bss_start__ - 0x1324)|9-72
4892|code|ADD             R1, PC; __bss_start__|121-68
4894|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1328)|9-75
4896|code|ADD             R0, PC; __bss_start__|120-68
4898|code|SUBS            R1, R1, R0|9-26
4900|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4902|code|ASRS            R1, R1, #2|137-16
4904|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4908|code|ASRS            R1, R1, #1|73-16
4910|code|BEQ             locret_1338|3-208
4912|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x12F70)|5-74
4914|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4916|code|CBZ             R3, locret_1338|3-177
4918|code|BX              R3; _ITM_registerTMCloneTable|24-71
4920|code|BX              LR|112-71
4922|data|ALIGN 4|0-191
4924|data|DCD __bss_start__ - 0x1320|168-47-1-0
4928|data|DCD __bss_start__ - 0x1324|164-47-1-0
4932|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1328|72-28-1-0
4936|data|DCD _ITM_registerTMCloneTable_ptr - 0x12F70|136-0-0-0
4940|code|PUSH            {R3,LR}|8-181
4942|code|LDR             R3, =(__bss_start__ - 0x1356)|10-75
4944|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1358)|10-74
4946|code|ADD             R3, PC; __bss_start__|123-68
4948|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4950|code|LDRB            R3, [R3]|27-120
4952|code|CBNZ            R3, locret_1376|107-185
4954|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x12F70)|9-75
4956|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
4958|code|CBZ             R3, loc_136A|35-177
4960|code|LDR             R3, =(off_13004 - 0x1366)|8-75
4962|code|ADD             R3, PC; off_13004|123-68
4964|code|LDR             R0, [R3]; off_13004 ; void *|24-104
4966|code|BLX             __cxa_finalize|255-247-252-234
4970|code|BL              sub_12E8|255-247-189-255
4974|code|LDR             R3, =(__bss_start__ - 0x1376)|6-75
4976|code|MOVS            R2, #1|1-34
4978|code|ADD             R3, PC; __bss_start__|123-68
4980|code|STRB            R2, [R3]|26-112
4982|code|POP             {R3,PC}|8-189
4984|data|DCD __bss_start__ - 0x1356|114-47-1-0
4988|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1358|24-28-1-0
4992|data|DCD __cxa_finalize_ptr_0 - 0x12F70|100-0-0-0
4996|data|DCD off_13004 - 0x1366|158-28-1-0
5000|data|DCD __bss_start__ - 0x1376|82-47-1-0
5004|code|LDR             R0, =(dword_12E50 - 0x1394)|7-72
5006|code|PUSH            {R3,LR}|8-181
5008|code|ADD             R0, PC; dword_12E50|120-68
5010|code|LDR             R2, [R0]|2-104
5012|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x139A)|6-75
5014|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
5016|code|CBNZ            R2, loc_13A0|18-185
5018|code|POP.W           {R3,LR}|189-232-8-64
5022|code|B               sub_1318|187-231
5024|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x12F70)|4-74
5026|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
5028|code|CMP             R3, #0|0-43
5030|code|BEQ             loc_139A|248-208
5032|code|BLX             R3; _Jv_RegisterClasses|152-71
5034|code|B               loc_139A|246-231
5036|data|DCD dword_12E50 - 0x1394|188-26-1-0
5040|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x139A|214-27-1-0
5044|data|DCD _Jv_RegisterClasses_ptr - 0x12F70|132-0-0-0
5048|code|PUSH            {R0-R3}|15-180
5050|code|MOVS            R1, #1|1-33
5052|code|LDR             R0, =(_GLOBAL_OFFSET_TABLE_ - 0x13C4)|13-72
5054|code|PUSH            {R4-R6,LR}|112-181
5056|code|ADD             R0, PC; _GLOBAL_OFFSET_TABLE_|120-68
5058|code|LDR             R5, =(__stack_chk_guard_ptr - 0x12F70)|13-77
5060|code|SUB             SP, SP, #8|130-176
5062|code|ADD             R3, SP, #0x28+varg_r0|6-171
5064|code|LDR             R4, =(stderr_ptr - 0x12F70)|12-76
5066|code|LDR             R5, [R0,R5]; __stack_chk_guard|69-89
5068|code|LDR.W           R2, [R3],#4|83-248-4-43
5072|code|LDR             R6, [R5]|46-104
5074|code|STR             R3, [SP,#0x28+var_28]|0-147
5076|code|STR             R6, [SP,#0x28+var_24]|1-150
5078|code|LDR             R0, [R0,R4]; stderr|0-89
5080|code|LDR             R0, [R0]|0-104
5082|code|BLX             __vfprintf_chk|255-247-242-234
5086|code|LDR             R2, [SP,#0x28+var_24]|1-154
5088|code|LDR             R3, [R5]|43-104
5090|code|CMP             R2, R3|154-66
5092|code|BNE             loc_13F0|4-209
5094|code|ADD             SP, SP, #8|2-176
5096|code|POP.W           {R4-R6,LR}|189-232-112-64
5100|code|ADD             SP, SP, #0x10|4-176
5102|code|BX              LR|112-71
5104|code|BLX             __stack_chk_fail|255-247-206-234
5108|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x13C4|172-27-1-0
5112|data|DCD __stack_chk_guard_ptr - 0x12F70|108-0-0-0
5116|data|DCD stderr_ptr - 0x12F70|116-0-0-0
5120|code|PUSH.W          {R3-R9,LR}|45-233-248-67
5124|code|MOV             R7, R0|7-70
5126|code|LDR             R6, =(off_12E4C - 0x1412)|12-78
5128|code|MOV             R8, R1|136-70
5130|code|LDR             R5, =(off_12E48 - 0x1418)|12-77
5132|code|MOV             R9, R2|145-70
5134|code|ADD             R6, PC; off_12E4C|126-68
5136|code|BLX             .init_proc|255-247-150-234
5140|code|ADD             R5, PC; off_12E48|125-68
5142|code|SUBS            R6, R6, R5|118-27
5144|code|ASRS            R6, R6, #2|182-16
5146|code|BEQ             locret_1432|10-208
5148|code|SUBS            R5, #4|4-61
5150|code|MOVS            R4, #0|0-36
5152|code|ADDS            R4, #1|1-52
5154|code|LDR.W           R3, [R5,#4]!|85-248-4-63
5158|code|MOV             R0, R7|56-70
5160|code|MOV             R1, R8|65-70
5162|code|MOV             R2, R9|74-70
5164|code|BLX             R3|152-71
5166|code|CMP             R4, R6|180-66
5168|code|BNE             loc_1420|246-209
5170|code|POP.W           {R3-R9,PC}|189-232-248-131
5174|data|ALIGN 4|0-191
5176|data|DCD off_12E4C - 0x1412|58-26-1-0
5180|data|DCD off_12E48 - 0x1418|48-26-1-0
5184|code|BX              LR|112-71
5186|data|ALIGN 4|0-191
5188|code|PUSH            {R3,LR}; _fini|8-64-45-233
5192|code|POP             {R3,PC}|8-128-189-232
77384|data|DCD sub_138C+1|141-19-0-0
77388|data|DCD sub_134C+1|77-19-0-0
77392|data|DCD 0|0-0-0-0
77396|data|DCD aReceiveCopySta; "Receive copy status(LID1)"|172-31-0-0
77400|data|DCD aReceiveCopyDat; "Receive copy data(LID1)"|200-31-0-0
77404|data|DCD aReceiveCopy0x2; "Receive copy [0x2]"|224-31-0-0
77408|data|DCD aReceiveCopyOpe; "Receive copy operating parameters"|244-31-0-0
77412|data|DCD aReceiveCopyFai; "Receive copy failure details(LID1)"|24-32-0-0
77416|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
77424|data|Elf32_Dyn <1, <0xFB>>; DT_NEEDED libc.so.6|1-0-0-0-251-0-0-0
77432|data|Elf32_Dyn <1, <0x19A>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-154-1-0-0
77440|data|Elf32_Dyn <0xC, <0x940>>; DT_INIT|12-0-0-0-64-9-0-0
77448|data|Elf32_Dyn <0xD, <0x1444>>; DT_FINI|13-0-0-0-68-20-0-0
77456|data|Elf32_Dyn <0x19, <0x12E48>>; DT_INIT_ARRAY|25-0-0-0-72-46-1-0
77464|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
77472|data|Elf32_Dyn <0x1A, <0x12E4C>>; DT_FINI_ARRAY|26-0-0-0-76-46-1-0
77480|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
77488|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
77496|data|Elf32_Dyn <5, <0x4D4>>; DT_STRTAB|5-0-0-0-212-4-0-0
77504|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
77512|data|Elf32_Dyn <0xA, <0x231>>; DT_STRSZ|10-0-0-0-49-2-0-0
77520|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
77528|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
77536|data|Elf32_Dyn <3, <0x12F70>>; DT_PLTGOT|3-0-0-0-112-47-1-0
77544|data|Elf32_Dyn <2, <0xA8>>; DT_PLTRELSZ|2-0-0-0-168-0-0-0
77552|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
77560|data|Elf32_Dyn <0x17, <0x898>>; DT_JMPREL|23-0-0-0-152-8-0-0
77568|data|Elf32_Dyn <0x11, <0x7A0>>; DT_REL|17-0-0-0-160-7-0-0
77576|data|Elf32_Dyn <0x12, <0xF8>>; DT_RELSZ|18-0-0-0-248-0-0-0
77584|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
77592|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
77600|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
77608|data|Elf32_Dyn <0x6FFFFFFE, <0x760>>; DT_VERNEED|254-255-255-111-96-7-0-0
77616|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
77624|data|Elf32_Dyn <0x6FFFFFF0, <0x706>>; DT_VERSYM|240-255-255-111-6-7-0-0
77632|data|Elf32_Dyn <0x6FFFFFFA, <0x16>>; DT_RELCOUNT|250-255-255-111-22-0-0-0
77640|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
77680|data|DCD stru_12E68|104-46-1-0
77684|data|DCD 0|0-0-0-0
77688|data|DCD dword_0|0-0-0-0
77692|data|DCD __imp___cxa_finalize|208-66-1-0
77696|data|DCD __imp_dStrHex|212-66-1-0
77700|data|DCD __imp_free|216-66-1-0
77704|data|DCD __imp_sg_cmds_close_device|224-66-1-0
77708|data|DCD __imp___stack_chk_fail|232-66-1-0
77712|data|DCD __imp_puts|240-66-1-0
77716|data|DCD __imp_malloc|244-66-1-0
77720|data|DCD __imp___libc_start_main|248-66-1-0
77724|data|DCD __imp___vfprintf_chk|252-66-1-0
77728|data|DCD __imp___gmon_start__|52-67-1-0
77732|data|DCD __imp_getopt_long|0-67-1-0
77736|data|DCD __imp_memset|4-67-1-0
77740|data|DCD __imp_putchar|8-67-1-0
77744|data|DCD __imp___printf_chk|12-67-1-0
77748|data|DCD __imp_sg_ll_receive_copy_results|16-67-1-0
77752|data|DCD __imp_safe_strerror|20-67-1-0
77756|data|DCD __imp_sg_get_sense_str|24-67-1-0
77760|data|DCD __imp_sg_get_category_sense_str|28-67-1-0
77764|data|DCD __imp_sg_get_num|32-67-1-0
77768|data|DCD __imp_sg_cmds_open_device|36-67-1-0
77772|data|DCD __imp_abort|44-67-1-0
77776|data|DCD __libc_csu_fini+1|65-20-0-0
77780|data|DCD __imp___cxa_finalize|208-66-1-0
77784|data|DCD _ITM_deregisterTMCloneTable|48-67-1-0
77788|data|DCD __stack_chk_guard|220-66-1-0
77792|data|DCD optind|228-66-1-0
77796|data|DCD stderr|236-66-1-0
77800|data|DCD __imp___gmon_start__|52-67-1-0
77804|data|DCD __libc_csu_init+1|1-20-0-0
77808|data|DCD main+1|93-10-0-0
77812|data|DCD _Jv_RegisterClasses|56-67-1-0
77816|data|DCD _ITM_registerTMCloneTable|60-67-1-0
77820|data|DCD optarg|40-67-1-0
82632|data|% 1; Alternative name is '__bss_start'|255
