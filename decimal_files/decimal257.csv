address|type|disassembly|bytes
0|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
4|data|DCB 1; File class: 32-bit|1
5|data|DCB 1; Data encoding: little-endian|1
6|data|DCB 1; File version|1
7|data|DCB 0; OS/ABI: UNIX System V ABI|0
8|data|DCB 0; ABI Version|0
9|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
16|data|DCW 3; File type: Shared object|3-0
18|data|DCW 0x28; Machine: ARM|40-0
20|data|DCD 1; File version|1-0-0-0
24|data|DCD start+1; Entry point|61-16-0-0
28|data|DCD 0x34; PHT file offset|52-0-0-0
32|data|DCD 0x21E0; SHT file offset|224-33-0-0
36|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
40|data|DCW 0x34; ELF header size|52-0
42|data|DCW 0x20; PHT entry size|32-0
44|data|DCW 9; Number of entries in PHT|9-0
46|data|DCW 0x28; SHT entry size|40-0
48|data|DCW 0x1B; Number of entries in SHT|27-0
50|data|DCW 0x1A; SHT entry index for string table|26-0
52|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
56|data|DCD 0x1824; File offset|36-24-0-0
60|data|DCD unk_1824; Virtual address|36-24-0-0
64|data|DCD 0x1824; Physical address|36-24-0-0
68|data|DCD 8; Size in file image|8-0-0-0
72|data|DCD 8; Size in memory image|8-0-0-0
76|data|DCD 4; Flags|4-0-0-0
80|data|DCD 4; Alignment|4-0-0-0
84|data|DCD 6; Type: PHDR|6-0-0-0
88|data|DCD 0x34; File offset|52-0-0-0
92|data|DCD dword_34; Virtual address|52-0-0-0
96|data|DCD 0x34; Physical address|52-0-0-0
100|data|DCD 0x120; Size in file image|32-1-0-0
104|data|DCD 0x120; Size in memory image|32-1-0-0
108|data|DCD 5; Flags|5-0-0-0
112|data|DCD 4; Alignment|4-0-0-0
116|data|DCD 3; Type: INTERP|3-0-0-0
120|data|DCD 0x154; File offset|84-1-0-0
124|data|DCD aLibLdLinuxArmh; Virtual address|84-1-0-0
128|data|DCD 0x154; Physical address|84-1-0-0
132|data|DCD 0x19; Size in file image|25-0-0-0
136|data|DCD 0x19; Size in memory image|25-0-0-0
140|data|DCD 4; Flags|4-0-0-0
144|data|DCD 1; Alignment|1-0-0-0
148|data|DCD 1; Type: LOAD|1-0-0-0
152|data|DCD 0; File offset|0-0-0-0
156|data|DCD 0; Virtual address|0-0-0-0
160|data|DCD 0; Physical address|0-0-0-0
164|data|DCD 0x1830; Size in file image|48-24-0-0
168|data|DCD 0x1830; Size in memory image|48-24-0-0
172|data|DCD 5; Flags|5-0-0-0
176|data|DCD 0x10000; Alignment|0-0-1-0
180|data|DCD 1; Type: LOAD|1-0-0-0
184|data|DCD 0x1E44; File offset|68-30-0-0
188|data|DCD off_11E44; Virtual address|68-30-1-0
192|data|DCD 0x11E44; Physical address|68-30-1-0
196|data|DCD 0x274; Size in file image|116-2-0-0
200|data|DCD 0x278; Size in memory image|120-2-0-0
204|data|DCD 6; Flags|6-0-0-0
208|data|DCD 0x10000; Alignment|0-0-1-0
212|data|DCD 2; Type: DYNAMIC|2-0-0-0
216|data|DCD 0x1E50; File offset|80-30-0-0
220|data|DCD stru_11E50; Virtual address|80-30-1-0
224|data|DCD 0x11E50; Physical address|80-30-1-0
228|data|DCD 0x108; Size in file image|8-1-0-0
232|data|DCD 0x108; Size in memory image|8-1-0-0
236|data|DCD 6; Flags|6-0-0-0
240|data|DCD 4; Alignment|4-0-0-0
244|data|DCD 4; Type: NOTE|4-0-0-0
248|data|DCD 0x170; File offset|112-1-0-0
252|data|DCD dword_170; Virtual address|112-1-0-0
256|data|DCD 0x170; Physical address|112-1-0-0
260|data|DCD 0x44; Size in file image|68-0-0-0
264|data|DCD 0x44; Size in memory image|68-0-0-0
268|data|DCD 4; Flags|4-0-0-0
272|data|DCD 4; Alignment|4-0-0-0
276|data|DCD 0x6474E551; Type: STACK|81-229-116-100
280|data|DCD 0; File offset|0-0-0-0
284|data|DCD 0; Virtual address|0-0-0-0
288|data|DCD 0; Physical address|0-0-0-0
292|data|DCD 0; Size in file image|0-0-0-0
296|data|DCD 0; Size in memory image|0-0-0-0
300|data|DCD 6; Flags|6-0-0-0
304|data|DCD 0x10; Alignment|16-0-0-0
308|data|DCD 0x6474E552; Type: RO-AFTER|82-229-116-100
312|data|DCD 0x1E44; File offset|68-30-0-0
316|data|DCD off_11E44; Virtual address|68-30-1-0
320|data|DCD 0x11E44; Physical address|68-30-1-0
324|data|DCD 0x1BC; Size in file image|188-1-0-0
328|data|DCD 0x1BC; Size in memory image|188-1-0-0
332|data|DCD 4; Flags|4-0-0-0
336|data|DCD 1; Alignment|1-0-0-0
340|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
365|data|DCB 0, 0, 0|0-0-0
368|data|DCD 4; Name Size|4-0-0-0
372|data|DCD 0x10; Desc Size|16-0-0-0
376|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
380|data|DCB "GNU",0; Name|71-78-85-0
384|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
400|data|DCD 4; Name Size|4-0-0-0
404|data|DCD 0x14; Desc Size|20-0-0-0
408|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
412|data|DCB "GNU",0; Name|71-78-85-0
416|data|DCB 0xF6, 0xAF, 0x7C, 0xA4, 0xAC, 0xF4, 0x6E, 0x30, 8; Desc|246-175-124-164-172-244-110-48-8-9-90-182-128-99-183-126-76-84-32-40
436|data|DCD 3|3-0-0-0
440|data|DCD 0x25|37-0-0-0
444|data|DCD 4|4-0-0-0
448|data|DCD 7|7-0-0-0
452|data|DCD 0x40001101, 0x89200080, 0x4D000408, 0x40440580|1-17-0-64-128-0-32-137-8-4-0-77-128-5-68-64
468|data|DCD 0x25, 0x29, 0x2E|37-0-0-0-41-0-0-0-46-0-0-0
480|data|DCD 0xE834AF00, 0xECD54542, 0xD643096A, 0x7C92E3BB, 0x1B57DABE|0-175-52-232-66-69-213-236-106-9-67-214-187-227-146-124-190-218-87-27-218-205-227-158-216-113-88-28-106-127-154-124-185-141-241-14-12-20-226-158-118-84-60-148-234-211-239-14-89-239-151-121
532|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
548|data|Elf32_Sym <byte_534 - byte_534, aLibLdLinuxArmh, 0, 3, 0, 1>; "/lib/ld-linux-armhf.so.3"|0-0-0-0-84-1-0-0-0-0-0-0-3-0-1-0
564|data|Elf32_Sym <byte_534 - byte_534, dword_11E4C, 0, 3, 0, 0x14>|0-0-0-0-76-30-1-0-0-0-0-0-3-0-20-0
580|data|Elf32_Sym <aSgSetBinaryMod - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_set_binary_mode"|132-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
596|data|Elf32_Sym <aCxaFinalize - byte_534, dword_0, 0, 0x22, 0, 0>; "__cxa_finalize"|163-1-0-0-0-0-0-0-0-0-0-0-34-0-0-0
612|data|Elf32_Sym <aItmDeregistert - byte_534, dword_0, 0, 0x20, 0, 0>; "_ITM_deregisterTMCloneTable"|18-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
628|data|Elf32_Sym <aDstrhex - byte_534, dword_0, 0, 0x12, 0, 0>; "dStrHex"|190-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
644|data|Elf32_Sym <aFree - byte_534, dword_0, 0, 0x12, 0, 0>; "free"|196-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
660|data|Elf32_Sym <aStackChkGuard - byte_534, dword_0, 0, 0x11, 0, 0>; "__stack_chk_guard"|221-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
676|data|Elf32_Sym <aSgCmdsCloseDev - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_cmds_close_device"|234-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
692|data|Elf32_Sym <aOptind - byte_534, dword_0, 0, 0x11, 0, 0>; "optind"|29-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
708|data|Elf32_Sym <aStackChkFail - byte_534, dword_0, 0, 0x12, 0, 0>; "__stack_chk_fail"|51-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
724|data|Elf32_Sym <aPerror - byte_534, dword_0, 0, 0x12, 0, 0>; "perror"|36-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
740|data|Elf32_Sym <aStderr - byte_534, dword_0, 0, 0x11, 0, 0>; "stderr"|116-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
756|data|Elf32_Sym <aFwrite - byte_534, dword_0, 0, 0x12, 0, 0>; "fwrite"|150-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
772|data|Elf32_Sym <aOpen64 - byte_534, dword_0, 0, 0x12, 0, 0>; "open64"|81-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
788|data|Elf32_Sym <aMalloc - byte_534, dword_0, 0, 0x12, 0, 0>; "malloc"|102-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
804|data|Elf32_Sym <aLibcStartMain - byte_534, dword_0, 0, 0x12, 0, 0>; "__libc_start_main"|178-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
820|data|Elf32_Sym <aGmonStart - byte_534, dword_0, 0, 0x20, 0, 0>; "__gmon_start__"|46-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
836|data|Elf32_Sym <aGetoptLong - byte_534, dword_0, 0, 0x12, 0, 0>; "getopt_long"|138-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
852|data|Elf32_Sym <aMemset - byte_534, dword_0, 0, 0x12, 0, 0>; "memset"|74-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
868|data|Elf32_Sym <aStrncpy - byte_534, dword_0, 0, 0x12, 0, 0>; "strncpy"|43-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
884|data|Elf32_Sym <aFwrite+1 - byte_534, dword_0, 0, 0x12, 0, 0>; "write"|151-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
900|data|Elf32_Sym <aSgGetLlnum - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_get_llnum"|177-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
916|data|Elf32_Sym <aFprintfChk - byte_534, dword_0, 0, 0x12, 0, 0>; "__fprintf_chk"|88-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
932|data|Elf32_Sym <aSafeStrerror - byte_534, dword_0, 0, 0x12, 0, 0>; "safe_strerror"|118-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
948|data|Elf32_Sym <aJvRegisterclas - byte_534, dword_0, 0, 0x20, 0, 0>; "_Jv_RegisterClasses"|61-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
964|data|Elf32_Sym <aSgGetCategoryS - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_get_category_sense_str"|151-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
980|data|Elf32_Sym <aSgGetNum - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_get_num"|107-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
996|data|Elf32_Sym <aItmRegistertmc - byte_534, dword_0, 0, 0x20, 0, 0>; "_ITM_registerTMCloneTable"|81-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
1012|data|Elf32_Sym <aSgCmdsOpenDevi - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_cmds_open_device"|255-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1028|data|Elf32_Sym <aSgLlReadLong10 - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_ll_read_long10"|198-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1044|data|Elf32_Sym <aOptarg - byte_534, dword_0, 0, 0x11, 0, 0>; "optarg"|109-1-0-0-0-0-0-0-0-0-0-0-17-0-0-0
1060|data|Elf32_Sym <aSgLlReadLong16 - byte_534, dword_0, 0, 0x12, 0, 0>; "sg_ll_read_long16"|216-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1076|data|Elf32_Sym <aAbort - byte_534, dword_0, 0, 0x12, 0, 0>; "abort"|68-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1092|data|Elf32_Sym <aClose - byte_534, dword_0, 0, 0x12, 0, 0>; "close"|157-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1108|data|Elf32_Sym <aSnprintfChk - byte_534, dword_0, 0, 0x12, 0, 0>; "__snprintf_chk"|123-1-0-0-0-0-0-0-0-0-0-0-18-0-0-0
1124|data|Elf32_Sym <aBssEnd+1 - byte_534, _end, 0, 0x10, 0, 0x18>; "_bss_end__"|30-2-0-0-188-32-1-0-0-0-0-0-16-0-24-0
1140|data|Elf32_Sym <aEdata - byte_534, __bss_start__, 0, 0x10, 0, 0x17>; "_edata"|252-1-0-0-184-32-1-0-0-0-0-0-16-0-23-0
1156|data|Elf32_Sym <aDataStart - byte_534, __data_start, 0, 0x10, 0, 0x17>; "__data_start"|239-1-0-0-0-32-1-0-0-0-0-0-16-0-23-0
1172|data|Elf32_Sym <aEnd_0 - byte_534, _end, 0, 0x10, 0, 0x18>; "_end"|49-2-0-0-188-32-1-0-0-0-0-0-16-0-24-0
1188|data|Elf32_Sym <aBssEnd - byte_534, _end, 0, 0x10, 0, 0x18>; "__bss_end__"|29-2-0-0-188-32-1-0-0-0-0-0-16-0-24-0
1204|data|Elf32_Sym <aLibcCsuInit - byte_534, __libc_csu_init+1, 0x40, 0x12, 0, \; "__libc_csu_init"|70-2-0-0-121-17-0-0-64-0-0-0-18-0-13-0
1220|data|Elf32_Sym <aBssStart - byte_534, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start"|3-2-0-0-184-32-1-0-0-0-0-0-16-0-24-0
1236|data|Elf32_Sym <aLibcStartMain+0xD - byte_534, main+1, 0x500, 0x12, 0, 0xD>; "main"|191-1-0-0-61-11-0-0-0-5-0-0-18-0-13-0
1252|data|Elf32_Sym <aLibcCsuInit+0xA - byte_534, .init_proc, 0, 0x12, 0, 0xB>; "_init"|80-2-0-0-216-9-0-0-0-0-0-0-18-0-11-0
1268|data|Elf32_Sym <aLibcCsuFini - byte_534, __libc_csu_fini+1, 2, 0x12, 0, \; "__libc_csu_fini"|54-2-0-0-185-17-0-0-2-0-0-0-18-0-13-0
1284|data|Elf32_Sym <aBssStart_0 - byte_534, __bss_start__, 0, 0x10, 0, 0x18>; "__bss_start__"|15-2-0-0-184-32-1-0-0-0-0-0-16-0-24-0
1300|data|Elf32_Sym <aLibcCsuFini+0xA - byte_534, .term_proc, 0, 0x12, 0, 0xE>; "_fini"|64-2-0-0-188-17-0-0-0-0-0-0-18-0-14-0
1316|data|Elf32_Sym <aEnd - byte_534, _end, 0, 0x10, 0, 0x18>; "__end__"|41-2-0-0-188-32-1-0-0-0-0-0-16-0-24-0
1332|data|DCB 0|0
1333|data|DCB "libsgutils2.so.2",0|108-105-98-115-103-117-116-105-108-115-50-46-115-111-46-50-0
1350|data|DCB "_ITM_deregisterTMCloneTable",0|95-73-84-77-95-100-101-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1378|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
1393|data|DCB "_Jv_RegisterClasses",0|95-74-118-95-82-101-103-105-115-116-101-114-67-108-97-115-115-101-115-0
1413|data|DCB "_ITM_registerTMCloneTable",0|95-73-84-77-95-114-101-103-105-115-116-101-114-84-77-67-108-111-110-101-84-97-98-108-101-0
1439|data|DCB "sg_get_num",0|115-103-95-103-101-116-95-110-117-109-0
1450|data|DCB "safe_strerror",0|115-97-102-101-95-115-116-114-101-114-114-111-114-0
1464|data|DCB "sg_set_binary_mode",0|115-103-95-115-101-116-95-98-105-110-97-114-121-95-109-111-100-101-0
1483|data|DCB "sg_get_category_sense_str",0|115-103-95-103-101-116-95-99-97-116-101-103-111-114-121-95-115-101-110-115-101-95-115-116-114-0
1509|data|DCB "sg_get_llnum",0|115-103-95-103-101-116-95-108-108-110-117-109-0
1522|data|DCB "dStrHex",0|100-83-116-114-72-101-120-0
1530|data|DCB "sg_ll_read_long10",0|115-103-95-108-108-95-114-101-97-100-95-108-111-110-103-49-48-0
1548|data|DCB "sg_ll_read_long16",0|115-103-95-108-108-95-114-101-97-100-95-108-111-110-103-49-54-0
1566|data|DCB "sg_cmds_close_device",0|115-103-95-99-109-100-115-95-99-108-111-115-101-95-100-101-118-105-99-101-0
1587|data|DCB "sg_cmds_open_device",0|115-103-95-99-109-100-115-95-111-112-101-110-95-100-101-118-105-99-101-0
1607|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
1617|data|DCB "optind",0|111-112-116-105-110-100-0
1624|data|DCB "perror",0|112-101-114-114-111-114-0
1631|data|DCB "strncpy",0|115-116-114-110-99-112-121-0
1639|data|DCB "__stack_chk_fail",0|95-95-115-116-97-99-107-95-99-104-107-95-102-97-105-108-0
1656|data|DCB "abort",0|97-98-111-114-116-0
1662|data|DCB "memset",0|109-101-109-115-101-116-0
1669|data|DCB "open64",0|111-112-101-110-54-52-0
1676|data|DCB "__fprintf_chk",0|95-95-102-112-114-105-110-116-102-95-99-104-107-0
1690|data|DCB "malloc",0|109-97-108-108-111-99-0
1697|data|DCB "optarg",0|111-112-116-97-114-103-0
1704|data|DCB "stderr",0|115-116-100-101-114-114-0
1711|data|DCB "__snprintf_chk",0|95-95-115-110-112-114-105-110-116-102-95-99-104-107-0
1726|data|DCB "getopt_long",0|103-101-116-111-112-116-95-108-111-110-103-0
1738|data|DCB "fwrite",0|102-119-114-105-116-101-0
1745|data|DCB "close",0|99-108-111-115-101-0
1751|data|DCB "__cxa_finalize",0|95-95-99-120-97-95-102-105-110-97-108-105-122-101-0
1766|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
1784|data|DCB "free",0|102-114-101-101-0
1789|data|DCB "ld-linux-armhf.so.3",0|108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
1809|data|DCB "__stack_chk_guard",0|95-95-115-116-97-99-107-95-99-104-107-95-103-117-97-114-100-0
1827|data|DCB "__data_start",0|95-95-100-97-116-97-95-115-116-97-114-116-0
1840|data|DCB "_edata",0|95-101-100-97-116-97-0
1847|data|DCB "__bss_start",0|95-95-98-115-115-95-115-116-97-114-116-0
1859|data|DCB "__bss_start__",0|95-95-98-115-115-95-115-116-97-114-116-95-95-0
1873|data|DCB "__bss_end__",0|95-95-98-115-115-95-101-110-100-95-95-0
1885|data|DCB "__end__",0|95-95-101-110-100-95-95-0
1893|data|DCB "_end",0|95-101-110-100-0
1898|data|DCB "__libc_csu_fini",0|95-95-108-105-98-99-95-99-115-117-95-102-105-110-105-0
1914|data|DCB "__libc_csu_init",0|95-95-108-105-98-99-95-99-115-117-95-105-110-105-116-0
1930|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
1940|data|DCW 0|0-0
1942|data|DCW 0|0-0
1944|data|DCW 0|0-0
1946|data|DCW 0; local  symbol: sg_set_binary_mode|0-0
1948|data|DCW 2; __cxa_finalize@@GLIBC_2.4|2-0
1950|data|DCW 0; local  symbol: _ITM_deregisterTMCloneTable|0-0
1952|data|DCW 0; local  symbol: dStrHex|0-0
1954|data|DCW 2; free@@GLIBC_2.4|2-0
1956|data|DCW 3; __stack_chk_guard@@GLIBC_2.4|3-0
1958|data|DCW 0; local  symbol: sg_cmds_close_device|0-0
1960|data|DCW 2; optind@@GLIBC_2.4|2-0
1962|data|DCW 2; __stack_chk_fail@@GLIBC_2.4|2-0
1964|data|DCW 2; perror@@GLIBC_2.4|2-0
1966|data|DCW 2; stderr@@GLIBC_2.4|2-0
1968|data|DCW 2; fwrite@@GLIBC_2.4|2-0
1970|data|DCW 2; open64@@GLIBC_2.4|2-0
1972|data|DCW 2; malloc@@GLIBC_2.4|2-0
1974|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
1976|data|DCW 0; local  symbol: __gmon_start__|0-0
1978|data|DCW 2; getopt_long@@GLIBC_2.4|2-0
1980|data|DCW 2; memset@@GLIBC_2.4|2-0
1982|data|DCW 2; strncpy@@GLIBC_2.4|2-0
1984|data|DCW 2; write@@GLIBC_2.4|2-0
1986|data|DCW 0; local  symbol: sg_get_llnum|0-0
1988|data|DCW 2; __fprintf_chk@@GLIBC_2.4|2-0
1990|data|DCW 0; local  symbol: safe_strerror|0-0
1992|data|DCW 0; local  symbol: _Jv_RegisterClasses|0-0
1994|data|DCW 0; local  symbol: sg_get_category_sense_str|0-0
1996|data|DCW 0; local  symbol: sg_get_num|0-0
1998|data|DCW 0; local  symbol: _ITM_registerTMCloneTable|0-0
2000|data|DCW 0; local  symbol: sg_cmds_open_device|0-0
2002|data|DCW 0; local  symbol: sg_ll_read_long10|0-0
2004|data|DCW 2; optarg@@GLIBC_2.4|2-0
2006|data|DCW 0; local  symbol: sg_ll_read_long16|0-0
2008|data|DCW 2; abort@@GLIBC_2.4|2-0
2010|data|DCW 2; close@@GLIBC_2.4|2-0
2012|data|DCW 2; __snprintf_chk@@GLIBC_2.4|2-0
2014|data|DCW 1; global symbol: _bss_end__|1-0
2016|data|DCW 1; global symbol: _edata|1-0
2018|data|DCW 1; global symbol: __data_start|1-0
2020|data|DCW 1; global symbol: _end|1-0
2022|data|DCW 1; global symbol: __bss_end__|1-0
2024|data|DCW 1; global symbol: __libc_csu_init|1-0
2026|data|DCW 1; global symbol: __bss_start|1-0
2028|data|DCW 1; global symbol: main|1-0
2030|data|DCW 1; global symbol: _init|1-0
2032|data|DCW 1; global symbol: __libc_csu_fini|1-0
2034|data|DCW 1; global symbol: __bss_start__|1-0
2036|data|DCW 1; global symbol: _fini|1-0
2038|data|DCW 1; global symbol: __end__|1-0
2040|data|Elf32_Verneed <1, 1, aLdLinuxArmhfSo - byte_534, 0x10, 0x20>; "ld-linux-armhf.so.3"|1-0-1-0-201-1-0-0-16-0-0-0-32-0-0-0
2056|data|Elf32_Vernaux <0xD696914, 0, 3, aGlibc24 - byte_534, 0>; "GLIBC_2.4"|20-105-105-13-0-0-3-0-86-2-0-0-0-0-0-0
2072|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_534, 0x10, 0>; "libc.so.6"|1-0-1-0-19-1-0-0-16-0-0-0-0-0-0-0
2088|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_534, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-86-2-0-0-0-0-0-0
2104|data|Elf32_Rel <0x11E44, 0x17>; R_ARM_RELATIVE|68-30-1-0-23-0-0-0
2112|data|Elf32_Rel <0x11E48, 0x17>; R_ARM_RELATIVE|72-30-1-0-23-0-0-0
2120|data|Elf32_Rel <0x11FD0, 0x17>; R_ARM_RELATIVE|208-31-1-0-23-0-0-0
2128|data|Elf32_Rel <0x11FEC, 0x17>; R_ARM_RELATIVE|236-31-1-0-23-0-0-0
2136|data|Elf32_Rel <0x11FF0, 0x17>; R_ARM_RELATIVE|240-31-1-0-23-0-0-0
2144|data|Elf32_Rel <0x12004, 0x17>; R_ARM_RELATIVE|4-32-1-0-23-0-0-0
2152|data|Elf32_Rel <0x12008, 0x17>; R_ARM_RELATIVE|8-32-1-0-23-0-0-0
2160|data|Elf32_Rel <0x12018, 0x17>; R_ARM_RELATIVE|24-32-1-0-23-0-0-0
2168|data|Elf32_Rel <0x12028, 0x17>; R_ARM_RELATIVE|40-32-1-0-23-0-0-0
2176|data|Elf32_Rel <0x12038, 0x17>; R_ARM_RELATIVE|56-32-1-0-23-0-0-0
2184|data|Elf32_Rel <0x12048, 0x17>; R_ARM_RELATIVE|72-32-1-0-23-0-0-0
2192|data|Elf32_Rel <0x12058, 0x17>; R_ARM_RELATIVE|88-32-1-0-23-0-0-0
2200|data|Elf32_Rel <0x12068, 0x17>; R_ARM_RELATIVE|104-32-1-0-23-0-0-0
2208|data|Elf32_Rel <0x12078, 0x17>; R_ARM_RELATIVE|120-32-1-0-23-0-0-0
2216|data|Elf32_Rel <0x12088, 0x17>; R_ARM_RELATIVE|136-32-1-0-23-0-0-0
2224|data|Elf32_Rel <0x12098, 0x17>; R_ARM_RELATIVE|152-32-1-0-23-0-0-0
2232|data|Elf32_Rel <0x11FD4, 0x415>; R_ARM_GLOB_DAT __cxa_finalize|212-31-1-0-21-4-0-0
2240|data|Elf32_Rel <0x11FD8, 0x515>; R_ARM_GLOB_DAT _ITM_deregisterTMCloneTable|216-31-1-0-21-5-0-0
2248|data|Elf32_Rel <0x11FDC, 0x815>; R_ARM_GLOB_DAT __stack_chk_guard|220-31-1-0-21-8-0-0
2256|data|Elf32_Rel <0x11FE0, 0xA15>; R_ARM_GLOB_DAT optind|224-31-1-0-21-10-0-0
2264|data|Elf32_Rel <0x11FE4, 0xD15>; R_ARM_GLOB_DAT stderr|228-31-1-0-21-13-0-0
2272|data|Elf32_Rel <0x11FE8, 0x1215>; R_ARM_GLOB_DAT __gmon_start__|232-31-1-0-21-18-0-0
2280|data|Elf32_Rel <0x11FF4, 0x1A15>; R_ARM_GLOB_DAT _Jv_RegisterClasses|244-31-1-0-21-26-0-0
2288|data|Elf32_Rel <0x11FF8, 0x1D15>; R_ARM_GLOB_DAT _ITM_registerTMCloneTable|248-31-1-0-21-29-0-0
2296|data|Elf32_Rel <0x11FFC, 0x2015>; R_ARM_GLOB_DAT optarg|252-31-1-0-21-32-0-0
2304|data|Elf32_Rel <0x11F64, 0x316>; R_ARM_JUMP_SLOT sg_set_binary_mode|100-31-1-0-22-3-0-0
2312|data|Elf32_Rel <0x11F68, 0x416>; R_ARM_JUMP_SLOT __cxa_finalize|104-31-1-0-22-4-0-0
2320|data|Elf32_Rel <0x11F6C, 0x616>; R_ARM_JUMP_SLOT dStrHex|108-31-1-0-22-6-0-0
2328|data|Elf32_Rel <0x11F70, 0x716>; R_ARM_JUMP_SLOT free|112-31-1-0-22-7-0-0
2336|data|Elf32_Rel <0x11F74, 0x916>; R_ARM_JUMP_SLOT sg_cmds_close_device|116-31-1-0-22-9-0-0
2344|data|Elf32_Rel <0x11F78, 0xB16>; R_ARM_JUMP_SLOT __stack_chk_fail|120-31-1-0-22-11-0-0
2352|data|Elf32_Rel <0x11F7C, 0xC16>; R_ARM_JUMP_SLOT perror|124-31-1-0-22-12-0-0
2360|data|Elf32_Rel <0x11F80, 0xE16>; R_ARM_JUMP_SLOT fwrite|128-31-1-0-22-14-0-0
2368|data|Elf32_Rel <0x11F84, 0xF16>; R_ARM_JUMP_SLOT open64|132-31-1-0-22-15-0-0
2376|data|Elf32_Rel <0x11F88, 0x1016>; R_ARM_JUMP_SLOT malloc|136-31-1-0-22-16-0-0
2384|data|Elf32_Rel <0x11F8C, 0x1116>; R_ARM_JUMP_SLOT __libc_start_main|140-31-1-0-22-17-0-0
2392|data|Elf32_Rel <0x11F90, 0x1216>; R_ARM_JUMP_SLOT __gmon_start__|144-31-1-0-22-18-0-0
2400|data|Elf32_Rel <0x11F94, 0x1316>; R_ARM_JUMP_SLOT getopt_long|148-31-1-0-22-19-0-0
2408|data|Elf32_Rel <0x11F98, 0x1416>; R_ARM_JUMP_SLOT memset|152-31-1-0-22-20-0-0
2416|data|Elf32_Rel <0x11F9C, 0x1516>; R_ARM_JUMP_SLOT strncpy|156-31-1-0-22-21-0-0
2424|data|Elf32_Rel <0x11FA0, 0x1616>; R_ARM_JUMP_SLOT write|160-31-1-0-22-22-0-0
2432|data|Elf32_Rel <0x11FA4, 0x1716>; R_ARM_JUMP_SLOT sg_get_llnum|164-31-1-0-22-23-0-0
2440|data|Elf32_Rel <0x11FA8, 0x1816>; R_ARM_JUMP_SLOT __fprintf_chk|168-31-1-0-22-24-0-0
2448|data|Elf32_Rel <0x11FAC, 0x1916>; R_ARM_JUMP_SLOT safe_strerror|172-31-1-0-22-25-0-0
2456|data|Elf32_Rel <0x11FB0, 0x1B16>; R_ARM_JUMP_SLOT sg_get_category_sense_str|176-31-1-0-22-27-0-0
2464|data|Elf32_Rel <0x11FB4, 0x1C16>; R_ARM_JUMP_SLOT sg_get_num|180-31-1-0-22-28-0-0
2472|data|Elf32_Rel <0x11FB8, 0x1E16>; R_ARM_JUMP_SLOT sg_cmds_open_device|184-31-1-0-22-30-0-0
2480|data|Elf32_Rel <0x11FBC, 0x1F16>; R_ARM_JUMP_SLOT sg_ll_read_long10|188-31-1-0-22-31-0-0
2488|data|Elf32_Rel <0x11FC0, 0x2116>; R_ARM_JUMP_SLOT sg_ll_read_long16|192-31-1-0-22-33-0-0
2496|data|Elf32_Rel <0x11FC4, 0x2216>; R_ARM_JUMP_SLOT abort|196-31-1-0-22-34-0-0
2504|data|Elf32_Rel <0x11FC8, 0x2316>; R_ARM_JUMP_SLOT close|200-31-1-0-22-35-0-0
2512|data|Elf32_Rel <0x11FCC, 0x2416>; R_ARM_JUMP_SLOT __snprintf_chk|204-31-1-0-22-36-0-0
2520|code|PUSH            {R3,LR}; _init|8-64-45-233
2524|code|BL              sub_1084|168-1-0-235
2528|code|POP             {R3,PC}|8-128-189-232
2532|code|PUSH            {LR}|4-224-45-229
2536|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x9F4)|4-224-159-229
2540|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
2544|code|LDR             PC, [LR,#8]!; dword_0|8-240-190-229
2548|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9F4|100-21-1-0
2552|code|ADR             R12, 0xA00|0-198-143-226
2556|code|ADD             R12, R12, #0x11000|17-202-140-226
2560|code|LDR             PC, [R12,#(sg_set_binary_mode_ptr - 0x11A00)]!; __imp_sg_set_binary_mode|100-245-188-229
2564|code|ADR             R12, 0xA0C|0-198-143-226
2568|code|ADD             R12, R12, #0x11000|17-202-140-226
2572|code|LDR             PC, [R12,#(__cxa_finalize_ptr - 0x11A0C)]!; __imp___cxa_finalize|92-245-188-229
2576|code|ADR             R12, 0xA18|0-198-143-226
2580|code|ADD             R12, R12, #0x11000|17-202-140-226
2584|code|LDR             PC, [R12,#(dStrHex_ptr - 0x11A18)]!; __imp_dStrHex|84-245-188-229
2588|code|ADR             R12, 0xA24|0-198-143-226
2592|code|ADD             R12, R12, #0x11000|17-202-140-226
2596|code|LDR             PC, [R12,#(free_ptr - 0x11A24)]!; __imp_free|76-245-188-229
2600|code|ADR             R12, 0xA30|0-198-143-226
2604|code|ADD             R12, R12, #0x11000|17-202-140-226
2608|code|LDR             PC, [R12,#(sg_cmds_close_device_ptr - 0x11A30)]!; __imp_sg_cmds_close_device|68-245-188-229
2612|code|ADR             R12, 0xA3C|0-198-143-226
2616|code|ADD             R12, R12, #0x11000|17-202-140-226
2620|code|LDR             PC, [R12,#(__stack_chk_fail_ptr - 0x11A3C)]!; __imp___stack_chk_fail|60-245-188-229
2624|code|ADR             R12, 0xA48|0-198-143-226
2628|code|ADD             R12, R12, #0x11000|17-202-140-226
2632|code|LDR             PC, [R12,#(perror_ptr - 0x11A48)]!; __imp_perror|52-245-188-229
2636|code|ADR             R12, 0xA54|0-198-143-226
2640|code|ADD             R12, R12, #0x11000|17-202-140-226
2644|code|LDR             PC, [R12,#(fwrite_ptr - 0x11A54)]!; __imp_fwrite|44-245-188-229
2648|code|ADR             R12, 0xA60|0-198-143-226
2652|code|ADD             R12, R12, #0x11000|17-202-140-226
2656|code|LDR             PC, [R12,#(open64_ptr - 0x11A60)]!; __imp_open64|36-245-188-229
2660|code|ADR             R12, 0xA6C|0-198-143-226
2664|code|ADD             R12, R12, #0x11000|17-202-140-226
2668|code|LDR             PC, [R12,#(malloc_ptr - 0x11A6C)]!; __imp_malloc|28-245-188-229
2672|code|ADR             R12, 0xA78|0-198-143-226
2676|code|ADD             R12, R12, #0x11000|17-202-140-226
2680|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x11A78)]!; __imp___libc_start_main|20-245-188-229
2684|code|ADR             R12, 0xA84|0-198-143-226
2688|code|ADD             R12, R12, #0x11000|17-202-140-226
2692|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x11A84)]!; __imp___gmon_start__|12-245-188-229
2696|code|ADR             R12, 0xA90|0-198-143-226
2700|code|ADD             R12, R12, #0x11000|17-202-140-226
2704|code|LDR             PC, [R12,#(getopt_long_ptr - 0x11A90)]!; __imp_getopt_long|4-245-188-229
2708|code|ADR             R12, 0xA9C|0-198-143-226
2712|code|ADD             R12, R12, #0x11000|17-202-140-226
2716|code|LDR             PC, [R12,#(memset_ptr - 0x11A9C)]!; __imp_memset|252-244-188-229
2720|code|ADR             R12, 0xAA8|0-198-143-226
2724|code|ADD             R12, R12, #0x11000|17-202-140-226
2728|code|LDR             PC, [R12,#(strncpy_ptr - 0x11AA8)]!; __imp_strncpy|244-244-188-229
2732|code|ADR             R12, 0xAB4|0-198-143-226
2736|code|ADD             R12, R12, #0x11000|17-202-140-226
2740|code|LDR             PC, [R12,#(write_ptr - 0x11AB4)]!; __imp_write|236-244-188-229
2744|code|ADR             R12, 0xAC0|0-198-143-226
2748|code|ADD             R12, R12, #0x11000|17-202-140-226
2752|code|LDR             PC, [R12,#(sg_get_llnum_ptr - 0x11AC0)]!; __imp_sg_get_llnum|228-244-188-229
2756|code|ADR             R12, 0xACC|0-198-143-226
2760|code|ADD             R12, R12, #0x11000|17-202-140-226
2764|code|LDR             PC, [R12,#(__fprintf_chk_ptr - 0x11ACC)]!; __imp___fprintf_chk|220-244-188-229
2768|code|ADR             R12, 0xAD8|0-198-143-226
2772|code|ADD             R12, R12, #0x11000|17-202-140-226
2776|code|LDR             PC, [R12,#(safe_strerror_ptr - 0x11AD8)]!; __imp_safe_strerror|212-244-188-229
2780|code|ADR             R12, 0xAE4|0-198-143-226
2784|code|ADD             R12, R12, #0x11000|17-202-140-226
2788|code|LDR             PC, [R12,#(sg_get_category_sense_str_ptr - 0x11AE4)]!; __imp_sg_get_category_sense_str|204-244-188-229
2792|code|ADR             R12, 0xAF0|0-198-143-226
2796|code|ADD             R12, R12, #0x11000|17-202-140-226
2800|code|LDR             PC, [R12,#(sg_get_num_ptr - 0x11AF0)]!; __imp_sg_get_num|196-244-188-229
2804|code|ADR             R12, 0xAFC|0-198-143-226
2808|code|ADD             R12, R12, #0x11000|17-202-140-226
2812|code|LDR             PC, [R12,#(sg_cmds_open_device_ptr - 0x11AFC)]!; __imp_sg_cmds_open_device|188-244-188-229
2816|code|ADR             R12, 0xB08|0-198-143-226
2820|code|ADD             R12, R12, #0x11000|17-202-140-226
2824|code|LDR             PC, [R12,#(sg_ll_read_long10_ptr - 0x11B08)]!; __imp_sg_ll_read_long10|180-244-188-229
2828|code|ADR             R12, 0xB14|0-198-143-226
2832|code|ADD             R12, R12, #0x11000|17-202-140-226
2836|code|LDR             PC, [R12,#(sg_ll_read_long16_ptr - 0x11B14)]!; __imp_sg_ll_read_long16|172-244-188-229
2840|code|ADR             R12, 0xB20|0-198-143-226
2844|code|ADD             R12, R12, #0x11000|17-202-140-226
2848|code|LDR             PC, [R12,#(abort_ptr - 0x11B20)]!; __imp_abort|164-244-188-229
2852|code|ADR             R12, 0xB2C|0-198-143-226
2856|code|ADD             R12, R12, #0x11000|17-202-140-226
2860|code|LDR             PC, [R12,#(close_ptr - 0x11B2C)]!; __imp_close|156-244-188-229
2864|code|ADR             R12, 0xB38|0-198-143-226
2868|code|ADD             R12, R12, #0x11000|17-202-140-226
2872|code|LDR             PC, [R12,#(__snprintf_chk_ptr - 0x11B38)]!; __imp___snprintf_chk|148-244-188-229
2876|code|PUSH.W          {R4-R11,LR}|45-233-240-79
2880|code|SUB.W           SP, SP, #0x25C|173-245-23-125
2884|code|ADD             R3, SP, #0x280+s|21-171
2886|code|LDR.W           R6, =(_GLOBAL_OFFSET_TABLE_ - 0xB58)|223-248-116-100
2890|code|STR             R3, [SP,#0x280+llba+4]|17-147
2892|code|MOV             R8, R1|136-70
2894|code|MOV             R2, R3|26-70
2896|code|LDR.W           R3, =(__stack_chk_guard_ptr - 0x11F58)|223-248-108-52
2900|code|ADD             R6, PC; _GLOBAL_OFFSET_TABLE_|126-68
2902|code|LDR.W           R11, =(aChlOPrsvvx - 0xB68); "chl:o:prSvVx:"|223-248-108-180
2906|code|LDR.W           R10, =(off_12008 - 0xB6C)|223-248-108-164
2910|code|MOVS            R1, #0; c|0-33
2912|code|LDR             R3, [R6,R3]; __stack_chk_guard|243-88
2914|code|MOV             R4, R1|12-70
2916|code|ADD             R11, PC; "chl:o:prSvVx:"|251-68
2918|code|ADD             R5, SP, #0x280+var_230|20-173
2920|code|ADD             R10, PC; off_12008|250-68
2922|code|MOV             R7, R0|7-70
2924|code|STR             R3, [SP,#0x280+var_254]|11-147
2926|code|MOV             R0, R2; s|16-70
2928|code|LDR             R3, [R3]|27-104
2930|code|MOV.W           R2, #0x100; n|79-244-128-114
2934|code|MOV             R9, R4|161-70
2936|code|STR             R1, [SP,#0x280+read_only]|12-145
2938|code|STR             R1, [SP,#0x280+resp]|14-145
2940|code|STR             R3, [SP,#0x280+var_2C]|149-147
2942|code|STR             R1, [SP,#0x280+var_234]|19-145
2944|code|STR             R1, [SP,#0x280+correct]|18-145
2946|code|STR             R1, [SP,#0x280+var_244]|15-145
2948|code|BLX             memset|255-247-134-239
2952|code|MOV.W           R3, #0x208|79-244-2-115
2956|code|STR             R4, [SP,#0x280+llba]|16-148
2958|code|STR             R3, [SP,#0x280+n]|13-147
2960|code|STR             R5, [SP,#0x280+longind]; longind|0-149
2962|code|MOV             R2, R11; shortopts|90-70
2964|code|MOV             R0, R7; argc|56-70
2966|code|MOV             R1, R8; argv|65-70
2968|code|MOV             R3, R10; longopts|83-70
2970|code|STR.W           R9, [R5]|197-248-0-144
2974|code|BLX             getopt_long|255-247-116-239
2978|code|ADDS            R2, R0, #1|66-28
2980|code|BEQ.W           loc_CC6|0-240-143-128
2984|code|SUB.W           R3, R0, #0x3F ; '?'; switch 58 cases|160-241-63-3
2988|code|CMP             R3, #0x39|57-43
2990|code|BHI             def_BB0; jumptable 00000BB0 default case, cases 64-82,84,85,87-98,100-103,105-107,109,110,113,115-117,119|119-216
2992|code|TBB.W           [PC,R3]; switch jump|223-232-3-240
2996|data|DCB 0x20; jump table for switch statement|32
2997|data|DCB 0x76|118
2998|data|DCB 0x76|118
2999|data|DCB 0x76|118
3000|data|DCB 0x76|118
3001|data|DCB 0x76|118
3002|data|DCB 0x76|118
3003|data|DCB 0x76|118
3004|data|DCB 0x76|118
3005|data|DCB 0x76|118
3006|data|DCB 0x76|118
3007|data|DCB 0x76|118
3008|data|DCB 0x76|118
3009|data|DCB 0x76|118
3010|data|DCB 0x76|118
3011|data|DCB 0x76|118
3012|data|DCB 0x76|118
3013|data|DCB 0x76|118
3014|data|DCB 0x76|118
3015|data|DCB 0x76|118
3016|data|DCB 0x1D|29
3017|data|DCB 0x76|118
3018|data|DCB 0x76|118
3019|data|DCB 0x6A|106
3020|data|DCB 0x76|118
3021|data|DCB 0x76|118
3022|data|DCB 0x76|118
3023|data|DCB 0x76|118
3024|data|DCB 0x76|118
3025|data|DCB 0x76|118
3026|data|DCB 0x76|118
3027|data|DCB 0x76|118
3028|data|DCB 0x76|118
3029|data|DCB 0x76|118
3030|data|DCB 0x76|118
3031|data|DCB 0x76|118
3032|data|DCB 0x67|103
3033|data|DCB 0x76|118
3034|data|DCB 0x76|118
3035|data|DCB 0x76|118
3036|data|DCB 0x76|118
3037|data|DCB 0x20|32
3038|data|DCB 0x76|118
3039|data|DCB 0x76|118
3040|data|DCB 0x76|118
3041|data|DCB 0x59|89
3042|data|DCB 0x76|118
3043|data|DCB 0x76|118
3044|data|DCB 0x51|81
3045|data|DCB 0x4E|78
3046|data|DCB 0x76|118
3047|data|DCB 0x4A|74
3048|data|DCB 0x76|118
3049|data|DCB 0x76|118
3050|data|DCB 0x76|118
3051|data|DCB 0x48|72
3052|data|DCB 0x76|118
3053|data|DCB 0x35|53
3054|code|MOVS            R3, #1; jumptable 00000BB0 case 83|1-35
3056|code|STR             R3, [SP,#0x280+var_244]|15-147
3058|code|B               loc_B90|205-231
3060|code|LDR             R3, =(stderr_ptr - 0x11F58); jumptable 00000BB0 cases 63,104|245-75
3062|code|MOVS            R1, #1; size|1-33
3064|code|LDR             R0, =(aUsageSgReadLon - 0xC04); "Usage: sg_read_long [--16] [--correct] "...|245-72
3066|code|MOVW            R2, #0x399; n|64-242-153-50
3070|code|LDR             R3, [R6,R3]; stderr|243-88
3072|code|ADD             R0, PC; "Usage: sg_read_long [--16] [--correct] "...|120-68
3074|code|LDR             R3, [R3]; s|27-104
3076|code|BLX             fwrite|255-247-34-239
3080|code|MOVS            R0, #0|0-32
3082|code|LDR             R3, [SP,#0x280+var_254]|11-155
3084|code|LDR             R2, [SP,#0x280+var_2C]|149-154
3086|code|LDR             R3, [R3]|27-104
3088|code|CMP             R2, R3|154-66
3090|code|BNE.W           loc_FB6|64-240-208-129
3094|code|ADD.W           SP, SP, #0x25C|13-245-23-125
3098|code|POP.W           {R4-R11,PC}|189-232-240-143
3102|code|LDR             R3, =(optarg_ptr - 0x11F58); jumptable 00000BB0 case 120|237-75
3104|code|LDR             R3, [R6,R3]; optarg|243-88
3106|code|LDR             R0, [R3]; buf|24-104
3108|code|BLX             sg_get_num|255-247-96-239
3112|code|ADDS            R3, R0, #1|67-28
3114|code|STR             R0, [SP,#0x280+n]|13-144
3116|code|BNE             loc_B90|176-209
3118|code|LDR             R3, =(stderr_ptr - 0x11F58)|231-75
3120|code|MOVS            R1, #1; size|1-33
3122|code|LDR             R0, =(aBadArgumentToX - 0xC3C); "bad argument to '--xfer_len'\n"|233-72
3124|code|MOVS            R2, #0x1D; n|29-34
3126|code|LDR             R3, [R6,R3]; stderr|243-88
3128|code|ADD             R0, PC; "bad argument to '--xfer_len'\n"|120-68
3130|code|LDR             R3, [R3]; s|27-104
3132|code|BLX             fwrite|255-247-6-239
3136|code|MOVS            R0, #1|1-32
3138|code|B               loc_C0A|226-231
3140|code|ADDS            R4, #1; jumptable 00000BB0 case 118|1-52
3142|code|B               loc_B90|163-231
3144|code|LDR             R3, [SP,#0x280+read_only]; jumptable 00000BB0 case 114|12-155
3146|code|ADDS            R3, #1|1-51
3148|code|STR             R3, [SP,#0x280+read_only]|12-147
3150|code|B               loc_B90|159-231
3152|code|MOVS            R3, #1; jumptable 00000BB0 case 112|1-35
3154|code|STR             R3, [SP,#0x280+correct]|18-147
3156|code|B               loc_B90|156-231
3158|code|LDR             R3, =(optarg_ptr - 0x11F58); jumptable 00000BB0 case 111|223-75
3160|code|MOVS            R2, #0xFF; n|255-34
3162|code|LDR             R0, [SP,#0x280+llba+4]; dest|17-152
3164|code|LDR             R3, [R6,R3]; optarg|243-88
3166|code|LDR             R1, [R3]; src|25-104
3168|code|BLX             strncpy|255-247-30-239
3172|code|B               loc_B90|148-231
3174|code|LDR             R3, =(optarg_ptr - 0x11F58); jumptable 00000BB0 case 108|219-75
3176|code|LDR             R3, [R6,R3]; optarg|243-88
3178|code|LDR             R0, [R3]; buf|24-104
3180|code|BLX             sg_get_llnum|255-247-36-239
3184|code|ADDS            R3, R1, #1|75-28
3186|code|IT EQ|8-191
3188|code|CMPEQ.W         R0, #0xFFFFFFFF|176-241-255-63
3192|code|BEQ.W           loc_F10|0-240-74-129
3196|code|STR             R0, [SP,#0x280+resp]|14-144
3198|code|STR             R1, [SP,#0x280+var_234]|19-145
3200|code|B               loc_B90|134-231
3202|code|MOVS            R3, #1; jumptable 00000BB0 case 99|1-35
3204|code|STR             R3, [SP,#0x280+llba]|16-147
3206|code|B               loc_B90|131-231
3208|code|LDR             R0, =(stderr_ptr - 0x11F58); jumptable 00000BB0 case 86|208-72
3210|code|MOVS            R1, #1|1-33
3212|code|LDR             R2, =(aSgReadLongVers - 0xC96); "sg_read_long: version: %s\n"|211-74
3214|code|LDR             R3, =(a11920140516 - 0xC98); "1.19 20140516"|212-75
3216|code|LDR             R0, [R6,R0]; stderr|48-88
3218|code|ADD             R2, PC; "sg_read_long: version: %s\n"|122-68
3220|code|ADD             R3, PC; "1.19 20140516"|123-68
3222|code|LDR             R0, [R0]|0-104
3224|code|BLX             __fprintf_chk|255-247-20-239
3228|code|MOVS            R0, #0|0-32
3230|code|B               loc_C0A|180-231
3232|code|LDR             R4, =(stderr_ptr - 0x11F58); jumptable 00000BB0 default case, cases 64-82,84,85,87-98,100-103,105-107,109,110,113,115-117,119|202-76
3234|code|MOV             R3, R0|3-70
3236|code|LDR             R2, =(aUnrecognisedOp - 0xCAE); "unrecognised option code 0x%x ??\n"|207-74
3238|code|MOVS            R1, #1|1-33
3240|code|LDR             R4, [R6,R4]; stderr|52-89
3242|code|ADD             R2, PC; "unrecognised option code 0x%x ??\n"|122-68
3244|code|LDR             R0, [R4]|32-104
3246|code|BLX             __fprintf_chk|255-247-10-239
3250|code|LDR             R0, =(aUsageSgReadLon - 0xCBC); "Usage: sg_read_long [--16] [--correct] "...|205-72
3252|code|LDR             R3, [R4]; s|35-104
3254|code|MOVS            R1, #1; size|1-33
3256|code|ADD             R0, PC; "Usage: sg_read_long [--16] [--correct] "...|120-68
3258|code|MOVW            R2, #0x399; n|64-242-153-50
3262|code|BLX             fwrite|255-247-198-238
3266|code|MOVS            R0, #1|1-32
3268|code|B               loc_C0A|161-231
3270|code|LDR             R3, =(optind_ptr - 0x11F58)|201-75
3272|code|LDR.W           R9, [R6,R3]; optind|86-248-3-144
3276|code|LDR.W           R3, [R9]|217-248-0-48
3280|code|CMP             R7, R3|159-66
3282|code|BLE             loc_D1E|36-221
3284|code|ADDS            R2, R3, #1|90-28
3286|code|LDR.W           R10, [R8,R3,LSL#2]|88-248-35-160
3290|code|CMP             R7, R2|151-66
3292|code|STR.W           R2, [R9]|201-248-0-32
3296|code|BLE             loc_D44|48-221
3298|code|LDR             R3, =(stderr_ptr - 0x11F58)|186-75
3300|code|MOV             R5, R9|77-70
3302|code|LDR             R4, =(aUnexpectedExtr - 0xCEE); "Unexpected extra argument: %s\n"|194-76
3304|code|LDR             R6, [R6,R3]; stderr|246-88
3306|code|ADD             R4, PC; "Unexpected extra argument: %s\n"|124-68
3308|code|B               loc_D02|9-224
3310|code|LDR.W           R3, [R8,R3,LSL#2]|88-248-35-48
3314|code|MOVS            R1, #1|1-33
3316|code|LDR             R0, [R6]|48-104
3318|code|MOV             R2, R4|34-70
3320|code|BLX             __fprintf_chk|255-247-228-238
3324|code|LDR             R3, [R5]|43-104
3326|code|ADDS            R3, #1|1-51
3328|code|STR             R3, [R5]|43-96
3330|code|LDR.W           R3, [R9]|217-248-0-48
3334|code|CMP             R7, R3|159-66
3336|code|BGT             loc_CEE|241-220
3338|code|LDR             R0, =(aUsageSgReadLon - 0xD18); "Usage: sg_read_long [--16] [--correct] "...|186-72
3340|code|MOVS            R1, #1; size|1-33
3342|code|LDR             R3, [R6]; s|51-104
3344|code|MOVW            R2, #0x399; n|64-242-153-50
3348|code|ADD             R0, PC; "Usage: sg_read_long [--16] [--correct] "...|120-68
3350|code|BLX             fwrite|255-247-154-238
3354|code|MOVS            R0, #1|1-32
3356|code|B               loc_C0A|117-231
3358|code|LDR             R3, =(stderr_ptr - 0x11F58)|171-75
3360|code|MOVS            R1, #1; size|1-33
3362|code|LDR             R0, =(aMissingDeviceN - 0xD2C); "missing device name!\n"|181-72
3364|code|MOVS            R2, #0x15; n|21-34
3366|code|LDR             R4, [R6,R3]; stderr|244-88
3368|code|ADD             R0, PC; "missing device name!\n"|120-68
3370|code|LDR             R3, [R4]; s|35-104
3372|code|BLX             fwrite|255-247-142-238
3376|code|LDR             R0, =(aUsageSgReadLon - 0xD3A); "Usage: sg_read_long [--16] [--correct] "...|178-72
3378|code|LDR             R3, [R4]; s|35-104
3380|code|MOVS            R1, #1; size|1-33
3382|code|ADD             R0, PC; "Usage: sg_read_long [--16] [--correct] "...|120-68
3384|code|MOVW            R2, #0x399; n|64-242-153-50
3388|code|BLX             fwrite|255-247-134-238
3392|code|MOVS            R0, #1|1-32
3394|code|B               loc_C0A|98-231
3396|code|CMP.W           R10, #0|186-241-0-15
3400|code|BEQ             loc_D1E|233-208
3402|code|LDR             R2, [SP,#0x280+n]|13-154
3404|code|MOVW            R3, #0x270F|66-242-15-115
3408|code|CMP             R2, R3|154-66
3410|code|BGT             loc_E14|95-220
3412|code|LDR             R1, [SP,#0x280+read_only]; read_only|12-153
3414|code|MOV             R0, R10; device_name|80-70
3416|code|MOV             R2, R4; verbose|34-70
3418|code|BLX             sg_cmds_open_device|255-247-204-238
3422|code|SUBS.W          R11, R0, #0|176-241-0-11
3426|code|BLT             loc_E40|109-219
3428|code|MOVW            R0, #0x2710; size|66-242-16-112
3432|code|BLX             malloc|255-247-124-238
3436|code|MOV             R9, R0|129-70
3438|code|CMP             R0, #0|0-40
3440|code|BEQ.W           loc_F68|0-240-250-128
3444|code|MOVS            R1, #0; c|0-33
3446|code|MOVW            R2, #0x2710; n|66-242-16-114
3450|code|BLX             memset|255-247-140-238
3454|code|LDR             R3, =(stderr_ptr - 0x11F58)|147-75
3456|code|LDR             R6, [R6,R3]; stderr|246-88
3458|code|LDR             R3, [SP,#0x280+var_244]|15-155
3460|code|LDR             R0, [R6]|48-104
3462|code|CMP             R3, #0|0-43
3464|code|BEQ.W           loc_EC2|0-240-155-128
3468|code|LDR             R2, [SP,#0x280+n]|13-154
3470|code|MOVS            R1, #1|1-33
3472|code|LDR             R7, [SP,#0x280+var_234]|19-159
3474|code|LDR             R3, =(unk_11CC - 0xD9C)|155-75
3476|code|STR             R2, [SP,#0x280+xfer_len]; xfer_len|1-146
3478|code|STR             R2, [SP,#0x280+offsetp]|2-146
3480|code|ADD             R3, PC; unk_11CC|123-68
3482|code|LDR             R2, [SP,#0x280+resp]|14-154
3484|code|STR.W           R10, [SP,#0x280+longind]; resp|205-248-0-160
3488|code|MOV             R10, R3|154-70
3490|code|STR             R7, [SP,#0x280+var_26C]|5-151
3492|code|STR             R2, [SP,#0x280+verbose]|4-146
3494|code|STR             R2, [SP,#0x280+var_268]|6-146
3496|code|LDR             R2, [SP,#0x280+llba]|16-154
3498|code|STR             R7, [SP,#0x280+var_264]|7-151
3500|code|STR             R2, [SP,#0x280+var_260]|8-146
3502|code|LDR             R2, =(aSgReadLongIssu - 0xDB4); "sg_read_long: issue read long (%s) to d"...|149-74
3504|code|ADD             R2, PC; "sg_read_long: issue read long (%s) to d"...|122-68
3506|code|BLX             __fprintf_chk|255-247-136-238
3510|code|LDR             R1, [SP,#0x280+resp]|14-153
3512|code|LDR             R3, [SP,#0x280+n]|13-155
3514|code|MOV             R0, R11; sg_fd|88-70
3516|code|STR.W           R9, [SP,#0x280+offsetp]; offsetp|205-248-8-144
3520|code|STMEA.W         SP, {R1,R7}|141-232-130-0
3524|code|STR             R3, [SP,#0x280+noisy]; noisy|3-147
3526|code|MOVS            R3, #1; llba|1-35
3528|code|LDR             R1, [SP,#0x280+correct]; correct|18-153
3530|code|LDR             R2, [SP,#0x280+llba]; llba|16-154
3532|code|STR             R5, [SP,#0x280+verbose]; verbose|4-149
3534|code|STR             R4, [SP,#0x280+var_268]|6-148
3536|code|STR             R3, [SP,#0x280+var_26C]|5-147
3538|code|BLX             sg_ll_read_long16|255-247-156-238
3542|code|MOV             R8, R0|128-70
3544|code|CMP.W           R8, #0|184-241-0-15
3548|code|BEQ             loc_E86|83-208
3550|code|CMP.W           R8, #0x11|184-241-17-15
3554|code|BNE             loc_E62|62-209
3556|code|LDR             R2, [SP,#0x280+n]|13-154
3558|code|MOVS            R1, #1|1-33
3560|code|LDR             R3, [R5]|43-104
3562|code|LDR             R0, [R6]|48-104
3564|code|SUBS            R3, R2, R3|211-26
3566|code|LDR             R2, =(aDeviceIndicate - 0xDF4); "<<< device indicates 'xfer_len' should "...|134-74
3568|code|ADD             R2, PC; "<<< device indicates 'xfer_len' should "...|122-68
3570|code|BLX             __fprintf_chk|255-247-104-238
3574|code|MOV             R0, R9; ptr|72-70
3576|code|BLX             free|255-247-16-238
3580|code|MOV             R0, R11; device_fd|88-70
3582|code|BLX             sg_cmds_close_device|255-247-20-238
3586|code|CMP             R0, #0|0-40
3588|code|BLT.W           loc_F46|192-242-159-128
3592|code|CMP.W           R8, #0|184-241-0-15
3596|code|ITE GE|172-191
3598|code|MOVGE           R0, R8|64-70
3600|code|MOVLT           R0, #0x63 ; 'c'|99-32
3602|code|B               loc_C0A|250-230
3604|code|LDR             R0, =(stderr_ptr - 0x11F58)|109-72
3606|code|MOV             R3, R2|19-70
3608|code|LDR             R2, =(aXferLenDIsOutO - 0xE26); "xfer_len (%d) is out of range ( < %d)\n"|124-74
3610|code|MOVS            R1, #1|1-33
3612|code|MOVW            R5, #0x2710|66-242-16-117
3616|code|LDR             R4, [R6,R0]; stderr|52-88
3618|code|ADD             R2, PC; "xfer_len (%d) is out of range ( < %d)\n"|122-68
3620|code|STR             R5, [SP,#0x280+longind]|0-149
3622|code|LDR             R0, [R4]|32-104
3624|code|BLX             __fprintf_chk|255-247-76-238
3628|code|LDR             R0, =(aUsageSgReadLon - 0xE36); "Usage: sg_read_long [--16] [--correct] "...|120-72
3630|code|LDR             R3, [R4]; s|35-104
3632|code|MOVS            R1, #1; size|1-33
3634|code|ADD             R0, PC; "Usage: sg_read_long [--16] [--correct] "...|120-68
3636|code|MOVW            R2, #0x399; n|64-242-153-50
3640|code|BLX             fwrite|255-247-8-238
3644|code|MOVS            R0, #1|1-32
3646|code|B               loc_C0A|228-230
3648|code|LDR             R3, =(stderr_ptr - 0x11F58)|98-75
3650|code|RSB.W           R0, R11, #0; errnum|203-241-0-0
3654|code|LDR             R3, [R6,R3]; stderr|243-88
3656|code|LDR             R4, [R3]|28-104
3658|code|BLX             safe_strerror|255-247-66-238
3662|code|LDR             R2, =(aSgReadLongOpen - 0xE58); "sg_read_long: open error: %s: %s\n"|113-74
3664|code|MOV             R3, R10|83-70
3666|code|MOVS            R1, #1|1-33
3668|code|ADD             R2, PC; "sg_read_long: open error: %s: %s\n"|122-68
3670|code|STR             R0, [SP,#0x280+longind]|0-144
3672|code|MOV             R0, R4|32-70
3674|code|BLX             __fprintf_chk|255-247-52-238
3678|code|MOVS            R0, #0xF|15-32
3680|code|B               loc_C0A|211-230
3682|code|MOV             R3, R4|35-70
3684|code|ADD             R4, SP, #0x280+var_12C|85-172
3686|code|MOVS            R1, #0x50 ; 'P'|80-33
3688|code|MOV             R0, R8|64-70
3690|code|MOV             R2, R4|34-70
3692|code|BLX             sg_get_category_sense_str|255-247-54-238
3696|code|LDR             R2, =(aScsiReadLongSS - 0xE7E); "  SCSI READ LONG (%s): %s\n"|105-74
3698|code|STR             R4, [SP,#0x280+longind]|0-148
3700|code|MOV             R3, R10|83-70
3702|code|LDR             R0, [R6]|48-104
3704|code|MOVS            R1, #1|1-33
3706|code|ADD             R2, PC; "  SCSI READ LONG (%s): %s\n"|122-68
3708|code|BLX             __fprintf_chk|255-247-34-238
3712|code|CMP.W           R8, #0|184-241-0-15
3716|code|BNE             loc_DF6|183-209
3718|code|LDR             R3, [SP,#0x280+llba+4]|17-155
3720|code|LDRB            R2, [R3]; no_ascii|26-120
3722|code|CMP             R2, #0|0-42
3724|code|BEQ             loc_F3C|86-208
3726|code|CMP             R2, #0x2D ; '-'|45-42
3728|code|BNE             loc_F26|73-209
3730|code|LDR             R3, [SP,#0x280+llba+4]|17-155
3732|code|LDRB            R3, [R3,#1]|91-120
3734|code|CMP             R3, #0|0-43
3736|code|BNE             loc_F26|69-209
3738|code|MOVS            R5, #1|1-37
3740|code|MOV             R4, R5|44-70
3742|code|MOV             R0, R4|32-70
3744|code|BLX             sg_set_binary_mode|255-247-170-237
3748|code|CMP             R0, #0|0-40
3750|code|BLT             loc_F84|109-219
3752|code|LDR             R2, [SP,#0x280+n]; n|13-154
3754|code|MOV             R0, R4; fd|32-70
3756|code|MOV             R1, R9; buf|73-70
3758|code|BLX             write|255-247-254-237
3762|code|CMP             R0, #0|0-40
3764|code|BLT             loc_F8E|107-219
3766|code|CMP             R5, #0|0-45
3768|code|BNE             loc_DF6|157-209
3770|code|MOV             R0, R4; fd|32-70
3772|code|BLX             close|255-247-50-238
3776|code|B               loc_DF6|153-231
3778|code|LDR             R2, [SP,#0x280+n]|13-154
3780|code|MOVS            R1, #1|1-33
3782|code|LDR             R7, [SP,#0x280+var_234]|19-159
3784|code|LDR             R3, =(unk_11C8 - 0xED2)|84-75
3786|code|STR             R2, [SP,#0x280+xfer_len]|1-146
3788|code|STR             R2, [SP,#0x280+offsetp]|2-146
3790|code|ADD             R3, PC; unk_11C8|123-68
3792|code|LDR             R2, [SP,#0x280+resp]|14-154
3794|code|STR             R7, [SP,#0x280+var_26C]|5-151
3796|code|STR             R7, [SP,#0x280+var_264]|7-151
3798|code|LDR             R7, [SP,#0x280+llba]|16-159
3800|code|STR             R2, [SP,#0x280+verbose]|4-146
3802|code|STR             R2, [SP,#0x280+var_268]|6-146
3804|code|LDR             R2, =(aSgReadLongIssu - 0xEE8); "sg_read_long: issue read long (%s) to d"...|80-74
3806|code|STR.W           R10, [SP,#0x280+longind]|205-248-0-160
3810|code|MOV             R10, R3|154-70
3812|code|ADD             R2, PC; "sg_read_long: issue read long (%s) to d"...|122-68
3814|code|STR             R7, [SP,#0x280+var_260]|8-151
3816|code|BLX             __fprintf_chk|255-247-236-237
3820|code|LDR             R2, [SP,#0x280+n]|13-154
3822|code|MOV.W           LR, #1|79-240-1-14
3826|code|STR.W           R9, [SP,#0x280+longind]; xfer_len|205-248-0-144
3830|code|LDR             R1, [SP,#0x280+correct]; correct|18-153
3832|code|MOV             R0, R11; sg_fd|88-70
3834|code|STR             R2, [SP,#0x280+xfer_len]; offsetp|1-146
3836|code|MOV             R2, R7; lba|58-70
3838|code|STR             R5, [SP,#0x280+offsetp]; noisy|2-149
3840|code|STR             R4, [SP,#0x280+verbose]|4-148
3842|code|LDR             R3, [SP,#0x280+resp]; resp|14-155
3844|code|STR.W           LR, [SP,#0x280+noisy]; verbose|205-248-12-224
3848|code|BLX             sg_ll_read_long10|255-247-250-237
3852|code|MOV             R8, R0|128-70
3854|code|B               loc_DD8|99-231
3856|code|LDR             R3, =(stderr_ptr - 0x11F58)|46-75
3858|code|MOVS            R1, #1; size|1-33
3860|code|LDR             R0, =(aBadArgumentToL - 0xF1E); "bad argument to '--lba'\n"|67-72
3862|code|MOVS            R2, #0x18; n|24-34
3864|code|LDR             R3, [R6,R3]; stderr|243-88
3866|code|ADD             R0, PC; "bad argument to '--lba'\n"|120-68
3868|code|LDR             R3, [R3]; s|27-104
3870|code|BLX             fwrite|255-247-150-237
3874|code|MOVS            R0, #1|1-32
3876|code|B               loc_C0A|113-230
3878|code|LDR             R0, [SP,#0x280+llba+4]|17-152
3880|code|MOVW            R1, #0x241|64-242-65-33
3884|code|MOV.W           R2, #0x1B6|79-244-219-114
3888|code|BLX             open64|255-247-146-237
3892|code|SUBS            R4, R0, #0|4-30
3894|code|BLT             loc_FB0|59-219
3896|code|MOVS            R5, #0|0-37
3898|code|B               loc_E9E|176-231
3900|code|LDR             R1, [SP,#0x280+n]; len|13-153
3902|code|MOV             R0, R9; str|72-70
3904|code|BLX             dStrHex|255-247-102-237
3908|code|B               loc_DF6|87-231
3910|code|NEGS            R0, R0; errnum|64-66
3912|code|LDR             R4, [R6]|52-104
3914|code|BLX             safe_strerror|255-247-194-237
3918|code|LDR             R2, =(aCloseErrorS - 0xF56); "close error: %s\n"|54-74
3920|code|MOVS            R1, #1|1-33
3922|code|ADD             R2, PC; "close error: %s\n"|122-68
3924|code|MOV             R3, R0|3-70
3926|code|MOV             R0, R4|32-70
3928|code|BLX             __fprintf_chk|255-247-180-237
3932|code|CMP.W           R8, #0|184-241-0-15
3936|code|BNE.W           loc_E08|127-244-82-175
3940|code|MOVS            R0, #0xF|15-32
3942|code|B               loc_C0A|80-230
3944|code|LDR             R3, =(stderr_ptr - 0x11F58)|24-75
3946|code|MOVS            R1, #1; size|1-33
3948|code|LDR             R0, =(aSgReadLongOutO - 0xF76); "sg_read_long: out of memory\n"|47-72
3950|code|MOVS            R2, #0x1C; n|28-34
3952|code|LDR             R3, [R6,R3]; stderr|243-88
3954|code|ADD             R0, PC; "sg_read_long: out of memory\n"|120-68
3956|code|LDR             R3, [R3]; s|27-104
3958|code|BLX             fwrite|255-247-106-237
3962|code|MOV             R0, R11; device_fd|88-70
3964|code|BLX             sg_cmds_close_device|255-247-84-237
3968|code|MOVS            R0, #1|1-32
3970|code|B               loc_C0A|66-230
3972|code|LDR             R0, =(aSgSetBinaryMod_0 - 0xF8A); "sg_set_binary_mode"|42-72
3974|code|ADD             R0, PC; "sg_set_binary_mode"|120-68
3976|code|BLX             perror|255-247-90-237
3980|code|B               loc_DF6|51-231
3982|code|LDR             R2, =(aSgReadLongCoul - 0xF94); "sg_read_long: couldn't write to %s"|41-74
3984|code|ADD             R2, PC; "sg_read_long: couldn't write to %s"|122-68
3986|code|LDR             R3, [SP,#0x280+llba+4]|17-155
3988|code|ADD             R4, SP, #0x280+var_12C|85-172
3990|code|MOV.W           R1, #0x100|79-244-128-113
3994|code|STR             R2, [SP,#0x280+longind]|0-146
3996|code|MOV             R0, R4|32-70
3998|code|MOVS            R2, #1|1-34
4000|code|STR             R3, [SP,#0x280+xfer_len]|1-147
4002|code|MOV             R3, R1|11-70
4004|code|BLX             __snprintf_chk|255-247-196-237
4008|code|MOV             R0, R4; s|32-70
4010|code|BLX             perror|255-247-74-237
4014|code|B               loc_DF6|34-231
4016|code|LDR             R2, =(aSgReadLongCoul_0 - 0xFB6); "sg_read_long: could not open %s for wri"...|33-74
4018|code|ADD             R2, PC; "sg_read_long: could not open %s for wri"...|122-68
4020|code|B               loc_F92|237-231
4022|code|BLX             __stack_chk_fail|255-247-62-237
4026|data|ALIGN 4|0-191
4028|data|DCD _GLOBAL_OFFSET_TABLE_ - 0xB58|0-20-1-0
4032|data|DCD __stack_chk_guard_ptr - 0x11F58|132-0-0-0
4036|data|DCD aChlOPrsvvx - 0xB68; "chl:o:prSvVx:"|104-6-0-0
4040|data|DCD off_12008 - 0xB6C|156-20-1-0
4044|data|DCD stderr_ptr - 0x11F58|140-0-0-0
4048|data|DCD aUsageSgReadLon - 0xC04; "Usage: sg_read_long [--16] [--correct] "...|220-5-0-0
4052|data|DCD optarg_ptr - 0x11F58|164-0-0-0
4056|data|DCD aBadArgumentToX - 0xC3C; "bad argument to '--xfer_len'\n"|136-9-0-0
4060|data|DCD aSgReadLongVers - 0xC96; "sg_read_long: version: %s\n"|2-9-0-0
4064|data|DCD a11920140516 - 0xC98; "1.19 20140516"|28-9-0-0
4068|data|DCD aUnrecognisedOp - 0xCAE; "unrecognised option code 0x%x ??\n"|54-9-0-0
4072|data|DCD aUsageSgReadLon - 0xCBC; "Usage: sg_read_long [--16] [--correct] "...|36-5-0-0
4076|data|DCD optind_ptr - 0x11F58|136-0-0-0
4080|data|DCD aUnexpectedExtr - 0xCEE; "Unexpected extra argument: %s\n"|50-9-0-0
4084|data|DCD aUsageSgReadLon - 0xD18; "Usage: sg_read_long [--16] [--correct] "...|200-4-0-0
4088|data|DCD aMissingDeviceN - 0xD2C; "missing device name!\n"|220-8-0-0
4092|data|DCD aUsageSgReadLon - 0xD3A; "Usage: sg_read_long [--16] [--correct] "...|166-4-0-0
4096|data|DCD unk_11CC - 0xD9C|48-4-0-0
4100|data|DCD aSgReadLongIssu - 0xDB4; "sg_read_long: issue read long (%s) to d"...|192-9-0-0
4104|data|DCD aDeviceIndicate - 0xDF4; "<<< device indicates 'xfer_len' should "...|184-8-0-0
4108|data|DCD aXferLenDIsOutO - 0xE26; "xfer_len (%d) is out of range ( < %d)\n"|26-8-0-0
4112|data|DCD aUsageSgReadLon - 0xE36; "Usage: sg_read_long [--16] [--correct] "...|170-3-0-0
4116|data|DCD aSgReadLongOpen - 0xE58; "sg_read_long: open error: %s: %s\n"|16-8-0-0
4120|data|DCD aScsiReadLongSS - 0xE7E; "  SCSI READ LONG (%s): %s\n"|98-8-0-0
4124|data|DCD unk_11C8 - 0xED2|246-2-0-0
4128|data|DCD aSgReadLongIssu - 0xEE8; "sg_read_long: issue read long (%s) to d"...|140-8-0-0
4132|data|DCD aBadArgumentToL - 0xF1E; "bad argument to '--lba'\n"|94-6-0-0
4136|data|DCD aCloseErrorS - 0xF56; "close error: %s\n"|10-8-0-0
4140|data|DCD aSgReadLongOutO - 0xF76; "sg_read_long: out of memory\n"|22-7-0-0
4144|data|DCD aSgSetBinaryMod_0 - 0xF8A; "sg_set_binary_mode"|158-7-0-0
4148|data|DCD aSgReadLongCoul - 0xF94; "sg_read_long: couldn't write to %s"|168-7-0-0
4152|data|DCD aSgReadLongCoul_0 - 0xFB6; "sg_read_long: could not open %s for wri"...|70-7-0-0
4156|code|MOV.W           R11, #0|79-240-0-11
4160|code|MOV.W           LR, #0|79-240-0-14
4164|code|POP             {R1}; argc|2-188
4166|code|MOV             R2, SP; ubp_av|106-70
4168|code|PUSH            {R2}; stack_end|4-180
4170|code|PUSH            {R0}; rtld_fini|1-180
4172|code|LDR.W           R10, =(_GLOBAL_OFFSET_TABLE_ - 0x1074)|223-248-36-160
4176|code|ADR             R3, off_1074|8-163
4178|code|ADD             R10, R3; _GLOBAL_OFFSET_TABLE_|154-68
4180|code|LDR.W           R12, =(__libc_csu_fini_ptr - 0x11F58)|223-248-32-192
4184|code|LDR.W           R12, [R10,R12]; __libc_csu_fini|90-248-12-192
4188|code|PUSH.W          {R12}; fini|77-248-4-205
4192|code|LDR             R3, =(__libc_csu_init_ptr - 0x11F58)|6-75
4194|code|LDR.W           R3, [R10,R3]; __libc_csu_init ; init|90-248-3-48
4198|code|LDR             R0, =(main_ptr - 0x11F58)|6-72
4200|code|LDR.W           R0, [R10,R0]; main ; main|90-248-0-0
4204|code|BLX             __libc_start_main|255-247-0-237
4208|code|BLX             abort|255-247-82-237
4212|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1074|228-14-1-0
4216|data|DCD __libc_csu_fini_ptr - 0x11F58|120-0-0-0
4220|data|DCD __libc_csu_init_ptr - 0x11F58|148-0-0-0
4224|data|DCD main_ptr - 0x11F58|152-0-0-0
4228|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x1094)|20-48-159-229
4232|code|LDR             R2, =(__gmon_start___ptr_0 - 0x11F58)|20-32-159-229
4236|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
4240|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
4244|code|CMP             R2, #0|0-0-82-227
4248|code|BXEQ            LR|30-255-47-1
4252|code|B               __gmon_start__|118-254-255-234
4256|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1094|196-14-1-0
4260|data|DCD __gmon_start___ptr_0 - 0x11F58|144-0-0-0
4264|code|LDR             R3, =(__bss_start__ - 0x10B0)|7-75
4266|code|LDR             R0, =(__bss_start__ - 0x10B4)|8-72
4268|code|ADD             R3, PC; __bss_start__|123-68
4270|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x10BA)|8-74
4272|code|ADD             R0, PC; __bss_start__|120-68
4274|code|ADDS            R3, #3|3-51
4276|code|SUBS            R3, R3, R0|27-26
4278|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4280|code|CMP             R3, #6|6-43
4282|code|BLS             locret_10C4|3-217
4284|code|LDR             R3, =(_ITM_deregisterTMCloneTable_ptr - 0x11F58)|5-75
4286|code|LDR             R3, [R2,R3]; _ITM_deregisterTMCloneTable|211-88
4288|code|CBZ             R3, locret_10C4|3-177
4290|code|BX              R3; _ITM_deregisterTMCloneTable|24-71
4292|code|BX              LR|112-71
4294|data|ALIGN 4|0-191
4296|data|DCD __bss_start__ - 0x10B0|8-16-1-0
4300|data|DCD __bss_start__ - 0x10B4|4-16-1-0
4304|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10BA|158-14-1-0
4308|data|DCD _ITM_deregisterTMCloneTable_ptr - 0x11F58|128-0-0-0
4312|code|LDR             R1, =(__bss_start__ - 0x10E0)|8-73
4314|code|LDR             R0, =(__bss_start__ - 0x10E4)|9-72
4316|code|ADD             R1, PC; __bss_start__|121-68
4318|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x10E8)|9-75
4320|code|ADD             R0, PC; __bss_start__|120-68
4322|code|SUBS            R1, R1, R0|9-26
4324|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4326|code|ASRS            R1, R1, #2|137-16
4328|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
4332|code|ASRS            R1, R1, #1|73-16
4334|code|BEQ             locret_10F8|3-208
4336|code|LDR             R2, =(_ITM_registerTMCloneTable_ptr - 0x11F58)|5-74
4338|code|LDR             R3, [R3,R2]; _ITM_registerTMCloneTable|155-88
4340|code|CBZ             R3, locret_10F8|3-177
4342|code|BX              R3; _ITM_registerTMCloneTable|24-71
4344|code|BX              LR|112-71
4346|data|ALIGN 4|0-191
4348|data|DCD __bss_start__ - 0x10E0|216-15-1-0
4352|data|DCD __bss_start__ - 0x10E4|212-15-1-0
4356|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x10E8|112-14-1-0
4360|data|DCD _ITM_registerTMCloneTable_ptr - 0x11F58|160-0-0-0
4364|code|PUSH            {R3,LR}|8-181
4366|code|LDR             R3, =(__bss_start__ - 0x1116)|10-75
4368|code|LDR             R2, =(_GLOBAL_OFFSET_TABLE_ - 0x1118)|10-74
4370|code|ADD             R3, PC; __bss_start__|123-68
4372|code|ADD             R2, PC; _GLOBAL_OFFSET_TABLE_|122-68
4374|code|LDRB            R3, [R3]|27-120
4376|code|CBNZ            R3, locret_1136|107-185
4378|code|LDR             R3, =(__cxa_finalize_ptr_0 - 0x11F58)|9-75
4380|code|LDR             R3, [R2,R3]; __imp___cxa_finalize|211-88
4382|code|CBZ             R3, loc_112A|35-177
4384|code|LDR             R3, =(off_12004 - 0x1126)|8-75
4386|code|ADD             R3, PC; off_12004|123-68
4388|code|LDR             R0, [R3]; off_12004 ; void *|24-104
4390|code|BLX             __cxa_finalize|255-247-110-236
4394|code|BL              sub_10A8|255-247-189-255
4398|code|LDR             R3, =(__bss_start__ - 0x1136)|6-75
4400|code|MOVS            R2, #1|1-34
4402|code|ADD             R3, PC; __bss_start__|123-68
4404|code|STRB            R2, [R3]|26-112
4406|code|POP             {R3,PC}|8-189
4408|data|DCD __bss_start__ - 0x1116|162-15-1-0
4412|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x1118|64-14-1-0
4416|data|DCD __cxa_finalize_ptr_0 - 0x11F58|124-0-0-0
4420|data|DCD off_12004 - 0x1126|222-14-1-0
4424|data|DCD __bss_start__ - 0x1136|130-15-1-0
4428|code|LDR             R0, =(dword_11E4C - 0x1154)|7-72
4430|code|PUSH            {R3,LR}|8-181
4432|code|ADD             R0, PC; dword_11E4C|120-68
4434|code|LDR             R2, [R0]|2-104
4436|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x115A)|6-75
4438|code|ADD             R3, PC; _GLOBAL_OFFSET_TABLE_|123-68
4440|code|CBNZ            R2, loc_1160|18-185
4442|code|POP.W           {R3,LR}|189-232-8-64
4446|code|B               sub_10D8|187-231
4448|code|LDR             R2, =(_Jv_RegisterClasses_ptr - 0x11F58)|4-74
4450|code|LDR             R3, [R3,R2]; _Jv_RegisterClasses|155-88
4452|code|CMP             R3, #0|0-43
4454|code|BEQ             loc_115A|248-208
4456|code|BLX             R3; _Jv_RegisterClasses|152-71
4458|code|B               loc_115A|246-231
4460|data|DCD dword_11E4C - 0x1154|248-12-1-0
4464|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x115A|254-13-1-0
4468|data|DCD _Jv_RegisterClasses_ptr - 0x11F58|156-0-0-0
4472|code|PUSH.W          {R3-R9,LR}|45-233-248-67
4476|code|MOV             R7, R0|7-70
4478|code|LDR             R6, =(off_11E48 - 0x118A)|12-78
4480|code|MOV             R8, R1|136-70
4482|code|LDR             R5, =(off_11E44 - 0x1190)|12-77
4484|code|MOV             R9, R2|145-70
4486|code|ADD             R6, PC; off_11E48|126-68
4488|code|BLX             .init_proc|255-247-38-236
4492|code|ADD             R5, PC; off_11E44|125-68
4494|code|SUBS            R6, R6, R5|118-27
4496|code|ASRS            R6, R6, #2|182-16
4498|code|BEQ             locret_11AA|10-208
4500|code|SUBS            R5, #4|4-61
4502|code|MOVS            R4, #0|0-36
4504|code|ADDS            R4, #1|1-52
4506|code|LDR.W           R3, [R5,#4]!|85-248-4-63
4510|code|MOV             R0, R7|56-70
4512|code|MOV             R1, R8|65-70
4514|code|MOV             R2, R9|74-70
4516|code|BLX             R3|152-71
4518|code|CMP             R4, R6|180-66
4520|code|BNE             loc_1198|246-209
4522|code|POP.W           {R3-R9,PC}|189-232-248-131
4526|data|ALIGN 0x10|0-191
4528|data|DCD off_11E48 - 0x118A|190-12-1-0
4532|data|DCD off_11E44 - 0x1190|180-12-1-0
4536|code|BX              LR|112-71
4538|data|ALIGN 4|0-191
4540|code|PUSH            {R3,LR}; _fini|8-64-45-233
4544|code|POP             {R3,PC}|8-128-189-232
6188|data|ALIGN 0x10|0-0-0-0
73284|data|DCD sub_114C+1|77-17-0-0
73288|data|DCD sub_110C+1|13-17-0-0
73292|data|DCD 0|0-0-0-0
73296|data|Elf32_Dyn <1, <1>>; DT_NEEDED libsgutils2.so.2|1-0-0-0-1-0-0-0
73304|data|Elf32_Dyn <1, <0x113>>; DT_NEEDED libc.so.6|1-0-0-0-19-1-0-0
73312|data|Elf32_Dyn <1, <0x1C9>>; DT_NEEDED ld-linux-armhf.so.3|1-0-0-0-201-1-0-0
73320|data|Elf32_Dyn <0xC, <0x9D8>>; DT_INIT|12-0-0-0-216-9-0-0
73328|data|Elf32_Dyn <0xD, <0x11BC>>; DT_FINI|13-0-0-0-188-17-0-0
73336|data|Elf32_Dyn <0x19, <0x11E44>>; DT_INIT_ARRAY|25-0-0-0-68-30-1-0
73344|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73352|data|Elf32_Dyn <0x1A, <0x11E48>>; DT_FINI_ARRAY|26-0-0-0-72-30-1-0
73360|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73368|data|Elf32_Dyn <0x6FFFFEF5, <0x1B4>>; DT_GNU_HASH|245-254-255-111-180-1-0-0
73376|data|Elf32_Dyn <5, <0x534>>; DT_STRTAB|5-0-0-0-52-5-0-0
73384|data|Elf32_Dyn <6, <0x214>>; DT_SYMTAB|6-0-0-0-20-2-0-0
73392|data|Elf32_Dyn <0xA, <0x260>>; DT_STRSZ|10-0-0-0-96-2-0-0
73400|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73408|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73416|data|Elf32_Dyn <3, <0x11F58>>; DT_PLTGOT|3-0-0-0-88-31-1-0
73424|data|Elf32_Dyn <2, <0xD8>>; DT_PLTRELSZ|2-0-0-0-216-0-0-0
73432|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73440|data|Elf32_Dyn <0x17, <0x900>>; DT_JMPREL|23-0-0-0-0-9-0-0
73448|data|Elf32_Dyn <0x11, <0x838>>; DT_REL|17-0-0-0-56-8-0-0
73456|data|Elf32_Dyn <0x12, <0xC8>>; DT_RELSZ|18-0-0-0-200-0-0-0
73464|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73472|data|Elf32_Dyn <0x18, <0>>; DT_BIND_NOW|24-0-0-0-0-0-0-0
73480|data|Elf32_Dyn <0x6FFFFFFB, <1>>; DT_FLAGS_1|251-255-255-111-1-0-0-0
73488|data|Elf32_Dyn <0x6FFFFFFE, <0x7F8>>; DT_VERNEED|254-255-255-111-248-7-0-0
73496|data|Elf32_Dyn <0x6FFFFFFF, <2>>; DT_VERNEEDNUM|255-255-255-111-2-0-0-0
73504|data|Elf32_Dyn <0x6FFFFFF0, <0x794>>; DT_VERSYM|240-255-255-111-148-7-0-0
73512|data|Elf32_Dyn <0x6FFFFFFA, <0x10>>; DT_RELCOUNT|250-255-255-111-16-0-0-0
73520|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73560|data|DCD stru_11E50|80-30-1-0
73564|data|DCD 0|0-0-0-0
73568|data|DCD dword_0|0-0-0-0
73572|data|DCD __imp_sg_set_binary_mode|192-32-1-0
73576|data|DCD __imp___cxa_finalize|196-32-1-0
73580|data|DCD __imp_dStrHex|200-32-1-0
73584|data|DCD __imp_free|204-32-1-0
73588|data|DCD __imp_sg_cmds_close_device|212-32-1-0
73592|data|DCD __imp___stack_chk_fail|220-32-1-0
73596|data|DCD __imp_perror|224-32-1-0
73600|data|DCD __imp_fwrite|232-32-1-0
73604|data|DCD __imp_open64|236-32-1-0
73608|data|DCD __imp_malloc|240-32-1-0
73612|data|DCD __imp___libc_start_main|244-32-1-0
73616|data|DCD __imp___gmon_start__|60-33-1-0
73620|data|DCD __imp_getopt_long|248-32-1-0
73624|data|DCD __imp_memset|252-32-1-0
73628|data|DCD __imp_strncpy|0-33-1-0
73632|data|DCD __imp_write|4-33-1-0
73636|data|DCD __imp_sg_get_llnum|8-33-1-0
73640|data|DCD __imp___fprintf_chk|12-33-1-0
73644|data|DCD __imp_safe_strerror|16-33-1-0
73648|data|DCD __imp_sg_get_category_sense_str|20-33-1-0
73652|data|DCD __imp_sg_get_num|24-33-1-0
73656|data|DCD __imp_sg_cmds_open_device|28-33-1-0
73660|data|DCD __imp_sg_ll_read_long10|32-33-1-0
73664|data|DCD __imp_sg_ll_read_long16|40-33-1-0
73668|data|DCD __imp_abort|44-33-1-0
73672|data|DCD __imp_close|48-33-1-0
73676|data|DCD __imp___snprintf_chk|52-33-1-0
73680|data|DCD __libc_csu_fini+1|185-17-0-0
73684|data|DCD __imp___cxa_finalize|196-32-1-0
73688|data|DCD _ITM_deregisterTMCloneTable|56-33-1-0
73692|data|DCD __stack_chk_guard|208-32-1-0
73696|data|DCD optind|216-32-1-0
73700|data|DCD stderr|228-32-1-0
73704|data|DCD __imp___gmon_start__|60-33-1-0
73708|data|DCD __libc_csu_init+1|121-17-0-0
73712|data|DCD main+1|61-11-0-0
73716|data|DCD _Jv_RegisterClasses|64-33-1-0
73720|data|DCD _ITM_registerTMCloneTable|68-33-1-0
73724|data|DCD optarg|36-33-1-0
73912|data|% 1; Alternative name is '__bss_start'|255
