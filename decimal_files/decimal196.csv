address|type|disassembly|bytes
32768|data|DCD 0x464C457F; File format: \x7FELF|127-69-76-70
32772|data|DCB 1; File class: 32-bit|1
32773|data|DCB 1; Data encoding: little-endian|1
32774|data|DCB 1; File version|1
32775|data|DCB 0; OS/ABI: UNIX System V ABI|0
32776|data|DCB 0; ABI Version|0
32777|data|DCB 0, 0, 0, 0, 0, 0, 0; Padding|0-0-0-0-0-0-0
32784|data|DCW 2; File type: Executable|2-0
32786|data|DCW 0x28; Machine: ARM|40-0
32788|data|DCD 1; File version|1-0-0-0
32792|data|DCD start+1; Entry point|197-145-0-0
32796|data|DCD 0x34; PHT file offset|52-0-0-0
32800|data|DCD 0x2290; SHT file offset|144-34-0-0
32804|data|DCD 0x5000402; Processor-specific flags|2-4-0-5
32808|data|DCW 0x34; ELF header size|52-0
32810|data|DCW 0x20; PHT entry size|32-0
32812|data|DCW 8; Number of entries in PHT|8-0
32814|data|DCW 0x28; SHT entry size|40-0
32816|data|DCW 0x1B; Number of entries in SHT|27-0
32818|data|DCW 0x1A; SHT entry index for string table|26-0
32820|data|DCD 0x70000001; Type: EXIDX|1-0-0-112
32824|data|DCD 0x1968; File offset|104-25-0-0
32828|data|DCD unk_9968; Virtual address|104-153-0-0
32832|data|DCD 0x9968; Physical address|104-153-0-0
32836|data|DCD 8; Size in file image|8-0-0-0
32840|data|DCD 8; Size in memory image|8-0-0-0
32844|data|DCD 4; Flags|4-0-0-0
32848|data|DCD 4; Alignment|4-0-0-0
32852|data|DCD 6; Type: PHDR|6-0-0-0
32856|data|DCD 0x34; File offset|52-0-0-0
32860|data|DCD dword_8034; Virtual address|52-128-0-0
32864|data|DCD 0x8034; Physical address|52-128-0-0
32868|data|DCD 0x100; Size in file image|0-1-0-0
32872|data|DCD 0x100; Size in memory image|0-1-0-0
32876|data|DCD 5; Flags|5-0-0-0
32880|data|DCD 4; Alignment|4-0-0-0
32884|data|DCD 3; Type: INTERP|3-0-0-0
32888|data|DCD 0x134; File offset|52-1-0-0
32892|data|DCD aLibLdLinuxArmh; Virtual address|52-129-0-0
32896|data|DCD 0x8134; Physical address|52-129-0-0
32900|data|DCD 0x19; Size in file image|25-0-0-0
32904|data|DCD 0x19; Size in memory image|25-0-0-0
32908|data|DCD 4; Flags|4-0-0-0
32912|data|DCD 1; Alignment|1-0-0-0
32916|data|DCD 1; Type: LOAD|1-0-0-0
32920|data|DCD 0; File offset|0-0-0-0
32924|data|DCD dword_8000; Virtual address|0-128-0-0
32928|data|DCD 0x8000; Physical address|0-128-0-0
32932|data|DCD 0x1974; Size in file image|116-25-0-0
32936|data|DCD 0x1974; Size in memory image|116-25-0-0
32940|data|DCD 5; Flags|5-0-0-0
32944|data|DCD 0x8000; Alignment|0-128-0-0
32948|data|DCD 1; Type: LOAD|1-0-0-0
32952|data|DCD 0x2000; File offset|0-32-0-0
32956|data|DCD off_12000; Virtual address|0-32-1-0
32960|data|DCD 0x12000; Physical address|0-32-1-0
32964|data|DCD 0x168; Size in file image|104-1-0-0
32968|data|DCD 0x1FCC; Size in memory image|204-31-0-0
32972|data|DCD 6; Flags|6-0-0-0
32976|data|DCD 0x8000; Alignment|0-128-0-0
32980|data|DCD 2; Type: DYNAMIC|2-0-0-0
32984|data|DCD 0x200C; File offset|12-32-0-0
32988|data|DCD stru_1200C; Virtual address|12-32-1-0
32992|data|DCD 0x1200C; Physical address|12-32-1-0
32996|data|DCD 0xE8; Size in file image|232-0-0-0
33000|data|DCD 0xE8; Size in memory image|232-0-0-0
33004|data|DCD 6; Flags|6-0-0-0
33008|data|DCD 4; Alignment|4-0-0-0
33012|data|DCD 4; Type: NOTE|4-0-0-0
33016|data|DCD 0x150; File offset|80-1-0-0
33020|data|DCD dword_8150; Virtual address|80-129-0-0
33024|data|DCD 0x8150; Physical address|80-129-0-0
33028|data|DCD 0x44; Size in file image|68-0-0-0
33032|data|DCD 0x44; Size in memory image|68-0-0-0
33036|data|DCD 4; Flags|4-0-0-0
33040|data|DCD 4; Alignment|4-0-0-0
33044|data|DCD 0x6474E551; Type: STACK|81-229-116-100
33048|data|DCD 0; File offset|0-0-0-0
33052|data|DCD 0; Virtual address|0-0-0-0
33056|data|DCD 0; Physical address|0-0-0-0
33060|data|DCD 0; Size in file image|0-0-0-0
33064|data|DCD 0; Size in memory image|0-0-0-0
33068|data|DCD 6; Flags|6-0-0-0
33072|data|DCD 0x10; Alignment|16-0-0-0
33076|data|DCB "/lib/ld-linux-armhf.so.3",0|47-108-105-98-47-108-100-45-108-105-110-117-120-45-97-114-109-104-102-46-115-111-46-51-0
33101|data|DCB 0, 0, 0|0-0-0
33104|data|DCD 4; Name Size|4-0-0-0
33108|data|DCD 0x10; Desc Size|16-0-0-0
33112|data|DCD 1; Type: NT_GNU_ABI_TAG|1-0-0-0
33116|data|DCB "GNU",0; Name|71-78-85-0
33120|data|DCD 0, 2, 6, 0x20; ABI: Linux 2.6.32|0-0-0-0-2-0-0-0-6-0-0-0-32-0-0-0
33136|data|DCD 4; Name Size|4-0-0-0
33140|data|DCD 0x14; Desc Size|20-0-0-0
33144|data|DCD 3; Type: NT_GNU_BUILD_ID|3-0-0-0
33148|data|DCB "GNU",0; Name|71-78-85-0
33152|data|DCB 0x79, 0x39, 0xC5, 0x84, 0xB4, 0x55, 0x95, 0x7C, 0xC6; Desc|121-57-197-132-180-85-149-124-198-9-174-203-2-230-68-226-160-135-194-105
33172|data|DCD 0x11|17-0-0-0
33176|data|DCD 2|2-0-0-0
33180|data|DCD 8|8-0-0-0
33184|data|DCD 8|8-0-0-0
33188|data|DCD 0x802110A, 0xE32D6114, 0xC000000, 0x21002802, 0x80000400|10-17-2-8-20-97-45-227-0-0-0-12-2-40-0-33-0-4-0-128-1-72-32-153-0-0-0-0-0-16-0-128
33220|data|DCD 0, 2, 3, 4, 6, 0, 8, 0xB, 0xF, 0, 0x10, 0x11, 0x12|0-0-0-0-2-0-0-0-3-0-0-0-4-0-0-0-6-0-0-0-0-0-0-0-8-0-0-0-11-0-0-0-15-0-0-0-0-0-0-0-16-0-0-0-17-0-0-0-18-0-0-0-19-0-0-0-22-0-0-0-23-0-0-0-25-0-0-0
33288|data|DCD 0xD82B831, 0x12F7C433, 0xFF878B78, 0xF11ED7D, 0xFD40322C|49-184-130-13-51-196-247-18-120-139-135-255-125-237-17-15-44-50-64-253-63-126-150-124-46-78-61-246-34-190-15-175-63-249-255-188-36-117-130-13-56-242-139-28-0-35-249-164-189-238-144-202-187-213-128-194-161-159-169-15-9-172-249-143-17-123-156-124-96-152-239-18-138-31-108-178-91-154-59-15-255-236-132-20-184-43-107-21-61-173-57-13-56-232-68-16-41-29-140-28
33388|data|Elf32_Sym <0>|0-0-0-0-0-0-0-0-0-0-0-0-0-0-0-0
33404|data|Elf32_Sym <aGmonStart - byte_841C, 0, 0, 0x20, 0, 0>; "__gmon_start__"|200-0-0-0-0-0-0-0-0-0-0-0-32-0-0-0
33420|data|Elf32_Sym <aMemset - byte_841C, 0, 0, 0x12, 0, 0>; "memset"|64-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33436|data|Elf32_Sym <aOptind - byte_841C, optind, 4, 0x11, 0, 0x18>; "optind"|23-0-0-0-104-33-1-0-4-0-0-0-17-0-24-0
33452|data|Elf32_Sym <aGetopt - byte_841C, 0, 0, 0x12, 0, 0>; "getopt"|102-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33468|data|Elf32_Sym <aAbort - byte_841C, 0, 0, 0x12, 0, 0>; "abort"|50-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33484|data|Elf32_Sym <aFflush - byte_841C, 0, 0, 0x12, 0, 0>; "fflush"|11-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33500|data|Elf32_Sym <aExit - byte_841C, 0, 0, 0x12, 0, 0>; "exit"|18-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33516|data|Elf32_Sym <aLibcStartMain - byte_841C, 0, 0, 0x12, 0, 0>; "__libc_start_main"|182-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33532|data|Elf32_Sym <aStrtoul - byte_841C, 0, 0, 0x12, 0, 0>; "strtoul"|116-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33548|data|Elf32_Sym <aFprintf - byte_841C, 0, 0, 0x12, 0, 0>; "fprintf"|156-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33564|data|Elf32_Sym <aMemcmp - byte_841C, 0, 0, 0x12, 0, 0>; "memcmp"|95-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33580|data|Elf32_Sym <aStderr - byte_841C, stderr, 4, 0x11, 0, 0x18>; "stderr"|137-0-0-0-112-33-1-0-4-0-0-0-17-0-24-0
33596|data|Elf32_Sym <aErrnoLocation - byte_841C, 0, 0, 0x12, 0, 0>; "__errno_location"|71-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33612|data|Elf32_Sym <aPutchar - byte_841C, 0, 0, 0x12, 0, 0>; "putchar"|42-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33628|data|Elf32_Sym <aPread64 - byte_841C, 0, 0, 0x12, 0, 0>; "pread64"|56-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33644|data|Elf32_Sym <aIoctl - byte_841C, 0, 0, 0x12, 0, 0>; "ioctl"|144-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33660|data|Elf32_Sym <aStrerror - byte_841C, 0, 0, 0x12, 0, 0>; "strerror"|173-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33676|data|Elf32_Sym <aPuts - byte_841C, 0, 0, 0x12, 0, 0>; "puts"|37-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33692|data|Elf32_Sym <aOpen64 - byte_841C, 0, 0, 0x12, 0, 0>; "open64"|88-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33708|data|Elf32_Sym <aPwrite64 - byte_841C, 0, 0, 0x12, 0, 0>; "pwrite64"|164-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33724|data|Elf32_Sym <aClose - byte_841C, 0, 0, 0x12, 0, 0>; "close"|150-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33740|data|Elf32_Sym <aPerror - byte_841C, 0, 0, 0x12, 0, 0>; "perror"|30-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33756|data|Elf32_Sym <aFprintf+1 - byte_841C, 0, 0, 0x12, 0, 0>; "printf"|157-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33772|data|Elf32_Sym <aMalloc - byte_841C, 0, 0, 0x12, 0, 0>; "malloc"|124-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33788|data|Elf32_Sym <aRaise - byte_841C, 0, 0, 0x12, 0, 0>; "raise"|131-0-0-0-0-0-0-0-0-0-0-0-18-0-0-0
33804|data|Elf32_Sym <aStdout - byte_841C, stdout, 4, 0x11, 0, 0x18>; "stdout"|109-0-0-0-116-33-1-0-4-0-0-0-17-0-24-0
33820|data|DCB 0|0
33821|data|DCB "libc.so.6",0|108-105-98-99-46-115-111-46-54-0
33831|data|DCB "fflush",0|102-102-108-117-115-104-0
33838|data|DCB "exit",0|101-120-105-116-0
33843|data|DCB "optind",0|111-112-116-105-110-100-0
33850|data|DCB "perror",0|112-101-114-114-111-114-0
33857|data|DCB "puts",0|112-117-116-115-0
33862|data|DCB "putchar",0|112-117-116-99-104-97-114-0
33870|data|DCB "abort",0|97-98-111-114-116-0
33876|data|DCB "pread64",0|112-114-101-97-100-54-52-0
33884|data|DCB "memset",0|109-101-109-115-101-116-0
33891|data|DCB "__errno_location",0|95-95-101-114-114-110-111-95-108-111-99-97-116-105-111-110-0
33908|data|DCB "open64",0|111-112-101-110-54-52-0
33915|data|DCB "memcmp",0|109-101-109-99-109-112-0
33922|data|DCB "getopt",0|103-101-116-111-112-116-0
33929|data|DCB "stdout",0|115-116-100-111-117-116-0
33936|data|DCB "strtoul",0|115-116-114-116-111-117-108-0
33944|data|DCB "malloc",0|109-97-108-108-111-99-0
33951|data|DCB "raise",0|114-97-105-115-101-0
33957|data|DCB "stderr",0|115-116-100-101-114-114-0
33964|data|DCB "ioctl",0|105-111-99-116-108-0
33970|data|DCB "close",0|99-108-111-115-101-0
33976|data|DCB "fprintf",0|102-112-114-105-110-116-102-0
33984|data|DCB "pwrite64",0|112-119-114-105-116-101-54-52-0
33993|data|DCB "strerror",0|115-116-114-101-114-114-111-114-0
34002|data|DCB "__libc_start_main",0|95-95-108-105-98-99-95-115-116-97-114-116-95-109-97-105-110-0
34020|data|DCB "__gmon_start__",0|95-95-103-109-111-110-95-115-116-97-114-116-95-95-0
34035|data|DCB "GLIBC_2.4",0|71-76-73-66-67-95-50-46-52-0
34045|data|DCB 0|0
34046|data|DCW 0|0-0
34048|data|DCW 0; local  symbol: __gmon_start__|0-0
34050|data|DCW 2; memset@@GLIBC_2.4|2-0
34052|data|DCW 2; optind@@GLIBC_2.4|2-0
34054|data|DCW 2; getopt@@GLIBC_2.4|2-0
34056|data|DCW 2; abort@@GLIBC_2.4|2-0
34058|data|DCW 2; fflush@@GLIBC_2.4|2-0
34060|data|DCW 2; exit@@GLIBC_2.4|2-0
34062|data|DCW 2; __libc_start_main@@GLIBC_2.4|2-0
34064|data|DCW 2; strtoul@@GLIBC_2.4|2-0
34066|data|DCW 2; fprintf@@GLIBC_2.4|2-0
34068|data|DCW 2; memcmp@@GLIBC_2.4|2-0
34070|data|DCW 2; stderr@@GLIBC_2.4|2-0
34072|data|DCW 2; __errno_location@@GLIBC_2.4|2-0
34074|data|DCW 2; putchar@@GLIBC_2.4|2-0
34076|data|DCW 2; pread64@@GLIBC_2.4|2-0
34078|data|DCW 2; ioctl@@GLIBC_2.4|2-0
34080|data|DCW 2; strerror@@GLIBC_2.4|2-0
34082|data|DCW 2; puts@@GLIBC_2.4|2-0
34084|data|DCW 2; open64@@GLIBC_2.4|2-0
34086|data|DCW 2; pwrite64@@GLIBC_2.4|2-0
34088|data|DCW 2; close@@GLIBC_2.4|2-0
34090|data|DCW 2; perror@@GLIBC_2.4|2-0
34092|data|DCW 2; printf@@GLIBC_2.4|2-0
34094|data|DCW 2; malloc@@GLIBC_2.4|2-0
34096|data|DCW 2; raise@@GLIBC_2.4|2-0
34098|data|DCW 2; stdout@@GLIBC_2.4|2-0
34100|data|Elf32_Verneed <1, 1, aLibcSo6 - byte_841C, 0x10, 0>; "libc.so.6"|1-0-1-0-1-0-0-0-16-0-0-0-0-0-0-0
34116|data|Elf32_Vernaux <0xD696914, 0, 2, aGlibc24 - byte_841C, 0>; "GLIBC_2.4"|20-105-105-13-0-0-2-0-215-0-0-0-0-0-0-0
34132|data|Elf32_Rel <0x1215C, 0x115>; R_ARM_GLOB_DAT __gmon_start__|92-33-1-0-21-1-0-0
34140|data|Elf32_Rel <0x12168, 0x314>; R_ARM_COPY optind|104-33-1-0-20-3-0-0
34148|data|Elf32_Rel <0x12170, 0xC14>; R_ARM_COPY stderr|112-33-1-0-20-12-0-0
34156|data|Elf32_Rel <0x12174, 0x1A14>; R_ARM_COPY stdout|116-33-1-0-20-26-0-0
34164|data|Elf32_Rel <0x12100, 0x1916>; R_ARM_JUMP_SLOT raise|0-33-1-0-22-25-0-0
34172|data|Elf32_Rel <0x12104, 0x1716>; R_ARM_JUMP_SLOT printf|4-33-1-0-22-23-0-0
34180|data|Elf32_Rel <0x12108, 0x616>; R_ARM_JUMP_SLOT fflush|8-33-1-0-22-6-0-0
34188|data|Elf32_Rel <0x1210C, 0xB16>; R_ARM_JUMP_SLOT memcmp|12-33-1-0-22-11-0-0
34196|data|Elf32_Rel <0x12110, 0x1616>; R_ARM_JUMP_SLOT perror|16-33-1-0-22-22-0-0
34204|data|Elf32_Rel <0x12114, 0x1016>; R_ARM_JUMP_SLOT ioctl|20-33-1-0-22-16-0-0
34212|data|Elf32_Rel <0x12118, 0xF16>; R_ARM_JUMP_SLOT pread64|24-33-1-0-22-15-0-0
34220|data|Elf32_Rel <0x1211C, 0x1316>; R_ARM_JUMP_SLOT open64|28-33-1-0-22-19-0-0
34228|data|Elf32_Rel <0x12120, 0x1216>; R_ARM_JUMP_SLOT puts|32-33-1-0-22-18-0-0
34236|data|Elf32_Rel <0x12124, 0x1816>; R_ARM_JUMP_SLOT malloc|36-33-1-0-22-24-0-0
34244|data|Elf32_Rel <0x12128, 0x816>; R_ARM_JUMP_SLOT __libc_start_main|40-33-1-0-22-8-0-0
34252|data|Elf32_Rel <0x1212C, 0x1116>; R_ARM_JUMP_SLOT strerror|44-33-1-0-22-17-0-0
34260|data|Elf32_Rel <0x12130, 0x116>; R_ARM_JUMP_SLOT __gmon_start__|48-33-1-0-22-1-0-0
34268|data|Elf32_Rel <0x12134, 0x716>; R_ARM_JUMP_SLOT exit|52-33-1-0-22-7-0-0
34276|data|Elf32_Rel <0x12138, 0x916>; R_ARM_JUMP_SLOT strtoul|56-33-1-0-22-9-0-0
34284|data|Elf32_Rel <0x1213C, 0x416>; R_ARM_JUMP_SLOT getopt|60-33-1-0-22-4-0-0
34292|data|Elf32_Rel <0x12140, 0xA16>; R_ARM_JUMP_SLOT fprintf|64-33-1-0-22-10-0-0
34300|data|Elf32_Rel <0x12144, 0xD16>; R_ARM_JUMP_SLOT __errno_location|68-33-1-0-22-13-0-0
34308|data|Elf32_Rel <0x12148, 0x216>; R_ARM_JUMP_SLOT memset|72-33-1-0-22-2-0-0
34316|data|Elf32_Rel <0x1214C, 0xE16>; R_ARM_JUMP_SLOT putchar|76-33-1-0-22-14-0-0
34324|data|Elf32_Rel <0x12150, 0x1416>; R_ARM_JUMP_SLOT pwrite64|80-33-1-0-22-20-0-0
34332|data|Elf32_Rel <0x12154, 0x516>; R_ARM_JUMP_SLOT abort|84-33-1-0-22-5-0-0
34340|data|Elf32_Rel <0x12158, 0x1516>; R_ARM_JUMP_SLOT close|88-33-1-0-22-21-0-0
34348|code|PUSH            {R3,LR}|8-64-45-233
34352|code|BL              sub_91F4|239-2-0-235
34356|code|POP             {R3,PC}|8-128-189-232
34360|code|PUSH            {LR}|4-224-45-229
34364|code|LDR             LR, =(_GLOBAL_OFFSET_TABLE_ - 0x8648)|4-224-159-229
34368|code|ADD             LR, PC, LR; _GLOBAL_OFFSET_TABLE_|14-224-143-224
34372|code|LDR             PC, [LR,#8]!|8-240-190-229
34376|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x8648|172-154-0-0
34380|code|ADR             R12, 0x8654|0-198-143-226
34384|code|ADD             R12, R12, #0x9000|9-202-140-226
34388|code|LDR             PC, [R12,#(raise_ptr - 0x11654)]!; __imp_raise|172-250-188-229
34392|code|ADR             R12, 0x8660|0-198-143-226
34396|code|ADD             R12, R12, #0x9000|9-202-140-226
34400|code|LDR             PC, [R12,#(printf_ptr - 0x11660)]!; __imp_printf|164-250-188-229
34404|code|ADR             R12, 0x866C|0-198-143-226
34408|code|ADD             R12, R12, #0x9000|9-202-140-226
34412|code|LDR             PC, [R12,#(fflush_ptr - 0x1166C)]!; __imp_fflush|156-250-188-229
34416|code|ADR             R12, 0x8678|0-198-143-226
34420|code|ADD             R12, R12, #0x9000|9-202-140-226
34424|code|LDR             PC, [R12,#(memcmp_ptr - 0x11678)]!; __imp_memcmp|148-250-188-229
34428|code|ADR             R12, 0x8684|0-198-143-226
34432|code|ADD             R12, R12, #0x9000|9-202-140-226
34436|code|LDR             PC, [R12,#(perror_ptr - 0x11684)]!; __imp_perror|140-250-188-229
34440|code|ADR             R12, 0x8690|0-198-143-226
34444|code|ADD             R12, R12, #0x9000|9-202-140-226
34448|code|LDR             PC, [R12,#(ioctl_ptr - 0x11690)]!; __imp_ioctl|132-250-188-229
34452|code|ADR             R12, 0x869C|0-198-143-226
34456|code|ADD             R12, R12, #0x9000|9-202-140-226
34460|code|LDR             PC, [R12,#(pread64_ptr - 0x1169C)]!; __imp_pread64|124-250-188-229
34464|code|ADR             R12, 0x86A8|0-198-143-226
34468|code|ADD             R12, R12, #0x9000|9-202-140-226
34472|code|LDR             PC, [R12,#(open64_ptr - 0x116A8)]!; __imp_open64|116-250-188-229
34476|code|ADR             R12, 0x86B4|0-198-143-226
34480|code|ADD             R12, R12, #0x9000|9-202-140-226
34484|code|LDR             PC, [R12,#(puts_ptr - 0x116B4)]!; __imp_puts|108-250-188-229
34488|code|ADR             R12, 0x86C0|0-198-143-226
34492|code|ADD             R12, R12, #0x9000|9-202-140-226
34496|code|LDR             PC, [R12,#(malloc_ptr - 0x116C0)]!; __imp_malloc|100-250-188-229
34500|code|ADR             R12, 0x86CC|0-198-143-226
34504|code|ADD             R12, R12, #0x9000|9-202-140-226
34508|code|LDR             PC, [R12,#(__libc_start_main_ptr - 0x116CC)]!; __imp___libc_start_main|92-250-188-229
34512|code|ADR             R12, 0x86D8|0-198-143-226
34516|code|ADD             R12, R12, #0x9000|9-202-140-226
34520|code|LDR             PC, [R12,#(strerror_ptr - 0x116D8)]!; __imp_strerror|84-250-188-229
34524|code|ADR             R12, 0x86E4|0-198-143-226
34528|code|ADD             R12, R12, #0x9000|9-202-140-226
34532|code|LDR             PC, [R12,#(__gmon_start___ptr - 0x116E4)]!; __imp___gmon_start__|76-250-188-229
34536|code|ADR             R12, 0x86F0|0-198-143-226
34540|code|ADD             R12, R12, #0x9000|9-202-140-226
34544|code|LDR             PC, [R12,#(exit_ptr - 0x116F0)]!; __imp_exit|68-250-188-229
34548|code|ADR             R12, 0x86FC|0-198-143-226
34552|code|ADD             R12, R12, #0x9000|9-202-140-226
34556|code|LDR             PC, [R12,#(strtoul_ptr - 0x116FC)]!; __imp_strtoul|60-250-188-229
34560|code|ADR             R12, 0x8708|0-198-143-226
34564|code|ADD             R12, R12, #0x9000|9-202-140-226
34568|code|LDR             PC, [R12,#(getopt_ptr - 0x11708)]!; __imp_getopt|52-250-188-229
34572|code|ADR             R12, 0x8714|0-198-143-226
34576|code|ADD             R12, R12, #0x9000|9-202-140-226
34580|code|LDR             PC, [R12,#(fprintf_ptr - 0x11714)]!; __imp_fprintf|44-250-188-229
34584|code|ADR             R12, 0x8720|0-198-143-226
34588|code|ADD             R12, R12, #0x9000|9-202-140-226
34592|code|LDR             PC, [R12,#(__errno_location_ptr - 0x11720)]!; __imp___errno_location|36-250-188-229
34596|code|ADR             R12, 0x872C|0-198-143-226
34600|code|ADD             R12, R12, #0x9000|9-202-140-226
34604|code|LDR             PC, [R12,#(memset_ptr - 0x1172C)]!; __imp_memset|28-250-188-229
34608|code|ADR             R12, 0x8738|0-198-143-226
34612|code|ADD             R12, R12, #0x9000|9-202-140-226
34616|code|LDR             PC, [R12,#(putchar_ptr - 0x11738)]!; __imp_putchar|20-250-188-229
34620|code|ADR             R12, 0x8744|0-198-143-226
34624|code|ADD             R12, R12, #0x9000|9-202-140-226
34628|code|LDR             PC, [R12,#(pwrite64_ptr - 0x11744)]!; __imp_pwrite64|12-250-188-229
34632|code|ADR             R12, 0x8750|0-198-143-226
34636|code|ADD             R12, R12, #0x9000|9-202-140-226
34640|code|LDR             PC, [R12,#(abort_ptr - 0x11750)]!; __imp_abort|4-250-188-229
34644|code|ADR             R12, 0x875C|0-198-143-226
34648|code|ADD             R12, R12, #0x9000|9-202-140-226
34652|code|LDR             PC, [R12,#(close_ptr - 0x1175C)]!; __imp_close|252-249-188-229
34656|code|PUSH            {R4-R7,LR}|240-181
34658|code|SUB.W           SP, SP, #0x20C|173-245-3-125
34662|code|MOVW            R3, #0x2180|66-242-128-19
34666|code|ADD             R4, SP, #0x220+var_218|2-172
34668|code|MOVT.W          R3, #1|192-242-1-3
34672|code|MOV.W           R6, #0x800|79-244-0-102
34676|code|LDR             R0, [R3]|24-104
34678|code|MOVS            R7, #0|0-39
34680|code|MOV             R1, R4|33-70
34682|code|STRD.W          R6, R7, [SP,#0x220+var_220]|205-233-0-103
34686|code|MOV.W           R2, #0x200|79-244-0-114
34690|code|BLX             pread64|255-247-136-239
34694|code|CMP             R0, #0|0-40
34696|code|BGE             loc_87AC|16-218
34698|code|BLX             __errno_location|255-247-198-239
34702|code|MOV             R1, #0x95C4|73-242-196-81-192-242-0-1
34710|code|MOV             R3, R0|3-70
34712|code|MOVW            R0, #0x95A0|73-242-160-80
34716|code|LDR             R2, [R3]|26-104
34718|code|MOVT.W          R0, #0; format|192-242-0-0
34722|code|BLX             printf|255-247-90-239
34726|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
34730|code|B               loc_87D6|20-224
34732|code|MOVW            R5, #0x2190|66-242-144-21
34736|code|MOVS            R2, #0|0-34
34738|code|MOVT.W          R5, #1|192-242-1-5
34742|code|MOVS            R1, #3|3-33
34744|code|AND.W           R3, R2, #3|2-240-3-3
34748|code|ASRS            R0, R2, #2|144-16
34750|code|LSLS            R3, R3, #1|91-0
34752|code|LDRB            R0, [R4,R0]|32-92
34754|code|LSL.W           R3, R1, R3|1-250-3-243
34758|code|ANDS            R3, R0|3-64
34760|code|IT EQ|8-191
34762|code|STRBEQ          R3, [R2,R5]|83-85
34764|code|ADDS            R2, #1|1-50
34766|code|CMP.W           R2, #0x200|178-245-0-127
34770|code|BNE             loc_87B8|241-209
34772|code|MOVS            R0, #0|0-32
34774|code|ADD.W           SP, SP, #0x20C|13-245-3-125
34778|code|POP             {R4-R7,PC}|240-189
34780|code|PUSH.W          {R4-R11,LR}|45-233-240-79
34784|code|MOV             R7, R0|7-70
34786|code|SUB             SP, SP, #0x8C|163-176
34788|code|MOV             R0, #aVersion1242005; s|73-242-24-96-192-242-0-0
34796|code|MOVS            R4, #0|0-36
34798|code|MOVS            R3, #0x10|16-35
34800|code|STR             R4, [SP,#0xB0+var_60]|20-148
34802|code|MOV             R9, R1|137-70
34804|code|ADD             R5, SP, #0xB0+var_48|26-173
34806|code|STR             R3, [SP,#0xB0+var_5C]|21-147
34808|code|STR             R5, [SP,#0xB0+var_58]|22-149
34810|code|BLX             puts|255-247-88-239
34814|code|CMP             R7, #1|1-47
34816|code|ITTTT GT|193-191
34818|code|MOVGT           R8, R4|160-70
34820|code|MOVGTW          R4, #0x9610|73-242-16-100
34824|code|MOVGT           R6, R8|70-70
34826|code|MOVTGT.W        R4, #0|192-242-0-4
34830|code|BLE             loc_8842|24-221
34832|code|MOVW            R2, #0x9644|73-242-68-98
34836|code|MOV             R0, R7; argc|56-70
34838|code|MOVT.W          R2, #0; shortopts|192-242-0-2
34842|code|MOV             R1, R9; argv|73-70
34844|code|BLX             getopt|255-247-112-239
34848|code|CMP             R0, #0|0-40
34850|code|BLE             loc_8854|23-221
34852|code|CMP             R0, #0x62 ; 'b'|98-40
34854|code|BEQ             loc_884E|18-208
34856|code|BLE             loc_883E|9-221
34858|code|CMP             R0, #0x68 ; 'h'|104-40
34860|code|BEQ             loc_8848|12-208
34862|code|CMP             R0, #0x69 ; 'i'|105-40
34864|code|BNE             loc_8842|7-209
34866|code|MOVW            R4, #0x9608|73-242-8-100
34870|code|MOVS            R6, #1|1-38
34872|code|MOVT.W          R4, #0|192-242-0-4
34876|code|B               loc_8810|232-231
34878|code|CMP             R0, #0x3F ; '?'|63-40
34880|code|BEQ             loc_8848|2-208
34882|code|MOVS            R0, #1|1-32
34884|code|BL              sub_92A4|0-240-46-253
34888|code|MOVS            R0, #0|0-32
34890|code|BL              sub_92A4|0-240-43-253
34894|code|MOV.W           R8, #1|79-240-1-8
34898|code|B               loc_8810|221-231
34900|code|MOV             R11, #0x12168|66-242-104-27-192-242-1-11
34908|code|LDR.W           R3, [R11]|219-248-0-48
34912|code|ADDS            R2, R3, #1|90-28
34914|code|STR.W           R2, [R11]|203-248-0-32
34918|code|CMP             R7, R2|151-66
34920|code|MOV.W           R1, R3,LSL#2|79-234-131-1
34924|code|LDR.W           R10, [R9,R3,LSL#2]|89-248-35-160
34928|code|BGT             loc_88DC|52-220
34930|code|MOVS            R3, #0|0-35
34932|code|STR             R3, [SP,#0xB0+var_A0]|4-147
34934|code|STR             R3, [SP,#0xB0+var_A4]|3-147
34936|code|MOV             R0, R10|80-70
34938|code|MOVS            R1, #2|2-33
34940|code|BLX             open64|255-247-16-239
34944|code|MOV             R7, #0x12180|66-242-128-23-192-242-1-7
34952|code|CMP             R0, #0|0-40
34954|code|STR             R0, [R7]|56-96
34956|code|BLT             loc_8940|88-219
34958|code|MOVW            R10, #0x3FA8|67-246-168-122
34962|code|MOVW            R1, #0x4D01|68-246-1-81
34966|code|MOVT.W          R10, #1|192-242-1-10
34970|code|MOVT.W          R1, #0x8020; request|200-242-32-1
34974|code|MOV             R2, R10|82-70
34976|code|BLX             ioctl|255-247-242-238
34980|code|CMP             R0, #0|0-40
34982|code|BNE             loc_894E|82-209
34984|code|LDR.W           R9, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-144
34988|code|CMP.W           R9, #0x2000|185-245-0-95
34992|code|BEQ             loc_8916|49-208
34994|code|BLS             loc_8910|45-217
34996|code|CMP.W           R9, #0x4000|185-245-128-79
35000|code|BEQ             loc_8916|45-208
35002|code|CMP.W           R9, #0x8000|185-245-0-79
35006|code|BEQ             loc_8916|42-208
35008|code|MOVW            R0, #0x9674|73-242-116-96
35012|code|MOV             R1, R9|73-70
35014|code|MOVT.W          R0, #0; format|192-242-0-0
35018|code|BLX             printf|255-247-198-238
35022|code|LDR             R0, [R7]; fd|56-104
35024|code|BLX             close|255-247-64-239
35028|code|MOVS            R0, #1|1-32
35030|code|ADD             SP, SP, #0x8C|35-176
35032|code|POP.W           {R4-R11,PC}|189-232-240-143
35036|code|ADD.W           R0, R9, R1|9-235-1-0
35040|code|MOVS            R1, #0; endptr|0-33
35042|code|MOV             R2, R1; base|10-70
35044|code|ADDS            R3, #2|2-51
35046|code|LDR             R0, [R0,#4]; nptr|64-104
35048|code|STR.W           R3, [R11]|203-248-0-48
35052|code|BLX             strtoul|255-247-2-239
35056|code|LDR.W           R3, [R11]|219-248-0-48
35060|code|CMP             R7, R3|159-66
35062|code|STR             R0, [SP,#0xB0+var_A0]|4-144
35064|code|BLE             loc_8962|51-221
35066|code|MOVS            R1, #0; endptr|0-33
35068|code|LDR.W           R0, [R9,R3,LSL#2]; nptr|89-248-35-0
35072|code|MOV             R2, R1; base|10-70
35074|code|ADDS            R3, #1|1-51
35076|code|STR.W           R3, [R11]|203-248-0-48
35080|code|BLX             strtoul|255-247-244-238
35084|code|STR             R0, [SP,#0xB0+var_A4]|3-144
35086|code|B               loc_8878|179-231
35088|code|CMP.W           R9, #0x1000|185-245-128-95
35092|code|BNE             loc_88C0|212-209
35094|code|ADD.W           R0, R9, R9,LSL#2; size|9-235-137-0
35098|code|MOVW            R11, #0x3F90|67-246-144-123
35102|code|BLX             malloc|255-247-204-238
35106|code|MOVT.W          R11, #1|192-242-1-11
35110|code|STR.W           R0, [R11]|203-248-0-0
35114|code|CBNZ            R0, loc_8968|232-185
35116|code|MOV             R0, #aMallocFailed; s|73-242-164-96-192-242-0-0
35124|code|BLX             puts|255-247-186-238
35128|code|LDR             R0, [R7]; fd|56-104
35130|code|BLX             close|255-247-12-239
35134|code|B               loc_88D4|201-231
35136|code|MOV             R0, #aOpenFlashDevic; s|73-242-76-96-192-242-0-0
35144|code|BLX             perror|255-247-152-238
35148|code|B               loc_88D4|194-231
35150|code|MOV             R0, #aIoctlMemgetinf; s|73-242-96-96-192-242-0-0
35158|code|BLX             perror|255-247-146-238
35162|code|LDR             R0, [R7]; fd|56-104
35164|code|BLX             close|255-247-250-238
35168|code|B               loc_88D4|184-231
35170|code|MOVS            R3, #0|0-35
35172|code|STR             R3, [SP,#0xB0+var_A4]|3-147
35174|code|B               loc_8878|135-231
35176|code|ADD.W           R12, R0, R9|0-235-9-12
35180|code|MOVW            R2, #0x3FA0|67-246-160-114
35184|code|ADD.W           R3, R12, R9|12-235-9-3
35188|code|MOVT.W          R2, #1|192-242-1-2
35192|code|STR             R2, [SP,#0xB0+var_84]|11-146
35194|code|ADD.W           LR, R3, R9|3-235-9-14
35198|code|STR.W           R3, [R11,#(dword_13F98 - 0x13F90)]|203-248-8-48
35202|code|MOV             R2, R9; n|74-70
35204|code|STR             R3, [SP,#0xB0+var_9C]|5-147
35206|code|MOVS            R1, #0xFF; c|255-33
35208|code|LDR             R3, [SP,#0xB0+var_84]|11-155
35210|code|STR.W           LR, [R11,#(dword_13F9C - 0x13F90)]|203-248-12-224
35214|code|STR.W           LR, [SP,#0xB0+var_98]|205-248-24-224
35218|code|STR.W           R12, [R11,#(dword_13F94 - 0x13F90)]|203-248-4-192
35222|code|STR.W           R12, [SP,#0xB0+s]|205-248-28-192
35226|code|ADD.W           R12, LR, R9|14-235-9-12
35230|code|STR.W           R12, [R3]|195-248-0-192
35234|code|BLX             memset|255-247-192-238
35238|code|LDR.W           R12, [SP,#0xB0+s]|221-248-28-192
35242|code|MOV             R2, R9; n|74-70
35244|code|MOVS            R1, #0; c|0-33
35246|code|MOV             R9, #0x13FA8|67-246-168-121-192-242-1-9
35254|code|MOV             R0, R12; s|96-70
35256|code|BLX             memset|255-247-180-238
35260|code|MOVS            R1, #0x5A ; 'Z'; c|90-33
35262|code|LDR.W           R2, [R10,#(dword_13FB4 - 0x13FA8)]; n|218-248-12-32
35266|code|LDR             R0, [SP,#0xB0+var_9C]; s|5-152
35268|code|BLX             memset|255-247-174-238
35272|code|MOVS            R1, #0xA5; c|165-33
35274|code|LDR.W           R2, [R10,#(dword_13FB4 - 0x13FA8)]; n|218-248-12-32
35278|code|LDR             R0, [SP,#0xB0+var_98]; s|6-152
35280|code|BLX             memset|255-247-168-238
35284|code|MOV             R0, #unk_12190; s|66-242-144-16-192-242-1-0
35292|code|MOVS            R1, #0xFF; c|255-33
35294|code|MOV.W           R2, #0x1E00; n|79-244-240-82
35298|code|BLX             memset|255-247-160-238
35302|code|LDR             R3, [SP,#0xB0+var_A4]|3-155
35304|code|CBZ             R3, loc_89F8|51-177
35306|code|LDR             R2, [SP,#0xB0+var_A0]|4-154
35308|code|LDR.W           R3, [R9,#(dword_13FB0 - 0x13FA8)]|217-248-8-48
35312|code|SUBS            R3, R3, R2|155-26
35314|code|LDR             R2, [SP,#0xB0+var_A4]|3-154
35316|code|CMP             R2, R3|154-66
35318|code|BLS             loc_8A02|4-217
35320|code|LDR.W           R3, [R10,#(dword_13FB0 - 0x13FA8)]|218-248-8-48
35324|code|LDR             R2, [SP,#0xB0+var_A0]|4-154
35326|code|SUBS            R3, R3, R2|155-26
35328|code|STR             R3, [SP,#0xB0+var_A4]|3-147
35330|code|LDR.W           R9, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-144
35334|code|MOV             R3, #0x12184|66-242-132-19-192-242-1-3
35342|code|LDR             R0, [SP,#0xB0+var_A4]|3-152
35344|code|STR             R3, [SP,#0xB0+var_88]|10-147
35346|code|STR.W           R9, [R3,#(dword_12188 - 0x12184)]|195-248-4-144
35350|code|MOV             R1, R9|73-70
35352|code|BL              sub_92D0|0-240-90-252
35356|code|CMP.W           R0, #0x1E00|176-245-240-95
35360|code|MOV             R3, R0|3-70
35362|code|STR             R0, [SP,#0xB0+var_90]|8-144
35364|code|ITTTT HI|129-191
35366|code|MOVHI.W         R3, #0x1E00|79-244-240-83
35370|code|STRHI           R3, [SP,#0xB0+var_90]|8-147
35372|code|MULHI.W         R2, R3, R9|3-251-9-242
35376|code|STRHI           R2, [SP,#0xB0+var_A4]|3-146
35378|code|CMP.W           R8, #0|184-241-0-15
35382|code|BEQ             loc_8A52|12-208
35384|code|BL              sub_8760|255-247-146-254
35388|code|MOVW            R2, #0x2160|66-242-96-18
35392|code|MOVW            R3, #0x2164|66-242-100-19
35396|code|MOVT.W          R2, #1|192-242-1-2
35400|code|MOVT.W          R3, #1|192-242-1-3
35404|code|MOVS            R1, #0|0-33
35406|code|STR             R1, [R2]|17-96
35408|code|STR             R1, [R3]|25-96
35410|code|LDR             R3, [SP,#0xB0+var_A0]|4-155
35412|code|MOVW            R0, #0x96B4|73-242-180-96
35416|code|LDR             R2, [SP,#0xB0+var_A4]|3-154
35418|code|MOVT.W          R0, #0; format|192-242-0-0
35422|code|ADD             R2, R3|26-68
35424|code|MOV             R1, R3|25-70
35426|code|BLX             printf|255-247-250-237
35430|code|LDR.W           R1, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-16
35434|code|LDR             R0, [SP,#0xB0+var_A0]|4-152
35436|code|MOVW            R3, #0x2174|66-242-116-19
35440|code|STR             R3, [SP,#0xB0+s]|7-147
35442|code|BL              sub_92D0|0-240-45-252
35446|code|LDR             R2, [SP,#0xB0+s]|7-154
35448|code|MOV             R1, #0x12190|66-242-144-17-192-242-1-1
35456|code|STR             R4, [SP,#0xB0+var_68]|18-148
35458|code|STR             R1, [SP,#0xB0+var_80]|12-145
35460|code|MOVT.W          R2, #1|192-242-1-2
35464|code|STR             R6, [SP,#0xB0+var_64]|19-150
35466|code|STR             R2, [SP,#0xB0+s]|7-146
35468|code|MOV.W           R2, #0xFFFFFFFF|79-240-255-50
35472|code|STR             R2, [SP,#0xB0+var_98]|6-146
35474|code|STR             R2, [SP,#0xB0+var_9C]|5-146
35476|code|SUBS            R3, R0, #1|67-30
35478|code|MOV             R9, R0|129-70
35480|code|MOVW            R0, #0x2180|66-242-128-16
35484|code|ADDS            R3, R1, R3|203-24
35486|code|MOVT.W          R0, #1|192-242-1-0
35490|code|STR             R3, [SP,#0xB0+var_8C]|9-147
35492|code|STR             R0, [SP,#0xB0+var_74]|15-144
35494|code|MOVS            R3, #0|0-35
35496|code|STR             R3, [SP,#0xB0+var_7C]|13-147
35498|code|B               loc_8AB0|1-224
35500|code|ADD.W           R9, R9, #1|9-241-1-9
35504|code|LDR.W           R6, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-96
35508|code|MOVW            R4, #0x3FA8|67-246-168-116
35512|code|LDR             R0, [SP,#0xB0+var_A0]|4-152
35514|code|MOVT.W          R4, #1|192-242-1-4
35518|code|MOV             R1, R6|49-70
35520|code|BL              sub_92D0|0-240-6-252
35524|code|LDR             R3, [SP,#0xB0+var_90]|8-155
35526|code|ADD             R0, R3|24-68
35528|code|CMP             R9, R0|129-69
35530|code|BCS             loc_8B54|67-210
35532|code|LDR             R2, [SP,#0xB0+var_8C]|9-154
35534|code|LDRB.W          R3, [R2,#1]!|18-248-1-63
35538|code|CMP             R3, #0xFF|255-43
35540|code|STR             R2, [SP,#0xB0+var_8C]|9-146
35542|code|BNE             loc_8AAC|233-209
35544|code|MOV             R3, #0x12160|66-242-96-19-192-242-1-3
35552|code|LDR             R3, [R3]|27-104
35554|code|MUL.W           R2, R6, R9|6-251-9-242
35558|code|CMP             R3, #0|0-43
35560|code|BNE.W           loc_8E2E|64-240-161-129
35564|code|LDR             R3, [SP,#0xB0+var_88]|10-155
35566|code|STR             R2, [R3]|26-96
35568|code|MOVW            R0, #0x972C|73-242-44-112
35572|code|MOV             R1, R9|73-70
35574|code|MOVT.W          R0, #0; format|192-242-0-0
35578|code|MOVW            R6, #0x2184|66-242-132-22
35582|code|BLX             printf|255-247-172-237
35586|code|LDR             R3, [SP,#0xB0+s]|7-155
35588|code|MOVT.W          R6, #1|192-242-1-6
35592|code|LDR             R0, [R3]; stream|24-104
35594|code|BLX             fflush|255-247-172-237
35598|code|MOVW            R1, #0x4D02|68-246-2-81
35602|code|MOV             R2, R6|50-70
35604|code|MOVT.W          R1, #0x4008; request|196-242-8-1
35608|code|LDR             R0, [R7]; fd|56-104
35610|code|BLX             ioctl|255-247-182-237
35614|code|MOV             R4, R0|4-70
35616|code|CMP             R0, #0|0-40
35618|code|BNE.W           loc_8E08|64-240-113-129
35622|code|MOV             R2, #0x12164|66-242-100-18-192-242-1-2
35630|code|LDR             R2, [R2]|18-104
35632|code|CMP             R2, #0|0-42
35634|code|BNE.W           loc_8EB0|64-240-189-129
35638|code|LDR             R2, [SP,#0xB0+var_8C]|9-154
35640|code|MOVS            R3, #0xFF|255-35
35642|code|STRB            R3, [R2]|19-112
35644|code|LDR             R3, [SP,#0xB0+var_9C]|5-155
35646|code|ADDS            R3, #1|1-51
35648|code|BEQ.W           loc_8E02|0-240-95-129
35652|code|LDR             R2, [SP,#0xB0+var_98]|6-154
35654|code|MOV             R1, R2|17-70
35656|code|CMP.W           R2, #0xFFFFFFFF|178-241-255-63
35660|code|IT EQ|8-191
35662|code|MOVEQ           R1, R9|73-70
35664|code|STR             R1, [SP,#0xB0+var_98]|6-145
35666|code|B               loc_8AAC|171-231
35668|code|LDR             R6, [SP,#0xB0+var_64]|19-158
35670|code|MOVS            R0, #0xA; c|10-32
35672|code|MOV             R9, R4|161-70
35674|code|LDR             R4, [SP,#0xB0+var_68]|18-156
35676|code|BLX             putchar|255-247-232-237
35680|code|CMP             R6, #0|0-46
35682|code|BEQ.W           loc_8D38|0-240-233-128
35686|code|MOVW            R2, #0x9850|73-246-80-2
35690|code|LDR.W           R3, [R11]|219-248-0-48
35694|code|MOVT.W          R2, #0|192-242-0-2
35698|code|MOVW            R12, #0x218C|66-242-140-28
35702|code|LDR             R0, [R2]|16-104
35704|code|MOVT.W          R12, #1|192-242-1-12
35708|code|LDRH.W          LR, [R2,#(word_9854 - 0x9850)]|178-248-4-224
35712|code|MOVS            R1, #1|1-33
35714|code|STR.W           R3, [R12]|204-248-0-48
35718|code|MOVS            R2, #0x20 ; ' '|32-34
35720|code|STR             R0, [R3]|24-96
35722|code|MOVS            R0, #0x51 ; 'Q'|81-32
35724|code|LDR.W           R8, [R12]|220-248-0-128
35728|code|MOV.W           R12, #0x62 ; 'b'|79-240-98-12
35732|code|STRH.W          LR, [R3,#4]|163-248-4-224
35736|code|MOVS            R3, #0|0-35
35738|code|STRB.W          R12, [R8,#0x20]|136-248-32-192
35742|code|STRB.W          R3, [R8,#8]|136-248-8-48
35746|code|STRB.W          R3, [R8,#9]|136-248-9-48
35750|code|STRB.W          R3, [R8,#0xA]|136-248-10-48
35754|code|STRB.W          R3, [R8,#0xB]|136-248-11-48
35758|code|STRB.W          R3, [R8,#0xC]|136-248-12-48
35762|code|STRB.W          R3, [R8,#0xD]|136-248-13-48
35766|code|STRB.W          R3, [R8,#0xE]|136-248-14-48
35770|code|STRB.W          R3, [R8,#0xF]|136-248-15-48
35774|code|STRB.W          R3, [R8,#0x11]|136-248-17-48
35778|code|STRB.W          R3, [R8,#0x12]|136-248-18-48
35782|code|STRB.W          R3, [R8,#0x13]|136-248-19-48
35786|code|STRB.W          R3, [R8,#0x14]|136-248-20-48
35790|code|STRB.W          R3, [R8,#0x15]|136-248-21-48
35794|code|STRB.W          R3, [R8,#0x16]|136-248-22-48
35798|code|STRB.W          R3, [R8,#0x17]|136-248-23-48
35802|code|STRB.W          R3, [R8,#0x18]|136-248-24-48
35806|code|STRB.W          R3, [R8,#0x19]|136-248-25-48
35810|code|STRB.W          R3, [R8,#0x1A]|136-248-26-48
35814|code|STRB.W          R3, [R8,#0x1B]|136-248-27-48
35818|code|STRB.W          R3, [R8,#0x1E]|136-248-30-48
35822|code|STRB.W          R3, [R8,#0x1F]|136-248-31-48
35826|code|STRB.W          R3, [R8,#0x21]|136-248-33-48
35830|code|STRB.W          R1, [R8,#0x10]|136-248-16-16
35834|code|STRB.W          R2, [R8,#0x1C]|136-248-28-32
35838|code|STRB.W          R0, [R8,#0x1D]|136-248-29-0
35842|code|STR.W           R12, [SP,#0xB0+var_98]|205-248-24-192
35846|code|LDR.W           R2, [R9,#(dword_13FB4 - 0x13FA8)]|217-248-12-32
35850|code|STRB.W          R3, [R8,#0x22]|136-248-34-48
35854|code|STRB.W          R3, [R8,#0x23]|136-248-35-48
35858|code|MOV             R1, R2|17-70
35860|code|LDR.W           R0, [R9,#(dword_13FB0 - 0x13FA8)]|217-248-8-0
35864|code|STR             R2, [SP,#0xB0+var_A4]|3-146
35866|code|BL              sub_92D0|0-240-89-251
35870|code|LDR             R2, [SP,#0xB0+var_A4]|3-154
35872|code|MOV             R1, R2|17-70
35874|code|MOV             R9, R0|129-70
35876|code|LDR             R0, [SP,#0xB0+var_A0]|4-152
35878|code|BL              sub_92D0|0-240-83-251
35882|code|LDR             R1, [SP,#0xB0+var_90]|8-153
35884|code|LDR.W           R12, [SP,#0xB0+var_98]|221-248-24-192
35888|code|MOV             R2, #0x51EB851F|72-242-31-82-197-242-235-18
35896|code|MUL.W           R3, R12, R1|12-251-1-243
35900|code|SUBS            R3, #0xC4|196-59
35902|code|UMULL.W         R2, R3, R3, R2|163-251-2-35
35906|code|LSRS            R3, R3, #5|91-9
35908|code|ADD.W           LR, R0, #1|0-241-1-14
35912|code|SUBS            R0, #1|1-56
35914|code|ADD             R0, R1|8-68
35916|code|MOV             R1, LR|113-70
35918|code|B               loc_8C62|8-224
35920|code|LDR             R2, [SP,#0xB0+var_80]|12-154
35922|code|LDRB            R2, [R2,R1]|82-92
35924|code|CMP             R2, #0xFF|255-42
35926|code|BEQ             loc_8C60|3-208
35928|code|CMP             R3, #1|1-43
35930|code|IT HI|136-191
35932|code|ADDHI.W         R3, R3, #0xFFFFFFFF|3-241-255-51
35936|code|ADDS            R1, #1|1-49
35938|code|CMP             R1, R9|73-69
35940|code|BCC             loc_8C50|244-211
35942|code|LDR             R1, [SP,#0xB0+var_9C]|5-153
35944|code|MOVS            R2, #0x40 ; '@'|64-34
35946|code|STR.W           R3, [R8,#0x24]|200-248-36-48
35950|code|MOVS            R3, #0|0-35
35952|code|STR.W           LR, [R8,#0x28]|200-248-40-224
35956|code|STR             R1, [SP,#0xB0+var_98]|6-145
35958|code|MOV.W           R1, #0x1000|79-244-128-81
35962|code|STR.W           R0, [R8,#0x2C]|200-248-44-0
35966|code|STR.W           LR, [R8,#0x38]|200-248-56-224
35970|code|STR             R1, [SP,#0xB0+s]|7-145
35972|code|STRB.W          R3, [R8,#0x30]|136-248-48-48
35976|code|STRB.W          R3, [R8,#0x31]|136-248-49-48
35980|code|STRB.W          R3, [R8,#0x32]|136-248-50-48
35984|code|STRB.W          R3, [R8,#0x34]|136-248-52-48
35988|code|STRB.W          R3, [R8,#0x35]|136-248-53-48
35992|code|STRB.W          R3, [R8,#0x36]|136-248-54-48
35996|code|STRB.W          R3, [R8,#0x37]|136-248-55-48
36000|code|STRB.W          R3, [R8,#0x3C]|136-248-60-48
36004|code|STRB.W          R3, [R8,#0x3D]|136-248-61-48
36008|code|STRB.W          R3, [R8,#0x3E]|136-248-62-48
36012|code|STRB.W          R3, [R8,#0x3F]|136-248-63-48
36016|code|STRB.W          R2, [R8,#0x33]|136-248-51-32
36020|code|MOVW            R0, #0x9860|73-246-96-0
36024|code|MOV             R1, R4|33-70
36026|code|MOVT.W          R0, #0; format|192-242-0-0
36030|code|MOV.W           R9, #0|79-240-0-9
36034|code|BLX             printf|255-247-202-236
36038|code|LDR.W           R3, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-48
36042|code|LDR             R1, [SP,#0xB0+var_9C]|5-153
36044|code|MOV.W           R2, #0x200|79-244-0-114
36048|code|STR.W           R9, [SP,#0xB0+var_AC]|205-248-4-144
36052|code|LDR             R0, [R7]|56-104
36054|code|MUL.W           LR, R3, R1|3-251-1-254
36058|code|LDR             R3, [SP,#0xB0+var_9C]|5-155
36060|code|LDR.W           R1, [R11]|219-248-0-16
36064|code|STR             R3, [SP,#0xB0+var_A4]|3-147
36066|code|STR.W           LR, [SP,#0xB0+var_B0]|205-248-0-224
36070|code|BLX             pwrite64|255-247-42-237
36074|code|LDR.W           R8, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-128
36078|code|MOVW            R3, #0x3FA8|67-246-168-115
36082|code|LDR.W           R0, [R10,#(dword_13FB0 - 0x13FA8)]|218-248-8-0
36086|code|MOVT.W          R3, #1|192-242-1-3
36090|code|STR             R3, [SP,#0xB0+var_8C]|9-147
36092|code|MOV             R1, R8|65-70
36094|code|STR             R3, [SP,#0xB0+var_88]|10-147
36096|code|BL              sub_92D0|0-240-230-250
36100|code|LDR             R3, [SP,#0xB0+var_8C]|9-155
36102|code|CMP             R9, R0|129-69
36104|code|BCS             loc_8D8A|63-210
36106|code|MOVS            R2, #0|0-34
36108|code|STR             R2, [SP,#0xB0+var_AC]|1-146
36110|code|LDR             R2, [SP,#0xB0+var_80]|12-154
36112|code|BIC.W           R3, R9, #0x1FE|41-244-255-115
36116|code|BIC.W           R3, R3, #1|35-240-1-3
36120|code|LDR             R0, [R7]|56-104
36122|code|ADD.W           R1, R2, R9|2-235-9-1
36126|code|LDR             R2, [SP,#0xB0+var_9C]|5-154
36128|code|ADD.W           R3, R3, #0x200|3-245-0-115
36132|code|ADD.W           R9, R9, #0x200|9-245-0-121
36136|code|MLA.W           R3, R8, R2, R3|8-251-2-51
36140|code|MOV.W           R2, #0x200|79-244-0-114
36144|code|STR             R3, [SP,#0xB0+var_B0]|0-147
36146|code|BLX             pwrite64|255-247-4-237
36150|code|B               loc_8CEA|216-231
36152|code|MOVW            R2, #0x9858|73-246-88-2
36156|code|LDR.W           R1, [R11]|219-248-0-16
36160|code|MOVT.W          R2, #0|192-242-0-2
36164|code|MOVW            R3, #0x3FC8|67-246-200-115
36168|code|LDR             R0, [R2]|16-104
36170|code|MOVT.W          R3, #1|192-242-1-3
36174|code|LDRH            R2, [R2,#(word_985C - 0x9858)]|146-136
36176|code|STR             R1, [R3]|25-96
36178|code|STR             R0, [R1]|8-96
36180|code|STRH            R2, [R1,#4]|138-128
36182|code|LDR.W           R9, [R9,#(dword_13FB4 - 0x13FA8)]|217-248-12-144
36186|code|LDR             R0, [SP,#0xB0+var_A4]|3-152
36188|code|LDR.W           R8, [R3]|211-248-0-128
36192|code|MOV             R1, R9|73-70
36194|code|STR             R6, [SP,#0xB0+s]|7-150
36196|code|BL              sub_92D0|0-240-180-250
36200|code|LDR             R3, [SP,#0xB0+var_7C]|13-155
36202|code|LDR             R1, [SP,#0xB0+var_A4]|3-153
36204|code|ADDS            R3, #5|5-51
36206|code|LDRH.W          R2, [SP,#0xB0+var_9C]|189-248-20-32
36210|code|MLS.W           R3, R9, R3, R1|9-251-19-19
36214|code|STRH.W          R2, [R8,#8]|168-248-8-32
36218|code|MOVS            R2, #0xFF|255-34
36220|code|STRB.W          R2, [R8,#0xE]|136-248-14-32
36224|code|STR.W           R3, [R8,#0xA]|200-248-10-48
36228|code|STRH.W          R0, [R8,#6]|168-248-6-0
36232|code|B               loc_8CB4|148-231
36234|code|MOVW            R0, #0x9898|73-246-152-0
36238|code|MOV             R8, R3|152-70
36240|code|MOV             R1, R4|33-70
36242|code|MOVT.W          R0, #0; format|192-242-0-0
36246|code|MOVS            R4, #0|0-36
36248|code|BLX             printf|255-247-94-236
36252|code|LDR.W           R3, [R8,#0xC]|216-248-12-48
36256|code|MOV             R8, R4|160-70
36258|code|LDR.W           R1, [R11]|219-248-0-16
36262|code|MOV.W           R2, #0x200|79-244-0-114
36266|code|STR             R4, [SP,#0xB0+var_AC]|1-148
36268|code|LDR             R0, [SP,#0xB0+var_98]|6-152
36270|code|LDR             R4, [SP,#0xB0+s]|7-156
36272|code|MLA.W           R3, R3, R0, R4|3-251-0-67
36276|code|LDR             R0, [R7]|56-104
36278|code|MOV             R4, R8|68-70
36280|code|STR             R3, [SP,#0xB0+var_B0]|0-147
36282|code|BLX             pwrite64|255-247-192-236
36286|code|LDR.W           R9, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-144
36290|code|LDR.W           R0, [R10,#(dword_13FB0 - 0x13FA8)]|218-248-8-0
36294|code|MOV             R1, R9|73-70
36296|code|BL              sub_92D0|0-240-130-250
36300|code|CMP             R8, R0|128-69
36302|code|BCS.W           loc_8FEC|128-240-13-129
36306|code|LDR             R3, [SP,#0xB0+var_98]|6-155
36308|code|LDR             R2, [SP,#0xB0+s]|7-154
36310|code|STR             R4, [SP,#0xB0+var_AC]|1-148
36312|code|LDR             R0, [R7]|56-104
36314|code|MLA.W           R9, R9, R3, R2|9-251-3-41
36318|code|BIC.W           R3, R8, #0x1FE|40-244-255-115
36322|code|LDR             R2, [SP,#0xB0+var_80]|12-154
36324|code|BIC.W           R3, R3, #1|35-240-1-3
36328|code|ADD.W           R3, R3, #0x200|3-245-0-115
36332|code|ADD.W           R1, R2, R8|2-235-8-1
36336|code|ADD             R3, R9|75-68
36338|code|MOV.W           R2, #0x200|79-244-0-114
36342|code|STR             R3, [SP,#0xB0+var_B0]|0-147
36344|code|BLX             pwrite64|255-247-160-236
36348|code|ADD.W           R8, R8, #0x200|8-245-0-120
36352|code|B               loc_8DBE|221-231
36354|code|STR.W           R9, [SP,#0xB0+var_9C]|205-248-20-144
36358|code|B               loc_8AAC|81-230
36360|code|BLX             __errno_location|255-247-134-236
36364|code|LDR             R0, [R0]; errnum|0-104
36366|code|BLX             strerror|255-247-96-236
36370|code|MOV             R1, R0|1-70
36372|code|MOV             R0, #aEraseFailedS; format|73-242-72-112-192-242-0-0
36380|code|BLX             printf|255-247-28-236
36384|code|LDR             R2, [SP,#0xB0+var_8C]|9-154
36386|code|LDR             R3, [SP,#0xB0+var_7C]|13-155
36388|code|ADDS            R3, #1|1-51
36390|code|STR             R3, [SP,#0xB0+var_7C]|13-147
36392|code|MOVS            R3, #0|0-35
36394|code|STRB            R3, [R2]|19-112
36396|code|B               loc_8AAC|62-230
36398|code|ADD.W           R8, SP, #0xB0+var_28|13-241-136-8
36402|code|MOVW            R1, #0x4D04|68-246-4-81
36406|code|LDR             R0, [R7]; fd|56-104
36408|code|MOVT.W          R1, #0xC00C; request|204-242-12-1
36412|code|STR.W           R2, [R8,#-0x2C]!|72-248-44-45
36416|code|MOV             R2, R8|66-70
36418|code|MOVS            R3, #0x10|16-35
36420|code|STR             R3, [SP,#0xB0+var_50]|24-147
36422|code|ADD             R3, SP, #0xB0+var_38|30-171
36424|code|STR             R3, [SP,#0xB0+var_4C]|25-147
36426|code|BLX             ioctl|255-247-30-236
36430|code|CBNZ            R0, loc_8E56|16-185
36432|code|LDRB.W          R3, [SP,#0xB0+var_33]|157-248-125-48
36436|code|CBNZ            R3, loc_8E7A|139-185
36438|code|LDR.W           R2, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-32
36442|code|LDR             R3, [SP,#0xB0+var_88]|10-155
36444|code|MUL.W           R2, R2, R9|2-251-9-242
36448|code|STR             R2, [R3]|26-96
36450|code|MOVW            R0, #0x96F8|73-242-248-96
36454|code|MOV             R1, R9|73-70
36456|code|MOVT.W          R0, #0; format|192-242-0-0
36460|code|BLX             printf|255-247-244-235
36464|code|LDR             R3, [SP,#0xB0+s]|7-155
36466|code|LDR             R0, [R3]; stream|24-104
36468|code|BLX             fflush|255-247-246-235
36472|code|B               loc_8E20|210-231
36474|code|LDR             R3, [R4,#(dword_13FB4 - 0x13FA8)]|227-104
36476|code|MOVW            R1, #0x4D04|68-246-4-81
36480|code|LDR             R0, [SP,#0xB0+var_74]|15-152
36482|code|MOV             R2, R8|66-70
36484|code|MOVT.W          R1, #0xC00C; request|204-242-12-1
36488|code|MUL.W           R3, R3, R9|3-251-9-243
36492|code|LDR             R0, [R0]; fd|0-104
36494|code|ADD.W           R3, R3, #0x200|3-245-0-115
36498|code|STR             R3, [SP,#0xB0+var_54]|23-147
36500|code|BLX             ioctl|255-247-248-235
36504|code|CMP             R0, #0|0-40
36506|code|BNE             loc_8E56|220-209
36508|code|LDR             R2, [R4,#(dword_13FB4 - 0x13FA8)]|226-104
36510|code|LDR             R1, [SP,#0xB0+var_88]|10-153
36512|code|LDRB.W          R3, [SP,#0xB0+var_33]|157-248-125-48
36516|code|MUL.W           R2, R2, R9|2-251-9-242
36520|code|STR             R2, [R1]|10-96
36522|code|CMP             R3, #0|0-43
36524|code|BEQ             loc_8E62|217-208
36526|code|B               loc_8AF0|31-230
36528|code|MOVW            R0, #0x9760|73-242-96-112
36532|code|MOV             R1, R9|73-70
36534|code|LDR             R2, [R6]|50-104
36536|code|MOVT.W          R0, #0; format|192-242-0-0
36540|code|BLX             printf|255-247-204-235
36544|code|MOV             R3, #0x12174|66-242-116-19-192-242-1-3
36552|code|MOVW            R8, #0x3FA0|67-246-160-120
36556|code|LDR             R0, [R3]; stream|24-104
36558|code|MOVT.W          R8, #1|192-242-1-8
36562|code|BLX             fflush|255-247-200-235
36566|code|LDR.W           R2, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-32
36570|code|MOVW            R3, #0x3F90|67-246-144-115
36574|code|STR.W           R9, [SP,#0xB0+var_70]|205-248-64-144
36578|code|MOV             R1, R3|25-70
36580|code|MUL.W           R3, R2, R9|2-251-9-243
36584|code|MOV             R2, R1|10-70
36586|code|MOVT.W          R2, #1|192-242-1-2
36590|code|MOV             R9, R10|209-70
36592|code|STR             R2, [SP,#0xB0+var_6C]|17-146
36594|code|STR             R3, [SP,#0xB0+var_78]|14-147
36596|code|STR             R3, [R6]|51-96
36598|code|B               loc_8F70|59-224
36600|code|LDR             R6, [SP,#0xB0+var_84]|11-158
36602|code|MOVS            R1, #0|0-33
36604|code|LDR             R3, [SP,#0xB0+var_78]|14-155
36606|code|MOV.W           R2, #0x200|79-244-0-114
36610|code|STR             R1, [SP,#0xB0+var_AC]|1-145
36612|code|ADD.W           R10, R4, R3|4-235-3-10
36616|code|STR.W           R10, [SP,#0xB0+var_B0]|205-248-0-160
36620|code|LDR             R0, [R7]|56-104
36622|code|LDR             R1, [R6]|49-104
36624|code|BLX             pread64|255-247-192-235
36628|code|LDR             R0, [R6]; s1|48-104
36630|code|LDR.W           R1, [R11]; s2|219-248-0-16
36634|code|MOV.W           R2, #0x200; n|79-244-0-114
36638|code|BLX             memcmp|255-247-168-235
36642|code|MOV             R6, R0|6-70
36644|code|CMP             R0, #0|0-40
36646|code|BNE.W           loc_90C6|64-240-206-128
36650|code|LDR             R3, [SP,#0xB0+var_74]|15-155
36652|code|MOV.W           R2, #0x200|79-244-0-114
36656|code|LDR             R1, [SP,#0xB0+var_6C]|17-153
36658|code|STR.W           R10, [SP,#0xB0+var_B0]|205-248-0-160
36662|code|STR             R0, [SP,#0xB0+var_AC]|1-144
36664|code|LDR             R0, [R3]|24-104
36666|code|LDR             R1, [R1,#4]|73-104
36668|code|BLX             pwrite64|255-247-254-235
36672|code|LDR             R3, [SP,#0xB0+var_74]|15-155
36674|code|STR.W           R10, [SP,#0xB0+var_B0]|205-248-0-160
36678|code|MOV.W           R2, #0x200|79-244-0-114
36682|code|STR             R6, [SP,#0xB0+var_AC]|1-150
36684|code|LDR.W           R1, [R8]|216-248-0-16
36688|code|LDR             R0, [R3]|24-104
36690|code|BLX             pread64|255-247-160-235
36694|code|LDR             R1, [SP,#0xB0+var_6C]|17-153
36696|code|LDR.W           R0, [R8]; s1|216-248-0-0
36700|code|MOV.W           R2, #0x200; n|79-244-0-114
36704|code|LDR             R1, [R1,#4]; s2|73-104
36706|code|BLX             memcmp|255-247-134-235
36710|code|CMP             R0, #0|0-40
36712|code|BNE.W           loc_9098|64-240-150-128
36716|code|ADD.W           R4, R4, #0x200|4-245-0-116
36720|code|LDR.W           R2, [R9,#(dword_13FB4 - 0x13FA8)]|217-248-12-32
36724|code|CMP             R4, R2|148-66
36726|code|BCC             loc_8EF8|191-211
36728|code|MOVW            R1, #0x4D02|68-246-2-81
36732|code|MOVW            R2, #0x2184|66-242-132-18
36736|code|MOVT.W          R1, #0x4008; request|196-242-8-1
36740|code|MOVT.W          R2, #1|192-242-1-2
36744|code|LDR             R0, [R7]; fd|56-104
36746|code|MOV             R10, R9|202-70
36748|code|LDR.W           R9, [SP,#0xB0+var_70]|221-248-64-144
36752|code|BLX             ioctl|255-247-122-235
36756|code|CMP             R0, #0|0-40
36758|code|BNE.W           loc_90DA|64-240-160-128
36762|code|MOV             R4, R0|4-70
36764|code|MOV             R8, R0|128-70
36766|code|LDR.W           R3, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-48
36770|code|CMP             R8, R3|152-69
36772|code|BCS.W           loc_9102|128-240-173-128
36776|code|LDR             R3, [SP,#0xB0+var_78]|14-155
36778|code|MOV.W           R2, #0x200|79-244-0-114
36782|code|STR             R4, [SP,#0xB0+var_AC]|1-148
36784|code|ADD             R3, R8|67-68
36786|code|LDR             R0, [R7]|56-104
36788|code|STR             R3, [SP,#0xB0+var_B0]|0-147
36790|code|LDR.W           R1, [R11,#(dword_13F98 - 0x13F90)]|219-248-8-16
36794|code|MOV             R6, R3|30-70
36796|code|BLX             pwrite64|255-247-190-235
36800|code|STR             R6, [SP,#0xB0+var_B0]|0-150
36802|code|LDR             R6, [SP,#0xB0+var_84]|11-158
36804|code|MOV.W           R2, #0x200|79-244-0-114
36808|code|STR             R4, [SP,#0xB0+var_AC]|1-148
36810|code|LDR             R0, [R7]|56-104
36812|code|LDR             R1, [R6]|49-104
36814|code|BLX             pread64|255-247-98-235
36818|code|LDR             R0, [R6]; s1|48-104
36820|code|LDR.W           R1, [R11,#(dword_13F98 - 0x13F90)]; s2|219-248-8-16
36824|code|MOV.W           R2, #0x200; n|79-244-0-114
36828|code|BLX             memcmp|255-247-72-235
36832|code|CMP             R0, #0|0-40
36834|code|BNE.W           loc_90F4|64-240-135-128
36838|code|ADD.W           R8, R8, #0x200|8-245-0-120
36842|code|B               loc_8F9E|216-231
36844|code|MOVS            R2, #0x10; n|16-34
36846|code|MOV             R0, R5; s|40-70
36848|code|MOVS            R1, #0xFF; c|255-33
36850|code|LSLS            R4, R6, #9|116-2
36852|code|BLX             memset|255-247-150-235
36856|code|CMP             R6, #0|0-46
36858|code|MOVW            R0, #0x98DC|73-246-220-0
36862|code|MOV.W           R3, #0|79-240-0-3
36866|code|MOVT.W          R0, #0; s|192-242-0-0
36870|code|ITE NE|20-191
36872|code|MOVNE           R2, #0|0-34
36874|code|MOVEQ           R2, #3|3-34
36876|code|MOVS            R1, #0x69 ; 'i'|105-33
36878|code|STRB.W          R3, [SP,#0xB0+var_3F]|141-248-113-48
36882|code|ADD.W           R4, R4, #0x200|4-245-0-116
36886|code|STRB.W          R3, [SP,#0xB0+var_3E]|141-248-114-48
36890|code|STRB.W          R3, [SP,#0xB0+var_3D]|141-248-115-48
36894|code|STRB.W          R1, [SP,#0xB0+var_3A]|141-248-118-16
36898|code|STRB.W          R1, [SP,#0xB0+var_3C]|141-248-116-16
36902|code|STRB.W          R2, [SP,#0xB0+var_40]|141-248-112-32
36906|code|MOVS            R2, #0x3C ; '<'|60-34
36908|code|STRB.W          R2, [SP,#0xB0+var_39]|141-248-119-32
36912|code|STRB.W          R2, [SP,#0xB0+var_3B]|141-248-117-32
36916|code|BLX             puts|255-247-58-235
36920|code|LDR             R5, [SP,#0xB0+var_A4]|3-157
36922|code|B               loc_903E|0-224
36924|code|ADDS            R5, #1|1-53
36926|code|LDR.W           R6, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-96
36930|code|LDR             R0, [SP,#0xB0+var_A0]|4-152
36932|code|MOV             R1, R6|49-70
36934|code|BL              sub_92D0|0-240-67-249
36938|code|LDR             R3, [SP,#0xB0+var_90]|8-155
36940|code|ADD             R0, R3|24-68
36942|code|CMP             R5, R0|133-66
36944|code|BCS             loc_9092|31-210
36946|code|LDR             R3, [SP,#0xB0+var_80]|12-155
36948|code|LDRB            R3, [R3,R5]|91-93
36950|code|CMP             R3, #0xFF|255-43
36952|code|BNE             loc_903C|240-209
36954|code|MLA.W           R6, R6, R5, R4|6-251-5-70
36958|code|MOV             R1, #0xC00C4D03; request|68-246-3-81-204-242-12-1
36966|code|LDR             R0, [R7]; fd|56-104
36968|code|ADD             R2, SP, #0xB0+var_60|20-170
36970|code|STR             R6, [SP,#0xB0+var_60]|20-150
36972|code|BLX             ioctl|255-247-12-235
36976|code|CMP             R0, #0|0-40
36978|code|BEQ             loc_903C|227-208
36980|code|BLX             __errno_location|255-247-80-235
36984|code|LDR             R6, [SP,#0xB0+var_60]|20-158
36986|code|LDR             R0, [R0]; errnum|0-104
36988|code|BLX             strerror|255-247-40-235
36992|code|MOV             R1, R6|49-70
36994|code|MOV             R2, R0|2-70
36996|code|MOV             R0, #aMemwriteoobAtL; format|73-246-28-16-192-242-0-0
37004|code|BLX             printf|255-247-228-234
37008|code|B               loc_903C|212-231
37010|code|MOVS            R0, #0; status|0-32
37012|code|BLX             exit|255-247-40-235
37016|code|MOVW            R0, #0x979C|73-242-156-112
37020|code|MOV             R10, R9|202-70
37022|code|MOVT.W          R0, #0; s|192-242-0-0
37026|code|LDR.W           R9, [SP,#0xB0+var_70]|221-248-64-144
37030|code|BLX             puts|255-247-2-235
37034|code|LDR             R3, [SP,#0xB0+var_88]|10-155
37036|code|MOVW            R0, #0x9934|73-246-52-16
37040|code|MOV             R1, R9|73-70
37042|code|MOVT.W          R0, #0; format|192-242-0-0
37046|code|LDR             R2, [R3]|26-104
37048|code|BLX             printf|255-247-206-234
37052|code|LDR             R3, [SP,#0xB0+s]|7-155
37054|code|LDR             R0, [R3]; stream|24-104
37056|code|BLX             fflush|255-247-208-234
37060|code|B               loc_8E20|172-230
37062|code|MOVW            R0, #0x977C|73-242-124-112
37066|code|MOV             R10, R9|202-70
37068|code|MOVT.W          R0, #0; s|192-242-0-0
37072|code|LDR.W           R9, [SP,#0xB0+var_70]|221-248-64-144
37076|code|BLX             puts|255-247-234-234
37080|code|B               loc_90AA|231-231
37082|code|BLX             __errno_location|255-247-30-235
37086|code|LDR             R0, [R0]; errnum|0-104
37088|code|BLX             strerror|255-247-246-234
37092|code|MOV             R1, R0|1-70
37094|code|MOV             R0, #aSecondEraseFai; format|73-242-188-112-192-242-0-0
37102|code|BLX             printf|255-247-180-234
37106|code|B               loc_90AA|218-231
37108|code|MOV             R0, #aBlockNot0x5aAf; s|73-242-216-112-192-242-0-0
37116|code|BLX             puts|255-247-214-234
37120|code|B               loc_90AA|211-231
37122|code|MOVW            R1, #0x4D02|68-246-2-81
37126|code|MOVW            R2, #0x2184|66-242-132-18
37130|code|MOVT.W          R1, #0x4008; request|196-242-8-1
37134|code|MOVT.W          R2, #1|192-242-1-2
37138|code|LDR             R0, [R7]; fd|56-104
37140|code|BLX             ioctl|255-247-184-234
37144|code|CBNZ            R0, loc_9166|40-187
37146|code|MOV             R4, R0|4-70
37148|code|MOV             R8, R0|128-70
37150|code|LDR.W           R3, [R10,#(dword_13FB4 - 0x13FA8)]|218-248-12-48
37154|code|CMP             R8, R3|152-69
37156|code|BCS             loc_918E|51-210
37158|code|LDR             R3, [SP,#0xB0+var_78]|14-155
37160|code|MOV.W           R2, #0x200|79-244-0-114
37164|code|STR             R4, [SP,#0xB0+var_AC]|1-148
37166|code|ADD             R3, R8|67-68
37168|code|LDR             R0, [R7]|56-104
37170|code|STR             R3, [SP,#0xB0+var_B0]|0-147
37172|code|LDR.W           R1, [R11,#(dword_13F9C - 0x13F90)]|219-248-12-16
37176|code|MOV             R6, R3|30-70
37178|code|BLX             pwrite64|255-247-0-235
37182|code|STR             R6, [SP,#0xB0+var_B0]|0-150
37184|code|LDR             R6, [SP,#0xB0+var_84]|11-158
37186|code|MOV.W           R2, #0x200|79-244-0-114
37190|code|STR             R4, [SP,#0xB0+var_AC]|1-148
37192|code|LDR             R0, [R7]|56-104
37194|code|LDR             R1, [R6]|49-104
37196|code|BLX             pread64|255-247-162-234
37200|code|LDR             R0, [R6]; s1|48-104
37202|code|LDR.W           R1, [R11,#(dword_13F9C - 0x13F90)]; s2|219-248-12-16
37206|code|MOV.W           R2, #0x200; n|79-244-0-114
37210|code|BLX             memcmp|255-247-138-234
37214|code|CBNZ            R0, loc_9180|120-185
37216|code|ADD.W           R8, R8, #0x200|8-245-0-120
37220|code|B               loc_911E|219-231
37222|code|BLX             __errno_location|255-247-216-234
37226|code|LDR             R0, [R0]; errnum|0-104
37228|code|BLX             strerror|255-247-176-234
37232|code|MOV             R1, R0|1-70
37234|code|MOV             R0, #aThirdEraseFail; format|73-242-248-112-192-242-0-0
37242|code|BLX             printf|255-247-110-234
37246|code|B               loc_90AA|148-231
37248|code|MOV             R0, #aBlockNot0xa5Af; s|73-246-20-0-192-242-0-0
37256|code|BLX             puts|255-247-144-234
37260|code|B               loc_90AA|141-231
37262|code|MOVW            R1, #0x4D02|68-246-2-81
37266|code|MOVW            R2, #0x2184|66-242-132-18
37270|code|MOVT.W          R1, #0x4008; request|196-242-8-1
37274|code|MOVT.W          R2, #1|192-242-1-2
37278|code|LDR             R0, [R7]; fd|56-104
37280|code|BLX             ioctl|255-247-114-234
37284|code|CMP             R0, #0|0-40
37286|code|BEQ.W           loc_8B36|63-244-198-172
37290|code|BLX             __errno_location|255-247-182-234
37294|code|LDR             R0, [R0]; errnum|0-104
37296|code|BLX             strerror|255-247-142-234
37300|code|MOV             R1, R0|1-70
37302|code|MOV             R0, #aFourthEraseFai; format|73-246-52-0-192-242-0-0
37310|code|BLX             printf|255-247-76-234
37314|code|B               loc_90AA|114-231
37316|code|MOV.W           R11, #0|79-240-0-11
37320|code|MOV.W           LR, #0|79-240-0-14
37324|code|POP             {R1}; argc|2-188
37326|code|MOV             R2, SP; ubp_av|106-70
37328|code|PUSH            {R2}; stack_end|4-180
37330|code|PUSH            {R0}; rtld_fini|1-180
37332|code|LDR.W           R12, =(nullsub_1+1)|223-248-16-192
37336|code|PUSH.W          {R12}; fini|77-248-4-205
37340|code|LDR             R0, =(sub_87DC+1); main|3-72
37342|code|LDR             R3, =(sub_9554+1); init|4-75
37344|code|BLX             __libc_start_main|255-247-112-234
37348|code|BLX             abort|255-247-176-234
37352|data|DCD nullsub_1+1|149-149-0-0
37356|data|DCD sub_87DC+1|221-135-0-0
37360|data|DCD sub_9554+1|85-149-0-0
37364|code|LDR             R3, =(_GLOBAL_OFFSET_TABLE_ - 0x9204)|20-48-159-229
37368|code|LDR             R2, =(__gmon_start___ptr_0 - 0x120F4)|20-32-159-229
37372|code|ADD             R3, PC, R3; _GLOBAL_OFFSET_TABLE_|3-48-143-224
37376|code|LDR             R2, [R3,R2]; __imp___gmon_start__|2-32-147-231
37380|code|CMP             R2, #0|0-0-82-227
37384|code|BXEQ            LR|30-255-47-1
37388|code|B               __gmon_start__|50-253-255-234
37392|data|DCD _GLOBAL_OFFSET_TABLE_ - 0x9204|240-142-0-0
37396|data|DCD __gmon_start___ptr_0 - 0x120F4|104-0-0-0
37400|code|LDR             R3, =0x1216B|7-75
37402|code|MOV             R0, #0x12168|66-242-104-16-192-242-1-0
37410|code|SUBS            R3, R3, R0|27-26
37412|code|CMP             R3, #6|6-43
37414|code|BLS             locret_9234|5-217
37416|code|MOV             R3, #0|64-242-0-3-192-242-0-3
37424|code|CBZ             R3, locret_9234|3-177
37426|code|BX              R3|24-71
37428|code|BX              LR|112-71
37430|data|ALIGN 4|0-191
37432|data|DCD 0x1216B|107-33-1-0
37436|code|MOVW            R3, #0x2168|66-242-104-19
37440|code|MOVW            R0, #0x2168|66-242-104-16
37444|code|MOVT.W          R3, #1|192-242-1-3
37448|code|MOVT.W          R0, #1|192-242-1-0
37452|code|SUBS            R1, R3, R0|25-26
37454|code|ASRS            R1, R1, #2|137-16
37456|code|ADD.W           R1, R1, R1,LSR#31|1-235-209-113
37460|code|ASRS            R1, R1, #1|73-16
37462|code|BEQ             locret_9264|5-208
37464|code|MOV             R3, #0|64-242-0-3-192-242-0-3
37472|code|CBZ             R3, locret_9264|3-177
37474|code|BX              R3|24-71
37476|code|BX              LR|112-71
37478|data|ALIGN 4|0-191
37480|code|PUSH            {R4,LR}|16-181
37482|code|MOV             R4, #0x12178|66-242-120-20-192-242-1-4
37490|code|LDRB            R3, [R4]|35-120
37492|code|CBNZ            R3, locret_927E|27-185
37494|code|BL              sub_9218|255-247-207-255
37498|code|MOVS            R3, #1|1-35
37500|code|STRB            R3, [R4]|35-112
37502|code|POP             {R4,PC}|16-189
37504|code|MOVW            R0, #0x2008|66-242-8-0
37508|code|PUSH            {R3,LR}|8-181
37510|code|MOVT.W          R0, #1|192-242-1-0
37514|code|LDR             R3, [R0]|3-104
37516|code|CBNZ            R3, loc_9294|19-185
37518|code|POP.W           {R3,LR}|189-232-8-64
37522|code|B               sub_923C|211-231
37524|code|MOV             R3, #0|64-242-0-3-192-242-0-3
37532|code|CMP             R3, #0|0-43
37534|code|BEQ             loc_928E|246-208
37536|code|BLX             R3|152-71
37538|code|B               loc_928E|244-231
37540|code|PUSH            {R3,LR}|8-181
37542|code|MOV             R3, #0x12170|66-242-112-19-192-242-1-3
37550|code|MOVW            R1, #0x95D0|73-242-208-81
37554|code|MOVW            R2, #0x95C4|73-242-196-82
37558|code|MOV             R4, R0|4-70
37560|code|MOVT.W          R1, #0; format|192-242-0-1
37564|code|LDR             R0, [R3]; stream|24-104
37566|code|MOVT.W          R2, #0|192-242-0-2
37570|code|BLX             fprintf|255-247-36-234
37574|code|MOV             R0, R4; status|32-70
37576|code|BLX             exit|255-247-14-234
37580|data|ALIGN 0x10|0-0-0-0
37584|code|SUBS            R2, R1, #1|74-30
37586|code|IT EQ|8-191
37588|code|BXEQ            LR|112-71
37590|code|BCC.W           loc_9522|192-240-36-129
37594|code|CMP             R0, R1|136-66
37596|code|BLS.W           loc_950C|64-242-22-129
37600|code|TST             R1, R2|17-66
37602|code|BEQ.W           loc_9514|0-240-23-129
37606|code|CLZ.W           R3, R0|176-250-128-243
37610|code|CLZ.W           R2, R1|177-250-129-242
37614|code|SUB.W           R3, R2, R3|162-235-3-3
37618|code|RSB.W           R3, R3, #0x1F|195-241-31-3
37622|code|ADR             R2, loc_9308|4-162
37624|code|ADD.W           R3, R2, R3,LSL#4|2-235-3-19
37628|code|MOV.W           R2, #0|79-240-0-2
37632|code|MOV             PC, R3|159-70
37634|data|ALIGN 4|0-191
37636|code|NOP.W|175-243-0-128
37640|code|CMP.W           R0, R1,LSL#31|176-235-193-127
37644|code|NOP|0-191
37646|code|ADC.W           R2, R2, R2|66-235-2-2
37650|code|IT CS|40-191
37652|code|SUBCS.W         R0, R0, R1,LSL#31|160-235-193-112
37656|code|CMP.W           R0, R1,LSL#30|176-235-129-127
37660|code|NOP|0-191
37662|code|ADC.W           R2, R2, R2|66-235-2-2
37666|code|IT CS|40-191
37668|code|SUBCS.W         R0, R0, R1,LSL#30|160-235-129-112
37672|code|CMP.W           R0, R1,LSL#29|176-235-65-127
37676|code|NOP|0-191
37678|code|ADC.W           R2, R2, R2|66-235-2-2
37682|code|IT CS|40-191
37684|code|SUBCS.W         R0, R0, R1,LSL#29|160-235-65-112
37688|code|CMP.W           R0, R1,LSL#28|176-235-1-127
37692|code|NOP|0-191
37694|code|ADC.W           R2, R2, R2|66-235-2-2
37698|code|IT CS|40-191
37700|code|SUBCS.W         R0, R0, R1,LSL#28|160-235-1-112
37704|code|CMP.W           R0, R1,LSL#27|176-235-193-111
37708|code|NOP|0-191
37710|code|ADC.W           R2, R2, R2|66-235-2-2
37714|code|IT CS|40-191
37716|code|SUBCS.W         R0, R0, R1,LSL#27|160-235-193-96
37720|code|CMP.W           R0, R1,LSL#26|176-235-129-111
37724|code|NOP|0-191
37726|code|ADC.W           R2, R2, R2|66-235-2-2
37730|code|IT CS|40-191
37732|code|SUBCS.W         R0, R0, R1,LSL#26|160-235-129-96
37736|code|CMP.W           R0, R1,LSL#25|176-235-65-111
37740|code|NOP|0-191
37742|code|ADC.W           R2, R2, R2|66-235-2-2
37746|code|IT CS|40-191
37748|code|SUBCS.W         R0, R0, R1,LSL#25|160-235-65-96
37752|code|CMP.W           R0, R1,LSL#24|176-235-1-111
37756|code|NOP|0-191
37758|code|ADC.W           R2, R2, R2|66-235-2-2
37762|code|IT CS|40-191
37764|code|SUBCS.W         R0, R0, R1,LSL#24|160-235-1-96
37768|code|CMP.W           R0, R1,LSL#23|176-235-193-95
37772|code|NOP|0-191
37774|code|ADC.W           R2, R2, R2|66-235-2-2
37778|code|IT CS|40-191
37780|code|SUBCS.W         R0, R0, R1,LSL#23|160-235-193-80
37784|code|CMP.W           R0, R1,LSL#22|176-235-129-95
37788|code|NOP|0-191
37790|code|ADC.W           R2, R2, R2|66-235-2-2
37794|code|IT CS|40-191
37796|code|SUBCS.W         R0, R0, R1,LSL#22|160-235-129-80
37800|code|CMP.W           R0, R1,LSL#21|176-235-65-95
37804|code|NOP|0-191
37806|code|ADC.W           R2, R2, R2|66-235-2-2
37810|code|IT CS|40-191
37812|code|SUBCS.W         R0, R0, R1,LSL#21|160-235-65-80
37816|code|CMP.W           R0, R1,LSL#20|176-235-1-95
37820|code|NOP|0-191
37822|code|ADC.W           R2, R2, R2|66-235-2-2
37826|code|IT CS|40-191
37828|code|SUBCS.W         R0, R0, R1,LSL#20|160-235-1-80
37832|code|CMP.W           R0, R1,LSL#19|176-235-193-79
37836|code|NOP|0-191
37838|code|ADC.W           R2, R2, R2|66-235-2-2
37842|code|IT CS|40-191
37844|code|SUBCS.W         R0, R0, R1,LSL#19|160-235-193-64
37848|code|CMP.W           R0, R1,LSL#18|176-235-129-79
37852|code|NOP|0-191
37854|code|ADC.W           R2, R2, R2|66-235-2-2
37858|code|IT CS|40-191
37860|code|SUBCS.W         R0, R0, R1,LSL#18|160-235-129-64
37864|code|CMP.W           R0, R1,LSL#17|176-235-65-79
37868|code|NOP|0-191
37870|code|ADC.W           R2, R2, R2|66-235-2-2
37874|code|IT CS|40-191
37876|code|SUBCS.W         R0, R0, R1,LSL#17|160-235-65-64
37880|code|CMP.W           R0, R1,LSL#16|176-235-1-79
37884|code|NOP|0-191
37886|code|ADC.W           R2, R2, R2|66-235-2-2
37890|code|IT CS|40-191
37892|code|SUBCS.W         R0, R0, R1,LSL#16|160-235-1-64
37896|code|CMP.W           R0, R1,LSL#15|176-235-193-63
37900|code|NOP|0-191
37902|code|ADC.W           R2, R2, R2|66-235-2-2
37906|code|IT CS|40-191
37908|code|SUBCS.W         R0, R0, R1,LSL#15|160-235-193-48
37912|code|CMP.W           R0, R1,LSL#14|176-235-129-63
37916|code|NOP|0-191
37918|code|ADC.W           R2, R2, R2|66-235-2-2
37922|code|IT CS|40-191
37924|code|SUBCS.W         R0, R0, R1,LSL#14|160-235-129-48
37928|code|CMP.W           R0, R1,LSL#13|176-235-65-63
37932|code|NOP|0-191
37934|code|ADC.W           R2, R2, R2|66-235-2-2
37938|code|IT CS|40-191
37940|code|SUBCS.W         R0, R0, R1,LSL#13|160-235-65-48
37944|code|CMP.W           R0, R1,LSL#12|176-235-1-63
37948|code|NOP|0-191
37950|code|ADC.W           R2, R2, R2|66-235-2-2
37954|code|IT CS|40-191
37956|code|SUBCS.W         R0, R0, R1,LSL#12|160-235-1-48
37960|code|CMP.W           R0, R1,LSL#11|176-235-193-47
37964|code|NOP|0-191
37966|code|ADC.W           R2, R2, R2|66-235-2-2
37970|code|IT CS|40-191
37972|code|SUBCS.W         R0, R0, R1,LSL#11|160-235-193-32
37976|code|CMP.W           R0, R1,LSL#10|176-235-129-47
37980|code|NOP|0-191
37982|code|ADC.W           R2, R2, R2|66-235-2-2
37986|code|IT CS|40-191
37988|code|SUBCS.W         R0, R0, R1,LSL#10|160-235-129-32
37992|code|CMP.W           R0, R1,LSL#9|176-235-65-47
37996|code|NOP|0-191
37998|code|ADC.W           R2, R2, R2|66-235-2-2
38002|code|IT CS|40-191
38004|code|SUBCS.W         R0, R0, R1,LSL#9|160-235-65-32
38008|code|CMP.W           R0, R1,LSL#8|176-235-1-47
38012|code|NOP|0-191
38014|code|ADC.W           R2, R2, R2|66-235-2-2
38018|code|IT CS|40-191
38020|code|SUBCS.W         R0, R0, R1,LSL#8|160-235-1-32
38024|code|CMP.W           R0, R1,LSL#7|176-235-193-31
38028|code|NOP|0-191
38030|code|ADC.W           R2, R2, R2|66-235-2-2
38034|code|IT CS|40-191
38036|code|SUBCS.W         R0, R0, R1,LSL#7|160-235-193-16
38040|code|CMP.W           R0, R1,LSL#6|176-235-129-31
38044|code|NOP|0-191
38046|code|ADC.W           R2, R2, R2|66-235-2-2
38050|code|IT CS|40-191
38052|code|SUBCS.W         R0, R0, R1,LSL#6|160-235-129-16
38056|code|CMP.W           R0, R1,LSL#5|176-235-65-31
38060|code|NOP|0-191
38062|code|ADC.W           R2, R2, R2|66-235-2-2
38066|code|IT CS|40-191
38068|code|SUBCS.W         R0, R0, R1,LSL#5|160-235-65-16
38072|code|CMP.W           R0, R1,LSL#4|176-235-1-31
38076|code|NOP|0-191
38078|code|ADC.W           R2, R2, R2|66-235-2-2
38082|code|IT CS|40-191
38084|code|SUBCS.W         R0, R0, R1,LSL#4|160-235-1-16
38088|code|CMP.W           R0, R1,LSL#3|176-235-193-15
38092|code|NOP|0-191
38094|code|ADC.W           R2, R2, R2|66-235-2-2
38098|code|IT CS|40-191
38100|code|SUBCS.W         R0, R0, R1,LSL#3|160-235-193-0
38104|code|CMP.W           R0, R1,LSL#2|176-235-129-15
38108|code|NOP|0-191
38110|code|ADC.W           R2, R2, R2|66-235-2-2
38114|code|IT CS|40-191
38116|code|SUBCS.W         R0, R0, R1,LSL#2|160-235-129-0
38120|code|CMP.W           R0, R1,LSL#1|176-235-65-15
38124|code|NOP|0-191
38126|code|ADC.W           R2, R2, R2|66-235-2-2
38130|code|IT CS|40-191
38132|code|SUBCS.W         R0, R0, R1,LSL#1|160-235-65-0
38136|code|CMP.W           R0, R1|176-235-1-15
38140|code|NOP|0-191
38142|code|ADC.W           R2, R2, R2|66-235-2-2
38146|code|IT CS|40-191
38148|code|SUBCS.W         R0, R0, R1|160-235-1-0
38152|code|MOV             R0, R2|16-70
38154|code|BX              LR|112-71
38156|code|ITE EQ|12-191
38158|code|MOVEQ           R0, #1|1-32
38160|code|MOVNE           R0, #0|0-32
38162|code|BX              LR|112-71
38164|code|CLZ.W           R2, R1|177-250-129-242
38168|code|RSB.W           R2, R2, #0x1F|194-241-31-2
38172|code|LSR.W           R0, R0, R2|32-250-2-240
38176|code|BX              LR|112-71
38178|code|CBZ             R0, loc_9528|8-177
38180|code|MOV.W           R0, #0xFFFFFFFF|79-240-255-48
38184|code|B.W             loc_9548|0-240-14-184
38188|code|CMP             R1, #0|0-41
38190|code|BEQ             loc_9522|248-208
38192|code|PUSH.W          {R0,R1,LR}|45-233-3-64
38196|code|BL              sub_92D0|255-247-204-254
38200|code|POP.W           {R1,R2,LR}|189-232-6-64
38204|code|MUL.W           R3, R2, R0|2-251-0-243
38208|code|SUB.W           R1, R1, R3|161-235-3-1
38212|code|BX              LR|112-71
38214|data|ALIGN 4|0-191
38216|code|PUSH            {R1,LR}|2-181
38218|code|MOV.W           R0, #8; sig|79-240-8-0
38222|code|BLX             raise|255-247-126-232
38226|code|POP             {R1,PC}|2-189
38228|code|PUSH.W          {R3-R9,LR}|45-233-248-67
38232|code|MOV             R7, R0|7-70
38234|code|LDR             R6, =(off_12004 - 0x9566)|12-78
38236|code|MOV             R8, R1|136-70
38238|code|LDR             R5, =(off_12000 - 0x956C)|12-77
38240|code|MOV             R9, R2|145-70
38242|code|ADD             R6, PC; off_12004|126-68
38244|code|BLX             .init_proc|255-247-98-232
38248|code|ADD             R5, PC; off_12000|125-68
38250|code|SUBS            R6, R6, R5|118-27
38252|code|ASRS            R6, R6, #2|182-16
38254|code|BEQ             locret_9586|10-208
38256|code|SUBS            R5, #4|4-61
38258|code|MOVS            R4, #0|0-36
38260|code|ADDS            R4, #1|1-52
38262|code|LDR.W           R3, [R5,#4]!|85-248-4-63
38266|code|MOV             R0, R7|56-70
38268|code|MOV             R1, R8|65-70
38270|code|MOV             R2, R9|74-70
38272|code|BLX             R3|152-71
38274|code|CMP             R4, R6|180-66
38276|code|BNE             loc_9574|246-209
38278|code|POP.W           {R3-R9,PC}|189-232-248-131
38282|data|ALIGN 4|0-191
38284|data|DCD off_12004 - 0x9566|158-138-0-0
38288|data|DCD off_12000 - 0x956C|148-138-0-0
38292|code|BX              LR|112-71
38294|data|ALIGN 4|0-191
38296|code|PUSH            {R3,LR}|8-64-45-233
38300|code|POP             {R3,PC}|8-128-189-232
38304|data|DCB "%s: failed to read BBT, errno=%d",0xA,0|37-115-58-32-102-97-105-108-101-100-32-116-111-32-114-101-97-100-32-66-66-84-44-32-101-114-114-110-111-61-37-100-10-0
38338|data|ALIGN 4|0-0
38340|data|DCB "nftl_format",0|110-102-116-108-95-102-111-114-109-97-116-0
38352|data|DCB "Usage: %s [-ib] <mtddevice> [<start offset> [<size>]]",0xA,0|85-115-97-103-101-58-32-37-115-32-91-45-105-98-93-32-60-109-116-100-100-101-118-105-99-101-62-32-91-60-115-116-97-114-116-32-111-102-102-115-101-116-62-32-91-60-115-105-122-101-62-93-93-10-0
38407|data|ALIGN 4|0
38408|data|DCB "INFTL",0|73-78-70-84-76-0
38414|data|ALIGN 0x10|0-0
38416|data|DCB "NFTL",0|78-70-84-76-0
38421|data|ALIGN 4|0-0-0
38424|data|DCB "version 1.24 2005/11/07 11:15:13 gleixner",0|118-101-114-115-105-111-110-32-49-46-50-52-32-50-48-48-53-47-49-49-47-48-55-32-49-49-58-49-53-58-49-51-32-103-108-101-105-120-110-101-114-0
38466|data|ALIGN 4|0-0
38468|data|DCB "?hib",0|63-104-105-98-0
38473|data|ALIGN 4|0-0-0
38476|data|DCB "Open flash device",0|79-112-101-110-32-102-108-97-115-104-32-100-101-118-105-99-101-0
38494|data|ALIGN 0x10|0-0
38496|data|DCB "ioctl(MEMGETINFO)",0|105-111-99-116-108-40-77-69-77-71-69-84-73-78-70-79-41-0
38514|data|ALIGN 4|0-0
38516|data|DCB "Unrecognized Erase size, 0x%x - I'm confused",0xA,0|85-110-114-101-99-111-103-110-105-122-101-100-32-69-114-97-115-101-32-115-105-122-101-44-32-48-120-37-120-32-45-32-73-39-109-32-99-111-110-102-117-115-101-100-10-0
38562|data|ALIGN 4|0-0
38564|data|DCB "Malloc failed",0|77-97-108-108-111-99-32-102-97-105-108-101-100-0
38578|data|ALIGN 4|0-0
38580|data|DCB "Phase 1. Checking and erasing Erase Zones from 0x%08lx to 0x%08l"|80-104-97-115-101-32-49-46-32-67-104-101-99-107-105-110-103-32-97-110-100-32-101-114-97-115-105-110-103-32-69-114-97-115-101-32-90-111-110-101-115-32-102-114-111-109-32-48-120-37-48-56-108-120-32-116-111-32-48-120-37-48-56-108-120-10-0
38647|data|ALIGN 4|0
38648|data|DCB 0xD,"Skipping bad zone (factory marked) #%ld @ 0x%x",0xA,0|13-83-107-105-112-112-105-110-103-32-98-97-100-32-122-111-110-101-32-40-102-97-99-116-111-114-121-32-109-97-114-107-101-100-41-32-35-37-108-100-32-64-32-48-120-37-120-10-0
38697|data|ALIGN 4|0-0-0
38700|data|DCB 0xD,9," Erasing Zone #%ld @ 0x%x",0|13-9-32-69-114-97-115-105-110-103-32-90-111-110-101-32-35-37-108-100-32-64-32-48-120-37-120-0
38728|data|DCB ": Erase failed (%s)",0xA,0|58-32-69-114-97-115-101-32-102-97-105-108-101-100-32-40-37-115-41-10-0
38749|data|ALIGN 0x10|0-0-0
38752|data|DCB 0xD,9,"Checking Zone #%ld @ 0x%x",0|13-9-67-104-101-99-107-105-110-103-32-90-111-110-101-32-35-37-108-100-32-64-32-48-120-37-120-0
38780|data|DCB ": Block not 0xff after erase",0|58-32-66-108-111-99-107-32-110-111-116-32-48-120-102-102-32-97-102-116-101-114-32-101-114-97-115-101-0
38809|data|ALIGN 4|0-0-0
38812|data|DCB ": Block not zero after clearing",0|58-32-66-108-111-99-107-32-110-111-116-32-122-101-114-111-32-97-102-116-101-114-32-99-108-101-97-114-105-110-103-0
38844|data|DCB ": Second erase failed (%s)",0xA,0|58-32-83-101-99-111-110-100-32-101-114-97-115-101-32-102-97-105-108-101-100-32-40-37-115-41-10-0
38872|data|DCB ": Block not 0x5a after writing",0|58-32-66-108-111-99-107-32-110-111-116-32-48-120-53-97-32-97-102-116-101-114-32-119-114-105-116-105-110-103-0
38903|data|ALIGN 4|0
38904|data|DCB ": Third erase failed (%s)",0xA,0|58-32-84-104-105-114-100-32-101-114-97-115-101-32-102-97-105-108-101-100-32-40-37-115-41-10-0
38931|data|ALIGN 4|0
38932|data|DCB ": Block not 0xa5 after writing",0|58-32-66-108-111-99-107-32-110-111-116-32-48-120-97-53-32-97-102-116-101-114-32-119-114-105-116-105-110-103-0
38963|data|ALIGN 4|0
38964|data|DCB ": Fourth erase failed (%s)",0xA,0|58-32-70-111-117-114-116-104-32-101-114-97-115-101-32-102-97-105-108-101-100-32-40-37-115-41-10-0
38992|data|DCD 0x4E414E42|66-78-65-78
38996|data|DCW 0x44|68-0
38998|data|ALIGN 4|0-0
39000|data|DCD 0x4E414E41|65-78-65-78
39004|data|DCW 0x44|68-0
39006|data|ALIGN 0x10|0-0
39008|data|DCB "Phase 2.a Writing %s Media Header and Bad Unit Table",0xA,0|80-104-97-115-101-32-50-46-97-32-87-114-105-116-105-110-103-32-37-115-32-77-101-100-105-97-32-72-101-97-100-101-114-32-97-110-100-32-66-97-100-32-85-110-105-116-32-84-97-98-108-101-10-0
39062|data|ALIGN 4|0-0
39064|data|DCB "Phase 2.b Writing Spare %s Media Header and Spare Bad Unit Table"|80-104-97-115-101-32-50-46-98-32-87-114-105-116-105-110-103-32-83-112-97-114-101-32-37-115-32-77-101-100-105-97-32-72-101-97-100-101-114-32-97-110-100-32-83-112-97-114-101-32-66-97-100-32-85-110-105-116-32-84-97-98-108-101-10-0
39130|data|ALIGN 4|0-0
39132|data|DCB "Phase 3. Writing Unit Control Information to each Erase Unit",0|80-104-97-115-101-32-51-46-32-87-114-105-116-105-110-103-32-85-110-105-116-32-67-111-110-116-114-111-108-32-73-110-102-111-114-109-97-116-105-111-110-32-116-111-32-101-97-99-104-32-69-114-97-115-101-32-85-110-105-116-0
39193|data|ALIGN 4|0-0-0
39196|data|DCB "MEMWRITEOOB at %lx: %s",0xA,0|77-69-77-87-82-73-84-69-79-79-66-32-97-116-32-37-108-120-58-32-37-115-10-0
39220|data|DCB 0xD,"Skipping bad zone (RWE test failed) #%ld @ 0x%x",0xA,0|13-83-107-105-112-112-105-110-103-32-98-97-100-32-122-111-110-101-32-40-82-87-69-32-116-101-115-116-32-102-97-105-108-101-100-41-32-35-37-108-100-32-64-32-48-120-37-120-10-0
39270|data|ALIGN 4|0-0
73728|data|DCD sub_9280+1|129-146-0-0
73732|data|DCD sub_9268+1|105-146-0-0
73736|data|DCD 0|0-0-0-0
73740|data|Elf32_Dyn <1, <1>>; DT_NEEDED libc.so.6|1-0-0-0-1-0-0-0
73748|data|Elf32_Dyn <0xC, <0x862C>>; DT_INIT|12-0-0-0-44-134-0-0
73756|data|Elf32_Dyn <0xD, <0x9598>>; DT_FINI|13-0-0-0-152-149-0-0
73764|data|Elf32_Dyn <0x19, <0x12000>>; DT_INIT_ARRAY|25-0-0-0-0-32-1-0
73772|data|Elf32_Dyn <0x1B, <4>>; DT_INIT_ARRAYSZ|27-0-0-0-4-0-0-0
73780|data|Elf32_Dyn <0x1A, <0x12004>>; DT_FINI_ARRAY|26-0-0-0-4-32-1-0
73788|data|Elf32_Dyn <0x1C, <4>>; DT_FINI_ARRAYSZ|28-0-0-0-4-0-0-0
73796|data|Elf32_Dyn <0x6FFFFEF5, <0x8194>>; DT_GNU_HASH|245-254-255-111-148-129-0-0
73804|data|Elf32_Dyn <5, <0x841C>>; DT_STRTAB|5-0-0-0-28-132-0-0
73812|data|Elf32_Dyn <6, <0x826C>>; DT_SYMTAB|6-0-0-0-108-130-0-0
73820|data|Elf32_Dyn <0xA, <0xE1>>; DT_STRSZ|10-0-0-0-225-0-0-0
73828|data|Elf32_Dyn <0xB, <0x10>>; DT_SYMENT|11-0-0-0-16-0-0-0
73836|data|Elf32_Dyn <0x15, <0>>; DT_DEBUG|21-0-0-0-0-0-0-0
73844|data|Elf32_Dyn <3, <0x120F4>>; DT_PLTGOT|3-0-0-0-244-32-1-0
73852|data|Elf32_Dyn <2, <0xB8>>; DT_PLTRELSZ|2-0-0-0-184-0-0-0
73860|data|Elf32_Dyn <0x14, <0x11>>; DT_PLTREL|20-0-0-0-17-0-0-0
73868|data|Elf32_Dyn <0x17, <0x8574>>; DT_JMPREL|23-0-0-0-116-133-0-0
73876|data|Elf32_Dyn <0x11, <0x8554>>; DT_REL|17-0-0-0-84-133-0-0
73884|data|Elf32_Dyn <0x12, <0x20>>; DT_RELSZ|18-0-0-0-32-0-0-0
73892|data|Elf32_Dyn <0x13, <8>>; DT_RELENT|19-0-0-0-8-0-0-0
73900|data|Elf32_Dyn <0x6FFFFFFE, <0x8534>>; DT_VERNEED|254-255-255-111-52-133-0-0
73908|data|Elf32_Dyn <0x6FFFFFFF, <1>>; DT_VERNEEDNUM|255-255-255-111-1-0-0-0
73916|data|Elf32_Dyn <0x6FFFFFF0, <0x84FE>>; DT_VERSYM|240-255-255-111-254-132-0-0
73924|data|Elf32_Dyn <0>; DT_NULL|0-0-0-0-0-0-0-0
73932|data|ALIGN 0x10|0-0-0-0
73972|data|DCD stru_1200C|12-32-1-0
73976|data|DCD 0|0-0-0-0
73980|data|DCD 0|0-0-0-0
73984|data|DCD __imp_raise|32-64-1-0
73988|data|DCD __imp_printf|24-64-1-0
73992|data|DCD __imp_fflush|216-63-1-0
73996|data|DCD __imp_memcmp|236-63-1-0
74000|data|DCD __imp_perror|20-64-1-0
74004|data|DCD __imp_ioctl|252-63-1-0
74008|data|DCD __imp_pread64|248-63-1-0
74012|data|DCD __imp_open64|8-64-1-0
74016|data|DCD __imp_puts|4-64-1-0
74020|data|DCD __imp_malloc|28-64-1-0
74024|data|DCD __imp___libc_start_main|224-63-1-0
74028|data|DCD __imp_strerror|0-64-1-0
74032|data|DCD __imp___gmon_start__|36-64-1-0
74036|data|DCD __imp_exit|220-63-1-0
74040|data|DCD __imp_strtoul|228-63-1-0
74044|data|DCD __imp_getopt|208-63-1-0
74048|data|DCD __imp_fprintf|232-63-1-0
74052|data|DCD __imp___errno_location|240-63-1-0
74056|data|DCD __imp_memset|204-63-1-0
74060|data|DCD __imp_putchar|244-63-1-0
74064|data|DCD __imp_pwrite64|12-64-1-0
74068|data|DCD __imp_abort|212-63-1-0
74072|data|DCD __imp_close|16-64-1-0
74076|data|DCD __imp___gmon_start__|36-64-1-0
74080|data|DCD 1|1-0-0-0
74084|data|DCD 1|1-0-0-0
74088|data|% 4; Copy of shared data|255-255-255-255
74092|data|ALIGN 0x10|255-255-255-255
74096|data|% 4; Copy of shared data|255-255-255-255
74100|data|% 4; Copy of shared data|255-255-255-255
74104|data|% 1|255
74105|data|ALIGN 0x10|255-255-255-255-255-255-255
74112|data|% 4|255-255-255-255
74116|data|% 4|255-255-255-255
74120|data|% 4|255-255-255-255
74124|data|% 4|255-255-255-255
81808|data|% 4|255-255-255-255
81812|data|% 4|255-255-255-255
81816|data|% 4|255-255-255-255
81820|data|% 4|255-255-255-255
81824|data|% 4|255-255-255-255
81828|data|ALIGN 0x10|255-255-255-255-255-255-255-255-255-255-255-255
81840|data|% 4|255-255-255-255
81844|data|% 4|255-255-255-255
